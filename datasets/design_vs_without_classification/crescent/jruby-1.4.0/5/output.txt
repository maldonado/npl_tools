// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999998221035312	WITHOUT_CLASSIFICATION	1.7789646885505088E-7	DESIGN
// line 335	WITHOUT_CLASSIFICATION	0.999998638038482	WITHOUT_CLASSIFICATION	1.3619615180575739E-6	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999641118426263	WITHOUT_CLASSIFICATION	3.588815737377604E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999641118426263	WITHOUT_CLASSIFICATION	3.588815737377604E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997361315623208	WITHOUT_CLASSIFICATION	2.638684376791982E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997361315623208	WITHOUT_CLASSIFICATION	2.638684376791982E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999799433888088	WITHOUT_CLASSIFICATION	2.0056611191273013E-5	DESIGN
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999940398639018	WITHOUT_CLASSIFICATION	5.960136098176006E-6	DESIGN
// line 362	WITHOUT_CLASSIFICATION	0.9999991603574759	WITHOUT_CLASSIFICATION	8.396425241202785E-7	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.999999119708033	WITHOUT_CLASSIFICATION	8.802919671030611E-7	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999691233843625	WITHOUT_CLASSIFICATION	3.087661563743372E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999691233843625	WITHOUT_CLASSIFICATION	3.087661563743372E-5	DESIGN
// line 391	WITHOUT_CLASSIFICATION	0.9999988934206919	WITHOUT_CLASSIFICATION	1.1065793080109363E-6	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999752760220756	WITHOUT_CLASSIFICATION	2.4723977924367983E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999752760220756	WITHOUT_CLASSIFICATION	2.4723977924367983E-5	DESIGN
/* ^D */	WITHOUT_CLASSIFICATION	0.9999497642677442	WITHOUT_CLASSIFICATION	5.0235732255724314E-5	DESIGN
/* ^Z */	WITHOUT_CLASSIFICATION	0.999953915894732	WITHOUT_CLASSIFICATION	4.608410526802433E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999471777295905	WITHOUT_CLASSIFICATION	5.282227040957562E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999471777295905	WITHOUT_CLASSIFICATION	5.282227040957562E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999471777295905	WITHOUT_CLASSIFICATION	5.282227040957562E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999471777295905	WITHOUT_CLASSIFICATION	5.282227040957562E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999471777295905	WITHOUT_CLASSIFICATION	5.282227040957562E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999471777295905	WITHOUT_CLASSIFICATION	5.282227040957562E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999471777295905	WITHOUT_CLASSIFICATION	5.282227040957562E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997107971082255	WITHOUT_CLASSIFICATION	2.8920289177446033E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997107971082255	WITHOUT_CLASSIFICATION	2.8920289177446033E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997107971082255	WITHOUT_CLASSIFICATION	2.8920289177446033E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997107971082255	WITHOUT_CLASSIFICATION	2.8920289177446033E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997107971082255	WITHOUT_CLASSIFICATION	2.8920289177446033E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997107971082255	WITHOUT_CLASSIFICATION	2.8920289177446033E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997107971082255	WITHOUT_CLASSIFICATION	2.8920289177446033E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999958950758043	WITHOUT_CLASSIFICATION	4.1049241957054476E-5	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999958950758043	WITHOUT_CLASSIFICATION	4.1049241957054476E-5	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999958950758043	WITHOUT_CLASSIFICATION	4.1049241957054476E-5	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999958950758043	WITHOUT_CLASSIFICATION	4.1049241957054476E-5	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999958950758043	WITHOUT_CLASSIFICATION	4.1049241957054476E-5	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999958950758043	WITHOUT_CLASSIFICATION	4.1049241957054476E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.999966092991844	WITHOUT_CLASSIFICATION	3.390700815596959E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.999966092991844	WITHOUT_CLASSIFICATION	3.390700815596959E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.999966092991844	WITHOUT_CLASSIFICATION	3.390700815596959E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.999966092991844	WITHOUT_CLASSIFICATION	3.390700815596959E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.999966092991844	WITHOUT_CLASSIFICATION	3.390700815596959E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.999966092991844	WITHOUT_CLASSIFICATION	3.390700815596959E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999728494652002	WITHOUT_CLASSIFICATION	2.715053479980644E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999728494652002	WITHOUT_CLASSIFICATION	2.715053479980644E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999728494652002	WITHOUT_CLASSIFICATION	2.715053479980644E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999728494652002	WITHOUT_CLASSIFICATION	2.715053479980644E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999728494652002	WITHOUT_CLASSIFICATION	2.715053479980644E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999728494652002	WITHOUT_CLASSIFICATION	2.715053479980644E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999728494652002	WITHOUT_CLASSIFICATION	2.715053479980644E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999589243913355	WITHOUT_CLASSIFICATION	4.107560866450691E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999589243913355	WITHOUT_CLASSIFICATION	4.107560866450691E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999589243913355	WITHOUT_CLASSIFICATION	4.107560866450691E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999589243913355	WITHOUT_CLASSIFICATION	4.107560866450691E-5	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9991109588673427	WITHOUT_CLASSIFICATION	8.89041132657341E-4	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9991109588673427	WITHOUT_CLASSIFICATION	8.89041132657341E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999176822733457	WITHOUT_CLASSIFICATION	8.231772665434223E-5	DESIGN
// return result	WITHOUT_CLASSIFICATION	0.9999940539078902	WITHOUT_CLASSIFICATION	5.946092109832803E-6	DESIGN
// name	WITHOUT_CLASSIFICATION	0.9999600858962442	WITHOUT_CLASSIFICATION	3.991410375575133E-5	DESIGN
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999999680863676	WITHOUT_CLASSIFICATION	3.191363246196069E-8	DESIGN
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999972734266932	WITHOUT_CLASSIFICATION	2.7265733068624322E-6	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999969441400778	WITHOUT_CLASSIFICATION	3.055859922123456E-6	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999969441400778	WITHOUT_CLASSIFICATION	3.055859922123456E-6	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999969441400778	WITHOUT_CLASSIFICATION	3.055859922123456E-6	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999969441400778	WITHOUT_CLASSIFICATION	3.055859922123456E-6	DESIGN
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999918117944723	WITHOUT_CLASSIFICATION	8.188205527784148E-6	DESIGN
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.999999455192438	WITHOUT_CLASSIFICATION	5.448075619748553E-7	DESIGN
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999882472551691	WITHOUT_CLASSIFICATION	1.1752744830826793E-5	DESIGN
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9990989363758519	WITHOUT_CLASSIFICATION	9.010636241480942E-4	DESIGN
// Version information:	WITHOUT_CLASSIFICATION	0.9999932181042315	WITHOUT_CLASSIFICATION	6.7818957684304E-6	DESIGN
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999994667741162	WITHOUT_CLASSIFICATION	5.332258838462003E-7	DESIGN
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.999998130580076	WITHOUT_CLASSIFICATION	1.8694199240003514E-6	DESIGN
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999999987020596	WITHOUT_CLASSIFICATION	1.2979404418512489E-9	DESIGN
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9995981233914497	WITHOUT_CLASSIFICATION	4.018766085502634E-4	DESIGN
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999809860812905	WITHOUT_CLASSIFICATION	1.901391870945342E-5	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999972832175757	WITHOUT_CLASSIFICATION	2.7167824241858286E-6	DESIGN
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999999876677046	WITHOUT_CLASSIFICATION	1.2332295429596406E-8	DESIGN
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999957414319464	WITHOUT_CLASSIFICATION	4.2585680536821345E-6	DESIGN
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9878039370041969	WITHOUT_CLASSIFICATION	0.012196062995803015	DESIGN
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999977589342413	WITHOUT_CLASSIFICATION	2.2410657587772024E-6	DESIGN
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999999802477431	WITHOUT_CLASSIFICATION	1.9752256938742835E-8	DESIGN
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9951868026560164	DESIGN	0.004813197343983484	WITHOUT_CLASSIFICATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999969441400778	WITHOUT_CLASSIFICATION	3.055859922123456E-6	DESIGN
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999992579676618	WITHOUT_CLASSIFICATION	7.420323382411551E-7	DESIGN
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999999672703249	WITHOUT_CLASSIFICATION	3.272967504991463E-8	DESIGN
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999985729594189	WITHOUT_CLASSIFICATION	1.427040581245712E-6	DESIGN
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9918225490340271	WITHOUT_CLASSIFICATION	0.00817745096597287	DESIGN
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999490717145031	WITHOUT_CLASSIFICATION	5.092828549693689E-5	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999934109530191	WITHOUT_CLASSIFICATION	6.589046980855223E-6	DESIGN
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999997641386454	WITHOUT_CLASSIFICATION	2.3586135466057133E-7	DESIGN
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999995276242923	WITHOUT_CLASSIFICATION	4.723757077088482E-7	DESIGN
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9369196566455544	DESIGN	0.06308034335444547	WITHOUT_CLASSIFICATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999997303033316	WITHOUT_CLASSIFICATION	2.696966684719612E-7	DESIGN
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.875845631376743	WITHOUT_CLASSIFICATION	0.12415436862325689	DESIGN
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999962675020593	WITHOUT_CLASSIFICATION	3.732497940709281E-6	DESIGN
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9939004917804766	WITHOUT_CLASSIFICATION	0.006099508219523435	DESIGN
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999903731370131	WITHOUT_CLASSIFICATION	9.626862986882509E-6	DESIGN
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999626576686949	WITHOUT_CLASSIFICATION	3.734233130504741E-5	DESIGN
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999960430386148	WITHOUT_CLASSIFICATION	3.9569613852980035E-6	DESIGN
// RubySignal	WITHOUT_CLASSIFICATION	0.999944905416797	WITHOUT_CLASSIFICATION	5.509458320291098E-5	DESIGN
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.999999974916479	WITHOUT_CLASSIFICATION	2.5083521035128532E-8	DESIGN
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999998922001277	WITHOUT_CLASSIFICATION	1.0779987229226168E-7	DESIGN
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999987399448	WITHOUT_CLASSIFICATION	1.2600552000490645E-6	DESIGN
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9970820322936562	WITHOUT_CLASSIFICATION	0.0029179677063436884	DESIGN
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999678922374141	WITHOUT_CLASSIFICATION	3.2107762585939324E-5	DESIGN
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.999993838779302	WITHOUT_CLASSIFICATION	6.161220698031729E-6	DESIGN
//io.finish();	WITHOUT_CLASSIFICATION	0.9999936987690085	WITHOUT_CLASSIFICATION	6.301230991579336E-6	DESIGN
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9996741036981408	WITHOUT_CLASSIFICATION	3.2589630185918256E-4	DESIGN
// hmm...	WITHOUT_CLASSIFICATION	0.9997868547923193	WITHOUT_CLASSIFICATION	2.1314520768067792E-4	DESIGN
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999910637260924	WITHOUT_CLASSIFICATION	8.936273907682723E-6	DESIGN
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999943527466404	WITHOUT_CLASSIFICATION	5.647253359584405E-6	DESIGN
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999993088805825	WITHOUT_CLASSIFICATION	6.911194175461062E-7	DESIGN
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999843209447097	WITHOUT_CLASSIFICATION	1.5679055290358104E-5	DESIGN
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999997645394292	WITHOUT_CLASSIFICATION	2.354605708345027E-7	DESIGN
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999237315148611	WITHOUT_CLASSIFICATION	7.626848513896726E-5	DESIGN
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9992252330878297	WITHOUT_CLASSIFICATION	7.747669121703159E-4	DESIGN
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999997953880663	WITHOUT_CLASSIFICATION	2.0461193386575518E-7	DESIGN
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999958954573775	WITHOUT_CLASSIFICATION	4.1045426225397456E-6	DESIGN
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999989191932794	WITHOUT_CLASSIFICATION	1.080806720626888E-6	DESIGN
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.999874415702208	WITHOUT_CLASSIFICATION	1.255842977918886E-4	DESIGN
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9903033160239627	WITHOUT_CLASSIFICATION	0.00969668397603722	DESIGN
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999878428918634	WITHOUT_CLASSIFICATION	1.2157108136660351E-5	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999142612978897	WITHOUT_CLASSIFICATION	8.573870211022831E-5	DESIGN
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999960425852715	WITHOUT_CLASSIFICATION	3.957414728453833E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999737062062	WITHOUT_CLASSIFICATION	2.629379379289426E-7	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999628841698074	WITHOUT_CLASSIFICATION	3.711583019261572E-5	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9996773904225521	WITHOUT_CLASSIFICATION	3.226095774480002E-4	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9996773904225521	WITHOUT_CLASSIFICATION	3.226095774480002E-4	DESIGN
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999097295150691	WITHOUT_CLASSIFICATION	9.027048493091701E-5	DESIGN
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999992157690895	WITHOUT_CLASSIFICATION	7.842309104817615E-7	DESIGN
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9994038901728706	WITHOUT_CLASSIFICATION	5.961098271295145E-4	DESIGN
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999999690889755	WITHOUT_CLASSIFICATION	3.0911024448818796E-8	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.5765104242901817	WITHOUT_CLASSIFICATION	0.4234895757098183	DESIGN
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9945850378278022	WITHOUT_CLASSIFICATION	0.005414962172197854	DESIGN
// ???	WITHOUT_CLASSIFICATION	0.9989720618998312	WITHOUT_CLASSIFICATION	0.001027938100168823	DESIGN
// PID	WITHOUT_CLASSIFICATION	0.9999623830442578	WITHOUT_CLASSIFICATION	3.7616955742176394E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999737062062	WITHOUT_CLASSIFICATION	2.629379379289426E-7	DESIGN
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999992307571482	WITHOUT_CLASSIFICATION	7.692428518216753E-7	DESIGN
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999415911695201	WITHOUT_CLASSIFICATION	5.8408830479874445E-5	DESIGN
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999639633732639	WITHOUT_CLASSIFICATION	3.6036626736104094E-5	DESIGN
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.999999998711168	WITHOUT_CLASSIFICATION	1.288832043540331E-9	DESIGN
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999999843767964	WITHOUT_CLASSIFICATION	1.562320363254164E-8	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999917439949	WITHOUT_CLASSIFICATION	8.256005026979455E-9	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999917439949	WITHOUT_CLASSIFICATION	8.256005026979455E-9	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999917439949	WITHOUT_CLASSIFICATION	8.256005026979455E-9	DESIGN
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9998673380844495	WITHOUT_CLASSIFICATION	1.326619155505225E-4	DESIGN
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999999976323156	WITHOUT_CLASSIFICATION	2.367684311601683E-9	DESIGN
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999999692191633	WITHOUT_CLASSIFICATION	3.0780836526326385E-8	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9028552472323329	WITHOUT_CLASSIFICATION	0.09714475276766708	DESIGN
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.5330959024952864	DESIGN	0.4669040975047135	WITHOUT_CLASSIFICATION
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999999831061958	WITHOUT_CLASSIFICATION	1.6893804244572908E-8	DESIGN
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9960172086768189	WITHOUT_CLASSIFICATION	0.00398279132318107	DESIGN
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999999925784974	WITHOUT_CLASSIFICATION	7.421502721611133E-9	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999823724625412	WITHOUT_CLASSIFICATION	1.762753745879535E-5	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999823724625412	WITHOUT_CLASSIFICATION	1.762753745879535E-5	DESIGN
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999509859959405	WITHOUT_CLASSIFICATION	4.901400405961677E-5	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999999662545134	WITHOUT_CLASSIFICATION	3.374548663367474E-8	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999976008703731	WITHOUT_CLASSIFICATION	2.399129626816203E-6	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999976008703731	WITHOUT_CLASSIFICATION	2.399129626816203E-6	DESIGN
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999999932927033	WITHOUT_CLASSIFICATION	6.707296750531766E-9	DESIGN
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999981911570207	WITHOUT_CLASSIFICATION	1.808842979250558E-6	DESIGN
/* root fiber */	WITHOUT_CLASSIFICATION	0.9998699323717612	WITHOUT_CLASSIFICATION	1.3006762823874826E-4	DESIGN
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999999994381583	WITHOUT_CLASSIFICATION	5.61841722471101E-10	DESIGN
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999997370856444	WITHOUT_CLASSIFICATION	2.6291435561346736E-7	DESIGN
// extras flag	WITHOUT_CLASSIFICATION	0.999999414355941	WITHOUT_CLASSIFICATION	5.856440589788199E-7	DESIGN
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999885734759585	WITHOUT_CLASSIFICATION	1.1426524041476614E-5	DESIGN
// ...nothing	WITHOUT_CLASSIFICATION	0.9999390410363542	WITHOUT_CLASSIFICATION	6.095896364592178E-5	DESIGN
// utility method	WITHOUT_CLASSIFICATION	0.9994832047379334	WITHOUT_CLASSIFICATION	5.167952620666699E-4	DESIGN
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999985789641929	WITHOUT_CLASSIFICATION	1.421035807195282E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999737062062	WITHOUT_CLASSIFICATION	2.629379379289426E-7	DESIGN
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999984041296033	WITHOUT_CLASSIFICATION	1.59587039673712E-6	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999987532565526	WITHOUT_CLASSIFICATION	1.2467434472892395E-6	DESIGN
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999982445030562	WITHOUT_CLASSIFICATION	1.7554969438321603E-6	DESIGN
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9916650912913682	WITHOUT_CLASSIFICATION	0.008334908708631924	DESIGN
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9995501332543626	WITHOUT_CLASSIFICATION	4.49866745637355E-4	DESIGN
// MRI does it!	WITHOUT_CLASSIFICATION	0.9995870405376219	WITHOUT_CLASSIFICATION	4.1295946237806136E-4	DESIGN
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9992000465633133	WITHOUT_CLASSIFICATION	7.999534366868282E-4	DESIGN
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9995271852199357	WITHOUT_CLASSIFICATION	4.7281478006427696E-4	DESIGN
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999824340437085	WITHOUT_CLASSIFICATION	1.756595629150197E-5	DESIGN
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9493173381174597	WITHOUT_CLASSIFICATION	0.05068266188254048	DESIGN
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999712864039552	WITHOUT_CLASSIFICATION	2.871359604484676E-5	DESIGN
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999438860850128	WITHOUT_CLASSIFICATION	5.611391498713309E-5	DESIGN
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999916776265996	WITHOUT_CLASSIFICATION	8.3223734004543E-6	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999570053357433	WITHOUT_CLASSIFICATION	4.299466425670802E-5	DESIGN
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9995741772753175	WITHOUT_CLASSIFICATION	4.258227246825789E-4	DESIGN
// recheck condition	WITHOUT_CLASSIFICATION	0.9999164616907876	WITHOUT_CLASSIFICATION	8.353830921240999E-5	DESIGN
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.999998105978863	WITHOUT_CLASSIFICATION	1.894021137111203E-6	DESIGN
// Construct key services	WITHOUT_CLASSIFICATION	0.9999334086833769	WITHOUT_CLASSIFICATION	6.659131662309185E-5	DESIGN
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999974218117973	WITHOUT_CLASSIFICATION	2.578188202715555E-6	DESIGN
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.999997781779723	WITHOUT_CLASSIFICATION	2.2182202770114574E-6	DESIGN
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999997614833366	WITHOUT_CLASSIFICATION	2.3851666347643106E-7	DESIGN
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999939233787839	WITHOUT_CLASSIFICATION	6.076621216137292E-6	DESIGN
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999997076827423	WITHOUT_CLASSIFICATION	2.9231725776896395E-7	DESIGN
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9998234157092174	WITHOUT_CLASSIFICATION	1.7658429078254645E-4	DESIGN
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999986380649755	WITHOUT_CLASSIFICATION	1.3619350245460892E-6	DESIGN
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.999998794810849	WITHOUT_CLASSIFICATION	1.2051891510533155E-6	DESIGN
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9990263972860232	WITHOUT_CLASSIFICATION	9.73602713976698E-4	DESIGN
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999948624998275	WITHOUT_CLASSIFICATION	5.137500172543839E-6	DESIGN
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999999906789858	WITHOUT_CLASSIFICATION	9.321014231754718E-9	DESIGN
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999999299710229	WITHOUT_CLASSIFICATION	7.002897711236941E-8	DESIGN
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9995407159030578	WITHOUT_CLASSIFICATION	4.5928409694220737E-4	DESIGN
// determine spacing	WITHOUT_CLASSIFICATION	0.9997483451504119	WITHOUT_CLASSIFICATION	2.5165484958804106E-4	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9985619034189619	WITHOUT_CLASSIFICATION	0.0014380965810380953	DESIGN
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999967349760226	WITHOUT_CLASSIFICATION	3.2650239773345544E-6	DESIGN
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.999946402571938	WITHOUT_CLASSIFICATION	5.3597428061997444E-5	DESIGN
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9979634330903607	WITHOUT_CLASSIFICATION	0.002036566909639179	DESIGN
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999284630729312	WITHOUT_CLASSIFICATION	7.153692706880539E-5	DESIGN
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999995294371907	WITHOUT_CLASSIFICATION	4.705628093678845E-7	DESIGN
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999996460845193	WITHOUT_CLASSIFICATION	3.539154806139967E-7	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9992537613836715	WITHOUT_CLASSIFICATION	7.462386163285786E-4	DESIGN
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999999207683152	WITHOUT_CLASSIFICATION	7.923168485875417E-8	DESIGN
// Default objects	WITHOUT_CLASSIFICATION	0.9999999835723802	WITHOUT_CLASSIFICATION	1.642761987837233E-8	DESIGN
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999990552503365	WITHOUT_CLASSIFICATION	9.447496634096724E-7	DESIGN
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999906114213851	WITHOUT_CLASSIFICATION	9.388578615005173E-6	DESIGN
// Java support	WITHOUT_CLASSIFICATION	0.9999960053437235	WITHOUT_CLASSIFICATION	3.994656276539912E-6	DESIGN
// Parser stats	WITHOUT_CLASSIFICATION	0.9999985548100934	WITHOUT_CLASSIFICATION	1.4451899065621935E-6	DESIGN
// Compilation	WITHOUT_CLASSIFICATION	0.9999964900543296	WITHOUT_CLASSIFICATION	3.5099456703616817E-6	DESIGN
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999915084344592	WITHOUT_CLASSIFICATION	8.49156554080106E-6	DESIGN
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999680205453946	WITHOUT_CLASSIFICATION	3.197945460535016E-5	DESIGN
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999997009004377	WITHOUT_CLASSIFICATION	2.9909956227122527E-7	DESIGN
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999967844369849	WITHOUT_CLASSIFICATION	3.2155630151206255E-6	DESIGN
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9984349281820758	WITHOUT_CLASSIFICATION	0.0015650718179242402	DESIGN
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999992488792168	WITHOUT_CLASSIFICATION	7.511207832328237E-7	DESIGN
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999996800789931	WITHOUT_CLASSIFICATION	3.199210069092586E-7	DESIGN
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9991513052101576	WITHOUT_CLASSIFICATION	8.486947898422554E-4	DESIGN
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9440443397253481	DESIGN	0.055955660274651965	WITHOUT_CLASSIFICATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.999983495630524	WITHOUT_CLASSIFICATION	1.6504369475922245E-5	DESIGN
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999998681065628	WITHOUT_CLASSIFICATION	1.318934371402965E-7	DESIGN
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999999671668391	WITHOUT_CLASSIFICATION	3.2833160837080606E-8	DESIGN
// default options	WITHOUT_CLASSIFICATION	0.9999993953095985	WITHOUT_CLASSIFICATION	6.046904016393544E-7	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999837713774093	WITHOUT_CLASSIFICATION	1.6228622590673577E-5	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999837713774093	WITHOUT_CLASSIFICATION	1.6228622590673577E-5	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999514889931853	WITHOUT_CLASSIFICATION	4.851100681468451E-5	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999514889931853	WITHOUT_CLASSIFICATION	4.851100681468451E-5	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999601909173167	WITHOUT_CLASSIFICATION	3.9809082683302036E-5	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999601909173167	WITHOUT_CLASSIFICATION	3.9809082683302036E-5	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9999376052729378	WITHOUT_CLASSIFICATION	6.239472706213158E-5	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9999376052729378	WITHOUT_CLASSIFICATION	6.239472706213158E-5	DESIGN
// long name option	WITHOUT_CLASSIFICATION	0.9999998995423638	WITHOUT_CLASSIFICATION	1.0045763625599117E-7	DESIGN
// conversion	WITHOUT_CLASSIFICATION	0.9999996081078966	WITHOUT_CLASSIFICATION	3.918921035166472E-7	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999634902291462	WITHOUT_CLASSIFICATION	3.6509770853845354E-5	DESIGN
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999952802959621	WITHOUT_CLASSIFICATION	4.719704038016228E-6	DESIGN
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999895125944106	WITHOUT_CLASSIFICATION	1.048740558945163E-5	DESIGN
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999993583760695	WITHOUT_CLASSIFICATION	6.41623930616629E-7	DESIGN
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999801799805574	WITHOUT_CLASSIFICATION	1.9820019442532145E-5	DESIGN
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999994334201298	WITHOUT_CLASSIFICATION	5.665798701461086E-7	DESIGN
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999854977779237	WITHOUT_CLASSIFICATION	1.4502222076268454E-5	DESIGN
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999959956190393	WITHOUT_CLASSIFICATION	4.004380960661336E-6	DESIGN
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999846270138026	WITHOUT_CLASSIFICATION	1.5372986197359173E-5	DESIGN
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9993131832943957	WITHOUT_CLASSIFICATION	6.868167056043599E-4	DESIGN
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.999983245606186	WITHOUT_CLASSIFICATION	1.6754393814054025E-5	DESIGN
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999999136055643	WITHOUT_CLASSIFICATION	8.639443582846783E-8	DESIGN
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999956408055394	WITHOUT_CLASSIFICATION	4.359194460684335E-6	DESIGN
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999768333548891	WITHOUT_CLASSIFICATION	2.316664511085661E-5	DESIGN
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999999314792232	WITHOUT_CLASSIFICATION	6.852077681496336E-8	DESIGN
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999889912900398	WITHOUT_CLASSIFICATION	1.1008709960066358E-5	DESIGN
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9998532018298276	WITHOUT_CLASSIFICATION	1.4679817017232896E-4	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9078095325649329	DESIGN	0.09219046743506712	WITHOUT_CLASSIFICATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.999998274342368	WITHOUT_CLASSIFICATION	1.725657632020488E-6	DESIGN
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999988702974557	WITHOUT_CLASSIFICATION	1.1297025443422952E-6	DESIGN
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999800476266726	WITHOUT_CLASSIFICATION	1.9952373327312506E-5	DESIGN
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.999973458835561	WITHOUT_CLASSIFICATION	2.6541164439050395E-5	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999977179695413	WITHOUT_CLASSIFICATION	2.2820304587320017E-6	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999985932599379	WITHOUT_CLASSIFICATION	1.4067400621989668E-6	DESIGN
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999907915381682	WITHOUT_CLASSIFICATION	9.208461831756666E-6	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999976238226383	WITHOUT_CLASSIFICATION	2.3761773617163465E-6	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999976238226383	WITHOUT_CLASSIFICATION	2.3761773617163465E-6	DESIGN
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999331049303674	WITHOUT_CLASSIFICATION	6.689506963267261E-5	DESIGN
// string given	WITHOUT_CLASSIFICATION	0.9999890639239275	WITHOUT_CLASSIFICATION	1.0936076072562287E-5	DESIGN
// hash given	WITHOUT_CLASSIFICATION	0.9999382087338624	WITHOUT_CLASSIFICATION	6.179126613761124E-5	DESIGN
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999262394229642	WITHOUT_CLASSIFICATION	7.376057703581976E-5	DESIGN
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999924932995463	WITHOUT_CLASSIFICATION	7.506700453611894E-6	DESIGN
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9998501743592495	WITHOUT_CLASSIFICATION	1.4982564075048123E-4	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9996814562317032	WITHOUT_CLASSIFICATION	3.185437682967204E-4	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9996814562317032	WITHOUT_CLASSIFICATION	3.185437682967204E-4	DESIGN
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999629962808249	WITHOUT_CLASSIFICATION	3.700371917524519E-5	DESIGN
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9971247440353453	DESIGN	0.002875255964654628	WITHOUT_CLASSIFICATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9992810368519527	WITHOUT_CLASSIFICATION	7.189631480472613E-4	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9992810368519527	WITHOUT_CLASSIFICATION	7.189631480472613E-4	DESIGN
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999995341766127	WITHOUT_CLASSIFICATION	4.65823387381833E-7	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999991318509608	WITHOUT_CLASSIFICATION	8.681490392424504E-7	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999991318509608	WITHOUT_CLASSIFICATION	8.681490392424504E-7	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9999650890196154	WITHOUT_CLASSIFICATION	3.4910980384452815E-5	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9999650890196154	WITHOUT_CLASSIFICATION	3.4910980384452815E-5	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999924981532906	WITHOUT_CLASSIFICATION	7.5018467094022736E-6	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999924981532906	WITHOUT_CLASSIFICATION	7.5018467094022736E-6	DESIGN
// QTRUE	WITHOUT_CLASSIFICATION	0.9999385333170228	WITHOUT_CLASSIFICATION	6.146668297719122E-5	DESIGN
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9994342048843473	WITHOUT_CLASSIFICATION	5.657951156527868E-4	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999937963926704	WITHOUT_CLASSIFICATION	6.20360732960645E-6	DESIGN
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999993619128035	WITHOUT_CLASSIFICATION	6.380871965218845E-7	DESIGN
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999968493734942	WITHOUT_CLASSIFICATION	3.1506265059041707E-6	DESIGN
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999980832545872	WITHOUT_CLASSIFICATION	1.9167454127896085E-6	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999255879519735	WITHOUT_CLASSIFICATION	7.441204802643961E-5	DESIGN
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999811949145725	WITHOUT_CLASSIFICATION	1.880508542756834E-5	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999255879519735	WITHOUT_CLASSIFICATION	7.441204802643961E-5	DESIGN
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.999899356543573	WITHOUT_CLASSIFICATION	1.0064345642709503E-4	DESIGN
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999968939999231	WITHOUT_CLASSIFICATION	3.1060000770467314E-6	DESIGN
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999996569284106	WITHOUT_CLASSIFICATION	3.430715893119712E-7	DESIGN
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999999352321292	WITHOUT_CLASSIFICATION	6.476787093505876E-8	DESIGN
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999960106661303	WITHOUT_CLASSIFICATION	3.989333869719352E-6	DESIGN
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9998526663093686	WITHOUT_CLASSIFICATION	1.4733369063138613E-4	DESIGN
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999989661574299	WITHOUT_CLASSIFICATION	1.0338425700744256E-6	DESIGN
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999905495399554	WITHOUT_CLASSIFICATION	9.450460044636533E-6	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999992670944179	WITHOUT_CLASSIFICATION	7.32905582033803E-7	DESIGN
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999435899134852	WITHOUT_CLASSIFICATION	5.6410086514935275E-5	DESIGN
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999491992355986	WITHOUT_CLASSIFICATION	5.0800764401526344E-5	DESIGN
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999999251453607	WITHOUT_CLASSIFICATION	7.485463917242613E-8	DESIGN
// file not given	WITHOUT_CLASSIFICATION	0.999998394667927	WITHOUT_CLASSIFICATION	1.6053320730791013E-6	DESIGN
// string to eval	WITHOUT_CLASSIFICATION	0.9999943186410772	WITHOUT_CLASSIFICATION	5.681358922862685E-6	DESIGN
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999969324005743	WITHOUT_CLASSIFICATION	3.067599425708196E-6	DESIGN
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999999551695905	WITHOUT_CLASSIFICATION	4.4830409532506645E-8	DESIGN
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999811407763697	WITHOUT_CLASSIFICATION	1.8859223630315838E-5	DESIGN
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999997694710897	WITHOUT_CLASSIFICATION	2.3052891020475397E-7	DESIGN
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999993228953987	WITHOUT_CLASSIFICATION	6.771046012897612E-7	DESIGN
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999910355016672	WITHOUT_CLASSIFICATION	8.964498332860885E-6	DESIGN
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999497029830977	WITHOUT_CLASSIFICATION	5.0297016902175294E-5	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.99999981516939	WITHOUT_CLASSIFICATION	1.8483061006460867E-7	DESIGN
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999999923707185	WITHOUT_CLASSIFICATION	7.629281565069988E-9	DESIGN
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999923794111325	WITHOUT_CLASSIFICATION	7.620588867571116E-6	DESIGN
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999999485969022	WITHOUT_CLASSIFICATION	5.1403097666773174E-8	DESIGN
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999871385965018	WITHOUT_CLASSIFICATION	1.2861403498260282E-5	DESIGN
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999994873427275	WITHOUT_CLASSIFICATION	5.126572724961532E-7	DESIGN
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999997230598354	WITHOUT_CLASSIFICATION	2.769401645869721E-7	DESIGN
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999998807231039	WITHOUT_CLASSIFICATION	1.192768961380361E-7	DESIGN
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999999325583335	WITHOUT_CLASSIFICATION	6.744166644616986E-8	DESIGN
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999963497965484	WITHOUT_CLASSIFICATION	3.650203451566437E-6	DESIGN
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999997525022	WITHOUT_CLASSIFICATION	2.474978503235876E-10	DESIGN
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999902476571837	WITHOUT_CLASSIFICATION	9.75234281621813E-6	DESIGN
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999933901626247	WITHOUT_CLASSIFICATION	6.609837375314112E-6	DESIGN
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999999631524182	WITHOUT_CLASSIFICATION	3.684758184366775E-8	DESIGN
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999995909601517	WITHOUT_CLASSIFICATION	4.09039848283757E-7	DESIGN
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999999042925113	WITHOUT_CLASSIFICATION	9.570748864140574E-8	DESIGN
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999992421266592	WITHOUT_CLASSIFICATION	7.578733406679787E-7	DESIGN
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999998188345437	WITHOUT_CLASSIFICATION	1.8116545616375098E-7	DESIGN
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999979306703735	WITHOUT_CLASSIFICATION	2.0693296265845793E-6	DESIGN
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999990050639616	WITHOUT_CLASSIFICATION	9.949360385123773E-7	DESIGN
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999983392489	WITHOUT_CLASSIFICATION	1.6607510173279525E-9	DESIGN
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999999761725972	WITHOUT_CLASSIFICATION	2.382740285778101E-8	DESIGN
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999997742255012	WITHOUT_CLASSIFICATION	2.2577449880520847E-7	DESIGN
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999999902067416	WITHOUT_CLASSIFICATION	9.793258377769559E-9	DESIGN
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999996916311833	WITHOUT_CLASSIFICATION	3.083688167103333E-7	DESIGN
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999998667074359	WITHOUT_CLASSIFICATION	1.3329256403842105E-7	DESIGN
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999990390072573	WITHOUT_CLASSIFICATION	9.609927426989181E-7	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999943235981301	WITHOUT_CLASSIFICATION	5.6764018698673E-6	DESIGN
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9685926163898182	WITHOUT_CLASSIFICATION	0.03140738361018172	DESIGN
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999370014468595	WITHOUT_CLASSIFICATION	6.299855314053833E-5	DESIGN
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.999998712021685	WITHOUT_CLASSIFICATION	1.287978315002893E-6	DESIGN
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999803448439905	WITHOUT_CLASSIFICATION	1.9655156009546072E-5	DESIGN
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.999935384107118	WITHOUT_CLASSIFICATION	6.461589288205013E-5	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999978461484733	WITHOUT_CLASSIFICATION	2.153851526645738E-6	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999978461484733	WITHOUT_CLASSIFICATION	2.153851526645738E-6	DESIGN
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999842982988577	WITHOUT_CLASSIFICATION	1.5701701142273138E-5	DESIGN
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.999965892698715	WITHOUT_CLASSIFICATION	3.4107301284976734E-5	DESIGN
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9993674922492893	WITHOUT_CLASSIFICATION	6.325077507105748E-4	DESIGN
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999984986769287	WITHOUT_CLASSIFICATION	1.501323071231245E-6	DESIGN
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.999999978249641	WITHOUT_CLASSIFICATION	2.1750358885379778E-8	DESIGN
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999998004864853	WITHOUT_CLASSIFICATION	1.9951351473564497E-7	DESIGN
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999979557436186	WITHOUT_CLASSIFICATION	2.044256381482499E-6	DESIGN
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999994622235965	WITHOUT_CLASSIFICATION	5.377764035102912E-7	DESIGN
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9998580085705812	WITHOUT_CLASSIFICATION	1.4199142941878208E-4	DESIGN
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999994627420025	WITHOUT_CLASSIFICATION	5.372579974858634E-7	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999806900478135	WITHOUT_CLASSIFICATION	1.9309952186404774E-5	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999806900478135	WITHOUT_CLASSIFICATION	1.9309952186404774E-5	DESIGN
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9604678681596117	DESIGN	0.03953213184038831	WITHOUT_CLASSIFICATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.999858383213985	WITHOUT_CLASSIFICATION	1.4161678601490207E-4	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999999998185213	WITHOUT_CLASSIFICATION	1.8147870669540825E-10	DESIGN
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999999517117116	WITHOUT_CLASSIFICATION	4.8288288371221296E-8	DESIGN
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.999999995957071	WITHOUT_CLASSIFICATION	4.042928918823064E-9	DESIGN
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999998613322753	WITHOUT_CLASSIFICATION	1.3866772479359542E-7	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999475497722	WITHOUT_CLASSIFICATION	5.245022772112757E-8	DESIGN
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999999398783684	WITHOUT_CLASSIFICATION	6.012163153094587E-8	DESIGN
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999988930547853	WITHOUT_CLASSIFICATION	1.1069452147597331E-6	DESIGN
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999795552107108	WITHOUT_CLASSIFICATION	2.0444789289154074E-5	DESIGN
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999982195015397	WITHOUT_CLASSIFICATION	1.7804984603036862E-6	DESIGN
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.999998612724951	WITHOUT_CLASSIFICATION	1.387275048958914E-6	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999503040203263	WITHOUT_CLASSIFICATION	4.96959796737369E-5	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999503040203263	WITHOUT_CLASSIFICATION	4.96959796737369E-5	DESIGN
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.999979485046888	WITHOUT_CLASSIFICATION	2.051495311186492E-5	DESIGN
// Should we do anything?	WITHOUT_CLASSIFICATION	0.7586176864003944	DESIGN	0.24138231359960552	WITHOUT_CLASSIFICATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9997180849946613	WITHOUT_CLASSIFICATION	2.819150053387128E-4	DESIGN
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999988227735382	WITHOUT_CLASSIFICATION	1.1772264618059075E-6	DESIGN
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.99803293480592	WITHOUT_CLASSIFICATION	0.0019670651940799522	DESIGN
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.999813852767939	WITHOUT_CLASSIFICATION	1.8614723206100746E-4	DESIGN
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999999113805477	WITHOUT_CLASSIFICATION	8.861945228591055E-8	DESIGN
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999978270204419	WITHOUT_CLASSIFICATION	2.1729795579897115E-6	DESIGN
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999993956586992	WITHOUT_CLASSIFICATION	6.04341300719357E-7	DESIGN
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9987981854963214	WITHOUT_CLASSIFICATION	0.001201814503678717	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999999998185213	WITHOUT_CLASSIFICATION	1.8147870669540825E-10	DESIGN
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999999727708927	WITHOUT_CLASSIFICATION	2.7229107333111628E-8	DESIGN
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.999749243443021	WITHOUT_CLASSIFICATION	2.507565569790365E-4	DESIGN
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999971068165417	WITHOUT_CLASSIFICATION	2.8931834582889628E-6	DESIGN
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9931314079573332	WITHOUT_CLASSIFICATION	0.006868592042666767	DESIGN
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9997849512319879	WITHOUT_CLASSIFICATION	2.1504876801212543E-4	DESIGN
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.7984855461396492	WITHOUT_CLASSIFICATION	0.20151445386035088	DESIGN
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999913650045503	WITHOUT_CLASSIFICATION	8.634995449802665E-6	DESIGN
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9998268818302157	WITHOUT_CLASSIFICATION	1.731181697843595E-4	DESIGN
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999992440276609	WITHOUT_CLASSIFICATION	7.559723390794611E-7	DESIGN
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.999999314152661	WITHOUT_CLASSIFICATION	6.858473389396733E-7	DESIGN
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999949919495841	WITHOUT_CLASSIFICATION	5.00805041595308E-6	DESIGN
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.7666865776352023	DESIGN	0.23331342236479763	WITHOUT_CLASSIFICATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.999997890559345	WITHOUT_CLASSIFICATION	2.109440654934065E-6	DESIGN
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999975449069181	WITHOUT_CLASSIFICATION	2.4550930819245714E-6	DESIGN
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9991589434919906	WITHOUT_CLASSIFICATION	8.41056508009395E-4	DESIGN
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.999998942362912	WITHOUT_CLASSIFICATION	1.0576370880464984E-6	DESIGN
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.997729627127973	WITHOUT_CLASSIFICATION	0.002270372872026977	DESIGN
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9998742044077357	WITHOUT_CLASSIFICATION	1.257955922642967E-4	DESIGN
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9966197584520011	WITHOUT_CLASSIFICATION	0.003380241547998854	DESIGN
// rename is successful	WITHOUT_CLASSIFICATION	0.9998092796615999	WITHOUT_CLASSIFICATION	1.9072033840010543E-4	DESIGN
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9695747213862622	WITHOUT_CLASSIFICATION	0.030425278613737713	DESIGN
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999890022231509	WITHOUT_CLASSIFICATION	1.0997776849163324E-5	DESIGN
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9990193002565366	WITHOUT_CLASSIFICATION	9.80699743463415E-4	DESIGN
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999991085197587	WITHOUT_CLASSIFICATION	8.914802412659761E-7	DESIGN
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999547255235036	WITHOUT_CLASSIFICATION	4.527447649631693E-5	DESIGN
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999938986063407	WITHOUT_CLASSIFICATION	6.101393659255509E-6	DESIGN
// 16 ?	WITHOUT_CLASSIFICATION	0.9997350502070049	WITHOUT_CLASSIFICATION	2.649497929950543E-4	DESIGN
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999965842740788	WITHOUT_CLASSIFICATION	3.415725921220633E-6	DESIGN
// size + 1;	WITHOUT_CLASSIFICATION	0.999971660284567	WITHOUT_CLASSIFICATION	2.8339715433019133E-5	DESIGN
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999999607638326	WITHOUT_CLASSIFICATION	3.923616745557849E-8	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999996900914633	WITHOUT_CLASSIFICATION	3.099085366680751E-7	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999996900914633	WITHOUT_CLASSIFICATION	3.099085366680751E-7	DESIGN
// put implementation	WITHOUT_CLASSIFICATION	0.9999874053537788	WITHOUT_CLASSIFICATION	1.2594646221170039E-5	DESIGN
// get implementation	WITHOUT_CLASSIFICATION	0.9999982647789857	WITHOUT_CLASSIFICATION	1.7352210143383252E-6	DESIGN
// specialized for value	WITHOUT_CLASSIFICATION	0.9999535171427756	WITHOUT_CLASSIFICATION	4.648285722428557E-5	DESIGN
// delete implementation	WITHOUT_CLASSIFICATION	0.9999624864602746	WITHOUT_CLASSIFICATION	3.75135397253871E-5	DESIGN
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9992198779831565	WITHOUT_CLASSIFICATION	7.801220168435086E-4	DESIGN
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999991586080782	WITHOUT_CLASSIFICATION	8.413919217508083E-7	DESIGN
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.999999737062062	WITHOUT_CLASSIFICATION	2.629379379289426E-7	DESIGN
// update the hash value	WITHOUT_CLASSIFICATION	0.9999424807312279	WITHOUT_CLASSIFICATION	5.751926877201539E-5	DESIGN
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999861971821665	WITHOUT_CLASSIFICATION	1.3802817833461361E-5	DESIGN
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999740094792993	WITHOUT_CLASSIFICATION	2.5990520700766857E-5	DESIGN
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999999874929396	WITHOUT_CLASSIFICATION	1.2507060341167095E-8	DESIGN
// remain where we are	WITHOUT_CLASSIFICATION	0.9998582427915386	WITHOUT_CLASSIFICATION	1.4175720846138458E-4	DESIGN
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.999999713493877	WITHOUT_CLASSIFICATION	2.8650612302410794E-7	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9992537613836715	WITHOUT_CLASSIFICATION	7.462386163285786E-4	DESIGN
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999999974665238	WITHOUT_CLASSIFICATION	2.5334763159788633E-9	DESIGN
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9995505673845252	WITHOUT_CLASSIFICATION	4.4943261547484203E-4	DESIGN
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999998647818995	WITHOUT_CLASSIFICATION	1.3521810046580526E-7	DESIGN
// first try as directory	WITHOUT_CLASSIFICATION	0.9999990942974751	WITHOUT_CLASSIFICATION	9.057025249203986E-7	DESIGN
// next as regular file	WITHOUT_CLASSIFICATION	0.999917018282483	WITHOUT_CLASSIFICATION	8.29817175169308E-5	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9966470780902854	WITHOUT_CLASSIFICATION	0.0033529219097145056	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9999474376761607	WITHOUT_CLASSIFICATION	5.2562323839395915E-5	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9999474376761607	WITHOUT_CLASSIFICATION	5.2562323839395915E-5	DESIGN
// Stream-based	WITHOUT_CLASSIFICATION	0.9999887948135789	WITHOUT_CLASSIFICATION	1.1205186421140188E-5	DESIGN
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999989261923843	WITHOUT_CLASSIFICATION	1.0738076156770559E-6	DESIGN
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999860376967593	WITHOUT_CLASSIFICATION	1.3962303240628633E-5	DESIGN
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999994167837988	WITHOUT_CLASSIFICATION	5.832162013022808E-7	DESIGN
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.999998740084574	WITHOUT_CLASSIFICATION	1.2599154259915287E-6	DESIGN
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999996070435937	WITHOUT_CLASSIFICATION	3.9295640631039976E-7	DESIGN
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999994718043778	WITHOUT_CLASSIFICATION	5.281956221940562E-7	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999859483283	WITHOUT_CLASSIFICATION	1.405167163936653E-8	DESIGN
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999696329006146	WITHOUT_CLASSIFICATION	3.0367099385415353E-5	DESIGN
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999998911266347	WITHOUT_CLASSIFICATION	1.0887336529200876E-7	DESIGN
// re-register	WITHOUT_CLASSIFICATION	0.9999944936811035	WITHOUT_CLASSIFICATION	5.5063188964516685E-6	DESIGN
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.999999870329102	WITHOUT_CLASSIFICATION	1.2967089788782438E-7	DESIGN
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999999774887032	WITHOUT_CLASSIFICATION	2.2511296839241423E-8	DESIGN
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999993071637038	WITHOUT_CLASSIFICATION	6.928362962156346E-7	DESIGN
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999998008008412	WITHOUT_CLASSIFICATION	1.9919915887947407E-7	DESIGN
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999183919074631	WITHOUT_CLASSIFICATION	8.160809253687758E-5	DESIGN
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999820104326221	WITHOUT_CLASSIFICATION	1.798956737792467E-5	DESIGN
// use original modes	WITHOUT_CLASSIFICATION	0.9999472097803271	WITHOUT_CLASSIFICATION	5.279021967281042E-5	DESIGN
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999999599081817	WITHOUT_CLASSIFICATION	4.0091818310221695E-8	DESIGN
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9920021949223747	WITHOUT_CLASSIFICATION	0.007997805077625236	DESIGN
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999997110819078	WITHOUT_CLASSIFICATION	2.889180921767746E-7	DESIGN
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999991847113763	WITHOUT_CLASSIFICATION	8.152886236493483E-7	DESIGN
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999828709313263	WITHOUT_CLASSIFICATION	1.7129068673641973E-5	DESIGN
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9888047160048227	WITHOUT_CLASSIFICATION	0.011195283995177267	DESIGN
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999898027206771	WITHOUT_CLASSIFICATION	1.0197279322906194E-5	DESIGN
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9983102196585414	WITHOUT_CLASSIFICATION	0.0016897803414586768	DESIGN
//Everything written	WITHOUT_CLASSIFICATION	0.9991561729246942	WITHOUT_CLASSIFICATION	8.438270753058666E-4	DESIGN
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999779045240886	WITHOUT_CLASSIFICATION	2.209547591141156E-5	DESIGN
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999992055166691	WITHOUT_CLASSIFICATION	7.944833309436433E-7	DESIGN
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9732241223331377	WITHOUT_CLASSIFICATION	0.02677587766686218	DESIGN
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999999584469229	WITHOUT_CLASSIFICATION	4.1553077142432094E-8	DESIGN
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999858628588313	WITHOUT_CLASSIFICATION	1.413714116885264E-5	DESIGN
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9993199582705365	WITHOUT_CLASSIFICATION	6.800417294635747E-4	DESIGN
// hmmmm	WITHOUT_CLASSIFICATION	0.9999079957065891	WITHOUT_CLASSIFICATION	9.200429341096692E-5	DESIGN
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999996509268378	WITHOUT_CLASSIFICATION	3.4907316213535197E-7	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.5303325356542531	WITHOUT_CLASSIFICATION	0.469667464345747	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9998105559501657	WITHOUT_CLASSIFICATION	1.8944404983440717E-4	DESIGN
// Length to read	WITHOUT_CLASSIFICATION	0.9999662342026676	WITHOUT_CLASSIFICATION	3.3765797332311035E-5	DESIGN
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9998760805194093	WITHOUT_CLASSIFICATION	1.2391948059068986E-4	DESIGN
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999904899571135	WITHOUT_CLASSIFICATION	9.510042886577445E-6	DESIGN
// select until read is ready	WITHOUT_CLASSIFICATION	0.9985948544331881	WITHOUT_CLASSIFICATION	0.001405145566811876	DESIGN
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999998807328057	WITHOUT_CLASSIFICATION	1.192671943868726E-7	DESIGN
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999998967089401	WITHOUT_CLASSIFICATION	1.0329105993274573E-7	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9989427949079126	WITHOUT_CLASSIFICATION	0.0010572050920874645	DESIGN
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9984128273297879	WITHOUT_CLASSIFICATION	0.0015871726702121152	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9989427949079126	WITHOUT_CLASSIFICATION	0.0010572050920874645	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999629873933618	DESIGN	3.7012606638266744E-5	WITHOUT_CLASSIFICATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.593880640506932	DESIGN	0.40611935949306804	WITHOUT_CLASSIFICATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999879864427925	WITHOUT_CLASSIFICATION	1.2013557207599217E-5	DESIGN
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.999844449550851	DESIGN	1.5555044914891255E-4	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9996660571331141	WITHOUT_CLASSIFICATION	3.339428668858823E-4	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999718810815337	WITHOUT_CLASSIFICATION	2.811891846635172E-5	DESIGN
// write	WITHOUT_CLASSIFICATION	0.9999626528208507	WITHOUT_CLASSIFICATION	3.734717914935762E-5	DESIGN
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999989619673887	WITHOUT_CLASSIFICATION	1.0380326112438897E-6	DESIGN
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999894684635166	WITHOUT_CLASSIFICATION	1.0531536483539486E-5	DESIGN
// FIXME: process options	WITHOUT_CLASSIFICATION	0.7222833802502201	WITHOUT_CLASSIFICATION	0.2777166197497799	DESIGN
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9890275637498921	WITHOUT_CLASSIFICATION	0.010972436250108018	DESIGN
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9990026734393143	WITHOUT_CLASSIFICATION	9.973265606857472E-4	DESIGN
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9998278915550942	WITHOUT_CLASSIFICATION	1.7210844490583093E-4	DESIGN
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999978458332421	WITHOUT_CLASSIFICATION	2.154166757860113E-6	DESIGN
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9999867359357909	WITHOUT_CLASSIFICATION	1.3264064209180933E-5	DESIGN
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9899069805266962	DESIGN	0.010093019473303712	WITHOUT_CLASSIFICATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999418372942416	WITHOUT_CLASSIFICATION	5.816270575850773E-5	DESIGN
// The class of this object	WITHOUT_CLASSIFICATION	0.9885743936094068	WITHOUT_CLASSIFICATION	0.01142560639059325	DESIGN
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999826430229253	WITHOUT_CLASSIFICATION	1.7356977074663126E-5	DESIGN
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999951901496673	WITHOUT_CLASSIFICATION	4.809850332686519E-6	DESIGN
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999862915371375	WITHOUT_CLASSIFICATION	1.3708462862614363E-5	DESIGN
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999982423275983	WITHOUT_CLASSIFICATION	1.7576724018023376E-6	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.999992915384663	WITHOUT_CLASSIFICATION	7.084615337080079E-6	DESIGN
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999995809790154	WITHOUT_CLASSIFICATION	4.1902098455047657E-7	DESIGN
// for interface impls	WITHOUT_CLASSIFICATION	0.9999888349164712	WITHOUT_CLASSIFICATION	1.1165083528778011E-5	DESIGN
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9985730278049958	WITHOUT_CLASSIFICATION	0.0014269721950042277	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999895619469104	WITHOUT_CLASSIFICATION	1.0438053089625455E-5	DESIGN
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9995323249364302	WITHOUT_CLASSIFICATION	4.6767506356986055E-4	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999972832175757	WITHOUT_CLASSIFICATION	2.7167824241858286E-6	DESIGN
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9982188085096817	WITHOUT_CLASSIFICATION	0.0017811914903183483	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999978929659773	WITHOUT_CLASSIFICATION	2.107034022750588E-6	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999993619622426	WITHOUT_CLASSIFICATION	6.380377575093901E-7	DESIGN
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999967559352527	WITHOUT_CLASSIFICATION	3.2440647472506245E-6	DESIGN
// Struct methods	WITHOUT_CLASSIFICATION	0.9999262394363166	WITHOUT_CLASSIFICATION	7.376056368328791E-5	DESIGN
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999999999772526	WITHOUT_CLASSIFICATION	2.274725420673585E-11	DESIGN
// define access methods.	WITHOUT_CLASSIFICATION	0.999995485272984	WITHOUT_CLASSIFICATION	4.51472701601126E-6	DESIGN
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999974762446622	WITHOUT_CLASSIFICATION	2.523755337733875E-6	DESIGN
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9862374912843648	WITHOUT_CLASSIFICATION	0.013762508715635302	DESIGN
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999907761943125	WITHOUT_CLASSIFICATION	9.223805687479912E-6	DESIGN
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999779110857111	WITHOUT_CLASSIFICATION	2.2088914288900295E-5	DESIGN
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999996622344268	WITHOUT_CLASSIFICATION	3.377655732279626E-7	DESIGN
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999997170565308	WITHOUT_CLASSIFICATION	2.829434692622688E-7	DESIGN
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999999874766646	WITHOUT_CLASSIFICATION	1.2523335344767844E-8	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9997455231549846	WITHOUT_CLASSIFICATION	2.544768450153915E-4	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9997455231549846	WITHOUT_CLASSIFICATION	2.544768450153915E-4	DESIGN
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9977591502617145	WITHOUT_CLASSIFICATION	0.0022408497382854537	DESIGN
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9974974091104173	WITHOUT_CLASSIFICATION	0.0025025908895826158	DESIGN
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9935094058510775	WITHOUT_CLASSIFICATION	0.006490594148922556	DESIGN
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999999963724017	WITHOUT_CLASSIFICATION	3.62759828465303E-9	DESIGN
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999924856158559	WITHOUT_CLASSIFICATION	7.514384144078312E-6	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.999556659962429	WITHOUT_CLASSIFICATION	4.433400375709478E-4	DESIGN
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999995716984674	WITHOUT_CLASSIFICATION	4.283015326132118E-7	DESIGN
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.999997085440643	WITHOUT_CLASSIFICATION	2.914559357066164E-6	DESIGN
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9998578329845021	WITHOUT_CLASSIFICATION	1.4216701549781674E-4	DESIGN
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.995282693878297	WITHOUT_CLASSIFICATION	0.0047173061217030045	DESIGN
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.999998220995975	WITHOUT_CLASSIFICATION	1.779004024964779E-6	DESIGN
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9995641556285443	WITHOUT_CLASSIFICATION	4.3584437145574963E-4	DESIGN
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9263615765805798	WITHOUT_CLASSIFICATION	0.07363842341942024	DESIGN
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999917662071617	WITHOUT_CLASSIFICATION	8.233792838357767E-6	DESIGN
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9976658127406306	WITHOUT_CLASSIFICATION	0.002334187259369309	DESIGN
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999999292267999	WITHOUT_CLASSIFICATION	7.077320011335752E-8	DESIGN
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999703760824894	WITHOUT_CLASSIFICATION	2.9623917510595414E-5	DESIGN
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999981803800709	WITHOUT_CLASSIFICATION	1.81961992911728E-6	DESIGN
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9997990450486853	WITHOUT_CLASSIFICATION	2.0095495131469161E-4	DESIGN
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999965637776971	WITHOUT_CLASSIFICATION	3.4362223028610543E-6	DESIGN
//FIXME warning	WITHOUT_CLASSIFICATION	0.6599646115744868	DESIGN	0.34003538842551306	WITHOUT_CLASSIFICATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.7026570753372274	DESIGN	0.2973429246627727	WITHOUT_CLASSIFICATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9973286659406536	WITHOUT_CLASSIFICATION	0.0026713340593463885	DESIGN
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999773635645145	WITHOUT_CLASSIFICATION	2.2636435485526517E-5	DESIGN
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9986196747611801	WITHOUT_CLASSIFICATION	0.0013803252388198406	DESIGN
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9995865292129352	WITHOUT_CLASSIFICATION	4.134707870648728E-4	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.998000355917504	WITHOUT_CLASSIFICATION	0.001999644082496019	DESIGN
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999308609986269	WITHOUT_CLASSIFICATION	6.913900137300028E-5	DESIGN
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999786429116214	WITHOUT_CLASSIFICATION	2.1357088378508243E-5	DESIGN
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9998664947346635	WITHOUT_CLASSIFICATION	1.335052653365073E-4	DESIGN
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.8784032184725712	DESIGN	0.12159678152742878	WITHOUT_CLASSIFICATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9995818110442385	WITHOUT_CLASSIFICATION	4.181889557615511E-4	DESIGN
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999796359692	WITHOUT_CLASSIFICATION	2.0364030855253517E-8	DESIGN
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.99999993459968	WITHOUT_CLASSIFICATION	6.540032006024264E-8	DESIGN
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999994931676676	WITHOUT_CLASSIFICATION	5.068323323646486E-7	DESIGN
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999436569946509	WITHOUT_CLASSIFICATION	5.63430053492251E-5	DESIGN
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999893832844869	WITHOUT_CLASSIFICATION	1.0616715512971038E-5	DESIGN
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999978120381499	WITHOUT_CLASSIFICATION	2.1879618501066117E-6	DESIGN
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9992793611567966	WITHOUT_CLASSIFICATION	7.206388432034708E-4	DESIGN
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999756743492679	WITHOUT_CLASSIFICATION	2.432565073206673E-5	DESIGN
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9998519834316937	WITHOUT_CLASSIFICATION	1.4801656830624354E-4	DESIGN
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.999983248951448	WITHOUT_CLASSIFICATION	1.6751048552040463E-5	DESIGN
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9982601893808392	WITHOUT_CLASSIFICATION	0.0017398106191608218	DESIGN
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999991979952839	WITHOUT_CLASSIFICATION	8.020047161201587E-7	DESIGN
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9998638707136691	WITHOUT_CLASSIFICATION	1.361292863308811E-4	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999982597481548	WITHOUT_CLASSIFICATION	1.7402518451831658E-6	DESIGN
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999917580870776	WITHOUT_CLASSIFICATION	8.241912922439197E-6	DESIGN
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.999982538045874	WITHOUT_CLASSIFICATION	1.7461954125982735E-5	DESIGN
//reopen	WITHOUT_CLASSIFICATION	0.9999894099945354	WITHOUT_CLASSIFICATION	1.0590005464595034E-5	DESIGN
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999843138404156	WITHOUT_CLASSIFICATION	1.5686159584404202E-5	DESIGN
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999999986412746	WITHOUT_CLASSIFICATION	1.3587252639626436E-9	DESIGN
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999997650369779	WITHOUT_CLASSIFICATION	2.3496302224528993E-7	DESIGN
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999999840513955	WITHOUT_CLASSIFICATION	1.5948604573283673E-8	DESIGN
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999997996377306	WITHOUT_CLASSIFICATION	2.003622694618744E-7	DESIGN
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.999957424712118	WITHOUT_CLASSIFICATION	4.257528788197596E-5	DESIGN
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999831873422287	WITHOUT_CLASSIFICATION	1.681265777133707E-5	DESIGN
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999643003586942	WITHOUT_CLASSIFICATION	3.5699641305796E-5	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9716511619948273	DESIGN	0.028348838005172773	WITHOUT_CLASSIFICATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9998805770502688	WITHOUT_CLASSIFICATION	1.1942294973124694E-4	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9998385180496866	WITHOUT_CLASSIFICATION	1.614819503134274E-4	DESIGN
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999996364887279	WITHOUT_CLASSIFICATION	3.635112721147195E-7	DESIGN
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9998953861600179	WITHOUT_CLASSIFICATION	1.046138399821218E-4	DESIGN
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999993934951864	WITHOUT_CLASSIFICATION	6.065048135718121E-7	DESIGN
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999972204889744	WITHOUT_CLASSIFICATION	2.7795110256108877E-6	DESIGN
// ignore error	WITHOUT_CLASSIFICATION	0.999985634520518	WITHOUT_CLASSIFICATION	1.4365479482017303E-5	DESIGN
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999990167979913	WITHOUT_CLASSIFICATION	9.832020086959814E-7	DESIGN
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999961266202879	WITHOUT_CLASSIFICATION	3.873379712018698E-6	DESIGN
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999990204739145	WITHOUT_CLASSIFICATION	9.795260854542227E-7	DESIGN
// odd	WITHOUT_CLASSIFICATION	0.999985332445912	WITHOUT_CLASSIFICATION	1.4667554088023741E-5	DESIGN
// JRubyClient	WITHOUT_CLASSIFICATION	0.9998999922219085	WITHOUT_CLASSIFICATION	1.0000777809152487E-4	DESIGN
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999999626044963	WITHOUT_CLASSIFICATION	3.739550372845252E-8	DESIGN
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999635821520861	WITHOUT_CLASSIFICATION	3.641784791387328E-5	DESIGN
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999999863658362	WITHOUT_CLASSIFICATION	1.3634163837211377E-8	DESIGN
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999892662914778	WITHOUT_CLASSIFICATION	1.0733708522330547E-5	DESIGN
/*  0! */	WITHOUT_CLASSIFICATION	0.9999876800701196	WITHOUT_CLASSIFICATION	1.2319929880454495E-5	DESIGN
/*  1! */	WITHOUT_CLASSIFICATION	0.9999864776580847	WITHOUT_CLASSIFICATION	1.3522341915260697E-5	DESIGN
/*  2! */	WITHOUT_CLASSIFICATION	0.9999912619120804	WITHOUT_CLASSIFICATION	8.738087919483858E-6	DESIGN
/*  3! */	WITHOUT_CLASSIFICATION	0.9999782565508886	WITHOUT_CLASSIFICATION	2.174344911144604E-5	DESIGN
/*  4! */	WITHOUT_CLASSIFICATION	0.9999823580481974	WITHOUT_CLASSIFICATION	1.7641951802661266E-5	DESIGN
/*  5! */	WITHOUT_CLASSIFICATION	0.9999772785488062	WITHOUT_CLASSIFICATION	2.272145119372716E-5	DESIGN
/*  6! */	WITHOUT_CLASSIFICATION	0.9999806050977814	WITHOUT_CLASSIFICATION	1.939490221859754E-5	DESIGN
/*  7! */	WITHOUT_CLASSIFICATION	0.9999798750023341	WITHOUT_CLASSIFICATION	2.0124997665963388E-5	DESIGN
/*  8! */	WITHOUT_CLASSIFICATION	0.999983306230297	WITHOUT_CLASSIFICATION	1.6693769703053926E-5	DESIGN
/*  9! */	WITHOUT_CLASSIFICATION	0.9999788617180997	WITHOUT_CLASSIFICATION	2.113828190031485E-5	DESIGN
/* 11! */	WITHOUT_CLASSIFICATION	0.9999679702269875	WITHOUT_CLASSIFICATION	3.2029773012566244E-5	DESIGN
/* 12! */	WITHOUT_CLASSIFICATION	0.999979663881391	WITHOUT_CLASSIFICATION	2.0336118609006476E-5	DESIGN
/* 13! */	WITHOUT_CLASSIFICATION	0.9999667853988995	WITHOUT_CLASSIFICATION	3.32146011004357E-5	DESIGN
/* 15! */	WITHOUT_CLASSIFICATION	0.9999693189133999	WITHOUT_CLASSIFICATION	3.068108660015593E-5	DESIGN
/* 16! */	WITHOUT_CLASSIFICATION	0.9999685101996283	WITHOUT_CLASSIFICATION	3.14898003716843E-5	DESIGN
/* 17! */	WITHOUT_CLASSIFICATION	0.9999633769130617	WITHOUT_CLASSIFICATION	3.6623086938296926E-5	DESIGN
/* 19! */	WITHOUT_CLASSIFICATION	0.9999651851743936	WITHOUT_CLASSIFICATION	3.481482560640507E-5	DESIGN
/* 20! */	WITHOUT_CLASSIFICATION	0.9999841168115803	WITHOUT_CLASSIFICATION	1.588318841964681E-5	DESIGN
/* 21! */	WITHOUT_CLASSIFICATION	0.9999849038721629	WITHOUT_CLASSIFICATION	1.5096127837134264E-5	DESIGN
// Static constants	WITHOUT_CLASSIFICATION	0.9999971257069117	WITHOUT_CLASSIFICATION	2.874293088353294E-6	DESIGN
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9571229201413889	WITHOUT_CLASSIFICATION	0.04287707985861111	DESIGN
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999720248452345	WITHOUT_CLASSIFICATION	2.79751547654368E-5	DESIGN
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999999498261796	WITHOUT_CLASSIFICATION	5.0173820459440655E-8	DESIGN
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999498869608769	WITHOUT_CLASSIFICATION	5.011303912317782E-5	DESIGN
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999997193582353	WITHOUT_CLASSIFICATION	2.8064176477095186E-7	DESIGN
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999996946598951	WITHOUT_CLASSIFICATION	3.053401048845973E-7	DESIGN
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9994077405171198	WITHOUT_CLASSIFICATION	5.922594828801188E-4	DESIGN
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999988919479961	WITHOUT_CLASSIFICATION	1.1080520040104028E-6	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999929246882377	WITHOUT_CLASSIFICATION	7.075311762265776E-6	DESIGN
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9997198745048133	DESIGN	2.8012549518683305E-4	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9999999450448306	WITHOUT_CLASSIFICATION	5.495516953701175E-8	DESIGN
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999999787819779	WITHOUT_CLASSIFICATION	2.121802215779E-8	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999088742662243	WITHOUT_CLASSIFICATION	9.112573377575053E-5	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999088742662243	WITHOUT_CLASSIFICATION	9.112573377575053E-5	DESIGN
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999997168188579	WITHOUT_CLASSIFICATION	2.831811422009914E-7	DESIGN
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999860978626343	WITHOUT_CLASSIFICATION	1.3902137365636313E-5	DESIGN
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999743615349018	WITHOUT_CLASSIFICATION	2.563846509815739E-5	DESIGN
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9986201513543951	WITHOUT_CLASSIFICATION	0.0013798486456049195	DESIGN
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9987785158231931	WITHOUT_CLASSIFICATION	0.0012214841768068867	DESIGN
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.999983589480127	WITHOUT_CLASSIFICATION	1.6410519872945796E-5	DESIGN
// sign	WITHOUT_CLASSIFICATION	0.99998086904758	WITHOUT_CLASSIFICATION	1.9130952420050512E-5	DESIGN
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999825178250962	WITHOUT_CLASSIFICATION	1.7482174903820356E-5	DESIGN
// normalize the value	WITHOUT_CLASSIFICATION	0.9999923692690882	WITHOUT_CLASSIFICATION	7.630730911840992E-6	DESIGN
// base	WITHOUT_CLASSIFICATION	0.9999978908194727	WITHOUT_CLASSIFICATION	2.1091805272352954E-6	DESIGN
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999994637014604	WITHOUT_CLASSIFICATION	5.362985395272632E-7	DESIGN
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.999996199976595	WITHOUT_CLASSIFICATION	3.8000234049831696E-6	DESIGN
// eh?!	WITHOUT_CLASSIFICATION	0.9996716531030512	WITHOUT_CLASSIFICATION	3.2834689694887046E-4	DESIGN
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999987352123462	WITHOUT_CLASSIFICATION	1.2647876537181708E-6	DESIGN
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9836406284832542	WITHOUT_CLASSIFICATION	0.01635937151674585	DESIGN
// the requested precision	WITHOUT_CLASSIFICATION	0.9999733533838561	WITHOUT_CLASSIFICATION	2.664661614394309E-5	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999934109530191	WITHOUT_CLASSIFICATION	6.589046980855223E-6	DESIGN
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999999823242862	WITHOUT_CLASSIFICATION	1.7675713774876236E-8	DESIGN
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999998403751952	WITHOUT_CLASSIFICATION	1.5962480479591896E-7	DESIGN
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999963190942159	WITHOUT_CLASSIFICATION	3.6809057840170584E-6	DESIGN
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999999619613789	WITHOUT_CLASSIFICATION	3.803862119951456E-8	DESIGN
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.8485816826119613	WITHOUT_CLASSIFICATION	0.1514183173880387	DESIGN
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999979566892201	WITHOUT_CLASSIFICATION	2.0433107799184135E-6	DESIGN
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999939085654219	WITHOUT_CLASSIFICATION	6.091434578118017E-6	DESIGN
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999624569889	WITHOUT_CLASSIFICATION	3.754301127149716E-8	DESIGN
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999930756207571	WITHOUT_CLASSIFICATION	6.924379242985712E-6	DESIGN
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999985052917615	WITHOUT_CLASSIFICATION	1.494708238544567E-6	DESIGN
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.99999391817348	WITHOUT_CLASSIFICATION	6.0818265199636974E-6	DESIGN
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999991838317843	WITHOUT_CLASSIFICATION	8.161682157672203E-7	DESIGN
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999706504407015	WITHOUT_CLASSIFICATION	2.9349559298493014E-5	DESIGN
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.999994198255658	WITHOUT_CLASSIFICATION	5.801744341939593E-6	DESIGN
// root x is ready!	WITHOUT_CLASSIFICATION	0.9994555159804761	WITHOUT_CLASSIFICATION	5.444840195239034E-4	DESIGN
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999955900510079	WITHOUT_CLASSIFICATION	4.409948992176651E-6	DESIGN
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999979402444724	WITHOUT_CLASSIFICATION	2.0597555275494994E-6	DESIGN
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999827958323318	WITHOUT_CLASSIFICATION	1.7204167668167995E-5	DESIGN
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9998605576881301	WITHOUT_CLASSIFICATION	1.394423118698366E-4	DESIGN
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999989256870686	WITHOUT_CLASSIFICATION	1.074312931371412E-6	DESIGN
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999973506662924	WITHOUT_CLASSIFICATION	2.6493337076242033E-6	DESIGN
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999107747731757	WITHOUT_CLASSIFICATION	8.922522682431141E-5	DESIGN
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.999960396505086	WITHOUT_CLASSIFICATION	3.9603494914036694E-5	DESIGN
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9199453132310155	WITHOUT_CLASSIFICATION	0.08005468676898456	DESIGN
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999946742466527	WITHOUT_CLASSIFICATION	5.3257533473099E-6	DESIGN
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999995158377961	WITHOUT_CLASSIFICATION	4.841622038536515E-7	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9992932406932633	WITHOUT_CLASSIFICATION	7.067593067367695E-4	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9992932406932633	WITHOUT_CLASSIFICATION	7.067593067367695E-4	DESIGN
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9996656482439341	WITHOUT_CLASSIFICATION	3.3435175606580186E-4	DESIGN
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999996678221003	WITHOUT_CLASSIFICATION	3.3217789973372075E-7	DESIGN
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999892960665094	WITHOUT_CLASSIFICATION	1.0703933490534059E-5	DESIGN
//consume the file name	WITHOUT_CLASSIFICATION	0.9999771222657402	WITHOUT_CLASSIFICATION	2.2877734259777293E-5	DESIGN
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9973909390397253	WITHOUT_CLASSIFICATION	0.002609060960274723	DESIGN
// try cwd first	WITHOUT_CLASSIFICATION	0.9995883687301893	WITHOUT_CLASSIFICATION	4.11631269810692E-4	DESIGN
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.999562186555049	WITHOUT_CLASSIFICATION	4.3781344495099684E-4	DESIGN
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999706163762399	WITHOUT_CLASSIFICATION	2.938362376012386E-5	DESIGN
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999981255272506	WITHOUT_CLASSIFICATION	1.8744727493831604E-6	DESIGN
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999793894368549	WITHOUT_CLASSIFICATION	2.061056314509726E-5	DESIGN
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.999970331437693	WITHOUT_CLASSIFICATION	2.9668562307009225E-5	DESIGN
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999975233198843	WITHOUT_CLASSIFICATION	2.476680115644751E-6	DESIGN
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.999999758799597	WITHOUT_CLASSIFICATION	2.4120040303949995E-7	DESIGN
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999853537553275	WITHOUT_CLASSIFICATION	1.46462446725412E-5	DESIGN
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9832696757752819	DESIGN	0.016730324224718162	WITHOUT_CLASSIFICATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.8637590367438214	DESIGN	0.13624096325617857	WITHOUT_CLASSIFICATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999490625918718	WITHOUT_CLASSIFICATION	5.093740812815224E-5	DESIGN
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999355404681926	WITHOUT_CLASSIFICATION	6.445953180738914E-5	DESIGN
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999999388767085	WITHOUT_CLASSIFICATION	6.112329150139456E-8	DESIGN
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999995294371907	WITHOUT_CLASSIFICATION	4.705628093678845E-7	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999984098381133	WITHOUT_CLASSIFICATION	1.5901618867506286E-6	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999984098381133	WITHOUT_CLASSIFICATION	1.5901618867506286E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999981062537432	WITHOUT_CLASSIFICATION	1.893746256751977E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999981062537432	WITHOUT_CLASSIFICATION	1.893746256751977E-6	DESIGN
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999941043414872	WITHOUT_CLASSIFICATION	5.895658512827866E-6	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999197315650821	WITHOUT_CLASSIFICATION	8.026843491792559E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999992017156073	WITHOUT_CLASSIFICATION	7.982843927870646E-7	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999988864415464	WITHOUT_CLASSIFICATION	1.1135584535473063E-6	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999937963926704	WITHOUT_CLASSIFICATION	6.20360732960645E-6	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999924562809787	WITHOUT_CLASSIFICATION	7.5437190213674765E-6	DESIGN
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9489471851495396	WITHOUT_CLASSIFICATION	0.0510528148504604	DESIGN
// Profile	WITHOUT_CLASSIFICATION	0.9999981336697741	WITHOUT_CLASSIFICATION	1.86633022591786E-6	DESIGN
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999995264581324	WITHOUT_CLASSIFICATION	4.7354186754531784E-7	DESIGN
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999999476954623	WITHOUT_CLASSIFICATION	5.230453771599139E-8	DESIGN
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999651563596597	WITHOUT_CLASSIFICATION	3.4843640340349265E-5	DESIGN
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999940251849194	WITHOUT_CLASSIFICATION	5.974815080492379E-6	DESIGN
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999975414699481	WITHOUT_CLASSIFICATION	2.4585300519442635E-6	DESIGN
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9915981362641014	WITHOUT_CLASSIFICATION	0.008401863735898471	DESIGN
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999984486115073	WITHOUT_CLASSIFICATION	1.5513884927163413E-6	DESIGN
// reset the state	WITHOUT_CLASSIFICATION	0.9999944290308429	WITHOUT_CLASSIFICATION	5.570969157084448E-6	DESIGN
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9902910124116098	WITHOUT_CLASSIFICATION	0.009708987588390245	DESIGN
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999946551228491	WITHOUT_CLASSIFICATION	5.344877150861837E-6	DESIGN
//str is frozen	WITHOUT_CLASSIFICATION	0.9992259713961434	WITHOUT_CLASSIFICATION	7.740286038565296E-4	DESIGN
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999996417215087	WITHOUT_CLASSIFICATION	3.582784913557891E-7	DESIGN
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999940779622257	WITHOUT_CLASSIFICATION	5.922037774210988E-6	DESIGN
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999981325300061	WITHOUT_CLASSIFICATION	1.8674699938491327E-6	DESIGN
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999975832555595	WITHOUT_CLASSIFICATION	2.4167444404084286E-6	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999895619469104	WITHOUT_CLASSIFICATION	1.0438053089625455E-5	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.999556659962429	WITHOUT_CLASSIFICATION	4.433400375709478E-4	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9999793631324417	WITHOUT_CLASSIFICATION	2.0636867558220783E-5	DESIGN
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.7751145616587765	WITHOUT_CLASSIFICATION	0.22488543834122354	DESIGN
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999991952200293	WITHOUT_CLASSIFICATION	8.047799706844007E-7	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9996850950313217	WITHOUT_CLASSIFICATION	3.149049686782828E-4	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9994611970260534	WITHOUT_CLASSIFICATION	5.388029739464994E-4	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9994611970260534	WITHOUT_CLASSIFICATION	5.388029739464994E-4	DESIGN
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9732529898716943	WITHOUT_CLASSIFICATION	0.026747010128305746	DESIGN
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9994295924474599	WITHOUT_CLASSIFICATION	5.704075525400477E-4	DESIGN
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999963890909848	WITHOUT_CLASSIFICATION	3.610909015261275E-6	DESIGN
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999753533553104	WITHOUT_CLASSIFICATION	2.4646644689573184E-5	DESIGN
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9997560321133081	WITHOUT_CLASSIFICATION	2.4396788669192414E-4	DESIGN
// static initializing method	WITHOUT_CLASSIFICATION	0.9945745255420229	WITHOUT_CLASSIFICATION	0.005425474457977223	DESIGN
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.999992490910238	WITHOUT_CLASSIFICATION	7.509089762069178E-6	DESIGN
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9995531262068673	WITHOUT_CLASSIFICATION	4.468737931327037E-4	DESIGN
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999989975348852	WITHOUT_CLASSIFICATION	1.0024651148095744E-6	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999405774208251	WITHOUT_CLASSIFICATION	5.942257917493029E-5	DESIGN
// self // method name	WITHOUT_CLASSIFICATION	0.9999649349187943	WITHOUT_CLASSIFICATION	3.506508120572106E-5	DESIGN
// the default allocator	WITHOUT_CLASSIFICATION	0.9999976787086244	WITHOUT_CLASSIFICATION	2.321291375540709E-6	DESIGN
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999638442138647	WITHOUT_CLASSIFICATION	3.6155786135149696E-5	DESIGN
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9997647116939298	WITHOUT_CLASSIFICATION	2.352883060701966E-4	DESIGN
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999999629975481	WITHOUT_CLASSIFICATION	3.700245195606525E-8	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999634902291462	WITHOUT_CLASSIFICATION	3.6509770853845354E-5	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9998799137981632	WITHOUT_CLASSIFICATION	1.2008620183684711E-4	DESIGN
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999528761486616	WITHOUT_CLASSIFICATION	4.7123851338428427E-5	DESIGN
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999930338669737	WITHOUT_CLASSIFICATION	6.966133026323401E-6	DESIGN
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999728842285545	WITHOUT_CLASSIFICATION	2.7115771445585103E-5	DESIGN
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999975814487193	WITHOUT_CLASSIFICATION	2.4185512807103162E-6	DESIGN
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999936356543448	WITHOUT_CLASSIFICATION	6.364345655125373E-6	DESIGN
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999923825307111	WITHOUT_CLASSIFICATION	7.617469288984399E-6	DESIGN
// a gotcha	WITHOUT_CLASSIFICATION	0.9999984845156744	WITHOUT_CLASSIFICATION	1.5154843256395234E-6	DESIGN
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999982006042951	WITHOUT_CLASSIFICATION	1.7993957049164835E-6	DESIGN
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.999999853763281	WITHOUT_CLASSIFICATION	1.4623671898161759E-7	DESIGN
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9998753374564235	WITHOUT_CLASSIFICATION	1.246625435764182E-4	DESIGN
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999309494097127	WITHOUT_CLASSIFICATION	6.905059028724366E-5	DESIGN
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999999502119717	WITHOUT_CLASSIFICATION	4.9788028294700085E-8	DESIGN
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999953940859121	WITHOUT_CLASSIFICATION	4.605914087977692E-6	DESIGN
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999835231675487	WITHOUT_CLASSIFICATION	1.6476832451274484E-5	DESIGN
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999984057716609	WITHOUT_CLASSIFICATION	1.5942283391136827E-6	DESIGN
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999994716052715	WITHOUT_CLASSIFICATION	5.283947286403476E-7	DESIGN
// provider is not available	WITHOUT_CLASSIFICATION	0.999596983939414	WITHOUT_CLASSIFICATION	4.030160605860662E-4	DESIGN
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9995350761534935	WITHOUT_CLASSIFICATION	4.6492384650660804E-4	DESIGN
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999670764079147	WITHOUT_CLASSIFICATION	3.292359208525877E-5	DESIGN
// RubyDigest	WITHOUT_CLASSIFICATION	0.9994708769544465	WITHOUT_CLASSIFICATION	5.291230455536246E-4	DESIGN
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.8235881439849906	DESIGN	0.1764118560150094	WITHOUT_CLASSIFICATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999977061393647	WITHOUT_CLASSIFICATION	2.2938606354472607E-6	DESIGN
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999643038758567	WITHOUT_CLASSIFICATION	3.56961241433516E-5	DESIGN
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999974511115393	WITHOUT_CLASSIFICATION	2.548888460801259E-6	DESIGN
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.999952504417534	WITHOUT_CLASSIFICATION	4.749558246607206E-5	DESIGN
// JRubyService	WITHOUT_CLASSIFICATION	0.9999841599097126	WITHOUT_CLASSIFICATION	1.5840090287325963E-5	DESIGN
// while	WITHOUT_CLASSIFICATION	0.999985117137386	WITHOUT_CLASSIFICATION	1.4882862613866426E-5	DESIGN
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999557909311052	WITHOUT_CLASSIFICATION	4.420906889468964E-5	DESIGN
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999890824637737	WITHOUT_CLASSIFICATION	1.0917536226386554E-5	DESIGN
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999999102824462	WITHOUT_CLASSIFICATION	8.971755378614047E-8	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999984287064301	WITHOUT_CLASSIFICATION	1.5712935699011636E-6	DESIGN
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.999999963626609	WITHOUT_CLASSIFICATION	3.63733910708319E-8	DESIGN
// silent ?	WITHOUT_CLASSIFICATION	0.999281550096037	WITHOUT_CLASSIFICATION	7.18449903962945E-4	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999526370796867	WITHOUT_CLASSIFICATION	4.736292031337122E-5	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999193447056764	WITHOUT_CLASSIFICATION	8.065529432358473E-5	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999555067778159	WITHOUT_CLASSIFICATION	4.449322218401185E-5	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999611650814736	WITHOUT_CLASSIFICATION	3.883491852645637E-5	DESIGN
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999984422645416	WITHOUT_CLASSIFICATION	1.5577354584194692E-6	DESIGN
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999981092212353	WITHOUT_CLASSIFICATION	1.8907787646259277E-6	DESIGN
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999984320378287	WITHOUT_CLASSIFICATION	1.5679621712252122E-6	DESIGN
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999764282315272	WITHOUT_CLASSIFICATION	2.3571768472789064E-5	DESIGN
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999965242019486	WITHOUT_CLASSIFICATION	3.4757980514595116E-6	DESIGN
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9984884288741032	WITHOUT_CLASSIFICATION	0.0015115711258968365	DESIGN
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999764743627034	WITHOUT_CLASSIFICATION	2.352563729647278E-5	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999526370796867	WITHOUT_CLASSIFICATION	4.736292031337122E-5	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999555067778159	WITHOUT_CLASSIFICATION	4.449322218401185E-5	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999193447056764	WITHOUT_CLASSIFICATION	8.065529432358473E-5	DESIGN
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999800302113849	WITHOUT_CLASSIFICATION	1.9969788615145928E-5	DESIGN
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999463732641337	WITHOUT_CLASSIFICATION	5.3626735866292954E-5	DESIGN
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999880712959905	WITHOUT_CLASSIFICATION	1.192870400953762E-5	DESIGN
// inner switch	WITHOUT_CLASSIFICATION	0.9999564266898656	WITHOUT_CLASSIFICATION	4.357331013444927E-5	DESIGN
// newInstance here	WITHOUT_CLASSIFICATION	0.9999151155794093	WITHOUT_CLASSIFICATION	8.488442059070022E-5	DESIGN
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.999989869221202	WITHOUT_CLASSIFICATION	1.0130778797928605E-5	DESIGN
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999835430701195	WITHOUT_CLASSIFICATION	1.645692988044323E-5	DESIGN
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999918459629742	WITHOUT_CLASSIFICATION	8.154037025786495E-6	DESIGN
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999620873332539	WITHOUT_CLASSIFICATION	3.791266674612243E-5	DESIGN
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999708010713325	WITHOUT_CLASSIFICATION	2.9198928667446596E-5	DESIGN
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999770464902277	WITHOUT_CLASSIFICATION	2.295350977241734E-5	DESIGN
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999860382039018	WITHOUT_CLASSIFICATION	1.3961796098293325E-5	DESIGN
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.999995549926736	WITHOUT_CLASSIFICATION	4.450073263992171E-6	DESIGN
// option_to_str	WITHOUT_CLASSIFICATION	0.9999985826830686	WITHOUT_CLASSIFICATION	1.4173169313836084E-6	DESIGN
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.999852513951297	WITHOUT_CLASSIFICATION	1.474860487029236E-4	DESIGN
// args should be before block	WITHOUT_CLASSIFICATION	0.9995846370129626	WITHOUT_CLASSIFICATION	4.1536298703738787E-4	DESIGN
// args should be at end	WITHOUT_CLASSIFICATION	0.9982248350956558	WITHOUT_CLASSIFICATION	0.0017751649043440739	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999972293365915	WITHOUT_CLASSIFICATION	2.7706634085593194E-6	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999972293365915	WITHOUT_CLASSIFICATION	2.7706634085593194E-6	DESIGN
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999950064005859	WITHOUT_CLASSIFICATION	4.993599414055577E-6	DESIGN
// start a new populator	WITHOUT_CLASSIFICATION	0.9999808476856514	WITHOUT_CLASSIFICATION	1.9152314348672796E-5	DESIGN
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999902033213101	WITHOUT_CLASSIFICATION	9.796678689998421E-6	DESIGN
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999294879394941	WITHOUT_CLASSIFICATION	7.051206050583772E-5	DESIGN
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9996445242413173	WITHOUT_CLASSIFICATION	3.5547575868266997E-4	DESIGN
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999706771548554	WITHOUT_CLASSIFICATION	2.9322845144546304E-5	DESIGN
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999243187299874	WITHOUT_CLASSIFICATION	7.568127001262094E-5	DESIGN
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999562180084847	WITHOUT_CLASSIFICATION	4.378199151539865E-5	DESIGN
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9978430507908855	WITHOUT_CLASSIFICATION	0.0021569492091144805	DESIGN
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999921946991737	WITHOUT_CLASSIFICATION	7.805300826359185E-6	DESIGN
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999733876613852	WITHOUT_CLASSIFICATION	2.661233861487117E-5	DESIGN
//                }	WITHOUT_CLASSIFICATION	0.9999828461380578	WITHOUT_CLASSIFICATION	1.7153861942258683E-5	DESIGN
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9998449818853684	WITHOUT_CLASSIFICATION	1.5501811463159237E-4	DESIGN
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999685258312099	WITHOUT_CLASSIFICATION	3.147416879007879E-5	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9995608083771356	WITHOUT_CLASSIFICATION	4.391916228644527E-4	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999914158003309	WITHOUT_CLASSIFICATION	8.584199669031781E-6	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999939962965351	WITHOUT_CLASSIFICATION	6.003703464914658E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999710254032643	WITHOUT_CLASSIFICATION	2.8974596735650518E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999710254032643	WITHOUT_CLASSIFICATION	2.8974596735650518E-5	DESIGN
// colon3	WITHOUT_CLASSIFICATION	0.999998224858477	WITHOUT_CLASSIFICATION	1.7751415229649812E-6	DESIGN
// Colon3	WITHOUT_CLASSIFICATION	0.9999950366060236	WITHOUT_CLASSIFICATION	4.963393976398287E-6	DESIGN
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9998055400036905	WITHOUT_CLASSIFICATION	1.9445999630963287E-4	DESIGN
// For b.foo	WITHOUT_CLASSIFICATION	0.9999983507906383	WITHOUT_CLASSIFICATION	1.6492093617043735E-6	DESIGN
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999949575429801	WITHOUT_CLASSIFICATION	5.0424570199304535E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999710254032643	WITHOUT_CLASSIFICATION	2.8974596735650518E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999710254032643	WITHOUT_CLASSIFICATION	2.8974596735650518E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999998072394629	WITHOUT_CLASSIFICATION	1.9276053699474856E-7	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999998072394629	WITHOUT_CLASSIFICATION	1.9276053699474856E-7	DESIGN
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999996950181962	WITHOUT_CLASSIFICATION	3.049818038881084E-7	DESIGN
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999977280085989	WITHOUT_CLASSIFICATION	2.271991401225616E-6	DESIGN
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.999999913560958	WITHOUT_CLASSIFICATION	8.643904207280811E-8	DESIGN
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9658680839449416	DESIGN	0.03413191605505826	WITHOUT_CLASSIFICATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999997812814581	WITHOUT_CLASSIFICATION	2.187185418942094E-6	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999997812814581	WITHOUT_CLASSIFICATION	2.187185418942094E-6	DESIGN
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999990190460591	WITHOUT_CLASSIFICATION	9.809539408796249E-7	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999997535653042	WITHOUT_CLASSIFICATION	2.4643469580552347E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999085159944	WITHOUT_CLASSIFICATION	9.148400556271134E-8	DESIGN
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9996899711083839	WITHOUT_CLASSIFICATION	3.100288916161761E-4	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999997749437264	WITHOUT_CLASSIFICATION	2.2505627366868496E-7	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.999985425887942	WITHOUT_CLASSIFICATION	1.4574112058055616E-5	DESIGN
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999545358420444	WITHOUT_CLASSIFICATION	4.546415795570864E-5	DESIGN
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999782562759089	WITHOUT_CLASSIFICATION	2.174372409113564E-5	DESIGN
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999565871252206	WITHOUT_CLASSIFICATION	4.3412874779364205E-5	DESIGN
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.999559313742526	WITHOUT_CLASSIFICATION	4.4068625747404943E-4	DESIGN
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9996599899210437	WITHOUT_CLASSIFICATION	3.400100789562907E-4	DESIGN
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999959829870496	WITHOUT_CLASSIFICATION	4.0170129503880415E-6	DESIGN
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9998170728516336	WITHOUT_CLASSIFICATION	1.829271483664288E-4	DESIGN
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9997299146698653	WITHOUT_CLASSIFICATION	2.700853301346842E-4	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999914158003309	WITHOUT_CLASSIFICATION	8.584199669031781E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999710254032643	WITHOUT_CLASSIFICATION	2.8974596735650518E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999998072394629	WITHOUT_CLASSIFICATION	1.9276053699474856E-7	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.999985425887942	WITHOUT_CLASSIFICATION	1.4574112058055616E-5	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9971610192439687	WITHOUT_CLASSIFICATION	0.002838980756031365	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9971610192439687	WITHOUT_CLASSIFICATION	0.002838980756031365	DESIGN
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999200031004084	WITHOUT_CLASSIFICATION	7.999689959156858E-5	DESIGN
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999998873121057	WITHOUT_CLASSIFICATION	1.1268789423918017E-7	DESIGN
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999835497745999	WITHOUT_CLASSIFICATION	1.6450225400083628E-5	DESIGN
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999999916528205	WITHOUT_CLASSIFICATION	8.347179465893343E-9	DESIGN
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.999999999164593	WITHOUT_CLASSIFICATION	8.354070696914706E-10	DESIGN
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999609704566969	WITHOUT_CLASSIFICATION	3.9029543303037544E-5	DESIGN
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.944739234661728	WITHOUT_CLASSIFICATION	0.05526076533827195	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9911802943720676	WITHOUT_CLASSIFICATION	0.008819705627932559	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999968777303506	WITHOUT_CLASSIFICATION	3.1222696494372935E-6	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9992454161091673	WITHOUT_CLASSIFICATION	7.545838908328313E-4	DESIGN
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9994101328603846	WITHOUT_CLASSIFICATION	5.898671396154272E-4	DESIGN
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9997857153233574	WITHOUT_CLASSIFICATION	2.1428467664270297E-4	DESIGN
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999883420907436	WITHOUT_CLASSIFICATION	1.1657909256414407E-5	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999939962965351	WITHOUT_CLASSIFICATION	6.003703464914658E-6	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999998072394629	WITHOUT_CLASSIFICATION	1.9276053699474856E-7	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999997535653042	WITHOUT_CLASSIFICATION	2.4643469580552347E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999085159944	WITHOUT_CLASSIFICATION	9.148400556271134E-8	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999085159944	WITHOUT_CLASSIFICATION	9.148400556271134E-8	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999997749437264	WITHOUT_CLASSIFICATION	2.2505627366868496E-7	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.999985425887942	WITHOUT_CLASSIFICATION	1.4574112058055616E-5	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.999985425887942	WITHOUT_CLASSIFICATION	1.4574112058055616E-5	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9971610192439687	WITHOUT_CLASSIFICATION	0.002838980756031365	DESIGN
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999978728467747	WITHOUT_CLASSIFICATION	2.1271532252933845E-6	DESIGN
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999987043305496	WITHOUT_CLASSIFICATION	1.2956694503471396E-6	DESIGN
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.999999979880694	WITHOUT_CLASSIFICATION	2.011930598619063E-8	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999167720373215	WITHOUT_CLASSIFICATION	8.322796267839113E-5	DESIGN
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9557446553530696	DESIGN	0.04425534464693048	WITHOUT_CLASSIFICATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.99990946645809	WITHOUT_CLASSIFICATION	9.053354190998724E-5	DESIGN
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999980377361414	WITHOUT_CLASSIFICATION	1.962263858720605E-6	DESIGN
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999931484263418	WITHOUT_CLASSIFICATION	6.851573658207929E-6	DESIGN
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.999999783130531	WITHOUT_CLASSIFICATION	2.1686946898782678E-7	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999997535653042	WITHOUT_CLASSIFICATION	2.4643469580552347E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999085159944	WITHOUT_CLASSIFICATION	9.148400556271134E-8	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999085159944	WITHOUT_CLASSIFICATION	9.148400556271134E-8	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999997749437264	WITHOUT_CLASSIFICATION	2.2505627366868496E-7	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9911802943720676	WITHOUT_CLASSIFICATION	0.008819705627932559	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9992454161091673	WITHOUT_CLASSIFICATION	7.545838908328313E-4	DESIGN
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999999973801835	WITHOUT_CLASSIFICATION	2.619816486432373E-9	DESIGN
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999995034036023	WITHOUT_CLASSIFICATION	4.965963976451782E-7	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999958306093896	WITHOUT_CLASSIFICATION	4.169390610479985E-6	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999958306093896	WITHOUT_CLASSIFICATION	4.169390610479985E-6	DESIGN
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9970693157113796	WITHOUT_CLASSIFICATION	0.0029306842886204	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999848642388849	WITHOUT_CLASSIFICATION	1.5135761115019934E-5	DESIGN
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999169272985375	WITHOUT_CLASSIFICATION	8.307270146238242E-5	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999971181224521	WITHOUT_CLASSIFICATION	2.8818775478771304E-6	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.999995727378098	WITHOUT_CLASSIFICATION	4.27262190199853E-6	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.999995727378098	WITHOUT_CLASSIFICATION	4.27262190199853E-6	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999771531622773	WITHOUT_CLASSIFICATION	2.2846837722685828E-5	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999771531622773	WITHOUT_CLASSIFICATION	2.2846837722685828E-5	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999215098884071	WITHOUT_CLASSIFICATION	7.849011159291854E-5	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999215098884071	WITHOUT_CLASSIFICATION	7.849011159291854E-5	DESIGN
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999991343078388	WITHOUT_CLASSIFICATION	8.656921611679236E-7	DESIGN
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999999819244763	WITHOUT_CLASSIFICATION	1.8075523723465044E-8	DESIGN
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999556039120894	WITHOUT_CLASSIFICATION	4.439608791049659E-5	DESIGN
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999983003693617	WITHOUT_CLASSIFICATION	1.6996306384470277E-6	DESIGN
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999937014822353	WITHOUT_CLASSIFICATION	6.2985177646496594E-6	DESIGN
// pragmas	WITHOUT_CLASSIFICATION	0.9999949076272732	WITHOUT_CLASSIFICATION	5.092372726842279E-6	DESIGN
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.999583376649894	WITHOUT_CLASSIFICATION	4.166233501059226E-4	DESIGN
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.999996040287591	WITHOUT_CLASSIFICATION	3.959712409022469E-6	DESIGN
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9995776563970284	WITHOUT_CLASSIFICATION	4.2234360297160195E-4	DESIGN
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.8135636390749709	WITHOUT_CLASSIFICATION	0.18643636092502905	DESIGN
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999998798323594	WITHOUT_CLASSIFICATION	1.2016764054874803E-7	DESIGN
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999106629263815	WITHOUT_CLASSIFICATION	8.93370736184876E-5	DESIGN
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999185097352642	WITHOUT_CLASSIFICATION	8.149026473569357E-5	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999378963935678	WITHOUT_CLASSIFICATION	6.210360643218909E-5	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999378963935678	WITHOUT_CLASSIFICATION	6.210360643218909E-5	DESIGN
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999956840171491	WITHOUT_CLASSIFICATION	4.315982850925834E-6	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999924562809787	WITHOUT_CLASSIFICATION	7.5437190213674765E-6	DESIGN
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9991083662817737	WITHOUT_CLASSIFICATION	8.916337182263857E-4	DESIGN
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999712688342	WITHOUT_CLASSIFICATION	2.8731165815585162E-8	DESIGN
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999972578918679	WITHOUT_CLASSIFICATION	2.742108132187358E-6	DESIGN
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999944512455015	WITHOUT_CLASSIFICATION	5.548754498513203E-6	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.999781502441487	WITHOUT_CLASSIFICATION	2.1849755851301416E-4	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999996842402569	WITHOUT_CLASSIFICATION	3.157597431198518E-7	DESIGN
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999999998641766	WITHOUT_CLASSIFICATION	1.3582341621253166E-10	DESIGN
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999999981464385	WITHOUT_CLASSIFICATION	1.8535615866800258E-9	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999999269096336	WITHOUT_CLASSIFICATION	7.309036639805892E-8	DESIGN
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999906786351989	WITHOUT_CLASSIFICATION	9.321364801006229E-6	DESIGN
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999999773566739	WITHOUT_CLASSIFICATION	2.2643326173052425E-8	DESIGN
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999620296313014	WITHOUT_CLASSIFICATION	3.797036869851569E-5	DESIGN
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9993620408922911	WITHOUT_CLASSIFICATION	6.379591077089971E-4	DESIGN
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9998957279191995	WITHOUT_CLASSIFICATION	1.0427208080058695E-4	DESIGN
// can't do it	WITHOUT_CLASSIFICATION	0.9999542905078188	WITHOUT_CLASSIFICATION	4.5709492181174864E-5	DESIGN
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999998940667415	WITHOUT_CLASSIFICATION	1.0593325847978744E-7	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999996835287033	WITHOUT_CLASSIFICATION	3.164712967141334E-7	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999996835287033	WITHOUT_CLASSIFICATION	3.164712967141334E-7	DESIGN
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999986250144794	WITHOUT_CLASSIFICATION	1.3749855204828687E-6	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.999791437254385	WITHOUT_CLASSIFICATION	2.085627456149164E-4	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9998125177744369	WITHOUT_CLASSIFICATION	1.8748222556303558E-4	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9998125177744369	WITHOUT_CLASSIFICATION	1.8748222556303558E-4	DESIGN
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999990532437757	WITHOUT_CLASSIFICATION	9.467562242744086E-7	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999657661878848	WITHOUT_CLASSIFICATION	3.423381211510399E-5	DESIGN
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9998385441562111	WITHOUT_CLASSIFICATION	1.6145584378893195E-4	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.999963284115515	WITHOUT_CLASSIFICATION	3.6715884485075564E-5	DESIGN
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999879875492975	WITHOUT_CLASSIFICATION	1.2012450702500736E-5	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999937129879931	WITHOUT_CLASSIFICATION	6.287012006883217E-6	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999937129879931	WITHOUT_CLASSIFICATION	6.287012006883217E-6	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999994944122894	WITHOUT_CLASSIFICATION	5.05587710644327E-7	DESIGN
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999989821381428	WITHOUT_CLASSIFICATION	1.017861857294695E-6	DESIGN
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999988159895606	WITHOUT_CLASSIFICATION	1.1840104393406833E-6	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.999655528836265	WITHOUT_CLASSIFICATION	3.444711637350461E-4	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.999791437254385	WITHOUT_CLASSIFICATION	2.085627456149164E-4	DESIGN
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999122805193826	WITHOUT_CLASSIFICATION	8.771948061736128E-5	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999451313160098	WITHOUT_CLASSIFICATION	5.486868399025884E-5	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999451313160098	WITHOUT_CLASSIFICATION	5.486868399025884E-5	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999698308195762	WITHOUT_CLASSIFICATION	3.0169180423746766E-5	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999716552154	WITHOUT_CLASSIFICATION	2.834478455849423E-8	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999716552154	WITHOUT_CLASSIFICATION	2.834478455849423E-8	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999989442493	WITHOUT_CLASSIFICATION	1.0557507355932815E-9	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999989442493	WITHOUT_CLASSIFICATION	1.0557507355932815E-9	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999989442493	WITHOUT_CLASSIFICATION	1.0557507355932815E-9	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999716552154	WITHOUT_CLASSIFICATION	2.834478455849423E-8	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999716552154	WITHOUT_CLASSIFICATION	2.834478455849423E-8	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999698308195762	WITHOUT_CLASSIFICATION	3.0169180423746766E-5	DESIGN
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.999985646707738	WITHOUT_CLASSIFICATION	1.4353292261899997E-5	DESIGN
// always false or nil	WITHOUT_CLASSIFICATION	0.9999992420320024	WITHOUT_CLASSIFICATION	7.579679976289798E-7	DESIGN
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999996032171147	WITHOUT_CLASSIFICATION	3.967828853106018E-7	DESIGN
// normal	WITHOUT_CLASSIFICATION	0.9999932346438579	WITHOUT_CLASSIFICATION	6.765356142074129E-6	DESIGN
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999980789923	WITHOUT_CLASSIFICATION	1.9210076886672623E-9	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999981275909315	WITHOUT_CLASSIFICATION	1.8724090684322269E-6	DESIGN
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999992520202174	WITHOUT_CLASSIFICATION	7.479797824984747E-7	DESIGN
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999999923429106	WITHOUT_CLASSIFICATION	7.657089418380897E-9	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999999269096336	WITHOUT_CLASSIFICATION	7.309036639805892E-8	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999716552154	WITHOUT_CLASSIFICATION	2.834478455849423E-8	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999716552154	WITHOUT_CLASSIFICATION	2.834478455849423E-8	DESIGN
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999998580235573	WITHOUT_CLASSIFICATION	1.4197644265515245E-7	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999990921816466	WITHOUT_CLASSIFICATION	9.078183533857732E-7	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999965002670034	WITHOUT_CLASSIFICATION	3.4997329966075365E-6	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999089736542	WITHOUT_CLASSIFICATION	9.102634574172419E-8	DESIGN
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999994553390298	WITHOUT_CLASSIFICATION	5.44660970149013E-7	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999999756660399	WITHOUT_CLASSIFICATION	2.4333960080703617E-8	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999960081091	WITHOUT_CLASSIFICATION	3.991890931321886E-9	DESIGN
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.999999216557577	WITHOUT_CLASSIFICATION	7.834424231001356E-7	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999998385171223	WITHOUT_CLASSIFICATION	1.6148287780640405E-7	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9996322515594598	WITHOUT_CLASSIFICATION	3.677484405403159E-4	DESIGN
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999927984401615	WITHOUT_CLASSIFICATION	7.201559838462769E-6	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9999488357435309	WITHOUT_CLASSIFICATION	5.1164256469133975E-5	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.999999981099002	WITHOUT_CLASSIFICATION	1.890099800109339E-8	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999999991364554	WITHOUT_CLASSIFICATION	8.635444820515072E-10	DESIGN
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999999982127243	WITHOUT_CLASSIFICATION	1.7872756026072531E-9	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999935514315618	WITHOUT_CLASSIFICATION	6.448568438275829E-6	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999935514315618	WITHOUT_CLASSIFICATION	6.448568438275829E-6	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999935514315618	WITHOUT_CLASSIFICATION	6.448568438275829E-6	DESIGN
// compile into array	WITHOUT_CLASSIFICATION	0.9999983832329815	WITHOUT_CLASSIFICATION	1.6167670184064758E-6	DESIGN
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999997219331	WITHOUT_CLASSIFICATION	2.780668195337843E-10	DESIGN
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999996617496568	WITHOUT_CLASSIFICATION	3.382503431514128E-7	DESIGN
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999999909708024	WITHOUT_CLASSIFICATION	9.029197548498467E-9	DESIGN
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999974207348843	WITHOUT_CLASSIFICATION	2.579265115717756E-6	DESIGN
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999609994444135	WITHOUT_CLASSIFICATION	3.9000555586445623E-5	DESIGN
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999993956695955	WITHOUT_CLASSIFICATION	6.043304045387459E-7	DESIGN
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999997845424333	WITHOUT_CLASSIFICATION	2.1545756668513441E-7	DESIGN
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999981218100309	WITHOUT_CLASSIFICATION	1.878189969097261E-6	DESIGN
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999998579015681	WITHOUT_CLASSIFICATION	1.4209843195250245E-7	DESIGN
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999939038463815	WITHOUT_CLASSIFICATION	6.0961536184318465E-6	DESIGN
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9995289478786252	WITHOUT_CLASSIFICATION	4.710521213746727E-4	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999994944122894	WITHOUT_CLASSIFICATION	5.05587710644327E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999716552154	WITHOUT_CLASSIFICATION	2.834478455849423E-8	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999716552154	WITHOUT_CLASSIFICATION	2.834478455849423E-8	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999698308195762	WITHOUT_CLASSIFICATION	3.0169180423746766E-5	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999981275909315	WITHOUT_CLASSIFICATION	1.8724090684322269E-6	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999990921816466	WITHOUT_CLASSIFICATION	9.078183533857732E-7	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999089736542	WITHOUT_CLASSIFICATION	9.102634574172419E-8	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999999756660399	WITHOUT_CLASSIFICATION	2.4333960080703617E-8	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999965002670034	WITHOUT_CLASSIFICATION	3.4997329966075365E-6	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999960081091	WITHOUT_CLASSIFICATION	3.991890931321886E-9	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9996322515594598	WITHOUT_CLASSIFICATION	3.677484405403159E-4	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999998385171223	WITHOUT_CLASSIFICATION	1.6148287780640405E-7	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9999488357435309	WITHOUT_CLASSIFICATION	5.1164256469133975E-5	DESIGN
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999784743675535	WITHOUT_CLASSIFICATION	2.15256324464458E-5	DESIGN
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9998748350437893	WITHOUT_CLASSIFICATION	1.251649562107526E-4	DESIGN
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9962182797092137	WITHOUT_CLASSIFICATION	0.0037817202907863487	DESIGN
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999847005064066	WITHOUT_CLASSIFICATION	1.5299493593442164E-5	DESIGN
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9998447155768121	WITHOUT_CLASSIFICATION	1.552844231879378E-4	DESIGN
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999926870790432	WITHOUT_CLASSIFICATION	7.3129209568267144E-6	DESIGN
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999500557243701	WITHOUT_CLASSIFICATION	4.994427562981637E-5	DESIGN
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999966821320726	WITHOUT_CLASSIFICATION	3.3178679274316504E-6	DESIGN
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.999993704864908	WITHOUT_CLASSIFICATION	6.295135092083777E-6	DESIGN
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999974518360959	WITHOUT_CLASSIFICATION	2.548163904001909E-6	DESIGN
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999850517535024	WITHOUT_CLASSIFICATION	1.4948246497682237E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999996241260373	WITHOUT_CLASSIFICATION	3.758739626960297E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999528418054	WITHOUT_CLASSIFICATION	4.7158194601341505E-8	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.989093589025811	WITHOUT_CLASSIFICATION	0.010906410974188917	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999426999255	WITHOUT_CLASSIFICATION	5.730007447591897E-8	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999436284337231	WITHOUT_CLASSIFICATION	5.637156627696506E-5	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999989740004475	WITHOUT_CLASSIFICATION	1.0259995524909751E-5	DESIGN
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999989324088123	WITHOUT_CLASSIFICATION	1.067591187697506E-6	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999999162449731	WITHOUT_CLASSIFICATION	8.375502691536889E-8	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999243735734696	WITHOUT_CLASSIFICATION	7.562642653037115E-5	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999720204739596	WITHOUT_CLASSIFICATION	2.797952604033351E-5	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999986726346779	WITHOUT_CLASSIFICATION	1.3273653220945393E-5	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999986726346779	WITHOUT_CLASSIFICATION	1.3273653220945393E-5	DESIGN
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.999991844257263	WITHOUT_CLASSIFICATION	8.155742737058901E-6	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9995729012411323	WITHOUT_CLASSIFICATION	4.270987588676822E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998936726937223	WITHOUT_CLASSIFICATION	1.063273062777101E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998936726937223	WITHOUT_CLASSIFICATION	1.063273062777101E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998936726937223	WITHOUT_CLASSIFICATION	1.063273062777101E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9998928502272997	WITHOUT_CLASSIFICATION	1.0714977270032568E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9998928502272997	WITHOUT_CLASSIFICATION	1.0714977270032568E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9998928502272997	WITHOUT_CLASSIFICATION	1.0714977270032568E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9998928502272997	WITHOUT_CLASSIFICATION	1.0714977270032568E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996858278022941	WITHOUT_CLASSIFICATION	3.1417219770593256E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996858278022941	WITHOUT_CLASSIFICATION	3.1417219770593256E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996858278022941	WITHOUT_CLASSIFICATION	3.1417219770593256E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9996943072177077	WITHOUT_CLASSIFICATION	3.056927822923349E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9996943072177077	WITHOUT_CLASSIFICATION	3.056927822923349E-4	DESIGN
/*arg2*/	WITHOUT_CLASSIFICATION	0.9997330455882614	WITHOUT_CLASSIFICATION	2.6695441173861284E-4	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9995311637235839	WITHOUT_CLASSIFICATION	4.688362764161166E-4	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9995729012411323	WITHOUT_CLASSIFICATION	4.270987588676822E-4	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999997919990832	WITHOUT_CLASSIFICATION	2.080009168514441E-7	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998936726937223	WITHOUT_CLASSIFICATION	1.063273062777101E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998936726937223	WITHOUT_CLASSIFICATION	1.063273062777101E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9998928502272997	WITHOUT_CLASSIFICATION	1.0714977270032568E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9998928502272997	WITHOUT_CLASSIFICATION	1.0714977270032568E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9998928502272997	WITHOUT_CLASSIFICATION	1.0714977270032568E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996858278022941	WITHOUT_CLASSIFICATION	3.1417219770593256E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996858278022941	WITHOUT_CLASSIFICATION	3.1417219770593256E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9996943072177077	WITHOUT_CLASSIFICATION	3.056927822923349E-4	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9995311637235839	WITHOUT_CLASSIFICATION	4.688362764161166E-4	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999999824823385	WITHOUT_CLASSIFICATION	1.7517661525966356E-8	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999999824823385	WITHOUT_CLASSIFICATION	1.7517661525966356E-8	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999993777038617	WITHOUT_CLASSIFICATION	6.222961383657662E-7	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999993777038617	WITHOUT_CLASSIFICATION	6.222961383657662E-7	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9999784311918113	WITHOUT_CLASSIFICATION	2.156880818870607E-5	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9999784311918113	WITHOUT_CLASSIFICATION	2.156880818870607E-5	DESIGN
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999967507866244	WITHOUT_CLASSIFICATION	3.2492133755584963E-6	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999998966720014	WITHOUT_CLASSIFICATION	1.0332799860232958E-7	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999998966720014	WITHOUT_CLASSIFICATION	1.0332799860232958E-7	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999938158151473	WITHOUT_CLASSIFICATION	6.184184852578094E-6	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999938158151473	WITHOUT_CLASSIFICATION	6.184184852578094E-6	DESIGN
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999998702916734	WITHOUT_CLASSIFICATION	1.2970832655902052E-7	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9999960647004948	WITHOUT_CLASSIFICATION	3.9352995052044E-6	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9999960647004948	WITHOUT_CLASSIFICATION	3.9352995052044E-6	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9996602718834128	WITHOUT_CLASSIFICATION	3.3972811658722823E-4	DESIGN
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999942525102633	WITHOUT_CLASSIFICATION	5.747489736753591E-6	DESIGN
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999995024279403	WITHOUT_CLASSIFICATION	4.975720596677778E-7	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9998928502272997	WITHOUT_CLASSIFICATION	1.0714977270032568E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9998928502272997	WITHOUT_CLASSIFICATION	1.0714977270032568E-4	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9996602718834128	WITHOUT_CLASSIFICATION	3.3972811658722823E-4	DESIGN
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999964087322458	WITHOUT_CLASSIFICATION	3.591267754065759E-6	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999973414445775	WITHOUT_CLASSIFICATION	2.658555422427746E-6	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999973414445775	WITHOUT_CLASSIFICATION	2.658555422427746E-6	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999973414445775	WITHOUT_CLASSIFICATION	2.658555422427746E-6	DESIGN
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999896573088065	WITHOUT_CLASSIFICATION	1.034269119356505E-5	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999839651121906	WITHOUT_CLASSIFICATION	1.6034887809407465E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999982271184061	WITHOUT_CLASSIFICATION	1.7728815938048304E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999982271184061	WITHOUT_CLASSIFICATION	1.7728815938048304E-6	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999929011069906	WITHOUT_CLASSIFICATION	7.098893009513047E-6	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9998299076522782	WITHOUT_CLASSIFICATION	1.7009234772183093E-4	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999732951806332	WITHOUT_CLASSIFICATION	2.6704819366759145E-5	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999448935717912	WITHOUT_CLASSIFICATION	5.510642820881782E-5	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999999537000969	WITHOUT_CLASSIFICATION	4.6299903033143555E-8	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.999993983581162	WITHOUT_CLASSIFICATION	6.016418838023936E-6	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.999993983581162	WITHOUT_CLASSIFICATION	6.016418838023936E-6	DESIGN
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999965518176978	WITHOUT_CLASSIFICATION	3.4481823022172176E-6	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9995607931859559	WITHOUT_CLASSIFICATION	4.3920681404413395E-4	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9995607931859559	WITHOUT_CLASSIFICATION	4.3920681404413395E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9998928502272997	WITHOUT_CLASSIFICATION	1.0714977270032568E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999973414445775	WITHOUT_CLASSIFICATION	2.658555422427746E-6	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999839651121906	WITHOUT_CLASSIFICATION	1.6034887809407465E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999982271184061	WITHOUT_CLASSIFICATION	1.7728815938048304E-6	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999929011069906	WITHOUT_CLASSIFICATION	7.098893009513047E-6	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9998299076522782	WITHOUT_CLASSIFICATION	1.7009234772183093E-4	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999732951806332	WITHOUT_CLASSIFICATION	2.6704819366759145E-5	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999448935717912	WITHOUT_CLASSIFICATION	5.510642820881782E-5	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9995607931859559	WITHOUT_CLASSIFICATION	4.3920681404413395E-4	DESIGN
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9991433871575287	WITHOUT_CLASSIFICATION	8.566128424713317E-4	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9996040167650102	WITHOUT_CLASSIFICATION	3.9598323498971246E-4	DESIGN
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999649050167344	WITHOUT_CLASSIFICATION	3.5094983265508083E-5	DESIGN
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999943724369841	WITHOUT_CLASSIFICATION	5.627563015894383E-6	DESIGN
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999887273488026	WITHOUT_CLASSIFICATION	1.1272651197467848E-5	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999119457006223	WITHOUT_CLASSIFICATION	8.805429937771125E-5	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999913336916065	WITHOUT_CLASSIFICATION	8.666308393418527E-6	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999913336916065	WITHOUT_CLASSIFICATION	8.666308393418527E-6	DESIGN
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999670329990313	WITHOUT_CLASSIFICATION	3.296700096859798E-5	DESIGN
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999634670251109	WITHOUT_CLASSIFICATION	3.6532974889232664E-5	DESIGN
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9995868463058369	WITHOUT_CLASSIFICATION	4.1315369416309173E-4	DESIGN
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999986674159717	WITHOUT_CLASSIFICATION	1.3325840283573387E-6	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999529586885447	WITHOUT_CLASSIFICATION	4.7041311455179564E-5	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999529586885447	WITHOUT_CLASSIFICATION	4.7041311455179564E-5	DESIGN
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999494563016035	WITHOUT_CLASSIFICATION	5.054369839652546E-5	DESIGN
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999744189686616	WITHOUT_CLASSIFICATION	2.558103133841688E-5	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999823133435111	WITHOUT_CLASSIFICATION	1.768665648901629E-5	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999823133435111	WITHOUT_CLASSIFICATION	1.768665648901629E-5	DESIGN
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999878299669777	WITHOUT_CLASSIFICATION	1.2170033022358345E-5	DESIGN
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999075453413515	WITHOUT_CLASSIFICATION	9.245465864845272E-5	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999999537000969	WITHOUT_CLASSIFICATION	4.6299903033143555E-8	DESIGN
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999672727035078	WITHOUT_CLASSIFICATION	3.272729649225881E-5	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999989253821995	WITHOUT_CLASSIFICATION	1.0746178005330821E-6	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999998233475131	WITHOUT_CLASSIFICATION	1.7665248696902075E-7	DESIGN
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999856288847073	WITHOUT_CLASSIFICATION	1.4371115292758908E-5	DESIGN
// load Object under value	WITHOUT_CLASSIFICATION	0.999968742133722	WITHOUT_CLASSIFICATION	3.125786627796927E-5	DESIGN
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999931030436435	WITHOUT_CLASSIFICATION	6.896956356391002E-6	DESIGN
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999921781168479	WITHOUT_CLASSIFICATION	7.82188315201107E-6	DESIGN
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.997824101482024	WITHOUT_CLASSIFICATION	0.002175898517975878	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.999969176786569	WITHOUT_CLASSIFICATION	3.082321343097867E-5	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.999969176786569	WITHOUT_CLASSIFICATION	3.082321343097867E-5	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999985405446026	WITHOUT_CLASSIFICATION	1.4594553973519801E-6	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999985405446026	WITHOUT_CLASSIFICATION	1.4594553973519801E-6	DESIGN
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999999526583293	WITHOUT_CLASSIFICATION	4.7341670771899764E-8	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999765404821783	WITHOUT_CLASSIFICATION	2.3459517821660974E-5	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999765404821783	WITHOUT_CLASSIFICATION	2.3459517821660974E-5	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999765404821783	WITHOUT_CLASSIFICATION	2.3459517821660974E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999977748160007	WITHOUT_CLASSIFICATION	2.225183999327386E-6	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999994585681299	WITHOUT_CLASSIFICATION	5.414318702118942E-7	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999994585681299	WITHOUT_CLASSIFICATION	5.414318702118942E-7	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999648100262	WITHOUT_CLASSIFICATION	3.518997372599417E-8	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9999819303406712	WITHOUT_CLASSIFICATION	1.8069659328868757E-5	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999978527760627	WITHOUT_CLASSIFICATION	2.147223937343503E-6	DESIGN
// skip catch block	WITHOUT_CLASSIFICATION	0.9999994473652122	WITHOUT_CLASSIFICATION	5.526347878553957E-7	DESIGN
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999991084825282	WITHOUT_CLASSIFICATION	8.915174718736864E-7	DESIGN
// next jump	WITHOUT_CLASSIFICATION	0.9998698644199389	WITHOUT_CLASSIFICATION	1.3013558006121987E-4	DESIGN
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.999995623426791	WITHOUT_CLASSIFICATION	4.376573209005853E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999528418054	WITHOUT_CLASSIFICATION	4.7158194601341505E-8	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999528418054	WITHOUT_CLASSIFICATION	4.7158194601341505E-8	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999977748160007	WITHOUT_CLASSIFICATION	2.225183999327386E-6	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999648100262	WITHOUT_CLASSIFICATION	3.518997372599417E-8	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9998691170353438	WITHOUT_CLASSIFICATION	1.308829646562968E-4	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9999819303406712	WITHOUT_CLASSIFICATION	1.8069659328868757E-5	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999978527760627	WITHOUT_CLASSIFICATION	2.147223937343503E-6	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999990418345814	WITHOUT_CLASSIFICATION	9.581654185228964E-7	DESIGN
// break jump	WITHOUT_CLASSIFICATION	0.9998873507207651	WITHOUT_CLASSIFICATION	1.1264927923494953E-4	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999991847283819	WITHOUT_CLASSIFICATION	8.152716181525748E-7	DESIGN
//[reg]	WITHOUT_CLASSIFICATION	0.9999453120078471	WITHOUT_CLASSIFICATION	5.468799215294352E-5	DESIGN
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999998040694975	WITHOUT_CLASSIFICATION	1.9593050256135973E-7	DESIGN
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999993123671643	WITHOUT_CLASSIFICATION	6.876328355950043E-7	DESIGN
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999977393108949	WITHOUT_CLASSIFICATION	2.2606891050390067E-6	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999990418345814	WITHOUT_CLASSIFICATION	9.581654185228964E-7	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9993612784040726	WITHOUT_CLASSIFICATION	6.387215959273421E-4	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9993612784040726	WITHOUT_CLASSIFICATION	6.387215959273421E-4	DESIGN
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.999996348366243	WITHOUT_CLASSIFICATION	3.651633756942143E-6	DESIGN
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999580878243822	WITHOUT_CLASSIFICATION	4.191217561788906E-5	DESIGN
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.999775353945795	WITHOUT_CLASSIFICATION	2.2464605420504418E-4	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9997892392835325	WITHOUT_CLASSIFICATION	2.1076071646755946E-4	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999995916312614	WITHOUT_CLASSIFICATION	4.083687385979854E-7	DESIGN
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999754460014815	WITHOUT_CLASSIFICATION	2.455399851854401E-5	DESIGN
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999977246529301	WITHOUT_CLASSIFICATION	2.2753470698212865E-6	DESIGN
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9998522929827042	WITHOUT_CLASSIFICATION	1.4770701729582784E-4	DESIGN
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999999082338388	WITHOUT_CLASSIFICATION	9.176616128199067E-8	DESIGN
// false // zero	WITHOUT_CLASSIFICATION	0.9999986806878363	WITHOUT_CLASSIFICATION	1.3193121636598655E-6	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999822161433373	WITHOUT_CLASSIFICATION	1.778385666267999E-5	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9997892392835325	WITHOUT_CLASSIFICATION	2.1076071646755946E-4	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999995916312614	WITHOUT_CLASSIFICATION	4.083687385979854E-7	DESIGN
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.999892668163109	WITHOUT_CLASSIFICATION	1.0733183689098985E-4	DESIGN
// push false	WITHOUT_CLASSIFICATION	0.9999974495452167	WITHOUT_CLASSIFICATION	2.55045478320674E-6	DESIGN
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999999712096588	WITHOUT_CLASSIFICATION	2.8790341186819973E-8	DESIGN
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999984232665159	WITHOUT_CLASSIFICATION	1.5767334840990906E-6	DESIGN
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999967739059039	WITHOUT_CLASSIFICATION	3.22609409604213E-6	DESIGN
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999943506928259	WITHOUT_CLASSIFICATION	5.64930717413675E-6	DESIGN
//[C]	WITHOUT_CLASSIFICATION	0.9998035943181166	WITHOUT_CLASSIFICATION	1.964056818833494E-4	DESIGN
// push true	WITHOUT_CLASSIFICATION	0.9999971231892073	WITHOUT_CLASSIFICATION	2.8768107925905284E-6	DESIGN
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999880110280008	WITHOUT_CLASSIFICATION	1.1988971999219552E-5	DESIGN
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999840857726967	WITHOUT_CLASSIFICATION	1.5914227303260744E-5	DESIGN
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999921964507761	WITHOUT_CLASSIFICATION	7.803549224027629E-6	DESIGN
//[boolean]	WITHOUT_CLASSIFICATION	0.9999930724269384	WITHOUT_CLASSIFICATION	6.927573061684755E-6	DESIGN
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999435229385578	WITHOUT_CLASSIFICATION	5.64770614422201E-5	DESIGN
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9873259781554006	WITHOUT_CLASSIFICATION	0.012674021844599388	DESIGN
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9453037624542457	WITHOUT_CLASSIFICATION	0.05469623754575422	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.999998921975066	WITHOUT_CLASSIFICATION	1.0780249340000164E-6	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.999967206352824	WITHOUT_CLASSIFICATION	3.279364717603626E-5	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9998233998354827	WITHOUT_CLASSIFICATION	1.7660016451735743E-4	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999993569024653	WITHOUT_CLASSIFICATION	6.430975346387953E-7	DESIGN
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999984428838858	WITHOUT_CLASSIFICATION	1.5571161141734665E-6	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.999967206352824	WITHOUT_CLASSIFICATION	3.279364717603626E-5	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9998233998354827	WITHOUT_CLASSIFICATION	1.7660016451735743E-4	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999993569024653	WITHOUT_CLASSIFICATION	6.430975346387953E-7	DESIGN
// finally with exception	WITHOUT_CLASSIFICATION	0.9986789082404398	WITHOUT_CLASSIFICATION	0.0013210917595602636	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999542921101723	WITHOUT_CLASSIFICATION	4.570788982772952E-5	DESIGN
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.99935472216489	WITHOUT_CLASSIFICATION	6.452778351100101E-4	DESIGN
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999958731614398	WITHOUT_CLASSIFICATION	4.1268385602332205E-6	DESIGN
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9989654729461518	WITHOUT_CLASSIFICATION	0.0010345270538482164	DESIGN
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999846021995561	WITHOUT_CLASSIFICATION	1.5397800443926034E-5	DESIGN
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999233746962867	WITHOUT_CLASSIFICATION	7.662530371339171E-5	DESIGN
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999098698167539	WITHOUT_CLASSIFICATION	9.013018324600212E-5	DESIGN
// script object	WITHOUT_CLASSIFICATION	0.9999939161083422	WITHOUT_CLASSIFICATION	6.083891657847255E-6	DESIGN
// arities	WITHOUT_CLASSIFICATION	0.9999613337173398	WITHOUT_CLASSIFICATION	3.866628266016757E-5	DESIGN
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9960889119758676	DESIGN	0.003911088024132303	WITHOUT_CLASSIFICATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.999999796065336	WITHOUT_CLASSIFICATION	2.0393466408106611E-7	DESIGN
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9994820260776427	WITHOUT_CLASSIFICATION	5.179739223574342E-4	DESIGN
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999999674560515	WITHOUT_CLASSIFICATION	3.25439484227632E-8	DESIGN
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999999124139863	WITHOUT_CLASSIFICATION	8.758601366062676E-8	DESIGN
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999995617230614	WITHOUT_CLASSIFICATION	4.3827693863736756E-7	DESIGN
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999982168559861	WITHOUT_CLASSIFICATION	1.7831440138725115E-6	DESIGN
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9695104741979924	WITHOUT_CLASSIFICATION	0.030489525802007617	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9997692324827886	WITHOUT_CLASSIFICATION	2.3076751721135832E-4	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999995247055715	WITHOUT_CLASSIFICATION	4.752944284809204E-7	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999397717170755	WITHOUT_CLASSIFICATION	6.022828292452765E-5	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999989912912414	WITHOUT_CLASSIFICATION	1.0087087586574744E-6	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999989912912414	WITHOUT_CLASSIFICATION	1.0087087586574744E-6	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999946611581557	WITHOUT_CLASSIFICATION	5.338841844226883E-6	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999946611581557	WITHOUT_CLASSIFICATION	5.338841844226883E-6	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999821055881551	WITHOUT_CLASSIFICATION	1.789441184482708E-5	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999821055881551	WITHOUT_CLASSIFICATION	1.789441184482708E-5	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999999724002053	WITHOUT_CLASSIFICATION	2.7599794758020478E-8	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999939535195	WITHOUT_CLASSIFICATION	6.046480555795546E-9	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999885134823613	WITHOUT_CLASSIFICATION	1.1486517638710148E-5	DESIGN
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999973213112258	WITHOUT_CLASSIFICATION	2.6786887742015435E-6	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999986474354	WITHOUT_CLASSIFICATION	1.3525646491018863E-9	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9992194667294394	WITHOUT_CLASSIFICATION	7.805332705606065E-4	DESIGN
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999999633017483	WITHOUT_CLASSIFICATION	3.669825165122058E-8	DESIGN
// then optional args	WITHOUT_CLASSIFICATION	0.9999969933678784	WITHOUT_CLASSIFICATION	3.006632121679001E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999528418054	WITHOUT_CLASSIFICATION	4.7158194601341505E-8	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999999724002053	WITHOUT_CLASSIFICATION	2.7599794758020478E-8	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999939535195	WITHOUT_CLASSIFICATION	6.046480555795546E-9	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999885134823613	WITHOUT_CLASSIFICATION	1.1486517638710148E-5	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999986474354	WITHOUT_CLASSIFICATION	1.3525646491018863E-9	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9992194667294394	WITHOUT_CLASSIFICATION	7.805332705606065E-4	DESIGN
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999993213350479	WITHOUT_CLASSIFICATION	6.786649521724883E-7	DESIGN
// finally, post args	WITHOUT_CLASSIFICATION	0.9999775297608646	WITHOUT_CLASSIFICATION	2.247023913529994E-5	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9996966643793762	WITHOUT_CLASSIFICATION	3.033356206238665E-4	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9996966643793762	WITHOUT_CLASSIFICATION	3.033356206238665E-4	DESIGN
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.999968482760244	WITHOUT_CLASSIFICATION	3.1517239756035795E-5	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999999890829443	WITHOUT_CLASSIFICATION	1.0917055735187036E-8	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999588887491283	WITHOUT_CLASSIFICATION	4.111125087164538E-5	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999106830824	WITHOUT_CLASSIFICATION	8.931691761765361E-8	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999106830824	WITHOUT_CLASSIFICATION	8.931691761765361E-8	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999978451796538	WITHOUT_CLASSIFICATION	2.154820346053479E-6	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999995133980849	WITHOUT_CLASSIFICATION	4.866019151309719E-7	DESIGN
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999999449245071	WITHOUT_CLASSIFICATION	5.507549300197815E-8	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999665698240321	WITHOUT_CLASSIFICATION	3.3430175967876226E-5	DESIGN
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999256321925003	WITHOUT_CLASSIFICATION	7.436780749977953E-5	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.989093589025811	WITHOUT_CLASSIFICATION	0.010906410974188917	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999426999255	WITHOUT_CLASSIFICATION	5.730007447591897E-8	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999436284337231	WITHOUT_CLASSIFICATION	5.637156627696506E-5	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999989740004475	WITHOUT_CLASSIFICATION	1.0259995524909751E-5	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999243735734696	WITHOUT_CLASSIFICATION	7.562642653037115E-5	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999720204739596	WITHOUT_CLASSIFICATION	2.797952604033351E-5	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999978451796538	WITHOUT_CLASSIFICATION	2.154820346053479E-6	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999995133980849	WITHOUT_CLASSIFICATION	4.866019151309719E-7	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999665698240321	WITHOUT_CLASSIFICATION	3.3430175967876226E-5	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999996910465966	WITHOUT_CLASSIFICATION	3.0895340337959504E-7	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999588887491283	WITHOUT_CLASSIFICATION	4.111125087164538E-5	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999588887491283	WITHOUT_CLASSIFICATION	4.111125087164538E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999822161433373	WITHOUT_CLASSIFICATION	1.778385666267999E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999822161433373	WITHOUT_CLASSIFICATION	1.778385666267999E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999985318405957	WITHOUT_CLASSIFICATION	1.4681594043321478E-6	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999985318405957	WITHOUT_CLASSIFICATION	1.4681594043321478E-6	DESIGN
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999999769918083	WITHOUT_CLASSIFICATION	2.3008191605494085E-8	DESIGN
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999997801889728	WITHOUT_CLASSIFICATION	2.198110270110281E-7	DESIGN
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9997243513419207	WITHOUT_CLASSIFICATION	2.7564865807926E-4	DESIGN
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999997306984185	WITHOUT_CLASSIFICATION	2.69301581409769E-7	DESIGN
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999999816157412	WITHOUT_CLASSIFICATION	1.838425877323546E-8	DESIGN
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999999727095212	WITHOUT_CLASSIFICATION	2.7290478749238244E-8	DESIGN
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999579451816434	WITHOUT_CLASSIFICATION	4.2054818356544525E-5	DESIGN
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9994477213832679	WITHOUT_CLASSIFICATION	5.522786167320883E-4	DESIGN
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999997023380892	WITHOUT_CLASSIFICATION	2.976619108859335E-7	DESIGN
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999995410830578	WITHOUT_CLASSIFICATION	4.5891694223074655E-7	DESIGN
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9996183866449384	WITHOUT_CLASSIFICATION	3.816133550615554E-4	DESIGN
// verify the class	WITHOUT_CLASSIFICATION	0.9999923933469402	WITHOUT_CLASSIFICATION	7.606653059763615E-6	DESIGN
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999723273882847	WITHOUT_CLASSIFICATION	2.7672611715237968E-5	DESIGN
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.99999999376706	WITHOUT_CLASSIFICATION	6.232940051383847E-9	DESIGN
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999999991300188	WITHOUT_CLASSIFICATION	8.699811896117331E-10	DESIGN
// thread context	WITHOUT_CLASSIFICATION	0.9999823889609052	WITHOUT_CLASSIFICATION	1.7611039094866607E-5	DESIGN
// line number	WITHOUT_CLASSIFICATION	0.9999948754233652	WITHOUT_CLASSIFICATION	5.1245766349126346E-6	DESIGN
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999984025057694	WITHOUT_CLASSIFICATION	1.5974942306277238E-6	DESIGN
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999999834999654	WITHOUT_CLASSIFICATION	1.6500034611207943E-8	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999426999255	WITHOUT_CLASSIFICATION	5.730007447591897E-8	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999989740004475	WITHOUT_CLASSIFICATION	1.0259995524909751E-5	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999986726346779	WITHOUT_CLASSIFICATION	1.3273653220945393E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999982271184061	WITHOUT_CLASSIFICATION	1.7728815938048304E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999982271184061	WITHOUT_CLASSIFICATION	1.7728815938048304E-6	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999996910465966	WITHOUT_CLASSIFICATION	3.0895340337959504E-7	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999588887491283	WITHOUT_CLASSIFICATION	4.111125087164538E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999822161433373	WITHOUT_CLASSIFICATION	1.778385666267999E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999985318405957	WITHOUT_CLASSIFICATION	1.4681594043321478E-6	DESIGN
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999613026100674	WITHOUT_CLASSIFICATION	3.869738993255896E-5	DESIGN
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999511904853101	WITHOUT_CLASSIFICATION	4.8809514689999516E-5	DESIGN
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999978371535866	WITHOUT_CLASSIFICATION	2.1628464134029878E-6	DESIGN
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9873208645644854	WITHOUT_CLASSIFICATION	0.012679135435514495	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9978504615364642	WITHOUT_CLASSIFICATION	0.0021495384635357865	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9978504615364642	WITHOUT_CLASSIFICATION	0.0021495384635357865	DESIGN
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999997108772958	WITHOUT_CLASSIFICATION	2.8912270422157064E-7	DESIGN
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999984727446791	WITHOUT_CLASSIFICATION	1.5272553208115659E-6	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999898525757974	WITHOUT_CLASSIFICATION	1.0147424202575628E-5	DESIGN
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999978608654747	WITHOUT_CLASSIFICATION	2.1391345251909693E-6	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9998724754144389	WITHOUT_CLASSIFICATION	1.275245855611072E-4	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9998724754144389	WITHOUT_CLASSIFICATION	1.275245855611072E-4	DESIGN
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9986162384249844	WITHOUT_CLASSIFICATION	0.001383761575015629	DESIGN
// normal closure	WITHOUT_CLASSIFICATION	0.9999952881638541	WITHOUT_CLASSIFICATION	4.71183614593483E-6	DESIGN
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999374110935157	WITHOUT_CLASSIFICATION	6.258890648422567E-5	DESIGN
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9446528154130773	WITHOUT_CLASSIFICATION	0.05534718458692269	DESIGN
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999543974990173	WITHOUT_CLASSIFICATION	4.560250098270197E-5	DESIGN
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999283712384994	WITHOUT_CLASSIFICATION	7.162876150057539E-5	DESIGN
// Ruby name 	WITHOUT_CLASSIFICATION	0.9997326726692007	WITHOUT_CLASSIFICATION	2.6732733079921884E-4	DESIGN
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999959616051777	WITHOUT_CLASSIFICATION	4.03839482230744E-6	DESIGN
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9840381477685546	WITHOUT_CLASSIFICATION	0.01596185223144536	DESIGN
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9957797563357917	WITHOUT_CLASSIFICATION	0.00422024366420828	DESIGN
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9991965847420223	WITHOUT_CLASSIFICATION	8.034152579777101E-4	DESIGN
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999688759195202	WITHOUT_CLASSIFICATION	3.112408047970882E-5	DESIGN
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999807159847278	WITHOUT_CLASSIFICATION	1.9284015272247497E-5	DESIGN
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999956571216554	WITHOUT_CLASSIFICATION	4.342878344537801E-6	DESIGN
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999961172593618	WITHOUT_CLASSIFICATION	3.8827406382332165E-6	DESIGN
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999071382928689	WITHOUT_CLASSIFICATION	9.286170713108449E-5	DESIGN
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9990986202203408	WITHOUT_CLASSIFICATION	9.01379779659302E-4	DESIGN
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999891468559547	WITHOUT_CLASSIFICATION	1.0853144045275361E-5	DESIGN
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999951920954873	WITHOUT_CLASSIFICATION	4.807904512785736E-6	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9999996950970886	WITHOUT_CLASSIFICATION	3.049029113197848E-7	DESIGN
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999961582727674	WITHOUT_CLASSIFICATION	3.841727232625146E-6	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9999933690050693	WITHOUT_CLASSIFICATION	6.630994930704941E-6	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9999933690050693	WITHOUT_CLASSIFICATION	6.630994930704941E-6	DESIGN
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9895240155179186	WITHOUT_CLASSIFICATION	0.010475984482081455	DESIGN
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999960600290863	WITHOUT_CLASSIFICATION	3.939970913813895E-6	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999996842402569	WITHOUT_CLASSIFICATION	3.157597431198518E-7	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999996842402569	WITHOUT_CLASSIFICATION	3.157597431198518E-7	DESIGN
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.999752216468869	DESIGN	2.477835311310376E-4	WITHOUT_CLASSIFICATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9998544932783568	WITHOUT_CLASSIFICATION	1.4550672164318434E-4	DESIGN
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999695954546947	WITHOUT_CLASSIFICATION	3.0404545305383177E-5	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999970118104922	WITHOUT_CLASSIFICATION	2.988189507835821E-6	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999970118104922	WITHOUT_CLASSIFICATION	2.988189507835821E-6	DESIGN
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.6702292904445597	WITHOUT_CLASSIFICATION	0.32977070955544024	DESIGN
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999952153285	WITHOUT_CLASSIFICATION	4.784671525595047E-9	DESIGN
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999999417906692	WITHOUT_CLASSIFICATION	5.820933087110963E-8	DESIGN
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999999775212443	WITHOUT_CLASSIFICATION	2.2478755672493732E-8	DESIGN
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999584044494406	WITHOUT_CLASSIFICATION	4.159555055941321E-5	DESIGN
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999996318649861	WITHOUT_CLASSIFICATION	3.6813501398788217E-7	DESIGN
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999717103886137	WITHOUT_CLASSIFICATION	2.828961138629671E-5	DESIGN
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999997385373347	WITHOUT_CLASSIFICATION	2.61462665310229E-7	DESIGN
// build each "when"	WITHOUT_CLASSIFICATION	0.9999987993369478	WITHOUT_CLASSIFICATION	1.2006630521637412E-6	DESIGN
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9997067598042257	WITHOUT_CLASSIFICATION	2.9324019577424995E-4	DESIGN
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.999999395744134	WITHOUT_CLASSIFICATION	6.042558659799743E-7	DESIGN
// now emit bodies	WITHOUT_CLASSIFICATION	0.999981777439307	WITHOUT_CLASSIFICATION	1.8222560692967376E-5	DESIGN
// close it out	WITHOUT_CLASSIFICATION	0.9999974567749794	WITHOUT_CLASSIFICATION	2.5432250206185998E-6	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999907851470518	WITHOUT_CLASSIFICATION	9.214852948338829E-6	DESIGN
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9997915981771329	WITHOUT_CLASSIFICATION	2.0840182286705803E-4	DESIGN
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999993669233133	WITHOUT_CLASSIFICATION	6.330766867543148E-7	DESIGN
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999917810363	WITHOUT_CLASSIFICATION	8.218963688075238E-9	DESIGN
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999635867675994	WITHOUT_CLASSIFICATION	3.641323240060836E-5	DESIGN
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999935422130257	WITHOUT_CLASSIFICATION	6.457786974228252E-6	DESIGN
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999790176404899	WITHOUT_CLASSIFICATION	2.0982359510147096E-5	DESIGN
// Instance method	WITHOUT_CLASSIFICATION	0.9999967997436937	WITHOUT_CLASSIFICATION	3.2002563063425695E-6	DESIGN
// Class method	WITHOUT_CLASSIFICATION	0.9999832982813569	WITHOUT_CLASSIFICATION	1.6701718643067724E-5	DESIGN
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9998308140259913	WITHOUT_CLASSIFICATION	1.6918597400868916E-4	DESIGN
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.99998743497383	WITHOUT_CLASSIFICATION	1.2565026170080452E-5	DESIGN
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999822967588242	WITHOUT_CLASSIFICATION	1.770324117582851E-5	DESIGN
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999791172322808	WITHOUT_CLASSIFICATION	2.08827677191631E-5	DESIGN
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999808687331213	WITHOUT_CLASSIFICATION	1.9131266878664662E-5	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999955534362	WITHOUT_CLASSIFICATION	4.44656376974205E-9	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999588564945633	WITHOUT_CLASSIFICATION	4.114350543670736E-5	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999992992115303	WITHOUT_CLASSIFICATION	7.007884695986718E-7	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.999994883064022	WITHOUT_CLASSIFICATION	5.1169359780583E-6	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999907851470518	WITHOUT_CLASSIFICATION	9.214852948338829E-6	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999955534362	WITHOUT_CLASSIFICATION	4.44656376974205E-9	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999588564945633	WITHOUT_CLASSIFICATION	4.114350543670736E-5	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.999994883064022	WITHOUT_CLASSIFICATION	5.1169359780583E-6	DESIGN
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999900386494543	WITHOUT_CLASSIFICATION	9.961350545586528E-6	DESIGN
// Build the new module	WITHOUT_CLASSIFICATION	0.9999991332144778	WITHOUT_CLASSIFICATION	8.667855222515019E-7	DESIGN
// Build the module body	WITHOUT_CLASSIFICATION	0.9999992018187444	WITHOUT_CLASSIFICATION	7.981812556267706E-7	DESIGN
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999998346037916	WITHOUT_CLASSIFICATION	1.6539620834173546E-7	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999034223405172	WITHOUT_CLASSIFICATION	9.657765948281137E-5	DESIGN
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999110255485676	WITHOUT_CLASSIFICATION	8.897445143239637E-5	DESIGN
// get attr	WITHOUT_CLASSIFICATION	0.9999969243917884	WITHOUT_CLASSIFICATION	3.0756082114690823E-6	DESIGN
// call operator	WITHOUT_CLASSIFICATION	0.9999860898852971	WITHOUT_CLASSIFICATION	1.3910114702889867E-5	DESIGN
// set attr	WITHOUT_CLASSIFICATION	0.9999914123448871	WITHOUT_CLASSIFICATION	8.587655112974098E-6	DESIGN
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9980540382060552	WITHOUT_CLASSIFICATION	0.0019459617939448493	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9998405553024828	WITHOUT_CLASSIFICATION	1.5944469751709293E-4	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9998405553024828	WITHOUT_CLASSIFICATION	1.5944469751709293E-4	DESIGN
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.999998810826721	WITHOUT_CLASSIFICATION	1.1891732788721428E-6	DESIGN
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999999409318332	WITHOUT_CLASSIFICATION	5.906816684538349E-8	DESIGN
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999983406694	WITHOUT_CLASSIFICATION	1.6593305552787797E-9	DESIGN
// Top-level script!	WITHOUT_CLASSIFICATION	0.9998757236684179	WITHOUT_CLASSIFICATION	1.2427633158214378E-4	DESIGN
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999990475844374	WITHOUT_CLASSIFICATION	9.524155626820655E-7	DESIGN
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999994151002691	WITHOUT_CLASSIFICATION	5.848997308445966E-7	DESIGN
// What handles warnings	WITHOUT_CLASSIFICATION	0.9820168488924913	WITHOUT_CLASSIFICATION	0.01798315110750869	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9997442222276276	WITHOUT_CLASSIFICATION	2.5577777237237764E-4	DESIGN
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999980599415358	WITHOUT_CLASSIFICATION	1.9400584642270476E-6	DESIGN
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999997777891223	WITHOUT_CLASSIFICATION	2.222108777013299E-7	DESIGN
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.999995012922251	WITHOUT_CLASSIFICATION	4.987077748999279E-6	DESIGN
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999983047371286	WITHOUT_CLASSIFICATION	1.69526287137863E-6	DESIGN
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999999994753044	WITHOUT_CLASSIFICATION	5.246957154412566E-10	DESIGN
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999995661035509	WITHOUT_CLASSIFICATION	4.3389644919852575E-7	DESIGN
// alu operations	WITHOUT_CLASSIFICATION	0.999999391957179	WITHOUT_CLASSIFICATION	6.080428209258912E-7	DESIGN
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999890038408296	WITHOUT_CLASSIFICATION	1.099615917045016E-5	DESIGN
// closure instructions	WITHOUT_CLASSIFICATION	0.9999976238444369	WITHOUT_CLASSIFICATION	2.3761555630200934E-6	DESIGN
// eval instructions	WITHOUT_CLASSIFICATION	0.9999986425113976	WITHOUT_CLASSIFICATION	1.3574886024306526E-6	DESIGN
// def instructions	WITHOUT_CLASSIFICATION	0.9999505754294162	WITHOUT_CLASSIFICATION	4.942457058370683E-5	DESIGN
// exception instructions	WITHOUT_CLASSIFICATION	0.9999559316665858	WITHOUT_CLASSIFICATION	4.406833341422106E-5	DESIGN
// Loads	WITHOUT_CLASSIFICATION	0.999991199836932	WITHOUT_CLASSIFICATION	8.800163068066032E-6	DESIGN
// Stores	WITHOUT_CLASSIFICATION	0.9999944959200083	WITHOUT_CLASSIFICATION	5.504079991721315E-6	DESIGN
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999991739934511	WITHOUT_CLASSIFICATION	8.260065489640091E-7	DESIGN
// others	WITHOUT_CLASSIFICATION	0.9999979202835882	WITHOUT_CLASSIFICATION	2.079716411787713E-6	DESIGN
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999987577988568	WITHOUT_CLASSIFICATION	1.2422011431812512E-6	DESIGN
// optimization guards	WITHOUT_CLASSIFICATION	0.999988764532546	WITHOUT_CLASSIFICATION	1.1235467453968535E-5	DESIGN
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.6919856949586067	WITHOUT_CLASSIFICATION	0.3080143050413934	DESIGN
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999956126538281	WITHOUT_CLASSIFICATION	4.387346171919174E-6	DESIGN
// scripts	WITHOUT_CLASSIFICATION	0.9999820870019809	WITHOUT_CLASSIFICATION	1.7912998019120323E-5	DESIGN
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999910583419896	WITHOUT_CLASSIFICATION	8.941658010442391E-6	DESIGN
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999975588265066	WITHOUT_CLASSIFICATION	2.4411734933969966E-6	DESIGN
// methods and closures	WITHOUT_CLASSIFICATION	0.999986599040226	WITHOUT_CLASSIFICATION	1.3400959774027263E-5	DESIGN
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999997568879063	WITHOUT_CLASSIFICATION	2.4311209369438097E-7	DESIGN
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.999998605529079	WITHOUT_CLASSIFICATION	1.3944709209680853E-6	DESIGN
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.99999618115194	WITHOUT_CLASSIFICATION	3.8188480599996155E-6	DESIGN
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999933504047988	WITHOUT_CLASSIFICATION	6.6495952011422055E-6	DESIGN
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999991053662614	WITHOUT_CLASSIFICATION	8.946337386571792E-7	DESIGN
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999595337944385	WITHOUT_CLASSIFICATION	4.04662055614832E-5	DESIGN
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999997771295204	WITHOUT_CLASSIFICATION	2.2287047952096804E-7	DESIGN
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999999215240712	WITHOUT_CLASSIFICATION	7.847592879697941E-8	DESIGN
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9998525765411378	WITHOUT_CLASSIFICATION	1.4742345886212857E-4	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9966904426654523	DESIGN	0.0033095573345475996	WITHOUT_CLASSIFICATION
// Readline	WITHOUT_CLASSIFICATION	0.9999624999740948	WITHOUT_CLASSIFICATION	3.75000259051501E-5	DESIGN
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9969533191882433	WITHOUT_CLASSIFICATION	0.003046680811756839	DESIGN
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9987633196923329	WITHOUT_CLASSIFICATION	0.0012366803076670253	DESIGN
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9859904757772838	WITHOUT_CLASSIFICATION	0.014009524222716221	DESIGN
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9795397618591064	WITHOUT_CLASSIFICATION	0.020460238140893594	DESIGN
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9890462745404641	WITHOUT_CLASSIFICATION	0.010953725459535919	DESIGN
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999979061972676	WITHOUT_CLASSIFICATION	2.09380273238607E-6	DESIGN
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999914711948552	WITHOUT_CLASSIFICATION	8.528805144891388E-6	DESIGN
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999233597783751	WITHOUT_CLASSIFICATION	7.664022162487906E-5	DESIGN
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999996145861566	WITHOUT_CLASSIFICATION	3.854138434783541E-7	DESIGN
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999573516856952	WITHOUT_CLASSIFICATION	4.2648314304803506E-5	DESIGN
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999995455584078	WITHOUT_CLASSIFICATION	4.544415921927028E-7	DESIGN
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9995902183955379	WITHOUT_CLASSIFICATION	4.097816044621184E-4	DESIGN
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999813344872571	WITHOUT_CLASSIFICATION	1.8665512742886434E-5	DESIGN
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999999307279944	WITHOUT_CLASSIFICATION	6.927200557737345E-8	DESIGN
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999999495115957	WITHOUT_CLASSIFICATION	5.048840437104772E-8	DESIGN
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9988874601543352	WITHOUT_CLASSIFICATION	0.0011125398456648071	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.99985012387309	WITHOUT_CLASSIFICATION	1.4987612691002626E-4	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.99985012387309	WITHOUT_CLASSIFICATION	1.4987612691002626E-4	DESIGN
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999985115394534	WITHOUT_CLASSIFICATION	1.4884605466170695E-6	DESIGN
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999960982893157	WITHOUT_CLASSIFICATION	3.901710684302137E-6	DESIGN
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999994950700667	WITHOUT_CLASSIFICATION	5.049299333616872E-7	DESIGN
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999987335168088	WITHOUT_CLASSIFICATION	1.2664831911919194E-6	DESIGN
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999999828427336	WITHOUT_CLASSIFICATION	1.7157266402116628E-8	DESIGN
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9925784137659163	WITHOUT_CLASSIFICATION	0.007421586234083748	DESIGN
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.999991616430065	WITHOUT_CLASSIFICATION	8.383569935004304E-6	DESIGN
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999383169549589	WITHOUT_CLASSIFICATION	6.168304504108879E-5	DESIGN
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999618544196319	WITHOUT_CLASSIFICATION	3.8145580368117905E-5	DESIGN
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999981067465524	WITHOUT_CLASSIFICATION	1.8932534475778151E-6	DESIGN
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999976540070785	WITHOUT_CLASSIFICATION	2.3459929214295407E-6	DESIGN
// class or module	WITHOUT_CLASSIFICATION	0.9999988495811837	WITHOUT_CLASSIFICATION	1.150418816336262E-6	DESIGN
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999144316241669	WITHOUT_CLASSIFICATION	8.556837583306715E-5	DESIGN
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999864537852613	WITHOUT_CLASSIFICATION	1.3546214738746748E-5	DESIGN
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999975012075849	WITHOUT_CLASSIFICATION	2.4987924150662712E-6	DESIGN
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999919592618548	WITHOUT_CLASSIFICATION	8.04073814510848E-6	DESIGN
// IN changed!	WITHOUT_CLASSIFICATION	0.9999974139071605	WITHOUT_CLASSIFICATION	2.5860928394938127E-6	DESIGN
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999834033755992	WITHOUT_CLASSIFICATION	1.659662440086255E-5	DESIGN
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999984526289503	WITHOUT_CLASSIFICATION	1.5473710497693667E-6	DESIGN
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9979632076821346	WITHOUT_CLASSIFICATION	0.0020367923178654344	DESIGN
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999971218832138	WITHOUT_CLASSIFICATION	2.878116786206483E-6	DESIGN
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999992412204619	WITHOUT_CLASSIFICATION	7.587795380921821E-7	DESIGN
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999809905661854	WITHOUT_CLASSIFICATION	1.900943381468527E-5	DESIGN
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.5742501663214274	WITHOUT_CLASSIFICATION	0.42574983367857255	DESIGN
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999997982481741	WITHOUT_CLASSIFICATION	2.0175182585340557E-7	DESIGN
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9995102184751535	WITHOUT_CLASSIFICATION	4.897815248465282E-4	DESIGN
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.999823176160428	WITHOUT_CLASSIFICATION	1.7682383957188497E-4	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9998200996566003	WITHOUT_CLASSIFICATION	1.7990034339965757E-4	DESIGN
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999942074021831	WITHOUT_CLASSIFICATION	5.792597816886616E-6	DESIGN
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.99990894602455	DESIGN	9.105397544997268E-5	WITHOUT_CLASSIFICATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999966534841844	WITHOUT_CLASSIFICATION	3.346515815568595E-6	DESIGN
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.999999651855085	WITHOUT_CLASSIFICATION	3.481449150530386E-7	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999830213436816	WITHOUT_CLASSIFICATION	1.697865631845025E-5	DESIGN
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999989738225683	WITHOUT_CLASSIFICATION	1.0261774316735974E-6	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999830213436816	WITHOUT_CLASSIFICATION	1.697865631845025E-5	DESIGN
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999693252415868	WITHOUT_CLASSIFICATION	3.067475841327794E-5	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999856504972414	WITHOUT_CLASSIFICATION	1.434950275854122E-5	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999856504972414	WITHOUT_CLASSIFICATION	1.434950275854122E-5	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999856504972414	WITHOUT_CLASSIFICATION	1.434950275854122E-5	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999720473654568	WITHOUT_CLASSIFICATION	2.795263454332237E-5	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999720473654568	WITHOUT_CLASSIFICATION	2.795263454332237E-5	DESIGN
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9984700422077353	WITHOUT_CLASSIFICATION	0.001529957792264696	DESIGN
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999987962167891	WITHOUT_CLASSIFICATION	1.2037832108686417E-6	DESIGN
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9987635666702182	WITHOUT_CLASSIFICATION	0.0012364333297819406	DESIGN
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.997856039364561	WITHOUT_CLASSIFICATION	0.0021439606354388984	DESIGN
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999958248255945	WITHOUT_CLASSIFICATION	4.175174405490231E-6	DESIGN
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.999997257100665	WITHOUT_CLASSIFICATION	2.742899334917688E-6	DESIGN
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999999961874142	WITHOUT_CLASSIFICATION	3.812585798747548E-9	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999978563314406	WITHOUT_CLASSIFICATION	2.1436685594845756E-6	DESIGN
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999997801970627	WITHOUT_CLASSIFICATION	2.198029373110633E-7	DESIGN
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.999999512200089	WITHOUT_CLASSIFICATION	4.877999109911674E-7	DESIGN
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999904066947812	WITHOUT_CLASSIFICATION	9.593305218689792E-6	DESIGN
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999933800289323	WITHOUT_CLASSIFICATION	6.619971067574983E-6	DESIGN
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999992029973364	WITHOUT_CLASSIFICATION	7.970026636021125E-7	DESIGN
// root-level logic	WITHOUT_CLASSIFICATION	0.9999966092163143	WITHOUT_CLASSIFICATION	3.390783685656102E-6	DESIGN
// root-level methods	WITHOUT_CLASSIFICATION	0.9999845946062897	WITHOUT_CLASSIFICATION	1.5405393710263494E-5	DESIGN
// root-level classes	WITHOUT_CLASSIFICATION	0.9999917118294227	WITHOUT_CLASSIFICATION	8.28817057730722E-6	DESIGN
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999799869184838	WITHOUT_CLASSIFICATION	2.0013081516115895E-5	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9999964584446165	WITHOUT_CLASSIFICATION	3.541555383441224E-6	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9999964584446165	WITHOUT_CLASSIFICATION	3.541555383441224E-6	DESIGN
// receiver	WITHOUT_CLASSIFICATION	0.9999835430567673	WITHOUT_CLASSIFICATION	1.6456943232704385E-5	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999964566145774	WITHOUT_CLASSIFICATION	3.543385422583423E-6	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999964566145774	WITHOUT_CLASSIFICATION	3.543385422583423E-6	DESIGN
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.999885106914551	WITHOUT_CLASSIFICATION	1.14893085448966E-4	DESIGN
// Object[] args	WITHOUT_CLASSIFICATION	0.9999850996285479	WITHOUT_CLASSIFICATION	1.4900371452111358E-5	DESIGN
// load handle	WITHOUT_CLASSIFICATION	0.999999313252501	WITHOUT_CLASSIFICATION	6.867474989814763E-7	DESIGN
// args array	WITHOUT_CLASSIFICATION	0.9999380745961881	WITHOUT_CLASSIFICATION	6.192540381197903E-5	DESIGN
// i'th argument	WITHOUT_CLASSIFICATION	0.9996429353581032	WITHOUT_CLASSIFICATION	3.570646418968526E-4	DESIGN
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999979723409576	WITHOUT_CLASSIFICATION	2.0276590424515833E-6	DESIGN
// Object arg0	WITHOUT_CLASSIFICATION	0.9999864127814319	WITHOUT_CLASSIFICATION	1.358721856814149E-5	DESIGN
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999998345241621	WITHOUT_CLASSIFICATION	1.6547583790601358E-7	DESIGN
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999887928140815	WITHOUT_CLASSIFICATION	1.1207185918591696E-5	DESIGN
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9976069280948745	WITHOUT_CLASSIFICATION	0.002393071905125571	DESIGN
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9988609374517189	WITHOUT_CLASSIFICATION	0.0011390625482811563	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9999583895938081	WITHOUT_CLASSIFICATION	4.1610406191953475E-5	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9999793631324417	WITHOUT_CLASSIFICATION	2.0636867558220783E-5	DESIGN
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9978614720172718	WITHOUT_CLASSIFICATION	0.0021385279827281847	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999978563314406	WITHOUT_CLASSIFICATION	2.1436685594845756E-6	DESIGN
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999576332530584	WITHOUT_CLASSIFICATION	4.2366746941552556E-5	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999979731465444	WITHOUT_CLASSIFICATION	2.0268534556673343E-6	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999537996371912	WITHOUT_CLASSIFICATION	4.620036280865568E-5	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999537996371912	WITHOUT_CLASSIFICATION	4.620036280865568E-5	DESIGN
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999852788163789	WITHOUT_CLASSIFICATION	1.4721183621130759E-5	DESIGN
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.999905277732183	WITHOUT_CLASSIFICATION	9.472226781700828E-5	DESIGN
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.999998724094297	WITHOUT_CLASSIFICATION	1.2759057029885547E-6	DESIGN
// restore position	WITHOUT_CLASSIFICATION	0.9999942811162401	WITHOUT_CLASSIFICATION	5.718883759820016E-6	DESIGN
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999999299137726	WITHOUT_CLASSIFICATION	7.008622738281377E-8	DESIGN
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999768566097726	WITHOUT_CLASSIFICATION	2.3143390227341504E-5	DESIGN
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999999965372627	WITHOUT_CLASSIFICATION	3.4627373305280505E-9	DESIGN
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.999999209500671	WITHOUT_CLASSIFICATION	7.904993291240452E-7	DESIGN
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9993673323981004	WITHOUT_CLASSIFICATION	6.3266760189966E-4	DESIGN
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999999657118047	WITHOUT_CLASSIFICATION	3.428819515651257E-8	DESIGN
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999949847964369	WITHOUT_CLASSIFICATION	5.015203563128476E-6	DESIGN
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9992892980808122	WITHOUT_CLASSIFICATION	7.107019191877271E-4	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.632057454859162	DESIGN	0.367942545140838	WITHOUT_CLASSIFICATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999997890086811	WITHOUT_CLASSIFICATION	2.1099131884798718E-7	DESIGN
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.999960706659937	WITHOUT_CLASSIFICATION	3.929334006293746E-5	DESIGN
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.804941373324298	WITHOUT_CLASSIFICATION	0.19505862667570206	DESIGN
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9997042707768776	WITHOUT_CLASSIFICATION	2.957292231223179E-4	DESIGN
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999714391384187	WITHOUT_CLASSIFICATION	2.8560861581425553E-5	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999929132087898	WITHOUT_CLASSIFICATION	7.086791210155471E-6	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.999999580591157	WITHOUT_CLASSIFICATION	4.1940884300203066E-7	DESIGN
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999998043535758	WITHOUT_CLASSIFICATION	1.956464242305414E-7	DESIGN
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999993908103039	WITHOUT_CLASSIFICATION	6.091896961466642E-7	DESIGN
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999918096483595	WITHOUT_CLASSIFICATION	8.190351640380979E-6	DESIGN
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999279455216922	WITHOUT_CLASSIFICATION	7.205447830780189E-5	DESIGN
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999978079688427	WITHOUT_CLASSIFICATION	2.192031157273054E-6	DESIGN
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999988748360914	WITHOUT_CLASSIFICATION	1.1251639085491475E-6	DESIGN
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999998276027781	WITHOUT_CLASSIFICATION	1.7239722184465944E-7	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999266589313168	WITHOUT_CLASSIFICATION	7.334106868310757E-5	DESIGN
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999931428779945	WITHOUT_CLASSIFICATION	6.857122005593659E-6	DESIGN
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999946481468328	WITHOUT_CLASSIFICATION	5.3518531672663245E-6	DESIGN
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9984011510392776	WITHOUT_CLASSIFICATION	0.0015988489607223736	DESIGN
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999550810511442	WITHOUT_CLASSIFICATION	4.491894885588074E-5	DESIGN
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9990260289199754	WITHOUT_CLASSIFICATION	9.739710800245743E-4	DESIGN
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999900377862305	WITHOUT_CLASSIFICATION	9.962213769400841E-6	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9998707441389891	WITHOUT_CLASSIFICATION	1.2925586101097974E-4	DESIGN
// $blah	WITHOUT_CLASSIFICATION	0.9999884415853155	WITHOUT_CLASSIFICATION	1.1558414684410219E-5	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999266589313168	WITHOUT_CLASSIFICATION	7.334106868310757E-5	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999967027211629	WITHOUT_CLASSIFICATION	3.297278837199576E-6	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9998707441389891	WITHOUT_CLASSIFICATION	1.2925586101097974E-4	DESIGN
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9992306088657666	WITHOUT_CLASSIFICATION	7.693911342334096E-4	DESIGN
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999999553685291	WITHOUT_CLASSIFICATION	4.463147083700643E-8	DESIGN
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999999483083766	WITHOUT_CLASSIFICATION	5.169162335419962E-8	DESIGN
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999997494425358	WITHOUT_CLASSIFICATION	2.5055746419359123E-7	DESIGN
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9998480067921891	WITHOUT_CLASSIFICATION	1.5199320781092887E-4	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9984902891571215	WITHOUT_CLASSIFICATION	0.0015097108428785864	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9984902891571215	WITHOUT_CLASSIFICATION	0.0015097108428785864	DESIGN
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9997799263041813	WITHOUT_CLASSIFICATION	2.2007369581867416E-4	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9998788326770306	WITHOUT_CLASSIFICATION	1.2116732296939349E-4	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999994073643997	WITHOUT_CLASSIFICATION	5.926356003483535E-7	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999994073643997	WITHOUT_CLASSIFICATION	5.926356003483535E-7	DESIGN
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9993173238079662	WITHOUT_CLASSIFICATION	6.82676192033768E-4	DESIGN
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9999439570441468	WITHOUT_CLASSIFICATION	5.604295585314282E-5	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9998839161202868	WITHOUT_CLASSIFICATION	1.1608387971321194E-4	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9998839161202868	WITHOUT_CLASSIFICATION	1.1608387971321194E-4	DESIGN
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999097571704668	WITHOUT_CLASSIFICATION	9.02428295331522E-5	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9999993732187509	WITHOUT_CLASSIFICATION	6.267812490881502E-7	DESIGN
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999999031235799	WITHOUT_CLASSIFICATION	9.68764200766361E-8	DESIGN
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999965136501309	WITHOUT_CLASSIFICATION	3.4863498692202505E-6	DESIGN
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9981585177955993	WITHOUT_CLASSIFICATION	0.0018414822044007665	DESIGN
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9997325415104733	WITHOUT_CLASSIFICATION	2.67458489526603E-4	DESIGN
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999999355474909	WITHOUT_CLASSIFICATION	6.445250903806941E-8	DESIGN
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.983401157671706	WITHOUT_CLASSIFICATION	0.016598842328293922	DESIGN
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.999944229310503	WITHOUT_CLASSIFICATION	5.57706894970349E-5	DESIGN
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999406953480179	WITHOUT_CLASSIFICATION	5.930465198211195E-5	DESIGN
// host and port given	WITHOUT_CLASSIFICATION	0.9996627020805773	WITHOUT_CLASSIFICATION	3.372979194227809E-4	DESIGN
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9998439693624774	WITHOUT_CLASSIFICATION	1.5603063752265528E-4	DESIGN
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999999926334564	WITHOUT_CLASSIFICATION	7.366543626789021E-9	DESIGN
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999959809768848	WITHOUT_CLASSIFICATION	4.019023115157897E-6	DESIGN
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999985338167656	WITHOUT_CLASSIFICATION	1.4661832343185267E-6	DESIGN
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999939168405955	WITHOUT_CLASSIFICATION	6.083159404518107E-6	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9998274357266997	WITHOUT_CLASSIFICATION	1.7256427330021153E-4	DESIGN
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999770852194046	WITHOUT_CLASSIFICATION	2.2914780595310817E-5	DESIGN
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9997826381191507	WITHOUT_CLASSIFICATION	2.1736188084932987E-4	DESIGN
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999904814715432	WITHOUT_CLASSIFICATION	9.518528456761121E-6	DESIGN
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999698285947781	WITHOUT_CLASSIFICATION	3.0171405221853908E-5	DESIGN
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999999493723769	WITHOUT_CLASSIFICATION	5.062762305087809E-8	DESIGN
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9995920253856033	WITHOUT_CLASSIFICATION	4.079746143966503E-4	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999907888815072	WITHOUT_CLASSIFICATION	9.211118492787799E-6	DESIGN
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999950170755891	WITHOUT_CLASSIFICATION	4.982924410925665E-6	DESIGN
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999957731604011	WITHOUT_CLASSIFICATION	4.226839598819667E-6	DESIGN
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999969329236366	WITHOUT_CLASSIFICATION	3.067076363336374E-6	DESIGN
// line 323	WITHOUT_CLASSIFICATION	0.9999989396460408	WITHOUT_CLASSIFICATION	1.0603539591991893E-6	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9998385180496866	WITHOUT_CLASSIFICATION	1.614819503134274E-4	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9998385180496866	WITHOUT_CLASSIFICATION	1.614819503134274E-4	DESIGN
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9966293681462055	WITHOUT_CLASSIFICATION	0.0033706318537946233	DESIGN
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999999489235589	WITHOUT_CLASSIFICATION	5.107644105570184E-8	DESIGN
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999842875732623	WITHOUT_CLASSIFICATION	1.5712426737691822E-5	DESIGN
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9998951571591908	WITHOUT_CLASSIFICATION	1.0484284080924025E-4	DESIGN
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999921620764566	WITHOUT_CLASSIFICATION	7.83792354346646E-6	DESIGN
// RubySocket	WITHOUT_CLASSIFICATION	0.9999359044379388	WITHOUT_CLASSIFICATION	6.40955620612142E-5	DESIGN
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9997234652189192	WITHOUT_CLASSIFICATION	2.765347810807743E-4	DESIGN
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998934802411	WITHOUT_CLASSIFICATION	1.0651975894241813E-7	DESIGN
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.999935236927853	WITHOUT_CLASSIFICATION	6.476307214703333E-5	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999999243596005	WITHOUT_CLASSIFICATION	7.564039945372025E-8	DESIGN
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999999964459713	WITHOUT_CLASSIFICATION	3.554028890820362E-9	DESIGN
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999519383799172	WITHOUT_CLASSIFICATION	4.8061620082823256E-5	DESIGN
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999516276510834	WITHOUT_CLASSIFICATION	4.837234891658336E-5	DESIGN
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9998859352422808	WITHOUT_CLASSIFICATION	1.1406475771926274E-4	DESIGN
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999950859148763	WITHOUT_CLASSIFICATION	4.914085123752299E-6	DESIGN
// Call the thread's code	WITHOUT_CLASSIFICATION	0.999976912794669	WITHOUT_CLASSIFICATION	2.308720533093805E-5	DESIGN
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9998941149953259	WITHOUT_CLASSIFICATION	1.05885004674095E-4	DESIGN
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9998539866915287	WITHOUT_CLASSIFICATION	1.4601330847136497E-4	DESIGN
// be dead	WITHOUT_CLASSIFICATION	0.9964125117610358	WITHOUT_CLASSIFICATION	0.003587488238964082	DESIGN
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.999993995574491	WITHOUT_CLASSIFICATION	6.004425509042534E-6	DESIGN
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999032016740652	WITHOUT_CLASSIFICATION	9.679832593476277E-5	DESIGN
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999565814207896	WITHOUT_CLASSIFICATION	4.3418579210365295E-5	DESIGN
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999913017651965	WITHOUT_CLASSIFICATION	8.698234803549563E-6	DESIGN
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999953223433675	WITHOUT_CLASSIFICATION	4.677656632389957E-6	DESIGN
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999998825453257	WITHOUT_CLASSIFICATION	1.174546742981692E-7	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999634790998132	WITHOUT_CLASSIFICATION	3.652090018679672E-5	DESIGN
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999727186418519	WITHOUT_CLASSIFICATION	2.72813581481953E-5	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9938429195412312	WITHOUT_CLASSIFICATION	0.00615708045876887	DESIGN
// main body	WITHOUT_CLASSIFICATION	0.9999967293455507	WITHOUT_CLASSIFICATION	3.270654449290723E-6	DESIGN
// return jump handling	WITHOUT_CLASSIFICATION	0.9998150264388168	WITHOUT_CLASSIFICATION	1.8497356118309073E-4	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9999157598285621	WITHOUT_CLASSIFICATION	8.42401714378492E-5	DESIGN
// return result if we're still good	WITHOUT_CLASSIFICATION	0.999999893366298	WITHOUT_CLASSIFICATION	1.0663370197536307E-7	DESIGN
// redo jump handling	WITHOUT_CLASSIFICATION	0.9997292018067093	WITHOUT_CLASSIFICATION	2.707981932906057E-4	DESIGN
// clear the redo	WITHOUT_CLASSIFICATION	0.9999118854290573	WITHOUT_CLASSIFICATION	8.811457094267277E-5	DESIGN
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999965773848862	WITHOUT_CLASSIFICATION	3.4226151137285167E-6	DESIGN
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999961602422434	WITHOUT_CLASSIFICATION	3.839757756593199E-6	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999915711354072	WITHOUT_CLASSIFICATION	8.428864592715494E-6	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9996228207154203	WITHOUT_CLASSIFICATION	3.771792845797771E-4	DESIGN
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999999760681206	WITHOUT_CLASSIFICATION	2.393187937263455E-8	DESIGN
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999999636289125	WITHOUT_CLASSIFICATION	3.6371087367765135E-8	DESIGN
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999999491435609	WITHOUT_CLASSIFICATION	5.085643909375952E-8	DESIGN
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9974622249865829	WITHOUT_CLASSIFICATION	0.0025377750134171605	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999977106699575	WITHOUT_CLASSIFICATION	2.289330042505284E-6	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999977106699575	WITHOUT_CLASSIFICATION	2.289330042505284E-6	DESIGN
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999855760635217	WITHOUT_CLASSIFICATION	1.4423936478305681E-5	DESIGN
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999967392372406	WITHOUT_CLASSIFICATION	3.2607627594368842E-6	DESIGN
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999968048686453	WITHOUT_CLASSIFICATION	3.1951313547084496E-6	DESIGN
// return	WITHOUT_CLASSIFICATION	0.999987541684293	WITHOUT_CLASSIFICATION	1.2458315706985565E-5	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9997692324827886	WITHOUT_CLASSIFICATION	2.3076751721135832E-4	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999995247055715	WITHOUT_CLASSIFICATION	4.752944284809204E-7	DESIGN
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9996369489839828	WITHOUT_CLASSIFICATION	3.630510160172362E-4	DESIGN
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999989115505579	WITHOUT_CLASSIFICATION	1.0884494421346787E-6	DESIGN
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999982984504675	WITHOUT_CLASSIFICATION	1.7015495325397093E-6	DESIGN
// tc	WITHOUT_CLASSIFICATION	0.9999606877387721	WITHOUT_CLASSIFICATION	3.93122612279214E-5	DESIGN
// self // name	WITHOUT_CLASSIFICATION	0.9999815404962937	WITHOUT_CLASSIFICATION	1.845950370619933E-5	DESIGN
// no args	WITHOUT_CLASSIFICATION	0.9999564655700554	WITHOUT_CLASSIFICATION	4.353442994462403E-5	DESIGN
// variable args with block	WITHOUT_CLASSIFICATION	0.9999947103168779	WITHOUT_CLASSIFICATION	5.289683122054101E-6	DESIGN
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999999593063291	WITHOUT_CLASSIFICATION	4.069367089313309E-8	DESIGN
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999934969379335	WITHOUT_CLASSIFICATION	6.503062066489912E-6	DESIGN
// one arg with block	WITHOUT_CLASSIFICATION	0.9999970737016987	WITHOUT_CLASSIFICATION	2.9262983013018113E-6	DESIGN
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999988646351575	WITHOUT_CLASSIFICATION	1.135364842421561E-6	DESIGN
// two args with block	WITHOUT_CLASSIFICATION	0.9997676502360312	WITHOUT_CLASSIFICATION	2.3234976396875246E-4	DESIGN
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999593299737687	WITHOUT_CLASSIFICATION	4.067002623130772E-5	DESIGN
// three args with block	WITHOUT_CLASSIFICATION	0.9999859823117946	WITHOUT_CLASSIFICATION	1.4017688205358608E-5	DESIGN
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999947821161654	WITHOUT_CLASSIFICATION	5.217883834492426E-6	DESIGN
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999997674951082	WITHOUT_CLASSIFICATION	2.3250489186338032E-7	DESIGN
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.99997661012178	WITHOUT_CLASSIFICATION	2.338987822008072E-5	DESIGN
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999901055532273	WITHOUT_CLASSIFICATION	9.894446772723886E-6	DESIGN
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999929745025625	WITHOUT_CLASSIFICATION	7.025497437448781E-6	DESIGN
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9997489727186684	WITHOUT_CLASSIFICATION	2.5102728133173327E-4	DESIGN
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999798423245602	WITHOUT_CLASSIFICATION	2.0157675439798788E-5	DESIGN
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999902714027208	WITHOUT_CLASSIFICATION	9.728597279217317E-6	DESIGN
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999998328572826	WITHOUT_CLASSIFICATION	1.6714271742794152E-7	DESIGN
// static invocation	WITHOUT_CLASSIFICATION	0.9999017900990066	WITHOUT_CLASSIFICATION	9.820990099342628E-5	DESIGN
// virtual invocation	WITHOUT_CLASSIFICATION	0.999998927161181	WITHOUT_CLASSIFICATION	1.07283881902208E-6	DESIGN
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999958765895453	WITHOUT_CLASSIFICATION	4.123410454742233E-6	DESIGN
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9998460746184422	WITHOUT_CLASSIFICATION	1.5392538155769564E-4	DESIGN
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999969087743181	WITHOUT_CLASSIFICATION	3.0912256818898916E-6	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9996228207154203	WITHOUT_CLASSIFICATION	3.771792845797771E-4	DESIGN
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999919929368	WITHOUT_CLASSIFICATION	8.007063200075237E-6	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.999989788109182	WITHOUT_CLASSIFICATION	1.0211890817978632E-5	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.999989788109182	WITHOUT_CLASSIFICATION	1.0211890817978632E-5	DESIGN
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9805425971926139	WITHOUT_CLASSIFICATION	0.019457402807386153	DESIGN
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9741820885248416	WITHOUT_CLASSIFICATION	0.02581791147515839	DESIGN
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9998183339938356	WITHOUT_CLASSIFICATION	1.8166600616438463E-4	DESIGN
// never reached	WITHOUT_CLASSIFICATION	0.9998380053701105	WITHOUT_CLASSIFICATION	1.619946298894406E-4	DESIGN
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999877154111765	WITHOUT_CLASSIFICATION	1.2284588823532628E-5	DESIGN
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999937916107116	WITHOUT_CLASSIFICATION	6.208389288415441E-6	DESIGN
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.999993993506945	WITHOUT_CLASSIFICATION	6.006493055080556E-6	DESIGN
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999590541902441	WITHOUT_CLASSIFICATION	4.0945809755917174E-5	DESIGN
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999971580504253	WITHOUT_CLASSIFICATION	2.8419495745840753E-6	DESIGN
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999971993395909	WITHOUT_CLASSIFICATION	2.8006604090621413E-6	DESIGN
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999812563109144	WITHOUT_CLASSIFICATION	1.8743689085575635E-5	DESIGN
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999922112567913	WITHOUT_CLASSIFICATION	7.788743208723094E-6	DESIGN
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999674010728495	WITHOUT_CLASSIFICATION	3.259892715048879E-5	DESIGN
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9998316308043342	WITHOUT_CLASSIFICATION	1.683691956657391E-4	DESIGN
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9978594834380492	WITHOUT_CLASSIFICATION	0.002140516561950773	DESIGN
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9991276763609312	WITHOUT_CLASSIFICATION	8.723236390687322E-4	DESIGN
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999788268169493	WITHOUT_CLASSIFICATION	2.1173183050746892E-5	DESIGN
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999929375196159	WITHOUT_CLASSIFICATION	7.062480384088503E-6	DESIGN
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999934240153326	WITHOUT_CLASSIFICATION	6.575984667391965E-6	DESIGN
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999935195539454	WITHOUT_CLASSIFICATION	6.480446054496443E-6	DESIGN
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999564237388012	WITHOUT_CLASSIFICATION	4.357626119891504E-5	DESIGN
// promise to implement three	WITHOUT_CLASSIFICATION	0.9999070777977154	WITHOUT_CLASSIFICATION	9.292220228461884E-5	DESIGN
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999999691761184	WITHOUT_CLASSIFICATION	3.0823881591753625E-8	DESIGN
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999983255143372	WITHOUT_CLASSIFICATION	1.6744856627731633E-6	DESIGN
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999998577724108	WITHOUT_CLASSIFICATION	1.422275890508766E-7	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999949508415984	WITHOUT_CLASSIFICATION	5.049158401610246E-6	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999999421883133	WITHOUT_CLASSIFICATION	5.7811686758739226E-8	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9998082146087318	WITHOUT_CLASSIFICATION	1.917853912681726E-4	DESIGN
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999999506007385	WITHOUT_CLASSIFICATION	4.939926149321415E-8	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9996027135231847	WITHOUT_CLASSIFICATION	3.972864768152504E-4	DESIGN
// start setup method	WITHOUT_CLASSIFICATION	0.9997658208595201	WITHOUT_CLASSIFICATION	2.3417914047993703E-4	DESIGN
// set RubyClass	WITHOUT_CLASSIFICATION	0.99999506422213	WITHOUT_CLASSIFICATION	4.935777869935005E-6	DESIGN
// set Ruby	WITHOUT_CLASSIFICATION	0.9999712432608063	WITHOUT_CLASSIFICATION	2.875673919374806E-5	DESIGN
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999998342441863	WITHOUT_CLASSIFICATION	1.657558137344003E-7	DESIGN
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999849155802265	WITHOUT_CLASSIFICATION	1.5084419773498805E-5	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999995517689033	WITHOUT_CLASSIFICATION	4.482310967121251E-7	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999985323920226	WITHOUT_CLASSIFICATION	1.4676079774605438E-6	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999949508415984	WITHOUT_CLASSIFICATION	5.049158401610246E-6	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999999421883133	WITHOUT_CLASSIFICATION	5.7811686758739226E-8	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9998082146087318	WITHOUT_CLASSIFICATION	1.917853912681726E-4	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9996027135231847	WITHOUT_CLASSIFICATION	3.972864768152504E-4	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999974700793496	WITHOUT_CLASSIFICATION	2.529920650410264E-6	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999998047039544	WITHOUT_CLASSIFICATION	1.9529604550360662E-7	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.999955744259846	WITHOUT_CLASSIFICATION	4.425574015394956E-5	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999998320925513	WITHOUT_CLASSIFICATION	1.6790744865827968E-7	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9996860105730281	WITHOUT_CLASSIFICATION	3.139894269718638E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999998309399399	WITHOUT_CLASSIFICATION	1.6906006006144455E-7	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.999962415108959	WITHOUT_CLASSIFICATION	3.7584891040872106E-5	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999800664035574	WITHOUT_CLASSIFICATION	1.993359644251087E-5	DESIGN
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999872350802141	WITHOUT_CLASSIFICATION	1.276491978588509E-5	DESIGN
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999996204764472	WITHOUT_CLASSIFICATION	3.7952355284146563E-7	DESIGN
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999993773042846	WITHOUT_CLASSIFICATION	6.226957153634886E-7	DESIGN
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999985686539029	WITHOUT_CLASSIFICATION	1.4313460970612847E-6	DESIGN
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999944785150211	WITHOUT_CLASSIFICATION	5.521484978881196E-6	DESIGN
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9998203062881835	WITHOUT_CLASSIFICATION	1.7969371181648648E-4	DESIGN
// store it	WITHOUT_CLASSIFICATION	0.9999940344644115	WITHOUT_CLASSIFICATION	5.9655355884758155E-6	DESIGN
// end of try block	WITHOUT_CLASSIFICATION	0.999993992185964	WITHOUT_CLASSIFICATION	6.007814036028832E-6	DESIGN
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9997642773036503	WITHOUT_CLASSIFICATION	2.357226963498721E-4	DESIGN
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999932610470271	WITHOUT_CLASSIFICATION	6.738952972866798E-6	DESIGN
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.999999397756846	WITHOUT_CLASSIFICATION	6.022431539490177E-7	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999985323920226	WITHOUT_CLASSIFICATION	1.4676079774605438E-6	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999998047039544	WITHOUT_CLASSIFICATION	1.9529604550360662E-7	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.999955744259846	WITHOUT_CLASSIFICATION	4.425574015394956E-5	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9996860105730281	WITHOUT_CLASSIFICATION	3.139894269718638E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999998309399399	WITHOUT_CLASSIFICATION	1.6906006006144455E-7	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.999962415108959	WITHOUT_CLASSIFICATION	3.7584891040872106E-5	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999800664035574	WITHOUT_CLASSIFICATION	1.993359644251087E-5	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9999990931378797	WITHOUT_CLASSIFICATION	9.068621202868983E-7	DESIGN
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999938793093266	WITHOUT_CLASSIFICATION	6.120690673463911E-6	DESIGN
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999998561824709	WITHOUT_CLASSIFICATION	1.4381752911869998E-7	DESIGN
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999992010605	WITHOUT_CLASSIFICATION	7.989396131179832E-10	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999732720361483	WITHOUT_CLASSIFICATION	2.672796385168778E-5	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999732720361483	WITHOUT_CLASSIFICATION	2.672796385168778E-5	DESIGN
// setup the class	WITHOUT_CLASSIFICATION	0.9999972497169249	WITHOUT_CLASSIFICATION	2.750283075028452E-6	DESIGN
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999995795288912	WITHOUT_CLASSIFICATION	4.204711087732762E-7	DESIGN
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9983666121834702	WITHOUT_CLASSIFICATION	0.001633387816529784	DESIGN
// probably a primitive	WITHOUT_CLASSIFICATION	0.9962223984927155	WITHOUT_CLASSIFICATION	0.0037776015072843385	DESIGN
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999893362945182	WITHOUT_CLASSIFICATION	1.0663705481750007E-5	DESIGN
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9984387587384742	WITHOUT_CLASSIFICATION	0.0015612412615258065	DESIGN
// set the full name	WITHOUT_CLASSIFICATION	0.9999981989460632	WITHOUT_CLASSIFICATION	1.8010539368243236E-6	DESIGN
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999993884173501	WITHOUT_CLASSIFICATION	6.115826498703931E-7	DESIGN
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.999998806488717	WITHOUT_CLASSIFICATION	1.1935112830926197E-6	DESIGN
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999721626934276	WITHOUT_CLASSIFICATION	2.7837306572445437E-5	DESIGN
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9992737772840872	WITHOUT_CLASSIFICATION	7.26222715912854E-4	DESIGN
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.99999774539608	WITHOUT_CLASSIFICATION	2.2546039200067214E-6	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999981194228509	WITHOUT_CLASSIFICATION	1.880577149167813E-6	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9988854008579332	WITHOUT_CLASSIFICATION	0.0011145991420667477	DESIGN
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999994484219289	WITHOUT_CLASSIFICATION	5.515780711933571E-7	DESIGN
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999987629932523	WITHOUT_CLASSIFICATION	1.2370067476626375E-6	DESIGN
// add all static variables	WITHOUT_CLASSIFICATION	0.9999765316643358	WITHOUT_CLASSIFICATION	2.3468335664300557E-5	DESIGN
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999466213625168	WITHOUT_CLASSIFICATION	5.33786374832399E-5	DESIGN
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999998943884194	WITHOUT_CLASSIFICATION	1.056115806380307E-7	DESIGN
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9956562999972641	WITHOUT_CLASSIFICATION	0.0043437000027359025	DESIGN
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9639278546688362	DESIGN	0.03607214533116386	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999578730139841	WITHOUT_CLASSIFICATION	4.2126986015865523E-5	DESIGN
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9998986135091649	WITHOUT_CLASSIFICATION	1.013864908351079E-4	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999903312673596	DESIGN	9.668732640489798E-6	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999939682350283	WITHOUT_CLASSIFICATION	6.031764971702593E-6	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999669992317518	WITHOUT_CLASSIFICATION	3.300076824821313E-5	DESIGN
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999885860412	WITHOUT_CLASSIFICATION	1.141395884848768E-8	DESIGN
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999968505402441	WITHOUT_CLASSIFICATION	3.149459755873706E-6	DESIGN
// line 326	WITHOUT_CLASSIFICATION	0.9999988624882465	WITHOUT_CLASSIFICATION	1.1375117534810233E-6	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999939682350283	WITHOUT_CLASSIFICATION	6.031764971702593E-6	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999669992317518	WITHOUT_CLASSIFICATION	3.300076824821313E-5	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9988854008579332	WITHOUT_CLASSIFICATION	0.0011145991420667477	DESIGN
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.999999199087299	WITHOUT_CLASSIFICATION	8.009127009740401E-7	DESIGN
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999953917252148	WITHOUT_CLASSIFICATION	4.608274785277106E-6	DESIGN
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999837266232634	WITHOUT_CLASSIFICATION	1.6273376736559353E-5	DESIGN
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999857346942551	WITHOUT_CLASSIFICATION	1.4265305744944544E-5	DESIGN
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9988526729251952	WITHOUT_CLASSIFICATION	0.0011473270748048204	DESIGN
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999988266613008	WITHOUT_CLASSIFICATION	1.173338699210346E-6	DESIGN
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9997845178744549	WITHOUT_CLASSIFICATION	2.1548212554521967E-4	DESIGN
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999708410102875	WITHOUT_CLASSIFICATION	2.9158989712368993E-5	DESIGN
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.8665140259830085	WITHOUT_CLASSIFICATION	0.13348597401699155	DESIGN
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9984501925265652	WITHOUT_CLASSIFICATION	0.0015498074734347604	DESIGN
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999986111122228	WITHOUT_CLASSIFICATION	1.3888877771639925E-6	DESIGN
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999308590553977	WITHOUT_CLASSIFICATION	6.91409446023455E-5	DESIGN
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999999748861168	WITHOUT_CLASSIFICATION	2.5113883281169E-8	DESIGN
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999983626076873	WITHOUT_CLASSIFICATION	1.6373923126582656E-6	DESIGN
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9998004553545876	WITHOUT_CLASSIFICATION	1.9954464541226455E-4	DESIGN
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999997425013817	WITHOUT_CLASSIFICATION	2.5749861823341394E-7	DESIGN
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999998047616634	WITHOUT_CLASSIFICATION	1.9523833666575717E-7	DESIGN
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9901154359302425	WITHOUT_CLASSIFICATION	0.009884564069757499	DESIGN
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999999412170614	WITHOUT_CLASSIFICATION	5.87829385933239E-8	DESIGN
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9990450100243633	WITHOUT_CLASSIFICATION	9.549899756367316E-4	DESIGN
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999833544300878	WITHOUT_CLASSIFICATION	1.6645569912172607E-5	DESIGN
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999918382176609	WITHOUT_CLASSIFICATION	8.161782339135473E-6	DESIGN
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999986483426344	WITHOUT_CLASSIFICATION	1.3516573655908656E-6	DESIGN
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999999511368889	WITHOUT_CLASSIFICATION	4.8863111221865E-8	DESIGN
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999999479615371	WITHOUT_CLASSIFICATION	5.203846285346438E-8	DESIGN
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999894104966611	WITHOUT_CLASSIFICATION	1.058950333894157E-5	DESIGN
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.5770053061711634	WITHOUT_CLASSIFICATION	0.42299469382883664	DESIGN
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.575678471434488	DESIGN	0.424321528565512	WITHOUT_CLASSIFICATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9922543463495844	WITHOUT_CLASSIFICATION	0.00774565365041555	DESIGN
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999670733464888	WITHOUT_CLASSIFICATION	3.292665351123611E-5	DESIGN
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999978033633784	WITHOUT_CLASSIFICATION	2.1966366215687047E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999278787019011	WITHOUT_CLASSIFICATION	7.212129809884233E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999278787019011	WITHOUT_CLASSIFICATION	7.212129809884233E-5	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999981194228509	WITHOUT_CLASSIFICATION	1.880577149167813E-6	DESIGN
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9995236480058219	WITHOUT_CLASSIFICATION	4.7635199417806617E-4	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999583970804988	WITHOUT_CLASSIFICATION	4.160291950114209E-5	DESIGN
// weakly reserved names	WITHOUT_CLASSIFICATION	0.993421313784999	WITHOUT_CLASSIFICATION	0.006578686215001016	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999952005673702	WITHOUT_CLASSIFICATION	4.799432629721943E-6	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999952005673702	WITHOUT_CLASSIFICATION	4.799432629721943E-6	DESIGN
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999998431537467	WITHOUT_CLASSIFICATION	1.5684625327022632E-7	DESIGN
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999340669383843	WITHOUT_CLASSIFICATION	6.593306161581477E-5	DESIGN
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999999384443449	WITHOUT_CLASSIFICATION	6.155565504654089E-8	DESIGN
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9998543203336154	WITHOUT_CLASSIFICATION	1.4567966638456394E-4	DESIGN
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.6434712134604996	DESIGN	0.3565287865395005	WITHOUT_CLASSIFICATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999999617313983	WITHOUT_CLASSIFICATION	3.826860172732881E-8	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999999433460927	WITHOUT_CLASSIFICATION	5.66539073991489E-8	DESIGN
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999999033882815	WITHOUT_CLASSIFICATION	9.661171841462582E-8	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9996131455816767	WITHOUT_CLASSIFICATION	3.868544183233034E-4	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999020686579513	WITHOUT_CLASSIFICATION	9.79313420488165E-5	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.999999986504501	WITHOUT_CLASSIFICATION	1.3495498985993817E-8	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999995156341742	WITHOUT_CLASSIFICATION	4.843658257050988E-7	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.999999446172737	WITHOUT_CLASSIFICATION	5.53827263047346E-7	DESIGN
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.999691765792972	WITHOUT_CLASSIFICATION	3.082342070280502E-4	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9943285254777868	WITHOUT_CLASSIFICATION	0.005671474522213233	DESIGN
// something?	WITHOUT_CLASSIFICATION	0.8910552640919914	WITHOUT_CLASSIFICATION	0.10894473590800853	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999586329177172	WITHOUT_CLASSIFICATION	4.136708228266875E-5	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999586329177172	WITHOUT_CLASSIFICATION	4.136708228266875E-5	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999999283766985	WITHOUT_CLASSIFICATION	7.162330154816321E-8	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999999283766985	WITHOUT_CLASSIFICATION	7.162330154816321E-8	DESIGN
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999856189465248	WITHOUT_CLASSIFICATION	1.4381053475131509E-5	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9998838805786322	WITHOUT_CLASSIFICATION	1.1611942136788388E-4	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9997728396627459	WITHOUT_CLASSIFICATION	2.2716033725401713E-4	DESIGN
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999998018625544	WITHOUT_CLASSIFICATION	1.9813744554847302E-7	DESIGN
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999980782025369	WITHOUT_CLASSIFICATION	1.9217974631084623E-6	DESIGN
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999764398447173	WITHOUT_CLASSIFICATION	2.3560155282677668E-5	DESIGN
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999999787760593	WITHOUT_CLASSIFICATION	2.1223940656005017E-8	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999995156341742	WITHOUT_CLASSIFICATION	4.843658257050988E-7	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.999999446172737	WITHOUT_CLASSIFICATION	5.53827263047346E-7	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9943285254777868	WITHOUT_CLASSIFICATION	0.005671474522213233	DESIGN
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999743902266744	WITHOUT_CLASSIFICATION	2.5609773325577065E-5	DESIGN
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999062945264938	WITHOUT_CLASSIFICATION	9.370547350615212E-5	DESIGN
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999801370426085	WITHOUT_CLASSIFICATION	1.9862957391507585E-5	DESIGN
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999692476617307	WITHOUT_CLASSIFICATION	3.0752338269352484E-5	DESIGN
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9918869040025079	WITHOUT_CLASSIFICATION	0.008113095997492017	DESIGN
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9153171625339978	WITHOUT_CLASSIFICATION	0.0846828374660023	DESIGN
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999996829725971	WITHOUT_CLASSIFICATION	3.1702740281410557E-7	DESIGN
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999956740850962	WITHOUT_CLASSIFICATION	4.325914903900745E-6	DESIGN
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999998835607423	WITHOUT_CLASSIFICATION	1.1643925759561301E-7	DESIGN
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999030649331	WITHOUT_CLASSIFICATION	9.693506684503482E-8	DESIGN
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9991509418753572	WITHOUT_CLASSIFICATION	8.49058124642878E-4	DESIGN
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999748129478442	WITHOUT_CLASSIFICATION	2.518705215574621E-5	DESIGN
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999998738379774	WITHOUT_CLASSIFICATION	1.2616202258641382E-7	DESIGN
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999477624531328	WITHOUT_CLASSIFICATION	5.22375468671484E-5	DESIGN
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.8572113905412946	WITHOUT_CLASSIFICATION	0.1427886094587054	DESIGN
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999999823361911	WITHOUT_CLASSIFICATION	1.7663808853063706E-8	DESIGN
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999993023371229	WITHOUT_CLASSIFICATION	6.976628769946873E-7	DESIGN
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9994644091690742	WITHOUT_CLASSIFICATION	5.355908309257404E-4	DESIGN
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999985384766907	WITHOUT_CLASSIFICATION	1.4615233092491938E-6	DESIGN
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999991781984262	WITHOUT_CLASSIFICATION	8.218015738642153E-7	DESIGN
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999707604203423	WITHOUT_CLASSIFICATION	2.9239579657665525E-5	DESIGN
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999989137791576	WITHOUT_CLASSIFICATION	1.0862208423871932E-6	DESIGN
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999990348912571	WITHOUT_CLASSIFICATION	9.651087429541854E-7	DESIGN
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999996098588592	WITHOUT_CLASSIFICATION	3.901411408709054E-7	DESIGN
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999641475600031	WITHOUT_CLASSIFICATION	3.585243999695424E-5	DESIGN
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999999821233404	WITHOUT_CLASSIFICATION	1.7876659683065006E-8	DESIGN
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999999097822648	WITHOUT_CLASSIFICATION	9.021773510826292E-8	DESIGN
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.999993149781658	WITHOUT_CLASSIFICATION	6.85021834200202E-6	DESIGN
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999998658164067	WITHOUT_CLASSIFICATION	1.3418359341600587E-7	DESIGN
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.999876706758793	WITHOUT_CLASSIFICATION	1.2329324120699013E-4	DESIGN
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999856142716983	WITHOUT_CLASSIFICATION	1.4385728301727673E-5	DESIGN
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999606543781889	WITHOUT_CLASSIFICATION	3.934562181101764E-5	DESIGN
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9977677507453487	WITHOUT_CLASSIFICATION	0.0022322492546512393	DESIGN
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999981242590109	WITHOUT_CLASSIFICATION	1.8757409890969211E-6	DESIGN
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999951601418804	WITHOUT_CLASSIFICATION	4.839858119673279E-6	DESIGN
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999938688664667	WITHOUT_CLASSIFICATION	6.131133533391445E-6	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999981035949291	WITHOUT_CLASSIFICATION	1.8964050709512698E-6	DESIGN
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999909220152615	WITHOUT_CLASSIFICATION	9.077984738503749E-6	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.999992740280536	WITHOUT_CLASSIFICATION	7.259719463982184E-6	DESIGN
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999856512081431	WITHOUT_CLASSIFICATION	1.4348791856908766E-5	DESIGN
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999980003787022	WITHOUT_CLASSIFICATION	1.9996212978208515E-6	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999583970804988	WITHOUT_CLASSIFICATION	4.160291950114209E-5	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999981035949291	WITHOUT_CLASSIFICATION	1.8964050709512698E-6	DESIGN
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9596276834243882	WITHOUT_CLASSIFICATION	0.040372316575611716	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9744314235169007	WITHOUT_CLASSIFICATION	0.02556857648309925	DESIGN
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999492331477409	WITHOUT_CLASSIFICATION	5.076685225922451E-5	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999995203974631	WITHOUT_CLASSIFICATION	4.79602536871394E-7	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999995203974631	WITHOUT_CLASSIFICATION	4.79602536871394E-7	DESIGN
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9993199473074802	WITHOUT_CLASSIFICATION	6.800526925197414E-4	DESIGN
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999594432224013	WITHOUT_CLASSIFICATION	4.0556777598769245E-5	DESIGN
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9730578846326089	WITHOUT_CLASSIFICATION	0.02694211536739109	DESIGN
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999889557788753	WITHOUT_CLASSIFICATION	1.104422112478254E-5	DESIGN
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999625774595777	WITHOUT_CLASSIFICATION	3.742254042219913E-5	DESIGN
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999980487156958	WITHOUT_CLASSIFICATION	1.951284304142842E-6	DESIGN
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.999903749116474	WITHOUT_CLASSIFICATION	9.625088352597945E-5	DESIGN
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999998542498226	WITHOUT_CLASSIFICATION	1.457501774374856E-7	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.999985544626706	WITHOUT_CLASSIFICATION	1.445537329414756E-5	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.999985544626706	WITHOUT_CLASSIFICATION	1.445537329414756E-5	DESIGN
// no matching ctor found	WITHOUT_CLASSIFICATION	0.998922523000019	WITHOUT_CLASSIFICATION	0.001077476999980917	DESIGN
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999978269467853	WITHOUT_CLASSIFICATION	2.173053214707053E-6	DESIGN
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9981340959550312	WITHOUT_CLASSIFICATION	0.0018659040449686708	DESIGN
// must be a public method	WITHOUT_CLASSIFICATION	0.9998934594583618	WITHOUT_CLASSIFICATION	1.0654054163809523E-4	DESIGN
// must be a public class	WITHOUT_CLASSIFICATION	0.9999621298831108	WITHOUT_CLASSIFICATION	3.787011688922251E-5	DESIGN
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999015364238705	WITHOUT_CLASSIFICATION	9.846357612959105E-5	DESIGN
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999669302189992	WITHOUT_CLASSIFICATION	3.3069781000891574E-5	DESIGN
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999873951448043	WITHOUT_CLASSIFICATION	1.26048551957093E-5	DESIGN
// no matching method found	WITHOUT_CLASSIFICATION	0.9987593815366268	WITHOUT_CLASSIFICATION	0.0012406184633731577	DESIGN
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9996334726883839	WITHOUT_CLASSIFICATION	3.665273116160792E-4	DESIGN
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999993756528681	WITHOUT_CLASSIFICATION	6.243471320018006E-7	DESIGN
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999995728079587	WITHOUT_CLASSIFICATION	4.2719204137235695E-7	DESIGN
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999991573077105	WITHOUT_CLASSIFICATION	8.426922894833768E-7	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999979721005204	WITHOUT_CLASSIFICATION	2.027899479494285E-6	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999979721005204	WITHOUT_CLASSIFICATION	2.027899479494285E-6	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999848642388849	WITHOUT_CLASSIFICATION	1.5135761115019934E-5	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999800664035574	WITHOUT_CLASSIFICATION	1.993359644251087E-5	DESIGN
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999397190379851	WITHOUT_CLASSIFICATION	6.028096201486397E-5	DESIGN
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999941197625839	WITHOUT_CLASSIFICATION	5.880237416036755E-6	DESIGN
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999992053592	WITHOUT_CLASSIFICATION	7.946408280721926E-10	DESIGN
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999994359346981	WITHOUT_CLASSIFICATION	5.640653020009064E-7	DESIGN
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999992675298235	WITHOUT_CLASSIFICATION	7.324701764952923E-7	DESIGN
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.999999998675428	WITHOUT_CLASSIFICATION	1.3245720032139947E-9	DESIGN
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999993821090688	WITHOUT_CLASSIFICATION	6.178909312098321E-7	DESIGN
/* package scope */	WITHOUT_CLASSIFICATION	0.9996351914433885	WITHOUT_CLASSIFICATION	3.64808556611439E-4	DESIGN
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999717807504439	WITHOUT_CLASSIFICATION	2.8219249556130703E-5	DESIGN
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999598526081261	WITHOUT_CLASSIFICATION	4.014739187391355E-5	DESIGN
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999987478015168	WITHOUT_CLASSIFICATION	1.2521984832580233E-6	DESIGN
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999480355090464	WITHOUT_CLASSIFICATION	5.196449095354745E-5	DESIGN
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999950809442714	WITHOUT_CLASSIFICATION	4.9190557286453285E-6	DESIGN
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999996454479378	WITHOUT_CLASSIFICATION	3.5455206212182867E-7	DESIGN
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.999999662500296	WITHOUT_CLASSIFICATION	3.3749970392169703E-7	DESIGN
// statically initialized below	WITHOUT_CLASSIFICATION	0.9997839029727416	WITHOUT_CLASSIFICATION	2.1609702725836682E-4	DESIGN
// finish class initializer	WITHOUT_CLASSIFICATION	0.9996651766554926	WITHOUT_CLASSIFICATION	3.348233445073425E-4	DESIGN
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999351274010828	WITHOUT_CLASSIFICATION	6.48725989172054E-5	DESIGN
// should not happen!	WITHOUT_CLASSIFICATION	0.9989672742531036	WITHOUT_CLASSIFICATION	0.0010327257468963598	DESIGN
// start class	WITHOUT_CLASSIFICATION	0.9999524042991924	WITHOUT_CLASSIFICATION	4.7595700807525436E-5	DESIGN
// make getter for handler	WITHOUT_CLASSIFICATION	0.99992307410389	WITHOUT_CLASSIFICATION	7.692589611001402E-5	DESIGN
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9998147930108028	WITHOUT_CLASSIFICATION	1.8520698919712164E-4	DESIGN
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9932635787879184	WITHOUT_CLASSIFICATION	0.00673642121208155	DESIGN
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9990622116537818	WITHOUT_CLASSIFICATION	9.377883462182046E-4	DESIGN
// create static private method field	WITHOUT_CLASSIFICATION	0.9999486163437309	WITHOUT_CLASSIFICATION	5.138365626918832E-5	DESIGN
// load static empty array	WITHOUT_CLASSIFICATION	0.9999664855730834	WITHOUT_CLASSIFICATION	3.3514426916619214E-5	DESIGN
// box arguments	WITHOUT_CLASSIFICATION	0.9999907900862066	WITHOUT_CLASSIFICATION	9.209913793303613E-6	DESIGN
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.954550489049289	WITHOUT_CLASSIFICATION	0.045449510950711085	DESIGN
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999567502904664	WITHOUT_CLASSIFICATION	4.324970953370729E-5	DESIGN
// do a void return	WITHOUT_CLASSIFICATION	0.9998036062937738	WITHOUT_CLASSIFICATION	1.9639370622612386E-4	DESIGN
// // utility methods //	WITHOUT_CLASSIFICATION	0.9998587837568756	WITHOUT_CLASSIFICATION	1.4121624312422808E-4	DESIGN
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9996105184430122	WITHOUT_CLASSIFICATION	3.894815569878059E-4	DESIGN
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9998295122822932	WITHOUT_CLASSIFICATION	1.7048771770673468E-4	DESIGN
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999997808827756	WITHOUT_CLASSIFICATION	2.1911722447890153E-7	DESIGN
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999990622789846	WITHOUT_CLASSIFICATION	9.377210154604877E-7	DESIGN
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999999006852279	WITHOUT_CLASSIFICATION	9.93147720286918E-8	DESIGN
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.999999997451404	WITHOUT_CLASSIFICATION	2.548596001983882E-9	DESIGN
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999999752507938	WITHOUT_CLASSIFICATION	2.474920627296528E-8	DESIGN
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9996472007827094	WITHOUT_CLASSIFICATION	3.52799217290541E-4	DESIGN
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999197229671573	WITHOUT_CLASSIFICATION	8.027703284283795E-5	DESIGN
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9997199656894831	WITHOUT_CLASSIFICATION	2.800343105169043E-4	DESIGN
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.7909881960697341	WITHOUT_CLASSIFICATION	0.20901180393026583	DESIGN
/* NUL */	WITHOUT_CLASSIFICATION	0.9999586761164543	WITHOUT_CLASSIFICATION	4.1323883545690215E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999992017156073	WITHOUT_CLASSIFICATION	7.982843927870646E-7	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999988864415464	WITHOUT_CLASSIFICATION	1.1135584535473063E-6	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999968777303506	WITHOUT_CLASSIFICATION	3.1222696494372935E-6	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999167720373215	WITHOUT_CLASSIFICATION	8.322796267839113E-5	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999939682350283	WITHOUT_CLASSIFICATION	6.031764971702593E-6	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999939682350283	WITHOUT_CLASSIFICATION	6.031764971702593E-6	DESIGN
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999992513714193	WITHOUT_CLASSIFICATION	7.486285807291674E-7	DESIGN
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999994867335322	WITHOUT_CLASSIFICATION	5.132664677872349E-7	DESIGN
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999730253876289	WITHOUT_CLASSIFICATION	2.697461237114384E-5	DESIGN
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9972881849926135	WITHOUT_CLASSIFICATION	0.002711815007386354	DESIGN
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999999991614457	WITHOUT_CLASSIFICATION	8.385543476955911E-10	DESIGN
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999999829607692	WITHOUT_CLASSIFICATION	1.7039230872546137E-8	DESIGN
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9997626383725488	WITHOUT_CLASSIFICATION	2.3736162745126654E-4	DESIGN
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999987398699003	WITHOUT_CLASSIFICATION	1.260130099722033E-6	DESIGN
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999984396980988	WITHOUT_CLASSIFICATION	1.5603019012579558E-6	DESIGN
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9967870209980279	WITHOUT_CLASSIFICATION	0.0032129790019721992	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999961344470351	WITHOUT_CLASSIFICATION	3.865552964954597E-6	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999961344470351	WITHOUT_CLASSIFICATION	3.865552964954597E-6	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999961344470351	WITHOUT_CLASSIFICATION	3.865552964954597E-6	DESIGN
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999998955303461	WITHOUT_CLASSIFICATION	1.0446965404403772E-7	DESIGN
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999979434671964	WITHOUT_CLASSIFICATION	2.056532803513744E-6	DESIGN
// Single node in list	WITHOUT_CLASSIFICATION	0.998991634931116	WITHOUT_CLASSIFICATION	0.0010083650688840163	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.999999777342376	WITHOUT_CLASSIFICATION	2.2265762401802777E-7	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.999999777342376	WITHOUT_CLASSIFICATION	2.2265762401802777E-7	DESIGN
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999968795161827	WITHOUT_CLASSIFICATION	3.1204838174216006E-6	DESIGN
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999775940181191	WITHOUT_CLASSIFICATION	2.2405981880824964E-5	DESIGN
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999995541029327	WITHOUT_CLASSIFICATION	4.4589706722990157E-7	DESIGN
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999867978702007	WITHOUT_CLASSIFICATION	1.3202129799264573E-5	DESIGN
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.998065215739401	WITHOUT_CLASSIFICATION	0.0019347842605989473	DESIGN
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999993704481163	WITHOUT_CLASSIFICATION	6.295518836862748E-7	DESIGN
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999959135752617	WITHOUT_CLASSIFICATION	4.086424738207723E-6	DESIGN
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.999991933874136	WITHOUT_CLASSIFICATION	8.066125864026474E-6	DESIGN
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999998818981033	WITHOUT_CLASSIFICATION	1.181018966350652E-7	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999988753100897	WITHOUT_CLASSIFICATION	1.1246899104047206E-6	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999988753100897	WITHOUT_CLASSIFICATION	1.1246899104047206E-6	DESIGN
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999976561966472	WITHOUT_CLASSIFICATION	2.3438033529412054E-6	DESIGN
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9997284802521377	WITHOUT_CLASSIFICATION	2.715197478623917E-4	DESIGN
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999946804018112	WITHOUT_CLASSIFICATION	5.319598188805293E-6	DESIGN
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999814649523594	WITHOUT_CLASSIFICATION	1.8535047640634674E-5	DESIGN
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.999995917036959	WITHOUT_CLASSIFICATION	4.082963040948703E-6	DESIGN
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999975494950736	WITHOUT_CLASSIFICATION	2.450504926364664E-6	DESIGN
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999994688868916	WITHOUT_CLASSIFICATION	5.311131084574645E-7	DESIGN
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999943056610902	WITHOUT_CLASSIFICATION	5.69433890979676E-6	DESIGN
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999713378158079	WITHOUT_CLASSIFICATION	2.8662184191956756E-5	DESIGN
// POP	WITHOUT_CLASSIFICATION	0.9999835886373574	WITHOUT_CLASSIFICATION	1.6411362642545587E-5	DESIGN
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9996818328712526	WITHOUT_CLASSIFICATION	3.1816712874746295E-4	DESIGN
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999842899675161	WITHOUT_CLASSIFICATION	1.5710032483927346E-5	DESIGN
// SET_P	WITHOUT_CLASSIFICATION	0.9999462528122416	WITHOUT_CLASSIFICATION	5.374718775841985E-5	DESIGN
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999815744950283	WITHOUT_CLASSIFICATION	1.8425504971708756E-5	DESIGN
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9960268529961712	WITHOUT_CLASSIFICATION	0.003973147003828812	DESIGN
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999999165138319	WITHOUT_CLASSIFICATION	8.348616809540763E-8	DESIGN
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999995509460435	WITHOUT_CLASSIFICATION	4.4905395650954153E-7	DESIGN
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999958031418454	WITHOUT_CLASSIFICATION	4.1968581545085535E-6	DESIGN
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999999652643727	WITHOUT_CLASSIFICATION	3.47356272854088E-8	DESIGN
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999996304977742	WITHOUT_CLASSIFICATION	3.6950222581870334E-7	DESIGN
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9883388976334184	DESIGN	0.011661102366581556	WITHOUT_CLASSIFICATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.999999064912473	WITHOUT_CLASSIFICATION	9.350875269346667E-7	DESIGN
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999999740882934	WITHOUT_CLASSIFICATION	2.5911706596794893E-8	DESIGN
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9994249949389585	WITHOUT_CLASSIFICATION	5.750050610415634E-4	DESIGN
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999996617716153	WITHOUT_CLASSIFICATION	3.3822838473633166E-7	DESIGN
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.999964136858844	WITHOUT_CLASSIFICATION	3.586314115604416E-5	DESIGN
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999991175305353	WITHOUT_CLASSIFICATION	8.824694647190905E-7	DESIGN
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9998659588453148	WITHOUT_CLASSIFICATION	1.3404115468521147E-4	DESIGN
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999961777755814	WITHOUT_CLASSIFICATION	3.822224418663612E-6	DESIGN
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.999986208798934	WITHOUT_CLASSIFICATION	1.3791201066056168E-5	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999286538655952	WITHOUT_CLASSIFICATION	7.134613440479295E-5	DESIGN
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999855402959896	WITHOUT_CLASSIFICATION	1.4459704010436046E-5	DESIGN
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999234781147203	WITHOUT_CLASSIFICATION	7.652188527964014E-5	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999286538655952	WITHOUT_CLASSIFICATION	7.134613440479295E-5	DESIGN
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999063336093411	WITHOUT_CLASSIFICATION	9.366639065888169E-5	DESIGN
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9998976102774794	WITHOUT_CLASSIFICATION	1.0238972252067523E-4	DESIGN
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9994412910764542	WITHOUT_CLASSIFICATION	5.587089235458196E-4	DESIGN
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9993969498291929	WITHOUT_CLASSIFICATION	6.030501708071491E-4	DESIGN
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999585938058542	WITHOUT_CLASSIFICATION	4.140619414585436E-5	DESIGN
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999998840545441	WITHOUT_CLASSIFICATION	1.1594545589866858E-7	DESIGN
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999994654985462	WITHOUT_CLASSIFICATION	5.34501453814963E-7	DESIGN
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9998976862668604	WITHOUT_CLASSIFICATION	1.0231373313956245E-4	DESIGN
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999067875161578	WITHOUT_CLASSIFICATION	9.321248384226824E-5	DESIGN
/* $*: argv */	WITHOUT_CLASSIFICATION	0.998799604772962	WITHOUT_CLASSIFICATION	0.0012003952270379053	DESIGN
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9048689006343685	WITHOUT_CLASSIFICATION	0.09513109936563144	DESIGN
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9995460435622999	WITHOUT_CLASSIFICATION	4.5395643770009247E-4	DESIGN
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9988287099810238	WITHOUT_CLASSIFICATION	0.0011712900189762617	DESIGN
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9994805500205817	WITHOUT_CLASSIFICATION	5.194499794184219E-4	DESIGN
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9993512072164826	WITHOUT_CLASSIFICATION	6.487927835174653E-4	DESIGN
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9785308868204556	WITHOUT_CLASSIFICATION	0.021469113179544395	DESIGN
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9986975491068206	WITHOUT_CLASSIFICATION	0.0013024508931794136	DESIGN
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9975208679618509	WITHOUT_CLASSIFICATION	0.002479132038149079	DESIGN
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999504565330132	WITHOUT_CLASSIFICATION	4.954346698690721E-5	DESIGN
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9995780963375471	WITHOUT_CLASSIFICATION	4.219036624529677E-4	DESIGN
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9867163726160367	WITHOUT_CLASSIFICATION	0.01328362738396334	DESIGN
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999471881029833	WITHOUT_CLASSIFICATION	5.281189701662782E-5	DESIGN
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999902567676497	WITHOUT_CLASSIFICATION	9.743232350275858E-6	DESIGN
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999990928172545	WITHOUT_CLASSIFICATION	9.071827453323457E-7	DESIGN
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999999378034565	WITHOUT_CLASSIFICATION	6.219654346912811E-8	DESIGN
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999728773694356	WITHOUT_CLASSIFICATION	2.7122630564295012E-5	DESIGN
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999665610832346	WITHOUT_CLASSIFICATION	3.343891676536791E-5	DESIGN
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999987137707528	WITHOUT_CLASSIFICATION	1.2862292472101086E-6	DESIGN
// block (primary)	WITHOUT_CLASSIFICATION	0.9999890425499975	WITHOUT_CLASSIFICATION	1.095745000244606E-5	DESIGN
// block (expr)	WITHOUT_CLASSIFICATION	0.9999988920853531	WITHOUT_CLASSIFICATION	1.1079146469356421E-6	DESIGN
// hash	WITHOUT_CLASSIFICATION	0.9997640815341036	WITHOUT_CLASSIFICATION	2.359184658964238E-4	DESIGN
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.94420862360451	WITHOUT_CLASSIFICATION	0.05579137639548999	DESIGN
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.5847285779415066	DESIGN	0.4152714220584934	WITHOUT_CLASSIFICATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9998722935165604	WITHOUT_CLASSIFICATION	1.2770648343959546E-4	DESIGN
//  hexadecimal	WITHOUT_CLASSIFICATION	0.999982050032637	WITHOUT_CLASSIFICATION	1.7949967362987945E-5	DESIGN
// binary	WITHOUT_CLASSIFICATION	0.999510184938344	WITHOUT_CLASSIFICATION	4.898150616559596E-4	DESIGN
// decimal	WITHOUT_CLASSIFICATION	0.999975943213515	WITHOUT_CLASSIFICATION	2.4056786485020957E-5	DESIGN
//Octal	WITHOUT_CLASSIFICATION	0.9999649411507567	WITHOUT_CLASSIFICATION	3.505884924329589E-5	DESIGN
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9996995972628983	WITHOUT_CLASSIFICATION	3.004027371016952E-4	DESIGN
// backslash	WITHOUT_CLASSIFICATION	0.9999952478202653	WITHOUT_CLASSIFICATION	4.752179734808922E-6	DESIGN
// newline	WITHOUT_CLASSIFICATION	0.9999613234623084	WITHOUT_CLASSIFICATION	3.867653769165041E-5	DESIGN
// horizontal tab	WITHOUT_CLASSIFICATION	0.9998574332756343	WITHOUT_CLASSIFICATION	1.4256672436577952E-4	DESIGN
// form feed	WITHOUT_CLASSIFICATION	0.9999814661269282	WITHOUT_CLASSIFICATION	1.8533873071837747E-5	DESIGN
// vertical tab	WITHOUT_CLASSIFICATION	0.9999688084472805	WITHOUT_CLASSIFICATION	3.119155271945458E-5	DESIGN
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999988346582859	WITHOUT_CLASSIFICATION	1.1653417140784153E-6	DESIGN
// escape	WITHOUT_CLASSIFICATION	0.999991851544612	WITHOUT_CLASSIFICATION	8.148455387954812E-6	DESIGN
// hex constant	WITHOUT_CLASSIFICATION	0.9999848709474634	WITHOUT_CLASSIFICATION	1.5129052536587936E-5	DESIGN
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999982374515546	WITHOUT_CLASSIFICATION	1.7625484454728364E-6	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999997870690865	WITHOUT_CLASSIFICATION	2.129309134957689E-7	DESIGN
// space	WITHOUT_CLASSIFICATION	0.9999685186207664	WITHOUT_CLASSIFICATION	3.1481379233599695E-5	DESIGN
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9966658513776636	WITHOUT_CLASSIFICATION	0.0033341486223364084	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9998594864366903	WITHOUT_CLASSIFICATION	1.4051356330964913E-4	DESIGN
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999808709895703	WITHOUT_CLASSIFICATION	1.9129010429606586E-5	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999997870690865	WITHOUT_CLASSIFICATION	2.129309134957689E-7	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9950075854277164	DESIGN	0.004992414572283572	WITHOUT_CLASSIFICATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9950075854277164	DESIGN	0.004992414572283572	WITHOUT_CLASSIFICATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999166120302152	WITHOUT_CLASSIFICATION	8.338796978478304E-5	DESIGN
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.999936804373772	WITHOUT_CLASSIFICATION	6.319562622798709E-5	DESIGN
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999974202707836	WITHOUT_CLASSIFICATION	2.579729216399789E-6	DESIGN
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999861825136578	WITHOUT_CLASSIFICATION	1.3817486342261355E-5	DESIGN
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9966022679050065	WITHOUT_CLASSIFICATION	0.0033977320949935877	DESIGN
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.999997636894434	WITHOUT_CLASSIFICATION	2.3631055659540556E-6	DESIGN
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999985309787414	WITHOUT_CLASSIFICATION	1.4690212586457318E-6	DESIGN
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9998420896320009	DESIGN	1.579103679990466E-4	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9671072693991564	WITHOUT_CLASSIFICATION	0.032892730600843745	DESIGN
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9997549537942407	WITHOUT_CLASSIFICATION	2.4504620575935065E-4	DESIGN
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999999387016663	WITHOUT_CLASSIFICATION	6.129833383208215E-8	DESIGN
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999911636027202	WITHOUT_CLASSIFICATION	8.83639727982813E-6	DESIGN
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999498974750111	WITHOUT_CLASSIFICATION	5.010252498895295E-5	DESIGN
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999684104112034	WITHOUT_CLASSIFICATION	3.158958879665461E-5	DESIGN
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9990133409423476	WITHOUT_CLASSIFICATION	9.866590576524555E-4	DESIGN
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9972588716900931	WITHOUT_CLASSIFICATION	0.0027411283099068474	DESIGN
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999851508674309	WITHOUT_CLASSIFICATION	1.4849132569155424E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999726477737787	WITHOUT_CLASSIFICATION	2.7352226221292157E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999726477737787	WITHOUT_CLASSIFICATION	2.7352226221292157E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999726477737787	WITHOUT_CLASSIFICATION	2.7352226221292157E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999726477737787	WITHOUT_CLASSIFICATION	2.7352226221292157E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999726477737787	WITHOUT_CLASSIFICATION	2.7352226221292157E-4	DESIGN
// line 329	WITHOUT_CLASSIFICATION	0.9999990026807521	WITHOUT_CLASSIFICATION	9.97319247869429E-7	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999999559314298	WITHOUT_CLASSIFICATION	4.406857027155143E-8	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999979925726798	WITHOUT_CLASSIFICATION	2.0074273202020873E-5	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999635896319432	WITHOUT_CLASSIFICATION	3.6410368056698866E-5	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999986502675574	WITHOUT_CLASSIFICATION	1.3497324425699915E-6	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999933448035748	WITHOUT_CLASSIFICATION	6.655196425150167E-6	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.999958357467808	WITHOUT_CLASSIFICATION	4.1642532192060175E-5	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9993849944732626	WITHOUT_CLASSIFICATION	6.150055267373739E-4	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999763833558706	WITHOUT_CLASSIFICATION	2.361664412943967E-5	DESIGN
// line 271	WITHOUT_CLASSIFICATION	0.9999996716288565	WITHOUT_CLASSIFICATION	3.2837114351121936E-7	DESIGN
// line 274	WITHOUT_CLASSIFICATION	0.999999506304772	WITHOUT_CLASSIFICATION	4.936952280880284E-7	DESIGN
// line 303	WITHOUT_CLASSIFICATION	0.9999988156824746	WITHOUT_CLASSIFICATION	1.1843175254065036E-6	DESIGN
// line 311	WITHOUT_CLASSIFICATION	0.9999990427082164	WITHOUT_CLASSIFICATION	9.572917836184957E-7	DESIGN
// line 314	WITHOUT_CLASSIFICATION	0.999999005301757	WITHOUT_CLASSIFICATION	9.946982430202295E-7	DESIGN
// line 317	WITHOUT_CLASSIFICATION	0.99999891382098	WITHOUT_CLASSIFICATION	1.0861790199011604E-6	DESIGN
// line 332	WITHOUT_CLASSIFICATION	0.9999990506231241	WITHOUT_CLASSIFICATION	9.493768759468327E-7	DESIGN
// line 338	WITHOUT_CLASSIFICATION	0.999998702009598	WITHOUT_CLASSIFICATION	1.2979904020620835E-6	DESIGN
// line 341	WITHOUT_CLASSIFICATION	0.9999990549547244	WITHOUT_CLASSIFICATION	9.450452757512781E-7	DESIGN
// line 344	WITHOUT_CLASSIFICATION	0.9999983781062766	WITHOUT_CLASSIFICATION	1.6218937234226981E-6	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999990668901231	WITHOUT_CLASSIFICATION	9.331098767802165E-7	DESIGN
// line 358	WITHOUT_CLASSIFICATION	0.9999987288164647	WITHOUT_CLASSIFICATION	1.271183535351765E-6	DESIGN
// line 367	WITHOUT_CLASSIFICATION	0.9999985139214591	WITHOUT_CLASSIFICATION	1.4860785407929856E-6	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.999999119708033	WITHOUT_CLASSIFICATION	8.802919671030611E-7	DESIGN
// line 378	WITHOUT_CLASSIFICATION	0.9999986052801211	WITHOUT_CLASSIFICATION	1.394719878918474E-6	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999992568521628	WITHOUT_CLASSIFICATION	7.43147837211456E-7	DESIGN
// line 407	WITHOUT_CLASSIFICATION	0.9999989611469319	WITHOUT_CLASSIFICATION	1.0388530681675253E-6	DESIGN
// line 411	WITHOUT_CLASSIFICATION	0.9999992536209908	WITHOUT_CLASSIFICATION	7.463790090878093E-7	DESIGN
// line 414	WITHOUT_CLASSIFICATION	0.9999991532423652	WITHOUT_CLASSIFICATION	8.467576347905609E-7	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999991529919554	WITHOUT_CLASSIFICATION	8.470080447134048E-7	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999995967471382	WITHOUT_CLASSIFICATION	4.03252861754673E-7	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999991531673474	WITHOUT_CLASSIFICATION	8.468326524573984E-7	DESIGN
// line 434	WITHOUT_CLASSIFICATION	0.9999987187480135	WITHOUT_CLASSIFICATION	1.2812519865306935E-6	DESIGN
// line 443	WITHOUT_CLASSIFICATION	0.9999987590022537	WITHOUT_CLASSIFICATION	1.2409977462556014E-6	DESIGN
// line 446	WITHOUT_CLASSIFICATION	0.999998588746064	WITHOUT_CLASSIFICATION	1.4112539361038504E-6	DESIGN
// line 452	WITHOUT_CLASSIFICATION	0.9999993501733216	WITHOUT_CLASSIFICATION	6.498266782798064E-7	DESIGN
// line 457	WITHOUT_CLASSIFICATION	0.9999989057916414	WITHOUT_CLASSIFICATION	1.094208358543695E-6	DESIGN
// line 464	WITHOUT_CLASSIFICATION	0.9999988430154917	WITHOUT_CLASSIFICATION	1.1569845083022216E-6	DESIGN
// line 467	WITHOUT_CLASSIFICATION	0.9999988855892464	WITHOUT_CLASSIFICATION	1.114410753506545E-6	DESIGN
// line 470	WITHOUT_CLASSIFICATION	0.9999993187903923	WITHOUT_CLASSIFICATION	6.81209607807021E-7	DESIGN
// line 479	WITHOUT_CLASSIFICATION	0.9999987209898076	WITHOUT_CLASSIFICATION	1.2790101923904143E-6	DESIGN
// line 484	WITHOUT_CLASSIFICATION	0.9999989444795083	WITHOUT_CLASSIFICATION	1.055520491691993E-6	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999988596454472	WITHOUT_CLASSIFICATION	1.140354552828664E-6	DESIGN
// line 492	WITHOUT_CLASSIFICATION	0.9999992460259164	WITHOUT_CLASSIFICATION	7.539740835984142E-7	DESIGN
// line 498	WITHOUT_CLASSIFICATION	0.999998908026328	WITHOUT_CLASSIFICATION	1.0919736720652017E-6	DESIGN
// line 501	WITHOUT_CLASSIFICATION	0.9999993049303112	WITHOUT_CLASSIFICATION	6.950696888311866E-7	DESIGN
// line 504	WITHOUT_CLASSIFICATION	0.9999988399208234	WITHOUT_CLASSIFICATION	1.1600791765805737E-6	DESIGN
// line 507	WITHOUT_CLASSIFICATION	0.9999989290738666	WITHOUT_CLASSIFICATION	1.070926133372686E-6	DESIGN
// line 510	WITHOUT_CLASSIFICATION	0.9999994560599348	WITHOUT_CLASSIFICATION	5.439400651538676E-7	DESIGN
// line 519	WITHOUT_CLASSIFICATION	0.9999989171261371	WITHOUT_CLASSIFICATION	1.0828738628947902E-6	DESIGN
// line 525	WITHOUT_CLASSIFICATION	0.9999991294502895	WITHOUT_CLASSIFICATION	8.705497105254105E-7	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999979925726798	WITHOUT_CLASSIFICATION	2.0074273202020873E-5	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999985166297816	WITHOUT_CLASSIFICATION	1.4833702184295336E-6	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9999991244176649	WITHOUT_CLASSIFICATION	8.75582335044084E-7	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9999985285999914	WITHOUT_CLASSIFICATION	1.4714000085869898E-6	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999983267342796	WITHOUT_CLASSIFICATION	1.6732657205293385E-6	DESIGN
// line 556	WITHOUT_CLASSIFICATION	0.9999981317261405	WITHOUT_CLASSIFICATION	1.8682738594922855E-6	DESIGN
// line 559	WITHOUT_CLASSIFICATION	0.999998015466603	WITHOUT_CLASSIFICATION	1.9845333970434606E-6	DESIGN
// line 563	WITHOUT_CLASSIFICATION	0.999998446032761	WITHOUT_CLASSIFICATION	1.5539672389271985E-6	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999981488464617	WITHOUT_CLASSIFICATION	1.8511535383922355E-6	DESIGN
// line 569	WITHOUT_CLASSIFICATION	0.9999983503099363	WITHOUT_CLASSIFICATION	1.6496900636866321E-6	DESIGN
// line 575	WITHOUT_CLASSIFICATION	0.9999985270548166	WITHOUT_CLASSIFICATION	1.4729451833322262E-6	DESIGN
// line 578	WITHOUT_CLASSIFICATION	0.9999985932028728	WITHOUT_CLASSIFICATION	1.40679712723349E-6	DESIGN
// line 587	WITHOUT_CLASSIFICATION	0.9999986578330043	WITHOUT_CLASSIFICATION	1.3421669957577606E-6	DESIGN
// line 596	WITHOUT_CLASSIFICATION	0.9999973227653555	WITHOUT_CLASSIFICATION	2.677234644545177E-6	DESIGN
// line 604	WITHOUT_CLASSIFICATION	0.9999989513642982	WITHOUT_CLASSIFICATION	1.0486357018513111E-6	DESIGN
// line 607	WITHOUT_CLASSIFICATION	0.9999990472246075	WITHOUT_CLASSIFICATION	9.52775392509516E-7	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999995216156975	WITHOUT_CLASSIFICATION	4.783843024861394E-7	DESIGN
// line 613	WITHOUT_CLASSIFICATION	0.9999990730037411	WITHOUT_CLASSIFICATION	9.269962587924975E-7	DESIGN
// line 616	WITHOUT_CLASSIFICATION	0.9999989261982953	WITHOUT_CLASSIFICATION	1.073801704573793E-6	DESIGN
// line 634	WITHOUT_CLASSIFICATION	0.9999986884725887	WITHOUT_CLASSIFICATION	1.311527411398095E-6	DESIGN
// line 638	WITHOUT_CLASSIFICATION	0.9999989285072268	WITHOUT_CLASSIFICATION	1.0714927732470556E-6	DESIGN
// line 643	WITHOUT_CLASSIFICATION	0.999998862817301	WITHOUT_CLASSIFICATION	1.1371826989992744E-6	DESIGN
// line 646	WITHOUT_CLASSIFICATION	0.9999985838187215	WITHOUT_CLASSIFICATION	1.4161812784294505E-6	DESIGN
// line 655	WITHOUT_CLASSIFICATION	0.9999988523847311	WITHOUT_CLASSIFICATION	1.147615268969344E-6	DESIGN
// line 660	WITHOUT_CLASSIFICATION	0.9999992266805456	WITHOUT_CLASSIFICATION	7.733194543548986E-7	DESIGN
// line 667	WITHOUT_CLASSIFICATION	0.9999986484640712	WITHOUT_CLASSIFICATION	1.3515359288412593E-6	DESIGN
// line 670	WITHOUT_CLASSIFICATION	0.999999256118383	WITHOUT_CLASSIFICATION	7.438816170543123E-7	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9999992486026318	WITHOUT_CLASSIFICATION	7.513973681636135E-7	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999982238874969	WITHOUT_CLASSIFICATION	1.776112503038411E-6	DESIGN
// line 701	WITHOUT_CLASSIFICATION	0.9999993555497764	WITHOUT_CLASSIFICATION	6.444502236104524E-7	DESIGN
// line 717	WITHOUT_CLASSIFICATION	0.9999989486389397	WITHOUT_CLASSIFICATION	1.0513610603258324E-6	DESIGN
// line 720	WITHOUT_CLASSIFICATION	0.9999995634866559	WITHOUT_CLASSIFICATION	4.3651334417407315E-7	DESIGN
// line 726	WITHOUT_CLASSIFICATION	0.9999990861965937	WITHOUT_CLASSIFICATION	9.138034062341335E-7	DESIGN
// line 729	WITHOUT_CLASSIFICATION	0.9999991976654087	WITHOUT_CLASSIFICATION	8.023345912385997E-7	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999991834548739	WITHOUT_CLASSIFICATION	8.165451260014623E-7	DESIGN
// line 735	WITHOUT_CLASSIFICATION	0.9999988209702605	WITHOUT_CLASSIFICATION	1.1790297395783501E-6	DESIGN
// line 738	WITHOUT_CLASSIFICATION	0.9999988758129521	WITHOUT_CLASSIFICATION	1.1241870479643725E-6	DESIGN
// line 751	WITHOUT_CLASSIFICATION	0.9999991807455791	WITHOUT_CLASSIFICATION	8.19254420883662E-7	DESIGN
// line 754	WITHOUT_CLASSIFICATION	0.9999986949184874	WITHOUT_CLASSIFICATION	1.3050815125711288E-6	DESIGN
// line 757	WITHOUT_CLASSIFICATION	0.9999986489037684	WITHOUT_CLASSIFICATION	1.3510962315641407E-6	DESIGN
// line 760	WITHOUT_CLASSIFICATION	0.999999224877787	WITHOUT_CLASSIFICATION	7.751222128929734E-7	DESIGN
// line 763	WITHOUT_CLASSIFICATION	0.9999986276942977	WITHOUT_CLASSIFICATION	1.3723057023191386E-6	DESIGN
// line 769	WITHOUT_CLASSIFICATION	0.9999985431616253	WITHOUT_CLASSIFICATION	1.4568383747604004E-6	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999991922373905	WITHOUT_CLASSIFICATION	8.077626094458064E-7	DESIGN
// line 775	WITHOUT_CLASSIFICATION	0.9999987409854273	WITHOUT_CLASSIFICATION	1.2590145726980727E-6	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9999992715849455	WITHOUT_CLASSIFICATION	7.284150544401247E-7	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999987099702302	WITHOUT_CLASSIFICATION	1.2900297697486708E-6	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999990555123393	WITHOUT_CLASSIFICATION	9.444876607339681E-7	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999985144915566	WITHOUT_CLASSIFICATION	1.4855084434055696E-6	DESIGN
// line 797	WITHOUT_CLASSIFICATION	0.999998485091752	WITHOUT_CLASSIFICATION	1.5149082479933255E-6	DESIGN
// line 803	WITHOUT_CLASSIFICATION	0.9999991128089805	WITHOUT_CLASSIFICATION	8.871910196809609E-7	DESIGN
// line 806	WITHOUT_CLASSIFICATION	0.9999986839052697	WITHOUT_CLASSIFICATION	1.3160947302334947E-6	DESIGN
// line 809	WITHOUT_CLASSIFICATION	0.9999991436852649	WITHOUT_CLASSIFICATION	8.56314735134173E-7	DESIGN
// line 815	WITHOUT_CLASSIFICATION	0.999999322535446	WITHOUT_CLASSIFICATION	6.774645539870344E-7	DESIGN
// line 818	WITHOUT_CLASSIFICATION	0.9999992522228335	WITHOUT_CLASSIFICATION	7.477771664196807E-7	DESIGN
// line 821	WITHOUT_CLASSIFICATION	0.9999995776207187	WITHOUT_CLASSIFICATION	4.2237928135956156E-7	DESIGN
// line 824	WITHOUT_CLASSIFICATION	0.9999993136809031	WITHOUT_CLASSIFICATION	6.863190969261912E-7	DESIGN
// line 830	WITHOUT_CLASSIFICATION	0.9999993659998725	WITHOUT_CLASSIFICATION	6.340001274357137E-7	DESIGN
// line 833	WITHOUT_CLASSIFICATION	0.9999988294485521	WITHOUT_CLASSIFICATION	1.1705514478001164E-6	DESIGN
// line 836	WITHOUT_CLASSIFICATION	0.9999987256280017	WITHOUT_CLASSIFICATION	1.2743719981774236E-6	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999987751093952	WITHOUT_CLASSIFICATION	1.224890604753302E-6	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999993687993447	WITHOUT_CLASSIFICATION	6.312006552405128E-7	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999989480154945	WITHOUT_CLASSIFICATION	1.0519845054751123E-6	DESIGN
// line 852	WITHOUT_CLASSIFICATION	0.9999993909650542	WITHOUT_CLASSIFICATION	6.090349457448145E-7	DESIGN
// line 858	WITHOUT_CLASSIFICATION	0.9999989447695965	WITHOUT_CLASSIFICATION	1.055230403447751E-6	DESIGN
// line 861	WITHOUT_CLASSIFICATION	0.9999992766256945	WITHOUT_CLASSIFICATION	7.233743053914475E-7	DESIGN
// line 868	WITHOUT_CLASSIFICATION	0.9999988535336426	WITHOUT_CLASSIFICATION	1.1464663573358591E-6	DESIGN
// line 871	WITHOUT_CLASSIFICATION	0.9999992538789492	WITHOUT_CLASSIFICATION	7.461210508314846E-7	DESIGN
// line 876	WITHOUT_CLASSIFICATION	0.9999987016851952	WITHOUT_CLASSIFICATION	1.2983148047284206E-6	DESIGN
// line 879	WITHOUT_CLASSIFICATION	0.9999988145359807	WITHOUT_CLASSIFICATION	1.185464019306928E-6	DESIGN
// line 883	WITHOUT_CLASSIFICATION	0.9999988108206366	WITHOUT_CLASSIFICATION	1.1891793633276603E-6	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9999987694205438	WITHOUT_CLASSIFICATION	1.230579456241472E-6	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999985876559687	WITHOUT_CLASSIFICATION	1.4123440312436426E-6	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999987656122545	WITHOUT_CLASSIFICATION	1.2343877454472432E-6	DESIGN
// line 903	WITHOUT_CLASSIFICATION	0.9999987739007866	WITHOUT_CLASSIFICATION	1.2260992134007844E-6	DESIGN
// line 907	WITHOUT_CLASSIFICATION	0.999998816165931	WITHOUT_CLASSIFICATION	1.183834069047575E-6	DESIGN
// line 915	WITHOUT_CLASSIFICATION	0.9999991597216975	WITHOUT_CLASSIFICATION	8.402783025725225E-7	DESIGN
// line 920	WITHOUT_CLASSIFICATION	0.9999995255183919	WITHOUT_CLASSIFICATION	4.744816081128658E-7	DESIGN
// line 923	WITHOUT_CLASSIFICATION	0.999999102778642	WITHOUT_CLASSIFICATION	8.972213579290997E-7	DESIGN
// line 926	WITHOUT_CLASSIFICATION	0.999999005965611	WITHOUT_CLASSIFICATION	9.94034389007787E-7	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.999999129348767	WITHOUT_CLASSIFICATION	8.706512330387827E-7	DESIGN
// line 936	WITHOUT_CLASSIFICATION	0.9999983494013639	WITHOUT_CLASSIFICATION	1.6505986360827217E-6	DESIGN
// line 940	WITHOUT_CLASSIFICATION	0.9999991818880636	WITHOUT_CLASSIFICATION	8.181119363841861E-7	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9999984806301093	WITHOUT_CLASSIFICATION	1.519369890705524E-6	DESIGN
// line 948	WITHOUT_CLASSIFICATION	0.9999988450093894	WITHOUT_CLASSIFICATION	1.1549906105256803E-6	DESIGN
// line 956	WITHOUT_CLASSIFICATION	0.9999984732461857	WITHOUT_CLASSIFICATION	1.5267538141812175E-6	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9999991732457207	WITHOUT_CLASSIFICATION	8.267542792791361E-7	DESIGN
// line 964	WITHOUT_CLASSIFICATION	0.9999986272241876	WITHOUT_CLASSIFICATION	1.3727758123150367E-6	DESIGN
// line 967	WITHOUT_CLASSIFICATION	0.9999985550757041	WITHOUT_CLASSIFICATION	1.4449242959462667E-6	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999991804860578	WITHOUT_CLASSIFICATION	8.195139422015893E-7	DESIGN
// line 978	WITHOUT_CLASSIFICATION	0.9999987015757618	WITHOUT_CLASSIFICATION	1.2984242382641669E-6	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.999999268579444	WITHOUT_CLASSIFICATION	7.314205559074799E-7	DESIGN
// line 984	WITHOUT_CLASSIFICATION	0.9999987915110282	WITHOUT_CLASSIFICATION	1.2084889718303022E-6	DESIGN
// line 986	WITHOUT_CLASSIFICATION	0.9999985753138815	WITHOUT_CLASSIFICATION	1.4246861184694334E-6	DESIGN
// line 996	WITHOUT_CLASSIFICATION	0.9999982417034354	WITHOUT_CLASSIFICATION	1.758296564563599E-6	DESIGN
// line 1001	WITHOUT_CLASSIFICATION	0.9999994913125579	WITHOUT_CLASSIFICATION	5.08687441947812E-7	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999993686261003	WITHOUT_CLASSIFICATION	6.313738997117355E-7	DESIGN
// line 1008	WITHOUT_CLASSIFICATION	0.9999995476665356	WITHOUT_CLASSIFICATION	4.5233346432671617E-7	DESIGN
// line 1014	WITHOUT_CLASSIFICATION	0.999999474454765	WITHOUT_CLASSIFICATION	5.255452350235128E-7	DESIGN
// line 1029	WITHOUT_CLASSIFICATION	0.9999996839768506	WITHOUT_CLASSIFICATION	3.160231494753733E-7	DESIGN
// line 1032	WITHOUT_CLASSIFICATION	0.9999996671651715	WITHOUT_CLASSIFICATION	3.32834828430449E-7	DESIGN
// line 1034	WITHOUT_CLASSIFICATION	0.9999994440229496	WITHOUT_CLASSIFICATION	5.559770502965086E-7	DESIGN
// line 1045	WITHOUT_CLASSIFICATION	0.9999995726240449	WITHOUT_CLASSIFICATION	4.2737595515584363E-7	DESIGN
// line 1048	WITHOUT_CLASSIFICATION	0.9999995660511605	WITHOUT_CLASSIFICATION	4.339488394850136E-7	DESIGN
// line 1051	WITHOUT_CLASSIFICATION	0.9999995330344265	WITHOUT_CLASSIFICATION	4.669655735605434E-7	DESIGN
// line 1058	WITHOUT_CLASSIFICATION	0.9999995706552784	WITHOUT_CLASSIFICATION	4.2934472154908316E-7	DESIGN
// line 1070	WITHOUT_CLASSIFICATION	0.9999995595779865	WITHOUT_CLASSIFICATION	4.40422013498007E-7	DESIGN
// line 1073	WITHOUT_CLASSIFICATION	0.9999994441124909	WITHOUT_CLASSIFICATION	5.558875091358441E-7	DESIGN
// line 1076	WITHOUT_CLASSIFICATION	0.9999993671865524	WITHOUT_CLASSIFICATION	6.328134475965568E-7	DESIGN
// line 1079	WITHOUT_CLASSIFICATION	0.9999994240128891	WITHOUT_CLASSIFICATION	5.759871108685581E-7	DESIGN
// line 1082	WITHOUT_CLASSIFICATION	0.999999727870934	WITHOUT_CLASSIFICATION	2.7212906585754895E-7	DESIGN
// line 1089	WITHOUT_CLASSIFICATION	0.999999504989394	WITHOUT_CLASSIFICATION	4.950106059954481E-7	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999994539300685	WITHOUT_CLASSIFICATION	5.460699315297883E-7	DESIGN
// line 1100	WITHOUT_CLASSIFICATION	0.9999995936030508	WITHOUT_CLASSIFICATION	4.0639694918036877E-7	DESIGN
// line 1103	WITHOUT_CLASSIFICATION	0.9999994620196334	WITHOUT_CLASSIFICATION	5.379803665291655E-7	DESIGN
// line 1107	WITHOUT_CLASSIFICATION	0.9999994795465496	WITHOUT_CLASSIFICATION	5.204534503818696E-7	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9999992035405209	WITHOUT_CLASSIFICATION	7.964594792035696E-7	DESIGN
// line 1113	WITHOUT_CLASSIFICATION	0.9999991640579697	WITHOUT_CLASSIFICATION	8.359420303423127E-7	DESIGN
// line 1115	WITHOUT_CLASSIFICATION	0.9999993048804151	WITHOUT_CLASSIFICATION	6.951195849307553E-7	DESIGN
// line 1119	WITHOUT_CLASSIFICATION	0.9999991497301975	WITHOUT_CLASSIFICATION	8.502698025356833E-7	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9999995505693409	WITHOUT_CLASSIFICATION	4.494306591236205E-7	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999991675247988	WITHOUT_CLASSIFICATION	8.324752011132626E-7	DESIGN
// line 1135	WITHOUT_CLASSIFICATION	0.9999993151064447	WITHOUT_CLASSIFICATION	6.848935552218672E-7	DESIGN
// line 1137	WITHOUT_CLASSIFICATION	0.9999992110662076	WITHOUT_CLASSIFICATION	7.889337922799597E-7	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9999995775941166	WITHOUT_CLASSIFICATION	4.224058834587164E-7	DESIGN
// line 1151	WITHOUT_CLASSIFICATION	0.9999992951589438	WITHOUT_CLASSIFICATION	7.04841056218989E-7	DESIGN
// line 1154	WITHOUT_CLASSIFICATION	0.9999992501122386	WITHOUT_CLASSIFICATION	7.498877615038737E-7	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999993576661377	WITHOUT_CLASSIFICATION	6.423338623792643E-7	DESIGN
// line 1164	WITHOUT_CLASSIFICATION	0.9999993528771799	WITHOUT_CLASSIFICATION	6.471228201021138E-7	DESIGN
// line 1175	WITHOUT_CLASSIFICATION	0.9999992953223321	WITHOUT_CLASSIFICATION	7.046776678563025E-7	DESIGN
// line 1178	WITHOUT_CLASSIFICATION	0.9999992565875072	WITHOUT_CLASSIFICATION	7.434124927047518E-7	DESIGN
// line 1187	WITHOUT_CLASSIFICATION	0.9999993753571069	WITHOUT_CLASSIFICATION	6.246428931043039E-7	DESIGN
// line 1189	WITHOUT_CLASSIFICATION	0.9999993338219688	WITHOUT_CLASSIFICATION	6.66178031285037E-7	DESIGN
// line 1193	WITHOUT_CLASSIFICATION	0.9999991377263332	WITHOUT_CLASSIFICATION	8.622736668304814E-7	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9999996131101776	WITHOUT_CLASSIFICATION	3.868898224079473E-7	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999996423913603	WITHOUT_CLASSIFICATION	3.576086397755396E-7	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9999997268493767	WITHOUT_CLASSIFICATION	2.731506233731485E-7	DESIGN
// line 1214	WITHOUT_CLASSIFICATION	0.9999995081080578	WITHOUT_CLASSIFICATION	4.918919420702089E-7	DESIGN
// line 1234	WITHOUT_CLASSIFICATION	0.9999994819475899	WITHOUT_CLASSIFICATION	5.18052410083171E-7	DESIGN
// line 1239	WITHOUT_CLASSIFICATION	0.9999994156277355	WITHOUT_CLASSIFICATION	5.84372264451957E-7	DESIGN
// line 1243	WITHOUT_CLASSIFICATION	0.999999501128804	WITHOUT_CLASSIFICATION	4.988711960692781E-7	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999994954370816	WITHOUT_CLASSIFICATION	5.045629184750977E-7	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999995526212202	WITHOUT_CLASSIFICATION	4.473787798483547E-7	DESIGN
// line 1263	WITHOUT_CLASSIFICATION	0.9999994903824176	WITHOUT_CLASSIFICATION	5.096175824189832E-7	DESIGN
// line 1269	WITHOUT_CLASSIFICATION	0.9999994589904504	WITHOUT_CLASSIFICATION	5.410095496355331E-7	DESIGN
// line 1280	WITHOUT_CLASSIFICATION	0.999999728318686	WITHOUT_CLASSIFICATION	2.716813139317821E-7	DESIGN
// line 1283	WITHOUT_CLASSIFICATION	0.9999995378838089	WITHOUT_CLASSIFICATION	4.6211619102073554E-7	DESIGN
// line 1290	WITHOUT_CLASSIFICATION	0.9999996621934168	WITHOUT_CLASSIFICATION	3.3780658309516926E-7	DESIGN
// line 1296	WITHOUT_CLASSIFICATION	0.9999993835568118	WITHOUT_CLASSIFICATION	6.164431882423645E-7	DESIGN
// line 1299	WITHOUT_CLASSIFICATION	0.9999994612291169	WITHOUT_CLASSIFICATION	5.387708831477441E-7	DESIGN
// line 1302	WITHOUT_CLASSIFICATION	0.9999996628752695	WITHOUT_CLASSIFICATION	3.371247305121777E-7	DESIGN
// line 1309	WITHOUT_CLASSIFICATION	0.9999994026513798	WITHOUT_CLASSIFICATION	5.973486201488361E-7	DESIGN
// line 1313	WITHOUT_CLASSIFICATION	0.9999990964722276	WITHOUT_CLASSIFICATION	9.035277723609409E-7	DESIGN
// line 1315	WITHOUT_CLASSIFICATION	0.9999992859957622	WITHOUT_CLASSIFICATION	7.140042378098752E-7	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999997197911813	WITHOUT_CLASSIFICATION	2.802088187539516E-7	DESIGN
// line 1328	WITHOUT_CLASSIFICATION	0.9999995662061427	WITHOUT_CLASSIFICATION	4.3379385731988716E-7	DESIGN
// line 1335	WITHOUT_CLASSIFICATION	0.9999992637635917	WITHOUT_CLASSIFICATION	7.362364083064205E-7	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999993397793904	WITHOUT_CLASSIFICATION	6.60220609523195E-7	DESIGN
// line 1352	WITHOUT_CLASSIFICATION	0.9999995301872335	WITHOUT_CLASSIFICATION	4.69812766422606E-7	DESIGN
// line 1358	WITHOUT_CLASSIFICATION	0.9999993192933359	WITHOUT_CLASSIFICATION	6.807066641129124E-7	DESIGN
// line 1374	WITHOUT_CLASSIFICATION	0.9999991709982312	WITHOUT_CLASSIFICATION	8.29001768788647E-7	DESIGN
// line 1381	WITHOUT_CLASSIFICATION	0.9999993112613583	WITHOUT_CLASSIFICATION	6.88738641542842E-7	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.999999315832495	WITHOUT_CLASSIFICATION	6.841675050011735E-7	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.999999461415642	WITHOUT_CLASSIFICATION	5.385843580106299E-7	DESIGN
// line 1415	WITHOUT_CLASSIFICATION	0.9999993529400583	WITHOUT_CLASSIFICATION	6.470599416472926E-7	DESIGN
// line 1431	WITHOUT_CLASSIFICATION	0.9999993074375142	WITHOUT_CLASSIFICATION	6.925624858909172E-7	DESIGN
// line 1434	WITHOUT_CLASSIFICATION	0.9999991999354187	WITHOUT_CLASSIFICATION	8.000645812005314E-7	DESIGN
// line 1440	WITHOUT_CLASSIFICATION	0.9999995390654415	WITHOUT_CLASSIFICATION	4.6093455849100896E-7	DESIGN
// line 1443	WITHOUT_CLASSIFICATION	0.9999992246718581	WITHOUT_CLASSIFICATION	7.753281419699908E-7	DESIGN
// line 1453	WITHOUT_CLASSIFICATION	0.9999993517704971	WITHOUT_CLASSIFICATION	6.482295028210142E-7	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9999992101631185	WITHOUT_CLASSIFICATION	7.898368815458755E-7	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999995886448065	WITHOUT_CLASSIFICATION	4.1135519353475147E-7	DESIGN
// line 1465	WITHOUT_CLASSIFICATION	0.9999993919771009	WITHOUT_CLASSIFICATION	6.080228992016024E-7	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999995744043418	WITHOUT_CLASSIFICATION	4.2559565818242593E-7	DESIGN
// line 1477	WITHOUT_CLASSIFICATION	0.9999991930668773	WITHOUT_CLASSIFICATION	8.069331226687418E-7	DESIGN
// line 1480	WITHOUT_CLASSIFICATION	0.9999996200773813	WITHOUT_CLASSIFICATION	3.7992261867599253E-7	DESIGN
// line 1485	WITHOUT_CLASSIFICATION	0.9999994775282792	WITHOUT_CLASSIFICATION	5.224717206553537E-7	DESIGN
// line 1488	WITHOUT_CLASSIFICATION	0.999999348202033	WITHOUT_CLASSIFICATION	6.517979671171023E-7	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.999999054477248	WITHOUT_CLASSIFICATION	9.455227519334941E-7	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9999997084148461	WITHOUT_CLASSIFICATION	2.9158515387475424E-7	DESIGN
// line 1510	WITHOUT_CLASSIFICATION	0.9999995957050103	WITHOUT_CLASSIFICATION	4.0429498959577986E-7	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999992085370164	WITHOUT_CLASSIFICATION	7.914629835612775E-7	DESIGN
// line 1516	WITHOUT_CLASSIFICATION	0.9999991322579213	WITHOUT_CLASSIFICATION	8.67742078743254E-7	DESIGN
// line 1533	WITHOUT_CLASSIFICATION	0.9999992233855896	WITHOUT_CLASSIFICATION	7.766144104368828E-7	DESIGN
// line 1550	WITHOUT_CLASSIFICATION	0.9999995680988203	WITHOUT_CLASSIFICATION	4.3190117971627884E-7	DESIGN
// line 1553	WITHOUT_CLASSIFICATION	0.9999992148380438	WITHOUT_CLASSIFICATION	7.851619561874507E-7	DESIGN
// line 1556	WITHOUT_CLASSIFICATION	0.9999990730924742	WITHOUT_CLASSIFICATION	9.26907525812647E-7	DESIGN
// line 1565	WITHOUT_CLASSIFICATION	0.999999291852775	WITHOUT_CLASSIFICATION	7.081472249119743E-7	DESIGN
// line 1568	WITHOUT_CLASSIFICATION	0.9999993452323109	WITHOUT_CLASSIFICATION	6.54767689054328E-7	DESIGN
// line 1571	WITHOUT_CLASSIFICATION	0.9999992286234554	WITHOUT_CLASSIFICATION	7.713765447422205E-7	DESIGN
// line 1574	WITHOUT_CLASSIFICATION	0.9999992241917016	WITHOUT_CLASSIFICATION	7.758082984056878E-7	DESIGN
// line 1577	WITHOUT_CLASSIFICATION	0.9999991734935444	WITHOUT_CLASSIFICATION	8.265064556484529E-7	DESIGN
// line 1587	WITHOUT_CLASSIFICATION	0.9999993343413001	WITHOUT_CLASSIFICATION	6.656586999415892E-7	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999991279346051	WITHOUT_CLASSIFICATION	8.720653948283603E-7	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999991875554052	WITHOUT_CLASSIFICATION	8.124445946995496E-7	DESIGN
// line 1600	WITHOUT_CLASSIFICATION	0.999999537995	WITHOUT_CLASSIFICATION	4.6200499996681226E-7	DESIGN
// line 1609	WITHOUT_CLASSIFICATION	0.999999428506457	WITHOUT_CLASSIFICATION	5.714935431060147E-7	DESIGN
// line 1623	WITHOUT_CLASSIFICATION	0.9999995239900293	WITHOUT_CLASSIFICATION	4.7600997071646105E-7	DESIGN
// line 1626	WITHOUT_CLASSIFICATION	0.9999994422317579	WITHOUT_CLASSIFICATION	5.577682421547762E-7	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.999999551307618	WITHOUT_CLASSIFICATION	4.4869238198832115E-7	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.999999530931809	WITHOUT_CLASSIFICATION	4.6906819090017606E-7	DESIGN
// line 1638	WITHOUT_CLASSIFICATION	0.9999993592431539	WITHOUT_CLASSIFICATION	6.40756846145833E-7	DESIGN
// line 1641	WITHOUT_CLASSIFICATION	0.9999993457063472	WITHOUT_CLASSIFICATION	6.542936528247663E-7	DESIGN
// line 1644	WITHOUT_CLASSIFICATION	0.9999992506819531	WITHOUT_CLASSIFICATION	7.493180468861408E-7	DESIGN
// line 1649	WITHOUT_CLASSIFICATION	0.9999992739796273	WITHOUT_CLASSIFICATION	7.260203727118433E-7	DESIGN
// line 1655	WITHOUT_CLASSIFICATION	0.9999993139027971	WITHOUT_CLASSIFICATION	6.86097202928103E-7	DESIGN
// line 1658	WITHOUT_CLASSIFICATION	0.9999993689686509	WITHOUT_CLASSIFICATION	6.310313489806712E-7	DESIGN
// line 1661	WITHOUT_CLASSIFICATION	0.9999992206611259	WITHOUT_CLASSIFICATION	7.79338873963948E-7	DESIGN
// line 1672	WITHOUT_CLASSIFICATION	0.9999995513590529	WITHOUT_CLASSIFICATION	4.48640946979066E-7	DESIGN
// line 1677	WITHOUT_CLASSIFICATION	0.999999157881107	WITHOUT_CLASSIFICATION	8.421188928970712E-7	DESIGN
// line 1687	WITHOUT_CLASSIFICATION	0.999999321846589	WITHOUT_CLASSIFICATION	6.78153410921741E-7	DESIGN
// line 1694	WITHOUT_CLASSIFICATION	0.9999991275866642	WITHOUT_CLASSIFICATION	8.724133356894577E-7	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999994462674533	WITHOUT_CLASSIFICATION	5.537325467161019E-7	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999994332187342	WITHOUT_CLASSIFICATION	5.667812658311151E-7	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999995520144535	WITHOUT_CLASSIFICATION	4.479855466656725E-7	DESIGN
// line 1733	WITHOUT_CLASSIFICATION	0.9999990389544096	WITHOUT_CLASSIFICATION	9.610455904115038E-7	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999994760598377	WITHOUT_CLASSIFICATION	5.239401622768885E-7	DESIGN
// line 1745	WITHOUT_CLASSIFICATION	0.9999992789351041	WITHOUT_CLASSIFICATION	7.210648958979017E-7	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999990715972449	WITHOUT_CLASSIFICATION	9.284027552252928E-7	DESIGN
// line 1757	WITHOUT_CLASSIFICATION	0.999999094977251	WITHOUT_CLASSIFICATION	9.050227490278065E-7	DESIGN
// line 1769	WITHOUT_CLASSIFICATION	0.9999990231170733	WITHOUT_CLASSIFICATION	9.768829266668754E-7	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999994268695105	WITHOUT_CLASSIFICATION	5.731304895780973E-7	DESIGN
// line 1775	WITHOUT_CLASSIFICATION	0.9999990747005006	WITHOUT_CLASSIFICATION	9.252994993565667E-7	DESIGN
// line 1784	WITHOUT_CLASSIFICATION	0.9999991684620086	WITHOUT_CLASSIFICATION	8.315379913195551E-7	DESIGN
// line 1808	WITHOUT_CLASSIFICATION	0.9999995075678739	WITHOUT_CLASSIFICATION	4.924321260292782E-7	DESIGN
// line 1814	WITHOUT_CLASSIFICATION	0.9999993604587767	WITHOUT_CLASSIFICATION	6.395412233454212E-7	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999992961005236	WITHOUT_CLASSIFICATION	7.038994764544877E-7	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999996536695186	WITHOUT_CLASSIFICATION	3.4633048143672707E-7	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999896178865414	WITHOUT_CLASSIFICATION	1.0382113458553503E-5	DESIGN
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9861924145549105	WITHOUT_CLASSIFICATION	0.013807585445089572	DESIGN
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.999992719746641	WITHOUT_CLASSIFICATION	7.2802533590691275E-6	DESIGN
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999363700605804	WITHOUT_CLASSIFICATION	6.362993941957191E-5	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999839504557207	WITHOUT_CLASSIFICATION	1.6049544279272766E-5	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9998921054903546	WITHOUT_CLASSIFICATION	1.0789450964543202E-4	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9985797393543692	WITHOUT_CLASSIFICATION	0.001420260645630823	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9982767826630364	WITHOUT_CLASSIFICATION	0.0017232173369636059	DESIGN
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999906476377701	WITHOUT_CLASSIFICATION	9.352362229925116E-6	DESIGN
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9994866396551303	WITHOUT_CLASSIFICATION	5.133603448696463E-4	DESIGN
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.999804952446888	WITHOUT_CLASSIFICATION	1.9504755311194842E-4	DESIGN
// line 529	WITHOUT_CLASSIFICATION	0.9999990482687252	WITHOUT_CLASSIFICATION	9.517312747907479E-7	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999988894756855	WITHOUT_CLASSIFICATION	1.1105243145269232E-6	DESIGN
/* XXX*/	WITHOUT_CLASSIFICATION	0.9847708811060005	WITHOUT_CLASSIFICATION	0.015229118893999574	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999782928331598	WITHOUT_CLASSIFICATION	2.1707166840233924E-5	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999993731144745	WITHOUT_CLASSIFICATION	6.268855255172851E-7	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9997887918489291	WITHOUT_CLASSIFICATION	2.112081510708931E-4	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999995675863854	WITHOUT_CLASSIFICATION	4.3241361462184603E-7	DESIGN
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999999995605129	WITHOUT_CLASSIFICATION	4.3948707802221686E-10	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999828458626068	WITHOUT_CLASSIFICATION	1.7154137393211803E-5	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999999752094211	WITHOUT_CLASSIFICATION	2.4790578937608034E-8	DESIGN
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999998670958515	WITHOUT_CLASSIFICATION	1.3290414843390556E-7	DESIGN
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.999998739259681	WITHOUT_CLASSIFICATION	1.2607403190338772E-6	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999996667021902	WITHOUT_CLASSIFICATION	3.332978097361839E-7	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999996667021902	WITHOUT_CLASSIFICATION	3.332978097361839E-7	DESIGN
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9416847315012145	WITHOUT_CLASSIFICATION	0.05831526849878558	DESIGN
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9968220868819101	WITHOUT_CLASSIFICATION	0.0031779131180898535	DESIGN
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.999611061653975	WITHOUT_CLASSIFICATION	3.8893834602514926E-4	DESIGN
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.7980616849200652	DESIGN	0.20193831507993484	WITHOUT_CLASSIFICATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999957402042358	WITHOUT_CLASSIFICATION	4.259795764225284E-6	DESIGN
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999998185105712	WITHOUT_CLASSIFICATION	1.8148942878968088E-7	DESIGN
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9997312333580921	WITHOUT_CLASSIFICATION	2.687666419079458E-4	DESIGN
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.999999996371324	WITHOUT_CLASSIFICATION	3.628675947233732E-9	DESIGN
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.8426478000023674	WITHOUT_CLASSIFICATION	0.15735219999763264	DESIGN
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999999910622686	WITHOUT_CLASSIFICATION	8.93773138206213E-9	DESIGN
// Parser states:	WITHOUT_CLASSIFICATION	0.9999974560905814	WITHOUT_CLASSIFICATION	2.5439094185913094E-6	DESIGN
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999984989261841	WITHOUT_CLASSIFICATION	1.5010738159606437E-6	DESIGN
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999999915085571	WITHOUT_CLASSIFICATION	8.491442822020875E-9	DESIGN
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999908574552947	WITHOUT_CLASSIFICATION	9.142544705238591E-6	DESIGN
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999954804102172	WITHOUT_CLASSIFICATION	4.519589782657655E-6	DESIGN
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999993849148754	WITHOUT_CLASSIFICATION	6.150851246370041E-7	DESIGN
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.999999121275596	WITHOUT_CLASSIFICATION	8.787244039480199E-7	DESIGN
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.999952972679098	WITHOUT_CLASSIFICATION	4.70273209020769E-5	DESIGN
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9996689255131244	WITHOUT_CLASSIFICATION	3.310744868756732E-4	DESIGN
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9998748781822298	WITHOUT_CLASSIFICATION	1.2512181777027295E-4	DESIGN
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999583127104	WITHOUT_CLASSIFICATION	4.1687289656897944E-8	DESIGN
// Node	WITHOUT_CLASSIFICATION	0.9999888764102238	WITHOUT_CLASSIFICATION	1.1123589776102987E-5	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9591071360601918	DESIGN	0.04089286393980828	WITHOUT_CLASSIFICATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999384078788096	WITHOUT_CLASSIFICATION	6.159212119034711E-5	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9591071360601918	DESIGN	0.04089286393980828	WITHOUT_CLASSIFICATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9998558491912073	WITHOUT_CLASSIFICATION	1.4415080879279192E-4	DESIGN
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9998634428429164	WITHOUT_CLASSIFICATION	1.3655715708365933E-4	DESIGN
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.6621267748806567	WITHOUT_CLASSIFICATION	0.3378732251193433	DESIGN
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999666339607413	WITHOUT_CLASSIFICATION	3.33660392588146E-5	DESIGN
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999990361559256	WITHOUT_CLASSIFICATION	9.638440744359816E-7	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999986794543235	WITHOUT_CLASSIFICATION	1.3205456764523634E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999986794543235	WITHOUT_CLASSIFICATION	1.3205456764523634E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999986794543235	WITHOUT_CLASSIFICATION	1.3205456764523634E-6	DESIGN
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999993698680003	WITHOUT_CLASSIFICATION	6.301319997345518E-7	DESIGN
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999084730904292	WITHOUT_CLASSIFICATION	9.152690957072099E-5	DESIGN
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9998317259517604	WITHOUT_CLASSIFICATION	1.682740482396069E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998403320516266	WITHOUT_CLASSIFICATION	1.5966794837341455E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998403320516266	WITHOUT_CLASSIFICATION	1.5966794837341455E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998403320516266	WITHOUT_CLASSIFICATION	1.5966794837341455E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998403320516266	WITHOUT_CLASSIFICATION	1.5966794837341455E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998403320516266	WITHOUT_CLASSIFICATION	1.5966794837341455E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998403320516266	WITHOUT_CLASSIFICATION	1.5966794837341455E-4	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999641118426263	WITHOUT_CLASSIFICATION	3.588815737377604E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999641118426263	WITHOUT_CLASSIFICATION	3.588815737377604E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999641118426263	WITHOUT_CLASSIFICATION	3.588815737377604E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999641118426263	WITHOUT_CLASSIFICATION	3.588815737377604E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999641118426263	WITHOUT_CLASSIFICATION	3.588815737377604E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997361315623208	WITHOUT_CLASSIFICATION	2.638684376791982E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997361315623208	WITHOUT_CLASSIFICATION	2.638684376791982E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997361315623208	WITHOUT_CLASSIFICATION	2.638684376791982E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997361315623208	WITHOUT_CLASSIFICATION	2.638684376791982E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997361315623208	WITHOUT_CLASSIFICATION	2.638684376791982E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999799433888088	WITHOUT_CLASSIFICATION	2.0056611191273013E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999799433888088	WITHOUT_CLASSIFICATION	2.0056611191273013E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999799433888088	WITHOUT_CLASSIFICATION	2.0056611191273013E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999799433888088	WITHOUT_CLASSIFICATION	2.0056611191273013E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999799433888088	WITHOUT_CLASSIFICATION	2.0056611191273013E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999799433888088	WITHOUT_CLASSIFICATION	2.0056611191273013E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999691233843625	WITHOUT_CLASSIFICATION	3.087661563743372E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999691233843625	WITHOUT_CLASSIFICATION	3.087661563743372E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999691233843625	WITHOUT_CLASSIFICATION	3.087661563743372E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999691233843625	WITHOUT_CLASSIFICATION	3.087661563743372E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999691233843625	WITHOUT_CLASSIFICATION	3.087661563743372E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999752760220756	WITHOUT_CLASSIFICATION	2.4723977924367983E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999752760220756	WITHOUT_CLASSIFICATION	2.4723977924367983E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999752760220756	WITHOUT_CLASSIFICATION	2.4723977924367983E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999752760220756	WITHOUT_CLASSIFICATION	2.4723977924367983E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999752760220756	WITHOUT_CLASSIFICATION	2.4723977924367983E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999979925726798	WITHOUT_CLASSIFICATION	2.0074273202020873E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999979925726798	WITHOUT_CLASSIFICATION	2.0074273202020873E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999979925726798	WITHOUT_CLASSIFICATION	2.0074273202020873E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999979925726798	WITHOUT_CLASSIFICATION	2.0074273202020873E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999979925726798	WITHOUT_CLASSIFICATION	2.0074273202020873E-5	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999635896319432	WITHOUT_CLASSIFICATION	3.6410368056698866E-5	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999933448035748	WITHOUT_CLASSIFICATION	6.655196425150167E-6	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.999958357467808	WITHOUT_CLASSIFICATION	4.1642532192060175E-5	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9993849944732626	WITHOUT_CLASSIFICATION	6.150055267373739E-4	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999763833558706	WITHOUT_CLASSIFICATION	2.361664412943967E-5	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9999993732187509	WITHOUT_CLASSIFICATION	6.267812490881502E-7	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999990668901231	WITHOUT_CLASSIFICATION	9.331098767802165E-7	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999992568521628	WITHOUT_CLASSIFICATION	7.43147837211456E-7	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999991529919554	WITHOUT_CLASSIFICATION	8.470080447134048E-7	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999995967471382	WITHOUT_CLASSIFICATION	4.03252861754673E-7	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999992361675024	WITHOUT_CLASSIFICATION	7.638324976528325E-7	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999991531673474	WITHOUT_CLASSIFICATION	8.468326524573984E-7	DESIGN
// line 280	WITHOUT_CLASSIFICATION	0.9999997239508578	WITHOUT_CLASSIFICATION	2.760491421581359E-7	DESIGN
// line 283	WITHOUT_CLASSIFICATION	0.999999529778736	WITHOUT_CLASSIFICATION	4.7022126402698426E-7	DESIGN
// line 296	WITHOUT_CLASSIFICATION	0.9999993302359022	WITHOUT_CLASSIFICATION	6.697640978322553E-7	DESIGN
// line 324	WITHOUT_CLASSIFICATION	0.99999897973015	WITHOUT_CLASSIFICATION	1.0202698500397482E-6	DESIGN
// line 327	WITHOUT_CLASSIFICATION	0.9999990741327766	WITHOUT_CLASSIFICATION	9.258672234237792E-7	DESIGN
// line 331	WITHOUT_CLASSIFICATION	0.9999989955233946	WITHOUT_CLASSIFICATION	1.0044766054467271E-6	DESIGN
// line 333	WITHOUT_CLASSIFICATION	0.9999983193637563	WITHOUT_CLASSIFICATION	1.6806362437417526E-6	DESIGN
// line 336	WITHOUT_CLASSIFICATION	0.9999981974793472	WITHOUT_CLASSIFICATION	1.8025206527505178E-6	DESIGN
// line 342	WITHOUT_CLASSIFICATION	0.999999115547362	WITHOUT_CLASSIFICATION	8.84452638052412E-7	DESIGN
// line 345	WITHOUT_CLASSIFICATION	0.9999987862189214	WITHOUT_CLASSIFICATION	1.2137810786719477E-6	DESIGN
// line 348	WITHOUT_CLASSIFICATION	0.9999987670730615	WITHOUT_CLASSIFICATION	1.2329269385568123E-6	DESIGN
// line 354	WITHOUT_CLASSIFICATION	0.9999985156813177	WITHOUT_CLASSIFICATION	1.4843186823048354E-6	DESIGN
// line 368	WITHOUT_CLASSIFICATION	0.9999987210986941	WITHOUT_CLASSIFICATION	1.2789013058711064E-6	DESIGN
// line 377	WITHOUT_CLASSIFICATION	0.9999983476536836	WITHOUT_CLASSIFICATION	1.6523463163839566E-6	DESIGN
// line 388	WITHOUT_CLASSIFICATION	0.999998684251416	WITHOUT_CLASSIFICATION	1.3157485839393779E-6	DESIGN
// line 392	WITHOUT_CLASSIFICATION	0.9999989946616381	WITHOUT_CLASSIFICATION	1.0053383619481059E-6	DESIGN
// line 397	WITHOUT_CLASSIFICATION	0.9999982914298997	WITHOUT_CLASSIFICATION	1.7085701001775828E-6	DESIGN
// line 429	WITHOUT_CLASSIFICATION	0.9999992575351674	WITHOUT_CLASSIFICATION	7.42464832718701E-7	DESIGN
// line 432	WITHOUT_CLASSIFICATION	0.9999992980038815	WITHOUT_CLASSIFICATION	7.01996118404592E-7	DESIGN
// line 436	WITHOUT_CLASSIFICATION	0.9999986686165647	WITHOUT_CLASSIFICATION	1.3313834352029711E-6	DESIGN
// line 445	WITHOUT_CLASSIFICATION	0.9999989704721998	WITHOUT_CLASSIFICATION	1.029527800251093E-6	DESIGN
// line 448	WITHOUT_CLASSIFICATION	0.9999989574355119	WITHOUT_CLASSIFICATION	1.0425644880198008E-6	DESIGN
// line 454	WITHOUT_CLASSIFICATION	0.9999988001723586	WITHOUT_CLASSIFICATION	1.1998276412668289E-6	DESIGN
// line 459	WITHOUT_CLASSIFICATION	0.9999986525425153	WITHOUT_CLASSIFICATION	1.3474574846234395E-6	DESIGN
// line 466	WITHOUT_CLASSIFICATION	0.9999986572770196	WITHOUT_CLASSIFICATION	1.3427229804194651E-6	DESIGN
// line 469	WITHOUT_CLASSIFICATION	0.9999987943223759	WITHOUT_CLASSIFICATION	1.2056776240906104E-6	DESIGN
// line 478	WITHOUT_CLASSIFICATION	0.9999989097981644	WITHOUT_CLASSIFICATION	1.0902018355714454E-6	DESIGN
// line 481	WITHOUT_CLASSIFICATION	0.9999993479620849	WITHOUT_CLASSIFICATION	6.520379151101978E-7	DESIGN
// line 488	WITHOUT_CLASSIFICATION	0.999998994672463	WITHOUT_CLASSIFICATION	1.005327536988261E-6	DESIGN
// line 494	WITHOUT_CLASSIFICATION	0.9999985777222652	WITHOUT_CLASSIFICATION	1.4222777348669272E-6	DESIGN
// line 497	WITHOUT_CLASSIFICATION	0.999998718622654	WITHOUT_CLASSIFICATION	1.2813773459859582E-6	DESIGN
// line 503	WITHOUT_CLASSIFICATION	0.999998889341871	WITHOUT_CLASSIFICATION	1.1106581290846275E-6	DESIGN
// line 506	WITHOUT_CLASSIFICATION	0.9999983562414502	WITHOUT_CLASSIFICATION	1.6437585498717988E-6	DESIGN
// line 509	WITHOUT_CLASSIFICATION	0.9999989659845101	WITHOUT_CLASSIFICATION	1.0340154898308673E-6	DESIGN
// line 512	WITHOUT_CLASSIFICATION	0.999999367459308	WITHOUT_CLASSIFICATION	6.325406919395428E-7	DESIGN
// line 521	WITHOUT_CLASSIFICATION	0.9999994008518513	WITHOUT_CLASSIFICATION	5.991481486788683E-7	DESIGN
// line 526	WITHOUT_CLASSIFICATION	0.9999989143306153	WITHOUT_CLASSIFICATION	1.085669384677267E-6	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9999991244176649	WITHOUT_CLASSIFICATION	8.75582335044084E-7	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9999985285999914	WITHOUT_CLASSIFICATION	1.4714000085869898E-6	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999983267342796	WITHOUT_CLASSIFICATION	1.6732657205293385E-6	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999981488464617	WITHOUT_CLASSIFICATION	1.8511535383922355E-6	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999995216156975	WITHOUT_CLASSIFICATION	4.783843024861394E-7	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9999992486026318	WITHOUT_CLASSIFICATION	7.513973681636135E-7	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999990794451246	WITHOUT_CLASSIFICATION	9.205548753721535E-7	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999982238874969	WITHOUT_CLASSIFICATION	1.776112503038411E-6	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999991922373905	WITHOUT_CLASSIFICATION	8.077626094458064E-7	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9999992715849455	WITHOUT_CLASSIFICATION	7.284150544401247E-7	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.999998966103546	WITHOUT_CLASSIFICATION	1.033896454098934E-6	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999987099702302	WITHOUT_CLASSIFICATION	1.2900297697486708E-6	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999990555123393	WITHOUT_CLASSIFICATION	9.444876607339681E-7	DESIGN
// line 534	WITHOUT_CLASSIFICATION	0.9999985001468307	WITHOUT_CLASSIFICATION	1.4998531693191776E-6	DESIGN
// line 549	WITHOUT_CLASSIFICATION	0.9999984283354334	WITHOUT_CLASSIFICATION	1.5716645666821234E-6	DESIGN
// line 552	WITHOUT_CLASSIFICATION	0.9999990426592451	WITHOUT_CLASSIFICATION	9.573407548558691E-7	DESIGN
// line 558	WITHOUT_CLASSIFICATION	0.9999986138134273	WITHOUT_CLASSIFICATION	1.3861865727821949E-6	DESIGN
// line 561	WITHOUT_CLASSIFICATION	0.9999990053294304	WITHOUT_CLASSIFICATION	9.946705696177173E-7	DESIGN
// line 571	WITHOUT_CLASSIFICATION	0.9999989594571675	WITHOUT_CLASSIFICATION	1.040542832523724E-6	DESIGN
// line 574	WITHOUT_CLASSIFICATION	0.9999984355785915	WITHOUT_CLASSIFICATION	1.564421408505803E-6	DESIGN
// line 579	WITHOUT_CLASSIFICATION	0.9999983495645421	WITHOUT_CLASSIFICATION	1.6504354579056327E-6	DESIGN
// line 586	WITHOUT_CLASSIFICATION	0.9999984191901933	WITHOUT_CLASSIFICATION	1.5808098066762474E-6	DESIGN
// line 589	WITHOUT_CLASSIFICATION	0.9999985693063804	WITHOUT_CLASSIFICATION	1.4306936194973186E-6	DESIGN
// line 592	WITHOUT_CLASSIFICATION	0.9999986688339629	WITHOUT_CLASSIFICATION	1.331166037005272E-6	DESIGN
// line 595	WITHOUT_CLASSIFICATION	0.9999979248415033	WITHOUT_CLASSIFICATION	2.0751584967299834E-6	DESIGN
// line 598	WITHOUT_CLASSIFICATION	0.9999980709776884	WITHOUT_CLASSIFICATION	1.9290223114454155E-6	DESIGN
// line 623	WITHOUT_CLASSIFICATION	0.999999202860445	WITHOUT_CLASSIFICATION	7.971395550304153E-7	DESIGN
// line 627	WITHOUT_CLASSIFICATION	0.9999992806857437	WITHOUT_CLASSIFICATION	7.193142563450404E-7	DESIGN
// line 630	WITHOUT_CLASSIFICATION	0.9999992601182179	WITHOUT_CLASSIFICATION	7.398817821205903E-7	DESIGN
// line 633	WITHOUT_CLASSIFICATION	0.9999986340225333	WITHOUT_CLASSIFICATION	1.3659774667302471E-6	DESIGN
// line 639	WITHOUT_CLASSIFICATION	0.9999985706113531	WITHOUT_CLASSIFICATION	1.4293886469219125E-6	DESIGN
// line 648	WITHOUT_CLASSIFICATION	0.9999990097826146	WITHOUT_CLASSIFICATION	9.90217385432212E-7	DESIGN
// line 657	WITHOUT_CLASSIFICATION	0.9999987732333894	WITHOUT_CLASSIFICATION	1.2267666106667073E-6	DESIGN
// line 661	WITHOUT_CLASSIFICATION	0.9999991236511879	WITHOUT_CLASSIFICATION	8.76348812018991E-7	DESIGN
// line 666	WITHOUT_CLASSIFICATION	0.9999983429226419	WITHOUT_CLASSIFICATION	1.6570773581769782E-6	DESIGN
// line 678	WITHOUT_CLASSIFICATION	0.9999988118895641	WITHOUT_CLASSIFICATION	1.1881104358550918E-6	DESIGN
// line 682	WITHOUT_CLASSIFICATION	0.9999993360922345	WITHOUT_CLASSIFICATION	6.639077655082706E-7	DESIGN
// line 688	WITHOUT_CLASSIFICATION	0.9999988262439974	WITHOUT_CLASSIFICATION	1.1737560026470766E-6	DESIGN
// line 699	WITHOUT_CLASSIFICATION	0.9999985307505327	WITHOUT_CLASSIFICATION	1.4692494672291764E-6	DESIGN
// line 706	WITHOUT_CLASSIFICATION	0.9999984777105649	WITHOUT_CLASSIFICATION	1.5222894349993424E-6	DESIGN
// line 708	WITHOUT_CLASSIFICATION	0.9999991548281346	WITHOUT_CLASSIFICATION	8.451718652691612E-7	DESIGN
// line 727	WITHOUT_CLASSIFICATION	0.9999992244353362	WITHOUT_CLASSIFICATION	7.755646638755632E-7	DESIGN
// line 737	WITHOUT_CLASSIFICATION	0.9999985843495452	WITHOUT_CLASSIFICATION	1.415650454702971E-6	DESIGN
// line 753	WITHOUT_CLASSIFICATION	0.9999987241823076	WITHOUT_CLASSIFICATION	1.275817692367436E-6	DESIGN
// line 779	WITHOUT_CLASSIFICATION	0.9999984425386408	WITHOUT_CLASSIFICATION	1.5574613592133261E-6	DESIGN
// line 801	WITHOUT_CLASSIFICATION	0.9999994435382408	WITHOUT_CLASSIFICATION	5.564617592290451E-7	DESIGN
// line 808	WITHOUT_CLASSIFICATION	0.9999991271844414	WITHOUT_CLASSIFICATION	8.7281555858883E-7	DESIGN
// line 811	WITHOUT_CLASSIFICATION	0.999999271494981	WITHOUT_CLASSIFICATION	7.285050190098818E-7	DESIGN
// line 817	WITHOUT_CLASSIFICATION	0.999999174403648	WITHOUT_CLASSIFICATION	8.25596351922491E-7	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999993687993447	WITHOUT_CLASSIFICATION	6.312006552405128E-7	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999991313194728	WITHOUT_CLASSIFICATION	8.686805272126353E-7	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999989480154945	WITHOUT_CLASSIFICATION	1.0519845054751123E-6	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9999987694205438	WITHOUT_CLASSIFICATION	1.230579456241472E-6	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999987656122545	WITHOUT_CLASSIFICATION	1.2343877454472432E-6	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.999999129348767	WITHOUT_CLASSIFICATION	8.706512330387827E-7	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9999984806301093	WITHOUT_CLASSIFICATION	1.519369890705524E-6	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9999991732457207	WITHOUT_CLASSIFICATION	8.267542792791361E-7	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.999999268579444	WITHOUT_CLASSIFICATION	7.314205559074799E-7	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999993686261003	WITHOUT_CLASSIFICATION	6.313738997117355E-7	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999995445370198	WITHOUT_CLASSIFICATION	4.5546298023704676E-7	DESIGN
// line 820	WITHOUT_CLASSIFICATION	0.9999996350047521	WITHOUT_CLASSIFICATION	3.649952478031957E-7	DESIGN
// line 826	WITHOUT_CLASSIFICATION	0.9999992348141334	WITHOUT_CLASSIFICATION	7.651858665832186E-7	DESIGN
// line 829	WITHOUT_CLASSIFICATION	0.9999993291194087	WITHOUT_CLASSIFICATION	6.708805914203046E-7	DESIGN
// line 832	WITHOUT_CLASSIFICATION	0.9999993278610886	WITHOUT_CLASSIFICATION	6.721389113864396E-7	DESIGN
// line 851	WITHOUT_CLASSIFICATION	0.999999352350103	WITHOUT_CLASSIFICATION	6.476498969746739E-7	DESIGN
// line 857	WITHOUT_CLASSIFICATION	0.9999989747749968	WITHOUT_CLASSIFICATION	1.0252250032346117E-6	DESIGN
// line 860	WITHOUT_CLASSIFICATION	0.999999362587529	WITHOUT_CLASSIFICATION	6.374124710393327E-7	DESIGN
// line 863	WITHOUT_CLASSIFICATION	0.9999988698769443	WITHOUT_CLASSIFICATION	1.1301230556882353E-6	DESIGN
// line 866	WITHOUT_CLASSIFICATION	0.999998653748026	WITHOUT_CLASSIFICATION	1.3462519739960947E-6	DESIGN
// line 869	WITHOUT_CLASSIFICATION	0.9999987891228329	WITHOUT_CLASSIFICATION	1.2108771670686014E-6	DESIGN
// line 875	WITHOUT_CLASSIFICATION	0.9999990416992623	WITHOUT_CLASSIFICATION	9.58300737604468E-7	DESIGN
// line 884	WITHOUT_CLASSIFICATION	0.9999988415555466	WITHOUT_CLASSIFICATION	1.158444453384875E-6	DESIGN
// line 887	WITHOUT_CLASSIFICATION	0.9999988404789447	WITHOUT_CLASSIFICATION	1.1595210552763256E-6	DESIGN
// line 890	WITHOUT_CLASSIFICATION	0.9999992259700335	WITHOUT_CLASSIFICATION	7.740299663767881E-7	DESIGN
// line 902	WITHOUT_CLASSIFICATION	0.9999993347516601	WITHOUT_CLASSIFICATION	6.652483398643429E-7	DESIGN
// line 909	WITHOUT_CLASSIFICATION	0.9999988456075208	WITHOUT_CLASSIFICATION	1.1543924791380438E-6	DESIGN
// line 912	WITHOUT_CLASSIFICATION	0.9999993995450274	WITHOUT_CLASSIFICATION	6.004549726741655E-7	DESIGN
// line 916	WITHOUT_CLASSIFICATION	0.9999988921019084	WITHOUT_CLASSIFICATION	1.107898091648249E-6	DESIGN
// line 922	WITHOUT_CLASSIFICATION	0.9999991941772655	WITHOUT_CLASSIFICATION	8.058227345214442E-7	DESIGN
// line 928	WITHOUT_CLASSIFICATION	0.9999992690598023	WITHOUT_CLASSIFICATION	7.309401976308788E-7	DESIGN
// line 941	WITHOUT_CLASSIFICATION	0.9999991146933641	WITHOUT_CLASSIFICATION	8.85306635792131E-7	DESIGN
// line 947	WITHOUT_CLASSIFICATION	0.9999986127946021	WITHOUT_CLASSIFICATION	1.387205397894007E-6	DESIGN
// line 951	WITHOUT_CLASSIFICATION	0.9999991775815764	WITHOUT_CLASSIFICATION	8.224184234641254E-7	DESIGN
// line 955	WITHOUT_CLASSIFICATION	0.999998765454757	WITHOUT_CLASSIFICATION	1.234545243030744E-6	DESIGN
// line 965	WITHOUT_CLASSIFICATION	0.9999987831772988	WITHOUT_CLASSIFICATION	1.2168227011039274E-6	DESIGN
// line 969	WITHOUT_CLASSIFICATION	0.9999984834613207	WITHOUT_CLASSIFICATION	1.5165386792866294E-6	DESIGN
// line 977	WITHOUT_CLASSIFICATION	0.9999984617365983	WITHOUT_CLASSIFICATION	1.5382634016981737E-6	DESIGN
// line 983	WITHOUT_CLASSIFICATION	0.9999987594483792	WITHOUT_CLASSIFICATION	1.2405516207552585E-6	DESIGN
// line 1013	WITHOUT_CLASSIFICATION	0.999999435316617	WITHOUT_CLASSIFICATION	5.64683383144972E-7	DESIGN
// line 1023	WITHOUT_CLASSIFICATION	0.9999996752735063	WITHOUT_CLASSIFICATION	3.247264937576614E-7	DESIGN
// line 1035	WITHOUT_CLASSIFICATION	0.9999995223175561	WITHOUT_CLASSIFICATION	4.776824439204237E-7	DESIGN
// line 1041	WITHOUT_CLASSIFICATION	0.9999995027901154	WITHOUT_CLASSIFICATION	4.972098845320683E-7	DESIGN
// line 1043	WITHOUT_CLASSIFICATION	0.9999994834568026	WITHOUT_CLASSIFICATION	5.165431974349773E-7	DESIGN
// line 1054	WITHOUT_CLASSIFICATION	0.9999994979213358	WITHOUT_CLASSIFICATION	5.020786641768178E-7	DESIGN
// line 1057	WITHOUT_CLASSIFICATION	0.9999995003611349	WITHOUT_CLASSIFICATION	4.996388650875243E-7	DESIGN
// line 1060	WITHOUT_CLASSIFICATION	0.9999994972096792	WITHOUT_CLASSIFICATION	5.027903208372382E-7	DESIGN
// line 1069	WITHOUT_CLASSIFICATION	0.9999993491397623	WITHOUT_CLASSIFICATION	6.508602377950413E-7	DESIGN
// line 1075	WITHOUT_CLASSIFICATION	0.9999995329133691	WITHOUT_CLASSIFICATION	4.670866308362249E-7	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9999995679078771	WITHOUT_CLASSIFICATION	4.320921227738123E-7	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9999992035405209	WITHOUT_CLASSIFICATION	7.964594792035696E-7	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999995355941973	WITHOUT_CLASSIFICATION	4.6440580275755893E-7	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9999995505693409	WITHOUT_CLASSIFICATION	4.494306591236205E-7	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9999995775941166	WITHOUT_CLASSIFICATION	4.224058834587164E-7	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999993576661377	WITHOUT_CLASSIFICATION	6.423338623792643E-7	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9999996131101776	WITHOUT_CLASSIFICATION	3.868898224079473E-7	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999996423913603	WITHOUT_CLASSIFICATION	3.576086397755396E-7	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999994954370816	WITHOUT_CLASSIFICATION	5.045629184750977E-7	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999995526212202	WITHOUT_CLASSIFICATION	4.473787798483547E-7	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9999995123731602	WITHOUT_CLASSIFICATION	4.87626839779513E-7	DESIGN
// line 1078	WITHOUT_CLASSIFICATION	0.9999995081202803	WITHOUT_CLASSIFICATION	4.918797198012342E-7	DESIGN
// line 1084	WITHOUT_CLASSIFICATION	0.999999536283477	WITHOUT_CLASSIFICATION	4.6371652307413943E-7	DESIGN
// line 1087	WITHOUT_CLASSIFICATION	0.9999995359968318	WITHOUT_CLASSIFICATION	4.6400316819386623E-7	DESIGN
// line 1090	WITHOUT_CLASSIFICATION	0.9999995094604968	WITHOUT_CLASSIFICATION	4.905395032995329E-7	DESIGN
// line 1093	WITHOUT_CLASSIFICATION	0.9999994366354886	WITHOUT_CLASSIFICATION	5.633645114071794E-7	DESIGN
// line 1114	WITHOUT_CLASSIFICATION	0.9999992227988236	WITHOUT_CLASSIFICATION	7.772011764635868E-7	DESIGN
// line 1116	WITHOUT_CLASSIFICATION	0.9999991157647314	WITHOUT_CLASSIFICATION	8.842352686857494E-7	DESIGN
// line 1118	WITHOUT_CLASSIFICATION	0.9999993593966565	WITHOUT_CLASSIFICATION	6.406033435591172E-7	DESIGN
// line 1124	WITHOUT_CLASSIFICATION	0.9999994909250257	WITHOUT_CLASSIFICATION	5.090749742150332E-7	DESIGN
// line 1126	WITHOUT_CLASSIFICATION	0.9999994324518765	WITHOUT_CLASSIFICATION	5.675481234973566E-7	DESIGN
// line 1138	WITHOUT_CLASSIFICATION	0.999999346964355	WITHOUT_CLASSIFICATION	6.530356448794233E-7	DESIGN
// line 1144	WITHOUT_CLASSIFICATION	0.9999992148242114	WITHOUT_CLASSIFICATION	7.851757885792047E-7	DESIGN
// line 1149	WITHOUT_CLASSIFICATION	0.9999992411097154	WITHOUT_CLASSIFICATION	7.588902845331351E-7	DESIGN
// line 1155	WITHOUT_CLASSIFICATION	0.9999993003202201	WITHOUT_CLASSIFICATION	6.996797798865724E-7	DESIGN
// line 1162	WITHOUT_CLASSIFICATION	0.9999995833654792	WITHOUT_CLASSIFICATION	4.1663452067215387E-7	DESIGN
// line 1173	WITHOUT_CLASSIFICATION	0.9999991601448008	WITHOUT_CLASSIFICATION	8.398551991897657E-7	DESIGN
// line 1179	WITHOUT_CLASSIFICATION	0.9999991270255425	WITHOUT_CLASSIFICATION	8.729744574379127E-7	DESIGN
// line 1182	WITHOUT_CLASSIFICATION	0.9999996342377774	WITHOUT_CLASSIFICATION	3.657622226115817E-7	DESIGN
// line 1190	WITHOUT_CLASSIFICATION	0.9999994589771407	WITHOUT_CLASSIFICATION	5.410228592682619E-7	DESIGN
// line 1196	WITHOUT_CLASSIFICATION	0.9999990115330978	WITHOUT_CLASSIFICATION	9.884669022707934E-7	DESIGN
// line 1213	WITHOUT_CLASSIFICATION	0.9999994705178475	WITHOUT_CLASSIFICATION	5.294821525628131E-7	DESIGN
// line 1217	WITHOUT_CLASSIFICATION	0.9999994625887009	WITHOUT_CLASSIFICATION	5.374112992192981E-7	DESIGN
// line 1231	WITHOUT_CLASSIFICATION	0.9999995081542065	WITHOUT_CLASSIFICATION	4.918457936022175E-7	DESIGN
// line 1236	WITHOUT_CLASSIFICATION	0.9999994095336878	WITHOUT_CLASSIFICATION	5.904663121149614E-7	DESIGN
// line 1244	WITHOUT_CLASSIFICATION	0.9999994487084298	WITHOUT_CLASSIFICATION	5.512915701106856E-7	DESIGN
// line 1254	WITHOUT_CLASSIFICATION	0.9999995231220146	WITHOUT_CLASSIFICATION	4.768779853932229E-7	DESIGN
// line 1258	WITHOUT_CLASSIFICATION	0.9999995919941969	WITHOUT_CLASSIFICATION	4.080058031780295E-7	DESIGN
// line 1264	WITHOUT_CLASSIFICATION	0.9999995213574269	WITHOUT_CLASSIFICATION	4.78642573147497E-7	DESIGN
// line 1270	WITHOUT_CLASSIFICATION	0.9999997288061104	WITHOUT_CLASSIFICATION	2.7119388948868164E-7	DESIGN
// line 1273	WITHOUT_CLASSIFICATION	0.9999995130808258	WITHOUT_CLASSIFICATION	4.869191741298364E-7	DESIGN
// line 1276	WITHOUT_CLASSIFICATION	0.9999994418600264	WITHOUT_CLASSIFICATION	5.581399735794621E-7	DESIGN
// line 1279	WITHOUT_CLASSIFICATION	0.9999994899235708	WITHOUT_CLASSIFICATION	5.100764292015964E-7	DESIGN
// line 1282	WITHOUT_CLASSIFICATION	0.9999995461466402	WITHOUT_CLASSIFICATION	4.5385335970654826E-7	DESIGN
// line 1289	WITHOUT_CLASSIFICATION	0.9999995193608732	WITHOUT_CLASSIFICATION	4.806391269347008E-7	DESIGN
// line 1292	WITHOUT_CLASSIFICATION	0.9999994733908218	WITHOUT_CLASSIFICATION	5.266091781889486E-7	DESIGN
// line 1295	WITHOUT_CLASSIFICATION	0.9999995711932907	WITHOUT_CLASSIFICATION	4.2880670923666255E-7	DESIGN
// line 1298	WITHOUT_CLASSIFICATION	0.9999995558357272	WITHOUT_CLASSIFICATION	4.441642727946632E-7	DESIGN
// line 1305	WITHOUT_CLASSIFICATION	0.9999995045318442	WITHOUT_CLASSIFICATION	4.954681557396151E-7	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999993397793904	WITHOUT_CLASSIFICATION	6.60220609523195E-7	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.999999315832495	WITHOUT_CLASSIFICATION	6.841675050011735E-7	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.999999461415642	WITHOUT_CLASSIFICATION	5.385843580106299E-7	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9999993486454511	WITHOUT_CLASSIFICATION	6.513545488951601E-7	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999995886448065	WITHOUT_CLASSIFICATION	4.1135519353475147E-7	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999995744043418	WITHOUT_CLASSIFICATION	4.2559565818242593E-7	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.999999054477248	WITHOUT_CLASSIFICATION	9.455227519334941E-7	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9999997084148461	WITHOUT_CLASSIFICATION	2.9158515387475424E-7	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999991279346051	WITHOUT_CLASSIFICATION	8.720653948283603E-7	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999991875554052	WITHOUT_CLASSIFICATION	8.124445946995496E-7	DESIGN
// line 1308	WITHOUT_CLASSIFICATION	0.9999994914325894	WITHOUT_CLASSIFICATION	5.085674105671686E-7	DESIGN
// line 1311	WITHOUT_CLASSIFICATION	0.9999992321466121	WITHOUT_CLASSIFICATION	7.678533879366446E-7	DESIGN
// line 1317	WITHOUT_CLASSIFICATION	0.999999128693592	WITHOUT_CLASSIFICATION	8.713064080874653E-7	DESIGN
// line 1323	WITHOUT_CLASSIFICATION	0.9999994519584221	WITHOUT_CLASSIFICATION	5.480415779404401E-7	DESIGN
// line 1326	WITHOUT_CLASSIFICATION	0.9999994120795662	WITHOUT_CLASSIFICATION	5.87920433676902E-7	DESIGN
// line 1329	WITHOUT_CLASSIFICATION	0.9999994845377878	WITHOUT_CLASSIFICATION	5.154622123346871E-7	DESIGN
// line 1337	WITHOUT_CLASSIFICATION	0.9999991499866056	WITHOUT_CLASSIFICATION	8.500133945093454E-7	DESIGN
// line 1342	WITHOUT_CLASSIFICATION	0.9999995263841296	WITHOUT_CLASSIFICATION	4.736158705004953E-7	DESIGN
// line 1345	WITHOUT_CLASSIFICATION	0.9999993500318215	WITHOUT_CLASSIFICATION	6.499681784872489E-7	DESIGN
// line 1354	WITHOUT_CLASSIFICATION	0.9999992051614179	WITHOUT_CLASSIFICATION	7.948385820339118E-7	DESIGN
// line 1359	WITHOUT_CLASSIFICATION	0.9999990265154227	WITHOUT_CLASSIFICATION	9.734845772817421E-7	DESIGN
// line 1366	WITHOUT_CLASSIFICATION	0.9999990371361777	WITHOUT_CLASSIFICATION	9.628638223041356E-7	DESIGN
// line 1369	WITHOUT_CLASSIFICATION	0.9999991431588872	WITHOUT_CLASSIFICATION	8.568411129285273E-7	DESIGN
// line 1373	WITHOUT_CLASSIFICATION	0.9999991308826215	WITHOUT_CLASSIFICATION	8.691173784682378E-7	DESIGN
// line 1377	WITHOUT_CLASSIFICATION	0.9999991168239464	WITHOUT_CLASSIFICATION	8.831760535097402E-7	DESIGN
// line 1383	WITHOUT_CLASSIFICATION	0.9999992798213735	WITHOUT_CLASSIFICATION	7.201786266029899E-7	DESIGN
// line 1399	WITHOUT_CLASSIFICATION	0.9999990538282194	WITHOUT_CLASSIFICATION	9.461717805751075E-7	DESIGN
// line 1401	WITHOUT_CLASSIFICATION	0.9999994272618591	WITHOUT_CLASSIFICATION	5.72738140982622E-7	DESIGN
// line 1406	WITHOUT_CLASSIFICATION	0.9999991598419573	WITHOUT_CLASSIFICATION	8.401580427750709E-7	DESIGN
// line 1417	WITHOUT_CLASSIFICATION	0.9999992094143559	WITHOUT_CLASSIFICATION	7.905856441067598E-7	DESIGN
// line 1424	WITHOUT_CLASSIFICATION	0.9999994831414353	WITHOUT_CLASSIFICATION	5.168585647118823E-7	DESIGN
// line 1427	WITHOUT_CLASSIFICATION	0.9999995690506218	WITHOUT_CLASSIFICATION	4.3094937826980175E-7	DESIGN
// line 1430	WITHOUT_CLASSIFICATION	0.9999995863751718	WITHOUT_CLASSIFICATION	4.136248281970348E-7	DESIGN
// line 1433	WITHOUT_CLASSIFICATION	0.9999992367057354	WITHOUT_CLASSIFICATION	7.632942645356188E-7	DESIGN
// line 1436	WITHOUT_CLASSIFICATION	0.9999991686313374	WITHOUT_CLASSIFICATION	8.313686626485392E-7	DESIGN
// line 1442	WITHOUT_CLASSIFICATION	0.9999995326309742	WITHOUT_CLASSIFICATION	4.673690258987572E-7	DESIGN
// line 1445	WITHOUT_CLASSIFICATION	0.9999993567902798	WITHOUT_CLASSIFICATION	6.432097201975816E-7	DESIGN
// line 1458	WITHOUT_CLASSIFICATION	0.999999411778868	WITHOUT_CLASSIFICATION	5.882211320328664E-7	DESIGN
// line 1464	WITHOUT_CLASSIFICATION	0.9999992512355104	WITHOUT_CLASSIFICATION	7.487644896060584E-7	DESIGN
// line 1489	WITHOUT_CLASSIFICATION	0.9999993305306069	WITHOUT_CLASSIFICATION	6.694693931026146E-7	DESIGN
// line 1493	WITHOUT_CLASSIFICATION	0.999999174977929	WITHOUT_CLASSIFICATION	8.250220710066229E-7	DESIGN
// line 1507	WITHOUT_CLASSIFICATION	0.9999994825469524	WITHOUT_CLASSIFICATION	5.174530476725039E-7	DESIGN
// line 1519	WITHOUT_CLASSIFICATION	0.9999991950512658	WITHOUT_CLASSIFICATION	8.049487341678769E-7	DESIGN
// line 1532	WITHOUT_CLASSIFICATION	0.9999995540421378	WITHOUT_CLASSIFICATION	4.459578621521677E-7	DESIGN
// line 1538	WITHOUT_CLASSIFICATION	0.999999411848417	WITHOUT_CLASSIFICATION	5.881515830239575E-7	DESIGN
// line 1542	WITHOUT_CLASSIFICATION	0.9999995603178944	WITHOUT_CLASSIFICATION	4.3968210563234407E-7	DESIGN
// line 1557	WITHOUT_CLASSIFICATION	0.9999992004617677	WITHOUT_CLASSIFICATION	7.995382323008026E-7	DESIGN
// line 1573	WITHOUT_CLASSIFICATION	0.9999992125878497	WITHOUT_CLASSIFICATION	7.87412150227578E-7	DESIGN
// line 1591	WITHOUT_CLASSIFICATION	0.9999990769735079	WITHOUT_CLASSIFICATION	9.230264921968535E-7	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999993111328721	WITHOUT_CLASSIFICATION	6.888671277686866E-7	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.999999551307618	WITHOUT_CLASSIFICATION	4.4869238198832115E-7	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.999999530931809	WITHOUT_CLASSIFICATION	4.6906819090017606E-7	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999994462674533	WITHOUT_CLASSIFICATION	5.537325467161019E-7	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9999989054358877	WITHOUT_CLASSIFICATION	1.0945641124145986E-6	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999995520144535	WITHOUT_CLASSIFICATION	4.479855466656725E-7	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999994760598377	WITHOUT_CLASSIFICATION	5.239401622768885E-7	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999990715972449	WITHOUT_CLASSIFICATION	9.284027552252928E-7	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999992961005236	WITHOUT_CLASSIFICATION	7.038994764544877E-7	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999996536695186	WITHOUT_CLASSIFICATION	3.4633048143672707E-7	DESIGN
// line 1607	WITHOUT_CLASSIFICATION	0.9999994297286459	WITHOUT_CLASSIFICATION	5.702713540639566E-7	DESIGN
// line 1610	WITHOUT_CLASSIFICATION	0.9999995724853351	WITHOUT_CLASSIFICATION	4.275146648130472E-7	DESIGN
// line 1622	WITHOUT_CLASSIFICATION	0.9999995673981125	WITHOUT_CLASSIFICATION	4.326018874705524E-7	DESIGN
// line 1625	WITHOUT_CLASSIFICATION	0.9999996165673897	WITHOUT_CLASSIFICATION	3.834326102896199E-7	DESIGN
// line 1636	WITHOUT_CLASSIFICATION	0.9999990604078295	WITHOUT_CLASSIFICATION	9.395921705238827E-7	DESIGN
// line 1639	WITHOUT_CLASSIFICATION	0.9999991452199064	WITHOUT_CLASSIFICATION	8.547800936768585E-7	DESIGN
// line 1647	WITHOUT_CLASSIFICATION	0.9999993131556839	WITHOUT_CLASSIFICATION	6.86844316010643E-7	DESIGN
// line 1651	WITHOUT_CLASSIFICATION	0.9999993075613337	WITHOUT_CLASSIFICATION	6.92438666341728E-7	DESIGN
// line 1657	WITHOUT_CLASSIFICATION	0.999999266746198	WITHOUT_CLASSIFICATION	7.332538019818107E-7	DESIGN
// line 1660	WITHOUT_CLASSIFICATION	0.9999995399528497	WITHOUT_CLASSIFICATION	4.600471501658069E-7	DESIGN
// line 1663	WITHOUT_CLASSIFICATION	0.9999991855522754	WITHOUT_CLASSIFICATION	8.144477245362028E-7	DESIGN
// line 1678	WITHOUT_CLASSIFICATION	0.9999992906082622	WITHOUT_CLASSIFICATION	7.093917378958358E-7	DESIGN
// line 1702	WITHOUT_CLASSIFICATION	0.9999996247018468	WITHOUT_CLASSIFICATION	3.7529815322499345E-7	DESIGN
// line 1711	WITHOUT_CLASSIFICATION	0.9999991072249389	WITHOUT_CLASSIFICATION	8.927750610761048E-7	DESIGN
// line 1719	WITHOUT_CLASSIFICATION	0.9999989847809151	WITHOUT_CLASSIFICATION	1.0152190848357757E-6	DESIGN
// line 1722	WITHOUT_CLASSIFICATION	0.9999994959470796	WITHOUT_CLASSIFICATION	5.040529204315104E-7	DESIGN
// line 1731	WITHOUT_CLASSIFICATION	0.9999991284043768	WITHOUT_CLASSIFICATION	8.715956232350682E-7	DESIGN
// line 1734	WITHOUT_CLASSIFICATION	0.999999077263245	WITHOUT_CLASSIFICATION	9.227367550213171E-7	DESIGN
// line 1738	WITHOUT_CLASSIFICATION	0.9999992461072192	WITHOUT_CLASSIFICATION	7.538927807656085E-7	DESIGN
// line 1746	WITHOUT_CLASSIFICATION	0.9999990130002494	WITHOUT_CLASSIFICATION	9.869997505847824E-7	DESIGN
// line 1756	WITHOUT_CLASSIFICATION	0.9999989914615511	WITHOUT_CLASSIFICATION	1.008538448932536E-6	DESIGN
// line 1758	WITHOUT_CLASSIFICATION	0.9999992513274472	WITHOUT_CLASSIFICATION	7.486725528362693E-7	DESIGN
// line 1761	WITHOUT_CLASSIFICATION	0.9999991195084169	WITHOUT_CLASSIFICATION	8.804915831401108E-7	DESIGN
// line 1767	WITHOUT_CLASSIFICATION	0.999999054994846	WITHOUT_CLASSIFICATION	9.450051539223859E-7	DESIGN
// line 1776	WITHOUT_CLASSIFICATION	0.999998746395567	WITHOUT_CLASSIFICATION	1.2536044330843804E-6	DESIGN
// line 1782	WITHOUT_CLASSIFICATION	0.9999995120162097	WITHOUT_CLASSIFICATION	4.879837902040149E-7	DESIGN
// line 1785	WITHOUT_CLASSIFICATION	0.9999993073663729	WITHOUT_CLASSIFICATION	6.926336271421102E-7	DESIGN
// line 1788	WITHOUT_CLASSIFICATION	0.9999991357760534	WITHOUT_CLASSIFICATION	8.642239467412471E-7	DESIGN
// line 1791	WITHOUT_CLASSIFICATION	0.9999990524822733	WITHOUT_CLASSIFICATION	9.475177267088528E-7	DESIGN
// line 1797	WITHOUT_CLASSIFICATION	0.9999989818868934	WITHOUT_CLASSIFICATION	1.0181131065837308E-6	DESIGN
// line 1800	WITHOUT_CLASSIFICATION	0.9999996099245708	WITHOUT_CLASSIFICATION	3.900754292224811E-7	DESIGN
// line 1803	WITHOUT_CLASSIFICATION	0.9999994994574072	WITHOUT_CLASSIFICATION	5.005425928233843E-7	DESIGN
// line 1806	WITHOUT_CLASSIFICATION	0.9999992574749099	WITHOUT_CLASSIFICATION	7.425250900824905E-7	DESIGN
// line 1809	WITHOUT_CLASSIFICATION	0.9999995168774451	WITHOUT_CLASSIFICATION	4.831225548060792E-7	DESIGN
// line 1815	WITHOUT_CLASSIFICATION	0.9999994280018651	WITHOUT_CLASSIFICATION	5.719981347398201E-7	DESIGN
// line 1825	WITHOUT_CLASSIFICATION	0.9999996860191216	WITHOUT_CLASSIFICATION	3.1398087839787617E-7	DESIGN
// line 1828	WITHOUT_CLASSIFICATION	0.9999996178803234	WITHOUT_CLASSIFICATION	3.821196765194073E-7	DESIGN
// line 1831	WITHOUT_CLASSIFICATION	0.9999994037890103	WITHOUT_CLASSIFICATION	5.962109897481372E-7	DESIGN
// line 1847	WITHOUT_CLASSIFICATION	0.9999993987290032	WITHOUT_CLASSIFICATION	6.012709967773839E-7	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9985797393543692	WITHOUT_CLASSIFICATION	0.001420260645630823	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9982767826630364	WITHOUT_CLASSIFICATION	0.0017232173369636059	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999988894756855	WITHOUT_CLASSIFICATION	1.1105243145269232E-6	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999782928331598	WITHOUT_CLASSIFICATION	2.1707166840233924E-5	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999993731144745	WITHOUT_CLASSIFICATION	6.268855255172851E-7	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9997887918489291	WITHOUT_CLASSIFICATION	2.112081510708931E-4	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999995675863854	WITHOUT_CLASSIFICATION	4.3241361462184603E-7	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999994053306006	WITHOUT_CLASSIFICATION	5.946693993253347E-7	DESIGN
// line 1854	WITHOUT_CLASSIFICATION	0.9999994182350339	WITHOUT_CLASSIFICATION	5.817649660640709E-7	DESIGN
// line 1869	WITHOUT_CLASSIFICATION	0.9999993181403269	WITHOUT_CLASSIFICATION	6.818596730670216E-7	DESIGN
// line 1872	WITHOUT_CLASSIFICATION	0.9999996398580517	WITHOUT_CLASSIFICATION	3.601419483684307E-7	DESIGN
// line 1877	WITHOUT_CLASSIFICATION	0.9999993239975878	WITHOUT_CLASSIFICATION	6.76002412236368E-7	DESIGN
// line 1886	WITHOUT_CLASSIFICATION	0.9999992290557099	WITHOUT_CLASSIFICATION	7.70944289988604E-7	DESIGN
// line 1898	WITHOUT_CLASSIFICATION	0.9999993126548381	WITHOUT_CLASSIFICATION	6.873451620285355E-7	DESIGN
// line 1902	WITHOUT_CLASSIFICATION	0.9999995947161018	WITHOUT_CLASSIFICATION	4.0528389824154557E-7	DESIGN
// line 1905	WITHOUT_CLASSIFICATION	0.9999994011096395	WITHOUT_CLASSIFICATION	5.988903604614759E-7	DESIGN
// line 1911	WITHOUT_CLASSIFICATION	0.9999991810373656	WITHOUT_CLASSIFICATION	8.189626344006743E-7	DESIGN
// line 1918	WITHOUT_CLASSIFICATION	0.9999992986163151	WITHOUT_CLASSIFICATION	7.013836848493565E-7	DESIGN
// line 1935	WITHOUT_CLASSIFICATION	0.9999992402656969	WITHOUT_CLASSIFICATION	7.597343030837617E-7	DESIGN
// line 1938	WITHOUT_CLASSIFICATION	0.9999992756048316	WITHOUT_CLASSIFICATION	7.24395168410891E-7	DESIGN
// line 1942	WITHOUT_CLASSIFICATION	0.9999994952761502	WITHOUT_CLASSIFICATION	5.04723849768463E-7	DESIGN
// line 1948	WITHOUT_CLASSIFICATION	0.9999992966535892	WITHOUT_CLASSIFICATION	7.033464107249413E-7	DESIGN
// line 1960	WITHOUT_CLASSIFICATION	0.999999497129254	WITHOUT_CLASSIFICATION	5.028707460972876E-7	DESIGN
// line 1963	WITHOUT_CLASSIFICATION	0.9999991096984118	WITHOUT_CLASSIFICATION	8.903015881484613E-7	DESIGN
// line 1968	WITHOUT_CLASSIFICATION	0.999999243654286	WITHOUT_CLASSIFICATION	7.563457140385599E-7	DESIGN
// line 1972	WITHOUT_CLASSIFICATION	0.9999995009761454	WITHOUT_CLASSIFICATION	4.990238546874347E-7	DESIGN
// line 1982	WITHOUT_CLASSIFICATION	0.9999995618739975	WITHOUT_CLASSIFICATION	4.38126002535952E-7	DESIGN
// line 1995	WITHOUT_CLASSIFICATION	0.9999992474300314	WITHOUT_CLASSIFICATION	7.525699685241342E-7	DESIGN
// line 2000	WITHOUT_CLASSIFICATION	0.9999996340233227	WITHOUT_CLASSIFICATION	3.659766773139041E-7	DESIGN
// line 2006	WITHOUT_CLASSIFICATION	0.9999993639117071	WITHOUT_CLASSIFICATION	6.360882928553977E-7	DESIGN
// line 2010	WITHOUT_CLASSIFICATION	0.9999997984443925	WITHOUT_CLASSIFICATION	2.0155560761745394E-7	DESIGN
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999823439162346	WITHOUT_CLASSIFICATION	1.7656083765308005E-5	DESIGN
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.998721353859731	WITHOUT_CLASSIFICATION	0.001278646140268926	DESIGN
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999991440389657	WITHOUT_CLASSIFICATION	8.559610341876409E-7	DESIGN
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999854108152402	WITHOUT_CLASSIFICATION	1.458918475981479E-5	DESIGN
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999999939720609	WITHOUT_CLASSIFICATION	6.027939091715454E-9	DESIGN
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.999698154043263	WITHOUT_CLASSIFICATION	3.018459567369019E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999828458626068	WITHOUT_CLASSIFICATION	1.7154137393211803E-5	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999999752094211	WITHOUT_CLASSIFICATION	2.4790578937608034E-8	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999996667021902	WITHOUT_CLASSIFICATION	3.332978097361839E-7	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999996667021902	WITHOUT_CLASSIFICATION	3.332978097361839E-7	DESIGN
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9897351959230807	DESIGN	0.010264804076919353	WITHOUT_CLASSIFICATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.999974780498447	WITHOUT_CLASSIFICATION	2.5219501552956512E-5	DESIGN
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999999841866754	WITHOUT_CLASSIFICATION	1.5813324658135423E-8	DESIGN
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999999139320306	WITHOUT_CLASSIFICATION	8.606796947573883E-8	DESIGN
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999995629521421	WITHOUT_CLASSIFICATION	4.370478579062104E-7	DESIGN
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9981295232601277	WITHOUT_CLASSIFICATION	0.0018704767398722746	DESIGN
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9984158214103789	WITHOUT_CLASSIFICATION	0.0015841785896210582	DESIGN
// Live reference to module	WITHOUT_CLASSIFICATION	0.999817912097611	WITHOUT_CLASSIFICATION	1.8208790238896994E-4	DESIGN
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999958685801471	WITHOUT_CLASSIFICATION	4.131419852983818E-6	DESIGN
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999987217235022	WITHOUT_CLASSIFICATION	1.278276497752154E-6	DESIGN
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9562747250256916	WITHOUT_CLASSIFICATION	0.043725274974308476	DESIGN
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9691858973101916	WITHOUT_CLASSIFICATION	0.030814102689808325	DESIGN
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.999999917917421	WITHOUT_CLASSIFICATION	8.208257893841203E-8	DESIGN
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999987488549134	WITHOUT_CLASSIFICATION	1.2511450866451728E-6	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.999976186446078	WITHOUT_CLASSIFICATION	2.3813553922030593E-5	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.999976186446078	WITHOUT_CLASSIFICATION	2.3813553922030593E-5	DESIGN
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.993821593753428	WITHOUT_CLASSIFICATION	0.006178406246571959	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999875008330618	WITHOUT_CLASSIFICATION	1.2499166938271695E-5	DESIGN
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999994206484318	WITHOUT_CLASSIFICATION	5.793515681691355E-7	DESIGN
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.999980228111797	WITHOUT_CLASSIFICATION	1.9771888203077162E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9924577895779476	WITHOUT_CLASSIFICATION	0.0075422104220523555	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999994368509391	WITHOUT_CLASSIFICATION	5.631490609619143E-7	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999997065074587	WITHOUT_CLASSIFICATION	2.934925412318549E-7	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999994368509391	WITHOUT_CLASSIFICATION	5.631490609619143E-7	DESIGN
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.7190757955551274	WITHOUT_CLASSIFICATION	0.28092420444487265	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999999595677951	WITHOUT_CLASSIFICATION	4.043220489478351E-7	DESIGN
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9937008455822481	WITHOUT_CLASSIFICATION	0.0062991544177518205	DESIGN
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9996579098521067	WITHOUT_CLASSIFICATION	3.4209014789330294E-4	DESIGN
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999327364908969	WITHOUT_CLASSIFICATION	6.726350910311125E-5	DESIGN
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999783545312875	WITHOUT_CLASSIFICATION	2.1645468712455997E-5	DESIGN
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999550965048044	WITHOUT_CLASSIFICATION	4.490349519563671E-5	DESIGN
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999703914615994	WITHOUT_CLASSIFICATION	2.9608538400586404E-5	DESIGN
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999920481201998	WITHOUT_CLASSIFICATION	7.95187980021258E-6	DESIGN
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9997425745267423	WITHOUT_CLASSIFICATION	2.5742547325770254E-4	DESIGN
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.7371798140451773	WITHOUT_CLASSIFICATION	0.26282018595482254	DESIGN
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999965811948139	WITHOUT_CLASSIFICATION	3.4188051859638005E-6	DESIGN
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999922689700452	WITHOUT_CLASSIFICATION	7.731029954811026E-6	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9879400190193945	WITHOUT_CLASSIFICATION	0.012059980980605359	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999996919621162	WITHOUT_CLASSIFICATION	3.0803788373821435E-7	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999996919621162	WITHOUT_CLASSIFICATION	3.0803788373821435E-7	DESIGN
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.999994414137073	WITHOUT_CLASSIFICATION	5.585862927061922E-6	DESIGN
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999498910295486	WITHOUT_CLASSIFICATION	5.0108970451485985E-5	DESIGN
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999993142862972	WITHOUT_CLASSIFICATION	6.857137027189853E-7	DESIGN
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999998662402128	WITHOUT_CLASSIFICATION	1.3375978723739212E-7	DESIGN
// required and optional only	WITHOUT_CLASSIFICATION	0.9999999407598138	WITHOUT_CLASSIFICATION	5.924018622774252E-8	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999994368509391	WITHOUT_CLASSIFICATION	5.631490609619143E-7	DESIGN
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999433517333274	WITHOUT_CLASSIFICATION	5.6648266672740406E-5	DESIGN
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999998203846	WITHOUT_CLASSIFICATION	1.796154995940094E-10	DESIGN
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9998641031520742	WITHOUT_CLASSIFICATION	1.358968479258399E-4	DESIGN
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999669010491966	WITHOUT_CLASSIFICATION	3.309895080349724E-5	DESIGN
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999298430023096	WITHOUT_CLASSIFICATION	7.015699769046183E-5	DESIGN
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999999986378187	WITHOUT_CLASSIFICATION	1.3621812986606806E-9	DESIGN
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999999909348924	WITHOUT_CLASSIFICATION	9.065107547911074E-9	DESIGN
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999968060607143	WITHOUT_CLASSIFICATION	3.1939392856712725E-6	DESIGN
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9581193200072697	WITHOUT_CLASSIFICATION	0.04188067999273025	DESIGN
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.6741818983317338	WITHOUT_CLASSIFICATION	0.3258181016682661	DESIGN
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999458955494381	WITHOUT_CLASSIFICATION	5.410445056180761E-5	DESIGN
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999811208779964	WITHOUT_CLASSIFICATION	1.887912200364209E-5	DESIGN
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.996683605710379	WITHOUT_CLASSIFICATION	0.0033163942896210206	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999910572971078	WITHOUT_CLASSIFICATION	8.942702892278237E-6	DESIGN
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9721634901811471	DESIGN	0.027836509818852915	WITHOUT_CLASSIFICATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9907539827934954	WITHOUT_CLASSIFICATION	0.009246017206504545	DESIGN
// binary typed calls	WITHOUT_CLASSIFICATION	0.9992586915419701	WITHOUT_CLASSIFICATION	7.41308458029897E-4	DESIGN
// id must always be even	WITHOUT_CLASSIFICATION	0.9999790827014453	WITHOUT_CLASSIFICATION	2.0917298554659212E-5	DESIGN
// with block pass	WITHOUT_CLASSIFICATION	0.9999855587415323	WITHOUT_CLASSIFICATION	1.4441258467761308E-5	DESIGN
// no block	WITHOUT_CLASSIFICATION	0.9999939804609679	WITHOUT_CLASSIFICATION	6.019539032144155E-6	DESIGN
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999967031411325	WITHOUT_CLASSIFICATION	3.296858867464153E-6	DESIGN
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999879370817861	WITHOUT_CLASSIFICATION	1.2062918213827117E-5	DESIGN
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.999983658761389	WITHOUT_CLASSIFICATION	1.634123861099605E-5	DESIGN
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999979200900084	WITHOUT_CLASSIFICATION	2.07990999166334E-6	DESIGN
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999902613688699	WITHOUT_CLASSIFICATION	9.738631130132699E-6	DESIGN
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999807726222091	WITHOUT_CLASSIFICATION	1.9227377790829708E-5	DESIGN
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9998548000873528	WITHOUT_CLASSIFICATION	1.4519991264713174E-4	DESIGN
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999903947829047	WITHOUT_CLASSIFICATION	9.60521709521664E-6	DESIGN
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.984360454005056	WITHOUT_CLASSIFICATION	0.015639545994944107	DESIGN
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999728306633413	WITHOUT_CLASSIFICATION	2.7169336658717936E-5	DESIGN
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999892292044466	WITHOUT_CLASSIFICATION	1.0770795553368474E-5	DESIGN
// Lastline	WITHOUT_CLASSIFICATION	0.9999946569294268	WITHOUT_CLASSIFICATION	5.343070573163463E-6	DESIGN
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9978488145147999	WITHOUT_CLASSIFICATION	0.002151185485200131	DESIGN
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999999631201323	WITHOUT_CLASSIFICATION	3.6879867718116714E-8	DESIGN
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9998450309532857	WITHOUT_CLASSIFICATION	1.5496904671427213E-4	DESIGN
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999977560185076	WITHOUT_CLASSIFICATION	2.243981492395356E-6	DESIGN
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999632099181883	WITHOUT_CLASSIFICATION	3.6790081811714994E-5	DESIGN
// silently ignore	WITHOUT_CLASSIFICATION	0.9999841209335731	WITHOUT_CLASSIFICATION	1.587906642679357E-5	DESIGN
// used by compiler	WITHOUT_CLASSIFICATION	0.9999106042346025	WITHOUT_CLASSIFICATION	8.939576539745411E-5	DESIGN
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9878729657637536	WITHOUT_CLASSIFICATION	0.01212703423624642	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999994053306006	WITHOUT_CLASSIFICATION	5.946693993253347E-7	DESIGN
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999989508965935	WITHOUT_CLASSIFICATION	1.0491034064675024E-6	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999197315650821	WITHOUT_CLASSIFICATION	8.026843491792559E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999992017156073	WITHOUT_CLASSIFICATION	7.982843927870646E-7	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999988864415464	WITHOUT_CLASSIFICATION	1.1135584535473063E-6	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999999595677951	WITHOUT_CLASSIFICATION	4.043220489478351E-7	DESIGN
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999800898309777	WITHOUT_CLASSIFICATION	1.9910169022240774E-5	DESIGN
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.99027668227646	DESIGN	0.009723317723539928	WITHOUT_CLASSIFICATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999005491619278	WITHOUT_CLASSIFICATION	9.945083807217063E-5	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999997756653285	WITHOUT_CLASSIFICATION	2.2433467152506223E-7	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999997756653285	WITHOUT_CLASSIFICATION	2.2433467152506223E-7	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.999508631212352	WITHOUT_CLASSIFICATION	4.913687876479096E-4	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.999508631212352	WITHOUT_CLASSIFICATION	4.913687876479096E-4	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.999508631212352	WITHOUT_CLASSIFICATION	4.913687876479096E-4	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.99979263432184	WITHOUT_CLASSIFICATION	2.0736567816009255E-4	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.99979263432184	WITHOUT_CLASSIFICATION	2.0736567816009255E-4	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999580191362519	WITHOUT_CLASSIFICATION	4.198086374802438E-5	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999580191362519	WITHOUT_CLASSIFICATION	4.198086374802438E-5	DESIGN
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999999999188561	WITHOUT_CLASSIFICATION	8.114389533131654E-11	DESIGN
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999999931603424	WITHOUT_CLASSIFICATION	6.839657504960081E-9	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999752080318737	WITHOUT_CLASSIFICATION	2.479196812638786E-5	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999752080318737	WITHOUT_CLASSIFICATION	2.479196812638786E-5	DESIGN
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999887166356941	WITHOUT_CLASSIFICATION	1.1283364305859783E-5	DESIGN
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9992730697158397	WITHOUT_CLASSIFICATION	7.269302841603958E-4	DESIGN
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9998018327349638	WITHOUT_CLASSIFICATION	1.981672650361755E-4	DESIGN
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999997601542301	WITHOUT_CLASSIFICATION	2.39845769917706E-7	DESIGN
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999997185417187	WITHOUT_CLASSIFICATION	2.8145828138451277E-7	DESIGN
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9998479441302572	WITHOUT_CLASSIFICATION	1.5205586974283668E-4	DESIGN
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999506911871605	WITHOUT_CLASSIFICATION	4.9308812839575436E-5	DESIGN
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9991739950276352	WITHOUT_CLASSIFICATION	8.260049723648766E-4	DESIGN
// caller	WITHOUT_CLASSIFICATION	0.999994337246575	WITHOUT_CLASSIFICATION	5.66275342492465E-6	DESIGN
// calltype // block	WITHOUT_CLASSIFICATION	0.9999934130637166	WITHOUT_CLASSIFICATION	6.586936283384773E-6	DESIGN
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999904569019649	WITHOUT_CLASSIFICATION	9.543098035243164E-6	DESIGN
// load arity for check	WITHOUT_CLASSIFICATION	0.9999833238641541	WITHOUT_CLASSIFICATION	1.6676135845882548E-5	DESIGN
// throw	WITHOUT_CLASSIFICATION	0.999993259217082	WITHOUT_CLASSIFICATION	6.740782917975081E-6	DESIGN
// load arity for error	WITHOUT_CLASSIFICATION	0.9995693953819808	WITHOUT_CLASSIFICATION	4.306046180192482E-4	DESIGN
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999733563149833	WITHOUT_CLASSIFICATION	2.6643685016639538E-5	DESIGN
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9977418291011075	WITHOUT_CLASSIFICATION	0.0022581708988924283	DESIGN
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.999239130899181	WITHOUT_CLASSIFICATION	7.608691008189133E-4	DESIGN
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9998948158885783	WITHOUT_CLASSIFICATION	1.0518411142159348E-4	DESIGN
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999858839597098	WITHOUT_CLASSIFICATION	1.4116040290230211E-5	DESIGN
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9921369015945788	WITHOUT_CLASSIFICATION	0.007863098405421138	DESIGN
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.999980929661924	WITHOUT_CLASSIFICATION	1.9070338075926902E-5	DESIGN
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999499683883798	WITHOUT_CLASSIFICATION	5.0031611620341276E-5	DESIGN
// load the encoding	WITHOUT_CLASSIFICATION	0.9999976942742201	WITHOUT_CLASSIFICATION	2.3057257799045162E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999989991160759	WITHOUT_CLASSIFICATION	1.0008839240882047E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.999999112920905	WITHOUT_CLASSIFICATION	8.87079094932975E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.99999794984623	WITHOUT_CLASSIFICATION	2.050153769974345E-6	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999995642723702	WITHOUT_CLASSIFICATION	4.357276298034413E-7	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999990619482293	WITHOUT_CLASSIFICATION	9.380517706871554E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999971667533709	WITHOUT_CLASSIFICATION	2.833246629114962E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999974889052381	WITHOUT_CLASSIFICATION	2.511094761972781E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999941965497096	WITHOUT_CLASSIFICATION	5.803450290466873E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999966029153982	WITHOUT_CLASSIFICATION	3.3970846018587817E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999969891777832	WITHOUT_CLASSIFICATION	3.0108222167945717E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999923137860481	WITHOUT_CLASSIFICATION	7.686213951799408E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999969891777832	WITHOUT_CLASSIFICATION	3.0108222167945717E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999969891777832	WITHOUT_CLASSIFICATION	3.0108222167945717E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999969891777832	WITHOUT_CLASSIFICATION	3.0108222167945717E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999969891777832	WITHOUT_CLASSIFICATION	3.0108222167945717E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999969891777832	WITHOUT_CLASSIFICATION	3.0108222167945717E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999969891777832	WITHOUT_CLASSIFICATION	3.0108222167945717E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999923137860481	WITHOUT_CLASSIFICATION	7.686213951799408E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999923137860481	WITHOUT_CLASSIFICATION	7.686213951799408E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999923137860481	WITHOUT_CLASSIFICATION	7.686213951799408E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999923137860481	WITHOUT_CLASSIFICATION	7.686213951799408E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999923137860481	WITHOUT_CLASSIFICATION	7.686213951799408E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999923137860481	WITHOUT_CLASSIFICATION	7.686213951799408E-6	DESIGN
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.999997961521449	WITHOUT_CLASSIFICATION	2.038478550965093E-6	DESIGN
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999979292823721	WITHOUT_CLASSIFICATION	2.0707176279339864E-6	DESIGN
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999893276319983	WITHOUT_CLASSIFICATION	1.0672368001562678E-5	DESIGN
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.999998235596495	WITHOUT_CLASSIFICATION	1.7644035050117605E-6	DESIGN
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999788768575603	WITHOUT_CLASSIFICATION	2.112314243967279E-5	DESIGN
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999942411536781	WITHOUT_CLASSIFICATION	5.758846321905835E-6	DESIGN
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.999999265854869	WITHOUT_CLASSIFICATION	7.341451310017665E-7	DESIGN
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999999228978756	WITHOUT_CLASSIFICATION	7.71021243160812E-8	DESIGN
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999979576603869	WITHOUT_CLASSIFICATION	2.042339613171867E-6	DESIGN
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999405229030298	WITHOUT_CLASSIFICATION	5.947709697024554E-5	DESIGN
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9996213728652222	WITHOUT_CLASSIFICATION	3.7862713477778277E-4	DESIGN
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999342039653	WITHOUT_CLASSIFICATION	6.579603472163141E-8	DESIGN
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.99999340227788	WITHOUT_CLASSIFICATION	6.597722120013561E-6	DESIGN
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999999959713282	WITHOUT_CLASSIFICATION	4.028671806485466E-9	DESIGN
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999940163954021	WITHOUT_CLASSIFICATION	5.9836045979350035E-6	DESIGN
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.8098827230694885	WITHOUT_CLASSIFICATION	0.19011727693051142	DESIGN
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999995545733659	WITHOUT_CLASSIFICATION	4.454266341760543E-7	DESIGN
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999989226073515	WITHOUT_CLASSIFICATION	1.0773926485329329E-6	DESIGN
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.999677861017444	WITHOUT_CLASSIFICATION	3.221389825560116E-4	DESIGN
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999999917294063	WITHOUT_CLASSIFICATION	8.270593624200269E-9	DESIGN
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999999770713037	WITHOUT_CLASSIFICATION	2.2928696293311057E-8	DESIGN
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999648829871713	WITHOUT_CLASSIFICATION	3.511701282867004E-5	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999997065074587	WITHOUT_CLASSIFICATION	2.934925412318549E-7	DESIGN
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9993269739109828	WITHOUT_CLASSIFICATION	6.730260890171784E-4	DESIGN
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999635104138536	WITHOUT_CLASSIFICATION	3.648958614644874E-5	DESIGN
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999999767127443	WITHOUT_CLASSIFICATION	2.3287255696164455E-8	DESIGN
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999970952953238	WITHOUT_CLASSIFICATION	2.904704676328541E-6	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999998512204812	WITHOUT_CLASSIFICATION	1.4877951890602528E-7	DESIGN
// extension extensions	WITHOUT_CLASSIFICATION	0.9999995725765431	WITHOUT_CLASSIFICATION	4.274234568212298E-7	DESIGN
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999965810193756	WITHOUT_CLASSIFICATION	3.4189806243345105E-6	DESIGN
// try all extensions	WITHOUT_CLASSIFICATION	0.9999999491935175	WITHOUT_CLASSIFICATION	5.0806482587584075E-8	DESIGN
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999999982625393	WITHOUT_CLASSIFICATION	1.737460784287559E-9	DESIGN
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.99999712584282	WITHOUT_CLASSIFICATION	2.8741571800427523E-6	DESIGN
// try only literal search	WITHOUT_CLASSIFICATION	0.9999999518206754	WITHOUT_CLASSIFICATION	4.817932457248272E-8	DESIGN
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.999999680530052	WITHOUT_CLASSIFICATION	3.194699480633283E-7	DESIGN
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999797085818387	WITHOUT_CLASSIFICATION	2.029141816130807E-5	DESIGN
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999999386469313	WITHOUT_CLASSIFICATION	6.135306873790391E-8	DESIGN
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999967282662489	WITHOUT_CLASSIFICATION	3.271733751113202E-6	DESIGN
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999999353917507	WITHOUT_CLASSIFICATION	6.460824923617704E-8	DESIGN
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999993174009532	WITHOUT_CLASSIFICATION	6.82599046858671E-7	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998666050291513	WITHOUT_CLASSIFICATION	1.3339497084873688E-4	DESIGN
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999995620458715	WITHOUT_CLASSIFICATION	4.3795412852319115E-7	DESIGN
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999999854606643	WITHOUT_CLASSIFICATION	1.4539335829336931E-8	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9986806990478118	WITHOUT_CLASSIFICATION	0.0013193009521882248	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9986806990478118	WITHOUT_CLASSIFICATION	0.0013193009521882248	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999978989112821	WITHOUT_CLASSIFICATION	2.1010887179604144E-6	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999978989112821	WITHOUT_CLASSIFICATION	2.1010887179604144E-6	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999981734293131	WITHOUT_CLASSIFICATION	1.8265706868211878E-6	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999981734293131	WITHOUT_CLASSIFICATION	1.8265706868211878E-6	DESIGN
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999999956234885	WITHOUT_CLASSIFICATION	4.376511525861969E-9	DESIGN
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999333720206485	WITHOUT_CLASSIFICATION	6.662797935147143E-5	DESIGN
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999941751749045	WITHOUT_CLASSIFICATION	5.824825095418876E-6	DESIGN
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999889919221108	WITHOUT_CLASSIFICATION	1.1008077889261808E-5	DESIGN
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999909161612307	WITHOUT_CLASSIFICATION	9.083838769343258E-6	DESIGN
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9980514446680586	WITHOUT_CLASSIFICATION	0.0019485553319413876	DESIGN
// signed short, native	WITHOUT_CLASSIFICATION	0.999662334087519	WITHOUT_CLASSIFICATION	3.376659124809201E-4	DESIGN
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999998038160541	WITHOUT_CLASSIFICATION	1.961839459152248E-7	DESIGN
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999810626980777	WITHOUT_CLASSIFICATION	1.893730192224631E-5	DESIGN
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999651089942798	WITHOUT_CLASSIFICATION	3.489100572017134E-5	DESIGN
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999930680606881	WITHOUT_CLASSIFICATION	6.931939311791103E-6	DESIGN
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999998995845908	WITHOUT_CLASSIFICATION	1.0041540924344887E-7	DESIGN
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999674987661821	WITHOUT_CLASSIFICATION	3.2501233818003166E-5	DESIGN
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999453313901844	WITHOUT_CLASSIFICATION	5.466860981562992E-5	DESIGN
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999604597385435	WITHOUT_CLASSIFICATION	3.9540261456546766E-5	DESIGN
//            write('S');	WITHOUT_CLASSIFICATION	0.9999846158467494	WITHOUT_CLASSIFICATION	1.5384153250641348E-5	DESIGN
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9998700018800749	WITHOUT_CLASSIFICATION	1.299981199250655E-4	DESIGN
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999972497584169	WITHOUT_CLASSIFICATION	2.7502415830381712E-6	DESIGN
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9994708486340687	WITHOUT_CLASSIFICATION	5.291513659313647E-4	DESIGN
// w_symbol	WITHOUT_CLASSIFICATION	0.9999924055377271	WITHOUT_CLASSIFICATION	7.594462272862105E-6	DESIGN
// w_unique	WITHOUT_CLASSIFICATION	0.9999817400089883	WITHOUT_CLASSIFICATION	1.8259991011695424E-5	DESIGN
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999964823022723	WITHOUT_CLASSIFICATION	3.517697727770261E-6	DESIGN
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999645177675955	WITHOUT_CLASSIFICATION	3.5482232404456604E-5	DESIGN
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999996378703702	WITHOUT_CLASSIFICATION	3.621296299078365E-7	DESIGN
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999989631750101	WITHOUT_CLASSIFICATION	1.0368249899667777E-6	DESIGN
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999862079795041	WITHOUT_CLASSIFICATION	1.3792020495894965E-5	DESIGN
// sic	WITHOUT_CLASSIFICATION	0.9997853247577301	WITHOUT_CLASSIFICATION	2.1467524227007233E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999469647150973	WITHOUT_CLASSIFICATION	5.303528490268069E-5	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999469647150973	WITHOUT_CLASSIFICATION	5.303528490268069E-5	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999469647150973	WITHOUT_CLASSIFICATION	5.303528490268069E-5	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9983618397765037	WITHOUT_CLASSIFICATION	0.0016381602234963855	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9983618397765037	WITHOUT_CLASSIFICATION	0.0016381602234963855	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999910572971078	WITHOUT_CLASSIFICATION	8.942702892278237E-6	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999910572971078	WITHOUT_CLASSIFICATION	8.942702892278237E-6	DESIGN
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999990663150773	WITHOUT_CLASSIFICATION	9.336849226271667E-7	DESIGN
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.7359926337548363	WITHOUT_CLASSIFICATION	0.2640073662451637	DESIGN
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9988683240803033	WITHOUT_CLASSIFICATION	0.001131675919696695	DESIGN
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999787095369319	WITHOUT_CLASSIFICATION	2.129046306813105E-5	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999469647150973	WITHOUT_CLASSIFICATION	5.303528490268069E-5	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999469647150973	WITHOUT_CLASSIFICATION	5.303528490268069E-5	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999469647150973	WITHOUT_CLASSIFICATION	5.303528490268069E-5	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9983618397765037	WITHOUT_CLASSIFICATION	0.0016381602234963855	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9983618397765037	WITHOUT_CLASSIFICATION	0.0016381602234963855	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9983618397765037	WITHOUT_CLASSIFICATION	0.0016381602234963855	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999910572971078	WITHOUT_CLASSIFICATION	8.942702892278237E-6	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999910572971078	WITHOUT_CLASSIFICATION	8.942702892278237E-6	DESIGN
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9998954341581833	WITHOUT_CLASSIFICATION	1.0456584181671972E-4	DESIGN
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9992758565141894	WITHOUT_CLASSIFICATION	7.241434858105562E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9994901689633148	WITHOUT_CLASSIFICATION	5.098310366852813E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9994901689633148	WITHOUT_CLASSIFICATION	5.098310366852813E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9994901689633148	WITHOUT_CLASSIFICATION	5.098310366852813E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9994901689633148	WITHOUT_CLASSIFICATION	5.098310366852813E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9994901689633148	WITHOUT_CLASSIFICATION	5.098310366852813E-4	DESIGN
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.999983670670238	WITHOUT_CLASSIFICATION	1.6329329762054806E-5	DESIGN
// All braces pushed..	WITHOUT_CLASSIFICATION	0.999968459693347	WITHOUT_CLASSIFICATION	3.154030665293232E-5	DESIGN
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999538553096108	WITHOUT_CLASSIFICATION	4.6144690389197204E-5	DESIGN
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999997304580397	WITHOUT_CLASSIFICATION	2.6954196020816087E-7	DESIGN
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999762283765522	WITHOUT_CLASSIFICATION	2.377162344779525E-5	DESIGN
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999615504908898	WITHOUT_CLASSIFICATION	3.844950911020182E-5	DESIGN
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999891046688444	WITHOUT_CLASSIFICATION	1.089533115561098E-5	DESIGN
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999995990524927	WITHOUT_CLASSIFICATION	4.009475072464569E-7	DESIGN
// skip inner braces	WITHOUT_CLASSIFICATION	0.9998239226267164	WITHOUT_CLASSIFICATION	1.7607737328362028E-4	DESIGN
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999998290610869	WITHOUT_CLASSIFICATION	1.7093891312421357E-7	DESIGN
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999999875717054	WITHOUT_CLASSIFICATION	1.2428294498748739E-8	DESIGN
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999954877037083	WITHOUT_CLASSIFICATION	4.512296291773667E-6	DESIGN
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999997321422128	WITHOUT_CLASSIFICATION	2.6785778715655163E-7	DESIGN
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999996247998287	WITHOUT_CLASSIFICATION	3.7520017127745285E-7	DESIGN
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.5485210719745212	WITHOUT_CLASSIFICATION	0.4514789280254789	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.999456103413156	WITHOUT_CLASSIFICATION	5.438965868438613E-4	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.999456103413156	WITHOUT_CLASSIFICATION	5.438965868438613E-4	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.999456103413156	WITHOUT_CLASSIFICATION	5.438965868438613E-4	DESIGN
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999848030430918	WITHOUT_CLASSIFICATION	1.5196956908199151E-5	DESIGN
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999847959629691	WITHOUT_CLASSIFICATION	1.5204037030800042E-5	DESIGN
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999835181963842	WITHOUT_CLASSIFICATION	1.648180361576932E-5	DESIGN
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999991356714665	WITHOUT_CLASSIFICATION	8.643285334676493E-7	DESIGN
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999999136065837	WITHOUT_CLASSIFICATION	8.63934162111898E-8	DESIGN
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9998748383840723	WITHOUT_CLASSIFICATION	1.2516161592774857E-4	DESIGN
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999715690247052	WITHOUT_CLASSIFICATION	2.843097529490943E-5	DESIGN
// single precision, native	WITHOUT_CLASSIFICATION	0.9995318287899118	WITHOUT_CLASSIFICATION	4.681712100882805E-4	DESIGN
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9998642722401725	WITHOUT_CLASSIFICATION	1.3572775982756592E-4	DESIGN
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999776119614893	WITHOUT_CLASSIFICATION	2.2388038510795125E-5	DESIGN
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999970545374487	WITHOUT_CLASSIFICATION	2.9454625512664793E-6	DESIGN
// double precision, native	WITHOUT_CLASSIFICATION	0.9998219948822855	WITHOUT_CLASSIFICATION	1.7800511771438543E-4	DESIGN
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999404707034885	WITHOUT_CLASSIFICATION	5.9529296511513265E-5	DESIGN
// signed char	WITHOUT_CLASSIFICATION	0.9999655406753276	WITHOUT_CLASSIFICATION	3.4459324672338544E-5	DESIGN
// unsigned char	WITHOUT_CLASSIFICATION	0.999909085948876	WITHOUT_CLASSIFICATION	9.091405112413432E-5	DESIGN
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999593793725154	WITHOUT_CLASSIFICATION	4.0620627484670256E-5	DESIGN
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999957827652597	WITHOUT_CLASSIFICATION	4.217234740312368E-6	DESIGN
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9993445128486679	WITHOUT_CLASSIFICATION	6.554871513322431E-4	DESIGN
// int, native	WITHOUT_CLASSIFICATION	0.9999116308538653	WITHOUT_CLASSIFICATION	8.836914613479587E-5	DESIGN
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.999819826717771	WITHOUT_CLASSIFICATION	1.8017328222895583E-4	DESIGN
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9997172325046009	WITHOUT_CLASSIFICATION	2.8276749539910814E-4	DESIGN
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999844299848306	WITHOUT_CLASSIFICATION	1.557001516938893E-5	DESIGN
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.7183553227438496	WITHOUT_CLASSIFICATION	0.28164467725615044	DESIGN
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999998237193819	WITHOUT_CLASSIFICATION	1.7628061805749313E-7	DESIGN
// obtain a	WITHOUT_CLASSIFICATION	0.9999980456443509	WITHOUT_CLASSIFICATION	1.954355649133449E-6	DESIGN
// obtain b	WITHOUT_CLASSIFICATION	0.9999908091886756	WITHOUT_CLASSIFICATION	9.19081132438122E-6	DESIGN
// obtain c	WITHOUT_CLASSIFICATION	0.9999860963991956	WITHOUT_CLASSIFICATION	1.3903600804473254E-5	DESIGN
// obtain d	WITHOUT_CLASSIFICATION	0.9999760161567158	WITHOUT_CLASSIFICATION	2.3983843284167143E-5	DESIGN
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999478641446378	WITHOUT_CLASSIFICATION	5.213585536223151E-5	DESIGN
/* 1 */	WITHOUT_CLASSIFICATION	0.9999717454352965	WITHOUT_CLASSIFICATION	2.8254564703446623E-5	DESIGN
/* 2 */	WITHOUT_CLASSIFICATION	0.9999851773539158	WITHOUT_CLASSIFICATION	1.4822646084263683E-5	DESIGN
/* 3 */	WITHOUT_CLASSIFICATION	0.9999619641934213	WITHOUT_CLASSIFICATION	3.803580657858157E-5	DESIGN
/* 4 */	WITHOUT_CLASSIFICATION	0.9999478106402783	WITHOUT_CLASSIFICATION	5.2189359721776575E-5	DESIGN
/* 5 */	WITHOUT_CLASSIFICATION	0.9999488526117065	WITHOUT_CLASSIFICATION	5.114738829357133E-5	DESIGN
/* 6 */	WITHOUT_CLASSIFICATION	0.9999602263090499	WITHOUT_CLASSIFICATION	3.9773690950082726E-5	DESIGN
/* 7 */	WITHOUT_CLASSIFICATION	0.9999567826653728	WITHOUT_CLASSIFICATION	4.321733462723375E-5	DESIGN
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9990128359102745	WITHOUT_CLASSIFICATION	9.871640897255694E-4	DESIGN
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9974321268470938	WITHOUT_CLASSIFICATION	0.0025678731529062094	DESIGN
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999886780261052	WITHOUT_CLASSIFICATION	1.1321973894751392E-5	DESIGN
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999967058024769	WITHOUT_CLASSIFICATION	3.2941975232142605E-6	DESIGN
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.99999561419299	WITHOUT_CLASSIFICATION	4.3858070100837184E-6	DESIGN
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999999937156466	WITHOUT_CLASSIFICATION	6.284353362326187E-9	DESIGN
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999990768665297	WITHOUT_CLASSIFICATION	9.231334704607937E-7	DESIGN
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999998256806762	WITHOUT_CLASSIFICATION	1.7431932377204774E-7	DESIGN
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999926636089848	WITHOUT_CLASSIFICATION	7.336391015122636E-6	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999890201868257	WITHOUT_CLASSIFICATION	1.0979813174249295E-5	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999885535020178	WITHOUT_CLASSIFICATION	1.1446497982164899E-5	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999885535020178	WITHOUT_CLASSIFICATION	1.1446497982164899E-5	DESIGN
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.99997483401809	WITHOUT_CLASSIFICATION	2.5165981909999324E-5	DESIGN
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999910319381167	WITHOUT_CLASSIFICATION	8.968061883197513E-6	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999967775407798	WITHOUT_CLASSIFICATION	3.222459220231549E-6	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9955851497974862	WITHOUT_CLASSIFICATION	0.004414850202513794	DESIGN
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9995310646149076	WITHOUT_CLASSIFICATION	4.689353850923289E-4	DESIGN
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999848419466048	WITHOUT_CLASSIFICATION	1.515805339519017E-5	DESIGN
// are we recursing?	WITHOUT_CLASSIFICATION	0.9953219391316327	WITHOUT_CLASSIFICATION	0.004678060868367335	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999989867028309	WITHOUT_CLASSIFICATION	1.0132971690774475E-6	DESIGN
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999431178277757	WITHOUT_CLASSIFICATION	5.688217222443207E-5	DESIGN
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999998177246304	WITHOUT_CLASSIFICATION	1.8227536958763223E-7	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999721740976059	WITHOUT_CLASSIFICATION	2.7825902394235818E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999721740976059	WITHOUT_CLASSIFICATION	2.7825902394235818E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999721740976059	WITHOUT_CLASSIFICATION	2.7825902394235818E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999721740976059	WITHOUT_CLASSIFICATION	2.7825902394235818E-5	DESIGN
// try both	WITHOUT_CLASSIFICATION	0.9999910960340992	WITHOUT_CLASSIFICATION	8.903965900842642E-6	DESIGN
// just unix	WITHOUT_CLASSIFICATION	0.9999638639788678	WITHOUT_CLASSIFICATION	3.6136021132150453E-5	DESIGN
// just windows	WITHOUT_CLASSIFICATION	0.9999943142373087	WITHOUT_CLASSIFICATION	5.685762691349424E-6	DESIGN
// neither	WITHOUT_CLASSIFICATION	0.9998022484354553	WITHOUT_CLASSIFICATION	1.9775156454475835E-4	DESIGN
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9478390410830005	WITHOUT_CLASSIFICATION	0.052160958916999504	DESIGN
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.999999990539556	WITHOUT_CLASSIFICATION	9.460444081850497E-9	DESIGN
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999976359705349	WITHOUT_CLASSIFICATION	2.3640294649872587E-6	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.999990067654053	WITHOUT_CLASSIFICATION	9.932345946996667E-6	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.999990067654053	WITHOUT_CLASSIFICATION	9.932345946996667E-6	DESIGN
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999078259474699	WITHOUT_CLASSIFICATION	9.217405253010086E-5	DESIGN
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999995270377686	WITHOUT_CLASSIFICATION	4.7296223134079954E-7	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9994239597251954	WITHOUT_CLASSIFICATION	5.76040274804687E-4	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999581779210815	WITHOUT_CLASSIFICATION	4.182207891848267E-5	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999581779210815	WITHOUT_CLASSIFICATION	4.182207891848267E-5	DESIGN
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999868669534367	WITHOUT_CLASSIFICATION	1.3133046563290007E-5	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.992160822506483	WITHOUT_CLASSIFICATION	0.007839177493516997	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.992160822506483	WITHOUT_CLASSIFICATION	0.007839177493516997	DESIGN
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999999892235591	WITHOUT_CLASSIFICATION	1.0776440827746291E-8	DESIGN
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9998111249812207	WITHOUT_CLASSIFICATION	1.8887501877924874E-4	DESIGN
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999999769842669	WITHOUT_CLASSIFICATION	2.3015733036221154E-8	DESIGN
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9998986068172621	WITHOUT_CLASSIFICATION	1.0139318273793996E-4	DESIGN
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9961824896821607	WITHOUT_CLASSIFICATION	0.0038175103178393834	DESIGN
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999978183165	WITHOUT_CLASSIFICATION	2.181683535293728E-9	DESIGN
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.99872997019534	WITHOUT_CLASSIFICATION	0.001270029804659871	DESIGN
//sequential	WITHOUT_CLASSIFICATION	0.9999712581378646	WITHOUT_CLASSIFICATION	2.8741862135427113E-5	DESIGN
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999998574173726	WITHOUT_CLASSIFICATION	1.4258262730707932E-7	DESIGN
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999998321123994	WITHOUT_CLASSIFICATION	1.6788760073066233E-7	DESIGN
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999998324344105	WITHOUT_CLASSIFICATION	1.6756558949599335E-7	DESIGN
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999809014495102	WITHOUT_CLASSIFICATION	1.9098550489784347E-5	DESIGN
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9992505427532173	WITHOUT_CLASSIFICATION	7.494572467826958E-4	DESIGN
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9998827977824013	WITHOUT_CLASSIFICATION	1.1720221759870508E-4	DESIGN
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999994185266641	WITHOUT_CLASSIFICATION	5.814733359731231E-7	DESIGN
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9582586282796491	WITHOUT_CLASSIFICATION	0.04174137172035081	DESIGN
// Args	WITHOUT_CLASSIFICATION	0.999993855808164	WITHOUT_CLASSIFICATION	6.144191835918847E-6	DESIGN
// static methods only	WITHOUT_CLASSIFICATION	0.9999134145175559	WITHOUT_CLASSIFICATION	8.658548244412935E-5	DESIGN
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999999812540233	WITHOUT_CLASSIFICATION	1.8745976641258863E-8	DESIGN
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999999525405113	WITHOUT_CLASSIFICATION	4.745948874410864E-8	DESIGN
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999996723092295	WITHOUT_CLASSIFICATION	3.276907705672865E-7	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999953959993308	WITHOUT_CLASSIFICATION	4.604000669176696E-6	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999998382731113	WITHOUT_CLASSIFICATION	1.6172688877797503E-7	DESIGN
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9987813553158774	WITHOUT_CLASSIFICATION	0.0012186446841225356	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.999999876029423	WITHOUT_CLASSIFICATION	1.2397057700100608E-7	DESIGN
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9962407779288969	WITHOUT_CLASSIFICATION	0.0037592220711030054	DESIGN
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999774220724811	WITHOUT_CLASSIFICATION	2.257792751892312E-5	DESIGN
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999984084279002	WITHOUT_CLASSIFICATION	1.591572099736639E-6	DESIGN
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.8322663379109615	DESIGN	0.16773366208903842	WITHOUT_CLASSIFICATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999991518442153	WITHOUT_CLASSIFICATION	8.48155784634444E-7	DESIGN
// ..	WITHOUT_CLASSIFICATION	0.9999743712042695	WITHOUT_CLASSIFICATION	2.5628795730576255E-5	DESIGN
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999974830913438	WITHOUT_CLASSIFICATION	2.5169086560886666E-6	DESIGN
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9999867957013504	DESIGN	1.3204298649509978E-5	WITHOUT_CLASSIFICATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999999198645749	WITHOUT_CLASSIFICATION	8.013542504485825E-8	DESIGN
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999916649428925	WITHOUT_CLASSIFICATION	8.335057107553868E-6	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.8588401751096305	WITHOUT_CLASSIFICATION	0.14115982489036955	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.999938906990143	WITHOUT_CLASSIFICATION	6.109300985707004E-5	DESIGN
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999999987753443	WITHOUT_CLASSIFICATION	1.224655742544926E-9	DESIGN
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.999999878202951	WITHOUT_CLASSIFICATION	1.2179704892110207E-7	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.8588401751096305	WITHOUT_CLASSIFICATION	0.14115982489036955	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.999938906990143	WITHOUT_CLASSIFICATION	6.109300985707004E-5	DESIGN
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999999557093672	WITHOUT_CLASSIFICATION	4.429063292465245E-8	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9996085255007481	WITHOUT_CLASSIFICATION	3.914744992519484E-4	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9996085255007481	WITHOUT_CLASSIFICATION	3.914744992519484E-4	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999999695709116	WITHOUT_CLASSIFICATION	3.042908835939957E-8	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999984246519	WITHOUT_CLASSIFICATION	1.5753480347106448E-9	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999980960207987	WITHOUT_CLASSIFICATION	1.903979201330088E-6	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999989488546238	WITHOUT_CLASSIFICATION	1.0511453760987099E-6	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999961165007868	WITHOUT_CLASSIFICATION	3.883499213200326E-6	DESIGN
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9990312881685788	WITHOUT_CLASSIFICATION	9.687118314212897E-4	DESIGN
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999978091715738	WITHOUT_CLASSIFICATION	2.1908284261686987E-6	DESIGN
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999999874870397	WITHOUT_CLASSIFICATION	1.2512960260187723E-8	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9990955019240371	WITHOUT_CLASSIFICATION	9.044980759628867E-4	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999952692847998	WITHOUT_CLASSIFICATION	4.730715200230913E-6	DESIGN
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999991357096086	WITHOUT_CLASSIFICATION	8.64290391366907E-7	DESIGN
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999923722242151	WITHOUT_CLASSIFICATION	7.627775784882692E-6	DESIGN
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999998970866919	WITHOUT_CLASSIFICATION	1.029133080072165E-7	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999995896106815	WITHOUT_CLASSIFICATION	4.103893185471542E-7	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999995896106815	WITHOUT_CLASSIFICATION	4.103893185471542E-7	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999993592950692	WITHOUT_CLASSIFICATION	6.40704930804743E-7	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999993592950692	WITHOUT_CLASSIFICATION	6.40704930804743E-7	DESIGN
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999985019645897	WITHOUT_CLASSIFICATION	1.4980354103574466E-6	DESIGN
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999990607907789	WITHOUT_CLASSIFICATION	9.392092210451524E-7	DESIGN
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999959430486692	WITHOUT_CLASSIFICATION	4.0569513307314855E-6	DESIGN
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999989768583994	WITHOUT_CLASSIFICATION	1.0231416004827414E-6	DESIGN
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999954979831267	WITHOUT_CLASSIFICATION	4.502016873363378E-6	DESIGN
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999999963170559	WITHOUT_CLASSIFICATION	3.68294413242269E-9	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999980960207987	WITHOUT_CLASSIFICATION	1.903979201330088E-6	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999989488546238	WITHOUT_CLASSIFICATION	1.0511453760987099E-6	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9990955019240371	WITHOUT_CLASSIFICATION	9.044980759628867E-4	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999952692847998	WITHOUT_CLASSIFICATION	4.730715200230913E-6	DESIGN
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.999999140362898	WITHOUT_CLASSIFICATION	8.596371018563676E-7	DESIGN
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999999994781003	WITHOUT_CLASSIFICATION	5.218998465193944E-10	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9999808556709753	WITHOUT_CLASSIFICATION	1.914432902462703E-5	DESIGN
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999279693275936	WITHOUT_CLASSIFICATION	7.203067240639075E-5	DESIGN
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999999201131324	WITHOUT_CLASSIFICATION	7.988686756565035E-8	DESIGN
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.99994573045636	WITHOUT_CLASSIFICATION	5.4269543639919314E-5	DESIGN
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.999252082023666	WITHOUT_CLASSIFICATION	7.47917976334077E-4	DESIGN
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.999998604629103	WITHOUT_CLASSIFICATION	1.3953708970977677E-6	DESIGN
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999971754005285	WITHOUT_CLASSIFICATION	2.824599471587791E-6	DESIGN
// negative values	WITHOUT_CLASSIFICATION	0.9994329442028479	WITHOUT_CLASSIFICATION	5.670557971520605E-4	DESIGN
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999470353265	WITHOUT_CLASSIFICATION	5.2964673506849735E-8	DESIGN
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.999995958532	WITHOUT_CLASSIFICATION	4.0414680000471324E-6	DESIGN
// no such luck...	WITHOUT_CLASSIFICATION	0.9929532032402945	WITHOUT_CLASSIFICATION	0.0070467967597055686	DESIGN
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999899396488585	WITHOUT_CLASSIFICATION	1.006035114144593E-5	DESIGN
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999251337761875	WITHOUT_CLASSIFICATION	7.486622381244809E-5	DESIGN
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9985045922561079	WITHOUT_CLASSIFICATION	0.001495407743892156	DESIGN
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999941633576926	WITHOUT_CLASSIFICATION	5.836642307334449E-6	DESIGN
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999898723940087	WITHOUT_CLASSIFICATION	1.0127605991395733E-5	DESIGN
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999791440768863	WITHOUT_CLASSIFICATION	2.085592311373639E-5	DESIGN
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999876594004811	WITHOUT_CLASSIFICATION	1.234059951888878E-5	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999837156391015	WITHOUT_CLASSIFICATION	1.628436089856311E-5	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999837156391015	WITHOUT_CLASSIFICATION	1.628436089856311E-5	DESIGN
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999984221572072	WITHOUT_CLASSIFICATION	1.577842792650942E-6	DESIGN
/* Tempering */	WITHOUT_CLASSIFICATION	0.9998430839634823	WITHOUT_CLASSIFICATION	1.569160365176382E-4	DESIGN
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999999938233862	WITHOUT_CLASSIFICATION	6.176613716239114E-9	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999999975719585	WITHOUT_CLASSIFICATION	2.4280415675080055E-9	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999999975719585	WITHOUT_CLASSIFICATION	2.4280415675080055E-9	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9999808556709753	WITHOUT_CLASSIFICATION	1.914432902462703E-5	DESIGN
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999999875533687	WITHOUT_CLASSIFICATION	1.24466313413997E-8	DESIGN
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999999972080734	WITHOUT_CLASSIFICATION	2.791926555392891E-9	DESIGN
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999992881669	WITHOUT_CLASSIFICATION	7.118330703546907E-10	DESIGN
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999990975461	WITHOUT_CLASSIFICATION	9.024537656398682E-10	DESIGN
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999999907544055	WITHOUT_CLASSIFICATION	9.24559453183354E-9	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9994968601757434	WITHOUT_CLASSIFICATION	5.031398242566288E-4	DESIGN
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999999931660296	WITHOUT_CLASSIFICATION	6.833970392467118E-9	DESIGN
// no number	WITHOUT_CLASSIFICATION	0.9999585886724325	WITHOUT_CLASSIFICATION	4.141132756748951E-5	DESIGN
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999990148210421	WITHOUT_CLASSIFICATION	9.851789578170951E-7	DESIGN
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999984524944845	WITHOUT_CLASSIFICATION	1.5475055154317916E-6	DESIGN
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9993552816946905	WITHOUT_CLASSIFICATION	6.447183053095595E-4	DESIGN
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999833818012858	WITHOUT_CLASSIFICATION	1.6618198714239957E-5	DESIGN
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999865604655914	WITHOUT_CLASSIFICATION	1.3439534408583771E-5	DESIGN
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999413200197445	WITHOUT_CLASSIFICATION	5.8679980255436533E-5	DESIGN
// we reached the end	WITHOUT_CLASSIFICATION	0.9998317832033315	WITHOUT_CLASSIFICATION	1.682167966684082E-4	DESIGN
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.99997741138487	WITHOUT_CLASSIFICATION	2.2588615130078223E-5	DESIGN
// states	WITHOUT_CLASSIFICATION	0.9999856758683837	WITHOUT_CLASSIFICATION	1.4324131616153415E-5	DESIGN
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999993307692341	WITHOUT_CLASSIFICATION	6.692307659218009E-7	DESIGN
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999998588001	WITHOUT_CLASSIFICATION	1.4119991462382297E-10	DESIGN
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999658243772	WITHOUT_CLASSIFICATION	3.4175622797586016E-8	DESIGN
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999620656975774	WITHOUT_CLASSIFICATION	3.793430242254455E-5	DESIGN
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9606244351650167	WITHOUT_CLASSIFICATION	0.03937556483498329	DESIGN
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999859746479176	WITHOUT_CLASSIFICATION	1.4025352082377047E-5	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999865380145	WITHOUT_CLASSIFICATION	1.3461985531103398E-8	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999996823542396	WITHOUT_CLASSIFICATION	3.1764576031968714E-7	DESIGN
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999997815117211	WITHOUT_CLASSIFICATION	2.184882790467242E-7	DESIGN
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999982746999969	WITHOUT_CLASSIFICATION	1.7253000029784758E-6	DESIGN
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.999999999549242	WITHOUT_CLASSIFICATION	4.507578577291917E-10	DESIGN
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.99999648136725	WITHOUT_CLASSIFICATION	3.5186327499968004E-6	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999921599282	WITHOUT_CLASSIFICATION	7.840071814891313E-9	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999921599282	WITHOUT_CLASSIFICATION	7.840071814891313E-9	DESIGN
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.99994797431802	WITHOUT_CLASSIFICATION	5.202568197998289E-5	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999973269540671	WITHOUT_CLASSIFICATION	2.6730459329576485E-6	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999973269540671	WITHOUT_CLASSIFICATION	2.6730459329576485E-6	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999995709866635	WITHOUT_CLASSIFICATION	4.290133366127881E-7	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999995709866635	WITHOUT_CLASSIFICATION	4.290133366127881E-7	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9998519645155207	WITHOUT_CLASSIFICATION	1.4803548447919797E-4	DESIGN
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999978300826095	WITHOUT_CLASSIFICATION	2.1699173906287246E-6	DESIGN
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999998419120271	WITHOUT_CLASSIFICATION	1.580879729080021E-6	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9998767870498232	WITHOUT_CLASSIFICATION	1.2321295017675353E-4	DESIGN
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999880555566398	WITHOUT_CLASSIFICATION	1.1944443360055377E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999982271184061	WITHOUT_CLASSIFICATION	1.7728815938048304E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999982271184061	WITHOUT_CLASSIFICATION	1.7728815938048304E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999865380145	WITHOUT_CLASSIFICATION	1.3461985531103398E-8	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999865380145	WITHOUT_CLASSIFICATION	1.3461985531103398E-8	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999865380145	WITHOUT_CLASSIFICATION	1.3461985531103398E-8	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999996823542396	WITHOUT_CLASSIFICATION	3.1764576031968714E-7	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999921599282	WITHOUT_CLASSIFICATION	7.840071814891313E-9	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999921599282	WITHOUT_CLASSIFICATION	7.840071814891313E-9	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999921599282	WITHOUT_CLASSIFICATION	7.840071814891313E-9	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9998519645155207	WITHOUT_CLASSIFICATION	1.4803548447919797E-4	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9998519645155207	WITHOUT_CLASSIFICATION	1.4803548447919797E-4	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9998519645155207	WITHOUT_CLASSIFICATION	1.4803548447919797E-4	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9998767870498232	WITHOUT_CLASSIFICATION	1.2321295017675353E-4	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9998767870498232	WITHOUT_CLASSIFICATION	1.2321295017675353E-4	DESIGN
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999998355699072	WITHOUT_CLASSIFICATION	1.6443009272629543E-7	DESIGN
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.999999552722463	WITHOUT_CLASSIFICATION	4.4727753700835516E-7	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999815300968403	WITHOUT_CLASSIFICATION	1.8469903159684734E-5	DESIGN
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9999999995190803	DESIGN	4.80919774387896E-10	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9998211476766309	WITHOUT_CLASSIFICATION	1.7885232336904586E-4	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9998477913311281	WITHOUT_CLASSIFICATION	1.5220866887184106E-4	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9998477913311281	WITHOUT_CLASSIFICATION	1.5220866887184106E-4	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999998853148371	WITHOUT_CLASSIFICATION	1.1468516289504406E-7	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9994968601757434	WITHOUT_CLASSIFICATION	5.031398242566288E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9994968601757434	WITHOUT_CLASSIFICATION	5.031398242566288E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9994968601757434	WITHOUT_CLASSIFICATION	5.031398242566288E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9994968601757434	WITHOUT_CLASSIFICATION	5.031398242566288E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9994968601757434	WITHOUT_CLASSIFICATION	5.031398242566288E-4	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999981979653034	WITHOUT_CLASSIFICATION	1.8020346966272884E-6	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999981979653034	WITHOUT_CLASSIFICATION	1.8020346966272884E-6	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999981979653034	WITHOUT_CLASSIFICATION	1.8020346966272884E-6	DESIGN
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999662518639121	WITHOUT_CLASSIFICATION	3.3748136087963716E-5	DESIGN
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999975153332642	WITHOUT_CLASSIFICATION	2.4846667357570563E-6	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999996823542396	WITHOUT_CLASSIFICATION	3.1764576031968714E-7	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9998519645155207	WITHOUT_CLASSIFICATION	1.4803548447919797E-4	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9998519645155207	WITHOUT_CLASSIFICATION	1.4803548447919797E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9994968601757434	WITHOUT_CLASSIFICATION	5.031398242566288E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9994968601757434	WITHOUT_CLASSIFICATION	5.031398242566288E-4	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999981979653034	WITHOUT_CLASSIFICATION	1.8020346966272884E-6	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999998853148371	WITHOUT_CLASSIFICATION	1.1468516289504406E-7	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999738664324	WITHOUT_CLASSIFICATION	2.6133567687303073E-8	DESIGN
// switch //while	WITHOUT_CLASSIFICATION	0.9999683985160324	WITHOUT_CLASSIFICATION	3.1601483967573494E-5	DESIGN
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9997003505844027	WITHOUT_CLASSIFICATION	2.9964941559727955E-4	DESIGN
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999994597210626	WITHOUT_CLASSIFICATION	5.402789374117179E-7	DESIGN
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999976023337818	WITHOUT_CLASSIFICATION	2.3976662181968797E-6	DESIGN
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999929192836281	WITHOUT_CLASSIFICATION	7.080716371961111E-6	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999952462546083	WITHOUT_CLASSIFICATION	4.753745391692191E-5	DESIGN
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9960911383065756	WITHOUT_CLASSIFICATION	0.003908861693424377	DESIGN
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999867656806181	WITHOUT_CLASSIFICATION	1.3234319382031377E-5	DESIGN
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999967892814735	WITHOUT_CLASSIFICATION	3.2107185265084486E-6	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9994753018686763	WITHOUT_CLASSIFICATION	5.246981313236169E-4	DESIGN
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999999630542832	WITHOUT_CLASSIFICATION	3.694571688968303E-8	DESIGN
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999993237005909	WITHOUT_CLASSIFICATION	6.76299409016049E-7	DESIGN
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999999648856243	WITHOUT_CLASSIFICATION	3.5114375677892845E-8	DESIGN
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999994973705908	WITHOUT_CLASSIFICATION	5.02629409226296E-7	DESIGN
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999980022732599	WITHOUT_CLASSIFICATION	1.997726740066672E-6	DESIGN
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999594158538896	WITHOUT_CLASSIFICATION	4.0584146110492015E-5	DESIGN
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9958788753929159	WITHOUT_CLASSIFICATION	0.004121124607084129	DESIGN
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999400079244604	WITHOUT_CLASSIFICATION	5.999207553968535E-5	DESIGN
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999998028470342	WITHOUT_CLASSIFICATION	1.9715296585486615E-7	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999852363730062	WITHOUT_CLASSIFICATION	1.4763626993834745E-5	DESIGN
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999976836406214	WITHOUT_CLASSIFICATION	2.3163593786591024E-6	DESIGN
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999982851592069	WITHOUT_CLASSIFICATION	1.71484079312322E-6	DESIGN
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999986904249158	WITHOUT_CLASSIFICATION	1.3095750841468981E-6	DESIGN
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9833832203334218	WITHOUT_CLASSIFICATION	0.01661677966657813	DESIGN
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.5328314669186568	DESIGN	0.4671685330813431	WITHOUT_CLASSIFICATION
// unread back	WITHOUT_CLASSIFICATION	0.9998782808607006	WITHOUT_CLASSIFICATION	1.2171913929932212E-4	DESIGN
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999999112163558	WITHOUT_CLASSIFICATION	8.87836442458795E-8	DESIGN
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999921196133472	WITHOUT_CLASSIFICATION	7.880386652789515E-6	DESIGN
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999997323759009	WITHOUT_CLASSIFICATION	2.67624099116656E-7	DESIGN
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.999999726514067	WITHOUT_CLASSIFICATION	2.7348593297674954E-7	DESIGN
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999989498102679	WITHOUT_CLASSIFICATION	1.0501897320599027E-6	DESIGN
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999999790571624	WITHOUT_CLASSIFICATION	2.094283754856248E-8	DESIGN
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999997581529788	WITHOUT_CLASSIFICATION	2.41847021193629E-7	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999738664324	WITHOUT_CLASSIFICATION	2.6133567687303073E-8	DESIGN
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999999530565161	WITHOUT_CLASSIFICATION	4.694348395420161E-8	DESIGN
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9990513360780974	WITHOUT_CLASSIFICATION	9.486639219025671E-4	DESIGN
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9838590209652947	WITHOUT_CLASSIFICATION	0.016140979034705457	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9999025619186416	WITHOUT_CLASSIFICATION	9.743808135845767E-5	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9999025619186416	WITHOUT_CLASSIFICATION	9.743808135845767E-5	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9999987722260305	WITHOUT_CLASSIFICATION	1.2277739695725062E-6	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9999987722260305	WITHOUT_CLASSIFICATION	1.2277739695725062E-6	DESIGN
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.999999950604054	WITHOUT_CLASSIFICATION	4.9395946036801276E-8	DESIGN
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9982405704283009	WITHOUT_CLASSIFICATION	0.0017594295716989892	DESIGN
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999993643669999	WITHOUT_CLASSIFICATION	6.356330001926237E-7	DESIGN
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999999105941587	WITHOUT_CLASSIFICATION	8.940584130309306E-8	DESIGN
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.999999861570104	WITHOUT_CLASSIFICATION	1.3842989588155324E-7	DESIGN
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9997355079032704	WITHOUT_CLASSIFICATION	2.644920967295664E-4	DESIGN
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999846671090619	WITHOUT_CLASSIFICATION	1.5332890938126953E-5	DESIGN
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999999995866672	WITHOUT_CLASSIFICATION	4.1333276863259103E-10	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999994444956403	WITHOUT_CLASSIFICATION	5.555043597081416E-7	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999846628301362	WITHOUT_CLASSIFICATION	1.533716986373493E-5	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999970701151001	WITHOUT_CLASSIFICATION	2.9298848998235973E-6	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999988769926434	WITHOUT_CLASSIFICATION	1.12300735664176E-6	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999988769926434	WITHOUT_CLASSIFICATION	1.12300735664176E-6	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999986881535616	WITHOUT_CLASSIFICATION	1.3118464384274973E-6	DESIGN
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999985159729309	WITHOUT_CLASSIFICATION	1.4840270690197093E-6	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999981903350422	WITHOUT_CLASSIFICATION	1.80966495777815E-6	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999981903350422	WITHOUT_CLASSIFICATION	1.80966495777815E-6	DESIGN
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999990619613369	WITHOUT_CLASSIFICATION	9.380386630677438E-7	DESIGN
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999994831971092	WITHOUT_CLASSIFICATION	5.168028907351039E-7	DESIGN
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9986055346331668	WITHOUT_CLASSIFICATION	0.0013944653668331846	DESIGN
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9997587731451247	WITHOUT_CLASSIFICATION	2.4122685487523317E-4	DESIGN
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999961805567382	WITHOUT_CLASSIFICATION	3.819443261798237E-6	DESIGN
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9998634170544501	WITHOUT_CLASSIFICATION	1.3658294554988183E-4	DESIGN
// save the ungot	WITHOUT_CLASSIFICATION	0.9999734804031228	WITHOUT_CLASSIFICATION	2.6519596877110042E-5	DESIGN
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999821605635955	WITHOUT_CLASSIFICATION	1.783943640456947E-5	DESIGN
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999980965113752	WITHOUT_CLASSIFICATION	1.9034886248735399E-6	DESIGN
// flush first	WITHOUT_CLASSIFICATION	0.999985901758366	WITHOUT_CLASSIFICATION	1.4098241634131638E-5	DESIGN
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999845125799379	WITHOUT_CLASSIFICATION	1.5487420062111484E-5	DESIGN
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999659776613374	WITHOUT_CLASSIFICATION	3.402233866257904E-5	DESIGN
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999998534978729	WITHOUT_CLASSIFICATION	1.4650212710803244E-7	DESIGN
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999998476152522	WITHOUT_CLASSIFICATION	1.5238474776159552E-7	DESIGN
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999946058565	WITHOUT_CLASSIFICATION	5.394143380655761E-9	DESIGN
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999999637507038	WITHOUT_CLASSIFICATION	3.624929619766923E-8	DESIGN
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999236487695552	WITHOUT_CLASSIFICATION	7.635123044482117E-5	DESIGN
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9997165536551282	WITHOUT_CLASSIFICATION	2.834463448718308E-4	DESIGN
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999999988901481	WITHOUT_CLASSIFICATION	1.1098518958955147E-9	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.999998826235257	WITHOUT_CLASSIFICATION	1.1737647429115319E-6	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9984871470948135	DESIGN	0.001512852905186533	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999998192190636	WITHOUT_CLASSIFICATION	1.807809364208022E-7	DESIGN
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999999792137826	WITHOUT_CLASSIFICATION	2.0786217488902373E-8	DESIGN
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999953315812155	WITHOUT_CLASSIFICATION	4.668418784551247E-6	DESIGN
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9992934521007257	WITHOUT_CLASSIFICATION	7.065478992742343E-4	DESIGN
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9954310854310595	WITHOUT_CLASSIFICATION	0.00456891456894051	DESIGN
// else leave it null	WITHOUT_CLASSIFICATION	0.9999986877385333	WITHOUT_CLASSIFICATION	1.3122614667087094E-6	DESIGN
// TypeMatcher	WITHOUT_CLASSIFICATION	0.999874948731649	WITHOUT_CLASSIFICATION	1.25051268350971E-4	DESIGN
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999591095053584	WITHOUT_CLASSIFICATION	4.0890494641579916E-5	DESIGN
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999989585524548	WITHOUT_CLASSIFICATION	1.041447545239892E-6	DESIGN
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999997247762317	WITHOUT_CLASSIFICATION	2.752237683657011E-7	DESIGN
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999976805090887	WITHOUT_CLASSIFICATION	2.3194909113118984E-6	DESIGN
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999974595570935	WITHOUT_CLASSIFICATION	2.5404429065191497E-6	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999810104219983	WITHOUT_CLASSIFICATION	1.8989578001723687E-5	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999810104219983	WITHOUT_CLASSIFICATION	1.8989578001723687E-5	DESIGN
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999999809631311	WITHOUT_CLASSIFICATION	1.9036868923484865E-8	DESIGN
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999899159690643	WITHOUT_CLASSIFICATION	1.0084030935634629E-5	DESIGN
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999999997481294	WITHOUT_CLASSIFICATION	2.518706270245272E-10	DESIGN
// Init	WITHOUT_CLASSIFICATION	0.9999884569638606	WITHOUT_CLASSIFICATION	1.1543036139328481E-5	DESIGN
// Block	WITHOUT_CLASSIFICATION	0.999998864371727	WITHOUT_CLASSIFICATION	1.1356282730154738E-6	DESIGN
// Copy constructor	WITHOUT_CLASSIFICATION	0.9990243581656348	WITHOUT_CLASSIFICATION	9.756418343651683E-4	DESIGN
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.972923880483926	WITHOUT_CLASSIFICATION	0.027076119516074033	DESIGN
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.988648420217649	WITHOUT_CLASSIFICATION	0.011351579782350997	DESIGN
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.999998861349375	WITHOUT_CLASSIFICATION	1.138650624974263E-6	DESIGN
// ok	WITHOUT_CLASSIFICATION	0.9999951485002736	WITHOUT_CLASSIFICATION	4.8514997263483E-6	DESIGN
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999689428508368	DESIGN	3.105714916308688E-5	WITHOUT_CLASSIFICATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9806663314560411	WITHOUT_CLASSIFICATION	0.01933366854395884	DESIGN
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9998888651187545	WITHOUT_CLASSIFICATION	1.1113488124551936E-4	DESIGN
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999519198714628	WITHOUT_CLASSIFICATION	4.808012853710063E-5	DESIGN
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999999791762629	WITHOUT_CLASSIFICATION	2.0823737063333792E-8	DESIGN
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999959530226451	WITHOUT_CLASSIFICATION	4.046977354897738E-6	DESIGN
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9996945387917866	WITHOUT_CLASSIFICATION	3.05461208213471E-4	DESIGN
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9976852725857976	WITHOUT_CLASSIFICATION	0.0023147274142023572	DESIGN
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9976543032966735	WITHOUT_CLASSIFICATION	0.0023456967033265905	DESIGN
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999767103918964	WITHOUT_CLASSIFICATION	2.3289608103605997E-5	DESIGN
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999999761857231	WITHOUT_CLASSIFICATION	2.381427690627534E-8	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999985932599379	WITHOUT_CLASSIFICATION	1.4067400621989668E-6	DESIGN
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9986732370956556	WITHOUT_CLASSIFICATION	0.0013267629043444713	DESIGN
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.999974496847633	WITHOUT_CLASSIFICATION	2.550315236705674E-5	DESIGN
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9940567130643064	WITHOUT_CLASSIFICATION	0.005943286935693486	DESIGN
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999635882143716	WITHOUT_CLASSIFICATION	3.641178562836962E-5	DESIGN
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999346218281	WITHOUT_CLASSIFICATION	6.537817193625662E-8	DESIGN
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.999999955562223	WITHOUT_CLASSIFICATION	4.443777704407081E-8	DESIGN
// void methods should work	WITHOUT_CLASSIFICATION	0.9289962712921381	WITHOUT_CLASSIFICATION	0.0710037287078618	DESIGN
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999978312749921	WITHOUT_CLASSIFICATION	2.1687250078391935E-6	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999999801733884	WITHOUT_CLASSIFICATION	1.9826611504330224E-8	DESIGN
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999578265213867	WITHOUT_CLASSIFICATION	4.2173478613274444E-5	DESIGN
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.998822449327151	WITHOUT_CLASSIFICATION	0.001177550672849002	DESIGN
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999987395138042	WITHOUT_CLASSIFICATION	1.2604861958406046E-6	DESIGN
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999876293169159	WITHOUT_CLASSIFICATION	1.2370683084213737E-5	DESIGN
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9998775034588301	WITHOUT_CLASSIFICATION	1.2249654116990984E-4	DESIGN
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9980200763794719	WITHOUT_CLASSIFICATION	0.001979923620528024	DESIGN
// value equality	WITHOUT_CLASSIFICATION	0.9999923165013811	WITHOUT_CLASSIFICATION	7.683498618904555E-6	DESIGN
// identity equality	WITHOUT_CLASSIFICATION	0.999981242302815	WITHOUT_CLASSIFICATION	1.8757697184959575E-5	DESIGN
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.999997773107826	WITHOUT_CLASSIFICATION	2.2268921740625343E-6	DESIGN
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999954215252094	WITHOUT_CLASSIFICATION	4.578474790673952E-6	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999692111840741	WITHOUT_CLASSIFICATION	3.0788815925989754E-5	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999692111840741	WITHOUT_CLASSIFICATION	3.0788815925989754E-5	DESIGN
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9998501451997394	WITHOUT_CLASSIFICATION	1.498548002606112E-4	DESIGN
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999998576364801	WITHOUT_CLASSIFICATION	1.4236351988099684E-7	DESIGN
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999979661356161	WITHOUT_CLASSIFICATION	2.033864383951886E-6	DESIGN
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9971687262755252	WITHOUT_CLASSIFICATION	0.0028312737244748963	DESIGN
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.999879006837719	WITHOUT_CLASSIFICATION	1.2099316228093783E-4	DESIGN
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999993074185902	WITHOUT_CLASSIFICATION	6.925814097153936E-7	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999986726346779	WITHOUT_CLASSIFICATION	1.3273653220945393E-5	DESIGN
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.8923358364383777	WITHOUT_CLASSIFICATION	0.10766416356162234	DESIGN
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999750246103658	WITHOUT_CLASSIFICATION	2.497538963415187E-5	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.997784179320146	WITHOUT_CLASSIFICATION	0.002215820679854046	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.999655528836265	WITHOUT_CLASSIFICATION	3.444711637350461E-4	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999997919990832	WITHOUT_CLASSIFICATION	2.080009168514441E-7	DESIGN
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9984914392635087	WITHOUT_CLASSIFICATION	0.0015085607364913466	DESIGN
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999764732280501	WITHOUT_CLASSIFICATION	2.3526771950005784E-5	DESIGN
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999999825969369	WITHOUT_CLASSIFICATION	1.7403063171581384E-8	DESIGN
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9999674513285622	DESIGN	3.2548671437756354E-5	WITHOUT_CLASSIFICATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9744314235169007	WITHOUT_CLASSIFICATION	0.02556857648309925	DESIGN
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.999997562164642	WITHOUT_CLASSIFICATION	2.437835358043847E-6	DESIGN
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9903148476164272	WITHOUT_CLASSIFICATION	0.009685152383572856	DESIGN
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999655610043657	DESIGN	3.443899563431828E-5	WITHOUT_CLASSIFICATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9998569400294537	WITHOUT_CLASSIFICATION	1.430599705463774E-4	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.999787683914156	WITHOUT_CLASSIFICATION	2.123160858440466E-4	DESIGN
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999999205265	WITHOUT_CLASSIFICATION	7.94734739758029E-11	DESIGN
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999771264710727	WITHOUT_CLASSIFICATION	2.2873528927301476E-5	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9996131455816767	WITHOUT_CLASSIFICATION	3.868544183233034E-4	DESIGN
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999995406022671	WITHOUT_CLASSIFICATION	4.593977329547986E-7	DESIGN
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.999999231924505	WITHOUT_CLASSIFICATION	7.680754950514235E-7	DESIGN
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999583609994699	WITHOUT_CLASSIFICATION	4.163900053012473E-5	DESIGN
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999976760113	WITHOUT_CLASSIFICATION	2.3239886827696164E-9	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9997092540512522	WITHOUT_CLASSIFICATION	2.907459487477584E-4	DESIGN
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999989946864	WITHOUT_CLASSIFICATION	1.0053135396535999E-9	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999911278793657	WITHOUT_CLASSIFICATION	8.872120634198053E-6	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9997092540512522	WITHOUT_CLASSIFICATION	2.907459487477584E-4	DESIGN
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999976437888723	WITHOUT_CLASSIFICATION	2.356211127680777E-6	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.999999876029423	WITHOUT_CLASSIFICATION	1.2397057700100608E-7	DESIGN
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999999572889949	WITHOUT_CLASSIFICATION	4.27110050625868E-8	DESIGN
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.999909825434217	DESIGN	9.017456578293226E-5	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9992857158172698	WITHOUT_CLASSIFICATION	7.142841827301979E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9994901689633148	WITHOUT_CLASSIFICATION	5.098310366852813E-4	DESIGN
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999518629335374	WITHOUT_CLASSIFICATION	4.813706646264645E-5	DESIGN
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.6684291994372689	WITHOUT_CLASSIFICATION	0.331570800562731	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999984246519	WITHOUT_CLASSIFICATION	1.5753480347106448E-9	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.999998826235257	WITHOUT_CLASSIFICATION	1.1737647429115319E-6	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999815300968403	WITHOUT_CLASSIFICATION	1.8469903159684734E-5	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9971610192439687	WITHOUT_CLASSIFICATION	0.002838980756031365	DESIGN
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999999390134042	WITHOUT_CLASSIFICATION	6.09865957440038E-8	DESIGN
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.99993934948072	WITHOUT_CLASSIFICATION	6.0650519279842E-5	DESIGN
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999985841734014	WITHOUT_CLASSIFICATION	1.4158265986013152E-6	DESIGN
// switch // while	WITHOUT_CLASSIFICATION	0.9999557950726762	WITHOUT_CLASSIFICATION	4.42049273237304E-5	DESIGN
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9931416216129189	DESIGN	0.0068583783870811744	WITHOUT_CLASSIFICATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.897025661312955	WITHOUT_CLASSIFICATION	0.10297433868704503	DESIGN
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9958778301813845	WITHOUT_CLASSIFICATION	0.00412216981861547	DESIGN
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9995746044426358	WITHOUT_CLASSIFICATION	4.2539555736414785E-4	DESIGN
// expected	WITHOUT_CLASSIFICATION	0.9999994471666711	WITHOUT_CLASSIFICATION	5.528333289857156E-7	DESIGN
// Do nothing	WITHOUT_CLASSIFICATION	0.9999499717626056	WITHOUT_CLASSIFICATION	5.0028237394387584E-5	DESIGN
// constructor	WITHOUT_CLASSIFICATION	0.9998605233685495	WITHOUT_CLASSIFICATION	1.394766314506131E-4	DESIGN
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999673417269772	WITHOUT_CLASSIFICATION	3.265827302272344E-5	DESIGN
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999369229185081	WITHOUT_CLASSIFICATION	6.307708149185483E-5	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999992361675024	WITHOUT_CLASSIFICATION	7.638324976528325E-7	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999988596454472	WITHOUT_CLASSIFICATION	1.140354552828664E-6	DESIGN
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9996129464658982	WITHOUT_CLASSIFICATION	3.8705353410178065E-4	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999859483283	WITHOUT_CLASSIFICATION	1.405167163936653E-8	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9716511619948273	DESIGN	0.028348838005172773	WITHOUT_CLASSIFICATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9716511619948273	DESIGN	0.028348838005172773	WITHOUT_CLASSIFICATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999996835287033	WITHOUT_CLASSIFICATION	3.164712967141334E-7	DESIGN
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.999999944662794	WITHOUT_CLASSIFICATION	5.53372060811749E-8	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9998788326770306	WITHOUT_CLASSIFICATION	1.2116732296939349E-4	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999903312673596	DESIGN	9.668732640489798E-6	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999903312673596	DESIGN	9.668732640489798E-6	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999903312673596	DESIGN	9.668732640489798E-6	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999903312673596	DESIGN	9.668732640489798E-6	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999992986426944	WITHOUT_CLASSIFICATION	7.013573056029386E-7	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999999991364554	WITHOUT_CLASSIFICATION	8.635444820515072E-10	DESIGN
// "else" body	WITHOUT_CLASSIFICATION	0.9999998842749164	WITHOUT_CLASSIFICATION	1.1572508356863178E-7	DESIGN
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9999969325982514	DESIGN	3.0674017485849182E-6	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999939682350283	WITHOUT_CLASSIFICATION	6.031764971702593E-6	DESIGN
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999948329395921	WITHOUT_CLASSIFICATION	5.1670604078195545E-6	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9985619034189619	WITHOUT_CLASSIFICATION	0.0014380965810380953	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9985619034189619	WITHOUT_CLASSIFICATION	0.0014380965810380953	DESIGN
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9970573950328186	WITHOUT_CLASSIFICATION	0.0029426049671814	DESIGN
/* 10! */	WITHOUT_CLASSIFICATION	0.9999785894500612	WITHOUT_CLASSIFICATION	2.1410549938812692E-5	DESIGN
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9948634526171519	WITHOUT_CLASSIFICATION	0.005136547382848024	DESIGN
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9999999933559968	WITHOUT_CLASSIFICATION	6.644003276772379E-9	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.999999981099002	WITHOUT_CLASSIFICATION	1.890099800109339E-8	DESIGN
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.999999856317563	WITHOUT_CLASSIFICATION	1.436824369374339E-7	DESIGN
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999995752971156	WITHOUT_CLASSIFICATION	4.247028843948426E-7	DESIGN
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999989470949264	WITHOUT_CLASSIFICATION	1.0529050735970115E-6	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999726477737787	WITHOUT_CLASSIFICATION	2.7352226221292157E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999726477737787	WITHOUT_CLASSIFICATION	2.7352226221292157E-4	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999911278793657	WITHOUT_CLASSIFICATION	8.872120634198053E-6	DESIGN
// line 449	WITHOUT_CLASSIFICATION	0.9999986744378113	WITHOUT_CLASSIFICATION	1.3255621886379028E-6	DESIGN
// line 495	WITHOUT_CLASSIFICATION	0.9999989351560657	WITHOUT_CLASSIFICATION	1.0648439342858781E-6	DESIGN
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999042246381313	WITHOUT_CLASSIFICATION	9.577536186872472E-5	DESIGN
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999954012018	WITHOUT_CLASSIFICATION	4.598798203285914E-9	DESIGN
/* 14! */	WITHOUT_CLASSIFICATION	0.9999699729725482	WITHOUT_CLASSIFICATION	3.002702745184158E-5	DESIGN
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999962631339808	WITHOUT_CLASSIFICATION	3.7368660192037447E-6	DESIGN
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9998789527542519	WITHOUT_CLASSIFICATION	1.2104724574811106E-4	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999397717170755	WITHOUT_CLASSIFICATION	6.022828292452765E-5	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999397717170755	WITHOUT_CLASSIFICATION	6.022828292452765E-5	DESIGN
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9957470449628038	WITHOUT_CLASSIFICATION	0.004252955037196218	DESIGN
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.999999608021079	WITHOUT_CLASSIFICATION	3.91978920935813E-7	DESIGN
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9978315088326997	WITHOUT_CLASSIFICATION	0.002168491167300257	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999989912912414	WITHOUT_CLASSIFICATION	1.0087087586574744E-6	DESIGN
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999984412221348	WITHOUT_CLASSIFICATION	1.5587778653360219E-6	DESIGN
/* 18! */	WITHOUT_CLASSIFICATION	0.9999746821487575	WITHOUT_CLASSIFICATION	2.5317851242532607E-5	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9995608083771356	WITHOUT_CLASSIFICATION	4.391916228644527E-4	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999996241260373	WITHOUT_CLASSIFICATION	3.758739626960297E-7	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999996241260373	WITHOUT_CLASSIFICATION	3.758739626960297E-7	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999996241260373	WITHOUT_CLASSIFICATION	3.758739626960297E-7	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999996241260373	WITHOUT_CLASSIFICATION	3.758739626960297E-7	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999970118104922	WITHOUT_CLASSIFICATION	2.988189507835821E-6	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9989882167930962	WITHOUT_CLASSIFICATION	0.0010117832069037914	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9998274357266997	WITHOUT_CLASSIFICATION	1.7256427330021153E-4	DESIGN
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999931822101777	WITHOUT_CLASSIFICATION	6.817789822348343E-6	DESIGN
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.999999995224937	WITHOUT_CLASSIFICATION	4.775063013153156E-9	DESIGN
/* 22! */	WITHOUT_CLASSIFICATION	0.9999788403553713	WITHOUT_CLASSIFICATION	2.1159644628585278E-5	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999914158003309	WITHOUT_CLASSIFICATION	8.584199669031781E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999528418054	WITHOUT_CLASSIFICATION	4.7158194601341505E-8	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999528418054	WITHOUT_CLASSIFICATION	4.7158194601341505E-8	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999528418054	WITHOUT_CLASSIFICATION	4.7158194601341505E-8	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999999890829443	WITHOUT_CLASSIFICATION	1.0917055735187036E-8	DESIGN
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999871385151817	WITHOUT_CLASSIFICATION	1.2861484818308122E-5	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999830213436816	WITHOUT_CLASSIFICATION	1.697865631845025E-5	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999830213436816	WITHOUT_CLASSIFICATION	1.697865631845025E-5	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999907888815072	WITHOUT_CLASSIFICATION	9.211118492787799E-6	DESIGN
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999996986252	WITHOUT_CLASSIFICATION	3.013747293927361E-10	DESIGN
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999999997691255	WITHOUT_CLASSIFICATION	2.3087453098207876E-10	DESIGN
// BASE64	WITHOUT_CLASSIFICATION	0.9999923925982803	WITHOUT_CLASSIFICATION	7.6074017197544745E-6	DESIGN
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999999511219	WITHOUT_CLASSIFICATION	4.887813394677753E-11	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999939962965351	WITHOUT_CLASSIFICATION	6.003703464914658E-6	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.989093589025811	WITHOUT_CLASSIFICATION	0.010906410974188917	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.989093589025811	WITHOUT_CLASSIFICATION	0.010906410974188917	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999106830824	WITHOUT_CLASSIFICATION	8.931691761765361E-8	DESIGN
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999069207057596	WITHOUT_CLASSIFICATION	9.307929424038295E-5	DESIGN
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999587940598732	WITHOUT_CLASSIFICATION	4.1205940126818444E-5	DESIGN
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.999999388941152	WITHOUT_CLASSIFICATION	6.110588480443642E-7	DESIGN
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999914125778129	WITHOUT_CLASSIFICATION	8.587422187133583E-6	DESIGN
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999999999053598	WITHOUT_CLASSIFICATION	9.46401924830418E-11	DESIGN
// carriage return	WITHOUT_CLASSIFICATION	0.9999858512462885	WITHOUT_CLASSIFICATION	1.414875371138245E-5	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999958950758043	WITHOUT_CLASSIFICATION	4.1049241957054476E-5	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999986502675574	WITHOUT_CLASSIFICATION	1.3497324425699915E-6	DESIGN
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9995879320324539	WITHOUT_CLASSIFICATION	4.120679675462064E-4	DESIGN
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999992104164822	WITHOUT_CLASSIFICATION	7.895835177568216E-7	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999426999255	WITHOUT_CLASSIFICATION	5.730007447591897E-8	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999985318405957	WITHOUT_CLASSIFICATION	1.4681594043321478E-6	DESIGN
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999983189771406	WITHOUT_CLASSIFICATION	1.6810228593739141E-6	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999999243596005	WITHOUT_CLASSIFICATION	7.564039945372025E-8	DESIGN
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9977980432412107	WITHOUT_CLASSIFICATION	0.0022019567587892685	DESIGN
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999396527376566	WITHOUT_CLASSIFICATION	6.0347262343405805E-5	DESIGN
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999998780998268	WITHOUT_CLASSIFICATION	1.219001731610126E-7	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999999162449731	WITHOUT_CLASSIFICATION	8.375502691536889E-8	DESIGN
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999985621516091	WITHOUT_CLASSIFICATION	1.437848390950693E-6	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999992992115303	WITHOUT_CLASSIFICATION	7.007884695986718E-7	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999974700793496	WITHOUT_CLASSIFICATION	2.529920650410264E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999278787019011	WITHOUT_CLASSIFICATION	7.212129809884233E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999278787019011	WITHOUT_CLASSIFICATION	7.212129809884233E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999278787019011	WITHOUT_CLASSIFICATION	7.212129809884233E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999278787019011	WITHOUT_CLASSIFICATION	7.212129809884233E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999278787019011	WITHOUT_CLASSIFICATION	7.212129809884233E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999278787019011	WITHOUT_CLASSIFICATION	7.212129809884233E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999278787019011	WITHOUT_CLASSIFICATION	7.212129809884233E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999278787019011	WITHOUT_CLASSIFICATION	7.212129809884233E-5	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9997728396627459	WITHOUT_CLASSIFICATION	2.2716033725401713E-4	DESIGN
/* fall through */	WITHOUT_CLASSIFICATION	0.9999662168823522	WITHOUT_CLASSIFICATION	3.378311764772402E-5	DESIGN
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.999724851410886	WITHOUT_CLASSIFICATION	2.751485891140447E-4	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999629873933618	DESIGN	3.7012606638266744E-5	WITHOUT_CLASSIFICATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999986726346779	WITHOUT_CLASSIFICATION	1.3273653220945393E-5	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999986726346779	WITHOUT_CLASSIFICATION	1.3273653220945393E-5	DESIGN
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9991428237293573	WITHOUT_CLASSIFICATION	8.57176270642642E-4	DESIGN
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9951688068589393	WITHOUT_CLASSIFICATION	0.00483119314106073	DESIGN
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999997809458074	WITHOUT_CLASSIFICATION	2.1905419250690325E-7	DESIGN
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999538718973122	WITHOUT_CLASSIFICATION	4.612810268775195E-5	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999995517689033	WITHOUT_CLASSIFICATION	4.482310967121251E-7	DESIGN
// octal constant	WITHOUT_CLASSIFICATION	0.9999996442282658	WITHOUT_CLASSIFICATION	3.557717341787629E-7	DESIGN
// read	WITHOUT_CLASSIFICATION	0.999845446594159	WITHOUT_CLASSIFICATION	1.545534058410064E-4	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9078095325649329	DESIGN	0.09219046743506712	WITHOUT_CLASSIFICATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999929246882377	WITHOUT_CLASSIFICATION	7.075311762265776E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999710254032643	WITHOUT_CLASSIFICATION	2.8974596735650518E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999710254032643	WITHOUT_CLASSIFICATION	2.8974596735650518E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999710254032643	WITHOUT_CLASSIFICATION	2.8974596735650518E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998936726937223	WITHOUT_CLASSIFICATION	1.063273062777101E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998936726937223	WITHOUT_CLASSIFICATION	1.063273062777101E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998936726937223	WITHOUT_CLASSIFICATION	1.063273062777101E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998936726937223	WITHOUT_CLASSIFICATION	1.063273062777101E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998936726937223	WITHOUT_CLASSIFICATION	1.063273062777101E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998936726937223	WITHOUT_CLASSIFICATION	1.063273062777101E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998936726937223	WITHOUT_CLASSIFICATION	1.063273062777101E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998936726937223	WITHOUT_CLASSIFICATION	1.063273062777101E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998936726937223	WITHOUT_CLASSIFICATION	1.063273062777101E-4	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9978504615364642	WITHOUT_CLASSIFICATION	0.0021495384635357865	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9999583895938081	WITHOUT_CLASSIFICATION	4.1610406191953475E-5	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999977179695413	WITHOUT_CLASSIFICATION	2.2820304587320017E-6	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999718810815337	WITHOUT_CLASSIFICATION	2.811891846635172E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998936726937223	WITHOUT_CLASSIFICATION	1.063273062777101E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998936726937223	WITHOUT_CLASSIFICATION	1.063273062777101E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998936726937223	WITHOUT_CLASSIFICATION	1.063273062777101E-4	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999898525757974	WITHOUT_CLASSIFICATION	1.0147424202575628E-5	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999034223405172	WITHOUT_CLASSIFICATION	9.657765948281137E-5	DESIGN
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999999994376124	WITHOUT_CLASSIFICATION	5.623875704361003E-10	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999634790998132	WITHOUT_CLASSIFICATION	3.652090018679672E-5	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999634790998132	WITHOUT_CLASSIFICATION	3.652090018679672E-5	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999998320925513	WITHOUT_CLASSIFICATION	1.6790744865827968E-7	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999583970804988	WITHOUT_CLASSIFICATION	4.160291950114209E-5	DESIGN
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999998150637976	WITHOUT_CLASSIFICATION	1.8493620235073792E-7	DESIGN
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999984158659577	WITHOUT_CLASSIFICATION	1.5841340422682452E-6	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999976238226383	WITHOUT_CLASSIFICATION	2.3761773617163465E-6	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999976238226383	WITHOUT_CLASSIFICATION	2.3761773617163465E-6	DESIGN
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9981742706977196	WITHOUT_CLASSIFICATION	0.001825729302280375	DESIGN
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999835225581	WITHOUT_CLASSIFICATION	1.6477441762599298E-8	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999997535653042	WITHOUT_CLASSIFICATION	2.4643469580552347E-6	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9998928502272997	WITHOUT_CLASSIFICATION	1.0714977270032568E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9998928502272997	WITHOUT_CLASSIFICATION	1.0714977270032568E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9998928502272997	WITHOUT_CLASSIFICATION	1.0714977270032568E-4	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9998724754144389	WITHOUT_CLASSIFICATION	1.275245855611072E-4	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999979731465444	WITHOUT_CLASSIFICATION	2.0268534556673343E-6	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999979731465444	WITHOUT_CLASSIFICATION	2.0268534556673343E-6	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9999170867576537	WITHOUT_CLASSIFICATION	8.291324234641436E-5	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9999170867576537	WITHOUT_CLASSIFICATION	8.291324234641436E-5	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9999990931378797	WITHOUT_CLASSIFICATION	9.068621202868983E-7	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999952005673702	WITHOUT_CLASSIFICATION	4.799432629721943E-6	DESIGN
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999999189071006	WITHOUT_CLASSIFICATION	8.109289940035084E-8	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999924981532906	WITHOUT_CLASSIFICATION	7.5018467094022736E-6	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.999992915384663	WITHOUT_CLASSIFICATION	7.084615337080079E-6	DESIGN
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999997849280838	WITHOUT_CLASSIFICATION	2.15071916102838E-7	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999997749437264	WITHOUT_CLASSIFICATION	2.2505627366868496E-7	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999982271184061	WITHOUT_CLASSIFICATION	1.7728815938048304E-6	DESIGN
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9997819278095079	WITHOUT_CLASSIFICATION	2.1807219049219524E-4	DESIGN
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999789037058	WITHOUT_CLASSIFICATION	2.1096294162881203E-8	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.632057454859162	DESIGN	0.367942545140838	WITHOUT_CLASSIFICATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9938429195412312	WITHOUT_CLASSIFICATION	0.00615708045876887	DESIGN
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999968244327871	WITHOUT_CLASSIFICATION	3.1755672128621036E-6	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999999433460927	WITHOUT_CLASSIFICATION	5.66539073991489E-8	DESIGN
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9988442185451075	WITHOUT_CLASSIFICATION	0.0011557814548924866	DESIGN
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999991810234798	WITHOUT_CLASSIFICATION	8.189765201882119E-7	DESIGN
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999870613975709	WITHOUT_CLASSIFICATION	1.2938602429048394E-5	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999992670944179	WITHOUT_CLASSIFICATION	7.32905582033803E-7	DESIGN
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999913223268666	WITHOUT_CLASSIFICATION	8.67767313339043E-6	DESIGN
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.999994815742518	WITHOUT_CLASSIFICATION	5.184257481970356E-6	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9971610192439687	WITHOUT_CLASSIFICATION	0.002838980756031365	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9995607931859559	WITHOUT_CLASSIFICATION	4.3920681404413395E-4	DESIGN
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9998705667792961	WITHOUT_CLASSIFICATION	1.2943322070381696E-4	DESIGN
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999832822513516	WITHOUT_CLASSIFICATION	1.671774864839285E-5	DESIGN
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999923505386292	WITHOUT_CLASSIFICATION	7.649461370752959E-6	DESIGN
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9849813070595558	WITHOUT_CLASSIFICATION	0.015018692940444117	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.999992740280536	WITHOUT_CLASSIFICATION	7.259719463982184E-6	DESIGN
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999788620907238	WITHOUT_CLASSIFICATION	2.113790927608436E-5	DESIGN
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999962104743443	WITHOUT_CLASSIFICATION	3.789525655670015E-6	DESIGN
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999999999551249	WITHOUT_CLASSIFICATION	4.48751269056996E-11	DESIGN
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999972769789681	WITHOUT_CLASSIFICATION	2.7230210319225732E-6	DESIGN
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999018200742403	WITHOUT_CLASSIFICATION	9.817992575972933E-5	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9996040167650102	WITHOUT_CLASSIFICATION	3.9598323498971246E-4	DESIGN
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999999608763087	WITHOUT_CLASSIFICATION	3.912369128620725E-8	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.99999981516939	WITHOUT_CLASSIFICATION	1.8483061006460867E-7	DESIGN
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999917683450179	WITHOUT_CLASSIFICATION	8.231654982146546E-6	DESIGN
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999204338584586	WITHOUT_CLASSIFICATION	7.956614154136377E-5	DESIGN
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9895247772060176	WITHOUT_CLASSIFICATION	0.010475222793982386	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999119457006223	WITHOUT_CLASSIFICATION	8.805429937771125E-5	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9997442222276276	WITHOUT_CLASSIFICATION	2.5577777237237764E-4	DESIGN
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.8255681508769384	DESIGN	0.17443184912306164	WITHOUT_CLASSIFICATION
// finally	WITHOUT_CLASSIFICATION	0.9999157598285621	WITHOUT_CLASSIFICATION	8.42401714378492E-5	DESIGN
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999999968613702	WITHOUT_CLASSIFICATION	3.1386297899189297E-9	DESIGN
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999998675914501	WITHOUT_CLASSIFICATION	1.3240854994275896E-7	DESIGN
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999994086991304	WITHOUT_CLASSIFICATION	5.913008694708308E-7	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999167720373215	WITHOUT_CLASSIFICATION	8.322796267839113E-5	DESIGN
// specific arity	WITHOUT_CLASSIFICATION	0.99994722769733	WITHOUT_CLASSIFICATION	5.27723026700548E-5	DESIGN
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.999998357408631	WITHOUT_CLASSIFICATION	1.642591369050549E-6	DESIGN
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999997912684898	WITHOUT_CLASSIFICATION	2.08731510165431E-7	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999978929659773	WITHOUT_CLASSIFICATION	2.107034022750588E-6	DESIGN
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999758571201831	WITHOUT_CLASSIFICATION	2.4142879816854215E-5	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999971181224521	WITHOUT_CLASSIFICATION	2.8818775478771304E-6	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999971181224521	WITHOUT_CLASSIFICATION	2.8818775478771304E-6	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999989253821995	WITHOUT_CLASSIFICATION	1.0746178005330821E-6	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999989253821995	WITHOUT_CLASSIFICATION	1.0746178005330821E-6	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9966904426654523	DESIGN	0.0033095573345475996	WITHOUT_CLASSIFICATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9966904426654523	DESIGN	0.0033095573345475996	WITHOUT_CLASSIFICATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999142612978897	WITHOUT_CLASSIFICATION	8.573870211022831E-5	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999142612978897	WITHOUT_CLASSIFICATION	8.573870211022831E-5	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999981062537432	WITHOUT_CLASSIFICATION	1.893746256751977E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999981062537432	WITHOUT_CLASSIFICATION	1.893746256751977E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999981062537432	WITHOUT_CLASSIFICATION	1.893746256751977E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999981062537432	WITHOUT_CLASSIFICATION	1.893746256751977E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999981062537432	WITHOUT_CLASSIFICATION	1.893746256751977E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999981062537432	WITHOUT_CLASSIFICATION	1.893746256751977E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999981062537432	WITHOUT_CLASSIFICATION	1.893746256751977E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999981062537432	WITHOUT_CLASSIFICATION	1.893746256751977E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999981062537432	WITHOUT_CLASSIFICATION	1.893746256751977E-6	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999998233475131	WITHOUT_CLASSIFICATION	1.7665248696902075E-7	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999998233475131	WITHOUT_CLASSIFICATION	1.7665248696902075E-7	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999998233475131	WITHOUT_CLASSIFICATION	1.7665248696902075E-7	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999020686579513	WITHOUT_CLASSIFICATION	9.79313420488165E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999737062062	WITHOUT_CLASSIFICATION	2.629379379289426E-7	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999737062062	WITHOUT_CLASSIFICATION	2.629379379289426E-7	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999737062062	WITHOUT_CLASSIFICATION	2.629379379289426E-7	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999943235981301	WITHOUT_CLASSIFICATION	5.6764018698673E-6	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999943235981301	WITHOUT_CLASSIFICATION	5.6764018698673E-6	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999943235981301	WITHOUT_CLASSIFICATION	5.6764018698673E-6	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999993619622426	WITHOUT_CLASSIFICATION	6.380377575093901E-7	DESIGN
// backspace	WITHOUT_CLASSIFICATION	0.9999870703145766	WITHOUT_CLASSIFICATION	1.2929685423489475E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.999966092991844	WITHOUT_CLASSIFICATION	3.390700815596959E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999589243913355	WITHOUT_CLASSIFICATION	4.107560866450691E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999589243913355	WITHOUT_CLASSIFICATION	4.107560866450691E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999589243913355	WITHOUT_CLASSIFICATION	4.107560866450691E-5	DESIGN
/* package-private */	WITHOUT_CLASSIFICATION	0.9999402858148194	WITHOUT_CLASSIFICATION	5.9714185180517037E-5	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999767318008884	WITHOUT_CLASSIFICATION	2.3268199111596956E-5	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999767318008884	WITHOUT_CLASSIFICATION	2.3268199111596956E-5	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999628841698074	WITHOUT_CLASSIFICATION	3.711583019261572E-5	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999997986674259	WITHOUT_CLASSIFICATION	2.0133257396271703E-7	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999997986674259	WITHOUT_CLASSIFICATION	2.0133257396271703E-7	DESIGN
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9999994744975235	DESIGN	5.255024765361196E-7	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999989508965935	WITHOUT_CLASSIFICATION	1.0491034064675024E-6	DESIGN
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9996223696646525	WITHOUT_CLASSIFICATION	3.7763033534755344E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999977748160007	WITHOUT_CLASSIFICATION	2.225183999327386E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999977748160007	WITHOUT_CLASSIFICATION	2.225183999327386E-6	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.5765104242901817	WITHOUT_CLASSIFICATION	0.4234895757098183	DESIGN
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.997846607670906	WITHOUT_CLASSIFICATION	0.0021533923290939895	DESIGN
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9570696407136382	WITHOUT_CLASSIFICATION	0.04293035928636178	DESIGN
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.999965581378604	WITHOUT_CLASSIFICATION	3.4418621395901255E-5	DESIGN
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999969150343359	WITHOUT_CLASSIFICATION	3.0849656641535955E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999977748160007	WITHOUT_CLASSIFICATION	2.225183999327386E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999977748160007	WITHOUT_CLASSIFICATION	2.225183999327386E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999977748160007	WITHOUT_CLASSIFICATION	2.225183999327386E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999977748160007	WITHOUT_CLASSIFICATION	2.225183999327386E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999977748160007	WITHOUT_CLASSIFICATION	2.225183999327386E-6	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999929132087898	WITHOUT_CLASSIFICATION	7.086791210155471E-6	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999915711354072	WITHOUT_CLASSIFICATION	8.428864592715494E-6	DESIGN
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9945374527838668	WITHOUT_CLASSIFICATION	0.00546254721613315	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.999999986504501	WITHOUT_CLASSIFICATION	1.3495498985993817E-8	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.99999998682564	WITHOUT_CLASSIFICATION	1.3174360060291923E-8	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996475467921719	WITHOUT_CLASSIFICATION	3.524532078280679E-4	DESIGN
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9976779773445876	WITHOUT_CLASSIFICATION	0.0023220226554123854	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9996850950313217	WITHOUT_CLASSIFICATION	3.149049686782828E-4	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9998691170353438	WITHOUT_CLASSIFICATION	1.308829646562968E-4	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9999996950970886	WITHOUT_CLASSIFICATION	3.049029113197848E-7	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.999999580591157	WITHOUT_CLASSIFICATION	4.1940884300203066E-7	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.999787683914156	WITHOUT_CLASSIFICATION	2.123160858440466E-4	DESIGN
// only public methods	WITHOUT_CLASSIFICATION	0.9986261749490586	WITHOUT_CLASSIFICATION	0.0013738250509413915	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999999662545134	WITHOUT_CLASSIFICATION	3.374548663367474E-8	DESIGN
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9927310399315699	WITHOUT_CLASSIFICATION	0.007268960068430159	DESIGN
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.99999564524649	WITHOUT_CLASSIFICATION	4.354753510024817E-6	DESIGN
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999991770600136	WITHOUT_CLASSIFICATION	8.229399865108266E-7	DESIGN
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999999065683611	WITHOUT_CLASSIFICATION	9.34316389184766E-8	DESIGN
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999803706019631	WITHOUT_CLASSIFICATION	1.9629398036940716E-5	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999475497722	WITHOUT_CLASSIFICATION	5.245022772112757E-8	DESIGN
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.8959378341198354	WITHOUT_CLASSIFICATION	0.10406216588016452	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999405774208251	WITHOUT_CLASSIFICATION	5.942257917493029E-5	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.997784179320146	WITHOUT_CLASSIFICATION	0.002215820679854046	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999991847283819	WITHOUT_CLASSIFICATION	8.152716181525748E-7	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999991847283819	WITHOUT_CLASSIFICATION	8.152716181525748E-7	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999991847283819	WITHOUT_CLASSIFICATION	8.152716181525748E-7	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999991847283819	WITHOUT_CLASSIFICATION	8.152716181525748E-7	DESIGN
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999989932824432	WITHOUT_CLASSIFICATION	1.0067175566612881E-6	DESIGN
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999992588459224	WITHOUT_CLASSIFICATION	7.411540776592945E-7	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999998086371686	WITHOUT_CLASSIFICATION	1.9136283133858312E-7	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999998086371686	WITHOUT_CLASSIFICATION	1.9136283133858312E-7	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.999998921975066	WITHOUT_CLASSIFICATION	1.0780249340000164E-6	DESIGN
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999405646684332	WITHOUT_CLASSIFICATION	5.9435331566741066E-5	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999967027211629	WITHOUT_CLASSIFICATION	3.297278837199576E-6	DESIGN
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999597609755382	WITHOUT_CLASSIFICATION	4.023902446174893E-5	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9998838805786322	WITHOUT_CLASSIFICATION	1.1611942136788388E-4	DESIGN
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999989189182751	WITHOUT_CLASSIFICATION	1.0810817249783608E-6	DESIGN
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999998715849355	WITHOUT_CLASSIFICATION	1.28415064507159E-7	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9997789306236515	WITHOUT_CLASSIFICATION	2.2106937634840378E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9997789306236515	WITHOUT_CLASSIFICATION	2.2106937634840378E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9997789306236515	WITHOUT_CLASSIFICATION	2.2106937634840378E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9997789306236515	WITHOUT_CLASSIFICATION	2.2106937634840378E-4	DESIGN
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999539796032813	WITHOUT_CLASSIFICATION	4.60203967187023E-5	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.998000355917504	WITHOUT_CLASSIFICATION	0.001999644082496019	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.998000355917504	WITHOUT_CLASSIFICATION	0.001999644082496019	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.998000355917504	WITHOUT_CLASSIFICATION	0.001999644082496019	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.999781502441487	WITHOUT_CLASSIFICATION	2.1849755851301416E-4	DESIGN
// finally with no exception	WITHOUT_CLASSIFICATION	0.9993959543333129	WITHOUT_CLASSIFICATION	6.040456666871844E-4	DESIGN
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999671437858755	WITHOUT_CLASSIFICATION	3.285621412458883E-5	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999903312673596	DESIGN	9.668732640489798E-6	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999903312673596	DESIGN	9.668732640489798E-6	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999015471059635	WITHOUT_CLASSIFICATION	9.845289403658742E-5	DESIGN
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9693646001435927	WITHOUT_CLASSIFICATION	0.030635399856407317	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9999777709880537	WITHOUT_CLASSIFICATION	2.2229011946214634E-5	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9999777709880537	WITHOUT_CLASSIFICATION	2.2229011946214634E-5	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9998799137981632	WITHOUT_CLASSIFICATION	1.2008620183684711E-4	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9998799137981632	WITHOUT_CLASSIFICATION	1.2008620183684711E-4	DESIGN
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999999996479663	WITHOUT_CLASSIFICATION	3.520336847040945E-10	DESIGN
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.999999197492779	WITHOUT_CLASSIFICATION	8.025072209980241E-7	DESIGN
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999931887481035	WITHOUT_CLASSIFICATION	6.81125189648638E-6	DESIGN
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.999999435817509	WITHOUT_CLASSIFICATION	5.641824908619364E-7	DESIGN
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999899357417297	WITHOUT_CLASSIFICATION	1.0064258270330099E-5	DESIGN
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999994760131504	WITHOUT_CLASSIFICATION	5.239868495858436E-7	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999987532565526	WITHOUT_CLASSIFICATION	1.2467434472892395E-6	DESIGN
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.8797007072411521	DESIGN	0.12029929275884786	WITHOUT_CLASSIFICATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.999850874293537	WITHOUT_CLASSIFICATION	1.491257064630077E-4	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999984287064301	WITHOUT_CLASSIFICATION	1.5712935699011636E-6	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999984287064301	WITHOUT_CLASSIFICATION	1.5712935699011636E-6	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999570053357433	WITHOUT_CLASSIFICATION	4.299466425670802E-5	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999570053357433	WITHOUT_CLASSIFICATION	4.299466425670802E-5	DESIGN
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999993730631656	WITHOUT_CLASSIFICATION	6.269368344457479E-7	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999982597481548	WITHOUT_CLASSIFICATION	1.7402518451831658E-6	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999611650814736	WITHOUT_CLASSIFICATION	3.883491852645637E-5	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999999559314298	WITHOUT_CLASSIFICATION	4.406857027155143E-8	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999999559314298	WITHOUT_CLASSIFICATION	4.406857027155143E-8	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999999559314298	WITHOUT_CLASSIFICATION	4.406857027155143E-8	DESIGN
// line 286	WITHOUT_CLASSIFICATION	0.9999994599390714	WITHOUT_CLASSIFICATION	5.400609286979643E-7	DESIGN
// line 476	WITHOUT_CLASSIFICATION	0.9999985992338642	WITHOUT_CLASSIFICATION	1.4007661357468106E-6	DESIGN
// line 513	WITHOUT_CLASSIFICATION	0.9999989351627392	WITHOUT_CLASSIFICATION	1.0648372607931634E-6	DESIGN
// line 530	WITHOUT_CLASSIFICATION	0.9999991547447268	WITHOUT_CLASSIFICATION	8.452552731380582E-7	DESIGN
// line 533	WITHOUT_CLASSIFICATION	0.9999984378781573	WITHOUT_CLASSIFICATION	1.5621218427233512E-6	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999985166297816	WITHOUT_CLASSIFICATION	1.4833702184295336E-6	DESIGN
// line 551	WITHOUT_CLASSIFICATION	0.9999989819605066	WITHOUT_CLASSIFICATION	1.018039493286156E-6	DESIGN
// end loop	WITHOUT_CLASSIFICATION	0.9999980304568103	WITHOUT_CLASSIFICATION	1.969543189707993E-6	DESIGN
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999991926802647	WITHOUT_CLASSIFICATION	8.073197353446475E-7	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999542921101723	WITHOUT_CLASSIFICATION	4.570788982772952E-5	DESIGN
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.8710485854945123	WITHOUT_CLASSIFICATION	0.12895141450548772	DESIGN
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999694636887201	WITHOUT_CLASSIFICATION	3.05363112799477E-5	DESIGN
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999998264960618	WITHOUT_CLASSIFICATION	1.735039382084684E-7	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999903312673596	DESIGN	9.668732640489798E-6	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9997119250727785	WITHOUT_CLASSIFICATION	2.88074927221487E-4	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9966470780902854	WITHOUT_CLASSIFICATION	0.0033529219097145056	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9716511619948273	DESIGN	0.028348838005172773	WITHOUT_CLASSIFICATION
/*value*/	WITHOUT_CLASSIFICATION	0.9998718452891269	WITHOUT_CLASSIFICATION	1.281547108731837E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998718452891269	WITHOUT_CLASSIFICATION	1.281547108731837E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998718452891269	WITHOUT_CLASSIFICATION	1.281547108731837E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998718452891269	WITHOUT_CLASSIFICATION	1.281547108731837E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998718452891269	WITHOUT_CLASSIFICATION	1.281547108731837E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998403320516266	WITHOUT_CLASSIFICATION	1.5966794837341455E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998718452891269	WITHOUT_CLASSIFICATION	1.281547108731837E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998718452891269	WITHOUT_CLASSIFICATION	1.281547108731837E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998718452891269	WITHOUT_CLASSIFICATION	1.281547108731837E-4	DESIGN
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999881709881143	WITHOUT_CLASSIFICATION	1.1829011885586419E-5	DESIGN
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9617111738685469	WITHOUT_CLASSIFICATION	0.03828882613145322	DESIGN
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999999998719628	WITHOUT_CLASSIFICATION	1.2803725171172822E-10	DESIGN
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.6029343616688378	WITHOUT_CLASSIFICATION	0.39706563833116204	DESIGN
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999937639068284	WITHOUT_CLASSIFICATION	6.23609317165854E-6	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9998594864366903	WITHOUT_CLASSIFICATION	1.4051356330964913E-4	DESIGN
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999458949856208	WITHOUT_CLASSIFICATION	5.410501437923182E-5	DESIGN
// line 572	WITHOUT_CLASSIFICATION	0.9999991120853479	WITHOUT_CLASSIFICATION	8.879146520261232E-7	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999993807335259	WITHOUT_CLASSIFICATION	6.19266474150322E-7	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999993807335259	WITHOUT_CLASSIFICATION	6.19266474150322E-7	DESIGN
// line 625	WITHOUT_CLASSIFICATION	0.9999993578930311	WITHOUT_CLASSIFICATION	6.421069688514981E-7	DESIGN
// line 649	WITHOUT_CLASSIFICATION	0.9999987409941942	WITHOUT_CLASSIFICATION	1.2590058057751162E-6	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999990794451246	WITHOUT_CLASSIFICATION	9.205548753721535E-7	DESIGN
// line 723	WITHOUT_CLASSIFICATION	0.9999991745747319	WITHOUT_CLASSIFICATION	8.254252682635641E-7	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999991834548739	WITHOUT_CLASSIFICATION	8.165451260014623E-7	DESIGN
// line 745	WITHOUT_CLASSIFICATION	0.9999989240075878	WITHOUT_CLASSIFICATION	1.0759924121793465E-6	DESIGN
// line 766	WITHOUT_CLASSIFICATION	0.9999983653245331	WITHOUT_CLASSIFICATION	1.6346754669068038E-6	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.999998966103546	WITHOUT_CLASSIFICATION	1.033896454098934E-6	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999985144915566	WITHOUT_CLASSIFICATION	1.4855084434055696E-6	DESIGN
// line 800	WITHOUT_CLASSIFICATION	0.9999993077286558	WITHOUT_CLASSIFICATION	6.922713442907286E-7	DESIGN
// line 812	WITHOUT_CLASSIFICATION	0.999999515912429	WITHOUT_CLASSIFICATION	4.840875710001467E-7	DESIGN
// line 827	WITHOUT_CLASSIFICATION	0.9999993766334205	WITHOUT_CLASSIFICATION	6.233665795091634E-7	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999987751093952	WITHOUT_CLASSIFICATION	1.224890604753302E-6	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999991313194728	WITHOUT_CLASSIFICATION	8.686805272126353E-7	DESIGN
// line 864	WITHOUT_CLASSIFICATION	0.9999989385667873	WITHOUT_CLASSIFICATION	1.061433212687188E-6	DESIGN
// line 886	WITHOUT_CLASSIFICATION	0.9999986343112888	WITHOUT_CLASSIFICATION	1.3656887112770102E-6	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999985876559687	WITHOUT_CLASSIFICATION	1.4123440312436426E-6	DESIGN
// line 911	WITHOUT_CLASSIFICATION	0.9999990976475268	WITHOUT_CLASSIFICATION	9.023524731755986E-7	DESIGN
// line 929	WITHOUT_CLASSIFICATION	0.9999991485153146	WITHOUT_CLASSIFICATION	8.514846854838433E-7	DESIGN
// line 952	WITHOUT_CLASSIFICATION	0.9999992187851253	WITHOUT_CLASSIFICATION	7.812148746986808E-7	DESIGN
// line 970	WITHOUT_CLASSIFICATION	0.9999991888099216	WITHOUT_CLASSIFICATION	8.111900783612648E-7	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999991804860578	WITHOUT_CLASSIFICATION	8.195139422015893E-7	DESIGN
// line 991	WITHOUT_CLASSIFICATION	0.9999990344961576	WITHOUT_CLASSIFICATION	9.65503842528339E-7	DESIGN
// line 1011	WITHOUT_CLASSIFICATION	0.9999995016281232	WITHOUT_CLASSIFICATION	4.98371876656335E-7	DESIGN
// line 1026	WITHOUT_CLASSIFICATION	0.9999996394697949	WITHOUT_CLASSIFICATION	3.6053020511645773E-7	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999995445370198	WITHOUT_CLASSIFICATION	4.5546298023704676E-7	DESIGN
// line 1067	WITHOUT_CLASSIFICATION	0.9999993947773331	WITHOUT_CLASSIFICATION	6.052226669155695E-7	DESIGN
// line 1085	WITHOUT_CLASSIFICATION	0.9999996136805718	WITHOUT_CLASSIFICATION	3.863194282136017E-7	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999994539300685	WITHOUT_CLASSIFICATION	5.460699315297883E-7	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9999995679078771	WITHOUT_CLASSIFICATION	4.320921227738123E-7	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999995355941973	WITHOUT_CLASSIFICATION	4.6440580275755893E-7	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999991675247988	WITHOUT_CLASSIFICATION	8.324752011132626E-7	DESIGN
// line 1145	WITHOUT_CLASSIFICATION	0.9999994106449617	WITHOUT_CLASSIFICATION	5.893550384098502E-7	DESIGN
// line 1169	WITHOUT_CLASSIFICATION	0.9999992149423516	WITHOUT_CLASSIFICATION	7.850576484983617E-7	DESIGN
// line 1201	WITHOUT_CLASSIFICATION	0.999999653566896	WITHOUT_CLASSIFICATION	3.464331039307714E-7	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9999997268493767	WITHOUT_CLASSIFICATION	2.731506233731485E-7	DESIGN
// line 1229	WITHOUT_CLASSIFICATION	0.9999995068642556	WITHOUT_CLASSIFICATION	4.931357444106192E-7	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9999995123731602	WITHOUT_CLASSIFICATION	4.87626839779513E-7	DESIGN
// line 1287	WITHOUT_CLASSIFICATION	0.9999995493716145	WITHOUT_CLASSIFICATION	4.506283854048923E-7	DESIGN
// line 1293	WITHOUT_CLASSIFICATION	0.9999994628913147	WITHOUT_CLASSIFICATION	5.3710868521269E-7	DESIGN
// line 1307	WITHOUT_CLASSIFICATION	0.9999994010195024	WITHOUT_CLASSIFICATION	5.989804976094531E-7	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999997197911813	WITHOUT_CLASSIFICATION	2.802088187539516E-7	DESIGN
// line 1325	WITHOUT_CLASSIFICATION	0.9999995729881767	WITHOUT_CLASSIFICATION	4.2701182338590234E-7	DESIGN
// line 1363	WITHOUT_CLASSIFICATION	0.9999991646689046	WITHOUT_CLASSIFICATION	8.353310954846698E-7	DESIGN
// line 1398	WITHOUT_CLASSIFICATION	0.9999992199731945	WITHOUT_CLASSIFICATION	7.800268055821755E-7	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9999993486454511	WITHOUT_CLASSIFICATION	6.513545488951601E-7	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9999992101631185	WITHOUT_CLASSIFICATION	7.898368815458755E-7	DESIGN
// line 1473	WITHOUT_CLASSIFICATION	0.9999992312706143	WITHOUT_CLASSIFICATION	7.687293857902492E-7	DESIGN
// line 1492	WITHOUT_CLASSIFICATION	0.999999528923726	WITHOUT_CLASSIFICATION	4.7107627401479453E-7	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999992085370164	WITHOUT_CLASSIFICATION	7.914629835612775E-7	DESIGN
// line 1523	WITHOUT_CLASSIFICATION	0.9999995133170072	WITHOUT_CLASSIFICATION	4.866829927450189E-7	DESIGN
// line 1562	WITHOUT_CLASSIFICATION	0.9999995659881235	WITHOUT_CLASSIFICATION	4.340118765875596E-7	DESIGN
// line 1582	WITHOUT_CLASSIFICATION	0.9999996096599508	WITHOUT_CLASSIFICATION	3.9034004919111626E-7	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9999994076489682	WITHOUT_CLASSIFICATION	5.923510317279071E-7	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9999994076489682	WITHOUT_CLASSIFICATION	5.923510317279071E-7	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999993111328721	WITHOUT_CLASSIFICATION	6.888671277686866E-7	DESIGN
// line 1620	WITHOUT_CLASSIFICATION	0.999999748181331	WITHOUT_CLASSIFICATION	2.5181866900509536E-7	DESIGN
// line 1635	WITHOUT_CLASSIFICATION	0.9999993279534299	WITHOUT_CLASSIFICATION	6.720465699167164E-7	DESIGN
// line 1652	WITHOUT_CLASSIFICATION	0.9999995644106072	WITHOUT_CLASSIFICATION	4.35589392735532E-7	DESIGN
// line 1681	WITHOUT_CLASSIFICATION	0.999999317284319	WITHOUT_CLASSIFICATION	6.827156809020532E-7	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999994332187342	WITHOUT_CLASSIFICATION	5.667812658311151E-7	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9999989054358877	WITHOUT_CLASSIFICATION	1.0945641124145986E-6	DESIGN
// line 1755	WITHOUT_CLASSIFICATION	0.9999991844878922	WITHOUT_CLASSIFICATION	8.15512107772445E-7	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999994268695105	WITHOUT_CLASSIFICATION	5.731304895780973E-7	DESIGN
// line 1789	WITHOUT_CLASSIFICATION	0.9999991141282052	WITHOUT_CLASSIFICATION	8.858717947665292E-7	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999960336721736	WITHOUT_CLASSIFICATION	3.966327826347193E-6	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999960336721736	WITHOUT_CLASSIFICATION	3.966327826347193E-6	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999896178865414	WITHOUT_CLASSIFICATION	1.0382113458553503E-5	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999839504557207	WITHOUT_CLASSIFICATION	1.6049544279272766E-5	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9998921054903546	WITHOUT_CLASSIFICATION	1.0789450964543202E-4	DESIGN
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.999999994218606	WITHOUT_CLASSIFICATION	5.781394051433222E-9	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999828458626068	WITHOUT_CLASSIFICATION	1.7154137393211803E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999828458626068	WITHOUT_CLASSIFICATION	1.7154137393211803E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999828458626068	WITHOUT_CLASSIFICATION	1.7154137393211803E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999828458626068	WITHOUT_CLASSIFICATION	1.7154137393211803E-5	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9591071360601918	DESIGN	0.04089286393980828	WITHOUT_CLASSIFICATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.858885307980087	WITHOUT_CLASSIFICATION	0.14111469201991303	DESIGN
// line 313	WITHOUT_CLASSIFICATION	0.9999988946985214	WITHOUT_CLASSIFICATION	1.1053014785417262E-6	DESIGN
// line 339	WITHOUT_CLASSIFICATION	0.9999982674676932	WITHOUT_CLASSIFICATION	1.7325323067854715E-6	DESIGN
// line 361	WITHOUT_CLASSIFICATION	0.999999036412427	WITHOUT_CLASSIFICATION	9.635875729270814E-7	DESIGN
// line 413	WITHOUT_CLASSIFICATION	0.9999991653612618	WITHOUT_CLASSIFICATION	8.34638738210468E-7	DESIGN
// line 451	WITHOUT_CLASSIFICATION	0.999999308772273	WITHOUT_CLASSIFICATION	6.912277270333904E-7	DESIGN
// line 472	WITHOUT_CLASSIFICATION	0.9999993119078424	WITHOUT_CLASSIFICATION	6.880921574927164E-7	DESIGN
// line 500	WITHOUT_CLASSIFICATION	0.9999991350076137	WITHOUT_CLASSIFICATION	8.649923863353888E-7	DESIGN
// line 515	WITHOUT_CLASSIFICATION	0.9999990225962022	WITHOUT_CLASSIFICATION	9.774037977728226E-7	DESIGN
// line 555	WITHOUT_CLASSIFICATION	0.9999984766743756	WITHOUT_CLASSIFICATION	1.5233256244384605E-6	DESIGN
// line 582	WITHOUT_CLASSIFICATION	0.9999992129575145	WITHOUT_CLASSIFICATION	7.87042485561627E-7	DESIGN
// line 619	WITHOUT_CLASSIFICATION	0.9999990578656064	WITHOUT_CLASSIFICATION	9.421343936480702E-7	DESIGN
// line 636	WITHOUT_CLASSIFICATION	0.9999984287861701	WITHOUT_CLASSIFICATION	1.5712138299047485E-6	DESIGN
// line 669	WITHOUT_CLASSIFICATION	0.9999985486382303	WITHOUT_CLASSIFICATION	1.4513617696661096E-6	DESIGN
// line 703	WITHOUT_CLASSIFICATION	0.9999989701273846	WITHOUT_CLASSIFICATION	1.0298726154387042E-6	DESIGN
// line 776	WITHOUT_CLASSIFICATION	0.9999982942754602	WITHOUT_CLASSIFICATION	1.7057245398595663E-6	DESIGN
// line 814	WITHOUT_CLASSIFICATION	0.9999992425386065	WITHOUT_CLASSIFICATION	7.574613935258791E-7	DESIGN
// line 823	WITHOUT_CLASSIFICATION	0.999999310803561	WITHOUT_CLASSIFICATION	6.89196438987479E-7	DESIGN
// line 854	WITHOUT_CLASSIFICATION	0.9999989697686975	WITHOUT_CLASSIFICATION	1.0302313025497853E-6	DESIGN
// line 872	WITHOUT_CLASSIFICATION	0.9999993622345903	WITHOUT_CLASSIFICATION	6.377654097469311E-7	DESIGN
// line 905	WITHOUT_CLASSIFICATION	0.9999990169588028	WITHOUT_CLASSIFICATION	9.830411973165523E-7	DESIGN
// line 925	WITHOUT_CLASSIFICATION	0.9999992775289415	WITHOUT_CLASSIFICATION	7.22471058557762E-7	DESIGN
// line 958	WITHOUT_CLASSIFICATION	0.9999988666383226	WITHOUT_CLASSIFICATION	1.1333616774366826E-6	DESIGN
// line 992	WITHOUT_CLASSIFICATION	0.9999991228301197	WITHOUT_CLASSIFICATION	8.771698801403534E-7	DESIGN
// line 1047	WITHOUT_CLASSIFICATION	0.9999994786004517	WITHOUT_CLASSIFICATION	5.213995483546063E-7	DESIGN
// line 1072	WITHOUT_CLASSIFICATION	0.9999996895149895	WITHOUT_CLASSIFICATION	3.1048501052362844E-7	DESIGN
// line 1081	WITHOUT_CLASSIFICATION	0.9999995327299731	WITHOUT_CLASSIFICATION	4.672700269240375E-7	DESIGN
// line 1108	WITHOUT_CLASSIFICATION	0.9999995574904915	WITHOUT_CLASSIFICATION	4.4250950848495063E-7	DESIGN
// line 1136	WITHOUT_CLASSIFICATION	0.9999991022821052	WITHOUT_CLASSIFICATION	8.97717894737405E-7	DESIGN
// line 1168	WITHOUT_CLASSIFICATION	0.9999993717619742	WITHOUT_CLASSIFICATION	6.282380257917681E-7	DESIGN
// line 1192	WITHOUT_CLASSIFICATION	0.9999995098648687	WITHOUT_CLASSIFICATION	4.901351312494625E-7	DESIGN
// line 1241	WITHOUT_CLASSIFICATION	0.9999995193491386	WITHOUT_CLASSIFICATION	4.806508614275195E-7	DESIGN
// line 1267	WITHOUT_CLASSIFICATION	0.9999994969254213	WITHOUT_CLASSIFICATION	5.030745787212204E-7	DESIGN
// line 1286	WITHOUT_CLASSIFICATION	0.9999994692479506	WITHOUT_CLASSIFICATION	5.307520494758771E-7	DESIGN
// line 1301	WITHOUT_CLASSIFICATION	0.9999994223836691	WITHOUT_CLASSIFICATION	5.776163309946841E-7	DESIGN
// line 1314	WITHOUT_CLASSIFICATION	0.9999992021425081	WITHOUT_CLASSIFICATION	7.978574919388382E-7	DESIGN
// line 1333	WITHOUT_CLASSIFICATION	0.9999990913563871	WITHOUT_CLASSIFICATION	9.086436128950182E-7	DESIGN
// line 1362	WITHOUT_CLASSIFICATION	0.9999995534525884	WITHOUT_CLASSIFICATION	4.465474116492851E-7	DESIGN
// line 1395	WITHOUT_CLASSIFICATION	0.9999992382582388	WITHOUT_CLASSIFICATION	7.617417612880079E-7	DESIGN
// line 1420	WITHOUT_CLASSIFICATION	0.9999997480992312	WITHOUT_CLASSIFICATION	2.519007687979568E-7	DESIGN
// line 1439	WITHOUT_CLASSIFICATION	0.9999992009117841	WITHOUT_CLASSIFICATION	7.990882159248154E-7	DESIGN
// line 1476	WITHOUT_CLASSIFICATION	0.9999991248506487	WITHOUT_CLASSIFICATION	8.751493514414482E-7	DESIGN
// line 1535	WITHOUT_CLASSIFICATION	0.9999992950642844	WITHOUT_CLASSIFICATION	7.049357154843961E-7	DESIGN
// line 1588	WITHOUT_CLASSIFICATION	0.9999993088180466	WITHOUT_CLASSIFICATION	6.911819534379681E-7	DESIGN
// line 1618	WITHOUT_CLASSIFICATION	0.9999993642452921	WITHOUT_CLASSIFICATION	6.357547078816444E-7	DESIGN
// line 1643	WITHOUT_CLASSIFICATION	0.9999993673217343	WITHOUT_CLASSIFICATION	6.326782657304125E-7	DESIGN
// line 1669	WITHOUT_CLASSIFICATION	0.9999991378263223	WITHOUT_CLASSIFICATION	8.621736776278996E-7	DESIGN
// line 1728	WITHOUT_CLASSIFICATION	0.9999995444643811	WITHOUT_CLASSIFICATION	4.5553561891793464E-7	DESIGN
// line 1753	WITHOUT_CLASSIFICATION	0.9999991454020968	WITHOUT_CLASSIFICATION	8.545979031935785E-7	DESIGN
// line 1779	WITHOUT_CLASSIFICATION	0.9999988553600877	WITHOUT_CLASSIFICATION	1.1446399121980653E-6	DESIGN
// line 1794	WITHOUT_CLASSIFICATION	0.9999990030798573	WITHOUT_CLASSIFICATION	9.969201426967656E-7	DESIGN
// line 1812	WITHOUT_CLASSIFICATION	0.9999995912742922	WITHOUT_CLASSIFICATION	4.087257077840235E-7	DESIGN
// line 1837	WITHOUT_CLASSIFICATION	0.9999993774242002	WITHOUT_CLASSIFICATION	6.225757997304582E-7	DESIGN
// line 1895	WITHOUT_CLASSIFICATION	0.9999994387690498	WITHOUT_CLASSIFICATION	5.612309501419599E-7	DESIGN
// line 1925	WITHOUT_CLASSIFICATION	0.9999995619353413	WITHOUT_CLASSIFICATION	4.3806465864330797E-7	DESIGN
// line 1950	WITHOUT_CLASSIFICATION	0.9999995632718064	WITHOUT_CLASSIFICATION	4.3672819368804886E-7	DESIGN
// line 1992	WITHOUT_CLASSIFICATION	0.9999994679004974	WITHOUT_CLASSIFICATION	5.320995025679368E-7	DESIGN
// line 2014	WITHOUT_CLASSIFICATION	0.9999997460450704	WITHOUT_CLASSIFICATION	2.539549295939275E-7	DESIGN
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9874600284756389	WITHOUT_CLASSIFICATION	0.01253997152436104	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999875008330618	WITHOUT_CLASSIFICATION	1.2499166938271695E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9924577895779476	WITHOUT_CLASSIFICATION	0.0075422104220523555	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9924577895779476	WITHOUT_CLASSIFICATION	0.0075422104220523555	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9924577895779476	WITHOUT_CLASSIFICATION	0.0075422104220523555	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9924577895779476	WITHOUT_CLASSIFICATION	0.0075422104220523555	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9924577895779476	WITHOUT_CLASSIFICATION	0.0075422104220523555	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9924577895779476	WITHOUT_CLASSIFICATION	0.0075422104220523555	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9924577895779476	WITHOUT_CLASSIFICATION	0.0075422104220523555	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999999595677951	WITHOUT_CLASSIFICATION	4.043220489478351E-7	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999999595677951	WITHOUT_CLASSIFICATION	4.043220489478351E-7	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999999595677951	WITHOUT_CLASSIFICATION	4.043220489478351E-7	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999999595677951	WITHOUT_CLASSIFICATION	4.043220489478351E-7	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9879400190193945	WITHOUT_CLASSIFICATION	0.012059980980605359	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9879400190193945	WITHOUT_CLASSIFICATION	0.012059980980605359	DESIGN
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999999897322168	WITHOUT_CLASSIFICATION	1.0267783160562168E-8	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999997756653285	WITHOUT_CLASSIFICATION	2.2433467152506223E-7	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999997756653285	WITHOUT_CLASSIFICATION	2.2433467152506223E-7	DESIGN
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9965814669594257	WITHOUT_CLASSIFICATION	0.0034185330405741535	DESIGN
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999819744355859	WITHOUT_CLASSIFICATION	1.8025564414181128E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999966029153982	WITHOUT_CLASSIFICATION	3.3970846018587817E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999966029153982	WITHOUT_CLASSIFICATION	3.3970846018587817E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999966029153982	WITHOUT_CLASSIFICATION	3.3970846018587817E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999966029153982	WITHOUT_CLASSIFICATION	3.3970846018587817E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999966029153982	WITHOUT_CLASSIFICATION	3.3970846018587817E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999966029153982	WITHOUT_CLASSIFICATION	3.3970846018587817E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999966029153982	WITHOUT_CLASSIFICATION	3.3970846018587817E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999969891777832	WITHOUT_CLASSIFICATION	3.0108222167945717E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999923137860481	WITHOUT_CLASSIFICATION	7.686213951799408E-6	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999998512204812	WITHOUT_CLASSIFICATION	1.4877951890602528E-7	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999998512204812	WITHOUT_CLASSIFICATION	1.4877951890602528E-7	DESIGN
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999418940254641	WITHOUT_CLASSIFICATION	5.810597453590906E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998666050291513	WITHOUT_CLASSIFICATION	1.3339497084873688E-4	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998666050291513	WITHOUT_CLASSIFICATION	1.3339497084873688E-4	DESIGN
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999998947434714	WITHOUT_CLASSIFICATION	1.0525652856759542E-7	DESIGN
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999925564267925	DESIGN	7.443573207455369E-6	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9989083816681631	WITHOUT_CLASSIFICATION	0.0010916183318368429	DESIGN
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9997592038705616	WITHOUT_CLASSIFICATION	2.407961294383158E-4	DESIGN
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999484050792306	WITHOUT_CLASSIFICATION	5.159492076941533E-5	DESIGN
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999860562159842	WITHOUT_CLASSIFICATION	1.3943784015648917E-5	DESIGN
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999983649829512	WITHOUT_CLASSIFICATION	1.6350170487782005E-6	DESIGN
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999999944188557	WITHOUT_CLASSIFICATION	5.581144399139991E-9	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9994239597251954	WITHOUT_CLASSIFICATION	5.76040274804687E-4	DESIGN
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999973825065084	WITHOUT_CLASSIFICATION	2.6174934915508333E-6	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9955851497974862	WITHOUT_CLASSIFICATION	0.004414850202513794	DESIGN
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999998863543911	WITHOUT_CLASSIFICATION	1.1364560890484475E-7	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999989867028309	WITHOUT_CLASSIFICATION	1.0132971690774475E-6	DESIGN
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9931883050745114	WITHOUT_CLASSIFICATION	0.006811694925488592	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999999695709116	WITHOUT_CLASSIFICATION	3.042908835939957E-8	DESIGN
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999978944635711	WITHOUT_CLASSIFICATION	2.105536428882948E-6	DESIGN
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999974185342705	WITHOUT_CLASSIFICATION	2.5814657295572857E-6	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999961165007868	WITHOUT_CLASSIFICATION	3.883499213200326E-6	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9990955019240371	WITHOUT_CLASSIFICATION	9.044980759628867E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9990955019240371	WITHOUT_CLASSIFICATION	9.044980759628867E-4	DESIGN
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999925117771847	WITHOUT_CLASSIFICATION	7.4882228152650646E-6	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999921599282	WITHOUT_CLASSIFICATION	7.840071814891313E-9	DESIGN
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999519841952	WITHOUT_CLASSIFICATION	4.801580482793588E-8	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9994968601757434	WITHOUT_CLASSIFICATION	5.031398242566288E-4	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999952462546083	WITHOUT_CLASSIFICATION	4.753745391692191E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999952462546083	WITHOUT_CLASSIFICATION	4.753745391692191E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999952462546083	WITHOUT_CLASSIFICATION	4.753745391692191E-5	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9994753018686763	WITHOUT_CLASSIFICATION	5.246981313236169E-4	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999852363730062	WITHOUT_CLASSIFICATION	1.4763626993834745E-5	DESIGN
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999839049513284	WITHOUT_CLASSIFICATION	1.6095048671579056E-5	DESIGN
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999987151144378	WITHOUT_CLASSIFICATION	1.284885562197946E-6	DESIGN
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9910384742373735	WITHOUT_CLASSIFICATION	0.00896152576262659	DESIGN
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999999656763124	WITHOUT_CLASSIFICATION	3.432368758314099E-8	DESIGN
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999999984437776	WITHOUT_CLASSIFICATION	1.5562223935502955E-9	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999846628301362	WITHOUT_CLASSIFICATION	1.533716986373493E-5	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999994444956403	WITHOUT_CLASSIFICATION	5.555043597081416E-7	DESIGN
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999998211929376	WITHOUT_CLASSIFICATION	1.7880706242164213E-7	DESIGN
// reset buffer	WITHOUT_CLASSIFICATION	0.9999790263699582	WITHOUT_CLASSIFICATION	2.0973630041837015E-5	DESIGN
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9998614751663304	WITHOUT_CLASSIFICATION	1.385248336696475E-4	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9984871470948135	DESIGN	0.001512852905186533	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.97239477941453	WITHOUT_CLASSIFICATION	0.02760522058546991	DESIGN
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999989109337825	WITHOUT_CLASSIFICATION	1.0890662174781042E-6	DESIGN
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999999990340088	WITHOUT_CLASSIFICATION	9.659912386417089E-10	DESIGN
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999963236119949	WITHOUT_CLASSIFICATION	3.676388005255979E-6	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999999801733884	WITHOUT_CLASSIFICATION	1.9826611504330224E-8	DESIGN
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999999967137384	WITHOUT_CLASSIFICATION	3.2862616896840307E-9	DESIGN
// Fixme: Do we need the check or does Main.java not call this...they should consolidate 	DESIGN	0.5378150089435484	DESIGN	0.4621849910564517	WITHOUT_CLASSIFICATION
// FIXME: move out of this class!	DESIGN	0.9997962963009684	DESIGN	2.0370369903149053E-4	WITHOUT_CLASSIFICATION
// this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI // we search all keys for a case-insensitive match, and use that	DESIGN	0.9995457785052897	DESIGN	4.542214947103536E-4	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9999250748456947	DESIGN	7.492515430525822E-5	WITHOUT_CLASSIFICATION
// FIXME: Don't allow multiple threads to do this at once	DESIGN	0.9991230270878362	DESIGN	8.76972912163751E-4	WITHOUT_CLASSIFICATION
// TODO: eliminate?	DESIGN	0.9997431429033584	DESIGN	2.568570966415163E-4	WITHOUT_CLASSIFICATION
// TODO: People extending GzipWriter/reader will break.  Find better way here.	DESIGN	0.9999997033638734	DESIGN	2.9663612649458843E-7	WITHOUT_CLASSIFICATION
// For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.8530901928293133	WITHOUT_CLASSIFICATION	0.1469098071706866	DESIGN
// we might need to perform a DST correction	DESIGN	0.9998751234728375	WITHOUT_CLASSIFICATION	1.2487652716254837E-4	DESIGN
// rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9998013856975709	WITHOUT_CLASSIFICATION	1.9861430242911217E-4	DESIGN
/** rb_ary_push_m     * FIXME: Whis is this named "push_m"?     */	DESIGN	0.999993656918908	DESIGN	6.343081092058108E-6	WITHOUT_CLASSIFICATION
// from DUP_SETUP // rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9996798826331947	WITHOUT_CLASSIFICATION	3.2011736680523557E-4	DESIGN
//TODO: ary_sort_check should be done here	DESIGN	0.9999990797173528	DESIGN	9.202826472388874E-7	WITHOUT_CLASSIFICATION
//TODO: ary_sort_check should be done here	DESIGN	0.9999990797173528	DESIGN	9.202826472388874E-7	WITHOUT_CLASSIFICATION
// TODO: is this correct ?	DESIGN	0.9999948577932617	DESIGN	5.142206738230032E-6	WITHOUT_CLASSIFICATION
// TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.9999982863565087	DESIGN	1.713643491386676E-6	WITHOUT_CLASSIFICATION
// TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. // How can we support this operation?	DESIGN	0.9999999627951324	DESIGN	3.7204867682322244E-8	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9999495011351228	DESIGN	5.0498864877114184E-5	WITHOUT_CLASSIFICATION
// FIXME: This table will get moved into POSIX library so we can get all actual supported // signals.  This is a quick fix to support basic signals until that happens.	DESIGN	0.9999966375248597	DESIGN	3.362475140241034E-6	WITHOUT_CLASSIFICATION
// The implementations of these are all bonus (see TODO above)  I was going // to throw an error from these, but it appears to be the wrong place to // do it.	DESIGN	0.9214097959670109	DESIGN	0.07859020403298904	WITHOUT_CLASSIFICATION
// TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.9999997892512135	DESIGN	2.1074878651345993E-7	WITHOUT_CLASSIFICATION
// TODO: remove	DESIGN	0.9993768303995344	DESIGN	6.23169600465541E-4	WITHOUT_CLASSIFICATION
// FIXME moved this here to get what's obviously a utility method out of IRubyObject. // perhaps security methods should find their own centralized home at some point.	DESIGN	0.999996419999152	DESIGN	3.5800008480553965E-6	WITHOUT_CLASSIFICATION
// FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.605910572849542	WITHOUT_CLASSIFICATION	0.394089427150458	DESIGN
// TODO: Should frozen error have its own distinct class?  If not should more share?	DESIGN	0.9999999274369772	DESIGN	7.256302284811653E-8	WITHOUT_CLASSIFICATION
// TODO: this is kinda gross	DESIGN	0.999981956468946	DESIGN	1.8043531053996882E-5	WITHOUT_CLASSIFICATION
// Not sure how well this works, but it works much better than // just currentTimeMillis by itself.	DESIGN	0.9184813475736774	DESIGN	0.08151865242632261	WITHOUT_CLASSIFICATION
// TODO: exec should replace the current process. // This could be possible with JNA. 	DESIGN	0.9999753828399633	DESIGN	2.4617160036665328E-5	WITHOUT_CLASSIFICATION
// FIXME: In order for Thread to play well with the standard 'new' behavior, // it must provide an allocator that can create empty object instances which // initialize then fills with appropriate data.	DESIGN	0.8949274027287107	WITHOUT_CLASSIFICATION	0.10507259727128924	DESIGN
// TODO: not sure that we should skip calling join() altogether. // Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.999999642777457	DESIGN	3.5722254293770325E-7	WITHOUT_CLASSIFICATION
// FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.9996780730278687	DESIGN	3.219269721312136E-4	WITHOUT_CLASSIFICATION
// FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.9999999846785304	DESIGN	1.532146964382074E-8	WITHOUT_CLASSIFICATION
// TODO: no java stringity	DESIGN	0.9998137940741612	DESIGN	1.862059258389088E-4	WITHOUT_CLASSIFICATION
// need to reexamine this	DESIGN	0.9928606185688009	WITHOUT_CLASSIFICATION	0.007139381431199144	DESIGN
// TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.9999597528988604	DESIGN	4.024710113955611E-5	WITHOUT_CLASSIFICATION
// TODO: why are we duplicating the constants here, and then in // File::Constants below? File::Constants is included in IO.	DESIGN	0.9924538008257895	DESIGN	0.007546199174210532	WITHOUT_CLASSIFICATION
// TODO: this method is not present in MRI!	DESIGN	0.9999971461741073	DESIGN	2.8538258927663954E-6	WITHOUT_CLASSIFICATION
// TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.9996308898902254	DESIGN	3.691101097745372E-4	WITHOUT_CLASSIFICATION
// Something wrong we don't know the cwd... // TODO: Is this behavior really desirable? /mov	DESIGN	0.9999963861816988	DESIGN	3.613818301088149E-6	WITHOUT_CLASSIFICATION
/*     * Fixme:  This does not have exact same semantics as RubyArray.join, but they     * probably could be consolidated (perhaps as join(args[], sep, doChomp)).     */	DESIGN	0.9988926062641739	DESIGN	0.0011073937358260528	WITHOUT_CLASSIFICATION
// TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.9999999939704419	DESIGN	6.029558008647082E-9	WITHOUT_CLASSIFICATION
// TODO: Implement tty? and isatty.  We have no real capability to // determine this from java, but if we could set tty status, then // we could invoke jruby differently to allow stdin to return true // on this.  This would allow things like cgi.rb to work properly.	DESIGN	0.9999999998649054	DESIGN	1.350946500805309E-10	WITHOUT_CLASSIFICATION
// TODO: better error handling	DESIGN	0.9999685124609546	DESIGN	3.1487539045359095E-5	WITHOUT_CLASSIFICATION
// this seems unlikely to happen unless it's a totally bogus fileno // ...so do we even need to bother trying to create one?	DESIGN	0.5719441966463191	DESIGN	0.42805580335368093	WITHOUT_CLASSIFICATION
// IN FACT, we should probably raise an error, yes?	DESIGN	0.9891166095082734	DESIGN	0.010883390491726642	WITHOUT_CLASSIFICATION
// TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.9978681149226223	DESIGN	0.0021318850773777353	WITHOUT_CLASSIFICATION
// FIXME we should probably still be dyncalling 'write' here	DESIGN	0.9999940754611139	DESIGN	5.924538886084424E-6	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9999999943146575	DESIGN	5.685342499485917E-9	WITHOUT_CLASSIFICATION
// FIXME: I don't like the null checks here	DESIGN	0.9811394086881354	WITHOUT_CLASSIFICATION	0.0188605913118645	DESIGN
// TODO: handle writing into original buffer better	DESIGN	0.9999896159713421	DESIGN	1.0384028657959265E-5	WITHOUT_CLASSIFICATION
// TODO: is this the right thing to do?	DESIGN	0.9999876178303916	DESIGN	1.238216960835449E-5	WITHOUT_CLASSIFICATION
// TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.9985919312388425	DESIGN	0.0014080687611575638	WITHOUT_CLASSIFICATION
// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.9999986317588083	DESIGN	1.3682411917444027E-6	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.999516081754676	DESIGN	4.839182453239368E-4	WITHOUT_CLASSIFICATION
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9999931231601333	DESIGN	6.876839866622732E-6	WITHOUT_CLASSIFICATION
// FIXME: Obvious issue that not all platforms can display all attributes.  Ugly hacks. // Using generic posix library makes pushing inspect behavior into specific system impls // rather painful.	DESIGN	0.9784889771024935	DESIGN	0.02151102289750643	WITHOUT_CLASSIFICATION
// Workaround for JRUBY-4149	DESIGN	0.9841091134037686	DESIGN	0.015890886596231404	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs // work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.9999998872774425	DESIGN	1.127225575354711E-7	WITHOUT_CLASSIFICATION
// FIXME: This is copied code from RubyArray.  Both RE, Struct, and Array should share one impl // This is also hacky since I construct ruby objects to access ruby arrays through aref instead // of something lower.	DESIGN	0.9999999999195661	DESIGN	8.043391693512383E-11	WITHOUT_CLASSIFICATION
// FIXME: We should not be regenerating this over and over	DESIGN	0.9999738588181096	DESIGN	2.6141181890334177E-5	WITHOUT_CLASSIFICATION
// FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.9999998847239697	DESIGN	1.1527603032053226E-7	WITHOUT_CLASSIFICATION
// TODO: Consider a better way of synchronizing 	DESIGN	0.9999934165283954	DESIGN	6.583471604713267E-6	WITHOUT_CLASSIFICATION
// FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.9999971708834432	DESIGN	2.829116556751815E-6	WITHOUT_CLASSIFICATION
// A cloned method now belongs to a new class.  Set it. // TODO: Make DynamicMethod immutable	DESIGN	0.7370059632726044	DESIGN	0.2629940367273955	WITHOUT_CLASSIFICATION
// FIXME: figure out why we get null sometimes	DESIGN	0.962902241616414	DESIGN	0.03709775838358593	WITHOUT_CLASSIFICATION
// FIXME: Can get optimized for IEqlNode	DESIGN	0.7489215429076673	WITHOUT_CLASSIFICATION	0.2510784570923326	DESIGN
/** rb_mod_remove_cvar     *     * FIXME: any good reason to have two identical methods? (same as remove_class_variable)     */	DESIGN	0.9975442367925412	DESIGN	0.0024557632074588428	WITHOUT_CLASSIFICATION
// FIXME: these descriptions should probably be moved out, // to Constantine project which deals with all platform-dependent constants.	DESIGN	0.9999999904974518	DESIGN	9.502548191758721E-9	WITHOUT_CLASSIFICATION
// TODO: what about n arg?	DESIGN	0.9999529470241175	DESIGN	4.705297588242894E-5	WITHOUT_CLASSIFICATION
// TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.999999787623127	DESIGN	2.1237687290254652E-7	WITHOUT_CLASSIFICATION
// regular division with some default precision // TODO: proper algorithm to set the precision	DESIGN	0.9628067743430632	DESIGN	0.03719322565693691	WITHOUT_CLASSIFICATION
// TODO: better algorithm to set precision needed	DESIGN	0.9980711244695407	DESIGN	0.001928875530459389	WITHOUT_CLASSIFICATION
// FIXME: what should these really be? Numeric?       assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.9999999827821655	DESIGN	1.721783451518528E-8	WITHOUT_CLASSIFICATION
// FIXME: what should this really be?       assert x instanceof RubyComplex;	DESIGN	0.9999999926847712	DESIGN	7.315228763074892E-9	WITHOUT_CLASSIFICATION
// FIXME: the code below is a copy of RubyIO.puts, // and we should avoid copy-paste.	DESIGN	0.9971716692532564	DESIGN	0.0028283307467437207	WITHOUT_CLASSIFICATION
// Yow...this is still ugly	DESIGN	0.8665028816107637	WITHOUT_CLASSIFICATION	0.13349711838923625	DESIGN
// end hack	DESIGN	0.9533041959872752	WITHOUT_CLASSIFICATION	0.04669580401272479	DESIGN
//TODO: Should next and return also catch here?	DESIGN	0.9999971046931804	DESIGN	2.8953068196313444E-6	WITHOUT_CLASSIFICATION
// TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.9999931713815456	DESIGN	6.8286184543309954E-6	WITHOUT_CLASSIFICATION
// TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.9998535272860248	DESIGN	1.4647271397511086E-4	WITHOUT_CLASSIFICATION
// FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.9979825564888188	DESIGN	0.002017443511181134	WITHOUT_CLASSIFICATION
// TODO: This is almost RubyModule#instance_methods on the metaClass.  Perhaps refactor.	DESIGN	0.9999712085633264	DESIGN	2.8791436673509383E-5	WITHOUT_CLASSIFICATION
// The following three methods must be defined fast, since they expect to modify the current frame // (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999999995247295	WITHOUT_CLASSIFICATION	4.75270476759492E-10	DESIGN
// FIXME: I think this chunk is equivalent to MRI id2name (and not our public method  // id2name).  Make into method if used more than once.  	DESIGN	0.9999968936190422	DESIGN	3.1063809578631044E-6	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9902974344873113	DESIGN	0.009702565512688605	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9902974344873113	DESIGN	0.009702565512688605	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9902974344873113	DESIGN	0.009702565512688605	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.9859356707159622	DESIGN	0.014064329284037705	WITHOUT_CLASSIFICATION
// TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.9999895615945975	DESIGN	1.0438405402528583E-5	WITHOUT_CLASSIFICATION
// TODO: wire into new exception handling mechanism	DESIGN	0.995037434169857	DESIGN	0.004962565830142948	WITHOUT_CLASSIFICATION
// FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name // never exist at the same time.	DESIGN	0.9729288873161273	DESIGN	0.02707111268387278	WITHOUT_CLASSIFICATION
// TODO: do above but not below for additional newline nodes	DESIGN	0.926776133986014	DESIGN	0.073223866013986	WITHOUT_CLASSIFICATION
// TODO: Figure out how this can happen and possibly remove	DESIGN	0.9962232117021027	DESIGN	0.0037767882978973415	WITHOUT_CLASSIFICATION
// TODO: At least ParserSupport.attrset passes argsNode as null.  ImplicitNil is wrong magic for  // setupArgs since it will IRubyObject[] { nil }.  So we need to figure out a nice fast // null pattern for setupArgs. // assert argsNode != null : "receiverNode is not null";	DESIGN	0.9749373797621056	DESIGN	0.025062620237894406	WITHOUT_CLASSIFICATION
// FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.9999848598999165	DESIGN	1.5140100083457175E-5	WITHOUT_CLASSIFICATION
// FIXME: I use a for block to implement END node because we need a proc which captures // its enclosing scope.   ForBlock now represents these node and should be renamed.	DESIGN	0.9914117436055294	DESIGN	0.008588256394470578	WITHOUT_CLASSIFICATION
// method has more than 500 lines; we'll need to split it // and therefore need to use a heap-based scope	DESIGN	0.9974765276530306	WITHOUT_CLASSIFICATION	0.0025234723469693262	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.9999979501558682	DESIGN	2.0498441317529783E-6	WITHOUT_CLASSIFICATION
// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.999999989124362	DESIGN	1.0875637941431306E-8	WITHOUT_CLASSIFICATION
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.9999979501558682	DESIGN	2.0498441317529783E-6	WITHOUT_CLASSIFICATION
// XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.7909180416637858	WITHOUT_CLASSIFICATION	0.2090819583362142	DESIGN
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.8443967925815046	DESIGN	0.15560320741849545	WITHOUT_CLASSIFICATION
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.8443967925815046	DESIGN	0.15560320741849545	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9998987405040339	DESIGN	1.0125949596601802E-4	WITHOUT_CLASSIFICATION
// TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9999999905686331	DESIGN	9.431366910145618E-9	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9998987405040339	DESIGN	1.0125949596601802E-4	WITHOUT_CLASSIFICATION
// arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; // FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.9999387233963369	DESIGN	6.127660366303692E-5	WITHOUT_CLASSIFICATION
// FIXME: This is temporary since the variable compilers assume we want // args already on stack for assignment. We just pop and continue with // 1.9 args logic.	DESIGN	0.9997263182811249	DESIGN	2.7368171887514063E-4	WITHOUT_CLASSIFICATION
// TODO: reads/writes from frame // TODO: information on scoping // TODO: visibility?	DESIGN	0.9999999918969101	DESIGN	8.103089850441534E-9	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.8499135632447168	DESIGN	0.15008643675528321	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.9998737772433912	DESIGN	1.2622275660867288E-4	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.9998737772433912	DESIGN	1.2622275660867288E-4	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9713512455693304	DESIGN	0.028648754430669582	WITHOUT_CLASSIFICATION
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9989277006400858	WITHOUT_CLASSIFICATION	0.0010722993599140613	DESIGN
// FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.9999988016648732	DESIGN	1.1983351268255522E-6	WITHOUT_CLASSIFICATION
// install invokedynamic bootstrapper // TODO need to abstract this setup behind another compiler interface	DESIGN	0.884414236294844	WITHOUT_CLASSIFICATION	0.11558576370515604	DESIGN
// FIXME: This isn't right for within ensured/rescued code	DESIGN	0.999981398245206	DESIGN	1.860175479396393E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Deprecated!  Going forward, all instructions should come from the CFG	DESIGN	0.9705365554840745	DESIGN	0.029463444515925533	WITHOUT_CLASSIFICATION
/* SSS FIXME: Do we need to check if l is same as whatever popped? */	DESIGN	0.9974260316014002	DESIGN	0.0025739683985998582	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.8864828142735083	DESIGN	0.1135171857264916	WITHOUT_CLASSIFICATION
// SSS FIXME: I added this in.  Is this correct?	DESIGN	0.9979873505125252	DESIGN	0.0020126494874748084	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.8864828142735083	DESIGN	0.1135171857264916	WITHOUT_CLASSIFICATION
// SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes!  i.e. |*(a,b)|?	DESIGN	0.5675340737717887	DESIGN	0.4324659262282114	WITHOUT_CLASSIFICATION
// SSS FIXME: Can this return anything other than nil?	DESIGN	0.998664429377147	DESIGN	0.001335570622853138	WITHOUT_CLASSIFICATION
// SSS FIXME: What happens to the add class in this case??	DESIGN	0.9999638150062709	DESIGN	3.61849937292231E-5	WITHOUT_CLASSIFICATION
// CON FIXME: I don't know how to make case be an expression...does that // logic need to go here?	DESIGN	0.9946626132589867	DESIGN	0.005337386741013273	WITHOUT_CLASSIFICATION
// SSS FIXME: Where is this set up?  How is this diff from ClassVarDeclNode??	DESIGN	0.9999869705258998	DESIGN	1.3029474100290747E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9992511102662645	DESIGN	7.488897337355913E-4	WITHOUT_CLASSIFICATION
/** * SSS FIXME: Used anywhere?  I don't see calls to this anywhere    public Operand buildDAsgnAssignment(Node node, IR_Scope s) {        DAsgnNode dasgnNode = (DAsgnNode) node;        s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth());    }**/	DESIGN	0.9993425855124708	DESIGN	6.574144875292545E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Receiver -- this is the class meta object basically? // Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.9470048723976633	DESIGN	0.05299512760233673	WITHOUT_CLASSIFICATION
// self = args[0] // SSS FIXME: Verify that this is correct	DESIGN	0.977491151881975	DESIGN	0.022508848118025015	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9992511102662645	DESIGN	7.488897337355913E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.8983015877666154	WITHOUT_CLASSIFICATION	0.10169841223338462	DESIGN
// add a "self" recv here // TODO: is this right?	DESIGN	0.9999998205785328	DESIGN	1.7942146730712367E-7	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.9998457508711848	DESIGN	1.5424912881530043E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition());	DESIGN	0.571928719028885	WITHOUT_CLASSIFICATION	0.428071280971115	DESIGN
// SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9999999421233329	DESIGN	5.787666720738555E-8	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be a string literal or a string? // Dummy class for the script	DESIGN	0.999402161003762	DESIGN	5.978389962379337E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.9988494011500492	DESIGN	0.0011505988499508572	WITHOUT_CLASSIFICATION
// SSS FIXME: Correct?  Where does closure arg come from?	DESIGN	0.9985640239043503	DESIGN	0.0014359760956496246	WITHOUT_CLASSIFICATION
// SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.9999846627046898	DESIGN	1.5337295310252508E-5	WITHOUT_CLASSIFICATION
// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.9652524826413081	WITHOUT_CLASSIFICATION	0.034747517358691804	DESIGN
// SSS FIXME: This should never get called for constant svalues	DESIGN	0.9990076462878359	DESIGN	9.923537121640544E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be Operand or CompoundString? // Can it happen that symbols are built out of other than compound strings?   // Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.9999944868007133	DESIGN	5.513199286696494E-6	WITHOUT_CLASSIFICATION
// TODO: need to get this back into the method signature...now is too late...	DESIGN	0.9998981775824703	DESIGN	1.0182241752966956E-4	WITHOUT_CLASSIFICATION
/* Hack in to replace usual readline with this */	DESIGN	0.9763978079284953	WITHOUT_CLASSIFICATION	0.023602192071504713	DESIGN
// bit risky if someone changes completor, but useful for method calls	DESIGN	0.9987773352347739	WITHOUT_CLASSIFICATION	0.0012226647652261494	DESIGN
// FIXME:  This determine module is in a strange location and should somehow be in block	DESIGN	0.9998116365023839	DESIGN	1.8836349761612784E-4	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9999782070353618	DESIGN	2.179296463825251E-5	WITHOUT_CLASSIFICATION
// we basically ignore protocol. let someone report it...	DESIGN	0.9912433198385872	WITHOUT_CLASSIFICATION	0.008756680161412863	DESIGN
// Workaround for a bug in Sun's JDK 1.5.x, see // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.9935290418892884	DESIGN	0.006470958110711617	WITHOUT_CLASSIFICATION
// context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9998048430425793	WITHOUT_CLASSIFICATION	1.9515695742055068E-4	DESIGN
// FIXME we want to eliminate these type casts when possible	DESIGN	0.7530316750658171	WITHOUT_CLASSIFICATION	0.24696832493418291	DESIGN
// TODO: Determine whether we should perhaps store non-singleton class // in the implementationClass	DESIGN	0.9999994796859778	DESIGN	5.203140222733048E-7	WITHOUT_CLASSIFICATION
// FIXME: set up a CallConfiguration for this	DESIGN	0.9983993042806154	DESIGN	0.0016006957193845774	WITHOUT_CLASSIFICATION
// FIXME: set up a call configuration for this	DESIGN	0.9930962018984051	DESIGN	0.006903798101594882	WITHOUT_CLASSIFICATION
// TODO: make this do specific-arity calling	DESIGN	0.9999950964783083	DESIGN	4.903521691749634E-6	WITHOUT_CLASSIFICATION
// add 'new' with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.977513008465513	WITHOUT_CLASSIFICATION	0.022486991534487025	DESIGN
// add method with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.8809069647593666	WITHOUT_CLASSIFICATION	0.11909303524063337	DESIGN
// FIXME This whole thing could probably be implemented as a module and // mixed into appropriate classes, especially if it uses either // IOInput/OutputStream or is smart about the kind of IO-like object // it's being used against.	DESIGN	0.9999688088141472	DESIGN	3.1191185852802115E-5	WITHOUT_CLASSIFICATION
// using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.999977639119628	WITHOUT_CLASSIFICATION	2.2360880371907844E-5	DESIGN
// using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9999617331314498	WITHOUT_CLASSIFICATION	3.826686855035244E-5	DESIGN
// using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9997248352169218	WITHOUT_CLASSIFICATION	2.751647830782334E-4	DESIGN
// these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.92261038963042	DESIGN	0.07738961036957999	WITHOUT_CLASSIFICATION
// TODO: WRONG - get interfaces from class	DESIGN	0.9922887265468509	DESIGN	0.007711273453149139	WITHOUT_CLASSIFICATION
// TODO: catch exception if constant is already set by other // thread	DESIGN	0.9105250400564765	DESIGN	0.08947495994352347	WITHOUT_CLASSIFICATION
// TODO: public only?	DESIGN	0.9999558144802797	DESIGN	4.418551972029466E-5	WITHOUT_CLASSIFICATION
// see note below re: 2-field kludge	DESIGN	0.9992133009767261	WITHOUT_CLASSIFICATION	7.866990232738369E-4	DESIGN
// TODO: protected methods.  this is going to require a rework // of some of the mechanism.	DESIGN	0.99998235739724	DESIGN	1.764260276002148E-5	WITHOUT_CLASSIFICATION
// TODO: protected methods.  this is going to require a rework of some of the mechanism.	DESIGN	0.9999758552636945	DESIGN	2.4144736305441085E-5	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods	DESIGN	0.9999656040014397	DESIGN	3.439599856016154E-5	WITHOUT_CLASSIFICATION
// FIXME: This doesn't actually support anything but String	DESIGN	0.9814295757625812	DESIGN	0.018570424237418857	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9971872835788463	DESIGN	0.0028127164211536903	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9971872835788463	DESIGN	0.0028127164211536903	WITHOUT_CLASSIFICATION
// this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.9916958083164703	WITHOUT_CLASSIFICATION	0.008304191683529721	DESIGN
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.9975556547992597	DESIGN	0.0024443452007403797	WITHOUT_CLASSIFICATION
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.9975556547992597	DESIGN	0.0024443452007403797	WITHOUT_CLASSIFICATION
// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)	DESIGN	0.9999135733490024	WITHOUT_CLASSIFICATION	8.642665099764762E-5	DESIGN
// FIXME: we should also support orgs that use capitalized package // names (including, embarrassingly, the one I work for), but this // should be enabled by a system property, as the expected default // behavior for an upper-case value should be (and is) to treat it // as a class name, and raise an exception if it's not found 	DESIGN	0.9999548273510418	DESIGN	4.5172648958069195E-5	WITHOUT_CLASSIFICATION
// TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.9545978307983294	DESIGN	0.0454021692016706	WITHOUT_CLASSIFICATION
// upper-case package name // TODO: top-level upper-case package was supported in the previous (Ruby-based) // implementation, so leaving as is.  see note at #getProxyOrPackageUnderPackage // re: future approach below the top-level.	DESIGN	0.967373797445851	DESIGN	0.03262620255414911	WITHOUT_CLASSIFICATION
// FIXME: wtf is this? Why would these use the class?	DESIGN	0.9999999999712124	DESIGN	2.878768071619646E-11	WITHOUT_CLASSIFICATION
// FIXME: needs to be rethought	DESIGN	0.9997524805905192	DESIGN	2.4751940948076963E-4	WITHOUT_CLASSIFICATION
// TODO: specifying soft refs, may want to compare memory consumption, // behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.9995296384440967	DESIGN	4.703615559032723E-4	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999973885895626	DESIGN	2.6114104373878536E-6	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999973885895626	DESIGN	2.6114104373878536E-6	WITHOUT_CLASSIFICATION
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.8820176114315901	DESIGN	0.11798238856840991	WITHOUT_CLASSIFICATION
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes)	DESIGN	0.5295016783825176	WITHOUT_CLASSIFICATION	0.47049832161748245	DESIGN
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes) // TODO: not sure we need this at all, since we only expose // public fields. //field.setAccessible(true);	DESIGN	0.976071836564438	DESIGN	0.023928163435562082	WITHOUT_CLASSIFICATION
// FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might // eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.9999615778598053	DESIGN	3.842214019458365E-5	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods.  also, the getDeclared calls may throw SecurityException if // we're running under a restrictive security policy.	DESIGN	0.9999938751494498	DESIGN	6.124850550207123E-6	WITHOUT_CLASSIFICATION
// don't bother to check if final method, it won't // be there (not generated, can't be!)	DESIGN	0.9999795083219286	WITHOUT_CLASSIFICATION	2.0491678071379262E-5	DESIGN
// super calls from proxies must use reflected method // FIXME: possible to make handles do the superclass call?	DESIGN	0.9999839300798605	DESIGN	1.606992013952234E-5	WITHOUT_CLASSIFICATION
// actual type does not exactly match method return type, re-get converter // FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.9927901982993853	WITHOUT_CLASSIFICATION	0.007209801700614684	DESIGN
// FIXME: Ideally JavaObject instances should be marshallable, which means that // the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.9668484198004923	WITHOUT_CLASSIFICATION	0.03315158019950771	DESIGN
// FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.7803467576052976	DESIGN	0.21965324239470244	WITHOUT_CLASSIFICATION
// We always prepend an org.jruby.proxy package to the beginning // because java and javax packages are protected and signed // jars prevent us generating new classes with those package // names. See JRUBY-2439.	DESIGN	0.9999995770814251	WITHOUT_CLASSIFICATION	4.22918575038091E-7	DESIGN
// TODO: Only used by interface implementation; eliminate it	DESIGN	0.9995153344267392	DESIGN	4.8466557326066535E-4	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9999782070353618	DESIGN	2.179296463825251E-5	WITHOUT_CLASSIFICATION
// modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.9999982910094195	WITHOUT_CLASSIFICATION	1.7089905804728447E-6	DESIGN
// lame generics issues: making Segment class static and manually // inserting cache reference to work around various problems generically // referencing methods/vars across classes.	DESIGN	0.9999949739275943	DESIGN	5.026072405772707E-6	WITHOUT_CLASSIFICATION
// entry exists, proxy doesn't match. replace. // this could happen if old proxy was gc'ed // TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.9999789707084008	DESIGN	2.1029291599275052E-5	WITHOUT_CLASSIFICATION
// FIXME: How much more obtuse can this be? // Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.9999867812133894	DESIGN	1.3218786610673595E-5	WITHOUT_CLASSIFICATION
// ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.6295148193603768	WITHOUT_CLASSIFICATION	0.3704851806396231	DESIGN
// Hacky: Advance position to eat newline here....	DESIGN	0.8728338963936799	DESIGN	0.1271661036063201	WITHOUT_CLASSIFICATION
// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.8058313687028107	DESIGN	0.19416863129718936	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9999962724514461	DESIGN	3.72754855394724E-6	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9999962724514461	DESIGN	3.72754855394724E-6	WITHOUT_CLASSIFICATION
// ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.9962371603744229	WITHOUT_CLASSIFICATION	0.0037628396255770533	DESIGN
// FIXME: Remove this from grammars.	DESIGN	0.9963853297768217	DESIGN	0.0036146702231783265	WITHOUT_CLASSIFICATION
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9531252458665015	DESIGN	0.04687475413349851	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9999744096529425	DESIGN	2.5590347057534652E-5	WITHOUT_CLASSIFICATION
/* FIXME: lose syntactical elements here (and others like this)*/	DESIGN	0.7940123902928308	WITHOUT_CLASSIFICATION	0.2059876097071693	DESIGN
/* ENEBO: Lots of optz in 1.9 parser here*/	DESIGN	0.9999350677587103	WITHOUT_CLASSIFICATION	6.493224128968117E-5	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.6838374937726293	WITHOUT_CLASSIFICATION	0.31616250622737074	DESIGN
// This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.9998002005827868	DESIGN	1.997994172132452E-4	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9792683311164808	DESIGN	0.02073166888351918	WITHOUT_CLASSIFICATION
// TODO: This probably isn't the best hack, but it works until we can have different // root frame setup for 1.9 easily.	DESIGN	0.9999999999074196	DESIGN	9.258043272726516E-11	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9993578970894029	DESIGN	6.421029105969974E-4	WITHOUT_CLASSIFICATION
// FIXME: I think we need these pushed somewhere?	DESIGN	0.9999998360621697	DESIGN	1.639378302655839E-7	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9993578970894029	DESIGN	6.421029105969974E-4	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9993578970894029	DESIGN	6.421029105969974E-4	WITHOUT_CLASSIFICATION
// XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.8560481073331566	WITHOUT_CLASSIFICATION	0.14395189266684338	DESIGN
/** * FIXME: This version is faster than the previous, but both suffer from a * crucial flaw: It is impossible to create an ObjectSpace with an iterator * that doesn't either: a. hold on to objects that might otherwise be collected * or b. have no way to guarantee that a call to hasNext() will be correct or * that a subsequent call to next() will produce an object. For our purposes, * for now, this may be acceptable. */	DESIGN	0.9884432523770265	DESIGN	0.01155674762297364	WITHOUT_CLASSIFICATION
// FIXME: Maybe not best place, but move it to a good home	DESIGN	0.9999929687323295	DESIGN	7.031267670619472E-6	WITHOUT_CLASSIFICATION
// FIXME: This is gross. Don't do this.	DESIGN	0.9943448782501981	DESIGN	0.005655121749801897	WITHOUT_CLASSIFICATION
/** * * @author headius * FIXME convert to enum ? */	DESIGN	0.998295302585735	DESIGN	0.001704697414264994	WITHOUT_CLASSIFICATION
// FIXME: No, I don't like it.	DESIGN	0.6898915386144312	DESIGN	0.31010846138556886	WITHOUT_CLASSIFICATION
// TODO: This is probably BAD...	DESIGN	0.9999979339854022	DESIGN	2.0660145978558994E-6	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999865666955796	DESIGN	1.3433304420487267E-5	WITHOUT_CLASSIFICATION
// invoke callMethodMissing method directly // TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.9999999951339005	DESIGN	4.866099546158956E-9	WITHOUT_CLASSIFICATION
// TODO this is really ineffient, and potentially a problem everytime anyone require's something. // we should try to make LoadPath a special array object.	DESIGN	0.999999717570848	DESIGN	2.8242915199216576E-7	WITHOUT_CLASSIFICATION
// FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.999984638084469	DESIGN	1.5361915530878676E-5	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999865666955796	DESIGN	1.3433304420487267E-5	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999865666955796	DESIGN	1.3433304420487267E-5	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999865666955796	DESIGN	1.3433304420487267E-5	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999865666955796	DESIGN	1.3433304420487267E-5	WITHOUT_CLASSIFICATION
// FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.9999979492574755	DESIGN	2.050742524432854E-6	WITHOUT_CLASSIFICATION
// FIXME: potentially could just use ByteList here?	DESIGN	0.9999872006764239	DESIGN	1.2799323576184197E-5	WITHOUT_CLASSIFICATION
// FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.9930781622280073	DESIGN	0.006921837771992757	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9999837374601396	DESIGN	1.626253986052443E-5	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9999837374601396	DESIGN	1.626253986052443E-5	WITHOUT_CLASSIFICATION
// grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, // so we must do all this (the next 70 lines of code), which has already // been done by FloatingDecimal.	DESIGN	0.9999114106793702	WITHOUT_CLASSIFICATION	8.858932062982399E-5	DESIGN
// it would be nice (and logical!) if exponent form  // behaved like E/e, and decimal form behaved like f, // but no such luck. hence: 	DESIGN	0.9687285706688747	WITHOUT_CLASSIFICATION	0.03127142933112534	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9517982741246416	WITHOUT_CLASSIFICATION	0.04820172587535842	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9517982741246416	WITHOUT_CLASSIFICATION	0.04820172587535842	DESIGN
// TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.9998939563832048	DESIGN	1.0604361679514721E-4	WITHOUT_CLASSIFICATION
// TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.9999815979448784	DESIGN	1.8402055121634434E-5	WITHOUT_CLASSIFICATION
// FIXME: this probably belongs in a different package.	DESIGN	0.9999563936942868	DESIGN	4.360630571329176E-5	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999999999304202	DESIGN	6.957986897892078E-11	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999999999304202	DESIGN	6.957986897892078E-11	WITHOUT_CLASSIFICATION
// FIXME: I don't like this	DESIGN	0.9986922100231541	DESIGN	0.0013077899768459548	WITHOUT_CLASSIFICATION
// TODO: It's perhaps just a coincidence that all the channels for // which we should raise are instanceof SelectableChannel, since // stdio is not...so this bothers me slightly. -CON	DESIGN	0.9998990584555363	DESIGN	1.0094154446376437E-4	WITHOUT_CLASSIFICATION
// FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.9999742183844128	DESIGN	2.5781615587247646E-5	WITHOUT_CLASSIFICATION
// TODO this should entry into error handling somewhere	DESIGN	0.9999006679331455	DESIGN	9.933206685457367E-5	WITHOUT_CLASSIFICATION
// FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.999997187815963	DESIGN	2.812184037011728E-6	WITHOUT_CLASSIFICATION
// We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it) 	DESIGN	0.9989723573026079	WITHOUT_CLASSIFICATION	0.0010276426973920827	DESIGN
// TODO: Ruby does not seem to care about invalid numeric mode values // I am not sure if ruby overflows here also...	DESIGN	0.9998072597279549	DESIGN	1.9274027204506684E-4	WITHOUT_CLASSIFICATION
// TODO: Make this more intelligible value	DESIGN	0.9984554761295813	DESIGN	0.0015445238704188177	WITHOUT_CLASSIFICATION
// XXX: do something?	DESIGN	0.9993342433036647	DESIGN	6.657566963352694E-4	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.8499135632447168	DESIGN	0.15008643675528321	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.8499135632447168	DESIGN	0.15008643675528321	WITHOUT_CLASSIFICATION
// up to ten, stuff into tmp locals, load in reverse order, and assign // FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.9999996730525577	DESIGN	3.269474422864299E-7	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9713512455693304	DESIGN	0.028648754430669582	WITHOUT_CLASSIFICATION
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9989277006400858	WITHOUT_CLASSIFICATION	0.0010722993599140613	DESIGN
// SSS FIXME: These should get normally compiled or initialized some other way ...  // SSS FIXME: Parent/super-type info is incorrect! // These are just placeholders for now .. this needs to be updated with *real* class objects later!	DESIGN	0.9999999999909011	DESIGN	9.09904924113937E-12	WITHOUT_CLASSIFICATION
// SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class // Holy cow!  Just to append two darned arrays!	DESIGN	0.9999996939787313	DESIGN	3.0602126863431966E-7	WITHOUT_CLASSIFICATION
// SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. // It calls regular to_ary on the object.  But, if it encounters a method_missing, the value // is inserted into an 1-element array! // try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. // Ex: http://gist.github.com/163551	DESIGN	0.9998664180098678	DESIGN	1.3358199013219734E-4	WITHOUT_CLASSIFICATION
// This is for JRUBY-2988, since after a suspend the terminal seems // to need to be reinitialized. Since we can't easily detect suspension, // initialize after every readline. Probably not fast, but this is for // interactive terminals anyway...so who cares?	DESIGN	0.9982706519751567	DESIGN	0.001729348024843274	WITHOUT_CLASSIFICATION
// set up a field for the CacheEntry // TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9999970791288252	DESIGN	2.9208711747165015E-6	WITHOUT_CLASSIFICATION
// exit monitor before making call // FIXME: this not being in a finally is a little worrisome	DESIGN	0.9999999768402372	DESIGN	2.315976277090948E-8	WITHOUT_CLASSIFICATION
// FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct // this resulted in object being null after unmarshalling...	DESIGN	0.8961610127889019	WITHOUT_CLASSIFICATION	0.10383898721109812	DESIGN
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.8820176114315901	DESIGN	0.11798238856840991	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9792683311164808	DESIGN	0.02073166888351918	WITHOUT_CLASSIFICATION
// TODO: This is actually now returning the scope of whoever called Method#to_proc // which is obviously wrong; but there's no scope to provide for many methods. // It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.999999997013099	DESIGN	2.986900837885691E-9	WITHOUT_CLASSIFICATION
// FIXME: We should be getting this from the runtime rather than assume none? //return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.998558805905992	DESIGN	0.0014411940940080143	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9999962724514461	DESIGN	3.72754855394724E-6	WITHOUT_CLASSIFICATION
// This is a fairly specific hack for empty string, but it does the job	DESIGN	0.9999667853588476	DESIGN	3.321464115234828E-5	WITHOUT_CLASSIFICATION
// XXX This constructor is a hack to implement the __END__ syntax. //     Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.999999589109092	DESIGN	4.108909078699023E-7	WITHOUT_CLASSIFICATION
// FIXME:  Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need // to totally change marshalling to work with overridden core classes.	DESIGN	0.9999999986399346	DESIGN	1.3600653946959238E-9	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999999984356	DESIGN	1.5643364777271139E-12	WITHOUT_CLASSIFICATION
// We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its // provider's constructor which require it to be executed in a secure context. // Ideally this hack should be removed. See JRUBY-3919 and this BC bug: //   http://www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.9870796961246455	DESIGN	0.01292030387535447	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.999976110360605	DESIGN	2.388963939507565E-5	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.999976110360605	DESIGN	2.388963939507565E-5	WITHOUT_CLASSIFICATION
// hack to get right style for input	DESIGN	0.9778036135140082	DESIGN	0.02219638648599173	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9993459836424688	DESIGN	6.540163575311593E-4	WITHOUT_CLASSIFICATION
// small hack to save a cast later on	DESIGN	0.9996200932519386	WITHOUT_CLASSIFICATION	3.799067480613804E-4	DESIGN
// temporary hack to handle non-Ruby values // will come up with better solution shortly	DESIGN	0.9993479449589193	DESIGN	6.520550410806311E-4	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9993459836424688	DESIGN	6.540163575311593E-4	WITHOUT_CLASSIFICATION
// HACK: in order to have stdout/err act like ttys and flush always, // we set anything assigned to stdout/stderr to sync	DESIGN	0.9998432639048445	WITHOUT_CLASSIFICATION	1.5673609515558516E-4	DESIGN
// HACK: force clinit to be created	DESIGN	0.6405844823413732	WITHOUT_CLASSIFICATION	0.35941551765862684	DESIGN
// FIXME: This is pretty gross; we should have a cleaner initialization // that doesn't depend on package-visible fields and ideally is atomic, // probably using an immutable structure we replace all at once. // lazy, null when no groups defined	DESIGN	0.9999999999402559	DESIGN	5.974409233876138E-11	WITHOUT_CLASSIFICATION
// TODO: should probably apply the null object pattern for a // non-allowed class, rather than null	DESIGN	0.9999798134670423	DESIGN	2.018653295763752E-5	WITHOUT_CLASSIFICATION
// TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.8770480530592714	DESIGN	0.1229519469407287	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9902974344873113	DESIGN	0.009702565512688605	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9999962724514461	DESIGN	3.72754855394724E-6	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.9859356707159622	DESIGN	0.014064329284037705	WITHOUT_CLASSIFICATION
// not intended to be called directly by users (private) // OLD TODO from Ruby code: // This should be implemented in JavaClass.java, where we can // check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.9999999538248678	DESIGN	4.617513212977981E-8	WITHOUT_CLASSIFICATION
// TODO? I think this ends up propagating from normal Java exceptions // sys_fail(openFile.getPath())	DESIGN	0.9503093881931695	DESIGN	0.04969061180683058	WITHOUT_CLASSIFICATION
// TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.9999678432751934	DESIGN	3.215672480660582E-5	WITHOUT_CLASSIFICATION
// TODO: the rest of this...seeking to same position is unnecessary since we share a channel // but some of this may be needed?	DESIGN	0.9999999897842566	DESIGN	1.0215743383967372E-8	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9999999943146575	DESIGN	5.685342499485917E-9	WITHOUT_CLASSIFICATION
// FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) // this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.9970900679444862	DESIGN	0.002909932055513833	WITHOUT_CLASSIFICATION
// ignore; job was cancelled // FIXME: Is this ok?	DESIGN	0.9998100924040567	DESIGN	1.8990759594327304E-4	WITHOUT_CLASSIFICATION
// TODO: // MRI behavior: Call "+" or "add", depending on the call. // But this leads to exceptions when Floats are added. See: // http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.9999899985191173	DESIGN	1.0001480882662649E-5	WITHOUT_CLASSIFICATION
// Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9998330375734908	WITHOUT_CLASSIFICATION	1.6696242650915974E-4	DESIGN
// TODO: wire into new exception handling mechanism	DESIGN	0.995037434169857	DESIGN	0.004962565830142948	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999973885895626	DESIGN	2.6114104373878536E-6	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9999495011351228	DESIGN	5.0498864877114184E-5	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9999495011351228	DESIGN	5.0498864877114184E-5	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9999495011351228	DESIGN	5.0498864877114184E-5	WITHOUT_CLASSIFICATION
// FIXME: Determine if a real allocator is needed here. Do people want to extend // JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should // you be able to? // TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999999999995183	DESIGN	4.816821313476181E-13	WITHOUT_CLASSIFICATION
// SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method // But, if the mehod is modified, we create a new method object which in turn gets a new token.  What makes sense??  Intuitively, // it seems the first one ... but let us see ... // Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.9999993739907496	DESIGN	6.260092504782327E-7	WITHOUT_CLASSIFICATION
// FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.9905837915854503	WITHOUT_CLASSIFICATION	0.009416208414549761	DESIGN
// FIXME: bit of a kludge here (non-interface classes assigned to both // class and module fields). simplifies proxy extender code, will go away // when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.9999998982657744	DESIGN	1.0173422561871836E-7	WITHOUT_CLASSIFICATION
// There's not a compelling reason to keep JavaClass instances in a weak map // (any proxies created are [were] kept in a non-weak map, so in most cases they will // stick around anyway), and some good reasons not to (JavaClass creation is // expensive, for one; many lookups are performed when passing parameters to/from // methods; etc.). // TODO: faster custom concurrent map	DESIGN	0.9998837721762035	DESIGN	1.1622782379660928E-4	WITHOUT_CLASSIFICATION
// TODO: we should be able to optimize this quite a bit post-1.0.  JavaClass already // has all the methods organized by method name; the next version (supporting protected // methods/fields) will have them organized even further. So collectMethods here can // just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.9372229252459465	DESIGN	0.06277707475405347	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.999516081754676	DESIGN	4.839182453239368E-4	WITHOUT_CLASSIFICATION
// FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.5797349511756305	WITHOUT_CLASSIFICATION	0.42026504882436955	DESIGN
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9999931231601333	DESIGN	6.876839866622732E-6	WITHOUT_CLASSIFICATION
// TODO: Bleeding runtime into parser.  Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.9998937112395703	DESIGN	1.0628876042971507E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Maybe this is not really a concern after all ... // Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused // with semantic nesting of scopes across files. // // Consider this code in a file f // class M1::M2::M3::C  //   ... // end // // So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' // Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). // // This is primarily used to ensure that variable names don't clash! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //    private int _lexicalNestingLevel;	DESIGN	0.9999666791021429	DESIGN	3.332089785714137E-5	WITHOUT_CLASSIFICATION
// Sometimes the value can be retrieved at "compile time".  If we succeed, nothing like it!   // We might not .. for the following reasons: // 1. The constant is missing, // 2. The reference is a forward-reference, // 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) // 4. Our compiler isn't able to right away infer that this is a constant. // // SSS FIXME: // 1. The operand can be a literal array, range, or hash -- hence Operand //    because Array, Range, and Hash derive from Operand and not Constant ... //    Is there a way to fix this impedance mismatch? // 2. It should be possible to handle the forward-reference case by creating a new //    ForwardReference operand and then inform the scope of the forward reference //    which the scope can fix up when the reference gets defined.  At code-gen time, //    if the reference is unresolved, when a value is retrieved for the forward-ref //    and we get a null, we can throw a ConstMissing exception!  Not sure! //	DESIGN	0.9996806717015764	DESIGN	3.1932829842361364E-4	WITHOUT_CLASSIFICATION
// Reset value map if this instruction is the start/end of a basic block // // Right now, calls are considered hard boundaries for optimization and // information cannot be propagated across them! // // SSS FIXME: Rather than treat all calls with a broad brush, what we need // is to capture different attributes about a call : //   - uses closures //   - known call target //   - can modify scope, //   - etc. // // This information is probably already present in the AST Inspector	DESIGN	0.9999945643750148	DESIGN	5.435624985252467E-6	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9999250748456947	DESIGN	7.492515430525822E-5	WITHOUT_CLASSIFICATION
// XXX: This check previously used callMethod("==") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.	DESIGN	0.8125715470176521	DESIGN	0.18742845298234787	WITHOUT_CLASSIFICATION
// end hack	DESIGN	0.9533041959872752	WITHOUT_CLASSIFICATION	0.04669580401272479	DESIGN
// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.9967716314766547	DESIGN	0.003228368523345232	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999999984356	DESIGN	1.5643364777271139E-12	WITHOUT_CLASSIFICATION
/*         * TODO: This version is better than the hackish previous one. Windows         *       behavior needs to be defined though. I suppose this version         *       could be improved more too.         * TODO: /etc/passwd is also inadequate for MacOSX since it does not         *       use /etc/passwd for regular user accounts         */	DESIGN	0.99999999982758	DESIGN	1.7242008292177525E-10	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.9999971046931804	DESIGN	2.8953068196313444E-6	WITHOUT_CLASSIFICATION
// Let's only generate methods for those the user may actually  // intend to override.  That includes any defined in the current // class, and any ancestors that are also JavaProxyClasses (but none // from any other ancestor classes). Methods defined in mixins will // be considered intentionally overridden, except those from Kernel, // Java, and JavaProxyMethods, as well as Enumerable.  // TODO: may want to exclude other common mixins?	DESIGN	0.9589708692271361	WITHOUT_CLASSIFICATION	0.041029130772863895	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9531252458665015	DESIGN	0.04687475413349851	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9999744096529425	DESIGN	2.5590347057534652E-5	WITHOUT_CLASSIFICATION
// FIXME: We should really not be creating the dynamic scope for the root // of the AST before parsing.  This makes us end up needing to readjust // this dynamic scope coming out of parse (and for local static scopes it // will always happen because of $~ and $_). // FIXME: Because we end up adjusting this after-the-fact, we can't use // any of the specific-size scopes.	DESIGN	0.9940657436691093	DESIGN	0.00593425633089072	WITHOUT_CLASSIFICATION
/* FIXME: Resolve what the hell is going on*/	DESIGN	0.9993944369061442	DESIGN	6.055630938558525E-4	WITHOUT_CLASSIFICATION
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.6838374937726293	WITHOUT_CLASSIFICATION	0.31616250622737074	DESIGN
// If variables were added then we may need to grow the dynamic scope to match the static // one. // FIXME: Make this so we only need to check this for blockScope != null.  We cannot // currently since we create the DynamicScope for a LocalStaticScope before parse begins. // Refactoring should make this fixable.	DESIGN	0.6958788451438291	WITHOUT_CLASSIFICATION	0.30412115485617097	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9993578970894029	DESIGN	6.421029105969974E-4	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9993578970894029	DESIGN	6.421029105969974E-4	WITHOUT_CLASSIFICATION
// we're depending on the side effect of the load, which loads the class but does not turn it into a script // I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.8440731337979386	WITHOUT_CLASSIFICATION	0.1559268662020615	DESIGN
// TODO: for now, we use a faithful // reimplementation of MRI's algorithm, // but should use UTF8Encoding facilities // from Joni, once it starts prefroming // UTF-8 content validation. 	DESIGN	0.9999998871733796	DESIGN	1.1282662034527762E-7	WITHOUT_CLASSIFICATION
/**     * Process streams get Channel.newChannel()ed into FileChannel but are not actually     * seekable. So instead of just the isSeekable check doing instanceof FileChannel,     * we must also add this boolean to check, which we set to false when it's known     * that the incoming channel is from a process.     *      * FIXME: This is gross, and it's NIO's fault for not providing a nice way to     * tell if a channel is "really" seekable.     */	DESIGN	0.5898073474897845	DESIGN	0.4101926525102156	WITHOUT_CLASSIFICATION
