// todo : add support for READ_WRITE ( + NONSTRICT_READ_WRITE ??? )	IMPLEMENTATION	0.9593511261729385	WITHOUT_CLASSIFICATION	0.040039820391978426	IMPLEMENTATION	5.921803459268518E-4	DESIGN	8.90267795703131E-6	TEST	7.102750271245827E-6	DOCUMENTATION	8.676609279154279E-7	DEFECT
// todo : add support for READ_WRITE ( + NONSTRICT_READ_WRITE ??? )	IMPLEMENTATION	0.9593511261729385	WITHOUT_CLASSIFICATION	0.040039820391978426	IMPLEMENTATION	5.921803459268518E-4	DESIGN	8.90267795703131E-6	TEST	7.102750271245827E-6	DOCUMENTATION	8.676609279154279E-7	DEFECT
//TODO: return new Lock(ts);	IMPLEMENTATION	0.9236290198748547	WITHOUT_CLASSIFICATION	0.07449955562574352	DESIGN	0.0014761784107490262	DEFECT	2.5911742807173285E-4	IMPLEMENTATION	1.2252609595134049E-4	DOCUMENTATION	1.3602564629794337E-5	TEST
//TODO: if lock.getTimestamp().equals(ts)	IMPLEMENTATION	0.837639113421747	WITHOUT_CLASSIFICATION	0.13118941908781678	IMPLEMENTATION	0.015027021540862606	DEFECT	0.01405137310720569	TEST	0.001750372259684498	DESIGN	3.4270058268346944E-4	DOCUMENTATION
//TODO mappings.getLogicalTableName(ownerTable)	IMPLEMENTATION	0.6213406285214002	IMPLEMENTATION	0.34180483577856746	WITHOUT_CLASSIFICATION	0.028509821093492517	DESIGN	0.005268287351496586	TEST	0.002539510192068495	DEFECT	5.369170629747894E-4	DOCUMENTATION
// TODO: handle TypeDefs	IMPLEMENTATION	0.8682830209061193	IMPLEMENTATION	0.07684347471738452	DESIGN	0.05342353217423285	WITHOUT_CLASSIFICATION	8.00147602556434E-4	DEFECT	3.417243539867717E-4	DOCUMENTATION	3.0810024572007965E-4	TEST
//TODO check there is no actual definition elemnents when a ref is defined	IMPLEMENTATION	0.9637623409715815	WITHOUT_CLASSIFICATION	0.03223635534310855	DESIGN	0.003982043366958644	IMPLEMENTATION	1.3112785572131298E-5	DOCUMENTATION	5.376434542132195E-6	TEST	7.710982370700562E-7	DEFECT
// TODO: bindpropertyresults(alias, returnElem)	IMPLEMENTATION	0.726713739223964	WITHOUT_CLASSIFICATION	0.17675981060831192	DEFECT	0.09065690583823384	DESIGN	0.005574985929161803	IMPLEMENTATION	1.8770535489094308E-4	TEST	1.068530454376477E-4	DOCUMENTATION
//TODO: validate existing of property with the chosen name. (secondpass )	IMPLEMENTATION	0.995173563947161	WITHOUT_CLASSIFICATION	0.003596496077269317	IMPLEMENTATION	8.547213873154782E-4	DESIGN	3.234089059917957E-4	DEFECT	4.259805983654104E-5	TEST	9.211622425953086E-6	DOCUMENTATION
//TODO: native ids	IMPLEMENTATION	0.7647340231320767	IMPLEMENTATION	0.1853835685497682	WITHOUT_CLASSIFICATION	0.03759571892868207	DESIGN	0.010308534870548822	DEFECT	0.0015106655110975367	DOCUMENTATION	4.674890078266409E-4	TEST
//TODO: if we are using identity columns, fetch the identifier	IMPLEMENTATION	0.9992209545718412	WITHOUT_CLASSIFICATION	7.470259123117281E-4	DESIGN	1.99294586369779E-5	IMPLEMENTATION	6.354807659184558E-6	TEST	3.5960830435383176E-6	DOCUMENTATION	2.139166507394276E-6	DEFECT
//TODO: handle property-ref	IMPLEMENTATION	0.819308924381413	WITHOUT_CLASSIFICATION	0.12766973179191562	DESIGN	0.0446997413712607	IMPLEMENTATION	0.007450533349978811	DEFECT	5.991569838000593E-4	DOCUMENTATION	2.7191212163191447E-4	TEST
//TODO: get all properties, not just the fetched ones!	IMPLEMENTATION	0.9994083895461325	WITHOUT_CLASSIFICATION	3.4833816494623E-4	IMPLEMENTATION	2.1861906242601407E-4	DESIGN	1.3998804631731538E-5	DEFECT	9.40595003086807E-6	TEST	1.2484718326380471E-6	DOCUMENTATION
//TODO: get all properties, not just the fetched ones!	IMPLEMENTATION	0.9994083895461325	WITHOUT_CLASSIFICATION	3.4833816494623E-4	IMPLEMENTATION	2.1861906242601407E-4	DESIGN	1.3998804631731538E-5	DEFECT	9.40595003086807E-6	TEST	1.2484718326380471E-6	DOCUMENTATION
/**	IMPLEMENTATION	0.4105629660680269	DOCUMENTATION	0.38067849588335895	DESIGN	0.10486748836536479	IMPLEMENTATION	0.03838592522123044	WITHOUT_CLASSIFICATION	0.033938355862457185	DEFECT	0.03156676859956161	TEST
// TODO: RESTRICT VIOLATION	IMPLEMENTATION	0.54123561874924	IMPLEMENTATION	0.2514999332053884	WITHOUT_CLASSIFICATION	0.17579107689217183	DESIGN	0.02406869388582597	DEFECT	0.003953066030722902	DOCUMENTATION	0.003451611236650883	TEST
// TODO: lowercasing done here. Was done "at random" before; maybe not needed at all ?	IMPLEMENTATION	0.955183905733616	IMPLEMENTATION	0.038722962676456425	DESIGN	0.006019818918787322	DEFECT	6.600058568744356E-5	TEST	4.698517419582347E-6	WITHOUT_CLASSIFICATION	2.613568033289797E-6	DOCUMENTATION
// TODO: toLowerCase was not done before. Only used in Template.	IMPLEMENTATION	0.9913098327474067	DESIGN	0.008615228323808318	WITHOUT_CLASSIFICATION	6.776783959749009E-5	DEFECT	4.8899377284136105E-6	TEST	1.1451756211685136E-6	DOCUMENTATION	1.1359758378880907E-6	IMPLEMENTATION
// add an entry for this type of entity. // we can be assured that all referenced entities have already // been processed, // so specify that this entity is with the latest batch. // doing the batch number before adding the name to the list is // a faster way to get an accurate number.	IMPLEMENTATION	0.999999992918332	WITHOUT_CLASSIFICATION	7.076639192275204E-9	DESIGN	2.6592785110738145E-12	DOCUMENTATION	2.368653874296683E-12	TEST	6.053942094794428E-16	IMPLEMENTATION	3.451843336058939E-16	DEFECT
//TODO: avoid this for non-new instances where mightBeDirty==false	IMPLEMENTATION	0.931050499533807	DESIGN	0.04588141770008167	DEFECT	0.0162754402422293	WITHOUT_CLASSIFICATION	0.005906120500547521	IMPLEMENTATION	5.786286932226163E-4	DOCUMENTATION	3.0789333011181175E-4	TEST
//TODO: optimize away this lookup for entities w/o unsaved-value="undefined"	IMPLEMENTATION	0.9102096366981839	WITHOUT_CLASSIFICATION	0.0743048322697085	IMPLEMENTATION	0.015380020381604626	DESIGN	5.242828160744733E-5	TEST	4.84359767975629E-5	DOCUMENTATION	4.646392097949979E-6	DEFECT
// we could move this inside if we wanted to // tolerate collection initializations during // collection dirty checking:	IMPLEMENTATION	0.5212781306963017	DESIGN	0.47825837764502066	WITHOUT_CLASSIFICATION	2.556964332060189E-4	IMPLEMENTATION	1.672455422721029E-4	TEST	3.970701607051325E-5	DEFECT	8.426671289119962E-7	DOCUMENTATION
//TODO: assertion only, could be optimized away	IMPLEMENTATION	0.9194390075234227	IMPLEMENTATION	0.06396357487790574	WITHOUT_CLASSIFICATION	0.01277204467407333	DESIGN	0.0021252598166992026	DEFECT	0.0015372574597659742	TEST	1.6285564813304728E-4	DOCUMENTATION
//TODO: check that entry.getIdentifier().equals(requestedId)	IMPLEMENTATION	0.9230422489166357	IMPLEMENTATION	0.06998326946313808	WITHOUT_CLASSIFICATION	0.006682832180305638	DESIGN	2.605754649243802E-4	TEST	2.2486194365300033E-5	DOCUMENTATION	8.587780630965643E-6	DEFECT
//TODO: check that entry.getIdentifier().equals(requestedId)	IMPLEMENTATION	0.9230422489166357	IMPLEMENTATION	0.06998326946313808	WITHOUT_CLASSIFICATION	0.006682832180305638	DESIGN	2.605754649243802E-4	TEST	2.2486194365300033E-5	DOCUMENTATION	8.587780630965643E-6	DEFECT
// TODO : why aren't these the same?	IMPLEMENTATION	0.697859584969757	DESIGN	0.2989276506819412	IMPLEMENTATION	0.00210128709591475	DOCUMENTATION	5.663155455480522E-4	DEFECT	5.314967253241775E-4	TEST	1.3664981514769776E-5	WITHOUT_CLASSIFICATION
//TODO: always true for now, but not if we later decide to support elements() in the from clause	IMPLEMENTATION	0.520733270026034	DESIGN	0.4401659954169067	WITHOUT_CLASSIFICATION	0.03556604908777997	DEFECT	0.0034757848655802472	IMPLEMENTATION	5.395045437234751E-5	DOCUMENTATION	4.950149326702666E-6	TEST
// TODO : or should we return 'containsTableAlias'??	IMPLEMENTATION	0.9928713445119588	DESIGN	0.007083409760171456	IMPLEMENTATION	1.7053922869299234E-5	WITHOUT_CLASSIFICATION	1.5910936938924545E-5	DEFECT	1.0860592546472182E-5	DOCUMENTATION	1.420275515129579E-6	TEST
//TODO: arithmetic expressions, multiple new Foo(...)	IMPLEMENTATION	0.48315562393409855	WITHOUT_CLASSIFICATION	0.4707272070912218	IMPLEMENTATION	0.040247949157629456	DESIGN	0.005577126778109661	DEFECT	1.5542712443630978E-4	DOCUMENTATION	1.3666591450422843E-4	TEST
//TODO: for some dialects it would be appropriate to add the renderOrderByPropertiesSelect() to other select strings	IMPLEMENTATION	0.681246399645883	DESIGN	0.18618846091258676	IMPLEMENTATION	0.12375034353385748	WITHOUT_CLASSIFICATION	0.004785906676240181	DEFECT	0.0039034494801841817	TEST	1.2543975124837815E-4	DOCUMENTATION
//TODO: cache the persister, this shows up in yourkit	IMPLEMENTATION	0.995732604972313	DESIGN	0.0030033022491712733	WITHOUT_CLASSIFICATION	9.623226603912497E-4	DEFECT	2.361791067838715E-4	IMPLEMENTATION	4.359315914424209E-5	TEST	2.1997852196233106E-5	DOCUMENTATION
//TODO: theoretically non-threadsafe...	IMPLEMENTATION	0.6381891870592414	DESIGN	0.25264179128836234	WITHOUT_CLASSIFICATION	0.09593900126588223	IMPLEMENTATION	0.01276803089906661	DEFECT	4.340102084800032E-4	DOCUMENTATION	2.797927896746952E-5	TEST
// todo : look at optimizing these...	IMPLEMENTATION	0.8112334554796059	WITHOUT_CLASSIFICATION	0.1619741831345527	IMPLEMENTATION	0.013556980046027494	DESIGN	0.012860553145845017	DEFECT	3.0474537343383576E-4	TEST	7.008282053516749E-5	DOCUMENTATION
//TODO: maybe call it getRowSelection() ?	IMPLEMENTATION	0.7003901359111828	DESIGN	0.22920107796657682	IMPLEMENTATION	0.06214777990354053	WITHOUT_CLASSIFICATION	0.008039062801296881	DEFECT	1.2463224040242134E-4	DOCUMENTATION	9.73111770006885E-5	TEST
//TODO: make this handle multiple collection roles!	IMPLEMENTATION	0.7994088290763989	DESIGN	0.10153414985275959	DEFECT	0.05673002047344974	IMPLEMENTATION	0.04039781176244449	WITHOUT_CLASSIFICATION	0.0017931086214396947	TEST	1.3608021350757505E-4	DOCUMENTATION
//TODO: can we limit stored procedures ?!	IMPLEMENTATION	0.5149793826067063	WITHOUT_CLASSIFICATION	0.4796046514307542	DESIGN	0.005125810190111308	DEFECT	1.505757755358249E-4	DOCUMENTATION	7.672498763485062E-5	TEST	6.285500925751241E-5	IMPLEMENTATION
// TODO: not visible to the user!	IMPLEMENTATION	0.7363049320288801	WITHOUT_CLASSIFICATION	0.16932740576502345	IMPLEMENTATION	0.09146900225296294	DEFECT	0.002345208155414416	DESIGN	2.9261361925993554E-4	DOCUMENTATION	2.608381784591141E-4	TEST
//TODO: unnecessary for databases with ANSI-style joins	IMPLEMENTATION	0.44611324030198873	IMPLEMENTATION	0.43061020276108575	DESIGN	0.12172546553030951	WITHOUT_CLASSIFICATION	0.0010683059147518132	DEFECT	3.587787241294471E-4	TEST	1.240067677348314E-4	DOCUMENTATION
//TODO: use these in methods above	IMPLEMENTATION	0.9839493832623539	DESIGN	0.011728217269270976	IMPLEMENTATION	0.004114677364180607	WITHOUT_CLASSIFICATION	1.3040424596794242E-4	TEST	6.217725838233412E-5	DOCUMENTATION	1.5140599844264352E-5	DEFECT
// TODO: better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.8983428065820876	DESIGN	0.09476745114675428	IMPLEMENTATION	0.006123830976130926	WITHOUT_CLASSIFICATION	5.978909790625118E-4	DEFECT	1.4169651194751294E-4	TEST	2.6323804017256505E-5	DOCUMENTATION
// TODO: better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.8983428065820876	DESIGN	0.09476745114675428	IMPLEMENTATION	0.006123830976130926	WITHOUT_CLASSIFICATION	5.978909790625118E-4	DEFECT	1.4169651194751294E-4	TEST	2.6323804017256505E-5	DOCUMENTATION
// TODO : temporary initial step towards HHH-1907	IMPLEMENTATION	0.9986856841079539	DESIGN	8.507832518758353E-4	WITHOUT_CLASSIFICATION	3.400934701926585E-4	IMPLEMENTATION	6.872677009788534E-5	TEST	4.891951609758355E-5	DEFECT	5.792883782080987E-6	DOCUMENTATION
// todo : remove this once ComponentMetamodel is complete and merged	IMPLEMENTATION	0.9851335583948421	DESIGN	0.014866421715679645	WITHOUT_CLASSIFICATION	1.1544855315616087E-8	TEST	5.957292502135855E-9	DEFECT	1.8096888466515454E-9	IMPLEMENTATION	5.776416191055057E-10	DOCUMENTATION
//TODO handle supportsNotNullUnique=false, but such a case does not exist in the wild so far	IMPLEMENTATION	0.8371156927859902	WITHOUT_CLASSIFICATION	0.08612514507635784	DEFECT	0.0671130023553537	DESIGN	0.00809393465589228	IMPLEMENTATION	0.0013444885097736233	TEST	2.0773661663247547E-4	DOCUMENTATION
// TODO : still need to make CollectionPersisters EntityMode-aware	IMPLEMENTATION	0.9883258709073719	DESIGN	0.009071583594492802	IMPLEMENTATION	0.0012055799833197722	TEST	7.11830367549366E-4	WITHOUT_CLASSIFICATION	4.5010412834114235E-4	DOCUMENTATION	2.3503101892493065E-4	DEFECT
//TODO: add owner argument!!	IMPLEMENTATION	0.6608789695219077	DESIGN	0.20150920110218573	IMPLEMENTATION	0.07807315028697932	WITHOUT_CLASSIFICATION	0.048792279211796914	DOCUMENTATION	0.009506550644553927	DEFECT	0.0012398492325762136	TEST
//TODO: formulas ?	IMPLEMENTATION	0.7434371731931729	WITHOUT_CLASSIFICATION	0.23341743009649701	DESIGN	0.02235867098521012	IMPLEMENTATION	3.086549912780627E-4	DEFECT	2.395789453598243E-4	TEST	2.384917884819686E-4	DOCUMENTATION
//TODO: include the rowids!!!!	IMPLEMENTATION	0.8008938127736791	DESIGN	0.1666996053255559	WITHOUT_CLASSIFICATION	0.025628102792501457	IMPLEMENTATION	0.0046871326067069105	DEFECT	0.0019460026147369444	DOCUMENTATION	1.4534388681976176E-4	TEST
// todo : cache this sql...	IMPLEMENTATION	0.9263789635820386	WITHOUT_CLASSIFICATION	0.07221333512130974	DESIGN	0.001376332630160876	DEFECT	1.4089983336421757E-5	IMPLEMENTATION	1.1272171547647806E-5	DOCUMENTATION	6.0065116065240635E-6	TEST
//TODO: create uk loaders for component properties	IMPLEMENTATION	0.9817637112117594	WITHOUT_CLASSIFICATION	0.01670734787261572	DESIGN	0.0012943228434461884	IMPLEMENTATION	1.009120606603639E-4	TEST	7.170450925949688E-5	DEFECT	6.200150225890626E-5	DOCUMENTATION
//TODO: cache this in an instvar	IMPLEMENTATION	0.9707419656314803	DESIGN	0.029118300693812715	WITHOUT_CLASSIFICATION	4.328058817667517E-5	DEFECT	4.1756350930767306E-5	DOCUMENTATION	4.1037288201827875E-5	TEST	1.3659447397623485E-5	IMPLEMENTATION
/////////////////////////////////////////////////////////////////////// // TODO : look at perhaps caching this...	IMPLEMENTATION	0.989788860908342	DESIGN	0.00706266598193622	IMPLEMENTATION	0.0029680731349796363	DEFECT	1.1912836841725763E-4	TEST	5.5045801071989584E-5	DOCUMENTATION	6.225805252983163E-6	WITHOUT_CLASSIFICATION
//TODO: eventually put this back in, once we think all is fixed //Object otherAlias = columnsUnique.put(qualifiedColumn, columnAlias);	IMPLEMENTATION	0.4958210577153285	IMPLEMENTATION	0.45368940028365584	DESIGN	0.049972478848635704	WITHOUT_CLASSIFICATION	2.258633405575593E-4	DEFECT	2.044668617802404E-4	DOCUMENTATION	8.673295004221332E-5	TEST
//TODO: if we support multiple fetch groups, we would need //      to clone the set of lazy properties!	IMPLEMENTATION	0.9957934874787518	WITHOUT_CLASSIFICATION	0.003883606160143087	DESIGN	2.2643298531516108E-4	IMPLEMENTATION	4.991516914357497E-5	TEST	4.4868203318594746E-5	DEFECT	1.6900033279081036E-6	DOCUMENTATION
//TODO: proxies!	IMPLEMENTATION	0.5964493192151756	IMPLEMENTATION	0.3379227207505938	WITHOUT_CLASSIFICATION	0.05051575528226538	DESIGN	0.012415524766142836	DEFECT	0.001441833632550574	DOCUMENTATION	0.0012548463532717246	TEST
//TODO: terrible implementation!	IMPLEMENTATION	0.922876771441631	IMPLEMENTATION	0.06123622184202338	WITHOUT_CLASSIFICATION	0.013064251504493207	DESIGN	0.0018193818291890548	DEFECT	8.865488150220526E-4	TEST	1.1682456764129721E-4	DOCUMENTATION
//TODO: proxies!	IMPLEMENTATION	0.5964493192151756	IMPLEMENTATION	0.3379227207505938	WITHOUT_CLASSIFICATION	0.05051575528226538	DESIGN	0.012415524766142836	DEFECT	0.001441833632550574	DOCUMENTATION	0.0012548463532717246	TEST
// TODO: I don't really like this implementation; it would be better if // this was handled by searchForDirtyCollections()	IMPLEMENTATION	0.7076573475732905	DESIGN	0.2774127211258272	IMPLEMENTATION	0.014862452167885702	DEFECT	6.218256941885005E-5	TEST	4.9601737470963484E-6	WITHOUT_CLASSIFICATION	3.3638983054806094E-7	DOCUMENTATION
// TODO: check if key contains the owner ID	IMPLEMENTATION	0.878245969241966	IMPLEMENTATION	0.11891941770918345	WITHOUT_CLASSIFICATION	0.0020674025261904158	DESIGN	6.061317563476697E-4	DEFECT	1.3564224966488387E-4	DOCUMENTATION	2.5436516647582726E-5	TEST
//TODO: proxies!	IMPLEMENTATION	0.5964493192151756	IMPLEMENTATION	0.3379227207505938	WITHOUT_CLASSIFICATION	0.05051575528226538	DESIGN	0.012415524766142836	DEFECT	0.001441833632550574	DOCUMENTATION	0.0012548463532717246	TEST
// table=null -> an association // - fill it in later //TODO fill in the mappings for table == null	IMPLEMENTATION	0.991883099697861	WITHOUT_CLASSIFICATION	0.006193772041494363	DESIGN	0.001114963606910593	TEST	7.705418603658945E-4	DEFECT	2.0870074445818896E-5	IMPLEMENTATION	1.6752718922424716E-5	DOCUMENTATION
// table=null -> an association - fill // it in later //TODO fill in the mappings for table == null	IMPLEMENTATION	0.9925349868383317	WITHOUT_CLASSIFICATION	0.006303781780288009	DESIGN	8.327010480629043E-4	TEST	3.170941325940099E-4	DEFECT	7.330821099143687E-6	DOCUMENTATION	4.105379624129491E-6	IMPLEMENTATION
// if we are still not resolved, we might represent a constant. //      needed to add this here because the allowance of //      naked-prop-refs in the grammar collides with the //      definition of literals/constants ("nondeterminism"). //      TODO: cleanup the grammar so that "processConstants" is always just handled from here	IMPLEMENTATION	0.9999450598013498	DESIGN	4.257400162754401E-5	WITHOUT_CLASSIFICATION	1.1649993418113699E-5	IMPLEMENTATION	6.805331941710748E-7	DOCUMENTATION	3.324781953120754E-8	TEST	2.422590756594012E-9	DEFECT
//TODO: add referencedClass to disambiguate to FKs on the same //      columns, pointing to different tables	IMPLEMENTATION	0.9999386435713731	WITHOUT_CLASSIFICATION	3.17302307266617E-5	DESIGN	2.2513413632321343E-5	IMPLEMENTATION	5.3924867756502795E-6	DEFECT	1.478957193535575E-6	DOCUMENTATION	2.4134029886512487E-7	TEST
//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9997335257524259	WITHOUT_CLASSIFICATION	2.3201955044399448E-4	TEST	3.148293167711901E-5	IMPLEMENTATION	2.115431666814148E-6	DESIGN	6.650580025686308E-7	DOCUMENTATION	1.9127578369188682E-7	DEFECT
// aload_0	WITHOUT_CLASSIFICATION	0.9999989659492418	WITHOUT_CLASSIFICATION	7.415415008677523E-7	DESIGN	1.8117799127319547E-7	DEFECT	8.043687374314102E-8	IMPLEMENTATION	1.8577157543744163E-8	DOCUMENTATION	1.2317234737027217E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999989659492418	WITHOUT_CLASSIFICATION	7.415415008677523E-7	DESIGN	1.8117799127319547E-7	DEFECT	8.043687374314102E-8	IMPLEMENTATION	1.8577157543744163E-8	DOCUMENTATION	1.2317234737027217E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999989659492418	WITHOUT_CLASSIFICATION	7.415415008677523E-7	DESIGN	1.8117799127319547E-7	DEFECT	8.043687374314102E-8	IMPLEMENTATION	1.8577157543744163E-8	DOCUMENTATION	1.2317234737027217E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999989659492418	WITHOUT_CLASSIFICATION	7.415415008677523E-7	DESIGN	1.8117799127319547E-7	DEFECT	8.043687374314102E-8	IMPLEMENTATION	1.8577157543744163E-8	DOCUMENTATION	1.2317234737027217E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999989659492418	WITHOUT_CLASSIFICATION	7.415415008677523E-7	DESIGN	1.8117799127319547E-7	DEFECT	8.043687374314102E-8	IMPLEMENTATION	1.8577157543744163E-8	DOCUMENTATION	1.2317234737027217E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999989659492418	WITHOUT_CLASSIFICATION	7.415415008677523E-7	DESIGN	1.8117799127319547E-7	DEFECT	8.043687374314102E-8	IMPLEMENTATION	1.8577157543744163E-8	DOCUMENTATION	1.2317234737027217E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999989659492418	WITHOUT_CLASSIFICATION	7.415415008677523E-7	DESIGN	1.8117799127319547E-7	DEFECT	8.043687374314102E-8	IMPLEMENTATION	1.8577157543744163E-8	DOCUMENTATION	1.2317234737027217E-8	TEST
// return	WITHOUT_CLASSIFICATION	0.999984408469194	WITHOUT_CLASSIFICATION	1.4908320183563284E-5	DESIGN	5.55059187928893E-7	DEFECT	1.1030359667823906E-7	IMPLEMENTATION	1.2700160703915393E-8	DOCUMENTATION	5.1476771562297136E-9	TEST
// return	WITHOUT_CLASSIFICATION	0.999984408469194	WITHOUT_CLASSIFICATION	1.4908320183563284E-5	DESIGN	5.55059187928893E-7	DEFECT	1.1030359667823906E-7	IMPLEMENTATION	1.2700160703915393E-8	DOCUMENTATION	5.1476771562297136E-9	TEST
/* | this | bean | args | raw bean | */	WITHOUT_CLASSIFICATION	0.9988414060141503	WITHOUT_CLASSIFICATION	0.0011432817422989219	DESIGN	6.658820269705908E-6	IMPLEMENTATION	4.2499593861298915E-6	DEFECT	3.5302054801909183E-6	TEST	8.732584147190118E-7	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999946676176501	WITHOUT_CLASSIFICATION	5.030911012825353E-6	DESIGN	2.447703849982155E-7	DEFECT	3.335437547917709E-8	DOCUMENTATION	1.8500613758346057E-8	TEST	4.8459627868463225E-9	IMPLEMENTATION
// astore 4 // store the raw bean	WITHOUT_CLASSIFICATION	0.9999997181431486	WITHOUT_CLASSIFICATION	1.772323729794111E-7	DESIGN	8.198177958729185E-8	IMPLEMENTATION	1.2322862391580148E-8	TEST	7.485286910890582E-9	DEFECT	2.8345495376953428E-9	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.999998706086504	WITHOUT_CLASSIFICATION	6.884865069470363E-7	DESIGN	5.468801076430515E-7	DEFECT	5.0837190214708004E-8	DOCUMENTATION	4.542837047092472E-9	IMPLEMENTATION	3.16685414962304E-9	TEST
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.999998706086504	WITHOUT_CLASSIFICATION	6.884865069470363E-7	DESIGN	5.468801076430515E-7	DEFECT	5.0837190214708004E-8	DOCUMENTATION	4.542837047092472E-9	IMPLEMENTATION	3.16685414962304E-9	TEST
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999994597097083	WITHOUT_CLASSIFICATION	5.322424641550772E-7	DESIGN	4.242532429863917E-9	DEFECT	2.188439090013706E-9	IMPLEMENTATION	1.1828620148503853E-9	TEST	4.339939604449182E-10	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999997251508908	WITHOUT_CLASSIFICATION	2.0752953890470072E-7	DEFECT	3.370186801631711E-8	DESIGN	2.301324147680867E-8	IMPLEMENTATION	9.558709918745678E-9	TEST	1.045750884734028E-9	DOCUMENTATION
// putfield // new value of the field	WITHOUT_CLASSIFICATION	0.9999958638920304	WITHOUT_CLASSIFICATION	3.0348207601029315E-6	DESIGN	5.005292902652111E-7	IMPLEMENTATION	4.6343061952904633E-7	DEFECT	1.0586630229150705E-7	TEST	3.146099734852993E-8	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999673239288345	WITHOUT_CLASSIFICATION	2.6206629640172208E-5	DESIGN	5.126488021249443E-6	DEFECT	1.0447818869858122E-6	IMPLEMENTATION	2.7955425727734137E-7	DOCUMENTATION	1.8617359771001436E-8	TEST
// double	WITHOUT_CLASSIFICATION	0.9999908202651141	WITHOUT_CLASSIFICATION	7.493043704126756E-6	DESIGN	1.5748370928539308E-6	DEFECT	5.723615566135459E-8	IMPLEMENTATION	2.98765025468218E-8	DOCUMENTATION	2.4741430790997937E-8	TEST
// double	WITHOUT_CLASSIFICATION	0.9999908202651141	WITHOUT_CLASSIFICATION	7.493043704126756E-6	DESIGN	1.5748370928539308E-6	DEFECT	5.723615566135459E-8	IMPLEMENTATION	2.98765025468218E-8	DOCUMENTATION	2.4741430790997937E-8	TEST
// long	WITHOUT_CLASSIFICATION	0.999989538425118	WITHOUT_CLASSIFICATION	7.729673523957525E-6	DEFECT	2.4495484857396898E-6	DESIGN	1.6624626008159318E-7	IMPLEMENTATION	6.62800647369496E-8	TEST	4.9826547583022576E-8	DOCUMENTATION
// just decrement the lock, don't recache // (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.9978222427793088	WITHOUT_CLASSIFICATION	0.002003537183034613	IMPLEMENTATION	1.521460597096571E-4	DESIGN	1.999222872123709E-5	DOCUMENTATION	1.5987916909905843E-6	DEFECT	4.829575346991005E-7	TEST
// decode row selection...	WITHOUT_CLASSIFICATION	0.9986958730685913	WITHOUT_CLASSIFICATION	7.906536907875285E-4	DEFECT	4.958133311457042E-4	DESIGN	1.6133165184616974E-5	IMPLEMENTATION	1.2654479199415962E-6	DOCUMENTATION	2.6129637085573203E-7	TEST
//disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.9999828650555549	WITHOUT_CLASSIFICATION	1.6008830234676204E-5	DESIGN	1.080639604639875E-6	DEFECT	3.8835932817307937E-8	TEST	4.938792204732832E-9	DOCUMENTATION	1.6998807248979424E-9	IMPLEMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999998234850813	WITHOUT_CLASSIFICATION	1.6883086186283968E-7	DESIGN	7.654360622749609E-9	DEFECT	1.5548637513143983E-11	TEST	1.0698825278447025E-11	IMPLEMENTATION	3.4486005202566155E-12	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999817537611164	WITHOUT_CLASSIFICATION	1.7470727956088167E-5	DESIGN	5.339243704147941E-7	DEFECT	1.046843313802487E-7	DOCUMENTATION	8.393790029057906E-8	TEST	5.2964325414573193E-8	IMPLEMENTATION
// ROW ID	WITHOUT_CLASSIFICATION	0.9999774645037887	WITHOUT_CLASSIFICATION	1.3082961848201471E-5	DESIGN	4.786151453632323E-6	IMPLEMENTATION	3.938666097753176E-6	DEFECT	4.032307270243822E-7	DOCUMENTATION	3.2448608474025317E-7	TEST
// COMPOSITE-ID	WITHOUT_CLASSIFICATION	0.9999997332811378	WITHOUT_CLASSIFICATION	1.2076315693230732E-7	DESIGN	6.22371803259405E-8	DEFECT	4.583346037113666E-8	IMPLEMENTATION	2.6763318104241653E-8	DOCUMENTATION	1.1121746539395242E-8	TEST
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999506983276464	WITHOUT_CLASSIFICATION	4.231542763333208E-5	IMPLEMENTATION	3.890037071298313E-6	DESIGN	1.7521042399412528E-6	DEFECT	9.607044430511994E-7	DOCUMENTATION	3.8339896595777214E-7	TEST
/*	WITHOUT_CLASSIFICATION	0.933244904112182	WITHOUT_CLASSIFICATION	0.05759605816623468	DESIGN	0.005922678791583738	DEFECT	0.0029694107811799168	IMPLEMENTATION	1.595747323387444E-4	DOCUMENTATION	1.0737341648099305E-4	TEST
// DYNAMIC INSERT	WITHOUT_CLASSIFICATION	0.9999749209761172	WITHOUT_CLASSIFICATION	1.47331323535244E-5	IMPLEMENTATION	9.329781410861025E-6	DESIGN	4.136921706414451E-7	DOCUMENTATION	4.1364016389287066E-7	DEFECT	1.887777839525601E-7	TEST
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999964701227891	WITHOUT_CLASSIFICATION	1.789060632179586E-6	IMPLEMENTATION	1.1132772521212742E-6	DESIGN	3.67756004199218E-7	DEFECT	1.7619718359759419E-7	DOCUMENTATION	8.358613872629902E-8	TEST
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999942684930466	WITHOUT_CLASSIFICATION	5.696088359828178E-6	DESIGN	3.3853100690732344E-8	DEFECT	1.1411676719872936E-9	TEST	3.985913479498861E-10	DOCUMENTATION	2.57337502372686E-11	IMPLEMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999953783240696	WITHOUT_CLASSIFICATION	2.3940126939104046E-6	DESIGN	1.6200709601076645E-6	IMPLEMENTATION	2.7597417270661865E-7	DEFECT	2.234356539531748E-7	DOCUMENTATION	1.0818244973676646E-7	TEST
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999953783240696	WITHOUT_CLASSIFICATION	2.3940126939104046E-6	DESIGN	1.6200709601076645E-6	IMPLEMENTATION	2.7597417270661865E-7	DEFECT	2.234356539531748E-7	DOCUMENTATION	1.0818244973676646E-7	TEST
// generated properties can *never* be insertable...	WITHOUT_CLASSIFICATION	0.9999524865326417	WITHOUT_CLASSIFICATION	4.656561719924572E-5	DESIGN	9.30033709087724E-7	DEFECT	1.2988978781013971E-8	TEST	3.766770367252873E-9	IMPLEMENTATION	1.0607006814773615E-9	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9999973838235482	WITHOUT_CLASSIFICATION	1.5132732253505045E-6	DESIGN	8.207002128458885E-7	DEFECT	1.4349984586051218E-7	IMPLEMENTATION	7.894675570269289E-8	DOCUMENTATION	5.975641206895877E-8	TEST
//by default, natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.9999956581899894	WITHOUT_CLASSIFICATION	4.2643233570453755E-6	DESIGN	6.772210067548026E-8	IMPLEMENTATION	7.176209030535404E-9	DEFECT	1.9980761151051933E-9	DOCUMENTATION	5.90267902727989E-10	TEST
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999206579742573	WITHOUT_CLASSIFICATION	4.055961563795111E-5	DESIGN	3.128631117461922E-5	IMPLEMENTATION	7.3441594387392755E-6	DEFECT	1.3097844466804577E-7	TEST	2.0961046674792136E-8	DOCUMENTATION
// we found some extends attributes referencing entities which were // not already processed.  here we need to locate all entity-names // and class-names contained in this document itself, making sure // that these get removed from the extendz list such that only // extends names which require us to delay processing (i.e. // external to this document and not yet processed) are contained // in the returned result	WITHOUT_CLASSIFICATION	0.852712716501143	DESIGN	0.14728027153046333	WITHOUT_CLASSIFICATION	6.276381114652907E-6	DOCUMENTATION	7.320133713822784E-7	IMPLEMENTATION	3.551893573149776E-9	TEST	2.2014067191260186E-11	DEFECT
/**	WITHOUT_CLASSIFICATION	0.4105629660680269	DOCUMENTATION	0.38067849588335895	DESIGN	0.10486748836536479	IMPLEMENTATION	0.03838592522123044	WITHOUT_CLASSIFICATION	0.033938355862457185	DEFECT	0.03156676859956161	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
/**	WITHOUT_CLASSIFICATION	0.4105629660680269	DOCUMENTATION	0.38067849588335895	DESIGN	0.10486748836536479	IMPLEMENTATION	0.03838592522123044	WITHOUT_CLASSIFICATION	0.033938355862457185	DEFECT	0.03156676859956161	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// If close() is called, guarantee unbind()	WITHOUT_CLASSIFICATION	0.9999999107397379	WITHOUT_CLASSIFICATION	5.0820005635615244E-8	IMPLEMENTATION	3.7468009057980704E-8	DEFECT	6.63823716494773E-10	TEST	1.6290301287553946E-10	DESIGN	1.4552050791508455E-10	DOCUMENTATION
// if a ThreadLocalSessionContext-bound session happens to get // serialized, to be completely correct, we need to make sure // that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.9999992227141455	WITHOUT_CLASSIFICATION	6.763617213046357E-7	DESIGN	9.696481934905361E-8	DEFECT	3.307082716929913E-9	TEST	4.2490197164924913E-10	DOCUMENTATION	2.2732914154594545E-10	IMPLEMENTATION
// on the inverse, it makes sense that if a ThreadLocalSessionContext- // bound session then gets deserialized to go ahead and re-bind it to // the ThreadLocalSessionContext session map.	WITHOUT_CLASSIFICATION	0.9999999826106669	WITHOUT_CLASSIFICATION	1.6322313732729176E-8	DESIGN	7.941220185045254E-10	DEFECT	1.7762710640328083E-10	IMPLEMENTATION	6.47404655182627E-11	TEST	3.052972406521743E-11	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9993262603102323	WITHOUT_CLASSIFICATION	6.730020955168756E-4	DESIGN	5.258255781649275E-7	DEFECT	1.1989290325623498E-7	DOCUMENTATION	6.700702380892609E-8	TEST	2.4868745676976936E-8	IMPLEMENTATION
// 60 second lock timeout	WITHOUT_CLASSIFICATION	0.9999446545848217	WITHOUT_CLASSIFICATION	3.943100941098441E-5	DEFECT	1.4919367709320526E-5	DESIGN	6.675190682482376E-7	DOCUMENTATION	2.815494778735141E-7	IMPLEMENTATION	4.596951186170819E-8	TEST
// OptimisticCache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999982369493814	WITHOUT_CLASSIFICATION	8.134222912557875E-7	DESIGN	7.850825094784006E-7	IMPLEMENTATION	7.223577180081397E-8	DEFECT	6.38067342699944E-8	TEST	2.8503311948135584E-8	DOCUMENTATION
// Cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999946115680886	WITHOUT_CLASSIFICATION	4.177679860942063E-6	DESIGN	5.773345333957751E-7	DEFECT	5.160584881603365E-7	IMPLEMENTATION	7.147725555198925E-8	TEST	4.5881773426809166E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// do the put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999862933489557	WITHOUT_CLASSIFICATION	1.2928654853747553E-5	DESIGN	3.772552325710448E-7	DEFECT	2.1311538241566728E-7	DOCUMENTATION	1.775557239092798E-7	IMPLEMENTATION	1.0069851631844651E-8	TEST
//ignore!	WITHOUT_CLASSIFICATION	0.9999752012823387	WITHOUT_CLASSIFICATION	1.0907954228405855E-5	DEFECT	1.0548201764541809E-5	DESIGN	1.6716903984750685E-6	IMPLEMENTATION	1.360865456674626E-6	DOCUMENTATION	3.1000581327902934E-7	TEST
// tree cache in optimistic mode seems to have as very difficult // time with remove calls on non-existent nodes (NPEs)...	WITHOUT_CLASSIFICATION	0.9995884864175696	WITHOUT_CLASSIFICATION	4.1045183177288965E-4	DEFECT	1.0041651232293808E-6	DESIGN	5.41468160719485E-8	IMPLEMENTATION	1.901095382309524E-9	DOCUMENTATION	1.537622655244884E-9	TEST
//60 seconds	WITHOUT_CLASSIFICATION	0.9999324102172005	WITHOUT_CLASSIFICATION	3.374837599152982E-5	DESIGN	1.943371832023996E-5	IMPLEMENTATION	1.0845907623910278E-5	DEFECT	3.2194442176263527E-6	DOCUMENTATION	3.4233664620568415E-7	TEST
//ignore!	WITHOUT_CLASSIFICATION	0.9999752012823387	WITHOUT_CLASSIFICATION	1.0907954228405855E-5	DEFECT	1.0548201764541809E-5	DESIGN	1.6716903984750685E-6	IMPLEMENTATION	1.360865456674626E-6	DOCUMENTATION	3.1000581327902934E-7	TEST
//60 seconds	WITHOUT_CLASSIFICATION	0.9999324102172005	WITHOUT_CLASSIFICATION	3.374837599152982E-5	DESIGN	1.943371832023996E-5	IMPLEMENTATION	1.0845907623910278E-5	DEFECT	3.2194442176263527E-6	DOCUMENTATION	3.4233664620568415E-7	TEST
//do the failfast put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999990309819878	WITHOUT_CLASSIFICATION	6.14796882692906E-7	DESIGN	1.7350537074784328E-7	DEFECT	7.554674160451497E-8	DOCUMENTATION	6.54995137250301E-8	TEST	3.966950326182848E-8	IMPLEMENTATION
// NOTE : evict() operates locally only (i.e., does not propogate // to any other nodes in the potential cluster).  This is // exactly what is needed when we destroy() here; destroy() is used // as part of the process of shutting down a SessionFactory; thus // these removals should not be propogated	WITHOUT_CLASSIFICATION	0.9671987764725554	DESIGN	0.03279449208134573	WITHOUT_CLASSIFICATION	5.447308520762612E-6	TEST	1.2713374110344568E-6	DEFECT	1.1648388335067813E-8	DOCUMENTATION	1.151778839585317E-9	IMPLEMENTATION
//    protected RegionRootListener listener;	WITHOUT_CLASSIFICATION	0.9999977951385941	WITHOUT_CLASSIFICATION	1.1605195482878973E-6	IMPLEMENTATION	7.255176195966828E-7	DEFECT	2.391512921878438E-7	DESIGN	7.273721754446025E-8	TEST	6.9357281620133205E-9	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.999881268180995	WITHOUT_CLASSIFICATION	9.128833293541484E-5	DESIGN	2.1798051154502604E-5	IMPLEMENTATION	5.5764384600016024E-6	DEFECT	4.6805229043846903E-8	TEST	2.219122617332704E-8	DOCUMENTATION
// If we've been blocking for the mutex, perhaps another // thread has already reestablished the root. // In case the node was reestablised via replication, confirm it's  // marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.9999850703728205	WITHOUT_CLASSIFICATION	1.1580388385082234E-5	DESIGN	3.0856113613922696E-6	DEFECT	2.2032344429867356E-7	DOCUMENTATION	2.3756648137717352E-8	IMPLEMENTATION	1.9547340610168874E-8	TEST
// For pessimistic locking, we just want to toss out our ref // to any old invalid root node and get the latest (may be null)            	WITHOUT_CLASSIFICATION	0.9999959600060297	WITHOUT_CLASSIFICATION	1.7220453850946017E-6	DESIGN	1.6727066637447503E-6	TEST	6.171621772097476E-7	DEFECT	1.5278449420365174E-8	DOCUMENTATION	1.2801294939807623E-8	IMPLEMENTATION
// The rest only matters for optimistic locking, where we // need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.9892667741593586	WITHOUT_CLASSIFICATION	0.008375894422979624	DESIGN	0.001670044137237799	DEFECT	4.8027411450031525E-4	IMPLEMENTATION	1.4278157399531704E-4	TEST	6.423159192845946E-5	DOCUMENTATION
// Don't hold a transactional lock for this 	WITHOUT_CLASSIFICATION	0.9654290539769134	WITHOUT_CLASSIFICATION	0.0340443911479028	DESIGN	3.291525738324696E-4	IMPLEMENTATION	1.5781979071693378E-4	DEFECT	3.555785735992328E-5	DOCUMENTATION	4.024653274419972E-6	TEST
// Make sure the root node for the region exists and  // has a DataVersion that never complains	WITHOUT_CLASSIFICATION	0.9999984120332733	WITHOUT_CLASSIFICATION	1.455301846605868E-6	IMPLEMENTATION	1.0785685572461489E-7	DESIGN	2.4232342436018122E-8	DEFECT	4.2942266642570393E-10	TEST	1.4625921312505397E-10	DOCUMENTATION
// Never evict this node	WITHOUT_CLASSIFICATION	0.9996575553011025	WITHOUT_CLASSIFICATION	2.9682357574046674E-4	DESIGN	3.7549680649286644E-5	IMPLEMENTATION	5.8406386796092325E-6	TEST	1.3987261498058431E-6	DEFECT	8.320776782245164E-7	DOCUMENTATION
// Fix up the resident flag	WITHOUT_CLASSIFICATION	0.9999305521032422	WITHOUT_CLASSIFICATION	5.058645682656002E-5	IMPLEMENTATION	1.415030412119974E-5	DESIGN	3.689762278135545E-6	DEFECT	6.615752793454641E-7	TEST	3.597982526022794E-7	DOCUMENTATION
// 60 seconds	WITHOUT_CLASSIFICATION	0.9999870739563361	WITHOUT_CLASSIFICATION	4.88549872700174E-6	IMPLEMENTATION	4.4896978550026986E-6	DEFECT	3.1040381183144197E-6	DESIGN	3.9364218862184963E-7	DOCUMENTATION	5.3166774930923146E-8	TEST
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999999986861903	WITHOUT_CLASSIFICATION	9.754981030888578E-10	DESIGN	3.0019549277090474E-10	DEFECT	3.2689479988988626E-11	IMPLEMENTATION	4.490716074250225E-12	TEST	9.360038390021707E-13	DOCUMENTATION
// no-op. We don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.9998215193905158	WITHOUT_CLASSIFICATION	1.7424632269651436E-4	DESIGN	2.5088533586597707E-6	IMPLEMENTATION	1.6411592406461186E-6	DEFECT	7.124439670434608E-8	DOCUMENTATION	1.3029791693341948E-8	TEST
// This should only be possible if the caches are constructor injected 	WITHOUT_CLASSIFICATION	0.9967465434368853	WITHOUT_CLASSIFICATION	0.003249076156277706	DESIGN	2.5584773478521412E-6	IMPLEMENTATION	1.187448229152305E-6	DEFECT	6.287134046714248E-7	TEST	5.767855092416664E-9	DOCUMENTATION
// We only build caches if *none* were passed in.  Passing in // caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.9999178156529318	WITHOUT_CLASSIFICATION	7.511021755375465E-5	DESIGN	6.4657398555720564E-6	DEFECT	6.041326369143518E-7	TEST	3.988164655259515E-9	DOCUMENTATION	2.688573401973419E-10	IMPLEMENTATION
// Set up the cache factory	WITHOUT_CLASSIFICATION	0.9989946841186177	WITHOUT_CLASSIFICATION	0.001004887649557198	DESIGN	3.802071838058763E-7	DEFECT	2.660076107521737E-8	DOCUMENTATION	1.3861448372015209E-8	TEST	7.562431749986677E-9	IMPLEMENTATION
// See if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.9998574993121019	WITHOUT_CLASSIFICATION	1.3031084309465932E-4	DESIGN	6.3065892029276335E-6	IMPLEMENTATION	5.633276484341327E-6	DEFECT	1.551200842990955E-7	TEST	9.48590318436509E-8	DOCUMENTATION
// Default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999930209819617	WITHOUT_CLASSIFICATION	6.968949243348189E-6	DESIGN	5.786929022559801E-9	DEFECT	2.802750170443285E-9	TEST	1.3740133243061195E-9	IMPLEMENTATION	1.0510243664481956E-10	DOCUMENTATION
// Default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999994211045485	WITHOUT_CLASSIFICATION	5.759838104769365E-7	DESIGN	2.7282715318695098E-9	DEFECT	1.6069789537407214E-10	TEST	1.8922739089511898E-11	DOCUMENTATION	3.748793046856351E-12	IMPLEMENTATION
// For Timestamps, we default to a separate config	WITHOUT_CLASSIFICATION	0.9999984029644788	WITHOUT_CLASSIFICATION	7.728619299226281E-7	DEFECT	3.3340530224038983E-7	DESIGN	2.935329079232692E-7	TEST	1.7934608538923045E-7	IMPLEMENTATION	1.7889295807036776E-8	DOCUMENTATION
// We can't change the TM on a running cache; just check // if the cache has no TM and we're OK with that	WITHOUT_CLASSIFICATION	0.9999999532624779	WITHOUT_CLASSIFICATION	4.646568952136241E-8	DESIGN	1.2149564644617068E-10	DEFECT	6.778758527034982E-11	IMPLEMENTATION	6.676168990385776E-11	TEST	1.5787724401954007E-11	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9999647933946569	WITHOUT_CLASSIFICATION	3.4878700652674965E-5	DESIGN	3.002928934400143E-7	IMPLEMENTATION	2.055332878207654E-8	DOCUMENTATION	5.902978846410247E-9	DEFECT	1.155489278662355E-9	TEST
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999955802516537	WITHOUT_CLASSIFICATION	2.9727780990545057E-6	DESIGN	1.1590788921929377E-6	DEFECT	1.4412386773661918E-7	TEST	1.1958382138187917E-7	IMPLEMENTATION	2.4183665957472503E-8	DOCUMENTATION
// This method should be implemented assuming it's valid to  // do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.9274533602460401	DESIGN	0.07215192486411563	WITHOUT_CLASSIFICATION	2.1427460841190964E-4	IMPLEMENTATION	1.329217756724197E-4	DEFECT	4.726857196845177E-5	TEST	2.499337916883713E-7	DOCUMENTATION
// Make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.9999996228137192	WITHOUT_CLASSIFICATION	3.3065033974420275E-7	DESIGN	3.546768035513341E-8	DEFECT	6.528564121027943E-9	IMPLEMENTATION	3.883734121653467E-9	DOCUMENTATION	6.55962535554481E-10	TEST
// We use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.9999999923592942	WITHOUT_CLASSIFICATION	7.615836942377147E-9	DESIGN	1.6994750911113262E-11	DOCUMENTATION	3.721578531689112E-12	IMPLEMENTATION	2.110992611330031E-12	DEFECT	2.0415952729707606E-12	TEST
// Following methods we don't delegate since they have so little logic // it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.7241042037416958	WITHOUT_CLASSIFICATION	0.2517869934104751	DESIGN	0.02400493977574568	IMPLEMENTATION	1.02054952341646E-4	TEST	1.563642107361028E-6	DOCUMENTATION	2.444776342784303E-7	DEFECT
// If JBC is using INVALIDATION, we don't want to propagate changes. // We use the Timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.9999999854199435	WITHOUT_CLASSIFICATION	9.785323279444284E-9	DEFECT	3.1815555430414144E-9	DESIGN	1.1056944652474429E-9	TEST	4.0128259575097827E-10	DOCUMENTATION	1.062007125598689E-10	IMPLEMENTATION
// We don't want to waste effort setting an option if JBC is // already in LOCAL mode. If JBC is REPL_(A)SYNC then check // if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.9999986746303499	WITHOUT_CLASSIFICATION	1.236184590456256E-6	IMPLEMENTATION	5.978727566657918E-8	DESIGN	1.9757953785517393E-8	TEST	6.631617117556356E-9	DOCUMENTATION	3.008213081683685E-9	DEFECT
// Don't hold the JBC node lock throughout the tx, as that // prevents updates // Add a zero (or low) timeout option so we don't block // waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.9999997963089592	WITHOUT_CLASSIFICATION	1.3953109986086547E-7	DEFECT	5.3981079173969113E-8	IMPLEMENTATION	6.978267626885996E-9	DOCUMENTATION	2.261728954381297E-9	TEST	9.38865142192636E-10	DESIGN
// Double check the distributed cache	WITHOUT_CLASSIFICATION	0.9999998941371308	WITHOUT_CLASSIFICATION	6.882578156201522E-8	IMPLEMENTATION	3.509581472606272E-8	DESIGN	8.651969687167062E-10	DOCUMENTATION	6.312086201785891E-10	TEST	4.4486736211801763E-10	DEFECT
// Get an exclusive right to update JBC for this key from this node.	WITHOUT_CLASSIFICATION	0.9999857894383871	WITHOUT_CLASSIFICATION	1.3581617247585911E-5	DESIGN	6.262756058556567E-7	DEFECT	1.9524280969084665E-9	DOCUMENTATION	6.682594543960955E-10	TEST	4.807188888741224E-11	IMPLEMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9999402642622651	WITHOUT_CLASSIFICATION	4.828489666981085E-5	DESIGN	1.1084455350023515E-5	DEFECT	2.434360200461125E-7	IMPLEMENTATION	1.1455546937493019E-7	DOCUMENTATION	8.394225730578589E-9	TEST
// Initial load from JBC	WITHOUT_CLASSIFICATION	0.9999998349615108	WITHOUT_CLASSIFICATION	1.5585287747888783E-7	DEFECT	5.327229544750327E-9	DESIGN	1.5122981035045017E-9	TEST	1.2422850096461803E-9	IMPLEMENTATION	1.1037989094811038E-9	DOCUMENTATION
// See if we had a 2nd invalidation from the same initial // preinvalidation timestamp. If so, only increment // if the new current value is an increase	WITHOUT_CLASSIFICATION	0.9999999995710315	WITHOUT_CLASSIFICATION	4.1507200982355974E-10	DEFECT	8.76837187888084E-12	DOCUMENTATION	3.5587868387559867E-12	TEST	1.5546576787686814E-12	DESIGN	1.4645981907226228E-14	IMPLEMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9999402642622651	WITHOUT_CLASSIFICATION	4.828489666981085E-5	DESIGN	1.1084455350023515E-5	DEFECT	2.434360200461125E-7	IMPLEMENTATION	1.1455546937493019E-7	DOCUMENTATION	8.394225730578589E-9	TEST
// If the workspace node has null as well, OK; if not we've // been modified in a non-comparable manner, which we have to // treat as us being newer	WITHOUT_CLASSIFICATION	0.9999999780058194	WITHOUT_CLASSIFICATION	1.6574016637905368E-8	DEFECT	3.4485674403630376E-9	DESIGN	1.8909005454229528E-9	IMPLEMENTATION	6.428390780100885E-11	TEST	1.6412075463763338E-11	DOCUMENTATION
// The standard comparator types are not Serializable but are singletons	WITHOUT_CLASSIFICATION	0.9999990510488166	WITHOUT_CLASSIFICATION	7.004284645110649E-7	DEFECT	2.465016557515624E-7	DESIGN	1.1396965531400693E-9	IMPLEMENTATION	8.094542529440149E-10	TEST	7.191232933451006E-11	DOCUMENTATION
// ignore!	WITHOUT_CLASSIFICATION	0.9999987390117117	WITHOUT_CLASSIFICATION	7.028625004273496E-7	DEFECT	3.5901055658425335E-7	DESIGN	1.5108542683677254E-7	IMPLEMENTATION	3.4054757506725974E-8	DOCUMENTATION	1.3975046989449337E-8	TEST
// ignore it	WITHOUT_CLASSIFICATION	0.9999983817378758	WITHOUT_CLASSIFICATION	1.2836499879580976E-6	DESIGN	2.363942606708512E-7	DEFECT	6.38522045145197E-8	IMPLEMENTATION	2.3066541033033825E-8	DOCUMENTATION	1.1299129886540259E-8	TEST
// construct the cache	WITHOUT_CLASSIFICATION	0.9999736931086147	WITHOUT_CLASSIFICATION	2.4337362449378427E-5	DESIGN	1.6873413168730708E-6	IMPLEMENTATION	1.358087692370261E-7	DEFECT	7.857095454716192E-8	TEST	6.780789514176164E-8	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999992155926104	WITHOUT_CLASSIFICATION	3.279141848768513E-7	DESIGN	3.126234205724621E-7	DEFECT	1.4331980122641933E-7	DOCUMENTATION	3.8232873355457965E-10	IMPLEMENTATION	1.6765419121141259E-10	TEST
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999992155926104	WITHOUT_CLASSIFICATION	3.279141848768513E-7	DESIGN	3.126234205724621E-7	DEFECT	1.4331980122641933E-7	DOCUMENTATION	3.8232873355457965E-10	IMPLEMENTATION	1.6765419121141259E-10	TEST
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999306312700811	WITHOUT_CLASSIFICATION	4.301242292401611E-5	DESIGN	1.5409352671582975E-5	IMPLEMENTATION	9.484912573687125E-6	DEFECT	1.2578330978231146E-6	DOCUMENTATION	2.0420865183526234E-7	TEST
//swaldman 2006-08-28: define c3p0-style configuration parameters for initialPoolSize, which //                     hibernate sensibly lets default to minPoolSize, but we'll let users //                     override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.9999662035050748	WITHOUT_CLASSIFICATION	3.37445984231595E-5	DESIGN	1.798581134010058E-8	TEST	1.485220350762779E-8	IMPLEMENTATION	1.0842420725322874E-8	DOCUMENTATION	8.216066364207513E-9	DEFECT
/*DataSource unpooled = DataSources.unpooledDataSource(	WITHOUT_CLASSIFICATION	0.9998635729904642	WITHOUT_CLASSIFICATION	9.490881936669996E-5	IMPLEMENTATION	3.090278024141995E-5	DESIGN	8.616270954463829E-6	DEFECT	1.5941859470967014E-6	DOCUMENTATION	4.049530262269046E-7	TEST
// TRUE if the pool is borrowed from the outside, FALSE if we used to create it	WITHOUT_CLASSIFICATION	0.9999999974188806	WITHOUT_CLASSIFICATION	2.539825470551118E-9	DESIGN	2.690295441501836E-11	DEFECT	1.1385509918885656E-11	TEST	2.2480352696628302E-12	IMPLEMENTATION	7.574837586309792E-13	DOCUMENTATION
// get a connection from the pool (thru DriverManager, cfr. Proxool doc)	WITHOUT_CLASSIFICATION	0.9999994179355329	WITHOUT_CLASSIFICATION	5.708567311608665E-7	DESIGN	6.878307768060953E-9	DEFECT	2.232497911440927E-9	IMPLEMENTATION	1.9279501946249314E-9	DOCUMENTATION	1.689798649415828E-10	TEST
// set the Transaction Isolation if defined	WITHOUT_CLASSIFICATION	0.9999991620591777	WITHOUT_CLASSIFICATION	7.064702706018805E-7	DESIGN	1.2496345341832798E-7	IMPLEMENTATION	3.752386698600912E-9	TEST	2.5190685758396074E-9	DOCUMENTATION	2.356431013032624E-10	DEFECT
// toggle autoCommit to false if set	WITHOUT_CLASSIFICATION	0.9999998551924343	WITHOUT_CLASSIFICATION	7.123289519711004E-8	IMPLEMENTATION	3.637641354101931E-8	DEFECT	2.1741509568061153E-8	DESIGN	1.2753068444185848E-8	TEST	2.7036789839573763E-9	DOCUMENTATION
// return the connection	WITHOUT_CLASSIFICATION	0.9998757940219816	WITHOUT_CLASSIFICATION	1.174870045693591E-4	DESIGN	6.072173905723523E-6	DEFECT	4.7047608251375777E-7	IMPLEMENTATION	1.7016298083410007E-7	DOCUMENTATION	6.1604799595919154E-9	TEST
// Get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.9999468290416224	WITHOUT_CLASSIFICATION	4.5140538469961956E-5	DESIGN	6.2214639741484294E-6	IMPLEMENTATION	1.5965339004940943E-6	TEST	1.1577558286625235E-7	DOCUMENTATION	9.664645026037423E-8	DEFECT
// Default the Proxool alias setting	WITHOUT_CLASSIFICATION	0.9999999932584314	WITHOUT_CLASSIFICATION	3.5628740667477006E-9	DESIGN	2.0518155110659414E-9	IMPLEMENTATION	5.994771962019037E-10	DEFECT	2.9743162884697733E-10	DOCUMENTATION	2.2997013733527114E-10	TEST
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999988292830628	WITHOUT_CLASSIFICATION	1.1700809234901072E-6	DESIGN	2.4475145995818576E-10	IMPLEMENTATION	2.010663837897861E-10	DOCUMENTATION	1.3385030307098754E-10	DEFECT	5.63456798489293E-11	TEST
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999988292830628	WITHOUT_CLASSIFICATION	1.1700809234901072E-6	DESIGN	2.4475145995818576E-10	IMPLEMENTATION	2.010663837897861E-10	DOCUMENTATION	1.3385030307098754E-10	DEFECT	5.63456798489293E-11	TEST
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999753571378347	WITHOUT_CLASSIFICATION	2.1907268084531522E-5	IMPLEMENTATION	1.7750850080018503E-6	DEFECT	7.752024869823741E-7	DESIGN	1.728839166159016E-7	DOCUMENTATION	1.242266901480282E-8	TEST
// Set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.999999940400531	WITHOUT_CLASSIFICATION	4.014095379634388E-8	IMPLEMENTATION	8.26999558127031E-9	DEFECT	8.219832668987802E-9	DESIGN	1.6850126279979244E-9	DOCUMENTATION	1.2836743543236502E-9	TEST
// Configured using the JAXP Configurator	WITHOUT_CLASSIFICATION	0.9993148601230466	WITHOUT_CLASSIFICATION	6.831295978226078E-4	DESIGN	8.803115696933297E-7	TEST	7.194294214277303E-7	DEFECT	2.1929242045595333E-7	IMPLEMENTATION	1.912457193327954E-7	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999988292830628	WITHOUT_CLASSIFICATION	1.1700809234901072E-6	DESIGN	2.4475145995818576E-10	IMPLEMENTATION	2.010663837897861E-10	DOCUMENTATION	1.3385030307098754E-10	DEFECT	5.63456798489293E-11	TEST
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999753571378347	WITHOUT_CLASSIFICATION	2.1907268084531522E-5	IMPLEMENTATION	1.7750850080018503E-6	DEFECT	7.752024869823741E-7	DESIGN	1.728839166159016E-7	DOCUMENTATION	1.242266901480282E-8	TEST
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999753571378347	WITHOUT_CLASSIFICATION	2.1907268084531522E-5	IMPLEMENTATION	1.7750850080018503E-6	DEFECT	7.752024869823741E-7	DESIGN	1.728839166159016E-7	DOCUMENTATION	1.242266901480282E-8	TEST
// Configured using the Properties File Configurator	WITHOUT_CLASSIFICATION	0.9994243696905609	WITHOUT_CLASSIFICATION	5.742884815748104E-4	DESIGN	1.272761238876835E-6	TEST	2.987325753532206E-8	DEFECT	2.8263494889686937E-8	IMPLEMENTATION	1.0929873045273954E-8	DOCUMENTATION
// Remember Isolation level	WITHOUT_CLASSIFICATION	0.9996448356162793	WITHOUT_CLASSIFICATION	3.3727642103846425E-4	DESIGN	1.2379335660239984E-5	DEFECT	4.5572530323616884E-6	IMPLEMENTATION	5.324146882572876E-7	TEST	4.1895930143695994E-7	DOCUMENTATION
// If the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.9999999968141415	WITHOUT_CLASSIFICATION	3.1630702484768437E-9	DEFECT	7.089006244673024E-12	DOCUMENTATION	7.078227689171209E-12	TEST	5.554787373084555E-12	DESIGN	3.06616126687002E-12	IMPLEMENTATION
// We have created the pool ourselves, so shut it down	WITHOUT_CLASSIFICATION	0.9999982026819877	WITHOUT_CLASSIFICATION	1.59565783622149E-6	DESIGN	1.0261314675115702E-7	TEST	9.184602203887108E-8	IMPLEMENTATION	3.7747541610311285E-9	DOCUMENTATION	3.4262531246634512E-9	DEFECT
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9989582770089932	WITHOUT_CLASSIFICATION	4.8318603781865476E-4	IMPLEMENTATION	4.684237845406645E-4	DESIGN	8.578148934180689E-5	DEFECT	4.108629535299336E-6	DOCUMENTATION	2.230497704515578E-7	TEST
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9989582770089932	WITHOUT_CLASSIFICATION	4.8318603781865476E-4	IMPLEMENTATION	4.684237845406645E-4	DESIGN	8.578148934180689E-5	DEFECT	4.108629535299336E-6	DOCUMENTATION	2.230497704515578E-7	TEST
//always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.9999966688166639	WITHOUT_CLASSIFICATION	2.495952586091935E-6	IMPLEMENTATION	7.456032668556535E-7	DESIGN	7.40219918335336E-8	DEFECT	1.2877673616788527E-8	DOCUMENTATION	2.7278177810474243E-9	TEST
//public Currency getCurrency(int col) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9998784080538486	WITHOUT_CLASSIFICATION	1.214806797613709E-4	DESIGN	4.6069042488739394E-8	DEFECT	3.614496496258368E-8	DOCUMENTATION	2.5374586892676503E-8	TEST	3.677795540580242E-9	IMPLEMENTATION
// default is POJO	WITHOUT_CLASSIFICATION	0.9999982618013533	WITHOUT_CLASSIFICATION	6.713674610733125E-7	DESIGN	5.769473751198317E-7	DEFECT	4.3952776616647995E-7	IMPLEMENTATION	3.347190773807429E-8	TEST	1.6884136390039393E-8	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999717886259293	WITHOUT_CLASSIFICATION	2.7562580127445978E-5	DESIGN	4.6372402613890993E-7	DEFECT	1.2241833757333226E-7	IMPLEMENTATION	4.541463158901817E-8	TEST	1.7236947981359323E-8	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999717886259293	WITHOUT_CLASSIFICATION	2.7562580127445978E-5	DESIGN	4.6372402613890993E-7	DEFECT	1.2241833757333226E-7	IMPLEMENTATION	4.541463158901817E-8	TEST	1.7236947981359323E-8	DOCUMENTATION
//private CacheEntry cacheEntry;	WITHOUT_CLASSIFICATION	0.9999915510898333	WITHOUT_CLASSIFICATION	8.11805773578429E-6	DESIGN	2.00797162300103E-7	DEFECT	1.0175615754896331E-7	DOCUMENTATION	1.498095277898583E-8	IMPLEMENTATION	1.3318158515648412E-8	TEST
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9969370560998458	WITHOUT_CLASSIFICATION	0.0019755919052731304	DEFECT	7.336681592138234E-4	TEST	2.6070066176474494E-4	DESIGN	8.219029289831302E-5	IMPLEMENTATION	1.0792881003991318E-5	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9539017236214057	WITHOUT_CLASSIFICATION	0.04602485939870175	DESIGN	6.554549577143323E-5	DEFECT	5.837522395049158E-6	IMPLEMENTATION	1.152400166981004E-6	TEST	8.815615590802036E-7	DOCUMENTATION
// get the updated snapshot of the entity state by cloning current state; // it is safe to copy in place, since by this time no-one else (should have) // has a reference  to the array	WITHOUT_CLASSIFICATION	0.9999998858711405	WITHOUT_CLASSIFICATION	1.1298856717131847E-7	DESIGN	8.877299295568922E-10	DEFECT	2.0460592152331935E-10	IMPLEMENTATION	3.1021093891384754E-11	DOCUMENTATION	1.6935481201506998E-11	TEST
// this entity defines proeprty generation, so process those generated // values...	WITHOUT_CLASSIFICATION	0.9999934103005849	WITHOUT_CLASSIFICATION	6.575411014871177E-6	DESIGN	1.109065185273782E-8	DEFECT	1.9759660279732396E-9	DOCUMENTATION	1.2206740918982241E-9	TEST	1.108195090624503E-12	IMPLEMENTATION
// have the entity entry perform post-update processing, passing it the // update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.9999993410911724	WITHOUT_CLASSIFICATION	6.558739425302064E-7	DESIGN	1.5116882862196355E-9	DOCUMENTATION	1.1393240629233723E-9	DEFECT	2.9778125751864E-10	IMPLEMENTATION	8.609145460305915E-11	TEST
/*!persister.isCacheInvalidationRequired()*/	WITHOUT_CLASSIFICATION	0.9999934692053014	WITHOUT_CLASSIFICATION	2.576925612833186E-6	DEFECT	2.1311044928006003E-6	DESIGN	1.7301337757173441E-6	IMPLEMENTATION	6.782398531065543E-8	DOCUMENTATION	2.4806831939506466E-8	TEST
// need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.9995636537017472	WITHOUT_CLASSIFICATION	4.0162940761019904E-4	DESIGN	3.3195613540896876E-5	IMPLEMENTATION	5.48967777912867E-7	TEST	4.890236909525816E-7	DOCUMENTATION	4.832856328486361E-7	DEFECT
//sort first by role name	WITHOUT_CLASSIFICATION	0.9998221989454564	WITHOUT_CLASSIFICATION	1.75216927499974E-4	DESIGN	1.559590186737575E-6	TEST	5.028442249947824E-7	DEFECT	3.9884359922386347E-7	IMPLEMENTATION	1.2284903261965595E-7	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9539017236214057	WITHOUT_CLASSIFICATION	0.04602485939870175	DESIGN	6.554549577143323E-5	DEFECT	5.837522395049158E-6	IMPLEMENTATION	1.152400166981004E-6	TEST	8.815615590802036E-7	DOCUMENTATION
//then by fk	WITHOUT_CLASSIFICATION	0.9992460386631402	WITHOUT_CLASSIFICATION	4.2391387529201963E-4	DESIGN	1.7864649935808092E-4	IMPLEMENTATION	1.1775403631791689E-4	DEFECT	2.132644675152773E-5	DOCUMENTATION	1.2320479140310287E-5	TEST
// nothing to do	WITHOUT_CLASSIFICATION	0.9999531921226288	WITHOUT_CLASSIFICATION	3.294597895452538E-5	IMPLEMENTATION	1.067566416389567E-5	DESIGN	2.303461611580103E-6	DEFECT	6.645899844746436E-7	DOCUMENTATION	2.1818265676203127E-7	TEST
// nothing to do	WITHOUT_CLASSIFICATION	0.9999531921226288	WITHOUT_CLASSIFICATION	3.294597895452538E-5	IMPLEMENTATION	1.067566416389567E-5	DESIGN	2.303461611580103E-6	DEFECT	6.645899844746436E-7	DOCUMENTATION	2.1818265676203127E-7	TEST
// an existing collection that was either non-empty or uninitialized // is replaced by null or a different collection // (if the collection is uninitialized, hibernate has no way of // knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.9896793992532267	WITHOUT_CLASSIFICATION	0.010319725718951026	DESIGN	5.201010483662274E-7	IMPLEMENTATION	3.328677503796152E-7	DEFECT	2.0893178171928036E-8	TEST	1.1658452121198567E-9	DOCUMENTATION
// this method is called when a new non-null collection is persisted // or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.9956885002625704	WITHOUT_CLASSIFICATION	0.004297108551526526	DESIGN	1.4025312267988047E-5	IMPLEMENTATION	2.6026043997942047E-7	TEST	9.666697109771486E-8	DEFECT	8.946224060495624E-9	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.7450792214243572	WITHOUT_CLASSIFICATION	0.25482807292912224	DESIGN	6.595925928171907E-5	DEFECT	2.321924589706098E-5	IMPLEMENTATION	3.384858416598957E-6	TEST	1.422829252847191E-7	DOCUMENTATION
//do nothing - we only need to notify the cache...	WITHOUT_CLASSIFICATION	0.9999920877801673	WITHOUT_CLASSIFICATION	4.906703384727826E-6	DESIGN	1.5078971216491902E-6	DEFECT	1.31774868764031E-6	DOCUMENTATION	9.84647305336088E-8	TEST	8.140590819595441E-8	IMPLEMENTATION
//sort first by entity name	WITHOUT_CLASSIFICATION	0.9990803225800567	WITHOUT_CLASSIFICATION	9.180506649691261E-4	DESIGN	1.077728632241047E-6	TEST	2.56901755192327E-7	DOCUMENTATION	2.1639544517923042E-7	IMPLEMENTATION	7.572914143820934E-8	DEFECT
//then by id	WITHOUT_CLASSIFICATION	0.9968621121280027	WITHOUT_CLASSIFICATION	0.00192585026973102	DESIGN	9.924664087989656E-4	IMPLEMENTATION	1.6588310688360293E-4	DEFECT	3.559492061481148E-5	DOCUMENTATION	1.8093165968830097E-5	TEST
// to be safe...	WITHOUT_CLASSIFICATION	0.9985921470046621	WITHOUT_CLASSIFICATION	0.0010513939021246025	DEFECT	3.10580910636806E-4	DESIGN	4.228447968409726E-5	IMPLEMENTATION	3.1838098281787646E-6	DOCUMENTATION	4.0989306406010215E-7	TEST
// no transformations took place, so handle it as we would a // non-instrumented class	WITHOUT_CLASSIFICATION	0.9994927800185848	WITHOUT_CLASSIFICATION	5.045943820441739E-4	DESIGN	2.4599942515750987E-6	IMPLEMENTATION	1.1441177554654778E-7	DOCUMENTATION	4.075636278445791E-8	TEST	1.0436981179932263E-8	DEFECT
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999999828252351	WITHOUT_CLASSIFICATION	1.4681246797940622E-8	DESIGN	2.3974265162014215E-9	DEFECT	7.445620234390547E-11	TEST	1.5257423818761274E-11	DOCUMENTATION	6.378040628225281E-12	IMPLEMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999999828252351	WITHOUT_CLASSIFICATION	1.4681246797940622E-8	DESIGN	2.3974265162014215E-9	DEFECT	7.445620234390547E-11	TEST	1.5257423818761274E-11	DOCUMENTATION	6.378040628225281E-12	IMPLEMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.999906322955385	WITHOUT_CLASSIFICATION	9.322978057345036E-5	DESIGN	2.5628418703942373E-7	DEFECT	1.5369499505241438E-7	DOCUMENTATION	2.6784455240985085E-8	IMPLEMENTATION	1.0500404385992159E-8	TEST
//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9997335257524259	WITHOUT_CLASSIFICATION	2.3201955044399448E-4	TEST	3.148293167711901E-5	IMPLEMENTATION	2.115431666814148E-6	DESIGN	6.650580025686308E-7	DOCUMENTATION	1.9127578369188682E-7	DEFECT
// set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.9999983925334388	WITHOUT_CLASSIFICATION	1.5194327861281658E-6	DESIGN	6.594756722597406E-8	DEFECT	1.1128439564609048E-8	TEST	6.3304328908609505E-9	DOCUMENTATION	4.627335613184155E-9	IMPLEMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999989659492418	WITHOUT_CLASSIFICATION	7.415415008677523E-7	DESIGN	1.8117799127319547E-7	DEFECT	8.043687374314102E-8	IMPLEMENTATION	1.8577157543744163E-8	DOCUMENTATION	1.2317234737027217E-8	TEST
// invokespecial	WITHOUT_CLASSIFICATION	0.9999996478627908	WITHOUT_CLASSIFICATION	1.5695460592545577E-7	DEFECT	6.851368662165859E-8	DOCUMENTATION	6.548496006179994E-8	IMPLEMENTATION	4.882721510485211E-8	DESIGN	1.2356741407540247E-8	TEST
// return	WITHOUT_CLASSIFICATION	0.999984408469194	WITHOUT_CLASSIFICATION	1.4908320183563284E-5	DESIGN	5.55059187928893E-7	DEFECT	1.1030359667823906E-7	IMPLEMENTATION	1.2700160703915393E-8	DOCUMENTATION	5.1476771562297136E-9	TEST
// aload_1 // load bean	WITHOUT_CLASSIFICATION	0.9999977243930875	WITHOUT_CLASSIFICATION	1.109593810302671E-6	DESIGN	9.81932717510453E-7	DEFECT	1.2053241198833273E-7	IMPLEMENTATION	3.253927155448065E-8	TEST	3.1008701054367224E-8	DOCUMENTATION
// checkcast // cast bean	WITHOUT_CLASSIFICATION	0.9999844174025427	WITHOUT_CLASSIFICATION	1.4404030326426469E-5	DESIGN	7.272585313663594E-7	IMPLEMENTATION	2.0469556018701965E-7	DEFECT	1.4194803054788206E-7	TEST	1.0466500873995871E-7	DOCUMENTATION
// astore_3 // store bean	WITHOUT_CLASSIFICATION	0.9999962120278294	WITHOUT_CLASSIFICATION	3.622780002626656E-6	DESIGN	5.9417278036179316E-8	DEFECT	5.550529583991624E-8	TEST	3.253357388432157E-8	IMPLEMENTATION	1.773602022589513E-8	DOCUMENTATION
// aload_2 // args	WITHOUT_CLASSIFICATION	0.9999951563896327	WITHOUT_CLASSIFICATION	3.3823166175809865E-6	IMPLEMENTATION	8.52553342718226E-7	DESIGN	5.359867962262988E-7	DEFECT	4.8512852375690384E-8	TEST	2.4240758230426182E-8	DOCUMENTATION
// iconst_i // continue to aastore // growing stack is 1	WITHOUT_CLASSIFICATION	0.9999896789511602	WITHOUT_CLASSIFICATION	8.42685520295598E-6	DEFECT	1.614842892333819E-6	DESIGN	2.397770746574202E-7	IMPLEMENTATION	3.1876624073930466E-8	TEST	7.697045837931385E-9	DOCUMENTATION
// new	WITHOUT_CLASSIFICATION	0.99986520731799	WITHOUT_CLASSIFICATION	1.212034013792476E-4	DESIGN	8.628334559626376E-6	IMPLEMENTATION	3.7306149535166806E-6	DEFECT	7.978819334238094E-7	DOCUMENTATION	4.324491841882768E-7	TEST
// dup	WITHOUT_CLASSIFICATION	0.9999709791950452	WITHOUT_CLASSIFICATION	2.2007024506300348E-5	DESIGN	6.3815704315388045E-6	DEFECT	3.6735370234825235E-7	IMPLEMENTATION	1.8602078635904624E-7	DOCUMENTATION	7.883552827519222E-8	TEST
// aload_3 // load the raw bean	WITHOUT_CLASSIFICATION	0.999998240605528	WITHOUT_CLASSIFICATION	9.699900316121426E-7	IMPLEMENTATION	3.767599350394189E-7	DEFECT	3.4290389602828384E-7	DESIGN	4.2998665262425295E-8	TEST	2.674194397026015E-8	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999946676176501	WITHOUT_CLASSIFICATION	5.030911012825353E-6	DESIGN	2.447703849982155E-7	DEFECT	3.335437547917709E-8	DOCUMENTATION	1.8500613758346057E-8	TEST	4.8459627868463225E-9	IMPLEMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999992995095938	WITHOUT_CLASSIFICATION	3.886349481541447E-7	DEFECT	1.8315948472733098E-7	DESIGN	9.640916319619564E-8	IMPLEMENTATION	1.8912835296213823E-8	DOCUMENTATION	1.3373975064507137E-8	TEST
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999992995095938	WITHOUT_CLASSIFICATION	3.886349481541447E-7	DEFECT	1.8315948472733098E-7	DESIGN	9.640916319619564E-8	IMPLEMENTATION	1.8912835296213823E-8	DOCUMENTATION	1.3373975064507137E-8	TEST
// aastore // args	WITHOUT_CLASSIFICATION	0.9999979185208735	WITHOUT_CLASSIFICATION	1.4559217393296613E-6	DESIGN	4.5560365602583647E-7	IMPLEMENTATION	8.392009301758335E-8	DEFECT	7.113838093826695E-8	TEST	1.4895257091418992E-8	DOCUMENTATION
/* | this | bean | args | i | raw bean | exception | */	WITHOUT_CLASSIFICATION	0.9962838237054495	WITHOUT_CLASSIFICATION	0.003681854293172433	DESIGN	2.8005451471128833E-5	DEFECT	4.1065495394902565E-6	IMPLEMENTATION	1.572562412147197E-6	TEST	6.374379552001605E-7	DOCUMENTATION
// required to exception table // iconst_0 // i	WITHOUT_CLASSIFICATION	0.9999958046393834	WITHOUT_CLASSIFICATION	4.0137804313462945E-6	DESIGN	1.7459280762202221E-7	DEFECT	4.821914811244219E-9	IMPLEMENTATION	1.6936578340947086E-9	TEST	4.718048665149604E-10	DOCUMENTATION
// istore_3 // store i	WITHOUT_CLASSIFICATION	0.9999975941477147	WITHOUT_CLASSIFICATION	2.0553139906963896E-6	DESIGN	2.147248767609267E-7	DEFECT	1.1087729947572668E-7	TEST	1.4172979933342364E-8	DOCUMENTATION	1.0763138304221714E-8	IMPLEMENTATION
// aload_1 // load the bean	WITHOUT_CLASSIFICATION	0.9999970846594737	WITHOUT_CLASSIFICATION	2.052601481842385E-6	DESIGN	4.332968426805591E-7	DEFECT	3.093770749384022E-7	IMPLEMENTATION	7.29677142461485E-8	DOCUMENTATION	4.7097412560326556E-8	TEST
// checkcast // cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.9998664261534799	WITHOUT_CLASSIFICATION	1.3244462739029768E-4	DESIGN	9.847209215774622E-7	IMPLEMENTATION	6.071436842580536E-8	TEST	4.73241915246071E-8	DEFECT	3.64596482821999E-8	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.999998706086504	WITHOUT_CLASSIFICATION	6.884865069470363E-7	DESIGN	5.468801076430515E-7	DEFECT	5.0837190214708004E-8	DOCUMENTATION	4.542837047092472E-9	IMPLEMENTATION	3.16685414962304E-9	TEST
// start region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9958268002795954	WITHOUT_CLASSIFICATION	0.004166909505435893	DESIGN	4.900186186242929E-6	DEFECT	1.120359226593659E-6	IMPLEMENTATION	1.3811642662697374E-7	TEST	1.3155312920853298E-7	DOCUMENTATION
// iinc 3, 1	WITHOUT_CLASSIFICATION	0.9999916373740704	WITHOUT_CLASSIFICATION	2.8956052357827223E-6	DESIGN	2.7626803993694817E-6	DEFECT	2.17844359898836E-6	IMPLEMENTATION	3.8185210839990137E-7	DOCUMENTATION	1.440445870345305E-7	TEST
// aload 4 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999981561245868	WITHOUT_CLASSIFICATION	7.209149419216855E-7	DESIGN	7.020875336620885E-7	IMPLEMENTATION	3.6270772727678804E-7	DEFECT	3.114437548189293E-8	TEST	2.7020835115353448E-8	DOCUMENTATION
// aload_2 // load the args	WITHOUT_CLASSIFICATION	0.9999991279960366	WITHOUT_CLASSIFICATION	4.167639507574045E-7	DESIGN	1.937776440626844E-7	DEFECT	1.8399084830082402E-7	IMPLEMENTATION	4.382049270304364E-8	TEST	3.365102743835835E-8	DOCUMENTATION
// iconst_i	WITHOUT_CLASSIFICATION	0.9999714824905891	WITHOUT_CLASSIFICATION	2.4697129213678437E-5	DESIGN	2.3254512063103332E-6	DEFECT	1.0312672309994782E-6	IMPLEMENTATION	2.8362464780643425E-7	DOCUMENTATION	1.8003711218695457E-7	TEST
// aaload	WITHOUT_CLASSIFICATION	0.9999930543042788	WITHOUT_CLASSIFICATION	5.192703438645313E-6	DESIGN	8.480820047442322E-7	IMPLEMENTATION	7.753473108948106E-7	DEFECT	6.834482263110557E-8	DOCUMENTATION	6.121814428231738E-8	TEST
// checkcast	WITHOUT_CLASSIFICATION	0.9999958369257307	WITHOUT_CLASSIFICATION	2.502875504478577E-6	IMPLEMENTATION	1.4140033305648718E-6	DESIGN	9.853484630260669E-8	DEFECT	8.820651978456426E-8	DOCUMENTATION	5.9454068171641975E-8	TEST
// checkcast (case of primitive type) // invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.9999999620261568	WITHOUT_CLASSIFICATION	1.5342832705200837E-8	DEFECT	1.1229226983982447E-8	IMPLEMENTATION	8.59975294826145E-9	DESIGN	1.9232813137163453E-9	DOCUMENTATION	8.787491616875575E-10	TEST
// checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.9999954105839833	WITHOUT_CLASSIFICATION	2.741553272182186E-6	DESIGN	1.4981829200620943E-6	IMPLEMENTATION	1.8507298313753782E-7	DOCUMENTATION	1.5611950124704125E-7	DEFECT	8.487340036267381E-9	TEST
/* current stack len = 2 */	WITHOUT_CLASSIFICATION	0.9999950060937914	WITHOUT_CLASSIFICATION	3.0586335296071454E-6	DEFECT	1.704266246377857E-6	DESIGN	1.4662322975191465E-7	DOCUMENTATION	7.541736547161886E-8	IMPLEMENTATION	8.965837385791764E-9	TEST
// end region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.8914020532887095	WITHOUT_CLASSIFICATION	0.10854767160419061	DESIGN	4.0546330982410534E-5	DEFECT	7.9498747602942E-6	IMPLEMENTATION	1.391925351520281E-6	DOCUMENTATION	3.869760057970412E-7	TEST
// register in exception table	WITHOUT_CLASSIFICATION	0.9999635603930527	WITHOUT_CLASSIFICATION	3.6332166124236556E-5	DESIGN	8.455753943257805E-8	DEFECT	1.2163582251504325E-8	IMPLEMENTATION	8.652977520734368E-9	TEST	2.0667238793831784E-9	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999989659492418	WITHOUT_CLASSIFICATION	7.415415008677523E-7	DESIGN	1.8117799127319547E-7	DEFECT	8.043687374314102E-8	IMPLEMENTATION	1.8577157543744163E-8	DOCUMENTATION	1.2317234737027217E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999989659492418	WITHOUT_CLASSIFICATION	7.415415008677523E-7	DESIGN	1.8117799127319547E-7	DEFECT	8.043687374314102E-8	IMPLEMENTATION	1.8577157543744163E-8	DOCUMENTATION	1.2317234737027217E-8	TEST
// return	WITHOUT_CLASSIFICATION	0.999984408469194	WITHOUT_CLASSIFICATION	1.4908320183563284E-5	DESIGN	5.55059187928893E-7	DEFECT	1.1030359667823906E-7	IMPLEMENTATION	1.2700160703915393E-8	DOCUMENTATION	5.1476771562297136E-9	TEST
// return	WITHOUT_CLASSIFICATION	0.999984408469194	WITHOUT_CLASSIFICATION	1.4908320183563284E-5	DESIGN	5.55059187928893E-7	DEFECT	1.1030359667823906E-7	IMPLEMENTATION	1.2700160703915393E-8	DOCUMENTATION	5.1476771562297136E-9	TEST
// dup	WITHOUT_CLASSIFICATION	0.9999709791950452	WITHOUT_CLASSIFICATION	2.2007024506300348E-5	DESIGN	6.3815704315388045E-6	DEFECT	3.6735370234825235E-7	IMPLEMENTATION	1.8602078635904624E-7	DOCUMENTATION	7.883552827519222E-8	TEST
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999992995095938	WITHOUT_CLASSIFICATION	3.886349481541447E-7	DEFECT	1.8315948472733098E-7	DESIGN	9.640916319619564E-8	IMPLEMENTATION	1.8912835296213823E-8	DOCUMENTATION	1.3373975064507137E-8	TEST
// checkcast	WITHOUT_CLASSIFICATION	0.9999958369257307	WITHOUT_CLASSIFICATION	2.502875504478577E-6	IMPLEMENTATION	1.4140033305648718E-6	DESIGN	9.853484630260669E-8	DEFECT	8.820651978456426E-8	DOCUMENTATION	5.9454068171641975E-8	TEST
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999994597097083	WITHOUT_CLASSIFICATION	5.322424641550772E-7	DESIGN	4.242532429863917E-9	DEFECT	2.188439090013706E-9	IMPLEMENTATION	1.1828620148503853E-9	TEST	4.339939604449182E-10	DOCUMENTATION
// astore 5 // store exception	WITHOUT_CLASSIFICATION	0.9999989145847341	WITHOUT_CLASSIFICATION	6.428983487656322E-7	DESIGN	4.357449249627472E-7	DEFECT	3.427603279380443E-9	TEST	2.8337058979997074E-9	DOCUMENTATION	5.106830821025726E-10	IMPLEMENTATION
// new // BulkAccessorException	WITHOUT_CLASSIFICATION	0.9993062449275174	WITHOUT_CLASSIFICATION	6.172593157637335E-4	DEFECT	7.327835705283937E-5	DESIGN	1.3661371316877953E-6	IMPLEMENTATION	1.024361259644654E-6	TEST	8.269012746797885E-7	DOCUMENTATION
// aload 5 // load exception	WITHOUT_CLASSIFICATION	0.99996501897266	WITHOUT_CLASSIFICATION	3.167658269914241E-5	DEFECT	3.2108149731747503E-6	DESIGN	5.251911753131339E-8	DOCUMENTATION	2.1271224806328416E-8	IMPLEMENTATION	1.9839325337114925E-8	TEST
// iload_3 // i	WITHOUT_CLASSIFICATION	0.9999961822862956	WITHOUT_CLASSIFICATION	1.9011458509821578E-6	DEFECT	1.3989501391656038E-6	IMPLEMENTATION	2.8108775381247717E-7	DESIGN	1.906033687141911E-7	TEST	4.592659171467161E-8	DOCUMENTATION
// invokespecial // BulkAccessorException.<init>	WITHOUT_CLASSIFICATION	0.9999971520936437	WITHOUT_CLASSIFICATION	2.779784513168883E-6	DEFECT	2.0863209770097944E-8	DOCUMENTATION	2.021060983811338E-8	IMPLEMENTATION	1.7507833658538315E-8	TEST	9.540189951776425E-9	DESIGN
// athrow	WITHOUT_CLASSIFICATION	0.9999961436703315	WITHOUT_CLASSIFICATION	3.2576780083706866E-6	DESIGN	4.0243214675459633E-7	DEFECT	1.228103312990584E-7	IMPLEMENTATION	3.670585942071561E-8	TEST	3.670332273413843E-8	DOCUMENTATION
// WARNING: classfile only	WITHOUT_CLASSIFICATION	0.9999010545796175	WITHOUT_CLASSIFICATION	6.132449599260431E-5	DESIGN	3.6930990304462E-5	DEFECT	3.7143700857697274E-7	DOCUMENTATION	1.7935606779390134E-7	IMPLEMENTATION	1.3914100910521464E-7	TEST
//swallow	WITHOUT_CLASSIFICATION	0.9999662770106541	WITHOUT_CLASSIFICATION	2.0006557402438247E-5	DESIGN	7.137405111779353E-6	IMPLEMENTATION	5.376116895099954E-6	DEFECT	6.998164242039132E-7	DOCUMENTATION	5.030935124071866E-7	TEST
/* local variable | this | */	WITHOUT_CLASSIFICATION	0.9999340644338655	WITHOUT_CLASSIFICATION	6.504343642893223E-5	DESIGN	5.370474201117396E-7	IMPLEMENTATION	1.9711108828899838E-7	TEST	8.110921090230072E-8	DEFECT	7.686198637115702E-8	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999932264509728	WITHOUT_CLASSIFICATION	4.5602845957696035E-6	DESIGN	9.423137331498621E-7	DEFECT	5.207461903370266E-7	DOCUMENTATION	4.906916136567561E-7	TEST	2.595128943871117E-7	IMPLEMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999932264509728	WITHOUT_CLASSIFICATION	4.5602845957696035E-6	DESIGN	9.423137331498621E-7	DEFECT	5.207461903370266E-7	DOCUMENTATION	4.906916136567561E-7	TEST	2.595128943871117E-7	IMPLEMENTATION
// getfield // get field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.999999839866069	WITHOUT_CLASSIFICATION	1.5836414639435726E-7	DESIGN	1.0075959371196322E-9	TEST	3.6299876450574063E-10	IMPLEMENTATION	2.7249373196503995E-10	DEFECT	1.2669614365796486E-10	DOCUMENTATION
// areturn // return the value of the field	WITHOUT_CLASSIFICATION	0.9999983428513421	WITHOUT_CLASSIFICATION	1.5237955858051841E-6	DESIGN	1.1764339473564482E-7	DEFECT	1.2771764869164534E-8	IMPLEMENTATION	1.776073342586997E-9	TEST	1.1618389960857748E-9	DOCUMENTATION
/* local variables | this | callback | */	WITHOUT_CLASSIFICATION	0.9990789136983332	WITHOUT_CLASSIFICATION	8.736021113766853E-4	DESIGN	2.528914912726325E-5	DEFECT	1.9483062171513515E-5	IMPLEMENTATION	2.1698890634414274E-6	TEST	5.420899279742633E-7	DOCUMENTATION
// aload_1 // load callback	WITHOUT_CLASSIFICATION	0.9999907349904725	WITHOUT_CLASSIFICATION	7.547356075392053E-6	DEFECT	8.433375878671514E-7	DESIGN	8.181020503653538E-7	IMPLEMENTATION	3.103780977607128E-8	DOCUMENTATION	2.5176004140547645E-8	TEST
// putfield // put field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999999841404891	WITHOUT_CLASSIFICATION	1.3522560394375971E-8	DESIGN	1.2989277557345505E-9	IMPLEMENTATION	5.322015156868744E-10	DEFECT	3.7818484108964035E-10	TEST	1.2763645220373963E-10	DOCUMENTATION
// case of non-static field	WITHOUT_CLASSIFICATION	0.9999979760982121	WITHOUT_CLASSIFICATION	1.8034150086387316E-6	DESIGN	1.2631403483008442E-7	IMPLEMENTATION	8.248943435870534E-8	DEFECT	1.0073441960892228E-8	DOCUMENTATION	1.6098683542835908E-9	TEST
// getfield // get each field	WITHOUT_CLASSIFICATION	0.9999333585441097	WITHOUT_CLASSIFICATION	6.641640032780233E-5	DESIGN	1.316730574903411E-7	TEST	6.839619193785598E-8	DEFECT	1.507597092997851E-8	IMPLEMENTATION	9.910342155997549E-9	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999997251508908	WITHOUT_CLASSIFICATION	2.0752953890470072E-7	DEFECT	3.370186801631711E-8	DESIGN	2.301324147680867E-8	IMPLEMENTATION	9.558709918745678E-9	TEST	1.045750884734028E-9	DOCUMENTATION
// ifnonnull	WITHOUT_CLASSIFICATION	0.9999930250775984	WITHOUT_CLASSIFICATION	4.5008163992533925E-6	DEFECT	2.0448230406903077E-6	DESIGN	3.5309558734402803E-7	IMPLEMENTATION	4.050720605000998E-8	DOCUMENTATION	3.568016812029565E-8	TEST
// *return // each type	WITHOUT_CLASSIFICATION	0.9999993808939341	WITHOUT_CLASSIFICATION	4.967465918266461E-7	DESIGN	1.1933382259627926E-7	DEFECT	1.4715098070861163E-9	IMPLEMENTATION	1.223261236495477E-9	DOCUMENTATION	3.3088047147841626E-10	TEST
// *return // each type	WITHOUT_CLASSIFICATION	0.9999993808939341	WITHOUT_CLASSIFICATION	4.967465918266461E-7	DESIGN	1.1933382259627926E-7	DEFECT	1.4715098070861163E-9	IMPLEMENTATION	1.223261236495477E-9	DOCUMENTATION	3.3088047147841626E-10	TEST
// *store_1 // each type	WITHOUT_CLASSIFICATION	0.9999999217852069	WITHOUT_CLASSIFICATION	6.832776993868358E-8	DESIGN	8.20256451577103E-9	DEFECT	7.32608313885449E-10	TEST	5.007248551610898E-10	IMPLEMENTATION	4.5112541060683893E-10	DOCUMENTATION
// ldc // name of the field	WITHOUT_CLASSIFICATION	0.9998876428351543	WITHOUT_CLASSIFICATION	1.0994473455783584E-4	DESIGN	1.230763153795216E-6	DEFECT	5.90688574413167E-7	IMPLEMENTATION	4.5162922476038737E-7	TEST	1.3934933484705752E-7	DOCUMENTATION
// *load_1 // each type	WITHOUT_CLASSIFICATION	0.9999997973338548	WITHOUT_CLASSIFICATION	1.0499724043693695E-7	DESIGN	8.781851784826888E-8	DEFECT	5.839361050578583E-9	IMPLEMENTATION	2.2756164432742843E-9	DOCUMENTATION	1.7354095252282739E-9	TEST
// invokeinterface // invoke Callback.read*() // each type	WITHOUT_CLASSIFICATION	0.999999414928586	WITHOUT_CLASSIFICATION	5.286100419850903E-7	DEFECT	5.448826507734389E-8	DESIGN	1.0433401348306973E-9	DOCUMENTATION	6.269534869742545E-10	TEST	3.0281305798418147E-10	IMPLEMENTATION
// int	WITHOUT_CLASSIFICATION	0.9999926005744945	WITHOUT_CLASSIFICATION	4.6163901444047236E-6	DESIGN	2.477293848047866E-6	DEFECT	1.4814820636948725E-7	DOCUMENTATION	8.210321118979344E-8	IMPLEMENTATION	7.549009547327082E-8	TEST
// return	WITHOUT_CLASSIFICATION	0.999984408469194	WITHOUT_CLASSIFICATION	1.4908320183563284E-5	DESIGN	5.55059187928893E-7	DEFECT	1.1030359667823906E-7	IMPLEMENTATION	1.2700160703915393E-8	DOCUMENTATION	5.1476771562297136E-9	TEST
// dup	WITHOUT_CLASSIFICATION	0.9999709791950452	WITHOUT_CLASSIFICATION	2.2007024506300348E-5	DESIGN	6.3815704315388045E-6	DEFECT	3.6735370234825235E-7	IMPLEMENTATION	1.8602078635904624E-7	DOCUMENTATION	7.883552827519222E-8	TEST
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999946676176501	WITHOUT_CLASSIFICATION	5.030911012825353E-6	DESIGN	2.447703849982155E-7	DEFECT	3.335437547917709E-8	DOCUMENTATION	1.8500613758346057E-8	TEST	4.8459627868463225E-9	IMPLEMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999958369257307	WITHOUT_CLASSIFICATION	2.502875504478577E-6	IMPLEMENTATION	1.4140033305648718E-6	DESIGN	9.853484630260669E-8	DEFECT	8.820651978456426E-8	DOCUMENTATION	5.9454068171641975E-8	TEST
// checkcast	WITHOUT_CLASSIFICATION	0.9999958369257307	WITHOUT_CLASSIFICATION	2.502875504478577E-6	IMPLEMENTATION	1.4140033305648718E-6	DESIGN	9.853484630260669E-8	DEFECT	8.820651978456426E-8	DOCUMENTATION	5.9454068171641975E-8	TEST
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999997577814106	WITHOUT_CLASSIFICATION	1.731971017547162E-7	DEFECT	3.2689342029083285E-8	DESIGN	2.9710974600080656E-8	IMPLEMENTATION	5.8180024889187985E-9	TEST	8.031683319654591E-10	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999997577814106	WITHOUT_CLASSIFICATION	1.731971017547162E-7	DEFECT	3.2689342029083285E-8	DESIGN	2.9710974600080656E-8	IMPLEMENTATION	5.8180024889187985E-9	TEST	8.031683319654591E-10	DOCUMENTATION
// ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.9999989286150044	WITHOUT_CLASSIFICATION	8.306750787327599E-7	DESIGN	1.8389817309563684E-7	IMPLEMENTATION	4.5488820094121414E-8	DEFECT	6.655781602697751E-9	DOCUMENTATION	4.66714209997235E-9	TEST
// *load_1	WITHOUT_CLASSIFICATION	0.9999979296415936	WITHOUT_CLASSIFICATION	1.1758491976153113E-6	DESIGN	6.011108709288786E-7	DEFECT	2.473362793050796E-7	IMPLEMENTATION	2.522536168529139E-8	TEST	2.0836696777251272E-8	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.9999979296415936	WITHOUT_CLASSIFICATION	1.1758491976153113E-6	DESIGN	6.011108709288786E-7	DEFECT	2.473362793050796E-7	IMPLEMENTATION	2.522536168529139E-8	TEST	2.0836696777251272E-8	DOCUMENTATION
// putfield	WITHOUT_CLASSIFICATION	0.9999928726681535	WITHOUT_CLASSIFICATION	3.494063446172875E-6	IMPLEMENTATION	2.9634520494195906E-6	DESIGN	5.80704902645784E-7	DEFECT	5.543403388941127E-8	TEST	3.367741450439979E-8	DOCUMENTATION
// return ;	WITHOUT_CLASSIFICATION	0.9999782744159978	WITHOUT_CLASSIFICATION	2.0279315209716367E-5	DESIGN	1.0315470094660989E-6	DEFECT	3.8264389031905144E-7	IMPLEMENTATION	2.4877802721340983E-8	DOCUMENTATION	7.2000898734118265E-9	TEST
// ldc // field name	WITHOUT_CLASSIFICATION	0.9999986022185313	WITHOUT_CLASSIFICATION	1.1064069125023668E-6	DESIGN	1.8538484787556662E-7	DEFECT	5.920801051898687E-8	TEST	4.08328808308775E-8	IMPLEMENTATION	5.948816844478533E-9	DOCUMENTATION
// getfield // old value of the field	WITHOUT_CLASSIFICATION	0.9999938888978808	WITHOUT_CLASSIFICATION	5.5423917885568775E-6	DESIGN	4.3689055744491337E-7	DEFECT	1.0723207451543268E-7	TEST	1.396641686134197E-8	IMPLEMENTATION	1.0621281831506305E-8	DOCUMENTATION
// invokeinterface // callback.write*(..)	WITHOUT_CLASSIFICATION	0.9999968678718961	WITHOUT_CLASSIFICATION	3.066378512451723E-6	DEFECT	4.8533738286457694E-8	DESIGN	1.0277447650496316E-8	IMPLEMENTATION	4.017076765484787E-9	TEST	2.9213287133643257E-9	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999673239288345	WITHOUT_CLASSIFICATION	2.6206629640172208E-5	DESIGN	5.126488021249443E-6	DEFECT	1.0447818869858122E-6	IMPLEMENTATION	2.7955425727734137E-7	DOCUMENTATION	1.8617359771001436E-8	TEST
// reference type	WITHOUT_CLASSIFICATION	0.9999673239288345	WITHOUT_CLASSIFICATION	2.6206629640172208E-5	DESIGN	5.126488021249443E-6	DEFECT	1.0447818869858122E-6	IMPLEMENTATION	2.7955425727734137E-7	DOCUMENTATION	1.8617359771001436E-8	TEST
// not array	WITHOUT_CLASSIFICATION	0.9997602368632382	WITHOUT_CLASSIFICATION	1.0864072115695914E-4	DESIGN	1.0382229162766795E-4	IMPLEMENTATION	2.6074542006695847E-5	DEFECT	6.191954000460815E-7	TEST	6.063865704137083E-7	DOCUMENTATION
// array of reference type	WITHOUT_CLASSIFICATION	0.9999976210078186	WITHOUT_CLASSIFICATION	1.5717483673606174E-6	DEFECT	6.632706005904192E-7	DESIGN	7.135598208497226E-8	DOCUMENTATION	6.971535518710741E-8	IMPLEMENTATION	2.9018759319959006E-9	TEST
// boolean	WITHOUT_CLASSIFICATION	0.9999995886006082	WITHOUT_CLASSIFICATION	3.518311886822353E-7	DESIGN	4.384394348349361E-8	DEFECT	6.0011879118542226E-9	IMPLEMENTATION	5.492939997938709E-9	TEST	4.230131615172117E-9	DOCUMENTATION
// byte	WITHOUT_CLASSIFICATION	0.9999805122336176	WITHOUT_CLASSIFICATION	1.1435845736429683E-5	DESIGN	4.440864353871666E-6	IMPLEMENTATION	3.1329793330769155E-6	DEFECT	2.4192375501658E-7	TEST	2.3615320381861844E-7	DOCUMENTATION
// char	WITHOUT_CLASSIFICATION	0.9999999340879883	WITHOUT_CLASSIFICATION	4.899341786992432E-8	DESIGN	8.532003525251084E-9	DEFECT	5.823154795465136E-9	IMPLEMENTATION	1.3356502696104763E-9	TEST	1.2277852852907887E-9	DOCUMENTATION
// short	WITHOUT_CLASSIFICATION	0.9998983588937045	WITHOUT_CLASSIFICATION	9.951216149007109E-5	DESIGN	1.3384408277593823E-6	DEFECT	4.444127143781949E-7	TEST	1.7341850794944713E-7	IMPLEMENTATION	1.7267275541554805E-7	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999908202651141	WITHOUT_CLASSIFICATION	7.493043704126756E-6	DESIGN	1.5748370928539308E-6	DEFECT	5.723615566135459E-8	IMPLEMENTATION	2.98765025468218E-8	DOCUMENTATION	2.4741430790997937E-8	TEST
// float	WITHOUT_CLASSIFICATION	0.9999939290984997	WITHOUT_CLASSIFICATION	4.350884500989334E-6	DEFECT	1.5067677752982359E-6	DESIGN	8.253486492167466E-8	TEST	8.0211473058231E-8	IMPLEMENTATION	5.050288605971029E-8	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999939290984997	WITHOUT_CLASSIFICATION	4.350884500989334E-6	DEFECT	1.5067677752982359E-6	DESIGN	8.253486492167466E-8	TEST	8.0211473058231E-8	IMPLEMENTATION	5.050288605971029E-8	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.999989538425118	WITHOUT_CLASSIFICATION	7.729673523957525E-6	DEFECT	2.4495484857396898E-6	DESIGN	1.6624626008159318E-7	IMPLEMENTATION	6.62800647369496E-8	TEST	4.9826547583022576E-8	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.999989538425118	WITHOUT_CLASSIFICATION	7.729673523957525E-6	DEFECT	2.4495484857396898E-6	DESIGN	1.6624626008159318E-7	IMPLEMENTATION	6.62800647369496E-8	TEST	4.9826547583022576E-8	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999914441356011	WITHOUT_CLASSIFICATION	3.70028305656767E-6	DESIGN	2.7884588199962686E-6	DEFECT	1.8823172514156494E-6	IMPLEMENTATION	1.2638163522996839E-7	DOCUMENTATION	5.84236354793798E-8	TEST
// bad type	WITHOUT_CLASSIFICATION	0.9999914441356011	WITHOUT_CLASSIFICATION	3.70028305656767E-6	DESIGN	2.7884588199962686E-6	DEFECT	1.8823172514156494E-6	IMPLEMENTATION	1.2638163522996839E-7	DOCUMENTATION	5.84236354793798E-8	TEST
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999999921393568	WITHOUT_CLASSIFICATION	3.0120040810809554E-9	DESIGN	2.643741437785282E-9	DEFECT	9.983030447982045E-10	IMPLEMENTATION	9.625981846047113E-10	TEST	2.43996413244901E-10	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999999921393568	WITHOUT_CLASSIFICATION	3.0120040810809554E-9	DESIGN	2.643741437785282E-9	DEFECT	9.983030447982045E-10	IMPLEMENTATION	9.625981846047113E-10	TEST	2.43996413244901E-10	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999673239288345	WITHOUT_CLASSIFICATION	2.6206629640172208E-5	DESIGN	5.126488021249443E-6	DEFECT	1.0447818869858122E-6	IMPLEMENTATION	2.7955425727734137E-7	DOCUMENTATION	1.8617359771001436E-8	TEST
// double	WITHOUT_CLASSIFICATION	0.9999908202651141	WITHOUT_CLASSIFICATION	7.493043704126756E-6	DESIGN	1.5748370928539308E-6	DEFECT	5.723615566135459E-8	IMPLEMENTATION	2.98765025468218E-8	DOCUMENTATION	2.4741430790997937E-8	TEST
// float	WITHOUT_CLASSIFICATION	0.9999939290984997	WITHOUT_CLASSIFICATION	4.350884500989334E-6	DEFECT	1.5067677752982359E-6	DESIGN	8.253486492167466E-8	TEST	8.0211473058231E-8	IMPLEMENTATION	5.050288605971029E-8	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999939290984997	WITHOUT_CLASSIFICATION	4.350884500989334E-6	DEFECT	1.5067677752982359E-6	DESIGN	8.253486492167466E-8	TEST	8.0211473058231E-8	IMPLEMENTATION	5.050288605971029E-8	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.999989538425118	WITHOUT_CLASSIFICATION	7.729673523957525E-6	DEFECT	2.4495484857396898E-6	DESIGN	1.6624626008159318E-7	IMPLEMENTATION	6.62800647369496E-8	TEST	4.9826547583022576E-8	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999914441356011	WITHOUT_CLASSIFICATION	3.70028305656767E-6	DESIGN	2.7884588199962686E-6	DEFECT	1.8823172514156494E-6	IMPLEMENTATION	1.2638163522996839E-7	DOCUMENTATION	5.84236354793798E-8	TEST
// bad type	WITHOUT_CLASSIFICATION	0.9999914441356011	WITHOUT_CLASSIFICATION	3.70028305656767E-6	DESIGN	2.7884588199962686E-6	DEFECT	1.8823172514156494E-6	IMPLEMENTATION	1.2638163522996839E-7	DOCUMENTATION	5.84236354793798E-8	TEST
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999999921393568	WITHOUT_CLASSIFICATION	3.0120040810809554E-9	DESIGN	2.643741437785282E-9	DEFECT	9.983030447982045E-10	IMPLEMENTATION	9.625981846047113E-10	TEST	2.43996413244901E-10	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9996958764827653	WITHOUT_CLASSIFICATION	1.918612270484824E-4	DESIGN	1.047933298575795E-4	IMPLEMENTATION	4.46322159049707E-6	DEFECT	1.7727513732017403E-6	DOCUMENTATION	1.232987364846579E-6	TEST
//Mainly for OSCache	WITHOUT_CLASSIFICATION	0.9996070595108489	WITHOUT_CLASSIFICATION	3.9080847831650774E-4	DESIGN	8.998240627785712E-7	DOCUMENTATION	7.081537372726947E-7	DEFECT	3.289799655965018E-7	IMPLEMENTATION	1.9505306890402434E-7	TEST
//decrement the lock	WITHOUT_CLASSIFICATION	0.9998007485414254	WITHOUT_CLASSIFICATION	9.009793175817615E-5	DESIGN	5.692466332713547E-5	IMPLEMENTATION	3.847964197410723E-5	DEFECT	1.0760190568739015E-5	DOCUMENTATION	2.989030946396381E-6	TEST
// create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.9999944490524318	WITHOUT_CLASSIFICATION	3.3522958321189804E-6	DESIGN	1.9381410640149014E-6	DEFECT	1.4302768222516673E-7	TEST	1.0800632262537479E-7	IMPLEMENTATION	9.476667217159462E-9	DOCUMENTATION
//recache the updated state	WITHOUT_CLASSIFICATION	0.9996889241873486	WITHOUT_CLASSIFICATION	3.0667325668576415E-4	DESIGN	3.44106532125664E-6	IMPLEMENTATION	4.872810913207051E-7	DEFECT	3.115451274658715E-7	DOCUMENTATION	1.6266442562409402E-7	TEST
// noop	WITHOUT_CLASSIFICATION	0.9999805971592299	WITHOUT_CLASSIFICATION	1.0515388685954643E-5	DESIGN	4.3034795199074E-6	IMPLEMENTATION	4.219977503450233E-6	DEFECT	2.6879507495437436E-7	DOCUMENTATION	9.519998589315937E-8	TEST
//null clientLock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.9993963100902411	WITHOUT_CLASSIFICATION	5.976767248016173E-4	DESIGN	5.6214914455517036E-6	DEFECT	2.830932385421115E-7	IMPLEMENTATION	9.678832605766979E-8	DOCUMENTATION	1.1811947100240493E-8	TEST
// we really could refresh the item if it // is not a lock, but it might be slower //return freshTimestamp < txTimestamp	WITHOUT_CLASSIFICATION	0.8699986797852053	DEFECT	0.06536840188573328	DESIGN	0.06462819911205897	WITHOUT_CLASSIFICATION	4.399604102743613E-6	TEST	3.005095992904673E-7	IMPLEMENTATION	1.910330046685215E-8	DOCUMENTATION
//by requiring <, we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.996602352796396	WITHOUT_CLASSIFICATION	0.0028762609982497665	DEFECT	5.079861124169685E-4	DESIGN	1.2500555627860696E-5	IMPLEMENTATION	6.456390308379147E-7	DOCUMENTATION	2.5389827861581907E-7	TEST
// the user provided resulttransformer, not the one used with "select new". Here to avoid mangling // transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.9999999975870131	WITHOUT_CLASSIFICATION	1.9053654987006595E-9	DEFECT	2.70331486227539E-10	DESIGN	1.5703172424409408E-10	IMPLEMENTATION	7.756402788248622E-11	TEST	2.6941374867605654E-12	DOCUMENTATION
// disassemble positional parameters	WITHOUT_CLASSIFICATION	0.9999995382172799	WITHOUT_CLASSIFICATION	4.340299344994177E-7	IMPLEMENTATION	2.484634010368251E-8	DEFECT	1.5279456575015497E-9	DESIGN	1.023504074808724E-9	TEST	3.5499585239558473E-10	DOCUMENTATION
// disassemble named parameters	WITHOUT_CLASSIFICATION	0.9999999529348694	WITHOUT_CLASSIFICATION	2.226242481397868E-8	IMPLEMENTATION	1.1134464279441873E-8	DEFECT	8.908617123054693E-9	DESIGN	4.6260560226986E-9	TEST	1.33568245877682E-10	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999306312700811	WITHOUT_CLASSIFICATION	4.301242292401611E-5	DESIGN	1.5409352671582975E-5	IMPLEMENTATION	9.484912573687125E-6	DEFECT	1.2578330978231146E-6	DOCUMENTATION	2.0420865183526234E-7	TEST
// noop	WITHOUT_CLASSIFICATION	0.9999805971592299	WITHOUT_CLASSIFICATION	1.0515388685954643E-5	DESIGN	4.3034795199074E-6	IMPLEMENTATION	4.219977503450233E-6	DEFECT	2.6879507495437436E-7	DOCUMENTATION	9.519998589315937E-8	TEST
//noop	WITHOUT_CLASSIFICATION	0.999908549780112	WITHOUT_CLASSIFICATION	4.93880288701938E-5	DESIGN	3.6302738720623706E-5	DEFECT	2.6258688857783824E-6	DOCUMENTATION	2.166917599472956E-6	IMPLEMENTATION	9.666658119389171E-7	TEST
//noop	WITHOUT_CLASSIFICATION	0.999908549780112	WITHOUT_CLASSIFICATION	4.93880288701938E-5	DESIGN	3.6302738720623706E-5	DEFECT	2.6258688857783824E-6	DOCUMENTATION	2.166917599472956E-6	IMPLEMENTATION	9.666658119389171E-7	TEST
// this is called from SettingsFactory irregardless; trivial to simply disregard	WITHOUT_CLASSIFICATION	0.9999988991541814	WITHOUT_CLASSIFICATION	1.0218690913705434E-6	DESIGN	7.737918932543422E-8	DEFECT	1.0195872269075632E-9	TEST	4.6265811360889967E-10	IMPLEMENTATION	1.1529272765056109E-10	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.999998982542303	WITHOUT_CLASSIFICATION	6.444910640585225E-7	DESIGN	2.9716798482459907E-7	IMPLEMENTATION	3.701202571562565E-8	DEFECT	2.713725948718316E-8	DOCUMENTATION	1.1649362929933476E-8	TEST
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.999998982542303	WITHOUT_CLASSIFICATION	6.444910640585225E-7	DESIGN	2.9716798482459907E-7	IMPLEMENTATION	3.701202571562565E-8	DEFECT	2.713725948718316E-8	DOCUMENTATION	1.1649362929933476E-8	TEST
//throw new UnsupportedOperationException("Can't write to a readonly object");	WITHOUT_CLASSIFICATION	0.9999977602730594	WITHOUT_CLASSIFICATION	2.1539211543214216E-6	DESIGN	8.078077046817142E-8	DEFECT	4.382388605770566E-9	DOCUMENTATION	6.002604641401642E-10	TEST	4.2366591034918565E-11	IMPLEMENTATION
//assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9992896388785948	WITHOUT_CLASSIFICATION	7.019381940155799E-4	DESIGN	8.356403355664947E-6	DEFECT	5.146015428587266E-8	TEST	1.3934448396431179E-8	DOCUMENTATION	1.1294312760760653E-9	IMPLEMENTATION
//persister.setIdentifier(result, id); //before calling interceptor, for consistency with normal load	WITHOUT_CLASSIFICATION	0.99999881266498	WITHOUT_CLASSIFICATION	1.1445743444989974E-6	DEFECT	2.4159804119707897E-8	IMPLEMENTATION	1.2580979278435604E-8	DESIGN	4.4948202015663025E-9	TEST	1.5250718099470555E-9	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999540753416412	WITHOUT_CLASSIFICATION	4.2196452076913455E-5	DESIGN	2.63791668760278E-6	DEFECT	1.0153776712764509E-6	IMPLEMENTATION	6.175666598003265E-8	DOCUMENTATION	1.3155257079947544E-8	TEST
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999540753416412	WITHOUT_CLASSIFICATION	4.2196452076913455E-5	DESIGN	2.63791668760278E-6	DEFECT	1.0153776712764509E-6	IMPLEMENTATION	6.175666598003265E-8	DOCUMENTATION	1.3155257079947544E-8	TEST
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999998234850813	WITHOUT_CLASSIFICATION	1.6883086186283968E-7	DESIGN	7.654360622749609E-9	DEFECT	1.5548637513143983E-11	TEST	1.0698825278447025E-11	IMPLEMENTATION	3.4486005202566155E-12	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999959908152668	WITHOUT_CLASSIFICATION	2.0512379557318285E-6	DEFECT	1.95745441111212E-6	DESIGN	3.472116894279314E-10	IMPLEMENTATION	7.994932925809626E-11	DOCUMENTATION	6.520537654476451E-11	TEST
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999959908152668	WITHOUT_CLASSIFICATION	2.0512379557318285E-6	DEFECT	1.95745441111212E-6	DESIGN	3.472116894279314E-10	IMPLEMENTATION	7.994932925809626E-11	DOCUMENTATION	6.520537654476451E-11	TEST
// classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.9999363298580172	WITHOUT_CLASSIFICATION	6.172771097716061E-5	DESIGN	1.4497827851791536E-6	TEST	2.731554886305448E-7	DEFECT	1.8442709734922877E-7	DOCUMENTATION	3.506563440747268E-8	IMPLEMENTATION
// get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.999999139570885	WITHOUT_CLASSIFICATION	8.333746199446304E-7	DESIGN	1.7857823018954877E-8	DEFECT	5.335367795615309E-9	TEST	3.2797739487254943E-9	IMPLEMENTATION	5.815302955876047E-10	DOCUMENTATION
// get meta's from <class>	WITHOUT_CLASSIFICATION	0.9999972712368637	WITHOUT_CLASSIFICATION	2.6972164719109135E-6	DESIGN	2.8710215592580054E-8	DEFECT	2.103386460795409E-9	TEST	6.912304547357984E-10	DOCUMENTATION	4.1831950971417305E-11	IMPLEMENTATION
// DB-OBJECTNAME	WITHOUT_CLASSIFICATION	0.9999974037048718	WITHOUT_CLASSIFICATION	1.2176478860038852E-6	IMPLEMENTATION	9.111805575671869E-7	DESIGN	1.9904425174576466E-7	DEFECT	1.7311696362598032E-7	DOCUMENTATION	9.530546937129615E-8	TEST
// MUTABLE	WITHOUT_CLASSIFICATION	0.9999980325233866	WITHOUT_CLASSIFICATION	1.647665342235788E-6	DESIGN	2.3553175357542842E-7	DEFECT	3.337330242722765E-8	DOCUMENTATION	2.6333780288504595E-8	TEST	2.4572434930952345E-8	IMPLEMENTATION
// WHERE	WITHOUT_CLASSIFICATION	0.9999926477113852	WITHOUT_CLASSIFICATION	5.320142289090664E-6	DESIGN	1.6225966751282982E-6	DEFECT	1.793623538157579E-7	IMPLEMENTATION	1.196708906577869E-7	TEST	1.1051640612015882E-7	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999817537611164	WITHOUT_CLASSIFICATION	1.7470727956088167E-5	DESIGN	5.339243704147941E-7	DEFECT	1.046843313802487E-7	DOCUMENTATION	8.393790029057906E-8	TEST	5.2964325414573193E-8	IMPLEMENTATION
// POLYMORPHISM	WITHOUT_CLASSIFICATION	0.9999949837951851	WITHOUT_CLASSIFICATION	2.32279998209659E-6	DESIGN	1.3006831829164707E-6	IMPLEMENTATION	1.156719959827859E-6	DEFECT	1.6025789720326035E-7	DOCUMENTATION	7.574379285194404E-8	TEST
// TODO:	WITHOUT_CLASSIFICATION	0.9867666099783766	WITHOUT_CLASSIFICATION	0.006398989704728399	IMPLEMENTATION	0.005023044279242288	DESIGN	0.0011093119281905019	DEFECT	3.673006552056109E-4	DOCUMENTATION	3.3474345425654035E-4	TEST
// ID	WITHOUT_CLASSIFICATION	0.9999944870891403	WITHOUT_CLASSIFICATION	2.8583012185335344E-6	DESIGN	1.4147213373167253E-6	DEFECT	9.518119951733733E-7	IMPLEMENTATION	1.543285606025429E-7	DOCUMENTATION	1.3374774787577762E-7	TEST
// VERSION / TIMESTAMP	WITHOUT_CLASSIFICATION	0.9999995421127892	WITHOUT_CLASSIFICATION	2.5941720303123396E-7	DESIGN	7.607640596802113E-8	DEFECT	5.834742233587066E-8	IMPLEMENTATION	3.325539214331686E-8	DOCUMENTATION	3.079078738885516E-8	TEST
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999506983276464	WITHOUT_CLASSIFICATION	4.231542763333208E-5	IMPLEMENTATION	3.890037071298313E-6	DESIGN	1.7521042399412528E-6	DEFECT	9.607044430511994E-7	DOCUMENTATION	3.8339896595777214E-7	TEST
// Primary key constraint	WITHOUT_CLASSIFICATION	0.9999998251404494	WITHOUT_CLASSIFICATION	1.3588386330057584E-7	DESIGN	1.5156550006496538E-8	DEFECT	1.0521440288867886E-8	IMPLEMENTATION	8.95758372161271E-9	DOCUMENTATION	4.340113237046549E-9	TEST
// this is either a <version/> tag with no type attribute, // or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.9999998151588035	WITHOUT_CLASSIFICATION	9.30773693042066E-8	DESIGN	5.275194982724748E-8	DEFECT	2.108293724299334E-8	IMPLEMENTATION	1.766024391604827E-8	TEST	2.6869627830585473E-10	DOCUMENTATION
// for version properties marked as being generated, make sure they are "always" // generated; aka, "insert" is invalid; this is dis-allowed by the DTD, // but just to make sure...	WITHOUT_CLASSIFICATION	0.9999999989734112	WITHOUT_CLASSIFICATION	4.5536575693901414E-10	DESIGN	3.833039120682275E-10	DEFECT	1.6200568405196261E-10	TEST	2.1699429858857048E-11	IMPLEMENTATION	4.213979363733636E-12	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999506983276464	WITHOUT_CLASSIFICATION	4.231542763333208E-5	IMPLEMENTATION	3.890037071298313E-6	DESIGN	1.7521042399412528E-6	DEFECT	9.607044430511994E-7	DOCUMENTATION	3.8339896595777214E-7	TEST
// ( (Column) discrim.getColumnIterator().next() ).setType(type);	WITHOUT_CLASSIFICATION	0.9999982016318693	WITHOUT_CLASSIFICATION	1.2490104915451348E-6	DESIGN	5.36934086669577E-7	DEFECT	8.530075781520693E-9	IMPLEMENTATION	2.6415366675756302E-9	DOCUMENTATION	1.2519400270572668E-9	TEST
// go ahead and set the lazy here, since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.9999992208590178	WITHOUT_CLASSIFICATION	6.894629453746653E-7	IMPLEMENTATION	4.4493276883717384E-8	DESIGN	4.263968079757574E-8	DEFECT	2.299405631764847E-9	DOCUMENTATION	2.4567350767444784E-10	TEST
// DYNAMIC UPDATE	WITHOUT_CLASSIFICATION	0.9999883294572772	WITHOUT_CLASSIFICATION	8.741222150867556E-6	IMPLEMENTATION	2.355278820001792E-6	DESIGN	2.385432316440385E-7	DEFECT	2.340606018767522E-7	DOCUMENTATION	1.0143791843417313E-7	TEST
// IMPORT	WITHOUT_CLASSIFICATION	0.9999927391946508	WITHOUT_CLASSIFICATION	3.786123532817749E-6	DESIGN	2.7408941581898507E-6	DEFECT	4.486331769491014E-7	IMPLEMENTATION	1.6832244084723803E-7	DOCUMENTATION	1.1683204034564931E-7	TEST
// BATCH SIZE	WITHOUT_CLASSIFICATION	0.999975960953434	WITHOUT_CLASSIFICATION	1.0301826998711162E-5	DEFECT	6.987086002714734E-6	DESIGN	5.71480099469381E-6	IMPLEMENTATION	8.188182776434949E-7	DOCUMENTATION	2.165142921730914E-7	TEST
// SELECT BEFORE UPDATE	WITHOUT_CLASSIFICATION	0.9999984545243793	WITHOUT_CLASSIFICATION	9.350834441858901E-7	DESIGN	2.3153541418999477E-7	DEFECT	1.6749431372470916E-7	IMPLEMENTATION	1.6689020191009717E-7	DOCUMENTATION	4.447224680155409E-8	TEST
// OPTIMISTIC LOCK MODE	WITHOUT_CLASSIFICATION	0.9999992254551865	WITHOUT_CLASSIFICATION	5.917230453603997E-7	DESIGN	9.07445550499796E-8	DOCUMENTATION	4.088528841134097E-8	IMPLEMENTATION	2.974061626781739E-8	TEST	2.145130830362431E-8	DEFECT
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999964701227891	WITHOUT_CLASSIFICATION	1.789060632179586E-6	IMPLEMENTATION	1.1132772521212742E-6	DESIGN	3.67756004199218E-7	DEFECT	1.7619718359759419E-7	DOCUMENTATION	8.358613872629902E-8	TEST
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999864331753276	WITHOUT_CLASSIFICATION	1.304187344118653E-5	DESIGN	3.000180833753139E-7	DEFECT	1.3733419117804303E-7	DOCUMENTATION	4.489085114969508E-8	IMPLEMENTATION	4.270810557968649E-8	TEST
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999942684930466	WITHOUT_CLASSIFICATION	5.696088359828178E-6	DESIGN	3.3853100690732344E-8	DEFECT	1.1411676719872936E-9	TEST	3.985913479498861E-10	DOCUMENTATION	2.57337502372686E-11	IMPLEMENTATION
// properties	WITHOUT_CLASSIFICATION	0.999999439613256	WITHOUT_CLASSIFICATION	2.5598169145515663E-7	DEFECT	1.6532659302150525E-7	DESIGN	1.0733522822918268E-7	IMPLEMENTATION	1.9073965859436866E-8	DOCUMENTATION	1.2669265292644742E-8	TEST
// joined subclasses	WITHOUT_CLASSIFICATION	0.9999997974253367	WITHOUT_CLASSIFICATION	1.733335623793091E-7	DESIGN	1.086966609897592E-8	IMPLEMENTATION	1.0491644382585924E-8	DEFECT	4.585845087274505E-9	DOCUMENTATION	3.293945264706397E-9	TEST
// KEY	WITHOUT_CLASSIFICATION	0.9999866164122071	WITHOUT_CLASSIFICATION	1.201072018311172E-5	DESIGN	8.935064075831196E-7	DEFECT	2.2118619703102163E-7	IMPLEMENTATION	1.291421359682564E-7	TEST	1.290328693869418E-7	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999817537611164	WITHOUT_CLASSIFICATION	1.7470727956088167E-5	DESIGN	5.339243704147941E-7	DEFECT	1.046843313802487E-7	DOCUMENTATION	8.393790029057906E-8	TEST	5.2964325414573193E-8	IMPLEMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999864331753276	WITHOUT_CLASSIFICATION	1.304187344118653E-5	DESIGN	3.000180833753139E-7	DEFECT	1.3733419117804303E-7	DOCUMENTATION	4.489085114969508E-8	IMPLEMENTATION	4.270810557968649E-8	TEST
// properties	WITHOUT_CLASSIFICATION	0.999999439613256	WITHOUT_CLASSIFICATION	2.5598169145515663E-7	DEFECT	1.6532659302150525E-7	DESIGN	1.0733522822918268E-7	IMPLEMENTATION	1.9073965859436866E-8	DOCUMENTATION	1.2669265292644742E-8	TEST
// KEY	WITHOUT_CLASSIFICATION	0.9999866164122071	WITHOUT_CLASSIFICATION	1.201072018311172E-5	DESIGN	8.935064075831196E-7	DEFECT	2.2118619703102163E-7	IMPLEMENTATION	1.291421359682564E-7	TEST	1.290328693869418E-7	DOCUMENTATION
// model.getKey().setType( new Type( model.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999999195654252	WITHOUT_CLASSIFICATION	3.351368599021375E-8	IMPLEMENTATION	3.326254774745993E-8	DESIGN	1.2271259348255991E-8	DEFECT	1.028159662308797E-9	DOCUMENTATION	3.589220158341668E-10	TEST
// TABLENAME	WITHOUT_CLASSIFICATION	0.9999952734644153	WITHOUT_CLASSIFICATION	2.73378410459859E-6	DESIGN	8.995980443950243E-7	DEFECT	8.538329835290027E-7	IMPLEMENTATION	1.199626423588238E-7	DOCUMENTATION	1.1935780961711633E-7	TEST
// join.getKey().setType( new Type( lazz.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.999999981518295	WITHOUT_CLASSIFICATION	1.1757729931010035E-8	IMPLEMENTATION	3.728417433790052E-9	DESIGN	2.552911458226392E-9	DEFECT	3.8715807422585825E-10	DOCUMENTATION	5.5488177553450846E-11	TEST
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999953783240696	WITHOUT_CLASSIFICATION	2.3940126939104046E-6	DESIGN	1.6200709601076645E-6	IMPLEMENTATION	2.7597417270661865E-7	DEFECT	2.234356539531748E-7	DOCUMENTATION	1.0818244973676646E-7	TEST
// COLUMN(S)	WITHOUT_CLASSIFICATION	0.9999971250260697	WITHOUT_CLASSIFICATION	2.2033426009868964E-6	DESIGN	2.82308019478528E-7	DEFECT	2.786272671315441E-7	IMPLEMENTATION	7.163473295679574E-8	DOCUMENTATION	3.906130979760342E-8	TEST
// column index	WITHOUT_CLASSIFICATION	0.9999798404996817	WITHOUT_CLASSIFICATION	1.7449604159387227E-5	DEFECT	2.3046784904346976E-6	IMPLEMENTATION	2.898459886787219E-7	DESIGN	9.331222819858979E-8	DOCUMENTATION	2.2059451680099916E-8	TEST
//column unique-key	WITHOUT_CLASSIFICATION	0.9999553822982623	WITHOUT_CLASSIFICATION	3.026257339237808E-5	DESIGN	9.304107178460298E-6	DEFECT	3.249044773272202E-6	IMPLEMENTATION	1.3641250012847491E-6	DOCUMENTATION	4.3785139232527107E-7	TEST
// automatically makes a column with the default name if none is specifed by XML	WITHOUT_CLASSIFICATION	0.9904575438861521	WITHOUT_CLASSIFICATION	0.00953474655962322	DESIGN	6.6675353719443365E-6	DEFECT	7.535744954301516E-7	TEST	1.962227862047425E-7	IMPLEMENTATION	9.222157088526873E-8	DOCUMENTATION
// for an any	WITHOUT_CLASSIFICATION	0.9999982221760085	WITHOUT_CLASSIFICATION	1.4029285852571065E-6	DESIGN	2.792325560481631E-7	DEFECT	3.7221218561685854E-8	DOCUMENTATION	3.473640634679232E-8	TEST	2.3705225186992792E-8	IMPLEMENTATION
// insertable simply because that is the user did not specify // anything; just override it	WITHOUT_CLASSIFICATION	0.9999999970628429	WITHOUT_CLASSIFICATION	2.799748928641974E-9	IMPLEMENTATION	5.931818903605806E-11	DEFECT	3.984613833826167E-11	DESIGN	2.026060832962125E-11	TEST	1.7983250943837905E-11	DOCUMENTATION
// the user specifically supplied insert="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999956211548392	WITHOUT_CLASSIFICATION	4.253643461133282E-6	DESIGN	9.72852815236542E-8	TEST	1.185350748659354E-8	IMPLEMENTATION	1.1008743255230724E-8	DOCUMENTATION	5.054167327772962E-9	DEFECT
// properties generated on update can never be updateable...	WITHOUT_CLASSIFICATION	0.9999827077689996	WITHOUT_CLASSIFICATION	8.686782438393645E-6	DEFECT	8.448424296918778E-6	DESIGN	1.4104316640596915E-7	IMPLEMENTATION	1.3635045126181799E-8	TEST	2.3460536275862816E-9	DOCUMENTATION
// updateable only because the user did not specify  // anything; just override it	WITHOUT_CLASSIFICATION	0.9999999605556144	WITHOUT_CLASSIFICATION	3.906494219737958E-8	IMPLEMENTATION	2.739787559768249E-10	DOCUMENTATION	7.265095734220603E-11	DEFECT	2.4359547791646327E-11	TEST	8.454115940945377E-12	DESIGN
// the user specifically supplied update="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999989099372026	WITHOUT_CLASSIFICATION	9.438941641639544E-7	DESIGN	1.123743055313087E-7	IMPLEMENTATION	2.1789521450098205E-8	TEST	6.12271755470142E-9	DEFECT	5.882088632172789E-9	DOCUMENTATION
// ROLENAME	WITHOUT_CLASSIFICATION	0.9999892938683821	WITHOUT_CLASSIFICATION	6.293427488245601E-6	DESIGN	2.472828445513541E-6	DEFECT	1.575272473695352E-6	IMPLEMENTATION	2.1003524649484865E-7	TEST	1.5456796395816482E-7	DOCUMENTATION
// FETCH STRATEGY	WITHOUT_CLASSIFICATION	0.9999881349747888	WITHOUT_CLASSIFICATION	5.501416616848557E-6	DESIGN	5.399572733745357E-6	IMPLEMENTATION	4.747059093411401E-7	DEFECT	3.212560928857136E-7	DOCUMENTATION	1.6807385833475368E-7	TEST
// TABLE	WITHOUT_CLASSIFICATION	0.9999973838235482	WITHOUT_CLASSIFICATION	1.5132732253505045E-6	DESIGN	8.207002128458885E-7	DEFECT	1.4349984586051218E-7	IMPLEMENTATION	7.894675570269289E-8	DOCUMENTATION	5.975641206895877E-8	TEST
//tableName = mappings.getNamingStrategy().propertyToTableName( className, path );	WITHOUT_CLASSIFICATION	0.9999977929708748	WITHOUT_CLASSIFICATION	1.6428494003357423E-6	DESIGN	2.1481550703311843E-7	TEST	1.8779933380367276E-7	DEFECT	1.4721933979772192E-7	IMPLEMENTATION	1.4345544436276789E-8	DOCUMENTATION
// SORT	WITHOUT_CLASSIFICATION	0.9999900676938395	WITHOUT_CLASSIFICATION	7.690290422484382E-6	DESIGN	1.154820432494721E-6	DEFECT	7.029369515019366E-7	IMPLEMENTATION	2.528082152224429E-7	DOCUMENTATION	1.3145013878803088E-7	TEST
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999864331753276	WITHOUT_CLASSIFICATION	1.304187344118653E-5	DESIGN	3.000180833753139E-7	DEFECT	1.3733419117804303E-7	DOCUMENTATION	4.489085114969508E-8	IMPLEMENTATION	4.270810557968649E-8	TEST
// unsorted, natural, comparator.class.name	WITHOUT_CLASSIFICATION	0.9999897890212626	WITHOUT_CLASSIFICATION	1.0165035133964765E-5	DESIGN	1.9769827410001893E-8	DEFECT	1.939529405503305E-8	IMPLEMENTATION	5.3429577330472915E-9	TEST	1.4355242192308157E-9	DOCUMENTATION
// ORPHAN DELETE (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.9999980978359635	WITHOUT_CLASSIFICATION	1.5516423742922612E-6	IMPLEMENTATION	3.3347956664141507E-7	DESIGN	1.0629637261603118E-8	DOCUMENTATION	3.778151131162498E-9	DEFECT	2.6343071641738987E-9	TEST
// set up second pass	WITHOUT_CLASSIFICATION	0.9999979998862691	WITHOUT_CLASSIFICATION	1.7780193174748277E-6	DESIGN	1.551453424072674E-7	IMPLEMENTATION	3.748477873306079E-8	DEFECT	2.4143646538997174E-8	DOCUMENTATION	5.320645483172682E-9	TEST
// an "embedded" component (composite ids and unique) // note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.9994273499738865	WITHOUT_CLASSIFICATION	5.524494854711062E-4	DESIGN	1.9145444764923008E-5	TEST	1.019941441644082E-6	IMPLEMENTATION	1.908393297386506E-8	DOCUMENTATION	1.6070503007768238E-8	DEFECT
// a nested composite element	WITHOUT_CLASSIFICATION	0.9999980768918847	WITHOUT_CLASSIFICATION	1.6491111274118073E-6	DESIGN	1.3860228727111362E-7	IMPLEMENTATION	6.737010632396485E-8	TEST	5.823343785357748E-8	DEFECT	9.791156461773825E-9	DOCUMENTATION
// for an any // we will have to use reflection	WITHOUT_CLASSIFICATION	0.9999835716138016	WITHOUT_CLASSIFICATION	1.3513813678960736E-5	DESIGN	2.8174391447750187E-6	DEFECT	5.749074904294208E-8	IMPLEMENTATION	3.3724618547102395E-8	DOCUMENTATION	5.918007054453937E-9	TEST
//NOTE SPECIAL CASE: // one-to-one constrained=false cannot be proxied, // so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.9999999913240328	WITHOUT_CLASSIFICATION	8.570971534380758E-9	DESIGN	4.9836795143909914E-11	IMPLEMENTATION	4.172574594118142E-11	DOCUMENTATION	1.3087250271499517E-11	DEFECT	3.45714350687113E-13	TEST
// use old (HB 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.9999997551678683	WITHOUT_CLASSIFICATION	1.746013808780582E-7	DESIGN	6.567350839260382E-8	IMPLEMENTATION	2.180414521681867E-9	DOCUMENTATION	1.8972591501866664E-9	DEFECT	4.795688349780226E-10	TEST
//lazy = !join;	WITHOUT_CLASSIFICATION	0.9999826989076649	WITHOUT_CLASSIFICATION	1.0199048648129499E-5	DESIGN	5.180104613664543E-6	DEFECT	1.0215289544667006E-6	IMPLEMENTATION	7.633382391531116E-7	DOCUMENTATION	1.3707187976628795E-7	TEST
// GENERATOR	WITHOUT_CLASSIFICATION	0.9999955228056736	WITHOUT_CLASSIFICATION	2.770962727315924E-6	DESIGN	1.0011019281155845E-6	IMPLEMENTATION	3.982013447449438E-7	DEFECT	1.692138577222311E-7	DOCUMENTATION	1.377144685869696E-7	TEST
// ID UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999933187384461	WITHOUT_CLASSIFICATION	3.97143154727997E-6	IMPLEMENTATION	2.044090548310286E-6	DESIGN	4.893990590097872E-7	DEFECT	1.0825602325480084E-7	DOCUMENTATION	6.808437600934393E-8	TEST
// VERSION UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999995254769255	WITHOUT_CLASSIFICATION	3.111713393646328E-7	DESIGN	8.195624368929863E-8	IMPLEMENTATION	4.399184306778478E-8	DEFECT	2.3321921561311013E-8	DOCUMENTATION	1.40817269236442E-8	TEST
// not necessarily a *unique* property reference	WITHOUT_CLASSIFICATION	0.9993470488088219	WITHOUT_CLASSIFICATION	3.2911072079061445E-4	DESIGN	2.2163689369396726E-4	IMPLEMENTATION	1.0061489923251951E-4	DEFECT	1.4874332560155444E-6	DOCUMENTATION	1.0124420504072081E-7	TEST
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999206579742573	WITHOUT_CLASSIFICATION	4.055961563795111E-5	DESIGN	3.128631117461922E-5	IMPLEMENTATION	7.3441594387392755E-6	DEFECT	1.3097844466804577E-7	TEST	2.0961046674792136E-8	DOCUMENTATION
// contained elements:	WITHOUT_CLASSIFICATION	0.999997465790931	WITHOUT_CLASSIFICATION	2.3839354462176297E-6	DESIGN	9.424165565026616E-8	IMPLEMENTATION	3.2757333775971E-8	DEFECT	1.7100609437097042E-8	DOCUMENTATION	6.174023914270675E-9	TEST
// for non-inverse one-to-many, with a not-null fk, add a backref!	WITHOUT_CLASSIFICATION	0.9999827064349385	WITHOUT_CLASSIFICATION	9.028897282172155E-6	DESIGN	6.436035490759086E-6	IMPLEMENTATION	1.7935681820242758E-6	DEFECT	2.7418371294786028E-8	DOCUMENTATION	7.645735272190386E-9	TEST
// Bind the where	WITHOUT_CLASSIFICATION	0.9998402275217659	WITHOUT_CLASSIFICATION	1.0149232328621338E-4	DESIGN	4.347627470179213E-5	IMPLEMENTATION	1.0788019892999739E-5	DEFECT	2.6738562342530572E-6	DOCUMENTATION	1.3420041186960925E-6	TEST
// Bind the order-by	WITHOUT_CLASSIFICATION	0.9999815047420544	WITHOUT_CLASSIFICATION	7.749513529379734E-6	IMPLEMENTATION	7.095368381927581E-6	DESIGN	3.3003147093145777E-6	DEFECT	3.002543475071205E-7	DOCUMENTATION	4.9806977435895344E-8	TEST
// Bind the filters	WITHOUT_CLASSIFICATION	0.9999564305116174	WITHOUT_CLASSIFICATION	3.5189881068618974E-5	IMPLEMENTATION	6.3800273602107325E-6	DESIGN	1.6663838218335652E-6	DEFECT	2.143242256859019E-7	TEST	1.1887190622367024E-7	DOCUMENTATION
// overriding inherited meta attribute. HBX-621 & HBX-793	WITHOUT_CLASSIFICATION	0.9999904153284485	WITHOUT_CLASSIFICATION	4.4368192040575925E-6	DESIGN	3.3498904872311813E-6	IMPLEMENTATION	1.6903642701851186E-6	DEFECT	1.0137582946850545E-7	TEST	6.221760621432874E-9	DOCUMENTATION
// first, iterate over all elements capable of defining an extends attribute // collecting all found extends references if they cannot be resolved // against the already processed mappings.	WITHOUT_CLASSIFICATION	0.9999999993207646	WITHOUT_CLASSIFICATION	6.720957984003081E-10	IMPLEMENTATION	6.086882268544566E-12	DESIGN	1.0210591718392336E-12	TEST	2.5791714011763122E-14	DOCUMENTATION	6.0020774178324985E-15	DEFECT
// mappings might contain either the "raw" extends name (in the case of // an entity-name mapping) or a FQN (in the case of a POJO mapping).	WITHOUT_CLASSIFICATION	0.9999619490110693	WITHOUT_CLASSIFICATION	3.770966701865579E-5	DESIGN	3.086050529945556E-7	DEFECT	1.7019134982372383E-8	IMPLEMENTATION	1.1044064545034967E-8	TEST	4.6536596623008885E-9	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9126935966366386	WITHOUT_CLASSIFICATION	0.08730346184245277	DESIGN	1.563498805195549E-6	DEFECT	7.4878600094317E-7	IMPLEMENTATION	4.234587550538026E-7	DOCUMENTATION	2.057773473750039E-7	TEST
//SessionFactory name:	WITHOUT_CLASSIFICATION	0.999220659256613	WITHOUT_CLASSIFICATION	7.712835808953556E-4	DESIGN	5.404703446400357E-6	DEFECT	1.3757187635058455E-6	DOCUMENTATION	7.416039904646019E-7	IMPLEMENTATION	5.351362914864308E-7	TEST
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9996850471283804	WITHOUT_CLASSIFICATION	2.3472970277504162E-4	DESIGN	3.523499106219433E-5	IMPLEMENTATION	3.000055661955382E-5	DEFECT	1.4362053188015806E-5	DOCUMENTATION	6.255679747463112E-7	TEST
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9996850471283804	WITHOUT_CLASSIFICATION	2.3472970277504162E-4	DESIGN	3.523499106219433E-5	IMPLEMENTATION	3.000055661955382E-5	DEFECT	1.4362053188015806E-5	DOCUMENTATION	6.255679747463112E-7	TEST
//Interrogate JDBC metadata	WITHOUT_CLASSIFICATION	0.9999835864708884	WITHOUT_CLASSIFICATION	7.337284653294274E-6	DESIGN	5.030187283198591E-6	IMPLEMENTATION	2.5254355821618376E-6	DEFECT	9.500922646486926E-7	DOCUMENTATION	5.705293283604767E-7	TEST
// user supplied JDBC connections	WITHOUT_CLASSIFICATION	0.9998338221465932	WITHOUT_CLASSIFICATION	1.1380729795373286E-4	IMPLEMENTATION	5.169105517762406E-5	DESIGN	4.88530768960628E-7	DEFECT	1.5271059257268475E-7	DOCUMENTATION	3.8258913733885427E-8	TEST
//use dialect default properties	WITHOUT_CLASSIFICATION	0.9999785276097437	WITHOUT_CLASSIFICATION	2.0697318103118054E-5	DESIGN	5.47951637350483E-7	IMPLEMENTATION	1.2797696635733098E-7	DEFECT	7.79987469987232E-8	DOCUMENTATION	2.1144802454245854E-8	TEST
// Transaction settings:	WITHOUT_CLASSIFICATION	0.9999777060455417	WITHOUT_CLASSIFICATION	1.9446107719345416E-5	DESIGN	1.6239753363131203E-6	DEFECT	7.975953290939484E-7	IMPLEMENTATION	3.7918064397058275E-7	DOCUMENTATION	4.709542979198792E-8	TEST
//SQL Generation settings:	WITHOUT_CLASSIFICATION	0.99984598840402	WITHOUT_CLASSIFICATION	1.5291838356902836E-4	DESIGN	7.498384144788218E-7	DEFECT	2.4811613085319857E-7	DOCUMENTATION	8.050353019156647E-8	TEST	1.4754335637392363E-8	IMPLEMENTATION
//Query parser settings:	WITHOUT_CLASSIFICATION	0.9988959180998735	WITHOUT_CLASSIFICATION	5.681089917708867E-4	DEFECT	5.343366420897179E-4	DESIGN	7.219966339540888E-7	DOCUMENTATION	5.106574888620126E-7	IMPLEMENTATION	4.0361214302134993E-7	TEST
// Second-level / query cache:	WITHOUT_CLASSIFICATION	0.9999488455189111	WITHOUT_CLASSIFICATION	4.551659912018124E-5	DESIGN	5.0931641387483425E-6	DEFECT	4.6584499423812945E-7	IMPLEMENTATION	5.5620242263051715E-8	DOCUMENTATION	2.3252593395305273E-8	TEST
// The cache provider is needed when we either have second-level cache enabled // or query cache enabled.  Note that useSecondLevelCache is enabled by default	WITHOUT_CLASSIFICATION	0.9999957793507779	WITHOUT_CLASSIFICATION	3.661582344787323E-6	DESIGN	5.406282883227661E-7	DEFECT	1.3095445403194516E-8	TEST	4.930191984934794E-9	IMPLEMENTATION	4.129515669020184E-10	DOCUMENTATION
//SQL Exception converter:	WITHOUT_CLASSIFICATION	0.9998894205106956	WITHOUT_CLASSIFICATION	1.0654236308844945E-4	DESIGN	3.098786705267138E-6	DEFECT	5.534462073857472E-7	DOCUMENTATION	2.6620718976663456E-7	TEST	1.186861136500989E-7	IMPLEMENTATION
//Statistics and logging:	WITHOUT_CLASSIFICATION	0.9999919003853857	WITHOUT_CLASSIFICATION	5.708506076949175E-6	DESIGN	1.9530904025612573E-6	DEFECT	1.9473160747976918E-7	DOCUMENTATION	1.830503123195404E-7	IMPLEMENTATION	6.023621507723932E-8	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
//Schema export:	WITHOUT_CLASSIFICATION	0.9998254798147599	WITHOUT_CLASSIFICATION	1.5988783703385393E-4	DESIGN	8.853740346886801E-6	DEFECT	4.59545774688036E-6	IMPLEMENTATION	7.812580116628948E-7	DOCUMENTATION	4.0189210071026577E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// legacy behavior, apply the bridge...	WITHOUT_CLASSIFICATION	0.999313033594959	WITHOUT_CLASSIFICATION	6.542503571712891E-4	DESIGN	1.8524781199821815E-5	DEFECT	1.3504181453043576E-5	IMPLEMENTATION	3.6440707372953454E-7	TEST	3.2267814324674977E-7	DOCUMENTATION
// maybe a concrete SQLpropertyresult type, but Map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.9992046606444445	WITHOUT_CLASSIFICATION	5.813653138058959E-4	DEFECT	2.1360174463560944E-4	DESIGN	1.8641868456015913E-7	DOCUMENTATION	1.4871328402337487E-7	TEST	3.7165145438157596E-8	IMPLEMENTATION
//if dotted and not load-collection nor return-join //regular property	WITHOUT_CLASSIFICATION	0.999999548748845	WITHOUT_CLASSIFICATION	2.7348327578952826E-7	DEFECT	1.2837133998037562E-7	DESIGN	4.539715992437498E-8	IMPLEMENTATION	2.9444604096361054E-9	DOCUMENTATION	1.054918922500382E-9	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999970527339275	WITHOUT_CLASSIFICATION	2.8821491925115758E-6	DESIGN	4.59522659456088E-8	DEFECT	1.1123841266565957E-8	IMPLEMENTATION	5.411753950044327E-9	TEST	2.6290187960596963E-9	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999896598521624	WITHOUT_CLASSIFICATION	9.406338102957569E-6	DESIGN	5.017408753191501E-7	IMPLEMENTATION	4.107410917856265E-7	DEFECT	1.1173669956566823E-8	TEST	1.0154097617217542E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// using local since the inheritedMetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.9999957007245579	WITHOUT_CLASSIFICATION	3.7417270520628096E-6	DEFECT	5.421029338012497E-7	DESIGN	1.4367497462430865E-8	IMPLEMENTATION	8.025760676913872E-10	TEST	2.7538276894086747E-10	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// if doc is null, then for whatever reason, the cached file cannot be used...	WITHOUT_CLASSIFICATION	0.9999987758431931	WITHOUT_CLASSIFICATION	7.679981959033527E-7	DESIGN	4.504625395090248E-7	DEFECT	4.808927049168892E-9	TEST	8.190412091334481E-10	DOCUMENTATION	6.810325942032101E-11	IMPLEMENTATION
// drop them in reverse order in case db needs it done that way...	WITHOUT_CLASSIFICATION	0.9753261828236749	WITHOUT_CLASSIFICATION	0.023778575609313547	DESIGN	8.55565836439157E-4	DEFECT	3.637358118811986E-5	IMPLEMENTATION	2.5868340266210784E-6	DOCUMENTATION	7.153153576391471E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// This method may be called many times!!	WITHOUT_CLASSIFICATION	0.9914801081274821	WITHOUT_CLASSIFICATION	0.00615807060298963	IMPLEMENTATION	0.0017384093365435788	DESIGN	6.17707085127348E-4	DEFECT	3.6036010783456093E-6	TEST	2.1012467791757185E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// found	WITHOUT_CLASSIFICATION	0.9999762135884365	WITHOUT_CLASSIFICATION	1.9449339442365705E-5	DESIGN	3.328763354163169E-6	DEFECT	7.504746393290772E-7	IMPLEMENTATION	1.691449337577423E-7	DOCUMENTATION	8.868919401888641E-8	TEST
// found	WITHOUT_CLASSIFICATION	0.9999762135884365	WITHOUT_CLASSIFICATION	1.9449339442365705E-5	DESIGN	3.328763354163169E-6	DEFECT	7.504746393290772E-7	IMPLEMENTATION	1.691449337577423E-7	DOCUMENTATION	8.868919401888641E-8	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
//<String, String>	WITHOUT_CLASSIFICATION	0.9999167023901099	WITHOUT_CLASSIFICATION	7.206247411408477E-5	DESIGN	7.55414140697074E-6	DEFECT	1.7563957331311852E-6	DOCUMENTATION	1.2286665281556814E-6	IMPLEMENTATION	6.95932107728177E-7	TEST
//<String, String>	WITHOUT_CLASSIFICATION	0.9999167023901099	WITHOUT_CLASSIFICATION	7.206247411408477E-5	DESIGN	7.55414140697074E-6	DEFECT	1.7563957331311852E-6	DOCUMENTATION	1.2286665281556814E-6	IMPLEMENTATION	6.95932107728177E-7	TEST
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9126935966366386	WITHOUT_CLASSIFICATION	0.08730346184245277	DESIGN	1.563498805195549E-6	DEFECT	7.4878600094317E-7	IMPLEMENTATION	4.234587550538026E-7	DOCUMENTATION	2.057773473750039E-7	TEST
//Set USE_REFLECTION_OPTIMIZER to false to fix HHH-227	WITHOUT_CLASSIFICATION	0.9999992975956062	WITHOUT_CLASSIFICATION	4.657608971414948E-7	DESIGN	1.7283740515214296E-7	DEFECT	3.369660860621217E-8	IMPLEMENTATION	1.9397720005217206E-8	DOCUMENTATION	1.0711762695614956E-8	TEST
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9998750528000316	WITHOUT_CLASSIFICATION	1.2237112041275978E-4	DESIGN	1.2402005300351839E-6	IMPLEMENTATION	8.633263635643483E-7	TEST	2.638783033523441E-7	DOCUMENTATION	2.0867435860624192E-7	DEFECT
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999994368035566	WITHOUT_CLASSIFICATION	2.97860093036786E-7	DESIGN	1.4825650888619492E-7	IMPLEMENTATION	9.012477129243962E-8	TEST	2.2996121346005298E-8	DEFECT	3.958948742654621E-9	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.999906322955385	WITHOUT_CLASSIFICATION	9.322978057345036E-5	DESIGN	2.5628418703942373E-7	DEFECT	1.5369499505241438E-7	DOCUMENTATION	2.6784455240985085E-8	IMPLEMENTATION	1.0500404385992159E-8	TEST
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9998750528000316	WITHOUT_CLASSIFICATION	1.2237112041275978E-4	DESIGN	1.2402005300351839E-6	IMPLEMENTATION	8.633263635643483E-7	TEST	2.638783033523441E-7	DOCUMENTATION	2.0867435860624192E-7	DEFECT
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999994368035566	WITHOUT_CLASSIFICATION	2.97860093036786E-7	DESIGN	1.4825650888619492E-7	IMPLEMENTATION	9.012477129243962E-8	TEST	2.2996121346005298E-8	DEFECT	3.958948742654621E-9	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.999993027681519	WITHOUT_CLASSIFICATION	4.9507278255283016E-6	IMPLEMENTATION	8.490272964923475E-7	TEST	8.083281645080098E-7	DESIGN	2.6349307273052384E-7	DOCUMENTATION	1.0074212185974336E-7	DEFECT
//maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.9999964858059202	WITHOUT_CLASSIFICATION	3.4802218713355106E-6	DESIGN	1.6239201828762333E-8	TEST	1.4159276342932355E-8	DEFECT	3.5724189832601504E-9	DOCUMENTATION	1.3113129010063497E-12	IMPLEMENTATION
// the element has been removed from the set	WITHOUT_CLASSIFICATION	0.9999757878713612	WITHOUT_CLASSIFICATION	2.3737956014521033E-5	DESIGN	3.879522711438156E-7	DEFECT	8.05531905620978E-8	IMPLEMENTATION	3.3879046029850463E-9	TEST	2.2792578860327782E-9	DOCUMENTATION
// the element has changed	WITHOUT_CLASSIFICATION	0.9999746359263171	WITHOUT_CLASSIFICATION	1.2642017722627202E-5	DESIGN	1.2078627269183246E-5	IMPLEMENTATION	4.995862167441025E-7	DEFECT	1.1119713405496186E-7	TEST	3.264534040912348E-8	DOCUMENTATION
//Careful: these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.9797525208375935	WITHOUT_CLASSIFICATION	0.01886819744777787	DESIGN	0.0012762431122569607	IMPLEMENTATION	6.0490254469939016E-5	DEFECT	4.13151964512217E-5	TEST	1.2331514505134065E-6	DOCUMENTATION
//needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.5156216176709362	DESIGN	0.48437264046655254	WITHOUT_CLASSIFICATION	2.1888275558161923E-6	DEFECT	1.539125799447834E-6	DOCUMENTATION	1.0301976026638448E-6	TEST	9.837115531413083E-7	IMPLEMENTATION
// override on some subclasses	WITHOUT_CLASSIFICATION	0.9999997267951206	WITHOUT_CLASSIFICATION	1.851547622782493E-7	DESIGN	5.44105240775354E-8	IMPLEMENTATION	1.9679081976501314E-8	DEFECT	1.1165280416708148E-8	DOCUMENTATION	2.795230841617027E-9	TEST
//override on some subclasses	WITHOUT_CLASSIFICATION	0.999997093170227	WITHOUT_CLASSIFICATION	2.4399154908730345E-6	DESIGN	2.5751671628838877E-7	IMPLEMENTATION	1.1896235871559557E-7	DOCUMENTATION	6.61669302949663E-8	DEFECT	2.4268276918467773E-8	TEST
//do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.999512224055021	WITHOUT_CLASSIFICATION	4.4987742690272145E-4	DESIGN	2.292494193665969E-5	IMPLEMENTATION	1.108946000878487E-5	DEFECT	2.3630018209398804E-6	TEST	1.5211143098575993E-6	DOCUMENTATION
// short-circuit(s) // no new elements, the old list contains only Orphans // no old elements, so no Orphans neither	WITHOUT_CLASSIFICATION	0.9999999956688621	WITHOUT_CLASSIFICATION	4.285498457442783E-9	DESIGN	3.2299723172004534E-11	TEST	6.425866163875475E-12	DEFECT	4.941834518626431E-12	DOCUMENTATION	1.9720091587045513E-12	IMPLEMENTATION
// create the collection holding the Orphans	WITHOUT_CLASSIFICATION	0.999996775637767	WITHOUT_CLASSIFICATION	2.3306760626667193E-6	DEFECT	4.4344252401858496E-7	IMPLEMENTATION	4.034433749285056E-7	DESIGN	3.417693764548882E-8	TEST	1.262333384915823E-8	DOCUMENTATION
// collect EntityIdentifier(s) of the *current* elements - add them into a HashSet for fast access	WITHOUT_CLASSIFICATION	0.9999806377130002	WITHOUT_CLASSIFICATION	1.93382310343138E-5	DESIGN	1.766822719195266E-8	DEFECT	4.501367656013136E-9	TEST	1.2795454075837062E-9	DOCUMENTATION	6.068254228067079E-10	IMPLEMENTATION
// iterate over the *old* list	WITHOUT_CLASSIFICATION	0.9999998051578122	WITHOUT_CLASSIFICATION	1.8814450908754566E-7	DESIGN	5.140506578542317E-9	TEST	1.0077972351311892E-9	IMPLEMENTATION	3.8119552814685E-10	DEFECT	1.681792044209905E-10	DOCUMENTATION
/*(array==null) ? tempList.size() :*/	WITHOUT_CLASSIFICATION	0.999920762884039	WITHOUT_CLASSIFICATION	4.8622202425442304E-5	IMPLEMENTATION	2.4543197227500338E-5	DEFECT	3.031111757296108E-6	DESIGN	2.8745153263275033E-6	TEST	1.6608922452084044E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.999906322955385	WITHOUT_CLASSIFICATION	9.322978057345036E-5	DESIGN	2.5628418703942373E-7	DEFECT	1.5369499505241438E-7	DOCUMENTATION	2.6784455240985085E-8	IMPLEMENTATION	1.0500404385992159E-8	TEST
/*(array==null) ? tempList.get(i) :*/	WITHOUT_CLASSIFICATION	0.9999528783449603	WITHOUT_CLASSIFICATION	1.994244268802694E-5	DEFECT	1.9643911678461505E-5	IMPLEMENTATION	5.652176283935242E-6	DESIGN	1.7698115237461784E-6	TEST	1.1331286550293699E-7	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999878353991266	WITHOUT_CLASSIFICATION	5.134748070056139E-6	DEFECT	4.556013460798101E-6	DESIGN	1.8494809965039509E-6	TEST	5.916715747944435E-7	DOCUMENTATION	3.268677116662812E-8	IMPLEMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999878353991266	WITHOUT_CLASSIFICATION	5.134748070056139E-6	DEFECT	4.556013460798101E-6	DESIGN	1.8494809965039509E-6	TEST	5.916715747944435E-7	DOCUMENTATION	3.268677116662812E-8	IMPLEMENTATION
// amazingly, these two will work because AbstractCollection // uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.9990924131308374	WITHOUT_CLASSIFICATION	8.924385295671134E-4	DESIGN	1.0775755496059375E-5	DEFECT	3.691781091922034E-6	IMPLEMENTATION	3.881437962513715E-7	DOCUMENTATION	2.926592113045356E-7	TEST
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.999993027681519	WITHOUT_CLASSIFICATION	4.9507278255283016E-6	IMPLEMENTATION	8.490272964923475E-7	TEST	8.083281645080098E-7	DESIGN	2.6349307273052384E-7	DOCUMENTATION	1.0074212185974336E-7	DEFECT
// finally, what it's all about...	WITHOUT_CLASSIFICATION	0.99777125545864	WITHOUT_CLASSIFICATION	0.0017550360067593227	DEFECT	2.47818521443987E-4	IMPLEMENTATION	2.2229052408300344E-4	DESIGN	2.039444354392062E-6	TEST	1.5600447193098993E-6	DOCUMENTATION
// note that if we load this collection from a cartesian product // the multiplicity would be broken ... so use an idbag instead	WITHOUT_CLASSIFICATION	0.9997339899560345	DESIGN	2.6512317246685983E-4	WITHOUT_CLASSIFICATION	6.107086891373982E-7	DEFECT	2.714735251841586E-7	TEST	2.4001074745298416E-9	IMPLEMENTATION	2.289176769539953E-9	DOCUMENTATION
// Anyway, here we implement <set> semantics for a // <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.9068986940658024	WITHOUT_CLASSIFICATION	0.08767002105155265	DESIGN	0.0044866323365606005	DEFECT	8.909196651170012E-4	IMPLEMENTATION	3.660092953785427E-5	TEST	1.7131951429634583E-5	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999988963233502	WITHOUT_CLASSIFICATION	7.954014917391621E-7	DEFECT	2.915152475550555E-7	DESIGN	1.3896464934173157E-8	TEST	2.644162602703742E-9	DOCUMENTATION	2.1928318125478818E-10	IMPLEMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9416129364875352	WITHOUT_CLASSIFICATION	0.05826733116314317	DESIGN	6.990027743087263E-5	DEFECT	4.596197926207881E-5	TEST	2.777821992092214E-6	IMPLEMENTATION	1.0922706366404114E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.999993027681519	WITHOUT_CLASSIFICATION	4.9507278255283016E-6	IMPLEMENTATION	8.490272964923475E-7	TEST	8.083281645080098E-7	DESIGN	2.6349307273052384E-7	DOCUMENTATION	1.0074212185974336E-7	DEFECT
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999988963233502	WITHOUT_CLASSIFICATION	7.954014917391621E-7	DEFECT	2.915152475550555E-7	DESIGN	1.3896464934173157E-8	TEST	2.644162602703742E-9	DOCUMENTATION	2.1928318125478818E-10	IMPLEMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9416129364875352	WITHOUT_CLASSIFICATION	0.05826733116314317	DESIGN	6.990027743087263E-5	DEFECT	4.596197926207881E-5	TEST	2.777821992092214E-6	IMPLEMENTATION	1.0922706366404114E-6	DOCUMENTATION
/*public boolean equals(Object other) {	WITHOUT_CLASSIFICATION	0.9416489283401559	WITHOUT_CLASSIFICATION	0.05828447138513555	DESIGN	5.4843958483362106E-5	IMPLEMENTATION	7.360971362968451E-6	DOCUMENTATION	3.6805719344144837E-6	TEST	7.147729278288769E-7	DEFECT
// List OPERATIONS:	WITHOUT_CLASSIFICATION	0.999998934221137	WITHOUT_CLASSIFICATION	8.758099516319441E-7	IMPLEMENTATION	9.654156477968239E-8	TEST	4.0911931437423514E-8	DEFECT	3.877467355853229E-8	DESIGN	1.3740741730566384E-8	DOCUMENTATION
//pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.9999949690608613	WITHOUT_CLASSIFICATION	4.7403321850533134E-6	DEFECT	2.5736768167072086E-7	DESIGN	1.7698479695427696E-8	DOCUMENTATION	9.330943297372305E-9	IMPLEMENTATION	6.209848906214573E-9	TEST
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.999993027681519	WITHOUT_CLASSIFICATION	4.9507278255283016E-6	IMPLEMENTATION	8.490272964923475E-7	TEST	8.083281645080098E-7	DESIGN	2.6349307273052384E-7	DOCUMENTATION	1.0074212185974336E-7	DEFECT
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.999993027681519	WITHOUT_CLASSIFICATION	4.9507278255283016E-6	IMPLEMENTATION	8.490272964923475E-7	TEST	8.083281645080098E-7	DESIGN	2.6349307273052384E-7	DOCUMENTATION	1.0074212185974336E-7	DEFECT
// from Map	WITHOUT_CLASSIFICATION	0.9999961893860325	WITHOUT_CLASSIFICATION	2.5015056600756967E-6	DESIGN	6.816210431106856E-7	DEFECT	5.545281204503276E-7	IMPLEMENTATION	4.2717754843231794E-8	TEST	3.024138904103085E-8	DOCUMENTATION
// from SortedMap	WITHOUT_CLASSIFICATION	0.9999876901601116	WITHOUT_CLASSIFICATION	8.366855116162876E-6	DESIGN	2.6653686204234763E-6	DEFECT	1.1000622764732039E-6	IMPLEMENTATION	1.1020974787395352E-7	TEST	6.734412747941851E-8	DOCUMENTATION
//inject the data	WITHOUT_CLASSIFICATION	0.9999179384063203	WITHOUT_CLASSIFICATION	6.02556576078865E-5	DESIGN	1.70180247456947E-5	IMPLEMENTATION	3.0706421511903533E-6	DEFECT	1.417901883662173E-6	DOCUMENTATION	2.9936729133383335E-7	TEST
// cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999797060770439	WITHOUT_CLASSIFICATION	2.0078169265257335E-5	DESIGN	2.0395864632091767E-7	DEFECT	5.087747710313439E-9	DOCUMENTATION	3.650286014767637E-9	TEST	3.0570108035971945E-9	IMPLEMENTATION
//default pool size 20	WITHOUT_CLASSIFICATION	0.9999984204131976	WITHOUT_CLASSIFICATION	5.360784129396559E-7	IMPLEMENTATION	4.903723391922958E-7	DEFECT	4.682562445213591E-7	DESIGN	7.259990358216371E-8	DOCUMENTATION	1.227990203824037E-8	TEST
// trying via forName() first to be as close to DriverManager's semantics	WITHOUT_CLASSIFICATION	0.9999999904839354	WITHOUT_CLASSIFICATION	8.304397501761356E-9	DESIGN	9.33766464284079E-10	DEFECT	1.6702173446680797E-10	TEST	6.623180336941022E-11	DOCUMENTATION	4.464702086503025E-11	IMPLEMENTATION
// if debug level is enabled, then log the password, otherwise mask it	WITHOUT_CLASSIFICATION	0.9999951977962571	WITHOUT_CLASSIFICATION	4.714192828591492E-6	IMPLEMENTATION	5.317258381152031E-8	TEST	2.4497065443553288E-8	DESIGN	1.0150247461226495E-8	DEFECT	1.9101759857471356E-10	DOCUMENTATION
// register a cleanup synch	WITHOUT_CLASSIFICATION	0.9996155059135516	WITHOUT_CLASSIFICATION	3.8440372701874004E-4	DESIGN	4.9713737689140444E-8	DEFECT	1.4661064718145966E-8	IMPLEMENTATION	1.3360414139854263E-8	DOCUMENTATION	1.2624213135642072E-8	TEST
// wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.9999848107988053	WITHOUT_CLASSIFICATION	1.50677545259852E-5	DESIGN	7.162922327913272E-8	DEFECT	3.058584949118607E-8	IMPLEMENTATION	1.831848548986797E-8	DOCUMENTATION	9.131104546613499E-10	TEST
// then bind it	WITHOUT_CLASSIFICATION	0.9999496151843398	WITHOUT_CLASSIFICATION	2.6383145745316536E-5	DESIGN	1.1001562387824744E-5	IMPLEMENTATION	1.0564897563675925E-5	DEFECT	1.4712322828754579E-6	TEST	9.639776805409012E-7	DOCUMENTATION
// try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.9999979209733594	WITHOUT_CLASSIFICATION	1.3543622190828061E-6	DESIGN	6.329536872411034E-7	DEFECT	5.136178945957641E-8	IMPLEMENTATION	3.864104007586779E-8	DOCUMENTATION	1.7079047789269698E-9	TEST
// allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.999972744793389	WITHOUT_CLASSIFICATION	2.1897103613362316E-5	DESIGN	5.321203962153645E-6	IMPLEMENTATION	2.513640753020915E-8	DEFECT	1.0891383725671634E-8	DOCUMENTATION	8.712442698880143E-10	TEST
// limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.9999881686343449	WITHOUT_CLASSIFICATION	1.1801756982274084E-5	DESIGN	1.8255910010641115E-8	TEST	8.487071019520779E-9	IMPLEMENTATION	1.4717417401215457E-9	DEFECT	1.3939500697284035E-9	DOCUMENTATION
// allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.9984445166492352	WITHOUT_CLASSIFICATION	0.0015403209595974828	DESIGN	1.5053892789545958E-5	IMPLEMENTATION	4.839923578133008E-8	DEFECT	3.231211299569764E-8	TEST	2.7787029018550672E-8	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998424306201	WITHOUT_CLASSIFICATION	1.3045318742250263E-6	DEFECT	1.968191583849047E-7	DESIGN	4.4201417358667536E-8	IMPLEMENTATION	2.2497211098997165E-8	DOCUMENTATION	7.644137955440487E-9	TEST
// We could register the session against the transaction even though it is // not started, but we'd have no guarentee of ever getting the map // entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.9996449378591752	WITHOUT_CLASSIFICATION	3.5495791269631765E-4	DESIGN	5.844671142895228E-8	DEFECT	2.7235460780571155E-8	TEST	1.780419703822999E-8	IMPLEMENTATION	7.417592911851607E-10	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9993262603102323	WITHOUT_CLASSIFICATION	6.730020955168756E-4	DESIGN	5.258255781649275E-7	DEFECT	1.1989290325623498E-7	DOCUMENTATION	6.700702380892609E-8	TEST	2.4868745676976936E-8	IMPLEMENTATION
//private String propertyName;	WITHOUT_CLASSIFICATION	0.9962385422644554	WITHOUT_CLASSIFICATION	0.0036840002773109973	DESIGN	6.018318303226407E-5	DEFECT	1.2946483725106782E-5	DOCUMENTATION	4.194056494412608E-6	TEST	1.3373498182007079E-7	IMPLEMENTATION
/*public PropertyProjection project() {	WITHOUT_CLASSIFICATION	0.9940996804592099	WITHOUT_CLASSIFICATION	0.0051530964754091385	DESIGN	6.276480847918362E-4	DEFECT	6.946837062205364E-5	IMPLEMENTATION	4.909645271196327E-5	DOCUMENTATION	1.0101572551500599E-6	TEST
//String[] fk = StringHelper.qualify( "collection_", cp.getKeyColumnNames() );	WITHOUT_CLASSIFICATION	0.9999996568994983	WITHOUT_CLASSIFICATION	1.4551253107748126E-7	DESIGN	1.2613255946134324E-7	IMPLEMENTATION	5.857348444864373E-8	DEFECT	9.308239468882448E-9	TEST	3.5736873651553954E-9	DOCUMENTATION
//" collection_ where " +	WITHOUT_CLASSIFICATION	0.9999875896592688	WITHOUT_CLASSIFICATION	1.0648599156871868E-5	DESIGN	9.120103705016483E-7	IMPLEMENTATION	6.182961386624771E-7	DEFECT	1.1695915981461548E-7	DOCUMENTATION	1.144759053818439E-7	TEST
//unsupported	WITHOUT_CLASSIFICATION	0.9986932740898625	WITHOUT_CLASSIFICATION	7.927512473958803E-4	DESIGN	4.667241099823346E-4	IMPLEMENTATION	3.2623980685105317E-5	DEFECT	7.681482189665287E-6	DOCUMENTATION	6.945089884390655E-6	TEST
//unsupported	WITHOUT_CLASSIFICATION	0.9986932740898625	WITHOUT_CLASSIFICATION	7.927512473958803E-4	DESIGN	4.667241099823346E-4	IMPLEMENTATION	3.2623980685105317E-5	DEFECT	7.681482189665287E-6	DOCUMENTATION	6.945089884390655E-6	TEST
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9993262603102323	WITHOUT_CLASSIFICATION	6.730020955168756E-4	DESIGN	5.258255781649275E-7	DEFECT	1.1989290325623498E-7	DOCUMENTATION	6.700702380892609E-8	TEST	2.4868745676976936E-8	IMPLEMENTATION
//the following two lines were added to ensure that this.params is not null, which //can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.9998791743903054	WITHOUT_CLASSIFICATION	6.200549338927318E-5	TEST	3.567433147197377E-5	IMPLEMENTATION	1.2880623048453538E-5	DESIGN	1.0184418930251704E-5	DEFECT	8.074285458113453E-8	DOCUMENTATION
//with two-deep subqueries, the same alias would get generated for //both using the old method (criteriaQuery.generateSQLAlias()), so //that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.9935155705656853	WITHOUT_CLASSIFICATION	0.006479239088696704	DESIGN	3.3724504058006053E-6	TEST	1.777105552301024E-6	DEFECT	3.806812775561441E-8	IMPLEMENTATION	2.7215320402921257E-9	DOCUMENTATION
//implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.9679115229962961	WITHOUT_CLASSIFICATION	0.02715341567749088	DESIGN	0.00462537661580101	IMPLEMENTATION	1.5064759066648568E-4	TEST	1.4279057654603794E-4	DEFECT	1.6246543199332144E-5	DOCUMENTATION
//pull off the last ", "	WITHOUT_CLASSIFICATION	0.9999989692432332	WITHOUT_CLASSIFICATION	7.052702830974339E-7	DESIGN	1.1265004020284171E-7	IMPLEMENTATION	1.1093034489463953E-7	TEST	6.216467962482068E-8	DEFECT	3.974141890739077E-8	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999273449079088	WITHOUT_CLASSIFICATION	6.14060101236896E-5	DESIGN	9.12535807880881E-6	DEFECT	8.079590151209746E-7	DOCUMENTATION	7.244488945399539E-7	TEST	5.913159790913724E-7	IMPLEMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.9999994576828322	WITHOUT_CLASSIFICATION	3.3804573100746613E-7	DESIGN	8.820044160386607E-8	IMPLEMENTATION	4.991990824434979E-8	DOCUMENTATION	4.049674717829298E-8	DEFECT	2.5654339554451037E-8	TEST
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource)	WITHOUT_CLASSIFICATION	0.998541886056299	WITHOUT_CLASSIFICATION	0.0014577503788912637	DESIGN	2.817603011681767E-7	DEFECT	4.7475018526499116E-8	DOCUMENTATION	3.108771353295442E-8	IMPLEMENTATION	3.241776545304428E-9	TEST
// NOT_SUPPORTED_SHOULD_USE_JDBC3_PreparedStatement.getGeneratedKeys_method	WITHOUT_CLASSIFICATION	0.9999408613787873	WITHOUT_CLASSIFICATION	4.175975496133454E-5	DESIGN	1.562462177755885E-5	IMPLEMENTATION	8.876938297089997E-7	TEST	7.758904203118532E-7	DEFECT	9.066022369482416E-8	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999999999900643	WITHOUT_CLASSIFICATION	8.0025118770911E-12	DESIGN	1.4389838382051755E-12	DOCUMENTATION	3.7980594413721757E-13	IMPLEMENTATION	8.386002165689944E-14	DEFECT	3.057477925680493E-14	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999928951389117	WITHOUT_CLASSIFICATION	5.467302910336035E-6	IMPLEMENTATION	1.2339920523202466E-6	DESIGN	2.3458748414237456E-7	DOCUMENTATION	1.6340284502967354E-7	DEFECT	5.575796560876287E-9	TEST
// Oracle did add support for ANSI CASE statements in 9i	WITHOUT_CLASSIFICATION	0.999998138257014	WITHOUT_CLASSIFICATION	1.76774234947014E-6	DESIGN	6.632393799315406E-8	IMPLEMENTATION	1.266238792079833E-8	DOCUMENTATION	9.056230291803997E-9	TEST	5.958080261467729E-9	DEFECT
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999585994253545	WITHOUT_CLASSIFICATION	3.4410481903550225E-5	DEFECT	4.188233752547802E-6	DESIGN	2.6174842606803013E-6	IMPLEMENTATION	1.2478473823960772E-7	DOCUMENTATION	5.9589990459391644E-8	TEST
// Informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.9998284199515605	WITHOUT_CLASSIFICATION	1.60387874050105E-4	DEFECT	9.48373171927739E-6	DESIGN	1.2043559065746706E-6	TEST	3.307036093713068E-7	DOCUMENTATION	1.7338315424659193E-7	IMPLEMENTATION
// or BYTE // or TEXT? // or MONEY	WITHOUT_CLASSIFICATION	0.9999647783898507	WITHOUT_CLASSIFICATION	1.821848124674731E-5	DESIGN	1.0499990868339465E-5	IMPLEMENTATION	3.845698324871729E-6	DEFECT	2.039534973726918E-6	TEST	6.179047355836523E-7	DOCUMENTATION
// strip table-owner because Informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.9999999936750434	WITHOUT_CLASSIFICATION	5.016803716486861E-9	DESIGN	1.262634060623829E-9	IMPLEMENTATION	3.4069453106386645E-11	DEFECT	8.363581822213071E-12	DOCUMENTATION	3.0858779767067876E-12	TEST
// build the map of standard ANSI SQL aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999981103046818	WITHOUT_CLASSIFICATION	1.7561520932113423E-6	IMPLEMENTATION	8.381506170820056E-8	DEFECT	4.5375567516191175E-8	DESIGN	3.3076408541455863E-9	DOCUMENTATION	1.0449550177527902E-9	TEST
//pre H3.2 behavior: super.getReturnType(ct, m);	WITHOUT_CLASSIFICATION	0.9995766163400435	WITHOUT_CLASSIFICATION	3.833136852862212E-4	DESIGN	3.9926848938900714E-5	DEFECT	6.772905842150388E-8	IMPLEMENTATION	5.35389184623316E-8	DOCUMENTATION	2.1857754614486766E-8	TEST
// finally use the sqltype if == on Hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.9999931984891124	WITHOUT_CLASSIFICATION	6.791953431411366E-6	DESIGN	9.46980285033395E-9	DEFECT	4.5132567236960594E-11	TEST	2.6547175785590536E-11	DOCUMENTATION	1.5973621886238433E-11	IMPLEMENTATION
//because numeric can be anything	WITHOUT_CLASSIFICATION	0.9999670864854212	WITHOUT_CLASSIFICATION	1.8427838598489503E-5	DESIGN	5.748419895138299E-6	IMPLEMENTATION	4.609905616471674E-6	DOCUMENTATION	4.049982284557917E-6	DEFECT	7.736818413228222E-8	TEST
// constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999559269995631	WITHOUT_CLASSIFICATION	4.116439831227162E-5	DESIGN	2.7082212174464918E-6	IMPLEMENTATION	1.235047840007395E-7	DEFECT	5.908035032665068E-8	TEST	1.7795772751231654E-8	DOCUMENTATION
// standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.9999882682646711	WITHOUT_CLASSIFICATION	8.341014003375935E-6	DESIGN	2.5659531760832376E-6	IMPLEMENTATION	8.130405761285409E-7	DEFECT	9.071281244386384E-9	DOCUMENTATION	2.6562919890448356E-9	TEST
//map second/minute/hour/day/month/year to ANSI extract(), override on subclasses	WITHOUT_CLASSIFICATION	0.9998336688873357	WITHOUT_CLASSIFICATION	1.0717250642686976E-4	IMPLEMENTATION	5.871562445253972E-5	DESIGN	2.8448390321985517E-7	DOCUMENTATION	1.2423848588967477E-7	DEFECT	3.4259395658814265E-8	TEST
// register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.9998433315538134	WITHOUT_CLASSIFICATION	1.5650558379123444E-4	DESIGN	1.5130513937118264E-7	IMPLEMENTATION	9.365847277860064E-9	DOCUMENTATION	1.4391899252074094E-9	DEFECT	7.5221877251723E-10	TEST
// database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999705312135313	WITHOUT_CLASSIFICATION	2.5342495294365284E-4	IMPLEMENTATION	3.202101230212776E-5	DEFECT	8.702686884487715E-6	DESIGN	3.0969412902855503E-7	DOCUMENTATION	2.2951842770179784E-7	TEST
// hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993320643976068	WITHOUT_CLASSIFICATION	3.5214976363976487E-4	IMPLEMENTATION	3.1091040508731554E-4	DESIGN	2.184293019068398E-6	TEST	2.0291420327195144E-6	DEFECT	6.619986144344165E-7	DOCUMENTATION
// keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999860573269884	WITHOUT_CLASSIFICATION	1.2420566685438024E-5	IMPLEMENTATION	8.883291705913747E-7	DESIGN	5.035544132316627E-7	DEFECT	6.695599769298E-8	DOCUMENTATION	6.326674468712019E-8	TEST
// native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997817101219972	WITHOUT_CLASSIFICATION	1.9359592891631376E-4	DESIGN	2.096604779051419E-5	IMPLEMENTATION	3.037315660618489E-6	DEFECT	4.656837640671658E-7	DOCUMENTATION	2.2490187117973453E-7	TEST
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999510845752481	WITHOUT_CLASSIFICATION	4.556821213773475E-5	IMPLEMENTATION	2.7927924221316073E-6	DESIGN	2.259004165517876E-7	DEFECT	2.1640268631927566E-7	TEST	1.1211708920247502E-7	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999119211989023	WITHOUT_CLASSIFICATION	4.608948359110432E-5	IMPLEMENTATION	4.0483196289860016E-5	DESIGN	7.906779797229285E-7	DEFECT	3.724690654536234E-7	DOCUMENTATION	3.429741716337452E-7	TEST
// GUID support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999319436696313	WITHOUT_CLASSIFICATION	4.830256231851289E-5	IMPLEMENTATION	1.8748345484825434E-5	DESIGN	5.614465005127158E-7	DEFECT	2.6790645635612603E-7	DOCUMENTATION	1.7606960844624983E-7	TEST
// limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999983890219734	WITHOUT_CLASSIFICATION	8.657933113428577E-7	IMPLEMENTATION	5.317646385945107E-7	DESIGN	1.8929743446623104E-7	DEFECT	1.6147296863908978E-8	TEST	7.975345386694449E-9	DOCUMENTATION
// by default we report no support	WITHOUT_CLASSIFICATION	0.9999614068373313	WITHOUT_CLASSIFICATION	3.487302855298583E-5	DESIGN	2.937179099812476E-6	IMPLEMENTATION	6.862121813333565E-7	DEFECT	8.776190839282484E-8	DOCUMENTATION	8.980926086568915E-9	TEST
// by default we report no support for NOWAIT lock semantics	WITHOUT_CLASSIFICATION	0.9958797580096761	WITHOUT_CLASSIFICATION	0.004048332345656401	DESIGN	3.6770340443068E-5	IMPLEMENTATION	3.154192112935993E-5	DEFECT	3.3710642309583588E-6	DOCUMENTATION	2.26318864111572E-7	TEST
// table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999920866300777	WITHOUT_CLASSIFICATION	7.004641828040955E-6	IMPLEMENTATION	7.806189534789714E-7	DESIGN	8.124705084304093E-8	DEFECT	3.8742201253923773E-8	TEST	8.119888878837759E-9	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999823358165093	WITHOUT_CLASSIFICATION	1.670744222174668E-5	DESIGN	8.736293790906705E-7	IMPLEMENTATION	6.906102618893496E-8	TEST	1.0279964326802828E-8	DEFECT	3.7708993287456575E-9	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999360513247936	WITHOUT_CLASSIFICATION	4.2113022708935475E-5	IMPLEMENTATION	2.1382780120647653E-5	DESIGN	3.488115960892791E-7	DEFECT	6.439673515577969E-8	DOCUMENTATION	3.966404549784154E-8	TEST
// current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999987338219745	WITHOUT_CLASSIFICATION	1.1807213413621545E-5	IMPLEMENTATION	3.710209887300061E-7	DEFECT	1.9772250754605966E-7	TEST	1.5095023563931468E-7	DOCUMENTATION	1.3487310940567808E-7	DESIGN
// SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998975222359705	WITHOUT_CLASSIFICATION	8.8405434598245E-5	DESIGN	9.398298938979562E-6	IMPLEMENTATION	4.097876200963538E-6	DEFECT	4.486007465649649E-7	DOCUMENTATION	1.2755354478395215E-7	TEST
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999948064440104	WITHOUT_CLASSIFICATION	4.306855285362013E-6	IMPLEMENTATION	8.335310679663778E-7	DESIGN	2.371793569719106E-8	DEFECT	1.5954625998865243E-8	TEST	1.3497074615311675E-8	DOCUMENTATION
// identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999507408786855	WITHOUT_CLASSIFICATION	4.6212069373210895E-5	IMPLEMENTATION	2.7240920581533766E-6	DESIGN	1.4673138187930837E-7	DEFECT	1.1016009522242534E-7	TEST	6.606840607135626E-8	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999931216704263	WITHOUT_CLASSIFICATION	5.829661271227865E-5	IMPLEMENTATION	8.97299720951721E-6	DESIGN	8.737582058107249E-7	DEFECT	3.5715203710816714E-7	DOCUMENTATION	2.827755721967971E-7	TEST
// grrr... for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.9999991132026079	WITHOUT_CLASSIFICATION	3.423093393915592E-7	DESIGN	2.683845098353945E-7	IMPLEMENTATION	2.424090744834093E-7	DEFECT	1.853050358292712E-8	DOCUMENTATION	1.5163964793797603E-8	TEST
// Informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999930388098203	WITHOUT_CLASSIFICATION	6.03193745304561E-6	IMPLEMENTATION	5.966256429336229E-7	DEFECT	2.306556484501026E-7	DESIGN	9.633291764305788E-8	DOCUMENTATION	5.638517633034366E-9	TEST
// return false here, as most databases do not properly support this construct...	WITHOUT_CLASSIFICATION	0.5824870010951504	WITHOUT_CLASSIFICATION	0.3600561015362262	DESIGN	0.04233716910172387	IMPLEMENTATION	0.015092672811439422	DEFECT	2.3976182540763326E-5	TEST	3.0792729194510933E-6	DOCUMENTATION
// Mckoi has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999828772737647	WITHOUT_CLASSIFICATION	1.4279837384067262E-5	DESIGN	2.2051768949372906E-6	DEFECT	5.151847944292915E-7	IMPLEMENTATION	1.1836574976454063E-7	DOCUMENTATION	4.161412024555869E-9	TEST
// Oracle8 and previous define only a "DATE" type which //      is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.9999999988547007	WITHOUT_CLASSIFICATION	1.0487493853940583E-9	DESIGN	6.210178397300895E-11	DOCUMENTATION	3.076629847522769E-11	IMPLEMENTATION	2.964691624879716E-12	TEST	7.172462557684878E-13	DEFECT
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9990972045819891	WITHOUT_CLASSIFICATION	8.990880472136753E-4	DESIGN	3.475495841668784E-6	TEST	1.4571510231885028E-7	DEFECT	6.127365074950979E-8	DOCUMENTATION	2.4886202385736644E-8	IMPLEMENTATION
//" cascade";	WITHOUT_CLASSIFICATION	0.9999803742014676	WITHOUT_CLASSIFICATION	1.1448755099826715E-5	DESIGN	7.060004619038006E-6	IMPLEMENTATION	6.065841477285289E-7	DOCUMENTATION	3.8444664996590105E-7	DEFECT	1.2600801573389619E-7	TEST
//trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.9999993403413953	WITHOUT_CLASSIFICATION	4.548613206635685E-7	IMPLEMENTATION	1.264764147558583E-7	DESIGN	6.026462939191806E-8	DEFECT	1.2281071264906157E-8	DOCUMENTATION	5.775168794383346E-9	TEST
/*public boolean dropTemporaryTableAfterUse() {	WITHOUT_CLASSIFICATION	0.5769508053843563	WITHOUT_CLASSIFICATION	0.42304320022967296	DESIGN	3.812934533244248E-6	DEFECT	9.26259986121388E-7	TEST	9.008023263776884E-7	DOCUMENTATION	3.543891249840295E-7	IMPLEMENTATION
// CHECK VIOLATION	WITHOUT_CLASSIFICATION	0.9999992347094123	WITHOUT_CLASSIFICATION	4.967630520934042E-7	DESIGN	1.2546584846711627E-7	IMPLEMENTATION	8.800332737171423E-8	DEFECT	3.1317962889366454E-8	DOCUMENTATION	2.3740396774938654E-8	TEST
// UNIQUE VIOLATION	WITHOUT_CLASSIFICATION	0.9999962376385134	WITHOUT_CLASSIFICATION	2.7310762185609047E-6	IMPLEMENTATION	5.321526448585602E-7	DEFECT	3.52998743080302E-7	DESIGN	8.940924502331641E-8	DOCUMENTATION	5.672463508926542E-8	TEST
// FOREIGN KEY VIOLATION	WITHOUT_CLASSIFICATION	0.9999965943274545	WITHOUT_CLASSIFICATION	1.4703492177029406E-6	IMPLEMENTATION	1.4270712058245947E-6	DESIGN	2.2280619758116407E-7	DEFECT	1.6201600526346325E-7	TEST	1.234299192218381E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999928951389117	WITHOUT_CLASSIFICATION	5.467302910336035E-6	IMPLEMENTATION	1.2339920523202466E-6	DESIGN	2.3458748414237456E-7	DOCUMENTATION	1.6340284502967354E-7	DEFECT	5.575796560876287E-9	TEST
// NOT NULL VIOLATION	WITHOUT_CLASSIFICATION	0.9998724665440645	WITHOUT_CLASSIFICATION	1.0929985405227523E-4	DESIGN	1.1503839265741383E-5	IMPLEMENTATION	2.824755041015762E-6	DEFECT	2.5397656106257835E-6	TEST	1.3652419658041724E-6	DOCUMENTATION
// ALL OTHER	WITHOUT_CLASSIFICATION	0.9999956726845037	WITHOUT_CLASSIFICATION	2.1950106039740097E-6	DESIGN	9.981532188260203E-7	IMPLEMENTATION	8.961533265257478E-7	DEFECT	1.4615545758785176E-7	DOCUMENTATION	9.184288923308611E-8	TEST
// Register the type of the out param - PostgreSQL uses Types.OTHER	WITHOUT_CLASSIFICATION	0.9999135775437044	WITHOUT_CLASSIFICATION	8.637080014246707E-5	DESIGN	2.7360451029804482E-8	TEST	2.0748817724198883E-8	DEFECT	2.630653762641183E-9	IMPLEMENTATION	9.16230795146963E-10	DOCUMENTATION
// seems to not really... //	WITHOUT_CLASSIFICATION	0.9909955293508743	WITHOUT_CLASSIFICATION	0.008171238913216793	DEFECT	8.322586963516002E-4	DESIGN	5.907940036730643E-7	IMPLEMENTATION	2.305234414045565E-7	DOCUMENTATION	1.5172211230161556E-7	TEST
// seems to have spotty LOB suppport	WITHOUT_CLASSIFICATION	0.9995215068578023	WITHOUT_CLASSIFICATION	4.734436987297452E-4	DESIGN	3.5662499488628748E-6	DEFECT	1.1914353608177996E-6	IMPLEMENTATION	2.3184534701416325E-7	DOCUMENTATION	5.991281120998727E-8	TEST
// HHH-2300	WITHOUT_CLASSIFICATION	0.9999780117855656	WITHOUT_CLASSIFICATION	1.7968037376352106E-5	DESIGN	3.001346217349845E-6	DEFECT	5.964726985108748E-7	IMPLEMENTATION	2.4776438954693894E-7	DOCUMENTATION	1.7459375262212967E-7	TEST
// ignore (probably H2 not in the classpath)	WITHOUT_CLASSIFICATION	0.9972054148673966	WITHOUT_CLASSIFICATION	0.002739322526562366	DESIGN	5.474069142430184E-5	DEFECT	3.150494839453942E-7	DOCUMENTATION	1.934164634000572E-7	IMPLEMENTATION	1.3448669462321171E-8	TEST
// Numeric Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999731138936694	WITHOUT_CLASSIFICATION	2.4045152109764953E-5	IMPLEMENTATION	2.0442335886039422E-6	DESIGN	4.96302957685152E-7	DEFECT	2.0848662917906974E-7	DOCUMENTATION	9.193104531908647E-8	TEST
// String Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999920012667024	WITHOUT_CLASSIFICATION	3.3325389322731364E-6	IMPLEMENTATION	3.2389677264565095E-6	DESIGN	1.237981278923054E-6	DEFECT	1.5388468822497712E-7	DOCUMENTATION	3.536067180428759E-8	TEST
// Time and Date Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999952845162989	WITHOUT_CLASSIFICATION	2.115044326960899E-6	DESIGN	1.9889370984567695E-6	IMPLEMENTATION	3.268347756981398E-7	DOCUMENTATION	2.506063655705884E-7	DEFECT	3.406113440654586E-8	TEST
// System Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999653956844076	WITHOUT_CLASSIFICATION	1.581911519223679E-5	IMPLEMENTATION	1.4694289875222784E-5	DESIGN	3.3669326238623293E-6	DEFECT	4.7587385439336416E-7	DOCUMENTATION	2.481040466713088E-7	TEST
// not null is implicit	WITHOUT_CLASSIFICATION	0.9937095422276847	WITHOUT_CLASSIFICATION	0.0060652612178909585	DESIGN	1.3124235677969726E-4	DEFECT	8.649053029452796E-5	IMPLEMENTATION	6.604067554104489E-6	TEST	8.595997958801664E-7	DOCUMENTATION
// 23000: Check constraint violation: {0} // 23001: Unique index or primary key violation: {0}	WITHOUT_CLASSIFICATION	0.9999999865984825	WITHOUT_CLASSIFICATION	1.1822180719515357E-8	DEFECT	1.2996386137944126E-9	IMPLEMENTATION	1.3516169610240566E-10	DOCUMENTATION	9.086207413073183E-11	DESIGN	5.367428767211176E-11	TEST
// Display the dialect version.	WITHOUT_CLASSIFICATION	0.9988042071330482	WITHOUT_CLASSIFICATION	0.0011620478598985326	IMPLEMENTATION	3.162722372916569E-5	DESIGN	1.9135201146882E-6	DEFECT	1.61571592323341E-7	DOCUMENTATION	4.269161721232123E-8	TEST
// The RDMS concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9999555238689557	WITHOUT_CLASSIFICATION	4.389553557688511E-5	IMPLEMENTATION	5.089587330097897E-7	DEFECT	5.90232775994215E-8	DESIGN	9.573921618061285E-9	DOCUMENTATION	3.039535325896466E-9	TEST
// Dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999881661741539	WITHOUT_CLASSIFICATION	1.0257647029837183E-5	IMPLEMENTATION	1.3940767310641654E-6	DESIGN	1.5005888512310143E-7	TEST	2.3581663654317474E-8	DEFECT	8.461536487965256E-9	DOCUMENTATION
// Original Dialect.java returns " for update";	WITHOUT_CLASSIFICATION	0.9999968524814747	WITHOUT_CLASSIFICATION	3.0861913286949762E-6	DESIGN	5.3983319422898914E-8	DEFECT	5.147680667285335E-9	IMPLEMENTATION	1.8020314171464469E-9	DOCUMENTATION	3.941651211522722E-10	TEST
// Verify the state of this new method in Hibernate 3.0 Dialect.java	WITHOUT_CLASSIFICATION	0.9614559803375675	WITHOUT_CLASSIFICATION	0.03852534470267638	DESIGN	1.6818611118452386E-5	DEFECT	9.489949329539628E-7	TEST	8.904352542452478E-7	DOCUMENTATION	1.6918450453796946E-8	IMPLEMENTATION
// Origial Dialect.java returns true;	WITHOUT_CLASSIFICATION	0.999991708745859	WITHOUT_CLASSIFICATION	7.901028983553995E-6	DESIGN	3.628318744252796E-7	DEFECT	2.011852224362965E-8	IMPLEMENTATION	5.782509875780196E-9	DOCUMENTATION	1.4922508245101754E-9	TEST
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999999726912813	WITHOUT_CLASSIFICATION	2.0820082529197836E-8	DESIGN	4.621386287526564E-9	IMPLEMENTATION	9.605256308146815E-10	DOCUMENTATION	8.837909605295493E-10	DEFECT	2.293326999581163E-11	TEST
// *** Sequence methods - start. The RDMS dialect needs these	WITHOUT_CLASSIFICATION	0.9999888327664751	WITHOUT_CLASSIFICATION	6.932464077710698E-6	DESIGN	2.7488968581446744E-6	IMPLEMENTATION	9.216533148241333E-7	DEFECT	3.701712896066808E-7	TEST	1.9404798461981918E-7	DOCUMENTATION
// methods to make it possible to use the Native Id generator	WITHOUT_CLASSIFICATION	0.9991264146711969	WITHOUT_CLASSIFICATION	8.418568206450279E-4	DESIGN	3.1306824957463576E-5	IMPLEMENTATION	2.794794917667252E-7	TEST	1.324302258057045E-7	DEFECT	9.773483049171367E-9	DOCUMENTATION
// The where clause was added to eliminate this statement from Brute Force Searches.	WITHOUT_CLASSIFICATION	0.999910951138381	WITHOUT_CLASSIFICATION	8.892183144053418E-5	DESIGN	7.163334538825249E-8	DEFECT	4.906960971397288E-8	DOCUMENTATION	5.8760082451898175E-9	TEST	4.5121492004027985E-10	IMPLEMENTATION
// *** Sequence methods - end	WITHOUT_CLASSIFICATION	0.993904419207486	WITHOUT_CLASSIFICATION	0.006074265567213346	DESIGN	9.433922602444648E-6	DOCUMENTATION	6.823613563447234E-6	DEFECT	3.879000096834364E-6	IMPLEMENTATION	1.1786890381330016E-6	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999928951389117	WITHOUT_CLASSIFICATION	5.467302910336035E-6	IMPLEMENTATION	1.2339920523202466E-6	DESIGN	2.3458748414237456E-7	DOCUMENTATION	1.6340284502967354E-7	DEFECT	5.575796560876287E-9	TEST
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9990972045819891	WITHOUT_CLASSIFICATION	8.990880472136753E-4	DESIGN	3.475495841668784E-6	TEST	1.4571510231885028E-7	DEFECT	6.127365074950979E-8	DOCUMENTATION	2.4886202385736644E-8	IMPLEMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999040913818544	WITHOUT_CLASSIFICATION	9.221861919902725E-5	DESIGN	3.6704133718757054E-6	DEFECT	1.0160302158996798E-8	TEST	6.333861820077936E-9	IMPLEMENTATION	3.09141078726207E-9	DOCUMENTATION
// Used with DROP TABLE to delete all records in the table.	WITHOUT_CLASSIFICATION	0.9999998599953581	WITHOUT_CLASSIFICATION	1.2464983239599777E-7	IMPLEMENTATION	1.4530919654822606E-8	DESIGN	6.153464492779016E-10	DEFECT	1.5680805523275843E-10	DOCUMENTATION	5.1735344210233996E-11	TEST
// RDMS supports the UNION ALL clause.	WITHOUT_CLASSIFICATION	0.9999991080565193	WITHOUT_CLASSIFICATION	7.447023679863572E-7	IMPLEMENTATION	7.278811891172547E-8	DEFECT	7.129875439292044E-8	DESIGN	2.426303087819022E-9	DOCUMENTATION	7.279363797023831E-10	TEST
// RDMS has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999874568084475	WITHOUT_CLASSIFICATION	7.846076857549868E-6	DEFECT	3.7163758222041975E-6	DESIGN	8.753757685625976E-7	IMPLEMENTATION	1.005487440039469E-7	DOCUMENTATION	4.814360071232622E-9	TEST
// Multi-param dialect functions...	WITHOUT_CLASSIFICATION	0.9999955770169471	WITHOUT_CLASSIFICATION	2.1267965902364143E-6	DEFECT	1.6582579518179955E-6	IMPLEMENTATION	6.263002077587523E-7	DESIGN	6.109911793671833E-9	TEST	5.5183911846860074E-9	DOCUMENTATION
// function templates	WITHOUT_CLASSIFICATION	0.9999958732849531	WITHOUT_CLASSIFICATION	1.8329859489966627E-6	IMPLEMENTATION	1.5474335610888685E-6	DESIGN	4.402994643635586E-7	DEFECT	2.37948170894216E-7	TEST	6.804790162912311E-8	DOCUMENTATION
//not null is implicit	WITHOUT_CLASSIFICATION	0.9917846649425748	WITHOUT_CLASSIFICATION	0.007979233017084406	DESIGN	2.2183452375094072E-4	DEFECT	9.256428750633891E-6	TEST	3.4934735774969177E-6	IMPLEMENTATION	1.51761426152825E-6	DOCUMENTATION
// this assumes schema support, which is present in 1.8.0 and later...	WITHOUT_CLASSIFICATION	0.9970993957922306	WITHOUT_CLASSIFICATION	0.002421221020101255	DESIGN	4.7059547533877613E-4	DEFECT	5.361697314738969E-6	DOCUMENTATION	2.1594547059347336E-6	TEST	1.266560308656432E-6	IMPLEMENTATION
// HSQLDB only supports READ_UNCOMMITTED transaction isolation	WITHOUT_CLASSIFICATION	0.9999997204161934	WITHOUT_CLASSIFICATION	1.77815582029344E-7	DESIGN	9.074594400628377E-8	DEFECT	8.155149218892485E-9	IMPLEMENTATION	2.495798076085822E-9	DOCUMENTATION	3.7133315604031553E-10	TEST
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999929976316166	WITHOUT_CLASSIFICATION	4.648577759174117E-6	DEFECT	1.1917554394359204E-6	IMPLEMENTATION	1.139555247428529E-6	DESIGN	1.470654563838411E-8	TEST	7.77339177165824E-9	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999847081798455	WITHOUT_CLASSIFICATION	6.371499740473202E-6	DEFECT	4.56977152517394E-6	DESIGN	4.307523711630848E-6	IMPLEMENTATION	3.0833050029599174E-8	DOCUMENTATION	1.2192127142902614E-8	TEST
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999969452059492	WITHOUT_CLASSIFICATION	1.6149885260535688E-6	DEFECT	8.595437208499395E-7	DESIGN	5.716824405065345E-7	IMPLEMENTATION	4.7945921208963805E-9	TEST	3.78477133404418E-9	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999987935579663	WITHOUT_CLASSIFICATION	1.1708595372751124E-6	DESIGN	2.754872009881927E-8	IMPLEMENTATION	5.036467258084251E-9	DEFECT	1.8912720884604935E-9	TEST	1.1060369410957143E-9	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999928951389117	WITHOUT_CLASSIFICATION	5.467302910336035E-6	IMPLEMENTATION	1.2339920523202466E-6	DESIGN	2.3458748414237456E-7	DOCUMENTATION	1.6340284502967354E-7	DEFECT	5.575796560876287E-9	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999928951389117	WITHOUT_CLASSIFICATION	5.467302910336035E-6	IMPLEMENTATION	1.2339920523202466E-6	DESIGN	2.3458748414237456E-7	DOCUMENTATION	1.6340284502967354E-7	DEFECT	5.575796560876287E-9	TEST
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9875066706014739	WITHOUT_CLASSIFICATION	0.012488681096120932	DESIGN	4.5871758925838786E-6	DEFECT	3.663538978355128E-8	IMPLEMENTATION	1.7062706985241256E-8	DOCUMENTATION	7.428415937783429E-9	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// TimesTen has no BLOB/CLOB support, but these types may be suitable  // for some applications. The length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.9990152653944174	WITHOUT_CLASSIFICATION	9.721980762759857E-4	IMPLEMENTATION	4.766901889745364E-6	DEFECT	4.1793045691934495E-6	DESIGN	2.4201013252906864E-6	TEST	1.1702215224421984E-6	DOCUMENTATION
// new methods in dialect3	WITHOUT_CLASSIFICATION	0.9994996883317266	WITHOUT_CLASSIFICATION	4.911343857318868E-4	DESIGN	4.7720357422308695E-6	DEFECT	3.894403520169948E-6	IMPLEMENTATION	2.913459622944284E-7	DOCUMENTATION	2.1949731680378612E-7	TEST
/*public boolean supportsForUpdateNowait() {	WITHOUT_CLASSIFICATION	0.9997194713884547	WITHOUT_CLASSIFICATION	2.7301680164401306E-4	DESIGN	5.994424485107172E-6	IMPLEMENTATION	1.0344843188142929E-6	DEFECT	2.934551440028193E-7	DOCUMENTATION	1.894459534754868E-7	TEST
// TimesTen has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999890086805806	WITHOUT_CLASSIFICATION	5.512157921346967E-6	DEFECT	3.829013739480581E-6	IMPLEMENTATION	1.4381031893219702E-6	DESIGN	1.875624503183459E-7	DOCUMENTATION	2.4482118818318337E-8	TEST
// iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.9999999684494771	WITHOUT_CLASSIFICATION	3.0539880808461015E-8	DESIGN	8.270940112623522E-10	TEST	1.0045131198915124E-10	IMPLEMENTATION	7.239590916510141E-11	DEFECT	1.0700837462371332E-11	DOCUMENTATION
// add new ordered map	WITHOUT_CLASSIFICATION	0.9999996814464192	WITHOUT_CLASSIFICATION	2.758020756678916E-7	IMPLEMENTATION	2.2723818921801502E-8	DESIGN	1.0116715719556451E-8	DEFECT	5.819896030678178E-9	DOCUMENTATION	4.0910746308528896E-9	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999928951389117	WITHOUT_CLASSIFICATION	5.467302910336035E-6	IMPLEMENTATION	1.2339920523202466E-6	DESIGN	2.3458748414237456E-7	DOCUMENTATION	1.6340284502967354E-7	DEFECT	5.575796560876287E-9	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999952784077513	WITHOUT_CLASSIFICATION	4.376881420972869E-6	DESIGN	3.415015118013738E-7	IMPLEMENTATION	2.6708812815261773E-9	DEFECT	3.675018703889977E-10	DOCUMENTATION	1.7093282833908905E-10	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
//registerColumnType data types	WITHOUT_CLASSIFICATION	0.99993759609094	WITHOUT_CLASSIFICATION	6.192783147542006E-5	DESIGN	3.1046323035317696E-7	DEFECT	7.659900297258728E-8	TEST	7.321787040187168E-8	IMPLEMENTATION	1.5797480797200057E-8	DOCUMENTATION
// hibernate seems to ignore this type...	WITHOUT_CLASSIFICATION	0.9995148502835002	WITHOUT_CLASSIFICATION	4.8124906522952084E-4	DESIGN	2.107851734689074E-6	DEFECT	1.5359454898958736E-6	IMPLEMENTATION	1.824623261340585E-7	DOCUMENTATION	7.43917196273918E-8	TEST
// IBID for current_time and current_date	WITHOUT_CLASSIFICATION	0.9999965163886713	WITHOUT_CLASSIFICATION	2.092910110286886E-6	IMPLEMENTATION	5.769534307316398E-7	DESIGN	5.456232223276369E-7	DEFECT	2.5402511082418487E-7	DOCUMENTATION	1.4099454520341505E-8	TEST
// Tell hibernate to use getBytes instead of getBinaryStream	WITHOUT_CLASSIFICATION	0.9989303706383297	WITHOUT_CLASSIFICATION	0.0010680171725335232	DESIGN	1.1971887498284549E-6	DEFECT	2.508498561827721E-7	TEST	1.2064903344074028E-7	IMPLEMENTATION	4.3501497408007224E-8	DOCUMENTATION
// No batch statements	WITHOUT_CLASSIFICATION	0.999999007956835	WITHOUT_CLASSIFICATION	8.03510380339906E-7	DESIGN	6.625588434444654E-8	DOCUMENTATION	4.9089661431735485E-8	IMPLEMENTATION	4.068168872553722E-8	DEFECT	3.250555005689313E-8	TEST
/*	WITHOUT_CLASSIFICATION	0.933244904112182	WITHOUT_CLASSIFICATION	0.05759605816623468	DESIGN	0.005922678791583738	DEFECT	0.0029694107811799168	IMPLEMENTATION	1.595747323387444E-4	DOCUMENTATION	1.0737341648099305E-4	TEST
//no pointbase BIT	WITHOUT_CLASSIFICATION	0.9999938786675558	WITHOUT_CLASSIFICATION	2.684370700030283E-6	IMPLEMENTATION	1.8071586522971728E-6	DEFECT	9.74441453054805E-7	DESIGN	6.330122653040019E-7	DOCUMENTATION	2.2349373503967762E-8	TEST
//no pointbase TINYINT	WITHOUT_CLASSIFICATION	0.9999985244410903	WITHOUT_CLASSIFICATION	6.202044691978864E-7	DESIGN	4.50388350154529E-7	IMPLEMENTATION	2.68352008499335E-7	DOCUMENTATION	1.2108977247214832E-7	DEFECT	1.5524309570192858E-8	TEST
// Pointbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999949835261127	WITHOUT_CLASSIFICATION	2.782051500174509E-6	DESIGN	1.6483994840344107E-6	DEFECT	4.982387878238636E-7	IMPLEMENTATION	8.551910702215693E-8	DOCUMENTATION	2.2650082194722337E-9	TEST
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9990972045819891	WITHOUT_CLASSIFICATION	8.990880472136753E-4	DESIGN	3.475495841668784E-6	TEST	1.4571510231885028E-7	DEFECT	6.127365074950979E-8	DOCUMENTATION	2.4886202385736644E-8	IMPLEMENTATION
// The current_timestamp is more accurate, but only known to be supported // in SQL Server 7.0 and later (i.e., Sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.7800552047393837	WITHOUT_CLASSIFICATION	0.20152541720457068	DESIGN	0.01836430094117929	DEFECT	3.900262219615844E-5	IMPLEMENTATION	8.405792041758712E-6	TEST	7.668700628480402E-6	DOCUMENTATION
// SQL Server (at least up through 2005) does not support defining // cascade delete constraints which can circel back to the mutating // table	WITHOUT_CLASSIFICATION	0.9999743473130348	WITHOUT_CLASSIFICATION	2.556383287299963E-5	DESIGN	6.037059574424274E-8	IMPLEMENTATION	1.545582356821276E-8	TEST	9.952841816263468E-9	DEFECT	3.0748310285590572E-9	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9945674518979358	WITHOUT_CLASSIFICATION	0.0034018063663947785	DEFECT	0.001988172992349965	DESIGN	4.029933306625266E-5	TEST	2.2489171362824555E-6	DOCUMENTATION	2.0493116899283406E-8	IMPLEMENTATION
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9990972045819891	WITHOUT_CLASSIFICATION	8.990880472136753E-4	DESIGN	3.475495841668784E-6	TEST	1.4571510231885028E-7	DEFECT	6.127365074950979E-8	DOCUMENTATION	2.4886202385736644E-8	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999848820230087	WITHOUT_CLASSIFICATION	1.5002433324088215E-5	DESIGN	6.054434707891368E-8	DEFECT	4.136523634323496E-8	DOCUMENTATION	7.073777482263627E-9	IMPLEMENTATION	6.560306389340205E-9	TEST
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999952784077513	WITHOUT_CLASSIFICATION	4.376881420972869E-6	DESIGN	3.415015118013738E-7	IMPLEMENTATION	2.6708812815261773E-9	DEFECT	3.675018703889977E-10	DOCUMENTATION	1.7093282833908905E-10	TEST
//Sybase BIT type does not support null values	WITHOUT_CLASSIFICATION	0.9297785460641551	WITHOUT_CLASSIFICATION	0.06845726132843345	DESIGN	0.001747540651162711	DEFECT	8.955229670400316E-6	IMPLEMENTATION	3.928239022212026E-6	DOCUMENTATION	3.7684875560242795E-6	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999928951389117	WITHOUT_CLASSIFICATION	5.467302910336035E-6	IMPLEMENTATION	1.2339920523202466E-6	DESIGN	2.3458748414237456E-7	DOCUMENTATION	1.6340284502967354E-7	DEFECT	5.575796560876287E-9	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
//not null ... (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.9248711852912114	WITHOUT_CLASSIFICATION	0.07281276228764913	DESIGN	0.001897802595203624	DEFECT	3.4955176368117166E-4	TEST	6.662066551472641E-5	IMPLEMENTATION	2.077396740003848E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999928951389117	WITHOUT_CLASSIFICATION	5.467302910336035E-6	IMPLEMENTATION	1.2339920523202466E-6	DESIGN	2.3458748414237456E-7	DOCUMENTATION	1.6340284502967354E-7	DEFECT	5.575796560876287E-9	TEST
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.7500934450819811	DESIGN	0.24988769757856016	WITHOUT_CLASSIFICATION	1.8156736938036504E-5	DEFECT	3.7422738760022484E-7	IMPLEMENTATION	3.18073049736433E-7	TEST	8.302083585184667E-9	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999929976316166	WITHOUT_CLASSIFICATION	4.648577759174117E-6	DEFECT	1.1917554394359204E-6	IMPLEMENTATION	1.139555247428529E-6	DESIGN	1.470654563838411E-8	TEST	7.77339177165824E-9	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999847081798455	WITHOUT_CLASSIFICATION	6.371499740473202E-6	DEFECT	4.56977152517394E-6	DESIGN	4.307523711630848E-6	IMPLEMENTATION	3.0833050029599174E-8	DOCUMENTATION	1.2192127142902614E-8	TEST
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999969452059492	WITHOUT_CLASSIFICATION	1.6149885260535688E-6	DEFECT	8.595437208499395E-7	DESIGN	5.716824405065345E-7	IMPLEMENTATION	4.7945921208963805E-9	TEST	3.78477133404418E-9	DOCUMENTATION
// add another (inner) nested select // add the main query // close off the inner nested select	WITHOUT_CLASSIFICATION	0.9999999940449362	WITHOUT_CLASSIFICATION	4.5324045643407215E-9	TEST	7.898881094844855E-10	DEFECT	3.689907709757195E-10	DOCUMENTATION	2.1831667760698078E-10	DESIGN	4.5463703717099115E-11	IMPLEMENTATION
// add the main query	WITHOUT_CLASSIFICATION	0.9999695480739282	WITHOUT_CLASSIFICATION	2.930353753887301E-5	DESIGN	4.869515833015016E-7	DOCUMENTATION	4.2896310274819127E-7	IMPLEMENTATION	1.2738550227052207E-7	DEFECT	1.0508834454341545E-7	TEST
//add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.9999969121651808	WITHOUT_CLASSIFICATION	2.7249254551003955E-6	DESIGN	1.5234003349258792E-7	IMPLEMENTATION	9.611210984310516E-8	DOCUMENTATION	6.247161222716881E-8	DEFECT	5.198560843944929E-8	TEST
// This assumes you will want to ignore any update counts 	WITHOUT_CLASSIFICATION	0.9999993413240921	WITHOUT_CLASSIFICATION	6.098827010124427E-7	DEFECT	4.144665517505527E-8	DESIGN	4.382335245764061E-9	IMPLEMENTATION	1.687505337789955E-9	TEST	1.2767113039687415E-9	DOCUMENTATION
// You may still have other ResultSets or update counts left to process here  // but you can't do it now or the ResultSet you just got will be closed 	WITHOUT_CLASSIFICATION	0.9999996644481095	WITHOUT_CLASSIFICATION	3.331385801445407E-7	DEFECT	2.3751735155619503E-9	DESIGN	2.3524382605663557E-11	IMPLEMENTATION	1.1190655398837749E-11	TEST	3.4219320359962245E-12	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999928951389117	WITHOUT_CLASSIFICATION	5.467302910336035E-6	IMPLEMENTATION	1.2339920523202466E-6	DESIGN	2.3458748414237456E-7	DOCUMENTATION	1.6340284502967354E-7	DEFECT	5.575796560876287E-9	TEST
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9990972045819891	WITHOUT_CLASSIFICATION	8.990880472136753E-4	DESIGN	3.475495841668784E-6	TEST	1.4571510231885028E-7	DEFECT	6.127365074950979E-8	DOCUMENTATION	2.4886202385736644E-8	IMPLEMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999987935579663	WITHOUT_CLASSIFICATION	1.1708595372751124E-6	DESIGN	2.754872009881927E-8	IMPLEMENTATION	5.036467258084251E-9	DEFECT	1.8912720884604935E-9	TEST	1.1060369410957143E-9	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9875066706014739	WITHOUT_CLASSIFICATION	0.012488681096120932	DESIGN	4.5871758925838786E-6	DEFECT	3.663538978355128E-8	IMPLEMENTATION	1.7062706985241256E-8	DOCUMENTATION	7.428415937783429E-9	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// features which change between 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999809703004352	WITHOUT_CLASSIFICATION	1.8930533174405398E-4	DESIGN	5.929030597350233E-7	DEFECT	2.758160012889789E-7	IMPLEMENTATION	9.242661274543332E-8	DOCUMENTATION	3.0518230028478786E-8	TEST
// features which remain constant across 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999966048634343	WITHOUT_CLASSIFICATION	2.336167097645694E-6	DESIGN	1.0360752327510098E-6	DEFECT	1.691417890264799E-8	DOCUMENTATION	3.753264572684321E-9	IMPLEMENTATION	2.226791915420983E-9	TEST
// binary %Stream // character %Stream	WITHOUT_CLASSIFICATION	0.9999999787912496	WITHOUT_CLASSIFICATION	1.6560442114996948E-8	DESIGN	3.622975336708079E-9	DEFECT	4.543966620667135E-10	TEST	3.688133820333699E-10	IMPLEMENTATION	2.0212293495450787E-10	DOCUMENTATION
//getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE, NO_BATCH);	WITHOUT_CLASSIFICATION	0.9999999889385648	WITHOUT_CLASSIFICATION	3.982041153408596E-9	DESIGN	2.2279591201412775E-9	DOCUMENTATION	2.1589378596239066E-9	DEFECT	1.853552527943641E-9	TEST	8.38944507640466E-10	IMPLEMENTATION
// hibernate impelemnts cast in Dialect.java	WITHOUT_CLASSIFICATION	0.9992811215501671	WITHOUT_CLASSIFICATION	7.179213622829E-4	DESIGN	5.487334338667479E-7	DEFECT	3.6298878702665776E-7	TEST	3.3575596157867757E-8	DOCUMENTATION	1.1789732783168667E-8	IMPLEMENTATION
// aggregate functions shouldn't be registered, right? //registerFunction( "list", new StandardSQLFunction("list",Hibernate.STRING) ); // stopped on $list	WITHOUT_CLASSIFICATION	0.998557902849907	WITHOUT_CLASSIFICATION	0.0014419645278283568	DESIGN	1.1088617059933511E-7	DEFECT	1.979130895280446E-8	IMPLEMENTATION	1.6859946845574952E-9	TEST	2.5879026026359404E-10	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999931216704263	WITHOUT_CLASSIFICATION	5.829661271227865E-5	IMPLEMENTATION	8.97299720951721E-6	DESIGN	8.737582058107249E-7	DEFECT	3.5715203710816714E-7	DOCUMENTATION	2.827755721967971E-7	TEST
// below is for Cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.9914323635655031	WITHOUT_CLASSIFICATION	0.008563284686018299	DESIGN	4.151146539189094E-6	DEFECT	1.5539161827308124E-7	TEST	3.0105958573282624E-8	DOCUMENTATION	1.5104362618807E-8	IMPLEMENTATION
// note that %string is deprecated	WITHOUT_CLASSIFICATION	0.9959682224216284	WITHOUT_CLASSIFICATION	0.0033481853233800476	DESIGN	6.72009159465167E-4	IMPLEMENTATION	1.0346530531255904E-5	TEST	6.490529994150505E-7	DEFECT	5.875119957481622E-7	DOCUMENTATION
// %upper is deprecated	WITHOUT_CLASSIFICATION	0.9998518764005304	WITHOUT_CLASSIFICATION	1.4711018288169727E-4	DESIGN	6.324168714750212E-7	DEFECT	1.8463374254872827E-7	IMPLEMENTATION	1.5230036052641E-7	TEST	4.406561329842211E-8	DOCUMENTATION
// The syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.9999998467888269	WITHOUT_CLASSIFICATION	1.4934889969010188E-7	DESIGN	1.4892808201160272E-9	IMPLEMENTATION	1.0915118462085143E-9	DEFECT	1.0492107906635417E-9	DOCUMENTATION	2.3227002741512668E-10	TEST
// identifier-commalist	WITHOUT_CLASSIFICATION	0.999999972831712	WITHOUT_CLASSIFICATION	2.1200535674511784E-8	DESIGN	4.335264355817049E-9	IMPLEMENTATION	7.134664326796936E-10	DEFECT	5.231961420044955E-10	DOCUMENTATION	3.9582531887908476E-10	TEST
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999510845752481	WITHOUT_CLASSIFICATION	4.556821213773475E-5	IMPLEMENTATION	2.7927924221316073E-6	DESIGN	2.259004165517876E-7	DEFECT	2.1640268631927566E-7	TEST	1.1211708920247502E-7	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999119211989023	WITHOUT_CLASSIFICATION	4.608948359110432E-5	IMPLEMENTATION	4.0483196289860016E-5	DESIGN	7.906779797229285E-7	DEFECT	3.724690654536234E-7	DOCUMENTATION	3.429741716337452E-7	TEST
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999823358165093	WITHOUT_CLASSIFICATION	1.670744222174668E-5	DESIGN	8.736293790906705E-7	IMPLEMENTATION	6.906102618893496E-8	TEST	1.0279964326802828E-8	DEFECT	3.7708993287456575E-9	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.999999972831712	WITHOUT_CLASSIFICATION	2.1200535674511784E-8	DESIGN	4.335264355817049E-9	IMPLEMENTATION	7.134664326796936E-10	DEFECT	5.231961420044955E-10	DOCUMENTATION	3.9582531887908476E-10	TEST
// The syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.9999624332104698	WITHOUT_CLASSIFICATION	3.7311874089660016E-5	DESIGN	1.4743663789882068E-7	IMPLEMENTATION	5.1693057269104465E-8	DEFECT	5.1692598157215505E-8	DOCUMENTATION	4.093147025355374E-9	TEST
// Completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.9999993029925677	WITHOUT_CLASSIFICATION	3.264438319143855E-7	IMPLEMENTATION	2.5818752079795556E-7	DEFECT	1.066229671903493E-7	DESIGN	4.594038522709957E-9	DOCUMENTATION	1.1590736076355952E-9	TEST
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999078648744806	WITHOUT_CLASSIFICATION	7.041537278027974E-5	IMPLEMENTATION	1.4203775233627355E-5	DEFECT	6.827294381119651E-6	DESIGN	5.856796662478305E-7	DOCUMENTATION	1.0300345809230712E-7	TEST
// LIMIT support (ala TOP) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999886343127876	WITHOUT_CLASSIFICATION	9.023244309762504E-6	IMPLEMENTATION	1.650194241423037E-6	DESIGN	5.685948153954537E-7	DEFECT	7.593531929931087E-8	DOCUMENTATION	4.771852640225688E-8	TEST
// InterSystems Cache' does not current support "SELECT ... FOR UPDATE" syntax... // Set your transaction mode to READ_COMMITTED before using	WITHOUT_CLASSIFICATION	0.9999808580675739	WITHOUT_CLASSIFICATION	1.1977982730803063E-5	DEFECT	6.780348736214012E-6	DESIGN	3.455352723744011E-7	IMPLEMENTATION	2.3573808731545635E-8	DOCUMENTATION	1.449187812158056E-8	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999928951389117	WITHOUT_CLASSIFICATION	5.467302910336035E-6	IMPLEMENTATION	1.2339920523202466E-6	DESIGN	2.3458748414237456E-7	DOCUMENTATION	1.6340284502967354E-7	DEFECT	5.575796560876287E-9	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999928951389117	WITHOUT_CLASSIFICATION	5.467302910336035E-6	IMPLEMENTATION	1.2339920523202466E-6	DESIGN	2.3458748414237456E-7	DOCUMENTATION	1.6340284502967354E-7	DEFECT	5.575796560876287E-9	TEST
/*<String>*/	WITHOUT_CLASSIFICATION	0.9993585562714534	WITHOUT_CLASSIFICATION	4.8525671217922227E-4	DESIGN	1.0587777221319293E-4	DEFECT	3.581615922646006E-5	IMPLEMENTATION	1.0941953476444821E-5	DOCUMENTATION	3.551131451217491E-6	TEST
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999360513247936	WITHOUT_CLASSIFICATION	4.2113022708935475E-5	IMPLEMENTATION	2.1382780120647653E-5	DESIGN	3.488115960892791E-7	DEFECT	6.439673515577969E-8	DOCUMENTATION	3.966404549784154E-8	TEST
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999948064440104	WITHOUT_CLASSIFICATION	4.306855285362013E-6	IMPLEMENTATION	8.335310679663778E-7	DESIGN	2.371793569719106E-8	DEFECT	1.5954625998865243E-8	TEST	1.3497074615311675E-8	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999999726912813	WITHOUT_CLASSIFICATION	2.0820082529197836E-8	DESIGN	4.621386287526564E-9	IMPLEMENTATION	9.605256308146815E-10	DOCUMENTATION	8.837909605295493E-10	DEFECT	2.293326999581163E-11	TEST
// Does the LIMIT clause come at the start of the SELECT statement, rather than at the end?	WITHOUT_CLASSIFICATION	0.9972495362694321	WITHOUT_CLASSIFICATION	0.0027452309028417415	DESIGN	2.970208199947848E-6	DEFECT	1.6016680265520257E-6	DOCUMENTATION	6.364760312354154E-7	TEST	2.4475468340804533E-8	IMPLEMENTATION
// Does the LIMIT clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.9996438177793414	WITHOUT_CLASSIFICATION	3.4971133790803977E-4	DESIGN	6.335976711230115E-6	DEFECT	9.357219655939682E-8	DOCUMENTATION	2.3320721600868534E-8	IMPLEMENTATION	1.8013121239727916E-8	TEST
// The name of the SQL function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.999999800501478	WITHOUT_CLASSIFICATION	1.930186554247744E-7	DESIGN	4.780882090398614E-9	DEFECT	1.3104318540900075E-9	IMPLEMENTATION	3.40061450250357E-10	DOCUMENTATION	4.849130011232609E-11	TEST
// Create an OuterJoinGenerator for this dialect.	WITHOUT_CLASSIFICATION	0.9999631458184048	WITHOUT_CLASSIFICATION	3.677426135269393E-5	DESIGN	7.339490744468957E-8	TEST	3.6376672146468683E-9	DEFECT	2.5754737593854294E-9	DOCUMENTATION	3.1219406567462297E-10	IMPLEMENTATION
// The keyword used to insert a row without specifying // any column values	WITHOUT_CLASSIFICATION	0.999999425069259	WITHOUT_CLASSIFICATION	2.9992508607674164E-7	DEFECT	2.0418859109927854E-7	DESIGN	4.4017710743002066E-8	IMPLEMENTATION	1.787804513064884E-8	TEST	8.921308123973075E-9	DOCUMENTATION
//registerFunction( "trim", new StandardSQLFunction( "trim", Hibernate.STRING ) );	WITHOUT_CLASSIFICATION	0.9999999402025037	WITHOUT_CLASSIFICATION	5.011622652407591E-8	IMPLEMENTATION	8.379113622051674E-9	DESIGN	8.195991036289291E-10	DEFECT	3.168292816324219E-10	DOCUMENTATION	1.6572770396644304E-10	TEST
//skip the FROM keyword in params	WITHOUT_CLASSIFICATION	0.9999690153037237	WITHOUT_CLASSIFICATION	1.7587404547065514E-5	IMPLEMENTATION	8.934812818976532E-6	DESIGN	2.9779815440305797E-6	DEFECT	8.596588393401267E-7	DOCUMENTATION	6.248385268808756E-7	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9990042718110085	WITHOUT_CLASSIFICATION	9.126514084333693E-4	DESIGN	6.918329762260797E-5	IMPLEMENTATION	7.305212416715822E-6	DEFECT	5.059125330650915E-6	DOCUMENTATION	1.5291451883866793E-6	TEST
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999999999900643	WITHOUT_CLASSIFICATION	8.0025118770911E-12	DESIGN	1.4389838382051755E-12	DOCUMENTATION	3.7980594413721757E-13	IMPLEMENTATION	8.386002165689944E-14	DEFECT	3.057477925680493E-14	TEST
// SQLFunction implementation	WITHOUT_CLASSIFICATION	0.999933692689595	WITHOUT_CLASSIFICATION	5.908418113184025E-5	IMPLEMENTATION	4.075479865549715E-6	DESIGN	2.7753420393999974E-6	DEFECT	3.5217639218731886E-7	DOCUMENTATION	2.0130976050125632E-8	TEST
// conceivable that the dialect ctor could throw HibernateExceptions, so don't re-wrap	WITHOUT_CLASSIFICATION	0.9999969610546787	WITHOUT_CLASSIFICATION	2.993467275879488E-6	DESIGN	4.21349042093417E-8	IMPLEMENTATION	1.5896404352111075E-9	DEFECT	1.4883344679897133E-9	TEST	2.6516621527584873E-10	DOCUMENTATION
// register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.9999927521851211	WITHOUT_CLASSIFICATION	4.311362690494142E-6	IMPLEMENTATION	2.540383699648233E-6	DESIGN	3.6712255390433093E-7	DEFECT	2.4203124825457594E-8	TEST	4.742810106709876E-9	DOCUMENTATION
// register resolvers set via Environment property	WITHOUT_CLASSIFICATION	0.9999990532318124	WITHOUT_CLASSIFICATION	9.342463784060371E-7	DESIGN	7.643203375087771E-9	DEFECT	4.109702651640279E-9	TEST	6.90269181157844E-10	DOCUMENTATION	7.863402840715137E-11	IMPLEMENTATION
// kept for backward compatibility until after the 3.1beta5 release of HA	WITHOUT_CLASSIFICATION	0.9999994342412316	WITHOUT_CLASSIFICATION	4.3410273313322517E-7	IMPLEMENTATION	1.2566708086423326E-7	DESIGN	4.228561196486941E-9	DEFECT	1.2808245861599382E-9	TEST	4.79568650517366E-10	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9993655860480841	WITHOUT_CLASSIFICATION	6.075511974404882E-4	DESIGN	2.3072066863773014E-5	IMPLEMENTATION	1.8329820958673707E-6	DOCUMENTATION	1.2194331297221307E-6	DEFECT	7.382723861375584E-7	TEST
// the CascadingAction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999008781961407	WITHOUT_CLASSIFICATION	8.73829732900637E-5	IMPLEMENTATION	7.90033167960785E-6	DESIGN	2.8741107369163593E-6	DOCUMENTATION	6.779249541457575E-7	DEFECT	2.864631985700363E-7	TEST
// the CascadingAction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.992478757307141	WITHOUT_CLASSIFICATION	0.0074720541507947	IMPLEMENTATION	2.9246942131274248E-5	DEFECT	1.7020202133309785E-5	DESIGN	1.8077940303884629E-6	DOCUMENTATION	1.1136037694058802E-6	TEST
// delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999997144767616	WITHOUT_CLASSIFICATION	1.9249016782059305E-7	IMPLEMENTATION	4.624778392477716E-8	DESIGN	2.1129812493014423E-8	TEST	2.073898616625676E-8	DEFECT	4.916488070893967E-9	DOCUMENTATION
// orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.9999847216539864	WITHOUT_CLASSIFICATION	1.0325508472630381E-5	DESIGN	3.203147484612746E-6	DEFECT	1.649258744851497E-6	IMPLEMENTATION	9.221501961629659E-8	TEST	8.216291801155653E-9	DOCUMENTATION
/*(LockMode) anything*/	WITHOUT_CLASSIFICATION	0.9997022872957142	WITHOUT_CLASSIFICATION	1.297421470345608E-4	DESIGN	1.0691256053870806E-4	DEFECT	5.712879235278963E-5	DOCUMENTATION	2.2955239769654393E-6	IMPLEMENTATION	1.6336803826492324E-6	TEST
// lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999866711668441	WITHOUT_CLASSIFICATION	1.2052772960718356E-5	IMPLEMENTATION	6.377281312658344E-7	DEFECT	2.3362893647746648E-7	DESIGN	2.1056055013388042E-7	TEST	1.9414257721222706E-7	DOCUMENTATION
// refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999997542148184	WITHOUT_CLASSIFICATION	2.213866794341344E-6	IMPLEMENTATION	1.649494938220091E-7	DESIGN	3.5756499892015674E-8	DEFECT	3.208460017457274E-8	TEST	1.1194427689935594E-8	DOCUMENTATION
// evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999996452492764	WITHOUT_CLASSIFICATION	1.3732663893214576E-7	IMPLEMENTATION	1.2641668787880197E-7	DESIGN	7.42770477794936E-8	DEFECT	8.604327188974115E-9	DOCUMENTATION	8.12602176328289E-9	TEST
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999999596323142	WITHOUT_CLASSIFICATION	2.6709800166587283E-7	IMPLEMENTATION	9.579102868199436E-8	DEFECT	2.3794631198997805E-8	DESIGN	1.2742964144745022E-8	TEST	4.2502325470950936E-9	DOCUMENTATION
// orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.9999982921395274	WITHOUT_CLASSIFICATION	9.77414010268954E-7	DESIGN	4.7286539670611303E-7	DEFECT	2.46019061808108E-7	IMPLEMENTATION	9.923080944143253E-9	TEST	1.638922811361228E-9	DOCUMENTATION
// for deprecated saveOrUpdateCopy()	WITHOUT_CLASSIFICATION	0.9999977497593118	WITHOUT_CLASSIFICATION	1.1209778066911875E-6	DESIGN	9.270039916731097E-7	IMPLEMENTATION	9.294213160318181E-8	DEFECT	9.062653307338824E-8	DOCUMENTATION	1.8690225129084873E-8	TEST
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999996631612262	WITHOUT_CLASSIFICATION	1.5804088075834184E-7	IMPLEMENTATION	9.229090654450119E-8	DEFECT	7.812729435269495E-8	DESIGN	6.4944747946916976E-9	TEST	1.885217312618986E-9	DOCUMENTATION
//a proxy cannot be transient and it breaks ForeignKeys.isTransient	WITHOUT_CLASSIFICATION	0.9999229351169908	WITHOUT_CLASSIFICATION	5.51907041149763E-5	DESIGN	2.1738539925164207E-5	DEFECT	7.107688759318008E-8	IMPLEMENTATION	4.8962712014766405E-8	DOCUMENTATION	1.5599369402448357E-8	TEST
// replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999992835679891	WITHOUT_CLASSIFICATION	6.034350123542117E-7	DESIGN	8.319795824379753E-8	IMPLEMENTATION	2.0122097782012032E-8	TEST	5.506325913142153E-9	DEFECT	4.170616531442729E-9	DOCUMENTATION
// static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999987579721229	WITHOUT_CLASSIFICATION	1.158735480683143E-5	DESIGN	6.822918474986034E-7	IMPLEMENTATION	1.2348151872687758E-7	DEFECT	1.970894895479295E-8	TEST	7.441648997697618E-9	DOCUMENTATION
// handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.9994444338987366	WITHOUT_CLASSIFICATION	5.538047266712546E-4	DESIGN	1.510620876607757E-6	DEFECT	1.6679392611528441E-7	IMPLEMENTATION	5.35434683412671E-8	TEST	3.041632087094288E-8	DOCUMENTATION
// Actually the semantics of the next three are really "Bag" // Note that, unlike objects, collection insertions, updates, // deletions are not really remembered between flushes. We // just re-use the same Lists for convenience.	WITHOUT_CLASSIFICATION	0.9999977985388929	WITHOUT_CLASSIFICATION	1.4183228443853486E-6	IMPLEMENTATION	4.2931419727525373E-7	DESIGN	2.422848620021481E-7	DEFECT	9.902995141216999E-8	TEST	1.2509251950029831E-8	DOCUMENTATION
// Add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.9999972505409994	WITHOUT_CLASSIFICATION	2.3575992801339604E-6	DESIGN	2.0784336438161475E-7	DEFECT	1.4462384559200033E-7	DOCUMENTATION	3.267169766171112E-8	IMPLEMENTATION	6.7208128326103335E-9	TEST
// continue loop	WITHOUT_CLASSIFICATION	0.9999878339491948	WITHOUT_CLASSIFICATION	9.55827934685358E-6	DEFECT	2.1835883106323604E-6	DESIGN	3.5286945271850923E-7	IMPLEMENTATION	6.412291332559479E-8	DOCUMENTATION	7.190781779180727E-9	TEST
//sort the updates by fk	WITHOUT_CLASSIFICATION	0.9983274736747112	WITHOUT_CLASSIFICATION	0.0012603196810668368	DESIGN	2.7951787731334785E-4	IMPLEMENTATION	7.390629226211854E-5	TEST	5.439520594722455E-5	DEFECT	4.387268699350726E-6	DOCUMENTATION
//sort the updates by pk	WITHOUT_CLASSIFICATION	0.9964890416529316	WITHOUT_CLASSIFICATION	0.0029752718382787327	DESIGN	4.3628441514446297E-4	IMPLEMENTATION	6.672458822013342E-5	TEST	2.6466698588108345E-5	DEFECT	6.210806836857073E-6	DOCUMENTATION
// the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.9999990062872933	WITHOUT_CLASSIFICATION	4.793477746622895E-7	TEST	4.698428822889757E-7	DESIGN	3.9114692870294045E-8	DEFECT	3.13053845324866E-9	DOCUMENTATION	2.2768183406457924E-9	IMPLEMENTATION
// the map of batch numbers to EntityInsertAction lists	WITHOUT_CLASSIFICATION	0.9999981592463362	WITHOUT_CLASSIFICATION	1.5722734359543379E-6	DESIGN	2.532687846644582E-7	DEFECT	7.212579842509027E-9	IMPLEMENTATION	4.149401529346787E-9	TEST	3.8494619215488675E-9	DOCUMENTATION
//optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.9997349068506615	WITHOUT_CLASSIFICATION	2.640738711053028E-4	DESIGN	8.498962768088419E-7	IMPLEMENTATION	8.411322421754101E-8	DEFECT	4.895844064378537E-8	DOCUMENTATION	3.631029163181332E-8	TEST
// the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.9999847935879861	WITHOUT_CLASSIFICATION	1.5186367288284913E-5	DESIGN	8.575613879916756E-9	TEST	6.839104200044406E-9	IMPLEMENTATION	2.3219934744636404E-9	DOCUMENTATION	2.308014031978417E-9	DEFECT
// remove the current element from insertions. It will be added back later.	WITHOUT_CLASSIFICATION	0.9996571173137863	WITHOUT_CLASSIFICATION	3.181497179122259E-4	DESIGN	2.472370257458353E-5	DEFECT	6.264751584161431E-9	DOCUMENTATION	2.422274089284255E-9	TEST	5.787013546623313E-10	IMPLEMENTATION
// the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.9919000719424578	WITHOUT_CLASSIFICATION	0.0064385875898857895	DESIGN	0.0015925206617252326	IMPLEMENTATION	3.352170286209737E-5	TEST	3.336907763172124E-5	DOCUMENTATION	1.9290254374225173E-6	DEFECT
// There is already an existing batch for this type of entity. // Check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.9999995752189564	WITHOUT_CLASSIFICATION	4.0366152130010437E-7	DESIGN	2.0818662482747837E-8	TEST	1.8636352856293878E-10	DEFECT	1.1406769784666481E-10	DOCUMENTATION	4.285840368736817E-13	IMPLEMENTATION
// now rebuild the insertions list. There is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.9999913511194103	WITHOUT_CLASSIFICATION	8.620891570247311E-6	DESIGN	1.578879684566662E-8	DEFECT	1.0613747341381709E-8	IMPLEMENTATION	9.575421591545677E-10	TEST	6.289330351084081E-10	DOCUMENTATION
// the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.9999932906072446	WITHOUT_CLASSIFICATION	5.7541120319324425E-6	DESIGN	9.068048333954866E-7	TEST	3.919460930145039E-8	DEFECT	8.883872716417872E-9	DOCUMENTATION	3.9740816540479393E-10	IMPLEMENTATION
// loop through all the associations of the current entity and make sure that they are processed // before the current batch number	WITHOUT_CLASSIFICATION	0.9999997522375778	WITHOUT_CLASSIFICATION	2.451881373935975E-7	DESIGN	1.4746920728848345E-9	DEFECT	7.487375536786874E-10	DOCUMENTATION	2.578775546434114E-10	TEST	9.29777108644795E-11	IMPLEMENTATION
// find the batch number associated with the current association, if any.	WITHOUT_CLASSIFICATION	0.999914745364803	WITHOUT_CLASSIFICATION	7.898069565878571E-5	DESIGN	3.947106280302548E-6	TEST	1.7104585644271263E-6	DOCUMENTATION	4.1046072493571387E-7	IMPLEMENTATION	2.0591396843137222E-7	DEFECT
// create a new batch for this type. The batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.9999996238337888	WITHOUT_CLASSIFICATION	3.7398929709507433E-7	DESIGN	1.5122206923521358E-9	DEFECT	3.9968525270873917E-10	DOCUMENTATION	2.6447177918981923E-10	TEST	5.364073580691665E-13	IMPLEMENTATION
// loop through all the associated entities and make sure they have been // processed before the latest // batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.9999997500881642	WITHOUT_CLASSIFICATION	1.517627512439439E-7	TEST	9.017891441854173E-8	DESIGN	7.047037371347889E-9	IMPLEMENTATION	5.157278696505724E-10	DEFECT	4.074048192619828E-10	DOCUMENTATION
// since this entity will now be processed in the latest possible batch, // we can be assured that it will come after all other associations, // there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.8093995352154011	WITHOUT_CLASSIFICATION	0.19034681618938312	DESIGN	1.8555983396508527E-4	IMPLEMENTATION	6.2457866085874E-5	TEST	4.337947258142916E-6	DEFECT	1.292947906543072E-6	DOCUMENTATION
//cascade to current collection elements	WITHOUT_CLASSIFICATION	0.9999752257059557	WITHOUT_CLASSIFICATION	1.736752166856351E-5	IMPLEMENTATION	6.739993602230848E-6	DESIGN	3.6674321779879695E-7	DOCUMENTATION	2.8579463414000395E-7	DEFECT	1.4240921583559137E-8	TEST
//not really necessary, but good for consistency...	WITHOUT_CLASSIFICATION	0.9836744160115225	WITHOUT_CLASSIFICATION	0.013899306179331524	DESIGN	0.002346765879265658	DEFECT	6.759185768940288E-5	IMPLEMENTATION	8.488069964770352E-6	DOCUMENTATION	3.432002226163327E-6	TEST
// we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.999999933176265	WITHOUT_CLASSIFICATION	5.0159833277189563E-8	DESIGN	1.4812643144914903E-8	DEFECT	1.1776672320665174E-9	DOCUMENTATION	5.79598554669827E-10	IMPLEMENTATION	9.3992709463258E-11	TEST
//a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.9985439750731482	WITHOUT_CLASSIFICATION	0.0013484628101871812	DESIGN	1.0489578918738449E-4	DEFECT	1.8927615208718987E-6	IMPLEMENTATION	6.569016992344851E-7	DOCUMENTATION	1.1666425692242957E-7	TEST
// handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.9983398389271629	WITHOUT_CLASSIFICATION	0.001651435941095522	DESIGN	7.614808766559838E-6	IMPLEMENTATION	4.641831333772021E-7	TEST	4.423480829294382E-7	DOCUMENTATION	2.0379175862793369E-7	DEFECT
// Loaded entity instances, by EntityUniqueKey	WITHOUT_CLASSIFICATION	0.9999974072933889	WITHOUT_CLASSIFICATION	2.268942735050952E-6	DESIGN	2.9601866710083976E-7	DEFECT	2.3135300360937343E-8	DOCUMENTATION	3.962296109374786E-9	TEST	6.476125545106856E-10	IMPLEMENTATION
// Identity map of EntityEntry instances, by the entity instance	WITHOUT_CLASSIFICATION	0.9999995234771911	WITHOUT_CLASSIFICATION	2.728806397725982E-7	DESIGN	1.3595791268989352E-7	DEFECT	5.548402180373694E-8	IMPLEMENTATION	9.358742590382949E-9	DOCUMENTATION	2.8414919658168275E-9	TEST
// Entity proxies, by EntityKey	WITHOUT_CLASSIFICATION	0.9999994532040967	WITHOUT_CLASSIFICATION	2.775264454434839E-7	DESIGN	2.0851286403623874E-7	DEFECT	3.2110144505566716E-8	TEST	1.4692718844692685E-8	DOCUMENTATION	1.3953730455764798E-8	IMPLEMENTATION
// Snapshots of current database state for entities // that have *not* been loaded	WITHOUT_CLASSIFICATION	0.9991636709070131	WITHOUT_CLASSIFICATION	8.102615592641011E-4	DESIGN	2.3699172603724524E-5	IMPLEMENTATION	1.9340656208941577E-6	DEFECT	3.713570673946015E-7	TEST	6.293843079100431E-8	DOCUMENTATION
// Identity map of array holder ArrayHolder instances, by the array instance	WITHOUT_CLASSIFICATION	0.999997908694181	WITHOUT_CLASSIFICATION	1.4612803597352639E-6	DEFECT	3.7370120241303977E-7	DESIGN	2.4064826426950606E-7	IMPLEMENTATION	1.0982304080030718E-8	DOCUMENTATION	4.693688447117748E-9	TEST
// Collection wrappers, by the CollectionKey //key=CollectionKey, value=PersistentCollection	WITHOUT_CLASSIFICATION	0.999999421383821	WITHOUT_CLASSIFICATION	3.0074096906470474E-7	DESIGN	2.659981247623867E-7	DEFECT	9.123648606162168E-9	TEST	2.161774237858051E-9	DOCUMENTATION	5.916622599810516E-10	IMPLEMENTATION
// Set of EntityKeys of deleted objects	WITHOUT_CLASSIFICATION	0.9999972222167867	WITHOUT_CLASSIFICATION	2.6521501175022024E-6	DESIGN	7.793917841222002E-8	DEFECT	2.189475024854955E-8	TEST	1.3813477239749757E-8	DOCUMENTATION	1.1985690130678482E-8	IMPLEMENTATION
// properties that we have tried to load, and not found in the database	WITHOUT_CLASSIFICATION	0.9999998772022474	WITHOUT_CLASSIFICATION	1.14051542875048E-7	DEFECT	8.44001844505773E-9	DESIGN	1.5059659833850928E-10	IMPLEMENTATION	9.080705688369478E-11	DOCUMENTATION	6.478767584991276E-11	TEST
// A list of collection wrappers that were instantiating during result set // processing, that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9999754502840765	WITHOUT_CLASSIFICATION	2.4430228219505548E-5	DEFECT	8.904796243114936E-8	IMPLEMENTATION	2.554703389887082E-8	DESIGN	2.6395805576300627E-9	TEST	2.2531269544311717E-9	DOCUMENTATION
// A container for collections we load up when the owning entity is not // yet loaded ... for now, this is purely transient!	WITHOUT_CLASSIFICATION	0.9961238411017836	WITHOUT_CLASSIFICATION	0.002927300209468982	DESIGN	6.173774751079981E-4	DEFECT	3.264995818464705E-4	IMPLEMENTATION	4.14987621356277E-6	TEST	8.317555793115073E-7	DOCUMENTATION
// Downgrade locks	WITHOUT_CLASSIFICATION	0.9995956225445105	WITHOUT_CLASSIFICATION	3.34076045282363E-4	IMPLEMENTATION	3.9708392796013516E-5	DESIGN	2.4367192898579812E-5	DEFECT	5.268214342543088E-6	DOCUMENTATION	9.576101698749699E-7	TEST
// any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.9999375132393029	WITHOUT_CLASSIFICATION	3.997349773331011E-5	DESIGN	2.227002345713159E-5	DEFECT	1.2328910627655282E-7	DOCUMENTATION	8.037541564484461E-8	IMPLEMENTATION	3.9574984599895094E-8	TEST
//unwrap the object	WITHOUT_CLASSIFICATION	0.9999560545196742	WITHOUT_CLASSIFICATION	3.9467517817400964E-5	DESIGN	2.324663512938014E-6	IMPLEMENTATION	1.5541282640027066E-6	DEFECT	5.216987295140709E-7	DOCUMENTATION	7.747200202324305E-8	TEST
//initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.9999985792549497	WITHOUT_CLASSIFICATION	6.278518392630462E-7	DESIGN	6.171511901901786E-7	IMPLEMENTATION	7.563012484955694E-8	DOCUMENTATION	7.341912188494575E-8	DEFECT	2.6692773983075124E-8	TEST
//return the proxied object	WITHOUT_CLASSIFICATION	0.9970106630878403	WITHOUT_CLASSIFICATION	0.002948144381194906	DESIGN	3.873883630180828E-5	DEFECT	1.196961041655059E-6	IMPLEMENTATION	1.184011974387919E-6	DOCUMENTATION	7.272164701059733E-8	TEST
//overwrite old proxy	WITHOUT_CLASSIFICATION	0.9999871687359732	WITHOUT_CLASSIFICATION	1.2508409991319714E-5	DESIGN	2.307738816018141E-7	DEFECT	4.2298073568989194E-8	DOCUMENTATION	2.7745441660317388E-8	TEST	2.2036638671387134E-8	IMPLEMENTATION
// early exit...	WITHOUT_CLASSIFICATION	0.9995202227755579	WITHOUT_CLASSIFICATION	4.058944838354882E-4	DEFECT	6.395289878829055E-5	DESIGN	8.847887278282248E-6	IMPLEMENTATION	7.729259459756699E-7	DOCUMENTATION	3.0902859414248396E-7	TEST
// or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.9888199727216738	WITHOUT_CLASSIFICATION	0.010665040158528436	DESIGN	4.577301384297578E-4	DEFECT	5.1825256085316865E-5	IMPLEMENTATION	4.577942296154022E-6	TEST	8.537829864101696E-7	DOCUMENTATION
//treat it just like a new collection	WITHOUT_CLASSIFICATION	0.9998123400941373	WITHOUT_CLASSIFICATION	1.5279516484156802E-4	DESIGN	2.768946004265456E-5	IMPLEMENTATION	5.816627566298045E-6	DEFECT	9.664362474440935E-7	TEST	3.922171647444886E-7	DOCUMENTATION
//do this work only at the very highest level of the load //don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.5168929244242598	WITHOUT_CLASSIFICATION	0.4687600067737896	DESIGN	0.014225752100068415	DEFECT	6.35669360698215E-5	IMPLEMENTATION	5.28552067463617E-5	TEST	4.894559065941751E-6	DOCUMENTATION
//note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.9999998925764513	WITHOUT_CLASSIFICATION	7.761412040900687E-8	IMPLEMENTATION	2.7763208452625378E-8	DESIGN	9.54767342598835E-10	TEST	6.015154799452922E-10	DOCUMENTATION	4.899369901696486E-10	DEFECT
//it might be an unwrapped collection reference! //try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.7834576916082923	WITHOUT_CLASSIFICATION	0.21581757985644387	DESIGN	7.045592829847611E-4	DEFECT	1.7318969853610595E-5	IMPLEMENTATION	2.094915611545977E-6	DOCUMENTATION	7.55366814013574E-7	TEST
/*public boolean isNonExistant(EntityKey key) {	WITHOUT_CLASSIFICATION	0.999857585264861	WITHOUT_CLASSIFICATION	1.4029793707160234E-4	DESIGN	1.615297696605841E-6	DEFECT	2.3275316916736124E-7	DOCUMENTATION	2.2240967633883156E-7	TEST	4.633752535188125E-8	IMPLEMENTATION
/*public boolean isNonExistant(EntityUniqueKey key) {	WITHOUT_CLASSIFICATION	0.9997792043854116	WITHOUT_CLASSIFICATION	2.1844490707475421E-4	DESIGN	1.7214472531577456E-6	DEFECT	3.0929485686106646E-7	TEST	2.469879100659059E-7	DOCUMENTATION	7.297749362198776E-8	IMPLEMENTATION
// iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.9939142487145671	WITHOUT_CLASSIFICATION	0.006065477197759172	DESIGN	1.5832189513865426E-5	IMPLEMENTATION	2.8178191395005863E-6	TEST	1.4452026080575678E-6	DOCUMENTATION	1.78876412256514E-7	DEFECT
// does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.9999196533092324	WITHOUT_CLASSIFICATION	8.008510584342059E-5	DESIGN	2.1334795545923753E-7	DOCUMENTATION	3.774692677833239E-8	TEST	1.0381611413686643E-8	DEFECT	1.0843060326021758E-10	IMPLEMENTATION
//check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.9988761837609916	WITHOUT_CLASSIFICATION	0.0010585729310741408	DESIGN	5.901893926430784E-5	IMPLEMENTATION	2.7434688608868983E-6	DEFECT	1.8178887692352863E-6	DOCUMENTATION	1.6630110396534162E-6	TEST
// otherwise, the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.9999855819993798	WITHOUT_CLASSIFICATION	1.4144759621063217E-5	DEFECT	2.3426860285935109E-7	DESIGN	2.178744365944723E-8	IMPLEMENTATION	1.3248216317711318E-8	DOCUMENTATION	3.93673626573352E-9	TEST
// adds remove as a sort-of alias for delete...	WITHOUT_CLASSIFICATION	0.9999993887436963	WITHOUT_CLASSIFICATION	4.865634003982847E-7	IMPLEMENTATION	1.0641112682997065E-7	DEFECT	1.432268942583532E-8	DESIGN	2.7162670461676582E-9	TEST	1.242820153114715E-9	DOCUMENTATION
//bad cast	WITHOUT_CLASSIFICATION	0.9994481196738589	WITHOUT_CLASSIFICATION	5.405226847488219E-4	DESIGN	6.387146234821122E-6	DEFECT	1.7923796115108846E-6	IMPLEMENTATION	1.623078182705339E-6	DOCUMENTATION	1.5550373631347547E-6	TEST
//return lhsPersister.getSubclassPropertyColumnNames(property);	WITHOUT_CLASSIFICATION	0.9999905005877676	WITHOUT_CLASSIFICATION	8.978007832235695E-6	DESIGN	4.916060391736219E-7	DEFECT	2.2667118450919265E-8	TEST	6.4224533486343895E-9	DOCUMENTATION	7.087891871430662E-10	IMPLEMENTATION
//property-refs for associations defined on a //component are not supported, so no need to slice	WITHOUT_CLASSIFICATION	0.9999999896729357	WITHOUT_CLASSIFICATION	8.593244588916966E-9	DESIGN	8.746626061001806E-10	TEST	8.374696652454144E-10	DOCUMENTATION	1.5131686176369076E-11	DEFECT	6.555704862845518E-12	IMPLEMENTATION
//if there is no property-ref, assume the join //is to the subclass table (ie. the table of the //subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.999999982087702	WITHOUT_CLASSIFICATION	1.7826613626960037E-8	DESIGN	5.053157474749467E-11	DOCUMENTATION	2.3460439670189148E-11	TEST	1.1543466814633377E-11	DEFECT	1.488658234788772E-13	IMPLEMENTATION
//handle a property-ref	WITHOUT_CLASSIFICATION	0.9999833760194339	WITHOUT_CLASSIFICATION	1.6091437163946443E-5	DESIGN	4.678737140492896E-7	DEFECT	3.779743876976304E-8	DOCUMENTATION	1.4954147394335547E-8	IMPLEMENTATION	1.191810204978247E-8	TEST
/*NativeSQLQueryReturn*/	WITHOUT_CLASSIFICATION	0.9961599494647979	WITHOUT_CLASSIFICATION	0.003812817602466898	DESIGN	1.8044425136665837E-5	DEFECT	6.327447939031814E-6	IMPLEMENTATION	2.3648116424424022E-6	DOCUMENTATION	4.962480171720227E-7	TEST
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999971176460758	WITHOUT_CLASSIFICATION	2.7462367455706294E-6	DESIGN	5.5759731063805306E-8	DEFECT	3.7761971970012845E-8	IMPLEMENTATION	2.408190182728416E-8	TEST	1.85135738716974E-8	DOCUMENTATION
// why is all others non final ?	WITHOUT_CLASSIFICATION	0.9983296043098859	WITHOUT_CLASSIFICATION	0.0016650361846834306	DESIGN	4.990249974485622E-6	IMPLEMENTATION	2.307056906433416E-7	DEFECT	8.563743763115695E-8	DOCUMENTATION	5.291232792810619E-8	TEST
//this.forceCacheRefresh = forceCacheRefresh;	WITHOUT_CLASSIFICATION	0.9999938172903632	WITHOUT_CLASSIFICATION	5.503510984109365E-6	IMPLEMENTATION	1.9822071687502555E-7	TEST	1.9345474895713497E-7	DESIGN	1.5280362961121612E-7	DOCUMENTATION	1.3471955720097978E-7	DEFECT
// HELLA IMPORTANT OPTIMIZATION!!!	WITHOUT_CLASSIFICATION	0.9999596054459379	WITHOUT_CLASSIFICATION	3.238673680391831E-5	DESIGN	5.979766169719634E-6	DEFECT	9.532026274761647E-7	IMPLEMENTATION	6.285061458060453E-7	DOCUMENTATION	4.4634231511631546E-7	TEST
/*return that.type.equals(type) && 	WITHOUT_CLASSIFICATION	0.9996577136535146	WITHOUT_CLASSIFICATION	3.1398308903166425E-4	DESIGN	2.3229002984917205E-5	DEFECT	4.6443297726649155E-6	IMPLEMENTATION	2.3742498883758237E-7	TEST	1.9249970733149072E-7	DOCUMENTATION
//Must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.9998111138644201	WITHOUT_CLASSIFICATION	1.8724432203283517E-4	DESIGN	4.567512619674466E-7	TEST	4.3878048530099244E-7	DEFECT	3.811708157325663E-7	DOCUMENTATION	3.6511098410244576E-7	IMPLEMENTATION
//take a snapshot	WITHOUT_CLASSIFICATION	0.999745450599209	WITHOUT_CLASSIFICATION	1.358468534422046E-4	DESIGN	9.144380923352212E-5	DEFECT	2.060750516815991E-5	IMPLEMENTATION	3.750628199618676E-6	DOCUMENTATION	2.9006047474483673E-6	TEST
// do a check	WITHOUT_CLASSIFICATION	0.9998400754275002	WITHOUT_CLASSIFICATION	1.492539589942309E-4	DESIGN	8.814818378290095E-6	IMPLEMENTATION	1.4369046060250183E-6	DEFECT	3.6633132330385937E-7	DOCUMENTATION	5.255919784144779E-8	TEST
// the owning entity may have been deleted and its identifier unset due to // identifier-rollback; in which case, try to look up its identifier from // the persistence context	WITHOUT_CLASSIFICATION	0.9999995126403589	WITHOUT_CLASSIFICATION	4.792292935132432E-7	DESIGN	4.011075625924396E-9	IMPLEMENTATION	3.897150677550083E-9	DEFECT	1.5115099057381745E-10	DOCUMENTATION	7.097023848590166E-11	TEST
// do the work	WITHOUT_CLASSIFICATION	0.9994838136453165	WITHOUT_CLASSIFICATION	3.136355627407087E-4	DESIGN	1.8561484171857178E-4	DEFECT	1.270644788419154E-5	IMPLEMENTATION	3.5294980787200727E-6	DOCUMENTATION	7.000042612535662E-7	TEST
// We've been here before	WITHOUT_CLASSIFICATION	0.9998966680332542	WITHOUT_CLASSIFICATION	4.220263305199516E-5	DEFECT	2.9022346979686012E-5	DESIGN	2.6814809301314472E-5	IMPLEMENTATION	3.332062471499291E-6	DOCUMENTATION	1.960114941439746E-6	TEST
// it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.9999852221950932	WITHOUT_CLASSIFICATION	1.4274012145631171E-5	DESIGN	2.505493456645447E-7	DEFECT	1.575571720293056E-7	TEST	5.636085307208479E-8	IMPLEMENTATION	3.932539036268913E-8	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9994838136453165	WITHOUT_CLASSIFICATION	3.136355627407087E-4	DESIGN	1.8561484171857178E-4	DEFECT	1.270644788419154E-5	IMPLEMENTATION	3.5294980787200727E-6	DOCUMENTATION	7.000042612535662E-7	TEST
// if either its role changed,	WITHOUT_CLASSIFICATION	0.9999997365363058	WITHOUT_CLASSIFICATION	2.5847905579527165E-7	DESIGN	2.343660849390717E-9	TEST	1.943385740118881E-9	DEFECT	6.204717444219687E-10	IMPLEMENTATION	7.712006772786981E-11	DOCUMENTATION
// or its key changed	WITHOUT_CLASSIFICATION	0.9999976592369215	WITHOUT_CLASSIFICATION	8.447562911312342E-7	DESIGN	7.929302178584775E-7	DEFECT	6.514733580225018E-7	IMPLEMENTATION	3.790380304250069E-8	TEST	1.3699408513271911E-8	DOCUMENTATION
// we will need to create new entries	WITHOUT_CLASSIFICATION	0.999988283825886	WITHOUT_CLASSIFICATION	1.0119307980090238E-5	IMPLEMENTATION	1.2119207615852231E-6	DESIGN	2.218947297742057E-7	DOCUMENTATION	1.2881227761247907E-7	TEST	3.423836492073418E-8	DEFECT
// we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.9999874708446976	WITHOUT_CLASSIFICATION	9.632603829475316E-6	IMPLEMENTATION	1.340449577410432E-6	DESIGN	1.323702703280924E-6	DEFECT	1.3847157834063727E-7	DOCUMENTATION	9.392761397304402E-8	TEST
// force initialize!	WITHOUT_CLASSIFICATION	0.9999996562172592	WITHOUT_CLASSIFICATION	2.3634548638165336E-7	IMPLEMENTATION	5.6718824865839775E-8	DEFECT	3.054099407628333E-8	DESIGN	1.1912933830365115E-8	DOCUMENTATION	8.264501748898797E-9	TEST
// else if it's elements changed	WITHOUT_CLASSIFICATION	0.999999492272035	WITHOUT_CLASSIFICATION	4.3095244104984735E-7	IMPLEMENTATION	5.957134426897608E-8	DESIGN	1.1293823078572712E-8	DEFECT	5.425924049003278E-9	TEST	4.84432646350624E-10	DOCUMENTATION
//ATTRIBUTES MAINTAINED BETWEEN FLUSH CYCLES	WITHOUT_CLASSIFICATION	0.9999582680947353	WITHOUT_CLASSIFICATION	2.6100998149437538E-5	DESIGN	1.1887779673101312E-5	IMPLEMENTATION	1.5091157599434672E-6	DEFECT	1.4364934700918643E-6	DOCUMENTATION	7.975182120046775E-7	TEST
// session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.9999993606574691	WITHOUT_CLASSIFICATION	5.838199204671459E-7	DESIGN	4.7567782539936344E-8	IMPLEMENTATION	3.0324939648028695E-9	TEST	2.7491482872316587E-9	DEFECT	2.173185588493474E-9	DOCUMENTATION
// allow the CollectionSnapshot to be serialized	WITHOUT_CLASSIFICATION	0.9987931111372802	WITHOUT_CLASSIFICATION	0.0011679614893216627	DESIGN	3.4290501407047445E-5	IMPLEMENTATION	4.499374523497334E-6	DEFECT	7.462253112186656E-8	TEST	6.287493640814626E-8	DOCUMENTATION
// ATTRIBUTES USED ONLY DURING FLUSH CYCLE	WITHOUT_CLASSIFICATION	0.9999726687963774	WITHOUT_CLASSIFICATION	1.7090912196832766E-5	DESIGN	8.356452645715117E-6	IMPLEMENTATION	8.818100382265357E-7	DEFECT	7.218638505545038E-7	DOCUMENTATION	2.801648912188155E-7	TEST
// "current" means the reference that was found during flush() 	WITHOUT_CLASSIFICATION	0.9999985031005928	WITHOUT_CLASSIFICATION	1.3736488700461782E-6	DEFECT	1.0591533644059363E-7	DESIGN	1.2601875323585784E-8	DOCUMENTATION	4.304182513825874E-9	IMPLEMENTATION	4.291429442729691E-10	TEST
// "loaded" means the reference that is consistent  // with the current database state	WITHOUT_CLASSIFICATION	0.9999948348324249	WITHOUT_CLASSIFICATION	2.816813706171624E-6	IMPLEMENTATION	2.1030076950291685E-6	DESIGN	2.1311913581963128E-7	DEFECT	2.615868685674946E-8	TEST	6.068351235497751E-9	DOCUMENTATION
// during flush, we navigate the object graph to // collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.9993929426818421	WITHOUT_CLASSIFICATION	5.926899292260362E-4	DESIGN	1.3647162478670331E-5	IMPLEMENTATION	3.5806521283731634E-7	TEST	1.9329607814367273E-7	DOCUMENTATION	1.68865162141059E-7	DEFECT
// if we instantiate a collection during the flush() process, // we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.9999999980098834	WITHOUT_CLASSIFICATION	1.616441341669715E-9	DESIGN	1.9127928814290368E-10	DEFECT	1.7839320728327957E-10	TEST	3.919980183710479E-12	DOCUMENTATION	8.265452664007382E-14	IMPLEMENTATION
// new collections that get found + wrapped // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9997724152875688	WITHOUT_CLASSIFICATION	2.2740982996485208E-4	DESIGN	1.0747918771145546E-7	IMPLEMENTATION	6.120751349160556E-8	DEFECT	5.527982058810308E-9	TEST	6.677830856686277E-10	DOCUMENTATION
//a newly wrapped collection is NOT dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.8520251652661108	WITHOUT_CLASSIFICATION	0.14795142137488804	DESIGN	1.2508506893961695E-5	DEFECT	7.04258665838829E-6	IMPLEMENTATION	3.5500648887130978E-6	TEST	3.1220055998280695E-7	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.998990792416706	WITHOUT_CLASSIFICATION	4.841329910250762E-4	IMPLEMENTATION	4.1440454088609915E-4	DESIGN	9.24048290693714E-5	DEFECT	1.3047254421586069E-5	DOCUMENTATION	5.217967891996908E-6	TEST
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.998990792416706	WITHOUT_CLASSIFICATION	4.841329910250762E-4	IMPLEMENTATION	4.1440454088609915E-4	DESIGN	9.24048290693714E-5	DEFECT	1.3047254421586069E-5	DOCUMENTATION	5.217967891996908E-6	TEST
// detached collections that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999610226302273	WITHOUT_CLASSIFICATION	3.8829003932588586E-5	DESIGN	1.3018718427393308E-7	DEFECT	1.7048586660795472E-8	IMPLEMENTATION	8.105569204662769E-10	TEST	3.195124119736943E-10	DOCUMENTATION
//optimization	WITHOUT_CLASSIFICATION	0.9998411439026648	WITHOUT_CLASSIFICATION	1.3602455396620534E-4	DEFECT	8.351743610789754E-6	DESIGN	7.210363609860174E-6	IMPLEMENTATION	6.334767384876369E-6	DOCUMENTATION	9.346687634177634E-7	TEST
//optimization //optimization	WITHOUT_CLASSIFICATION	0.9999502191382991	WITHOUT_CLASSIFICATION	4.770319903665812E-5	DEFECT	1.252125694868719E-6	DOCUMENTATION	5.331325247091373E-7	DESIGN	1.6131291301300499E-7	IMPLEMENTATION	1.3109153166747338E-7	TEST
//re-snapshot	WITHOUT_CLASSIFICATION	0.9994339265229627	WITHOUT_CLASSIFICATION	5.322321710558088E-4	DESIGN	1.973184152944183E-5	IMPLEMENTATION	9.263960432547226E-6	DEFECT	2.531211645063558E-6	DOCUMENTATION	2.314292374441781E-6	TEST
// for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.9999977305856295	WITHOUT_CLASSIFICATION	1.4954442364833317E-6	IMPLEMENTATION	4.370654818533776E-7	DESIGN	1.7477650683708278E-7	DEFECT	1.4794495755577378E-7	DOCUMENTATION	1.4183187749009618E-8	TEST
//NOTE: this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.7543802875158723	WITHOUT_CLASSIFICATION	0.2170747621255156	DESIGN	0.02835116013315026	DEFECT	1.6318086582620773E-4	TEST	2.774714246640703E-5	DOCUMENTATION	2.862217169271458E-6	IMPLEMENTATION
//memory optimization	WITHOUT_CLASSIFICATION	0.9999377962140726	WITHOUT_CLASSIFICATION	5.8971036056376867E-5	DEFECT	1.6815469288997763E-6	DESIGN	8.283046143479156E-7	DOCUMENTATION	5.807292065880586E-7	IMPLEMENTATION	1.4216912121498604E-7	TEST
// use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999726250807046	WITHOUT_CLASSIFICATION	2.7264435932080878E-5	DESIGN	9.909170233117526E-8	DEFECT	9.787631886423716E-9	DOCUMENTATION	1.3907108444173201E-9	IMPLEMENTATION	2.1331830551478995E-10	TEST
// copied from Session:	WITHOUT_CLASSIFICATION	0.9999892648848555	WITHOUT_CLASSIFICATION	9.50534949915699E-6	DESIGN	9.310032920151012E-7	DEFECT	2.271872969309497E-7	IMPLEMENTATION	3.7677793520686246E-8	TEST	3.389726293302579E-8	DOCUMENTATION
// this should not happen since the DTD prevents it	WITHOUT_CLASSIFICATION	0.9997616408021406	WITHOUT_CLASSIFICATION	1.1310224020151816E-4	DEFECT	8.694862615751333E-5	DESIGN	3.569451523524911E-5	IMPLEMENTATION	1.781405197836297E-6	TEST	8.324110672738842E-7	DOCUMENTATION
// JoinProcessor needs to know if the where clause fragment came from a dynamic filter or not so it // can put the where clause fragment in the right place in the SQL AST.   'hasFilterCondition' keeps track // of that fact.	WITHOUT_CLASSIFICATION	0.9995203012328351	WITHOUT_CLASSIFICATION	4.763024627584042E-4	DESIGN	3.3694388379925494E-6	DEFECT	2.3627331682182707E-8	DOCUMENTATION	2.5890062913833646E-9	TEST	6.492306440824538E-10	IMPLEMENTATION
// the current join represents the join between a many-to-many association table // and its "target" table.  Here we need to apply any additional filters // defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.9999818668960665	WITHOUT_CLASSIFICATION	1.7839528599046092E-5	DESIGN	1.8333352415641023E-7	IMPLEMENTATION	1.0994116160793742E-7	DOCUMENTATION	1.7505129681879008E-10	TEST	1.2559744446965835E-10	DEFECT
//check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.99984589595863	WITHOUT_CLASSIFICATION	1.535800138865994E-4	DESIGN	3.3404244735092557E-7	IMPLEMENTATION	9.849113629832442E-8	DOCUMENTATION	7.575016097646982E-8	DEFECT	1.5743738782075623E-8	TEST
//values is not null and is checkable, we'll look deeper	WITHOUT_CLASSIFICATION	0.8845369239733265	WITHOUT_CLASSIFICATION	0.11514522337201742	DESIGN	2.5800314964994226E-4	DEFECT	5.598473309493126E-5	IMPLEMENTATION	2.9870164993590392E-6	TEST	8.777554119225028E-7	DOCUMENTATION
//for non null args, check for components and elements containing components	WITHOUT_CLASSIFICATION	0.9999954963397835	WITHOUT_CLASSIFICATION	4.47804923983275E-6	DESIGN	2.12345088384227E-8	IMPLEMENTATION	2.6740196961990788E-9	DEFECT	1.4574802604412634E-9	DOCUMENTATION	2.4496801265630433E-10	TEST
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9993655860480841	WITHOUT_CLASSIFICATION	6.075511974404882E-4	DESIGN	2.3072066863773014E-5	IMPLEMENTATION	1.8329820958673707E-6	DOCUMENTATION	1.2194331297221307E-6	DEFECT	7.382723861375584E-7	TEST
//persistent collections may have components	WITHOUT_CLASSIFICATION	0.9999982612504331	WITHOUT_CLASSIFICATION	1.5798954229664667E-6	DESIGN	1.1922590641183336E-7	IMPLEMENTATION	1.9139980447794263E-8	DEFECT	1.9084132898780082E-8	TEST	1.4041241196727378E-9	DOCUMENTATION
//check for all components values in the collection	WITHOUT_CLASSIFICATION	0.999999528778611	WITHOUT_CLASSIFICATION	4.6371724714977416E-7	DESIGN	6.058580718909943E-9	DEFECT	7.123483847350831E-10	DOCUMENTATION	5.803147059541991E-10	IMPLEMENTATION	1.5289807673111784E-10	TEST
/* will check current level if some of them are not null	WITHOUT_CLASSIFICATION	0.9982953203479952	WITHOUT_CLASSIFICATION	0.0013580381362471292	DESIGN	1.612091381923245E-4	IMPLEMENTATION	1.2036616190579462E-4	DEFECT	5.8451790700589436E-5	DOCUMENTATION	6.6144249589271325E-6	TEST
//do the test	WITHOUT_CLASSIFICATION	0.9991877685487435	WITHOUT_CLASSIFICATION	8.041354552136849E-4	TEST	3.2225282460346697E-6	DOCUMENTATION	2.5357745144639047E-6	IMPLEMENTATION	1.440340102436025E-6	DESIGN	8.973531798948853E-7	DEFECT
// if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.9999983404108678	WITHOUT_CLASSIFICATION	1.5669680838524757E-6	DESIGN	8.667902858336678E-8	DEFECT	2.375979246448019E-9	TEST	2.325284812831681E-9	IMPLEMENTATION	1.2407557344365412E-9	DOCUMENTATION
//unwrap it	WITHOUT_CLASSIFICATION	0.9999680065568377	WITHOUT_CLASSIFICATION	1.616912745217414E-5	DESIGN	9.070143678349853E-6	IMPLEMENTATION	5.934391782212827E-6	DEFECT	4.7616710181133864E-7	TEST	3.4361314771842526E-7	DOCUMENTATION
// See if the entity is already bound to this session, if not look at the // entity identifier and assume that the entity is persistent if the // id is not "unsaved" (that is, we rely on foreign keys to keep // database integrity)	WITHOUT_CLASSIFICATION	0.9999679840934241	WITHOUT_CLASSIFICATION	3.1941254767880516E-5	DESIGN	7.079882274686512E-8	DEFECT	3.275067010406367E-9	DOCUMENTATION	3.598479884288281E-10	TEST	2.1807013796578413E-10	IMPLEMENTATION
// an unfetched association can only point to // an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.9999985803562154	WITHOUT_CLASSIFICATION	1.3936291609690502E-6	DESIGN	7.384384969532279E-9	DOCUMENTATION	7.310103571698434E-9	DEFECT	6.865849243797176E-9	IMPLEMENTATION	4.454285829605683E-9	TEST
// let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999999072594598	WITHOUT_CLASSIFICATION	4.7497760394306935E-8	IMPLEMENTATION	3.975003684834904E-8	DESIGN	2.8776962823219494E-9	DEFECT	2.356782915873664E-9	DOCUMENTATION	2.582637128661391E-10	TEST
// let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999961988506418	WITHOUT_CLASSIFICATION	2.9675916511261436E-6	DESIGN	7.91929765102767E-7	IMPLEMENTATION	2.0932522669282418E-8	DEFECT	1.8811037342029082E-8	DOCUMENTATION	1.884381909082122E-9	TEST
// we use the assumed value, if there is one, to avoid hitting // the database	WITHOUT_CLASSIFICATION	0.9999983504680715	WITHOUT_CLASSIFICATION	1.6350712671823337E-6	DESIGN	9.02204263272025E-9	TEST	5.227711203996572E-9	DEFECT	1.3842471338832513E-10	IMPLEMENTATION	7.248268440042515E-11	DOCUMENTATION
// hit the database, after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.9265403739614775	DESIGN	0.07313353135738641	WITHOUT_CLASSIFICATION	2.667689051518483E-4	DEFECT	5.747799837555118E-5	IMPLEMENTATION	1.284626649593373E-6	TEST	5.631509588537396E-7	DOCUMENTATION
// context-entity-identifier returns null explicitly if the entity // is not associated with the persistence context; so make some // deeper checks...	WITHOUT_CLASSIFICATION	0.9999829679445122	WITHOUT_CLASSIFICATION	1.573922439312132E-5	DESIGN	6.019406718698397E-7	IMPLEMENTATION	5.352087603423648E-7	TEST	1.2711672340343678E-7	DEFECT	2.8564939085515035E-8	DOCUMENTATION
//int count = 0;	WITHOUT_CLASSIFICATION	0.9999783980330024	WITHOUT_CLASSIFICATION	1.0951988875013725E-5	DEFECT	9.042185475691704E-6	DESIGN	8.248707527045105E-7	IMPLEMENTATION	6.36864705715256E-7	DOCUMENTATION	1.4605718854000567E-7	TEST
//the first key found after the given key	WITHOUT_CLASSIFICATION	0.9999968874647112	WITHOUT_CLASSIFICATION	1.5473130307129197E-6	DESIGN	1.1383616426849415E-6	IMPLEMENTATION	2.031572221901562E-7	TEST	1.9012611195764343E-7	DOCUMENTATION	3.3577281273273426E-8	DEFECT
//checkForEnd = false;	WITHOUT_CLASSIFICATION	0.999988669462626	WITHOUT_CLASSIFICATION	8.9476773129041E-6	DESIGN	1.234634803362097E-6	IMPLEMENTATION	8.306232281535151E-7	DEFECT	2.3746004864455644E-7	DOCUMENTATION	8.014198092185221E-8	TEST
//count++;	WITHOUT_CLASSIFICATION	0.9998116362597917	WITHOUT_CLASSIFICATION	1.2907602920349641E-4	DESIGN	5.224684981171078E-5	DEFECT	4.159310619867128E-6	DOCUMENTATION	1.9629968196730753E-6	IMPLEMENTATION	9.185537534012312E-7	TEST
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9997696996251076	WITHOUT_CLASSIFICATION	2.2049553336516675E-4	DESIGN	5.606713412963505E-6	IMPLEMENTATION	2.5848402946777365E-6	TEST	9.031903820092889E-7	DOCUMENTATION	7.100974375657356E-7	DEFECT
//we ran out of keys to try	WITHOUT_CLASSIFICATION	0.9997092667520615	WITHOUT_CLASSIFICATION	2.853183594591601E-4	DESIGN	3.878542023432275E-6	DEFECT	7.751394515319526E-7	DOCUMENTATION	5.558707409466869E-7	IMPLEMENTATION	2.0533626343237825E-7	TEST
//first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.9999990565156287	WITHOUT_CLASSIFICATION	5.034522798294831E-7	IMPLEMENTATION	2.8866156833344396E-7	DEFECT	1.1085328763871604E-7	DESIGN	2.4011787272726386E-8	TEST	1.6505448219296713E-8	DOCUMENTATION
//the first id found after the given id	WITHOUT_CLASSIFICATION	0.9999964668223943	WITHOUT_CLASSIFICATION	2.6261343656921227E-6	IMPLEMENTATION	5.401444138550758E-7	DESIGN	2.3828871124639866E-7	TEST	1.1090740698875816E-7	DOCUMENTATION	1.7702707947792598E-8	DEFECT
//we ran out of ids to try	WITHOUT_CLASSIFICATION	0.9983716304797002	WITHOUT_CLASSIFICATION	0.0016143443823365543	DESIGN	1.1428872838171743E-5	DEFECT	1.5992565863393366E-6	IMPLEMENTATION	7.87189210675736E-7	DOCUMENTATION	2.0981932803478508E-7	TEST
// look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.9999999599613966	WITHOUT_CLASSIFICATION	2.6041328019370952E-8	IMPLEMENTATION	9.725215172706587E-9	DEFECT	2.1143733502874625E-9	TEST	1.7334727387261785E-9	DESIGN	4.24214223311019E-10	DOCUMENTATION
// ignore this row of results! Note the early exit	WITHOUT_CLASSIFICATION	0.9998624651415265	WITHOUT_CLASSIFICATION	1.3547262125817458E-4	DEFECT	1.9140017775808374E-6	DESIGN	9.287171186621059E-8	TEST	3.3852595418144596E-8	IMPLEMENTATION	2.151113050925531E-8	DOCUMENTATION
// initialize this collection	WITHOUT_CLASSIFICATION	0.9998792174156785	WITHOUT_CLASSIFICATION	1.1853903329432116E-4	DESIGN	9.791868459334613E-7	IMPLEMENTATION	7.365485179090178E-7	TEST	3.0547454278078026E-7	DEFECT	2.2234112047851917E-7	DOCUMENTATION
// create one	WITHOUT_CLASSIFICATION	0.9999968063969381	WITHOUT_CLASSIFICATION	2.743075878814525E-6	DESIGN	2.4583416484517185E-7	IMPLEMENTATION	1.5779791012674052E-7	DEFECT	2.9328962139000325E-8	DOCUMENTATION	1.756614605844706E-8	TEST
// warning: can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.9983885653843135	WITHOUT_CLASSIFICATION	0.0016042790302277026	DEFECT	6.138955031588746E-6	DESIGN	7.821926927797976E-7	IMPLEMENTATION	2.276253171810972E-7	DOCUMENTATION	6.812417372641996E-9	TEST
// there were no queued additions // and the role has a cache	WITHOUT_CLASSIFICATION	0.9999764877253302	WITHOUT_CLASSIFICATION	2.345143944996887E-5	DESIGN	5.016630290638519E-8	DEFECT	7.332144728979731E-9	IMPLEMENTATION	2.7146844230613915E-9	DOCUMENTATION	6.220877636860457E-10	TEST
// and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.9999997645015162	WITHOUT_CLASSIFICATION	1.3709120013957978E-7	DESIGN	9.269744205548227E-8	DEFECT	3.2605788064246113E-9	TEST	1.420388730788609E-9	DOCUMENTATION	1.028874012083642E-9	IMPLEMENTATION
// some filters affecting the collection are enabled on the session, so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.9999388716625661	WITHOUT_CLASSIFICATION	6.10971377201695E-5	DESIGN	1.4197203265564059E-8	IMPLEMENTATION	1.225956410675497E-8	DEFECT	4.289304549590316E-9	TEST	4.5364188384684666E-10	DOCUMENTATION
// cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998908314694875	WITHOUT_CLASSIFICATION	8.608389505238862E-5	DESIGN	1.3362251317386471E-5	IMPLEMENTATION	8.572147045989456E-6	DEFECT	8.186681176973985E-7	DOCUMENTATION	3.3156897898100645E-7	TEST
// loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991076050045	WITHOUT_CLASSIFICATION	8.350856651106908E-7	DEFECT	4.36317324237012E-8	IMPLEMENTATION	7.293864778490546E-9	DESIGN	5.305575975261606E-9	TEST	1.0781571222646256E-9	DOCUMENTATION
// Collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999915883296423	WITHOUT_CLASSIFICATION	4.315911819317125E-6	DEFECT	3.7617507428132744E-6	DESIGN	1.8251832319389487E-7	IMPLEMENTATION	7.867129826181007E-8	TEST	7.281817417661957E-8	DOCUMENTATION
// simple cache of param metadata based on query string.  Ideally, the // original "user-supplied query" string should be used to retreive this // metadata (i.e., not the para-list-expanded query string) to avoid // unnecessary cache entries. // Used solely for caching param metadata for native-sql queries, see // getSQLParameterMetadata() for a discussion as to why...	WITHOUT_CLASSIFICATION	0.9731126825351474	WITHOUT_CLASSIFICATION	0.026846760366672277	DESIGN	4.055434883110603E-5	DEFECT	2.634613243871198E-9	IMPLEMENTATION	7.156136288655066E-11	DOCUMENTATION	4.3174497022758145E-11	TEST
// the cache of the actual plans...	WITHOUT_CLASSIFICATION	0.9999992058896915	WITHOUT_CLASSIFICATION	6.816218433110553E-7	IMPLEMENTATION	7.4190363692974E-8	DEFECT	3.013357443182083E-8	DESIGN	7.693636086219726E-9	DOCUMENTATION	4.708910668773415E-10	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9990042718110085	WITHOUT_CLASSIFICATION	9.126514084333693E-4	DESIGN	6.918329762260797E-5	IMPLEMENTATION	7.305212416715822E-6	DEFECT	5.059125330650915E-6	DOCUMENTATION	1.5291451883866793E-6	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9990042718110085	WITHOUT_CLASSIFICATION	9.126514084333693E-4	DESIGN	6.918329762260797E-5	IMPLEMENTATION	7.305212416715822E-6	DEFECT	5.059125330650915E-6	DOCUMENTATION	1.5291451883866793E-6	TEST
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999999277450621	WITHOUT_CLASSIFICATION	6.7735514387399E-8	DESIGN	1.5996094475656325E-9	DEFECT	1.395128889888886E-9	DOCUMENTATION	8.522942040483166E-10	IMPLEMENTATION	6.723908992157785E-10	TEST
// for native-sql queries, the param metadata is determined outside // any relation to a query plan, because query plan creation and/or // retreival for a native-sql query depends on all of the return // types having been set, which might not be the case up-front when // param metadata would be most useful	WITHOUT_CLASSIFICATION	0.9999599387179429	WITHOUT_CLASSIFICATION	3.9938922175690197E-5	DESIGN	1.223040723150653E-7	DEFECT	4.6369101768497914E-11	IMPLEMENTATION	6.439143171187465E-12	DOCUMENTATION	3.0009509220418997E-12	TEST
// don't care...	WITHOUT_CLASSIFICATION	0.9990693913831422	WITHOUT_CLASSIFICATION	7.549151614964486E-4	DEFECT	1.7205815230162956E-4	DESIGN	3.1209637848948685E-6	IMPLEMENTATION	3.9390243406503094E-7	DOCUMENTATION	1.2043684068712227E-7	TEST
// Recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998457180827539	WITHOUT_CLASSIFICATION	7.188543663448444E-5	DEFECT	4.0773440905555674E-5	DESIGN	3.731320422694968E-5	IMPLEMENTATION	3.71144188933197E-6	DOCUMENTATION	5.983935898396794E-7	TEST
// don't care...	WITHOUT_CLASSIFICATION	0.9990693913831422	WITHOUT_CLASSIFICATION	7.549151614964486E-4	DEFECT	1.7205815230162956E-4	DESIGN	3.1209637848948685E-6	IMPLEMENTATION	3.9390243406503094E-7	DOCUMENTATION	1.2043684068712227E-7	TEST
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9992679117898019	WITHOUT_CLASSIFICATION	5.830723930101622E-4	DESIGN	8.699271638564091E-5	IMPLEMENTATION	3.663930340033959E-5	DEFECT	2.5215544744773864E-5	TEST	1.6825265715861424E-7	DOCUMENTATION
// break the outer loop !!!	WITHOUT_CLASSIFICATION	0.9997768519865533	WITHOUT_CLASSIFICATION	2.1578757413831623E-4	DESIGN	6.814999542386571E-6	DEFECT	3.4223204702720456E-7	IMPLEMENTATION	1.2478733234397106E-7	TEST	7.842038653973597E-8	DOCUMENTATION
// named parameter	WITHOUT_CLASSIFICATION	0.9996130799750051	WITHOUT_CLASSIFICATION	3.475425380756246E-4	DESIGN	3.81034151942792E-5	IMPLEMENTATION	7.776108479282008E-7	DEFECT	4.263757103875792E-7	TEST	7.008516657726136E-8	DOCUMENTATION
// could be either an ordinal or JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999435632584771	WITHOUT_CLASSIFICATION	5.6080698905636034E-5	DESIGN	1.8371117687430042E-7	IMPLEMENTATION	1.6409461511121296E-7	DEFECT	4.940307035511607E-9	DOCUMENTATION	3.2965182064313135E-9	TEST
// a peek ahead showed this as an JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999991753150301	WITHOUT_CLASSIFICATION	8.053014994066684E-7	DESIGN	8.344554416194578E-9	IMPLEMENTATION	5.724864673993886E-9	DEFECT	3.1985281893560036E-9	DOCUMENTATION	2.1155232810704283E-9	TEST
// make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.9999995446000653	WITHOUT_CLASSIFICATION	3.5550576018291026E-7	DESIGN	5.421562966314752E-8	TEST	4.3376330938757275E-8	DEFECT	1.8605394420058173E-9	DOCUMENTATION	4.4167464716233377E-10	IMPLEMENTATION
// pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9999990893749323	WITHOUT_CLASSIFICATION	9.074032998386437E-7	DESIGN	1.8117957185984728E-9	DEFECT	8.305051644814125E-10	IMPLEMENTATION	4.0066090791553744E-10	DOCUMENTATION	1.7880589530741368E-10	TEST
// perform the actual work	WITHOUT_CLASSIFICATION	0.9999998322710221	WITHOUT_CLASSIFICATION	7.257223613102845E-8	DEFECT	7.114776411464979E-8	DESIGN	1.6938292007417394E-8	IMPLEMENTATION	6.463414861549251E-9	DOCUMENTATION	6.072709401590586E-10	TEST
// if everything went ok, commit the transaction and close the obtained // connection handle...	WITHOUT_CLASSIFICATION	0.999996963893229	WITHOUT_CLASSIFICATION	1.83304291537606E-6	IMPLEMENTATION	1.1626682424960965E-6	DESIGN	1.82476668024599E-8	DOCUMENTATION	1.2144295248894341E-8	DEFECT	1.0003651075761324E-8	TEST
// at some point the processing went bad, so we need to: //      1) make sure the connection handle gets released //      2) try to cleanup the JTA context as much as possible	WITHOUT_CLASSIFICATION	0.9959906496879876	WITHOUT_CLASSIFICATION	0.0036013715802357513	DESIGN	1.4066675180578097E-4	IMPLEMENTATION	1.3847789666184273E-4	DOCUMENTATION	8.212245630176778E-5	DEFECT	4.671162700730116E-5	TEST
// finally handle the exception	WITHOUT_CLASSIFICATION	0.9999758887462025	WITHOUT_CLASSIFICATION	2.2762048626908666E-5	DESIGN	1.2668079939852113E-6	DEFECT	5.385586963932719E-8	IMPLEMENTATION	2.486348361339608E-8	DOCUMENTATION	3.6778233400072457E-9	TEST
// a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.998832218577899	WITHOUT_CLASSIFICATION	0.0011677787851053741	DESIGN	2.2801520585274373E-9	DEFECT	1.625021599282508E-10	DOCUMENTATION	1.1244818174327035E-10	TEST	8.1893341523902E-11	IMPLEMENTATION
//saveOrUpdateCopy() is deprecated!	WITHOUT_CLASSIFICATION	0.999997159411217	WITHOUT_CLASSIFICATION	2.14569529080825E-6	DEFECT	6.026125398055234E-7	DESIGN	3.417434219572147E-8	DOCUMENTATION	3.094073340608949E-8	TEST	2.716587675596706E-8	IMPLEMENTATION
// collectionPersister should not be null, but we don't want to throw // an exception if it is null	WITHOUT_CLASSIFICATION	0.9998540311479573	WITHOUT_CLASSIFICATION	1.1722298710894443E-4	DESIGN	2.8630837232470105E-5	DEFECT	1.1468278267204939E-7	TEST	2.677244747547305E-10	DOCUMENTATION	7.719412658196674E-11	IMPLEMENTATION
// otherwise a null or brand new collection // this will also (inefficiently) handle arrays, which // have no snapshot, so we can't do any better //processArrayOrNewCollection(collection, type);	WITHOUT_CLASSIFICATION	0.981317012043343	WITHOUT_CLASSIFICATION	0.018682690660990122	DESIGN	2.1237243885827206E-7	DOCUMENTATION	7.857933894860977E-8	DEFECT	4.022322844492105E-9	IMPLEMENTATION	2.321566237252251E-9	TEST
// a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.999413911915955	WITHOUT_CLASSIFICATION	5.860857182016123E-4	DESIGN	2.145637406974544E-9	DEFECT	2.009229681763181E-10	DOCUMENTATION	9.653233108818172E-12	TEST	9.62972463439718E-12	IMPLEMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9999934929332591	WITHOUT_CLASSIFICATION	4.015842213283121E-6	DESIGN	1.4057611385052084E-6	DEFECT	6.106672573877329E-7	DOCUMENTATION	3.274939555195851E-7	IMPLEMENTATION	1.4730217637056464E-7	TEST
//do nothing	WITHOUT_CLASSIFICATION	0.9999934929332591	WITHOUT_CLASSIFICATION	4.015842213283121E-6	DESIGN	1.4057611385052084E-6	DEFECT	6.106672573877329E-7	DOCUMENTATION	3.274939555195851E-7	IMPLEMENTATION	1.4730217637056464E-7	TEST
//Force a substitution!	WITHOUT_CLASSIFICATION	0.9995164344786577	WITHOUT_CLASSIFICATION	4.710714429602047E-4	DESIGN	7.3822175530702265E-6	DEFECT	2.6098302396515285E-6	DOCUMENTATION	2.19688390102066E-6	IMPLEMENTATION	3.05146688382405E-7	TEST
// The user requested a "greater" (i.e. more restrictive) form of // pessimistic lock	WITHOUT_CLASSIFICATION	0.9999999397184209	WITHOUT_CLASSIFICATION	3.835941699190122E-8	DEFECT	1.3785297482004376E-8	IMPLEMENTATION	6.322451577268443E-9	TEST	1.6489679400170979E-9	DESIGN	1.6544514051653047E-10	DOCUMENTATION
// the database now holds a lock + the object is flushed from the cache, // so release the soft lock	WITHOUT_CLASSIFICATION	0.9999996440430964	WITHOUT_CLASSIFICATION	3.216425588232765E-7	DEFECT	2.3176615674579424E-8	DESIGN	1.0714660078578232E-8	IMPLEMENTATION	2.900339917736458E-10	TEST	1.3303491840894567E-10	DOCUMENTATION
// now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.9999973168251768	WITHOUT_CLASSIFICATION	1.877965050626154E-6	IMPLEMENTATION	8.018814571660941E-7	DESIGN	2.5496295920803853E-9	DEFECT	6.684351202468397E-10	DOCUMENTATION	1.102505461364163E-10	TEST
// Search for collections by reachability, updating their role. // We don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.9899276400217456	WITHOUT_CLASSIFICATION	0.010070177349418397	DESIGN	2.1550497386458752E-6	DEFECT	2.463904943263083E-8	TEST	1.6618212967222728E-9	DOCUMENTATION	1.2782267998894132E-9	IMPLEMENTATION
// this is a situation where the entity id is assigned by a post-insert generator // and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.9999968791955446	WITHOUT_CLASSIFICATION	2.115709164271769E-6	DESIGN	9.827120216079683E-7	DEFECT	1.1190145539015518E-8	TEST	9.986956111568776E-9	IMPLEMENTATION	1.206167782563869E-9	DOCUMENTATION
// NOTE: we need to do the wrap here even if its not "dirty", // because collections need wrapping but changes to _them_ // don't dirty the container. Also, for versioned data, we // need to wrap before calling searchForDirtyCollections	WITHOUT_CLASSIFICATION	0.976482636031827	WITHOUT_CLASSIFICATION	0.02301641351755697	IMPLEMENTATION	4.914639431328221E-4	DESIGN	8.256017290061217E-6	DEFECT	1.0997249247070699E-6	TEST	1.3076526849275698E-7	DOCUMENTATION
//grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.9999750885097783	WITHOUT_CLASSIFICATION	1.3379954688175348E-5	DESIGN	9.929973097966537E-6	IMPLEMENTATION	7.876485501838484E-7	DEFECT	6.23337982121312E-7	TEST	1.9057590322695937E-7	DOCUMENTATION
// grab its current state	WITHOUT_CLASSIFICATION	0.9999978235966973	WITHOUT_CLASSIFICATION	2.1161091290871397E-6	DESIGN	2.7927780905268388E-8	DEFECT	1.5449521149301712E-8	IMPLEMENTATION	9.900574539695654E-9	TEST	7.016296932137834E-9	DOCUMENTATION
// schedule the update // note that we intentionally do _not_ pass in currentPersistentState!	WITHOUT_CLASSIFICATION	0.9999999056994651	WITHOUT_CLASSIFICATION	9.038513447406962E-8	IMPLEMENTATION	2.502076766230212E-9	DEFECT	8.96243367959784E-10	DESIGN	5.033795577839177E-10	DOCUMENTATION	1.370079950126034E-11	TEST
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999977715870182	WITHOUT_CLASSIFICATION	2.144140927197194E-6	DESIGN	7.183478265903762E-8	DEFECT	6.752029846530874E-9	TEST	5.0905637700956025E-9	DOCUMENTATION	5.946783205755639E-10	IMPLEMENTATION
// give the Interceptor a chance to process property values, if the properties // were modified by the Interceptor, we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9999993752168902	WITHOUT_CLASSIFICATION	6.215629313035811E-7	DESIGN	2.577663478724549E-9	DEFECT	5.04630814572073E-10	DOCUMENTATION	1.3540720643197872E-10	TEST	2.476876983506934E-12	IMPLEMENTATION
// compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.9999999301755894	WITHOUT_CLASSIFICATION	4.2341779687747404E-8	DESIGN	2.479292275495569E-8	IMPLEMENTATION	2.5753739210310886E-9	DEFECT	6.301434757201352E-11	DOCUMENTATION	5.131986679362255E-11	TEST
// if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.9999950003108435	WITHOUT_CLASSIFICATION	4.5959292123109255E-6	DESIGN	3.8365074266841965E-7	DEFECT	1.7966514301329405E-8	TEST	1.6228099739151263E-9	IMPLEMENTATION	5.198772870047584E-10	DOCUMENTATION
// increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.9964842203041601	WITHOUT_CLASSIFICATION	0.0034975862618563487	DESIGN	7.089530774789651E-6	DOCUMENTATION	6.852444003063534E-6	DEFECT	3.863790240389158E-6	IMPLEMENTATION	3.8766896538788956E-7	TEST
// check nullability but do not perform command execute // we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.9999986102792451	WITHOUT_CLASSIFICATION	1.3805668122862148E-6	DESIGN	8.271377645624372E-9	DEFECT	3.7565543971881497E-10	DOCUMENTATION	3.1882245038686854E-10	TEST	1.8808721415486517E-10	IMPLEMENTATION
//give the Interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.9999501001088542	WITHOUT_CLASSIFICATION	4.9764694982145285E-5	DESIGN	1.1973409233521736E-7	DEFECT	1.1693829271718027E-8	DOCUMENTATION	2.3026896362382556E-9	IMPLEMENTATION	1.4655524565658945E-9	TEST
//now we might need to recalculate the dirtyProperties array	WITHOUT_CLASSIFICATION	0.927023245574796	WITHOUT_CLASSIFICATION	0.07224103380980425	DESIGN	6.78684716424518E-4	IMPLEMENTATION	2.5454946310074064E-5	DEFECT	2.009502213713988E-5	DOCUMENTATION	1.1485930528106452E-5	TEST
//use the current version	WITHOUT_CLASSIFICATION	0.9999440500794665	WITHOUT_CLASSIFICATION	5.246112175959925E-5	DESIGN	1.6859459763944196E-6	IMPLEMENTATION	9.654604732993027E-7	DOCUMENTATION	8.27618184385536E-7	DEFECT	9.774139787079884E-9	TEST
// Interceptor returned null, so do the dirtycheck ourself, if possible	WITHOUT_CLASSIFICATION	0.999999882912545	WITHOUT_CLASSIFICATION	9.923247261103439E-8	DESIGN	1.68267299340108E-8	IMPLEMENTATION	9.580517832623553E-10	DEFECT	4.21204903286724E-11	DOCUMENTATION	2.80802058426064E-11	TEST
// object loaded by update()	WITHOUT_CLASSIFICATION	0.9999975370853889	WITHOUT_CLASSIFICATION	1.4296811893517115E-6	DEFECT	4.934499383535182E-7	IMPLEMENTATION	4.912814407481806E-7	DESIGN	2.9386830709719426E-8	DOCUMENTATION	1.911521209790697E-8	TEST
// dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.9999978011925551	WITHOUT_CLASSIFICATION	1.6247763559983401E-6	IMPLEMENTATION	5.558144342218455E-7	DESIGN	9.226075255960047E-9	DEFECT	5.6258513931504375E-9	DOCUMENTATION	3.364728033734079E-9	TEST
// dirty check against the database snapshot, if possible/necessary	WITHOUT_CLASSIFICATION	0.9981580412742765	WITHOUT_CLASSIFICATION	0.0016997949612065429	IMPLEMENTATION	1.327577772524499E-4	DESIGN	8.16840202940414E-6	DEFECT	9.458721415393352E-7	TEST	2.9171309340801906E-7	DOCUMENTATION
// the Interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.9872499594272561	WITHOUT_CLASSIFICATION	0.01057486053189397	DESIGN	0.00216813323294435	IMPLEMENTATION	4.9923846311055756E-6	DEFECT	1.0559009804054028E-6	DOCUMENTATION	9.98522294033879E-7	TEST
//even process null collections	WITHOUT_CLASSIFICATION	0.999999235122515	WITHOUT_CLASSIFICATION	4.211405817295424E-7	DESIGN	1.8796348480642564E-7	IMPLEMENTATION	1.31883183177647E-7	DEFECT	2.077306466923576E-8	DOCUMENTATION	3.1171707888089094E-9	TEST
// get the id from the object	WITHOUT_CLASSIFICATION	0.9999790580386619	WITHOUT_CLASSIFICATION	2.084590750040107E-5	DESIGN	6.948358368266288E-8	DEFECT	1.343030692645536E-8	TEST	1.2215110276926077E-8	DOCUMENTATION	9.248366277493075E-10	IMPLEMENTATION
//always do an INSERT, and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.9999979060274267	WITHOUT_CLASSIFICATION	2.0097541056864254E-6	DESIGN	8.059033750202922E-8	DEFECT	2.153228557525823E-9	TEST	1.4681302507840823E-9	DOCUMENTATION	6.771553644512196E-12	IMPLEMENTATION
//what is the version on the database?	WITHOUT_CLASSIFICATION	0.934024536764809	WITHOUT_CLASSIFICATION	0.06521407882167204	DESIGN	4.4892302385597313E-4	IMPLEMENTATION	3.0981672956056656E-4	DEFECT	1.5726104825941562E-6	DOCUMENTATION	1.0720496198348068E-6	TEST
/// HHH-2378	WITHOUT_CLASSIFICATION	0.9999836204428214	WITHOUT_CLASSIFICATION	1.0913462776615836E-5	DESIGN	3.021503241134072E-6	DEFECT	1.9381248378953984E-6	IMPLEMENTATION	3.0402307598490225E-7	DOCUMENTATION	2.0244324696579E-7	TEST
//will result in a SQL UPDATE:	WITHOUT_CLASSIFICATION	0.9999862041187532	WITHOUT_CLASSIFICATION	7.168174344560933E-6	DESIGN	6.577066331817709E-6	DEFECT	3.5446847333096786E-8	DOCUMENTATION	9.889461971932432E-9	TEST	5.304261089640309E-9	IMPLEMENTATION
//else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.9998612832056428	WITHOUT_CLASSIFICATION	1.317000791353189E-4	DESIGN	6.002787595121699E-6	DOCUMENTATION	7.293114476452372E-7	DEFECT	1.487688783132411E-7	TEST	1.3584730092716966E-7	IMPLEMENTATION
// no existing row - do an insert	WITHOUT_CLASSIFICATION	0.999991683461516	WITHOUT_CLASSIFICATION	7.886823982087174E-6	DESIGN	1.6739432202437928E-7	IMPLEMENTATION	1.6363892006308138E-7	DEFECT	6.030982298229005E-8	TEST	3.837143684742767E-8	DOCUMENTATION
//refresh() does not pass an entityName	WITHOUT_CLASSIFICATION	0.9998423572212748	WITHOUT_CLASSIFICATION	1.4691730014463627E-4	DESIGN	5.124912204865411E-6	TEST	4.241589896032693E-6	DEFECT	1.1345559148506806E-6	IMPLEMENTATION	2.244205647140927E-7	DOCUMENTATION
//do not return a proxy! //(this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.9999547845998275	WITHOUT_CLASSIFICATION	4.311697280450664E-5	DESIGN	1.8072089518670435E-6	DEFECT	1.8310184555636717E-7	TEST	5.6772068022353354E-8	DOCUMENTATION	5.134450263376281E-8	IMPLEMENTATION
//return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.9992842879211906	WITHOUT_CLASSIFICATION	7.024173483978309E-4	DESIGN	1.0353015835708418E-5	DEFECT	2.315735887797693E-6	IMPLEMENTATION	3.7294525630634843E-7	DOCUMENTATION	2.530334317903678E-7	TEST
// return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.9999995856106355	WITHOUT_CLASSIFICATION	3.9702677933554466E-7	IMPLEMENTATION	1.1310265670600683E-8	DESIGN	3.1679901184196827E-9	DEFECT	1.6336083306252763E-9	TEST	1.2507210399205546E-9	DOCUMENTATION
// return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999987623983618	WITHOUT_CLASSIFICATION	1.1746272267852851E-6	DESIGN	3.2477414312576525E-8	DEFECT	2.550617606027223E-8	IMPLEMENTATION	3.8162259826808515E-9	DOCUMENTATION	1.1745950327100716E-9	TEST
// this object was already loaded	WITHOUT_CLASSIFICATION	0.9988705904035299	WITHOUT_CLASSIFICATION	0.0011069543918187344	DESIGN	1.1207460893294153E-5	IMPLEMENTATION	9.999155052632745E-6	DEFECT	7.201582504151983E-7	TEST	5.284304551329491E-7	DOCUMENTATION
// Entity was found in second-level cache...	WITHOUT_CLASSIFICATION	0.9998160915319769	WITHOUT_CLASSIFICATION	1.762577158332299E-4	DESIGN	7.42711511790546E-6	DEFECT	1.9201827052623634E-7	DOCUMENTATION	1.595583169163091E-8	IMPLEMENTATION	1.566296963855884E-8	TEST
// make it circular-reference safe	WITHOUT_CLASSIFICATION	0.9999932631109272	WITHOUT_CLASSIFICATION	4.394754388470219E-6	IMPLEMENTATION	2.2606886986802764E-6	DEFECT	3.721186616662192E-8	DOCUMENTATION	2.7002620788642733E-8	TEST	1.7231498579362245E-8	DESIGN
// intializes result by side-effect	WITHOUT_CLASSIFICATION	0.9999994934164101	WITHOUT_CLASSIFICATION	4.960515254756414E-7	DEFECT	1.0185528629170263E-8	DESIGN	1.812278795615879E-10	TEST	1.5643448846410488E-10	DOCUMENTATION	8.873270851756095E-12	IMPLEMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Pre-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999975517239001	WITHOUT_CLASSIFICATION	2.0731638519049613E-6	DEFECT	1.423563943527483E-7	IMPLEMENTATION	1.1326633188922985E-7	DESIGN	7.52337845932431E-8	DOCUMENTATION	4.425573732142832E-8	TEST
//some statistics	WITHOUT_CLASSIFICATION	0.9997320707550803	WITHOUT_CLASSIFICATION	2.4066390607187425E-4	DESIGN	1.7950763330424954E-5	IMPLEMENTATION	6.152802002992711E-6	DOCUMENTATION	2.2603875224418766E-6	DEFECT	9.013859921577992E-7	TEST
//safe from concurrent modification because of how entryList() is implemented on IdentityMap	WITHOUT_CLASSIFICATION	0.9997193454391144	WITHOUT_CLASSIFICATION	1.6434113619981621E-4	DEFECT	7.741960054237439E-5	DESIGN	3.757624739278857E-5	IMPLEMENTATION	1.2575714971577265E-6	DOCUMENTATION	6.000525340912986E-8	TEST
// Initialize dirty flags for arrays + collections with composite elements // and reset reached, doupdate, etc.	WITHOUT_CLASSIFICATION	0.9999976625283584	WITHOUT_CLASSIFICATION	2.2310576972232168E-6	IMPLEMENTATION	1.056847892136343E-7	DEFECT	4.839546459789104E-10	DESIGN	2.1121180251499568E-10	TEST	3.398866837550464E-11	DOCUMENTATION
// Among other things, updateReachables() will recursively load all // collections that are moving roles. This might cause entities to // be loaded.	WITHOUT_CLASSIFICATION	0.999040667854182	WITHOUT_CLASSIFICATION	9.082092659551625E-4	DESIGN	4.6455028740194674E-5	DEFECT	4.660937159715907E-6	IMPLEMENTATION	5.7492450038180236E-9	TEST	1.164717891026981E-9	DOCUMENTATION
// So this needs to be safe from concurrent modification problems. // It is safe because of how IdentityMap implements entrySet()	WITHOUT_CLASSIFICATION	0.8398145295149481	DESIGN	0.11053221121246076	WITHOUT_CLASSIFICATION	0.04615758958323268	DEFECT	0.0031247703039054397	IMPLEMENTATION	3.7052066431424565E-4	DOCUMENTATION	3.7872113890085754E-7	TEST
// Update the status of the object and if necessary, schedule an update	WITHOUT_CLASSIFICATION	0.9999983023035359	WITHOUT_CLASSIFICATION	1.69196405117842E-6	DESIGN	3.8229577054997745E-9	DEFECT	9.581818842284197E-10	IMPLEMENTATION	5.669663325887434E-10	DOCUMENTATION	3.8430693447365736E-10	TEST
// Schedule updates to collections:	WITHOUT_CLASSIFICATION	0.9999957023816284	WITHOUT_CLASSIFICATION	3.7101015858692858E-6	IMPLEMENTATION	3.4010707544304235E-7	DEFECT	2.2104943755529943E-7	DESIGN	1.8700428742858896E-8	TEST	7.659844055705756E-9	DOCUMENTATION
// we need to lock the collection caches before // executing entity inserts/updates in order to // account for bidi associations	WITHOUT_CLASSIFICATION	0.9999940825569859	WITHOUT_CLASSIFICATION	2.745691585565023E-6	DEFECT	1.8193068461147575E-6	DESIGN	1.255846487230329E-6	TEST	5.598979469946777E-8	DOCUMENTATION	4.060830052115045E-8	IMPLEMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Post-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999984043598225	WITHOUT_CLASSIFICATION	1.0305560425038168E-6	DEFECT	3.284957915138227E-7	IMPLEMENTATION	1.251835675661677E-7	DOCUMENTATION	7.117117814199784E-8	TEST	4.023359784626862E-8	DESIGN
//the database has changed now, so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.9999999076319525	WITHOUT_CLASSIFICATION	7.281594354924012E-8	IMPLEMENTATION	1.4708608161529094E-8	DESIGN	3.60016126037712E-9	DEFECT	9.069991180694971E-10	TEST	3.363355235984774E-10	DOCUMENTATION
//if the collection is dereferenced, remove from the session cache //iter.remove(); //does not work, since the entrySet is not backed by the set	WITHOUT_CLASSIFICATION	0.9999828342599077	WITHOUT_CLASSIFICATION	1.5071020364669198E-5	DEFECT	2.0925134447040054E-6	DESIGN	2.169423212514865E-9	TEST	3.6657593122824475E-11	DOCUMENTATION	2.0198870519308375E-13	IMPLEMENTATION
//otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9994633343777725	WITHOUT_CLASSIFICATION	5.26560756219193E-4	DESIGN	9.82750156331136E-6	IMPLEMENTATION	1.6195794889211858E-7	TEST	7.56649209661053E-8	DEFECT	3.9741575160234486E-8	DOCUMENTATION
//get a snapshot	WITHOUT_CLASSIFICATION	0.9999256588438187	WITHOUT_CLASSIFICATION	6.922185852667956E-5	DESIGN	3.4032149548637162E-6	IMPLEMENTATION	1.0751012680740091E-6	DEFECT	3.795915239921956E-7	TEST	2.6138990791426785E-7	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999848820230087	WITHOUT_CLASSIFICATION	1.5002433324088215E-5	DESIGN	6.054434707891368E-8	DEFECT	4.136523634323496E-8	DOCUMENTATION	7.073777482263627E-9	IMPLEMENTATION	6.560306389340205E-9	TEST
/* package-private */	WITHOUT_CLASSIFICATION	0.9999848820230087	WITHOUT_CLASSIFICATION	1.5002433324088215E-5	DESIGN	6.054434707891368E-8	DEFECT	4.136523634323496E-8	DOCUMENTATION	7.073777482263627E-9	IMPLEMENTATION	6.560306389340205E-9	TEST
// key is an entity involved with the operation performed by the listener; // value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.9999999301155587	WITHOUT_CLASSIFICATION	3.4670786587431945E-8	TEST	3.197886315647881E-8	DEFECT	3.1675930389046418E-9	DESIGN	6.449422563014396E-11	DOCUMENTATION	2.7043328528312095E-12	IMPLEMENTATION
// EARLY EXIT!!!	WITHOUT_CLASSIFICATION	0.9999582265579791	WITHOUT_CLASSIFICATION	1.6043438984485497E-5	IMPLEMENTATION	1.5528353314073505E-5	DEFECT	8.670224142919325E-6	DESIGN	9.256565323343351E-7	DOCUMENTATION	6.057690470210592E-7	TEST
//ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.9995222503712424	WITHOUT_CLASSIFICATION	4.7491043359469546E-4	DESIGN	2.5920363526755453E-6	DEFECT	1.448637729473911E-7	DOCUMENTATION	8.974562673028767E-8	IMPLEMENTATION	1.2549410312749004E-8	TEST
// before any callbacks, etc, so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.999999844285789	WITHOUT_CLASSIFICATION	1.3853891617774823E-7	DESIGN	1.658137926774577E-8	DEFECT	3.554858269363028E-10	DOCUMENTATION	1.3169512975653949E-10	TEST	1.0673464332648095E-10	IMPLEMENTATION
// Ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.9999999982010188	WITHOUT_CLASSIFICATION	1.2779680960432007E-9	IMPLEMENTATION	3.569660677045683E-10	DEFECT	1.3121963337730246E-10	DESIGN	1.8099874305552566E-11	DOCUMENTATION	1.4727464102364144E-11	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// cascade-delete to collections BEFORE the collection owner is deleted	WITHOUT_CLASSIFICATION	0.9999549569847144	WITHOUT_CLASSIFICATION	4.476190336294941E-5	IMPLEMENTATION	1.7159240896520626E-7	DEFECT	8.835133662399026E-8	DESIGN	1.8481761021001156E-8	TEST	2.686416204674036E-9	DOCUMENTATION
// cascade-delete to many-to-one AFTER the parent was deleted	WITHOUT_CLASSIFICATION	0.9999910423105843	WITHOUT_CLASSIFICATION	6.102050484710693E-6	DESIGN	2.5102455021154847E-6	IMPLEMENTATION	2.935046881325386E-7	DEFECT	3.971628167289034E-8	DOCUMENTATION	1.2172459118275815E-8	TEST
// if it is an initialized proxy, let cascade // handle it later on	WITHOUT_CLASSIFICATION	0.9999983339783449	WITHOUT_CLASSIFICATION	1.4500459949690187E-6	DESIGN	1.4661765239906526E-7	TEST	4.418880353399298E-8	IMPLEMENTATION	2.4073570700343133E-8	DEFECT	1.0956334413298364E-9	DOCUMENTATION
//assign the requested id to the proxy, *before* //reassociating the proxy	WITHOUT_CLASSIFICATION	0.9993750730422757	WITHOUT_CLASSIFICATION	5.666853439300184E-4	DESIGN	2.7944158317786868E-5	TEST	2.5719283421565665E-5	DEFECT	4.477056723208012E-6	DOCUMENTATION	1.011153316881914E-7	IMPLEMENTATION
// an uninitialized proxy, noop, don't even need to // return an id, since it is never a save()	WITHOUT_CLASSIFICATION	0.9999999731246642	WITHOUT_CLASSIFICATION	2.4716159783013375E-8	DESIGN	1.724735096058779E-9	DEFECT	1.867240308737601E-10	DOCUMENTATION	1.6879753817806328E-10	IMPLEMENTATION	7.891931360698478E-11	TEST
//initialize properties of the event:	WITHOUT_CLASSIFICATION	0.9999985035618568	WITHOUT_CLASSIFICATION	6.25408207080855E-7	DEFECT	4.2731389446502397E-7	DESIGN	2.890557213389952E-7	TEST	8.47767554706495E-8	IMPLEMENTATION	6.988356480766162E-8	DOCUMENTATION
//return the id in the event object	WITHOUT_CLASSIFICATION	0.9978141545362399	WITHOUT_CLASSIFICATION	0.0021598785243285906	DESIGN	2.433996902463455E-5	DEFECT	1.4920684923620116E-6	DOCUMENTATION	8.636201194363434E-8	TEST	4.85399023997887E-8	IMPLEMENTATION
//TRANSIENT or DELETED	WITHOUT_CLASSIFICATION	0.9999977577345415	WITHOUT_CLASSIFICATION	1.8295487837060226E-6	DESIGN	1.5911309933136254E-7	DEFECT	1.2863251305705036E-7	DOCUMENTATION	6.49329377816529E-8	IMPLEMENTATION	6.003812455477524E-8	TEST
// use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.9999808936562204	WITHOUT_CLASSIFICATION	1.8373518523504907E-5	DESIGN	4.2816872405667384E-7	IMPLEMENTATION	2.7200504845182754E-7	DOCUMENTATION	2.828269269375903E-8	DEFECT	4.368790798908366E-9	TEST
// assume this is a newly instantiated transient object // which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.7303843625681159	DESIGN	0.26961075741492	WITHOUT_CLASSIFICATION	4.410588275969897E-6	DEFECT	2.74379712055364E-7	TEST	1.8399519068420365E-7	DOCUMENTATION	1.1053785416195067E-8	IMPLEMENTATION
// this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.9999142646134646	WITHOUT_CLASSIFICATION	7.606196764141769E-5	DESIGN	9.291354615154813E-6	DEFECT	2.0523479433781963E-7	IMPLEMENTATION	1.6083142220275974E-7	TEST	1.5998062372288925E-8	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999998296586414	WITHOUT_CLASSIFICATION	7.583006961842623E-8	DESIGN	5.2965998756757895E-8	DEFECT	4.128238130724565E-8	IMPLEMENTATION	2.2130313472290551E-10	DOCUMENTATION	4.160580489432958E-11	TEST
//cachedState,	WITHOUT_CLASSIFICATION	0.9999152554226727	WITHOUT_CLASSIFICATION	7.567893381061973E-5	DESIGN	5.005253300151979E-6	IMPLEMENTATION	2.2593758145436377E-6	DEFECT	1.2843482006496377E-6	DOCUMENTATION	5.166662012567109E-7	TEST
//assume true, since we don't really know, and it doesn't matter	WITHOUT_CLASSIFICATION	0.9999411432427014	WITHOUT_CLASSIFICATION	5.1123206141758636E-5	DESIGN	7.2360957337923575E-6	DEFECT	3.5476841328915514E-7	DOCUMENTATION	1.3773114961956436E-7	TEST	4.955860138872428E-9	IMPLEMENTATION
//a "detached" collection!	WITHOUT_CLASSIFICATION	0.9997583804091832	WITHOUT_CLASSIFICATION	2.195917461785678E-4	DESIGN	1.7218303740835472E-5	DEFECT	4.079522905910177E-6	IMPLEMENTATION	5.385383704280757E-7	DOCUMENTATION	1.9147962107794428E-7	TEST
// if the collection belonged to a different entity, // clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.9999972831219424	WITHOUT_CLASSIFICATION	2.7139373654985825E-6	DESIGN	2.4284041877273025E-9	DEFECT	3.876118505542133E-10	TEST	1.048359572710315E-10	DOCUMENTATION	1.984015849737789E-11	IMPLEMENTATION
//log.debug( "calling onLoad()" );	WITHOUT_CLASSIFICATION	0.9999984923657443	WITHOUT_CLASSIFICATION	9.273130830703619E-7	DEFECT	3.346435381429449E-7	IMPLEMENTATION	2.1108149120620648E-7	DESIGN	2.4303719494051488E-8	DOCUMENTATION	1.0292423783775739E-8	TEST
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999375077869584	WITHOUT_CLASSIFICATION	2.2943770988154874E-5	IMPLEMENTATION	2.1917751045607904E-5	DESIGN	1.3940944412697092E-5	DEFECT	2.49564399202227E-6	DOCUMENTATION	1.1941026030317446E-6	TEST
// note: performExecutions() clears all collectionXxxxtion  // collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.9940133779998573	WITHOUT_CLASSIFICATION	0.0054423450186351086	IMPLEMENTATION	4.1598225211946654E-4	DEFECT	1.270837875696691E-4	DESIGN	1.020808509910893E-6	DOCUMENTATION	1.9013330858293192E-7	TEST
// if no array holder we found an unwrappered array (this can't occur, // because we now always call wrap() before getting to here) // return (ah==null) ? true : searchForDirtyCollections(ah, type);	WITHOUT_CLASSIFICATION	0.9998531108058807	WITHOUT_CLASSIFICATION	1.2086737616768844E-4	DESIGN	2.6001871034374928E-5	DEFECT	1.725127742350752E-8	IMPLEMENTATION	2.1734727293831626E-9	DOCUMENTATION	5.221671039440295E-10	TEST
// if not wrappered yet, its dirty (this can't occur, because // we now always call wrap() before getting to here) // return ( ! (obj instanceof PersistentCollection) ) ? //true : searchForDirtyCollections( (PersistentCollection) obj, type );	WITHOUT_CLASSIFICATION	0.9727753231262792	DESIGN	0.024375001430837855	WITHOUT_CLASSIFICATION	0.0028486848879849366	DEFECT	8.819746459694991E-7	IMPLEMENTATION	7.172785103694704E-8	DOCUMENTATION	3.685240106905336E-8	TEST
//we need to check even if it was not initialized, because of delayed adds!	WITHOUT_CLASSIFICATION	0.995325595528929	WITHOUT_CLASSIFICATION	0.004603551193555373	IMPLEMENTATION	6.029507948845005E-5	DOCUMENTATION	6.111406469400535E-6	DESIGN	2.525895387669084E-6	TEST	1.920896170167097E-6	DEFECT
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.999222036196998	WITHOUT_CLASSIFICATION	3.39642382228275E-4	IMPLEMENTATION	2.622108846620815E-4	DESIGN	1.470136580781413E-4	DEFECT	1.462615884845708E-5	TEST	1.4470719185034626E-5	DOCUMENTATION
// find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.9999196820232348	WITHOUT_CLASSIFICATION	8.014390519611412E-5	DESIGN	1.2149948906821804E-7	IMPLEMENTATION	2.3141884582540728E-8	DEFECT	1.6108701759676503E-8	TEST	1.33214937974249E-8	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999375077869584	WITHOUT_CLASSIFICATION	2.2943770988154874E-5	IMPLEMENTATION	2.1917751045607904E-5	DESIGN	1.3940944412697092E-5	DEFECT	2.49564399202227E-6	DOCUMENTATION	1.1941026030317446E-6	TEST
// Check the persistence context for an entry relating to this // entity to be merged...	WITHOUT_CLASSIFICATION	0.9998814026962813	WITHOUT_CLASSIFICATION	1.1856856310628314E-4	DESIGN	1.9382205141649052E-8	DEFECT	4.9870571957067766E-9	TEST	3.5842536459026752E-9	DOCUMENTATION	7.870964473264781E-10	IMPLEMENTATION
// we have specialized case of a detached entity from the // perspective of the merge operation.  Specifically, we // have an incoming entity instance which has a corresponding // entry in the current persistence context, but registered // under a different entity instance	WITHOUT_CLASSIFICATION	0.9910762631913342	WITHOUT_CLASSIFICATION	0.008896616411938119	DESIGN	2.699918486120882E-5	DEFECT	1.2117847870979298E-7	DOCUMENTATION	3.21467358944984E-11	TEST	1.2409353127938804E-12	IMPLEMENTATION
//DELETED	WITHOUT_CLASSIFICATION	0.9999111617118058	WITHOUT_CLASSIFICATION	7.983889995616808E-5	DESIGN	3.344550779612416E-6	DEFECT	2.2115633169896602E-6	DOCUMENTATION	1.8799881396785937E-6	TEST	1.5632860016198342E-6	IMPLEMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9999746638160015	WITHOUT_CLASSIFICATION	1.5213155230365036E-5	IMPLEMENTATION	5.381196489212382E-6	DESIGN	4.00871843780334E-6	DEFECT	6.2883596856495E-7	DOCUMENTATION	1.0427787251057378E-7	TEST
// cascade first, so that all unsaved objects get their // copy created before we actually copy //cascadeOnMerge(event, persister, entity, copyCache, Cascades.CASCADE_BEFORE_MERGE);	WITHOUT_CLASSIFICATION	0.9999999587345488	WITHOUT_CLASSIFICATION	3.610540057456873E-8	DESIGN	4.7484334495029924E-9	IMPLEMENTATION	3.0325864767414666E-10	DOCUMENTATION	8.535227327452132E-11	TEST	2.3006170027946144E-11	DEFECT
//this bit is only *really* absolutely necessary for handling //requestedId, but is also good if we merge multiple object //graphs, since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.5361110969447911	WITHOUT_CLASSIFICATION	0.46387668394954323	DESIGN	7.0041908039482275E-6	TEST	5.081932003232436E-6	IMPLEMENTATION	7.497209193192128E-8	DEFECT	5.801076648483215E-8	DOCUMENTATION
// continue...; we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.9876115158179498	WITHOUT_CLASSIFICATION	0.012287503667089025	DESIGN	5.515363120795295E-5	DEFECT	4.531142826017386E-5	IMPLEMENTATION	4.815246918678135E-7	TEST	3.393080109498724E-8	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999941847329332	WITHOUT_CLASSIFICATION	5.49312185109499E-6	DESIGN	2.9105661404449095E-7	IMPLEMENTATION	1.3260573590007275E-8	DOCUMENTATION	9.872520491660887E-9	DEFECT	7.955507364838389E-9	TEST
// check that entity id = requestedId	WITHOUT_CLASSIFICATION	0.9999275754369601	WITHOUT_CLASSIFICATION	6.660859817417631E-5	IMPLEMENTATION	4.545657218831326E-6	DESIGN	1.0003882736245823E-6	TEST	1.8445392571113817E-7	DEFECT	8.546544749244342E-8	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9999746638160015	WITHOUT_CLASSIFICATION	1.5213155230365036E-5	IMPLEMENTATION	5.381196489212382E-6	DESIGN	4.00871843780334E-6	DEFECT	6.2883596856495E-7	DOCUMENTATION	1.0427787251057378E-7	TEST
// we got here because we assumed that an instance // with an assigned id was detached, when it was // really persistent	WITHOUT_CLASSIFICATION	0.9999978487539278	WITHOUT_CLASSIFICATION	2.1383750217475867E-6	DESIGN	4.553389758742553E-9	TEST	4.518084080974814E-9	DOCUMENTATION	3.758592722321202E-9	DEFECT	4.0983753268107213E-11	IMPLEMENTATION
// cascade first, so that all unsaved objects get their  // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999909415102716	WITHOUT_CLASSIFICATION	8.022120176430138E-6	DESIGN	9.795351552055724E-7	IMPLEMENTATION	2.9817018925489534E-8	DOCUMENTATION	1.3640452947881155E-8	TEST	1.337692490952085E-8	DEFECT
//copyValues works by reflection, so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.9920130757076004	WITHOUT_CLASSIFICATION	0.0075584960350365965	DESIGN	4.265104663271897E-4	DEFECT	1.7642832903546116E-6	DOCUMENTATION	9.777043240451985E-8	TEST	5.5737313042271E-8	IMPLEMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999434770485093	WITHOUT_CLASSIFICATION	2.7538775703780966E-5	IMPLEMENTATION	2.1461796990943E-5	DESIGN	5.031590053806343E-6	DEFECT	1.6297933115762122E-6	DOCUMENTATION	8.609954306311695E-7	TEST
//source.getBatcher().executeBatch(); //found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.9999944821243897	WITHOUT_CLASSIFICATION	5.515988556636889E-6	DESIGN	7.644456579033943E-10	DEFECT	5.562835461966944E-10	DOCUMENTATION	4.193900552635756E-10	IMPLEMENTATION	1.4693458166462714E-10	TEST
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999977715870182	WITHOUT_CLASSIFICATION	2.144140927197194E-6	DESIGN	7.183478265903762E-8	DEFECT	6.752029846530874E-9	TEST	5.0905637700956025E-9	DOCUMENTATION	5.946783205755639E-10	IMPLEMENTATION
//now done in EntityIdentityInsertAction //persister.setIdentifier( entity, id, source.getEntityMode() );	WITHOUT_CLASSIFICATION	0.9999998596917731	WITHOUT_CLASSIFICATION	1.3964577255515887E-7	DESIGN	2.9937319439011776E-10	DOCUMENTATION	2.93528457074765E-10	DEFECT	5.162113052792097E-11	TEST	1.7931588005274897E-11	IMPLEMENTATION
//source.getPersistenceContext().removeNonExist( new EntityKey( id, persister, source.getEntityMode() ) );	WITHOUT_CLASSIFICATION	0.9999984466437054	WITHOUT_CLASSIFICATION	1.5420279255418243E-6	DESIGN	3.7317156571615654E-9	DEFECT	2.8107036144034418E-9	DOCUMENTATION	2.5744393879603625E-9	TEST	2.211510307217445E-9	IMPLEMENTATION
//keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.9999745295446066	WITHOUT_CLASSIFICATION	2.5228118651720637E-5	DESIGN	1.590813794454932E-7	DEFECT	5.9198839508171644E-8	DOCUMENTATION	2.0502824401496226E-8	IMPLEMENTATION	3.553698263293893E-9	TEST
// cascade-save to many-to-one BEFORE the parent is saved	WITHOUT_CLASSIFICATION	0.9988913330815633	WITHOUT_CLASSIFICATION	6.750990263349211E-4	IMPLEMENTATION	2.15217816292492E-4	DEFECT	2.1383260545473388E-4	DESIGN	3.504537809723705E-6	DOCUMENTATION	1.0129325448631018E-6	TEST
//pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.9998856455418565	WITHOUT_CLASSIFICATION	1.1416690269702065E-4	DESIGN	1.1023467599059542E-7	DOCUMENTATION	6.821736369346895E-8	TEST	8.879671057078994E-9	DEFECT	2.2373567188730383E-10	IMPLEMENTATION
// the object is persistent	WITHOUT_CLASSIFICATION	0.9999332779354184	WITHOUT_CLASSIFICATION	6.171858807464381E-5	DESIGN	3.1279266754086684E-6	IMPLEMENTATION	1.137071634963595E-6	DEFECT	5.55453300044759E-7	TEST	1.8302489646778107E-7	DOCUMENTATION
//the entity is associated with the session, so check its status	WITHOUT_CLASSIFICATION	0.999885415792344	WITHOUT_CLASSIFICATION	1.124418249773609E-4	DESIGN	1.1027924247517287E-6	IMPLEMENTATION	7.253683311936807E-7	TEST	3.084939343978074E-7	DOCUMENTATION	5.72798839601013E-9	DEFECT
// do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.9999998245784701	WITHOUT_CLASSIFICATION	1.4111553612389878E-7	DESIGN	1.3344311940554581E-8	IMPLEMENTATION	1.2192298174018097E-8	DEFECT	5.504756956280802E-9	DOCUMENTATION	3.264626463555713E-9	TEST
//ie. e.status==DELETED	WITHOUT_CLASSIFICATION	0.9999804795221218	WITHOUT_CLASSIFICATION	1.9156741791262883E-5	DESIGN	1.7006653595084077E-7	IMPLEMENTATION	7.291386483334084E-8	DEFECT	6.525283303526317E-8	DOCUMENTATION	5.5502853122530946E-8	TEST
// the object is transient or detached	WITHOUT_CLASSIFICATION	0.9999614577371074	WITHOUT_CLASSIFICATION	2.149140209174608E-5	DESIGN	1.66710198709846E-5	IMPLEMENTATION	2.1480388112882605E-7	DEFECT	1.1814247122668256E-7	DOCUMENTATION	4.6894577285819176E-8	TEST
//NOTE EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9998832506843218	WITHOUT_CLASSIFICATION	5.6963656189812824E-5	DESIGN	3.962266663638115E-5	IMPLEMENTATION	1.3151985182901887E-5	DEFECT	3.5749928215604798E-6	DOCUMENTATION	3.4360148475153907E-6	TEST
// Private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.9999990647111613	WITHOUT_CLASSIFICATION	8.333657571627518E-7	DESIGN	9.524465273475729E-8	IMPLEMENTATION	4.191873323203241E-9	TEST	1.277192588672612E-9	DOCUMENTATION	1.2093629027766986E-9	DEFECT
// First, try to find a matching constructor accepting a ViolatedConstraintNameExtracter param...	WITHOUT_CLASSIFICATION	0.9999747453267962	WITHOUT_CLASSIFICATION	2.454458183041183E-5	IMPLEMENTATION	5.587708347273605E-7	DESIGN	1.1009006797161126E-7	TEST	3.995763156622188E-8	DEFECT	1.2728390520247897E-9	DOCUMENTATION
// eat it and try next	WITHOUT_CLASSIFICATION	0.9990843261779268	WITHOUT_CLASSIFICATION	8.212492069795226E-4	DESIGN	8.650568279068087E-5	DEFECT	5.166031601075622E-6	IMPLEMENTATION	1.7788951574953946E-6	DOCUMENTATION	9.740055444556717E-7	TEST
// Otherwise, try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.9999695191387945	WITHOUT_CLASSIFICATION	2.8874095327414936E-5	IMPLEMENTATION	1.591991924917424E-6	DESIGN	1.1681870395260689E-8	DOCUMENTATION	2.6121467676330266E-9	TEST	4.799360795253343E-10	DEFECT
// oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.9999865993184207	WITHOUT_CLASSIFICATION	8.443292309658544E-6	DESIGN	4.737036659708174E-6	IMPLEMENTATION	8.212248530246895E-8	TEST	7.197778877638333E-8	DOCUMENTATION	6.625233588647129E-8	DEFECT
// CollectionPropertyMapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.9999997058402317	WITHOUT_CLASSIFICATION	1.9179694038166892E-7	DEFECT	9.137249102821078E-8	DESIGN	4.484628952176686E-9	TEST	4.28458489566885E-9	IMPLEMENTATION	2.221123069719086E-9	DOCUMENTATION
// remove initial ", "	WITHOUT_CLASSIFICATION	0.9999985403819324	WITHOUT_CLASSIFICATION	1.376788671044781E-6	DESIGN	6.329364843611159E-8	DEFECT	8.612559480449175E-9	TEST	7.911954309763676E-9	IMPLEMENTATION	3.0112343878769724E-9	DOCUMENTATION
// remove initial " and "	WITHOUT_CLASSIFICATION	0.9999986349818464	WITHOUT_CLASSIFICATION	1.315660685805312E-6	DESIGN	3.175902704453762E-8	DEFECT	1.2673967130753251E-8	IMPLEMENTATION	2.6141247882474372E-9	DOCUMENTATION	2.3103487957963744E-9	TEST
//beforeClassTokens.add("new"); DEFINITELY DON'T HAVE THIS!!	WITHOUT_CLASSIFICATION	0.9993189077690384	WITHOUT_CLASSIFICATION	6.13801097550673E-4	DESIGN	3.6211658381349055E-5	DEFECT	1.9312211086073938E-5	IMPLEMENTATION	8.092332409234486E-6	DOCUMENTATION	3.674931534208123E-6	TEST
//notAfterClassTokens.add(",");	WITHOUT_CLASSIFICATION	0.9999683564448902	WITHOUT_CLASSIFICATION	1.4846873625960422E-5	DESIGN	1.0828357640329188E-5	IMPLEMENTATION	3.9563684868257396E-6	DEFECT	1.1123158545777009E-6	TEST	8.996395020905186E-7	DOCUMENTATION
// just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.9999990983250038	WITHOUT_CLASSIFICATION	5.520619689305503E-7	IMPLEMENTATION	3.433924231783106E-7	DESIGN	2.47048428053565E-9	TEST	2.3540746904547143E-9	DOCUMENTATION	1.3960450538883242E-9	DEFECT
//update last non-whitespace token, if necessary	WITHOUT_CLASSIFICATION	0.9999930177798733	WITHOUT_CLASSIFICATION	4.545087261560475E-6	DESIGN	2.2235209972920474E-6	DEFECT	1.4029672597869695E-7	TEST	4.970124356729182E-8	IMPLEMENTATION	2.3613898343785973E-8	DOCUMENTATION
// select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.9999979567091885	WITHOUT_CLASSIFICATION	2.0109391881921625E-6	DESIGN	2.778870686866206E-8	DEFECT	4.4266851834286824E-9	TEST	1.1859370650308192E-10	DOCUMENTATION	1.7637689699907676E-11	IMPLEMENTATION
//scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.9999925813848018	WITHOUT_CLASSIFICATION	4.332059550168333E-6	DEFECT	1.6088727775262688E-6	IMPLEMENTATION	9.234024836537379E-7	DESIGN	3.2229322525096385E-7	TEST	2.3198716162887876E-7	DOCUMENTATION
// Note this!!	WITHOUT_CLASSIFICATION	0.9978923047591473	WITHOUT_CLASSIFICATION	0.0018749005570506334	DESIGN	1.7498871762095837E-4	IMPLEMENTATION	2.7174903455885507E-5	TEST	1.8529774124108893E-5	DOCUMENTATION	1.2101288601107708E-5	DEFECT
// Error message constants.	WITHOUT_CLASSIFICATION	0.9999925973474606	WITHOUT_CLASSIFICATION	6.620790019076676E-6	DEFECT	3.9419190892803005E-7	IMPLEMENTATION	2.7351350875545157E-7	DESIGN	7.231828392144644E-8	DOCUMENTATION	4.1838818822871984E-8	TEST
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999872426592025	WITHOUT_CLASSIFICATION	1.230864325828528E-4	IMPLEMENTATION	3.1898293299981503E-6	DESIGN	1.0358915857344148E-6	DEFECT	1.867912378705204E-7	TEST	7.446323843896606E-8	DOCUMENTATION
// semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.996560988279158	WITHOUT_CLASSIFICATION	0.0032934965400337572	DESIGN	1.0257331700395664E-4	IMPLEMENTATION	2.9477847304554734E-5	DEFECT	1.2389410782835888E-5	DOCUMENTATION	1.0746057170288876E-6	TEST
// Handle collection-fiter compilation. // IMPORTANT NOTE: This is modifying the INPUT (HQL) tree, not the output tree!	WITHOUT_CLASSIFICATION	0.9463490346627168	WITHOUT_CLASSIFICATION	0.028811226018509037	DEFECT	0.024229770704842064	DESIGN	6.037813837868243E-4	IMPLEMENTATION	6.152166645239849E-6	TEST	3.5063499883896686E-8	DOCUMENTATION
// Show the modified AST.	WITHOUT_CLASSIFICATION	0.9995165567649772	WITHOUT_CLASSIFICATION	4.31687711652371E-4	IMPLEMENTATION	4.618275319572712E-5	DESIGN	3.830176270737711E-6	DEFECT	9.870208337142556E-7	DOCUMENTATION	7.555730701320852E-7	TEST
// Create a parameter specification for the collection filter...	WITHOUT_CLASSIFICATION	0.9999605387343584	WITHOUT_CLASSIFICATION	3.887235592127341E-5	DESIGN	2.8088856075191897E-7	IMPLEMENTATION	1.8582847286624853E-7	DEFECT	9.876490208803129E-8	DOCUMENTATION	2.3427784566176516E-8	TEST
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999994174470984	WITHOUT_CLASSIFICATION	4.0945953881958064E-7	DESIGN	1.6313934190326933E-7	IMPLEMENTATION	5.336345976011974E-9	TEST	3.6252259054884896E-9	DOCUMENTATION	9.924489398828107E-10	DEFECT
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999994174470984	WITHOUT_CLASSIFICATION	4.0945953881958064E-7	DESIGN	1.6313934190326933E-7	IMPLEMENTATION	5.336345976011974E-9	TEST	3.6252259054884896E-9	DOCUMENTATION	9.924489398828107E-10	DEFECT
// Get the names of the columns used to link between the collection // owner and the collection elements.	WITHOUT_CLASSIFICATION	0.9999674417796023	WITHOUT_CLASSIFICATION	3.254859203522823E-5	DESIGN	5.652218598261631E-9	DOCUMENTATION	2.2608124561427546E-9	IMPLEMENTATION	1.5328688566760533E-9	DEFECT	1.824626750118109E-10	TEST
// The path AST should be a DotNode, and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.9999288763197647	WITHOUT_CLASSIFICATION	5.0505631470239907E-5	DESIGN	1.1848439862611123E-5	DEFECT	8.416296547400404E-6	IMPLEMENTATION	2.030841959932282E-7	DOCUMENTATION	1.5022815908910922E-7	TEST
// Tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9999983723973829	WITHOUT_CLASSIFICATION	1.2719636897111798E-6	DESIGN	2.430562611460298E-7	IMPLEMENTATION	8.953726511466114E-8	DEFECT	1.4005948570675602E-8	DOCUMENTATION	9.03945273367663E-9	TEST
// Re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.9999943215572912	WITHOUT_CLASSIFICATION	4.894329135242655E-6	IMPLEMENTATION	5.708073488107278E-7	DESIGN	2.113261355102951E-7	DEFECT	1.3037794169649595E-9	DOCUMENTATION	6.763099145575397E-10	TEST
// Don't forget to resolve the argument! // Resolve the collection function now.	WITHOUT_CLASSIFICATION	0.9999601592588784	WITHOUT_CLASSIFICATION	2.23502581888409E-5	IMPLEMENTATION	1.4765118372316875E-5	DESIGN	1.8436753688194938E-6	DOCUMENTATION	8.083099001860536E-7	DEFECT	7.337929128226389E-8	TEST
// Resolve everything up to this dot, but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.9584445329329198	WITHOUT_CLASSIFICATION	0.04006645049875016	DESIGN	0.001484142524472047	DEFECT	3.5095075442140222E-6	IMPLEMENTATION	8.195957661565439E-7	TEST	5.449405478145056E-7	DOCUMENTATION
// Should mean that no such property was found	WITHOUT_CLASSIFICATION	0.9986399380550762	WITHOUT_CLASSIFICATION	0.001341583694208329	DESIGN	1.796083953606936E-5	DEFECT	3.0929489016340763E-7	DOCUMENTATION	1.1664178537645534E-7	IMPLEMENTATION	9.147450375797066E-8	TEST
// Was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.9999845784351293	WITHOUT_CLASSIFICATION	1.0799799852580564E-5	DESIGN	4.498978693737344E-6	DEFECT	6.805152056141788E-8	TEST	3.133943196228809E-8	DOCUMENTATION	2.339537188271145E-8	IMPLEMENTATION
// Attach any mapping-defined "ORDER BY" fragments	WITHOUT_CLASSIFICATION	0.9999998251004097	WITHOUT_CLASSIFICATION	8.914004991455059E-8	IMPLEMENTATION	4.5783358413064784E-8	DEFECT	2.60515615558346E-8	DESIGN	7.95365960979585E-9	DOCUMENTATION	5.970960791505185E-9	TEST
// Use the explicitly declared select expression; determine the // return types indicated by each select token	WITHOUT_CLASSIFICATION	0.99999967490853	WITHOUT_CLASSIFICATION	3.1937876919153276E-7	DESIGN	5.706491595230695E-9	DEFECT	4.744350191626786E-12	DOCUMENTATION	1.4315025593868417E-12	TEST	3.321305107988053E-14	IMPLEMENTATION
// After that, process the JOINs. // Invoke a delegate to do the work, as this is farily complex.	WITHOUT_CLASSIFICATION	0.9999987268203246	WITHOUT_CLASSIFICATION	1.269968146953007E-6	DEFECT	1.6123048022626889E-9	DESIGN	8.68766392798617E-10	TEST	4.912221888427438E-10	IMPLEMENTATION	2.3923536264804156E-10	DOCUMENTATION
// Make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.9999718112349109	WITHOUT_CLASSIFICATION	2.6812069279934508E-5	IMPLEMENTATION	1.3352028369052951E-6	DESIGN	3.5544826728128734E-8	TEST	3.499508222193588E-9	DOCUMENTATION	2.4486373095194876E-9	DEFECT
// We need to generate ids as part of this bulk insert. // // Note that this is only supported for sequence-style generators and // post-insert-style generators; basically, only in-db generators	WITHOUT_CLASSIFICATION	0.9999992021842604	WITHOUT_CLASSIFICATION	4.048654030431096E-7	DEFECT	2.9763705940859497E-7	IMPLEMENTATION	4.786188646434085E-8	DESIGN	4.6471836150936574E-8	TEST	9.795546304087717E-10	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999994174470984	WITHOUT_CLASSIFICATION	4.0945953881958064E-7	DESIGN	1.6313934190326933E-7	IMPLEMENTATION	5.336345976011974E-9	TEST	3.6252259054884896E-9	DOCUMENTATION	9.924489398828107E-10	DEFECT
// We need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.9999354804656242	WITHOUT_CLASSIFICATION	4.551392014900317E-5	DEFECT	1.470362255738946E-5	DESIGN	3.572275830688279E-6	IMPLEMENTATION	5.764152348010198E-7	DOCUMENTATION	1.5330060386757452E-7	TEST
// we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.9995715757900332	WITHOUT_CLASSIFICATION	3.7003187218051867E-4	DESIGN	3.18501920901427E-5	IMPLEMENTATION	1.9001127856670695E-5	DEFECT	6.3329212818847145E-6	DOCUMENTATION	1.2080965575917408E-6	TEST
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9950849008728309	WITHOUT_CLASSIFICATION	0.0034789577653445217	DEFECT	7.52130177600396E-4	IMPLEMENTATION	6.838468270305302E-4	DESIGN	1.1915569184603313E-7	DOCUMENTATION	4.5201501906226475E-8	TEST
// Generate implicit joins, only if necessary.	WITHOUT_CLASSIFICATION	0.9999991828843554	WITHOUT_CLASSIFICATION	7.50941151699797E-7	DESIGN	5.2046521081525875E-8	TEST	8.137880024425121E-9	DEFECT	3.465498640663692E-9	DOCUMENTATION	2.5245932175015933E-9	IMPLEMENTATION
// Notify the FROM element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.9999915306852885	WITHOUT_CLASSIFICATION	6.797135234642258E-6	DESIGN	1.0141650901608231E-6	IMPLEMENTATION	4.310044469990766E-7	DEFECT	2.2220015250148605E-7	TEST	4.809787254746376E-9	DOCUMENTATION
// Turn off includeSubclasses on all FromElements.	WITHOUT_CLASSIFICATION	0.9999664460120151	WITHOUT_CLASSIFICATION	3.3081559048631183E-5	DESIGN	4.014705668666533E-7	DEFECT	3.925080932870065E-8	IMPLEMENTATION	2.7812784644560322E-8	DOCUMENTATION	3.8947754733880776E-9	TEST
// create the node initially with the param name so that it shows // appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.9998344105467147	WITHOUT_CLASSIFICATION	8.683893727567627E-5	IMPLEMENTATION	7.71654312553E-5	DESIGN	1.1922754449269137E-6	DEFECT	3.6805246483501324E-7	TEST	2.4756844504781034E-8	DOCUMENTATION
// Use the delegate, resolve identifiers as FROM element aliases.	WITHOUT_CLASSIFICATION	0.9999970236509964	WITHOUT_CLASSIFICATION	2.6423753739383594E-6	DESIGN	3.3174733291541836E-7	IMPLEMENTATION	1.5638005985317214E-9	TEST	4.733031865484056E-10	DOCUMENTATION	1.891929637570609E-10	DEFECT
// select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.9999540077645781	WITHOUT_CLASSIFICATION	3.502164087830422E-5	DESIGN	9.989446696192587E-6	DEFECT	6.674308755933289E-7	IMPLEMENTATION	3.0822889573569795E-7	TEST	5.488076059380749E-9	DOCUMENTATION
// no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.999893125059434	WITHOUT_CLASSIFICATION	7.495707124717286E-5	IMPLEMENTATION	3.119279594541176E-5	DESIGN	6.156673436252522E-7	TEST	9.724805883562104E-8	DOCUMENTATION	1.2157970987401645E-8	DEFECT
// Make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.9996130408985525	WITHOUT_CLASSIFICATION	3.467292084266516E-4	DESIGN	3.8472147246814175E-5	IMPLEMENTATION	1.4951755201647227E-6	TEST	2.2573248897155827E-7	DEFECT	3.683776499665181E-8	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999872426592025	WITHOUT_CLASSIFICATION	1.230864325828528E-4	IMPLEMENTATION	3.1898293299981503E-6	DESIGN	1.0358915857344148E-6	DEFECT	1.867912378705204E-7	TEST	7.446323843896606E-8	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999994174470984	WITHOUT_CLASSIFICATION	4.0945953881958064E-7	DESIGN	1.6313934190326933E-7	IMPLEMENTATION	5.336345976011974E-9	TEST	3.6252259054884896E-9	DOCUMENTATION	9.924489398828107E-10	DEFECT
// --Commented out by Inspection (12/11/04 10:56 AM): int getWarningCount();	WITHOUT_CLASSIFICATION	0.9999995249872163	WITHOUT_CLASSIFICATION	4.6696346357058554E-7	DEFECT	2.8959042852814625E-9	DOCUMENTATION	2.6425199318492284E-9	IMPLEMENTATION	2.3447563626257376E-9	DESIGN	1.6613955032583088E-10	TEST
// Alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.9999993498993234	WITHOUT_CLASSIFICATION	5.129459239718268E-7	DESIGN	1.0035734583892706E-7	IMPLEMENTATION	2.8716917265015905E-8	DEFECT	8.029227012481335E-9	DOCUMENTATION	5.126263673690368E-11	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999868379874433	WITHOUT_CLASSIFICATION	1.259483342676792E-5	DESIGN	2.978463043570313E-7	DEFECT	1.332708140593997E-7	IMPLEMENTATION	7.462754199136787E-8	DOCUMENTATION	6.143446956531937E-8	TEST
// make a new one	WITHOUT_CLASSIFICATION	0.9999856958668146	WITHOUT_CLASSIFICATION	7.1427583894639455E-6	DESIGN	4.3711607788729085E-6	DEFECT	2.3998756711565334E-6	IMPLEMENTATION	2.7261640483126235E-7	TEST	1.17721941089933E-7	DOCUMENTATION
// just do the regular thing if you can't find the ctor // Your AST must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.7902393705788283	WITHOUT_CLASSIFICATION	0.19932702235874167	DESIGN	0.010428283055260033	IMPLEMENTATION	4.177657736455453E-6	DOCUMENTATION	1.1092047541376606E-6	TEST	3.7144679444443197E-8	DEFECT
// Initialize SQL nodes here.	WITHOUT_CLASSIFICATION	0.9999941044369827	WITHOUT_CLASSIFICATION	3.894862748634029E-6	DESIGN	1.60571883337022E-6	DEFECT	1.9394301778658363E-7	IMPLEMENTATION	1.5236448030971322E-7	TEST	4.8673937301925946E-8	DOCUMENTATION
// semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999766358519135	WITHOUT_CLASSIFICATION	2.1642690804908398E-5	DESIGN	1.1132500690410392E-6	DEFECT	4.408299101162662E-7	DOCUMENTATION	1.3156388318443994E-7	IMPLEMENTATION	3.581341898942953E-8	TEST
// if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999978971290577	WITHOUT_CLASSIFICATION	1.9455402169770957E-6	IMPLEMENTATION	9.594848531382596E-8	DEFECT	5.126694727422748E-8	DESIGN	7.750781384703673E-9	TEST	2.3645111870403877E-9	DOCUMENTATION
// this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.9999996711506692	WITHOUT_CLASSIFICATION	3.1760824130567875E-7	DESIGN	5.620944124514689E-9	IMPLEMENTATION	3.7246766239291516E-9	DEFECT	1.6621617963904722E-9	DOCUMENTATION	2.333069940049508E-10	TEST
// --- Inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.9999997203279136	WITHOUT_CLASSIFICATION	2.0124653870566317E-7	DESIGN	4.927384114338099E-8	DEFECT	1.6090301386454597E-8	IMPLEMENTATION	1.148184397671126E-8	TEST	1.5795611422653586E-9	DOCUMENTATION
// check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.99998737757291	WITHOUT_CLASSIFICATION	1.2150886688313199E-5	IMPLEMENTATION	4.2167935780282645E-7	DEFECT	3.164902208754527E-8	DESIGN	1.618185328470364E-8	DOCUMENTATION	2.030168597240987E-9	TEST
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998210722037159	WITHOUT_CLASSIFICATION	1.4179224779189498E-4	DESIGN	1.7719301788286053E-5	IMPLEMENTATION	7.987439563016846E-6	DEFECT	5.858155530719817E-6	TEST	5.570651610169139E-6	DOCUMENTATION
// these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.999982779734723	WITHOUT_CLASSIFICATION	1.5814624729811768E-5	IMPLEMENTATION	1.3336821230276057E-6	DESIGN	5.038975803556009E-8	TEST	2.122368772223188E-8	DOCUMENTATION	3.449782464518839E-10	DEFECT
// again, both should be FromElements	WITHOUT_CLASSIFICATION	0.9999921100087799	WITHOUT_CLASSIFICATION	6.814810846075759E-6	DESIGN	9.228226379801715E-7	IMPLEMENTATION	1.3017352086235868E-7	TEST	1.3364772107831218E-8	DEFECT	8.819443108680404E-9	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9992679117898019	WITHOUT_CLASSIFICATION	5.830723930101622E-4	DESIGN	8.699271638564091E-5	IMPLEMENTATION	3.663930340033959E-5	DEFECT	2.5215544744773864E-5	TEST	1.6825265715861424E-7	DOCUMENTATION
// right represents a joins originating from left; or // both right and left reprersent joins originating from the same FromElement	WITHOUT_CLASSIFICATION	0.9999999541968414	WITHOUT_CLASSIFICATION	3.952582476862121E-8	DEFECT	5.861737040760289E-9	DESIGN	3.803727750414182E-10	IMPLEMENTATION	2.173291051145615E-11	TEST	1.3491012189437755E-11	DOCUMENTATION
// check a set of parent/child nodes in the from-clause tree // to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.9999999299890642	WITHOUT_CLASSIFICATION	6.091191190291701E-8	DESIGN	9.085265446283768E-9	DEFECT	6.872672405708146E-12	IMPLEMENTATION	3.7260449677117045E-12	DOCUMENTATION	3.159858878063698E-12	TEST
// right represents a joins originating from left...	WITHOUT_CLASSIFICATION	0.99999158902304	WITHOUT_CLASSIFICATION	8.358523075756407E-6	DEFECT	4.244919450217453E-8	DESIGN	8.573162408674723E-9	IMPLEMENTATION	9.960482240956802E-10	TEST	4.3547923131389085E-10	DOCUMENTATION
// all clear	WITHOUT_CLASSIFICATION	0.9999988571275673	WITHOUT_CLASSIFICATION	7.17482866985025E-7	DESIGN	3.9717020748438766E-7	IMPLEMENTATION	1.8732298120707877E-8	DEFECT	6.2404874640577904E-9	DOCUMENTATION	3.2465726758903544E-9	TEST
// Ignore the token class name parameter, and use a specific token class.	WITHOUT_CLASSIFICATION	0.999999557092615	WITHOUT_CLASSIFICATION	4.3653011383430135E-7	DESIGN	4.944577286702805E-9	DEFECT	1.1066214630770146E-9	DOCUMENTATION	2.9860395357065995E-10	IMPLEMENTATION	2.7468511421508757E-11	TEST
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9984334636826697	WITHOUT_CLASSIFICATION	0.001552698366170637	DESIGN	6.307785729093836E-6	IMPLEMENTATION	3.0868905916837486E-6	DEFECT	2.39045475303445E-6	DOCUMENTATION	2.0528200858916216E-6	TEST
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9984334636826697	WITHOUT_CLASSIFICATION	0.001552698366170637	DESIGN	6.307785729093836E-6	IMPLEMENTATION	3.0868905916837486E-6	DEFECT	2.39045475303445E-6	DOCUMENTATION	2.0528200858916216E-6	TEST
// remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.9940235935809713	WITHOUT_CLASSIFICATION	0.005969247423536329	DESIGN	6.143764641163485E-6	DEFECT	8.354333908848684E-7	IMPLEMENTATION	1.4214206523030977E-7	TEST	3.7655395259191624E-8	DOCUMENTATION
// don't care about other param types here, just those explicitly user-defined...	WITHOUT_CLASSIFICATION	0.9997928770346154	WITHOUT_CLASSIFICATION	2.0711891568094655E-4	DESIGN	2.4003776364086264E-9	DEFECT	1.5715092428107992E-9	TEST	6.698299653735451E-11	DOCUMENTATION	1.0833616421904316E-11	IMPLEMENTATION
// If the query is already compiled, skip the compilation.	WITHOUT_CLASSIFICATION	0.9974846670464333	WITHOUT_CLASSIFICATION	0.002510049735859327	IMPLEMENTATION	5.155318756667802E-6	DEFECT	8.764531897713572E-8	DESIGN	2.2217686998720613E-8	TEST	1.803594474738352E-8	DOCUMENTATION
// Remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.999313457538383	WITHOUT_CLASSIFICATION	5.69493012553752E-4	DESIGN	9.34258961817763E-5	IMPLEMENTATION	2.2290323049074597E-5	DEFECT	1.252239760594976E-6	TEST	8.099007179339115E-8	DOCUMENTATION
// PHASE 1 : Parse the HQL into an AST.	WITHOUT_CLASSIFICATION	0.9999881328460372	WITHOUT_CLASSIFICATION	1.0697095298846479E-5	DESIGN	5.6904482504785E-7	IMPLEMENTATION	4.3367570640101297E-7	DEFECT	1.2942781224076797E-7	DOCUMENTATION	3.791032029277393E-8	TEST
// PHASE 2 : Analyze the HQL AST, and produce an SQL AST.	WITHOUT_CLASSIFICATION	0.9999442872210371	WITHOUT_CLASSIFICATION	5.2365890740231565E-5	DESIGN	2.9914637915585887E-6	DEFECT	3.228279832408574E-7	DOCUMENTATION	2.6248841309254917E-8	IMPLEMENTATION	6.347606334679225E-9	TEST
// PHASE 3 : Generate the SQL.	WITHOUT_CLASSIFICATION	0.9996315767221202	WITHOUT_CLASSIFICATION	3.578965705106437E-4	DESIGN	6.707495257909716E-6	IMPLEMENTATION	1.6825953430628318E-6	TEST	1.1344285616578715E-6	DOCUMENTATION	1.0021882065949548E-6	DEFECT
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999999930360415	WITHOUT_CLASSIFICATION	5.612617614220246E-9	DEFECT	1.008291664439314E-9	DESIGN	2.0370924566493538E-10	TEST	1.193184873705171E-10	IMPLEMENTATION	2.002154167302937E-11	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999999930360415	WITHOUT_CLASSIFICATION	5.612617614220246E-9	DEFECT	1.008291664439314E-9	DESIGN	2.0370924566493538E-10	TEST	1.193184873705171E-10	IMPLEMENTATION	2.002154167302937E-11	DOCUMENTATION
//only needed during compilation phase...	WITHOUT_CLASSIFICATION	0.9999959773275802	WITHOUT_CLASSIFICATION	2.9050931860284328E-6	DEFECT	5.523951667832428E-7	DESIGN	4.0732943224225035E-7	IMPLEMENTATION	1.3107013099626532E-7	DOCUMENTATION	2.6784503856693724E-8	TEST
// Transform the tree.	WITHOUT_CLASSIFICATION	0.999995677463888	WITHOUT_CLASSIFICATION	3.4779087610343536E-6	DESIGN	6.55559704184333E-7	IMPLEMENTATION	1.0428475642192851E-7	DOCUMENTATION	4.4737384952724165E-8	TEST	4.004550549207718E-8	DEFECT
// Parse the query string into an HQL AST.	WITHOUT_CLASSIFICATION	0.9999782090285821	WITHOUT_CLASSIFICATION	1.979656959778013E-5	DESIGN	1.4295287076070904E-6	DEFECT	3.2548976919014063E-7	IMPLEMENTATION	1.8717307677451188E-7	DOCUMENTATION	5.221026653751314E-8	TEST
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.999959814760149	WITHOUT_CLASSIFICATION	3.9777020037248135E-5	DESIGN	2.0405183339133407E-7	DEFECT	9.050674076678304E-8	DOCUMENTATION	5.737116851497848E-8	TEST	5.629007099040649E-8	IMPLEMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.999959814760149	WITHOUT_CLASSIFICATION	3.9777020037248135E-5	DESIGN	2.0405183339133407E-7	DEFECT	9.050674076678304E-8	DOCUMENTATION	5.737116851497848E-8	TEST	5.629007099040649E-8	IMPLEMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.999959814760149	WITHOUT_CLASSIFICATION	3.9777020037248135E-5	DESIGN	2.0405183339133407E-7	DEFECT	9.050674076678304E-8	DOCUMENTATION	5.737116851497848E-8	TEST	5.629007099040649E-8	IMPLEMENTATION
// NOTE : ( max - 1 ) because first is zero-based while max is not...	WITHOUT_CLASSIFICATION	0.9974572795360837	WITHOUT_CLASSIFICATION	0.0015730112686127733	DEFECT	7.957918810283999E-4	IMPLEMENTATION	1.4948831093072876E-4	DESIGN	2.3528499963318256E-5	TEST	9.005033812411016E-7	DOCUMENTATION
// -- Package local methods for the QueryLoader delegate --	WITHOUT_CLASSIFICATION	0.9999326030202237	WITHOUT_CLASSIFICATION	6.736147935062421E-5	DESIGN	1.0126932447837461E-8	TEST	9.637135789776803E-9	DEFECT	8.016080566610841E-9	IMPLEMENTATION	7.720276723386396E-9	DOCUMENTATION
// If there are no collection fetches, then no further checks are needed	WITHOUT_CLASSIFICATION	0.9608822540096206	WITHOUT_CLASSIFICATION	0.0391028398958332	IMPLEMENTATION	8.6573967154627E-6	TEST	3.053132930968857E-6	DESIGN	2.1869869728870368E-6	DOCUMENTATION	1.008577926826409E-6	DEFECT
// A shallow query is ok (although technically there should be no fetching here...)	WITHOUT_CLASSIFICATION	0.6316408769706708	DEFECT	0.23679058382579113	WITHOUT_CLASSIFICATION	0.08446120391373098	IMPLEMENTATION	0.04671418966892465	DESIGN	3.83113550090643E-4	TEST	1.0032070791720672E-5	DOCUMENTATION
// should be the first, but just to be safe...	WITHOUT_CLASSIFICATION	0.9999467493771225	WITHOUT_CLASSIFICATION	4.408436793042395E-5	DESIGN	5.52130504000287E-6	IMPLEMENTATION	3.5164993231932433E-6	DEFECT	1.0456722296020028E-7	TEST	2.388336106714523E-8	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999994174470984	WITHOUT_CLASSIFICATION	4.0945953881958064E-7	DESIGN	1.6313934190326933E-7	IMPLEMENTATION	5.336345976011974E-9	TEST	3.6252259054884896E-9	DOCUMENTATION	9.924489398828107E-10	DEFECT
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999994174470984	WITHOUT_CLASSIFICATION	4.0945953881958064E-7	DESIGN	1.6313934190326933E-7	IMPLEMENTATION	5.336345976011974E-9	TEST	3.6252259054884896E-9	DOCUMENTATION	9.924489398828107E-10	DEFECT
// Impl Note: allows multiple collection fetches as long as the // entire fecthed graph still "points back" to a single // root entity for return	WITHOUT_CLASSIFICATION	0.9999987771397738	WITHOUT_CLASSIFICATION	8.511625358421674E-7	DEFECT	2.8067976945401517E-7	DESIGN	9.055344882720466E-8	IMPLEMENTATION	4.5567416931723536E-10	TEST	8.798071744727082E-12	DOCUMENTATION
// Otherwise, we have a non-scalar select with defined collection fetch(es). // Make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.9992681638067517	WITHOUT_CLASSIFICATION	7.305157112426484E-4	DESIGN	1.2789035122305801E-6	IMPLEMENTATION	3.401892373304583E-8	DEFECT	7.367735086128668E-9	TEST	1.9183458990098307E-10	DOCUMENTATION
// This is not strictly true.  We actually just need to make sure that // it is ordered by root-entity PK and that that order-by comes before // any non-root-entity ordering...	WITHOUT_CLASSIFICATION	0.9999816254075012	WITHOUT_CLASSIFICATION	1.734585073582288E-5	DESIGN	7.531114476628598E-7	IMPLEMENTATION	2.6617043154396396E-7	DEFECT	8.601420286430045E-9	TEST	8.584634108984845E-10	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.9999992858704939	WITHOUT_CLASSIFICATION	7.02327671094701E-7	DESIGN	5.109859496727789E-9	DOCUMENTATION	3.0918398810842727E-9	DEFECT	2.8439116530711823E-9	IMPLEMENTATION	7.562239198031633E-10	TEST
// igndore it...	WITHOUT_CLASSIFICATION	0.9991148655708618	WITHOUT_CLASSIFICATION	7.371819669720226E-4	DEFECT	1.3198405392656488E-4	DESIGN	1.32387499250292E-5	IMPLEMENTATION	1.7737046613351395E-6	DOCUMENTATION	9.55953653294846E-7	TEST
// we are now at a new tree level	WITHOUT_CLASSIFICATION	0.9999991717929224	WITHOUT_CLASSIFICATION	7.061855579808658E-7	DESIGN	1.0212026716164267E-7	DEFECT	7.84448519717994E-9	TEST	6.58209980304225E-9	DOCUMENTATION	5.474667413874895E-9	IMPLEMENTATION
// [jsd] The fix for HHH-558...	WITHOUT_CLASSIFICATION	0.9993380621972563	WITHOUT_CLASSIFICATION	3.9818703092265256E-4	DESIGN	2.564321918189856E-4	DEFECT	4.239766730898486E-6	IMPLEMENTATION	1.5794574704226732E-6	TEST	1.4993558007921255E-6	DOCUMENTATION
// If the token can tell us if it could be an identifier...	WITHOUT_CLASSIFICATION	0.9981777397614443	WITHOUT_CLASSIFICATION	0.001790734323036192	DESIGN	2.706351506793693E-5	DEFECT	3.7930488277334866E-6	IMPLEMENTATION	6.162281943596943E-7	TEST	5.312342936564967E-8	DOCUMENTATION
// ... and the expected token type was an identifier, then:	WITHOUT_CLASSIFICATION	0.999996504177354	WITHOUT_CLASSIFICATION	2.2424790342000883E-6	DEFECT	1.2132297912625013E-6	DESIGN	1.8510054246317736E-8	DOCUMENTATION	1.4543654856982845E-8	IMPLEMENTATION	7.060111522692311E-9	TEST
// Use the token as an identifier.	WITHOUT_CLASSIFICATION	0.999999971153027	WITHOUT_CLASSIFICATION	1.975931966315027E-8	DESIGN	4.034182883128875E-9	IMPLEMENTATION	3.66036657719502E-9	DEFECT	8.374471066830205E-10	DOCUMENTATION	5.556569614604166E-10	TEST
// Add the token to the AST.	WITHOUT_CLASSIFICATION	0.9999652734278296	WITHOUT_CLASSIFICATION	1.6779516981523654E-5	DESIGN	1.1973278807069519E-5	DOCUMENTATION	3.581140570689931E-6	DEFECT	2.068482915584858E-6	IMPLEMENTATION	3.2415289553994445E-7	TEST
// (NOT (EQ a b) ) => (NE a b)	WITHOUT_CLASSIFICATION	0.999966370606941	WITHOUT_CLASSIFICATION	3.1471336757643856E-5	DESIGN	1.425282995448186E-6	IMPLEMENTATION	2.930106892119128E-7	DEFECT	2.7804089459386373E-7	TEST	1.6172172199365257E-7	DOCUMENTATION
// (NOT (NE a b) ) => (EQ a b)	WITHOUT_CLASSIFICATION	0.999966370606941	WITHOUT_CLASSIFICATION	3.1471336757643856E-5	DESIGN	1.425282995448186E-6	IMPLEMENTATION	2.930106892119128E-7	DEFECT	2.7804089459386373E-7	TEST	1.6172172199365257E-7	DOCUMENTATION
// (NOT (LT a b) ) => (GE a b)	WITHOUT_CLASSIFICATION	0.9999716023972904	WITHOUT_CLASSIFICATION	2.7181702610024577E-5	DESIGN	6.646786697679339E-7	IMPLEMENTATION	2.615790299767246E-7	DEFECT	1.8103340593043175E-7	TEST	1.0860899388667845E-7	DOCUMENTATION
// (NOT (GE a b) ) => (LT a b)	WITHOUT_CLASSIFICATION	0.9999716023972904	WITHOUT_CLASSIFICATION	2.7181702610024577E-5	DESIGN	6.646786697679339E-7	IMPLEMENTATION	2.615790299767246E-7	DEFECT	1.8103340593043175E-7	TEST	1.0860899388667845E-7	DOCUMENTATION
// (NOT (LE a b) ) => (GT a b)	WITHOUT_CLASSIFICATION	0.9999788451274717	WITHOUT_CLASSIFICATION	1.992113503424923E-5	DESIGN	7.52097635593273E-7	IMPLEMENTATION	2.1793448321642041E-7	DEFECT	1.6789813987759124E-7	TEST	9.580723544220819E-8	DOCUMENTATION
// (NOT (LIKE a b) ) => (NOT_LIKE a b)	WITHOUT_CLASSIFICATION	0.9999946293582516	WITHOUT_CLASSIFICATION	3.3370986057845983E-6	DESIGN	1.729292296524751E-6	IMPLEMENTATION	1.485171864284225E-7	DEFECT	1.061613350479731E-7	TEST	4.957232471759846E-8	DOCUMENTATION
// (NOT (NOT_LIKE a b) ) => (LIKE a b)	WITHOUT_CLASSIFICATION	0.9999946293582516	WITHOUT_CLASSIFICATION	3.3370986057845983E-6	DESIGN	1.729292296524751E-6	IMPLEMENTATION	1.485171864284225E-7	DEFECT	1.061613350479731E-7	TEST	4.957232471759846E-8	DOCUMENTATION
// (NOT (IS_NOT_NULL a b) ) => (IS_NULL a b)	WITHOUT_CLASSIFICATION	0.9999868694629136	WITHOUT_CLASSIFICATION	1.057658708116423E-5	DESIGN	2.0983670221859217E-6	IMPLEMENTATION	2.798139234571944E-7	DEFECT	8.803931190700791E-8	TEST	8.772974771334255E-8	DOCUMENTATION
// (NOT (BETWEEN a b) ) => (NOT_BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999868452138203	WITHOUT_CLASSIFICATION	8.587572187410047E-6	DESIGN	3.936228544056358E-6	IMPLEMENTATION	2.728315159416309E-7	TEST	2.3881473968090527E-7	DEFECT	1.1933919250600736E-7	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999994323869948	WITHOUT_CLASSIFICATION	3.925694645379192E-7	DESIGN	1.5556570011981318E-7	IMPLEMENTATION	9.090215325098774E-9	TEST	8.152125097312935E-9	DEFECT	2.235500050050316E-9	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9984334636826697	WITHOUT_CLASSIFICATION	0.001552698366170637	DESIGN	6.307785729093836E-6	IMPLEMENTATION	3.0868905916837486E-6	DEFECT	2.39045475303445E-6	DOCUMENTATION	2.0528200858916216E-6	TEST
// if // if // Otherwise, handle the error normally.	WITHOUT_CLASSIFICATION	0.9999965917266356	WITHOUT_CLASSIFICATION	2.689218316108198E-6	IMPLEMENTATION	5.891389141449957E-7	DESIGN	1.1241087846127022E-7	DEFECT	1.3685420641615964E-8	TEST	3.819835194311702E-9	DOCUMENTATION
// (NOT (NOT_BETWEEN a b) ) => (BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999868452138203	WITHOUT_CLASSIFICATION	8.587572187410047E-6	DESIGN	3.936228544056358E-6	IMPLEMENTATION	2.728315159416309E-7	TEST	2.3881473968090527E-7	DEFECT	1.1933919250600736E-7	DOCUMENTATION
/* This can never happen because this rule will always eliminate the child NOT.	WITHOUT_CLASSIFICATION	0.9535652884062532	WITHOUT_CLASSIFICATION	0.04634127170719087	DESIGN	9.110286695092664E-5	IMPLEMENTATION	1.5075587307683957E-6	DEFECT	7.245158147818225E-7	DOCUMENTATION	1.049450593837538E-7	TEST
// Just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9997266962882946	WITHOUT_CLASSIFICATION	2.2518065749977452E-4	DESIGN	3.866990533895E-5	IMPLEMENTATION	8.302930495591558E-6	DEFECT	6.526868025093086E-7	DOCUMENTATION	4.975315684898757E-7	TEST
// (EQ NULL b) => (IS_NULL b)	WITHOUT_CLASSIFICATION	0.9999995920766949	WITHOUT_CLASSIFICATION	2.6985101716434285E-7	DESIGN	6.976269060185775E-8	IMPLEMENTATION	4.276220215573851E-8	DEFECT	1.5917344628416096E-8	DOCUMENTATION	9.630050595832994E-9	TEST
// (EQ a NULL) => (IS_NULL a)	WITHOUT_CLASSIFICATION	0.9999992471411936	WITHOUT_CLASSIFICATION	6.218177299690639E-7	DESIGN	7.485624316780177E-8	IMPLEMENTATION	3.517685810738658E-8	DEFECT	1.401649499349211E-8	DOCUMENTATION	6.99148021628993E-9	TEST
// NOTE: Because we're using ASTUtil.createParent(), the tree must be created from the bottom up. // IS EMPTY x => (EXISTS (QUERY (SELECT_FROM (FROM x) ) ) )	WITHOUT_CLASSIFICATION	0.9999983263414767	WITHOUT_CLASSIFICATION	1.371109285392552E-6	DESIGN	2.8684232930496275E-7	IMPLEMENTATION	1.315742841611389E-8	TEST	1.7199472918868591E-9	DEFECT	8.295328699923815E-10	DOCUMENTATION
// Add NOT if it's negated.	WITHOUT_CLASSIFICATION	0.9990656545191181	WITHOUT_CLASSIFICATION	6.959009559219318E-4	DESIGN	1.2107657784863548E-4	IMPLEMENTATION	1.0415626390553338E-4	TEST	8.032089170858582E-6	DOCUMENTATION	5.179594035093426E-6	DEFECT
// Create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.9999988954451544	WITHOUT_CLASSIFICATION	1.0789077201873423E-6	DESIGN	1.1531088779620966E-8	DEFECT	6.360728637502231E-9	DOCUMENTATION	4.332580733424993E-9	TEST	3.422727202751673E-9	IMPLEMENTATION
// Case 1: Multi token keywords GROUP BY and ORDER BY // The next token ( LT(2) ) should be 'by'... otherwise, this is just an ident.	WITHOUT_CLASSIFICATION	0.8512617059777026	WITHOUT_CLASSIFICATION	0.1401800338328956	DESIGN	0.008553957194786462	DEFECT	3.1947145777393072E-6	TEST	6.503061401793596E-7	DOCUMENTATION	4.579738975032873E-7	IMPLEMENTATION
// Case 2: The current token is after FROM and before '.'.	WITHOUT_CLASSIFICATION	0.9997193084676204	WITHOUT_CLASSIFICATION	2.79911786297217E-4	DEFECT	5.898247459309029E-7	DESIGN	1.2031690684450925E-7	DOCUMENTATION	4.104041138882655E-8	TEST	2.856401837392862E-8	IMPLEMENTATION
// This handles HHH-354, where there is a strange property name in a where clause. // If the lookahead contains a DOT then something that isn't an IDENT...	WITHOUT_CLASSIFICATION	0.9869434485742217	WITHOUT_CLASSIFICATION	0.0130157318632999	DESIGN	3.974774051714481E-5	DEFECT	8.809374187590558E-7	TEST	1.626255285534036E-7	DOCUMENTATION	2.8259014129303113E-8	IMPLEMENTATION
// See if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.9999997388504589	WITHOUT_CLASSIFICATION	2.5232517408952095E-7	DESIGN	8.166297270188883E-9	DEFECT	3.9625834368244475E-10	DOCUMENTATION	1.3452984634089664E-10	IMPLEMENTATION	1.2728138444121832E-10	TEST
// Set it!	WITHOUT_CLASSIFICATION	0.999931009182475	WITHOUT_CLASSIFICATION	4.446691265217004E-5	DESIGN	2.0170065149907545E-5	DEFECT	2.7462051249692107E-6	IMPLEMENTATION	9.527736159689227E-7	TEST	6.548609818277037E-7	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999994146225625	WITHOUT_CLASSIFICATION	4.01170982020406E-7	DESIGN	1.1678728359415685E-7	DEFECT	4.5290337807352606E-8	IMPLEMENTATION	1.5212113753972462E-8	DOCUMENTATION	6.916720285389313E-9	TEST
// strip the " where "	WITHOUT_CLASSIFICATION	0.9999963926509653	WITHOUT_CLASSIFICATION	3.087823554561754E-6	DESIGN	3.727856048714497E-7	IMPLEMENTATION	6.577617619514542E-8	TEST	4.5932108428351356E-8	DEFECT	3.503159079910608E-8	DOCUMENTATION
// Don't really know all the codes required to adequately decipher returned jdbc exceptions here. // simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.9996387247430492	WITHOUT_CLASSIFICATION	3.5368844055140374E-4	DEFECT	4.681612990770164E-6	IMPLEMENTATION	2.8078496772631635E-6	DESIGN	9.286367097907511E-8	TEST	4.490060367483647E-9	DOCUMENTATION
// at the very least cleanup the data :)	WITHOUT_CLASSIFICATION	0.9974256492399157	WITHOUT_CLASSIFICATION	0.0024543116680284275	DESIGN	6.0700675406145615E-5	IMPLEMENTATION	5.7525414980342375E-5	DEFECT	9.706001051959563E-7	TEST	8.424015642044172E-7	DOCUMENTATION
// First, save off the pertinent ids, as the return value	WITHOUT_CLASSIFICATION	0.99999999364529	WITHOUT_CLASSIFICATION	2.570056160381837E-9	DESIGN	2.3059547097109074E-9	IMPLEMENTATION	1.3393401359206338E-9	DEFECT	7.987228505475045E-11	DOCUMENTATION	5.948664989432185E-11	TEST
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.999894561819145	WITHOUT_CLASSIFICATION	1.0341544011423457E-4	DESIGN	1.3764760084240652E-6	IMPLEMENTATION	4.794565068425925E-7	DEFECT	1.0653643261335301E-7	TEST	6.02717928528191E-8	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.999894561819145	WITHOUT_CLASSIFICATION	1.0341544011423457E-4	DESIGN	1.3764760084240652E-6	IMPLEMENTATION	4.794565068425925E-7	DEFECT	1.0653643261335301E-7	TEST	6.02717928528191E-8	DOCUMENTATION
// Start performing the updates	WITHOUT_CLASSIFICATION	0.999984471727611	WITHOUT_CLASSIFICATION	8.848299572588062E-6	IMPLEMENTATION	5.20531515397766E-6	DESIGN	8.295958012618405E-7	DEFECT	5.222131517477404E-7	TEST	1.2284870949222458E-7	DOCUMENTATION
// First, save off the pertinent ids, saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.9999999830429798	WITHOUT_CLASSIFICATION	7.689094126978018E-9	DEFECT	4.714850523356636E-9	DESIGN	2.118677665937345E-9	TEST	1.963935968806095E-9	IMPLEMENTATION	4.704619774255043E-10	DOCUMENTATION
// Start performing the deletes	WITHOUT_CLASSIFICATION	0.9999959684508422	WITHOUT_CLASSIFICATION	2.0945332536948574E-6	DESIGN	1.6747001266119034E-6	IMPLEMENTATION	2.0995191071739637E-7	TEST	3.4052177828769454E-8	DEFECT	1.8311689034202968E-8	DOCUMENTATION
// otherwise, everything ok.	WITHOUT_CLASSIFICATION	0.9998244287380298	WITHOUT_CLASSIFICATION	9.572788012256128E-5	DESIGN	7.690482519754378E-5	IMPLEMENTATION	1.3806179990094257E-6	TEST	8.217223587353741E-7	DEFECT	7.36216292353798E-7	DOCUMENTATION
// visit width-first, then depth	WITHOUT_CLASSIFICATION	0.9999993541974366	WITHOUT_CLASSIFICATION	3.591187590633679E-7	DESIGN	1.3517272183636963E-7	IMPLEMENTATION	8.330415872101736E-8	TEST	5.621911582870151E-8	DEFECT	1.1987807957025085E-8	DOCUMENTATION
// if the types report logical equivalence, return true...	WITHOUT_CLASSIFICATION	0.999881376432739	WITHOUT_CLASSIFICATION	9.414030550299946E-5	DESIGN	2.348313169801209E-5	DEFECT	9.499139739975063E-7	IMPLEMENTATION	3.7585809486955786E-8	TEST	1.2630276425290845E-8	DOCUMENTATION
// otherwise, perform a "deep equivalence" check...	WITHOUT_CLASSIFICATION	0.9997959259822636	WITHOUT_CLASSIFICATION	2.000688260965479E-4	DESIGN	3.963425911059315E-6	IMPLEMENTATION	2.2315697285309816E-8	DOCUMENTATION	1.4259035830586484E-8	DEFECT	5.1909956660552475E-9	TEST
// If there is no WHERE node, make one.	WITHOUT_CLASSIFICATION	0.9999994214510598	WITHOUT_CLASSIFICATION	3.0869564588649244E-7	DESIGN	1.5355933311371555E-7	DEFECT	8.707983049232198E-8	TEST	2.7969023869170406E-8	IMPLEMENTATION	1.2451068124258795E-9	DOCUMENTATION
// inject the WHERE after the parent	WITHOUT_CLASSIFICATION	0.9999803497900684	WITHOUT_CLASSIFICATION	1.463996330894337E-5	DESIGN	3.848697389663766E-6	IMPLEMENTATION	8.387506343641911E-7	DEFECT	1.6614100826828012E-7	TEST	1.5665759034706256E-7	DOCUMENTATION
// Never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9998576261990365	WITHOUT_CLASSIFICATION	1.4193592851489595E-4	DESIGN	3.0996448899548604E-7	IMPLEMENTATION	1.0193731127522847E-7	TEST	1.4241407529755676E-8	DEFECT	1.1729240799758512E-8	DOCUMENTATION
// Moved here from SelectClause [jsd]	WITHOUT_CLASSIFICATION	0.9999452622278845	WITHOUT_CLASSIFICATION	5.390469961545484E-5	DESIGN	6.987802289823859E-7	IMPLEMENTATION	5.4868903922967153E-8	TEST	5.4678473980188165E-8	DEFECT	2.4744893063658754E-8	DOCUMENTATION
///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998210722037159	WITHOUT_CLASSIFICATION	1.4179224779189498E-4	DESIGN	1.7719301788286053E-5	IMPLEMENTATION	7.987439563016846E-6	DEFECT	5.858155530719817E-6	TEST	5.570651610169139E-6	DOCUMENTATION
// Use the table fromElement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.9999997266657386	WITHOUT_CLASSIFICATION	2.6713602203076415E-7	DESIGN	3.4612942492664954E-9	DEFECT	1.5719247115327584E-9	IMPLEMENTATION	1.0234748760603282E-9	DOCUMENTATION	1.4154575591115268E-10	TEST
// Set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.9999947292828336	WITHOUT_CLASSIFICATION	4.6893104335719E-6	DEFECT	4.917042622574768E-7	DESIGN	5.3693667256098434E-8	IMPLEMENTATION	3.0055475296503436E-8	DOCUMENTATION	5.953328039027165E-9	TEST
// If the uresolved property path isn't set yet, just use the property name.	WITHOUT_CLASSIFICATION	0.999904669080153	WITHOUT_CLASSIFICATION	6.026779182996485E-5	DEFECT	2.0262617564350766E-5	IMPLEMENTATION	1.3922296146861137E-5	DESIGN	5.387428529847006E-7	TEST	3.3947145291561803E-7	DOCUMENTATION
// The 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.9999925935996002	WITHOUT_CLASSIFICATION	3.6694470542457698E-6	DEFECT	3.4368025769175327E-6	DESIGN	2.084592554017029E-7	IMPLEMENTATION	6.320557899469622E-8	TEST	2.8485934247888834E-8	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999999239706764	WITHOUT_CLASSIFICATION	3.399811853967544E-8	DESIGN	2.0763567053544997E-8	DEFECT	2.0699825517721215E-8	IMPLEMENTATION	3.3574533455247193E-10	TEST	2.320671174061772E-10	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999999239706764	WITHOUT_CLASSIFICATION	3.399811853967544E-8	DESIGN	2.0763567053544997E-8	DEFECT	2.0699825517721215E-8	IMPLEMENTATION	3.3574533455247193E-10	TEST	2.320671174061772E-10	DOCUMENTATION
// If this dot has already been resolved, stop now.	WITHOUT_CLASSIFICATION	0.9995873750117051	WITHOUT_CLASSIFICATION	2.983314499868215E-4	DESIGN	1.1065374493672572E-4	IMPLEMENTATION	3.3192473746727115E-6	DEFECT	2.0581338735377881E-7	TEST	1.1473260955530507E-7	DOCUMENTATION
// If there is no data type for this node, and we're at the end of the path (top most dot node), then // this might be a Java constant.	WITHOUT_CLASSIFICATION	0.9881155269882917	WITHOUT_CLASSIFICATION	0.010214845920937278	DESIGN	0.0016681088955871628	DEFECT	1.0282571305016698E-6	IMPLEMENTATION	3.1963275505489213E-7	DOCUMENTATION	1.703052983886046E-7	TEST
// The property is a collection...	WITHOUT_CLASSIFICATION	0.9995990260206704	WITHOUT_CLASSIFICATION	3.958111413134883E-4	DEFECT	4.471709679407627E-6	DESIGN	5.921220636308445E-7	IMPLEMENTATION	5.338696345373087E-8	TEST	4.5619309665517084E-8	DOCUMENTATION
// The property is a component...	WITHOUT_CLASSIFICATION	0.9998830999468045	WITHOUT_CLASSIFICATION	1.1483260255032723E-4	DEFECT	2.018902484356376E-6	DESIGN	1.8304725540953617E-8	DOCUMENTATION	1.8238014881152962E-8	IMPLEMENTATION	1.2005420364408144E-8	TEST
// The property is another class..	WITHOUT_CLASSIFICATION	0.9999630244206196	WITHOUT_CLASSIFICATION	3.0126942220027504E-5	DEFECT	6.777646394216357E-6	DESIGN	4.6808905555336114E-8	DOCUMENTATION	2.1886855490406625E-8	TEST	2.2950051583002616E-9	IMPLEMENTATION
// Otherwise, this is a primitive type.	WITHOUT_CLASSIFICATION	0.9999850333188899	WITHOUT_CLASSIFICATION	1.4450704981139606E-5	DESIGN	2.2644777764864717E-7	IMPLEMENTATION	2.2311786039532216E-7	DEFECT	5.6421769684568934E-8	TEST	9.988721149518433E-9	DOCUMENTATION
//foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.9835468274016363	WITHOUT_CLASSIFICATION	0.016246956076832814	DESIGN	1.5960753582004993E-4	IMPLEMENTATION	2.1382684191080208E-5	DEFECT	1.603816421184238E-5	TEST	9.188137308023091E-6	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999724739091403	WITHOUT_CLASSIFICATION	1.8238076061371716E-5	DEFECT	9.239774996083266E-6	DESIGN	4.6023962822117576E-8	IMPLEMENTATION	1.9456396905292343E-9	DOCUMENTATION	2.7019965080561343E-10	TEST
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9997577210418093	WITHOUT_CLASSIFICATION	2.27932949913893E-4	IMPLEMENTATION	8.684595127145074E-6	DESIGN	5.3415161395398994E-6	DEFECT	2.7467620256123785E-7	DOCUMENTATION	4.52208077112957E-8	TEST
// in non-select queries, the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.9999999956315293	WITHOUT_CLASSIFICATION	3.736568942722714E-9	DEFECT	5.282295975662902E-10	DESIGN	9.261566502387461E-11	TEST	7.473398636173345E-12	DOCUMENTATION	3.5831644056006513E-12	IMPLEMENTATION
// this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.9998156643022111	WITHOUT_CLASSIFICATION	1.841695356675467E-4	DESIGN	1.412854617460944E-7	DEFECT	1.4774803930301949E-8	IMPLEMENTATION	8.429743030934724E-9	DOCUMENTATION	1.672112490268127E-9	TEST
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999724739091403	WITHOUT_CLASSIFICATION	1.8238076061371716E-5	DEFECT	9.239774996083266E-6	DESIGN	4.6023962822117576E-8	IMPLEMENTATION	1.9456396905292343E-9	DOCUMENTATION	2.7019965080561343E-10	TEST
// even though we might find a pre-existing element by join path, we may not be able to reuse it...	WITHOUT_CLASSIFICATION	0.5831680323259446	WITHOUT_CLASSIFICATION	0.41681274492456416	DESIGN	1.903151035487672E-5	DEFECT	7.099914634708812E-8	DOCUMENTATION	6.13884011594761E-8	IMPLEMENTATION	5.8851588858997616E-8	TEST
// NOTE : addDuplicateAlias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.9772502514468951	WITHOUT_CLASSIFICATION	0.022366109604494977	DESIGN	3.752527284072252E-4	IMPLEMENTATION	4.255848781926802E-6	DOCUMENTATION	3.406320744960558E-6	DEFECT	7.240506756194932E-7	TEST
// if the from-clauses are the same, we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.9993081523054319	WITHOUT_CLASSIFICATION	6.910377557500358E-4	DESIGN	7.798177809358596E-7	DEFECT	1.823842634355105E-8	TEST	9.928549270884926E-9	IMPLEMENTATION	1.9540615320217375E-9	DOCUMENTATION
// again, null != null here	WITHOUT_CLASSIFICATION	0.9999990732048235	WITHOUT_CLASSIFICATION	7.170108046321159E-7	DESIGN	9.922252427391383E-8	IMPLEMENTATION	6.496129679522345E-8	DEFECT	3.2278282422440454E-8	TEST	1.3322268122083111E-8	DOCUMENTATION
// If this is an implied join in a from element, then use the impled join type which is part of the // tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.9999997840185365	WITHOUT_CLASSIFICATION	2.1129061967135567E-7	DESIGN	4.57411492899081E-9	DEFECT	5.508843637157331E-11	IMPLEMENTATION	4.127676098542538E-11	TEST	2.036382750165342E-11	DOCUMENTATION
// otherwise (subquery case) dont reuse the fromElement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.9999999793925658	WITHOUT_CLASSIFICATION	1.8972072705532867E-8	DESIGN	1.2985842616128573E-9	DEFECT	1.8849265741736126E-10	IMPLEMENTATION	1.1993869480226757E-10	DOCUMENTATION	2.8345957679215692E-11	TEST
// we know only the lhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999987114197493	WITHOUT_CLASSIFICATION	1.0708282043244848E-6	DESIGN	1.9889975426455287E-7	IMPLEMENTATION	1.737837019918818E-8	DOCUMENTATION	8.521071354627446E-10	TEST	6.218147097560292E-10	DEFECT
// the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.999999595426641	WITHOUT_CLASSIFICATION	2.73746662858251E-7	IMPLEMENTATION	1.1623647647407035E-7	DEFECT	8.371837672326582E-9	DOCUMENTATION	4.4729719770105604E-9	DESIGN	1.7454102272797174E-9	TEST
// only the identifier property field name can be a reference to the associated entity's PK...	WITHOUT_CLASSIFICATION	0.9985538435131692	WITHOUT_CLASSIFICATION	0.0014460626837001626	DESIGN	7.914683638186327E-8	DEFECT	1.1952115504181276E-8	DOCUMENTATION	2.630852808923082E-9	TEST	7.332596814872592E-11	IMPLEMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9998517010135703	WITHOUT_CLASSIFICATION	1.1790750514791602E-4	DEFECT	2.0903359086349956E-5	DESIGN	4.880486714715811E-6	IMPLEMENTATION	2.4311986523076063E-6	TEST	2.1764368282456923E-6	DOCUMENTATION
// Append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.9999511774120503	WITHOUT_CLASSIFICATION	1.9806559780146888E-5	DEFECT	1.4184080690986111E-5	IMPLEMENTATION	1.3846397279874167E-5	DESIGN	8.971860120416729E-7	DOCUMENTATION	8.83641865568869E-8	TEST
// If the lhs is a collection, use CollectionPropertyMapping	WITHOUT_CLASSIFICATION	0.9999974382213687	WITHOUT_CLASSIFICATION	1.9535415129780696E-6	DEFECT	5.972255659188871E-7	DESIGN	7.147450119085879E-9	IMPLEMENTATION	2.94761365625771E-9	TEST	9.16488583193982E-10	DOCUMENTATION
// Tell the destination fromElement to 'includeSubclasses'.	WITHOUT_CLASSIFICATION	0.9999862164839248	WITHOUT_CLASSIFICATION	1.3494673745885705E-5	DESIGN	2.2866441717389607E-7	DOCUMENTATION	3.26971494818249E-8	TEST	1.4540749945820883E-8	DEFECT	1.2940012735301697E-8	IMPLEMENTATION
// Use theta style (for regression) // Move the node up, after the origin node.	WITHOUT_CLASSIFICATION	0.9999987699046654	WITHOUT_CLASSIFICATION	6.60877927896616E-7	IMPLEMENTATION	3.630672908494497E-7	DESIGN	1.9801978494624891E-7	DEFECT	4.383394932008895E-9	DOCUMENTATION	3.746935859957734E-9	TEST
// Don't resolve the node again.	WITHOUT_CLASSIFICATION	0.9998971295781097	WITHOUT_CLASSIFICATION	9.433536400500834E-5	IMPLEMENTATION	5.4282436480722594E-6	DESIGN	1.4787500114776401E-6	DEFECT	1.012004448871209E-6	DOCUMENTATION	6.160597768472524E-7	TEST
// for expected parameter type injection, we expect that the lhs represents // some form of property ref and that the children of the in-list represent // one-or-more params.	WITHOUT_CLASSIFICATION	0.9999979586507157	WITHOUT_CLASSIFICATION	2.0327758967374956E-6	DESIGN	4.39599402369504E-9	TEST	1.9260779828621443E-9	DOCUMENTATION	1.247200567873485E-9	DEFECT	1.004114899328988E-9	IMPLEMENTATION
// we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.9999989950995876	WITHOUT_CLASSIFICATION	9.866767567428822E-7	DESIGN	8.969690626638057E-9	TEST	4.708024423217037E-9	DOCUMENTATION	4.275560059125362E-9	IMPLEMENTATION	2.70380463182457E-10	DEFECT
// we have something like : "? [op] rhs"	WITHOUT_CLASSIFICATION	0.9865447198224697	WITHOUT_CLASSIFICATION	0.012765453960951807	DESIGN	5.007363798725087E-4	IMPLEMENTATION	1.1761466012745743E-4	TEST	4.839772743060967E-5	DEFECT	2.3077449148048404E-5	DOCUMENTATION
// we have something like : "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.9981339469336853	WITHOUT_CLASSIFICATION	0.0016838251839920422	DESIGN	7.863112499051617E-5	IMPLEMENTATION	6.13555965642567E-5	TEST	3.348025930947925E-5	DEFECT	8.760901458332467E-6	DOCUMENTATION
// we know only the rhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999984906264746	WITHOUT_CLASSIFICATION	1.2873123622636976E-6	DESIGN	2.1135821695701072E-7	IMPLEMENTATION	9.814754637273668E-9	DOCUMENTATION	5.383644173281566E-10	TEST	3.4982698354483915E-10	DEFECT
// handle the (assumed) valid cases: // #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.9998670594749763	WITHOUT_CLASSIFICATION	1.311142182964785E-4	DESIGN	1.775034677357847E-6	DEFECT	2.6112221516724158E-8	IMPLEMENTATION	2.033948932657502E-8	TEST	4.820338972300861E-9	DOCUMENTATION
// one or the other needs to be a datetime for us to get into this method in the first place...	WITHOUT_CLASSIFICATION	0.7823296437582989	DESIGN	0.2176701392461337	WITHOUT_CLASSIFICATION	1.1770725776433845E-7	IMPLEMENTATION	6.166548006459124E-8	DEFECT	3.072931891487654E-8	TEST	6.893510715729056E-9	DOCUMENTATION
// #3 - note that this is also true of "datetime - :param"...	WITHOUT_CLASSIFICATION	0.999486072366166	WITHOUT_CLASSIFICATION	4.222516517126251E-4	DESIGN	7.640248644301496E-5	DEFECT	1.3790077532171623E-5	IMPLEMENTATION	1.2191799030578328E-6	TEST	2.642382430945531E-7	DOCUMENTATION
// #2	WITHOUT_CLASSIFICATION	0.9999959557765276	WITHOUT_CLASSIFICATION	1.8093420511171791E-6	DEFECT	1.785721666118956E-6	DESIGN	2.573043883162997E-7	IMPLEMENTATION	1.0255148349318042E-7	DOCUMENTATION	8.930388336244205E-8	TEST
// Generate the inner join -- The elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.9999999123773178	WITHOUT_CLASSIFICATION	8.669111227766825E-8	DESIGN	2.9655946197971507E-10	DEFECT	2.810052097791763E-10	IMPLEMENTATION	2.68574652651642E-10	DOCUMENTATION	8.543060071051288E-11	TEST
// nothing to do	WITHOUT_CLASSIFICATION	0.9999531921226288	WITHOUT_CLASSIFICATION	3.294597895452538E-5	IMPLEMENTATION	1.067566416389567E-5	DESIGN	2.303461611580103E-6	DEFECT	6.645899844746436E-7	DOCUMENTATION	2.1818265676203127E-7	TEST
// The 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.9999886008043686	WITHOUT_CLASSIFICATION	6.575919775609543E-6	DEFECT	2.633549900670119E-6	DESIGN	2.1808832015868554E-6	IMPLEMENTATION	6.575841575003828E-9	TEST	2.2669119777930822E-9	DOCUMENTATION
// Add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.9999974490027929	WITHOUT_CLASSIFICATION	2.117861732215314E-6	IMPLEMENTATION	2.3239168332094152E-7	DOCUMENTATION	1.4158341012086015E-7	DESIGN	5.6565809196895456E-8	DEFECT	2.5945724511829183E-9	TEST
// Sometimes use the element table alias, sometimes use the... umm... collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.9999927876093644	WITHOUT_CLASSIFICATION	6.705404781846006E-6	DESIGN	4.4003800645373287E-7	IMPLEMENTATION	4.109245525541907E-8	DEFECT	2.3838081709025016E-8	DOCUMENTATION	2.0173105031274753E-9	TEST
// Now, set the text for this node.  It should be the element columns.	WITHOUT_CLASSIFICATION	0.9922620181803412	WITHOUT_CLASSIFICATION	0.007694965547300444	DESIGN	3.9487577685457796E-5	IMPLEMENTATION	3.023110861381586E-6	TEST	4.796345887098242E-7	DEFECT	2.5949222696886614E-8	DOCUMENTATION
// Get the function return value type, based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.9999999254871486	WITHOUT_CLASSIFICATION	3.988155575753279E-8	DESIGN	3.089244436950999E-8	IMPLEMENTATION	2.7292570265762886E-9	DEFECT	9.31280499159952E-10	DOCUMENTATION	7.83137973570556E-11	TEST
// This will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.9999612775468534	WITHOUT_CLASSIFICATION	2.725632024056312E-5	DEFECT	7.515693492404588E-6	IMPLEMENTATION	3.786265046113841E-6	DESIGN	8.555137625563907E-8	DOCUMENTATION	7.862299131581026E-8	TEST
// mutation depends on the types of nodes invloved...	WITHOUT_CLASSIFICATION	0.9999583824939589	WITHOUT_CLASSIFICATION	3.519972946311539E-5	DEFECT	4.463634885459278E-6	DESIGN	1.8743948471292016E-6	IMPLEMENTATION	4.248315795825563E-8	TEST	3.7263687536249304E-8	DOCUMENTATION
// "pass along" our initial embedded parameter node(s) to the first generated // sql fragment so that it can be handled later for parameter binding...	WITHOUT_CLASSIFICATION	0.9990971528219774	WITHOUT_CLASSIFICATION	9.026317338361978E-4	DESIGN	1.4565933384834774E-7	IMPLEMENTATION	6.541573192260315E-8	TEST	4.082167700892338E-9	DEFECT	2.869529625074703E-10	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999964843157539	WITHOUT_CLASSIFICATION	3.4928452319718823E-6	DESIGN	1.4150784959682256E-8	IMPLEMENTATION	6.817477155731104E-9	DEFECT	1.4480484270035995E-9	TEST	4.2270356690699724E-10	DOCUMENTATION
// Generated select expressions are already resolved, nothing to do.	WITHOUT_CLASSIFICATION	0.9999999225187619	WITHOUT_CLASSIFICATION	5.295161916952872E-8	DESIGN	1.975134293474996E-8	IMPLEMENTATION	3.99702612744328E-9	DEFECT	4.2036671166326483E-10	DOCUMENTATION	3.6088314913853163E-10	TEST
// The path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.9997547411538201	WITHOUT_CLASSIFICATION	2.450872344515827E-4	DESIGN	1.54781734437489E-7	DEFECT	1.0400431108965351E-8	DOCUMENTATION	5.7415311997268464E-9	IMPLEMENTATION	6.880315565170554E-10	TEST
// The HQL class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.9999998848709953	WITHOUT_CLASSIFICATION	7.976061408806657E-8	DESIGN	3.468645602396478E-8	DEFECT	3.5005254579495455E-10	DOCUMENTATION	3.109526651927892E-10	IMPLEMENTATION	2.092933276082796E-11	TEST
// Associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.9999993834616948	WITHOUT_CLASSIFICATION	3.722445954765566E-7	DESIGN	2.014318439742727E-7	IMPLEMENTATION	3.2716586717397236E-8	TEST	7.853162821539244E-9	DOCUMENTATION	2.29211629816545E-9	DEFECT
// try the parent FromClause...	WITHOUT_CLASSIFICATION	0.9999034247351883	WITHOUT_CLASSIFICATION	7.627197313698774E-5	IMPLEMENTATION	1.21800136124376E-5	DESIGN	7.76489049403962E-6	DEFECT	2.4586305763942706E-7	DOCUMENTATION	1.1252451052244232E-7	TEST
// Add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.9999993040422039	WITHOUT_CLASSIFICATION	4.1815567531872724E-7	DESIGN	1.6657224045112256E-7	IMPLEMENTATION	9.297867986596968E-8	DOCUMENTATION	1.2969299095584457E-8	TEST	5.281901487022813E-9	DEFECT
// Make sure that all from elements registered with this FROM clause are actually in the AST.	WITHOUT_CLASSIFICATION	0.9999983894752956	WITHOUT_CLASSIFICATION	1.60641512276015E-6	DESIGN	3.2403861942502707E-9	IMPLEMENTATION	4.390172414739721E-10	DEFECT	2.730493683009404E-10	TEST	1.5712877385306306E-10	DOCUMENTATION
// Invoke setScalarColumnText on each constructor argument.	WITHOUT_CLASSIFICATION	0.9998339426511029	WITHOUT_CLASSIFICATION	1.62453681498115E-4	DESIGN	2.7451800721203317E-6	IMPLEMENTATION	4.2242173848087765E-7	DOCUMENTATION	4.1023944117046547E-7	DEFECT	2.5826147269680934E-8	TEST
// Collect the select expressions, skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.9999999751258428	WITHOUT_CLASSIFICATION	2.0434434180086536E-8	DESIGN	3.5422543400471838E-9	DEFECT	7.634176709688893E-10	IMPLEMENTATION	1.2675297769269142E-10	TEST	7.29812479652788E-12	DOCUMENTATION
// return an empty Type array	WITHOUT_CLASSIFICATION	0.9999777568349391	WITHOUT_CLASSIFICATION	2.2217961192738054E-5	DESIGN	2.2281509439486674E-8	DEFECT	1.969652318995521E-9	DOCUMENTATION	5.488888122001992E-10	TEST	4.0381770981228474E-10	IMPLEMENTATION
// Constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.9998829022929393	WITHOUT_CLASSIFICATION	1.1484883943691258E-4	DESIGN	1.1813421049058506E-6	IMPLEMENTATION	1.0317167778873892E-6	DEFECT	2.1278240115649174E-8	DOCUMENTATION	1.4530500901887783E-8	TEST
// this is the exception returned by ReflectHelper.getConstructor() if it cannot // locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.9999985304497458	WITHOUT_CLASSIFICATION	1.1626889998631138E-6	DESIGN	3.0658566587765736E-7	DEFECT	2.6497533081744364E-10	TEST	8.73257771282512E-12	IMPLEMENTATION	1.8802825397247358E-12	DOCUMENTATION
// if there is no order by, make one	WITHOUT_CLASSIFICATION	0.9999919392720641	WITHOUT_CLASSIFICATION	6.342870032753478E-6	DESIGN	1.2100509287543643E-6	TEST	3.794828868857827E-7	IMPLEMENTATION	1.1869956803646426E-7	DEFECT	9.624519574795857E-9	DOCUMENTATION
// Find the WHERE; if there is no WHERE, find the FROM...	WITHOUT_CLASSIFICATION	0.9999997481074393	WITHOUT_CLASSIFICATION	1.2812369904887098E-7	DESIGN	5.3793802638145743E-8	TEST	5.12989490507746E-8	DEFECT	1.6342719171953498E-8	IMPLEMENTATION	2.3333906326435485E-9	DOCUMENTATION
// Now, inject the newly built ORDER BY into the tree	WITHOUT_CLASSIFICATION	0.9999915916711624	WITHOUT_CLASSIFICATION	7.2706742994446285E-6	DESIGN	4.892050328639672E-7	DEFECT	4.2821198284295283E-7	IMPLEMENTATION	1.7420699319442148E-7	DOCUMENTATION	4.603052927678258E-8	TEST
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999955879720236	WITHOUT_CLASSIFICATION	3.4141467630314613E-6	IMPLEMENTATION	8.182343366078513E-7	DESIGN	1.2124759401775096E-7	TEST	5.084746421921424E-8	DEFECT	7.551818366509557E-9	DOCUMENTATION
// logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.9999957087500074	WITHOUT_CLASSIFICATION	4.2506063528827335E-6	DESIGN	2.7105435903497877E-8	IMPLEMENTATION	9.507053137475347E-9	DEFECT	3.311978016426132E-9	TEST	7.191727422482123E-10	DOCUMENTATION
// Render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.9999649201245112	WITHOUT_CLASSIFICATION	3.463661012057401E-5	DESIGN	3.452573471378305E-7	IMPLEMENTATION	5.419382537519045E-8	TEST	3.766218186965279E-8	DEFECT	6.152014026712726E-9	DOCUMENTATION
// Class names in the FROM clause result in a JoinSequence (the old FromParser does this).	WITHOUT_CLASSIFICATION	0.9999987884281473	WITHOUT_CLASSIFICATION	1.200409564538881E-6	DEFECT	1.0586227727062768E-8	DESIGN	4.76113968398029E-10	DOCUMENTATION	9.881512051302813E-11	TEST	1.1313712804769242E-12	IMPLEMENTATION
// For many-to-many joins, use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.9999998529971442	WITHOUT_CLASSIFICATION	1.3805462014921293E-7	DESIGN	7.866068897926347E-9	IMPLEMENTATION	5.114564234812042E-10	DEFECT	3.160176020635828E-10	TEST	2.5469260333609187E-10	DOCUMENTATION
// Otherwise, use the property mapping.	WITHOUT_CLASSIFICATION	0.9999973502755092	WITHOUT_CLASSIFICATION	2.029431049618241E-6	IMPLEMENTATION	3.751100761315526E-7	DESIGN	1.7342727161586136E-7	DEFECT	5.344551199661566E-8	DOCUMENTATION	1.8310581306335173E-8	TEST
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999785939109905	WITHOUT_CLASSIFICATION	1.4709083164375032E-5	DESIGN	6.38541094286538E-6	DEFECT	1.901174641900074E-7	IMPLEMENTATION	8.293227004890256E-8	TEST	3.854516797216331E-8	DOCUMENTATION
// If the property is a special collection property name, return a CollectionPropertyMapping.	WITHOUT_CLASSIFICATION	0.9999784651557185	WITHOUT_CLASSIFICATION	1.8661486452673166E-5	DEFECT	2.635638050029652E-6	IMPLEMENTATION	2.2827584553989432E-7	DESIGN	6.24964036064844E-9	DOCUMENTATION	3.194292716874253E-9	TEST
// Collection of components.	WITHOUT_CLASSIFICATION	0.9999314697197969	WITHOUT_CLASSIFICATION	6.841675575235652E-5	DESIGN	6.84352105297862E-8	DEFECT	2.061745039983832E-8	DOCUMENTATION	1.6662782603856262E-8	IMPLEMENTATION	7.809007291547008E-9	TEST
// make sure the lhs is "assignable"...	WITHOUT_CLASSIFICATION	0.9999997119736179	WITHOUT_CLASSIFICATION	1.6459146932648501E-7	DEFECT	6.485925581207605E-8	DESIGN	3.350050471317249E-8	TEST	2.3919469367558557E-8	IMPLEMENTATION	1.1556827647294392E-9	DOCUMENTATION
// false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.999981650970539	WITHOUT_CLASSIFICATION	1.5733970333530177E-5	DESIGN	1.8551121235345562E-6	IMPLEMENTATION	4.508502352965922E-7	DEFECT	1.6975213023357195E-7	TEST	1.39344638377908E-7	DOCUMENTATION
// Register the FromElement with the FROM clause, now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.9999842502843395	WITHOUT_CLASSIFICATION	1.2874422781769257E-5	DESIGN	2.743569293070946E-6	IMPLEMENTATION	9.951155570431102E-8	TEST	2.9586980293587965E-8	DEFECT	2.6250497216762196E-9	DOCUMENTATION
// currently allowed...	WITHOUT_CLASSIFICATION	0.9998637964826866	WITHOUT_CLASSIFICATION	6.664751403275417E-5	DEFECT	4.71491189390685E-5	IMPLEMENTATION	2.119075024032577E-5	DESIGN	1.1799252253771078E-6	DOCUMENTATION	3.620887576960364E-8	TEST
// HHH-276 : implied joins in a subselect where clause - The destination needs to be added // to the destination's from clause. // Not sure if this is will fix everything, but it works.	WITHOUT_CLASSIFICATION	0.9852930537792414	DEFECT	0.008430401892907672	DESIGN	0.006275297114377511	WITHOUT_CLASSIFICATION	1.1758176557154837E-6	TEST	7.1048663822543E-8	DOCUMENTATION	3.471540062244103E-10	IMPLEMENTATION
//return classAlias == null ? className : classAlias;	WITHOUT_CLASSIFICATION	0.9512582164666175	WITHOUT_CLASSIFICATION	0.04860965005937451	DESIGN	1.3020301087905592E-4	DEFECT	8.082468469372118E-7	DOCUMENTATION	7.211768777112048E-7	IMPLEMENTATION	4.01039404483937E-7	TEST
// This is an explicit FROM element.	WITHOUT_CLASSIFICATION	0.9998892275037236	WITHOUT_CLASSIFICATION	1.1017010139390721E-4	DESIGN	4.507046015587315E-7	DEFECT	9.936952146280602E-8	TEST	2.8081375713965605E-8	IMPLEMENTATION	2.4239383871975215E-8	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999955879720236	WITHOUT_CLASSIFICATION	3.4141467630314613E-6	IMPLEMENTATION	8.182343366078513E-7	DESIGN	1.2124759401775096E-7	TEST	5.084746421921424E-8	DEFECT	7.551818366509557E-9	DOCUMENTATION
// Fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.9999849694368848	WITHOUT_CLASSIFICATION	1.073654474548199E-5	DESIGN	2.269156270643078E-6	DEFECT	1.907952327844093E-6	IMPLEMENTATION	9.38194677019259E-8	TEST	2.3090303474419006E-8	DOCUMENTATION
// If it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.9999981212972463	WITHOUT_CLASSIFICATION	1.4722899345903997E-6	IMPLEMENTATION	4.0249299074497653E-7	DEFECT	1.828986366180765E-9	DESIGN	1.5197881760457929E-9	TEST	5.710538710140105E-10	DOCUMENTATION
// Since this is an explicit FROM element, it can't be implied in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999151109636535	WITHOUT_CLASSIFICATION	8.481915552784905E-5	DESIGN	6.501209957989453E-8	DEFECT	3.8661166668506795E-9	DOCUMENTATION	9.531364542186523E-10	TEST	4.9465957915912675E-11	IMPLEMENTATION
// Do nothing, eplicit from elements are *always* in the projection list.	WITHOUT_CLASSIFICATION	0.9999932481436596	WITHOUT_CLASSIFICATION	6.631710915730409E-6	DESIGN	8.111091571243241E-8	DEFECT	2.7320809088005306E-8	DOCUMENTATION	8.654587789054858E-9	IMPLEMENTATION	3.0591119462224353E-9	TEST
// propertyName refers to something like collection.size...	WITHOUT_CLASSIFICATION	0.9997749194745665	WITHOUT_CLASSIFICATION	2.0039430108752555E-4	DEFECT	1.6227002604546094E-5	DESIGN	7.515845696453931E-6	IMPLEMENTATION	4.755696851023823E-7	DOCUMENTATION	4.678063599367589E-7	TEST
// property name is a sub-path of a component...	WITHOUT_CLASSIFICATION	0.9999923669403171	WITHOUT_CLASSIFICATION	6.836432769387014E-6	DEFECT	7.934266770552635E-7	DESIGN	1.7727794675152165E-9	IMPLEMENTATION	8.0715823358535E-10	TEST	6.202985285611016E-10	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9997577210418093	WITHOUT_CLASSIFICATION	2.27932949913893E-4	IMPLEMENTATION	8.684595127145074E-6	DESIGN	5.3415161395398994E-6	DEFECT	2.7467620256123785E-7	DOCUMENTATION	4.52208077112957E-8	TEST
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.999857747147973	WITHOUT_CLASSIFICATION	1.3943361972083891E-4	DESIGN	1.480789886788481E-6	TEST	9.163796440261076E-7	IMPLEMENTATION	4.0604980985640315E-7	DEFECT	1.6012965412618337E-8	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999964843157539	WITHOUT_CLASSIFICATION	3.4928452319718823E-6	DESIGN	1.4150784959682256E-8	IMPLEMENTATION	6.817477155731104E-9	DEFECT	1.4480484270035995E-9	TEST	4.2270356690699724E-10	DOCUMENTATION
// DotNode uses null here...	WITHOUT_CLASSIFICATION	0.972142701288612	WITHOUT_CLASSIFICATION	0.019436221592652538	DESIGN	0.006733062330639408	DEFECT	0.001624668456298364	IMPLEMENTATION	3.571910294741735E-5	TEST	2.762722885036965E-5	DOCUMENTATION
// We represent a from-clause alias	WITHOUT_CLASSIFICATION	0.9999997039740329	WITHOUT_CLASSIFICATION	1.368289941809725E-7	IMPLEMENTATION	1.0903903100397847E-7	DESIGN	4.5048421756136034E-8	DEFECT	4.448353177808601E-9	DOCUMENTATION	6.611669492005229E-10	TEST
// we are the LHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999999643272877	WITHOUT_CLASSIFICATION	3.3326056731528035E-8	DESIGN	9.966261250965265E-10	DEFECT	8.396491662752444E-10	DOCUMENTATION	4.350868060571074E-10	TEST	7.52937573913376E-11	IMPLEMENTATION
// we are the RHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999999217726252	WITHOUT_CLASSIFICATION	7.354727161110655E-8	DESIGN	1.785053669685827E-9	DOCUMENTATION	1.4651134720766033E-9	DEFECT	9.326296535998938E-10	TEST	4.973063784431917E-10	IMPLEMENTATION
// we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.9999955439515497	WITHOUT_CLASSIFICATION	4.223446737761224E-6	DESIGN	1.2950778861487537E-7	DEFECT	8.675684506491702E-8	IMPLEMENTATION	1.0376645073740429E-8	TEST	5.960433799520504E-9	DOCUMENTATION
// EARLY EXIT!!!  return so the resolve call explicitly coming from DotNode can // resolve this...	WITHOUT_CLASSIFICATION	0.998934923726156	WITHOUT_CLASSIFICATION	0.0010166123825483917	DESIGN	4.728287201476249E-5	DEFECT	9.55573148982165E-7	DOCUMENTATION	1.8720370585606182E-7	IMPLEMENTATION	3.8242426094820365E-8	TEST
// assume this ident's text does *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9997384810597804	WITHOUT_CLASSIFICATION	2.6134520615226113E-4	DESIGN	1.4265163061461847E-7	DEFECT	1.6138495195533136E-8	DOCUMENTATION	1.467361164337423E-8	TEST	2.703298957959698E-10	IMPLEMENTATION
// just ignore it for now, it'll get resolved later...	WITHOUT_CLASSIFICATION	0.998214956040064	WITHOUT_CLASSIFICATION	0.0017745734144891646	DESIGN	6.958380145714571E-6	DEFECT	2.195184013332961E-6	IMPLEMENTATION	1.2709510825987674E-6	TEST	4.603020519342309E-8	DOCUMENTATION
// This is not actually a constant, but a reference to FROM element.	WITHOUT_CLASSIFICATION	0.9971284693291	WITHOUT_CLASSIFICATION	0.002845560146545428	DESIGN	2.5708186965035195E-5	DEFECT	2.5404554180599505E-7	IMPLEMENTATION	7.3531313770174255E-9	DOCUMENTATION	9.387163248845559E-10	TEST
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.999999192334848	WITHOUT_CLASSIFICATION	8.043721953642298E-7	DESIGN	3.1969603239013885E-9	DEFECT	5.157965426553142E-11	DOCUMENTATION	3.2911491077968675E-11	IMPLEMENTATION	1.1505124608467316E-11	TEST
// these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9999563781525289	WITHOUT_CLASSIFICATION	3.725090575302471E-5	IMPLEMENTATION	5.764198352030181E-6	DESIGN	3.487825260293598E-7	DOCUMENTATION	2.1101874879929865E-7	TEST	4.694209101410936E-8	DEFECT
// used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.9899563705468506	WITHOUT_CLASSIFICATION	0.010031691025669209	DESIGN	1.031455938766728E-5	IMPLEMENTATION	1.1216075812152574E-6	DOCUMENTATION	3.6462211600778073E-7	DEFECT	1.3763839543472442E-7	TEST
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.999835019204841	WITHOUT_CLASSIFICATION	1.6485897332818111E-4	DESIGN	9.799219846150119E-8	DEFECT	2.144841308454434E-8	DOCUMENTATION	1.323104399697396E-9	IMPLEMENTATION	1.058114821670338E-9	TEST
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.999835019204841	WITHOUT_CLASSIFICATION	1.6485897332818111E-4	DESIGN	9.799219846150119E-8	DEFECT	2.144841308454434E-8	DOCUMENTATION	1.323104399697396E-9	IMPLEMENTATION	1.058114821670338E-9	TEST
// naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.9999909485053328	WITHOUT_CLASSIFICATION	9.046823664871936E-6	DESIGN	4.227203750695542E-9	DEFECT	2.9880947013352845E-10	TEST	1.0739120890749873E-10	DOCUMENTATION	3.759794340220904E-11	IMPLEMENTATION
// this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9999972609595802	WITHOUT_CLASSIFICATION	1.4874851823320828E-6	DESIGN	1.082761994765457E-6	IMPLEMENTATION	6.911788386750757E-8	DOCUMENTATION	6.824011633957248E-8	TEST	3.143524247859805E-8	DEFECT
// do *not* over-write the column text, as that has already been // "rendered" during resolve	WITHOUT_CLASSIFICATION	0.9999998408884035	WITHOUT_CLASSIFICATION	1.5297231608428418E-7	DESIGN	3.817308104720194E-9	IMPLEMENTATION	2.1958130632883487E-9	DEFECT	8.215417351083382E-11	TEST	4.400496557775919E-11	DOCUMENTATION
// for some reason the antlr.CommonAST initialization routines force // this method to get called twice.  The first time with an empty string	WITHOUT_CLASSIFICATION	0.9998957018336736	WITHOUT_CLASSIFICATION	1.0429320936617411E-4	DESIGN	4.529703066288416E-9	TEST	3.513242601091231E-10	IMPLEMENTATION	4.49053908287422E-11	DOCUMENTATION	3.102744459696886E-11	DEFECT
// Look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.9999986121593343	WITHOUT_CLASSIFICATION	1.237164991815568E-6	DESIGN	7.94975660561286E-8	IMPLEMENTATION	6.566474610676329E-8	DEFECT	3.865352391322782E-9	TEST	1.6480093513656983E-9	DOCUMENTATION
// Add to the query spaces.	WITHOUT_CLASSIFICATION	0.9999547002953999	WITHOUT_CLASSIFICATION	3.864145953895295E-5	DESIGN	4.6331149619239005E-6	IMPLEMENTATION	1.4043207590265865E-6	DOCUMENTATION	5.467717226722272E-7	DEFECT	7.403761758932015E-8	TEST
// If the from element isn't in the same clause, create a new from element.	WITHOUT_CLASSIFICATION	0.9999947420587216	WITHOUT_CLASSIFICATION	3.6094056777501877E-6	DESIGN	1.645467077327427E-6	DEFECT	2.7601645793475988E-9	DOCUMENTATION	2.893782213840678E-10	TEST	1.898035679666432E-11	IMPLEMENTATION
// This is the root level node. // Generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.9999867908162773	WITHOUT_CLASSIFICATION	1.3131444920594531E-5	DESIGN	7.282796389993422E-8	DEFECT	4.4391182939671035E-9	TEST	4.290289451459546E-10	DOCUMENTATION	4.269103840844683E-11	IMPLEMENTATION
// Correlated subqueries create 'special' implied from nodes // because correlated subselects can't use an ANSI-style join	WITHOUT_CLASSIFICATION	0.999999314235248	WITHOUT_CLASSIFICATION	5.74158881766353E-7	DEFECT	1.0313604292451464E-7	DESIGN	3.1444635205351843E-9	TEST	2.846331372487647E-9	IMPLEMENTATION	2.479032341352323E-9	DOCUMENTATION
// super-duper-classic-parser-regression-testing-mojo-magic...	WITHOUT_CLASSIFICATION	0.9999105358377377	WITHOUT_CLASSIFICATION	8.890243881647714E-5	DESIGN	3.937541562086217E-7	DEFECT	1.480223030955506E-7	TEST	1.5002087813587887E-8	DOCUMENTATION	4.9448985920319815E-9	IMPLEMENTATION
// A collection of entities...	WITHOUT_CLASSIFICATION	0.9999683763374787	WITHOUT_CLASSIFICATION	1.352327920808561E-5	DESIGN	1.269997243284968E-5	DEFECT	5.080631083580276E-6	IMPLEMENTATION	2.40203584488143E-7	DOCUMENTATION	7.9576212256764E-8	TEST
// A collection of components...	WITHOUT_CLASSIFICATION	0.9999986510903539	WITHOUT_CLASSIFICATION	5.038457730179485E-7	DEFECT	4.482208678035754E-7	IMPLEMENTATION	3.8209777439401907E-7	DESIGN	1.0584502927407942E-8	DOCUMENTATION	4.160727960128415E-9	TEST
// A collection of scalar elements...	WITHOUT_CLASSIFICATION	0.9999858944286084	WITHOUT_CLASSIFICATION	1.1313521142433074E-5	IMPLEMENTATION	2.332879979165415E-6	DEFECT	4.208819559362998E-7	DESIGN	3.2500118170239075E-8	DOCUMENTATION	5.788195869744094E-9	TEST
// according to both the ANSI-SQL and EJB3 specs, trim can either take // exactly one parameter or a variable number of parameters between 1 and 4. // from the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If only <trim specification> is omitted, BOTH is assumed; // if <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999999999756658	WITHOUT_CLASSIFICATION	2.2993292165651416E-11	DEFECT	4.704439865053129E-13	DOCUMENTATION	4.086322033653945E-13	DESIGN	2.7860565812886147E-13	TEST	1.8328092720182298E-13	IMPLEMENTATION
// Don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.9989040191808023	WITHOUT_CLASSIFICATION	8.543998357149925E-4	DESIGN	2.0253795225940043E-4	IMPLEMENTATION	3.6248436102109004E-5	DEFECT	1.975263925107499E-6	DOCUMENTATION	8.193311963102456E-7	TEST
// Treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.9999888926060895	WITHOUT_CLASSIFICATION	8.223814119152737E-6	DESIGN	2.860368720952664E-6	DEFECT	1.9838246460837157E-8	DOCUMENTATION	3.2202044346729838E-9	TEST	1.5261947105670356E-10	IMPLEMENTATION
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.9970263215064352	WITHOUT_CLASSIFICATION	0.0029624786289668154	DESIGN	9.08270135551325E-6	DEFECT	1.7707406502478513E-6	TEST	3.2176380955120287E-7	DOCUMENTATION	2.465878274880733E-8	IMPLEMENTATION
// Create the FROM element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.999999997669254	WITHOUT_CLASSIFICATION	2.099725627705221E-9	DESIGN	1.6664364929259946E-10	IMPLEMENTATION	5.476292257754935E-11	TEST	5.223204503708532E-12	DEFECT	4.3906624057060865E-12	DOCUMENTATION
// If the join is implied, then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.9999997121737454	WITHOUT_CLASSIFICATION	1.524316918353752E-7	DEFECT	1.27720868564743E-7	DESIGN	4.816253155106306E-9	IMPLEMENTATION	1.62194911135919E-9	TEST	1.2354920372530362E-9	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999928951389117	WITHOUT_CLASSIFICATION	5.467302910336035E-6	IMPLEMENTATION	1.2339920523202466E-6	DESIGN	2.3458748414237456E-7	DOCUMENTATION	1.6340284502967354E-7	DEFECT	5.575796560876287E-9	TEST
// The associated entity is implied, but it must be included in the FROM. // The collection alias is the role.	WITHOUT_CLASSIFICATION	0.9999484201218357	WITHOUT_CLASSIFICATION	5.153658041625086E-5	DESIGN	2.4821046749014198E-8	TEST	1.4921856651931957E-8	DEFECT	1.78336594286325E-9	DOCUMENTATION	1.7714787377804185E-9	IMPLEMENTATION
// Tag this node as a JOIN. // Don't include subclasses in the join. // This is a clollection join.	WITHOUT_CLASSIFICATION	0.9999856383517269	WITHOUT_CLASSIFICATION	1.3614374498374615E-5	DEFECT	6.752944681397624E-7	DESIGN	4.2575932443323474E-8	DOCUMENTATION	2.5962966437373385E-8	IMPLEMENTATION	3.4404078174316757E-9	TEST
// Get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.9999902331879654	WITHOUT_CLASSIFICATION	9.682012444599885E-6	DESIGN	3.938271872667761E-8	TEST	3.776934396013368E-8	DOCUMENTATION	6.255859586938162E-9	DEFECT	1.3916677225339462E-9	IMPLEMENTATION
//  origin, path, implied, columns, classAlias,	WITHOUT_CLASSIFICATION	0.9999979921846841	WITHOUT_CLASSIFICATION	7.196327056652426E-7	DESIGN	6.914440528149187E-7	IMPLEMENTATION	5.598811473964438E-7	DEFECT	2.171241224658389E-8	DOCUMENTATION	1.5144997653845584E-8	TEST
/*implied*/	WITHOUT_CLASSIFICATION	0.9968354591600573	WITHOUT_CLASSIFICATION	0.0016882528515810256	IMPLEMENTATION	0.0014394314305061628	DESIGN	1.928549586618648E-5	DEFECT	1.145328609684079E-5	TEST	6.117775892430312E-6	DOCUMENTATION
// For implied many-to-many, just add the end join.	WITHOUT_CLASSIFICATION	0.9933255503995319	WITHOUT_CLASSIFICATION	0.006670040619471641	IMPLEMENTATION	2.1877953929047335E-6	DESIGN	1.6774347390240758E-6	TEST	4.356617347308719E-7	DOCUMENTATION	1.0808913001054641E-7	DEFECT
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999928951389117	WITHOUT_CLASSIFICATION	5.467302910336035E-6	IMPLEMENTATION	1.2339920523202466E-6	DESIGN	2.3458748414237456E-7	DOCUMENTATION	1.6340284502967354E-7	DEFECT	5.575796560876287E-9	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999928951389117	WITHOUT_CLASSIFICATION	5.467302910336035E-6	IMPLEMENTATION	1.2339920523202466E-6	DESIGN	2.3458748414237456E-7	DOCUMENTATION	1.6340284502967354E-7	DEFECT	5.575796560876287E-9	TEST
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999585994253545	WITHOUT_CLASSIFICATION	3.4410481903550225E-5	DEFECT	4.188233752547802E-6	DESIGN	2.6174842606803013E-6	IMPLEMENTATION	1.2478473823960772E-7	DOCUMENTATION	5.9589990459391644E-8	TEST
// This causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.9999169326272234	WITHOUT_CLASSIFICATION	8.305003167823808E-5	DESIGN	1.550350956215918E-8	DEFECT	1.279701289841285E-9	DOCUMENTATION	4.892162223863416E-10	TEST	6.86712790444012E-11	IMPLEMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9998992874683172	WITHOUT_CLASSIFICATION	9.801447229838905E-5	DESIGN	2.3129422004821545E-6	DEFECT	1.8208644699152836E-7	TEST	1.7831517118217164E-7	DOCUMENTATION	2.4715565707517804E-8	IMPLEMENTATION
// Frontbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999644815543919	WITHOUT_CLASSIFICATION	2.1798098477749285E-5	DEFECT	1.069365865617281E-5	DESIGN	2.6553914319023806E-6	IMPLEMENTATION	3.625121095001504E-7	DOCUMENTATION	8.784932908122564E-9	TEST
/*	WITHOUT_CLASSIFICATION	0.933244904112182	WITHOUT_CLASSIFICATION	0.05759605816623468	DESIGN	0.005922678791583738	DEFECT	0.0029694107811799168	IMPLEMENTATION	1.595747323387444E-4	DOCUMENTATION	1.0737341648099305E-4	TEST
/*public Type[] getSqlResultTypes() {	WITHOUT_CLASSIFICATION	0.8867825325632491	WITHOUT_CLASSIFICATION	0.11289107715340346	DESIGN	2.9283626964676394E-4	DEFECT	2.056814590691335E-5	DOCUMENTATION	8.851192803382055E-6	TEST	4.134674990208399E-6	IMPLEMENTATION
// First, collect all of the select expressions. // NOTE: This must be done *before* invoking setScalarColumnText() because setScalarColumnText() // changes the AST!!!	WITHOUT_CLASSIFICATION	0.999835837692077	WITHOUT_CLASSIFICATION	1.620646279877612E-4	IMPLEMENTATION	1.4477168010809359E-6	DEFECT	6.387444264880639E-7	DESIGN	1.071271655769712E-8	TEST	5.059911510181456E-10	DOCUMENTATION
// First allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.8504859949184649	WITHOUT_CLASSIFICATION	0.14927734105212878	IMPLEMENTATION	2.364037907814725E-4	DESIGN	2.3848518573359185E-7	DEFECT	2.0741976590557327E-8	DOCUMENTATION	1.011462455985195E-9	TEST
//sqlResultTypeList.addAll( constructorArgumentTypeList );	WITHOUT_CLASSIFICATION	0.9999627907491869	WITHOUT_CLASSIFICATION	3.122527894496404E-5	IMPLEMENTATION	3.411113402400124E-6	DESIGN	1.9478381905748872E-6	DEFECT	3.292964203447081E-7	DOCUMENTATION	2.957238546599321E-7	TEST
// If the data type is not an association type, it could not have been in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999930256659618	WITHOUT_CLASSIFICATION	6.892009373176156E-6	DESIGN	6.724804326345753E-8	DEFECT	7.251091845959991E-9	TEST	6.883620394412544E-9	IMPLEMENTATION	9.419095114058507E-10	DOCUMENTATION
//sqlResultTypeList.add( type );	WITHOUT_CLASSIFICATION	0.9999798176898981	WITHOUT_CLASSIFICATION	9.88886975744035E-6	DEFECT	8.088131610923909E-6	DESIGN	1.4282189924134755E-6	IMPLEMENTATION	6.158501578068314E-7	TEST	1.6123958350837766E-7	DOCUMENTATION
// Always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.9998427151708164	WITHOUT_CLASSIFICATION	8.121081879160605E-5	IMPLEMENTATION	7.498253232511284E-5	DESIGN	8.752640271498416E-7	DEFECT	2.0952941316950287E-7	DOCUMENTATION	6.684626573841794E-9	TEST
// add the fetched entities	WITHOUT_CLASSIFICATION	0.9999982826993481	WITHOUT_CLASSIFICATION	1.3202027365162025E-6	DESIGN	2.6854928922128526E-7	IMPLEMENTATION	9.765774912696484E-8	DOCUMENTATION	2.2849463834380797E-8	TEST	8.041413197343577E-9	DEFECT
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999998947049059	WITHOUT_CLASSIFICATION	7.891689575477293E-8	DESIGN	1.0315691314370899E-8	DEFECT	6.444272113446485E-9	DOCUMENTATION	6.1845182327755E-9	IMPLEMENTATION	3.433716709247649E-9	TEST
// function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9985289152033063	WITHOUT_CLASSIFICATION	0.001440849923349079	IMPLEMENTATION	2.2815900491284987E-5	DESIGN	5.207213788789106E-6	DEFECT	1.911698931765521E-6	DOCUMENTATION	3.0006013270903E-7	TEST
// If there are any scalars (non-entities) selected, render the select column aliases.	WITHOUT_CLASSIFICATION	0.9999999485157048	WITHOUT_CLASSIFICATION	4.418967194241625E-8	IMPLEMENTATION	3.889277056780154E-9	DEFECT	2.9745304672665232E-9	DESIGN	2.2098310097554717E-10	TEST	2.098325950802386E-10	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9998614543024186	WITHOUT_CLASSIFICATION	1.2232837388723728E-4	DEFECT	1.2192440435810545E-5	DESIGN	2.1799189890311965E-6	TEST	1.1505358572298032E-6	IMPLEMENTATION	6.944284121743182E-7	DOCUMENTATION
/*ArrayList sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999956006939538	WITHOUT_CLASSIFICATION	3.8094087178139733E-6	DEFECT	4.121915924200616E-7	IMPLEMENTATION	1.267865210278964E-7	TEST	3.7191702925037195E-8	DESIGN	1.3727511966707825E-8	DOCUMENTATION
//sqlResultTypes = ( Type[] ) sqlResultTypeList.toArray( new Type[sqlResultTypeList.size()] );	WITHOUT_CLASSIFICATION	0.9999974126114659	WITHOUT_CLASSIFICATION	2.302625161337311E-6	DEFECT	1.7661253825507657E-7	DESIGN	7.891981877765683E-8	IMPLEMENTATION	2.44210531897588E-8	TEST	4.809962603011501E-9	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999078648744806	WITHOUT_CLASSIFICATION	7.041537278027974E-5	IMPLEMENTATION	1.4203775233627355E-5	DEFECT	6.827294381119651E-6	DESIGN	5.856796662478305E-7	DOCUMENTATION	1.0300345809230712E-7	TEST
//TODO:	WITHOUT_CLASSIFICATION	0.9921933936792977	WITHOUT_CLASSIFICATION	0.004713666147959381	DESIGN	0.0020777199320197227	IMPLEMENTATION	3.7650046391138494E-4	DEFECT	3.238165209447045E-4	DOCUMENTATION	3.14903255867247E-4	TEST
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999973924762211	WITHOUT_CLASSIFICATION	2.491069134399653E-6	DESIGN	9.078176787011665E-8	IMPLEMENTATION	1.3283328652475676E-8	DEFECT	8.615928433434724E-9	DOCUMENTATION	3.773619486762307E-9	TEST
// Generate an 2d array of column names, the first dimension is parallel with the // return types array.  The second dimension is the list of column names for each // type.	WITHOUT_CLASSIFICATION	0.9999999979492333	WITHOUT_CLASSIFICATION	1.93190440712605E-9	DESIGN	1.0410727962891614E-10	DEFECT	1.1824950251312411E-11	IMPLEMENTATION	2.823173343641601E-12	TEST	1.0686997627457023E-13	DOCUMENTATION
// Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999997745005582	WITHOUT_CLASSIFICATION	1.5939462016221674E-7	IMPLEMENTATION	4.395938103947036E-8	DEFECT	1.720668803836645E-8	DESIGN	4.111206796093728E-9	TEST	8.275456779088231E-10	DOCUMENTATION
// union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997853231801778	WITHOUT_CLASSIFICATION	1.6776559721389203E-4	DESIGN	4.081917841772929E-5	IMPLEMENTATION	5.630579382593171E-6	DEFECT	3.34200744190471E-7	DOCUMENTATION	1.2726406393784077E-7	TEST
// Skip 'DISTINCT' and 'ALL', so we return the first expression node.	WITHOUT_CLASSIFICATION	0.9999938196509536	WITHOUT_CLASSIFICATION	3.0898159198645673E-6	DESIGN	3.0324451279742318E-6	IMPLEMENTATION	4.049773281080847E-8	DEFECT	1.6438683898389462E-8	DOCUMENTATION	1.1515820054941405E-9	TEST
// Create SQL_TOKEN nodes for the columns.	WITHOUT_CLASSIFICATION	0.9999909075745386	WITHOUT_CLASSIFICATION	9.01193785989091E-6	DESIGN	5.5066578333840993E-8	TEST	9.852384224726795E-9	DOCUMENTATION	9.512202028474218E-9	DEFECT	6.056436916285448E-9	IMPLEMENTATION
// Generate the property select tokens.	WITHOUT_CLASSIFICATION	0.9999994215059067	WITHOUT_CLASSIFICATION	3.5420046845705483E-7	DESIGN	1.618050292343826E-7	DEFECT	2.6312551377257067E-8	IMPLEMENTATION	2.153723389412198E-8	TEST	1.4638810290467184E-8	DOCUMENTATION
// Get the function name node.	WITHOUT_CLASSIFICATION	0.9999897690663119	WITHOUT_CLASSIFICATION	7.248210698394719E-6	IMPLEMENTATION	2.4655009337070204E-6	DESIGN	2.6787555995977576E-7	DOCUMENTATION	2.0554387395040717E-7	DEFECT	4.380262195730718E-8	TEST
// Method expressions in a SELECT should always be considered scalar.	WITHOUT_CLASSIFICATION	0.999391025627234	WITHOUT_CLASSIFICATION	5.872410893048944E-4	DESIGN	2.158021465589728E-5	DEFECT	1.3891747948607567E-7	IMPLEMENTATION	1.2189807595327088E-8	DOCUMENTATION	1.9615179973430742E-9	TEST
// If this is 'elements' then create a new FROM element.	WITHOUT_CLASSIFICATION	0.9999987918481003	WITHOUT_CLASSIFICATION	9.150063703272312E-7	DESIGN	2.667791714148216E-7	DEFECT	2.110211725154982E-8	TEST	2.9075087547224742E-9	DOCUMENTATION	2.356732079890697E-9	IMPLEMENTATION
// Not elements(x)	WITHOUT_CLASSIFICATION	0.9998024797807529	WITHOUT_CLASSIFICATION	1.0781155722244779E-4	IMPLEMENTATION	8.240490108093385E-5	DESIGN	5.637606975041421E-6	DEFECT	1.2675565720806665E-6	TEST	3.985973965464917E-7	DOCUMENTATION
// Dialect function	WITHOUT_CLASSIFICATION	0.9999858792013477	WITHOUT_CLASSIFICATION	7.905871681311662E-6	IMPLEMENTATION	3.67749840015412E-6	DEFECT	2.2568984393822277E-6	DESIGN	2.3122188217623606E-7	DOCUMENTATION	4.930824913633937E-8	TEST
// Collection 'property function'	WITHOUT_CLASSIFICATION	0.9999686278651941	WITHOUT_CLASSIFICATION	2.76937148690549E-5	DEFECT	3.5363087988294205E-6	DESIGN	8.14121989558623E-8	DOCUMENTATION	4.88283967249857E-8	IMPLEMENTATION	1.1870542312952198E-8	TEST
// If the constant is an IDENT, figure out what it means...	WITHOUT_CLASSIFICATION	0.9999888135236591	WITHOUT_CLASSIFICATION	5.577548010813673E-6	DEFECT	5.036271225435241E-6	DESIGN	3.8606286745763584E-7	IMPLEMENTATION	1.7379152237979836E-7	TEST	1.2802714746379733E-8	DOCUMENTATION
// IDENT is a class alias in the FROM.	WITHOUT_CLASSIFICATION	0.9999997455900571	WITHOUT_CLASSIFICATION	2.3145251532418652E-7	DESIGN	1.99426504820571E-8	DEFECT	1.129781838998924E-9	DOCUMENTATION	9.602545225722287E-10	IMPLEMENTATION	9.247406649043134E-10	TEST
// Resolve to an identity column.	WITHOUT_CLASSIFICATION	0.9952450117531311	WITHOUT_CLASSIFICATION	0.00475234987159203	DESIGN	1.1408032389148592E-6	DEFECT	6.266863805308708E-7	IMPLEMENTATION	5.872089626699832E-7	DOCUMENTATION	2.8367669473153697E-7	TEST
// Otherwise, it's a literal.	WITHOUT_CLASSIFICATION	0.9999585702826306	WITHOUT_CLASSIFICATION	3.4063937721083246E-5	DESIGN	7.114392337534623E-6	IMPLEMENTATION	2.070789817373406E-7	TEST	2.3567387698566478E-8	DEFECT	2.0740941377832855E-8	DOCUMENTATION
// the name of an entity class	WITHOUT_CLASSIFICATION	0.9997868090623518	WITHOUT_CLASSIFICATION	2.123690495233239E-4	DESIGN	5.539493211963393E-7	DEFECT	2.2693419893449446E-7	DOCUMENTATION	3.1212547420438535E-8	TEST	9.79205718236959E-9	IMPLEMENTATION
//the class discriminator value	WITHOUT_CLASSIFICATION	0.9999927308470877	WITHOUT_CLASSIFICATION	6.87888413001692E-6	DESIGN	3.7137415310515914E-7	DEFECT	1.6263199894971914E-8	DOCUMENTATION	2.4513389964336576E-9	TEST	1.8009004192206328E-10	IMPLEMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999988743140196	WITHOUT_CLASSIFICATION	6.877140589340903E-7	TEST	2.1559765965031746E-7	IMPLEMENTATION	1.2651341088677038E-7	DEFECT	8.249838012987885E-8	DESIGN	1.3362470985054182E-8	DOCUMENTATION
// Add a space before the display text.	WITHOUT_CLASSIFICATION	0.9999997693046322	WITHOUT_CLASSIFICATION	1.9609588562234572E-7	IMPLEMENTATION	1.6745965973686368E-8	DEFECT	1.3634330648932578E-8	DESIGN	3.1899028905096034E-9	DOCUMENTATION	1.0292827598965678E-9	TEST
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999991886707389	WITHOUT_CLASSIFICATION	7.423796786761551E-7	IMPLEMENTATION	3.601141770100047E-8	DESIGN	1.6187867482659523E-8	DEFECT	9.29548843236851E-9	DOCUMENTATION	7.454808762336031E-9	TEST
// child == parent.getFirstChild()	WITHOUT_CLASSIFICATION	0.9998988387149733	WITHOUT_CLASSIFICATION	1.0104380990487463E-4	IMPLEMENTATION	6.391323715620742E-8	DEFECT	3.851030281079255E-8	DESIGN	8.069731354774291E-9	DOCUMENTATION	6.9818504071934525E-9	TEST
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999991886707389	WITHOUT_CLASSIFICATION	7.423796786761551E-7	IMPLEMENTATION	3.601141770100047E-8	DESIGN	1.6187867482659523E-8	DEFECT	9.29548843236851E-9	DOCUMENTATION	7.454808762336031E-9	TEST
// Filter conditions need to be inserted before the HQL where condition and the // theta join node.  This is because org.hibernate.loader.Loader binds the filter parameters first, // then it binds all the HQL query parameters, see org.hibernate.loader.Loader.processFilterParameters().	WITHOUT_CLASSIFICATION	0.9999999200498817	WITHOUT_CLASSIFICATION	4.924881197701834E-8	DEFECT	2.0108386695295205E-8	DESIGN	1.0070302636890676E-8	IMPLEMENTATION	4.210576417042319E-10	DOCUMENTATION	1.0155923298549764E-10	TEST
// Put the FILTERS node before the HQL condition and theta joins	WITHOUT_CLASSIFICATION	0.9999961094702104	WITHOUT_CLASSIFICATION	2.923478164472494E-6	DESIGN	4.7015037482429884E-7	IMPLEMENTATION	4.305317860762546E-7	DEFECT	6.421479537995465E-8	DOCUMENTATION	2.1546686794539403E-9	TEST
// add the current fragment to the FILTERS node	WITHOUT_CLASSIFICATION	0.9999644225775641	WITHOUT_CLASSIFICATION	1.7736800766413584E-5	IMPLEMENTATION	1.2294680384403773E-5	DESIGN	5.271631315118432E-6	DOCUMENTATION	1.6778607004057228E-7	DEFECT	1.0652389991201337E-7	TEST
// Create a new THETA_JOINS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999996306479525	WITHOUT_CLASSIFICATION	2.4275608982234457E-7	IMPLEMENTATION	1.1710807004181082E-7	DESIGN	8.724987284793733E-9	DEFECT	4.0483100963843314E-10	DOCUMENTATION	3.5806944042090886E-10	TEST
// Put the THETA_JOINS node before the HQL condition, after the filters.	WITHOUT_CLASSIFICATION	0.9999980805387675	WITHOUT_CLASSIFICATION	1.6286413672903345E-6	DESIGN	2.1174846960209895E-7	IMPLEMENTATION	6.594405347966887E-8	DEFECT	6.900654296975075E-9	TEST	6.226687847005853E-9	DOCUMENTATION
// add the current fragment to the THETA_JOINS node	WITHOUT_CLASSIFICATION	0.9999903643084125	WITHOUT_CLASSIFICATION	4.9354260449839374E-6	IMPLEMENTATION	2.406422082854284E-6	DOCUMENTATION	2.221010738064178E-6	DESIGN	4.7839998484277525E-8	TEST	2.4992723113876954E-8	DEFECT
// First, try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.9999997485280988	WITHOUT_CLASSIFICATION	1.4565523230549306E-7	DESIGN	4.958029901909833E-8	IMPLEMENTATION	3.8066515038024964E-8	DEFECT	1.4817085007099137E-8	TEST	3.352769824721821E-9	DOCUMENTATION
// unable to locate it using this name	WITHOUT_CLASSIFICATION	0.9997530139766323	WITHOUT_CLASSIFICATION	2.460877722300505E-4	DESIGN	7.399712025743839E-7	TEST	1.337563353752071E-7	DEFECT	1.2890965651773858E-8	DOCUMENTATION	1.1632634113550661E-8	IMPLEMENTATION
// If that didn't work, try using the 'import' name.	WITHOUT_CLASSIFICATION	0.999074998432027	WITHOUT_CLASSIFICATION	8.476625964476143E-4	DEFECT	7.695323913356818E-5	DESIGN	2.6247426393322824E-7	TEST	8.410378721896046E-8	DOCUMENTATION	3.915434070889587E-8	IMPLEMENTATION
// Implicit joins use theta style (WHERE pk = fk), explicit joins use JOIN (after from)	WITHOUT_CLASSIFICATION	0.999995849758055	WITHOUT_CLASSIFICATION	2.902160539723814E-6	IMPLEMENTATION	1.1557924566103236E-6	DESIGN	7.248920735635991E-8	DEFECT	1.1547009908876107E-8	TEST	8.252731469964324E-9	DOCUMENTATION
// locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.999999843016567	WITHOUT_CLASSIFICATION	1.287764741875152E-7	IMPLEMENTATION	1.9970753407273195E-8	DESIGN	3.661583162074503E-9	TEST	2.9260980673501984E-9	DEFECT	1.6485241959662993E-9	DOCUMENTATION
// determine the type of the first argument...	WITHOUT_CLASSIFICATION	0.9999610464455346	WITHOUT_CLASSIFICATION	3.86206040869661E-5	DESIGN	2.1952245569265024E-7	DEFECT	7.025125723044916E-8	DOCUMENTATION	2.4391451827169086E-8	IMPLEMENTATION	1.8785213627345007E-8	TEST
// Use the DOT node to emit the first column name. // Create the column names, folled by the column aliases.	WITHOUT_CLASSIFICATION	0.9999999660304896	WITHOUT_CLASSIFICATION	2.2203953114765394E-8	DESIGN	5.96117570197319E-9	IMPLEMENTATION	4.7536997677887765E-9	TEST	9.18222341202605E-10	DEFECT	1.3245957177887408E-10	DOCUMENTATION
// Note: this simply constructs a "raw" SQL_TOKEN representing the // where fragment and injects this into the tree.  This "works"; // however it is probably not the best long-term solution. // // At some point we probably want to apply an additional grammar to // properly tokenize this where fragment into constituent parts // focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.999992941525346	DESIGN	6.928638825911845E-6	WITHOUT_CLASSIFICATION	9.845133484471316E-8	DEFECT	2.1546406187316284E-8	TEST	6.6148986450647675E-9	IMPLEMENTATION	3.223188306691158E-9	DOCUMENTATION
// Append the text of the current node.	WITHOUT_CLASSIFICATION	0.9999405420364997	WITHOUT_CLASSIFICATION	2.8472601797207808E-5	IMPLEMENTATION	2.7269834065595404E-5	DEFECT	2.0723997794625223E-6	DESIGN	1.348984616493486E-6	DOCUMENTATION	2.9414324156634165E-7	TEST
// If the node has a first child, recurse into the first child.	WITHOUT_CLASSIFICATION	0.9999998905775448	WITHOUT_CLASSIFICATION	9.995383081069975E-8	IMPLEMENTATION	7.735933641145E-9	DESIGN	1.4334475057616146E-9	DEFECT	1.7486993853718064E-10	DOCUMENTATION	1.2437340325931532E-10	TEST
// If there is a second child (RHS), recurse into that child.	WITHOUT_CLASSIFICATION	0.9999340462770249	WITHOUT_CLASSIFICATION	6.51736914184901E-5	DESIGN	6.091346044834918E-7	IMPLEMENTATION	1.582403451942863E-7	DEFECT	7.447028861766013E-9	DOCUMENTATION	5.209578127136469E-9	TEST
// Iterate through the alias,JoinSequence pairs and generate SQL token nodes.	WITHOUT_CLASSIFICATION	0.9999595580003372	WITHOUT_CLASSIFICATION	4.040630550770218E-5	DESIGN	1.852173110046156E-8	DEFECT	1.0560267135505956E-8	DOCUMENTATION	5.945659272873542E-9	TEST	6.664978351672323E-10	IMPLEMENTATION
// If the from element represents a JOIN_FRAGMENT and it is // a theta-style join, convert its type from JOIN_FRAGMENT // to FROM_FRAGMENT	WITHOUT_CLASSIFICATION	0.9999999517640624	WITHOUT_CLASSIFICATION	4.52405485331257E-8	DESIGN	1.4009198927186131E-9	IMPLEMENTATION	1.1489575677775527E-9	DEFECT	4.30186854742769E-10	TEST	1.5324567073885874E-11	DOCUMENTATION
// this is used during SqlGenerator processing	WITHOUT_CLASSIFICATION	0.9993960482189851	WITHOUT_CLASSIFICATION	6.037052769326779E-4	DESIGN	1.3391986686176247E-7	DEFECT	7.431820177000624E-8	TEST	3.104624808414674E-8	DOCUMENTATION	7.219765596798651E-9	IMPLEMENTATION
// If there is a FROM fragment and the FROM element is an explicit, then add the from part.	WITHOUT_CLASSIFICATION	0.9999111623030505	WITHOUT_CLASSIFICATION	8.847939707283423E-5	DESIGN	2.2903670556177073E-7	DEFECT	1.1094323779253713E-7	TEST	1.1852606142650482E-8	DOCUMENTATION	6.4673272412108795E-9	IMPLEMENTATION
/*&& StringHelper.isNotEmpty( frag )*/	WITHOUT_CLASSIFICATION	0.9999514302656987	WITHOUT_CLASSIFICATION	2.7335363465323612E-5	IMPLEMENTATION	1.8846412104083357E-5	DESIGN	1.9581350081840995E-6	DEFECT	2.652576776228508E-7	TEST	1.645660462676141E-7	DOCUMENTATION
// The FROM fragment will probably begin with ', '.  Remove this if it is present.	WITHOUT_CLASSIFICATION	0.9854232999795555	WITHOUT_CLASSIFICATION	0.014464691858229111	DESIGN	9.633091714114891E-5	DEFECT	1.5212134967201489E-5	TEST	3.5458450729561956E-7	DOCUMENTATION	1.1052559981819183E-7	IMPLEMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999977303646874	WITHOUT_CLASSIFICATION	1.9630052216023093E-6	DESIGN	2.782628675576899E-7	IMPLEMENTATION	2.8259568921677684E-8	DEFECT	7.179706982558805E-11	TEST	3.5857438480025014E-11	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person ORDER BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999996036108099	WITHOUT_CLASSIFICATION	3.5326917956256257E-7	IMPLEMENTATION	1.8378687779155957E-8	DEFECT	1.0694757203258767E-8	TEST	1.0205870251837585E-8	DESIGN	3.840695394043956E-9	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9990250596607839	WITHOUT_CLASSIFICATION	7.197662208169288E-4	DESIGN	2.551068528225072E-4	DEFECT	3.581325252719988E-8	DOCUMENTATION	3.1226612337125004E-8	TEST	2.2571181289596528E-10	IMPLEMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9984464567657786	WITHOUT_CLASSIFICATION	0.0014963853013192365	DESIGN	3.99384677959711E-5	DEFECT	1.3613581371753791E-5	IMPLEMENTATION	2.6728084734489484E-6	TEST	9.330752610566418E-7	DOCUMENTATION
//default mode	WITHOUT_CLASSIFICATION	0.9999716712444149	WITHOUT_CLASSIFICATION	2.4194709078979824E-5	DESIGN	2.9088886808097235E-6	IMPLEMENTATION	8.296985833308297E-7	DEFECT	2.4043587865418544E-7	DOCUMENTATION	1.550233633032275E-7	TEST
//QueryJoinFragment join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999991574668631	WITHOUT_CLASSIFICATION	5.009060303688537E-7	DESIGN	2.601142680409124E-7	IMPLEMENTATION	5.810102261681977E-8	DOCUMENTATION	1.3955125521587264E-8	DEFECT	9.456690486787253E-9	TEST
//reset the dotcount (but not the path) //after reset!	WITHOUT_CLASSIFICATION	0.9999667515095476	WITHOUT_CLASSIFICATION	3.14646160815916E-5	DEFECT	1.4651830511313439E-6	IMPLEMENTATION	1.4802896364058291E-7	DESIGN	1.341693796057911E-7	TEST	3.649297643541343E-8	DOCUMENTATION
//after reset!	WITHOUT_CLASSIFICATION	0.9999713823023668	WITHOUT_CLASSIFICATION	1.509161089949658E-5	DEFECT	8.787846877101792E-6	IMPLEMENTATION	3.4705456454673576E-6	DESIGN	9.557633566500591E-7	TEST	3.11930854467157E-7	DOCUMENTATION
// we don't need to worry about any condition in the ON clause // here (toFromFragmentString), since anything in the ON condition // is already applied to the whole query	WITHOUT_CLASSIFICATION	0.8736311379487552	WITHOUT_CLASSIFICATION	0.12340355339956653	DESIGN	0.0023884334368084958	DEFECT	3.748439686556748E-4	DOCUMENTATION	1.931544345658711E-4	IMPLEMENTATION	8.876811648222218E-6	TEST
// bit_length feels a bit broken to me. We have to cast to char in order to // pass when a numeric value is supplied. But of course the answers given will // be wildly different for these two datatypes. 1234.5678 will be 9 bytes as // a char string but will be 8 or 16 bytes as a true numeric. // Jay Nance 2006-09-22	WITHOUT_CLASSIFICATION	0.9095151289487363	WITHOUT_CLASSIFICATION	0.09046664329667624	DESIGN	1.774845028165525E-5	DEFECT	3.5826421849864383E-7	IMPLEMENTATION	7.04966477644759E-8	TEST	5.05434396049511E-8	DOCUMENTATION
// dotcount>=2	WITHOUT_CLASSIFICATION	0.9999863909479159	WITHOUT_CLASSIFICATION	1.2374532551861737E-5	DEFECT	8.946332000198876E-7	DESIGN	2.0547562107923716E-7	IMPLEMENTATION	1.1191853594459157E-7	DOCUMENTATION	2.2492175430212253E-8	TEST
// Do the corresponding RHS	WITHOUT_CLASSIFICATION	0.9999008924022733	WITHOUT_CLASSIFICATION	8.27419989945199E-5	DEFECT	7.558850735493079E-6	DESIGN	5.405778248895803E-6	IMPLEMENTATION	2.8499468806475692E-6	DOCUMENTATION	5.510228671767625E-7	TEST
//if its "id"	WITHOUT_CLASSIFICATION	0.999961751179861	WITHOUT_CLASSIFICATION	3.173486574612051E-5	DESIGN	2.9712454664419475E-6	DEFECT	2.3537850822451996E-6	IMPLEMENTATION	9.328219328302752E-7	TEST	2.5610191135037335E-7	DOCUMENTATION
//or its the id property name	WITHOUT_CLASSIFICATION	0.9998306967953555	WITHOUT_CLASSIFICATION	1.621660146386126E-4	DESIGN	6.475103308826539E-6	DEFECT	4.051390366574047E-7	DOCUMENTATION	2.4168692598630836E-7	TEST	1.5260734460537857E-8	IMPLEMENTATION
//join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999996096406784	WITHOUT_CLASSIFICATION	1.8141344029939385E-7	IMPLEMENTATION	1.5304655794798484E-7	DESIGN	3.869019399596321E-8	DOCUMENTATION	1.217181609246285E-8	DEFECT	5.03731327300966E-9	TEST
//important!!	WITHOUT_CLASSIFICATION	0.9996070750111652	WITHOUT_CLASSIFICATION	2.305047092929401E-4	DESIGN	1.2041693690983683E-4	DEFECT	3.1718808006373734E-5	IMPLEMENTATION	8.044257447495535E-6	DOCUMENTATION	2.2402771781385496E-6	TEST
//String[] keyCols = collPersister.getKeyColumnNames();	WITHOUT_CLASSIFICATION	0.9999982427819502	WITHOUT_CLASSIFICATION	1.3931660920625177E-6	DESIGN	1.8101328201771537E-7	DEFECT	9.628997951280489E-8	TEST	8.122455911271621E-8	IMPLEMENTATION	5.524137190127125E-9	DOCUMENTATION
// an association	WITHOUT_CLASSIFICATION	0.9999977986029543	WITHOUT_CLASSIFICATION	1.2894926892881764E-6	DESIGN	4.3983218008499865E-7	DOCUMENTATION	2.3146710628175397E-7	DEFECT	2.2948562192272246E-7	TEST	1.111944804990684E-8	IMPLEMENTATION
//allow index() function:	WITHOUT_CLASSIFICATION	0.9999165088107627	WITHOUT_CLASSIFICATION	6.467100328405783E-5	DEFECT	1.4290910796016298E-5	IMPLEMENTATION	3.7995461744547726E-6	DESIGN	6.460086926504346E-7	DOCUMENTATION	8.372029017005283E-8	TEST
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9945674518979358	WITHOUT_CLASSIFICATION	0.0034018063663947785	DEFECT	0.001988172992349965	DESIGN	4.029933306625266E-5	TEST	2.2489171362824555E-6	DOCUMENTATION	2.0493116899283406E-8	IMPLEMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9990250596607839	WITHOUT_CLASSIFICATION	7.197662208169288E-4	DESIGN	2.551068528225072E-4	DEFECT	3.581325252719988E-8	DOCUMENTATION	3.1226612337125004E-8	TEST	2.2571181289596528E-10	IMPLEMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9989437551845887	WITHOUT_CLASSIFICATION	8.453062207590073E-4	DESIGN	1.242645136064012E-4	DEFECT	4.664606501492899E-5	IMPLEMENTATION	3.3472881437308715E-5	DOCUMENTATION	6.555134593679722E-6	TEST
// collections of values	WITHOUT_CLASSIFICATION	0.9999959637459316	WITHOUT_CLASSIFICATION	2.0917222536534024E-6	DESIGN	1.8805655547369528E-6	DEFECT	4.161611631652668E-8	IMPLEMENTATION	1.2795466494362588E-8	TEST	9.554677158338453E-9	DOCUMENTATION
//opening paren in new Foo ( ... )	WITHOUT_CLASSIFICATION	0.9987057246765931	WITHOUT_CLASSIFICATION	9.766368315403324E-4	DESIGN	2.5058050889416176E-4	DEFECT	4.290106699628312E-5	IMPLEMENTATION	2.0072487436973583E-5	DOCUMENTATION	4.084428539077812E-6	TEST
//if we are inside a new Result(), but not inside a nested function	WITHOUT_CLASSIFICATION	0.999988686936641	WITHOUT_CLASSIFICATION	1.0739943345173457E-5	DEFECT	4.844688051398796E-7	DESIGN	7.647080607532195E-8	TEST	1.1055946463717378E-8	DOCUMENTATION	1.1244561719575605E-9	IMPLEMENTATION
//special case	WITHOUT_CLASSIFICATION	0.9999836459827504	WITHOUT_CLASSIFICATION	1.5467458849424222E-5	IMPLEMENTATION	4.2842956708995156E-7	DEFECT	2.7196648833218206E-7	DESIGN	1.7422184792134398E-7	DOCUMENTATION	1.1940497118151869E-8	TEST
// the name of an SQL function	WITHOUT_CLASSIFICATION	0.9999907295271913	WITHOUT_CLASSIFICATION	8.65875163047551E-6	DESIGN	3.345532221010262E-7	DEFECT	2.487505370893647E-7	DOCUMENTATION	1.4986636562510468E-8	IMPLEMENTATION	1.3430782418162725E-8	TEST
//null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.9953241178727114	WITHOUT_CLASSIFICATION	0.004671641767977986	DESIGN	2.783401305545993E-6	IMPLEMENTATION	8.975095315066953E-7	DOCUMENTATION	5.285521795333981E-7	DEFECT	3.0896293971735836E-8	TEST
//this is basically a copy/paste of OrderByParser ... might be worth refactoring	WITHOUT_CLASSIFICATION	0.9793170039619447	DESIGN	0.014978328602969822	DEFECT	0.005703572757461432	WITHOUT_CLASSIFICATION	5.236920349934002E-7	IMPLEMENTATION	4.930432369939381E-7	TEST	7.794235200475169E-8	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person GROUP BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999987411471272	WITHOUT_CLASSIFICATION	9.818140218471939E-7	IMPLEMENTATION	1.7360612201632687E-7	DESIGN	7.002716453931804E-8	DEFECT	2.3120785178227445E-8	TEST	1.028477914502368E-8	DOCUMENTATION
// return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.998578537944247	WITHOUT_CLASSIFICATION	0.0014153154208405214	DESIGN	6.117417492554935E-6	DEFECT	1.5073874235618675E-8	DOCUMENTATION	9.446152062879466E-9	TEST	4.697393473538956E-9	IMPLEMENTATION
//register collection role	WITHOUT_CLASSIFICATION	0.9999565903514339	WITHOUT_CLASSIFICATION	3.981420760142255E-5	DESIGN	2.281119759716377E-6	IMPLEMENTATION	9.354184691155692E-7	DEFECT	2.870564908395512E-7	TEST	9.184624497134567E-8	DOCUMENTATION
// The keyword used to specify an identity column, if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.9999999564277828	WITHOUT_CLASSIFICATION	4.2920439240067574E-8	DESIGN	3.1418127212869297E-10	DOCUMENTATION	1.7358396064312842E-10	DEFECT	1.5032363336516762E-10	TEST	1.3689039544775582E-11	IMPLEMENTATION
//.getElementPropertyMapping();	WITHOUT_CLASSIFICATION	0.9999696946532052	WITHOUT_CLASSIFICATION	2.0430739131506196E-5	IMPLEMENTATION	8.095036590552965E-6	DEFECT	8.290152837374623E-7	DESIGN	5.200355584415241E-7	TEST	4.305202303991226E-7	DOCUMENTATION
//crossJoins.add(name);	WITHOUT_CLASSIFICATION	0.9995199772023856	WITHOUT_CLASSIFICATION	4.2660388330600625E-4	DESIGN	2.306253643800824E-5	DEFECT	1.5025737651043801E-5	IMPLEMENTATION	1.292869995794944E-5	DOCUMENTATION	2.4019402613333935E-6	TEST
//ie no select clause in HQL	WITHOUT_CLASSIFICATION	0.999999657610601	WITHOUT_CLASSIFICATION	2.5024900077716584E-7	DESIGN	4.857311440841675E-8	DEFECT	4.091822769766809E-8	DOCUMENTATION	2.054834479413793E-9	IMPLEMENTATION	5.942219968825651E-10	TEST
// initialize the Set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.9999929011621838	WITHOUT_CLASSIFICATION	7.0680956119163994E-6	DESIGN	2.4208386477147276E-8	IMPLEMENTATION	4.6942196932350666E-9	TEST	1.0275377148438786E-9	DEFECT	8.120603202857876E-10	DOCUMENTATION
//ie. no select clause	WITHOUT_CLASSIFICATION	0.9999999338370803	WITHOUT_CLASSIFICATION	4.206374829811548E-8	DESIGN	1.0853366668094343E-8	IMPLEMENTATION	8.170425667626956E-9	DEFECT	4.354143892833988E-9	DOCUMENTATION	7.212352280708011E-10	TEST
//there _was_ a select clause	WITHOUT_CLASSIFICATION	0.999999952521153	WITHOUT_CLASSIFICATION	2.5381463050665398E-8	DESIGN	1.6096631546079686E-8	IMPLEMENTATION	3.897067728576649E-9	DEFECT	1.3060454262146325E-9	TEST	7.976392335242412E-10	DOCUMENTATION
// return the concrete type, or the underlying type if a concrete type // was not specified	WITHOUT_CLASSIFICATION	0.9993197698119707	WITHOUT_CLASSIFICATION	6.769409444598576E-4	DESIGN	2.9612383424499546E-6	DEFECT	3.1580249262149E-7	IMPLEMENTATION	6.558227908814579E-9	TEST	5.644506469405455E-9	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9989437551845887	WITHOUT_CLASSIFICATION	8.453062207590073E-4	DESIGN	1.242645136064012E-4	DEFECT	4.664606501492899E-5	IMPLEMENTATION	3.3472881437308715E-5	DOCUMENTATION	6.555134593679722E-6	TEST
//q.addCollection(collectionName, collectionRole);	WITHOUT_CLASSIFICATION	0.9999817206647547	WITHOUT_CLASSIFICATION	8.645588061593816E-6	IMPLEMENTATION	4.960238386150104E-6	DESIGN	3.640095183375899E-6	DEFECT	7.238439558929707E-7	TEST	3.0956965826432787E-7	DOCUMENTATION
// classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.9995032989586887	WITHOUT_CLASSIFICATION	3.6833852029511353E-4	DEFECT	1.276111203888619E-4	DESIGN	3.741884692331813E-7	IMPLEMENTATION	2.636511113976585E-7	DOCUMENTATION	1.1356104670915719E-7	TEST
// can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.9999990521522774	WITHOUT_CLASSIFICATION	5.351164652972266E-7	DESIGN	3.9690906060147095E-7	DEFECT	1.4237502387331626E-8	DOCUMENTATION	1.3682292031832686E-9	TEST	2.1646507524607104E-10	IMPLEMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9897832689335215	WITHOUT_CLASSIFICATION	0.010212178849888811	DESIGN	3.834697407109697E-6	DEFECT	6.025141965399133E-7	DOCUMENTATION	6.044963655094263E-8	IMPLEMENTATION	5.4555349442412346E-8	TEST
// This is the legacy behaviour for HQL queries...	WITHOUT_CLASSIFICATION	0.9998933519007812	WITHOUT_CLASSIFICATION	1.0237222749751306E-4	DESIGN	4.256136220384571E-6	DEFECT	1.38016529780255E-8	TEST	3.3175965450949827E-9	DOCUMENTATION	2.6162513992294895E-9	IMPLEMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9579999123746705	WITHOUT_CLASSIFICATION	0.037906239212263715	IMPLEMENTATION	0.0026312208177146274	DESIGN	0.0013753628422032366	DEFECT	5.173603639765057E-5	DOCUMENTATION	3.552871675022867E-5	TEST
// not known!	WITHOUT_CLASSIFICATION	0.9579999123746705	WITHOUT_CLASSIFICATION	0.037906239212263715	IMPLEMENTATION	0.0026312208177146274	DESIGN	0.0013753628422032366	DEFECT	5.173603639765057E-5	DOCUMENTATION	3.552871675022867E-5	TEST
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999978443998386	WITHOUT_CLASSIFICATION	1.173488904765647E-6	DESIGN	6.016201182644438E-7	DEFECT	1.8183798008715707E-7	IMPLEMENTATION	1.3107877629035576E-7	DOCUMENTATION	6.757438204844841E-8	TEST
// not known!	WITHOUT_CLASSIFICATION	0.9579999123746705	WITHOUT_CLASSIFICATION	0.037906239212263715	IMPLEMENTATION	0.0026312208177146274	DESIGN	0.0013753628422032366	DEFECT	5.173603639765057E-5	DOCUMENTATION	3.552871675022867E-5	TEST
// not known!	WITHOUT_CLASSIFICATION	0.9579999123746705	WITHOUT_CLASSIFICATION	0.037906239212263715	IMPLEMENTATION	0.0026312208177146274	DESIGN	0.0013753628422032366	DEFECT	5.173603639765057E-5	DOCUMENTATION	3.552871675022867E-5	TEST
//Need this, since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.7850449190988023	WITHOUT_CLASSIFICATION	0.1628485781916944	DESIGN	0.044601922089943916	DEFECT	0.006550529268370231	DOCUMENTATION	7.892307234992555E-4	IMPLEMENTATION	1.648206276900311E-4	TEST
//tokens that close a sub expression //tokens that open a sub expression //tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.9999934505522791	WITHOUT_CLASSIFICATION	5.5137238249561844E-6	DEFECT	1.0098191468950888E-6	DESIGN	1.8563105134320287E-8	TEST	4.352956315626428E-9	IMPLEMENTATION	2.9886877698247024E-9	DOCUMENTATION
//expressionTerminators.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999839559721212	WITHOUT_CLASSIFICATION	1.596175522691414E-5	DESIGN	3.432236108593852E-8	IMPLEMENTATION	3.321406322043445E-8	DEFECT	1.0842953729771387E-8	TEST	3.893274005446696E-9	DOCUMENTATION
//expressionOpeners.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999983170206567	WITHOUT_CLASSIFICATION	1.4797747941804795E-6	DESIGN	1.0873714513041865E-7	IMPLEMENTATION	8.332289851052142E-8	DEFECT	6.643204427748488E-9	TEST	4.501301230473694E-9	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource) // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9927985009128709	WITHOUT_CLASSIFICATION	0.007191666586426284	DESIGN	9.470919281341847E-6	DEFECT	2.1484211989943752E-7	DOCUMENTATION	1.329628077748828E-7	IMPLEMENTATION	1.3776493845182012E-8	TEST
// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and "do the right thing" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character (what is to be trimmed off?) // the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.9990761881721336	WITHOUT_CLASSIFICATION	9.223303424159489E-4	DESIGN	9.292854045276357E-7	DOCUMENTATION	4.6506747069523485E-7	IMPLEMENTATION	4.662714687829335E-8	DEFECT	4.0505428407425384E-8	TEST
//Inside a BETWEEN ... AND ... expression	WITHOUT_CLASSIFICATION	0.9986192792582838	WITHOUT_CLASSIFICATION	0.0011061417341171303	DEFECT	1.8930679513873557E-4	IMPLEMENTATION	8.220289203466115E-5	DESIGN	2.7283436113726912E-6	DOCUMENTATION	3.4097681419967585E-7	TEST
//were an odd or even number of NOTs encountered //the join string built up by compound paths inside this expression //a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.9999997143507416	WITHOUT_CLASSIFICATION	2.8523754868513327E-7	DESIGN	2.6007036997366035E-10	DOCUMENTATION	1.1157164108261906E-10	DEFECT	3.91293352239559E-11	TEST	9.382077957224455E-13	IMPLEMENTATION
//ie. a many-to-many	WITHOUT_CLASSIFICATION	0.9985339380091528	WITHOUT_CLASSIFICATION	0.0014027643412444356	DESIGN	4.476280248085816E-5	DEFECT	1.5294519834112828E-5	IMPLEMENTATION	2.560691148947896E-6	DOCUMENTATION	6.796361389137939E-7	TEST
//Cope with [,]	WITHOUT_CLASSIFICATION	0.9996587036370175	WITHOUT_CLASSIFICATION	3.197730314239497E-4	DESIGN	1.2861906330044605E-5	IMPLEMENTATION	4.04874682866375E-6	TEST	2.4160505582273577E-6	DOCUMENTATION	2.1966278416014132E-6	DEFECT
//Cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.9987213093650418	WITHOUT_CLASSIFICATION	0.0012766193735189776	DESIGN	1.467075725533202E-6	DEFECT	3.9883448360108723E-7	IMPLEMENTATION	1.5796462532185904E-7	DOCUMENTATION	4.738660489821592E-8	TEST
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9997808047478963	WITHOUT_CLASSIFICATION	2.049956693861183E-4	DESIGN	8.699064381870883E-6	DEFECT	5.188377551863791E-6	IMPLEMENTATION	2.1666611942406908E-7	DOCUMENTATION	9.547466447281513E-8	TEST
//Cope with a subselect	WITHOUT_CLASSIFICATION	0.9999491856686307	WITHOUT_CLASSIFICATION	5.007294853355171E-5	DESIGN	4.455230615110028E-7	DEFECT	1.2027083349288663E-7	TEST	1.168683962940509E-7	IMPLEMENTATION	5.872054453323929E-8	DOCUMENTATION
//Cope with special cases of AND, NOT, ()	WITHOUT_CLASSIFICATION	0.9999068211688329	WITHOUT_CLASSIFICATION	5.412994497766995E-5	IMPLEMENTATION	2.31577092505562E-5	DESIGN	7.470844512227005E-6	DEFECT	4.513776183188158E-6	TEST	3.9065562434886344E-6	DOCUMENTATION
//Close extra brackets we opened	WITHOUT_CLASSIFICATION	0.9999943929847863	WITHOUT_CLASSIFICATION	5.461566455091458E-6	DESIGN	1.0646344529423352E-7	DEFECT	1.6790762610500368E-8	IMPLEMENTATION	1.204822680184079E-8	DOCUMENTATION	1.0146323761899923E-8	TEST
//take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.9995481886624813	WITHOUT_CLASSIFICATION	2.8094364393858304E-4	DEFECT	1.693874191063504E-4	DESIGN	1.1230163907835777E-6	TEST	2.188632970154552E-7	DOCUMENTATION	1.3839478603925342E-7	IMPLEMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999999277450621	WITHOUT_CLASSIFICATION	6.7735514387399E-8	DESIGN	1.5996094475656325E-9	DEFECT	1.395128889888886E-9	DOCUMENTATION	8.522942040483166E-10	IMPLEMENTATION	6.723908992157785E-10	TEST
//process a token, mapping OO path expressions to SQL expressions	WITHOUT_CLASSIFICATION	0.9999951194286865	WITHOUT_CLASSIFICATION	4.383146362897043E-6	DEFECT	3.286172753576253E-7	DESIGN	1.1689399184422156E-7	IMPLEMENTATION	4.6222795840679036E-8	DOCUMENTATION	5.6908877309444934E-9	TEST
//Open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.9003291254483619	WITHOUT_CLASSIFICATION	0.09899262340593042	DESIGN	6.044701315480314E-4	DEFECT	3.79973796296056E-5	DOCUMENTATION	2.8773639389966713E-5	TEST	7.009995140031072E-6	IMPLEMENTATION
//Cope with special cases of AND, NOT, )	WITHOUT_CLASSIFICATION	0.9998669549535468	WITHOUT_CLASSIFICATION	6.396759167718867E-5	DESIGN	4.713529163898247E-5	IMPLEMENTATION	9.511599535417176E-6	DEFECT	7.285997051272195E-6	TEST	5.144566550387408E-6	DOCUMENTATION
// the next one up must also be	WITHOUT_CLASSIFICATION	0.9998505435016827	WITHOUT_CLASSIFICATION	1.2884315979662454E-4	DESIGN	1.964675719808648E-5	IMPLEMENTATION	3.744832823267053E-7	TEST	3.4744766440466814E-7	DEFECT	2.446503758402622E-7	DOCUMENTATION
// Add any joins	WITHOUT_CLASSIFICATION	0.9999879642147895	WITHOUT_CLASSIFICATION	6.716519884437907E-6	IMPLEMENTATION	3.0618917543750884E-6	DEFECT	1.572745776485275E-6	DOCUMENTATION	6.106128597004369E-7	DESIGN	7.401493538082507E-8	TEST
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999999277450621	WITHOUT_CLASSIFICATION	6.7735514387399E-8	DESIGN	1.5996094475656325E-9	DEFECT	1.395128889888886E-9	DOCUMENTATION	8.522942040483166E-10	IMPLEMENTATION	6.723908992157785E-10	TEST
//named query parameter	WITHOUT_CLASSIFICATION	0.9984464567657786	WITHOUT_CLASSIFICATION	0.0014963853013192365	DESIGN	3.99384677959711E-5	DEFECT	1.3613581371753791E-5	IMPLEMENTATION	2.6728084734489484E-6	TEST	9.330752610566418E-7	DOCUMENTATION
//path expression	WITHOUT_CLASSIFICATION	0.9999611103156344	WITHOUT_CLASSIFICATION	1.7544922175141706E-5	DEFECT	1.1106715639822948E-5	IMPLEMENTATION	9.583299293722922E-6	DESIGN	4.803686717532168E-7	DOCUMENTATION	1.7437858510521479E-7	TEST
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999999596323142	WITHOUT_CLASSIFICATION	2.6709800166587283E-7	IMPLEMENTATION	9.579102868199436E-8	DEFECT	2.3794631198997805E-8	DESIGN	1.2742964144745022E-8	TEST	4.2502325470950936E-9	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999996631612262	WITHOUT_CLASSIFICATION	1.5804088075834184E-7	IMPLEMENTATION	9.229090654450119E-8	DEFECT	7.812729435269495E-8	DESIGN	6.4944747946916976E-9	TEST	1.885217312618986E-9	DOCUMENTATION
//anything else	WITHOUT_CLASSIFICATION	0.999886175948855	WITHOUT_CLASSIFICATION	1.0258483133747502E-4	IMPLEMENTATION	7.049279007919384E-6	DESIGN	2.108879076223516E-6	DOCUMENTATION	1.3369058801074485E-6	DEFECT	7.441558432234413E-7	TEST
// the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.9999761362565317	WITHOUT_CLASSIFICATION	2.0396403921785683E-5	DESIGN	3.304782574491792E-6	DEFECT	1.3665034734296572E-7	IMPLEMENTATION	2.099433197635161E-8	DOCUMENTATION	4.912292665491394E-9	TEST
// careful with this!	WITHOUT_CLASSIFICATION	0.99999358712657	WITHOUT_CLASSIFICATION	6.04607059716745E-6	DESIGN	1.3947038092098466E-7	IMPLEMENTATION	1.1188125041134915E-7	DEFECT	8.9581696079687E-8	TEST	2.5869505461622733E-8	DOCUMENTATION
// the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.9934642821856259	WITHOUT_CLASSIFICATION	0.006251682405214999	IMPLEMENTATION	1.9108338531323126E-4	DEFECT	9.045506823831237E-5	DESIGN	1.2844071154719464E-6	TEST	1.2125484921678465E-6	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999973549981725	WITHOUT_CLASSIFICATION	2.2783955183371997E-6	IMPLEMENTATION	1.3468403436479285E-7	DOCUMENTATION	1.1477005107082015E-7	DEFECT	6.172531424261298E-8	DESIGN	5.542690938459187E-8	TEST
//NOTICE: no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.997877027303057	WITHOUT_CLASSIFICATION	0.002101759215338148	DESIGN	2.0844895463564724E-5	IMPLEMENTATION	3.046314688549035E-7	DOCUMENTATION	4.787896284852818E-8	TEST	1.607570945834821E-8	DEFECT
//cannot instantiate	WITHOUT_CLASSIFICATION	0.9995765929265165	WITHOUT_CLASSIFICATION	4.0938414322948995E-4	DESIGN	1.2275489202262607E-5	DEFECT	8.09335701378292E-7	DOCUMENTATION	6.299663775530042E-7	IMPLEMENTATION	3.081389728613185E-7	TEST
// start by looking for HQL keywords...	WITHOUT_CLASSIFICATION	0.9999991657671695	WITHOUT_CLASSIFICATION	5.35347900045707E-7	DEFECT	2.9107343876975623E-7	DESIGN	5.869914140281683E-9	TEST	1.168348602684906E-9	IMPLEMENTATION	7.732288540852885E-10	DOCUMENTATION
// inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.9999946484495797	WITHOUT_CLASSIFICATION	4.572606426195491E-6	DESIGN	7.437769931472999E-7	DEFECT	1.4389244256596947E-8	TEST	1.18223314589666E-8	IMPLEMENTATION	8.955425164653715E-9	DOCUMENTATION
// 'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.9999999707427769	WITHOUT_CLASSIFICATION	2.5591172599458917E-8	IMPLEMENTATION	2.1694338623200905E-9	DESIGN	1.2531189913378937E-9	DEFECT	1.472331228801344E-10	TEST	9.626449005360272E-11	DOCUMENTATION
// now anything that is not a HQL keyword	WITHOUT_CLASSIFICATION	0.9998954125234835	WITHOUT_CLASSIFICATION	5.0790631503016316E-5	DEFECT	2.777699596816398E-5	IMPLEMENTATION	2.503803208172564E-5	DESIGN	8.791930456621904E-7	TEST	1.0262391814179993E-7	DOCUMENTATION
// process the "old" HQL style where aliases appear _first_ // ie. using the IN or IN CLASS constructions	WITHOUT_CLASSIFICATION	0.9999999866885607	WITHOUT_CLASSIFICATION	8.649289387695471E-9	DESIGN	2.6479803997800422E-9	DEFECT	1.950196313503848E-9	IMPLEMENTATION	3.9660234636036545E-11	TEST	2.4313056772080876E-11	DOCUMENTATION
// treat it as a classname	WITHOUT_CLASSIFICATION	0.9999819482982598	WITHOUT_CLASSIFICATION	8.930999882631962E-6	DEFECT	8.910892949095765E-6	DESIGN	9.925661334340713E-8	IMPLEMENTATION	9.399587678415264E-8	TEST	1.655641840021538E-8	DOCUMENTATION
// treat it as a path expression	WITHOUT_CLASSIFICATION	0.9998513150431074	WITHOUT_CLASSIFICATION	1.0882966140700703E-4	DEFECT	3.831876430154065E-5	IMPLEMENTATION	1.2892996405055402E-6	DESIGN	1.9672547774607807E-7	TEST	5.050606572183235E-8	DOCUMENTATION
// starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.999768643306586	WITHOUT_CLASSIFICATION	2.3123676355226642E-4	DESIGN	8.618340555737646E-8	DEFECT	2.2653956297115383E-8	TEST	8.489600261924491E-9	IMPLEMENTATION	2.6028997087201336E-9	DOCUMENTATION
// starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.9999844631966218	WITHOUT_CLASSIFICATION	1.4551480634046023E-5	DESIGN	8.71893520552124E-7	DEFECT	9.224287854219432E-8	IMPLEMENTATION	1.8571463419255276E-8	TEST	2.61488169491364E-9	DOCUMENTATION
//allow ODMG OQL style: from Person p, p.cars c	WITHOUT_CLASSIFICATION	0.9901906891123285	WITHOUT_CLASSIFICATION	0.009480962269791966	DESIGN	2.762804014389404E-4	DEFECT	4.9140777767484315E-5	IMPLEMENTATION	1.869270269686092E-6	TEST	1.0581684033740105E-6	DOCUMENTATION
//handle quoted strings	WITHOUT_CLASSIFICATION	0.9999569783349337	WITHOUT_CLASSIFICATION	3.9012096634139965E-5	DESIGN	2.382749947755011E-6	IMPLEMENTATION	1.0219370120721764E-6	TEST	3.724371943035507E-7	DEFECT	2.3244427794146866E-7	DOCUMENTATION
// Object insertions, updates, and deletions have list semantics because // they must happen in the right order so as to respect referential // integrity	WITHOUT_CLASSIFICATION	0.9999989406247902	WITHOUT_CLASSIFICATION	6.026274113830208E-7	DESIGN	4.406763324170534E-7	DEFECT	1.1452619441978734E-8	IMPLEMENTATION	4.327237967329187E-9	DOCUMENTATION	2.916086979004895E-10	TEST
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999973549981725	WITHOUT_CLASSIFICATION	2.2783955183371997E-6	IMPLEMENTATION	1.3468403436479285E-7	DOCUMENTATION	1.1477005107082015E-7	DEFECT	6.172531424261298E-8	DESIGN	5.542690938459187E-8	TEST
//ignore whitespace	WITHOUT_CLASSIFICATION	0.9999955828474836	WITHOUT_CLASSIFICATION	3.878247525897016E-6	DESIGN	2.5949627675208453E-7	IMPLEMENTATION	1.7745316292506144E-7	DOCUMENTATION	7.200375847409997E-8	TEST	2.9951792396250406E-8	DEFECT
//do replacements	WITHOUT_CLASSIFICATION	0.9998409344815499	WITHOUT_CLASSIFICATION	1.1862768193682828E-4	DESIGN	3.924076527935383E-5	IMPLEMENTATION	5.617380437617314E-7	DOCUMENTATION	5.01229032084227E-7	DEFECT	1.3410415815698613E-7	TEST
//handle HQL2 collection syntax	WITHOUT_CLASSIFICATION	0.9999126727470073	WITHOUT_CLASSIFICATION	4.0577398427475706E-5	DESIGN	3.6802466845692324E-5	IMPLEMENTATION	8.383989087792447E-6	DEFECT	1.434221039580379E-6	DOCUMENTATION	1.2917759231321523E-7	TEST
// uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.9992211992701142	WITHOUT_CLASSIFICATION	7.764137373853366E-4	DESIGN	1.0604402764498652E-6	IMPLEMENTATION	7.742609718735885E-7	DEFECT	4.5454619457100843E-7	TEST	9.774505745988504E-8	DOCUMENTATION
// AbstractSelectingDelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998347039732	WITHOUT_CLASSIFICATION	1.4061123813211757E-6	DESIGN	1.386396920230169E-7	TEST	9.812475316224726E-8	IMPLEMENTATION	5.119950708984212E-9	DEFECT	4.963490674113449E-9	DOCUMENTATION
//hilo params	WITHOUT_CLASSIFICATION	0.9999672705654263	WITHOUT_CLASSIFICATION	2.4169862266315927E-5	DESIGN	7.031820724650054E-6	IMPLEMENTATION	9.383871069829597E-7	DEFECT	4.001380747997195E-7	TEST	1.8922640111158058E-7	DOCUMENTATION
//sql = query;	WITHOUT_CLASSIFICATION	0.9999854339069025	WITHOUT_CLASSIFICATION	1.0483217959005829E-5	DESIGN	2.5214738949248103E-6	IMPLEMENTATION	1.3568189705491012E-6	DEFECT	1.078108100921649E-7	TEST	9.677146291786573E-8	DOCUMENTATION
// performance opt	WITHOUT_CLASSIFICATION	0.9999849895051819	WITHOUT_CLASSIFICATION	7.156886550952811E-6	DESIGN	5.964785479505722E-6	IMPLEMENTATION	1.169163622351658E-6	DOCUMENTATION	6.90302372597392E-7	DEFECT	2.9356792678283416E-8	TEST
//sql = update;	WITHOUT_CLASSIFICATION	0.9999943911920255	WITHOUT_CLASSIFICATION	3.1737515181712287E-6	IMPLEMENTATION	2.0943164829421965E-6	DESIGN	2.705231741565485E-7	DEFECT	4.096808368771395E-8	DOCUMENTATION	2.9248715689356677E-8	TEST
//hilo config	WITHOUT_CLASSIFICATION	0.9997024811215603	WITHOUT_CLASSIFICATION	1.7529196825313877E-4	IMPLEMENTATION	7.865662023994597E-5	DESIGN	3.0413242889292133E-5	DEFECT	1.0755979523980892E-5	DOCUMENTATION	2.401067533409013E-6	TEST
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999997880327892	WITHOUT_CLASSIFICATION	1.828608474020561E-7	DESIGN	1.489541236578895E-8	DOCUMENTATION	5.982989924017624E-9	DEFECT	4.443628778442612E-9	IMPLEMENTATION	3.784332269949424E-9	TEST
// don't allow comments on these insert statements as comments totally // blow up the Oracle getGeneratedKeys "support" :(	WITHOUT_CLASSIFICATION	0.999995844203407	WITHOUT_CLASSIFICATION	3.472967732989676E-6	DEFECT	6.801222042148604E-7	DESIGN	1.459291919706089E-9	IMPLEMENTATION	1.1955018851775439E-9	TEST	5.186187992832377E-11	DOCUMENTATION
//abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.9445558653470514	WITHOUT_CLASSIFICATION	0.037257275481258685	DESIGN	0.018064911754102988	IMPLEMENTATION	9.431591786886836E-5	DEFECT	2.135974371138007E-5	DOCUMENTATION	6.271756006788882E-6	TEST
//throw new IdentifierGenerationException("save associated object first, or disable cascade for inverse association");	WITHOUT_CLASSIFICATION	0.9999999988941607	WITHOUT_CLASSIFICATION	8.85698991858209E-10	IMPLEMENTATION	1.857057316226658E-10	TEST	2.7355359593373934E-11	DOCUMENTATION	6.717828010191644E-12	DESIGN	3.613833371932664E-13	DEFECT
// intentionally empty	WITHOUT_CLASSIFICATION	0.999906322955385	WITHOUT_CLASSIFICATION	9.322978057345036E-5	DESIGN	2.5628418703942373E-7	DEFECT	1.5369499505241438E-7	DOCUMENTATION	2.6784455240985085E-8	IMPLEMENTATION	1.0500404385992159E-8	TEST
//do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.9999990362622025	WITHOUT_CLASSIFICATION	7.476193217334958E-7	DEFECT	1.8911036345818786E-7	DESIGN	2.1791540343124398E-8	DOCUMENTATION	5.092909642798429E-9	TEST	1.2366218079504292E-10	IMPLEMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999989697567977	WITHOUT_CLASSIFICATION	7.501808832344908E-7	DESIGN	2.2826978956271413E-7	IMPLEMENTATION	2.1166433863801832E-8	TEST	1.7534603006874917E-8	DOCUMENTATION	1.3091492632421377E-8	DEFECT
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999997880327892	WITHOUT_CLASSIFICATION	1.828608474020561E-7	DESIGN	1.489541236578895E-8	DOCUMENTATION	5.982989924017624E-9	DEFECT	4.443628778442612E-9	IMPLEMENTATION	3.784332269949424E-9	TEST
// do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.999999975785147	WITHOUT_CLASSIFICATION	1.715683179813064E-8	DESIGN	3.468970497204762E-9	IMPLEMENTATION	1.9910281217932355E-9	DEFECT	1.0710997489317472E-9	TEST	5.269227959195651E-10	DOCUMENTATION
/* COLUMN and TABLE should be renamed but it would break the public API */	WITHOUT_CLASSIFICATION	0.9716756085920041	WITHOUT_CLASSIFICATION	0.02589067874549065	DESIGN	0.0024249086230149377	DEFECT	3.311713894187609E-6	TEST	2.789413253680161E-6	DOCUMENTATION	2.702912342473208E-6	IMPLEMENTATION
// Loaded entity instances, by EntityKey	WITHOUT_CLASSIFICATION	0.9999986392027604	WITHOUT_CLASSIFICATION	1.1150035717521628E-6	DESIGN	2.164193027635882E-7	DEFECT	2.4696852950124674E-8	DOCUMENTATION	3.9585405861073395E-9	TEST	7.189715226930088E-10	IMPLEMENTATION
// if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.9994435489346997	WITHOUT_CLASSIFICATION	4.0533458156562647E-4	DESIGN	1.4354659912581933E-4	IMPLEMENTATION	4.138864947488884E-6	TEST	2.058780453443685E-6	DOCUMENTATION	1.3722392080245134E-6	DEFECT
// the default...	WITHOUT_CLASSIFICATION	0.9997312128005803	WITHOUT_CLASSIFICATION	1.9775209439245995E-4	DEFECT	5.0341770833352685E-5	IMPLEMENTATION	1.939916179429409E-5	DESIGN	9.425363850642079E-7	DOCUMENTATION	3.5163601451856367E-7	TEST
// unfortunately not really safe to normalize this // to 1 as an initial value like we do the others // because we would not be able to control this if // we are using a sequence...	WITHOUT_CLASSIFICATION	0.9999996628467949	WITHOUT_CLASSIFICATION	3.102424269465545E-7	IMPLEMENTATION	2.61721120642995E-8	DESIGN	3.84464721268769E-10	DEFECT	2.2318561930151963E-10	TEST	1.3101599406394435E-10	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.999906322955385	WITHOUT_CLASSIFICATION	9.322978057345036E-5	DESIGN	2.5628418703942373E-7	DEFECT	1.5369499505241438E-7	DOCUMENTATION	2.6784455240985085E-8	IMPLEMENTATION	1.0500404385992159E-8	TEST
// Identity map of CollectionEntry instances, by the collection wrapper	WITHOUT_CLASSIFICATION	0.9999997466968316	WITHOUT_CLASSIFICATION	1.5256556302218215E-7	DEFECT	5.166107598333712E-8	IMPLEMENTATION	4.620311015617286E-8	DESIGN	1.6848734014027373E-9	DOCUMENTATION	1.1885460175262327E-9	TEST
// general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997457724397	WITHOUT_CLASSIFICATION	1.6023056835691504E-7	DESIGN	7.243613756231351E-8	DEFECT	1.8284951312746682E-8	IMPLEMENTATION	1.7233753833737703E-9	DOCUMENTATION	1.5525278284902608E-9	TEST
// table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999994595060118	WITHOUT_CLASSIFICATION	4.91801418237595E-7	DESIGN	4.3856157073030684E-8	IMPLEMENTATION	2.581010788805452E-9	TEST	1.3576970840684558E-9	DEFECT	8.977048953919423E-10	DOCUMENTATION
// Configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9971371576590784	WITHOUT_CLASSIFICATION	0.002813410559488998	IMPLEMENTATION	4.3752420248980815E-5	DESIGN	4.1122308258052205E-6	DEFECT	9.01674693737465E-7	TEST	6.654556641171972E-7	DOCUMENTATION
// IdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9954772460684729	WITHOUT_CLASSIFICATION	0.0045123795085204735	IMPLEMENTATION	8.287217677103382E-6	DESIGN	1.7069574609844058E-6	DEFECT	2.414730585444298E-7	TEST	1.387748100123312E-7	DOCUMENTATION
// PersistentIdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.998486335988547	WITHOUT_CLASSIFICATION	0.0015101156311007296	IMPLEMENTATION	3.082532553973207E-6	DESIGN	2.9170036800925914E-7	TEST	1.3810589749768774E-7	DEFECT	3.604153284058096E-8	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999999020183105	WITHOUT_CLASSIFICATION	8.393269431636065E-8	DEFECT	9.92154381624332E-9	DESIGN	1.7097397449720557E-9	DOCUMENTATION	1.688664861067297E-9	IMPLEMENTATION	7.290468884593522E-10	TEST
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999999020183105	WITHOUT_CLASSIFICATION	8.393269431636065E-8	DEFECT	9.92154381624332E-9	DESIGN	1.7097397449720557E-9	DOCUMENTATION	1.688664861067297E-9	IMPLEMENTATION	7.290468884593522E-10	TEST
//fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.9989792035385483	WITHOUT_CLASSIFICATION	0.0010091250076221722	DESIGN	9.538640429173747E-6	DEFECT	1.7322008387908223E-6	TEST	3.0104509713649747E-7	DOCUMENTATION	9.956746448301278E-8	IMPLEMENTATION
// we just hit the last position	WITHOUT_CLASSIFICATION	0.9999983350478086	WITHOUT_CLASSIFICATION	9.749374762637756E-7	IMPLEMENTATION	4.538870102667494E-7	DESIGN	1.1860319303641026E-7	DEFECT	9.375222024683208E-8	DOCUMENTATION	2.3772291568938038E-8	TEST
// scroll ahead	WITHOUT_CLASSIFICATION	0.999970347466059	WITHOUT_CLASSIFICATION	2.5677620580211793E-5	DESIGN	3.4528758573343366E-6	IMPLEMENTATION	3.421997378460844E-7	DEFECT	1.4436541470329072E-7	DOCUMENTATION	3.5472350910288224E-8	TEST
// scroll backward	WITHOUT_CLASSIFICATION	0.9999882036691112	WITHOUT_CLASSIFICATION	5.90110085709507E-6	DESIGN	5.3186195345954025E-6	DEFECT	5.087092247104143E-7	IMPLEMENTATION	4.660145640148868E-8	DOCUMENTATION	2.1299815856935506E-8	TEST
// we have not yet hit the last result...	WITHOUT_CLASSIFICATION	0.8403595602620529	WITHOUT_CLASSIFICATION	0.1595551851658092	DEFECT	7.162049324295009E-5	IMPLEMENTATION	1.186570091573896E-5	TEST	1.1051949640111365E-6	DESIGN	6.631830152512705E-7	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999993068330976	WITHOUT_CLASSIFICATION	6.381207369882789E-6	DESIGN	2.54034583051723E-7	IMPLEMENTATION	2.242572177652842E-7	DEFECT	5.278244715559179E-8	TEST	1.938740603717066E-8	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999974145526666	WITHOUT_CLASSIFICATION	1.003576364345578E-6	DESIGN	8.954555523938592E-7	IMPLEMENTATION	4.4316227914762007E-7	DEFECT	1.5857569876074773E-7	DOCUMENTATION	8.467743886005495E-8	TEST
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999957051231633	WITHOUT_CLASSIFICATION	1.8822986184233081E-6	IMPLEMENTATION	1.5212294577017668E-6	DESIGN	7.239292479931378E-7	DEFECT	1.5830368099238437E-7	TEST	9.115831577475322E-9	DOCUMENTATION
// do this when all the properties are updateable since there is // a certain likelihood that the information will already be // snapshot-cached.	WITHOUT_CLASSIFICATION	0.9827418096779824	WITHOUT_CLASSIFICATION	0.01725704214019437	DESIGN	4.6712949492470517E-7	DEFECT	4.038757735456276E-7	DOCUMENTATION	2.485184475649092E-7	IMPLEMENTATION	2.8658107162616504E-8	TEST
// Inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999512914135	WITHOUT_CLASSIFICATION	3.086091523864106E-8	DEFECT	9.856579505056836E-9	DESIGN	4.245530757928442E-9	TEST	2.51860819515674E-9	IMPLEMENTATION	1.2269528461922052E-9	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999993068330976	WITHOUT_CLASSIFICATION	6.381207369882789E-6	DESIGN	2.54034583051723E-7	IMPLEMENTATION	2.242572177652842E-7	DEFECT	5.278244715559179E-8	TEST	1.938740603717066E-8	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999974145526666	WITHOUT_CLASSIFICATION	1.003576364345578E-6	DESIGN	8.954555523938592E-7	IMPLEMENTATION	4.4316227914762007E-7	DEFECT	1.5857569876074773E-7	DOCUMENTATION	8.467743886005495E-8	TEST
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999957051231633	WITHOUT_CLASSIFICATION	1.8822986184233081E-6	IMPLEMENTATION	1.5212294577017668E-6	DESIGN	7.239292479931378E-7	DEFECT	1.5830368099238437E-7	TEST	9.115831577475322E-9	DOCUMENTATION
// Caches	WITHOUT_CLASSIFICATION	0.9999937227078872	WITHOUT_CLASSIFICATION	6.108323312009908E-6	DESIGN	6.088303849394134E-8	DEFECT	4.42501187964084E-8	DOCUMENTATION	3.713946452390218E-8	TEST	2.6696178988803747E-8	IMPLEMENTATION
//Generators:	WITHOUT_CLASSIFICATION	0.9984838070311133	WITHOUT_CLASSIFICATION	0.0014516533166490158	DESIGN	5.1806078606808113E-5	IMPLEMENTATION	4.837606295496172E-6	TEST	4.325791121815801E-6	DEFECT	3.570176213835359E-6	DOCUMENTATION
// cache region is defined by the root-class in the hierarchy...	WITHOUT_CLASSIFICATION	0.9999966727148674	WITHOUT_CLASSIFICATION	3.029311052047888E-6	DESIGN	2.970209668391079E-7	DEFECT	3.996791327818784E-10	IMPLEMENTATION	3.178119527422712E-10	TEST	2.3562265843659056E-10	DOCUMENTATION
//check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.995628398844547	WITHOUT_CLASSIFICATION	0.004365142786446954	DESIGN	3.1680012164787377E-6	DEFECT	2.2566017144402295E-6	IMPLEMENTATION	7.978604371675958E-7	TEST	2.3590563786085086E-7	DOCUMENTATION
// after *all* persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.9999744235621244	WITHOUT_CLASSIFICATION	2.54277851832557E-5	DESIGN	1.2513852634170568E-7	IMPLEMENTATION	1.7698543955433694E-8	DEFECT	5.122864690959505E-9	TEST	6.927573658381039E-10	DOCUMENTATION
// if we get here, it is possible that we have a proxy 'in the way' of the merge map resolution... // 	WITHOUT_CLASSIFICATION	0.9998625196445275	WITHOUT_CLASSIFICATION	1.1142322047395059E-4	DEFECT	2.5744533184924027E-5	DESIGN	3.0155834944665503E-7	TEST	9.782957088002377E-9	IMPLEMENTATION	1.260507054013702E-9	DOCUMENTATION
//JNDI + Serialization:	WITHOUT_CLASSIFICATION	0.9999958421816233	WITHOUT_CLASSIFICATION	2.5156439732714205E-6	DEFECT	1.1901366795136922E-6	DESIGN	2.0833888416804554E-7	IMPLEMENTATION	1.954255768591387E-7	DOCUMENTATION	4.827326285889826E-8	TEST
//checking for named queries	WITHOUT_CLASSIFICATION	0.9835278304832407	WITHOUT_CLASSIFICATION	0.016118713682916428	DESIGN	2.5323576967928665E-4	IMPLEMENTATION	5.908642220342023E-5	TEST	3.1176826417204215E-5	DEFECT	9.95681554309051E-6	DOCUMENTATION
//stats	WITHOUT_CLASSIFICATION	0.9996987882464127	WITHOUT_CLASSIFICATION	2.807448528830593E-4	DESIGN	7.635986998163538E-6	DEFECT	5.8716808845069456E-6	IMPLEMENTATION	4.242946671739112E-6	TEST	2.716286149880141E-6	DOCUMENTATION
// EntityNotFoundDelegate	WITHOUT_CLASSIFICATION	0.9999658324494425	WITHOUT_CLASSIFICATION	3.3856518353669764E-5	DESIGN	1.5324347520405918E-7	TEST	9.192877694458803E-8	DEFECT	3.615371178671796E-8	DOCUMENTATION	2.970623992394073E-8	IMPLEMENTATION
// Check named HQL queries	WITHOUT_CLASSIFICATION	0.9999944840859908	WITHOUT_CLASSIFICATION	5.3914380928867565E-6	DESIGN	4.6247455864640175E-8	IMPLEMENTATION	4.173395252108633E-8	DEFECT	2.5456109568375964E-8	TEST	1.1038398396915628E-8	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9859354577420445	WITHOUT_CLASSIFICATION	0.013475075849326435	DESIGN	4.7469434195211436E-4	DEFECT	9.059499322145698E-5	TEST	2.2449051206839575E-5	IMPLEMENTATION	1.728022248709314E-6	DOCUMENTATION
//prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.9950021719980956	WITHOUT_CLASSIFICATION	0.004815580012214746	DESIGN	1.7809052442040892E-4	DEFECT	2.0009704489125496E-6	DOCUMENTATION	1.1074406102617572E-6	TEST	1.0490542100637377E-6	IMPLEMENTATION
// from javax.naming.Referenceable	WITHOUT_CLASSIFICATION	0.9997186595959291	WITHOUT_CLASSIFICATION	2.779692146347566E-4	DESIGN	1.5806239186085192E-6	DEFECT	8.932653246476244E-7	DOCUMENTATION	7.411260834019561E-7	IMPLEMENTATION	1.5617410934539058E-7	TEST
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999199302112652	WITHOUT_CLASSIFICATION	7.709512614880057E-5	DESIGN	1.8266904714059838E-6	IMPLEMENTATION	1.006476400069946E-6	DEFECT	1.121011157482892E-7	DOCUMENTATION	2.939459887512246E-8	TEST
//for a dynamic-class	WITHOUT_CLASSIFICATION	0.9999403814960217	WITHOUT_CLASSIFICATION	5.753346059569545E-5	DESIGN	1.927459538082112E-6	DEFECT	1.1911984410518314E-7	DOCUMENTATION	2.7649969604642713E-8	TEST	1.0814030748217883E-8	IMPLEMENTATION
//test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.9990212910206725	WITHOUT_CLASSIFICATION	8.641888482481246E-4	DESIGN	1.1404822596452597E-4	TEST	4.4814125789243687E-7	DOCUMENTATION	2.246690554321001E-8	DEFECT	1.2969514274713237E-9	IMPLEMENTATION
//NOTE EARLY EXIT	WITHOUT_CLASSIFICATION	0.9998871045924387	WITHOUT_CLASSIFICATION	5.577852565547782E-5	DESIGN	4.755789367656975E-5	IMPLEMENTATION	4.746827467111809E-6	DEFECT	2.4774980123135724E-6	TEST	2.3346627497968104E-6	DOCUMENTATION
// for backward-compatability	WITHOUT_CLASSIFICATION	0.9999935717100609	WITHOUT_CLASSIFICATION	5.834158616471396E-6	DESIGN	5.091452512716325E-7	DEFECT	7.17640269890239E-8	IMPLEMENTATION	7.732714483904214E-9	TEST	5.489329873523786E-9	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999998713206057	WITHOUT_CLASSIFICATION	4.4363455704127955E-8	DESIGN	4.432512859779863E-8	DEFECT	3.1488013663644E-8	IMPLEMENTATION	4.9966487493162076E-9	TEST	3.506147517773568E-9	DOCUMENTATION
//to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.9999922403238964	WITHOUT_CLASSIFICATION	7.653990662324504E-6	DESIGN	7.510200866395565E-8	DEFECT	1.2130693669716823E-8	TEST	9.405035801296684E-9	IMPLEMENTATION	9.04770303791841E-9	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.8295410672250331	DESIGN	0.07569142141446054	WITHOUT_CLASSIFICATION	0.068007294429828	IMPLEMENTATION	0.026577613096528396	DEFECT	1.2330354888648412E-4	DOCUMENTATION	5.930028526353756E-5	TEST
//must add to JNDI _after_ adding to HashMaps, because some JNDI servers use serialization	WITHOUT_CLASSIFICATION	0.999999922373618	WITHOUT_CLASSIFICATION	4.4715204944112E-8	DESIGN	1.871158513579474E-8	IMPLEMENTATION	8.592950663360743E-9	DOCUMENTATION	2.84320034715251E-9	TEST	2.763441049391529E-9	DEFECT
// Make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.9999981313326393	WITHOUT_CLASSIFICATION	1.5385241807354849E-6	DESIGN	1.954848280907233E-7	DEFECT	1.3221358654532455E-7	IMPLEMENTATION	1.5153080527497982E-9	TEST	9.294572442945489E-10	DOCUMENTATION
// for each of the defined parameters, make sure its value // has been set	WITHOUT_CLASSIFICATION	0.9999988033129964	WITHOUT_CLASSIFICATION	1.1906097957319694E-6	DESIGN	4.497607132316694E-9	DEFECT	9.196560600300483E-10	TEST	6.281187769335547E-10	IMPLEMENTATION	3.182575979838076E-11	DOCUMENTATION
//we never need to apply locks to the SQL	WITHOUT_CLASSIFICATION	0.9995986462356434	WITHOUT_CLASSIFICATION	1.34389870991379E-4	DESIGN	1.2732235897107262E-4	IMPLEMENTATION	9.092892511730243E-5	DEFECT	4.528304281476216E-5	DOCUMENTATION	3.4295664619698527E-6	TEST
// inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999973372909979	WITHOUT_CLASSIFICATION	1.4108904122335582E-6	DEFECT	1.0805007972289686E-6	DESIGN	1.22686482396575E-7	TEST	3.1049972320773304E-8	IMPLEMENTATION	1.758133793638056E-8	DOCUMENTATION
// deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999976742332012	WITHOUT_CLASSIFICATION	1.013148918179874E-6	IMPLEMENTATION	4.955261620544557E-7	DEFECT	4.3360273064200303E-7	TEST	3.5555623185873267E-7	DESIGN	2.7932755907443702E-8	DOCUMENTATION
// during deserialization, we need to reconnect all proxies and // collections to this session, as well as the EntityEntry and // CollectionEntry instances; these associations are transient // because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.9988987032102588	WITHOUT_CLASSIFICATION	0.0010995772397239252	DESIGN	1.7170076398634757E-6	DOCUMENTATION	1.574005498172022E-9	DEFECT	6.26326701700599E-10	TEST	3.4204527369292034E-10	IMPLEMENTATION
// updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999945886579996	WITHOUT_CLASSIFICATION	2.6900422618851066E-6	IMPLEMENTATION	1.449919121426525E-6	DESIGN	8.405697623707422E-7	DEFECT	3.777501482473173E-7	TEST	5.306070656314709E-8	DOCUMENTATION
// loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999963051348241	WITHOUT_CLASSIFICATION	3.343865525442363E-6	DEFECT	2.2386701213314047E-7	IMPLEMENTATION	7.765851853216661E-8	TEST	3.083197484584197E-8	DOCUMENTATION	1.864214506057966E-8	DESIGN
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999971176460758	WITHOUT_CLASSIFICATION	2.7462367455706294E-6	DESIGN	5.5759731063805306E-8	DEFECT	3.7761971970012845E-8	IMPLEMENTATION	2.408190182728416E-8	TEST	1.85135738716974E-8	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999971176460758	WITHOUT_CLASSIFICATION	2.7462367455706294E-6	DESIGN	5.5759731063805306E-8	DEFECT	3.7761971970012845E-8	IMPLEMENTATION	2.408190182728416E-8	TEST	1.85135738716974E-8	DOCUMENTATION
// first, try to load it from the temp PC associated to this SS	WITHOUT_CLASSIFICATION	0.999999271487758	WITHOUT_CLASSIFICATION	4.7619173012462735E-7	TEST	2.428221712120164E-7	DESIGN	5.364425650073879E-9	DOCUMENTATION	2.731974849395914E-9	IMPLEMENTATION	1.4019399998982868E-9	DEFECT
// if the metadata allowed proxy creation and caller did not request forceful eager loading, // generate a proxy	WITHOUT_CLASSIFICATION	0.9999999965319077	WITHOUT_CLASSIFICATION	2.0202145706427767E-9	TEST	1.434589758822732E-9	DEFECT	7.318590175435637E-12	DESIGN	4.720371657164733E-12	IMPLEMENTATION	1.248878369901228E-12	DOCUMENTATION
// otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.9999597388477177	WITHOUT_CLASSIFICATION	3.070990005142966E-5	DESIGN	7.928330001287724E-6	IMPLEMENTATION	1.1925280643777047E-6	DEFECT	3.8864226826215197E-7	TEST	4.175189698821185E-8	DOCUMENTATION
/////////////////////////////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998210722037159	WITHOUT_CLASSIFICATION	1.4179224779189498E-4	DESIGN	1.7719301788286053E-5	IMPLEMENTATION	7.987439563016846E-6	DEFECT	5.858155530719817E-6	TEST	5.570651610169139E-6	DOCUMENTATION
// no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.9999219529518603	WITHOUT_CLASSIFICATION	6.175455034264094E-5	DESIGN	1.6210273432037638E-5	IMPLEMENTATION	3.770967733118725E-8	DOCUMENTATION	2.8510854497899637E-8	TEST	1.6003833206851033E-8	DEFECT
//after setting values to object, entityMode	WITHOUT_CLASSIFICATION	0.9982668162944932	WITHOUT_CLASSIFICATION	0.0017326828217789163	DESIGN	4.294161895684559E-7	DEFECT	5.693969675577616E-8	DOCUMENTATION	1.4218615722424608E-8	TEST	3.092259244129168E-10	IMPLEMENTATION
//for EJB3	WITHOUT_CLASSIFICATION	0.9997860591381488	WITHOUT_CLASSIFICATION	1.9508442610433564E-4	DESIGN	1.2371702035515843E-5	DEFECT	2.3078636674004746E-6	IMPLEMENTATION	2.1906081347096166E-6	DOCUMENTATION	1.9862619092451023E-6	TEST
// just ignore	WITHOUT_CLASSIFICATION	0.9999982080850264	WITHOUT_CLASSIFICATION	9.298611776520763E-7	IMPLEMENTATION	7.999147660836502E-7	DESIGN	2.1522985032529836E-8	DEFECT	2.0951179026716214E-8	TEST	1.966486578925275E-8	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9998400754275002	WITHOUT_CLASSIFICATION	1.492539589942309E-4	DESIGN	8.814818378290095E-6	IMPLEMENTATION	1.4369046060250183E-6	DEFECT	3.6633132330385937E-7	DOCUMENTATION	5.255919784144779E-8	TEST
// saveOrUpdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999478873529	WITHOUT_CLASSIFICATION	1.9163666435459722E-8	DEFECT	1.7025515467321263E-8	DESIGN	1.2761896521522194E-8	IMPLEMENTATION	2.061396669026944E-9	TEST	1.1001719087393837E-9	DOCUMENTATION
// update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995214522738	WITHOUT_CLASSIFICATION	2.4397486674101735E-7	IMPLEMENTATION	1.3394341505970608E-7	DEFECT	9.092035010099519E-8	DESIGN	6.7125258006680125E-9	TEST	2.9965684952309663E-9	DOCUMENTATION
// lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995135176253	WITHOUT_CLASSIFICATION	4.4149655505648177E-7	DEFECT	1.9957461259400332E-8	DESIGN	1.7785677424905996E-8	IMPLEMENTATION	4.534957755202631E-9	TEST	2.7077234083386056E-9	DOCUMENTATION
// persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998960454054	WITHOUT_CLASSIFICATION	5.1935320713168586E-8	IMPLEMENTATION	3.121605204443123E-8	DEFECT	1.6322417099330567E-8	DESIGN	3.1543018112312866E-9	TEST	1.3265030319593324E-9	DOCUMENTATION
// persistOnFlush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999601948588	WITHOUT_CLASSIFICATION	1.974918323075035E-8	DESIGN	9.686107686812845E-9	DEFECT	8.251059737645011E-9	IMPLEMENTATION	1.657819155324385E-9	TEST	4.609713633739775E-10	DOCUMENTATION
// merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999057276918	WITHOUT_CLASSIFICATION	3.164904675830779E-8	DESIGN	3.049381088064908E-8	IMPLEMENTATION	2.4032598703612966E-8	DEFECT	6.3489479796567066E-9	TEST	1.747903860528259E-9	DOCUMENTATION
// saveOrUpdateCopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999879568409	WITHOUT_CLASSIFICATION	6.674824585751507E-8	DEFECT	3.5308406504840786E-8	DESIGN	1.352293148320121E-8	IMPLEMENTATION	2.89423076988129E-9	TEST	1.957776418508502E-9	DOCUMENTATION
// delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999109877492	WITHOUT_CLASSIFICATION	5.2500115978751984E-8	IMPLEMENTATION	2.2772279137556556E-8	DEFECT	1.0280432371329252E-8	DESIGN	2.8916156026461452E-9	TEST	5.678078244432728E-10	DOCUMENTATION
// load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999491001407	WITHOUT_CLASSIFICATION	3.1293458739831546E-8	DEFECT	1.5269323955753973E-8	IMPLEMENTATION	2.754308424227783E-9	DESIGN	1.3081630914577934E-9	TEST	2.746051655681626E-10	DOCUMENTATION
// refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995382267926	WITHOUT_CLASSIFICATION	1.7472460417917274E-7	IMPLEMENTATION	1.3678758706003646E-7	DESIGN	1.307454981417624E-7	DEFECT	1.625060556887155E-8	TEST	3.2649125538719303E-9	DOCUMENTATION
// replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996801246313	WITHOUT_CLASSIFICATION	2.969725111072643E-7	DESIGN	1.0408011678678065E-8	IMPLEMENTATION	7.161246469790539E-9	DEFECT	3.5453233183435715E-9	TEST	1.7882762006521448E-9	DOCUMENTATION
// do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.9999928656500389	WITHOUT_CLASSIFICATION	5.546753723524059E-6	DESIGN	8.41528279817464E-7	IMPLEMENTATION	7.124887837528128E-7	DEFECT	3.1307943293659053E-8	DOCUMENTATION	2.2712306911320502E-9	TEST
// this is an internal error of some sort...	WITHOUT_CLASSIFICATION	0.9998012216627934	WITHOUT_CLASSIFICATION	1.8313305903003342E-4	DEFECT	1.4413369369471096E-5	DESIGN	4.54691277481266E-7	DOCUMENTATION	4.484377038522052E-7	TEST	3.287798256688286E-7	IMPLEMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9945000889252182	WITHOUT_CLASSIFICATION	0.005455990105260641	DESIGN	3.9182193151014916E-5	DEFECT	4.235240467599093E-6	TEST	4.4441716804616446E-7	IMPLEMENTATION	5.9118734273888404E-8	DOCUMENTATION
//only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.9999966831137285	WITHOUT_CLASSIFICATION	3.0124860460153626E-6	DESIGN	2.590988458264448E-7	IMPLEMENTATION	4.10870859506631E-8	DEFECT	3.923590936079283E-9	DOCUMENTATION	2.9070284830713116E-10	TEST
// if it was previously unreferenced, we need to flush in order to // get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.9999725615748238	WITHOUT_CLASSIFICATION	2.5452640227475892E-5	DESIGN	1.3325714292305191E-6	IMPLEMENTATION	4.770642764424982E-7	DOCUMENTATION	9.203433452273296E-8	DEFECT	8.411490846956997E-8	TEST
// not for internal use:	WITHOUT_CLASSIFICATION	0.9954178737259155	WITHOUT_CLASSIFICATION	0.004435959385969079	DESIGN	1.381823185489882E-4	IMPLEMENTATION	5.675487258442646E-6	DEFECT	1.2053304052457374E-6	TEST	1.1037519026763752E-6	DOCUMENTATION
// otherwise, we only need to flush if there are in-memory changes // to the queried tables	WITHOUT_CLASSIFICATION	0.9999990429403306	WITHOUT_CLASSIFICATION	7.848095250036772E-7	IMPLEMENTATION	1.3063476351363394E-7	TEST	3.772739768935033E-8	DESIGN	2.6029959625893003E-9	DEFECT	1.2849871755268936E-9	DOCUMENTATION
// might need to run a different filter entirely after the flush // because the collection role may have changed	WITHOUT_CLASSIFICATION	0.9988476794922131	WITHOUT_CLASSIFICATION	0.001104577495510558	IMPLEMENTATION	4.393688491534181E-5	DESIGN	3.394612951244749E-6	DEFECT	2.966048488935802E-7	DOCUMENTATION	1.1490956077693203E-7	TEST
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9945000889252182	WITHOUT_CLASSIFICATION	0.005455990105260641	DESIGN	3.9182193151014916E-5	DEFECT	4.235240467599093E-6	TEST	4.4441716804616446E-7	IMPLEMENTATION	5.9118734273888404E-8	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9945000889252182	WITHOUT_CLASSIFICATION	0.005455990105260641	DESIGN	3.9182193151014916E-5	DEFECT	4.235240467599093E-6	TEST	4.4441716804616446E-7	IMPLEMENTATION	5.9118734273888404E-8	DOCUMENTATION
//if it is initialized, see if the underlying //instance is contained, since we need to  //account for the fact that it might have been //evicted	WITHOUT_CLASSIFICATION	0.8950077833356961	WITHOUT_CLASSIFICATION	0.1031153242898586	DESIGN	0.001498196206396682	IMPLEMENTATION	3.4928292536751804E-4	TEST	2.7678754088101012E-5	DOCUMENTATION	1.7344885929777157E-6	DEFECT
// basically just an adapted copy of find(CriteriaImpl)	WITHOUT_CLASSIFICATION	0.9999936325618037	WITHOUT_CLASSIFICATION	5.751570459200783E-6	IMPLEMENTATION	4.266472735323428E-7	DESIGN	1.6219407842205764E-7	DEFECT	2.4134620755298054E-8	TEST	2.8917644022118434E-9	DOCUMENTATION
// it is possible for this method to be called during flush processing, // so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9998673236477909	WITHOUT_CLASSIFICATION	1.3264223781444542E-4	DESIGN	3.176390512763932E-8	TEST	1.7046201008690416E-9	DOCUMENTATION	4.079053990010535E-10	DEFECT	2.3796426327169513E-10	IMPLEMENTATION
// nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.9999821302917878	WITHOUT_CLASSIFICATION	1.2145565430768668E-5	DESIGN	4.865396965194166E-6	IMPLEMENTATION	7.554650441675068E-7	DEFECT	7.741080735461996E-8	DOCUMENTATION	2.5869964742547424E-8	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999994146225625	WITHOUT_CLASSIFICATION	4.01170982020406E-7	DESIGN	1.1678728359415685E-7	DEFECT	4.5290337807352606E-8	IMPLEMENTATION	1.5212113753972462E-8	DOCUMENTATION	6.916720285389313E-9	TEST
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999998713206057	WITHOUT_CLASSIFICATION	4.4363455704127955E-8	DESIGN	4.432512859779863E-8	DEFECT	3.1488013663644E-8	IMPLEMENTATION	4.9966487493162076E-9	TEST	3.506147517773568E-9	DOCUMENTATION
// we need to writeObject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.9999997354024477	WITHOUT_CLASSIFICATION	2.4124122984616153E-7	DESIGN	1.6111366946478168E-8	DOCUMENTATION	3.386387713209493E-9	TEST	2.9660287557776084E-9	IMPLEMENTATION	8.925390651444114E-10	DEFECT
// the old-time stand-by...	WITHOUT_CLASSIFICATION	0.9999578175554225	WITHOUT_CLASSIFICATION	3.8236241499407546E-5	DEFECT	2.6552014967647584E-6	IMPLEMENTATION	1.1304724333912776E-6	DESIGN	1.3302946428089792E-7	DOCUMENTATION	2.7499683635192022E-8	TEST
// parameter bind values...	WITHOUT_CLASSIFICATION	0.9999968217227837	WITHOUT_CLASSIFICATION	2.0474704564089605E-6	DEFECT	1.0708409637139918E-6	DESIGN	3.271346442072578E-8	IMPLEMENTATION	2.33470738528141E-8	TEST	3.905257896026458E-9	DOCUMENTATION
// Parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999530173856247	WITHOUT_CLASSIFICATION	4.104918620793691E-5	DESIGN	4.80225886871408E-6	IMPLEMENTATION	6.669897650472343E-7	TEST	3.8727670053017026E-7	DEFECT	7.69028330531283E-8	DOCUMENTATION
// prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.9999460946743418	WITHOUT_CLASSIFICATION	5.1768061648237537E-5	IMPLEMENTATION	1.104275100404576E-6	DEFECT	9.91200635974315E-7	DESIGN	2.8656374606665685E-8	TEST	1.3131899086083491E-8	DOCUMENTATION
// Execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999725694675204	WITHOUT_CLASSIFICATION	2.0654518312083922E-5	DESIGN	4.29604380953302E-6	IMPLEMENTATION	1.7972709580354316E-6	DEFECT	4.54487303104291E-7	DOCUMENTATION	2.2821209681202297E-7	TEST
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9990602164986864	WITHOUT_CLASSIFICATION	9.378090582172477E-4	DESIGN	1.367042097302667E-6	DEFECT	5.012772569881332E-7	DOCUMENTATION	7.295050741757065E-8	IMPLEMENTATION	3.317323482530342E-8	TEST
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9990602164986864	WITHOUT_CLASSIFICATION	9.378090582172477E-4	DESIGN	1.367042097302667E-6	DEFECT	5.012772569881332E-7	DOCUMENTATION	7.295050741757065E-8	IMPLEMENTATION	3.317323482530342E-8	TEST
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9998282080114569	WITHOUT_CLASSIFICATION	1.713872922885553E-4	DESIGN	2.1413619776504485E-7	DOCUMENTATION	1.0476405831111696E-7	TEST	7.05862760890774E-8	DEFECT	1.520972243172086E-8	IMPLEMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9998282080114569	WITHOUT_CLASSIFICATION	1.713872922885553E-4	DESIGN	2.1413619776504485E-7	DOCUMENTATION	1.0476405831111696E-7	TEST	7.05862760890774E-8	DEFECT	1.520972243172086E-8	IMPLEMENTATION
// FieldInterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999476791925144	WITHOUT_CLASSIFICATION	4.7957292418397556E-5	IMPLEMENTATION	3.194884280357451E-6	DESIGN	8.608200989587034E-7	DEFECT	2.849209650566014E-7	TEST	2.2889722886950175E-8	DOCUMENTATION
// subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999977040168905	WITHOUT_CLASSIFICATION	2.248950317842742E-6	DESIGN	2.5359673140777308E-8	DEFECT	1.0489108893615926E-8	IMPLEMENTATION	7.3693005257191615E-9	TEST	3.814709242723578E-9	DOCUMENTATION
//let's assume that there is only one lazy fetch group, for now!	WITHOUT_CLASSIFICATION	0.9999925180313419	WITHOUT_CLASSIFICATION	5.395561549207866E-6	DESIGN	1.9105624808208772E-6	DEFECT	1.5845333007152135E-7	TEST	1.2152256425406772E-8	IMPLEMENTATION	5.23904145066632E-9	DOCUMENTATION
// FieldHandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996912825140007	WITHOUT_CLASSIFICATION	2.867178304795395E-4	IMPLEMENTATION	1.9104859953307578E-5	DESIGN	2.101325207395582E-6	TEST	7.354638485334733E-7	DEFECT	5.8006510546043754E-8	DOCUMENTATION
// should *not* need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.9993507761534559	WITHOUT_CLASSIFICATION	5.977480790691577E-4	DESIGN	4.778228739898589E-5	DEFECT	3.643423802875774E-6	IMPLEMENTATION	3.969651162359876E-8	DOCUMENTATION	1.035976149398405E-8	TEST
// should probably no-op commit/rollback here, at least in JTA scenarios	WITHOUT_CLASSIFICATION	0.8674555834981196	DESIGN	0.13145757640527875	WITHOUT_CLASSIFICATION	9.46351288508049E-4	DEFECT	1.2013893710885439E-4	IMPLEMENTATION	1.0900352867701695E-5	DOCUMENTATION	9.449518117153512E-6	TEST
// Base Expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999249504171622	WITHOUT_CLASSIFICATION	6.68660836104606E-5	DEFECT	7.844592010677947E-6	IMPLEMENTATION	1.5571915046671836E-7	DOCUMENTATION	1.0830754259351403E-7	DESIGN	7.488052343599118E-8	TEST
// Various Expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999895330515888	WITHOUT_CLASSIFICATION	8.605656172937478E-6	DEFECT	1.4482333156251514E-6	DESIGN	2.750679886297945E-7	IMPLEMENTATION	1.3034520750785523E-7	DOCUMENTATION	7.645726461158457E-9	TEST
// explicitly perform no checking...	WITHOUT_CLASSIFICATION	0.6002925328263022	WITHOUT_CLASSIFICATION	0.39963555508010234	DESIGN	5.4978703896090816E-5	DEFECT	1.3614193158909764E-5	DOCUMENTATION	2.6524677814831496E-6	IMPLEMENTATION	6.667287588088091E-7	TEST
// used from testsuite	WITHOUT_CLASSIFICATION	0.9998888835604077	WITHOUT_CLASSIFICATION	7.627710126238661E-5	TEST	3.448910817498153E-5	DESIGN	2.6776153011941434E-7	DEFECT	7.637509857594056E-8	DOCUMENTATION	6.093526218195085E-9	IMPLEMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999998756460717	WITHOUT_CLASSIFICATION	1.1855342301975131E-7	DESIGN	2.62954287226616E-9	DOCUMENTATION	1.8971080201806498E-9	DEFECT	1.2719084653690186E-9	TEST	1.94602431859918E-12	IMPLEMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9990042718110085	WITHOUT_CLASSIFICATION	9.126514084333693E-4	DESIGN	6.918329762260797E-5	IMPLEMENTATION	7.305212416715822E-6	DEFECT	5.059125330650915E-6	DOCUMENTATION	1.5291451883866793E-6	TEST
// register synch; stats.connect()	WITHOUT_CLASSIFICATION	0.9999914318199913	WITHOUT_CLASSIFICATION	6.484433874672478E-6	DESIGN	1.9636447939696434E-6	IMPLEMENTATION	6.548927788076135E-8	DEFECT	4.0294361109510305E-8	DOCUMENTATION	1.4317701052466725E-8	TEST
//noncritical, swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.9999144274349979	WITHOUT_CLASSIFICATION	8.419699035793972E-5	DESIGN	8.661104586904169E-7	DEFECT	3.0941885747368895E-7	IMPLEMENTATION	1.4641039894096621E-7	DOCUMENTATION	5.3634929114348684E-8	TEST
// calls executeBatch()	WITHOUT_CLASSIFICATION	0.9999980499943146	WITHOUT_CLASSIFICATION	1.0802587696175701E-6	DEFECT	7.988378917821748E-7	DESIGN	4.603896567481679E-8	IMPLEMENTATION	1.984752498573788E-8	DOCUMENTATION	5.022533308913231E-9	TEST
//no big deal	WITHOUT_CLASSIFICATION	0.9999740940790074	WITHOUT_CLASSIFICATION	1.6072381106375094E-5	DESIGN	4.5204290580284325E-6	DEFECT	4.078346377934008E-6	IMPLEMENTATION	1.16964300171189E-6	DOCUMENTATION	6.512144874349941E-8	TEST
// no big deal	WITHOUT_CLASSIFICATION	0.9999626756940865	WITHOUT_CLASSIFICATION	2.2369153702685882E-5	IMPLEMENTATION	1.3272977347023876E-5	DESIGN	1.2137735810920643E-6	DEFECT	4.4458932769205734E-7	DOCUMENTATION	2.3811954908893454E-8	TEST
// no big deal	WITHOUT_CLASSIFICATION	0.9999626756940865	WITHOUT_CLASSIFICATION	2.2369153702685882E-5	IMPLEMENTATION	1.3272977347023876E-5	DESIGN	1.2137735810920643E-6	DEFECT	4.4458932769205734E-7	DOCUMENTATION	2.3811954908893454E-8	TEST
// sybase driver (jConnect) throwing NPE here in certain // cases, but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.999998467025917	WITHOUT_CLASSIFICATION	9.601109386394355E-7	DESIGN	2.5660064572988233E-7	DEFECT	2.539205731158162E-7	IMPLEMENTATION	5.40108698836734E-8	TEST	8.331055560355635E-9	DOCUMENTATION
// see explanation above...	WITHOUT_CLASSIFICATION	0.9999897351559123	WITHOUT_CLASSIFICATION	8.35786365481986E-6	DEFECT	1.6074661714372503E-6	DESIGN	2.0664342019137285E-7	DOCUMENTATION	7.503857362410724E-8	IMPLEMENTATION	1.7832267667880237E-8	TEST
// If we are in the process of releasing, no sense // checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.9999998724696548	WITHOUT_CLASSIFICATION	7.060190285406496E-8	DEFECT	5.261920867259261E-8	DESIGN	3.9717387837721766E-9	DOCUMENTATION	1.933241946252868E-10	TEST	1.4417067285884028E-10	IMPLEMENTATION
// EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999571039919996	WITHOUT_CLASSIFICATION	1.6285507146822276E-5	IMPLEMENTATION	1.5857922157791365E-5	DEFECT	9.186061219832678E-6	DESIGN	9.471864300315806E-7	DOCUMENTATION	6.193310458411432E-7	TEST
// ResultSet impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999136186890724	WITHOUT_CLASSIFICATION	3.96232666490806E-5	IMPLEMENTATION	2.9488253509699374E-5	DESIGN	1.642088330704045E-5	DEFECT	7.59867593989059E-7	TEST	8.903986782936473E-8	DOCUMENTATION
// ResultSet impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999338892801367	WITHOUT_CLASSIFICATION	3.362348047832088E-5	IMPLEMENTATION	2.2424185164978782E-5	DESIGN	6.889889478938041E-6	TEST	3.083245357332861E-6	DEFECT	8.991938376440406E-8	DOCUMENTATION
// refer to comment in StatefulPersistenceContext.addCollection()	WITHOUT_CLASSIFICATION	0.9999972886433429	WITHOUT_CLASSIFICATION	2.205308464644444E-6	DESIGN	2.9309947496981556E-7	DEFECT	1.5889060310745905E-7	IMPLEMENTATION	5.0298809576451423E-8	DOCUMENTATION	3.759304728833452E-9	TEST
// ConnectionManager.Callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.991110652097673	WITHOUT_CLASSIFICATION	0.0086855009492487	IMPLEMENTATION	1.522836589795122E-4	DEFECT	5.0278641751862394E-5	DESIGN	1.1269550817945332E-6	DOCUMENTATION	1.5769726512236134E-7	TEST
// Note : success = false, because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.99987727606057	WITHOUT_CLASSIFICATION	1.1917891815008445E-4	IMPLEMENTATION	3.282234096700568E-6	DESIGN	1.8840682980746326E-7	DEFECT	6.645122973409715E-8	DOCUMENTATION	7.929123605928254E-9	TEST
// we already have a callback registered; either a local // (org.hibernate.Transaction) transaction has accepted // callback responsibilities, or we have previously // registered a transaction synch.	WITHOUT_CLASSIFICATION	0.9999999041043176	WITHOUT_CLASSIFICATION	9.32566987073049E-8	DESIGN	1.436954585941083E-9	IMPLEMENTATION	1.1105301041423914E-9	DEFECT	8.333340290861203E-11	DOCUMENTATION	8.16546029745462E-12	TEST
// the configured transaction-factory says it only supports // local callback mode, so no sense attempting to register a // JTA Synchronization	WITHOUT_CLASSIFICATION	0.9999664048826116	WITHOUT_CLASSIFICATION	3.344343307169934E-5	DESIGN	1.0589696771561883E-7	IMPLEMENTATION	3.470457970416474E-8	DEFECT	1.0655191807337547E-8	DOCUMENTATION	4.275773724133197E-10	TEST
// transactions marked for rollback-only cause some TM impls to throw exceptions	WITHOUT_CLASSIFICATION	0.9999838866199092	WITHOUT_CLASSIFICATION	1.1692131730664247E-5	IMPLEMENTATION	4.279991976038033E-6	DEFECT	1.1522446679189269E-7	DESIGN	1.8001998658002875E-8	DOCUMENTATION	8.029918695835295E-9	TEST
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998424306201	WITHOUT_CLASSIFICATION	1.3045318742250263E-6	DEFECT	1.968191583849047E-7	DESIGN	4.4201417358667536E-8	IMPLEMENTATION	2.2497211098997165E-8	DOCUMENTATION	7.644137955440487E-9	TEST
//postInitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.9999996411316201	WITHOUT_CLASSIFICATION	1.900090647649595E-7	DEFECT	1.5905229196555502E-7	IMPLEMENTATION	5.677678286810068E-9	DESIGN	2.6493763286759185E-9	DOCUMENTATION	1.4799685696565764E-9	TEST
// cannot handle single quotes	WITHOUT_CLASSIFICATION	0.9999883552727646	WITHOUT_CLASSIFICATION	6.472615092519111E-6	DEFECT	3.2492898873429876E-6	IMPLEMENTATION	1.4312203841179745E-6	DESIGN	4.403680019103912E-7	TEST	5.123386953317378E-8	DOCUMENTATION
// todo : for 4.0 //	WITHOUT_CLASSIFICATION	0.9957101331057567	WITHOUT_CLASSIFICATION	0.0029576829605471077	DESIGN	0.0012077229720138072	DEFECT	1.0439194865487947E-4	IMPLEMENTATION	1.5756491042353693E-5	TEST	4.312521985013552E-6	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999890758583339	WITHOUT_CLASSIFICATION	1.0862013642507461E-5	DESIGN	5.4231134180121815E-8	TEST	6.073120374139626E-9	DEFECT	1.097923740887416E-9	IMPLEMENTATION	7.25845151322645E-10	DOCUMENTATION
// don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.9999263864949975	WITHOUT_CLASSIFICATION	5.6266597395276435E-5	DESIGN	1.6323308066473542E-5	DEFECT	7.628284196517498E-7	IMPLEMENTATION	1.742073186443495E-7	DOCUMENTATION	8.656380243311047E-8	TEST
// don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.9998179960694333	WITHOUT_CLASSIFICATION	1.357642222177329E-4	DESIGN	4.4671825173476166E-5	DEFECT	1.0507387352283306E-6	IMPLEMENTATION	4.0545659707710946E-7	DOCUMENTATION	1.116878430273933E-7	TEST
// position cursor to the last row	WITHOUT_CLASSIFICATION	0.9999999555379155	WITHOUT_CLASSIFICATION	2.3308475767578794E-8	IMPLEMENTATION	1.0699321706785408E-8	DEFECT	7.13142293152002E-9	DESIGN	3.131898653210665E-9	DOCUMENTATION	1.9096528459103304E-10	TEST
// sequentially read the result set in reverse until we recognize // a change in the key value.  At that point, we are pointed at // the last physical sequential row for the logical row in which // we are interested in processing	WITHOUT_CLASSIFICATION	0.9999999995985576	WITHOUT_CLASSIFICATION	3.4807905869271585E-10	DEFECT	2.64159810314136E-11	DESIGN	1.1962377071520498E-11	DOCUMENTATION	9.651849245624625E-12	TEST	5.3331223504152474E-12	IMPLEMENTATION
// Read backwards until we read past the first physical sequential // row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.9999936343675981	WITHOUT_CLASSIFICATION	6.1991596372841185E-6	DEFECT	1.3195677036428873E-7	TEST	3.402602762386111E-8	IMPLEMENTATION	4.2491140576658455E-10	DOCUMENTATION	6.505519748231498E-11	DESIGN
// Finally, read ahead one row to position result set cursor // at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.9999460258052159	WITHOUT_CLASSIFICATION	2.7829912388798682E-5	DEFECT	2.3247604010183398E-5	DESIGN	2.3726244220225093E-6	IMPLEMENTATION	3.122313625449136E-7	TEST	2.1182260046519675E-7	DOCUMENTATION
// now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.999985630518998	WITHOUT_CLASSIFICATION	1.4364853726568869E-5	DESIGN	3.655073687590721E-9	TEST	4.67016616372878E-10	IMPLEMENTATION	4.214266238791557E-10	DEFECT	8.375867820709082E-11	DOCUMENTATION
// force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.9999918917520048	WITHOUT_CLASSIFICATION	7.923372664772985E-6	DESIGN	1.528976401804187E-7	IMPLEMENTATION	1.673078402748498E-8	DEFECT	7.916115743621411E-9	TEST	7.3307903238753696E-9	DOCUMENTATION
// this is equivalent to the old behavior...	WITHOUT_CLASSIFICATION	0.999977000447347	WITHOUT_CLASSIFICATION	2.1511824012817508E-5	DESIGN	1.4606882119706866E-6	DEFECT	1.2393584740407073E-8	DOCUMENTATION	1.2027464447511597E-8	TEST	2.6193790380512873E-9	IMPLEMENTATION
//if null, owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.9999860663186282	WITHOUT_CLASSIFICATION	1.0582889695445686E-5	DEFECT	2.9494653967987535E-6	DESIGN	3.8503843218649176E-7	IMPLEMENTATION	8.597501232616728E-9	DOCUMENTATION	7.690346054708982E-9	TEST
//final String queryString, 	WITHOUT_CLASSIFICATION	0.9992518102829626	WITHOUT_CLASSIFICATION	6.97593387082105E-4	DESIGN	4.75185791201025E-5	DEFECT	1.6873454011117291E-6	DOCUMENTATION	8.141574221848085E-7	IMPLEMENTATION	5.762480118549428E-7	TEST
// if it was a reference to self, don't need to nullify // unless we are using native id generation, in which // case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.9999999961372047	WITHOUT_CLASSIFICATION	3.5953359105982504E-9	DESIGN	1.782898535739976E-10	DEFECT	6.654723701565326E-11	DOCUMENTATION	2.2618740772601644E-11	TEST	3.5061253855271785E-15	IMPLEMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9997696996251076	WITHOUT_CLASSIFICATION	2.2049553336516675E-4	DESIGN	5.606713412963505E-6	IMPLEMENTATION	2.5848402946777365E-6	TEST	9.031903820092889E-7	DOCUMENTATION	7.100974375657356E-7	DEFECT
// in an effort to avoid concurrent-modification-exceptions (from // potential recursive calls back through here as a result of the // eventual call to PersistentCollection#endRead), we scan the // internal loadingCollections map for matches and store those matches // in a temp collection.  the temp collection is then used to "drive" // the #endRead processing.	WITHOUT_CLASSIFICATION	0.9999999768222562	WITHOUT_CLASSIFICATION	1.4195385078032494E-8	DESIGN	8.980349370347988E-9	DEFECT	1.1130492098713272E-12	DOCUMENTATION	8.805860305255437E-13	TEST	1.5920123419874814E-14	IMPLEMENTATION
//we can reuse it for each row	WITHOUT_CLASSIFICATION	0.9999985827194099	WITHOUT_CLASSIFICATION	1.286447932996496E-6	DESIGN	1.1141168251927903E-7	DEFECT	8.372712379528642E-9	IMPLEMENTATION	8.301235873494438E-9	DOCUMENTATION	2.7470263313240483E-9	TEST
//can't reuse in this case	WITHOUT_CLASSIFICATION	0.9998467078103601	WITHOUT_CLASSIFICATION	1.4123634873563877E-4	DESIGN	1.1466861990443765E-5	DEFECT	4.874129509116666E-7	DOCUMENTATION	5.965208523687308E-8	IMPLEMENTATION	4.191387768695684E-8	TEST
// First we need to suspend any current JTA transaction and obtain // a JDBC connection	WITHOUT_CLASSIFICATION	0.9992149482923338	WITHOUT_CLASSIFICATION	4.211236199633393E-4	IMPLEMENTATION	1.889048436444055E-4	DESIGN	1.7379649338507318E-4	DOCUMENTATION	1.1357856666161263E-6	DEFECT	9.096500680094349E-8	TEST
//getResultList(results);	WITHOUT_CLASSIFICATION	0.9999443249053285	WITHOUT_CLASSIFICATION	5.4518253905662577E-5	DEFECT	5.225206540077439E-7	DESIGN	5.201023020099945E-7	TEST	7.845643919784224E-8	IMPLEMENTATION	3.5761370683744587E-8	DOCUMENTATION
//if we only returned one entity, query by key is more efficient	WITHOUT_CLASSIFICATION	0.9969770537610523	WITHOUT_CLASSIFICATION	0.003019217922735526	DESIGN	2.970299956057258E-6	DEFECT	3.7677400091845525E-7	TEST	2.868648541736934E-7	IMPLEMENTATION	9.437740104346054E-8	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999998296586414	WITHOUT_CLASSIFICATION	7.583006961842623E-8	DESIGN	5.2965998756757895E-8	DEFECT	4.128238130724565E-8	IMPLEMENTATION	2.2130313472290551E-10	DOCUMENTATION	4.160580489432958E-11	TEST
// handle empty collection	WITHOUT_CLASSIFICATION	0.9996102626630877	WITHOUT_CLASSIFICATION	3.3955646521943554E-4	DESIGN	4.4289276455881464E-5	IMPLEMENTATION	5.607298830182786E-6	DEFECT	1.9802227183285415E-7	DOCUMENTATION	8.627413494059224E-8	TEST
// else no collection element, but also no owner	WITHOUT_CLASSIFICATION	0.9999999430650851	WITHOUT_CLASSIFICATION	4.6568857668470344E-8	IMPLEMENTATION	7.0067337377914716E-9	DESIGN	2.4623004585292258E-9	DEFECT	8.27134911674987E-10	DOCUMENTATION	6.988805468362535E-11	TEST
//handle empty collections	WITHOUT_CLASSIFICATION	0.9999767808927364	WITHOUT_CLASSIFICATION	1.4275636125140362E-5	IMPLEMENTATION	8.724786776093174E-6	DESIGN	1.5816070757119906E-7	DEFECT	3.8127819121869043E-8	DOCUMENTATION	2.239583564479182E-8	TEST
// else this is not a collection initializer (and empty collections will // be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.9999974655691463	WITHOUT_CLASSIFICATION	1.6157585815443104E-6	DESIGN	9.119415748079579E-7	DEFECT	6.616692831371443E-9	IMPLEMENTATION	1.0556541891679933E-10	TEST	8.439149504477515E-12	DOCUMENTATION
// validate() instances of Validatable	WITHOUT_CLASSIFICATION	0.999989639665776	WITHOUT_CLASSIFICATION	4.9736746483967865E-6	DEFECT	3.4319087209839444E-6	IMPLEMENTATION	1.889794065894275E-6	DESIGN	3.7006912267215046E-8	DOCUMENTATION	2.7949876402556666E-8	TEST
// if we know there is exactly 1 row, we can skip. // it would be great if we could _always_ skip this; // it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.6179202206214821	WITHOUT_CLASSIFICATION	0.3231945588970444	DESIGN	0.057049529890497205	DEFECT	0.0017998928200097155	IMPLEMENTATION	3.2015305402464905E-5	TEST	3.7824655641488277E-6	DOCUMENTATION
// remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.9999367191971666	WITHOUT_CLASSIFICATION	6.3277837607703E-5	DESIGN	2.7412391302351674E-9	DEFECT	9.429987972703219E-11	IMPLEMENTATION	7.461423840823675E-11	DOCUMENTATION	5.5072350087734036E-11	TEST
//null version means the object is in the process of being loaded somewhere else in the ResultSet	WITHOUT_CLASSIFICATION	0.999925665421998	WITHOUT_CLASSIFICATION	7.060743821031123E-5	DESIGN	3.7024457350134766E-6	DEFECT	1.5495566416914907E-8	DOCUMENTATION	8.117432177554277E-9	IMPLEMENTATION	1.0810580855240463E-9	TEST
//problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.999269221682188	WITHOUT_CLASSIFICATION	4.4068479729689723E-4	DEFECT	2.702011729163451E-4	DESIGN	1.2957848471613879E-5	IMPLEMENTATION	6.138227379193335E-6	DOCUMENTATION	7.962717479250967E-7	TEST
//use the id passed in	WITHOUT_CLASSIFICATION	0.9999992220752562	WITHOUT_CLASSIFICATION	5.172497164661046E-7	DESIGN	1.4556321695375206E-7	IMPLEMENTATION	5.694100533489224E-8	DOCUMENTATION	4.06655358499582E-8	TEST	1.750526923167355E-8	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999934929332591	WITHOUT_CLASSIFICATION	4.015842213283121E-6	DESIGN	1.4057611385052084E-6	DEFECT	6.106672573877329E-7	DOCUMENTATION	3.274939555195851E-7	IMPLEMENTATION	1.4730217637056464E-7	TEST
// prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.9999969029269243	WITHOUT_CLASSIFICATION	1.4625594971758554E-6	DEFECT	1.4156237901662213E-6	DESIGN	1.8720602231325167E-7	IMPLEMENTATION	2.8542754852198383E-8	DOCUMENTATION	3.1410112756124665E-9	TEST
//no point doing this if NONE was requested	WITHOUT_CLASSIFICATION	0.9999562913149406	WITHOUT_CLASSIFICATION	3.7550646218530284E-5	TEST	5.9477558610079874E-6	DESIGN	1.0335327708554352E-7	DEFECT	5.958050830757851E-8	DOCUMENTATION	4.7349194477782174E-8	IMPLEMENTATION
//If the object is already loaded, return the loaded one	WITHOUT_CLASSIFICATION	0.9999420044606896	WITHOUT_CLASSIFICATION	2.8881003207883744E-5	DESIGN	2.6823552869140518E-5	IMPLEMENTATION	2.220836410228585E-6	DEFECT	4.556214562370172E-8	DOCUMENTATION	2.458467749742174E-8	TEST
//its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.9999934302170803	WITHOUT_CLASSIFICATION	3.90982836320015E-6	DESIGN	1.230534187223589E-6	DEFECT	6.768474164132479E-7	TEST	4.075713274611566E-7	IMPLEMENTATION	3.4500162522067956E-7	DOCUMENTATION
// cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.9998498274275127	WITHOUT_CLASSIFICATION	1.4159611396235018E-4	DESIGN	8.111678888958209E-6	IMPLEMENTATION	2.2726171572496746E-7	DOCUMENTATION	2.0689248328914378E-7	DEFECT	3.062543699345225E-8	TEST
//the load() which takes an entity does not pass an entityName	WITHOUT_CLASSIFICATION	0.9999968629991446	WITHOUT_CLASSIFICATION	1.3127090165692305E-6	DEFECT	8.70327596771947E-7	DESIGN	8.087682880004608E-7	TEST	8.941325657499718E-8	DOCUMENTATION	5.578269762962728E-8	IMPLEMENTATION
//we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.999986851534302	WITHOUT_CLASSIFICATION	7.807546210819889E-6	IMPLEMENTATION	4.184404988990574E-6	DEFECT	6.340386473211797E-7	DOCUMENTATION	4.799683320126977E-7	DESIGN	4.250751905986699E-8	TEST
// look for a proxy	WITHOUT_CLASSIFICATION	0.999983268044792	WITHOUT_CLASSIFICATION	1.412303283530072E-5	DESIGN	2.184571724568351E-6	DEFECT	3.907644301790166E-7	IMPLEMENTATION	1.970700929707487E-8	DOCUMENTATION	1.3879208673509973E-8	TEST
//we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.9607259496754516	WITHOUT_CLASSIFICATION	0.03328691273935019	IMPLEMENTATION	0.004508305372240236	DESIGN	0.0013220782500527643	TEST	1.4937686226101555E-4	DOCUMENTATION	7.377100644189731E-6	DEFECT
//its the given optional object	WITHOUT_CLASSIFICATION	0.9999896362317959	WITHOUT_CLASSIFICATION	4.015061359994593E-6	DESIGN	3.928718832344743E-6	IMPLEMENTATION	1.71470248030346E-6	DOCUMENTATION	6.715770182988536E-7	DEFECT	3.370851311486088E-8	TEST
// instantiate a new instance	WITHOUT_CLASSIFICATION	0.999945621378332	WITHOUT_CLASSIFICATION	5.430907037717916E-5	DESIGN	4.6120205140546286E-8	DEFECT	2.1176285302071324E-8	DOCUMENTATION	2.0163072404292403E-9	TEST	2.384931270409685E-10	IMPLEMENTATION
//need to hydrate it.	WITHOUT_CLASSIFICATION	0.996611548467513	WITHOUT_CLASSIFICATION	0.0032636154183709825	DESIGN	5.7303663378876764E-5	IMPLEMENTATION	4.109560837519253E-5	TEST	2.145542076046444E-5	DOCUMENTATION	4.9814216013369575E-6	DEFECT
// return a newly loaded object	WITHOUT_CLASSIFICATION	0.9999872902430168	WITHOUT_CLASSIFICATION	1.2562529857857591E-5	DESIGN	1.457694028009561E-7	DEFECT	1.163847235251805E-9	DOCUMENTATION	1.6166888008689387E-10	TEST	1.322064163800223E-10	IMPLEMENTATION
//will be ignored, using the existing Entry instead	WITHOUT_CLASSIFICATION	0.9999993713072013	WITHOUT_CLASSIFICATION	5.976477342413086E-7	DESIGN	1.7330441330122977E-8	DEFECT	9.744035235014882E-9	IMPLEMENTATION	2.340205966873261E-9	DOCUMENTATION	1.6303821003528115E-9	TEST
// key is an entity involved with the operation performed by the listener; // value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.9999999656655222	WITHOUT_CLASSIFICATION	3.3801143577697436E-8	DESIGN	4.2874655549689463E-10	DEFECT	9.98889001505795E-11	TEST	3.2993944023557375E-12	IMPLEMENTATION	1.399299652186402E-12	DOCUMENTATION
//materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.9996855870187569	WITHOUT_CLASSIFICATION	2.9714106437140746E-4	DESIGN	7.2078079196935416E-6	IMPLEMENTATION	5.8335358286030325E-6	DOCUMENTATION	3.0724295362897132E-6	TEST	1.1581435870758037E-6	DEFECT
// Get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.9999992564304412	WITHOUT_CLASSIFICATION	7.363267710623646E-7	DESIGN	3.894004143994141E-9	TEST	1.6562235123472038E-9	IMPLEMENTATION	9.30661803923066E-10	DEFECT	7.618983006823415E-10	DOCUMENTATION
// ok in normal Hibernate usage to delete a detached entity; JPA however // forbids it, thus this is a hook for HEM to affect this behavior	WITHOUT_CLASSIFICATION	0.9999892750682632	WITHOUT_CLASSIFICATION	7.92268393954202E-6	DESIGN	2.797152935127529E-6	DEFECT	3.389293509501467E-9	IMPLEMENTATION	1.590415541778851E-9	DOCUMENTATION	1.1515291563996005E-10	TEST
// the entry will be removed after the flush, and will no longer // override the stale snapshot // This is now handled by removeEntity() in EntityDeleteAction //persistenceContext.removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9999971257112119	WITHOUT_CLASSIFICATION	2.104320671391893E-6	DESIGN	7.692723198910016E-7	DEFECT	6.780090404956562E-10	IMPLEMENTATION	1.311574899530937E-11	DOCUMENTATION	4.672121775152156E-12	TEST
//addInitializedCollection(collection, persister, id);	WITHOUT_CLASSIFICATION	0.9999987966724497	WITHOUT_CLASSIFICATION	7.317989351614838E-7	IMPLEMENTATION	2.0590297576037642E-7	DEFECT	1.97018427859172E-7	DESIGN	4.153412465755106E-8	TEST	2.7073086624064452E-8	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999375077869584	WITHOUT_CLASSIFICATION	2.2943770988154874E-5	IMPLEMENTATION	2.1917751045607904E-5	DESIGN	1.3940944412697092E-5	DEFECT	2.49564399202227E-6	DOCUMENTATION	1.1941026030317446E-6	TEST
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999375077869584	WITHOUT_CLASSIFICATION	2.2943770988154874E-5	IMPLEMENTATION	2.1917751045607904E-5	DESIGN	1.3940944412697092E-5	DEFECT	2.49564399202227E-6	DOCUMENTATION	1.1941026030317446E-6	TEST
/*|| oj.getJoinable().consumesCollectionAlias() */	WITHOUT_CLASSIFICATION	0.9999997302768285	WITHOUT_CLASSIFICATION	8.668271807561556E-8	IMPLEMENTATION	7.345257197241224E-8	DESIGN	4.92942161117196E-8	DEFECT	4.111233048774371E-8	DOCUMENTATION	1.9181334731675708E-8	TEST
// here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.9990830025871185	WITHOUT_CLASSIFICATION	9.16862564146824E-4	DESIGN	6.371510081455649E-8	TEST	2.7516043940993578E-8	DEFECT	2.4124922938837125E-8	IMPLEMENTATION	1.9492666943043256E-8	DOCUMENTATION
// Code to handle subclasses of topClass	WITHOUT_CLASSIFICATION	0.9998536578074781	WITHOUT_CLASSIFICATION	1.450348734818371E-4	DESIGN	1.1686446516651627E-6	DEFECT	6.898428325003319E-8	IMPLEMENTATION	4.573473907386126E-8	TEST	2.395536590588641E-8	DOCUMENTATION
//woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.9959699646391806	WITHOUT_CLASSIFICATION	0.004026433589872751	DESIGN	3.2320256882736896E-6	DEFECT	2.6055187440405643E-7	DOCUMENTATION	7.063265887749848E-8	TEST	3.856072516119536E-8	IMPLEMENTATION
// we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.9999990289580503	WITHOUT_CLASSIFICATION	5.113491212682214E-7	DEFECT	4.325710512765664E-7	DESIGN	1.99928885572153E-8	IMPLEMENTATION	5.232562865442108E-9	DOCUMENTATION	1.8963256759322744E-9	TEST
// we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.9971427813432595	WITHOUT_CLASSIFICATION	0.002772321278692928	DESIGN	8.228433802308329E-5	IMPLEMENTATION	2.0053588269813265E-6	TEST	3.3166162396071663E-7	DEFECT	2.7601957367374657E-7	DOCUMENTATION
// synchronized to avoid multi-thread access issues; defined as method synch to avoid // potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.9999993448861486	WITHOUT_CLASSIFICATION	6.413257894947544E-7	DESIGN	1.2703471106322429E-8	DEFECT	9.39989991460587E-10	DOCUMENTATION	1.176145076240709E-10	TEST	2.6986391820441678E-11	IMPLEMENTATION
// Allows various loaders (ok mainly the QueryLoader :) to check // whether scrolling of their result set should be allowed. // // By default it is allowed.	WITHOUT_CLASSIFICATION	0.9999984718086581	WITHOUT_CLASSIFICATION	8.871023679072237E-7	DEFECT	6.364831850907037E-7	IMPLEMENTATION	2.143272760963643E-9	DESIGN	2.019409975950141E-9	TEST	4.4310624828502156E-10	DOCUMENTATION
//before adding to collection!	WITHOUT_CLASSIFICATION	0.9999044808118386	WITHOUT_CLASSIFICATION	5.310759395876148E-5	DEFECT	3.5626034617201515E-5	DESIGN	5.888834888605527E-6	IMPLEMENTATION	6.19929527769485E-7	DOCUMENTATION	2.7679516889396253E-7	TEST
// if the current depth is 0, the root thing being loaded is the // many-to-many collection itself.  Here, it is alright to use // an inner join...	WITHOUT_CLASSIFICATION	0.9999995720666442	WITHOUT_CLASSIFICATION	4.1499439831237946E-7	DESIGN	1.0490788492421257E-8	DEFECT	1.6247976865405295E-9	TEST	6.27104029173067E-10	IMPLEMENTATION	1.9626716035434642E-10	DOCUMENTATION
//operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.9999998952392977	WITHOUT_CLASSIFICATION	4.960289099926943E-8	IMPLEMENTATION	2.5860597859352872E-8	DESIGN	2.4105847760371205E-8	DEFECT	4.67832013422092E-9	DOCUMENTATION	5.130454902350173E-10	TEST
// simple, because we can't have a one-to-one or a collection  // (or even a property-ref) in a composite-element:	WITHOUT_CLASSIFICATION	0.999999404766208	WITHOUT_CLASSIFICATION	5.621339496069544E-7	DEFECT	2.7517750338209296E-8	DESIGN	4.6162030044421766E-9	IMPLEMENTATION	9.25537829622437E-10	DOCUMENTATION	4.035122967014933E-11	TEST
//a composite key	WITHOUT_CLASSIFICATION	0.9999902370500668	WITHOUT_CLASSIFICATION	9.35050543154273E-6	DESIGN	1.6659731791981566E-7	IMPLEMENTATION	1.5304172014173158E-7	DEFECT	6.504864142640929E-8	DOCUMENTATION	2.7756822095004838E-8	TEST
// if no batch, use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.9999982557934592	WITHOUT_CLASSIFICATION	1.7372032585835284E-6	DESIGN	2.8164505252045017E-9	DEFECT	2.7719758607696303E-9	DOCUMENTATION	9.531259257225298E-10	IMPLEMENTATION	4.6172988029200675E-10	TEST
//it must be a collection fetch	WITHOUT_CLASSIFICATION	0.9998117906121587	WITHOUT_CLASSIFICATION	1.8731992121137154E-4	DESIGN	4.6388160821034836E-7	DEFECT	2.91706134271369E-7	IMPLEMENTATION	1.0032671038721556E-7	TEST	3.355217690329115E-8	DOCUMENTATION
// needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.48945738766143426	WITHOUT_CLASSIFICATION	0.32861912340572697	DESIGN	0.1803961843652494	IMPLEMENTATION	6.953985803086941E-4	DEFECT	6.753311399061876E-4	DOCUMENTATION	1.5657484737441286E-4	TEST
/*&& etype.isReferenceToPrimaryKey()*/	WITHOUT_CLASSIFICATION	0.9999902177544661	WITHOUT_CLASSIFICATION	4.37014734339679E-6	IMPLEMENTATION	3.3482441444090246E-6	DESIGN	1.7827837607934745E-6	DEFECT	2.577371907496342E-7	DOCUMENTATION	2.3333094475296625E-8	TEST
// it might still need to apply a collection ordering based on a // many-to-many defined order-by...	WITHOUT_CLASSIFICATION	0.9789667548778161	WITHOUT_CLASSIFICATION	0.011980141277382844	IMPLEMENTATION	0.00894033880289744	DEFECT	1.0096449676017857E-4	DESIGN	7.245136422972332E-6	TEST	4.555408720460289E-6	DOCUMENTATION
// if a composite key, use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching //TODO: unnecessary for databases with ANSI-style joins	WITHOUT_CLASSIFICATION	0.9706143667786131	WITHOUT_CLASSIFICATION	0.01675061156938229	IMPLEMENTATION	0.012614190162686764	DESIGN	1.132489360888676E-5	DEFECT	8.639891779402322E-6	TEST	8.667039296908563E-7	DOCUMENTATION
// belong to other persister // belong to other persister	WITHOUT_CLASSIFICATION	0.9999806443318348	WITHOUT_CLASSIFICATION	1.9167014574523972E-5	DESIGN	1.2937686478141134E-7	IMPLEMENTATION	4.480918178380275E-8	TEST	1.295423713686627E-8	DEFECT	1.51330696577598E-9	DOCUMENTATION
// we found it	WITHOUT_CLASSIFICATION	0.9999779374567778	WITHOUT_CLASSIFICATION	1.9032418314738463E-5	DESIGN	2.5989865612444735E-6	DEFECT	1.969987268850464E-7	IMPLEMENTATION	1.6790517762404438E-7	DOCUMENTATION	6.623444183285556E-8	TEST
//we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.9999300084031935	WITHOUT_CLASSIFICATION	6.975135075242265E-5	DESIGN	1.8481409226285737E-7	DOCUMENTATION	2.7120190282935717E-8	DEFECT	1.977574448751208E-8	IMPLEMENTATION	8.536027018484811E-9	TEST
//disable a join back to this same association	WITHOUT_CLASSIFICATION	0.9993911206607765	WITHOUT_CLASSIFICATION	5.622707795896703E-4	DESIGN	3.071348521290627E-5	DOCUMENTATION	1.1940314046193362E-5	DEFECT	2.88780933945465E-6	TEST	1.0669510350814133E-6	IMPLEMENTATION
//NOTE: unlike all other Loaders, this one is NOT //      multithreaded, or cacheable!!	WITHOUT_CLASSIFICATION	0.848796445745362	WITHOUT_CLASSIFICATION	0.15096392265980849	DESIGN	1.247186086513138E-4	IMPLEMENTATION	8.814112522766395E-5	TEST	2.5974466642731467E-5	DEFECT	7.973943079638343E-7	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999999990424641	WITHOUT_CLASSIFICATION	5.273894568629483E-10	DEFECT	3.380684314201255E-10	DOCUMENTATION	7.588832118753551E-11	DESIGN	1.25852011330849E-11	IMPLEMENTATION	3.6045944242264175E-12	TEST
//root entity comes *last*	WITHOUT_CLASSIFICATION	0.9992830904337906	WITHOUT_CLASSIFICATION	7.153709117662388E-4	DESIGN	1.3617547908926407E-6	DEFECT	1.0418231969611965E-7	TEST	6.236453417996662E-8	DOCUMENTATION	1.0352798360894612E-8	IMPLEMENTATION
//deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.9999984806949243	WITHOUT_CLASSIFICATION	5.8085918904876E-7	IMPLEMENTATION	5.431358175046997E-7	DESIGN	3.7107525633538117E-7	DEFECT	2.024937621896101E-8	DOCUMENTATION	3.985436646743509E-9	TEST
//alias may be null //EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999276048432307	WITHOUT_CLASSIFICATION	3.042835043836656E-5	DEFECT	2.3958028880931412E-5	DESIGN	1.7514977095193376E-5	IMPLEMENTATION	3.761288737175427E-7	DOCUMENTATION	1.17671481079121E-7	TEST
// if it is a compound path	WITHOUT_CLASSIFICATION	0.9999928591036641	WITHOUT_CLASSIFICATION	7.08792617710043E-6	DESIGN	1.9375414302266555E-8	IMPLEMENTATION	1.6728463268792642E-8	DEFECT	1.5710050359515785E-8	TEST	1.1562308721751074E-9	DOCUMENTATION
// otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.999867939068306	WITHOUT_CLASSIFICATION	1.2336088675704652E-4	DESIGN	8.569140219333388E-6	IMPLEMENTATION	1.0410378655784126E-7	TEST	1.4771439982298593E-8	DOCUMENTATION	1.2029491199977692E-8	DEFECT
// if its the root criteria, we are done	WITHOUT_CLASSIFICATION	0.9999982332317817	WITHOUT_CLASSIFICATION	1.740749775784962E-6	DESIGN	1.5446027529503562E-8	TEST	7.662215581738058E-9	DEFECT	1.921960401959975E-9	IMPLEMENTATION	9.88239004594725E-10	DOCUMENTATION
// otherwise, recurse	WITHOUT_CLASSIFICATION	0.9996974533005447	WITHOUT_CLASSIFICATION	2.862922396268118E-4	DESIGN	1.5786660734900743E-5	IMPLEMENTATION	2.295429352134393E-7	DEFECT	1.4081844650448278E-7	DOCUMENTATION	9.743771197371898E-8	TEST
//the criteria instance	WITHOUT_CLASSIFICATION	0.9998202038383794	WITHOUT_CLASSIFICATION	1.7898948904465991E-4	DESIGN	4.772616735837385E-7	DEFECT	1.8256445965632773E-7	DOCUMENTATION	1.0859241390525892E-7	IMPLEMENTATION	3.825402878940496E-8	TEST
// the entity name	WITHOUT_CLASSIFICATION	0.999930643889014	WITHOUT_CLASSIFICATION	6.739734788783425E-5	DESIGN	8.24602240617546E-7	DEFECT	8.090598038397547E-7	IMPLEMENTATION	2.2292209458343604E-7	DOCUMENTATION	1.0217895908003249E-7	TEST
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9982352378005696	WITHOUT_CLASSIFICATION	0.0017452453077992068	DESIGN	9.578497972514995E-6	DEFECT	4.495077409031717E-6	IMPLEMENTATION	3.582609969871209E-6	TEST	1.8607062797618117E-6	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9982352378005696	WITHOUT_CLASSIFICATION	0.0017452453077992068	DESIGN	9.578497972514995E-6	DEFECT	4.495077409031717E-6	IMPLEMENTATION	3.582609969871209E-6	TEST	1.8607062797618117E-6	DOCUMENTATION
//it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.9999985474041038	WITHOUT_CLASSIFICATION	9.364879342245417E-7	DEFECT	4.857801521441374E-7	DESIGN	2.4261827882203076E-8	IMPLEMENTATION	5.36873497525025E-9	DOCUMENTATION	6.972470471117332E-10	TEST
//should never happen, i think	WITHOUT_CLASSIFICATION	0.999750407897584	WITHOUT_CLASSIFICATION	2.4607182410285464E-4	DESIGN	2.3074216268629026E-6	DEFECT	5.71222260901415E-7	TEST	5.549764541281809E-7	DOCUMENTATION	8.665797114731992E-8	IMPLEMENTATION
// Detect discriminator values...	WITHOUT_CLASSIFICATION	0.9999967482247285	WITHOUT_CLASSIFICATION	1.929413881801837E-6	DESIGN	1.2408454960987392E-6	DEFECT	3.1559665031051495E-8	DOCUMENTATION	2.584982317419631E-8	TEST	2.410640534461905E-8	IMPLEMENTATION
// Convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.9999695352574549	WITHOUT_CLASSIFICATION	2.7602969955734652E-5	DESIGN	2.1619538966996355E-6	DEFECT	3.103555994148229E-7	IMPLEMENTATION	2.4062958575515924E-7	DOCUMENTATION	1.4883350750463288E-7	TEST
// and the qualifier is not the alias of this criteria //      -> check to see if we belong to some criteria other //          than the one that created us	WITHOUT_CLASSIFICATION	0.9999999101535996	WITHOUT_CLASSIFICATION	8.976736985369198E-8	DESIGN	4.6497969551280204E-11	TEST	1.8038103329628712E-11	DOCUMENTATION	9.233390072605472E-12	IMPLEMENTATION	5.261222453740462E-12	DEFECT
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999323304249719	WITHOUT_CLASSIFICATION	5.3650982339214316E-5	DESIGN	1.3926830361148857E-5	DEFECT	6.148499968609196E-8	TEST	2.8416046473560768E-8	DOCUMENTATION	1.8612816510885181E-9	IMPLEMENTATION
// Otherwise, this is an ordinary value.	WITHOUT_CLASSIFICATION	0.9999931053194759	WITHOUT_CLASSIFICATION	6.12418652957698E-6	DESIGN	7.415740068875129E-7	DEFECT	2.039315229417431E-8	TEST	5.204132742192339E-9	DOCUMENTATION	3.3227027337332523E-9	IMPLEMENTATION
// Currently *not* cachable if autodiscover types is in effect (e.g. "select * ...")	WITHOUT_CLASSIFICATION	0.9999975708912274	WITHOUT_CLASSIFICATION	2.364909069857012E-6	DESIGN	6.378774335288271E-8	DEFECT	1.8592939640734578E-10	TEST	1.7428009364774393E-10	IMPLEMENTATION	5.1749789209193954E-11	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// this is only needed (afaict) for ResultTransformer processing...	WITHOUT_CLASSIFICATION	0.9298011416696942	WITHOUT_CLASSIFICATION	0.06918498855735208	DESIGN	9.274283735417547E-4	DEFECT	7.211262976282794E-5	TEST	1.210415574159002E-5	DOCUMENTATION	2.2246139075077217E-6	IMPLEMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999986030232011	WITHOUT_CLASSIFICATION	1.3884603838170114E-6	DESIGN	6.646223039232558E-9	DEFECT	1.3248008508912899E-9	TEST	4.4296278050578617E-10	IMPLEMENTATION	1.0242850371310196E-10	DOCUMENTATION
// build an array with indices equal to the total number // of actual returns in the result Hibernate will return // for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.9999997466813013	WITHOUT_CLASSIFICATION	2.0212149246846817E-7	DEFECT	4.763971217505062E-8	IMPLEMENTATION	3.5049191868504745E-9	DESIGN	3.453495714648067E-11	DOCUMENTATION	1.8039870662662424E-11	TEST
// replace {....} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.9997816329042654	WITHOUT_CLASSIFICATION	1.5588378619934635E-4	DESIGN	3.168040584482922E-5	DEFECT	2.9782530261646275E-5	IMPLEMENTATION	8.613115018527784E-7	TEST	1.590619269066338E-7	DOCUMENTATION
// No additional open braces found in the string, append the // rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.9999693411481663	WITHOUT_CLASSIFICATION	2.414705251562897E-5	DESIGN	5.810426761512912E-6	DEFECT	5.658037917232249E-7	TEST	8.662484598432401E-8	DOCUMENTATION	4.8943918971863374E-8	IMPLEMENTATION
// apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.9996741429008718	WITHOUT_CLASSIFICATION	3.1906762847075474E-4	DESIGN	4.952642615045655E-6	IMPLEMENTATION	1.487801648638303E-6	DEFECT	2.7323232432157937E-7	DOCUMENTATION	7.579406956575033E-8	TEST
// it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.9999998728880006	WITHOUT_CLASSIFICATION	1.069047765972843E-7	IMPLEMENTATION	1.0381476929886684E-8	DESIGN	5.105774450866041E-9	DEFECT	4.6516690287529565E-9	TEST	6.830222641104253E-11	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.999860753292514	WITHOUT_CLASSIFICATION	1.2276073356556728E-4	DESIGN	8.396320545982033E-6	DEFECT	7.24414549270127E-6	IMPLEMENTATION	7.360502075523847E-7	DOCUMENTATION	1.094576741117722E-7	TEST
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.999860753292514	WITHOUT_CLASSIFICATION	1.2276073356556728E-4	DESIGN	8.396320545982033E-6	DEFECT	7.24414549270127E-6	IMPLEMENTATION	7.360502075523847E-7	DOCUMENTATION	1.094576741117722E-7	TEST
// The current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.9999961080226044	WITHOUT_CLASSIFICATION	2.3196506703746054E-6	DESIGN	1.5650730291972606E-6	DEFECT	5.101978398604164E-9	IMPLEMENTATION	2.0550870505269236E-9	DOCUMENTATION	9.66303881773509E-11	TEST
// it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.9999977172711155	WITHOUT_CLASSIFICATION	1.869619149489736E-6	DEFECT	4.012962642918139E-7	DESIGN	4.90272362198721E-9	DOCUMENTATION	3.794468769146057E-9	IMPLEMENTATION	3.116278455137886E-9	TEST
// Possibly handle :something parameters for the query ?	WITHOUT_CLASSIFICATION	0.9930763660418408	WITHOUT_CLASSIFICATION	0.00676773692784391	DESIGN	1.4800505122669857E-4	IMPLEMENTATION	5.845327512718396E-6	TEST	1.697372024419764E-6	DEFECT	3.4927955130438545E-7	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999997476938242	WITHOUT_CLASSIFICATION	2.494781843241136E-7	DESIGN	2.0982860188633846E-9	DEFECT	5.970014597384886E-10	IMPLEMENTATION	8.782229277256893E-11	TEST	4.4881727209255996E-11	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9990042718110085	WITHOUT_CLASSIFICATION	9.126514084333693E-4	DESIGN	6.918329762260797E-5	IMPLEMENTATION	7.305212416715822E-6	DEFECT	5.059125330650915E-6	DOCUMENTATION	1.5291451883866793E-6	TEST
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.999222036196998	WITHOUT_CLASSIFICATION	3.39642382228275E-4	IMPLEMENTATION	2.622108846620815E-4	DESIGN	1.470136580781413E-4	DEFECT	1.462615884845708E-5	TEST	1.4470719185034626E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// Now, process the returns	WITHOUT_CLASSIFICATION	0.9999994006950791	WITHOUT_CLASSIFICATION	4.5267048974942486E-7	DESIGN	8.836228778382195E-8	IMPLEMENTATION	5.234859933013817E-8	DEFECT	4.906376016048033E-9	DOCUMENTATION	1.0171680231180536E-9	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// already been processed...	WITHOUT_CLASSIFICATION	0.9999944455898183	WITHOUT_CLASSIFICATION	4.8829261064669175E-6	DESIGN	5.144238761381773E-7	IMPLEMENTATION	7.823044609675489E-8	DOCUMENTATION	7.451883959752226E-8	DEFECT	4.31091344319162E-9	TEST
// already been processed...	WITHOUT_CLASSIFICATION	0.9999944455898183	WITHOUT_CLASSIFICATION	4.8829261064669175E-6	DESIGN	5.144238761381773E-7	IMPLEMENTATION	7.823044609675489E-8	DOCUMENTATION	7.451883959752226E-8	DEFECT	4.31091344319162E-9	TEST
// Make sure the owner alias is known...	WITHOUT_CLASSIFICATION	0.9999973326462042	WITHOUT_CLASSIFICATION	1.1548079654243662E-6	IMPLEMENTATION	9.508116733710044E-7	DESIGN	5.264379772971417E-7	DEFECT	2.5656213714344356E-8	TEST	9.639966014232299E-9	DOCUMENTATION
// first, break down the returns into maps keyed by alias // so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.9999775679218054	WITHOUT_CLASSIFICATION	1.73697526088086E-5	DESIGN	3.819507475263067E-6	IMPLEMENTATION	1.2385403633555839E-6	DEFECT	3.5266654349081443E-9	TEST	7.51081868944801E-10	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// If this return's alias has not been processed yet, do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.999998070519309	WITHOUT_CLASSIFICATION	1.7239805976777966E-6	DESIGN	1.4741113396158995E-7	DEFECT	5.0908959611497695E-8	IMPLEMENTATION	3.79174306891239E-9	DOCUMENTATION	3.3882565831015337E-9	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// for merging of versioned entities, we consider the version having // been changed only when: // 1) the two version values are different; //      *AND* // 2) The target actually represents database state! // // This second condition is a special case which allows // an entity to be merged during the same transaction // (though during a seperate operation) in which it was // originally persisted/saved	WITHOUT_CLASSIFICATION	0.9999230419184845	WITHOUT_CLASSIFICATION	7.43523930111231E-5	DESIGN	2.6044263232975473E-6	DEFECT	9.235904364875829E-10	DOCUMENTATION	3.163647943064974E-10	IMPLEMENTATION	2.2226001595952036E-11	TEST
// this is the second pass through on a merge op, so here we limit the // replacement to associations types (value types were already replaced // during the first pass)	WITHOUT_CLASSIFICATION	0.9064099493077803	WITHOUT_CLASSIFICATION	0.09358851146386851	DESIGN	8.107383841160308E-7	DOCUMENTATION	3.474478108195818E-7	TEST	2.0662739002363963E-7	IMPLEMENTATION	1.74414766312386E-7	DEFECT
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999434770485093	WITHOUT_CLASSIFICATION	2.7538775703780966E-5	IMPLEMENTATION	2.1461796990943E-5	DESIGN	5.031590053806343E-6	DEFECT	1.6297933115762122E-6	DOCUMENTATION	8.609954306311695E-7	TEST
// cascade-save to collections AFTER the collection owner was saved	WITHOUT_CLASSIFICATION	0.9999186759920415	WITHOUT_CLASSIFICATION	6.953883152927383E-5	IMPLEMENTATION	1.0614729296397783E-5	DESIGN	1.1065821974583245E-6	DEFECT	5.4471428927298057E-8	DOCUMENTATION	9.393506399404428E-9	TEST
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999994323869948	WITHOUT_CLASSIFICATION	3.925694645379192E-7	DESIGN	1.5556570011981318E-7	IMPLEMENTATION	9.090215325098774E-9	TEST	8.152125097312935E-9	DEFECT	2.235500050050316E-9	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999994174470984	WITHOUT_CLASSIFICATION	4.0945953881958064E-7	DESIGN	1.6313934190326933E-7	IMPLEMENTATION	5.336345976011974E-9	TEST	3.6252259054884896E-9	DOCUMENTATION	9.924489398828107E-10	DEFECT
// currently only the Hibernate-supplied DbTimestampType is supported here	WITHOUT_CLASSIFICATION	0.9997843385719097	WITHOUT_CLASSIFICATION	1.964246778581348E-4	DESIGN	1.2885063681188652E-5	IMPLEMENTATION	4.971574813863767E-6	TEST	9.770589590805717E-7	DEFECT	4.030527780770867E-7	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9950849008728309	WITHOUT_CLASSIFICATION	0.0034789577653445217	DEFECT	7.52130177600396E-4	IMPLEMENTATION	6.838468270305302E-4	DESIGN	1.1915569184603313E-7	DOCUMENTATION	4.5201501906226475E-8	TEST
// make a new one	WITHOUT_CLASSIFICATION	0.9999856958668146	WITHOUT_CLASSIFICATION	7.1427583894639455E-6	DESIGN	4.3711607788729085E-6	DEFECT	2.3998756711565334E-6	IMPLEMENTATION	2.7261640483126235E-7	TEST	1.17721941089933E-7	DOCUMENTATION
// not so sure this is even valid subtree.  but if it was, it'd // represent two unrelated table references...	WITHOUT_CLASSIFICATION	0.9999730797533587	WITHOUT_CLASSIFICATION	2.1906266365734784E-5	IMPLEMENTATION	4.130272939296734E-6	DESIGN	6.893571202926175E-7	DEFECT	1.764944040952961E-7	TEST	1.7855811919054167E-8	DOCUMENTATION
// (NOT (GT a b) ) => (LE a b)	WITHOUT_CLASSIFICATION	0.9999788451274717	WITHOUT_CLASSIFICATION	1.992113503424923E-5	DESIGN	7.52097635593273E-7	IMPLEMENTATION	2.1793448321642023E-7	DEFECT	1.6789813987759142E-7	TEST	9.580723544220819E-8	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9998992874683172	WITHOUT_CLASSIFICATION	9.801447229838905E-5	DESIGN	2.3129422004821545E-6	DEFECT	1.8208644699152836E-7	TEST	1.7831517118217164E-7	DOCUMENTATION	2.4715565707517804E-8	IMPLEMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9999963543879113	WITHOUT_CLASSIFICATION	3.6229513734154578E-6	DESIGN	1.6639479382881138E-8	DEFECT	3.4211176981805116E-9	DOCUMENTATION	1.6480680893592688E-9	TEST	9.520499910543904E-10	IMPLEMENTATION
//sqlResultTypes = selectClause.getSqlResultTypes();	WITHOUT_CLASSIFICATION	0.9999998976961609	WITHOUT_CLASSIFICATION	8.61664667860865E-8	DEFECT	9.432890073552672E-9	DESIGN	4.6232200462873314E-9	IMPLEMENTATION	1.2640764281084624E-9	TEST	8.171855313676173E-10	DOCUMENTATION
//by default	WITHOUT_CLASSIFICATION	0.9999577281664016	WITHOUT_CLASSIFICATION	2.9423929118640995E-5	DESIGN	7.817228344062823E-6	IMPLEMENTATION	4.288219070445189E-6	DEFECT	5.791858045372114E-7	DOCUMENTATION	1.6327126072437064E-7	TEST
// This is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.9986738354740191	WITHOUT_CLASSIFICATION	0.001298209937734843	DESIGN	2.278513312936823E-5	DEFECT	4.680829598394231E-6	IMPLEMENTATION	3.897851828357321E-7	TEST	9.884033554210528E-8	DOCUMENTATION
// -- Loader implementation --	WITHOUT_CLASSIFICATION	0.999981737053141	WITHOUT_CLASSIFICATION	1.4598317652951103E-5	IMPLEMENTATION	1.9812801772135798E-6	DEFECT	1.591963609775147E-6	DESIGN	6.898301665704847E-8	DOCUMENTATION	2.2402402424656633E-8	TEST
// -- Loader overrides --	WITHOUT_CLASSIFICATION	0.9999999384601425	WITHOUT_CLASSIFICATION	3.355853898723097E-8	DESIGN	1.7428055428872743E-8	DEFECT	5.805400828089588E-9	IMPLEMENTATION	2.551478953270117E-9	DOCUMENTATION	2.1963834220503406E-9	TEST
// (NOT (IS_NULL a b) ) => (IS_NOT_NULL a b)	WITHOUT_CLASSIFICATION	0.9999868694629136	WITHOUT_CLASSIFICATION	1.057658708116423E-5	DESIGN	2.0983670221859217E-6	IMPLEMENTATION	2.798139234571944E-7	DEFECT	8.803931190700791E-8	TEST	8.772974771334255E-8	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999041067456039	WITHOUT_CLASSIFICATION	7.899942116246041E-5	DESIGN	7.660514467067788E-6	TEST	5.334486480054316E-6	DEFECT	3.6762300002736688E-6	IMPLEMENTATION	2.2260228647352565E-7	DOCUMENTATION
// meant to handle dynamic instantiation queries...	WITHOUT_CLASSIFICATION	0.9999211386349576	WITHOUT_CLASSIFICATION	6.898385422695364E-5	DESIGN	9.658994520001955E-6	DEFECT	9.728095352450339E-8	DOCUMENTATION	7.89161036793529E-8	IMPLEMENTATION	4.231923815529688E-8	TEST
// --- Query translator methods ---	WITHOUT_CLASSIFICATION	0.9999367277724945	WITHOUT_CLASSIFICATION	6.293922737699886E-5	DESIGN	1.6902551491076297E-7	IMPLEMENTATION	1.319697230124565E-7	DEFECT	1.9086246389864085E-8	TEST	1.2918644156068008E-8	DOCUMENTATION
// -- Implementation private methods --	WITHOUT_CLASSIFICATION	0.9999304905042129	WITHOUT_CLASSIFICATION	4.8114431589541504E-5	DESIGN	2.1014704794138628E-5	IMPLEMENTATION	2.5783114876795544E-7	DEFECT	9.321540441568199E-8	DOCUMENTATION	2.9312850228188543E-8	TEST
//deduplicate unique constraints sharing the same columns //this is needed by Hibernate Annotations since it creates automagically // unique constraints for the user	WITHOUT_CLASSIFICATION	0.9999386959195455	WITHOUT_CLASSIFICATION	5.931097147056182E-5	DESIGN	1.0722317042294111E-6	TEST	5.194420199452221E-7	IMPLEMENTATION	3.872286034103966E-7	DEFECT	1.4206656318994991E-8	DOCUMENTATION
// Try to find out the name of the primary key to create it as identity if the IdentityGenerator is used	WITHOUT_CLASSIFICATION	0.9997207925409606	WITHOUT_CLASSIFICATION	2.7913666486116057E-4	DESIGN	5.316304115316515E-8	IMPLEMENTATION	1.5818539719925826E-8	TEST	1.7107936440182674E-9	DOCUMENTATION	1.0180388070354676E-10	DEFECT
// to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.9997769759866755	WITHOUT_CLASSIFICATION	2.211781526868834E-4	DESIGN	1.6043233740779494E-6	IMPLEMENTATION	2.3457616364204066E-7	DEFECT	5.196941805776043E-9	DOCUMENTATION	1.7641582748504525E-9	TEST
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999999239706764	WITHOUT_CLASSIFICATION	3.399811853967544E-8	DESIGN	2.0763567053544997E-8	DEFECT	2.0699825517721215E-8	IMPLEMENTATION	3.3574533455247193E-10	TEST	2.320671174061772E-10	DOCUMENTATION
//used also for generation of FK names!	WITHOUT_CLASSIFICATION	0.9973994651012947	WITHOUT_CLASSIFICATION	0.0022631507061849116	DESIGN	2.2012005176695197E-4	IMPLEMENTATION	8.678683386594758E-5	DEFECT	1.847475244683701E-5	TEST	1.2002554440674361E-5	DOCUMENTATION
//usually useless	WITHOUT_CLASSIFICATION	0.9998330316470564	WITHOUT_CLASSIFICATION	1.654866973095306E-4	DESIGN	9.75441710742135E-7	IMPLEMENTATION	3.031096280335236E-7	DEFECT	1.2914822792224308E-7	DOCUMENTATION	7.395606734288896E-8	TEST
// added this caching as I noticed that getType() is being called multiple times...	WITHOUT_CLASSIFICATION	0.9998678046372849	WITHOUT_CLASSIFICATION	9.717196817867513E-5	DEFECT	3.188589656103681E-5	DESIGN	2.99855365937977E-6	IMPLEMENTATION	1.0415875685325026E-7	TEST	3.478555930138688E-8	DOCUMENTATION
//do not add unique constraint on DB not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.9999999298471356	WITHOUT_CLASSIFICATION	6.758471846685276E-8	IMPLEMENTATION	1.15297915316098E-9	DESIGN	7.980937010678943E-10	DOCUMENTATION	3.196082354915617E-10	TEST	2.974649069443458E-10	DEFECT
//for backward compatibility, disable this:	WITHOUT_CLASSIFICATION	0.9999993912845995	WITHOUT_CLASSIFICATION	3.5678740653394264E-7	DESIGN	1.9623391427442064E-7	IMPLEMENTATION	3.0882847396918805E-8	TEST	1.4016395875872407E-8	DEFECT	1.079483639455926E-8	DOCUMENTATION
//may be final //may be final //may be final	WITHOUT_CLASSIFICATION	0.9998246106340443	WITHOUT_CLASSIFICATION	1.451625845843407E-4	DESIGN	2.7682304360276044E-5	DEFECT	1.5510868853835459E-6	IMPLEMENTATION	6.73414384228636E-7	DOCUMENTATION	3.199757413760373E-7	TEST
//may be final	WITHOUT_CLASSIFICATION	0.9985465665758178	WITHOUT_CLASSIFICATION	0.0014013242039576223	DESIGN	4.286230726917719E-5	DEFECT	6.616986311460698E-6	IMPLEMENTATION	2.1365252793831597E-6	DOCUMENTATION	4.934013645962076E-7	TEST
// may be final	WITHOUT_CLASSIFICATION	0.999939551635104	WITHOUT_CLASSIFICATION	4.602497608718667E-5	DESIGN	1.209975648929713E-5	DEFECT	2.101286303382939E-6	IMPLEMENTATION	1.6642451013664206E-7	DOCUMENTATION	5.5921505897121956E-8	TEST
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999715447017783	WITHOUT_CLASSIFICATION	2.8306195718568488E-5	DESIGN	9.450008866010487E-8	DEFECT	3.154694287980315E-8	DOCUMENTATION	1.9161679111188536E-8	TEST	3.893792483154345E-9	IMPLEMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9999990583595088	WITHOUT_CLASSIFICATION	8.523893328016333E-7	DESIGN	3.316503910493652E-8	DOCUMENTATION	2.987543825251015E-8	DEFECT	1.5143085143720834E-8	IMPLEMENTATION	1.1067595938817462E-8	TEST
// the root of the incoming property path matched one // of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.9999999896389804	WITHOUT_CLASSIFICATION	8.27682742030098E-9	DESIGN	1.7217524214922715E-9	DEFECT	2.002213933021024E-10	TEST	1.15533306911239E-10	IMPLEMENTATION	4.668518542015029E-11	DOCUMENTATION
// ignore it...	WITHOUT_CLASSIFICATION	0.999922763041908	WITHOUT_CLASSIFICATION	4.868793536888345E-5	DEFECT	2.6257393568557555E-5	DESIGN	1.79303432004771E-6	IMPLEMENTATION	3.434531524296672E-7	DOCUMENTATION	1.551416819573921E-7	TEST
//flat recursive algorithm	WITHOUT_CLASSIFICATION	0.9999529059605669	WITHOUT_CLASSIFICATION	2.7945264580318796E-5	IMPLEMENTATION	1.4351966935886088E-5	DESIGN	3.83828220320644E-6	DEFECT	8.422948199991089E-7	DOCUMENTATION	1.1623089371636223E-7	TEST
//an identifier mapper => getKey will be included in the getNonDuplicatedPropertyIterator() //and checked later, so it needs to be excluded	WITHOUT_CLASSIFICATION	0.9999986945983498	WITHOUT_CLASSIFICATION	1.3016191114953082E-6	DESIGN	2.0956073624796792E-9	DEFECT	1.2570351965526168E-9	DOCUMENTATION	2.772417336406546E-10	TEST	1.526544129805398E-10	IMPLEMENTATION
//if the hibernate-mapping did not specify a schema/catalog, use the defaults //specified by properties - but note that if the schema/catalog were specified //in hibernate-mapping, or as params, they will already be initialized and //will override the values set here (they are in identifierGeneratorProperties)	WITHOUT_CLASSIFICATION	0.9999999997675035	WITHOUT_CLASSIFICATION	1.4752667666018582E-10	IMPLEMENTATION	4.3673959058585714E-11	DEFECT	2.7871747483612208E-11	DESIGN	1.2302729569645227E-11	DOCUMENTATION	1.1211985957073267E-12	TEST
//pass the entity-name, if not a collection-id	WITHOUT_CLASSIFICATION	0.9999966024103727	WITHOUT_CLASSIFICATION	3.1872433203351923E-6	DESIGN	1.07518997511354E-7	DEFECT	8.90489424971937E-8	IMPLEMENTATION	1.2384810581080069E-8	TEST	1.3935564027525752E-9	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999715447017783	WITHOUT_CLASSIFICATION	2.8306195718568488E-5	DESIGN	9.450008866010487E-8	DEFECT	3.154694287980315E-8	DOCUMENTATION	1.9161679111188536E-8	TEST	3.893792483154345E-9	IMPLEMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9999990583595088	WITHOUT_CLASSIFICATION	8.523893328016333E-7	DESIGN	3.316503910493652E-8	DOCUMENTATION	2.987543825251015E-8	DEFECT	1.5143085143720834E-8	IMPLEMENTATION	1.1067595938817462E-8	TEST
//pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.9999961829417275	WITHOUT_CLASSIFICATION	1.6075685583575074E-6	IMPLEMENTATION	1.1099998682766917E-6	DEFECT	9.93774818764131E-7	DESIGN	1.0173097713056148E-7	TEST	3.98404983754423E-9	DOCUMENTATION
//needed to satisfy KeyValue	WITHOUT_CLASSIFICATION	0.9994012198122587	WITHOUT_CLASSIFICATION	5.669279216424357E-4	DESIGN	1.412770470611517E-5	DOCUMENTATION	1.2119405629825073E-5	IMPLEMENTATION	4.32506426527495E-6	DEFECT	1.2800914976079388E-6	TEST
// empty means no scoping	WITHOUT_CLASSIFICATION	0.999995836261575	WITHOUT_CLASSIFICATION	4.021884036221674E-6	DESIGN	1.0856991713726446E-7	DEFECT	1.889515316183216E-8	DOCUMENTATION	1.2060815017869634E-8	IMPLEMENTATION	2.3285036486706036E-9	TEST
// index should be last column listed	WITHOUT_CLASSIFICATION	0.9999615837322441	WITHOUT_CLASSIFICATION	2.6613225728233256E-5	IMPLEMENTATION	6.102299346412571E-6	DEFECT	3.805391584183973E-6	DESIGN	1.8342293580231847E-6	TEST	6.112173902203935E-8	DOCUMENTATION
//if it is a formula index, use the element columns in the PK	WITHOUT_CLASSIFICATION	0.9999982708341618	WITHOUT_CLASSIFICATION	9.538672675313644E-7	DESIGN	6.759151514975821E-7	IMPLEMENTATION	8.973769966643753E-8	DEFECT	5.459532508500591E-9	DOCUMENTATION	4.1861869595229485E-9	TEST
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns	WITHOUT_CLASSIFICATION	0.9995210091260792	WITHOUT_CLASSIFICATION	4.485511281880143E-4	DEFECT	2.7568367407832413E-5	DESIGN	1.8187892513215796E-6	IMPLEMENTATION	9.531877431335713E-7	TEST	9.940133064595468E-8	DOCUMENTATION
/*ArrayList list = new ArrayList();	WITHOUT_CLASSIFICATION	0.9988406514242038	WITHOUT_CLASSIFICATION	0.001138446863390072	IMPLEMENTATION	1.709311762537665E-5	DEFECT	1.6487338784447629E-6	TEST	1.4767277096259904E-6	DESIGN	6.831331925102335E-7	DOCUMENTATION
// }	WITHOUT_CLASSIFICATION	0.9999917008088942	WITHOUT_CLASSIFICATION	5.621484557408516E-6	DESIGN	1.9289365407408547E-6	DEFECT	4.7680072783322824E-7	IMPLEMENTATION	1.4681136060870243E-7	DOCUMENTATION	1.2515791925545655E-7	TEST
// no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.9999923834391884	WITHOUT_CLASSIFICATION	5.949466145327177E-6	DESIGN	9.302114810714526E-7	DEFECT	6.722195241315999E-7	IMPLEMENTATION	5.691544269697478E-8	DOCUMENTATION	7.748218313335426E-9	TEST
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.5697258024363284	WITHOUT_CLASSIFICATION	0.312800985905706	IMPLEMENTATION	0.11261672387137729	DESIGN	0.004719323985647444	DEFECT	8.795232458655498E-5	DOCUMENTATION	4.921147635428552E-5	TEST
// the case of a foreign key to something other than the pk is handled in createPropertyRefConstraints	WITHOUT_CLASSIFICATION	0.999999997447775	WITHOUT_CLASSIFICATION	2.2766835609698264E-9	DESIGN	2.351686961980884E-10	TEST	3.143409205489952E-11	DEFECT	8.354875279050223E-12	DOCUMENTATION	5.83773558448059E-13	IMPLEMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.5697258024363284	WITHOUT_CLASSIFICATION	0.312800985905706	IMPLEMENTATION	0.11261672387137729	DESIGN	0.004719323985647444	DEFECT	8.795232458655498E-5	DOCUMENTATION	4.921147635428552E-5	TEST
// if the property mapping consists of all formulas,  // make it non-updateable	WITHOUT_CLASSIFICATION	0.9999993889435387	WITHOUT_CLASSIFICATION	4.399260618474494E-7	DEFECT	1.453437616771352E-7	IMPLEMENTATION	2.5595562760179587E-8	TEST	1.147914348809631E-10	DESIGN	7.628356882721468E-11	DOCUMENTATION
//columnUpdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.9999898863180559	WITHOUT_CLASSIFICATION	7.441081549179782E-6	IMPLEMENTATION	1.616687817520353E-6	DESIGN	6.82946531813016E-7	DEFECT	2.041738778406872E-7	DOCUMENTATION	1.6879216763976196E-7	TEST
// if the property mapping consists of all formulas,  // make it insertable	WITHOUT_CLASSIFICATION	0.9999965505853421	WITHOUT_CLASSIFICATION	3.065243277569014E-6	DEFECT	2.470598897212739E-7	TEST	1.356412627083798E-7	IMPLEMENTATION	1.0207991816710977E-9	DESIGN	4.494289044021852E-10	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999988160641448	WITHOUT_CLASSIFICATION	1.0663287978778116E-6	DESIGN	6.205948551128359E-8	IMPLEMENTATION	4.5026531619941246E-8	TEST	7.351440650362026E-9	DEFECT	3.1695994855737875E-9	DOCUMENTATION
// expected type is intrinsic here...	WITHOUT_CLASSIFICATION	0.9999700792443367	WITHOUT_CLASSIFICATION	2.360662293115064E-5	DEFECT	5.6902225368139815E-6	DESIGN	4.230970271527778E-7	IMPLEMENTATION	1.5186858494827201E-7	TEST	4.894458334508118E-8	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9998987233133867	WITHOUT_CLASSIFICATION	8.740235176038005E-5	DESIGN	7.363661845625643E-6	DEFECT	2.9567149657848226E-6	IMPLEMENTATION	2.056587202372882E-6	DOCUMENTATION	1.4973708391202419E-6	TEST
//}	WITHOUT_CLASSIFICATION	0.9998987233133867	WITHOUT_CLASSIFICATION	8.740235176038005E-5	DESIGN	7.363661845625643E-6	DEFECT	2.9567149657848226E-6	IMPLEMENTATION	2.056587202372882E-6	DOCUMENTATION	1.4973708391202419E-6	TEST
//return memberPersister.getPropertyType(propertyName);	WITHOUT_CLASSIFICATION	0.9999861658418567	WITHOUT_CLASSIFICATION	1.0916945918284041E-5	DESIGN	2.7385424869297524E-6	DEFECT	1.221996913195333E-7	TEST	3.597409694770955E-8	IMPLEMENTATION	2.0495949774002568E-8	DOCUMENTATION
//return memberPersister.toColumns(alias, propertyName);	WITHOUT_CLASSIFICATION	0.9999722560322089	WITHOUT_CLASSIFICATION	2.6962511546865655E-5	DESIGN	7.382161645168019E-7	DEFECT	2.8313913492301015E-8	TEST	1.0616121508550068E-8	DOCUMENTATION	4.310044703775313E-9	IMPLEMENTATION
//return memberPersister.getType();	WITHOUT_CLASSIFICATION	0.9999949933162736	WITHOUT_CLASSIFICATION	3.470514277835326E-6	DESIGN	8.272556135259571E-7	DEFECT	6.49844275988954E-7	IMPLEMENTATION	4.323081798323273E-8	TEST	1.5838741131609058E-8	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999780376522491	WITHOUT_CLASSIFICATION	1.2675186637968303E-5	DEFECT	5.661410728602737E-6	DESIGN	2.9743844298224614E-6	IMPLEMENTATION	5.314936153903666E-7	DOCUMENTATION	1.1987233909236208E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
//instanceof AssociationType;	WITHOUT_CLASSIFICATION	0.9997228045819444	WITHOUT_CLASSIFICATION	1.988072185054003E-4	DESIGN	5.2194559231089986E-5	DEFECT	2.5065978975325018E-5	DOCUMENTATION	7.806903573209201E-7	IMPLEMENTATION	3.469709865198521E-7	TEST
// we need to determine the best way to know that two joinables // represent a single many-to-many...	WITHOUT_CLASSIFICATION	0.9025188150196326	WITHOUT_CLASSIFICATION	0.09723671552802648	DESIGN	2.0817558497561017E-4	IMPLEMENTATION	3.380008332681243E-5	TEST	1.5544853636807852E-6	DOCUMENTATION	9.392986746948726E-7	DEFECT
//strip leading ','	WITHOUT_CLASSIFICATION	0.9999952005728611	WITHOUT_CLASSIFICATION	2.3356294304109532E-6	IMPLEMENTATION	1.1148435716374277E-6	DESIGN	8.764669371323073E-7	DEFECT	3.2688131521488297E-7	TEST	1.456058845187841E-7	DOCUMENTATION
//public boolean isSubselectLoadable();	WITHOUT_CLASSIFICATION	0.9999995908578905	WITHOUT_CLASSIFICATION	2.9638962713020627E-7	DESIGN	5.290275404268178E-8	DEFECT	3.784891261602309E-8	IMPLEMENTATION	1.2378649477157504E-8	TEST	9.622166229354297E-9	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999866164122071	WITHOUT_CLASSIFICATION	1.201072018311172E-5	DESIGN	8.935064075831196E-7	DEFECT	2.2118619703102163E-7	IMPLEMENTATION	1.291421359682564E-7	TEST	1.290328693869418E-7	DOCUMENTATION
//columns	WITHOUT_CLASSIFICATION	0.9999334167184394	WITHOUT_CLASSIFICATION	5.375963005867334E-5	DESIGN	7.105051551944678E-6	DEFECT	3.364680001800053E-6	IMPLEMENTATION	1.73038875664554E-6	DOCUMENTATION	6.235311916511634E-7	TEST
//SQL statements	WITHOUT_CLASSIFICATION	0.9999417390044403	WITHOUT_CLASSIFICATION	5.655583183432291E-5	DESIGN	5.973714806796974E-7	DOCUMENTATION	5.481528246060248E-7	IMPLEMENTATION	3.1540711607690997E-7	DEFECT	2.44232303970523E-7	TEST
//extra information about the element type	WITHOUT_CLASSIFICATION	0.9999944603650203	WITHOUT_CLASSIFICATION	4.724310412138633E-6	DESIGN	5.468247170570367E-7	DEFECT	1.3414788531024733E-7	IMPLEMENTATION	1.0708782302174101E-7	DOCUMENTATION	2.7264142236533657E-8	TEST
//types	WITHOUT_CLASSIFICATION	0.9997698594508313	WITHOUT_CLASSIFICATION	2.0510627655232234E-4	DESIGN	1.1402063831575234E-5	DEFECT	7.9550166494516E-6	IMPLEMENTATION	2.8443137343187284E-6	DOCUMENTATION	2.8328784010381414E-6	TEST
// custom sql	WITHOUT_CLASSIFICATION	0.9999974434900993	WITHOUT_CLASSIFICATION	2.3483713267478816E-6	DESIGN	1.6020223407215402E-7	DEFECT	2.0075945226860357E-8	IMPLEMENTATION	1.4924127473301298E-8	DOCUMENTATION	1.2936267023977347E-8	TEST
//private final String unquotedIdentifierColumnName;	WITHOUT_CLASSIFICATION	0.9998740864063027	WITHOUT_CLASSIFICATION	1.18637290591029E-4	DESIGN	6.494572134956615E-6	IMPLEMENTATION	3.448272615489919E-7	DOCUMENTATION	2.838656959743022E-7	DEFECT	1.5303801365630833E-7	TEST
// dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.9999978725196563	WITHOUT_CLASSIFICATION	2.0151286335694674E-6	DESIGN	7.775118866261778E-8	DEFECT	2.310180774714462E-8	DOCUMENTATION	1.1268107793071534E-8	IMPLEMENTATION	2.3060605141137578E-10	TEST
// dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.9999996786128216	WITHOUT_CLASSIFICATION	2.3626186080452992E-7	DESIGN	5.349056287480842E-8	DEFECT	2.3873802878960682E-8	IMPLEMENTATION	5.830573546898081E-9	TEST	1.930378335277103E-9	DOCUMENTATION
// NativeSQL: collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.9998191068450859	WITHOUT_CLASSIFICATION	1.6557446763433619E-4	IMPLEMENTATION	1.1985972811078073E-5	DESIGN	2.6594711343372896E-6	DEFECT	3.978519913665015E-7	DOCUMENTATION	2.753913429330197E-7	TEST
//unquotedKeyColumnNames = StringHelper.unQuote(keyColumnAliases);	WITHOUT_CLASSIFICATION	0.9999992519043743	WITHOUT_CLASSIFICATION	5.829899373028436E-7	DEFECT	1.0308843302986266E-7	DESIGN	3.866084475667366E-8	TEST	1.8956374102218938E-8	IMPLEMENTATION	4.400036589702147E-9	DOCUMENTATION
//ELEMENT	WITHOUT_CLASSIFICATION	0.999835690952709	WITHOUT_CLASSIFICATION	1.5025253226789442E-4	DESIGN	6.6651733512725665E-6	DEFECT	2.7194330028017525E-6	TEST	2.3510964515631327E-6	DOCUMENTATION	2.3208122174139616E-6	IMPLEMENTATION
// NativeSQL: collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.999423234563702	WITHOUT_CLASSIFICATION	4.85099534701005E-4	IMPLEMENTATION	8.997611128776926E-5	DESIGN	8.23423719507674E-7	DEFECT	6.721163524937587E-7	DOCUMENTATION	1.9425023729600288E-7	TEST
// INDEX AND ROW SELECT	WITHOUT_CLASSIFICATION	0.9999928664659389	WITHOUT_CLASSIFICATION	5.092076960534526E-6	IMPLEMENTATION	1.1548304316147017E-6	DESIGN	3.731266481887727E-7	DEFECT	3.550742135701616E-7	DOCUMENTATION	1.5842580729213391E-7	TEST
// NativeSQL: collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.9989859573632365	WITHOUT_CLASSIFICATION	9.179836396166029E-4	IMPLEMENTATION	7.870292991063236E-5	DESIGN	1.5110499761704233E-5	DEFECT	1.2122946352383501E-6	DOCUMENTATION	1.0332728392430194E-6	TEST
//unquotedIdentifierColumnName = identifierColumnAlias;	WITHOUT_CLASSIFICATION	0.9999934834986891	WITHOUT_CLASSIFICATION	4.266225847336407E-6	IMPLEMENTATION	1.9930371711630493E-6	DESIGN	1.437706808019779E-7	TEST	6.990610912631853E-8	DOCUMENTATION	4.35615022204276E-8	DEFECT
//unquotedIdentifierColumnName = null;	WITHOUT_CLASSIFICATION	0.9999675797014197	WITHOUT_CLASSIFICATION	1.8785885900912064E-5	DESIGN	1.2026785588147133E-5	IMPLEMENTATION	1.1788016176502321E-6	DEFECT	2.2254300738297952E-7	TEST	2.0628246643362985E-7	DOCUMENTATION
//GENERATE THE SQL:	WITHOUT_CLASSIFICATION	0.9999001398808216	WITHOUT_CLASSIFICATION	9.58579883576196E-5	DESIGN	1.7189898483040562E-6	DEFECT	9.191975749579579E-7	IMPLEMENTATION	8.241127126153441E-7	DOCUMENTATION	5.398306849069078E-7	TEST
// for non-arrays, we don't need to know the element class //elementType.returnedClass();	WITHOUT_CLASSIFICATION	0.9999612900070342	WITHOUT_CLASSIFICATION	3.819981445025298E-5	DESIGN	3.740380454816062E-7	DEFECT	1.2299994201913435E-7	IMPLEMENTATION	1.013228118047617E-8	DOCUMENTATION	3.008246927775327E-9	TEST
//not all classpersisters implement PropertyMapping!	WITHOUT_CLASSIFICATION	0.9988838240507498	WITHOUT_CLASSIFICATION	8.790934841155588E-4	DESIGN	1.5166435788284803E-4	IMPLEMENTATION	7.863236225955662E-5	DEFECT	5.333078167725667E-6	TEST	1.4526668246428159E-6	DOCUMENTATION
// Handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.7886607031359512	WITHOUT_CLASSIFICATION	0.20766357584587664	DESIGN	0.0036654640478973252	IMPLEMENTATION	4.628329109801692E-6	TEST	3.543913108382907E-6	DOCUMENTATION	2.0847280566366387E-6	DEFECT
// Handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.6056775307504255	DESIGN	0.3855732803770125	WITHOUT_CLASSIFICATION	0.008740777421267837	IMPLEMENTATION	4.157473604820936E-6	TEST	3.774845000499738E-6	DOCUMENTATION	4.791326888977702E-7	DEFECT
//if there is a user-specified loader, return that //TODO: filters!?	WITHOUT_CLASSIFICATION	0.6010626610433026	DESIGN	0.3950892728820782	WITHOUT_CLASSIFICATION	0.0036395294039899538	IMPLEMENTATION	1.3433159330936717E-4	DEFECT	6.949544504428899E-5	TEST	4.709632275691407E-6	DOCUMENTATION
// Take care of any entities that might have // been evicted!	WITHOUT_CLASSIFICATION	0.9995238429490989	WITHOUT_CLASSIFICATION	4.454185931994881E-4	DESIGN	2.8001286925565374E-5	DEFECT	1.6811616375109215E-6	TEST	7.306058586749793E-7	IMPLEMENTATION	3.2540327996349947E-7	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9999952005728611	WITHOUT_CLASSIFICATION	2.3356294304109532E-6	IMPLEMENTATION	1.1148435716374277E-6	DESIGN	8.764669371323073E-7	DEFECT	3.2688131521488297E-7	TEST	1.456058845187841E-7	DOCUMENTATION
// Run a subquery loader	WITHOUT_CLASSIFICATION	0.9998435670050444	WITHOUT_CLASSIFICATION	1.4771713231997503E-4	DEFECT	7.599739011403755E-6	DESIGN	1.0025091337201418E-6	IMPLEMENTATION	7.213090014374111E-8	DOCUMENTATION	4.148359028766132E-8	TEST
//needed by arrays	WITHOUT_CLASSIFICATION	0.9997996476735138	WITHOUT_CLASSIFICATION	1.6069960152943186E-4	IMPLEMENTATION	2.188002883936328E-5	DESIGN	9.716318767661035E-6	DEFECT	4.786949717598513E-6	TEST	3.269427632134794E-6	DOCUMENTATION
//TODO: something with formulas...	WITHOUT_CLASSIFICATION	0.7461997195107212	WITHOUT_CLASSIFICATION	0.2118241067197711	IMPLEMENTATION	0.03131025052742163	DESIGN	0.008745113372277041	TEST	0.001119829406197371	DOCUMENTATION	8.009804636117005E-4	DEFECT
//an assertion	WITHOUT_CLASSIFICATION	0.9999982874699292	WITHOUT_CLASSIFICATION	7.699693501040617E-7	TEST	3.9624188932670064E-7	DESIGN	3.402272641375682E-7	DEFECT	1.3054057096689894E-7	DOCUMENTATION	7.555099619954877E-8	IMPLEMENTATION
// Remove all the old entries	WITHOUT_CLASSIFICATION	0.9999941790216987	WITHOUT_CLASSIFICATION	5.082583267326556E-6	DESIGN	6.500140497105984E-7	IMPLEMENTATION	6.305855590357713E-8	DEFECT	1.4384709135461039E-8	DOCUMENTATION	1.0937719243175582E-8	TEST
//create all the new entries	WITHOUT_CLASSIFICATION	0.9999991194728198	WITHOUT_CLASSIFICATION	6.448521711894551E-7	DESIGN	2.0088894759663274E-7	IMPLEMENTATION	2.7782774366210075E-8	DOCUMENTATION	5.723283619987891E-9	TEST	1.28000343207536E-9	DEFECT
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999780376522491	WITHOUT_CLASSIFICATION	1.2675186637968303E-5	DEFECT	5.661410728602737E-6	DESIGN	2.9743844298224614E-6	IMPLEMENTATION	5.314936153903666E-7	DOCUMENTATION	1.1987233909236208E-7	TEST
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999780376522491	WITHOUT_CLASSIFICATION	1.2675186637968303E-5	DEFECT	5.661410728602737E-6	DESIGN	2.9743844298224614E-6	IMPLEMENTATION	5.314936153903666E-7	DOCUMENTATION	1.1987233909236208E-7	TEST
//delete all the deleted entries	WITHOUT_CLASSIFICATION	0.9999978362938913	WITHOUT_CLASSIFICATION	1.8987163204067347E-6	IMPLEMENTATION	2.4867479194501034E-7	DESIGN	8.594723418173153E-9	DOCUMENTATION	7.18151332966062E-9	TEST	5.38759749066803E-10	DEFECT
//insert all the new entries	WITHOUT_CLASSIFICATION	0.9999981510654469	WITHOUT_CLASSIFICATION	1.0968948126704326E-6	DESIGN	6.843162555590253E-7	IMPLEMENTATION	4.080650816095533E-8	TEST	2.171011718845285E-8	DOCUMENTATION	5.206859450541146E-9	DEFECT
//==elementType ??	WITHOUT_CLASSIFICATION	0.9989408923607567	WITHOUT_CLASSIFICATION	0.0010368868660443726	DESIGN	1.5652522049633247E-5	IMPLEMENTATION	3.857892325467339E-6	DEFECT	2.1135278374874783E-6	DOCUMENTATION	5.968309863375462E-7	TEST
//update all the modified entries	WITHOUT_CLASSIFICATION	0.9999865435644022	WITHOUT_CLASSIFICATION	1.093526175756578E-5	IMPLEMENTATION	2.4619141070299347E-6	DESIGN	2.3056228560421163E-8	DOCUMENTATION	1.888179700478183E-8	TEST	1.7321707600407003E-8	DEFECT
//identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.9999029681397938	WITHOUT_CLASSIFICATION	6.292082534917686E-5	IMPLEMENTATION	3.181875662505963E-5	DESIGN	2.0249500014162543E-6	DEFECT	1.748950424831688E-7	TEST	9.243318793644976E-8	DOCUMENTATION
// update removed rows fks to null	WITHOUT_CLASSIFICATION	0.9990392168926561	WITHOUT_CLASSIFICATION	9.015292531121005E-4	DEFECT	5.624107220050846E-5	DESIGN	2.866879452937744E-6	IMPLEMENTATION	8.41646582998974E-8	TEST	6.173792029129796E-8	DOCUMENTATION
// will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.9957791846986918	WITHOUT_CLASSIFICATION	0.0035406567197144704	DESIGN	6.734000174545297E-4	DEFECT	3.595055774975459E-6	DOCUMENTATION	2.1381113428431825E-6	IMPLEMENTATION	1.0253970214726072E-6	TEST
// now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.999998998017475	WITHOUT_CLASSIFICATION	6.179152850766212E-7	IMPLEMENTATION	3.0476596420102026E-7	DESIGN	7.79746340806158E-8	DEFECT	8.687117765251587E-10	DOCUMENTATION	4.5792980002425317E-10	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
//use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.999901189805542	WITHOUT_CLASSIFICATION	9.825918179180272E-5	DESIGN	2.722955401963705E-7	DEFECT	1.2852683124506788E-7	DOCUMENTATION	1.2281677819856596E-7	IMPLEMENTATION	2.7373516479479112E-8	TEST
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999994242606409	WITHOUT_CLASSIFICATION	4.960002515222767E-7	DESIGN	6.12389649687834E-8	IMPLEMENTATION	1.3559145281707161E-8	DEFECT	4.109299831474316E-9	TEST	8.316974986184982E-10	DOCUMENTATION
//private final String rootTableName;	WITHOUT_CLASSIFICATION	0.9997371840882572	WITHOUT_CLASSIFICATION	2.61041648283314E-4	DESIGN	7.165688351556471E-7	IMPLEMENTATION	5.277551067542779E-7	DEFECT	3.743007872902058E-7	TEST	1.556387302079917E-7	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9998751263345322	WITHOUT_CLASSIFICATION	9.054935488261803E-5	IMPLEMENTATION	1.9826823902635816E-5	DESIGN	7.887184451805857E-6	DEFECT	3.3425965553964744E-6	TEST	3.267705675281273E-6	DOCUMENTATION
//Custom SQL	WITHOUT_CLASSIFICATION	0.9994268357723184	WITHOUT_CLASSIFICATION	5.713551526573439E-4	DESIGN	7.766838096723502E-7	DEFECT	6.188911937416165E-7	DOCUMENTATION	3.002728933786523E-7	TEST	1.1322712733033488E-7	IMPLEMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999994242606409	WITHOUT_CLASSIFICATION	4.960002515222767E-7	DESIGN	6.12389649687834E-8	IMPLEMENTATION	1.3559145281707161E-8	DEFECT	4.109299831474316E-9	TEST	8.316974986184982E-10	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.999995736627164	WITHOUT_CLASSIFICATION	3.672608839689412E-6	DESIGN	1.868710709319895E-7	IMPLEMENTATION	1.6442541751971615E-7	DOCUMENTATION	1.6248155520649905E-7	DEFECT	7.698595259293367E-8	TEST
// This could also just be true all the time...	WITHOUT_CLASSIFICATION	0.9680274313867508	WITHOUT_CLASSIFICATION	0.027487469339256682	DESIGN	0.004482316207861043	IMPLEMENTATION	1.9882363213024312E-6	DEFECT	5.618400211106396E-7	TEST	2.3298978898533484E-7	DOCUMENTATION
//chop the last union (all)	WITHOUT_CLASSIFICATION	0.999982614227161	WITHOUT_CLASSIFICATION	9.545883253063412E-6	DEFECT	3.7671262047130333E-6	IMPLEMENTATION	3.2392490901847716E-6	DESIGN	6.594305706386805E-7	DOCUMENTATION	1.7408372026011498E-7	TEST
//TODO: check this....	WITHOUT_CLASSIFICATION	0.6315120025597291	DESIGN	0.2610372776343592	IMPLEMENTATION	0.09379103139107092	WITHOUT_CLASSIFICATION	0.009467123189110981	DOCUMENTATION	0.0030290471015515493	DEFECT	0.0011635181241782529	TEST
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9998751263345322	WITHOUT_CLASSIFICATION	9.054935488261803E-5	IMPLEMENTATION	1.9826823902635816E-5	DESIGN	7.887184451805857E-6	DEFECT	3.3425965553964744E-6	TEST	3.267705675281273E-6	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999972043034894	WITHOUT_CLASSIFICATION	2.4005269248999954E-6	DEFECT	3.3152223651231444E-7	DESIGN	4.948907385884633E-8	TEST	1.4006673490978154E-8	DOCUMENTATION	1.516017122091244E-10	IMPLEMENTATION
// the closure of all properties in the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999994330024843	WITHOUT_CLASSIFICATION	3.8159198458395835E-7	DEFECT	1.8330182613705148E-7	DESIGN	1.371628066611189E-9	IMPLEMENTATION	6.542694480645394E-10	DOCUMENTATION	7.780736244740143E-11	TEST
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999998821436419	WITHOUT_CLASSIFICATION	9.57475270072604E-8	DESIGN	1.823802341034741E-8	IMPLEMENTATION	3.6724499847069836E-9	DEFECT	1.0582556307888908E-10	TEST	9.253202773176783E-11	DOCUMENTATION
// subclass discrimination works by assigning particular // values to certain combinations of null primary key // values in the outer join using an SQL CASE	WITHOUT_CLASSIFICATION	0.999997942149394	WITHOUT_CLASSIFICATION	1.996129789990313E-6	DEFECT	6.157204964243384E-8	DESIGN	1.3586677048901856E-10	DOCUMENTATION	1.2849545133570142E-11	TEST	5.006019827786956E-14	IMPLEMENTATION
//MULTITABLES	WITHOUT_CLASSIFICATION	0.9998549931160977	WITHOUT_CLASSIFICATION	1.2474208214488446E-4	DESIGN	9.06622899522533E-6	DEFECT	6.401432959970123E-6	IMPLEMENTATION	3.6086061620141986E-6	DOCUMENTATION	1.1885336402246304E-6	TEST
// Custom sql	WITHOUT_CLASSIFICATION	0.9999955043034894	WITHOUT_CLASSIFICATION	4.361328937102737E-6	DESIGN	9.048670397781766E-8	DEFECT	1.9857058431455726E-8	TEST	1.345575006594012E-8	DOCUMENTATION	1.0568060919244488E-8	IMPLEMENTATION
// subclass closure properties	WITHOUT_CLASSIFICATION	0.9999986457266525	WITHOUT_CLASSIFICATION	1.3174633116022018E-6	DESIGN	3.58056756250748E-8	DEFECT	5.830117206376972E-10	DOCUMENTATION	3.305846996704011E-10	TEST	9.07637762303441E-11	IMPLEMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.999992393061563	WITHOUT_CLASSIFICATION	4.266413066668151E-6	DESIGN	1.526561242906952E-6	IMPLEMENTATION	1.4910490384981128E-6	DEFECT	2.3660599076800365E-7	DOCUMENTATION	8.630909814163146E-8	TEST
//( (Column) model.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.997365896422217	WITHOUT_CLASSIFICATION	0.0025094470444327467	DESIGN	1.007420966802024E-4	IMPLEMENTATION	1.2128388784424066E-5	DEFECT	1.0600151149994095E-5	TEST	1.185896735607102E-6	DOCUMENTATION
//( (Column) sc.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9997485168203606	WITHOUT_CLASSIFICATION	2.1713281741155203E-4	DESIGN	2.934484723389173E-5	IMPLEMENTATION	2.510816780332365E-6	TEST	2.0893536167995666E-6	DEFECT	4.053445968166038E-7	DOCUMENTATION
// don't need subclass tables, because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.9916063706414014	WITHOUT_CLASSIFICATION	0.0057808809341453205	DEFECT	0.00260608151838652	DESIGN	4.910553725174404E-6	DOCUMENTATION	1.385020072919413E-6	IMPLEMENTATION	3.7133226872965356E-7	TEST
// special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.9999774120544841	WITHOUT_CLASSIFICATION	1.4631108587166671E-5	IMPLEMENTATION	6.808180187651656E-6	DESIGN	1.126235207223228E-6	DOCUMENTATION	2.071387909941911E-8	DEFECT	1.7076546430750427E-9	TEST
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999994242606409	WITHOUT_CLASSIFICATION	4.960002515222767E-7	DESIGN	6.12389649687834E-8	IMPLEMENTATION	1.3559145281707161E-8	DEFECT	4.109299831474316E-9	TEST	8.316974986184982E-10	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999972043034894	WITHOUT_CLASSIFICATION	2.4005269248999954E-6	DEFECT	3.3152223651231444E-7	DESIGN	4.948907385884633E-8	TEST	1.4006673490978154E-8	DOCUMENTATION	1.516017122091244E-10	IMPLEMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999998821436419	WITHOUT_CLASSIFICATION	9.57475270072604E-8	DESIGN	1.823802341034741E-8	IMPLEMENTATION	3.6724499847069836E-9	DEFECT	1.0582556307888908E-10	TEST	9.253202773176783E-11	DOCUMENTATION
//get em on the second pass!	WITHOUT_CLASSIFICATION	0.9999814871450033	WITHOUT_CLASSIFICATION	1.6649081764086657E-5	DESIGN	1.2760185786084814E-6	DEFECT	2.797492319438918E-7	IMPLEMENTATION	2.594180289654571E-7	DOCUMENTATION	4.858739305807705E-8	TEST
// now look up the object we are really interested in! // (this lets us correctly handle proxies and multi-row // or multi-column queries)	WITHOUT_CLASSIFICATION	0.9947440902985514	WITHOUT_CLASSIFICATION	0.005030914040870627	DESIGN	2.0540752348164487E-4	DEFECT	1.7407234031414295E-5	IMPLEMENTATION	1.4372506320261342E-6	TEST	7.436524329345085E-7	DOCUMENTATION
// discriminator column	WITHOUT_CLASSIFICATION	0.9999975904891159	WITHOUT_CLASSIFICATION	1.6500459316128524E-6	DESIGN	7.277160524969351E-7	DEFECT	2.5050516898646263E-8	DOCUMENTATION	4.454574899362273E-9	TEST	2.243808352513329E-9	IMPLEMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9998751263345322	WITHOUT_CLASSIFICATION	9.054935488261803E-5	IMPLEMENTATION	1.9826823902635816E-5	DESIGN	7.887184451805857E-6	DEFECT	3.3425965553964744E-6	TEST	3.267705675281273E-6	DOCUMENTATION
//private final Map propertyTableNumbersByName = new HashMap();	WITHOUT_CLASSIFICATION	0.9999212535538317	WITHOUT_CLASSIFICATION	7.844498575429015E-5	DESIGN	1.4700008802261473E-7	DEFECT	7.273323581523689E-8	TEST	6.863859636815171E-8	DOCUMENTATION	1.3088493848304808E-8	IMPLEMENTATION
// CLASS + TABLE	WITHOUT_CLASSIFICATION	0.9999998799123133	WITHOUT_CLASSIFICATION	3.897731328264415E-8	DEFECT	3.123180198899553E-8	DESIGN	3.105375706814013E-8	IMPLEMENTATION	1.2000589080893498E-8	DOCUMENTATION	6.824225274069409E-9	TEST
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999506983276464	WITHOUT_CLASSIFICATION	4.231542763333208E-5	IMPLEMENTATION	3.890037071298313E-6	DESIGN	1.7521042399412528E-6	DEFECT	9.607044430511994E-7	DOCUMENTATION	3.8339896595777214E-7	TEST
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999953783240696	WITHOUT_CLASSIFICATION	2.3940126939104046E-6	DESIGN	1.6200709601076645E-6	IMPLEMENTATION	2.7597417270661865E-7	DEFECT	2.234356539531748E-7	DOCUMENTATION	1.0818244973676646E-7	TEST
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.999992393061563	WITHOUT_CLASSIFICATION	4.266413066668151E-6	DESIGN	1.526561242906952E-6	IMPLEMENTATION	1.4910490384981128E-6	DEFECT	2.3660599076800365E-7	DOCUMENTATION	8.630909814163146E-8	TEST
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.999995736627164	WITHOUT_CLASSIFICATION	3.672608839689412E-6	DESIGN	1.868710709319895E-7	IMPLEMENTATION	1.6442541751971615E-7	DOCUMENTATION	1.6248155520649905E-7	DEFECT	7.698595259293367E-8	TEST
// JOINS	WITHOUT_CLASSIFICATION	0.9999946296392405	WITHOUT_CLASSIFICATION	3.0848731016555853E-6	DESIGN	1.1124802289723049E-6	DEFECT	9.30518051213086E-7	IMPLEMENTATION	1.2546268636757428E-7	DOCUMENTATION	1.1702669122663675E-7	TEST
//propertyTableNumbersByName.put( prop.getName(), join );	WITHOUT_CLASSIFICATION	0.9999985634326571	WITHOUT_CLASSIFICATION	6.027408314533264E-7	DEFECT	4.6306119550459607E-7	DESIGN	1.6761847077534733E-7	TEST	1.0972260959526389E-7	IMPLEMENTATION	9.342423557029017E-8	DOCUMENTATION
//Access cached SQL	WITHOUT_CLASSIFICATION	0.99977256219696	WITHOUT_CLASSIFICATION	2.260533358087334E-4	DESIGN	6.91625670520407E-7	DEFECT	3.055590340996362E-7	IMPLEMENTATION	2.2885504121112498E-7	DOCUMENTATION	1.584274854977083E-7	TEST
//figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.9972651083750785	WITHOUT_CLASSIFICATION	0.0027315836583433092	DESIGN	1.4066377647757032E-6	IMPLEMENTATION	1.1069162496059768E-6	TEST	4.6636329379064415E-7	DOCUMENTATION	3.2804926994927064E-7	DEFECT
//figure out which columns are needed	WITHOUT_CLASSIFICATION	0.8993340940809823	WITHOUT_CLASSIFICATION	0.08552763454941104	DESIGN	0.015041527771307154	IMPLEMENTATION	6.011022177120849E-5	DOCUMENTATION	3.5248897001625266E-5	TEST	1.384479526630467E-6	DEFECT
//figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.9959107718958691	WITHOUT_CLASSIFICATION	0.003560171677899102	DESIGN	5.093783453367712E-4	IMPLEMENTATION	1.4406850998612108E-5	DOCUMENTATION	5.051522117258537E-6	TEST	2.1970777923597487E-7	DEFECT
//render the SQL	WITHOUT_CLASSIFICATION	0.9989891298986743	WITHOUT_CLASSIFICATION	9.160134504394176E-4	DESIGN	7.274310154849153E-5	DEFECT	1.4676606348427158E-5	IMPLEMENTATION	5.9301115474426305E-6	DOCUMENTATION	1.5068314420338805E-6	TEST
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999988160641448	WITHOUT_CLASSIFICATION	1.0663287978778116E-6	DESIGN	6.205948551128359E-8	IMPLEMENTATION	4.5026531619941246E-8	TEST	7.351440650362026E-9	DEFECT	3.1695994855737875E-9	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999614573041816	WITHOUT_CLASSIFICATION	3.850307909791951E-5	DESIGN	1.5761312463998473E-8	IMPLEMENTATION	1.047241935767497E-8	TEST	9.388172575143077E-9	DEFECT	3.994816134144278E-9	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999955005630445	WITHOUT_CLASSIFICATION	1.6825552579018131E-6	IMPLEMENTATION	1.346095068509579E-6	DEFECT	1.0210604544520953E-6	DESIGN	2.2902476233455182E-7	TEST	2.207014123387803E-7	DOCUMENTATION
// The optional SQL string defined in the where attribute	WITHOUT_CLASSIFICATION	0.9999999307782713	WITHOUT_CLASSIFICATION	6.250193231430946E-8	DESIGN	5.48058986591086E-9	IMPLEMENTATION	6.68392204223103E-10	DOCUMENTATION	4.0016394207596677E-10	DEFECT	1.706503605407187E-10	TEST
//information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.9996035000796255	WITHOUT_CLASSIFICATION	2.57815663164759E-4	DESIGN	1.36600165821498E-4	DEFECT	1.1472176961187341E-6	DOCUMENTATION	9.226963160289247E-7	TEST	1.417737620470712E-8	IMPLEMENTATION
//information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.9999989445027531	WITHOUT_CLASSIFICATION	6.386043937646395E-7	DEFECT	3.956640743177728E-7	DESIGN	1.8749673543132085E-8	DOCUMENTATION	1.8026036352208511E-9	TEST	6.76501700827801E-10	IMPLEMENTATION
//information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.9999991515911024	WITHOUT_CLASSIFICATION	6.565290843492193E-7	DESIGN	1.5494847928466399E-7	DEFECT	2.2353555769811845E-8	IMPLEMENTATION	1.3544212295135763E-8	DOCUMENTATION	1.0335659869410705E-9	TEST
// dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9999992418570789	WITHOUT_CLASSIFICATION	6.722436246429602E-7	DESIGN	8.222821709357331E-8	DEFECT	1.3815425660464928E-9	DOCUMENTATION	1.2588930221423188E-9	TEST	1.0306436544994512E-9	IMPLEMENTATION
// SQL strings	WITHOUT_CLASSIFICATION	0.9999963382316661	WITHOUT_CLASSIFICATION	2.5490373575959266E-6	DESIGN	7.440661928314499E-7	DEFECT	2.701291049173462E-7	IMPLEMENTATION	5.320858510438661E-8	DOCUMENTATION	4.532709353991141E-8	TEST
// for objects that came in via update()	WITHOUT_CLASSIFICATION	0.9999993489046015	WITHOUT_CLASSIFICATION	5.271410090020375E-7	DESIGN	8.543830860103353E-8	IMPLEMENTATION	3.3103684231969034E-8	DEFECT	3.527755438846084E-9	DOCUMENTATION	1.8846412317477124E-9	TEST
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999953783240696	WITHOUT_CLASSIFICATION	2.3940126939104046E-6	DESIGN	1.6200709601076645E-6	IMPLEMENTATION	2.7597417270661865E-7	DEFECT	2.234356539531748E-7	DOCUMENTATION	1.0818244973676646E-7	TEST
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999955005630445	WITHOUT_CLASSIFICATION	1.6825552579018131E-6	IMPLEMENTATION	1.346095068509579E-6	DEFECT	1.0210604544520953E-6	DESIGN	2.2902476233455182E-7	TEST	2.207014123387803E-7	DOCUMENTATION
// IDENTIFIER	WITHOUT_CLASSIFICATION	0.9999923596545919	WITHOUT_CLASSIFICATION	5.287229061023037E-6	IMPLEMENTATION	1.3845876246041952E-6	DESIGN	6.338767244838767E-7	DEFECT	1.993357739150118E-7	TEST	1.3531622415516644E-7	DOCUMENTATION
// VERSION	WITHOUT_CLASSIFICATION	0.999997866630129	WITHOUT_CLASSIFICATION	1.4285737023751901E-6	DESIGN	3.115597603889087E-7	DEFECT	2.7908113448485454E-7	IMPLEMENTATION	5.8106762083122204E-8	TEST	5.604851158467008E-8	DOCUMENTATION
//WHERE STRING	WITHOUT_CLASSIFICATION	0.9999801896258366	WITHOUT_CLASSIFICATION	1.0016804828413777E-5	IMPLEMENTATION	7.716156265308246E-6	DESIGN	8.51114129952903E-7	DOCUMENTATION	8.500637057154719E-7	DEFECT	3.762352339735766E-7	TEST
// SUBCLASS PROPERTY CLOSURE	WITHOUT_CLASSIFICATION	0.9999993085323212	WITHOUT_CLASSIFICATION	3.7417802289283774E-7	DESIGN	1.2295303746380324E-7	IMPLEMENTATION	8.61327304465353E-8	DOCUMENTATION	8.463871052492699E-8	DEFECT	2.356517737994652E-8	TEST
//before add :-)	WITHOUT_CLASSIFICATION	0.999943159697345	WITHOUT_CLASSIFICATION	2.876072952232915E-5	DESIGN	2.2390933103691533E-5	IMPLEMENTATION	3.556076662557768E-6	DEFECT	1.7452884465175054E-6	DOCUMENTATION	3.8727491984008463E-7	TEST
// Handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.9953000012137806	WITHOUT_CLASSIFICATION	0.00467860239532196	DESIGN	2.074039613592496E-5	IMPLEMENTATION	2.3808019780152046E-7	TEST	2.1369498916321128E-7	DEFECT	2.0421957451785765E-7	DOCUMENTATION
// only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.9999958487949241	WITHOUT_CLASSIFICATION	2.97525941101764E-6	DEFECT	9.86244465252099E-7	DESIGN	1.2697888176951618E-7	IMPLEMENTATION	4.790156327358336E-8	TEST	1.4820754605580475E-8	DOCUMENTATION
//note early exit here:	WITHOUT_CLASSIFICATION	0.9964626692906557	WITHOUT_CLASSIFICATION	0.0029263372782877893	DESIGN	4.1594404007064094E-4	DEFECT	1.574078555885681E-4	IMPLEMENTATION	2.7343230508914967E-5	TEST	1.0298304888237648E-5	DOCUMENTATION
// object have been loaded with setReadOnly(true); HHH-2236	WITHOUT_CLASSIFICATION	0.9999922479571318	WITHOUT_CLASSIFICATION	4.105393281755769E-6	DESIGN	2.7398477519151684E-6	DEFECT	8.371183723188382E-7	IMPLEMENTATION	3.5158222365005946E-8	TEST	3.452523986432582E-8	DOCUMENTATION
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.9942971103766384	WITHOUT_CLASSIFICATION	0.0034195821742368463	DESIGN	0.001553699826300391	TEST	7.253651578536159E-4	DEFECT	2.2646950168337424E-6	IMPLEMENTATION	1.977769954001673E-6	DOCUMENTATION
//strip leading ", "	WITHOUT_CLASSIFICATION	0.9999976630967269	WITHOUT_CLASSIFICATION	8.295097733627592E-7	IMPLEMENTATION	7.934116942141047E-7	DESIGN	3.8642787526193887E-7	DEFECT	2.533679850263912E-7	TEST	7.418594521084343E-8	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.999979554681813	WITHOUT_CLASSIFICATION	1.6609145772129505E-5	DEFECT	3.736834490357743E-6	DESIGN	8.403274686712763E-8	TEST	8.441119587607547E-9	IMPLEMENTATION	6.864058160658944E-9	DOCUMENTATION
//otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.9824831967559439	WITHOUT_CLASSIFICATION	0.01724099075705341	DESIGN	2.7036765280257706E-4	IMPLEMENTATION	2.5290038605799934E-6	DEFECT	2.435797965223606E-6	TEST	4.80032374390334E-7	DOCUMENTATION
//null owner ok??	WITHOUT_CLASSIFICATION	0.9999216695882893	WITHOUT_CLASSIFICATION	6.691633033038041E-5	DESIGN	6.131602048815755E-6	IMPLEMENTATION	4.77322108425243E-6	DEFECT	3.352313357636522E-7	DOCUMENTATION	1.7402691137079356E-7	TEST
// null sql means that the only lazy properties // are shared PK one-to-one associations which are // handled differently in the Type#nullSafeGet code...	WITHOUT_CLASSIFICATION	0.9999696546159077	WITHOUT_CLASSIFICATION	3.010783780619934E-5	DESIGN	1.7342215614667457E-7	DOCUMENTATION	5.503076163676363E-8	DEFECT	5.780646019960845E-9	IMPLEMENTATION	3.3127222464603643E-9	TEST
// Create a new FROM node for the referenced class.	WITHOUT_CLASSIFICATION	0.9999791834505658	WITHOUT_CLASSIFICATION	2.0807271141318998E-5	DESIGN	4.272330339213365E-9	DOCUMENTATION	2.757378357788187E-9	DEFECT	1.250994319056711E-9	TEST	9.97589958741054E-10	IMPLEMENTATION
// the difficulty here is exactly what do we update in order to // force the version to be incremented in the db...	WITHOUT_CLASSIFICATION	0.9661434189919148	WITHOUT_CLASSIFICATION	0.03383049932587949	DESIGN	1.541160418873223E-5	DEFECT	9.244294719944131E-6	IMPLEMENTATION	1.3748105448465767E-6	DOCUMENTATION	5.0972752224693286E-8	TEST
// performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.9999964858268712	WITHOUT_CLASSIFICATION	3.1530715168466416E-6	DESIGN	2.878905252750831E-7	DOCUMENTATION	3.805481064257746E-8	IMPLEMENTATION	3.3317674891968074E-8	DEFECT	1.8386008716290189E-9	TEST
// properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.9999993748229664	WITHOUT_CLASSIFICATION	4.771693610233948E-7	DESIGN	6.031650261885089E-8	DEFECT	5.911394907443105E-8	IMPLEMENTATION	1.8914704202510817E-8	DOCUMENTATION	9.662516595348035E-9	TEST
//Enable for HHH-440, which we don't like:	WITHOUT_CLASSIFICATION	0.9944194093736927	WITHOUT_CLASSIFICATION	0.005571132840888798	DESIGN	3.6036158053962413E-6	DOCUMENTATION	3.1628294088594534E-6	DEFECT	2.2770961870603985E-6	TEST	4.142440171466989E-7	IMPLEMENTATION
// ALIASES	WITHOUT_CLASSIFICATION	0.9999942334064688	WITHOUT_CLASSIFICATION	3.144617192272021E-6	DESIGN	1.8335655681084094E-6	DEFECT	5.918207653306294E-7	IMPLEMENTATION	1.2923096117945136E-7	DOCUMENTATION	6.735904439316767E-8	TEST
// aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.9999916050626882	WITHOUT_CLASSIFICATION	8.062865357802634E-6	DESIGN	2.8405070545517996E-7	IMPLEMENTATION	2.8905157523693608E-8	TEST	1.14749245161509E-8	DEFECT	7.641166361467034E-9	DOCUMENTATION
// aliases for composite-id's	WITHOUT_CLASSIFICATION	0.9999999405356723	WITHOUT_CLASSIFICATION	5.069534259960369E-8	DESIGN	4.9515355341775075E-9	IMPLEMENTATION	2.3684812005154572E-9	DEFECT	1.0539036591261892E-9	TEST	3.950647010694232E-10	DOCUMENTATION
// Fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.9999999781637259	WITHOUT_CLASSIFICATION	2.049541080996639E-8	DESIGN	1.2767767550604664E-9	DEFECT	3.3361598738958375E-11	TEST	2.7681973086065067E-11	DOCUMENTATION	3.0430583155356854E-12	IMPLEMENTATION
// embedded composite ids ( alias.idname1, alias.idname2 )	WITHOUT_CLASSIFICATION	0.9999999385518402	WITHOUT_CLASSIFICATION	4.656427868386037E-8	DESIGN	8.978552997724534E-9	IMPLEMENTATION	5.100756783425024E-9	DEFECT	5.022305596542614E-10	TEST	3.0234082680622126E-10	DOCUMENTATION
// TODO: skip formulas?	WITHOUT_CLASSIFICATION	0.825910127937944	IMPLEMENTATION	0.11703069921711183	DESIGN	0.049720083814298585	WITHOUT_CLASSIFICATION	0.0037735749329278786	DOCUMENTATION	0.002886261201423445	DEFECT	6.792528962941592E-4	TEST
//don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9999918607420912	WITHOUT_CLASSIFICATION	3.928259905774932E-6	IMPLEMENTATION	3.4807461379772574E-6	DESIGN	3.787327087061527E-7	TEST	2.10788532328479E-7	DEFECT	1.407306240310515E-7	DOCUMENTATION
//do two passes, for collection property-ref!	WITHOUT_CLASSIFICATION	0.9999971637249577	WITHOUT_CLASSIFICATION	2.508007431984163E-6	DEFECT	2.0810267060359445E-7	IMPLEMENTATION	7.776413499589273E-8	TEST	3.0646692303457445E-8	DOCUMENTATION	1.1754112517466417E-8	DESIGN
// select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.999953551083341	WITHOUT_CLASSIFICATION	2.806206371083676E-5	DEFECT	1.8138309338086723E-5	DESIGN	1.6898896220028216E-7	IMPLEMENTATION	7.192847131417205E-8	TEST	7.626176465148856E-9	DOCUMENTATION
//TODO: eventually, rowIdName[j]	WITHOUT_CLASSIFICATION	0.7942966635700169	IMPLEMENTATION	0.16141151033538403	WITHOUT_CLASSIFICATION	0.03767499713425638	DESIGN	0.0056888171076233335	DEFECT	5.785579390106793E-4	DOCUMENTATION	3.494539137087031E-4	TEST
// this is a property of the table, which we are updating	WITHOUT_CLASSIFICATION	0.9999788597337966	WITHOUT_CLASSIFICATION	1.5011128199442931E-5	DEFECT	6.083389350163669E-6	DESIGN	2.191984910152652E-8	DOCUMENTATION	1.3522310811052878E-8	IMPLEMENTATION	1.0306493925732148E-8	TEST
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9998517010135703	WITHOUT_CLASSIFICATION	1.1790750514791602E-4	DEFECT	2.0903359086349956E-5	DESIGN	4.880486714715811E-6	IMPLEMENTATION	2.4311986523076063E-6	TEST	2.1764368282456923E-6	DOCUMENTATION
// we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.9999641659134015	WITHOUT_CLASSIFICATION	2.785615052133722E-5	DEFECT	7.803144590323462E-6	DESIGN	8.78069486532066E-8	DOCUMENTATION	4.5062868740010495E-8	IMPLEMENTATION	4.192166934316332E-8	TEST
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.999857747147973	WITHOUT_CLASSIFICATION	1.3943361972083891E-4	DESIGN	1.480789886788481E-6	TEST	9.163796440261076E-7	IMPLEMENTATION	4.0604980985640315E-7	DEFECT	1.6012965412618337E-8	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9997839330313634	WITHOUT_CLASSIFICATION	2.092038211564595E-4	DESIGN	6.848020078154281E-6	DEFECT	1.3544810674545455E-8	TEST	1.5451128662847663E-9	DOCUMENTATION	3.747848769063899E-11	IMPLEMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9999999658181657	WITHOUT_CLASSIFICATION	1.4877895608202928E-8	IMPLEMENTATION	7.292920777203201E-9	DEFECT	5.788135545667703E-9	DOCUMENTATION	5.768947954198505E-9	DESIGN	4.5393420931179994E-10	TEST
// add the discriminator	WITHOUT_CLASSIFICATION	0.9999803725324499	WITHOUT_CLASSIFICATION	1.9465862978908536E-5	DESIGN	1.3151838394293398E-7	DOCUMENTATION	1.1510047359798788E-8	DEFECT	9.628267458580163E-9	IMPLEMENTATION	8.947872353335598E-9	TEST
// more specifically : "? [op] datetime" //      1) if the operator is MINUS, the param needs to be of //          some datetime type //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.8971420832488302	WITHOUT_CLASSIFICATION	0.10283562921517947	DESIGN	1.946069916038651E-5	DEFECT	1.7203805209647584E-6	DOCUMENTATION	5.692337866462518E-7	TEST	5.372225223380339E-7	IMPLEMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9999999658181657	WITHOUT_CLASSIFICATION	1.4877895608202928E-8	IMPLEMENTATION	7.292920777203201E-9	DEFECT	5.788135545667703E-9	DOCUMENTATION	5.768947954198505E-9	DESIGN	4.5393420931179994E-10	TEST
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9997839330313634	WITHOUT_CLASSIFICATION	2.092038211564595E-4	DESIGN	6.848020078154281E-6	DEFECT	1.3544810674545455E-8	TEST	1.5451128662847663E-9	DOCUMENTATION	3.747848769063899E-11	IMPLEMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.9999803725324499	WITHOUT_CLASSIFICATION	1.9465862978908536E-5	DESIGN	1.3151838394293398E-7	DOCUMENTATION	1.1510047359798788E-8	DEFECT	9.628267458580163E-9	IMPLEMENTATION	8.947872353335598E-9	TEST
// add the primary key	WITHOUT_CLASSIFICATION	0.9999865257162335	WITHOUT_CLASSIFICATION	1.1309349400808561E-5	DESIGN	1.692715224028779E-6	IMPLEMENTATION	3.3543768530299227E-7	DOCUMENTATION	7.224431082957345E-8	DEFECT	6.453714554155034E-8	TEST
// delegate already handles PK columns	WITHOUT_CLASSIFICATION	0.9999978001347494	WITHOUT_CLASSIFICATION	2.0854674220931007E-6	DESIGN	5.802677100790562E-8	IMPLEMENTATION	3.276782846075209E-8	DEFECT	1.232152744594719E-8	TEST	1.1281701586105239E-8	DOCUMENTATION
// we can't batch joined inserts, *especially* not if it is an identity insert; // nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.9999993969981897	WITHOUT_CLASSIFICATION	5.926309955429996E-7	DEFECT	9.49635242755644E-9	DESIGN	8.301608038154066E-10	TEST	3.131422744671636E-11	DOCUMENTATION	1.2987238427749E-11	IMPLEMENTATION
// Render the SQL query	WITHOUT_CLASSIFICATION	0.9951659898270726	WITHOUT_CLASSIFICATION	0.004666107336355909	DESIGN	1.593533770309409E-4	DEFECT	4.1289876159187515E-6	IMPLEMENTATION	3.4312286305179104E-6	DOCUMENTATION	9.892432941656224E-7	TEST
// Write the values of fields onto the prepared statement - we MUST use the state at the time the // insert was issued (cos of foreign key constraints). Not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.9998792007297154	WITHOUT_CLASSIFICATION	6.461440074889242E-5	DEFECT	5.612366959542999E-5	DESIGN	5.571296021347242E-8	DOCUMENTATION	4.82212139760296E-9	TEST	6.648587232699059E-10	IMPLEMENTATION
// TODO : shouldnt inserts be Expectations.NONE?	WITHOUT_CLASSIFICATION	0.9853594033922187	DESIGN	0.0073954928170029185	IMPLEMENTATION	0.006901772188436879	DEFECT	1.7637832671621125E-4	WITHOUT_CLASSIFICATION	1.4307871106103952E-4	TEST	2.3874564564145713E-5	DOCUMENTATION
//don't bother trying to update, we know there is no row there yet	WITHOUT_CLASSIFICATION	0.7814505086657798	DESIGN	0.21706216549041146	WITHOUT_CLASSIFICATION	0.0014237716250134814	DEFECT	5.2903975355490314E-5	IMPLEMENTATION	9.05834247188507E-6	TEST	1.591900967759593E-6	DOCUMENTATION
//if all fields are null, we might need to delete existing row	WITHOUT_CLASSIFICATION	0.9999692833108232	WITHOUT_CLASSIFICATION	1.8917719978410514E-5	IMPLEMENTATION	7.139687758443425E-6	DESIGN	3.052348781329644E-6	DEFECT	1.3750182048392912E-6	TEST	2.3191445361608332E-7	DOCUMENTATION
//there is probably a row there, so try to update //if no rows were updated, we will find out	WITHOUT_CLASSIFICATION	0.9969336560238093	WITHOUT_CLASSIFICATION	0.0030662817239278405	DESIGN	5.112085947142037E-8	IMPLEMENTATION	5.6440536195123805E-9	TEST	2.8481019867540776E-9	DEFECT	2.6392477519933705E-9	DOCUMENTATION
//note: updates to joined tables can't be batched...	WITHOUT_CLASSIFICATION	0.999982805555638	WITHOUT_CLASSIFICATION	1.549388616143648E-5	DEFECT	1.6426680095228754E-6	DESIGN	2.3138147057426666E-8	IMPLEMENTATION	2.0419354513254144E-8	TEST	1.4332689554528279E-8	DOCUMENTATION
// starting index	WITHOUT_CLASSIFICATION	0.9999778236280872	WITHOUT_CLASSIFICATION	1.2920895174617209E-5	DEFECT	6.123731484909746E-6	DESIGN	2.6995867860571744E-6	IMPLEMENTATION	2.3665244706800192E-7	DOCUMENTATION	1.9550602019935455E-7	TEST
//Now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.9998596607164388	WITHOUT_CLASSIFICATION	1.1364185657621896E-4	DESIGN	1.7050299010568385E-5	DEFECT	7.599770498779775E-6	IMPLEMENTATION	1.8465129684696764E-6	TEST	2.0084450712377114E-7	DOCUMENTATION
// Write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.9995878904841832	WITHOUT_CLASSIFICATION	2.042368456385279E-4	DEFECT	1.4667885047308166E-4	DESIGN	6.009914315267601E-5	IMPLEMENTATION	9.030321328324457E-7	DOCUMENTATION	1.9164441955838895E-7	TEST
//Render the SQL query	WITHOUT_CLASSIFICATION	0.9930698407054896	WITHOUT_CLASSIFICATION	0.006849478039324097	DESIGN	6.610100292432072E-5	DEFECT	8.744535916709018E-6	DOCUMENTATION	4.096142422073662E-6	IMPLEMENTATION	1.7395739230781451E-6	TEST
// Do the key. The key is immutable so we can use the _current_ object state - not necessarily // the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.9999934031372225	WITHOUT_CLASSIFICATION	5.528921728827159E-6	IMPLEMENTATION	9.218715690923297E-7	DEFECT	7.425107872396106E-8	DOCUMENTATION	6.818089559449796E-8	DESIGN	3.6375053756870653E-9	TEST
// We should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.9999995013532248	WITHOUT_CLASSIFICATION	2.5762478773466815E-7	DEFECT	2.20475481101882E-7	DESIGN	1.6894984969929072E-8	IMPLEMENTATION	2.584739873097076E-9	DOCUMENTATION	1.0667816077081694E-9	TEST
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999837969298557	WITHOUT_CLASSIFICATION	1.551414372850378E-5	DESIGN	6.83821749726515E-7	DEFECT	3.4811588856106552E-9	DOCUMENTATION	1.508651923812729E-9	TEST	1.148552537878143E-10	IMPLEMENTATION
//note: dirtyFields==null means we had no snapshot, and we couldn't get one using select-before-update //	WITHOUT_CLASSIFICATION	0.9999872101273373	WITHOUT_CLASSIFICATION	1.0618094893429956E-5	DESIGN	2.1391459797441553E-6	DEFECT	3.05047286614333E-8	IMPLEMENTATION	1.7446086830260421E-9	TEST	3.824522123945142E-10	DOCUMENTATION
// more specifically : "datetime [op] ?" //      1) if the operator is MINUS, we really cannot determine //          the expected type as either another datetime or //          numeric would be valid //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9998960047328598	WITHOUT_CLASSIFICATION	1.0386708245776833E-4	DESIGN	1.261176058921361E-7	DEFECT	1.5697123108181305E-9	DOCUMENTATION	4.936985275861702E-10	TEST	3.665790755332046E-12	IMPLEMENTATION
// For the case of dynamic-update="true", we need to generate the UPDATE SQL	WITHOUT_CLASSIFICATION	0.9999998292419715	WITHOUT_CLASSIFICATION	1.4752051407332002E-7	DESIGN	1.2149180688099233E-8	DOCUMENTATION	5.3176268824527325E-9	TEST	3.712482891131293E-9	IMPLEMENTATION	2.0582238787923542E-9	DEFECT
// don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.5645986114763972	IMPLEMENTATION	0.35742167508299755	WITHOUT_CLASSIFICATION	0.07201932490450999	DESIGN	0.005756098433213401	DEFECT	1.2441125560031554E-4	DOCUMENTATION	7.987884728156164E-5	TEST
// For the case of dynamic-update="false", or no snapshot, we use the static SQL	WITHOUT_CLASSIFICATION	0.9999999813602038	WITHOUT_CLASSIFICATION	1.6343426822698332E-8	DESIGN	1.2014605312312358E-9	DEFECT	6.10910085308908E-10	IMPLEMENTATION	4.743151122708514E-10	DOCUMENTATION	9.68366514903686E-12	TEST
// if not "get", then try "is"	WITHOUT_CLASSIFICATION	0.9999453306309664	WITHOUT_CLASSIFICATION	3.860782493574093E-5	DESIGN	1.231072990961762E-5	DEFECT	2.7169019788201155E-6	TEST	7.906117328222112E-7	IMPLEMENTATION	2.433004766597098E-7	DOCUMENTATION
// Now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.9999973601962412	WITHOUT_CLASSIFICATION	2.5817986642183556E-6	DESIGN	5.320345759358836E-8	IMPLEMENTATION	2.478453960378082E-9	DEFECT	1.3342294520321328E-9	DOCUMENTATION	9.889534539032933E-10	TEST
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999981964815081	WITHOUT_CLASSIFICATION	1.6935968619075944E-6	DESIGN	6.909961599422627E-8	TEST	3.536853240271592E-8	DOCUMENTATION	3.162212275973841E-9	DEFECT	2.291269428353737E-9	IMPLEMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999981964815081	WITHOUT_CLASSIFICATION	1.6935968619075944E-6	DESIGN	6.909961599422627E-8	TEST	3.536853240271592E-8	DOCUMENTATION	3.162212275973841E-9	DEFECT	2.291269428353737E-9	IMPLEMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999999653308654	WITHOUT_CLASSIFICATION	3.147668985335278E-8	DESIGN	2.4400002699802014E-9	DEFECT	4.3456610868942364E-10	DOCUMENTATION	2.537678138115097E-10	IMPLEMENTATION	6.411032638235487E-11	TEST
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999999653308654	WITHOUT_CLASSIFICATION	3.147668985335278E-8	DESIGN	2.4400002699802014E-9	DEFECT	4.3456610868942364E-10	DOCUMENTATION	2.537678138115097E-10	IMPLEMENTATION	6.411032638235487E-11	TEST
// not supported	WITHOUT_CLASSIFICATION	0.9921395483966942	WITHOUT_CLASSIFICATION	0.006435832048538108	IMPLEMENTATION	0.0013629809748042481	DESIGN	5.3640187360920095E-5	DEFECT	5.128739222187409E-6	TEST	2.8696533802710176E-6	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999837969298557	WITHOUT_CLASSIFICATION	1.551414372850378E-5	DESIGN	6.83821749726515E-7	DEFECT	3.4811588856106552E-9	DOCUMENTATION	1.508651923812729E-9	TEST	1.148552537878143E-10	IMPLEMENTATION
// we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.9999476051034817	WITHOUT_CLASSIFICATION	4.925352284827795E-5	DESIGN	2.149632960843756E-6	DOCUMENTATION	7.228478157785669E-7	IMPLEMENTATION	1.6327564020180047E-7	TEST	1.0561725328858005E-7	DEFECT
// otherwise, utilize the static delete statements	WITHOUT_CLASSIFICATION	0.9999958608615315	WITHOUT_CLASSIFICATION	2.17627494622746E-6	DESIGN	1.953847165578299E-6	IMPLEMENTATION	3.919165550040351E-9	TEST	3.3707496118083337E-9	DOCUMENTATION	1.7264415300802436E-9	DEFECT
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9992048874815789	WITHOUT_CLASSIFICATION	7.82911754746382E-4	DESIGN	6.563357579085369E-6	DOCUMENTATION	4.8609023698555794E-6	IMPLEMENTATION	4.0614360974354524E-7	DEFECT	3.7036011601940837E-7	TEST
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9992048874815789	WITHOUT_CLASSIFICATION	7.82911754746382E-4	DESIGN	6.563357579085369E-6	DOCUMENTATION	4.8609023698555794E-6	IMPLEMENTATION	4.0614360974354524E-7	DEFECT	3.7036011601940837E-7	TEST
//all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.9999940306363008	WITHOUT_CLASSIFICATION	3.94844308807429E-6	IMPLEMENTATION	1.1531672001086077E-6	DESIGN	7.725842991497034E-7	DEFECT	8.036707653104408E-8	DOCUMENTATION	1.4802035195564162E-8	TEST
//notice that we skip the first table; it is the driving table!	WITHOUT_CLASSIFICATION	0.9999988419121931	WITHOUT_CLASSIFICATION	7.320068930564531E-7	DESIGN	2.144753330261426E-7	IMPLEMENTATION	1.0787217446326429E-7	TEST	9.973455477806888E-8	DEFECT	3.99885158601865E-9	DOCUMENTATION
//we can inner join to superclass tables (the row MUST be there) //we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.9999706425177848	WITHOUT_CLASSIFICATION	2.9356559442809882E-5	DESIGN	8.002182747433259E-10	DEFECT	9.961520732404332E-11	DOCUMENTATION	1.4534904270862708E-11	IMPLEMENTATION	8.403997868949191E-12	TEST
//skip the driving table	WITHOUT_CLASSIFICATION	0.9999875756283898	WITHOUT_CLASSIFICATION	9.29779509352865E-6	IMPLEMENTATION	2.24006502673347E-6	DESIGN	4.883495900261112E-7	DEFECT	2.9703866587949495E-7	TEST	1.0112323384547721E-7	DOCUMENTATION
//get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.9762585520112564	WITHOUT_CLASSIFICATION	0.022310463974174414	DESIGN	0.0012566619006569007	DEFECT	1.7109605025594521E-4	IMPLEMENTATION	2.4115449460345097E-6	DOCUMENTATION	8.145187102686426E-7	TEST
// here, we work under the following assumptions: //      ------------ valid cases -------------------------------------- //      1) datetime + {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      2) datetime - datetime : always results in a DOUBLE //      3) datetime - {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      ------------ invalid cases ------------------------------------ //      4) datetime + datetime //      5) {something other than datetime} - datetime //      6) datetime * {any type} //      7) datetime / {any type} //      8) {any type} / datetime // doing so allows us to properly handle parameters as either the left // or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.9717951668729333	WITHOUT_CLASSIFICATION	0.028127019683716985	DEFECT	7.773726620651812E-5	DESIGN	5.9126550432595085E-8	IMPLEMENTATION	1.6524549335193555E-8	DOCUMENTATION	5.260434335557842E-10	TEST
//render the where and from parts	WITHOUT_CLASSIFICATION	0.999739303464053	WITHOUT_CLASSIFICATION	2.4359780042568018E-4	DESIGN	1.453605695244196E-5	DEFECT	1.0310101111644765E-6	DOCUMENTATION	8.218733544385116E-7	IMPLEMENTATION	7.097951030574829E-7	TEST
//we *could* regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.979252257322782	WITHOUT_CLASSIFICATION	0.020736909310518956	DESIGN	9.082841022445576E-6	DEFECT	1.4047831371334587E-6	IMPLEMENTATION	2.9815177002119247E-7	TEST	4.759076942582463E-8	DOCUMENTATION
//now render the joins	WITHOUT_CLASSIFICATION	0.9998315396399109	WITHOUT_CLASSIFICATION	1.370377594510729E-4	DESIGN	2.3387401520748218E-5	DEFECT	6.025514936458229E-6	IMPLEMENTATION	1.752212022166458E-6	DOCUMENTATION	2.574721586712436E-7	TEST
// This will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.9999978000097777	WITHOUT_CLASSIFICATION	1.5044995200690862E-6	DESIGN	4.403770740724194E-7	IMPLEMENTATION	1.948263829712833E-7	DEFECT	5.537113780772325E-8	DOCUMENTATION	4.916107380611799E-9	TEST
//now render the select clause	WITHOUT_CLASSIFICATION	0.9999983943842045	WITHOUT_CLASSIFICATION	9.3989767556186E-7	DESIGN	5.525739355625636E-7	DEFECT	9.766875585197551E-8	IMPLEMENTATION	1.1984116806596222E-8	DOCUMENTATION	3.491311583332325E-9	TEST
//now tie it all together	WITHOUT_CLASSIFICATION	0.9999101567973155	WITHOUT_CLASSIFICATION	7.782167016703836E-5	DESIGN	1.1857116634985146E-5	IMPLEMENTATION	6.501635185858242E-8	DEFECT	5.2312140610288235E-8	TEST	4.708738992214651E-8	DOCUMENTATION
//insert/update/delete SQL	WITHOUT_CLASSIFICATION	0.9999980049477605	WITHOUT_CLASSIFICATION	1.7147138860765578E-6	DESIGN	2.518170119081571E-7	DEFECT	1.0587815290476743E-8	TEST	1.031865967235375E-8	DOCUMENTATION	7.614866542563228E-9	IMPLEMENTATION
//select SQL	WITHOUT_CLASSIFICATION	0.9999750134093578	WITHOUT_CLASSIFICATION	2.255295701112341E-5	DESIGN	1.2450376584630644E-6	IMPLEMENTATION	8.03041900567768E-7	DEFECT	1.9773592582140955E-7	TEST	1.878181462331237E-7	DOCUMENTATION
//no need to check laziness, dirty checking handles that	WITHOUT_CLASSIFICATION	0.9982248185011231	WITHOUT_CLASSIFICATION	0.0012203969935682037	DESIGN	5.252483290094641E-4	IMPLEMENTATION	1.5595516055245004E-5	DEFECT	7.83229214381637E-6	TEST	6.108368100176258E-6	DOCUMENTATION
// Fully resolve the map reference, create implicit joins.	WITHOUT_CLASSIFICATION	0.999911530209086	WITHOUT_CLASSIFICATION	8.730343897156621E-5	DESIGN	8.028762733754887E-7	IMPLEMENTATION	1.6201018973285524E-7	TEST	1.3007554422221567E-7	DEFECT	7.138993510685179E-8	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998040127022678	WITHOUT_CLASSIFICATION	1.9461630070784068E-4	DESIGN	6.617809676499185E-7	DEFECT	3.537798424815882E-7	TEST	2.57775767793535E-7	IMPLEMENTATION	9.766044637840726E-8	DOCUMENTATION
// The basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.9999988424227229	WITHOUT_CLASSIFICATION	9.603664491510005E-7	DESIGN	1.8117003900747028E-7	IMPLEMENTATION	1.153699028487689E-8	DEFECT	4.0351304028292005E-9	DOCUMENTATION	4.686684515296395E-10	TEST
// for dialects which are known to not support ANSI-SQL row-value-constructor syntax, // we should mutate the tree.	WITHOUT_CLASSIFICATION	0.9998790311007851	WITHOUT_CLASSIFICATION	1.1872201596368978E-4	DESIGN	1.7640392321057177E-6	IMPLEMENTATION	4.344210679550443E-7	DEFECT	4.117858893972596E-8	TEST	7.24436216403961E-9	DOCUMENTATION
// Due to the complexity in initializing the SelectClause, do not generate one here. // If it is not found; simply return null... // // Also, do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.9999965721445955	WITHOUT_CLASSIFICATION	2.8935948793551138E-6	DESIGN	4.826749693303219E-7	DEFECT	4.778772639559369E-8	IMPLEMENTATION	3.060062143023213E-9	TEST	7.377671883092209E-10	DOCUMENTATION
// check the version unsaved-value, if appropriate	WITHOUT_CLASSIFICATION	0.9999482758233756	WITHOUT_CLASSIFICATION	3.670018439297549E-5	IMPLEMENTATION	1.3824434132323894E-5	DESIGN	1.1499487571556164E-6	DEFECT	4.365413748251243E-8	DOCUMENTATION	5.955204544176008E-9	TEST
// let this take precedence if defined, since it works for // assigned identifiers	WITHOUT_CLASSIFICATION	0.9999993409730392	WITHOUT_CLASSIFICATION	4.1783893732886694E-7	DEFECT	1.738186638699169E-7	TEST	5.472108760764821E-8	DESIGN	1.0211095961420148E-8	IMPLEMENTATION	2.4371760839138543E-9	DOCUMENTATION
// check the id unsaved-value	WITHOUT_CLASSIFICATION	0.9999949752545263	WITHOUT_CLASSIFICATION	2.2848349479304483E-6	IMPLEMENTATION	1.932053158985912E-6	DESIGN	6.882733720136224E-7	DEFECT	1.1176288390994701E-7	DOCUMENTATION	7.821110791702593E-9	TEST
// check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.9999843842719176	WITHOUT_CLASSIFICATION	1.5525348493548212E-5	DESIGN	5.758889476288351E-8	DEFECT	1.748872957498513E-8	IMPLEMENTATION	1.2419875432307944E-8	DOCUMENTATION	2.882088931283987E-9	TEST
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998210722037159	WITHOUT_CLASSIFICATION	1.4179224779189498E-4	DESIGN	1.7719301788286053E-5	IMPLEMENTATION	7.987439563016846E-6	DEFECT	5.858155530719817E-6	TEST	5.570651610169139E-6	DOCUMENTATION
// For property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.9999997999044153	WITHOUT_CLASSIFICATION	8.108222560812535E-8	DEFECT	5.6050836634042566E-8	IMPLEMENTATION	5.458288127317241E-8	DESIGN	5.8774545713797076E-9	DOCUMENTATION	2.502186491433602E-9	TEST
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999955005630445	WITHOUT_CLASSIFICATION	1.6825552579018131E-6	IMPLEMENTATION	1.346095068509579E-6	DEFECT	1.0210604544520953E-6	DESIGN	2.2902476233455182E-7	TEST	2.207014123387803E-7	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.999979554681813	WITHOUT_CLASSIFICATION	1.6609145772129505E-5	DEFECT	3.736834490357743E-6	DESIGN	8.403274686712763E-8	TEST	8.441119587607547E-9	IMPLEMENTATION	6.864058160658944E-9	DOCUMENTATION
//force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.9999971929227274	WITHOUT_CLASSIFICATION	2.245187379895292E-6	DEFECT	4.376780342385612E-7	DESIGN	7.87412787074241E-8	DOCUMENTATION	3.756763075347102E-8	TEST	7.902948946729349E-9	IMPLEMENTATION
// If this from element is a collection and the path is a collection property (maxIndex, etc.) then // generate a sub-query.	WITHOUT_CLASSIFICATION	0.9999813158337704	WITHOUT_CLASSIFICATION	1.8064554981600818E-5	DEFECT	5.92937560934771E-7	DESIGN	1.1494902630517279E-8	TEST	1.0099896064112949E-8	IMPLEMENTATION	5.078888431648157E-9	DOCUMENTATION
// entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999881856623799	WITHOUT_CLASSIFICATION	1.0741457645434941E-5	DESIGN	5.533938146295401E-7	IMPLEMENTATION	2.445357638092197E-7	DEFECT	1.6021350341066823E-7	TEST	1.1473689287063689E-7	DOCUMENTATION
// collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999904937023609	WITHOUT_CLASSIFICATION	5.272143796700928E-6	IMPLEMENTATION	3.177973077026066E-6	DEFECT	9.582818575118905E-7	DESIGN	5.348611088215929E-8	TEST	4.4412796947878456E-8	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.9998955426352324	WITHOUT_CLASSIFICATION	1.0135691692105058E-4	DESIGN	2.333580252910411E-6	DEFECT	5.59713210919547E-7	DOCUMENTATION	1.2353892314558952E-7	IMPLEMENTATION	8.361545963558758E-8	TEST
//cannot occur	WITHOUT_CLASSIFICATION	0.9998955426352324	WITHOUT_CLASSIFICATION	1.0135691692105058E-4	DESIGN	2.333580252910411E-6	DEFECT	5.59713210919547E-7	DOCUMENTATION	1.2353892314558952E-7	IMPLEMENTATION	8.361545963558758E-8	TEST
// only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.9999971907512986	WITHOUT_CLASSIFICATION	2.470170109312177E-6	DESIGN	3.2572746892764594E-7	DEFECT	6.498892570328657E-9	IMPLEMENTATION	6.295205370430157E-9	TEST	5.570252837326161E-10	DOCUMENTATION
// try "get"	WITHOUT_CLASSIFICATION	0.9999946833377693	WITHOUT_CLASSIFICATION	2.012063892185673E-6	DESIGN	1.9126338462263567E-6	DEFECT	1.2732852750433736E-6	IMPLEMENTATION	6.174891196626011E-8	TEST	5.6930305178213895E-8	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9998442092207406	WITHOUT_CLASSIFICATION	8.692879554888806E-5	DESIGN	6.601340954045287E-5	DEFECT	1.5235965706671047E-6	DOCUMENTATION	1.0004080762065465E-6	IMPLEMENTATION	3.2456952334255195E-7	TEST
// do nothing...	WITHOUT_CLASSIFICATION	0.9998442092207406	WITHOUT_CLASSIFICATION	8.692879554888806E-5	DESIGN	6.601340954045287E-5	DEFECT	1.5235965706671047E-6	DOCUMENTATION	1.0004080762065465E-6	IMPLEMENTATION	3.2456952334255195E-7	TEST
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999785939109905	WITHOUT_CLASSIFICATION	1.4709083164375032E-5	DESIGN	6.38541094286538E-6	DEFECT	1.901174641900074E-7	IMPLEMENTATION	8.293227004890256E-8	TEST	3.854516797216331E-8	DOCUMENTATION
// this page intentionally left blank :)	WITHOUT_CLASSIFICATION	0.9998147488955776	WITHOUT_CLASSIFICATION	1.7995802005526664E-4	DESIGN	2.9564020823433748E-6	IMPLEMENTATION	1.1164753689836984E-6	DOCUMENTATION	1.1114445237932873E-6	DEFECT	1.0876239197091177E-7	TEST
// do not do anything	WITHOUT_CLASSIFICATION	0.9999584809920526	WITHOUT_CLASSIFICATION	2.763886547724171E-5	DEFECT	9.555064383846949E-6	DESIGN	2.393336164137605E-6	DOCUMENTATION	1.4689672477185411E-6	IMPLEMENTATION	4.627746743372533E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999994146225625	WITHOUT_CLASSIFICATION	4.01170982020406E-7	DESIGN	1.1678728359415685E-7	DEFECT	4.5290337807352606E-8	IMPLEMENTATION	1.5212113753972462E-8	DOCUMENTATION	6.916720285389313E-9	TEST
//cant instantiate	WITHOUT_CLASSIFICATION	0.9995427817417881	WITHOUT_CLASSIFICATION	4.50429293298359E-4	DESIGN	3.154401374856345E-6	DEFECT	1.7404753297696665E-6	IMPLEMENTATION	1.3400760990066425E-6	DOCUMENTATION	5.540121099103556E-7	TEST
//if it is a property of an embedded component, invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.9999244733649487	WITHOUT_CLASSIFICATION	7.546035840692154E-5	DESIGN	5.2814333555878695E-8	DEFECT	1.0680942712486342E-8	TEST	2.7043637132011105E-9	DOCUMENTATION	7.70042849417978E-11	IMPLEMENTATION
// otherwise:	WITHOUT_CLASSIFICATION	0.9965773378196997	WITHOUT_CLASSIFICATION	0.0027537260604528803	DESIGN	6.623189852799553E-4	IMPLEMENTATION	2.8307356274659495E-6	TEST	2.7573013992998627E-6	DEFECT	1.0290975407117616E-6	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9996958764827653	WITHOUT_CLASSIFICATION	1.918612270484824E-4	DESIGN	1.047933298575795E-4	IMPLEMENTATION	4.46322159049707E-6	DEFECT	1.7727513732017403E-6	DOCUMENTATION	1.232987364846579E-6	TEST
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9989076134271561	WITHOUT_CLASSIFICATION	0.0010851576876829557	DESIGN	6.539216781987104E-6	DEFECT	5.24758244372207E-7	IMPLEMENTATION	1.2989521507604246E-7	DOCUMENTATION	3.501491966884514E-8	TEST
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9989076134271561	WITHOUT_CLASSIFICATION	0.0010851576876829557	DESIGN	6.539216781987104E-6	DEFECT	5.24758244372207E-7	IMPLEMENTATION	1.2989521507604246E-7	DOCUMENTATION	3.501491966884514E-8	TEST
// HHH-2481 make sure the callback gets cleared, otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.9748060353491949	WITHOUT_CLASSIFICATION	0.025106966948634568	DESIGN	8.353303685497166E-5	DEFECT	3.3464939690550344E-6	IMPLEMENTATION	1.1188459491473128E-7	DOCUMENTATION	6.2867515169687505E-9	TEST
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999956151525099	WITHOUT_CLASSIFICATION	3.9061411497775354E-6	DESIGN	2.6325619978315186E-7	IMPLEMENTATION	1.1518379042067813E-7	DEFECT	9.384275877862063E-8	TEST	6.4235913691117555E-9	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999956151525099	WITHOUT_CLASSIFICATION	3.9061411497775354E-6	DESIGN	2.6325619978315186E-7	IMPLEMENTATION	1.1518379042067813E-7	DEFECT	9.384275877862063E-8	TEST	6.4235913691117555E-9	DOCUMENTATION
// note: interface is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9993249168823048	WITHOUT_CLASSIFICATION	6.743265874374812E-4	DESIGN	5.896223137921319E-7	DEFECT	1.0855046225982571E-7	IMPLEMENTATION	5.0095691403272325E-8	DOCUMENTATION	8.261790096823022E-9	TEST
// interfaces // arguments	WITHOUT_CLASSIFICATION	0.999998597190943	WITHOUT_CLASSIFICATION	1.3475103817495046E-6	DESIGN	2.908062508407515E-8	DEFECT	1.5137835888125583E-8	DOCUMENTATION	1.1029173776644444E-8	TEST	5.1040495201674324E-11	IMPLEMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9626169879330213	WITHOUT_CLASSIFICATION	0.030291484141410936	DESIGN	0.003308927685401722	IMPLEMENTATION	0.0015102186881165082	DEFECT	0.0014237014042818917	DOCUMENTATION	8.486801477674471E-4	TEST
// Get the caller	WITHOUT_CLASSIFICATION	0.9999992508254879	WITHOUT_CLASSIFICATION	4.0471146483107563E-7	DESIGN	3.114476876897507E-7	IMPLEMENTATION	2.5768123410484844E-8	DEFECT	5.062789639948945E-9	TEST	2.184446516078642E-9	DOCUMENTATION
// Get the caller principals	WITHOUT_CLASSIFICATION	0.9999995616874643	WITHOUT_CLASSIFICATION	3.258282014777689E-7	DESIGN	8.537030239920335E-8	IMPLEMENTATION	2.0558318132399727E-8	DEFECT	4.571749527080211E-9	DOCUMENTATION	1.983964070331486E-9	TEST
//private static final Alias DEFAULT_ALIAS = new Alias(10, null);	WITHOUT_CLASSIFICATION	0.999999990485452	WITHOUT_CLASSIFICATION	5.506403112194017E-9	DESIGN	3.736314335306639E-9	DEFECT	2.338312293274861E-10	DOCUMENTATION	2.5532897428794412E-11	IMPLEMENTATION	1.2466437563096513E-11	TEST
// Needed to bump this up to DotNode, because that is the only thing which currently // knows about the property-ref path in the correct format; it is either this, or // recurse over the DotNodes constructing the property path just like DotNode does // internally	WITHOUT_CLASSIFICATION	0.9999947839724118	WITHOUT_CLASSIFICATION	3.523390946776766E-6	IMPLEMENTATION	1.0557492548832413E-6	DESIGN	4.2791740252362183E-7	DOCUMENTATION	2.0579053603598832E-7	TEST	3.1794480090954956E-9	DEFECT
//if the identifier is quoted, remove the quotes	WITHOUT_CLASSIFICATION	0.9999512311757579	WITHOUT_CLASSIFICATION	3.221928097782033E-5	DESIGN	1.0542949108877272E-5	TEST	5.423447674353248E-6	IMPLEMENTATION	5.150019807640375E-7	DEFECT	6.814450023604915E-8	DOCUMENTATION
//truncate the identifier to the max alias length, less the suffix length	WITHOUT_CLASSIFICATION	0.999997868138624	WITHOUT_CLASSIFICATION	2.0745189318028783E-6	DESIGN	4.212115216177659E-8	IMPLEMENTATION	1.0749036330689872E-8	DOCUMENTATION	3.090814433791159E-9	TEST	1.3814413044091119E-9	DEFECT
//full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.9901500369933495	WITHOUT_CLASSIFICATION	0.00646697153680167	DEFECT	0.0025283681152037034	IMPLEMENTATION	8.23167255130723E-4	DESIGN	2.0376660913745108E-5	TEST	1.1079438600731018E-5	DOCUMENTATION
// null is not considered the same type as Integer. //$NON-NLS-1 //$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999980923577083	WITHOUT_CLASSIFICATION	1.4496859277385485E-6	DEFECT	4.405884745850319E-7	DESIGN	1.6883826606247604E-8	IMPLEMENTATION	3.4176096169778976E-10	TEST	1.4230182724220856E-10	DOCUMENTATION
// the outerJoinsAfterWhere needs to come before where clause to properly // handle dynamic filters	WITHOUT_CLASSIFICATION	0.9999954895133508	WITHOUT_CLASSIFICATION	3.970829853389533E-6	IMPLEMENTATION	4.279603001268333E-7	DESIGN	1.0044544403911673E-7	DEFECT	1.0430548257367463E-8	DOCUMENTATION	8.205034328096954E-10	TEST
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999273449079088	WITHOUT_CLASSIFICATION	6.14060101236896E-5	DESIGN	9.12535807880881E-6	DEFECT	8.079590151209746E-7	DOCUMENTATION	7.244488945399539E-7	TEST	5.913159790913724E-7	IMPLEMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999273449079088	WITHOUT_CLASSIFICATION	6.14060101236896E-5	DESIGN	9.12535807880881E-6	DEFECT	8.079590151209746E-7	DOCUMENTATION	7.244488945399539E-7	TEST	5.913159790913724E-7	IMPLEMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999273449079088	WITHOUT_CLASSIFICATION	6.14060101236896E-5	DESIGN	9.12535807880881E-6	DEFECT	8.079590151209746E-7	DOCUMENTATION	7.244488945399539E-7	TEST	5.913159790913724E-7	IMPLEMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999273449079088	WITHOUT_CLASSIFICATION	6.14060101236896E-5	DESIGN	9.12535807880881E-6	DEFECT	8.079590151209746E-7	DOCUMENTATION	7.244488945399539E-7	TEST	5.913159790913724E-7	IMPLEMENTATION
// strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.9999777187486625	WITHOUT_CLASSIFICATION	1.9953679416638435E-5	DEFECT	1.2076678896438886E-6	IMPLEMENTATION	6.912386063980328E-7	DESIGN	2.4484071482585745E-7	TEST	1.8382470986789648E-7	DOCUMENTATION
// if the condition is not already there...	WITHOUT_CLASSIFICATION	0.9991681464191556	WITHOUT_CLASSIFICATION	7.763668459999143E-4	DEFECT	4.3415881547435354E-5	DESIGN	1.1139717781827613E-5	IMPLEMENTATION	8.336882946534122E-7	TEST	9.744722051500296E-8	DOCUMENTATION
//dontSpace.add("'");	WITHOUT_CLASSIFICATION	0.9999925307137001	WITHOUT_CLASSIFICATION	4.721192416817377E-6	DESIGN	1.7532703376551155E-6	IMPLEMENTATION	5.572395816246363E-7	DOCUMENTATION	3.7110559931616216E-7	DEFECT	6.647836446709288E-8	TEST
//for MySQL	WITHOUT_CLASSIFICATION	0.9995502743282555	WITHOUT_CLASSIFICATION	4.372971268945298E-4	DESIGN	8.313891816258747E-6	DEFECT	2.0623782118829838E-6	DOCUMENTATION	1.2425983570305974E-6	IMPLEMENTATION	8.096764646941045E-7	TEST
//HashMap columnsUnique = new HashMap();	WITHOUT_CLASSIFICATION	0.9999970030392176	WITHOUT_CLASSIFICATION	2.396850704864862E-6	IMPLEMENTATION	4.5852191180684685E-7	DESIGN	8.914436730448546E-8	DEFECT	3.0858127460273774E-8	DOCUMENTATION	2.1585671105562222E-8	TEST
//null caused some problems	WITHOUT_CLASSIFICATION	0.9942436797868598	WITHOUT_CLASSIFICATION	0.005139992733726054	DESIGN	5.086613946000505E-4	DEFECT	7.707838711656761E-5	IMPLEMENTATION	2.8302197062706523E-5	DOCUMENTATION	2.2855006346514005E-6	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9990042718110085	WITHOUT_CLASSIFICATION	9.126514084333693E-4	DESIGN	6.918329762260797E-5	IMPLEMENTATION	7.305212416715822E-6	DEFECT	5.059125330650915E-6	DOCUMENTATION	1.5291451883866793E-6	TEST
//not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.9942608548757461	WITHOUT_CLASSIFICATION	0.005738185464362871	DESIGN	7.391422161022544E-7	DEFECT	1.6858522422432137E-7	TEST	3.4555243005799895E-8	IMPLEMENTATION	1.73772077786776E-8	DOCUMENTATION
//even on inverse="true"	WITHOUT_CLASSIFICATION	0.9999926658604522	WITHOUT_CLASSIFICATION	4.697796327740915E-6	DESIGN	1.7209457902257919E-6	IMPLEMENTATION	4.6777678730327783E-7	DEFECT	3.878862186619973E-7	DOCUMENTATION	5.973442379790343E-8	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9990042718110085	WITHOUT_CLASSIFICATION	9.126514084333693E-4	DESIGN	6.918329762260797E-5	IMPLEMENTATION	7.305212416715822E-6	DEFECT	5.059125330650915E-6	DOCUMENTATION	1.5291451883866793E-6	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9990042718110085	WITHOUT_CLASSIFICATION	9.126514084333693E-4	DESIGN	6.918329762260797E-5	IMPLEMENTATION	7.305212416715822E-6	DEFECT	5.059125330650915E-6	DOCUMENTATION	1.5291451883866793E-6	TEST
// If true then execute db updates, otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.9999994797533936	WITHOUT_CLASSIFICATION	4.2100458541144666E-7	IMPLEMENTATION	8.432853390990059E-8	DESIGN	7.066918582118576E-9	TEST	6.498473545538012E-9	DEFECT	1.348094785291419E-9	DOCUMENTATION
// we only release the connection	WITHOUT_CLASSIFICATION	0.9999996939937889	WITHOUT_CLASSIFICATION	1.9763967915332685E-7	DESIGN	4.929281707545678E-8	DEFECT	3.595551944839349E-8	DOCUMENTATION	2.071174305629267E-8	IMPLEMENTATION	2.4064523650040666E-9	TEST
// deprecated option...	WITHOUT_CLASSIFICATION	0.9993279757218524	WITHOUT_CLASSIFICATION	6.210521968881736E-4	DESIGN	2.9652197722468427E-5	IMPLEMENTATION	1.8707051450046767E-5	DEFECT	2.2414267637188977E-6	DOCUMENTATION	3.714053231949953E-7	TEST
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999503374074129	WITHOUT_CLASSIFICATION	3.709033418544923E-5	DESIGN	1.1558844726025669E-5	DEFECT	9.411630456049929E-7	IMPLEMENTATION	4.76992612070542E-8	TEST	2.4551368799295038E-8	DOCUMENTATION
//actually, this last test is probably unnecessary, since  //beforeCompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.9972086454451726	WITHOUT_CLASSIFICATION	0.002476453419805507	DESIGN	3.095739599019513E-4	TEST	4.9954042024585754E-6	DEFECT	3.0965320485253607E-7	DOCUMENTATION	2.2117712468035954E-8	IMPLEMENTATION
// this one only really needed for badly-behaved applications! // (if the TransactionManager has a Sychronization registered, // its a noop) // (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.9999995727553509	WITHOUT_CLASSIFICATION	4.1052763852294334E-7	DESIGN	6.244681194765171E-9	IMPLEMENTATION	4.0132582439748575E-9	DEFECT	3.252166761063251E-9	TEST	3.206904451000634E-9	DOCUMENTATION
// Create an DotNode AST for the path and resolve it.	WITHOUT_CLASSIFICATION	0.9997578435852493	WITHOUT_CLASSIFICATION	2.4046234700920554E-4	DESIGN	5.725577230694018E-7	TEST	5.391576745925973E-7	IMPLEMENTATION	3.727258628677716E-7	DOCUMENTATION	2.0962648076939062E-7	DEFECT
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999503374074129	WITHOUT_CLASSIFICATION	3.709033418544923E-5	DESIGN	1.1558844726025669E-5	DEFECT	9.411630456049929E-7	IMPLEMENTATION	4.76992612070542E-8	TEST	2.4551368799295038E-8	DOCUMENTATION
//if we could not register a synchronization, //do the before/after completion callbacks //ourself (but we need to let jdbcContext //know that this is what we are going to //do, so it doesn't keep trying to register //synchronizations)	WITHOUT_CLASSIFICATION	0.9999997219540637	WITHOUT_CLASSIFICATION	2.3155588740998774E-7	DEFECT	3.082660916189826E-8	DESIGN	7.60713020094858E-9	TEST	5.888911531886343E-9	DOCUMENTATION	2.167397987578238E-9	IMPLEMENTATION
// swallow it, and continue to roll back JTA transaction	WITHOUT_CLASSIFICATION	0.9999752711361651	WITHOUT_CLASSIFICATION	2.1901315333747953E-5	DESIGN	2.382526430866445E-6	DEFECT	4.117545748726941E-7	IMPLEMENTATION	3.2911134461384424E-8	DOCUMENTATION	3.5636091135404996E-10	TEST
// so the transaction is already rolled back, by JTA spec	WITHOUT_CLASSIFICATION	0.9999995786028024	WITHOUT_CLASSIFICATION	3.083988698715168E-7	IMPLEMENTATION	5.83988136609027E-8	DESIGN	3.860951294358705E-8	DEFECT	1.5406598575462615E-8	DOCUMENTATION	5.834024976967814E-10	TEST
// this method is a noop if there is a Synchronization!	WITHOUT_CLASSIFICATION	0.9986870988874722	WITHOUT_CLASSIFICATION	0.0013025653231053588	DESIGN	8.20169135601218E-6	DEFECT	1.565653128242688E-6	TEST	4.5406104820655594E-7	DOCUMENTATION	1.14383889928538E-7	IMPLEMENTATION
// two conditions where we need to transform this to a theta-join syntax: //      1) 'elem' is the "root from-element" in correlated subqueries //      2) The DotNode.useThetaStyleImplicitJoins has been set to true //          and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.9992031858491506	WITHOUT_CLASSIFICATION	7.935776487338083E-4	DESIGN	3.1098783156094058E-6	DEFECT	1.1242561734863171E-7	DOCUMENTATION	1.2985744303509511E-8	TEST	1.2124383196603755E-9	IMPLEMENTATION
// WebSphere, however, is not a sane JEE/JTA container...	WITHOUT_CLASSIFICATION	0.9999213888211174	WITHOUT_CLASSIFICATION	5.335928002925293E-5	DEFECT	2.4087449964429664E-5	DESIGN	1.100949078643218E-6	IMPLEMENTATION	5.077617152135819E-8	TEST	1.2723638825652422E-8	DOCUMENTATION
// for sane JEE/JTA containers, the transaction itself functions as its identifier...	WITHOUT_CLASSIFICATION	0.9999954749559868	WITHOUT_CLASSIFICATION	4.2457746843060365E-6	DESIGN	2.7549988625263134E-7	IMPLEMENTATION	1.9436418179360317E-9	DEFECT	1.3838397579127433E-9	DOCUMENTATION	4.4196105772090117E-10	TEST
//swallow, the transaction was finished	WITHOUT_CLASSIFICATION	0.9991960734946836	WITHOUT_CLASSIFICATION	7.744146603943088E-4	IMPLEMENTATION	2.165381246069499E-5	DEFECT	6.38213149526633E-6	DESIGN	8.64666725436987E-7	DOCUMENTATION	6.112342405285769E-7	TEST
// all AliasToEntityMapResultTransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998536171004	WITHOUT_CLASSIFICATION	1.0181427543504576E-7	DESIGN	4.13433971184278E-8	IMPLEMENTATION	2.5486219632709454E-9	DEFECT	5.595580540335285E-10	DOCUMENTATION	1.170469173992551E-10	TEST
// Create the join element under the from element.	WITHOUT_CLASSIFICATION	0.9999953983901527	WITHOUT_CLASSIFICATION	4.4113449788733984E-6	DESIGN	1.5583699722311699E-7	DEFECT	1.3551468598598057E-8	DOCUMENTATION	1.1756887313953215E-8	IMPLEMENTATION	9.119515188502842E-9	TEST
// all DistinctRootEntityResultTransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999433246073	WITHOUT_CLASSIFICATION	5.615360283527256E-8	DESIGN	2.432548388202027E-10	DEFECT	1.2484844326485318E-10	DOCUMENTATION	1.1916622627386652E-10	IMPLEMENTATION	3.4520291247293115E-11	TEST
// map of EntityMode -> Tuplizer	WITHOUT_CLASSIFICATION	0.9999987671509568	WITHOUT_CLASSIFICATION	1.181597308750621E-6	DESIGN	2.5588358119387387E-8	DEFECT	1.466261956632886E-8	IMPLEMENTATION	7.006771000328843E-9	DOCUMENTATION	3.993985711347094E-9	TEST
// this is a virtual id property...	WITHOUT_CLASSIFICATION	0.9996583679039457	WITHOUT_CLASSIFICATION	2.824401985870994E-4	DEFECT	5.864557947812726E-5	DESIGN	3.3659473608508266E-7	IMPLEMENTATION	1.1244721844504907E-7	DOCUMENTATION	9.727603456004672E-8	TEST
//this one needed only for guessEntityMode()	WITHOUT_CLASSIFICATION	0.7825316291071999	WITHOUT_CLASSIFICATION	0.21692436135216916	DESIGN	3.2833859551408153E-4	TEST	1.1043689171358256E-4	IMPLEMENTATION	6.218557635460746E-5	DOCUMENTATION	4.304847704879152E-5	DEFECT
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9998114738944387	WITHOUT_CLASSIFICATION	1.8726939092551966E-4	IMPLEMENTATION	7.761440928030924E-7	DESIGN	3.944105518942201E-7	DEFECT	5.13517243564074E-8	TEST	3.480826675059871E-8	DOCUMENTATION
// todo : move this to SF per HHH-3517; also see HHH-1907 and ComponentMetamodel	WITHOUT_CLASSIFICATION	0.6777756555442964	WITHOUT_CLASSIFICATION	0.3222184245025032	DESIGN	5.724543887693109E-6	DEFECT	1.7304433548686913E-7	DOCUMENTATION	2.1272347961644216E-8	TEST	1.092629343277968E-9	IMPLEMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999742092305023	WITHOUT_CLASSIFICATION	2.5119551789328813E-5	DESIGN	4.829887927456356E-7	DEFECT	1.2876540391535484E-7	IMPLEMENTATION	5.166070685899281E-8	TEST	7.80280486817181E-9	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9997999771386733	WITHOUT_CLASSIFICATION	1.5011294628426358E-4	DEFECT	4.573134991185282E-5	DESIGN	3.168911366045258E-6	IMPLEMENTATION	7.283970591593433E-7	DOCUMENTATION	2.8125670552907296E-7	TEST
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9996921804908965	WITHOUT_CLASSIFICATION	2.6094519396285186E-4	DESIGN	4.436137470607051E-5	IMPLEMENTATION	1.7467913378593744E-6	TEST	6.969988899610821E-7	DEFECT	6.915020698505603E-8	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9997999771386733	WITHOUT_CLASSIFICATION	1.5011294628426358E-4	DEFECT	4.573134991185282E-5	DESIGN	3.168911366045258E-6	IMPLEMENTATION	7.283970591593433E-7	DOCUMENTATION	2.8125670552907296E-7	TEST
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.999999959173686	WITHOUT_CLASSIFICATION	1.810273592299926E-8	DESIGN	1.3827668791451851E-8	IMPLEMENTATION	7.580478040156466E-9	DEFECT	7.73351889520539E-10	TEST	5.420792768458016E-10	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999925519349052	WITHOUT_CLASSIFICATION	7.395862381332557E-6	DESIGN	3.52853890603328E-8	DEFECT	1.6320356542812578E-8	TEST	4.566969657947373E-10	DOCUMENTATION	1.4027105063435188E-10	IMPLEMENTATION
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// cached for efficiency...	WITHOUT_CLASSIFICATION	0.9988263827495657	WITHOUT_CLASSIFICATION	0.001160613042212879	DESIGN	9.190980900865583E-6	DEFECT	1.9124199706147E-6	IMPLEMENTATION	1.6660887490572403E-6	DOCUMENTATION	2.347186008917244E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
//it was not embedded, so the argument is just an id	WITHOUT_CLASSIFICATION	0.9984756611902891	WITHOUT_CLASSIFICATION	0.0015187214220097986	DESIGN	2.6009976581603776E-6	DOCUMENTATION	2.29532666070342E-6	TEST	7.10775040471265E-7	DEFECT	1.0288341746056117E-8	IMPLEMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999742092305023	WITHOUT_CLASSIFICATION	2.5119551789328813E-5	DESIGN	4.829887927456356E-7	DEFECT	1.2876540391535484E-7	IMPLEMENTATION	5.166070685899281E-8	TEST	7.80280486817181E-9	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9996921804908965	WITHOUT_CLASSIFICATION	2.6094519396285186E-4	DESIGN	4.436137470607051E-5	IMPLEMENTATION	1.7467913378593744E-6	TEST	6.969988899610821E-7	DEFECT	6.915020698505603E-8	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.999999959173686	WITHOUT_CLASSIFICATION	1.810273592299926E-8	DESIGN	1.3827668791451851E-8	IMPLEMENTATION	7.580478040156466E-9	DEFECT	7.73351889520539E-10	TEST	5.420792768458016E-10	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.999766174759117	WITHOUT_CLASSIFICATION	2.327636462529718E-4	DESIGN	6.976543249437507E-7	IMPLEMENTATION	1.473426808147237E-7	TEST	1.3028480576195768E-7	DEFECT	8.631281837918867E-8	DOCUMENTATION
//return currentId;	WITHOUT_CLASSIFICATION	0.9999570977641792	WITHOUT_CLASSIFICATION	2.114210092774175E-5	DESIGN	1.7717898986726945E-5	DEFECT	3.3161054388856965E-6	IMPLEMENTATION	7.028928467485885E-7	DOCUMENTATION	2.323762068894878E-8	TEST
//reset the id	WITHOUT_CLASSIFICATION	0.999860994753317	WITHOUT_CLASSIFICATION	9.890696581499972E-5	IMPLEMENTATION	2.7955387688068825E-5	DESIGN	8.010721894523605E-6	DEFECT	3.5291773268339774E-6	TEST	6.029939586437057E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
//reset the version	WITHOUT_CLASSIFICATION	0.9999477490764959	WITHOUT_CLASSIFICATION	2.9642899714534356E-5	IMPLEMENTATION	1.459855125809298E-5	DEFECT	7.297847656778163E-6	DESIGN	3.9077215159754465E-7	DOCUMENTATION	3.208527231350361E-7	TEST
// the default is to simply not lazy fetch properties for now...	WITHOUT_CLASSIFICATION	0.9991123933363757	WITHOUT_CLASSIFICATION	6.235359261814892E-4	DESIGN	2.6162986542062295E-4	DEFECT	2.0972833568348145E-6	IMPLEMENTATION	1.846600908056792E-7	TEST	1.5892857449295133E-7	DOCUMENTATION
// Add the second join, the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.9999988950576338	WITHOUT_CLASSIFICATION	6.323340052628719E-7	IMPLEMENTATION	3.7133582252741573E-7	DESIGN	8.039246342999545E-8	DOCUMENTATION	1.2590501175445803E-8	DEFECT	8.289573657349833E-9	TEST
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998040127022678	WITHOUT_CLASSIFICATION	1.9461630070784068E-4	DESIGN	6.617809676499185E-7	DEFECT	3.537798424815882E-7	TEST	2.57775767793535E-7	IMPLEMENTATION	9.766044637840726E-8	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999925519349052	WITHOUT_CLASSIFICATION	7.395862381332557E-6	DESIGN	3.52853890603328E-8	DEFECT	1.6320356542812578E-8	TEST	4.566969657947373E-10	DOCUMENTATION	1.4027105063435188E-10	IMPLEMENTATION
// determine the id getter and setter methods from the proxy interface (if any) // determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.999018376694136	WITHOUT_CLASSIFICATION	9.733806508900188E-4	DESIGN	8.237663042896259E-6	DEFECT	2.7860971580428963E-9	DOCUMENTATION	2.1735254163382024E-9	TEST	3.230854334366828E-11	IMPLEMENTATION
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
//not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.9993128429280222	WITHOUT_CLASSIFICATION	4.255359895168085E-4	DEFECT	2.6087103239224636E-4	DESIGN	5.642766566781861E-7	DOCUMENTATION	1.4936907199490048E-7	IMPLEMENTATION	3.64043399565309E-8	TEST
// superclass entity-name	WITHOUT_CLASSIFICATION	0.999991061703286	WITHOUT_CLASSIFICATION	8.93367078648193E-6	DESIGN	3.149314584353254E-9	DEFECT	1.0590821031559663E-9	DOCUMENTATION	3.03967541322123E-10	TEST	1.1356337469914615E-10	IMPLEMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998040127022678	WITHOUT_CLASSIFICATION	1.9461630070784068E-4	DESIGN	6.617809676499185E-7	DEFECT	3.537798424815882E-7	TEST	2.57775767793535E-7	IMPLEMENTATION	9.766044637840726E-8	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999955005630445	WITHOUT_CLASSIFICATION	1.6825552579018131E-6	IMPLEMENTATION	1.346095068509579E-6	DEFECT	1.0210604544520953E-6	DESIGN	2.2902476233455182E-7	TEST	2.207014123387803E-7	DOCUMENTATION
//init the aliases, after initing the constructornode	WITHOUT_CLASSIFICATION	0.9999936681116333	WITHOUT_CLASSIFICATION	4.605453208009504E-6	IMPLEMENTATION	1.1836194254183608E-6	DESIGN	5.025440829959873E-7	TEST	2.259920536407256E-8	DOCUMENTATION	1.7672444890235393E-8	DEFECT
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998040127022678	WITHOUT_CLASSIFICATION	1.9461630070784068E-4	DESIGN	6.617809676499185E-7	DEFECT	3.537798424815882E-7	TEST	2.57775767793535E-7	IMPLEMENTATION	9.766044637840726E-8	DOCUMENTATION
// legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.9999974711887776	WITHOUT_CLASSIFICATION	2.4402325719619622E-6	DESIGN	6.981516337883416E-8	IMPLEMENTATION	1.0788615237692388E-8	TEST	7.648560362532611E-9	DOCUMENTATION	3.2631141252707075E-10	DEFECT
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999998947049059	WITHOUT_CLASSIFICATION	7.891689575477293E-8	DESIGN	1.0315691314370899E-8	DEFECT	6.444272113446485E-9	DOCUMENTATION	6.1845182327755E-9	IMPLEMENTATION	3.433716709247649E-9	TEST
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999955005630445	WITHOUT_CLASSIFICATION	1.6825552579018131E-6	IMPLEMENTATION	1.346095068509579E-6	DEFECT	1.0210604544520953E-6	DESIGN	2.2902476233455182E-7	TEST	2.207014123387803E-7	DOCUMENTATION
//note: this affects the return value!	WITHOUT_CLASSIFICATION	0.9997005701308276	WITHOUT_CLASSIFICATION	2.658628342536633E-4	DEFECT	2.941629621012469E-5	DESIGN	3.554015083755145E-6	IMPLEMENTATION	4.759110956594464E-7	DOCUMENTATION	1.2081252928744042E-7	TEST
// Need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.9996012161209433	WITHOUT_CLASSIFICATION	3.940965389805326E-4	IMPLEMENTATION	2.5153970040747064E-6	DESIGN	1.9675730366918633E-6	TEST	1.1170293688692576E-7	DEFECT	9.266709838538929E-8	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999973924762211	WITHOUT_CLASSIFICATION	2.491069134399653E-6	DESIGN	9.078176787011665E-8	IMPLEMENTATION	1.3283328652475676E-8	DEFECT	8.615928433434724E-9	DOCUMENTATION	3.773619486762307E-9	TEST
// Collection Types:	WITHOUT_CLASSIFICATION	0.999988755073278	WITHOUT_CLASSIFICATION	6.236937830281823E-6	DESIGN	4.370703111824543E-6	DEFECT	4.577160784810415E-7	IMPLEMENTATION	1.255058851010639E-7	DOCUMENTATION	5.4063816264569174E-8	TEST
// convenience methods relating to operations across arrays of types...	WITHOUT_CLASSIFICATION	0.9999945280449393	WITHOUT_CLASSIFICATION	2.8173057286036953E-6	DEFECT	2.302083714526161E-6	DESIGN	3.0499625961383263E-7	IMPLEMENTATION	3.191125258840086E-8	DOCUMENTATION	1.5658105390116718E-8	TEST
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999714635640932	WITHOUT_CLASSIFICATION	2.816988821116453E-5	DESIGN	3.5802035568450187E-7	DEFECT	3.7332574651598206E-9	TEST	3.565253556734652E-9	IMPLEMENTATION	1.2288289991963817E-9	DOCUMENTATION
//Blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.9999966764161731	WITHOUT_CLASSIFICATION	3.1746304321993428E-6	DESIGN	5.747634131879845E-8	IMPLEMENTATION	4.663641941994767E-8	DEFECT	2.5391022317077198E-8	TEST	1.9449611663829604E-8	DOCUMENTATION
//value is the entity name	WITHOUT_CLASSIFICATION	0.9989961148668094	WITHOUT_CLASSIFICATION	0.0010029531039173513	DESIGN	6.310860368556986E-7	DEFECT	1.4759639398255162E-7	DOCUMENTATION	1.4272821301881685E-7	TEST	1.061862954070321E-8	IMPLEMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999375077869584	WITHOUT_CLASSIFICATION	2.2943770988154874E-5	IMPLEMENTATION	2.1917751045607904E-5	DESIGN	1.3940944412697092E-5	DEFECT	2.49564399202227E-6	DOCUMENTATION	1.1941026030317446E-6	TEST
// generate id select fragment and then property select fragment for // each expression, just like generateSelectFragments().	WITHOUT_CLASSIFICATION	0.9999514444581078	WITHOUT_CLASSIFICATION	4.456187152701531E-5	DESIGN	3.4417071595929076E-6	DEFECT	4.02053871951057E-7	TEST	1.4860980354459738E-7	DOCUMENTATION	1.2995302779947917E-9	IMPLEMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9626169879330213	WITHOUT_CLASSIFICATION	0.030291484141410936	DESIGN	0.003308927685401722	IMPLEMENTATION	0.0015102186881165082	DEFECT	0.0014237014042818917	DOCUMENTATION	8.486801477674471E-4	TEST
//xml is the entity name	WITHOUT_CLASSIFICATION	0.9998047505920016	WITHOUT_CLASSIFICATION	1.9484339453227322E-4	DESIGN	1.8628446943754533E-7	DEFECT	1.3765062121625524E-7	TEST	6.937825394504111E-8	DOCUMENTATION	1.270012139009677E-8	IMPLEMENTATION
//special case ... this is the leaf of the containment graph, even though not immutable	WITHOUT_CLASSIFICATION	0.9819989805417069	WITHOUT_CLASSIFICATION	0.010147844024472616	DESIGN	0.007417460263237328	DEFECT	3.978164646948008E-4	IMPLEMENTATION	2.7184390146196246E-5	DOCUMENTATION	1.0714315742133191E-5	TEST
//tolerates nulls	WITHOUT_CLASSIFICATION	0.9999718930866127	WITHOUT_CLASSIFICATION	2.3259417527006203E-5	DESIGN	2.743938737907688E-6	DEFECT	1.4242594337892123E-6	TEST	6.299517920560153E-7	IMPLEMENTATION	4.9345896615208696E-8	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9998614543024186	WITHOUT_CLASSIFICATION	1.2232837388723728E-4	DEFECT	1.2192440435810545E-5	DESIGN	2.1799189890311965E-6	TEST	1.1505358572298032E-6	IMPLEMENTATION	6.944284121743182E-7	DOCUMENTATION
// metaType is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.9999973082623618	WITHOUT_CLASSIFICATION	2.4773608164865086E-6	DESIGN	2.1215507840090924E-7	DEFECT	1.4676997928459855E-9	TEST	6.935143467747995E-10	DOCUMENTATION	6.05291386607502E-11	IMPLEMENTATION
// Get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.9999817700891728	WITHOUT_CLASSIFICATION	1.779443696995315E-5	DESIGN	3.3455465170788055E-7	DEFECT	9.778051999898958E-8	IMPLEMENTATION	2.198401255118831E-9	TEST	9.40284171430376E-10	DOCUMENTATION
// Look through the FromElement's children to find any collections of values that should be fetched...	WITHOUT_CLASSIFICATION	0.9999114300060093	WITHOUT_CLASSIFICATION	4.4627467696651086E-5	DEFECT	3.4527000453914355E-5	DESIGN	9.396293343255587E-6	IMPLEMENTATION	1.2661467989224127E-8	TEST	6.5710288295230495E-9	DOCUMENTATION
//return AssociationType.FOREIGN_KEY_TO_PARENT; //this is better but causes a transient object exception...	WITHOUT_CLASSIFICATION	0.9964489370841532	WITHOUT_CLASSIFICATION	0.003518641202524882	DESIGN	2.9865678982049936E-5	DEFECT	2.0993650176147365E-6	IMPLEMENTATION	2.399880463656445E-7	TEST	2.1668127593150031E-7	DOCUMENTATION
// Use the lower case function name. // Remember whether we're in a SELECT clause or not.	WITHOUT_CLASSIFICATION	0.9999941356178428	WITHOUT_CLASSIFICATION	5.175410255078687E-6	DESIGN	5.649727829348085E-7	DEFECT	1.1782725196154383E-7	IMPLEMENTATION	5.846078151596153E-9	DOCUMENTATION	3.25788944485051E-10	TEST
// IDENT might be the name of a class.	WITHOUT_CLASSIFICATION	0.9999015246025453	WITHOUT_CLASSIFICATION	9.809279689946403E-5	DESIGN	3.517674226126491E-7	DEFECT	1.361680606229016E-8	TEST	1.1799325232848366E-8	DOCUMENTATION	5.417001388959966E-9	IMPLEMENTATION
//TODO!!!	WITHOUT_CLASSIFICATION	0.748108191340041	WITHOUT_CLASSIFICATION	0.2361068382575923	DESIGN	0.006126599207940714	IMPLEMENTATION	0.003983044618862174	DOCUMENTATION	0.0035607130109785007	DEFECT	0.0021146135645853524	TEST
//st.setTimestamp( index,  new Timestamp( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.998152866318434	WITHOUT_CLASSIFICATION	0.0018427702372009658	DEFECT	2.9108560323200735E-6	DESIGN	8.707386134621861E-7	TEST	3.0065006163065694E-7	DOCUMENTATION	2.811996575641359E-7	IMPLEMENTATION
//st.setDate( index,  new Date( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9991971014375342	WITHOUT_CLASSIFICATION	7.910045722184729E-4	DEFECT	1.049139742162437E-5	DESIGN	5.513584475557397E-7	DOCUMENTATION	4.288492544032451E-7	TEST	4.22385123866295E-7	IMPLEMENTATION
// both are Timestamps	WITHOUT_CLASSIFICATION	0.9999996324662728	WITHOUT_CLASSIFICATION	2.7586029574192605E-7	DESIGN	5.881562958474867E-8	TEST	2.5939684539541526E-8	IMPLEMENTATION	3.554285959263757E-9	DOCUMENTATION	3.3638315155821993E-9	DEFECT
// at least one is a plain old Date	WITHOUT_CLASSIFICATION	0.9999394562939905	WITHOUT_CLASSIFICATION	5.8849785505110276E-5	DESIGN	1.1233223082524812E-6	TEST	4.194727240005059E-7	IMPLEMENTATION	8.805264793281819E-8	DEFECT	6.307282432332039E-8	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.999908549780112	WITHOUT_CLASSIFICATION	4.93880288701938E-5	DESIGN	3.6302738720623706E-5	DEFECT	2.6258688857783824E-6	DOCUMENTATION	2.166917599472956E-6	IMPLEMENTATION	9.666658119389171E-7	TEST
// if the corresponding SQL value is NULL, the reader we got is NULL as well	WITHOUT_CLASSIFICATION	0.9998728593098475	WITHOUT_CLASSIFICATION	1.26199504329546E-4	DEFECT	5.671446087088555E-7	DESIGN	3.2373943884825176E-7	TEST	4.1756789229949993E-8	IMPLEMENTATION	8.54498607184151E-9	DOCUMENTATION
// Fetch Reader content up to the end - and put characters in a StringBuffer	WITHOUT_CLASSIFICATION	0.9986838447638068	WITHOUT_CLASSIFICATION	0.0012977421841335439	DESIGN	1.7080668339776692E-5	IMPLEMENTATION	9.912093863347774E-7	DOCUMENTATION	3.29530261724207E-7	DEFECT	1.1644071921146976E-8	TEST
// Return StringBuffer content as a large String	WITHOUT_CLASSIFICATION	0.9999944555053145	WITHOUT_CLASSIFICATION	4.783064439846461E-6	DESIGN	3.7856152330297817E-7	DEFECT	3.6759697323437615E-7	IMPLEMENTATION	1.2973780123658069E-8	DOCUMENTATION	2.2979688538081507E-9	TEST
//or Types.LONGVARCHAR?	WITHOUT_CLASSIFICATION	0.9993750966365695	WITHOUT_CLASSIFICATION	6.098500963449808E-4	DESIGN	8.667642516632455E-6	IMPLEMENTATION	2.4712129870317963E-6	DOCUMENTATION	2.029294909625919E-6	TEST	1.8851166719496211E-6	DEFECT
//Not called at runtime so doesn't matter if its slow :)	WITHOUT_CLASSIFICATION	0.9999192440233453	WITHOUT_CLASSIFICATION	3.588592457292954E-5	DEFECT	3.313724249808431E-5	IMPLEMENTATION	7.837068694165329E-6	DESIGN	3.809511999345133E-6	TEST	8.622889023510521E-8	DOCUMENTATION
//TODO	WITHOUT_CLASSIFICATION	0.9983561709730178	WITHOUT_CLASSIFICATION	0.0011754834076676205	DESIGN	2.3223247864124062E-4	IMPLEMENTATION	1.0487131771743081E-4	DOCUMENTATION	7.112979961858589E-5	TEST	6.0112023337416306E-5	DEFECT
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999988743140196	WITHOUT_CLASSIFICATION	6.877140589340903E-7	TEST	2.1559765965031746E-7	IMPLEMENTATION	1.2651341088677038E-7	DEFECT	8.249838012987885E-8	DESIGN	1.3362470985054182E-8	DOCUMENTATION
//different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.999949927789685	WITHOUT_CLASSIFICATION	4.781888825748804E-5	DESIGN	1.7819052891040318E-6	DEFECT	1.853166899016889E-7	TEST	1.4416996821308307E-7	DOCUMENTATION	1.419301103064999E-7	IMPLEMENTATION
//cache this	WITHOUT_CLASSIFICATION	0.9990101331441548	WITHOUT_CLASSIFICATION	9.283466085134631E-4	DESIGN	3.9268027054346425E-5	IMPLEMENTATION	1.4198444327641351E-5	DOCUMENTATION	5.011462310547748E-6	DEFECT	3.0423136393028584E-6	TEST
//only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.9999815362558114	WITHOUT_CLASSIFICATION	8.407666834130948E-6	DEFECT	7.246008060205689E-6	IMPLEMENTATION	2.1149815195054615E-6	DESIGN	4.205810214550131E-7	DOCUMENTATION	2.745067531694289E-7	TEST
// Forcefully remove leading ands from where fragments; the grammar will // handle adding them	WITHOUT_CLASSIFICATION	0.9999639028538567	WITHOUT_CLASSIFICATION	1.9654936044670856E-5	DEFECT	1.618355490808499E-5	DESIGN	1.2199217246260618E-7	IMPLEMENTATION	1.1729290815798378E-7	TEST	1.9370109864094228E-8	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.808471706655727	WITHOUT_CLASSIFICATION	0.14878492336740248	DESIGN	0.030561939642026525	IMPLEMENTATION	0.005838312768030512	DOCUMENTATION	0.0034771052887702055	DEFECT	0.002866012278043484	TEST
// Create a new FILTERS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999987633871713	WITHOUT_CLASSIFICATION	6.860014377555326E-7	DESIGN	4.910833407737925E-7	IMPLEMENTATION	5.796935057114225E-8	DEFECT	8.095715597225803E-10	DOCUMENTATION	7.491280005666686E-10	TEST
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999955005630445	WITHOUT_CLASSIFICATION	1.6825552579018131E-6	IMPLEMENTATION	1.346095068509579E-6	DEFECT	1.0210604544520953E-6	DESIGN	2.2902476233455182E-7	TEST	2.207014123387803E-7	DOCUMENTATION
//public Object instantiate(Object parent, SessionImplementor session) throws HibernateException;	WITHOUT_CLASSIFICATION	0.6545499220401385	DESIGN	0.3454275178732799	WITHOUT_CLASSIFICATION	1.6672069475918703E-5	DEFECT	2.935117326688802E-6	IMPLEMENTATION	1.8457870828298555E-6	TEST	1.1071126961645055E-6	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9999800613011484	WITHOUT_CLASSIFICATION	1.3288447160087643E-5	DESIGN	3.0281600245355712E-6	DEFECT	2.0649523659022273E-6	IMPLEMENTATION	1.1956227842679293E-6	DOCUMENTATION	3.615165168348926E-7	TEST
//nothing to do	WITHOUT_CLASSIFICATION	0.9999800613011484	WITHOUT_CLASSIFICATION	1.3288447160087643E-5	DESIGN	3.0281600245355712E-6	DEFECT	2.0649523659022273E-6	IMPLEMENTATION	1.1956227842679293E-6	DOCUMENTATION	3.615165168348926E-7	TEST
// VersionType impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //      Note : simply returns null for seed() and next() as the only known //      application of binary types for versioning is for use with the //      TIMESTAMP datatype supported by Sybase and SQL Server, which //      are completely db-generated values...	WITHOUT_CLASSIFICATION	0.9999990936203227	WITHOUT_CLASSIFICATION	7.088021213317729E-7	DEFECT	1.3065762130488772E-7	DESIGN	6.649609198890979E-8	IMPLEMENTATION	2.8868708508381625E-10	DOCUMENTATION	1.3515567225508126E-10	TEST
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999714635640932	WITHOUT_CLASSIFICATION	2.816988821116453E-5	DESIGN	3.5802035568450187E-7	DEFECT	3.7332574651598206E-9	TEST	3.565253556734652E-9	IMPLEMENTATION	1.2288289991963817E-9	DOCUMENTATION
//not really necessary, I guess...	WITHOUT_CLASSIFICATION	0.9635737481041252	WITHOUT_CLASSIFICATION	0.03620812508521073	DESIGN	1.5728250505515513E-4	DEFECT	5.5438271538773746E-5	IMPLEMENTATION	4.733710882096882E-6	DOCUMENTATION	6.723231880800183E-7	TEST
//Clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.9999997816952263	WITHOUT_CLASSIFICATION	2.0635717827062373E-7	DESIGN	5.105584602274507E-9	DEFECT	3.921711914631349E-9	TEST	1.906912774390049E-9	DOCUMENTATION	1.0133860087947831E-9	IMPLEMENTATION
// we do not have to worry about queued additions to uninitialized // collections, since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.9999979162148926	WITHOUT_CLASSIFICATION	1.7709896064790791E-6	DEFECT	3.0851059876144424E-7	IMPLEMENTATION	1.9562635021535423E-9	DESIGN	1.4473739258028085E-9	TEST	8.812647698006181E-10	DOCUMENTATION
// collections cannot be compared	WITHOUT_CLASSIFICATION	0.9999991526772276	WITHOUT_CLASSIFICATION	5.286476982117841E-7	DESIGN	2.823913576682556E-7	DEFECT	3.5637521540686714E-8	IMPLEMENTATION	5.699895048431057E-10	TEST	7.620542005269025E-11	DOCUMENTATION
//remember the uk value	WITHOUT_CLASSIFICATION	0.99980076359374	WITHOUT_CLASSIFICATION	1.7008127014373503E-4	DESIGN	2.1853653668854825E-5	DEFECT	4.46397569882506E-6	IMPLEMENTATION	1.679336851962193E-6	TEST	1.1581698964021004E-6	DOCUMENTATION
//NOOP	WITHOUT_CLASSIFICATION	0.9997967216223305	WITHOUT_CLASSIFICATION	1.7529399776488615E-4	DESIGN	9.234157600420944E-6	IMPLEMENTATION	7.924211242377407E-6	DEFECT	5.500084825957248E-6	TEST	5.325926236059239E-6	DOCUMENTATION
//processCollectionProperty(token, q.getCollectionPersister(collectionRole), collectionName);	WITHOUT_CLASSIFICATION	0.9999968248739145	WITHOUT_CLASSIFICATION	2.539615924755181E-6	DEFECT	5.215125232147155E-7	DESIGN	1.0695104481693804E-7	TEST	6.213067494082358E-9	DOCUMENTATION	8.33525262894053E-10	IMPLEMENTATION
//we must use the "remembered" uk value, since it is  //not available from the EntityEntry during assembly	WITHOUT_CLASSIFICATION	0.9998345189996607	WITHOUT_CLASSIFICATION	1.6535722640738176E-4	DESIGN	1.2222298957753656E-7	TEST	1.2669027873376097E-9	DEFECT	2.701663226518251E-10	DOCUMENTATION	1.3873153207177568E-11	IMPLEMENTATION
// collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.9981640272512374	WITHOUT_CLASSIFICATION	0.0018331583378629738	DESIGN	2.2980432576774933E-6	DEFECT	4.682228350208203E-7	IMPLEMENTATION	3.4777104745979224E-8	DOCUMENTATION	1.3367702146718508E-8	TEST
// return false;	WITHOUT_CLASSIFICATION	0.9999877189543723	WITHOUT_CLASSIFICATION	1.1186851500387228E-5	DESIGN	7.255861871829479E-7	DEFECT	3.555596276636382E-7	IMPLEMENTATION	9.339651817694668E-9	DOCUMENTATION	3.708660411255519E-9	TEST
// This just handles a particular case of component // projection, perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.9663807084752873	WITHOUT_CLASSIFICATION	0.03353616564950587	DESIGN	8.050073009600185E-5	DEFECT	2.516162080571399E-6	IMPLEMENTATION	7.040072339656364E-8	TEST	3.858230684436466E-8	DOCUMENTATION
//NOTE: we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.9999993167293182	WITHOUT_CLASSIFICATION	6.127673328565675E-7	DESIGN	6.018040988654974E-8	TEST	8.646288191802264E-9	DEFECT	1.667906146039301E-9	DOCUMENTATION	8.744770302634277E-12	IMPLEMENTATION
// the key is the owning entity itself, so get the ID from the key	WITHOUT_CLASSIFICATION	0.9999864708262688	WITHOUT_CLASSIFICATION	1.3501034338742326E-5	DESIGN	2.4358945245037363E-8	TEST	1.399099659862852E-9	DOCUMENTATION	1.22724007135694E-9	IMPLEMENTATION	1.1541076493122751E-9	DEFECT
// if the original is a PersistentCollection, and that original // was not flagged as dirty, then reset the target's dirty flag // here after the copy operation. // </p> // One thing to be careful of here is a "bare" original collection // in which case we should never ever ever reset the dirty flag // on the target because we simply do not know...	WITHOUT_CLASSIFICATION	0.9999999979603806	WITHOUT_CLASSIFICATION	1.6920571367529496E-9	DEFECT	3.3302464559270936E-10	DESIGN	1.2325206706102564E-11	IMPLEMENTATION	1.5553430240862349E-12	TEST	6.569332019313773E-13	DOCUMENTATION
//ignore subselect keywords	WITHOUT_CLASSIFICATION	0.9999999549532742	WITHOUT_CLASSIFICATION	2.773523566867771E-8	DEFECT	1.0751412973773497E-8	IMPLEMENTATION	4.424785297191543E-9	DESIGN	1.6061835637136144E-9	DOCUMENTATION	5.291083053801589E-10	TEST
// copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.9999999968627629	WITHOUT_CLASSIFICATION	2.7302905968817105E-9	DESIGN	2.2178796270185798E-10	DEFECT	1.6042904451638606E-10	IMPLEMENTATION	1.5837610680746254E-11	DOCUMENTATION	8.891873340886531E-12	TEST
// for a null target, or a target which is the same as the original, we // need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.9999996698160238	WITHOUT_CLASSIFICATION	3.2812131787944706E-7	DESIGN	1.7033525908936012E-9	DEFECT	3.1400366083492775E-10	DOCUMENTATION	3.116666355039559E-11	TEST	1.4135375703548356E-11	IMPLEMENTATION
// by default just use an unanticipated capacity since we don't // know how to extract the capacity to use from original here...	WITHOUT_CLASSIFICATION	0.9987495946634742	WITHOUT_CLASSIFICATION	0.001244760534564385	DESIGN	5.374237168601291E-6	IMPLEMENTATION	1.9372556797919652E-7	DEFECT	7.029287483612879E-8	DOCUMENTATION	6.546349895419493E-9	TEST
// get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.9999826163952299	WITHOUT_CLASSIFICATION	1.3575888313100232E-5	IMPLEMENTATION	3.083455449008035E-6	DESIGN	7.095261932329916E-7	DEFECT	9.728700841615494E-9	TEST	5.006113940363128E-9	DOCUMENTATION
// check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.9997574460309542	WITHOUT_CLASSIFICATION	2.1707334824887578E-4	IMPLEMENTATION	1.942932291958518E-5	DESIGN	5.605675683883558E-6	DEFECT	2.2893615303359513E-7	TEST	2.1668604034316915E-7	DOCUMENTATION
// check if it is already completely loaded, but unowned	WITHOUT_CLASSIFICATION	0.9999500812141332	WITHOUT_CLASSIFICATION	4.980405697271313E-5	IMPLEMENTATION	5.6087697629507136E-8	DESIGN	3.9395873379928635E-8	DEFECT	1.8723021694524525E-8	TEST	5.223014431601187E-10	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999998996423084	WITHOUT_CLASSIFICATION	9.934520201283497E-8	DEFECT	5.425948243194942E-10	DESIGN	3.020458604862903E-10	DOCUMENTATION	9.766542808978321E-11	IMPLEMENTATION	7.018340097884916E-11	TEST
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.808471706655727	WITHOUT_CLASSIFICATION	0.14878492336740248	DESIGN	0.030561939642026525	IMPLEMENTATION	0.005838312768030512	DOCUMENTATION	0.0034771052887702055	DEFECT	0.002866012278043484	TEST
// create a new collection wrapper, to be initialized later	WITHOUT_CLASSIFICATION	0.9999824198373988	WITHOUT_CLASSIFICATION	1.6693154862778154E-5	DESIGN	8.496827728393206E-7	DEFECT	2.5895044097992853E-8	IMPLEMENTATION	7.69693765037426E-9	TEST	3.73298391868598E-9	DOCUMENTATION
// Some JDBC drivers erroneously return an empty array here for a null DB value :/	WITHOUT_CLASSIFICATION	0.9999685477092576	WITHOUT_CLASSIFICATION	2.940768366273605E-5	DESIGN	1.923973612432232E-6	DEFECT	1.1872513401592775E-7	IMPLEMENTATION	1.6964085138551548E-9	DOCUMENTATION	2.119247875440982E-10	TEST
// our column span is the number of columns in the PK	WITHOUT_CLASSIFICATION	0.9999999590743618	WITHOUT_CLASSIFICATION	2.416999897352009E-8	DESIGN	1.643036637657835E-8	DEFECT	2.185965644607854E-10	DOCUMENTATION	5.877614317302038E-11	IMPLEMENTATION	4.790014034466206E-11	TEST
//cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.9999988619180302	WITHOUT_CLASSIFICATION	9.172865832678463E-7	DEFECT	1.2950639900232726E-7	DESIGN	4.5026717938354517E-8	TEST	3.706130254706144E-8	DOCUMENTATION	9.2009669961621E-9	IMPLEMENTATION
// we already know current is not null...	WITHOUT_CLASSIFICATION	0.998597020277395	WITHOUT_CLASSIFICATION	9.202052738960312E-4	DEFECT	3.88680346532621E-4	DESIGN	8.935568532339684E-5	IMPLEMENTATION	4.503190612623935E-6	DOCUMENTATION	2.3522624026504896E-7	TEST
// the ids are fully resolved, so compare them with isDirty(), not isModified()	WITHOUT_CLASSIFICATION	0.9999570624271286	WITHOUT_CLASSIFICATION	3.571547304747759E-5	IMPLEMENTATION	6.0227571273348924E-6	DESIGN	1.1292459475389182E-6	DEFECT	6.796481001931326E-8	TEST	2.1319391643936707E-9	DOCUMENTATION
//the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.9999983101205369	WITHOUT_CLASSIFICATION	6.581670072798299E-7	DESIGN	5.305655407897283E-7	DEFECT	3.746268730906117E-7	TEST	7.231744066098852E-8	DOCUMENTATION	5.4202601243528915E-8	IMPLEMENTATION
// ----------------------------------------------------------- Constructors	WITHOUT_CLASSIFICATION	0.9999993071956313	WITHOUT_CLASSIFICATION	5.333445015245789E-7	DESIGN	1.1294858108175756E-7	IMPLEMENTATION	2.7962004877794547E-8	DEFECT	1.1062197341320423E-8	TEST	7.48708375589281E-9	DOCUMENTATION
// ----------------------------------------------------- Instance Variables	WITHOUT_CLASSIFICATION	0.999999641386326	WITHOUT_CLASSIFICATION	1.7570567321691802E-7	IMPLEMENTATION	1.2145722553293642E-7	DESIGN	5.386366757436431E-8	DEFECT	4.95741681794667E-9	DOCUMENTATION	2.629690791195513E-9	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// --------------------------------------------------------- Public Methods	WITHOUT_CLASSIFICATION	0.9999762276942812	WITHOUT_CLASSIFICATION	2.358336698972244E-5	DESIGN	8.895544901266041E-8	IMPLEMENTATION	4.444231870117504E-8	DEFECT	4.2610452142469057E-8	DOCUMENTATION	1.293050921170909E-8	TEST
// Compare the two maps for equality	WITHOUT_CLASSIFICATION	0.9999996987474592	WITHOUT_CLASSIFICATION	2.74245963447564E-7	DESIGN	1.3962400197468473E-8	IMPLEMENTATION	9.606592424516294E-9	DEFECT	2.745959600974649E-9	TEST	6.916252387804068E-10	DOCUMENTATION
// Simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.9999987120954978	WITHOUT_CLASSIFICATION	1.0851576344469298E-6	TEST	1.6742163488251277E-7	DEFECT	3.1803458634990006E-8	DOCUMENTATION	2.5747689006097147E-9	DESIGN	9.470053080033847E-10	IMPLEMENTATION
//Sybase fail if we don't do that, sigh...	WITHOUT_CLASSIFICATION	0.9984795204293665	WITHOUT_CLASSIFICATION	9.500134447859441E-4	DESIGN	5.606113913740122E-4	DEFECT	5.056412838618381E-6	DOCUMENTATION	4.421377660179071E-6	TEST	3.769439747789309E-7	IMPLEMENTATION
// Handles things like: // a and b or c // a and ( b or c ) // not a and not b // not ( a and b ) // x between y and z            (overloaded "and") // x in ( a, b, c )             (overloaded brackets) // not not a // a is not null                (overloaded "not") // etc...... // and expressions like // foo = bar                    (maps to: foo.id = bar.id) // foo.Bar = 'foo'              (maps to: foo.bar = 'foo') // foo.Bar.Baz = 1.0            (maps to: foo.bar = bar.id and bar.baz = 1.0) // 1.0 = foo.Bar.Baz            (maps to: bar.baz = 1.0 and foo.Bar = bar.id) // foo.Bar.Baz = a.B.C          (maps to: bar.Baz = b.C and foo.Bar = bar.id and a.B = b.id) // foo.Bar.Baz + a.B.C          (maps to: bar.Baz + b.C and foo.Bar = bar.id and a.B = b.id) // ( foo.Bar.Baz + 1.0 ) < 2.0  (maps to: ( bar.Baz + 1.0 ) < 2.0 and foo.Bar = bar.id)	WITHOUT_CLASSIFICATION	0.46406915147010036	WITHOUT_CLASSIFICATION	0.3197102377887999	DEFECT	0.21621393135198488	DESIGN	4.926506844944708E-6	TEST	1.0847443128824525E-6	DOCUMENTATION	6.681379571134331E-7	IMPLEMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999973183155326	WITHOUT_CLASSIFICATION	1.385362326526812E-6	DESIGN	1.2812698218786032E-6	IMPLEMENTATION	9.561634054762158E-9	DOCUMENTATION	4.10508770314381E-9	DEFECT	1.3855971855686513E-9	TEST
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999973183155326	WITHOUT_CLASSIFICATION	1.385362326526812E-6	DESIGN	1.2812698218786032E-6	IMPLEMENTATION	9.561634054762158E-9	DOCUMENTATION	4.10508770314381E-9	DEFECT	1.3855971855686513E-9	TEST
// try to "pretty print" it	WITHOUT_CLASSIFICATION	0.9999859187276793	WITHOUT_CLASSIFICATION	1.2140435094782694E-5	DESIGN	1.7993914112406028E-6	DEFECT	6.537139258135927E-8	DOCUMENTATION	6.033334336308924E-8	IMPLEMENTATION	1.574107856920708E-8	TEST
// otherwise, just dump it	WITHOUT_CLASSIFICATION	0.9997088945294907	WITHOUT_CLASSIFICATION	2.6307572089523856E-4	DESIGN	2.689475814201488E-5	IMPLEMENTATION	1.0298969115712786E-6	TEST	8.134838063775847E-8	DOCUMENTATION	2.374617983646632E-8	DEFECT
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9998932263973097	WITHOUT_CLASSIFICATION	8.939273174309747E-5	DESIGN	1.6564796749105944E-5	DEFECT	7.588071426710487E-7	DOCUMENTATION	5.326356417339705E-8	TEST	4.003491153503938E-9	IMPLEMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9998932263973097	WITHOUT_CLASSIFICATION	8.939273174309747E-5	DESIGN	1.6564796749105944E-5	DEFECT	7.588071426710487E-7	DOCUMENTATION	5.326356417339705E-8	TEST	4.003491153503938E-9	IMPLEMENTATION
// use default behavior	WITHOUT_CLASSIFICATION	0.9996832683104784	WITHOUT_CLASSIFICATION	3.166817297492274E-4	DESIGN	1.9365409532224672E-8	DEFECT	1.5110078691467094E-8	DOCUMENTATION	1.3548239505099822E-8	IMPLEMENTATION	1.9360448016119146E-9	TEST
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9997808047478963	WITHOUT_CLASSIFICATION	2.049956693861183E-4	DESIGN	8.699064381870883E-6	DEFECT	5.188377551863791E-6	IMPLEMENTATION	2.1666611942406908E-7	DOCUMENTATION	9.547466447281513E-8	TEST
// the MRU cache used to keep hard references to the most recently used query plans; // note : LRU here is a bit of a misnomer, it indicates that LRU entries are removed, the // actual kept entries are the MRU entries	WITHOUT_CLASSIFICATION	0.7362537903003992	IMPLEMENTATION	0.1803153836804826	WITHOUT_CLASSIFICATION	0.0834298573128021	DESIGN	6.242122521345526E-7	DEFECT	2.0920496131827998E-7	TEST	1.3528910258408725E-7	DOCUMENTATION
// we want to be able to just use the defaults, // if JNDI environment properties are not supplied // so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.9999628145306262	WITHOUT_CLASSIFICATION	3.718278128141851E-5	DESIGN	1.7132583295934407E-9	DOCUMENTATION	9.309261782967389E-10	TEST	4.249124542930166E-11	IMPLEMENTATION	1.4165639490860725E-12	DEFECT
// Clone //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999997569983516	WITHOUT_CLASSIFICATION	1.318064208180191E-7	DESIGN	8.990702388473252E-8	DEFECT	1.0191883065330338E-8	TEST	5.614271307756232E-9	IMPLEMENTATION	5.482049268511666E-9	DOCUMENTATION
// Serialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999995838273545	WITHOUT_CLASSIFICATION	1.8375960478256942E-7	IMPLEMENTATION	1.5792966954858944E-7	DEFECT	5.260543888453289E-8	DESIGN	1.3046062698216122E-8	TEST	8.831869462547824E-9	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999963989667433	WITHOUT_CLASSIFICATION	3.514514973533126E-6	DESIGN	8.345769303370559E-8	DEFECT	2.1602892729819125E-9	DOCUMENTATION	8.013196871813539E-10	TEST	9.898107658930935E-11	IMPLEMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999963989667433	WITHOUT_CLASSIFICATION	3.514514973533126E-6	DESIGN	8.345769303370559E-8	DEFECT	2.1602892729819125E-9	DOCUMENTATION	8.013196871813539E-10	TEST	9.898107658930935E-11	IMPLEMENTATION
// Deserialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999989956398513	WITHOUT_CLASSIFICATION	7.991659000683797E-7	IMPLEMENTATION	1.1582798934999228E-7	DEFECT	5.641255252447547E-8	TEST	2.1759433152895676E-8	DESIGN	1.1194273789424988E-8	DOCUMENTATION
/* static methods only - hide constructor */	WITHOUT_CLASSIFICATION	0.9963387689945182	WITHOUT_CLASSIFICATION	0.0036329886450849505	DESIGN	2.538026155294217E-5	IMPLEMENTATION	2.485089403061776E-6	DEFECT	2.384819175194024E-7	DOCUMENTATION	1.385275233218568E-7	TEST
/*&& !('_'==character)*/	WITHOUT_CLASSIFICATION	0.9999984635706899	WITHOUT_CLASSIFICATION	1.0911950020431723E-6	DESIGN	2.0146299931119234E-7	IMPLEMENTATION	1.1030052233858943E-7	DEFECT	7.092380301019392E-8	TEST	6.254698339940461E-8	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.9999886852994432	WITHOUT_CLASSIFICATION	6.768304667540004E-6	DESIGN	4.142613659795567E-6	DEFECT	3.7436656990531753E-7	IMPLEMENTATION	2.630830451213302E-8	DOCUMENTATION	3.107354966648982E-9	TEST
// returnign null!	WITHOUT_CLASSIFICATION	0.9999886852994432	WITHOUT_CLASSIFICATION	6.768304667540004E-6	DESIGN	4.142613659795567E-6	DEFECT	3.7436656990531753E-7	IMPLEMENTATION	2.630830451213302E-8	DOCUMENTATION	3.107354966648982E-9	TEST
// includes last '.'	WITHOUT_CLASSIFICATION	0.9999991095189732	WITHOUT_CLASSIFICATION	4.22093616566683E-7	DESIGN	3.9769079846255743E-7	DEFECT	3.5153744343702726E-8	TEST	2.5356783764360176E-8	DOCUMENTATION	1.0186083588553466E-8	IMPLEMENTATION
// +1 to include the following '.'	WITHOUT_CLASSIFICATION	0.9999930939070686	WITHOUT_CLASSIFICATION	3.854861428478585E-6	DEFECT	1.688489718889255E-6	IMPLEMENTATION	1.242640669559358E-6	DESIGN	1.0077793566632881E-7	DOCUMENTATION	1.9323178824237597E-8	TEST
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9999843116569725	WITHOUT_CLASSIFICATION	9.275937650479633E-6	DEFECT	5.992170031178296E-6	DESIGN	3.6223923994154725E-7	IMPLEMENTATION	5.451627384843233E-8	TEST	3.4798319878826355E-9	DOCUMENTATION
// first time we find match!	WITHOUT_CLASSIFICATION	0.9999996262462096	WITHOUT_CLASSIFICATION	2.800097062800112E-7	DESIGN	4.798910170429173E-8	IMPLEMENTATION	2.080406583728348E-8	TEST	1.634947163271042E-8	DOCUMENTATION	8.601445124498898E-9	DEFECT
// entityNames may now include slashes for the representations //classname may be an inner class	WITHOUT_CLASSIFICATION	0.9947125609586682	WITHOUT_CLASSIFICATION	0.005286045857444905	DESIGN	1.3442287735976547E-6	DEFECT	3.55211930015127E-8	DOCUMENTATION	6.791317455801312E-9	IMPLEMENTATION	6.64260285098822E-9	TEST
// wrapped iterators	WITHOUT_CLASSIFICATION	0.9999866828098023	WITHOUT_CLASSIFICATION	1.3191278409469073E-5	DESIGN	5.945600397417736E-8	IMPLEMENTATION	4.230168893695353E-8	TEST	1.9973013752993126E-8	DEFECT	4.181081763082831E-9	DOCUMENTATION
// index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.9999239815029904	WITHOUT_CLASSIFICATION	7.455859002278143E-5	DESIGN	1.3881397919685419E-6	DEFECT	3.4924390280914315E-8	TEST	2.9039204011001798E-8	DOCUMENTATION	7.803600578527534E-9	IMPLEMENTATION
// the current iterator	WITHOUT_CLASSIFICATION	0.9998792432625154	WITHOUT_CLASSIFICATION	1.1994339425958794E-4	DESIGN	3.825668524723308E-7	IMPLEMENTATION	1.6862116006124142E-7	TEST	1.322942331690784E-7	DOCUMENTATION	1.2986097936946715E-7	DEFECT
// the last used iterator	WITHOUT_CLASSIFICATION	0.999487271028917	WITHOUT_CLASSIFICATION	5.124984938282859E-4	DESIGN	2.0743602623441604E-7	TEST	1.0096566484657242E-8	IMPLEMENTATION	7.676150418242999E-9	DEFECT	5.268511455862141E-9	DOCUMENTATION
//it was a boolean expression	WITHOUT_CLASSIFICATION	0.9999665317663138	WITHOUT_CLASSIFICATION	2.5924230509485897E-5	DESIGN	7.514991099064803E-6	DEFECT	1.748248553707009E-8	TEST	1.016296934079229E-8	DOCUMENTATION	1.3666227047245784E-9	IMPLEMENTATION
/*public static Object[] clone(Class elementClass, Object[] array) {	WITHOUT_CLASSIFICATION	0.9782335210625814	WITHOUT_CLASSIFICATION	0.021755766412545986	DESIGN	7.58512190170741E-6	DEFECT	1.9274433199819857E-6	IMPLEMENTATION	1.0955608208952866E-6	DOCUMENTATION	1.0439883000750576E-7	TEST
// call this before any Iterator method to make sure that the current Iterator // is not exhausted	WITHOUT_CLASSIFICATION	0.9990799675487114	WITHOUT_CLASSIFICATION	8.651824945699788E-4	DESIGN	4.841429525336101E-5	DEFECT	3.987798743895196E-6	IMPLEMENTATION	2.3726914946749256E-6	TEST	7.517122668591097E-8	DOCUMENTATION
//doable if needed	WITHOUT_CLASSIFICATION	0.9949441251035689	WITHOUT_CLASSIFICATION	0.0031680026930199336	IMPLEMENTATION	0.0017801320874885132	DESIGN	9.590397266444091E-5	TEST	9.197798255143527E-6	DOCUMENTATION	2.638345002939964E-6	DEFECT
// set last used iterator here, in case the user calls remove // before calling hasNext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.9898977768723369	WITHOUT_CLASSIFICATION	0.00919170535959544	DESIGN	9.06357958273289E-4	DEFECT	3.4330501939124445E-6	TEST	7.041685336195181E-7	IMPLEMENTATION	2.2591066880875535E-8	DOCUMENTATION
// peek ahead	WITHOUT_CLASSIFICATION	0.9999584273386357	WITHOUT_CLASSIFICATION	3.6802634918113484E-5	IMPLEMENTATION	3.953363212851061E-6	DESIGN	4.117131301533207E-7	DOCUMENTATION	3.258199801023811E-7	DEFECT	7.913012306608281E-8	TEST
// if we reach the end of the string w/o finding the // matching end, that is an exception	WITHOUT_CLASSIFICATION	0.9999996205755985	WITHOUT_CLASSIFICATION	3.661811524043244E-7	DEFECT	8.144064389129148E-9	DESIGN	4.239062593371625E-9	TEST	6.585034448184763E-10	IMPLEMENTATION	2.0161859999541258E-10	DOCUMENTATION
// we have a placeholder, spin forward till we find the end	WITHOUT_CLASSIFICATION	0.9999936327989556	WITHOUT_CLASSIFICATION	4.789151452470882E-6	IMPLEMENTATION	1.4249880645977298E-6	DESIGN	1.2095708919382707E-7	DEFECT	2.954039403550779E-8	DOCUMENTATION	2.564044082940788E-9	TEST
// make sure spinning forward did not put us past the end of the buffer...	WITHOUT_CLASSIFICATION	0.9999999836137318	WITHOUT_CLASSIFICATION	1.130981279584981E-8	DEFECT	2.562396468944134E-9	IMPLEMENTATION	1.3370959232909748E-9	DESIGN	1.1273266864595179E-9	TEST	4.963634892995884E-11	DOCUMENTATION
// First, try to locate this resource through the current // context classloader.	WITHOUT_CLASSIFICATION	0.9999985286380152	WITHOUT_CLASSIFICATION	1.0006648509395696E-6	DESIGN	2.482487220193856E-7	DEFECT	1.3753837675006918E-7	IMPLEMENTATION	6.607737932207945E-8	DOCUMENTATION	1.883265588633872E-8	TEST
// Next, try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.9999791100972127	WITHOUT_CLASSIFICATION	2.068901621052532E-5	DESIGN	1.0967848129568779E-7	DEFECT	5.007955117366826E-8	TEST	2.1240988642606493E-8	DOCUMENTATION	1.9887555706623763E-8	IMPLEMENTATION
// Next, try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.9999678184845828	WITHOUT_CLASSIFICATION	3.0190323146854528E-5	DESIGN	1.7949875160880417E-6	DEFECT	1.1080941420172176E-7	TEST	4.4630704872631225E-8	IMPLEMENTATION	4.0764635219666005E-8	DOCUMENTATION
// Anywhere else we should look?	WITHOUT_CLASSIFICATION	0.9992215272036292	WITHOUT_CLASSIFICATION	7.575563990379268E-4	DESIGN	1.9178181533674067E-5	DEFECT	1.297699144324542E-6	IMPLEMENTATION	2.3186402572919666E-7	TEST	2.086526292669217E-7	DOCUMENTATION
// would need an IdentitySet for this!	WITHOUT_CLASSIFICATION	0.9984825405634397	WITHOUT_CLASSIFICATION	0.001511021042773364	DESIGN	4.829210409848789E-6	TEST	1.2781076580441113E-6	DOCUMENTATION	2.6596405506443123E-7	IMPLEMENTATION	6.511166400558206E-8	DEFECT
//Arrays.asList doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.9999983676846645	WITHOUT_CLASSIFICATION	5.212595401993824E-7	DEFECT	4.609713355892643E-7	TEST	3.3388330102500445E-7	IMPLEMENTATION	1.6313318434538818E-7	DESIGN	1.5306797418887018E-7	DOCUMENTATION
//faster?	WITHOUT_CLASSIFICATION	0.9735290580957906	WITHOUT_CLASSIFICATION	0.02641722317188906	DESIGN	2.5655472620884802E-5	TEST	1.2271122465503833E-5	IMPLEMENTATION	1.0203092038379914E-5	DEFECT	5.589045195590495E-6	DOCUMENTATION
// the name of a class	WITHOUT_CLASSIFICATION	0.9999209746763907	WITHOUT_CLASSIFICATION	7.654225098095419E-5	DESIGN	2.2717395847499297E-6	DEFECT	1.1302172503398878E-7	DOCUMENTATION	5.9355636842735005E-8	TEST	3.89556816737682E-8	IMPLEMENTATION
// Its the listener class name	WITHOUT_CLASSIFICATION	0.9999944852416814	WITHOUT_CLASSIFICATION	5.42100470018116E-6	DESIGN	6.354422942834222E-8	DEFECT	2.0103549966056837E-8	TEST	6.711860114611692E-9	IMPLEMENTATION	3.3939788782512925E-9	DOCUMENTATION
//allow 9,8,7,6,5,4,3,2,1	WITHOUT_CLASSIFICATION	0.9999516952673153	WITHOUT_CLASSIFICATION	2.4904428828483185E-5	DEFECT	1.5723234795955158E-5	DESIGN	6.400342749509691E-6	IMPLEMENTATION	6.456363208407399E-7	DOCUMENTATION	6.310899898464539E-7	TEST
// default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.9999999572961077	WITHOUT_CLASSIFICATION	3.2664977911114435E-8	DESIGN	7.092766384769219E-9	IMPLEMENTATION	2.6255253579361465E-9	DOCUMENTATION	1.7786969634389908E-10	DEFECT	1.427528877231103E-10	TEST
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999199302112652	WITHOUT_CLASSIFICATION	7.709512614880057E-5	DESIGN	1.8266904714059838E-6	IMPLEMENTATION	1.006476400069946E-6	DEFECT	1.121011157482892E-7	DOCUMENTATION	2.939459887512246E-8	TEST
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.8295410672250331	DESIGN	0.07569142141446054	WITHOUT_CLASSIFICATION	0.068007294429828	IMPLEMENTATION	0.026577613096528396	DEFECT	1.2330354888648412E-4	DOCUMENTATION	5.930028526353756E-5	TEST
// first, lets determine whether to apply cglib or javassist based instrumentation...	WITHOUT_CLASSIFICATION	0.9999981239661766	WITHOUT_CLASSIFICATION	1.849355859335041E-6	DESIGN	1.3988269613711438E-8	DOCUMENTATION	7.933673347049934E-9	DEFECT	3.061125642013377E-9	TEST	1.6948954604979055E-9	IMPLEMENTATION
// Make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.9999998807609194	WITHOUT_CLASSIFICATION	1.102652194288314E-7	DESIGN	4.8706527395564225E-9	DEFECT	3.516224359697118E-9	IMPLEMENTATION	4.1090209685481394E-10	DOCUMENTATION	1.7608201312748654E-10	TEST
//entirely optional!!	WITHOUT_CLASSIFICATION	0.9997034272651766	WITHOUT_CLASSIFICATION	2.581127423272208E-4	DESIGN	1.738051029269581E-5	DEFECT	1.512595288506962E-5	IMPLEMENTATION	5.572680571410624E-6	DOCUMENTATION	3.8084874708743215E-7	TEST
// Its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.9999406068686165	WITHOUT_CLASSIFICATION	5.8257039405520474E-5	DESIGN	8.242198285023764E-7	IMPLEMENTATION	2.556595549802221E-7	DEFECT	3.448703397938294E-8	DOCUMENTATION	2.172556048339796E-8	TEST
//context.unbind(boundName);	WITHOUT_CLASSIFICATION	0.9998144522237268	WITHOUT_CLASSIFICATION	1.2612475857295215E-4	DESIGN	3.146567972707436E-5	DEFECT	1.88067591987807E-5	IMPLEMENTATION	5.0283098566761855E-6	DOCUMENTATION	4.122268917751597E-6	TEST
//readResolveObject	WITHOUT_CLASSIFICATION	0.9962577087211703	WITHOUT_CLASSIFICATION	0.0037174632462373173	DESIGN	9.815759329714783E-6	DEFECT	6.872517931597342E-6	IMPLEMENTATION	5.983697397777711E-6	DOCUMENTATION	2.1560579332158013E-6	TEST
//cfg.setProperty("hibernate.show_sql", "true");	WITHOUT_CLASSIFICATION	0.999999959940343	WITHOUT_CLASSIFICATION	2.0700254404073287E-8	DESIGN	1.723013059355056E-8	DEFECT	1.5105194043865333E-9	TEST	3.4325131806194185E-10	DOCUMENTATION	2.7550125129701234E-10	IMPLEMENTATION
// Defensive, convenience methods	WITHOUT_CLASSIFICATION	0.9998915348186547	WITHOUT_CLASSIFICATION	1.0666373834703917E-4	IMPLEMENTATION	1.0883155204674048E-6	DESIGN	5.608979926491679E-7	DOCUMENTATION	8.40969864879497E-8	TEST	6.813249857400138E-8	DEFECT
// Create the SessionFactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.9999807533751566	WITHOUT_CLASSIFICATION	1.914742827408893E-5	DESIGN	4.3516813497487155E-8	DEFECT	3.3481517938851474E-8	IMPLEMENTATION	1.3038812693837081E-8	TEST	9.159425143688389E-9	DOCUMENTATION
// Make sure you log the exception, as it might be swallowed	WITHOUT_CLASSIFICATION	0.9986648900077911	WITHOUT_CLASSIFICATION	0.0012961285189740405	DEFECT	3.857179437872605E-5	DESIGN	3.528376056563516E-7	IMPLEMENTATION	5.166567330427235E-8	TEST	5.1755770950993605E-9	DOCUMENTATION
// Begin unit of work	WITHOUT_CLASSIFICATION	0.9993282652324958	WITHOUT_CLASSIFICATION	6.40839551395731E-4	DEFECT	2.8521953016019274E-5	DESIGN	1.3314804140352296E-6	DOCUMENTATION	5.246002489188771E-7	TEST	5.171824296067872E-7	IMPLEMENTATION
// Write HTML header	WITHOUT_CLASSIFICATION	0.999911380455903	WITHOUT_CLASSIFICATION	6.086472185770979E-5	DESIGN	2.4002304814667994E-5	IMPLEMENTATION	3.0072153326649453E-6	DEFECT	5.095271334666357E-7	DOCUMENTATION	2.3577495855092088E-7	TEST
// Handle actions	WITHOUT_CLASSIFICATION	0.9999320499882962	WITHOUT_CLASSIFICATION	5.337898315486999E-5	DESIGN	1.4063132196240099E-5	IMPLEMENTATION	2.887755447073902E-7	DEFECT	1.9480811604373065E-7	DOCUMENTATION	2.4312691906858135E-8	TEST
// Print page	WITHOUT_CLASSIFICATION	0.9999977142644948	WITHOUT_CLASSIFICATION	1.480870457621201E-6	IMPLEMENTATION	5.484727881719623E-7	DESIGN	1.7593330161708513E-7	DEFECT	4.9359959028984544E-8	DOCUMENTATION	3.109899878463595E-8	TEST
// Write HTML footer	WITHOUT_CLASSIFICATION	0.9999772076633218	WITHOUT_CLASSIFICATION	1.874947039131199E-5	DESIGN	3.634055844801166E-6	DEFECT	2.91925409656291E-7	IMPLEMENTATION	6.136490769998677E-8	TEST	5.5520124889888404E-8	DOCUMENTATION
// End unit of work	WITHOUT_CLASSIFICATION	0.9999371551165007	WITHOUT_CLASSIFICATION	5.612606306176574E-5	DEFECT	6.122468247148878E-6	DESIGN	2.9426395091986393E-7	IMPLEMENTATION	1.7920574736046422E-7	TEST	1.2288249211123902E-7	DOCUMENTATION
// Start the session to be used for this request	WITHOUT_CLASSIFICATION	0.9866355377431074	WITHOUT_CLASSIFICATION	0.013364082552251669	DESIGN	2.0320651505544962E-7	TEST	1.1969589537269514E-7	DEFECT	4.20641720642695E-8	DOCUMENTATION	1.4738058287051968E-8	IMPLEMENTATION
// make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.9999966021774224	WITHOUT_CLASSIFICATION	2.646886905342556E-6	DESIGN	3.1737990580269286E-7	IMPLEMENTATION	2.96219973169428E-7	DEFECT	8.337632442708059E-8	DOCUMENTATION	5.395946870105635E-8	TEST
// pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.999999986768807	WITHOUT_CLASSIFICATION	1.0500807793042553E-8	IMPLEMENTATION	1.4453070174406145E-9	DEFECT	7.538554815276799E-10	TEST	3.4309290188701114E-10	DESIGN	1.8812991153735848E-10	DOCUMENTATION
// remove session from "current context"	WITHOUT_CLASSIFICATION	0.9997172071655238	WITHOUT_CLASSIFICATION	2.3462906273379977E-4	DESIGN	4.744005147648228E-5	DEFECT	5.707781546291298E-7	DOCUMENTATION	1.1404457600739093E-7	IMPLEMENTATION	3.889753529034426E-8	TEST
// Eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.999976121678871	WITHOUT_CLASSIFICATION	1.6632929825715632E-5	DESIGN	7.159047025147096E-6	IMPLEMENTATION	3.5794915997865E-8	DOCUMENTATION	3.539966370720559E-8	DEFECT	1.5149698416614207E-8	TEST
// If we want to handle it bidirectional and detached, we also need to load this // collection with an eager outer-join fetch, this time with Criteria and not HQL:	WITHOUT_CLASSIFICATION	0.9999999611762066	WITHOUT_CLASSIFICATION	2.0730927442656595E-8	DESIGN	1.5261073572384678E-8	IMPLEMENTATION	1.5055124809484232E-9	DEFECT	1.131541570981682E-9	TEST	1.9473846355358534E-10	DOCUMENTATION
/*        Event anEvent = (Event) session                .createCriteria(Event.class).setFetchMode("participants", FetchMode.JOIN)                .add( Expression.eq("id", eventId) )                .uniqueResult(); // Eager fetch the colleciton so we can use it detached        */	WITHOUT_CLASSIFICATION	0.9999999994622961	WITHOUT_CLASSIFICATION	4.909149891078086E-10	DESIGN	2.8990127867636317E-11	IMPLEMENTATION	1.3297894836917308E-11	DEFECT	3.3634929116264673E-12	TEST	1.1373730708651945E-12	DOCUMENTATION
// End of first unit of work	WITHOUT_CLASSIFICATION	0.9999947208968013	WITHOUT_CLASSIFICATION	4.413694731670788E-6	DEFECT	6.400954175845813E-7	DESIGN	1.657715382047381E-7	TEST	3.25210240797818E-8	IMPLEMENTATION	2.7020487141796812E-8	DOCUMENTATION
// or bidirectional safety method, setting both sides: aPerson.addToEvent(anEvent);	WITHOUT_CLASSIFICATION	0.999826685065872	WITHOUT_CLASSIFICATION	1.5376564018341752E-4	IMPLEMENTATION	1.9223084161566292E-5	DESIGN	2.3749155076569584E-7	DEFECT	5.623056652174293E-8	DOCUMENTATION	3.248766564993369E-8	TEST
// Begin second unit of work	WITHOUT_CLASSIFICATION	0.9993162060360156	WITHOUT_CLASSIFICATION	5.883072826694937E-4	DEFECT	9.060241975947185E-5	DESIGN	3.855806645726734E-6	DOCUMENTATION	7.689474707756254E-7	IMPLEMENTATION	2.595074390653326E-7	TEST
// Reattachment of aPerson	WITHOUT_CLASSIFICATION	0.9999792239928219	WITHOUT_CLASSIFICATION	1.8369367581911672E-5	DESIGN	2.0087498668823807E-6	DEFECT	2.2140571923650428E-7	DOCUMENTATION	1.3813144787785707E-7	IMPLEMENTATION	3.835256212308001E-8	TEST
// The getEmailAddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.9992241033150062	WITHOUT_CLASSIFICATION	7.7297629666398E-4	DEFECT	2.183798792950038E-6	DESIGN	4.824170464619635E-7	IMPLEMENTATION	2.1222529701496437E-7	TEST	4.1947193335261944E-8	DOCUMENTATION
// We need our tm, so get it now and avoid doing other work // if there is a problem	WITHOUT_CLASSIFICATION	0.9999628919888809	WITHOUT_CLASSIFICATION	3.607774367931457E-5	DESIGN	7.179951654967515E-7	TEST	3.0844899881992424E-7	DEFECT	2.0963102735670054E-9	DOCUMENTATION	1.7269650672932107E-9	IMPLEMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999970922705468	WITHOUT_CLASSIFICATION	2.5341836360744645E-6	DEFECT	3.309174845296355E-7	IMPLEMENTATION	3.2379251046243994E-8	DESIGN	7.185594408215652E-9	DOCUMENTATION	3.0634871669364453E-9	TEST
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999970922705468	WITHOUT_CLASSIFICATION	2.5341836360744645E-6	DEFECT	3.309174845296355E-7	IMPLEMENTATION	3.2379251046243994E-8	DESIGN	7.185594408215652E-9	DOCUMENTATION	3.0634871669364453E-9	TEST
// JBC put a version in the node when it created as part of // some internal operation. We are always newer, but if // the JBC version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.9999999396938481	WITHOUT_CLASSIFICATION	5.893039341801844E-8	DESIGN	6.227328071253276E-10	TEST	5.794822488010376E-10	DEFECT	8.860766447250972E-11	DOCUMENTATION	8.493555618759531E-11	IMPLEMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for properties with //                     hibernate-specific overrides to detect and warn about conflicting //                     declarations	WITHOUT_CLASSIFICATION	0.9996228942177555	WITHOUT_CLASSIFICATION	3.7362333211037106E-4	DESIGN	2.379629070021009E-6	IMPLEMENTATION	4.780775032581063E-7	TEST	3.633574571836767E-7	DOCUMENTATION	2.613861036747048E-7	DEFECT
// Not null if the Isolation level has been specified in the configuration file. // Otherwise, it is left to the Driver's default value.	WITHOUT_CLASSIFICATION	0.9999994580095373	WITHOUT_CLASSIFICATION	3.7415455854205986E-7	IMPLEMENTATION	1.6489772997968023E-7	DESIGN	1.7053566744371966E-9	DOCUMENTATION	7.047055572779592E-10	TEST	5.281119700298666E-10	DEFECT
// Configured outside of Hibernate (i.e. Servlet container, or Java Bean Container // already has Proxool pools running, and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.9999877889050657	WITHOUT_CLASSIFICATION	1.2210818385766344E-5	DESIGN	1.0919688429668498E-10	DOCUMENTATION	8.688356604769555E-11	DEFECT	5.07856784239447E-11	TEST	2.968242421020773E-11	IMPLEMENTATION
// If you're closing down the ConnectionProvider chances are an // is not a real big deal, just warn	WITHOUT_CLASSIFICATION	0.9999702821283494	WITHOUT_CLASSIFICATION	2.955537725246791E-5	DEFECT	1.4941107931398978E-7	DESIGN	6.694630424604931E-9	IMPLEMENTATION	5.495433669482298E-9	TEST	8.932546866121754E-10	DOCUMENTATION
// (AS is always optional, for consistency with SQL/OQL)	WITHOUT_CLASSIFICATION	0.9999900232420154	WITHOUT_CLASSIFICATION	7.002716378717677E-6	IMPLEMENTATION	2.7301833737025175E-6	DESIGN	1.442230923204422E-7	TEST	6.444680239336086E-8	DOCUMENTATION	3.518833758330882E-8	DEFECT
// process the "new" HQL style where aliases are assigned // _after_ the class name or path expression ie. using // the AS construction	WITHOUT_CLASSIFICATION	0.999999328938592	WITHOUT_CLASSIFICATION	6.641603199056077E-7	DESIGN	6.425210735580462E-9	DEFECT	3.056590309003099E-10	DOCUMENTATION	1.0663415999969831E-10	IMPLEMENTATION	6.358421022278405E-11	TEST
// the loaded owner will be set to null after the collection is removed, // so capture its value as the affected owner so it is accessible to // both pre- and post- events	WITHOUT_CLASSIFICATION	0.9999999999308101	WITHOUT_CLASSIFICATION	6.254498502385314E-11	DESIGN	4.172548824977588E-12	DEFECT	2.4322668895998864E-12	IMPLEMENTATION	3.661024633847019E-14	TEST	3.4698057389998216E-15	DOCUMENTATION
// is a primitive type // invokespecial	WITHOUT_CLASSIFICATION	0.99999957006276	WITHOUT_CLASSIFICATION	3.1386332936011414E-7	DEFECT	1.0367462242905627E-7	DESIGN	8.278789705237592E-9	TEST	3.420932323316324E-9	DOCUMENTATION	6.995659562216718E-10	IMPLEMENTATION
// array of primitive type // do nothing	WITHOUT_CLASSIFICATION	0.9999997875875165	WITHOUT_CLASSIFICATION	1.6098726597386532E-7	DEFECT	4.238000693019024E-8	DESIGN	4.520446163660086E-9	DOCUMENTATION	2.610922710582289E-9	IMPLEMENTATION	1.9138417115093065E-9	TEST
// handle a path expression or class name that // appears at the start, in the "new" HQL // style or an alias that appears at the start // in the "old" HQL style	WITHOUT_CLASSIFICATION	0.9726052354002618	WITHOUT_CLASSIFICATION	0.027253498592583664	DESIGN	1.4119760896858655E-4	DEFECT	3.961972100840591E-8	IMPLEMENTATION	1.996553595297822E-8	DOCUMENTATION	8.812929120234222E-9	TEST
//handle <=, >=, !=, is not, not between, not in	WITHOUT_CLASSIFICATION	0.999920074438702	WITHOUT_CLASSIFICATION	7.149874132598131E-5	DESIGN	7.333789464090443E-6	DEFECT	5.413325697168857E-7	TEST	3.7879265658551615E-7	IMPLEMENTATION	1.729052815938728E-7	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999999695250001	WITHOUT_CLASSIFICATION	2.990295210458753E-8	DEFECT	3.8314344744602686E-10	IMPLEMENTATION	1.2712920817674176E-10	DESIGN	4.441601631258855E-11	TEST	1.7359023102664297E-11	DOCUMENTATION
// transfer an explicitly defined entity name // handle the lazy attribute	WITHOUT_CLASSIFICATION	0.999748393358874	WITHOUT_CLASSIFICATION	2.5159749130829076E-4	DESIGN	6.9777306442751895E-9	IMPLEMENTATION	1.1524590897575195E-9	TEST	9.833891275619386E-10	DOCUMENTATION	3.623883151473401E-11	DEFECT
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999989697567977	WITHOUT_CLASSIFICATION	7.501808832344908E-7	DESIGN	2.2826978956271413E-7	IMPLEMENTATION	2.1166433863801832E-8	TEST	1.7534603006874917E-8	DOCUMENTATION	1.3091492632421377E-8	DEFECT
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999989697567977	WITHOUT_CLASSIFICATION	7.501808832344908E-7	DESIGN	2.2826978956271413E-7	IMPLEMENTATION	2.1166433863801832E-8	TEST	1.7534603006874917E-8	DOCUMENTATION	1.3091492632421377E-8	DEFECT
// get meta's from // <joined-subclass>	WITHOUT_CLASSIFICATION	0.9999998965739002	WITHOUT_CLASSIFICATION	1.0083443277786332E-7	DESIGN	2.398995541926049E-9	DEFECT	1.5655610420453922E-10	TEST	2.9017308283373935E-11	DOCUMENTATION	7.098134015809246E-12	IMPLEMENTATION
// parameters on the property mapping should // override parameters in the typedef	WITHOUT_CLASSIFICATION	0.99968227165093	WITHOUT_CLASSIFICATION	3.1333685965068077E-4	DEFECT	3.6513439837396644E-6	IMPLEMENTATION	6.216447747964639E-7	DESIGN	1.0989828721452342E-7	TEST	8.602373691652288E-9	DOCUMENTATION
//fetch="join" overrides default laziness //fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.9999999926471435	WITHOUT_CLASSIFICATION	5.342306728089257E-9	IMPLEMENTATION	7.48111038509396E-10	DESIGN	6.025089125291937E-10	DEFECT	3.574661685031035E-10	DOCUMENTATION	3.024636430445823E-10	TEST
//NOTE SPECIAL CASE: // default to join and non-lazy for the "second join" // of the many-to-many	WITHOUT_CLASSIFICATION	0.9999998799640504	WITHOUT_CLASSIFICATION	1.0116934187693613E-7	DESIGN	1.7243883804937426E-8	DOCUMENTATION	1.3509359511978572E-9	DEFECT	2.0638061394923437E-10	IMPLEMENTATION	6.540743012786312E-11	TEST
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999997880327892	WITHOUT_CLASSIFICATION	1.828608474020561E-7	DESIGN	1.489541236578895E-8	DOCUMENTATION	5.982989924017624E-9	DEFECT	4.443628778442612E-9	IMPLEMENTATION	3.784332269949424E-9	TEST
// state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999935024795341	WITHOUT_CLASSIFICATION	5.2183565992675825E-6	DESIGN	7.063487004692717E-7	IMPLEMENTATION	2.1411124420345095E-7	TEST	2.1173366993305748E-7	DEFECT	1.4697025194681084E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
//element //index -> id	WITHOUT_CLASSIFICATION	0.9999946030293525	WITHOUT_CLASSIFICATION	2.3503590369537333E-6	DEFECT	2.031227972422021E-6	DESIGN	5.840721041954782E-7	IMPLEMENTATION	2.2326446676080378E-7	DOCUMENTATION	2.0804706718910375E-7	TEST
// note that it might be better to iterate the snapshot but this is safe, // assuming the user implements equals() properly, as required by the Set // contract!	WITHOUT_CLASSIFICATION	0.862290820865669	WITHOUT_CLASSIFICATION	0.1351070916845337	DEFECT	0.0021468779147968365	DESIGN	4.315831916120856E-4	IMPLEMENTATION	2.2034589945729667E-5	TEST	1.5917534426573253E-6	DOCUMENTATION
// collections detect changes made via their public interface and mark // themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.9999915814946917	WITHOUT_CLASSIFICATION	6.862242816039328E-6	IMPLEMENTATION	1.5226076273573957E-6	DESIGN	2.0223971154420777E-8	DOCUMENTATION	1.175893346731901E-8	DEFECT	1.6719602040201213E-9	TEST
// essentially, if the real session is closed allow any // method call to pass through since the real session // will complain by throwing an appropriate exception; // NOTE that allowing close() above has the same basic effect, //   but we capture that there simply to perform the unbind...	WITHOUT_CLASSIFICATION	0.9999999975870655	WITHOUT_CLASSIFICATION	1.1779435490998127E-9	DESIGN	1.1315419956683664E-9	IMPLEMENTATION	7.505507341679278E-11	DEFECT	2.754395144804994E-11	TEST	8.498749576662716E-13	DOCUMENTATION
// The default SQLExceptionConverter for all dialects is based on SQLState // since SQLErrorCode is extremely vendor-specific.  Specific Dialects // may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.999999995443441	WITHOUT_CLASSIFICATION	3.4406384180995937E-9	DESIGN	9.425579269945368E-10	IMPLEMENTATION	1.6308745873510395E-10	DEFECT	7.910162077840411E-12	DOCUMENTATION	2.3651585605056938E-12	TEST
//only necessary for postgre < 7.4 //http://anoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.9999996043577016	WITHOUT_CLASSIFICATION	2.2528481738982991E-7	DESIGN	8.610852187514259E-8	DEFECT	6.256529896086667E-8	DOCUMENTATION	1.096447902916353E-8	TEST	1.0719181227880667E-8	IMPLEMENTATION
// select topic, syntax from information_schema.help // where section like 'Function%' order by section, topic // // see also ->  http://www.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.9999999972102921	WITHOUT_CLASSIFICATION	1.5940147378120998E-9	DEFECT	9.373056707990797E-10	DESIGN	2.0315557605572303E-10	DOCUMENTATION	4.8055980407358424E-11	IMPLEMENTATION	7.175991197986624E-12	TEST
// registerColumnType(Types.VARBINARY, "CHARACTER($l)"); // registerColumnType(Types.BLOB, "CHARACTER($l)" );  // For use prior to CP 11.0 // registerColumnType(Types.CLOB, "CHARACTER($l)" );	WITHOUT_CLASSIFICATION	0.9999996280213509	WITHOUT_CLASSIFICATION	2.28857209073616E-7	IMPLEMENTATION	1.216502043616745E-7	DESIGN	1.1623510999531857E-8	TEST	8.065696814444248E-9	DEFECT	1.782027898598063E-9	DOCUMENTATION
//the BLOB type requires a size arguement - this defaults to //bytes - no arg defaults to 1 whole byte! //other argument mods include K - kilobyte, M - megabyte, G - gigabyte. //refer to the PBdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.9995145446355769	DESIGN	4.6327014447999616E-4	WITHOUT_CLASSIFICATION	2.1616662631320922E-5	DEFECT	4.734930749854339E-7	DOCUMENTATION	8.631457071371649E-8	TEST	8.749666201130246E-9	IMPLEMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999040913818544	WITHOUT_CLASSIFICATION	9.221861919902725E-5	DESIGN	3.6704133718757054E-6	DEFECT	1.0160302158996798E-8	TEST	6.333861820077936E-9	IMPLEMENTATION	3.09141078726207E-9	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.7500934450819811	DESIGN	0.24988769757856016	WITHOUT_CLASSIFICATION	1.8156736938036504E-5	DEFECT	3.7422738760022484E-7	IMPLEMENTATION	3.18073049736433E-7	TEST	8.302083585184667E-9	DOCUMENTATION
// add the comment // nest the main query in an outer select // add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9999398351543264	WITHOUT_CLASSIFICATION	5.896328310680808E-5	DESIGN	1.0593662164511336E-6	TEST	1.1898175634723315E-7	DOCUMENTATION	1.3805451762912858E-8	DEFECT	9.40914232986465E-9	IMPLEMENTATION
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// Note: For object <-> SQL datatype mappings see: //	WITHOUT_CLASSIFICATION	0.9999716854727442	WITHOUT_CLASSIFICATION	1.6146436857880238E-5	DESIGN	1.1958613142733239E-5	DEFECT	1.5366943537571874E-7	IMPLEMENTATION	3.70288614819249E-8	TEST	1.8778958259702173E-8	DOCUMENTATION
// TRIM(end_keyword string-expression-1 FROM string-expression-2) // use Hibernate implementation "From" is one of the parameters they pass in position ?3 //registerFunction( "trim", new SQLFunctionTemplate(Hibernate.STRING, "trim(?1 ?2 from ?3)") );	WITHOUT_CLASSIFICATION	0.9999999946365878	WITHOUT_CLASSIFICATION	3.5989557631956575E-9	DESIGN	1.6229851519058805E-9	IMPLEMENTATION	1.4024647887597502E-10	DEFECT	9.62116883844809E-13	TEST	2.626829394987419E-13	DOCUMENTATION
// Whether this dialect has an Identity clause added to the data type or a completely seperate identity // data type	WITHOUT_CLASSIFICATION	0.9999980915579333	WITHOUT_CLASSIFICATION	1.9049425359744299E-6	DESIGN	3.400340527045375E-9	DEFECT	4.2356148346997855E-11	DOCUMENTATION	3.386653269592352E-11	IMPLEMENTATION	2.2967489605172478E-11	TEST
// According to both the ANSI-SQL and JPA specs, trim takes a variable number of parameters between 1 and 4. // at least one paramer (trimSource) is required.  From the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If <trim specification> is omitted, BOTH is assumed. // If <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999999977096603	WITHOUT_CLASSIFICATION	2.150424328712093E-9	DEFECT	1.0769919285235424E-10	DESIGN	1.5237689924252682E-11	TEST	1.4091193805644872E-11	DOCUMENTATION	2.8874165761927265E-12	IMPLEMENTATION
/////////////////////////////////////////////////////////////////////// // Prepare persisters and link them up with their cache // region/access-strategy	WITHOUT_CLASSIFICATION	0.99960885386847	WITHOUT_CLASSIFICATION	3.911018073549845E-4	DESIGN	2.1828801917010018E-8	DEFECT	1.559768920960675E-8	TEST	4.027437334676839E-9	DOCUMENTATION	2.870246465970746E-9	IMPLEMENTATION
//Named Queries:	WITHOUT_CLASSIFICATION	0.9997931277124434	WITHOUT_CLASSIFICATION	1.951601212771441E-4	DESIGN	7.066703598862964E-6	IMPLEMENTATION	3.6531696997899682E-6	TEST	6.59403905283483E-7	DEFECT	3.3288907542252337E-7	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9859354577420445	WITHOUT_CLASSIFICATION	0.013475075849326435	DESIGN	4.7469434195211436E-4	DEFECT	9.059499322145698E-5	TEST	2.2449051206839575E-5	IMPLEMENTATION	1.728022248709314E-6	DOCUMENTATION
// does not handle arrays (thats ok, cos they can't be lazy) // or newly instantiated collections, so we can do the cast	WITHOUT_CLASSIFICATION	0.9915956708383703	WITHOUT_CLASSIFICATION	0.00802026875875117	DEFECT	3.8319533592466164E-4	DESIGN	3.5292163125134125E-7	TEST	2.624062101455878E-7	DOCUMENTATION	2.49739112445057E-7	IMPLEMENTATION
// collection deletions are a special case since update() can add // deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.999990624691959	WITHOUT_CLASSIFICATION	6.512741252407002E-6	DEFECT	2.861679709360471E-6	IMPLEMENTATION	5.152472755472538E-10	DOCUMENTATION	2.6607337421339547E-10	TEST	1.0575864658913226E-10	DESIGN
// we can do the cast since orphan-delete does not apply to: // 1. newly instantiated collections // 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.9972645380154761	WITHOUT_CLASSIFICATION	0.0025102033785374765	DEFECT	1.1862599732809505E-4	DESIGN	1.0557964142244786E-4	IMPLEMENTATION	7.342927105031822E-7	DOCUMENTATION	3.1867452526199035E-7	TEST
// if the natural-id is marked as non-mutable, it is not retrieved during a // normal database-snapshot operation...	WITHOUT_CLASSIFICATION	0.9998258718850555	WITHOUT_CLASSIFICATION	1.7341188165258462E-4	IMPLEMENTATION	4.3038694821908933E-7	DEFECT	1.5454630091852755E-7	DESIGN	1.3113849842369514E-7	TEST	1.615443031254639E-10	DOCUMENTATION
// watch out for a case where old is still referenced // somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9984360427676803	WITHOUT_CLASSIFICATION	0.001562299186661729	DESIGN	1.202543935958286E-6	DEFECT	2.1154830486841616E-7	IMPLEMENTATION	2.0839409129019594E-7	DOCUMENTATION	3.555932585447934E-8	TEST
//slice, to get the columns for this component //property	WITHOUT_CLASSIFICATION	0.9983375138188797	WITHOUT_CLASSIFICATION	0.001662360833987566	DESIGN	7.771860444312925E-8	TEST	2.5480613172151635E-8	DOCUMENTATION	2.0765196961922164E-8	DEFECT	1.3827180968191443E-9	IMPLEMENTATION
//int result = 17; //result = 37 * result + type.hashCode(); //result = 37 * result + ( value==null ? 0 : value.hashCode() ); //return result;	WITHOUT_CLASSIFICATION	0.9999969260211056	WITHOUT_CLASSIFICATION	3.0702712544584093E-6	DEFECT	2.6399363021117887E-9	DESIGN	7.739219076270783E-10	IMPLEMENTATION	1.850750294551336E-10	DOCUMENTATION	1.0870661341651229E-10	TEST
// The CollectionEntry.isReached() stuff is just to detect any silly users   // who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.9999971878940953	WITHOUT_CLASSIFICATION	2.8100910503840603E-6	DESIGN	1.8032479048186545E-9	DEFECT	1.421497123025334E-10	IMPLEMENTATION	5.5451690586634564E-11	DOCUMENTATION	1.4005036977558559E-11	TEST
// detached collection wrappers that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9998920364661444	WITHOUT_CLASSIFICATION	1.0715239722464998E-4	DESIGN	7.46863147683474E-7	DEFECT	6.23024504605606E-8	IMPLEMENTATION	1.2677417856257708E-9	TEST	7.032908489893171E-10	DOCUMENTATION
// The unique property value represented here may or may not be // serializable, so we do an explicit check here in order to generate // a better error message	WITHOUT_CLASSIFICATION	0.7370248635805395	WITHOUT_CLASSIFICATION	0.2613184297496868	DESIGN	0.001644286287458007	DEFECT	5.028821118157619E-6	DOCUMENTATION	4.641222405633815E-6	TEST	2.750338791822393E-6	IMPLEMENTATION
// if the version of a newly instantiated object is not the same // as the version seed value, use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.9996452757515834	WITHOUT_CLASSIFICATION	3.5328135046619377E-4	DESIGN	1.4032865990184655E-6	DEFECT	3.073986874677528E-8	IMPLEMENTATION	4.861322343083708E-9	DOCUMENTATION	4.010160378939495E-9	TEST
// ie. we never have to null out a reference to // an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999820097791446	WITHOUT_CLASSIFICATION	1.7988265777660406E-5	DESIGN	7.294072573563909E-10	DEFECT	7.171714917875842E-10	DOCUMENTATION	2.815542489714934E-10	IMPLEMENTATION	2.2694453186364887E-10	TEST
// ignore this row, the collection is in process of // being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.9999993479459708	WITHOUT_CLASSIFICATION	5.955592416417112E-7	DESIGN	5.4000330775937746E-8	DEFECT	1.9761664324819565E-9	TEST	3.9576607371571107E-10	DOCUMENTATION	1.2252418518599904E-10	IMPLEMENTATION
// Entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // 	WITHOUT_CLASSIFICATION	0.9999939010714556	WITHOUT_CLASSIFICATION	4.935704290808144E-6	DEFECT	1.0143758905464194E-6	DESIGN	1.1080476617013822E-7	TEST	2.8453605382967403E-8	DOCUMENTATION	9.589991542980097E-9	IMPLEMENTATION
// should be ok performance-wise to generate new delegate instances for each // request since these are locally stack-scoped.  Besides, it makes the code // much easier to read than the old TransactionHelper stuff...	WITHOUT_CLASSIFICATION	0.9895940379674775	WITHOUT_CLASSIFICATION	0.01040583417508651	DESIGN	1.1781623304258072E-7	DEFECT	6.788449536209867E-9	TEST	2.704512192498821E-9	DOCUMENTATION	5.482411503073114E-10	IMPLEMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9998143745881495	WITHOUT_CLASSIFICATION	1.1124560507683329E-4	DEFECT	3.87485701066129E-5	IMPLEMENTATION	3.458885757965287E-5	DESIGN	7.290365562762363E-7	TEST	3.133425312026087E-7	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9998143745881495	WITHOUT_CLASSIFICATION	1.1124560507683329E-4	DEFECT	3.87485701066129E-5	IMPLEMENTATION	3.458885757965287E-5	DESIGN	7.290365562762363E-7	TEST	3.133425312026087E-7	DOCUMENTATION
// wrap up any new collections directly referenced by the object // or its components	WITHOUT_CLASSIFICATION	0.9999998900525938	WITHOUT_CLASSIFICATION	1.0962056343897538E-7	DESIGN	1.723743930934614E-10	IMPLEMENTATION	1.1305308803363271E-10	DEFECT	2.5869645340896458E-11	TEST	1.55456264472512E-11	DOCUMENTATION
// remove any snapshot, not really for memory management purposes, but // rather because it might now be stale, and there is no longer any  // EntityEntry to take precedence // This is now handled by removeEntity() //session.getPersistenceContext().removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.999534192935198	WITHOUT_CLASSIFICATION	2.834128440312956E-4	DESIGN	1.8237816289548757E-4	DEFECT	1.3919126058596933E-8	DOCUMENTATION	1.89410577615246E-9	TEST	2.4464344293222356E-10	IMPLEMENTATION
// skip this check for composite-ids relating to dom4j entity-mode; // alternatively, we could add a check to make sure the incoming id value is // an instance of Element...	WITHOUT_CLASSIFICATION	0.9476323789347033	WITHOUT_CLASSIFICATION	0.05227864932466999	DESIGN	7.282738532647683E-5	DEFECT	1.5540901258280852E-5	IMPLEMENTATION	5.596117152829156E-7	DOCUMENTATION	4.3842326660574434E-8	TEST
// upgrade the lock if necessary: //lock(result, lockMode);	WITHOUT_CLASSIFICATION	0.997492288532015	WITHOUT_CLASSIFICATION	0.0019073062588976226	DEFECT	5.253179164331264E-4	DESIGN	7.216771033335088E-5	IMPLEMENTATION	1.7313618521914588E-6	TEST	1.1882204688168204E-6	DOCUMENTATION
// now, any collections that are initialized // inside this block do not get updated - they // are ignored until the next flush	WITHOUT_CLASSIFICATION	0.9999793481405602	WITHOUT_CLASSIFICATION	1.917239498267562E-5	IMPLEMENTATION	1.1916033815825768E-6	DESIGN	2.7219204824737165E-7	DEFECT	1.2266109790673948E-8	TEST	3.4029175091488414E-9	DOCUMENTATION
//we must clone embedded composite identifiers, or  //we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.9999953059406284	WITHOUT_CLASSIFICATION	4.683571350222289E-6	DESIGN	8.333413649036845E-9	DEFECT	2.010150211375111E-9	IMPLEMENTATION	9.031308824868734E-11	DOCUMENTATION	5.41444549673954E-11	TEST
// Sub-insertions should occur before containing insertion so // Try to do the callback now	WITHOUT_CLASSIFICATION	0.9999885106137117	WITHOUT_CLASSIFICATION	5.686958744248581E-6	DEFECT	3.0997560018605778E-6	DESIGN	2.587428851676123E-6	IMPLEMENTATION	1.0903073462940567E-7	DOCUMENTATION	6.211955792358556E-9	TEST
//the entity is not associated with the session, so //try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.9999581260869522	WITHOUT_CLASSIFICATION	4.1822694430547225E-5	DESIGN	2.4145419822080346E-8	DEFECT	2.0370770622075754E-8	TEST	5.8317943951769765E-9	DOCUMENTATION	8.706323040849031E-10	IMPLEMENTATION
//scan the query string for class names appearing in the from clause and replace //with all persistent implementors of the class/interface, returning multiple //query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.9372495198142802	DESIGN	0.05256052009010628	WITHOUT_CLASSIFICATION	0.009896342287627763	DEFECT	2.929039302405401E-4	IMPLEMENTATION	4.3572952416755203E-7	DOCUMENTATION	2.781482209578313E-7	TEST
// save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997315418437	WITHOUT_CLASSIFICATION	1.0437916165603266E-7	DESIGN	1.0174168018282825E-7	DEFECT	4.6496623685984586E-8	IMPLEMENTATION	9.353633154763447E-9	TEST	6.487057653163098E-9	DOCUMENTATION
// evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999082405319	WITHOUT_CLASSIFICATION	4.556579265844035E-8	DESIGN	2.4453737772878515E-8	DEFECT	1.6901414634903578E-8	IMPLEMENTATION	2.8909239088056964E-9	TEST	1.9475992314624763E-9	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9945000889252182	WITHOUT_CLASSIFICATION	0.005455990105260641	DESIGN	3.9182193151014916E-5	DEFECT	4.235240467599093E-6	TEST	4.4441716804616446E-7	IMPLEMENTATION	5.9118734273888404E-8	DOCUMENTATION
//if it is an uninitialized proxy, pointing //with this session, then when it is accessed, //the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.9999947345069692	WITHOUT_CLASSIFICATION	3.2123351829843722E-6	DESIGN	1.0527917356901204E-6	DEFECT	6.841593448934878E-7	IMPLEMENTATION	2.1891599530792245E-7	TEST	9.729077197692954E-8	DOCUMENTATION
// Generate an explicit join for the root dot node.   The implied joins will be collected and passed up // to the root dot node.	WITHOUT_CLASSIFICATION	0.999999998861734	WITHOUT_CLASSIFICATION	1.0772612140796007E-9	DESIGN	3.6944346872416515E-11	TEST	1.7833640997697378E-11	DEFECT	4.410499683790478E-12	IMPLEMENTATION	1.816534155205452E-12	DOCUMENTATION
// A session is considered to contain an entity only if the entity has // an entry in the session's persistence context and the entry reports // that the entity has not been removed	WITHOUT_CLASSIFICATION	0.9996352006552297	WITHOUT_CLASSIFICATION	3.647678684322986E-4	DESIGN	1.9584369241375396E-8	IMPLEMENTATION	1.0861637805003143E-8	DEFECT	6.875841475600117E-10	DOCUMENTATION	3.427466398311661E-10	TEST
// Does the collection referenced by this FromElement // specify an order-by attribute?  If so, attach it to // the query's order-by	WITHOUT_CLASSIFICATION	0.999699439670028	WITHOUT_CLASSIFICATION	2.979034521627078E-4	DESIGN	1.6030951682917308E-6	IMPLEMENTATION	8.295506978461058E-7	DOCUMENTATION	1.1926285013328073E-7	TEST	1.0496909311940924E-7	DEFECT
// ... and the token could be an identifer and the error is // a mismatched token error ...	WITHOUT_CLASSIFICATION	0.9872868338178805	WITHOUT_CLASSIFICATION	0.01232500643877541	DESIGN	3.8745944581820564E-4	DEFECT	3.839436004076362E-7	IMPLEMENTATION	1.717311433723955E-7	DOCUMENTATION	1.446227820592166E-7	TEST
// If a where clause was specified in the update/delete query, use it to limit the // returned ids here...	WITHOUT_CLASSIFICATION	0.9999999103641873	WITHOUT_CLASSIFICATION	5.138558373490468E-8	DESIGN	3.0907721151312856E-8	DEFECT	7.008388149787836E-9	IMPLEMENTATION	3.101645309711664E-10	DOCUMENTATION	2.39552023436002E-11	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// Default implementation: // If this node has a data type, and that data type is not an association, then this is scalar.	WITHOUT_CLASSIFICATION	0.9999925577446253	WITHOUT_CLASSIFICATION	5.51840064750858E-6	DEFECT	1.1422126134718774E-6	DESIGN	7.050296842585657E-7	IMPLEMENTATION	5.7051600060008637E-8	TEST	1.9560829523379657E-8	DOCUMENTATION
// Resolve the LHS fully, generate implicit joins.  Pass in the property name so that the resolver can // discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.9999959817644044	WITHOUT_CLASSIFICATION	2.6816265797419228E-6	DESIGN	1.3274756858108873E-6	DEFECT	7.478251646706141E-9	TEST	1.5309537604764961E-9	DOCUMENTATION	1.241245990315633E-10	IMPLEMENTATION
// If the propertyType is null and there isn't a parent, just // stop now... there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.8165193170933844	WITHOUT_CLASSIFICATION	0.10116724545872473	DEFECT	0.0823058717217373	DESIGN	3.496652559241968E-6	DOCUMENTATION	2.3689627351005014E-6	TEST	1.7001108592828967E-6	IMPLEMENTATION
//We do not look for an existing join on the same path, because //it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.9999682805057042	WITHOUT_CLASSIFICATION	2.981593697230755E-5	DESIGN	1.2921920591808762E-6	IMPLEMENTATION	5.914128987577948E-7	DEFECT	1.0746519279718038E-8	TEST	9.205846136645051E-9	DOCUMENTATION
// our parent is another dot node, meaning we are being further dereferenced. // thus we need to generate a join unless the parent refers to the associated // entity's PK (because 'our' table would know the FK).	WITHOUT_CLASSIFICATION	0.990211746846773	WITHOUT_CLASSIFICATION	0.009655792983377131	DESIGN	1.2767576816144393E-4	IMPLEMENTATION	2.8594280993831495E-6	TEST	1.9221144523330602E-6	DOCUMENTATION	2.8591365907969277E-9	DEFECT
/*public final Currency getCurrency(int col) throws HibernateException {	WITHOUT_CLASSIFICATION	0.996078099233378	WITHOUT_CLASSIFICATION	0.003904739131500922	DESIGN	1.4488091431394822E-5	DEFECT	1.6734526005118162E-6	DOCUMENTATION	6.242966929707346E-7	IMPLEMENTATION	3.7579439633817125E-7	TEST
// here, we have two possibilities: // 	WITHOUT_CLASSIFICATION	0.996500844445939	WITHOUT_CLASSIFICATION	0.0030701344405594153	DESIGN	2.729564333874167E-4	IMPLEMENTATION	1.0846203151320718E-4	DEFECT	4.5929570782992086E-5	TEST	1.6730778180444092E-6	DOCUMENTATION
// Set the unresolved path in this node and the parent. // Set the text for the parent.	WITHOUT_CLASSIFICATION	0.9990480553140982	WITHOUT_CLASSIFICATION	4.75470446934275E-4	DESIGN	3.506487000284945E-4	IMPLEMENTATION	1.0484630639413658E-4	DEFECT	1.6680042938455247E-5	TEST	4.2991896063914275E-6	DOCUMENTATION
// Get the first child to be considered.  Sub-classes may do this differently in order to skip nodes that // are not select expressions (e.g. DISTINCT).	WITHOUT_CLASSIFICATION	0.99999965823475	WITHOUT_CLASSIFICATION	2.0985086107072547E-7	DESIGN	1.1932352882311263E-7	IMPLEMENTATION	1.084102706438911E-8	DEFECT	1.7253824314539684E-9	DOCUMENTATION	2.445056440965777E-11	TEST
// If this is an entity and the property is the identifier property, then use getIdentifierType(). //      Note that the propertyName.equals( propertyPath ) checks whether we have a component //      key reference, where the component class property name is the same as the //      entity id property name; if the two are not equal, this is the case and //      we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.9999999991064679	WITHOUT_CLASSIFICATION	6.048061282921632E-10	DESIGN	2.708014438706904E-10	DEFECT	1.3243567198745363E-11	DOCUMENTATION	3.2456230969423424E-12	TEST	1.435517442422101E-12	IMPLEMENTATION
// for a subquery, the alias to use depends on a few things (we // already know this is not an overall SELECT): //      1) if this FROM_ELEMENT represents a correlation to the //          outer-most query //              A) if the outer query represents a multi-table //                  persister, we need to use the given alias //                  in anticipation of one of the multi-table //                  executors being used (as this subquery will //                  actually be used in the "id select" phase //                  of that multi-table executor) //              B) otherwise, we need to use the persister's //                  table name as the column qualification //      2) otherwise (not correlated), use the given alias	WITHOUT_CLASSIFICATION	0.9995041800027118	WITHOUT_CLASSIFICATION	4.93301659312989E-4	DESIGN	1.5416752898633176E-6	IMPLEMENTATION	9.7074225174356E-7	DEFECT	5.641820644386928E-9	DOCUMENTATION	2.7861295037513483E-10	TEST
// Not a collection? // Return the entity property mapping.	WITHOUT_CLASSIFICATION	0.9997187466239825	WITHOUT_CLASSIFICATION	2.441493545140921E-4	DESIGN	3.331761864272393E-5	DEFECT	3.716531934592625E-6	IMPLEMENTATION	5.548501220985168E-8	TEST	1.4385914098540013E-8	DOCUMENTATION
// collection of <many-to-any/> mappings... // used to circumvent the component-collection check below...	WITHOUT_CLASSIFICATION	0.9960985369580526	WITHOUT_CLASSIFICATION	0.003051294878646637	IMPLEMENTATION	8.418600801457588E-4	DESIGN	6.3929333072848166E-6	DEFECT	1.662040207125753E-6	DOCUMENTATION	2.5310964042365564E-7	TEST
// Otherwise, the destination node was implied by the FROM clause and the FROM clause processor // will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.9980337829414944	WITHOUT_CLASSIFICATION	0.0018974302721126918	DESIGN	4.283632088502799E-5	DEFECT	2.3275856442930694E-5	IMPLEMENTATION	2.5712375452542655E-6	DOCUMENTATION	1.0337151964154005E-7	TEST
// If the first identifier in the path referrs to the class alias (not the class name), then this // is a correlated subselect.  If it's a correlated sub-select, use the existing table alias.  Otherwise // generate a new one.	WITHOUT_CLASSIFICATION	0.9998391730766972	WITHOUT_CLASSIFICATION	1.6079277930593753E-4	DESIGN	1.827619367950843E-8	IMPLEMENTATION	1.4853895780777555E-8	DEFECT	9.991786383089426E-10	TEST	1.47287538030426E-11	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.999999192334848	WITHOUT_CLASSIFICATION	8.043721953642298E-7	DESIGN	3.1969603239013885E-9	DEFECT	5.157965426553142E-11	DOCUMENTATION	3.2911491077968675E-11	IMPLEMENTATION	1.1505124608467316E-11	TEST
// An ident node can represent an index expression if the ident // represents a naked property ref //      *Note: this makes the assumption (which is currently the case //      in the hql-sql grammar) that the ident is first resolved //      itself (addrExpr -> resolve()).  The other option, if that //      changes, is to call resolve from here; but it is //      currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.9999995716744443	WITHOUT_CLASSIFICATION	4.2770312376286746E-7	DESIGN	2.703065115415479E-10	TEST	2.005869374861161E-10	DEFECT	1.2408149008414386E-10	IMPLEMENTATION	2.7456923580765982E-11	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999977303646874	WITHOUT_CLASSIFICATION	1.9630052216023093E-6	DESIGN	2.782628675576899E-7	IMPLEMENTATION	2.8259568921677684E-8	DEFECT	7.179706982558805E-11	TEST	3.5857438480025014E-11	DOCUMENTATION
// If this is an implied join in a FROM clause, then use ANSI-style joining, and set the // flag on the FromElement that indicates that it was implied in the FROM clause itself.	WITHOUT_CLASSIFICATION	0.9999972961524092	WITHOUT_CLASSIFICATION	2.5936775784161075E-6	DESIGN	8.086696752525378E-8	TEST	2.1737462923097578E-8	DEFECT	5.853399834819654E-9	IMPLEMENTATION	1.7121821468795021E-9	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// For an explicit many-to-many relationship, add a second join from the intermediate  // (many-to-many) table to the destination table.  Also, make sure that the from element's  // idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.9999999983237081	WITHOUT_CLASSIFICATION	1.591128491633886E-9	DESIGN	6.242485106896323E-11	DEFECT	1.149106895270469E-11	DOCUMENTATION	1.1145209711730603E-11	TEST	1.0215644289894627E-13	IMPLEMENTATION
// Reset the node type, because the rest of the system is expecting FROM_FRAGMENT, all we wanted was // for the factory to create the right sub-class.  This might get reset again later on anyway to make the // SQL generation simpler.	WITHOUT_CLASSIFICATION	0.9992765321596704	WITHOUT_CLASSIFICATION	6.650540068315724E-4	DESIGN	3.5853197010933416E-5	DEFECT	1.6239281957319903E-5	IMPLEMENTATION	6.008214103277131E-6	TEST	3.131404264851989E-7	DOCUMENTATION
//explicit = true;	WITHOUT_CLASSIFICATION	0.9998054953165215	WITHOUT_CLASSIFICATION	1.8667758941179075E-4	DESIGN	6.831047074475077E-6	DEFECT	4.0576236249018945E-7	TEST	3.002429629239663E-7	IMPLEMENTATION	2.9004166696473053E-7	DOCUMENTATION
//sqlResultTypeList.add( type ); // Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999993610515151	WITHOUT_CLASSIFICATION	5.190532936561082E-7	DEFECT	6.169891115736592E-8	IMPLEMENTATION	4.927295214281803E-8	DESIGN	8.446327971381217E-9	TEST	4.770001635043057E-10	DOCUMENTATION
// If the expression list has exactly one expression, and the type of the expression is a collection // then this might be a collection function, such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.9979819746186552	WITHOUT_CLASSIFICATION	0.0015816451043515823	DEFECT	4.3633598906878904E-4	DESIGN	2.132497960691627E-8	DOCUMENTATION	1.8050033700767887E-8	IMPLEMENTATION	4.912911063231981E-9	TEST
// Need to parse off the column qualifiers; this is assuming (which is true as of now) // that this is only used from update and delete HQL statement parsing	WITHOUT_CLASSIFICATION	0.9999997335280009	WITHOUT_CLASSIFICATION	2.455701067415721E-7	IMPLEMENTATION	1.4832540421263101E-8	DESIGN	5.4560732138497625E-9	DEFECT	4.631440214523731E-10	TEST	1.501347590810588E-10	DOCUMENTATION
// for regression testing against output from the old parser... // found it easiest to simply reorder the FromElements here into ascending order // in terms of injecting them into the resulting sql ast in orders relative to those // expected by the old parser; this is definitely another of those "only needed // for regression purposes".  The SyntheticAndFactory, then, simply injects them as it // encounters them.	WITHOUT_CLASSIFICATION	0.999999964979238	WITHOUT_CLASSIFICATION	2.3411888425155273E-8	DEFECT	1.0946297876221868E-8	TEST	6.177070986069289E-10	DESIGN	4.476565093546314E-11	DOCUMENTATION	1.0294392851070639E-13	IMPLEMENTATION
// The uber-rule here is that we need to include  subclass joins if // the FromElement is in any way dereferenced by a property from // the subclass table; otherwise we end up with column references // qualified by a non-existent table reference in the resulting SQL...	WITHOUT_CLASSIFICATION	0.9996482822641533	WITHOUT_CLASSIFICATION	3.514937134783279E-4	DESIGN	2.0679693106202657E-7	DEFECT	1.1703128436491953E-8	IMPLEMENTATION	4.3417479867195996E-9	DOCUMENTATION	1.1805609040682837E-9	TEST
// classic translator does not support collection of ordinal // param metadata	WITHOUT_CLASSIFICATION	0.9998197398826031	WITHOUT_CLASSIFICATION	1.1855857659844538E-4	DESIGN	6.12076096475589E-5	DEFECT	4.532224700238934E-7	IMPLEMENTATION	2.8612305763038784E-8	TEST	1.2096375265999888E-8	DOCUMENTATION
// The following variables are stacks that keep information about each subexpression // in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.9999277765374526	WITHOUT_CLASSIFICATION	7.12351734023158E-5	DESIGN	9.497519693904204E-7	DEFECT	2.3096175571588848E-8	DOCUMENTATION	1.0006897524019702E-8	IMPLEMENTATION	5.434102618905276E-9	TEST
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999999695250001	WITHOUT_CLASSIFICATION	2.990295210458753E-8	DEFECT	3.8314344744602686E-10	IMPLEMENTATION	1.2712920817674176E-10	DESIGN	4.441601631258855E-11	TEST	1.7359023102664297E-11	DOCUMENTATION
// should not be able to reach last without maxPosition being set // unless there are no results	WITHOUT_CLASSIFICATION	0.999999998124225	WITHOUT_CLASSIFICATION	1.6014689823580463E-9	DESIGN	1.4277156816226434E-10	DEFECT	1.260879753131234E-10	TEST	4.953835368166276E-12	IMPLEMENTATION	4.925761244182209E-13	DOCUMENTATION
// we found it in the temp PC.  Should indicate we are in the midst of processing a result set // containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.999999997638449	WITHOUT_CLASSIFICATION	2.35225113942654E-9	DESIGN	6.391939428995145E-12	TEST	1.8046534702926658E-12	DEFECT	9.495264192473365E-13	DOCUMENTATION	1.53685696885023E-13	IMPLEMENTATION
//do not use proxiesByKey, since not all //proxies that point to this session's //instances are in that collection!	WITHOUT_CLASSIFICATION	0.999670029183251	WITHOUT_CLASSIFICATION	3.1984424222234717E-4	DESIGN	5.726056585890051E-6	IMPLEMENTATION	4.138888873802249E-6	DEFECT	2.6013474286067334E-7	DOCUMENTATION	1.49432404417099E-9	TEST
// if there is no TM configured, we will not be able to access // the javax.transaction.Transaction object in order to // register a synch anyway.	WITHOUT_CLASSIFICATION	0.7034733147650346	WITHOUT_CLASSIFICATION	0.29631940084497843	DESIGN	2.0266308645589359E-4	IMPLEMENTATION	3.714735246235423E-6	DOCUMENTATION	7.146069851396441E-7	TEST	1.9196129971933403E-7	DEFECT
// Since the result set cursor is always left at the first // physical row after the "last processed", we need to jump // back one position to get the key value we are interested // in skipping	WITHOUT_CLASSIFICATION	0.9999999849235087	WITHOUT_CLASSIFICATION	9.279341830226213E-9	DESIGN	2.918839727627371E-9	DOCUMENTATION	2.636905262417708E-9	DEFECT	1.3615829268383145E-10	TEST	1.0524618616197523E-10	IMPLEMENTATION
//true if this is a query and we are loading multiple instances of the same collection role //otherwise this is a CollectionInitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.9964091843469147	WITHOUT_CLASSIFICATION	0.0035364567794551973	DEFECT	5.1688800580526755E-5	DESIGN	2.5780358771344963E-6	IMPLEMENTATION	5.0595180996774544E-8	DOCUMENTATION	4.144199129319208E-8	TEST
// we don't need to worry about existing version being uninitialized // because this block isn't called by a re-entrant load (re-entrant // loads _always_ have lock mode NONE)	WITHOUT_CLASSIFICATION	0.9985059123403608	WITHOUT_CLASSIFICATION	0.0014678921148300452	IMPLEMENTATION	2.1229058026451038E-5	DESIGN	4.80661484298801E-6	DEFECT	8.359722305998403E-8	TEST	7.627471663711529E-8	DOCUMENTATION
// add temp entry so that the next step is circular-reference // safe - only needed because some types don't take proper // advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.9999981217852609	WITHOUT_CLASSIFICATION	1.7827576049724424E-6	DEFECT	6.599675521185222E-8	DOCUMENTATION	2.545800848761886E-8	TEST	3.455746408334556E-9	DESIGN	5.466239463986528E-10	IMPLEMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999998756460717	WITHOUT_CLASSIFICATION	1.1855342301975131E-7	DESIGN	2.62954287226616E-9	DOCUMENTATION	1.8971080201806498E-9	DEFECT	1.2719084653690186E-9	TEST	1.94602431859918E-12	IMPLEMENTATION
// log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.9999296666779931	WITHOUT_CLASSIFICATION	3.732345494360443E-5	DEFECT	3.240152549334729E-5	IMPLEMENTATION	4.0336201356797337E-7	DESIGN	1.3515170211792877E-7	TEST	6.982785430196281E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// this has been shown to happen occasionally in rare cases // when using a transaction manager + transaction-timeout // where the timeout calls back through Hibernate's // registered transaction synchronization on a separate // "reaping" thread.  In cases where that reaping thread // executes through this block at the same time the main // application thread does we can get into situations where // these CMEs occur.  And though it is not "allowed" per-se, // the end result without handling it specifically is infinite // looping.  So here, we simply break the loop	WITHOUT_CLASSIFICATION	0.9999999633555378	WITHOUT_CLASSIFICATION	3.5582561405020296E-8	DESIGN	1.0260782978523535E-9	DEFECT	2.5541022515551314E-11	DOCUMENTATION	1.0157658574009973E-11	IMPLEMENTATION	1.2367142127719336E-13	TEST
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9897832689335215	WITHOUT_CLASSIFICATION	0.010212178849888811	DESIGN	3.834697407109697E-6	DEFECT	6.025141965399133E-7	DOCUMENTATION	6.044963655094263E-8	IMPLEMENTATION	5.4555349442412346E-8	TEST
// can't cache this stuff either (per-invocation) // we are given a map of user-alias -> lock mode // create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.999999735147261	WITHOUT_CLASSIFICATION	1.4268828798034704E-7	DESIGN	1.20835526570247E-7	DEFECT	1.2528152918187858E-9	DOCUMENTATION	7.53140333026413E-11	TEST	7.949993159887005E-13	IMPLEMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns //getCollectionTable().createUniqueKey( getIdentifier().getConstraintColumns() );	WITHOUT_CLASSIFICATION	0.9999703657603504	WITHOUT_CLASSIFICATION	2.206863939437213E-5	DESIGN	7.3872444936619636E-6	DEFECT	1.1967928147143915E-7	TEST	5.108031864872481E-8	IMPLEMENTATION	7.596161623520066E-9	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999575272821	WITHOUT_CLASSIFICATION	4.097744916360012E-7	DESIGN	6.4495561427550044E-9	IMPLEMENTATION	4.41447376895735E-9	TEST	2.9434855579658407E-9	DEFECT	1.1451719039147343E-9	DOCUMENTATION
//isSet = collection.isSet(); //isSorted = collection.isSorted();	WITHOUT_CLASSIFICATION	0.9999967639511259	WITHOUT_CLASSIFICATION	2.923120037986728E-6	IMPLEMENTATION	1.916892555228231E-7	DEFECT	7.701436287482102E-8	TEST	3.298777286046901E-8	DESIGN	1.1237444912384443E-8	DOCUMENTATION
//lists, arrays //sets, maps, bags	WITHOUT_CLASSIFICATION	0.9999992697791347	WITHOUT_CLASSIFICATION	4.865546058795647E-7	DEFECT	1.0834931438119765E-7	IMPLEMENTATION	7.494617845821393E-8	TEST	5.667866925654426E-8	DESIGN	3.692097316368579E-9	DOCUMENTATION
// we finish all the "removes" first to take care of possible unique // constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.9999998620875562	WITHOUT_CLASSIFICATION	1.3115191083370875E-7	DESIGN	4.2996682159526965E-9	IMPLEMENTATION	1.3718971180652098E-9	DEFECT	1.060734709353197E-9	TEST	2.8233025741985214E-11	DOCUMENTATION
//use a combination of foreign key columns and pk columns, since //the ordering of removal and addition is not guaranteed when //a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.9997886559980476	WITHOUT_CLASSIFICATION	1.9072670376466384E-4	DESIGN	2.0500748675795516E-5	DEFECT	9.418407679290248E-8	DOCUMENTATION	1.693582827826955E-8	TEST	5.4296070701666204E-9	IMPLEMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999575272821	WITHOUT_CLASSIFICATION	4.097744916360012E-7	DESIGN	6.4495561427550044E-9	IMPLEMENTATION	4.41447376895735E-9	TEST	2.9434855579658407E-9	DEFECT	1.1451719039147343E-9	DOCUMENTATION
//information about properties of this class, //including inherited properties //(only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.999953811588344	WITHOUT_CLASSIFICATION	4.409966347225768E-5	DEFECT	1.1202510869436357E-6	DESIGN	5.958128259821374E-7	TEST	3.5493724293299083E-7	DOCUMENTATION	1.7747027973899645E-8	IMPLEMENTATION
// all this only really needs to consider properties // of this class, not its subclasses, but since we // are reusing code used for sequential selects, we // use the subclass closure	WITHOUT_CLASSIFICATION	0.9999999996945108	WITHOUT_CLASSIFICATION	2.824667492023877E-10	DESIGN	2.005207956324779E-11	DEFECT	1.6922223167840701E-12	DOCUMENTATION	7.840197446959443E-13	TEST	4.941773910541601E-13	IMPLEMENTATION
// Here we render the select column list based on the properties defined as being generated. // For partial component generation, we currently just re-select the whole component // rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.9999190561376691	WITHOUT_CLASSIFICATION	8.093745273656029E-5	DESIGN	6.312368265083283E-9	DEFECT	4.601926085448436E-11	TEST	3.228445099716328E-11	IMPLEMENTATION	1.892236505343881E-11	DOCUMENTATION
// this is the root (versioned) table, and we are using version-based // optimistic locking;  if we are not updating the version, also don't // check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.9999980608284951	WITHOUT_CLASSIFICATION	1.937225948671507E-6	DEFECT	1.4598080182328664E-9	DESIGN	3.7016226724516086E-10	IMPLEMENTATION	7.019423158071173E-11	TEST	4.5391781367317963E-11	DOCUMENTATION
//optimistic-lock="all", include all updatable properties //optimistic-lock="dirty", include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.9999928832407631	WITHOUT_CLASSIFICATION	3.9455114964392585E-6	DESIGN	2.936525001906677E-6	DEFECT	1.2749705034058138E-7	DOCUMENTATION	6.798274768581819E-8	IMPLEMENTATION	3.924294046881599E-8	TEST
// this property belongs to the table, and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9998882798607925	WITHOUT_CLASSIFICATION	9.756177654855224E-5	DESIGN	1.4139351049416256E-5	DEFECT	1.1933349514188125E-8	DOCUMENTATION	6.639108110939737E-9	TEST	4.3915196943017334E-10	IMPLEMENTATION
// check to see if the connection is in auto-commit  // mode (no connection means aggressive connection // release outside a JTA transaction context, so MUST // be autocommit mode)	WITHOUT_CLASSIFICATION	0.999999961185627	WITHOUT_CLASSIFICATION	3.874924987314759E-8	DESIGN	4.009756857018703E-11	DOCUMENTATION	1.6838273026264043E-11	IMPLEMENTATION	4.6955956604875025E-12	DEFECT	3.4918272297947687E-12	TEST
// need to treat this as if it where optimistic-lock="all" (dirty does *not* make sense); // first we need to locate the "loaded" state // // Note, it potentially could be a proxy, so perform the location the safe way...	WITHOUT_CLASSIFICATION	0.5227155625166373	DESIGN	0.4761561980950559	WITHOUT_CLASSIFICATION	5.995163562665435E-4	DEFECT	5.026728290882243E-4	IMPLEMENTATION	1.9359689607998708E-5	TEST	6.690513343907351E-6	DOCUMENTATION
// we *always* assume an instance with a null // identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.9999998479028865	WITHOUT_CLASSIFICATION	9.191358389458606E-8	DESIGN	5.9496154400321034E-8	DEFECT	6.438074149585644E-10	DOCUMENTATION	4.242729885462573E-11	TEST	1.1404685008338524E-12	IMPLEMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.999852670377808	WITHOUT_CLASSIFICATION	1.3383283479311171E-4	DEFECT	1.3317009002326352E-5	IMPLEMENTATION	1.2074985522128148E-7	DESIGN	4.297419346777355E-8	TEST	1.605434795311061E-8	DOCUMENTATION
//allow any identifier quoted with backtick //only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.9999752328127367	WITHOUT_CLASSIFICATION	1.2388048482072434E-5	IMPLEMENTATION	9.122474667520625E-6	DESIGN	2.99815522245685E-6	DEFECT	2.3136848433334957E-7	TEST	2.7140407035959653E-8	DOCUMENTATION
//following doesn't handle (null, not null) but unnecessary //since this would mean all rows	WITHOUT_CLASSIFICATION	0.9290717656317098	WITHOUT_CLASSIFICATION	0.03223113520212572	IMPLEMENTATION	0.027056700043185458	DESIGN	0.010394058708674428	DEFECT	0.0012244574203208825	TEST	2.1882993983846405E-5	DOCUMENTATION
// IMPL NOTE : due to the delayed population of setters (setters cached // 	WITHOUT_CLASSIFICATION	0.9999796992637858	WITHOUT_CLASSIFICATION	1.7437375150368364E-5	DESIGN	2.852913143560919E-6	DEFECT	5.023145397929504E-9	IMPLEMENTATION	3.771172638573564E-9	DOCUMENTATION	1.6536022769821089E-9	TEST
// we need to dirty check collections, since they can cause an owner // version number increment	WITHOUT_CLASSIFICATION	0.9996757402403017	WITHOUT_CLASSIFICATION	3.146359644173236E-4	IMPLEMENTATION	6.513824333522425E-6	DESIGN	2.758734592158329E-6	DOCUMENTATION	3.289228922124354E-7	DEFECT	2.2313462928982615E-8	TEST
//return the id, so we can use it to reset the proxy id //return result;	WITHOUT_CLASSIFICATION	0.9999965677782151	WITHOUT_CLASSIFICATION	2.212482384716114E-6	DESIGN	1.1707843484473582E-6	DEFECT	4.2449682523621545E-8	IMPLEMENTATION	5.595320920194519E-9	DOCUMENTATION	9.10048361015904E-10	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999998996423084	WITHOUT_CLASSIFICATION	9.934520201283497E-8	DEFECT	5.425948243194942E-10	DESIGN	3.020458604862903E-10	DOCUMENTATION	9.766542808978321E-11	IMPLEMENTATION	7.018340097884916E-11	TEST
// We now have the value of the property-ref we reference.  However, // we need to dig a little deeper, as that property might also be // an entity type, in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.9999966181215127	WITHOUT_CLASSIFICATION	3.372312469625805E-6	DESIGN	9.076058349220585E-9	DEFECT	4.820720763237942E-10	DOCUMENTATION	4.028374173937132E-12	IMPLEMENTATION	3.858949170754677E-12	TEST
// Retrieve the value of the designated column in the current row of this // ResultSet object as a java.io.Reader object	WITHOUT_CLASSIFICATION	0.9999991638647378	WITHOUT_CLASSIFICATION	5.289879608300707E-7	DEFECT	2.2432592411246142E-7	DESIGN	6.556195691639705E-8	DOCUMENTATION	1.613682580010111E-8	IMPLEMENTATION	1.1225945929304208E-9	TEST
//not absolutely necessary, but helps for some //equals()/hashCode() implementations	WITHOUT_CLASSIFICATION	0.9979215344954009	WITHOUT_CLASSIFICATION	0.0010690211785960026	IMPLEMENTATION	9.669785542280827E-4	DESIGN	2.3226939709751034E-5	DEFECT	1.8248227677592026E-5	TEST	9.906043876550472E-7	DOCUMENTATION
//this should be a call to resolve(), not resolveIdentifier(),  //'cos it might be a property-ref, and we did not cache the //referenced value	WITHOUT_CLASSIFICATION	0.9958170425702795	WITHOUT_CLASSIFICATION	0.0033764560528739746	DESIGN	8.064784104896899E-4	DEFECT	1.8851056582745075E-8	DOCUMENTATION	2.935438961105211E-9	IMPLEMENTATION	1.1798612653607703E-9	TEST
// If we have <tt>not-found="ignore"</tt> association mapped to a // formula, we always need to dirty check it, so we can update the // second-level cache	WITHOUT_CLASSIFICATION	0.9999909448222141	WITHOUT_CLASSIFICATION	8.857966708382859E-6	IMPLEMENTATION	1.862822183160619E-7	DESIGN	8.939690853674817E-9	DOCUMENTATION	1.1862562396176891E-9	DEFECT	8.02912095935719E-10	TEST
// can't just return null here, since that would // cause an owning component to become null	WITHOUT_CLASSIFICATION	0.9999997868176387	WITHOUT_CLASSIFICATION	1.7516737192864655E-7	DESIGN	3.3495558705756927E-8	IMPLEMENTATION	3.984206134065043E-9	DEFECT	2.738773025564241E-10	DOCUMENTATION	2.6134725270759586E-10	TEST
//for arrays, replaceElements() may return a different reference, since //the array length might not match	WITHOUT_CLASSIFICATION	0.9999712288566698	WITHOUT_CLASSIFICATION	2.8154469007464842E-5	DEFECT	5.822676698337534E-7	DESIGN	1.8441201733299392E-8	IMPLEMENTATION	1.53776286091628E-8	DOCUMENTATION	5.878225959635024E-10	TEST
// actual cache of the entries.  soft references are used for both the keys and the // values here since the values pertaining to the MRU entries are kept in a // seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.9999999994039155	WITHOUT_CLASSIFICATION	3.9425334025983325E-10	DESIGN	2.006859959680796E-10	IMPLEMENTATION	5.344825331616253E-13	DOCUMENTATION	3.471400373687617E-13	TEST	2.634970893442437E-13	DEFECT
// as soon as we encounter our first letter, return the substring // from that position	WITHOUT_CLASSIFICATION	0.9999999993775489	WITHOUT_CLASSIFICATION	4.760392832975504E-10	DESIGN	1.4095446676816654E-10	DEFECT	2.3491126687471707E-12	TEST	1.5678619438460512E-12	IMPLEMENTATION	1.5404018166913844E-12	DOCUMENTATION
// Note : expected in the syntax: //      type=listenerClass //          ({sep}type=listenerClass)* // where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.9999985018837597	WITHOUT_CLASSIFICATION	1.4762266295347538E-6	DEFECT	1.44711038552714E-8	TEST	6.706268986848138E-9	DESIGN	3.6092980348798785E-10	IMPLEMENTATION	3.513080224392063E-10	DOCUMENTATION
// isTransactionCallbackRegistered denotes whether any Hibernate // Transaction has registered as a callback against this // JDBCContext; only one such callback is allowed.  Directly // serializing this value causes problems with JDBCTransaction, // or really any Transaction impl where the callback is local // to the Transaction instance itself, since that Transaction // is not serialized along with the JDBCContext.  Thus we // handle that fact here explicitly...	WITHOUT_CLASSIFICATION	0.9914930171453156	WITHOUT_CLASSIFICATION	0.007146910478611699	DEFECT	0.001359890214108221	DESIGN	1.4790425393567835E-7	TEST	2.3733808883465453E-8	DOCUMENTATION	1.052390168802647E-8	IMPLEMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999890758583339	WITHOUT_CLASSIFICATION	1.0862013642507461E-5	DESIGN	5.4231134180121815E-8	TEST	6.073120374139626E-9	DEFECT	1.097923740887416E-9	IMPLEMENTATION	7.25845151322645E-10	DOCUMENTATION
// We call getKeyFromResultSet() here so that we can know the // key value upon which to perform the breaking logic.  However, // it is also then called from getRowFromResultSet() which is certainly // not the most efficient.  But the call here is needed, and there // currently is no other way without refactoring of the doQuery()/getRowFromResultSet() // methods	WITHOUT_CLASSIFICATION	0.4713810737773635	DESIGN	0.3549653956279285	WITHOUT_CLASSIFICATION	0.17356353433128102	IMPLEMENTATION	8.084396067032054E-5	DEFECT	6.19559462721367E-6	TEST	2.9567081293322615E-6	DOCUMENTATION
// This check is needed since processing leaves the cursor // after the last physical row for the current logical row; // thus if we are after the last physical row, this might be // caused by either: //      1) scrolling to the last logical row //      2) scrolling past the last logical row // In the latter scenario, the previous logical row // really is the last logical row. // // In all other cases, we should process back two // logical records (the current logic row, plus the // previous logical row).	WITHOUT_CLASSIFICATION	0.937329976908506	WITHOUT_CLASSIFICATION	0.06266419889269206	DEFECT	3.1165008958134114E-6	IMPLEMENTATION	1.8725537770513524E-6	DESIGN	8.170188500868197E-7	DOCUMENTATION	1.8125279083245506E-8	TEST
// and perform the load	WITHOUT_CLASSIFICATION	0.9999941616766733	WITHOUT_CLASSIFICATION	5.636732763765836E-6	DESIGN	1.2084316333187333E-7	IMPLEMENTATION	3.7807177622645485E-8	DEFECT	3.520431574104534E-8	DOCUMENTATION	7.735906171813255E-9	TEST
//important: reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.5744235766990756	WITHOUT_CLASSIFICATION	0.42322513467308426	DESIGN	0.0017049575100423996	DEFECT	4.76916240267787E-4	IMPLEMENTATION	1.6327282338368502E-4	DOCUMENTATION	6.142054146192772E-6	TEST
//this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.9755499333065144	WITHOUT_CLASSIFICATION	0.024217289238438796	DEFECT	2.294273200594049E-4	DESIGN	2.9067051054252536E-6	IMPLEMENTATION	3.715299837470445E-7	DOCUMENTATION	7.189989823216456E-8	TEST
// we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.9999179146193155	WITHOUT_CLASSIFICATION	8.090631502759712E-5	DESIGN	1.1691198760007164E-6	DEFECT	5.268096433120091E-9	DOCUMENTATION	3.4998309612221147E-9	IMPLEMENTATION	1.1778537662879365E-9	TEST
// we did not find a collection element in the result set, so we // ensure that a collection is created with the owner's identifier, // since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.9999999985254855	WITHOUT_CLASSIFICATION	1.450251836571798E-9	DESIGN	1.719225324659294E-11	DEFECT	3.887176153382885E-12	IMPLEMENTATION	3.0226447406798657E-12	TEST	1.606103546964927E-13	DOCUMENTATION
// this is a collection initializer, so we must create a collection // for each of the passed-in keys, to account for the possibility // that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.9999999929127811	WITHOUT_CLASSIFICATION	4.63974114147049E-9	DESIGN	2.1568519235443522E-9	DEFECT	1.9647448245766912E-10	TEST	9.070231022339906E-11	IMPLEMENTATION	3.4491898003525834E-12	DOCUMENTATION
// grab its state from the ResultSet and keep it in the Session // (but don't yet initialize the object itself) // note that we acquire LockMode.READ even if it was not requested	WITHOUT_CLASSIFICATION	0.9999570442357922	WITHOUT_CLASSIFICATION	4.2918797657281966E-5	DESIGN	1.847544083485417E-8	DEFECT	1.706200343000599E-8	TEST	9.98006285521339E-10	DOCUMENTATION	4.3109986949112896E-10	IMPLEMENTATION
// a many-to-many; // decrement currentDepth here to allow join across the association table // without exceeding MAX_FETCH_DEPTH (i.e. the "currentDepth - 1" bit)	WITHOUT_CLASSIFICATION	0.9812395451164034	WITHOUT_CLASSIFICATION	0.018598447394762806	DESIGN	1.5278150602050086E-4	DEFECT	6.921732365191385E-6	IMPLEMENTATION	1.2191466661074722E-6	TEST	1.0851037819480624E-6	DOCUMENTATION
// if not a composite key, use "foo in (?, ?, ?)" for batching // if no batch, and not a composite key, use "foo = ?"	WITHOUT_CLASSIFICATION	0.9999999660024456	WITHOUT_CLASSIFICATION	3.344116170526405E-8	DESIGN	4.3659890248437104E-10	DEFECT	5.351699201008757E-11	TEST	5.0739794739556745E-11	DOCUMENTATION	1.5536946775086897E-11	IMPLEMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999999990424641	WITHOUT_CLASSIFICATION	5.273894568629483E-10	DEFECT	3.380684314201255E-10	DOCUMENTATION	7.588832118753551E-11	DESIGN	1.25852011330849E-11	IMPLEMENTATION	3.6045944242264175E-12	TEST
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9998693606379366	WITHOUT_CLASSIFICATION	9.2799536575313E-5	IMPLEMENTATION	3.724224341992746E-5	DESIGN	3.211777926336845E-7	DOCUMENTATION	2.6417559471248735E-7	DEFECT	1.2228680822133582E-8	TEST
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9998693606379366	WITHOUT_CLASSIFICATION	9.2799536575313E-5	IMPLEMENTATION	3.724224341992746E-5	DESIGN	3.211777926336845E-7	DOCUMENTATION	2.6417559471248735E-7	DEFECT	1.2228680822133582E-8	TEST
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999323304249719	WITHOUT_CLASSIFICATION	5.3650982339214316E-5	DESIGN	1.3926830361148857E-5	DEFECT	6.148499968609196E-8	TEST	2.8416046473560768E-8	DOCUMENTATION	1.8612816510885181E-9	IMPLEMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999986030232011	WITHOUT_CLASSIFICATION	1.3884603838170114E-6	DESIGN	6.646223039232558E-9	DEFECT	1.3248008508912899E-9	TEST	4.4296278050578617E-10	IMPLEMENTATION	1.0242850371310196E-10	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999997476938242	WITHOUT_CLASSIFICATION	2.494781843241136E-7	DESIGN	2.0982860188633846E-9	DEFECT	5.970014597384886E-10	IMPLEMENTATION	8.782229277256893E-11	TEST	4.4881727209255996E-11	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.4105629660680269	DOCUMENTATION	0.38067849588335895	DESIGN	0.10486748836536479	IMPLEMENTATION	0.03838592522123044	WITHOUT_CLASSIFICATION	0.033938355862457185	DEFECT	0.03156676859956161	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999994146225625	WITHOUT_CLASSIFICATION	4.01170982020406E-7	DESIGN	1.1678728359415685E-7	DEFECT	4.5290337807352606E-8	IMPLEMENTATION	1.5212113753972462E-8	DOCUMENTATION	6.916720285389313E-9	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999994146225625	WITHOUT_CLASSIFICATION	4.01170982020406E-7	DESIGN	1.1678728359415685E-7	DEFECT	4.5290337807352606E-8	IMPLEMENTATION	1.5212113753972462E-8	DOCUMENTATION	6.916720285389313E-9	TEST
//        }	WITHOUT_CLASSIFICATION	0.9999933647143779	WITHOUT_CLASSIFICATION	2.599377593295946E-6	DEFECT	1.958654212598156E-6	DESIGN	1.5108005976720185E-6	IMPLEMENTATION	2.923529833972552E-7	DOCUMENTATION	2.7410023519594117E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9999963543879113	WITHOUT_CLASSIFICATION	3.6229513734154578E-6	DESIGN	1.6639479382881138E-8	DEFECT	3.4211176981805116E-9	DOCUMENTATION	1.6480680893592688E-9	TEST	9.520499910543904E-10	IMPLEMENTATION
//	WITHOUT_CLASSIFICATION	0.9962762015428803	WITHOUT_CLASSIFICATION	0.0036254890601010864	DESIGN	4.924438845136562E-5	DEFECT	2.2690226730692212E-5	IMPLEMENTATION	1.3947095373203532E-5	DOCUMENTATION	1.2427686463300108E-5	TEST
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999041067456039	WITHOUT_CLASSIFICATION	7.899942116246041E-5	DESIGN	7.660514467067788E-6	TEST	5.334486480054316E-6	DEFECT	3.6762300002736688E-6	IMPLEMENTATION	2.2260228647352565E-7	DOCUMENTATION
// at this point we have (drivingSqlAlias) the SQL alias of the driving table // corresponding to the given user alias.  However, the driving table is not // (necessarily) the table against which we want to apply locks.  Mainly, // the exception case here is joined-subclass hierarchies where we instead // want to apply the lock against the root table (for all other strategies, // it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.9999989184427626	WITHOUT_CLASSIFICATION	1.0586341550317479E-6	DESIGN	1.746879829249909E-8	DEFECT	5.067930990034578E-9	IMPLEMENTATION	3.2919561248056256E-10	DOCUMENTATION	5.715746250332796E-11	TEST
// the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.9999764466019143	WITHOUT_CLASSIFICATION	1.6206881832174617E-5	IMPLEMENTATION	5.351814582367956E-6	DEFECT	1.185685827215319E-6	TEST	5.470938715595368E-7	DESIGN	2.6192197237095306E-7	DOCUMENTATION
// we have a mapped identifier property and the root of // the incoming property path matched that identifier // property	WITHOUT_CLASSIFICATION	0.9999978526612672	WITHOUT_CLASSIFICATION	1.1944625309725204E-6	DESIGN	9.409063936161456E-7	DEFECT	8.263287528903735E-9	DOCUMENTATION	2.448627066430277E-9	TEST	1.2578937122467219E-9	IMPLEMENTATION
// we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9999993732867581	WITHOUT_CLASSIFICATION	6.245919766320215E-7	DESIGN	8.245814674778674E-10	IMPLEMENTATION	5.47249553518769E-10	TEST	4.689316200982097E-10	DOCUMENTATION	2.805025623491077E-10	DEFECT
// both many-to-one and one-to-one are represented as a // Property.  EntityPersister is relying on this value to // determine "lazy fetch groups" in terms of field-level // interception.  So we need to make sure that we return // true here for the case of many-to-one and one-to-one // with lazy="no-proxy" // // * impl note - lazy="no-proxy" currently forces both // lazy and unwrap to be set to true.  The other case we // are extremely interested in here is that of lazy="proxy" // where lazy is set to true, but unwrap is set to false. // thus we use both here under the assumption that this // return is really only ever used during persister // construction to determine the lazy property/field fetch // groupings.  If that assertion changes then this check // needs to change as well.  Partially, this is an issue with // the overloading of the term "lazy" here...	WITHOUT_CLASSIFICATION	0.9999162699283887	WITHOUT_CLASSIFICATION	7.24660900667582E-5	DESIGN	1.1233753880843337E-5	DEFECT	2.9085119713302582E-8	TEST	1.1109992528435605E-9	DOCUMENTATION	3.154485838110008E-11	IMPLEMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998890485539	WITHOUT_CLASSIFICATION	8.700597328638187E-8	DESIGN	1.1253632822874125E-8	IMPLEMENTATION	7.1694357874133314E-9	TEST	5.287759733657833E-9	DEFECT	2.346446457487709E-10	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998890485539	WITHOUT_CLASSIFICATION	8.700597328638187E-8	DESIGN	1.1253632822874125E-8	IMPLEMENTATION	7.1694357874133314E-9	TEST	5.287759733657833E-9	DEFECT	2.346446457487709E-10	DOCUMENTATION
/*rootTableName = persistentClass.getRootTable().getQualifiedName( 	WITHOUT_CLASSIFICATION	0.9966480488599876	WITHOUT_CLASSIFICATION	0.002083277439235351	DESIGN	0.0012452124341035913	IMPLEMENTATION	1.3280788250559383E-5	TEST	9.02450530633701E-6	DEFECT	1.155973116468814E-6	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.999992393061563	WITHOUT_CLASSIFICATION	4.266413066668151E-6	DESIGN	1.526561242906952E-6	IMPLEMENTATION	1.4910490384981128E-6	DEFECT	2.3660599076800365E-7	DOCUMENTATION	8.630909814163146E-8	TEST
// Custom sql	WITHOUT_CLASSIFICATION	0.9999955043034894	WITHOUT_CLASSIFICATION	4.361328937102737E-6	DESIGN	9.048670397781766E-8	DEFECT	1.9857058431455726E-8	TEST	1.345575006594012E-8	DOCUMENTATION	1.0568060919244488E-8	IMPLEMENTATION
/*protected void initPropertyPaths(	WITHOUT_CLASSIFICATION	0.9979650763898888	WITHOUT_CLASSIFICATION	0.001969163880866586	DESIGN	3.785366955782735E-5	DEFECT	1.5725843522961352E-5	TEST	7.881059839829938E-6	DOCUMENTATION	4.299156324010202E-6	IMPLEMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999955005630445	WITHOUT_CLASSIFICATION	1.6825552579018131E-6	IMPLEMENTATION	1.346095068509579E-6	DEFECT	1.0210604544520953E-6	DESIGN	2.2902476233455182E-7	TEST	2.207014123387803E-7	DOCUMENTATION
//Custom SQL (would be better if these were private)	WITHOUT_CLASSIFICATION	0.5420361529829133	DESIGN	0.45794871944853016	WITHOUT_CLASSIFICATION	1.3162951685678395E-5	TEST	1.360049119503072E-6	IMPLEMENTATION	5.180156588883631E-7	DOCUMENTATION	8.655209241686673E-8	DEFECT
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999614573041816	WITHOUT_CLASSIFICATION	3.850307909791951E-5	DESIGN	1.5761312463998473E-8	IMPLEMENTATION	1.047241935767497E-8	TEST	9.388172575143077E-9	DEFECT	3.994816134144278E-9	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999955005630445	WITHOUT_CLASSIFICATION	1.6825552579018131E-6	IMPLEMENTATION	1.346095068509579E-6	DEFECT	1.0210604544520953E-6	DESIGN	2.2902476233455182E-7	TEST	2.207014123387803E-7	DOCUMENTATION
// aliases for identifier ( alias.id ); skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.9999999684752504	WITHOUT_CLASSIFICATION	2.941280433673795E-8	DESIGN	1.5419541495462372E-9	DEFECT	2.86653848196385E-10	IMPLEMENTATION	1.9915933836629835E-10	TEST	8.41780558434568E-11	DOCUMENTATION
//decide which ResultSet to get the property value from:	WITHOUT_CLASSIFICATION	0.999942477430945	WITHOUT_CLASSIFICATION	4.64783801576997E-5	DESIGN	1.0743892446638378E-5	DEFECT	2.2755988064191327E-7	DOCUMENTATION	7.050532708728655E-8	TEST	2.231242891705532E-9	IMPLEMENTATION
//note: it is conceptually possible that a UserType could map null to //	WITHOUT_CLASSIFICATION	0.5261752243901905	DESIGN	0.47338081362729534	WITHOUT_CLASSIFICATION	4.078747777712633E-4	IMPLEMENTATION	3.524798624301126E-5	DEFECT	8.015478495360072E-7	TEST	3.767065037478048E-8	DOCUMENTATION
// the contract of EntityTuplizer.determineConcreteSubclassEntityName says that returning null // is an indication that the specified entity-name (this.getEntityName) should be used.	WITHOUT_CLASSIFICATION	0.9912642572218234	WITHOUT_CLASSIFICATION	0.008735701446195489	DESIGN	2.2633383877052964E-8	DOCUMENTATION	1.6618292980341164E-8	IMPLEMENTATION	1.1099240446622505E-9	DEFECT	9.70380349746381E-10	TEST
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.999852670377808	WITHOUT_CLASSIFICATION	1.3383283479311171E-4	DEFECT	1.3317009002326352E-5	IMPLEMENTATION	1.2074985522128148E-7	DESIGN	4.297419346777355E-8	TEST	1.605434795311061E-8	DOCUMENTATION
// cache these since they are stateless // this one could even be static...	WITHOUT_CLASSIFICATION	0.8780169680254892	DESIGN	0.12196456653576876	WITHOUT_CLASSIFICATION	1.6365903668898547E-5	DEFECT	1.5906455875276962E-6	IMPLEMENTATION	3.254615878458315E-7	TEST	1.8342789788340525E-7	DOCUMENTATION
//"as" is not in KEYWORDS	WITHOUT_CLASSIFICATION	0.9994174642291831	WITHOUT_CLASSIFICATION	4.3228182750738826E-4	DESIGN	1.4121638015396785E-4	DEFECT	4.844611098714576E-6	TEST	3.467630919648713E-6	DOCUMENTATION	7.253211371320794E-7	IMPLEMENTATION
// --Commented out by Inspection (12/4/04 9:10 AM): public abstract void addCondition(String alias, String[] columns, String condition);	WITHOUT_CLASSIFICATION	0.9999998056740832	WITHOUT_CLASSIFICATION	1.0338887698526194E-7	DESIGN	5.403065551057571E-8	DEFECT	2.991030569207658E-8	DOCUMENTATION	6.397408011271411E-9	IMPLEMENTATION	5.986704791196618E-10	TEST
//use the id column alias	WITHOUT_CLASSIFICATION	0.9999808345686994	WITHOUT_CLASSIFICATION	1.6352123679201465E-5	DESIGN	2.2905486212847577E-6	IMPLEMENTATION	3.610231339685464E-7	DOCUMENTATION	1.1082062956976675E-7	DEFECT	5.0915236705726833E-8	TEST
//private List aliases = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999999430803104	WITHOUT_CLASSIFICATION	2.8140658293422123E-8	IMPLEMENTATION	1.849542593945386E-8	DEFECT	8.184064047101513E-9	TEST	1.3509851813164895E-9	DESIGN	7.485559165104333E-10	DOCUMENTATION
//columns.add(columnName); //aliases.add(tableAlias);	WITHOUT_CLASSIFICATION	0.9999304876697732	WITHOUT_CLASSIFICATION	4.574490218387661E-5	IMPLEMENTATION	1.2121897377220334E-5	DESIGN	8.2119808971125E-6	DEFECT	2.8070700708823752E-6	TEST	6.26479697673935E-7	DOCUMENTATION
//where fragment must be empty!	WITHOUT_CLASSIFICATION	0.9956539879196565	WITHOUT_CLASSIFICATION	0.004330943506131014	DESIGN	7.820329256806544E-6	IMPLEMENTATION	4.225425005103617E-6	TEST	2.2935830867107866E-6	DEFECT	7.292368638982793E-7	DOCUMENTATION
// revert to traditional hibernate behavior of setting initialPoolSize to minPoolSize // unless otherwise specified with a c3p0.*-style parameter.	WITHOUT_CLASSIFICATION	0.9948942485817123	WITHOUT_CLASSIFICATION	0.005104075738465763	DESIGN	1.6255886341308082E-6	IMPLEMENTATION	4.6601330214274806E-8	TEST	2.7593210755368082E-9	DOCUMENTATION	7.305364814553324E-10	DEFECT
//arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.9999977280479002	WITHOUT_CLASSIFICATION	1.4574078916343721E-6	DEFECT	7.410972365014663E-7	DESIGN	4.779681111761865E-8	DOCUMENTATION	2.3575022854565947E-8	IMPLEMENTATION	2.075137849869629E-9	TEST
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9995325852447909	WITHOUT_CLASSIFICATION	2.4900362783878837E-4	DESIGN	2.0915265850804862E-4	DEFECT	5.602590522294204E-6	IMPLEMENTATION	2.8432563099823348E-6	DOCUMENTATION	8.126220299643563E-7	TEST
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9995325852447909	WITHOUT_CLASSIFICATION	2.4900362783878837E-4	DESIGN	2.0915265850804862E-4	DEFECT	5.602590522294204E-6	IMPLEMENTATION	2.8432563099823348E-6	DOCUMENTATION	8.126220299643563E-7	TEST
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999503374074129	WITHOUT_CLASSIFICATION	3.709033418544923E-5	DESIGN	1.1558844726025669E-5	DEFECT	9.411630456049929E-7	IMPLEMENTATION	4.76992612070542E-8	TEST	2.4551368799295038E-8	DOCUMENTATION
// Essentially: // 1) If we have a local (Hibernate) transaction in progress //      and it already has the UserTransaction cached, use that //      UserTransaction to determine the status. // 2) If a transaction manager has been located, use //      that transaction manager to determine the status. // 3) Finally, as the last resort, try to lookup the //      UserTransaction via JNDI and use that to determine the //      status.	WITHOUT_CLASSIFICATION	0.9999999970178624	WITHOUT_CLASSIFICATION	1.8446256288087646E-9	IMPLEMENTATION	1.1195119433056951E-9	DESIGN	1.6239932202788196E-11	DEFECT	1.7577756512810412E-12	DOCUMENTATION	2.3644354604286874E-15	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9990042718110085	WITHOUT_CLASSIFICATION	9.126514084333693E-4	DESIGN	6.918329762260797E-5	IMPLEMENTATION	7.305212416715822E-6	DEFECT	5.059125330650915E-6	DOCUMENTATION	1.5291451883866793E-6	TEST
//swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.999964651248878	WITHOUT_CLASSIFICATION	2.0808963934321938E-5	IMPLEMENTATION	1.1837278236432213E-5	DESIGN	2.6109605764719403E-6	DEFECT	5.7197127417979145E-8	DOCUMENTATION	3.435124736417428E-8	TEST
// ignore it	WITHOUT_CLASSIFICATION	0.9999983817378758	WITHOUT_CLASSIFICATION	1.2836499879580976E-6	DESIGN	2.363942606708512E-7	DEFECT	6.38522045145197E-8	IMPLEMENTATION	2.3066541033033825E-8	DOCUMENTATION	1.1299129886540259E-8	TEST
// we need to dirty check many-to-ones with not-found="ignore" in order  // to update the cache (not the database), since in this case a null // entity reference can lose information	WITHOUT_CLASSIFICATION	0.9999974604674144	WITHOUT_CLASSIFICATION	2.189894444014082E-6	DESIGN	2.871669339889895E-7	DEFECT	4.7519664201663493E-8	IMPLEMENTATION	1.4850805525215636E-8	DOCUMENTATION	1.007377725188808E-10	TEST
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9998114738944387	WITHOUT_CLASSIFICATION	1.8726939092551966E-4	IMPLEMENTATION	7.761440928030924E-7	DESIGN	3.944105518942201E-7	DEFECT	5.13517243564074E-8	TEST	3.480826675059871E-8	DOCUMENTATION
// Regions can get instantiated in the course of normal work (e.g. // a named query region will be created the first time the query is // executed), so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.9941844226172288	WITHOUT_CLASSIFICATION	0.005380290235660557	DESIGN	4.352848629828129E-4	DEFECT	1.1932588570856086E-9	IMPLEMENTATION	8.806372091610789E-10	DOCUMENTATION	2.1023175642975428E-10	TEST
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.999766174759117	WITHOUT_CLASSIFICATION	2.327636462529718E-4	DESIGN	6.976543249437507E-7	IMPLEMENTATION	1.473426808147237E-7	TEST	1.3028480576195768E-7	DEFECT	8.631281837918867E-8	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.999881268180995	WITHOUT_CLASSIFICATION	9.128833293541484E-5	DESIGN	2.1798051154502604E-5	IMPLEMENTATION	5.5764384600016024E-6	DEFECT	4.6805229043846903E-8	TEST	2.219122617332704E-8	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998040127022678	WITHOUT_CLASSIFICATION	1.9461630070784068E-4	DESIGN	6.617809676499185E-7	DEFECT	3.537798424815882E-7	TEST	2.57775767793535E-7	IMPLEMENTATION	9.766044637840726E-8	DOCUMENTATION
// NOTE : this is being used from the process of shutting down a // SessionFactory. Specific things to consider: // (1) this clearing of the region should not propagate to // other nodes on the cluster (if any); this is the // cache-mode-local option bit... // (2) really just trying a best effort to cleanup after // ourselves; lock failures, etc are not critical here; // this is the fail-silently option bit...	WITHOUT_CLASSIFICATION	0.9978272762649115	DESIGN	0.0011299069152342447	DEFECT	0.001042629575188845	WITHOUT_CLASSIFICATION	1.2083621752643156E-7	IMPLEMENTATION	6.000081028810467E-8	TEST	6.407637548063339E-9	DOCUMENTATION
// need to extract the component values and check for subtype replacements...	WITHOUT_CLASSIFICATION	0.7953251290953435	WITHOUT_CLASSIFICATION	0.15788365113714556	DESIGN	0.04676114942163085	IMPLEMENTATION	2.303668769218431E-5	DEFECT	5.688020093979808E-6	DOCUMENTATION	1.3456380939327462E-6	TEST
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999999986861903	WITHOUT_CLASSIFICATION	9.754981030888578E-10	DESIGN	3.0019549277090474E-10	DEFECT	3.2689479988988626E-11	IMPLEMENTATION	4.490716074250225E-12	TEST	9.360038390021707E-13	DOCUMENTATION
// for now, just "re-flatten" the metamodel since this is temporary stuff anyway (HHH-1907)	WITHOUT_CLASSIFICATION	0.9914941389729826	WITHOUT_CLASSIFICATION	0.008505773843708058	DESIGN	6.123639331353519E-8	DEFECT	2.308981808324055E-8	TEST	2.384054478454562E-9	DOCUMENTATION	4.730433929944453E-10	IMPLEMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9999647933946569	WITHOUT_CLASSIFICATION	3.4878700652674965E-5	DESIGN	3.002928934400143E-7	IMPLEMENTATION	2.055332878207654E-8	DOCUMENTATION	5.902978846410247E-9	DEFECT	1.155489278662355E-9	TEST
//This solution would allow us to eliminate the owner arg to disassemble(), but //what if the collection was null, and then later had elements added? seems unsafe //session.getPersistenceContext().getCollectionEntry( (PersistentCollection) value ).getKey();	WITHOUT_CLASSIFICATION	0.6097367482306025	WITHOUT_CLASSIFICATION	0.38996718922089924	DESIGN	2.2993689635948363E-4	DEFECT	6.445075431596758E-5	IMPLEMENTATION	8.469487132769244E-7	TEST	8.279491094112298E-7	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999955802516537	WITHOUT_CLASSIFICATION	2.9727780990545057E-6	DESIGN	1.1590788921929377E-6	DEFECT	1.4412386773661918E-7	TEST	1.1958382138187917E-7	IMPLEMENTATION	2.4183665957472503E-8	DOCUMENTATION
// some collections are not lazy:	WITHOUT_CLASSIFICATION	0.9999444784356676	WITHOUT_CLASSIFICATION	1.999276402303056E-5	IMPLEMENTATION	1.84758544486272E-5	DESIGN	1.643454497326716E-5	DEFECT	4.451752499501408E-7	TEST	1.7322563769060528E-7	DOCUMENTATION
// Here we don't want to suspend the tx. If we do: // 1) We might be caching query results that reflect uncommitted // changes. No tx == no WL on cache node, so other threads // can prematurely see those query results // 2) No tx == immediate replication. More overhead, plus we // spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.9985664487499518	WITHOUT_CLASSIFICATION	0.001046729558943754	DEFECT	3.8681882216500403E-4	DESIGN	2.5730665750364375E-9	DOCUMENTATION	2.937447368435701E-10	TEST	2.1281042593180917E-12	IMPLEMENTATION
// return the (fully resolved) identifier value, but do not resolve // to the actual referenced entity instance // NOTE: the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.9999999452421987	WITHOUT_CLASSIFICATION	3.9252546356706844E-8	DESIGN	1.5302988910323022E-8	DEFECT	1.1675344301965907E-10	DOCUMENTATION	5.083886853512817E-11	IMPLEMENTATION	3.467371285688516E-11	TEST
// Add a zero (or quite low) timeout option so we don't block. // Ignore any TimeoutException. Basically we forego caching the // query result in order to avoid blocking. // Reads are done with suspended tx, so they should not hold the // lock for long.  Not caching the query result is OK, since // any subsequent read will just see the old result with its // out-of-date timestamp; that result will be discarded and the // db query performed again.	WITHOUT_CLASSIFICATION	0.9999763171414092	WITHOUT_CLASSIFICATION	2.182399754838192E-5	DEFECT	1.6673553810926272E-6	DESIGN	1.751625412639741E-7	IMPLEMENTATION	1.4473485433755116E-8	DOCUMENTATION	1.869634652314943E-9	TEST
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9999843116569725	WITHOUT_CLASSIFICATION	9.275937650479633E-6	DEFECT	5.992170031178296E-6	DESIGN	3.6223923994154725E-7	IMPLEMENTATION	5.451627384843233E-8	TEST	3.4798319878826355E-9	DOCUMENTATION
// We have the JBCWriteMutex, so no other *local* thread will  // be trying to write this key.  // It's possible here some remote thread has come in and // changed the values again, but since we are reading the // values to write to JBC right now, we know we are writing // the latest values; i.e. we don't assume that what we cached // in entry.update() above is what we should write to JBC *now*. // Our write could be redundant, i.e. we are writing what // some remote thread just came in an wrote.  There is a chance  // that yet another remote thread will update us, and we'll then // overwrite that later data in JBC.  But, all remote nodes will // ignore that change in their localCache; the only place it  // will live will be in JBC, where it can only effect the  // initial state transfer values on newly joined nodes  // (i.e. populateLocalCache()).	WITHOUT_CLASSIFICATION	0.999999956017201	WITHOUT_CLASSIFICATION	4.143899623641101E-8	DESIGN	2.5432803791953877E-9	DEFECT	3.442672809000861E-13	TEST	1.482720731241837E-13	DOCUMENTATION	2.9837520759751194E-14	IMPLEMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999992155926104	WITHOUT_CLASSIFICATION	3.279141848768513E-7	DESIGN	3.126234205724621E-7	DEFECT	1.4331980122641933E-7	DOCUMENTATION	3.8232873355457965E-10	IMPLEMENTATION	1.6765419121141259E-10	TEST
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999992155926104	WITHOUT_CLASSIFICATION	3.279141848768513E-7	DESIGN	3.126234205724621E-7	DEFECT	1.4331980122641933E-7	DOCUMENTATION	3.8232873355457965E-10	IMPLEMENTATION	1.6765419121141259E-10	TEST
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9969370560998458	WITHOUT_CLASSIFICATION	0.0019755919052731304	DEFECT	7.336681592138234E-4	TEST	2.6070066176474494E-4	DESIGN	8.219029289831302E-5	IMPLEMENTATION	1.0792881003991318E-5	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.7450792214243572	WITHOUT_CLASSIFICATION	0.25482807292912224	DESIGN	6.595925928171907E-5	DEFECT	2.321924589706098E-5	IMPLEMENTATION	3.384858416598957E-6	TEST	1.422829252847191E-7	DOCUMENTATION
// we need to obtain the lock before any actions are // executed, since this may be an inverse="true" // bidirectional association and it is one of the // earlier entity actions which actually updates // the database (this action is resposible for // second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.9999886787394814	WITHOUT_CLASSIFICATION	1.0882994644771807E-5	DESIGN	4.130644928439485E-7	IMPLEMENTATION	2.4374923049032994E-8	DOCUMENTATION	6.833166616523392E-10	TEST	1.431413663702625E-10	DEFECT
//postDelete: // After actually deleting a row, record the fact that the instance no longer  // exists on the database (needed for identity-column key generation), and // remove it from the session cache	WITHOUT_CLASSIFICATION	0.9999677337949435	WITHOUT_CLASSIFICATION	3.225512604591796E-5	DESIGN	1.1046531788146906E-8	DEFECT	1.8865270225084564E-11	TEST	1.0980379626142394E-11	DOCUMENTATION	2.633166571554466E-12	IMPLEMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.999906322955385	WITHOUT_CLASSIFICATION	9.322978057345036E-5	DESIGN	2.5628418703942373E-7	DEFECT	1.5369499505241438E-7	DOCUMENTATION	2.6784455240985085E-8	IMPLEMENTATION	1.0500404385992159E-8	TEST
//TODO find a decent name before documenting	DOCUMENTATION	0.4431127230517786	DOCUMENTATION	0.4052096361477189	DESIGN	0.14698076316746017	WITHOUT_CLASSIFICATION	0.002449527699595167	DEFECT	0.0019750696917001475	IMPLEMENTATION	2.7228024174704265E-4	TEST
//FIXME we don't have the associated entity table name here, has to be done in a second pass	DEFECT	0.9816615107562707	DESIGN	0.01833711158626686	WITHOUT_CLASSIFICATION	8.943020877467502E-7	DEFECT	2.059235468536094E-7	DOCUMENTATION	1.624108462257595E-7	TEST	1.1502098157078593E-7	IMPLEMENTATION
// For a one-to-many, a <bag> is not really a bag; // it is *really* a set, since it can't contain the // same element twice. It could be considered a bug // in the mapping dtd that <bag> allows <one-to-many>.	DEFECT	0.9594704537760512	WITHOUT_CLASSIFICATION	0.038724539926532596	DESIGN	0.0017837457138526675	DEFECT	2.1254326912390266E-5	IMPLEMENTATION	4.199855264704551E-9	DOCUMENTATION	2.056795887509708E-9	TEST
// RDMS does not directly support the trim() function, we use rtrim() and ltrim()	DEFECT	0.9995763117260409	WITHOUT_CLASSIFICATION	3.06742257253646E-4	IMPLEMENTATION	8.339133534342846E-5	DESIGN	3.268063506527336E-5	DEFECT	7.536232010986278E-7	DOCUMENTATION	1.2042309548185496E-7	TEST
/*         * The following types are not supported in RDMS/JDBC and therefore commented out.         * However, in some cases, mapping them to CHARACTER columns works         * for many applications, but does not work for all cases.         */	DEFECT	0.6760945088974055	WITHOUT_CLASSIFICATION	0.3238999050539137	DEFECT	2.654814351883968E-6	DESIGN	2.4280653723839336E-6	DOCUMENTATION	3.119556699086266E-7	IMPLEMENTATION	1.9121328654669294E-7	TEST
// The preference here would be //   SQLFunctionTemplate( Hibernate.TIMESTAMP, "current_timestamp(?1)", false) // but this appears not to work. // Jay Nance 2006-09-22	DEFECT	0.9872552913855254	DEFECT	0.012066914345866979	WITHOUT_CLASSIFICATION	6.064389784475079E-4	DESIGN	6.690085740836811E-5	IMPLEMENTATION	2.426517985487606E-6	DOCUMENTATION	2.0279147663136335E-6	TEST
// note: at least my local SQL Server 2005 Express shows this not working...	DEFECT	0.6517128846380325	DEFECT	0.3344708676343131	DESIGN	0.013574960801448837	WITHOUT_CLASSIFICATION	1.5395204033290065E-4	TEST	8.398609637590412E-5	IMPLEMENTATION	3.348789496708587E-6	DOCUMENTATION
// note: at least my local MySQL 5.1 install shows this not working...	DEFECT	0.6260412003854502	DEFECT	0.36955925455738287	DESIGN	0.004365575410602911	WITHOUT_CLASSIFICATION	2.3629142862438605E-5	IMPLEMENTATION	8.684615268282042E-6	TEST	1.6558884332797294E-6	DOCUMENTATION
/*	DEFECT	0.933244904112182	WITHOUT_CLASSIFICATION	0.05759605816623468	DESIGN	0.005922678791583738	DEFECT	0.0029694107811799168	IMPLEMENTATION	1.595747323387444E-4	DOCUMENTATION	1.0737341648099305E-4	TEST
//Don't need this, because we should never ever be selecting no columns in an insert ... select... //and because it causes a bug on DB2	DEFECT	0.9682553198879341	WITHOUT_CLASSIFICATION	0.0314799714868049	DEFECT	2.4208294335059994E-4	DESIGN	1.636990163705385E-5	TEST	6.195523605307091E-6	DOCUMENTATION	6.025666807610036E-8	IMPLEMENTATION
// TODO : this is broke for subqueries in statements other than selects...	DEFECT	0.998698943611788	DESIGN	0.0012828595701838434	DEFECT	1.5916146139953632E-5	TEST	1.2278552599475892E-6	DOCUMENTATION	8.516528293264076E-7	WITHOUT_CLASSIFICATION	2.0116379905757698E-7	IMPLEMENTATION
// TODO : should this be an error?	DEFECT	0.9999933657792619	DESIGN	3.1124462188909306E-6	DEFECT	2.5694375971502965E-6	IMPLEMENTATION	5.475417247287938E-7	TEST	3.6427545217241085E-7	DOCUMENTATION	4.051974522173474E-8	WITHOUT_CLASSIFICATION
// TODO : not sure which (either?) is correct, could not find docs on how to do this. // did find various blogs and forums mentioning that select CURRENT_TIMESTAMP // does not work...	DEFECT	0.9578559240754023	DEFECT	0.04206115532706711	DESIGN	3.986264862071084E-5	TEST	3.800126003953336E-5	DOCUMENTATION	4.987849219699548E-6	IMPLEMENTATION	6.883965049304799E-8	WITHOUT_CLASSIFICATION
// TODO: figure out how this should be set. /////////////////////////////////////////////////////////////////////////////// // This was the reason for failures regarding INDEX_OP and subclass joins on // theta-join dialects; not sure what behaviour we were trying to emulate ;) //	DEFECT	0.6713196763773499	DEFECT	0.3285509354117411	DESIGN	9.112713115175148E-5	IMPLEMENTATION	3.782692900853108E-5	WITHOUT_CLASSIFICATION	2.986732879780331E-7	TEST	1.3547746097039577E-7	DOCUMENTATION
//TODO: would be nice to use false, but issues with MS SQL	DEFECT	0.9885501046426165	DESIGN	0.005518241283915944	DEFECT	0.003029673110389271	WITHOUT_CLASSIFICATION	0.0022434323917099185	IMPLEMENTATION	6.15266349662927E-4	TEST	4.3282221705608574E-5	DOCUMENTATION
//TODO: would be nice to use false, but issues with MS SQL	DEFECT	0.9885501046426165	DESIGN	0.005518241283915944	DEFECT	0.003029673110389271	WITHOUT_CLASSIFICATION	0.0022434323917099185	IMPLEMENTATION	6.15266349662927E-4	TEST	4.3282221705608574E-5	DOCUMENTATION
// TODO: cannot use generateSuffixes() - it handles the initial suffix differently.	DEFECT	0.9998841212718735	DESIGN	5.7692335979139024E-5	WITHOUT_CLASSIFICATION	5.382601439674867E-5	DEFECT	3.2064604276827084E-6	IMPLEMENTATION	7.489348432057999E-7	TEST	4.0498247969695693E-7	DOCUMENTATION
// starts with an alias (old style) // semi-bad thing about this: can't re-alias another alias.....	DEFECT	0.9799839020277435	WITHOUT_CLASSIFICATION	0.01986619770574207	DESIGN	1.48919775625206E-4	DEFECT	9.520998318452413E-7	TEST	2.7844420777919558E-8	DOCUMENTATION	5.466365247081158E-10	IMPLEMENTATION
//TODO: BUG! this currently fails for named queries for non-POJO entities	DEFECT	0.9844695702978089	DESIGN	0.011669921024561413	DEFECT	0.003334361594590217	IMPLEMENTATION	2.2653800533847698E-4	WITHOUT_CLASSIFICATION	2.2356238443611045E-4	TEST	7.60466932648428E-5	DOCUMENTATION
// this call is side-effecty	DEFECT	0.9997689020138312	WITHOUT_CLASSIFICATION	2.2428927677243778E-4	DESIGN	6.363862193088866E-6	DEFECT	2.616913351655454E-7	IMPLEMENTATION	9.389696297888197E-8	TEST	8.925890530147931E-8	DOCUMENTATION
//TODO: old version did not require hashmap lookup: //keys[collectionOwner].getIdentifier()	DEFECT	0.9875166188485707	WITHOUT_CLASSIFICATION	0.011272501763624309	IMPLEMENTATION	0.001145946596365637	DEFECT	6.433131039597186E-5	DESIGN	3.032256871385186E-7	DOCUMENTATION	2.982553562407947E-7	TEST
//TODO: when this is the entry point, we should use an INNER_JOIN for fetching the many-to-many elements!	DEFECT	0.8538401024375846	WITHOUT_CLASSIFICATION	0.14342632574617362	DESIGN	0.0026260762911004855	DEFECT	3.676852222658923E-5	DOCUMENTATION	3.639774610592347E-5	IMPLEMENTATION	3.432925680879591E-5	TEST
// this is only needed (afaict) for processing results from the query cache; // however, this cannot possibly work in the case of discovered types...	DEFECT	0.5397037912825468	DEFECT	0.4602925877235283	WITHOUT_CLASSIFICATION	3.5928320915149784E-6	DESIGN	1.4394537283908936E-8	TEST	1.367519798072635E-8	DOCUMENTATION	9.209816983838258E-11	IMPLEMENTATION
//TODO: this requires that the collection is defined after the //      referenced property in the mapping file (ok?)	DEFECT	0.9973049250745056	WITHOUT_CLASSIFICATION	0.0013745368700771735	DESIGN	9.030161033172823E-4	DEFECT	3.434461153497941E-4	IMPLEMENTATION	4.877595220600194E-5	TEST	2.5299884544154417E-5	DOCUMENTATION
//TODO: is this completely correct?	DEFECT	0.969499017498887	DESIGN	0.029737536071940972	WITHOUT_CLASSIFICATION	5.455655771387289E-4	IMPLEMENTATION	1.1119681457621506E-4	TEST	1.0038573238677693E-4	DEFECT	6.298305070306413E-6	DOCUMENTATION
// three general cases we check here as to whether to render a physical SQL join: // 1) is our parent a DotNode as well?  If so, our property reference is // 	DEFECT	0.9965000089008723	WITHOUT_CLASSIFICATION	0.003427277861756163	DESIGN	7.173989144672744E-5	DEFECT	9.67043539537245E-7	DOCUMENTATION	3.2327981442390655E-9	TEST	3.06958695602647E-9	IMPLEMENTATION
// TODO : currently we really do not handle ValueInclusion.PARTIAL... // ValueInclusion.PARTIAL would indicate parts of a component need to // be included in the select; currently we then just render the entire // component into the select clause in that case.	DEFECT	0.7363090029407663	IMPLEMENTATION	0.2542039503373665	DESIGN	0.009436429532741326	DEFECT	4.083331225857436E-5	WITHOUT_CLASSIFICATION	9.690608522194432E-6	DOCUMENTATION	9.326834512302654E-8	TEST
//TODO: inexact, what we really need to know is: are any outer joins used?	DEFECT	0.9999882506385289	DESIGN	4.654495206761549E-6	WITHOUT_CLASSIFICATION	4.4090469183445965E-6	IMPLEMENTATION	2.464353170481082E-6	DOCUMENTATION	1.395434184121212E-7	DEFECT	8.192275706906841E-8	TEST
// todo : this call will not work for anything other than pojos!	DEFECT	0.926079125186184	DEFECT	0.07221453257756445	WITHOUT_CLASSIFICATION	0.0011114017326626922	IMPLEMENTATION	5.875464250115088E-4	DESIGN	4.873725122789346E-6	TEST	2.520353454705156E-6	DOCUMENTATION
//TODO: currently we don't know a SessionFactory reference when building the Tuplizer //      THIS IS A BUG (embedded-xml=false on component) // TODO : fix this after HHH-1907 is complete	DEFECT	0.999999547487338	DESIGN	4.0653572531230564E-7	DEFECT	3.477994182212436E-8	IMPLEMENTATION	1.0911704253906747E-8	DOCUMENTATION	2.8302370324661123E-10	TEST	2.2669084136288216E-12	WITHOUT_CLASSIFICATION
// TODO: this disables laziness even in non-pojo entity modes:	DEFECT	0.5833826558894096	WITHOUT_CLASSIFICATION	0.41358271961895815	DESIGN	0.00239082682329196	IMPLEMENTATION	2.8185784412678084E-4	DOCUMENTATION	2.2108922402115557E-4	TEST	1.4085060019232526E-4	DEFECT
//TODO: currently broken for unique-key references (does not detect //      change to unique key property of the associated object) //the owner of the association is not the owner of the id	DEFECT	0.5245074326139645	WITHOUT_CLASSIFICATION	0.32815367338274753	DESIGN	0.12559792829266347	DEFECT	0.014097264441203539	DOCUMENTATION	0.005329398062374842	IMPLEMENTATION	0.0023143032070461044	TEST
//TODO: entities CAN be compared, by PK, fix this! -> only if/when we can extract the id values....	DEFECT	0.9903621659795611	DESIGN	0.005848401700935845	DEFECT	0.0035855495656189453	WITHOUT_CLASSIFICATION	1.0188360512909162E-4	IMPLEMENTATION	8.126946129789089E-5	TEST	2.0729687457114246E-5	DOCUMENTATION
//TODO: entities CAN be compared, by PK and entity name, fix this!	DEFECT	0.9986587303283133	DESIGN	7.573735178788819E-4	WITHOUT_CLASSIFICATION	5.232796630588258E-4	DEFECT	3.908471075636126E-5	IMPLEMENTATION	1.654435376309008E-5	TEST	4.987426229690472E-6	DOCUMENTATION
//TODO: this is kinda inconsistent with CollectionType	DEFECT	0.9570621447181101	DESIGN	0.02234592077795933	WITHOUT_CLASSIFICATION	0.007735998719454101	IMPLEMENTATION	0.00674157081723695	TEST	0.005879566078566729	DEFECT	2.3479888867270567E-4	DOCUMENTATION
//TODO: would be nice to use false, but issues with MS SQL	DEFECT	0.9885501046426165	DESIGN	0.005518241283915944	DEFECT	0.003029673110389271	WITHOUT_CLASSIFICATION	0.0022434323917099185	IMPLEMENTATION	6.15266349662927E-4	TEST	4.3282221705608574E-5	DOCUMENTATION
// TODO: does not work for EntityMode.DOM4J yet!	DEFECT	0.9031246832359415	DEFECT	0.09452502337306688	DESIGN	0.0014841735386960297	IMPLEMENTATION	7.692872313067911E-4	TEST	8.384425757488535E-5	DOCUMENTATION	1.2988363413935484E-5	WITHOUT_CLASSIFICATION
//TODO: currently broken for unique-key references (does not detect //      change to unique key property of the associated object)	DEFECT	0.8676191479131478	DESIGN	0.049417100696226166	WITHOUT_CLASSIFICATION	0.03775762783204318	DEFECT	0.025334616173170208	IMPLEMENTATION	0.018348742146035404	DOCUMENTATION	0.0015227652393773098	TEST
//TODO: not really completely correct, since //      the uoe could occur while resolving //      associations, leaving the PC in an //      inconsistent state	DEFECT	0.8385396982304403	DEFECT	0.09862801421517337	DESIGN	0.05511636771313225	WITHOUT_CLASSIFICATION	0.0052079912488005664	TEST	0.002041904342405464	IMPLEMENTATION	4.660242500482378E-4	DOCUMENTATION
// could happen for custom Criteria impls.  Not likely, but... // 	DEFECT	0.4970224034935775	DEFECT	0.4741692280740394	DESIGN	0.026827652896035694	WITHOUT_CLASSIFICATION	0.0012116421164098496	IMPLEMENTATION	7.653351879017879E-4	TEST	3.7382320357279205E-6	DOCUMENTATION
// This does not support the Cache SQL 'DISTINCT BY (comma-list)' extensions, // but this extension is not supported through Hibernate anyway.	DEFECT	0.999521924244694	WITHOUT_CLASSIFICATION	4.72899285271344E-4	DESIGN	4.921961866817436E-6	DEFECT	2.0661092265152806E-7	TEST	3.781842549043878E-8	DOCUMENTATION	1.0078819748109312E-8	IMPLEMENTATION
// note that this timestamp is not correct if the connection provider // returns an older JDBC connection that was associated with a // transaction that was already begun before openSession() was called // (don't know any possible solution to this!)	DEFECT	0.9215120824698032	WITHOUT_CLASSIFICATION	0.06646806277584609	DESIGN	0.010472401742451053	IMPLEMENTATION	0.0015405595909580084	DEFECT	4.719145890333217E-6	TEST	2.1742750512156956E-6	DOCUMENTATION
//no need to take a snapshot - this is a  //performance optimization, but not really //important, except for entities with huge  //mutable property values	DEFECT	0.9989040914277846	WITHOUT_CLASSIFICATION	7.872414572935375E-4	DEFECT	3.0679557355795976E-4	DESIGN	1.0119668355026949E-6	TEST	8.20464218339785E-7	DOCUMENTATION	3.9110310166302753E-8	IMPLEMENTATION
// TODO : this really needs to be delayed unitl after we definitively know the operand node type; // where this is currently a problem is parameters for which where we cannot unequivocally // resolve an expected type	DEFECT	0.9943810762955113	DESIGN	0.002696643989276333	DEFECT	0.0024691160020185498	WITHOUT_CLASSIFICATION	3.4432013615899755E-4	IMPLEMENTATION	1.0793832390598886E-4	DOCUMENTATION	9.052531286802772E-7	TEST
// First, validate all the enabled filters... //TODO: this implementation has bad performance	DEFECT	0.9983463174315977	IMPLEMENTATION	0.0012100508316042781	DESIGN	3.136463102339945E-4	DEFECT	1.2450671157312643E-4	WITHOUT_CLASSIFICATION	3.6172658222733515E-6	DOCUMENTATION	1.8614491684634572E-6	TEST
// TODO: what if batchUpdate is a callablestatement ? // calls executeBatch()	DEFECT	0.6087868858173398	DESIGN	0.2835248466720228	WITHOUT_CLASSIFICATION	0.056905032334000634	DEFECT	0.041367574051580605	IMPLEMENTATION	0.0093115340395276	TEST	1.0412708552884028E-4	DOCUMENTATION
// assume that the row was not there since it previously had only null // values, so do an INSERT instead //TODO: does not respect dynamic-insert	DEFECT	0.9999897326896288	WITHOUT_CLASSIFICATION	4.99215027918503E-6	DEFECT	4.7198426496418554E-6	DESIGN	4.2447104378049773E-7	TEST	1.1033795698809589E-7	DOCUMENTATION	2.050844155965877E-8	IMPLEMENTATION
//TODO: passing null here, because this method is not really used for DOM4J at the moment //      but it is still a bug, if we don't get rid of this!	DEFECT	0.9875607100036417	DESIGN	0.007976989185080396	WITHOUT_CLASSIFICATION	0.002856201216054499	DEFECT	0.0013742374039045755	IMPLEMENTATION	2.0822261099352765E-4	TEST	2.3639580325287013E-5	DOCUMENTATION
//note that this implementation is kinda broken //for components with many-to-one associations	DEFECT	0.9844792541672447	WITHOUT_CLASSIFICATION	0.014891885304569296	DESIGN	4.732858040541626E-4	DEFECT	1.3151722617703968E-4	TEST	2.127268851599441E-5	IMPLEMENTATION	2.784809438841284E-6	DOCUMENTATION
// TODO: at the point where we are resolving collection references, we don't // know if the uk value has been resolved (depends if it was earlier or // later in the mapping document) - now, we could try and use e.getStatus() // to decide to semiResolve(), trouble is that initializeEntity() reuses // the same array for resolved and hydrated values	DEFECT	0.9690684167331911	DESIGN	0.01819967265393776	DEFECT	0.011242300532371633	IMPLEMENTATION	0.0010685471450124855	DOCUMENTATION	4.208408277614381E-4	WITHOUT_CLASSIFICATION	2.221077255949949E-7	TEST
//TODO: This is assertion is disabled because there is a bug that means the //	DEFECT	0.9690447808099706	WITHOUT_CLASSIFICATION	0.024375262699348244	DEFECT	0.005290718481149233	DESIGN	0.0010739169120534235	IMPLEMENTATION	2.129125768194025E-4	TEST	2.408520659041235E-6	DOCUMENTATION
// This doesn't actually seem to work but it *might* // work on some dbs. Also it doesn't work if there // are multiple columns of results because it // is not accounting for the suffix: // return new String[] { getDiscriminatorColumnName() };	DEFECT	0.7927808249955965	DESIGN	0.20695462882340618	WITHOUT_CLASSIFICATION	2.6453335221486097E-4	DEFECT	1.0277161673771149E-8	TEST	2.5412778255660875E-9	DOCUMENTATION	1.03427598353884E-11	IMPLEMENTATION
// TODO: Deal with the "optional" attribute in the <join> mapping; // this code assumes that optional defaults to "true" because it // doesn't actually seem to work in the fetch="join" code // // Note that actual proper handling of optional-ality here is actually // more involved than this patch assumes.  Remember that we might have // multiple <join/> mappings associated with a single entity.  Really // a couple of things need to happen to properly handle optional here: //  1) First and foremost, when handling multiple <join/>s, we really //      should be using the entity root table as the driving table; //      another option here would be to choose some non-optional joined //      table to use as the driving table.  In all likelihood, just using //      the root table is much simplier //  2) Need to add the FK columns corresponding to each joined table //      to the generated select list; these would then be used when //      iterating the result set to determine whether all non-optional //      data is present // My initial thoughts on the best way to deal with this would be // to introduce a new SequentialSelect abstraction that actually gets // generated in the persisters (ok, SingleTable...) and utilized here. // It would encapsulated all this required optional-ality checking...	DEFECT	0.9993909415286586	DESIGN	3.7250307187189444E-4	WITHOUT_CLASSIFICATION	2.3456815796820503E-4	DEFECT	1.3481977264128569E-6	DOCUMENTATION	4.105677816241209E-7	TEST	2.2847599322314206E-7	IMPLEMENTATION
// todo : what else to do here?	DESIGN	0.9332751443179251	WITHOUT_CLASSIFICATION	0.06340768710954721	IMPLEMENTATION	0.0031552161114035714	DESIGN	1.512114508172353E-4	DEFECT	7.772852709246084E-6	TEST	2.9681575974830752E-6	DOCUMENTATION
//put() has nowait semantics, is this really appropriate? //note that it needs to be async replication, never local or sync	DESIGN	0.7194057905708342	WITHOUT_CLASSIFICATION	0.2803036566550766	DESIGN	2.8277734245799946E-4	DEFECT	6.045679762606838E-6	DOCUMENTATION	1.6352532285286565E-6	IMPLEMENTATION	9.449864007167721E-8	TEST
// 'hibernate.temp.use_jdbc_metadata_defaults' is a temporary magic value. // The need for it is intended to be alleviated with future developement, thus it is // not defined as an Environment constant... // // it is used to control whether we should consult the JDBC metadata to determine // certain Settings default values; it is useful to *not* do this when the database // may not be available (mainly in tools usage).	DESIGN	0.9895284205586005	WITHOUT_CLASSIFICATION	0.010471579022237384	DESIGN	2.0613552160192906E-10	DEFECT	1.7709471201456594E-10	TEST	3.592464792436744E-11	DOCUMENTATION	7.330118424700427E-15	IMPLEMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.9761256630359908	DESIGN	0.023825386641504517	WITHOUT_CLASSIFICATION	2.9199780136910868E-5	IMPLEMENTATION	1.0713634499966188E-5	DEFECT	5.640274111255916E-6	TEST	3.3966337567333737E-6	DOCUMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.9761256630359908	DESIGN	0.023825386641504517	WITHOUT_CLASSIFICATION	2.9199780136910868E-5	IMPLEMENTATION	1.0713634499966188E-5	DEFECT	5.640274111255916E-6	TEST	3.3966337567333737E-6	DOCUMENTATION
// todo : eventually merge this with TreeCache and just add optional opt-lock support there.	DESIGN	0.9963001793552133	WITHOUT_CLASSIFICATION	0.0030464693750753466	IMPLEMENTATION	6.520591370011379E-4	DESIGN	1.0065215146975921E-6	DOCUMENTATION	2.2990310951574612E-7	TEST	5.570808598572255E-8	DEFECT
// can happen because of the multiple ways Cache.remove() // can be invoked :(	DESIGN	0.9999895356590626	WITHOUT_CLASSIFICATION	9.940779163635314E-6	DESIGN	5.195920263907184E-7	DEFECT	2.339178846303436E-9	DOCUMENTATION	1.1595889510088458E-9	IMPLEMENTATION	4.709797156481107E-10	TEST
// work around the "feature" where tree cache is validating the // inserted node during the next transaction.  no idea...	DESIGN	0.6088296867180395	WITHOUT_CLASSIFICATION	0.3892086746261043	DESIGN	0.001957207907777948	DEFECT	2.4564171469994066E-6	IMPLEMENTATION	1.2495035682283354E-6	DOCUMENTATION	7.248273631437979E-7	TEST
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.9998615929488017	DESIGN	6.414659705297389E-5	DEFECT	5.450749823680242E-5	DOCUMENTATION	1.69881916643923E-5	WITHOUT_CLASSIFICATION	2.0330707311064766E-6	IMPLEMENTATION	7.316935130855047E-7	TEST
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.9998615929488017	DESIGN	6.414659705297389E-5	DEFECT	5.450749823680242E-5	DOCUMENTATION	1.69881916643923E-5	WITHOUT_CLASSIFICATION	2.0330707311064766E-6	IMPLEMENTATION	7.316935130855047E-7	TEST
// FIXME Hacky workaround to JBCACHE-1202	DESIGN	0.9999506458609327	DESIGN	4.9068011502714544E-5	DEFECT	2.436907114449984E-7	IMPLEMENTATION	3.4260971190628906E-8	DOCUMENTATION	4.636881209669131E-9	WITHOUT_CLASSIFICATION	3.539000780442562E-9	TEST
// FIXME Hacky workaround to JBCACHE-1202	DESIGN	0.9999506458609327	DESIGN	4.9068011502714544E-5	DEFECT	2.436907114449984E-7	IMPLEMENTATION	3.4260971190628906E-8	DOCUMENTATION	4.636881209669131E-9	WITHOUT_CLASSIFICATION	3.539000780442562E-9	TEST
// TODO: I considered validating TS cache config here, // but decided to defer unti getTimestampsCacheInstance() in case the  // cache is never actually used	DESIGN	0.9148008008162727	IMPLEMENTATION	0.08497897905741193	DESIGN	1.9231926942499798E-4	WITHOUT_CLASSIFICATION	2.404145018552834E-5	DEFECT	3.5768711490001735E-6	DOCUMENTATION	2.8253555590913815E-7	TEST
// TODO Is this a valid operation on a timestamps cache?	DESIGN	0.9977882950188939	DESIGN	0.0013712424292689745	IMPLEMENTATION	6.935896492317756E-4	WITHOUT_CLASSIFICATION	7.521053368212778E-5	TEST	5.182868267831029E-5	DEFECT	1.9833686244875746E-5	DOCUMENTATION
// TODO Is this a valid operation on a timestamps cache?	DESIGN	0.9977882950188939	DESIGN	0.0013712424292689745	IMPLEMENTATION	6.935896492317756E-4	WITHOUT_CLASSIFICATION	7.521053368212778E-5	TEST	5.182868267831029E-5	DEFECT	1.9833686244875746E-5	DOCUMENTATION
// TODO Why not use the timestamp in a DataVersion?	DESIGN	0.9981083297725726	DESIGN	0.0018396392151095794	IMPLEMENTATION	3.3554299876458135E-5	DEFECT	1.4833863328469642E-5	DOCUMENTATION	3.4345373795290907E-6	TEST	2.0831173343617607E-7	WITHOUT_CLASSIFICATION
// can happen because of the multiple ways Cache.remove() // can be invoked :(	DESIGN	0.9999895356590626	WITHOUT_CLASSIFICATION	9.940779163635314E-6	DESIGN	5.195920263907184E-7	DEFECT	2.339178846303436E-9	DOCUMENTATION	1.1595889510088458E-9	IMPLEMENTATION	4.709797156481107E-10	TEST
// work around the "feature" where tree cache is validating the // inserted node during the next transaction. no idea...	DESIGN	0.7493198893758543	WITHOUT_CLASSIFICATION	0.24962114590884474	DESIGN	0.001054874118467784	DEFECT	2.439972680841435E-6	IMPLEMENTATION	1.100326544139563E-6	DOCUMENTATION	5.502976082221336E-7	TEST
//swaldman 2004-02-07: modify to allow null values to signify fall through to c3p0 PoolConfig defaults	DESIGN	0.9996995666807253	WITHOUT_CLASSIFICATION	2.637143140064574E-4	DESIGN	3.643746469082894E-5	DEFECT	1.53147246757435E-7	IMPLEMENTATION	9.273124949836359E-8	DOCUMENTATION	3.5662081046716826E-8	TEST
// turn hibernate.c3p0.* into c3p0.*, so c3p0 // gets a chance to see all hibernate.c3p0.*	DESIGN	0.9999899786292018	WITHOUT_CLASSIFICATION	1.0021044531074504E-5	DESIGN	1.8029588137599074E-10	DEFECT	6.912841971934514E-11	DOCUMENTATION	5.4025503567296034E-11	IMPLEMENTATION	2.281731019059592E-11	TEST
//TODO: this bit actually has to be called after all cascades! //      but since identity insert is called *synchronously*, //      instead of asynchronously as other actions, it isn't	DESIGN	0.8985182151348398	WITHOUT_CLASSIFICATION	0.10114118113762649	DESIGN	3.1841900704392964E-4	DEFECT	1.1266794660501905E-5	DOCUMENTATION	7.45883231905179E-6	TEST	3.4590935103227738E-6	IMPLEMENTATION
//TODO: reenable if we also fix the above todo	DESIGN	0.9740733027338132	DESIGN	0.02479516517825425	WITHOUT_CLASSIFICATION	5.498746391425748E-4	TEST	2.9448263116994296E-4	DEFECT	2.2075408295298122E-4	IMPLEMENTATION	6.642073466692783E-5	DOCUMENTATION
//TODO: inefficient if that cache is just going to ignore the updated state!	DESIGN	0.8671878816524009	WITHOUT_CLASSIFICATION	0.0818512377342065	DESIGN	0.05090020888303465	IMPLEMENTATION	5.1132865049248566E-5	TEST	9.250251364610217E-6	DOCUMENTATION	2.886139440949806E-7	DEFECT
// we may be screwed here since the collection action is about to execute // and we do not know the final owner key value	DESIGN	0.999915695645977	WITHOUT_CLASSIFICATION	8.418085449185253E-5	DESIGN	8.530521982438836E-8	DEFECT	3.6277071996040456E-8	IMPLEMENTATION	1.3132801608299551E-9	TEST	6.03959126029437E-10	DOCUMENTATION
/** Create an action that will evict collection and entity regions based on queryspaces (table names).	DESIGN	0.8246504057882804	WITHOUT_CLASSIFICATION	0.16135836010165647	DESIGN	0.011907243323310012	IMPLEMENTATION	0.0018751975051629973	DEFECT	1.0840313962937645E-4	DOCUMENTATION	1.0039014196082198E-4	TEST
// todo : what else to do here?	DESIGN	0.9332751443179251	WITHOUT_CLASSIFICATION	0.06340768710954721	IMPLEMENTATION	0.0031552161114035714	DESIGN	1.512114508172353E-4	DEFECT	7.772852709246084E-6	TEST	2.9681575974830752E-6	DOCUMENTATION
// todo : modify the class definition if not already transformed...	DESIGN	0.9993473201023919	WITHOUT_CLASSIFICATION	6.112171027321258E-4	DESIGN	3.3524047646750436E-5	IMPLEMENTATION	7.532517899761632E-6	DEFECT	2.2273859774478825E-7	DOCUMENTATION	1.8349073171858875E-7	TEST
// todo : what else to do here?	DESIGN	0.9332751443179251	WITHOUT_CLASSIFICATION	0.06340768710954721	IMPLEMENTATION	0.0031552161114035714	DESIGN	1.512114508172353E-4	DEFECT	7.772852709246084E-6	TEST	2.9681575974830752E-6	DOCUMENTATION
// this is called by SessionFactory irregardless; we just disregard here; // could also add a check to SessionFactory to only conditionally call start	DESIGN	0.8243122322884193	WITHOUT_CLASSIFICATION	0.17556931242363727	DESIGN	1.0600290173857586E-4	IMPLEMENTATION	6.765862414622325E-6	DEFECT	3.4603570100594245E-6	DOCUMENTATION	2.2261667802425065E-6	TEST
// this is called by SessionFactory irregardless; we just disregard here; // could also add a check to SessionFactory to only conditionally call stop	DESIGN	0.9765588392497634	WITHOUT_CLASSIFICATION	0.02336454720677983	DESIGN	6.853297052441665E-5	IMPLEMENTATION	5.674761685967229E-6	DEFECT	1.2710018484545803E-6	DOCUMENTATION	1.1348093978859749E-6	TEST
//TODO: to handle concurrent writes correctly, this should return a Lock to the client	DESIGN	0.9992173661964181	DESIGN	7.500331779440901E-4	DEFECT	9.871596911354674E-6	IMPLEMENTATION	9.801623729312412E-6	DOCUMENTATION	7.3556891177133745E-6	TEST	5.571715879507895E-6	WITHOUT_CLASSIFICATION
//put() has nowait semantics, is this really appropriate? //note that it needs to be async replication, never local or sync	DESIGN	0.7194057905708342	WITHOUT_CLASSIFICATION	0.2803036566550766	DESIGN	2.8277734245799946E-4	DEFECT	6.045679762606838E-6	DOCUMENTATION	1.6352532285286565E-6	IMPLEMENTATION	9.449864007167721E-8	TEST
//TODO: to handle concurrent writes correctly, the client should pass in a Lock	DESIGN	0.9587831376879742	DESIGN	0.020922443296156903	WITHOUT_CLASSIFICATION	0.019040626848236236	DEFECT	5.111670300657726E-4	TEST	3.820925434862156E-4	DOCUMENTATION	3.605325940807498E-4	IMPLEMENTATION
//TODO: assumes all collections disassemble to an array!	DESIGN	0.999929091623888	WITHOUT_CLASSIFICATION	5.144196504523718E-5	DEFECT	1.1817426989804456E-5	IMPLEMENTATION	4.47281132368472E-6	DESIGN	2.647675641714774E-6	TEST	5.284971115898963E-7	DOCUMENTATION
//TODO: reuse the PreLoadEvent	DESIGN	0.4000635683863991	WITHOUT_CLASSIFICATION	0.33332988438681876	DESIGN	0.2645916319839632	IMPLEMENTATION	0.0016279720288544185	DOCUMENTATION	2.1611393126693695E-4	TEST	1.708292826975641E-4	DEFECT
// todo: this was added to support initializing an entity's EntityEntry snapshot during reattach; // this should be refactored to instead expose a method to assemble a EntityEntry based on this // state for return.	DESIGN	0.9789945084630024	DESIGN	0.021004720771974274	WITHOUT_CLASSIFICATION	6.121438707886179E-7	DEFECT	1.560422675686757E-7	TEST	1.3426341086272595E-9	IMPLEMENTATION	1.2362508412291564E-9	DOCUMENTATION
// todo : what is the implication of this?	DESIGN	0.8052304605851835	WITHOUT_CLASSIFICATION	0.17710453905094284	DESIGN	0.01100914401435591	DOCUMENTATION	0.0051852776685580955	DEFECT	0.001235691683522389	IMPLEMENTATION	2.3488699743722978E-4	TEST
// use COUNT as the default.  This mimics the old behavior, although // NONE might be a better option moving forward in the case of callable	DESIGN	0.8284197654595794	WITHOUT_CLASSIFICATION	0.17155298443929234	DESIGN	2.7026087203520685E-5	DEFECT	1.415501080839586E-7	IMPLEMENTATION	7.555662023455211E-8	TEST	6.90719642021061E-9	DOCUMENTATION
/* TODO: joinKeyColumnName & foreignKeyColumnName should be called either here or at a	DESIGN	0.5408418434061737	DESIGN	0.44313156267875425	IMPLEMENTATION	0.008408798746661518	DEFECT	0.006215626222765688	WITHOUT_CLASSIFICATION	0.0011586910471790672	TEST	2.434778984656481E-4	DOCUMENTATION
//TODO: suck this into initLaziness!	DESIGN	0.9923244577825624	DESIGN	0.003366172476266568	IMPLEMENTATION	0.0022953486308385745	WITHOUT_CLASSIFICATION	0.0011422026310279805	DEFECT	4.973505070506318E-4	DOCUMENTATION	3.744679722538378E-4	TEST
// we have to set up the table later!! yuck	DESIGN	0.9989268823107842	WITHOUT_CLASSIFICATION	0.0010716669261459848	DESIGN	1.174842543001957E-6	DEFECT	2.0230252542656138E-7	IMPLEMENTATION	5.6179257068033556E-8	TEST	1.743874434371293E-8	DOCUMENTATION
//TODO: better to degrade to lazy="false" if uninstrumented	DESIGN	0.34160326624626575	DESIGN	0.3371968931696021	IMPLEMENTATION	0.31461155287695514	WITHOUT_CLASSIFICATION	0.003470948766843494	TEST	0.0024726159481701857	DOCUMENTATION	6.447229921633601E-4	DEFECT
// todo : again, how *should* this work for non-pojo entities?	DESIGN	0.9464522748611398	DESIGN	0.03386469741961723	WITHOUT_CLASSIFICATION	0.01407145784417439	IMPLEMENTATION	0.005557130024607749	DEFECT	3.7054225475339206E-5	TEST	1.7385624985432714E-5	DOCUMENTATION
// TODO: this is a bit of copy/paste from IndexedCollection.createPrimaryKey()	DESIGN	0.6620248510229423	DESIGN	0.2975823060879562	IMPLEMENTATION	0.03835010507841184	DEFECT	0.0016616927844952853	WITHOUT_CLASSIFICATION	3.6933027658271654E-4	TEST	1.1714749611675692E-5	DOCUMENTATION
// This inner class implements a case statement....perhaps im being a bit over-clever here	DESIGN	0.9815116882361826	DESIGN	0.01837012171342228	WITHOUT_CLASSIFICATION	9.356682422895572E-5	IMPLEMENTATION	2.382840241392157E-5	DEFECT	7.155484861153977E-7	TEST	7.9275266222607E-8	DOCUMENTATION
//TODO: bad implementation, cos it depends upon ordering of mapping doc //      fixing this requires that Collection/PersistentClass gain access //      to the Mappings reference from Configuration (or the filterDefinitions //      map directly) sometime during Configuration.buildSessionFactory //      (after all the types/filter-defs are known and before building //      persisters).	DESIGN	0.9903533523722254	DESIGN	0.009400226887897935	IMPLEMENTATION	2.2053608860582484E-4	DEFECT	1.6693206768101502E-5	WITHOUT_CLASSIFICATION	8.796362144894193E-6	DOCUMENTATION	3.950823577937381E-7	TEST
//use of a stringbuffer to workaround a JDK bug	DESIGN	0.9998590222605315	DESIGN	7.966715738315055E-5	WITHOUT_CLASSIFICATION	5.801483262788699E-5	DEFECT	2.5985825376649586E-6	IMPLEMENTATION	6.466034638714807E-7	DOCUMENTATION	5.056345595371275E-8	TEST
// hack/workaround as sqlquery impl depend on having a key.	DESIGN	0.9999979211696148	DESIGN	1.5789770642899462E-6	DEFECT	4.496378448907402E-7	IMPLEMENTATION	4.6470194296061594E-8	WITHOUT_CLASSIFICATION	2.476056146381929E-9	TEST	1.2692255646645567E-9	DOCUMENTATION
//FIXME: get the PersistentClass	DESIGN	0.5203641661768575	DESIGN	0.35966476676044973	WITHOUT_CLASSIFICATION	0.11672743305487641	IMPLEMENTATION	0.002431431641150282	TEST	6.957947899611358E-4	DEFECT	1.1640757670502066E-4	DOCUMENTATION
//FIXME: get the PersistentClass	DESIGN	0.5203641661768575	DESIGN	0.35966476676044973	WITHOUT_CLASSIFICATION	0.11672743305487641	IMPLEMENTATION	0.002431431641150282	TEST	6.957947899611358E-4	DEFECT	1.1640757670502066E-4	DOCUMENTATION
//Icky workaround for MySQL bug:	DESIGN	0.9980131257961233	DESIGN	0.001404115590732524	WITHOUT_CLASSIFICATION	5.666590957606151E-4	DEFECT	8.675344637460828E-6	IMPLEMENTATION	6.189459778166659E-6	DOCUMENTATION	1.2347129680650507E-6	TEST
//TODO: Somehow add the newly created foreign keys to the internal collection	DESIGN	0.8403710079700014	WITHOUT_CLASSIFICATION	0.15585548842019087	IMPLEMENTATION	0.0016409408750151008	DEFECT	0.0015285087892032928	DOCUMENTATION	5.766025651738615E-4	DESIGN	2.745138041537485E-5	TEST
//TODO possibly relax that	DESIGN	0.781229524386708	DESIGN	0.21773192113201198	WITHOUT_CLASSIFICATION	7.534133416026461E-4	IMPLEMENTATION	1.4197775860525668E-4	DOCUMENTATION	8.173887252180308E-5	TEST	6.142450855022007E-5	DEFECT
//TODO possibly relax that	DESIGN	0.781229524386708	DESIGN	0.21773192113201198	WITHOUT_CLASSIFICATION	7.534133416026461E-4	IMPLEMENTATION	1.4197775860525668E-4	DOCUMENTATION	8.173887252180308E-5	TEST	6.142450855022007E-5	DEFECT
//TODO possibly relax that	DESIGN	0.781229524386708	DESIGN	0.21773192113201198	WITHOUT_CLASSIFICATION	7.534133416026461E-4	IMPLEMENTATION	1.4197775860525668E-4	DOCUMENTATION	8.173887252180308E-5	TEST	6.142450855022007E-5	DEFECT
//use of a stringbuffer to workaround a JDK bug	DESIGN	0.9998590222605315	DESIGN	7.966715738315055E-5	WITHOUT_CLASSIFICATION	5.801483262788699E-5	DEFECT	2.5985825376649586E-6	IMPLEMENTATION	6.466034638714807E-7	DOCUMENTATION	5.056345595371275E-8	TEST
//use a degenerated strategy for backward compatibility	DESIGN	0.9987145364163248	WITHOUT_CLASSIFICATION	0.0012845817681446262	DESIGN	6.339830417796131E-7	IMPLEMENTATION	1.1627107927368384E-7	TEST	9.714993075772029E-8	DEFECT	3.441147869889342E-8	DOCUMENTATION
// Sets can be just a view of a part of another collection. // do we need to copy it to be sure it won't be changing // underneath us? // ie. this.set.addAll(set);	DESIGN	0.876684671270307	DESIGN	0.12196886639806638	WITHOUT_CLASSIFICATION	0.0011839951024690632	DEFECT	1.5946881100795606E-4	IMPLEMENTATION	2.4687373706819225E-6	TEST	5.296807789754669E-7	DOCUMENTATION
//note that i parameter is now unused (delete it?)	DESIGN	0.961832763391854	DESIGN	0.03790911492829658	WITHOUT_CLASSIFICATION	2.4752459580199265E-4	IMPLEMENTATION	9.227590982624039E-6	TEST	1.2769844399280252E-6	DEFECT	9.250862510376987E-8	DOCUMENTATION
//just to help out during the load (ugly, i know)	DESIGN	0.9985667303305067	WITHOUT_CLASSIFICATION	8.18119149669502E-4	DESIGN	5.866182907124885E-4	IMPLEMENTATION	1.978463018912001E-5	DEFECT	6.5706877069139466E-6	TEST	2.1769112153009813E-6	DOCUMENTATION
// TODO : safe to interpret "map.remove(key) == null" as non-dirty?	DESIGN	0.548580529203261	DESIGN	0.2950951889639411	DEFECT	0.1067524472998937	IMPLEMENTATION	0.049281005638188304	WITHOUT_CLASSIFICATION	1.924915069810911E-4	DOCUMENTATION	9.833738773480343E-5	TEST
// yick!  need this for proper serialization/deserialization handling...	DESIGN	0.6843599899874687	DEFECT	0.16721961089455686	WITHOUT_CLASSIFICATION	0.1460865250759615	DESIGN	0.0017707001675934368	DOCUMENTATION	5.373797348759179E-4	TEST	2.5794139543499525E-5	IMPLEMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.9761256630359908	DESIGN	0.023825386641504517	WITHOUT_CLASSIFICATION	2.9199780136910868E-5	IMPLEMENTATION	1.0713634499966188E-5	DEFECT	5.640274111255916E-6	TEST	3.3966337567333737E-6	DOCUMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.9761256630359908	DESIGN	0.023825386641504517	WITHOUT_CLASSIFICATION	2.9199780136910868E-5	IMPLEMENTATION	1.0713634499966188E-5	DEFECT	5.640274111255916E-6	TEST	3.3966337567333737E-6	DOCUMENTATION
//yuck!	DESIGN	0.980489445662289	WITHOUT_CLASSIFICATION	0.018865209619467197	DESIGN	5.802669896983317E-4	DEFECT	4.5661626826745635E-5	DOCUMENTATION	1.3613877743080528E-5	TEST	5.802223975666029E-6	IMPLEMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.9761256630359908	DESIGN	0.023825386641504517	WITHOUT_CLASSIFICATION	2.9199780136910868E-5	IMPLEMENTATION	1.0713634499966188E-5	DEFECT	5.640274111255916E-6	TEST	3.3966337567333737E-6	DOCUMENTATION
// TODO : not sure this is correct, could not find docs on how to do this.	DESIGN	0.9767099265812618	DESIGN	0.0231524378734785	DEFECT	1.1615532113894251E-4	IMPLEMENTATION	1.5135618524577395E-5	DOCUMENTATION	6.271337079359279E-6	TEST	7.326851666119965E-8	WITHOUT_CLASSIFICATION
//HSQL has no Blob/Clob support .... but just put these here for now!	DESIGN	0.9935844265518273	WITHOUT_CLASSIFICATION	0.006258800076907643	DESIGN	1.4357843934293378E-4	IMPLEMENTATION	6.847214983208226E-6	TEST	5.3226089608629444E-6	DEFECT	1.0251079780034752E-6	DOCUMENTATION
// does this need holdlock also? : return tableName + " with (updlock, rowlock, holdlock)";	DESIGN	0.5513420327528253	WITHOUT_CLASSIFICATION	0.4483494006935118	DESIGN	1.678320447682087E-4	DEFECT	9.691679686208484E-5	TEST	4.077428747034859E-5	IMPLEMENTATION	3.043424562142076E-6	DOCUMENTATION
// sql-server, at least needed this dropped after use; strange!	DESIGN	0.9991246971556771	WITHOUT_CLASSIFICATION	8.321964067507895E-4	DESIGN	2.392883820234558E-5	TEST	1.7589104409731414E-5	IMPLEMENTATION	1.1208557651551033E-6	DOCUMENTATION	4.6763919488100936E-7	DEFECT
// todo : is there really any reason to kkeep trying if this fails once?	DESIGN	0.7611148837391447	WITHOUT_CLASSIFICATION	0.16342255627717664	DESIGN	0.07542725741323582	DEFECT	1.7357858276803845E-5	TEST	1.2277625196880717E-5	DOCUMENTATION	5.667086969051158E-6	IMPLEMENTATION
// TBD should this be varbinary($1)? //	DESIGN	0.9792664915070066	WITHOUT_CLASSIFICATION	0.020621669277372714	DESIGN	7.89392730111788E-5	DEFECT	2.381099790927809E-5	IMPLEMENTATION	7.78771747901458E-6	TEST	1.3012272212294912E-6	DOCUMENTATION
// is it necessary to register %exact since it can only appear in a where clause?	DESIGN	0.994021362995301	WITHOUT_CLASSIFICATION	0.00587565359175659	DESIGN	6.94721170874649E-5	DEFECT	3.250695907277604E-5	IMPLEMENTATION	5.873804210736995E-7	DOCUMENTATION	4.169563609635958E-7	TEST
// xmlforest requires a new kind of function constructor	DESIGN	0.9999642467184952	WITHOUT_CLASSIFICATION	2.829194539083942E-5	IMPLEMENTATION	5.185052693792941E-6	DESIGN	1.8567136392436825E-6	DEFECT	4.063186791464E-7	TEST	1.3251101811960803E-8	DOCUMENTATION
// Does this dialect support the ALTER TABLE syntax?	DESIGN	0.999539315737429	WITHOUT_CLASSIFICATION	4.294951201703562E-4	DESIGN	2.347868171392201E-5	IMPLEMENTATION	4.3021638956707155E-6	DEFECT	2.4749125959223895E-6	DOCUMENTATION	9.333841950171501E-7	TEST
// Do we need to qualify index names with the schema name?	DESIGN	0.9798212126517993	WITHOUT_CLASSIFICATION	0.018640255293893737	IMPLEMENTATION	0.0011637468810352936	DESIGN	2.3319587213940112E-4	DOCUMENTATION	8.324843411322937E-5	DEFECT	5.834086701899577E-5	TEST
// Does this dialect support the UNIQUE column syntax?	DESIGN	0.9984074611351889	WITHOUT_CLASSIFICATION	9.07654225490107E-4	IMPLEMENTATION	6.660933485008123E-4	DESIGN	8.681645621037335E-6	DEFECT	7.410745565522901E-6	DOCUMENTATION	2.6988996337300322E-6	TEST
// Does this dialect support check constraints?	DESIGN	0.9974906379953031	WITHOUT_CLASSIFICATION	0.001581243223138339	DESIGN	9.095366836690008E-4	IMPLEMENTATION	1.2815160400242786E-5	DOCUMENTATION	5.216809861055679E-6	TEST	5.501276281305631E-7	DEFECT
// Do we need to drop constraints before dropping tables in this dialect?	DESIGN	0.9938022035775954	WITHOUT_CLASSIFICATION	0.006192441065055992	DESIGN	1.5511668192583058E-6	DOCUMENTATION	1.5501719103160409E-6	DEFECT	1.1749264841373884E-6	IMPLEMENTATION	1.0790921348781921E-6	TEST
// Does this dialect support the FOR UPDATE syntax?	DESIGN	0.998439094412095	WITHOUT_CLASSIFICATION	0.0014035376404692085	DESIGN	1.450750507720765E-4	IMPLEMENTATION	5.413508167168564E-6	DOCUMENTATION	4.725587987011964E-6	DEFECT	2.153800509362126E-6	TEST
// Does this dialect support the Oracle-style FOR UPDATE NOWAIT syntax?	DESIGN	0.9967031026734313	WITHOUT_CLASSIFICATION	0.0027104259962876607	DESIGN	5.762469176019704E-4	IMPLEMENTATION	5.43882534215777E-6	TEST	4.186334977486035E-6	DOCUMENTATION	5.992523594431692E-7	DEFECT
// Does this dialect support FOR UPDATE OF, allowing particular rows to be locked?	DESIGN	0.9875873729273905	DESIGN	0.01206247853187361	WITHOUT_CLASSIFICATION	2.1327870118695373E-4	DEFECT	1.3009143137567445E-4	IMPLEMENTATION	4.780639854534391E-6	DOCUMENTATION	1.997768318851431E-6	TEST
//note there is a wierd implementation in the client side	DESIGN	0.9991490070324619	WITHOUT_CLASSIFICATION	8.492019353456518E-4	DESIGN	1.1302137847804594E-6	IMPLEMENTATION	5.840707863054844E-7	DEFECT	6.097581815268717E-8	TEST	1.5771803381097527E-8	DOCUMENTATION
//TODO: never reached, since getTypeName() actually throws an exception!	DESIGN	0.5074772092301073	WITHOUT_CLASSIFICATION	0.29786844858144823	DESIGN	0.16267556963650975	DEFECT	0.03107360510909037	IMPLEMENTATION	5.811477228265157E-4	TEST	3.24019720017729E-4	DOCUMENTATION
// todo : should we additionally check the current isolation mode explicitly?	DESIGN	0.94785293788922	DESIGN	0.026645211403388176	IMPLEMENTATION	0.016780291057452525	DEFECT	0.00825703243118457	WITHOUT_CLASSIFICATION	4.6292452409249247E-4	DOCUMENTATION	1.6026946622748957E-6	TEST
// todo : remove this and just have subclasses use Isolater/IsolatedWork directly...	DESIGN	0.8568080222308465	DESIGN	0.14190381904781657	WITHOUT_CLASSIFICATION	0.0012621226338646154	DEFECT	2.404012032875826E-5	IMPLEMENTATION	1.5687328893338471E-6	TEST	4.272342543062271E-7	DOCUMENTATION
//TODO: should orphans really be deleted during lock???	DESIGN	0.9097467727824481	DESIGN	0.07353366745091156	WITHOUT_CLASSIFICATION	0.011355637592949825	DEFECT	0.005327104173436261	IMPLEMENTATION	2.0630021036530984E-5	DOCUMENTATION	1.6187979217782143E-5	TEST
// orphans should not be deleted during merge??	DESIGN	0.9999236936553503	WITHOUT_CLASSIFICATION	7.583389902488021E-5	DESIGN	2.444873447888116E-7	IMPLEMENTATION	1.996027036721193E-7	DEFECT	2.7508934198749333E-8	TEST	8.466422648221069E-10	DOCUMENTATION
// orphans should not be deleted during copy??	DESIGN	0.9999651287124083	WITHOUT_CLASSIFICATION	3.1967940394482636E-5	DESIGN	2.630807966588133E-6	DEFECT	2.511154352033972E-7	IMPLEMENTATION	1.946091954248621E-8	TEST	1.9628759496887118E-9	DOCUMENTATION
//I suppose?	DESIGN	0.9942328909994195	WITHOUT_CLASSIFICATION	0.0031866525410954877	IMPLEMENTATION	0.0025511560424923475	DESIGN	1.611621469034602E-5	DOCUMENTATION	1.1287776781994158E-5	DEFECT	1.8964255202612188E-6	TEST
//TODO: suck this logic into the collection!	DESIGN	0.942519699887365	DESIGN	0.04972351647496801	IMPLEMENTATION	0.005630986751993467	WITHOUT_CLASSIFICATION	0.001611665553146572	DEFECT	4.2324338577967943E-4	DOCUMENTATION	9.08879467473765E-5	TEST
// TODO: an alternative is to check if the owner has changed; if it hasn't then // get the ID from collection.getOwner()	DESIGN	0.9899935494774699	IMPLEMENTATION	0.007496584664815888	WITHOUT_CLASSIFICATION	0.0017154239272473071	DEFECT	7.106433725427531E-4	DESIGN	8.202697936137973E-5	TEST	1.7715785627116121E-6	DOCUMENTATION
//TODO:refactor + make this method private	DESIGN	0.9936401258988822	DESIGN	0.004738938202640307	WITHOUT_CLASSIFICATION	0.0013221837615651417	IMPLEMENTATION	2.677221242449273E-4	TEST	2.904914920108993E-5	DOCUMENTATION	1.9808634663258165E-6	DEFECT
// todo : we can actually just determine this from the incoming EntityEntry-s	DESIGN	0.9997326907723224	WITHOUT_CLASSIFICATION	2.6729026707968025E-4	DESIGN	1.4302110129638184E-8	DEFECT	2.1085579081184218E-9	DOCUMENTATION	1.6505450339297031E-9	TEST	8.993848566774128E-10	IMPLEMENTATION
//TODO: Should this be an InitializeEntityEventListener??? (watch out for performance!)	DESIGN	0.9998962886015121	DESIGN	8.13749946005501E-5	IMPLEMENTATION	1.7734476579260746E-5	WITHOUT_CLASSIFICATION	2.55762452965377E-6	TEST	1.960735085516559E-6	DOCUMENTATION	8.356769277163331E-8	DEFECT
//TODO: better to pass the id in as an argument?	DESIGN	0.996594232631811	DESIGN	0.003356169937242309	WITHOUT_CLASSIFICATION	3.358966625521002E-5	DOCUMENTATION	8.458533601202333E-6	TEST	4.4818958433916906E-6	DEFECT	3.067335246724224E-6	IMPLEMENTATION
// todo : potentially look at optimizing these two arrays	DESIGN	0.9937357373921768	WITHOUT_CLASSIFICATION	0.0031329823882005944	IMPLEMENTATION	0.0021732812684422727	DESIGN	9.385566077020534E-4	DEFECT	1.3039131108750794E-5	TEST	6.403212369398315E-6	DOCUMENTATION
/* trim done to workaround stupid oracle bug that cant handle whitespaces before a { in a sp */	DESIGN	0.9999805408763754	DESIGN	1.2238137879671075E-5	WITHOUT_CLASSIFICATION	4.784975167812709E-6	DEFECT	2.41465999900167E-6	IMPLEMENTATION	1.5904309411707647E-8	TEST	5.446268634954903E-9	DOCUMENTATION
/* trim done to workaround stupid oracle bug that cant handle whitespaces before a { in a sp */	DESIGN	0.9999805408763754	DESIGN	1.2238137879671075E-5	WITHOUT_CLASSIFICATION	4.784975167812709E-6	DEFECT	2.41465999900167E-6	IMPLEMENTATION	1.5904309411707647E-8	TEST	5.446268634954903E-9	DOCUMENTATION
//TODO: temporary	DESIGN	0.9988102136365238	DESIGN	0.0010955954567861185	WITHOUT_CLASSIFICATION	5.296981537658813E-5	IMPLEMENTATION	2.895879753560612E-5	TEST	6.930547514010076E-6	DEFECT	5.331746263939425E-6	DOCUMENTATION
//TODO: not quite sure about the full implications of this!	DESIGN	0.5670030609127188	WITHOUT_CLASSIFICATION	0.22869605759555284	IMPLEMENTATION	0.15430956690608152	DESIGN	0.04678164511429182	DEFECT	0.0027704892979635814	TEST	4.3918017339150396E-4	DOCUMENTATION
//TODO: not quite sure about the full implications of this!	DESIGN	0.5670030609127188	WITHOUT_CLASSIFICATION	0.22869605759555284	IMPLEMENTATION	0.15430956690608152	DESIGN	0.04678164511429182	DEFECT	0.0027704892979635814	TEST	4.3918017339150396E-4	DOCUMENTATION
//TODO: ugly here:	DESIGN	0.9252099453833803	DESIGN	0.07082920563957772	IMPLEMENTATION	0.002797693408303421	WITHOUT_CLASSIFICATION	6.561417720398501E-4	DEFECT	3.198935530856047E-4	TEST	1.8712024361298472E-4	DOCUMENTATION
//this is kinda the best we can do...	DESIGN	0.9874851917308518	WITHOUT_CLASSIFICATION	0.009750326832781459	DESIGN	0.002453556804134431	DEFECT	2.720095382744154E-4	TEST	2.0680129954912593E-5	IMPLEMENTATION	1.8234964002847947E-5	DOCUMENTATION
//TODO: this needn't exclude subclasses...	DESIGN	0.9294646225331037	DESIGN	0.03807353234600545	WITHOUT_CLASSIFICATION	0.026045478385744197	DEFECT	0.004016472283541911	IMPLEMENTATION	0.0015256284373459865	TEST	8.742660142587006E-4	DOCUMENTATION
// todo : need map? the prob is a proper key, right?	DESIGN	0.8085671240794556	DESIGN	0.15786010298116457	DEFECT	0.022583027132708645	WITHOUT_CLASSIFICATION	0.010569281673978935	IMPLEMENTATION	2.352685099250289E-4	TEST	1.8519562276722346E-4	DOCUMENTATION
// todo : i'd much rather have this done from #endLoadingCollection(CollectionPersister,LoadingCollectionEntry)...	DESIGN	0.9206538316610651	WITHOUT_CLASSIFICATION	0.07915328712646608	DESIGN	1.910543052170754E-4	DEFECT	1.7809522921675407E-6	TEST	3.8808873798159725E-8	DOCUMENTATION	7.146085939255105E-9	IMPLEMENTATION
// todo : hack!!! // NOTE : here we cleanup the load context when we have no more local // LCE entries.  This "works" for the time being because really // only the collection load contexts are implemented.  Long term, // this cleanup should become part of the "close result set" // processing from the (sandbox/jdbc) jdbc-container code.	DESIGN	0.9995733370434459	DESIGN	4.2380184630828643E-4	WITHOUT_CLASSIFICATION	2.7956207829597656E-6	DEFECT	6.008034631161371E-8	TEST	3.397561720699218E-9	IMPLEMENTATION	2.0115547888718466E-9	DOCUMENTATION
// todo : should really move this log statement to CollectionType, where this is used from...	DESIGN	0.7426238413645213	DESIGN	0.25690834802040163	WITHOUT_CLASSIFICATION	4.594392406038257E-4	DEFECT	5.4631812461889404E-6	IMPLEMENTATION	2.6426695168178896E-6	TEST	2.6552371016832146E-7	DOCUMENTATION
// TODO : keep seperate notions of QT[] here for shallow/non-shallow queries...	DESIGN	0.7329136648942762	DESIGN	0.24884459694150574	IMPLEMENTATION	0.0161283329043244	DEFECT	0.001221865629438421	WITHOUT_CLASSIFICATION	8.49047663607447E-4	TEST	4.249196684775783E-5	DOCUMENTATION
// TODO : add this info to the translator and aggregate it here...	DESIGN	0.789647083655879	IMPLEMENTATION	0.20784870453638865	DESIGN	9.995360470601042E-4	TEST	7.505050947575136E-4	DEFECT	6.937262522315082E-4	DOCUMENTATION	6.044441368328725E-5	WITHOUT_CLASSIFICATION
//TODO: move into collection type, so we can use polymorphism!	DESIGN	0.9769475513666381	DESIGN	0.022950421283716604	WITHOUT_CLASSIFICATION	4.76364148199235E-5	IMPLEMENTATION	4.108124631021492E-5	DEFECT	1.2325900307418113E-5	DOCUMENTATION	9.83788207751448E-7	TEST
// todo : should we check the current isolation mode explicitly?	DESIGN	0.41878556396540395	DESIGN	0.23994194150217096	WITHOUT_CLASSIFICATION	0.23663711604202683	DEFECT	0.10339802276492059	IMPLEMENTATION	0.0012015702610133482	DOCUMENTATION	3.5785464464271206E-5	TEST
//TODO: suck into event class	DESIGN	0.9981087122950955	DESIGN	0.0011083568717069783	IMPLEMENTATION	3.4282479791858893E-4	WITHOUT_CLASSIFICATION	2.4311211998547785E-4	DEFECT	1.8833260574415035E-4	DOCUMENTATION	8.661309549315826E-6	TEST
//do we even really need this? the update will fail anyway....	DESIGN	0.6120885649738074	WITHOUT_CLASSIFICATION	0.25805053635768993	DEFECT	0.06925102768849385	DESIGN	0.04457407629638951	DOCUMENTATION	0.01586585190210336	IMPLEMENTATION	1.699427815160136E-4	TEST
//hum ... should we cascade anyway? throw an exception? fine like it is?	DESIGN	0.999694830352449	DESIGN	2.625073263713834E-4	DEFECT	1.9758589118489343E-5	DOCUMENTATION	1.3319527911747007E-5	IMPLEMENTATION	6.836751505549092E-6	WITHOUT_CLASSIFICATION	2.7474526438045752E-6	TEST
//TODO: would it be better to do a refresh from db?	DESIGN	0.9941010593307841	DESIGN	0.005723504769474214	IMPLEMENTATION	6.751002985699126E-5	WITHOUT_CLASSIFICATION	6.318954247521878E-5	DEFECT	4.41610756925127E-5	TEST	5.752517169848373E-7	DOCUMENTATION
//TODO: we use two visitors here, inefficient!	DESIGN	0.9719755015704948	DESIGN	0.022439743608541667	WITHOUT_CLASSIFICATION	0.005047065947934796	IMPLEMENTATION	3.4687163742039187E-4	DOCUMENTATION	1.1152519660121036E-4	DEFECT	7.929203900697334E-5	TEST
// this class has no proxies (so do a shortcut)	DESIGN	0.9999430064782566	WITHOUT_CLASSIFICATION	5.675946630055371E-5	DESIGN	2.0185807304802074E-7	DEFECT	1.2254248744534711E-8	DOCUMENTATION	1.1769916741924975E-8	IMPLEMENTATION	8.17320431830466E-9	TEST
//PostLoad is needed for EJB3 //TODO: reuse the PostLoadEvent...	DESIGN	0.9065233360428602	IMPLEMENTATION	0.05831306811188759	DESIGN	0.017491488163217543	WITHOUT_CLASSIFICATION	0.011131813338726239	TEST	0.005653534395918833	DEFECT	8.8675994738969E-4	DOCUMENTATION
//TODO: put this stuff back in to read snapshot from //      the second-level cache (needs some extra work)	DESIGN	0.9813294831080405	DESIGN	0.015494739731158707	WITHOUT_CLASSIFICATION	0.0021860991015691784	DEFECT	9.384659247266354E-4	IMPLEMENTATION	3.407719890195176E-5	DOCUMENTATION	1.713493560299216E-5	TEST
// null or brand new collection // this will also (inefficiently) handle arrays, which have // no snapshot, so we can't do any better	DESIGN	0.9348885388056023	WITHOUT_CLASSIFICATION	0.06510613471786297	DESIGN	4.584593355732465E-6	IMPLEMENTATION	6.66491451308966E-7	DOCUMENTATION	5.1934152527074E-8	DEFECT	2.3457575086659776E-8	TEST
//TODO: is this 100% correct?	DESIGN	0.9947503789829266	DESIGN	0.0038787669213030196	WITHOUT_CLASSIFICATION	0.0012790069555408223	DEFECT	5.284498022569711E-5	TEST	2.9171287821168343E-5	DOCUMENTATION	9.830872182563428E-6	IMPLEMENTATION
// TODO: iteratively get transient entities and retry merge until one of the following conditions: //       1) transientCopyCache.size() == 0 //       2) transientCopyCache.size() is not decreasing and copyCache.size() is not increasing // TODO: find out if retrying can add entities to copyCache (don't think it can...) // For now, just retry once; throw TransientObjectException if there are still any transient entities	DESIGN	0.5548640851497719	DEFECT	0.361490569770164	DESIGN	0.04544378512733465	WITHOUT_CLASSIFICATION	0.0378427948091093	IMPLEMENTATION	3.067780044140257E-4	TEST	5.198713920631034E-5	DOCUMENTATION
// entity name will not be available for non-POJO entities // TODO: cache the entity name somewhere so that it is available to this exception	DESIGN	0.9999049947416776	DESIGN	9.428445981786942E-5	WITHOUT_CLASSIFICATION	3.355506494560272E-7	DEFECT	2.7441432095642543E-7	TEST	9.411852414225055E-8	IMPLEMENTATION	1.6715010094496965E-8	DOCUMENTATION
//TODO: we should throw an exception if we really *know* for sure   //      that this is a detached instance, rather than just assuming //throw new StaleObjectStateException(entityName, id);	DESIGN	0.9786074350382237	DESIGN	0.02138184390012969	WITHOUT_CLASSIFICATION	9.95457930522266E-6	DEFECT	7.541076877817819E-7	TEST	1.216225767014079E-8	DOCUMENTATION	2.123960826249454E-10	IMPLEMENTATION
// TODO : perhaps we should additionally require that the incoming entity // version be equivalent to the defined unsaved-value?	DESIGN	0.9999730359046153	DESIGN	2.683413191233668E-5	IMPLEMENTATION	4.970093744701353E-8	DEFECT	4.780145957999256E-8	WITHOUT_CLASSIFICATION	3.225991301513668E-8	DOCUMENTATION	2.011622315198745E-10	TEST
// perhaps this should be an exception since it is only ever used // in the above method?	DESIGN	0.9917980198420273	DESIGN	0.008196173071824697	WITHOUT_CLASSIFICATION	5.736676003964945E-6	DEFECT	6.68691386274326E-8	TEST	3.5114590706365022E-9	DOCUMENTATION	2.9546437556372914E-11	IMPLEMENTATION
// Put a placeholder in entries, so we don't recurse back and try to save() the // same object again. QUESTION: should this be done before onSave() is called? // likewise, should it be done before onUpdate()?	DESIGN	0.8673065969177779	WITHOUT_CLASSIFICATION	0.13266559834943217	DESIGN	2.7675142428393422E-5	IMPLEMENTATION	8.185184455552283E-8	DOCUMENTATION	2.71582808405102E-8	TEST	2.058023606712375E-8	DEFECT
//TODO: merge into one method!	DESIGN	0.8622233483875398	DESIGN	0.13625664561957213	WITHOUT_CLASSIFICATION	8.237654075747061E-4	IMPLEMENTATION	4.588267034446657E-4	DEFECT	1.205626199887866E-4	DOCUMENTATION	1.1685126188000311E-4	TEST
//TODO: refactor to .sql package	DESIGN	0.9904876785053254	DESIGN	0.008399856209002105	WITHOUT_CLASSIFICATION	0.001104678940738605	IMPLEMENTATION	4.346754329802143E-6	DOCUMENTATION	2.4899922706180838E-6	TEST	9.495983334386277E-7	DEFECT
/** * Provides query splitting methods, which were originally in QueryTranslator. * <br> * TODO: This will need to be refactored at some point. * * @author josh */	DESIGN	0.992835094897093	DESIGN	0.006402380018832909	DOCUMENTATION	5.400909839668054E-4	IMPLEMENTATION	1.7393446910395522E-4	DEFECT	2.7561858861382478E-5	WITHOUT_CLASSIFICATION	2.0937772141918207E-5	TEST
//TODO: this is one of the ugliest and most fragile pieces of code in Hibernate....	DESIGN	0.9995636106180379	DESIGN	1.697404264783592E-4	IMPLEMENTATION	1.2981857225908763E-4	TEST	7.868073831742381E-5	DEFECT	5.6676136092780855E-5	WITHOUT_CLASSIFICATION	1.4735088143514682E-6	DOCUMENTATION
// todo : temporary //      needed because currently persister is the one that //      creates and renders the join fragments for inheritence //      hierarchies...	DESIGN	0.8495991443477016	WITHOUT_CLASSIFICATION	0.15032665486490912	DESIGN	4.214596578910558E-5	DEFECT	1.5601115764599494E-5	IMPLEMENTATION	8.689000949297845E-6	DOCUMENTATION	7.764704886324322E-6	TEST
// TODO : better way?!?	DESIGN	0.999773367144037	DESIGN	2.0244482774976592E-4	IMPLEMENTATION	1.0440527005935485E-5	DEFECT	7.665996534728147E-6	DOCUMENTATION	6.0243059768680975E-6	TEST	5.719869578783967E-8	WITHOUT_CLASSIFICATION
// Not possible to simply re-use the versionPropertyNode here as it causes // OOM errors due to circularity :(	DESIGN	0.9999987971143659	WITHOUT_CLASSIFICATION	1.1449199773349998E-6	IMPLEMENTATION	4.5862602372344484E-8	DESIGN	1.1836530390023154E-8	DEFECT	1.4360317333174553E-10	TEST	1.2292089370505726E-10	DOCUMENTATION
//TODO:this is only needed during compilation .. can we eliminate the instvar?	DESIGN	0.99967300486443	DESIGN	3.0816403275909566E-4	WITHOUT_CLASSIFICATION	1.567752189265316E-5	DEFECT	1.4441610391200018E-6	TEST	9.847174879084169E-7	DOCUMENTATION	7.247023911289814E-7	IMPLEMENTATION
// TODO : this is a bit dodgy, come up with a better way to check this (plus see above comment)	DESIGN	0.9998183812160389	DESIGN	1.741895749530804E-4	IMPLEMENTATION	3.003639026641891E-6	DEFECT	2.739357516973656E-6	TEST	1.6558418923716099E-6	DOCUMENTATION	3.0370571941483156E-8	WITHOUT_CLASSIFICATION
// even here, if only properties mapped to the "base table" are referenced // in the set and where clauses, this could be handled by the BasicDelegate. // TODO : decide if it is better performance-wise to perform that check, or to simply use the MultiTableUpdateDelegate	DESIGN	0.9999999996169124	DESIGN	1.5397315627690975E-10	DOCUMENTATION	1.5066365377542538E-10	IMPLEMENTATION	5.4104181484150754E-11	WITHOUT_CLASSIFICATION	1.6439481202455674E-11	TEST	7.907220525475988E-12	DEFECT
//TODO: switch statements are always evil! We already had bugs because  //      of forgotten token types. Use polymorphism for this!	DESIGN	0.913128748336002	DESIGN	0.05170365800108272	DEFECT	0.034937267775514966	WITHOUT_CLASSIFICATION	1.9630971053283586E-4	DOCUMENTATION	1.9523379734285418E-5	TEST	1.4492797133311197E-5	IMPLEMENTATION
// TODO : we really need to be able to deal with component paths here also; // this is difficult because the hql-sql grammar expects all those node types // to be FromReferenceNodes.  One potential fix here would be to convert the // IntoClause to just use a FromClause/FromElement combo (as a child of the // InsertStatement) and move all this logic into the InsertStatement.  That's // probably the easiest approach (read: least amount of changes to the grammar // and code), but just doesn't feel right as then an insert would contain // 2 from-clauses	DESIGN	0.9885997270331315	DESIGN	0.011399121912523397	WITHOUT_CLASSIFICATION	7.623890740028523E-7	DOCUMENTATION	3.063663618378846E-7	TEST	4.304687219637744E-8	IMPLEMENTATION	3.925203709858905E-8	DEFECT
// really there are two situations where it should be ok to allow the insertion // into properties defined on a superclass: //      1) union-subclass with an abstract root entity //      2) discrim-subclass // // #1 is handled already because of the fact that // UnionSubclassPersister alreay always returns 0 // for this call... // // we may want to disallow it for discrim-subclass just for // consistency-sake (currently does not work anyway)...	DESIGN	0.999987409185839	WITHOUT_CLASSIFICATION	1.2574806478437363E-5	DESIGN	1.480884774193863E-8	DEFECT	9.161727859710376E-10	DOCUMENTATION	1.6055576439051543E-10	IMPLEMENTATION	1.2210642354876805E-10	TEST
//yuck!	DESIGN	0.980489445662289	WITHOUT_CLASSIFICATION	0.018865209619467197	DESIGN	5.802669896983317E-4	DEFECT	4.5661626826745635E-5	DOCUMENTATION	1.3613877743080528E-5	TEST	5.802223975666029E-6	IMPLEMENTATION
// implicit joins are always(?) ok to reuse	DESIGN	0.998732451985011	WITHOUT_CLASSIFICATION	0.0012612704678765026	DESIGN	5.30443779630395E-6	IMPLEMENTATION	5.783400019764492E-7	DEFECT	3.2738420548539696E-7	DOCUMENTATION	6.738510870467721E-8	TEST
// TODO : we may also want to check that the types here map to exactly one column/JDBC-type //      can't think of a situation where arithmetic expression between multi-column mappings //      makes any sense.	DESIGN	0.5187831597394532	IMPLEMENTATION	0.3490690127264503	DESIGN	0.1306120415316965	DEFECT	0.0015089512530089813	DOCUMENTATION	1.8338704561747475E-5	WITHOUT_CLASSIFICATION	8.49604482933175E-6	TEST
// we do not know either type //BLIND GUESS!	DESIGN	0.9994427018268571	WITHOUT_CLASSIFICATION	5.498328572058624E-4	DESIGN	5.333702785297595E-6	DEFECT	1.5418333218094927E-6	IMPLEMENTATION	3.2153567893071673E-7	TEST	2.6824415099935355E-7	DOCUMENTATION
//TODO: used to be exprNoParens! was this needed?	DESIGN	0.999999599880349	DESIGN	2.952127104688997E-7	IMPLEMENTATION	5.310723267711288E-8	DEFECT	4.675046791785021E-8	DOCUMENTATION	3.576830827323788E-9	TEST	1.4724091544202388E-9	WITHOUT_CLASSIFICATION
// TODO: Replace this with a more elegant solution.	DESIGN	0.9963852150451529	DESIGN	0.003590942992887881	IMPLEMENTATION	1.94202559821114E-5	TEST	2.71266955348242E-6	DEFECT	1.4510589213698537E-6	WITHOUT_CLASSIFICATION	2.579775020934242E-7	DOCUMENTATION
// TODO: Should this really return null?  If not, figure out something better to do here.	DESIGN	0.9820849858225897	DESIGN	0.017893522240940735	IMPLEMENTATION	1.6927126804379303E-5	DEFECT	1.7828346685131077E-6	WITHOUT_CLASSIFICATION	1.4236766379940782E-6	DOCUMENTATION	1.3582983584781134E-6	TEST
//TODO: get SQL rendering out of this package!	DESIGN	0.9761256630359908	DESIGN	0.023825386641504517	WITHOUT_CLASSIFICATION	2.9199780136910868E-5	IMPLEMENTATION	1.0713634499966188E-5	DEFECT	5.640274111255916E-6	TEST	3.3966337567333737E-6	DOCUMENTATION
// yuck!	DESIGN	0.9994830830254167	WITHOUT_CLASSIFICATION	4.580462118561508E-4	DESIGN	5.660000860932531E-5	DEFECT	1.3384976618845968E-6	DOCUMENTATION	5.125491847869985E-7	TEST	4.1970727120038215E-7	IMPLEMENTATION
// ignore it; the incoming property could not be found so we // cannot be sure what to do here.  At the very least, the // safest is to simply not apply any dereference toggling...	DESIGN	0.9994021112336197	WITHOUT_CLASSIFICATION	4.722859277653192E-4	DESIGN	1.1634322429337201E-4	DEFECT	8.646900109942815E-6	IMPLEMENTATION	3.107870319976952E-7	DOCUMENTATION	3.0192717971888183E-7	TEST
// TODO : most of below was taken verbatim from DotNode; should either delegate this logic or super-type it	DESIGN	0.9997940436557443	DESIGN	1.0162064220623294E-4	DEFECT	5.9681607898510786E-5	WITHOUT_CLASSIFICATION	3.900536599600699E-5	TEST	3.7640951364532975E-6	IMPLEMENTATION	1.88463301832753E-6	DOCUMENTATION
// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and "do the right thing" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character // the trim-source	DESIGN	0.9967643395645489	WITHOUT_CLASSIFICATION	0.0031925847656528263	DESIGN	3.588984398241726E-5	IMPLEMENTATION	7.0616009335320495E-6	DOCUMENTATION	1.1844836104699167E-7	TEST	5.776521160959411E-9	DEFECT
// todo: we should really just collect these from the various SelectExpressions, rather than regenerating here	DESIGN	0.7817145717040339	WITHOUT_CLASSIFICATION	0.2173826584341935	DESIGN	8.782793878480503E-4	DEFECT	1.3266325773854216E-5	IMPLEMENTATION	1.0975571439458097E-5	TEST	2.485767113148547E-7	DOCUMENTATION
//TODO: is this a bit ugly?	DESIGN	0.9998675826387323	DESIGN	7.99498108296231E-5	IMPLEMENTATION	2.9534717762375992E-5	DEFECT	1.1261974586517573E-5	WITHOUT_CLASSIFICATION	8.24002345710931E-6	TEST	3.4308346322461966E-6	DOCUMENTATION
// Need a better way to define the suffixes here...	DESIGN	0.657388445446873	WITHOUT_CLASSIFICATION	0.3414373731264023	DESIGN	0.0010921113478845315	IMPLEMENTATION	5.86531331606516E-5	TEST	1.950003357690389E-5	DEFECT	3.916912102658986E-6	DOCUMENTATION
// TODO: something much better - look at the type of the other expression! // TODO: Have comparisonExpression and/or arithmeticExpression rules complete the resolution of boolean nodes.	DESIGN	0.9999978497742416	DESIGN	1.6080583901257708E-6	DEFECT	4.457688676537502E-7	IMPLEMENTATION	6.95802569357666E-8	TEST	2.3317403758950705E-8	WITHOUT_CLASSIFICATION	3.5008400158248048E-9	DOCUMENTATION
// TODO : what amount of significant digits need to be supported here? //      - from the DecimalFormat docs: //          [significant digits] = [minimum integer digits] + [maximum fraction digits]	DESIGN	0.9160712168982535	DESIGN	0.05144267354841853	WITHOUT_CLASSIFICATION	0.0310404876466437	DOCUMENTATION	8.509653452804325E-4	IMPLEMENTATION	3.7358144511062604E-4	TEST	2.210751162932603E-4	DEFECT
// Needed the "clazz_" check to work around union-subclasses // TODO : is there a way to tell whether a persister is truly discrim-column based inheritence?	DESIGN	0.9991493248267578	DESIGN	7.760076273175462E-4	WITHOUT_CLASSIFICATION	6.520921125175921E-5	IMPLEMENTATION	5.271008904251947E-6	DOCUMENTATION	3.858565662432151E-6	TEST	3.28760106331549E-7	DEFECT
//We should actually rework this class to not implement Parser //and just process path expressions in the most convenient way.	DESIGN	0.7102596677662302	DEFECT	0.21810159001490478	IMPLEMENTATION	0.06703444987253729	DESIGN	0.004585882347522748	WITHOUT_CLASSIFICATION	1.8133126407408318E-5	DOCUMENTATION	2.768723975287832E-7	TEST
//The class is now way to complex!	DESIGN	0.9999319096645602	WITHOUT_CLASSIFICATION	3.44146409883426E-5	DESIGN	3.24936806704313E-5	DEFECT	9.345533975127661E-7	IMPLEMENTATION	1.5802209849078253E-7	DOCUMENTATION	8.943828506539089E-8	TEST
//TODO: get SQL rendering out of here	DESIGN	0.9350866073037876	DESIGN	0.058285758398581786	WITHOUT_CLASSIFICATION	0.006216259348070441	IMPLEMENTATION	2.069684657249398E-4	TEST	1.3586480518039862E-4	DEFECT	6.854167865491908E-5	DOCUMENTATION
//TODO: is there a better way?	DESIGN	0.9998918609485351	DESIGN	9.846008841556098E-5	IMPLEMENTATION	6.425609102305151E-6	WITHOUT_CLASSIFICATION	2.2838240336803503E-6	TEST	5.45254008616778E-7	DEFECT	4.242759047816601E-7	DOCUMENTATION
//Must be done here because of side-effect! yuck...	DESIGN	0.8325897470254807	WITHOUT_CLASSIFICATION	0.16716691377277856	DESIGN	2.057369612054211E-4	DEFECT	1.903227081601158E-5	IMPLEMENTATION	1.1889929357994916E-5	DOCUMENTATION	6.680040361215903E-6	TEST
//name from a super query (a bit inelegant that it shows up here)	DESIGN	0.5228708529059537	WITHOUT_CLASSIFICATION	0.47651155959134534	DESIGN	2.676835410658753E-4	IMPLEMENTATION	2.0012435654868103E-4	DEFECT	1.4751096091860218E-4	TEST	2.268644167808107E-6	DOCUMENTATION
// We should reengineer this class so that, rather than the current ad - // hoc linear approach to processing a stream of tokens, we instead // build up a tree of expressions.	DESIGN	0.9002879321760483	DESIGN	0.08134639693770365	WITHOUT_CLASSIFICATION	0.018363393856709744	DEFECT	2.0103394810786263E-6	DOCUMENTATION	2.604083258372017E-7	TEST	6.28173138645724E-9	IMPLEMENTATION
// this is ugly here, but needed because its a subquery	DESIGN	0.9438863247363752	WITHOUT_CLASSIFICATION	0.055498991548342785	DESIGN	3.834256206563319E-4	IMPLEMENTATION	1.8130958047517736E-4	DEFECT	4.4093449388814456E-5	TEST	5.855064761700001E-6	DOCUMENTATION
// unhappy about this being public ... is there a better way?	DESIGN	0.9999950969685678	DESIGN	4.53425387889878E-6	WITHOUT_CLASSIFICATION	2.281396100905087E-7	DEFECT	1.0935187269378757E-7	IMPLEMENTATION	2.6314702381342778E-8	TEST	4.9713681695573904E-9	DOCUMENTATION
// Make sure this is a defined parameter and check the incoming value type // TODO: what should be the actual exception type here?	DESIGN	0.6343121197781808	DESIGN	0.36034407051094974	IMPLEMENTATION	0.0041326701395927555	WITHOUT_CLASSIFICATION	0.0011972760890782024	DEFECT	1.3036668600032213E-5	TEST	8.268135983391958E-7	DOCUMENTATION
// TODO : this constructor form is *only* used from constructor directly below us; can it go away?	DESIGN	0.9999878073850923	DESIGN	1.1826110835869979E-5	IMPLEMENTATION	1.7932011058093873E-7	WITHOUT_CLASSIFICATION	1.5385754810786827E-7	TEST	1.7650172219095313E-8	DOCUMENTATION	1.567624091009936E-8	DEFECT
//TODO: COPY/PASTE FROM SessionImpl, pull up!	DESIGN	0.6015271237832651	WITHOUT_CLASSIFICATION	0.3829912220935702	IMPLEMENTATION	0.01377089112885171	DESIGN	9.428108897665361E-4	DEFECT	4.79284312317145E-4	DOCUMENTATION	2.8866779222931307E-4	TEST
// TODO : should remove this exposure //  and have all references to the session's batcher use the ConnectionManager.	DESIGN	0.9992434669948028	DESIGN	3.78729549757623E-4	IMPLEMENTATION	2.667839982255306E-4	WITHOUT_CLASSIFICATION	1.0374164242248441E-4	DEFECT	7.220930995873767E-6	DOCUMENTATION	5.688379567473785E-8	TEST
// todo : should this get moved to PersistentContext? // logically, is PersistentContext the "thing" to which an interceptor gets attached?	DESIGN	0.996587400675142	DESIGN	0.00339311672203834	WITHOUT_CLASSIFICATION	1.901564448891592E-5	DEFECT	4.612693226591329E-7	TEST	5.188889199134652E-9	DOCUMENTATION	5.00118911525247E-10	IMPLEMENTATION
// TODO: what type?	DESIGN	0.7525736595666138	IMPLEMENTATION	0.2372360016210906	DESIGN	0.006670803391160808	WITHOUT_CLASSIFICATION	0.0022227262125801978	DEFECT	6.795681365248708E-4	DOCUMENTATION	6.172410720297294E-4	TEST
// todo : should seriously consider not allowing a txn to begin from a child session //      can always route the request to the root session...	DESIGN	0.9604725535492814	WITHOUT_CLASSIFICATION	0.029713515954243864	DEFECT	0.00975313610098066	DESIGN	5.6776531616219036E-5	IMPLEMENTATION	3.915492592516858E-6	TEST	1.0237128548798063E-7	DOCUMENTATION
// short-circuit for performance...	DESIGN	0.9980717137215565	WITHOUT_CLASSIFICATION	0.0019082690189051663	DESIGN	8.918575167609177E-6	DEFECT	5.52024557791527E-6	DOCUMENTATION	4.0495244692546915E-6	IMPLEMENTATION	1.5289143235774307E-6	TEST
// not absolutely necessary, but does help with aggressive release	DESIGN	0.9996466196466031	WITHOUT_CLASSIFICATION	3.336965404394479E-4	DESIGN	1.534740815019789E-5	IMPLEMENTATION	2.75908305864097E-6	TEST	1.5307816838340625E-6	DEFECT	4.654006491557849E-8	DOCUMENTATION
// TODO : remove these last two as batcher is no longer managing connections	DESIGN	0.9789578731010586	DESIGN	0.02045643931471145	WITHOUT_CLASSIFICATION	2.722082427658624E-4	TEST	2.494059527284107E-4	DEFECT	5.03994731696935E-5	IMPLEMENTATION	1.3673915565817638E-5	DOCUMENTATION
//work around a bug in all known connection pools....	DESIGN	0.9288440902550048	DESIGN	0.05502415667008469	DEFECT	0.008382626226760698	IMPLEMENTATION	0.007666090039928506	WITHOUT_CLASSIFICATION	8.282886794568445E-5	DOCUMENTATION	2.0794027562037994E-7	TEST
// TODO : make this the factory for "entity mode related" sessions; // also means making this the target of transaction-synch and the // thing that knows how to cascade things between related sessions // // At that point, perhaps this thing is a "SessionContext", and // ConnectionManager is a "JDBCContext"?  A "SessionContext" should // live in the impl package...	DESIGN	0.9999987920033632	DESIGN	1.2072474233607761E-6	IMPLEMENTATION	3.65120199243435E-10	DOCUMENTATION	3.4306306759134583E-10	DEFECT	3.7749069948651185E-11	TEST	3.2812688876447227E-12	WITHOUT_CLASSIFICATION
//TODO: does this really need to be here? //      does the collection already have //      it's own up-to-date snapshot?	DESIGN	0.9637728710398404	DESIGN	0.022906606986537733	IMPLEMENTATION	0.010907732541199087	WITHOUT_CLASSIFICATION	0.0023336029616033843	DEFECT	6.210920414349959E-5	TEST	1.7077266675731735E-5	DOCUMENTATION
//TODO: the i==entitySpan-1 bit depends upon subclass implementation (very bad)	DESIGN	0.9988681649318739	DESIGN	0.001071099533931613	IMPLEMENTATION	5.9485266590572755E-5	WITHOUT_CLASSIFICATION	6.35428608939095E-7	DOCUMENTATION	5.766170386935976E-7	DEFECT	3.822195642453828E-8	TEST
/**	DESIGN	0.4105629660680269	DOCUMENTATION	0.38067849588335895	DESIGN	0.10486748836536479	IMPLEMENTATION	0.03838592522123044	WITHOUT_CLASSIFICATION	0.033938355862457185	DEFECT	0.03156676859956161	TEST
// todo : add the notion of enabled filters to the CacheKey to differentiate filtered collections from non-filtered; //      but CacheKey is currently used for both collections and entities; would ideally need to define two seperate ones; //      currently this works in conjuction with the check on //      DefaultInitializeCollectionEventHandler.initializeCollectionFromCache() (which makes sure to not read from //      cache with enabled filters). // EARLY EXIT!!!!!	DESIGN	0.9500509520596963	WITHOUT_CLASSIFICATION	0.04994555756695969	DESIGN	1.54468709095669E-6	DEFECT	1.0430077476075105E-6	IMPLEMENTATION	7.562247611970457E-7	DOCUMENTATION	1.4645374426414177E-7	TEST
//for sets, we should end the collection load after resolving //the entities, since we might call hashCode() on the elements //TODO: or we could do this polymorphically, and have two //      different operations implemented differently for arrays	DESIGN	0.7925413590505612	DESIGN	0.20476707036102465	DEFECT	0.002681124546558475	WITHOUT_CLASSIFICATION	4.3301250215090485E-6	TEST	3.4858836009440955E-6	IMPLEMENTATION	2.6300332331956413E-6	DOCUMENTATION
//This is not very nice (and quite slow):	DESIGN	0.930528445500815	WITHOUT_CLASSIFICATION	0.05419965862091285	DEFECT	0.015160079593346433	DESIGN	1.0140819579238239E-4	IMPLEMENTATION	5.876984691598832E-6	DOCUMENTATION	4.5311044416711246E-6	TEST
//use of trim() here is ugly?	DESIGN	0.9672579173828072	WITHOUT_CLASSIFICATION	0.03238520319436263	DESIGN	2.7974410668344545E-4	DEFECT	5.398413953956091E-5	IMPLEMENTATION	1.3405137000955625E-5	TEST	9.746039606231148E-6	DOCUMENTATION
//TODO: this is too conservative; if all preceding joins were  //      also inner joins, we could use an inner join here	DESIGN	0.9812308564737949	DESIGN	0.012567650712026018	DEFECT	0.0055372417022126206	WITHOUT_CLASSIFICATION	2.667825004846442E-4	IMPLEMENTATION	2.2829555378975393E-4	TEST	1.6917305769219984E-4	DOCUMENTATION
//TODO: look at the owning property and check that it  //      isn't lazy (by instrumentation)	DESIGN	0.5369115350766201	WITHOUT_CLASSIFICATION	0.4436450719740273	IMPLEMENTATION	0.01740610637776646	DEFECT	0.0018696296995558501	DOCUMENTATION	1.0760962598259553E-4	DESIGN	6.004724604758323E-5	TEST
//TODO: inefficient	DESIGN	0.9345672058407871	DESIGN	0.040145006458334354	IMPLEMENTATION	0.02433069504671454	WITHOUT_CLASSIFICATION	7.432152777524104E-4	DOCUMENTATION	1.3526965392423473E-4	TEST	7.860772248739106E-5	DEFECT
// why does this matter?	DESIGN	0.8370088628279114	WITHOUT_CLASSIFICATION	0.16257381555562334	DESIGN	2.1075695061753666E-4	TEST	1.593377784134933E-4	DEFECT	3.0485625150450236E-5	DOCUMENTATION	1.6741262283743604E-5	IMPLEMENTATION
// from the collection of associations, locate OJA for the // ManyToOne corresponding to this persister to fully // define the many-to-many; we need that OJA so that we can // use its alias here // TODO : is there a better way here?	DESIGN	0.9999991435224196	DESIGN	3.948161816660441E-7	IMPLEMENTATION	2.6338084440545716E-7	WITHOUT_CLASSIFICATION	1.5647067330965603E-7	TEST	3.927965576067134E-8	DOCUMENTATION	2.530225283839671E-9	DEFECT
//TODO: this class depends directly upon CriteriaImpl,  //      in the impl package ... add a CriteriaImplementor  //      interface	DESIGN	0.9994976170285066	DESIGN	2.88742461970037E-4	DEFECT	2.064080435425014E-4	IMPLEMENTATION	6.2890095137463795E-6	WITHOUT_CLASSIFICATION	6.130472923888093E-7	DOCUMENTATION	3.304091747897086E-7	TEST
//TODO: add a CriteriaImplementor interface //      this class depends directly upon CriteriaImpl in the impl package...	DESIGN	0.992488255901411	DESIGN	0.004957782451326298	IMPLEMENTATION	0.0021143088737025175	DEFECT	4.323934563307256E-4	WITHOUT_CLASSIFICATION	5.936674656824932E-6	DOCUMENTATION	1.3226425724165616E-6	TEST
// TODO : not so sure this is needed...	DESIGN	0.9589959030628208	DESIGN	0.03981713200070585	IMPLEMENTATION	6.702817833450528E-4	DEFECT	3.6611993757107724E-4	TEST	1.4891359293266854E-4	DOCUMENTATION	1.6496226245827646E-6	WITHOUT_CLASSIFICATION
// meant to handle dynamic instantiation queries...(Copy from QueryLoader)	DESIGN	0.9999120172042465	WITHOUT_CLASSIFICATION	8.021488268495776E-5	DESIGN	7.697164365607035E-6	DEFECT	5.3119624384343775E-8	DOCUMENTATION	1.1027768666984559E-8	IMPLEMENTATION	6.6013100424358645E-9	TEST
// TODO: The order in which entities are saved may matter (e.g., a particular transient entity //       may need to be saved before other transient entities can be saved; //       Keep retrying the batch of transient entities until either: //       1) there are no transient entities left in transientCopyCache //       or 2) no transient entities were saved in the last batch // For now, just run through the transient entities and retry the merge	DESIGN	0.5949736136750386	DESIGN	0.3999684572583903	WITHOUT_CLASSIFICATION	0.004337409566730136	DEFECT	6.897706929198088E-4	IMPLEMENTATION	1.8384055870997782E-5	TEST	1.2364751050154982E-5	DOCUMENTATION
// todo: this might really even be moved into the cfg package and used as the basis for all things which are configurable.	DESIGN	0.9689675347209166	DESIGN	0.030353717863995034	WITHOUT_CLASSIFICATION	4.729276101772311E-4	IMPLEMENTATION	2.0332417665965864E-4	DEFECT	2.433742230294288E-6	DOCUMENTATION	6.188602093694855E-8	TEST
// todo : currently expects that the individual with expressions apply to the same sql table join. //      This may not be the case for joined-subclass where the property values //      might be coming from different tables in the joined hierarchy.  At some //      point we should expand this to support that capability.  However, that has //      some difficulties: //          1) the biggest is how to handle ORs when the individual comparisons are //              linked to different sql joins. //          2) here we would need to track each comparison individually, along with //              the join alias to which it applies and then pass that information //              back to the FromElement so it can pass it along to the JoinSequence	DESIGN	0.5042749000147215	WITHOUT_CLASSIFICATION	0.46866581732299695	DEFECT	0.02315789255255954	IMPLEMENTATION	0.003768504799142813	DESIGN	1.3284439506728034E-4	DOCUMENTATION	4.0915512089042245E-8	TEST
// this function has a template -> restore output, apply the template and write the result out // TODO: Downcast to avoid using an interface?  Yuck.	DESIGN	0.9991950111856642	DESIGN	3.4839171502150173E-4	WITHOUT_CLASSIFICATION	3.184755157125504E-4	IMPLEMENTATION	1.1212511328927355E-4	TEST	1.533837261701253E-5	DOCUMENTATION	1.0658097695314219E-5	DEFECT
// at some point the generate phase needs to be moved out of here, // because a single object-level DML might spawn multiple SQL DML // command executions. // // Possible to just move the sql generation for dml stuff, but for // consistency-sake probably best to just move responsiblity for // the generation phase completely into the delegates // (QueryLoader/StatementExecutor) themselves.  Also, not sure why // QueryLoader currently even has a dependency on this at all; does // it need it?  Ideally like to see the walker itself given to the delegates directly...	DESIGN	0.9999999366644124	DESIGN	6.148592435554282E-8	DEFECT	1.6670280287429757E-9	WITHOUT_CLASSIFICATION	1.8257200291203748E-10	DOCUMENTATION	6.310732229556771E-14	TEST	1.8433618408708488E-16	IMPLEMENTATION
// get the right object from the list ... would it be easier to just call getEntity() ??	DESIGN	0.9197389657269412	WITHOUT_CLASSIFICATION	0.08025757390362093	DESIGN	3.0205947470978798E-6	IMPLEMENTATION	4.1884571111073376E-7	DEFECT	1.122258451212953E-8	TEST	9.706395052232306E-9	DOCUMENTATION
// TODO should we just collect these like with the collections above?	DESIGN	0.9405126061853437	IMPLEMENTATION	0.05935572830281003	DESIGN	1.2992170963944233E-4	TEST	1.3647249401108646E-6	DOCUMENTATION	1.919135237103247E-7	WITHOUT_CLASSIFICATION	1.8716374304714515E-7	DEFECT
// todo : better to handle dynamic filters through implicit DynamicFilterParameterSpecification // see the discussion there in DynamicFilterParameterSpecification's javadocs as to why // it is currently not done that way.	DESIGN	0.742967023832826	WITHOUT_CLASSIFICATION	0.2565695566314336	DESIGN	4.5434011089536783E-4	DOCUMENTATION	8.192627431834263E-6	DEFECT	6.478036300033287E-7	TEST	2.389937831073748E-7	IMPLEMENTATION
/////////////////////////////////////////////////////////////////////////// // USED ONLY FOR REGRESSION TESTING!!!! // // todo : obviously get rid of all this junk ;) ///////////////////////////////////////////////////////////////////////////	DESIGN	0.9332860490659084	WITHOUT_CLASSIFICATION	0.06557293002715199	DESIGN	0.0011340580672626573	IMPLEMENTATION	3.872421702309488E-6	DEFECT	1.9946292460770266E-6	DOCUMENTATION	1.0957887287984615E-6	TEST
//create an index on the key columns??	DESIGN	0.9999913122820301	WITHOUT_CLASSIFICATION	5.067632801222488E-6	DESIGN	3.2008660675574E-6	DEFECT	2.022828073902344E-7	IMPLEMENTATION	1.5693114987045905E-7	DOCUMENTATION	6.000514381092149E-8	TEST
//TODO: deprecated, remove eventually	DESIGN	0.675743852768056	DESIGN	0.3086765331898309	WITHOUT_CLASSIFICATION	0.011829254608731512	IMPLEMENTATION	0.003505030358736021	DEFECT	1.995822931455339E-4	DOCUMENTATION	4.574678150003039E-5	TEST
//create an index on the key columns??	DESIGN	0.9999913122820301	WITHOUT_CLASSIFICATION	5.067632801222488E-6	DESIGN	3.2008660675574E-6	DEFECT	2.022828073902344E-7	IMPLEMENTATION	1.5693114987045905E-7	DOCUMENTATION	6.000514381092149E-8	TEST
//TODO: improve this hack!	DESIGN	0.9999979848676448	DESIGN	7.514884224832518E-7	TEST	5.722723786347186E-7	IMPLEMENTATION	3.8279166931602897E-7	DEFECT	2.1788379054171645E-7	WITHOUT_CLASSIFICATION	9.069609421491189E-8	DOCUMENTATION
// inheritance cycle detection (paranoid check)	DESIGN	0.9999443870345002	WITHOUT_CLASSIFICATION	3.721089556085873E-5	DESIGN	1.8101836966780856E-5	IMPLEMENTATION	1.9641227950298807E-7	DEFECT	9.623456216245286E-8	DOCUMENTATION	7.586130512582345E-9	TEST
//TODO: remove use of instanceof!	DESIGN	0.9434557368913704	DESIGN	0.052328712215783654	WITHOUT_CLASSIFICATION	0.0027200567038352655	DEFECT	0.0012788829981283047	IMPLEMENTATION	2.0766519879392774E-4	DOCUMENTATION	8.94599208826041E-6	TEST
//shortcut	DESIGN	0.9995447227745259	WITHOUT_CLASSIFICATION	4.461103483907619E-4	DESIGN	4.256675326603802E-6	DEFECT	2.451870240602063E-6	DOCUMENTATION	2.185948419655277E-6	TEST	2.723830964788752E-7	IMPLEMENTATION
//TODO: handle the case of a foreign key to something other than the pk	DESIGN	0.9866522449165427	WITHOUT_CLASSIFICATION	0.007246609846779592	IMPLEMENTATION	0.00602358832875824	DESIGN	2.6972012589874752E-5	TEST	2.6421788619526737E-5	DOCUMENTATION	2.4163106710123396E-5	DEFECT
// create an index on the key columns??	DESIGN	0.9999984327127163	WITHOUT_CLASSIFICATION	9.54657822168987E-7	DEFECT	5.46551192866407E-7	DESIGN	3.911048872550002E-8	IMPLEMENTATION	1.792760628104621E-8	DOCUMENTATION	9.040173794734207E-9	TEST
// todo : remove	DESIGN	0.888406156521186	WITHOUT_CLASSIFICATION	0.11094195975769272	DESIGN	5.190727357520242E-4	DEFECT	1.2198649946979115E-4	IMPLEMENTATION	5.914580500719604E-6	TEST	4.909905398681794E-6	DOCUMENTATION
// todo : remove	DESIGN	0.888406156521186	WITHOUT_CLASSIFICATION	0.11094195975769272	DESIGN	5.190727357520242E-4	DEFECT	1.2198649946979115E-4	IMPLEMENTATION	5.914580500719604E-6	TEST	4.909905398681794E-6	DOCUMENTATION
// todo : remove	DESIGN	0.888406156521186	WITHOUT_CLASSIFICATION	0.11094195975769272	DESIGN	5.190727357520242E-4	DEFECT	1.2198649946979115E-4	IMPLEMENTATION	5.914580500719604E-6	TEST	4.909905398681794E-6	DOCUMENTATION
// todo : throw exception?	DESIGN	0.8554871412724971	WITHOUT_CLASSIFICATION	0.1414237077240986	DESIGN	0.0029921136197143404	DEFECT	7.730567434565803E-5	IMPLEMENTATION	1.2441510092650202E-5	DOCUMENTATION	7.2901992515584175E-6	TEST
// todo : throw exception?  maybe warn if not the same?	DESIGN	0.6562675135434135	DESIGN	0.18685520420273075	WITHOUT_CLASSIFICATION	0.15371262526101298	DEFECT	0.0031099834655058368	IMPLEMENTATION	3.1712425479749866E-5	TEST	2.2961101857105594E-5	DOCUMENTATION
//TODO: make EntityPersister *not* depend on SessionFactoryImplementor //interface, if possible	DESIGN	0.9992949460724003	DESIGN	5.331422308391958E-4	IMPLEMENTATION	1.0359309699040576E-4	WITHOUT_CLASSIFICATION	5.3693130927080974E-5	DEFECT	1.3239977534560422E-5	TEST	1.3854913085706947E-6	DOCUMENTATION
//TODO: is there a more elegant way than downcasting?	DESIGN	0.9999780701941284	DESIGN	1.9434551202800377E-5	WITHOUT_CLASSIFICATION	1.72359709007832E-6	TEST	6.712417454824664E-7	IMPLEMENTATION	5.445040095856696E-8	DOCUMENTATION	4.596543218192536E-8	DEFECT
// TODO: encapsulate the protected instance variables!	DESIGN	0.9373949002873945	IMPLEMENTATION	0.043989799894573606	WITHOUT_CLASSIFICATION	0.015480667518280405	DESIGN	0.002796311532965925	DEFECT	1.8713511187775007E-4	TEST	1.5118565490785957E-4	DOCUMENTATION
// should indicate that we are processing an INSERT/UPDATE/DELETE // query with a subquery implied via a collection property // function. Here, we need to use the table name itself as the // qualification alias. // TODO : verify this works for all databases... // TODO : is this also the case in non-"indexed" scenarios?	DESIGN	0.9982767335933197	DESIGN	0.001694073753405282	IMPLEMENTATION	2.078110466043442E-5	DEFECT	6.218189080801389E-6	TEST	1.6550749726430296E-6	DOCUMENTATION	5.382845610760016E-7	WITHOUT_CLASSIFICATION
//TODO: copy/paste from insertRows()	DESIGN	0.7996181626412409	WITHOUT_CLASSIFICATION	0.14968063733555628	DESIGN	0.03523404479608349	DEFECT	0.012864774739886451	IMPLEMENTATION	0.002301512812782554	TEST	3.0086767445035084E-4	DOCUMENTATION
//TODO: copy/paste from recreate()	DESIGN	0.6652976231719957	WITHOUT_CLASSIFICATION	0.2587212254361081	DESIGN	0.07045269163621702	IMPLEMENTATION	0.004241086237102282	DEFECT	8.010770533953994E-4	TEST	4.8629646518151917E-4	DOCUMENTATION
//should this interface extend PropertyMapping?	DESIGN	0.9606034931487739	DESIGN	0.03935705990880984	WITHOUT_CLASSIFICATION	2.928475657645655E-5	DEFECT	8.383290351755794E-6	TEST	1.733828925470448E-6	DOCUMENTATION	4.506656259634464E-8	IMPLEMENTATION
//ie. the subquery! yuck!	DESIGN	0.9673616815133935	WITHOUT_CLASSIFICATION	0.03234598589852163	DESIGN	2.6468781104763194E-4	DEFECT	1.55128713849273E-5	IMPLEMENTATION	7.450040780467236E-6	DOCUMENTATION	4.68186487182441E-6	TEST
//TODO: move to .sql package!!	DESIGN	0.9865556766182625	DESIGN	0.012766944023309686	WITHOUT_CLASSIFICATION	4.0674997986189294E-4	IMPLEMENTATION	1.9449859132286479E-4	DEFECT	5.1008540852125175E-5	DOCUMENTATION	2.5122246390709448E-5	TEST
//TODO: code duplication with SingleTableEntityPersister	DESIGN	0.9933187545497171	DESIGN	0.006627778739258215	WITHOUT_CLASSIFICATION	2.987329626529696E-5	IMPLEMENTATION	1.3173373719520053E-5	TEST	1.0236429694328792E-5	DOCUMENTATION	1.836113456725285E-7	DEFECT
// TODO: It would be really, really nice to use this to also model components!	DESIGN	0.9999932826034762	DESIGN	6.554361514908413E-6	IMPLEMENTATION	1.0957339315936554E-7	WITHOUT_CLASSIFICATION	4.5442726311464296E-8	DEFECT	6.5411202863919086E-9	DOCUMENTATION	1.4777691096171458E-9	TEST
//TODO: *two* hashmap lookups here is one too many...	DESIGN	0.4997012057195006	DEFECT	0.27663545181345006	DESIGN	0.22271159432933438	WITHOUT_CLASSIFICATION	7.855595755127346E-4	IMPLEMENTATION	1.5902867907569086E-4	TEST	7.159883126510762E-6	DOCUMENTATION
//TODO: code duplication with JoinedSubclassEntityPersister	DESIGN	0.979666685522967	DESIGN	0.020326491169348794	WITHOUT_CLASSIFICATION	3.0724954614593165E-6	DOCUMENTATION	2.319315372756625E-6	TEST	1.3084656454403843E-6	IMPLEMENTATION	1.230312046343627E-7	DEFECT
//perhaps not really necessary...	DESIGN	0.8211328907499447	WITHOUT_CLASSIFICATION	0.16461735839647212	DESIGN	0.01315017599650134	DEFECT	0.0010836599828643225	IMPLEMENTATION	1.287679588412386E-5	DOCUMENTATION	3.0380783332035787E-6	TEST
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass! // was toUnqotedAliasStrings( getIdentiferColumnNames() ) before - now tried // to remove that unqoting and missing aliases..	DESIGN	0.5453842656685066	WITHOUT_CLASSIFICATION	0.4540170965638845	DESIGN	5.648133040347563E-4	DEFECT	3.332524479891853E-5	TEST	3.1131252599513105E-7	IMPLEMENTATION	1.8790624929074567E-7	DOCUMENTATION
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass! // was toUnqotedAliasStrings( getdiscriminatorColumnName() ) before - now tried // to remove that unqoting and missing aliases..	DESIGN	0.7000030556279503	DESIGN	0.2983680168450641	WITHOUT_CLASSIFICATION	0.0015794250112229598	DEFECT	4.9290756199467625E-5	TEST	1.9135483600467935E-7	DOCUMENTATION	2.0404727103227454E-8	IMPLEMENTATION
//TODO: should we use SELECT .. FOR UPDATE?	DESIGN	0.9825641064026388	DESIGN	0.015932125680475053	IMPLEMENTATION	0.0010461319059004801	WITHOUT_CLASSIFICATION	2.1456131575193376E-4	DOCUMENTATION	1.9413306508281284E-4	DEFECT	4.8941630151104106E-5	TEST
//TODO: optimize this better!	DESIGN	0.5784960845570117	IMPLEMENTATION	0.41418807258304036	DESIGN	0.00537531553841646	WITHOUT_CLASSIFICATION	0.0014085291916084014	TEST	3.0248171194008773E-4	DEFECT	2.2951641798289605E-4	DOCUMENTATION
//TODO: should we allow suffixes on these ?	DESIGN	0.9997986649073023	DESIGN	9.359096949980633E-5	IMPLEMENTATION	5.08897292518694E-5	DEFECT	5.0826673295878006E-5	WITHOUT_CLASSIFICATION	4.048889630371447E-6	TEST	1.9788310197098153E-6	DOCUMENTATION
//This is really ugly, but necessary:	DESIGN	0.5715700082126621	WITHOUT_CLASSIFICATION	0.42407585596698993	DESIGN	0.004324581221658608	DEFECT	1.9096899257235365E-5	IMPLEMENTATION	6.894698175104366E-6	DOCUMENTATION	3.5630012570149533E-6	TEST
//ugly little workaround for fact that createUniqueKeyLoaders() does not handle component properties	DESIGN	0.9999906253209452	DESIGN	9.325529490048569E-6	WITHOUT_CLASSIFICATION	3.077893194330271E-8	TEST	1.3369089067458704E-8	IMPLEMENTATION	4.148909861427857E-9	DOCUMENTATION	8.526339917147386E-10	DEFECT
//TODO: disable batch loading if lockMode > READ?	DESIGN	0.9906514190868274	WITHOUT_CLASSIFICATION	0.005261432460641543	IMPLEMENTATION	0.0023422447450418696	DEFECT	7.787659562883986E-4	DESIGN	7.638995787543922E-4	TEST	2.0223817244651603E-4	DOCUMENTATION
// append the SQL to return the generated identifier //TODO: suck into Insert	DESIGN	0.8656274762435586	DESIGN	0.13355248901992933	WITHOUT_CLASSIFICATION	7.983229714826976E-4	IMPLEMENTATION	1.0333618367717612E-5	DOCUMENTATION	9.579463742753502E-6	DEFECT	1.7986829187882274E-6	TEST
//TODO: I am not so sure about the exception handling in this bit!	DESIGN	0.9939632680218246	DESIGN	0.005240408173107986	DEFECT	5.667699694141868E-4	WITHOUT_CLASSIFICATION	2.142410714783032E-4	IMPLEMENTATION	1.0225573705486452E-5	DOCUMENTATION	5.0871904694062745E-6	TEST
//TODO: is this really necessary????	DESIGN	0.9960024324954913	DESIGN	0.003643905404939424	WITHOUT_CLASSIFICATION	2.2615260511740527E-4	IMPLEMENTATION	1.023111145581331E-4	DEFECT	1.9206206341611866E-5	DOCUMENTATION	5.992173552242468E-6	TEST
//TODO: move to .sql package, and refactor with similar things!	DESIGN	0.9992096862445599	DESIGN	7.820716320841976E-4	WITHOUT_CLASSIFICATION	3.495390819248332E-6	DEFECT	2.116746628114074E-6	IMPLEMENTATION	2.06050594254309E-6	TEST	5.694799662190053E-7	DOCUMENTATION
//TODO: implement functionality //  this might be painful to do here, as the "join post processing" for //  the subquery has already been performed (meaning that for //  theta-join dialects, the join conditions have already been moved //  over to the where clause).  A "simple" solution here might to //  perform "join post processing" once for the entire query (including //  any subqueries) at one fell swoop	DESIGN	0.9999785913194814	DESIGN	2.135417624393687E-5	IMPLEMENTATION	2.397105078557215E-8	DEFECT	1.918375740249928E-8	WITHOUT_CLASSIFICATION	1.1186341830684457E-8	DOCUMENTATION	1.6312455185752382E-10	TEST
// todo : this eventually needs to be removed	DESIGN	0.9805219924177223	WITHOUT_CLASSIFICATION	0.019165558548191776	DESIGN	2.3928078750820223E-4	DEFECT	7.150474334893143E-5	IMPLEMENTATION	1.224600410472717E-6	DOCUMENTATION	4.389028183712213E-7	TEST
//kinda ugly, but needed for collections with a "." node mapping	DESIGN	0.9916723125754737	WITHOUT_CLASSIFICATION	0.005754882555781286	IMPLEMENTATION	0.0020450371725064926	DESIGN	3.67562679805774E-4	DEFECT	1.5642568435760327E-4	TEST	3.7793320751410695E-6	DOCUMENTATION
//is this ok?	DESIGN	0.9752396301940935	WITHOUT_CLASSIFICATION	0.024624408382339785	DESIGN	5.549016790178608E-5	DEFECT	3.5251455043595596E-5	IMPLEMENTATION	2.3050480568145087E-5	TEST	2.2169320053132147E-5	DOCUMENTATION
//TODO: perhaps this should be some other RuntimeException...	DESIGN	0.9996976346915953	DESIGN	1.7484490059925398E-4	DEFECT	1.2453622819414475E-4	IMPLEMENTATION	2.344888646525318E-6	TEST	3.298287668348108E-7	WITHOUT_CLASSIFICATION	3.0946219783470935E-7	DOCUMENTATION
//TODO: make this a bit nicer	DESIGN	0.9990553321757646	DESIGN	5.686155341287849E-4	IMPLEMENTATION	1.942723552482322E-4	WITHOUT_CLASSIFICATION	1.2485756675694606E-4	TEST	4.8077757857168365E-5	DEFECT	8.844610244259922E-6	DOCUMENTATION
//Yuck:	DESIGN	0.8289835579580794	WITHOUT_CLASSIFICATION	0.1695940378971545	DESIGN	0.001105559814644733	DEFECT	1.3523306590437184E-4	DOCUMENTATION	1.1092986931494168E-4	IMPLEMENTATION	7.068139490203628E-5	TEST
//TODO: we should provide some way to get keys of collection of statistics to make it easier to retrieve from a GUI perspective	DESIGN	0.9999969737251568	DESIGN	1.528736384670192E-6	WITHOUT_CLASSIFICATION	1.166878401104536E-6	DEFECT	2.863687984035569E-7	IMPLEMENTATION	3.632414512394027E-8	DOCUMENTATION	7.967113804788932E-9	TEST
/**	DESIGN	0.4105629660680269	DOCUMENTATION	0.38067849588335895	DESIGN	0.10486748836536479	IMPLEMENTATION	0.03838592522123044	WITHOUT_CLASSIFICATION	0.033938355862457185	DEFECT	0.03156676859956161	TEST
// TODO : will need reference to session factory to fully complete HHH-1907	DESIGN	0.9946404413408145	DESIGN	0.004195204017243337	IMPLEMENTATION	8.279990062683427E-4	WITHOUT_CLASSIFICATION	2.425103339304862E-4	DEFECT	8.779551324788618E-5	DOCUMENTATION	6.0497884955337235E-6	TEST
//TODO: currently keeps Getters and Setters (instead of PropertyAccessors) because of the way getGetter() and getSetter() are implemented currently; yuck!	DESIGN	0.9999998060975788	DESIGN	1.1531989973080169E-7	WITHOUT_CLASSIFICATION	5.8973391434331414E-8	DOCUMENTATION	1.4640638975361816E-8	DEFECT	3.062832926997738E-9	IMPLEMENTATION	1.9056581499566864E-9	TEST
//TODO: redesign how PropertyAccessors are acquired...	DESIGN	0.8990266133934277	DESIGN	0.07619564442131598	DEFECT	0.01436484637595995	IMPLEMENTATION	0.009030301498189341	WITHOUT_CLASSIFICATION	0.0010842976643456255	DOCUMENTATION	2.98296646761384E-4	TEST
// todo : YUCK!!!	DESIGN	0.9471109379402224	WITHOUT_CLASSIFICATION	0.04479962758816511	DESIGN	0.007673991939559056	DEFECT	3.1228030790740884E-4	IMPLEMENTATION	7.48053628453224E-5	DOCUMENTATION	2.8356861300740667E-5	TEST
// TODO : YUCK!!!  fix after HHH-1907 is complete	DESIGN	0.9984029355382427	DESIGN	9.936274320611162E-4	DEFECT	4.8750661063291404E-4	IMPLEMENTATION	8.523596442819504E-5	TEST	2.823854799924092E-5	WITHOUT_CLASSIFICATION	2.4559066356148507E-6	DOCUMENTATION
//TODO: need to make the majority of this functionality into a top-level support class for custom impl support	DESIGN	0.9343887231705458	DESIGN	0.06491773670811281	IMPLEMENTATION	5.658579438744924E-4	WITHOUT_CLASSIFICATION	9.534720397404506E-5	TEST	3.200663387387385E-5	DOCUMENTATION	3.283396190472666E-7	DEFECT
//TODO: design new lifecycle for ProxyFactory	DESIGN	0.6652962332626332	DESIGN	0.30723913035630146	WITHOUT_CLASSIFICATION	0.024264226535154552	IMPLEMENTATION	0.001989235167563505	DOCUMENTATION	6.948205654019301E-4	DEFECT	5.163541129453612E-4	TEST
//TODO: would be nice to handle proxy classes elegantly!	DESIGN	0.9894975489631707	DESIGN	0.007750676779700688	WITHOUT_CLASSIFICATION	0.002137715059900909	IMPLEMENTATION	5.444245515592867E-4	DEFECT	4.622667706425125E-5	TEST	2.3407968604172124E-5	DOCUMENTATION
// TODO: copy/paste from ManyToOneType	DESIGN	0.46821626805029815	WITHOUT_CLASSIFICATION	0.37441798639586144	DESIGN	0.11421919100586837	IMPLEMENTATION	0.03926807640379496	DEFECT	0.0024060237407070636	TEST	0.0014724544034699998	DOCUMENTATION
//TODO: should this be Session.instantiate(Persister, ...)?	DESIGN	0.9893671624559701	DESIGN	0.00874523473168509	WITHOUT_CLASSIFICATION	0.0011026094637396047	DEFECT	7.00510588484551E-4	IMPLEMENTATION	6.758887192744065E-5	TEST	1.6893888193146106E-5	DOCUMENTATION
//TODO: this is a bit arbitrary, expose a switch to the user?	DESIGN	0.9798381293050471	DESIGN	0.019846626929732436	WITHOUT_CLASSIFICATION	2.3796641539445827E-4	DEFECT	5.1738838054495874E-5	IMPLEMENTATION	1.7118377443474998E-5	DOCUMENTATION	8.420134328177822E-6	TEST
//TODO: implement caching?! proxies?!	DESIGN	0.9770341205263133	IMPLEMENTATION	0.022001806068864378	DESIGN	3.147876309236094E-4	DEFECT	2.805683603341259E-4	TEST	2.6603143278586516E-4	WITHOUT_CLASSIFICATION	1.0268598077872042E-4	DOCUMENTATION
//TODO: is this right??	DESIGN	0.9998683086789645	DESIGN	6.799329935909598E-5	WITHOUT_CLASSIFICATION	3.5120474809312835E-5	IMPLEMENTATION	1.4187264017670146E-5	DEFECT	8.175640226040564E-6	TEST	6.214642623229066E-6	DOCUMENTATION
// is this really necessary?	DESIGN	0.8551934730984517	WITHOUT_CLASSIFICATION	0.14477663360814616	DESIGN	2.7860591568365983E-5	DEFECT	1.432417468747416E-6	DOCUMENTATION	3.365993619074694E-7	TEST	2.6368500301258917E-7	IMPLEMENTATION
//TODO: move these to a new JoinableType abstract class, //extended by EntityType and PersistentCollectionType:	DESIGN	0.9975956355115122	DESIGN	0.0024026400039356918	WITHOUT_CLASSIFICATION	1.6438256920350005E-6	TEST	6.589217057995299E-8	DEFECT	1.430565426695528E-8	DOCUMENTATION	4.6103525723598236E-10	IMPLEMENTATION
// TODO: this is very suboptimal for some subclasses (namely components), // since it does not take advantage of two-phase-load	DESIGN	0.911572245852683	WITHOUT_CLASSIFICATION	0.07511279128627778	DESIGN	0.012265219206431513	DEFECT	0.0010285690613656806	TEST	1.4625683378971939E-5	DOCUMENTATION	6.548909863265871E-6	IMPLEMENTATION
// worrying about proxies is perhaps a little bit of overkill here...	DESIGN	0.996969897934288	DESIGN	0.0024621717116832097	DEFECT	4.585381963305263E-4	WITHOUT_CLASSIFICATION	1.0596224566569791E-4	IMPLEMENTATION	3.3753496834197574E-6	TEST	5.4562348982093735E-8	DOCUMENTATION
// NOTE VERY HACKISH WORKAROUND!! // TODO: Fix this so it will work for non-POJO entity mode	DESIGN	0.9999958561302045	DESIGN	3.6222014960606693E-6	IMPLEMENTATION	4.560703009011955E-7	DEFECT	6.124588022134881E-8	TEST	4.351884094813969E-9	DOCUMENTATION	2.340666931020124E-13	WITHOUT_CLASSIFICATION
// TODO: Fix this so it will work for non-POJO entity mode	DESIGN	0.9372284106000331	DESIGN	0.05769202934243816	IMPLEMENTATION	0.004808052627620112	DEFECT	2.1584218756527052E-4	TEST	5.215607466697656E-5	DOCUMENTATION	3.5091676763806387E-6	WITHOUT_CLASSIFICATION
// We would probably refactor to have LogicParser (builds a tree of simple // expressions connected by and, or, not), ExpressionParser (translates // from OO terms like foo, foo.Bar, foo.Bar.Baz to SQL terms like // FOOS.ID, FOOS.BAR_ID, etc) and PathExpressionParser (which does much // the same thing it does now)	DESIGN	0.9367231165672032	WITHOUT_CLASSIFICATION	0.06321260939748478	DESIGN	5.947198874324401E-5	IMPLEMENTATION	2.598320945620574E-6	DEFECT	2.1333514570531367E-6	TEST	7.037416608844591E-8	DOCUMENTATION
//TODO: this is a little inefficient, don't need to do a whole //      deep replaceElements() call	DESIGN	0.9999876657147642	DESIGN	1.0739917601460525E-5	IMPLEMENTATION	1.4351576068315754E-6	WITHOUT_CLASSIFICATION	1.1948522431909354E-7	TEST	2.8347999494263375E-8	DOCUMENTATION	1.1376803862854628E-8	DEFECT
//workaround for WebLogic	DESIGN	0.949569490633761	DESIGN	0.05031950425956209	WITHOUT_CLASSIFICATION	6.988030386509311E-5	IMPLEMENTATION	2.5565593902899756E-5	DEFECT	1.1826397712724419E-5	DOCUMENTATION	3.7328111962745717E-6	TEST
//TODO: this dependency is kinda Bad	DESIGN	0.9988561756251002	DESIGN	7.551699737166419E-4	IMPLEMENTATION	1.9921973340812394E-4	DEFECT	1.1003264934779909E-4	DOCUMENTATION	4.622910376127631E-5	WITHOUT_CLASSIFICATION	3.317291466603769E-5	TEST
//ick!	DESIGN	0.9997770146442386	WITHOUT_CLASSIFICATION	1.677701136398439E-4	DESIGN	4.525091078311571E-5	DEFECT	6.46585107517689E-6	DOCUMENTATION	2.059803011678226E-6	TEST	1.4386772516006542E-6	IMPLEMENTATION
// short cut check...	DESIGN	0.9984754412460564	WITHOUT_CLASSIFICATION	0.0015125632754222956	DESIGN	6.0490051215791235E-6	IMPLEMENTATION	3.2329366006811426E-6	DEFECT	1.5586347862377954E-6	TEST	1.1549020127603652E-6	DOCUMENTATION
// todo : move to StringHelper?	DESIGN	0.9022086210197547	WITHOUT_CLASSIFICATION	0.09714444835188496	DESIGN	6.419346879441113E-4	DEFECT	2.330329682952573E-6	IMPLEMENTATION	1.507350813185917E-6	DOCUMENTATION	1.1582599200419248E-6	TEST
//yukky! Don't you have subclasses for that! //TODO race conditions can happen here	DESIGN	0.9693877298839472	DESIGN	0.030471561935871097	DEFECT	6.349795772869208E-5	TEST	5.2222168877866195E-5	DOCUMENTATION	1.69271289208694E-5	WITHOUT_CLASSIFICATION	8.060924654378766E-6	IMPLEMENTATION
//TODO: We probably should have a StatisticsNotPublishedException, to make it clean	DESIGN	0.9966791305037435	DESIGN	0.002974317608782562	WITHOUT_CLASSIFICATION	2.859673690568537E-4	DEFECT	4.2015069363477706E-5	IMPLEMENTATION	1.6753652048606475E-5	TEST	1.8157970051928244E-6	DOCUMENTATION
// FIXME hack to work around fact that calling // Node added = root.addChild( fqn ); doesn't  // properly set the version on the node	DESIGN	0.999953100792399	DESIGN	4.6787194283587534E-5	DEFECT	9.465871188349156E-8	IMPLEMENTATION	1.2388855287917199E-8	WITHOUT_CLASSIFICATION	4.578430680343183E-9	DOCUMENTATION	3.873195891480082E-10	TEST
// TODO: I considered validating the presence of the TS cache here, // but decided to defer unti getQueryCacheInstance() in case the  // cache is never actually used	DESIGN	0.8813533420584105	DESIGN	0.11671417808021285	IMPLEMENTATION	0.0017197665664428316	WITHOUT_CLASSIFICATION	2.0366049286727085E-4	DEFECT	8.98489592075104E-6	DOCUMENTATION	6.790614593570276E-8	TEST
//need to do that here rather than in the save event listener to let //the post insert events to have a id-filled entity when IDENTITY is used (EJB3)	DESIGN	0.5048120774554916	WITHOUT_CLASSIFICATION	0.4949769310426434	DESIGN	1.5983811947280584E-4	DEFECT	3.293876553526316E-5	TEST	1.6168440757520096E-5	IMPLEMENTATION	2.0461760995753054E-6	DOCUMENTATION
//TODO: simply remove this override //      if we fix the above todos	DESIGN	0.9652453421955077	WITHOUT_CLASSIFICATION	0.02398892703086567	DESIGN	0.00891575923676552	DEFECT	0.0013029501410342214	IMPLEMENTATION	5.437283273628209E-4	TEST	3.293068464212502E-6	DOCUMENTATION
// This, is used by SessionFactoryImpl to hand to the generated SessionImpl; // was the only reason I could see that we cannot just use null as // Settings.cacheProvider	DESIGN	0.8072288137120287	WITHOUT_CLASSIFICATION	0.19277064082179618	DESIGN	5.007888726530655E-7	DEFECT	1.9464653569727586E-8	IMPLEMENTATION	1.3385745263611256E-8	TEST	1.1826903637424643E-8	DOCUMENTATION
// this is done here 'cos we might only know the type here (ugly!) // TODO: improve this a lot:	DESIGN	0.9983627660795223	DESIGN	0.0016202370683748297	DEFECT	8.659702916018116E-6	IMPLEMENTATION	8.244419038793788E-6	TEST	8.014522101500215E-8	DOCUMENTATION	1.2584926962670977E-8	WITHOUT_CLASSIFICATION
// todo : would love to have this work on a notification basis //    where the successful binding of an entity/subclass would //    emit a notification which the extendsQueue entries could //    react to...	DESIGN	0.9170907325966132	WITHOUT_CLASSIFICATION	0.08185668355413141	DESIGN	0.001052218217978867	DEFECT	3.241046357978139E-7	TEST	3.506151518565364E-8	DOCUMENTATION	6.465125511125418E-9	IMPLEMENTATION
// TODO : not sure the best way to handle this. // The non-performant way :	DESIGN	0.9882624217359307	DESIGN	0.011215169963648765	IMPLEMENTATION	3.2614157933312244E-4	TEST	1.2219672070524405E-4	DOCUMENTATION	4.1943196560898046E-5	WITHOUT_CLASSIFICATION	3.2126803821211575E-5	DEFECT
// would be better to use the element-type to determine // whether the old and the new are equal here; the problem being // we do not necessarily have access to the element type in all // cases	DESIGN	0.9999832556589145	WITHOUT_CLASSIFICATION	1.670754434428697E-5	DESIGN	2.582837823905227E-8	IMPLEMENTATION	8.94958421193852E-9	DEFECT	2.002484863503009E-9	DOCUMENTATION	1.6293843332391787E-11	TEST
// This next bit is to allow for both unsaved-value="negative" // and for "older" behavior where version number did not get // seeded if it was already set in the object // TODO: shift it into unsaved-value strategy	DESIGN	0.9997623310704777	DESIGN	2.3766614528997546E-4	WITHOUT_CLASSIFICATION	2.3547373497119497E-9	DEFECT	2.8741139873448726E-10	TEST	1.109902636308909E-10	DOCUMENTATION	3.109316510627434E-11	IMPLEMENTATION
// merges don't cascade to uninitialized collections //	DESIGN	0.999995921556854	WITHOUT_CLASSIFICATION	3.392992773333943E-6	DESIGN	3.094387461128414E-7	DEFECT	3.0422679547522756E-7	IMPLEMENTATION	6.506240822706344E-8	TEST	6.722422987597065E-9	DOCUMENTATION
// TODO: an alternative is to check if the owner has changed; if it hasn't then // return collection.getOwner()	DESIGN	0.9749104984991557	IMPLEMENTATION	0.020965224547825095	WITHOUT_CLASSIFICATION	0.0031893853555966752	DESIGN	9.084254694983204E-4	DEFECT	2.474551766572302E-5	TEST	1.7206102584550653E-6	DOCUMENTATION
//it is possible that the tree-walking in OuterJoinLoader can get to //an association defined by a subclass, in which case the property-ref //might refer to a property defined on a subclass of the current class //in this case, the table name is not known - this temporary solution  //assumes that the property-ref refers to a property of the subclass //table that the association belongs to (a reasonable guess) //TODO: fix this, add: OuterJoinLoadable.getSubclassPropertyTableName(String propertyName)	DESIGN	0.9998792586847736	DESIGN	1.2072273958967946E-4	DEFECT	1.3825638558135042E-8	DOCUMENTATION	2.4457681635250922E-9	TEST	2.1935968316898813E-9	WITHOUT_CLASSIFICATION	1.1063324576722305E-10	IMPLEMENTATION
// this only works because collection entries are kept in a sequenced // map by persistence context (maybe we should do like entities and // keep a separate sequences set...) //TODO: calling entrySet on an IdentityMap is SLOW!!	DESIGN	0.9994099867112608	DESIGN	5.86422089452917E-4	DEFECT	3.0962120294107106E-6	IMPLEMENTATION	3.1295258473245793E-7	WITHOUT_CLASSIFICATION	1.3881608055842422E-7	TEST	4.3218591681783526E-8	DOCUMENTATION
// important, to account for newly saved entities in query // todo : some kind of check for new status...	DESIGN	0.8981966926100344	WITHOUT_CLASSIFICATION	0.09337180560363474	DESIGN	0.0077122444996502995	DEFECT	6.986114693240614E-4	IMPLEMENTATION	1.1264198624576819E-5	TEST	9.381618731802554E-6	DOCUMENTATION
// brand new collection //TODO: or an array!! we can't lock objects with arrays now??	DESIGN	0.7623136325829825	WITHOUT_CLASSIFICATION	0.1419229694515837	DEFECT	0.08902440194629258	DESIGN	0.006347743148757449	IMPLEMENTATION	3.158765460539484E-4	DOCUMENTATION	7.53763243297414E-5	TEST
//TODO: if object was an uninitialized proxy, this is inefficient, //      resulting in two SQL selects	DESIGN	0.9603795263179512	WITHOUT_CLASSIFICATION	0.03816495298309381	DESIGN	0.0012371771506411704	DEFECT	1.9489707819627235E-4	TEST	2.271715639384676E-5	DOCUMENTATION	7.29313723707679E-7	IMPLEMENTATION
//before cascade! //TODO: should this be Session.instantiate(Persister, ...)?	DESIGN	0.9006335888227293	DESIGN	0.07138798743361456	DEFECT	0.022462822838390656	WITHOUT_CLASSIFICATION	0.005187364749217476	IMPLEMENTATION	2.2259651148261883E-4	TEST	1.0563964456543517E-4	DOCUMENTATION
// TODO : absolutely no usages of this constructor form; can it go away?	DESIGN	0.981680775641148	DESIGN	0.018240516768831087	IMPLEMENTATION	5.284350615979531E-5	TEST	1.9993192189765387E-5	WITHOUT_CLASSIFICATION	5.52421044616524E-6	DOCUMENTATION	3.4668122504795464E-7	DEFECT
// todo : need to find a clean way to handle the "event source" role // a seperate classs responsible for generating/dispatching events just duplicates most of the Session methods... // passing around seperate reto interceptor, factory, actionQueue, and persistentContext is not manageable...	DESIGN	0.9964748029092405	DESIGN	0.00352438459559646	WITHOUT_CLASSIFICATION	5.736480743337811E-7	IMPLEMENTATION	1.633996985197384E-7	TEST	6.245774430984812E-8	DEFECT	1.298964608645629E-8	DOCUMENTATION
// todo : remove	DESIGN	0.888406156521186	WITHOUT_CLASSIFICATION	0.11094195975769272	DESIGN	5.190727357520242E-4	DEFECT	1.2198649946979115E-4	IMPLEMENTATION	5.914580500719604E-6	TEST	4.909905398681794E-6	DOCUMENTATION
//aliasRefNode.resolve( false, false, aliasRefNode.getText() ); //TODO: is it kosher to do it here? //TODO: is it kosher to do it here?	DESIGN	0.9817375330193675	IMPLEMENTATION	0.01764600025559774	DESIGN	3.9094459661447874E-4	TEST	1.316504871639932E-4	WITHOUT_CLASSIFICATION	9.326131930255304E-5	DEFECT	6.103219537515793E-7	DOCUMENTATION
// No explicit select expression; render the id and properties // projection lists for every persister in the from clause into // a single 'token node'. //TODO: the only reason we need this stuff now is collection filters, //      we should get rid of derived select clause completely!	DESIGN	0.9990275349292724	DESIGN	7.045432413340016E-4	DEFECT	2.6324567781604174E-4	WITHOUT_CLASSIFICATION	3.349293177871248E-6	TEST	1.2935430975259117E-6	DOCUMENTATION	3.33153020401131E-8	IMPLEMENTATION
// TODO : an optimization here would be to consider cascade deletes and not gen those delete statements; //      the difficulty is the ordering of the tables here vs the cascade attributes on the persisters -> //          the table info gotten here should really be self-contained (i.e., a class representation //          defining all the needed attributes), then we could then get an array of those	DESIGN	0.9982497111220852	DESIGN	0.0010277916993689307	WITHOUT_CLASSIFICATION	7.189203169446695E-4	IMPLEMENTATION	2.665554137299318E-6	DEFECT	7.515821443462056E-7	DOCUMENTATION	1.5972531971946897E-7	TEST
// TODO: get SQL rendering out of here, create an AST for the join expressions. // Use the SQL generator grammar to generate the SQL text for the index expression.	DESIGN	0.7258918671676352	WITHOUT_CLASSIFICATION	0.2641417306304906	DESIGN	0.009741846200470956	IMPLEMENTATION	1.7839084814226926E-4	TEST	2.7339208036598524E-5	DOCUMENTATION	1.8825945224251223E-5	DEFECT
// TODO : this really needs to be delayed unitl after we definitively know all node types // where this is currently a problem is parameters for which where we cannot unequivocally // resolve an expected type	DESIGN	0.9998734903511377	DESIGN	9.991350163285849E-5	DEFECT	1.5100043349806435E-5	WITHOUT_CLASSIFICATION	7.955326516944632E-6	DOCUMENTATION	3.461910952245443E-6	IMPLEMENTATION	7.88664103737168E-8	TEST
// TODO: Figure out a better way to get the FROM elements in a proper tree structure. // If this is not the destination of a many-to-many, add it as a child of the origin.	DESIGN	0.6969273867027567	DESIGN	0.17364801613171052	WITHOUT_CLASSIFICATION	0.11127657612202113	DEFECT	0.01760662639926946	IMPLEMENTATION	2.777210499181075E-4	TEST	2.636735943242061E-4	DOCUMENTATION
// work around that crazy issue where the tree contains // "empty" FromElements (no text); afaict, this is caused // by FromElementFactory.createCollectionJoin()	DESIGN	0.8625237399631714	DESIGN	0.1363534710558999	WITHOUT_CLASSIFICATION	8.807338516888339E-4	IMPLEMENTATION	2.2802677098558797E-4	DEFECT	1.0365811472862846E-5	TEST	3.6625467813718723E-6	DOCUMENTATION
//TODO: this class does too many things! we need a different //kind of path expression parser for each of the diffferent //ways in which path expressions can occur	DESIGN	0.8853201453104574	DESIGN	0.11272319510431074	DEFECT	0.00145212288768609	DOCUMENTATION	4.5014784853044195E-4	WITHOUT_CLASSIFICATION	4.2013943605010954E-5	IMPLEMENTATION	1.2374905410304197E-5	TEST
//real hacky... // used to count the nesting of parentheses	DESIGN	0.9999235816772061	DESIGN	6.297259572770705E-5	IMPLEMENTATION	8.592965929614722E-6	DEFECT	4.111729878412004E-6	WITHOUT_CLASSIFICATION	4.663645914561946E-7	TEST	2.746666666519985E-7	DOCUMENTATION
// TODO : would be really nice to cache the spec on the query-def so as to not have to re-calc the hash; // currently not doable though because of the resultset-ref stuff...	DESIGN	0.9761652970678308	DESIGN	0.015244647941180672	WITHOUT_CLASSIFICATION	0.006145656329069678	DEFECT	0.0023840055486928605	IMPLEMENTATION	5.9071337112686925E-5	DOCUMENTATION	1.3217761133277885E-6	TEST
//for arrays, we should end the collection load before resolving //the entities, since the actual array instances are not instantiated //during loading //TODO: or we could do this polymorphically, and have two //      different operations implemented differently for arrays	DESIGN	0.916265742978625	DEFECT	0.07158475194680601	DESIGN	0.012119819346411459	IMPLEMENTATION	2.1839671189246996E-5	WITHOUT_CLASSIFICATION	5.567892141534676E-6	DOCUMENTATION	2.2781648267751425E-6	TEST
// polymorphism not really handled completely correctly, // perhaps...well, actually its ok, assuming that the // entity name used in the lookup is the same as the // the one used here, which it will be	DESIGN	0.9216726720194793	WITHOUT_CLASSIFICATION	0.07780972544771586	DESIGN	5.155286384211953E-4	DEFECT	2.027719163211714E-6	IMPLEMENTATION	3.654893782324265E-8	TEST	9.626282602965999E-9	DOCUMENTATION
// TODO: should "record" how many properties we have reffered to - and if we  //       don't get'em'all we throw an exception! Way better than trial and error ;)	DESIGN	0.9940039004347746	DEFECT	0.005274106247631979	DESIGN	7.185367450573124E-4	WITHOUT_CLASSIFICATION	2.0481317379328532E-6	TEST	8.334828935696111E-7	IMPLEMENTATION	5.749579045625926E-7	DOCUMENTATION
// VERY IMPORTANT!!!! - This class needs to be free of any static references // to any CGLIB or Javassist classes.  Otherwise, users will always need both // on their classpaths no matter which (if either) they use. // // Another option here would be to remove the Hibernate.isPropertyInitialized() // method and have the users go through the SessionFactory to get this information.	DESIGN	0.9999996383804154	WITHOUT_CLASSIFICATION	3.454079920383818E-7	DESIGN	1.4359827405602829E-8	DEFECT	1.6213005967599635E-9	DOCUMENTATION	2.228520541833873E-10	IMPLEMENTATION	7.612359835958768E-12	TEST
// TODO: is it really neceassry to provide Configuration to CollectionPersisters ? Should it not be enough with associated class ? // or why does EntityPersister's not get access to configuration ? // // The only reason I could see that Configuration gets passed to collection persisters // is so that they can look up the dom4j node name of the entity element in case // no explicit node name was applied at the collection element level.  Are you kidding me? // Trivial to fix then.  Just store and expose the node name on the entity persister // (which the collection persister looks up anyway via other means...).	DESIGN	0.9996175542896494	DESIGN	3.479015909409407E-4	WITHOUT_CLASSIFICATION	1.859635240762401E-5	IMPLEMENTATION	1.439417339151111E-5	DEFECT	1.1996680606540415E-6	DOCUMENTATION	3.5392555014040704E-7	TEST
//for backward compatibility, allow a set with no not-null  //element columns, using all columns in the row locater SQL //TODO: create an implicit not null constraint on all cols?	DESIGN	0.740898426760648	DESIGN	0.2582057294532161	WITHOUT_CLASSIFICATION	7.23749551051784E-4	IMPLEMENTATION	1.0584064953084183E-4	TEST	5.6924351540820534E-5	DEFECT	9.329234012470307E-6	DOCUMENTATION
//SPACES //TODO: i'm not sure, but perhaps we should exclude //      abstract denormalized tables?	DESIGN	0.9988993985097055	DESIGN	6.576841780211682E-4	DEFECT	3.4103035168990374E-4	IMPLEMENTATION	6.254177525198461E-5	TEST	2.4017966615820972E-5	WITHOUT_CLASSIFICATION	1.5327218715745802E-5	DOCUMENTATION
//workaround, for backward compatibility of sets with no //not-null columns, assume all columns are used in the //row locator SQL	DESIGN	0.9823012750913832	WITHOUT_CLASSIFICATION	0.01769862072316732	DESIGN	9.681325033205223E-8	DEFECT	3.642494103395078E-9	DOCUMENTATION	2.951255750323969E-9	TEST	7.784493721179865E-10	IMPLEMENTATION
//note that this method could easily be moved up to BasicEntityPersister, //if we ever needed to reuse it from other subclasses	DESIGN	0.9990367189014872	DESIGN	9.632560695177046E-4	WITHOUT_CLASSIFICATION	2.065301775753993E-8	TEST	3.900694981087784E-9	IMPLEMENTATION	3.197240961795408E-10	DOCUMENTATION	1.5555816390249733E-10	DEFECT
//index += getPropertyColumnSpan( i ); //TODO:  this is kinda slow...	DESIGN	0.9905009069603172	DEFECT	0.007908903296901883	DESIGN	7.958967530687498E-4	WITHOUT_CLASSIFICATION	6.342879266903185E-4	IMPLEMENTATION	1.4158728274888652E-4	TEST	1.841778027298488E-5	DOCUMENTATION
//TODO: need some caching scheme? really comes down to decision  //      regarding amount of state (if any) kept on PropertyAccessors	DESIGN	0.8722272329469267	DESIGN	0.11295668069310437	DEFECT	0.011417161554560818	WITHOUT_CLASSIFICATION	0.0016623386398481846	IMPLEMENTATION	0.0013257766587116571	TEST	4.1080950684820646E-4	DOCUMENTATION
// TODO: here is why we need to make bytecode provider global :( // TODO : again, fix this after HHH-1907 is complete	DESIGN	0.9838723484489613	DESIGN	0.015819954742022184	IMPLEMENTATION	2.7875807059514777E-4	TEST	2.5686267024945637E-5	DEFECT	3.2519829567581173E-6	DOCUMENTATION	4.884396527919504E-10	WITHOUT_CLASSIFICATION
//TODO: Yuck! This is not quite good enough, it's a quick //hack around the problem of having a to-one association //that refers to an embedded component:	DESIGN	0.9999992414771047	DESIGN	6.110224249846055E-7	DEFECT	1.4392641883983782E-7	IMPLEMENTATION	1.567539050279587E-9	TEST	1.2959628316048635E-9	DOCUMENTATION	7.105496514492655E-10	WITHOUT_CLASSIFICATION
// for DOM4J "collections" only // TODO: it would be better if this was done at the higher level by Printer	DESIGN	0.648623156534637	DESIGN	0.15379228905841755	TEST	0.14213511629718248	WITHOUT_CLASSIFICATION	0.051892203706968794	IMPLEMENTATION	0.0033713896815438823	DEFECT	1.8584472125030238E-4	DOCUMENTATION
// would be great to move all this below here into another method that could also be used // from the new scrolling stuff. // // Would need to change the way the max-row stuff is handled (i.e. behind an interface) so // that I could do the control breaking at the means to know when to stop	DESIGN	0.9999990140966848	DESIGN	9.858456731919139E-7	WITHOUT_CLASSIFICATION	3.2205502991116035E-11	TEST	1.638385798939203E-11	IMPLEMENTATION	5.55036785055696E-12	DEFECT	3.5021775029243505E-12	DOCUMENTATION
//TODO: can we *always* use the "null property" approach for everything?	DESIGN	0.9961041630007588	DESIGN	0.0027899593791402616	WITHOUT_CLASSIFICATION	8.327616783020617E-4	IMPLEMENTATION	2.2600304871242034E-4	DEFECT	4.646835072613617E-5	DOCUMENTATION	6.445423601427527E-7	TEST
//polymorphism comment above	DESIGN	0.9999681605444306	WITHOUT_CLASSIFICATION	2.9272989988934943E-5	DESIGN	2.1891402622367187E-6	DEFECT	2.107116874730742E-7	DOCUMENTATION	1.2687235327751908E-7	TEST	3.9741277517704444E-8	IMPLEMENTATION
// some messy, complex stuff here, since createCriteria() can take an // aliased path, or a path rooted at the creating criteria instance	DESIGN	0.9999905428772162	WITHOUT_CLASSIFICATION	7.114124532899127E-6	DEFECT	1.523542301358151E-6	DESIGN	6.730447343496168E-7	IMPLEMENTATION	1.377319910768889E-7	TEST	8.679224197093259E-9	DOCUMENTATION
//TODO: really bad, evil hack to fix!!!	DESIGN	0.9999996418735273	DESIGN	2.4123132297815495E-7	DEFECT	1.1202396262124401E-7	IMPLEMENTATION	4.4584725621951645E-9	DOCUMENTATION	3.5691455904775155E-10	TEST	5.5799756650121425E-11	WITHOUT_CLASSIFICATION
// ugly hack for cases like "elements(foo.bar.collection)" // (multi-part path expression ending in elements or indices)	DESIGN	0.9996035001524881	DESIGN	3.409801475608939E-4	DEFECT	4.961774398843409E-5	WITHOUT_CLASSIFICATION	5.752251725380937E-6	IMPLEMENTATION	9.868141043413551E-8	TEST	5.10228269713986E-8	DOCUMENTATION
// try block is a hack around fact that currently tuplizers are not // given the opportunity to resolve a subclass entity name.  this // allows the (we assume custom) interceptor the ability to // influence this decision if we were not able to based on the // given entityName	DESIGN	0.9999999233109863	DESIGN	7.668599045541897E-8	WITHOUT_CLASSIFICATION	1.1766412493705039E-12	DOCUMENTATION	1.0394340875654184E-12	TEST	8.000389442340851E-13	IMPLEMENTATION	7.279218507157263E-15	DEFECT
/////////////////////////////////////////////////////////////////////// // HACK ALERT !!!!!!!!!!!!!!!!!!!!!!!!!!!! // Attempt to work around "ghost" ImpliedFromElements that occasionally // show up between the actual things being joined.  This consistently // occurs from index nodes (at least against many-to-many).  Not sure // if there are other conditions // // Essentially, look-ahead to the next FromElement that actually // writes something to the SQL	DESIGN	0.9999986195457286	DESIGN	1.3675474104066134E-6	WITHOUT_CLASSIFICATION	5.123490194982599E-9	DEFECT	4.085783197465068E-9	TEST	2.3670567145678033E-9	IMPLEMENTATION	1.3305309581173647E-9	DOCUMENTATION
//init the table here instead of earlier, so that we can get a quoted table name //TODO: would it be better to simply pass the qualified table name, instead of //      splitting it up into schema/catalog/table names	DESIGN	0.9470393929330716	DESIGN	0.030211713381368698	WITHOUT_CLASSIFICATION	0.022713175775535402	IMPLEMENTATION	3.555762385817297E-5	TEST	8.330564722659883E-8	DEFECT	7.698051896048714E-8	DOCUMENTATION
// TODO : would be great to have a Mapping#hasNonIdentifierPropertyNamedId method // I don't believe that Mapping#getReferencedPropertyType accounts for the identifier property; so // if it returns for a property named 'id', then we should have a non-id field named id	DESIGN	0.9725543307466038	DESIGN	0.027364807770254365	WITHOUT_CLASSIFICATION	7.265805007477688E-5	DEFECT	7.574974112311867E-6	TEST	4.951760360653875E-7	IMPLEMENTATION	1.3328291875307122E-7	DOCUMENTATION
//TODO: is this really necessary????	DESIGN	0.9960024324954913	DESIGN	0.003643905404939424	WITHOUT_CLASSIFICATION	2.2615260511740527E-4	IMPLEMENTATION	1.023111145581331E-4	DEFECT	1.9206206341611866E-5	DOCUMENTATION	5.992173552242468E-6	TEST
//TODO: ideally we need the construction of PropertyAccessor to take the following: //      1) EntityMode //      2) EntityMode-specific data (i.e., the classname for pojo entities) //      3) Property-specific data based on the EntityMode (i.e., property-name or dom4j-node-name) // The easiest way, with the introduction of the new runtime-metamodel classes, would be the // the following predicates: //      1) PropertyAccessorFactory.getPropertyAccessor() takes references to both a //          org.hibernate.metadata.EntityModeMetadata and org.hibernate.metadata.Property //      2) What is now termed a "PropertyAccessor" stores any values needed from those two //          pieces of information //      3) Code can then simply call PropertyAccess.getGetter() with no parameters; likewise with //          PropertyAccessor.getSetter()	DESIGN	0.5397660960473618	DESIGN	0.46021290033105355	WITHOUT_CLASSIFICATION	1.0399525667415905E-5	IMPLEMENTATION	7.158121708963097E-6	DOCUMENTATION	2.682612763548298E-6	DEFECT	7.633614447598097E-7	TEST
//TODO: this is temporary in that the end result will probably not take a Property reference per-se.	DESIGN	0.9998422172998311	DESIGN	1.5368946815695237E-4	DEFECT	4.0761786648497195E-6	WITHOUT_CLASSIFICATION	1.2421497690202488E-8	DOCUMENTATION	4.556541381120378E-9	TEST	7.530807677788766E-11	IMPLEMENTATION
// todo : this eventually needs to be removed	DESIGN	0.9805219924177223	WITHOUT_CLASSIFICATION	0.019165558548191776	DESIGN	2.3928078750820223E-4	DEFECT	7.150474334893143E-5	IMPLEMENTATION	1.224600410472717E-6	DOCUMENTATION	4.389028183712213E-7	TEST
//TODO: make this a bit nicer	DESIGN	0.9990553321757646	DESIGN	5.686155341287849E-4	IMPLEMENTATION	1.942723552482322E-4	WITHOUT_CLASSIFICATION	1.2485756675694606E-4	TEST	4.8077757857168365E-5	DEFECT	8.844610244259922E-6	DOCUMENTATION
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9833632398566098	DESIGN	0.016475174357607526	WITHOUT_CLASSIFICATION	1.3138319006957734E-4	DEFECT	2.938333630420967E-5	IMPLEMENTATION	5.75362029357717E-7	DOCUMENTATION	2.438973797991491E-7	TEST
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9833632398566098	DESIGN	0.016475174357607526	WITHOUT_CLASSIFICATION	1.3138319006957734E-4	DEFECT	2.938333630420967E-5	IMPLEMENTATION	5.75362029357717E-7	DOCUMENTATION	2.438973797991491E-7	TEST
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9833632398566098	DESIGN	0.016475174357607526	WITHOUT_CLASSIFICATION	1.3138319006957734E-4	DEFECT	2.938333630420967E-5	IMPLEMENTATION	5.75362029357717E-7	DOCUMENTATION	2.438973797991491E-7	TEST
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9833632398566098	DESIGN	0.016475174357607526	WITHOUT_CLASSIFICATION	1.3138319006957734E-4	DEFECT	2.938333630420967E-5	IMPLEMENTATION	5.75362029357717E-7	DOCUMENTATION	2.438973797991491E-7	TEST
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9833632398566098	DESIGN	0.016475174357607526	WITHOUT_CLASSIFICATION	1.3138319006957734E-4	DEFECT	2.938333630420967E-5	IMPLEMENTATION	5.75362029357717E-7	DOCUMENTATION	2.438973797991491E-7	TEST
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9833632398566098	DESIGN	0.016475174357607526	WITHOUT_CLASSIFICATION	1.3138319006957734E-4	DEFECT	2.938333630420967E-5	IMPLEMENTATION	5.75362029357717E-7	DOCUMENTATION	2.438973797991491E-7	TEST
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9833632398566098	DESIGN	0.016475174357607526	WITHOUT_CLASSIFICATION	1.3138319006957734E-4	DEFECT	2.938333630420967E-5	IMPLEMENTATION	5.75362029357717E-7	DOCUMENTATION	2.438973797991491E-7	TEST
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9833632398566098	DESIGN	0.016475174357607526	WITHOUT_CLASSIFICATION	1.3138319006957734E-4	DEFECT	2.938333630420967E-5	IMPLEMENTATION	5.75362029357717E-7	DOCUMENTATION	2.438973797991491E-7	TEST
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.9998615929488017	DESIGN	6.414659705297389E-5	DEFECT	5.450749823680242E-5	DOCUMENTATION	1.69881916643923E-5	WITHOUT_CLASSIFICATION	2.0330707311064766E-6	IMPLEMENTATION	7.316935130855047E-7	TEST
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.9998615929488017	DESIGN	6.414659705297389E-5	DEFECT	5.450749823680242E-5	DOCUMENTATION	1.69881916643923E-5	WITHOUT_CLASSIFICATION	2.0330707311064766E-6	IMPLEMENTATION	7.316935130855047E-7	TEST
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.9998615929488017	DESIGN	6.414659705297389E-5	DEFECT	5.450749823680242E-5	DOCUMENTATION	1.69881916643923E-5	WITHOUT_CLASSIFICATION	2.0330707311064766E-6	IMPLEMENTATION	7.316935130855047E-7	TEST
// TODO : probably better to calculate these and pass them in, as it'll be more performant	DESIGN	0.9999979927055205	DESIGN	1.7022535364563091E-6	IMPLEMENTATION	2.0603513518667004E-7	DOCUMENTATION	6.149479148735833E-8	DEFECT	3.420187537119931E-8	WITHOUT_CLASSIFICATION	3.309141196092068E-9	TEST
