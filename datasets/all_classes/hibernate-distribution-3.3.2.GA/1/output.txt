// todo : add support for READ_WRITE ( + NONSTRICT_READ_WRITE ??? )	IMPLEMENTATION	0.992395353310256	WITHOUT_CLASSIFICATION	0.006776049958339125	IMPLEMENTATION	4.403032261502355E-4	DESIGN	3.231822972548463E-4	DEFECT	4.367711913873687E-5	TEST	2.1434088860993666E-5	DOCUMENTATION
// todo : add support for READ_WRITE ( + NONSTRICT_READ_WRITE ??? )	IMPLEMENTATION	0.992395353310256	WITHOUT_CLASSIFICATION	0.006776049958339125	IMPLEMENTATION	4.403032261502355E-4	DESIGN	3.231822972548463E-4	DEFECT	4.367711913873687E-5	TEST	2.1434088860993666E-5	DOCUMENTATION
//TODO: return new Lock(ts);	IMPLEMENTATION	0.9994460845589329	WITHOUT_CLASSIFICATION	3.0349518562539524E-4	IMPLEMENTATION	1.4841240511732952E-4	DESIGN	7.727107322135987E-5	DEFECT	2.0120459486446796E-5	DOCUMENTATION	4.616317616654386E-6	TEST
//TODO: if lock.getTimestamp().equals(ts)	IMPLEMENTATION	0.8309083050349266	WITHOUT_CLASSIFICATION	0.14044160927446456	IMPLEMENTATION	0.022356744232882208	DEFECT	0.0029018649526477177	DESIGN	0.002461562724394889	TEST	9.29913780683934E-4	DOCUMENTATION
//TODO mappings.getLogicalTableName(ownerTable)	IMPLEMENTATION	0.9541251925289156	WITHOUT_CLASSIFICATION	0.03208769242250065	IMPLEMENTATION	0.007363829829622452	DESIGN	0.005884716336825667	DEFECT	2.775799389101024E-4	TEST	2.609889432255152E-4	DOCUMENTATION
// TODO: handle TypeDefs	IMPLEMENTATION	0.7963736405920518	WITHOUT_CLASSIFICATION	0.1914858419870212	IMPLEMENTATION	0.01150675444563798	DESIGN	3.7408199924034E-4	DOCUMENTATION	1.6740092005387288E-4	DEFECT	9.228005599472609E-5	TEST
//TODO check there is no actual definition elemnents when a ref is defined	IMPLEMENTATION	0.9717912723450574	WITHOUT_CLASSIFICATION	0.016252229325787064	DESIGN	0.011885571428574639	IMPLEMENTATION	3.518827838275984E-5	TEST	3.159296219370518E-5	DOCUMENTATION	4.145660004396353E-6	DEFECT
// TODO: bindpropertyresults(alias, returnElem)	IMPLEMENTATION	0.882717456281336	WITHOUT_CLASSIFICATION	0.09909087737469663	DESIGN	0.017351822874601103	IMPLEMENTATION	6.961643590713819E-4	DEFECT	1.0306075525140783E-4	DOCUMENTATION	4.061835504331287E-5	TEST
//TODO: validate existing of property with the chosen name. (secondpass )	IMPLEMENTATION	0.9996539712066594	WITHOUT_CLASSIFICATION	2.7849583131777284E-4	DEFECT	4.56827944924977E-5	DESIGN	9.798573320747673E-6	DOCUMENTATION	6.8420883742548956E-6	TEST	5.2095058353264464E-6	IMPLEMENTATION
//TODO: native ids	IMPLEMENTATION	0.9891545689911658	WITHOUT_CLASSIFICATION	0.008682361427157234	IMPLEMENTATION	0.0016631209813992701	DEFECT	2.2658414616866945E-4	DOCUMENTATION	2.2198008363343258E-4	DESIGN	5.138437047557092E-5	TEST
//TODO: if we are using identity columns, fetch the identifier	IMPLEMENTATION	0.9968576396340009	WITHOUT_CLASSIFICATION	0.0018740642479384956	DESIGN	7.011544551402975E-4	IMPLEMENTATION	3.8533102178305E-4	DEFECT	9.905949568608605E-5	DOCUMENTATION	8.275114545116683E-5	TEST
//TODO: handle property-ref	IMPLEMENTATION	0.9855060421659404	WITHOUT_CLASSIFICATION	0.013699834518086313	IMPLEMENTATION	6.25299366509123E-4	DESIGN	1.1536411120244354E-4	DEFECT	4.6551335305205465E-5	DOCUMENTATION	6.908502956410125E-6	TEST
//TODO: get all properties, not just the fetched ones!	IMPLEMENTATION	0.9967566569660558	WITHOUT_CLASSIFICATION	0.0018072516989361077	DEFECT	0.0010130034075522675	IMPLEMENTATION	4.0047029746887776E-4	DESIGN	1.46325087335023E-5	TEST	7.985121253330495E-6	DOCUMENTATION
//TODO: get all properties, not just the fetched ones!	IMPLEMENTATION	0.9967566569660558	WITHOUT_CLASSIFICATION	0.0018072516989361077	DEFECT	0.0010130034075522675	IMPLEMENTATION	4.0047029746887776E-4	DESIGN	1.46325087335023E-5	TEST	7.985121253330495E-6	DOCUMENTATION
/**	IMPLEMENTATION	0.9477299562869385	DESIGN	0.04686115600412967	WITHOUT_CLASSIFICATION	0.0017452186770541376	DOCUMENTATION	0.0014751996367055303	TEST	0.0013462445720009153	IMPLEMENTATION	8.422248231712079E-4	DEFECT
// TODO: RESTRICT VIOLATION	IMPLEMENTATION	0.5681353412534865	IMPLEMENTATION	0.2917323694233861	WITHOUT_CLASSIFICATION	0.10046930250804195	DESIGN	0.02716848780552264	DEFECT	0.007968229519194552	DOCUMENTATION	0.004526269490368207	TEST
// TODO: lowercasing done here. Was done "at random" before; maybe not needed at all ?	IMPLEMENTATION	0.5531382871386261	IMPLEMENTATION	0.4464257308908114	DESIGN	3.605537393622255E-4	DEFECT	6.30945153011698E-5	WITHOUT_CLASSIFICATION	9.135729557958641E-6	TEST	3.19798634106518E-6	DOCUMENTATION
// TODO: toLowerCase was not done before. Only used in Template.	IMPLEMENTATION	0.9776970674589089	DESIGN	0.01911376868137433	WITHOUT_CLASSIFICATION	0.002371298399778969	DEFECT	7.321014653169905E-4	IMPLEMENTATION	5.7446094239592196E-5	TEST	2.8317900381137476E-5	DOCUMENTATION
// add an entry for this type of entity. // we can be assured that all referenced entities have already // been processed, // so specify that this entity is with the latest batch. // doing the batch number before adding the name to the list is // a faster way to get an accurate number.	IMPLEMENTATION	0.9999992615306857	WITHOUT_CLASSIFICATION	5.202684202185053E-7	DESIGN	1.5724210784730547E-7	TEST	5.897238972181923E-8	DOCUMENTATION	1.7100083172907806E-9	DEFECT	2.7638803711607374E-10	IMPLEMENTATION
//TODO: avoid this for non-new instances where mightBeDirty==false	IMPLEMENTATION	0.6642631207205982	DESIGN	0.3327694855104227	WITHOUT_CLASSIFICATION	0.0019411988213894511	IMPLEMENTATION	4.52551770097096E-4	DEFECT	3.390247169960689E-4	TEST	2.3461846049637546E-4	DOCUMENTATION
//TODO: optimize away this lookup for entities w/o unsaved-value="undefined"	IMPLEMENTATION	0.9748818469040109	WITHOUT_CLASSIFICATION	0.01427053594272772	DESIGN	0.009859256621410345	IMPLEMENTATION	6.737179381887733E-4	DEFECT	2.2258392798733104E-4	DOCUMENTATION	9.205866567492965E-5	TEST
// we could move this inside if we wanted to // tolerate collection initializations during // collection dirty checking:	IMPLEMENTATION	0.9352269047189314	WITHOUT_CLASSIFICATION	0.06449147913563912	DESIGN	2.6306633768857356E-4	TEST	1.1853507467657854E-5	IMPLEMENTATION	3.526810166671868E-6	DEFECT	3.169490106567088E-6	DOCUMENTATION
//TODO: assertion only, could be optimized away	IMPLEMENTATION	0.9989637027996547	WITHOUT_CLASSIFICATION	5.631929375301622E-4	IMPLEMENTATION	3.293631334879389E-4	DEFECT	1.006436919014809E-4	DESIGN	3.09133378884195E-5	TEST	1.2184099537132123E-5	DOCUMENTATION
//TODO: check that entry.getIdentifier().equals(requestedId)	IMPLEMENTATION	0.8831771252822327	IMPLEMENTATION	0.11410466089101973	WITHOUT_CLASSIFICATION	0.0016742572429948577	DESIGN	5.587249279698191E-4	TEST	3.4323941816713185E-4	DEFECT	1.4199223761577094E-4	DOCUMENTATION
//TODO: check that entry.getIdentifier().equals(requestedId)	IMPLEMENTATION	0.8831771252822327	IMPLEMENTATION	0.11410466089101973	WITHOUT_CLASSIFICATION	0.0016742572429948577	DESIGN	5.587249279698191E-4	TEST	3.4323941816713185E-4	DEFECT	1.4199223761577094E-4	DOCUMENTATION
// TODO : why aren't these the same?	IMPLEMENTATION	0.9905534040503235	IMPLEMENTATION	0.008612521176043669	DESIGN	4.1881139580858616E-4	DOCUMENTATION	2.200395000090054E-4	WITHOUT_CLASSIFICATION	1.4043336512054304E-4	TEST	5.479051269471032E-5	DEFECT
//TODO: always true for now, but not if we later decide to support elements() in the from clause	IMPLEMENTATION	0.5150455998034322	WITHOUT_CLASSIFICATION	0.3988382564273073	DESIGN	0.08530028548258244	DEFECT	6.937608742959618E-4	IMPLEMENTATION	6.54315663024251E-5	DOCUMENTATION	5.6665846079607966E-5	TEST
// TODO : or should we return 'containsTableAlias'??	IMPLEMENTATION	0.6799327310294154	DESIGN	0.294144567096294	IMPLEMENTATION	0.025198378544813244	WITHOUT_CLASSIFICATION	3.5957309509197875E-4	DOCUMENTATION	2.2353195410627138E-4	DEFECT	1.4121828027911554E-4	TEST
//TODO: arithmetic expressions, multiple new Foo(...)	IMPLEMENTATION	0.6927022331082777	WITHOUT_CLASSIFICATION	0.3007608684435089	DESIGN	0.0032894691918071758	IMPLEMENTATION	0.002432925728443735	DEFECT	4.200936495617696E-4	TEST	3.9440987840071666E-4	DOCUMENTATION
//TODO: for some dialects it would be appropriate to add the renderOrderByPropertiesSelect() to other select strings	IMPLEMENTATION	0.6536412290912738	WITHOUT_CLASSIFICATION	0.33401258023543096	IMPLEMENTATION	0.006541397180762291	DESIGN	0.004646425800058572	TEST	0.001096559166076247	DEFECT	6.180852639814971E-5	DOCUMENTATION
//TODO: cache the persister, this shows up in yourkit	IMPLEMENTATION	0.929501599593225	WITHOUT_CLASSIFICATION	0.05370810726880839	DESIGN	0.012825312305903726	DEFECT	0.002289200379712161	IMPLEMENTATION	0.0010642728790686861	TEST	6.115075732821298E-4	DOCUMENTATION
//TODO: theoretically non-threadsafe...	IMPLEMENTATION	0.9675990594936269	WITHOUT_CLASSIFICATION	0.02398812192898402	IMPLEMENTATION	0.004707586089745029	DESIGN	0.0032557139034940234	DEFECT	4.2011812645007034E-4	DOCUMENTATION	2.940045769989957E-5	TEST
// todo : look at optimizing these...	IMPLEMENTATION	0.9996426327858415	WITHOUT_CLASSIFICATION	3.4644737145190363E-4	IMPLEMENTATION	3.6029841581626413E-6	DESIGN	3.0027008631243787E-6	DOCUMENTATION	2.6785725038875456E-6	TEST	1.6355851812212452E-6	DEFECT
//TODO: maybe call it getRowSelection() ?	IMPLEMENTATION	0.5748619534817256	WITHOUT_CLASSIFICATION	0.3297344173309221	DESIGN	0.062239309777330366	IMPLEMENTATION	0.032051598351583874	DEFECT	7.199568882040545E-4	TEST	3.9276417023381027E-4	DOCUMENTATION
//TODO: make this handle multiple collection roles!	IMPLEMENTATION	0.961282700585546	DESIGN	0.037029782439639766	WITHOUT_CLASSIFICATION	0.0010449828900831897	IMPLEMENTATION	3.906182347421706E-4	DEFECT	2.1258478971323186E-4	TEST	3.9331060275493025E-5	DOCUMENTATION
//TODO: can we limit stored procedures ?!	IMPLEMENTATION	0.9216090954360993	WITHOUT_CLASSIFICATION	0.0690130691989131	DESIGN	0.006772790076612316	DEFECT	0.002345066293957305	IMPLEMENTATION	1.6739556237692295E-4	DOCUMENTATION	9.258343204105668E-5	TEST
// TODO: not visible to the user!	IMPLEMENTATION	0.45243961554570045	WITHOUT_CLASSIFICATION	0.2741161630854313	DEFECT	0.26500651518401314	IMPLEMENTATION	0.0050442772170332635	DESIGN	0.0026669394956465135	DOCUMENTATION	7.264894721754486E-4	TEST
//TODO: unnecessary for databases with ANSI-style joins	IMPLEMENTATION	0.9222156383690454	WITHOUT_CLASSIFICATION	0.05710335125227791	DESIGN	0.016406534958952872	IMPLEMENTATION	0.0037627586079645335	DEFECT	3.9067633349995515E-4	TEST	1.2104047825917242E-4	DOCUMENTATION
//TODO: use these in methods above	IMPLEMENTATION	0.9347852870907314	WITHOUT_CLASSIFICATION	0.06239085487334028	DESIGN	0.001701002385417374	IMPLEMENTATION	5.245721967891558E-4	DEFECT	3.2728326705888823E-4	TEST	2.710001866629856E-4	DOCUMENTATION
// TODO: better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.981215390886571	DESIGN	0.015306675522193744	IMPLEMENTATION	0.0033650668762563694	DEFECT	4.3133411287502186E-5	TEST	3.590910283383446E-5	WITHOUT_CLASSIFICATION	3.3824200857681914E-5	DOCUMENTATION
// TODO: better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.981215390886571	DESIGN	0.015306675522193744	IMPLEMENTATION	0.0033650668762563694	DEFECT	4.3133411287502186E-5	TEST	3.590910283383446E-5	WITHOUT_CLASSIFICATION	3.3824200857681914E-5	DOCUMENTATION
// TODO : temporary initial step towards HHH-1907	IMPLEMENTATION	0.9525816904982781	DESIGN	0.046501194615806464	IMPLEMENTATION	5.156465514798074E-4	DEFECT	2.47663209311349E-4	WITHOUT_CLASSIFICATION	9.289422341753429E-5	DOCUMENTATION	6.091090170681037E-5	TEST
// todo : remove this once ComponentMetamodel is complete and merged	IMPLEMENTATION	0.6628462043579574	DESIGN	0.3371237727719503	WITHOUT_CLASSIFICATION	2.4685570941593026E-5	TEST	3.1674358821847297E-6	IMPLEMENTATION	1.1628466558586833E-6	DEFECT	1.007016612494986E-6	DOCUMENTATION
//TODO handle supportsNotNullUnique=false, but such a case does not exist in the wild so far	IMPLEMENTATION	0.9499163544958784	WITHOUT_CLASSIFICATION	0.04369221759203565	DEFECT	0.005923045423475572	IMPLEMENTATION	3.3686749283312286E-4	TEST	8.526810666319745E-5	DESIGN	4.624688911412756E-5	DOCUMENTATION
// TODO : still need to make CollectionPersisters EntityMode-aware	IMPLEMENTATION	0.99452544834633	DESIGN	0.005376000027400395	IMPLEMENTATION	4.6357919581699494E-5	DOCUMENTATION	1.9084665299607823E-5	DEFECT	1.815514269712525E-5	TEST	1.4953898691170051E-5	WITHOUT_CLASSIFICATION
//TODO: add owner argument!!	IMPLEMENTATION	0.9963332664124128	WITHOUT_CLASSIFICATION	0.0015123326494653662	IMPLEMENTATION	0.0014546155471518935	DOCUMENTATION	6.120751871539908E-4	DEFECT	4.425110097826951E-5	TEST	4.345910283763157E-5	DESIGN
//TODO: formulas ?	IMPLEMENTATION	0.9895303682447575	WITHOUT_CLASSIFICATION	0.009698604646819736	DESIGN	4.898562229181662E-4	IMPLEMENTATION	1.7347414362237643E-4	DEFECT	5.699002789345108E-5	DOCUMENTATION	5.070671398866412E-5	TEST
//TODO: include the rowids!!!!	IMPLEMENTATION	0.996677360205571	WITHOUT_CLASSIFICATION	0.002006015002106019	IMPLEMENTATION	5.543872297590414E-4	DEFECT	4.6754075773482027E-4	DESIGN	2.639275604501724E-4	DOCUMENTATION	3.076924437889586E-5	TEST
// todo : cache this sql...	IMPLEMENTATION	0.9998956483756717	WITHOUT_CLASSIFICATION	5.606040673334167E-5	IMPLEMENTATION	2.908410286835667E-5	DESIGN	1.0924142034883647E-5	TEST	7.91109338825256E-6	DOCUMENTATION	3.718793037236784E-7	DEFECT
//TODO: create uk loaders for component properties	IMPLEMENTATION	0.8902698702157313	WITHOUT_CLASSIFICATION	0.07452824675432314	DESIGN	0.026615685470361524	IMPLEMENTATION	0.007665594486889516	DEFECT	6.626739560521358E-4	TEST	2.5792911664244993E-4	DOCUMENTATION
//TODO: cache this in an instvar	IMPLEMENTATION	0.8171530130181868	WITHOUT_CLASSIFICATION	0.1820379677390614	DESIGN	3.483966316420368E-4	TEST	1.8068117596065645E-4	DOCUMENTATION	1.61715408616401E-4	DEFECT	1.1822602653264529E-4	IMPLEMENTATION
/////////////////////////////////////////////////////////////////////// // TODO : look at perhaps caching this...	IMPLEMENTATION	0.4469144677989481	IMPLEMENTATION	0.38606954887882233	DESIGN	0.14981741910200308	WITHOUT_CLASSIFICATION	0.009748924495042208	TEST	0.004117101561599526	DEFECT	0.003332538163584784	DOCUMENTATION
//TODO: eventually put this back in, once we think all is fixed //Object otherAlias = columnsUnique.put(qualifiedColumn, columnAlias);	IMPLEMENTATION	0.6586809498729351	IMPLEMENTATION	0.19995612254821607	DESIGN	0.11794318396133492	WITHOUT_CLASSIFICATION	0.016839253915553888	DEFECT	0.005213772921175259	DOCUMENTATION	0.001366716780784758	TEST
//TODO: if we support multiple fetch groups, we would need //      to clone the set of lazy properties!	IMPLEMENTATION	0.9530040466708997	WITHOUT_CLASSIFICATION	0.04257554551263866	IMPLEMENTATION	0.0037451601982545477	DESIGN	5.505520135324684E-4	DEFECT	8.55025353419489E-5	TEST	3.919306933254714E-5	DOCUMENTATION
//TODO: proxies!	IMPLEMENTATION	0.9036769134739318	WITHOUT_CLASSIFICATION	0.08978449196290793	IMPLEMENTATION	0.0038449787161784774	DEFECT	0.0016025706647792752	DESIGN	7.235160323895373E-4	DOCUMENTATION	3.6752914981305856E-4	TEST
//TODO: terrible implementation!	IMPLEMENTATION	0.7958529655582256	IMPLEMENTATION	0.1927644993959968	WITHOUT_CLASSIFICATION	0.007343891067814851	DESIGN	0.0036513748882263525	DEFECT	2.7478630572579695E-4	DOCUMENTATION	1.1248278401058417E-4	TEST
//TODO: proxies!	IMPLEMENTATION	0.9036769134739318	WITHOUT_CLASSIFICATION	0.08978449196290793	IMPLEMENTATION	0.0038449787161784774	DEFECT	0.0016025706647792752	DESIGN	7.235160323895373E-4	DOCUMENTATION	3.6752914981305856E-4	TEST
// TODO: I don't really like this implementation; it would be better if // this was handled by searchForDirtyCollections()	IMPLEMENTATION	0.6086980370965879	IMPLEMENTATION	0.3912588834497488	DESIGN	3.916293304686572E-5	DEFECT	2.062515434412213E-6	WITHOUT_CLASSIFICATION	1.7633289935858052E-6	TEST	9.067618837753056E-8	DOCUMENTATION
// TODO: check if key contains the owner ID	IMPLEMENTATION	0.586186435694975	IMPLEMENTATION	0.39602690405796864	WITHOUT_CLASSIFICATION	0.01550784972317722	DESIGN	0.0018626830464225648	DOCUMENTATION	3.3065901962714883E-4	DEFECT	8.546845782934795E-5	TEST
//TODO: proxies!	IMPLEMENTATION	0.9036769134739318	WITHOUT_CLASSIFICATION	0.08978449196290793	IMPLEMENTATION	0.0038449787161784774	DEFECT	0.0016025706647792752	DESIGN	7.235160323895373E-4	DOCUMENTATION	3.6752914981305856E-4	TEST
// table=null -> an association // - fill it in later //TODO fill in the mappings for table == null	IMPLEMENTATION	0.9999878747528563	WITHOUT_CLASSIFICATION	6.993231943816874E-6	DESIGN	3.02389457474255E-6	DEFECT	1.5394426578003386E-6	TEST	4.782225322815025E-7	IMPLEMENTATION	9.04554349252093E-8	DOCUMENTATION
// table=null -> an association - fill // it in later //TODO fill in the mappings for table == null	IMPLEMENTATION	0.999988064742748	WITHOUT_CLASSIFICATION	6.115926375550787E-6	DESIGN	3.971887988537107E-6	DEFECT	1.5112137075755492E-6	TEST	2.7038767455661506E-7	IMPLEMENTATION	6.584150574307958E-8	DOCUMENTATION
// if we are still not resolved, we might represent a constant. //      needed to add this here because the allowance of //      naked-prop-refs in the grammar collides with the //      definition of literals/constants ("nondeterminism"). //      TODO: cleanup the grammar so that "processConstants" is always just handled from here	IMPLEMENTATION	0.9910671680170489	DESIGN	0.0076949930100170425	IMPLEMENTATION	0.0010926450889416257	WITHOUT_CLASSIFICATION	9.295465210412072E-5	DOCUMENTATION	2.88874897641246E-5	DEFECT	2.3351742124174166E-5	TEST
//TODO: add referencedClass to disambiguate to FKs on the same //      columns, pointing to different tables	IMPLEMENTATION	0.9997063832095778	WITHOUT_CLASSIFICATION	2.7302278530378006E-4	DESIGN	1.1384500079809917E-5	IMPLEMENTATION	6.13546084858453E-6	DEFECT	1.7607686059110634E-6	DOCUMENTATION	1.3132755840978195E-6	TEST
//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9999583445423053	WITHOUT_CLASSIFICATION	2.23949494142627E-5	TEST	1.8211774751257505E-5	IMPLEMENTATION	8.532259763453799E-7	DOCUMENTATION	1.7618816713356443E-7	DEFECT	1.9319385669025227E-8	DESIGN
// aload_0	WITHOUT_CLASSIFICATION	0.9999933868116522	WITHOUT_CLASSIFICATION	2.4908304573186963E-6	DESIGN	1.5522742771697953E-6	IMPLEMENTATION	9.961997393867613E-7	DOCUMENTATION	9.89016445174027E-7	DEFECT	5.84867428810564E-7	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999933868116522	WITHOUT_CLASSIFICATION	2.4908304573186963E-6	DESIGN	1.5522742771697953E-6	IMPLEMENTATION	9.961997393867613E-7	DOCUMENTATION	9.89016445174027E-7	DEFECT	5.84867428810564E-7	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999933868116522	WITHOUT_CLASSIFICATION	2.4908304573186963E-6	DESIGN	1.5522742771697953E-6	IMPLEMENTATION	9.961997393867613E-7	DOCUMENTATION	9.89016445174027E-7	DEFECT	5.84867428810564E-7	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999933868116522	WITHOUT_CLASSIFICATION	2.4908304573186963E-6	DESIGN	1.5522742771697953E-6	IMPLEMENTATION	9.961997393867613E-7	DOCUMENTATION	9.89016445174027E-7	DEFECT	5.84867428810564E-7	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999933868116522	WITHOUT_CLASSIFICATION	2.4908304573186963E-6	DESIGN	1.5522742771697953E-6	IMPLEMENTATION	9.961997393867613E-7	DOCUMENTATION	9.89016445174027E-7	DEFECT	5.84867428810564E-7	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999933868116522	WITHOUT_CLASSIFICATION	2.4908304573186963E-6	DESIGN	1.5522742771697953E-6	IMPLEMENTATION	9.961997393867613E-7	DOCUMENTATION	9.89016445174027E-7	DEFECT	5.84867428810564E-7	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999933868116522	WITHOUT_CLASSIFICATION	2.4908304573186963E-6	DESIGN	1.5522742771697953E-6	IMPLEMENTATION	9.961997393867613E-7	DOCUMENTATION	9.89016445174027E-7	DEFECT	5.84867428810564E-7	TEST
// return	WITHOUT_CLASSIFICATION	0.9999906837563447	WITHOUT_CLASSIFICATION	5.118573546165213E-6	DESIGN	3.2958038717881002E-6	IMPLEMENTATION	4.1428238695168143E-7	DOCUMENTATION	2.873976262564359E-7	DEFECT	2.0018622414457855E-7	TEST
// return	WITHOUT_CLASSIFICATION	0.9999906837563447	WITHOUT_CLASSIFICATION	5.118573546165213E-6	DESIGN	3.2958038717881002E-6	IMPLEMENTATION	4.1428238695168143E-7	DOCUMENTATION	2.873976262564359E-7	DEFECT	2.0018622414457855E-7	TEST
/* | this | bean | args | raw bean | */	WITHOUT_CLASSIFICATION	0.9999302096799336	WITHOUT_CLASSIFICATION	3.7636533235820276E-5	TEST	1.8550454779683757E-5	DESIGN	5.751295143638606E-6	DOCUMENTATION	5.0375998880784855E-6	DEFECT	2.8144370192761372E-6	IMPLEMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999953737275101	WITHOUT_CLASSIFICATION	2.1012619934977168E-6	DESIGN	1.295051455718487E-6	DOCUMENTATION	6.076957009487775E-7	DEFECT	3.501882791010861E-7	IMPLEMENTATION	2.7207506059641947E-7	TEST
// astore 4 // store the raw bean	WITHOUT_CLASSIFICATION	0.9999914752366137	WITHOUT_CLASSIFICATION	5.87896830080703E-6	IMPLEMENTATION	1.0170192229074E-6	DESIGN	8.438594062411633E-7	TEST	4.430399688848019E-7	DEFECT	3.4187648749055675E-7	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999973013335597	WITHOUT_CLASSIFICATION	1.070760466788603E-6	IMPLEMENTATION	9.722096428212758E-7	DOCUMENTATION	2.333078204358083E-7	DESIGN	2.2666593050709984E-7	TEST	1.9572257984549732E-7	DEFECT
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999973013335597	WITHOUT_CLASSIFICATION	1.070760466788603E-6	IMPLEMENTATION	9.722096428212758E-7	DOCUMENTATION	2.333078204358083E-7	DESIGN	2.2666593050709984E-7	TEST	1.9572257984549732E-7	DEFECT
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999911820794463	WITHOUT_CLASSIFICATION	5.603377825024986E-6	DEFECT	2.690751963559431E-6	DESIGN	2.354762304625985E-7	TEST	1.9640234948899266E-7	DOCUMENTATION	9.191218521494466E-8	IMPLEMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999955414846625	WITHOUT_CLASSIFICATION	2.2280288833594663E-6	DEFECT	2.1411285965572114E-6	DESIGN	4.29246447150167E-8	DOCUMENTATION	2.93270618840169E-8	TEST	1.710615089502278E-8	IMPLEMENTATION
// putfield // new value of the field	WITHOUT_CLASSIFICATION	0.9999953937358695	WITHOUT_CLASSIFICATION	1.7089418747336569E-6	DEFECT	1.5033180702123867E-6	DESIGN	5.677596913321175E-7	IMPLEMENTATION	5.521969639553289E-7	DOCUMENTATION	2.740475300495844E-7	TEST
// reference type	WITHOUT_CLASSIFICATION	0.9999893545933933	WITHOUT_CLASSIFICATION	9.47374725741218E-6	DESIGN	5.861419231965971E-7	IMPLEMENTATION	4.789907115461091E-7	DOCUMENTATION	8.463535511843447E-8	TEST	2.189135937943694E-8	DEFECT
// double	WITHOUT_CLASSIFICATION	0.9999996117810364	WITHOUT_CLASSIFICATION	1.351363365655487E-7	DESIGN	7.27500808987883E-8	IMPLEMENTATION	7.230806488783711E-8	DOCUMENTATION	6.11734450903815E-8	TEST	4.685103608554016E-8	DEFECT
// double	WITHOUT_CLASSIFICATION	0.9999996117810364	WITHOUT_CLASSIFICATION	1.351363365655487E-7	DESIGN	7.27500808987883E-8	IMPLEMENTATION	7.230806488783711E-8	DOCUMENTATION	6.11734450903815E-8	TEST	4.685103608554016E-8	DEFECT
// long	WITHOUT_CLASSIFICATION	0.9999707417577338	WITHOUT_CLASSIFICATION	1.5852822927507578E-5	DESIGN	6.937059149602109E-6	DEFECT	2.8024816777360426E-6	DOCUMENTATION	1.9299215496464903E-6	TEST	1.735956961661549E-6	IMPLEMENTATION
// just decrement the lock, don't recache // (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.9993100101715834	WITHOUT_CLASSIFICATION	5.770308333198748E-4	IMPLEMENTATION	7.505289382489669E-5	DESIGN	2.1399823174624168E-5	DOCUMENTATION	8.6174133687159E-6	DEFECT	7.888864728531491E-6	TEST
// decode row selection...	WITHOUT_CLASSIFICATION	0.999972939284322	WITHOUT_CLASSIFICATION	2.0401023652021558E-5	DESIGN	4.120699300732212E-6	IMPLEMENTATION	1.0681261996215897E-6	TEST	7.706027587485967E-7	DOCUMENTATION	7.002637669011049E-7	DEFECT
//disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.9999853959866987	WITHOUT_CLASSIFICATION	1.2677784274440972E-5	DEFECT	1.2723271201432881E-6	TEST	2.6488353914819366E-7	DOCUMENTATION	2.2655720069777533E-7	DESIGN	1.624611668756831E-7	IMPLEMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999999946710453	WITHOUT_CLASSIFICATION	4.155868367114047E-9	DEFECT	7.858158001778771E-10	IMPLEMENTATION	2.933539854007064E-10	TEST	7.476504836943737E-11	DESIGN	1.915154228242212E-11	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999840019595271	WITHOUT_CLASSIFICATION	8.76001649255271E-6	DESIGN	2.5225111213773007E-6	TEST	1.8816310435091633E-6	DOCUMENTATION	1.7120406467838228E-6	DEFECT	1.1218411686311715E-6	IMPLEMENTATION
// ROW ID	WITHOUT_CLASSIFICATION	0.9999474945266215	WITHOUT_CLASSIFICATION	2.693165070499556E-5	IMPLEMENTATION	8.1169807790816E-6	DESIGN	7.3111605511009775E-6	DEFECT	5.961823849301641E-6	DOCUMENTATION	4.183857494013807E-6	TEST
// COMPOSITE-ID	WITHOUT_CLASSIFICATION	0.9999828254854188	WITHOUT_CLASSIFICATION	5.7564947747433686E-6	DESIGN	4.91677170059943E-6	IMPLEMENTATION	2.780422960141699E-6	DOCUMENTATION	1.8977416657601008E-6	TEST	1.8230834799265019E-6	DEFECT
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9998761150019172	WITHOUT_CLASSIFICATION	8.047201665692829E-5	IMPLEMENTATION	1.3657018195523062E-5	DOCUMENTATION	1.3404217729425498E-5	DEFECT	9.341316438098122E-6	DESIGN	7.010429062880634E-6	TEST
/*	WITHOUT_CLASSIFICATION	0.9964592541565794	WITHOUT_CLASSIFICATION	0.002407996684032343	DESIGN	3.387002723142719E-4	TEST	3.3739715340885986E-4	DOCUMENTATION	2.60962562549357E-4	DEFECT	1.9568917111566136E-4	IMPLEMENTATION
// DYNAMIC INSERT	WITHOUT_CLASSIFICATION	0.9999299377928041	WITHOUT_CLASSIFICATION	4.3714399614981116E-5	IMPLEMENTATION	7.5362565878518495E-6	DEFECT	7.131447724885501E-6	DESIGN	7.0508373861995264E-6	DOCUMENTATION	4.6292658819649764E-6	TEST
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999756170322378	WITHOUT_CLASSIFICATION	9.233550324549174E-6	IMPLEMENTATION	4.759263691857711E-6	DESIGN	4.1585902565877355E-6	DOCUMENTATION	3.3949731519668015E-6	TEST	2.836590337274663E-6	DEFECT
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999996211410209	WITHOUT_CLASSIFICATION	3.3648635919320143E-7	DESIGN	2.4322025957014414E-8	DEFECT	9.768003532497042E-9	TEST	6.68325483578381E-9	DOCUMENTATION	1.5993355628836642E-9	IMPLEMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999681065641712	WITHOUT_CLASSIFICATION	1.470117078038907E-5	IMPLEMENTATION	5.234694076403671E-6	DOCUMENTATION	4.9405202868547355E-6	DESIGN	3.891875464980898E-6	TEST	3.1251752201773887E-6	DEFECT
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999681065641712	WITHOUT_CLASSIFICATION	1.470117078038907E-5	IMPLEMENTATION	5.234694076403671E-6	DOCUMENTATION	4.9405202868547355E-6	DESIGN	3.891875464980898E-6	TEST	3.1251752201773887E-6	DEFECT
// generated properties can *never* be insertable...	WITHOUT_CLASSIFICATION	0.9999992800075699	WITHOUT_CLASSIFICATION	3.5119933905806676E-7	IMPLEMENTATION	3.016623261865582E-7	DESIGN	3.4267796360258896E-8	DEFECT	2.793372053713556E-8	TEST	4.929248016127439E-9	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9999521435128239	WITHOUT_CLASSIFICATION	1.8108466360876823E-5	DESIGN	9.264500486790954E-6	DEFECT	8.6264019490519E-6	IMPLEMENTATION	6.998675329057234E-6	DOCUMENTATION	4.858443050210549E-6	TEST
//by default, natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.9999746597967037	WITHOUT_CLASSIFICATION	2.476733153012241E-5	DESIGN	1.751570648321932E-7	IMPLEMENTATION	1.6703067485965624E-7	DOCUMENTATION	1.2642418681186854E-7	DEFECT	1.0425983962476277E-7	TEST
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9993808896425721	WITHOUT_CLASSIFICATION	3.1738477330262873E-4	DESIGN	1.9834906750046727E-4	IMPLEMENTATION	1.0097032905253231E-4	DEFECT	1.2928651013890607E-6	DOCUMENTATION	1.1133224709009527E-6	TEST
// we found some extends attributes referencing entities which were // not already processed.  here we need to locate all entity-names // and class-names contained in this document itself, making sure // that these get removed from the extendz list such that only // extends names which require us to delay processing (i.e. // external to this document and not yet processed) are contained // in the returned result	WITHOUT_CLASSIFICATION	0.9737195754100221	WITHOUT_CLASSIFICATION	0.014367783716673323	DESIGN	0.006370230480670493	DOCUMENTATION	0.005275671829681241	IMPLEMENTATION	1.516605122235381E-4	DEFECT	1.1507805072937919E-4	TEST
/**	WITHOUT_CLASSIFICATION	0.9477299562869385	DESIGN	0.04686115600412967	WITHOUT_CLASSIFICATION	0.0017452186770541376	DOCUMENTATION	0.0014751996367055303	TEST	0.0013462445720009153	IMPLEMENTATION	8.422248231712079E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
/**	WITHOUT_CLASSIFICATION	0.9477299562869385	DESIGN	0.04686115600412967	WITHOUT_CLASSIFICATION	0.0017452186770541376	DOCUMENTATION	0.0014751996367055303	TEST	0.0013462445720009153	IMPLEMENTATION	8.422248231712079E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// If close() is called, guarantee unbind()	WITHOUT_CLASSIFICATION	0.9999959552481694	WITHOUT_CLASSIFICATION	1.3912736081081554E-6	DEFECT	1.2659427079518313E-6	IMPLEMENTATION	1.0845108281964984E-6	DESIGN	2.2398876691868776E-7	TEST	7.903591934248814E-8	DOCUMENTATION
// if a ThreadLocalSessionContext-bound session happens to get // serialized, to be completely correct, we need to make sure // that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.9989239749991567	WITHOUT_CLASSIFICATION	9.989581600806411E-4	DEFECT	7.486270248500267E-5	DESIGN	1.0383688176579158E-6	DOCUMENTATION	7.147038896641667E-7	IMPLEMENTATION	4.51065570145546E-7	TEST
// on the inverse, it makes sense that if a ThreadLocalSessionContext- // bound session then gets deserialized to go ahead and re-bind it to // the ThreadLocalSessionContext session map.	WITHOUT_CLASSIFICATION	0.9964257605847512	WITHOUT_CLASSIFICATION	0.003533084486436842	DESIGN	3.2480593381971035E-5	DEFECT	7.019953950658958E-6	IMPLEMENTATION	9.945343243269295E-7	DOCUMENTATION	6.598471551287026E-7	TEST
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9995430946677448	WITHOUT_CLASSIFICATION	2.3606382782786025E-4	DESIGN	1.9828850942548755E-4	IMPLEMENTATION	7.80821654206015E-6	TEST	7.77851711204622E-6	DOCUMENTATION	6.9662613477291075E-6	DEFECT
// 60 second lock timeout	WITHOUT_CLASSIFICATION	0.9999643721488403	WITHOUT_CLASSIFICATION	2.2523980379068953E-5	IMPLEMENTATION	7.554220909595432E-6	DOCUMENTATION	3.37623735360514E-6	DESIGN	1.5881538076237342E-6	DEFECT	5.852587099418841E-7	TEST
// OptimisticCache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998465825807082	WITHOUT_CLASSIFICATION	1.3811122136210758E-4	IMPLEMENTATION	9.608916366869096E-6	DESIGN	2.488688293019381E-6	DOCUMENTATION	1.9432258819643276E-6	DEFECT	1.2653673878097353E-6	TEST
// Cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999199756279286	WITHOUT_CLASSIFICATION	7.006412111838503E-5	IMPLEMENTATION	5.486631709614235E-6	DESIGN	2.0631032879693233E-6	DEFECT	1.559041291231691E-6	DOCUMENTATION	8.514746643830374E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// do the put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999892444357206	WITHOUT_CLASSIFICATION	3.955925002985187E-6	DOCUMENTATION	3.3513911153862397E-6	DESIGN	1.9068572921261865E-6	DEFECT	7.817538621630109E-7	IMPLEMENTATION	7.596370067395221E-7	TEST
//ignore!	WITHOUT_CLASSIFICATION	0.9999242830854222	WITHOUT_CLASSIFICATION	2.2228322120506234E-5	IMPLEMENTATION	2.1058198816001708E-5	DOCUMENTATION	1.4735317200728663E-5	DESIGN	1.1731339996143395E-5	DEFECT	5.963736444401361E-6	TEST
// tree cache in optimistic mode seems to have as very difficult // time with remove calls on non-existent nodes (NPEs)...	WITHOUT_CLASSIFICATION	0.9997263559837573	WITHOUT_CLASSIFICATION	2.5843218192315065E-4	DESIGN	1.2001103826613462E-5	DEFECT	2.6499328830771873E-6	IMPLEMENTATION	3.9631916390726623E-7	TEST	1.6447844601822227E-7	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.9998801388872809	WITHOUT_CLASSIFICATION	6.915000824938823E-5	IMPLEMENTATION	2.2740506010262963E-5	DOCUMENTATION	1.64277425347296E-5	DESIGN	6.874122811356971E-6	TEST	4.668733113285374E-6	DEFECT
//ignore!	WITHOUT_CLASSIFICATION	0.9999242830854222	WITHOUT_CLASSIFICATION	2.2228322120506234E-5	IMPLEMENTATION	2.1058198816001708E-5	DOCUMENTATION	1.4735317200728663E-5	DESIGN	1.1731339996143395E-5	DEFECT	5.963736444401361E-6	TEST
//60 seconds	WITHOUT_CLASSIFICATION	0.9998801388872809	WITHOUT_CLASSIFICATION	6.915000824938823E-5	IMPLEMENTATION	2.2740506010262963E-5	DOCUMENTATION	1.64277425347296E-5	DESIGN	6.874122811356971E-6	TEST	4.668733113285374E-6	DEFECT
//do the failfast put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999890103703998	WITHOUT_CLASSIFICATION	5.042566578626912E-6	TEST	2.5237515982466224E-6	DESIGN	1.825363379936105E-6	DOCUMENTATION	1.4606302716399654E-6	DEFECT	1.37317771720054E-7	IMPLEMENTATION
// NOTE : evict() operates locally only (i.e., does not propogate // to any other nodes in the potential cluster).  This is // exactly what is needed when we destroy() here; destroy() is used // as part of the process of shutting down a SessionFactory; thus // these removals should not be propogated	WITHOUT_CLASSIFICATION	0.9950859772978358	DESIGN	0.0024266660536391618	WITHOUT_CLASSIFICATION	0.002316284269489772	DEFECT	1.4558455196862915E-4	TEST	2.3660871165121297E-5	IMPLEMENTATION	1.8269559014571048E-6	DOCUMENTATION
//    protected RegionRootListener listener;	WITHOUT_CLASSIFICATION	0.9989306367532935	WITHOUT_CLASSIFICATION	0.0010420562187516285	IMPLEMENTATION	8.820992770338807E-6	DESIGN	8.809857315445985E-6	DEFECT	7.394818603997854E-6	TEST	2.281359265025578E-6	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9983081596818556	WITHOUT_CLASSIFICATION	0.0015071906310012797	IMPLEMENTATION	1.1755241850973142E-4	DEFECT	5.064289611568715E-5	DESIGN	1.4591332540963053E-5	TEST	1.8630399766677558E-6	DOCUMENTATION
// If we've been blocking for the mutex, perhaps another // thread has already reestablished the root. // In case the node was reestablised via replication, confirm it's  // marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.9998827902099904	WITHOUT_CLASSIFICATION	1.0113278245893706E-4	DEFECT	7.138066723397902E-6	DESIGN	4.463741106418589E-6	TEST	4.227120219228895E-6	DOCUMENTATION	2.480795017551819E-7	IMPLEMENTATION
// For pessimistic locking, we just want to toss out our ref // to any old invalid root node and get the latest (may be null)            	WITHOUT_CLASSIFICATION	0.9997089203686699	WITHOUT_CLASSIFICATION	2.3733740158675304E-4	DEFECT	4.4846964791309287E-5	DESIGN	8.283213951594605E-6	TEST	4.5737492808426745E-7	DOCUMENTATION	1.546760724425606E-7	IMPLEMENTATION
// The rest only matters for optimistic locking, where we // need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.7821492769072143	WITHOUT_CLASSIFICATION	0.14302525583483747	IMPLEMENTATION	0.04106776343478127	DEFECT	0.0327038791679496	DESIGN	6.561803031100878E-4	DOCUMENTATION	3.976443521072275E-4	TEST
// Don't hold a transactional lock for this 	WITHOUT_CLASSIFICATION	0.9849253659359305	WITHOUT_CLASSIFICATION	0.01342631534576743	DESIGN	0.0015069330194382113	IMPLEMENTATION	6.598337647027437E-5	DOCUMENTATION	6.542512435389742E-5	TEST	9.977198039547497E-6	DEFECT
// Make sure the root node for the region exists and  // has a DataVersion that never complains	WITHOUT_CLASSIFICATION	0.8607640857825658	WITHOUT_CLASSIFICATION	0.13606588048194923	IMPLEMENTATION	0.002406540343480339	DESIGN	7.385128779491593E-4	DEFECT	2.1971833632426903E-5	TEST	3.008680422969237E-6	DOCUMENTATION
// Never evict this node	WITHOUT_CLASSIFICATION	0.9999589124052957	WITHOUT_CLASSIFICATION	2.9366980290537523E-5	IMPLEMENTATION	8.277100261217115E-6	TEST	2.100309183038221E-6	DOCUMENTATION	8.563528704708669E-7	DEFECT	4.86852099139695E-7	DESIGN
// Fix up the resident flag	WITHOUT_CLASSIFICATION	0.9999858382204149	WITHOUT_CLASSIFICATION	1.251963110223893E-5	IMPLEMENTATION	7.657109916852531E-7	TEST	3.2938994577122543E-7	DEFECT	2.7665780453861567E-7	DOCUMENTATION	2.703897409552789E-7	DESIGN
// 60 seconds	WITHOUT_CLASSIFICATION	0.9999719467402878	WITHOUT_CLASSIFICATION	2.0476540104032138E-5	IMPLEMENTATION	3.7165044100672443E-6	DOCUMENTATION	1.8733249505439457E-6	DESIGN	1.089385084911789E-6	TEST	8.975051626864272E-7	DEFECT
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999855001774166	WITHOUT_CLASSIFICATION	1.4115789129453422E-5	DESIGN	3.073342316090694E-7	DEFECT	6.925929505254659E-8	TEST	4.394637717748643E-9	DOCUMENTATION	3.0452895315371416E-9	IMPLEMENTATION
// no-op. We don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.9987105248158232	WITHOUT_CLASSIFICATION	0.0012629224963760007	IMPLEMENTATION	7.410234627140588E-6	DESIGN	7.132996398095984E-6	DOCUMENTATION	7.034387903676064E-6	DEFECT	4.975068871789446E-6	TEST
// This should only be possible if the caches are constructor injected 	WITHOUT_CLASSIFICATION	0.9999811745348821	WITHOUT_CLASSIFICATION	1.1331568152792281E-5	IMPLEMENTATION	3.6781916534539477E-6	DESIGN	2.402784670676442E-6	TEST	1.30856226463329E-6	DEFECT	1.0435837627883871E-7	DOCUMENTATION
// We only build caches if *none* were passed in.  Passing in // caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.999978892841804	WITHOUT_CLASSIFICATION	1.7817030231712698E-5	DEFECT	3.2394567510890668E-6	TEST	3.44752142221254E-8	DOCUMENTATION	1.4339870174169297E-8	DESIGN	1.8561288021849708E-9	IMPLEMENTATION
// Set up the cache factory	WITHOUT_CLASSIFICATION	0.9999997668558589	WITHOUT_CLASSIFICATION	7.802330973972384E-8	DESIGN	6.530634386363375E-8	DEFECT	3.844220635554942E-8	DOCUMENTATION	2.582708360860807E-8	IMPLEMENTATION	2.554519752108657E-8	TEST
// See if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.9998354335988363	WITHOUT_CLASSIFICATION	1.471624214468194E-4	DESIGN	1.1634383267529526E-5	DEFECT	2.4758037927205615E-6	IMPLEMENTATION	2.359175488691514E-6	DOCUMENTATION	9.34617167727169E-7	TEST
// Default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.999864313858557	WITHOUT_CLASSIFICATION	9.444480451102036E-5	DESIGN	2.204076739178371E-5	IMPLEMENTATION	1.4504707433375127E-5	TEST	3.464087371060745E-6	DEFECT	1.2317747357404137E-6	DOCUMENTATION
// Default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999851197166371	WITHOUT_CLASSIFICATION	1.0151332761549953E-5	DESIGN	2.0622980688547747E-6	DEFECT	1.1289579809942675E-6	TEST	1.0243390766502299E-6	IMPLEMENTATION	5.133554749853718E-7	DOCUMENTATION
// For Timestamps, we default to a separate config	WITHOUT_CLASSIFICATION	0.9997697530750914	WITHOUT_CLASSIFICATION	1.0614766052559452E-4	DESIGN	8.977963859142054E-5	IMPLEMENTATION	2.6822965996547793E-5	TEST	6.177424912050905E-6	DOCUMENTATION	1.3192348830246739E-6	DEFECT
// We can't change the TM on a running cache; just check // if the cache has no TM and we're OK with that	WITHOUT_CLASSIFICATION	0.9999999776381608	WITHOUT_CLASSIFICATION	1.0922732322600368E-8	IMPLEMENTATION	5.292268095524099E-9	DEFECT	3.8035471178412635E-9	TEST	1.887580170589227E-9	DESIGN	4.5571151087342205E-10	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.999993559631446	WITHOUT_CLASSIFICATION	5.812926473773827E-6	DESIGN	2.883815126615677E-7	DOCUMENTATION	1.978287127220391E-7	IMPLEMENTATION	8.256900944015836E-8	DEFECT	5.866284530406111E-8	TEST
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999919308553674	WITHOUT_CLASSIFICATION	4.179739431519484E-6	IMPLEMENTATION	2.279610677295388E-6	DEFECT	9.235912842750827E-7	DESIGN	3.448997962048505E-7	TEST	3.413034434059249E-7	DOCUMENTATION
// This method should be implemented assuming it's valid to  // do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.8956643676035656	WITHOUT_CLASSIFICATION	0.08681370327915583	DESIGN	0.01682845121003311	IMPLEMENTATION	6.628967239859597E-4	DEFECT	2.518243199396837E-5	TEST	5.398751265552666E-6	DOCUMENTATION
// Make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.9999828670346307	WITHOUT_CLASSIFICATION	1.4730335234235506E-5	IMPLEMENTATION	1.1468400385347568E-6	DESIGN	7.970673561846131E-7	DOCUMENTATION	3.209168939335518E-7	DEFECT	1.3780584638861835E-7	TEST
// We use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.9999900509900754	WITHOUT_CLASSIFICATION	9.909660985074725E-6	DESIGN	2.494674628334071E-8	DOCUMENTATION	6.3096406148723215E-9	TEST	4.0473119358382816E-9	IMPLEMENTATION	4.045240602122908E-9	DEFECT
// Following methods we don't delegate since they have so little logic // it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.9746311643577461	WITHOUT_CLASSIFICATION	0.015328552043200407	DESIGN	0.009911260515684413	IMPLEMENTATION	1.0419540105716212E-4	DEFECT	1.98726441645189E-5	TEST	4.955038147440023E-6	DOCUMENTATION
// If JBC is using INVALIDATION, we don't want to propagate changes. // We use the Timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.9999918929349343	WITHOUT_CLASSIFICATION	3.7391485861230927E-6	DEFECT	3.1726126721721617E-6	DESIGN	8.809715525477826E-7	TEST	2.8288865978555775E-7	DOCUMENTATION	3.144359508399887E-8	IMPLEMENTATION
// We don't want to waste effort setting an option if JBC is // already in LOCAL mode. If JBC is REPL_(A)SYNC then check // if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.9999645836210309	WITHOUT_CLASSIFICATION	2.6260041276801854E-5	DESIGN	4.752160574113339E-6	DEFECT	2.9227441327328288E-6	TEST	9.773948791722402E-7	IMPLEMENTATION	5.040381062311911E-7	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents updates // Add a zero (or low) timeout option so we don't block // waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.9999992675451607	WITHOUT_CLASSIFICATION	3.503518825359641E-7	DEFECT	2.757452489366289E-7	TEST	4.724915481069505E-8	DESIGN	3.763959660529454E-8	IMPLEMENTATION	2.1468956451191863E-8	DOCUMENTATION
// Double check the distributed cache	WITHOUT_CLASSIFICATION	0.999992298831825	WITHOUT_CLASSIFICATION	7.65544250748507E-6	IMPLEMENTATION	2.5130648105087916E-8	DOCUMENTATION	1.615376436551808E-8	TEST	2.4968163778434046E-9	DEFECT	1.9444386385965955E-9	DESIGN
// Get an exclusive right to update JBC for this key from this node.	WITHOUT_CLASSIFICATION	0.9999911590508327	WITHOUT_CLASSIFICATION	6.134258999656855E-6	DESIGN	2.3817574952075043E-6	DEFECT	1.3651323270411384E-7	TEST	1.3429464944213942E-7	DOCUMENTATION	5.412479025915794E-8	IMPLEMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.999116765055961	WITHOUT_CLASSIFICATION	8.278660605048376E-4	DESIGN	2.548170540861066E-5	DEFECT	2.3457076915413196E-5	IMPLEMENTATION	4.433877809215942E-6	DOCUMENTATION	1.9962234009044565E-6	TEST
// Initial load from JBC	WITHOUT_CLASSIFICATION	0.9999846639176584	WITHOUT_CLASSIFICATION	7.213699719194304E-6	IMPLEMENTATION	6.257931991754549E-6	DESIGN	9.97298910917349E-7	DEFECT	6.713775817531555E-7	DOCUMENTATION	1.9577413793042052E-7	TEST
// See if we had a 2nd invalidation from the same initial // preinvalidation timestamp. If so, only increment // if the new current value is an increase	WITHOUT_CLASSIFICATION	0.9999979344778354	WITHOUT_CLASSIFICATION	1.2871158166461488E-6	DESIGN	4.320505423972848E-7	DEFECT	2.9251752292212743E-7	DOCUMENTATION	4.417713195264413E-8	TEST	9.661150742881501E-9	IMPLEMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.999116765055961	WITHOUT_CLASSIFICATION	8.278660605048376E-4	DESIGN	2.548170540861066E-5	DEFECT	2.3457076915413196E-5	IMPLEMENTATION	4.433877809215942E-6	DOCUMENTATION	1.9962234009044565E-6	TEST
// If the workspace node has null as well, OK; if not we've // been modified in a non-comparable manner, which we have to // treat as us being newer	WITHOUT_CLASSIFICATION	0.9969860386034373	WITHOUT_CLASSIFICATION	0.002910106407179512	DESIGN	1.0281868974671216E-4	DEFECT	4.369902868499961E-7	TEST	3.7485680111895376E-7	IMPLEMENTATION	2.2445254845507907E-7	DOCUMENTATION
// The standard comparator types are not Serializable but are singletons	WITHOUT_CLASSIFICATION	0.9999516803488065	WITHOUT_CLASSIFICATION	3.1636569967404443E-5	DESIGN	1.5172795654998919E-5	DEFECT	1.170035439183797E-6	IMPLEMENTATION	2.840899903011914E-7	TEST	5.616014163366415E-8	DOCUMENTATION
// ignore!	WITHOUT_CLASSIFICATION	0.9999951693560529	WITHOUT_CLASSIFICATION	2.7378009387658877E-6	IMPLEMENTATION	8.466855365372322E-7	DEFECT	8.011793454188852E-7	DOCUMENTATION	2.534709030022745E-7	TEST	1.9150722343773457E-7	DESIGN
// ignore it	WITHOUT_CLASSIFICATION	0.9999942993646888	WITHOUT_CLASSIFICATION	4.4041551873676685E-6	IMPLEMENTATION	5.649342998428129E-7	DOCUMENTATION	3.5293693738980323E-7	DEFECT	2.2630339136169265E-7	DESIGN	1.523054953394972E-7	TEST
// construct the cache	WITHOUT_CLASSIFICATION	0.9999955750051972	WITHOUT_CLASSIFICATION	4.211847008609274E-6	IMPLEMENTATION	1.092623902484778E-7	TEST	8.076289381067141E-8	DOCUMENTATION	1.957070430429952E-8	DESIGN	3.5518056279014094E-9	DEFECT
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.99997113781327	WITHOUT_CLASSIFICATION	2.5163928564709112E-5	DOCUMENTATION	1.7050788669826908E-6	DEFECT	1.055336833892425E-6	DESIGN	8.195672653989412E-7	IMPLEMENTATION	1.1827519916754711E-7	TEST
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.99997113781327	WITHOUT_CLASSIFICATION	2.5163928564709112E-5	DOCUMENTATION	1.7050788669826908E-6	DEFECT	1.055336833892425E-6	DESIGN	8.195672653989412E-7	IMPLEMENTATION	1.1827519916754711E-7	TEST
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999458966168099	WITHOUT_CLASSIFICATION	2.849250313481008E-5	IMPLEMENTATION	1.1878692964783703E-5	DOCUMENTATION	7.916723600103996E-6	DESIGN	3.678938478434268E-6	TEST	2.1365250120062828E-6	DEFECT
//swaldman 2006-08-28: define c3p0-style configuration parameters for initialPoolSize, which //                     hibernate sensibly lets default to minPoolSize, but we'll let users //                     override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.6772509273525271	WITHOUT_CLASSIFICATION	0.32273423671142343	DESIGN	1.1821832116497156E-5	TEST	2.750979210282264E-6	DOCUMENTATION	1.8809396524753765E-7	DEFECT	7.503075735478229E-8	IMPLEMENTATION
/*DataSource unpooled = DataSources.unpooledDataSource(	WITHOUT_CLASSIFICATION	0.9999259542924696	WITHOUT_CLASSIFICATION	5.682946140996259E-5	IMPLEMENTATION	6.830741688621612E-6	DEFECT	4.774893631434542E-6	DOCUMENTATION	3.481285533759022E-6	DESIGN	2.1293252667715992E-6	TEST
// TRUE if the pool is borrowed from the outside, FALSE if we used to create it	WITHOUT_CLASSIFICATION	0.9999996817729949	WITHOUT_CLASSIFICATION	2.0852980935943748E-7	DESIGN	8.450762152175205E-8	DEFECT	1.653808385822463E-8	TEST	4.931148772629487E-9	DOCUMENTATION	3.7203414883347165E-9	IMPLEMENTATION
// get a connection from the pool (thru DriverManager, cfr. Proxool doc)	WITHOUT_CLASSIFICATION	0.9999751759083163	WITHOUT_CLASSIFICATION	1.5698914386389825E-5	DESIGN	4.6827213514344205E-6	IMPLEMENTATION	2.6795530518190565E-6	DEFECT	1.2946542888978435E-6	DOCUMENTATION	4.6824860517190666E-7	TEST
// set the Transaction Isolation if defined	WITHOUT_CLASSIFICATION	0.9999654677952257	WITHOUT_CLASSIFICATION	1.873766825959254E-5	IMPLEMENTATION	1.4945044871342014E-5	DESIGN	5.545067253207474E-7	TEST	2.661598176409194E-7	DOCUMENTATION	2.8825100426645844E-8	DEFECT
// toggle autoCommit to false if set	WITHOUT_CLASSIFICATION	0.9999676286071084	WITHOUT_CLASSIFICATION	2.0178501647739992E-5	DESIGN	5.419415232323946E-6	IMPLEMENTATION	4.179685957253104E-6	DEFECT	1.4361313707359348E-6	DOCUMENTATION	1.1576586834076305E-6	TEST
// return the connection	WITHOUT_CLASSIFICATION	0.9999545718482468	WITHOUT_CLASSIFICATION	3.395459203253499E-5	IMPLEMENTATION	9.3279078933468E-6	DESIGN	1.5723603128006458E-6	DOCUMENTATION	3.817598558063054E-7	TEST	1.9153165887859072E-7	DEFECT
// Get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.9999961711800779	WITHOUT_CLASSIFICATION	2.5439656949175438E-6	DESIGN	1.0620631946201699E-6	TEST	1.1200258562048897E-7	IMPLEMENTATION	8.576782193357016E-8	DOCUMENTATION	2.502062507544707E-8	DEFECT
// Default the Proxool alias setting	WITHOUT_CLASSIFICATION	0.9999996253762239	WITHOUT_CLASSIFICATION	1.4955203001824037E-7	DESIGN	1.2940622955347803E-7	IMPLEMENTATION	4.50993192503631E-8	DOCUMENTATION	3.3976519448079174E-8	TEST	1.6589677871888273E-8	DEFECT
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9977539951741038	WITHOUT_CLASSIFICATION	0.00224317272989759	DESIGN	8.718483103531255E-7	DEFECT	8.640150600572738E-7	DOCUMENTATION	5.813950859006891E-7	TEST	5.14837542295341E-7	IMPLEMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9977539951741038	WITHOUT_CLASSIFICATION	0.00224317272989759	DESIGN	8.718483103531255E-7	DEFECT	8.640150600572738E-7	DOCUMENTATION	5.813950859006891E-7	TEST	5.14837542295341E-7	IMPLEMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9889378647388473	WITHOUT_CLASSIFICATION	0.010846387377504275	IMPLEMENTATION	1.0004326159382553E-4	DEFECT	6.512679745273195E-5	DOCUMENTATION	4.810074930203912E-5	DESIGN	2.4770752999410496E-6	TEST
// Set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.9999566653865057	WITHOUT_CLASSIFICATION	3.1577144744000076E-5	IMPLEMENTATION	7.148081408864818E-6	DEFECT	3.0295310363518756E-6	DOCUMENTATION	9.16362939201966E-7	TEST	6.634933656424595E-7	DESIGN
// Configured using the JAXP Configurator	WITHOUT_CLASSIFICATION	0.9999868317665598	WITHOUT_CLASSIFICATION	9.112089219737254E-6	DESIGN	1.8403340395193183E-6	TEST	1.4053693305532578E-6	DEFECT	6.211534438359767E-7	DOCUMENTATION	1.8928740652621224E-7	IMPLEMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9977539951741038	WITHOUT_CLASSIFICATION	0.00224317272989759	DESIGN	8.718483103531255E-7	DEFECT	8.640150600572738E-7	DOCUMENTATION	5.813950859006891E-7	TEST	5.14837542295341E-7	IMPLEMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9889378647388473	WITHOUT_CLASSIFICATION	0.010846387377504275	IMPLEMENTATION	1.0004326159382553E-4	DEFECT	6.512679745273195E-5	DOCUMENTATION	4.810074930203912E-5	DESIGN	2.4770752999410496E-6	TEST
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9889378647388473	WITHOUT_CLASSIFICATION	0.010846387377504275	IMPLEMENTATION	1.0004326159382553E-4	DEFECT	6.512679745273195E-5	DOCUMENTATION	4.810074930203912E-5	DESIGN	2.4770752999410496E-6	TEST
// Configured using the Properties File Configurator	WITHOUT_CLASSIFICATION	0.9999674616373344	WITHOUT_CLASSIFICATION	2.9522726431701352E-5	DESIGN	2.4044473591739646E-6	TEST	4.32160840589905E-7	DEFECT	1.1825822226912138E-7	DOCUMENTATION	6.076981202833606E-8	IMPLEMENTATION
// Remember Isolation level	WITHOUT_CLASSIFICATION	0.9999608580389738	WITHOUT_CLASSIFICATION	3.061395832706375E-5	IMPLEMENTATION	4.90329103291954E-6	DESIGN	2.1406977224258163E-6	DEFECT	9.814044012589257E-7	TEST	5.026095424272074E-7	DOCUMENTATION
// If the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.9999983680388775	WITHOUT_CLASSIFICATION	1.2587314918224492E-6	DEFECT	2.40983233333524E-7	DESIGN	9.393106728109282E-8	IMPLEMENTATION	2.4635042767894598E-8	DOCUMENTATION	1.3680287181618081E-8	TEST
// We have created the pool ourselves, so shut it down	WITHOUT_CLASSIFICATION	0.9999668057490065	WITHOUT_CLASSIFICATION	2.1430907930485192E-5	IMPLEMENTATION	9.925903936699454E-6	TEST	8.245364349413344E-7	DEFECT	7.46509116196609E-7	DOCUMENTATION	2.6639357515267953E-7	DESIGN
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9959515021303014	WITHOUT_CLASSIFICATION	0.0030373318724831303	IMPLEMENTATION	4.91354797336693E-4	DESIGN	4.5278948771934244E-4	DEFECT	4.330481439148267E-5	DOCUMENTATION	2.371689776780306E-5	TEST
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9959515021303014	WITHOUT_CLASSIFICATION	0.0030373318724831303	IMPLEMENTATION	4.91354797336693E-4	DESIGN	4.5278948771934244E-4	DEFECT	4.330481439148267E-5	DOCUMENTATION	2.371689776780306E-5	TEST
//always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.9998867187497321	WITHOUT_CLASSIFICATION	6.228907333182485E-5	DESIGN	2.722799836610392E-5	IMPLEMENTATION	1.4564039055539925E-5	DEFECT	4.635751521893471E-6	TEST	4.564387992447604E-6	DOCUMENTATION
//public Currency getCurrency(int col) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9984905031629384	WITHOUT_CLASSIFICATION	0.0012110208161491313	DESIGN	1.499140929032595E-4	DEFECT	7.477843335704505E-5	TEST	4.747847493531981E-5	DOCUMENTATION	2.6305019716931426E-5	IMPLEMENTATION
// default is POJO	WITHOUT_CLASSIFICATION	0.9999888925501634	WITHOUT_CLASSIFICATION	6.663392966718771E-6	IMPLEMENTATION	1.3970311124760703E-6	TEST	1.3251876796806578E-6	DEFECT	1.1367544060318225E-6	DESIGN	5.850836714224503E-7	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999993276026244	WITHOUT_CLASSIFICATION	3.4817137737379277E-7	DESIGN	2.256065624017157E-7	DEFECT	4.670547092017237E-8	IMPLEMENTATION	2.6809090618736552E-8	TEST	2.5104874089042593E-8	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999993276026244	WITHOUT_CLASSIFICATION	3.4817137737379277E-7	DESIGN	2.256065624017157E-7	DEFECT	4.670547092017237E-8	IMPLEMENTATION	2.6809090618736552E-8	TEST	2.5104874089042593E-8	DOCUMENTATION
//private CacheEntry cacheEntry;	WITHOUT_CLASSIFICATION	0.9999600791106521	WITHOUT_CLASSIFICATION	2.6560664390234973E-5	DESIGN	5.241986466288184E-6	DOCUMENTATION	3.742592782325878E-6	IMPLEMENTATION	2.7351995368185795E-6	DEFECT	1.6404461723273204E-6	TEST
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9998304696025135	WITHOUT_CLASSIFICATION	1.4757650091163063E-4	IMPLEMENTATION	9.236760225748651E-6	DESIGN	5.704269073385522E-6	DOCUMENTATION	4.939695895004525E-6	TEST	2.073171380650217E-6	DEFECT
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9396541283415639	WITHOUT_CLASSIFICATION	0.050137693858311815	DESIGN	0.008631450765146704	IMPLEMENTATION	0.0014284320271190924	DEFECT	7.488907693850221E-5	DOCUMENTATION	7.340593092003368E-5	TEST
// get the updated snapshot of the entity state by cloning current state; // it is safe to copy in place, since by this time no-one else (should have) // has a reference  to the array	WITHOUT_CLASSIFICATION	0.9999992168189893	WITHOUT_CLASSIFICATION	4.326069880598565E-7	DEFECT	2.658506409224919E-7	DESIGN	4.987056021794227E-8	TEST	2.0088214773863634E-8	IMPLEMENTATION	1.47646066793002E-8	DOCUMENTATION
// this entity defines proeprty generation, so process those generated // values...	WITHOUT_CLASSIFICATION	0.9989067126765203	WITHOUT_CLASSIFICATION	0.001083386437412715	DESIGN	5.619303661381542E-6	TEST	4.117523852508537E-6	DOCUMENTATION	1.0212697304544903E-7	DEFECT	6.193158009596106E-8	IMPLEMENTATION
// have the entity entry perform post-update processing, passing it the // update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.999994106601785	WITHOUT_CLASSIFICATION	3.1037227927557835E-6	IMPLEMENTATION	2.5609183724326666E-6	DEFECT	1.7868641449828183E-7	DOCUMENTATION	3.397527474403734E-8	TEST	1.609536049572107E-8	DESIGN
/*!persister.isCacheInvalidationRequired()*/	WITHOUT_CLASSIFICATION	0.9946851959338298	WITHOUT_CLASSIFICATION	0.005118948277458745	DESIGN	9.272530580575031E-5	DEFECT	5.3323007106274415E-5	IMPLEMENTATION	3.099177613236465E-5	TEST	1.8815699667165383E-5	DOCUMENTATION
// need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.9599849354708826	WITHOUT_CLASSIFICATION	0.03624027550225989	IMPLEMENTATION	0.0033578563024157697	DESIGN	3.379456950833676E-4	DOCUMENTATION	4.898652610988738E-5	DEFECT	3.00005032483194E-5	TEST
//sort first by role name	WITHOUT_CLASSIFICATION	0.9999832527320118	WITHOUT_CLASSIFICATION	7.546195541820569E-6	DESIGN	4.489577983878245E-6	IMPLEMENTATION	1.8274549741632423E-6	TEST	1.6137806927518054E-6	DEFECT	1.2702587956504244E-6	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9396541283415639	WITHOUT_CLASSIFICATION	0.050137693858311815	DESIGN	0.008631450765146704	IMPLEMENTATION	0.0014284320271190924	DEFECT	7.488907693850221E-5	DOCUMENTATION	7.340593092003368E-5	TEST
//then by fk	WITHOUT_CLASSIFICATION	0.9996967782000353	WITHOUT_CLASSIFICATION	1.9471775383546309E-4	IMPLEMENTATION	4.492185080468018E-5	DOCUMENTATION	3.275735486906764E-5	DEFECT	1.683068103269318E-5	TEST	1.3994159422896729E-5	DESIGN
// nothing to do	WITHOUT_CLASSIFICATION	0.995038369740299	WITHOUT_CLASSIFICATION	0.00470648265986004	IMPLEMENTATION	1.1544907114502215E-4	DEFECT	7.56032878146959E-5	DOCUMENTATION	4.2145675007424085E-5	TEST	2.1949565873839787E-5	DESIGN
// nothing to do	WITHOUT_CLASSIFICATION	0.995038369740299	WITHOUT_CLASSIFICATION	0.00470648265986004	IMPLEMENTATION	1.1544907114502215E-4	DEFECT	7.56032878146959E-5	DOCUMENTATION	4.2145675007424085E-5	TEST	2.1949565873839787E-5	DESIGN
// an existing collection that was either non-empty or uninitialized // is replaced by null or a different collection // (if the collection is uninitialized, hibernate has no way of // knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.9970548275712281	WITHOUT_CLASSIFICATION	0.002749013943749472	DESIGN	1.9167934857238257E-4	IMPLEMENTATION	2.9174991511227304E-6	DEFECT	1.4176601028845337E-6	TEST	1.439771961679958E-7	DOCUMENTATION
// this method is called when a new non-null collection is persisted // or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.9511055878223028	WITHOUT_CLASSIFICATION	0.048376854028770976	DESIGN	3.218927677064168E-4	TEST	1.3034704598116156E-4	IMPLEMENTATION	5.8416146198396716E-5	DEFECT	6.902189040282994E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9636339252684054	WITHOUT_CLASSIFICATION	0.02634730409537362	DESIGN	0.00862717258792605	IMPLEMENTATION	0.0012377249051304902	DEFECT	1.0241278594333807E-4	TEST	5.146035722098138E-5	DOCUMENTATION
//do nothing - we only need to notify the cache...	WITHOUT_CLASSIFICATION	0.9999174819486106	WITHOUT_CLASSIFICATION	3.989240109994759E-5	DOCUMENTATION	3.5590299619180354E-5	IMPLEMENTATION	2.806541781189993E-6	TEST	2.677232995565601E-6	DEFECT	1.5515758934403506E-6	DESIGN
//sort first by entity name	WITHOUT_CLASSIFICATION	0.9999252362206115	WITHOUT_CLASSIFICATION	5.481511067399446E-5	IMPLEMENTATION	6.817139857153709E-6	DOCUMENTATION	5.032462978151304E-6	DEFECT	4.722887443550211E-6	TEST	3.3761784358468523E-6	DESIGN
//then by id	WITHOUT_CLASSIFICATION	0.9993662609778308	WITHOUT_CLASSIFICATION	5.301446792803107E-4	IMPLEMENTATION	4.069159359100661E-5	DOCUMENTATION	3.363710821248226E-5	DEFECT	2.2162364674725674E-5	TEST	7.103276410791396E-6	DESIGN
// to be safe...	WITHOUT_CLASSIFICATION	0.9999280448645758	WITHOUT_CLASSIFICATION	2.9117444005600504E-5	DESIGN	2.5854317725406183E-5	IMPLEMENTATION	9.295926265215451E-6	DEFECT	6.705353934044864E-6	DOCUMENTATION	9.820934939905357E-7	TEST
// no transformations took place, so handle it as we would a // non-instrumented class	WITHOUT_CLASSIFICATION	0.9997846142088195	WITHOUT_CLASSIFICATION	1.6027775048724037E-4	DESIGN	4.365558471648186E-5	IMPLEMENTATION	9.315911283863495E-6	DOCUMENTATION	2.0757191575316612E-6	TEST	6.082553544773256E-8	DEFECT
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999989169644544	WITHOUT_CLASSIFICATION	1.050311878328475E-6	DESIGN	1.2776457621063744E-8	TEST	8.737022768150502E-9	IMPLEMENTATION	6.8571550106254505E-9	DOCUMENTATION	4.3530318863309136E-9	DEFECT
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999989169644544	WITHOUT_CLASSIFICATION	1.050311878328475E-6	DESIGN	1.2776457621063744E-8	TEST	8.737022768150502E-9	IMPLEMENTATION	6.8571550106254505E-9	DOCUMENTATION	4.3530318863309136E-9	DEFECT
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999177362184064	WITHOUT_CLASSIFICATION	3.190241607488986E-5	IMPLEMENTATION	2.2446530405780916E-5	DOCUMENTATION	1.8762483314001523E-5	DEFECT	7.877748418473452E-6	DESIGN	1.2746033804514758E-6	TEST
//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9999583445423053	WITHOUT_CLASSIFICATION	2.23949494142627E-5	TEST	1.8211774751257505E-5	IMPLEMENTATION	8.532259763453799E-7	DOCUMENTATION	1.7618816713356443E-7	DEFECT	1.9319385669025227E-8	DESIGN
// set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.9999987111078354	WITHOUT_CLASSIFICATION	6.689657824371386E-7	IMPLEMENTATION	2.2481025155543402E-7	DESIGN	1.631670011518543E-7	DOCUMENTATION	1.3427912217457614E-7	TEST	9.767000735974236E-8	DEFECT
// aload_0	WITHOUT_CLASSIFICATION	0.9999933868116522	WITHOUT_CLASSIFICATION	2.4908304573186963E-6	DESIGN	1.5522742771697953E-6	IMPLEMENTATION	9.961997393867613E-7	DOCUMENTATION	9.89016445174027E-7	DEFECT	5.84867428810564E-7	TEST
// invokespecial	WITHOUT_CLASSIFICATION	0.999996811039202	WITHOUT_CLASSIFICATION	1.5523911399341612E-6	IMPLEMENTATION	1.36670614963839E-6	DOCUMENTATION	1.4770889736803863E-7	TEST	6.638964683910742E-8	DEFECT	5.576496428279839E-8	DESIGN
// return	WITHOUT_CLASSIFICATION	0.9999906837563447	WITHOUT_CLASSIFICATION	5.118573546165213E-6	DESIGN	3.2958038717881002E-6	IMPLEMENTATION	4.1428238695168143E-7	DOCUMENTATION	2.873976262564359E-7	DEFECT	2.0018622414457855E-7	TEST
// aload_1 // load bean	WITHOUT_CLASSIFICATION	0.9999532431083447	WITHOUT_CLASSIFICATION	2.967667273983173E-5	IMPLEMENTATION	6.985424769623236E-6	DEFECT	5.338512744956924E-6	DESIGN	3.3943755345611204E-6	DOCUMENTATION	1.3619058662958959E-6	TEST
// checkcast // cast bean	WITHOUT_CLASSIFICATION	0.999993231705843	WITHOUT_CLASSIFICATION	5.461812953946468E-6	IMPLEMENTATION	5.315378021104267E-7	TEST	4.446486561571654E-7	DOCUMENTATION	1.664904777468081E-7	DESIGN	1.6380426708395814E-7	DEFECT
// astore_3 // store bean	WITHOUT_CLASSIFICATION	0.9999980927604354	WITHOUT_CLASSIFICATION	7.055166145983648E-7	IMPLEMENTATION	3.828529464349355E-7	DESIGN	3.0944172094361783E-7	DEFECT	2.9475233025343564E-7	TEST	2.1467595242603335E-7	DOCUMENTATION
// aload_2 // args	WITHOUT_CLASSIFICATION	0.9999964114001961	WITHOUT_CLASSIFICATION	1.3634719912538309E-6	DESIGN	8.948324908684078E-7	IMPLEMENTATION	8.282228992043375E-7	DEFECT	2.6455025355239194E-7	DOCUMENTATION	2.3752216906795002E-7	TEST
// iconst_i // continue to aastore // growing stack is 1	WITHOUT_CLASSIFICATION	0.9997844903082906	WITHOUT_CLASSIFICATION	1.5736545456624163E-4	DEFECT	4.8564270256242635E-5	DESIGN	4.1102919840574026E-6	IMPLEMENTATION	2.8788979926145232E-6	TEST	2.5907769101001656E-6	DOCUMENTATION
// new	WITHOUT_CLASSIFICATION	0.9998315161257938	WITHOUT_CLASSIFICATION	8.901146132437728E-5	IMPLEMENTATION	4.072512890833368E-5	DESIGN	2.048131176825571E-5	DOCUMENTATION	1.198909810531283E-5	TEST	6.276874099952376E-6	DEFECT
// dup	WITHOUT_CLASSIFICATION	0.9999764612590735	WITHOUT_CLASSIFICATION	1.3970961896679765E-5	DESIGN	2.961639520694618E-6	DOCUMENTATION	2.7973654687741184E-6	DEFECT	1.970134487832844E-6	IMPLEMENTATION	1.838639552363015E-6	TEST
// aload_3 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999401975360139	WITHOUT_CLASSIFICATION	3.4718079872081505E-5	IMPLEMENTATION	9.476391903846757E-6	DESIGN	8.361328991432243E-6	DEFECT	4.7690781443510834E-6	DOCUMENTATION	2.477585074421966E-6	TEST
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999953737275101	WITHOUT_CLASSIFICATION	2.1012619934977168E-6	DESIGN	1.295051455718487E-6	DOCUMENTATION	6.076957009487775E-7	DEFECT	3.501882791010861E-7	IMPLEMENTATION	2.7207506059641947E-7	TEST
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999969660352335	WITHOUT_CLASSIFICATION	2.010410353247662E-6	IMPLEMENTATION	5.140610434399358E-7	DOCUMENTATION	2.3810541833446616E-7	DEFECT	1.4563508025988598E-7	DESIGN	1.2575287123186781E-7	TEST
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999969660352335	WITHOUT_CLASSIFICATION	2.010410353247662E-6	IMPLEMENTATION	5.140610434399358E-7	DOCUMENTATION	2.3810541833446616E-7	DEFECT	1.4563508025988598E-7	DESIGN	1.2575287123186781E-7	TEST
// aastore // args	WITHOUT_CLASSIFICATION	0.9999996878061137	WITHOUT_CLASSIFICATION	1.0186427452553399E-7	DESIGN	7.246185573111824E-8	IMPLEMENTATION	6.823670612669748E-8	DEFECT	4.04208384310258E-8	TEST	2.921021150971892E-8	DOCUMENTATION
/* | this | bean | args | i | raw bean | exception | */	WITHOUT_CLASSIFICATION	0.999959584019274	WITHOUT_CLASSIFICATION	1.7933353600808474E-5	DEFECT	1.4647782164933705E-5	TEST	4.783491143878482E-6	DESIGN	2.4018448525498443E-6	DOCUMENTATION	6.495089637817417E-7	IMPLEMENTATION
// required to exception table // iconst_0 // i	WITHOUT_CLASSIFICATION	0.9999970413150157	WITHOUT_CLASSIFICATION	1.312389296141726E-6	DEFECT	1.300664963865862E-6	DESIGN	2.1104490836106154E-7	IMPLEMENTATION	9.533151961705474E-8	TEST	3.925429630779595E-8	DOCUMENTATION
// istore_3 // store i	WITHOUT_CLASSIFICATION	0.9999977043896273	WITHOUT_CLASSIFICATION	9.787237584182672E-7	DEFECT	4.922562781263914E-7	IMPLEMENTATION	4.29563609131309E-7	TEST	2.4263218451042907E-7	DOCUMENTATION	1.5243454250257777E-7	DESIGN
// aload_1 // load the bean	WITHOUT_CLASSIFICATION	0.9999428784489115	WITHOUT_CLASSIFICATION	4.950458779502923E-5	IMPLEMENTATION	3.5152237951664533E-6	DOCUMENTATION	2.152965034612559E-6	DEFECT	1.1295133357602133E-6	DESIGN	8.192611280432291E-7	TEST
// checkcast // cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.999931358310332	WITHOUT_CLASSIFICATION	3.7113203896431465E-5	IMPLEMENTATION	2.284196676354231E-5	DESIGN	3.2903011295111114E-6	TEST	2.941446682527147E-6	DEFECT	2.4547711960779917E-6	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999973013335597	WITHOUT_CLASSIFICATION	1.070760466788603E-6	IMPLEMENTATION	9.722096428212758E-7	DOCUMENTATION	2.333078204358083E-7	DESIGN	2.2666593050709984E-7	TEST	1.9572257984549732E-7	DEFECT
// start region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.999917793650449	WITHOUT_CLASSIFICATION	4.293726012450751E-5	DEFECT	2.724581896693028E-5	IMPLEMENTATION	9.421364508474416E-6	DESIGN	1.6252028030268616E-6	TEST	9.76703148068315E-7	DOCUMENTATION
// iinc 3, 1	WITHOUT_CLASSIFICATION	0.9999797430991374	WITHOUT_CLASSIFICATION	7.072720449613502E-6	DOCUMENTATION	4.755539757217573E-6	IMPLEMENTATION	3.1248218742897844E-6	DEFECT	2.695242112042664E-6	TEST	2.608576669463322E-6	DESIGN
// aload 4 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999120862638227	WITHOUT_CLASSIFICATION	5.829871656624164E-5	IMPLEMENTATION	1.4472591708022079E-5	DESIGN	7.878082990507775E-6	DEFECT	5.128362732027852E-6	DOCUMENTATION	2.135982180588959E-6	TEST
// aload_2 // load the args	WITHOUT_CLASSIFICATION	0.999996699853985	WITHOUT_CLASSIFICATION	2.329775946950653E-6	IMPLEMENTATION	3.939020050753943E-7	DOCUMENTATION	3.579827608931172E-7	DEFECT	1.1112350478362047E-7	DESIGN	1.0736179730357253E-7	TEST
// iconst_i	WITHOUT_CLASSIFICATION	0.9999784529701627	WITHOUT_CLASSIFICATION	7.651462536390223E-6	IMPLEMENTATION	5.096748169050024E-6	DESIGN	4.198767969960586E-6	DOCUMENTATION	2.6039862624140694E-6	TEST	1.996064899356434E-6	DEFECT
// aaload	WITHOUT_CLASSIFICATION	0.9999918003777398	WITHOUT_CLASSIFICATION	3.0914653479658286E-6	IMPLEMENTATION	2.405416307083586E-6	DESIGN	1.0293792202281926E-6	DEFECT	9.545846951537426E-7	DOCUMENTATION	7.187766897577675E-7	TEST
// checkcast	WITHOUT_CLASSIFICATION	0.9999932115900807	WITHOUT_CLASSIFICATION	5.5973357413597185E-6	IMPLEMENTATION	5.812955062034832E-7	DOCUMENTATION	3.468836407577184E-7	TEST	1.8455819353648909E-7	DESIGN	7.833683733879748E-8	DEFECT
// checkcast (case of primitive type) // invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.99999980354811	WITHOUT_CLASSIFICATION	8.698003890646212E-8	DESIGN	6.418247430673994E-8	DOCUMENTATION	2.3517165475551667E-8	IMPLEMENTATION	1.1332006847979433E-8	DEFECT	1.0440204568616318E-8	TEST
// checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.99999708094479	WITHOUT_CLASSIFICATION	2.1582865139773014E-6	DESIGN	3.623544103526364E-7	IMPLEMENTATION	3.378099776151145E-7	DOCUMENTATION	4.4569370764234245E-8	TEST	1.603493732848117E-8	DEFECT
/* current stack len = 2 */	WITHOUT_CLASSIFICATION	0.9999902845055494	WITHOUT_CLASSIFICATION	6.551016029602013E-6	IMPLEMENTATION	1.6423630734438287E-6	DOCUMENTATION	7.2497031777557E-7	DEFECT	4.2227962621229204E-7	DESIGN	3.7486540354279335E-7	TEST
// end region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9992371867786816	WITHOUT_CLASSIFICATION	3.1524651526693517E-4	DESIGN	2.3644066840810865E-4	DEFECT	1.977164208920052E-4	IMPLEMENTATION	7.516756957722105E-6	DOCUMENTATION	5.892859793716041E-6	TEST
// register in exception table	WITHOUT_CLASSIFICATION	0.9999987986991379	WITHOUT_CLASSIFICATION	9.553844119685198E-7	DESIGN	1.237958254809055E-7	DEFECT	5.790049434992683E-8	TEST	4.8931866587527345E-8	IMPLEMENTATION	1.528826379617878E-8	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999933868116522	WITHOUT_CLASSIFICATION	2.4908304573186963E-6	DESIGN	1.5522742771697953E-6	IMPLEMENTATION	9.961997393867613E-7	DOCUMENTATION	9.89016445174027E-7	DEFECT	5.84867428810564E-7	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999933868116522	WITHOUT_CLASSIFICATION	2.4908304573186963E-6	DESIGN	1.5522742771697953E-6	IMPLEMENTATION	9.961997393867613E-7	DOCUMENTATION	9.89016445174027E-7	DEFECT	5.84867428810564E-7	TEST
// return	WITHOUT_CLASSIFICATION	0.9999906837563447	WITHOUT_CLASSIFICATION	5.118573546165213E-6	DESIGN	3.2958038717881002E-6	IMPLEMENTATION	4.1428238695168143E-7	DOCUMENTATION	2.873976262564359E-7	DEFECT	2.0018622414457855E-7	TEST
// return	WITHOUT_CLASSIFICATION	0.9999906837563447	WITHOUT_CLASSIFICATION	5.118573546165213E-6	DESIGN	3.2958038717881002E-6	IMPLEMENTATION	4.1428238695168143E-7	DOCUMENTATION	2.873976262564359E-7	DEFECT	2.0018622414457855E-7	TEST
// dup	WITHOUT_CLASSIFICATION	0.9999764612590735	WITHOUT_CLASSIFICATION	1.3970961896679765E-5	DESIGN	2.961639520694618E-6	DOCUMENTATION	2.7973654687741184E-6	DEFECT	1.970134487832844E-6	IMPLEMENTATION	1.838639552363015E-6	TEST
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999969660352335	WITHOUT_CLASSIFICATION	2.010410353247662E-6	IMPLEMENTATION	5.140610434399358E-7	DOCUMENTATION	2.3810541833446616E-7	DEFECT	1.4563508025988598E-7	DESIGN	1.2575287123186781E-7	TEST
// checkcast	WITHOUT_CLASSIFICATION	0.9999932115900807	WITHOUT_CLASSIFICATION	5.5973357413597185E-6	IMPLEMENTATION	5.812955062034832E-7	DOCUMENTATION	3.468836407577184E-7	TEST	1.8455819353648909E-7	DESIGN	7.833683733879748E-8	DEFECT
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999911820794463	WITHOUT_CLASSIFICATION	5.603377825024986E-6	DEFECT	2.690751963559431E-6	DESIGN	2.354762304625985E-7	TEST	1.9640234948899266E-7	DOCUMENTATION	9.191218521494466E-8	IMPLEMENTATION
// astore 5 // store exception	WITHOUT_CLASSIFICATION	0.9999998679325061	WITHOUT_CLASSIFICATION	7.265018870939105E-8	DEFECT	2.2563102277786984E-8	DESIGN	2.020891654914602E-8	DOCUMENTATION	1.145249999453411E-8	TEST	5.192786320430808E-9	IMPLEMENTATION
// new // BulkAccessorException	WITHOUT_CLASSIFICATION	0.9999555307600967	WITHOUT_CLASSIFICATION	1.8252102340024714E-5	DESIGN	1.3875222349192532E-5	DEFECT	4.7180046861537405E-6	DOCUMENTATION	4.360426139566166E-6	TEST	3.2634843883026113E-6	IMPLEMENTATION
// aload 5 // load exception	WITHOUT_CLASSIFICATION	0.9999948002522328	WITHOUT_CLASSIFICATION	3.550906252857552E-6	DEFECT	7.149375990097097E-7	DOCUMENTATION	5.598002500732436E-7	DESIGN	2.4650503858951386E-7	IMPLEMENTATION	1.27598626714821E-7	TEST
// iload_3 // i	WITHOUT_CLASSIFICATION	0.9999940666172005	WITHOUT_CLASSIFICATION	2.013205788184132E-6	DEFECT	1.4498944185116009E-6	IMPLEMENTATION	1.2291056329984705E-6	TEST	7.579028500583992E-7	DOCUMENTATION	4.832741096534602E-7	DESIGN
// invokespecial // BulkAccessorException.<init>	WITHOUT_CLASSIFICATION	0.9999907953837168	WITHOUT_CLASSIFICATION	2.9628954000164365E-6	DEFECT	2.6509845750141503E-6	IMPLEMENTATION	2.3138795671261233E-6	DOCUMENTATION	7.528981267031319E-7	TEST	5.239586142647846E-7	DESIGN
// athrow	WITHOUT_CLASSIFICATION	0.9999875119457942	WITHOUT_CLASSIFICATION	5.490538027746552E-6	IMPLEMENTATION	2.358184941888066E-6	DEFECT	1.7134286418269085E-6	TEST	1.4947086857957706E-6	DOCUMENTATION	1.4311939087095469E-6	DESIGN
// WARNING: classfile only	WITHOUT_CLASSIFICATION	0.9999927910239457	WITHOUT_CLASSIFICATION	3.293970891767158E-6	DESIGN	1.6421024167606936E-6	DEFECT	1.3824036525883463E-6	DOCUMENTATION	4.5636722753497987E-7	IMPLEMENTATION	4.3413186562016367E-7	TEST
//swallow	WITHOUT_CLASSIFICATION	0.9998916092803438	WITHOUT_CLASSIFICATION	4.203773937100093E-5	DESIGN	2.425497452079471E-5	DEFECT	1.9349203758039874E-5	IMPLEMENTATION	1.1391270228382903E-5	TEST	1.1357531777934612E-5	DOCUMENTATION
/* local variable | this | */	WITHOUT_CLASSIFICATION	0.9999523223310115	WITHOUT_CLASSIFICATION	3.457875511120225E-5	DESIGN	7.338266714962602E-6	TEST	2.530329601254398E-6	DOCUMENTATION	2.3258168540425636E-6	IMPLEMENTATION	9.045007069549305E-7	DEFECT
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999758782115143	WITHOUT_CLASSIFICATION	7.0142480021570145E-6	DESIGN	6.351843688910469E-6	DOCUMENTATION	5.865606250956351E-6	TEST	4.081144620398425E-6	IMPLEMENTATION	8.08945923314673E-7	DEFECT
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999758782115143	WITHOUT_CLASSIFICATION	7.0142480021570145E-6	DESIGN	6.351843688910469E-6	DOCUMENTATION	5.865606250956351E-6	TEST	4.081144620398425E-6	IMPLEMENTATION	8.08945923314673E-7	DEFECT
// getfield // get field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999901228626389	WITHOUT_CLASSIFICATION	9.602678429623683E-6	DESIGN	1.8839772328248016E-7	DEFECT	4.444294881094102E-8	TEST	2.5409508853670707E-8	DOCUMENTATION	1.6208750422042364E-8	IMPLEMENTATION
// areturn // return the value of the field	WITHOUT_CLASSIFICATION	0.999993069568567	WITHOUT_CLASSIFICATION	6.297702896746282E-6	DESIGN	5.196635080463642E-7	DEFECT	5.196625154315012E-8	IMPLEMENTATION	4.0788022809814076E-8	DOCUMENTATION	2.03107538271646E-8	TEST
/* local variables | this | callback | */	WITHOUT_CLASSIFICATION	0.9989930218302749	WITHOUT_CLASSIFICATION	8.315850737054293E-4	DESIGN	6.838233706321986E-5	TEST	6.208264956299986E-5	DEFECT	2.9521784792601613E-5	IMPLEMENTATION	1.5406324600699006E-5	DOCUMENTATION
// aload_1 // load callback	WITHOUT_CLASSIFICATION	0.9999781638063829	WITHOUT_CLASSIFICATION	7.664110000780725E-6	IMPLEMENTATION	6.802647090599624E-6	DEFECT	5.802332053289216E-6	DESIGN	1.0114191791518355E-6	DOCUMENTATION	5.556852931868245E-7	TEST
// putfield // put field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999962481332288	WITHOUT_CLASSIFICATION	3.5271367095405562E-6	DESIGN	1.1817928251597872E-7	DEFECT	3.786335064320998E-8	IMPLEMENTATION	3.542655102627241E-8	DOCUMENTATION	3.326087736512618E-8	TEST
// case of non-static field	WITHOUT_CLASSIFICATION	0.9999999552286826	WITHOUT_CLASSIFICATION	1.7361043487730524E-8	IMPLEMENTATION	1.5314144513958715E-8	DOCUMENTATION	5.700965615830658E-9	DESIGN	4.0383883112638425E-9	DEFECT	2.3567755758471488E-9	TEST
// getfield // get each field	WITHOUT_CLASSIFICATION	0.9999997789331271	WITHOUT_CLASSIFICATION	8.599212786783894E-8	DEFECT	5.539504038145252E-8	TEST	3.593306487999123E-8	DESIGN	2.5720975903124496E-8	IMPLEMENTATION	1.8025663918590116E-8	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999955414846625	WITHOUT_CLASSIFICATION	2.2280288833594663E-6	DEFECT	2.1411285965572114E-6	DESIGN	4.29246447150167E-8	DOCUMENTATION	2.93270618840169E-8	TEST	1.710615089502278E-8	IMPLEMENTATION
// ifnonnull	WITHOUT_CLASSIFICATION	0.9999963787140419	WITHOUT_CLASSIFICATION	1.5927768709667826E-6	IMPLEMENTATION	9.622375955995686E-7	DEFECT	5.688050437029009E-7	DOCUMENTATION	2.970759062755345E-7	TEST	2.0039054140160348E-7	DESIGN
// *return // each type	WITHOUT_CLASSIFICATION	0.9999993780615086	WITHOUT_CLASSIFICATION	3.5123366082791133E-7	DESIGN	9.780118895670833E-8	DOCUMENTATION	7.991074324271757E-8	IMPLEMENTATION	6.544498532070273E-8	DEFECT	2.754791301885798E-8	TEST
// *return // each type	WITHOUT_CLASSIFICATION	0.9999993780615086	WITHOUT_CLASSIFICATION	3.5123366082791133E-7	DESIGN	9.780118895670833E-8	DOCUMENTATION	7.991074324271757E-8	IMPLEMENTATION	6.544498532070273E-8	DEFECT	2.754791301885798E-8	TEST
// *store_1 // each type	WITHOUT_CLASSIFICATION	0.9999996808565128	WITHOUT_CLASSIFICATION	1.0457177462833816E-7	IMPLEMENTATION	6.766826496622646E-8	DOCUMENTATION	5.248149965638675E-8	DEFECT	4.862913601320814E-8	TEST	4.579281183920928E-8	DESIGN
// ldc // name of the field	WITHOUT_CLASSIFICATION	0.9999960478937748	WITHOUT_CLASSIFICATION	1.7167705877925687E-6	DESIGN	7.306212434744898E-7	IMPLEMENTATION	6.094539647824968E-7	DOCUMENTATION	5.537335427093217E-7	DEFECT	3.415268863035691E-7	TEST
// *load_1 // each type	WITHOUT_CLASSIFICATION	0.9999994758901647	WITHOUT_CLASSIFICATION	2.0481243196203207E-7	IMPLEMENTATION	1.5391990422174842E-7	DOCUMENTATION	8.096842464199129E-8	DEFECT	5.972685405795491E-8	TEST	2.4682220435540857E-8	DESIGN
// invokeinterface // invoke Callback.read*() // each type	WITHOUT_CLASSIFICATION	0.9999992583045432	WITHOUT_CLASSIFICATION	3.550326697011276E-7	DESIGN	2.8172968688385436E-7	DEFECT	8.259401439558494E-8	DOCUMENTATION	1.589996295668795E-8	TEST	6.43912302992547E-9	IMPLEMENTATION
// int	WITHOUT_CLASSIFICATION	0.9999817631651507	WITHOUT_CLASSIFICATION	8.212745404385362E-6	DEFECT	5.080343445474232E-6	DOCUMENTATION	2.3455919629052558E-6	DESIGN	1.6430546163274002E-6	TEST	9.550994201260503E-7	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999906837563447	WITHOUT_CLASSIFICATION	5.118573546165213E-6	DESIGN	3.2958038717881002E-6	IMPLEMENTATION	4.1428238695168143E-7	DOCUMENTATION	2.873976262564359E-7	DEFECT	2.0018622414457855E-7	TEST
// dup	WITHOUT_CLASSIFICATION	0.9999764612590735	WITHOUT_CLASSIFICATION	1.3970961896679765E-5	DESIGN	2.961639520694618E-6	DOCUMENTATION	2.7973654687741184E-6	DEFECT	1.970134487832844E-6	IMPLEMENTATION	1.838639552363015E-6	TEST
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999953737275101	WITHOUT_CLASSIFICATION	2.1012619934977168E-6	DESIGN	1.295051455718487E-6	DOCUMENTATION	6.076957009487775E-7	DEFECT	3.501882791010861E-7	IMPLEMENTATION	2.7207506059641947E-7	TEST
// checkcast	WITHOUT_CLASSIFICATION	0.9999932115900807	WITHOUT_CLASSIFICATION	5.5973357413597185E-6	IMPLEMENTATION	5.812955062034832E-7	DOCUMENTATION	3.468836407577184E-7	TEST	1.8455819353648909E-7	DESIGN	7.833683733879748E-8	DEFECT
// checkcast	WITHOUT_CLASSIFICATION	0.9999932115900807	WITHOUT_CLASSIFICATION	5.5973357413597185E-6	IMPLEMENTATION	5.812955062034832E-7	DOCUMENTATION	3.468836407577184E-7	TEST	1.8455819353648909E-7	DESIGN	7.833683733879748E-8	DEFECT
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999981562389334	WITHOUT_CLASSIFICATION	1.4764667873023343E-6	DEFECT	3.221540389057766E-7	DESIGN	2.0118834326824347E-8	DOCUMENTATION	1.4480088237220985E-8	TEST	1.0541317703577348E-8	IMPLEMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999981562389334	WITHOUT_CLASSIFICATION	1.4764667873023343E-6	DEFECT	3.221540389057766E-7	DESIGN	2.0118834326824347E-8	DOCUMENTATION	1.4480088237220985E-8	TEST	1.0541317703577348E-8	IMPLEMENTATION
// ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.9999939312700451	WITHOUT_CLASSIFICATION	4.700461986515229E-6	IMPLEMENTATION	6.33376679667778E-7	DEFECT	3.076562702141887E-7	DOCUMENTATION	2.1845669018089865E-7	TEST	2.0877832824292962E-7	DESIGN
// *load_1	WITHOUT_CLASSIFICATION	0.9999957554209978	WITHOUT_CLASSIFICATION	2.094106757602759E-6	IMPLEMENTATION	6.230254746565323E-7	DEFECT	6.013953553745657E-7	DESIGN	5.207110958829824E-7	DOCUMENTATION	4.0534031877153456E-7	TEST
// *load_1	WITHOUT_CLASSIFICATION	0.9999957554209978	WITHOUT_CLASSIFICATION	2.094106757602759E-6	IMPLEMENTATION	6.230254746565323E-7	DEFECT	6.013953553745657E-7	DESIGN	5.207110958829824E-7	DOCUMENTATION	4.0534031877153456E-7	TEST
// putfield	WITHOUT_CLASSIFICATION	0.9999949357663938	WITHOUT_CLASSIFICATION	4.2081344811381464E-6	IMPLEMENTATION	2.4505118493249417E-7	DOCUMENTATION	2.3220263082700132E-7	DEFECT	2.0747901459926525E-7	TEST	1.713662946868906E-7	DESIGN
// return ;	WITHOUT_CLASSIFICATION	0.9999781238048359	WITHOUT_CLASSIFICATION	1.0180706355081718E-5	IMPLEMENTATION	1.0015448977223612E-5	DESIGN	7.306840476970825E-7	DEFECT	6.317749173065725E-7	DOCUMENTATION	3.175808665545991E-7	TEST
// ldc // field name	WITHOUT_CLASSIFICATION	0.9999921881277111	WITHOUT_CLASSIFICATION	6.7059386409819086E-6	DESIGN	3.186147220946002E-7	TEST	2.884083094546805E-7	DEFECT	2.623234105744104E-7	IMPLEMENTATION	2.3658720600768852E-7	DOCUMENTATION
// getfield // old value of the field	WITHOUT_CLASSIFICATION	0.9999975085857342	WITHOUT_CLASSIFICATION	1.439183365013645E-6	DEFECT	8.350178890833504E-7	DESIGN	9.36133563351116E-8	DOCUMENTATION	8.902178333584665E-8	TEST	3.4577872044366434E-8	IMPLEMENTATION
// invokeinterface // callback.write*(..)	WITHOUT_CLASSIFICATION	0.9999986168891918	WITHOUT_CLASSIFICATION	1.0778927767122485E-6	DEFECT	2.0470146568706656E-7	DESIGN	5.990732100880593E-8	DOCUMENTATION	3.3090197272853413E-8	TEST	7.519047537693727E-9	IMPLEMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999893545933933	WITHOUT_CLASSIFICATION	9.47374725741218E-6	DESIGN	5.861419231965971E-7	IMPLEMENTATION	4.789907115461091E-7	DOCUMENTATION	8.463535511843447E-8	TEST	2.189135937943694E-8	DEFECT
// reference type	WITHOUT_CLASSIFICATION	0.9999893545933933	WITHOUT_CLASSIFICATION	9.47374725741218E-6	DESIGN	5.861419231965971E-7	IMPLEMENTATION	4.789907115461091E-7	DOCUMENTATION	8.463535511843447E-8	TEST	2.189135937943694E-8	DEFECT
// not array	WITHOUT_CLASSIFICATION	0.9989223869790308	WITHOUT_CLASSIFICATION	9.447413552283842E-4	IMPLEMENTATION	7.17262631852494E-5	DEFECT	3.257225568709318E-5	DESIGN	1.4574731721790567E-5	TEST	1.399841514669858E-5	DOCUMENTATION
// array of reference type	WITHOUT_CLASSIFICATION	0.9999986273288721	WITHOUT_CLASSIFICATION	8.82968380010352E-7	DESIGN	2.9023156931415123E-7	DOCUMENTATION	1.4494001060988168E-7	IMPLEMENTATION	3.863597104459365E-8	TEST	1.5895196773606064E-8	DEFECT
// boolean	WITHOUT_CLASSIFICATION	0.9999977325414385	WITHOUT_CLASSIFICATION	8.677253139834577E-7	IMPLEMENTATION	5.116129743286778E-7	DESIGN	3.836196406320488E-7	DOCUMENTATION	2.5646432787092085E-7	TEST	2.4803630469122857E-7	DEFECT
// byte	WITHOUT_CLASSIFICATION	0.9999861857224333	WITHOUT_CLASSIFICATION	8.469562003336643E-6	IMPLEMENTATION	1.5793433102559383E-6	DOCUMENTATION	1.3648838450108179E-6	TEST	1.3360242766243067E-6	DEFECT	1.0644641315178736E-6	DESIGN
// char	WITHOUT_CLASSIFICATION	0.9999989977262381	WITHOUT_CLASSIFICATION	2.728890519616135E-7	DESIGN	2.696180455192434E-7	TEST	1.8594812202678478E-7	IMPLEMENTATION	1.5333019806956747E-7	DOCUMENTATION	1.204883442028182E-7	DEFECT
// short	WITHOUT_CLASSIFICATION	0.9999897786862321	WITHOUT_CLASSIFICATION	3.767678167992735E-6	IMPLEMENTATION	2.012765450589173E-6	DEFECT	1.6002108482222137E-6	DESIGN	1.438238762541211E-6	DOCUMENTATION	1.4024205385597508E-6	TEST
// double	WITHOUT_CLASSIFICATION	0.9999996117810364	WITHOUT_CLASSIFICATION	1.351363365655487E-7	DESIGN	7.27500808987883E-8	IMPLEMENTATION	7.230806488783711E-8	DOCUMENTATION	6.11734450903815E-8	TEST	4.685103608554016E-8	DEFECT
// float	WITHOUT_CLASSIFICATION	0.99999599962451	WITHOUT_CLASSIFICATION	1.7330442383938448E-6	DEFECT	6.241729127670196E-7	DESIGN	5.721698153390079E-7	DOCUMENTATION	5.562163089703972E-7	IMPLEMENTATION	5.147722144910435E-7	TEST
// float	WITHOUT_CLASSIFICATION	0.99999599962451	WITHOUT_CLASSIFICATION	1.7330442383938448E-6	DEFECT	6.241729127670196E-7	DESIGN	5.721698153390079E-7	DOCUMENTATION	5.562163089703972E-7	IMPLEMENTATION	5.147722144910435E-7	TEST
// long	WITHOUT_CLASSIFICATION	0.9999707417577338	WITHOUT_CLASSIFICATION	1.5852822927507578E-5	DESIGN	6.937059149602109E-6	DEFECT	2.8024816777360426E-6	DOCUMENTATION	1.9299215496464903E-6	TEST	1.735956961661549E-6	IMPLEMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999707417577338	WITHOUT_CLASSIFICATION	1.5852822927507578E-5	DESIGN	6.937059149602109E-6	DEFECT	2.8024816777360426E-6	DOCUMENTATION	1.9299215496464903E-6	TEST	1.735956961661549E-6	IMPLEMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999751372887087	WITHOUT_CLASSIFICATION	1.881932340147038E-5	IMPLEMENTATION	2.3252911061265214E-6	DESIGN	2.3196396521226707E-6	DOCUMENTATION	8.899348178986774E-7	TEST	5.08522313721583E-7	DEFECT
// bad type	WITHOUT_CLASSIFICATION	0.9999751372887087	WITHOUT_CLASSIFICATION	1.881932340147038E-5	IMPLEMENTATION	2.3252911061265214E-6	DESIGN	2.3196396521226707E-6	DOCUMENTATION	8.899348178986774E-7	TEST	5.08522313721583E-7	DEFECT
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999980116237303	WITHOUT_CLASSIFICATION	6.245256264290579E-7	DEFECT	4.5603304435300677E-7	DESIGN	4.105618706707409E-7	IMPLEMENTATION	2.5953723819308004E-7	TEST	2.377184900363709E-7	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999980116237303	WITHOUT_CLASSIFICATION	6.245256264290579E-7	DEFECT	4.5603304435300677E-7	DESIGN	4.105618706707409E-7	IMPLEMENTATION	2.5953723819308004E-7	TEST	2.377184900363709E-7	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999893545933933	WITHOUT_CLASSIFICATION	9.47374725741218E-6	DESIGN	5.861419231965971E-7	IMPLEMENTATION	4.789907115461091E-7	DOCUMENTATION	8.463535511843447E-8	TEST	2.189135937943694E-8	DEFECT
// double	WITHOUT_CLASSIFICATION	0.9999996117810364	WITHOUT_CLASSIFICATION	1.351363365655487E-7	DESIGN	7.27500808987883E-8	IMPLEMENTATION	7.230806488783711E-8	DOCUMENTATION	6.11734450903815E-8	TEST	4.685103608554016E-8	DEFECT
// float	WITHOUT_CLASSIFICATION	0.99999599962451	WITHOUT_CLASSIFICATION	1.7330442383938448E-6	DEFECT	6.241729127670196E-7	DESIGN	5.721698153390079E-7	DOCUMENTATION	5.562163089703972E-7	IMPLEMENTATION	5.147722144910435E-7	TEST
// float	WITHOUT_CLASSIFICATION	0.99999599962451	WITHOUT_CLASSIFICATION	1.7330442383938448E-6	DEFECT	6.241729127670196E-7	DESIGN	5.721698153390079E-7	DOCUMENTATION	5.562163089703972E-7	IMPLEMENTATION	5.147722144910435E-7	TEST
// long	WITHOUT_CLASSIFICATION	0.9999707417577338	WITHOUT_CLASSIFICATION	1.5852822927507578E-5	DESIGN	6.937059149602109E-6	DEFECT	2.8024816777360426E-6	DOCUMENTATION	1.9299215496464903E-6	TEST	1.735956961661549E-6	IMPLEMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999751372887087	WITHOUT_CLASSIFICATION	1.881932340147038E-5	IMPLEMENTATION	2.3252911061265214E-6	DESIGN	2.3196396521226707E-6	DOCUMENTATION	8.899348178986774E-7	TEST	5.08522313721583E-7	DEFECT
// bad type	WITHOUT_CLASSIFICATION	0.9999751372887087	WITHOUT_CLASSIFICATION	1.881932340147038E-5	IMPLEMENTATION	2.3252911061265214E-6	DESIGN	2.3196396521226707E-6	DOCUMENTATION	8.899348178986774E-7	TEST	5.08522313721583E-7	DEFECT
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999980116237303	WITHOUT_CLASSIFICATION	6.245256264290579E-7	DEFECT	4.5603304435300677E-7	DESIGN	4.105618706707409E-7	IMPLEMENTATION	2.5953723819308004E-7	TEST	2.377184900363709E-7	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999975108986662	WITHOUT_CLASSIFICATION	2.129609832746117E-6	IMPLEMENTATION	2.5636100243807653E-7	DOCUMENTATION	5.695145920885802E-8	DESIGN	2.7102963507971147E-8	TEST	1.9076076030603813E-8	DEFECT
//Mainly for OSCache	WITHOUT_CLASSIFICATION	0.9999767590898774	WITHOUT_CLASSIFICATION	1.2043572564756454E-5	IMPLEMENTATION	3.948259375871198E-6	DESIGN	3.09400523036632E-6	DOCUMENTATION	2.6243289968834805E-6	DEFECT	1.5307439547333317E-6	TEST
//decrement the lock	WITHOUT_CLASSIFICATION	0.999189858218944	WITHOUT_CLASSIFICATION	5.903274648818595E-4	IMPLEMENTATION	1.331562644320372E-4	DESIGN	5.905356752814903E-5	DOCUMENTATION	1.5201470502060829E-5	TEST	1.2403013711885971E-5	DEFECT
// create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.9999894514741134	WITHOUT_CLASSIFICATION	4.650838511577473E-6	TEST	3.960752198759197E-6	DESIGN	8.934287180470958E-7	DEFECT	6.054694229629061E-7	IMPLEMENTATION	4.3803703527532527E-7	DOCUMENTATION
//recache the updated state	WITHOUT_CLASSIFICATION	0.9999640499144807	WITHOUT_CLASSIFICATION	3.353108031456728E-5	IMPLEMENTATION	9.143021739198758E-7	TEST	7.259019274817726E-7	DEFECT	7.06140797725191E-7	DOCUMENTATION	7.266030556829988E-8	DESIGN
// noop	WITHOUT_CLASSIFICATION	0.9999208044023247	WITHOUT_CLASSIFICATION	5.510086730954037E-5	IMPLEMENTATION	9.19509911991122E-6	DOCUMENTATION	6.014854135524992E-6	DEFECT	5.598218716211524E-6	DESIGN	3.286558394213186E-6	TEST
//null clientLock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.9998241391718371	WITHOUT_CLASSIFICATION	1.3709351159937235E-4	IMPLEMENTATION	3.450021262157935E-5	DEFECT	1.9442466337403767E-6	DOCUMENTATION	1.6495778282564336E-6	DESIGN	6.732794800265223E-7	TEST
// we really could refresh the item if it // is not a lock, but it might be slower //return freshTimestamp < txTimestamp	WITHOUT_CLASSIFICATION	0.9947312731066813	WITHOUT_CLASSIFICATION	0.005127723995009382	DEFECT	9.75898052707329E-5	DESIGN	2.9140951013503447E-5	IMPLEMENTATION	1.4094012683039238E-5	TEST	1.7812934193038344E-7	DOCUMENTATION
//by requiring <, we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.9998627878138789	WITHOUT_CLASSIFICATION	1.1295584711387098E-4	DEFECT	1.1794420015850456E-5	IMPLEMENTATION	9.966654396536368E-6	DESIGN	1.412086972439986E-6	TEST	1.0831776222809388E-6	DOCUMENTATION
// the user provided resulttransformer, not the one used with "select new". Here to avoid mangling // transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.9999995676651936	WITHOUT_CLASSIFICATION	1.4499261231695306E-7	IMPLEMENTATION	1.175400169598082E-7	DESIGN	1.0500011515932561E-7	TEST	5.781732289934089E-8	DEFECT	6.9847390651868885E-9	DOCUMENTATION
// disassemble positional parameters	WITHOUT_CLASSIFICATION	0.9999304074692705	WITHOUT_CLASSIFICATION	5.726106545745595E-5	IMPLEMENTATION	8.464787944835427E-6	DESIGN	2.7243396134974264E-6	DEFECT	6.794678284205199E-7	DOCUMENTATION	4.628698851685257E-7	TEST
// disassemble named parameters	WITHOUT_CLASSIFICATION	0.9999961816548275	WITHOUT_CLASSIFICATION	2.640298819568083E-6	DESIGN	7.280215491155377E-7	IMPLEMENTATION	2.672634900466577E-7	DEFECT	1.3963034595551724E-7	TEST	4.3130967835930334E-8	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999458966168099	WITHOUT_CLASSIFICATION	2.849250313481008E-5	IMPLEMENTATION	1.1878692964783703E-5	DOCUMENTATION	7.916723600103996E-6	DESIGN	3.678938478434268E-6	TEST	2.1365250120062828E-6	DEFECT
// noop	WITHOUT_CLASSIFICATION	0.9999208044023247	WITHOUT_CLASSIFICATION	5.510086730954037E-5	IMPLEMENTATION	9.19509911991122E-6	DOCUMENTATION	6.014854135524992E-6	DEFECT	5.598218716211524E-6	DESIGN	3.286558394213186E-6	TEST
//noop	WITHOUT_CLASSIFICATION	0.9998005893879811	WITHOUT_CLASSIFICATION	5.54637812346893E-5	DOCUMENTATION	4.752019480977388E-5	DESIGN	3.764738752176299E-5	IMPLEMENTATION	3.521634700576722E-5	DEFECT	2.35629014469344E-5	TEST
//noop	WITHOUT_CLASSIFICATION	0.9998005893879811	WITHOUT_CLASSIFICATION	5.54637812346893E-5	DOCUMENTATION	4.752019480977388E-5	DESIGN	3.764738752176299E-5	IMPLEMENTATION	3.521634700576722E-5	DEFECT	2.35629014469344E-5	TEST
// this is called from SettingsFactory irregardless; trivial to simply disregard	WITHOUT_CLASSIFICATION	0.9996502388388592	WITHOUT_CLASSIFICATION	3.437860125552509E-4	DESIGN	2.788652633006048E-6	DEFECT	1.5275697621504985E-6	IMPLEMENTATION	1.1383645775499303E-6	TEST	5.205616127325717E-7	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999991599324352	WITHOUT_CLASSIFICATION	2.560549391863492E-7	IMPLEMENTATION	1.9948019099028029E-7	DOCUMENTATION	1.7595622025572284E-7	DEFECT	1.2120940419949282E-7	TEST	8.736681023134105E-8	DESIGN
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999991599324352	WITHOUT_CLASSIFICATION	2.560549391863492E-7	IMPLEMENTATION	1.9948019099028029E-7	DOCUMENTATION	1.7595622025572284E-7	DEFECT	1.2120940419949282E-7	TEST	8.736681023134105E-8	DESIGN
//throw new UnsupportedOperationException("Can't write to a readonly object");	WITHOUT_CLASSIFICATION	0.9985370017806607	WITHOUT_CLASSIFICATION	0.0010382438848734337	DESIGN	3.253569501349594E-4	DEFECT	8.567191160717304E-5	TEST	1.1060404650431146E-5	DOCUMENTATION	2.66506807331299E-6	IMPLEMENTATION
//assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9999889026109244	WITHOUT_CLASSIFICATION	9.792077600671625E-6	DEFECT	9.691840639214728E-7	DESIGN	2.3366449614078267E-7	TEST	7.944269452544287E-8	DOCUMENTATION	2.3020220224310373E-8	IMPLEMENTATION
//persister.setIdentifier(result, id); //before calling interceptor, for consistency with normal load	WITHOUT_CLASSIFICATION	0.9999861515212292	WITHOUT_CLASSIFICATION	6.133480326167388E-6	IMPLEMENTATION	5.848819728256762E-6	DEFECT	1.0194112721627281E-6	TEST	6.739354785522994E-7	DESIGN	1.7283196570038134E-7	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999571063625737	WITHOUT_CLASSIFICATION	2.8215462726830587E-5	IMPLEMENTATION	8.857308487665612E-6	DEFECT	3.874762550986956E-6	DESIGN	1.5386282650389156E-6	DOCUMENTATION	4.0747539561789705E-7	TEST
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999571063625737	WITHOUT_CLASSIFICATION	2.8215462726830587E-5	IMPLEMENTATION	8.857308487665612E-6	DEFECT	3.874762550986956E-6	DESIGN	1.5386282650389156E-6	DOCUMENTATION	4.0747539561789705E-7	TEST
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999999946710453	WITHOUT_CLASSIFICATION	4.155868367114047E-9	DEFECT	7.858158001778771E-10	IMPLEMENTATION	2.933539854007064E-10	TEST	7.476504836943737E-11	DESIGN	1.915154228242212E-11	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999988711964994	WITHOUT_CLASSIFICATION	1.109587479241671E-6	IMPLEMENTATION	1.310376971955308E-8	DEFECT	5.205170184803774E-9	TEST	7.984378942913466E-10	DOCUMENTATION	1.0864338968185101E-10	DESIGN
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999988711964994	WITHOUT_CLASSIFICATION	1.109587479241671E-6	IMPLEMENTATION	1.310376971955308E-8	DEFECT	5.205170184803774E-9	TEST	7.984378942913466E-10	DOCUMENTATION	1.0864338968185101E-10	DESIGN
// classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.9956080113831406	WITHOUT_CLASSIFICATION	0.004112951448693276	DESIGN	2.0562646581036504E-4	TEST	3.545121390408558E-5	DOCUMENTATION	2.592536661484558E-5	DEFECT	1.203412183696579E-5	IMPLEMENTATION
// get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.9999940956056487	WITHOUT_CLASSIFICATION	3.178552696703533E-6	DEFECT	1.5403900108891265E-6	IMPLEMENTATION	7.910644845124764E-7	DESIGN	2.654736140537534E-7	TEST	1.2891354501701486E-7	DOCUMENTATION
// get meta's from <class>	WITHOUT_CLASSIFICATION	0.999999571727082	WITHOUT_CLASSIFICATION	3.6455251858587214E-7	DESIGN	2.9020111206978916E-8	DEFECT	1.8487079636580862E-8	TEST	1.2538233217733741E-8	DOCUMENTATION	3.6749752155175007E-9	IMPLEMENTATION
// DB-OBJECTNAME	WITHOUT_CLASSIFICATION	0.9998949000602472	WITHOUT_CLASSIFICATION	5.997949175199182E-5	IMPLEMENTATION	1.4088170100533954E-5	DOCUMENTATION	1.1757440982919778E-5	DEFECT	1.0402578324274794E-5	TEST	8.872258593182917E-6	DESIGN
// MUTABLE	WITHOUT_CLASSIFICATION	0.9999850243155368	WITHOUT_CLASSIFICATION	4.630249717042573E-6	DEFECT	3.854680797198984E-6	DESIGN	2.179552875036405E-6	DOCUMENTATION	2.1721710225479514E-6	TEST	2.1390300515407946E-6	IMPLEMENTATION
// WHERE	WITHOUT_CLASSIFICATION	0.9999751969463815	WITHOUT_CLASSIFICATION	6.181436511176071E-6	DEFECT	5.291250207029551E-6	IMPLEMENTATION	5.189152348258341E-6	DESIGN	4.43239853548403E-6	TEST	3.7088160165473625E-6	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999840019595271	WITHOUT_CLASSIFICATION	8.76001649255271E-6	DESIGN	2.5225111213773007E-6	TEST	1.8816310435091633E-6	DOCUMENTATION	1.7120406467838228E-6	DEFECT	1.1218411686311715E-6	IMPLEMENTATION
// POLYMORPHISM	WITHOUT_CLASSIFICATION	0.9999747206043869	WITHOUT_CLASSIFICATION	1.0209657923286333E-5	IMPLEMENTATION	4.8529280696669485E-6	DESIGN	3.8928475044746414E-6	DEFECT	3.850883822151309E-6	DOCUMENTATION	2.4730782934965252E-6	TEST
// TODO:	WITHOUT_CLASSIFICATION	0.9843088841899554	WITHOUT_CLASSIFICATION	0.007822232905425221	IMPLEMENTATION	0.005413588576570941	DESIGN	0.0010009029715467887	DOCUMENTATION	9.063484182021215E-4	DEFECT	5.480429382994392E-4	TEST
// ID	WITHOUT_CLASSIFICATION	0.9999663460133145	WITHOUT_CLASSIFICATION	1.5914643113599715E-5	IMPLEMENTATION	7.442680037796848E-6	DESIGN	4.373425226980268E-6	DOCUMENTATION	3.2467673400667226E-6	TEST	2.676470967080461E-6	DEFECT
// VERSION / TIMESTAMP	WITHOUT_CLASSIFICATION	0.9999883972963943	WITHOUT_CLASSIFICATION	3.81596204313665E-6	DEFECT	3.1378258221685317E-6	IMPLEMENTATION	2.1800278477847042E-6	DOCUMENTATION	1.5358031277383105E-6	TEST	9.330847647497077E-7	DESIGN
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9998761150019172	WITHOUT_CLASSIFICATION	8.047201665692829E-5	IMPLEMENTATION	1.3657018195523062E-5	DOCUMENTATION	1.3404217729425498E-5	DEFECT	9.341316438098122E-6	DESIGN	7.010429062880634E-6	TEST
// Primary key constraint	WITHOUT_CLASSIFICATION	0.9999997061815457	WITHOUT_CLASSIFICATION	1.4929972776807236E-7	DOCUMENTATION	5.3148890349710396E-8	DESIGN	5.17120522820833E-8	TEST	3.5236934637264925E-8	IMPLEMENTATION	4.4208492580513686E-9	DEFECT
// this is either a <version/> tag with no type attribute, // or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.9999847491978595	WITHOUT_CLASSIFICATION	1.022172637840241E-5	TEST	2.0212944596023733E-6	DEFECT	1.8529432438655789E-6	IMPLEMENTATION	7.818402858627006E-7	DESIGN	3.7299777297205626E-7	DOCUMENTATION
// for version properties marked as being generated, make sure they are "always" // generated; aka, "insert" is invalid; this is dis-allowed by the DTD, // but just to make sure...	WITHOUT_CLASSIFICATION	0.9999654610298814	WITHOUT_CLASSIFICATION	3.133426839025009E-5	DESIGN	1.3446050123765226E-6	DEFECT	1.0325192859200042E-6	IMPLEMENTATION	7.950308971177751E-7	TEST	3.254653295347008E-8	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9998761150019172	WITHOUT_CLASSIFICATION	8.047201665692829E-5	IMPLEMENTATION	1.3657018195523062E-5	DOCUMENTATION	1.3404217729425498E-5	DEFECT	9.341316438098122E-6	DESIGN	7.010429062880634E-6	TEST
// ( (Column) discrim.getColumnIterator().next() ).setType(type);	WITHOUT_CLASSIFICATION	0.9999815331787816	WITHOUT_CLASSIFICATION	8.990132741359593E-6	DESIGN	5.942460311880754E-6	IMPLEMENTATION	3.12366610710494E-6	DEFECT	2.187463395863585E-7	DOCUMENTATION	1.9181571863914752E-7	TEST
// go ahead and set the lazy here, since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.9999832717804545	WITHOUT_CLASSIFICATION	1.640765327488876E-5	IMPLEMENTATION	1.7078771064404692E-7	DESIGN	8.549530980464731E-8	DEFECT	4.812466966444613E-8	DOCUMENTATION	1.6158580459310747E-8	TEST
// DYNAMIC UPDATE	WITHOUT_CLASSIFICATION	0.9999703080273795	WITHOUT_CLASSIFICATION	1.7236760496928234E-5	IMPLEMENTATION	3.788758936192371E-6	DEFECT	3.4176291329111744E-6	DOCUMENTATION	2.76222903743468E-6	DESIGN	2.486595017071533E-6	TEST
// IMPORT	WITHOUT_CLASSIFICATION	0.9999880263783876	WITHOUT_CLASSIFICATION	4.810751040884765E-6	IMPLEMENTATION	2.4174864639299764E-6	DESIGN	1.8853020923926327E-6	DOCUMENTATION	1.776938680460294E-6	DEFECT	1.0831433348380065E-6	TEST
// BATCH SIZE	WITHOUT_CLASSIFICATION	0.9999629347535631	WITHOUT_CLASSIFICATION	1.1511092955782574E-5	IMPLEMENTATION	1.045204399028791E-5	DESIGN	6.024773474033688E-6	DOCUMENTATION	5.682390689799782E-6	DEFECT	3.3949453269322146E-6	TEST
// SELECT BEFORE UPDATE	WITHOUT_CLASSIFICATION	0.9999913333993213	WITHOUT_CLASSIFICATION	3.0456694029050014E-6	IMPLEMENTATION	1.823395129271932E-6	DOCUMENTATION	1.8055545717347149E-6	DEFECT	1.2551567777569316E-6	TEST	7.368247968613253E-7	DESIGN
// OPTIMISTIC LOCK MODE	WITHOUT_CLASSIFICATION	0.9999831078787401	WITHOUT_CLASSIFICATION	4.8181917765219854E-6	DESIGN	3.8034918124716847E-6	IMPLEMENTATION	3.6733938723296047E-6	DOCUMENTATION	2.3834809984670883E-6	DEFECT	2.2135627999249995E-6	TEST
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999756170322378	WITHOUT_CLASSIFICATION	9.233550324549174E-6	IMPLEMENTATION	4.759263691857711E-6	DESIGN	4.1585902565877355E-6	DOCUMENTATION	3.3949731519668015E-6	TEST	2.836590337274663E-6	DEFECT
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999872870666131	WITHOUT_CLASSIFICATION	4.136254091005482E-6	DESIGN	2.776214496900039E-6	DEFECT	2.5008649958714396E-6	DOCUMENTATION	1.8730604302582516E-6	IMPLEMENTATION	1.4265393728707396E-6	TEST
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999996211410209	WITHOUT_CLASSIFICATION	3.3648635919320143E-7	DESIGN	2.4322025957014414E-8	DEFECT	9.768003532497042E-9	TEST	6.68325483578381E-9	DOCUMENTATION	1.5993355628836642E-9	IMPLEMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999930837361709	WITHOUT_CLASSIFICATION	5.683687226253732E-6	IMPLEMENTATION	4.450889915808885E-7	DEFECT	4.2955400837416273E-7	DOCUMENTATION	1.902152826058041E-7	TEST	1.6771832031638996E-7	DESIGN
// joined subclasses	WITHOUT_CLASSIFICATION	0.9999996115542099	WITHOUT_CLASSIFICATION	1.3211438938927553E-7	DESIGN	1.1549017190991705E-7	IMPLEMENTATION	6.93141412890244E-8	DOCUMENTATION	5.3823745564914484E-8	TEST	1.770334193361912E-8	DEFECT
// KEY	WITHOUT_CLASSIFICATION	0.9999829184560262	WITHOUT_CLASSIFICATION	5.975711122780919E-6	DESIGN	3.130676252482099E-6	TEST	2.958699693670337E-6	IMPLEMENTATION	2.8752527466075375E-6	DOCUMENTATION	2.1412041583926463E-6	DEFECT
// CHECK	WITHOUT_CLASSIFICATION	0.9999840019595271	WITHOUT_CLASSIFICATION	8.76001649255271E-6	DESIGN	2.5225111213773007E-6	TEST	1.8816310435091633E-6	DOCUMENTATION	1.7120406467838228E-6	DEFECT	1.1218411686311715E-6	IMPLEMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999872870666131	WITHOUT_CLASSIFICATION	4.136254091005482E-6	DESIGN	2.776214496900039E-6	DEFECT	2.5008649958714396E-6	DOCUMENTATION	1.8730604302582516E-6	IMPLEMENTATION	1.4265393728707396E-6	TEST
// properties	WITHOUT_CLASSIFICATION	0.9999930837361709	WITHOUT_CLASSIFICATION	5.683687226253732E-6	IMPLEMENTATION	4.450889915808885E-7	DEFECT	4.2955400837416273E-7	DOCUMENTATION	1.902152826058041E-7	TEST	1.6771832031638996E-7	DESIGN
// KEY	WITHOUT_CLASSIFICATION	0.9999829184560262	WITHOUT_CLASSIFICATION	5.975711122780919E-6	DESIGN	3.130676252482099E-6	TEST	2.958699693670337E-6	IMPLEMENTATION	2.8752527466075375E-6	DOCUMENTATION	2.1412041583926463E-6	DEFECT
// model.getKey().setType( new Type( model.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999859876733479	WITHOUT_CLASSIFICATION	1.1447407961087732E-5	IMPLEMENTATION	1.497942369634058E-6	DEFECT	6.430246179215902E-7	DESIGN	3.517356143339018E-7	DOCUMENTATION	7.221608911116832E-8	TEST
// TABLENAME	WITHOUT_CLASSIFICATION	0.9999092163860842	WITHOUT_CLASSIFICATION	3.841742779925474E-5	IMPLEMENTATION	1.9977208363319388E-5	DEFECT	1.4934876112755433E-5	DESIGN	1.0014361799769336E-5	DOCUMENTATION	7.439739840671291E-6	TEST
// join.getKey().setType( new Type( lazz.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999806693536326	WITHOUT_CLASSIFICATION	1.8245609510672598E-5	IMPLEMENTATION	8.432690509245125E-7	DEFECT	1.6350890212734788E-7	DOCUMENTATION	5.564572280367592E-8	DESIGN	2.2613180867067437E-8	TEST
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999681065641712	WITHOUT_CLASSIFICATION	1.470117078038907E-5	IMPLEMENTATION	5.234694076403671E-6	DOCUMENTATION	4.9405202868547355E-6	DESIGN	3.891875464980898E-6	TEST	3.1251752201773887E-6	DEFECT
// COLUMN(S)	WITHOUT_CLASSIFICATION	0.9999880723190402	WITHOUT_CLASSIFICATION	4.24526182995705E-6	IMPLEMENTATION	2.650483761536593E-6	DEFECT	1.8207448403182894E-6	DESIGN	1.7572277148537542E-6	DOCUMENTATION	1.4539628131548896E-6	TEST
// column index	WITHOUT_CLASSIFICATION	0.9999355146362183	WITHOUT_CLASSIFICATION	3.6323358580118815E-5	DESIGN	1.2730185820565727E-5	DEFECT	7.605728121762923E-6	DOCUMENTATION	4.614885317044788E-6	IMPLEMENTATION	3.2112059422662674E-6	TEST
//column unique-key	WITHOUT_CLASSIFICATION	0.9998365628037476	WITHOUT_CLASSIFICATION	7.131583863398844E-5	IMPLEMENTATION	4.058608641573977E-5	DOCUMENTATION	3.5235410698455215E-5	DESIGN	9.537224998954212E-6	TEST	6.762635505335013E-6	DEFECT
// automatically makes a column with the default name if none is specifed by XML	WITHOUT_CLASSIFICATION	0.997654942033421	WITHOUT_CLASSIFICATION	0.001949702722139771	DEFECT	2.519590031679706E-4	DESIGN	8.394553174348908E-5	IMPLEMENTATION	3.983544386387329E-5	DOCUMENTATION	1.9615265664011515E-5	TEST
// for an any	WITHOUT_CLASSIFICATION	0.9999954364521203	WITHOUT_CLASSIFICATION	1.7252601095820822E-6	DEFECT	1.1620712529001052E-6	IMPLEMENTATION	9.509187713002586E-7	DESIGN	4.1087108540043053E-7	TEST	3.144266604826047E-7	DOCUMENTATION
// insertable simply because that is the user did not specify // anything; just override it	WITHOUT_CLASSIFICATION	0.9999995473576734	WITHOUT_CLASSIFICATION	2.248322447823752E-7	IMPLEMENTATION	2.2326654399173597E-7	DEFECT	2.3617803506627104E-9	TEST	1.6964899277473247E-9	DOCUMENTATION	4.852676487759798E-10	DESIGN
// the user specifically supplied insert="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999971351864574	WITHOUT_CLASSIFICATION	1.6471737856786275E-6	DESIGN	4.5496900576065697E-7	DOCUMENTATION	4.186455540381182E-7	TEST	2.900784678787941E-7	DEFECT	5.394672919515334E-8	IMPLEMENTATION
// properties generated on update can never be updateable...	WITHOUT_CLASSIFICATION	0.9999981199058406	WITHOUT_CLASSIFICATION	9.91657403190411E-7	IMPLEMENTATION	6.88820941168314E-7	DEFECT	1.2242177870098244E-7	DESIGN	6.224658383182874E-8	TEST	1.4947452335560625E-8	DOCUMENTATION
// updateable only because the user did not specify  // anything; just override it	WITHOUT_CLASSIFICATION	0.9999992013511093	WITHOUT_CLASSIFICATION	3.9683781090634897E-7	DEFECT	3.8933361837524735E-7	IMPLEMENTATION	7.350689368539744E-9	DOCUMENTATION	5.072150305231721E-9	TEST	5.4621784668992954E-11	DESIGN
// the user specifically supplied update="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999978756106104	WITHOUT_CLASSIFICATION	1.0833704913725423E-6	DEFECT	3.9876158790643245E-7	IMPLEMENTATION	2.781753623616533E-7	DOCUMENTATION	2.3025177667830067E-7	TEST	1.3383017134609505E-7	DESIGN
// ROLENAME	WITHOUT_CLASSIFICATION	0.9999437440386182	WITHOUT_CLASSIFICATION	2.835752423988443E-5	IMPLEMENTATION	1.3950930051524891E-5	DEFECT	5.828898310388372E-6	TEST	4.837608912590744E-6	DOCUMENTATION	3.280999867348027E-6	DESIGN
// FETCH STRATEGY	WITHOUT_CLASSIFICATION	0.9999787841923025	WITHOUT_CLASSIFICATION	6.89572197245321E-6	IMPLEMENTATION	4.695277631805245E-6	DESIGN	3.366843055474674E-6	TEST	3.2907307049204763E-6	DOCUMENTATION	2.967234332827545E-6	DEFECT
// TABLE	WITHOUT_CLASSIFICATION	0.9999521435128239	WITHOUT_CLASSIFICATION	1.8108466360876823E-5	DESIGN	9.264500486790954E-6	DEFECT	8.6264019490519E-6	IMPLEMENTATION	6.998675329057234E-6	DOCUMENTATION	4.858443050210549E-6	TEST
//tableName = mappings.getNamingStrategy().propertyToTableName( className, path );	WITHOUT_CLASSIFICATION	0.9999994958520882	WITHOUT_CLASSIFICATION	1.7848614988688499E-7	DEFECT	1.1833796410414004E-7	TEST	1.0974278576179886E-7	DESIGN	4.932650926572464E-8	IMPLEMENTATION	4.825450265462392E-8	DOCUMENTATION
// SORT	WITHOUT_CLASSIFICATION	0.9999932143742737	WITHOUT_CLASSIFICATION	1.8586971554489421E-6	DOCUMENTATION	1.3910048280558394E-6	DEFECT	1.2710633032234627E-6	DESIGN	1.1443194122103072E-6	IMPLEMENTATION	1.120541027419928E-6	TEST
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999872870666131	WITHOUT_CLASSIFICATION	4.136254091005482E-6	DESIGN	2.776214496900039E-6	DEFECT	2.5008649958714396E-6	DOCUMENTATION	1.8730604302582516E-6	IMPLEMENTATION	1.4265393728707396E-6	TEST
// unsorted, natural, comparator.class.name	WITHOUT_CLASSIFICATION	0.9999870491041389	WITHOUT_CLASSIFICATION	1.168915910353088E-5	DESIGN	6.458893256537488E-7	IMPLEMENTATION	2.5822524216737636E-7	TEST	2.0334933600773694E-7	DOCUMENTATION	1.5427285364638926E-7	DEFECT
// ORPHAN DELETE (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.9999775897283028	WITHOUT_CLASSIFICATION	1.2437794772665431E-5	DESIGN	7.211810999821591E-6	DEFECT	1.9385843236258036E-6	IMPLEMENTATION	4.267954761467663E-7	TEST	3.952861250567433E-7	DOCUMENTATION
// set up second pass	WITHOUT_CLASSIFICATION	0.9999987740474208	WITHOUT_CLASSIFICATION	9.256285961160737E-7	IMPLEMENTATION	1.268355368497046E-7	DOCUMENTATION	8.344844503177413E-8	DEFECT	5.518174665347454E-8	TEST	3.485825450666193E-8	DESIGN
// an "embedded" component (composite ids and unique) // note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.9921732827052043	WITHOUT_CLASSIFICATION	0.003999078251775987	TEST	0.003176735041159866	DESIGN	5.913927020622634E-4	IMPLEMENTATION	4.9115480597320295E-5	DEFECT	1.0395819200302909E-5	DOCUMENTATION
// a nested composite element	WITHOUT_CLASSIFICATION	0.9999970357852661	WITHOUT_CLASSIFICATION	1.9565779891467486E-6	IMPLEMENTATION	3.8099186225205356E-7	TEST	2.692465920566092E-7	DOCUMENTATION	2.540747258353508E-7	DESIGN	1.0332356459839406E-7	DEFECT
// for an any // we will have to use reflection	WITHOUT_CLASSIFICATION	0.9999884338129247	WITHOUT_CLASSIFICATION	6.231667860458988E-6	DESIGN	4.076156919011497E-6	DEFECT	8.930423110562954E-7	IMPLEMENTATION	1.922127324644848E-7	DOCUMENTATION	1.7310725210542906E-7	TEST
//NOTE SPECIAL CASE: // one-to-one constrained=false cannot be proxied, // so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.9999908566240512	WITHOUT_CLASSIFICATION	6.66316392152116E-6	IMPLEMENTATION	2.275901756111452E-6	DESIGN	1.1947058000830615E-7	DEFECT	7.587548106651099E-8	DOCUMENTATION	8.964210071350142E-9	TEST
// use old (HB 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.9999997098280227	WITHOUT_CLASSIFICATION	1.3705160172428343E-7	IMPLEMENTATION	6.34752799551115E-8	DOCUMENTATION	3.892248826367948E-8	DEFECT	3.209302213512432E-8	DESIGN	1.862958528371374E-8	TEST
//lazy = !join;	WITHOUT_CLASSIFICATION	0.9999719753603825	WITHOUT_CLASSIFICATION	1.04725959543296E-5	DEFECT	7.708014736509252E-6	IMPLEMENTATION	7.029046568260312E-6	DOCUMENTATION	2.249850175962999E-6	TEST	5.651321824622011E-7	DESIGN
// GENERATOR	WITHOUT_CLASSIFICATION	0.9999534601480928	WITHOUT_CLASSIFICATION	2.1149208268042905E-5	IMPLEMENTATION	8.258540957749976E-6	DESIGN	6.849830177771207E-6	DOCUMENTATION	5.196101407891709E-6	DEFECT	5.086171095648567E-6	TEST
// ID UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999032380808691	WITHOUT_CLASSIFICATION	7.777556483943975E-5	IMPLEMENTATION	5.645033404617887E-6	DESIGN	5.216533587712866E-6	DOCUMENTATION	4.761384559089859E-6	DEFECT	3.3634027399272823E-6	TEST
// VERSION UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999773136976492	WITHOUT_CLASSIFICATION	1.3065279879077296E-5	IMPLEMENTATION	3.89236367784489E-6	DEFECT	2.9685876107953707E-6	DOCUMENTATION	1.8197423746334196E-6	TEST	9.403288084817658E-7	DESIGN
// not necessarily a *unique* property reference	WITHOUT_CLASSIFICATION	0.9956650770297635	WITHOUT_CLASSIFICATION	0.004123127139427772	IMPLEMENTATION	1.7264262274102292E-4	DESIGN	2.9320616650808297E-5	DEFECT	7.104472385674952E-6	DOCUMENTATION	2.7281190312786597E-6	TEST
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9993808896425721	WITHOUT_CLASSIFICATION	3.1738477330262873E-4	DESIGN	1.9834906750046727E-4	IMPLEMENTATION	1.0097032905253231E-4	DEFECT	1.2928651013890607E-6	DOCUMENTATION	1.1133224709009527E-6	TEST
// contained elements:	WITHOUT_CLASSIFICATION	0.9999991472115715	WITHOUT_CLASSIFICATION	4.418162976423874E-7	IMPLEMENTATION	1.718584998783933E-7	DOCUMENTATION	1.709107956031038E-7	DESIGN	5.223528491453218E-8	TEST	1.5967550460709124E-8	DEFECT
// for non-inverse one-to-many, with a not-null fk, add a backref!	WITHOUT_CLASSIFICATION	0.9999736235244524	WITHOUT_CLASSIFICATION	1.3689457777436315E-5	IMPLEMENTATION	1.0398970403127762E-5	DEFECT	1.3504176220462389E-6	DESIGN	5.925838667993474E-7	DOCUMENTATION	3.450458782336522E-7	TEST
// Bind the where	WITHOUT_CLASSIFICATION	0.9994795832457796	WITHOUT_CLASSIFICATION	4.587850907016746E-4	IMPLEMENTATION	4.2225346538647356E-5	DESIGN	1.333837575285392E-5	DOCUMENTATION	4.939106209963772E-6	TEST	1.1288350173608877E-6	DEFECT
// Bind the order-by	WITHOUT_CLASSIFICATION	0.9998987118899604	WITHOUT_CLASSIFICATION	9.033349796232714E-5	IMPLEMENTATION	5.937157313841381E-6	DOCUMENTATION	2.3330705629563352E-6	DESIGN	1.9675908767317204E-6	DEFECT	7.167933237337017E-7	TEST
// Bind the filters	WITHOUT_CLASSIFICATION	0.9999861938214064	WITHOUT_CLASSIFICATION	9.798162742781286E-6	IMPLEMENTATION	3.079220928140186E-6	DESIGN	5.279091624504905E-7	DOCUMENTATION	2.8664990928386353E-7	TEST	1.1423585098944032E-7	DEFECT
// overriding inherited meta attribute. HBX-621 & HBX-793	WITHOUT_CLASSIFICATION	0.9999043678308891	WITHOUT_CLASSIFICATION	5.453872850760324E-5	IMPLEMENTATION	2.2199160728326853E-5	DEFECT	9.813467881728741E-6	DESIGN	8.1627215829688E-6	TEST	9.180904102241538E-7	DOCUMENTATION
// first, iterate over all elements capable of defining an extends attribute // collecting all found extends references if they cannot be resolved // against the already processed mappings.	WITHOUT_CLASSIFICATION	0.9999988191594351	WITHOUT_CLASSIFICATION	9.48870474316229E-7	IMPLEMENTATION	2.00425160313273E-7	DESIGN	2.5589093384581736E-8	TEST	5.3421893690866855E-9	DEFECT	6.13647484418651E-10	DOCUMENTATION
// mappings might contain either the "raw" extends name (in the case of // an entity-name mapping) or a FQN (in the case of a POJO mapping).	WITHOUT_CLASSIFICATION	0.9936898099978738	WITHOUT_CLASSIFICATION	0.006236336504797218	DESIGN	3.613827137840161E-5	IMPLEMENTATION	3.2566101329126384E-5	DEFECT	3.3380581073022968E-6	DOCUMENTATION	1.8110665140551348E-6	TEST
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.999165586675242	WITHOUT_CLASSIFICATION	8.118127088929878E-4	DESIGN	1.4634015839227881E-5	DEFECT	4.59426004606399E-6	IMPLEMENTATION	2.240800789944702E-6	TEST	1.13153918975494E-6	DOCUMENTATION
//SessionFactory name:	WITHOUT_CLASSIFICATION	0.9999794114333113	WITHOUT_CLASSIFICATION	5.920039169513585E-6	DESIGN	5.116543805814965E-6	DEFECT	4.522099871465439E-6	DOCUMENTATION	2.8591138061209328E-6	IMPLEMENTATION	2.1707700357954498E-6	TEST
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9987030599629672	WITHOUT_CLASSIFICATION	7.034291308024692E-4	IMPLEMENTATION	3.0703323368098815E-4	DESIGN	1.7439222323149085E-4	DEFECT	7.275287917847477E-5	DOCUMENTATION	3.9332570139296684E-5	TEST
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9987030599629672	WITHOUT_CLASSIFICATION	7.034291308024692E-4	IMPLEMENTATION	3.0703323368098815E-4	DESIGN	1.7439222323149085E-4	DEFECT	7.275287917847477E-5	DOCUMENTATION	3.9332570139296684E-5	TEST
//Interrogate JDBC metadata	WITHOUT_CLASSIFICATION	0.9998946012128286	WITHOUT_CLASSIFICATION	2.8258862577356672E-5	DESIGN	2.7811718161636437E-5	IMPLEMENTATION	2.4986871011310875E-5	DOCUMENTATION	1.7427754686482697E-5	DEFECT	6.913580734649547E-6	TEST
// user supplied JDBC connections	WITHOUT_CLASSIFICATION	0.9977490194623387	WITHOUT_CLASSIFICATION	0.0020825422065454545	IMPLEMENTATION	1.4410842966442136E-4	DESIGN	8.592362971058666E-6	DEFECT	8.573303918545616E-6	DOCUMENTATION	7.164234561622066E-6	TEST
//use dialect default properties	WITHOUT_CLASSIFICATION	0.9999811945865431	WITHOUT_CLASSIFICATION	1.2054478683732745E-5	IMPLEMENTATION	4.587504272468864E-6	DESIGN	1.111553483419561E-6	DEFECT	7.583086100958776E-7	DOCUMENTATION	2.935684072706539E-7	TEST
// Transaction settings:	WITHOUT_CLASSIFICATION	0.9999920554766119	WITHOUT_CLASSIFICATION	3.20416799864018E-6	DESIGN	2.662511420026551E-6	IMPLEMENTATION	1.1885061781285615E-6	DOCUMENTATION	5.638736237960046E-7	DEFECT	3.254641676431032E-7	TEST
//SQL Generation settings:	WITHOUT_CLASSIFICATION	0.9999897060518992	WITHOUT_CLASSIFICATION	4.127371864500402E-6	DESIGN	2.1542673033799344E-6	IMPLEMENTATION	1.8225405174719314E-6	TEST	1.3342757388963073E-6	DOCUMENTATION	8.554926765314517E-7	DEFECT
//Query parser settings:	WITHOUT_CLASSIFICATION	0.9998396702304782	WITHOUT_CLASSIFICATION	1.2748168162346373E-4	DEFECT	1.617862722834143E-5	IMPLEMENTATION	9.544442467344204E-6	DESIGN	4.977287300688229E-6	DOCUMENTATION	2.1477309019834764E-6	TEST
// Second-level / query cache:	WITHOUT_CLASSIFICATION	0.9999920122864938	WITHOUT_CLASSIFICATION	6.7018498661324685E-6	IMPLEMENTATION	4.920263391859458E-7	DESIGN	4.1602538150024286E-7	DOCUMENTATION	2.0086017462120526E-7	DEFECT	1.7695174460252297E-7	TEST
// The cache provider is needed when we either have second-level cache enabled // or query cache enabled.  Note that useSecondLevelCache is enabled by default	WITHOUT_CLASSIFICATION	0.9995075884599598	WITHOUT_CLASSIFICATION	3.843183503994581E-4	IMPLEMENTATION	6.035604901583209E-5	DESIGN	4.532411601092402E-5	DEFECT	1.4491099805031458E-6	TEST	9.63914633501653E-7	DOCUMENTATION
//SQL Exception converter:	WITHOUT_CLASSIFICATION	0.9999876953094163	WITHOUT_CLASSIFICATION	3.9543839822024285E-6	DEFECT	3.7685225549900107E-6	TEST	2.363265396442904E-6	DOCUMENTATION	1.3114540813008037E-6	DESIGN	9.070645687165193E-7	IMPLEMENTATION
//Statistics and logging:	WITHOUT_CLASSIFICATION	0.999995188468802	WITHOUT_CLASSIFICATION	1.8256265186854822E-6	IMPLEMENTATION	1.4587259521044345E-6	DEFECT	5.961399670656324E-7	DOCUMENTATION	5.393577038866165E-7	DESIGN	3.9168105629103336E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
//Schema export:	WITHOUT_CLASSIFICATION	0.9997258073781083	WITHOUT_CLASSIFICATION	1.5026252255551933E-4	DEFECT	8.060534416643472E-5	IMPLEMENTATION	2.124943479284061E-5	DOCUMENTATION	1.4865352784755445E-5	DESIGN	7.209967592090617E-6	TEST
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// legacy behavior, apply the bridge...	WITHOUT_CLASSIFICATION	0.9999329009611966	WITHOUT_CLASSIFICATION	3.358031381823287E-5	DESIGN	2.731836534524561E-5	IMPLEMENTATION	4.128089530157341E-6	DEFECT	1.439354784202923E-6	DOCUMENTATION	6.32915325521353E-7	TEST
// maybe a concrete SQLpropertyresult type, but Map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.9978203896146894	WITHOUT_CLASSIFICATION	0.0020934836491018315	DESIGN	4.284676401925221E-5	DEFECT	3.070589396181858E-5	DOCUMENTATION	6.51887678921702E-6	TEST	6.055201438347858E-6	IMPLEMENTATION
//if dotted and not load-collection nor return-join //regular property	WITHOUT_CLASSIFICATION	0.9989185664339791	WITHOUT_CLASSIFICATION	7.703009009400039E-4	DESIGN	2.1033530008470188E-4	DEFECT	9.781184993680096E-5	IMPLEMENTATION	1.7132716027203362E-6	TEST	1.2722434565296742E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999749562864138	WITHOUT_CLASSIFICATION	2.199004042297699E-5	DESIGN	1.403720582720602E-6	IMPLEMENTATION	9.373180960191642E-7	DEFECT	3.5754312977000857E-7	TEST	3.5509135471634193E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999723336623249	WITHOUT_CLASSIFICATION	2.1489898320247594E-4	IMPLEMENTATION	3.830164445898154E-5	DESIGN	2.090874995228727E-5	DEFECT	1.3010303295893614E-6	DOCUMENTATION	1.2529688076307106E-6	TEST
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// using local since the inheritedMetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.9999131967770495	WITHOUT_CLASSIFICATION	4.402984578308537E-5	DEFECT	2.5822034681941195E-5	DESIGN	1.0806629274379557E-5	IMPLEMENTATION	5.903379654876872E-6	TEST	2.413335562156453E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// if doc is null, then for whatever reason, the cached file cannot be used...	WITHOUT_CLASSIFICATION	0.9999965581542419	WITHOUT_CLASSIFICATION	1.2951241107498002E-6	DESIGN	1.1044174949929266E-6	DEFECT	6.937753510820845E-7	IMPLEMENTATION	2.5268885635636984E-7	TEST	9.583994487852644E-8	DOCUMENTATION
// drop them in reverse order in case db needs it done that way...	WITHOUT_CLASSIFICATION	0.9973319604872655	WITHOUT_CLASSIFICATION	0.0023533170916422083	DESIGN	3.005334528891308E-4	IMPLEMENTATION	8.432569581332635E-6	TEST	4.704388656770055E-6	DOCUMENTATION	1.0520099651510718E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// This method may be called many times!!	WITHOUT_CLASSIFICATION	0.9982108479215147	WITHOUT_CLASSIFICATION	0.0010858169546720002	IMPLEMENTATION	6.638511092871213E-4	DESIGN	2.728954680197332E-5	DEFECT	8.304126879743855E-6	DOCUMENTATION	3.890340844400797E-6	TEST
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// found	WITHOUT_CLASSIFICATION	0.9999944588410422	WITHOUT_CLASSIFICATION	1.6662676066120745E-6	DEFECT	1.3944381493181165E-6	IMPLEMENTATION	1.0199239506226251E-6	DESIGN	8.583199251840482E-7	DOCUMENTATION	6.022093260773382E-7	TEST
// found	WITHOUT_CLASSIFICATION	0.9999944588410422	WITHOUT_CLASSIFICATION	1.6662676066120745E-6	DEFECT	1.3944381493181165E-6	IMPLEMENTATION	1.0199239506226251E-6	DESIGN	8.583199251840482E-7	DOCUMENTATION	6.022093260773382E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
//<String, String>	WITHOUT_CLASSIFICATION	0.9999719693928509	WITHOUT_CLASSIFICATION	9.90911647322839E-6	DOCUMENTATION	6.9741852073533105E-6	DEFECT	4.997246917430981E-6	DESIGN	4.607573168973656E-6	TEST	1.5424853820451627E-6	IMPLEMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9999719693928509	WITHOUT_CLASSIFICATION	9.90911647322839E-6	DOCUMENTATION	6.9741852073533105E-6	DEFECT	4.997246917430981E-6	DESIGN	4.607573168973656E-6	TEST	1.5424853820451627E-6	IMPLEMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.999165586675242	WITHOUT_CLASSIFICATION	8.118127088929878E-4	DESIGN	1.4634015839227881E-5	DEFECT	4.59426004606399E-6	IMPLEMENTATION	2.240800789944702E-6	TEST	1.13153918975494E-6	DOCUMENTATION
//Set USE_REFLECTION_OPTIMIZER to false to fix HHH-227	WITHOUT_CLASSIFICATION	0.9998539564913245	WITHOUT_CLASSIFICATION	8.42950726957996E-5	DEFECT	5.186347300404943E-5	DESIGN	4.9949886312813085E-6	DOCUMENTATION	2.694882903411088E-6	IMPLEMENTATION	2.195091440881211E-6	TEST
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9879970383214947	WITHOUT_CLASSIFICATION	0.011469088542388149	DESIGN	4.121619319221121E-4	DEFECT	8.065660924482586E-5	TEST	2.8316446986412142E-5	IMPLEMENTATION	1.273814796376288E-5	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999527326914439	WITHOUT_CLASSIFICATION	3.840476616368603E-5	IMPLEMENTATION	3.6656846582432445E-6	DESIGN	2.638567549921303E-6	TEST	2.3055395588528964E-6	DEFECT	2.5275062531407053E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999177362184064	WITHOUT_CLASSIFICATION	3.190241607488986E-5	IMPLEMENTATION	2.2446530405780916E-5	DOCUMENTATION	1.8762483314001523E-5	DEFECT	7.877748418473452E-6	DESIGN	1.2746033804514758E-6	TEST
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9879970383214947	WITHOUT_CLASSIFICATION	0.011469088542388149	DESIGN	4.121619319221121E-4	DEFECT	8.065660924482586E-5	TEST	2.8316446986412142E-5	IMPLEMENTATION	1.273814796376288E-5	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999527326914439	WITHOUT_CLASSIFICATION	3.840476616368603E-5	IMPLEMENTATION	3.6656846582432445E-6	DESIGN	2.638567549921303E-6	TEST	2.3055395588528964E-6	DEFECT	2.5275062531407053E-7	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9990602382564185	WITHOUT_CLASSIFICATION	6.020573719585397E-4	DESIGN	2.7350881444437484E-4	IMPLEMENTATION	2.5523629320438693E-5	DEFECT	2.497040859406105E-5	TEST	1.3701519263957992E-5	DOCUMENTATION
//maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.9312157819472832	WITHOUT_CLASSIFICATION	0.06867526909835187	DESIGN	5.806919497631375E-5	TEST	4.406559259179512E-5	DEFECT	6.7433034782120865E-6	DOCUMENTATION	7.086331876206549E-8	IMPLEMENTATION
// the element has been removed from the set	WITHOUT_CLASSIFICATION	0.999993121299861	WITHOUT_CLASSIFICATION	3.6705676802724284E-6	IMPLEMENTATION	3.098221057501968E-6	DESIGN	6.971964172870014E-8	DEFECT	2.8686743034625074E-8	TEST	1.1505016594790502E-8	DOCUMENTATION
// the element has changed	WITHOUT_CLASSIFICATION	0.9999986744789526	WITHOUT_CLASSIFICATION	1.2600993473945836E-6	IMPLEMENTATION	3.273448752669543E-8	TEST	1.4650416060585913E-8	DESIGN	1.3059515068940721E-8	DOCUMENTATION	4.977281456278052E-9	DEFECT
//Careful: these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.9547080866456018	WITHOUT_CLASSIFICATION	0.044915347723352886	DESIGN	2.8611121093783786E-4	IMPLEMENTATION	5.759935520222667E-5	TEST	2.5116397568947552E-5	DEFECT	7.738667336294739E-6	DOCUMENTATION
//needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.5130187668396916	DESIGN	0.48316702912310416	WITHOUT_CLASSIFICATION	0.002025322168825115	TEST	0.0017083703630873027	IMPLEMENTATION	7.214664890745839E-5	DOCUMENTATION	8.364856384404983E-6	DEFECT
// override on some subclasses	WITHOUT_CLASSIFICATION	0.9999998331735612	WITHOUT_CLASSIFICATION	1.0663961217781402E-7	DESIGN	3.420497929445852E-8	DOCUMENTATION	1.4371555966586688E-8	TEST	6.571291180396173E-9	IMPLEMENTATION	5.0390001432450625E-9	DEFECT
//override on some subclasses	WITHOUT_CLASSIFICATION	0.9999981282501977	WITHOUT_CLASSIFICATION	1.3864248479536592E-6	DESIGN	2.919664505830203E-7	DOCUMENTATION	1.2702676525861902E-7	TEST	4.131441171937159E-8	DEFECT	2.5017326801585143E-8	IMPLEMENTATION
//do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.9999261726618164	WITHOUT_CLASSIFICATION	6.910560526623284E-5	DESIGN	2.092851935591936E-6	TEST	1.4156466067136315E-6	IMPLEMENTATION	7.999591327263019E-7	DOCUMENTATION	4.132752422609992E-7	DEFECT
// short-circuit(s) // no new elements, the old list contains only Orphans // no old elements, so no Orphans neither	WITHOUT_CLASSIFICATION	0.9999996906704369	WITHOUT_CLASSIFICATION	1.5644127915522596E-7	IMPLEMENTATION	8.342015291793097E-8	TEST	4.662393466974205E-8	DOCUMENTATION	2.163706162238467E-8	DESIGN	1.2071345529226321E-9	DEFECT
// create the collection holding the Orphans	WITHOUT_CLASSIFICATION	0.9999898985042115	WITHOUT_CLASSIFICATION	6.1472605424848025E-6	IMPLEMENTATION	1.9849302049873674E-6	DESIGN	1.5254142479357488E-6	TEST	3.415318449455161E-7	DEFECT	1.0235894820854942E-7	DOCUMENTATION
// collect EntityIdentifier(s) of the *current* elements - add them into a HashSet for fast access	WITHOUT_CLASSIFICATION	0.9999952499167103	WITHOUT_CLASSIFICATION	4.3430687413252505E-6	DESIGN	1.325452268490084E-7	TEST	1.1309707325670532E-7	DEFECT	8.068895407773631E-8	DOCUMENTATION	8.068329422491827E-8	IMPLEMENTATION
// iterate over the *old* list	WITHOUT_CLASSIFICATION	0.9999999241694282	WITHOUT_CLASSIFICATION	3.9980274246859315E-8	IMPLEMENTATION	2.1759900079497896E-8	TEST	9.347110326970635E-9	DESIGN	4.22328933466546E-9	DOCUMENTATION	5.199978208390839E-10	DEFECT
/*(array==null) ? tempList.size() :*/	WITHOUT_CLASSIFICATION	0.999905573610717	WITHOUT_CLASSIFICATION	4.829839967908836E-5	IMPLEMENTATION	2.0311539219263274E-5	DESIGN	1.7450524045878958E-5	TEST	4.8167000375038E-6	DEFECT	3.5492263012159484E-6	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999177362184064	WITHOUT_CLASSIFICATION	3.190241607488986E-5	IMPLEMENTATION	2.2446530405780916E-5	DOCUMENTATION	1.8762483314001523E-5	DEFECT	7.877748418473452E-6	DESIGN	1.2746033804514758E-6	TEST
/*(array==null) ? tempList.get(i) :*/	WITHOUT_CLASSIFICATION	0.9998308397542266	WITHOUT_CLASSIFICATION	6.209956497364984E-5	DESIGN	6.088671050620778E-5	IMPLEMENTATION	2.614602542047318E-5	TEST	1.5068816230009709E-5	DEFECT	4.959128643146085E-6	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999950518259668	WITHOUT_CLASSIFICATION	2.8474996759804555E-6	TEST	1.0308671441924488E-6	DOCUMENTATION	7.419263425187133E-7	DEFECT	2.738774306467339E-7	IMPLEMENTATION	5.4003439781474696E-8	DESIGN
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999950518259668	WITHOUT_CLASSIFICATION	2.8474996759804555E-6	TEST	1.0308671441924488E-6	DOCUMENTATION	7.419263425187133E-7	DEFECT	2.738774306467339E-7	IMPLEMENTATION	5.4003439781474696E-8	DESIGN
// amazingly, these two will work because AbstractCollection // uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.99997370773371	WITHOUT_CLASSIFICATION	1.2973444081600795E-5	IMPLEMENTATION	7.5486259655957675E-6	DEFECT	2.567647373863603E-6	DESIGN	2.0381704640509162E-6	TEST	1.1643784048700022E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9990602382564185	WITHOUT_CLASSIFICATION	6.020573719585397E-4	DESIGN	2.7350881444437484E-4	IMPLEMENTATION	2.5523629320438693E-5	DEFECT	2.497040859406105E-5	TEST	1.3701519263957992E-5	DOCUMENTATION
// finally, what it's all about...	WITHOUT_CLASSIFICATION	0.9998832969120387	WITHOUT_CLASSIFICATION	7.591681469472226E-5	IMPLEMENTATION	2.5302255629696826E-5	DEFECT	6.866476852009775E-6	TEST	4.837588689139963E-6	DESIGN	3.7799520956395922E-6	DOCUMENTATION
// note that if we load this collection from a cartesian product // the multiplicity would be broken ... so use an idbag instead	WITHOUT_CLASSIFICATION	0.9496243495525647	DESIGN	0.05032846045796504	WITHOUT_CLASSIFICATION	4.2013858538763213E-5	TEST	4.405385719283161E-6	IMPLEMENTATION	7.101596846756522E-7	DOCUMENTATION	6.058552753644542E-8	DEFECT
// Anyway, here we implement <set> semantics for a // <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.9837862481020397	WITHOUT_CLASSIFICATION	0.008248132152042955	DESIGN	0.007103780370358009	IMPLEMENTATION	8.435427147562081E-4	DEFECT	1.0538638413643E-5	DOCUMENTATION	7.758022389442997E-6	TEST
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999227932574701	WITHOUT_CLASSIFICATION	5.066658087739276E-5	DEFECT	2.0726917835169786E-5	DESIGN	5.044665402921779E-6	TEST	5.038145094752768E-7	DOCUMENTATION	2.647639048743493E-7	IMPLEMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.8037302815624342	WITHOUT_CLASSIFICATION	0.19203696790248784	DESIGN	0.004141707782425732	TEST	4.5196713235322994E-5	DEFECT	2.7765752820767418E-5	IMPLEMENTATION	1.8080286596241042E-5	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9990602382564185	WITHOUT_CLASSIFICATION	6.020573719585397E-4	DESIGN	2.7350881444437484E-4	IMPLEMENTATION	2.5523629320438693E-5	DEFECT	2.497040859406105E-5	TEST	1.3701519263957992E-5	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999227932574701	WITHOUT_CLASSIFICATION	5.066658087739276E-5	DEFECT	2.0726917835169786E-5	DESIGN	5.044665402921779E-6	TEST	5.038145094752768E-7	DOCUMENTATION	2.647639048743493E-7	IMPLEMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.8037302815624342	WITHOUT_CLASSIFICATION	0.19203696790248784	DESIGN	0.004141707782425732	TEST	4.5196713235322994E-5	DEFECT	2.7765752820767418E-5	IMPLEMENTATION	1.8080286596241042E-5	DOCUMENTATION
/*public boolean equals(Object other) {	WITHOUT_CLASSIFICATION	0.991637185148978	WITHOUT_CLASSIFICATION	0.006377463725982838	DESIGN	0.0015536582930073908	IMPLEMENTATION	1.731920473754999E-4	DOCUMENTATION	1.4933458398620417E-4	DEFECT	1.0916620067002463E-4	TEST
// List OPERATIONS:	WITHOUT_CLASSIFICATION	0.9999702735244266	WITHOUT_CLASSIFICATION	2.0256580034844435E-5	IMPLEMENTATION	4.308272358336268E-6	DEFECT	3.993845310013857E-6	TEST	9.126437871403083E-7	DOCUMENTATION	2.551340831400047E-7	DESIGN
//pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.9999965643026683	WITHOUT_CLASSIFICATION	1.107826384048587E-6	DESIGN	8.885472660417651E-7	DOCUMENTATION	7.5849548877533E-7	DEFECT	4.294924467230746E-7	IMPLEMENTATION	2.5133574614592985E-7	TEST
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9990602382564185	WITHOUT_CLASSIFICATION	6.020573719585397E-4	DESIGN	2.7350881444437484E-4	IMPLEMENTATION	2.5523629320438693E-5	DEFECT	2.497040859406105E-5	TEST	1.3701519263957992E-5	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9990602382564185	WITHOUT_CLASSIFICATION	6.020573719585397E-4	DESIGN	2.7350881444437484E-4	IMPLEMENTATION	2.5523629320438693E-5	DEFECT	2.497040859406105E-5	TEST	1.3701519263957992E-5	DOCUMENTATION
// from Map	WITHOUT_CLASSIFICATION	0.9999721153892915	WITHOUT_CLASSIFICATION	1.4619556257057125E-5	IMPLEMENTATION	6.908432218902415E-6	DESIGN	3.3178453600560452E-6	DEFECT	1.8703713553385005E-6	DOCUMENTATION	1.168405517078963E-6	TEST
// from SortedMap	WITHOUT_CLASSIFICATION	0.9999875808198926	WITHOUT_CLASSIFICATION	5.436610229228888E-6	IMPLEMENTATION	3.0689829911520174E-6	DEFECT	2.482642521738893E-6	DESIGN	8.477886902327915E-7	DOCUMENTATION	5.831556750439519E-7	TEST
//inject the data	WITHOUT_CLASSIFICATION	0.99980471986946	WITHOUT_CLASSIFICATION	1.7417255938365574E-4	IMPLEMENTATION	9.506129552211945E-6	DOCUMENTATION	5.958400990290757E-6	TEST	4.2622020784868506E-6	DEFECT	1.3808385352508684E-6	DESIGN
// cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999461665653873	WITHOUT_CLASSIFICATION	3.394059597261396E-5	IMPLEMENTATION	1.7446421099813716E-5	DESIGN	9.873586313914582E-7	DEFECT	8.140027980455394E-7	TEST	6.450561106929088E-7	DOCUMENTATION
//default pool size 20	WITHOUT_CLASSIFICATION	0.9999691003035827	WITHOUT_CLASSIFICATION	2.6987595944628377E-5	IMPLEMENTATION	1.726130122791472E-6	DOCUMENTATION	1.4879915716001756E-6	DEFECT	4.981704687987314E-7	TEST	1.9980830954067724E-7	DESIGN
// trying via forName() first to be as close to DriverManager's semantics	WITHOUT_CLASSIFICATION	0.9999153719459885	WITHOUT_CLASSIFICATION	8.349022137502991E-5	DESIGN	8.16986925717503E-7	DEFECT	2.0513402967557232E-7	TEST	7.185233615695918E-8	DOCUMENTATION	4.385934505114273E-8	IMPLEMENTATION
// if debug level is enabled, then log the password, otherwise mask it	WITHOUT_CLASSIFICATION	0.9999764171221894	WITHOUT_CLASSIFICATION	1.0639737277427214E-5	DEFECT	6.944234704345718E-6	IMPLEMENTATION	5.427465150343524E-6	DESIGN	4.543506005628724E-7	TEST	1.1709007799781872E-7	DOCUMENTATION
// register a cleanup synch	WITHOUT_CLASSIFICATION	0.9999968361312164	WITHOUT_CLASSIFICATION	1.5475937389240991E-6	DESIGN	1.0500134522931801E-6	IMPLEMENTATION	2.4646577911690966E-7	TEST	2.0098007907295102E-7	DOCUMENTATION	1.1881573419942499E-7	DEFECT
// wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.9999843185120988	WITHOUT_CLASSIFICATION	7.046746602548148E-6	IMPLEMENTATION	4.017419595493495E-6	DESIGN	2.6819618944977292E-6	DEFECT	1.3401393173963618E-6	DOCUMENTATION	5.952204911962793E-7	TEST
// then bind it	WITHOUT_CLASSIFICATION	0.9999379308498475	WITHOUT_CLASSIFICATION	4.3119502037140645E-5	IMPLEMENTATION	6.176846903025301E-6	DESIGN	5.940419246663393E-6	DOCUMENTATION	5.33452171736607E-6	TEST	1.4978602483228516E-6	DEFECT
// try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.9999124621604879	WITHOUT_CLASSIFICATION	3.600161561533693E-5	DESIGN	3.328907698536506E-5	DEFECT	9.074274777276004E-6	DOCUMENTATION	8.878993310844473E-6	IMPLEMENTATION	2.938788233534364E-7	TEST
// allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.9969505769555495	WITHOUT_CLASSIFICATION	0.002974872428551312	IMPLEMENTATION	4.2495806774300434E-5	DEFECT	2.1877129523392504E-5	DESIGN	6.406288363969277E-6	DOCUMENTATION	3.771391237524468E-6	TEST
// limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.9999455794186416	WITHOUT_CLASSIFICATION	5.346947016528846E-5	DESIGN	5.087238251470347E-7	TEST	3.17328747828524E-7	IMPLEMENTATION	1.096480784737262E-7	DOCUMENTATION	1.5410541640105926E-8	DEFECT
// allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.9968151150049742	WITHOUT_CLASSIFICATION	0.002713385685062037	DESIGN	4.223266344518165E-4	IMPLEMENTATION	3.0726719330238126E-5	DEFECT	9.295217200791386E-6	DOCUMENTATION	9.150738980935047E-6	TEST
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999979946503699	WITHOUT_CLASSIFICATION	8.575281631283497E-7	IMPLEMENTATION	4.842819581015615E-7	DEFECT	3.6900273303522995E-7	DESIGN	1.823312316785521E-7	DOCUMENTATION	1.122055441220312E-7	TEST
// We could register the session against the transaction even though it is // not started, but we'd have no guarentee of ever getting the map // entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.9955156666680924	WITHOUT_CLASSIFICATION	0.003580801941041537	DESIGN	8.487532509169434E-4	TEST	4.182915265080862E-5	DEFECT	1.205900288017858E-5	IMPLEMENTATION	8.899844181105001E-7	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9995430946677448	WITHOUT_CLASSIFICATION	2.3606382782786025E-4	DESIGN	1.9828850942548755E-4	IMPLEMENTATION	7.80821654206015E-6	TEST	7.77851711204622E-6	DOCUMENTATION	6.9662613477291075E-6	DEFECT
//private String propertyName;	WITHOUT_CLASSIFICATION	0.9999823174778968	WITHOUT_CLASSIFICATION	6.677362902961802E-6	DOCUMENTATION	6.382556162174648E-6	DESIGN	2.262175608429222E-6	DEFECT	1.990046941970779E-6	TEST	3.7038048773502637E-7	IMPLEMENTATION
/*public PropertyProjection project() {	WITHOUT_CLASSIFICATION	0.9872462692970678	WITHOUT_CLASSIFICATION	0.011961021807398766	DESIGN	4.0084774558748766E-4	IMPLEMENTATION	1.9896166164360278E-4	DOCUMENTATION	1.4479298787272677E-4	DEFECT	4.8106500429607926E-5	TEST
//String[] fk = StringHelper.qualify( "collection_", cp.getKeyColumnNames() );	WITHOUT_CLASSIFICATION	0.9997608129582203	WITHOUT_CLASSIFICATION	1.1317083964076486E-4	DESIGN	7.785223975230793E-5	DEFECT	3.0874907723637496E-5	IMPLEMENTATION	1.2671629000605742E-5	TEST	4.6174256625611595E-6	DOCUMENTATION
//" collection_ where " +	WITHOUT_CLASSIFICATION	0.9996524018708509	WITHOUT_CLASSIFICATION	2.196007852112617E-4	DESIGN	9.210517521493105E-5	IMPLEMENTATION	2.2430677834896123E-5	TEST	1.049725840801109E-5	DOCUMENTATION	2.964232480055119E-6	DEFECT
//unsupported	WITHOUT_CLASSIFICATION	0.9946367545618638	WITHOUT_CLASSIFICATION	0.004314985048288821	IMPLEMENTATION	4.317599766334656E-4	DESIGN	3.0637210950543197E-4	DEFECT	1.706852514194002E-4	TEST	1.3944305228902643E-4	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9946367545618638	WITHOUT_CLASSIFICATION	0.004314985048288821	IMPLEMENTATION	4.317599766334656E-4	DESIGN	3.0637210950543197E-4	DEFECT	1.706852514194002E-4	TEST	1.3944305228902643E-4	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9995430946677448	WITHOUT_CLASSIFICATION	2.3606382782786025E-4	DESIGN	1.9828850942548755E-4	IMPLEMENTATION	7.80821654206015E-6	TEST	7.77851711204622E-6	DOCUMENTATION	6.9662613477291075E-6	DEFECT
//the following two lines were added to ensure that this.params is not null, which //can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.9790384655597798	WITHOUT_CLASSIFICATION	0.011949277100557813	IMPLEMENTATION	0.008307637092227408	TEST	6.817533703997859E-4	DEFECT	1.355403746017597E-5	DOCUMENTATION	9.312839575075898E-6	DESIGN
//with two-deep subqueries, the same alias would get generated for //both using the old method (criteriaQuery.generateSQLAlias()), so //that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.9621867346207383	WITHOUT_CLASSIFICATION	0.037695339076468874	DESIGN	1.1671804750426722E-4	TEST	1.0679728827276353E-6	DEFECT	8.386121846767411E-8	DOCUMENTATION	5.642118727632662E-8	IMPLEMENTATION
//implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.7813232617002929	IMPLEMENTATION	0.16694879475265068	WITHOUT_CLASSIFICATION	0.047559602464863834	DESIGN	0.002093084335717477	DEFECT	0.0017483499349325547	TEST	3.2690681154250335E-4	DOCUMENTATION
//pull off the last ", "	WITHOUT_CLASSIFICATION	0.9999975756691961	WITHOUT_CLASSIFICATION	1.276892546402022E-6	IMPLEMENTATION	4.623887223489357E-7	TEST	3.627269086934132E-7	DOCUMENTATION	2.2858520714689742E-7	DEFECT	9.373741926975604E-8	DESIGN
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9998389032899753	WITHOUT_CLASSIFICATION	1.0051491945886861E-4	DEFECT	2.6586834437763738E-5	DESIGN	1.5785978968902514E-5	DOCUMENTATION	1.0936460307040209E-5	TEST	7.27251685226523E-6	IMPLEMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.999996532407953	WITHOUT_CLASSIFICATION	2.6422721503563168E-6	IMPLEMENTATION	5.424820906953762E-7	DOCUMENTATION	1.7034286768899169E-7	DEFECT	8.390455446271473E-8	TEST	2.8590383587525587E-8	DESIGN
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource)	WITHOUT_CLASSIFICATION	0.9994565372933879	WITHOUT_CLASSIFICATION	3.1434617401803155E-4	IMPLEMENTATION	1.4405382677789173E-4	DEFECT	6.690913948950367E-5	DESIGN	1.6610899786120078E-5	DOCUMENTATION	1.5426665405422652E-6	TEST
// NOT_SUPPORTED_SHOULD_USE_JDBC3_PreparedStatement.getGeneratedKeys_method	WITHOUT_CLASSIFICATION	0.9998802855151138	WITHOUT_CLASSIFICATION	8.590178718349874E-5	IMPLEMENTATION	2.8296462828337963E-5	DESIGN	3.558414332586509E-6	TEST	1.019207602658381E-6	DOCUMENTATION	9.386129392065909E-7	DEFECT
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.999929197619747	WITHOUT_CLASSIFICATION	7.028703527772952E-5	DESIGN	4.743643724397261E-7	DOCUMENTATION	2.4693230245917506E-8	DEFECT	1.287729122383144E-8	TEST	3.410081500803676E-9	IMPLEMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9989208354691033	WITHOUT_CLASSIFICATION	4.0227829694600603E-4	IMPLEMENTATION	3.8383365702024684E-4	DEFECT	1.7254191064133378E-4	DESIGN	1.1220715564582886E-4	DOCUMENTATION	8.303510643286175E-6	TEST
// Oracle did add support for ANSI CASE statements in 9i	WITHOUT_CLASSIFICATION	0.9999875843951556	WITHOUT_CLASSIFICATION	5.7577804594556865E-6	IMPLEMENTATION	4.853496091573988E-6	DESIGN	8.02870365885517E-7	DEFECT	6.796441822979698E-7	TEST	3.218137453022567E-7	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9996695297782434	WITHOUT_CLASSIFICATION	1.3922282218572393E-4	DESIGN	1.3395697987390485E-4	IMPLEMENTATION	4.291286651806957E-5	DEFECT	7.937351840928309E-6	DOCUMENTATION	6.440201337879227E-6	TEST
// Informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.9999728456977153	WITHOUT_CLASSIFICATION	1.8648251654080114E-5	DEFECT	3.1196755102143437E-6	DESIGN	2.5267414820649884E-6	IMPLEMENTATION	1.532433033290482E-6	DOCUMENTATION	1.327200605188257E-6	TEST
// or BYTE // or TEXT? // or MONEY	WITHOUT_CLASSIFICATION	0.9996816519454845	WITHOUT_CLASSIFICATION	1.3030889979799432E-4	IMPLEMENTATION	7.447519963528593E-5	DEFECT	7.033742632724414E-5	DESIGN	2.185389471386656E-5	TEST	2.1372634041020754E-5	DOCUMENTATION
// strip table-owner because Informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.9999996881078418	WITHOUT_CLASSIFICATION	1.789658771342783E-7	DESIGN	6.581713107719003E-8	IMPLEMENTATION	3.7665367723682704E-8	DEFECT	1.635668556047699E-8	DOCUMENTATION	1.3087096868132158E-8	TEST
// build the map of standard ANSI SQL aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99996667514057	WITHOUT_CLASSIFICATION	2.7778523242325448E-5	IMPLEMENTATION	3.632679274340839E-6	DEFECT	1.3290569455082262E-6	DESIGN	2.9330202689951426E-7	DOCUMENTATION	2.91297940764605E-7	TEST
//pre H3.2 behavior: super.getReturnType(ct, m);	WITHOUT_CLASSIFICATION	0.9998554153122886	WITHOUT_CLASSIFICATION	8.69758614774708E-5	DESIGN	5.0939929466980725E-5	DEFECT	5.118631499930192E-6	IMPLEMENTATION	8.762726314646874E-7	DOCUMENTATION	6.739926355389908E-7	TEST
// finally use the sqltype if == on Hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.9999938474308738	WITHOUT_CLASSIFICATION	5.338352000004905E-6	DESIGN	6.494792517874024E-7	DEFECT	1.1414604561198631E-7	IMPLEMENTATION	3.62501986868256E-8	DOCUMENTATION	1.434162998438564E-8	TEST
//because numeric can be anything	WITHOUT_CLASSIFICATION	0.9999551643687226	WITHOUT_CLASSIFICATION	1.5982387873385453E-5	DEFECT	1.2161672311501224E-5	DESIGN	8.63944481087938E-6	IMPLEMENTATION	6.492866091241982E-6	DOCUMENTATION	1.559260190392144E-6	TEST
// constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999823251559472	WITHOUT_CLASSIFICATION	1.640910709738952E-5	DESIGN	8.1102590803517E-7	IMPLEMENTATION	2.6731653419974865E-7	TEST	1.514986150718843E-7	DOCUMENTATION	3.5895897964406696E-8	DEFECT
// standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.9998631570035081	WITHOUT_CLASSIFICATION	7.806236622278516E-5	DEFECT	3.365774498970989E-5	DESIGN	2.3958897242245603E-5	IMPLEMENTATION	7.132650039957867E-7	TEST	4.5072303306459705E-7	DOCUMENTATION
//map second/minute/hour/day/month/year to ANSI extract(), override on subclasses	WITHOUT_CLASSIFICATION	0.9993073985476653	WITHOUT_CLASSIFICATION	5.42345300479776E-4	DESIGN	6.554611236736202E-5	DEFECT	5.4336573224071755E-5	IMPLEMENTATION	2.3094813046370666E-5	DOCUMENTATION	7.278653217234429E-6	TEST
// register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.98929943130598	WITHOUT_CLASSIFICATION	0.010689995322624676	DESIGN	8.1408143976893E-6	IMPLEMENTATION	1.2541939659178604E-6	DOCUMENTATION	9.217500304823117E-7	TEST	2.5661300120457916E-7	DEFECT
// database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994868769346876	WITHOUT_CLASSIFICATION	4.3723897141199517E-4	DESIGN	4.030993679528617E-5	DEFECT	2.465119187379727E-5	IMPLEMENTATION	7.375113803129079E-6	DOCUMENTATION	3.547851428316055E-6	TEST
// hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9977159718608553	WITHOUT_CLASSIFICATION	0.0020913896175952244	DESIGN	1.1393488162408507E-4	IMPLEMENTATION	4.303713809660117E-5	DEFECT	1.7903182492233793E-5	DOCUMENTATION	1.7763319336629523E-5	TEST
// keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993307214822811	WITHOUT_CLASSIFICATION	5.430162316053167E-4	IMPLEMENTATION	8.235755955298507E-5	DEFECT	2.323144478993823E-5	DESIGN	1.2779132985355286E-5	DOCUMENTATION	7.894148785444581E-6	TEST
// native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998968503444807	WITHOUT_CLASSIFICATION	9.04152766042255E-5	IMPLEMENTATION	5.598265825696726E-6	DESIGN	4.1630403662670075E-6	DEFECT	1.8346089791777378E-6	DOCUMENTATION	1.138463743856579E-6	TEST
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.997696020949286	WITHOUT_CLASSIFICATION	0.0020316697123239557	IMPLEMENTATION	1.3596304859032562E-4	DEFECT	9.512373994462428E-5	DESIGN	2.259389472244054E-5	TEST	1.8628655132688826E-5	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996287469973161	WITHOUT_CLASSIFICATION	1.6506904368824335E-4	IMPLEMENTATION	1.2221145666913642E-4	DEFECT	5.730610536988275E-5	DESIGN	1.4640987940503721E-5	TEST	1.2025409016222798E-5	DOCUMENTATION
// GUID support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9990217934151855	WITHOUT_CLASSIFICATION	6.726924421095148E-4	IMPLEMENTATION	1.3923808118049147E-4	DESIGN	1.3091047416039035E-4	DEFECT	2.0477456091835652E-5	DOCUMENTATION	1.4888131272219801E-5	TEST
// limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9991872945979384	WITHOUT_CLASSIFICATION	6.76639667331962E-4	IMPLEMENTATION	8.717503156258733E-5	DESIGN	3.823948791214675E-5	DEFECT	6.323116848259421E-6	TEST	4.328098406559889E-6	DOCUMENTATION
// by default we report no support	WITHOUT_CLASSIFICATION	0.9998697399740287	WITHOUT_CLASSIFICATION	7.619933560157854E-5	IMPLEMENTATION	3.516196241855143E-5	DEFECT	1.2521654716683836E-5	DESIGN	5.1879743571877095E-6	DOCUMENTATION	1.1890988773542923E-6	TEST
// by default we report no support for NOWAIT lock semantics	WITHOUT_CLASSIFICATION	0.9982125385038122	WITHOUT_CLASSIFICATION	0.0015137645142125112	DESIGN	1.973127377531792E-4	DEFECT	6.380361651669765E-5	IMPLEMENTATION	1.1206275609680566E-5	DOCUMENTATION	1.3743520957899134E-6	TEST
// table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999619635283329	WITHOUT_CLASSIFICATION	2.95969360147109E-5	IMPLEMENTATION	4.6291812098335156E-6	DESIGN	2.6583310163790484E-6	DEFECT	7.40925062169055E-7	TEST	4.1109836405447117E-7	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9978820889326401	WITHOUT_CLASSIFICATION	0.0020373720259264684	DESIGN	6.733705043280848E-5	IMPLEMENTATION	7.023834530922308E-6	TEST	3.954383204876399E-6	DEFECT	2.2237732647612435E-6	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998459185429811	WITHOUT_CLASSIFICATION	1.4439996204911E-4	IMPLEMENTATION	5.347662673306808E-6	DESIGN	3.067296426680168E-6	DEFECT	7.335458868311517E-7	DOCUMENTATION	5.329899829460385E-7	TEST
// current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9981337278643646	WITHOUT_CLASSIFICATION	0.001721909557516147	IMPLEMENTATION	4.290917024131431E-5	DOCUMENTATION	4.213022859480652E-5	TEST	3.8758347517526167E-5	DESIGN	2.0564831765534552E-5	DEFECT
// SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999873406918707	WITHOUT_CLASSIFICATION	6.989642103740997E-5	DEFECT	3.850116574357399E-5	DESIGN	7.706559919265237E-6	IMPLEMENTATION	6.0482586794990285E-6	TEST	4.440675913278475E-6	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998392256061303	WITHOUT_CLASSIFICATION	9.873148324155643E-5	DESIGN	4.532719915562545E-5	IMPLEMENTATION	1.0345792551988083E-5	DEFECT	3.8230176455750126E-6	TEST	2.5469012750538554E-6	DOCUMENTATION
// identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9981057696884433	WITHOUT_CLASSIFICATION	0.0014585231411017093	IMPLEMENTATION	3.5826673434764843E-4	DEFECT	5.070855571109814E-5	DESIGN	1.4799635313699616E-5	DOCUMENTATION	1.1932245082514488E-5	TEST
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9987217621131416	WITHOUT_CLASSIFICATION	0.0010193714963590043	IMPLEMENTATION	1.3254991624716989E-4	DEFECT	7.364500156407992E-5	DESIGN	2.749904660392318E-5	DOCUMENTATION	2.517242608401749E-5	TEST
// grrr... for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.9998027824996509	WITHOUT_CLASSIFICATION	1.2513910588507474E-4	IMPLEMENTATION	6.211869997356132E-5	DESIGN	5.035198140813687E-6	TEST	3.5481060162024965E-6	DEFECT	1.3763903333794062E-6	DOCUMENTATION
// Informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9990580146417569	WITHOUT_CLASSIFICATION	6.959304616725756E-4	IMPLEMENTATION	1.0680436812721189E-4	DEFECT	8.018531870743985E-5	DESIGN	5.552654638886206E-5	DOCUMENTATION	3.538663346998599E-6	TEST
// return false here, as most databases do not properly support this construct...	WITHOUT_CLASSIFICATION	0.9920805593655798	WITHOUT_CLASSIFICATION	0.007884300711347202	DESIGN	1.997898601029392E-5	IMPLEMENTATION	1.4329923516142704E-5	TEST	5.534956564683852E-7	DEFECT	2.775178900082283E-7	DOCUMENTATION
// Mckoi has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9995033091215167	WITHOUT_CLASSIFICATION	2.983514380452919E-4	DESIGN	1.232212995698376E-4	IMPLEMENTATION	4.841859063341821E-5	DEFECT	1.5683586676695277E-5	DOCUMENTATION	1.1015963557951829E-5	TEST
// Oracle8 and previous define only a "DATE" type which //      is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.9998255885635408	WITHOUT_CLASSIFICATION	1.6668126005454966E-4	DESIGN	5.9750633685116594E-6	DOCUMENTATION	9.2526920467488E-7	IMPLEMENTATION	5.685733389213185E-7	TEST	2.61270492645026E-7	DEFECT
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999869620211452	WITHOUT_CLASSIFICATION	5.030498267448669E-6	TEST	4.469198527611292E-6	DESIGN	2.1772838453352303E-6	IMPLEMENTATION	1.0879134869166785E-6	DOCUMENTATION	2.7308472748943724E-7	DEFECT
//" cascade";	WITHOUT_CLASSIFICATION	0.9999576794412713	WITHOUT_CLASSIFICATION	1.803262409364917E-5	DESIGN	1.605108937874589E-5	IMPLEMENTATION	4.220764683719542E-6	DOCUMENTATION	3.270048029987689E-6	TEST	7.460325425517607E-7	DEFECT
//trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.9999697439814602	WITHOUT_CLASSIFICATION	2.256431685750789E-5	DESIGN	4.406748824974254E-6	IMPLEMENTATION	1.4897658551432606E-6	DOCUMENTATION	9.840977863756969E-7	DEFECT	8.110892157789165E-7	TEST
/*public boolean dropTemporaryTableAfterUse() {	WITHOUT_CLASSIFICATION	0.6613636835171319	WITHOUT_CLASSIFICATION	0.3385329211207597	DESIGN	5.3347081157381314E-5	DEFECT	1.827077036505827E-5	DOCUMENTATION	1.6811108095896094E-5	TEST	1.496640249010257E-5	IMPLEMENTATION
// CHECK VIOLATION	WITHOUT_CLASSIFICATION	0.999982216223831	WITHOUT_CLASSIFICATION	6.4952971000649415E-6	IMPLEMENTATION	4.57930864975847E-6	DESIGN	2.6066620758867585E-6	DEFECT	2.1052763544860664E-6	TEST	1.9972319887073696E-6	DOCUMENTATION
// UNIQUE VIOLATION	WITHOUT_CLASSIFICATION	0.99993861743767	WITHOUT_CLASSIFICATION	4.180372909561869E-5	IMPLEMENTATION	8.653102656367693E-6	DEFECT	5.048077531844845E-6	DOCUMENTATION	3.0466283064657633E-6	TEST	2.8310247398127117E-6	DESIGN
// FOREIGN KEY VIOLATION	WITHOUT_CLASSIFICATION	0.9999818304749402	WITHOUT_CLASSIFICATION	1.1405843899718064E-5	IMPLEMENTATION	2.2370387796239267E-6	DEFECT	1.9506904512409504E-6	TEST	1.8927748218445056E-6	DOCUMENTATION	6.83177107351168E-7	DESIGN
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9989208354691033	WITHOUT_CLASSIFICATION	4.0227829694600603E-4	IMPLEMENTATION	3.8383365702024684E-4	DEFECT	1.7254191064133378E-4	DESIGN	1.1220715564582886E-4	DOCUMENTATION	8.303510643286175E-6	TEST
// NOT NULL VIOLATION	WITHOUT_CLASSIFICATION	0.9999917830387217	WITHOUT_CLASSIFICATION	3.7777452147272686E-6	IMPLEMENTATION	1.6635691492338381E-6	DEFECT	1.3831770628341724E-6	DOCUMENTATION	8.449748432779657E-7	TEST	5.474950081157317E-7	DESIGN
// ALL OTHER	WITHOUT_CLASSIFICATION	0.9999576080173135	WITHOUT_CLASSIFICATION	2.1321314578463764E-5	IMPLEMENTATION	9.096896133713405E-6	DEFECT	4.731293415556581E-6	DOCUMENTATION	3.6470753711982865E-6	DESIGN	3.595403187589082E-6	TEST
// Register the type of the out param - PostgreSQL uses Types.OTHER	WITHOUT_CLASSIFICATION	0.9994890669111688	WITHOUT_CLASSIFICATION	5.024446733209382E-4	DESIGN	4.4779154574489076E-6	TEST	3.138407515648255E-6	DEFECT	6.51760279878561E-7	DOCUMENTATION	2.2033225746050365E-7	IMPLEMENTATION
// seems to not really... //	WITHOUT_CLASSIFICATION	0.9999853871203143	WITHOUT_CLASSIFICATION	9.037935628933664E-6	DEFECT	3.3764616066327087E-6	IMPLEMENTATION	1.5607228718868052E-6	DESIGN	3.4174329128614183E-7	TEST	2.9601628680376624E-7	DOCUMENTATION
// seems to have spotty LOB suppport	WITHOUT_CLASSIFICATION	0.9987206370784014	WITHOUT_CLASSIFICATION	6.960292358761046E-4	DESIGN	3.5732360353346034E-4	DEFECT	2.0708773582661766E-4	IMPLEMENTATION	1.589264162721157E-5	DOCUMENTATION	3.0297047351692295E-6	TEST
// HHH-2300	WITHOUT_CLASSIFICATION	0.9999759277445133	WITHOUT_CLASSIFICATION	5.4612812179176514E-6	IMPLEMENTATION	5.048732718928034E-6	DOCUMENTATION	4.86938868254192E-6	DESIGN	4.548487718549134E-6	DEFECT	4.144365148782273E-6	TEST
// ignore (probably H2 not in the classpath)	WITHOUT_CLASSIFICATION	0.9999335292125315	WITHOUT_CLASSIFICATION	6.0890881754775967E-5	DEFECT	2.5883995903788584E-6	DESIGN	2.5397580461188822E-6	IMPLEMENTATION	3.6336328565476917E-7	DOCUMENTATION	8.838479168158856E-8	TEST
// Numeric Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999133849680332	WITHOUT_CLASSIFICATION	4.2628686489064615E-5	DESIGN	2.5117151712321593E-5	IMPLEMENTATION	8.955584392069843E-6	DOCUMENTATION	5.893083961816934E-6	DEFECT	4.020525411439132E-6	TEST
// String Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999642908190863	WITHOUT_CLASSIFICATION	1.3298467811880664E-5	DESIGN	8.147716277014101E-6	DEFECT	6.351660546793514E-6	IMPLEMENTATION	4.243836257006979E-6	DOCUMENTATION	3.667500020936626E-6	TEST
// Time and Date Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999381755168466	WITHOUT_CLASSIFICATION	3.0907595524867843E-5	IMPLEMENTATION	2.25194578337515E-5	DESIGN	5.834412251069162E-6	DOCUMENTATION	1.7738325712255174E-6	DEFECT	7.891849723519999E-7	TEST
// System Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998957245354333	WITHOUT_CLASSIFICATION	7.102399468015835E-5	IMPLEMENTATION	1.7708790189964087E-5	DESIGN	6.744272429675778E-6	DOCUMENTATION	5.715534808200988E-6	TEST	3.0828724586323114E-6	DEFECT
// not null is implicit	WITHOUT_CLASSIFICATION	0.9971702514438106	WITHOUT_CLASSIFICATION	0.002687848009696811	IMPLEMENTATION	7.852085446792426E-5	DESIGN	4.141321071034249E-5	DEFECT	1.120741683307746E-5	TEST	1.0759064481267227E-5	DOCUMENTATION
// 23000: Check constraint violation: {0} // 23001: Unique index or primary key violation: {0}	WITHOUT_CLASSIFICATION	0.9999830724516009	WITHOUT_CLASSIFICATION	1.0613660812776457E-5	DESIGN	2.5168166365292994E-6	IMPLEMENTATION	2.2642980206183316E-6	DEFECT	1.2115708672440027E-6	DOCUMENTATION	3.2120206199112215E-7	TEST
// Display the dialect version.	WITHOUT_CLASSIFICATION	0.916104945181194	WITHOUT_CLASSIFICATION	0.08385834830717216	IMPLEMENTATION	1.0937168333919455E-5	DOCUMENTATION	1.0807869760019508E-5	DEFECT	1.0771494519528675E-5	DESIGN	4.18997902028285E-6	TEST
// The RDMS concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9990269494731197	WITHOUT_CLASSIFICATION	3.538398367023985E-4	DEFECT	3.19998833658991E-4	DESIGN	2.8100212463954004E-4	IMPLEMENTATION	9.78496360062127E-6	TEST	8.424768278882425E-6	DOCUMENTATION
// Dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997318754184739	WITHOUT_CLASSIFICATION	1.6466073939351295E-4	DESIGN	8.524787760605851E-5	IMPLEMENTATION	1.4804815103154078E-5	TEST	1.8643226279530024E-6	DEFECT	1.5468267956113063E-6	DOCUMENTATION
// Original Dialect.java returns " for update";	WITHOUT_CLASSIFICATION	0.9999723885549284	WITHOUT_CLASSIFICATION	1.8547690541131347E-5	IMPLEMENTATION	7.86175815646662E-6	DESIGN	9.101763158683397E-7	DEFECT	1.4861743102470407E-7	TEST	1.432026270103092E-7	DOCUMENTATION
// Verify the state of this new method in Hibernate 3.0 Dialect.java	WITHOUT_CLASSIFICATION	0.9998631934486564	WITHOUT_CLASSIFICATION	1.32454203896844E-4	DESIGN	3.037004013340888E-6	TEST	1.030529262564217E-6	DOCUMENTATION	1.5284561092107104E-7	IMPLEMENTATION	1.3196855984031812E-7	DEFECT
// Origial Dialect.java returns true;	WITHOUT_CLASSIFICATION	0.9999123210082435	WITHOUT_CLASSIFICATION	5.355155855960932E-5	DESIGN	3.242470606325033E-5	IMPLEMENTATION	6.31855090630521E-7	DOCUMENTATION	5.771051112732545E-7	DEFECT	4.937669318485567E-7	TEST
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.999998478858572	WITHOUT_CLASSIFICATION	7.316436395282312E-7	DESIGN	4.6336427518537087E-7	DOCUMENTATION	2.9212731335589757E-7	IMPLEMENTATION	2.9553320080307756E-8	DEFECT	4.452879858993001E-9	TEST
// *** Sequence methods - start. The RDMS dialect needs these	WITHOUT_CLASSIFICATION	0.9994351832897571	WITHOUT_CLASSIFICATION	2.742550743422874E-4	DESIGN	2.658046525494683E-4	IMPLEMENTATION	1.5373783228306244E-5	DOCUMENTATION	7.618601447068544E-6	TEST	1.764598675802753E-6	DEFECT
// methods to make it possible to use the Native Id generator	WITHOUT_CLASSIFICATION	0.9996206645505756	WITHOUT_CLASSIFICATION	3.715502696075263E-4	IMPLEMENTATION	4.859998355784832E-6	DESIGN	2.1052996686086097E-6	DEFECT	4.186540905490191E-7	DOCUMENTATION	4.0122770183314026E-7	TEST
// The where clause was added to eliminate this statement from Brute Force Searches.	WITHOUT_CLASSIFICATION	0.9999485856215503	WITHOUT_CLASSIFICATION	4.73828871527833E-5	DESIGN	1.6240781733670638E-6	DOCUMENTATION	1.155246139062888E-6	TEST	1.1444255803423926E-6	IMPLEMENTATION	1.0774140425209627E-7	DEFECT
// *** Sequence methods - end	WITHOUT_CLASSIFICATION	0.9999116612564851	WITHOUT_CLASSIFICATION	4.353045282398687E-5	DESIGN	2.7256404653859413E-5	IMPLEMENTATION	1.44435242503935E-5	DOCUMENTATION	2.7977540165307125E-6	TEST	3.10607770070775E-7	DEFECT
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9989208354691033	WITHOUT_CLASSIFICATION	4.0227829694600603E-4	IMPLEMENTATION	3.8383365702024684E-4	DEFECT	1.7254191064133378E-4	DESIGN	1.1220715564582886E-4	DOCUMENTATION	8.303510643286175E-6	TEST
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999869620211452	WITHOUT_CLASSIFICATION	5.030498267448669E-6	TEST	4.469198527611292E-6	DESIGN	2.1772838453352303E-6	IMPLEMENTATION	1.0879134869166785E-6	DOCUMENTATION	2.7308472748943724E-7	DEFECT
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9938379906348643	WITHOUT_CLASSIFICATION	0.006103928740073752	DESIGN	5.3260551094577106E-5	DEFECT	2.5605089780292943E-6	TEST	1.210671738698888E-6	DOCUMENTATION	1.0488932506943547E-6	IMPLEMENTATION
// Used with DROP TABLE to delete all records in the table.	WITHOUT_CLASSIFICATION	0.999995575559066	WITHOUT_CLASSIFICATION	2.231463562644642E-6	IMPLEMENTATION	1.5887341112505577E-6	DESIGN	4.886491050487309E-7	DEFECT	6.5512231656457E-8	DOCUMENTATION	5.0081923424585055E-8	TEST
// RDMS supports the UNION ALL clause.	WITHOUT_CLASSIFICATION	0.99998039577399	WITHOUT_CLASSIFICATION	1.4906607300424851E-5	IMPLEMENTATION	2.5614961414696686E-6	DEFECT	1.5495021423452043E-6	DESIGN	3.7582225011040285E-7	DOCUMENTATION	2.1079817558561598E-7	TEST
// RDMS has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9990573612408427	WITHOUT_CLASSIFICATION	3.744327592258546E-4	DESIGN	3.5904560554643955E-4	IMPLEMENTATION	1.6534245382255234E-4	DEFECT	2.481788107415464E-5	DOCUMENTATION	1.90000594884197E-5	TEST
// Multi-param dialect functions...	WITHOUT_CLASSIFICATION	0.9999919056706813	WITHOUT_CLASSIFICATION	5.2149802629046285E-6	IMPLEMENTATION	2.296554371815398E-6	DESIGN	2.644362563301745E-7	DEFECT	1.8556826104364782E-7	DOCUMENTATION	1.3279016649195166E-7	TEST
// function templates	WITHOUT_CLASSIFICATION	0.9999752395296453	WITHOUT_CLASSIFICATION	1.6852737886832234E-5	IMPLEMENTATION	4.088667302894938E-6	DESIGN	2.128350873466182E-6	TEST	9.738218182840998E-7	DOCUMENTATION	7.16892473222639E-7	DEFECT
//not null is implicit	WITHOUT_CLASSIFICATION	0.9996689948114026	WITHOUT_CLASSIFICATION	2.0380460727733161E-4	IMPLEMENTATION	6.241473501312853E-5	DESIGN	4.079477523164789E-5	DEFECT	1.2190853887603125E-5	DOCUMENTATION	1.1800217187685903E-5	TEST
// this assumes schema support, which is present in 1.8.0 and later...	WITHOUT_CLASSIFICATION	0.9895957148359572	WITHOUT_CLASSIFICATION	0.009937199804597011	DESIGN	1.6014733106108634E-4	DEFECT	1.3307998395398202E-4	DOCUMENTATION	1.2821483553515203E-4	TEST	4.564320889551737E-5	IMPLEMENTATION
// HSQLDB only supports READ_UNCOMMITTED transaction isolation	WITHOUT_CLASSIFICATION	0.9998240952776927	WITHOUT_CLASSIFICATION	1.0430964737905757E-4	DESIGN	5.377051450991094E-5	DEFECT	6.6847841723530295E-6	IMPLEMENTATION	5.76171350187775E-6	DOCUMENTATION	5.3780627440020724E-6	TEST
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.999998340710093	WITHOUT_CLASSIFICATION	7.915897999001046E-7	IMPLEMENTATION	5.254562907118059E-7	DESIGN	1.4699156110123224E-7	TEST	1.030463809419723E-7	DEFECT	9.220587436442049E-8	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999797053600951	WITHOUT_CLASSIFICATION	1.5998472698867108E-5	DESIGN	2.4514082108456314E-6	IMPLEMENTATION	8.178847654558548E-7	DEFECT	7.469014243454613E-7	DOCUMENTATION	2.7997280539476595E-7	TEST
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999963766302516	WITHOUT_CLASSIFICATION	2.0970307653317016E-6	DESIGN	1.1412017179444614E-6	IMPLEMENTATION	2.06093606951215E-7	DEFECT	1.0438283787597406E-7	DOCUMENTATION	7.466082029709083E-8	TEST
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999979306083367	WITHOUT_CLASSIFICATION	1.6924630013666967E-6	IMPLEMENTATION	1.8879580166359013E-7	DESIGN	1.2469196846400817E-7	DOCUMENTATION	5.596928491961762E-8	TEST	7.471606789164438E-9	DEFECT
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9989208354691033	WITHOUT_CLASSIFICATION	4.0227829694600603E-4	IMPLEMENTATION	3.8383365702024684E-4	DEFECT	1.7254191064133378E-4	DESIGN	1.1220715564582886E-4	DOCUMENTATION	8.303510643286175E-6	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9989208354691033	WITHOUT_CLASSIFICATION	4.0227829694600603E-4	IMPLEMENTATION	3.8383365702024684E-4	DEFECT	1.7254191064133378E-4	DESIGN	1.1220715564582886E-4	DOCUMENTATION	8.303510643286175E-6	TEST
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9997587050740274	WITHOUT_CLASSIFICATION	1.5713516961348404E-4	DESIGN	5.735590909234509E-5	DEFECT	2.516988966551984E-5	IMPLEMENTATION	8.386878353565307E-7	TEST	7.952697658618274E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// TimesTen has no BLOB/CLOB support, but these types may be suitable  // for some applications. The length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.9998886328109264	WITHOUT_CLASSIFICATION	9.871620124589788E-5	IMPLEMENTATION	6.3368373245406835E-6	TEST	3.862510712436876E-6	DESIGN	1.6654242613274996E-6	DOCUMENTATION	7.862155294943189E-7	DEFECT
// new methods in dialect3	WITHOUT_CLASSIFICATION	0.9998712161310033	WITHOUT_CLASSIFICATION	1.1535845381478248E-4	DESIGN	8.401430802562597E-6	IMPLEMENTATION	2.384675397088022E-6	DOCUMENTATION	2.22570229857958E-6	TEST	4.136066836475024E-7	DEFECT
/*public boolean supportsForUpdateNowait() {	WITHOUT_CLASSIFICATION	0.9991284527853111	WITHOUT_CLASSIFICATION	6.751101235539248E-4	DESIGN	1.2483156911752757E-4	DEFECT	4.1754733799850155E-5	IMPLEMENTATION	1.8927300410917374E-5	TEST	1.0923487806596754E-5	DOCUMENTATION
// TimesTen has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9976993516826009	WITHOUT_CLASSIFICATION	0.0018026010186316564	IMPLEMENTATION	3.2713058096690427E-4	DESIGN	6.543325190770233E-5	DEFECT	5.3016891188933544E-5	DOCUMENTATION	5.2466574703940337E-5	TEST
// iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.9999512257388687	WITHOUT_CLASSIFICATION	2.8133326042598708E-5	DESIGN	1.3799840970530003E-5	IMPLEMENTATION	3.1598497082862443E-6	DEFECT	3.071505332752839E-6	TEST	6.097390771807464E-7	DOCUMENTATION
// add new ordered map	WITHOUT_CLASSIFICATION	0.9999552630609013	WITHOUT_CLASSIFICATION	3.9054721220930575E-5	IMPLEMENTATION	1.902414803358126E-6	DESIGN	1.5217774061992433E-6	DOCUMENTATION	1.300156236373832E-6	DEFECT	9.578694318122173E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9989208354691033	WITHOUT_CLASSIFICATION	4.0227829694600603E-4	IMPLEMENTATION	3.8383365702024684E-4	DEFECT	1.7254191064133378E-4	DESIGN	1.1220715564582886E-4	DOCUMENTATION	8.303510643286175E-6	TEST
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999084320918797	WITHOUT_CLASSIFICATION	8.815390166560087E-5	IMPLEMENTATION	2.1591339559558054E-6	DEFECT	1.1117711394982226E-6	DESIGN	7.670909117463187E-8	TEST	6.639226826129948E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
//registerColumnType data types	WITHOUT_CLASSIFICATION	0.9891704941398985	WITHOUT_CLASSIFICATION	0.01074639907171319	DESIGN	2.6485622209141487E-5	IMPLEMENTATION	2.3208203547758925E-5	DEFECT	2.082906722509899E-5	TEST	1.2583895406251653E-5	DOCUMENTATION
// hibernate seems to ignore this type...	WITHOUT_CLASSIFICATION	0.9999265606296704	WITHOUT_CLASSIFICATION	6.184608165876032E-5	DESIGN	7.600914186546566E-6	IMPLEMENTATION	2.2832690243355264E-6	DOCUMENTATION	1.2889807112384538E-6	TEST	4.20124748746101E-7	DEFECT
// IBID for current_time and current_date	WITHOUT_CLASSIFICATION	0.9998129218112705	WITHOUT_CLASSIFICATION	1.740180012284356E-4	IMPLEMENTATION	8.400427045998662E-6	DESIGN	2.803295056072799E-6	DOCUMENTATION	1.5347529750815412E-6	DEFECT	3.2171242382154185E-7	TEST
// Tell hibernate to use getBytes instead of getBinaryStream	WITHOUT_CLASSIFICATION	0.9973875199969733	WITHOUT_CLASSIFICATION	0.0025765360847051894	DESIGN	1.7852731550155578E-5	IMPLEMENTATION	9.083013692719955E-6	TEST	4.820274662562297E-6	DOCUMENTATION	4.187898416115727E-6	DEFECT
// No batch statements	WITHOUT_CLASSIFICATION	0.9999996041184018	WITHOUT_CLASSIFICATION	2.1305860627786572E-7	IMPLEMENTATION	1.32080341133415E-7	DOCUMENTATION	3.697087911336363E-8	TEST	1.2490848776242702E-8	DEFECT	1.28092294354997E-9	DESIGN
/*	WITHOUT_CLASSIFICATION	0.9964592541565794	WITHOUT_CLASSIFICATION	0.002407996684032343	DESIGN	3.387002723142719E-4	TEST	3.3739715340885986E-4	DOCUMENTATION	2.60962562549357E-4	DEFECT	1.9568917111566136E-4	IMPLEMENTATION
//no pointbase BIT	WITHOUT_CLASSIFICATION	0.9999852238292336	WITHOUT_CLASSIFICATION	6.874403745693594E-6	IMPLEMENTATION	5.623619575114037E-6	DOCUMENTATION	1.1070010860338964E-6	DEFECT	7.865112837899217E-7	DESIGN	3.84635075622813E-7	TEST
//no pointbase TINYINT	WITHOUT_CLASSIFICATION	0.999995715366677	WITHOUT_CLASSIFICATION	2.1805736576782603E-6	DOCUMENTATION	1.4402861910535668E-6	IMPLEMENTATION	4.228225329798133E-7	DEFECT	1.5370282281669599E-7	TEST	8.724811854092123E-8	DESIGN
// Pointbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9997881986324683	WITHOUT_CLASSIFICATION	9.371251881598376E-5	IMPLEMENTATION	8.47455916418324E-5	DESIGN	1.8112055518277477E-5	DEFECT	1.0981193805572838E-5	DOCUMENTATION	4.250007750057393E-6	TEST
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999869620211452	WITHOUT_CLASSIFICATION	5.030498267448669E-6	TEST	4.469198527611292E-6	DESIGN	2.1772838453352303E-6	IMPLEMENTATION	1.0879134869166785E-6	DOCUMENTATION	2.7308472748943724E-7	DEFECT
// The current_timestamp is more accurate, but only known to be supported // in SQL Server 7.0 and later (i.e., Sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.9944090661130401	WITHOUT_CLASSIFICATION	0.005293141517078914	DEFECT	1.498139277731363E-4	IMPLEMENTATION	1.2142539982521746E-4	DESIGN	1.3490299464915266E-5	DOCUMENTATION	1.3062742817731336E-5	TEST
// SQL Server (at least up through 2005) does not support defining // cascade delete constraints which can circel back to the mutating // table	WITHOUT_CLASSIFICATION	0.9999744581378388	WITHOUT_CLASSIFICATION	2.1923337291288957E-5	DEFECT	2.5310379730885674E-6	TEST	8.895776016246969E-7	DESIGN	1.7172419490760657E-7	DOCUMENTATION	2.6185100307054583E-8	IMPLEMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9983802268263569	WITHOUT_CLASSIFICATION	0.0013845815636841575	DEFECT	1.9621564292682795E-4	TEST	2.88207525026147E-5	DESIGN	9.453861857354528E-6	DOCUMENTATION	7.01352672210529E-7	IMPLEMENTATION
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999869620211452	WITHOUT_CLASSIFICATION	5.030498267448669E-6	TEST	4.469198527611292E-6	DESIGN	2.1772838453352303E-6	IMPLEMENTATION	1.0879134869166785E-6	DOCUMENTATION	2.7308472748943724E-7	DEFECT
/* package-private */	WITHOUT_CLASSIFICATION	0.9999990401779224	WITHOUT_CLASSIFICATION	4.930221328672678E-7	DESIGN	2.795986189906485E-7	DOCUMENTATION	7.973009427833126E-8	DEFECT	7.810236048324232E-8	TEST	2.9368870972588087E-8	IMPLEMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999084320918797	WITHOUT_CLASSIFICATION	8.815390166560087E-5	IMPLEMENTATION	2.1591339559558054E-6	DEFECT	1.1117711394982226E-6	DESIGN	7.670909117463187E-8	TEST	6.639226826129948E-8	DOCUMENTATION
//Sybase BIT type does not support null values	WITHOUT_CLASSIFICATION	0.9947042338731024	WITHOUT_CLASSIFICATION	0.0026065203441038433	DESIGN	0.0024217960446301064	DEFECT	2.0410512917495686E-4	IMPLEMENTATION	3.2161833051268395E-5	TEST	3.11827759373695E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9989208354691033	WITHOUT_CLASSIFICATION	4.0227829694600603E-4	IMPLEMENTATION	3.8383365702024684E-4	DEFECT	1.7254191064133378E-4	DESIGN	1.1220715564582886E-4	DOCUMENTATION	8.303510643286175E-6	TEST
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
//not null ... (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.9978619776888199	WITHOUT_CLASSIFICATION	0.0010241742444022216	IMPLEMENTATION	6.164438157736045E-4	DESIGN	2.609221179611596E-4	DEFECT	2.087355608992705E-4	TEST	2.774657214392194E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9989208354691033	WITHOUT_CLASSIFICATION	4.0227829694600603E-4	IMPLEMENTATION	3.8383365702024684E-4	DEFECT	1.7254191064133378E-4	DESIGN	1.1220715564582886E-4	DOCUMENTATION	8.303510643286175E-6	TEST
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.6858406126070007	WITHOUT_CLASSIFICATION	0.2937867643909126	DESIGN	0.017447382284562593	DEFECT	0.0018576171215238008	TEST	0.0010640949991105437	IMPLEMENTATION	3.5285968897042795E-6	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.999998340710093	WITHOUT_CLASSIFICATION	7.915897999001046E-7	IMPLEMENTATION	5.254562907118059E-7	DESIGN	1.4699156110123224E-7	TEST	1.030463809419723E-7	DEFECT	9.220587436442049E-8	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999797053600951	WITHOUT_CLASSIFICATION	1.5998472698867108E-5	DESIGN	2.4514082108456314E-6	IMPLEMENTATION	8.178847654558548E-7	DEFECT	7.469014243454613E-7	DOCUMENTATION	2.7997280539476595E-7	TEST
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999963766302516	WITHOUT_CLASSIFICATION	2.0970307653317016E-6	DESIGN	1.1412017179444614E-6	IMPLEMENTATION	2.06093606951215E-7	DEFECT	1.0438283787597406E-7	DOCUMENTATION	7.466082029709083E-8	TEST
// add another (inner) nested select // add the main query // close off the inner nested select	WITHOUT_CLASSIFICATION	0.999999918544552	WITHOUT_CLASSIFICATION	5.160016831882229E-8	TEST	1.0846104965319517E-8	DOCUMENTATION	8.827332620016122E-9	DESIGN	6.902007307408182E-9	DEFECT	3.2798348153158675E-9	IMPLEMENTATION
// add the main query	WITHOUT_CLASSIFICATION	0.9999970569539585	WITHOUT_CLASSIFICATION	1.606664394267375E-6	IMPLEMENTATION	8.575676986480653E-7	DOCUMENTATION	2.5735614265513377E-7	DESIGN	1.6430285672657085E-7	TEST	5.7154949320804476E-8	DEFECT
//add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.9999980076482369	WITHOUT_CLASSIFICATION	7.90335341408323E-7	DESIGN	6.768590327772227E-7	TEST	2.5965988437223587E-7	DOCUMENTATION	1.4137292594552445E-7	IMPLEMENTATION	1.241245786545259E-7	DEFECT
// This assumes you will want to ignore any update counts 	WITHOUT_CLASSIFICATION	0.9999835738269127	WITHOUT_CLASSIFICATION	1.5858678973554348E-5	DEFECT	2.0148231553229462E-7	TEST	1.5180910279520838E-7	IMPLEMENTATION	1.2207664680362354E-7	DESIGN	9.212604875072722E-8	DOCUMENTATION
// You may still have other ResultSets or update counts left to process here  // but you can't do it now or the ResultSet you just got will be closed 	WITHOUT_CLASSIFICATION	0.9999903777452425	WITHOUT_CLASSIFICATION	6.950278195796447E-6	DEFECT	1.6926618153342042E-6	DESIGN	8.662481849595698E-7	IMPLEMENTATION	1.0856003885446726E-7	TEST	4.506522633165962E-9	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9989208354691033	WITHOUT_CLASSIFICATION	4.0227829694600603E-4	IMPLEMENTATION	3.8383365702024684E-4	DEFECT	1.7254191064133378E-4	DESIGN	1.1220715564582886E-4	DOCUMENTATION	8.303510643286175E-6	TEST
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999869620211452	WITHOUT_CLASSIFICATION	5.030498267448669E-6	TEST	4.469198527611292E-6	DESIGN	2.1772838453352303E-6	IMPLEMENTATION	1.0879134869166785E-6	DOCUMENTATION	2.7308472748943724E-7	DEFECT
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999979306083367	WITHOUT_CLASSIFICATION	1.6924630013666967E-6	IMPLEMENTATION	1.8879580166359013E-7	DESIGN	1.2469196846400817E-7	DOCUMENTATION	5.596928491961762E-8	TEST	7.471606789164438E-9	DEFECT
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9997587050740274	WITHOUT_CLASSIFICATION	1.5713516961348404E-4	DESIGN	5.735590909234509E-5	DEFECT	2.516988966551984E-5	IMPLEMENTATION	8.386878353565307E-7	TEST	7.952697658618274E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// features which change between 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999876762402167	WITHOUT_CLASSIFICATION	9.648086220983303E-6	DESIGN	1.0355631603658423E-6	IMPLEMENTATION	9.591276667666887E-7	DEFECT	4.5938150256203714E-7	TEST	2.2160123264691593E-7	DOCUMENTATION
// features which remain constant across 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999915372915943	WITHOUT_CLASSIFICATION	6.4351617501198105E-6	DESIGN	1.0971834274226116E-6	DEFECT	4.1858145372217437E-7	TEST	3.091270980373091E-7	DOCUMENTATION	2.0265467647420502E-7	IMPLEMENTATION
// binary %Stream // character %Stream	WITHOUT_CLASSIFICATION	0.9999968658661913	WITHOUT_CLASSIFICATION	1.1307874041442134E-6	DESIGN	6.30493040443164E-7	TEST	5.867382118517181E-7	IMPLEMENTATION	4.561578048894972E-7	DEFECT	3.2995734728228573E-7	DOCUMENTATION
//getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE, NO_BATCH);	WITHOUT_CLASSIFICATION	0.9999931572642663	WITHOUT_CLASSIFICATION	4.654481865103495E-6	DEFECT	8.264933526784955E-7	IMPLEMENTATION	7.513448243623246E-7	DOCUMENTATION	4.2463633603991417E-7	TEST	1.8577935557913117E-7	DESIGN
// hibernate impelemnts cast in Dialect.java	WITHOUT_CLASSIFICATION	0.9999809096876812	WITHOUT_CLASSIFICATION	1.7545861174070808E-5	DESIGN	6.340886084730547E-7	TEST	5.272821587179903E-7	DEFECT	2.766416246528366E-7	IMPLEMENTATION	1.064387529969747E-7	DOCUMENTATION
// aggregate functions shouldn't be registered, right? //registerFunction( "list", new StandardSQLFunction("list",Hibernate.STRING) ); // stopped on $list	WITHOUT_CLASSIFICATION	0.9998340424036767	WITHOUT_CLASSIFICATION	1.597673406574502E-4	DESIGN	3.2061816625722166E-6	DEFECT	2.659588897928573E-6	IMPLEMENTATION	3.1226084968396764E-7	TEST	1.2224255679079535E-8	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9987217621131416	WITHOUT_CLASSIFICATION	0.0010193714963590043	IMPLEMENTATION	1.3254991624716989E-4	DEFECT	7.364500156407992E-5	DESIGN	2.749904660392318E-5	DOCUMENTATION	2.517242608401749E-5	TEST
// below is for Cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.9985396504159105	WITHOUT_CLASSIFICATION	0.0014471022800722007	DESIGN	9.979813704285511E-6	DEFECT	2.06205431303523E-6	TEST	1.1208915564311912E-6	IMPLEMENTATION	8.454444341620717E-8	DOCUMENTATION
// note that %string is deprecated	WITHOUT_CLASSIFICATION	0.9962485315081063	WITHOUT_CLASSIFICATION	0.0023023048908715864	DESIGN	9.177143768508575E-4	IMPLEMENTATION	4.8299775800487776E-4	TEST	2.8443984577507494E-5	DEFECT	2.0007481588863155E-5	DOCUMENTATION
// %upper is deprecated	WITHOUT_CLASSIFICATION	0.999969535614497	WITHOUT_CLASSIFICATION	1.5196872388731033E-5	DESIGN	9.229028878151177E-6	IMPLEMENTATION	2.8756612994468795E-6	DEFECT	2.429877115141717E-6	TEST	7.329458215533346E-7	DOCUMENTATION
// The syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.9999998857699008	WITHOUT_CLASSIFICATION	3.623687874447263E-8	IMPLEMENTATION	3.0939753312466783E-8	DESIGN	2.731779461858904E-8	DOCUMENTATION	1.4457885757497218E-8	DEFECT	5.277786489970205E-9	TEST
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999995865904725	WITHOUT_CLASSIFICATION	1.7740857545980714E-7	IMPLEMENTATION	8.1961220577017E-8	DOCUMENTATION	8.1694749891264E-8	DEFECT	5.6205715882957275E-8	DESIGN	1.6139265713733352E-8	TEST
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.997696020949286	WITHOUT_CLASSIFICATION	0.0020316697123239557	IMPLEMENTATION	1.3596304859032562E-4	DEFECT	9.512373994462428E-5	DESIGN	2.259389472244054E-5	TEST	1.8628655132688826E-5	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996287469973161	WITHOUT_CLASSIFICATION	1.6506904368824335E-4	IMPLEMENTATION	1.2221145666913642E-4	DEFECT	5.730610536988275E-5	DESIGN	1.4640987940503721E-5	TEST	1.2025409016222798E-5	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9978820889326401	WITHOUT_CLASSIFICATION	0.0020373720259264684	DESIGN	6.733705043280848E-5	IMPLEMENTATION	7.023834530922308E-6	TEST	3.954383204876399E-6	DEFECT	2.2237732647612435E-6	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999995865904725	WITHOUT_CLASSIFICATION	1.7740857545980714E-7	IMPLEMENTATION	8.1961220577017E-8	DOCUMENTATION	8.1694749891264E-8	DEFECT	5.6205715882957275E-8	DESIGN	1.6139265713733352E-8	TEST
// The syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.9999914025947695	WITHOUT_CLASSIFICATION	3.5006993843306754E-6	DESIGN	2.476080977037976E-6	DEFECT	1.3007691025769203E-6	DOCUMENTATION	1.1982395850243716E-6	IMPLEMENTATION	1.2161618150029227E-7	TEST
// Completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.999994036875194	WITHOUT_CLASSIFICATION	3.0240901886809166E-6	DESIGN	2.075109281206672E-6	IMPLEMENTATION	5.950427433523562E-7	DEFECT	1.967736559570029E-7	DOCUMENTATION	7.2108936903626E-8	TEST
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9952931132746901	WITHOUT_CLASSIFICATION	0.0030650213301688907	DESIGN	0.001100723677718982	IMPLEMENTATION	4.462143958494929E-4	DEFECT	5.915270967181925E-5	DOCUMENTATION	3.577461190075047E-5	TEST
// LIMIT support (ala TOP) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9986207424196153	WITHOUT_CLASSIFICATION	7.449459544012193E-4	IMPLEMENTATION	3.1175119490504835E-4	DEFECT	2.971099653114662E-4	DESIGN	1.548532972450621E-5	DOCUMENTATION	9.96513604241788E-6	TEST
// InterSystems Cache' does not current support "SELECT ... FOR UPDATE" syntax... // Set your transaction mode to READ_COMMITTED before using	WITHOUT_CLASSIFICATION	0.9463754031321154	WITHOUT_CLASSIFICATION	0.03580326639774387	DESIGN	0.01743445117635413	DEFECT	1.9867312399129777E-4	TEST	1.7111668475723585E-4	IMPLEMENTATION	1.7089485037878394E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9989208354691033	WITHOUT_CLASSIFICATION	4.0227829694600603E-4	IMPLEMENTATION	3.8383365702024684E-4	DEFECT	1.7254191064133378E-4	DESIGN	1.1220715564582886E-4	DOCUMENTATION	8.303510643286175E-6	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9989208354691033	WITHOUT_CLASSIFICATION	4.0227829694600603E-4	IMPLEMENTATION	3.8383365702024684E-4	DEFECT	1.7254191064133378E-4	DESIGN	1.1220715564582886E-4	DOCUMENTATION	8.303510643286175E-6	TEST
/*<String>*/	WITHOUT_CLASSIFICATION	0.9995550387429538	WITHOUT_CLASSIFICATION	1.3914993386152853E-4	DESIGN	1.0590640965400318E-4	DOCUMENTATION	9.736295972800126E-5	DEFECT	6.822020231892806E-5	TEST	3.432175148382889E-5	IMPLEMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998459185429811	WITHOUT_CLASSIFICATION	1.4439996204911E-4	IMPLEMENTATION	5.347662673306808E-6	DESIGN	3.067296426680168E-6	DEFECT	7.335458868311517E-7	DOCUMENTATION	5.329899829460385E-7	TEST
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998392256061303	WITHOUT_CLASSIFICATION	9.873148324155643E-5	DESIGN	4.532719915562545E-5	IMPLEMENTATION	1.0345792551988083E-5	DEFECT	3.8230176455750126E-6	TEST	2.5469012750538554E-6	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.999998478858572	WITHOUT_CLASSIFICATION	7.316436395282312E-7	DESIGN	4.6336427518537087E-7	DOCUMENTATION	2.9212731335589757E-7	IMPLEMENTATION	2.9553320080307756E-8	DEFECT	4.452879858993001E-9	TEST
// Does the LIMIT clause come at the start of the SELECT statement, rather than at the end?	WITHOUT_CLASSIFICATION	0.9999964056766213	WITHOUT_CLASSIFICATION	2.8027218115740155E-6	DESIGN	3.9987419276551937E-7	TEST	2.7151162950208355E-7	DOCUMENTATION	9.116126901139421E-8	DEFECT	2.9054475820956488E-8	IMPLEMENTATION
// Does the LIMIT clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.9982903418341339	WITHOUT_CLASSIFICATION	0.0014747018568434772	DESIGN	1.7826784915517287E-4	IMPLEMENTATION	4.0188880105264046E-5	DEFECT	1.471267741213732E-5	DOCUMENTATION	1.7869023500528198E-6	TEST
// The name of the SQL function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.9999886892721671	WITHOUT_CLASSIFICATION	8.221644719701272E-6	DESIGN	2.1403803115869126E-6	DEFECT	4.639571957344311E-7	IMPLEMENTATION	2.6962493089574803E-7	DOCUMENTATION	2.1512067500738573E-7	TEST
// Create an OuterJoinGenerator for this dialect.	WITHOUT_CLASSIFICATION	0.999856494322407	WITHOUT_CLASSIFICATION	1.3555778140383044E-4	DESIGN	7.58927371997667E-6	TEST	2.0097400809176108E-7	IMPLEMENTATION	1.288276250264085E-7	DOCUMENTATION	2.8820836041589805E-8	DEFECT
// The keyword used to insert a row without specifying // any column values	WITHOUT_CLASSIFICATION	0.9999970378235441	WITHOUT_CLASSIFICATION	1.6124681571118586E-6	DEFECT	1.0160582075834926E-6	DESIGN	1.8098113043935535E-7	DOCUMENTATION	9.721108588028661E-8	TEST	5.545787482821482E-8	IMPLEMENTATION
//registerFunction( "trim", new StandardSQLFunction( "trim", Hibernate.STRING ) );	WITHOUT_CLASSIFICATION	0.9999311050996569	WITHOUT_CLASSIFICATION	3.875345631070268E-5	IMPLEMENTATION	2.016025267311734E-5	DESIGN	7.1137935115905576E-6	DEFECT	1.6337307129141998E-6	TEST	1.2336671346418485E-6	DOCUMENTATION
//skip the FROM keyword in params	WITHOUT_CLASSIFICATION	0.9998800872013943	WITHOUT_CLASSIFICATION	5.6068947187924224E-5	IMPLEMENTATION	2.4749757789851414E-5	DEFECT	2.0478125402505904E-5	DESIGN	1.413732763540017E-5	DOCUMENTATION	4.4786405898706384E-6	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9989260628615921	WITHOUT_CLASSIFICATION	7.677202016314123E-4	DESIGN	1.4376704594225997E-4	IMPLEMENTATION	7.854593901788724E-5	DOCUMENTATION	4.701722594702547E-5	TEST	3.688672586933569E-5	DEFECT
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.999929197619747	WITHOUT_CLASSIFICATION	7.028703527772952E-5	DESIGN	4.743643724397261E-7	DOCUMENTATION	2.4693230245917506E-8	DEFECT	1.287729122383144E-8	TEST	3.410081500803676E-9	IMPLEMENTATION
// SQLFunction implementation	WITHOUT_CLASSIFICATION	0.9999026352219262	WITHOUT_CLASSIFICATION	9.568221986417625E-5	IMPLEMENTATION	1.0065260058694855E-6	DOCUMENTATION	3.45804645624329E-7	DEFECT	2.3735943204514684E-7	DESIGN	9.286812609502744E-8	TEST
// conceivable that the dialect ctor could throw HibernateExceptions, so don't re-wrap	WITHOUT_CLASSIFICATION	0.9999910732365249	WITHOUT_CLASSIFICATION	7.175172622120296E-6	IMPLEMENTATION	1.1991883106575392E-6	TEST	4.622867032132046E-7	DESIGN	5.786006130414358E-8	DEFECT	3.2255777690029765E-8	DOCUMENTATION
// register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.999109649523166	WITHOUT_CLASSIFICATION	8.597304680410712E-4	IMPLEMENTATION	2.162824753086916E-5	DESIGN	4.904318932514827E-6	DEFECT	3.393599015632575E-6	TEST	6.938433137588968E-7	DOCUMENTATION
// register resolvers set via Environment property	WITHOUT_CLASSIFICATION	0.9997258490477673	WITHOUT_CLASSIFICATION	1.4931525937467732E-4	IMPLEMENTATION	9.913025216721886E-5	DESIGN	1.3334198456261195E-5	TEST	8.630503613861614E-6	DEFECT	3.740738620591562E-6	DOCUMENTATION
// kept for backward compatibility until after the 3.1beta5 release of HA	WITHOUT_CLASSIFICATION	0.9999922041617989	WITHOUT_CLASSIFICATION	5.535873861912918E-6	IMPLEMENTATION	1.7756843508581835E-6	DESIGN	2.1209856750196476E-7	DEFECT	2.0617342204788362E-7	TEST	6.600799871001697E-8	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9998371124296423	WITHOUT_CLASSIFICATION	1.1189438220089933E-4	IMPLEMENTATION	3.3685604826188624E-5	DESIGN	8.985026871557765E-6	DOCUMENTATION	7.676590930369222E-6	TEST	6.459655286952667E-7	DEFECT
// the CascadingAction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999298451330907	WITHOUT_CLASSIFICATION	4.9418939332524E-5	IMPLEMENTATION	1.0229673203544778E-5	DESIGN	6.554626356251915E-6	DOCUMENTATION	3.5571965329535903E-6	TEST	3.944314840010035E-7	DEFECT
// the CascadingAction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9956567120389325	WITHOUT_CLASSIFICATION	0.0042947676175718996	IMPLEMENTATION	3.956472101230916E-5	DESIGN	3.8811054136558E-6	DOCUMENTATION	3.4826229767252735E-6	DEFECT	1.5918940928306966E-6	TEST
// delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999936253504875	WITHOUT_CLASSIFICATION	4.443311159554882E-6	DESIGN	8.314765177959588E-7	IMPLEMENTATION	4.803741696738424E-7	TEST	3.182761220690008E-7	DOCUMENTATION	3.012115433644078E-7	DEFECT
// orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.9999217424024356	WITHOUT_CLASSIFICATION	4.060382119385558E-5	DESIGN	3.0055694059023727E-5	DEFECT	5.2847607976263645E-6	IMPLEMENTATION	2.008690666509942E-6	TEST	3.04630847555E-7	DOCUMENTATION
/*(LockMode) anything*/	WITHOUT_CLASSIFICATION	0.9999652295825484	WITHOUT_CLASSIFICATION	1.1824037304799661E-5	DOCUMENTATION	1.0741083561458042E-5	IMPLEMENTATION	5.712532237632648E-6	DEFECT	4.157362597918563E-6	TEST	2.335401749803851E-6	DESIGN
// lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.99993675666161	WITHOUT_CLASSIFICATION	4.86825543299693E-5	IMPLEMENTATION	8.844309857991193E-6	DESIGN	2.9234507632087863E-6	DOCUMENTATION	1.5788857870259055E-6	TEST	1.2141376518568122E-6	DEFECT
// refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999996913381173	WITHOUT_CLASSIFICATION	1.5226494296072397E-6	IMPLEMENTATION	1.1150143897818316E-6	DESIGN	2.4360350360623735E-7	TEST	1.1223566607769159E-7	DEFECT	9.311583789438205E-8	DOCUMENTATION
// evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999940014306695	WITHOUT_CLASSIFICATION	2.688691453861716E-6	IMPLEMENTATION	2.303469620482204E-6	DESIGN	3.71664218326655E-7	DEFECT	3.6369983891507955E-7	DOCUMENTATION	2.710441989046503E-7	TEST
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999909337404908	WITHOUT_CLASSIFICATION	4.964725671723991E-6	IMPLEMENTATION	1.8463621070786242E-6	DEFECT	1.5699125057929683E-6	DESIGN	4.1946152248373664E-7	TEST	2.6579770208413603E-7	DOCUMENTATION
// orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.9999496925635392	WITHOUT_CLASSIFICATION	4.201357107706533E-5	DEFECT	6.360023286794842E-6	DESIGN	1.3358666396191794E-6	IMPLEMENTATION	4.803156284040217E-7	TEST	1.1765982901212161E-7	DOCUMENTATION
// for deprecated saveOrUpdateCopy()	WITHOUT_CLASSIFICATION	0.9999422204493944	WITHOUT_CLASSIFICATION	3.091818550241148E-5	DEFECT	1.4942165377929582E-5	IMPLEMENTATION	9.379752092109427E-6	DESIGN	1.3862974680008505E-6	DOCUMENTATION	1.1531501651798236E-6	TEST
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999784662700549	WITHOUT_CLASSIFICATION	1.2540167469740155E-5	IMPLEMENTATION	7.942909067876519E-6	DESIGN	4.2987902885117727E-7	TEST	4.220019548840792E-7	DEFECT	1.9877242387073044E-7	DOCUMENTATION
//a proxy cannot be transient and it breaks ForeignKeys.isTransient	WITHOUT_CLASSIFICATION	0.9988062435067242	WITHOUT_CLASSIFICATION	0.0010796813826769688	IMPLEMENTATION	8.345302623655643E-5	DESIGN	2.2984982588535644E-5	DEFECT	4.394850537347849E-6	DOCUMENTATION	3.2422512362939645E-6	TEST
// replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999742445428506	WITHOUT_CLASSIFICATION	2.3891500985881106E-4	DESIGN	1.3580722363760761E-5	IMPLEMENTATION	2.7373407571671365E-6	TEST	1.7154466552032192E-6	DOCUMENTATION	6.060518591822175E-7	DEFECT
// static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999794586020881	WITHOUT_CLASSIFICATION	1.7918929228836987E-5	IMPLEMENTATION	1.866270913549771E-6	DESIGN	3.133453051078468E-7	TEST	2.738369794471686E-7	DEFECT	1.6901548498466608E-7	DOCUMENTATION
// handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.9997428476215009	WITHOUT_CLASSIFICATION	1.876416367409371E-4	DESIGN	6.184997478152954E-5	IMPLEMENTATION	4.026344211823005E-6	TEST	1.9681521981155985E-6	DEFECT	1.666270566653879E-6	DOCUMENTATION
// Actually the semantics of the next three are really "Bag" // Note that, unlike objects, collection insertions, updates, // deletions are not really remembered between flushes. We // just re-use the same Lists for convenience.	WITHOUT_CLASSIFICATION	0.9885745503382157	WITHOUT_CLASSIFICATION	0.011239390783154604	DEFECT	1.5612324707231514E-4	DESIGN	2.786434763903018E-5	TEST	1.3844272638874164E-6	IMPLEMENTATION	6.86856654424738E-7	DOCUMENTATION
// Add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.9998211035529558	WITHOUT_CLASSIFICATION	1.3162230155621126E-4	IMPLEMENTATION	2.3979624682115943E-5	DOCUMENTATION	1.2741462672492074E-5	DEFECT	7.448341006918075E-6	DESIGN	3.104717126333615E-6	TEST
// continue loop	WITHOUT_CLASSIFICATION	0.9999774059711635	WITHOUT_CLASSIFICATION	8.740683638179535E-6	DESIGN	5.755976082250419E-6	IMPLEMENTATION	4.370149769776401E-6	DOCUMENTATION	3.081433629680405E-6	DEFECT	6.457857167128572E-7	TEST
//sort the updates by fk	WITHOUT_CLASSIFICATION	0.9999072506222357	WITHOUT_CLASSIFICATION	7.239325647890219E-5	IMPLEMENTATION	1.372083884530319E-5	DEFECT	4.644258040150638E-6	TEST	1.6480503705419542E-6	DOCUMENTATION	3.429740293467458E-7	DESIGN
//sort the updates by pk	WITHOUT_CLASSIFICATION	0.9998605285985417	WITHOUT_CLASSIFICATION	1.242834656409556E-4	IMPLEMENTATION	8.73596168824886E-6	DEFECT	4.358241816044804E-6	TEST	1.9319389594627723E-6	DOCUMENTATION	1.617933536575181E-7	DESIGN
// the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.9999318106310422	WITHOUT_CLASSIFICATION	3.179839164653722E-5	TEST	2.3306186061019405E-5	DEFECT	8.151660356388937E-6	IMPLEMENTATION	3.0854238269488264E-6	DOCUMENTATION	1.8477070669092557E-6	DESIGN
// the map of batch numbers to EntityInsertAction lists	WITHOUT_CLASSIFICATION	0.9996707126784052	WITHOUT_CLASSIFICATION	2.7040876359836355E-4	DESIGN	4.5554468398315446E-5	DEFECT	8.201379299021621E-6	IMPLEMENTATION	3.871301594441146E-6	DOCUMENTATION	1.251408704608767E-6	TEST
//optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.9999430626706738	WITHOUT_CLASSIFICATION	2.936698474895714E-5	DESIGN	2.528617692701079E-5	IMPLEMENTATION	1.4244035117224126E-6	DOCUMENTATION	5.674767998905775E-7	TEST	2.9228733870534854E-7	DEFECT
// the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.9999439176223908	WITHOUT_CLASSIFICATION	4.395173024233535E-5	DESIGN	5.708472767480485E-6	DEFECT	2.429267510583339E-6	TEST	2.1048259262023875E-6	IMPLEMENTATION	1.8880811625588245E-6	DOCUMENTATION
// remove the current element from insertions. It will be added back later.	WITHOUT_CLASSIFICATION	0.9999953347808989	WITHOUT_CLASSIFICATION	2.445747129932763E-6	DESIGN	1.5689621250324112E-6	IMPLEMENTATION	5.770828985245015E-7	DEFECT	4.3001269771449794E-8	DOCUMENTATION	3.0425677660737914E-8	TEST
// the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.9914777365941341	WITHOUT_CLASSIFICATION	0.008295580509137724	IMPLEMENTATION	9.895290844490846E-5	DOCUMENTATION	6.897267021322844E-5	TEST	5.8252913479616226E-5	DESIGN	5.0440459048407E-7	DEFECT
// There is already an existing batch for this type of entity. // Check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.999999268366274	WITHOUT_CLASSIFICATION	3.3809581845300266E-7	DESIGN	2.6550805862519427E-7	TEST	1.0036098483770156E-7	DEFECT	2.7419022935694387E-8	DOCUMENTATION	2.498412416145539E-10	IMPLEMENTATION
// now rebuild the insertions list. There is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.9999718081687962	WITHOUT_CLASSIFICATION	1.384457371625986E-5	DESIGN	1.0922075348739341E-5	IMPLEMENTATION	2.9538248282120524E-6	DEFECT	3.0438820346309566E-7	TEST	1.6696910714741024E-7	DOCUMENTATION
// the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.9999759851609398	WITHOUT_CLASSIFICATION	1.9605316880763812E-5	TEST	1.5429651259603203E-6	IMPLEMENTATION	1.4050662123357037E-6	DESIGN	9.616596058628044E-7	DOCUMENTATION	4.9983123518636E-7	DEFECT
// loop through all the associations of the current entity and make sure that they are processed // before the current batch number	WITHOUT_CLASSIFICATION	0.9992152885148972	WITHOUT_CLASSIFICATION	5.988767702374798E-4	IMPLEMENTATION	1.2715069583212998E-4	DESIGN	3.548448357789937E-5	DEFECT	1.9266772238067402E-5	DOCUMENTATION	3.932763217334171E-6	TEST
// find the batch number associated with the current association, if any.	WITHOUT_CLASSIFICATION	0.9999939882254819	WITHOUT_CLASSIFICATION	2.3302985220319864E-6	DOCUMENTATION	2.2372067219506823E-6	TEST	7.173629463020077E-7	IMPLEMENTATION	5.593868983185149E-7	DESIGN	1.6751942938886007E-7	DEFECT
// create a new batch for this type. The batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.9999956154301841	WITHOUT_CLASSIFICATION	2.1823172130842445E-6	DESIGN	1.16261423841043E-6	TEST	6.159653921690115E-7	DOCUMENTATION	3.921187734566968E-7	DEFECT	3.155419875201797E-8	IMPLEMENTATION
// loop through all the associated entities and make sure they have been // processed before the latest // batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.9919149905136257	WITHOUT_CLASSIFICATION	0.007916355303031941	IMPLEMENTATION	8.564428887561209E-5	TEST	6.255195567534045E-5	DEFECT	1.4156299054506837E-5	DOCUMENTATION	6.301639736828856E-6	DESIGN
// since this entity will now be processed in the latest possible batch, // we can be assured that it will come after all other associations, // there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.8031850912281311	IMPLEMENTATION	0.19443460778781857	WITHOUT_CLASSIFICATION	0.0021735564014401954	TEST	1.3625799689482508E-4	DEFECT	5.022416411839312E-5	DOCUMENTATION	2.0262421597024785E-5	DESIGN
//cascade to current collection elements	WITHOUT_CLASSIFICATION	0.9998127583627034	WITHOUT_CLASSIFICATION	1.6551008209389357E-4	DESIGN	1.4733664494701921E-5	IMPLEMENTATION	4.899757100763602E-6	DOCUMENTATION	1.2235283257703614E-6	TEST	8.74605281398293E-7	DEFECT
//not really necessary, but good for consistency...	WITHOUT_CLASSIFICATION	0.9960108327002538	WITHOUT_CLASSIFICATION	0.0023738243654715017	DESIGN	0.0012970324400403362	IMPLEMENTATION	1.686774082505868E-4	DEFECT	1.1835020470751117E-4	TEST	3.128288127621067E-5	DOCUMENTATION
// we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.9999996673847342	WITHOUT_CLASSIFICATION	1.7078403810373772E-7	DESIGN	8.604113134457038E-8	DEFECT	4.368311309140478E-8	DOCUMENTATION	2.3899461820898804E-8	IMPLEMENTATION	8.20752135409128E-9	TEST
//a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.9996295475601719	WITHOUT_CLASSIFICATION	3.207743456111839E-4	DESIGN	2.8185132994075685E-5	IMPLEMENTATION	1.8079922107877164E-5	DEFECT	1.9210234465916335E-6	TEST	1.4920156683987058E-6	DOCUMENTATION
// handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.9999017852349678	WITHOUT_CLASSIFICATION	9.163402585617791E-5	IMPLEMENTATION	4.1752782455493545E-6	DESIGN	1.6420769859291852E-6	DOCUMENTATION	3.8647437324738156E-7	DEFECT	3.7690957133505985E-7	TEST
// Loaded entity instances, by EntityUniqueKey	WITHOUT_CLASSIFICATION	0.9999223075566404	WITHOUT_CLASSIFICATION	4.9700702340537435E-5	IMPLEMENTATION	1.1382031371696064E-5	DEFECT	8.604741331000609E-6	DOCUMENTATION	6.867842971780615E-6	DESIGN	1.1371253445793946E-6	TEST
// Identity map of EntityEntry instances, by the entity instance	WITHOUT_CLASSIFICATION	0.9997658008553733	WITHOUT_CLASSIFICATION	2.1314324790693348E-4	IMPLEMENTATION	1.2746949530643928E-5	DESIGN	5.271008360095923E-6	DOCUMENTATION	2.661123048544415E-6	DEFECT	3.7681578061313655E-7	TEST
// Entity proxies, by EntityKey	WITHOUT_CLASSIFICATION	0.999928962804609	WITHOUT_CLASSIFICATION	5.513634995650452E-5	IMPLEMENTATION	7.138553774257444E-6	DEFECT	4.731993197512713E-6	DOCUMENTATION	2.856544171654601E-6	TEST	1.1737542911841788E-6	DESIGN
// Snapshots of current database state for entities // that have *not* been loaded	WITHOUT_CLASSIFICATION	0.9998957522182319	WITHOUT_CLASSIFICATION	8.298113683558304E-5	DESIGN	1.3605250329863708E-5	DEFECT	4.555603403310032E-6	IMPLEMENTATION	2.7317995561360114E-6	TEST	3.739916431289216E-7	DOCUMENTATION
// Identity map of array holder ArrayHolder instances, by the array instance	WITHOUT_CLASSIFICATION	0.9997961923637134	WITHOUT_CLASSIFICATION	1.9162827041461136E-4	IMPLEMENTATION	8.54955596122877E-6	DESIGN	1.7695387351554318E-6	DEFECT	1.6997059761849281E-6	DOCUMENTATION	1.6056519921874373E-7	TEST
// Collection wrappers, by the CollectionKey //key=CollectionKey, value=PersistentCollection	WITHOUT_CLASSIFICATION	0.9999987438123229	WITHOUT_CLASSIFICATION	6.896566962862025E-7	DESIGN	2.7580539770872566E-7	DEFECT	1.7346658411094763E-7	TEST	8.236334056610147E-8	DOCUMENTATION	3.4895658413894656E-8	IMPLEMENTATION
// Set of EntityKeys of deleted objects	WITHOUT_CLASSIFICATION	0.9999828734729809	WITHOUT_CLASSIFICATION	6.788882621185583E-6	DESIGN	6.756825118612984E-6	DEFECT	1.700158635544906E-6	DOCUMENTATION	1.6317527600876177E-6	TEST	2.489078836619007E-7	IMPLEMENTATION
// properties that we have tried to load, and not found in the database	WITHOUT_CLASSIFICATION	0.9999883674737423	WITHOUT_CLASSIFICATION	1.0362220164753743E-5	DEFECT	1.0189760412951892E-6	DESIGN	2.1050125084455672E-7	IMPLEMENTATION	2.3772722583571324E-8	DOCUMENTATION	1.70560782573147E-8	TEST
// A list of collection wrappers that were instantiating during result set // processing, that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9951107986816919	WITHOUT_CLASSIFICATION	0.004542748743531104	IMPLEMENTATION	3.3681366202003356E-4	DESIGN	4.212907771030721E-6	DEFECT	3.58409150899369E-6	TEST	1.8419134768563281E-6	DOCUMENTATION
// A container for collections we load up when the owning entity is not // yet loaded ... for now, this is purely transient!	WITHOUT_CLASSIFICATION	0.9933200610355971	WITHOUT_CLASSIFICATION	0.005658904910831118	IMPLEMENTATION	3.85526291503312E-4	DESIGN	3.683315520706786E-4	DEFECT	2.4538090538483537E-4	TEST	2.1795304612842576E-5	DOCUMENTATION
// Downgrade locks	WITHOUT_CLASSIFICATION	0.9999559713575491	WITHOUT_CLASSIFICATION	2.4406063232252767E-5	IMPLEMENTATION	1.016015619534236E-5	DESIGN	6.996668905171907E-6	DOCUMENTATION	1.3416150443044668E-6	DEFECT	1.1241390738915248E-6	TEST
// any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.9999613675753223	WITHOUT_CLASSIFICATION	1.4362782080151182E-5	DEFECT	1.4157651189069781E-5	DESIGN	8.266233494783394E-6	IMPLEMENTATION	1.519246565503251E-6	DOCUMENTATION	3.2651134822717275E-7	TEST
//unwrap the object	WITHOUT_CLASSIFICATION	0.9999683758691887	WITHOUT_CLASSIFICATION	1.6762507300726885E-5	IMPLEMENTATION	8.830666621624319E-6	DOCUMENTATION	2.1457267525815463E-6	DESIGN	2.1404441880732002E-6	DEFECT	1.744785948370316E-6	TEST
//initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.9999946395605925	WITHOUT_CLASSIFICATION	2.2464162013270534E-6	DOCUMENTATION	1.6387323912476986E-6	IMPLEMENTATION	6.41702843545793E-7	DEFECT	6.229794339104295E-7	DESIGN	2.1060853754050506E-7	TEST
//return the proxied object	WITHOUT_CLASSIFICATION	0.9998434502377	WITHOUT_CLASSIFICATION	1.134359688614605E-4	IMPLEMENTATION	1.8837460569122102E-5	DESIGN	1.2834546316487152E-5	DEFECT	1.0645826872975857E-5	DOCUMENTATION	7.959596799581695E-7	TEST
//overwrite old proxy	WITHOUT_CLASSIFICATION	0.9999982838427918	WITHOUT_CLASSIFICATION	6.40018674654958E-7	IMPLEMENTATION	3.2340675710933337E-7	DESIGN	2.7855176608244914E-7	TEST	2.497462107854325E-7	DOCUMENTATION	2.244337997004147E-7	DEFECT
// early exit...	WITHOUT_CLASSIFICATION	0.9999918354096966	WITHOUT_CLASSIFICATION	3.3232125215899413E-6	IMPLEMENTATION	3.1264302202995174E-6	DEFECT	1.1494220427629443E-6	DOCUMENTATION	4.011802373499706E-7	TEST	1.6434528142193344E-7	DESIGN
// or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.999098002816464	WITHOUT_CLASSIFICATION	3.7857389829148346E-4	DESIGN	2.6896777623294213E-4	IMPLEMENTATION	1.9388241273185107E-4	DEFECT	5.5348217265231386E-5	TEST	5.224879014561678E-6	DOCUMENTATION
//treat it just like a new collection	WITHOUT_CLASSIFICATION	0.9990016238298133	WITHOUT_CLASSIFICATION	8.646759474825735E-4	IMPLEMENTATION	7.535459502634997E-5	DESIGN	3.540247482087852E-5	TEST	1.4728444663571984E-5	DEFECT	8.214708193286283E-6	DOCUMENTATION
//do this work only at the very highest level of the load //don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.9610033086557969	WITHOUT_CLASSIFICATION	0.037945209693714566	DESIGN	3.909990571548683E-4	TEST	3.5416716202488506E-4	IMPLEMENTATION	2.826239342938518E-4	DEFECT	2.3691497014949454E-5	DOCUMENTATION
//note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.9999992465733532	WITHOUT_CLASSIFICATION	3.8629022435328004E-7	IMPLEMENTATION	1.5915190107660694E-7	DESIGN	1.4350756130053223E-7	TEST	4.543569125930374E-8	DOCUMENTATION	1.9041268951211764E-8	DEFECT
//it might be an unwrapped collection reference! //try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.9985031992985494	WITHOUT_CLASSIFICATION	0.001353951985641553	DESIGN	1.27701197489936E-4	IMPLEMENTATION	1.181457610961545E-5	DEFECT	2.383169333549895E-6	TEST	9.49772875956606E-7	DOCUMENTATION
/*public boolean isNonExistant(EntityKey key) {	WITHOUT_CLASSIFICATION	0.9992851516698149	WITHOUT_CLASSIFICATION	5.605669823265035E-4	DESIGN	1.038804080215337E-4	DEFECT	2.804565588819796E-5	DOCUMENTATION	1.639094313788829E-5	TEST	5.96434081095793E-6	IMPLEMENTATION
/*public boolean isNonExistant(EntityUniqueKey key) {	WITHOUT_CLASSIFICATION	0.9985270579811873	WITHOUT_CLASSIFICATION	0.001140513700806723	DESIGN	2.0634125116192385E-4	DEFECT	5.29595656940246E-5	DOCUMENTATION	3.8871646494348155E-5	IMPLEMENTATION	3.4255854655765914E-5	TEST
// iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.9997034995262937	WITHOUT_CLASSIFICATION	2.51844607686498E-4	IMPLEMENTATION	2.06843584370862E-5	DOCUMENTATION	1.3335828315918067E-5	TEST	1.0442443321618864E-5	DESIGN	1.9323594528696784E-7	DEFECT
// does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.9993636704863254	WITHOUT_CLASSIFICATION	2.4589123789837383E-4	DOCUMENTATION	1.4527844140727774E-4	IMPLEMENTATION	1.2454594268605478E-4	TEST	1.1337894652255018E-4	DESIGN	7.234945160527608E-6	DEFECT
//check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.9992444601914668	WITHOUT_CLASSIFICATION	4.86232690395093E-4	DESIGN	1.9149030328504733E-4	DEFECT	4.808731133977636E-5	DOCUMENTATION	2.3161643731682763E-5	IMPLEMENTATION	6.5678597815830136E-6	TEST
// otherwise, the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.9999930056493381	WITHOUT_CLASSIFICATION	3.64066168564167E-6	DEFECT	1.7766788377922476E-6	DESIGN	1.2174447145039867E-6	IMPLEMENTATION	2.5014212543218514E-7	DOCUMENTATION	1.094232985889221E-7	TEST
// adds remove as a sort-of alias for delete...	WITHOUT_CLASSIFICATION	0.9999865271506276	WITHOUT_CLASSIFICATION	1.144387535539426E-5	DESIGN	1.1246875695298734E-6	IMPLEMENTATION	6.455689115602902E-7	DEFECT	2.0763998116992014E-7	TEST	5.107755468708332E-8	DOCUMENTATION
//bad cast	WITHOUT_CLASSIFICATION	0.9999888918081226	WITHOUT_CLASSIFICATION	4.956390409493717E-6	DESIGN	2.0240018024852863E-6	TEST	1.9142481202717806E-6	IMPLEMENTATION	1.5196750515586668E-6	DOCUMENTATION	6.938764935223816E-7	DEFECT
//return lhsPersister.getSubclassPropertyColumnNames(property);	WITHOUT_CLASSIFICATION	0.9990294751822268	WITHOUT_CLASSIFICATION	9.658493084973026E-4	DESIGN	2.493714850871608E-6	DEFECT	1.3671889113099411E-6	TEST	5.711778767320928E-7	DOCUMENTATION	2.434276368299741E-7	IMPLEMENTATION
//property-refs for associations defined on a //component are not supported, so no need to slice	WITHOUT_CLASSIFICATION	0.9487852559516113	WITHOUT_CLASSIFICATION	0.05104435963817748	DESIGN	1.1780482454936115E-4	TEST	3.9270388427606575E-5	DOCUMENTATION	1.0001230005290189E-5	IMPLEMENTATION	3.307967228925587E-6	DEFECT
//if there is no property-ref, assume the join //is to the subclass table (ie. the table of the //subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.9999994380956161	WITHOUT_CLASSIFICATION	5.269698709945263E-7	DESIGN	1.560573305650651E-8	DEFECT	1.0361880849456635E-8	TEST	8.950931380509365E-9	DOCUMENTATION	1.596770775046417E-11	IMPLEMENTATION
//handle a property-ref	WITHOUT_CLASSIFICATION	0.9999895177610421	WITHOUT_CLASSIFICATION	6.124506521820511E-6	IMPLEMENTATION	3.4421783834616104E-6	DESIGN	4.4539397586841615E-7	DOCUMENTATION	3.8667862767109104E-7	DEFECT	8.348144918056828E-8	TEST
/*NativeSQLQueryReturn*/	WITHOUT_CLASSIFICATION	0.9999218425725201	WITHOUT_CLASSIFICATION	5.396181120862215E-5	IMPLEMENTATION	9.006291811176419E-6	DEFECT	8.290665866253944E-6	DOCUMENTATION	4.32667318546569E-6	DESIGN	2.57198540836717E-6	TEST
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999166888758729	WITHOUT_CLASSIFICATION	3.466635169122373E-5	IMPLEMENTATION	2.626850695312528E-5	DESIGN	1.674005472183235E-5	DEFECT	3.0199859136561705E-6	TEST	2.6162248472789932E-6	DOCUMENTATION
// why is all others non final ?	WITHOUT_CLASSIFICATION	0.9993013922018228	WITHOUT_CLASSIFICATION	6.491332000091141E-4	IMPLEMENTATION	3.181938770903484E-5	DEFECT	7.93969539467179E-6	DESIGN	4.99820783113998E-6	TEST	4.717307233244124E-6	DOCUMENTATION
//this.forceCacheRefresh = forceCacheRefresh;	WITHOUT_CLASSIFICATION	0.9998813623972763	WITHOUT_CLASSIFICATION	6.312601745948086E-5	IMPLEMENTATION	3.095656253187291E-5	TEST	1.3252350506425324E-5	DEFECT	6.387277672408337E-6	DOCUMENTATION	4.915394553612861E-6	DESIGN
// HELLA IMPORTANT OPTIMIZATION!!!	WITHOUT_CLASSIFICATION	0.9999199336610544	WITHOUT_CLASSIFICATION	5.036026002123744E-5	DEFECT	9.579410486019642E-6	IMPLEMENTATION	8.546710439926483E-6	DESIGN	7.907021179959532E-6	DOCUMENTATION	3.672936818498638E-6	TEST
/*return that.type.equals(type) && 	WITHOUT_CLASSIFICATION	0.9977986496749296	WITHOUT_CLASSIFICATION	0.002028444767913521	DESIGN	1.349639017034923E-4	IMPLEMENTATION	2.2285673669424275E-5	TEST	9.340739748237325E-6	DOCUMENTATION	6.315242035698282E-6	DEFECT
//Must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.9997122969681317	WITHOUT_CLASSIFICATION	2.1123967052687063E-4	DESIGN	5.307561414645701E-5	DEFECT	9.919665529919628E-6	TEST	7.721814795428586E-6	IMPLEMENTATION	5.746266869596599E-6	DOCUMENTATION
//take a snapshot	WITHOUT_CLASSIFICATION	0.9996127355124056	WITHOUT_CLASSIFICATION	3.316964451044068E-4	IMPLEMENTATION	2.648385648931996E-5	DEFECT	1.9071416206704065E-5	DOCUMENTATION	6.096252059537781E-6	DESIGN	3.916517734355651E-6	TEST
// do a check	WITHOUT_CLASSIFICATION	0.9999682168730345	WITHOUT_CLASSIFICATION	2.779078743362043E-5	IMPLEMENTATION	1.6424522869272578E-6	DESIGN	1.5908501210883541E-6	DOCUMENTATION	5.717250476044037E-7	TEST	1.873120763008154E-7	DEFECT
// the owning entity may have been deleted and its identifier unset due to // identifier-rollback; in which case, try to look up its identifier from // the persistence context	WITHOUT_CLASSIFICATION	0.999874689309318	WITHOUT_CLASSIFICATION	1.162146504866544E-4	DESIGN	7.983302256167758E-6	DEFECT	9.324321479355881E-7	IMPLEMENTATION	1.6567232903469387E-7	DOCUMENTATION	1.4633462267457169E-8	TEST
// do the work	WITHOUT_CLASSIFICATION	0.9989088638675699	WITHOUT_CLASSIFICATION	8.460358461860102E-4	IMPLEMENTATION	1.1732447157408613E-4	DESIGN	6.644741114552005E-5	DOCUMENTATION	4.0029315437600715E-5	DEFECT	2.1299088086801336E-5	TEST
// We've been here before	WITHOUT_CLASSIFICATION	0.9999460933568639	WITHOUT_CLASSIFICATION	5.002755241490901E-5	IMPLEMENTATION	1.4275185531115065E-6	DEFECT	1.0617284615087186E-6	DESIGN	7.292499887261598E-7	TEST	6.605937177849157E-7	DOCUMENTATION
// it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.9999827900121699	WITHOUT_CLASSIFICATION	1.1385388606295318E-5	DESIGN	2.4135428515551987E-6	TEST	1.4793161323575564E-6	IMPLEMENTATION	1.3117271700871762E-6	DEFECT	6.200130697589568E-7	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9989088638675699	WITHOUT_CLASSIFICATION	8.460358461860102E-4	IMPLEMENTATION	1.1732447157408613E-4	DESIGN	6.644741114552005E-5	DOCUMENTATION	4.0029315437600715E-5	DEFECT	2.1299088086801336E-5	TEST
// if either its role changed,	WITHOUT_CLASSIFICATION	0.9999999460712562	WITHOUT_CLASSIFICATION	1.7615881346426697E-8	IMPLEMENTATION	1.632046308470059E-8	TEST	1.2767389063428464E-8	DESIGN	5.284547550098303E-9	DEFECT	1.940462717773159E-9	DOCUMENTATION
// or its key changed	WITHOUT_CLASSIFICATION	0.9999993841830574	WITHOUT_CLASSIFICATION	5.465718492097941E-7	IMPLEMENTATION	3.820079564583101E-8	TEST	1.7719103602829138E-8	DOCUMENTATION	1.126298793989932E-8	DEFECT	2.0622061712477546E-9	DESIGN
// we will need to create new entries	WITHOUT_CLASSIFICATION	0.9997305187383095	WITHOUT_CLASSIFICATION	2.417720234262379E-4	IMPLEMENTATION	1.515368380639916E-5	DOCUMENTATION	9.815669890096558E-6	TEST	1.7561520090106782E-6	DESIGN	9.837325587414106E-7	DEFECT
// we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.9740381239931037	WITHOUT_CLASSIFICATION	0.025613772062636878	IMPLEMENTATION	1.1502920178312608E-4	DESIGN	9.893862321578187E-5	DOCUMENTATION	7.842447848292436E-5	DEFECT	5.5711640777580555E-5	TEST
// force initialize!	WITHOUT_CLASSIFICATION	0.9999993525572384	WITHOUT_CLASSIFICATION	2.658119954136721E-7	IMPLEMENTATION	2.290299615997684E-7	DESIGN	9.595570859341634E-8	DOCUMENTATION	4.2806874731182193E-8	DEFECT	1.3838221259225663E-8	TEST
// else if it's elements changed	WITHOUT_CLASSIFICATION	0.9999995317398946	WITHOUT_CLASSIFICATION	1.7048425632924746E-7	IMPLEMENTATION	1.5195142358533164E-7	DESIGN	7.343496450938903E-8	TEST	5.6246777430272374E-8	DEFECT	1.614268360495145E-8	DOCUMENTATION
//ATTRIBUTES MAINTAINED BETWEEN FLUSH CYCLES	WITHOUT_CLASSIFICATION	0.9993334673127472	WITHOUT_CLASSIFICATION	2.985406463176488E-4	DEFECT	1.3833993577063984E-4	IMPLEMENTATION	1.3732379329762132E-4	DESIGN	4.818639093629912E-5	DOCUMENTATION	4.414192093078127E-5	TEST
// session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.9999933179813308	WITHOUT_CLASSIFICATION	3.5689506648103177E-6	IMPLEMENTATION	2.0389922572995795E-6	DEFECT	4.7231184743426516E-7	TEST	3.265377598839423E-7	DESIGN	2.7522613968916393E-7	DOCUMENTATION
// allow the CollectionSnapshot to be serialized	WITHOUT_CLASSIFICATION	0.998451506827887	WITHOUT_CLASSIFICATION	0.0012615978971075284	IMPLEMENTATION	2.2648376438778392E-4	DESIGN	5.666478844277483E-5	DEFECT	2.114869734245209E-6	TEST	1.6318524406714736E-6	DOCUMENTATION
// ATTRIBUTES USED ONLY DURING FLUSH CYCLE	WITHOUT_CLASSIFICATION	0.9998096616353314	WITHOUT_CLASSIFICATION	8.874690582569105E-5	DEFECT	6.44648284709022E-5	IMPLEMENTATION	1.4456550150589015E-5	DOCUMENTATION	1.4184449212722618E-5	DESIGN	8.485631008776561E-6	TEST
// "current" means the reference that was found during flush() 	WITHOUT_CLASSIFICATION	0.9999979038793295	WITHOUT_CLASSIFICATION	1.993383588781539E-6	DESIGN	3.133060470056683E-8	DOCUMENTATION	2.5660368901390947E-8	DEFECT	2.41237752035335E-8	IMPLEMENTATION	2.1622332905833637E-8	TEST
// "loaded" means the reference that is consistent  // with the current database state	WITHOUT_CLASSIFICATION	0.9999201617294949	WITHOUT_CLASSIFICATION	7.422937894118993E-5	DESIGN	2.455686544993483E-6	IMPLEMENTATION	2.3098357420070826E-6	TEST	5.431441505157052E-7	DEFECT	3.002251262877827E-7	DOCUMENTATION
// during flush, we navigate the object graph to // collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.9958594413825139	WITHOUT_CLASSIFICATION	0.0037237092190717256	DESIGN	2.820911848981589E-4	IMPLEMENTATION	1.0131047394333284E-4	TEST	2.8936870005286616E-5	DOCUMENTATION	4.5108695676084624E-6	DEFECT
// if we instantiate a collection during the flush() process, // we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.9999703758245859	WITHOUT_CLASSIFICATION	2.6748286569514377E-5	DESIGN	1.4559097288066767E-6	TEST	1.388217359738269E-6	DEFECT	2.3656508583730942E-8	DOCUMENTATION	8.105247588893489E-9	IMPLEMENTATION
// new collections that get found + wrapped // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999121055504766	WITHOUT_CLASSIFICATION	7.213304021128178E-5	DESIGN	1.2225682390100017E-5	IMPLEMENTATION	2.5582518059673757E-6	TEST	9.441747259146153E-7	DEFECT	3.3300390099276555E-8	DOCUMENTATION
//a newly wrapped collection is NOT dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.9916495364773473	WITHOUT_CLASSIFICATION	0.006303437182382204	DEFECT	0.0018284906929507607	IMPLEMENTATION	1.3762563131703928E-4	DESIGN	7.465737302435517E-5	TEST	6.252642978302292E-6	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9954266362996443	WITHOUT_CLASSIFICATION	0.0038687676377198083	IMPLEMENTATION	2.0511438452705676E-4	DESIGN	1.714042549329459E-4	DEFECT	1.656595643624573E-4	TEST	1.6241785881337302E-4	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9954266362996443	WITHOUT_CLASSIFICATION	0.0038687676377198083	IMPLEMENTATION	2.0511438452705676E-4	DESIGN	1.714042549329459E-4	DEFECT	1.656595643624573E-4	TEST	1.6241785881337302E-4	DOCUMENTATION
// detached collections that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999771436891318	WITHOUT_CLASSIFICATION	1.5989764067998062E-5	DESIGN	3.779094227112736E-6	IMPLEMENTATION	2.4232008477947017E-6	DEFECT	6.50792915677306E-7	TEST	1.3458809500708095E-8	DOCUMENTATION
//optimization	WITHOUT_CLASSIFICATION	0.9999446868070883	WITHOUT_CLASSIFICATION	2.1102787967008352E-5	DOCUMENTATION	1.6754913392579026E-5	IMPLEMENTATION	6.1203788427335475E-6	TEST	5.691218525908277E-6	DEFECT	5.643894183595095E-6	DESIGN
//optimization //optimization	WITHOUT_CLASSIFICATION	0.9999961373153269	WITHOUT_CLASSIFICATION	1.7308006445928962E-6	DOCUMENTATION	9.695601393067114E-7	DEFECT	5.52835390446394E-7	TEST	4.12879964752421E-7	IMPLEMENTATION	1.9660853398000397E-7	DESIGN
//re-snapshot	WITHOUT_CLASSIFICATION	0.9994882681023737	WITHOUT_CLASSIFICATION	3.236847363796181E-4	IMPLEMENTATION	1.0738127445026471E-4	DESIGN	3.51083638492456E-5	DOCUMENTATION	2.57328192761417E-5	DEFECT	1.9824703671107448E-5	TEST
// for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.999974951265004	WITHOUT_CLASSIFICATION	1.734020712878537E-5	DESIGN	3.800896858041561E-6	DOCUMENTATION	2.7480600647050723E-6	IMPLEMENTATION	8.287677440606299E-7	DEFECT	3.308032003863667E-7	TEST
//NOTE: this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.9835200417345507	WITHOUT_CLASSIFICATION	0.016231653756293783	DEFECT	1.3381041259204546E-4	DESIGN	8.736064970613697E-5	TEST	2.2059734805754566E-5	DOCUMENTATION	5.073712051627077E-6	IMPLEMENTATION
//memory optimization	WITHOUT_CLASSIFICATION	0.9999908554685005	WITHOUT_CLASSIFICATION	5.283822981076052E-6	IMPLEMENTATION	2.306409836076018E-6	DOCUMENTATION	5.817674578716144E-7	TEST	5.500807636294188E-7	DEFECT	4.224504608871897E-7	DESIGN
// use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999987357384947	WITHOUT_CLASSIFICATION	1.0587261717362322E-6	DESIGN	9.622349435025034E-8	DEFECT	9.445983461470256E-8	DOCUMENTATION	1.1286794534031429E-8	IMPLEMENTATION	3.565210230316992E-9	TEST
// copied from Session:	WITHOUT_CLASSIFICATION	0.9999939367973224	WITHOUT_CLASSIFICATION	4.732834725541088E-6	DESIGN	3.8828710184423113E-7	TEST	3.4416313384271177E-7	DOCUMENTATION	3.2847855676989164E-7	DEFECT	2.694391596499078E-7	IMPLEMENTATION
// this should not happen since the DTD prevents it	WITHOUT_CLASSIFICATION	0.9997681021876417	WITHOUT_CLASSIFICATION	1.8859253603512922E-4	IMPLEMENTATION	1.8627859421714095E-5	TEST	1.436146167176438E-5	DESIGN	5.400679578420997E-6	DOCUMENTATION	4.915275651359022E-6	DEFECT
// JoinProcessor needs to know if the where clause fragment came from a dynamic filter or not so it // can put the where clause fragment in the right place in the SQL AST.   'hasFilterCondition' keeps track // of that fact.	WITHOUT_CLASSIFICATION	0.9191165425423006	DESIGN	0.0808730001254267	WITHOUT_CLASSIFICATION	5.175031584822277E-6	DOCUMENTATION	3.655015472562492E-6	TEST	1.2923005769082439E-6	DEFECT	3.349846383713453E-7	IMPLEMENTATION
// the current join represents the join between a many-to-many association table // and its "target" table.  Here we need to apply any additional filters // defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.9999381416101303	WITHOUT_CLASSIFICATION	6.1323061720231E-5	DESIGN	4.837599335966542E-7	DOCUMENTATION	4.7483408724646E-8	IMPLEMENTATION	3.730743373923929E-9	TEST	3.5406366852916743E-10	DEFECT
//check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.9999641515537734	WITHOUT_CLASSIFICATION	2.4691040234891815E-5	DESIGN	8.12075089001555E-6	IMPLEMENTATION	2.4937451360784117E-6	DOCUMENTATION	3.6647663066009377E-7	TEST	1.7643333505630524E-7	DEFECT
//values is not null and is checkable, we'll look deeper	WITHOUT_CLASSIFICATION	0.9998602308104555	WITHOUT_CLASSIFICATION	5.518586415652497E-5	DESIGN	4.370338644008609E-5	DEFECT	3.929886874197206E-5	IMPLEMENTATION	9.850094184417425E-7	TEST	5.960607876284407E-7	DOCUMENTATION
//for non null args, check for components and elements containing components	WITHOUT_CLASSIFICATION	0.9999992679864483	WITHOUT_CLASSIFICATION	4.7085333981851335E-7	IMPLEMENTATION	1.6842310486574997E-7	DESIGN	6.11519039979052E-8	DEFECT	2.281691354829524E-8	DOCUMENTATION	8.768289397913292E-9	TEST
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9998371124296423	WITHOUT_CLASSIFICATION	1.1189438220089933E-4	IMPLEMENTATION	3.3685604826188624E-5	DESIGN	8.985026871557765E-6	DOCUMENTATION	7.676590930369222E-6	TEST	6.459655286952667E-7	DEFECT
//persistent collections may have components	WITHOUT_CLASSIFICATION	0.999497508771266	WITHOUT_CLASSIFICATION	3.22765646137991E-4	DESIGN	1.605739133501181E-4	IMPLEMENTATION	1.0578450541934321E-5	TEST	6.561675405662482E-6	DEFECT	2.011543298257602E-6	DOCUMENTATION
//check for all components values in the collection	WITHOUT_CLASSIFICATION	0.999917175518909	WITHOUT_CLASSIFICATION	7.573396853940436E-5	DESIGN	4.604028644083883E-6	IMPLEMENTATION	1.057066017553817E-6	DEFECT	8.828216207863132E-7	DOCUMENTATION	5.465962690660315E-7	TEST
/* will check current level if some of them are not null	WITHOUT_CLASSIFICATION	0.9999241413678551	WITHOUT_CLASSIFICATION	3.4101559503290863E-5	IMPLEMENTATION	2.8898419989459856E-5	DOCUMENTATION	5.6743060190913355E-6	TEST	5.2449545139931565E-6	DESIGN	1.939392119091821E-6	DEFECT
//do the test	WITHOUT_CLASSIFICATION	0.999232147691868	WITHOUT_CLASSIFICATION	6.28432103434667E-4	TEST	9.843884963026604E-5	IMPLEMENTATION	3.782092218214341E-5	DOCUMENTATION	2.235364292431404E-6	DESIGN	9.250685924915849E-7	DEFECT
// if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.9999998010520484	WITHOUT_CLASSIFICATION	1.1875081369231427E-7	DESIGN	4.261960079014228E-8	IMPLEMENTATION	2.9286249033888063E-8	DEFECT	5.1534805911915986E-9	DOCUMENTATION	3.1378074229455203E-9	TEST
//unwrap it	WITHOUT_CLASSIFICATION	0.9999344687129295	WITHOUT_CLASSIFICATION	2.8683682082265577E-5	IMPLEMENTATION	1.0695653983846505E-5	DESIGN	9.482115978399908E-6	TEST	8.929592495772163E-6	DEFECT	7.740242530173504E-6	DOCUMENTATION
// See if the entity is already bound to this session, if not look at the // entity identifier and assume that the entity is persistent if the // id is not "unsaved" (that is, we rely on foreign keys to keep // database integrity)	WITHOUT_CLASSIFICATION	0.9995362628578053	WITHOUT_CLASSIFICATION	2.3746277988677587E-4	DESIGN	2.255769499342526E-4	DEFECT	4.404292427464817E-7	DOCUMENTATION	2.489948273328509E-7	TEST	7.988303675318836E-9	IMPLEMENTATION
// an unfetched association can only point to // an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.9999967625175958	WITHOUT_CLASSIFICATION	1.2142745266199285E-6	IMPLEMENTATION	6.305360092271961E-7	DOCUMENTATION	6.019992825832229E-7	TEST	5.190836782970079E-7	DEFECT	2.715889073780748E-7	DESIGN
// let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999663196163993	WITHOUT_CLASSIFICATION	2.6477548355267766E-5	IMPLEMENTATION	6.108187540302248E-6	DESIGN	7.9024197327398E-7	DOCUMENTATION	2.0336556477163246E-7	DEFECT	1.0104016713715853E-7	TEST
// let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9996677375957086	WITHOUT_CLASSIFICATION	2.4475428782552873E-4	IMPLEMENTATION	8.477989496035512E-5	DESIGN	2.0944395245140444E-6	DOCUMENTATION	3.717652706008143E-7	DEFECT	2.6201671041566404E-7	TEST
// we use the assumed value, if there is one, to avoid hitting // the database	WITHOUT_CLASSIFICATION	0.9999993233786961	WITHOUT_CLASSIFICATION	3.682035195515265E-7	DEFECT	2.5353479172458754E-7	DESIGN	4.212497618905975E-8	TEST	1.2099751145558594E-8	DOCUMENTATION	6.582652759963438E-10	IMPLEMENTATION
// hit the database, after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.9999275252701605	WITHOUT_CLASSIFICATION	4.4055306792173606E-5	IMPLEMENTATION	1.7722906306747506E-5	DEFECT	9.627084213556717E-6	DESIGN	9.514893074258868E-7	TEST	1.1794321963795538E-7	DOCUMENTATION
// context-entity-identifier returns null explicitly if the entity // is not associated with the persistence context; so make some // deeper checks...	WITHOUT_CLASSIFICATION	0.9999266752429725	WITHOUT_CLASSIFICATION	6.420305971561488E-5	IMPLEMENTATION	4.411420402404541E-6	DOCUMENTATION	1.7798522997713075E-6	DESIGN	1.6151524864026035E-6	TEST	1.3152721232034469E-6	DEFECT
//int count = 0;	WITHOUT_CLASSIFICATION	0.9999334283805347	WITHOUT_CLASSIFICATION	2.9660474029411204E-5	DEFECT	1.2953082005256917E-5	DOCUMENTATION	1.1876533272467234E-5	TEST	1.1470119385042119E-5	IMPLEMENTATION	6.1141077299659E-7	DESIGN
//the first key found after the given key	WITHOUT_CLASSIFICATION	0.999799606382014	WITHOUT_CLASSIFICATION	1.642403882343161E-4	IMPLEMENTATION	1.3500502883165273E-5	DESIGN	1.337148260077446E-5	DOCUMENTATION	5.055662714591739E-6	DEFECT	4.2255815531617275E-6	TEST
//checkForEnd = false;	WITHOUT_CLASSIFICATION	0.9999889981283022	WITHOUT_CLASSIFICATION	7.576214618436234E-6	IMPLEMENTATION	1.3383563010551945E-6	DESIGN	9.879428960276415E-7	DOCUMENTATION	7.572858012022885E-7	DEFECT	3.420720809864734E-7	TEST
//count++;	WITHOUT_CLASSIFICATION	0.9997787341810799	WITHOUT_CLASSIFICATION	8.556845765290352E-5	DEFECT	5.6865709997153055E-5	DOCUMENTATION	3.675708643261572E-5	DESIGN	2.598877454351102E-5	TEST	1.6085790293992292E-5	IMPLEMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9999250475942807	WITHOUT_CLASSIFICATION	3.952592652997204E-5	IMPLEMENTATION	1.4164456976665886E-5	TEST	9.194695723907437E-6	DOCUMENTATION	6.416667922069618E-6	DESIGN	5.650658566661109E-6	DEFECT
//we ran out of keys to try	WITHOUT_CLASSIFICATION	0.9999837151197911	WITHOUT_CLASSIFICATION	5.968894741696265E-6	DEFECT	4.042417038935221E-6	DESIGN	3.911866159321875E-6	DOCUMENTATION	1.248527008649994E-6	IMPLEMENTATION	1.1131752603947949E-6	TEST
//first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.9999735360069001	WITHOUT_CLASSIFICATION	1.885478794997281E-5	IMPLEMENTATION	4.000136718316652E-6	DESIGN	1.962444013359466E-6	DEFECT	9.075887634998382E-7	DOCUMENTATION	7.390356547990405E-7	TEST
//the first id found after the given id	WITHOUT_CLASSIFICATION	0.9996066190237215	WITHOUT_CLASSIFICATION	3.20058328532806E-4	IMPLEMENTATION	2.2165170283904617E-5	DESIGN	1.7844524270501067E-5	TEST	1.768864350340137E-5	DEFECT	1.5624309687990558E-5	DOCUMENTATION
//we ran out of ids to try	WITHOUT_CLASSIFICATION	0.9999386412909375	WITHOUT_CLASSIFICATION	3.290373232520449E-5	DEFECT	1.6668373630701038E-5	DESIGN	5.230389335507504E-6	DOCUMENTATION	3.7680174056529672E-6	IMPLEMENTATION	2.788196365532477E-6	TEST
// look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.9998958521398066	WITHOUT_CLASSIFICATION	6.130433308713815E-5	DESIGN	2.1943681925459524E-5	DEFECT	1.7402186035864106E-5	IMPLEMENTATION	2.5033691566198985E-6	TEST	9.942899881779301E-7	DOCUMENTATION
// ignore this row of results! Note the early exit	WITHOUT_CLASSIFICATION	0.9999873649567951	WITHOUT_CLASSIFICATION	1.1431142602575876E-5	DEFECT	4.842746549856472E-7	TEST	3.814195570087888E-7	DOCUMENTATION	3.077897501499781E-7	IMPLEMENTATION	3.0416640381439164E-8	DESIGN
// initialize this collection	WITHOUT_CLASSIFICATION	0.9999952527226263	WITHOUT_CLASSIFICATION	2.875739572023837E-6	DESIGN	1.2036172399290304E-6	TEST	4.6909013488230936E-7	DOCUMENTATION	1.879250784949765E-7	IMPLEMENTATION	1.0905348314211672E-8	DEFECT
// create one	WITHOUT_CLASSIFICATION	0.9999966714239535	WITHOUT_CLASSIFICATION	1.930931999831242E-6	DESIGN	5.051973133961754E-7	TEST	4.37331833706778E-7	IMPLEMENTATION	3.82810627341649E-7	DOCUMENTATION	7.230427221897159E-8	DEFECT
// warning: can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.9998609095095263	WITHOUT_CLASSIFICATION	1.1194790071722286E-4	DEFECT	2.0111174244028546E-5	DESIGN	6.079976825768076E-6	IMPLEMENTATION	8.397899785127409E-7	DOCUMENTATION	1.116487080806618E-7	TEST
// there were no queued additions // and the role has a cache	WITHOUT_CLASSIFICATION	0.9999914736692409	WITHOUT_CLASSIFICATION	6.85886117559554E-6	DESIGN	1.561067046935991E-6	IMPLEMENTATION	5.9510380050258346E-8	DOCUMENTATION	3.283142144756093E-8	TEST	1.4060735145995647E-8	DEFECT
// and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.9999618373991678	WITHOUT_CLASSIFICATION	3.6639144155616093E-5	DESIGN	9.848298225290924E-7	DEFECT	3.691353647332933E-7	TEST	9.092291256684358E-8	IMPLEMENTATION	7.856857693998815E-8	DOCUMENTATION
// some filters affecting the collection are enabled on the session, so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.9999204729891162	WITHOUT_CLASSIFICATION	6.785764063029355E-5	DESIGN	6.3881551132952175E-6	TEST	3.25139007188735E-6	IMPLEMENTATION	1.8037389716533756E-6	DEFECT	2.2608609641851965E-7	DOCUMENTATION
// cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998122716393715	WITHOUT_CLASSIFICATION	1.279303539414286E-4	DESIGN	2.9297218467491186E-5	IMPLEMENTATION	1.1918679188115336E-5	DOCUMENTATION	1.0043574275516537E-5	TEST	8.538534756000112E-6	DEFECT
// loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999593859193487	WITHOUT_CLASSIFICATION	2.375988706977931E-5	DESIGN	1.0763628036634812E-5	DEFECT	3.3474588521930574E-6	IMPLEMENTATION	2.4164430231952883E-6	TEST	3.26663669353604E-7	DOCUMENTATION
// Collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999578864813601	WITHOUT_CLASSIFICATION	1.179018522247558E-5	DESIGN	1.1601044663959549E-5	IMPLEMENTATION	1.1334763918519246E-5	DEFECT	4.944075624194229E-6	TEST	2.4434492108011007E-6	DOCUMENTATION
// simple cache of param metadata based on query string.  Ideally, the // original "user-supplied query" string should be used to retreive this // metadata (i.e., not the para-list-expanded query string) to avoid // unnecessary cache entries. // Used solely for caching param metadata for native-sql queries, see // getSQLParameterMetadata() for a discussion as to why...	WITHOUT_CLASSIFICATION	0.9595481519158251	WITHOUT_CLASSIFICATION	0.019234782854363263	DESIGN	0.01183972634626419	DEFECT	0.009364526118778861	IMPLEMENTATION	1.160770378779788E-5	TEST	1.2050609807587613E-6	DOCUMENTATION
// the cache of the actual plans...	WITHOUT_CLASSIFICATION	0.999966247380466	WITHOUT_CLASSIFICATION	3.212789532744293E-5	IMPLEMENTATION	9.120663273218895E-7	DESIGN	6.236394754578371E-7	DOCUMENTATION	5.3282198874121535E-8	TEST	3.573620490068876E-8	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9989260628615921	WITHOUT_CLASSIFICATION	7.677202016314123E-4	DESIGN	1.4376704594225997E-4	IMPLEMENTATION	7.854593901788724E-5	DOCUMENTATION	4.701722594702547E-5	TEST	3.688672586933569E-5	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9989260628615921	WITHOUT_CLASSIFICATION	7.677202016314123E-4	DESIGN	1.4376704594225997E-4	IMPLEMENTATION	7.854593901788724E-5	DOCUMENTATION	4.701722594702547E-5	TEST	3.688672586933569E-5	DEFECT
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999783891527826	WITHOUT_CLASSIFICATION	1.652456873161503E-5	DESIGN	2.2520293987880717E-6	DOCUMENTATION	1.4362640524008138E-6	TEST	9.426402555393263E-7	IMPLEMENTATION	4.5534477902879173E-7	DEFECT
// for native-sql queries, the param metadata is determined outside // any relation to a query plan, because query plan creation and/or // retreival for a native-sql query depends on all of the return // types having been set, which might not be the case up-front when // param metadata would be most useful	WITHOUT_CLASSIFICATION	0.9793757816471969	WITHOUT_CLASSIFICATION	0.01668814471769179	DESIGN	0.003930063451009897	DEFECT	3.678524279429717E-6	IMPLEMENTATION	2.0288161302446115E-6	TEST	3.028436920365081E-7	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9999849007642903	WITHOUT_CLASSIFICATION	9.546916186305634E-6	DESIGN	3.630347977640408E-6	IMPLEMENTATION	9.553123445752079E-7	DEFECT	5.094841400019035E-7	DOCUMENTATION	4.5717506110697385E-7	TEST
// Recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996981212408166	WITHOUT_CLASSIFICATION	2.1768656228427874E-4	DESIGN	2.5040933594083288E-5	IMPLEMENTATION	2.125314641147871E-5	DEFECT	1.9324020474544965E-5	TEST	1.857409641896825E-5	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9999849007642903	WITHOUT_CLASSIFICATION	9.546916186305634E-6	DESIGN	3.630347977640408E-6	IMPLEMENTATION	9.553123445752079E-7	DEFECT	5.094841400019035E-7	DOCUMENTATION	4.5717506110697385E-7	TEST
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9999721629971402	WITHOUT_CLASSIFICATION	1.6394270221457358E-5	IMPLEMENTATION	6.984277010797648E-6	DEFECT	2.137615656954098E-6	TEST	2.071451414345127E-6	DESIGN	2.4938855645677346E-7	DOCUMENTATION
// break the outer loop !!!	WITHOUT_CLASSIFICATION	0.9999903601567539	WITHOUT_CLASSIFICATION	8.527344754814564E-6	IMPLEMENTATION	4.1435754021633564E-7	DEFECT	2.988731775870634E-7	DESIGN	2.5470734789337845E-7	DOCUMENTATION	1.445604255952555E-7	TEST
// named parameter	WITHOUT_CLASSIFICATION	0.9991744764168934	WITHOUT_CLASSIFICATION	6.332817046902152E-4	DESIGN	1.6370847817058154E-4	IMPLEMENTATION	1.3241602725759938E-5	DEFECT	9.320966468117918E-6	TEST	5.970831052010884E-6	DOCUMENTATION
// could be either an ordinal or JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9998924395439961	WITHOUT_CLASSIFICATION	7.260784509605907E-5	DESIGN	2.2289437619102417E-5	DEFECT	1.0533327312957622E-5	IMPLEMENTATION	1.2671907128458572E-6	TEST	8.626552629045371E-7	DOCUMENTATION
// a peek ahead showed this as an JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999351890276006	WITHOUT_CLASSIFICATION	4.996388573630766E-5	DESIGN	5.4767631268190886E-6	DOCUMENTATION	4.1199018220032486E-6	TEST	3.720584799790857E-6	IMPLEMENTATION	1.5298369145376832E-6	DEFECT
// make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.9991054452154633	WITHOUT_CLASSIFICATION	8.514056992049627E-4	DESIGN	2.2166021744048793E-5	DEFECT	1.5048544955942296E-5	TEST	5.722706423755682E-6	DOCUMENTATION	2.1181220804865254E-7	IMPLEMENTATION
// pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9999882417197605	WITHOUT_CLASSIFICATION	7.873590271669265E-6	DESIGN	3.6971733377544405E-6	IMPLEMENTATION	1.038351658691756E-7	DOCUMENTATION	4.6144679110046204E-8	TEST	3.753678502430051E-8	DEFECT
// perform the actual work	WITHOUT_CLASSIFICATION	0.9999924349659036	WITHOUT_CLASSIFICATION	6.403607533518771E-6	IMPLEMENTATION	5.247092062059139E-7	DOCUMENTATION	3.9199823125797855E-7	DEFECT	1.757335428162987E-7	DESIGN	6.898558260739166E-8	TEST
// if everything went ok, commit the transaction and close the obtained // connection handle...	WITHOUT_CLASSIFICATION	0.9999986941988329	WITHOUT_CLASSIFICATION	1.2627831330229996E-6	IMPLEMENTATION	2.1224867810127275E-8	DESIGN	1.2492585060786709E-8	TEST	8.710069106512316E-9	DOCUMENTATION	5.905121033808556E-10	DEFECT
// at some point the processing went bad, so we need to: //      1) make sure the connection handle gets released //      2) try to cleanup the JTA context as much as possible	WITHOUT_CLASSIFICATION	0.9792085266446385	WITHOUT_CLASSIFICATION	0.019678764876698902	IMPLEMENTATION	8.473269173221654E-4	DOCUMENTATION	1.6123468810158218E-4	TEST	7.723044481724364E-5	DESIGN	2.6916428421536312E-5	DEFECT
// finally handle the exception	WITHOUT_CLASSIFICATION	0.9999976687020923	WITHOUT_CLASSIFICATION	1.2322524055283182E-6	IMPLEMENTATION	5.986411087637679E-7	DEFECT	3.0741552342455456E-7	DOCUMENTATION	1.6974194062749406E-7	DESIGN	2.3246929271499418E-8	TEST
// a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.9673298867201957	WITHOUT_CLASSIFICATION	0.032549492138627664	DESIGN	7.872976234858808E-5	IMPLEMENTATION	3.269841247801857E-5	DEFECT	7.887832484019949E-6	TEST	1.3051338661067251E-6	DOCUMENTATION
//saveOrUpdateCopy() is deprecated!	WITHOUT_CLASSIFICATION	0.9992492011936033	WITHOUT_CLASSIFICATION	6.975060593246053E-4	DEFECT	3.511394320421471E-5	DESIGN	7.139685235512926E-6	TEST	6.169646497149813E-6	DOCUMENTATION	4.869472135300155E-6	IMPLEMENTATION
// collectionPersister should not be null, but we don't want to throw // an exception if it is null	WITHOUT_CLASSIFICATION	0.9242587509169583	WITHOUT_CLASSIFICATION	0.06933195430629749	DESIGN	0.00473665786036798	DEFECT	0.0016693724188794597	TEST	2.2102347153847506E-6	IMPLEMENTATION	1.0542627813137787E-6	DOCUMENTATION
// otherwise a null or brand new collection // this will also (inefficiently) handle arrays, which // have no snapshot, so we can't do any better //processArrayOrNewCollection(collection, type);	WITHOUT_CLASSIFICATION	0.7612721556417632	DESIGN	0.23868061454526812	WITHOUT_CLASSIFICATION	2.65094987619375E-5	IMPLEMENTATION	1.66883562358958E-5	DOCUMENTATION	3.5269174304818304E-6	TEST	5.050405401799559E-7	DEFECT
// a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.9971999950740277	WITHOUT_CLASSIFICATION	0.0024828630638094665	DESIGN	2.031869001000061E-4	IMPLEMENTATION	1.032094527020835E-4	DEFECT	7.408478340142759E-6	DOCUMENTATION	3.337031020534601E-6	TEST
//do nothing	WITHOUT_CLASSIFICATION	0.9999842025398344	WITHOUT_CLASSIFICATION	5.477174324799491E-6	IMPLEMENTATION	4.419504097862954E-6	DOCUMENTATION	2.817859068761193E-6	DEFECT	2.8071110054009665E-6	TEST	2.758116686020037E-7	DESIGN
//do nothing	WITHOUT_CLASSIFICATION	0.9999842025398344	WITHOUT_CLASSIFICATION	5.477174324799491E-6	IMPLEMENTATION	4.419504097862954E-6	DOCUMENTATION	2.817859068761193E-6	DEFECT	2.8071110054009665E-6	TEST	2.758116686020037E-7	DESIGN
//Force a substitution!	WITHOUT_CLASSIFICATION	0.9999419242354607	WITHOUT_CLASSIFICATION	3.434562430393125E-5	IMPLEMENTATION	1.1976285440517473E-5	DESIGN	6.642489974179928E-6	DOCUMENTATION	2.8062062176212003E-6	DEFECT	2.3051586031403824E-6	TEST
// The user requested a "greater" (i.e. more restrictive) form of // pessimistic lock	WITHOUT_CLASSIFICATION	0.9999903590337866	WITHOUT_CLASSIFICATION	8.352013813645901E-6	DEFECT	6.600026791681582E-7	DESIGN	3.3278573861491035E-7	TEST	2.2865046003300297E-7	IMPLEMENTATION	6.751352191518366E-8	DOCUMENTATION
// the database now holds a lock + the object is flushed from the cache, // so release the soft lock	WITHOUT_CLASSIFICATION	0.9999962879789758	WITHOUT_CLASSIFICATION	2.757903972573729E-6	DEFECT	6.303791700646088E-7	IMPLEMENTATION	1.3132489375359502E-7	TEST	1.224535444019376E-7	DESIGN	6.995944329107916E-8	DOCUMENTATION
// now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.9973087655475557	WITHOUT_CLASSIFICATION	0.002100068565857603	DESIGN	5.242120709999551E-4	DEFECT	5.1681861079825846E-5	IMPLEMENTATION	9.499819681023795E-6	TEST	5.772134826025053E-6	DOCUMENTATION
// Search for collections by reachability, updating their role. // We don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.9993351829795419	WITHOUT_CLASSIFICATION	3.3672935587768986E-4	DESIGN	3.166057215694521E-4	DEFECT	1.1223062724140395E-5	TEST	2.107876484727122E-7	DOCUMENTATION	4.8092638502466055E-8	IMPLEMENTATION
// this is a situation where the entity id is assigned by a post-insert generator // and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.9998440758938382	WITHOUT_CLASSIFICATION	1.22521978330592E-4	IMPLEMENTATION	1.5867493798922798E-5	DESIGN	1.1605949162028201E-5	DEFECT	5.753503447178449E-6	TEST	1.7518142324054964E-7	DOCUMENTATION
// NOTE: we need to do the wrap here even if its not "dirty", // because collections need wrapping but changes to _them_ // don't dirty the container. Also, for versioned data, we // need to wrap before calling searchForDirtyCollections	WITHOUT_CLASSIFICATION	0.9158213565592881	IMPLEMENTATION	0.08415500658536186	WITHOUT_CLASSIFICATION	1.2882191116712992E-5	DEFECT	6.239679447677423E-6	DESIGN	4.329888767100528E-6	TEST	1.850960184744384E-7	DOCUMENTATION
//grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.9998626590120839	WITHOUT_CLASSIFICATION	1.2514483953575495E-4	DESIGN	5.072124690964134E-6	TEST	3.42069658193941E-6	DEFECT	2.164319851657935E-6	IMPLEMENTATION	1.5390072557193901E-6	DOCUMENTATION
// grab its current state	WITHOUT_CLASSIFICATION	0.9999976179818532	WITHOUT_CLASSIFICATION	1.8339677184297616E-6	IMPLEMENTATION	3.4380688579028093E-7	TEST	1.212256103136138E-7	DOCUMENTATION	5.522402433707424E-8	DESIGN	2.7793907897037022E-8	DEFECT
// schedule the update // note that we intentionally do _not_ pass in currentPersistentState!	WITHOUT_CLASSIFICATION	0.9999209159127765	WITHOUT_CLASSIFICATION	3.738071195862569E-5	DESIGN	2.061739036983856E-5	IMPLEMENTATION	1.5397174483264403E-5	DEFECT	4.683452311824613E-6	DOCUMENTATION	1.005358099925865E-6	TEST
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999885115977695	WITHOUT_CLASSIFICATION	5.997122919273003E-6	DEFECT	3.064875754289341E-6	DESIGN	1.3555344879767773E-6	DOCUMENTATION	7.633359983387006E-7	TEST	3.075330706655415E-7	IMPLEMENTATION
// give the Interceptor a chance to process property values, if the properties // were modified by the Interceptor, we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9999936409879812	WITHOUT_CLASSIFICATION	3.328071721163401E-6	DEFECT	1.9961410133621827E-6	DESIGN	9.335067616208311E-7	DOCUMENTATION	8.93842533657039E-8	IMPLEMENTATION	1.1908269373120388E-8	TEST
// compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.9998734284283467	WITHOUT_CLASSIFICATION	1.092920232526352E-4	IMPLEMENTATION	8.571580761342417E-6	DESIGN	6.1783778523239305E-6	DEFECT	2.1620918833944005E-6	TEST	3.674979035090876E-7	DOCUMENTATION
// if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.9999799205841974	WITHOUT_CLASSIFICATION	1.028545518879542E-5	DESIGN	5.991103944955522E-6	DEFECT	2.460325845802435E-6	TEST	1.217536017530098E-6	IMPLEMENTATION	1.2499480556897577E-7	DOCUMENTATION
// increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.9990688537800911	WITHOUT_CLASSIFICATION	3.8543529051415635E-4	DESIGN	2.5669813221610436E-4	IMPLEMENTATION	2.3497567790766523E-4	DEFECT	3.927121192434157E-5	DOCUMENTATION	1.4765907346625878E-5	TEST
// check nullability but do not perform command execute // we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.9999981884929228	WITHOUT_CLASSIFICATION	1.5851952056822846E-6	DEFECT	8.361634550730456E-8	TEST	6.0430580667563E-8	DESIGN	4.45858387704799E-8	IMPLEMENTATION	3.767910672337962E-8	DOCUMENTATION
//give the Interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.9999991226554042	WITHOUT_CLASSIFICATION	3.425827084720713E-7	IMPLEMENTATION	2.719003723986443E-7	DEFECT	1.6730078951416313E-7	DESIGN	8.795242115541862E-8	DOCUMENTATION	7.608304212660344E-9	TEST
//now we might need to recalculate the dirtyProperties array	WITHOUT_CLASSIFICATION	0.9948379690225989	WITHOUT_CLASSIFICATION	0.003953653871925441	DESIGN	9.989705660809838E-4	IMPLEMENTATION	1.1399635075385825E-4	DOCUMENTATION	5.592117638452008E-5	TEST	3.9489012256208005E-5	DEFECT
//use the current version	WITHOUT_CLASSIFICATION	0.9997960973348791	WITHOUT_CLASSIFICATION	1.9076292785346238E-4	IMPLEMENTATION	8.76268793757178E-6	DOCUMENTATION	3.09642941470023E-6	DESIGN	6.562066626453929E-7	TEST	6.244132525133078E-7	DEFECT
// Interceptor returned null, so do the dirtycheck ourself, if possible	WITHOUT_CLASSIFICATION	0.9999896144573884	WITHOUT_CLASSIFICATION	1.0235635007049572E-5	IMPLEMENTATION	1.229288860443249E-7	DESIGN	1.5765268442302763E-8	DOCUMENTATION	7.373334703951607E-9	DEFECT	3.840115202325336E-9	TEST
// object loaded by update()	WITHOUT_CLASSIFICATION	0.9999779233237798	WITHOUT_CLASSIFICATION	1.32230751927609E-5	DEFECT	8.232646174273907E-6	IMPLEMENTATION	4.365653603118204E-7	DOCUMENTATION	1.7411028370840998E-7	TEST	1.0279209271540219E-8	DESIGN
// dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.9995026420506585	WITHOUT_CLASSIFICATION	4.959927196099792E-4	IMPLEMENTATION	8.574861543652205E-7	DOCUMENTATION	2.813132339788614E-7	TEST	1.961088528723764E-7	DEFECT	3.0321490231737787E-8	DESIGN
// dirty check against the database snapshot, if possible/necessary	WITHOUT_CLASSIFICATION	0.999804138687185	WITHOUT_CLASSIFICATION	1.9516467354278698E-4	IMPLEMENTATION	2.9672136611965484E-7	DOCUMENTATION	2.3756837639046606E-7	TEST	1.3951689798620537E-7	DEFECT	2.2832631821212483E-8	DESIGN
// the Interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.9999366216436578	WITHOUT_CLASSIFICATION	6.300152343739713E-5	IMPLEMENTATION	1.6837928930946827E-7	DOCUMENTATION	1.2861619448997982E-7	DEFECT	5.765164696095691E-8	DESIGN	2.2185774087699176E-8	TEST
//even process null collections	WITHOUT_CLASSIFICATION	0.998187569766517	WITHOUT_CLASSIFICATION	0.0014483981626878493	IMPLEMENTATION	2.617664865264677E-4	DESIGN	4.388349785347465E-5	DEFECT	3.676895211913055E-5	DOCUMENTATION	2.1613134295965507E-5	TEST
// get the id from the object	WITHOUT_CLASSIFICATION	0.9999987951493804	WITHOUT_CLASSIFICATION	3.8440254699585875E-7	DESIGN	3.4234604993491056E-7	IMPLEMENTATION	2.3703886668161128E-7	DOCUMENTATION	1.44327460822911E-7	DEFECT	9.673569522546804E-8	TEST
//always do an INSERT, and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.9999830590589008	WITHOUT_CLASSIFICATION	1.4782383277661611E-5	DESIGN	1.1208797076942474E-6	TEST	6.615244032791246E-7	DEFECT	3.1154955535094775E-7	DOCUMENTATION	6.460415516271193E-8	IMPLEMENTATION
//what is the version on the database?	WITHOUT_CLASSIFICATION	0.9784364193057316	WITHOUT_CLASSIFICATION	0.017084074483643467	IMPLEMENTATION	0.0028610881600509472	DEFECT	0.0014727353669854093	DESIGN	1.1184279152477232E-4	TEST	3.383989206368589E-5	DOCUMENTATION
/// HHH-2378	WITHOUT_CLASSIFICATION	0.9999628779540192	WITHOUT_CLASSIFICATION	1.1569114387338764E-5	IMPLEMENTATION	7.895934956936294E-6	DEFECT	6.851713193134747E-6	DOCUMENTATION	5.56275855345534E-6	TEST	5.242524890002555E-6	DESIGN
//will result in a SQL UPDATE:	WITHOUT_CLASSIFICATION	0.9999946744621722	WITHOUT_CLASSIFICATION	3.531052450092943E-6	DEFECT	6.480257985895373E-7	IMPLEMENTATION	6.311434333367584E-7	DESIGN	3.3967658194578086E-7	TEST	1.7563956384045566E-7	DOCUMENTATION
//else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.9999697984294957	WITHOUT_CLASSIFICATION	1.3174306255025332E-5	DESIGN	6.830333200439172E-6	DOCUMENTATION	5.729732235520061E-6	DEFECT	3.7523343383274946E-6	TEST	7.148644748894241E-7	IMPLEMENTATION
// no existing row - do an insert	WITHOUT_CLASSIFICATION	0.9995448800858555	WITHOUT_CLASSIFICATION	2.531137014882701E-4	IMPLEMENTATION	9.639089106119739E-5	DESIGN	6.990272234470634E-5	DEFECT	2.069174560388506E-5	DOCUMENTATION	1.5020853646373532E-5	TEST
//refresh() does not pass an entityName	WITHOUT_CLASSIFICATION	0.9970969728200471	WITHOUT_CLASSIFICATION	0.002395178992323296	DEFECT	2.2675734016990975E-4	IMPLEMENTATION	1.7770640628755562E-4	TEST	8.681176097021469E-5	DESIGN	1.657268020206846E-5	DOCUMENTATION
//do not return a proxy! //(this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.9999674973745386	WITHOUT_CLASSIFICATION	1.826718061503791E-5	DESIGN	5.6897927711109E-6	DEFECT	4.387139424673391E-6	TEST	3.473135603580836E-6	IMPLEMENTATION	6.853770470809486E-7	DOCUMENTATION
//return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.9994098817902628	WITHOUT_CLASSIFICATION	3.5018900464483464E-4	DESIGN	1.7134173680820943E-4	IMPLEMENTATION	5.694142267751817E-5	DEFECT	6.820673699647857E-6	DOCUMENTATION	4.825371906962119E-6	TEST
// return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.999996496803665	WITHOUT_CLASSIFICATION	2.0628577394544187E-6	DEFECT	6.955644486857593E-7	IMPLEMENTATION	6.405178380489488E-7	DESIGN	6.445396582263041E-8	DOCUMENTATION	3.980234281914127E-8	TEST
// return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999985809643329	WITHOUT_CLASSIFICATION	1.114856511098524E-6	IMPLEMENTATION	1.8973475808239354E-7	DESIGN	6.120611326408425E-8	DEFECT	4.649248312549402E-8	DOCUMENTATION	6.7458015062742585E-9	TEST
// this object was already loaded	WITHOUT_CLASSIFICATION	0.9998490795750264	WITHOUT_CLASSIFICATION	7.140301722283113E-5	DESIGN	2.932171841632063E-5	TEST	2.3310512782828493E-5	IMPLEMENTATION	1.5353463680827617E-5	DEFECT	1.1531712870684463E-5	DOCUMENTATION
// Entity was found in second-level cache...	WITHOUT_CLASSIFICATION	0.9999696310299954	WITHOUT_CLASSIFICATION	2.2958141637407626E-5	DESIGN	2.8455851267211176E-6	IMPLEMENTATION	1.926954856608286E-6	DEFECT	1.7348888482755073E-6	DOCUMENTATION	9.033995354092523E-7	TEST
// make it circular-reference safe	WITHOUT_CLASSIFICATION	0.9999719002765708	WITHOUT_CLASSIFICATION	2.491828930523932E-5	DESIGN	1.2051420486324117E-6	DEFECT	1.0443519347837262E-6	IMPLEMENTATION	7.378996170919989E-7	DOCUMENTATION	1.940405236167864E-7	TEST
// intializes result by side-effect	WITHOUT_CLASSIFICATION	0.9999973506169075	WITHOUT_CLASSIFICATION	1.4093763637101998E-6	DEFECT	1.112309315499308E-6	DESIGN	7.172748365073737E-8	DOCUMENTATION	3.278564584304372E-8	TEST	2.3184283809522267E-8	IMPLEMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Pre-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999900311630169	WITHOUT_CLASSIFICATION	4.429086172856402E-6	DESIGN	3.2646341337687058E-6	DEFECT	1.231962836250221E-6	TEST	6.415931521765255E-7	DOCUMENTATION	4.015606880623999E-7	IMPLEMENTATION
//some statistics	WITHOUT_CLASSIFICATION	0.9999769932928949	WITHOUT_CLASSIFICATION	1.1415867848197773E-5	IMPLEMENTATION	7.048528664627291E-6	DOCUMENTATION	2.212927635593554E-6	TEST	1.801980089392665E-6	DESIGN	5.274028671496533E-7	DEFECT
//safe from concurrent modification because of how entryList() is implemented on IdentityMap	WITHOUT_CLASSIFICATION	0.9799047741959331	WITHOUT_CLASSIFICATION	0.019565047543589783	IMPLEMENTATION	3.740187805756807E-4	DESIGN	1.1719392748386399E-4	DEFECT	3.5528584663101166E-5	DOCUMENTATION	3.436967754532571E-6	TEST
// Initialize dirty flags for arrays + collections with composite elements // and reset reached, doupdate, etc.	WITHOUT_CLASSIFICATION	0.9998096558131198	WITHOUT_CLASSIFICATION	1.8940796431196383E-4	IMPLEMENTATION	5.1678154960747E-7	DEFECT	3.384078067607456E-7	DESIGN	6.243067574658557E-8	TEST	1.860253621752513E-8	DOCUMENTATION
// Among other things, updateReachables() will recursively load all // collections that are moving roles. This might cause entities to // be loaded.	WITHOUT_CLASSIFICATION	0.934407661027664	WITHOUT_CLASSIFICATION	0.049323930157076264	DESIGN	0.009997640468939703	DEFECT	0.006162167150206459	IMPLEMENTATION	1.0572861510517396E-4	TEST	2.8725810083378903E-6	DOCUMENTATION
// So this needs to be safe from concurrent modification problems. // It is safe because of how IdentityMap implements entrySet()	WITHOUT_CLASSIFICATION	0.5151296453302681	WITHOUT_CLASSIFICATION	0.42299451927518544	DESIGN	0.053754953396921504	IMPLEMENTATION	0.005022805506125636	DEFECT	0.003038158929431636	DOCUMENTATION	5.991756206762793E-5	TEST
// Update the status of the object and if necessary, schedule an update	WITHOUT_CLASSIFICATION	0.9999985478873274	WITHOUT_CLASSIFICATION	1.2322861369952484E-6	DEFECT	1.2520345476594597E-7	IMPLEMENTATION	4.103221960105968E-8	DOCUMENTATION	4.016671424143074E-8	DESIGN	1.342414691896325E-8	TEST
// Schedule updates to collections:	WITHOUT_CLASSIFICATION	0.9999833905226455	WITHOUT_CLASSIFICATION	8.513003648721E-6	DEFECT	4.870334324877737E-6	IMPLEMENTATION	1.5455660986672944E-6	TEST	1.0699445254669705E-6	DESIGN	6.106287566636556E-7	DOCUMENTATION
// we need to lock the collection caches before // executing entity inserts/updates in order to // account for bidi associations	WITHOUT_CLASSIFICATION	0.9971678403920007	WITHOUT_CLASSIFICATION	0.0014094174641247183	IMPLEMENTATION	0.0011196566795148887	DEFECT	1.4535979627063064E-4	TEST	1.2106782387820248E-4	DESIGN	3.665784421107413E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Post-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999952695709644	WITHOUT_CLASSIFICATION	1.9634972540320237E-6	DEFECT	1.1381566128340457E-6	TEST	7.226306304865311E-7	DOCUMENTATION	5.684684148845553E-7	DESIGN	3.376761233132574E-7	IMPLEMENTATION
//the database has changed now, so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.9999967834426222	WITHOUT_CLASSIFICATION	2.9715465885941003E-6	IMPLEMENTATION	1.5613177531177508E-7	TEST	4.100642933507338E-8	DOCUMENTATION	3.4972698332660286E-8	DESIGN	1.2899886241424771E-8	DEFECT
//if the collection is dereferenced, remove from the session cache //iter.remove(); //does not work, since the entrySet is not backed by the set	WITHOUT_CLASSIFICATION	0.9994737543194997	WITHOUT_CLASSIFICATION	5.060604674377992E-4	DEFECT	1.7529614340040944E-5	DESIGN	2.627563390783963E-6	TEST	1.4191390794441879E-8	DOCUMENTATION	1.3843940696749255E-8	IMPLEMENTATION
//otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9985770690809347	WITHOUT_CLASSIFICATION	0.0013317343039394632	DESIGN	7.977906639310828E-5	IMPLEMENTATION	9.220230085455203E-6	TEST	1.844140783398802E-6	DEFECT	3.531778638542721E-7	DOCUMENTATION
//get a snapshot	WITHOUT_CLASSIFICATION	0.9999178833906384	WITHOUT_CLASSIFICATION	6.513110026874114E-5	IMPLEMENTATION	6.711163046701148E-6	DEFECT	3.834982896882623E-6	DESIGN	3.3838852249578648E-6	TEST	3.05547792426173E-6	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999990401779224	WITHOUT_CLASSIFICATION	4.930221328672678E-7	DESIGN	2.795986189906485E-7	DOCUMENTATION	7.973009427833126E-8	DEFECT	7.810236048324232E-8	TEST	2.9368870972588087E-8	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999990401779224	WITHOUT_CLASSIFICATION	4.930221328672678E-7	DESIGN	2.795986189906485E-7	DOCUMENTATION	7.973009427833126E-8	DEFECT	7.810236048324232E-8	TEST	2.9368870972588087E-8	IMPLEMENTATION
// key is an entity involved with the operation performed by the listener; // value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.9999780409243908	WITHOUT_CLASSIFICATION	1.5068612204383015E-5	DEFECT	3.31223079655196E-6	TEST	2.988446348839718E-6	DESIGN	4.4396222368017416E-7	DOCUMENTATION	1.458240355356271E-7	IMPLEMENTATION
// EARLY EXIT!!!	WITHOUT_CLASSIFICATION	0.9998927938011195	WITHOUT_CLASSIFICATION	5.749443236343724E-5	IMPLEMENTATION	2.4490654012723746E-5	DEFECT	1.219601254920539E-5	DOCUMENTATION	8.045058229140476E-6	TEST	4.980041726094462E-6	DESIGN
//ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.9999176874622542	WITHOUT_CLASSIFICATION	4.2071158054031096E-5	DESIGN	1.7068610968575072E-5	DEFECT	1.2671973448390392E-5	IMPLEMENTATION	9.523467062581179E-6	DOCUMENTATION	9.7732821214341E-7	TEST
// before any callbacks, etc, so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.9999549915549905	WITHOUT_CLASSIFICATION	4.3118220746295886E-5	DESIGN	1.100054469038131E-6	IMPLEMENTATION	4.37153651789016E-7	TEST	2.8292288576058337E-7	DEFECT	7.009325677621302E-8	DOCUMENTATION
// Ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.9999683902804097	WITHOUT_CLASSIFICATION	1.7436827334015943E-5	IMPLEMENTATION	8.787952269210847E-6	DESIGN	4.090356990933439E-6	DEFECT	1.0721304006858684E-6	TEST	2.2245259553490144E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// cascade-delete to collections BEFORE the collection owner is deleted	WITHOUT_CLASSIFICATION	0.9998938473002779	WITHOUT_CLASSIFICATION	6.797223836380803E-5	IMPLEMENTATION	3.189135952242287E-5	DESIGN	3.5834086011169355E-6	TEST	2.380928277625851E-6	DEFECT	3.2476495708692044E-7	DOCUMENTATION
// cascade-delete to many-to-one AFTER the parent was deleted	WITHOUT_CLASSIFICATION	0.9992641883078055	WITHOUT_CLASSIFICATION	6.131382406979431E-4	DESIGN	8.793892288514364E-5	IMPLEMENTATION	2.6029062828627925E-5	DEFECT	6.4549948257436824E-6	DOCUMENTATION	2.2504709569868175E-6	TEST
// if it is an initialized proxy, let cascade // handle it later on	WITHOUT_CLASSIFICATION	0.9999991110283318	WITHOUT_CLASSIFICATION	7.747420841899612E-7	DESIGN	5.158973149725993E-8	DEFECT	5.011363152764242E-8	IMPLEMENTATION	8.6344909135078E-9	TEST	3.891730148889723E-9	DOCUMENTATION
//assign the requested id to the proxy, *before* //reassociating the proxy	WITHOUT_CLASSIFICATION	0.9999557888914543	WITHOUT_CLASSIFICATION	1.984282761255956E-5	TEST	1.1139479216696632E-5	DEFECT	6.7932664382526626E-6	DOCUMENTATION	6.126108400912647E-6	IMPLEMENTATION	3.094268772000567E-7	DESIGN
// an uninitialized proxy, noop, don't even need to // return an id, since it is never a save()	WITHOUT_CLASSIFICATION	0.9999923126493563	WITHOUT_CLASSIFICATION	5.538373544364534E-6	DESIGN	1.3902335282313928E-6	IMPLEMENTATION	6.702203480504944E-7	DEFECT	8.045129955756767E-8	DOCUMENTATION	8.071923642981788E-9	TEST
//initialize properties of the event:	WITHOUT_CLASSIFICATION	0.9999736121323836	WITHOUT_CLASSIFICATION	1.6666604588397903E-5	DEFECT	4.065298456283888E-6	IMPLEMENTATION	3.584817312253774E-6	DOCUMENTATION	1.4528822769727745E-6	DESIGN	6.182649824017342E-7	TEST
//return the id in the event object	WITHOUT_CLASSIFICATION	0.998805347676159	WITHOUT_CLASSIFICATION	8.373334371688869E-4	DESIGN	2.525671653944991E-4	DEFECT	6.328430278452747E-5	DOCUMENTATION	3.621739831235026E-5	IMPLEMENTATION	5.250020180766136E-6	TEST
//TRANSIENT or DELETED	WITHOUT_CLASSIFICATION	0.9999824054484886	WITHOUT_CLASSIFICATION	6.711042012351694E-6	DEFECT	4.84738813818972E-6	IMPLEMENTATION	3.340725560232338E-6	DOCUMENTATION	1.7615947944938968E-6	TEST	9.338010062581985E-7	DESIGN
// use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.999998462112425	WITHOUT_CLASSIFICATION	5.81848715116298E-7	IMPLEMENTATION	5.256525527968226E-7	DOCUMENTATION	4.1086404483508806E-7	DESIGN	1.2729061058261792E-8	TEST	6.793200988253179E-9	DEFECT
// assume this is a newly instantiated transient object // which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.999524086864118	WITHOUT_CLASSIFICATION	3.7309081875830813E-4	DESIGN	6.210090684861646E-5	DEFECT	2.8747393242661146E-5	TEST	9.811901854479401E-6	DOCUMENTATION	2.162115177901334E-6	IMPLEMENTATION
// this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.9992917074194823	WITHOUT_CLASSIFICATION	6.096711319004055E-4	DEFECT	3.458495552463036E-5	IMPLEMENTATION	3.188471148071654E-5	TEST	2.523375778165345E-5	DESIGN	6.918023830345427E-6	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9998991703660046	WITHOUT_CLASSIFICATION	5.946972446304528E-5	DEFECT	4.10719853527438E-5	IMPLEMENTATION	1.3101469335016277E-7	TEST	1.1474315200007711E-7	DESIGN	4.216633430865281E-8	DOCUMENTATION
//cachedState,	WITHOUT_CLASSIFICATION	0.9998421372600044	WITHOUT_CLASSIFICATION	1.0247412830832749E-4	IMPLEMENTATION	1.8318738076203484E-5	DOCUMENTATION	1.2587656637678833E-5	TEST	1.2285908757591891E-5	DEFECT	1.2196308215742357E-5	DESIGN
//assume true, since we don't really know, and it doesn't matter	WITHOUT_CLASSIFICATION	0.9999581433324058	WITHOUT_CLASSIFICATION	1.7875914365815662E-5	DEFECT	1.4167536661963585E-5	DESIGN	4.807456539968752E-6	DOCUMENTATION	3.880538558471165E-6	TEST	1.125221467904888E-6	IMPLEMENTATION
//a "detached" collection!	WITHOUT_CLASSIFICATION	0.9990775945530916	WITHOUT_CLASSIFICATION	4.5573923733089624E-4	IMPLEMENTATION	2.6963953504506247E-4	DESIGN	1.2101638827294144E-4	DEFECT	3.8613846875120586E-5	TEST	3.7396439384414654E-5	DOCUMENTATION
// if the collection belonged to a different entity, // clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.9999979952149054	WITHOUT_CLASSIFICATION	1.2319419358967637E-6	DEFECT	6.648400583975332E-7	DESIGN	7.35418540754051E-8	TEST	2.122667834272575E-8	DOCUMENTATION	1.323456794560239E-8	IMPLEMENTATION
//log.debug( "calling onLoad()" );	WITHOUT_CLASSIFICATION	0.999971018095004	WITHOUT_CLASSIFICATION	1.0047560657206368E-5	DEFECT	9.517021980021783E-6	DESIGN	5.170485934762169E-6	IMPLEMENTATION	2.564875171627508E-6	DOCUMENTATION	1.6819612525377603E-6	TEST
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9996824565809002	WITHOUT_CLASSIFICATION	1.0349582361084903E-4	IMPLEMENTATION	9.910213441945876E-5	DEFECT	4.480202252192679E-5	DOCUMENTATION	3.797036671251979E-5	DESIGN	3.2173071835142786E-5	TEST
// note: performExecutions() clears all collectionXxxxtion  // collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.9375030009226224	WITHOUT_CLASSIFICATION	0.03254816685048431	DEFECT	0.025991525244269648	IMPLEMENTATION	0.0037311725658615564	DESIGN	1.6181326666874022E-4	TEST	6.432115009343866E-5	DOCUMENTATION
// if no array holder we found an unwrappered array (this can't occur, // because we now always call wrap() before getting to here) // return (ah==null) ? true : searchForDirtyCollections(ah, type);	WITHOUT_CLASSIFICATION	0.990995769487746	WITHOUT_CLASSIFICATION	0.005508729371520167	DESIGN	0.0034417527593177642	DEFECT	4.735685001179416E-5	IMPLEMENTATION	5.542358459132947E-6	TEST	8.491729450675191E-7	DOCUMENTATION
// if not wrappered yet, its dirty (this can't occur, because // we now always call wrap() before getting to here) // return ( ! (obj instanceof PersistentCollection) ) ? //true : searchForDirtyCollections( (PersistentCollection) obj, type );	WITHOUT_CLASSIFICATION	0.9478984317593374	DESIGN	0.036177710865471335	DEFECT	0.015356909389687232	WITHOUT_CLASSIFICATION	5.285091336268902E-4	IMPLEMENTATION	3.4315962821585907E-5	TEST	4.122889055704622E-6	DOCUMENTATION
//we need to check even if it was not initialized, because of delayed adds!	WITHOUT_CLASSIFICATION	0.9964850373869578	WITHOUT_CLASSIFICATION	0.0012572752385251829	IMPLEMENTATION	0.0012433507569144912	DOCUMENTATION	6.211782831352526E-4	DESIGN	3.6575971542487923E-4	DEFECT	2.7398619042361918E-5	TEST
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9993312620005943	WITHOUT_CLASSIFICATION	3.4026568686410663E-4	DEFECT	1.7057378384444975E-4	IMPLEMENTATION	5.994560830747162E-5	DOCUMENTATION	4.9640835400323495E-5	DESIGN	4.831208498935107E-5	TEST
// find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.9999494432594279	WITHOUT_CLASSIFICATION	3.556072070713986E-5	DESIGN	1.3024080110713327E-5	IMPLEMENTATION	1.2600591551429503E-6	TEST	4.105647020197337E-7	DOCUMENTATION	3.0131589712194E-7	DEFECT
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9996824565809002	WITHOUT_CLASSIFICATION	1.0349582361084903E-4	IMPLEMENTATION	9.910213441945876E-5	DEFECT	4.480202252192679E-5	DOCUMENTATION	3.797036671251979E-5	DESIGN	3.2173071835142786E-5	TEST
// Check the persistence context for an entry relating to this // entity to be merged...	WITHOUT_CLASSIFICATION	0.9983810081330426	WITHOUT_CLASSIFICATION	0.0016022230430412	DESIGN	1.11040570030829E-5	IMPLEMENTATION	2.4537152722305965E-6	TEST	1.6839169415650602E-6	DOCUMENTATION	1.527134699224294E-6	DEFECT
// we have specialized case of a detached entity from the // perspective of the merge operation.  Specifically, we // have an incoming entity instance which has a corresponding // entry in the current persistence context, but registered // under a different entity instance	WITHOUT_CLASSIFICATION	0.9999999817514674	WITHOUT_CLASSIFICATION	1.3864114360733463E-8	DESIGN	3.4471647509058655E-9	DOCUMENTATION	8.714316237825542E-10	DEFECT	5.4231729845853226E-11	IMPLEMENTATION	1.1590003054935135E-11	TEST
//DELETED	WITHOUT_CLASSIFICATION	0.9997291961384657	WITHOUT_CLASSIFICATION	1.041845711788933E-4	DESIGN	5.0756572117931284E-5	TEST	4.382996199997511E-5	DOCUMENTATION	4.358279730381356E-5	DEFECT	2.8449958933724573E-5	IMPLEMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.999984305968247	WITHOUT_CLASSIFICATION	7.928956149171065E-6	DESIGN	5.058650869356851E-6	IMPLEMENTATION	1.2985754669197506E-6	DEFECT	8.753992676290739E-7	DOCUMENTATION	5.324500000094151E-7	TEST
// cascade first, so that all unsaved objects get their // copy created before we actually copy //cascadeOnMerge(event, persister, entity, copyCache, Cascades.CASCADE_BEFORE_MERGE);	WITHOUT_CLASSIFICATION	0.9999495314412986	WITHOUT_CLASSIFICATION	4.786530584410823E-5	IMPLEMENTATION	1.0515181976160636E-6	DEFECT	9.318064532904196E-7	TEST	3.882262598567291E-7	DOCUMENTATION	2.3170194668788716E-7	DESIGN
//this bit is only *really* absolutely necessary for handling //requestedId, but is also good if we merge multiple object //graphs, since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.9736256080081656	WITHOUT_CLASSIFICATION	0.017792342962407094	IMPLEMENTATION	0.007653292527354295	DESIGN	8.950058286755665E-4	TEST	2.4411828142506912E-5	DOCUMENTATION	9.338845255054774E-6	DEFECT
// continue...; we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.9999439557905816	WITHOUT_CLASSIFICATION	5.2291691898801644E-5	DEFECT	2.1937876345999766E-6	IMPLEMENTATION	9.119256829387381E-7	DESIGN	5.624184205051902E-7	TEST	8.438578144578386E-8	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999963308836457	WITHOUT_CLASSIFICATION	2.7096105627748046E-6	IMPLEMENTATION	3.85944808651006E-7	TEST	2.0719213685133753E-7	DOCUMENTATION	2.0362923109961528E-7	DEFECT	1.6273961497157913E-7	DESIGN
// check that entity id = requestedId	WITHOUT_CLASSIFICATION	0.9793239544139579	WITHOUT_CLASSIFICATION	0.020515232712140674	IMPLEMENTATION	1.3645657715811142E-4	TEST	1.5337354408215526E-5	DOCUMENTATION	4.913486722529601E-6	DESIGN	4.105455612604216E-6	DEFECT
//before cascade!	WITHOUT_CLASSIFICATION	0.999984305968247	WITHOUT_CLASSIFICATION	7.928956149171065E-6	DESIGN	5.058650869356851E-6	IMPLEMENTATION	1.2985754669197506E-6	DEFECT	8.753992676290739E-7	DOCUMENTATION	5.324500000094151E-7	TEST
// we got here because we assumed that an instance // with an assigned id was detached, when it was // really persistent	WITHOUT_CLASSIFICATION	0.999893366844434	WITHOUT_CLASSIFICATION	9.698193922009731E-5	DESIGN	5.703795795299163E-6	DEFECT	2.1630144508439383E-6	DOCUMENTATION	1.5897605204292157E-6	TEST	1.946455792734246E-7	IMPLEMENTATION
// cascade first, so that all unsaved objects get their  // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999909918659856	WITHOUT_CLASSIFICATION	7.393563906782727E-6	IMPLEMENTATION	6.136564360372675E-7	TEST	4.3252465555530443E-7	DOCUMENTATION	2.894883143453479E-7	DEFECT	2.7890070158152734E-7	DESIGN
//copyValues works by reflection, so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.9722087857328232	WITHOUT_CLASSIFICATION	0.025858661636546085	DESIGN	8.737387934816824E-4	DEFECT	5.538557198946899E-4	DOCUMENTATION	4.727567391978153E-4	IMPLEMENTATION	3.220137805648322E-5	TEST
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9997565204786392	WITHOUT_CLASSIFICATION	1.143937943084671E-4	IMPLEMENTATION	4.2558406087601705E-5	DEFECT	3.3489092057446136E-5	DESIGN	2.8870216302778423E-5	DOCUMENTATION	2.4168012604618537E-5	TEST
//source.getBatcher().executeBatch(); //found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.9990646454848131	WITHOUT_CLASSIFICATION	7.239296344309505E-4	IMPLEMENTATION	1.8363323324700092E-4	DEFECT	2.0918702562167255E-5	DESIGN	4.877003977460724E-6	TEST	1.995940969230139E-6	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999885115977695	WITHOUT_CLASSIFICATION	5.997122919273003E-6	DEFECT	3.064875754289341E-6	DESIGN	1.3555344879767773E-6	DOCUMENTATION	7.633359983387006E-7	TEST	3.075330706655415E-7	IMPLEMENTATION
//now done in EntityIdentityInsertAction //persister.setIdentifier( entity, id, source.getEntityMode() );	WITHOUT_CLASSIFICATION	0.9997953629737465	WITHOUT_CLASSIFICATION	1.9707267001444864E-4	DESIGN	3.4039662141533125E-6	IMPLEMENTATION	2.349141340570893E-6	DEFECT	1.1744742711043E-6	DOCUMENTATION	6.367744132450513E-7	TEST
//source.getPersistenceContext().removeNonExist( new EntityKey( id, persister, source.getEntityMode() ) );	WITHOUT_CLASSIFICATION	0.999797847336162	WITHOUT_CLASSIFICATION	1.371814590205197E-4	DESIGN	3.0002117699597452E-5	IMPLEMENTATION	2.1522170513209097E-5	TEST	8.081670482949325E-6	DEFECT	5.365246121592707E-6	DOCUMENTATION
//keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.9997822004199849	WITHOUT_CLASSIFICATION	1.3931981079166165E-4	DESIGN	6.598881209664638E-5	DEFECT	6.23478591902973E-6	DOCUMENTATION	4.672309266849752E-6	IMPLEMENTATION	1.5838619409300547E-6	TEST
// cascade-save to many-to-one BEFORE the parent is saved	WITHOUT_CLASSIFICATION	0.9627981403507718	WITHOUT_CLASSIFICATION	0.03047040214624231	IMPLEMENTATION	0.003715055400457257	DEFECT	0.0025989017880856382	DESIGN	3.1593355278087404E-4	DOCUMENTATION	1.01566761662225E-4	TEST
//pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.9999884183962555	WITHOUT_CLASSIFICATION	9.426207902981071E-6	DESIGN	1.206257172874724E-6	DOCUMENTATION	7.304193810239995E-7	TEST	2.1715345566368422E-7	DEFECT	1.5658320950594922E-9	IMPLEMENTATION
// the object is persistent	WITHOUT_CLASSIFICATION	0.9998832356296598	WITHOUT_CLASSIFICATION	8.097301610381973E-5	IMPLEMENTATION	1.2123814495011705E-5	DEFECT	9.065458970074446E-6	DOCUMENTATION	8.901583903458553E-6	TEST	5.700496867902907E-6	DESIGN
//the entity is associated with the session, so check its status	WITHOUT_CLASSIFICATION	0.9999099760310572	WITHOUT_CLASSIFICATION	6.330426187773474E-5	IMPLEMENTATION	1.7045098826422052E-5	TEST	9.37554096313356E-6	DOCUMENTATION	1.5835385871208467E-7	DEFECT	1.4071341680802022E-7	DESIGN
// do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.9999832290963915	WITHOUT_CLASSIFICATION	1.2890120285427411E-5	IMPLEMENTATION	2.3961646040384053E-6	DEFECT	7.773518448494609E-7	DESIGN	4.878407435026109E-7	TEST	2.194261307139149E-7	DOCUMENTATION
//ie. e.status==DELETED	WITHOUT_CLASSIFICATION	0.9999958636178238	WITHOUT_CLASSIFICATION	2.483811653219727E-6	IMPLEMENTATION	6.252631030670648E-7	TEST	5.136062483597163E-7	DOCUMENTATION	4.09029188912313E-7	DEFECT	1.0467198258766493E-7	DESIGN
// the object is transient or detached	WITHOUT_CLASSIFICATION	0.9991573988162293	WITHOUT_CLASSIFICATION	7.765548310170621E-4	IMPLEMENTATION	4.969070840535672E-5	DEFECT	7.2313554361042465E-6	DOCUMENTATION	5.528059258870931E-6	TEST	3.5962296533122564E-6	DESIGN
//NOTE EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9997488599127426	WITHOUT_CLASSIFICATION	9.451574027073084E-5	IMPLEMENTATION	7.856878046061033E-5	DEFECT	3.3004398027814603E-5	DOCUMENTATION	2.549899305664481E-5	TEST	1.9552175441362096E-5	DESIGN
// Private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.9999928953243893	WITHOUT_CLASSIFICATION	3.592672911736363E-6	IMPLEMENTATION	3.0700860869037606E-6	DESIGN	2.5878166449286787E-7	TEST	1.750325331248435E-7	DOCUMENTATION	8.102414317124483E-9	DEFECT
// First, try to find a matching constructor accepting a ViolatedConstraintNameExtracter param...	WITHOUT_CLASSIFICATION	0.9999996312102277	WITHOUT_CLASSIFICATION	2.970077661456778E-7	IMPLEMENTATION	3.850115592478775E-8	TEST	2.2352039926531515E-8	DESIGN	7.68720003071915E-9	DOCUMENTATION	3.24161043653278E-9	DEFECT
// eat it and try next	WITHOUT_CLASSIFICATION	0.9998816154508601	WITHOUT_CLASSIFICATION	8.937361031738584E-5	IMPLEMENTATION	1.96210122062283E-5	DEFECT	5.278412424552526E-6	DOCUMENTATION	2.9212523101067934E-6	TEST	1.1902618817358132E-6	DESIGN
// Otherwise, try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.9999974575364513	WITHOUT_CLASSIFICATION	2.394003932586866E-6	IMPLEMENTATION	1.144643858021627E-7	DOCUMENTATION	2.177944485762019E-8	TEST	9.868343999278462E-9	DESIGN	2.347441357513471E-9	DEFECT
// oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.9998348996662766	WITHOUT_CLASSIFICATION	1.558504335960866E-4	DESIGN	5.876737980620022E-6	IMPLEMENTATION	1.9722387659152486E-6	TEST	9.215018803970957E-7	DOCUMENTATION	4.794215003125553E-7	DEFECT
// CollectionPropertyMapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.9995472249779116	WITHOUT_CLASSIFICATION	3.839423530621122E-4	DEFECT	4.33732020448781E-5	IMPLEMENTATION	1.808120414163115E-5	DESIGN	5.635637037832147E-6	TEST	1.742625801772668E-6	DOCUMENTATION
// remove initial ", "	WITHOUT_CLASSIFICATION	0.9999876960793957	WITHOUT_CLASSIFICATION	9.135726976715017E-6	DESIGN	2.538526202751083E-6	IMPLEMENTATION	2.807010378938795E-7	TEST	1.8701327748280778E-7	DOCUMENTATION	1.6195310947744179E-7	DEFECT
// remove initial " and "	WITHOUT_CLASSIFICATION	0.9999497563729743	WITHOUT_CLASSIFICATION	3.6147061027225975E-5	DESIGN	1.3423096530820355E-5	IMPLEMENTATION	2.619754068715208E-7	DEFECT	2.2111445866223968E-7	DOCUMENTATION	1.903796019981302E-7	TEST
//beforeClassTokens.add("new"); DEFINITELY DON'T HAVE THIS!!	WITHOUT_CLASSIFICATION	0.9999137622162028	WITHOUT_CLASSIFICATION	5.1565999048340656E-5	DESIGN	1.853088150281212E-5	IMPLEMENTATION	9.485677682834474E-6	DEFECT	4.670184283168058E-6	DOCUMENTATION	1.9850412800273192E-6	TEST
//notAfterClassTokens.add(",");	WITHOUT_CLASSIFICATION	0.9999123243779787	WITHOUT_CLASSIFICATION	6.090683446048915E-5	IMPLEMENTATION	1.3402098939359553E-5	DESIGN	5.908844989325769E-6	DEFECT	4.791826518282176E-6	DOCUMENTATION	2.666017113864613E-6	TEST
// just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.9999928256544008	WITHOUT_CLASSIFICATION	6.1833890022970355E-6	IMPLEMENTATION	4.466451661945396E-7	DESIGN	3.23422083924428E-7	TEST	1.420157820892894E-7	DEFECT	7.887356459962288E-8	DOCUMENTATION
//update last non-whitespace token, if necessary	WITHOUT_CLASSIFICATION	0.9999791027721256	WITHOUT_CLASSIFICATION	1.0536158363426951E-5	DESIGN	6.93924409301509E-6	DEFECT	1.8177799353284376E-6	DOCUMENTATION	1.3280006904886914E-6	TEST	2.760447919615738E-7	IMPLEMENTATION
// select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.9999740428495347	WITHOUT_CLASSIFICATION	2.067131092190851E-5	DESIGN	4.2113250524517E-6	DEFECT	9.871418612185228E-7	TEST	7.466363461942074E-8	DOCUMENTATION	1.2708995014424102E-8	IMPLEMENTATION
//scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.9999006298712967	WITHOUT_CLASSIFICATION	5.5407817176797814E-5	IMPLEMENTATION	2.6638780905745644E-5	DEFECT	6.748083246891188E-6	DESIGN	6.740493817795653E-6	DOCUMENTATION	3.834953555975734E-6	TEST
// Note this!!	WITHOUT_CLASSIFICATION	0.9999482878586444	WITHOUT_CLASSIFICATION	1.7577088545361498E-5	TEST	1.3877725888399024E-5	DOCUMENTATION	1.2388266873049037E-5	DESIGN	5.88867949394444E-6	IMPLEMENTATION	1.980380554888663E-6	DEFECT
// Error message constants.	WITHOUT_CLASSIFICATION	0.9999666538075688	WITHOUT_CLASSIFICATION	2.9143252265301684E-5	IMPLEMENTATION	1.9419442521531397E-6	TEST	1.2706021407929248E-6	DOCUMENTATION	7.30487770848114E-7	DEFECT	2.599060020834381E-7	DESIGN
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999804147241128	WITHOUT_CLASSIFICATION	1.2794457171366205E-5	IMPLEMENTATION	5.821987323208049E-6	DESIGN	4.206498231572978E-7	DOCUMENTATION	3.893371623006255E-7	TEST	1.588444071578563E-7	DEFECT
// semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997467666289115	WITHOUT_CLASSIFICATION	2.3130907647030873E-4	DESIGN	1.4838640681801099E-5	IMPLEMENTATION	3.78137423341581E-6	DOCUMENTATION	1.7952769289116306E-6	TEST	1.509002774011344E-6	DEFECT
// Handle collection-fiter compilation. // IMPORTANT NOTE: This is modifying the INPUT (HQL) tree, not the output tree!	WITHOUT_CLASSIFICATION	0.9980034932319625	WITHOUT_CLASSIFICATION	0.0010531581728000492	DEFECT	6.232631722043554E-4	DESIGN	3.143692914898097E-4	IMPLEMENTATION	5.55352046723595E-6	TEST	1.6261107616059574E-7	DOCUMENTATION
// Show the modified AST.	WITHOUT_CLASSIFICATION	0.9999647923404892	WITHOUT_CLASSIFICATION	3.4557651506268146E-5	IMPLEMENTATION	3.429886716792211E-7	DOCUMENTATION	1.5884835838255986E-7	TEST	8.006605900145663E-8	DEFECT	6.810491545981207E-8	DESIGN
// Create a parameter specification for the collection filter...	WITHOUT_CLASSIFICATION	0.9998912928304655	WITHOUT_CLASSIFICATION	1.0557365163331161E-4	DESIGN	1.1458065477370125E-6	TEST	1.0905194587865493E-6	IMPLEMENTATION	8.490190829847049E-7	DOCUMENTATION	4.817281173597959E-8	DEFECT
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999836613802704	WITHOUT_CLASSIFICATION	1.475459205849061E-5	IMPLEMENTATION	7.204222086923414E-7	DESIGN	4.3138708103342556E-7	DOCUMENTATION	3.601874710675189E-7	TEST	7.203091027300994E-8	DEFECT
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999836613802704	WITHOUT_CLASSIFICATION	1.475459205849061E-5	IMPLEMENTATION	7.204222086923414E-7	DESIGN	4.3138708103342556E-7	DOCUMENTATION	3.601874710675189E-7	TEST	7.203091027300994E-8	DEFECT
// Get the names of the columns used to link between the collection // owner and the collection elements.	WITHOUT_CLASSIFICATION	0.9999797630560417	WITHOUT_CLASSIFICATION	1.985835192600233E-5	DESIGN	1.4737871410686637E-7	DOCUMENTATION	1.154020438011477E-7	DEFECT	9.828371921821003E-8	IMPLEMENTATION	1.752755502072023E-8	TEST
// The path AST should be a DotNode, and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.9991680120595918	WITHOUT_CLASSIFICATION	5.447227431365549E-4	IMPLEMENTATION	2.090751182651709E-4	DEFECT	6.854550015161003E-5	DESIGN	5.732549258601368E-6	DOCUMENTATION	3.912029596174162E-6	TEST
// Tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9999200482591317	WITHOUT_CLASSIFICATION	5.3854987606585775E-5	IMPLEMENTATION	1.1455610324488024E-5	DESIGN	1.01256432477621E-5	DEFECT	2.6302104353826248E-6	TEST	1.8852892540164495E-6	DOCUMENTATION
// Re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.9999845215449542	WITHOUT_CLASSIFICATION	8.85107670326399E-6	DESIGN	4.702410072838133E-6	IMPLEMENTATION	1.4521245520145384E-6	DEFECT	4.1444231616806376E-7	TEST	5.840140140536537E-8	DOCUMENTATION
// Don't forget to resolve the argument! // Resolve the collection function now.	WITHOUT_CLASSIFICATION	0.999990683473252	WITHOUT_CLASSIFICATION	7.542525605140298E-6	IMPLEMENTATION	7.294835195234657E-7	DOCUMENTATION	5.12440462177127E-7	TEST	4.465214687382254E-7	DEFECT	8.555569258492541E-8	DESIGN
// Resolve everything up to this dot, but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.9998040009264185	WITHOUT_CLASSIFICATION	1.3316115098678665E-4	IMPLEMENTATION	2.5093143671367685E-5	DEFECT	2.3327499378931225E-5	DESIGN	1.2784119415594903E-5	TEST	1.6331601287407319E-6	DOCUMENTATION
// Should mean that no such property was found	WITHOUT_CLASSIFICATION	0.9999923336111537	WITHOUT_CLASSIFICATION	3.0615457926730667E-6	DESIGN	2.6049687602338025E-6	IMPLEMENTATION	8.392893837346978E-7	TEST	5.972982775359317E-7	DEFECT	5.63286632113242E-7	DOCUMENTATION
// Was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.9995889830619209	WITHOUT_CLASSIFICATION	4.0761613914919935E-4	DESIGN	1.3345514972094268E-6	DEFECT	1.0414192917939256E-6	TEST	6.765210357040623E-7	IMPLEMENTATION	3.483071050635766E-7	DOCUMENTATION
// Attach any mapping-defined "ORDER BY" fragments	WITHOUT_CLASSIFICATION	0.999912340215978	WITHOUT_CLASSIFICATION	5.050782819622916E-5	IMPLEMENTATION	2.136538899914447E-5	DEFECT	8.433045088124151E-6	DESIGN	5.34830211290315E-6	DOCUMENTATION	2.0052196257287713E-6	TEST
// Use the explicitly declared select expression; determine the // return types indicated by each select token	WITHOUT_CLASSIFICATION	0.9997619408674422	WITHOUT_CLASSIFICATION	2.3489429688372044E-4	DESIGN	2.9280683240053205E-6	DEFECT	1.8251723476280788E-7	DOCUMENTATION	3.346001046345698E-8	TEST	2.0790105053620024E-8	IMPLEMENTATION
// After that, process the JOINs. // Invoke a delegate to do the work, as this is farily complex.	WITHOUT_CLASSIFICATION	0.9629887292955579	WITHOUT_CLASSIFICATION	0.0364309963623699	DESIGN	4.995730380348248E-4	DEFECT	3.7325676720361916E-5	TEST	2.4619764313469315E-5	DOCUMENTATION	1.8755863003704197E-5	IMPLEMENTATION
// Make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.9999829133110112	WITHOUT_CLASSIFICATION	1.3967553112344038E-5	IMPLEMENTATION	2.60819160414868E-6	DESIGN	2.987526949526232E-7	DOCUMENTATION	1.2211497829592462E-7	TEST	9.007659906145681E-8	DEFECT
// We need to generate ids as part of this bulk insert. // // Note that this is only supported for sequence-style generators and // post-insert-style generators; basically, only in-db generators	WITHOUT_CLASSIFICATION	0.9997529051761704	WITHOUT_CLASSIFICATION	2.231342761643004E-4	DESIGN	1.9031819652811882E-5	TEST	3.6425533794741627E-6	DEFECT	8.005677602725727E-7	DOCUMENTATION	4.856068726383121E-7	IMPLEMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999836613802704	WITHOUT_CLASSIFICATION	1.475459205849061E-5	IMPLEMENTATION	7.204222086923414E-7	DESIGN	4.3138708103342556E-7	DOCUMENTATION	3.601874710675189E-7	TEST	7.203091027300994E-8	DEFECT
// We need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.9997629584685368	WITHOUT_CLASSIFICATION	1.0914711057740969E-4	IMPLEMENTATION	7.628763905117436E-5	DESIGN	3.284259280510193E-5	DEFECT	1.538317750016678E-5	DOCUMENTATION	3.3810115293889598E-6	TEST
// we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.9997531354428317	WITHOUT_CLASSIFICATION	1.6694862559602836E-4	IMPLEMENTATION	5.024437640583069E-5	DOCUMENTATION	2.005780907419209E-5	DESIGN	5.6151792976432044E-6	DEFECT	3.998566794465234E-6	TEST
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9978088995166124	WITHOUT_CLASSIFICATION	8.797906633097999E-4	DESIGN	8.603738443981179E-4	IMPLEMENTATION	4.4444477268035205E-4	DEFECT	4.918719602422391E-6	DOCUMENTATION	1.572483396829706E-6	TEST
// Generate implicit joins, only if necessary.	WITHOUT_CLASSIFICATION	0.9998740785407881	WITHOUT_CLASSIFICATION	1.1809036607247915E-4	DESIGN	3.2250973998597006E-6	IMPLEMENTATION	2.2381865258197493E-6	TEST	2.185151457375807E-6	DOCUMENTATION	1.826577562486669E-7	DEFECT
// Notify the FROM element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.9999982414294651	WITHOUT_CLASSIFICATION	1.0416092532050914E-6	DEFECT	4.1462129312475617E-7	IMPLEMENTATION	1.8518218788115743E-7	TEST	1.0943423696875471E-7	DESIGN	7.72356376800622E-9	DOCUMENTATION
// Turn off includeSubclasses on all FromElements.	WITHOUT_CLASSIFICATION	0.9997700866530924	WITHOUT_CLASSIFICATION	2.2736475722273558E-4	DESIGN	1.081659052015557E-6	DOCUMENTATION	7.292968861314848E-7	IMPLEMENTATION	4.815535556593492E-7	DEFECT	2.5608019103530323E-7	TEST
// create the node initially with the param name so that it shows // appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.9959158532104267	WITHOUT_CLASSIFICATION	0.002319524515040082	DESIGN	0.0015681998478691977	IMPLEMENTATION	1.670738555548746E-4	TEST	2.1262925935651785E-5	DEFECT	8.0856451734395E-6	DOCUMENTATION
// Use the delegate, resolve identifiers as FROM element aliases.	WITHOUT_CLASSIFICATION	0.9999844588281769	WITHOUT_CLASSIFICATION	1.4539656602237207E-5	IMPLEMENTATION	8.938521393346867E-7	DESIGN	4.628572304530535E-8	DEFECT	3.8066799921292675E-8	DOCUMENTATION	2.3310558492803627E-8	TEST
// select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.9999800861576195	WITHOUT_CLASSIFICATION	6.494610413189219E-6	IMPLEMENTATION	5.541773065588589E-6	DESIGN	4.599198929498118E-6	TEST	3.2426796522853516E-6	DEFECT	3.558031990747229E-8	DOCUMENTATION
// no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.9966487598454499	WITHOUT_CLASSIFICATION	0.002779477374441809	DESIGN	4.6566932477502864E-4	IMPLEMENTATION	7.905270766048364E-5	TEST	2.182438409565424E-5	DOCUMENTATION	5.216363577234037E-6	DEFECT
// Make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.9931755546238288	WITHOUT_CLASSIFICATION	0.006797353347658835	IMPLEMENTATION	1.0261003291861742E-5	DESIGN	9.634071096069915E-6	TEST	5.643265473444259E-6	DEFECT	1.5536886509252344E-6	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999804147241128	WITHOUT_CLASSIFICATION	1.2794457171366205E-5	IMPLEMENTATION	5.821987323208049E-6	DESIGN	4.206498231572978E-7	DOCUMENTATION	3.893371623006255E-7	TEST	1.588444071578563E-7	DEFECT
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999836613802704	WITHOUT_CLASSIFICATION	1.475459205849061E-5	IMPLEMENTATION	7.204222086923414E-7	DESIGN	4.3138708103342556E-7	DOCUMENTATION	3.601874710675189E-7	TEST	7.203091027300994E-8	DEFECT
// --Commented out by Inspection (12/11/04 10:56 AM): int getWarningCount();	WITHOUT_CLASSIFICATION	0.9986233462203337	WITHOUT_CLASSIFICATION	0.0010413272555961019	DEFECT	2.997698375859466E-4	IMPLEMENTATION	2.3379414967157666E-5	DOCUMENTATION	7.984572746661218E-6	DESIGN	4.192698770321839E-6	TEST
// Alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.9999907131794001	WITHOUT_CLASSIFICATION	7.772271403429742E-6	DESIGN	1.2954977717079347E-6	IMPLEMENTATION	1.6291820750522917E-7	DOCUMENTATION	4.448051053680111E-8	DEFECT	1.165270683380323E-8	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999976089193866	WITHOUT_CLASSIFICATION	8.375721124171362E-7	IMPLEMENTATION	6.360953012920712E-7	TEST	5.296086338312454E-7	DOCUMENTATION	2.101964387546966E-7	DEFECT	1.7760812710594047E-7	DESIGN
// make a new one	WITHOUT_CLASSIFICATION	0.9999614901563958	WITHOUT_CLASSIFICATION	1.499136402809213E-5	DESIGN	1.2609063486383345E-5	IMPLEMENTATION	5.828753884074931E-6	DOCUMENTATION	3.7940192762412422E-6	DEFECT	1.2866429294209627E-6	TEST
// just do the regular thing if you can't find the ctor // Your AST must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.9999578505097607	WITHOUT_CLASSIFICATION	2.7150194932238844E-5	DESIGN	1.3288228365158388E-5	IMPLEMENTATION	8.310003596330108E-7	DEFECT	6.803860618102042E-7	TEST	1.996805204764072E-7	DOCUMENTATION
// Initialize SQL nodes here.	WITHOUT_CLASSIFICATION	0.9999936579990053	WITHOUT_CLASSIFICATION	3.659673016643778E-6	IMPLEMENTATION	2.1529504740631494E-6	DESIGN	2.3717809367825732E-7	DEFECT	2.0033163781177012E-7	DOCUMENTATION	9.186777259982113E-8	TEST
// semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9982483327253576	WITHOUT_CLASSIFICATION	0.0016694735610720626	DESIGN	3.288081397771471E-5	DEFECT	2.3976847981939457E-5	DOCUMENTATION	1.6798063708287107E-5	IMPLEMENTATION	8.537987902382208E-6	TEST
// if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999989410549468	WITHOUT_CLASSIFICATION	7.584957812967523E-7	DEFECT	1.8339937267533348E-7	IMPLEMENTATION	8.828069994041161E-8	TEST	2.0027990365198536E-8	DOCUMENTATION	8.741208840493377E-9	DESIGN
// this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.9999999172138466	WITHOUT_CLASSIFICATION	4.0990147554493174E-8	DESIGN	2.258551985239233E-8	IMPLEMENTATION	9.437732481463077E-9	TEST	8.6355875692482E-9	DOCUMENTATION	1.1371658100253422E-9	DEFECT
// --- Inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.9998149991974311	WITHOUT_CLASSIFICATION	9.84001250020293E-5	DESIGN	8.171779267853989E-5	IMPLEMENTATION	2.467853778360019E-6	TEST	1.84144821781068E-6	DEFECT	5.735828920869445E-7	DOCUMENTATION
// check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.9998558362301575	WITHOUT_CLASSIFICATION	1.390894511283208E-4	IMPLEMENTATION	2.1747168240184418E-6	DOCUMENTATION	1.9196007193472517E-6	DESIGN	5.778261389859964E-7	DEFECT	4.021750318512993E-7	TEST
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997131150661634	WITHOUT_CLASSIFICATION	6.204623448650295E-5	DOCUMENTATION	5.960895038742096E-5	TEST	5.747207114653075E-5	DEFECT	5.6241094708495216E-5	IMPLEMENTATION	5.151658310748103E-5	DESIGN
// these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.9999990966347618	WITHOUT_CLASSIFICATION	8.832131054650828E-7	IMPLEMENTATION	1.0839198766655978E-8	TEST	4.684067074757763E-9	DOCUMENTATION	4.007405257845657E-9	DESIGN	6.21461667081681E-10	DEFECT
// again, both should be FromElements	WITHOUT_CLASSIFICATION	0.9999911228256001	WITHOUT_CLASSIFICATION	3.941385481193246E-6	DESIGN	3.2736614731469983E-6	IMPLEMENTATION	1.2812403042322674E-6	TEST	1.925811341937175E-7	DEFECT	1.883060072742193E-7	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9999721629971402	WITHOUT_CLASSIFICATION	1.6394270221457358E-5	IMPLEMENTATION	6.984277010797648E-6	DEFECT	2.137615656954098E-6	TEST	2.071451414345127E-6	DESIGN	2.4938855645677346E-7	DOCUMENTATION
// right represents a joins originating from left; or // both right and left reprersent joins originating from the same FromElement	WITHOUT_CLASSIFICATION	0.9999979844000766	WITHOUT_CLASSIFICATION	1.7957487678651465E-6	IMPLEMENTATION	1.396485379599564E-7	DESIGN	7.214653755458919E-8	DEFECT	4.925991910381168E-9	TEST	3.130088233647175E-9	DOCUMENTATION
// check a set of parent/child nodes in the from-clause tree // to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.9999260486051843	WITHOUT_CLASSIFICATION	7.191063754353196E-5	DESIGN	1.928345707692797E-6	DEFECT	5.0748247600479624E-8	IMPLEMENTATION	3.758146777940627E-8	TEST	2.4081849135634054E-8	DOCUMENTATION
// right represents a joins originating from left...	WITHOUT_CLASSIFICATION	0.9999928409358416	WITHOUT_CLASSIFICATION	6.543605686553382E-6	IMPLEMENTATION	3.7663793354584024E-7	DESIGN	1.2179038635395652E-7	DEFECT	7.323726757410902E-8	TEST	4.379288428379767E-8	DOCUMENTATION
// all clear	WITHOUT_CLASSIFICATION	0.9999656941842939	WITHOUT_CLASSIFICATION	3.001593439803176E-5	IMPLEMENTATION	1.9880772791120806E-6	DESIGN	8.27759379309213E-7	TEST	7.965748875506868E-7	DOCUMENTATION	6.774697620719828E-7	DEFECT
// Ignore the token class name parameter, and use a specific token class.	WITHOUT_CLASSIFICATION	0.9999951886228811	WITHOUT_CLASSIFICATION	4.607515754839112E-6	DESIGN	1.1671403461348845E-7	DOCUMENTATION	8.09775003031098E-8	IMPLEMENTATION	4.1116891216838085E-9	DEFECT	2.0581401399499526E-9	TEST
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.992248654797525	WITHOUT_CLASSIFICATION	0.006381965196102792	DESIGN	7.774706335289437E-4	IMPLEMENTATION	1.9885325425301E-4	DOCUMENTATION	1.972082958302828E-4	TEST	1.9584782275999379E-4	DEFECT
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.992248654797525	WITHOUT_CLASSIFICATION	0.006381965196102792	DESIGN	7.774706335289437E-4	IMPLEMENTATION	1.9885325425301E-4	DOCUMENTATION	1.972082958302828E-4	TEST	1.9584782275999379E-4	DEFECT
// remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.9952224203101399	WITHOUT_CLASSIFICATION	0.004750937458426568	DESIGN	9.984611717336653E-6	TEST	8.831271960254297E-6	DEFECT	5.344125742373362E-6	IMPLEMENTATION	2.4822220136479034E-6	DOCUMENTATION
// don't care about other param types here, just those explicitly user-defined...	WITHOUT_CLASSIFICATION	0.998453951266853	WITHOUT_CLASSIFICATION	0.0015458036669330623	DESIGN	1.2976507368443647E-7	TEST	8.69560101967346E-8	DEFECT	2.6249785101306885E-8	DOCUMENTATION	2.0953450067340975E-9	IMPLEMENTATION
// If the query is already compiled, skip the compilation.	WITHOUT_CLASSIFICATION	0.9933986340490466	WITHOUT_CLASSIFICATION	0.006568365943137039	IMPLEMENTATION	1.8395486327089533E-5	DESIGN	6.512877327032639E-6	DEFECT	4.634236970663933E-6	DOCUMENTATION	3.4574071916262115E-6	TEST
// Remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.9966593683412932	WITHOUT_CLASSIFICATION	0.0025926739659380715	DESIGN	6.330343809473601E-4	IMPLEMENTATION	5.6648447818215185E-5	DEFECT	5.532984010813103E-5	TEST	2.9450238949640025E-6	DOCUMENTATION
// PHASE 1 : Parse the HQL into an AST.	WITHOUT_CLASSIFICATION	0.9995085160956875	WITHOUT_CLASSIFICATION	3.816026972508383E-4	DESIGN	4.876782484454787E-5	IMPLEMENTATION	3.843225730493828E-5	DEFECT	1.7249540368742588E-5	DOCUMENTATION	5.431584543442378E-6	TEST
// PHASE 2 : Analyze the HQL AST, and produce an SQL AST.	WITHOUT_CLASSIFICATION	0.9999832850179976	WITHOUT_CLASSIFICATION	9.126583507984614E-6	IMPLEMENTATION	4.594564000313875E-6	DESIGN	1.8216281006463788E-6	DEFECT	1.1072303317092918E-6	DOCUMENTATION	6.497606181950887E-8	TEST
// PHASE 3 : Generate the SQL.	WITHOUT_CLASSIFICATION	0.9999610783807684	WITHOUT_CLASSIFICATION	1.55931601972858E-5	IMPLEMENTATION	1.3061167995797919E-5	DESIGN	6.118501787552662E-6	TEST	4.024265282717336E-6	DOCUMENTATION	1.2452396814307212E-7	DEFECT
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999995192650962	WITHOUT_CLASSIFICATION	1.827471697188674E-7	DESIGN	1.412202961861648E-7	IMPLEMENTATION	1.1011163611180212E-7	DEFECT	4.3719501346465175E-8	TEST	2.9363002076512167E-9	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999995192650962	WITHOUT_CLASSIFICATION	1.827471697188674E-7	DESIGN	1.412202961861648E-7	IMPLEMENTATION	1.1011163611180212E-7	DEFECT	4.3719501346465175E-8	TEST	2.9363002076512167E-9	DOCUMENTATION
//only needed during compilation phase...	WITHOUT_CLASSIFICATION	0.9960357640540014	WITHOUT_CLASSIFICATION	0.0035340193701637033	DESIGN	2.623304859317941E-4	IMPLEMENTATION	6.935374228064908E-5	DOCUMENTATION	5.847845314970049E-5	TEST	4.0053894472766984E-5	DEFECT
// Transform the tree.	WITHOUT_CLASSIFICATION	0.999991382969916	WITHOUT_CLASSIFICATION	6.244266691503112E-6	IMPLEMENTATION	1.1100930885090802E-6	DOCUMENTATION	9.317193101012582E-7	DESIGN	2.535022688751139E-7	TEST	7.744872510557426E-8	DEFECT
// Parse the query string into an HQL AST.	WITHOUT_CLASSIFICATION	0.9997807799904023	WITHOUT_CLASSIFICATION	1.4414920914671716E-4	DESIGN	5.098941583311311E-5	IMPLEMENTATION	1.1267358894322405E-5	DOCUMENTATION	8.113626440427789E-6	TEST	4.700399283325264E-6	DEFECT
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999846201720677	WITHOUT_CLASSIFICATION	6.731295384266315E-6	DESIGN	4.676034919271363E-6	IMPLEMENTATION	2.978587841040879E-6	DOCUMENTATION	7.501463080704932E-7	TEST	2.4376347977149775E-7	DEFECT
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999846201720677	WITHOUT_CLASSIFICATION	6.731295384266315E-6	DESIGN	4.676034919271363E-6	IMPLEMENTATION	2.978587841040879E-6	DOCUMENTATION	7.501463080704932E-7	TEST	2.4376347977149775E-7	DEFECT
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999846201720677	WITHOUT_CLASSIFICATION	6.731295384266315E-6	DESIGN	4.676034919271363E-6	IMPLEMENTATION	2.978587841040879E-6	DOCUMENTATION	7.501463080704932E-7	TEST	2.4376347977149775E-7	DEFECT
// NOTE : ( max - 1 ) because first is zero-based while max is not...	WITHOUT_CLASSIFICATION	0.9998410460557069	WITHOUT_CLASSIFICATION	7.664529237248254E-5	DEFECT	5.148462059731746E-5	DESIGN	2.3857945488785143E-5	IMPLEMENTATION	4.488108271804121E-6	TEST	2.4779775625864364E-6	DOCUMENTATION
// -- Package local methods for the QueryLoader delegate --	WITHOUT_CLASSIFICATION	0.9978231839039481	WITHOUT_CLASSIFICATION	0.002172380008712435	DESIGN	1.4799693387717853E-6	IMPLEMENTATION	1.3637761130141866E-6	DEFECT	9.102684334794409E-7	DOCUMENTATION	6.820734543312633E-7	TEST
// If there are no collection fetches, then no further checks are needed	WITHOUT_CLASSIFICATION	0.9915642790530348	WITHOUT_CLASSIFICATION	0.008347426632348276	IMPLEMENTATION	4.6676876462189235E-5	DESIGN	2.6933758782842136E-5	TEST	1.3111789199715775E-5	DOCUMENTATION	1.571890172193023E-6	DEFECT
// A shallow query is ok (although technically there should be no fetching here...)	WITHOUT_CLASSIFICATION	0.9990159353244085	WITHOUT_CLASSIFICATION	6.227266113356574E-4	IMPLEMENTATION	3.150449471471994E-4	DEFECT	3.805809628970676E-5	TEST	6.335707272458058E-6	DESIGN	1.899313546568704E-6	DOCUMENTATION
// should be the first, but just to be safe...	WITHOUT_CLASSIFICATION	0.9999610481982528	WITHOUT_CLASSIFICATION	2.9348479821337753E-5	IMPLEMENTATION	4.101141672385009E-6	DEFECT	3.9672845451879425E-6	DESIGN	1.2113195238682568E-6	TEST	3.235761845978996E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999836613802704	WITHOUT_CLASSIFICATION	1.475459205849061E-5	IMPLEMENTATION	7.204222086923414E-7	DESIGN	4.3138708103342556E-7	DOCUMENTATION	3.601874710675189E-7	TEST	7.203091027300994E-8	DEFECT
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999836613802704	WITHOUT_CLASSIFICATION	1.475459205849061E-5	IMPLEMENTATION	7.204222086923414E-7	DESIGN	4.3138708103342556E-7	DOCUMENTATION	3.601874710675189E-7	TEST	7.203091027300994E-8	DEFECT
// Impl Note: allows multiple collection fetches as long as the // entire fecthed graph still "points back" to a single // root entity for return	WITHOUT_CLASSIFICATION	0.9985869535854364	WITHOUT_CLASSIFICATION	9.73500857948095E-4	DESIGN	3.75246655622678E-4	DEFECT	6.358016636745006E-5	IMPLEMENTATION	6.756215842953814E-7	TEST	4.311304105429138E-8	DOCUMENTATION
// Otherwise, we have a non-scalar select with defined collection fetch(es). // Make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.9999471288599731	WITHOUT_CLASSIFICATION	3.229112981308377E-5	IMPLEMENTATION	1.079748590889694E-5	DESIGN	9.334911883450181E-6	DEFECT	3.9688857390291337E-7	TEST	5.072384763273875E-8	DOCUMENTATION
// This is not strictly true.  We actually just need to make sure that // it is ordered by root-entity PK and that that order-by comes before // any non-root-entity ordering...	WITHOUT_CLASSIFICATION	0.9980986184933233	WITHOUT_CLASSIFICATION	0.0017568529787479125	DESIGN	7.991051144926744E-5	DEFECT	5.923645261075635E-5	IMPLEMENTATION	3.1973168164089296E-6	TEST	2.1842470523969647E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.9999979378659672	WITHOUT_CLASSIFICATION	7.083916026298942E-7	IMPLEMENTATION	6.337879959007705E-7	DOCUMENTATION	3.6345533585992444E-7	DEFECT	2.424529587590098E-7	DESIGN	1.1404613971263602E-7	TEST
// igndore it...	WITHOUT_CLASSIFICATION	0.9999784493588796	WITHOUT_CLASSIFICATION	1.8311780588717594E-5	IMPLEMENTATION	1.1588926490368588E-6	DESIGN	1.1440329569198573E-6	DOCUMENTATION	5.646370681199986E-7	DEFECT	3.712978575878966E-7	TEST
// we are now at a new tree level	WITHOUT_CLASSIFICATION	0.9999928839452635	WITHOUT_CLASSIFICATION	2.5384780723375676E-6	IMPLEMENTATION	1.495060856845754E-6	DESIGN	1.303166572075956E-6	TEST	1.0497491669071847E-6	DEFECT	7.296000682469046E-7	DOCUMENTATION
// [jsd] The fix for HHH-558...	WITHOUT_CLASSIFICATION	0.9998534590715864	WITHOUT_CLASSIFICATION	6.94671484076184E-5	DESIGN	4.227398333945802E-5	DEFECT	2.6227357563292927E-5	IMPLEMENTATION	5.180432427312478E-6	DOCUMENTATION	3.3920066759185874E-6	TEST
// If the token can tell us if it could be an identifier...	WITHOUT_CLASSIFICATION	0.9999962160573165	WITHOUT_CLASSIFICATION	3.578824466444628E-6	IMPLEMENTATION	1.4125792909637751E-7	DESIGN	3.2522727338450624E-8	TEST	2.2090911101432428E-8	DEFECT	9.2466495661091E-9	DOCUMENTATION
// ... and the expected token type was an identifier, then:	WITHOUT_CLASSIFICATION	0.9999944213101318	WITHOUT_CLASSIFICATION	2.9070755795080763E-6	DEFECT	1.167268469661376E-6	DESIGN	9.971692700125614E-7	DOCUMENTATION	4.4419127358852667E-7	IMPLEMENTATION	6.29852753953307E-8	TEST
// Use the token as an identifier.	WITHOUT_CLASSIFICATION	0.9999983290388016	WITHOUT_CLASSIFICATION	1.4006312555406465E-6	IMPLEMENTATION	1.2354097812104229E-7	DESIGN	7.374975423427232E-8	DOCUMENTATION	5.762368875382557E-8	DEFECT	1.54155218067805E-8	TEST
// Add the token to the AST.	WITHOUT_CLASSIFICATION	0.9999748157143465	WITHOUT_CLASSIFICATION	1.3233282530583778E-5	IMPLEMENTATION	1.0854129889627887E-5	DOCUMENTATION	6.511355018819694E-7	TEST	3.085024052788082E-7	DEFECT	1.3723532602070756E-7	DESIGN
// (NOT (EQ a b) ) => (NE a b)	WITHOUT_CLASSIFICATION	0.9999950968240134	WITHOUT_CLASSIFICATION	2.523107349308267E-6	IMPLEMENTATION	1.1021313727005603E-6	DEFECT	6.401276811448966E-7	TEST	4.053636987833622E-7	DOCUMENTATION	2.324458847593093E-7	DESIGN
// (NOT (NE a b) ) => (EQ a b)	WITHOUT_CLASSIFICATION	0.9999950968240134	WITHOUT_CLASSIFICATION	2.523107349308267E-6	IMPLEMENTATION	1.1021313727005603E-6	DEFECT	6.401276811448966E-7	TEST	4.053636987833622E-7	DOCUMENTATION	2.324458847593093E-7	DESIGN
// (NOT (LT a b) ) => (GE a b)	WITHOUT_CLASSIFICATION	0.999995425376218	WITHOUT_CLASSIFICATION	2.0399162597840996E-6	IMPLEMENTATION	1.3190423130537947E-6	DEFECT	5.379855666645211E-7	TEST	3.574652071682148E-7	DOCUMENTATION	3.2021443544377515E-7	DESIGN
// (NOT (GE a b) ) => (LT a b)	WITHOUT_CLASSIFICATION	0.999995425376218	WITHOUT_CLASSIFICATION	2.0399162597840996E-6	IMPLEMENTATION	1.3190423130537947E-6	DEFECT	5.379855666645211E-7	TEST	3.574652071682148E-7	DOCUMENTATION	3.2021443544377515E-7	DESIGN
// (NOT (LE a b) ) => (GT a b)	WITHOUT_CLASSIFICATION	0.9999954556580821	WITHOUT_CLASSIFICATION	2.3649670846836084E-6	IMPLEMENTATION	1.1667606632007347E-6	DEFECT	4.968914276784958E-7	TEST	3.177815318881869E-7	DOCUMENTATION	1.9794121036613468E-7	DESIGN
// (NOT (LIKE a b) ) => (NOT_LIKE a b)	WITHOUT_CLASSIFICATION	0.9999777455998704	WITHOUT_CLASSIFICATION	9.622681792823328E-6	DEFECT	8.079584860387776E-6	IMPLEMENTATION	2.198934414599832E-6	DESIGN	1.4346507931617946E-6	TEST	9.185482685481379E-7	DOCUMENTATION
// (NOT (NOT_LIKE a b) ) => (LIKE a b)	WITHOUT_CLASSIFICATION	0.9999777455998704	WITHOUT_CLASSIFICATION	9.622681792823328E-6	DEFECT	8.079584860387776E-6	IMPLEMENTATION	2.198934414599832E-6	DESIGN	1.4346507931617946E-6	TEST	9.185482685481379E-7	DOCUMENTATION
// (NOT (IS_NOT_NULL a b) ) => (IS_NULL a b)	WITHOUT_CLASSIFICATION	0.9999771986100406	WITHOUT_CLASSIFICATION	1.3052407246506398E-5	DEFECT	5.335740346020151E-6	IMPLEMENTATION	2.4196970235075097E-6	DESIGN	1.0153539486779631E-6	DOCUMENTATION	9.78191394780978E-7	TEST
// (NOT (BETWEEN a b) ) => (NOT_BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999733196776815	WITHOUT_CLASSIFICATION	1.1747362617187748E-5	DEFECT	9.115556100257838E-6	IMPLEMENTATION	2.2993907274060743E-6	TEST	2.1931900179400182E-6	DESIGN	1.324822855563891E-6	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999761574051753	WITHOUT_CLASSIFICATION	2.1577337493104918E-5	IMPLEMENTATION	1.0632492832746337E-6	DEFECT	8.72865183857191E-7	DESIGN	2.1507086252351272E-7	DOCUMENTATION	1.1407200194990931E-7	TEST
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.992248654797525	WITHOUT_CLASSIFICATION	0.006381965196102792	DESIGN	7.774706335289437E-4	IMPLEMENTATION	1.9885325425301E-4	DOCUMENTATION	1.972082958302828E-4	TEST	1.9584782275999379E-4	DEFECT
// if // if // Otherwise, handle the error normally.	WITHOUT_CLASSIFICATION	0.9999728789563754	WITHOUT_CLASSIFICATION	2.5001848250639505E-5	IMPLEMENTATION	1.5682318306305636E-6	DEFECT	2.4032038775641424E-7	DESIGN	2.0949927383290523E-7	DOCUMENTATION	1.0114388179724411E-7	TEST
// (NOT (NOT_BETWEEN a b) ) => (BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999733196776815	WITHOUT_CLASSIFICATION	1.1747362617187748E-5	DEFECT	9.115556100257838E-6	IMPLEMENTATION	2.2993907274060743E-6	TEST	2.1931900179400182E-6	DESIGN	1.324822855563891E-6	DOCUMENTATION
/* This can never happen because this rule will always eliminate the child NOT.	WITHOUT_CLASSIFICATION	0.9997084434138159	WITHOUT_CLASSIFICATION	1.9876544501299176E-4	IMPLEMENTATION	6.470115788854233E-5	DESIGN	2.1577731614324624E-5	DEFECT	4.068606555270922E-6	DOCUMENTATION	2.4436451127843325E-6	TEST
// Just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9999307293739681	WITHOUT_CLASSIFICATION	6.475197287310578E-5	IMPLEMENTATION	1.239473650340444E-6	DEFECT	1.2075757484778284E-6	DOCUMENTATION	1.1497296231717992E-6	DESIGN	9.218741369126526E-7	TEST
// (EQ NULL b) => (IS_NULL b)	WITHOUT_CLASSIFICATION	0.999995401208161	WITHOUT_CLASSIFICATION	1.8519524816313313E-6	DEFECT	1.3004269377619733E-6	IMPLEMENTATION	6.150603619040554E-7	DOCUMENTATION	5.610006740802378E-7	TEST	2.703513836316739E-7	DESIGN
// (EQ a NULL) => (IS_NULL a)	WITHOUT_CLASSIFICATION	0.9999951284813948	WITHOUT_CLASSIFICATION	1.6834824485217555E-6	DEFECT	1.5501835513902653E-6	IMPLEMENTATION	6.735620606471628E-7	DESIGN	5.074511832546298E-7	DOCUMENTATION	4.5683936141664663E-7	TEST
// NOTE: Because we're using ASTUtil.createParent(), the tree must be created from the bottom up. // IS EMPTY x => (EXISTS (QUERY (SELECT_FROM (FROM x) ) ) )	WITHOUT_CLASSIFICATION	0.9999991175832863	WITHOUT_CLASSIFICATION	6.609774956311574E-7	DEFECT	1.4909436029448713E-7	IMPLEMENTATION	5.4512025849194896E-8	TEST	1.3802300430974028E-8	DESIGN	4.0305315292486335E-9	DOCUMENTATION
// Add NOT if it's negated.	WITHOUT_CLASSIFICATION	0.9999497389256581	WITHOUT_CLASSIFICATION	3.355332982472654E-5	IMPLEMENTATION	9.177150618495724E-6	TEST	3.5498762325778296E-6	DEFECT	2.614619917652796E-6	DOCUMENTATION	1.3660977484247229E-6	DESIGN
// Create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.9982570496374483	WITHOUT_CLASSIFICATION	0.0017268195666136606	DESIGN	7.322237145829167E-6	TEST	3.659673795559775E-6	DOCUMENTATION	3.641175553628644E-6	IMPLEMENTATION	1.5077094430460107E-6	DEFECT
// Case 1: Multi token keywords GROUP BY and ORDER BY // The next token ( LT(2) ) should be 'by'... otherwise, this is just an ident.	WITHOUT_CLASSIFICATION	0.9967685908774391	WITHOUT_CLASSIFICATION	0.0025886878236084957	DESIGN	6.318305261791163E-4	DEFECT	6.9939630885052215E-6	IMPLEMENTATION	2.461479215715148E-6	TEST	1.4353304691956546E-6	DOCUMENTATION
// Case 2: The current token is after FROM and before '.'.	WITHOUT_CLASSIFICATION	0.9998559535873792	WITHOUT_CLASSIFICATION	1.2563158371518257E-4	DEFECT	1.056070292826094E-5	IMPLEMENTATION	6.956931126196627E-6	DESIGN	7.186624352247296E-7	DOCUMENTATION	1.785324159254062E-7	TEST
// This handles HHH-354, where there is a strange property name in a where clause. // If the lookahead contains a DOT then something that isn't an IDENT...	WITHOUT_CLASSIFICATION	0.9994684769039799	WITHOUT_CLASSIFICATION	5.28643951557138E-4	DESIGN	1.3147757293013805E-6	IMPLEMENTATION	6.856535343615051E-7	DOCUMENTATION	5.817810037313334E-7	TEST	2.969341956864002E-7	DEFECT
// See if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.9999975289159646	WITHOUT_CLASSIFICATION	2.0881180103152808E-6	DESIGN	1.9922372636664345E-7	IMPLEMENTATION	1.432349731730644E-7	DEFECT	3.615875671211817E-8	DOCUMENTATION	4.348568742722259E-9	TEST
// Set it!	WITHOUT_CLASSIFICATION	0.9999706232745263	WITHOUT_CLASSIFICATION	1.2378942435297517E-5	DEFECT	6.4104520364739115E-6	TEST	4.634617869968545E-6	IMPLEMENTATION	4.041697743406739E-6	DOCUMENTATION	1.9110153884417767E-6	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999967921465598	WITHOUT_CLASSIFICATION	2.3262049710510212E-6	IMPLEMENTATION	3.920518904252137E-7	DOCUMENTATION	2.0324652480516502E-7	DEFECT	1.4810281992615262E-7	DESIGN	1.3824723398080232E-7	TEST
// strip the " where "	WITHOUT_CLASSIFICATION	0.9999790233814214	WITHOUT_CLASSIFICATION	1.846429226048181E-5	IMPLEMENTATION	1.0545507775019681E-6	TEST	7.802353203076501E-7	DESIGN	6.491793739154888E-7	DOCUMENTATION	2.8360846437416108E-8	DEFECT
// Don't really know all the codes required to adequately decipher returned jdbc exceptions here. // simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.9229663071032564	WITHOUT_CLASSIFICATION	0.07191188518188575	IMPLEMENTATION	0.0036675326332900526	DESIGN	0.0011725795458404598	DEFECT	2.764555119489976E-4	TEST	5.240023778319678E-6	DOCUMENTATION
// at the very least cleanup the data :)	WITHOUT_CLASSIFICATION	0.9991065955760042	WITHOUT_CLASSIFICATION	8.780472254516422E-4	IMPLEMENTATION	5.209079258015497E-6	DESIGN	3.96671582081047E-6	TEST	3.8142337621408456E-6	DEFECT	2.3671697032237093E-6	DOCUMENTATION
// First, save off the pertinent ids, as the return value	WITHOUT_CLASSIFICATION	0.9999995852843531	WITHOUT_CLASSIFICATION	1.968607312637775E-7	DESIGN	1.859846754889479E-7	DEFECT	1.7651836632259265E-8	IMPLEMENTATION	1.008090762409382E-8	DOCUMENTATION	4.137495894164528E-9	TEST
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999708458900516	WITHOUT_CLASSIFICATION	2.4967331958557888E-5	DESIGN	2.582849935234967E-6	IMPLEMENTATION	1.0783575241922604E-6	TEST	4.3285927216174976E-7	DOCUMENTATION	9.271125837231255E-8	DEFECT
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999708458900516	WITHOUT_CLASSIFICATION	2.4967331958557888E-5	DESIGN	2.582849935234967E-6	IMPLEMENTATION	1.0783575241922604E-6	TEST	4.3285927216174976E-7	DOCUMENTATION	9.271125837231255E-8	DEFECT
// Start performing the updates	WITHOUT_CLASSIFICATION	0.9999884419526681	WITHOUT_CLASSIFICATION	9.576894781753743E-6	DEFECT	1.2364419792397557E-6	IMPLEMENTATION	4.0345867133601917E-7	TEST	2.957354890528396E-7	DOCUMENTATION	4.551641058024584E-8	DESIGN
// First, save off the pertinent ids, saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.9999725770603869	WITHOUT_CLASSIFICATION	2.5192882528456156E-5	DEFECT	8.94609847267557E-7	DESIGN	6.401926188820498E-7	IMPLEMENTATION	4.840035719335376E-7	TEST	2.1125104654038206E-7	DOCUMENTATION
// Start performing the deletes	WITHOUT_CLASSIFICATION	0.9999952833537469	WITHOUT_CLASSIFICATION	3.0521191466372866E-6	DEFECT	5.886302775188695E-7	IMPLEMENTATION	5.692657449492811E-7	DESIGN	3.467789132977426E-7	TEST	1.5985217079217356E-7	DOCUMENTATION
// otherwise, everything ok.	WITHOUT_CLASSIFICATION	0.9996575912774223	WITHOUT_CLASSIFICATION	3.3969327823176994E-4	IMPLEMENTATION	1.1391150375553991E-6	TEST	1.0381800606837086E-6	DOCUMENTATION	4.3911478108447756E-7	DEFECT	9.903446671652179E-8	DESIGN
// visit width-first, then depth	WITHOUT_CLASSIFICATION	0.9999909904203689	WITHOUT_CLASSIFICATION	5.091254598465669E-6	IMPLEMENTATION	1.478186867852672E-6	TEST	1.1628254643886754E-6	DEFECT	8.55905395257316E-7	DOCUMENTATION	4.2140730507846705E-7	DESIGN
// if the types report logical equivalence, return true...	WITHOUT_CLASSIFICATION	0.9991180582737459	WITHOUT_CLASSIFICATION	8.66176494927292E-4	DESIGN	7.649009856393187E-6	IMPLEMENTATION	6.6262627524953745E-6	DEFECT	9.618860567881888E-7	DOCUMENTATION	5.280726611303368E-7	TEST
// otherwise, perform a "deep equivalence" check...	WITHOUT_CLASSIFICATION	0.9996105146287578	WITHOUT_CLASSIFICATION	2.4295974273083712E-4	IMPLEMENTATION	1.4294752661561476E-4	DESIGN	2.458158818939534E-6	DOCUMENTATION	6.487381594949315E-7	TEST	4.712049173696011E-7	DEFECT
// If there is no WHERE node, make one.	WITHOUT_CLASSIFICATION	0.9999412715299781	WITHOUT_CLASSIFICATION	3.528303442661053E-5	DESIGN	1.5981085360181168E-5	DEFECT	4.539046208628147E-6	IMPLEMENTATION	1.5554528119545091E-6	DOCUMENTATION	1.3698512144653744E-6	TEST
// inject the WHERE after the parent	WITHOUT_CLASSIFICATION	0.9998411989725432	WITHOUT_CLASSIFICATION	9.942620202639501E-5	IMPLEMENTATION	2.711269694505485E-5	DEFECT	2.084841980626744E-5	DESIGN	7.655266511598355E-6	DOCUMENTATION	3.7584421676195034E-6	TEST
// Never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9999933792598401	WITHOUT_CLASSIFICATION	5.0869292014396125E-6	DESIGN	1.3957392401769355E-6	IMPLEMENTATION	7.80412056697845E-8	DEFECT	4.011294832004695E-8	DOCUMENTATION	1.991756426397195E-8	TEST
// Moved here from SelectClause [jsd]	WITHOUT_CLASSIFICATION	0.9999470016361661	WITHOUT_CLASSIFICATION	5.1605497193380594E-5	DESIGN	6.193348754318164E-7	IMPLEMENTATION	4.19189684769281E-7	DEFECT	2.3746089336835533E-7	TEST	1.1688118684838107E-7	DOCUMENTATION
///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997131150661634	WITHOUT_CLASSIFICATION	6.204623448650295E-5	DOCUMENTATION	5.960895038742096E-5	TEST	5.747207114653075E-5	DEFECT	5.6241094708495216E-5	IMPLEMENTATION	5.151658310748103E-5	DESIGN
// Use the table fromElement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.9999818391924378	WITHOUT_CLASSIFICATION	1.682121890821983E-5	IMPLEMENTATION	5.080632626395494E-7	DESIGN	4.914831775919717E-7	DEFECT	3.086153135288432E-7	DOCUMENTATION	3.142690013189912E-8	TEST
// Set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.9999928409159776	WITHOUT_CLASSIFICATION	2.9594467725209247E-6	DESIGN	2.084465366199947E-6	DEFECT	1.1706072750849973E-6	IMPLEMENTATION	6.7582069157185E-7	DOCUMENTATION	2.6874391690105176E-7	TEST
// If the uresolved property path isn't set yet, just use the property name.	WITHOUT_CLASSIFICATION	0.9999948484244611	WITHOUT_CLASSIFICATION	2.893041393957079E-6	DEFECT	2.120088157975334E-6	IMPLEMENTATION	7.303315812426953E-8	TEST	5.8185694189362815E-8	DOCUMENTATION	7.227134642826936E-9	DESIGN
// The 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.9999939102426454	WITHOUT_CLASSIFICATION	2.269721558815258E-6	IMPLEMENTATION	2.1648707926011386E-6	DESIGN	1.1607694818398951E-6	DEFECT	4.109285373839503E-7	DOCUMENTATION	8.346698380264037E-8	TEST
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.999981276745404	WITHOUT_CLASSIFICATION	1.1084018651366702E-5	IMPLEMENTATION	6.080764139154331E-6	DESIGN	1.3259117642761033E-6	DEFECT	1.3089045184783768E-7	TEST	1.0166958936061133E-7	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.999981276745404	WITHOUT_CLASSIFICATION	1.1084018651366702E-5	IMPLEMENTATION	6.080764139154331E-6	DESIGN	1.3259117642761033E-6	DEFECT	1.3089045184783768E-7	TEST	1.0166958936061133E-7	DOCUMENTATION
// If this dot has already been resolved, stop now.	WITHOUT_CLASSIFICATION	0.9999538328647747	WITHOUT_CLASSIFICATION	3.78534706582376E-5	IMPLEMENTATION	3.5017095700992545E-6	DESIGN	2.6898318117662226E-6	TEST	1.4451638891690658E-6	DEFECT	6.769592961634598E-7	DOCUMENTATION
// If there is no data type for this node, and we're at the end of the path (top most dot node), then // this might be a Java constant.	WITHOUT_CLASSIFICATION	0.9959975227957475	WITHOUT_CLASSIFICATION	0.003718095893409392	DESIGN	1.5194736017627264E-4	IMPLEMENTATION	1.1962094576084667E-4	DEFECT	9.882366828514895E-6	TEST	2.9306380776110745E-6	DOCUMENTATION
// The property is a collection...	WITHOUT_CLASSIFICATION	0.9998890905342034	WITHOUT_CLASSIFICATION	6.23412537908169E-5	IMPLEMENTATION	4.056743243350585E-5	DEFECT	5.656016114265421E-6	DESIGN	1.457759614363147E-6	DOCUMENTATION	8.870038437473851E-7	TEST
// The property is a component...	WITHOUT_CLASSIFICATION	0.9999197460941079	WITHOUT_CLASSIFICATION	3.43253008143198E-5	DEFECT	2.2384298486971703E-5	DESIGN	1.924647960437858E-5	IMPLEMENTATION	3.5760173238979087E-6	DOCUMENTATION	7.218096622146888E-7	TEST
// The property is another class..	WITHOUT_CLASSIFICATION	0.9999959456225677	WITHOUT_CLASSIFICATION	2.1960376281720776E-6	DEFECT	9.683872126614869E-7	IMPLEMENTATION	4.509434195127961E-7	DESIGN	3.382000963822784E-7	DOCUMENTATION	1.0080907563125925E-7	TEST
// Otherwise, this is a primitive type.	WITHOUT_CLASSIFICATION	0.9999865380746958	WITHOUT_CLASSIFICATION	7.615460104186807E-6	DESIGN	4.041794869134186E-6	IMPLEMENTATION	1.0077628405423363E-6	TEST	5.488063647637712E-7	DOCUMENTATION	2.4810112554144973E-7	DEFECT
//foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.9917471501690732	WITHOUT_CLASSIFICATION	0.0063939498541183415	DESIGN	0.0014341800305577284	IMPLEMENTATION	3.428032960952968E-4	DEFECT	5.387547536941307E-5	DOCUMENTATION	2.8041174785930285E-5	TEST
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999834989548283	WITHOUT_CLASSIFICATION	1.4412856363128398E-5	DESIGN	1.934524786715982E-6	DEFECT	8.8650086355764E-8	IMPLEMENTATION	4.923829351899915E-8	DOCUMENTATION	1.5775642104919695E-8	TEST
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.996884934178384	WITHOUT_CLASSIFICATION	0.003105037324641994	IMPLEMENTATION	4.254284268770296E-6	DOCUMENTATION	3.3229724166243006E-6	TEST	1.313742349252331E-6	DEFECT	1.1374979392656875E-6	DESIGN
// in non-select queries, the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.9999987728759979	WITHOUT_CLASSIFICATION	6.418393827975613E-7	IMPLEMENTATION	2.2037857146118E-7	DESIGN	1.860920636683523E-7	TEST	1.0068777568044248E-7	DEFECT	7.812620855963572E-8	DOCUMENTATION
// this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.9965726032338036	WITHOUT_CLASSIFICATION	0.0034253020269397107	DESIGN	8.450044559422268E-7	DEFECT	7.152379325356701E-7	DOCUMENTATION	5.101638820993225E-7	TEST	2.4332986099050785E-8	IMPLEMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999834989548283	WITHOUT_CLASSIFICATION	1.4412856363128398E-5	DESIGN	1.934524786715982E-6	DEFECT	8.8650086355764E-8	IMPLEMENTATION	4.923829351899915E-8	DOCUMENTATION	1.5775642104919695E-8	TEST
// even though we might find a pre-existing element by join path, we may not be able to reuse it...	WITHOUT_CLASSIFICATION	0.999947605728801	WITHOUT_CLASSIFICATION	4.502718862851331E-5	DESIGN	5.588581833292149E-6	DEFECT	1.3541467021860543E-6	IMPLEMENTATION	2.783610899593857E-7	DOCUMENTATION	1.4599294503466913E-7	TEST
// NOTE : addDuplicateAlias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.99996214388886	WITHOUT_CLASSIFICATION	2.3032399537974498E-5	IMPLEMENTATION	7.974970355169482E-6	DESIGN	4.076659369750444E-6	DOCUMENTATION	2.1513096512054097E-6	DEFECT	6.207722258677497E-7	TEST
// if the from-clauses are the same, we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.9975926427464991	WITHOUT_CLASSIFICATION	0.002368984568965418	DESIGN	3.3245737612207395E-5	DEFECT	3.0094135092489986E-6	IMPLEMENTATION	1.701414689552609E-6	TEST	4.161187245142494E-7	DOCUMENTATION
// again, null != null here	WITHOUT_CLASSIFICATION	0.9999985574651955	WITHOUT_CLASSIFICATION	1.2063351254315754E-6	IMPLEMENTATION	1.239150780370211E-7	TEST	5.0123670081061635E-8	DOCUMENTATION	3.455761259800103E-8	DESIGN	2.760331834795684E-8	DEFECT
// If this is an implied join in a from element, then use the impled join type which is part of the // tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.9997884981899171	WITHOUT_CLASSIFICATION	2.1033033550233737E-4	DESIGN	1.0518355909351415E-6	DEFECT	7.225305590374157E-8	DOCUMENTATION	3.3711532869167434E-8	IMPLEMENTATION	1.367440082923601E-8	TEST
// otherwise (subquery case) dont reuse the fromElement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.9999810392041467	WITHOUT_CLASSIFICATION	1.0045152063462385E-5	IMPLEMENTATION	7.942713051846988E-6	DESIGN	4.2133803204275573E-7	DOCUMENTATION	4.176675316510452E-7	DEFECT	1.3392517437768934E-7	TEST
// we know only the lhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999548515920033	WITHOUT_CLASSIFICATION	3.415404343578105E-5	IMPLEMENTATION	9.189513171208021E-6	DOCUMENTATION	1.267619932008974E-6	DESIGN	4.697311761519951E-7	TEST	6.750028155788417E-8	DEFECT
// the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.9999940068919287	WITHOUT_CLASSIFICATION	4.735071954402216E-6	IMPLEMENTATION	4.682976433601145E-7	DEFECT	3.8451580631207625E-7	DOCUMENTATION	3.077903468541066E-7	DESIGN	9.743232029733672E-8	TEST
// only the identifier property field name can be a reference to the associated entity's PK...	WITHOUT_CLASSIFICATION	0.9999945387088343	WITHOUT_CLASSIFICATION	5.224244313468271E-6	DESIGN	1.7708778053077758E-7	IMPLEMENTATION	4.175717083576339E-8	DOCUMENTATION	1.0908624113080167E-8	TEST	7.293276924672141E-9	DEFECT
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9998362492448244	WITHOUT_CLASSIFICATION	5.2275302157367395E-5	DESIGN	3.7119938499000066E-5	DEFECT	2.9118984535565343E-5	IMPLEMENTATION	2.4826493133585117E-5	TEST	2.0410036850101346E-5	DOCUMENTATION
// Append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.9867241259707837	WITHOUT_CLASSIFICATION	0.012963436778085985	IMPLEMENTATION	1.4444213051316323E-4	DEFECT	1.244446106711369E-4	DOCUMENTATION	2.8338771779508688E-5	DESIGN	1.5211738166399334E-5	TEST
// If the lhs is a collection, use CollectionPropertyMapping	WITHOUT_CLASSIFICATION	0.9999971768915157	WITHOUT_CLASSIFICATION	1.7973257875384141E-6	DEFECT	8.832447181399873E-7	DESIGN	6.124812505633208E-8	TEST	4.890035203747402E-8	IMPLEMENTATION	3.238950150995112E-8	DOCUMENTATION
// Tell the destination fromElement to 'includeSubclasses'.	WITHOUT_CLASSIFICATION	0.9999669666133748	WITHOUT_CLASSIFICATION	2.728260785193641E-5	DESIGN	2.648939090705935E-6	DOCUMENTATION	1.6216415059187537E-6	IMPLEMENTATION	1.0606959851668386E-6	TEST	4.1950219140871264E-7	DEFECT
// Use theta style (for regression) // Move the node up, after the origin node.	WITHOUT_CLASSIFICATION	0.9999729848069335	WITHOUT_CLASSIFICATION	2.4866280724013868E-5	DESIGN	1.0852001772988712E-6	DEFECT	6.362371673592119E-7	IMPLEMENTATION	3.056939773826137E-7	TEST	1.2178102048996779E-7	DOCUMENTATION
// Don't resolve the node again.	WITHOUT_CLASSIFICATION	0.9997488760612971	WITHOUT_CLASSIFICATION	2.4226499278298913E-4	IMPLEMENTATION	4.9941837753018085E-6	TEST	2.559196706133495E-6	DOCUMENTATION	8.102096819408627E-7	DEFECT	4.953557564516635E-7	DESIGN
// for expected parameter type injection, we expect that the lhs represents // some form of property ref and that the children of the in-list represent // one-or-more params.	WITHOUT_CLASSIFICATION	0.9999574891246379	WITHOUT_CLASSIFICATION	3.999533201182581E-5	DESIGN	1.1265406967917075E-6	DOCUMENTATION	1.107463904489996E-6	TEST	2.1435857521000137E-7	IMPLEMENTATION	6.718017372402874E-8	DEFECT
// we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.9999777895118017	WITHOUT_CLASSIFICATION	8.651111482897603E-6	IMPLEMENTATION	7.006435986386269E-6	TEST	3.586418241489328E-6	DESIGN	2.3346065007207636E-6	DOCUMENTATION	6.319159866016443E-7	DEFECT
// we have something like : "? [op] rhs"	WITHOUT_CLASSIFICATION	0.9996219091495887	WITHOUT_CLASSIFICATION	3.0307567070726727E-4	IMPLEMENTATION	3.991524319998473E-5	DEFECT	1.9950865604638935E-5	DOCUMENTATION	9.315066488922803E-6	DESIGN	5.834004410397256E-6	TEST
// we have something like : "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.9996434340670337	WITHOUT_CLASSIFICATION	2.351309438618523E-4	IMPLEMENTATION	7.727647798480703E-5	DEFECT	2.517551563914926E-5	DOCUMENTATION	9.605353069336233E-6	DESIGN	9.37764241111632E-6	TEST
// we know only the rhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999696797482405	WITHOUT_CLASSIFICATION	2.5086721338972996E-5	IMPLEMENTATION	4.08893925980965E-6	DOCUMENTATION	8.604257641076345E-7	DESIGN	2.4646145489589804E-7	TEST	3.770394181459506E-8	DEFECT
// handle the (assumed) valid cases: // #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.999996569693463	WITHOUT_CLASSIFICATION	1.9026391714169008E-6	DESIGN	9.549616037309269E-7	DEFECT	3.8040741743675576E-7	IMPLEMENTATION	1.5966306411338707E-7	TEST	3.263528032246129E-8	DOCUMENTATION
// one or the other needs to be a datetime for us to get into this method in the first place...	WITHOUT_CLASSIFICATION	0.7120978617269383	DESIGN	0.28723779053757514	WITHOUT_CLASSIFICATION	5.783166592602849E-4	IMPLEMENTATION	4.191579635221109E-5	DEFECT	3.0363881187996673E-5	TEST	1.3751398686042377E-5	DOCUMENTATION
// #3 - note that this is also true of "datetime - :param"...	WITHOUT_CLASSIFICATION	0.9928398606359885	WITHOUT_CLASSIFICATION	0.007004899002701402	DESIGN	8.763957009480859E-5	TEST	4.2161637222370226E-5	DOCUMENTATION	1.830692398496394E-5	IMPLEMENTATION	7.132230008046366E-6	DEFECT
// #2	WITHOUT_CLASSIFICATION	0.9999865407115975	WITHOUT_CLASSIFICATION	3.5463217992389016E-6	DEFECT	2.740082327183959E-6	IMPLEMENTATION	2.6345848516319238E-6	DOCUMENTATION	2.4099028962958105E-6	TEST	2.1283965282122956E-6	DESIGN
// Generate the inner join -- The elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.9999584136902832	WITHOUT_CLASSIFICATION	3.528991791658864E-5	DESIGN	5.659695154668754E-6	IMPLEMENTATION	3.4553784093010084E-7	DOCUMENTATION	2.7106198071065077E-7	TEST	2.0096823928312354E-8	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.995038369740299	WITHOUT_CLASSIFICATION	0.00470648265986004	IMPLEMENTATION	1.1544907114502215E-4	DEFECT	7.56032878146959E-5	DOCUMENTATION	4.2145675007424085E-5	TEST	2.1949565873839787E-5	DESIGN
// The 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.9999921011982859	WITHOUT_CLASSIFICATION	6.425881825753056E-6	DESIGN	1.0803827301523921E-6	IMPLEMENTATION	2.1703045525640615E-7	DEFECT	1.1837087781760652E-7	TEST	5.7135825012131375E-8	DOCUMENTATION
// Add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.9998972026968899	WITHOUT_CLASSIFICATION	6.930810042415033E-5	IMPLEMENTATION	2.6149874400129962E-5	DESIGN	5.608860168865551E-6	DOCUMENTATION	1.0337280619357986E-6	TEST	6.967400550106651E-7	DEFECT
// Sometimes use the element table alias, sometimes use the... umm... collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.9999975102240454	WITHOUT_CLASSIFICATION	1.1252007915842258E-6	DESIGN	6.087454236233579E-7	IMPLEMENTATION	4.074130546133352E-7	DOCUMENTATION	2.3599695060973812E-7	DEFECT	1.1241973413730714E-7	TEST
// Now, set the text for this node.  It should be the element columns.	WITHOUT_CLASSIFICATION	0.9998091815492525	WITHOUT_CLASSIFICATION	1.601665749229258E-4	IMPLEMENTATION	1.723122112463572E-5	DESIGN	1.223250135166104E-5	TEST	8.862049801070656E-7	DEFECT	3.019483682626597E-7	DOCUMENTATION
// Get the function return value type, based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.9999848669707647	WITHOUT_CLASSIFICATION	1.499158567565297E-5	DESIGN	6.649899288215626E-8	DOCUMENTATION	5.8441038570225974E-8	IMPLEMENTATION	1.359138955097814E-8	TEST	2.912138682452788E-9	DEFECT
// This will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.9999826457325045	WITHOUT_CLASSIFICATION	9.024867784624058E-6	IMPLEMENTATION	6.125416339577497E-6	DEFECT	1.3651212688930592E-6	DESIGN	6.646293839851089E-7	DOCUMENTATION	1.7423271854431134E-7	TEST
// mutation depends on the types of nodes invloved...	WITHOUT_CLASSIFICATION	0.9991406587922252	WITHOUT_CLASSIFICATION	7.383352109008051E-4	DESIGN	7.466023158798388E-5	DEFECT	2.4389268236444104E-5	IMPLEMENTATION	1.1586162575917681E-5	TEST	1.0370334473353154E-5	DOCUMENTATION
// "pass along" our initial embedded parameter node(s) to the first generated // sql fragment so that it can be handled later for parameter binding...	WITHOUT_CLASSIFICATION	0.9999611962944642	WITHOUT_CLASSIFICATION	3.8194406638203254E-5	DESIGN	4.1727978722393043E-7	IMPLEMENTATION	1.8159211340514773E-7	TEST	7.650207405978819E-9	DEFECT	2.776789441680589E-9	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9996117579169173	WITHOUT_CLASSIFICATION	3.835293617085058E-4	DESIGN	2.161325393584076E-6	IMPLEMENTATION	1.3900521627271993E-6	DEFECT	9.099764117861554E-7	TEST	2.51367406175363E-7	DOCUMENTATION
// Generated select expressions are already resolved, nothing to do.	WITHOUT_CLASSIFICATION	0.9999745120491604	WITHOUT_CLASSIFICATION	1.9567790446528E-5	IMPLEMENTATION	2.9491862588423383E-6	DEFECT	1.7445752093161417E-6	TEST	7.344993722074272E-7	DESIGN	4.918995526018598E-7	DOCUMENTATION
// The path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.9993721834857867	WITHOUT_CLASSIFICATION	6.271597528424701E-4	DESIGN	3.128916847672135E-7	IMPLEMENTATION	1.6699577175793584E-7	DOCUMENTATION	1.6293845859018918E-7	DEFECT	1.3935455789048306E-8	TEST
// The HQL class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.9999861272973474	WITHOUT_CLASSIFICATION	1.3647055228670253E-5	DESIGN	1.389177441684501E-7	DEFECT	7.023359578763679E-8	DOCUMENTATION	1.066954515986139E-8	IMPLEMENTATION	5.826538816527256E-9	TEST
// Associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.9999992348887053	WITHOUT_CLASSIFICATION	3.5555722286067947E-7	IMPLEMENTATION	1.6906266638367166E-7	DOCUMENTATION	1.442787855491772E-7	TEST	9.206476192442588E-8	DESIGN	4.14785797664448E-9	DEFECT
// try the parent FromClause...	WITHOUT_CLASSIFICATION	0.9999024495477403	WITHOUT_CLASSIFICATION	8.97077683492973E-5	IMPLEMENTATION	4.651892267653667E-6	DESIGN	2.1049496256369674E-6	DOCUMENTATION	6.913572288415057E-7	DEFECT	3.94484788233078E-7	TEST
// Add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.999896298971476	WITHOUT_CLASSIFICATION	5.4279588505365344E-5	DESIGN	2.203553827278215E-5	TEST	1.4404019102939675E-5	IMPLEMENTATION	1.2699147895086624E-5	DOCUMENTATION	2.8273474788757084E-7	DEFECT
// Make sure that all from elements registered with this FROM clause are actually in the AST.	WITHOUT_CLASSIFICATION	0.9999965549335625	WITHOUT_CLASSIFICATION	2.8951950937070452E-6	DESIGN	4.6393048511869103E-7	IMPLEMENTATION	5.4897813735103006E-8	TEST	2.9498520376949495E-8	DOCUMENTATION	1.544524617033057E-9	DEFECT
// Invoke setScalarColumnText on each constructor argument.	WITHOUT_CLASSIFICATION	0.9999907732785972	WITHOUT_CLASSIFICATION	5.068532900223134E-6	IMPLEMENTATION	2.0421941830814412E-6	DESIGN	1.6999694693741566E-6	DOCUMENTATION	2.525344034752562E-7	DEFECT	1.6349044677603977E-7	TEST
// Collect the select expressions, skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.9999996298787956	WITHOUT_CLASSIFICATION	1.7925653801176647E-7	DESIGN	1.211928509734173E-7	DEFECT	4.441193183450024E-8	TEST	2.2500440227499035E-8	IMPLEMENTATION	2.759443358172371E-9	DOCUMENTATION
// return an empty Type array	WITHOUT_CLASSIFICATION	0.9999787776047103	WITHOUT_CLASSIFICATION	2.082224788389572E-5	DESIGN	1.982488595787205E-7	IMPLEMENTATION	1.0378015676005995E-7	DOCUMENTATION	6.824264499350835E-8	DEFECT	2.987574458532909E-8	TEST
// Constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.9999888946566036	WITHOUT_CLASSIFICATION	6.927430478318802E-6	DESIGN	2.6880145561357004E-6	IMPLEMENTATION	1.0400597902069761E-6	TEST	2.629562643985642E-7	DEFECT	1.8688230741408428E-7	DOCUMENTATION
// this is the exception returned by ReflectHelper.getConstructor() if it cannot // locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.9999339669795103	WITHOUT_CLASSIFICATION	6.157064360486234E-5	DESIGN	3.846565713259343E-6	DEFECT	3.8007418528904505E-7	IMPLEMENTATION	2.327079711832389E-7	TEST	3.029015033684115E-9	DOCUMENTATION
// if there is no order by, make one	WITHOUT_CLASSIFICATION	0.999942956399362	WITHOUT_CLASSIFICATION	3.7922168303403366E-5	DESIGN	1.2289555785653081E-5	DEFECT	3.0170895560705677E-6	IMPLEMENTATION	2.346265400187629E-6	TEST	1.4685215926006255E-6	DOCUMENTATION
// Find the WHERE; if there is no WHERE, find the FROM...	WITHOUT_CLASSIFICATION	0.9999981173662159	WITHOUT_CLASSIFICATION	8.684106965140086E-7	IMPLEMENTATION	3.324511060994342E-7	DESIGN	2.83529190576328E-7	DEFECT	2.6203489429868705E-7	TEST	1.3620789669105158E-7	DOCUMENTATION
// Now, inject the newly built ORDER BY into the tree	WITHOUT_CLASSIFICATION	0.9999697767721095	WITHOUT_CLASSIFICATION	1.7053597771756337E-5	IMPLEMENTATION	6.763814420891787E-6	DOCUMENTATION	3.89200400894168E-6	DEFECT	1.8103690063622894E-6	TEST	7.034426825241194E-7	DESIGN
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997341194103649	WITHOUT_CLASSIFICATION	1.7659378825302894E-4	IMPLEMENTATION	7.322909666102065E-5	DESIGN	6.617428885632974E-6	TEST	5.477571366827669E-6	DEFECT	3.962704468475301E-6	DOCUMENTATION
// logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.9994413986765928	WITHOUT_CLASSIFICATION	5.497887371694306E-4	DESIGN	4.064415932968422E-6	IMPLEMENTATION	2.2330438609787846E-6	TEST	2.0189414077148757E-6	DEFECT	4.961850361771319E-7	DOCUMENTATION
// Render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.9999998328914391	WITHOUT_CLASSIFICATION	1.1607746547643226E-7	IMPLEMENTATION	1.902390280839236E-8	TEST	1.8429915608633334E-8	DEFECT	7.776990950638956E-9	DESIGN	5.8002859805152114E-9	DOCUMENTATION
// Class names in the FROM clause result in a JoinSequence (the old FromParser does this).	WITHOUT_CLASSIFICATION	0.9999878407324961	WITHOUT_CLASSIFICATION	1.1118988715317864E-5	DESIGN	6.634152734544962E-7	DEFECT	2.823966906166706E-7	TEST	8.515028800161719E-8	DOCUMENTATION	9.31653667529795E-9	IMPLEMENTATION
// For many-to-many joins, use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.9999810665843585	WITHOUT_CLASSIFICATION	1.815033309948267E-5	IMPLEMENTATION	5.279605306182862E-7	DESIGN	2.132452926064285E-7	TEST	2.739055732559673E-8	DOCUMENTATION	1.448616144667988E-8	DEFECT
// Otherwise, use the property mapping.	WITHOUT_CLASSIFICATION	0.9999479204601418	WITHOUT_CLASSIFICATION	4.745584234535333E-5	IMPLEMENTATION	2.4455027611674206E-6	DOCUMENTATION	1.5904661003122222E-6	DEFECT	4.1515168578480316E-7	DESIGN	1.7257696552648035E-7	TEST
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9935647574536729	WITHOUT_CLASSIFICATION	0.005816285884968337	DESIGN	3.079759788316697E-4	DEFECT	2.5965393490348E-4	IMPLEMENTATION	3.9117942375661655E-5	TEST	1.2208805247882809E-5	DOCUMENTATION
// If the property is a special collection property name, return a CollectionPropertyMapping.	WITHOUT_CLASSIFICATION	0.9998441969524672	WITHOUT_CLASSIFICATION	1.3413649288858162E-4	IMPLEMENTATION	1.3645106055214777E-5	DEFECT	7.238625522828043E-6	DESIGN	4.678993907260334E-7	DOCUMENTATION	3.149236753761241E-7	TEST
// Collection of components.	WITHOUT_CLASSIFICATION	0.9999857195937967	WITHOUT_CLASSIFICATION	8.585458459948775E-6	DESIGN	2.182265039939806E-6	IMPLEMENTATION	2.1278500953368077E-6	TEST	1.048056777660689E-6	DOCUMENTATION	3.3677583033985364E-7	DEFECT
// make sure the lhs is "assignable"...	WITHOUT_CLASSIFICATION	0.9999986962782649	WITHOUT_CLASSIFICATION	7.365662974999742E-7	DESIGN	2.751643035956764E-7	IMPLEMENTATION	1.210672406371535E-7	DEFECT	9.679631177241062E-8	DOCUMENTATION	7.412758161189016E-8	TEST
// false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.9999317937195354	WITHOUT_CLASSIFICATION	5.843851643107856E-5	DESIGN	3.814929029639391E-6	DOCUMENTATION	3.2350717458160134E-6	IMPLEMENTATION	1.7682613245179998E-6	DEFECT	9.495019335531192E-7	TEST
// Register the FromElement with the FROM clause, now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.9999644671985399	WITHOUT_CLASSIFICATION	3.092800358492431E-5	IMPLEMENTATION	3.4468651046167078E-6	DESIGN	9.497511359572495E-7	TEST	1.0879607233560367E-7	DOCUMENTATION	9.938556241101134E-8	DEFECT
// currently allowed...	WITHOUT_CLASSIFICATION	0.999965853910388	WITHOUT_CLASSIFICATION	2.4348567915876108E-5	IMPLEMENTATION	5.504145535381859E-6	DESIGN	3.7568169877984476E-6	DOCUMENTATION	3.5883508907569746E-7	DEFECT	1.7772408396016181E-7	TEST
// HHH-276 : implied joins in a subselect where clause - The destination needs to be added // to the destination's from clause. // Not sure if this is will fix everything, but it works.	WITHOUT_CLASSIFICATION	0.9742604516205957	WITHOUT_CLASSIFICATION	0.02502443975169222	DEFECT	6.780395251798775E-4	DESIGN	2.584150331684141E-5	TEST	8.260484030551331E-6	IMPLEMENTATION	2.967115184677538E-6	DOCUMENTATION
//return classAlias == null ? className : classAlias;	WITHOUT_CLASSIFICATION	0.9989333523384937	WITHOUT_CLASSIFICATION	0.0010592030720535724	DESIGN	2.518011751985354E-6	DEFECT	1.743003167492519E-6	IMPLEMENTATION	1.7359499162870732E-6	DOCUMENTATION	1.447624616921017E-6	TEST
// This is an explicit FROM element.	WITHOUT_CLASSIFICATION	0.9996370116055482	WITHOUT_CLASSIFICATION	3.5279439760981353E-4	DESIGN	5.47769631081421E-6	DEFECT	2.0454732542137533E-6	IMPLEMENTATION	1.6859826632539902E-6	DOCUMENTATION	9.848446136841668E-7	TEST
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997341194103649	WITHOUT_CLASSIFICATION	1.7659378825302894E-4	IMPLEMENTATION	7.322909666102065E-5	DESIGN	6.617428885632974E-6	TEST	5.477571366827669E-6	DEFECT	3.962704468475301E-6	DOCUMENTATION
// Fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.9999947146321253	WITHOUT_CLASSIFICATION	4.452983839457736E-6	IMPLEMENTATION	4.3632679670342504E-7	TEST	3.047495586088267E-7	DESIGN	7.064850094613994E-8	DEFECT	2.0659178851501804E-8	DOCUMENTATION
// If it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.9996343298229231	WITHOUT_CLASSIFICATION	1.7982116927405708E-4	DEFECT	9.735832276432774E-5	IMPLEMENTATION	8.765656642457989E-5	DESIGN	5.526045071983646E-7	TEST	2.8151410688821696E-7	DOCUMENTATION
// Since this is an explicit FROM element, it can't be implied in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999868383752784	WITHOUT_CLASSIFICATION	1.3116530240180125E-5	DESIGN	2.0695330342741864E-8	DOCUMENTATION	1.320079477230622E-8	DEFECT	6.8969253700631324E-9	TEST	4.301430893638124E-9	IMPLEMENTATION
// Do nothing, eplicit from elements are *always* in the projection list.	WITHOUT_CLASSIFICATION	0.9999936131253863	WITHOUT_CLASSIFICATION	4.331851096728811E-6	DESIGN	1.247290281439979E-6	IMPLEMENTATION	5.879534302800345E-7	DOCUMENTATION	1.2809323076000256E-7	TEST	9.168657447847235E-8	DEFECT
// propertyName refers to something like collection.size...	WITHOUT_CLASSIFICATION	0.9999546884586599	WITHOUT_CLASSIFICATION	3.8418648130271495E-5	IMPLEMENTATION	3.532389268754465E-6	DESIGN	1.4796712981407568E-6	DEFECT	1.120584911731495E-6	DOCUMENTATION	7.602477313218984E-7	TEST
// property name is a sub-path of a component...	WITHOUT_CLASSIFICATION	0.9999916763078528	WITHOUT_CLASSIFICATION	3.715165782509463E-6	DESIGN	2.0757144381058524E-6	DEFECT	1.8692940350680116E-6	IMPLEMENTATION	3.5192562609712923E-7	DOCUMENTATION	3.115922653566786E-7	TEST
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.996884934178384	WITHOUT_CLASSIFICATION	0.003105037324641994	IMPLEMENTATION	4.254284268770296E-6	DOCUMENTATION	3.3229724166243006E-6	TEST	1.313742349252331E-6	DEFECT	1.1374979392656875E-6	DESIGN
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999553377006701	WITHOUT_CLASSIFICATION	2.390538888321939E-5	DESIGN	1.6773601453347772E-5	DEFECT	2.9103468533348215E-6	TEST	8.031308543138242E-7	IMPLEMENTATION	2.69831285602481E-7	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9996117579169173	WITHOUT_CLASSIFICATION	3.835293617085058E-4	DESIGN	2.161325393584076E-6	IMPLEMENTATION	1.3900521627271993E-6	DEFECT	9.099764117861554E-7	TEST	2.51367406175363E-7	DOCUMENTATION
// DotNode uses null here...	WITHOUT_CLASSIFICATION	0.9998973389841604	WITHOUT_CLASSIFICATION	9.214616739379278E-5	IMPLEMENTATION	5.3181016524844525E-6	DESIGN	2.0089184879383264E-6	DEFECT	1.6588188209916983E-6	TEST	1.5290094843457211E-6	DOCUMENTATION
// We represent a from-clause alias	WITHOUT_CLASSIFICATION	0.9999760942322059	WITHOUT_CLASSIFICATION	2.0398032495491002E-5	DESIGN	2.1912618490856766E-6	IMPLEMENTATION	6.495123821236577E-7	DOCUMENTATION	6.072627733598718E-7	DEFECT	5.969829404194342E-8	TEST
// we are the LHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999971090891726	WITHOUT_CLASSIFICATION	9.549355002351054E-7	DOCUMENTATION	7.17873011761416E-7	IMPLEMENTATION	5.97329063801111E-7	DEFECT	4.5380607241140025E-7	DESIGN	1.669671792877736E-7	TEST
// we are the RHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999942556050109	WITHOUT_CLASSIFICATION	2.0386096595884434E-6	IMPLEMENTATION	1.6669616440224166E-6	DOCUMENTATION	9.505592225599508E-7	DEFECT	7.820971743807304E-7	DESIGN	3.061672886962305E-7	TEST
// we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.9999095960400421	WITHOUT_CLASSIFICATION	7.803988791695471E-5	IMPLEMENTATION	8.947423757251764E-6	DESIGN	2.75521995912171E-6	DEFECT	5.575863464864549E-7	DOCUMENTATION	1.0384197813704164E-7	TEST
// EARLY EXIT!!!  return so the resolve call explicitly coming from DotNode can // resolve this...	WITHOUT_CLASSIFICATION	0.9992635620724164	WITHOUT_CLASSIFICATION	7.101863512086223E-4	DESIGN	1.1541436701922823E-5	DOCUMENTATION	8.008939366620495E-6	DEFECT	3.6958652518990915E-6	IMPLEMENTATION	3.005335054593712E-6	TEST
// assume this ident's text does *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9993527638544137	WITHOUT_CLASSIFICATION	5.330816692027221E-4	DESIGN	9.261980706939945E-5	DEFECT	1.041575326327642E-5	TEST	9.417942840598155E-6	DOCUMENTATION	1.7009732102792067E-6	IMPLEMENTATION
// just ignore it for now, it'll get resolved later...	WITHOUT_CLASSIFICATION	0.9999983891095847	WITHOUT_CLASSIFICATION	1.3884444317732895E-6	IMPLEMENTATION	1.382726093509662E-7	DEFECT	5.603477617485576E-8	TEST	2.4210930639753673E-8	DESIGN	3.927667357059613E-9	DOCUMENTATION
// This is not actually a constant, but a reference to FROM element.	WITHOUT_CLASSIFICATION	0.9999283430964516	WITHOUT_CLASSIFICATION	7.09484159164472E-5	DESIGN	6.147231988766786E-7	IMPLEMENTATION	6.670381314472823E-8	DEFECT	1.5951611225913284E-8	DOCUMENTATION	1.11090087013258E-8	TEST
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999760055963918	WITHOUT_CLASSIFICATION	2.35393210601395E-5	DESIGN	2.5575486582145834E-7	IMPLEMENTATION	1.0048798521641986E-7	DEFECT	6.804654750703831E-8	DOCUMENTATION	3.0793149500306205E-8	TEST
// these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9993366334491036	WITHOUT_CLASSIFICATION	6.173024457237205E-4	DESIGN	3.70451231235282E-5	IMPLEMENTATION	4.406204816841766E-6	TEST	3.863788597202931E-6	DOCUMENTATION	7.489886349668652E-7	DEFECT
// used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.9990273873575162	WITHOUT_CLASSIFICATION	8.716916557899655E-4	DESIGN	6.728948384827678E-5	IMPLEMENTATION	2.3067216068248706E-5	DOCUMENTATION	8.02323507307847E-6	DEFECT	2.541051704314614E-6	TEST
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9997972004353424	WITHOUT_CLASSIFICATION	1.889308369046769E-4	DESIGN	4.8509726282713276E-6	DOCUMENTATION	4.344736224056632E-6	DEFECT	4.072008580827091E-6	IMPLEMENTATION	6.010103198860721E-7	TEST
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9997972004353424	WITHOUT_CLASSIFICATION	1.889308369046769E-4	DESIGN	4.8509726282713276E-6	DOCUMENTATION	4.344736224056632E-6	DEFECT	4.072008580827091E-6	IMPLEMENTATION	6.010103198860721E-7	TEST
// naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.9999466609245758	WITHOUT_CLASSIFICATION	5.257232835826262E-5	DESIGN	4.0417871871467083E-7	DEFECT	2.597829447782545E-7	IMPLEMENTATION	6.63639071619025E-8	DOCUMENTATION	3.642149522536167E-8	TEST
// this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9994025413465237	WITHOUT_CLASSIFICATION	5.770154728576091E-4	DESIGN	8.56604004500387E-6	IMPLEMENTATION	7.552256117738736E-6	TEST	3.3294004239671187E-6	DOCUMENTATION	9.95484032007491E-7	DEFECT
// do *not* over-write the column text, as that has already been // "rendered" during resolve	WITHOUT_CLASSIFICATION	0.9999997789822959	WITHOUT_CLASSIFICATION	1.5024864124724887E-7	DESIGN	5.157575633137098E-8	TEST	1.1254953728465062E-8	DEFECT	4.869544489294873E-9	IMPLEMENTATION	3.068808340022385E-9	DOCUMENTATION
// for some reason the antlr.CommonAST initialization routines force // this method to get called twice.  The first time with an empty string	WITHOUT_CLASSIFICATION	0.9999789661959311	WITHOUT_CLASSIFICATION	2.035230722024435E-5	DESIGN	3.391235833489323E-7	IMPLEMENTATION	3.336007335237418E-7	TEST	7.186535682777634E-9	DOCUMENTATION	1.5859960415963075E-9	DEFECT
// Look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.9999979440281793	WITHOUT_CLASSIFICATION	1.439506119790066E-6	DEFECT	2.668322038241561E-7	IMPLEMENTATION	2.402021117184356E-7	DESIGN	6.115574232475267E-8	TEST	4.827564303091089E-8	DOCUMENTATION
// Add to the query spaces.	WITHOUT_CLASSIFICATION	0.9995481336585784	WITHOUT_CLASSIFICATION	4.4677047636151375E-4	IMPLEMENTATION	4.277434326333953E-6	DOCUMENTATION	5.86519716662094E-7	TEST	1.4881723576323651E-7	DESIGN	8.309378140748746E-8	DEFECT
// If the from element isn't in the same clause, create a new from element.	WITHOUT_CLASSIFICATION	0.9999908984247499	WITHOUT_CLASSIFICATION	8.21178615579777E-6	DESIGN	7.668739516798236E-7	DEFECT	6.973966170372281E-8	DOCUMENTATION	4.432672673096056E-8	TEST	8.848754218501358E-9	IMPLEMENTATION
// This is the root level node. // Generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.9991363105933673	WITHOUT_CLASSIFICATION	8.632884464423652E-4	DESIGN	1.503136058157626E-7	TEST	1.3472825205847815E-7	DEFECT	9.842961697330588E-8	DOCUMENTATION	1.7488715368777496E-8	IMPLEMENTATION
// Correlated subqueries create 'special' implied from nodes // because correlated subselects can't use an ANSI-style join	WITHOUT_CLASSIFICATION	0.9999990029064459	WITHOUT_CLASSIFICATION	6.737722436492322E-7	DEFECT	1.7938227677866956E-7	DESIGN	7.727665034268138E-8	IMPLEMENTATION	4.8957609364361994E-8	TEST	1.7704773810950895E-8	DOCUMENTATION
// super-duper-classic-parser-regression-testing-mojo-magic...	WITHOUT_CLASSIFICATION	0.9990964438840332	WITHOUT_CLASSIFICATION	8.576616227371427E-4	DESIGN	2.1070750166591863E-5	TEST	1.6501408479596268E-5	DEFECT	6.2744195305589654E-6	DOCUMENTATION	2.0479150531730456E-6	IMPLEMENTATION
// A collection of entities...	WITHOUT_CLASSIFICATION	0.9999473481117018	WITHOUT_CLASSIFICATION	4.613096677808851E-5	IMPLEMENTATION	2.814011838102896E-6	TEST	1.567422672031144E-6	DOCUMENTATION	1.376595888575573E-6	DEFECT	7.628911215179031E-7	DESIGN
// A collection of components...	WITHOUT_CLASSIFICATION	0.999805624551288	WITHOUT_CLASSIFICATION	8.909708447274608E-5	DESIGN	7.962775190638412E-5	IMPLEMENTATION	1.0785111800034792E-5	TEST	7.488916785374807E-6	DEFECT	7.3765837474504464E-6	DOCUMENTATION
// A collection of scalar elements...	WITHOUT_CLASSIFICATION	0.9999872403303063	WITHOUT_CLASSIFICATION	5.407472992263191E-6	DESIGN	5.3842232833031005E-6	IMPLEMENTATION	1.0023639355632636E-6	DEFECT	4.837973859976002E-7	DOCUMENTATION	4.818120967023782E-7	TEST
// according to both the ANSI-SQL and EJB3 specs, trim can either take // exactly one parameter or a variable number of parameters between 1 and 4. // from the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If only <trim specification> is omitted, BOTH is assumed; // if <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.999997560772946	WITHOUT_CLASSIFICATION	2.2006203631493857E-6	DEFECT	1.1540845187454216E-7	DOCUMENTATION	9.062965156893622E-8	IMPLEMENTATION	1.849828879755152E-8	DESIGN	1.4070298619077178E-8	TEST
// Don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.9963221173689447	WITHOUT_CLASSIFICATION	0.0022585421660755015	IMPLEMENTATION	0.001394340325713244	DESIGN	1.1543792883253922E-5	DEFECT	8.321429925638068E-6	TEST	5.134916457703915E-6	DOCUMENTATION
// Treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.9999726618301018	WITHOUT_CLASSIFICATION	2.2723187861634447E-5	DESIGN	2.8690719783047565E-6	DEFECT	1.4047232610962516E-6	DOCUMENTATION	2.1472914381322917E-7	TEST	1.264576533956055E-7	IMPLEMENTATION
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.9961984607699652	WITHOUT_CLASSIFICATION	0.003768938256277133	DESIGN	2.1930882964517553E-5	TEST	6.225641375100637E-6	DOCUMENTATION	3.914763046605593E-6	IMPLEMENTATION	5.296863712879227E-7	DEFECT
// Create the FROM element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.999999943144741	WITHOUT_CLASSIFICATION	2.275774648321695E-8	DESIGN	1.8468592375689235E-8	TEST	1.3198283951646755E-8	IMPLEMENTATION	1.6604671668496144E-9	DEFECT	7.701690277221469E-10	DOCUMENTATION
// If the join is implied, then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.9999798788578498	WITHOUT_CLASSIFICATION	1.817417433600574E-5	DESIGN	1.6719986547971518E-6	DEFECT	1.374200627936921E-7	DOCUMENTATION	1.1702424175490491E-7	IMPLEMENTATION	2.0524854808188926E-8	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9989208354691033	WITHOUT_CLASSIFICATION	4.0227829694600603E-4	IMPLEMENTATION	3.8383365702024684E-4	DEFECT	1.7254191064133378E-4	DESIGN	1.1220715564582886E-4	DOCUMENTATION	8.303510643286175E-6	TEST
// The associated entity is implied, but it must be included in the FROM. // The collection alias is the role.	WITHOUT_CLASSIFICATION	0.9998857661887534	WITHOUT_CLASSIFICATION	1.1045837235975686E-4	DESIGN	1.654048659697396E-6	IMPLEMENTATION	1.1356591904705359E-6	TEST	7.083904964690234E-7	DEFECT	2.773405402827662E-7	DOCUMENTATION
// Tag this node as a JOIN. // Don't include subclasses in the join. // This is a clollection join.	WITHOUT_CLASSIFICATION	0.9997196111843482	WITHOUT_CLASSIFICATION	2.0502145274865983E-4	DESIGN	6.978831113963138E-5	DEFECT	2.505131405902622E-6	TEST	2.350161346173123E-6	DOCUMENTATION	7.237590115057628E-7	IMPLEMENTATION
// Get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.9999973842720282	WITHOUT_CLASSIFICATION	8.926778914505893E-7	DESIGN	7.998126846269597E-7	DOCUMENTATION	4.5597760557637027E-7	TEST	4.214015459841738E-7	IMPLEMENTATION	4.585824406416694E-8	DEFECT
//  origin, path, implied, columns, classAlias,	WITHOUT_CLASSIFICATION	0.9996030579402235	WITHOUT_CLASSIFICATION	2.1797670381179833E-4	IMPLEMENTATION	1.6449864781122516E-4	DESIGN	9.198631007813586E-6	DOCUMENTATION	2.671699148232295E-6	TEST	2.596377997362311E-6	DEFECT
/*implied*/	WITHOUT_CLASSIFICATION	0.9984836509217013	WITHOUT_CLASSIFICATION	7.257339506249934E-4	IMPLEMENTATION	6.840503512240098E-4	DESIGN	5.199085068951954E-5	DOCUMENTATION	3.931245862257416E-5	TEST	1.5261467137572136E-5	DEFECT
// For implied many-to-many, just add the end join.	WITHOUT_CLASSIFICATION	0.9800685157170859	WITHOUT_CLASSIFICATION	0.019927750146074022	IMPLEMENTATION	1.811651677954675E-6	DEFECT	1.2077166459620067E-6	DOCUMENTATION	6.41445514382805E-7	TEST	7.332300182166045E-8	DESIGN
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9989208354691033	WITHOUT_CLASSIFICATION	4.0227829694600603E-4	IMPLEMENTATION	3.8383365702024684E-4	DEFECT	1.7254191064133378E-4	DESIGN	1.1220715564582886E-4	DOCUMENTATION	8.303510643286175E-6	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9989208354691033	WITHOUT_CLASSIFICATION	4.0227829694600603E-4	IMPLEMENTATION	3.8383365702024684E-4	DEFECT	1.7254191064133378E-4	DESIGN	1.1220715564582886E-4	DOCUMENTATION	8.303510643286175E-6	TEST
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9996695297782434	WITHOUT_CLASSIFICATION	1.3922282218572393E-4	DESIGN	1.3395697987390485E-4	IMPLEMENTATION	4.291286651806957E-5	DEFECT	7.937351840928309E-6	DOCUMENTATION	6.440201337879227E-6	TEST
// This causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.9944068743240895	WITHOUT_CLASSIFICATION	0.005592603084952095	DESIGN	2.544497508542061E-7	DOCUMENTATION	1.762863972059961E-7	TEST	7.774634824975422E-8	DEFECT	1.4108462159091568E-8	IMPLEMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9999965185828766	WITHOUT_CLASSIFICATION	1.5590039810472934E-6	DESIGN	5.59580500188855E-7	DOCUMENTATION	5.009646290477883E-7	DEFECT	4.745146048913131E-7	TEST	3.873534081868722E-7	IMPLEMENTATION
// Frontbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9994901491050371	WITHOUT_CLASSIFICATION	3.044706977518891E-4	IMPLEMENTATION	1.461427355896082E-4	DESIGN	3.430836245723444E-5	DEFECT	1.852247626769325E-5	DOCUMENTATION	6.406622896507737E-6	TEST
/*	WITHOUT_CLASSIFICATION	0.9964592541565794	WITHOUT_CLASSIFICATION	0.002407996684032343	DESIGN	3.387002723142719E-4	TEST	3.3739715340885986E-4	DOCUMENTATION	2.60962562549357E-4	DEFECT	1.9568917111566136E-4	IMPLEMENTATION
/*public Type[] getSqlResultTypes() {	WITHOUT_CLASSIFICATION	0.9997803255543729	WITHOUT_CLASSIFICATION	1.5050570900894842E-4	DESIGN	3.613273879318045E-5	DEFECT	1.5667567958639616E-5	DOCUMENTATION	1.1732117824011316E-5	TEST	5.636312042326005E-6	IMPLEMENTATION
// First, collect all of the select expressions. // NOTE: This must be done *before* invoking setScalarColumnText() because setScalarColumnText() // changes the AST!!!	WITHOUT_CLASSIFICATION	0.9999267034160341	WITHOUT_CLASSIFICATION	4.9752810228386086E-5	DEFECT	2.103354124278549E-5	DESIGN	1.909169622755146E-6	IMPLEMENTATION	5.811512363177359E-7	TEST	1.9911635704175013E-8	DOCUMENTATION
// First allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.9977359559714584	WITHOUT_CLASSIFICATION	0.00226305512902785	IMPLEMENTATION	9.492934634602583E-7	DESIGN	1.49377392871121E-8	DOCUMENTATION	1.3519832866287962E-8	TEST	1.114847814373011E-8	DEFECT
//sqlResultTypeList.addAll( constructorArgumentTypeList );	WITHOUT_CLASSIFICATION	0.999957192425405	WITHOUT_CLASSIFICATION	4.040851439527973E-5	IMPLEMENTATION	1.2563672654412433E-6	TEST	8.728580982295592E-7	DOCUMENTATION	2.289053867258434E-7	DEFECT	4.0929449291067907E-8	DESIGN
// If the data type is not an association type, it could not have been in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999976726793777	WITHOUT_CLASSIFICATION	1.1931142497284676E-6	DESIGN	4.6819267029024686E-7	IMPLEMENTATION	3.7558048421165113E-7	DEFECT	2.697452379412411E-7	TEST	2.0687980111414495E-8	DOCUMENTATION
//sqlResultTypeList.add( type );	WITHOUT_CLASSIFICATION	0.9999808973103964	WITHOUT_CLASSIFICATION	1.059580208367928E-5	IMPLEMENTATION	3.1638839789852226E-6	TEST	2.278386162575875E-6	DESIGN	1.6981233110742984E-6	DEFECT	1.3664940672528662E-6	DOCUMENTATION
// Always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.9999513285616475	WITHOUT_CLASSIFICATION	2.6799387181930223E-5	IMPLEMENTATION	1.9207495524284756E-5	DESIGN	1.7560159147042445E-6	DOCUMENTATION	6.871620242077343E-7	DEFECT	2.2137770751367414E-7	TEST
// add the fetched entities	WITHOUT_CLASSIFICATION	0.99999708471136	WITHOUT_CLASSIFICATION	2.4299530264644316E-6	IMPLEMENTATION	3.23426462099778E-7	DOCUMENTATION	8.261050916904843E-8	DEFECT	7.415226463679309E-8	TEST	5.146377596580383E-9	DESIGN
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999970326089024	WITHOUT_CLASSIFICATION	1.6159002108166236E-6	IMPLEMENTATION	6.770382551377057E-7	DEFECT	3.7661781299527075E-7	DOCUMENTATION	2.781979089059785E-7	TEST	1.963690955452064E-8	DESIGN
// function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9987596170295683	WITHOUT_CLASSIFICATION	7.095416251385675E-4	IMPLEMENTATION	2.620125757071265E-4	DEFECT	2.1766200828556476E-4	DESIGN	3.0082542048699773E-5	DOCUMENTATION	2.1084219251730785E-5	TEST
// If there are any scalars (non-entities) selected, render the select column aliases.	WITHOUT_CLASSIFICATION	0.9999916289648715	WITHOUT_CLASSIFICATION	5.114654200388062E-6	IMPLEMENTATION	2.8034596456899244E-6	DESIGN	1.8271888198868084E-7	DEFECT	1.7333602430187864E-7	TEST	9.686637605860678E-8	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999621406741458	WITHOUT_CLASSIFICATION	1.8177493639941836E-5	IMPLEMENTATION	9.279827832118318E-6	TEST	5.7312448808949255E-6	DEFECT	3.934792237674402E-6	DOCUMENTATION	7.359672635927367E-7	DESIGN
/*ArrayList sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9998970623439248	WITHOUT_CLASSIFICATION	7.323064510542302E-5	IMPLEMENTATION	1.3710739197457328E-5	DEFECT	1.3315303933194171E-5	TEST	1.8209927379055094E-6	DOCUMENTATION	8.599751011291672E-7	DESIGN
//sqlResultTypes = ( Type[] ) sqlResultTypeList.toArray( new Type[sqlResultTypeList.size()] );	WITHOUT_CLASSIFICATION	0.9999945059379785	WITHOUT_CLASSIFICATION	3.4988751631679953E-6	IMPLEMENTATION	1.302217838539558E-6	DEFECT	5.27853840581957E-7	TEST	1.5280405051005637E-7	DOCUMENTATION	1.2311128728252388E-8	DESIGN
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9952931132746901	WITHOUT_CLASSIFICATION	0.0030650213301688907	DESIGN	0.001100723677718982	IMPLEMENTATION	4.462143958494929E-4	DEFECT	5.915270967181925E-5	DOCUMENTATION	3.577461190075047E-5	TEST
//TODO:	WITHOUT_CLASSIFICATION	0.9987543069485483	WITHOUT_CLASSIFICATION	4.2134262827101204E-4	DESIGN	2.9372260864958907E-4	DEFECT	2.5205762218305635E-4	IMPLEMENTATION	1.4801690515180507E-4	DOCUMENTATION	1.3055328719635537E-4	TEST
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999965756254764	WITHOUT_CLASSIFICATION	2.8794665925906184E-6	IMPLEMENTATION	2.120676530718961E-7	DESIGN	1.8554914817895384E-7	DOCUMENTATION	1.2808259229214897E-7	TEST	1.9208537329090096E-8	DEFECT
// Generate an 2d array of column names, the first dimension is parallel with the // return types array.  The second dimension is the list of column names for each // type.	WITHOUT_CLASSIFICATION	0.9999616719737916	WITHOUT_CLASSIFICATION	3.7779733938347595E-5	DESIGN	2.53986561873158E-7	DEFECT	2.0800345183352244E-7	IMPLEMENTATION	8.081668392277169E-8	TEST	5.4855723563369434E-9	DOCUMENTATION
// Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999678062124514	WITHOUT_CLASSIFICATION	1.5551775331195304E-5	IMPLEMENTATION	1.3561423195352132E-5	DESIGN	2.1685577571892105E-6	TEST	4.879459027632431E-7	DOCUMENTATION	4.2408536212138394E-7	DEFECT
// union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998145753124474	WITHOUT_CLASSIFICATION	1.4874757033768893E-4	DESIGN	2.0142704932997634E-5	DEFECT	1.185117525841477E-5	IMPLEMENTATION	2.7516756368412104E-6	TEST	1.9315613866658176E-6	DOCUMENTATION
// Skip 'DISTINCT' and 'ALL', so we return the first expression node.	WITHOUT_CLASSIFICATION	0.999972118664377	WITHOUT_CLASSIFICATION	1.78097487106433E-5	IMPLEMENTATION	4.69213402383283E-6	DESIGN	4.586182335765846E-6	DEFECT	6.479276981822645E-7	DOCUMENTATION	1.4534285466297243E-7	TEST
// Create SQL_TOKEN nodes for the columns.	WITHOUT_CLASSIFICATION	0.9999782272050388	WITHOUT_CLASSIFICATION	1.6562157599934627E-5	DESIGN	2.888439357749683E-6	TEST	1.787650335368585E-6	IMPLEMENTATION	3.0162472950184307E-7	DOCUMENTATION	2.329229384176539E-7	DEFECT
// Generate the property select tokens.	WITHOUT_CLASSIFICATION	0.9999526962465676	WITHOUT_CLASSIFICATION	4.6487976427411606E-5	IMPLEMENTATION	3.9380706741287303E-7	DOCUMENTATION	2.7393184163214754E-7	TEST	1.3248966450202464E-7	DESIGN	1.5548431343077096E-8	DEFECT
// Get the function name node.	WITHOUT_CLASSIFICATION	0.9999885395515762	WITHOUT_CLASSIFICATION	9.506484052786793E-6	IMPLEMENTATION	9.326139273523776E-7	DOCUMENTATION	4.64312513242708E-7	TEST	3.6244165576352236E-7	DEFECT	1.9459627474728488E-7	DESIGN
// Method expressions in a SELECT should always be considered scalar.	WITHOUT_CLASSIFICATION	0.9346702068901941	WITHOUT_CLASSIFICATION	0.06451478425802021	DESIGN	7.870001479244517E-4	DEFECT	1.2145932800781648E-5	IMPLEMENTATION	1.1848738894969653E-5	TEST	4.014032165456796E-6	DOCUMENTATION
// If this is 'elements' then create a new FROM element.	WITHOUT_CLASSIFICATION	0.9999986941048848	WITHOUT_CLASSIFICATION	1.0877329677582063E-6	DESIGN	1.435856748648999E-7	TEST	3.9640878587825776E-8	DOCUMENTATION	1.755773877126905E-8	IMPLEMENTATION	1.7377855165683054E-8	DEFECT
// Not elements(x)	WITHOUT_CLASSIFICATION	0.999995887156744	WITHOUT_CLASSIFICATION	1.859403759209225E-6	IMPLEMENTATION	1.3379712735105256E-6	DEFECT	3.5414007582558483E-7	DOCUMENTATION	2.916972658804703E-7	DESIGN	2.6963088173923777E-7	TEST
// Dialect function	WITHOUT_CLASSIFICATION	0.9999917635028606	WITHOUT_CLASSIFICATION	5.536737781609992E-6	IMPLEMENTATION	1.0569448178180878E-6	DOCUMENTATION	6.669165192714479E-7	DESIGN	5.006813075746392E-7	DEFECT	4.7521671319219684E-7	TEST
// Collection 'property function'	WITHOUT_CLASSIFICATION	0.9999859840538271	WITHOUT_CLASSIFICATION	7.429696333003791E-6	DEFECT	3.9542801469185684E-6	DESIGN	1.7054418438746512E-6	IMPLEMENTATION	6.182590188743714E-7	DOCUMENTATION	3.082688302095951E-7	TEST
// If the constant is an IDENT, figure out what it means...	WITHOUT_CLASSIFICATION	0.9999962290671517	WITHOUT_CLASSIFICATION	1.2875866594672974E-6	TEST	1.0860794433684135E-6	DESIGN	7.871814840287762E-7	IMPLEMENTATION	4.4255453978701675E-7	DEFECT	1.675307214990457E-7	DOCUMENTATION
// IDENT is a class alias in the FROM.	WITHOUT_CLASSIFICATION	0.9999889514197616	WITHOUT_CLASSIFICATION	1.0168789816946101E-5	DESIGN	3.7712784436442884E-7	DEFECT	1.9823830449491976E-7	DOCUMENTATION	1.8671179779728158E-7	IMPLEMENTATION	1.17712474789542E-7	TEST
// Resolve to an identity column.	WITHOUT_CLASSIFICATION	0.9989618929366162	WITHOUT_CLASSIFICATION	8.500610423726353E-4	DESIGN	1.0331514478423391E-4	IMPLEMENTATION	4.056746693660131E-5	DOCUMENTATION	2.409398408694428E-5	TEST	2.0069425203340613E-5	DEFECT
// Otherwise, it's a literal.	WITHOUT_CLASSIFICATION	0.9998770621264095	WITHOUT_CLASSIFICATION	1.1826521520453484E-4	IMPLEMENTATION	2.8777527144218504E-6	DESIGN	1.2069413701277296E-6	TEST	4.2585719767779865E-7	DOCUMENTATION	1.6210710361669646E-7	DEFECT
// the name of an entity class	WITHOUT_CLASSIFICATION	0.9999977184028244	WITHOUT_CLASSIFICATION	1.623964773364815E-6	DESIGN	4.797186900787034E-7	DOCUMENTATION	7.623458752272343E-8	TEST	6.988930303033306E-8	IMPLEMENTATION	3.17898216993979E-8	DEFECT
//the class discriminator value	WITHOUT_CLASSIFICATION	0.9999981963994296	WITHOUT_CLASSIFICATION	1.44517479535984E-6	DESIGN	2.2329037960429864E-7	DEFECT	6.908745631347385E-8	DOCUMENTATION	3.3510225092798993E-8	IMPLEMENTATION	3.253771419394433E-8	TEST
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999898037878533	WITHOUT_CLASSIFICATION	4.832969384804039E-6	TEST	4.583938032588287E-6	IMPLEMENTATION	3.0041292309965236E-7	DOCUMENTATION	2.80116139914942E-7	DEFECT	1.987756663703895E-7	DESIGN
// Add a space before the display text.	WITHOUT_CLASSIFICATION	0.9996931274721678	WITHOUT_CLASSIFICATION	3.062687383317455E-4	IMPLEMENTATION	2.95903252160112E-7	DEFECT	1.9738493560300714E-7	DOCUMENTATION	8.380989525433834E-8	TEST	2.669141748021266E-8	DESIGN
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999835137155128	WITHOUT_CLASSIFICATION	1.4256343119021267E-5	IMPLEMENTATION	8.842487709566823E-7	TEST	8.649196041224997E-7	DESIGN	3.2086253573722795E-7	DOCUMENTATION	1.5991045753733928E-7	DEFECT
// child == parent.getFirstChild()	WITHOUT_CLASSIFICATION	0.9999926019098104	WITHOUT_CLASSIFICATION	5.8035397227329845E-6	IMPLEMENTATION	7.426652246026575E-7	DESIGN	3.6980535920621033E-7	DEFECT	3.154656904732115E-7	TEST	1.666141924452852E-7	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999835137155128	WITHOUT_CLASSIFICATION	1.4256343119021267E-5	IMPLEMENTATION	8.842487709566823E-7	TEST	8.649196041224997E-7	DESIGN	3.2086253573722795E-7	DOCUMENTATION	1.5991045753733928E-7	DEFECT
// Filter conditions need to be inserted before the HQL where condition and the // theta join node.  This is because org.hibernate.loader.Loader binds the filter parameters first, // then it binds all the HQL query parameters, see org.hibernate.loader.Loader.processFilterParameters().	WITHOUT_CLASSIFICATION	0.999922794648686	WITHOUT_CLASSIFICATION	7.427901176057111E-5	IMPLEMENTATION	2.4293625546529945E-6	DESIGN	3.292925803397573E-7	DEFECT	1.3033484132878644E-7	DOCUMENTATION	3.7349576996731956E-8	TEST
// Put the FILTERS node before the HQL condition and theta joins	WITHOUT_CLASSIFICATION	0.9999556764564025	WITHOUT_CLASSIFICATION	3.4575126594872565E-5	IMPLEMENTATION	6.779714442875963E-6	DESIGN	2.5750844473692756E-6	DEFECT	2.2498608105436417E-7	DOCUMENTATION	1.686320313035623E-7	TEST
// add the current fragment to the FILTERS node	WITHOUT_CLASSIFICATION	0.9998937254272146	WITHOUT_CLASSIFICATION	8.334279982197876E-5	IMPLEMENTATION	1.8566122690248574E-5	DOCUMENTATION	2.400290378945407E-6	DEFECT	1.061962484693308E-6	TEST	9.033974095304872E-7	DESIGN
// Create a new THETA_JOINS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.999927105400193	WITHOUT_CLASSIFICATION	5.417769019818183E-5	DESIGN	1.2249090637998606E-5	IMPLEMENTATION	5.589059239583096E-6	DEFECT	4.7271411045887103E-7	TEST	4.06045620832243E-7	DOCUMENTATION
// Put the THETA_JOINS node before the HQL condition, after the filters.	WITHOUT_CLASSIFICATION	0.9999840375275566	WITHOUT_CLASSIFICATION	1.2925585169925266E-5	DESIGN	2.4620803999392395E-6	IMPLEMENTATION	2.753808717404587E-7	TEST	2.0917578728611713E-7	DEFECT	9.025021462546474E-8	DOCUMENTATION
// add the current fragment to the THETA_JOINS node	WITHOUT_CLASSIFICATION	0.999864863810429	WITHOUT_CLASSIFICATION	9.807324812391607E-5	IMPLEMENTATION	3.1573869783719804E-5	DOCUMENTATION	3.006875866690135E-6	DEFECT	1.3352774756744797E-6	TEST	1.146918321012944E-6	DESIGN
// First, try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.999998638106779	WITHOUT_CLASSIFICATION	5.292225800156118E-7	IMPLEMENTATION	3.0284508573362725E-7	DEFECT	2.00875517215254E-7	DESIGN	1.8349602373340456E-7	TEST	1.4545401424515428E-7	DOCUMENTATION
// unable to locate it using this name	WITHOUT_CLASSIFICATION	0.9999688486024612	WITHOUT_CLASSIFICATION	2.064660497900844E-5	DESIGN	8.804394924412067E-6	TEST	1.1635526519979685E-6	DEFECT	4.694978510856832E-7	DOCUMENTATION	6.734713223955578E-8	IMPLEMENTATION
// If that didn't work, try using the 'import' name.	WITHOUT_CLASSIFICATION	0.9994024431272105	WITHOUT_CLASSIFICATION	5.75472586585634E-4	DEFECT	1.7988189088810383E-5	DESIGN	2.0569029245903538E-6	DOCUMENTATION	1.1116335049465185E-6	TEST	9.275606855624368E-7	IMPLEMENTATION
// Implicit joins use theta style (WHERE pk = fk), explicit joins use JOIN (after from)	WITHOUT_CLASSIFICATION	0.9998108485537341	WITHOUT_CLASSIFICATION	1.6592641816090417E-4	IMPLEMENTATION	2.023844221321867E-5	DESIGN	1.3577252292729221E-6	DOCUMENTATION	1.3143864779602739E-6	DEFECT	3.1447418449221923E-7	TEST
// locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.999968071745572	WITHOUT_CLASSIFICATION	1.907665585565354E-5	DESIGN	8.11855364208268E-6	IMPLEMENTATION	2.877707877452717E-6	DEFECT	9.480944121209192E-7	DOCUMENTATION	9.0724264056947E-7	TEST
// determine the type of the first argument...	WITHOUT_CLASSIFICATION	0.999974750242916	WITHOUT_CLASSIFICATION	2.4367229803803407E-5	DESIGN	6.959941705526221E-7	DOCUMENTATION	1.390750404446532E-7	TEST	2.6681683539859144E-8	IMPLEMENTATION	2.077638548467028E-8	DEFECT
// Use the DOT node to emit the first column name. // Create the column names, folled by the column aliases.	WITHOUT_CLASSIFICATION	0.9999915788444479	WITHOUT_CLASSIFICATION	4.533618028530461E-6	IMPLEMENTATION	2.3970504669265134E-6	DESIGN	1.1067267224722851E-6	TEST	2.148409819085977E-7	DEFECT	1.6891935228574666E-7	DOCUMENTATION
// Note: this simply constructs a "raw" SQL_TOKEN representing the // where fragment and injects this into the tree.  This "works"; // however it is probably not the best long-term solution. // // At some point we probably want to apply an additional grammar to // properly tokenize this where fragment into constituent parts // focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.6021266163609498	DESIGN	0.2409747443446561	WITHOUT_CLASSIFICATION	0.10526618508229228	DEFECT	0.045871873750262304	IMPLEMENTATION	0.005162223992468719	TEST	5.983564693706545E-4	DOCUMENTATION
// Append the text of the current node.	WITHOUT_CLASSIFICATION	0.9980711751408637	WITHOUT_CLASSIFICATION	0.0010986533031486921	IMPLEMENTATION	7.023378520708471E-4	DEFECT	1.101010776638064E-4	DOCUMENTATION	1.2505407604580015E-5	TEST	5.2272186482836624E-6	DESIGN
// If the node has a first child, recurse into the first child.	WITHOUT_CLASSIFICATION	0.9999888670523878	WITHOUT_CLASSIFICATION	9.672605931918674E-6	DESIGN	9.599772610801843E-7	IMPLEMENTATION	2.3430146983362797E-7	DOCUMENTATION	1.5100887722460966E-7	DEFECT	1.1505407217961821E-7	TEST
// If there is a second child (RHS), recurse into that child.	WITHOUT_CLASSIFICATION	0.9998645578281088	WITHOUT_CLASSIFICATION	1.3333452247191925E-4	DESIGN	7.965823955481987E-7	DEFECT	6.561008775464457E-7	IMPLEMENTATION	3.331994607490303E-7	TEST	3.217666855948553E-7	DOCUMENTATION
// Iterate through the alias,JoinSequence pairs and generate SQL token nodes.	WITHOUT_CLASSIFICATION	0.9999969238168547	WITHOUT_CLASSIFICATION	2.5576352367301807E-6	IMPLEMENTATION	2.6158526929859546E-7	DOCUMENTATION	1.3216005800584292E-7	TEST	1.0091079137289841E-7	DESIGN	2.3891790016649557E-8	DEFECT
// If the from element represents a JOIN_FRAGMENT and it is // a theta-style join, convert its type from JOIN_FRAGMENT // to FROM_FRAGMENT	WITHOUT_CLASSIFICATION	0.9999886398887672	WITHOUT_CLASSIFICATION	6.7713940557595355E-6	DESIGN	2.777991249881729E-6	IMPLEMENTATION	1.620662027529793E-6	DEFECT	1.2754427441476285E-7	TEST	6.251962527415048E-8	DOCUMENTATION
// this is used during SqlGenerator processing	WITHOUT_CLASSIFICATION	0.9991951409160917	WITHOUT_CLASSIFICATION	7.855052197450651E-4	DESIGN	1.2618895433335022E-5	TEST	2.7102848505122178E-6	DOCUMENTATION	2.1858599364871384E-6	IMPLEMENTATION	1.8388239429905139E-6	DEFECT
// If there is a FROM fragment and the FROM element is an explicit, then add the from part.	WITHOUT_CLASSIFICATION	0.9999965400116418	WITHOUT_CLASSIFICATION	2.52337798888994E-6	DEFECT	6.327778953152528E-7	DESIGN	2.040979753257033E-7	IMPLEMENTATION	6.834028534654114E-8	DOCUMENTATION	3.1394213337119465E-8	TEST
/*&& StringHelper.isNotEmpty( frag )*/	WITHOUT_CLASSIFICATION	0.9996639938019225	WITHOUT_CLASSIFICATION	1.1302663324834155E-4	IMPLEMENTATION	9.84803093095618E-5	DESIGN	9.822867205284161E-5	DEFECT	1.6815612194152367E-5	TEST	9.45497127260301E-6	DOCUMENTATION
// The FROM fragment will probably begin with ', '.  Remove this if it is present.	WITHOUT_CLASSIFICATION	0.9876449984953645	WITHOUT_CLASSIFICATION	0.01039298427683697	DESIGN	0.001045069574996084	DEFECT	8.030571858649631E-4	TEST	7.790923433139281E-5	IMPLEMENTATION	3.5981232606025634E-5	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9946549655605109	WITHOUT_CLASSIFICATION	0.004885132767690949	DESIGN	4.545106010939675E-4	DEFECT	2.8112757624850755E-6	IMPLEMENTATION	2.210687029874136E-6	TEST	3.691079117535989E-7	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person ORDER BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999814706672118	WITHOUT_CLASSIFICATION	8.241471823256381E-6	IMPLEMENTATION	5.713798964859733E-6	DESIGN	2.8549648563769057E-6	DEFECT	1.2394357642139636E-6	TEST	4.796613795008499E-7	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9998926742123857	WITHOUT_CLASSIFICATION	8.842619970815324E-5	DESIGN	1.8650514777005707E-5	DEFECT	2.3204549464781795E-7	TEST	1.498134302963584E-8	DOCUMENTATION	2.046291482990046E-9	IMPLEMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.999420714815682	WITHOUT_CLASSIFICATION	2.68000828080064E-4	DESIGN	2.499086078152955E-4	IMPLEMENTATION	2.1822856417964986E-5	DOCUMENTATION	2.0555214735579933E-5	TEST	1.8997677269137777E-5	DEFECT
//default mode	WITHOUT_CLASSIFICATION	0.9999631122717246	WITHOUT_CLASSIFICATION	2.1039483037682908E-5	IMPLEMENTATION	9.646515464592977E-6	DESIGN	2.696585272603971E-6	DOCUMENTATION	2.2740493136544878E-6	TEST	1.2310951867197602E-6	DEFECT
//QueryJoinFragment join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999228221012475	WITHOUT_CLASSIFICATION	6.733007263750718E-5	IMPLEMENTATION	4.5862148412642186E-6	DEFECT	2.7059468936029515E-6	DOCUMENTATION	2.067952971362337E-6	TEST	4.877114087062807E-7	DESIGN
//reset the dotcount (but not the path) //after reset!	WITHOUT_CLASSIFICATION	0.99990534774036	WITHOUT_CLASSIFICATION	5.558171903284712E-5	IMPLEMENTATION	3.385549245595501E-5	DEFECT	3.5980259754526917E-6	TEST	9.030368679877927E-7	DESIGN	7.139853076609112E-7	DOCUMENTATION
//after reset!	WITHOUT_CLASSIFICATION	0.9999302241324287	WITHOUT_CLASSIFICATION	3.898485499371347E-5	IMPLEMENTATION	1.769301512903811E-5	DESIGN	6.24554016450605E-6	TEST	4.6529381435350435E-6	DEFECT	2.1995191404706414E-6	DOCUMENTATION
// we don't need to worry about any condition in the ON clause // here (toFromFragmentString), since anything in the ON condition // is already applied to the whole query	WITHOUT_CLASSIFICATION	0.9838348245553322	WITHOUT_CLASSIFICATION	0.011202487897626375	DESIGN	0.004498610946491205	IMPLEMENTATION	2.92201877147853E-4	DEFECT	1.0085202126085023E-4	DOCUMENTATION	7.102270214150296E-5	TEST
// bit_length feels a bit broken to me. We have to cast to char in order to // pass when a numeric value is supplied. But of course the answers given will // be wildly different for these two datatypes. 1234.5678 will be 9 bytes as // a char string but will be 8 or 16 bytes as a true numeric. // Jay Nance 2006-09-22	WITHOUT_CLASSIFICATION	0.9997233042821151	WITHOUT_CLASSIFICATION	2.2351888603459573E-4	DESIGN	3.0132775375293938E-5	IMPLEMENTATION	1.7310816738559513E-5	DEFECT	4.493902883354409E-6	TEST	1.2393368530801248E-6	DOCUMENTATION
// dotcount>=2	WITHOUT_CLASSIFICATION	0.9999869140688524	WITHOUT_CLASSIFICATION	6.8913928822942415E-6	DEFECT	2.625069846045907E-6	IMPLEMENTATION	2.2439726305294647E-6	DOCUMENTATION	9.301478591807424E-7	TEST	3.9534792955296053E-7	DESIGN
// Do the corresponding RHS	WITHOUT_CLASSIFICATION	0.9998934992966243	WITHOUT_CLASSIFICATION	8.059634630968175E-5	IMPLEMENTATION	1.4108285944692903E-5	DOCUMENTATION	5.576740089747363E-6	TEST	3.210439911369555E-6	DEFECT	3.0088911202505025E-6	DESIGN
//if its "id"	WITHOUT_CLASSIFICATION	0.9998254825927347	WITHOUT_CLASSIFICATION	1.1224712371825851E-4	DESIGN	2.586387245886231E-5	TEST	1.7139789380539192E-5	IMPLEMENTATION	1.059616972785848E-5	DEFECT	8.670451979679203E-6	DOCUMENTATION
//or its the id property name	WITHOUT_CLASSIFICATION	0.9999934520631382	WITHOUT_CLASSIFICATION	3.7209540953683827E-6	IMPLEMENTATION	1.358554458853455E-6	DESIGN	7.50923662110736E-7	DOCUMENTATION	4.3650759694473883E-7	DEFECT	2.809970486214139E-7	TEST
//join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999726167393205	WITHOUT_CLASSIFICATION	2.1044827727993172E-5	IMPLEMENTATION	2.3221023092579317E-6	DOCUMENTATION	2.2888198954937197E-6	DEFECT	1.3716935277240294E-6	TEST	3.558172190042759E-7	DESIGN
//important!!	WITHOUT_CLASSIFICATION	0.9983834827165365	WITHOUT_CLASSIFICATION	6.104097582066983E-4	DEFECT	3.919256100547955E-4	IMPLEMENTATION	3.428649026688432E-4	DESIGN	2.3246624735056103E-4	DOCUMENTATION	3.885076518263164E-5	TEST
//String[] keyCols = collPersister.getKeyColumnNames();	WITHOUT_CLASSIFICATION	0.9999517741392786	WITHOUT_CLASSIFICATION	2.37109697647648E-5	DESIGN	1.1505086996671573E-5	DEFECT	9.850135677519147E-6	TEST	2.1398102756642982E-6	IMPLEMENTATION	1.0198580068486102E-6	DOCUMENTATION
// an association	WITHOUT_CLASSIFICATION	0.9999983834712509	WITHOUT_CLASSIFICATION	7.203595451090116E-7	DOCUMENTATION	5.036522499970619E-7	TEST	2.9442553845733107E-7	DESIGN	7.527372081697034E-8	IMPLEMENTATION	2.2817694789246518E-8	DEFECT
//allow index() function:	WITHOUT_CLASSIFICATION	0.9999320008955668	WITHOUT_CLASSIFICATION	4.8015609485829455E-5	DEFECT	1.0292052642364186E-5	IMPLEMENTATION	4.274365314712134E-6	DESIGN	3.5774532654571494E-6	DOCUMENTATION	1.8396237248148343E-6	TEST
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9983802268263569	WITHOUT_CLASSIFICATION	0.0013845815636841575	DEFECT	1.9621564292682795E-4	TEST	2.88207525026147E-5	DESIGN	9.453861857354528E-6	DOCUMENTATION	7.01352672210529E-7	IMPLEMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9998926742123857	WITHOUT_CLASSIFICATION	8.842619970815324E-5	DESIGN	1.8650514777005707E-5	DEFECT	2.3204549464781795E-7	TEST	1.498134302963584E-8	DOCUMENTATION	2.046291482990046E-9	IMPLEMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9987571612640433	WITHOUT_CLASSIFICATION	5.415453200924619E-4	IMPLEMENTATION	2.8183686567539713E-4	DEFECT	2.7747859541419955E-4	DOCUMENTATION	8.039142712918934E-5	DESIGN	6.158652764540997E-5	TEST
// collections of values	WITHOUT_CLASSIFICATION	0.9999991202291689	WITHOUT_CLASSIFICATION	3.1457650414558874E-7	DEFECT	2.0156085030725747E-7	TEST	1.5376367989317933E-7	DESIGN	1.1794720529891294E-7	IMPLEMENTATION	9.192259147262511E-8	DOCUMENTATION
//opening paren in new Foo ( ... )	WITHOUT_CLASSIFICATION	0.9966897915799939	WITHOUT_CLASSIFICATION	0.002578823753117017	DESIGN	1.9956402432276375E-4	DEFECT	1.9525115262297358E-4	DOCUMENTATION	1.7494277680596708E-4	IMPLEMENTATION	1.6162671313724468E-4	TEST
//if we are inside a new Result(), but not inside a nested function	WITHOUT_CLASSIFICATION	0.9999652141474885	WITHOUT_CLASSIFICATION	1.241105254478216E-5	DEFECT	1.1878995904238387E-5	DESIGN	8.919514979184204E-6	TEST	9.23478026123053E-7	IMPLEMENTATION	6.528110570602267E-7	DOCUMENTATION
//special case	WITHOUT_CLASSIFICATION	0.9999006009469512	WITHOUT_CLASSIFICATION	9.394973632964766E-5	IMPLEMENTATION	2.8974423832911224E-6	DOCUMENTATION	1.6320219667674822E-6	DESIGN	7.217261409000493E-7	TEST	1.9812622818241417E-7	DEFECT
// the name of an SQL function	WITHOUT_CLASSIFICATION	0.9999992291814062	WITHOUT_CLASSIFICATION	3.91099245117722E-7	DOCUMENTATION	2.3877686327554906E-7	DESIGN	6.277841704793026E-8	TEST	4.30909985245344E-8	DEFECT	3.507306988562889E-8	IMPLEMENTATION
//null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.9999985508167186	WITHOUT_CLASSIFICATION	1.2356633107021746E-6	DESIGN	1.0945804210520641E-7	DOCUMENTATION	4.642922401794329E-8	IMPLEMENTATION	2.96735297729536E-8	DEFECT	2.7959174821044883E-8	TEST
//this is basically a copy/paste of OrderByParser ... might be worth refactoring	WITHOUT_CLASSIFICATION	0.6616701601538637	DESIGN	0.3250113275385379	WITHOUT_CLASSIFICATION	0.013066265980970989	DEFECT	2.3487154440337448E-4	TEST	1.0326956200420517E-5	DOCUMENTATION	7.047826023684191E-6	IMPLEMENTATION
// SELECT p FROM p IN CLASS eg.Person GROUP BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999804468582508	WITHOUT_CLASSIFICATION	1.0845311960270469E-5	DESIGN	4.621908401272983E-6	IMPLEMENTATION	2.801853902403757E-6	DEFECT	8.823223845706164E-7	TEST	4.017451005605555E-7	DOCUMENTATION
// return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.9922521081734855	WITHOUT_CLASSIFICATION	0.007599887226852818	DESIGN	1.3505455875516617E-4	DEFECT	7.131887134859871E-6	TEST	3.5959753982612066E-6	IMPLEMENTATION	2.222178373398065E-6	DOCUMENTATION
//register collection role	WITHOUT_CLASSIFICATION	0.9995734497735217	WITHOUT_CLASSIFICATION	2.575398211162104E-4	DESIGN	1.330875663505285E-4	IMPLEMENTATION	3.077559957973061E-5	TEST	3.2566404233613346E-6	DOCUMENTATION	1.8905990085024989E-6	DEFECT
// The keyword used to specify an identity column, if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.995774930136564	WITHOUT_CLASSIFICATION	0.00419174104462337	DESIGN	1.7878833642107613E-5	DOCUMENTATION	8.049850939012459E-6	TEST	6.880967705109015E-6	DEFECT	5.191665262896489E-7	IMPLEMENTATION
//.getElementPropertyMapping();	WITHOUT_CLASSIFICATION	0.9994817807744263	WITHOUT_CLASSIFICATION	4.281229068403586E-4	IMPLEMENTATION	6.243672747131195E-5	DEFECT	1.1167481957646886E-5	DOCUMENTATION	8.930939545867245E-6	DESIGN	7.561169758563504E-6	TEST
//crossJoins.add(name);	WITHOUT_CLASSIFICATION	0.9999442238329258	WITHOUT_CLASSIFICATION	3.597183114752975E-5	IMPLEMENTATION	1.0146019039637404E-5	DOCUMENTATION	4.196847488222109E-6	TEST	4.1345455632640525E-6	DEFECT	1.3269238354991314E-6	DESIGN
//ie no select clause in HQL	WITHOUT_CLASSIFICATION	0.9999996193639815	WITHOUT_CLASSIFICATION	2.3195985428685122E-7	DOCUMENTATION	5.41029947706252E-8	DESIGN	4.4202707082074036E-8	DEFECT	3.2141983913029336E-8	TEST	1.8228478321398856E-8	IMPLEMENTATION
// initialize the Set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.9999996597156176	WITHOUT_CLASSIFICATION	2.380747294077253E-7	IMPLEMENTATION	6.101553549467313E-8	DESIGN	2.0352238422988645E-8	DOCUMENTATION	1.1713580204213804E-8	DEFECT	9.128298897505208E-9	TEST
//ie. no select clause	WITHOUT_CLASSIFICATION	0.9999994895132496	WITHOUT_CLASSIFICATION	2.4157145095082575E-7	IMPLEMENTATION	1.5790508017169438E-7	DOCUMENTATION	8.175545025713473E-8	TEST	2.062121429249964E-8	DEFECT	8.633554685895644E-9	DESIGN
//there _was_ a select clause	WITHOUT_CLASSIFICATION	0.9999976458890926	WITHOUT_CLASSIFICATION	1.5872382072791764E-6	IMPLEMENTATION	4.62493146523167E-7	DESIGN	2.42673975064962E-7	TEST	3.4093420122091065E-8	DOCUMENTATION	2.7612158484985383E-8	DEFECT
// return the concrete type, or the underlying type if a concrete type // was not specified	WITHOUT_CLASSIFICATION	0.9999986992844015	WITHOUT_CLASSIFICATION	1.0976805794702581E-6	DESIGN	1.5380653280750104E-7	DEFECT	2.4395395315399515E-8	IMPLEMENTATION	1.7560079898293434E-8	TEST	7.273010980884994E-9	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9987571612640433	WITHOUT_CLASSIFICATION	5.415453200924619E-4	IMPLEMENTATION	2.8183686567539713E-4	DEFECT	2.7747859541419955E-4	DOCUMENTATION	8.039142712918934E-5	DESIGN	6.158652764540997E-5	TEST
//q.addCollection(collectionName, collectionRole);	WITHOUT_CLASSIFICATION	0.9999026422869538	WITHOUT_CLASSIFICATION	2.552959329546473E-5	TEST	2.498910218689856E-5	IMPLEMENTATION	2.1777022406172415E-5	DESIGN	1.6116555882488504E-5	DEFECT	8.945439275115887E-6	DOCUMENTATION
// classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.9926791271880115	WITHOUT_CLASSIFICATION	0.006244247478566356	DEFECT	0.0010050775001398532	DESIGN	3.435233168863464E-5	IMPLEMENTATION	2.5731332676480993E-5	TEST	1.1464168917078014E-5	DOCUMENTATION
// can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.9999664856126542	WITHOUT_CLASSIFICATION	1.538738779555606E-5	DESIGN	7.065527883688252E-6	TEST	4.3523517164108735E-6	DOCUMENTATION	3.7962339683089546E-6	DEFECT	2.912885981898922E-6	IMPLEMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999942448716213	WITHOUT_CLASSIFICATION	3.195514353838795E-6	DEFECT	1.1250174785454421E-6	IMPLEMENTATION	7.397997028452482E-7	DESIGN	3.704212578224867E-7	DOCUMENTATION	3.243755855240053E-7	TEST
// This is the legacy behaviour for HQL queries...	WITHOUT_CLASSIFICATION	0.9998745037231648	WITHOUT_CLASSIFICATION	1.1928739829935096E-4	DESIGN	4.095066171924083E-6	DEFECT	1.547309101347159E-6	IMPLEMENTATION	4.2540495650422454E-7	TEST	1.4109830606115243E-7	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.8706693831651494	WITHOUT_CLASSIFICATION	0.12301399543127652	IMPLEMENTATION	0.004556861702384791	DEFECT	8.875411671752699E-4	DOCUMENTATION	4.853651108998529E-4	TEST	3.8685342311434027E-4	DESIGN
// not known!	WITHOUT_CLASSIFICATION	0.8706693831651494	WITHOUT_CLASSIFICATION	0.12301399543127652	IMPLEMENTATION	0.004556861702384791	DEFECT	8.875411671752699E-4	DOCUMENTATION	4.853651108998529E-4	TEST	3.8685342311434027E-4	DESIGN
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999874120725156	WITHOUT_CLASSIFICATION	7.11728442055358E-6	IMPLEMENTATION	3.258980947320947E-6	DEFECT	1.739614163294747E-6	DOCUMENTATION	3.0379771382751177E-7	TEST	1.6825023932011605E-7	DESIGN
// not known!	WITHOUT_CLASSIFICATION	0.8706693831651494	WITHOUT_CLASSIFICATION	0.12301399543127652	IMPLEMENTATION	0.004556861702384791	DEFECT	8.875411671752699E-4	DOCUMENTATION	4.853651108998529E-4	TEST	3.8685342311434027E-4	DESIGN
// not known!	WITHOUT_CLASSIFICATION	0.8706693831651494	WITHOUT_CLASSIFICATION	0.12301399543127652	IMPLEMENTATION	0.004556861702384791	DEFECT	8.875411671752699E-4	DOCUMENTATION	4.853651108998529E-4	TEST	3.8685342311434027E-4	DESIGN
//Need this, since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.9948760949186454	WITHOUT_CLASSIFICATION	0.0038984592942391434	DESIGN	6.133359483111766E-4	IMPLEMENTATION	3.984511312596967E-4	DOCUMENTATION	1.3186164778016487E-4	TEST	8.17970597644377E-5	DEFECT
//tokens that close a sub expression //tokens that open a sub expression //tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.999729743204685	WITHOUT_CLASSIFICATION	2.206116552082075E-4	DESIGN	4.384222297088996E-5	DEFECT	4.7650978494622585E-6	TEST	9.378988060847735E-7	DOCUMENTATION	9.992048028631889E-8	IMPLEMENTATION
//expressionTerminators.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999976913352877	WITHOUT_CLASSIFICATION	1.059330622460001E-6	DEFECT	4.896664953357817E-7	IMPLEMENTATION	4.0953680277032717E-7	DESIGN	2.433218236158135E-7	TEST	1.0680896802824534E-7	DOCUMENTATION
//expressionOpeners.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999928882720572	WITHOUT_CLASSIFICATION	3.930521968536698E-6	IMPLEMENTATION	1.5501042905130592E-6	DESIGN	8.095520620854544E-7	DEFECT	5.419051424462346E-7	TEST	2.796444791109974E-7	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource) // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9979108854912832	WITHOUT_CLASSIFICATION	0.0011819858754747129	DEFECT	7.984008970378183E-4	IMPLEMENTATION	7.271175756044722E-5	DESIGN	3.334961193197308E-5	DOCUMENTATION	2.666366712016397E-6	TEST
// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and "do the right thing" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character (what is to be trimmed off?) // the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.6761365499911034	DESIGN	0.32287724744708285	WITHOUT_CLASSIFICATION	8.234055931884932E-4	IMPLEMENTATION	1.0373297589426803E-4	DOCUMENTATION	5.8775175975932637E-5	TEST	2.8881675509588047E-7	DEFECT
//Inside a BETWEEN ... AND ... expression	WITHOUT_CLASSIFICATION	0.9742122772429488	WITHOUT_CLASSIFICATION	0.022232892207947618	DESIGN	0.002878198612284952	DEFECT	5.059309073755121E-4	IMPLEMENTATION	1.4333686231038806E-4	DOCUMENTATION	2.736416713271127E-5	TEST
//were an odd or even number of NOTs encountered //the join string built up by compound paths inside this expression //a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.9909160956325774	WITHOUT_CLASSIFICATION	0.006666051041324124	DESIGN	0.0023153101567768715	DEFECT	5.479854502517013E-5	DOCUMENTATION	3.419264844396229E-5	TEST	1.3551975852353127E-5	IMPLEMENTATION
//ie. a many-to-many	WITHOUT_CLASSIFICATION	0.9998237182781008	WITHOUT_CLASSIFICATION	8.089713324329084E-5	IMPLEMENTATION	3.2330443562814304E-5	DEFECT	3.0625089733194764E-5	DESIGN	2.7491082979126708E-5	DOCUMENTATION	4.937972380805386E-6	TEST
//Cope with [,]	WITHOUT_CLASSIFICATION	0.999913642273953	WITHOUT_CLASSIFICATION	3.370808666988478E-5	TEST	2.3641742498533153E-5	IMPLEMENTATION	1.7412814829869592E-5	DOCUMENTATION	7.686113392106725E-6	DESIGN	3.908968656616961E-6	DEFECT
//Cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.99995684676533	WITHOUT_CLASSIFICATION	2.8800685251025108E-5	DESIGN	7.899962501499543E-6	DEFECT	3.7349955670898E-6	TEST	2.039832071139106E-6	DOCUMENTATION	6.777592792452254E-7	IMPLEMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9999603897426267	WITHOUT_CLASSIFICATION	1.4643776269392459E-5	IMPLEMENTATION	1.2085211931625009E-5	DEFECT	1.0311448876915757E-5	DESIGN	1.7650658984292841E-6	DOCUMENTATION	8.04754396932254E-7	TEST
//Cope with a subselect	WITHOUT_CLASSIFICATION	0.9999978285563578	WITHOUT_CLASSIFICATION	1.0005738797353421E-6	TEST	3.9525093840018184E-7	IMPLEMENTATION	3.6583129159719254E-7	DESIGN	2.412109745452408E-7	DOCUMENTATION	1.685765579133E-7	DEFECT
//Cope with special cases of AND, NOT, ()	WITHOUT_CLASSIFICATION	0.9999506467874101	WITHOUT_CLASSIFICATION	2.367592622222924E-5	IMPLEMENTATION	1.1993883914318746E-5	TEST	8.752437292165506E-6	DOCUMENTATION	2.606686497217482E-6	DEFECT	2.3242786639141655E-6	DESIGN
//Close extra brackets we opened	WITHOUT_CLASSIFICATION	0.999973046427219	WITHOUT_CLASSIFICATION	2.005848500902199E-5	DESIGN	2.957170817469577E-6	DEFECT	1.9848295783475346E-6	DOCUMENTATION	1.1800290651775652E-6	IMPLEMENTATION	7.730583110900407E-7	TEST
//take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.9883026510406139	WITHOUT_CLASSIFICATION	0.0076776161073826305	DESIGN	0.0037097130627279638	DEFECT	1.5247022528064888E-4	TEST	1.1617963618345879E-4	DOCUMENTATION	4.136992781141185E-5	IMPLEMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999783891527826	WITHOUT_CLASSIFICATION	1.652456873161503E-5	DESIGN	2.2520293987880717E-6	DOCUMENTATION	1.4362640524008138E-6	TEST	9.426402555393263E-7	IMPLEMENTATION	4.5534477902879173E-7	DEFECT
//process a token, mapping OO path expressions to SQL expressions	WITHOUT_CLASSIFICATION	0.993964113794099	WITHOUT_CLASSIFICATION	0.005180843037852735	DEFECT	5.131113177376619E-4	DESIGN	1.9126458718217597E-4	IMPLEMENTATION	1.3182781978518448E-4	DOCUMENTATION	1.8839443343215814E-5	TEST
//Open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.9136544990245906	WITHOUT_CLASSIFICATION	0.08464072990653727	DESIGN	6.967374822612858E-4	DEFECT	4.652310527909468E-4	IMPLEMENTATION	4.0995070115649974E-4	DOCUMENTATION	1.3285183266344825E-4	TEST
//Cope with special cases of AND, NOT, )	WITHOUT_CLASSIFICATION	0.9999379089392109	WITHOUT_CLASSIFICATION	2.8210506406571746E-5	IMPLEMENTATION	1.5822361464822634E-5	TEST	1.165758713720761E-5	DOCUMENTATION	3.3167889508542125E-6	DESIGN	3.083816829482132E-6	DEFECT
// the next one up must also be	WITHOUT_CLASSIFICATION	0.9998959268116377	WITHOUT_CLASSIFICATION	6.134095491559197E-5	IMPLEMENTATION	1.881758625728845E-5	DESIGN	1.1320305385617891E-5	DOCUMENTATION	8.822878549283387E-6	DEFECT	3.7714632544282486E-6	TEST
// Add any joins	WITHOUT_CLASSIFICATION	0.9999749069902443	WITHOUT_CLASSIFICATION	2.056337327905016E-5	IMPLEMENTATION	2.0912454419366325E-6	DOCUMENTATION	1.3667132407369095E-6	DEFECT	7.06583371464989E-7	TEST	3.6509442253301067E-7	DESIGN
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999783891527826	WITHOUT_CLASSIFICATION	1.652456873161503E-5	DESIGN	2.2520293987880717E-6	DOCUMENTATION	1.4362640524008138E-6	TEST	9.426402555393263E-7	IMPLEMENTATION	4.5534477902879173E-7	DEFECT
//named query parameter	WITHOUT_CLASSIFICATION	0.999420714815682	WITHOUT_CLASSIFICATION	2.68000828080064E-4	DESIGN	2.499086078152955E-4	IMPLEMENTATION	2.1822856417964986E-5	DOCUMENTATION	2.0555214735579933E-5	TEST	1.8997677269137777E-5	DEFECT
//path expression	WITHOUT_CLASSIFICATION	0.9999567616754651	WITHOUT_CLASSIFICATION	1.2583325458283094E-5	DESIGN	9.973996341257132E-6	DEFECT	9.721188011324385E-6	IMPLEMENTATION	6.877057528400788E-6	DOCUMENTATION	4.082757195617016E-6	TEST
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999909337404908	WITHOUT_CLASSIFICATION	4.964725671723991E-6	IMPLEMENTATION	1.8463621070786242E-6	DEFECT	1.5699125057929683E-6	DESIGN	4.1946152248373664E-7	TEST	2.6579770208413603E-7	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999784662700549	WITHOUT_CLASSIFICATION	1.2540167469740155E-5	IMPLEMENTATION	7.942909067876519E-6	DESIGN	4.2987902885117727E-7	TEST	4.220019548840792E-7	DEFECT	1.9877242387073044E-7	DOCUMENTATION
//anything else	WITHOUT_CLASSIFICATION	0.9998079185498109	WITHOUT_CLASSIFICATION	1.7342547899970926E-4	IMPLEMENTATION	7.340038748964074E-6	TEST	5.449833238273152E-6	DEFECT	4.239589686656382E-6	DOCUMENTATION	1.6265095156207982E-6	DESIGN
// the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.9999564168613916	WITHOUT_CLASSIFICATION	3.1077897864050504E-5	DESIGN	1.0443257083481742E-5	DEFECT	9.162658187058136E-7	DOCUMENTATION	7.16465044563565E-7	IMPLEMENTATION	4.292527976236895E-7	TEST
// careful with this!	WITHOUT_CLASSIFICATION	0.9999946726113144	WITHOUT_CLASSIFICATION	2.955715921417582E-6	DESIGN	2.0225570711728482E-6	TEST	2.033787732668756E-7	DOCUMENTATION	1.1509363925386952E-7	IMPLEMENTATION	3.0643280607492726E-8	DEFECT
// the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.9988778409126997	WITHOUT_CLASSIFICATION	8.900927156788883E-4	IMPLEMENTATION	1.3448784906441679E-4	DEFECT	7.83450253257423E-5	DESIGN	1.1846333102935724E-5	TEST	7.387164128225304E-6	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999822585961236	WITHOUT_CLASSIFICATION	1.398698235242215E-5	IMPLEMENTATION	2.6156963301823842E-6	DOCUMENTATION	7.183123914398202E-7	TEST	2.7377703433231717E-7	DEFECT	1.4663576813929636E-7	DESIGN
//NOTICE: no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.9992741444829636	WITHOUT_CLASSIFICATION	4.684240034505755E-4	DESIGN	2.0089314824020356E-4	IMPLEMENTATION	3.3619803883965015E-5	DEFECT	1.827265622491098E-5	DOCUMENTATION	4.645905236685789E-6	TEST
//cannot instantiate	WITHOUT_CLASSIFICATION	0.9981318034698689	WITHOUT_CLASSIFICATION	0.0011996648730281628	DESIGN	3.881029885616867E-4	IMPLEMENTATION	1.687657087598443E-4	DEFECT	6.234063336076955E-5	DOCUMENTATION	4.9322326420760484E-5	TEST
// start by looking for HQL keywords...	WITHOUT_CLASSIFICATION	0.9999988569419459	WITHOUT_CLASSIFICATION	8.672721196568024E-7	DEFECT	2.1413382109638972E-7	IMPLEMENTATION	3.079643550276202E-8	TEST	1.5985533674826184E-8	DESIGN	1.4870144167479743E-8	DOCUMENTATION
// inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.999958385751454	WITHOUT_CLASSIFICATION	2.418549643341338E-5	DESIGN	8.245824146044552E-6	DEFECT	7.916785920663342E-6	IMPLEMENTATION	7.411541014894726E-7	TEST	5.249879442468094E-7	DOCUMENTATION
// 'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.9999961950465757	WITHOUT_CLASSIFICATION	3.1407980011013254E-6	IMPLEMENTATION	4.744947059819078E-7	DEFECT	1.1219307512762641E-7	DESIGN	4.1018551222901224E-8	TEST	3.64490908165612E-8	DOCUMENTATION
// now anything that is not a HQL keyword	WITHOUT_CLASSIFICATION	0.9944270052132692	WITHOUT_CLASSIFICATION	0.0032412808524795293	IMPLEMENTATION	0.0021325528117445655	DEFECT	1.249297404941064E-4	TEST	6.90071319770731E-5	DESIGN	5.224250035533724E-6	DOCUMENTATION
// process the "old" HQL style where aliases appear _first_ // ie. using the IN or IN CLASS constructions	WITHOUT_CLASSIFICATION	0.99993673691829	WITHOUT_CLASSIFICATION	5.3507996385322185E-5	DESIGN	7.112762712162876E-6	IMPLEMENTATION	1.8807906664438386E-6	DEFECT	4.240248742838934E-7	TEST	3.3750707178787413E-7	DOCUMENTATION
// treat it as a classname	WITHOUT_CLASSIFICATION	0.9999950308053518	WITHOUT_CLASSIFICATION	3.067585926446659E-6	DESIGN	1.1052691220960925E-6	TEST	3.9821057254576326E-7	IMPLEMENTATION	2.3928236035791657E-7	DEFECT	1.5884666681633666E-7	DOCUMENTATION
// treat it as a path expression	WITHOUT_CLASSIFICATION	0.9999094012198871	WITHOUT_CLASSIFICATION	4.1184731790941704E-5	DEFECT	2.2532589714811963E-5	IMPLEMENTATION	1.2588352260607567E-5	DESIGN	1.2337264745944962E-5	TEST	1.955841600610003E-6	DOCUMENTATION
// starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.9999979785466131	WITHOUT_CLASSIFICATION	1.5175567441044712E-6	DESIGN	2.708195533871767E-7	TEST	8.530764582017313E-8	IMPLEMENTATION	7.948090550591509E-8	DOCUMENTATION	6.828853803510625E-8	DEFECT
// starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.9999914467044593	WITHOUT_CLASSIFICATION	2.876465152672399E-6	DEFECT	2.6273051665698907E-6	TEST	1.8752028448090319E-6	DESIGN	9.863010222583515E-7	IMPLEMENTATION	1.8802135430697382E-7	DOCUMENTATION
//allow ODMG OQL style: from Person p, p.cars c	WITHOUT_CLASSIFICATION	0.996124117254106	WITHOUT_CLASSIFICATION	0.003477398707369178	DESIGN	2.5139548382999014E-4	DEFECT	1.2012943365528168E-4	IMPLEMENTATION	1.7100024897476495E-5	TEST	9.859096142134362E-6	DOCUMENTATION
//handle quoted strings	WITHOUT_CLASSIFICATION	0.9999920179293942	WITHOUT_CLASSIFICATION	5.182164387641389E-6	IMPLEMENTATION	1.0920611218815919E-6	TEST	8.66255474230952E-7	DESIGN	6.574076326358643E-7	DOCUMENTATION	1.8418198953010132E-7	DEFECT
// Object insertions, updates, and deletions have list semantics because // they must happen in the right order so as to respect referential // integrity	WITHOUT_CLASSIFICATION	0.9975005846707785	WITHOUT_CLASSIFICATION	0.001757403333737257	DESIGN	7.379763997519367E-4	DEFECT	2.7473275701026572E-6	IMPLEMENTATION	1.0656740477854602E-6	DOCUMENTATION	2.2259411455858025E-7	TEST
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999822585961236	WITHOUT_CLASSIFICATION	1.398698235242215E-5	IMPLEMENTATION	2.6156963301823842E-6	DOCUMENTATION	7.183123914398202E-7	TEST	2.7377703433231717E-7	DEFECT	1.4663576813929636E-7	DESIGN
//ignore whitespace	WITHOUT_CLASSIFICATION	0.9999826423312527	WITHOUT_CLASSIFICATION	1.2274791039090943E-5	IMPLEMENTATION	2.7422563227983516E-6	DOCUMENTATION	1.171082748179872E-6	DESIGN	1.0297055370153228E-6	TEST	1.3983310018751078E-7	DEFECT
//do replacements	WITHOUT_CLASSIFICATION	0.9998825565464098	WITHOUT_CLASSIFICATION	8.657134745078155E-5	DESIGN	2.482841017734889E-5	IMPLEMENTATION	4.7039493364252785E-6	DOCUMENTATION	1.026825027630687E-6	TEST	3.129215979644179E-7	DEFECT
//handle HQL2 collection syntax	WITHOUT_CLASSIFICATION	0.9995555006483279	WITHOUT_CLASSIFICATION	2.3922744364477205E-4	IMPLEMENTATION	1.4474594324055627E-4	DESIGN	3.203483038490983E-5	DEFECT	1.7695088040421578E-5	DOCUMENTATION	1.0796046361342679E-5	TEST
// uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.9999647709275319	WITHOUT_CLASSIFICATION	1.5000218536066232E-5	DESIGN	1.338420554984755E-5	IMPLEMENTATION	3.2808199248990796E-6	TEST	2.2350215404656123E-6	DEFECT	1.3288069170188845E-6	DOCUMENTATION
// AbstractSelectingDelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999613917150235	WITHOUT_CLASSIFICATION	1.806724771436214E-5	DESIGN	1.5288756263484345E-5	IMPLEMENTATION	3.256103951647267E-6	TEST	1.4825006795389396E-6	DOCUMENTATION	5.136763674610666E-7	DEFECT
//hilo params	WITHOUT_CLASSIFICATION	0.9998976346425412	WITHOUT_CLASSIFICATION	7.15999855102919E-5	DESIGN	1.4012519493689898E-5	IMPLEMENTATION	7.44541719410755E-6	TEST	6.246738697641393E-6	DOCUMENTATION	3.0606965631274265E-6	DEFECT
//sql = query;	WITHOUT_CLASSIFICATION	0.9998521785675399	WITHOUT_CLASSIFICATION	1.266858986555833E-4	IMPLEMENTATION	9.10788016086599E-6	DESIGN	5.435741482287557E-6	TEST	3.937810747180926E-6	DOCUMENTATION	2.6541014140192018E-6	DEFECT
// performance opt	WITHOUT_CLASSIFICATION	0.9999976992479059	WITHOUT_CLASSIFICATION	1.2604144072783737E-6	DOCUMENTATION	5.612295622476809E-7	IMPLEMENTATION	2.6752209561373274E-7	DESIGN	1.6698065504477485E-7	DEFECT	4.4605374005686054E-8	TEST
//sql = update;	WITHOUT_CLASSIFICATION	0.9999804197124755	WITHOUT_CLASSIFICATION	1.435706286501699E-5	IMPLEMENTATION	3.106205021128634E-6	DEFECT	9.333225454276287E-7	TEST	7.820268905146487E-7	DOCUMENTATION	4.016702022639973E-7	DESIGN
//hilo config	WITHOUT_CLASSIFICATION	0.9999449551248552	WITHOUT_CLASSIFICATION	2.3570423948890672E-5	DOCUMENTATION	1.3543174733391307E-5	DESIGN	1.1198882716363602E-5	TEST	4.005920515948493E-6	IMPLEMENTATION	2.7264732303494605E-6	DEFECT
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999635805030466	WITHOUT_CLASSIFICATION	1.7997588311447597E-5	DESIGN	9.314568786946364E-6	DOCUMENTATION	4.664894074008188E-6	IMPLEMENTATION	4.0261926243575885E-6	TEST	4.16253156741013E-7	DEFECT
// don't allow comments on these insert statements as comments totally // blow up the Oracle getGeneratedKeys "support" :(	WITHOUT_CLASSIFICATION	0.9999874465362589	WITHOUT_CLASSIFICATION	7.842041828191805E-6	DEFECT	4.499700885144868E-6	DESIGN	1.411049909746399E-7	TEST	6.014628244765504E-8	IMPLEMENTATION	1.0469754357364112E-8	DOCUMENTATION
//abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.9984520575299607	WITHOUT_CLASSIFICATION	0.0013103670254582286	DEFECT	1.7268463996480897E-4	IMPLEMENTATION	3.7218931696088066E-5	DESIGN	1.678828715127308E-5	DOCUMENTATION	1.0883585768845107E-5	TEST
//throw new IdentifierGenerationException("save associated object first, or disable cascade for inverse association");	WITHOUT_CLASSIFICATION	0.9999493246068567	WITHOUT_CLASSIFICATION	4.586622914519228E-5	IMPLEMENTATION	3.473385286698419E-6	TEST	4.876909725391349E-7	DOCUMENTATION	4.2476693528175806E-7	DEFECT	4.2332080345440396E-7	DESIGN
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999177362184064	WITHOUT_CLASSIFICATION	3.190241607488986E-5	IMPLEMENTATION	2.2446530405780916E-5	DOCUMENTATION	1.8762483314001523E-5	DEFECT	7.877748418473452E-6	DESIGN	1.2746033804514758E-6	TEST
//do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.9999867341750888	WITHOUT_CLASSIFICATION	5.078741326816859E-6	IMPLEMENTATION	3.367542373476916E-6	DESIGN	2.2011733872642547E-6	DOCUMENTATION	2.186171493761792E-6	DEFECT	4.321963298627009E-7	TEST
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9996639489292322	WITHOUT_CLASSIFICATION	2.1636322461208638E-4	IMPLEMENTATION	7.392942782405895E-5	DEFECT	3.2376163530814815E-5	DESIGN	9.521059052005516E-6	TEST	3.8611957489293356E-6	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999635805030466	WITHOUT_CLASSIFICATION	1.7997588311447597E-5	DESIGN	9.314568786946364E-6	DOCUMENTATION	4.664894074008188E-6	IMPLEMENTATION	4.0261926243575885E-6	TEST	4.16253156741013E-7	DEFECT
// do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.9999921394621841	WITHOUT_CLASSIFICATION	7.697469898574872E-6	IMPLEMENTATION	1.4841586198101124E-7	TEST	1.3055477480326765E-8	DOCUMENTATION	8.318502004354966E-10	DESIGN	7.647277728972758E-10	DEFECT
/* COLUMN and TABLE should be renamed but it would break the public API */	WITHOUT_CLASSIFICATION	0.9992748964088513	WITHOUT_CLASSIFICATION	4.199264380190265E-4	DEFECT	2.4570737560926863E-4	IMPLEMENTATION	3.7394001647833896E-5	DESIGN	1.6245034984020337E-5	TEST	5.830740888697548E-6	DOCUMENTATION
// Loaded entity instances, by EntityKey	WITHOUT_CLASSIFICATION	0.9999726232900078	WITHOUT_CLASSIFICATION	1.2430182899449043E-5	IMPLEMENTATION	6.3075221858045115E-6	DEFECT	5.056384123701798E-6	DOCUMENTATION	2.903091572347663E-6	DESIGN	6.795292108268137E-7	TEST
// if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.9865991360320074	WITHOUT_CLASSIFICATION	0.0112328546802225	IMPLEMENTATION	8.307376763293844E-4	DESIGN	7.568832831095007E-4	DOCUMENTATION	5.29866148553239E-4	DEFECT	5.05221797779552E-5	TEST
// the default...	WITHOUT_CLASSIFICATION	0.9999863095904169	WITHOUT_CLASSIFICATION	1.1172235770888626E-5	IMPLEMENTATION	1.4384561143716458E-6	DESIGN	6.714641804290363E-7	DOCUMENTATION	3.410323614445486E-7	TEST	6.72211558876471E-8	DEFECT
// unfortunately not really safe to normalize this // to 1 as an initial value like we do the others // because we would not be able to control this if // we are using a sequence...	WITHOUT_CLASSIFICATION	0.9999894559656278	WITHOUT_CLASSIFICATION	5.756684036321535E-6	IMPLEMENTATION	4.5090459404735005E-6	DESIGN	1.8024151543804115E-7	TEST	6.88576940205013E-8	DOCUMENTATION	2.920518596496805E-8	DEFECT
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999177362184064	WITHOUT_CLASSIFICATION	3.190241607488986E-5	IMPLEMENTATION	2.2446530405780916E-5	DOCUMENTATION	1.8762483314001523E-5	DEFECT	7.877748418473452E-6	DESIGN	1.2746033804514758E-6	TEST
// Identity map of CollectionEntry instances, by the collection wrapper	WITHOUT_CLASSIFICATION	0.9999254878696237	WITHOUT_CLASSIFICATION	3.986712327812796E-5	DESIGN	2.991922199982073E-5	IMPLEMENTATION	2.9443266853459033E-6	DEFECT	9.198431092755585E-7	DOCUMENTATION	8.616153037614578E-7	TEST
// general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998384733870139	WITHOUT_CLASSIFICATION	1.384128056719777E-4	DESIGN	1.2329252182064888E-5	IMPLEMENTATION	4.869780015399276E-6	DEFECT	4.466268305431294E-6	DOCUMENTATION	1.4485068111968206E-6	TEST
// table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999564332094848	WITHOUT_CLASSIFICATION	4.253837863056577E-5	DESIGN	3.9413933067137426E-7	DOCUMENTATION	2.63266975861473E-7	TEST	2.4242608173881946E-7	IMPLEMENTATION	1.2857949627215828E-7	DEFECT
// Configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997401138208545	WITHOUT_CLASSIFICATION	2.1161018795328495E-4	IMPLEMENTATION	4.189424899882326E-5	DESIGN	3.286306824463308E-6	DEFECT	2.127760213256212E-6	DOCUMENTATION	9.67675155639002E-7	TEST
// IdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.8636187663446578	WITHOUT_CLASSIFICATION	0.13629538279507647	IMPLEMENTATION	7.296063381599133E-5	DESIGN	7.82968111828223E-6	DEFECT	3.311445331477117E-6	DOCUMENTATION	1.749099999905786E-6	TEST
// PersistentIdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.941430821473855	WITHOUT_CLASSIFICATION	0.057969178563933375	IMPLEMENTATION	5.861686493608251E-4	DESIGN	6.302011914597726E-6	TEST	4.9885737098490084E-6	DEFECT	2.540727226241925E-6	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999669043365845	WITHOUT_CLASSIFICATION	1.3038989387771483E-5	DESIGN	1.0638989359684653E-5	IMPLEMENTATION	7.12330409354897E-6	DEFECT	2.048696358803571E-6	DOCUMENTATION	2.456842155931738E-7	TEST
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999669043365845	WITHOUT_CLASSIFICATION	1.3038989387771483E-5	DESIGN	1.0638989359684653E-5	IMPLEMENTATION	7.12330409354897E-6	DEFECT	2.048696358803571E-6	DOCUMENTATION	2.456842155931738E-7	TEST
//fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.9987649514387429	WITHOUT_CLASSIFICATION	0.0011586145045066058	DESIGN	3.24553557031692E-5	TEST	2.729143119119251E-5	IMPLEMENTATION	8.496648783394956E-6	DOCUMENTATION	8.19062107274645E-6	DEFECT
// we just hit the last position	WITHOUT_CLASSIFICATION	0.9999937405825027	WITHOUT_CLASSIFICATION	3.831209078598218E-6	IMPLEMENTATION	1.1769061691753663E-6	DEFECT	9.020035805809956E-7	DOCUMENTATION	2.850167834410134E-7	TEST	6.428188543736322E-8	DESIGN
// scroll ahead	WITHOUT_CLASSIFICATION	0.9999926705586724	WITHOUT_CLASSIFICATION	7.017668928555088E-6	IMPLEMENTATION	1.2369521474350094E-7	DOCUMENTATION	1.028167809536624E-7	TEST	5.3511702790105697E-8	DESIGN	3.174870050650288E-8	DEFECT
// scroll backward	WITHOUT_CLASSIFICATION	0.9999932724009791	WITHOUT_CLASSIFICATION	4.2055593222751185E-6	IMPLEMENTATION	1.3327372609135585E-6	DEFECT	6.191341400862367E-7	DESIGN	3.0095839997831615E-7	TEST	2.6920989762519063E-7	DOCUMENTATION
// we have not yet hit the last result...	WITHOUT_CLASSIFICATION	0.9999883358650536	WITHOUT_CLASSIFICATION	7.673417666262062E-6	IMPLEMENTATION	1.9196518280139567E-6	DEFECT	1.6564553422810152E-6	TEST	2.655414140129286E-7	DOCUMENTATION	1.4906869579471358E-7	DESIGN
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999916583465903	WITHOUT_CLASSIFICATION	3.842729319985592E-6	DESIGN	2.3201757542316764E-6	IMPLEMENTATION	1.1556485794750482E-6	TEST	5.277373667091536E-7	DEFECT	4.953623893485049E-7	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999916799765463	WITHOUT_CLASSIFICATION	2.264918837073364E-6	IMPLEMENTATION	1.880631718383904E-6	DOCUMENTATION	1.6728960075020546E-6	DEFECT	1.3642635436985133E-6	DESIGN	1.1373133470020216E-6	TEST
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996491651228956	WITHOUT_CLASSIFICATION	3.0973759919754876E-4	IMPLEMENTATION	2.8616107020748226E-5	DESIGN	6.746134705207838E-6	DEFECT	4.317069195071446E-6	TEST	1.41796698570528E-6	DOCUMENTATION
// do this when all the properties are updateable since there is // a certain likelihood that the information will already be // snapshot-cached.	WITHOUT_CLASSIFICATION	0.99991989895235	WITHOUT_CLASSIFICATION	7.244456360879098E-5	DESIGN	2.5005945125819754E-6	DEFECT	2.4555682705032504E-6	DOCUMENTATION	2.021601176758649E-6	IMPLEMENTATION	6.787200812724474E-7	TEST
// Inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999884592392242	WITHOUT_CLASSIFICATION	7.714918876677495E-6	DESIGN	2.2996356151566343E-6	IMPLEMENTATION	7.082878192190232E-7	TEST	4.403330209384912E-7	DEFECT	3.7758544387940016E-7	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999916583465903	WITHOUT_CLASSIFICATION	3.842729319985592E-6	DESIGN	2.3201757542316764E-6	IMPLEMENTATION	1.1556485794750482E-6	TEST	5.277373667091536E-7	DEFECT	4.953623893485049E-7	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999916799765463	WITHOUT_CLASSIFICATION	2.264918837073364E-6	IMPLEMENTATION	1.880631718383904E-6	DOCUMENTATION	1.6728960075020546E-6	DEFECT	1.3642635436985133E-6	DESIGN	1.1373133470020216E-6	TEST
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996491651228956	WITHOUT_CLASSIFICATION	3.0973759919754876E-4	IMPLEMENTATION	2.8616107020748226E-5	DESIGN	6.746134705207838E-6	DEFECT	4.317069195071446E-6	TEST	1.41796698570528E-6	DOCUMENTATION
// Caches	WITHOUT_CLASSIFICATION	0.9999977410684449	WITHOUT_CLASSIFICATION	7.947271968334861E-7	DESIGN	5.163576423538065E-7	IMPLEMENTATION	4.5896485744081375E-7	TEST	3.516107689008354E-7	DOCUMENTATION	1.3727108973680775E-7	DEFECT
//Generators:	WITHOUT_CLASSIFICATION	0.9990640422999371	WITHOUT_CLASSIFICATION	6.408525370407019E-4	IMPLEMENTATION	2.0822104830946344E-4	DESIGN	4.554935742444305E-5	TEST	3.2403564748300365E-5	DOCUMENTATION	8.93119253993628E-6	DEFECT
// cache region is defined by the root-class in the hierarchy...	WITHOUT_CLASSIFICATION	0.9999596706399674	WITHOUT_CLASSIFICATION	4.007050544165326E-5	DESIGN	2.0999672966744176E-7	DEFECT	2.4664903336861812E-8	TEST	1.6167528498566926E-8	DOCUMENTATION	8.025429400163588E-9	IMPLEMENTATION
//check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.9984387702788429	WITHOUT_CLASSIFICATION	0.0011127790255522187	DEFECT	4.143255166574655E-4	DESIGN	1.507914769652599E-5	DOCUMENTATION	1.1125606821489497E-5	IMPLEMENTATION	7.920424429477397E-6	TEST
// after *all* persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.9999135823268447	WITHOUT_CLASSIFICATION	7.302923031560756E-5	DESIGN	1.2042083734115395E-5	IMPLEMENTATION	7.700329351717829E-7	DEFECT	5.00965630558819E-7	TEST	7.536053988873523E-8	DOCUMENTATION
// if we get here, it is possible that we have a proxy 'in the way' of the merge map resolution... // 	WITHOUT_CLASSIFICATION	0.9991477798484117	WITHOUT_CLASSIFICATION	6.639774308368096E-4	DEFECT	1.8298097002966156E-4	DESIGN	3.6065642986689678E-6	TEST	1.4168481543423092E-6	IMPLEMENTATION	2.383382687418179E-7	DOCUMENTATION
//JNDI + Serialization:	WITHOUT_CLASSIFICATION	0.999993213114531	WITHOUT_CLASSIFICATION	1.933893776125857E-6	IMPLEMENTATION	1.7409282815144024E-6	DEFECT	1.550451748425169E-6	DOCUMENTATION	1.0643971340779227E-6	DESIGN	4.972145287053558E-7	TEST
//checking for named queries	WITHOUT_CLASSIFICATION	0.9999362828685894	WITHOUT_CLASSIFICATION	5.079655419202206E-5	IMPLEMENTATION	6.248142238216556E-6	DEFECT	4.0170820063745844E-6	TEST	1.413660677580111E-6	DESIGN	1.241692296507225E-6	DOCUMENTATION
//stats	WITHOUT_CLASSIFICATION	0.9999500831583756	WITHOUT_CLASSIFICATION	1.2695465307857054E-5	TEST	1.219572728461768E-5	IMPLEMENTATION	9.250379220606407E-6	DESIGN	7.888042964460333E-6	DEFECT	7.887226846859525E-6	DOCUMENTATION
// EntityNotFoundDelegate	WITHOUT_CLASSIFICATION	0.999992720297543	WITHOUT_CLASSIFICATION	4.549442742741538E-6	IMPLEMENTATION	1.2576683608633826E-6	TEST	6.141962483082888E-7	DOCUMENTATION	5.582482587876364E-7	DEFECT	3.001468463051012E-7	DESIGN
// Check named HQL queries	WITHOUT_CLASSIFICATION	0.9999904626519078	WITHOUT_CLASSIFICATION	6.407839613928684E-6	IMPLEMENTATION	2.34217456881068E-6	DESIGN	3.6666953994547025E-7	TEST	3.095315654833411E-7	DOCUMENTATION	1.1113280404892449E-7	DEFECT
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9992258982126078	WITHOUT_CLASSIFICATION	4.2099955850457215E-4	DEFECT	1.6338413422566797E-4	DESIGN	1.5200671427842942E-4	TEST	3.247501937234301E-5	IMPLEMENTATION	5.2363610112205865E-6	DOCUMENTATION
//prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.995185690432955	WITHOUT_CLASSIFICATION	0.004042206102017645	DESIGN	6.085042749932352E-4	DEFECT	9.269457457617481E-5	TEST	4.440018016083202E-5	DOCUMENTATION	2.6504435297130185E-5	IMPLEMENTATION
// from javax.naming.Referenceable	WITHOUT_CLASSIFICATION	0.9999818640096909	WITHOUT_CLASSIFICATION	1.63836220037432E-5	DESIGN	5.377055657387708E-7	DEFECT	4.991090442099909E-7	IMPLEMENTATION	4.21060763076399E-7	DOCUMENTATION	2.944929322548535E-7	TEST
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.999946530148312	WITHOUT_CLASSIFICATION	3.628463388226937E-5	IMPLEMENTATION	1.5853064939038388E-5	DESIGN	6.416626387179949E-7	DOCUMENTATION	6.018058714353142E-7	DEFECT	8.868435645655535E-8	TEST
//for a dynamic-class	WITHOUT_CLASSIFICATION	0.9999856297803184	WITHOUT_CLASSIFICATION	1.306631243565815E-5	DESIGN	7.293854397673857E-7	DEFECT	3.8909798899439414E-7	DOCUMENTATION	1.3280820574968354E-7	TEST	5.2615611619820824E-8	IMPLEMENTATION
//test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.9806511112649675	WITHOUT_CLASSIFICATION	0.013147054109351122	TEST	0.005366811345132695	DESIGN	6.684659890825249E-4	DOCUMENTATION	1.226462962356122E-4	IMPLEMENTATION	4.391099523070142E-5	DEFECT
//NOTE EARLY EXIT	WITHOUT_CLASSIFICATION	0.9998041279668879	WITHOUT_CLASSIFICATION	1.044661558709552E-4	IMPLEMENTATION	3.373993111071895E-5	DEFECT	2.1267481667161354E-5	DOCUMENTATION	1.9154167203733254E-5	TEST	1.724429725964963E-5	DESIGN
// for backward-compatability	WITHOUT_CLASSIFICATION	0.9999893131642427	WITHOUT_CLASSIFICATION	4.995092558162255E-6	IMPLEMENTATION	4.735480790837172E-6	DEFECT	5.053926220128684E-7	DESIGN	2.4947744626275415E-7	TEST	2.0139234002087282E-7	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999963589593489	WITHOUT_CLASSIFICATION	2.2364987521278272E-6	IMPLEMENTATION	7.185278692780279E-7	TEST	4.2014365348957363E-7	DEFECT	2.3130333957257127E-7	DOCUMENTATION	3.456703658874843E-8	DESIGN
//to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.9999956652013718	WITHOUT_CLASSIFICATION	2.385457602168775E-6	DESIGN	7.438910363584843E-7	DEFECT	5.850140510581914E-7	IMPLEMENTATION	3.7116099736024614E-7	TEST	2.492749412121842E-7	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9999713301767607	WITHOUT_CLASSIFICATION	2.667071719551854E-5	IMPLEMENTATION	1.962513648127259E-6	DESIGN	2.0836657292526322E-8	DOCUMENTATION	9.809794856522633E-9	TEST	5.945943674822032E-9	DEFECT
//must add to JNDI _after_ adding to HashMaps, because some JNDI servers use serialization	WITHOUT_CLASSIFICATION	0.9999915488356368	WITHOUT_CLASSIFICATION	6.113298726016123E-6	DESIGN	1.1029027846312502E-6	DEFECT	8.256363394402251E-7	DOCUMENTATION	2.479160810961191E-7	TEST	1.6141043201632822E-7	IMPLEMENTATION
// Make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.9999888001271995	WITHOUT_CLASSIFICATION	1.0943416755617392E-5	DESIGN	1.7107382953272798E-7	IMPLEMENTATION	3.994462562868428E-8	DEFECT	3.498290295323304E-8	DOCUMENTATION	1.0454686803049502E-8	TEST
// for each of the defined parameters, make sure its value // has been set	WITHOUT_CLASSIFICATION	0.9998635903728635	WITHOUT_CLASSIFICATION	1.3503051312725581E-4	DESIGN	1.2758873738997694E-6	DEFECT	6.069403327010402E-8	TEST	2.1911948493268817E-8	DOCUMENTATION	2.0620653565901463E-8	IMPLEMENTATION
//we never need to apply locks to the SQL	WITHOUT_CLASSIFICATION	0.9683093653039406	WITHOUT_CLASSIFICATION	0.023210062839825078	IMPLEMENTATION	0.004047142610848439	DOCUMENTATION	0.003502383791015962	DESIGN	8.286421729602521E-4	DEFECT	1.0240328140981529E-4	TEST
// inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999775492395769	WITHOUT_CLASSIFICATION	6.854120430319091E-6	DEFECT	6.606867021286535E-6	DESIGN	4.846938375326921E-6	IMPLEMENTATION	2.4125896175493834E-6	TEST	1.7302449785298124E-6	DOCUMENTATION
// deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999670007800393	WITHOUT_CLASSIFICATION	1.4580826431959168E-5	DESIGN	5.872505848308761E-6	TEST	5.871291896064824E-6	DEFECT	5.408108127052384E-6	IMPLEMENTATION	1.2664876572833432E-6	DOCUMENTATION
// during deserialization, we need to reconnect all proxies and // collections to this session, as well as the EntityEntry and // CollectionEntry instances; these associations are transient // because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.9997790558092918	WITHOUT_CLASSIFICATION	2.1975294688106746E-4	DESIGN	7.926118492897367E-7	DOCUMENTATION	2.0118458963450367E-7	IMPLEMENTATION	1.8047144291587988E-7	TEST	1.697594528112205E-8	DEFECT
// updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999700825403383	WITHOUT_CLASSIFICATION	1.2216443806471824E-5	IMPLEMENTATION	1.1391561330970907E-5	DEFECT	3.7776348966354153E-6	TEST	1.3267907910927153E-6	DESIGN	1.2050288366130156E-6	DOCUMENTATION
// loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999549904536589	WITHOUT_CLASSIFICATION	2.860305243428479E-5	DEFECT	5.295936303882418E-6	IMPLEMENTATION	4.206878153375623E-6	DESIGN	3.597288260472182E-6	DOCUMENTATION	3.306391188896107E-6	TEST
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999166888758729	WITHOUT_CLASSIFICATION	3.466635169122373E-5	IMPLEMENTATION	2.626850695312528E-5	DESIGN	1.674005472183235E-5	DEFECT	3.0199859136561705E-6	TEST	2.6162248472789932E-6	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999166888758729	WITHOUT_CLASSIFICATION	3.466635169122373E-5	IMPLEMENTATION	2.626850695312528E-5	DESIGN	1.674005472183235E-5	DEFECT	3.0199859136561705E-6	TEST	2.6162248472789932E-6	DOCUMENTATION
// first, try to load it from the temp PC associated to this SS	WITHOUT_CLASSIFICATION	0.9999965823390031	WITHOUT_CLASSIFICATION	2.2543933388419462E-6	TEST	9.513941381295635E-7	DESIGN	1.694435609053624E-7	DOCUMENTATION	4.1251197546305384E-8	IMPLEMENTATION	1.1787614212031072E-9	DEFECT
// if the metadata allowed proxy creation and caller did not request forceful eager loading, // generate a proxy	WITHOUT_CLASSIFICATION	0.9999973229297815	WITHOUT_CLASSIFICATION	1.9336904083986532E-6	IMPLEMENTATION	4.282507306648005E-7	DEFECT	3.1207708945280804E-7	TEST	1.9974690154627294E-9	DESIGN	1.0545210321346722E-9	DOCUMENTATION
// otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.9999954699670669	WITHOUT_CLASSIFICATION	3.431790486424795E-6	IMPLEMENTATION	8.182168864074673E-7	DESIGN	1.1867920381000561E-7	DEFECT	1.0533826233316145E-7	DOCUMENTATION	5.6008094188930485E-8	TEST
/////////////////////////////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997131150661634	WITHOUT_CLASSIFICATION	6.204623448650295E-5	DOCUMENTATION	5.960895038742096E-5	TEST	5.747207114653075E-5	DEFECT	5.6241094708495216E-5	IMPLEMENTATION	5.151658310748103E-5	DESIGN
// no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.9928311455158316	WITHOUT_CLASSIFICATION	0.003885171201662138	DESIGN	0.0016922885487338812	IMPLEMENTATION	0.001437098157454033	DEFECT	1.0585084175362177E-4	TEST	4.8445734564575393E-5	DOCUMENTATION
//after setting values to object, entityMode	WITHOUT_CLASSIFICATION	0.9999466517634213	WITHOUT_CLASSIFICATION	2.7095546556094898E-5	DESIGN	2.3576962668088907E-5	DEFECT	2.0888023038205824E-6	DOCUMENTATION	4.948820984795554E-7	TEST	9.204295227925167E-8	IMPLEMENTATION
//for EJB3	WITHOUT_CLASSIFICATION	0.9997936529631524	WITHOUT_CLASSIFICATION	1.1080698532668791E-4	DESIGN	3.222174518655485E-5	DEFECT	2.4496496461919583E-5	TEST	2.131740588319806E-5	IMPLEMENTATION	1.7504403989180773E-5	DOCUMENTATION
// just ignore	WITHOUT_CLASSIFICATION	0.9999871110190274	WITHOUT_CLASSIFICATION	1.1838319420094164E-5	IMPLEMENTATION	3.736837781180237E-7	DEFECT	3.0244596884527593E-7	DOCUMENTATION	2.4954232965980566E-7	TEST	1.2498947581297088E-7	DESIGN
// do a check	WITHOUT_CLASSIFICATION	0.9999682168730345	WITHOUT_CLASSIFICATION	2.779078743362043E-5	IMPLEMENTATION	1.6424522869272578E-6	DESIGN	1.5908501210883541E-6	DOCUMENTATION	5.717250476044037E-7	TEST	1.873120763008154E-7	DEFECT
// saveOrUpdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993943486563	WITHOUT_CLASSIFICATION	3.191663122860547E-7	IMPLEMENTATION	1.5251496636889063E-7	DEFECT	7.670191866303219E-8	TEST	3.559554827880344E-8	DOCUMENTATION	2.1672598189050255E-8	DESIGN
// update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999992701575624	WITHOUT_CLASSIFICATION	4.004758811329979E-7	IMPLEMENTATION	1.5326548458040984E-7	DEFECT	1.0114420311262477E-7	TEST	3.998163339510707E-8	DESIGN	3.497523545431307E-8	DOCUMENTATION
// lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999967227734383	WITHOUT_CLASSIFICATION	1.222370840121244E-6	IMPLEMENTATION	1.1154516731885687E-6	DESIGN	3.74539455793154E-7	DEFECT	3.584746634104409E-7	TEST	2.0638992909823154E-7	DOCUMENTATION
// persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999962814098564	WITHOUT_CLASSIFICATION	2.7175327432357794E-6	IMPLEMENTATION	5.181425084201791E-7	TEST	2.1741038520413545E-7	DESIGN	1.518604833540977E-7	DEFECT	1.1364402340985984E-7	DOCUMENTATION
// persistOnFlush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999992249640837	WITHOUT_CLASSIFICATION	4.3087689778988953E-7	IMPLEMENTATION	1.619425017416213E-7	TEST	1.1063028406332542E-7	DESIGN	3.885890747556351E-8	DEFECT	3.272732526696887E-8	DOCUMENTATION
// merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993709023233	WITHOUT_CLASSIFICATION	2.31057730538222E-7	IMPLEMENTATION	1.7000057226152904E-7	TEST	1.125842157798513E-7	DESIGN	6.029959670408263E-8	DOCUMENTATION	5.5155561400424155E-8	DEFECT
// saveOrUpdateCopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989021337119	WITHOUT_CLASSIFICATION	4.44308364555963E-7	IMPLEMENTATION	4.4188468628089115E-7	DEFECT	1.2701513841153572E-7	TEST	5.8276484035923634E-8	DOCUMENTATION	2.6381614889872334E-8	DESIGN
// delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996015095973	WITHOUT_CLASSIFICATION	1.534634291261569E-7	DESIGN	1.1821990289963822E-7	IMPLEMENTATION	7.130759147479757E-8	TEST	4.0297011860594554E-8	DEFECT	1.52024671633029E-8	DOCUMENTATION
// load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999968099045683	WITHOUT_CLASSIFICATION	2.3969816676146077E-6	IMPLEMENTATION	2.7193414554695133E-7	DESIGN	2.3503683778257332E-7	DEFECT	2.244187989136455E-7	TEST	6.172398189033666E-8	DOCUMENTATION
// refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999987959548204	WITHOUT_CLASSIFICATION	5.363716666617463E-7	IMPLEMENTATION	3.56268059357075E-7	TEST	1.4757075552545512E-7	DEFECT	1.2102323709420398E-7	DESIGN	4.281146092893117E-8	DOCUMENTATION
// replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999940597187821	WITHOUT_CLASSIFICATION	4.57735752818359E-6	DESIGN	7.229987609902666E-7	IMPLEMENTATION	4.399474188000359E-7	TEST	1.440418007543516E-7	DOCUMENTATION	5.593570923049293E-8	DEFECT
// do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.9999662341071578	WITHOUT_CLASSIFICATION	2.3669625391938824E-5	DESIGN	7.048837225697016E-6	IMPLEMENTATION	1.587275617491188E-6	DOCUMENTATION	9.917108695742728E-7	DEFECT	4.684437374659073E-7	TEST
// this is an internal error of some sort...	WITHOUT_CLASSIFICATION	0.9999164622860259	WITHOUT_CLASSIFICATION	4.873551864865818E-5	DESIGN	1.6302585199443985E-5	DEFECT	9.495829441196976E-6	DOCUMENTATION	7.942973816913998E-6	TEST	1.0608068678270126E-6	IMPLEMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9863971363082734	WITHOUT_CLASSIFICATION	0.013540252812417013	DESIGN	4.018805034787345E-5	TEST	1.7718866496096502E-5	DEFECT	2.7035305950713568E-6	DOCUMENTATION	2.0004318704958613E-6	IMPLEMENTATION
//only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.9974576989649971	WITHOUT_CLASSIFICATION	0.0023418516604572746	DESIGN	1.7789813858014924E-4	DEFECT	1.638599154451947E-5	IMPLEMENTATION	3.209427702786272E-6	TEST	2.955816718078477E-6	DOCUMENTATION
// if it was previously unreferenced, we need to flush in order to // get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.9891019189488958	WITHOUT_CLASSIFICATION	0.010547020831946433	DESIGN	1.9045492675649634E-4	DOCUMENTATION	7.987323562879578E-5	DEFECT	5.239248828779789E-5	IMPLEMENTATION	2.8339568484646094E-5	TEST
// not for internal use:	WITHOUT_CLASSIFICATION	0.9995866756701829	WITHOUT_CLASSIFICATION	3.7034221199380496E-4	IMPLEMENTATION	2.780721260700702E-5	DEFECT	1.0644275389787744E-5	DESIGN	2.325191921347561E-6	TEST	2.2054379050814975E-6	DOCUMENTATION
// otherwise, we only need to flush if there are in-memory changes // to the queried tables	WITHOUT_CLASSIFICATION	0.9999942988108977	WITHOUT_CLASSIFICATION	3.1457603667175593E-6	DESIGN	1.7649953300502064E-6	IMPLEMENTATION	6.679116704164715E-7	TEST	1.0988967649434537E-7	DOCUMENTATION	1.2632058710728719E-8	DEFECT
// might need to run a different filter entirely after the flush // because the collection role may have changed	WITHOUT_CLASSIFICATION	0.9997514536438924	WITHOUT_CLASSIFICATION	1.8216602516395522E-4	IMPLEMENTATION	6.547470950652247E-5	DESIGN	4.234723991368104E-7	DEFECT	2.5986480982766964E-7	TEST	2.2228422822594926E-7	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9863971363082734	WITHOUT_CLASSIFICATION	0.013540252812417013	DESIGN	4.018805034787345E-5	TEST	1.7718866496096502E-5	DEFECT	2.7035305950713568E-6	DOCUMENTATION	2.0004318704958613E-6	IMPLEMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9863971363082734	WITHOUT_CLASSIFICATION	0.013540252812417013	DESIGN	4.018805034787345E-5	TEST	1.7718866496096502E-5	DEFECT	2.7035305950713568E-6	DOCUMENTATION	2.0004318704958613E-6	IMPLEMENTATION
//if it is initialized, see if the underlying //instance is contained, since we need to  //account for the fact that it might have been //evicted	WITHOUT_CLASSIFICATION	0.9988612911560353	WITHOUT_CLASSIFICATION	0.0010071491329006422	DESIGN	1.0555993635535817E-4	IMPLEMENTATION	1.8793898969774016E-5	TEST	6.27285413623724E-6	DOCUMENTATION	9.330216026342514E-7	DEFECT
// basically just an adapted copy of find(CriteriaImpl)	WITHOUT_CLASSIFICATION	0.9999805102972451	WITHOUT_CLASSIFICATION	1.650424913912205E-5	IMPLEMENTATION	2.0943034053801276E-6	DEFECT	6.546437469398398E-7	DESIGN	1.971364857463458E-7	TEST	3.93699777994295E-8	DOCUMENTATION
// it is possible for this method to be called during flush processing, // so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999601157465623	WITHOUT_CLASSIFICATION	3.3404257618830864E-5	DESIGN	5.066889757022071E-6	DEFECT	6.013825126023561E-7	TEST	4.5824106135534805E-7	IMPLEMENTATION	3.53482487789144E-7	DOCUMENTATION
// nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.9991489874505453	WITHOUT_CLASSIFICATION	8.204619665242638E-4	IMPLEMENTATION	1.2295177672079914E-5	DEFECT	1.0443103762139734E-5	DESIGN	5.121061142978475E-6	TEST	2.69124035308756E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999967921465598	WITHOUT_CLASSIFICATION	2.3262049710510212E-6	IMPLEMENTATION	3.920518904252137E-7	DOCUMENTATION	2.0324652480516502E-7	DEFECT	1.4810281992615262E-7	DESIGN	1.3824723398080232E-7	TEST
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999963589593489	WITHOUT_CLASSIFICATION	2.2364987521278272E-6	IMPLEMENTATION	7.185278692780279E-7	TEST	4.2014365348957363E-7	DEFECT	2.3130333957257127E-7	DOCUMENTATION	3.456703658874843E-8	DESIGN
// we need to writeObject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.9999581687363399	WITHOUT_CLASSIFICATION	1.829490361771786E-5	DESIGN	1.3120148914437157E-5	DOCUMENTATION	7.433828187089395E-6	TEST	1.9524993473633706E-6	IMPLEMENTATION	1.0298835935253954E-6	DEFECT
// the old-time stand-by...	WITHOUT_CLASSIFICATION	0.9999885954597103	WITHOUT_CLASSIFICATION	1.0755672672719885E-5	IMPLEMENTATION	4.1405851755902513E-7	DOCUMENTATION	1.3112830034854973E-7	DESIGN	6.20005970663796E-8	TEST	4.168020190855811E-8	DEFECT
// parameter bind values...	WITHOUT_CLASSIFICATION	0.999998642662109	WITHOUT_CLASSIFICATION	7.600891585187609E-7	IMPLEMENTATION	2.517325674167635E-7	DESIGN	1.7737204370247918E-7	DEFECT	9.684578322995454E-8	TEST	7.12983381029339E-8	DOCUMENTATION
// Parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998742936691051	WITHOUT_CLASSIFICATION	1.1095303000214131E-4	DESIGN	6.059619734472428E-6	IMPLEMENTATION	5.736094000432443E-6	TEST	1.8023751578299897E-6	DEFECT	1.1552120002003168E-6	DOCUMENTATION
// prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.9987165796375305	WITHOUT_CLASSIFICATION	0.0012247371924494976	IMPLEMENTATION	4.1866495127097574E-5	DEFECT	1.2748521774357967E-5	DESIGN	3.145051864367817E-6	TEST	9.231012543282879E-7	DOCUMENTATION
// Execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992919936104425	WITHOUT_CLASSIFICATION	5.95481114946685E-4	DESIGN	3.405217128058784E-5	IMPLEMENTATION	3.0693476920795085E-5	TEST	2.821689008029825E-5	DOCUMENTATION	1.9562736329125653E-5	DEFECT
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9996568211909717	WITHOUT_CLASSIFICATION	1.6491799190972126E-4	IMPLEMENTATION	8.420422851391822E-5	DEFECT	6.269987290928208E-5	DESIGN	2.997544321387087E-5	DOCUMENTATION	1.381272481569072E-6	TEST
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9996568211909717	WITHOUT_CLASSIFICATION	1.6491799190972126E-4	IMPLEMENTATION	8.420422851391822E-5	DEFECT	6.269987290928208E-5	DESIGN	2.997544321387087E-5	DOCUMENTATION	1.381272481569072E-6	TEST
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.999954561177835	WITHOUT_CLASSIFICATION	2.648076375335153E-5	IMPLEMENTATION	8.33243152235442E-6	DEFECT	7.1299161877879165E-6	DOCUMENTATION	2.0688034162257335E-6	DESIGN	1.4269072852994781E-6	TEST
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.999954561177835	WITHOUT_CLASSIFICATION	2.648076375335153E-5	IMPLEMENTATION	8.33243152235442E-6	DEFECT	7.1299161877879165E-6	DOCUMENTATION	2.0688034162257335E-6	DESIGN	1.4269072852994781E-6	TEST
// FieldInterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997335014937688	WITHOUT_CLASSIFICATION	2.4376974398513987E-4	IMPLEMENTATION	1.2447510224761822E-5	DESIGN	8.094552214933014E-6	DEFECT	1.1079121003396207E-6	TEST	1.0787877057503616E-6	DOCUMENTATION
// subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999894911156828	WITHOUT_CLASSIFICATION	9.387220655894533E-6	DESIGN	3.8435419691007867E-7	TEST	2.5399479121235103E-7	DEFECT	2.4685734256637056E-7	IMPLEMENTATION	2.3645733057421485E-7	DOCUMENTATION
//let's assume that there is only one lazy fetch group, for now!	WITHOUT_CLASSIFICATION	0.9999941277179412	WITHOUT_CLASSIFICATION	4.0286982969250335E-6	DEFECT	1.321107821263496E-6	TEST	3.742205172887229E-7	DESIGN	9.773248065362155E-8	DOCUMENTATION	5.0522942700018835E-8	IMPLEMENTATION
// FieldHandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994749460836833	WITHOUT_CLASSIFICATION	4.836316861363567E-4	IMPLEMENTATION	3.795696178766882E-5	DESIGN	1.6662173996188424E-6	DEFECT	1.0850850573142358E-6	TEST	7.139659358407678E-7	DOCUMENTATION
// should *not* need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.9997151672467584	WITHOUT_CLASSIFICATION	1.3321789332142568E-4	DESIGN	1.1397172313619908E-4	DEFECT	3.400913325702028E-5	IMPLEMENTATION	2.554133270190059E-6	DOCUMENTATION	1.0798702568695908E-6	TEST
// should probably no-op commit/rollback here, at least in JTA scenarios	WITHOUT_CLASSIFICATION	0.999816374352909	WITHOUT_CLASSIFICATION	9.07922525773246E-5	DESIGN	4.9140659924001425E-5	DEFECT	3.6017484395619215E-5	IMPLEMENTATION	6.0601688423931015E-6	TEST	1.6150813516759147E-6	DOCUMENTATION
// Base Expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999085051863379	WITHOUT_CLASSIFICATION	7.630501309893593E-5	IMPLEMENTATION	9.504728310794847E-6	DEFECT	2.5275568409192983E-6	DOCUMENTATION	1.6302995491864127E-6	DESIGN	1.5272158623402291E-6	TEST
// Various Expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999703957777855	WITHOUT_CLASSIFICATION	1.7907345405758794E-5	DEFECT	4.381788071406147E-6	DESIGN	4.040659269242023E-6	IMPLEMENTATION	1.9621378287069505E-6	DOCUMENTATION	1.3122916393011428E-6	TEST
// explicitly perform no checking...	WITHOUT_CLASSIFICATION	0.9999835571316836	WITHOUT_CLASSIFICATION	6.9157221700616965E-6	DOCUMENTATION	6.11308038264094E-6	DEFECT	2.9964225111583526E-6	IMPLEMENTATION	2.0898198382780856E-7	DESIGN	2.0866126862932214E-7	TEST
// used from testsuite	WITHOUT_CLASSIFICATION	0.9999923888020809	WITHOUT_CLASSIFICATION	6.642285041192688E-6	TEST	5.698862676064229E-7	IMPLEMENTATION	2.6375183855922636E-7	DOCUMENTATION	9.597495800160308E-8	DESIGN	3.9299813764486944E-8	DEFECT
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999993430202065	WITHOUT_CLASSIFICATION	2.174152371901138E-7	DESIGN	1.9608036310576595E-7	DOCUMENTATION	1.5559172833310524E-7	TEST	7.396326099997343E-8	DEFECT	1.3929203986224818E-8	IMPLEMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9989260628615921	WITHOUT_CLASSIFICATION	7.677202016314123E-4	DESIGN	1.4376704594225997E-4	IMPLEMENTATION	7.854593901788724E-5	DOCUMENTATION	4.701722594702547E-5	TEST	3.688672586933569E-5	DEFECT
// register synch; stats.connect()	WITHOUT_CLASSIFICATION	0.9998496135601158	WITHOUT_CLASSIFICATION	1.4387877908109817E-4	IMPLEMENTATION	2.383664224084831E-6	TEST	2.0244159557070273E-6	DOCUMENTATION	1.6395280544965625E-6	DESIGN	4.600525688911042E-7	DEFECT
//noncritical, swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.9995801955382956	WITHOUT_CLASSIFICATION	2.6202955739724484E-4	DESIGN	1.0404303491078748E-4	IMPLEMENTATION	4.380034625935016E-5	DEFECT	5.346956636650014E-6	DOCUMENTATION	4.584566500263427E-6	TEST
// calls executeBatch()	WITHOUT_CLASSIFICATION	0.9999918024414219	WITHOUT_CLASSIFICATION	4.604655620094846E-6	IMPLEMENTATION	2.5817899633190147E-6	DEFECT	6.165127734581314E-7	DOCUMENTATION	2.9157401403199763E-7	TEST	1.0302620714574092E-7	DESIGN
//no big deal	WITHOUT_CLASSIFICATION	0.9999567465795388	WITHOUT_CLASSIFICATION	1.2768120182388943E-5	DOCUMENTATION	1.2674737313120928E-5	IMPLEMENTATION	7.62780921433196E-6	DESIGN	7.5035270446290885E-6	DEFECT	2.679226706727037E-6	TEST
// no big deal	WITHOUT_CLASSIFICATION	0.9999185990874615	WITHOUT_CLASSIFICATION	6.354394748499145E-5	IMPLEMENTATION	8.025418618344631E-6	DOCUMENTATION	4.2929736971656805E-6	DEFECT	4.122957515197295E-6	DESIGN	1.4156152226966196E-6	TEST
// no big deal	WITHOUT_CLASSIFICATION	0.9999185990874615	WITHOUT_CLASSIFICATION	6.354394748499145E-5	IMPLEMENTATION	8.025418618344631E-6	DOCUMENTATION	4.2929736971656805E-6	DEFECT	4.122957515197295E-6	DESIGN	1.4156152226966196E-6	TEST
// sybase driver (jConnect) throwing NPE here in certain // cases, but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.9998950826381598	WITHOUT_CLASSIFICATION	8.726742183155485E-5	IMPLEMENTATION	7.446297054179833E-6	DESIGN	6.445144495264516E-6	DEFECT	3.4383296020014224E-6	TEST	3.2016885712142416E-7	DOCUMENTATION
// see explanation above...	WITHOUT_CLASSIFICATION	0.9999970804636251	WITHOUT_CLASSIFICATION	1.2514253081512243E-6	IMPLEMENTATION	5.555930778943953E-7	DOCUMENTATION	4.518017513456029E-7	DEFECT	3.618812439417339E-7	DESIGN	2.988349937283038E-7	TEST
// If we are in the process of releasing, no sense // checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.9999997454538266	WITHOUT_CLASSIFICATION	1.342114807540765E-7	DEFECT	6.330257393607471E-8	DOCUMENTATION	5.170998026160385E-8	IMPLEMENTATION	4.8546854550371446E-9	TEST	4.674529682790307E-10	DESIGN
// EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9998927938011195	WITHOUT_CLASSIFICATION	5.749443236343724E-5	IMPLEMENTATION	2.4490654012723746E-5	DEFECT	1.219601254920539E-5	DOCUMENTATION	8.045058229140476E-6	TEST	4.980041726094462E-6	DESIGN
// ResultSet impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9991500418348231	WITHOUT_CLASSIFICATION	7.419244128487936E-4	IMPLEMENTATION	7.515911745601157E-5	DEFECT	2.090679530482823E-5	DESIGN	8.805716312063314E-6	TEST	3.162123255040953E-6	DOCUMENTATION
// ResultSet impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995094492767741	WITHOUT_CLASSIFICATION	3.959538202083456E-4	IMPLEMENTATION	5.149800209890035E-5	DEFECT	2.3873949422735105E-5	TEST	1.636413426496288E-5	DESIGN	2.860817231023737E-6	DOCUMENTATION
// refer to comment in StatefulPersistenceContext.addCollection()	WITHOUT_CLASSIFICATION	0.99999022562362	WITHOUT_CLASSIFICATION	5.7608310094403565E-6	DESIGN	2.16352254600617E-6	DEFECT	7.341042064403027E-7	IMPLEMENTATION	5.595569367344156E-7	DOCUMENTATION	5.563616812795426E-7	TEST
// ConnectionManager.Callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9465098844077795	WITHOUT_CLASSIFICATION	0.05285204998518517	IMPLEMENTATION	4.97775514550626E-4	DESIGN	1.21388582319387E-4	DEFECT	1.5575509887599044E-5	DOCUMENTATION	3.326000277626865E-6	TEST
// Note : success = false, because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.9999742991301339	WITHOUT_CLASSIFICATION	1.2020642459230186E-5	IMPLEMENTATION	8.279308810038886E-6	DESIGN	2.4086247409097215E-6	DOCUMENTATION	2.2165479376317727E-6	DEFECT	7.757459183620774E-7	TEST
// we already have a callback registered; either a local // (org.hibernate.Transaction) transaction has accepted // callback responsibilities, or we have previously // registered a transaction synch.	WITHOUT_CLASSIFICATION	0.999999687134732	WITHOUT_CLASSIFICATION	1.802100037664816E-7	DEFECT	9.167433762644698E-8	DESIGN	2.2910810865250215E-8	IMPLEMENTATION	1.4297463673959184E-8	DOCUMENTATION	3.772652138893869E-9	TEST
// the configured transaction-factory says it only supports // local callback mode, so no sense attempting to register a // JTA Synchronization	WITHOUT_CLASSIFICATION	0.9988875008214289	WITHOUT_CLASSIFICATION	0.001102972649128385	DESIGN	6.148657447222996E-6	DOCUMENTATION	1.7090921707726368E-6	IMPLEMENTATION	1.1953057976935014E-6	TEST	4.7347402712260554E-7	DEFECT
// transactions marked for rollback-only cause some TM impls to throw exceptions	WITHOUT_CLASSIFICATION	0.9996311754948656	WITHOUT_CLASSIFICATION	1.7796888622115514E-4	IMPLEMENTATION	1.6440033235784322E-4	DEFECT	1.7568437370532588E-5	DESIGN	8.110028957287935E-6	DOCUMENTATION	7.768202276711825E-7	TEST
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999979946503699	WITHOUT_CLASSIFICATION	8.575281631283497E-7	IMPLEMENTATION	4.842819581015615E-7	DEFECT	3.6900273303522995E-7	DESIGN	1.823312316785521E-7	DOCUMENTATION	1.122055441220312E-7	TEST
//postInitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.9999975418693847	WITHOUT_CLASSIFICATION	1.3403535106272982E-6	IMPLEMENTATION	9.411756386089869E-7	DESIGN	1.160673530836102E-7	DEFECT	4.377299784007866E-8	DOCUMENTATION	1.676111507533037E-8	TEST
// cannot handle single quotes	WITHOUT_CLASSIFICATION	0.9999769179556242	WITHOUT_CLASSIFICATION	2.1207301041292706E-5	IMPLEMENTATION	1.0771304260480546E-6	DEFECT	4.764732718898425E-7	TEST	1.8169940137264954E-7	DOCUMENTATION	1.394402352727812E-7	DESIGN
// todo : for 4.0 //	WITHOUT_CLASSIFICATION	0.9999463203300445	WITHOUT_CLASSIFICATION	3.33280428104384E-5	IMPLEMENTATION	1.074773835034997E-5	DESIGN	3.910505428914659E-6	TEST	3.2441756078594648E-6	DEFECT	2.449207758009727E-6	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9961581248029123	WITHOUT_CLASSIFICATION	0.0035691585778633702	DESIGN	1.5363941511422935E-4	DEFECT	9.763829389158991E-5	IMPLEMENTATION	1.9651199727124507E-5	TEST	1.787710491313664E-6	DOCUMENTATION
// don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.9999728334470706	WITHOUT_CLASSIFICATION	1.691758152509054E-5	DEFECT	5.647837989370763E-6	IMPLEMENTATION	2.9314338144277386E-6	DESIGN	1.0017386137355487E-6	DOCUMENTATION	6.679609868075768E-7	TEST
// don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.9999355109955185	WITHOUT_CLASSIFICATION	4.189447307595271E-5	DEFECT	1.1190724535745661E-5	IMPLEMENTATION	8.7364450567737E-6	DESIGN	1.5692783722381033E-6	DOCUMENTATION	1.098083440726168E-6	TEST
// position cursor to the last row	WITHOUT_CLASSIFICATION	0.9999960404290688	WITHOUT_CLASSIFICATION	1.423511016873326E-6	IMPLEMENTATION	9.120356732745014E-7	DEFECT	8.058988346657847E-7	DESIGN	5.603889697756118E-7	DOCUMENTATION	2.5773643671280683E-7	TEST
// sequentially read the result set in reverse until we recognize // a change in the key value.  At that point, we are pointed at // the last physical sequential row for the logical row in which // we are interested in processing	WITHOUT_CLASSIFICATION	0.9999996250115359	WITHOUT_CLASSIFICATION	1.395529579873746E-7	IMPLEMENTATION	1.0454586706073353E-7	DESIGN	6.530984069590335E-8	TEST	3.3253616194666255E-8	DOCUMENTATION	3.232618210690722E-8	DEFECT
// Read backwards until we read past the first physical sequential // row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.9998769291662316	WITHOUT_CLASSIFICATION	8.272482625416699E-5	DEFECT	2.8162074495126887E-5	TEST	1.0768371806894062E-5	IMPLEMENTATION	8.941267856272426E-7	DESIGN	5.214344266725551E-7	DOCUMENTATION
// Finally, read ahead one row to position result set cursor // at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.9997548466553627	WITHOUT_CLASSIFICATION	1.9557026230656847E-4	IMPLEMENTATION	2.805835019081888E-5	DESIGN	1.5238065022675343E-5	TEST	3.2564658474153294E-6	DEFECT	3.0302012698534624E-6	DOCUMENTATION
// now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.9999882952882099	WITHOUT_CLASSIFICATION	7.546324174289722E-6	DESIGN	3.0055230450991002E-6	DEFECT	7.754982295132099E-7	IMPLEMENTATION	3.229627474563671E-7	TEST	5.440359383544659E-8	DOCUMENTATION
// force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.9999543779274489	WITHOUT_CLASSIFICATION	4.480448146435106E-5	IMPLEMENTATION	3.0609456507123536E-7	DEFECT	2.1219623700509532E-7	DOCUMENTATION	1.7213899266286742E-7	TEST	1.2716129201914266E-7	DESIGN
// this is equivalent to the old behavior...	WITHOUT_CLASSIFICATION	0.982027518266812	WITHOUT_CLASSIFICATION	0.017693470084087816	DESIGN	1.9832179967521616E-4	IMPLEMENTATION	3.2285918576329116E-5	DOCUMENTATION	2.5353961488931688E-5	DEFECT	2.304996935975956E-5	TEST
//if null, owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.999964877159207	WITHOUT_CLASSIFICATION	1.939889688682079E-5	DESIGN	1.1011291052553742E-5	DEFECT	3.8638371462904095E-6	IMPLEMENTATION	4.875830460022186E-7	TEST	3.6123266141059316E-7	DOCUMENTATION
//final String queryString, 	WITHOUT_CLASSIFICATION	0.9999874172323169	WITHOUT_CLASSIFICATION	5.585036324110674E-6	IMPLEMENTATION	2.6543770918416072E-6	DOCUMENTATION	1.6101451763553526E-6	DEFECT	1.4583212541281212E-6	DESIGN	1.2748878366879303E-6	TEST
// if it was a reference to self, don't need to nullify // unless we are using native id generation, in which // case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.9999999608938271	WITHOUT_CLASSIFICATION	3.437455557675715E-8	DESIGN	3.3561573802419793E-9	TEST	1.273967793017465E-9	DOCUMENTATION	8.914597206261624E-11	DEFECT	1.2346172889575673E-11	IMPLEMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9999250475942807	WITHOUT_CLASSIFICATION	3.952592652997204E-5	IMPLEMENTATION	1.4164456976665886E-5	TEST	9.194695723907437E-6	DOCUMENTATION	6.416667922069618E-6	DESIGN	5.650658566661109E-6	DEFECT
// in an effort to avoid concurrent-modification-exceptions (from // potential recursive calls back through here as a result of the // eventual call to PersistentCollection#endRead), we scan the // internal loadingCollections map for matches and store those matches // in a temp collection.  the temp collection is then used to "drive" // the #endRead processing.	WITHOUT_CLASSIFICATION	0.999818667721386	WITHOUT_CLASSIFICATION	9.316294397451573E-5	DEFECT	8.803396079220197E-5	DESIGN	5.8415584942668994E-8	IMPLEMENTATION	4.056905519455532E-8	DOCUMENTATION	3.638920719775178E-8	TEST
//we can reuse it for each row	WITHOUT_CLASSIFICATION	0.9999970315470841	WITHOUT_CLASSIFICATION	1.7923977276971997E-6	DESIGN	5.161250853308295E-7	IMPLEMENTATION	3.249201898980834E-7	DEFECT	2.2684345336945866E-7	TEST	1.0816645957334766E-7	DOCUMENTATION
//can't reuse in this case	WITHOUT_CLASSIFICATION	0.999726329045438	WITHOUT_CLASSIFICATION	2.703188223637082E-4	DESIGN	1.8259829501798816E-6	TEST	9.17626209655584E-7	DOCUMENTATION	3.398783613209733E-7	IMPLEMENTATION	2.6864467716213844E-7	DEFECT
// First we need to suspend any current JTA transaction and obtain // a JDBC connection	WITHOUT_CLASSIFICATION	0.9834470880702583	WITHOUT_CLASSIFICATION	0.00785028484565932	IMPLEMENTATION	0.0046452742168462575	DOCUMENTATION	0.004010740073103707	DESIGN	4.063339478725737E-5	TEST	5.979399345310413E-6	DEFECT
//getResultList(results);	WITHOUT_CLASSIFICATION	0.9999849110017035	WITHOUT_CLASSIFICATION	6.222108083773274E-6	IMPLEMENTATION	4.883259043560821E-6	DEFECT	3.3117569963738194E-6	TEST	4.169813566240003E-7	DOCUMENTATION	2.5489281624625844E-7	DESIGN
//if we only returned one entity, query by key is more efficient	WITHOUT_CLASSIFICATION	0.9996956842390595	WITHOUT_CLASSIFICATION	1.7966662886356597E-4	IMPLEMENTATION	9.748600378992427E-5	DESIGN	1.3452019371518705E-5	DEFECT	1.0805361536439604E-5	DOCUMENTATION	2.90574737904675E-6	TEST
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9998991703660046	WITHOUT_CLASSIFICATION	5.946972446304528E-5	DEFECT	4.10719853527438E-5	IMPLEMENTATION	1.3101469335016277E-7	TEST	1.1474315200007711E-7	DESIGN	4.216633430865281E-8	DOCUMENTATION
// handle empty collection	WITHOUT_CLASSIFICATION	0.9998407686236706	WITHOUT_CLASSIFICATION	1.1718227392445924E-4	IMPLEMENTATION	3.970669002452051E-5	DESIGN	1.3740354646287202E-6	DOCUMENTATION	7.024858156502599E-7	TEST	2.658911001238826E-7	DEFECT
// else no collection element, but also no owner	WITHOUT_CLASSIFICATION	0.9999995058020117	WITHOUT_CLASSIFICATION	2.827074023439611E-7	DESIGN	8.386415679171616E-8	IMPLEMENTATION	6.412864961300524E-8	DOCUMENTATION	4.456811835330288E-8	TEST	1.892966123185238E-8	DEFECT
//handle empty collections	WITHOUT_CLASSIFICATION	0.9994498334166947	WITHOUT_CLASSIFICATION	4.1834197667391066E-4	IMPLEMENTATION	1.2620823985216818E-4	DESIGN	2.602965705197851E-6	DOCUMENTATION	2.3380692660659295E-6	TEST	6.753318078177904E-7	DEFECT
// else this is not a collection initializer (and empty collections will // be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.9995836976232553	WITHOUT_CLASSIFICATION	3.490339166152704E-4	DESIGN	5.480598228660374E-5	DEFECT	1.2326923518779784E-5	IMPLEMENTATION	1.3190471531848435E-7	TEST	3.64960886268954E-9	DOCUMENTATION
// validate() instances of Validatable	WITHOUT_CLASSIFICATION	0.9999992379786241	WITHOUT_CLASSIFICATION	3.517049061240521E-7	DESIGN	2.814579889095767E-7	DEFECT	5.764520310899495E-8	IMPLEMENTATION	4.520695558146557E-8	DOCUMENTATION	2.6006322070028986E-8	TEST
// if we know there is exactly 1 row, we can skip. // it would be great if we could _always_ skip this; // it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.8987524249813161	WITHOUT_CLASSIFICATION	0.07179363366223272	IMPLEMENTATION	0.024617634472323666	DEFECT	0.0033973498865874645	DESIGN	0.0013832840925085395	TEST	5.567290503141597E-5	DOCUMENTATION
// remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.9993828141715908	WITHOUT_CLASSIFICATION	5.567189135878433E-4	IMPLEMENTATION	5.8320785687210994E-5	DESIGN	1.3652384283818475E-6	TEST	6.23198941727872E-7	DEFECT	1.5769176399806267E-7	DOCUMENTATION
//null version means the object is in the process of being loaded somewhere else in the ResultSet	WITHOUT_CLASSIFICATION	0.9317973582222552	WITHOUT_CLASSIFICATION	0.05377050547066345	DEFECT	0.008933813215302427	IMPLEMENTATION	0.00531140704412445	DESIGN	1.3882865899203398E-4	DOCUMENTATION	4.808738866261239E-5	TEST
//problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.9997539137057204	WITHOUT_CLASSIFICATION	1.2431549045279286E-4	DEFECT	6.483335322251239E-5	DESIGN	4.1430331149508844E-5	IMPLEMENTATION	1.2950708548140261E-5	DOCUMENTATION	2.5564109066068103E-6	TEST
//use the id passed in	WITHOUT_CLASSIFICATION	0.9999960234599555	WITHOUT_CLASSIFICATION	2.314064822044311E-6	IMPLEMENTATION	8.660568454659686E-7	DOCUMENTATION	4.376136863715599E-7	TEST	2.4838704889823456E-7	DESIGN	1.1041764176517478E-7	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999842025398344	WITHOUT_CLASSIFICATION	5.477174324799491E-6	IMPLEMENTATION	4.419504097862954E-6	DOCUMENTATION	2.817859068761193E-6	DEFECT	2.8071110054009665E-6	TEST	2.758116686020037E-7	DESIGN
// prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.9999809482698702	WITHOUT_CLASSIFICATION	1.4334102790889082E-5	IMPLEMENTATION	2.291484941450052E-6	DESIGN	1.1872228695606963E-6	DEFECT	6.737789744014741E-7	DOCUMENTATION	5.651405535707733E-7	TEST
//no point doing this if NONE was requested	WITHOUT_CLASSIFICATION	0.9968399512730627	WITHOUT_CLASSIFICATION	0.003021295478984239	TEST	5.320085461603979E-5	DESIGN	4.336544469603881E-5	IMPLEMENTATION	2.178474841570584E-5	DOCUMENTATION	2.040220022526603E-5	DEFECT
//If the object is already loaded, return the loaded one	WITHOUT_CLASSIFICATION	0.9997189763427154	WITHOUT_CLASSIFICATION	1.3884765936871208E-4	DEFECT	6.914869397051756E-5	DESIGN	6.72774785324837E-5	IMPLEMENTATION	3.90537520585998E-6	DOCUMENTATION	1.8444502069706602E-6	TEST
//its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.9988820623725204	WITHOUT_CLASSIFICATION	7.725543909446721E-4	DESIGN	1.9554109142924065E-4	IMPLEMENTATION	7.615446493778816E-5	DOCUMENTATION	5.3064421413668764E-5	TEST	2.062325875427212E-5	DEFECT
// cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.9998591779184458	WITHOUT_CLASSIFICATION	1.0766350315476956E-4	IMPLEMENTATION	1.4216646592640333E-5	DEFECT	1.0678201890248878E-5	DESIGN	4.623873996909808E-6	TEST	3.6398559196075796E-6	DOCUMENTATION
//the load() which takes an entity does not pass an entityName	WITHOUT_CLASSIFICATION	0.9958665990275786	WITHOUT_CLASSIFICATION	0.0031614348494181863	DEFECT	6.50855916450107E-4	IMPLEMENTATION	2.0215413034940221E-4	TEST	9.020267569145576E-5	DOCUMENTATION	2.875340051228584E-5	DESIGN
//we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.9967555238628423	WITHOUT_CLASSIFICATION	0.0029608204004979884	IMPLEMENTATION	1.247714577177873E-4	DOCUMENTATION	1.2032571407653382E-4	DEFECT	2.2770289137120168E-5	DESIGN	1.578827572829476E-5	TEST
// look for a proxy	WITHOUT_CLASSIFICATION	0.9999142117509738	WITHOUT_CLASSIFICATION	7.058471858820378E-5	IMPLEMENTATION	8.925222821742377E-6	DEFECT	5.421257808360924E-6	DESIGN	5.516316890473697E-7	DOCUMENTATION	3.05418118815918E-7	TEST
//we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.9367592296639985	WITHOUT_CLASSIFICATION	0.057204265743448446	IMPLEMENTATION	0.0028368730336060686	DESIGN	0.002091104202193046	TEST	0.001094226931898532	DOCUMENTATION	1.430042485535796E-5	DEFECT
//its the given optional object	WITHOUT_CLASSIFICATION	0.9997819458476291	WITHOUT_CLASSIFICATION	8.487305271504325E-5	DOCUMENTATION	7.085154972041307E-5	IMPLEMENTATION	5.154823056308732E-5	DEFECT	5.677468898955315E-6	DESIGN	5.103850473346268E-6	TEST
// instantiate a new instance	WITHOUT_CLASSIFICATION	0.9999960989266173	WITHOUT_CLASSIFICATION	3.4734807923751188E-6	DESIGN	2.823763991529839E-7	DOCUMENTATION	5.8907106295484426E-8	IMPLEMENTATION	5.0892819380161817E-8	TEST	3.541626538695601E-8	DEFECT
//need to hydrate it.	WITHOUT_CLASSIFICATION	0.9992090118641691	WITHOUT_CLASSIFICATION	5.95852382224098E-4	IMPLEMENTATION	8.593546891362077E-5	DESIGN	7.425561925630489E-5	DOCUMENTATION	3.38632080897238E-5	TEST	1.081457347238245E-6	DEFECT
// return a newly loaded object	WITHOUT_CLASSIFICATION	0.999969996578257	WITHOUT_CLASSIFICATION	2.4410264468835566E-5	DESIGN	3.557614458026831E-6	DEFECT	1.4629692212622008E-6	IMPLEMENTATION	4.907866560576168E-7	DOCUMENTATION	8.17869387369328E-8	TEST
//will be ignored, using the existing Entry instead	WITHOUT_CLASSIFICATION	0.999958350639078	WITHOUT_CLASSIFICATION	3.571184162871421E-5	IMPLEMENTATION	2.133584185095029E-6	DESIGN	1.9876838431634397E-6	DEFECT	1.2511195783780645E-6	DOCUMENTATION	5.651316866324489E-7	TEST
// key is an entity involved with the operation performed by the listener; // value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.9999999560540482	WITHOUT_CLASSIFICATION	2.2458256230485507E-8	DEFECT	1.2832715660002282E-8	DESIGN	7.397132463144337E-9	TEST	7.778308479753833E-10	IMPLEMENTATION	4.800165149471302E-10	DOCUMENTATION
//materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.9999877534249306	WITHOUT_CLASSIFICATION	4.65901432320953E-6	DESIGN	3.4197528692462273E-6	DOCUMENTATION	3.1802690176574136E-6	IMPLEMENTATION	7.509338403866151E-7	TEST	2.3660501883851958E-7	DEFECT
// Get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.999997894624506	WITHOUT_CLASSIFICATION	1.7886179389342674E-6	DESIGN	1.9093829758497327E-7	IMPLEMENTATION	7.413977887454217E-8	TEST	2.9632349219271008E-8	DEFECT	2.2047129537258665E-8	DOCUMENTATION
// ok in normal Hibernate usage to delete a detached entity; JPA however // forbids it, thus this is a hook for HEM to affect this behavior	WITHOUT_CLASSIFICATION	0.9993638948662603	WITHOUT_CLASSIFICATION	6.201158872053681E-4	DEFECT	7.784855582419193E-6	IMPLEMENTATION	7.234785735651069E-6	DESIGN	5.522757894572184E-7	DOCUMENTATION	4.173294266324597E-7	TEST
// the entry will be removed after the flush, and will no longer // override the stale snapshot // This is now handled by removeEntity() in EntityDeleteAction //persistenceContext.removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.949747954782646	WITHOUT_CLASSIFICATION	0.04998380767246712	DESIGN	2.5247508004128734E-4	DEFECT	1.5354076180257214E-5	IMPLEMENTATION	3.221057939352325E-7	TEST	8.628287149847387E-8	DOCUMENTATION
//addInitializedCollection(collection, persister, id);	WITHOUT_CLASSIFICATION	0.9999778385508404	WITHOUT_CLASSIFICATION	1.7892759593589373E-5	DESIGN	1.980091966078327E-6	IMPLEMENTATION	1.2596263009395663E-6	DEFECT	5.683939296994999E-7	DOCUMENTATION	4.605773691894836E-7	TEST
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9996824565809002	WITHOUT_CLASSIFICATION	1.0349582361084903E-4	IMPLEMENTATION	9.910213441945876E-5	DEFECT	4.480202252192679E-5	DOCUMENTATION	3.797036671251979E-5	DESIGN	3.2173071835142786E-5	TEST
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9996824565809002	WITHOUT_CLASSIFICATION	1.0349582361084903E-4	IMPLEMENTATION	9.910213441945876E-5	DEFECT	4.480202252192679E-5	DOCUMENTATION	3.797036671251979E-5	DESIGN	3.2173071835142786E-5	TEST
/*|| oj.getJoinable().consumesCollectionAlias() */	WITHOUT_CLASSIFICATION	0.99999553354397	WITHOUT_CLASSIFICATION	1.8011513268072398E-6	TEST	1.1777865655982622E-6	DOCUMENTATION	6.064687884023342E-7	DEFECT	4.918573800717272E-7	IMPLEMENTATION	3.8919196927548937E-7	DESIGN
// here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.9999791672142792	WITHOUT_CLASSIFICATION	1.909728242692852E-5	IMPLEMENTATION	1.043665603693767E-6	DESIGN	5.665108144780102E-7	TEST	9.112556281733182E-8	DOCUMENTATION	3.42013129760972E-8	DEFECT
// Code to handle subclasses of topClass	WITHOUT_CLASSIFICATION	0.9999220261060686	WITHOUT_CLASSIFICATION	7.726416553237185E-5	DESIGN	2.911828765190503E-7	DEFECT	1.8609287654870934E-7	DOCUMENTATION	1.484025512799272E-7	TEST	8.405009480871908E-8	IMPLEMENTATION
//woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.9997501940882172	WITHOUT_CLASSIFICATION	2.4104235710404212E-4	DESIGN	5.9852195185135465E-6	DEFECT	1.2815539955293567E-6	DOCUMENTATION	9.801947641302254E-7	TEST	5.165864006297482E-7	IMPLEMENTATION
// we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.9996758495201621	WITHOUT_CLASSIFICATION	2.806965299899325E-4	IMPLEMENTATION	2.7721734537844257E-5	DESIGN	6.880768690880712E-6	TEST	5.038778453236847E-6	DOCUMENTATION	3.8126681659439254E-6	DEFECT
// we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.9982646517131788	WITHOUT_CLASSIFICATION	0.001640547279937278	IMPLEMENTATION	3.5336772573815376E-5	TEST	2.5300974486744965E-5	DOCUMENTATION	1.868025868266827E-5	DESIGN	1.5483001140716245E-5	DEFECT
// synchronized to avoid multi-thread access issues; defined as method synch to avoid // potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.999421230339389	WITHOUT_CLASSIFICATION	5.730575994415572E-4	DESIGN	5.323196057028938E-6	DOCUMENTATION	2.1100843424563378E-7	TEST	1.1966620034702592E-7	DEFECT	5.8190477875952535E-8	IMPLEMENTATION
// Allows various loaders (ok mainly the QueryLoader :) to check // whether scrolling of their result set should be allowed. // // By default it is allowed.	WITHOUT_CLASSIFICATION	0.9997849822666167	WITHOUT_CLASSIFICATION	1.9268863539528383E-4	IMPLEMENTATION	1.834734382786626E-5	DEFECT	3.1277842209311093E-6	TEST	6.153642958222401E-7	DESIGN	2.3860564334316885E-7	DOCUMENTATION
//before adding to collection!	WITHOUT_CLASSIFICATION	0.9998929910948088	WITHOUT_CLASSIFICATION	5.08361240763839E-5	DEFECT	3.638218549311002E-5	IMPLEMENTATION	1.0397202939590052E-5	DESIGN	4.7067345921011725E-6	TEST	4.686658089937102E-6	DOCUMENTATION
// if the current depth is 0, the root thing being loaded is the // many-to-many collection itself.  Here, it is alright to use // an inner join...	WITHOUT_CLASSIFICATION	0.999874299760972	WITHOUT_CLASSIFICATION	7.277047242993713E-5	DESIGN	5.239151155707296E-5	DEFECT	3.601417517589847E-7	TEST	1.2684919339267853E-7	IMPLEMENTATION	5.1264095902859806E-8	DOCUMENTATION
//operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.9999993251415104	WITHOUT_CLASSIFICATION	4.3668092161548614E-7	DESIGN	8.361627704286654E-8	DOCUMENTATION	6.962900408782588E-8	IMPLEMENTATION	6.771767534898129E-8	TEST	1.7214611576360122E-8	DEFECT
// simple, because we can't have a one-to-one or a collection  // (or even a property-ref) in a composite-element:	WITHOUT_CLASSIFICATION	0.999991521056695	WITHOUT_CLASSIFICATION	4.309101035883883E-6	DEFECT	2.5874851673046908E-6	DESIGN	1.5493389312500056E-6	IMPLEMENTATION	2.746892005267125E-8	DOCUMENTATION	5.549250685008357E-9	TEST
//a composite key	WITHOUT_CLASSIFICATION	0.9999870147889628	WITHOUT_CLASSIFICATION	4.941676914696608E-6	DESIGN	3.9063628778168755E-6	IMPLEMENTATION	2.4340572612541416E-6	DOCUMENTATION	9.717332474687683E-7	TEST	7.313807359725575E-7	DEFECT
// if no batch, use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.9999994708241848	WITHOUT_CLASSIFICATION	2.1382212974570384E-7	DEFECT	1.880545500575639E-7	DESIGN	8.187297743058223E-8	DOCUMENTATION	3.5809593714121745E-8	IMPLEMENTATION	9.616564243054388E-9	TEST
//it must be a collection fetch	WITHOUT_CLASSIFICATION	0.9998322291510657	WITHOUT_CLASSIFICATION	1.435511483543898E-4	DESIGN	1.1589364734116367E-5	DEFECT	6.343392905242659E-6	TEST	5.494162876179674E-6	IMPLEMENTATION	7.927800644157399E-7	DOCUMENTATION
// needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.37907025152637513	WITHOUT_CLASSIFICATION	0.31997696313640006	DESIGN	0.29904433708337214	IMPLEMENTATION	0.0012029636409739818	DOCUMENTATION	5.186603140560695E-4	DEFECT	1.8682429882246112E-4	TEST
/*&& etype.isReferenceToPrimaryKey()*/	WITHOUT_CLASSIFICATION	0.9999786203836981	WITHOUT_CLASSIFICATION	1.9137614772140154E-5	DESIGN	9.026414254067082E-7	DOCUMENTATION	6.104374230088155E-7	IMPLEMENTATION	4.877624331313608E-7	DEFECT	2.4116024825258774E-7	TEST
// it might still need to apply a collection ordering based on a // many-to-many defined order-by...	WITHOUT_CLASSIFICATION	0.8417841339905898	WITHOUT_CLASSIFICATION	0.08032844624660551	DESIGN	0.07677531050513228	IMPLEMENTATION	6.394842908196311E-4	TEST	3.3527350896495636E-4	DEFECT	1.373514578878583E-4	DOCUMENTATION
// if a composite key, use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching //TODO: unnecessary for databases with ANSI-style joins	WITHOUT_CLASSIFICATION	0.9962221915316192	WITHOUT_CLASSIFICATION	0.003170585285921014	DESIGN	3.4461146830608373E-4	IMPLEMENTATION	2.5406141948611607E-4	DEFECT	6.343550838681425E-6	TEST	2.2067438289305103E-6	DOCUMENTATION
// belong to other persister // belong to other persister	WITHOUT_CLASSIFICATION	0.9990098867041122	WITHOUT_CLASSIFICATION	9.128150432723056E-4	DESIGN	3.9734398574816234E-5	DEFECT	1.8506585829619944E-5	IMPLEMENTATION	1.672327848882697E-5	TEST	2.333989722320079E-6	DOCUMENTATION
// we found it	WITHOUT_CLASSIFICATION	0.9999872147667587	WITHOUT_CLASSIFICATION	3.6719197502637E-6	IMPLEMENTATION	3.5714139081928307E-6	DEFECT	2.4604562283044656E-6	DOCUMENTATION	1.922316155407313E-6	DESIGN	1.1591271992411102E-6	TEST
//we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.9997981106913144	WITHOUT_CLASSIFICATION	1.9171986641124114E-4	DESIGN	4.639187895014004E-6	DEFECT	3.0049473395069472E-6	DOCUMENTATION	2.1164386841297937E-6	IMPLEMENTATION	4.088683556408735E-7	TEST
//disable a join back to this same association	WITHOUT_CLASSIFICATION	0.9908687154956289	WITHOUT_CLASSIFICATION	0.006972586433523124	DESIGN	0.0014863335218205935	DOCUMENTATION	4.912555860600511E-4	TEST	1.5360924474802835E-4	IMPLEMENTATION	2.7499718219200796E-5	DEFECT
//NOTE: unlike all other Loaders, this one is NOT //      multithreaded, or cacheable!!	WITHOUT_CLASSIFICATION	0.9988557464321394	WITHOUT_CLASSIFICATION	9.324122005208681E-4	IMPLEMENTATION	1.7432082652940262E-4	DESIGN	2.175292604344097E-5	TEST	9.819718272453019E-6	DEFECT	5.947896494438882E-6	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999394129579114	WITHOUT_CLASSIFICATION	3.48923374143559E-5	DESIGN	1.4914558299746908E-5	DOCUMENTATION	8.246887467199003E-6	DEFECT	1.925350827826746E-6	IMPLEMENTATION	6.079080794017776E-7	TEST
//root entity comes *last*	WITHOUT_CLASSIFICATION	0.9999665863561813	WITHOUT_CLASSIFICATION	2.3667010820059206E-5	DESIGN	3.0528182589877054E-6	TEST	2.412432178209487E-6	DEFECT	2.3404183023916597E-6	IMPLEMENTATION	1.9409642590144595E-6	DOCUMENTATION
//deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.999988549296833	WITHOUT_CLASSIFICATION	5.295901332173887E-6	IMPLEMENTATION	2.911355149244249E-6	DESIGN	2.675834194172787E-6	DEFECT	4.4383402544939334E-7	DOCUMENTATION	1.2377846601857647E-7	TEST
//alias may be null //EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999674120141061	WITHOUT_CLASSIFICATION	1.768206380249633E-5	DESIGN	8.84887211321669E-6	DEFECT	3.894560616020445E-6	IMPLEMENTATION	1.7466329730672515E-6	DOCUMENTATION	4.1585638892392225E-7	TEST
// if it is a compound path	WITHOUT_CLASSIFICATION	0.9999866221122464	WITHOUT_CLASSIFICATION	4.555631202607823E-6	IMPLEMENTATION	4.495451121386321E-6	DEFECT	3.1684753371730747E-6	TEST	9.26368373896336E-7	DESIGN	2.3196171833106548E-7	DOCUMENTATION
// otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.9999134423518647	WITHOUT_CLASSIFICATION	7.799543273822483E-5	IMPLEMENTATION	4.484892663051134E-6	TEST	1.7612931435301035E-6	DEFECT	1.6893869057727057E-6	DESIGN	6.266426846447278E-7	DOCUMENTATION
// if its the root criteria, we are done	WITHOUT_CLASSIFICATION	0.9999864753288246	WITHOUT_CLASSIFICATION	1.2029560736464251E-5	DESIGN	9.236562831405484E-7	TEST	2.5708200261340546E-7	IMPLEMENTATION	1.786991197237329E-7	DEFECT	1.3567303330565469E-7	DOCUMENTATION
// otherwise, recurse	WITHOUT_CLASSIFICATION	0.9999786011560852	WITHOUT_CLASSIFICATION	1.4618677908814458E-5	IMPLEMENTATION	5.311611216281369E-6	DESIGN	6.363966688140218E-7	DOCUMENTATION	6.254579644849833E-7	TEST	2.0670015634090718E-7	DEFECT
//the criteria instance	WITHOUT_CLASSIFICATION	0.9999921459036732	WITHOUT_CLASSIFICATION	3.596396511084636E-6	IMPLEMENTATION	3.4593830054318262E-6	DESIGN	4.1618127749593206E-7	DOCUMENTATION	2.8784500171894653E-7	TEST	9.429053124695721E-8	DEFECT
// the entity name	WITHOUT_CLASSIFICATION	0.999798393337746	WITHOUT_CLASSIFICATION	1.7807650583615716E-4	IMPLEMENTATION	1.2210948196553883E-5	DOCUMENTATION	6.54245024035276E-6	DESIGN	2.9126717070448496E-6	TEST	1.8640862738330878E-6	DEFECT
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9997161198869264	WITHOUT_CLASSIFICATION	1.168512267561396E-4	DESIGN	1.0842733396245544E-4	IMPLEMENTATION	3.3796030485677696E-5	DEFECT	1.4094065874271952E-5	TEST	1.071145599500857E-5	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9997161198869264	WITHOUT_CLASSIFICATION	1.168512267561396E-4	DESIGN	1.0842733396245544E-4	IMPLEMENTATION	3.3796030485677696E-5	DEFECT	1.4094065874271952E-5	TEST	1.071145599500857E-5	DOCUMENTATION
//it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.9995615161606112	WITHOUT_CLASSIFICATION	3.9307368067554275E-4	DESIGN	3.464935954574854E-5	IMPLEMENTATION	6.9417752501521694E-6	DEFECT	2.6087839056246346E-6	DOCUMENTATION	1.2102400117719895E-6	TEST
//should never happen, i think	WITHOUT_CLASSIFICATION	0.9993440059780523	WITHOUT_CLASSIFICATION	5.283650054726268E-4	IMPLEMENTATION	4.36498007169578E-5	TEST	3.4884464801208495E-5	DOCUMENTATION	3.3446510947695244E-5	DEFECT	1.564824000921171E-5	DESIGN
// Detect discriminator values...	WITHOUT_CLASSIFICATION	0.9999991240581265	WITHOUT_CLASSIFICATION	4.924112497328176E-7	IMPLEMENTATION	2.0148139092682034E-7	DEFECT	8.847495368105567E-8	TEST	5.639597162703432E-8	DOCUMENTATION	3.717830732229724E-8	DESIGN
// Convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.9999558178234828	WITHOUT_CLASSIFICATION	2.7418637373440248E-5	DESIGN	7.376236212934003E-6	IMPLEMENTATION	5.750052659644586E-6	DOCUMENTATION	2.3430103249974114E-6	DEFECT	1.294239946241748E-6	TEST
// and the qualifier is not the alias of this criteria //      -> check to see if we belong to some criteria other //          than the one that created us	WITHOUT_CLASSIFICATION	0.999991433843519	WITHOUT_CLASSIFICATION	4.989916110465661E-6	DESIGN	2.3516432993367952E-6	IMPLEMENTATION	9.310821348701775E-7	TEST	2.0995505121023713E-7	DOCUMENTATION	8.355988513691669E-8	DEFECT
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9990203547195785	WITHOUT_CLASSIFICATION	7.667504153962513E-4	DESIGN	1.9421179290235978E-4	DEFECT	8.76620617819434E-6	IMPLEMENTATION	7.124963902204769E-6	TEST	2.7919020425290186E-6	DOCUMENTATION
// Otherwise, this is an ordinary value.	WITHOUT_CLASSIFICATION	0.9999712899697141	WITHOUT_CLASSIFICATION	2.2739477928671567E-5	DESIGN	3.734643165485682E-6	DEFECT	7.989637889549897E-7	DOCUMENTATION	7.825341620711005E-7	IMPLEMENTATION	6.544112408001083E-7	TEST
// Currently *not* cachable if autodiscover types is in effect (e.g. "select * ...")	WITHOUT_CLASSIFICATION	0.9999497426006575	WITHOUT_CLASSIFICATION	4.915490498890656E-5	DESIGN	7.619711098337719E-7	DEFECT	1.8203735608327112E-7	TEST	9.734664881313923E-8	IMPLEMENTATION	6.113923891734651E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// this is only needed (afaict) for ResultTransformer processing...	WITHOUT_CLASSIFICATION	0.9904204014540899	WITHOUT_CLASSIFICATION	0.008714289815786735	DESIGN	4.0184894698268715E-4	TEST	1.9320836086056221E-4	IMPLEMENTATION	1.9240458702092053E-4	DOCUMENTATION	7.784683525912026E-5	DEFECT
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999863605531034	WITHOUT_CLASSIFICATION	1.3358087082773386E-5	DESIGN	1.6639188175483258E-7	TEST	8.497930242303781E-8	IMPLEMENTATION	1.6858683544333085E-8	DEFECT	1.3129946098080968E-8	DOCUMENTATION
// build an array with indices equal to the total number // of actual returns in the result Hibernate will return // for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.9999798044175995	WITHOUT_CLASSIFICATION	1.2649084996238668E-5	DESIGN	5.9283628232648005E-6	IMPLEMENTATION	1.2933433631835406E-6	DEFECT	2.7983859865607667E-7	TEST	4.4952619159878925E-8	DOCUMENTATION
// replace {....} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.9958100415199284	WITHOUT_CLASSIFICATION	0.004123080393415108	DESIGN	2.351206467017561E-5	TEST	2.020240265962221E-5	IMPLEMENTATION	1.5469806798294494E-5	DEFECT	7.693812528429209E-6	DOCUMENTATION
// No additional open braces found in the string, append the // rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.9999955947330764	WITHOUT_CLASSIFICATION	2.6089513873195896E-6	TEST	6.423158134054987E-7	DESIGN	5.751002673522504E-7	IMPLEMENTATION	4.001272247911672E-7	DEFECT	1.7877223059085098E-7	DOCUMENTATION
// apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.9999800659814494	WITHOUT_CLASSIFICATION	1.4412250592579848E-5	IMPLEMENTATION	2.3591972633332915E-6	DESIGN	1.9472367133490414E-6	DEFECT	6.921603797049713E-7	DOCUMENTATION	5.23173601650764E-7	TEST
// it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.9999763983037938	WITHOUT_CLASSIFICATION	2.0739971891913945E-5	IMPLEMENTATION	2.1578197980028506E-6	DEFECT	3.443913227240242E-7	TEST	2.7915096348835135E-7	DESIGN	8.036223017540966E-8	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.5487487583968382	WITHOUT_CLASSIFICATION	0.3445015724163347	IMPLEMENTATION	0.10163249707768396	DEFECT	0.002534514988610814	DESIGN	0.001958352752498084	TEST	6.24304368034158E-4	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.5487487583968382	WITHOUT_CLASSIFICATION	0.3445015724163347	IMPLEMENTATION	0.10163249707768396	DEFECT	0.002534514988610814	DESIGN	0.001958352752498084	TEST	6.24304368034158E-4	DOCUMENTATION
// The current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.9998957178170016	WITHOUT_CLASSIFICATION	5.8384014144640864E-5	DESIGN	4.2200528743707505E-5	DEFECT	3.1694951939557404E-6	IMPLEMENTATION	3.9462722548600964E-7	DOCUMENTATION	1.3351769057785734E-7	TEST
// it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.9999972867003781	WITHOUT_CLASSIFICATION	1.3059594360325692E-6	DEFECT	7.630309848553934E-7	DESIGN	4.490198694820974E-7	IMPLEMENTATION	1.1208997743413779E-7	TEST	8.3199354103929E-8	DOCUMENTATION
// Possibly handle :something parameters for the query ?	WITHOUT_CLASSIFICATION	0.9997366189245417	WITHOUT_CLASSIFICATION	1.96079921027611E-4	IMPLEMENTATION	6.281826960914223E-5	DESIGN	2.5111396574725463E-6	TEST	1.4570180029907502E-6	DEFECT	5.147271611067713E-7	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999867205131052	WITHOUT_CLASSIFICATION	9.434852628892335E-6	DESIGN	3.5596969387926535E-6	IMPLEMENTATION	1.4352072414313545E-7	DEFECT	1.0212675338111057E-7	TEST	3.928984943714463E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9989260628615921	WITHOUT_CLASSIFICATION	7.677202016314123E-4	DESIGN	1.4376704594225997E-4	IMPLEMENTATION	7.854593901788724E-5	DOCUMENTATION	4.701722594702547E-5	TEST	3.688672586933569E-5	DEFECT
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9993312620005943	WITHOUT_CLASSIFICATION	3.4026568686410663E-4	DEFECT	1.7057378384444975E-4	IMPLEMENTATION	5.994560830747162E-5	DOCUMENTATION	4.9640835400323495E-5	DESIGN	4.831208498935107E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// Now, process the returns	WITHOUT_CLASSIFICATION	0.9999961371659905	WITHOUT_CLASSIFICATION	3.173465752601387E-6	IMPLEMENTATION	3.336842041876841E-7	DESIGN	1.6814259119551204E-7	DEFECT	1.5830012951946233E-7	DOCUMENTATION	2.9241331947193564E-8	TEST
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// already been processed...	WITHOUT_CLASSIFICATION	0.9999637202318873	WITHOUT_CLASSIFICATION	2.698229748194337E-5	IMPLEMENTATION	6.451854320809914E-6	DESIGN	2.041110561846696E-6	DOCUMENTATION	5.308854280616229E-7	DEFECT	2.736203200045473E-7	TEST
// already been processed...	WITHOUT_CLASSIFICATION	0.9999637202318873	WITHOUT_CLASSIFICATION	2.698229748194337E-5	IMPLEMENTATION	6.451854320809914E-6	DESIGN	2.041110561846696E-6	DOCUMENTATION	5.308854280616229E-7	DEFECT	2.736203200045473E-7	TEST
// Make sure the owner alias is known...	WITHOUT_CLASSIFICATION	0.9999479700679389	WITHOUT_CLASSIFICATION	4.873895343999664E-5	IMPLEMENTATION	1.6986562275375551E-6	DESIGN	8.771752222302175E-7	DOCUMENTATION	4.48408485145845E-7	DEFECT	2.6673868610884984E-7	TEST
// first, break down the returns into maps keyed by alias // so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.9998781209939953	WITHOUT_CLASSIFICATION	9.60482103418616E-5	DESIGN	2.35744040273131E-5	IMPLEMENTATION	2.1090150409433838E-6	DEFECT	9.458564842555132E-8	DOCUMENTATION	5.279094619002003E-8	TEST
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// If this return's alias has not been processed yet, do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.9998364144160078	WITHOUT_CLASSIFICATION	1.227573552798157E-4	DESIGN	3.265145971981321E-5	IMPLEMENTATION	4.5743157883711636E-6	TEST	2.3806417654702463E-6	DEFECT	1.221811438750499E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// for merging of versioned entities, we consider the version having // been changed only when: // 1) the two version values are different; //      *AND* // 2) The target actually represents database state! // // This second condition is a special case which allows // an entity to be merged during the same transaction // (though during a seperate operation) in which it was // originally persisted/saved	WITHOUT_CLASSIFICATION	0.9999870654327222	WITHOUT_CLASSIFICATION	7.807774387337485E-6	IMPLEMENTATION	4.746380807732172E-6	DESIGN	3.0663659484103487E-7	TEST	5.1953656198360193E-8	DEFECT	2.182183172430221E-8	DOCUMENTATION
// this is the second pass through on a merge op, so here we limit the // replacement to associations types (value types were already replaced // during the first pass)	WITHOUT_CLASSIFICATION	0.9815774172374928	WITHOUT_CLASSIFICATION	0.01840335956605707	DESIGN	1.0828192643816022E-5	TEST	7.449327477078886E-6	DOCUMENTATION	5.677840559863552E-7	IMPLEMENTATION	3.77892273156521E-7	DEFECT
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9997565204786392	WITHOUT_CLASSIFICATION	1.143937943084671E-4	IMPLEMENTATION	4.2558406087601705E-5	DEFECT	3.3489092057446136E-5	DESIGN	2.8870216302778423E-5	DOCUMENTATION	2.4168012604618537E-5	TEST
// cascade-save to collections AFTER the collection owner was saved	WITHOUT_CLASSIFICATION	0.9997996555003505	WITHOUT_CLASSIFICATION	1.8338381311449537E-4	IMPLEMENTATION	1.3945587959908661E-5	DESIGN	1.3564687729553084E-6	DEFECT	1.122326799242858E-6	TEST	5.363030028697914E-7	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999761574051753	WITHOUT_CLASSIFICATION	2.1577337493104918E-5	IMPLEMENTATION	1.0632492832746337E-6	DEFECT	8.72865183857191E-7	DESIGN	2.1507086252351272E-7	DOCUMENTATION	1.1407200194990931E-7	TEST
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999836613802704	WITHOUT_CLASSIFICATION	1.475459205849061E-5	IMPLEMENTATION	7.204222086923414E-7	DESIGN	4.3138708103342556E-7	DOCUMENTATION	3.601874710675189E-7	TEST	7.203091027300994E-8	DEFECT
// currently only the Hibernate-supplied DbTimestampType is supported here	WITHOUT_CLASSIFICATION	0.9978147187461767	WITHOUT_CLASSIFICATION	0.0017148294929553902	IMPLEMENTATION	3.3733414661043013E-4	DESIGN	7.821803315057155E-5	TEST	3.411395578842677E-5	DOCUMENTATION	2.0785625318546948E-5	DEFECT
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9978088995166124	WITHOUT_CLASSIFICATION	8.797906633097999E-4	DESIGN	8.603738443981179E-4	IMPLEMENTATION	4.4444477268035205E-4	DEFECT	4.918719602422391E-6	DOCUMENTATION	1.572483396829706E-6	TEST
// make a new one	WITHOUT_CLASSIFICATION	0.9999614901563958	WITHOUT_CLASSIFICATION	1.499136402809213E-5	DESIGN	1.2609063486383345E-5	IMPLEMENTATION	5.828753884074931E-6	DOCUMENTATION	3.7940192762412422E-6	DEFECT	1.2866429294209627E-6	TEST
// not so sure this is even valid subtree.  but if it was, it'd // represent two unrelated table references...	WITHOUT_CLASSIFICATION	0.9999991614349222	WITHOUT_CLASSIFICATION	3.869905345049316E-7	IMPLEMENTATION	2.2841063306427226E-7	TEST	2.026058314943098E-7	DESIGN	1.4692075234522902E-8	DOCUMENTATION	5.8660035235733336E-9	DEFECT
// (NOT (GT a b) ) => (LE a b)	WITHOUT_CLASSIFICATION	0.9999954556580821	WITHOUT_CLASSIFICATION	2.3649670846836084E-6	IMPLEMENTATION	1.1667606632007347E-6	DEFECT	4.968914276784961E-7	TEST	3.177815318881869E-7	DOCUMENTATION	1.9794121036613468E-7	DESIGN
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9999965185828766	WITHOUT_CLASSIFICATION	1.5590039810472934E-6	DESIGN	5.59580500188855E-7	DOCUMENTATION	5.009646290477883E-7	DEFECT	4.745146048913131E-7	TEST	3.873534081868722E-7	IMPLEMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9999956788075038	WITHOUT_CLASSIFICATION	3.903958141995729E-6	DESIGN	2.141021300954784E-7	IMPLEMENTATION	1.1960883488853116E-7	DEFECT	5.4641933842118445E-8	TEST	2.8881455468235725E-8	DOCUMENTATION
//sqlResultTypes = selectClause.getSqlResultTypes();	WITHOUT_CLASSIFICATION	0.9999977724862039	WITHOUT_CLASSIFICATION	1.556813620052264E-6	DEFECT	3.0572273379686994E-7	IMPLEMENTATION	2.4439691098615007E-7	TEST	7.348922558785155E-8	DOCUMENTATION	4.709130557274993E-8	DESIGN
//by default	WITHOUT_CLASSIFICATION	0.9999439535845156	WITHOUT_CLASSIFICATION	2.99455353800136E-5	IMPLEMENTATION	1.2261520243671795E-5	DESIGN	6.23101136869423E-6	DOCUMENTATION	4.526115090590447E-6	DEFECT	3.0822334014916817E-6	TEST
// This is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.9993221981827017	WITHOUT_CLASSIFICATION	6.38949387427596E-4	DESIGN	3.134431851984523E-5	IMPLEMENTATION	2.9491479429114904E-6	DEFECT	2.9167838320745723E-6	TEST	1.6421795758653037E-6	DOCUMENTATION
// -- Loader implementation --	WITHOUT_CLASSIFICATION	0.999161069571847	WITHOUT_CLASSIFICATION	8.356115355362131E-4	IMPLEMENTATION	1.168292140454594E-6	DEFECT	1.0056468805395328E-6	DOCUMENTATION	9.91726793714609E-7	DESIGN	1.532268021016758E-7	TEST
// -- Loader overrides --	WITHOUT_CLASSIFICATION	0.99999840971384	WITHOUT_CLASSIFICATION	5.941779464015188E-7	IMPLEMENTATION	3.072243534376688E-7	DEFECT	2.3385332346294205E-7	DOCUMENTATION	2.2892458755543146E-7	DESIGN	2.2610594911432682E-7	TEST
// (NOT (IS_NULL a b) ) => (IS_NOT_NULL a b)	WITHOUT_CLASSIFICATION	0.9999771986100406	WITHOUT_CLASSIFICATION	1.3052407246506398E-5	DEFECT	5.335740346020151E-6	IMPLEMENTATION	2.4196970235075097E-6	DESIGN	1.0153539486779631E-6	DOCUMENTATION	9.78191394780978E-7	TEST
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9995560719505469	WITHOUT_CLASSIFICATION	3.94976577119154E-4	IMPLEMENTATION	2.1706304261945044E-5	TEST	1.4887768016204409E-5	DEFECT	1.0307965712259913E-5	DESIGN	2.049434343411361E-6	DOCUMENTATION
// meant to handle dynamic instantiation queries...	WITHOUT_CLASSIFICATION	0.9882401725414057	WITHOUT_CLASSIFICATION	0.011153822299571093	DESIGN	5.631518590069123E-4	IMPLEMENTATION	1.9386699518747398E-5	DOCUMENTATION	1.7566766350898743E-5	TEST	5.8998341468117504E-6	DEFECT
// --- Query translator methods ---	WITHOUT_CLASSIFICATION	0.9999447771608234	WITHOUT_CLASSIFICATION	4.036834524617804E-5	IMPLEMENTATION	1.2247296085395144E-5	DESIGN	1.3378947280368E-6	DOCUMENTATION	8.747309473154712E-7	TEST	3.9457216959643184E-7	DEFECT
// -- Implementation private methods --	WITHOUT_CLASSIFICATION	0.9980304522402813	WITHOUT_CLASSIFICATION	0.0018466328053716138	DESIGN	1.1925637337480362E-4	IMPLEMENTATION	2.403797793610676E-6	DOCUMENTATION	7.312287887322148E-7	DEFECT	5.23554389918013E-7	TEST
//deduplicate unique constraints sharing the same columns //this is needed by Hibernate Annotations since it creates automagically // unique constraints for the user	WITHOUT_CLASSIFICATION	0.5204523898808194	DESIGN	0.33433473004390696	WITHOUT_CLASSIFICATION	0.08385530165461848	IMPLEMENTATION	0.04636030299069702	TEST	0.014774823602900122	DEFECT	2.224518270579985E-4	DOCUMENTATION
// Try to find out the name of the primary key to create it as identity if the IdentityGenerator is used	WITHOUT_CLASSIFICATION	0.999921479745953	WITHOUT_CLASSIFICATION	7.647720871344467E-5	DESIGN	1.4684276288860245E-6	IMPLEMENTATION	3.740871161298133E-7	TEST	1.596889470296398E-7	DOCUMENTATION	4.0841641498477696E-8	DEFECT
// to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.9890969953698769	WITHOUT_CLASSIFICATION	0.008984753575254393	DESIGN	0.001769987165982569	IMPLEMENTATION	1.2278838521630184E-4	DEFECT	1.5760583152701097E-5	DOCUMENTATION	9.714920517105795E-6	TEST
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.999981276745404	WITHOUT_CLASSIFICATION	1.1084018651366702E-5	IMPLEMENTATION	6.080764139154331E-6	DESIGN	1.3259117642761033E-6	DEFECT	1.3089045184783768E-7	TEST	1.0166958936061133E-7	DOCUMENTATION
//used also for generation of FK names!	WITHOUT_CLASSIFICATION	0.9996661600372867	WITHOUT_CLASSIFICATION	1.9780809638384977E-4	DESIGN	7.725605085069122E-5	IMPLEMENTATION	3.915208098251088E-5	TEST	9.982129338459644E-6	DEFECT	9.641605157729232E-6	DOCUMENTATION
//usually useless	WITHOUT_CLASSIFICATION	0.9999863550941288	WITHOUT_CLASSIFICATION	7.989675375826664E-6	DESIGN	2.085197007586978E-6	IMPLEMENTATION	1.602765585389262E-6	DEFECT	1.0655847238814392E-6	DOCUMENTATION	9.016831784162017E-7	TEST
// added this caching as I noticed that getType() is being called multiple times...	WITHOUT_CLASSIFICATION	0.9999883963826338	WITHOUT_CLASSIFICATION	5.606507720706974E-6	DESIGN	4.206466554481383E-6	IMPLEMENTATION	1.083728634475592E-6	TEST	5.649632084838435E-7	DEFECT	1.4195124801927394E-7	DOCUMENTATION
//do not add unique constraint on DB not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.999939862961021	WITHOUT_CLASSIFICATION	5.8010910222316304E-5	IMPLEMENTATION	7.619936436946391E-7	TEST	5.745376954853507E-7	DEFECT	4.1501419198869536E-7	DESIGN	3.745832255244621E-7	DOCUMENTATION
//for backward compatibility, disable this:	WITHOUT_CLASSIFICATION	0.9998750833238377	WITHOUT_CLASSIFICATION	1.0068214806459103E-4	IMPLEMENTATION	1.2049961594778085E-5	TEST	7.286672278194357E-6	DESIGN	2.7692592452863113E-6	DOCUMENTATION	2.128634979454438E-6	DEFECT
//may be final //may be final //may be final	WITHOUT_CLASSIFICATION	0.9998958924562574	WITHOUT_CLASSIFICATION	5.7887305914466125E-5	DEFECT	2.501249012809592E-5	DESIGN	1.056656895685036E-5	IMPLEMENTATION	8.23602713693901E-6	DOCUMENTATION	2.4051516061870916E-6	TEST
//may be final	WITHOUT_CLASSIFICATION	0.9999802208310745	WITHOUT_CLASSIFICATION	6.126559770980162E-6	DESIGN	5.149149164483091E-6	DEFECT	4.277981114631083E-6	IMPLEMENTATION	3.4774629666310542E-6	DOCUMENTATION	7.480159087369495E-7	TEST
// may be final	WITHOUT_CLASSIFICATION	0.99999445247758	WITHOUT_CLASSIFICATION	1.8513399355922023E-6	DEFECT	1.598647277923528E-6	DESIGN	1.2506804720615925E-6	IMPLEMENTATION	7.153649948439643E-7	DOCUMENTATION	1.314897395928668E-7	TEST
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999970829308805	WITHOUT_CLASSIFICATION	7.536205036162505E-7	DOCUMENTATION	7.532349819906864E-7	DESIGN	5.94109486815354E-7	DEFECT	4.4138840143944036E-7	TEST	3.7471574576091683E-7	IMPLEMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.999999033309747	WITHOUT_CLASSIFICATION	5.131258318905368E-7	DOCUMENTATION	2.131906432797135E-7	DESIGN	1.5075635341354347E-7	TEST	7.262237627529186E-8	IMPLEMENTATION	1.699504811019445E-8	DEFECT
// the root of the incoming property path matched one // of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.9999984607446852	WITHOUT_CLASSIFICATION	9.712869889333837E-7	DEFECT	4.6539988613893107E-7	DESIGN	5.7910813428234584E-8	IMPLEMENTATION	2.4435833993129873E-8	DOCUMENTATION	2.02217922212705E-8	TEST
// ignore it...	WITHOUT_CLASSIFICATION	0.9999915781912407	WITHOUT_CLASSIFICATION	7.186024580937486E-6	IMPLEMENTATION	5.757563645190108E-7	DOCUMENTATION	2.6893341436347116E-7	DESIGN	2.0635402240703943E-7	DEFECT	1.8474037714087208E-7	TEST
//flat recursive algorithm	WITHOUT_CLASSIFICATION	0.9999148507496818	WITHOUT_CLASSIFICATION	6.806414067106584E-5	IMPLEMENTATION	7.335403322322825E-6	DEFECT	4.243487737472833E-6	DOCUMENTATION	3.0863155767256457E-6	DESIGN	2.4199030105685137E-6	TEST
//an identifier mapper => getKey will be included in the getNonDuplicatedPropertyIterator() //and checked later, so it needs to be excluded	WITHOUT_CLASSIFICATION	0.9994407469149266	WITHOUT_CLASSIFICATION	1.9357082103878384E-4	DEFECT	1.9170592956767738E-4	DESIGN	1.5507591533466726E-4	IMPLEMENTATION	1.730891048534476E-5	DOCUMENTATION	1.5915086469871902E-6	TEST
//if the hibernate-mapping did not specify a schema/catalog, use the defaults //specified by properties - but note that if the schema/catalog were specified //in hibernate-mapping, or as params, they will already be initialized and //will override the values set here (they are in identifierGeneratorProperties)	WITHOUT_CLASSIFICATION	0.9999999789858759	WITHOUT_CLASSIFICATION	1.1744201788955296E-8	DESIGN	4.0534403011631166E-9	IMPLEMENTATION	4.0347580286635304E-9	DEFECT	9.999772880337998E-10	DOCUMENTATION	1.8174660155697836E-10	TEST
//pass the entity-name, if not a collection-id	WITHOUT_CLASSIFICATION	0.9998876917478731	WITHOUT_CLASSIFICATION	3.982310963532347E-5	DESIGN	3.73817635986988E-5	DEFECT	2.7099113315366313E-5	IMPLEMENTATION	6.573854884604345E-6	TEST	1.4304106930337543E-6	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999970829308805	WITHOUT_CLASSIFICATION	7.536205036162505E-7	DOCUMENTATION	7.532349819906864E-7	DESIGN	5.94109486815354E-7	DEFECT	4.4138840143944036E-7	TEST	3.7471574576091683E-7	IMPLEMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.999999033309747	WITHOUT_CLASSIFICATION	5.131258318905368E-7	DOCUMENTATION	2.131906432797135E-7	DESIGN	1.5075635341354347E-7	TEST	7.262237627529186E-8	IMPLEMENTATION	1.699504811019445E-8	DEFECT
//pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.9996959778341753	WITHOUT_CLASSIFICATION	1.7697572136513324E-4	IMPLEMENTATION	4.9865659702384006E-5	DESIGN	3.8020115730653134E-5	DEFECT	3.7540427265539175E-5	TEST	1.6202417609425576E-6	DOCUMENTATION
//needed to satisfy KeyValue	WITHOUT_CLASSIFICATION	0.9936228543355976	WITHOUT_CLASSIFICATION	0.004751185568373211	IMPLEMENTATION	9.113413947604703E-4	DESIGN	6.355002605618137E-4	DOCUMENTATION	4.587692876960424E-5	TEST	3.324151193728762E-5	DEFECT
// empty means no scoping	WITHOUT_CLASSIFICATION	0.9999979497159516	WITHOUT_CLASSIFICATION	7.818011047277534E-7	IMPLEMENTATION	6.484543708087512E-7	DOCUMENTATION	2.9479998511482905E-7	DESIGN	1.68744086585194E-7	TEST	1.5648450117443778E-7	DEFECT
// index should be last column listed	WITHOUT_CLASSIFICATION	0.9992893343513221	WITHOUT_CLASSIFICATION	2.1340982373258E-4	DEFECT	2.0141580482735516E-4	IMPLEMENTATION	1.6056461346278903E-4	DESIGN	1.2766874053734696E-4	TEST	7.606666117998085E-6	DOCUMENTATION
//if it is a formula index, use the element columns in the PK	WITHOUT_CLASSIFICATION	0.9999609728558313	WITHOUT_CLASSIFICATION	2.110896856807528E-5	DESIGN	9.013067709553513E-6	DEFECT	7.071727986834362E-6	IMPLEMENTATION	9.865291714286298E-7	TEST	8.468507327664464E-7	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns	WITHOUT_CLASSIFICATION	0.999981324712735	WITHOUT_CLASSIFICATION	6.743942536784585E-6	DEFECT	6.200571709885826E-6	DESIGN	4.219180903659661E-6	IMPLEMENTATION	1.0820858440962527E-6	TEST	4.295062705123282E-7	DOCUMENTATION
/*ArrayList list = new ArrayList();	WITHOUT_CLASSIFICATION	0.9960982147442253	WITHOUT_CLASSIFICATION	0.0035319122691286424	IMPLEMENTATION	2.3109934700319977E-4	DEFECT	9.045749936030528E-5	TEST	2.442767162575386E-5	DOCUMENTATION	2.388846865674057E-5	DESIGN
// }	WITHOUT_CLASSIFICATION	0.9999850394720505	WITHOUT_CLASSIFICATION	3.474820081216281E-6	DESIGN	3.3575214260748617E-6	IMPLEMENTATION	3.061176577530268E-6	DOCUMENTATION	2.63114373774286E-6	TEST	2.4358661269306724E-6	DEFECT
// no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.9998926242729039	WITHOUT_CLASSIFICATION	8.468239550759712E-5	IMPLEMENTATION	1.4973430979543998E-5	DEFECT	4.978596947310399E-6	DESIGN	2.509669418888083E-6	DOCUMENTATION	2.316342428457586E-7	TEST
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.99851074101684	WITHOUT_CLASSIFICATION	9.955582746051937E-4	IMPLEMENTATION	4.585496595589202E-4	DESIGN	2.7662716544369338E-5	DEFECT	4.884984873138393E-6	TEST	2.6033475783100117E-6	DOCUMENTATION
// the case of a foreign key to something other than the pk is handled in createPropertyRefConstraints	WITHOUT_CLASSIFICATION	0.9999999890968974	WITHOUT_CLASSIFICATION	8.58004921569287E-9	DESIGN	2.081502803486141E-9	TEST	1.9087914182585927E-10	DOCUMENTATION	2.7908010391723863E-11	DEFECT	2.2763391176988498E-11	IMPLEMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.99851074101684	WITHOUT_CLASSIFICATION	9.955582746051937E-4	IMPLEMENTATION	4.585496595589202E-4	DESIGN	2.7662716544369338E-5	DEFECT	4.884984873138393E-6	TEST	2.6033475783100117E-6	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it non-updateable	WITHOUT_CLASSIFICATION	0.9999532698405539	WITHOUT_CLASSIFICATION	4.389994301994991E-5	DEFECT	2.046498983810878E-6	IMPLEMENTATION	5.786227093383332E-7	TEST	1.109817786809197E-7	DOCUMENTATION	9.411295425349751E-8	DESIGN
//columnUpdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.9998569981185423	WITHOUT_CLASSIFICATION	6.0269668701439614E-5	IMPLEMENTATION	2.420644773524649E-5	DOCUMENTATION	2.0780718347768938E-5	TEST	1.922004947650996E-5	DEFECT	1.852499719674935E-5	DESIGN
// if the property mapping consists of all formulas,  // make it insertable	WITHOUT_CLASSIFICATION	0.9999268138427574	WITHOUT_CLASSIFICATION	6.372040024216277E-5	DEFECT	4.16403732533688E-6	IMPLEMENTATION	2.486328568003633E-6	TEST	2.4780394752543424E-6	DESIGN	3.373516318459009E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998751275774127	WITHOUT_CLASSIFICATION	1.0341670564475851E-4	DESIGN	8.502011259119231E-6	TEST	6.025914513728756E-6	DEFECT	3.4668215993644165E-6	DOCUMENTATION	3.460969570364717E-6	IMPLEMENTATION
// expected type is intrinsic here...	WITHOUT_CLASSIFICATION	0.9996792996618972	WITHOUT_CLASSIFICATION	2.906707577796486E-4	DESIGN	1.1597646092967073E-5	DEFECT	7.810741668404983E-6	DOCUMENTATION	6.694310244819691E-6	IMPLEMENTATION	3.9268823169694955E-6	TEST
//}	WITHOUT_CLASSIFICATION	0.9996128405607736	WITHOUT_CLASSIFICATION	1.46263679657921E-4	DESIGN	7.406704074233638E-5	DOCUMENTATION	6.813512631077243E-5	TEST	5.4986961240662925E-5	DEFECT	4.3706631274783015E-5	IMPLEMENTATION
//}	WITHOUT_CLASSIFICATION	0.9996128405607736	WITHOUT_CLASSIFICATION	1.46263679657921E-4	DESIGN	7.406704074233638E-5	DOCUMENTATION	6.813512631077243E-5	TEST	5.4986961240662925E-5	DEFECT	4.3706631274783015E-5	IMPLEMENTATION
//return memberPersister.getPropertyType(propertyName);	WITHOUT_CLASSIFICATION	0.9994922007492895	WITHOUT_CLASSIFICATION	4.8476175148787703E-4	DESIGN	1.2310530656744657E-5	DEFECT	6.343226438533222E-6	IMPLEMENTATION	3.4392220388164573E-6	TEST	9.445200887086108E-7	DOCUMENTATION
//return memberPersister.toColumns(alias, propertyName);	WITHOUT_CLASSIFICATION	0.9810200285954189	WITHOUT_CLASSIFICATION	0.018949679454629817	DESIGN	1.530429179597407E-5	DEFECT	7.65963714962095E-6	IMPLEMENTATION	4.232880794638237E-6	TEST	3.0951402111534075E-6	DOCUMENTATION
//return memberPersister.getType();	WITHOUT_CLASSIFICATION	0.9995759053413622	WITHOUT_CLASSIFICATION	3.9076236015353824E-4	DESIGN	2.3604850050887803E-5	IMPLEMENTATION	5.8019072676971205E-6	DEFECT	2.8775070443519427E-6	TEST	1.0480341213023113E-6	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999715320691185	WITHOUT_CLASSIFICATION	9.620616750426703E-6	DEFECT	6.298087577460993E-6	DESIGN	5.589184195796166E-6	IMPLEMENTATION	5.445605332937269E-6	DOCUMENTATION	1.5144370249272778E-6	TEST
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
//instanceof AssociationType;	WITHOUT_CLASSIFICATION	0.9999460417888534	WITHOUT_CLASSIFICATION	2.9713496778501333E-5	DOCUMENTATION	1.1909763470685595E-5	IMPLEMENTATION	7.1996446213074E-6	DESIGN	2.817858350748532E-6	DEFECT	2.3174479253992927E-6	TEST
// we need to determine the best way to know that two joinables // represent a single many-to-many...	WITHOUT_CLASSIFICATION	0.9186873312857315	WITHOUT_CLASSIFICATION	0.07429112740633832	IMPLEMENTATION	0.006315105080034341	DESIGN	5.346685775774734E-4	TEST	1.2418744783217745E-4	DOCUMENTATION	4.758020248610382E-5	DEFECT
//strip leading ','	WITHOUT_CLASSIFICATION	0.999994212424495	WITHOUT_CLASSIFICATION	2.4896250626407363E-6	IMPLEMENTATION	1.0979022145904024E-6	TEST	8.126862662466667E-7	DESIGN	7.743259189874762E-7	DOCUMENTATION	6.130360424548587E-7	DEFECT
//public boolean isSubselectLoadable();	WITHOUT_CLASSIFICATION	0.9999815461802107	WITHOUT_CLASSIFICATION	1.0257601159442642E-5	DEFECT	4.451515089634678E-6	DESIGN	1.6804695336957331E-6	IMPLEMENTATION	1.091438204155517E-6	DOCUMENTATION	9.727958022734776E-7	TEST
// KEY	WITHOUT_CLASSIFICATION	0.9999829184560262	WITHOUT_CLASSIFICATION	5.975711122780919E-6	DESIGN	3.130676252482099E-6	TEST	2.958699693670337E-6	IMPLEMENTATION	2.8752527466075375E-6	DOCUMENTATION	2.1412041583926463E-6	DEFECT
//columns	WITHOUT_CLASSIFICATION	0.9995324651920178	WITHOUT_CLASSIFICATION	3.783750225228613E-4	DESIGN	4.491657904092371E-5	DOCUMENTATION	1.8746285850820316E-5	TEST	1.3446290509049752E-5	IMPLEMENTATION	1.2050630058530546E-5	DEFECT
//SQL statements	WITHOUT_CLASSIFICATION	0.9999916581793064	WITHOUT_CLASSIFICATION	4.247545255250835E-6	IMPLEMENTATION	2.304473141493333E-6	DOCUMENTATION	1.0350171910042039E-6	TEST	4.952268231207095E-7	DESIGN	2.5955828277355474E-7	DEFECT
//extra information about the element type	WITHOUT_CLASSIFICATION	0.9999113356145789	WITHOUT_CLASSIFICATION	4.959941651199286E-5	DESIGN	1.8846902220337694E-5	DEFECT	8.265743446117046E-6	IMPLEMENTATION	8.228307106061718E-6	DOCUMENTATION	3.7240161365431962E-6	TEST
//types	WITHOUT_CLASSIFICATION	0.9997289340616474	WITHOUT_CLASSIFICATION	1.0181724284381922E-4	IMPLEMENTATION	7.806556469821171E-5	DESIGN	4.050658908920572E-5	DOCUMENTATION	3.3381332655832674E-5	TEST	1.7295209065476007E-5	DEFECT
// custom sql	WITHOUT_CLASSIFICATION	0.9999981543556428	WITHOUT_CLASSIFICATION	5.962454682286047E-7	IMPLEMENTATION	4.2634043635861484E-7	DOCUMENTATION	3.4085880792291255E-7	TEST	2.939421319186144E-7	DESIGN	1.8825751281999433E-7	DEFECT
//private final String unquotedIdentifierColumnName;	WITHOUT_CLASSIFICATION	0.9994588253140831	WITHOUT_CLASSIFICATION	3.964300839026661E-4	DESIGN	6.313531477696578E-5	DEFECT	5.0524667148261493E-5	IMPLEMENTATION	2.3905719476429252E-5	DOCUMENTATION	7.178900612463462E-6	TEST
// dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.9946162291190089	WITHOUT_CLASSIFICATION	0.005347524450089054	DESIGN	1.745825141172314E-5	DOCUMENTATION	1.5202113449958003E-5	IMPLEMENTATION	2.685731179305186E-6	DEFECT	9.003348609084995E-7	TEST
// dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.9999631907750165	WITHOUT_CLASSIFICATION	3.417882573340459E-5	DESIGN	1.7042747934857046E-6	IMPLEMENTATION	6.706227670869424E-7	TEST	1.788260443543149E-7	DOCUMENTATION	7.667564522750887E-8	DEFECT
// NativeSQL: collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.9998702027015981	WITHOUT_CLASSIFICATION	1.0312796842934402E-4	IMPLEMENTATION	1.3447368510937912E-5	DEFECT	8.643855879338686E-6	DESIGN	3.521614459194874E-6	DOCUMENTATION	1.0564911229751998E-6	TEST
//unquotedKeyColumnNames = StringHelper.unQuote(keyColumnAliases);	WITHOUT_CLASSIFICATION	0.9997959434055829	WITHOUT_CLASSIFICATION	1.4629442513727287E-4	DEFECT	4.029035015621987E-5	DESIGN	9.793174561445073E-6	TEST	4.209662083869013E-6	IMPLEMENTATION	3.4689824782855246E-6	DOCUMENTATION
//ELEMENT	WITHOUT_CLASSIFICATION	0.9997864708810883	WITHOUT_CLASSIFICATION	6.248704128428429E-5	DEFECT	6.16247589737121E-5	DESIGN	3.6772234427302724E-5	TEST	3.1859137301997226E-5	DOCUMENTATION	2.0785946924353302E-5	IMPLEMENTATION
// NativeSQL: collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.9998569072275094	WITHOUT_CLASSIFICATION	1.294763070949331E-4	IMPLEMENTATION	7.061816563490607E-6	DEFECT	4.00365067358714E-6	DESIGN	2.057545791355821E-6	DOCUMENTATION	4.93452367245826E-7	TEST
// INDEX AND ROW SELECT	WITHOUT_CLASSIFICATION	0.9999513602895733	WITHOUT_CLASSIFICATION	3.591647216306955E-5	IMPLEMENTATION	5.010873668387062E-6	DEFECT	3.863098587118424E-6	DOCUMENTATION	2.3389720717645866E-6	TEST	1.510293936331178E-6	DESIGN
// NativeSQL: collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.9981414426688179	WITHOUT_CLASSIFICATION	0.0010080643923653016	DEFECT	6.362484419320568E-4	IMPLEMENTATION	1.710690204381029E-4	DESIGN	2.5636524569455E-5	DOCUMENTATION	1.7538951877254583E-5	TEST
//unquotedIdentifierColumnName = identifierColumnAlias;	WITHOUT_CLASSIFICATION	0.999008562418967	WITHOUT_CLASSIFICATION	6.052346120862432E-4	DESIGN	2.2252127536721326E-4	IMPLEMENTATION	1.0772239889026515E-4	DEFECT	3.3703092586340456E-5	DOCUMENTATION	2.225620210304309E-5	TEST
//unquotedIdentifierColumnName = null;	WITHOUT_CLASSIFICATION	0.9996690905953178	WITHOUT_CLASSIFICATION	1.4026626802350354E-4	IMPLEMENTATION	1.1181104703616576E-4	DEFECT	5.602425589554468E-5	DESIGN	1.5990710561073757E-5	DOCUMENTATION	6.817123165791394E-6	TEST
//GENERATE THE SQL:	WITHOUT_CLASSIFICATION	0.9999213190788043	WITHOUT_CLASSIFICATION	2.2377965204812556E-5	DEFECT	2.1343609353806114E-5	DESIGN	1.382208633187029E-5	DOCUMENTATION	1.1431451873719586E-5	TEST	9.705808431474644E-6	IMPLEMENTATION
// for non-arrays, we don't need to know the element class //elementType.returnedClass();	WITHOUT_CLASSIFICATION	0.9999030569685589	WITHOUT_CLASSIFICATION	5.9476126870022915E-5	IMPLEMENTATION	3.680575679311751E-5	DESIGN	4.565185187370828E-7	DOCUMENTATION	1.2397981082017396E-7	DEFECT	8.064944853464057E-8	TEST
//not all classpersisters implement PropertyMapping!	WITHOUT_CLASSIFICATION	0.979134254814771	WITHOUT_CLASSIFICATION	0.01472607261248764	IMPLEMENTATION	0.005821600377278591	DESIGN	2.405907389581386E-4	DEFECT	4.243099044147142E-5	DOCUMENTATION	3.505046606311939E-5	TEST
// Handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.9928722602724355	WITHOUT_CLASSIFICATION	0.0070571727587590265	DESIGN	5.2499326071753975E-5	IMPLEMENTATION	1.1391167650739335E-5	TEST	6.3579377283255675E-6	DOCUMENTATION	3.185373546351469E-7	DEFECT
// Handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.8868230213827942	WITHOUT_CLASSIFICATION	0.1124215991332664	DESIGN	6.833304123236053E-4	IMPLEMENTATION	5.016461559293815E-5	TEST	1.672800445328947E-5	DOCUMENTATION	5.156451569594827E-6	DEFECT
//if there is a user-specified loader, return that //TODO: filters!?	WITHOUT_CLASSIFICATION	0.979867464025986	WITHOUT_CLASSIFICATION	0.02001586193310518	DESIGN	8.110698294614218E-5	DEFECT	2.825335930812973E-5	IMPLEMENTATION	4.887485043285711E-6	TEST	2.4262136111630484E-6	DOCUMENTATION
// Take care of any entities that might have // been evicted!	WITHOUT_CLASSIFICATION	0.9976847636461925	WITHOUT_CLASSIFICATION	0.0020912470296310113	DESIGN	2.1535161151970268E-4	DEFECT	4.6953230595666765E-6	TEST	2.9616407484062744E-6	DOCUMENTATION	9.807488488113355E-7	IMPLEMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.999994212424495	WITHOUT_CLASSIFICATION	2.4896250626407363E-6	IMPLEMENTATION	1.0979022145904024E-6	TEST	8.126862662466667E-7	DESIGN	7.743259189874762E-7	DOCUMENTATION	6.130360424548587E-7	DEFECT
// Run a subquery loader	WITHOUT_CLASSIFICATION	0.9999634040890484	WITHOUT_CLASSIFICATION	3.4742793165217696E-5	IMPLEMENTATION	7.938246251502668E-7	DEFECT	5.638512831998162E-7	DESIGN	3.15851601558298E-7	DOCUMENTATION	1.7959027640262457E-7	TEST
//needed by arrays	WITHOUT_CLASSIFICATION	0.9943694596183197	WITHOUT_CLASSIFICATION	0.0038686546873661675	IMPLEMENTATION	0.0014053119285907184	DESIGN	1.7852318890330715E-4	DOCUMENTATION	1.077556251389793E-4	TEST	7.029495168118105E-5	DEFECT
//TODO: something with formulas...	WITHOUT_CLASSIFICATION	0.9993602953310755	WITHOUT_CLASSIFICATION	3.1153180157912803E-4	IMPLEMENTATION	1.4608580783154887E-4	TEST	7.954759055477849E-5	DESIGN	5.484605081974834E-5	DEFECT	4.7693418139072994E-5	DOCUMENTATION
//an assertion	WITHOUT_CLASSIFICATION	0.9999968093032346	WITHOUT_CLASSIFICATION	9.966652938989731E-7	TEST	7.356939951992513E-7	DOCUMENTATION	5.240033748771149E-7	DEFECT	4.902039146616655E-7	DESIGN	4.4413018671604373E-7	IMPLEMENTATION
// Remove all the old entries	WITHOUT_CLASSIFICATION	0.9999163094321447	WITHOUT_CLASSIFICATION	8.076692911808551E-5	IMPLEMENTATION	1.168210154980522E-6	DESIGN	6.808431717375268E-7	DOCUMENTATION	5.53338870534115E-7	DEFECT	5.21246539877302E-7	TEST
//create all the new entries	WITHOUT_CLASSIFICATION	0.9999816635515453	WITHOUT_CLASSIFICATION	1.5310992189813112E-5	IMPLEMENTATION	1.4819477040624886E-6	DOCUMENTATION	1.1602584764350296E-6	TEST	3.032673115303194E-7	DESIGN	7.998277287272106E-8	DEFECT
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999715320691185	WITHOUT_CLASSIFICATION	9.620616750426703E-6	DEFECT	6.298087577460993E-6	DESIGN	5.589184195796166E-6	IMPLEMENTATION	5.445605332937269E-6	DOCUMENTATION	1.5144370249272778E-6	TEST
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999715320691185	WITHOUT_CLASSIFICATION	9.620616750426703E-6	DEFECT	6.298087577460993E-6	DESIGN	5.589184195796166E-6	IMPLEMENTATION	5.445605332937269E-6	DOCUMENTATION	1.5144370249272778E-6	TEST
//delete all the deleted entries	WITHOUT_CLASSIFICATION	0.9997692647640591	WITHOUT_CLASSIFICATION	1.7996455861202322E-4	IMPLEMENTATION	3.230031248448743E-5	DESIGN	9.343272179605853E-6	DEFECT	6.089882274607646E-6	DOCUMENTATION	3.03721039031418E-6	TEST
//insert all the new entries	WITHOUT_CLASSIFICATION	0.999935685612822	WITHOUT_CLASSIFICATION	6.110377040720641E-5	IMPLEMENTATION	1.2865278850769194E-6	TEST	1.2149828928664832E-6	DOCUMENTATION	4.183521867478126E-7	DESIGN	2.9075380607961567E-7	DEFECT
//==elementType ??	WITHOUT_CLASSIFICATION	0.9999363617374347	WITHOUT_CLASSIFICATION	4.056134016556878E-5	DESIGN	1.264326564090956E-5	IMPLEMENTATION	7.298396174644807E-6	DOCUMENTATION	1.629308031862119E-6	TEST	1.5059525521296576E-6	DEFECT
//update all the modified entries	WITHOUT_CLASSIFICATION	0.9999304337637012	WITHOUT_CLASSIFICATION	6.330145891749717E-5	IMPLEMENTATION	2.6622184062476857E-6	DESIGN	2.300815762559484E-6	DEFECT	1.059646551029096E-6	DOCUMENTATION	2.420966615204761E-7	TEST
//identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.8866029045136705	WITHOUT_CLASSIFICATION	0.10513903538571653	IMPLEMENTATION	0.005980630793436918	DEFECT	0.0018568168543385902	DESIGN	3.715837553402808E-4	TEST	4.9028697497172974E-5	DOCUMENTATION
// update removed rows fks to null	WITHOUT_CLASSIFICATION	0.9999642543732178	WITHOUT_CLASSIFICATION	2.628325580731378E-5	DEFECT	5.313088087808158E-6	DESIGN	3.7606069988559317E-6	IMPLEMENTATION	2.015257662124851E-7	TEST	1.8715012207442656E-7	DOCUMENTATION
// will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.9993016763583379	WITHOUT_CLASSIFICATION	4.3375041964478734E-4	DEFECT	2.2782195322561076E-4	IMPLEMENTATION	2.6231977932296096E-5	DOCUMENTATION	6.22809946103403E-6	TEST	4.2911913983079075E-6	DESIGN
// now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.9999950289223233	WITHOUT_CLASSIFICATION	3.7275842269502294E-6	IMPLEMENTATION	1.1783291312300075E-6	DEFECT	2.428111757364043E-8	TEST	2.2270554099071903E-8	DESIGN	1.8612646846345566E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
//use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.9988929067738878	WITHOUT_CLASSIFICATION	5.541078581844919E-4	DESIGN	4.812591437289941E-4	IMPLEMENTATION	4.2466086032716016E-5	DOCUMENTATION	1.5206598281578445E-5	DEFECT	1.4053539884544418E-5	TEST
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999982474558385	WITHOUT_CLASSIFICATION	1.2736925572333889E-6	DESIGN	3.8950579509477647E-7	IMPLEMENTATION	7.185178259166472E-8	TEST	1.6070105237122173E-8	DOCUMENTATION	1.423921470433567E-9	DEFECT
//private final String rootTableName;	WITHOUT_CLASSIFICATION	0.9999402000246251	WITHOUT_CLASSIFICATION	4.914271082268864E-5	DESIGN	6.0153985978195644E-6	DEFECT	1.9249689810536763E-6	TEST	1.776724425654774E-6	DOCUMENTATION	9.401725476893357E-7	IMPLEMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9994390441238337	WITHOUT_CLASSIFICATION	2.3159963676651962E-4	IMPLEMENTATION	1.3773606637286864E-4	DEFECT	7.266129826938913E-5	DOCUMENTATION	5.997963823095167E-5	DESIGN	5.897923652666632E-5	TEST
//Custom SQL	WITHOUT_CLASSIFICATION	0.9999803653169953	WITHOUT_CLASSIFICATION	5.382941094387475E-6	DOCUMENTATION	4.720375471707382E-6	DESIGN	4.375126952033033E-6	DEFECT	2.9332685220562217E-6	TEST	2.2229709644276596E-6	IMPLEMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999982474558385	WITHOUT_CLASSIFICATION	1.2736925572333889E-6	DESIGN	3.8950579509477647E-7	IMPLEMENTATION	7.185178259166472E-8	TEST	1.6070105237122173E-8	DOCUMENTATION	1.423921470433567E-9	DEFECT
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999848785285427	WITHOUT_CLASSIFICATION	5.601756914569839E-6	DOCUMENTATION	3.685481811539885E-6	TEST	3.4897744261138376E-6	IMPLEMENTATION	1.4707243633382164E-6	DESIGN	8.737339417774969E-7	DEFECT
// This could also just be true all the time...	WITHOUT_CLASSIFICATION	0.9999069687065301	WITHOUT_CLASSIFICATION	8.366276290818663E-5	IMPLEMENTATION	8.706138688409325E-6	DESIGN	4.046447110527113E-7	TEST	2.0670041825055645E-7	DOCUMENTATION	5.104674403106981E-8	DEFECT
//chop the last union (all)	WITHOUT_CLASSIFICATION	0.999987808152469	WITHOUT_CLASSIFICATION	9.539322870196602E-6	IMPLEMENTATION	1.0106517773454912E-6	DEFECT	8.040684239414343E-7	TEST	7.698422423332599E-7	DOCUMENTATION	6.796221728050252E-8	DESIGN
//TODO: check this....	WITHOUT_CLASSIFICATION	0.9488972616628211	WITHOUT_CLASSIFICATION	0.045958992213563955	IMPLEMENTATION	0.0022816766366709315	DOCUMENTATION	0.001789782349706965	DESIGN	9.947152787854652E-4	TEST	7.75718584515615E-5	DEFECT
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9994390441238337	WITHOUT_CLASSIFICATION	2.3159963676651962E-4	IMPLEMENTATION	1.3773606637286864E-4	DEFECT	7.266129826938913E-5	DOCUMENTATION	5.997963823095167E-5	DESIGN	5.897923652666632E-5	TEST
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999908789269873	WITHOUT_CLASSIFICATION	7.617708009960413E-6	DESIGN	8.84123362756947E-7	TEST	4.453128068067027E-7	DEFECT	1.720749060784206E-7	DOCUMENTATION	1.8539269622853403E-9	IMPLEMENTATION
// the closure of all properties in the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999978871711688	WITHOUT_CLASSIFICATION	1.6359404043740261E-6	DESIGN	4.369883477462646E-7	DEFECT	1.933779341877218E-8	DOCUMENTATION	1.1649841286225114E-8	IMPLEMENTATION	8.91244436370333E-9	TEST
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999886461271636	WITHOUT_CLASSIFICATION	1.0273236625101655E-5	DESIGN	8.617382206248543E-7	DEFECT	9.298390815640759E-8	IMPLEMENTATION	6.339489871084352E-8	DOCUMENTATION	6.251918364144819E-8	TEST
// subclass discrimination works by assigning particular // values to certain combinations of null primary key // values in the outer join using an SQL CASE	WITHOUT_CLASSIFICATION	0.9999989676555607	WITHOUT_CLASSIFICATION	9.251634838408538E-7	DEFECT	1.0211102058525137E-7	DESIGN	2.9009473768765767E-9	DOCUMENTATION	2.150852260674829E-9	TEST	1.8135241836995522E-11	IMPLEMENTATION
//MULTITABLES	WITHOUT_CLASSIFICATION	0.999235566422696	WITHOUT_CLASSIFICATION	2.824626589004623E-4	DESIGN	1.8998163615671927E-4	DEFECT	1.365365829478782E-4	IMPLEMENTATION	9.433359436577034E-5	DOCUMENTATION	6.111910493318334E-5	TEST
// Custom sql	WITHOUT_CLASSIFICATION	0.9999967933044258	WITHOUT_CLASSIFICATION	1.3609143759923003E-6	IMPLEMENTATION	5.507571472731518E-7	DESIGN	5.219422486608804E-7	TEST	5.109747481188026E-7	DOCUMENTATION	2.6210705418086537E-7	DEFECT
// subclass closure properties	WITHOUT_CLASSIFICATION	0.999999897939918	WITHOUT_CLASSIFICATION	8.895579191780442E-8	DESIGN	4.384980184055198E-9	DEFECT	3.543248336437403E-9	DOCUMENTATION	2.6950138888713848E-9	IMPLEMENTATION	2.481047722252928E-9	TEST
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999769516251421	WITHOUT_CLASSIFICATION	5.890800007724484E-6	IMPLEMENTATION	5.1926916995849185E-6	DEFECT	4.624717158742156E-6	DESIGN	4.068182445777925E-6	DOCUMENTATION	3.2719835460100594E-6	TEST
//( (Column) model.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9979124544101501	WITHOUT_CLASSIFICATION	0.001920195349356353	DESIGN	7.488851945826528E-5	DEFECT	6.79743057649771E-5	IMPLEMENTATION	1.7631660839575283E-5	TEST	6.855754430701269E-6	DOCUMENTATION
//( (Column) sc.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9998744359691178	WITHOUT_CLASSIFICATION	9.551524388901257E-5	DESIGN	1.847416091594223E-5	IMPLEMENTATION	5.957205542215435E-6	DEFECT	3.9824151232693346E-6	TEST	1.6350054117028322E-6	DOCUMENTATION
// don't need subclass tables, because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.9999607279695851	WITHOUT_CLASSIFICATION	3.1359186304387684E-5	DESIGN	4.190388007816392E-6	IMPLEMENTATION	2.588047025978218E-6	DEFECT	7.289150048781251E-7	DOCUMENTATION	4.0549407176751425E-7	TEST
// special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.9985235500766813	WITHOUT_CLASSIFICATION	0.0012492235303279693	IMPLEMENTATION	1.9666990197897964E-4	DESIGN	3.0358939069796523E-5	DOCUMENTATION	1.376951832167815E-7	TEST	5.985675879925588E-8	DEFECT
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999982474558385	WITHOUT_CLASSIFICATION	1.2736925572333889E-6	DESIGN	3.8950579509477647E-7	IMPLEMENTATION	7.185178259166472E-8	TEST	1.6070105237122173E-8	DOCUMENTATION	1.423921470433567E-9	DEFECT
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999908789269873	WITHOUT_CLASSIFICATION	7.617708009960413E-6	DESIGN	8.84123362756947E-7	TEST	4.453128068067027E-7	DEFECT	1.720749060784206E-7	DOCUMENTATION	1.8539269622853403E-9	IMPLEMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999886461271636	WITHOUT_CLASSIFICATION	1.0273236625101655E-5	DESIGN	8.617382206248543E-7	DEFECT	9.298390815640759E-8	IMPLEMENTATION	6.339489871084352E-8	DOCUMENTATION	6.251918364144819E-8	TEST
//get em on the second pass!	WITHOUT_CLASSIFICATION	0.9999936415885187	WITHOUT_CLASSIFICATION	3.171194372083019E-6	IMPLEMENTATION	1.5215368427899798E-6	DEFECT	8.097949904190607E-7	DOCUMENTATION	4.856289978299855E-7	DESIGN	3.702562781240734E-7	TEST
// now look up the object we are really interested in! // (this lets us correctly handle proxies and multi-row // or multi-column queries)	WITHOUT_CLASSIFICATION	0.9889819650949155	WITHOUT_CLASSIFICATION	0.004587774694548737	DESIGN	0.00454921863964847	DEFECT	0.0013553467778548835	IMPLEMENTATION	4.418181996186044E-4	TEST	8.387659341373595E-5	DOCUMENTATION
// discriminator column	WITHOUT_CLASSIFICATION	0.9999992660508843	WITHOUT_CLASSIFICATION	2.992444905912433E-7	IMPLEMENTATION	1.309399597036042E-7	DOCUMENTATION	1.1324782564135795E-7	DESIGN	9.651530712274244E-8	DEFECT	9.40015327141407E-8	TEST
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9994390441238337	WITHOUT_CLASSIFICATION	2.3159963676651962E-4	IMPLEMENTATION	1.3773606637286864E-4	DEFECT	7.266129826938913E-5	DOCUMENTATION	5.997963823095167E-5	DESIGN	5.897923652666632E-5	TEST
//private final Map propertyTableNumbersByName = new HashMap();	WITHOUT_CLASSIFICATION	0.9999107246332446	WITHOUT_CLASSIFICATION	6.667846945492959E-5	DESIGN	9.684237225427159E-6	DEFECT	6.471802608005901E-6	IMPLEMENTATION	4.076995834424553E-6	DOCUMENTATION	2.363861632760575E-6	TEST
// CLASS + TABLE	WITHOUT_CLASSIFICATION	0.999979595778229	WITHOUT_CLASSIFICATION	5.5362379865580075E-6	DESIGN	4.558335560152838E-6	IMPLEMENTATION	3.513315966703009E-6	DOCUMENTATION	3.4845042915736737E-6	DEFECT	3.3118279660452784E-6	TEST
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9998761150019172	WITHOUT_CLASSIFICATION	8.047201665692829E-5	IMPLEMENTATION	1.3657018195523062E-5	DOCUMENTATION	1.3404217729425498E-5	DEFECT	9.341316438098122E-6	DESIGN	7.010429062880634E-6	TEST
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999681065641712	WITHOUT_CLASSIFICATION	1.470117078038907E-5	IMPLEMENTATION	5.234694076403671E-6	DOCUMENTATION	4.9405202868547355E-6	DESIGN	3.891875464980898E-6	TEST	3.1251752201773887E-6	DEFECT
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999769516251421	WITHOUT_CLASSIFICATION	5.890800007724484E-6	IMPLEMENTATION	5.1926916995849185E-6	DEFECT	4.624717158742156E-6	DESIGN	4.068182445777925E-6	DOCUMENTATION	3.2719835460100594E-6	TEST
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999848785285427	WITHOUT_CLASSIFICATION	5.601756914569839E-6	DOCUMENTATION	3.685481811539885E-6	TEST	3.4897744261138376E-6	IMPLEMENTATION	1.4707243633382164E-6	DESIGN	8.737339417774969E-7	DEFECT
// JOINS	WITHOUT_CLASSIFICATION	0.9999762667638115	WITHOUT_CLASSIFICATION	8.254122746424527E-6	IMPLEMENTATION	4.824688850765685E-6	DOCUMENTATION	3.839177042814009E-6	DEFECT	3.711322271892833E-6	DESIGN	3.1039252767160726E-6	TEST
//propertyTableNumbersByName.put( prop.getName(), join );	WITHOUT_CLASSIFICATION	0.999989884381763	WITHOUT_CLASSIFICATION	4.845521040422179E-6	DEFECT	2.8687634000022164E-6	IMPLEMENTATION	9.080008842835982E-7	DOCUMENTATION	8.53305225839388E-7	DESIGN	6.400276864392322E-7	TEST
//Access cached SQL	WITHOUT_CLASSIFICATION	0.9999427415037815	WITHOUT_CLASSIFICATION	2.890844697108301E-5	DESIGN	1.166613826662557E-5	IMPLEMENTATION	6.165642689371044E-6	DEFECT	5.607487685498853E-6	TEST	4.910780605960248E-6	DOCUMENTATION
//figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.9995965950876362	WITHOUT_CLASSIFICATION	2.152006095445806E-4	DESIGN	7.643977732509754E-5	IMPLEMENTATION	7.299163676789866E-5	DEFECT	2.0183952251018428E-5	DOCUMENTATION	1.8588936475175962E-5	TEST
//figure out which columns are needed	WITHOUT_CLASSIFICATION	0.5876624745263836	WITHOUT_CLASSIFICATION	0.40287151195062537	DESIGN	0.0061226707390129136	IMPLEMENTATION	0.0016632457348151712	DOCUMENTATION	0.001545443353197853	TEST	1.346536959649762E-4	DEFECT
//figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.9101948930101529	WITHOUT_CLASSIFICATION	0.08851508903208964	DESIGN	5.001674058244469E-4	DOCUMENTATION	4.228356551513428E-4	IMPLEMENTATION	3.184484205505208E-4	TEST	4.856647623126877E-5	DEFECT
//render the SQL	WITHOUT_CLASSIFICATION	0.9998421361995043	WITHOUT_CLASSIFICATION	9.590169290195577E-5	IMPLEMENTATION	3.750051746143638E-5	DESIGN	1.523049821932892E-5	DOCUMENTATION	5.5726321790887815E-6	TEST	3.6584597339060188E-6	DEFECT
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998751275774127	WITHOUT_CLASSIFICATION	1.0341670564475851E-4	DESIGN	8.502011259119231E-6	TEST	6.025914513728756E-6	DEFECT	3.4668215993644165E-6	DOCUMENTATION	3.460969570364717E-6	IMPLEMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995778559258047	WITHOUT_CLASSIFICATION	4.028769477233292E-4	DESIGN	1.2916610208334142E-5	IMPLEMENTATION	3.6228935711530095E-6	TEST	1.4031934871718678E-6	DOCUMENTATION	1.3244292052251375E-6	DEFECT
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999318819182712	WITHOUT_CLASSIFICATION	2.3228290828243807E-5	IMPLEMENTATION	1.3542294776552955E-5	DEFECT	1.1215036822537524E-5	DOCUMENTATION	1.0497216809004004E-5	DESIGN	9.635242492361308E-6	TEST
// The optional SQL string defined in the where attribute	WITHOUT_CLASSIFICATION	0.9999967036454261	WITHOUT_CLASSIFICATION	2.1897491064998414E-6	DESIGN	8.206540849943011E-7	IMPLEMENTATION	1.093877883203712E-7	TEST	1.0421003043485919E-7	DOCUMENTATION	7.23535635983747E-8	DEFECT
//information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.9998850932875646	WITHOUT_CLASSIFICATION	6.55270882343543E-5	DESIGN	2.9257450944251973E-5	DEFECT	1.5866257906747703E-5	TEST	4.21814824432427E-6	DOCUMENTATION	3.776710583116857E-8	IMPLEMENTATION
//information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.9999367382989321	WITHOUT_CLASSIFICATION	5.596273179347836E-5	DESIGN	5.225051221901394E-6	DEFECT	1.0977666413871035E-6	TEST	8.852811433596401E-7	DOCUMENTATION	9.087026765152363E-8	IMPLEMENTATION
//information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.9995151738168667	WITHOUT_CLASSIFICATION	4.766404017409085E-4	DESIGN	3.5795022441703187E-6	DEFECT	2.5147784578753134E-6	TEST	1.6994134856515046E-6	DOCUMENTATION	3.9208720481672694E-7	IMPLEMENTATION
// dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9999960699085311	WITHOUT_CLASSIFICATION	3.46151095018016E-6	DESIGN	1.7681748594025676E-7	DOCUMENTATION	1.4039730792694075E-7	IMPLEMENTATION	1.084220607668182E-7	DEFECT	4.294366403916395E-8	TEST
// SQL strings	WITHOUT_CLASSIFICATION	0.999998685344184	WITHOUT_CLASSIFICATION	3.7616042999039986E-7	DOCUMENTATION	2.900291498676048E-7	TEST	2.542127339102795E-7	IMPLEMENTATION	2.4545547642291664E-7	DEFECT	1.4879802566584772E-7	DESIGN
// for objects that came in via update()	WITHOUT_CLASSIFICATION	0.9999733918950554	WITHOUT_CLASSIFICATION	1.5465603454390155E-5	DESIGN	8.666025430840764E-6	DEFECT	1.090783102192549E-6	IMPLEMENTATION	8.657714349306963E-7	TEST	5.199215222346103E-7	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999681065641712	WITHOUT_CLASSIFICATION	1.470117078038907E-5	IMPLEMENTATION	5.234694076403671E-6	DOCUMENTATION	4.9405202868547355E-6	DESIGN	3.891875464980898E-6	TEST	3.1251752201773887E-6	DEFECT
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999318819182712	WITHOUT_CLASSIFICATION	2.3228290828243807E-5	IMPLEMENTATION	1.3542294776552955E-5	DEFECT	1.1215036822537524E-5	DOCUMENTATION	1.0497216809004004E-5	DESIGN	9.635242492361308E-6	TEST
// IDENTIFIER	WITHOUT_CLASSIFICATION	0.9999228797708118	WITHOUT_CLASSIFICATION	6.074219773112384E-5	IMPLEMENTATION	4.442488144455595E-6	TEST	4.213287464684046E-6	DOCUMENTATION	3.97225075990077E-6	DESIGN	3.7500050878964455E-6	DEFECT
// VERSION	WITHOUT_CLASSIFICATION	0.99997868678677	WITHOUT_CLASSIFICATION	6.698557857592454E-6	IMPLEMENTATION	4.470063592202355E-6	DESIGN	3.6564999994010317E-6	DEFECT	3.4173713114290454E-6	DOCUMENTATION	3.070720469428537E-6	TEST
//WHERE STRING	WITHOUT_CLASSIFICATION	0.9998453036616769	WITHOUT_CLASSIFICATION	3.826626168290614E-5	DESIGN	3.755696682365583E-5	DEFECT	3.6272173635043654E-5	IMPLEMENTATION	2.5896162382891348E-5	DOCUMENTATION	1.6704773798608622E-5	TEST
// SUBCLASS PROPERTY CLOSURE	WITHOUT_CLASSIFICATION	0.999990336522933	WITHOUT_CLASSIFICATION	2.360403720638226E-6	IMPLEMENTATION	2.323658145740806E-6	DEFECT	2.2514334733055696E-6	DOCUMENTATION	1.6413120794551368E-6	TEST	1.0866696478801327E-6	DESIGN
//before add :-)	WITHOUT_CLASSIFICATION	0.9999627381819617	WITHOUT_CLASSIFICATION	3.0019266656180272E-5	IMPLEMENTATION	3.714867796603245E-6	DEFECT	1.850280906038339E-6	DOCUMENTATION	8.626726467875156E-7	TEST	8.147300325838705E-7	DESIGN
// Handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.9998401195615155	WITHOUT_CLASSIFICATION	1.5408599678298893E-4	DESIGN	5.407950202281941E-6	IMPLEMENTATION	2.571744709585607E-7	DOCUMENTATION	7.043822876960418E-8	TEST	5.887879950481944E-8	DEFECT
// only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.9999733783744933	WITHOUT_CLASSIFICATION	1.490677955547372E-5	IMPLEMENTATION	1.0100781032939542E-5	DEFECT	8.055025675994801E-7	DOCUMENTATION	5.724776680050427E-7	TEST	2.3608468271069574E-7	DESIGN
//note early exit here:	WITHOUT_CLASSIFICATION	0.9996748090788349	WITHOUT_CLASSIFICATION	2.0398625115693108E-4	IMPLEMENTATION	1.0752520716215304E-4	DEFECT	6.375466515600551E-6	DOCUMENTATION	5.760868099298592E-6	TEST	1.5431282309845979E-6	DESIGN
// object have been loaded with setReadOnly(true); HHH-2236	WITHOUT_CLASSIFICATION	0.9997045325642302	WITHOUT_CLASSIFICATION	1.9715801848145049E-4	IMPLEMENTATION	9.230881535038374E-5	DEFECT	2.435965279372517E-6	DOCUMENTATION	2.402149399748592E-6	TEST	1.1624872587610113E-6	DESIGN
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.9999357367477609	WITHOUT_CLASSIFICATION	5.484657388231175E-5	DEFECT	6.259933817627129E-6	TEST	1.8642911688915653E-6	IMPLEMENTATION	7.672111105982909E-7	DESIGN	5.25242259691484E-7	DOCUMENTATION
//strip leading ", "	WITHOUT_CLASSIFICATION	0.9999947591758752	WITHOUT_CLASSIFICATION	1.9196999970469204E-6	IMPLEMENTATION	1.1975742905992996E-6	DESIGN	1.081454540571327E-6	TEST	6.871502275757125E-7	DOCUMENTATION	3.5494506894780365E-7	DEFECT
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9999985878009334	WITHOUT_CLASSIFICATION	7.344386112619988E-7	DEFECT	3.905103024554525E-7	DESIGN	1.9764600717258875E-7	TEST	4.495830428980108E-8	DOCUMENTATION	4.464584131446768E-8	IMPLEMENTATION
//otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.9986157435579798	WITHOUT_CLASSIFICATION	9.095195143825704E-4	IMPLEMENTATION	4.2909255173278403E-4	DESIGN	4.1355417109067025E-5	TEST	2.835301468917692E-6	DOCUMENTATION	1.4536573268335348E-6	DEFECT
//null owner ok??	WITHOUT_CLASSIFICATION	0.9999004542877141	WITHOUT_CLASSIFICATION	7.85094336574603E-5	IMPLEMENTATION	1.0635791417820781E-5	DESIGN	5.175421999302054E-6	DOCUMENTATION	2.8211457791237114E-6	DEFECT	2.403919432128956E-6	TEST
// null sql means that the only lazy properties // are shared PK one-to-one associations which are // handled differently in the Type#nullSafeGet code...	WITHOUT_CLASSIFICATION	0.9956224699813153	WITHOUT_CLASSIFICATION	0.0043706163278543295	DESIGN	3.969705527542532E-6	DOCUMENTATION	2.281461446044761E-6	IMPLEMENTATION	6.528845395232237E-7	TEST	9.63931727745416E-9	DEFECT
// Create a new FROM node for the referenced class.	WITHOUT_CLASSIFICATION	0.9999948647306498	WITHOUT_CLASSIFICATION	4.7478160385637034E-6	DESIGN	2.9748452809516087E-7	IMPLEMENTATION	6.392125189611383E-8	TEST	2.1367908359521394E-8	DOCUMENTATION	4.679623295514474E-9	DEFECT
// the difficulty here is exactly what do we update in order to // force the version to be incremented in the db...	WITHOUT_CLASSIFICATION	0.9532379657088187	WITHOUT_CLASSIFICATION	0.043386896926298935	DESIGN	0.0021169885772250084	IMPLEMENTATION	0.0011517692500959817	DEFECT	9.212814241539713E-5	DOCUMENTATION	1.4251395145970186E-5	TEST
// performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.9999836895520455	WITHOUT_CLASSIFICATION	8.831275391857375E-6	DOCUMENTATION	6.348400746321951E-6	IMPLEMENTATION	6.43237843048317E-7	DEFECT	3.371397068106633E-7	DESIGN	1.503942663984001E-7	TEST
// properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.9999945802395096	WITHOUT_CLASSIFICATION	2.6553447017986615E-6	DESIGN	2.5761366145503743E-6	IMPLEMENTATION	1.3261120188525572E-7	DOCUMENTATION	4.38421937082483E-8	TEST	1.1825778455121369E-8	DEFECT
//Enable for HHH-440, which we don't like:	WITHOUT_CLASSIFICATION	0.9998692749857797	WITHOUT_CLASSIFICATION	6.22206899027245E-5	DESIGN	4.260086398128946E-5	DEFECT	1.1183902285055808E-5	IMPLEMENTATION	9.987213022670675E-6	DOCUMENTATION	4.732345028645778E-6	TEST
// ALIASES	WITHOUT_CLASSIFICATION	0.9999676404644426	WITHOUT_CLASSIFICATION	1.0378357771015917E-5	DEFECT	7.552455641578283E-6	IMPLEMENTATION	6.731983431063453E-6	DESIGN	4.4076177924839244E-6	DOCUMENTATION	3.2891209212590192E-6	TEST
// aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.9998891155388764	WITHOUT_CLASSIFICATION	8.288995112689385E-5	DESIGN	2.069179092699634E-5	IMPLEMENTATION	4.483430443600117E-6	DEFECT	1.4278958971321036E-6	TEST	1.3913927291254093E-6	DOCUMENTATION
// aliases for composite-id's	WITHOUT_CLASSIFICATION	0.9999949881936862	WITHOUT_CLASSIFICATION	2.8040000207179708E-6	DESIGN	1.7248302622027815E-6	IMPLEMENTATION	2.250249549627603E-7	TEST	1.8528859577861563E-7	DEFECT	7.26624802895317E-8	DOCUMENTATION
// Fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.9999832788071531	WITHOUT_CLASSIFICATION	1.2372463197610304E-5	DESIGN	2.852063101307722E-6	IMPLEMENTATION	1.028068118388639E-6	DEFECT	2.71897665238708E-7	DOCUMENTATION	1.9670076439393927E-7	TEST
// embedded composite ids ( alias.idname1, alias.idname2 )	WITHOUT_CLASSIFICATION	0.9999962445946942	WITHOUT_CLASSIFICATION	1.5365449996718713E-6	DESIGN	9.129098475562948E-7	DEFECT	9.083006418959914E-7	IMPLEMENTATION	2.5337514608502795E-7	TEST	1.4427467053987896E-7	DOCUMENTATION
// TODO: skip formulas?	WITHOUT_CLASSIFICATION	0.5256994771971409	WITHOUT_CLASSIFICATION	0.4408878264879885	IMPLEMENTATION	0.02867049779889428	DESIGN	0.0032123576181211596	DOCUMENTATION	0.0010096578643136215	DEFECT	5.201830335412633E-4	TEST
//don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9996693427441916	WITHOUT_CLASSIFICATION	2.1676513903654744E-4	IMPLEMENTATION	1.0575049829778386E-4	DESIGN	4.5706147434476515E-6	TEST	2.203022711062266E-6	DOCUMENTATION	1.3679810195445869E-6	DEFECT
//do two passes, for collection property-ref!	WITHOUT_CLASSIFICATION	0.9998522799784081	WITHOUT_CLASSIFICATION	7.488202119908614E-5	IMPLEMENTATION	2.871838342451832E-5	DESIGN	2.4441987686657652E-5	TEST	1.6563550140492227E-5	DEFECT	3.1140791410979598E-6	DOCUMENTATION
// select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.9999936682663043	WITHOUT_CLASSIFICATION	5.0077423422181525E-6	IMPLEMENTATION	7.853586659818813E-7	DEFECT	4.7433053427191014E-7	TEST	3.390061247616005E-8	DOCUMENTATION	3.040154091036877E-8	DESIGN
//TODO: eventually, rowIdName[j]	WITHOUT_CLASSIFICATION	0.6304225974898271	WITHOUT_CLASSIFICATION	0.31006997391214447	IMPLEMENTATION	0.04598488120111573	DEFECT	0.010954084276432819	DESIGN	0.002185968395214215	DOCUMENTATION	3.8249472526562885E-4	TEST
// this is a property of the table, which we are updating	WITHOUT_CLASSIFICATION	0.9999993119151164	WITHOUT_CLASSIFICATION	4.5388495598432715E-7	DEFECT	1.0765975342307069E-7	DOCUMENTATION	7.106509820630577E-8	DESIGN	4.260594276467552E-8	TEST	1.2869133252518963E-8	IMPLEMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9998362492448244	WITHOUT_CLASSIFICATION	5.2275302157367395E-5	DESIGN	3.7119938499000066E-5	DEFECT	2.9118984535565343E-5	IMPLEMENTATION	2.4826493133585117E-5	TEST	2.0410036850101346E-5	DOCUMENTATION
// we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.9999893720591543	WITHOUT_CLASSIFICATION	4.854362312769352E-6	DEFECT	3.6849271422607977E-6	DESIGN	1.017190843065172E-6	IMPLEMENTATION	8.313690137098442E-7	DOCUMENTATION	2.4009153371356806E-7	TEST
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999553377006701	WITHOUT_CLASSIFICATION	2.390538888321939E-5	DESIGN	1.6773601453347772E-5	DEFECT	2.9103468533348215E-6	TEST	8.031308543138242E-7	IMPLEMENTATION	2.69831285602481E-7	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999507606580916	WITHOUT_CLASSIFICATION	3.700477758724738E-5	DESIGN	1.1212744656484194E-5	DEFECT	6.224186957334082E-7	IMPLEMENTATION	2.5802224490266604E-7	TEST	1.4137872413539289E-7	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9999946321148137	WITHOUT_CLASSIFICATION	4.964715320787506E-6	IMPLEMENTATION	2.188874046662951E-7	DOCUMENTATION	1.5532599122082429E-7	DEFECT	2.282935631855211E-8	TEST	6.127113339034824E-9	DESIGN
// add the discriminator	WITHOUT_CLASSIFICATION	0.9999997214162135	WITHOUT_CLASSIFICATION	2.1139533216319343E-7	IMPLEMENTATION	4.965449025009506E-8	DOCUMENTATION	1.0086140069729132E-8	TEST	5.346555129144039E-9	DEFECT	2.1012689490064566E-9	DESIGN
// more specifically : "? [op] datetime" //      1) if the operator is MINUS, the param needs to be of //          some datetime type //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9845546465838743	WITHOUT_CLASSIFICATION	0.014863917168360857	DESIGN	4.7342979050894507E-4	DEFECT	1.0364862144294164E-4	DOCUMENTATION	2.6760116940873775E-6	TEST	1.6818241188086731E-6	IMPLEMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9999946321148137	WITHOUT_CLASSIFICATION	4.964715320787506E-6	IMPLEMENTATION	2.188874046662951E-7	DOCUMENTATION	1.5532599122082429E-7	DEFECT	2.282935631855211E-8	TEST	6.127113339034824E-9	DESIGN
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999507606580916	WITHOUT_CLASSIFICATION	3.700477758724738E-5	DESIGN	1.1212744656484194E-5	DEFECT	6.224186957334082E-7	IMPLEMENTATION	2.5802224490266604E-7	TEST	1.4137872413539289E-7	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.9999997214162135	WITHOUT_CLASSIFICATION	2.1139533216319343E-7	IMPLEMENTATION	4.965449025009506E-8	DOCUMENTATION	1.0086140069729132E-8	TEST	5.346555129144039E-9	DEFECT	2.1012689490064566E-9	DESIGN
// add the primary key	WITHOUT_CLASSIFICATION	0.9999939732135316	WITHOUT_CLASSIFICATION	5.344054356866166E-6	IMPLEMENTATION	5.738109975023811E-7	DOCUMENTATION	4.681722338902239E-8	DEFECT	4.3495309812786356E-8	TEST	1.8608580811009466E-8	DESIGN
// delegate already handles PK columns	WITHOUT_CLASSIFICATION	0.9999405116456779	WITHOUT_CLASSIFICATION	5.837802684674806E-5	DESIGN	4.7410742871524467E-7	DOCUMENTATION	2.8397789303086986E-7	TEST	1.778976220575354E-7	DEFECT	1.7434453150464908E-7	IMPLEMENTATION
// we can't batch joined inserts, *especially* not if it is an identity insert; // nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.9999012002360841	WITHOUT_CLASSIFICATION	6.975815450251464E-5	DEFECT	1.3054859869820597E-5	TEST	8.684209606103475E-6	IMPLEMENTATION	7.072559544403397E-6	DESIGN	2.299803931835055E-7	DOCUMENTATION
// Render the SQL query	WITHOUT_CLASSIFICATION	0.9998964442372485	WITHOUT_CLASSIFICATION	9.323419050183006E-5	IMPLEMENTATION	4.980832967795415E-6	DOCUMENTATION	2.280143067439706E-6	DESIGN	1.5621059206813242E-6	DEFECT	1.4984902937406403E-6	TEST
// Write the values of fields onto the prepared statement - we MUST use the state at the time the // insert was issued (cos of foreign key constraints). Not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.9999952303278209	WITHOUT_CLASSIFICATION	4.235416978063729E-6	DEFECT	3.295325071747222E-7	DESIGN	1.9785696975904204E-7	DOCUMENTATION	6.210271209807402E-9	TEST	6.554529066720108E-10	IMPLEMENTATION
// TODO : shouldnt inserts be Expectations.NONE?	WITHOUT_CLASSIFICATION	0.8608689510556076	IMPLEMENTATION	0.06830156283714162	WITHOUT_CLASSIFICATION	0.035385098613618625	DEFECT	0.031123732250015915	DESIGN	0.003738212047668755	TEST	5.824431959474772E-4	DOCUMENTATION
//don't bother trying to update, we know there is no row there yet	WITHOUT_CLASSIFICATION	0.9983881651958503	WITHOUT_CLASSIFICATION	8.240899643197241E-4	DEFECT	6.460204809622987E-4	IMPLEMENTATION	8.892083011503727E-5	DESIGN	4.4425749078350335E-5	TEST	8.377779674438787E-6	DOCUMENTATION
//if all fields are null, we might need to delete existing row	WITHOUT_CLASSIFICATION	0.9938772456186081	WITHOUT_CLASSIFICATION	0.00598039963868013	DESIGN	5.266884652734278E-5	DEFECT	3.81000911970004E-5	IMPLEMENTATION	3.302651094871353E-5	DOCUMENTATION	1.855929403863316E-5	TEST
//there is probably a row there, so try to update //if no rows were updated, we will find out	WITHOUT_CLASSIFICATION	0.9999754090115145	WITHOUT_CLASSIFICATION	1.163329546666748E-5	DESIGN	9.890265257680072E-6	DEFECT	2.1864697645475197E-6	IMPLEMENTATION	5.478805059746004E-7	TEST	3.330774907591479E-7	DOCUMENTATION
//note: updates to joined tables can't be batched...	WITHOUT_CLASSIFICATION	0.9999386468821015	WITHOUT_CLASSIFICATION	5.4046970288073395E-5	DEFECT	3.377415423183875E-6	DESIGN	3.125286532763592E-6	IMPLEMENTATION	4.952760404589532E-7	TEST	3.081696140691375E-7	DOCUMENTATION
// starting index	WITHOUT_CLASSIFICATION	0.999992253296224	WITHOUT_CLASSIFICATION	3.0366201381281017E-6	DEFECT	2.7649281265795587E-6	IMPLEMENTATION	8.185123044224672E-7	TEST	6.962561020968255E-7	DOCUMENTATION	4.303871048205157E-7	DESIGN
//Now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.9999868692363778	WITHOUT_CLASSIFICATION	6.779912878482465E-6	DEFECT	2.0285570858401872E-6	DOCUMENTATION	1.9201222356530987E-6	IMPLEMENTATION	1.6429918204488666E-6	TEST	7.591796017989164E-7	DESIGN
// Write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.9957746074209832	WITHOUT_CLASSIFICATION	0.0031660920932339116	IMPLEMENTATION	8.019302487463151E-4	DESIGN	2.2742699700701888E-4	DEFECT	1.8291100796195143E-5	DOCUMENTATION	1.1652139233218369E-5	TEST
//Render the SQL query	WITHOUT_CLASSIFICATION	0.999718805107818	WITHOUT_CLASSIFICATION	2.3306203062394416E-4	IMPLEMENTATION	2.428884009792389E-5	DOCUMENTATION	1.3577357378846833E-5	DESIGN	6.165851280333474E-6	TEST	4.100812801030028E-6	DEFECT
// Do the key. The key is immutable so we can use the _current_ object state - not necessarily // the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.9999188852412971	WITHOUT_CLASSIFICATION	3.947085025021377E-5	DESIGN	1.8390331903281594E-5	DEFECT	1.1045558465753619E-5	DOCUMENTATION	1.094506372299028E-5	IMPLEMENTATION	1.2629543606448998E-6	TEST
// We should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.9999960733257671	WITHOUT_CLASSIFICATION	3.444989444398225E-6	DEFECT	1.6764656435705295E-7	TEST	1.5115579810081337E-7	IMPLEMENTATION	8.337443873143193E-8	DESIGN	7.950798745573164E-8	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9997157233657873	WITHOUT_CLASSIFICATION	2.533186425851371E-4	DEFECT	2.8747495933522684E-5	DESIGN	1.8136157170669614E-6	DOCUMENTATION	2.735478937164658E-7	TEST	1.2333208333558743E-7	IMPLEMENTATION
//note: dirtyFields==null means we had no snapshot, and we couldn't get one using select-before-update //	WITHOUT_CLASSIFICATION	0.9999997688690998	WITHOUT_CLASSIFICATION	2.2061063566664658E-7	DEFECT	4.795098792207206E-9	IMPLEMENTATION	3.986503654338116E-9	DESIGN	1.3989712792512695E-9	TEST	3.396908109245343E-10	DOCUMENTATION
// more specifically : "datetime [op] ?" //      1) if the operator is MINUS, we really cannot determine //          the expected type as either another datetime or //          numeric would be valid //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9944049467119976	WITHOUT_CLASSIFICATION	0.005168033931746834	DEFECT	4.1982230652507234E-4	DESIGN	6.717529322663462E-6	DOCUMENTATION	4.69893950448327E-7	TEST	9.626457399077237E-9	IMPLEMENTATION
// For the case of dynamic-update="true", we need to generate the UPDATE SQL	WITHOUT_CLASSIFICATION	0.9999983369824358	WITHOUT_CLASSIFICATION	5.824582534888272E-7	IMPLEMENTATION	5.517793752318292E-7	DOCUMENTATION	3.2146836431632496E-7	DESIGN	1.8966319220093332E-7	TEST	1.7648379080252287E-8	DEFECT
// don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.8769617265588454	WITHOUT_CLASSIFICATION	0.12289860375560042	IMPLEMENTATION	6.89541617138144E-5	DEFECT	4.1570999254178944E-5	DOCUMENTATION	1.5563008059813565E-5	DESIGN	1.358151652645959E-5	TEST
// For the case of dynamic-update="false", or no snapshot, we use the static SQL	WITHOUT_CLASSIFICATION	0.9999999455190767	WITHOUT_CLASSIFICATION	2.5603183161894863E-8	DOCUMENTATION	1.403623053643653E-8	DEFECT	8.681806783718292E-9	IMPLEMENTATION	4.065948760936088E-9	DESIGN	2.0937540046791884E-9	TEST
// if not "get", then try "is"	WITHOUT_CLASSIFICATION	0.9999823778291708	WITHOUT_CLASSIFICATION	7.507475507751883E-6	DEFECT	6.375241337074063E-6	IMPLEMENTATION	1.7959262101755055E-6	TEST	1.3514779596051628E-6	DOCUMENTATION	5.920498147691146E-7	DESIGN
// Now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.9999985407307332	WITHOUT_CLASSIFICATION	6.632430713561979E-7	IMPLEMENTATION	6.480866056513245E-7	DEFECT	5.8653987744583124E-8	DESIGN	5.3248299008499976E-8	TEST	3.6037303158438546E-8	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999973545746897	WITHOUT_CLASSIFICATION	9.960833778989038E-7	DESIGN	9.184745517740283E-7	DOCUMENTATION	4.1772122181566916E-7	IMPLEMENTATION	3.040334060961624E-7	TEST	9.112752694364244E-9	DEFECT
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999973545746897	WITHOUT_CLASSIFICATION	9.960833778989038E-7	DESIGN	9.184745517740283E-7	DOCUMENTATION	4.1772122181566916E-7	IMPLEMENTATION	3.040334060961624E-7	TEST	9.112752694364244E-9	DEFECT
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999999639435238	WITHOUT_CLASSIFICATION	1.7217700480418535E-8	DESIGN	8.721913832697278E-9	DOCUMENTATION	4.997087786184351E-9	IMPLEMENTATION	3.1201421080102886E-9	DEFECT	1.9996321087449533E-9	TEST
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999999639435238	WITHOUT_CLASSIFICATION	1.7217700480418535E-8	DESIGN	8.721913832697278E-9	DOCUMENTATION	4.997087786184351E-9	IMPLEMENTATION	3.1201421080102886E-9	DEFECT	1.9996321087449533E-9	TEST
// not supported	WITHOUT_CLASSIFICATION	0.9368358747905311	WITHOUT_CLASSIFICATION	0.06219590317791779	IMPLEMENTATION	5.901332691991188E-4	DEFECT	1.7846344036211354E-4	DESIGN	1.4596562550442613E-4	TEST	5.365969648544715E-5	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9997157233657873	WITHOUT_CLASSIFICATION	2.533186425851371E-4	DEFECT	2.8747495933522684E-5	DESIGN	1.8136157170669614E-6	DOCUMENTATION	2.735478937164658E-7	TEST	1.2333208333558743E-7	IMPLEMENTATION
// we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.9999436784500457	WITHOUT_CLASSIFICATION	3.056896543937909E-5	DOCUMENTATION	2.2492377427503033E-5	DESIGN	2.407524784846417E-6	IMPLEMENTATION	4.84405875643775E-7	TEST	3.682764270873409E-7	DEFECT
// otherwise, utilize the static delete statements	WITHOUT_CLASSIFICATION	0.9999995874350389	WITHOUT_CLASSIFICATION	2.0297510991063E-7	IMPLEMENTATION	1.7608066788811895E-7	DESIGN	2.1510014430988098E-8	DOCUMENTATION	8.749315442281856E-9	TEST	3.2498533333445696E-9	DEFECT
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9999960414181762	WITHOUT_CLASSIFICATION	1.784346936903787E-6	DOCUMENTATION	7.042583073901078E-7	DEFECT	6.621597588135797E-7	DESIGN	6.200844918166844E-7	IMPLEMENTATION	1.877323289062816E-7	TEST
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9999960414181762	WITHOUT_CLASSIFICATION	1.784346936903787E-6	DOCUMENTATION	7.042583073901078E-7	DEFECT	6.621597588135797E-7	DESIGN	6.200844918166844E-7	IMPLEMENTATION	1.877323289062816E-7	TEST
//all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.9999469187735612	WITHOUT_CLASSIFICATION	2.7842853616884858E-5	IMPLEMENTATION	2.1242405576804675E-5	DEFECT	1.9323496399203825E-6	DOCUMENTATION	1.5796009464315124E-6	DESIGN	4.840166586037755E-7	TEST
//notice that we skip the first table; it is the driving table!	WITHOUT_CLASSIFICATION	0.9999759367808416	WITHOUT_CLASSIFICATION	8.649529794806366E-6	IMPLEMENTATION	7.635261977599149E-6	TEST	7.293309266935668E-6	DEFECT	3.238226429098854E-7	DOCUMENTATION	1.6129547614569644E-7	DESIGN
//we can inner join to superclass tables (the row MUST be there) //we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.9996264942603262	WITHOUT_CLASSIFICATION	3.541649729913782E-4	DESIGN	1.8189869513201808E-5	DEFECT	8.626697195668799E-7	IMPLEMENTATION	1.52179973993448E-7	DOCUMENTATION	1.360474757106012E-7	TEST
//skip the driving table	WITHOUT_CLASSIFICATION	0.9999934618408196	WITHOUT_CLASSIFICATION	5.850385275005955E-6	IMPLEMENTATION	2.747597885868186E-7	TEST	2.394835612587343E-7	DEFECT	1.4949278720326424E-7	DOCUMENTATION	2.4037768458854002E-8	DESIGN
//get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.9706027692705403	WITHOUT_CLASSIFICATION	0.01245474749264958	DEFECT	0.01220733038401466	DESIGN	0.004634253557030532	IMPLEMENTATION	7.41762028537006E-5	TEST	2.672309291101007E-5	DOCUMENTATION
// here, we work under the following assumptions: //      ------------ valid cases -------------------------------------- //      1) datetime + {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      2) datetime - datetime : always results in a DOUBLE //      3) datetime - {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      ------------ invalid cases ------------------------------------ //      4) datetime + datetime //      5) {something other than datetime} - datetime //      6) datetime * {any type} //      7) datetime / {any type} //      8) {any type} / datetime // doing so allows us to properly handle parameters as either the left // or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.9752797074054602	WITHOUT_CLASSIFICATION	0.01531589802088441	DESIGN	0.00919797471804866	DEFECT	2.0151419813635186E-4	IMPLEMENTATION	2.7378350401101002E-6	DOCUMENTATION	2.167822430163113E-6	TEST
//render the where and from parts	WITHOUT_CLASSIFICATION	0.9996138819192081	WITHOUT_CLASSIFICATION	2.8199075663479445E-4	DESIGN	8.720709677343979E-5	IMPLEMENTATION	8.285719688473671E-6	DOCUMENTATION	6.310153077766634E-6	DEFECT	2.3243546174454594E-6	TEST
//we *could* regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.9959858517159441	WITHOUT_CLASSIFICATION	0.003995982353702161	DESIGN	1.4081023856225122E-5	TEST	1.6600880998332516E-6	DOCUMENTATION	1.246280921204108E-6	IMPLEMENTATION	1.1785374764161748E-6	DEFECT
//now render the joins	WITHOUT_CLASSIFICATION	0.9998656786620368	WITHOUT_CLASSIFICATION	1.280759961316796E-4	IMPLEMENTATION	2.3140472181276383E-6	DESIGN	2.3139289885488495E-6	DOCUMENTATION	1.1343332526613208E-6	TEST	4.830323723257512E-7	DEFECT
// This will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.9999860082940665	WITHOUT_CLASSIFICATION	1.2160038705407396E-5	IMPLEMENTATION	9.986687530902585E-7	DOCUMENTATION	4.587093261480376E-7	DEFECT	2.6066017676521947E-7	DESIGN	1.1362897196120959E-7	TEST
//now render the select clause	WITHOUT_CLASSIFICATION	0.9999970903793927	WITHOUT_CLASSIFICATION	2.623689067518149E-6	IMPLEMENTATION	1.1380264636834832E-7	DESIGN	9.806212116239325E-8	TEST	5.257731111383262E-8	DOCUMENTATION	2.148946116867631E-8	DEFECT
//now tie it all together	WITHOUT_CLASSIFICATION	0.9992992134567039	WITHOUT_CLASSIFICATION	6.86833651762801E-4	IMPLEMENTATION	6.488881711823126E-6	DESIGN	3.460798037487464E-6	TEST	2.073378044222807E-6	DEFECT	1.929833739765019E-6	DOCUMENTATION
//insert/update/delete SQL	WITHOUT_CLASSIFICATION	0.9999975572026005	WITHOUT_CLASSIFICATION	1.3571473223417016E-6	DEFECT	7.860548849652204E-7	DESIGN	1.5654916911299302E-7	DOCUMENTATION	8.541564642743372E-8	TEST	5.7630376655698814E-8	IMPLEMENTATION
//select SQL	WITHOUT_CLASSIFICATION	0.9999864231799088	WITHOUT_CLASSIFICATION	6.281290370315127E-6	IMPLEMENTATION	2.747736410671973E-6	TEST	1.7043709788310517E-6	DEFECT	1.5339701806351581E-6	DESIGN	1.3094521508007458E-6	DOCUMENTATION
//no need to check laziness, dirty checking handles that	WITHOUT_CLASSIFICATION	0.999778325930475	WITHOUT_CLASSIFICATION	2.1592538699163918E-4	IMPLEMENTATION	3.879159321153415E-6	DOCUMENTATION	9.579630628814075E-7	TEST	5.123022317359715E-7	DESIGN	3.9925791764596364E-7	DEFECT
// Fully resolve the map reference, create implicit joins.	WITHOUT_CLASSIFICATION	0.9999854486832542	WITHOUT_CLASSIFICATION	1.3091509230802161E-5	IMPLEMENTATION	1.2300852590752145E-6	DESIGN	1.248382535093455E-7	TEST	9.384095369262772E-8	DOCUMENTATION	1.1043048668923265E-8	DEFECT
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.981136330547121	WITHOUT_CLASSIFICATION	0.018409793069478063	DESIGN	2.7536060174821755E-4	IMPLEMENTATION	6.976146449879892E-5	DOCUMENTATION	5.7800028194921904E-5	TEST	5.0954288959062977E-5	DEFECT
// The basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.9999251786848655	WITHOUT_CLASSIFICATION	3.1973811821086016E-5	DEFECT	2.981656130424064E-5	IMPLEMENTATION	9.74865802214052E-6	DESIGN	3.160767195656801E-6	DOCUMENTATION	1.2151679136878684E-7	TEST
// for dialects which are known to not support ANSI-SQL row-value-constructor syntax, // we should mutate the tree.	WITHOUT_CLASSIFICATION	0.9983447145220173	WITHOUT_CLASSIFICATION	8.398690099565225E-4	DESIGN	4.18953514810834E-4	IMPLEMENTATION	3.2462227166134435E-4	DEFECT	6.508980720691677E-5	TEST	6.75087434702943E-6	DOCUMENTATION
// Due to the complexity in initializing the SelectClause, do not generate one here. // If it is not found; simply return null... // // Also, do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.9999801888172737	WITHOUT_CLASSIFICATION	1.3070080491138531E-5	IMPLEMENTATION	6.356551877982031E-6	DESIGN	1.7820379887826587E-7	TEST	1.6467135097424767E-7	DEFECT	4.167520747121894E-8	DOCUMENTATION
// check the version unsaved-value, if appropriate	WITHOUT_CLASSIFICATION	0.9998139455143692	WITHOUT_CLASSIFICATION	1.834681183829605E-4	IMPLEMENTATION	1.5522243280405103E-6	DESIGN	6.59430960868597E-7	DEFECT	3.067773638369412E-7	DOCUMENTATION	6.793459517292956E-8	TEST
// let this take precedence if defined, since it works for // assigned identifiers	WITHOUT_CLASSIFICATION	0.9997620466472563	WITHOUT_CLASSIFICATION	2.3407522446722517E-4	DESIGN	2.49282599417197E-6	TEST	8.392364985519673E-7	DEFECT	3.268481133752923E-7	IMPLEMENTATION	2.192176704965871E-7	DOCUMENTATION
// check the id unsaved-value	WITHOUT_CLASSIFICATION	0.9999868697108286	WITHOUT_CLASSIFICATION	1.2714430261095228E-5	IMPLEMENTATION	3.2627508583700333E-7	DOCUMENTATION	3.882601297428669E-8	DEFECT	2.724558840842172E-8	DESIGN	2.3512223028663324E-8	TEST
// check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.9999673169706773	WITHOUT_CLASSIFICATION	2.060186225633144E-5	IMPLEMENTATION	8.358884329232747E-6	DESIGN	2.035486231739295E-6	DEFECT	1.2449572160005325E-6	DOCUMENTATION	4.4183928931276126E-7	TEST
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997131150661634	WITHOUT_CLASSIFICATION	6.204623448650295E-5	DOCUMENTATION	5.960895038742096E-5	TEST	5.747207114653075E-5	DEFECT	5.6241094708495216E-5	IMPLEMENTATION	5.151658310748103E-5	DESIGN
// For property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.9999865279922797	WITHOUT_CLASSIFICATION	1.2818751072121199E-5	DESIGN	4.720838008634138E-7	IMPLEMENTATION	8.622857091298064E-8	TEST	8.427803097113896E-8	DOCUMENTATION	1.0666245307536887E-8	DEFECT
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999318819182712	WITHOUT_CLASSIFICATION	2.3228290828243807E-5	IMPLEMENTATION	1.3542294776552955E-5	DEFECT	1.1215036822537524E-5	DOCUMENTATION	1.0497216809004004E-5	DESIGN	9.635242492361308E-6	TEST
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9999985878009334	WITHOUT_CLASSIFICATION	7.344386112619988E-7	DEFECT	3.905103024554525E-7	DESIGN	1.9764600717258875E-7	TEST	4.495830428980108E-8	DOCUMENTATION	4.464584131446768E-8	IMPLEMENTATION
//force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.9999636145100584	WITHOUT_CLASSIFICATION	1.8725688200913826E-5	DESIGN	1.2366510882643796E-5	DEFECT	3.870158592439441E-6	DOCUMENTATION	7.671102050055498E-7	IMPLEMENTATION	6.560220605329136E-7	TEST
// If this from element is a collection and the path is a collection property (maxIndex, etc.) then // generate a sub-query.	WITHOUT_CLASSIFICATION	0.9999967540181702	WITHOUT_CLASSIFICATION	2.01112660191255E-6	DEFECT	6.658140140984479E-7	IMPLEMENTATION	3.4216826852321296E-7	DESIGN	1.523865254154728E-7	TEST	7.448641979700565E-8	DOCUMENTATION
// entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999221212301267	WITHOUT_CLASSIFICATION	4.276991377816878E-5	IMPLEMENTATION	1.4480141936482162E-5	DEFECT	8.86469513730024E-6	DOCUMENTATION	7.267936913708924E-6	TEST	4.496082107605461E-6	DESIGN
// collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999912923728066	WITHOUT_CLASSIFICATION	5.5781746803861956E-5	IMPLEMENTATION	1.674561834567404E-5	DESIGN	6.915054173006335E-6	TEST	4.644533193450493E-6	DEFECT	2.9893194180289726E-6	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.9998645339584378	WITHOUT_CLASSIFICATION	4.432765721006842E-5	DESIGN	4.2001858322856955E-5	DEFECT	2.4147824727845415E-5	DOCUMENTATION	1.8346120500274272E-5	IMPLEMENTATION	6.642580801302129E-6	TEST
//cannot occur	WITHOUT_CLASSIFICATION	0.9998645339584378	WITHOUT_CLASSIFICATION	4.432765721006842E-5	DESIGN	4.2001858322856955E-5	DEFECT	2.4147824727845415E-5	DOCUMENTATION	1.8346120500274272E-5	IMPLEMENTATION	6.642580801302129E-6	TEST
// only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.9991749694315726	WITHOUT_CLASSIFICATION	8.21716238802549E-4	DESIGN	1.3254666821866493E-6	TEST	7.790525022937675E-7	DEFECT	6.409964611838438E-7	IMPLEMENTATION	5.688139793467426E-7	DOCUMENTATION
// try "get"	WITHOUT_CLASSIFICATION	0.9999639501558553	WITHOUT_CLASSIFICATION	2.3359286779141258E-5	IMPLEMENTATION	6.966318333949988E-6	DESIGN	2.6051063617974184E-6	DOCUMENTATION	1.6293557717239199E-6	TEST	1.4897768980925044E-6	DEFECT
// do nothing...	WITHOUT_CLASSIFICATION	0.9999929970527679	WITHOUT_CLASSIFICATION	4.281174829829654E-6	IMPLEMENTATION	1.3036949427901614E-6	DOCUMENTATION	7.771304280668655E-7	TEST	5.133333353462018E-7	DEFECT	1.2761369612260387E-7	DESIGN
// do nothing...	WITHOUT_CLASSIFICATION	0.9999929970527679	WITHOUT_CLASSIFICATION	4.281174829829654E-6	IMPLEMENTATION	1.3036949427901614E-6	DOCUMENTATION	7.771304280668655E-7	TEST	5.133333353462018E-7	DEFECT	1.2761369612260387E-7	DESIGN
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9935647574536729	WITHOUT_CLASSIFICATION	0.005816285884968337	DESIGN	3.079759788316697E-4	DEFECT	2.5965393490348E-4	IMPLEMENTATION	3.9117942375661655E-5	TEST	1.2208805247882809E-5	DOCUMENTATION
// this page intentionally left blank :)	WITHOUT_CLASSIFICATION	0.998240411123171	WITHOUT_CLASSIFICATION	0.0010137873081960287	DESIGN	3.902140139669811E-4	IMPLEMENTATION	2.2973259511142554E-4	DOCUMENTATION	9.16192895310214E-5	DEFECT	3.4235670023383645E-5	TEST
// do not do anything	WITHOUT_CLASSIFICATION	0.9999764598439752	WITHOUT_CLASSIFICATION	1.8625174015559814E-5	IMPLEMENTATION	1.847392156464026E-6	DEFECT	1.653383815838059E-6	TEST	1.323494208678295E-6	DOCUMENTATION	9.071182811615421E-8	DESIGN
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999967921465598	WITHOUT_CLASSIFICATION	2.3262049710510212E-6	IMPLEMENTATION	3.920518904252137E-7	DOCUMENTATION	2.0324652480516502E-7	DEFECT	1.4810281992615262E-7	DESIGN	1.3824723398080232E-7	TEST
//cant instantiate	WITHOUT_CLASSIFICATION	0.9995088987844165	WITHOUT_CLASSIFICATION	3.4408322283764414E-4	DESIGN	8.61776483064822E-5	IMPLEMENTATION	2.4580497472435995E-5	DOCUMENTATION	2.4275784700872735E-5	TEST	1.1984062266050323E-5	DEFECT
//if it is a property of an embedded component, invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.9994460648947455	WITHOUT_CLASSIFICATION	4.812380683043477E-4	DESIGN	3.9416588874889433E-5	DEFECT	1.8900852783770177E-5	IMPLEMENTATION	1.0193478337536756E-5	TEST	4.186116953743859E-6	DOCUMENTATION
// otherwise:	WITHOUT_CLASSIFICATION	0.9995107753041976	WITHOUT_CLASSIFICATION	4.8051324172432395E-4	IMPLEMENTATION	3.276778859703399E-6	TEST	2.530016021425015E-6	DESIGN	1.7829997280670462E-6	DOCUMENTATION	1.121659468894965E-6	DEFECT
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999975108986662	WITHOUT_CLASSIFICATION	2.129609832746117E-6	IMPLEMENTATION	2.5636100243807653E-7	DOCUMENTATION	5.695145920885802E-8	DESIGN	2.7102963507971147E-8	TEST	1.9076076030603813E-8	DEFECT
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9996966831631626	WITHOUT_CLASSIFICATION	2.1650765089280749E-4	DESIGN	6.854611449344931E-5	DEFECT	1.1680405172064265E-5	DOCUMENTATION	3.3415858648418354E-6	TEST	3.241080414277298E-6	IMPLEMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9996966831631626	WITHOUT_CLASSIFICATION	2.1650765089280749E-4	DESIGN	6.854611449344931E-5	DEFECT	1.1680405172064265E-5	DOCUMENTATION	3.3415858648418354E-6	TEST	3.241080414277298E-6	IMPLEMENTATION
// HHH-2481 make sure the callback gets cleared, otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.9906575071413478	WITHOUT_CLASSIFICATION	0.00896219733896991	DESIGN	3.3803358553699856E-4	IMPLEMENTATION	3.4894371764141805E-5	DEFECT	7.178326831044201E-6	DOCUMENTATION	1.8923555003211845E-7	TEST
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999966235265383	WITHOUT_CLASSIFICATION	2.106895985131386E-6	IMPLEMENTATION	8.205372469263067E-7	TEST	2.0706508960708743E-7	DEFECT	1.3582392141970977E-7	DOCUMENTATION	1.0615121860762558E-7	DESIGN
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999966235265383	WITHOUT_CLASSIFICATION	2.106895985131386E-6	IMPLEMENTATION	8.205372469263067E-7	TEST	2.0706508960708743E-7	DEFECT	1.3582392141970977E-7	DOCUMENTATION	1.0615121860762558E-7	DESIGN
// note: interface is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9998168672440356	WITHOUT_CLASSIFICATION	1.5957595609913605E-4	DESIGN	1.7308125731260395E-5	DEFECT	4.9647268409994E-6	DOCUMENTATION	7.498888759990603E-7	TEST	5.340584170740119E-7	IMPLEMENTATION
// interfaces // arguments	WITHOUT_CLASSIFICATION	0.9999976540380308	WITHOUT_CLASSIFICATION	1.7607678579409874E-6	DESIGN	3.9238572321957876E-7	DOCUMENTATION	1.1922045305171206E-7	TEST	7.244914428546325E-8	DEFECT	1.1387907650413153E-9	IMPLEMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9953348028300605	WITHOUT_CLASSIFICATION	0.0015387444481460603	DESIGN	0.0011033514467112023	DEFECT	9.439446381915857E-4	IMPLEMENTATION	6.762467486397806E-4	DOCUMENTATION	4.029098882509166E-4	TEST
// Get the caller	WITHOUT_CLASSIFICATION	0.9999820062757669	WITHOUT_CLASSIFICATION	1.7182450540412035E-5	IMPLEMENTATION	5.192103436265384E-7	DESIGN	1.4061955614048619E-7	TEST	7.826259765768425E-8	DOCUMENTATION	7.318119516610426E-8	DEFECT
// Get the caller principals	WITHOUT_CLASSIFICATION	0.9999968102389128	WITHOUT_CLASSIFICATION	3.1087542317701472E-6	IMPLEMENTATION	2.926324313695375E-8	DOCUMENTATION	2.612713498943302E-8	DESIGN	1.3917730152667112E-8	DEFECT	1.169874709597508E-8	TEST
//private static final Alias DEFAULT_ALIAS = new Alias(10, null);	WITHOUT_CLASSIFICATION	0.9999993056400805	WITHOUT_CLASSIFICATION	3.682313499298798E-7	DESIGN	1.5889913830107293E-7	DEFECT	1.0734293275608236E-7	DOCUMENTATION	3.963969301438893E-8	IMPLEMENTATION	2.024680526438852E-8	TEST
// Needed to bump this up to DotNode, because that is the only thing which currently // knows about the property-ref path in the correct format; it is either this, or // recurse over the DotNodes constructing the property path just like DotNode does // internally	WITHOUT_CLASSIFICATION	0.9990517125672906	WITHOUT_CLASSIFICATION	4.926762392752742E-4	DEFECT	2.0659775212526554E-4	TEST	1.2463176003197412E-4	DOCUMENTATION	1.1168954511773129E-4	IMPLEMENTATION	1.2692136159089491E-5	DESIGN
//if the identifier is quoted, remove the quotes	WITHOUT_CLASSIFICATION	0.9987652223472141	WITHOUT_CLASSIFICATION	6.836109366734766E-4	IMPLEMENTATION	3.443895630158543E-4	DESIGN	1.4399667345167436E-4	TEST	5.564619325286841E-5	DEFECT	7.134286392178577E-6	DOCUMENTATION
//truncate the identifier to the max alias length, less the suffix length	WITHOUT_CLASSIFICATION	0.9976012099334125	WITHOUT_CLASSIFICATION	0.002389780655268188	DESIGN	6.020705671014233E-6	DOCUMENTATION	2.0340611792765004E-6	DEFECT	5.915011917321231E-7	TEST	3.63143277410729E-7	IMPLEMENTATION
//full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.9929142212664207	WITHOUT_CLASSIFICATION	0.0032899382066819125	DEFECT	0.002426323663561404	IMPLEMENTATION	0.0011008628944019572	DESIGN	2.1196182697053465E-4	TEST	5.669214196343925E-5	DOCUMENTATION
// null is not considered the same type as Integer. //$NON-NLS-1 //$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999520153986847	WITHOUT_CLASSIFICATION	2.4463165795713824E-5	DESIGN	1.9099270068156608E-5	DEFECT	3.8785485966667055E-6	IMPLEMENTATION	3.26530931418937E-7	TEST	2.1708592322469285E-7	DOCUMENTATION
// the outerJoinsAfterWhere needs to come before where clause to properly // handle dynamic filters	WITHOUT_CLASSIFICATION	0.9927358201696268	WITHOUT_CLASSIFICATION	0.007216671812119028	DESIGN	4.329948363292907E-5	IMPLEMENTATION	3.1290439551207216E-6	DOCUMENTATION	7.645680870749225E-7	DEFECT	3.149225789724261E-7	TEST
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9998389032899753	WITHOUT_CLASSIFICATION	1.0051491945886861E-4	DEFECT	2.6586834437763738E-5	DESIGN	1.5785978968902514E-5	DOCUMENTATION	1.0936460307040209E-5	TEST	7.27251685226523E-6	IMPLEMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9998389032899753	WITHOUT_CLASSIFICATION	1.0051491945886861E-4	DEFECT	2.6586834437763738E-5	DESIGN	1.5785978968902514E-5	DOCUMENTATION	1.0936460307040209E-5	TEST	7.27251685226523E-6	IMPLEMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9998389032899753	WITHOUT_CLASSIFICATION	1.0051491945886861E-4	DEFECT	2.6586834437763738E-5	DESIGN	1.5785978968902514E-5	DOCUMENTATION	1.0936460307040209E-5	TEST	7.27251685226523E-6	IMPLEMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9998389032899753	WITHOUT_CLASSIFICATION	1.0051491945886861E-4	DEFECT	2.6586834437763738E-5	DESIGN	1.5785978968902514E-5	DOCUMENTATION	1.0936460307040209E-5	TEST	7.27251685226523E-6	IMPLEMENTATION
// strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.9999932603743468	WITHOUT_CLASSIFICATION	4.9674073975025545E-6	IMPLEMENTATION	8.863739973039003E-7	DEFECT	5.582143342163057E-7	DOCUMENTATION	2.5155442434189607E-7	TEST	7.607549973501164E-8	DESIGN
// if the condition is not already there...	WITHOUT_CLASSIFICATION	0.999985973129405	WITHOUT_CLASSIFICATION	6.2136496870254606E-6	DEFECT	5.505479208641493E-6	DESIGN	1.3674769438156332E-6	IMPLEMENTATION	8.230248066557625E-7	TEST	1.1723994890546838E-7	DOCUMENTATION
//dontSpace.add("'");	WITHOUT_CLASSIFICATION	0.9998783926470629	WITHOUT_CLASSIFICATION	8.957621832624921E-5	IMPLEMENTATION	1.925943746948727E-5	DOCUMENTATION	6.638145611247098E-6	DEFECT	3.2839247399391144E-6	TEST	2.8496267901171266E-6	DESIGN
//for MySQL	WITHOUT_CLASSIFICATION	0.9998316343027266	WITHOUT_CLASSIFICATION	6.289259994125449E-5	DESIGN	4.3455352679987594E-5	DEFECT	3.2134144530780804E-5	IMPLEMENTATION	1.8269124570918997E-5	DOCUMENTATION	1.1614475550413509E-5	TEST
//HashMap columnsUnique = new HashMap();	WITHOUT_CLASSIFICATION	0.9997003661759397	WITHOUT_CLASSIFICATION	1.9433542567874463E-4	IMPLEMENTATION	6.1311239586297E-5	DESIGN	1.5809062628931027E-5	DEFECT	1.4318540754535931E-5	DOCUMENTATION	1.3859555411691479E-5	TEST
//null caused some problems	WITHOUT_CLASSIFICATION	0.9999719748324923	WITHOUT_CLASSIFICATION	2.592702951180694E-5	IMPLEMENTATION	1.2340837443857874E-6	DOCUMENTATION	3.0862099170424576E-7	DESIGN	2.841645064968847E-7	DEFECT	2.7126875307269205E-7	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9989260628615921	WITHOUT_CLASSIFICATION	7.677202016314123E-4	DESIGN	1.4376704594225997E-4	IMPLEMENTATION	7.854593901788724E-5	DOCUMENTATION	4.701722594702547E-5	TEST	3.688672586933569E-5	DEFECT
//not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.9989948411708564	WITHOUT_CLASSIFICATION	7.724562307036785E-4	DESIGN	1.0743620129082736E-4	DEFECT	9.807725607960406E-5	TEST	2.476475930619755E-5	IMPLEMENTATION	2.424381763352727E-6	DOCUMENTATION
//even on inverse="true"	WITHOUT_CLASSIFICATION	0.9997749770361538	WITHOUT_CLASSIFICATION	1.4027945033987465E-4	IMPLEMENTATION	3.525473610072467E-5	DOCUMENTATION	2.9325037875134687E-5	DESIGN	1.1215504492812907E-5	DEFECT	8.948235037635235E-6	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9989260628615921	WITHOUT_CLASSIFICATION	7.677202016314123E-4	DESIGN	1.4376704594225997E-4	IMPLEMENTATION	7.854593901788724E-5	DOCUMENTATION	4.701722594702547E-5	TEST	3.688672586933569E-5	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9989260628615921	WITHOUT_CLASSIFICATION	7.677202016314123E-4	DESIGN	1.4376704594225997E-4	IMPLEMENTATION	7.854593901788724E-5	DOCUMENTATION	4.701722594702547E-5	TEST	3.688672586933569E-5	DEFECT
// If true then execute db updates, otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.9999633242577877	WITHOUT_CLASSIFICATION	3.295974751576227E-5	IMPLEMENTATION	3.4675202899675688E-6	DEFECT	1.2082938798147365E-7	DOCUMENTATION	9.993395917102809E-8	TEST	2.7711059545139908E-8	DESIGN
// we only release the connection	WITHOUT_CLASSIFICATION	0.9999883574892252	WITHOUT_CLASSIFICATION	4.551073846468062E-6	DOCUMENTATION	3.5011714547582457E-6	IMPLEMENTATION	2.022331994424867E-6	DESIGN	1.4221896974489469E-6	TEST	1.4574378182878427E-7	DEFECT
// deprecated option...	WITHOUT_CLASSIFICATION	0.9999769615948036	WITHOUT_CLASSIFICATION	1.302664829898061E-5	IMPLEMENTATION	6.7011801982160305E-6	DESIGN	2.0844087648476237E-6	DOCUMENTATION	8.380959879036815E-7	TEST	3.880719463247773E-7	DEFECT
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9995758157712724	WITHOUT_CLASSIFICATION	4.0116563492041126E-4	DEFECT	2.18789402786061E-5	DESIGN	7.57200005431503E-7	TEST	2.2759900485095943E-7	DOCUMENTATION	1.5485451823416228E-7	IMPLEMENTATION
//actually, this last test is probably unnecessary, since  //beforeCompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.9447448391840323	WITHOUT_CLASSIFICATION	0.030766322441932527	DESIGN	0.012699848724807951	TEST	0.011706910641141554	DEFECT	4.474454104707267E-5	DOCUMENTATION	3.733446703852415E-5	IMPLEMENTATION
// this one only really needed for badly-behaved applications! // (if the TransactionManager has a Sychronization registered, // its a noop) // (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.9866575080347169	WITHOUT_CLASSIFICATION	0.01243225018686558	DESIGN	8.273461302282334E-4	IMPLEMENTATION	5.454867790579887E-5	TEST	1.5470170224486924E-5	DOCUMENTATION	1.2876800059071795E-5	DEFECT
// Create an DotNode AST for the path and resolve it.	WITHOUT_CLASSIFICATION	0.9999710724897957	WITHOUT_CLASSIFICATION	2.2659157879150157E-5	IMPLEMENTATION	2.8492419192749294E-6	DESIGN	1.630837508919081E-6	TEST	1.280325386223135E-6	DEFECT	5.079475107937414E-7	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9995758157712724	WITHOUT_CLASSIFICATION	4.0116563492041126E-4	DEFECT	2.18789402786061E-5	DESIGN	7.57200005431503E-7	TEST	2.2759900485095943E-7	DOCUMENTATION	1.5485451823416228E-7	IMPLEMENTATION
//if we could not register a synchronization, //do the before/after completion callbacks //ourself (but we need to let jdbcContext //know that this is what we are going to //do, so it doesn't keep trying to register //synchronizations)	WITHOUT_CLASSIFICATION	0.7358260312537928	WITHOUT_CLASSIFICATION	0.23806977406820679	DESIGN	0.013410716877027499	TEST	0.005887142163349182	DEFECT	0.005754023667720111	IMPLEMENTATION	0.0010523119699036544	DOCUMENTATION
// swallow it, and continue to roll back JTA transaction	WITHOUT_CLASSIFICATION	0.999983799699754	WITHOUT_CLASSIFICATION	9.062053395697984E-6	DESIGN	5.452658104997449E-6	IMPLEMENTATION	1.0250288752097376E-6	DOCUMENTATION	5.663041501623816E-7	DEFECT	9.425571999620023E-8	TEST
// so the transaction is already rolled back, by JTA spec	WITHOUT_CLASSIFICATION	0.9999984315224172	WITHOUT_CLASSIFICATION	6.723004732782554E-7	DOCUMENTATION	6.194279892807197E-7	IMPLEMENTATION	1.1214377443583083E-7	DESIGN	8.785538437063232E-8	TEST	7.674996145282114E-8	DEFECT
// this method is a noop if there is a Synchronization!	WITHOUT_CLASSIFICATION	0.9999237485510469	WITHOUT_CLASSIFICATION	6.926468774648326E-5	DESIGN	2.8119358964739894E-6	DOCUMENTATION	2.5351154965900978E-6	TEST	1.161144127542601E-6	DEFECT	4.785656860334614E-7	IMPLEMENTATION
// two conditions where we need to transform this to a theta-join syntax: //      1) 'elem' is the "root from-element" in correlated subqueries //      2) The DotNode.useThetaStyleImplicitJoins has been set to true //          and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.7895448119553405	WITHOUT_CLASSIFICATION	0.21037119376918426	DESIGN	4.9829099142791856E-5	DOCUMENTATION	2.188733980008264E-5	IMPLEMENTATION	1.0386943238881948E-5	TEST	1.8908932935323334E-6	DEFECT
// WebSphere, however, is not a sane JEE/JTA container...	WITHOUT_CLASSIFICATION	0.9998124716888463	WITHOUT_CLASSIFICATION	1.6685485387264438E-4	IMPLEMENTATION	9.989025310619827E-6	DEFECT	7.819470972074788E-6	DESIGN	2.549504085129081E-6	TEST	3.154569130620313E-7	DOCUMENTATION
// for sane JEE/JTA containers, the transaction itself functions as its identifier...	WITHOUT_CLASSIFICATION	0.999994161266802	WITHOUT_CLASSIFICATION	4.781276847024206E-6	IMPLEMENTATION	9.678659373028216E-7	DESIGN	6.716645277518872E-8	TEST	2.0244520099720067E-8	DOCUMENTATION	2.179441016782715E-9	DEFECT
//swallow, the transaction was finished	WITHOUT_CLASSIFICATION	0.9998272363725412	WITHOUT_CLASSIFICATION	1.1060024321063397E-4	IMPLEMENTATION	4.194756993057823E-5	DESIGN	8.386271079666825E-6	DEFECT	7.659525275260822E-6	TEST	4.170017962641854E-6	DOCUMENTATION
// all AliasToEntityMapResultTransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998885615117613	WITHOUT_CLASSIFICATION	7.880226200867998E-5	IMPLEMENTATION	3.0890491256180894E-5	DESIGN	6.829975475351378E-7	DOCUMENTATION	6.380434507025468E-7	DEFECT	4.2469397548733685E-7	TEST
// Create the join element under the from element.	WITHOUT_CLASSIFICATION	0.9999995088577709	WITHOUT_CLASSIFICATION	2.8845801032828896E-7	DESIGN	9.777222160983182E-8	IMPLEMENTATION	3.6478477296850664E-8	DOCUMENTATION	3.527155655146323E-8	DEFECT	3.316196345488734E-8	TEST
// all DistinctRootEntityResultTransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999882310382244	WITHOUT_CLASSIFICATION	9.284962769304834E-6	DESIGN	1.6867709070517591E-6	IMPLEMENTATION	3.322369821763069E-7	TEST	2.729906558369996E-7	DOCUMENTATION	1.9200046125206388E-7	DEFECT
// map of EntityMode -> Tuplizer	WITHOUT_CLASSIFICATION	0.9999013826476552	WITHOUT_CLASSIFICATION	9.34826272844709E-5	DESIGN	2.9810964777672356E-6	DEFECT	1.6889574503891988E-6	DOCUMENTATION	2.3557447177263874E-7	IMPLEMENTATION	2.2909666048409462E-7	TEST
// this is a virtual id property...	WITHOUT_CLASSIFICATION	0.999847408060836	WITHOUT_CLASSIFICATION	1.3542508384191664E-4	DESIGN	1.3415264710296496E-5	IMPLEMENTATION	1.5841808748856959E-6	TEST	1.2729860798735226E-6	DOCUMENTATION	8.944236571582646E-7	DEFECT
//this one needed only for guessEntityMode()	WITHOUT_CLASSIFICATION	0.9204126452374478	WITHOUT_CLASSIFICATION	0.0737367604816692	DESIGN	0.0033417879954507354	TEST	0.0010600570743082012	DOCUMENTATION	0.0010430237149613205	IMPLEMENTATION	4.05725496162517E-4	DEFECT
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999982761978182	WITHOUT_CLASSIFICATION	1.1586295370576396E-6	IMPLEMENTATION	3.026756927382703E-7	DEFECT	1.484338986741106E-7	DESIGN	7.46320666908575E-8	DOCUMENTATION	3.94309866090521E-8	TEST
// todo : move this to SF per HHH-3517; also see HHH-1907 and ComponentMetamodel	WITHOUT_CLASSIFICATION	0.9553825503457981	WITHOUT_CLASSIFICATION	0.04456598970500547	DESIGN	2.502587625165999E-5	DEFECT	1.097516745423088E-5	DOCUMENTATION	1.0836720059824323E-5	TEST	4.622185430645185E-6	IMPLEMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999964515179398	WITHOUT_CLASSIFICATION	3.1211238226255346E-6	DESIGN	2.7343625498421423E-7	DEFECT	9.965103057261228E-8	TEST	3.915089470028315E-8	DOCUMENTATION	1.51200574238596E-8	IMPLEMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999841136020906	WITHOUT_CLASSIFICATION	9.128945734307976E-6	IMPLEMENTATION	4.372738450722061E-6	DESIGN	1.9101674693727246E-6	DOCUMENTATION	2.7522942803032844E-7	DEFECT	1.9931682718735134E-7	TEST
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999084776720346	WITHOUT_CLASSIFICATION	8.972176235851389E-5	DESIGN	1.0913609307227694E-6	TEST	4.7136409033628676E-7	IMPLEMENTATION	1.231497471515026E-7	DEFECT	1.1469083871469075E-7	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999841136020906	WITHOUT_CLASSIFICATION	9.128945734307976E-6	IMPLEMENTATION	4.372738450722061E-6	DESIGN	1.9101674693727246E-6	DOCUMENTATION	2.7522942803032844E-7	DEFECT	1.9931682718735134E-7	TEST
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999717593218611	WITHOUT_CLASSIFICATION	2.0984743474234594E-5	DESIGN	5.306133119666424E-6	IMPLEMENTATION	9.86940500924435E-7	DEFECT	7.95153287295972E-7	DOCUMENTATION	1.677077570425339E-7	TEST
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999985785328952	WITHOUT_CLASSIFICATION	1.063682585316772E-6	TEST	1.6708689693246266E-7	DEFECT	1.1791658378503191E-7	IMPLEMENTATION	4.776559969246591E-8	DESIGN	2.5015439000752788E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// cached for efficiency...	WITHOUT_CLASSIFICATION	0.9999922532547174	WITHOUT_CLASSIFICATION	4.7079222618881086E-6	IMPLEMENTATION	1.3031778397395549E-6	DESIGN	9.994199494195604E-7	DOCUMENTATION	4.825375717826453E-7	DEFECT	2.53687659803945E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
//it was not embedded, so the argument is just an id	WITHOUT_CLASSIFICATION	0.999889693559607	WITHOUT_CLASSIFICATION	5.194859156808605E-5	DEFECT	2.9437167846459865E-5	TEST	1.655621965569622E-5	DOCUMENTATION	1.0443440041407179E-5	DESIGN	1.9210212812415E-6	IMPLEMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999964515179398	WITHOUT_CLASSIFICATION	3.1211238226255346E-6	DESIGN	2.7343625498421423E-7	DEFECT	9.965103057261228E-8	TEST	3.915089470028315E-8	DOCUMENTATION	1.51200574238596E-8	IMPLEMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999084776720346	WITHOUT_CLASSIFICATION	8.972176235851389E-5	DESIGN	1.0913609307227694E-6	TEST	4.7136409033628676E-7	IMPLEMENTATION	1.231497471515026E-7	DEFECT	1.1469083871469075E-7	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999717593218611	WITHOUT_CLASSIFICATION	2.0984743474234594E-5	DESIGN	5.306133119666424E-6	IMPLEMENTATION	9.86940500924435E-7	DEFECT	7.95153287295972E-7	DOCUMENTATION	1.677077570425339E-7	TEST
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9999818769459289	WITHOUT_CLASSIFICATION	9.531639064146273E-6	DESIGN	8.081394742290437E-6	IMPLEMENTATION	2.7906212327348294E-7	DOCUMENTATION	1.4099353145216722E-7	TEST	8.996460995735591E-8	DEFECT
//return currentId;	WITHOUT_CLASSIFICATION	0.999706687027659	WITHOUT_CLASSIFICATION	1.9587479265814072E-4	DESIGN	7.616380470458931E-5	IMPLEMENTATION	1.57694622026381E-5	DOCUMENTATION	3.610229521485432E-6	DEFECT	1.8946832543721628E-6	TEST
//reset the id	WITHOUT_CLASSIFICATION	0.9979325193842842	WITHOUT_CLASSIFICATION	0.0020153024038064246	IMPLEMENTATION	2.2175154886327356E-5	TEST	2.160863378027851E-5	DESIGN	5.769634179281828E-6	DOCUMENTATION	2.6247890635381375E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
//reset the version	WITHOUT_CLASSIFICATION	0.9949427934890283	WITHOUT_CLASSIFICATION	0.005008304668334925	IMPLEMENTATION	1.7768793224543826E-5	DESIGN	1.3962915147030402E-5	TEST	1.0996471224900071E-5	DOCUMENTATION	6.173663040415372E-6	DEFECT
// the default is to simply not lazy fetch properties for now...	WITHOUT_CLASSIFICATION	0.9987362311480469	WITHOUT_CLASSIFICATION	0.0010441215553810774	IMPLEMENTATION	2.090028240906798E-4	DEFECT	7.4194594062269805E-6	DESIGN	2.115215158068631E-6	DOCUMENTATION	1.1097979171650115E-6	TEST
// Add the second join, the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.9999991366209668	WITHOUT_CLASSIFICATION	6.88269780421233E-7	IMPLEMENTATION	1.0102234800555329E-7	TEST	4.5521729491220835E-8	DOCUMENTATION	2.021498654650019E-8	DEFECT	8.350188501276963E-9	DESIGN
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.981136330547121	WITHOUT_CLASSIFICATION	0.018409793069478063	DESIGN	2.7536060174821755E-4	IMPLEMENTATION	6.976146449879892E-5	DOCUMENTATION	5.7800028194921904E-5	TEST	5.0954288959062977E-5	DEFECT
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999985785328952	WITHOUT_CLASSIFICATION	1.063682585316772E-6	TEST	1.6708689693246266E-7	DEFECT	1.1791658378503191E-7	IMPLEMENTATION	4.776559969246591E-8	DESIGN	2.5015439000752788E-8	DOCUMENTATION
// determine the id getter and setter methods from the proxy interface (if any) // determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.9999676932084247	WITHOUT_CLASSIFICATION	2.9013427164774803E-5	DESIGN	3.140770545684611E-6	DEFECT	1.0064730915803854E-7	IMPLEMENTATION	4.176860979641862E-8	DOCUMENTATION	1.0177945898516425E-8	TEST
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
//not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.9999018990538282	WITHOUT_CLASSIFICATION	3.717119916699776E-5	IMPLEMENTATION	3.668533272998672E-5	DEFECT	1.838480203056518E-5	DESIGN	3.051707299958711E-6	DOCUMENTATION	2.807904944120264E-6	TEST
// superclass entity-name	WITHOUT_CLASSIFICATION	0.9999886583188774	WITHOUT_CLASSIFICATION	9.821240243878151E-6	DESIGN	6.486360697119764E-7	IMPLEMENTATION	5.251567219042407E-7	DOCUMENTATION	1.8878338847265964E-7	DEFECT	1.5786469880721518E-7	TEST
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.981136330547121	WITHOUT_CLASSIFICATION	0.018409793069478063	DESIGN	2.7536060174821755E-4	IMPLEMENTATION	6.976146449879892E-5	DOCUMENTATION	5.7800028194921904E-5	TEST	5.0954288959062977E-5	DEFECT
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999318819182712	WITHOUT_CLASSIFICATION	2.3228290828243807E-5	IMPLEMENTATION	1.3542294776552955E-5	DEFECT	1.1215036822537524E-5	DOCUMENTATION	1.0497216809004004E-5	DESIGN	9.635242492361308E-6	TEST
//init the aliases, after initing the constructornode	WITHOUT_CLASSIFICATION	0.9999838070554675	WITHOUT_CLASSIFICATION	7.81760470485298E-6	IMPLEMENTATION	6.169965372151127E-6	DESIGN	1.8345574314561205E-6	TEST	3.0130945716485763E-7	DOCUMENTATION	6.950756680947765E-8	DEFECT
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.981136330547121	WITHOUT_CLASSIFICATION	0.018409793069478063	DESIGN	2.7536060174821755E-4	IMPLEMENTATION	6.976146449879892E-5	DOCUMENTATION	5.7800028194921904E-5	TEST	5.0954288959062977E-5	DEFECT
// legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.9999943796834146	WITHOUT_CLASSIFICATION	1.8684672387300434E-6	DESIGN	1.4930553850513147E-6	IMPLEMENTATION	1.4342227869860923E-6	TEST	7.769500512164628E-7	DOCUMENTATION	4.762112361090955E-8	DEFECT
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999970326089024	WITHOUT_CLASSIFICATION	1.6159002108166236E-6	IMPLEMENTATION	6.770382551377057E-7	DEFECT	3.7661781299527075E-7	DOCUMENTATION	2.781979089059785E-7	TEST	1.963690955452064E-8	DESIGN
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999318819182712	WITHOUT_CLASSIFICATION	2.3228290828243807E-5	IMPLEMENTATION	1.3542294776552955E-5	DEFECT	1.1215036822537524E-5	DOCUMENTATION	1.0497216809004004E-5	DESIGN	9.635242492361308E-6	TEST
//note: this affects the return value!	WITHOUT_CLASSIFICATION	0.9998744048094546	WITHOUT_CLASSIFICATION	7.39735844920266E-5	DESIGN	3.721208874776194E-5	DEFECT	8.437785298698035E-6	IMPLEMENTATION	3.2049080484748352E-6	TEST	2.7668239583892944E-6	DOCUMENTATION
// Need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.9998588879602198	WITHOUT_CLASSIFICATION	1.2305743641562685E-4	IMPLEMENTATION	1.471126196347981E-5	DEFECT	1.4323727591675505E-6	TEST	1.3867496046200666E-6	DESIGN	5.242190372977195E-7	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999965756254764	WITHOUT_CLASSIFICATION	2.8794665925906184E-6	IMPLEMENTATION	2.120676530718961E-7	DESIGN	1.8554914817895384E-7	DOCUMENTATION	1.2808259229214897E-7	TEST	1.9208537329090096E-8	DEFECT
// Collection Types:	WITHOUT_CLASSIFICATION	0.9999929729268973	WITHOUT_CLASSIFICATION	2.6792188516962378E-6	IMPLEMENTATION	1.9681473661327177E-6	DESIGN	9.047707047699783E-7	TEST	8.519343210890838E-7	DEFECT	6.230018589701397E-7	DOCUMENTATION
// convenience methods relating to operations across arrays of types...	WITHOUT_CLASSIFICATION	0.9999654281131639	WITHOUT_CLASSIFICATION	3.1319436866535524E-5	DESIGN	1.8025019445028133E-6	TEST	1.125177488257727E-6	DOCUMENTATION	1.761925636400413E-7	DEFECT	1.4857797314424876E-7	IMPLEMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9992818247795472	WITHOUT_CLASSIFICATION	6.368127321752259E-4	DESIGN	5.177808592572277E-5	IMPLEMENTATION	2.4022031727464956E-5	DEFECT	4.513220515897169E-6	TEST	1.0491501086329586E-6	DOCUMENTATION
//Blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.9999984419344454	WITHOUT_CLASSIFICATION	9.343019605468096E-7	DESIGN	2.1188815286833095E-7	DEFECT	1.6636345524300745E-7	DOCUMENTATION	1.580467928799313E-7	IMPLEMENTATION	8.746519309661321E-8	TEST
//value is the entity name	WITHOUT_CLASSIFICATION	0.9999430553250879	WITHOUT_CLASSIFICATION	1.938692444424464E-5	IMPLEMENTATION	1.2899187019864535E-5	DEFECT	1.1490440520297308E-5	DESIGN	1.020771748254242E-5	DOCUMENTATION	2.9604054451808053E-6	TEST
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9996824565809002	WITHOUT_CLASSIFICATION	1.0349582361084903E-4	IMPLEMENTATION	9.910213441945876E-5	DEFECT	4.480202252192679E-5	DOCUMENTATION	3.797036671251979E-5	DESIGN	3.2173071835142786E-5	TEST
// generate id select fragment and then property select fragment for // each expression, just like generateSelectFragments().	WITHOUT_CLASSIFICATION	0.999998167505912	WITHOUT_CLASSIFICATION	9.293424434718343E-7	DESIGN	6.632498678448626E-7	DEFECT	1.1624802323288467E-7	TEST	1.1223800719503058E-7	DOCUMENTATION	1.1415746236140698E-8	IMPLEMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9953348028300605	WITHOUT_CLASSIFICATION	0.0015387444481460603	DESIGN	0.0011033514467112023	DEFECT	9.439446381915857E-4	IMPLEMENTATION	6.762467486397806E-4	DOCUMENTATION	4.029098882509166E-4	TEST
//xml is the entity name	WITHOUT_CLASSIFICATION	0.9999586019997267	WITHOUT_CLASSIFICATION	2.105574962539689E-5	IMPLEMENTATION	6.39202310652231E-6	DOCUMENTATION	6.003280155110927E-6	TEST	5.112985975659078E-6	DEFECT	2.8339614105513218E-6	DESIGN
//special case ... this is the leaf of the containment graph, even though not immutable	WITHOUT_CLASSIFICATION	0.9994552725471647	WITHOUT_CLASSIFICATION	2.5816254259571026E-4	DEFECT	1.0194522206603772E-4	IMPLEMENTATION	8.17897749927751E-5	DOCUMENTATION	5.799751624791303E-5	DESIGN	4.483239693286364E-5	TEST
//tolerates nulls	WITHOUT_CLASSIFICATION	0.9999839065983755	WITHOUT_CLASSIFICATION	1.100687847982913E-5	IMPLEMENTATION	2.887293495972999E-6	TEST	1.0940778498365808E-6	DESIGN	6.122588655256362E-7	DEFECT	4.928929333965863E-7	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999621406741458	WITHOUT_CLASSIFICATION	1.8177493639941836E-5	IMPLEMENTATION	9.279827832118318E-6	TEST	5.7312448808949255E-6	DEFECT	3.934792237674402E-6	DOCUMENTATION	7.359672635927367E-7	DESIGN
// metaType is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.9999078852451778	WITHOUT_CLASSIFICATION	6.590659711982437E-5	DESIGN	2.5061080067705913E-5	DEFECT	8.361931706329443E-7	DOCUMENTATION	2.6203920289735073E-7	TEST	4.884526104814909E-8	IMPLEMENTATION
// Get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.999969865162303	WITHOUT_CLASSIFICATION	1.9348678082947565E-5	DESIGN	9.511230713547907E-6	IMPLEMENTATION	6.559670934220586E-7	TEST	5.755799441570587E-7	DEFECT	4.338186280003645E-8	DOCUMENTATION
// Look through the FromElement's children to find any collections of values that should be fetched...	WITHOUT_CLASSIFICATION	0.999452248525673	WITHOUT_CLASSIFICATION	4.524168050960836E-4	IMPLEMENTATION	7.252839043117363E-5	DEFECT	1.9255199144824672E-5	DESIGN	3.045791847978498E-6	TEST	5.05287806754423E-7	DOCUMENTATION
//return AssociationType.FOREIGN_KEY_TO_PARENT; //this is better but causes a transient object exception...	WITHOUT_CLASSIFICATION	0.9989746355515245	WITHOUT_CLASSIFICATION	7.400082279813612E-4	IMPLEMENTATION	1.9751549861681848E-4	DESIGN	4.950897706130751E-5	DEFECT	3.091368932886146E-5	TEST	7.418055487222289E-6	DOCUMENTATION
// Use the lower case function name. // Remember whether we're in a SELECT clause or not.	WITHOUT_CLASSIFICATION	0.9999932272284395	WITHOUT_CLASSIFICATION	6.102579430112556E-6	DESIGN	5.994798782874903E-7	DEFECT	3.852060571254314E-8	IMPLEMENTATION	1.9317378137059945E-8	DOCUMENTATION	1.2874268348395715E-8	TEST
// IDENT might be the name of a class.	WITHOUT_CLASSIFICATION	0.9999340479930792	WITHOUT_CLASSIFICATION	6.255918425595482E-5	DESIGN	1.9797464718787696E-6	IMPLEMENTATION	5.300743387415465E-7	TEST	4.483568172838097E-7	DEFECT	4.346450368976495E-7	DOCUMENTATION
//TODO!!!	WITHOUT_CLASSIFICATION	0.9944596932137902	WITHOUT_CLASSIFICATION	0.001878947551507844	DESIGN	0.0012965470090680505	DEFECT	9.696960775846767E-4	IMPLEMENTATION	9.362577993814139E-4	DOCUMENTATION	4.588583486677875E-4	TEST
//st.setTimestamp( index,  new Timestamp( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9997479708916241	WITHOUT_CLASSIFICATION	1.6878265336736645E-4	DEFECT	5.712446794210176E-5	IMPLEMENTATION	1.5050481254607844E-5	TEST	9.156803948702502E-6	DOCUMENTATION	1.9147018631672472E-6	DESIGN
//st.setDate( index,  new Date( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9999762090462067	WITHOUT_CLASSIFICATION	1.3990541794757338E-5	DEFECT	4.16105559566059E-6	IMPLEMENTATION	2.642217344725103E-6	DOCUMENTATION	2.1613524272340154E-6	TEST	8.357866311039408E-7	DESIGN
// both are Timestamps	WITHOUT_CLASSIFICATION	0.9999991707219954	WITHOUT_CLASSIFICATION	4.178907193772378E-7	IMPLEMENTATION	3.0494451807007144E-7	TEST	4.898516961757625E-8	DOCUMENTATION	3.510516376116959E-8	DESIGN	2.2352433684800078E-8	DEFECT
// at least one is a plain old Date	WITHOUT_CLASSIFICATION	0.9999251054012845	WITHOUT_CLASSIFICATION	3.928572268196007E-5	DESIGN	1.998437890521805E-5	IMPLEMENTATION	1.0483867646833191E-5	TEST	2.8120980778396517E-6	DOCUMENTATION	2.3285314034191304E-6	DEFECT
//noop	WITHOUT_CLASSIFICATION	0.9998005893879811	WITHOUT_CLASSIFICATION	5.54637812346893E-5	DOCUMENTATION	4.752019480977388E-5	DESIGN	3.764738752176299E-5	IMPLEMENTATION	3.521634700576722E-5	DEFECT	2.35629014469344E-5	TEST
// if the corresponding SQL value is NULL, the reader we got is NULL as well	WITHOUT_CLASSIFICATION	0.9994558095286271	WITHOUT_CLASSIFICATION	5.421120606139788E-4	DEFECT	9.678274631923282E-7	DESIGN	7.819380709320554E-7	TEST	1.7957531415451363E-7	IMPLEMENTATION	1.49069910708276E-7	DOCUMENTATION
// Fetch Reader content up to the end - and put characters in a StringBuffer	WITHOUT_CLASSIFICATION	0.9860656596520702	WITHOUT_CLASSIFICATION	0.013620557635223272	IMPLEMENTATION	1.3268673199342103E-4	DOCUMENTATION	8.832540818659918E-5	DEFECT	7.866912993031083E-5	DESIGN	1.4101442596308318E-5	TEST
// Return StringBuffer content as a large String	WITHOUT_CLASSIFICATION	0.9999932301507797	WITHOUT_CLASSIFICATION	2.5249715437894586E-6	IMPLEMENTATION	2.405299797580149E-6	DESIGN	1.5134029770437883E-6	DEFECT	1.9569546039757522E-7	DOCUMENTATION	1.3047944162646527E-7	TEST
//or Types.LONGVARCHAR?	WITHOUT_CLASSIFICATION	0.9999215870390139	WITHOUT_CLASSIFICATION	6.25912287344932E-5	IMPLEMENTATION	4.718844900094457E-6	DOCUMENTATION	4.462023478423413E-6	TEST	3.619926421246153E-6	DESIGN	3.020937451760573E-6	DEFECT
//Not called at runtime so doesn't matter if its slow :)	WITHOUT_CLASSIFICATION	0.9999029502789449	WITHOUT_CLASSIFICATION	4.509872170882214E-5	DESIGN	3.1546149890894495E-5	DEFECT	1.147157766216026E-5	TEST	8.193123655117876E-6	IMPLEMENTATION	7.40148138092824E-7	DOCUMENTATION
//TODO	WITHOUT_CLASSIFICATION	0.9964726152478034	WITHOUT_CLASSIFICATION	0.0013403863524572405	DESIGN	0.0010203694546678773	IMPLEMENTATION	4.4550683451246073E-4	DEFECT	4.255499040211361E-4	DOCUMENTATION	2.955722065378076E-4	TEST
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999898037878533	WITHOUT_CLASSIFICATION	4.832969384804039E-6	TEST	4.583938032588287E-6	IMPLEMENTATION	3.0041292309965236E-7	DOCUMENTATION	2.80116139914942E-7	DEFECT	1.987756663703895E-7	DESIGN
//different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.9999679011678748	WITHOUT_CLASSIFICATION	1.588070097789816E-5	IMPLEMENTATION	1.3476793004947432E-5	DESIGN	1.2632438134504727E-6	DEFECT	9.768301955570301E-7	TEST	5.012641333389126E-7	DOCUMENTATION
//cache this	WITHOUT_CLASSIFICATION	0.999830512495595	WITHOUT_CLASSIFICATION	8.014850499981457E-5	IMPLEMENTATION	3.03841275338282E-5	TEST	2.892643291011317E-5	DOCUMENTATION	2.836781717156948E-5	DESIGN	1.6606217896246351E-6	DEFECT
//only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.9991039768357143	WITHOUT_CLASSIFICATION	5.676782986399427E-4	IMPLEMENTATION	1.508460205651174E-4	DEFECT	7.056738459519626E-5	TEST	6.67381140161503E-5	DESIGN	4.019334646927995E-5	DOCUMENTATION
// Forcefully remove leading ands from where fragments; the grammar will // handle adding them	WITHOUT_CLASSIFICATION	0.9999932801542663	WITHOUT_CLASSIFICATION	4.664307978568695E-6	IMPLEMENTATION	8.418160986441644E-7	DEFECT	7.986160702639194E-7	DESIGN	3.453565329926811E-7	TEST	6.974905345019696E-8	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9899743459448009	WITHOUT_CLASSIFICATION	0.004126246976072189	IMPLEMENTATION	0.002073658586337922	DESIGN	0.0015944268867414864	DEFECT	0.0015091841588002358	DOCUMENTATION	7.221374472471115E-4	TEST
// Create a new FILTERS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999526713538058	WITHOUT_CLASSIFICATION	3.444931809390947E-5	DESIGN	8.160594471465668E-6	IMPLEMENTATION	4.138611472033411E-6	DEFECT	3.5493532327243476E-7	TEST	2.251868333777922E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999318819182712	WITHOUT_CLASSIFICATION	2.3228290828243807E-5	IMPLEMENTATION	1.3542294776552955E-5	DEFECT	1.1215036822537524E-5	DOCUMENTATION	1.0497216809004004E-5	DESIGN	9.635242492361308E-6	TEST
//public Object instantiate(Object parent, SessionImplementor session) throws HibernateException;	WITHOUT_CLASSIFICATION	0.6543565590700297	DESIGN	0.3377980286012222	WITHOUT_CLASSIFICATION	0.006408120254981257	DEFECT	0.0010158729491569578	IMPLEMENTATION	2.773847696916366E-4	TEST	1.4403435491831346E-4	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9991231128990786	WITHOUT_CLASSIFICATION	5.818243376510494E-4	IMPLEMENTATION	1.1490052765401357E-4	DEFECT	9.681139138068733E-5	DOCUMENTATION	5.722781188597987E-5	TEST	2.6123032349628253E-5	DESIGN
//nothing to do	WITHOUT_CLASSIFICATION	0.9991231128990786	WITHOUT_CLASSIFICATION	5.818243376510494E-4	IMPLEMENTATION	1.1490052765401357E-4	DEFECT	9.681139138068733E-5	DOCUMENTATION	5.722781188597987E-5	TEST	2.6123032349628253E-5	DESIGN
// VersionType impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //      Note : simply returns null for seed() and next() as the only known //      application of binary types for versioning is for use with the //      TIMESTAMP datatype supported by Sybase and SQL Server, which //      are completely db-generated values...	WITHOUT_CLASSIFICATION	0.995976930508472	WITHOUT_CLASSIFICATION	0.003638848557623164	IMPLEMENTATION	3.5314945082565635E-4	DESIGN	2.748343168017405E-5	DEFECT	3.128394255018497E-6	TEST	4.596571440782013E-7	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9992818247795472	WITHOUT_CLASSIFICATION	6.368127321752259E-4	DESIGN	5.177808592572277E-5	IMPLEMENTATION	2.4022031727464956E-5	DEFECT	4.513220515897169E-6	TEST	1.0491501086329586E-6	DOCUMENTATION
//not really necessary, I guess...	WITHOUT_CLASSIFICATION	0.9964171992133254	WITHOUT_CLASSIFICATION	0.0024831294099416654	IMPLEMENTATION	5.06983497494149E-4	DEFECT	4.958329193013427E-4	DESIGN	6.903164137959579E-5	DOCUMENTATION	2.7823318557902256E-5	TEST
//Clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.9999998163369906	WITHOUT_CLASSIFICATION	1.2104701811086134E-7	DESIGN	2.397323350267751E-8	TEST	1.9888177952973743E-8	DOCUMENTATION	1.58042636481767E-8	DEFECT	2.9503161545351515E-9	IMPLEMENTATION
// we do not have to worry about queued additions to uninitialized // collections, since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.9999337793194039	WITHOUT_CLASSIFICATION	3.6379154492348146E-5	IMPLEMENTATION	1.4924717049540883E-5	DESIGN	1.381702639850863E-5	DEFECT	8.677957839100653E-7	TEST	2.3198687177508952E-7	DOCUMENTATION
// collections cannot be compared	WITHOUT_CLASSIFICATION	0.9977042378042107	WITHOUT_CLASSIFICATION	0.00180171021742537	DESIGN	4.368843807098464E-4	IMPLEMENTATION	4.9346250941738755E-5	DEFECT	7.287885044511181E-6	TEST	5.334616679781447E-7	DOCUMENTATION
//remember the uk value	WITHOUT_CLASSIFICATION	0.9999883268743501	WITHOUT_CLASSIFICATION	6.030725315106759E-6	IMPLEMENTATION	2.3019998350515895E-6	DESIGN	1.2639933765159165E-6	DEFECT	1.0521039363860795E-6	TEST	1.024303186737769E-6	DOCUMENTATION
//NOOP	WITHOUT_CLASSIFICATION	0.9997535661625889	WITHOUT_CLASSIFICATION	7.072228912945676E-5	DESIGN	5.2298857889816355E-5	TEST	5.173141984663425E-5	DOCUMENTATION	3.67190244870197E-5	IMPLEMENTATION	3.496224605809572E-5	DEFECT
//processCollectionProperty(token, q.getCollectionPersister(collectionRole), collectionName);	WITHOUT_CLASSIFICATION	0.9995674970324055	WITHOUT_CLASSIFICATION	2.5335093778114886E-4	DESIGN	1.177655128027089E-4	DEFECT	4.784019983164425E-5	TEST	6.818634964578021E-6	DOCUMENTATION	6.727682214369221E-6	IMPLEMENTATION
//we must use the "remembered" uk value, since it is  //not available from the EntityEntry during assembly	WITHOUT_CLASSIFICATION	0.9995774565319124	WITHOUT_CLASSIFICATION	4.1770779040319826E-4	DESIGN	3.906977030445334E-6	TEST	8.324841471749908E-7	DEFECT	8.092412454834454E-8	DOCUMENTATION	1.5292382193142218E-8	IMPLEMENTATION
// collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.9989393781812095	WITHOUT_CLASSIFICATION	7.737348279635647E-4	IMPLEMENTATION	2.631851308608613E-4	DESIGN	1.9524233408817327E-5	DEFECT	2.9128705880008277E-6	TEST	1.2647559692480432E-6	DOCUMENTATION
// return false;	WITHOUT_CLASSIFICATION	0.999986451225446	WITHOUT_CLASSIFICATION	1.2047495250307988E-5	DESIGN	1.1174959928280039E-6	IMPLEMENTATION	2.0116733046188023E-7	DEFECT	1.1519401388934165E-7	DOCUMENTATION	6.742196638914818E-8	TEST
// This just handles a particular case of component // projection, perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.9995836602952121	WITHOUT_CLASSIFICATION	3.7709363873741485E-4	DESIGN	3.834512042975448E-5	DEFECT	5.091796072951459E-7	IMPLEMENTATION	2.0024852008006017E-7	DOCUMENTATION	1.9151749327710892E-7	TEST
//NOTE: we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.9999064207995921	WITHOUT_CLASSIFICATION	8.69382027612801E-5	DEFECT	4.980954073797998E-6	DESIGN	6.376652754873273E-7	TEST	5.167953998996063E-7	DOCUMENTATION	5.055828974985102E-7	IMPLEMENTATION
// the key is the owning entity itself, so get the ID from the key	WITHOUT_CLASSIFICATION	0.9999983904539801	WITHOUT_CLASSIFICATION	9.978833718546848E-7	IMPLEMENTATION	2.7243518153099967E-7	DESIGN	1.484658010962955E-7	TEST	1.333588035968012E-7	DOCUMENTATION	5.740286177474971E-8	DEFECT
// if the original is a PersistentCollection, and that original // was not flagged as dirty, then reset the target's dirty flag // here after the copy operation. // </p> // One thing to be careful of here is a "bare" original collection // in which case we should never ever ever reset the dirty flag // on the target because we simply do not know...	WITHOUT_CLASSIFICATION	0.9996481491991587	WITHOUT_CLASSIFICATION	3.4413114260997566E-4	IMPLEMENTATION	6.0111338034011E-6	DESIGN	1.4965935115980936E-6	DEFECT	1.972444354155662E-7	TEST	1.4686481048462412E-8	DOCUMENTATION
//ignore subselect keywords	WITHOUT_CLASSIFICATION	0.9999997074942671	WITHOUT_CLASSIFICATION	1.8131332779882192E-7	IMPLEMENTATION	6.102221522697442E-8	DEFECT	3.4896251305711086E-8	DOCUMENTATION	1.0965230675380873E-8	TEST	4.308707860331736E-9	DESIGN
// copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.9999998109532331	WITHOUT_CLASSIFICATION	1.1653858992853965E-7	DESIGN	2.9078552348080015E-8	IMPLEMENTATION	2.5704045217162222E-8	DOCUMENTATION	9.855542261085937E-9	TEST	7.87003720366945E-9	DEFECT
// for a null target, or a target which is the same as the original, we // need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.9999828113770327	WITHOUT_CLASSIFICATION	1.6940882859861773E-5	DESIGN	1.8384665546421528E-7	DOCUMENTATION	3.208997302228059E-8	DEFECT	2.0734687788584547E-8	TEST	1.1068791120052161E-8	IMPLEMENTATION
// by default just use an unanticipated capacity since we don't // know how to extract the capacity to use from original here...	WITHOUT_CLASSIFICATION	0.9893743756948117	WITHOUT_CLASSIFICATION	0.01061813861719117	IMPLEMENTATION	5.820985663881689E-6	DESIGN	1.1214337756337176E-6	DOCUMENTATION	3.0798487942736756E-7	TEST	2.3528367809233692E-7	DEFECT
// get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.9999848510084813	WITHOUT_CLASSIFICATION	1.0665161203256316E-5	IMPLEMENTATION	4.126206037422518E-6	DESIGN	2.573919145559618E-7	DEFECT	7.870134644922759E-8	DOCUMENTATION	2.1531017103722673E-8	TEST
// check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.9994480311438096	WITHOUT_CLASSIFICATION	2.6601600173943964E-4	IMPLEMENTATION	1.584940688505967E-4	DESIGN	1.087490869591163E-4	DEFECT	1.1486912821473767E-5	TEST	7.2227858197087455E-6	DOCUMENTATION
// check if it is already completely loaded, but unowned	WITHOUT_CLASSIFICATION	0.9998963231308146	WITHOUT_CLASSIFICATION	9.910712886898745E-5	IMPLEMENTATION	2.149432177913738E-6	DEFECT	1.2774330202746671E-6	TEST	9.489024893223398E-7	DESIGN	1.939726290638119E-7	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999995925222901	WITHOUT_CLASSIFICATION	2.000292290319029E-7	IMPLEMENTATION	1.0330677032399615E-7	DEFECT	6.188852176309601E-8	DESIGN	4.069504919638964E-8	DOCUMENTATION	1.55813956394152E-9	TEST
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9899743459448009	WITHOUT_CLASSIFICATION	0.004126246976072189	IMPLEMENTATION	0.002073658586337922	DESIGN	0.0015944268867414864	DEFECT	0.0015091841588002358	DOCUMENTATION	7.221374472471115E-4	TEST
// create a new collection wrapper, to be initialized later	WITHOUT_CLASSIFICATION	0.9999865128406301	WITHOUT_CLASSIFICATION	7.2852035918578895E-6	DESIGN	3.8439725576750635E-6	IMPLEMENTATION	1.871877991095942E-6	DEFECT	3.095283038639212E-7	TEST	1.7657692545640017E-7	DOCUMENTATION
// Some JDBC drivers erroneously return an empty array here for a null DB value :/	WITHOUT_CLASSIFICATION	0.9999231991544529	WITHOUT_CLASSIFICATION	7.32413429724644E-5	DESIGN	2.2998415909724348E-6	DEFECT	1.2131728332696706E-6	IMPLEMENTATION	2.856500760027926E-8	DOCUMENTATION	1.7923142805691675E-8	TEST
// our column span is the number of columns in the PK	WITHOUT_CLASSIFICATION	0.999997850336027	WITHOUT_CLASSIFICATION	9.898363401474353E-7	DEFECT	9.205698937583854E-7	DESIGN	1.4596036401440196E-7	DOCUMENTATION	7.297828315677806E-8	TEST	2.0319091975458138E-8	IMPLEMENTATION
//cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.9999565894861872	WITHOUT_CLASSIFICATION	2.128453811217888E-5	IMPLEMENTATION	8.609252005834423E-6	DESIGN	6.888814988753197E-6	DEFECT	3.7066270634368537E-6	DOCUMENTATION	2.9212816426422153E-6	TEST
// we already know current is not null...	WITHOUT_CLASSIFICATION	0.997026079904812	WITHOUT_CLASSIFICATION	0.0023038312902211996	IMPLEMENTATION	5.429186384244484E-4	DEFECT	1.035886575502645E-4	DOCUMENTATION	1.2432900019719653E-5	TEST	1.1148608972360087E-5	DESIGN
// the ids are fully resolved, so compare them with isDirty(), not isModified()	WITHOUT_CLASSIFICATION	0.9999211704345223	WITHOUT_CLASSIFICATION	7.075375535191317E-5	IMPLEMENTATION	4.034077314067381E-6	DEFECT	2.315555873315732E-6	TEST	1.5835295181152197E-6	DESIGN	1.426474202255614E-7	DOCUMENTATION
//the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.9999446033703607	WITHOUT_CLASSIFICATION	2.303664383884288E-5	DEFECT	1.885023806570715E-5	TEST	5.9638461387523286E-6	DESIGN	4.819115184523694E-6	IMPLEMENTATION	2.726786411432774E-6	DOCUMENTATION
// ----------------------------------------------------------- Constructors	WITHOUT_CLASSIFICATION	0.9999908615774352	WITHOUT_CLASSIFICATION	3.95267670671173E-6	IMPLEMENTATION	2.7045120167443E-6	DESIGN	9.426645249782751E-7	TEST	8.653151429724257E-7	DOCUMENTATION	6.73254173401337E-7	DEFECT
// ----------------------------------------------------- Instance Variables	WITHOUT_CLASSIFICATION	0.9999898105435501	WITHOUT_CLASSIFICATION	5.726505534563118E-6	DESIGN	3.3087553402704358E-6	IMPLEMENTATION	6.649125776405237E-7	DEFECT	3.6539135915077925E-7	DOCUMENTATION	1.2389163826155622E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// --------------------------------------------------------- Public Methods	WITHOUT_CLASSIFICATION	0.9999701472951877	WITHOUT_CLASSIFICATION	2.3551929642826016E-5	DESIGN	2.796846670406515E-6	IMPLEMENTATION	2.1209352880349143E-6	DOCUMENTATION	7.964962191900055E-7	TEST	5.864969918619876E-7	DEFECT
// Compare the two maps for equality	WITHOUT_CLASSIFICATION	0.9998855742620497	WITHOUT_CLASSIFICATION	6.429836990721334E-5	IMPLEMENTATION	4.516802023617423E-5	DESIGN	2.1777935622528612E-6	DEFECT	2.092648940946364E-6	TEST	6.889053036799454E-7	DOCUMENTATION
// Simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.9999358634518833	WITHOUT_CLASSIFICATION	5.509954277548609E-5	TEST	7.334306425071846E-6	DOCUMENTATION	1.4384478863337514E-6	IMPLEMENTATION	1.9206338939456505E-7	DESIGN	7.218764042293198E-8	DEFECT
//Sybase fail if we don't do that, sigh...	WITHOUT_CLASSIFICATION	0.9998484770378475	WITHOUT_CLASSIFICATION	1.0993229998011488E-4	DESIGN	2.7474637645357964E-5	TEST	1.044891289306891E-5	DOCUMENTATION	2.614789207701599E-6	DEFECT	1.0523224261435288E-6	IMPLEMENTATION
// Handles things like: // a and b or c // a and ( b or c ) // not a and not b // not ( a and b ) // x between y and z            (overloaded "and") // x in ( a, b, c )             (overloaded brackets) // not not a // a is not null                (overloaded "not") // etc...... // and expressions like // foo = bar                    (maps to: foo.id = bar.id) // foo.Bar = 'foo'              (maps to: foo.bar = 'foo') // foo.Bar.Baz = 1.0            (maps to: foo.bar = bar.id and bar.baz = 1.0) // 1.0 = foo.Bar.Baz            (maps to: bar.baz = 1.0 and foo.Bar = bar.id) // foo.Bar.Baz = a.B.C          (maps to: bar.Baz = b.C and foo.Bar = bar.id and a.B = b.id) // foo.Bar.Baz + a.B.C          (maps to: bar.Baz + b.C and foo.Bar = bar.id and a.B = b.id) // ( foo.Bar.Baz + 1.0 ) < 2.0  (maps to: ( bar.Baz + 1.0 ) < 2.0 and foo.Bar = bar.id)	WITHOUT_CLASSIFICATION	0.9486072426559634	WITHOUT_CLASSIFICATION	0.03253903033522479	DESIGN	0.018832700255385356	DEFECT	1.265200663944481E-5	IMPLEMENTATION	5.9688881432432725E-6	TEST	2.40585864362539E-6	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.998643180459956	WITHOUT_CLASSIFICATION	0.0010707389939199152	IMPLEMENTATION	2.363728839669932E-4	DESIGN	4.1915756387410755E-5	DOCUMENTATION	6.533966013569229E-6	TEST	1.2579397562123337E-6	DEFECT
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.998643180459956	WITHOUT_CLASSIFICATION	0.0010707389939199152	IMPLEMENTATION	2.363728839669932E-4	DESIGN	4.1915756387410755E-5	DOCUMENTATION	6.533966013569229E-6	TEST	1.2579397562123337E-6	DEFECT
// try to "pretty print" it	WITHOUT_CLASSIFICATION	0.9999757492208685	WITHOUT_CLASSIFICATION	1.0701860701005764E-5	IMPLEMENTATION	7.026394903828663E-6	DESIGN	4.913818441776818E-6	DOCUMENTATION	9.370029422303415E-7	DEFECT	6.717021426388273E-7	TEST
// otherwise, just dump it	WITHOUT_CLASSIFICATION	0.9998853922138624	WITHOUT_CLASSIFICATION	1.0890244912716835E-4	IMPLEMENTATION	2.580964213596873E-6	TEST	1.8587811417468935E-6	DESIGN	7.013625493952663E-7	DOCUMENTATION	5.642291054443227E-7	DEFECT
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9999848038547746	WITHOUT_CLASSIFICATION	1.2698167394098917E-5	DESIGN	8.458795026858923E-7	TEST	8.360009878059043E-7	DEFECT	5.978190759305667E-7	DOCUMENTATION	2.1827826473610773E-7	IMPLEMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9999848038547746	WITHOUT_CLASSIFICATION	1.2698167394098917E-5	DESIGN	8.458795026858923E-7	TEST	8.360009878059043E-7	DEFECT	5.978190759305667E-7	DOCUMENTATION	2.1827826473610773E-7	IMPLEMENTATION
// use default behavior	WITHOUT_CLASSIFICATION	0.9999987897553043	WITHOUT_CLASSIFICATION	7.414063690827744E-7	DESIGN	3.296611465898962E-7	IMPLEMENTATION	6.07549436319156E-8	DEFECT	5.7000172698496835E-8	DOCUMENTATION	2.142206376194997E-8	TEST
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9999603897426267	WITHOUT_CLASSIFICATION	1.4643776269392459E-5	IMPLEMENTATION	1.2085211931625009E-5	DEFECT	1.0311448876915757E-5	DESIGN	1.7650658984292841E-6	DOCUMENTATION	8.04754396932254E-7	TEST
// the MRU cache used to keep hard references to the most recently used query plans; // note : LRU here is a bit of a misnomer, it indicates that LRU entries are removed, the // actual kept entries are the MRU entries	WITHOUT_CLASSIFICATION	0.9336690338497553	WITHOUT_CLASSIFICATION	0.06126619268956983	IMPLEMENTATION	0.005050084120032205	DESIGN	7.20602173668825E-6	DEFECT	5.122845933128243E-6	TEST	2.360472972725374E-6	DOCUMENTATION
// we want to be able to just use the defaults, // if JNDI environment properties are not supplied // so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.9998347409774843	WITHOUT_CLASSIFICATION	1.4497850928164047E-4	DESIGN	1.2804139216419083E-5	DEFECT	3.635999819399911E-6	TEST	2.9689285996494135E-6	IMPLEMENTATION	8.714455984920379E-7	DOCUMENTATION
// Clone //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999962975270188	WITHOUT_CLASSIFICATION	1.8377744775933416E-6	DESIGN	7.828028819582483E-7	DEFECT	4.664629978717044E-7	DOCUMENTATION	3.212472418594184E-7	TEST	2.9418538168734404E-7	IMPLEMENTATION
// Serialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999990642685218	WITHOUT_CLASSIFICATION	4.113249373106315E-7	DESIGN	2.8816561144941104E-7	DEFECT	1.26504430767647E-7	DOCUMENTATION	5.95760890732327E-8	IMPLEMENTATION	5.0160409361241885E-8	TEST
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999988565489785	WITHOUT_CLASSIFICATION	3.512293556074962E-7	DEFECT	3.378471631353931E-7	DESIGN	2.4422366482152746E-7	IMPLEMENTATION	1.3529633803182473E-7	DOCUMENTATION	7.48545000367865E-8	TEST
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999988565489785	WITHOUT_CLASSIFICATION	3.512293556074962E-7	DEFECT	3.378471631353931E-7	DESIGN	2.4422366482152746E-7	IMPLEMENTATION	1.3529633803182473E-7	DOCUMENTATION	7.48545000367865E-8	TEST
// Deserialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999992268999703	WITHOUT_CLASSIFICATION	3.2872379846165377E-7	IMPLEMENTATION	1.7425869101165236E-7	DEFECT	1.0274240919909607E-7	DESIGN	9.257079335310463E-8	DOCUMENTATION	7.480433755047567E-8	TEST
/* static methods only - hide constructor */	WITHOUT_CLASSIFICATION	0.9999930552135942	WITHOUT_CLASSIFICATION	3.3996883769259146E-6	IMPLEMENTATION	1.7945521134425995E-6	DESIGN	9.271063741543019E-7	TEST	7.212267687925449E-7	DOCUMENTATION	1.0221277251237673E-7	DEFECT
/*&& !('_'==character)*/	WITHOUT_CLASSIFICATION	0.9999882299656063	WITHOUT_CLASSIFICATION	4.047237527768958E-6	TEST	3.788859651251121E-6	IMPLEMENTATION	1.7636151969774648E-6	DOCUMENTATION	1.6495882484809002E-6	DESIGN	5.207337691857354E-7	DEFECT
// returnign null!	WITHOUT_CLASSIFICATION	0.9999958937089937	WITHOUT_CLASSIFICATION	2.521272287008309E-6	IMPLEMENTATION	8.81770184514777E-7	DESIGN	3.4532900939732467E-7	DEFECT	2.9006614034308067E-7	DOCUMENTATION	6.785338504365853E-8	TEST
// returnign null!	WITHOUT_CLASSIFICATION	0.9999958937089937	WITHOUT_CLASSIFICATION	2.521272287008309E-6	IMPLEMENTATION	8.81770184514777E-7	DESIGN	3.4532900939732467E-7	DEFECT	2.9006614034308067E-7	DOCUMENTATION	6.785338504365853E-8	TEST
// includes last '.'	WITHOUT_CLASSIFICATION	0.9999902304012918	WITHOUT_CLASSIFICATION	4.389176381963505E-6	DESIGN	2.165578410177597E-6	DEFECT	1.5468847713477582E-6	TEST	1.1525252707286401E-6	DOCUMENTATION	5.154338739892833E-7	IMPLEMENTATION
// +1 to include the following '.'	WITHOUT_CLASSIFICATION	0.9999119364493612	WITHOUT_CLASSIFICATION	4.430321627613438E-5	DEFECT	2.7107745042644542E-5	IMPLEMENTATION	7.281132246663312E-6	DOCUMENTATION	6.901471425789968E-6	DESIGN	2.4699856476273048E-6	TEST
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9999882946409284	WITHOUT_CLASSIFICATION	5.985708948295411E-6	DESIGN	4.602973677699932E-6	IMPLEMENTATION	7.981623005897143E-7	DEFECT	2.9453479979941717E-7	TEST	2.3979345114987796E-8	DOCUMENTATION
// first time we find match!	WITHOUT_CLASSIFICATION	0.9999932683384317	WITHOUT_CLASSIFICATION	4.09269464239471E-6	IMPLEMENTATION	1.322152023043238E-6	DOCUMENTATION	5.541050098709568E-7	TEST	4.420717602918201E-7	DESIGN	3.2063813264198336E-7	DEFECT
// entityNames may now include slashes for the representations //classname may be an inner class	WITHOUT_CLASSIFICATION	0.9997815810132816	WITHOUT_CLASSIFICATION	2.1593429238198476E-4	DESIGN	1.43535616341026E-6	DEFECT	6.777489425909555E-7	IMPLEMENTATION	1.9513088673553145E-7	TEST	1.7645834377331954E-7	DOCUMENTATION
// wrapped iterators	WITHOUT_CLASSIFICATION	0.9999956604435295	WITHOUT_CLASSIFICATION	3.529780186325485E-6	IMPLEMENTATION	4.42448497335874E-7	TEST	1.7658354029756309E-7	DEFECT	9.653009913360523E-8	DOCUMENTATION	9.421414736531023E-8	DESIGN
// index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.9999758815743185	WITHOUT_CLASSIFICATION	1.224964693351013E-5	DEFECT	4.960003796876851E-6	IMPLEMENTATION	3.36527510407894E-6	DESIGN	2.412991343768803E-6	TEST	1.1305085032848888E-6	DOCUMENTATION
// the current iterator	WITHOUT_CLASSIFICATION	0.999991521254938	WITHOUT_CLASSIFICATION	5.908654850954925E-6	IMPLEMENTATION	1.0770851182261204E-6	DESIGN	7.781817265286093E-7	TEST	6.534712244748266E-7	DOCUMENTATION	6.135214181337922E-8	DEFECT
// the last used iterator	WITHOUT_CLASSIFICATION	0.9999995638247426	WITHOUT_CLASSIFICATION	2.0826546537127083E-7	DESIGN	1.3737345242607032E-7	TEST	7.170969802774863E-8	IMPLEMENTATION	1.2917909214501288E-8	DOCUMENTATION	5.908732393957368E-9	DEFECT
//it was a boolean expression	WITHOUT_CLASSIFICATION	0.9999188874129058	WITHOUT_CLASSIFICATION	5.3007292758532344E-5	DESIGN	2.4928408593660543E-5	DEFECT	1.5946808026610116E-6	TEST	9.119350580630538E-7	DOCUMENTATION	6.702698813411206E-7	IMPLEMENTATION
/*public static Object[] clone(Class elementClass, Object[] array) {	WITHOUT_CLASSIFICATION	0.9998001073696655	WITHOUT_CLASSIFICATION	1.9738546404540977E-4	DESIGN	1.3899205058579285E-6	DOCUMENTATION	7.224079072928352E-7	DEFECT	2.9351142803426135E-7	TEST	1.0132644769160563E-7	IMPLEMENTATION
// call this before any Iterator method to make sure that the current Iterator // is not exhausted	WITHOUT_CLASSIFICATION	0.9989776816627329	WITHOUT_CLASSIFICATION	7.866129658618923E-4	IMPLEMENTATION	1.1679083898886986E-4	DESIGN	1.0161336400665372E-4	DEFECT	1.5210123202631325E-5	TEST	2.091045206970234E-6	DOCUMENTATION
//doable if needed	WITHOUT_CLASSIFICATION	0.9807460253331599	WITHOUT_CLASSIFICATION	0.012332322389400394	IMPLEMENTATION	0.006452547569239649	DESIGN	2.4592431712731135E-4	TEST	1.867948239577026E-4	DOCUMENTATION	3.6385567115095165E-5	DEFECT
// set last used iterator here, in case the user calls remove // before calling hasNext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.9999975036789558	WITHOUT_CLASSIFICATION	1.7444953325717915E-6	DEFECT	4.244687401823181E-7	TEST	2.4914192050489823E-7	IMPLEMENTATION	7.726841721902061E-8	DESIGN	9.466336128665024E-10	DOCUMENTATION
// peek ahead	WITHOUT_CLASSIFICATION	0.9999353206769545	WITHOUT_CLASSIFICATION	6.09776838411608E-5	IMPLEMENTATION	2.3635981167015335E-6	DOCUMENTATION	6.701478495069587E-7	TEST	4.198103499778811E-7	DEFECT	2.4808288815488344E-7	DESIGN
// if we reach the end of the string w/o finding the // matching end, that is an exception	WITHOUT_CLASSIFICATION	0.99999666081634	WITHOUT_CLASSIFICATION	3.207820150767395E-6	DEFECT	6.410877625478514E-8	TEST	3.2730021461524926E-8	DESIGN	2.865539433876342E-8	DOCUMENTATION	5.8693171151626405E-9	IMPLEMENTATION
// we have a placeholder, spin forward till we find the end	WITHOUT_CLASSIFICATION	0.9984659267589099	WITHOUT_CLASSIFICATION	0.0015043744692987476	IMPLEMENTATION	2.1271148027441298E-5	DEFECT	4.118217546357013E-6	DESIGN	4.029435428038905E-6	DOCUMENTATION	2.799707895901909E-7	TEST
// make sure spinning forward did not put us past the end of the buffer...	WITHOUT_CLASSIFICATION	0.9998798329625436	WITHOUT_CLASSIFICATION	6.717064035750287E-5	DEFECT	5.0899589440521154E-5	IMPLEMENTATION	1.1244194536082422E-6	DESIGN	7.28913093362436E-7	TEST	2.4347511135431257E-7	DOCUMENTATION
// First, try to locate this resource through the current // context classloader.	WITHOUT_CLASSIFICATION	0.9999725611372303	WITHOUT_CLASSIFICATION	1.1740484222311605E-5	IMPLEMENTATION	9.40197936990365E-6	DOCUMENTATION	3.4594010191978032E-6	TEST	2.3977233571883796E-6	DESIGN	4.392748010707162E-7	DEFECT
// Next, try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.9999700341880294	WITHOUT_CLASSIFICATION	2.2428647041257863E-5	DESIGN	3.7603938585133697E-6	TEST	2.5052671344954062E-6	DOCUMENTATION	8.935056711521769E-7	DEFECT	3.7799826505126876E-7	IMPLEMENTATION
// Next, try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.9999891931051633	WITHOUT_CLASSIFICATION	3.820119808870043E-6	IMPLEMENTATION	3.5653932755920143E-6	DESIGN	1.6547507042980198E-6	TEST	1.4820491042242164E-6	DOCUMENTATION	2.845819438214373E-7	DEFECT
// Anywhere else we should look?	WITHOUT_CLASSIFICATION	0.9960232303370786	WITHOUT_CLASSIFICATION	0.0031375823415121635	DESIGN	7.502524556202244E-4	IMPLEMENTATION	5.929977689857111E-5	DEFECT	1.663276456342674E-5	DOCUMENTATION	1.3002324327111486E-5	TEST
// would need an IdentitySet for this!	WITHOUT_CLASSIFICATION	0.9895922130288822	WITHOUT_CLASSIFICATION	0.008730733826563464	DESIGN	0.001133917696051309	IMPLEMENTATION	4.165234085804154E-4	TEST	1.0396859671914227E-4	DOCUMENTATION	2.2643443203423848E-5	DEFECT
//Arrays.asList doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.999984381798497	WITHOUT_CLASSIFICATION	5.3472955210449315E-6	TEST	4.72077264858953E-6	IMPLEMENTATION	2.7662138696620847E-6	DEFECT	2.060962900148212E-6	DOCUMENTATION	7.229565635114939E-7	DESIGN
//faster?	WITHOUT_CLASSIFICATION	0.9995559918565315	WITHOUT_CLASSIFICATION	4.0354743076926816E-4	DESIGN	1.9396528268636133E-5	TEST	1.2132636058013659E-5	IMPLEMENTATION	6.135124045146332E-6	DOCUMENTATION	2.7964243276202605E-6	DEFECT
// the name of a class	WITHOUT_CLASSIFICATION	0.9999989249722875	WITHOUT_CLASSIFICATION	8.137900856739271E-7	DESIGN	1.4266874555761764E-7	DOCUMENTATION	6.156987532074982E-8	TEST	3.254063097734581E-8	IMPLEMENTATION	2.4458374914299913E-8	DEFECT
// Its the listener class name	WITHOUT_CLASSIFICATION	0.9999973659515152	WITHOUT_CLASSIFICATION	2.397201787959467E-6	DESIGN	1.2817415702815927E-7	IMPLEMENTATION	7.15890869123328E-8	TEST	3.3027309909741375E-8	DOCUMENTATION	4.056142924263837E-9	DEFECT
//allow 9,8,7,6,5,4,3,2,1	WITHOUT_CLASSIFICATION	0.9997660060763036	WITHOUT_CLASSIFICATION	9.32658752762564E-5	DEFECT	7.241873997538402E-5	IMPLEMENTATION	2.6921073426461185E-5	TEST	2.077853527325887E-5	DOCUMENTATION	2.0609699744962747E-5	DESIGN
// default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.9999985345424796	WITHOUT_CLASSIFICATION	1.1912215181117694E-6	IMPLEMENTATION	2.2982404460282483E-7	DOCUMENTATION	1.7995387446105536E-8	DESIGN	1.594118818606313E-8	TEST	1.0475381898887568E-8	DEFECT
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.999946530148312	WITHOUT_CLASSIFICATION	3.628463388226937E-5	IMPLEMENTATION	1.5853064939038388E-5	DESIGN	6.416626387179949E-7	DOCUMENTATION	6.018058714353142E-7	DEFECT	8.868435645655535E-8	TEST
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9999713301767607	WITHOUT_CLASSIFICATION	2.667071719551854E-5	IMPLEMENTATION	1.962513648127259E-6	DESIGN	2.0836657292526322E-8	DOCUMENTATION	9.809794856522633E-9	TEST	5.945943674822032E-9	DEFECT
// first, lets determine whether to apply cglib or javassist based instrumentation...	WITHOUT_CLASSIFICATION	0.9162527612076189	WITHOUT_CLASSIFICATION	0.08367176266176884	DESIGN	3.6033684688570637E-5	DOCUMENTATION	1.8968407693046957E-5	TEST	1.729683261633834E-5	IMPLEMENTATION	3.177205614360421E-6	DEFECT
// Make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.9999947989458667	WITHOUT_CLASSIFICATION	2.6173020482468717E-6	DEFECT	2.144518505214045E-6	DESIGN	3.1449456788138707E-7	IMPLEMENTATION	9.217784099165972E-8	DOCUMENTATION	3.2561170835317175E-8	TEST
//entirely optional!!	WITHOUT_CLASSIFICATION	0.9998544111800551	WITHOUT_CLASSIFICATION	4.679672418654417E-5	DEFECT	4.039395075135199E-5	IMPLEMENTATION	3.944512659038731E-5	DOCUMENTATION	1.3900531047517266E-5	DESIGN	5.052487369046804E-6	TEST
// Its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.9998787720061351	WITHOUT_CLASSIFICATION	6.741416275239862E-5	DESIGN	5.332273304102993E-5	IMPLEMENTATION	2.0756153556217444E-7	DOCUMENTATION	1.46671755884022E-7	DEFECT	1.3686478002474577E-7	TEST
//context.unbind(boundName);	WITHOUT_CLASSIFICATION	0.9995065024880998	WITHOUT_CLASSIFICATION	1.7092360680976253E-4	IMPLEMENTATION	1.59850675602169E-4	DEFECT	8.002658308344953E-5	DOCUMENTATION	5.515083459470992E-5	TEST	2.7545811810060088E-5	DESIGN
//readResolveObject	WITHOUT_CLASSIFICATION	0.9997277021007679	WITHOUT_CLASSIFICATION	1.8572589840649617E-4	IMPLEMENTATION	2.8915852941269344E-5	DOCUMENTATION	2.173204504410584E-5	DESIGN	1.986465834241601E-5	DEFECT	1.6059444497816833E-5	TEST
//cfg.setProperty("hibernate.show_sql", "true");	WITHOUT_CLASSIFICATION	0.9999987826024748	WITHOUT_CLASSIFICATION	5.283332324273193E-7	IMPLEMENTATION	3.692211880120803E-7	DEFECT	1.5794188367803465E-7	TEST	8.959571103837536E-8	DESIGN	7.230551007449693E-8	DOCUMENTATION
// Defensive, convenience methods	WITHOUT_CLASSIFICATION	0.9999897384633698	WITHOUT_CLASSIFICATION	5.030162992706407E-6	IMPLEMENTATION	2.612825339069538E-6	DESIGN	2.2050973551538137E-6	DOCUMENTATION	3.5379306684612244E-7	TEST	5.965787645419352E-8	DEFECT
// Create the SessionFactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.999997043992713	WITHOUT_CLASSIFICATION	2.1007556315516242E-6	DESIGN	3.267291220741883E-7	TEST	2.6601534387096834E-7	IMPLEMENTATION	1.650545926887975E-7	DOCUMENTATION	9.745259660436767E-8	DEFECT
// Make sure you log the exception, as it might be swallowed	WITHOUT_CLASSIFICATION	0.9999890354651984	WITHOUT_CLASSIFICATION	3.853191106817249E-6	DESIGN	3.5018494335643587E-6	DEFECT	3.4942756176525327E-6	IMPLEMENTATION	7.424726816672239E-8	TEST	4.097137550499685E-8	DOCUMENTATION
// Begin unit of work	WITHOUT_CLASSIFICATION	0.9998563919348158	WITHOUT_CLASSIFICATION	1.0768833500601253E-4	DEFECT	1.6497221634812538E-5	IMPLEMENTATION	1.0456842613132118E-5	DOCUMENTATION	5.329789603197385E-6	TEST	3.635876327142867E-6	DESIGN
// Write HTML header	WITHOUT_CLASSIFICATION	0.9999912157892531	WITHOUT_CLASSIFICATION	6.456026928507993E-6	IMPLEMENTATION	8.490382914507416E-7	DEFECT	6.297547106959722E-7	DESIGN	5.247848911047756E-7	DOCUMENTATION	3.246059250941248E-7	TEST
// Handle actions	WITHOUT_CLASSIFICATION	0.9999506051502013	WITHOUT_CLASSIFICATION	2.4145334519583153E-5	IMPLEMENTATION	2.3940366016762273E-5	DESIGN	9.98286106494647E-7	DOCUMENTATION	1.9861222304189382E-7	TEST	1.1225093287500607E-7	DEFECT
// Print page	WITHOUT_CLASSIFICATION	0.9999531755958666	WITHOUT_CLASSIFICATION	3.756301211116194E-5	IMPLEMENTATION	3.454287025813142E-6	DEFECT	2.5061397689926352E-6	DOCUMENTATION	2.3906448874664317E-6	TEST	9.103203399401938E-7	DESIGN
// Write HTML footer	WITHOUT_CLASSIFICATION	0.9999972418100985	WITHOUT_CLASSIFICATION	9.795890102938961E-7	DESIGN	9.214690773325863E-7	DEFECT	5.419710941758559E-7	IMPLEMENTATION	1.609341759650918E-7	TEST	1.5422654379703276E-7	DOCUMENTATION
// End unit of work	WITHOUT_CLASSIFICATION	0.9996554844126689	WITHOUT_CLASSIFICATION	2.440304722757736E-4	DEFECT	5.068916809868656E-5	IMPLEMENTATION	2.46816222310116E-5	DESIGN	1.3817678525626253E-5	TEST	1.1296646200019875E-5	DOCUMENTATION
// Start the session to be used for this request	WITHOUT_CLASSIFICATION	0.9999286262723096	WITHOUT_CLASSIFICATION	4.936577751631194E-5	DESIGN	1.077769069487781E-5	TEST	6.315836948764883E-6	DEFECT	4.443346515903424E-6	IMPLEMENTATION	4.710760144486122E-7	DOCUMENTATION
// make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.9995030737736869	WITHOUT_CLASSIFICATION	4.647807151408331E-4	DESIGN	1.1020070697671925E-5	DOCUMENTATION	1.0481877870224476E-5	DEFECT	6.483554849471659E-6	IMPLEMENTATION	4.160007754945616E-6	TEST
// pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.9999903570787376	WITHOUT_CLASSIFICATION	3.633606796664292E-6	IMPLEMENTATION	2.48606190617892E-6	TEST	2.159167348284516E-6	DEFECT	7.882238273857518E-7	DOCUMENTATION	5.758613838617331E-7	DESIGN
// remove session from "current context"	WITHOUT_CLASSIFICATION	0.9997319036136276	WITHOUT_CLASSIFICATION	1.9440171324442803E-4	DESIGN	3.7417398679042244E-5	DEFECT	1.9523740219024136E-5	IMPLEMENTATION	1.1006795045851542E-5	DOCUMENTATION	5.746739183992235E-6	TEST
// Eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.9998379475307538	WITHOUT_CLASSIFICATION	1.3010485642899987E-4	IMPLEMENTATION	2.5934688177622292E-5	DESIGN	4.065660176286907E-6	TEST	1.1201746528481045E-6	DOCUMENTATION	8.270898104939164E-7	DEFECT
// If we want to handle it bidirectional and detached, we also need to load this // collection with an eager outer-join fetch, this time with Criteria and not HQL:	WITHOUT_CLASSIFICATION	0.9978586359837844	WITHOUT_CLASSIFICATION	0.0015752568622523942	DESIGN	4.491869741315253E-4	IMPLEMENTATION	7.784485746605939E-5	TEST	3.437069997883485E-5	DEFECT	4.7046223867906455E-6	DOCUMENTATION
/*        Event anEvent = (Event) session                .createCriteria(Event.class).setFetchMode("participants", FetchMode.JOIN)                .add( Expression.eq("id", eventId) )                .uniqueResult(); // Eager fetch the colleciton so we can use it detached        */	WITHOUT_CLASSIFICATION	0.9999999865018795	WITHOUT_CLASSIFICATION	6.303672674143497E-9	TEST	3.7065927204719283E-9	DESIGN	2.391838236413468E-9	IMPLEMENTATION	8.011740759524124E-10	DEFECT	2.9484282101398616E-10	DOCUMENTATION
// End of first unit of work	WITHOUT_CLASSIFICATION	0.9999364580142578	WITHOUT_CLASSIFICATION	2.9757752087791343E-5	DEFECT	1.9416370693958492E-5	IMPLEMENTATION	7.741766037471834E-6	TEST	3.407658075335388E-6	DOCUMENTATION	3.218438847792795E-6	DESIGN
// or bidirectional safety method, setting both sides: aPerson.addToEvent(anEvent);	WITHOUT_CLASSIFICATION	0.9973062260336415	WITHOUT_CLASSIFICATION	0.0025325275841533218	IMPLEMENTATION	1.2463175189527016E-4	DESIGN	2.853201350589258E-5	DEFECT	5.388358346381787E-6	TEST	2.6942584575746684E-6	DOCUMENTATION
// Begin second unit of work	WITHOUT_CLASSIFICATION	0.999852284246622	WITHOUT_CLASSIFICATION	8.143901305111644E-5	DEFECT	2.7584865019445513E-5	IMPLEMENTATION	1.93915026202284E-5	DOCUMENTATION	1.4530976848672482E-5	DESIGN	4.7693958385748355E-6	TEST
// Reattachment of aPerson	WITHOUT_CLASSIFICATION	0.9999897358191997	WITHOUT_CLASSIFICATION	7.074506330596082E-6	IMPLEMENTATION	1.4813938946743642E-6	DOCUMENTATION	1.1993083265091327E-6	DEFECT	4.286974056318948E-7	TEST	8.027484282302252E-8	DESIGN
// The getEmailAddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.999913332593926	WITHOUT_CLASSIFICATION	4.2876891434776115E-5	DESIGN	3.332453249374224E-5	DEFECT	8.711523967998447E-6	IMPLEMENTATION	1.3560087727655698E-6	TEST	3.9844940475414756E-7	DOCUMENTATION
// We need our tm, so get it now and avoid doing other work // if there is a problem	WITHOUT_CLASSIFICATION	0.9999685011464013	WITHOUT_CLASSIFICATION	1.8024230986753476E-5	DEFECT	5.893944260177526E-6	DESIGN	5.498257086763931E-6	TEST	2.005252446800275E-6	IMPLEMENTATION	7.716881831333164E-8	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999938697683928	WITHOUT_CLASSIFICATION	3.2424565678707363E-6	DEFECT	1.3717021730531688E-6	DESIGN	1.0430153943670687E-6	IMPLEMENTATION	2.5290034764858036E-7	TEST	2.2015712432788985E-7	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999938697683928	WITHOUT_CLASSIFICATION	3.2424565678707363E-6	DEFECT	1.3717021730531688E-6	DESIGN	1.0430153943670687E-6	IMPLEMENTATION	2.5290034764858036E-7	TEST	2.2015712432788985E-7	DOCUMENTATION
// JBC put a version in the node when it created as part of // some internal operation. We are always newer, but if // the JBC version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.9999866907498043	WITHOUT_CLASSIFICATION	1.1483602304829387E-5	TEST	1.304027639045112E-6	IMPLEMENTATION	3.552413495552674E-7	DEFECT	1.1319768921758624E-7	DOCUMENTATION	5.3181213082468044E-8	DESIGN
//swaldman 2006-08-28: define c3p0-style configuration parameters for properties with //                     hibernate-specific overrides to detect and warn about conflicting //                     declarations	WITHOUT_CLASSIFICATION	0.8103112120739501	WITHOUT_CLASSIFICATION	0.1892804897620324	DESIGN	2.706677302670225E-4	TEST	1.0867703987383488E-4	DEFECT	2.539774224570852E-5	DOCUMENTATION	3.5556516309231725E-6	IMPLEMENTATION
// Not null if the Isolation level has been specified in the configuration file. // Otherwise, it is left to the Driver's default value.	WITHOUT_CLASSIFICATION	0.9999991949842787	WITHOUT_CLASSIFICATION	5.866063744779619E-7	DESIGN	1.0204329489878643E-7	DOCUMENTATION	5.856034091851143E-8	TEST	4.42992667284343E-8	IMPLEMENTATION	1.3506444355250645E-8	DEFECT
// Configured outside of Hibernate (i.e. Servlet container, or Java Bean Container // already has Proxool pools running, and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.9999624289365339	WITHOUT_CLASSIFICATION	3.5619567817850606E-5	DESIGN	1.5968231569726177E-6	DEFECT	2.4146658859026594E-7	TEST	1.0536103103613216E-7	DOCUMENTATION	7.844871824564532E-9	IMPLEMENTATION
// If you're closing down the ConnectionProvider chances are an // is not a real big deal, just warn	WITHOUT_CLASSIFICATION	0.9984071796268724	WITHOUT_CLASSIFICATION	0.001590126223283209	DEFECT	1.2905799183861822E-6	TEST	1.157001190994362E-6	IMPLEMENTATION	2.1949401395203424E-7	DESIGN	2.7074721093792636E-8	DOCUMENTATION
// (AS is always optional, for consistency with SQL/OQL)	WITHOUT_CLASSIFICATION	0.9997299148201236	WITHOUT_CLASSIFICATION	1.0193425355959331E-4	IMPLEMENTATION	8.606129811259785E-5	TEST	3.975026993483553E-5	DESIGN	2.6994872215878515E-5	DEFECT	1.534448605368647E-5	DOCUMENTATION
// process the "new" HQL style where aliases are assigned // _after_ the class name or path expression ie. using // the AS construction	WITHOUT_CLASSIFICATION	0.9997444139561734	WITHOUT_CLASSIFICATION	2.554550445591575E-4	DESIGN	7.79429425694648E-8	DOCUMENTATION	4.5217325317623937E-8	TEST	5.594174762799351E-9	DEFECT	2.244824797899216E-9	IMPLEMENTATION
// the loaded owner will be set to null after the collection is removed, // so capture its value as the affected owner so it is accessible to // both pre- and post- events	WITHOUT_CLASSIFICATION	0.9999931944833583	WITHOUT_CLASSIFICATION	6.586503612088867E-6	DESIGN	1.3847957518402678E-7	IMPLEMENTATION	7.203822548236849E-8	DEFECT	8.194678156259766E-9	TEST	3.005508352858409E-10	DOCUMENTATION
// is a primitive type // invokespecial	WITHOUT_CLASSIFICATION	0.9999995652248305	WITHOUT_CLASSIFICATION	1.4819027571412575E-7	DOCUMENTATION	1.223266453233469E-7	DESIGN	1.0224080283898932E-7	DEFECT	3.609597327726662E-8	TEST	2.59214723343064E-8	IMPLEMENTATION
// array of primitive type // do nothing	WITHOUT_CLASSIFICATION	0.9999994837944921	WITHOUT_CLASSIFICATION	1.557471804536782E-7	DOCUMENTATION	1.4048315292299025E-7	DESIGN	1.3530007216969985E-7	DEFECT	5.9068137724274504E-8	TEST	2.5606964616837E-8	IMPLEMENTATION
// handle a path expression or class name that // appears at the start, in the "new" HQL // style or an alias that appears at the start // in the "old" HQL style	WITHOUT_CLASSIFICATION	0.9991000409934598	WITHOUT_CLASSIFICATION	8.930103807529265E-4	DESIGN	6.60903285538543E-6	DEFECT	1.52120840316509E-7	IMPLEMENTATION	1.1900580729791847E-7	TEST	6.846628427368734E-8	DOCUMENTATION
//handle <=, >=, !=, is not, not between, not in	WITHOUT_CLASSIFICATION	0.9996784333893701	WITHOUT_CLASSIFICATION	1.6156519990430455E-4	DESIGN	1.3927594525843263E-4	DEFECT	1.0328392373840475E-5	TEST	6.412730367098922E-6	IMPLEMENTATION	3.9843427262656815E-6	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999978594277724	WITHOUT_CLASSIFICATION	1.54169974534521E-6	DEFECT	4.236726332345644E-7	IMPLEMENTATION	9.545239517310556E-8	TEST	6.247549488251724E-8	DESIGN	1.7271958978899924E-8	DOCUMENTATION
// transfer an explicitly defined entity name // handle the lazy attribute	WITHOUT_CLASSIFICATION	0.9999736335597808	WITHOUT_CLASSIFICATION	2.2222693543470485E-5	DESIGN	3.8941359241616E-6	IMPLEMENTATION	1.4990952411050052E-7	DOCUMENTATION	5.210079084657229E-8	TEST	4.76004366375669E-8	DEFECT
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9996639489292322	WITHOUT_CLASSIFICATION	2.1636322461208638E-4	IMPLEMENTATION	7.392942782405895E-5	DEFECT	3.2376163530814815E-5	DESIGN	9.521059052005516E-6	TEST	3.8611957489293356E-6	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9996639489292322	WITHOUT_CLASSIFICATION	2.1636322461208638E-4	IMPLEMENTATION	7.392942782405895E-5	DEFECT	3.2376163530814815E-5	DESIGN	9.521059052005516E-6	TEST	3.8611957489293356E-6	DOCUMENTATION
// get meta's from // <joined-subclass>	WITHOUT_CLASSIFICATION	0.9999987399072238	WITHOUT_CLASSIFICATION	1.1660638828535528E-6	DESIGN	7.855456616583058E-8	DEFECT	8.88348307271187E-9	TEST	6.009630247224539E-9	DOCUMENTATION	5.812138593051356E-10	IMPLEMENTATION
// parameters on the property mapping should // override parameters in the typedef	WITHOUT_CLASSIFICATION	0.9987147845911364	WITHOUT_CLASSIFICATION	0.0012308240550962764	DESIGN	5.0026168494502196E-5	DEFECT	3.0152531240400625E-6	TEST	8.067649385588501E-7	DOCUMENTATION	5.431672101287001E-7	IMPLEMENTATION
//fetch="join" overrides default laziness //fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.9999883266551555	WITHOUT_CLASSIFICATION	7.136327935269375E-6	DESIGN	2.8939300594277155E-6	DEFECT	6.686809392336438E-7	TEST	5.3570229799733E-7	IMPLEMENTATION	4.387036124113738E-7	DOCUMENTATION
//NOTE SPECIAL CASE: // default to join and non-lazy for the "second join" // of the many-to-many	WITHOUT_CLASSIFICATION	0.9999976989311148	WITHOUT_CLASSIFICATION	1.043680021579777E-6	DESIGN	9.075238179397442E-7	DEFECT	1.8014296640108165E-7	DOCUMENTATION	1.5899362145011048E-7	IMPLEMENTATION	1.072845784297778E-8	TEST
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999635805030466	WITHOUT_CLASSIFICATION	1.7997588311447597E-5	DESIGN	9.314568786946364E-6	DOCUMENTATION	4.664894074008188E-6	IMPLEMENTATION	4.0261926243575885E-6	TEST	4.16253156741013E-7	DEFECT
// state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999989752661595	WITHOUT_CLASSIFICATION	5.3309901488244575E-6	IMPLEMENTATION	1.6766929597156738E-6	TEST	1.4383702172665078E-6	DOCUMENTATION	1.0041843422865549E-6	DESIGN	7.971007371271115E-7	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
//element //index -> id	WITHOUT_CLASSIFICATION	0.9999886140593124	WITHOUT_CLASSIFICATION	4.182056608248961E-6	DEFECT	3.3281112628227633E-6	IMPLEMENTATION	2.265642627622514E-6	DOCUMENTATION	9.519737059503813E-7	TEST	6.581564829030661E-7	DESIGN
// note that it might be better to iterate the snapshot but this is safe, // assuming the user implements equals() properly, as required by the Set // contract!	WITHOUT_CLASSIFICATION	0.8904957449955301	WITHOUT_CLASSIFICATION	0.1085272483062147	DESIGN	6.896163005373365E-4	IMPLEMENTATION	1.5137375072942787E-4	TEST	1.1774319463168642E-4	DEFECT	1.827345235675185E-5	DOCUMENTATION
// collections detect changes made via their public interface and mark // themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.9999991553418206	WITHOUT_CLASSIFICATION	3.948487828667703E-7	DESIGN	3.591310862690108E-7	IMPLEMENTATION	6.03412912950496E-8	DOCUMENTATION	2.184983266211712E-8	DEFECT	8.487186404552675E-9	TEST
// essentially, if the real session is closed allow any // method call to pass through since the real session // will complain by throwing an appropriate exception; // NOTE that allowing close() above has the same basic effect, //   but we capture that there simply to perform the unbind...	WITHOUT_CLASSIFICATION	0.9999754261946515	WITHOUT_CLASSIFICATION	2.0933982443151145E-5	DEFECT	1.5717033901547882E-6	IMPLEMENTATION	1.3377517665365916E-6	DESIGN	7.25984688544973E-7	TEST	4.383059846560859E-9	DOCUMENTATION
// The default SQLExceptionConverter for all dialects is based on SQLState // since SQLErrorCode is extremely vendor-specific.  Specific Dialects // may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.9999504556788934	WITHOUT_CLASSIFICATION	4.935232964423738E-5	DESIGN	8.208735410090318E-8	IMPLEMENTATION	6.831679176601591E-8	DEFECT	2.2275668841784394E-8	DOCUMENTATION	1.9311647623259698E-8	TEST
//only necessary for postgre < 7.4 //http://anoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.9999800662803673	WITHOUT_CLASSIFICATION	6.487248035438175E-6	IMPLEMENTATION	5.31254633408314E-6	DOCUMENTATION	3.881057884518497E-6	TEST	3.477429985562558E-6	DEFECT	7.754373931561172E-7	DESIGN
// select topic, syntax from information_schema.help // where section like 'Function%' order by section, topic // // see also ->  http://www.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.9999517203136031	WITHOUT_CLASSIFICATION	2.1883980726269076E-5	DESIGN	2.1354860954889808E-5	DEFECT	3.3087594707549432E-6	DOCUMENTATION	1.5139144333386319E-6	IMPLEMENTATION	2.181708115316267E-7	TEST
// registerColumnType(Types.VARBINARY, "CHARACTER($l)"); // registerColumnType(Types.BLOB, "CHARACTER($l)" );  // For use prior to CP 11.0 // registerColumnType(Types.CLOB, "CHARACTER($l)" );	WITHOUT_CLASSIFICATION	0.9999814441682332	WITHOUT_CLASSIFICATION	1.374811100525073E-5	DESIGN	2.9597501562862417E-6	IMPLEMENTATION	1.0366798401159246E-6	TEST	5.393115534288252E-7	DEFECT	2.7197921158606985E-7	DOCUMENTATION
//the BLOB type requires a size arguement - this defaults to //bytes - no arg defaults to 1 whole byte! //other argument mods include K - kilobyte, M - megabyte, G - gigabyte. //refer to the PBdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.6122662000519418	WITHOUT_CLASSIFICATION	0.3868493239813725	DESIGN	4.005793266157212E-4	DOCUMENTATION	3.6595850291217994E-4	DEFECT	8.201311384390452E-5	TEST	3.592502331379401E-5	IMPLEMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9938379906348643	WITHOUT_CLASSIFICATION	0.006103928740073752	DESIGN	5.3260551094577106E-5	DEFECT	2.5605089780292943E-6	TEST	1.210671738698888E-6	DOCUMENTATION	1.0488932506943547E-6	IMPLEMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.6858406126070007	WITHOUT_CLASSIFICATION	0.2937867643909126	DESIGN	0.017447382284562593	DEFECT	0.0018576171215238008	TEST	0.0010640949991105437	IMPLEMENTATION	3.5285968897042795E-6	DOCUMENTATION
// add the comment // nest the main query in an outer select // add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9999940718041724	WITHOUT_CLASSIFICATION	3.454493199422361E-6	TEST	1.25087736055438E-6	DESIGN	6.10855037671212E-7	DOCUMENTATION	3.7457339196661453E-7	IMPLEMENTATION	2.3739683788838746E-7	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// Note: For object <-> SQL datatype mappings see: //	WITHOUT_CLASSIFICATION	0.9999724240743768	WITHOUT_CLASSIFICATION	2.6144675814306598E-5	DEFECT	1.00581288622957E-6	DESIGN	1.469714497912798E-7	IMPLEMENTATION	1.3959338446617024E-7	TEST	1.388720883266623E-7	DOCUMENTATION
// TRIM(end_keyword string-expression-1 FROM string-expression-2) // use Hibernate implementation "From" is one of the parameters they pass in position ?3 //registerFunction( "trim", new SQLFunctionTemplate(Hibernate.STRING, "trim(?1 ?2 from ?3)") );	WITHOUT_CLASSIFICATION	0.9999552927893575	WITHOUT_CLASSIFICATION	4.2220965713787975E-5	DESIGN	2.135003525094946E-6	DEFECT	3.0256179807410245E-7	IMPLEMENTATION	3.723718386642491E-8	DOCUMENTATION	1.1442421780480304E-8	TEST
// Whether this dialect has an Identity clause added to the data type or a completely seperate identity // data type	WITHOUT_CLASSIFICATION	0.999988163845249	WITHOUT_CLASSIFICATION	1.1620675578238714E-5	DESIGN	1.222679877183696E-7	IMPLEMENTATION	4.060111255569884E-8	DEFECT	3.4138400244071776E-8	DOCUMENTATION	1.8471672249393475E-8	TEST
// According to both the ANSI-SQL and JPA specs, trim takes a variable number of parameters between 1 and 4. // at least one paramer (trimSource) is required.  From the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If <trim specification> is omitted, BOTH is assumed. // If <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999911407120817	WITHOUT_CLASSIFICATION	6.3375542078115005E-6	DEFECT	1.099702962879667E-6	IMPLEMENTATION	5.904697331045188E-7	DESIGN	5.087195799492326E-7	TEST	3.2284143439980163E-7	DOCUMENTATION
/////////////////////////////////////////////////////////////////////// // Prepare persisters and link them up with their cache // region/access-strategy	WITHOUT_CLASSIFICATION	0.9999842856403471	WITHOUT_CLASSIFICATION	1.4709652527619699E-5	DESIGN	3.6087515381271835E-7	TEST	3.00507851452315E-7	IMPLEMENTATION	2.3476110521699193E-7	DOCUMENTATION	1.0856301478230449E-7	DEFECT
//Named Queries:	WITHOUT_CLASSIFICATION	0.9998951038049991	WITHOUT_CLASSIFICATION	4.208853769404859E-5	DESIGN	3.5894618875495E-5	IMPLEMENTATION	1.8162562939853505E-5	TEST	4.560491265970431E-6	DEFECT	4.189984225451518E-6	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9992258982126078	WITHOUT_CLASSIFICATION	4.2099955850457215E-4	DEFECT	1.6338413422566797E-4	DESIGN	1.5200671427842942E-4	TEST	3.247501937234301E-5	IMPLEMENTATION	5.2363610112205865E-6	DOCUMENTATION
// does not handle arrays (thats ok, cos they can't be lazy) // or newly instantiated collections, so we can do the cast	WITHOUT_CLASSIFICATION	0.9998855769815388	WITHOUT_CLASSIFICATION	8.052893918775837E-5	DESIGN	1.5790209643929603E-5	IMPLEMENTATION	1.0129396326999982E-5	DEFECT	7.058613654114339E-6	TEST	9.158596484875208E-7	DOCUMENTATION
// collection deletions are a special case since update() can add // deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.999993817061881	WITHOUT_CLASSIFICATION	3.707132161751761E-6	DEFECT	2.4475087112123107E-6	IMPLEMENTATION	1.643139468950745E-8	TEST	8.316295211493717E-9	DOCUMENTATION	3.549556297103444E-9	DESIGN
// we can do the cast since orphan-delete does not apply to: // 1. newly instantiated collections // 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.9830974508277281	WITHOUT_CLASSIFICATION	0.012374382157084855	DESIGN	0.002882460854014097	IMPLEMENTATION	0.0014484632394074898	DEFECT	1.8243981817163817E-4	TEST	1.4803103593680772E-5	DOCUMENTATION
// if the natural-id is marked as non-mutable, it is not retrieved during a // normal database-snapshot operation...	WITHOUT_CLASSIFICATION	0.9999856950936791	WITHOUT_CLASSIFICATION	6.397603570661136E-6	IMPLEMENTATION	5.426264450935974E-6	DEFECT	1.388042666307801E-6	TEST	1.0742305424611737E-6	DESIGN	1.876509062235944E-8	DOCUMENTATION
// watch out for a case where old is still referenced // somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9999954625376265	WITHOUT_CLASSIFICATION	2.90453003285165E-6	DEFECT	1.086467736828933E-6	DESIGN	2.471737363407644E-7	TEST	1.52967343917404E-7	IMPLEMENTATION	1.4632352373052579E-7	DOCUMENTATION
//slice, to get the columns for this component //property	WITHOUT_CLASSIFICATION	0.9805231603248774	WITHOUT_CLASSIFICATION	0.019406347461317624	DESIGN	3.680934879034617E-5	TEST	1.549330869762333E-5	DOCUMENTATION	1.0257946844452488E-5	IMPLEMENTATION	7.93160947260555E-6	DEFECT
//int result = 17; //result = 37 * result + type.hashCode(); //result = 37 * result + ( value==null ? 0 : value.hashCode() ); //return result;	WITHOUT_CLASSIFICATION	0.9999970380121647	WITHOUT_CLASSIFICATION	2.414308290451516E-6	DESIGN	2.2562435972741243E-7	DEFECT	1.8077239701716542E-7	IMPLEMENTATION	7.387978809705009E-8	DOCUMENTATION	6.740300006143981E-8	TEST
// The CollectionEntry.isReached() stuff is just to detect any silly users   // who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.9982470353901525	WITHOUT_CLASSIFICATION	0.0014501693419010377	DESIGN	3.004134400076405E-4	DEFECT	1.326004901001096E-6	TEST	9.165575817381441E-7	IMPLEMENTATION	1.3926545612742026E-7	DOCUMENTATION
// detached collection wrappers that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999564608638779	WITHOUT_CLASSIFICATION	1.5592735517172513E-5	DESIGN	1.5017918104431148E-5	DEFECT	1.1341987639770192E-5	IMPLEMENTATION	1.5668866386062958E-6	TEST	1.9608222231581505E-8	DOCUMENTATION
// The unique property value represented here may or may not be // serializable, so we do an explicit check here in order to generate // a better error message	WITHOUT_CLASSIFICATION	0.9847854393153314	WITHOUT_CLASSIFICATION	0.014885366779702787	DESIGN	2.858204827269312E-4	IMPLEMENTATION	3.0200847408952022E-5	DEFECT	1.1967995247038415E-5	DOCUMENTATION	1.2045795828294794E-6	TEST
// if the version of a newly instantiated object is not the same // as the version seed value, use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999452900550149	WITHOUT_CLASSIFICATION	2.835670188899298E-5	DESIGN	2.5122236537825857E-5	DEFECT	8.045218710882819E-7	IMPLEMENTATION	2.804447232618308E-7	TEST	1.4603996395683195E-7	DOCUMENTATION
// ie. we never have to null out a reference to // an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999994025731729	WITHOUT_CLASSIFICATION	3.3278473001148947E-7	DESIGN	2.1203995828655187E-7	IMPLEMENTATION	3.125141096174779E-8	DEFECT	1.9027042924156805E-8	DOCUMENTATION	2.3236851510633196E-9	TEST
// ignore this row, the collection is in process of // being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.9999342334890639	WITHOUT_CLASSIFICATION	5.317586710672047E-5	DESIGN	1.0718101335587589E-5	DEFECT	1.5155460889223221E-6	TEST	2.592102552490639E-7	DOCUMENTATION	9.778614963189571E-8	IMPLEMENTATION
// Entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // 	WITHOUT_CLASSIFICATION	0.9999750902580791	WITHOUT_CLASSIFICATION	1.0372671001769605E-5	IMPLEMENTATION	5.145627795532353E-6	DEFECT	3.907354206037345E-6	TEST	3.358144630609511E-6	DOCUMENTATION	2.125944287056547E-6	DESIGN
// should be ok performance-wise to generate new delegate instances for each // request since these are locally stack-scoped.  Besides, it makes the code // much easier to read than the old TransactionHelper stuff...	WITHOUT_CLASSIFICATION	0.8168011786554719	WITHOUT_CLASSIFICATION	0.1831826732755118	DESIGN	1.0204885363636782E-5	TEST	3.428882743738191E-6	IMPLEMENTATION	1.2748023682972467E-6	DOCUMENTATION	1.2394985406644624E-6	DEFECT
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9958529911420482	WITHOUT_CLASSIFICATION	0.003399398709708208	DESIGN	5.785989502676869E-4	DEFECT	1.395986340487217E-4	IMPLEMENTATION	1.864732399048124E-5	DOCUMENTATION	1.0765239936788046E-5	TEST
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9958529911420482	WITHOUT_CLASSIFICATION	0.003399398709708208	DESIGN	5.785989502676869E-4	DEFECT	1.395986340487217E-4	IMPLEMENTATION	1.864732399048124E-5	DOCUMENTATION	1.0765239936788046E-5	TEST
// wrap up any new collections directly referenced by the object // or its components	WITHOUT_CLASSIFICATION	0.9999989802521005	WITHOUT_CLASSIFICATION	9.209201626753961E-7	DESIGN	6.085335695297209E-8	IMPLEMENTATION	2.4712114332922217E-8	TEST	7.498828883372862E-9	DEFECT	5.763436686461469E-9	DOCUMENTATION
// remove any snapshot, not really for memory management purposes, but // rather because it might now be stale, and there is no longer any  // EntityEntry to take precedence // This is now handled by removeEntity() //session.getPersistenceContext().removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.7514359670285972	WITHOUT_CLASSIFICATION	0.24610471153701952	DESIGN	0.0022304709293935227	DEFECT	2.1967456675133098E-4	IMPLEMENTATION	5.9615517713176825E-6	DOCUMENTATION	3.2143864671453443E-6	TEST
// skip this check for composite-ids relating to dom4j entity-mode; // alternatively, we could add a check to make sure the incoming id value is // an instance of Element...	WITHOUT_CLASSIFICATION	0.9999214840229044	WITHOUT_CLASSIFICATION	6.84378734135658E-5	IMPLEMENTATION	9.527460765078932E-6	DESIGN	3.137283792995104E-7	DOCUMENTATION	1.4186239042092616E-7	DEFECT	9.505214725751055E-8	TEST
// upgrade the lock if necessary: //lock(result, lockMode);	WITHOUT_CLASSIFICATION	0.9998629698361925	WITHOUT_CLASSIFICATION	1.0758602722239325E-4	DESIGN	2.177650345301297E-5	DEFECT	3.3382479168576207E-6	IMPLEMENTATION	3.073143008856231E-6	DOCUMENTATION	1.2562422062241716E-6	TEST
// now, any collections that are initialized // inside this block do not get updated - they // are ignored until the next flush	WITHOUT_CLASSIFICATION	0.9998412490861539	WITHOUT_CLASSIFICATION	1.3636071284221535E-4	DESIGN	1.804222730230821E-5	IMPLEMENTATION	2.9388235555520505E-6	DEFECT	1.1454356162770195E-6	TEST	2.637145298615509E-7	DOCUMENTATION
//we must clone embedded composite identifiers, or  //we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.9988527863884811	WITHOUT_CLASSIFICATION	0.001129841973078388	DESIGN	1.215653893785477E-5	IMPLEMENTATION	4.463106607378018E-6	DEFECT	3.935081860056296E-7	DOCUMENTATION	3.584847094563738E-7	TEST
// Sub-insertions should occur before containing insertion so // Try to do the callback now	WITHOUT_CLASSIFICATION	0.9983494557311599	WITHOUT_CLASSIFICATION	0.001420355104044212	DESIGN	1.6239112987078298E-4	IMPLEMENTATION	4.658773450488529E-5	DEFECT	1.3661798047880157E-5	DOCUMENTATION	7.548502372374279E-6	TEST
//the entity is not associated with the session, so //try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.9999621688253642	WITHOUT_CLASSIFICATION	2.3321413472489454E-5	DEFECT	6.190008412879415E-6	IMPLEMENTATION	3.7049758242225487E-6	TEST	2.6495200242992762E-6	DESIGN	1.965256901983919E-6	DOCUMENTATION
//scan the query string for class names appearing in the from clause and replace //with all persistent implementors of the class/interface, returning multiple //query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.7066876950300026	WITHOUT_CLASSIFICATION	0.28361047515238935	DESIGN	0.008933477464889312	DEFECT	7.618139519615367E-4	IMPLEMENTATION	3.297437343579634E-6	DOCUMENTATION	3.24096341353444E-6	TEST
// save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999992332641896	WITHOUT_CLASSIFICATION	4.247682277981732E-7	IMPLEMENTATION	1.4732429796686455E-7	TEST	8.570795506586478E-8	DEFECT	7.305151941439583E-8	DOCUMENTATION	3.58838099904193E-8	DESIGN
// evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999994574750019	WITHOUT_CLASSIFICATION	2.509724832322772E-7	IMPLEMENTATION	1.5869242077068073E-7	TEST	5.859048126479275E-8	DEFECT	4.8523030939769714E-8	DOCUMENTATION	2.5746581935634752E-8	DESIGN
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9863971363082734	WITHOUT_CLASSIFICATION	0.013540252812417013	DESIGN	4.018805034787345E-5	TEST	1.7718866496096502E-5	DEFECT	2.7035305950713568E-6	DOCUMENTATION	2.0004318704958613E-6	IMPLEMENTATION
//if it is an uninitialized proxy, pointing //with this session, then when it is accessed, //the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.9998709466877626	WITHOUT_CLASSIFICATION	6.694259546611039E-5	IMPLEMENTATION	4.6141182025393847E-5	DESIGN	6.8715346750168855E-6	TEST	5.643027886765882E-6	DEFECT	3.454972184356549E-6	DOCUMENTATION
// Generate an explicit join for the root dot node.   The implied joins will be collected and passed up // to the root dot node.	WITHOUT_CLASSIFICATION	0.9999557514835009	WITHOUT_CLASSIFICATION	4.304709316057063E-5	DESIGN	7.896475714026627E-7	IMPLEMENTATION	2.9445995384334506E-7	DEFECT	9.299022170348681E-8	TEST	2.43255917912123E-8	DOCUMENTATION
// A session is considered to contain an entity only if the entity has // an entry in the session's persistence context and the entry reports // that the entity has not been removed	WITHOUT_CLASSIFICATION	0.8857422381114811	WITHOUT_CLASSIFICATION	0.11371696978367954	DESIGN	4.3739452067852473E-4	DEFECT	6.397466370644615E-5	IMPLEMENTATION	3.759993828699412E-5	TEST	1.8229821675523412E-6	DOCUMENTATION
// Does the collection referenced by this FromElement // specify an order-by attribute?  If so, attach it to // the query's order-by	WITHOUT_CLASSIFICATION	0.99941647676291	WITHOUT_CLASSIFICATION	3.093642504739134E-4	IMPLEMENTATION	1.9358936333241359E-4	DESIGN	4.363621225668174E-5	TEST	3.472468101257382E-5	DOCUMENTATION	2.2087300144343385E-6	DEFECT
// ... and the token could be an identifer and the error is // a mismatched token error ...	WITHOUT_CLASSIFICATION	0.9999885130441976	WITHOUT_CLASSIFICATION	6.434208861216246E-6	DEFECT	4.226823749220678E-6	DESIGN	6.458272388255593E-7	IMPLEMENTATION	1.3370677484143816E-7	DOCUMENTATION	4.6389178182946547E-8	TEST
// If a where clause was specified in the update/delete query, use it to limit the // returned ids here...	WITHOUT_CLASSIFICATION	0.9999886366715964	WITHOUT_CLASSIFICATION	1.1087417513243846E-5	DESIGN	2.4564789087118075E-7	IMPLEMENTATION	2.1572224870255075E-8	DOCUMENTATION	5.976402506168329E-9	DEFECT	2.714371991825851E-9	TEST
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// Default implementation: // If this node has a data type, and that data type is not an association, then this is scalar.	WITHOUT_CLASSIFICATION	0.9846572575650344	WITHOUT_CLASSIFICATION	0.015266107747957742	DESIGN	3.843126209189575E-5	IMPLEMENTATION	2.6295778512275782E-5	DEFECT	6.929799284480799E-6	DOCUMENTATION	4.977847119116135E-6	TEST
// Resolve the LHS fully, generate implicit joins.  Pass in the property name so that the resolver can // discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.9999988983465147	WITHOUT_CLASSIFICATION	1.0221976478982905E-6	DESIGN	5.4065239930647164E-8	IMPLEMENTATION	1.8760087490955617E-8	TEST	4.77485750332498E-9	DOCUMENTATION	1.855652700265964E-9	DEFECT
// If the propertyType is null and there isn't a parent, just // stop now... there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.9999894339868479	WITHOUT_CLASSIFICATION	9.044010923661593E-6	DEFECT	1.3821062155171431E-6	DESIGN	9.804882919456497E-8	IMPLEMENTATION	2.232915191429922E-8	TEST	1.9518031667792815E-8	DOCUMENTATION
//We do not look for an existing join on the same path, because //it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.9980178092265506	WITHOUT_CLASSIFICATION	0.0010622980196708797	DESIGN	4.888591108140405E-4	IMPLEMENTATION	4.2349559783634E-4	DEFECT	5.519229707903295E-6	TEST	2.0188154203314305E-6	DOCUMENTATION
// our parent is another dot node, meaning we are being further dereferenced. // thus we need to generate a join unless the parent refers to the associated // entity's PK (because 'our' table would know the FK).	WITHOUT_CLASSIFICATION	0.9999279337479774	WITHOUT_CLASSIFICATION	4.501991985325027E-5	IMPLEMENTATION	1.2416300732941321E-5	DESIGN	1.2031259634270245E-5	TEST	2.093563651854556E-6	DOCUMENTATION	5.052081502969814E-7	DEFECT
/*public final Currency getCurrency(int col) throws HibernateException {	WITHOUT_CLASSIFICATION	0.9461447659036367	WITHOUT_CLASSIFICATION	0.04989640754067979	DESIGN	0.002756443664159393	DEFECT	4.7273367295523096E-4	TEST	3.68651607180077E-4	IMPLEMENTATION	3.609976113886486E-4	DOCUMENTATION
// here, we have two possibilities: // 	WITHOUT_CLASSIFICATION	0.9998589094200411	WITHOUT_CLASSIFICATION	1.1887844186669462E-4	IMPLEMENTATION	1.1382297345730666E-5	DEFECT	6.146484242280845E-6	DESIGN	3.0042408025379226E-6	TEST	1.679115701591232E-6	DOCUMENTATION
// Set the unresolved path in this node and the parent. // Set the text for the parent.	WITHOUT_CLASSIFICATION	0.9999029268205061	WITHOUT_CLASSIFICATION	3.7390520293369355E-5	IMPLEMENTATION	3.606861048403631E-5	DEFECT	1.454575186036559E-5	TEST	6.812754331060389E-6	DESIGN	2.2555425251681613E-6	DOCUMENTATION
// Get the first child to be considered.  Sub-classes may do this differently in order to skip nodes that // are not select expressions (e.g. DISTINCT).	WITHOUT_CLASSIFICATION	0.9771036340011654	WITHOUT_CLASSIFICATION	0.02289438600471357	DESIGN	7.608428927915289E-7	DEFECT	6.992166443161591E-7	DOCUMENTATION	4.1818547556398086E-7	TEST	1.017491083681841E-7	IMPLEMENTATION
// If this is an entity and the property is the identifier property, then use getIdentifierType(). //      Note that the propertyName.equals( propertyPath ) checks whether we have a component //      key reference, where the component class property name is the same as the //      entity id property name; if the two are not equal, this is the case and //      we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.9999582375871254	WITHOUT_CLASSIFICATION	4.169541247744738E-5	DESIGN	3.32918127031358E-8	DOCUMENTATION	2.309180166928456E-8	DEFECT	8.62420796606338E-9	IMPLEMENTATION	1.992574666008921E-9	TEST
// for a subquery, the alias to use depends on a few things (we // already know this is not an overall SELECT): //      1) if this FROM_ELEMENT represents a correlation to the //          outer-most query //              A) if the outer query represents a multi-table //                  persister, we need to use the given alias //                  in anticipation of one of the multi-table //                  executors being used (as this subquery will //                  actually be used in the "id select" phase //                  of that multi-table executor) //              B) otherwise, we need to use the persister's //                  table name as the column qualification //      2) otherwise (not correlated), use the given alias	WITHOUT_CLASSIFICATION	0.8107420647434471	WITHOUT_CLASSIFICATION	0.1764360071297128	DESIGN	0.012304452690246876	DEFECT	4.537386656166372E-4	IMPLEMENTATION	4.2005558499217504E-5	TEST	2.1731212477493688E-5	DOCUMENTATION
// Not a collection? // Return the entity property mapping.	WITHOUT_CLASSIFICATION	0.9989339720743374	WITHOUT_CLASSIFICATION	6.602302714721009E-4	IMPLEMENTATION	2.671039949993201E-4	DEFECT	1.346365491107671E-4	DESIGN	2.477983935563644E-6	TEST	1.5791261447311466E-6	DOCUMENTATION
// collection of <many-to-any/> mappings... // used to circumvent the component-collection check below...	WITHOUT_CLASSIFICATION	0.999646802204123	WITHOUT_CLASSIFICATION	2.596239590013149E-4	IMPLEMENTATION	4.231067406770719E-5	DESIGN	3.661576260290405E-5	DEFECT	1.1662663488302412E-5	DOCUMENTATION	2.9847367166614114E-6	TEST
// Otherwise, the destination node was implied by the FROM clause and the FROM clause processor // will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.998269057762362	WITHOUT_CLASSIFICATION	0.0010721919299566981	IMPLEMENTATION	6.316359898253521E-4	DEFECT	1.9957513829995237E-5	DESIGN	6.335080689757408E-6	DOCUMENTATION	8.217233363052718E-7	TEST
// If the first identifier in the path referrs to the class alias (not the class name), then this // is a correlated subselect.  If it's a correlated sub-select, use the existing table alias.  Otherwise // generate a new one.	WITHOUT_CLASSIFICATION	0.9999988458140503	WITHOUT_CLASSIFICATION	1.085924614766904E-6	DEFECT	3.21918401865441E-8	DESIGN	3.1258142660229274E-8	TEST	3.542296729530553E-9	IMPLEMENTATION	1.2690553712613226E-9	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999760055963918	WITHOUT_CLASSIFICATION	2.35393210601395E-5	DESIGN	2.5575486582145834E-7	IMPLEMENTATION	1.0048798521641986E-7	DEFECT	6.804654750703831E-8	DOCUMENTATION	3.0793149500306205E-8	TEST
// An ident node can represent an index expression if the ident // represents a naked property ref //      *Note: this makes the assumption (which is currently the case //      in the hql-sql grammar) that the ident is first resolved //      itself (addrExpr -> resolve()).  The other option, if that //      changes, is to call resolve from here; but it is //      currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.9999983839167944	WITHOUT_CLASSIFICATION	1.5532848205035397E-6	DESIGN	3.016108847511186E-8	DEFECT	2.7766102605399393E-8	TEST	2.889696040680457E-9	DOCUMENTATION	1.981498045478497E-9	IMPLEMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9946549655605109	WITHOUT_CLASSIFICATION	0.004885132767690949	DESIGN	4.545106010939675E-4	DEFECT	2.8112757624850755E-6	IMPLEMENTATION	2.210687029874136E-6	TEST	3.691079117535989E-7	DOCUMENTATION
// If this is an implied join in a FROM clause, then use ANSI-style joining, and set the // flag on the FromElement that indicates that it was implied in the FROM clause itself.	WITHOUT_CLASSIFICATION	0.9999963059085437	WITHOUT_CLASSIFICATION	3.487557450639747E-6	DESIGN	1.149159449573197E-7	IMPLEMENTATION	4.4496529361972724E-8	TEST	3.503316104386774E-8	DEFECT	1.2088370313662257E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// For an explicit many-to-many relationship, add a second join from the intermediate  // (many-to-many) table to the destination table.  Also, make sure that the from element's  // idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.9999987087331141	WITHOUT_CLASSIFICATION	1.0400996683157017E-6	DESIGN	2.2224383688542758E-7	DEFECT	1.5478370731434907E-8	DOCUMENTATION	1.2199249084218627E-8	TEST	1.245760834910457E-9	IMPLEMENTATION
// Reset the node type, because the rest of the system is expecting FROM_FRAGMENT, all we wanted was // for the factory to create the right sub-class.  This might get reset again later on anyway to make the // SQL generation simpler.	WITHOUT_CLASSIFICATION	0.9971978650203874	WITHOUT_CLASSIFICATION	0.0022851227480880096	DESIGN	2.679761843297015E-4	TEST	1.9509331123379047E-4	IMPLEMENTATION	5.075894753185061E-5	DEFECT	3.1837884293084455E-6	DOCUMENTATION
//explicit = true;	WITHOUT_CLASSIFICATION	0.9998869888938011	WITHOUT_CLASSIFICATION	4.4306686438690766E-5	DESIGN	3.1361459819406164E-5	IMPLEMENTATION	1.3537008763971747E-5	DEFECT	1.2992311653733382E-5	DOCUMENTATION	1.0813639523136269E-5	TEST
//sqlResultTypeList.add( type ); // Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999976971328403	WITHOUT_CLASSIFICATION	1.1715583686536173E-6	DESIGN	5.897146680134678E-7	IMPLEMENTATION	4.6638005231219835E-7	TEST	4.275188670586138E-8	DEFECT	3.246218410705005E-8	DOCUMENTATION
// If the expression list has exactly one expression, and the type of the expression is a collection // then this might be a collection function, such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.9983410920741669	WITHOUT_CLASSIFICATION	0.0016525993614770682	DESIGN	5.48128962882128E-6	DEFECT	4.129805315258068E-7	DOCUMENTATION	2.3907189376434217E-7	TEST	1.752223019267514E-7	IMPLEMENTATION
// Need to parse off the column qualifiers; this is assuming (which is true as of now) // that this is only used from update and delete HQL statement parsing	WITHOUT_CLASSIFICATION	0.999970887885334	WITHOUT_CLASSIFICATION	1.997661337985654E-5	DESIGN	8.681533407945708E-6	DEFECT	1.804410610677999E-7	DOCUMENTATION	1.4040368232123804E-7	IMPLEMENTATION	1.331231347281301E-7	TEST
// for regression testing against output from the old parser... // found it easiest to simply reorder the FromElements here into ascending order // in terms of injecting them into the resulting sql ast in orders relative to those // expected by the old parser; this is definitely another of those "only needed // for regression purposes".  The SyntheticAndFactory, then, simply injects them as it // encounters them.	WITHOUT_CLASSIFICATION	0.9999332192187383	WITHOUT_CLASSIFICATION	5.032568244420948E-5	DESIGN	1.3028683992884394E-5	TEST	3.242994071101362E-6	DEFECT	1.8219624733130505E-7	DOCUMENTATION	1.2245061597257801E-9	IMPLEMENTATION
// The uber-rule here is that we need to include  subclass joins if // the FromElement is in any way dereferenced by a property from // the subclass table; otherwise we end up with column references // qualified by a non-existent table reference in the resulting SQL...	WITHOUT_CLASSIFICATION	0.9864407186816544	WITHOUT_CLASSIFICATION	0.013558299336051384	DESIGN	6.619853637423343E-7	IMPLEMENTATION	1.8480616933704433E-7	DOCUMENTATION	9.225300855694301E-8	DEFECT	4.2937752663494305E-8	TEST
// classic translator does not support collection of ordinal // param metadata	WITHOUT_CLASSIFICATION	0.986611596552627	WITHOUT_CLASSIFICATION	0.0083348847387444	DEFECT	0.004450634534973452	DESIGN	4.135478492949944E-4	IMPLEMENTATION	1.725255542778212E-4	TEST	1.6810770082188193E-5	DOCUMENTATION
// The following variables are stacks that keep information about each subexpression // in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.9982531022208693	WITHOUT_CLASSIFICATION	0.0012452307816448608	DEFECT	4.8801743367534795E-4	DESIGN	8.034679880872356E-6	DOCUMENTATION	5.318622505129668E-6	TEST	2.962614245048393E-7	IMPLEMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999978594277724	WITHOUT_CLASSIFICATION	1.54169974534521E-6	DEFECT	4.236726332345644E-7	IMPLEMENTATION	9.545239517310556E-8	TEST	6.247549488251724E-8	DESIGN	1.7271958978899924E-8	DOCUMENTATION
// should not be able to reach last without maxPosition being set // unless there are no results	WITHOUT_CLASSIFICATION	0.9999992960201054	WITHOUT_CLASSIFICATION	3.297383323106941E-7	DESIGN	1.988173523809159E-7	TEST	1.7447588852762031E-7	DEFECT	6.0109663216494E-10	DOCUMENTATION	3.4722478215322197E-10	IMPLEMENTATION
// we found it in the temp PC.  Should indicate we are in the midst of processing a result set // containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.9999226082133396	WITHOUT_CLASSIFICATION	7.574948149374345E-5	DESIGN	1.2737799456676883E-6	TEST	1.8720840534276128E-7	DEFECT	1.4558304160474227E-7	IMPLEMENTATION	3.57337742931307E-8	DOCUMENTATION
//do not use proxiesByKey, since not all //proxies that point to this session's //instances are in that collection!	WITHOUT_CLASSIFICATION	0.9692400235625579	WITHOUT_CLASSIFICATION	0.03005785106129687	DESIGN	4.0687667739725556E-4	DEFECT	1.4441501297357684E-4	IMPLEMENTATION	8.168954453456778E-5	DOCUMENTATION	6.91441412398114E-5	TEST
// if there is no TM configured, we will not be able to access // the javax.transaction.Transaction object in order to // register a synch anyway.	WITHOUT_CLASSIFICATION	0.9072413387999884	DESIGN	0.09228994296543591	WITHOUT_CLASSIFICATION	1.9940305107775033E-4	DEFECT	1.2715835286476558E-4	IMPLEMENTATION	9.800823305689483E-5	TEST	4.4148597576463124E-5	DOCUMENTATION
// Since the result set cursor is always left at the first // physical row after the "last processed", we need to jump // back one position to get the key value we are interested // in skipping	WITHOUT_CLASSIFICATION	0.9996537067902548	WITHOUT_CLASSIFICATION	3.400645812019037E-4	DESIGN	4.0930956605252415E-6	DOCUMENTATION	9.88207164245192E-7	IMPLEMENTATION	6.259367186430258E-7	DEFECT	5.213889997993772E-7	TEST
//true if this is a query and we are loading multiple instances of the same collection role //otherwise this is a CollectionInitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.9990651307399863	WITHOUT_CLASSIFICATION	7.552896244717047E-4	DESIGN	1.1363409928727253E-4	IMPLEMENTATION	6.47136568460061E-5	DEFECT	8.167831942425107E-7	DOCUMENTATION	4.150962145822125E-7	TEST
// we don't need to worry about existing version being uninitialized // because this block isn't called by a re-entrant load (re-entrant // loads _always_ have lock mode NONE)	WITHOUT_CLASSIFICATION	0.8442242930554422	WITHOUT_CLASSIFICATION	0.12086436282316804	IMPLEMENTATION	0.023421459917096307	DESIGN	0.011356648058223964	DEFECT	7.008919833605265E-5	TEST	6.314694773358053E-5	DOCUMENTATION
// add temp entry so that the next step is circular-reference // safe - only needed because some types don't take proper // advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.9987018989083096	WITHOUT_CLASSIFICATION	0.00109932354026879	DESIGN	1.3059755231071475E-4	DOCUMENTATION	3.897906897191611E-5	TEST	2.4669336907487426E-5	DEFECT	4.531593231401408E-6	IMPLEMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999993430202065	WITHOUT_CLASSIFICATION	2.174152371901138E-7	DESIGN	1.9608036310576595E-7	DOCUMENTATION	1.5559172833310524E-7	TEST	7.396326099997343E-8	DEFECT	1.3929203986224818E-8	IMPLEMENTATION
// log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.9762377599689058	WITHOUT_CLASSIFICATION	0.02181077036429184	IMPLEMENTATION	0.0013833303184381301	DEFECT	4.192167502588402E-4	DESIGN	9.78249515393948E-5	TEST	5.109764656591353E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// this has been shown to happen occasionally in rare cases // when using a transaction manager + transaction-timeout // where the timeout calls back through Hibernate's // registered transaction synchronization on a separate // "reaping" thread.  In cases where that reaping thread // executes through this block at the same time the main // application thread does we can get into situations where // these CMEs occur.  And though it is not "allowed" per-se, // the end result without handling it specifically is infinite // looping.  So here, we simply break the loop	WITHOUT_CLASSIFICATION	0.837997980849764	WITHOUT_CLASSIFICATION	0.1618922018670048	DESIGN	6.606354811199467E-5	IMPLEMENTATION	2.556443376521449E-5	DOCUMENTATION	1.427047236564042E-5	DEFECT	3.918828988445043E-6	TEST
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999942448716213	WITHOUT_CLASSIFICATION	3.195514353838795E-6	DEFECT	1.1250174785454421E-6	IMPLEMENTATION	7.397997028452482E-7	DESIGN	3.704212578224867E-7	DOCUMENTATION	3.243755855240053E-7	TEST
// can't cache this stuff either (per-invocation) // we are given a map of user-alias -> lock mode // create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.9998946808378216	WITHOUT_CLASSIFICATION	8.948904152949692E-5	DESIGN	1.0356683604384475E-5	DEFECT	2.9038857188940076E-6	DOCUMENTATION	2.5301402011400118E-6	TEST	3.9411124286896665E-8	IMPLEMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns //getCollectionTable().createUniqueKey( getIdentifier().getConstraintColumns() );	WITHOUT_CLASSIFICATION	0.9999860984647871	WITHOUT_CLASSIFICATION	7.846061256766258E-6	DESIGN	4.362679391650817E-6	DEFECT	8.819244414436318E-7	TEST	7.020212196926316E-7	IMPLEMENTATION	1.0884890323939536E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9954853897612784	WITHOUT_CLASSIFICATION	0.004224534304855676	DESIGN	1.1568207872987087E-4	IMPLEMENTATION	1.094715287314621E-4	DEFECT	4.73948053611194E-5	TEST	1.752752104348761E-5	DOCUMENTATION
//isSet = collection.isSet(); //isSorted = collection.isSorted();	WITHOUT_CLASSIFICATION	0.9999081617875689	WITHOUT_CLASSIFICATION	5.823278996244508E-5	IMPLEMENTATION	1.6238151939479057E-5	TEST	1.3712026624294348E-5	DEFECT	1.962602283668061E-6	DESIGN	1.6926416211172927E-6	DOCUMENTATION
//lists, arrays //sets, maps, bags	WITHOUT_CLASSIFICATION	0.9999768274917438	WITHOUT_CLASSIFICATION	1.26756325179777E-5	DESIGN	6.391270245929082E-6	DEFECT	2.5190464585090042E-6	TEST	9.577853268470817E-7	IMPLEMENTATION	6.287737068780304E-7	DOCUMENTATION
// we finish all the "removes" first to take care of possible unique // constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.9999760863717048	WITHOUT_CLASSIFICATION	1.63875632661723E-5	IMPLEMENTATION	3.415067684352833E-6	DEFECT	2.399597410103003E-6	DESIGN	1.650438168023675E-6	TEST	6.096176639793425E-8	DOCUMENTATION
//use a combination of foreign key columns and pk columns, since //the ordering of removal and addition is not guaranteed when //a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.9990622937373355	WITHOUT_CLASSIFICATION	8.419495233783011E-4	DESIGN	6.432399935855312E-5	DEFECT	1.643807913593299E-5	IMPLEMENTATION	9.782468972211397E-6	TEST	5.212191819487552E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9954853897612784	WITHOUT_CLASSIFICATION	0.004224534304855676	DESIGN	1.1568207872987087E-4	IMPLEMENTATION	1.094715287314621E-4	DEFECT	4.73948053611194E-5	TEST	1.752752104348761E-5	DOCUMENTATION
//information about properties of this class, //including inherited properties //(only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.9930115933519158	WITHOUT_CLASSIFICATION	0.0042644746066085445	DESIGN	0.0023646178137699484	DEFECT	3.4741872453817056E-4	TEST	1.1019206639698834E-5	DOCUMENTATION	8.762965277997856E-7	IMPLEMENTATION
// all this only really needs to consider properties // of this class, not its subclasses, but since we // are reusing code used for sequential selects, we // use the subclass closure	WITHOUT_CLASSIFICATION	0.9999943654434237	WITHOUT_CLASSIFICATION	4.10912156234602E-6	DESIGN	8.901271112160996E-7	DEFECT	5.645568245876895E-7	TEST	4.2765979924604003E-8	DOCUMENTATION	2.7985098325335065E-8	IMPLEMENTATION
// Here we render the select column list based on the properties defined as being generated. // For partial component generation, we currently just re-select the whole component // rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.9724452001890463	WITHOUT_CLASSIFICATION	0.02755305581108469	DESIGN	1.405083064839713E-6	IMPLEMENTATION	3.111377673044672E-7	TEST	1.7118863877239147E-8	DOCUMENTATION	1.0660172971476043E-8	DEFECT
// this is the root (versioned) table, and we are using version-based // optimistic locking;  if we are not updating the version, also don't // check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.9999848375569247	WITHOUT_CLASSIFICATION	1.4177211318876795E-5	DESIGN	7.604519768552096E-7	DEFECT	1.9213722558043294E-7	TEST	2.4899501748097535E-8	DOCUMENTATION	7.743052331752238E-9	IMPLEMENTATION
//optimistic-lock="all", include all updatable properties //optimistic-lock="dirty", include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.9998734278083325	WITHOUT_CLASSIFICATION	9.48712518442923E-5	DESIGN	1.5253902629731503E-5	DEFECT	1.0873325770552169E-5	DOCUMENTATION	4.468553272666754E-6	TEST	1.1051581501968069E-6	IMPLEMENTATION
// this property belongs to the table, and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9997397302731521	WITHOUT_CLASSIFICATION	2.1987003708900507E-4	DEFECT	3.8934640410253667E-5	DESIGN	1.196189628455878E-6	DOCUMENTATION	2.4539771267701864E-7	TEST	2.3462007600040136E-8	IMPLEMENTATION
// check to see if the connection is in auto-commit  // mode (no connection means aggressive connection // release outside a JTA transaction context, so MUST // be autocommit mode)	WITHOUT_CLASSIFICATION	0.9996159804908009	WITHOUT_CLASSIFICATION	3.8128568087966697E-4	DESIGN	1.4589201178840476E-6	DEFECT	6.958623825380873E-7	DOCUMENTATION	5.584318454651959E-7	TEST	2.061397356370509E-8	IMPLEMENTATION
// need to treat this as if it where optimistic-lock="all" (dirty does *not* make sense); // first we need to locate the "loaded" state // // Note, it potentially could be a proxy, so perform the location the safe way...	WITHOUT_CLASSIFICATION	0.948660099714039	DESIGN	0.03438994941840223	WITHOUT_CLASSIFICATION	0.01521293323118349	IMPLEMENTATION	7.700637922911294E-4	TEST	6.780261343997022E-4	DEFECT	2.8892770968445266E-4	DOCUMENTATION
// we *always* assume an instance with a null // identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.9999982074145879	WITHOUT_CLASSIFICATION	1.4326911834335754E-6	DEFECT	1.9908147845387715E-7	DOCUMENTATION	1.4309872883565165E-7	DESIGN	9.94449859790656E-9	IMPLEMENTATION	7.769522723023798E-9	TEST
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999880821613466	WITHOUT_CLASSIFICATION	1.1644514182966879E-5	DESIGN	1.283003006037295E-7	IMPLEMENTATION	1.026732531516516E-7	DEFECT	2.1390806831032016E-8	DOCUMENTATION	2.096010977554423E-8	TEST
//allow any identifier quoted with backtick //only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.9900779255312553	WITHOUT_CLASSIFICATION	0.007273052488742829	DESIGN	0.0016298737851319477	DEFECT	8.938744587203678E-4	IMPLEMENTATION	1.0997943136575984E-4	TEST	1.5294304783839117E-5	DOCUMENTATION
//following doesn't handle (null, not null) but unnecessary //since this would mean all rows	WITHOUT_CLASSIFICATION	0.9998015830240903	WITHOUT_CLASSIFICATION	9.033707081567751E-5	TEST	7.975716690590314E-5	DEFECT	1.4117889544749915E-5	IMPLEMENTATION	1.3437117820376687E-5	DESIGN	7.677308230788393E-7	DOCUMENTATION
// IMPL NOTE : due to the delayed population of setters (setters cached // 	WITHOUT_CLASSIFICATION	0.9999521161141032	WITHOUT_CLASSIFICATION	4.376790864976484E-5	DESIGN	3.3031728477938607E-6	DEFECT	6.300307248114702E-7	IMPLEMENTATION	9.796112178512818E-8	DOCUMENTATION	8.481255262296048E-8	TEST
// we need to dirty check collections, since they can cause an owner // version number increment	WITHOUT_CLASSIFICATION	0.9931879581438244	WITHOUT_CLASSIFICATION	0.0067091702335283715	IMPLEMENTATION	7.882807942862206E-5	DOCUMENTATION	2.078978644076234E-5	DESIGN	1.7995926481815339E-6	TEST	1.4541641295586866E-6	DEFECT
//return the id, so we can use it to reset the proxy id //return result;	WITHOUT_CLASSIFICATION	0.9999067971823702	WITHOUT_CLASSIFICATION	8.638835045651603E-5	IMPLEMENTATION	5.8781804459857575E-6	DESIGN	4.757775296471269E-7	DOCUMENTATION	2.68433492192942E-7	DEFECT	1.9207570561064505E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999995925222901	WITHOUT_CLASSIFICATION	2.000292290319029E-7	IMPLEMENTATION	1.0330677032399615E-7	DEFECT	6.188852176309601E-8	DESIGN	4.069504919638964E-8	DOCUMENTATION	1.55813956394152E-9	TEST
// We now have the value of the property-ref we reference.  However, // we need to dig a little deeper, as that property might also be // an entity type, in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.9998939681787383	WITHOUT_CLASSIFICATION	1.0534767211025968E-4	DESIGN	3.225238922928199E-7	DOCUMENTATION	1.9110086719552957E-7	DEFECT	1.6892619321198164E-7	IMPLEMENTATION	1.5981987720337373E-9	TEST
// Retrieve the value of the designated column in the current row of this // ResultSet object as a java.io.Reader object	WITHOUT_CLASSIFICATION	0.9999877372003043	WITHOUT_CLASSIFICATION	6.202895649738416E-6	DEFECT	3.1735091245665166E-6	DESIGN	1.95783890559417E-6	DOCUMENTATION	6.871772944238844E-7	TEST	2.413787212225733E-7	IMPLEMENTATION
//not absolutely necessary, but helps for some //equals()/hashCode() implementations	WITHOUT_CLASSIFICATION	0.9669441455507454	WITHOUT_CLASSIFICATION	0.027928245805719468	IMPLEMENTATION	0.005012698485134511	DESIGN	6.224656669045613E-5	TEST	4.435737032181242E-5	DEFECT	8.30622138844014E-6	DOCUMENTATION
//this should be a call to resolve(), not resolveIdentifier(),  //'cos it might be a property-ref, and we did not cache the //referenced value	WITHOUT_CLASSIFICATION	0.9985230841001285	WITHOUT_CLASSIFICATION	0.0013069678483453029	IMPLEMENTATION	1.3035919006503782E-4	DESIGN	3.846937535756453E-5	DEFECT	8.040128598693566E-7	DOCUMENTATION	3.1547324364130714E-7	TEST
// If we have <tt>not-found="ignore"</tt> association mapped to a // formula, we always need to dirty check it, so we can update the // second-level cache	WITHOUT_CLASSIFICATION	0.9995302983868591	WITHOUT_CLASSIFICATION	4.662027798469862E-4	IMPLEMENTATION	1.8267052172964223E-6	DOCUMENTATION	1.2153154886132157E-6	DESIGN	3.9012005892318306E-7	DEFECT	6.669252898580512E-8	TEST
// can't just return null here, since that would // cause an owning component to become null	WITHOUT_CLASSIFICATION	0.9998645990559746	WITHOUT_CLASSIFICATION	7.913141871169768E-5	DESIGN	5.261674876325287E-5	IMPLEMENTATION	2.6894385805254914E-6	DEFECT	8.311934457433985E-7	TEST	1.321445241743824E-7	DOCUMENTATION
//for arrays, replaceElements() may return a different reference, since //the array length might not match	WITHOUT_CLASSIFICATION	0.9999989400388773	WITHOUT_CLASSIFICATION	7.530983711708596E-7	DESIGN	1.8132306784357938E-7	IMPLEMENTATION	1.169663228561939E-7	DEFECT	7.289074061141189E-9	DOCUMENTATION	1.284286773858059E-9	TEST
// actual cache of the entries.  soft references are used for both the keys and the // values here since the values pertaining to the MRU entries are kept in a // seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.9999991188426512	WITHOUT_CLASSIFICATION	7.395916745617231E-7	IMPLEMENTATION	1.3782793058056177E-7	DESIGN	2.2205992653278397E-9	TEST	9.888081050851423E-10	DEFECT	5.283362775567673E-10	DOCUMENTATION
// as soon as we encounter our first letter, return the substring // from that position	WITHOUT_CLASSIFICATION	0.9999995760855406	WITHOUT_CLASSIFICATION	4.0777284292851237E-7	DESIGN	9.061437414281235E-9	TEST	3.917809108194507E-9	DEFECT	2.0627406622111335E-9	DOCUMENTATION	1.0996293855700574E-9	IMPLEMENTATION
// Note : expected in the syntax: //      type=listenerClass //          ({sep}type=listenerClass)* // where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.9999858173043161	WITHOUT_CLASSIFICATION	1.0413639728181341E-5	DEFECT	2.6292445737469615E-6	DESIGN	1.0484930889851664E-6	TEST	8.331804235419622E-8	DOCUMENTATION	8.00025055059781E-9	IMPLEMENTATION
// isTransactionCallbackRegistered denotes whether any Hibernate // Transaction has registered as a callback against this // JDBCContext; only one such callback is allowed.  Directly // serializing this value causes problems with JDBCTransaction, // or really any Transaction impl where the callback is local // to the Transaction instance itself, since that Transaction // is not serialized along with the JDBCContext.  Thus we // handle that fact here explicitly...	WITHOUT_CLASSIFICATION	0.9114020643419676	WITHOUT_CLASSIFICATION	0.08833897906516645	DESIGN	2.491730001063702E-4	DEFECT	8.381448871873366E-6	TEST	1.0029794055968896E-6	IMPLEMENTATION	3.9916448209571794E-7	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9961581248029123	WITHOUT_CLASSIFICATION	0.0035691585778633702	DESIGN	1.5363941511422935E-4	DEFECT	9.763829389158991E-5	IMPLEMENTATION	1.9651199727124507E-5	TEST	1.787710491313664E-6	DOCUMENTATION
// We call getKeyFromResultSet() here so that we can know the // key value upon which to perform the breaking logic.  However, // it is also then called from getRowFromResultSet() which is certainly // not the most efficient.  But the call here is needed, and there // currently is no other way without refactoring of the doQuery()/getRowFromResultSet() // methods	WITHOUT_CLASSIFICATION	0.6200933976288266	WITHOUT_CLASSIFICATION	0.35055213885110875	IMPLEMENTATION	0.028189602084022207	DESIGN	5.73836191391525E-4	TEST	4.479143624247341E-4	DEFECT	1.431108822260828E-4	DOCUMENTATION
// This check is needed since processing leaves the cursor // after the last physical row for the current logical row; // thus if we are after the last physical row, this might be // caused by either: //      1) scrolling to the last logical row //      2) scrolling past the last logical row // In the latter scenario, the previous logical row // really is the last logical row. // // In all other cases, we should process back two // logical records (the current logic row, plus the // previous logical row).	WITHOUT_CLASSIFICATION	0.9185379818948761	DESIGN	0.04876847831666656	DEFECT	0.03221190562524481	IMPLEMENTATION	4.1284061138728497E-4	WITHOUT_CLASSIFICATION	5.7647888916789805E-5	DOCUMENTATION	1.1145662908445467E-5	TEST
// and perform the load	WITHOUT_CLASSIFICATION	0.9999924529166109	WITHOUT_CLASSIFICATION	7.170633745229712E-6	IMPLEMENTATION	1.7146907956623576E-7	DOCUMENTATION	1.0632207830799513E-7	DEFECT	7.716489235875753E-8	DESIGN	2.1493593859366074E-8	TEST
//important: reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.9265177054787401	WITHOUT_CLASSIFICATION	0.029493252920723908	IMPLEMENTATION	0.022313393742097773	DESIGN	0.020154512603160615	DEFECT	0.0013821239928578442	DOCUMENTATION	1.390112624196776E-4	TEST
//this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.9780412314924658	WITHOUT_CLASSIFICATION	0.020873246930520867	DESIGN	8.767971014484213E-4	IMPLEMENTATION	1.7283592813359606E-4	DEFECT	2.0717308881406145E-5	DOCUMENTATION	1.517123854989189E-5	TEST
// we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.9999770261218174	WITHOUT_CLASSIFICATION	1.7805460753574935E-5	DESIGN	2.773977250905584E-6	IMPLEMENTATION	2.137711290775569E-6	DEFECT	1.8246480540293923E-7	TEST	7.426408190375459E-8	DOCUMENTATION
// we did not find a collection element in the result set, so we // ensure that a collection is created with the owner's identifier, // since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.9999996123294108	WITHOUT_CLASSIFICATION	2.4447677973444527E-7	DESIGN	1.118481572552337E-7	IMPLEMENTATION	1.747915019152744E-8	TEST	1.3343122195573771E-8	DEFECT	5.233798249055423E-10	DOCUMENTATION
// this is a collection initializer, so we must create a collection // for each of the passed-in keys, to account for the possibility // that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.9999994194088743	WITHOUT_CLASSIFICATION	4.7320423307268043E-7	DESIGN	5.850971719431486E-8	TEST	4.253503910803512E-8	DEFECT	5.173813666793099E-9	IMPLEMENTATION	1.168322693292829E-9	DOCUMENTATION
// grab its state from the ResultSet and keep it in the Session // (but don't yet initialize the object itself) // note that we acquire LockMode.READ even if it was not requested	WITHOUT_CLASSIFICATION	0.9992027742774705	WITHOUT_CLASSIFICATION	6.964286248164142E-4	DESIGN	6.9193194002856E-5	TEST	2.0268058768356412E-5	DEFECT	1.0268202341426704E-5	IMPLEMENTATION	1.0676426003428924E-6	DOCUMENTATION
// a many-to-many; // decrement currentDepth here to allow join across the association table // without exceeding MAX_FETCH_DEPTH (i.e. the "currentDepth - 1" bit)	WITHOUT_CLASSIFICATION	0.9999901357001527	WITHOUT_CLASSIFICATION	4.6910305850413224E-6	DEFECT	4.274179554556253E-6	DESIGN	5.231949094554853E-7	IMPLEMENTATION	2.671652664245229E-7	TEST	1.0872953173220718E-7	DOCUMENTATION
// if not a composite key, use "foo in (?, ?, ?)" for batching // if no batch, and not a composite key, use "foo = ?"	WITHOUT_CLASSIFICATION	0.9999993605797345	WITHOUT_CLASSIFICATION	3.8197533579892577E-7	DEFECT	2.4528850327079793E-7	DESIGN	4.475344568395075E-9	DOCUMENTATION	4.449324062118041E-9	TEST	3.2317577512159155E-9	IMPLEMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999394129579114	WITHOUT_CLASSIFICATION	3.48923374143559E-5	DESIGN	1.4914558299746908E-5	DOCUMENTATION	8.246887467199003E-6	DEFECT	1.925350827826746E-6	IMPLEMENTATION	6.079080794017776E-7	TEST
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9827010056770275	WITHOUT_CLASSIFICATION	0.011513699056680524	DESIGN	0.00576540177373468	IMPLEMENTATION	9.340748520180798E-6	DOCUMENTATION	7.421039161710757E-6	DEFECT	3.1317048753100742E-6	TEST
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9827010056770275	WITHOUT_CLASSIFICATION	0.011513699056680524	DESIGN	0.00576540177373468	IMPLEMENTATION	9.340748520180798E-6	DOCUMENTATION	7.421039161710757E-6	DEFECT	3.1317048753100742E-6	TEST
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9990203547195785	WITHOUT_CLASSIFICATION	7.667504153962513E-4	DESIGN	1.9421179290235978E-4	DEFECT	8.76620617819434E-6	IMPLEMENTATION	7.124963902204769E-6	TEST	2.7919020425290186E-6	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999863605531034	WITHOUT_CLASSIFICATION	1.3358087082773386E-5	DESIGN	1.6639188175483258E-7	TEST	8.497930242303781E-8	IMPLEMENTATION	1.6858683544333085E-8	DEFECT	1.3129946098080968E-8	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999867205131052	WITHOUT_CLASSIFICATION	9.434852628892335E-6	DESIGN	3.5596969387926535E-6	IMPLEMENTATION	1.4352072414313545E-7	DEFECT	1.0212675338111057E-7	TEST	3.928984943714463E-8	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9477299562869385	DESIGN	0.04686115600412967	WITHOUT_CLASSIFICATION	0.0017452186770541376	DOCUMENTATION	0.0014751996367055303	TEST	0.0013462445720009153	IMPLEMENTATION	8.422248231712079E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999967921465598	WITHOUT_CLASSIFICATION	2.3262049710510212E-6	IMPLEMENTATION	3.920518904252137E-7	DOCUMENTATION	2.0324652480516502E-7	DEFECT	1.4810281992615262E-7	DESIGN	1.3824723398080232E-7	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999967921465598	WITHOUT_CLASSIFICATION	2.3262049710510212E-6	IMPLEMENTATION	3.920518904252137E-7	DOCUMENTATION	2.0324652480516502E-7	DEFECT	1.4810281992615262E-7	DESIGN	1.3824723398080232E-7	TEST
//        }	WITHOUT_CLASSIFICATION	0.9999358573307248	WITHOUT_CLASSIFICATION	3.724526528721686E-5	IMPLEMENTATION	9.716793221136329E-6	DOCUMENTATION	8.899867390797989E-6	TEST	4.596545949048007E-6	DESIGN	3.684197427153054E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9999956788075038	WITHOUT_CLASSIFICATION	3.903958141995729E-6	DESIGN	2.141021300954784E-7	IMPLEMENTATION	1.1960883488853116E-7	DEFECT	5.4641933842118445E-8	TEST	2.8881455468235725E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998238630910233	WITHOUT_CLASSIFICATION	4.890835287734401E-5	DESIGN	3.921610228826549E-5	DOCUMENTATION	3.8225792008258945E-5	TEST	2.5855071098984002E-5	IMPLEMENTATION	2.393159070377343E-5	DEFECT
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9995560719505469	WITHOUT_CLASSIFICATION	3.94976577119154E-4	IMPLEMENTATION	2.1706304261945044E-5	TEST	1.4887768016204409E-5	DEFECT	1.0307965712259913E-5	DESIGN	2.049434343411361E-6	DOCUMENTATION
// at this point we have (drivingSqlAlias) the SQL alias of the driving table // corresponding to the given user alias.  However, the driving table is not // (necessarily) the table against which we want to apply locks.  Mainly, // the exception case here is joined-subclass hierarchies where we instead // want to apply the lock against the root table (for all other strategies, // it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.9958664903863204	WITHOUT_CLASSIFICATION	0.0035203410209378875	DESIGN	5.920068669016721E-4	DEFECT	1.2224518007091006E-5	TEST	5.125213308209263E-6	DOCUMENTATION	3.8119945248286546E-6	IMPLEMENTATION
// the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.9999518095778588	WITHOUT_CLASSIFICATION	2.9326068485311033E-5	IMPLEMENTATION	9.989103587030443E-6	TEST	4.400911243316939E-6	DOCUMENTATION	3.3895516771650148E-6	DEFECT	1.0847871483612036E-6	DESIGN
// we have a mapped identifier property and the root of // the incoming property path matched that identifier // property	WITHOUT_CLASSIFICATION	0.9999128476123483	WITHOUT_CLASSIFICATION	8.271526745838883E-5	DEFECT	3.272927084478762E-6	DESIGN	7.960711116350576E-7	DOCUMENTATION	3.270889474489167E-7	IMPLEMENTATION	4.103304989670673E-8	TEST
// we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9999924539439554	WITHOUT_CLASSIFICATION	2.6021989560584176E-6	DEFECT	2.419009900512561E-6	DESIGN	2.2241701676755318E-6	IMPLEMENTATION	2.1905838789205339E-7	DOCUMENTATION	8.161863253092588E-8	TEST
// both many-to-one and one-to-one are represented as a // Property.  EntityPersister is relying on this value to // determine "lazy fetch groups" in terms of field-level // interception.  So we need to make sure that we return // true here for the case of many-to-one and one-to-one // with lazy="no-proxy" // // * impl note - lazy="no-proxy" currently forces both // lazy and unwrap to be set to true.  The other case we // are extremely interested in here is that of lazy="proxy" // where lazy is set to true, but unwrap is set to false. // thus we use both here under the assumption that this // return is really only ever used during persister // construction to determine the lazy property/field fetch // groupings.  If that assertion changes then this check // needs to change as well.  Partially, this is an issue with // the overloading of the term "lazy" here...	WITHOUT_CLASSIFICATION	0.9994212709667397	WITHOUT_CLASSIFICATION	5.763085687397417E-4	DESIGN	2.195740929602832E-6	DEFECT	1.8783814015966669E-7	TEST	3.646671186001276E-8	DOCUMENTATION	4.18738870219344E-10	IMPLEMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999882563177687	WITHOUT_CLASSIFICATION	6.211552371166272E-6	DESIGN	2.382236197580779E-6	TEST	2.202194311112445E-6	DEFECT	8.172767616975649E-7	IMPLEMENTATION	1.3042258989508274E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999882563177687	WITHOUT_CLASSIFICATION	6.211552371166272E-6	DESIGN	2.382236197580779E-6	TEST	2.202194311112445E-6	DEFECT	8.172767616975649E-7	IMPLEMENTATION	1.3042258989508274E-7	DOCUMENTATION
/*rootTableName = persistentClass.getRootTable().getQualifiedName( 	WITHOUT_CLASSIFICATION	0.9991563858419763	WITHOUT_CLASSIFICATION	8.149366028169605E-4	DESIGN	1.3031842815488013E-5	DEFECT	8.422079560084657E-6	IMPLEMENTATION	5.388668241706983E-6	TEST	1.83496458936611E-6	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999769516251421	WITHOUT_CLASSIFICATION	5.890800007724484E-6	IMPLEMENTATION	5.1926916995849185E-6	DEFECT	4.624717158742156E-6	DESIGN	4.068182445777925E-6	DOCUMENTATION	3.2719835460100594E-6	TEST
// Custom sql	WITHOUT_CLASSIFICATION	0.9999967933044258	WITHOUT_CLASSIFICATION	1.3609143759923003E-6	IMPLEMENTATION	5.507571472731518E-7	DESIGN	5.219422486608804E-7	TEST	5.109747481188026E-7	DOCUMENTATION	2.6210705418086537E-7	DEFECT
/*protected void initPropertyPaths(	WITHOUT_CLASSIFICATION	0.999743656943174	WITHOUT_CLASSIFICATION	8.983112388964746E-5	DESIGN	5.756480193528077E-5	TEST	4.593773360905478E-5	DEFECT	3.958802158260905E-5	IMPLEMENTATION	2.342137580934301E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999318819182712	WITHOUT_CLASSIFICATION	2.3228290828243807E-5	IMPLEMENTATION	1.3542294776552955E-5	DEFECT	1.1215036822537524E-5	DOCUMENTATION	1.0497216809004004E-5	DESIGN	9.635242492361308E-6	TEST
//Custom SQL (would be better if these were private)	WITHOUT_CLASSIFICATION	0.9998801610821607	WITHOUT_CLASSIFICATION	8.369681589212206E-5	DESIGN	2.8526288464251842E-5	IMPLEMENTATION	3.896475774564796E-6	TEST	2.987124526783328E-6	DEFECT	7.322131815662568E-7	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995778559258047	WITHOUT_CLASSIFICATION	4.028769477233292E-4	DESIGN	1.2916610208334142E-5	IMPLEMENTATION	3.6228935711530095E-6	TEST	1.4031934871718678E-6	DOCUMENTATION	1.3244292052251375E-6	DEFECT
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999318819182712	WITHOUT_CLASSIFICATION	2.3228290828243807E-5	IMPLEMENTATION	1.3542294776552955E-5	DEFECT	1.1215036822537524E-5	DOCUMENTATION	1.0497216809004004E-5	DESIGN	9.635242492361308E-6	TEST
// aliases for identifier ( alias.id ); skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.9999762770457205	WITHOUT_CLASSIFICATION	2.269655043493883E-5	IMPLEMENTATION	5.049639888455065E-7	DESIGN	4.1083371775765294E-7	DEFECT	6.646932986052094E-8	DOCUMENTATION	4.413680813107193E-8	TEST
//decide which ResultSet to get the property value from:	WITHOUT_CLASSIFICATION	0.9996088219836708	WITHOUT_CLASSIFICATION	1.873775427283301E-4	DESIGN	1.5448273437482842E-4	DEFECT	3.588013352883067E-5	DOCUMENTATION	8.368692900524314E-6	IMPLEMENTATION	5.068912796849492E-6	TEST
//note: it is conceptually possible that a UserType could map null to //	WITHOUT_CLASSIFICATION	0.9998050207743299	WITHOUT_CLASSIFICATION	1.3010075028797727E-4	IMPLEMENTATION	3.920769964789683E-5	DESIGN	2.174455355114075E-5	DEFECT	3.6251435145590315E-6	TEST	3.0107866861438283E-7	DOCUMENTATION
// the contract of EntityTuplizer.determineConcreteSubclassEntityName says that returning null // is an indication that the specified entity-name (this.getEntityName) should be used.	WITHOUT_CLASSIFICATION	0.9898209444033453	WITHOUT_CLASSIFICATION	0.010154110259493015	DESIGN	1.0954248008866379E-5	IMPLEMENTATION	6.958730583653528E-6	TEST	6.11181930603835E-6	DOCUMENTATION	9.205392631548305E-7	DEFECT
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999880821613466	WITHOUT_CLASSIFICATION	1.1644514182966879E-5	DESIGN	1.283003006037295E-7	IMPLEMENTATION	1.026732531516516E-7	DEFECT	2.1390806831032016E-8	DOCUMENTATION	2.096010977554423E-8	TEST
// cache these since they are stateless // this one could even be static...	WITHOUT_CLASSIFICATION	0.9999255901096199	WITHOUT_CLASSIFICATION	7.256972172818073E-5	DESIGN	1.261354559300602E-6	TEST	2.91725753691567E-7	IMPLEMENTATION	2.5248574064731117E-7	DOCUMENTATION	3.460259812998758E-8	DEFECT
//"as" is not in KEYWORDS	WITHOUT_CLASSIFICATION	0.9980210175033258	WITHOUT_CLASSIFICATION	0.0018005643152279554	DEFECT	6.934607285786024E-5	TEST	6.806596730318825E-5	DESIGN	2.913547623669977E-5	DOCUMENTATION	1.1870665048538456E-5	IMPLEMENTATION
// --Commented out by Inspection (12/4/04 9:10 AM): public abstract void addCondition(String alias, String[] columns, String condition);	WITHOUT_CLASSIFICATION	0.9998855119173035	WITHOUT_CLASSIFICATION	6.020413530186217E-5	DOCUMENTATION	3.0215062783268836E-5	DESIGN	8.624966669885583E-6	DEFECT	8.402252694238723E-6	TEST	7.041665247372802E-6	IMPLEMENTATION
//use the id column alias	WITHOUT_CLASSIFICATION	0.999976608287296	WITHOUT_CLASSIFICATION	1.336565984590296E-5	IMPLEMENTATION	6.156101008273766E-6	DESIGN	3.0392492228758288E-6	DOCUMENTATION	7.047936362969503E-7	TEST	1.2590899078431684E-7	DEFECT
//private List aliases = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999803416744751	WITHOUT_CLASSIFICATION	6.188711815196097E-6	IMPLEMENTATION	5.163984309501155E-6	TEST	4.958345825026705E-6	DEFECT	2.7267747234722393E-6	DESIGN	6.205088515154226E-7	DOCUMENTATION
//columns.add(columnName); //aliases.add(tableAlias);	WITHOUT_CLASSIFICATION	0.9999716687586123	WITHOUT_CLASSIFICATION	7.455942319636548E-6	DESIGN	6.813638291844333E-6	IMPLEMENTATION	5.654736646309466E-6	TEST	5.448794946927466E-6	DEFECT	2.9581291828773058E-6	DOCUMENTATION
//where fragment must be empty!	WITHOUT_CLASSIFICATION	0.9951947120461009	WITHOUT_CLASSIFICATION	0.004393131146721843	DESIGN	2.0954229199843396E-4	IMPLEMENTATION	1.3344655642864742E-4	DEFECT	4.448704656894655E-5	TEST	2.468091218129373E-5	DOCUMENTATION
// revert to traditional hibernate behavior of setting initialPoolSize to minPoolSize // unless otherwise specified with a c3p0.*-style parameter.	WITHOUT_CLASSIFICATION	0.9997461441413593	WITHOUT_CLASSIFICATION	2.5200677399822986E-4	DESIGN	1.1900304865282488E-6	IMPLEMENTATION	3.997297698694655E-7	TEST	1.9612122971101004E-7	DOCUMENTATION	6.320315633744737E-8	DEFECT
//arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.9999744654866753	WITHOUT_CLASSIFICATION	2.179875282482854E-5	DESIGN	1.8427380757192793E-6	DOCUMENTATION	9.092343268031723E-7	DEFECT	6.935511962796603E-7	IMPLEMENTATION	2.902369011382114E-7	TEST
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.998971755733062	WITHOUT_CLASSIFICATION	6.802625006996484E-4	IMPLEMENTATION	2.0347255036267945E-4	DESIGN	5.3497321031649065E-5	TEST	4.8649552877014056E-5	DOCUMENTATION	4.236234196681428E-5	DEFECT
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.998971755733062	WITHOUT_CLASSIFICATION	6.802625006996484E-4	IMPLEMENTATION	2.0347255036267945E-4	DESIGN	5.3497321031649065E-5	TEST	4.8649552877014056E-5	DOCUMENTATION	4.236234196681428E-5	DEFECT
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9995758157712724	WITHOUT_CLASSIFICATION	4.0116563492041126E-4	DEFECT	2.18789402786061E-5	DESIGN	7.57200005431503E-7	TEST	2.2759900485095943E-7	DOCUMENTATION	1.5485451823416228E-7	IMPLEMENTATION
// Essentially: // 1) If we have a local (Hibernate) transaction in progress //      and it already has the UserTransaction cached, use that //      UserTransaction to determine the status. // 2) If a transaction manager has been located, use //      that transaction manager to determine the status. // 3) Finally, as the last resort, try to lookup the //      UserTransaction via JNDI and use that to determine the //      status.	WITHOUT_CLASSIFICATION	0.9995527595218989	WITHOUT_CLASSIFICATION	3.997402836278639E-4	DESIGN	4.274636095962572E-5	IMPLEMENTATION	4.63303355635535E-6	DEFECT	1.1085261791373575E-7	DOCUMENTATION	9.94733933758277E-9	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9989260628615921	WITHOUT_CLASSIFICATION	7.677202016314123E-4	DESIGN	1.4376704594225997E-4	IMPLEMENTATION	7.854593901788724E-5	DOCUMENTATION	4.701722594702547E-5	TEST	3.688672586933569E-5	DEFECT
//swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.9995534124076075	WITHOUT_CLASSIFICATION	3.2616107301267495E-4	IMPLEMENTATION	1.0192925639006954E-4	DESIGN	1.2068238858944673E-5	DEFECT	4.827521225877118E-6	TEST	1.601502904889893E-6	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.9999942993646888	WITHOUT_CLASSIFICATION	4.4041551873676685E-6	IMPLEMENTATION	5.649342998428129E-7	DOCUMENTATION	3.5293693738980323E-7	DEFECT	2.2630339136169265E-7	DESIGN	1.523054953394972E-7	TEST
// we need to dirty check many-to-ones with not-found="ignore" in order  // to update the cache (not the database), since in this case a null // entity reference can lose information	WITHOUT_CLASSIFICATION	0.9999693273690828	WITHOUT_CLASSIFICATION	1.4872251551341724E-5	DESIGN	1.0606959816707538E-5	IMPLEMENTATION	2.8884233462783066E-6	DOCUMENTATION	2.1759023878205328E-6	DEFECT	1.2909381496529242E-7	TEST
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999982761978182	WITHOUT_CLASSIFICATION	1.1586295370576396E-6	IMPLEMENTATION	3.026756927382703E-7	DEFECT	1.484338986741106E-7	DESIGN	7.46320666908575E-8	DOCUMENTATION	3.94309866090521E-8	TEST
// Regions can get instantiated in the course of normal work (e.g. // a named query region will be created the first time the query is // executed), so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.9906116524302984	WITHOUT_CLASSIFICATION	0.009025558952695847	DEFECT	3.078204444770962E-4	DESIGN	3.821611096373189E-5	IMPLEMENTATION	1.539925910052653E-5	TEST	1.3528024644642298E-6	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9999818769459289	WITHOUT_CLASSIFICATION	9.531639064146273E-6	DESIGN	8.081394742290437E-6	IMPLEMENTATION	2.7906212327348294E-7	DOCUMENTATION	1.4099353145216722E-7	TEST	8.996460995735591E-8	DEFECT
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9983081596818556	WITHOUT_CLASSIFICATION	0.0015071906310012797	IMPLEMENTATION	1.1755241850973142E-4	DEFECT	5.064289611568715E-5	DESIGN	1.4591332540963053E-5	TEST	1.8630399766677558E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.981136330547121	WITHOUT_CLASSIFICATION	0.018409793069478063	DESIGN	2.7536060174821755E-4	IMPLEMENTATION	6.976146449879892E-5	DOCUMENTATION	5.7800028194921904E-5	TEST	5.0954288959062977E-5	DEFECT
// NOTE : this is being used from the process of shutting down a // SessionFactory. Specific things to consider: // (1) this clearing of the region should not propagate to // other nodes on the cluster (if any); this is the // cache-mode-local option bit... // (2) really just trying a best effort to cleanup after // ourselves; lock failures, etc are not critical here; // this is the fail-silently option bit...	WITHOUT_CLASSIFICATION	0.8316677393765254	DESIGN	0.08967315313165523	DEFECT	0.0780245310045484	WITHOUT_CLASSIFICATION	5.161455299499308E-4	TEST	1.1398959427017443E-4	IMPLEMENTATION	4.441363050738545E-6	DOCUMENTATION
// need to extract the component values and check for subtype replacements...	WITHOUT_CLASSIFICATION	0.7262170400330569	WITHOUT_CLASSIFICATION	0.2693823407422802	IMPLEMENTATION	0.004342408633669155	DESIGN	5.0433296580974646E-5	DOCUMENTATION	4.989783825138255E-6	TEST	2.787510587730762E-6	DEFECT
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999855001774166	WITHOUT_CLASSIFICATION	1.4115789129453422E-5	DESIGN	3.073342316090694E-7	DEFECT	6.925929505254659E-8	TEST	4.394637717748643E-9	DOCUMENTATION	3.0452895315371416E-9	IMPLEMENTATION
// for now, just "re-flatten" the metamodel since this is temporary stuff anyway (HHH-1907)	WITHOUT_CLASSIFICATION	0.8593817123130401	WITHOUT_CLASSIFICATION	0.14056176186470729	DESIGN	3.438048400794723E-5	TEST	1.6464015175974332E-5	IMPLEMENTATION	3.935907015002918E-6	DEFECT	1.7454160536898212E-6	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.999993559631446	WITHOUT_CLASSIFICATION	5.812926473773827E-6	DESIGN	2.883815126615677E-7	DOCUMENTATION	1.978287127220391E-7	IMPLEMENTATION	8.256900944015836E-8	DEFECT	5.866284530406111E-8	TEST
//This solution would allow us to eliminate the owner arg to disassemble(), but //what if the collection was null, and then later had elements added? seems unsafe //session.getPersistenceContext().getCollectionEntry( (PersistentCollection) value ).getKey();	WITHOUT_CLASSIFICATION	0.9957140464313328	WITHOUT_CLASSIFICATION	0.004269463959859986	DESIGN	1.5093818401811031E-5	DEFECT	1.0262091322403563E-6	TEST	2.5585589100711866E-7	IMPLEMENTATION	1.1372538237807608E-7	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999919308553674	WITHOUT_CLASSIFICATION	4.179739431519484E-6	IMPLEMENTATION	2.279610677295388E-6	DEFECT	9.235912842750827E-7	DESIGN	3.448997962048505E-7	TEST	3.413034434059249E-7	DOCUMENTATION
// some collections are not lazy:	WITHOUT_CLASSIFICATION	0.9999179048276864	WITHOUT_CLASSIFICATION	5.3830630546449084E-5	IMPLEMENTATION	1.3017012464366447E-5	DESIGN	9.779039532997006E-6	TEST	3.2978202329207165E-6	DEFECT	2.170669536924444E-6	DOCUMENTATION
// Here we don't want to suspend the tx. If we do: // 1) We might be caching query results that reflect uncommitted // changes. No tx == no WL on cache node, so other threads // can prematurely see those query results // 2) No tx == immediate replication. More overhead, plus we // spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.9999905643409277	WITHOUT_CLASSIFICATION	8.630015342962207E-6	DESIGN	7.772165667885753E-7	DEFECT	2.6815949616926928E-8	TEST	1.5476151434565602E-9	DOCUMENTATION	6.359774843141336E-11	IMPLEMENTATION
// return the (fully resolved) identifier value, but do not resolve // to the actual referenced entity instance // NOTE: the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.999999868018253	WITHOUT_CLASSIFICATION	6.174753997920372E-8	DEFECT	4.447146235233968E-8	DESIGN	2.3197380817740534E-8	IMPLEMENTATION	1.3266413780151562E-9	TEST	1.2387223035687942E-9	DOCUMENTATION
// Add a zero (or quite low) timeout option so we don't block. // Ignore any TimeoutException. Basically we forego caching the // query result in order to avoid blocking. // Reads are done with suspended tx, so they should not hold the // lock for long.  Not caching the query result is OK, since // any subsequent read will just see the old result with its // out-of-date timestamp; that result will be discarded and the // db query performed again.	WITHOUT_CLASSIFICATION	0.999753828925427	WITHOUT_CLASSIFICATION	1.302589517043348E-4	IMPLEMENTATION	9.04486189956366E-5	DEFECT	1.6498102092893283E-5	DESIGN	8.711224395231693E-6	TEST	2.5417738491680676E-7	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9999882946409284	WITHOUT_CLASSIFICATION	5.985708948295411E-6	DESIGN	4.602973677699932E-6	IMPLEMENTATION	7.981623005897143E-7	DEFECT	2.9453479979941717E-7	TEST	2.3979345114987796E-8	DOCUMENTATION
// We have the JBCWriteMutex, so no other *local* thread will  // be trying to write this key.  // It's possible here some remote thread has come in and // changed the values again, but since we are reading the // values to write to JBC right now, we know we are writing // the latest values; i.e. we don't assume that what we cached // in entry.update() above is what we should write to JBC *now*. // Our write could be redundant, i.e. we are writing what // some remote thread just came in an wrote.  There is a chance  // that yet another remote thread will update us, and we'll then // overwrite that later data in JBC.  But, all remote nodes will // ignore that change in their localCache; the only place it  // will live will be in JBC, where it can only effect the  // initial state transfer values on newly joined nodes  // (i.e. populateLocalCache()).	WITHOUT_CLASSIFICATION	0.9999999990688087	WITHOUT_CLASSIFICATION	4.004491050861524E-10	DEFECT	3.588851501033718E-10	TEST	1.6794331114951633E-10	IMPLEMENTATION	2.4021916447549435E-12	DOCUMENTATION	1.5116037385345159E-12	DESIGN
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.99997113781327	WITHOUT_CLASSIFICATION	2.5163928564709112E-5	DOCUMENTATION	1.7050788669826908E-6	DEFECT	1.055336833892425E-6	DESIGN	8.195672653989412E-7	IMPLEMENTATION	1.1827519916754711E-7	TEST
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.99997113781327	WITHOUT_CLASSIFICATION	2.5163928564709112E-5	DOCUMENTATION	1.7050788669826908E-6	DEFECT	1.055336833892425E-6	DESIGN	8.195672653989412E-7	IMPLEMENTATION	1.1827519916754711E-7	TEST
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9998304696025135	WITHOUT_CLASSIFICATION	1.4757650091163063E-4	IMPLEMENTATION	9.236760225748651E-6	DESIGN	5.704269073385522E-6	DOCUMENTATION	4.939695895004525E-6	TEST	2.073171380650217E-6	DEFECT
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9636339252684054	WITHOUT_CLASSIFICATION	0.02634730409537362	DESIGN	0.00862717258792605	IMPLEMENTATION	0.0012377249051304902	DEFECT	1.0241278594333807E-4	TEST	5.146035722098138E-5	DOCUMENTATION
// we need to obtain the lock before any actions are // executed, since this may be an inverse="true" // bidirectional association and it is one of the // earlier entity actions which actually updates // the database (this action is resposible for // second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.9998860818170564	WITHOUT_CLASSIFICATION	1.0722432809754928E-4	IMPLEMENTATION	3.978332478040869E-6	DOCUMENTATION	1.9077722890829143E-6	DEFECT	7.068259640604371E-7	TEST	1.0092411487311798E-7	DESIGN
//postDelete: // After actually deleting a row, record the fact that the instance no longer  // exists on the database (needed for identity-column key generation), and // remove it from the session cache	WITHOUT_CLASSIFICATION	0.9787342187246086	WITHOUT_CLASSIFICATION	0.021263996820484795	DESIGN	1.3245332941053013E-6	DEFECT	3.7069982146760437E-7	TEST	6.31325404390227E-8	IMPLEMENTATION	2.6089250565272023E-8	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999177362184064	WITHOUT_CLASSIFICATION	3.190241607488986E-5	IMPLEMENTATION	2.2446530405780916E-5	DOCUMENTATION	1.8762483314001523E-5	DEFECT	7.877748418473452E-6	DESIGN	1.2746033804514758E-6	TEST
//TODO find a decent name before documenting	DOCUMENTATION	0.918783303519327	WITHOUT_CLASSIFICATION	0.04721421200054702	DOCUMENTATION	0.015862259200231633	DEFECT	0.010913837762164204	DESIGN	0.007113975362777454	IMPLEMENTATION	1.1241215495257214E-4	TEST
//FIXME we don't have the associated entity table name here, has to be done in a second pass	DEFECT	0.9978032182794897	WITHOUT_CLASSIFICATION	0.001066581509802911	IMPLEMENTATION	6.208849762159613E-4	DESIGN	4.977086764789179E-4	DEFECT	6.782494780151362E-6	DOCUMENTATION	4.8240632323123745E-6	TEST
// For a one-to-many, a <bag> is not really a bag; // it is *really* a set, since it can't contain the // same element twice. It could be considered a bug // in the mapping dtd that <bag> allows <one-to-many>.	DEFECT	0.9997467394107495	WITHOUT_CLASSIFICATION	1.5903792263963356E-4	DEFECT	9.077476242342701E-5	IMPLEMENTATION	3.351253539077534E-6	DESIGN	8.782248841769545E-8	TEST	8.828159909209244E-9	DOCUMENTATION
// RDMS does not directly support the trim() function, we use rtrim() and ltrim()	DEFECT	0.9998170030819169	WITHOUT_CLASSIFICATION	1.230331483418103E-4	IMPLEMENTATION	5.0378908664167216E-5	DEFECT	5.944699655377334E-6	DESIGN	1.956190861025356E-6	TEST	1.6839705608957393E-6	DOCUMENTATION
/*         * The following types are not supported in RDMS/JDBC and therefore commented out.         * However, in some cases, mapping them to CHARACTER columns works         * for many applications, but does not work for all cases.         */	DEFECT	0.6645578316735676	WITHOUT_CLASSIFICATION	0.32684089295694857	DEFECT	0.006428530298273793	DESIGN	0.0018691750236060985	TEST	2.883218154047941E-4	DOCUMENTATION	1.5248232199000149E-5	IMPLEMENTATION
// The preference here would be //   SQLFunctionTemplate( Hibernate.TIMESTAMP, "current_timestamp(?1)", false) // but this appears not to work. // Jay Nance 2006-09-22	DEFECT	0.563288146207541	WITHOUT_CLASSIFICATION	0.3066872764953758	DEFECT	0.08787288659795622	IMPLEMENTATION	0.03947796633048692	DESIGN	0.0017507650758409193	TEST	9.229592927990139E-4	DOCUMENTATION
// note: at least my local SQL Server 2005 Express shows this not working...	DEFECT	0.7066166081870997	DEFECT	0.23240457004805845	DESIGN	0.04703508949532396	WITHOUT_CLASSIFICATION	0.012978720661450756	TEST	7.57822946443582E-4	IMPLEMENTATION	2.071886616233836E-4	DOCUMENTATION
// note: at least my local MySQL 5.1 install shows this not working...	DEFECT	0.6026684294436644	DEFECT	0.18951142474535207	WITHOUT_CLASSIFICATION	0.18031979676098345	DESIGN	0.022358517234896805	IMPLEMENTATION	0.004666298905830218	TEST	4.7553290927321973E-4	DOCUMENTATION
/*	DEFECT	0.9964592541565794	WITHOUT_CLASSIFICATION	0.002407996684032343	DESIGN	3.387002723142719E-4	TEST	3.3739715340885986E-4	DOCUMENTATION	2.60962562549357E-4	DEFECT	1.9568917111566136E-4	IMPLEMENTATION
//Don't need this, because we should never ever be selecting no columns in an insert ... select... //and because it causes a bug on DB2	DEFECT	0.9771887895334374	WITHOUT_CLASSIFICATION	0.019197101127704626	DESIGN	0.0019636193189480236	TEST	0.0011856017445655684	DEFECT	3.2227039504451136E-4	DOCUMENTATION	1.42617880300011E-4	IMPLEMENTATION
// TODO : this is broke for subqueries in statements other than selects...	DEFECT	0.6853119817029585	DESIGN	0.30786816022904295	WITHOUT_CLASSIFICATION	0.003185358807286446	TEST	0.0030221280274551157	IMPLEMENTATION	4.174162298825214E-4	DOCUMENTATION	1.9495500337441592E-4	DEFECT
// TODO : should this be an error?	DEFECT	0.864972617427754	DESIGN	0.11038980238564718	IMPLEMENTATION	0.016933416911516955	WITHOUT_CLASSIFICATION	0.004094445689247346	DEFECT	0.0026706818109220845	TEST	9.390357749124193E-4	DOCUMENTATION
// TODO : not sure which (either?) is correct, could not find docs on how to do this. // did find various blogs and forums mentioning that select CURRENT_TIMESTAMP // does not work...	DEFECT	0.7032110421173041	DEFECT	0.24071932687591185	DESIGN	0.053079351292450914	TEST	0.0021437644125436406	WITHOUT_CLASSIFICATION	5.247867860049536E-4	IMPLEMENTATION	3.2172851578463746E-4	DOCUMENTATION
// TODO: figure out how this should be set. /////////////////////////////////////////////////////////////////////////////// // This was the reason for failures regarding INDEX_OP and subclass joins on // theta-join dialects; not sure what behaviour we were trying to emulate ;) //	DEFECT	0.9990122468943008	DESIGN	7.27095053727039E-4	DEFECT	2.3615257260813915E-4	WITHOUT_CLASSIFICATION	1.7783503629563447E-5	IMPLEMENTATION	6.601682867678642E-6	TEST	1.20292866693567E-7	DOCUMENTATION
//TODO: would be nice to use false, but issues with MS SQL	DEFECT	0.6555830589344046	WITHOUT_CLASSIFICATION	0.26579298133457935	DEFECT	0.07138874143319593	DESIGN	0.0058796275855313804	TEST	7.413822864791207E-4	DOCUMENTATION	6.14208425809648E-4	IMPLEMENTATION
//TODO: would be nice to use false, but issues with MS SQL	DEFECT	0.6555830589344046	WITHOUT_CLASSIFICATION	0.26579298133457935	DEFECT	0.07138874143319593	DESIGN	0.0058796275855313804	TEST	7.413822864791207E-4	DOCUMENTATION	6.14208425809648E-4	IMPLEMENTATION
// TODO: cannot use generateSuffixes() - it handles the initial suffix differently.	DEFECT	0.979929839555062	DESIGN	0.01440111546239055	IMPLEMENTATION	0.005636179518841781	WITHOUT_CLASSIFICATION	1.2651676397814137E-5	DOCUMENTATION	1.106375283970814E-5	TEST	9.150034468173403E-6	DEFECT
// starts with an alias (old style) // semi-bad thing about this: can't re-alias another alias.....	DEFECT	0.9999959707839692	WITHOUT_CLASSIFICATION	3.0341535821017287E-6	DESIGN	8.656915830207863E-7	TEST	1.1730757872271401E-7	DEFECT	7.846169413913005E-9	DOCUMENTATION	4.217117562487377E-9	IMPLEMENTATION
//TODO: BUG! this currently fails for named queries for non-POJO entities	DEFECT	0.40720028096434613	WITHOUT_CLASSIFICATION	0.3320562760219766	DESIGN	0.23094937318459557	IMPLEMENTATION	0.015096754578180965	DEFECT	0.011369203442477611	TEST	0.0033281118084232206	DOCUMENTATION
// this call is side-effecty	DEFECT	0.9998927281877871	WITHOUT_CLASSIFICATION	5.92096498719118E-5	DESIGN	2.0585153123325858E-5	IMPLEMENTATION	1.819958397964146E-5	TEST	5.344271904617478E-6	DEFECT	3.93315333358329E-6	DOCUMENTATION
//TODO: old version did not require hashmap lookup: //keys[collectionOwner].getIdentifier()	DEFECT	0.5401728807945116	IMPLEMENTATION	0.40275317447257264	WITHOUT_CLASSIFICATION	0.05153171845660259	DESIGN	0.005496000714179983	DEFECT	3.1385117836462266E-5	TEST	1.4840444296717554E-5	DOCUMENTATION
//TODO: when this is the entry point, we should use an INNER_JOIN for fetching the many-to-many elements!	DEFECT	0.9976312784804356	WITHOUT_CLASSIFICATION	0.002149899737010965	DEFECT	1.306416362847133E-4	DESIGN	7.141982554781536E-5	IMPLEMENTATION	1.2490743362414823E-5	DOCUMENTATION	4.2695773584913155E-6	TEST
// this is only needed (afaict) for processing results from the query cache; // however, this cannot possibly work in the case of discovered types...	DEFECT	0.9998790668422877	WITHOUT_CLASSIFICATION	6.430277558330261E-5	DEFECT	4.42293552503414E-5	DESIGN	5.929030602656888E-6	TEST	5.457705263642146E-6	IMPLEMENTATION	1.014291012355249E-6	DOCUMENTATION
//TODO: this requires that the collection is defined after the //      referenced property in the mapping file (ok?)	DEFECT	0.6965506356600173	DESIGN	0.3033809548656234	WITHOUT_CLASSIFICATION	4.0580170721833197E-5	TEST	2.0416677165318057E-5	IMPLEMENTATION	5.171911684336182E-6	DEFECT	2.240714787789369E-6	DOCUMENTATION
//TODO: is this completely correct?	DEFECT	0.9084928519295842	WITHOUT_CLASSIFICATION	0.08601842792021075	DESIGN	0.0018958274985648618	IMPLEMENTATION	0.0018598125057111225	DEFECT	0.0015950370030854795	TEST	1.3804314284363297E-4	DOCUMENTATION
// three general cases we check here as to whether to render a physical SQL join: // 1) is our parent a DotNode as well?  If so, our property reference is // 	DEFECT	0.9996357746064267	WITHOUT_CLASSIFICATION	3.5144009610875535E-4	DESIGN	8.749716447957603E-6	DEFECT	2.9610789373583043E-6	DOCUMENTATION	9.89007452284693E-7	IMPLEMENTATION	8.549462684674574E-8	TEST
// TODO : currently we really do not handle ValueInclusion.PARTIAL... // ValueInclusion.PARTIAL would indicate parts of a component need to // be included in the select; currently we then just render the entire // component into the select clause in that case.	DEFECT	0.8089312402550257	IMPLEMENTATION	0.18817235234948582	DESIGN	0.0027961188624278607	DEFECT	6.219218806056874E-5	WITHOUT_CLASSIFICATION	3.5093828171156034E-5	DOCUMENTATION	3.002516828894365E-6	TEST
//TODO: inexact, what we really need to know is: are any outer joins used?	DEFECT	0.9634351542344024	DESIGN	0.030807493552639394	IMPLEMENTATION	0.002111617480316291	WITHOUT_CLASSIFICATION	0.00207775003356314	DEFECT	0.001399566706334156	DOCUMENTATION	1.6841799274465148E-4	TEST
// todo : this call will not work for anything other than pojos!	DEFECT	0.942042929856103	WITHOUT_CLASSIFICATION	0.042187287674560536	DEFECT	0.009133025902836385	IMPLEMENTATION	0.006145957560282429	DESIGN	4.701856881343043E-4	TEST	2.0613318083288286E-5	DOCUMENTATION
//TODO: currently we don't know a SessionFactory reference when building the Tuplizer //      THIS IS A BUG (embedded-xml=false on component) // TODO : fix this after HHH-1907 is complete	DEFECT	0.9999982357553346	DESIGN	1.2917746202835628E-6	DEFECT	3.463413633267732E-7	IMPLEMENTATION	9.983211263135201E-8	DOCUMENTATION	1.9119093768037547E-8	TEST	7.177475186347575E-9	WITHOUT_CLASSIFICATION
// TODO: this disables laziness even in non-pojo entity modes:	DEFECT	0.6344100439158565	DESIGN	0.3349394603058367	IMPLEMENTATION	0.011098923006029862	WITHOUT_CLASSIFICATION	0.010701271609481975	DEFECT	0.006859947846238179	DOCUMENTATION	0.0019903533165566084	TEST
//TODO: currently broken for unique-key references (does not detect //      change to unique key property of the associated object) //the owner of the association is not the owner of the id	DEFECT	0.9989750198841082	WITHOUT_CLASSIFICATION	6.504402134218846E-4	IMPLEMENTATION	2.5644960715633797E-4	DEFECT	4.07490981581191E-5	DOCUMENTATION	3.882987594694958E-5	TEST	3.851132120846639E-5	DESIGN
//TODO: entities CAN be compared, by PK, fix this! -> only if/when we can extract the id values....	DEFECT	0.687015731196011	DESIGN	0.2615433185007177	WITHOUT_CLASSIFICATION	0.02435239768701905	DEFECT	0.022640773842207963	IMPLEMENTATION	0.0026771552515336473	TEST	0.0017706235225107912	DOCUMENTATION
//TODO: entities CAN be compared, by PK and entity name, fix this!	DEFECT	0.973547090121313	DESIGN	0.01267304775708425	WITHOUT_CLASSIFICATION	0.011347411409123577	DEFECT	0.0019419082473672122	IMPLEMENTATION	3.340375608747687E-4	TEST	1.5650490423719686E-4	DOCUMENTATION
//TODO: this is kinda inconsistent with CollectionType	DEFECT	0.6375996556031698	DESIGN	0.28204518341559576	WITHOUT_CLASSIFICATION	0.03935626311250915	TEST	0.02895079287260217	IMPLEMENTATION	0.009645856242999046	DEFECT	0.002402248753124001	DOCUMENTATION
//TODO: would be nice to use false, but issues with MS SQL	DEFECT	0.6555830589344046	WITHOUT_CLASSIFICATION	0.26579298133457935	DEFECT	0.07138874143319593	DESIGN	0.0058796275855313804	TEST	7.413822864791207E-4	DOCUMENTATION	6.14208425809648E-4	IMPLEMENTATION
// TODO: does not work for EntityMode.DOM4J yet!	DEFECT	0.932594614299274	DEFECT	0.0364443052117028	IMPLEMENTATION	0.028440491227461694	DESIGN	0.001862082764215016	TEST	4.6152136306119396E-4	DOCUMENTATION	1.9698513428523077E-4	WITHOUT_CLASSIFICATION
//TODO: currently broken for unique-key references (does not detect //      change to unique key property of the associated object)	DEFECT	0.9982117876681134	WITHOUT_CLASSIFICATION	0.0014412601328781531	IMPLEMENTATION	1.896157307639615E-4	DEFECT	9.045348549425185E-5	DOCUMENTATION	4.4048305152299834E-5	DESIGN	2.2834677597961327E-5	TEST
//TODO: not really completely correct, since //      the uoe could occur while resolving //      associations, leaving the PC in an //      inconsistent state	DEFECT	0.949399194376716	WITHOUT_CLASSIFICATION	0.04673474950776505	DEFECT	0.0014239655193091943	TEST	0.0012711253609692587	DESIGN	0.0010926985751587709	IMPLEMENTATION	7.826666008164249E-5	DOCUMENTATION
// could happen for custom Criteria impls.  Not likely, but... // 	DEFECT	0.9997701378870906	WITHOUT_CLASSIFICATION	1.5732925806610483E-4	IMPLEMENTATION	5.054691970139912E-5	DEFECT	1.1123140908946187E-5	TEST	1.0526927075550026E-5	DESIGN	3.3586715745508625E-7	DOCUMENTATION
// This does not support the Cache SQL 'DISTINCT BY (comma-list)' extensions, // but this extension is not supported through Hibernate anyway.	DEFECT	0.986401619047921	WITHOUT_CLASSIFICATION	0.013523028976629376	DEFECT	4.9501699153893084E-5	TEST	1.3349674052200619E-5	IMPLEMENTATION	9.416873793968514E-6	DESIGN	3.083728449490757E-6	DOCUMENTATION
// note that this timestamp is not correct if the connection provider // returns an older JDBC connection that was associated with a // transaction that was already begun before openSession() was called // (don't know any possible solution to this!)	DEFECT	0.9032439410567797	WITHOUT_CLASSIFICATION	0.06322195532601985	IMPLEMENTATION	0.024861844708592155	DESIGN	0.006271560151218518	TEST	0.002355032892814666	DEFECT	4.5665864575197185E-5	DOCUMENTATION
//no need to take a snapshot - this is a  //performance optimization, but not really //important, except for entities with huge  //mutable property values	DEFECT	0.9994641406935361	WITHOUT_CLASSIFICATION	4.454614442593443E-4	DEFECT	3.3765889669067704E-5	IMPLEMENTATION	3.2324976114969E-5	DOCUMENTATION	1.4973358801327129E-5	DESIGN	9.333637619272552E-6	TEST
// TODO : this really needs to be delayed unitl after we definitively know the operand node type; // where this is currently a problem is parameters for which where we cannot unequivocally // resolve an expected type	DEFECT	0.7195929289352179	IMPLEMENTATION	0.2649219825175608	DESIGN	0.014823620213350756	DEFECT	4.154963380762134E-4	DOCUMENTATION	1.9445916796423534E-4	WITHOUT_CLASSIFICATION	5.1512827830119705E-5	TEST
// First, validate all the enabled filters... //TODO: this implementation has bad performance	DEFECT	0.9898855907849964	WITHOUT_CLASSIFICATION	0.009133423388412767	IMPLEMENTATION	9.698998254097788E-4	DESIGN	5.395202468233403E-6	DOCUMENTATION	3.926838763584017E-6	DEFECT	1.7639599493021913E-6	TEST
// TODO: what if batchUpdate is a callablestatement ? // calls executeBatch()	DEFECT	0.8787624752049956	DEFECT	0.04943990076665644	IMPLEMENTATION	0.03951824149021583	WITHOUT_CLASSIFICATION	0.029687011109288463	DESIGN	0.002043222033169743	TEST	5.491493956740289E-4	DOCUMENTATION
// assume that the row was not there since it previously had only null // values, so do an INSERT instead //TODO: does not respect dynamic-insert	DEFECT	0.9998301693461451	WITHOUT_CLASSIFICATION	1.0494647527844518E-4	DESIGN	3.8086943196153824E-5	IMPLEMENTATION	1.6104164994267743E-5	TEST	6.65811778119049E-6	DEFECT	4.0349526048934986E-6	DOCUMENTATION
//TODO: passing null here, because this method is not really used for DOM4J at the moment //      but it is still a bug, if we don't get rid of this!	DEFECT	0.9319635489953974	WITHOUT_CLASSIFICATION	0.029881775715583595	DESIGN	0.024975143089335974	DEFECT	0.011516768914197494	IMPLEMENTATION	0.0015812356085036466	TEST	8.152767698189212E-5	DOCUMENTATION
//note that this implementation is kinda broken //for components with many-to-one associations	DEFECT	0.9907162104411741	WITHOUT_CLASSIFICATION	0.007744704015652541	DESIGN	9.319680824616425E-4	IMPLEMENTATION	5.588198217699927E-4	TEST	2.591315188219071E-5	DEFECT	2.2384487059625902E-5	DOCUMENTATION
// TODO: at the point where we are resolving collection references, we don't // know if the uk value has been resolved (depends if it was earlier or // later in the mapping document) - now, we could try and use e.getStatus() // to decide to semiResolve(), trouble is that initializeEntity() reuses // the same array for resolved and hydrated values	DEFECT	0.993484319843581	DESIGN	0.005884678451685247	WITHOUT_CLASSIFICATION	4.884340507459109E-4	DEFECT	9.501497810443822E-5	IMPLEMENTATION	4.6768933633022696E-5	DOCUMENTATION	7.837422502591935E-7	TEST
//TODO: This is assertion is disabled because there is a bug that means the //	DEFECT	0.9933344318958466	WITHOUT_CLASSIFICATION	0.004416398601811362	DEFECT	0.0019482290256473479	DESIGN	2.6642342670690143E-4	IMPLEMENTATION	3.1925975570911676E-5	TEST	2.5910744168364904E-6	DOCUMENTATION
// This doesn't actually seem to work but it *might* // work on some dbs. Also it doesn't work if there // are multiple columns of results because it // is not accounting for the suffix: // return new String[] { getDiscriminatorColumnName() };	DEFECT	0.9991725093125828	WITHOUT_CLASSIFICATION	8.181966376002545E-4	DESIGN	8.352415574834567E-6	DEFECT	9.239701871750363E-7	TEST	1.178906202659336E-8	DOCUMENTATION	5.8749928642545056E-9	IMPLEMENTATION
// TODO: Deal with the "optional" attribute in the <join> mapping; // this code assumes that optional defaults to "true" because it // doesn't actually seem to work in the fetch="join" code // // Note that actual proper handling of optional-ality here is actually // more involved than this patch assumes.  Remember that we might have // multiple <join/> mappings associated with a single entity.  Really // a couple of things need to happen to properly handle optional here: //  1) First and foremost, when handling multiple <join/>s, we really //      should be using the entity root table as the driving table; //      another option here would be to choose some non-optional joined //      table to use as the driving table.  In all likelihood, just using //      the root table is much simplier //  2) Need to add the FK columns corresponding to each joined table //      to the generated select list; these would then be used when //      iterating the result set to determine whether all non-optional //      data is present // My initial thoughts on the best way to deal with this would be // to introduce a new SequentialSelect abstraction that actually gets // generated in the persisters (ok, SingleTable...) and utilized here. // It would encapsulated all this required optional-ality checking...	DEFECT	0.9938373344606187	WITHOUT_CLASSIFICATION	0.003843914721499976	DESIGN	0.0015543086062243861	DEFECT	5.747112992114908E-4	IMPLEMENTATION	1.7522353442166126E-4	TEST	1.4507378023860202E-5	DOCUMENTATION
// todo : what else to do here?	DESIGN	0.8409623353508676	WITHOUT_CLASSIFICATION	0.15185926440672348	IMPLEMENTATION	0.007051216075438834	DESIGN	5.212799125311328E-5	TEST	4.627009998568194E-5	DEFECT	2.878607573122834E-5	DOCUMENTATION
//put() has nowait semantics, is this really appropriate? //note that it needs to be async replication, never local or sync	DESIGN	0.9944266142714725	DESIGN	0.002978202338607601	WITHOUT_CLASSIFICATION	0.0012554520582582563	DEFECT	0.001097329992645807	IMPLEMENTATION	1.5992119451965076E-4	TEST	8.248014449644672E-5	DOCUMENTATION
// 'hibernate.temp.use_jdbc_metadata_defaults' is a temporary magic value. // The need for it is intended to be alleviated with future developement, thus it is // not defined as an Environment constant... // // it is used to control whether we should consult the JDBC metadata to determine // certain Settings default values; it is useful to *not* do this when the database // may not be available (mainly in tools usage).	DESIGN	0.5304477285629826	DESIGN	0.46954685487392317	WITHOUT_CLASSIFICATION	4.4664191530971865E-6	TEST	6.771173543168603E-7	DOCUMENTATION	2.3287783142491034E-7	DEFECT	4.014875541298401E-8	IMPLEMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.7189527786395711	WITHOUT_CLASSIFICATION	0.27811559039452427	DESIGN	0.002458811284992379	DEFECT	3.224974975743091E-4	TEST	7.945481564565898E-5	IMPLEMENTATION	7.0867367692172E-5	DOCUMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.7189527786395711	WITHOUT_CLASSIFICATION	0.27811559039452427	DESIGN	0.002458811284992379	DEFECT	3.224974975743091E-4	TEST	7.945481564565898E-5	IMPLEMENTATION	7.0867367692172E-5	DOCUMENTATION
// todo : eventually merge this with TreeCache and just add optional opt-lock support there.	DESIGN	0.9892678714094872	WITHOUT_CLASSIFICATION	0.010664580806136708	IMPLEMENTATION	3.807016692877199E-5	DESIGN	1.1983962782403322E-5	DOCUMENTATION	1.0199095208931017E-5	DEFECT	7.294559455934351E-6	TEST
// can happen because of the multiple ways Cache.remove() // can be invoked :(	DESIGN	0.9999819715832337	WITHOUT_CLASSIFICATION	1.5787899393617033E-5	DESIGN	1.2216734845786654E-6	IMPLEMENTATION	8.472240061210359E-7	DEFECT	1.2942493867505953E-7	DOCUMENTATION	4.219494343479099E-8	TEST
// work around the "feature" where tree cache is validating the // inserted node during the next transaction.  no idea...	DESIGN	0.9954617209400463	WITHOUT_CLASSIFICATION	0.002980340150356429	DESIGN	0.0015332967665145315	DEFECT	9.846858631887521E-6	TEST	8.254768157885925E-6	DOCUMENTATION	6.5405162929357365E-6	IMPLEMENTATION
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.6761277964378163	WITHOUT_CLASSIFICATION	0.3214540031636594	DESIGN	0.0012283880355431996	DOCUMENTATION	0.001054363006920785	TEST	1.1422475680160265E-4	IMPLEMENTATION	2.122459925880086E-5	DEFECT
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.6761277964378163	WITHOUT_CLASSIFICATION	0.3214540031636594	DESIGN	0.0012283880355431996	DOCUMENTATION	0.001054363006920785	TEST	1.1422475680160265E-4	IMPLEMENTATION	2.122459925880086E-5	DEFECT
// FIXME Hacky workaround to JBCACHE-1202	DESIGN	0.5254907732919676	DEFECT	0.42984225515123525	DESIGN	0.039949975215807634	WITHOUT_CLASSIFICATION	0.0033081115059096417	IMPLEMENTATION	0.0012288072074137404	DOCUMENTATION	1.8007762766607342E-4	TEST
// FIXME Hacky workaround to JBCACHE-1202	DESIGN	0.5254907732919676	DEFECT	0.42984225515123525	DESIGN	0.039949975215807634	WITHOUT_CLASSIFICATION	0.0033081115059096417	IMPLEMENTATION	0.0012288072074137404	DOCUMENTATION	1.8007762766607342E-4	TEST
// TODO: I considered validating TS cache config here, // but decided to defer unti getTimestampsCacheInstance() in case the  // cache is never actually used	DESIGN	0.9131443325199335	WITHOUT_CLASSIFICATION	0.08427144339926504	IMPLEMENTATION	0.0016177896630193995	DEFECT	9.450720486058899E-4	DESIGN	1.7210925710518073E-5	DOCUMENTATION	4.151443465543378E-6	TEST
// TODO Is this a valid operation on a timestamps cache?	DESIGN	0.7996256585146899	DESIGN	0.10949343742736325	WITHOUT_CLASSIFICATION	0.08758104423754517	IMPLEMENTATION	0.00267801177077797	TEST	5.057395697472513E-4	DOCUMENTATION	1.1610847987652119E-4	DEFECT
// TODO Is this a valid operation on a timestamps cache?	DESIGN	0.7996256585146899	DESIGN	0.10949343742736325	WITHOUT_CLASSIFICATION	0.08758104423754517	IMPLEMENTATION	0.00267801177077797	TEST	5.057395697472513E-4	DOCUMENTATION	1.1610847987652119E-4	DEFECT
// TODO Why not use the timestamp in a DataVersion?	DESIGN	0.9893068046015926	IMPLEMENTATION	0.007630907927729975	DESIGN	0.0019593469804768636	WITHOUT_CLASSIFICATION	7.050653761814417E-4	DEFECT	3.017180763728194E-4	DOCUMENTATION	9.615703764629604E-5	TEST
// can happen because of the multiple ways Cache.remove() // can be invoked :(	DESIGN	0.9999819715832337	WITHOUT_CLASSIFICATION	1.5787899393617033E-5	DESIGN	1.2216734845786654E-6	IMPLEMENTATION	8.472240061210359E-7	DEFECT	1.2942493867505953E-7	DOCUMENTATION	4.219494343479099E-8	TEST
// work around the "feature" where tree cache is validating the // inserted node during the next transaction. no idea...	DESIGN	0.9970707966596134	WITHOUT_CLASSIFICATION	0.0016432342296225017	DESIGN	0.0012637152909780918	DEFECT	8.373535736570357E-6	TEST	7.132360555500758E-6	DOCUMENTATION	6.747923493846417E-6	IMPLEMENTATION
//swaldman 2004-02-07: modify to allow null values to signify fall through to c3p0 PoolConfig defaults	DESIGN	0.9999088373975445	WITHOUT_CLASSIFICATION	6.506282137210223E-5	DEFECT	1.808729571594177E-5	DESIGN	3.6754452501462847E-6	DOCUMENTATION	2.820264642280216E-6	TEST	1.5167754750799319E-6	IMPLEMENTATION
// turn hibernate.c3p0.* into c3p0.*, so c3p0 // gets a chance to see all hibernate.c3p0.*	DESIGN	0.9999998669755286	WITHOUT_CLASSIFICATION	1.159828204041547E-7	DESIGN	5.7722448328055E-9	IMPLEMENTATION	4.387861215561835E-9	DEFECT	4.381758429168151E-9	DOCUMENTATION	2.499786621654995E-9	TEST
//TODO: this bit actually has to be called after all cascades! //      but since identity insert is called *synchronously*, //      instead of asynchronously as other actions, it isn't	DESIGN	0.901235225740528	WITHOUT_CLASSIFICATION	0.09630296108459387	DESIGN	0.001652985090876041	IMPLEMENTATION	3.8082771572333865E-4	TEST	3.206427059481741E-4	DEFECT	1.0735766233062104E-4	DOCUMENTATION
//TODO: reenable if we also fix the above todo	DESIGN	0.9937332352841783	WITHOUT_CLASSIFICATION	0.004670008088327445	DESIGN	0.0011094131404659746	IMPLEMENTATION	2.0781611653895656E-4	TEST	1.6016223949865785E-4	DOCUMENTATION	1.1936513099059919E-4	DEFECT
//TODO: inefficient if that cache is just going to ignore the updated state!	DESIGN	0.8680495128194904	WITHOUT_CLASSIFICATION	0.10719660795064498	IMPLEMENTATION	0.024368545721124464	DEFECT	1.9536266818374074E-4	TEST	1.0867192237664792E-4	DOCUMENTATION	8.129891817970321E-5	DESIGN
// we may be screwed here since the collection action is about to execute // and we do not know the final owner key value	DESIGN	0.9991976102501515	WITHOUT_CLASSIFICATION	3.7733952180950655E-4	IMPLEMENTATION	3.374128850197272E-4	DESIGN	8.58491711388646E-5	DEFECT	1.421876863890713E-6	TEST	3.66295016378541E-7	DOCUMENTATION
/** Create an action that will evict collection and entity regions based on queryspaces (table names).	DESIGN	0.5301266700184724	DESIGN	0.2563232265578373	WITHOUT_CLASSIFICATION	0.21065713638654662	IMPLEMENTATION	0.0026114032462006666	TEST	1.7060388863463898E-4	DOCUMENTATION	1.1095990230838749E-4	DEFECT
// todo : what else to do here?	DESIGN	0.8409623353508676	WITHOUT_CLASSIFICATION	0.15185926440672348	IMPLEMENTATION	0.007051216075438834	DESIGN	5.212799125311328E-5	TEST	4.627009998568194E-5	DEFECT	2.878607573122834E-5	DOCUMENTATION
// todo : modify the class definition if not already transformed...	DESIGN	0.9990427394862006	WITHOUT_CLASSIFICATION	9.51933985427617E-4	DESIGN	3.2771715949030733E-6	IMPLEMENTATION	8.328869341862874E-7	DEFECT	6.262089790839315E-7	TEST	5.902608636713321E-7	DOCUMENTATION
// todo : what else to do here?	DESIGN	0.8409623353508676	WITHOUT_CLASSIFICATION	0.15185926440672348	IMPLEMENTATION	0.007051216075438834	DESIGN	5.212799125311328E-5	TEST	4.627009998568194E-5	DEFECT	2.878607573122834E-5	DOCUMENTATION
// this is called by SessionFactory irregardless; we just disregard here; // could also add a check to SessionFactory to only conditionally call start	DESIGN	0.9999242447476222	WITHOUT_CLASSIFICATION	5.341188286552112E-5	IMPLEMENTATION	7.052852110132284E-6	TEST	5.838946868210345E-6	DESIGN	5.68713656879184E-6	DOCUMENTATION	3.7644339650394275E-6	DEFECT
// this is called by SessionFactory irregardless; we just disregard here; // could also add a check to SessionFactory to only conditionally call stop	DESIGN	0.9998359554480172	WITHOUT_CLASSIFICATION	1.2829321841536083E-4	IMPLEMENTATION	1.4525459285968682E-5	DESIGN	1.0804640281388698E-5	TEST	6.513738015119255E-6	DOCUMENTATION	3.9074959850126144E-6	DEFECT
//TODO: to handle concurrent writes correctly, this should return a Lock to the client	DESIGN	0.8156761853530841	DESIGN	0.14413338704466377	WITHOUT_CLASSIFICATION	0.0317137651816794	IMPLEMENTATION	0.0034569090640506994	TEST	0.002663699962595717	DEFECT	0.0023560533939263936	DOCUMENTATION
//put() has nowait semantics, is this really appropriate? //note that it needs to be async replication, never local or sync	DESIGN	0.9944266142714725	DESIGN	0.002978202338607601	WITHOUT_CLASSIFICATION	0.0012554520582582563	DEFECT	0.001097329992645807	IMPLEMENTATION	1.5992119451965076E-4	TEST	8.248014449644672E-5	DOCUMENTATION
//TODO: to handle concurrent writes correctly, the client should pass in a Lock	DESIGN	0.9526138019107646	WITHOUT_CLASSIFICATION	0.042547030402885905	DESIGN	0.0019558561119739333	DEFECT	0.0019414257280242224	IMPLEMENTATION	5.782798477017169E-4	TEST	3.636059986496171E-4	DOCUMENTATION
//TODO: assumes all collections disassemble to an array!	DESIGN	0.9958577552314368	WITHOUT_CLASSIFICATION	0.002951832933365395	DESIGN	7.460884203730896E-4	DEFECT	3.099383724478613E-4	IMPLEMENTATION	1.0320796916630079E-4	TEST	3.1177073210510106E-5	DOCUMENTATION
//TODO: reuse the PreLoadEvent	DESIGN	0.9849040817149971	WITHOUT_CLASSIFICATION	0.01433939993458837	IMPLEMENTATION	3.785491373050605E-4	DESIGN	2.069310069309416E-4	DOCUMENTATION	1.4049406885903638E-4	DEFECT	3.054413731944178E-5	TEST
// todo: this was added to support initializing an entity's EntityEntry snapshot during reattach; // this should be refactored to instead expose a method to assemble a EntityEntry based on this // state for return.	DESIGN	0.9988248652102021	DESIGN	0.0011658012108549552	WITHOUT_CLASSIFICATION	5.6181039246752545E-6	DEFECT	3.6103818111141283E-6	TEST	5.8533630536869805E-8	DOCUMENTATION	4.6559576547824433E-8	IMPLEMENTATION
// todo : what is the implication of this?	DESIGN	0.9654508695571877	WITHOUT_CLASSIFICATION	0.024081712284638308	DESIGN	0.005837092479205179	DOCUMENTATION	0.0038474144175877456	IMPLEMENTATION	4.8285556782302614E-4	TEST	3.000556935578073E-4	DEFECT
// use COUNT as the default.  This mimics the old behavior, although // NONE might be a better option moving forward in the case of callable	DESIGN	0.9954765846119672	WITHOUT_CLASSIFICATION	0.004514645534234464	DESIGN	8.650617180890957E-6	DEFECT	8.306741324592666E-8	TEST	3.404501711225721E-8	IMPLEMENTATION	2.1241870139295794E-9	DOCUMENTATION
/* TODO: joinKeyColumnName & foreignKeyColumnName should be called either here or at a	DESIGN	0.8460564229335285	DESIGN	0.10395585262993419	IMPLEMENTATION	0.03899684645675355	WITHOUT_CLASSIFICATION	0.00960462378007563	DEFECT	0.0012572188035100342	TEST	1.2903539619799732E-4	DOCUMENTATION
//TODO: suck this into initLaziness!	DESIGN	0.6440876520209594	WITHOUT_CLASSIFICATION	0.3279817910484097	DESIGN	0.010856298573947988	DOCUMENTATION	0.008634212749921778	IMPLEMENTATION	0.004458942901398991	DEFECT	0.003981102705362069	TEST
// we have to set up the table later!! yuck	DESIGN	0.9999944572954108	WITHOUT_CLASSIFICATION	3.893841513141401E-6	IMPLEMENTATION	1.0297885564209636E-6	DEFECT	3.8765809105083683E-7	DESIGN	1.3906408956377712E-7	DOCUMENTATION	9.235233907197839E-8	TEST
//TODO: better to degrade to lazy="false" if uninstrumented	DESIGN	0.6143222120664553	WITHOUT_CLASSIFICATION	0.31968085360829757	DESIGN	0.057645108023853434	IMPLEMENTATION	0.003746890561272221	DOCUMENTATION	0.003716411985461231	DEFECT	8.885237546601101E-4	TEST
// todo : again, how *should* this work for non-pojo entities?	DESIGN	0.9842310483067676	WITHOUT_CLASSIFICATION	0.014862967128572324	IMPLEMENTATION	4.3474828733187237E-4	TEST	2.8692656341225984E-4	DEFECT	1.1963909560143604E-4	DESIGN	6.467061831450672E-5	DOCUMENTATION
// TODO: this is a bit of copy/paste from IndexedCollection.createPrimaryKey()	DESIGN	0.9535339171544505	DESIGN	0.032895696489720024	IMPLEMENTATION	0.007581117274672892	WITHOUT_CLASSIFICATION	0.0031458029769644413	DEFECT	0.0027920153119760133	TEST	5.1450792216373886E-5	DOCUMENTATION
// This inner class implements a case statement....perhaps im being a bit over-clever here	DESIGN	0.997550789576349	WITHOUT_CLASSIFICATION	0.0022539624732400283	IMPLEMENTATION	1.9305944392389955E-4	DESIGN	1.3944135796071434E-6	DEFECT	5.77188678306075E-7	TEST	2.169042291134709E-7	DOCUMENTATION
//TODO: bad implementation, cos it depends upon ordering of mapping doc //      fixing this requires that Collection/PersistentClass gain access //      to the Mappings reference from Configuration (or the filterDefinitions //      map directly) sometime during Configuration.buildSessionFactory //      (after all the types/filter-defs are known and before building //      persisters).	DESIGN	0.9999820603042373	DESIGN	8.221664874886602E-6	IMPLEMENTATION	8.193226009460658E-6	WITHOUT_CLASSIFICATION	6.87647004956484E-7	TEST	5.843671393849648E-7	DOCUMENTATION	2.5279073420357764E-7	DEFECT
//use of a stringbuffer to workaround a JDK bug	DESIGN	0.7174087676715801	WITHOUT_CLASSIFICATION	0.26973579332058656	DESIGN	0.009153288369370764	DEFECT	0.002570558950377412	IMPLEMENTATION	8.670868110936004E-4	DOCUMENTATION	2.645048769915005E-4	TEST
// hack/workaround as sqlquery impl depend on having a key.	DESIGN	0.9481262352101791	DESIGN	0.050541098991753575	WITHOUT_CLASSIFICATION	0.0010771996204253093	IMPLEMENTATION	2.2976580002074314E-4	DEFECT	1.4066145120746416E-5	TEST	1.163423250035886E-5	DOCUMENTATION
//FIXME: get the PersistentClass	DESIGN	0.991631335318844	WITHOUT_CLASSIFICATION	0.0072611869352588254	DESIGN	6.268874832257109E-4	DEFECT	3.054165829551851E-4	IMPLEMENTATION	1.4964744818727466E-4	TEST	2.5526231528928302E-5	DOCUMENTATION
//FIXME: get the PersistentClass	DESIGN	0.991631335318844	WITHOUT_CLASSIFICATION	0.0072611869352588254	DESIGN	6.268874832257109E-4	DEFECT	3.054165829551851E-4	IMPLEMENTATION	1.4964744818727466E-4	TEST	2.5526231528928302E-5	DOCUMENTATION
//Icky workaround for MySQL bug:	DESIGN	0.8740332796473488	WITHOUT_CLASSIFICATION	0.09136402500077	DESIGN	0.03367055417857174	DEFECT	3.839175551456167E-4	IMPLEMENTATION	3.419128641263889E-4	DOCUMENTATION	2.0631075403744264E-4	TEST
//TODO: Somehow add the newly created foreign keys to the internal collection	DESIGN	0.99715509797592	WITHOUT_CLASSIFICATION	0.0018210999013082245	IMPLEMENTATION	5.396280611704448E-4	DEFECT	3.3278376802456584E-4	DOCUMENTATION	1.1454231327848998E-4	DESIGN	3.6847980298169E-5	TEST
//TODO possibly relax that	DESIGN	0.9987568840837078	WITHOUT_CLASSIFICATION	0.0011045561509794872	IMPLEMENTATION	4.3753353259784204E-5	DESIGN	3.988914017400674E-5	DEFECT	2.8611924190842715E-5	DOCUMENTATION	2.6305347688033234E-5	TEST
//TODO possibly relax that	DESIGN	0.9987568840837078	WITHOUT_CLASSIFICATION	0.0011045561509794872	IMPLEMENTATION	4.3753353259784204E-5	DESIGN	3.988914017400674E-5	DEFECT	2.8611924190842715E-5	DOCUMENTATION	2.6305347688033234E-5	TEST
//TODO possibly relax that	DESIGN	0.9987568840837078	WITHOUT_CLASSIFICATION	0.0011045561509794872	IMPLEMENTATION	4.3753353259784204E-5	DESIGN	3.988914017400674E-5	DEFECT	2.8611924190842715E-5	DOCUMENTATION	2.6305347688033234E-5	TEST
//use of a stringbuffer to workaround a JDK bug	DESIGN	0.7174087676715801	WITHOUT_CLASSIFICATION	0.26973579332058656	DESIGN	0.009153288369370764	DEFECT	0.002570558950377412	IMPLEMENTATION	8.670868110936004E-4	DOCUMENTATION	2.645048769915005E-4	TEST
//use a degenerated strategy for backward compatibility	DESIGN	0.9999142582756543	WITHOUT_CLASSIFICATION	5.394091560386729E-5	IMPLEMENTATION	2.3474673789880416E-5	DESIGN	4.703974382194491E-6	TEST	2.6821948927084194E-6	DEFECT	9.399656771770206E-7	DOCUMENTATION
// Sets can be just a view of a part of another collection. // do we need to copy it to be sure it won't be changing // underneath us? // ie. this.set.addAll(set);	DESIGN	0.9997929404269214	WITHOUT_CLASSIFICATION	1.6638864306791539E-4	IMPLEMENTATION	3.3283860955397964E-5	TEST	4.9182914930368836E-6	DEFECT	2.166134355911765E-6	DESIGN	3.0264320636684637E-7	DOCUMENTATION
//note that i parameter is now unused (delete it?)	DESIGN	0.9926930673177542	WITHOUT_CLASSIFICATION	0.0070586037109233325	DESIGN	1.383150226857259E-4	TEST	6.168185557851893E-5	IMPLEMENTATION	4.4972226414471775E-5	DEFECT	3.359866643780072E-6	DOCUMENTATION
//just to help out during the load (ugly, i know)	DESIGN	0.9955961767972702	WITHOUT_CLASSIFICATION	0.003499513880086186	IMPLEMENTATION	7.03525045510976E-4	DEFECT	8.565054955112232E-5	DESIGN	6.476954038229466E-5	TEST	5.0364187199190205E-5	DOCUMENTATION
// TODO : safe to interpret "map.remove(key) == null" as non-dirty?	DESIGN	0.5378614655476955	WITHOUT_CLASSIFICATION	0.32049945340683306	DESIGN	0.13674200028953426	IMPLEMENTATION	0.003971944730340781	DEFECT	7.14795248453731E-4	DOCUMENTATION	2.103407771425438E-4	TEST
// yick!  need this for proper serialization/deserialization handling...	DESIGN	0.9994335791965768	WITHOUT_CLASSIFICATION	3.4205073415214846E-4	IMPLEMENTATION	1.6049906506928737E-4	DESIGN	2.830740249723895E-5	DOCUMENTATION	2.5723034076141527E-5	TEST	9.840567628409718E-6	DEFECT
//TODO: get SQL rendering out of this package!	DESIGN	0.7189527786395711	WITHOUT_CLASSIFICATION	0.27811559039452427	DESIGN	0.002458811284992379	DEFECT	3.224974975743091E-4	TEST	7.945481564565898E-5	IMPLEMENTATION	7.0867367692172E-5	DOCUMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.7189527786395711	WITHOUT_CLASSIFICATION	0.27811559039452427	DESIGN	0.002458811284992379	DEFECT	3.224974975743091E-4	TEST	7.945481564565898E-5	IMPLEMENTATION	7.0867367692172E-5	DOCUMENTATION
//yuck!	DESIGN	0.9976288458350475	WITHOUT_CLASSIFICATION	0.0017461233824655365	DESIGN	2.710452605784061E-4	DOCUMENTATION	2.0658509721921154E-4	DEFECT	1.1285292795262302E-4	TEST	3.454749673676621E-5	IMPLEMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.7189527786395711	WITHOUT_CLASSIFICATION	0.27811559039452427	DESIGN	0.002458811284992379	DEFECT	3.224974975743091E-4	TEST	7.945481564565898E-5	IMPLEMENTATION	7.0867367692172E-5	DOCUMENTATION
// TODO : not sure this is correct, could not find docs on how to do this.	DESIGN	0.6049861664764291	DESIGN	0.3223194300475974	IMPLEMENTATION	0.036900576493576726	WITHOUT_CLASSIFICATION	0.02398508082449564	TEST	0.009905752335729151	DEFECT	0.0019029938221720053	DOCUMENTATION
//HSQL has no Blob/Clob support .... but just put these here for now!	DESIGN	0.9991090383196114	WITHOUT_CLASSIFICATION	4.161749733580803E-4	DESIGN	3.6322021199733156E-4	IMPLEMENTATION	5.5822739543738865E-5	TEST	5.1850557378919474E-5	DEFECT	3.893198110469883E-6	DOCUMENTATION
// does this need holdlock also? : return tableName + " with (updlock, rowlock, holdlock)";	DESIGN	0.9993140740655247	WITHOUT_CLASSIFICATION	5.021233085070476E-4	DESIGN	1.1167789553686043E-4	IMPLEMENTATION	5.7764617663286306E-5	TEST	1.0942420305765167E-5	DOCUMENTATION	3.4176924623515376E-6	DEFECT
// sql-server, at least needed this dropped after use; strange!	DESIGN	0.9997786508304692	WITHOUT_CLASSIFICATION	1.001164492435E-4	DESIGN	9.261178566909716E-5	TEST	1.8771603842278202E-5	IMPLEMENTATION	8.777414689900673E-6	DOCUMENTATION	1.0719160861211551E-6	DEFECT
// todo : is there really any reason to kkeep trying if this fails once?	DESIGN	0.9998657941002601	WITHOUT_CLASSIFICATION	1.219363984550465E-4	DESIGN	6.176535230044495E-6	DEFECT	4.586861002659869E-6	TEST	7.737057481315955E-7	IMPLEMENTATION	7.323993039779973E-7	DOCUMENTATION
// TBD should this be varbinary($1)? //	DESIGN	0.9990745984099099	WITHOUT_CLASSIFICATION	6.431646929088824E-4	DESIGN	1.781497798707187E-4	IMPLEMENTATION	6.499817002676378E-5	TEST	2.014097707203191E-5	DEFECT	1.8947970211837326E-5	DOCUMENTATION
// is it necessary to register %exact since it can only appear in a where clause?	DESIGN	0.9906522098268825	WITHOUT_CLASSIFICATION	0.006762446720336735	IMPLEMENTATION	0.002280519458786908	DESIGN	1.919903788374388E-4	DEFECT	6.973952822916668E-5	TEST	4.309408692737725E-5	DOCUMENTATION
// xmlforest requires a new kind of function constructor	DESIGN	0.9996778941808311	WITHOUT_CLASSIFICATION	2.945502520443925E-4	IMPLEMENTATION	2.3982875962712713E-5	TEST	2.005661382386437E-6	DEFECT	1.253581498365209E-6	DESIGN	3.1344828113051814E-7	DOCUMENTATION
// Does this dialect support the ALTER TABLE syntax?	DESIGN	0.9950040611754201	WITHOUT_CLASSIFICATION	0.004113013582570966	IMPLEMENTATION	3.2031728139493717E-4	DEFECT	2.4282416019996925E-4	DESIGN	1.7585633974979498E-4	TEST	1.4392746066427928E-4	DOCUMENTATION
// Do we need to qualify index names with the schema name?	DESIGN	0.766871502219049	WITHOUT_CLASSIFICATION	0.2136481103509318	IMPLEMENTATION	0.013102710107822243	DOCUMENTATION	0.005021571778511171	DESIGN	0.0010217918380427949	TEST	3.3431370564295697E-4	DEFECT
// Does this dialect support the UNIQUE column syntax?	DESIGN	0.9831865477744437	WITHOUT_CLASSIFICATION	0.012315016488554003	IMPLEMENTATION	0.0028038371471565647	DESIGN	6.365886585884976E-4	TEST	5.641181497032717E-4	DEFECT	4.938917815537767E-4	DOCUMENTATION
// Does this dialect support check constraints?	DESIGN	0.9966990040031058	WITHOUT_CLASSIFICATION	0.002808816101039273	IMPLEMENTATION	2.7799792308229787E-4	TEST	1.7413036564206368E-4	DOCUMENTATION	3.752361669903016E-5	DESIGN	2.5279904312936416E-6	DEFECT
// Do we need to drop constraints before dropping tables in this dialect?	DESIGN	0.9999517358795939	WITHOUT_CLASSIFICATION	3.575658453065993E-5	DESIGN	7.530704452457414E-6	TEST	3.7202624905123633E-6	DOCUMENTATION	1.2002834895110225E-6	IMPLEMENTATION	5.628544312114943E-8	DEFECT
// Does this dialect support the FOR UPDATE syntax?	DESIGN	0.9970294934404055	WITHOUT_CLASSIFICATION	0.0025483924595475905	IMPLEMENTATION	1.2277881441784302E-4	DEFECT	1.1826077966809828E-4	DESIGN	1.0690354092980418E-4	TEST	7.417096503126938E-5	DOCUMENTATION
// Does this dialect support the Oracle-style FOR UPDATE NOWAIT syntax?	DESIGN	0.9926743379332725	WITHOUT_CLASSIFICATION	0.006578848093476948	IMPLEMENTATION	3.167855589078472E-4	DESIGN	1.8720770468432855E-4	TEST	1.2347781163620454E-4	DEFECT	1.1934289802219508E-4	DOCUMENTATION
// Does this dialect support FOR UPDATE OF, allowing particular rows to be locked?	DESIGN	0.8273529462536564	DESIGN	0.11559053791799329	WITHOUT_CLASSIFICATION	0.0552282330954009	DEFECT	7.538193033633761E-4	TEST	6.915973000305748E-4	IMPLEMENTATION	3.828661295554468E-4	DOCUMENTATION
//note there is a wierd implementation in the client side	DESIGN	0.9978698011578754	WITHOUT_CLASSIFICATION	0.0015490423134879763	IMPLEMENTATION	5.558618824012923E-4	DESIGN	2.144660968720777E-5	DEFECT	3.167011963682624E-6	TEST	6.810245842872335E-7	DOCUMENTATION
//TODO: never reached, since getTypeName() actually throws an exception!	DESIGN	0.5366520762084326	DEFECT	0.4532120860496762	WITHOUT_CLASSIFICATION	0.004990183462973079	DESIGN	0.004769157950199676	IMPLEMENTATION	2.263637704400154E-4	DOCUMENTATION	1.5013255827840447E-4	TEST
// todo : should we additionally check the current isolation mode explicitly?	DESIGN	0.8026894672383709	IMPLEMENTATION	0.18950523950003761	WITHOUT_CLASSIFICATION	0.004508753753805041	DESIGN	0.002617486130680023	DOCUMENTATION	6.244758969134399E-4	DEFECT	5.4577480192957144E-5	TEST
// todo : remove this and just have subclasses use Isolater/IsolatedWork directly...	DESIGN	0.9998686953390624	WITHOUT_CLASSIFICATION	1.218560011313559E-4	DESIGN	8.773361268116485E-6	IMPLEMENTATION	3.8529906326049395E-7	TEST	2.306576534966791E-7	DEFECT	5.934182140562626E-8	DOCUMENTATION
//TODO: should orphans really be deleted during lock???	DESIGN	0.5823507090912339	WITHOUT_CLASSIFICATION	0.2820602867253785	DESIGN	0.1341820424213108	DEFECT	0.0012192282064162163	IMPLEMENTATION	1.2070677549232848E-4	TEST	6.70267801682434E-5	DOCUMENTATION
// orphans should not be deleted during merge??	DESIGN	0.9989755431388836	WITHOUT_CLASSIFICATION	9.404579438118655E-4	DESIGN	6.940849292204594E-5	DEFECT	9.5222561491376E-6	IMPLEMENTATION	4.809943666502914E-6	TEST	2.5822456685660647E-7	DOCUMENTATION
// orphans should not be deleted during copy??	DESIGN	0.9997721540035543	WITHOUT_CLASSIFICATION	1.9203490414955007E-4	DESIGN	2.6120917384307873E-5	DEFECT	5.743790901892994E-6	IMPLEMENTATION	3.7574512410289995E-6	TEST	1.88932768953696E-7	DOCUMENTATION
//I suppose?	DESIGN	0.9902293555343799	WITHOUT_CLASSIFICATION	0.009172094919852186	IMPLEMENTATION	3.3128226427972936E-4	DESIGN	1.461245159323259E-4	DOCUMENTATION	6.272161409071095E-5	TEST	5.842115146520239E-5	DEFECT
//TODO: suck this logic into the collection!	DESIGN	0.6908297511262824	DESIGN	0.2782802351987166	WITHOUT_CLASSIFICATION	0.017694750715340175	IMPLEMENTATION	0.006905282557198635	DOCUMENTATION	0.004062937134917621	DEFECT	0.00222704326754451	TEST
// TODO: an alternative is to check if the owner has changed; if it hasn't then // get the ID from collection.getOwner()	DESIGN	0.9132515418108127	WITHOUT_CLASSIFICATION	0.08464462767090336	IMPLEMENTATION	0.001527723045949618	DESIGN	4.7807645491547695E-4	DEFECT	8.598804455360143E-5	TEST	1.2042972865165263E-5	DOCUMENTATION
//TODO:refactor + make this method private	DESIGN	0.9851743994023894	WITHOUT_CLASSIFICATION	0.01379785206596585	DESIGN	7.623784347668893E-4	IMPLEMENTATION	1.651629940503557E-4	TEST	7.044023798465796E-5	DOCUMENTATION	2.9766864842851077E-5	DEFECT
// todo : we can actually just determine this from the incoming EntityEntry-s	DESIGN	0.9998275545184272	WITHOUT_CLASSIFICATION	1.7185490216379686E-4	DESIGN	2.4712628190127363E-7	IMPLEMENTATION	2.1035269013431888E-7	TEST	9.114551961727274E-8	DOCUMENTATION	4.1954917291287746E-8	DEFECT
//TODO: Should this be an InitializeEntityEventListener??? (watch out for performance!)	DESIGN	0.9380379345502778	WITHOUT_CLASSIFICATION	0.057200903701419926	DESIGN	0.004025451421848066	IMPLEMENTATION	4.207692319481191E-4	DEFECT	1.6068189776721132E-4	DOCUMENTATION	1.542591967389409E-4	TEST
//TODO: better to pass the id in as an argument?	DESIGN	0.8343721366482243	WITHOUT_CLASSIFICATION	0.16534973821077129	DESIGN	1.5771933333799226E-4	DEFECT	9.692713652659487E-5	DOCUMENTATION	1.392084256087824E-5	TEST	9.557828579012351E-6	IMPLEMENTATION
// todo : potentially look at optimizing these two arrays	DESIGN	0.9959985261312908	WITHOUT_CLASSIFICATION	0.0039393446144654325	IMPLEMENTATION	2.687944714863214E-5	DESIGN	1.7047715253089593E-5	DEFECT	1.362286098113378E-5	DOCUMENTATION	4.5792308609028895E-6	TEST
/* trim done to workaround stupid oracle bug that cant handle whitespaces before a { in a sp */	DESIGN	0.8988501620012173	WITHOUT_CLASSIFICATION	0.10029544625426039	DESIGN	6.024568374583446E-4	IMPLEMENTATION	1.3440628695522542E-4	TEST	1.0622415375016453E-4	DEFECT	1.1304466358492223E-5	DOCUMENTATION
/* trim done to workaround stupid oracle bug that cant handle whitespaces before a { in a sp */	DESIGN	0.8988501620012173	WITHOUT_CLASSIFICATION	0.10029544625426039	DESIGN	6.024568374583446E-4	IMPLEMENTATION	1.3440628695522542E-4	TEST	1.0622415375016453E-4	DEFECT	1.1304466358492223E-5	DOCUMENTATION
//TODO: temporary	DESIGN	0.8942111431887976	DESIGN	0.085504855610635	WITHOUT_CLASSIFICATION	0.01754986150663248	IMPLEMENTATION	0.0013534584146219848	DEFECT	6.935452210272952E-4	TEST	6.8713605828568E-4	DOCUMENTATION
//TODO: not quite sure about the full implications of this!	DESIGN	0.5864116587793377	WITHOUT_CLASSIFICATION	0.21879664607016952	DESIGN	0.14891653437888033	IMPLEMENTATION	0.04236808521536214	DEFECT	0.0028245879850476705	TEST	6.824875712027386E-4	DOCUMENTATION
//TODO: not quite sure about the full implications of this!	DESIGN	0.5864116587793377	WITHOUT_CLASSIFICATION	0.21879664607016952	DESIGN	0.14891653437888033	IMPLEMENTATION	0.04236808521536214	DEFECT	0.0028245879850476705	TEST	6.824875712027386E-4	DOCUMENTATION
//TODO: ugly here:	DESIGN	0.9718017784128179	WITHOUT_CLASSIFICATION	0.02238839574306108	IMPLEMENTATION	0.0037355211182585296	DESIGN	0.0014532725573367224	DEFECT	3.465272449638462E-4	DOCUMENTATION	2.745049235618262E-4	TEST
//this is kinda the best we can do...	DESIGN	0.9973429639740831	WITHOUT_CLASSIFICATION	0.0010135577200255708	TEST	8.948156785323371E-4	IMPLEMENTATION	3.390140837882806E-4	DEFECT	3.074092898033643E-4	DESIGN	1.0223925376732129E-4	DOCUMENTATION
//TODO: this needn't exclude subclasses...	DESIGN	0.6758313107801074	WITHOUT_CLASSIFICATION	0.31391397532838755	DESIGN	0.0038883061190285416	IMPLEMENTATION	0.0025953664433842885	DEFECT	0.002265413714078769	TEST	0.0015056276150136401	DOCUMENTATION
// todo : need map? the prob is a proper key, right?	DESIGN	0.9934791683314294	WITHOUT_CLASSIFICATION	0.006069114402381627	IMPLEMENTATION	2.8903111043771586E-4	DESIGN	1.0505012150750074E-4	DEFECT	5.025399431582752E-5	DOCUMENTATION	7.382039928028131E-6	TEST
// todo : i'd much rather have this done from #endLoadingCollection(CollectionPersister,LoadingCollectionEntry)...	DESIGN	0.9066606714724778	WITHOUT_CLASSIFICATION	0.09330182656224467	DESIGN	3.190265202866596E-5	TEST	2.4200411569549694E-6	IMPLEMENTATION	2.0562982975669668E-6	DEFECT	1.12297379431767E-6	DOCUMENTATION
// todo : hack!!! // NOTE : here we cleanup the load context when we have no more local // LCE entries.  This "works" for the time being because really // only the collection load contexts are implemented.  Long term, // this cleanup should become part of the "close result set" // processing from the (sandbox/jdbc) jdbc-container code.	DESIGN	0.6128455403848285	WITHOUT_CLASSIFICATION	0.35791587158845994	DESIGN	0.016953829397054247	IMPLEMENTATION	0.012069008599794852	DEFECT	2.0313450503101156E-4	TEST	1.2615524831283534E-5	DOCUMENTATION
// todo : should really move this log statement to CollectionType, where this is used from...	DESIGN	0.8937545598083876	WITHOUT_CLASSIFICATION	0.10601972995681513	DESIGN	1.144858134315052E-4	IMPLEMENTATION	8.935284977004863E-5	TEST	1.7927318172513526E-5	DEFECT	3.944253423102765E-6	DOCUMENTATION
// TODO : keep seperate notions of QT[] here for shallow/non-shallow queries...	DESIGN	0.7454984701549868	IMPLEMENTATION	0.15951802121910197	DESIGN	0.09005789525628317	WITHOUT_CLASSIFICATION	0.0034709666185140146	DEFECT	0.0013071594833851804	TEST	1.4748726772876542E-4	DOCUMENTATION
// TODO : add this info to the translator and aggregate it here...	DESIGN	0.9761754130095096	IMPLEMENTATION	0.015259536958367846	WITHOUT_CLASSIFICATION	0.0076177080660052915	DESIGN	4.437913559920355E-4	DOCUMENTATION	4.406504022959647E-4	TEST	6.290020782915684E-5	DEFECT
//TODO: move into collection type, so we can use polymorphism!	DESIGN	0.7803324850038605	DESIGN	0.21795527520403113	WITHOUT_CLASSIFICATION	6.449837300619223E-4	DEFECT	5.9919631429107E-4	IMPLEMENTATION	3.742409135081702E-4	DOCUMENTATION	9.381883424725197E-5	TEST
// todo : should we check the current isolation mode explicitly?	DESIGN	0.49896748880001424	IMPLEMENTATION	0.4466714757962531	WITHOUT_CLASSIFICATION	0.04958176569893334	DESIGN	0.0033294617439235687	DOCUMENTATION	0.0010330383590800368	DEFECT	4.167696017957159E-4	TEST
//TODO: suck into event class	DESIGN	0.993023146679965	WITHOUT_CLASSIFICATION	0.003264066234809431	DESIGN	0.0020990941769008626	IMPLEMENTATION	9.763303787838603E-4	DOCUMENTATION	5.887624320685199E-4	DEFECT	4.860009747220231E-5	TEST
//do we even really need this? the update will fail anyway....	DESIGN	0.9895978873869921	WITHOUT_CLASSIFICATION	0.006198068905894437	IMPLEMENTATION	0.0033846609108017685	DOCUMENTATION	4.875946890597068E-4	DESIGN	2.0632354330235272E-4	TEST	1.254645639496893E-4	DEFECT
//hum ... should we cascade anyway? throw an exception? fine like it is?	DESIGN	0.9649763620944165	DESIGN	0.015453513810794106	WITHOUT_CLASSIFICATION	0.008746489469517537	IMPLEMENTATION	0.007547442825345642	DEFECT	0.002471424374040923	DOCUMENTATION	8.04767425885293E-4	TEST
//TODO: would it be better to do a refresh from db?	DESIGN	0.8500834239757535	DESIGN	0.11325484841704846	IMPLEMENTATION	0.03430940974780115	WITHOUT_CLASSIFICATION	0.001496602582125054	DEFECT	8.40313947304225E-4	TEST	1.540132996776542E-5	DOCUMENTATION
//TODO: we use two visitors here, inefficient!	DESIGN	0.9334969187156102	WITHOUT_CLASSIFICATION	0.05131184386706275	DESIGN	0.00941582228247149	IMPLEMENTATION	0.0034918179241708817	DEFECT	0.0019526491316971537	DOCUMENTATION	3.3094807898757897E-4	TEST
// this class has no proxies (so do a shortcut)	DESIGN	0.9993401315336504	WITHOUT_CLASSIFICATION	6.473624252135542E-4	DESIGN	6.89923632887463E-6	TEST	2.864485518390146E-6	IMPLEMENTATION	2.123122073784483E-6	DOCUMENTATION	6.191972149158657E-7	DEFECT
//PostLoad is needed for EJB3 //TODO: reuse the PostLoadEvent...	DESIGN	0.4951616005038644	IMPLEMENTATION	0.2822096701813372	WITHOUT_CLASSIFICATION	0.214514332325923	DESIGN	0.0034829660385106843	DEFECT	0.0033753795128534684	TEST	0.0012560514375113466	DOCUMENTATION
//TODO: put this stuff back in to read snapshot from //      the second-level cache (needs some extra work)	DESIGN	0.46940938299172924	DESIGN	0.3420179585885166	IMPLEMENTATION	0.1298568817978472	DEFECT	0.054203603746157965	WITHOUT_CLASSIFICATION	0.002656159946360482	DOCUMENTATION	0.0018560129293886056	TEST
// null or brand new collection // this will also (inefficiently) handle arrays, which have // no snapshot, so we can't do any better	DESIGN	0.9689784929065723	WITHOUT_CLASSIFICATION	0.03090183626365219	DESIGN	1.0693331999055242E-4	IMPLEMENTATION	6.6146211610358305E-6	DOCUMENTATION	5.861394123760085E-6	TEST	2.6149450020649765E-7	DEFECT
//TODO: is this 100% correct?	DESIGN	0.9962675481579671	WITHOUT_CLASSIFICATION	0.0020038363521410825	DESIGN	9.272995651116699E-4	TEST	4.474117087208313E-4	IMPLEMENTATION	2.190623113704786E-4	DEFECT	1.3484190468876535E-4	DOCUMENTATION
// TODO: iteratively get transient entities and retry merge until one of the following conditions: //       1) transientCopyCache.size() == 0 //       2) transientCopyCache.size() is not decreasing and copyCache.size() is not increasing // TODO: find out if retrying can add entities to copyCache (don't think it can...) // For now, just retry once; throw TransientObjectException if there are still any transient entities	DESIGN	0.9730681366091052	WITHOUT_CLASSIFICATION	0.02617072447669054	DEFECT	7.136879220660021E-4	IMPLEMENTATION	4.688934255835688E-5	TEST	4.611003310861115E-7	DOCUMENTATION	1.0054924901704757E-7	DESIGN
// entity name will not be available for non-POJO entities // TODO: cache the entity name somewhere so that it is available to this exception	DESIGN	0.9229275113599743	DESIGN	0.031974013486672344	WITHOUT_CLASSIFICATION	0.027292166526961092	IMPLEMENTATION	0.010142306087121753	DEFECT	0.007380450789588791	TEST	2.8355174968175043E-4	DOCUMENTATION
//TODO: we should throw an exception if we really *know* for sure   //      that this is a detached instance, rather than just assuming //throw new StaleObjectStateException(entityName, id);	DESIGN	0.973583313108509	WITHOUT_CLASSIFICATION	0.015539708906308425	DESIGN	0.010567960883226726	DEFECT	3.0583730977590197E-4	TEST	2.450082855441493E-6	DOCUMENTATION	7.297093245350403E-7	IMPLEMENTATION
// TODO : perhaps we should additionally require that the incoming entity // version be equivalent to the defined unsaved-value?	DESIGN	0.9800525397723929	IMPLEMENTATION	0.019926408189465332	DESIGN	1.0862602828761464E-5	DEFECT	6.736238857829634E-6	WITHOUT_CLASSIFICATION	2.5621406998966563E-6	DOCUMENTATION	8.910557553515957E-7	TEST
// perhaps this should be an exception since it is only ever used // in the above method?	DESIGN	0.9921771813676189	WITHOUT_CLASSIFICATION	0.007737204323825389	DESIGN	6.129492696925697E-5	DEFECT	2.3427236994519832E-5	TEST	8.537722640882612E-7	DOCUMENTATION	3.8372327785259876E-8	IMPLEMENTATION
// Put a placeholder in entries, so we don't recurse back and try to save() the // same object again. QUESTION: should this be done before onSave() is called? // likewise, should it be done before onUpdate()?	DESIGN	0.8714200255197736	WITHOUT_CLASSIFICATION	0.12726833858287157	DESIGN	0.001169295843522072	IMPLEMENTATION	8.802405922406682E-5	DEFECT	2.8428870079968122E-5	TEST	2.5887124528711224E-5	DOCUMENTATION
//TODO: merge into one method!	DESIGN	0.8668220794138414	WITHOUT_CLASSIFICATION	0.13024969246905266	DESIGN	0.001301499079894318	IMPLEMENTATION	7.530303227506097E-4	DOCUMENTATION	7.117628629862101E-4	DEFECT	1.6193585147484534E-4	TEST
//TODO: refactor to .sql package	DESIGN	0.6969326457796198	WITHOUT_CLASSIFICATION	0.2657196727658791	DESIGN	0.03469868518229845	IMPLEMENTATION	0.0021615857689264556	DEFECT	2.736220274013417E-4	DOCUMENTATION	2.1378847587487796E-4	TEST
/** * Provides query splitting methods, which were originally in QueryTranslator. * <br> * TODO: This will need to be refactored at some point. * * @author josh */	DESIGN	0.6070689619683369	DESIGN	0.33438057245105846	IMPLEMENTATION	0.04637104205558865	DOCUMENTATION	0.0071836374475471405	WITHOUT_CLASSIFICATION	0.0039015682321250625	TEST	0.0010942178453439096	DEFECT
//TODO: this is one of the ugliest and most fragile pieces of code in Hibernate....	DESIGN	0.5867045795311259	DESIGN	0.4026354212396122	WITHOUT_CLASSIFICATION	0.006512862600426544	IMPLEMENTATION	0.0033174314672443244	TEST	5.963285980663428E-4	DEFECT	2.3337656352475446E-4	DOCUMENTATION
// todo : temporary //      needed because currently persister is the one that //      creates and renders the join fragments for inheritence //      hierarchies...	DESIGN	0.9496313735164139	WITHOUT_CLASSIFICATION	0.04756800951872055	DESIGN	0.0027255536458657055	IMPLEMENTATION	5.469749078397726E-5	TEST	1.8455865660169983E-5	DOCUMENTATION	1.909962555765592E-6	DEFECT
// TODO : better way?!?	DESIGN	0.9154159203602914	IMPLEMENTATION	0.0786688452668596	DESIGN	0.0025056708851300255	DEFECT	0.0021300769004611105	WITHOUT_CLASSIFICATION	8.068353604341004E-4	DOCUMENTATION	4.7265122682387347E-4	TEST
// Not possible to simply re-use the versionPropertyNode here as it causes // OOM errors due to circularity :(	DESIGN	0.9999877316755851	WITHOUT_CLASSIFICATION	6.874685524025801E-6	DEFECT	4.7967542409689485E-6	IMPLEMENTATION	5.445583494816971E-7	DESIGN	3.1277099962045765E-8	TEST	2.1049200656423224E-8	DOCUMENTATION
//TODO:this is only needed during compilation .. can we eliminate the instvar?	DESIGN	0.9948813028876613	DESIGN	0.0045288081937966875	WITHOUT_CLASSIFICATION	4.192048217787037E-4	IMPLEMENTATION	8.60665004886895E-5	TEST	5.253528127841618E-5	DOCUMENTATION	3.2082314996121894E-5	DEFECT
// TODO : this is a bit dodgy, come up with a better way to check this (plus see above comment)	DESIGN	0.5700142794078328	IMPLEMENTATION	0.4210837571665101	DESIGN	0.0037454781746512965	TEST	0.0029734297631730873	WITHOUT_CLASSIFICATION	0.0014619292310782432	DOCUMENTATION	7.21126256754526E-4	DEFECT
// even here, if only properties mapped to the "base table" are referenced // in the set and where clauses, this could be handled by the BasicDelegate. // TODO : decide if it is better performance-wise to perform that check, or to simply use the MultiTableUpdateDelegate	DESIGN	0.8207773857936632	DESIGN	0.1792000136508679	WITHOUT_CLASSIFICATION	1.0042518268018175E-5	DOCUMENTATION	6.543876997362632E-6	IMPLEMENTATION	4.605382707708779E-6	DEFECT	1.4087774959217925E-6	TEST
//TODO: switch statements are always evil! We already had bugs because  //      of forgotten token types. Use polymorphism for this!	DESIGN	0.993275430492109	WITHOUT_CLASSIFICATION	0.004480430659309396	DEFECT	7.704185806137485E-4	IMPLEMENTATION	6.911933997795192E-4	DOCUMENTATION	6.147032449471941E-4	DESIGN	1.678236232412611E-4	TEST
// TODO : we really need to be able to deal with component paths here also; // this is difficult because the hql-sql grammar expects all those node types // to be FromReferenceNodes.  One potential fix here would be to convert the // IntoClause to just use a FromClause/FromElement combo (as a child of the // InsertStatement) and move all this logic into the InsertStatement.  That's // probably the easiest approach (read: least amount of changes to the grammar // and code), but just doesn't feel right as then an insert would contain // 2 from-clauses	DESIGN	0.9904488958797594	DESIGN	0.009471015592771498	WITHOUT_CLASSIFICATION	3.0163610923629467E-5	DEFECT	1.8521917522903792E-5	TEST	1.6684379037809628E-5	IMPLEMENTATION	1.4718619984777678E-5	DOCUMENTATION
// really there are two situations where it should be ok to allow the insertion // into properties defined on a superclass: //      1) union-subclass with an abstract root entity //      2) discrim-subclass // // #1 is handled already because of the fact that // UnionSubclassPersister alreay always returns 0 // for this call... // // we may want to disallow it for discrim-subclass just for // consistency-sake (currently does not work anyway)...	DESIGN	0.9982644794905804	DESIGN	0.0017291917454652559	WITHOUT_CLASSIFICATION	4.268481193404508E-6	TEST	1.581106227239858E-6	DEFECT	3.070968023519206E-7	IMPLEMENTATION	1.7207973127860496E-7	DOCUMENTATION
//yuck!	DESIGN	0.9976288458350475	WITHOUT_CLASSIFICATION	0.0017461233824655365	DESIGN	2.710452605784061E-4	DOCUMENTATION	2.0658509721921154E-4	DEFECT	1.1285292795262302E-4	TEST	3.454749673676621E-5	IMPLEMENTATION
// implicit joins are always(?) ok to reuse	DESIGN	0.9966994520717689	WITHOUT_CLASSIFICATION	0.002633722469858482	IMPLEMENTATION	6.267512562173881E-4	DESIGN	2.90553434282071E-5	DOCUMENTATION	8.449800145272446E-6	DEFECT	2.569058581883906E-6	TEST
// TODO : we may also want to check that the types here map to exactly one column/JDBC-type //      can't think of a situation where arithmetic expression between multi-column mappings //      makes any sense.	DESIGN	0.9990976707676815	DESIGN	8.996542878402929E-4	IMPLEMENTATION	2.2586099232452215E-6	DOCUMENTATION	2.2515344788707956E-7	DEFECT	1.7175788803242787E-7	TEST	1.942321917662094E-8	WITHOUT_CLASSIFICATION
// we do not know either type //BLIND GUESS!	DESIGN	0.9986403448022064	WITHOUT_CLASSIFICATION	7.286581662616205E-4	IMPLEMENTATION	3.558400994227582E-4	DEFECT	1.8309430067912658E-4	DESIGN	5.779501862980045E-5	DOCUMENTATION	3.4267612800316766E-5	TEST
//TODO: used to be exprNoParens! was this needed?	DESIGN	0.99994139100451	DESIGN	2.451820442202119E-5	IMPLEMENTATION	2.4160043111313285E-5	DEFECT	7.043188764772942E-6	DOCUMENTATION	1.5692383884622556E-6	WITHOUT_CLASSIFICATION	1.3183208034980752E-6	TEST
// TODO: Replace this with a more elegant solution.	DESIGN	0.9843369309618489	DESIGN	0.015543306951179446	IMPLEMENTATION	1.0093696163080492E-4	TEST	1.0974840441861488E-5	DEFECT	5.874014388388669E-6	DOCUMENTATION	1.9762705108353066E-6	WITHOUT_CLASSIFICATION
// TODO: Should this really return null?  If not, figure out something better to do here.	DESIGN	0.49219751624619856	DESIGN	0.48825384102409236	IMPLEMENTATION	0.017481313334954268	WITHOUT_CLASSIFICATION	0.001732576692232748	DEFECT	1.7675585989671862E-4	TEST	1.5799684262536096E-4	DOCUMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.7189527786395711	WITHOUT_CLASSIFICATION	0.27811559039452427	DESIGN	0.002458811284992379	DEFECT	3.224974975743091E-4	TEST	7.945481564565898E-5	IMPLEMENTATION	7.0867367692172E-5	DOCUMENTATION
// yuck!	DESIGN	0.9999309799316395	WITHOUT_CLASSIFICATION	3.84749640924926E-5	DESIGN	1.1958369944744785E-5	DOCUMENTATION	1.024164702491501E-5	DEFECT	5.0026931382077914E-6	TEST	3.342394160132373E-6	IMPLEMENTATION
// ignore it; the incoming property could not be found so we // cannot be sure what to do here.  At the very least, the // safest is to simply not apply any dereference toggling...	DESIGN	0.9987391259826336	WITHOUT_CLASSIFICATION	0.0012402022932460311	IMPLEMENTATION	1.9291003890494733E-5	DESIGN	7.355423100185578E-7	TEST	3.6154106199821317E-7	DEFECT	2.836368577911072E-7	DOCUMENTATION
// TODO : most of below was taken verbatim from DotNode; should either delegate this logic or super-type it	DESIGN	0.9735761354890364	DESIGN	0.01822159770755349	WITHOUT_CLASSIFICATION	0.003632896976102634	DEFECT	0.0023373127011604915	IMPLEMENTATION	0.0020128551435483035	TEST	2.1920198259847853E-4	DOCUMENTATION
// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and "do the right thing" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character // the trim-source	DESIGN	0.5732563987566592	WITHOUT_CLASSIFICATION	0.417002060510513	DESIGN	0.009355542397987174	IMPLEMENTATION	3.397152186035419E-4	DOCUMENTATION	4.618707796814992E-5	TEST	9.603826885179363E-8	DEFECT
// todo: we should really just collect these from the various SelectExpressions, rather than regenerating here	DESIGN	0.9997515375657162	WITHOUT_CLASSIFICATION	2.2332597705176807E-4	DESIGN	1.4266857330512986E-5	TEST	6.1984075738529165E-6	IMPLEMENTATION	4.597638564748577E-6	DEFECT	7.355376296546619E-8	DOCUMENTATION
//TODO: is this a bit ugly?	DESIGN	0.9847291019564001	WITHOUT_CLASSIFICATION	0.00730658566366445	IMPLEMENTATION	0.0029453729553262356	DEFECT	0.0023739556688282533	DESIGN	0.002135693339955422	TEST	5.092904158254682E-4	DOCUMENTATION
// Need a better way to define the suffixes here...	DESIGN	0.9492155216963245	WITHOUT_CLASSIFICATION	0.027115861976583215	IMPLEMENTATION	0.02359270012887647	DESIGN	3.1779118235981866E-5	DEFECT	2.8063987762908043E-5	TEST	1.607309221692391E-5	DOCUMENTATION
// TODO: something much better - look at the type of the other expression! // TODO: Have comparisonExpression and/or arithmeticExpression rules complete the resolution of boolean nodes.	DESIGN	0.9999624398950198	DESIGN	3.5632066341656724E-5	DEFECT	1.1724531023068139E-6	IMPLEMENTATION	4.2933800560489796E-7	WITHOUT_CLASSIFICATION	2.853119297131755E-7	TEST	4.0935600865071005E-8	DOCUMENTATION
// TODO : what amount of significant digits need to be supported here? //      - from the DecimalFormat docs: //          [significant digits] = [minimum integer digits] + [maximum fraction digits]	DESIGN	0.6824165821266119	DESIGN	0.3101575774789196	IMPLEMENTATION	0.006461032870784789	DOCUMENTATION	6.538156370245291E-4	DEFECT	2.8248619889641126E-4	TEST	2.85056877626564E-5	WITHOUT_CLASSIFICATION
// Needed the "clazz_" check to work around union-subclasses // TODO : is there a way to tell whether a persister is truly discrim-column based inheritence?	DESIGN	0.9879717671224283	DESIGN	0.011864147760363312	IMPLEMENTATION	1.0703975736652822E-4	WITHOUT_CLASSIFICATION	3.792063656682177E-5	DEFECT	1.2374101497080475E-5	DOCUMENTATION	6.750621777767877E-6	TEST
//We should actually rework this class to not implement Parser //and just process path expressions in the most convenient way.	DESIGN	0.8100772867338445	DEFECT	0.11253521213652465	DESIGN	0.06089440911549163	IMPLEMENTATION	0.016335084415132897	WITHOUT_CLASSIFICATION	1.270703500458015E-4	DOCUMENTATION	3.0937248960586615E-5	TEST
//The class is now way to complex!	DESIGN	0.9996611726945249	WITHOUT_CLASSIFICATION	2.3409904793029467E-4	DEFECT	4.276957501898055E-5	DESIGN	3.801377787187467E-5	IMPLEMENTATION	1.7822160228838335E-5	DOCUMENTATION	6.122744424984943E-6	TEST
//TODO: get SQL rendering out of here	DESIGN	0.988011113461648	WITHOUT_CLASSIFICATION	0.005954261400518136	DESIGN	0.0033052031843190696	IMPLEMENTATION	0.002559169207377083	DEFECT	1.332301146239326E-4	TEST	3.702263151361737E-5	DOCUMENTATION
//TODO: is there a better way?	DESIGN	0.4663850080519667	IMPLEMENTATION	0.3975026007914262	WITHOUT_CLASSIFICATION	0.13304639837313573	DESIGN	0.002139554240235257	DEFECT	7.353640431844775E-4	TEST	1.9107450005154703E-4	DOCUMENTATION
//Must be done here because of side-effect! yuck...	DESIGN	0.9983058519952998	WITHOUT_CLASSIFICATION	0.0012843858288848831	DESIGN	2.641739628839164E-4	IMPLEMENTATION	1.1505950522674721E-4	DEFECT	1.7647436377861806E-5	DOCUMENTATION	1.2881271326777932E-5	TEST
//name from a super query (a bit inelegant that it shows up here)	DESIGN	0.9313992031230086	WITHOUT_CLASSIFICATION	0.060870772064083624	DESIGN	0.006003290650404237	IMPLEMENTATION	0.001467008212203257	TEST	2.4324192718382703E-4	DEFECT	1.6484023116507233E-5	DOCUMENTATION
// We should reengineer this class so that, rather than the current ad - // hoc linear approach to processing a stream of tokens, we instead // build up a tree of expressions.	DESIGN	0.7345243329255615	DESIGN	0.264740410815171	WITHOUT_CLASSIFICATION	2.9361212576396517E-4	TEST	2.703629120032988E-4	DOCUMENTATION	1.5571417754321726E-4	DEFECT	1.5567043956774485E-5	IMPLEMENTATION
// this is ugly here, but needed because its a subquery	DESIGN	0.9856037752269181	WITHOUT_CLASSIFICATION	0.008929070001517651	DESIGN	0.005243408448027812	IMPLEMENTATION	1.4315546665110616E-4	TEST	4.443113826854922E-5	DOCUMENTATION	3.6159718616697585E-5	DEFECT
// unhappy about this being public ... is there a better way?	DESIGN	0.9669428504975572	WITHOUT_CLASSIFICATION	0.031522883466428564	DESIGN	0.0011639982162093836	IMPLEMENTATION	2.0917939236858598E-4	TEST	1.444439807181624E-4	DEFECT	1.66444467181833E-5	DOCUMENTATION
// Make sure this is a defined parameter and check the incoming value type // TODO: what should be the actual exception type here?	DESIGN	0.8783220578640095	DESIGN	0.1111633101288277	IMPLEMENTATION	0.00988895232177343	WITHOUT_CLASSIFICATION	6.020520604916746E-4	DEFECT	1.771407632583705E-5	TEST	5.913548571715477E-6	DOCUMENTATION
// TODO : this constructor form is *only* used from constructor directly below us; can it go away?	DESIGN	0.8512514419938109	DESIGN	0.08739817716747424	WITHOUT_CLASSIFICATION	0.05517513367052356	IMPLEMENTATION	0.005774430469574093	TEST	2.563972833272982E-4	DEFECT	1.4441941528999867E-4	DOCUMENTATION
//TODO: COPY/PASTE FROM SessionImpl, pull up!	DESIGN	0.968467289513048	WITHOUT_CLASSIFICATION	0.014834399899233025	DESIGN	0.00964560690403831	IMPLEMENTATION	0.006123292825737611	DEFECT	6.127459601064877E-4	DOCUMENTATION	3.166648978367191E-4	TEST
// TODO : should remove this exposure //  and have all references to the session's batcher use the ConnectionManager.	DESIGN	0.7360878350266067	DESIGN	0.2420851154195557	IMPLEMENTATION	0.011767259388080075	WITHOUT_CLASSIFICATION	0.009901118568259306	DEFECT	1.1863361307043348E-4	DOCUMENTATION	4.0037984427642766E-5	TEST
// todo : should this get moved to PersistentContext? // logically, is PersistentContext the "thing" to which an interceptor gets attached?	DESIGN	0.8491775511871946	DESIGN	0.14672245841581488	WITHOUT_CLASSIFICATION	0.0037599975674676932	DEFECT	2.9365334007854833E-4	TEST	2.662136772751234E-5	IMPLEMENTATION	1.971812171678646E-5	DOCUMENTATION
// TODO: what type?	DESIGN	0.9645555644350182	IMPLEMENTATION	0.02944788161925416	DESIGN	0.0035631248450216273	WITHOUT_CLASSIFICATION	0.001298104266941243	DOCUMENTATION	7.256657723012324E-4	TEST	4.09659061463511E-4	DEFECT
// todo : should seriously consider not allowing a txn to begin from a child session //      can always route the request to the root session...	DESIGN	0.9271699074372616	WITHOUT_CLASSIFICATION	0.05198683881660235	DEFECT	0.010120634060801083	IMPLEMENTATION	0.008326901309668084	DESIGN	0.002387656060172881	TEST	8.062315493974522E-6	DOCUMENTATION
// short-circuit for performance...	DESIGN	0.9999878558672614	WITHOUT_CLASSIFICATION	4.050585285210668E-6	DESIGN	3.4958824372443686E-6	DOCUMENTATION	2.471839148641484E-6	IMPLEMENTATION	1.420300158347125E-6	DEFECT	7.055257092157643E-7	TEST
// not absolutely necessary, but does help with aggressive release	DESIGN	0.9987323227751559	WITHOUT_CLASSIFICATION	7.749169646707847E-4	DESIGN	2.9150931978079637E-4	TEST	1.308066823632247E-4	IMPLEMENTATION	6.530462755288409E-5	DEFECT	5.139630476421217E-6	DOCUMENTATION
// TODO : remove these last two as batcher is no longer managing connections	DESIGN	0.5859384794267779	DESIGN	0.32944907218912217	IMPLEMENTATION	0.06709082088798779	WITHOUT_CLASSIFICATION	0.01186148256259269	TEST	0.0053692717294585215	DEFECT	2.9087320406084806E-4	DOCUMENTATION
//work around a bug in all known connection pools....	DESIGN	0.592534733907834	IMPLEMENTATION	0.3045255656722013	WITHOUT_CLASSIFICATION	0.09332985487204912	DESIGN	0.008125128013013159	DEFECT	0.001234567920574309	DOCUMENTATION	2.5014961432813585E-4	TEST
// TODO : make this the factory for "entity mode related" sessions; // also means making this the target of transaction-synch and the // thing that knows how to cascade things between related sessions // // At that point, perhaps this thing is a "SessionContext", and // ConnectionManager is a "JDBCContext"?  A "SessionContext" should // live in the impl package...	DESIGN	0.9995091711666514	DESIGN	4.897240117154018E-4	IMPLEMENTATION	9.3375099286209E-7	DEFECT	7.911469380139693E-8	DOCUMENTATION	7.858096744972901E-8	TEST	1.337497900857852E-8	WITHOUT_CLASSIFICATION
//TODO: does this really need to be here? //      does the collection already have //      it's own up-to-date snapshot?	DESIGN	0.6107217700000357	WITHOUT_CLASSIFICATION	0.3269418664184869	DESIGN	0.03398352471127759	IMPLEMENTATION	0.02712515947851433	DEFECT	9.134619474547254E-4	TEST	3.142174442307762E-4	DOCUMENTATION
//TODO: the i==entitySpan-1 bit depends upon subclass implementation (very bad)	DESIGN	0.6836786468474615	IMPLEMENTATION	0.17269241886879222	DESIGN	0.14261968593036228	WITHOUT_CLASSIFICATION	8.661606128911806E-4	DEFECT	1.313637571282537E-4	DOCUMENTATION	1.1723983364654726E-5	TEST
/**	DESIGN	0.9477299562869385	DESIGN	0.04686115600412967	WITHOUT_CLASSIFICATION	0.0017452186770541376	DOCUMENTATION	0.0014751996367055303	TEST	0.0013462445720009153	IMPLEMENTATION	8.422248231712079E-4	DEFECT
// todo : add the notion of enabled filters to the CacheKey to differentiate filtered collections from non-filtered; //      but CacheKey is currently used for both collections and entities; would ideally need to define two seperate ones; //      currently this works in conjuction with the check on //      DefaultInitializeCollectionEventHandler.initializeCollectionFromCache() (which makes sure to not read from //      cache with enabled filters). // EARLY EXIT!!!!!	DESIGN	0.9999999856386043	WITHOUT_CLASSIFICATION	1.0824539605701954E-8	DESIGN	1.7694041678035977E-9	IMPLEMENTATION	1.1917091977163882E-9	TEST	5.411053091597482E-10	DOCUMENTATION	3.463727757340299E-11	DEFECT
//for sets, we should end the collection load after resolving //the entities, since we might call hashCode() on the elements //TODO: or we could do this polymorphically, and have two //      different operations implemented differently for arrays	DESIGN	0.7138385146932262	WITHOUT_CLASSIFICATION	0.1880466870201212	DESIGN	0.09800884603709999	IMPLEMENTATION	6.196992030452286E-5	TEST	3.930072338717247E-5	DEFECT	4.681605860833931E-6	DOCUMENTATION
//This is not very nice (and quite slow):	DESIGN	0.9992555493907281	WITHOUT_CLASSIFICATION	4.044695311368434E-4	DEFECT	2.4444705240602647E-4	IMPLEMENTATION	8.625167406194638E-5	DESIGN	4.858303930602004E-6	DOCUMENTATION	4.424047736639988E-6	TEST
//use of trim() here is ugly?	DESIGN	0.9999940110864219	WITHOUT_CLASSIFICATION	2.7650041527878148E-6	DESIGN	1.1376950876654443E-6	IMPLEMENTATION	9.477875613462178E-7	DEFECT	6.697299508280944E-7	DOCUMENTATION	4.68696825472211E-7	TEST
//TODO: this is too conservative; if all preceding joins were  //      also inner joins, we could use an inner join here	DESIGN	0.9988244883577652	WITHOUT_CLASSIFICATION	0.0011036773770952389	DESIGN	3.4651697177261835E-5	IMPLEMENTATION	1.666991675177088E-5	DEFECT	1.2132840821340598E-5	TEST	8.379810389283498E-6	DOCUMENTATION
//TODO: look at the owning property and check that it  //      isn't lazy (by instrumentation)	DESIGN	0.9573155247198195	WITHOUT_CLASSIFICATION	0.039726084648586554	IMPLEMENTATION	0.0022760000636499558	DESIGN	4.090054907357034E-4	DOCUMENTATION	2.222245891889082E-4	DEFECT	5.116048801932508E-5	TEST
//TODO: inefficient	DESIGN	0.9395957736735276	WITHOUT_CLASSIFICATION	0.03080726479539511	DESIGN	0.021861994465776913	IMPLEMENTATION	0.00398475015196309	DOCUMENTATION	0.003183012059453812	DEFECT	5.672048538835569E-4	TEST
// why does this matter?	DESIGN	0.9994218271317263	WITHOUT_CLASSIFICATION	2.517702540928545E-4	TEST	1.8959334446251076E-4	IMPLEMENTATION	6.650835194269904E-5	DESIGN	5.6691744709838165E-5	DOCUMENTATION	1.3609173065842354E-5	DEFECT
// from the collection of associations, locate OJA for the // ManyToOne corresponding to this persister to fully // define the many-to-many; we need that OJA so that we can // use its alias here // TODO : is there a better way here?	DESIGN	0.998872137096895	DESIGN	0.0010963227215354567	IMPLEMENTATION	1.4793444115562035E-5	WITHOUT_CLASSIFICATION	1.331888807951764E-5	TEST	1.919365311431096E-6	DOCUMENTATION	1.508484062887309E-6	DEFECT
//TODO: this class depends directly upon CriteriaImpl,  //      in the impl package ... add a CriteriaImplementor  //      interface	DESIGN	0.9992716907091131	DESIGN	6.627034069380968E-4	WITHOUT_CLASSIFICATION	3.474146553729027E-5	DEFECT	2.9175214466295222E-5	IMPLEMENTATION	1.19855028748386E-6	DOCUMENTATION	4.906536575477524E-7	TEST
//TODO: add a CriteriaImplementor interface //      this class depends directly upon CriteriaImpl in the impl package...	DESIGN	0.9721241122767611	DESIGN	0.027671693113203225	WITHOUT_CLASSIFICATION	1.1668299605615321E-4	IMPLEMENTATION	8.202875436654955E-5	DEFECT	4.599923148359785E-6	DOCUMENTATION	8.829364645910157E-7	TEST
// TODO : not so sure this is needed...	DESIGN	0.5950949210228506	DESIGN	0.4043266455042813	IMPLEMENTATION	2.7150225502973E-4	DOCUMENTATION	2.554812409773942E-4	TEST	4.4615765924705135E-5	DEFECT	6.83421093631912E-6	WITHOUT_CLASSIFICATION
// meant to handle dynamic instantiation queries...(Copy from QueryLoader)	DESIGN	0.9972425688454861	WITHOUT_CLASSIFICATION	0.002681461734712766	DESIGN	6.677085132311209E-5	IMPLEMENTATION	4.376359239230354E-6	DOCUMENTATION	2.4993677030241917E-6	DEFECT	2.322841535780927E-6	TEST
// TODO: The order in which entities are saved may matter (e.g., a particular transient entity //       may need to be saved before other transient entities can be saved; //       Keep retrying the batch of transient entities until either: //       1) there are no transient entities left in transientCopyCache //       or 2) no transient entities were saved in the last batch // For now, just run through the transient entities and retry the merge	DESIGN	0.6553256028459893	DEFECT	0.31909332268906965	WITHOUT_CLASSIFICATION	0.017789038364285848	IMPLEMENTATION	0.007635348856160619	DESIGN	8.414277955922805E-5	DOCUMENTATION	7.254446493525305E-5	TEST
// todo: this might really even be moved into the cfg package and used as the basis for all things which are configurable.	DESIGN	0.703083420178732	WITHOUT_CLASSIFICATION	0.29573429354268643	DESIGN	6.187534623636132E-4	IMPLEMENTATION	5.26457758939164E-4	DEFECT	2.7008178993298644E-5	DOCUMENTATION	1.006687828537013E-5	TEST
// todo : currently expects that the individual with expressions apply to the same sql table join. //      This may not be the case for joined-subclass where the property values //      might be coming from different tables in the joined hierarchy.  At some //      point we should expand this to support that capability.  However, that has //      some difficulties: //          1) the biggest is how to handle ORs when the individual comparisons are //              linked to different sql joins. //          2) here we would need to track each comparison individually, along with //              the join alias to which it applies and then pass that information //              back to the FromElement so it can pass it along to the JoinSequence	DESIGN	0.8443539197597144	WITHOUT_CLASSIFICATION	0.1467033347076742	IMPLEMENTATION	0.008754884668078432	DESIGN	1.3785736097572844E-4	DOCUMENTATION	2.7664130119702202E-5	DEFECT	2.2339373437544994E-5	TEST
// this function has a template -> restore output, apply the template and write the result out // TODO: Downcast to avoid using an interface?  Yuck.	DESIGN	0.7688308789960453	DESIGN	0.21457142342538768	WITHOUT_CLASSIFICATION	0.0070650673961365346	TEST	0.006580023941982222	IMPLEMENTATION	0.0017686514638392957	DEFECT	0.0011839547766088266	DOCUMENTATION
// at some point the generate phase needs to be moved out of here, // because a single object-level DML might spawn multiple SQL DML // command executions. // // Possible to just move the sql generation for dml stuff, but for // consistency-sake probably best to just move responsiblity for // the generation phase completely into the delegates // (QueryLoader/StatementExecutor) themselves.  Also, not sure why // QueryLoader currently even has a dependency on this at all; does // it need it?  Ideally like to see the walker itself given to the delegates directly...	DESIGN	0.9686172891779943	DESIGN	0.02601274766708938	WITHOUT_CLASSIFICATION	0.005138224527505765	DEFECT	1.2924760640844492E-4	DOCUMENTATION	9.145164296884942E-5	IMPLEMENTATION	1.1039378033262214E-5	TEST
// get the right object from the list ... would it be easier to just call getEntity() ??	DESIGN	0.9983062471533168	WITHOUT_CLASSIFICATION	8.863511394594949E-4	IMPLEMENTATION	7.70225294534659E-4	DESIGN	3.1959595498688606E-5	DEFECT	4.184024609056494E-6	TEST	1.0327925812403257E-6	DOCUMENTATION
// TODO should we just collect these like with the collections above?	DESIGN	0.999308319689572	IMPLEMENTATION	4.8675753549718917E-4	DESIGN	1.6634165180785557E-4	TEST	3.4182824825185216E-5	WITHOUT_CLASSIFICATION	3.4272504037303634E-6	DOCUMENTATION	9.710478940710074E-7	DEFECT
// todo : better to handle dynamic filters through implicit DynamicFilterParameterSpecification // see the discussion there in DynamicFilterParameterSpecification's javadocs as to why // it is currently not done that way.	DESIGN	0.9723917514609616	DESIGN	0.02759697270029976	WITHOUT_CLASSIFICATION	8.098947041408725E-6	DOCUMENTATION	1.429177399069932E-6	TEST	1.182430578512867E-6	IMPLEMENTATION	5.652837197525356E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // USED ONLY FOR REGRESSION TESTING!!!! // // todo : obviously get rid of all this junk ;) ///////////////////////////////////////////////////////////////////////////	DESIGN	0.9999672388718358	WITHOUT_CLASSIFICATION	1.3479338696747961E-5	DESIGN	9.691420081151602E-6	DEFECT	7.3111665209289614E-6	IMPLEMENTATION	1.2422950839488954E-6	DOCUMENTATION	1.0369077813763805E-6	TEST
//create an index on the key columns??	DESIGN	0.9985063809770572	WITHOUT_CLASSIFICATION	0.0013902217008327571	DESIGN	3.920591804710628E-5	IMPLEMENTATION	2.4205464827281883E-5	DEFECT	2.4205192025467585E-5	DOCUMENTATION	1.5780747210138945E-5	TEST
//TODO: deprecated, remove eventually	DESIGN	0.5725355067122404	WITHOUT_CLASSIFICATION	0.39022141395644094	DESIGN	0.031397767002814506	IMPLEMENTATION	0.005191494402143523	DEFECT	4.959864662278921E-4	DOCUMENTATION	1.5783146013281405E-4	TEST
//create an index on the key columns??	DESIGN	0.9985063809770572	WITHOUT_CLASSIFICATION	0.0013902217008327571	DESIGN	3.920591804710628E-5	IMPLEMENTATION	2.4205464827281883E-5	DEFECT	2.4205192025467585E-5	DOCUMENTATION	1.5780747210138945E-5	TEST
//TODO: improve this hack!	DESIGN	0.664605794973339	WITHOUT_CLASSIFICATION	0.2581151227722242	DESIGN	0.06969816976381561	IMPLEMENTATION	0.0038804130578180816	TEST	0.0023341733664630727	DEFECT	0.001366326066339995	DOCUMENTATION
// inheritance cycle detection (paranoid check)	DESIGN	0.9994711604424388	WITHOUT_CLASSIFICATION	2.611085115297892E-4	IMPLEMENTATION	2.455871060127598E-4	DESIGN	1.469753949648551E-5	DEFECT	5.526911963502551E-6	DOCUMENTATION	1.9194885585138934E-6	TEST
//TODO: remove use of instanceof!	DESIGN	0.9582392389308519	WITHOUT_CLASSIFICATION	0.03928499289195204	DESIGN	0.00214805953632698	DEFECT	1.6664526448928845E-4	IMPLEMENTATION	1.3490055548042197E-4	DOCUMENTATION	2.6162820899345368E-5	TEST
//shortcut	DESIGN	0.9997840204246243	WITHOUT_CLASSIFICATION	1.3945608957804592E-4	DESIGN	2.8983273137952777E-5	DOCUMENTATION	2.629024295991031E-5	DEFECT	1.542559132880222E-5	TEST	5.824378370876273E-6	IMPLEMENTATION
//TODO: handle the case of a foreign key to something other than the pk	DESIGN	0.9972633807221859	WITHOUT_CLASSIFICATION	0.0020018287982733873	IMPLEMENTATION	7.051759479055508E-4	DESIGN	1.7705744541912146E-5	DEFECT	8.562573600372245E-6	DOCUMENTATION	3.3462134929843214E-6	TEST
// create an index on the key columns??	DESIGN	0.9998132282369059	WITHOUT_CLASSIFICATION	1.708548304199644E-4	DESIGN	5.703888414575569E-6	IMPLEMENTATION	4.0606335889950486E-6	DEFECT	3.48412775833549E-6	DOCUMENTATION	2.6682829122618816E-6	TEST
// todo : remove	DESIGN	0.999499355095392	WITHOUT_CLASSIFICATION	3.7374094882538914E-4	IMPLEMENTATION	1.123714812091501E-4	DESIGN	6.841412200484854E-6	TEST	4.375315980084779E-6	DOCUMENTATION	3.315746393029029E-6	DEFECT
// todo : remove	DESIGN	0.999499355095392	WITHOUT_CLASSIFICATION	3.7374094882538914E-4	IMPLEMENTATION	1.123714812091501E-4	DESIGN	6.841412200484854E-6	TEST	4.375315980084779E-6	DOCUMENTATION	3.315746393029029E-6	DEFECT
// todo : remove	DESIGN	0.999499355095392	WITHOUT_CLASSIFICATION	3.7374094882538914E-4	IMPLEMENTATION	1.123714812091501E-4	DESIGN	6.841412200484854E-6	TEST	4.375315980084779E-6	DOCUMENTATION	3.315746393029029E-6	DEFECT
// todo : throw exception?	DESIGN	0.9989844320344871	WITHOUT_CLASSIFICATION	5.215845338059927E-4	DESIGN	2.9808459655349774E-4	IMPLEMENTATION	1.0678139860378598E-4	DEFECT	5.9195195649804055E-5	DOCUMENTATION	2.9922240899831698E-5	TEST
// todo : throw exception?  maybe warn if not the same?	DESIGN	0.6166415509544814	DESIGN	0.23182483567580486	WITHOUT_CLASSIFICATION	0.12952000486655557	DEFECT	0.021156063348229122	IMPLEMENTATION	5.437906440553679E-4	DOCUMENTATION	3.137545108737873E-4	TEST
//TODO: make EntityPersister *not* depend on SessionFactoryImplementor //interface, if possible	DESIGN	0.9551361583181154	DESIGN	0.038703110598777866	WITHOUT_CLASSIFICATION	0.005858824694475897	DEFECT	2.636531513077127E-4	IMPLEMENTATION	2.8344952728021544E-5	DOCUMENTATION	9.908284595248637E-6	TEST
//TODO: is there a more elegant way than downcasting?	DESIGN	0.5719206123013624	WITHOUT_CLASSIFICATION	0.3834203448335988	DESIGN	0.022807568284749054	DEFECT	0.020562041637382743	IMPLEMENTATION	0.0010998845595660317	TEST	1.8954838334088548E-4	DOCUMENTATION
// TODO: encapsulate the protected instance variables!	DESIGN	0.8521847914926483	IMPLEMENTATION	0.1175109320443953	WITHOUT_CLASSIFICATION	0.01998294551494564	DESIGN	0.00926990765916604	DEFECT	7.724151743176604E-4	DOCUMENTATION	2.7900811452709524E-4	TEST
// should indicate that we are processing an INSERT/UPDATE/DELETE // query with a subquery implied via a collection property // function. Here, we need to use the table name itself as the // qualification alias. // TODO : verify this works for all databases... // TODO : is this also the case in non-"indexed" scenarios?	DESIGN	0.977630446978562	IMPLEMENTATION	0.022051178273851797	DESIGN	1.4145514782129768E-4	DEFECT	1.1136305001468906E-4	TEST	4.467255842747877E-5	WITHOUT_CLASSIFICATION	2.0883991322605326E-5	DOCUMENTATION
//TODO: copy/paste from insertRows()	DESIGN	0.9950503012141948	WITHOUT_CLASSIFICATION	0.0035447973736156277	DESIGN	0.0011799328080548416	DEFECT	1.2059347488766005E-4	IMPLEMENTATION	6.728799603545696E-5	TEST	3.7087133211733906E-5	DOCUMENTATION
//TODO: copy/paste from recreate()	DESIGN	0.9984707020074433	WITHOUT_CLASSIFICATION	0.0012842847400888352	DESIGN	9.790319884711461E-5	IMPLEMENTATION	8.188505586682105E-5	DEFECT	5.0510113050541695E-5	TEST	1.4714884703535718E-5	DOCUMENTATION
//should this interface extend PropertyMapping?	DESIGN	0.6062408569638619	WITHOUT_CLASSIFICATION	0.39294131649127756	DESIGN	4.0455084531908653E-4	TEST	2.1196410178053526E-4	DOCUMENTATION	1.9151185711339903E-4	DEFECT	9.799740647627378E-6	IMPLEMENTATION
//ie. the subquery! yuck!	DESIGN	0.9998118231568491	WITHOUT_CLASSIFICATION	1.4698262489227362E-4	IMPLEMENTATION	1.6002496824255747E-5	DESIGN	1.5056838253922348E-5	DOCUMENTATION	6.088025695325712E-6	TEST	4.046857485181179E-6	DEFECT
//TODO: move to .sql package!!	DESIGN	0.6954487160041851	WITHOUT_CLASSIFICATION	0.28094203466912254	DESIGN	0.017310271883000227	IMPLEMENTATION	0.004300945634952656	DEFECT	0.0013812439437485401	DOCUMENTATION	6.167878649909541E-4	TEST
//TODO: code duplication with SingleTableEntityPersister	DESIGN	0.9897503731317352	DESIGN	0.009880502965173192	WITHOUT_CLASSIFICATION	2.370551042887879E-4	TEST	6.648845402216545E-5	DEFECT	3.445908126999604E-5	DOCUMENTATION	3.112126351055763E-5	IMPLEMENTATION
// TODO: It would be really, really nice to use this to also model components!	DESIGN	0.9964116999326196	DESIGN	0.0033741559095149475	IMPLEMENTATION	1.1770668091245637E-4	DEFECT	5.410383309562877E-5	WITHOUT_CLASSIFICATION	2.2832947973877545E-5	DOCUMENTATION	1.9500695883618144E-5	TEST
//TODO: *two* hashmap lookups here is one too many...	DESIGN	0.898044580149974	WITHOUT_CLASSIFICATION	0.0994663637282265	DESIGN	0.001725275693553842	DEFECT	6.947304305700219E-4	IMPLEMENTATION	4.205280457957391E-5	TEST	2.6997193096025984E-5	DOCUMENTATION
//TODO: code duplication with JoinedSubclassEntityPersister	DESIGN	0.9986872822345592	DESIGN	0.001285625039614805	WITHOUT_CLASSIFICATION	2.011870352268636E-5	TEST	3.3971305730540613E-6	DOCUMENTATION	2.3043444591542173E-6	DEFECT	1.2725472711891428E-6	IMPLEMENTATION
//perhaps not really necessary...	DESIGN	0.99484764040129	WITHOUT_CLASSIFICATION	0.0034336635092229043	IMPLEMENTATION	0.0011560551716059521	DEFECT	4.8382386582444744E-4	DESIGN	4.160447006651346E-5	TEST	3.7212581990071873E-5	DOCUMENTATION
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass! // was toUnqotedAliasStrings( getIdentiferColumnNames() ) before - now tried // to remove that unqoting and missing aliases..	DESIGN	0.95569664380726	WITHOUT_CLASSIFICATION	0.03712210150575912	DESIGN	0.00712490527688971	DEFECT	3.62750434453748E-5	TEST	1.8204622068154665E-5	IMPLEMENTATION	1.8697445777191436E-6	DOCUMENTATION
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass! // was toUnqotedAliasStrings( getdiscriminatorColumnName() ) before - now tried // to remove that unqoting and missing aliases..	DESIGN	0.9951785472895075	WITHOUT_CLASSIFICATION	0.0037253301238274225	DESIGN	0.0010856385934622024	DEFECT	9.085873519048734E-6	TEST	1.0686332759814515E-6	IMPLEMENTATION	3.294864078685418E-7	DOCUMENTATION
//TODO: should we use SELECT .. FOR UPDATE?	DESIGN	0.9147020393320733	WITHOUT_CLASSIFICATION	0.04648335107885264	DESIGN	0.026528694503535274	IMPLEMENTATION	0.008156821355893372	DEFECT	0.0022957817365529174	DOCUMENTATION	0.0018333119930926101	TEST
//TODO: optimize this better!	DESIGN	0.9510641271180147	WITHOUT_CLASSIFICATION	0.03197987805476009	IMPLEMENTATION	0.014927237020116689	DESIGN	0.0012304156656703035	TEST	4.4035412782908874E-4	DOCUMENTATION	3.5798801360927034E-4	DEFECT
//TODO: should we allow suffixes on these ?	DESIGN	0.661059432011639	DESIGN	0.2259611811954154	WITHOUT_CLASSIFICATION	0.06897521047023801	DEFECT	0.039100694555562934	IMPLEMENTATION	0.0032273540493518195	TEST	0.0016761277177927546	DOCUMENTATION
//This is really ugly, but necessary:	DESIGN	0.9997100651180826	WITHOUT_CLASSIFICATION	2.130949619494807E-4	DEFECT	6.208014854153401E-5	DESIGN	6.544282717987007E-6	TEST	4.973174988727689E-6	DOCUMENTATION	3.24231371968627E-6	IMPLEMENTATION
//ugly little workaround for fact that createUniqueKeyLoaders() does not handle component properties	DESIGN	0.938003986793286	DESIGN	0.04110210259562655	WITHOUT_CLASSIFICATION	0.016809651792156877	IMPLEMENTATION	0.002824625846441487	TEST	0.001155679097944963	DEFECT	1.0395387454413584E-4	DOCUMENTATION
//TODO: disable batch loading if lockMode > READ?	DESIGN	0.9864383514554471	WITHOUT_CLASSIFICATION	0.006600880410648889	DEFECT	0.006027349498513428	DESIGN	6.331213139904399E-4	IMPLEMENTATION	1.6870665053856477E-4	TEST	1.3159067086155246E-4	DOCUMENTATION
// append the SQL to return the generated identifier //TODO: suck into Insert	DESIGN	0.9513744514120861	WITHOUT_CLASSIFICATION	0.030328082541187087	IMPLEMENTATION	0.017435384775828157	DESIGN	7.334853965807416E-4	DEFECT	1.192860857987806E-4	DOCUMENTATION	9.309788519379936E-6	TEST
//TODO: I am not so sure about the exception handling in this bit!	DESIGN	0.9785615249304831	WITHOUT_CLASSIFICATION	0.009998687207895672	IMPLEMENTATION	0.006880742074056325	DEFECT	0.004354084582672674	DESIGN	1.657331714682932E-4	TEST	3.922803342402607E-5	DOCUMENTATION
//TODO: is this really necessary????	DESIGN	0.7482891216016729	WITHOUT_CLASSIFICATION	0.21138361069804598	DESIGN	0.02290483726253204	DEFECT	0.012514381612162371	IMPLEMENTATION	0.0027121533067163256	TEST	0.002195895518870332	DOCUMENTATION
//TODO: move to .sql package, and refactor with similar things!	DESIGN	0.5772566126966714	DESIGN	0.42011068749956043	WITHOUT_CLASSIFICATION	0.0012665281598358148	DEFECT	9.88298542336002E-4	IMPLEMENTATION	3.2290774640221417E-4	TEST	5.4965355194062266E-5	DOCUMENTATION
//TODO: implement functionality //  this might be painful to do here, as the "join post processing" for //  the subquery has already been performed (meaning that for //  theta-join dialects, the join conditions have already been moved //  over to the where clause).  A "simple" solution here might to //  perform "join post processing" once for the entire query (including //  any subqueries) at one fell swoop	DESIGN	0.7416810427484904	IMPLEMENTATION	0.2582259987079561	DESIGN	9.166516117328499E-5	WITHOUT_CLASSIFICATION	5.504002164269817E-7	DEFECT	4.3654531027031183E-7	TEST	3.0643685354140313E-7	DOCUMENTATION
// todo : this eventually needs to be removed	DESIGN	0.8570190255296419	WITHOUT_CLASSIFICATION	0.092012764610862	IMPLEMENTATION	0.048543944326695364	DESIGN	0.0019284750695515221	DEFECT	2.650844576308099E-4	DOCUMENTATION	2.3070600561836288E-4	TEST
//kinda ugly, but needed for collections with a "." node mapping	DESIGN	0.9709953867519268	WITHOUT_CLASSIFICATION	0.01767641848492802	IMPLEMENTATION	0.009011039232408197	DESIGN	0.0017100277322213452	TEST	5.518300352802927E-4	DEFECT	5.5297763235340545E-5	DOCUMENTATION
//is this ok?	DESIGN	0.9996577549509419	WITHOUT_CLASSIFICATION	1.2652904391049629E-4	DESIGN	1.0622121515390195E-4	TEST	6.830503455807364E-5	DOCUMENTATION	3.355252140262239E-5	IMPLEMENTATION	7.637234032953434E-6	DEFECT
//TODO: perhaps this should be some other RuntimeException...	DESIGN	0.8574881600122036	DESIGN	0.12906237112715715	WITHOUT_CLASSIFICATION	0.005464886161392605	IMPLEMENTATION	0.004092373605878511	TEST	0.0035209844890649036	DEFECT	3.712246043033111E-4	DOCUMENTATION
//TODO: make this a bit nicer	DESIGN	0.8599436511722548	WITHOUT_CLASSIFICATION	0.1265546718336933	DESIGN	0.007135273808973887	IMPLEMENTATION	0.003388883281618813	DEFECT	0.0021734835631085575	TEST	8.040363403507893E-4	DOCUMENTATION
//Yuck:	DESIGN	0.9991915204084338	WITHOUT_CLASSIFICATION	5.463086755780404E-4	DESIGN	9.900624957826667E-5	DOCUMENTATION	6.856487577341412E-5	DEFECT	6.713063728687388E-5	TEST	2.746915334944193E-5	IMPLEMENTATION
//TODO: we should provide some way to get keys of collection of statistics to make it easier to retrieve from a GUI perspective	DESIGN	0.8561280005528562	WITHOUT_CLASSIFICATION	0.11379385207125695	DESIGN	0.026753587570613382	DEFECT	0.0029157971037542807	IMPLEMENTATION	2.0445393368260186E-4	TEST	2.0430876783652255E-4	DOCUMENTATION
/**	DESIGN	0.9477299562869385	DESIGN	0.04686115600412967	WITHOUT_CLASSIFICATION	0.0017452186770541376	DOCUMENTATION	0.0014751996367055303	TEST	0.0013462445720009153	IMPLEMENTATION	8.422248231712079E-4	DEFECT
// TODO : will need reference to session factory to fully complete HHH-1907	DESIGN	0.9491982173106391	DESIGN	0.04178067590259949	IMPLEMENTATION	0.00865221790515005	WITHOUT_CLASSIFICATION	2.2817904574734E-4	DOCUMENTATION	1.2058577761198354E-4	DEFECT	2.0124058252071704E-5	TEST
//TODO: currently keeps Getters and Setters (instead of PropertyAccessors) because of the way getGetter() and getSetter() are implemented currently; yuck!	DESIGN	0.9694911879358545	DESIGN	0.0293653269584567	WITHOUT_CLASSIFICATION	8.236126868873026E-4	IMPLEMENTATION	2.0160097019481188E-4	DOCUMENTATION	1.1608838585109339E-4	DEFECT	2.1830627554224793E-6	TEST
//TODO: redesign how PropertyAccessors are acquired...	DESIGN	0.8633105993339052	WITHOUT_CLASSIFICATION	0.12358219715360272	DESIGN	0.00948015213093743	IMPLEMENTATION	0.0025373632586890528	DEFECT	6.23250989316635E-4	DOCUMENTATION	4.66437133548901E-4	TEST
// todo : YUCK!!!	DESIGN	0.9998229533403648	WITHOUT_CLASSIFICATION	7.187797526666672E-5	IMPLEMENTATION	4.1322348491539305E-5	DESIGN	2.9835265932792797E-5	DOCUMENTATION	2.4996251522983077E-5	DEFECT	9.014818421313598E-6	TEST
// TODO : YUCK!!!  fix after HHH-1907 is complete	DESIGN	0.9150287473826707	DESIGN	0.06829042402934717	IMPLEMENTATION	0.009520639491856681	DEFECT	0.006355870549756536	WITHOUT_CLASSIFICATION	6.06331873676134E-4	TEST	1.9798667269280493E-4	DOCUMENTATION
//TODO: need to make the majority of this functionality into a top-level support class for custom impl support	DESIGN	0.9086386450382382	DESIGN	0.08994200005102315	IMPLEMENTATION	6.359889622670152E-4	DEFECT	4.528585559001292E-4	WITHOUT_CLASSIFICATION	2.658804722808331E-4	DOCUMENTATION	6.462692029053646E-5	TEST
//TODO: design new lifecycle for ProxyFactory	DESIGN	0.9881287026689405	WITHOUT_CLASSIFICATION	0.010629300615995124	DESIGN	6.237690015883609E-4	DEFECT	4.1766558241870263E-4	IMPLEMENTATION	1.2253644957278497E-4	DOCUMENTATION	7.802568148466656E-5	TEST
//TODO: would be nice to handle proxy classes elegantly!	DESIGN	0.5228157260226296	DESIGN	0.4568059386488103	WITHOUT_CLASSIFICATION	0.014531555177057736	IMPLEMENTATION	0.005041146366191397	DEFECT	5.587313875017466E-4	DOCUMENTATION	2.469023978092479E-4	TEST
// TODO: copy/paste from ManyToOneType	DESIGN	0.6093900739256536	WITHOUT_CLASSIFICATION	0.3573929054093164	DESIGN	0.026435471147117355	IMPLEMENTATION	0.004512941892559335	DEFECT	0.001511345517074325	DOCUMENTATION	7.572621082790693E-4	TEST
//TODO: should this be Session.instantiate(Persister, ...)?	DESIGN	0.9204594134624194	DESIGN	0.07800300909726147	WITHOUT_CLASSIFICATION	8.26825503657042E-4	TEST	4.8282293495543566E-4	IMPLEMENTATION	1.7380342476333447E-4	DEFECT	5.412557694336433E-5	DOCUMENTATION
//TODO: this is a bit arbitrary, expose a switch to the user?	DESIGN	0.8984883213343907	WITHOUT_CLASSIFICATION	0.057167335026314256	DEFECT	0.03174501070692428	DESIGN	0.008940616983322944	IMPLEMENTATION	0.0024090159774829262	DOCUMENTATION	0.0012496999715649393	TEST
//TODO: implement caching?! proxies?!	DESIGN	0.9948878446893495	IMPLEMENTATION	0.004438236561772823	WITHOUT_CLASSIFICATION	6.23483487637561E-4	DEFECT	2.912102035309239E-5	DOCUMENTATION	1.3537271187784847E-5	DESIGN	7.776969699174018E-6	TEST
//TODO: is this right??	DESIGN	0.9432533497415472	WITHOUT_CLASSIFICATION	0.04999238955725934	DESIGN	0.0027544169705996115	IMPLEMENTATION	0.001941732590871759	TEST	0.001366795573531922	DEFECT	6.913155661902199E-4	DOCUMENTATION
// is this really necessary?	DESIGN	0.9999361980303222	WITHOUT_CLASSIFICATION	3.955906327000908E-5	DESIGN	7.015862378158312E-6	TEST	6.431812052683712E-6	DEFECT	6.1649863977089614E-6	DOCUMENTATION	4.6302455794006606E-6	IMPLEMENTATION
//TODO: move these to a new JoinableType abstract class, //extended by EntityType and PersistentCollectionType:	DESIGN	0.9325228423507358	DESIGN	0.06697183470620274	WITHOUT_CLASSIFICATION	2.7823821543755824E-4	TEST	1.8144280583776398E-4	DEFECT	3.3925593193032697E-5	IMPLEMENTATION	1.1716328593138404E-5	DOCUMENTATION
// TODO: this is very suboptimal for some subclasses (namely components), // since it does not take advantage of two-phase-load	DESIGN	0.8150197829619399	WITHOUT_CLASSIFICATION	0.13737388576717957	DESIGN	0.0316692956105496	DEFECT	0.009224625400265462	TEST	0.005907719598286576	IMPLEMENTATION	8.046906617790619E-4	DOCUMENTATION
// worrying about proxies is perhaps a little bit of overkill here...	DESIGN	0.974251371946605	WITHOUT_CLASSIFICATION	0.014750363928311553	IMPLEMENTATION	0.010109505682453085	DEFECT	7.583398328494495E-4	DESIGN	1.2575971162031104E-4	TEST	4.658898160715148E-6	DOCUMENTATION
// NOTE VERY HACKISH WORKAROUND!! // TODO: Fix this so it will work for non-POJO entity mode	DESIGN	0.8435654082963902	DESIGN	0.11836287635569022	IMPLEMENTATION	0.03148244777036903	DEFECT	0.00582937653940287	TEST	5.988839398668401E-4	DOCUMENTATION	1.6100709828088371E-4	WITHOUT_CLASSIFICATION
// TODO: Fix this so it will work for non-POJO entity mode	DESIGN	0.7354694330604554	IMPLEMENTATION	0.250900433013294	DESIGN	0.006795106280576087	TEST	0.005643494839234632	DEFECT	0.0010520261560731262	DOCUMENTATION	1.3950665036675255E-4	WITHOUT_CLASSIFICATION
// We would probably refactor to have LogicParser (builds a tree of simple // expressions connected by and, or, not), ExpressionParser (translates // from OO terms like foo, foo.Bar, foo.Bar.Baz to SQL terms like // FOOS.ID, FOOS.BAR_ID, etc) and PathExpressionParser (which does much // the same thing it does now)	DESIGN	0.701630907694741	DEFECT	0.24953600223083122	WITHOUT_CLASSIFICATION	0.03878830672404851	IMPLEMENTATION	0.008714886740186684	DESIGN	0.0013113349765513094	TEST	1.8561633641365174E-5	DOCUMENTATION
//TODO: this is a little inefficient, don't need to do a whole //      deep replaceElements() call	DESIGN	0.9991764351735788	DESIGN	6.758394620546808E-4	IMPLEMENTATION	1.4346901479563945E-4	WITHOUT_CLASSIFICATION	1.6871478641422767E-6	DOCUMENTATION	1.6439175167032587E-6	TEST	9.252841900511615E-7	DEFECT
//workaround for WebLogic	DESIGN	0.9975459129207903	WITHOUT_CLASSIFICATION	0.0022536893151091936	DESIGN	1.133159828792458E-4	DEFECT	5.022159778926845E-5	IMPLEMENTATION	2.14466405232763E-5	DOCUMENTATION	1.5413542908776783E-5	TEST
//TODO: this dependency is kinda Bad	DESIGN	0.6046647581105831	DESIGN	0.18209425114737746	WITHOUT_CLASSIFICATION	0.10695590066509555	IMPLEMENTATION	0.07546170713129093	DEFECT	0.021030337218299576	DOCUMENTATION	0.009793045727353423	TEST
//ick!	DESIGN	0.9992758054170183	WITHOUT_CLASSIFICATION	4.2394633528035765E-4	DESIGN	1.2840543193468098E-4	DOCUMENTATION	1.0066184520998252E-4	DEFECT	5.928379764058063E-5	TEST	1.1897172916188544E-5	IMPLEMENTATION
// short cut check...	DESIGN	0.9999757178856049	WITHOUT_CLASSIFICATION	2.1558043292082768E-5	IMPLEMENTATION	1.2779932217134848E-6	DOCUMENTATION	8.512813965122652E-7	TEST	3.477753281552552E-7	DESIGN	2.4702115660440836E-7	DEFECT
// todo : move to StringHelper?	DESIGN	0.997195493285968	WITHOUT_CLASSIFICATION	0.0027249108670049926	DESIGN	4.812207185862909E-5	DEFECT	1.4977382606642917E-5	IMPLEMENTATION	9.302581616089202E-6	DOCUMENTATION	7.193810945597703E-6	TEST
//yukky! Don't you have subclasses for that! //TODO race conditions can happen here	DESIGN	0.7494911678575972	WITHOUT_CLASSIFICATION	0.2444747517526307	DESIGN	0.0028185262573261352	IMPLEMENTATION	0.0026715693185435456	DEFECT	4.729831502308136E-4	TEST	7.100166367163815E-5	DOCUMENTATION
//TODO: We probably should have a StatisticsNotPublishedException, to make it clean	DESIGN	0.47904602000924834	DEFECT	0.2932293522244176	WITHOUT_CLASSIFICATION	0.22105740253089184	DESIGN	0.006073439148596749	IMPLEMENTATION	3.4055541434694253E-4	TEST	2.532306724984115E-4	DOCUMENTATION
// FIXME hack to work around fact that calling // Node added = root.addChild( fqn ); doesn't  // properly set the version on the node	DESIGN	0.9935671199624115	WITHOUT_CLASSIFICATION	0.0062978413751408465	DEFECT	9.863922337325302E-5	IMPLEMENTATION	3.2108627213818546E-5	DESIGN	3.369306573962971E-6	TEST	9.215052866242146E-7	DOCUMENTATION
// TODO: I considered validating the presence of the TS cache here, // but decided to defer unti getQueryCacheInstance() in case the  // cache is never actually used	DESIGN	0.9871813359671392	WITHOUT_CLASSIFICATION	0.008910074203512464	IMPLEMENTATION	0.002440560440398201	DESIGN	0.001454205893460021	DEFECT	1.3329495297981449E-5	DOCUMENTATION	4.940001922518104E-7	TEST
//need to do that here rather than in the save event listener to let //the post insert events to have a id-filled entity when IDENTITY is used (EJB3)	DESIGN	0.9715357723516701	WITHOUT_CLASSIFICATION	0.025058681491578094	DESIGN	0.003073484605943011	IMPLEMENTATION	2.73327292141906E-4	DEFECT	3.283986683215187E-5	TEST	2.5894391834709898E-5	DOCUMENTATION
//TODO: simply remove this override //      if we fix the above todos	DESIGN	0.9901917867955351	WITHOUT_CLASSIFICATION	0.008044822216892436	DESIGN	9.354258185953359E-4	DEFECT	4.941132637599228E-4	IMPLEMENTATION	3.2329975359806295E-4	TEST	1.0552151619100006E-5	DOCUMENTATION
// This, is used by SessionFactoryImpl to hand to the generated SessionImpl; // was the only reason I could see that we cannot just use null as // Settings.cacheProvider	DESIGN	0.9998951961528095	WITHOUT_CLASSIFICATION	9.848075156313171E-5	DESIGN	5.441047324807419E-6	DEFECT	8.080310450823642E-7	TEST	4.532113848958991E-8	IMPLEMENTATION	2.8696119016469595E-8	DOCUMENTATION
// this is done here 'cos we might only know the type here (ugly!) // TODO: improve this a lot:	DESIGN	0.9872008370631006	DESIGN	0.012441951262738529	IMPLEMENTATION	1.7089636788101466E-4	DEFECT	9.01938415015422E-5	TEST	8.226308219045389E-5	WITHOUT_CLASSIFICATION	1.3858382587891213E-5	DOCUMENTATION
// todo : would love to have this work on a notification basis //    where the successful binding of an entity/subclass would //    emit a notification which the extendsQueue entries could //    react to...	DESIGN	0.8394164530429193	WITHOUT_CLASSIFICATION	0.16030061988402838	DESIGN	1.277570852712548E-4	TEST	8.092091880241874E-5	IMPLEMENTATION	7.073671894693491E-5	DEFECT	3.512350031642202E-6	DOCUMENTATION
// TODO : not sure the best way to handle this. // The non-performant way :	DESIGN	0.9125225173920076	IMPLEMENTATION	0.06235198775598809	DESIGN	0.007780197945072227	WITHOUT_CLASSIFICATION	0.006667343258699797	DEFECT	0.006465526219487978	TEST	0.004212427428744275	DOCUMENTATION
// would be better to use the element-type to determine // whether the old and the new are equal here; the problem being // we do not necessarily have access to the element type in all // cases	DESIGN	0.9990355247283463	WITHOUT_CLASSIFICATION	7.978732698546429E-4	DESIGN	1.5101984454464495E-4	IMPLEMENTATION	1.5137176157768278E-5	DEFECT	3.9974875543415727E-7	DOCUMENTATION	4.5232341175859125E-8	TEST
// This next bit is to allow for both unsaved-value="negative" // and for "older" behavior where version number did not get // seeded if it was already set in the object // TODO: shift it into unsaved-value strategy	DESIGN	0.9980150875867612	DESIGN	0.001833239653454997	DEFECT	1.2135114757527379E-4	WITHOUT_CLASSIFICATION	2.8820601692042204E-5	IMPLEMENTATION	1.349066191341919E-6	TEST	1.5194432517547607E-7	DOCUMENTATION
// merges don't cascade to uninitialized collections //	DESIGN	0.9999919478286661	WITHOUT_CLASSIFICATION	6.62199771506564E-6	DESIGN	9.294540565940074E-7	IMPLEMENTATION	2.3051143615828826E-7	TEST	1.7986352697394983E-7	DEFECT	9.034459914741082E-8	DOCUMENTATION
// TODO: an alternative is to check if the owner has changed; if it hasn't then // return collection.getOwner()	DESIGN	0.9689702981324803	WITHOUT_CLASSIFICATION	0.02860386991926165	IMPLEMENTATION	0.0023164145787720487	DESIGN	7.284607462857802E-5	DEFECT	3.242069476875788E-5	TEST	4.150600088886601E-6	DOCUMENTATION
//it is possible that the tree-walking in OuterJoinLoader can get to //an association defined by a subclass, in which case the property-ref //might refer to a property defined on a subclass of the current class //in this case, the table name is not known - this temporary solution  //assumes that the property-ref refers to a property of the subclass //table that the association belongs to (a reasonable guess) //TODO: fix this, add: OuterJoinLoadable.getSubclassPropertyTableName(String propertyName)	DESIGN	0.9998038646818822	DESIGN	1.9357067598863408E-4	DEFECT	1.4125007923839576E-6	TEST	6.665023812952245E-7	IMPLEMENTATION	4.272543586948038E-7	DOCUMENTATION	5.8384596862609486E-8	WITHOUT_CLASSIFICATION
// this only works because collection entries are kept in a sequenced // map by persistence context (maybe we should do like entities and // keep a separate sequences set...) //TODO: calling entrySet on an IdentityMap is SLOW!!	DESIGN	0.9983483606287583	DESIGN	0.0012226100717646611	DEFECT	4.027695383371834E-4	IMPLEMENTATION	1.2835529058870813E-5	TEST	1.0800342581714175E-5	WITHOUT_CLASSIFICATION	2.6238894992946147E-6	DOCUMENTATION
// important, to account for newly saved entities in query // todo : some kind of check for new status...	DESIGN	0.988907088106964	WITHOUT_CLASSIFICATION	0.011014345286677812	IMPLEMENTATION	3.947477081126597E-5	DEFECT	1.7435592203341156E-5	DESIGN	1.5890504399475098E-5	DOCUMENTATION	5.765738944218303E-6	TEST
// brand new collection //TODO: or an array!! we can't lock objects with arrays now??	DESIGN	0.974310086084472	WITHOUT_CLASSIFICATION	0.016488703413834172	DESIGN	0.0045314459126553006	DEFECT	0.004279359937059559	IMPLEMENTATION	2.7511299506584986E-4	TEST	1.1529165691322101E-4	DOCUMENTATION
//TODO: if object was an uninitialized proxy, this is inefficient, //      resulting in two SQL selects	DESIGN	0.9999440988948824	WITHOUT_CLASSIFICATION	4.443032121774223E-5	DESIGN	9.236609638412144E-6	DEFECT	1.5054945869853194E-6	TEST	6.269858065455912E-7	DOCUMENTATION	1.0169386782763353E-7	IMPLEMENTATION
//before cascade! //TODO: should this be Session.instantiate(Persister, ...)?	DESIGN	0.9321481810437023	DESIGN	0.06721628333162673	WITHOUT_CLASSIFICATION	3.1922279067301006E-4	TEST	1.8228389206054725E-4	DEFECT	1.1771694866770943E-4	IMPLEMENTATION	1.631199326951397E-5	DOCUMENTATION
// TODO : absolutely no usages of this constructor form; can it go away?	DESIGN	0.6576714036308802	IMPLEMENTATION	0.18673251242367434	WITHOUT_CLASSIFICATION	0.11599111713383839	DESIGN	0.03767679192694833	TEST	0.001604700096117013	DOCUMENTATION	3.2347478854169155E-4	DEFECT
// todo : need to find a clean way to handle the "event source" role // a seperate classs responsible for generating/dispatching events just duplicates most of the Session methods... // passing around seperate reto interceptor, factory, actionQueue, and persistentContext is not manageable...	DESIGN	0.5824639758387536	DESIGN	0.41751971134057725	WITHOUT_CLASSIFICATION	8.788201531757961E-6	TEST	5.049007352046933E-6	DEFECT	1.477707295033787E-6	IMPLEMENTATION	9.979044902958404E-7	DOCUMENTATION
// todo : remove	DESIGN	0.999499355095392	WITHOUT_CLASSIFICATION	3.7374094882538914E-4	IMPLEMENTATION	1.123714812091501E-4	DESIGN	6.841412200484854E-6	TEST	4.375315980084779E-6	DOCUMENTATION	3.315746393029029E-6	DEFECT
//aliasRefNode.resolve( false, false, aliasRefNode.getText() ); //TODO: is it kosher to do it here? //TODO: is it kosher to do it here?	DESIGN	0.9774931611096173	IMPLEMENTATION	0.014700280541939593	WITHOUT_CLASSIFICATION	0.00663060984555496	DESIGN	8.111258341591316E-4	DEFECT	3.5641941742381087E-4	TEST	8.403251305215896E-6	DOCUMENTATION
// No explicit select expression; render the id and properties // projection lists for every persister in the from clause into // a single 'token node'. //TODO: the only reason we need this stuff now is collection filters, //      we should get rid of derived select clause completely!	DESIGN	0.9997175809713741	DESIGN	2.685141972674707E-4	WITHOUT_CLASSIFICATION	7.124601700020642E-6	DEFECT	5.508132282014388E-6	TEST	6.902139460728476E-7	DOCUMENTATION	5.818834302898237E-7	IMPLEMENTATION
// TODO : an optimization here would be to consider cascade deletes and not gen those delete statements; //      the difficulty is the ordering of the tables here vs the cascade attributes on the persisters -> //          the table info gotten here should really be self-contained (i.e., a class representation //          defining all the needed attributes), then we could then get an array of those	DESIGN	0.44807762779342813	DESIGN	0.4433629952361855	WITHOUT_CLASSIFICATION	0.108443986413473	IMPLEMENTATION	7.668649104346184E-5	DEFECT	2.103563149098765E-5	TEST	1.766843437897399E-5	DOCUMENTATION
// TODO: get SQL rendering out of here, create an AST for the join expressions. // Use the SQL generator grammar to generate the SQL text for the index expression.	DESIGN	0.877508716412794	WITHOUT_CLASSIFICATION	0.09292885911378962	DESIGN	0.026724505017485762	IMPLEMENTATION	0.0017562597742457452	DEFECT	0.0010123023341587168	TEST	6.935734752609513E-5	DOCUMENTATION
// TODO : this really needs to be delayed unitl after we definitively know all node types // where this is currently a problem is parameters for which where we cannot unequivocally // resolve an expected type	DESIGN	0.9794217473983768	DESIGN	0.016303603821994143	IMPLEMENTATION	0.0042099272228060414	DEFECT	5.6947122831306794E-5	DOCUMENTATION	7.432557522689226E-6	TEST	3.418764689140222E-7	WITHOUT_CLASSIFICATION
// TODO: Figure out a better way to get the FROM elements in a proper tree structure. // If this is not the destination of a many-to-many, add it as a child of the origin.	DESIGN	0.9948817467690376	WITHOUT_CLASSIFICATION	0.0025752229166793837	DESIGN	0.0020178483439954155	IMPLEMENTATION	4.08279848740674E-4	DEFECT	9.978237542825618E-5	TEST	1.7119746118692054E-5	DOCUMENTATION
// work around that crazy issue where the tree contains // "empty" FromElements (no text); afaict, this is caused // by FromElementFactory.createCollectionJoin()	DESIGN	0.9905540515436897	WITHOUT_CLASSIFICATION	0.008096214514928734	DESIGN	8.281955049216994E-4	TEST	2.918222116536272E-4	DEFECT	1.9187768149441845E-4	IMPLEMENTATION	3.78385433118579E-5	DOCUMENTATION
//TODO: this class does too many things! we need a different //kind of path expression parser for each of the diffferent //ways in which path expressions can occur	DESIGN	0.9370947306699567	DESIGN	0.06155777665711099	DEFECT	8.21564813206234E-4	WITHOUT_CLASSIFICATION	4.939772130101022E-4	DOCUMENTATION	1.8396793782121625E-5	IMPLEMENTATION	1.3553852933805204E-5	TEST
//real hacky... // used to count the nesting of parentheses	DESIGN	0.9835772883446521	WITHOUT_CLASSIFICATION	0.013745332505099702	DESIGN	0.0013567968420353832	IMPLEMENTATION	6.610169015080019E-4	DEFECT	3.508914087398757E-4	TEST	3.0867399796485434E-4	DOCUMENTATION
// TODO : would be really nice to cache the spec on the query-def so as to not have to re-calc the hash; // currently not doable though because of the resultset-ref stuff...	DESIGN	0.8233017224119671	WITHOUT_CLASSIFICATION	0.16627917691456898	IMPLEMENTATION	0.005678383087964887	DEFECT	0.003870985947916407	DESIGN	7.885921292455144E-4	DOCUMENTATION	8.113950833713014E-5	TEST
//for arrays, we should end the collection load before resolving //the entities, since the actual array instances are not instantiated //during loading //TODO: or we could do this polymorphically, and have two //      different operations implemented differently for arrays	DESIGN	0.9891538590219914	IMPLEMENTATION	0.009366018019580914	WITHOUT_CLASSIFICATION	0.001143938983745377	DESIGN	3.2711310236261006E-4	DEFECT	6.803829908232191E-6	TEST	2.267042411407187E-6	DOCUMENTATION
// polymorphism not really handled completely correctly, // perhaps...well, actually its ok, assuming that the // entity name used in the lookup is the same as the // the one used here, which it will be	DESIGN	0.9988177966786435	WITHOUT_CLASSIFICATION	0.0010449510792461076	DESIGN	7.457779789905225E-5	IMPLEMENTATION	5.962073523543189E-5	DEFECT	2.792651820320116E-6	TEST	2.610571557235944E-7	DOCUMENTATION
// TODO: should "record" how many properties we have reffered to - and if we  //       don't get'em'all we throw an exception! Way better than trial and error ;)	DESIGN	0.9098021556110436	DEFECT	0.09005278798006137	DESIGN	8.5793870012096E-5	IMPLEMENTATION	5.282828838971849E-5	WITHOUT_CLASSIFICATION	5.374180931199143E-6	TEST	1.0600695618982067E-6	DOCUMENTATION
// VERY IMPORTANT!!!! - This class needs to be free of any static references // to any CGLIB or Javassist classes.  Otherwise, users will always need both // on their classpaths no matter which (if either) they use. // // Another option here would be to remove the Hibernate.isPropertyInitialized() // method and have the users go through the SessionFactory to get this information.	DESIGN	0.9963574935556022	WITHOUT_CLASSIFICATION	0.0035956128027432098	DESIGN	3.859046439079554E-5	DEFECT	5.158410923023664E-6	IMPLEMENTATION	2.164084192253142E-6	DOCUMENTATION	9.80682148571634E-7	TEST
// TODO: is it really neceassry to provide Configuration to CollectionPersisters ? Should it not be enough with associated class ? // or why does EntityPersister's not get access to configuration ? // // The only reason I could see that Configuration gets passed to collection persisters // is so that they can look up the dom4j node name of the entity element in case // no explicit node name was applied at the collection element level.  Are you kidding me? // Trivial to fix then.  Just store and expose the node name on the entity persister // (which the collection persister looks up anyway via other means...).	DESIGN	0.9995168063109122	DESIGN	4.093207803770032E-4	IMPLEMENTATION	6.118409586944409E-5	DEFECT	1.246892686050778E-5	TEST	2.1096858322777162E-7	DOCUMENTATION	8.917397809001192E-9	WITHOUT_CLASSIFICATION
//for backward compatibility, allow a set with no not-null  //element columns, using all columns in the row locater SQL //TODO: create an implicit not null constraint on all cols?	DESIGN	0.7879012092211521	WITHOUT_CLASSIFICATION	0.1824706804238434	IMPLEMENTATION	0.025922632118111837	DESIGN	0.002804292323055928	DEFECT	7.968265474205503E-4	TEST	1.0435936641606404E-4	DOCUMENTATION
//SPACES //TODO: i'm not sure, but perhaps we should exclude //      abstract denormalized tables?	DESIGN	0.9832170193523184	WITHOUT_CLASSIFICATION	0.009461469846283188	DEFECT	0.004470158552957931	IMPLEMENTATION	0.0018353941719492352	DESIGN	7.802680685302587E-4	TEST	2.3569000796099202E-4	DOCUMENTATION
//workaround, for backward compatibility of sets with no //not-null columns, assume all columns are used in the //row locator SQL	DESIGN	0.9976251048840236	WITHOUT_CLASSIFICATION	0.001295948784383202	DESIGN	0.0010593955903733699	DEFECT	1.3816460560657897E-5	TEST	4.069688852872718E-6	DOCUMENTATION	1.6645918063319637E-6	IMPLEMENTATION
//note that this method could easily be moved up to BasicEntityPersister, //if we ever needed to reuse it from other subclasses	DESIGN	0.9294827070432057	DESIGN	0.06992805490647368	WITHOUT_CLASSIFICATION	4.375309970159403E-4	TEST	1.4485688933334903E-4	IMPLEMENTATION	5.070520298514382E-6	DOCUMENTATION	1.7796436727182004E-6	DEFECT
//index += getPropertyColumnSpan( i ); //TODO:  this is kinda slow...	DESIGN	0.5597507199651607	DEFECT	0.3239074951594569	WITHOUT_CLASSIFICATION	0.10439213555633706	DESIGN	0.006969859144245777	IMPLEMENTATION	0.003526561775018688	TEST	0.0014532283997808126	DOCUMENTATION
//TODO: need some caching scheme? really comes down to decision  //      regarding amount of state (if any) kept on PropertyAccessors	DESIGN	0.6784857840664487	DEFECT	0.22213219494669995	DESIGN	0.06787160387668177	WITHOUT_CLASSIFICATION	0.028198896844038552	IMPLEMENTATION	0.002321838977922453	TEST	9.896812882086447E-4	DOCUMENTATION
// TODO: here is why we need to make bytecode provider global :( // TODO : again, fix this after HHH-1907 is complete	DESIGN	0.9964434074917343	DESIGN	0.0035217979937409117	IMPLEMENTATION	1.3124055154243065E-5	DEFECT	1.2321552021603698E-5	DOCUMENTATION	9.337183429740805E-6	TEST	1.1723919108194632E-8	WITHOUT_CLASSIFICATION
//TODO: Yuck! This is not quite good enough, it's a quick //hack around the problem of having a to-one association //that refers to an embedded component:	DESIGN	0.9583761660047526	DESIGN	0.035313438507308954	DEFECT	0.005128975428703983	IMPLEMENTATION	0.0010811658808029389	WITHOUT_CLASSIFICATION	8.655851827587607E-5	TEST	1.369566015563048E-5	DOCUMENTATION
// for DOM4J "collections" only // TODO: it would be better if this was done at the higher level by Printer	DESIGN	0.98477944624208	DESIGN	0.007738292949457106	IMPLEMENTATION	0.005212615861663755	TEST	0.0019254766105620072	WITHOUT_CLASSIFICATION	3.2196574906189965E-4	DEFECT	2.2202587175054853E-5	DOCUMENTATION
// would be great to move all this below here into another method that could also be used // from the new scrolling stuff. // // Would need to change the way the max-row stuff is handled (i.e. behind an interface) so // that I could do the control breaking at the means to know when to stop	DESIGN	0.9898989718446618	DESIGN	0.00912792108502791	WITHOUT_CLASSIFICATION	9.16590647294124E-4	IMPLEMENTATION	5.416782504226873E-5	TEST	2.1550813871134332E-6	DOCUMENTATION	1.935165868435754E-7	DEFECT
//TODO: can we *always* use the "null property" approach for everything?	DESIGN	0.7194348213411288	WITHOUT_CLASSIFICATION	0.2702846299900023	IMPLEMENTATION	0.00828133523347396	DESIGN	0.0017414946083314793	DEFECT	2.3552032564059638E-4	DOCUMENTATION	2.2198501422906454E-5	TEST
//polymorphism comment above	DESIGN	0.9999901697659234	WITHOUT_CLASSIFICATION	3.599257960451363E-6	IMPLEMENTATION	2.509037183753029E-6	DEFECT	1.6585463509759021E-6	TEST	1.4976365551028643E-6	DOCUMENTATION	5.657560263317239E-7	DESIGN
// some messy, complex stuff here, since createCriteria() can take an // aliased path, or a path rooted at the creating criteria instance	DESIGN	0.999929828327949	WITHOUT_CLASSIFICATION	6.0935290301134706E-5	IMPLEMENTATION	7.5469446011779015E-6	DESIGN	1.2030817159794407E-6	DEFECT	3.980185741667776E-7	TEST	8.833685862686711E-8	DOCUMENTATION
//TODO: really bad, evil hack to fix!!!	DESIGN	0.35794727583531205	WITHOUT_CLASSIFICATION	0.33958169243097097	DEFECT	0.21347870880549272	DESIGN	0.08520030157522056	IMPLEMENTATION	0.0034867596895730942	DOCUMENTATION	3.0526166343062606E-4	TEST
// ugly hack for cases like "elements(foo.bar.collection)" // (multi-part path expression ending in elements or indices)	DESIGN	0.9352792996539198	WITHOUT_CLASSIFICATION	0.06446939461931392	DESIGN	2.446326983055653E-4	DEFECT	3.204246096122086E-6	TEST	1.7368654827475055E-6	DOCUMENTATION	1.731916881932039E-6	IMPLEMENTATION
// try block is a hack around fact that currently tuplizers are not // given the opportunity to resolve a subclass entity name.  this // allows the (we assume custom) interceptor the ability to // influence this decision if we were not able to based on the // given entityName	DESIGN	0.9767329306709118	DESIGN	0.023263251079638624	WITHOUT_CLASSIFICATION	2.1032689525288593E-6	TEST	1.4668697939975104E-6	DOCUMENTATION	1.8872846021833777E-7	DEFECT	5.938224275902937E-8	IMPLEMENTATION
/////////////////////////////////////////////////////////////////////// // HACK ALERT !!!!!!!!!!!!!!!!!!!!!!!!!!!! // Attempt to work around "ghost" ImpliedFromElements that occasionally // show up between the actual things being joined.  This consistently // occurs from index nodes (at least against many-to-many).  Not sure // if there are other conditions // // Essentially, look-ahead to the next FromElement that actually // writes something to the SQL	DESIGN	0.8228149508651729	DESIGN	0.17693699254746345	WITHOUT_CLASSIFICATION	2.0907956584523263E-4	DEFECT	3.524412850002033E-5	TEST	2.1674734869228858E-6	IMPLEMENTATION	1.565419531445846E-6	DOCUMENTATION
//init the table here instead of earlier, so that we can get a quoted table name //TODO: would it be better to simply pass the qualified table name, instead of //      splitting it up into schema/catalog/table names	DESIGN	0.899374593677782	WITHOUT_CLASSIFICATION	0.0991701181667974	DESIGN	0.0014380529494527798	IMPLEMENTATION	1.4727064853260359E-5	TEST	2.0684894267284095E-6	DEFECT	4.3965168784693186E-7	DOCUMENTATION
// TODO : would be great to have a Mapping#hasNonIdentifierPropertyNamedId method // I don't believe that Mapping#getReferencedPropertyType accounts for the identifier property; so // if it returns for a property named 'id', then we should have a non-id field named id	DESIGN	0.8851797954600734	DESIGN	0.10924633573282452	IMPLEMENTATION	0.005259716340261139	WITHOUT_CLASSIFICATION	2.891574680441522E-4	DEFECT	2.2310982868991088E-5	TEST	2.6840159278722986E-6	DOCUMENTATION
//TODO: is this really necessary????	DESIGN	0.7482891216016729	WITHOUT_CLASSIFICATION	0.21138361069804598	DESIGN	0.02290483726253204	DEFECT	0.012514381612162371	IMPLEMENTATION	0.0027121533067163256	TEST	0.002195895518870332	DOCUMENTATION
//TODO: ideally we need the construction of PropertyAccessor to take the following: //      1) EntityMode //      2) EntityMode-specific data (i.e., the classname for pojo entities) //      3) Property-specific data based on the EntityMode (i.e., property-name or dom4j-node-name) // The easiest way, with the introduction of the new runtime-metamodel classes, would be the // the following predicates: //      1) PropertyAccessorFactory.getPropertyAccessor() takes references to both a //          org.hibernate.metadata.EntityModeMetadata and org.hibernate.metadata.Property //      2) What is now termed a "PropertyAccessor" stores any values needed from those two //          pieces of information //      3) Code can then simply call PropertyAccess.getGetter() with no parameters; likewise with //          PropertyAccessor.getSetter()	DESIGN	0.9733107163073097	DESIGN	0.02564219057879903	IMPLEMENTATION	5.340406769668113E-4	DEFECT	4.1440827119865604E-4	WITHOUT_CLASSIFICATION	6.485793393417604E-5	DOCUMENTATION	3.378623179162347E-5	TEST
//TODO: this is temporary in that the end result will probably not take a Property reference per-se.	DESIGN	0.9910966001099687	DESIGN	0.008767343604553609	WITHOUT_CLASSIFICATION	1.0624182725248995E-4	DEFECT	2.5895193427067303E-5	IMPLEMENTATION	1.98317779589499E-6	DOCUMENTATION	1.936087002392245E-6	TEST
// todo : this eventually needs to be removed	DESIGN	0.8570190255296419	WITHOUT_CLASSIFICATION	0.092012764610862	IMPLEMENTATION	0.048543944326695364	DESIGN	0.0019284750695515221	DEFECT	2.650844576308099E-4	DOCUMENTATION	2.3070600561836288E-4	TEST
//TODO: make this a bit nicer	DESIGN	0.8599436511722548	WITHOUT_CLASSIFICATION	0.1265546718336933	DESIGN	0.007135273808973887	IMPLEMENTATION	0.003388883281618813	DEFECT	0.0021734835631085575	TEST	8.040363403507893E-4	DOCUMENTATION
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9920854769156783	WITHOUT_CLASSIFICATION	0.007682170642919806	DESIGN	2.1564442315478045E-4	IMPLEMENTATION	9.712967879631139E-6	TEST	5.300210829591209E-6	DOCUMENTATION	1.6948395379861954E-6	DEFECT
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9920854769156783	WITHOUT_CLASSIFICATION	0.007682170642919806	DESIGN	2.1564442315478045E-4	IMPLEMENTATION	9.712967879631139E-6	TEST	5.300210829591209E-6	DOCUMENTATION	1.6948395379861954E-6	DEFECT
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9920854769156783	WITHOUT_CLASSIFICATION	0.007682170642919806	DESIGN	2.1564442315478045E-4	IMPLEMENTATION	9.712967879631139E-6	TEST	5.300210829591209E-6	DOCUMENTATION	1.6948395379861954E-6	DEFECT
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9920854769156783	WITHOUT_CLASSIFICATION	0.007682170642919806	DESIGN	2.1564442315478045E-4	IMPLEMENTATION	9.712967879631139E-6	TEST	5.300210829591209E-6	DOCUMENTATION	1.6948395379861954E-6	DEFECT
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9920854769156783	WITHOUT_CLASSIFICATION	0.007682170642919806	DESIGN	2.1564442315478045E-4	IMPLEMENTATION	9.712967879631139E-6	TEST	5.300210829591209E-6	DOCUMENTATION	1.6948395379861954E-6	DEFECT
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9920854769156783	WITHOUT_CLASSIFICATION	0.007682170642919806	DESIGN	2.1564442315478045E-4	IMPLEMENTATION	9.712967879631139E-6	TEST	5.300210829591209E-6	DOCUMENTATION	1.6948395379861954E-6	DEFECT
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9920854769156783	WITHOUT_CLASSIFICATION	0.007682170642919806	DESIGN	2.1564442315478045E-4	IMPLEMENTATION	9.712967879631139E-6	TEST	5.300210829591209E-6	DOCUMENTATION	1.6948395379861954E-6	DEFECT
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9920854769156783	WITHOUT_CLASSIFICATION	0.007682170642919806	DESIGN	2.1564442315478045E-4	IMPLEMENTATION	9.712967879631139E-6	TEST	5.300210829591209E-6	DOCUMENTATION	1.6948395379861954E-6	DEFECT
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.6761277964378163	WITHOUT_CLASSIFICATION	0.3214540031636594	DESIGN	0.0012283880355431996	DOCUMENTATION	0.001054363006920785	TEST	1.1422475680160265E-4	IMPLEMENTATION	2.122459925880086E-5	DEFECT
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.6761277964378163	WITHOUT_CLASSIFICATION	0.3214540031636594	DESIGN	0.0012283880355431996	DOCUMENTATION	0.001054363006920785	TEST	1.1422475680160265E-4	IMPLEMENTATION	2.122459925880086E-5	DEFECT
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.6761277964378163	WITHOUT_CLASSIFICATION	0.3214540031636594	DESIGN	0.0012283880355431996	DOCUMENTATION	0.001054363006920785	TEST	1.1422475680160265E-4	IMPLEMENTATION	2.122459925880086E-5	DEFECT
// TODO : probably better to calculate these and pass them in, as it'll be more performant	DESIGN	0.9572299392258666	DESIGN	0.03288007671467486	IMPLEMENTATION	0.006664132847241714	WITHOUT_CLASSIFICATION	0.0030940592532329864	DEFECT	1.2953478053424376E-4	DOCUMENTATION	2.2571784497246132E-6	TEST
