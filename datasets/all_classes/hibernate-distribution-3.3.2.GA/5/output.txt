// todo : add support for READ_WRITE ( + NONSTRICT_READ_WRITE ??? )	IMPLEMENTATION	0.991003485302261	WITHOUT_CLASSIFICATION	0.008501023734480473	IMPLEMENTATION	4.876049976821132E-4	DESIGN	4.290096050217662E-6	DOCUMENTATION	3.3183896575444392E-6	TEST	2.77479868715573E-7	DEFECT
// todo : add support for READ_WRITE ( + NONSTRICT_READ_WRITE ??? )	IMPLEMENTATION	0.991003485302261	WITHOUT_CLASSIFICATION	0.008501023734480473	IMPLEMENTATION	4.876049976821132E-4	DESIGN	4.290096050217662E-6	DOCUMENTATION	3.3183896575444392E-6	TEST	2.77479868715573E-7	DEFECT
//TODO: return new Lock(ts);	IMPLEMENTATION	0.9474087250307107	WITHOUT_CLASSIFICATION	0.051683207165528634	DESIGN	4.055994939190914E-4	IMPLEMENTATION	3.7016507316142846E-4	DEFECT	1.1399405005736107E-4	DOCUMENTATION	1.8309186622734658E-5	TEST
//TODO: if lock.getTimestamp().equals(ts)	IMPLEMENTATION	0.49425266573179205	IMPLEMENTATION	0.43741968133998765	WITHOUT_CLASSIFICATION	0.03096147116534649	DEFECT	0.026310860722564323	TEST	0.010083253265746597	DESIGN	9.720677745628681E-4	DOCUMENTATION
//TODO mappings.getLogicalTableName(ownerTable)	IMPLEMENTATION	0.49019199385518253	WITHOUT_CLASSIFICATION	0.33367469741044703	IMPLEMENTATION	0.16538366435247775	DESIGN	0.005681953379625402	TEST	0.004135133961676134	DEFECT	9.325570405912308E-4	DOCUMENTATION
// TODO: handle TypeDefs	IMPLEMENTATION	0.9119050913531314	IMPLEMENTATION	0.050184449591130845	WITHOUT_CLASSIFICATION	0.03720574998059447	DESIGN	2.9824672589926903E-4	DEFECT	2.0552269417186035E-4	DOCUMENTATION	2.0093965507217963E-4	TEST
//TODO check there is no actual definition elemnents when a ref is defined	IMPLEMENTATION	0.5345529435771138	DESIGN	0.4379259670161897	WITHOUT_CLASSIFICATION	0.027423303774318352	IMPLEMENTATION	7.127369399969209E-5	DOCUMENTATION	1.6953477625389053E-5	TEST	9.558460753118131E-6	DEFECT
// TODO: bindpropertyresults(alias, returnElem)	IMPLEMENTATION	0.5544341110165105	WITHOUT_CLASSIFICATION	0.4007770578371739	DESIGN	0.02630677422788682	DEFECT	0.01796757770582725	IMPLEMENTATION	3.7288805082509824E-4	TEST	1.4159116177631619E-4	DOCUMENTATION
//TODO: validate existing of property with the chosen name. (secondpass )	IMPLEMENTATION	0.9493334137943631	WITHOUT_CLASSIFICATION	0.027592785094346168	IMPLEMENTATION	0.020489895786259833	DESIGN	0.0023320268679164016	DEFECT	1.603461434156595E-4	TEST	9.153231369878992E-5	DOCUMENTATION
//TODO: native ids	IMPLEMENTATION	0.5463290789113022	IMPLEMENTATION	0.441472070362474	WITHOUT_CLASSIFICATION	0.005641998483681582	DESIGN	0.005087319635037686	DEFECT	0.0010574361405074938	DOCUMENTATION	4.120964669971615E-4	TEST
//TODO: if we are using identity columns, fetch the identifier	IMPLEMENTATION	0.9996370591186703	WITHOUT_CLASSIFICATION	2.8995425005630285E-4	IMPLEMENTATION	5.9342105169760516E-5	DESIGN	6.430986210149917E-6	TEST	4.912787444367228E-6	DOCUMENTATION	2.3007524490521046E-6	DEFECT
//TODO: handle property-ref	IMPLEMENTATION	0.4508061490039117	WITHOUT_CLASSIFICATION	0.426562914303148	IMPLEMENTATION	0.10869173653823049	DESIGN	0.012322181270228688	DEFECT	0.0011650023752079793	DOCUMENTATION	4.520165092730597E-4	TEST
//TODO: get all properties, not just the fetched ones!	IMPLEMENTATION	0.9854918717388976	WITHOUT_CLASSIFICATION	0.01163188955624462	IMPLEMENTATION	0.0019899650905576397	DESIGN	8.078668435933602E-4	DEFECT	6.196796061879387E-5	TEST	1.643881008787254E-5	DOCUMENTATION
//TODO: get all properties, not just the fetched ones!	IMPLEMENTATION	0.9854918717388976	WITHOUT_CLASSIFICATION	0.01163188955624462	IMPLEMENTATION	0.0019899650905576397	DESIGN	8.078668435933602E-4	DEFECT	6.196796061879387E-5	TEST	1.643881008787254E-5	DOCUMENTATION
/**	IMPLEMENTATION	0.41192914246627127	DOCUMENTATION	0.37751716258507445	DESIGN	0.10445436084894476	IMPLEMENTATION	0.03906412540457568	WITHOUT_CLASSIFICATION	0.03353849397195846	DEFECT	0.033496714723175385	TEST
// TODO: RESTRICT VIOLATION	IMPLEMENTATION	0.661783270026478	IMPLEMENTATION	0.26590611982280843	WITHOUT_CLASSIFICATION	0.05380599635905312	DESIGN	0.01428285590723616	DEFECT	0.002331411924504773	DOCUMENTATION	0.00189034595991952	TEST
// TODO: lowercasing done here. Was done "at random" before; maybe not needed at all ?	IMPLEMENTATION	0.8123279657894349	IMPLEMENTATION	0.17504543926605348	DESIGN	0.01220592390050131	DEFECT	3.2536817648633616E-4	TEST	8.549121078353835E-5	WITHOUT_CLASSIFICATION	9.811656740444533E-6	DOCUMENTATION
// TODO: toLowerCase was not done before. Only used in Template.	IMPLEMENTATION	0.9530839991796481	DESIGN	0.0403432758035011	WITHOUT_CLASSIFICATION	0.006296955683459838	DEFECT	1.6294672577199938E-4	IMPLEMENTATION	9.232502930178281E-5	TEST	2.0497578317153484E-5	DOCUMENTATION
// add an entry for this type of entity. // we can be assured that all referenced entities have already // been processed, // so specify that this entity is with the latest batch. // doing the batch number before adding the name to the list is // a faster way to get an accurate number.	IMPLEMENTATION	0.9999947724449081	WITHOUT_CLASSIFICATION	5.223276542435582E-6	DESIGN	2.4386179734269653E-9	DOCUMENTATION	1.8327729079630731E-9	TEST	6.754065467759678E-12	IMPLEMENTATION	4.045423926545039E-13	DEFECT
//TODO: avoid this for non-new instances where mightBeDirty==false	IMPLEMENTATION	0.5008721111056573	WITHOUT_CLASSIFICATION	0.48827587271552386	DESIGN	0.007209498544982472	DEFECT	0.0023693873426146993	IMPLEMENTATION	7.665757143498636E-4	DOCUMENTATION	5.06554576871756E-4	TEST
//TODO: optimize away this lookup for entities w/o unsaved-value="undefined"	IMPLEMENTATION	0.7789874360089829	WITHOUT_CLASSIFICATION	0.21413498646254844	IMPLEMENTATION	0.006783941159624913	DESIGN	5.267061738905756E-5	DOCUMENTATION	3.2095931169872834E-5	TEST	8.869820284676388E-6	DEFECT
// we could move this inside if we wanted to // tolerate collection initializations during // collection dirty checking:	IMPLEMENTATION	0.9987417061252531	WITHOUT_CLASSIFICATION	0.0012530169492196302	DESIGN	4.371783591349001E-6	TEST	6.606097738875427E-7	DEFECT	2.235857112193915E-7	IMPLEMENTATION	2.0946450750489722E-8	DOCUMENTATION
//TODO: assertion only, could be optimized away	IMPLEMENTATION	0.9194297036322393	IMPLEMENTATION	0.06882500399548772	WITHOUT_CLASSIFICATION	0.008482586074790535	DESIGN	0.001577665237359049	TEST	0.0015141615577032336	DEFECT	1.708795024201261E-4	DOCUMENTATION
//TODO: check that entry.getIdentifier().equals(requestedId)	IMPLEMENTATION	0.981504014813775	IMPLEMENTATION	0.018237717644927442	WITHOUT_CLASSIFICATION	2.1721370424846175E-4	DESIGN	3.0174924543892924E-5	TEST	7.166737257883195E-6	DOCUMENTATION	3.7121752472875002E-6	DEFECT
//TODO: check that entry.getIdentifier().equals(requestedId)	IMPLEMENTATION	0.981504014813775	IMPLEMENTATION	0.018237717644927442	WITHOUT_CLASSIFICATION	2.1721370424846175E-4	DESIGN	3.0174924543892924E-5	TEST	7.166737257883195E-6	DOCUMENTATION	3.7121752472875002E-6	DEFECT
// TODO : why aren't these the same?	IMPLEMENTATION	0.6114084892941952	IMPLEMENTATION	0.38560921337581994	DESIGN	0.0021192428809578487	DOCUMENTATION	6.09238822212987E-4	TEST	1.8210036228103436E-4	DEFECT	7.171526453285642E-5	WITHOUT_CLASSIFICATION
//TODO: always true for now, but not if we later decide to support elements() in the from clause	IMPLEMENTATION	0.7930644810777815	DESIGN	0.10440301967720893	WITHOUT_CLASSIFICATION	0.09985245443360637	DEFECT	0.0025895934762876073	IMPLEMENTATION	7.908215479888001E-5	DOCUMENTATION	1.1369180316488473E-5	TEST
// TODO : or should we return 'containsTableAlias'??	IMPLEMENTATION	0.9988993924206253	DESIGN	0.001068052267145683	IMPLEMENTATION	2.1196489888851536E-5	WITHOUT_CLASSIFICATION	5.410427721727873E-6	DOCUMENTATION	4.879589378586756E-6	DEFECT	1.068805239854969E-6	TEST
//TODO: arithmetic expressions, multiple new Foo(...)	IMPLEMENTATION	0.6113634807090168	IMPLEMENTATION	0.2585141640778497	WITHOUT_CLASSIFICATION	0.12828564078027488	DESIGN	0.0014842171544572982	DEFECT	1.7639760753146493E-4	TEST	1.7609967086986176E-4	DOCUMENTATION
//TODO: for some dialects it would be appropriate to add the renderOrderByPropertiesSelect() to other select strings	IMPLEMENTATION	0.6508667503782023	DESIGN	0.323226672119946	IMPLEMENTATION	0.022886459524217802	WITHOUT_CLASSIFICATION	0.0022514517170724798	TEST	6.770777868703185E-4	DEFECT	9.158847369096753E-5	DOCUMENTATION
//TODO: cache the persister, this shows up in yourkit	IMPLEMENTATION	0.8472017802518547	DESIGN	0.1368909552258814	WITHOUT_CLASSIFICATION	0.011046001884510505	DEFECT	0.004178593796904403	IMPLEMENTATION	4.4731678588402394E-4	TEST	2.3535205496508045E-4	DOCUMENTATION
//TODO: theoretically non-threadsafe...	IMPLEMENTATION	0.5671099896248373	DESIGN	0.29830819204654363	WITHOUT_CLASSIFICATION	0.12915182193046656	IMPLEMENTATION	0.004867880039289338	DEFECT	5.208033301180618E-4	DOCUMENTATION	4.131302874507309E-5	TEST
// todo : look at optimizing these...	IMPLEMENTATION	0.999130069515802	WITHOUT_CLASSIFICATION	8.223748224154264E-4	IMPLEMENTATION	2.4444125764782477E-5	DESIGN	1.4318411014505729E-5	DEFECT	7.297962802090354E-6	TEST	1.4951622014082734E-6	DOCUMENTATION
//TODO: maybe call it getRowSelection() ?	IMPLEMENTATION	0.9495857215679239	DESIGN	0.04561715664321021	IMPLEMENTATION	0.0029232023393197123	WITHOUT_CLASSIFICATION	0.0018330946520356945	DEFECT	2.6079471159785573E-5	DOCUMENTATION	1.4745326350751445E-5	TEST
//TODO: make this handle multiple collection roles!	IMPLEMENTATION	0.8627657879769801	DESIGN	0.11718671715429183	WITHOUT_CLASSIFICATION	0.012357842476842122	IMPLEMENTATION	0.006689744884963411	DEFECT	9.402024247652493E-4	TEST	5.970508215714649E-5	DOCUMENTATION
//TODO: can we limit stored procedures ?!	IMPLEMENTATION	0.6495714027365902	WITHOUT_CLASSIFICATION	0.3467432824780595	DESIGN	0.003223028843782918	DEFECT	2.0739342391180727E-4	IMPLEMENTATION	1.80560263589132E-4	DOCUMENTATION	7.433225406650696E-5	TEST
// TODO: not visible to the user!	IMPLEMENTATION	0.5060864783189785	IMPLEMENTATION	0.38714870805863344	WITHOUT_CLASSIFICATION	0.0889143901027702	DEFECT	0.016984635352007105	DESIGN	4.341278291565208E-4	DOCUMENTATION	4.316603384543703E-4	TEST
//TODO: unnecessary for databases with ANSI-style joins	IMPLEMENTATION	0.6015831911531688	IMPLEMENTATION	0.35948658523983956	WITHOUT_CLASSIFICATION	0.03820737944466967	DESIGN	4.899699818889008E-4	DEFECT	1.325827941827668E-4	TEST	1.002913862503012E-4	DOCUMENTATION
//TODO: use these in methods above	IMPLEMENTATION	0.7394867222591108	DESIGN	0.18674420410084527	WITHOUT_CLASSIFICATION	0.07069516409756581	IMPLEMENTATION	0.0017195521930177897	TEST	7.527715504864582E-4	DEFECT	6.015857989738343E-4	DOCUMENTATION
// TODO: better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.9533362797291652	DESIGN	0.04355897439180165	IMPLEMENTATION	0.0015507269920885152	WITHOUT_CLASSIFICATION	0.0013694913405577537	DEFECT	1.6517666435607005E-4	TEST	1.9350882030754572E-5	DOCUMENTATION
// TODO: better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.9533362797291652	DESIGN	0.04355897439180165	IMPLEMENTATION	0.0015507269920885152	WITHOUT_CLASSIFICATION	0.0013694913405577537	DEFECT	1.6517666435607005E-4	TEST	1.9350882030754572E-5	DOCUMENTATION
// TODO : temporary initial step towards HHH-1907	IMPLEMENTATION	0.9980123185468223	DESIGN	0.0011551906390709734	IMPLEMENTATION	5.35188018123529E-4	WITHOUT_CLASSIFICATION	2.1427782324625477E-4	DEFECT	7.484058875031573E-5	TEST	8.1843839865544E-6	DOCUMENTATION
// todo : remove this once ComponentMetamodel is complete and merged	IMPLEMENTATION	0.8914678623121838	DESIGN	0.10853210475534253	WITHOUT_CLASSIFICATION	3.011547745040754E-8	TEST	1.2150806797842827E-9	IMPLEMENTATION	1.1552272379518252E-9	DOCUMENTATION	4.4668820827982815E-10	DEFECT
//TODO handle supportsNotNullUnique=false, but such a case does not exist in the wild so far	IMPLEMENTATION	0.719800617809704	WITHOUT_CLASSIFICATION	0.19409066755180426	DEFECT	0.07823836263782524	DESIGN	0.0062950302696381626	IMPLEMENTATION	0.001356491005276562	TEST	2.1883072575178236E-4	DOCUMENTATION
// TODO : still need to make CollectionPersisters EntityMode-aware	IMPLEMENTATION	0.9927704037252087	DESIGN	0.005951044928495657	IMPLEMENTATION	6.343321443703821E-4	TEST	3.287899847523592E-4	DEFECT	1.776977082619275E-4	DOCUMENTATION	1.377315089109023E-4	WITHOUT_CLASSIFICATION
//TODO: add owner argument!!	IMPLEMENTATION	0.471155310473177	IMPLEMENTATION	0.4489663513877628	WITHOUT_CLASSIFICATION	0.04963484094655233	DOCUMENTATION	0.01599879994204239	DESIGN	0.012756310991243159	DEFECT	0.0014883862592223295	TEST
//TODO: formulas ?	IMPLEMENTATION	0.9356858224068573	WITHOUT_CLASSIFICATION	0.05814723572684437	DESIGN	0.005672735246703353	IMPLEMENTATION	1.9105232214439125E-4	DEFECT	1.6075801907569566E-4	DOCUMENTATION	1.4239627837479444E-4	TEST
//TODO: include the rowids!!!!	IMPLEMENTATION	0.36612887815987766	DESIGN	0.3204251434969056	WITHOUT_CLASSIFICATION	0.2934666590437927	IMPLEMENTATION	0.014652763895698787	DEFECT	0.004814553842864121	DOCUMENTATION	5.120015608610114E-4	TEST
// todo : cache this sql...	IMPLEMENTATION	0.991081062459558	WITHOUT_CLASSIFICATION	0.008909322112391527	DESIGN	3.585176482501758E-6	IMPLEMENTATION	2.433858083944105E-6	DEFECT	1.8997110168517502E-6	DOCUMENTATION	1.6966824671546737E-6	TEST
//TODO: create uk loaders for component properties	IMPLEMENTATION	0.6023046597374214	WITHOUT_CLASSIFICATION	0.2208235499708363	DESIGN	0.16961722254866798	IMPLEMENTATION	0.004019064298385183	DEFECT	0.0016481970638041836	TEST	0.0015873063808848067	DOCUMENTATION
//TODO: cache this in an instvar	IMPLEMENTATION	0.9498525500535353	DESIGN	0.050015639897834696	WITHOUT_CLASSIFICATION	5.89259606898906E-5	TEST	4.575244248342108E-5	DOCUMENTATION	1.670746669587294E-5	IMPLEMENTATION	1.042417876089723E-5	DEFECT
/////////////////////////////////////////////////////////////////////// // TODO : look at perhaps caching this...	IMPLEMENTATION	0.9884564348218537	DESIGN	0.010276490683828018	IMPLEMENTATION	7.589563229943264E-4	DEFECT	3.1413788840415485E-4	TEST	1.0164320425723495E-4	DOCUMENTATION	9.233707866229684E-5	WITHOUT_CLASSIFICATION
//TODO: eventually put this back in, once we think all is fixed //Object otherAlias = columnsUnique.put(qualifiedColumn, columnAlias);	IMPLEMENTATION	0.616102013871592	IMPLEMENTATION	0.2686866627207927	WITHOUT_CLASSIFICATION	0.11353886810339062	DESIGN	0.0011755460641501808	DEFECT	3.4647926695244107E-4	DOCUMENTATION	1.5042997312206277E-4	TEST
//TODO: if we support multiple fetch groups, we would need //      to clone the set of lazy properties!	IMPLEMENTATION	0.9972360066538335	WITHOUT_CLASSIFICATION	0.002309944171232039	IMPLEMENTATION	3.70526736360033E-4	DESIGN	4.258395048742745E-5	DEFECT	3.932060629369512E-5	TEST	1.6178817933017455E-6	DOCUMENTATION
//TODO: proxies!	IMPLEMENTATION	0.557316282642077	WITHOUT_CLASSIFICATION	0.41678623185677993	IMPLEMENTATION	0.01607458904331432	DESIGN	0.007605338203600943	DEFECT	0.0012287120268855156	DOCUMENTATION	9.8884622734236E-4	TEST
//TODO: terrible implementation!	IMPLEMENTATION	0.9966534194089629	IMPLEMENTATION	0.0031106882570381116	WITHOUT_CLASSIFICATION	1.0249472946340334E-4	DESIGN	8.39716087596832E-5	DEFECT	4.19161446134309E-5	TEST	7.509851162598429E-6	DOCUMENTATION
//TODO: proxies!	IMPLEMENTATION	0.557316282642077	WITHOUT_CLASSIFICATION	0.41678623185677993	IMPLEMENTATION	0.01607458904331432	DESIGN	0.007605338203600943	DEFECT	0.0012287120268855156	DOCUMENTATION	9.8884622734236E-4	TEST
// TODO: I don't really like this implementation; it would be better if // this was handled by searchForDirtyCollections()	IMPLEMENTATION	0.8827999228319409	DESIGN	0.1081286203848086	IMPLEMENTATION	0.008895539247758403	DEFECT	1.4894202932101211E-4	TEST	2.659639630753756E-5	WITHOUT_CLASSIFICATION	3.79109863564113E-7	DOCUMENTATION
// TODO: check if key contains the owner ID	IMPLEMENTATION	0.948198364401554	IMPLEMENTATION	0.04888599867508177	WITHOUT_CLASSIFICATION	0.0020014709127244676	DESIGN	7.693171200736663E-4	DEFECT	1.233938565847987E-4	DOCUMENTATION	2.145503398119681E-5	TEST
//TODO: proxies!	IMPLEMENTATION	0.557316282642077	WITHOUT_CLASSIFICATION	0.41678623185677993	IMPLEMENTATION	0.01607458904331432	DESIGN	0.007605338203600943	DEFECT	0.0012287120268855156	DOCUMENTATION	9.8884622734236E-4	TEST
// table=null -> an association // - fill it in later //TODO fill in the mappings for table == null	IMPLEMENTATION	0.985410703091598	WITHOUT_CLASSIFICATION	0.011841740612737057	DESIGN	0.002052037169185957	TEST	6.528191810041936E-4	DEFECT	2.244516771704859E-5	DOCUMENTATION	2.025477775764969E-5	IMPLEMENTATION
// table=null -> an association - fill // it in later //TODO fill in the mappings for table == null	IMPLEMENTATION	0.9811031077812771	WITHOUT_CLASSIFICATION	0.016860469193362877	DESIGN	0.001704258890148969	TEST	3.172182264661672E-4	DEFECT	1.1208044030231042E-5	DOCUMENTATION	3.737864714558651E-6	IMPLEMENTATION
// if we are still not resolved, we might represent a constant. //      needed to add this here because the allowance of //      naked-prop-refs in the grammar collides with the //      definition of literals/constants ("nondeterminism"). //      TODO: cleanup the grammar so that "processConstants" is always just handled from here	IMPLEMENTATION	0.9999797224653882	DESIGN	1.8462297298047814E-5	WITHOUT_CLASSIFICATION	1.2453996576364812E-6	IMPLEMENTATION	4.90611004924518E-7	DOCUMENTATION	5.544825778759524E-8	TEST	2.3778393389681722E-8	DEFECT
//TODO: add referencedClass to disambiguate to FKs on the same //      columns, pointing to different tables	IMPLEMENTATION	0.9994015456962402	WITHOUT_CLASSIFICATION	4.5342089147850224E-4	DESIGN	1.0723758013647032E-4	IMPLEMENTATION	2.381840800080288E-5	DEFECT	1.2529873306122426E-5	DOCUMENTATION	1.4475508379907524E-6	TEST
//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9995236478600327	WITHOUT_CLASSIFICATION	3.63851495228031E-4	TEST	1.0787450100719767E-4	IMPLEMENTATION	2.669506290948559E-6	DESIGN	1.58212007991834E-6	DOCUMENTATION	3.745173612802913E-7	DEFECT
// aload_0	WITHOUT_CLASSIFICATION	0.9999980968130915	WITHOUT_CLASSIFICATION	1.2798548196128842E-6	DESIGN	2.691845355035648E-7	DEFECT	2.5041856929308736E-7	IMPLEMENTATION	6.69536878584181E-8	DOCUMENTATION	3.6775296295655797E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999980968130915	WITHOUT_CLASSIFICATION	1.2798548196128842E-6	DESIGN	2.691845355035648E-7	DEFECT	2.5041856929308736E-7	IMPLEMENTATION	6.69536878584181E-8	DOCUMENTATION	3.6775296295655797E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999980968130915	WITHOUT_CLASSIFICATION	1.2798548196128842E-6	DESIGN	2.691845355035648E-7	DEFECT	2.5041856929308736E-7	IMPLEMENTATION	6.69536878584181E-8	DOCUMENTATION	3.6775296295655797E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999980968130915	WITHOUT_CLASSIFICATION	1.2798548196128842E-6	DESIGN	2.691845355035648E-7	DEFECT	2.5041856929308736E-7	IMPLEMENTATION	6.69536878584181E-8	DOCUMENTATION	3.6775296295655797E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999980968130915	WITHOUT_CLASSIFICATION	1.2798548196128842E-6	DESIGN	2.691845355035648E-7	DEFECT	2.5041856929308736E-7	IMPLEMENTATION	6.69536878584181E-8	DOCUMENTATION	3.6775296295655797E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999980968130915	WITHOUT_CLASSIFICATION	1.2798548196128842E-6	DESIGN	2.691845355035648E-7	DEFECT	2.5041856929308736E-7	IMPLEMENTATION	6.69536878584181E-8	DOCUMENTATION	3.6775296295655797E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999980968130915	WITHOUT_CLASSIFICATION	1.2798548196128842E-6	DESIGN	2.691845355035648E-7	DEFECT	2.5041856929308736E-7	IMPLEMENTATION	6.69536878584181E-8	DOCUMENTATION	3.6775296295655797E-8	TEST
// return	WITHOUT_CLASSIFICATION	0.9999884879181071	WITHOUT_CLASSIFICATION	1.0906632236239379E-5	DESIGN	4.0499758917442344E-7	DEFECT	1.542008518689577E-7	IMPLEMENTATION	3.1331983413021216E-8	DOCUMENTATION	1.4919232182269345E-8	TEST
// return	WITHOUT_CLASSIFICATION	0.9999884879181071	WITHOUT_CLASSIFICATION	1.0906632236239379E-5	DESIGN	4.0499758917442344E-7	DEFECT	1.542008518689577E-7	IMPLEMENTATION	3.1331983413021216E-8	DOCUMENTATION	1.4919232182269345E-8	TEST
/* | this | bean | args | raw bean | */	WITHOUT_CLASSIFICATION	0.9999756264133453	WITHOUT_CLASSIFICATION	2.2462820079568384E-5	DESIGN	1.0560738102273153E-6	TEST	4.787445868575187E-7	IMPLEMENTATION	2.2874023092319657E-7	DOCUMENTATION	1.4720794706577015E-7	DEFECT
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999994714763439	WITHOUT_CLASSIFICATION	4.752031962262955E-7	DESIGN	3.3448693538617275E-8	DEFECT	1.2686242286789097E-8	DOCUMENTATION	6.625485314601525E-9	TEST	5.600388096164932E-10	IMPLEMENTATION
// astore 4 // store the raw bean	WITHOUT_CLASSIFICATION	0.999996710605683	WITHOUT_CLASSIFICATION	2.2913477603896246E-6	DESIGN	6.800513910917935E-7	IMPLEMENTATION	1.7989477706523786E-7	TEST	9.718029695401517E-8	DEFECT	4.092009152286388E-8	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999983031415653	WITHOUT_CLASSIFICATION	1.3969169222292792E-6	DESIGN	1.4980784932538596E-7	DOCUMENTATION	1.1618132130015805E-7	DEFECT	2.3951889209553525E-8	IMPLEMENTATION	1.0000452490628143E-8	TEST
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999983031415653	WITHOUT_CLASSIFICATION	1.3969169222292792E-6	DESIGN	1.4980784932538596E-7	DOCUMENTATION	1.1618132130015805E-7	DEFECT	2.3951889209553525E-8	IMPLEMENTATION	1.0000452490628143E-8	TEST
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999994676384482	WITHOUT_CLASSIFICATION	4.979440503260144E-7	DESIGN	1.8366685669333317E-8	DEFECT	1.059605822191352E-8	IMPLEMENTATION	3.0706700893052294E-9	TEST	2.384087454961432E-9	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999999600535121	WITHOUT_CLASSIFICATION	2.8579234759961884E-8	DESIGN	8.606888297490241E-9	DEFECT	1.2899966838225943E-9	TEST	1.1152181524050525E-9	IMPLEMENTATION	3.551501634305244E-10	DOCUMENTATION
// putfield // new value of the field	WITHOUT_CLASSIFICATION	0.9999964928423392	WITHOUT_CLASSIFICATION	2.264083385607171E-6	DESIGN	6.119298479363355E-7	IMPLEMENTATION	5.65378786892344E-7	DEFECT	4.3797317726949606E-8	DOCUMENTATION	2.196832269570539E-8	TEST
// reference type	WITHOUT_CLASSIFICATION	0.9999987052551428	WITHOUT_CLASSIFICATION	9.844087759819892E-7	DESIGN	1.2466122948007865E-7	DEFECT	1.0445293776532251E-7	IMPLEMENTATION	7.245524288439771E-8	DOCUMENTATION	8.766671023634368E-9	TEST
// double	WITHOUT_CLASSIFICATION	0.9999982544293886	WITHOUT_CLASSIFICATION	1.441861826820684E-6	DESIGN	2.591109291062904E-7	DEFECT	1.731644248688762E-8	DOCUMENTATION	1.654873200921249E-8	TEST	1.0732680974489614E-8	IMPLEMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999982544293886	WITHOUT_CLASSIFICATION	1.441861826820684E-6	DESIGN	2.591109291062904E-7	DEFECT	1.731644248688762E-8	DOCUMENTATION	1.654873200921249E-8	TEST	1.0732680974489614E-8	IMPLEMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999874751630159	WITHOUT_CLASSIFICATION	9.245534140337963E-6	DEFECT	2.688530628777852E-6	DESIGN	3.434327680367499E-7	IMPLEMENTATION	1.2390149459013115E-7	DOCUMENTATION	1.2343795252208997E-7	TEST
// just decrement the lock, don't recache // (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.9910972050047175	WITHOUT_CLASSIFICATION	0.008756703500825967	IMPLEMENTATION	8.613738308875671E-5	DESIGN	5.239326541302179E-5	DOCUMENTATION	6.080971154798807E-6	DEFECT	1.4798747998046527E-6	TEST
// decode row selection...	WITHOUT_CLASSIFICATION	0.9999337076445135	WITHOUT_CLASSIFICATION	4.8019052005633085E-5	DESIGN	8.869099011509694E-6	DEFECT	8.81155848555952E-6	IMPLEMENTATION	4.2003217012644695E-7	DOCUMENTATION	1.726138136336766E-7	TEST
//disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.9999197043154506	WITHOUT_CLASSIFICATION	7.737869954934467E-5	DESIGN	2.7903344795971104E-6	DEFECT	9.12384878706247E-8	TEST	2.572102243235254E-8	DOCUMENTATION	9.691010182912009E-9	IMPLEMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999995140319314	WITHOUT_CLASSIFICATION	4.6291212956016274E-7	DESIGN	1.6496384055013034E-8	DEFECT	6.2634383690062624E-9	IMPLEMENTATION	2.2778054174475378E-10	TEST	6.833607076471745E-11	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999784465747243	WITHOUT_CLASSIFICATION	2.077861331898798E-5	DESIGN	3.500061105057125E-7	DEFECT	2.1031983560396883E-7	DOCUMENTATION	1.462530229212836E-7	TEST	6.823298763361853E-8	IMPLEMENTATION
// ROW ID	WITHOUT_CLASSIFICATION	0.999978188228362	WITHOUT_CLASSIFICATION	1.3588152549076814E-5	DESIGN	5.682783440139612E-6	IMPLEMENTATION	1.5783876085515279E-6	DEFECT	5.885211087453747E-7	DOCUMENTATION	3.739269313564014E-7	TEST
// COMPOSITE-ID	WITHOUT_CLASSIFICATION	0.9999987151290607	WITHOUT_CLASSIFICATION	7.164025388403297E-7	DESIGN	2.0022768468358905E-7	IMPLEMENTATION	1.9006203221909895E-7	DEFECT	1.2798162164924987E-7	DOCUMENTATION	5.0197061879756536E-8	TEST
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999247567544072	WITHOUT_CLASSIFICATION	6.0462339695737215E-5	IMPLEMENTATION	8.766296347875363E-6	DESIGN	3.1538336624836415E-6	DEFECT	2.0568523756748327E-6	DOCUMENTATION	8.039235111364066E-7	TEST
/*	WITHOUT_CLASSIFICATION	0.9819192621518401	WITHOUT_CLASSIFICATION	0.012598127708177996	DESIGN	0.0034337196809112133	DEFECT	0.0017673486614797169	IMPLEMENTATION	1.7059466924859105E-4	DOCUMENTATION	1.109471283424685E-4	TEST
// DYNAMIC INSERT	WITHOUT_CLASSIFICATION	0.9999230213993201	WITHOUT_CLASSIFICATION	3.730982635358824E-5	DESIGN	3.6405431810644426E-5	IMPLEMENTATION	1.3990145504742126E-6	DOCUMENTATION	1.2445243172811416E-6	DEFECT	6.198036478257426E-7	TEST
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999952619861463	WITHOUT_CLASSIFICATION	2.3890231683302176E-6	IMPLEMENTATION	1.3658977250675208E-6	DESIGN	4.376646667870786E-7	DEFECT	3.777553136119262E-7	DOCUMENTATION	1.6767297980524444E-7	TEST
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999918556559405	WITHOUT_CLASSIFICATION	8.11682172275257E-6	DESIGN	2.428853484000097E-8	DEFECT	1.9532394328087215E-9	TEST	1.2372021412890068E-9	DOCUMENTATION	4.3360376020006795E-11	IMPLEMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.99999514917522	WITHOUT_CLASSIFICATION	2.154747782576821E-6	IMPLEMENTATION	1.7374828801012408E-6	DESIGN	4.1264992060843796E-7	DOCUMENTATION	3.720870231584972E-7	DEFECT	1.7385717361685337E-7	TEST
// PROPERTIES	WITHOUT_CLASSIFICATION	0.99999514917522	WITHOUT_CLASSIFICATION	2.154747782576821E-6	IMPLEMENTATION	1.7374828801012408E-6	DESIGN	4.1264992060843796E-7	DOCUMENTATION	3.720870231584972E-7	DEFECT	1.7385717361685337E-7	TEST
// generated properties can *never* be insertable...	WITHOUT_CLASSIFICATION	0.9999935193624858	WITHOUT_CLASSIFICATION	6.409423492481245E-6	DESIGN	4.181602053920601E-8	DEFECT	1.8607211274271906E-8	TEST	9.730338966783706E-9	IMPLEMENTATION	1.0604508667080083E-9	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9999972850161815	WITHOUT_CLASSIFICATION	1.276339755900893E-6	DESIGN	7.349014809256152E-7	DEFECT	4.2349578933771603E-7	IMPLEMENTATION	1.7057618700639568E-7	DOCUMENTATION	1.096706053412766E-7	TEST
//by default, natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.9998649115175865	WITHOUT_CLASSIFICATION	1.347409715720646E-4	DESIGN	1.624508998247913E-7	IMPLEMENTATION	1.4699334577516086E-7	DEFECT	2.6658010828708898E-8	DOCUMENTATION	1.1408585019101182E-8	TEST
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.999989622495919	WITHOUT_CLASSIFICATION	7.309641929139296E-6	DESIGN	1.5824880393469966E-6	DEFECT	1.4453413409901595E-6	IMPLEMENTATION	3.244869198880842E-8	TEST	7.584079396915279E-9	DOCUMENTATION
// we found some extends attributes referencing entities which were // not already processed.  here we need to locate all entity-names // and class-names contained in this document itself, making sure // that these get removed from the extendz list such that only // extends names which require us to delay processing (i.e. // external to this document and not yet processed) are contained // in the returned result	WITHOUT_CLASSIFICATION	0.9354534335537874	WITHOUT_CLASSIFICATION	0.06453156601111742	DESIGN	1.4681026370936172E-5	DOCUMENTATION	3.053065760706246E-7	IMPLEMENTATION	1.3948525381974643E-8	TEST	1.5362286307398687E-10	DEFECT
/**	WITHOUT_CLASSIFICATION	0.41192914246627127	DOCUMENTATION	0.37751716258507445	DESIGN	0.10445436084894476	IMPLEMENTATION	0.03906412540457568	WITHOUT_CLASSIFICATION	0.03353849397195846	DEFECT	0.033496714723175385	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
/**	WITHOUT_CLASSIFICATION	0.41192914246627127	DOCUMENTATION	0.37751716258507445	DESIGN	0.10445436084894476	IMPLEMENTATION	0.03906412540457568	WITHOUT_CLASSIFICATION	0.03353849397195846	DEFECT	0.033496714723175385	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// If close() is called, guarantee unbind()	WITHOUT_CLASSIFICATION	0.9999998772130637	WITHOUT_CLASSIFICATION	7.601403930342949E-8	DEFECT	4.3724788181952664E-8	IMPLEMENTATION	1.7973963980837018E-9	DESIGN	7.972850491480814E-10	TEST	4.5342723891914906E-10	DOCUMENTATION
// if a ThreadLocalSessionContext-bound session happens to get // serialized, to be completely correct, we need to make sure // that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.999998554206783	WITHOUT_CLASSIFICATION	1.3990602683105034E-6	DESIGN	3.976454132199112E-8	DEFECT	5.158684916351753E-9	TEST	1.0662588221909898E-9	IMPLEMENTATION	7.43463797387108E-10	DOCUMENTATION
// on the inverse, it makes sense that if a ThreadLocalSessionContext- // bound session then gets deserialized to go ahead and re-bind it to // the ThreadLocalSessionContext session map.	WITHOUT_CLASSIFICATION	0.9999999887795683	WITHOUT_CLASSIFICATION	1.0942226317215249E-8	DESIGN	1.258655258581605E-10	IMPLEMENTATION	7.208760624928153E-11	DEFECT	5.3789114871155836E-11	TEST	2.6463199442318657E-11	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9994302783282597	WITHOUT_CLASSIFICATION	5.605464673183444E-4	DESIGN	5.430510646605456E-6	IMPLEMENTATION	2.3301040133749133E-6	DEFECT	8.909956536425815E-7	DOCUMENTATION	5.23594108188342E-7	TEST
// 60 second lock timeout	WITHOUT_CLASSIFICATION	0.9999906144438054	WITHOUT_CLASSIFICATION	5.0883337501940145E-6	DESIGN	3.3876317358368025E-6	DEFECT	5.036612075286547E-7	DOCUMENTATION	3.5880497570589243E-7	IMPLEMENTATION	4.712452523744802E-8	TEST
// OptimisticCache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999965520351288	WITHOUT_CLASSIFICATION	2.276566215984809E-6	IMPLEMENTATION	9.406887213722165E-7	DESIGN	9.188934671991557E-8	TEST	7.971411123256857E-8	DEFECT	5.9106475824119835E-8	DOCUMENTATION
// Cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999952135986747	WITHOUT_CLASSIFICATION	2.129397227885869E-6	DESIGN	2.127907927112465E-6	IMPLEMENTATION	3.440767761540544E-7	DEFECT	9.436681367447162E-8	TEST	9.065258040018583E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// do the put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999858676588059	WITHOUT_CLASSIFICATION	1.1491277910217956E-5	DESIGN	1.2728187441761461E-6	DEFECT	7.012906913156106E-7	IMPLEMENTATION	6.29345942777165E-7	DOCUMENTATION	3.760790570633779E-8	TEST
//ignore!	WITHOUT_CLASSIFICATION	0.999946464477561	WITHOUT_CLASSIFICATION	2.5428849162099257E-5	DEFECT	1.9794692302512352E-5	DESIGN	4.325042118454851E-6	DOCUMENTATION	3.0546543976875644E-6	IMPLEMENTATION	9.322844582605508E-7	TEST
// tree cache in optimistic mode seems to have as very difficult // time with remove calls on non-existent nodes (NPEs)...	WITHOUT_CLASSIFICATION	0.9997141654178795	WITHOUT_CLASSIFICATION	2.7979138143663303E-4	DESIGN	5.462355551997381E-6	DEFECT	5.574339625841123E-7	IMPLEMENTATION	1.2292411406587498E-8	TEST	1.1118757859390824E-8	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.9999117673470785	WITHOUT_CLASSIFICATION	6.396417353546963E-5	DESIGN	1.6321063599292545E-5	IMPLEMENTATION	4.994519051980913E-6	DOCUMENTATION	2.138973156474617E-6	DEFECT	8.139235781500077E-7	TEST
//ignore!	WITHOUT_CLASSIFICATION	0.999946464477561	WITHOUT_CLASSIFICATION	2.5428849162099257E-5	DEFECT	1.9794692302512352E-5	DESIGN	4.325042118454851E-6	DOCUMENTATION	3.0546543976875644E-6	IMPLEMENTATION	9.322844582605508E-7	TEST
//60 seconds	WITHOUT_CLASSIFICATION	0.9999117673470785	WITHOUT_CLASSIFICATION	6.396417353546963E-5	DESIGN	1.6321063599292545E-5	IMPLEMENTATION	4.994519051980913E-6	DOCUMENTATION	2.138973156474617E-6	DEFECT	8.139235781500077E-7	TEST
//do the failfast put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999832792082508	WITHOUT_CLASSIFICATION	1.1873076810072442E-5	DESIGN	2.3739083428268416E-6	DEFECT	9.446279560118912E-7	DOCUMENTATION	9.22355030474832E-7	TEST	6.068236098404352E-7	IMPLEMENTATION
// NOTE : evict() operates locally only (i.e., does not propogate // to any other nodes in the potential cluster).  This is // exactly what is needed when we destroy() here; destroy() is used // as part of the process of shutting down a SessionFactory; thus // these removals should not be propogated	WITHOUT_CLASSIFICATION	0.9093417729272575	DESIGN	0.09040956359333087	WITHOUT_CLASSIFICATION	2.294196968327939E-4	DEFECT	1.90351038525775E-5	TEST	1.5826024694179958E-7	DOCUMENTATION	5.041847905576736E-8	IMPLEMENTATION
//    protected RegionRootListener listener;	WITHOUT_CLASSIFICATION	0.999992224104091	WITHOUT_CLASSIFICATION	5.8738468584515735E-6	IMPLEMENTATION	8.886140441319788E-7	DESIGN	8.281972248015437E-7	DEFECT	1.6236019243198912E-7	TEST	2.287758915587175E-8	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999636242502451	WITHOUT_CLASSIFICATION	1.883370419489575E-5	DESIGN	1.0642681110488267E-5	DEFECT	6.845574878979888E-6	IMPLEMENTATION	3.136154937328766E-8	TEST	2.2428021231740092E-8	DOCUMENTATION
// If we've been blocking for the mutex, perhaps another // thread has already reestablished the root. // In case the node was reestablised via replication, confirm it's  // marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.9999692815915692	WITHOUT_CLASSIFICATION	2.0790919333147514E-5	DESIGN	9.528260447817417E-6	DEFECT	3.399462470965266E-7	DOCUMENTATION	5.269983502083746E-8	TEST	6.582567830420981E-9	IMPLEMENTATION
// For pessimistic locking, we just want to toss out our ref // to any old invalid root node and get the latest (may be null)            	WITHOUT_CLASSIFICATION	0.9999952341880725	WITHOUT_CLASSIFICATION	4.3536386175529125E-6	DEFECT	3.1215979448098396E-7	TEST	9.424696434824308E-8	DESIGN	5.049918913009207E-9	DOCUMENTATION	7.166322778440482E-10	IMPLEMENTATION
// The rest only matters for optimistic locking, where we // need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.9976674268119138	WITHOUT_CLASSIFICATION	0.002187726264211888	DEFECT	1.0924712226773658E-4	DESIGN	1.3590331898757537E-5	TEST	1.109465153476123E-5	DOCUMENTATION	1.0914818173156694E-5	IMPLEMENTATION
// Don't hold a transactional lock for this 	WITHOUT_CLASSIFICATION	0.9939307435901867	WITHOUT_CLASSIFICATION	0.005349322795100516	DESIGN	6.818017611764087E-4	IMPLEMENTATION	2.1098335720494668E-5	DOCUMENTATION	1.4682882090704618E-5	DEFECT	2.3506357251777053E-6	TEST
// Make sure the root node for the region exists and  // has a DataVersion that never complains	WITHOUT_CLASSIFICATION	0.9999900437857544	WITHOUT_CLASSIFICATION	9.62102646024147E-6	IMPLEMENTATION	1.9783643870637833E-7	DEFECT	1.3457250091011407E-7	DESIGN	2.0685187229244167E-9	TEST	7.103270143879144E-10	DOCUMENTATION
// Never evict this node	WITHOUT_CLASSIFICATION	0.999943984554519	WITHOUT_CLASSIFICATION	4.748118097261529E-5	DESIGN	4.383889000645709E-6	IMPLEMENTATION	3.5432248491663162E-6	TEST	3.05816255056143E-7	DEFECT	3.0133440343841673E-7	DOCUMENTATION
// Fix up the resident flag	WITHOUT_CLASSIFICATION	0.9998572507366459	WITHOUT_CLASSIFICATION	1.3055104191157286E-4	IMPLEMENTATION	5.9809627415249735E-6	DEFECT	4.065444322663738E-6	DESIGN	1.4385750134563189E-6	TEST	7.13239364891109E-7	DOCUMENTATION
// 60 seconds	WITHOUT_CLASSIFICATION	0.9999890220420663	WITHOUT_CLASSIFICATION	6.092362627234332E-6	DESIGN	3.4482438364297333E-6	IMPLEMENTATION	7.383413860050459E-7	DEFECT	5.823899745853823E-7	DOCUMENTATION	1.1662010939184777E-7	TEST
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999999995118631	WITHOUT_CLASSIFICATION	2.614558467408603E-10	DEFECT	1.9690029257496626E-10	DESIGN	2.5820108723531814E-11	IMPLEMENTATION	2.8867827749106002E-12	TEST	1.0737715471265257E-12	DOCUMENTATION
// no-op. We don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.9996795914735337	WITHOUT_CLASSIFICATION	3.083576316343241E-4	DESIGN	1.1072223120251621E-5	IMPLEMENTATION	7.475009384824988E-7	DEFECT	1.8980522261133797E-7	DOCUMENTATION	4.136555052383289E-8	TEST
// This should only be possible if the caches are constructor injected 	WITHOUT_CLASSIFICATION	0.9999861029188835	WITHOUT_CLASSIFICATION	1.3073538060004917E-5	DESIGN	4.273298376900433E-7	IMPLEMENTATION	2.473017367558564E-7	DEFECT	1.4792722624758955E-7	TEST	9.842559729644957E-10	DOCUMENTATION
// We only build caches if *none* were passed in.  Passing in // caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.9999900388015949	WITHOUT_CLASSIFICATION	9.465664369978799E-6	DEFECT	2.715625477313373E-7	DESIGN	2.2177010813013666E-7	TEST	2.10323501114921E-9	DOCUMENTATION	9.814416240605541E-11	IMPLEMENTATION
// Set up the cache factory	WITHOUT_CLASSIFICATION	0.9998719886512053	WITHOUT_CLASSIFICATION	1.2777250484426197E-4	DESIGN	1.8522573814544114E-7	DEFECT	2.5545491908631174E-8	DOCUMENTATION	1.6146830115221754E-8	IMPLEMENTATION	1.1925890454974725E-8	TEST
// See if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.9976364451044057	WITHOUT_CLASSIFICATION	0.002356947172609361	DESIGN	5.041137086657519E-6	IMPLEMENTATION	9.920470902876335E-7	DEFECT	3.445109550227434E-7	TEST	2.3002785304553474E-7	DOCUMENTATION
// Default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999126619283899	WITHOUT_CLASSIFICATION	8.699232242102854E-5	DESIGN	1.8742137753797435E-7	IMPLEMENTATION	1.0799485606037876E-7	DEFECT	4.748752882713928E-8	TEST	2.84542668039654E-9	DOCUMENTATION
// Default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999956695609137	WITHOUT_CLASSIFICATION	4.284995107524147E-6	DESIGN	4.1374507178682146E-8	DEFECT	2.4737244552608867E-9	TEST	1.0042597435310935E-9	IMPLEMENTATION	5.914874977681936E-10	DOCUMENTATION
// For Timestamps, we default to a separate config	WITHOUT_CLASSIFICATION	0.999954802013271	WITHOUT_CLASSIFICATION	3.265134579797674E-5	DESIGN	6.685818679689736E-6	DEFECT	3.934780939163685E-6	TEST	1.5748400190992133E-6	IMPLEMENTATION	3.5120129298847384E-7	DOCUMENTATION
// We can't change the TM on a running cache; just check // if the cache has no TM and we're OK with that	WITHOUT_CLASSIFICATION	0.9999999865134264	WITHOUT_CLASSIFICATION	1.3243573263666494E-8	DESIGN	1.0835975163069388E-10	IMPLEMENTATION	5.716400126042386E-11	DEFECT	5.3746467764086356E-11	TEST	2.3730069290044496E-11	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9998676003368147	WITHOUT_CLASSIFICATION	1.3222904434226284E-4	DESIGN	1.0275636166101318E-7	IMPLEMENTATION	4.548603470729905E-8	DOCUMENTATION	2.0196162070592487E-8	DEFECT	2.180284657861931E-9	TEST
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999883816370603	WITHOUT_CLASSIFICATION	6.084900243547521E-6	DESIGN	4.0843784835200285E-6	DEFECT	8.470621797326465E-7	IMPLEMENTATION	4.860199355459947E-7	TEST	1.160020971754322E-7	DOCUMENTATION
// This method should be implemented assuming it's valid to  // do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.9714881764394154	WITHOUT_CLASSIFICATION	0.02047589387776882	DESIGN	0.006066130331639955	IMPLEMENTATION	0.0017369379879005429	DEFECT	2.3137846606781785E-4	TEST	1.4828972075053629E-6	DOCUMENTATION
// Make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.999998297584169	WITHOUT_CLASSIFICATION	1.6183401846727946E-6	DESIGN	3.3195221006455914E-8	IMPLEMENTATION	2.7198668378481103E-8	DEFECT	2.0801225079183404E-8	DOCUMENTATION	2.880531819377735E-9	TEST
// We use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.9999993463780283	WITHOUT_CLASSIFICATION	6.532349246515857E-7	DESIGN	3.195262272138223E-10	DOCUMENTATION	3.628258647743444E-11	IMPLEMENTATION	1.7719821854241715E-11	TEST	1.3518285122444387E-11	DEFECT
// Following methods we don't delegate since they have so little logic // it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.8247871230467002	WITHOUT_CLASSIFICATION	0.1483603760401425	DESIGN	0.02650077597244084	IMPLEMENTATION	3.212522270426433E-4	TEST	2.409386527795919E-5	DEFECT	6.378848395915012E-6	DOCUMENTATION
// If JBC is using INVALIDATION, we don't want to propagate changes. // We use the Timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.9999992606938808	WITHOUT_CLASSIFICATION	3.687050227649426E-7	DESIGN	3.519484130491413E-7	DEFECT	9.275696128852191E-9	TEST	6.7857174694783296E-9	DOCUMENTATION	2.59126976968376E-9	IMPLEMENTATION
// We don't want to waste effort setting an option if JBC is // already in LOCAL mode. If JBC is REPL_(A)SYNC then check // if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.9999987217250124	WITHOUT_CLASSIFICATION	1.1190759025763873E-6	IMPLEMENTATION	8.812289263403829E-8	DESIGN	4.201803196383361E-8	TEST	1.6851527054593466E-8	DOCUMENTATION	1.2206633533519021E-8	DEFECT
// Don't hold the JBC node lock throughout the tx, as that // prevents updates // Add a zero (or low) timeout option so we don't block // waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.9999942673294135	WITHOUT_CLASSIFICATION	4.409298401977422E-6	IMPLEMENTATION	1.196606579308855E-6	DEFECT	9.168870397062787E-8	DOCUMENTATION	2.983292135834036E-8	TEST	5.243979806400965E-9	DESIGN
// Double check the distributed cache	WITHOUT_CLASSIFICATION	0.999999721803449	WITHOUT_CLASSIFICATION	2.712568309054317E-7	IMPLEMENTATION	5.445389447739685E-9	DESIGN	7.960583321068571E-10	DOCUMENTATION	5.523964078827938E-10	TEST	1.458759141415432E-10	DEFECT
// Get an exclusive right to update JBC for this key from this node.	WITHOUT_CLASSIFICATION	0.9999955302570998	WITHOUT_CLASSIFICATION	4.0392453151126295E-6	DESIGN	4.268746778143925E-7	DEFECT	2.6832082237074647E-9	DOCUMENTATION	8.853056039049465E-10	TEST	5.439349180025772E-11	IMPLEMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9993218082362783	WITHOUT_CLASSIFICATION	6.57627885093971E-4	DESIGN	1.913683492468847E-5	DEFECT	7.698402271990998E-7	IMPLEMENTATION	6.174207662945906E-7	DOCUMENTATION	3.9782709672491376E-8	TEST
// Initial load from JBC	WITHOUT_CLASSIFICATION	0.9999995957670493	WITHOUT_CLASSIFICATION	3.831577752889332E-7	DEFECT	1.0487559854999232E-8	DESIGN	4.9761952462063185E-9	IMPLEMENTATION	3.257762325759168E-9	DOCUMENTATION	2.353657986573663E-9	TEST
// See if we had a 2nd invalidation from the same initial // preinvalidation timestamp. If so, only increment // if the new current value is an increase	WITHOUT_CLASSIFICATION	0.9999999905840191	WITHOUT_CLASSIFICATION	8.744246981237648E-9	DEFECT	3.3507159412536076E-10	DESIGN	2.8850743976251287E-10	DOCUMENTATION	4.743117210022859E-11	TEST	7.23749351867297E-13	IMPLEMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9993218082362783	WITHOUT_CLASSIFICATION	6.57627885093971E-4	DESIGN	1.913683492468847E-5	DEFECT	7.698402271990998E-7	IMPLEMENTATION	6.174207662945906E-7	DOCUMENTATION	3.9782709672491376E-8	TEST
// If the workspace node has null as well, OK; if not we've // been modified in a non-comparable manner, which we have to // treat as us being newer	WITHOUT_CLASSIFICATION	0.9999995336015257	WITHOUT_CLASSIFICATION	4.2703134506687605E-7	DESIGN	3.7686501175264036E-8	DEFECT	1.1896095123076603E-9	IMPLEMENTATION	3.8568259767424813E-10	TEST	1.0533584264015386E-10	DOCUMENTATION
// The standard comparator types are not Serializable but are singletons	WITHOUT_CLASSIFICATION	0.9999988861064146	WITHOUT_CLASSIFICATION	5.895119691197658E-7	DESIGN	5.189851574991563E-7	DEFECT	3.585149939568094E-9	TEST	1.5951404651347924E-9	IMPLEMENTATION	2.1616852418824096E-10	DOCUMENTATION
// ignore!	WITHOUT_CLASSIFICATION	0.9999982241996344	WITHOUT_CLASSIFICATION	1.0732087622012624E-6	DEFECT	3.8980344565961607E-7	DESIGN	1.9580108992934332E-7	IMPLEMENTATION	8.603124153692202E-8	DOCUMENTATION	3.0955826330049134E-8	TEST
// ignore it	WITHOUT_CLASSIFICATION	0.9999986582513094	WITHOUT_CLASSIFICATION	5.870617195569445E-7	DESIGN	5.434693584359119E-7	DEFECT	1.2875494862941514E-7	IMPLEMENTATION	5.6679876414652236E-8	DOCUMENTATION	2.5782787810790355E-8	TEST
// construct the cache	WITHOUT_CLASSIFICATION	0.9999961952317235	WITHOUT_CLASSIFICATION	3.124981651516998E-6	DESIGN	5.819803653146983E-7	IMPLEMENTATION	4.18037365089928E-8	TEST	3.146259862279548E-8	DOCUMENTATION	2.4539924759505432E-8	DEFECT
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999929058944176	WITHOUT_CLASSIFICATION	4.5711291569954946E-6	DEFECT	1.570420921504551E-6	DOCUMENTATION	9.241442498933832E-7	DESIGN	2.703775751946931E-8	IMPLEMENTATION	1.3734963266301545E-9	TEST
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999929058944176	WITHOUT_CLASSIFICATION	4.5711291569954946E-6	DEFECT	1.570420921504551E-6	DOCUMENTATION	9.241442498933832E-7	DESIGN	2.703775751946931E-8	IMPLEMENTATION	1.3734963266301545E-9	TEST
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999703279451182	WITHOUT_CLASSIFICATION	2.2312723194526138E-5	DESIGN	5.350529308893346E-6	IMPLEMENTATION	1.008552714209525E-6	DOCUMENTATION	7.869465713900949E-7	DEFECT	2.1330309264835041E-7	TEST
//swaldman 2006-08-28: define c3p0-style configuration parameters for initialPoolSize, which //                     hibernate sensibly lets default to minPoolSize, but we'll let users //                     override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.9564706739164696	WITHOUT_CLASSIFICATION	0.043528486178529904	DESIGN	3.7488711699321433E-7	TEST	2.3797193051179525E-7	DOCUMENTATION	1.974896317656106E-7	IMPLEMENTATION	2.955632131714472E-8	DEFECT
/*DataSource unpooled = DataSources.unpooledDataSource(	WITHOUT_CLASSIFICATION	0.9993205609930064	WITHOUT_CLASSIFICATION	5.743966843569178E-4	IMPLEMENTATION	8.483762930865705E-5	DESIGN	1.3199185689125031E-5	DEFECT	5.748464379879598E-6	DOCUMENTATION	1.2570432590214112E-6	TEST
// TRUE if the pool is borrowed from the outside, FALSE if we used to create it	WITHOUT_CLASSIFICATION	0.9999999308341011	WITHOUT_CLASSIFICATION	6.548228272159693E-8	DESIGN	3.5577759317429903E-9	DEFECT	6.985245934171598E-11	TEST	3.9575813176204005E-11	IMPLEMENTATION	1.6411996285281346E-11	DOCUMENTATION
// get a connection from the pool (thru DriverManager, cfr. Proxool doc)	WITHOUT_CLASSIFICATION	0.99978462351148	WITHOUT_CLASSIFICATION	2.141738521804993E-4	DESIGN	9.550590554691406E-7	DEFECT	1.3299069895742148E-7	IMPLEMENTATION	1.0663347108437847E-7	DOCUMENTATION	7.953113989678786E-9	TEST
// set the Transaction Isolation if defined	WITHOUT_CLASSIFICATION	0.9999716755318548	WITHOUT_CLASSIFICATION	2.2228973726229948E-5	DESIGN	6.002092677152486E-6	IMPLEMENTATION	5.056588295434364E-8	DOCUMENTATION	3.828143334470121E-8	TEST	4.5544253097756094E-9	DEFECT
// toggle autoCommit to false if set	WITHOUT_CLASSIFICATION	0.9999997447208628	WITHOUT_CLASSIFICATION	1.9141989690327387E-7	IMPLEMENTATION	2.947646653568964E-8	DEFECT	1.441855649479925E-8	DESIGN	1.4213217927353375E-8	TEST	5.750999395620196E-9	DOCUMENTATION
// return the connection	WITHOUT_CLASSIFICATION	0.999974282262496	WITHOUT_CLASSIFICATION	2.3700874695428626E-5	DESIGN	9.98309784173292E-7	DEFECT	8.606005422348931E-7	IMPLEMENTATION	1.4963867334429034E-7	DOCUMENTATION	8.313808944303772E-9	TEST
// Get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.9999509177545128	WITHOUT_CLASSIFICATION	4.823719235605698E-5	DESIGN	6.274041569863425E-7	TEST	1.2578149063376692E-7	IMPLEMENTATION	6.69538243906086E-8	DOCUMENTATION	2.4913659176898362E-8	DEFECT
// Default the Proxool alias setting	WITHOUT_CLASSIFICATION	0.9999999489594174	WITHOUT_CLASSIFICATION	2.5551584405782134E-8	DESIGN	1.573491093952643E-8	IMPLEMENTATION	5.599315317326431E-9	DEFECT	2.792032099191238E-9	DOCUMENTATION	1.3627399233333983E-9	TEST
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999397620033773	WITHOUT_CLASSIFICATION	6.022911025805117E-5	DESIGN	3.3006931228102464E-9	DOCUMENTATION	3.0492811218576517E-9	DEFECT	1.8036241537430765E-9	IMPLEMENTATION	7.327663210681005E-10	TEST
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999397620033773	WITHOUT_CLASSIFICATION	6.022911025805117E-5	DESIGN	3.3006931228102464E-9	DOCUMENTATION	3.0492811218576517E-9	DEFECT	1.8036241537430765E-9	IMPLEMENTATION	7.327663210681005E-10	TEST
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9991084055447905	WITHOUT_CLASSIFICATION	8.495392167311741E-4	IMPLEMENTATION	2.8579651548544276E-5	DESIGN	1.0580906997566657E-5	DEFECT	2.7102504761341175E-6	DOCUMENTATION	1.8442945619728388E-7	TEST
// Set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.9999953937624055	WITHOUT_CLASSIFICATION	3.098923829528992E-6	IMPLEMENTATION	1.387556190130076E-6	DEFECT	5.2267810081084374E-8	DOCUMENTATION	4.011847637266194E-8	DESIGN	2.737128841628147E-8	TEST
// Configured using the JAXP Configurator	WITHOUT_CLASSIFICATION	0.9996661523521236	WITHOUT_CLASSIFICATION	3.31514920088546E-4	DESIGN	1.348218505899984E-6	DEFECT	6.802700793701917E-7	TEST	2.576129916062056E-7	DOCUMENTATION	4.6626210988313455E-8	IMPLEMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999397620033773	WITHOUT_CLASSIFICATION	6.022911025805117E-5	DESIGN	3.3006931228102464E-9	DOCUMENTATION	3.0492811218576517E-9	DEFECT	1.8036241537430765E-9	IMPLEMENTATION	7.327663210681005E-10	TEST
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9991084055447905	WITHOUT_CLASSIFICATION	8.495392167311741E-4	IMPLEMENTATION	2.8579651548544276E-5	DESIGN	1.0580906997566657E-5	DEFECT	2.7102504761341175E-6	DOCUMENTATION	1.8442945619728388E-7	TEST
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9991084055447905	WITHOUT_CLASSIFICATION	8.495392167311741E-4	IMPLEMENTATION	2.8579651548544276E-5	DESIGN	1.0580906997566657E-5	DEFECT	2.7102504761341175E-6	DOCUMENTATION	1.8442945619728388E-7	TEST
// Configured using the Properties File Configurator	WITHOUT_CLASSIFICATION	0.9997470068767813	WITHOUT_CLASSIFICATION	2.5210080193577815E-4	DESIGN	8.279115129033962E-7	TEST	4.2557485380056226E-8	DEFECT	1.455824216571618E-8	DOCUMENTATION	7.2940425381727724E-9	IMPLEMENTATION
// Remember Isolation level	WITHOUT_CLASSIFICATION	0.99920103692986	WITHOUT_CLASSIFICATION	7.684747813260416E-4	DESIGN	1.6849111115567357E-5	IMPLEMENTATION	1.1489195689099114E-5	DEFECT	1.1149704796135116E-6	TEST	1.0350115297585144E-6	DOCUMENTATION
// If the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.9999999988484366	WITHOUT_CLASSIFICATION	1.011621106851011E-9	DEFECT	9.371230375062223E-11	DESIGN	2.598140498904131E-11	DOCUMENTATION	1.315433139927078E-11	TEST	7.094268530765815E-12	IMPLEMENTATION
// We have created the pool ourselves, so shut it down	WITHOUT_CLASSIFICATION	0.9999972016807515	WITHOUT_CLASSIFICATION	2.0647356978699394E-6	DESIGN	4.312336284270324E-7	IMPLEMENTATION	2.437973828046919E-7	TEST	4.183809129573866E-8	DEFECT	1.67144481251653E-8	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9992014472284413	WITHOUT_CLASSIFICATION	3.3236229650383754E-4	IMPLEMENTATION	2.558709306540847E-4	DEFECT	2.001519427891849E-4	DESIGN	9.563062647818605E-6	DOCUMENTATION	6.045389638813098E-7	TEST
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9992014472284413	WITHOUT_CLASSIFICATION	3.3236229650383754E-4	IMPLEMENTATION	2.558709306540847E-4	DEFECT	2.001519427891849E-4	DESIGN	9.563062647818605E-6	DOCUMENTATION	6.045389638813098E-7	TEST
//always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.9999814078936563	WITHOUT_CLASSIFICATION	1.2454498857059156E-5	DESIGN	5.285779623626639E-6	IMPLEMENTATION	7.360705198482429E-7	DEFECT	9.726579698759614E-8	DOCUMENTATION	1.8491546177705827E-8	TEST
//public Currency getCurrency(int col) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9998920213880531	WITHOUT_CLASSIFICATION	1.0588309701681575E-4	DESIGN	1.8114164717936178E-6	DEFECT	1.5520915293822437E-7	DOCUMENTATION	1.1601507688786869E-7	TEST	1.2874228524967102E-8	IMPLEMENTATION
// default is POJO	WITHOUT_CLASSIFICATION	0.9999996127623512	WITHOUT_CLASSIFICATION	2.1839779188178547E-7	DEFECT	7.60290240026029E-8	IMPLEMENTATION	6.763348669743857E-8	DESIGN	1.4588763892851495E-8	TEST	1.0588582262820479E-8	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999947637621798	WITHOUT_CLASSIFICATION	4.8379992610273895E-6	DESIGN	2.4779108650935404E-7	DEFECT	9.538490133078409E-8	IMPLEMENTATION	3.4794361269833376E-8	TEST	2.0268210179620623E-8	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999947637621798	WITHOUT_CLASSIFICATION	4.8379992610273895E-6	DESIGN	2.4779108650935404E-7	DEFECT	9.538490133078409E-8	IMPLEMENTATION	3.4794361269833376E-8	TEST	2.0268210179620623E-8	DOCUMENTATION
//private CacheEntry cacheEntry;	WITHOUT_CLASSIFICATION	0.9999772726071136	WITHOUT_CLASSIFICATION	2.217456736990329E-5	DESIGN	3.1493099059627225E-7	DOCUMENTATION	1.6109625158108902E-7	DEFECT	4.686797078138804E-8	IMPLEMENTATION	2.9930303555806355E-8	TEST
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9992851616983677	WITHOUT_CLASSIFICATION	3.305526503371449E-4	DESIGN	2.4375425772477964E-4	TEST	7.469139318969118E-5	DEFECT	6.081692334131495E-5	IMPLEMENTATION	5.023077039329572E-6	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.95549185581311	WITHOUT_CLASSIFICATION	0.04435410367177011	DESIGN	1.0321043068238233E-4	DEFECT	4.434843753463512E-5	IMPLEMENTATION	4.043699482380314E-6	TEST	2.4379474204446436E-6	DOCUMENTATION
// get the updated snapshot of the entity state by cloning current state; // it is safe to copy in place, since by this time no-one else (should have) // has a reference  to the array	WITHOUT_CLASSIFICATION	0.9999999960910286	WITHOUT_CLASSIFICATION	2.016952262483265E-9	IMPLEMENTATION	1.043468456478836E-9	DESIGN	7.973559028459888E-10	DEFECT	3.429921007650685E-11	DOCUMENTATION	1.6895493596255616E-11	TEST
// this entity defines proeprty generation, so process those generated // values...	WITHOUT_CLASSIFICATION	0.9999996149257978	WITHOUT_CLASSIFICATION	3.8142287185880556E-7	DESIGN	1.469250208814139E-9	DOCUMENTATION	1.2947817633110865E-9	DEFECT	8.834512928785518E-10	TEST	3.846994260612143E-12	IMPLEMENTATION
// have the entity entry perform post-update processing, passing it the // update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.9999999021146315	WITHOUT_CLASSIFICATION	5.366567134506879E-8	DESIGN	2.3835606176757184E-8	IMPLEMENTATION	1.0856971067780807E-8	DEFECT	9.09115080642577E-9	DOCUMENTATION	4.359691180597572E-10	TEST
/*!persister.isCacheInvalidationRequired()*/	WITHOUT_CLASSIFICATION	0.9992952094408111	WITHOUT_CLASSIFICATION	5.699922227009036E-4	DESIGN	1.0655539037856492E-4	DEFECT	2.4890960606727884E-5	IMPLEMENTATION	2.615625656365148E-6	DOCUMENTATION	7.363598464320112E-7	TEST
// need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.9997568685503369	WITHOUT_CLASSIFICATION	2.072833996681108E-4	DESIGN	3.435152725694438E-5	IMPLEMENTATION	6.928854142237677E-7	DEFECT	4.608595354339202E-7	DOCUMENTATION	3.427777883267605E-7	TEST
//sort first by role name	WITHOUT_CLASSIFICATION	0.999540163680369	WITHOUT_CLASSIFICATION	4.458914862997789E-4	DESIGN	6.024086847419292E-6	TEST	4.62846280797036E-6	DEFECT	2.5855853807689685E-6	IMPLEMENTATION	7.066982949449202E-7	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.95549185581311	WITHOUT_CLASSIFICATION	0.04435410367177011	DESIGN	1.0321043068238233E-4	DEFECT	4.434843753463512E-5	IMPLEMENTATION	4.043699482380314E-6	TEST	2.4379474204446436E-6	DOCUMENTATION
//then by fk	WITHOUT_CLASSIFICATION	0.9992978622906551	WITHOUT_CLASSIFICATION	3.6515252216093677E-4	IMPLEMENTATION	1.4444176832514448E-4	DESIGN	1.307456575798151E-4	DEFECT	4.0887847278489336E-5	DOCUMENTATION	2.0909914000561298E-5	TEST
// nothing to do	WITHOUT_CLASSIFICATION	0.9999010635999149	WITHOUT_CLASSIFICATION	6.391609878867383E-5	IMPLEMENTATION	1.958247717057761E-5	DESIGN	1.1942668444724631E-5	DEFECT	2.441226225870572E-6	DOCUMENTATION	1.0539294551791083E-6	TEST
// nothing to do	WITHOUT_CLASSIFICATION	0.9999010635999149	WITHOUT_CLASSIFICATION	6.391609878867383E-5	IMPLEMENTATION	1.958247717057761E-5	DESIGN	1.1942668444724631E-5	DEFECT	2.441226225870572E-6	DOCUMENTATION	1.0539294551791083E-6	TEST
// an existing collection that was either non-empty or uninitialized // is replaced by null or a different collection // (if the collection is uninitialized, hibernate has no way of // knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.9804569765229841	WITHOUT_CLASSIFICATION	0.019541820217052055	DESIGN	1.1200402904391035E-6	IMPLEMENTATION	5.4101626837191196E-8	DEFECT	2.723582732350945E-8	TEST	1.8822191552288468E-9	DOCUMENTATION
// this method is called when a new non-null collection is persisted // or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.9868232782498753	WITHOUT_CLASSIFICATION	0.013158624667463144	DESIGN	1.7052138600690887E-5	IMPLEMENTATION	8.492312127585089E-7	TEST	1.721729736960994E-7	DEFECT	2.3539874577620427E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9941110516900238	WITHOUT_CLASSIFICATION	0.005803561585079557	DESIGN	5.7121990422501395E-5	IMPLEMENTATION	2.79463309458577E-5	DEFECT	2.508191388018937E-7	TEST	6.758438946751158E-8	DOCUMENTATION
//do nothing - we only need to notify the cache...	WITHOUT_CLASSIFICATION	0.9999643972423283	WITHOUT_CLASSIFICATION	3.145241695197386E-5	DESIGN	3.2005259662673304E-6	DOCUMENTATION	5.814365414819102E-7	DEFECT	2.6291991854198594E-7	TEST	1.0545829343988564E-7	IMPLEMENTATION
//sort first by entity name	WITHOUT_CLASSIFICATION	0.9997428622228661	WITHOUT_CLASSIFICATION	2.5056537087509416E-4	DESIGN	2.8014805342093913E-6	TEST	2.3820105393442224E-6	IMPLEMENTATION	8.396602177455802E-7	DOCUMENTATION	5.492549672293219E-7	DEFECT
//then by id	WITHOUT_CLASSIFICATION	0.9980335767503635	WITHOUT_CLASSIFICATION	0.0016102985556705242	IMPLEMENTATION	1.6674931471343917E-4	DESIGN	1.2734245152448633E-4	DEFECT	4.083130705810013E-5	DOCUMENTATION	2.1201620670000048E-5	TEST
// to be safe...	WITHOUT_CLASSIFICATION	0.9999699975936023	WITHOUT_CLASSIFICATION	1.3011196558597267E-5	DESIGN	8.708527306881904E-6	DEFECT	7.476920523179813E-6	IMPLEMENTATION	6.59704722575772E-7	DOCUMENTATION	1.4605728632386914E-7	TEST
// no transformations took place, so handle it as we would a // non-instrumented class	WITHOUT_CLASSIFICATION	0.9999884844380704	WITHOUT_CLASSIFICATION	8.413760620650537E-6	IMPLEMENTATION	3.0595654219179628E-6	DESIGN	3.402692867455071E-8	DOCUMENTATION	7.754618318935317E-9	TEST	4.5434007883872403E-10	DEFECT
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999999566667869	WITHOUT_CLASSIFICATION	4.2723955853650883E-8	DESIGN	3.189758976127558E-10	DEFECT	2.0898090095040968E-10	TEST	6.852202028107254E-11	DOCUMENTATION	1.277856814324124E-11	IMPLEMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999999566667869	WITHOUT_CLASSIFICATION	4.2723955853650883E-8	DESIGN	3.189758976127558E-10	DEFECT	2.0898090095040968E-10	TEST	6.852202028107254E-11	DOCUMENTATION	1.277856814324124E-11	IMPLEMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.999992463609089	WITHOUT_CLASSIFICATION	6.835172943918101E-6	DESIGN	4.4835015714046607E-7	DEFECT	1.7479444436979803E-7	DOCUMENTATION	6.397277108738948E-8	IMPLEMENTATION	1.4100594634715046E-8	TEST
//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9995236478600327	WITHOUT_CLASSIFICATION	3.63851495228031E-4	TEST	1.0787450100719767E-4	IMPLEMENTATION	2.669506290948559E-6	DESIGN	1.58212007991834E-6	DOCUMENTATION	3.745173612802913E-7	DEFECT
// set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.9999974364348048	WITHOUT_CLASSIFICATION	2.5046996038976015E-6	DESIGN	2.1043781391215004E-8	DEFECT	1.8908363717459107E-8	TEST	1.3405197435747737E-8	DOCUMENTATION	5.508248838559745E-9	IMPLEMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999980968130915	WITHOUT_CLASSIFICATION	1.2798548196128842E-6	DESIGN	2.691845355035648E-7	DEFECT	2.5041856929308736E-7	IMPLEMENTATION	6.69536878584181E-8	DOCUMENTATION	3.6775296295655797E-8	TEST
// invokespecial	WITHOUT_CLASSIFICATION	0.9999999267721176	WITHOUT_CLASSIFICATION	2.9549321781570617E-8	DOCUMENTATION	1.4873078220185548E-8	DEFECT	1.4471485140953146E-8	IMPLEMENTATION	8.030704603896195E-9	DESIGN	6.303292629735615E-9	TEST
// return	WITHOUT_CLASSIFICATION	0.9999884879181071	WITHOUT_CLASSIFICATION	1.0906632236239379E-5	DESIGN	4.0499758917442344E-7	DEFECT	1.542008518689577E-7	IMPLEMENTATION	3.1331983413021216E-8	DOCUMENTATION	1.4919232182269345E-8	TEST
// aload_1 // load bean	WITHOUT_CLASSIFICATION	0.9999766256336478	WITHOUT_CLASSIFICATION	1.1306015134792982E-5	DESIGN	8.222392964607808E-6	DEFECT	3.0140588041534673E-6	IMPLEMENTATION	4.4471039454181825E-7	TEST	3.871890542110188E-7	DOCUMENTATION
// checkcast // cast bean	WITHOUT_CLASSIFICATION	0.9999490014167082	WITHOUT_CLASSIFICATION	4.6940577371739965E-5	DESIGN	2.3991045820555615E-6	IMPLEMENTATION	8.105365124929428E-7	TEST	4.617619236352573E-7	DOCUMENTATION	3.866029018967463E-7	DEFECT
// astore_3 // store bean	WITHOUT_CLASSIFICATION	0.9999921203409787	WITHOUT_CLASSIFICATION	6.959770834358028E-6	DESIGN	3.972609445690099E-7	TEST	2.6014315568543855E-7	IMPLEMENTATION	1.673406527243038E-7	DEFECT	9.514343394758767E-8	DOCUMENTATION
// aload_2 // args	WITHOUT_CLASSIFICATION	0.9999980275079601	WITHOUT_CLASSIFICATION	1.4264000023880466E-6	IMPLEMENTATION	3.780458179300497E-7	DESIGN	9.909424286378597E-8	DEFECT	4.508107483896021E-8	TEST	2.3870901953143975E-8	DOCUMENTATION
// iconst_i // continue to aastore // growing stack is 1	WITHOUT_CLASSIFICATION	0.9997821496735221	WITHOUT_CLASSIFICATION	1.926014712365951E-4	DEFECT	2.4029757537237474E-5	DESIGN	9.68362122967669E-7	IMPLEMENTATION	1.7597578623305434E-7	TEST	7.47597948834317E-8	DOCUMENTATION
// new	WITHOUT_CLASSIFICATION	0.9996845319816179	WITHOUT_CLASSIFICATION	2.93694443483532E-4	DESIGN	1.3118957881915013E-5	IMPLEMENTATION	4.7852330595565135E-6	DEFECT	2.461784303145054E-6	DOCUMENTATION	1.4075996538308643E-6	TEST
// dup	WITHOUT_CLASSIFICATION	0.9999966849173568	WITHOUT_CLASSIFICATION	2.0166214874764497E-6	DESIGN	9.176009460215425E-7	DEFECT	2.081358061281364E-7	IMPLEMENTATION	1.1882111895862093E-7	DOCUMENTATION	5.3903284809989014E-8	TEST
// aload_3 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999731161726709	WITHOUT_CLASSIFICATION	1.3048095159382118E-5	IMPLEMENTATION	8.446364216657554E-6	DESIGN	4.309315901082881E-6	DEFECT	6.269545933633121E-7	TEST	4.530974586329805E-7	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999994714763439	WITHOUT_CLASSIFICATION	4.752031962262955E-7	DESIGN	3.3448693538617275E-8	DEFECT	1.2686242286789097E-8	DOCUMENTATION	6.625485314601525E-9	TEST	5.600388096164932E-10	IMPLEMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999991964579434	WITHOUT_CLASSIFICATION	3.932796459108366E-7	DEFECT	1.9845782479303866E-7	DESIGN	1.4795296004295573E-7	IMPLEMENTATION	3.8314387696050114E-8	DOCUMENTATION	2.5537237963381193E-8	TEST
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999991964579434	WITHOUT_CLASSIFICATION	3.932796459108366E-7	DEFECT	1.9845782479303866E-7	DESIGN	1.4795296004295573E-7	IMPLEMENTATION	3.8314387696050114E-8	DOCUMENTATION	2.5537237963381193E-8	TEST
// aastore // args	WITHOUT_CLASSIFICATION	0.9999989893615551	WITHOUT_CLASSIFICATION	6.261340296996218E-7	DESIGN	2.473578355678864E-7	IMPLEMENTATION	8.395990095340154E-8	TEST	3.4624680150804864E-8	DEFECT	1.8561998546120976E-8	DOCUMENTATION
/* | this | bean | args | i | raw bean | exception | */	WITHOUT_CLASSIFICATION	0.9998452202855591	WITHOUT_CLASSIFICATION	1.5196277727427712E-4	DESIGN	1.8234804847576258E-6	DEFECT	5.707155448802724E-7	TEST	2.3090631580677246E-7	IMPLEMENTATION	1.918348211027029E-7	DOCUMENTATION
// required to exception table // iconst_0 // i	WITHOUT_CLASSIFICATION	0.9999613396227404	WITHOUT_CLASSIFICATION	3.6859280989652425E-5	DESIGN	1.7660623224711007E-6	DEFECT	1.5947797599566253E-8	TEST	1.5328731110977143E-8	IMPLEMENTATION	3.757418772532242E-9	DOCUMENTATION
// istore_3 // store i	WITHOUT_CLASSIFICATION	0.9999995880099747	WITHOUT_CLASSIFICATION	1.720983794512568E-7	DESIGN	1.4302497373736437E-7	DEFECT	7.173893126155238E-8	TEST	1.3628867783911701E-8	IMPLEMENTATION	1.1498873259919768E-8	DOCUMENTATION
// aload_1 // load the bean	WITHOUT_CLASSIFICATION	0.9999532359776088	WITHOUT_CLASSIFICATION	2.4563372775397564E-5	DESIGN	1.59582240910121E-5	IMPLEMENTATION	4.448881719659877E-6	DEFECT	1.0913068610469697E-6	DOCUMENTATION	7.022369442029738E-7	TEST
// checkcast // cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.9991131377106279	WITHOUT_CLASSIFICATION	8.796559885388808E-4	DESIGN	5.798606739658489E-6	IMPLEMENTATION	5.699940865080408E-7	TEST	4.838541975931692E-7	DEFECT	3.5384580940413805E-7	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999983031415653	WITHOUT_CLASSIFICATION	1.3969169222292792E-6	DESIGN	1.4980784932538596E-7	DOCUMENTATION	1.1618132130015805E-7	DEFECT	2.3951889209553525E-8	IMPLEMENTATION	1.0000452490628143E-8	TEST
// start region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9585176098788374	WITHOUT_CLASSIFICATION	0.041463019285991984	DESIGN	1.690518446686233E-5	DEFECT	1.3481449646478717E-6	IMPLEMENTATION	5.728702806578147E-7	DOCUMENTATION	5.446354585524571E-7	TEST
// iinc 3, 1	WITHOUT_CLASSIFICATION	0.9999972751348196	WITHOUT_CLASSIFICATION	8.50564683344896E-7	DEFECT	7.650024618686399E-7	IMPLEMENTATION	7.083302237089808E-7	DESIGN	2.819513575247587E-7	DOCUMENTATION	1.1901645394629339E-7	TEST
// aload 4 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999577090567419	WITHOUT_CLASSIFICATION	2.152415887102077E-5	DESIGN	1.437609240828198E-5	IMPLEMENTATION	5.289792281959899E-6	DEFECT	5.599426911610849E-7	DOCUMENTATION	5.40957005560264E-7	TEST
// aload_2 // load the args	WITHOUT_CLASSIFICATION	0.9999994482154265	WITHOUT_CLASSIFICATION	3.830863687897051E-7	IMPLEMENTATION	5.989822755482322E-8	DESIGN	4.4980126574909905E-8	DEFECT	3.253438782763304E-8	TEST	3.1285462597437795E-8	DOCUMENTATION
// iconst_i	WITHOUT_CLASSIFICATION	0.9999653648463194	WITHOUT_CLASSIFICATION	2.8384581544781435E-5	DESIGN	3.464669997027245E-6	DEFECT	1.664192061604326E-6	IMPLEMENTATION	6.400398396537119E-7	DOCUMENTATION	4.816702375923684E-7	TEST
// aaload	WITHOUT_CLASSIFICATION	0.9999951168946805	WITHOUT_CLASSIFICATION	2.3269220614380312E-6	DESIGN	1.6402202571095602E-6	IMPLEMENTATION	6.910764783840972E-7	DEFECT	1.3308167888887552E-7	DOCUMENTATION	9.180484374561778E-8	TEST
// checkcast	WITHOUT_CLASSIFICATION	0.9999985789697458	WITHOUT_CLASSIFICATION	7.731677170221717E-7	DESIGN	4.6841206583591577E-7	IMPLEMENTATION	8.742621908064997E-8	DOCUMENTATION	6.206596188242896E-8	TEST	2.995829050452621E-8	DEFECT
// checkcast (case of primitive type) // invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.999999723603321	WITHOUT_CLASSIFICATION	2.1514294911777406E-7	DESIGN	3.954615919409526E-8	IMPLEMENTATION	9.970968072274938E-9	DOCUMENTATION	7.81929779015884E-9	DEFECT	3.917304947297321E-9	TEST
// checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.9999962166321316	WITHOUT_CLASSIFICATION	2.97883296554389E-6	DESIGN	5.077286138713087E-7	IMPLEMENTATION	2.4548189934363317E-7	DOCUMENTATION	3.6646358965700514E-8	DEFECT	1.467803069244843E-8	TEST
/* current stack len = 2 */	WITHOUT_CLASSIFICATION	0.9999954973175372	WITHOUT_CLASSIFICATION	3.128433252437631E-6	DESIGN	6.540112908049208E-7	DEFECT	3.9601878177588376E-7	DOCUMENTATION	2.9664036798493324E-7	IMPLEMENTATION	2.7578769702420694E-8	TEST
// end region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.6832341693153414	DESIGN	0.31673727213903297	WITHOUT_CLASSIFICATION	2.1884303867911725E-5	DEFECT	4.086825828510141E-6	IMPLEMENTATION	2.0200442430691935E-6	DOCUMENTATION	5.673716860478642E-7	TEST
// register in exception table	WITHOUT_CLASSIFICATION	0.9999946656157602	WITHOUT_CLASSIFICATION	5.3018815796995385E-6	DESIGN	2.658278365593865E-8	DEFECT	4.720673870137597E-9	TEST	8.111629722882434E-10	DOCUMENTATION	3.880396007701656E-10	IMPLEMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999980968130915	WITHOUT_CLASSIFICATION	1.2798548196128842E-6	DESIGN	2.691845355035648E-7	DEFECT	2.5041856929308736E-7	IMPLEMENTATION	6.69536878584181E-8	DOCUMENTATION	3.6775296295655797E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999980968130915	WITHOUT_CLASSIFICATION	1.2798548196128842E-6	DESIGN	2.691845355035648E-7	DEFECT	2.5041856929308736E-7	IMPLEMENTATION	6.69536878584181E-8	DOCUMENTATION	3.6775296295655797E-8	TEST
// return	WITHOUT_CLASSIFICATION	0.9999884879181071	WITHOUT_CLASSIFICATION	1.0906632236239379E-5	DESIGN	4.0499758917442344E-7	DEFECT	1.542008518689577E-7	IMPLEMENTATION	3.1331983413021216E-8	DOCUMENTATION	1.4919232182269345E-8	TEST
// return	WITHOUT_CLASSIFICATION	0.9999884879181071	WITHOUT_CLASSIFICATION	1.0906632236239379E-5	DESIGN	4.0499758917442344E-7	DEFECT	1.542008518689577E-7	IMPLEMENTATION	3.1331983413021216E-8	DOCUMENTATION	1.4919232182269345E-8	TEST
// dup	WITHOUT_CLASSIFICATION	0.9999966849173568	WITHOUT_CLASSIFICATION	2.0166214874764497E-6	DESIGN	9.176009460215425E-7	DEFECT	2.081358061281364E-7	IMPLEMENTATION	1.1882111895862093E-7	DOCUMENTATION	5.3903284809989014E-8	TEST
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999991964579434	WITHOUT_CLASSIFICATION	3.932796459108366E-7	DEFECT	1.9845782479303866E-7	DESIGN	1.4795296004295573E-7	IMPLEMENTATION	3.8314387696050114E-8	DOCUMENTATION	2.5537237963381193E-8	TEST
// checkcast	WITHOUT_CLASSIFICATION	0.9999985789697458	WITHOUT_CLASSIFICATION	7.731677170221717E-7	DESIGN	4.6841206583591577E-7	IMPLEMENTATION	8.742621908064997E-8	DOCUMENTATION	6.206596188242896E-8	TEST	2.995829050452621E-8	DEFECT
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999994676384482	WITHOUT_CLASSIFICATION	4.979440503260144E-7	DESIGN	1.8366685669333317E-8	DEFECT	1.059605822191352E-8	IMPLEMENTATION	3.0706700893052294E-9	TEST	2.384087454961432E-9	DOCUMENTATION
// astore 5 // store exception	WITHOUT_CLASSIFICATION	0.9999991182602939	WITHOUT_CLASSIFICATION	4.6118736063111734E-7	DESIGN	4.0734873026475773E-7	DEFECT	7.3029888784654635E-9	TEST	5.0372683210933416E-9	DOCUMENTATION	8.633579733985718E-10	IMPLEMENTATION
// new // BulkAccessorException	WITHOUT_CLASSIFICATION	0.996339193865561	WITHOUT_CLASSIFICATION	0.0024563806910808095	DESIGN	0.0011892614814486752	DEFECT	6.616544817072618E-6	TEST	5.054572045851006E-6	DOCUMENTATION	3.492845046625014E-6	IMPLEMENTATION
// aload 5 // load exception	WITHOUT_CLASSIFICATION	0.9999472154395652	WITHOUT_CLASSIFICATION	4.7547833821208176E-5	DEFECT	4.993538871758623E-6	DESIGN	1.3197969218937903E-7	DOCUMENTATION	5.7626117373292234E-8	IMPLEMENTATION	5.3581932295310613E-8	TEST
// iload_3 // i	WITHOUT_CLASSIFICATION	0.9999986536610678	WITHOUT_CLASSIFICATION	5.754212119990668E-7	DEFECT	5.472642998856582E-7	IMPLEMENTATION	1.226039840383516E-7	TEST	6.491381047454135E-8	DESIGN	3.61356258306777E-8	DOCUMENTATION
// invokespecial // BulkAccessorException.<init>	WITHOUT_CLASSIFICATION	0.9999981181907988	WITHOUT_CLASSIFICATION	1.6495013398985998E-6	DEFECT	1.0614905874656701E-7	DESIGN	5.646376798883951E-8	DOCUMENTATION	5.097128110342816E-8	TEST	1.8723753456849166E-8	IMPLEMENTATION
// athrow	WITHOUT_CLASSIFICATION	0.9999976408235496	WITHOUT_CLASSIFICATION	1.1913000781235084E-6	DESIGN	6.778039690208335E-7	DEFECT	3.384519222013932E-7	IMPLEMENTATION	8.31085700283771E-8	DOCUMENTATION	6.851191088839619E-8	TEST
// WARNING: classfile only	WITHOUT_CLASSIFICATION	0.9999789797613249	WITHOUT_CLASSIFICATION	1.2317763064443398E-5	DESIGN	6.962823906400973E-6	DEFECT	9.55927286699006E-7	IMPLEMENTATION	6.346940332849685E-7	DOCUMENTATION	1.490303841989435E-7	TEST
//swallow	WITHOUT_CLASSIFICATION	0.9999016138616406	WITHOUT_CLASSIFICATION	6.751736353666086E-5	DESIGN	1.7323429942517776E-5	IMPLEMENTATION	9.75381896466366E-6	DEFECT	2.3191821843289414E-6	DOCUMENTATION	1.4723437312814648E-6	TEST
/* local variable | this | */	WITHOUT_CLASSIFICATION	0.9999931630925165	WITHOUT_CLASSIFICATION	6.40044301712177E-6	DESIGN	2.539428082242863E-7	IMPLEMENTATION	1.3248424709947452E-7	TEST	4.42086335493153E-8	DOCUMENTATION	5.8287775303807845E-9	DEFECT
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999953385962066	WITHOUT_CLASSIFICATION	2.911815997147139E-6	DESIGN	5.997761498277317E-7	TEST	5.137540127709882E-7	DOCUMENTATION	4.363958276670871E-7	IMPLEMENTATION	1.9966180597419643E-7	DEFECT
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999953385962066	WITHOUT_CLASSIFICATION	2.911815997147139E-6	DESIGN	5.997761498277317E-7	TEST	5.137540127709882E-7	DOCUMENTATION	4.363958276670871E-7	IMPLEMENTATION	1.9966180597419643E-7	DEFECT
// getfield // get field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999993619228157	WITHOUT_CLASSIFICATION	6.306573205456067E-7	DESIGN	2.8836169070410104E-9	IMPLEMENTATION	2.352301036756163E-9	DEFECT	1.3364107487850536E-9	TEST	8.475350319391119E-10	DOCUMENTATION
// areturn // return the value of the field	WITHOUT_CLASSIFICATION	0.9999995686979529	WITHOUT_CLASSIFICATION	3.6803659574699787E-7	DESIGN	4.884300893140882E-8	DEFECT	1.2724839299153993E-8	IMPLEMENTATION	1.299071977729386E-9	DOCUMENTATION	3.985311490933921E-10	TEST
/* local variables | this | callback | */	WITHOUT_CLASSIFICATION	0.999698954851415	WITHOUT_CLASSIFICATION	2.9089484239760234E-4	DESIGN	6.234726601636423E-6	IMPLEMENTATION	1.7733087656537665E-6	TEST	1.7360392107577367E-6	DEFECT	4.0623160940099066E-7	DOCUMENTATION
// aload_1 // load callback	WITHOUT_CLASSIFICATION	0.999977813905306	WITHOUT_CLASSIFICATION	1.1763686262968392E-5	DEFECT	5.083377722913644E-6	DESIGN	5.0704218162474E-6	IMPLEMENTATION	1.4604286735732257E-7	DOCUMENTATION	1.2256602437432553E-7	TEST
// putfield // put field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999999529765282	WITHOUT_CLASSIFICATION	3.615465973928782E-8	DESIGN	8.417662434779909E-9	IMPLEMENTATION	1.4275373784891796E-9	DEFECT	5.717537660728141E-10	DOCUMENTATION	4.518585043319632E-10	TEST
// case of non-static field	WITHOUT_CLASSIFICATION	0.9999999251221942	WITHOUT_CLASSIFICATION	4.608759380042989E-8	DESIGN	1.499843189716138E-8	IMPLEMENTATION	1.140046713604554E-8	DEFECT	2.1863518006952463E-9	DOCUMENTATION	2.0496121509312572E-10	TEST
// getfield // get each field	WITHOUT_CLASSIFICATION	0.9999941467882217	WITHOUT_CLASSIFICATION	5.803629404278908E-6	DESIGN	2.2882200264519582E-8	DEFECT	1.3528103354057463E-8	TEST	7.921307846864484E-9	IMPLEMENTATION	5.250762448860214E-9	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999999600535121	WITHOUT_CLASSIFICATION	2.8579234759961884E-8	DESIGN	8.606888297490241E-9	DEFECT	1.2899966838225943E-9	TEST	1.1152181524050525E-9	IMPLEMENTATION	3.551501634305244E-10	DOCUMENTATION
// ifnonnull	WITHOUT_CLASSIFICATION	0.9999894786478578	WITHOUT_CLASSIFICATION	8.244613847099812E-6	DEFECT	1.2756587147361926E-6	DESIGN	8.146357773099828E-7	IMPLEMENTATION	9.71462616044701E-8	DOCUMENTATION	8.92975415137703E-8	TEST
// *return // each type	WITHOUT_CLASSIFICATION	0.999999699683792	WITHOUT_CLASSIFICATION	2.715176988536017E-7	DESIGN	2.411698518435161E-8	DEFECT	2.067261142633133E-9	DOCUMENTATION	1.917840488799792E-9	IMPLEMENTATION	6.964222646206115E-10	TEST
// *return // each type	WITHOUT_CLASSIFICATION	0.999999699683792	WITHOUT_CLASSIFICATION	2.715176988536017E-7	DESIGN	2.411698518435161E-8	DEFECT	2.067261142633133E-9	DOCUMENTATION	1.917840488799792E-9	IMPLEMENTATION	6.964222646206115E-10	TEST
// *store_1 // each type	WITHOUT_CLASSIFICATION	0.9999999119608068	WITHOUT_CLASSIFICATION	8.022974402494706E-8	DESIGN	3.769793754394319E-9	DEFECT	1.7217033558824749E-9	TEST	1.2439349654101796E-9	IMPLEMENTATION	1.0740171573220463E-9	DOCUMENTATION
// ldc // name of the field	WITHOUT_CLASSIFICATION	0.9999846784047058	WITHOUT_CLASSIFICATION	1.4392389773111389E-5	DESIGN	4.912393428308263E-7	IMPLEMENTATION	2.5263222693686374E-7	DEFECT	9.780182764114227E-8	TEST	8.753212378083113E-8	DOCUMENTATION
// *load_1 // each type	WITHOUT_CLASSIFICATION	0.9999998406077336	WITHOUT_CLASSIFICATION	9.63774546333964E-8	DESIGN	3.833239142127617E-8	DEFECT	1.6186639157721607E-8	IMPLEMENTATION	5.074428602942279E-9	DOCUMENTATION	3.421352533296281E-9	TEST
// invokeinterface // invoke Callback.read*() // each type	WITHOUT_CLASSIFICATION	0.9999999772575303	WITHOUT_CLASSIFICATION	1.4730418063368652E-8	DEFECT	7.275661727824276E-9	DESIGN	4.6355251870917915E-10	DOCUMENTATION	1.8740125868142297E-10	TEST	8.543607529139321E-11	IMPLEMENTATION
// int	WITHOUT_CLASSIFICATION	0.9999980676683361	WITHOUT_CLASSIFICATION	1.1400753264884705E-6	DEFECT	5.447953432288012E-7	DESIGN	1.2996406560871627E-7	DOCUMENTATION	7.144706090866826E-8	TEST	4.604986755559285E-8	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999884879181071	WITHOUT_CLASSIFICATION	1.0906632236239379E-5	DESIGN	4.0499758917442344E-7	DEFECT	1.542008518689577E-7	IMPLEMENTATION	3.1331983413021216E-8	DOCUMENTATION	1.4919232182269345E-8	TEST
// dup	WITHOUT_CLASSIFICATION	0.9999966849173568	WITHOUT_CLASSIFICATION	2.0166214874764497E-6	DESIGN	9.176009460215425E-7	DEFECT	2.081358061281364E-7	IMPLEMENTATION	1.1882111895862093E-7	DOCUMENTATION	5.3903284809989014E-8	TEST
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999994714763439	WITHOUT_CLASSIFICATION	4.752031962262955E-7	DESIGN	3.3448693538617275E-8	DEFECT	1.2686242286789097E-8	DOCUMENTATION	6.625485314601525E-9	TEST	5.600388096164932E-10	IMPLEMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999985789697458	WITHOUT_CLASSIFICATION	7.731677170221717E-7	DESIGN	4.6841206583591577E-7	IMPLEMENTATION	8.742621908064997E-8	DOCUMENTATION	6.206596188242896E-8	TEST	2.995829050452621E-8	DEFECT
// checkcast	WITHOUT_CLASSIFICATION	0.9999985789697458	WITHOUT_CLASSIFICATION	7.731677170221717E-7	DESIGN	4.6841206583591577E-7	IMPLEMENTATION	8.742621908064997E-8	DOCUMENTATION	6.206596188242896E-8	TEST	2.995829050452621E-8	DEFECT
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999999662552246	WITHOUT_CLASSIFICATION	2.486068700682254E-8	DESIGN	5.6239266256163205E-9	DEFECT	2.030794452934372E-9	IMPLEMENTATION	9.38466185711527E-10	TEST	2.909011431966879E-10	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999999662552246	WITHOUT_CLASSIFICATION	2.486068700682254E-8	DESIGN	5.6239266256163205E-9	DEFECT	2.030794452934372E-9	IMPLEMENTATION	9.38466185711527E-10	TEST	2.909011431966879E-10	DOCUMENTATION
// ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.9999903437813273	WITHOUT_CLASSIFICATION	7.595009820796144E-6	DESIGN	1.4961823410620913E-6	IMPLEMENTATION	4.5383459675346967E-7	DEFECT	6.421593448409386E-8	DOCUMENTATION	4.697597952464099E-8	TEST
// *load_1	WITHOUT_CLASSIFICATION	0.9999986348655381	WITHOUT_CLASSIFICATION	6.184650639585218E-7	DESIGN	3.693019355744026E-7	DEFECT	3.117216024231517E-7	IMPLEMENTATION	3.517241843012319E-8	DOCUMENTATION	3.047344145037381E-8	TEST
// *load_1	WITHOUT_CLASSIFICATION	0.9999986348655381	WITHOUT_CLASSIFICATION	6.184650639585218E-7	DESIGN	3.693019355744026E-7	DEFECT	3.117216024231517E-7	IMPLEMENTATION	3.517241843012319E-8	DOCUMENTATION	3.047344145037381E-8	TEST
// putfield	WITHOUT_CLASSIFICATION	0.9999986380115986	WITHOUT_CLASSIFICATION	1.0515932024561678E-6	IMPLEMENTATION	2.0077500211592845E-7	DESIGN	8.413875623421639E-8	DEFECT	1.4488757477526454E-8	DOCUMENTATION	1.0992683060766907E-8	TEST
// return ;	WITHOUT_CLASSIFICATION	0.9999927392010336	WITHOUT_CLASSIFICATION	6.429587828750529E-6	DESIGN	5.348845580378281E-7	DEFECT	2.4527122545048777E-7	IMPLEMENTATION	3.669980010315332E-8	DOCUMENTATION	1.4355553938309123E-8	TEST
// ldc // field name	WITHOUT_CLASSIFICATION	0.9999990120618603	WITHOUT_CLASSIFICATION	8.592120695666324E-7	DESIGN	7.222232470822015E-8	DEFECT	2.4762293459413433E-8	TEST	2.4240697915914442E-8	IMPLEMENTATION	7.500753986970299E-9	DOCUMENTATION
// getfield // old value of the field	WITHOUT_CLASSIFICATION	0.9999987787613077	WITHOUT_CLASSIFICATION	6.002280376426426E-7	DESIGN	5.941902695242396E-7	DEFECT	1.0803349738849939E-8	IMPLEMENTATION	8.114055623601159E-9	DOCUMENTATION	7.90297979210911E-9	TEST
// invokeinterface // callback.write*(..)	WITHOUT_CLASSIFICATION	0.9999997437257429	WITHOUT_CLASSIFICATION	1.9781743405661652E-7	DEFECT	5.119128234060857E-8	DESIGN	2.586228908594375E-9	TEST	2.510794733489311E-9	IMPLEMENTATION	2.1685169854251216E-9	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999987052551428	WITHOUT_CLASSIFICATION	9.844087759819892E-7	DESIGN	1.2466122948007865E-7	DEFECT	1.0445293776532251E-7	IMPLEMENTATION	7.245524288439771E-8	DOCUMENTATION	8.766671023634368E-9	TEST
// reference type	WITHOUT_CLASSIFICATION	0.9999987052551428	WITHOUT_CLASSIFICATION	9.844087759819892E-7	DESIGN	1.2466122948007865E-7	DEFECT	1.0445293776532251E-7	IMPLEMENTATION	7.245524288439771E-8	DOCUMENTATION	8.766671023634368E-9	TEST
// not array	WITHOUT_CLASSIFICATION	0.9995476487035518	WITHOUT_CLASSIFICATION	2.51430202744261E-4	IMPLEMENTATION	1.3241451637601098E-4	DESIGN	6.405907351293993E-5	DEFECT	2.249902043157346E-6	DOCUMENTATION	2.1976017718808966E-6	TEST
// array of reference type	WITHOUT_CLASSIFICATION	0.9999997735375922	WITHOUT_CLASSIFICATION	9.811348638349815E-8	DEFECT	7.451075489839399E-8	DESIGN	3.247035953199838E-8	DOCUMENTATION	1.901584460607439E-8	IMPLEMENTATION	2.3519623991302698E-9	TEST
// boolean	WITHOUT_CLASSIFICATION	0.9999923166339111	WITHOUT_CLASSIFICATION	6.977566265837735E-6	DESIGN	3.781352509955914E-7	DEFECT	1.6541509961278981E-7	IMPLEMENTATION	8.522446742727625E-8	TEST	7.702500517138618E-8	DOCUMENTATION
// byte	WITHOUT_CLASSIFICATION	0.9999900362270001	WITHOUT_CLASSIFICATION	4.488901650222376E-6	DESIGN	3.185988908205692E-6	IMPLEMENTATION	1.632210548534184E-6	DEFECT	3.2837042719871767E-7	TEST	3.2830146577080714E-7	DOCUMENTATION
// char	WITHOUT_CLASSIFICATION	0.9999999848451748	WITHOUT_CLASSIFICATION	1.252111053989678E-8	DESIGN	7.321995762082535E-10	IMPLEMENTATION	6.769894998173833E-10	DOCUMENTATION	6.324548057415785E-10	DEFECT	5.920706323335877E-10	TEST
// short	WITHOUT_CLASSIFICATION	0.9999875161777504	WITHOUT_CLASSIFICATION	1.116137477874982E-5	DESIGN	5.695266379081074E-7	DEFECT	3.6848154463630694E-7	TEST	2.108226531736803E-7	IMPLEMENTATION	1.7361663523878943E-7	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999982544293886	WITHOUT_CLASSIFICATION	1.441861826820684E-6	DESIGN	2.591109291062904E-7	DEFECT	1.731644248688762E-8	DOCUMENTATION	1.654873200921249E-8	TEST	1.0732680974489614E-8	IMPLEMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999960051914403	WITHOUT_CLASSIFICATION	3.357966050330782E-6	DEFECT	3.7822911756031906E-7	DESIGN	9.963811295939281E-8	IMPLEMENTATION	8.293337195354537E-8	TEST	7.604190692173869E-8	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999960051914403	WITHOUT_CLASSIFICATION	3.357966050330782E-6	DEFECT	3.7822911756031906E-7	DESIGN	9.963811295939281E-8	IMPLEMENTATION	8.293337195354537E-8	TEST	7.604190692173869E-8	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999874751630159	WITHOUT_CLASSIFICATION	9.245534140337963E-6	DEFECT	2.688530628777852E-6	DESIGN	3.434327680367499E-7	IMPLEMENTATION	1.2390149459013115E-7	DOCUMENTATION	1.2343795252208997E-7	TEST
// long	WITHOUT_CLASSIFICATION	0.9999874751630159	WITHOUT_CLASSIFICATION	9.245534140337963E-6	DEFECT	2.688530628777852E-6	DESIGN	3.434327680367499E-7	IMPLEMENTATION	1.2390149459013115E-7	DOCUMENTATION	1.2343795252208997E-7	TEST
// bad type	WITHOUT_CLASSIFICATION	0.9999980509934512	WITHOUT_CLASSIFICATION	8.311564111675721E-7	DESIGN	6.86720438677063E-7	IMPLEMENTATION	2.886650831645742E-7	DEFECT	9.006344501953621E-8	DOCUMENTATION	5.2401170694994744E-8	TEST
// bad type	WITHOUT_CLASSIFICATION	0.9999980509934512	WITHOUT_CLASSIFICATION	8.311564111675721E-7	DESIGN	6.86720438677063E-7	IMPLEMENTATION	2.886650831645742E-7	DEFECT	9.006344501953621E-8	DOCUMENTATION	5.2401170694994744E-8	TEST
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999998813755977	WITHOUT_CLASSIFICATION	4.719861765202267E-8	DESIGN	2.8213442840811647E-8	DEFECT	2.710475369294936E-8	IMPLEMENTATION	1.18430553867252E-8	TEST	4.264532759053802E-9	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999998813755977	WITHOUT_CLASSIFICATION	4.719861765202267E-8	DESIGN	2.8213442840811647E-8	DEFECT	2.710475369294936E-8	IMPLEMENTATION	1.18430553867252E-8	TEST	4.264532759053802E-9	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999987052551428	WITHOUT_CLASSIFICATION	9.844087759819892E-7	DESIGN	1.2466122948007865E-7	DEFECT	1.0445293776532251E-7	IMPLEMENTATION	7.245524288439771E-8	DOCUMENTATION	8.766671023634368E-9	TEST
// double	WITHOUT_CLASSIFICATION	0.9999982544293886	WITHOUT_CLASSIFICATION	1.441861826820684E-6	DESIGN	2.591109291062904E-7	DEFECT	1.731644248688762E-8	DOCUMENTATION	1.654873200921249E-8	TEST	1.0732680974489614E-8	IMPLEMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999960051914403	WITHOUT_CLASSIFICATION	3.357966050330782E-6	DEFECT	3.7822911756031906E-7	DESIGN	9.963811295939281E-8	IMPLEMENTATION	8.293337195354537E-8	TEST	7.604190692173869E-8	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999960051914403	WITHOUT_CLASSIFICATION	3.357966050330782E-6	DEFECT	3.7822911756031906E-7	DESIGN	9.963811295939281E-8	IMPLEMENTATION	8.293337195354537E-8	TEST	7.604190692173869E-8	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999874751630159	WITHOUT_CLASSIFICATION	9.245534140337963E-6	DEFECT	2.688530628777852E-6	DESIGN	3.434327680367499E-7	IMPLEMENTATION	1.2390149459013115E-7	DOCUMENTATION	1.2343795252208997E-7	TEST
// bad type	WITHOUT_CLASSIFICATION	0.9999980509934512	WITHOUT_CLASSIFICATION	8.311564111675721E-7	DESIGN	6.86720438677063E-7	IMPLEMENTATION	2.886650831645742E-7	DEFECT	9.006344501953621E-8	DOCUMENTATION	5.2401170694994744E-8	TEST
// bad type	WITHOUT_CLASSIFICATION	0.9999980509934512	WITHOUT_CLASSIFICATION	8.311564111675721E-7	DESIGN	6.86720438677063E-7	IMPLEMENTATION	2.886650831645742E-7	DEFECT	9.006344501953621E-8	DOCUMENTATION	5.2401170694994744E-8	TEST
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999998813755977	WITHOUT_CLASSIFICATION	4.719861765202267E-8	DESIGN	2.8213442840811647E-8	DEFECT	2.710475369294936E-8	IMPLEMENTATION	1.18430553867252E-8	TEST	4.264532759053802E-9	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999107900923738	WITHOUT_CLASSIFICATION	4.673669395195104E-5	DESIGN	3.9814606918234096E-5	IMPLEMENTATION	1.1081411073202786E-6	DOCUMENTATION	9.473817996802296E-7	DEFECT	6.030838487035332E-7	TEST
//Mainly for OSCache	WITHOUT_CLASSIFICATION	0.9996906107764849	WITHOUT_CLASSIFICATION	3.0578538803310173E-4	DESIGN	1.921954410606247E-6	DOCUMENTATION	8.409626177167248E-7	DEFECT	4.960989694603044E-7	IMPLEMENTATION	3.4481948423818034E-7	TEST
//decrement the lock	WITHOUT_CLASSIFICATION	0.9990423834635348	WITHOUT_CLASSIFICATION	5.736585461690519E-4	IMPLEMENTATION	2.871150971877736E-4	DESIGN	4.5518597319934326E-5	DOCUMENTATION	3.936204794918103E-5	DEFECT	1.1962247839105863E-5	TEST
// create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.9999977807506202	WITHOUT_CLASSIFICATION	1.4947023646959201E-6	DESIGN	4.6010539496515956E-7	DEFECT	1.8278974759431338E-7	IMPLEMENTATION	7.009306764649085E-8	TEST	1.1558805022679342E-8	DOCUMENTATION
//recache the updated state	WITHOUT_CLASSIFICATION	0.999992840091299	WITHOUT_CLASSIFICATION	5.737175966050248E-6	DESIGN	1.2240271114059706E-6	IMPLEMENTATION	9.66783266153374E-8	DOCUMENTATION	5.6837553198623875E-8	TEST	4.518974361405843E-8	DEFECT
// noop	WITHOUT_CLASSIFICATION	0.999970354193447	WITHOUT_CLASSIFICATION	1.7129200994054782E-5	DESIGN	5.7883748201250535E-6	DEFECT	5.74123621057933E-6	IMPLEMENTATION	7.224153403685948E-7	DOCUMENTATION	2.645791878084089E-7	TEST
//null clientLock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.9999160584093727	WITHOUT_CLASSIFICATION	7.786744343169173E-5	DESIGN	5.711788601114256E-6	DEFECT	2.611182724554127E-7	IMPLEMENTATION	8.824366326096873E-8	DOCUMENTATION	1.2996658761708288E-8	TEST
// we really could refresh the item if it // is not a lock, but it might be slower //return freshTimestamp < txTimestamp	WITHOUT_CLASSIFICATION	0.8812590085141571	WITHOUT_CLASSIFICATION	0.11812648354517628	DEFECT	6.110796730448278E-4	DESIGN	3.195007580575005E-6	TEST	2.1959062664232427E-7	IMPLEMENTATION	1.366941456308918E-8	DOCUMENTATION
//by requiring <, we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.9849823772230547	WITHOUT_CLASSIFICATION	0.014284496095179015	DEFECT	6.64838056259453E-4	DESIGN	6.321998787477232E-5	IMPLEMENTATION	3.5457362190216874E-6	DOCUMENTATION	1.522901412828951E-6	TEST
// the user provided resulttransformer, not the one used with "select new". Here to avoid mangling // transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.9999999993384306	WITHOUT_CLASSIFICATION	5.996336508528299E-10	DESIGN	2.4890523876109954E-11	TEST	2.0270714329322945E-11	IMPLEMENTATION	1.546723248139589E-11	DEFECT	1.307367448934735E-12	DOCUMENTATION
// disassemble positional parameters	WITHOUT_CLASSIFICATION	0.9999859512450107	WITHOUT_CLASSIFICATION	1.377141121676777E-5	IMPLEMENTATION	1.8836611819529915E-7	DEFECT	6.219331680163736E-8	DESIGN	1.9019708210573453E-8	TEST	7.764629336304897E-9	DOCUMENTATION
// disassemble named parameters	WITHOUT_CLASSIFICATION	0.9999996604550385	WITHOUT_CLASSIFICATION	2.229841719166082E-7	IMPLEMENTATION	6.438673617813499E-8	DESIGN	3.41265649139036E-8	TEST	1.682529683199156E-8	DEFECT	1.2221915465847656E-9	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999703279451182	WITHOUT_CLASSIFICATION	2.2312723194526138E-5	DESIGN	5.350529308893346E-6	IMPLEMENTATION	1.008552714209525E-6	DOCUMENTATION	7.869465713900949E-7	DEFECT	2.1330309264835041E-7	TEST
// noop	WITHOUT_CLASSIFICATION	0.999970354193447	WITHOUT_CLASSIFICATION	1.7129200994054782E-5	DESIGN	5.7883748201250535E-6	DEFECT	5.74123621057933E-6	IMPLEMENTATION	7.224153403685948E-7	DOCUMENTATION	2.645791878084089E-7	TEST
//noop	WITHOUT_CLASSIFICATION	0.9997421941405843	WITHOUT_CLASSIFICATION	1.7383685475088375E-4	DESIGN	6.009261517111683E-5	DEFECT	1.0873010870729053E-5	DOCUMENTATION	9.031185069464862E-6	IMPLEMENTATION	3.972193553653619E-6	TEST
//noop	WITHOUT_CLASSIFICATION	0.9997421941405843	WITHOUT_CLASSIFICATION	1.7383685475088375E-4	DESIGN	6.009261517111683E-5	DEFECT	1.0873010870729053E-5	DOCUMENTATION	9.031185069464862E-6	IMPLEMENTATION	3.972193553653619E-6	TEST
// this is called from SettingsFactory irregardless; trivial to simply disregard	WITHOUT_CLASSIFICATION	0.9999998310752728	WITHOUT_CLASSIFICATION	1.4974015595313528E-7	DESIGN	1.882216190312863E-8	DEFECT	2.647063809587604E-10	TEST	5.987620342386676E-11	IMPLEMENTATION	3.7826857990158065E-11	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999998100295834	WITHOUT_CLASSIFICATION	1.6672365790282339E-7	DESIGN	1.1321738233277467E-8	IMPLEMENTATION	7.219857710106336E-9	DOCUMENTATION	3.0040511971969704E-9	TEST	1.7011115340855223E-9	DEFECT
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999998100295834	WITHOUT_CLASSIFICATION	1.6672365790282339E-7	DESIGN	1.1321738233277467E-8	IMPLEMENTATION	7.219857710106336E-9	DOCUMENTATION	3.0040511971969704E-9	TEST	1.7011115340855223E-9	DEFECT
//throw new UnsupportedOperationException("Can't write to a readonly object");	WITHOUT_CLASSIFICATION	0.999996463877288	WITHOUT_CLASSIFICATION	3.0331019568667736E-6	DESIGN	4.80331917078547E-7	DEFECT	1.7046455645849148E-8	DOCUMENTATION	5.254989608150157E-9	TEST	3.8739274191964725E-10	IMPLEMENTATION
//assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9965684076661323	WITHOUT_CLASSIFICATION	0.0033257985675844317	DESIGN	1.0549380579627732E-4	DEFECT	1.7730530647202394E-7	TEST	1.1734408892566512E-7	DOCUMENTATION	5.311091499876716E-9	IMPLEMENTATION
//persister.setIdentifier(result, id); //before calling interceptor, for consistency with normal load	WITHOUT_CLASSIFICATION	0.9999856800503796	WITHOUT_CLASSIFICATION	1.2798176992626472E-5	DEFECT	7.399702008282783E-7	DESIGN	6.697291569631775E-7	IMPLEMENTATION	8.534080297674772E-8	TEST	2.6732466966929502E-8	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9997883499455006	WITHOUT_CLASSIFICATION	1.8569980339339052E-4	DESIGN	2.2054527573414482E-5	DEFECT	3.3934566257698537E-6	IMPLEMENTATION	4.1730373502311035E-7	DOCUMENTATION	8.496317189967905E-8	TEST
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9997883499455006	WITHOUT_CLASSIFICATION	1.8569980339339052E-4	DESIGN	2.2054527573414482E-5	DEFECT	3.3934566257698537E-6	IMPLEMENTATION	4.1730373502311035E-7	DOCUMENTATION	8.496317189967905E-8	TEST
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999995140319314	WITHOUT_CLASSIFICATION	4.6291212956016274E-7	DESIGN	1.6496384055013034E-8	DEFECT	6.2634383690062624E-9	IMPLEMENTATION	2.2778054174475378E-10	TEST	6.833607076471745E-11	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9998825354910181	WITHOUT_CLASSIFICATION	1.1010436288574409E-4	DESIGN	7.290567553741359E-6	DEFECT	6.494750298996041E-8	IMPLEMENTATION	2.467605619032357E-9	TEST	2.16343368757538E-9	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9998825354910181	WITHOUT_CLASSIFICATION	1.1010436288574409E-4	DESIGN	7.290567553741359E-6	DEFECT	6.494750298996041E-8	IMPLEMENTATION	2.467605619032357E-9	TEST	2.16343368757538E-9	DOCUMENTATION
// classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.9998351460676764	WITHOUT_CLASSIFICATION	1.590385671768309E-4	DESIGN	4.795344446446319E-6	TEST	6.49667016516691E-7	DOCUMENTATION	3.4184473163280276E-7	DEFECT	2.8508952170374925E-8	IMPLEMENTATION
// get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.9999991138518889	WITHOUT_CLASSIFICATION	7.351096762818452E-7	DESIGN	1.299079456379066E-7	DEFECT	1.104793200832524E-8	TEST	8.00584977521567E-9	IMPLEMENTATION	2.0767073640716698E-9	DOCUMENTATION
// get meta's from <class>	WITHOUT_CLASSIFICATION	0.999995830429435	WITHOUT_CLASSIFICATION	4.152482960291364E-6	DESIGN	1.2631362916147974E-8	DEFECT	2.70558258474583E-9	TEST	1.6998823718302375E-9	DOCUMENTATION	5.077676541915937E-11	IMPLEMENTATION
// DB-OBJECTNAME	WITHOUT_CLASSIFICATION	0.9999873519132751	WITHOUT_CLASSIFICATION	6.28996353120248E-6	DESIGN	4.53749889889183E-6	IMPLEMENTATION	7.597429512886288E-7	DOCUMENTATION	6.808793183406782E-7	DEFECT	3.8000202505438423E-7	TEST
// MUTABLE	WITHOUT_CLASSIFICATION	0.9999973288056019	WITHOUT_CLASSIFICATION	2.2593369325765506E-6	DESIGN	2.0433257415448756E-7	DEFECT	8.343680990891296E-8	DOCUMENTATION	6.594851683233926E-8	IMPLEMENTATION	5.813956461138325E-8	TEST
// WHERE	WITHOUT_CLASSIFICATION	0.9999976756740117	WITHOUT_CLASSIFICATION	1.3036830641610537E-6	DESIGN	6.346239900976118E-7	DEFECT	1.552880337787526E-7	IMPLEMENTATION	1.1668734564417779E-7	DOCUMENTATION	1.1404355471899056E-7	TEST
// CHECK	WITHOUT_CLASSIFICATION	0.9999784465747243	WITHOUT_CLASSIFICATION	2.077861331898798E-5	DESIGN	3.500061105057125E-7	DEFECT	2.1031983560396883E-7	DOCUMENTATION	1.462530229212836E-7	TEST	6.823298763361853E-8	IMPLEMENTATION
// POLYMORPHISM	WITHOUT_CLASSIFICATION	0.9999958485111919	WITHOUT_CLASSIFICATION	1.8795875107214522E-6	DESIGN	1.3029461521202818E-6	IMPLEMENTATION	6.274580585327878E-7	DEFECT	2.317998259304234E-7	DOCUMENTATION	1.0969726081805616E-7	TEST
// TODO:	WITHOUT_CLASSIFICATION	0.986625001814599	WITHOUT_CLASSIFICATION	0.0073835888757561845	IMPLEMENTATION	0.004101852882514934	DESIGN	0.0011111880183352788	DEFECT	4.090123728221033E-4	DOCUMENTATION	3.693560359724701E-4	TEST
// ID	WITHOUT_CLASSIFICATION	0.9999919841570104	WITHOUT_CLASSIFICATION	4.895553978611978E-6	DESIGN	1.6618402863900444E-6	IMPLEMENTATION	9.137338746186103E-7	DEFECT	3.306911429009648E-7	DOCUMENTATION	2.140237070034566E-7	TEST
// VERSION / TIMESTAMP	WITHOUT_CLASSIFICATION	0.9999987608680684	WITHOUT_CLASSIFICATION	5.459906331884844E-7	DESIGN	3.0006851100290375E-7	IMPLEMENTATION	2.0814913800029523E-7	DEFECT	1.0399969267360961E-7	DOCUMENTATION	8.092395696735174E-8	TEST
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999247567544072	WITHOUT_CLASSIFICATION	6.0462339695737215E-5	IMPLEMENTATION	8.766296347875363E-6	DESIGN	3.1538336624836415E-6	DEFECT	2.0568523756748327E-6	DOCUMENTATION	8.039235111364066E-7	TEST
// Primary key constraint	WITHOUT_CLASSIFICATION	0.9999999686276653	WITHOUT_CLASSIFICATION	1.2365940192513359E-8	DESIGN	6.027134289664237E-9	DEFECT	5.125331376580575E-9	DOCUMENTATION	4.043781007123197E-9	IMPLEMENTATION	3.810147838132101E-9	TEST
// this is either a <version/> tag with no type attribute, // or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.9999999472555848	WITHOUT_CLASSIFICATION	2.7490556800842307E-8	IMPLEMENTATION	1.2134797565387356E-8	DEFECT	9.847588983009326E-9	TEST	3.0800436213775523E-9	DESIGN	1.9142831725356972E-10	DOCUMENTATION
// for version properties marked as being generated, make sure they are "always" // generated; aka, "insert" is invalid; this is dis-allowed by the DTD, // but just to make sure...	WITHOUT_CLASSIFICATION	0.9999999487958849	WITHOUT_CLASSIFICATION	3.707009187745633E-8	DESIGN	9.253535187334279E-9	DEFECT	4.6954010705295645E-9	TEST	1.0723592380953967E-10	IMPLEMENTATION	7.785111216063278E-11	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999247567544072	WITHOUT_CLASSIFICATION	6.0462339695737215E-5	IMPLEMENTATION	8.766296347875363E-6	DESIGN	3.1538336624836415E-6	DEFECT	2.0568523756748327E-6	DOCUMENTATION	8.039235111364066E-7	TEST
// ( (Column) discrim.getColumnIterator().next() ).setType(type);	WITHOUT_CLASSIFICATION	0.9999974080318796	WITHOUT_CLASSIFICATION	2.1805978003387653E-6	DESIGN	3.9207248047491823E-7	DEFECT	1.145779573734533E-8	IMPLEMENTATION	5.885479238062452E-9	DOCUMENTATION	1.954564486160151E-9	TEST
// go ahead and set the lazy here, since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.9999984790698123	WITHOUT_CLASSIFICATION	1.3776383698441434E-6	IMPLEMENTATION	1.1461379272937391E-7	DESIGN	2.211651561555855E-8	DEFECT	5.984833483496083E-9	DOCUMENTATION	5.766760810699157E-10	TEST
// DYNAMIC UPDATE	WITHOUT_CLASSIFICATION	0.9999836521128372	WITHOUT_CLASSIFICATION	1.0914676438720895E-5	IMPLEMENTATION	4.486366574688131E-6	DESIGN	4.598905675545878E-7	DOCUMENTATION	2.9451931144168343E-7	DEFECT	1.9243427050090195E-7	TEST
// IMPORT	WITHOUT_CLASSIFICATION	0.99999663149483	WITHOUT_CLASSIFICATION	1.7580912136378814E-6	DESIGN	9.344190025526265E-7	DEFECT	4.169781573930707E-7	IMPLEMENTATION	1.7984967774644882E-7	DOCUMENTATION	7.916711868096434E-8	TEST
// BATCH SIZE	WITHOUT_CLASSIFICATION	0.9999702642258067	WITHOUT_CLASSIFICATION	1.3099784197102133E-5	DESIGN	8.399178213961133E-6	DEFECT	6.076569311901954E-6	IMPLEMENTATION	1.7052716786050288E-6	DOCUMENTATION	4.5497079152156833E-7	TEST
// SELECT BEFORE UPDATE	WITHOUT_CLASSIFICATION	0.9999976607019895	WITHOUT_CLASSIFICATION	9.769038969273968E-7	DESIGN	7.529689721597287E-7	IMPLEMENTATION	3.345684046582135E-7	DOCUMENTATION	1.911783442714781E-7	DEFECT	8.367839252901808E-8	TEST
// OPTIMISTIC LOCK MODE	WITHOUT_CLASSIFICATION	0.9999982318518092	WITHOUT_CLASSIFICATION	1.3843446796480672E-6	DESIGN	1.903591324546121E-7	DOCUMENTATION	9.69669566775998E-8	IMPLEMENTATION	6.524991379993877E-8	TEST	3.122750825587087E-8	DEFECT
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999952619861463	WITHOUT_CLASSIFICATION	2.3890231683302176E-6	IMPLEMENTATION	1.3658977250675208E-6	DESIGN	4.376646667870786E-7	DEFECT	3.777553136119262E-7	DOCUMENTATION	1.6767297980524444E-7	TEST
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999937226570863	WITHOUT_CLASSIFICATION	5.861906210774408E-6	DESIGN	1.6225455867681437E-7	DEFECT	1.5649048854461912E-7	DOCUMENTATION	5.3486032161988656E-8	TEST	4.32056235826929E-8	IMPLEMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999918556559405	WITHOUT_CLASSIFICATION	8.11682172275257E-6	DESIGN	2.428853484000097E-8	DEFECT	1.9532394328087215E-9	TEST	1.2372021412890068E-9	DOCUMENTATION	4.3360376020006795E-11	IMPLEMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999991402331229	WITHOUT_CLASSIFICATION	3.740427045728473E-7	IMPLEMENTATION	2.0381215938628953E-7	DEFECT	1.9412916990894614E-7	DESIGN	5.2196810189232434E-8	DOCUMENTATION	3.558603293634581E-8	TEST
// joined subclasses	WITHOUT_CLASSIFICATION	0.9999998576734602	WITHOUT_CLASSIFICATION	1.2240970445803966E-7	DESIGN	6.638594883812662E-9	DOCUMENTATION	5.794633670747556E-9	IMPLEMENTATION	5.3241414048802455E-9	TEST	2.159465403534672E-9	DEFECT
// KEY	WITHOUT_CLASSIFICATION	0.9999916908270141	WITHOUT_CLASSIFICATION	7.35236771179149E-6	DESIGN	3.960112032322104E-7	DEFECT	2.1225470518902713E-7	IMPLEMENTATION	1.8569325656286586E-7	DOCUMENTATION	1.6284610910793235E-7	TEST
// CHECK	WITHOUT_CLASSIFICATION	0.9999784465747243	WITHOUT_CLASSIFICATION	2.077861331898798E-5	DESIGN	3.500061105057125E-7	DEFECT	2.1031983560396883E-7	DOCUMENTATION	1.462530229212836E-7	TEST	6.823298763361853E-8	IMPLEMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999937226570863	WITHOUT_CLASSIFICATION	5.861906210774408E-6	DESIGN	1.6225455867681437E-7	DEFECT	1.5649048854461912E-7	DOCUMENTATION	5.3486032161988656E-8	TEST	4.32056235826929E-8	IMPLEMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999991402331229	WITHOUT_CLASSIFICATION	3.740427045728473E-7	IMPLEMENTATION	2.0381215938628953E-7	DEFECT	1.9412916990894614E-7	DESIGN	5.2196810189232434E-8	DOCUMENTATION	3.558603293634581E-8	TEST
// KEY	WITHOUT_CLASSIFICATION	0.9999916908270141	WITHOUT_CLASSIFICATION	7.35236771179149E-6	DESIGN	3.960112032322104E-7	DEFECT	2.1225470518902713E-7	IMPLEMENTATION	1.8569325656286586E-7	DOCUMENTATION	1.6284610910793235E-7	TEST
// model.getKey().setType( new Type( model.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999997017029506	WITHOUT_CLASSIFICATION	2.198550600037603E-7	DESIGN	4.824458455917169E-8	IMPLEMENTATION	2.6176955649383552E-8	DEFECT	3.3251546450604927E-9	DOCUMENTATION	6.952943777192219E-10	TEST
// TABLENAME	WITHOUT_CLASSIFICATION	0.9999912441326377	WITHOUT_CLASSIFICATION	4.067994294264915E-6	DESIGN	2.690267897197098E-6	IMPLEMENTATION	1.3961931385189053E-6	DEFECT	3.134795060540702E-7	DOCUMENTATION	2.879325262460381E-7	TEST
// join.getKey().setType( new Type( lazz.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999999305254827	WITHOUT_CLASSIFICATION	2.98586348286931E-8	IMPLEMENTATION	2.392688426690562E-8	DESIGN	1.3484520958169883E-8	DEFECT	2.040419362089761E-9	DOCUMENTATION	1.6405783496508457E-10	TEST
// PROPERTIES	WITHOUT_CLASSIFICATION	0.99999514917522	WITHOUT_CLASSIFICATION	2.154747782576821E-6	IMPLEMENTATION	1.7374828801012408E-6	DESIGN	4.1264992060843796E-7	DOCUMENTATION	3.720870231584972E-7	DEFECT	1.7385717361685337E-7	TEST
// COLUMN(S)	WITHOUT_CLASSIFICATION	0.9999976946782083	WITHOUT_CLASSIFICATION	1.755570985017943E-6	DESIGN	2.8323945873184227E-7	IMPLEMENTATION	1.2345830556047396E-7	DEFECT	9.436774086130894E-8	DOCUMENTATION	4.8685301406456504E-8	TEST
// column index	WITHOUT_CLASSIFICATION	0.9999823599516254	WITHOUT_CLASSIFICATION	1.482044097529707E-5	DEFECT	1.685318056672526E-6	DESIGN	8.532326383901682E-7	IMPLEMENTATION	2.0644965489407005E-7	DOCUMENTATION	7.460704927943369E-8	TEST
//column unique-key	WITHOUT_CLASSIFICATION	0.9999495124718841	WITHOUT_CLASSIFICATION	2.2679024378743132E-5	DEFECT	1.6325165902825607E-5	DESIGN	7.3806387072233465E-6	IMPLEMENTATION	3.2945933265745347E-6	DOCUMENTATION	8.081058005113428E-7	TEST
// automatically makes a column with the default name if none is specifed by XML	WITHOUT_CLASSIFICATION	0.9798506429319795	WITHOUT_CLASSIFICATION	0.01974434139849977	DESIGN	3.982106009632888E-4	DEFECT	4.763422504798418E-6	TEST	1.2073524269101347E-6	IMPLEMENTATION	8.342936256783598E-7	DOCUMENTATION
// for an any	WITHOUT_CLASSIFICATION	0.9999981708949128	WITHOUT_CLASSIFICATION	9.02802357125531E-7	DESIGN	5.869711700933979E-7	DEFECT	1.3688740850311946E-7	DOCUMENTATION	1.1833076254411389E-7	TEST	8.41133889002045E-8	IMPLEMENTATION
// insertable simply because that is the user did not specify // anything; just override it	WITHOUT_CLASSIFICATION	0.9999999784976337	WITHOUT_CLASSIFICATION	2.0948342991587517E-8	IMPLEMENTATION	2.2914407677024696E-10	DESIGN	1.2312774437865687E-10	DEFECT	1.0606374797257842E-10	DOCUMENTATION	9.568775505099904E-11	TEST
// the user specifically supplied insert="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.999999725158425	WITHOUT_CLASSIFICATION	2.4167340172354684E-7	DESIGN	2.0702301028942516E-8	TEST	4.2343251975990945E-9	IMPLEMENTATION	4.136558561249034E-9	DEFECT	4.094988607226439E-9	DOCUMENTATION
// properties generated on update can never be updateable...	WITHOUT_CLASSIFICATION	0.9999967427727688	WITHOUT_CLASSIFICATION	2.18274886120132E-6	DESIGN	9.923958338166783E-7	DEFECT	6.600892351929544E-8	IMPLEMENTATION	1.3938986141442082E-8	TEST	2.1346265231927024E-9	DOCUMENTATION
// updateable only because the user did not specify  // anything; just override it	WITHOUT_CLASSIFICATION	0.9999974477642873	WITHOUT_CLASSIFICATION	2.5439459536511456E-6	IMPLEMENTATION	6.424901022614967E-9	DOCUMENTATION	1.1455427301114691E-9	DEFECT	6.050819396066941E-10	TEST	1.142333684146466E-10	DESIGN
// the user specifically supplied update="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.99999975552727	WITHOUT_CLASSIFICATION	1.0908193700667029E-7	DESIGN	1.0075385722585608E-7	IMPLEMENTATION	1.905604385829033E-8	DEFECT	1.0528512549416648E-8	TEST	5.052379454411532E-9	DOCUMENTATION
// ROLENAME	WITHOUT_CLASSIFICATION	0.9999873084694555	WITHOUT_CLASSIFICATION	8.011991275719071E-6	DESIGN	2.8175509992293657E-6	IMPLEMENTATION	1.2659812625983316E-6	DEFECT	3.249516850365749E-7	TEST	2.710553220246204E-7	DOCUMENTATION
// FETCH STRATEGY	WITHOUT_CLASSIFICATION	0.9999790589195202	WITHOUT_CLASSIFICATION	9.687000915015892E-6	IMPLEMENTATION	8.643923489338535E-6	DESIGN	1.1956136442606631E-6	DEFECT	9.405282183373135E-7	DOCUMENTATION	4.740142127833928E-7	TEST
// TABLE	WITHOUT_CLASSIFICATION	0.9999972850161815	WITHOUT_CLASSIFICATION	1.276339755900893E-6	DESIGN	7.349014809256152E-7	DEFECT	4.2349578933771603E-7	IMPLEMENTATION	1.7057618700639568E-7	DOCUMENTATION	1.096706053412766E-7	TEST
//tableName = mappings.getNamingStrategy().propertyToTableName( className, path );	WITHOUT_CLASSIFICATION	0.9999992855211122	WITHOUT_CLASSIFICATION	4.685984819156825E-7	DESIGN	1.4542610849393441E-7	IMPLEMENTATION	5.124106879574074E-8	TEST	3.433453323940974E-8	DEFECT	1.4878695394174648E-8	DOCUMENTATION
// SORT	WITHOUT_CLASSIFICATION	0.9999937208856912	WITHOUT_CLASSIFICATION	3.874358788929621E-6	DESIGN	9.396565685657013E-7	IMPLEMENTATION	8.902760864352143E-7	DEFECT	3.966412942059732E-7	DOCUMENTATION	1.7818157079743618E-7	TEST
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999937226570863	WITHOUT_CLASSIFICATION	5.861906210774408E-6	DESIGN	1.6225455867681437E-7	DEFECT	1.5649048854461912E-7	DOCUMENTATION	5.3486032161988656E-8	TEST	4.32056235826929E-8	IMPLEMENTATION
// unsorted, natural, comparator.class.name	WITHOUT_CLASSIFICATION	0.9999844915196766	WITHOUT_CLASSIFICATION	1.546108763807006E-5	DESIGN	1.8762760748643215E-8	IMPLEMENTATION	1.2370604856863608E-8	DEFECT	1.2091835128778305E-8	TEST	4.167484447387569E-9	DOCUMENTATION
// ORPHAN DELETE (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.9999937578906063	WITHOUT_CLASSIFICATION	3.308485869754716E-6	DESIGN	2.82787120137092E-6	IMPLEMENTATION	5.842090724197723E-8	DOCUMENTATION	3.989428490311006E-8	DEFECT	7.437130324014791E-9	TEST
// set up second pass	WITHOUT_CLASSIFICATION	0.9999945914837095	WITHOUT_CLASSIFICATION	4.9451948929381595E-6	DESIGN	3.7526365567233786E-7	IMPLEMENTATION	5.97590002085741E-8	DOCUMENTATION	1.7532654916157765E-8	TEST	1.0766086729036484E-8	DEFECT
// an "embedded" component (composite ids and unique) // note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.9981485909009508	WITHOUT_CLASSIFICATION	0.001794668285772483	DESIGN	5.195724395798937E-5	TEST	4.64436646890857E-6	IMPLEMENTATION	7.359162195393847E-8	DOCUMENTATION	6.561122787160011E-8	DEFECT
// a nested composite element	WITHOUT_CLASSIFICATION	0.999999491912735	WITHOUT_CLASSIFICATION	3.044302026834536E-7	DESIGN	1.2873240364953032E-7	IMPLEMENTATION	4.3142724492159404E-8	TEST	2.3359852087397417E-8	DEFECT	8.422082147357894E-9	DOCUMENTATION
// for an any // we will have to use reflection	WITHOUT_CLASSIFICATION	0.9999506542789856	WITHOUT_CLASSIFICATION	3.050275150346601E-5	DEFECT	1.795416635994807E-5	DESIGN	6.035399895364472E-7	IMPLEMENTATION	2.449879956702341E-7	DOCUMENTATION	4.027516568973876E-8	TEST
//NOTE SPECIAL CASE: // one-to-one constrained=false cannot be proxied, // so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.9999997708927981	WITHOUT_CLASSIFICATION	1.9308369587819208E-7	DESIGN	3.266632607031531E-8	IMPLEMENTATION	2.326471050092374E-9	DOCUMENTATION	1.0066462136115557E-9	DEFECT	2.406286011483416E-11	TEST
// use old (HB 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.999999791188903	WITHOUT_CLASSIFICATION	1.179002679178209E-7	DESIGN	7.135197874790715E-8	IMPLEMENTATION	1.178703091248499E-8	DEFECT	6.89385518884032E-9	DOCUMENTATION	8.779643117067155E-10	TEST
//lazy = !join;	WITHOUT_CLASSIFICATION	0.999993350128697	WITHOUT_CLASSIFICATION	3.616819294740108E-6	DEFECT	1.3776391420442535E-6	DESIGN	8.171150822221451E-7	IMPLEMENTATION	7.065626614760418E-7	DOCUMENTATION	1.317351226643028E-7	TEST
// GENERATOR	WITHOUT_CLASSIFICATION	0.999992968892402	WITHOUT_CLASSIFICATION	3.3079349125201512E-6	DESIGN	2.0979756934671733E-6	IMPLEMENTATION	8.818448057610714E-7	DEFECT	4.4895367259252754E-7	DOCUMENTATION	2.9439851361898515E-7	TEST
// ID UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999720433935094	WITHOUT_CLASSIFICATION	1.6732752918090323E-5	IMPLEMENTATION	9.630311315237996E-6	DESIGN	9.17716290168894E-7	DEFECT	4.428445908739533E-7	DOCUMENTATION	2.3298137610479844E-7	TEST
// VERSION UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999981005650774	WITHOUT_CLASSIFICATION	9.60973644361025E-7	DESIGN	6.96996099288826E-7	IMPLEMENTATION	9.790954302518669E-8	DEFECT	9.107670982173462E-8	DOCUMENTATION	5.247892607353243E-8	TEST
// not necessarily a *unique* property reference	WITHOUT_CLASSIFICATION	0.9998285047950264	WITHOUT_CLASSIFICATION	1.0314095058079273E-4	IMPLEMENTATION	5.7209677699468375E-5	DEFECT	9.869182338190968E-6	DESIGN	1.1852854114773912E-6	DOCUMENTATION	9.010894368892062E-8	TEST
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.999989622495919	WITHOUT_CLASSIFICATION	7.309641929139296E-6	DESIGN	1.5824880393469966E-6	DEFECT	1.4453413409901595E-6	IMPLEMENTATION	3.244869198880842E-8	TEST	7.584079396915279E-9	DOCUMENTATION
// contained elements:	WITHOUT_CLASSIFICATION	0.999997475572841	WITHOUT_CLASSIFICATION	2.4472262071965353E-6	DESIGN	4.534537201185847E-8	IMPLEMENTATION	1.6832328440333846E-8	DOCUMENTATION	7.583791237939062E-9	DEFECT	7.439460045791746E-9	TEST
// for non-inverse one-to-many, with a not-null fk, add a backref!	WITHOUT_CLASSIFICATION	0.9998555487949942	WITHOUT_CLASSIFICATION	9.0360245948743E-5	DESIGN	2.863816763740261E-5	DEFECT	2.5047403436119604E-5	IMPLEMENTATION	3.31330205873266E-7	DOCUMENTATION	7.405777762134394E-8	TEST
// Bind the where	WITHOUT_CLASSIFICATION	0.9999381143168182	WITHOUT_CLASSIFICATION	2.96239220137898E-5	IMPLEMENTATION	2.4952312208258525E-5	DESIGN	3.1837898784037957E-6	DEFECT	2.715306712106151E-6	DOCUMENTATION	1.4103523693041195E-6	TEST
// Bind the order-by	WITHOUT_CLASSIFICATION	0.999964973919143	WITHOUT_CLASSIFICATION	2.6849361648716328E-5	IMPLEMENTATION	3.7223151946170645E-6	DEFECT	3.6734995245853557E-6	DESIGN	6.582734148822826E-7	DOCUMENTATION	1.226310742483805E-7	TEST
// Bind the filters	WITHOUT_CLASSIFICATION	0.9999638299699753	WITHOUT_CLASSIFICATION	3.0421644383655842E-5	IMPLEMENTATION	4.798117530685473E-6	DESIGN	4.859383993919037E-7	DEFECT	3.019215847480486E-7	TEST	1.624081260397297E-7	DOCUMENTATION
// overriding inherited meta attribute. HBX-621 & HBX-793	WITHOUT_CLASSIFICATION	0.9999850697566972	WITHOUT_CLASSIFICATION	6.979566976728319E-6	DESIGN	4.53121765698743E-6	DEFECT	3.0994425279754564E-6	IMPLEMENTATION	2.969024245690923E-7	TEST	2.3113716627233645E-8	DOCUMENTATION
// first, iterate over all elements capable of defining an extends attribute // collecting all found extends references if they cannot be resolved // against the already processed mappings.	WITHOUT_CLASSIFICATION	0.9999999952380184	WITHOUT_CLASSIFICATION	4.752802734083639E-9	IMPLEMENTATION	8.033453712169793E-12	TEST	9.576262715003643E-13	DESIGN	1.195685893726333E-13	DOCUMENTATION	6.833100717738734E-14	DEFECT
// mappings might contain either the "raw" extends name (in the case of // an entity-name mapping) or a FQN (in the case of a POJO mapping).	WITHOUT_CLASSIFICATION	0.9995893175197695	WITHOUT_CLASSIFICATION	4.0836338119652917E-4	DESIGN	2.0825426515651554E-6	IMPLEMENTATION	1.0948811973288147E-7	TEST	8.197469685497331E-8	DEFECT	4.509356565136014E-8	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9974707930566483	WITHOUT_CLASSIFICATION	0.002528048542323911	DESIGN	6.171357743457793E-7	DEFECT	3.0752836579142693E-7	IMPLEMENTATION	1.6747976016249543E-7	DOCUMENTATION	6.62571275871884E-8	TEST
//SessionFactory name:	WITHOUT_CLASSIFICATION	0.9996100337496486	WITHOUT_CLASSIFICATION	3.774591183792674E-4	DESIGN	7.86935385164361E-6	DEFECT	2.199186699967167E-6	DOCUMENTATION	1.3822548314450773E-6	IMPLEMENTATION	1.0563365889199145E-6	TEST
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.999881787475097	WITHOUT_CLASSIFICATION	6.87662291542514E-5	DESIGN	2.2993393059894526E-5	IMPLEMENTATION	1.3103585081166934E-5	DOCUMENTATION	1.253654891226618E-5	DEFECT	8.127686953501215E-7	TEST
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.999881787475097	WITHOUT_CLASSIFICATION	6.87662291542514E-5	DESIGN	2.2993393059894526E-5	IMPLEMENTATION	1.3103585081166934E-5	DOCUMENTATION	1.253654891226618E-5	DEFECT	8.127686953501215E-7	TEST
//Interrogate JDBC metadata	WITHOUT_CLASSIFICATION	0.9999126715229859	WITHOUT_CLASSIFICATION	4.6555831579724715E-5	IMPLEMENTATION	2.7087594854935685E-5	DESIGN	8.46593123619493E-6	DEFECT	4.316312763243568E-6	DOCUMENTATION	9.028065799029702E-7	TEST
// user supplied JDBC connections	WITHOUT_CLASSIFICATION	0.9999140761845315	WITHOUT_CLASSIFICATION	7.472680391125862E-5	IMPLEMENTATION	1.0998447024269955E-5	DESIGN	8.367499831529439E-8	DEFECT	8.35115726016074E-8	DOCUMENTATION	3.137796195820996E-8	TEST
//use dialect default properties	WITHOUT_CLASSIFICATION	0.9999426186834798	WITHOUT_CLASSIFICATION	5.292185290260997E-5	DESIGN	3.442786950970319E-6	IMPLEMENTATION	4.500738031957468E-7	DOCUMENTATION	4.4472771701890394E-7	DEFECT	1.2187514655350387E-7	TEST
// Transaction settings:	WITHOUT_CLASSIFICATION	0.999988784354283	WITHOUT_CLASSIFICATION	9.213601868613374E-6	DESIGN	9.0713250351291E-7	IMPLEMENTATION	6.616184555717916E-7	DEFECT	3.8604078375965463E-7	DOCUMENTATION	4.7252105582816374E-8	TEST
//SQL Generation settings:	WITHOUT_CLASSIFICATION	0.9999878381365617	WITHOUT_CLASSIFICATION	1.1840349527388962E-5	DESIGN	1.4046674997106626E-7	DOCUMENTATION	9.770962198197985E-8	DEFECT	6.623430458192586E-8	TEST	1.7103234341209335E-8	IMPLEMENTATION
//Query parser settings:	WITHOUT_CLASSIFICATION	0.9999610220564286	WITHOUT_CLASSIFICATION	2.276009366190653E-5	DEFECT	1.5725387681730647E-5	DESIGN	2.0761700805509396E-7	DOCUMENTATION	1.6171288863340097E-7	IMPLEMENTATION	1.2313233114200815E-7	TEST
// Second-level / query cache:	WITHOUT_CLASSIFICATION	0.9997358772399796	WITHOUT_CLASSIFICATION	2.586611410732913E-4	DESIGN	3.465882674183114E-6	DEFECT	1.6751911543013385E-6	IMPLEMENTATION	2.117690917355553E-7	DOCUMENTATION	1.0877602696044303E-7	TEST
// The cache provider is needed when we either have second-level cache enabled // or query cache enabled.  Note that useSecondLevelCache is enabled by default	WITHOUT_CLASSIFICATION	0.9999867345375013	WITHOUT_CLASSIFICATION	1.2761970210781288E-5	DESIGN	4.454962508481149E-7	DEFECT	4.197068414824459E-8	IMPLEMENTATION	1.4494244341507856E-8	TEST	1.5311084446977508E-9	DOCUMENTATION
//SQL Exception converter:	WITHOUT_CLASSIFICATION	0.9998482664137854	WITHOUT_CLASSIFICATION	1.5026360889514208E-4	DESIGN	5.600082846238102E-7	DEFECT	4.63510601098558E-7	DOCUMENTATION	3.8892821614628107E-7	TEST	5.753021767135492E-8	IMPLEMENTATION
//Statistics and logging:	WITHOUT_CLASSIFICATION	0.9999980001031147	WITHOUT_CLASSIFICATION	1.3820355793116843E-6	DESIGN	3.1467175060388816E-7	DEFECT	1.4968369506678853E-7	IMPLEMENTATION	1.133711543361819E-7	DOCUMENTATION	4.0134705942909166E-8	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
//Schema export:	WITHOUT_CLASSIFICATION	0.9997629022100338	WITHOUT_CLASSIFICATION	2.1858502704058544E-4	DESIGN	1.1476502749107014E-5	DEFECT	4.219480147522526E-6	IMPLEMENTATION	1.7602289905657115E-6	DOCUMENTATION	1.0565510384789226E-6	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// legacy behavior, apply the bridge...	WITHOUT_CLASSIFICATION	0.9943064024687778	WITHOUT_CLASSIFICATION	0.0056754417482835825	DESIGN	1.6335414034766838E-5	IMPLEMENTATION	1.0265364058318398E-6	DEFECT	4.980220865529389E-7	DOCUMENTATION	2.958104113962913E-7	TEST
// maybe a concrete SQLpropertyresult type, but Map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.9983846631179774	WITHOUT_CLASSIFICATION	0.0015841561188497228	DESIGN	3.0766019910677656E-5	DEFECT	2.5343296972136273E-7	DOCUMENTATION	1.495485607523363E-7	TEST	1.1761731757747979E-8	IMPLEMENTATION
//if dotted and not load-collection nor return-join //regular property	WITHOUT_CLASSIFICATION	0.9999966239922246	WITHOUT_CLASSIFICATION	3.007586457415507E-6	DEFECT	2.757663559228228E-7	IMPLEMENTATION	6.678066975006231E-8	DESIGN	1.6769483698211205E-8	DOCUMENTATION	9.104808741462327E-9	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999910003939629	WITHOUT_CLASSIFICATION	8.889660143225083E-6	DESIGN	7.818939537723686E-8	DEFECT	1.2544186872967034E-8	TEST	1.0303501700316606E-8	IMPLEMENTATION	8.908809710973445E-9	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999360109377197	WITHOUT_CLASSIFICATION	6.11509962908812E-5	DESIGN	1.8376903581883388E-6	IMPLEMENTATION	8.929113461106267E-7	DEFECT	6.554246450035995E-8	DOCUMENTATION	4.1921820770368206E-8	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// using local since the inheritedMetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.9999817306531967	WITHOUT_CLASSIFICATION	1.4827706934131734E-5	DEFECT	3.3668543734736882E-6	DESIGN	6.37440371012547E-8	IMPLEMENTATION	9.137659883324512E-9	TEST	1.9037984752926514E-9	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// if doc is null, then for whatever reason, the cached file cannot be used...	WITHOUT_CLASSIFICATION	0.9999561757707642	WITHOUT_CLASSIFICATION	4.249177147688569E-5	DESIGN	1.1838452103257819E-6	DEFECT	1.1461740718349429E-7	TEST	2.2712079630731775E-8	DOCUMENTATION	1.1283061713559819E-8	IMPLEMENTATION
// drop them in reverse order in case db needs it done that way...	WITHOUT_CLASSIFICATION	0.9799004140121726	WITHOUT_CLASSIFICATION	0.02006059631224429	DESIGN	2.709080026820182E-5	DEFECT	9.055706266516769E-6	IMPLEMENTATION	1.6645263955096259E-6	DOCUMENTATION	1.1786426528572822E-6	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// This method may be called many times!!	WITHOUT_CLASSIFICATION	0.9996003780280407	WITHOUT_CLASSIFICATION	2.801213210419967E-4	IMPLEMENTATION	7.531704301312133E-5	DESIGN	4.333631600657175E-5	DEFECT	5.196855047513485E-7	TEST	3.27606392916005E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// found	WITHOUT_CLASSIFICATION	0.9999957051343745	WITHOUT_CLASSIFICATION	2.314981222053203E-6	DEFECT	1.0629983722408136E-6	DESIGN	6.960370843707272E-7	IMPLEMENTATION	1.5098306650351532E-7	DOCUMENTATION	6.986588028099836E-8	TEST
// found	WITHOUT_CLASSIFICATION	0.9999957051343745	WITHOUT_CLASSIFICATION	2.314981222053203E-6	DEFECT	1.0629983722408136E-6	DESIGN	6.960370843707272E-7	IMPLEMENTATION	1.5098306650351532E-7	DOCUMENTATION	6.986588028099836E-8	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
//<String, String>	WITHOUT_CLASSIFICATION	0.9999885420593219	WITHOUT_CLASSIFICATION	7.3436781150930525E-6	DESIGN	1.8379422288495712E-6	DEFECT	1.0926907116315605E-6	DOCUMENTATION	6.060754634662116E-7	IMPLEMENTATION	5.775541589568331E-7	TEST
//<String, String>	WITHOUT_CLASSIFICATION	0.9999885420593219	WITHOUT_CLASSIFICATION	7.3436781150930525E-6	DESIGN	1.8379422288495712E-6	DEFECT	1.0926907116315605E-6	DOCUMENTATION	6.060754634662116E-7	IMPLEMENTATION	5.775541589568331E-7	TEST
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9974707930566483	WITHOUT_CLASSIFICATION	0.002528048542323911	DESIGN	6.171357743457793E-7	DEFECT	3.0752836579142693E-7	IMPLEMENTATION	1.6747976016249543E-7	DOCUMENTATION	6.62571275871884E-8	TEST
//Set USE_REFLECTION_OPTIMIZER to false to fix HHH-227	WITHOUT_CLASSIFICATION	0.9999911565187336	WITHOUT_CLASSIFICATION	4.8009773604174165E-6	DESIGN	3.4403989149379816E-6	DEFECT	3.6286748228946334E-7	IMPLEMENTATION	1.7837999523762013E-7	DOCUMENTATION	6.0857513588545E-8	TEST
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9990059030983927	WITHOUT_CLASSIFICATION	9.76571314117763E-4	DESIGN	9.696650835162341E-6	IMPLEMENTATION	3.1484909591688703E-6	TEST	2.973601196836415E-6	DEFECT	1.706844498438E-6	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999951104439488	WITHOUT_CLASSIFICATION	2.6157185269867704E-6	IMPLEMENTATION	2.0229136711147097E-6	DESIGN	1.276907304841188E-7	TEST	1.0294684367414249E-7	DEFECT	2.0286278881364562E-8	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.999992463609089	WITHOUT_CLASSIFICATION	6.835172943918101E-6	DESIGN	4.4835015714046607E-7	DEFECT	1.7479444436979803E-7	DOCUMENTATION	6.397277108738948E-8	IMPLEMENTATION	1.4100594634715046E-8	TEST
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9990059030983927	WITHOUT_CLASSIFICATION	9.76571314117763E-4	DESIGN	9.696650835162341E-6	IMPLEMENTATION	3.1484909591688703E-6	TEST	2.973601196836415E-6	DEFECT	1.706844498438E-6	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999951104439488	WITHOUT_CLASSIFICATION	2.6157185269867704E-6	IMPLEMENTATION	2.0229136711147097E-6	DESIGN	1.276907304841188E-7	TEST	1.0294684367414249E-7	DEFECT	2.0286278881364562E-8	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999723313791509	WITHOUT_CLASSIFICATION	1.7210555627769586E-5	IMPLEMENTATION	6.873873376610419E-6	DESIGN	2.460579279690112E-6	TEST	1.0302395560332958E-6	DOCUMENTATION	9.337300903247711E-8	DEFECT
//maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.9996897581552657	WITHOUT_CLASSIFICATION	3.052067547374138E-4	DESIGN	3.542464074385115E-6	DEFECT	1.321625138424438E-6	TEST	1.709336552479385E-7	DOCUMENTATION	6.712879629877514E-11	IMPLEMENTATION
// the element has been removed from the set	WITHOUT_CLASSIFICATION	0.9999978908868582	WITHOUT_CLASSIFICATION	2.032350911091221E-6	DESIGN	5.0063932093668194E-8	IMPLEMENTATION	2.3516875801507528E-8	DEFECT	1.6971017302809994E-9	TEST	1.4843212176409702E-9	DOCUMENTATION
// the element has changed	WITHOUT_CLASSIFICATION	0.9999972000580262	WITHOUT_CLASSIFICATION	2.1860750783187022E-6	IMPLEMENTATION	5.670115989204892E-7	DESIGN	2.0040460245529405E-8	TEST	1.8952456278286477E-8	DEFECT	7.862380135104402E-9	DOCUMENTATION
//Careful: these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.9970638200513505	WITHOUT_CLASSIFICATION	0.002761445707724729	DESIGN	1.5198119955683005E-4	IMPLEMENTATION	1.5135910457501368E-5	TEST	7.1948260483187865E-6	DEFECT	4.2230486208910096E-7	DOCUMENTATION
//needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.8166378879657149	DESIGN	0.18335998632218278	WITHOUT_CLASSIFICATION	8.235515148157776E-7	DOCUMENTATION	7.193393009227452E-7	TEST	4.2033437867631923E-7	DEFECT	1.6248690791480127E-7	IMPLEMENTATION
// override on some subclasses	WITHOUT_CLASSIFICATION	0.9999998868481578	WITHOUT_CLASSIFICATION	8.703738502873899E-8	DESIGN	1.6726581759085844E-8	IMPLEMENTATION	7.034817117262182E-9	DOCUMENTATION	1.8420033597375481E-9	TEST	5.110550268231799E-10	DEFECT
//override on some subclasses	WITHOUT_CLASSIFICATION	0.999998330677873	WITHOUT_CLASSIFICATION	1.4246766445846019E-6	DESIGN	1.2023846801634135E-7	IMPLEMENTATION	9.94232280688268E-8	DOCUMENTATION	2.1700482155840017E-8	TEST	3.2833040988495126E-9	DEFECT
//do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.9999493607475194	WITHOUT_CLASSIFICATION	4.9137025666304017E-5	DESIGN	4.847425084931731E-7	TEST	4.499994708020194E-7	IMPLEMENTATION	3.1364826851340983E-7	DOCUMENTATION	2.538365665131354E-7	DEFECT
// short-circuit(s) // no new elements, the old list contains only Orphans // no old elements, so no Orphans neither	WITHOUT_CLASSIFICATION	0.9999999811941152	WITHOUT_CLASSIFICATION	1.862465930480163E-8	DESIGN	7.634952024178892E-11	TEST	6.559889766738619E-11	IMPLEMENTATION	2.8209111447124023E-11	DOCUMENTATION	1.1067974886251036E-11	DEFECT
// create the collection holding the Orphans	WITHOUT_CLASSIFICATION	0.9999985049116719	WITHOUT_CLASSIFICATION	5.119480151676024E-7	DESIGN	4.873794729063115E-7	DEFECT	4.4501006352118515E-7	IMPLEMENTATION	3.1057899652571266E-8	TEST	1.9692876851634765E-8	DOCUMENTATION
// collect EntityIdentifier(s) of the *current* elements - add them into a HashSet for fast access	WITHOUT_CLASSIFICATION	0.9999371986961036	WITHOUT_CLASSIFICATION	6.278994027533701E-5	DESIGN	5.2981016859573525E-9	TEST	2.7256162964217015E-9	DEFECT	2.523130682830022E-9	DOCUMENTATION	8.167724485717857E-10	IMPLEMENTATION
// iterate over the *old* list	WITHOUT_CLASSIFICATION	0.9999999720233622	WITHOUT_CLASSIFICATION	2.298605767017403E-8	DESIGN	2.584468511362546E-9	TEST	2.1632188227528525E-9	IMPLEMENTATION	1.4465034129463578E-10	DOCUMENTATION	9.824241287712572E-11	DEFECT
/*(array==null) ? tempList.size() :*/	WITHOUT_CLASSIFICATION	0.9998326524544997	WITHOUT_CLASSIFICATION	1.4569289324893733E-4	IMPLEMENTATION	9.147155077661288E-6	DESIGN	7.683755303053348E-6	DEFECT	4.4349311056660705E-6	TEST	3.8881076504260795E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.999992463609089	WITHOUT_CLASSIFICATION	6.835172943918101E-6	DESIGN	4.4835015714046607E-7	DEFECT	1.7479444436979803E-7	DOCUMENTATION	6.397277108738948E-8	IMPLEMENTATION	1.4100594634715046E-8	TEST
/*(array==null) ? tempList.get(i) :*/	WITHOUT_CLASSIFICATION	0.9998846020036221	WITHOUT_CLASSIFICATION	5.074664897598015E-5	IMPLEMENTATION	5.061648380160093E-5	DESIGN	8.861086873479426E-6	DEFECT	4.789443772058098E-6	TEST	3.8433295499253777E-7	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999959775101577	WITHOUT_CLASSIFICATION	1.4496399771111959E-6	TEST	1.0970166785010454E-6	DESIGN	9.624968975455313E-7	DEFECT	4.616943316200286E-7	DOCUMENTATION	5.164195774072755E-8	IMPLEMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999959775101577	WITHOUT_CLASSIFICATION	1.4496399771111959E-6	TEST	1.0970166785010454E-6	DESIGN	9.624968975455313E-7	DEFECT	4.616943316200286E-7	DOCUMENTATION	5.164195774072755E-8	IMPLEMENTATION
// amazingly, these two will work because AbstractCollection // uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.9999238879984957	WITHOUT_CLASSIFICATION	5.887037285826018E-5	DESIGN	1.3028747376619222E-5	IMPLEMENTATION	3.790700503926076E-6	DEFECT	2.8544444274294315E-7	DOCUMENTATION	1.3673632271393206E-7	TEST
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999723313791509	WITHOUT_CLASSIFICATION	1.7210555627769586E-5	IMPLEMENTATION	6.873873376610419E-6	DESIGN	2.460579279690112E-6	TEST	1.0302395560332958E-6	DOCUMENTATION	9.337300903247711E-8	DEFECT
// finally, what it's all about...	WITHOUT_CLASSIFICATION	0.9996564429916494	WITHOUT_CLASSIFICATION	1.5181459569167698E-4	DEFECT	1.2670574016767134E-4	IMPLEMENTATION	6.220765229784236E-5	DESIGN	1.6422739940998836E-6	TEST	1.1867461993890219E-6	DOCUMENTATION
// note that if we load this collection from a cartesian product // the multiplicity would be broken ... so use an idbag instead	WITHOUT_CLASSIFICATION	0.99872711169157	DESIGN	0.0012713231056887646	WITHOUT_CLASSIFICATION	8.759433683751466E-7	DEFECT	6.840855672909159E-7	TEST	4.399383535466771E-9	DOCUMENTATION	7.744219340851757E-10	IMPLEMENTATION
// Anyway, here we implement <set> semantics for a // <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.9213075327190704	WITHOUT_CLASSIFICATION	0.07028863122609887	DESIGN	0.00445106211638594	IMPLEMENTATION	0.003816600790779821	DEFECT	8.364976973769174E-5	TEST	5.252337792715964E-5	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999960838828847	WITHOUT_CLASSIFICATION	3.251927346208857E-6	DEFECT	5.150439376112979E-7	DESIGN	1.0390443193284123E-7	TEST	2.8383104689365014E-8	DOCUMENTATION	1.68582949298855E-8	IMPLEMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.5803633201386544	DESIGN	0.41920126004077024	WITHOUT_CLASSIFICATION	2.4243798799760443E-4	TEST	1.3772908640247584E-4	DEFECT	4.846296300154774E-5	IMPLEMENTATION	6.789783173560374E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999723313791509	WITHOUT_CLASSIFICATION	1.7210555627769586E-5	IMPLEMENTATION	6.873873376610419E-6	DESIGN	2.460579279690112E-6	TEST	1.0302395560332958E-6	DOCUMENTATION	9.337300903247711E-8	DEFECT
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999960838828847	WITHOUT_CLASSIFICATION	3.251927346208857E-6	DEFECT	5.150439376112979E-7	DESIGN	1.0390443193284123E-7	TEST	2.8383104689365014E-8	DOCUMENTATION	1.68582949298855E-8	IMPLEMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.5803633201386544	DESIGN	0.41920126004077024	WITHOUT_CLASSIFICATION	2.4243798799760443E-4	TEST	1.3772908640247584E-4	DEFECT	4.846296300154774E-5	IMPLEMENTATION	6.789783173560374E-6	DOCUMENTATION
/*public boolean equals(Object other) {	WITHOUT_CLASSIFICATION	0.7605925588248356	WITHOUT_CLASSIFICATION	0.23849134631200905	DESIGN	7.462014891722823E-4	IMPLEMENTATION	9.83839767573344E-5	DOCUMENTATION	4.5542916024430766E-5	TEST	2.5966481201322815E-5	DEFECT
// List OPERATIONS:	WITHOUT_CLASSIFICATION	0.9999978953347113	WITHOUT_CLASSIFICATION	1.6946123224510248E-6	IMPLEMENTATION	1.7938851186152207E-7	TEST	1.1669214464006953E-7	DEFECT	7.937032476192044E-8	DESIGN	3.460198490545056E-8	DOCUMENTATION
//pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.9999982071781053	WITHOUT_CLASSIFICATION	1.369984010868592E-6	DEFECT	3.2484321634985876E-7	DESIGN	6.446018170433101E-8	IMPLEMENTATION	2.643293776523587E-8	DOCUMENTATION	7.101548035831497E-9	TEST
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999723313791509	WITHOUT_CLASSIFICATION	1.7210555627769586E-5	IMPLEMENTATION	6.873873376610419E-6	DESIGN	2.460579279690112E-6	TEST	1.0302395560332958E-6	DOCUMENTATION	9.337300903247711E-8	DEFECT
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999723313791509	WITHOUT_CLASSIFICATION	1.7210555627769586E-5	IMPLEMENTATION	6.873873376610419E-6	DESIGN	2.460579279690112E-6	TEST	1.0302395560332958E-6	DOCUMENTATION	9.337300903247711E-8	DEFECT
// from Map	WITHOUT_CLASSIFICATION	0.9999976326015858	WITHOUT_CLASSIFICATION	1.14508743547629E-6	DESIGN	7.50738328534485E-7	DEFECT	3.7818478949640553E-7	IMPLEMENTATION	4.986141132283556E-8	TEST	4.352644927376412E-8	DOCUMENTATION
// from SortedMap	WITHOUT_CLASSIFICATION	0.9999879144470137	WITHOUT_CLASSIFICATION	6.386430322472577E-6	DESIGN	4.3935577661031E-6	DEFECT	1.00558813131297E-6	IMPLEMENTATION	1.792705467978493E-7	TEST	1.2070621949741525E-7	DOCUMENTATION
//inject the data	WITHOUT_CLASSIFICATION	0.9999071503526409	WITHOUT_CLASSIFICATION	4.918309230242074E-5	IMPLEMENTATION	3.5243252865458906E-5	DESIGN	4.269921605925039E-6	DEFECT	3.363898859277427E-6	DOCUMENTATION	7.89481726090003E-7	TEST
// cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999873764308812	WITHOUT_CLASSIFICATION	1.1951225386585419E-5	DESIGN	4.2333861877028704E-7	DEFECT	2.0797780501066673E-7	IMPLEMENTATION	2.299269619057219E-8	DOCUMENTATION	1.803461222931799E-8	TEST
//default pool size 20	WITHOUT_CLASSIFICATION	0.9999856343080467	WITHOUT_CLASSIFICATION	5.832517877330375E-6	DESIGN	4.6987805475594505E-6	IMPLEMENTATION	3.017660969298752E-6	DEFECT	7.046738187369804E-7	DOCUMENTATION	1.1205874046188388E-7	TEST
// trying via forName() first to be as close to DriverManager's semantics	WITHOUT_CLASSIFICATION	0.9999999496921094	WITHOUT_CLASSIFICATION	4.2124487889928536E-8	DESIGN	6.758453760732456E-9	DEFECT	6.448821295896396E-10	TEST	4.754644582330165E-10	DOCUMENTATION	3.046023170287264E-10	IMPLEMENTATION
// if debug level is enabled, then log the password, otherwise mask it	WITHOUT_CLASSIFICATION	0.9999921962912927	WITHOUT_CLASSIFICATION	7.104382874100813E-6	IMPLEMENTATION	2.864060508203346E-7	DESIGN	2.663879605876456E-7	DEFECT	1.4482389314526833E-7	TEST	1.7079287967061235E-9	DOCUMENTATION
// register a cleanup synch	WITHOUT_CLASSIFICATION	0.9999041681436326	WITHOUT_CLASSIFICATION	9.572943190745777E-5	DESIGN	3.269377371043067E-8	DEFECT	2.363142417552925E-8	TEST	2.3100042866066104E-8	DOCUMENTATION	2.2999219219864676E-8	IMPLEMENTATION
// wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.9998698669640972	WITHOUT_CLASSIFICATION	1.2397846177775905E-4	DESIGN	4.196162203780176E-6	IMPLEMENTATION	1.5244054883559834E-6	DEFECT	4.1135303834924465E-7	DOCUMENTATION	2.2653394623384976E-8	TEST
// then bind it	WITHOUT_CLASSIFICATION	0.9999957976919097	WITHOUT_CLASSIFICATION	1.7325455699045342E-6	IMPLEMENTATION	9.876157226123927E-7	DESIGN	7.372250923634432E-7	DEFECT	4.671267608520162E-7	TEST	2.7779494442269945E-7	DOCUMENTATION
// try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.9999954763077765	WITHOUT_CLASSIFICATION	3.0479582776542305E-6	DEFECT	9.993179432512915E-7	DESIGN	3.3028831099468443E-7	IMPLEMENTATION	1.3592584778482248E-7	DOCUMENTATION	1.0201843739834485E-8	TEST
// allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.9999429031991239	WITHOUT_CLASSIFICATION	5.244230711356123E-5	DESIGN	4.457183067973562E-6	IMPLEMENTATION	1.5744257044232854E-7	DEFECT	3.4891553324963766E-8	DOCUMENTATION	4.976570851311276E-9	TEST
// limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.9999968540236641	WITHOUT_CLASSIFICATION	3.112594262093738E-6	DESIGN	1.684814571595874E-8	IMPLEMENTATION	1.4713339231167002E-8	TEST	1.363648244775721E-9	DOCUMENTATION	4.569406062323714E-10	DEFECT
// allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.9723371850450243	WITHOUT_CLASSIFICATION	0.027507828936079084	DESIGN	1.5320514562561948E-4	IMPLEMENTATION	8.984852871165902E-7	DEFECT	4.678501328226668E-7	TEST	4.1453785096298396E-7	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999992385713953	WITHOUT_CLASSIFICATION	4.0321475118349497E-7	DEFECT	2.149326985399295E-7	DESIGN	8.898587619778305E-8	IMPLEMENTATION	4.2879679645410615E-8	DOCUMENTATION	1.1415598999273066E-8	TEST
// We could register the session against the transaction even though it is // not started, but we'd have no guarentee of ever getting the map // entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.9732712542855767	WITHOUT_CLASSIFICATION	0.0267275957113831	DESIGN	5.591048839498653E-7	IMPLEMENTATION	4.1506846767840967E-7	TEST	1.635385627342565E-7	DEFECT	1.2291125983526837E-8	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9994302783282597	WITHOUT_CLASSIFICATION	5.605464673183444E-4	DESIGN	5.430510646605456E-6	IMPLEMENTATION	2.3301040133749133E-6	DEFECT	8.909956536425815E-7	DOCUMENTATION	5.23594108188342E-7	TEST
//private String propertyName;	WITHOUT_CLASSIFICATION	0.9974902054343968	WITHOUT_CLASSIFICATION	0.0023791235401348226	DESIGN	8.227605908395151E-5	DEFECT	3.823861244741909E-5	DOCUMENTATION	8.644532055937916E-6	TEST	1.5118218811344514E-6	IMPLEMENTATION
/*public PropertyProjection project() {	WITHOUT_CLASSIFICATION	0.9800611262643804	WITHOUT_CLASSIFICATION	0.01773506771131532	DESIGN	0.001239379093417835	DEFECT	6.687043052746494E-4	IMPLEMENTATION	2.8870994254164657E-4	DOCUMENTATION	7.012683070245417E-6	TEST
//String[] fk = StringHelper.qualify( "collection_", cp.getKeyColumnNames() );	WITHOUT_CLASSIFICATION	0.9999944159587412	WITHOUT_CLASSIFICATION	2.846853100398387E-6	DESIGN	1.8105424559301193E-6	DEFECT	8.073910579377323E-7	IMPLEMENTATION	7.355669060874408E-8	TEST	4.5697953937305025E-8	DOCUMENTATION
//" collection_ where " +	WITHOUT_CLASSIFICATION	0.9999416013700525	WITHOUT_CLASSIFICATION	4.612855859476476E-5	DESIGN	8.213652414347678E-6	IMPLEMENTATION	2.5526799120069043E-6	DEFECT	7.824355138108988E-7	TEST	7.21303512689177E-7	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9969301212559041	WITHOUT_CLASSIFICATION	0.001684299902385051	DESIGN	0.001286076428326682	IMPLEMENTATION	5.768639622051629E-5	DEFECT	2.1144522789607228E-5	TEST	2.0671494374016807E-5	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9969301212559041	WITHOUT_CLASSIFICATION	0.001684299902385051	DESIGN	0.001286076428326682	IMPLEMENTATION	5.768639622051629E-5	DEFECT	2.1144522789607228E-5	TEST	2.0671494374016807E-5	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9994302783282597	WITHOUT_CLASSIFICATION	5.605464673183444E-4	DESIGN	5.430510646605456E-6	IMPLEMENTATION	2.3301040133749133E-6	DEFECT	8.909956536425815E-7	DOCUMENTATION	5.23594108188342E-7	TEST
//the following two lines were added to ensure that this.params is not null, which //can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.9998739686303763	WITHOUT_CLASSIFICATION	5.036876697091552E-5	TEST	4.413313471351709E-5	IMPLEMENTATION	2.169552123565067E-5	DEFECT	9.700352787497944E-6	DESIGN	1.3359391616527395E-7	DOCUMENTATION
//with two-deep subqueries, the same alias would get generated for //both using the old method (criteriaQuery.generateSQLAlias()), so //that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.9998165784068059	WITHOUT_CLASSIFICATION	1.8285208948438995E-4	DESIGN	4.716719038192417E-7	TEST	9.0092564093167E-8	DEFECT	6.915728135180672E-9	IMPLEMENTATION	8.235135138928833E-10	DOCUMENTATION
//implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.9238206032605885	WITHOUT_CLASSIFICATION	0.07173011143692788	DESIGN	0.003916156763820188	IMPLEMENTATION	2.7229601833669544E-4	DEFECT	2.3833143540136095E-4	TEST	2.2501084925310247E-5	DOCUMENTATION
//pull off the last ", "	WITHOUT_CLASSIFICATION	0.9999967587489214	WITHOUT_CLASSIFICATION	1.9285735949122932E-6	DESIGN	5.587109886797639E-7	IMPLEMENTATION	3.755833929889592E-7	TEST	2.0310324786066397E-7	DEFECT	1.75279854040628E-7	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999191161232236	WITHOUT_CLASSIFICATION	6.705160307536035E-5	DESIGN	1.0244862304574877E-5	DEFECT	1.281296954827546E-6	DOCUMENTATION	1.2358576239834836E-6	IMPLEMENTATION	1.0702568175825381E-6	TEST
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.9999967711865516	WITHOUT_CLASSIFICATION	2.058546193516955E-6	DESIGN	6.706776232094686E-7	IMPLEMENTATION	2.887481230749458E-7	DOCUMENTATION	1.0881090280379715E-7	TEST	1.0203060584814583E-7	DEFECT
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource)	WITHOUT_CLASSIFICATION	0.998163177879038	WITHOUT_CLASSIFICATION	0.0017863772874818903	DESIGN	4.930262914271678E-5	DEFECT	5.638443051133369E-7	DOCUMENTATION	5.561452805700504E-7	IMPLEMENTATION	2.2214751559862743E-8	TEST
// NOT_SUPPORTED_SHOULD_USE_JDBC3_PreparedStatement.getGeneratedKeys_method	WITHOUT_CLASSIFICATION	0.9999567515253412	WITHOUT_CLASSIFICATION	2.4151813482495314E-5	IMPLEMENTATION	1.74893309868874E-5	DESIGN	7.466823587271588E-7	TEST	7.29690198764308E-7	DEFECT	1.3095763188547926E-7	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999999999347763	WITHOUT_CLASSIFICATION	2.4172135037516738E-11	IMPLEMENTATION	1.8753098508881046E-11	DOCUMENTATION	1.8217087160549163E-11	DESIGN	3.81687109484225E-12	DEFECT	2.646046612868506E-13	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999465114362279	WITHOUT_CLASSIFICATION	2.9481612820847996E-5	IMPLEMENTATION	1.9182270809399208E-5	DESIGN	2.423899933074126E-6	DOCUMENTATION	2.3341255952227405E-6	DEFECT	6.665461364221025E-8	TEST
// Oracle did add support for ANSI CASE statements in 9i	WITHOUT_CLASSIFICATION	0.9999994127672552	WITHOUT_CLASSIFICATION	3.955801748089565E-7	DESIGN	1.5086908882141666E-7	IMPLEMENTATION	2.2186458827087953E-8	DOCUMENTATION	1.1430186374831657E-8	TEST	7.166835764796042E-9	DEFECT
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999986753419501	WITHOUT_CLASSIFICATION	9.348032083605876E-7	DEFECT	2.186659508805488E-7	DESIGN	1.3955100781203786E-7	IMPLEMENTATION	2.2785591349177363E-8	DOCUMENTATION	8.852291571805331E-9	TEST
// Informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.9999361695510993	WITHOUT_CLASSIFICATION	4.534519993692854E-5	DEFECT	1.629429138234739E-5	DESIGN	1.5070131801442873E-6	TEST	4.921431304631467E-7	DOCUMENTATION	1.9180127080362424E-7	IMPLEMENTATION
// or BYTE // or TEXT? // or MONEY	WITHOUT_CLASSIFICATION	0.9999246679885949	WITHOUT_CLASSIFICATION	5.043721426656653E-5	DESIGN	1.745134695273475E-5	IMPLEMENTATION	3.503230326922374E-6	DEFECT	2.5445800741255194E-6	TEST	1.3956397847586787E-6	DOCUMENTATION
// strip table-owner because Informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.9999999655763794	WITHOUT_CLASSIFICATION	3.1989314630360527E-8	DESIGN	1.7194556807438339E-9	IMPLEMENTATION	5.650715823375422E-10	DEFECT	7.571496386934518E-11	DOCUMENTATION	7.406377980187485E-11	TEST
// build the map of standard ANSI SQL aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999533077315	WITHOUT_CLASSIFICATION	3.387404335932582E-7	IMPLEMENTATION	7.775735706271768E-8	DEFECT	4.688657488965391E-8	DESIGN	2.9823631831844048E-9	DOCUMENTATION	5.559563116296531E-10	TEST
//pre H3.2 behavior: super.getReturnType(ct, m);	WITHOUT_CLASSIFICATION	0.9982499470374295	WITHOUT_CLASSIFICATION	0.001625728489339215	DESIGN	1.2382945535677263E-4	DEFECT	2.2166724102155743E-7	DOCUMENTATION	1.899193377033264E-7	IMPLEMENTATION	8.343129578457865E-8	TEST
// finally use the sqltype if == on Hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.9999748603205515	WITHOUT_CLASSIFICATION	2.510633959706994E-5	DESIGN	3.127406877640583E-8	DEFECT	1.4020678741984606E-9	IMPLEMENTATION	3.5626947177526346E-10	DOCUMENTATION	3.0744532100376526E-10	TEST
//because numeric can be anything	WITHOUT_CLASSIFICATION	0.9999831341612246	WITHOUT_CLASSIFICATION	6.456747193372088E-6	IMPLEMENTATION	4.847381328985202E-6	DOCUMENTATION	3.6528026069712502E-6	DESIGN	1.774767668867933E-6	DEFECT	1.3413997714252934E-7	TEST
// constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999990596402442	WITHOUT_CLASSIFICATION	7.648248845291872E-7	DESIGN	1.3140077861088822E-7	IMPLEMENTATION	2.6640371280937768E-8	DEFECT	1.3700302683880175E-8	TEST	3.793418705970499E-9	DOCUMENTATION
// standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.9998914641763049	WITHOUT_CLASSIFICATION	9.807642082707517E-5	DESIGN	7.0219183469027575E-6	IMPLEMENTATION	3.320895463821519E-6	DEFECT	9.5050244416094E-8	DOCUMENTATION	2.1538812832235296E-8	TEST
//map second/minute/hour/day/month/year to ANSI extract(), override on subclasses	WITHOUT_CLASSIFICATION	0.9995523805674954	WITHOUT_CLASSIFICATION	3.0375769789806365E-4	DESIGN	1.4327607978908074E-4	IMPLEMENTATION	4.973866066451866E-7	DOCUMENTATION	7.845076769740903E-8	TEST	9.8174430403739E-9	DEFECT
// register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.9947027549555881	WITHOUT_CLASSIFICATION	0.00529352289375218	DESIGN	3.425205624060306E-6	IMPLEMENTATION	2.4855205328693736E-7	DOCUMENTATION	2.6636985966332562E-8	DEFECT	2.1755996343764485E-8	TEST
// database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999771772659197	WITHOUT_CLASSIFICATION	1.964533224024023E-4	IMPLEMENTATION	2.0653970797030302E-5	DEFECT	1.002262755624645E-5	DESIGN	5.839345898348123E-7	DOCUMENTATION	5.134854573965225E-7	TEST
// hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.995414344625125	WITHOUT_CLASSIFICATION	0.003229728303751972	DESIGN	0.001333461874534959	IMPLEMENTATION	1.2442873640951822E-5	TEST	5.910099759179195E-6	DEFECT	4.112223187896282E-6	DOCUMENTATION
// keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999956712457344	WITHOUT_CLASSIFICATION	3.418230616715428E-5	IMPLEMENTATION	4.217737073590891E-6	DESIGN	4.177519603248036E-6	DEFECT	3.6957919984639504E-7	DOCUMENTATION	3.404006123394619E-7	TEST
// native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999894097646039	WITHOUT_CLASSIFICATION	6.414878378930469E-6	DESIGN	3.2572116008609633E-6	IMPLEMENTATION	7.051950816811838E-7	DEFECT	1.595037635101566E-7	DOCUMENTATION	5.344657125241404E-8	TEST
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998404222846723	WITHOUT_CLASSIFICATION	1.3892912635770166E-4	IMPLEMENTATION	1.8262040559658695E-5	DESIGN	1.286222006823359E-6	DEFECT	6.069626383748585E-7	TEST	4.933637651764356E-7	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99982525174025	WITHOUT_CLASSIFICATION	8.576124887736279E-5	IMPLEMENTATION	8.486232290555635E-5	DESIGN	2.152552769738428E-6	DEFECT	1.0388110204957947E-6	DOCUMENTATION	9.333241767992587E-7	TEST
// GUID support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998830257551266	WITHOUT_CLASSIFICATION	8.609689411599005E-5	IMPLEMENTATION	2.8171656146456807E-5	DESIGN	1.5687331335591118E-6	DEFECT	6.882512231881149E-7	DOCUMENTATION	4.487102541180606E-7	TEST
// limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999899263333819	WITHOUT_CLASSIFICATION	7.080836983850599E-6	DESIGN	2.456519802372495E-6	IMPLEMENTATION	4.357614274150791E-7	DEFECT	6.295466633310656E-8	TEST	3.75937382428769E-8	DOCUMENTATION
// by default we report no support	WITHOUT_CLASSIFICATION	0.9999667681026496	WITHOUT_CLASSIFICATION	2.1623275533987874E-5	DESIGN	7.533350084842273E-6	IMPLEMENTATION	3.714315174613873E-6	DEFECT	3.1269284827018433E-7	DOCUMENTATION	4.826370850597648E-8	TEST
// by default we report no support for NOWAIT lock semantics	WITHOUT_CLASSIFICATION	0.9967784226758016	WITHOUT_CLASSIFICATION	0.0029535606738942005	DESIGN	2.2629628450802065E-4	DEFECT	3.440323132109148E-5	IMPLEMENTATION	6.896437786997991E-6	DOCUMENTATION	4.2069668784433435E-7	TEST
// table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999937697996683	WITHOUT_CLASSIFICATION	5.2641855084962706E-6	IMPLEMENTATION	8.238967087976285E-7	DESIGN	7.082711747070969E-8	TEST	5.78098348101882E-8	DEFECT	1.3481162190506808E-8	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999847332617469	WITHOUT_CLASSIFICATION	1.4137220569679067E-5	DESIGN	9.646618706068138E-7	IMPLEMENTATION	1.4954592565863757E-7	TEST	8.220377329236167E-9	DEFECT	7.089509926372982E-9	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999844463397537	WITHOUT_CLASSIFICATION	1.366217730165305E-5	IMPLEMENTATION	1.7732920758184165E-6	DESIGN	6.067244830010946E-8	DEFECT	3.155001722731756E-8	DOCUMENTATION	2.5968403365109152E-8	TEST
// current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999899494818695	WITHOUT_CLASSIFICATION	9.331470385256693E-6	IMPLEMENTATION	2.785635817386057E-7	TEST	1.7831104212403597E-7	DEFECT	1.7214008802721144E-7	DOCUMENTATION	9.003303340785225E-8	DESIGN
// SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998911932387511	WITHOUT_CLASSIFICATION	9.413533808737528E-5	DESIGN	7.327154213533786E-6	DEFECT	6.359543154657146E-6	IMPLEMENTATION	6.959185117890083E-7	DOCUMENTATION	2.888072815898323E-7	TEST
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999797576777649	WITHOUT_CLASSIFICATION	1.6028235101156584E-5	DESIGN	3.934771670069389E-6	IMPLEMENTATION	1.2028194476625216E-7	DEFECT	8.767786335715511E-8	TEST	7.135565577672392E-8	DOCUMENTATION
// identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999142624310527	WITHOUT_CLASSIFICATION	7.494567235538085E-5	IMPLEMENTATION	8.561544080079145E-6	DESIGN	1.4777354116958313E-6	DEFECT	4.377834358561605E-7	TEST	3.1483366416138066E-7	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998835677479888	WITHOUT_CLASSIFICATION	1.0076861897015758E-4	IMPLEMENTATION	1.300792844051038E-5	DESIGN	1.3373875956244103E-6	DEFECT	6.985735838836119E-7	DOCUMENTATION	6.197434211923526E-7	TEST
// grrr... for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.9999923991309553	WITHOUT_CLASSIFICATION	5.9519847988921434E-6	DESIGN	1.122852687836277E-6	IMPLEMENTATION	2.914476160902164E-7	DEFECT	1.2215016517557639E-7	TEST	1.1243377676752479E-7	DOCUMENTATION
// Informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999958498239001	WITHOUT_CLASSIFICATION	3.0070050037318708E-5	IMPLEMENTATION	7.02096246620584E-6	DEFECT	3.455561898620455E-6	DESIGN	9.146459991226593E-7	DOCUMENTATION	4.054059774554621E-8	TEST
// return false here, as most databases do not properly support this construct...	WITHOUT_CLASSIFICATION	0.9918453342226464	WITHOUT_CLASSIFICATION	0.004780372445716092	IMPLEMENTATION	0.0032865194071195545	DESIGN	7.837377303574119E-5	DEFECT	8.983235262475366E-6	TEST	4.169162196902365E-7	DOCUMENTATION
// Mckoi has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9995969878141235	WITHOUT_CLASSIFICATION	3.369289548663527E-4	DESIGN	4.46434838829171E-5	IMPLEMENTATION	1.8982846335105526E-5	DEFECT	2.3337893203113373E-6	DOCUMENTATION	1.231114718098694E-7	TEST
// Oracle8 and previous define only a "DATE" type which //      is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.9999999740476078	WITHOUT_CLASSIFICATION	1.7624650334511365E-8	DESIGN	4.948807361199617E-9	IMPLEMENTATION	2.9406396803224426E-9	DOCUMENTATION	3.160835276489889E-10	DEFECT	1.222113768192716E-10	TEST
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999345758092196	WITHOUT_CLASSIFICATION	6.38004261327218E-5	DESIGN	1.4505434217647435E-6	TEST	6.916070786559061E-8	DEFECT	6.213941810278332E-8	IMPLEMENTATION	4.1921099942724645E-8	DOCUMENTATION
//" cascade";	WITHOUT_CLASSIFICATION	0.9999819423968007	WITHOUT_CLASSIFICATION	1.2385292876586751E-5	DESIGN	4.370991778685599E-6	IMPLEMENTATION	8.806203529361305E-7	DOCUMENTATION	2.3225598849836626E-7	TEST	1.8844220253122948E-7	DEFECT
//trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.9999992421615224	WITHOUT_CLASSIFICATION	4.676554445784579E-7	DESIGN	1.9623056494550268E-7	IMPLEMENTATION	6.034466905196036E-8	DEFECT	2.4012735130172705E-8	DOCUMENTATION	9.595063982480903E-9	TEST
/*public boolean dropTemporaryTableAfterUse() {	WITHOUT_CLASSIFICATION	0.5232514342912078	WITHOUT_CLASSIFICATION	0.4767082529586868	DESIGN	3.0217383079010505E-5	DEFECT	5.0577342150881245E-6	DOCUMENTATION	3.562114936752225E-6	TEST	1.4755178745374705E-6	IMPLEMENTATION
// CHECK VIOLATION	WITHOUT_CLASSIFICATION	0.9999993400261843	WITHOUT_CLASSIFICATION	3.8091035627106966E-7	DESIGN	1.2349831492376207E-7	IMPLEMENTATION	8.179124523667385E-8	DEFECT	4.678255741149495E-8	DOCUMENTATION	2.6991341823720386E-8	TEST
// UNIQUE VIOLATION	WITHOUT_CLASSIFICATION	0.9999958335307769	WITHOUT_CLASSIFICATION	3.205720988984811E-6	IMPLEMENTATION	4.659012518616502E-7	DEFECT	2.8331797575806043E-7	DESIGN	1.3916168917447393E-7	DOCUMENTATION	7.2367317396297E-8	TEST
// FOREIGN KEY VIOLATION	WITHOUT_CLASSIFICATION	0.9999931752266134	WITHOUT_CLASSIFICATION	4.6296120780189546E-6	IMPLEMENTATION	1.2636801922418152E-6	DESIGN	4.2907725178627973E-7	DEFECT	2.6014307595778805E-7	DOCUMENTATION	2.4226078865441877E-7	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999465114362279	WITHOUT_CLASSIFICATION	2.9481612820847996E-5	IMPLEMENTATION	1.9182270809399208E-5	DESIGN	2.423899933074126E-6	DOCUMENTATION	2.3341255952227405E-6	DEFECT	6.665461364221025E-8	TEST
// NOT NULL VIOLATION	WITHOUT_CLASSIFICATION	0.9999847004162293	WITHOUT_CLASSIFICATION	8.67675980164623E-6	DESIGN	5.255466532473669E-6	IMPLEMENTATION	5.159180879257282E-7	DEFECT	4.777217359104767E-7	DOCUMENTATION	3.73717612668002E-7	TEST
// ALL OTHER	WITHOUT_CLASSIFICATION	0.9999967153736916	WITHOUT_CLASSIFICATION	1.0962072000836945E-6	DESIGN	1.014720227435552E-6	IMPLEMENTATION	8.669436872560378E-7	DEFECT	2.0308845731168988E-7	DOCUMENTATION	1.0366673637304891E-7	TEST
// Register the type of the out param - PostgreSQL uses Types.OTHER	WITHOUT_CLASSIFICATION	0.9991213517796668	WITHOUT_CLASSIFICATION	8.785355454031443E-4	DESIGN	6.998442906925592E-8	TEST	2.8948995838851587E-8	DEFECT	9.160828490126347E-9	IMPLEMENTATION	4.58067659854896E-9	DOCUMENTATION
// seems to not really... //	WITHOUT_CLASSIFICATION	0.9994712167944708	WITHOUT_CLASSIFICATION	3.0377704439941007E-4	DESIGN	2.244439889484693E-4	DEFECT	2.650981291023077E-7	IMPLEMENTATION	1.5954251145272504E-7	DOCUMENTATION	1.3753154070956436E-7	TEST
// seems to have spotty LOB suppport	WITHOUT_CLASSIFICATION	0.9995068794785666	WITHOUT_CLASSIFICATION	4.8295871087028003E-4	DESIGN	7.3916515147234195E-6	DEFECT	2.176323446137959E-6	IMPLEMENTATION	4.929598380671149E-7	DOCUMENTATION	1.0087576416648783E-7	TEST
// HHH-2300	WITHOUT_CLASSIFICATION	0.9999826724236723	WITHOUT_CLASSIFICATION	1.4585737897504044E-5	DESIGN	1.641692815451183E-6	DEFECT	4.1462514464268806E-7	IMPLEMENTATION	3.9571344835350666E-7	DOCUMENTATION	2.8980702174607236E-7	TEST
// ignore (probably H2 not in the classpath)	WITHOUT_CLASSIFICATION	0.9998425434338182	WITHOUT_CLASSIFICATION	1.54437015586411E-4	DESIGN	2.916068340408682E-6	DEFECT	9.33722089715365E-8	DOCUMENTATION	5.712317912446532E-9	IMPLEMENTATION	4.397728043989222E-9	TEST
// Numeric Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999624866656233	WITHOUT_CLASSIFICATION	2.5043415036446675E-5	IMPLEMENTATION	1.0545395401368744E-5	DESIGN	1.0756513922964675E-6	DEFECT	6.230202230137019E-7	DOCUMENTATION	2.2585232366216513E-7	TEST
// String Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999686103900582	WITHOUT_CLASSIFICATION	1.7231416601240374E-5	DESIGN	8.971078350453739E-6	IMPLEMENTATION	4.302058452189711E-6	DEFECT	7.264853625109942E-7	DOCUMENTATION	1.585711753854525E-7	TEST
// Time and Date Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999472346571183	WITHOUT_CLASSIFICATION	2.9147958973902607E-5	IMPLEMENTATION	1.926523722085926E-5	DESIGN	2.514771547896472E-6	DOCUMENTATION	1.6565486363463E-6	DEFECT	1.8082650280878396E-7	TEST
// System Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998201567537336	WITHOUT_CLASSIFICATION	1.0129227461604226E-4	DESIGN	6.185132773797313E-5	IMPLEMENTATION	1.3296672734304769E-5	DEFECT	2.3787834206759475E-6	DOCUMENTATION	1.0241877573340071E-6	TEST
// not null is implicit	WITHOUT_CLASSIFICATION	0.9951987486852016	WITHOUT_CLASSIFICATION	0.004425441560616282	DESIGN	3.1411005576180575E-4	DEFECT	5.16056780287859E-5	IMPLEMENTATION	8.942677726519055E-6	TEST	1.1513426649468258E-6	DOCUMENTATION
// 23000: Check constraint violation: {0} // 23001: Unique index or primary key violation: {0}	WITHOUT_CLASSIFICATION	0.9999999697250816	WITHOUT_CLASSIFICATION	1.525178890929709E-8	IMPLEMENTATION	1.3131898107042272E-8	DEFECT	7.990817923623381E-10	DOCUMENTATION	6.407300010722106E-10	DESIGN	4.5141949907402473E-10	TEST
// Display the dialect version.	WITHOUT_CLASSIFICATION	0.998445231987451	WITHOUT_CLASSIFICATION	0.001505484194342131	IMPLEMENTATION	4.832727647648872E-5	DESIGN	6.523590346028842E-7	DEFECT	2.4388332573916857E-7	DOCUMENTATION	6.029937010030139E-8	TEST
// The RDMS concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9996684093330839	WITHOUT_CLASSIFICATION	3.1643693311300425E-4	IMPLEMENTATION	8.585848292050331E-6	DESIGN	6.3900866232866346E-6	DEFECT	1.4304273789944842E-7	DOCUMENTATION	3.475614992436856E-8	TEST
// Dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999825849324002	WITHOUT_CLASSIFICATION	1.2348646732975248E-5	IMPLEMENTATION	4.72487674836827E-6	DESIGN	2.9471554320677727E-7	TEST	2.636434044730977E-8	DEFECT	2.046423477548671E-8	DOCUMENTATION
// Original Dialect.java returns " for update";	WITHOUT_CLASSIFICATION	0.9999987666232554	WITHOUT_CLASSIFICATION	1.2224473676003578E-6	DESIGN	8.034661321029332E-9	DEFECT	1.3226152336253287E-9	IMPLEMENTATION	1.3022312141978915E-9	DOCUMENTATION	2.698692152283398E-10	TEST
// Verify the state of this new method in Hibernate 3.0 Dialect.java	WITHOUT_CLASSIFICATION	0.9985319075199434	WITHOUT_CLASSIFICATION	0.0014633436005878143	DESIGN	3.776814396426437E-6	DEFECT	5.653034343812606E-7	TEST	3.9940352361672343E-7	DOCUMENTATION	7.358114415855389E-9	IMPLEMENTATION
// Origial Dialect.java returns true;	WITHOUT_CLASSIFICATION	0.9999958218940143	WITHOUT_CLASSIFICATION	4.0991588489742305E-6	DESIGN	6.378836878225758E-8	DEFECT	8.190139163287123E-9	IMPLEMENTATION	5.327650755842249E-9	DOCUMENTATION	1.6409781283186836E-9	TEST
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999999089704554	WITHOUT_CLASSIFICATION	6.414934576518171E-8	DESIGN	1.3415093435757362E-8	IMPLEMENTATION	8.997128204437725E-9	DEFECT	4.317896381595213E-9	DOCUMENTATION	1.5008082904425591E-10	TEST
// *** Sequence methods - start. The RDMS dialect needs these	WITHOUT_CLASSIFICATION	0.9999699199050401	WITHOUT_CLASSIFICATION	1.899363285077503E-5	DESIGN	5.314689112646736E-6	IMPLEMENTATION	2.985391259532098E-6	DEFECT	2.1334690008835064E-6	TEST	6.529127358687391E-7	DOCUMENTATION
// methods to make it possible to use the Native Id generator	WITHOUT_CLASSIFICATION	0.9999867124931954	WITHOUT_CLASSIFICATION	8.691423794961757E-6	IMPLEMENTATION	4.535642478581421E-6	DESIGN	3.395066457850313E-8	TEST	2.4703158255031274E-8	DEFECT	1.7867081984875052E-9	DOCUMENTATION
// The where clause was added to eliminate this statement from Brute Force Searches.	WITHOUT_CLASSIFICATION	0.9999983290885054	WITHOUT_CLASSIFICATION	1.6461556875268309E-6	DESIGN	1.63320668370763E-8	DOCUMENTATION	6.598816911138869E-9	DEFECT	1.6131030109629428E-9	TEST	2.118205155058563E-10	IMPLEMENTATION
// *** Sequence methods - end	WITHOUT_CLASSIFICATION	0.9985366550315549	WITHOUT_CLASSIFICATION	0.0014316090346390578	DESIGN	1.430934120974764E-5	DOCUMENTATION	8.877497500505403E-6	IMPLEMENTATION	5.5169586053394946E-6	DEFECT	3.032136490482494E-6	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999465114362279	WITHOUT_CLASSIFICATION	2.9481612820847996E-5	IMPLEMENTATION	1.9182270809399208E-5	DESIGN	2.423899933074126E-6	DOCUMENTATION	2.3341255952227405E-6	DEFECT	6.665461364221025E-8	TEST
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999345758092196	WITHOUT_CLASSIFICATION	6.38004261327218E-5	DESIGN	1.4505434217647435E-6	TEST	6.916070786559061E-8	DEFECT	6.213941810278332E-8	IMPLEMENTATION	4.1921099942724645E-8	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9995047251784287	WITHOUT_CLASSIFICATION	4.8143935166647633E-4	DESIGN	1.3753985486419354E-5	DEFECT	5.139409184924533E-8	TEST	1.56079908682217E-8	DOCUMENTATION	1.4482335834037744E-8	IMPLEMENTATION
// Used with DROP TABLE to delete all records in the table.	WITHOUT_CLASSIFICATION	0.9999995746205981	WITHOUT_CLASSIFICATION	3.907811850324756E-7	IMPLEMENTATION	3.175410366967369E-8	DESIGN	1.9882453276747292E-9	DEFECT	6.829527729276888E-10	DOCUMENTATION	1.7291525583860482E-10	TEST
// RDMS supports the UNION ALL clause.	WITHOUT_CLASSIFICATION	0.9999983612691814	WITHOUT_CLASSIFICATION	1.2136240268340465E-6	IMPLEMENTATION	4.0163430954678533E-7	DESIGN	1.6889839680205093E-8	DEFECT	5.433265118391858E-9	DOCUMENTATION	1.149377348771526E-9	TEST
// RDMS has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9998399485071424	WITHOUT_CLASSIFICATION	6.60274090562011E-5	IMPLEMENTATION	6.226598997899743E-5	DESIGN	3.0269785406825667E-5	DEFECT	1.393832889259039E-6	DOCUMENTATION	9.44755263180851E-8	TEST
// Multi-param dialect functions...	WITHOUT_CLASSIFICATION	0.9999823746169534	WITHOUT_CLASSIFICATION	1.5488216592544486E-5	DESIGN	1.4087896172321227E-6	IMPLEMENTATION	6.752920826328931E-7	DEFECT	3.099070598078899E-8	TEST	2.209404820380126E-8	DOCUMENTATION
// function templates	WITHOUT_CLASSIFICATION	0.9999985526896987	WITHOUT_CLASSIFICATION	7.002451051234502E-7	IMPLEMENTATION	2.751640464806431E-7	DEFECT	2.6958059331446245E-7	DESIGN	1.507433459329978E-7	TEST	5.157721032384087E-8	DOCUMENTATION
//not null is implicit	WITHOUT_CLASSIFICATION	0.9938740143005416	WITHOUT_CLASSIFICATION	0.005718288611096866	DESIGN	3.8647468036162493E-4	DEFECT	1.3788369790832449E-5	TEST	5.224312079164267E-6	IMPLEMENTATION	2.209726130043847E-6	DOCUMENTATION
// this assumes schema support, which is present in 1.8.0 and later...	WITHOUT_CLASSIFICATION	0.9911119115837032	WITHOUT_CLASSIFICATION	0.008811643867221693	DESIGN	6.123055384045843E-5	DEFECT	9.402188564397645E-6	DOCUMENTATION	4.9319882749090595E-6	TEST	8.79818395417639E-7	IMPLEMENTATION
// HSQLDB only supports READ_UNCOMMITTED transaction isolation	WITHOUT_CLASSIFICATION	0.9999845596818716	WITHOUT_CLASSIFICATION	1.3866370444426608E-5	DESIGN	1.0833394580142662E-6	DEFECT	4.4697668667547203E-7	IMPLEMENTATION	3.924839207839423E-8	DOCUMENTATION	4.38314722922575E-9	TEST
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999654998497421	WITHOUT_CLASSIFICATION	3.1064442464615605E-5	DESIGN	2.2454586279317433E-6	DEFECT	1.05661014379614E-6	IMPLEMENTATION	9.654513761520322E-8	TEST	3.709388389883514E-8	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999033662536989	WITHOUT_CLASSIFICATION	8.913416643627113E-5	DESIGN	4.275765089140961E-6	IMPLEMENTATION	3.0304817014764912E-6	DEFECT	1.1842014703596108E-7	DOCUMENTATION	7.491292716102066E-8	TEST
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999666941512204	WITHOUT_CLASSIFICATION	3.0031564123032678E-5	DESIGN	1.7080266865999115E-6	IMPLEMENTATION	1.4995333812987852E-6	DEFECT	3.66526380086823E-8	TEST	3.007195073903433E-8	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999999779058761	WITHOUT_CLASSIFICATION	9.91573342309352E-9	DESIGN	8.595289335452875E-9	IMPLEMENTATION	2.482546262238113E-9	DEFECT	7.868966592290319E-10	TEST	3.136582107701234E-10	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999465114362279	WITHOUT_CLASSIFICATION	2.9481612820847996E-5	IMPLEMENTATION	1.9182270809399208E-5	DESIGN	2.423899933074126E-6	DOCUMENTATION	2.3341255952227405E-6	DEFECT	6.665461364221025E-8	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999465114362279	WITHOUT_CLASSIFICATION	2.9481612820847996E-5	IMPLEMENTATION	1.9182270809399208E-5	DESIGN	2.423899933074126E-6	DOCUMENTATION	2.3341255952227405E-6	DEFECT	6.665461364221025E-8	TEST
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9843091877018485	WITHOUT_CLASSIFICATION	0.015690254109087812	DESIGN	4.942280295326095E-7	DEFECT	3.096966429247156E-8	IMPLEMENTATION	2.357823913720324E-8	DOCUMENTATION	9.41313076718929E-9	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// TimesTen has no BLOB/CLOB support, but these types may be suitable  // for some applications. The length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.9999989226090454	WITHOUT_CLASSIFICATION	1.0389638871650604E-6	IMPLEMENTATION	1.2131760285270448E-8	TEST	9.400733578293717E-9	DESIGN	8.642628609373851E-9	DOCUMENTATION	8.25194468237104E-9	DEFECT
// new methods in dialect3	WITHOUT_CLASSIFICATION	0.9998621103755198	WITHOUT_CLASSIFICATION	1.3551674995950367E-4	DESIGN	1.2148308219521602E-6	IMPLEMENTATION	7.81135236651051E-7	DEFECT	1.9846714410950515E-7	TEST	1.7844131799367297E-7	DOCUMENTATION
/*public boolean supportsForUpdateNowait() {	WITHOUT_CLASSIFICATION	0.998030544024306	WITHOUT_CLASSIFICATION	0.001918837669076108	DESIGN	3.528541860534035E-5	IMPLEMENTATION	1.162289686886558E-5	DEFECT	2.1918738190152162E-6	DOCUMENTATION	1.5181173248912069E-6	TEST
// TimesTen has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9989125515735127	WITHOUT_CLASSIFICATION	0.0010038813883107955	IMPLEMENTATION	5.357593890083096E-5	DEFECT	2.4831660842846855E-5	DESIGN	4.3060502986777035E-6	DOCUMENTATION	8.533881341081725E-7	TEST
// iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.9999998368686411	WITHOUT_CLASSIFICATION	1.5109426166436276E-7	DESIGN	6.627351379873378E-9	TEST	4.148484947226863E-9	IMPLEMENTATION	1.1262741222067622E-9	DEFECT	1.3498663487310963E-10	DOCUMENTATION
// add new ordered map	WITHOUT_CLASSIFICATION	0.9999986063231553	WITHOUT_CLASSIFICATION	9.064711349562867E-7	IMPLEMENTATION	3.7801063208930125E-7	DESIGN	4.039301865626244E-8	DOCUMENTATION	3.689043148527547E-8	TEST	3.1911627414047636E-8	DEFECT
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999465114362279	WITHOUT_CLASSIFICATION	2.9481612820847996E-5	IMPLEMENTATION	1.9182270809399208E-5	DESIGN	2.423899933074126E-6	DOCUMENTATION	2.3341255952227405E-6	DEFECT	6.665461364221025E-8	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999901526897935	WITHOUT_CLASSIFICATION	7.036677037539819E-6	DESIGN	2.784955906144768E-6	IMPLEMENTATION	2.173255348996769E-8	DEFECT	2.58461188593231E-9	DOCUMENTATION	1.3600973060154748E-9	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
//registerColumnType data types	WITHOUT_CLASSIFICATION	0.999470287759587	WITHOUT_CLASSIFICATION	5.279773901750309E-4	DESIGN	7.983274325673866E-7	DEFECT	4.3663164846830907E-7	IMPLEMENTATION	3.8676529743813955E-7	TEST	1.1312585953456872E-7	DOCUMENTATION
// hibernate seems to ignore this type...	WITHOUT_CLASSIFICATION	0.9977669756060112	WITHOUT_CLASSIFICATION	0.0022312668731416523	DESIGN	6.968113367794986E-7	IMPLEMENTATION	4.4135766758914814E-7	DEFECT	3.9193473343842394E-7	DOCUMENTATION	2.274171093676728E-7	TEST
// IBID for current_time and current_date	WITHOUT_CLASSIFICATION	0.9999688773890729	WITHOUT_CLASSIFICATION	2.537938990725039E-5	IMPLEMENTATION	2.0103188054048245E-6	DEFECT	1.8451278504255728E-6	DOCUMENTATION	1.8098462636748496E-6	DESIGN	7.792810040192776E-8	TEST
// Tell hibernate to use getBytes instead of getBinaryStream	WITHOUT_CLASSIFICATION	0.9993495602694844	WITHOUT_CLASSIFICATION	6.480779188782522E-4	DESIGN	1.8620597086500509E-6	DEFECT	2.3491684796020673E-7	TEST	1.9047067028217559E-7	IMPLEMENTATION	7.436441041501509E-8	DOCUMENTATION
// No batch statements	WITHOUT_CLASSIFICATION	0.999999947856278	WITHOUT_CLASSIFICATION	1.5378499480403392E-8	IMPLEMENTATION	1.3309062218223643E-8	DOCUMENTATION	1.3221975798596251E-8	DESIGN	7.881883121626407E-9	TEST	2.3523013532076805E-9	DEFECT
/*	WITHOUT_CLASSIFICATION	0.9819192621518401	WITHOUT_CLASSIFICATION	0.012598127708177996	DESIGN	0.0034337196809112133	DEFECT	0.0017673486614797169	IMPLEMENTATION	1.7059466924859105E-4	DOCUMENTATION	1.109471283424685E-4	TEST
//no pointbase BIT	WITHOUT_CLASSIFICATION	0.9999905580754563	WITHOUT_CLASSIFICATION	4.560159171420726E-6	IMPLEMENTATION	2.6787660637731673E-6	DEFECT	1.310055278774461E-6	DOCUMENTATION	8.362856687577463E-7	DESIGN	5.665836090404727E-8	TEST
//no pointbase TINYINT	WITHOUT_CLASSIFICATION	0.999995724167807	WITHOUT_CLASSIFICATION	1.8644989388084102E-6	IMPLEMENTATION	9.879565052071656E-7	DESIGN	8.526351361075178E-7	DOCUMENTATION	5.179973367070211E-7	DEFECT	5.274427615983583E-8	TEST
// Pointbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9998158856003112	WITHOUT_CLASSIFICATION	7.297555685673677E-5	IMPLEMENTATION	7.162544288065138E-5	DESIGN	3.6843343449819724E-5	DEFECT	2.565563615061128E-6	DOCUMENTATION	1.0449288663483889E-7	TEST
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999345758092196	WITHOUT_CLASSIFICATION	6.38004261327218E-5	DESIGN	1.4505434217647435E-6	TEST	6.916070786559061E-8	DEFECT	6.213941810278332E-8	IMPLEMENTATION	4.1921099942724645E-8	DOCUMENTATION
// The current_timestamp is more accurate, but only known to be supported // in SQL Server 7.0 and later (i.e., Sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.9923933958129296	WITHOUT_CLASSIFICATION	0.005555231344763376	DEFECT	0.0020219612871612137	DESIGN	2.2662542087478636E-5	IMPLEMENTATION	4.747134713172612E-6	TEST	2.0018783451487288E-6	DOCUMENTATION
// SQL Server (at least up through 2005) does not support defining // cascade delete constraints which can circel back to the mutating // table	WITHOUT_CLASSIFICATION	0.9999968411652086	WITHOUT_CLASSIFICATION	3.155311471770205E-6	DESIGN	2.527612652257947E-9	TEST	5.09728080111384E-10	DEFECT	2.7986729718113045E-10	DOCUMENTATION	2.061115429628066E-10	IMPLEMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9872049145756921	WITHOUT_CLASSIFICATION	0.009232939995362958	DEFECT	0.0034112917594827145	DESIGN	1.4263492586393474E-4	TEST	8.178761370585832E-6	DOCUMENTATION	3.9982227617261605E-8	IMPLEMENTATION
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999345758092196	WITHOUT_CLASSIFICATION	6.38004261327218E-5	DESIGN	1.4505434217647435E-6	TEST	6.916070786559061E-8	DEFECT	6.213941810278332E-8	IMPLEMENTATION	4.1921099942724645E-8	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999945736155215	WITHOUT_CLASSIFICATION	5.302509017832E-6	DESIGN	7.636890177224096E-8	DOCUMENTATION	2.2036982292199793E-8	DEFECT	1.721087888563048E-8	IMPLEMENTATION	8.258697746335655E-9	TEST
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999901526897935	WITHOUT_CLASSIFICATION	7.036677037539819E-6	DESIGN	2.784955906144768E-6	IMPLEMENTATION	2.173255348996769E-8	DEFECT	2.58461188593231E-9	DOCUMENTATION	1.3600973060154748E-9	TEST
//Sybase BIT type does not support null values	WITHOUT_CLASSIFICATION	0.9871990040279605	WITHOUT_CLASSIFICATION	0.012558542758356167	DESIGN	2.30326839420431E-4	DEFECT	7.60327569445502E-6	IMPLEMENTATION	2.468930344289195E-6	DOCUMENTATION	2.0541682240409465E-6	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999465114362279	WITHOUT_CLASSIFICATION	2.9481612820847996E-5	IMPLEMENTATION	1.9182270809399208E-5	DESIGN	2.423899933074126E-6	DOCUMENTATION	2.3341255952227405E-6	DEFECT	6.665461364221025E-8	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
//not null ... (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.9622042640855193	WITHOUT_CLASSIFICATION	0.036128314917731684	DESIGN	0.0015012386218574627	DEFECT	1.322999161207604E-4	TEST	3.200998199144837E-5	IMPLEMENTATION	1.8724767793127496E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999465114362279	WITHOUT_CLASSIFICATION	2.9481612820847996E-5	IMPLEMENTATION	1.9182270809399208E-5	DESIGN	2.423899933074126E-6	DOCUMENTATION	2.3341255952227405E-6	DEFECT	6.665461364221025E-8	TEST
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.9755340022101351	WITHOUT_CLASSIFICATION	0.024461188270152298	DESIGN	4.559006671109128E-6	DEFECT	1.5502164491546556E-7	TEST	9.096549945804683E-8	IMPLEMENTATION	4.525897120326856E-9	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999654998497421	WITHOUT_CLASSIFICATION	3.1064442464615605E-5	DESIGN	2.2454586279317433E-6	DEFECT	1.05661014379614E-6	IMPLEMENTATION	9.654513761520322E-8	TEST	3.709388389883514E-8	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999033662536989	WITHOUT_CLASSIFICATION	8.913416643627113E-5	DESIGN	4.275765089140961E-6	IMPLEMENTATION	3.0304817014764912E-6	DEFECT	1.1842014703596108E-7	DOCUMENTATION	7.491292716102066E-8	TEST
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999666941512204	WITHOUT_CLASSIFICATION	3.0031564123032678E-5	DESIGN	1.7080266865999115E-6	IMPLEMENTATION	1.4995333812987852E-6	DEFECT	3.66526380086823E-8	TEST	3.007195073903433E-8	DOCUMENTATION
// add another (inner) nested select // add the main query // close off the inner nested select	WITHOUT_CLASSIFICATION	0.9999999803867888	WITHOUT_CLASSIFICATION	1.4641396725299692E-8	TEST	2.487595234507153E-9	DEFECT	1.6577796568902037E-9	DOCUMENTATION	7.197880054741096E-10	DESIGN	1.0665149398401243E-10	IMPLEMENTATION
// add the main query	WITHOUT_CLASSIFICATION	0.999981953633251	WITHOUT_CLASSIFICATION	1.4226315145211448E-5	DESIGN	2.0434392976121278E-6	IMPLEMENTATION	1.2467213191570581E-6	DOCUMENTATION	2.757873819347483E-7	TEST	2.541036050933078E-7	DEFECT
//add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.9999975442331653	WITHOUT_CLASSIFICATION	2.0774865600378975E-6	DESIGN	1.4938145301325674E-7	DOCUMENTATION	1.012655745065817E-7	IMPLEMENTATION	8.780271708370204E-8	TEST	3.983052991755949E-8	DEFECT
// This assumes you will want to ignore any update counts 	WITHOUT_CLASSIFICATION	0.999999102816481	WITHOUT_CLASSIFICATION	8.776959396558978E-7	DEFECT	1.1186345459300073E-8	DESIGN	3.942101035913335E-9	IMPLEMENTATION	2.6079077590002136E-9	TEST	1.7512250017067799E-9	DOCUMENTATION
// You may still have other ResultSets or update counts left to process here  // but you can't do it now or the ResultSet you just got will be closed 	WITHOUT_CLASSIFICATION	0.9999998054643923	WITHOUT_CLASSIFICATION	1.9080432550643645E-7	DEFECT	3.654843692713977E-9	DESIGN	5.040089402231067E-11	IMPLEMENTATION	1.9134142387968283E-11	TEST	6.903521656663134E-12	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999465114362279	WITHOUT_CLASSIFICATION	2.9481612820847996E-5	IMPLEMENTATION	1.9182270809399208E-5	DESIGN	2.423899933074126E-6	DOCUMENTATION	2.3341255952227405E-6	DEFECT	6.665461364221025E-8	TEST
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999345758092196	WITHOUT_CLASSIFICATION	6.38004261327218E-5	DESIGN	1.4505434217647435E-6	TEST	6.916070786559061E-8	DEFECT	6.213941810278332E-8	IMPLEMENTATION	4.1921099942724645E-8	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999999779058761	WITHOUT_CLASSIFICATION	9.91573342309352E-9	DESIGN	8.595289335452875E-9	IMPLEMENTATION	2.482546262238113E-9	DEFECT	7.868966592290319E-10	TEST	3.136582107701234E-10	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9843091877018485	WITHOUT_CLASSIFICATION	0.015690254109087812	DESIGN	4.942280295326095E-7	DEFECT	3.096966429247156E-8	IMPLEMENTATION	2.357823913720324E-8	DOCUMENTATION	9.41313076718929E-9	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// features which change between 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999910924761065	WITHOUT_CLASSIFICATION	8.196521698445516E-6	DESIGN	5.714426702829567E-7	DEFECT	6.213234345588204E-8	DOCUMENTATION	5.8898193895932306E-8	IMPLEMENTATION	1.8528987511802293E-8	TEST
// features which remain constant across 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999964237631311	WITHOUT_CLASSIFICATION	1.8084986360720976E-6	DESIGN	1.7423796043193479E-6	DEFECT	2.133625414152282E-8	DOCUMENTATION	2.8934599996876306E-9	TEST	1.1289142149679793E-9	IMPLEMENTATION
// binary %Stream // character %Stream	WITHOUT_CLASSIFICATION	0.9999999556646788	WITHOUT_CLASSIFICATION	4.062979379902486E-8	DESIGN	1.4413183963360918E-9	DEFECT	1.2061392158015232E-9	TEST	5.667106108095675E-10	DOCUMENTATION	4.91358987004198E-10	IMPLEMENTATION
//getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE, NO_BATCH);	WITHOUT_CLASSIFICATION	0.9999999051334298	WITHOUT_CLASSIFICATION	4.7904479648780254E-8	DESIGN	2.0317792729026647E-8	DEFECT	1.505033784261562E-8	DOCUMENTATION	6.358284387112502E-9	TEST	5.235675662357644E-9	IMPLEMENTATION
// hibernate impelemnts cast in Dialect.java	WITHOUT_CLASSIFICATION	0.9996325549271708	WITHOUT_CLASSIFICATION	3.662783153118804E-4	DESIGN	7.696276101802147E-7	TEST	2.9985233194132366E-7	DEFECT	6.226306519688278E-8	DOCUMENTATION	3.501451004366895E-8	IMPLEMENTATION
// aggregate functions shouldn't be registered, right? //registerFunction( "list", new StandardSQLFunction("list",Hibernate.STRING) ); // stopped on $list	WITHOUT_CLASSIFICATION	0.9999282223564149	WITHOUT_CLASSIFICATION	7.176354084209668E-5	DESIGN	1.1085822376208637E-8	DEFECT	2.7139845810313535E-9	IMPLEMENTATION	2.341603230177146E-10	TEST	6.877564612092255E-11	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998835677479888	WITHOUT_CLASSIFICATION	1.0076861897015758E-4	IMPLEMENTATION	1.300792844051038E-5	DESIGN	1.3373875956244103E-6	DEFECT	6.985735838836119E-7	DOCUMENTATION	6.197434211923526E-7	TEST
// below is for Cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.9989580662781218	WITHOUT_CLASSIFICATION	0.0010409115873531367	DESIGN	8.787974985874138E-7	DEFECT	8.673412632873283E-8	TEST	3.480999078081167E-8	DOCUMENTATION	2.179290936983687E-8	IMPLEMENTATION
// note that %string is deprecated	WITHOUT_CLASSIFICATION	0.9877454462708299	WITHOUT_CLASSIFICATION	0.011278977936928922	DESIGN	9.495383052452881E-4	IMPLEMENTATION	1.992243094177398E-5	TEST	3.76288378001128E-6	DEFECT	2.3521722741526736E-6	DOCUMENTATION
// %upper is deprecated	WITHOUT_CLASSIFICATION	0.9999451386681032	WITHOUT_CLASSIFICATION	5.402596619797428E-5	DESIGN	4.657937227298549E-7	DEFECT	1.686469256192075E-7	IMPLEMENTATION	1.460580218965295E-7	TEST	5.486702850023891E-8	DOCUMENTATION
// The syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.9999996582683417	WITHOUT_CLASSIFICATION	2.1158724359224455E-7	DESIGN	1.017927491924186E-7	DEFECT	1.4705577494892637E-8	IMPLEMENTATION	1.111790244094297E-8	DOCUMENTATION	2.528185680079268E-9	TEST
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999999922627025	WITHOUT_CLASSIFICATION	3.687186710464753E-9	DESIGN	2.9901765799744692E-9	IMPLEMENTATION	4.405724168504117E-10	DOCUMENTATION	3.149114408868945E-10	TEST	3.044501978124648E-10	DEFECT
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998404222846723	WITHOUT_CLASSIFICATION	1.3892912635770166E-4	IMPLEMENTATION	1.8262040559658695E-5	DESIGN	1.286222006823359E-6	DEFECT	6.069626383748585E-7	TEST	4.933637651764356E-7	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99982525174025	WITHOUT_CLASSIFICATION	8.576124887736279E-5	IMPLEMENTATION	8.486232290555635E-5	DESIGN	2.152552769738428E-6	DEFECT	1.0388110204957947E-6	DOCUMENTATION	9.333241767992587E-7	TEST
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999847332617469	WITHOUT_CLASSIFICATION	1.4137220569679067E-5	DESIGN	9.646618706068138E-7	IMPLEMENTATION	1.4954592565863757E-7	TEST	8.220377329236167E-9	DEFECT	7.089509926372982E-9	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999999922627025	WITHOUT_CLASSIFICATION	3.687186710464753E-9	DESIGN	2.9901765799744692E-9	IMPLEMENTATION	4.405724168504117E-10	DOCUMENTATION	3.149114408868945E-10	TEST	3.044501978124648E-10	DEFECT
// The syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.9998601709358642	WITHOUT_CLASSIFICATION	1.3675120716838583E-4	DESIGN	2.4076711436761473E-6	DEFECT	3.710098430847847E-7	DOCUMENTATION	2.699410242848292E-7	IMPLEMENTATION	2.923495639687693E-8	TEST
// Completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.9999944752286237	WITHOUT_CLASSIFICATION	2.7828938001597314E-6	DESIGN	1.5936374977720585E-6	IMPLEMENTATION	1.0794614929070593E-6	DEFECT	5.920306333213498E-8	DOCUMENTATION	9.57552209479186E-9	TEST
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999413715772346	WITHOUT_CLASSIFICATION	3.694474682337355E-5	IMPLEMENTATION	1.309438904185624E-5	DEFECT	7.77765343375293E-6	DESIGN	6.946981739679678E-7	DOCUMENTATION	1.1693529235616681E-7	TEST
// LIMIT support (ala TOP) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999780379619565	WITHOUT_CLASSIFICATION	1.278315841483785E-5	IMPLEMENTATION	8.003889926894933E-6	DESIGN	8.932243275574335E-7	DEFECT	1.9427125806981676E-7	DOCUMENTATION	8.749411628940205E-8	TEST
// InterSystems Cache' does not current support "SELECT ... FOR UPDATE" syntax... // Set your transaction mode to READ_COMMITTED before using	WITHOUT_CLASSIFICATION	0.9999841014474705	WITHOUT_CLASSIFICATION	7.551109366763337E-6	DESIGN	6.18629438229554E-6	DEFECT	2.0897516767775474E-6	IMPLEMENTATION	3.80794923018545E-8	TEST	3.331761121698628E-8	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999465114362279	WITHOUT_CLASSIFICATION	2.9481612820847996E-5	IMPLEMENTATION	1.9182270809399208E-5	DESIGN	2.423899933074126E-6	DOCUMENTATION	2.3341255952227405E-6	DEFECT	6.665461364221025E-8	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999465114362279	WITHOUT_CLASSIFICATION	2.9481612820847996E-5	IMPLEMENTATION	1.9182270809399208E-5	DESIGN	2.423899933074126E-6	DOCUMENTATION	2.3341255952227405E-6	DEFECT	6.665461364221025E-8	TEST
/*<String>*/	WITHOUT_CLASSIFICATION	0.9989677239712708	WITHOUT_CLASSIFICATION	7.240394281636501E-4	DESIGN	1.840914955004864E-4	DEFECT	7.302996696611937E-5	IMPLEMENTATION	3.585701938694492E-5	DOCUMENTATION	1.5258118712136931E-5	TEST
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999844463397537	WITHOUT_CLASSIFICATION	1.366217730165305E-5	IMPLEMENTATION	1.7732920758184165E-6	DESIGN	6.067244830010946E-8	DEFECT	3.155001722731756E-8	DOCUMENTATION	2.5968403365109152E-8	TEST
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999797576777649	WITHOUT_CLASSIFICATION	1.6028235101156584E-5	DESIGN	3.934771670069389E-6	IMPLEMENTATION	1.2028194476625216E-7	DEFECT	8.767786335715511E-8	TEST	7.135565577672392E-8	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999999089704554	WITHOUT_CLASSIFICATION	6.414934576518171E-8	DESIGN	1.3415093435757362E-8	IMPLEMENTATION	8.997128204437725E-9	DEFECT	4.317896381595213E-9	DOCUMENTATION	1.5008082904425591E-10	TEST
// Does the LIMIT clause come at the start of the SELECT statement, rather than at the end?	WITHOUT_CLASSIFICATION	0.9984721678864977	WITHOUT_CLASSIFICATION	0.0015231226047766747	DESIGN	2.5571793878641906E-6	DOCUMENTATION	1.2022101486178981E-6	TEST	5.426377972189468E-7	IMPLEMENTATION	4.0748139198983144E-7	DEFECT
// Does the LIMIT clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.9999738466403805	WITHOUT_CLASSIFICATION	1.5341435741808695E-5	DESIGN	1.0669802555211679E-5	DEFECT	6.60057339534863E-8	DOCUMENTATION	5.447044467551937E-8	IMPLEMENTATION	2.1645143982759057E-8	TEST
// The name of the SQL function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.9999955920004212	WITHOUT_CLASSIFICATION	3.4175580209028243E-6	DESIGN	8.943916517140919E-7	DEFECT	8.149755430818194E-8	IMPLEMENTATION	1.2908163317910041E-8	DOCUMENTATION	1.6441884854170077E-9	TEST
// Create an OuterJoinGenerator for this dialect.	WITHOUT_CLASSIFICATION	0.9999857039534049	WITHOUT_CLASSIFICATION	1.413964219276271E-5	DESIGN	1.4940822801748828E-7	TEST	5.1728703705762735E-9	DOCUMENTATION	1.0660275575756777E-9	IMPLEMENTATION	7.572761129457082E-10	DEFECT
// The keyword used to insert a row without specifying // any column values	WITHOUT_CLASSIFICATION	0.9999997643856162	WITHOUT_CLASSIFICATION	2.011805199016082E-7	DEFECT	1.5600900839287777E-8	DESIGN	8.28508119665912E-9	IMPLEMENTATION	6.404089336564945E-9	TEST	4.143792596310898E-9	DOCUMENTATION
//registerFunction( "trim", new StandardSQLFunction( "trim", Hibernate.STRING ) );	WITHOUT_CLASSIFICATION	0.9999996494636277	WITHOUT_CLASSIFICATION	2.2819216185267187E-7	IMPLEMENTATION	1.1161748489645847E-7	DESIGN	7.451378976835527E-9	DEFECT	2.2029842071558413E-9	DOCUMENTATION	1.0723622510802806E-9	TEST
//skip the FROM keyword in params	WITHOUT_CLASSIFICATION	0.9999747155618766	WITHOUT_CLASSIFICATION	1.4327720675962134E-5	IMPLEMENTATION	7.062803688779173E-6	DESIGN	2.1108861499065434E-6	DEFECT	1.1491652196863174E-6	DOCUMENTATION	6.338623891490577E-7	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9982414523766154	WITHOUT_CLASSIFICATION	0.0016475936779793072	DESIGN	7.351568261524677E-5	IMPLEMENTATION	1.679939678418562E-5	DOCUMENTATION	1.6057984814387536E-5	DEFECT	4.580881191449248E-6	TEST
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999999999347763	WITHOUT_CLASSIFICATION	2.4172135037516738E-11	IMPLEMENTATION	1.8753098508881046E-11	DOCUMENTATION	1.8217087160549163E-11	DESIGN	3.81687109484225E-12	DEFECT	2.646046612868506E-13	TEST
// SQLFunction implementation	WITHOUT_CLASSIFICATION	0.9998572328785903	WITHOUT_CLASSIFICATION	1.3681598885436318E-4	IMPLEMENTATION	3.741379996015243E-6	DESIGN	1.686208209438148E-6	DEFECT	4.865137250816089E-7	DOCUMENTATION	3.70306249814818E-8	TEST
// conceivable that the dialect ctor could throw HibernateExceptions, so don't re-wrap	WITHOUT_CLASSIFICATION	0.9999977431522268	WITHOUT_CLASSIFICATION	2.228870985042779E-6	DESIGN	1.8974396313833677E-8	IMPLEMENTATION	4.604264696571226E-9	TEST	3.964842826102041E-9	DEFECT	4.3328421365147783E-10	DOCUMENTATION
// register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.9999955092030886	WITHOUT_CLASSIFICATION	3.4424586502853173E-6	IMPLEMENTATION	9.160319074110214E-7	DESIGN	1.0327600796842034E-7	DEFECT	2.3265551851157906E-8	TEST	5.764793926368906E-9	DOCUMENTATION
// register resolvers set via Environment property	WITHOUT_CLASSIFICATION	0.999998969153478	WITHOUT_CLASSIFICATION	9.930416654331084E-7	DESIGN	1.753686878664276E-8	DEFECT	1.5082120744325253E-8	TEST	3.7189395156756614E-9	DOCUMENTATION	1.4669276282544822E-9	IMPLEMENTATION
// kept for backward compatibility until after the 3.1beta5 release of HA	WITHOUT_CLASSIFICATION	0.9999983078862118	WITHOUT_CLASSIFICATION	1.130819699436726E-6	IMPLEMENTATION	5.43943599314533E-7	DESIGN	9.091247635232082E-9	DEFECT	5.754661722947565E-9	TEST	2.5045801751308448E-9	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9995379049936901	WITHOUT_CLASSIFICATION	4.221397328731619E-4	DESIGN	3.5851673359140174E-5	IMPLEMENTATION	2.677734585568395E-6	DOCUMENTATION	1.0220687848577659E-6	TEST	4.0379670727041725E-7	DEFECT
// the CascadingAction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999768561653098	WITHOUT_CLASSIFICATION	1.8254978663457323E-5	IMPLEMENTATION	3.645736289705265E-6	DESIGN	1.1157616133040448E-6	DOCUMENTATION	9.843832520077399E-8	TEST	2.891979855603189E-8	DEFECT
// the CascadingAction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9990171710372898	WITHOUT_CLASSIFICATION	9.77993599927734E-4	IMPLEMENTATION	3.762004107094203E-6	DESIGN	4.833851843949427E-7	DEFECT	4.0663017340999044E-7	DOCUMENTATION	1.8334331748129022E-7	TEST
// delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999999351614329	WITHOUT_CLASSIFICATION	5.022844424116877E-8	IMPLEMENTATION	5.940219373399377E-9	TEST	4.6794410902671415E-9	DESIGN	2.2525842770850864E-9	DEFECT	1.7378780254094997E-9	DOCUMENTATION
// orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.9999750715222738	WITHOUT_CLASSIFICATION	2.030893549320052E-5	DESIGN	3.817123377001411E-6	DEFECT	6.57332811985122E-7	IMPLEMENTATION	1.3006601373247536E-7	TEST	1.5020030246295712E-8	DOCUMENTATION
/*(LockMode) anything*/	WITHOUT_CLASSIFICATION	0.9998163869831013	WITHOUT_CLASSIFICATION	7.801584438424063E-5	DESIGN	7.351235458803409E-5	DOCUMENTATION	2.6185043238443585E-5	DEFECT	3.674587753315591E-6	IMPLEMENTATION	2.2251869346321345E-6	TEST
// lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999640236590471	WITHOUT_CLASSIFICATION	3.530603663622615E-5	IMPLEMENTATION	2.0814708571248365E-7	DEFECT	1.834788575637547E-7	DOCUMENTATION	1.7657435885574977E-7	TEST	1.0210401442471122E-7	DESIGN
// refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999952835775036	WITHOUT_CLASSIFICATION	4.641544552862417E-6	IMPLEMENTATION	3.103789513687876E-8	DESIGN	2.4754034455423826E-8	TEST	9.558993347320807E-9	DOCUMENTATION	9.527020649750262E-9	DEFECT
// evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999990363812062	WITHOUT_CLASSIFICATION	5.823060622222991E-7	IMPLEMENTATION	2.778310459198562E-7	DESIGN	6.572454782056828E-8	DEFECT	1.9149748180598127E-8	DOCUMENTATION	1.8607389620894097E-8	TEST
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999988776097943	WITHOUT_CLASSIFICATION	1.0088219525100026E-6	IMPLEMENTATION	7.322287253340737E-8	DEFECT	1.8957799619459827E-8	TEST	1.4645606264268614E-8	DESIGN	6.741974572841508E-9	DOCUMENTATION
// orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.999991273291218	WITHOUT_CLASSIFICATION	6.036244284415419E-6	DESIGN	2.341853621696799E-6	DEFECT	3.0682586013364636E-7	IMPLEMENTATION	3.469280978750026E-8	TEST	7.092206067455685E-9	DOCUMENTATION
// for deprecated saveOrUpdateCopy()	WITHOUT_CLASSIFICATION	0.9999825940703577	WITHOUT_CLASSIFICATION	1.4289440614829099E-5	DESIGN	1.1576674411348077E-6	IMPLEMENTATION	1.126583880949208E-6	DEFECT	7.167398684239388E-7	DOCUMENTATION	1.1549783706120215E-7	TEST
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999996943590491	WITHOUT_CLASSIFICATION	2.5975991757277136E-7	IMPLEMENTATION	2.6295613060717127E-8	DESIGN	1.3316114298770111E-8	DEFECT	4.941064069025081E-9	TEST	1.3282418630049842E-9	DOCUMENTATION
//a proxy cannot be transient and it breaks ForeignKeys.isTransient	WITHOUT_CLASSIFICATION	0.9999843377078079	WITHOUT_CLASSIFICATION	1.0115144733868105E-5	DEFECT	4.300923640155733E-6	DESIGN	1.1237205552275027E-6	IMPLEMENTATION	9.677645788549115E-8	DOCUMENTATION	2.572680511654523E-8	TEST
// replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999990853537152	WITHOUT_CLASSIFICATION	7.096900483979745E-7	DESIGN	1.62817011235876E-7	IMPLEMENTATION	2.985504752638788E-8	TEST	7.438138347768162E-9	DOCUMENTATION	4.8460393067936684E-9	DEFECT
// static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995998209712	WITHOUT_CLASSIFICATION	3.529153788714817E-7	DESIGN	3.4921734182045943E-8	IMPLEMENTATION	6.79492581175776E-9	DEFECT	3.840674399592117E-9	TEST	1.706315484203309E-9	DOCUMENTATION
// handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.996989033409766	WITHOUT_CLASSIFICATION	0.003005820069948565	DESIGN	4.1671097322963154E-6	DEFECT	6.072866629758328E-7	IMPLEMENTATION	2.484839962751517E-7	TEST	1.2363989399567764E-7	DOCUMENTATION
// Actually the semantics of the next three are really "Bag" // Note that, unlike objects, collection insertions, updates, // deletions are not really remembered between flushes. We // just re-use the same Lists for convenience.	WITHOUT_CLASSIFICATION	0.9999853310490737	WITHOUT_CLASSIFICATION	7.966990814178372E-6	IMPLEMENTATION	3.089999563128192E-6	DEFECT	2.162507661346521E-6	DESIGN	1.3710215187937423E-6	TEST	7.843136887292712E-8	DOCUMENTATION
// Add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.999996761063073	WITHOUT_CLASSIFICATION	2.6435612120143186E-6	DESIGN	2.7744205308761165E-7	DOCUMENTATION	2.3890374977391267E-7	DEFECT	6.772157741850517E-8	IMPLEMENTATION	1.1308334588791394E-8	TEST
// continue loop	WITHOUT_CLASSIFICATION	0.999989466368595	WITHOUT_CLASSIFICATION	8.109077314417463E-6	DEFECT	2.0549335902056593E-6	DESIGN	2.4898568650180776E-7	IMPLEMENTATION	1.0754212961241667E-7	DOCUMENTATION	1.3092684282787646E-8	TEST
//sort the updates by fk	WITHOUT_CLASSIFICATION	0.9996719701809383	WITHOUT_CLASSIFICATION	2.4745425958244325E-4	IMPLEMENTATION	4.640799223000364E-5	DESIGN	2.0411944479758855E-5	TEST	1.1830868186312081E-5	DEFECT	1.9247545831634755E-6	DOCUMENTATION
//sort the updates by pk	WITHOUT_CLASSIFICATION	0.9997082803707741	WITHOUT_CLASSIFICATION	2.4738152631721515E-4	IMPLEMENTATION	2.902021519178323E-5	DESIGN	1.0736032079571243E-5	TEST	3.1190353431340947E-6	DEFECT	1.4628202943745371E-6	DOCUMENTATION
// the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.9999964763448412	WITHOUT_CLASSIFICATION	2.599861027328584E-6	TEST	3.583614091720765E-7	IMPLEMENTATION	2.845516659561921E-7	DESIGN	2.5424269399191466E-7	DEFECT	2.663836220962988E-8	DOCUMENTATION
// the map of batch numbers to EntityInsertAction lists	WITHOUT_CLASSIFICATION	0.9999994305489771	WITHOUT_CLASSIFICATION	4.377499647936289E-7	DESIGN	7.881911495410879E-8	DEFECT	4.561217554038315E-8	IMPLEMENTATION	3.820396856484669E-9	TEST	3.4493706964960045E-9	DOCUMENTATION
//optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.9992960067199314	WITHOUT_CLASSIFICATION	6.89682623393868E-4	DESIGN	1.364790764018145E-5	IMPLEMENTATION	3.5616968068292703E-7	DOCUMENTATION	1.5863216655189849E-7	DEFECT	1.4794718741440707E-7	TEST
// the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.9999909210795175	WITHOUT_CLASSIFICATION	8.520205465779622E-6	DESIGN	4.867909242321523E-7	IMPLEMENTATION	4.032927284915946E-8	TEST	1.7420653573157397E-8	DEFECT	1.417416601075136E-8	DOCUMENTATION
// remove the current element from insertions. It will be added back later.	WITHOUT_CLASSIFICATION	0.9997185941326654	WITHOUT_CLASSIFICATION	2.7223168251443603E-4	DESIGN	9.147629216351474E-6	DEFECT	1.5378294387088424E-8	DOCUMENTATION	7.433432187071762E-9	IMPLEMENTATION	3.743877188621106E-9	TEST
// the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.997476449031756	WITHOUT_CLASSIFICATION	0.002381341272637106	IMPLEMENTATION	1.2551218175304725E-4	DESIGN	1.0377359805384301E-5	DOCUMENTATION	6.192611906036986E-6	TEST	1.2754214236011045E-7	DEFECT
// There is already an existing batch for this type of entity. // Check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.9999972385505592	WITHOUT_CLASSIFICATION	2.4356273821309755E-6	DESIGN	3.2089622917472093E-7	TEST	3.259403720393484E-9	DOCUMENTATION	1.607043791065509E-9	DEFECT	5.938191455165046E-11	IMPLEMENTATION
// now rebuild the insertions list. There is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.9999964685578349	WITHOUT_CLASSIFICATION	3.4713180470675937E-6	DESIGN	4.375120033865959E-8	DEFECT	1.3223925956326031E-8	IMPLEMENTATION	1.6178268850726104E-9	TEST	1.531164936761651E-9	DOCUMENTATION
// the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.999993789141502	WITHOUT_CLASSIFICATION	3.7864324164030184E-6	DESIGN	2.3413880688771065E-6	TEST	3.683730019361129E-8	DOCUMENTATION	3.2366001400185736E-8	DEFECT	1.3834711094503749E-8	IMPLEMENTATION
// loop through all the associations of the current entity and make sure that they are processed // before the current batch number	WITHOUT_CLASSIFICATION	0.9999999442339418	WITHOUT_CLASSIFICATION	4.7346103199037015E-8	DESIGN	3.2532509927923568E-9	DEFECT	3.000776566336732E-9	IMPLEMENTATION	1.4042351553768601E-9	DOCUMENTATION	7.616922867412807E-10	TEST
// find the batch number associated with the current association, if any.	WITHOUT_CLASSIFICATION	0.9999271806350781	WITHOUT_CLASSIFICATION	3.5621138736757275E-5	DESIGN	1.649757709421711E-5	IMPLEMENTATION	1.3606084158078738E-5	TEST	6.432953764647475E-6	DOCUMENTATION	6.616111680232186E-7	DEFECT
// create a new batch for this type. The batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.9999983370642067	WITHOUT_CLASSIFICATION	1.6282057640164177E-6	DESIGN	2.0866458289791174E-8	DEFECT	8.6414639511411E-9	DOCUMENTATION	5.172072393152993E-9	TEST	5.0034456602275724E-11	IMPLEMENTATION
// loop through all the associated entities and make sure they have been // processed before the latest // batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.9999993455966301	WITHOUT_CLASSIFICATION	4.877882408999426E-7	TEST	1.4337403584140036E-7	DESIGN	1.9343311212662613E-8	IMPLEMENTATION	2.2677644275811305E-9	DEFECT	1.6300175198384455E-9	DOCUMENTATION
// since this entity will now be processed in the latest possible batch, // we can be assured that it will come after all other associations, // there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.9986621453458026	WITHOUT_CLASSIFICATION	8.723779337754464E-4	IMPLEMENTATION	4.3380928816138647E-4	DESIGN	2.920533825086769E-5	TEST	1.9517156452191416E-6	DEFECT	5.103783644940067E-7	DOCUMENTATION
//cascade to current collection elements	WITHOUT_CLASSIFICATION	0.9999227369303415	WITHOUT_CLASSIFICATION	5.923590499098837E-5	IMPLEMENTATION	1.6244624130870774E-5	DESIGN	1.1864312807077502E-6	DOCUMENTATION	5.323280369136995E-7	DEFECT	6.378121907281504E-8	TEST
//not really necessary, but good for consistency...	WITHOUT_CLASSIFICATION	0.9528994040878921	WITHOUT_CLASSIFICATION	0.04620308231639888	DESIGN	6.494057856225031E-4	DEFECT	2.0112481698078558E-4	IMPLEMENTATION	2.8047637159120635E-5	DOCUMENTATION	1.8935355946574316E-5	TEST
// we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.9999995013197812	WITHOUT_CLASSIFICATION	3.5135295275820804E-7	DESIGN	1.1116353274197904E-7	DEFECT	1.9257748066298283E-8	IMPLEMENTATION	1.5457484406553864E-8	DOCUMENTATION	1.4485007748704014E-9	TEST
//a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.9941634288891514	WITHOUT_CLASSIFICATION	0.005680645628394948	DESIGN	1.4897285383812914E-4	DEFECT	4.854201036148185E-6	IMPLEMENTATION	1.759633562660679E-6	DOCUMENTATION	3.3879401688575595E-7	TEST
// handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.999262711366741	WITHOUT_CLASSIFICATION	6.804540439320094E-4	DESIGN	5.513851694825471E-5	IMPLEMENTATION	8.068509586770112E-7	DOCUMENTATION	7.362963711717197E-7	TEST	1.529250486576845E-7	DEFECT
// Loaded entity instances, by EntityUniqueKey	WITHOUT_CLASSIFICATION	0.9999977078393772	WITHOUT_CLASSIFICATION	1.2332635883990154E-6	DEFECT	9.277707923517452E-7	DESIGN	9.157575301507383E-8	DOCUMENTATION	2.19365078762857E-8	IMPLEMENTATION	1.7613981345151714E-8	TEST
// Identity map of EntityEntry instances, by the entity instance	WITHOUT_CLASSIFICATION	0.9999992792317755	WITHOUT_CLASSIFICATION	5.136183337199932E-7	IMPLEMENTATION	1.360257176588985E-7	DEFECT	5.3498716589973804E-8	DESIGN	1.356365435853119E-8	DOCUMENTATION	4.06180212405584E-9	TEST
// Entity proxies, by EntityKey	WITHOUT_CLASSIFICATION	0.9999978125672745	WITHOUT_CLASSIFICATION	1.0026007896979343E-6	DEFECT	7.363845009892419E-7	IMPLEMENTATION	2.0138869923684132E-7	DESIGN	1.5553169922340985E-7	TEST	9.152703655395245E-8	DOCUMENTATION
// Snapshots of current database state for entities // that have *not* been loaded	WITHOUT_CLASSIFICATION	0.9998927380599482	WITHOUT_CLASSIFICATION	6.428375753237108E-5	IMPLEMENTATION	3.244476587948322E-5	DESIGN	9.941351921530442E-6	DEFECT	4.690583254573346E-7	TEST	1.2300639295255496E-7	DOCUMENTATION
// Identity map of array holder ArrayHolder instances, by the array instance	WITHOUT_CLASSIFICATION	0.999998752592016	WITHOUT_CLASSIFICATION	7.7823224920453E-7	IMPLEMENTATION	4.472923900446345E-7	DEFECT	1.1808976870922715E-8	DESIGN	7.1343219987287645E-9	DOCUMENTATION	2.9400459702999696E-9	TEST
// Collection wrappers, by the CollectionKey //key=CollectionKey, value=PersistentCollection	WITHOUT_CLASSIFICATION	0.9999861139405816	WITHOUT_CLASSIFICATION	8.665836637913717E-6	DESIGN	5.105669762506488E-6	DEFECT	6.780397210429312E-8	TEST	3.404273751429748E-8	DOCUMENTATION	1.270630826323463E-8	IMPLEMENTATION
// Set of EntityKeys of deleted objects	WITHOUT_CLASSIFICATION	0.9999982916817607	WITHOUT_CLASSIFICATION	1.0808826391861142E-6	DESIGN	4.991494492991318E-7	DEFECT	6.69585768994107E-8	TEST	3.730170167067241E-8	DOCUMENTATION	2.4025872296131138E-8	IMPLEMENTATION
// properties that we have tried to load, and not found in the database	WITHOUT_CLASSIFICATION	0.999980226351109	WITHOUT_CLASSIFICATION	1.9460445222710404E-5	DEFECT	2.929464549495932E-7	DESIGN	1.328911628511827E-8	IMPLEMENTATION	4.9211783177546994E-9	DOCUMENTATION	2.0469186221810745E-9	TEST
// A list of collection wrappers that were instantiating during result set // processing, that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9999547198724547	WITHOUT_CLASSIFICATION	3.099278008339226E-5	DEFECT	1.3720789740069267E-5	IMPLEMENTATION	5.090523368197804E-7	DESIGN	3.1290297363748733E-8	TEST	2.621508766233334E-8	DOCUMENTATION
// A container for collections we load up when the owning entity is not // yet loaded ... for now, this is purely transient!	WITHOUT_CLASSIFICATION	0.9778182518829504	WITHOUT_CLASSIFICATION	0.01300793393154248	IMPLEMENTATION	0.006267453918959644	DESIGN	0.002863960694007458	DEFECT	3.309786132917376E-5	TEST	9.301711210811418E-6	DOCUMENTATION
// Downgrade locks	WITHOUT_CLASSIFICATION	0.9999194055769278	WITHOUT_CLASSIFICATION	7.137239141513218E-5	IMPLEMENTATION	5.025102758312213E-6	DESIGN	2.0663043012519235E-6	DEFECT	1.75191353686054E-6	DOCUMENTATION	3.787110606035746E-7	TEST
// any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.999990934741848	WITHOUT_CLASSIFICATION	7.294830118022518E-6	DESIGN	1.6133257535078903E-6	DEFECT	7.853212031141897E-8	DOCUMENTATION	4.82504281177952E-8	IMPLEMENTATION	3.031973208451286E-8	TEST
//unwrap the object	WITHOUT_CLASSIFICATION	0.999993336492004	WITHOUT_CLASSIFICATION	3.4029342046583636E-6	DESIGN	1.4706775549317011E-6	IMPLEMENTATION	1.150829617124072E-6	DEFECT	5.27556197176504E-7	DOCUMENTATION	1.1151042219543252E-7	TEST
//initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.9999989668302989	WITHOUT_CLASSIFICATION	7.146669192131119E-7	IMPLEMENTATION	1.2626087181245918E-7	DESIGN	9.934231177004058E-8	DOCUMENTATION	6.548687991797619E-8	DEFECT	2.741271840164444E-8	TEST
//return the proxied object	WITHOUT_CLASSIFICATION	0.9998990873626095	WITHOUT_CLASSIFICATION	9.139220239641255E-5	DESIGN	7.739703816440355E-6	DEFECT	1.0906976146067441E-6	IMPLEMENTATION	6.421363932090831E-7	DOCUMENTATION	4.7897169921068166E-8	TEST
//overwrite old proxy	WITHOUT_CLASSIFICATION	0.999996306108372	WITHOUT_CLASSIFICATION	3.0792889862209345E-6	DESIGN	2.6984244967989876E-7	DEFECT	2.1696073795634224E-7	IMPLEMENTATION	8.788388521433077E-8	DOCUMENTATION	3.9915568952107986E-8	TEST
// early exit...	WITHOUT_CLASSIFICATION	0.9999931358357826	WITHOUT_CLASSIFICATION	2.49049970142375E-6	IMPLEMENTATION	2.145839870719826E-6	DESIGN	1.9693362355303627E-6	DEFECT	1.7248479003091358E-7	DOCUMENTATION	8.600361961025095E-8	TEST
// or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.9975875501156509	WITHOUT_CLASSIFICATION	0.0022750658390263876	DESIGN	1.2299763482016604E-4	DEFECT	1.2195530492156543E-5	IMPLEMENTATION	1.8738372404811443E-6	TEST	3.1704276987193976E-7	DOCUMENTATION
//treat it just like a new collection	WITHOUT_CLASSIFICATION	0.9990555589340943	WITHOUT_CLASSIFICATION	7.312528561274209E-4	DESIGN	1.6696197083877821E-4	IMPLEMENTATION	3.727635846997215E-5	DEFECT	6.458992200400245E-6	TEST	2.490888269175838E-6	DOCUMENTATION
//do this work only at the very highest level of the load //don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.9577666522528603	WITHOUT_CLASSIFICATION	0.0412127856223401	DESIGN	9.755891892447343E-4	DEFECT	2.773634297891881E-5	TEST	1.5239667060312234E-5	IMPLEMENTATION	1.996925515631473E-6	DOCUMENTATION
//note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.9999989232118003	WITHOUT_CLASSIFICATION	7.547944239991317E-7	IMPLEMENTATION	3.097806090650588E-7	DESIGN	5.133073554618475E-9	DOCUMENTATION	3.983001301431415E-9	TEST	3.0970919245499756E-9	DEFECT
//it might be an unwrapped collection reference! //try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.999386938577754	WITHOUT_CLASSIFICATION	5.879842511379539E-4	DESIGN	1.3798076209525263E-5	IMPLEMENTATION	1.0903844302530175E-5	DEFECT	2.2365726306436368E-7	DOCUMENTATION	1.5159333286394837E-7	TEST
/*public boolean isNonExistant(EntityKey key) {	WITHOUT_CLASSIFICATION	0.9994031215331352	WITHOUT_CLASSIFICATION	5.568955008267905E-4	DESIGN	3.6094430770679215E-5	DEFECT	2.007162785025859E-6	DOCUMENTATION	1.455413049834926E-6	TEST	4.2595943252085564E-7	IMPLEMENTATION
/*public boolean isNonExistant(EntityUniqueKey key) {	WITHOUT_CLASSIFICATION	0.9992694319686538	WITHOUT_CLASSIFICATION	6.846086763833229E-4	DESIGN	4.1567133358143874E-5	DEFECT	2.0241739981418924E-6	DOCUMENTATION	1.778739195171439E-6	TEST	5.893084114216566E-7	IMPLEMENTATION
// iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.9983389427715152	WITHOUT_CLASSIFICATION	0.0016447356476631404	DESIGN	1.4540052685760653E-5	IMPLEMENTATION	9.448702407344165E-7	TEST	8.179517783569305E-7	DOCUMENTATION	1.8706116724124314E-8	DEFECT
// does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.9999998769134437	WITHOUT_CLASSIFICATION	5.5302906432261174E-8	DOCUMENTATION	5.448599554205705E-8	DESIGN	1.0052105221239687E-8	TEST	2.5609656760956896E-9	DEFECT	6.845833774127968E-10	IMPLEMENTATION
//check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.9999811679125196	WITHOUT_CLASSIFICATION	1.3887838679383238E-5	DESIGN	3.805579038176985E-6	IMPLEMENTATION	5.464331499550353E-7	DEFECT	3.759225064954335E-7	DOCUMENTATION	2.16314106323936E-7	TEST
// otherwise, the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.999996896145978	WITHOUT_CLASSIFICATION	2.826073836663147E-6	DEFECT	1.8230432952862952E-7	DESIGN	7.072327517916157E-8	IMPLEMENTATION	2.1504913917508075E-8	DOCUMENTATION	3.2476668275023277E-9	TEST
// adds remove as a sort-of alias for delete...	WITHOUT_CLASSIFICATION	0.9999992248236965	WITHOUT_CLASSIFICATION	5.965332526957652E-7	IMPLEMENTATION	1.5085556160527916E-7	DESIGN	1.171444016279922E-8	TEST	1.1055644627708465E-8	DEFECT	5.017404427177155E-9	DOCUMENTATION
//bad cast	WITHOUT_CLASSIFICATION	0.9999639943073154	WITHOUT_CLASSIFICATION	3.374993054185847E-5	DESIGN	7.401740657083197E-7	TEST	6.475472302064182E-7	DOCUMENTATION	4.68748209043504E-7	DEFECT	3.992926377963932E-7	IMPLEMENTATION
//return lhsPersister.getSubclassPropertyColumnNames(property);	WITHOUT_CLASSIFICATION	0.9999599700860778	WITHOUT_CLASSIFICATION	3.937833622377198E-5	DESIGN	5.494763510728911E-7	DEFECT	6.284037130949809E-8	TEST	3.655320071574794E-8	DOCUMENTATION	2.7077753835859657E-9	IMPLEMENTATION
//property-refs for associations defined on a //component are not supported, so no need to slice	WITHOUT_CLASSIFICATION	0.999998407963854	WITHOUT_CLASSIFICATION	1.5054548921312248E-6	DESIGN	5.2272663492899506E-8	TEST	3.305378690317904E-8	DOCUMENTATION	9.91653775575517E-10	DEFECT	2.6314982358896446E-10	IMPLEMENTATION
//if there is no property-ref, assume the join //is to the subclass table (ie. the table of the //subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.9999999721667415	WITHOUT_CLASSIFICATION	2.692221566398056E-8	DESIGN	6.288705689383229E-10	DOCUMENTATION	1.8652833414869513E-10	TEST	9.055560183188392E-11	DEFECT	5.088280908580148E-12	IMPLEMENTATION
//handle a property-ref	WITHOUT_CLASSIFICATION	0.9999566251841703	WITHOUT_CLASSIFICATION	3.866883819410371E-5	DESIGN	2.7941588471538968E-6	DEFECT	1.3409233624962154E-6	IMPLEMENTATION	4.3866688031361374E-7	DOCUMENTATION	1.3222854564180955E-7	TEST
/*NativeSQLQueryReturn*/	WITHOUT_CLASSIFICATION	0.9968029334460011	WITHOUT_CLASSIFICATION	0.003048256278535572	DESIGN	1.064565004888908E-4	DEFECT	3.0309796326316995E-5	IMPLEMENTATION	9.856244533799378E-6	DOCUMENTATION	2.187734114371374E-6	TEST
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999876997618613	WITHOUT_CLASSIFICATION	1.1088845083456152E-5	DESIGN	4.980501979887413E-7	IMPLEMENTATION	3.711144299390845E-7	DEFECT	1.7792830696335908E-7	DOCUMENTATION	1.6430012026956045E-7	TEST
// why is all others non final ?	WITHOUT_CLASSIFICATION	0.9944769575595145	WITHOUT_CLASSIFICATION	0.005505925150603914	DESIGN	9.353948251290323E-6	IMPLEMENTATION	7.146137663467141E-6	DEFECT	4.6226463909242263E-7	DOCUMENTATION	1.54939327780891E-7	TEST
//this.forceCacheRefresh = forceCacheRefresh;	WITHOUT_CLASSIFICATION	0.9999913855019835	WITHOUT_CLASSIFICATION	7.525916544214413E-6	IMPLEMENTATION	3.624285342787536E-7	TEST	3.401023243382644E-7	DOCUMENTATION	2.5459868865956854E-7	DEFECT	1.3145192505261843E-7	DESIGN
// HELLA IMPORTANT OPTIMIZATION!!!	WITHOUT_CLASSIFICATION	0.99996875718762	WITHOUT_CLASSIFICATION	2.362160088782018E-5	DESIGN	5.314032134229537E-6	DEFECT	1.0845253185872817E-6	IMPLEMENTATION	8.779756426345792E-7	DOCUMENTATION	3.4467839674812887E-7	TEST
/*return that.type.equals(type) && 	WITHOUT_CLASSIFICATION	0.9999102908587811	WITHOUT_CLASSIFICATION	7.877768753678981E-5	DESIGN	8.395256985926725E-6	IMPLEMENTATION	2.025595866410993E-6	DEFECT	2.7296087021873483E-7	TEST	2.3763995953205214E-7	DOCUMENTATION
//Must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.9999599522196138	WITHOUT_CLASSIFICATION	3.813555487407173E-5	DESIGN	6.147423390127085E-7	DEFECT	5.367732825606811E-7	DOCUMENTATION	5.359107643093751E-7	TEST	2.2479912624058593E-7	IMPLEMENTATION
//take a snapshot	WITHOUT_CLASSIFICATION	0.9999159424610933	WITHOUT_CLASSIFICATION	3.741689903328263E-5	DEFECT	2.1251273072900182E-5	IMPLEMENTATION	1.915184231519912E-5	DESIGN	3.6434269638210106E-6	DOCUMENTATION	2.5940975215718723E-6	TEST
// do a check	WITHOUT_CLASSIFICATION	0.9998659509350426	WITHOUT_CLASSIFICATION	1.1709552292621405E-4	DESIGN	1.5131778531059467E-5	IMPLEMENTATION	9.021088937949366E-7	DEFECT	7.8341123796557E-7	DOCUMENTATION	1.3624336842509714E-7	TEST
// the owning entity may have been deleted and its identifier unset due to // identifier-rollback; in which case, try to look up its identifier from // the persistence context	WITHOUT_CLASSIFICATION	0.9999999791181863	WITHOUT_CLASSIFICATION	1.2294613915875283E-8	DESIGN	7.357914559433165E-9	DEFECT	1.1545713755569239E-9	IMPLEMENTATION	5.978919513801083E-11	DOCUMENTATION	1.492483663811041E-11	TEST
// do the work	WITHOUT_CLASSIFICATION	0.9999160643247688	WITHOUT_CLASSIFICATION	4.545309752381962E-5	DESIGN	2.0406074631740845E-5	IMPLEMENTATION	1.5097270227011142E-5	DEFECT	2.4275900927364057E-6	DOCUMENTATION	5.516427559167765E-7	TEST
// We've been here before	WITHOUT_CLASSIFICATION	0.9999844703875577	WITHOUT_CLASSIFICATION	5.676068359531247E-6	DESIGN	4.878280788596183E-6	IMPLEMENTATION	2.201904924091451E-6	DEFECT	1.551606946400715E-6	DOCUMENTATION	1.2217514237044713E-6	TEST
// it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.9999984728697611	WITHOUT_CLASSIFICATION	1.4290319176664246E-6	DESIGN	4.573512104374173E-8	TEST	2.8956041601621037E-8	DEFECT	1.6213749605730527E-8	DOCUMENTATION	7.193409037586957E-9	IMPLEMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999160643247688	WITHOUT_CLASSIFICATION	4.545309752381962E-5	DESIGN	2.0406074631740845E-5	IMPLEMENTATION	1.5097270227011142E-5	DEFECT	2.4275900927364057E-6	DOCUMENTATION	5.516427559167765E-7	TEST
// if either its role changed,	WITHOUT_CLASSIFICATION	0.9999998849370982	WITHOUT_CLASSIFICATION	1.1007410496818001E-7	DESIGN	2.333571061274029E-9	TEST	1.424717778434094E-9	DEFECT	1.1084251336256092E-9	IMPLEMENTATION	1.2208304063188785E-10	DOCUMENTATION
// or its key changed	WITHOUT_CLASSIFICATION	0.9999994186687472	WITHOUT_CLASSIFICATION	2.4417770758387056E-7	DEFECT	1.8054496243253375E-7	DESIGN	1.331858227651489E-7	IMPLEMENTATION	1.6048616800997954E-8	TEST	7.374143146291506E-9	DOCUMENTATION
// we will need to create new entries	WITHOUT_CLASSIFICATION	0.9999270257205628	WITHOUT_CLASSIFICATION	6.760398384178889E-5	IMPLEMENTATION	3.7705011830839015E-6	DESIGN	1.0664710892522588E-6	DOCUMENTATION	4.717732396620527E-7	TEST	6.155008345718724E-8	DEFECT
// we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.9995175598561081	WITHOUT_CLASSIFICATION	4.717515871881156E-4	IMPLEMENTATION	7.15617280451087E-6	DESIGN	1.6094217565475557E-6	DEFECT	1.0696579554491061E-6	DOCUMENTATION	8.533041872575525E-7	TEST
// force initialize!	WITHOUT_CLASSIFICATION	0.9999997559519828	WITHOUT_CLASSIFICATION	1.5418796918855816E-7	IMPLEMENTATION	3.409610529361762E-8	DEFECT	2.8482631709454093E-8	DESIGN	1.8520621617852665E-8	DOCUMENTATION	8.760689420303774E-9	TEST
// else if it's elements changed	WITHOUT_CLASSIFICATION	0.9999994146670138	WITHOUT_CLASSIFICATION	5.127442517685026E-7	IMPLEMENTATION	4.843164336504663E-8	DESIGN	1.5759644061303688E-8	DEFECT	7.350312570542992E-9	TEST	1.047134458525936E-9	DOCUMENTATION
//ATTRIBUTES MAINTAINED BETWEEN FLUSH CYCLES	WITHOUT_CLASSIFICATION	0.9996538466370003	WITHOUT_CLASSIFICATION	2.4143857653098388E-4	DESIGN	8.641525243445644E-5	IMPLEMENTATION	8.496617544600883E-6	DOCUMENTATION	5.9885895576903935E-6	DEFECT	3.8143269321656355E-6	TEST
// session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.9999992058729685	WITHOUT_CLASSIFICATION	5.221557522138117E-7	IMPLEMENTATION	1.8872825252350856E-7	DESIGN	6.134322629836945E-8	DEFECT	1.0979911773031108E-8	TEST	1.091988856075356E-8	DOCUMENTATION
// allow the CollectionSnapshot to be serialized	WITHOUT_CLASSIFICATION	0.9978039112505439	WITHOUT_CLASSIFICATION	0.0013385217519259662	DESIGN	8.53263660536649E-4	IMPLEMENTATION	3.812098376116405E-6	DEFECT	2.5384585604036844E-7	DOCUMENTATION	2.3739276127555183E-7	TEST
// ATTRIBUTES USED ONLY DURING FLUSH CYCLE	WITHOUT_CLASSIFICATION	0.9998722218632827	WITHOUT_CLASSIFICATION	6.7776541532617E-5	DESIGN	5.220853004055405E-5	IMPLEMENTATION	3.5622130953517445E-6	DEFECT	3.3089541798403366E-6	DOCUMENTATION	9.218978688616617E-7	TEST
// "current" means the reference that was found during flush() 	WITHOUT_CLASSIFICATION	0.9999986406139475	WITHOUT_CLASSIFICATION	1.3205052712930385E-6	DEFECT	1.8095027625492164E-8	DESIGN	1.5211983545494547E-8	DOCUMENTATION	5.13442028359002E-9	IMPLEMENTATION	4.393497420446964E-10	TEST
// "loaded" means the reference that is consistent  // with the current database state	WITHOUT_CLASSIFICATION	0.9999850111898974	WITHOUT_CLASSIFICATION	1.169514628606373E-5	DEFECT	1.8874761067169565E-6	IMPLEMENTATION	1.3333862329664358E-6	DESIGN	5.4374870623368405E-8	TEST	1.842660638098092E-8	DOCUMENTATION
// during flush, we navigate the object graph to // collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.9995029451274492	WITHOUT_CLASSIFICATION	4.4413572565429725E-4	DESIGN	5.1132514318932716E-5	IMPLEMENTATION	8.086805367883785E-7	TEST	5.211898510344984E-7	DEFECT	4.567621897227037E-7	DOCUMENTATION
// if we instantiate a collection during the flush() process, // we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.9999988921175659	WITHOUT_CLASSIFICATION	9.955176317275741E-7	DESIGN	7.526379820726408E-8	DEFECT	3.6131186120738215E-8	TEST	9.268741929801801E-10	DOCUMENTATION	4.2943705658769175E-11	IMPLEMENTATION
// new collections that get found + wrapped // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999013394809043	WITHOUT_CLASSIFICATION	9.695439607484479E-5	DESIGN	1.5441266987165524E-6	IMPLEMENTATION	1.4514587517186126E-7	DEFECT	1.4563965429671464E-8	TEST	2.2864816078623445E-9	DOCUMENTATION
//a newly wrapped collection is NOT dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.9895970991526115	WITHOUT_CLASSIFICATION	0.010394598337236322	DESIGN	6.019400356110007E-6	DEFECT	2.0057898332939088E-6	IMPLEMENTATION	1.6839895168441875E-7	TEST	1.0892101112776E-7	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9945823704944323	WITHOUT_CLASSIFICATION	0.002972843041400033	IMPLEMENTATION	0.0019542720303210594	DESIGN	3.9253391853514424E-4	DEFECT	6.85784215362567E-5	DOCUMENTATION	2.9402093775324722E-5	TEST
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9945823704944323	WITHOUT_CLASSIFICATION	0.002972843041400033	IMPLEMENTATION	0.0019542720303210594	DESIGN	3.9253391853514424E-4	DEFECT	6.85784215362567E-5	DOCUMENTATION	2.9402093775324722E-5	TEST
// detached collections that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999988748298771	WITHOUT_CLASSIFICATION	9.405945896595361E-7	DESIGN	9.932945908342146E-8	IMPLEMENTATION	8.424589068609736E-8	DEFECT	6.34248206830476E-10	TEST	3.659351787764374E-10	DOCUMENTATION
//optimization	WITHOUT_CLASSIFICATION	0.9997951729949991	WITHOUT_CLASSIFICATION	1.7417645868904896E-4	DEFECT	1.1335212862755299E-5	IMPLEMENTATION	1.1050143801057458E-5	DOCUMENTATION	6.457483735871594E-6	DESIGN	1.8077059122182826E-6	TEST
//optimization //optimization	WITHOUT_CLASSIFICATION	0.9999760548371802	WITHOUT_CLASSIFICATION	2.194256935679513E-5	DEFECT	1.3683774262315195E-6	DOCUMENTATION	2.410830440488878E-7	DESIGN	2.3764316539067226E-7	IMPLEMENTATION	1.554898272571207E-7	TEST
//re-snapshot	WITHOUT_CLASSIFICATION	0.9998311460738013	WITHOUT_CLASSIFICATION	1.4506228004026206E-4	DESIGN	1.4357278438759105E-5	IMPLEMENTATION	3.926651952531401E-6	DEFECT	2.843831188382309E-6	DOCUMENTATION	2.663884578749523E-6	TEST
// for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.9999996899692333	WITHOUT_CLASSIFICATION	1.5020488589158793E-7	DESIGN	8.391222055323107E-8	IMPLEMENTATION	5.57070528007306E-8	DOCUMENTATION	1.4686032612461834E-8	DEFECT	5.520574824309526E-9	TEST
//NOTE: this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.5164176100715759	WITHOUT_CLASSIFICATION	0.34288066989339455	DESIGN	0.14030540173900213	DEFECT	2.4531739915356393E-4	TEST	1.2390669520629495E-4	DOCUMENTATION	2.7094201667497553E-5	IMPLEMENTATION
//memory optimization	WITHOUT_CLASSIFICATION	0.9999813125612349	WITHOUT_CLASSIFICATION	1.5528600589895377E-5	DEFECT	1.0721973970598372E-6	IMPLEMENTATION	9.968917221079763E-7	DESIGN	9.184995642866796E-7	DOCUMENTATION	1.712494916226585E-7	TEST
// use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999912956269822	WITHOUT_CLASSIFICATION	6.339409904321958E-6	DESIGN	2.310885443032665E-6	DEFECT	3.804118765608101E-8	DOCUMENTATION	1.5553577884119523E-8	IMPLEMENTATION	4.829050115719811E-10	TEST
// copied from Session:	WITHOUT_CLASSIFICATION	0.9999990287010354	WITHOUT_CLASSIFICATION	5.571776083914473E-7	DESIGN	3.3428497427884726E-7	DEFECT	4.8163045656313206E-8	IMPLEMENTATION	1.780408589780993E-8	TEST	1.3869250445196826E-8	DOCUMENTATION
// this should not happen since the DTD prevents it	WITHOUT_CLASSIFICATION	0.9999633407776249	WITHOUT_CLASSIFICATION	1.6296431755933466E-5	DEFECT	1.4838919173739263E-5	DESIGN	4.386840616045007E-6	IMPLEMENTATION	8.17063941404461E-7	TEST	3.1996688804822996E-7	DOCUMENTATION
// JoinProcessor needs to know if the where clause fragment came from a dynamic filter or not so it // can put the where clause fragment in the right place in the SQL AST.   'hasFilterCondition' keeps track // of that fact.	WITHOUT_CLASSIFICATION	0.9999785362790186	WITHOUT_CLASSIFICATION	2.1456429660011734E-5	DESIGN	4.387433607293251E-9	DEFECT	2.4710429359313972E-9	DOCUMENTATION	3.5652102454302623E-10	TEST	7.632378448194809E-11	IMPLEMENTATION
// the current join represents the join between a many-to-many association table // and its "target" table.  Here we need to apply any additional filters // defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.9999976766957411	WITHOUT_CLASSIFICATION	2.117222748719482E-6	DESIGN	1.2014316857790815E-7	DOCUMENTATION	8.541919147626304E-8	IMPLEMENTATION	3.5787914150218507E-10	TEST	1.6127105538343063E-10	DEFECT
//check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.9998017205032611	WITHOUT_CLASSIFICATION	1.961014085435029E-4	DESIGN	1.1914775796742779E-6	IMPLEMENTATION	4.878819073904334E-7	DEFECT	4.306881571021753E-7	DOCUMENTATION	6.804055109607697E-8	TEST
//values is not null and is checkable, we'll look deeper	WITHOUT_CLASSIFICATION	0.9905695194088174	WITHOUT_CLASSIFICATION	0.009293320231503172	DESIGN	1.2688822679452475E-4	DEFECT	8.843367567932393E-6	IMPLEMENTATION	9.910184399940353E-7	TEST	4.3774687695540034E-7	DOCUMENTATION
//for non null args, check for components and elements containing components	WITHOUT_CLASSIFICATION	0.9999886827517073	WITHOUT_CLASSIFICATION	1.1285990420446614E-5	DESIGN	2.3351420035454556E-8	IMPLEMENTATION	4.663011705186888E-9	DOCUMENTATION	2.267730708416766E-9	DEFECT	9.757098650129845E-10	TEST
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9995379049936901	WITHOUT_CLASSIFICATION	4.221397328731619E-4	DESIGN	3.5851673359140174E-5	IMPLEMENTATION	2.677734585568395E-6	DOCUMENTATION	1.0220687848577659E-6	TEST	4.0379670727041725E-7	DEFECT
//persistent collections may have components	WITHOUT_CLASSIFICATION	0.9999966573599463	WITHOUT_CLASSIFICATION	3.17573461315401E-6	DESIGN	1.1035536106832673E-7	IMPLEMENTATION	2.985121869756484E-8	TEST	2.4064309892613103E-8	DEFECT	2.6345506828544517E-9	DOCUMENTATION
//check for all components values in the collection	WITHOUT_CLASSIFICATION	0.9999844034602485	WITHOUT_CLASSIFICATION	1.5387010151369688E-5	DESIGN	1.522033780536351E-7	DEFECT	3.433825696892331E-8	IMPLEMENTATION	1.9360769564930645E-8	DOCUMENTATION	3.6271956615783753E-9	TEST
/* will check current level if some of them are not null	WITHOUT_CLASSIFICATION	0.9998029613590301	WITHOUT_CLASSIFICATION	7.529869803629104E-5	IMPLEMENTATION	7.503960678869053E-5	DESIGN	2.3965646822278693E-5	DOCUMENTATION	1.9927327986998527E-5	DEFECT	2.8073613355916924E-6	TEST
//do the test	WITHOUT_CLASSIFICATION	0.9990521131989745	WITHOUT_CLASSIFICATION	9.387459542097319E-4	TEST	4.263538307313528E-6	DOCUMENTATION	2.6551030290916474E-6	IMPLEMENTATION	1.893459777215321E-6	DESIGN	3.2874570208374424E-7	DEFECT
// if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.9999999731958062	WITHOUT_CLASSIFICATION	1.6576142795427685E-8	DESIGN	6.2822897642198065E-9	DEFECT	2.6817680705040626E-9	IMPLEMENTATION	7.370479929099609E-10	TEST	5.269452191766286E-10	DOCUMENTATION
//unwrap it	WITHOUT_CLASSIFICATION	0.9999916768587376	WITHOUT_CLASSIFICATION	3.4174148691807083E-6	IMPLEMENTATION	2.204077490132136E-6	DESIGN	2.0211691421386626E-6	DEFECT	4.091385781157109E-7	TEST	2.7134118284441714E-7	DOCUMENTATION
// See if the entity is already bound to this session, if not look at the // entity identifier and assume that the entity is persistent if the // id is not "unsaved" (that is, we rely on foreign keys to keep // database integrity)	WITHOUT_CLASSIFICATION	0.9999987798946827	WITHOUT_CLASSIFICATION	7.070400254755605E-7	DEFECT	4.927003361317567E-7	DESIGN	1.0368567657081365E-8	IMPLEMENTATION	9.094575538123237E-9	DOCUMENTATION	9.018125868922832E-10	TEST
// an unfetched association can only point to // an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.9999996187258349	WITHOUT_CLASSIFICATION	2.409328573152778E-7	IMPLEMENTATION	9.873615005154575E-8	DESIGN	1.6973486381352787E-8	DEFECT	1.634872519170479E-8	DOCUMENTATION	8.282946269559092E-9	TEST
// let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999984137437997	WITHOUT_CLASSIFICATION	8.678874051964902E-7	IMPLEMENTATION	6.735822645916819E-7	DESIGN	2.536389897955626E-8	DOCUMENTATION	1.548086541951481E-8	DEFECT	3.941766296337554E-9	TEST
// let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999935422523698	WITHOUT_CLASSIFICATION	3.4388245721667175E-6	IMPLEMENTATION	2.9474258418832753E-6	DESIGN	4.149929413749057E-8	DOCUMENTATION	2.547554007762165E-8	DEFECT	4.522381744789213E-9	TEST
// we use the assumed value, if there is one, to avoid hitting // the database	WITHOUT_CLASSIFICATION	0.9999997339433155	WITHOUT_CLASSIFICATION	1.710194895876339E-7	DESIGN	8.495911952440814E-8	DEFECT	9.238266669424353E-9	TEST	5.247769487849806E-10	IMPLEMENTATION	3.1503184214479426E-10	DOCUMENTATION
// hit the database, after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.9420022093517727	WITHOUT_CLASSIFICATION	0.05742338845634214	DESIGN	3.8278550511546884E-4	DEFECT	1.8504297547497568E-4	IMPLEMENTATION	4.143195111219502E-6	TEST	2.430516183545144E-6	DOCUMENTATION
// context-entity-identifier returns null explicitly if the entity // is not associated with the persistence context; so make some // deeper checks...	WITHOUT_CLASSIFICATION	0.9999902279120164	WITHOUT_CLASSIFICATION	8.920432487638976E-6	DESIGN	5.052918279995817E-7	TEST	2.601171064385313E-7	IMPLEMENTATION	5.9533853048985164E-8	DEFECT	2.6712708416716422E-8	DOCUMENTATION
//int count = 0;	WITHOUT_CLASSIFICATION	0.9999577438377997	WITHOUT_CLASSIFICATION	3.7713432346355436E-5	DEFECT	2.347334240899917E-6	DESIGN	1.0855310730149594E-6	DOCUMENTATION	7.695524062857645E-7	IMPLEMENTATION	3.4031213374282435E-7	TEST
//the first key found after the given key	WITHOUT_CLASSIFICATION	0.999988627200387	WITHOUT_CLASSIFICATION	9.71786333209485E-6	IMPLEMENTATION	6.206520425240469E-7	DOCUMENTATION	4.588950466334823E-7	DESIGN	4.1982633646643703E-7	TEST	1.55562855307139E-7	DEFECT
//checkForEnd = false;	WITHOUT_CLASSIFICATION	0.9999888425351582	WITHOUT_CLASSIFICATION	8.182206901406775E-6	DESIGN	1.993255546153545E-6	IMPLEMENTATION	4.968972708577109E-7	DEFECT	3.7809678020181264E-7	DOCUMENTATION	1.0700834318392758E-7	TEST
//count++;	WITHOUT_CLASSIFICATION	0.9992757611989347	WITHOUT_CLASSIFICATION	4.3727991509365976E-4	DESIGN	2.5341525401978296E-4	DEFECT	2.128333480416079E-5	DOCUMENTATION	7.214856619303945E-6	IMPLEMENTATION	5.045440528350033E-6	TEST
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9977246649262247	WITHOUT_CLASSIFICATION	0.002193858745125236	DESIGN	4.592222543925139E-5	IMPLEMENTATION	1.5646332120551237E-5	TEST	1.0459303155867145E-5	DEFECT	9.448467934359043E-6	DOCUMENTATION
//we ran out of keys to try	WITHOUT_CLASSIFICATION	0.9998315634058423	WITHOUT_CLASSIFICATION	1.2506558277546785E-4	DESIGN	3.579196051024574E-5	DEFECT	3.7886483402615642E-6	IMPLEMENTATION	2.7697301702700763E-6	DOCUMENTATION	1.0206723613736765E-6	TEST
//first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.9999993829342271	WITHOUT_CLASSIFICATION	4.845386171917513E-7	IMPLEMENTATION	8.599035706628386E-8	DEFECT	2.2428705157260852E-8	DESIGN	1.222990970363499E-8	DOCUMENTATION	1.1878183837410305E-8	TEST
//the first id found after the given id	WITHOUT_CLASSIFICATION	0.9999632760281546	WITHOUT_CLASSIFICATION	3.141771729625841E-5	IMPLEMENTATION	2.4409112856257727E-6	DESIGN	1.5445769255940876E-6	TEST	1.0962800217141467E-6	DOCUMENTATION	2.2448631601651833E-7	DEFECT
//we ran out of ids to try	WITHOUT_CLASSIFICATION	0.9995015470751327	WITHOUT_CLASSIFICATION	4.236324782857829E-4	DESIGN	5.6687792946758894E-5	DEFECT	1.4967120017772268E-5	IMPLEMENTATION	2.2859248555981917E-6	DOCUMENTATION	8.796087612030026E-7	TEST
// look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.9999999421609558	WITHOUT_CLASSIFICATION	4.418748170689289E-8	IMPLEMENTATION	5.957414875982321E-9	DEFECT	3.526331198313449E-9	DESIGN	3.3150157983264605E-9	TEST	8.528006534729733E-10	DOCUMENTATION
// ignore this row of results! Note the early exit	WITHOUT_CLASSIFICATION	0.9999812335734669	WITHOUT_CLASSIFICATION	1.859934203835347E-5	DEFECT	1.1117182910828571E-7	DESIGN	3.0985978521338446E-8	TEST	1.4524362361772822E-8	IMPLEMENTATION	1.0402324844239783E-8	DOCUMENTATION
// initialize this collection	WITHOUT_CLASSIFICATION	0.9999839260013887	WITHOUT_CLASSIFICATION	1.560743540149867E-5	DESIGN	2.65387482776779E-7	TEST	9.605334743207362E-8	IMPLEMENTATION	6.154638632854969E-8	DOCUMENTATION	4.357599325456601E-8	DEFECT
// create one	WITHOUT_CLASSIFICATION	0.9999980406375042	WITHOUT_CLASSIFICATION	1.5115761911712779E-6	DESIGN	1.7762123915748001E-7	DEFECT	1.6811547606621614E-7	IMPLEMENTATION	7.010601291649477E-8	DOCUMENTATION	3.194357664531448E-8	TEST
// warning: can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.9999760487989664	WITHOUT_CLASSIFICATION	2.14559673923779E-5	DEFECT	2.355590608629519E-6	DESIGN	7.628712800232562E-8	IMPLEMENTATION	6.150232916961076E-8	DOCUMENTATION	1.8535754892665254E-9	TEST
// there were no queued additions // and the role has a cache	WITHOUT_CLASSIFICATION	0.9999434016351816	WITHOUT_CLASSIFICATION	5.6558791612443994E-5	DESIGN	2.659405352722969E-8	IMPLEMENTATION	6.075334637736856E-9	DOCUMENTATION	5.507764101964268E-9	DEFECT	1.3960537360268566E-9	TEST
// and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.9999992959488619	WITHOUT_CLASSIFICATION	5.455707849818145E-7	DESIGN	1.433135749702751E-7	DEFECT	8.633676755223515E-9	TEST	4.8521648342552166E-9	DOCUMENTATION	1.6809364296126297E-9	IMPLEMENTATION
// some filters affecting the collection are enabled on the session, so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.9996808113404683	WITHOUT_CLASSIFICATION	3.191072480184669E-4	DESIGN	2.982292299779791E-8	DEFECT	2.5886131656344638E-8	IMPLEMENTATION	2.3696531246413375E-8	TEST	2.0059273659353002E-9	DOCUMENTATION
// cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997829874800274	WITHOUT_CLASSIFICATION	1.8602078041028204E-4	DESIGN	2.0920384171422582E-5	IMPLEMENTATION	7.308601320214918E-6	DEFECT	1.966258360698289E-6	DOCUMENTATION	7.96495710192381E-7	TEST
// loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999985903848222	WITHOUT_CLASSIFICATION	1.2562891405599167E-6	DEFECT	7.542119844502337E-8	IMPLEMENTATION	5.351514859956158E-8	DESIGN	1.965091361235609E-8	TEST	4.738776689362977E-9	DOCUMENTATION
// Collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999894371317951	WITHOUT_CLASSIFICATION	5.8492860812810615E-6	DESIGN	4.277816121590666E-6	DEFECT	1.6587894828149003E-7	IMPLEMENTATION	1.3787755079266552E-7	TEST	1.3200950314602358E-7	DOCUMENTATION
// simple cache of param metadata based on query string.  Ideally, the // original "user-supplied query" string should be used to retreive this // metadata (i.e., not the para-list-expanded query string) to avoid // unnecessary cache entries. // Used solely for caching param metadata for native-sql queries, see // getSQLParameterMetadata() for a discussion as to why...	WITHOUT_CLASSIFICATION	0.9726484505598584	WITHOUT_CLASSIFICATION	0.027320777574359908	DESIGN	3.076112293126996E-5	DEFECT	1.0053502435185456E-8	IMPLEMENTATION	3.454838488456842E-10	DOCUMENTATION	3.4386421836339113E-10	TEST
// the cache of the actual plans...	WITHOUT_CLASSIFICATION	0.9999975297662819	WITHOUT_CLASSIFICATION	2.2057093126629704E-6	IMPLEMENTATION	2.2020637706414842E-7	DESIGN	2.7102445363872748E-8	DOCUMENTATION	1.5233004191441053E-8	DEFECT	1.9825788346675812E-9	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9982414523766154	WITHOUT_CLASSIFICATION	0.0016475936779793072	DESIGN	7.351568261524677E-5	IMPLEMENTATION	1.679939678418562E-5	DOCUMENTATION	1.6057984814387536E-5	DEFECT	4.580881191449248E-6	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9982414523766154	WITHOUT_CLASSIFICATION	0.0016475936779793072	DESIGN	7.351568261524677E-5	IMPLEMENTATION	1.679939678418562E-5	DOCUMENTATION	1.6057984814387536E-5	DEFECT	4.580881191449248E-6	TEST
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999997161114866	WITHOUT_CLASSIFICATION	2.5107016061385275E-7	DESIGN	1.1276848159930375E-8	DOCUMENTATION	1.074864589642703E-8	DEFECT	6.682674111280941E-9	IMPLEMENTATION	4.110184587451681E-9	TEST
// for native-sql queries, the param metadata is determined outside // any relation to a query plan, because query plan creation and/or // retreival for a native-sql query depends on all of the return // types having been set, which might not be the case up-front when // param metadata would be most useful	WITHOUT_CLASSIFICATION	0.9556367189820915	WITHOUT_CLASSIFICATION	0.04410265008198758	DESIGN	2.606089486970836E-4	DEFECT	1.713234517838946E-8	IMPLEMENTATION	3.344997305126849E-9	DOCUMENTATION	1.509881391838953E-9	TEST
// don't care...	WITHOUT_CLASSIFICATION	0.9999560304214712	WITHOUT_CLASSIFICATION	3.5121163799547464E-5	DESIGN	7.507227050914226E-6	DEFECT	9.91082441257277E-7	IMPLEMENTATION	2.1716615875759724E-7	DOCUMENTATION	1.3293907831857384E-7	TEST
// Recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998355941260672	WITHOUT_CLASSIFICATION	8.244832472809295E-5	DESIGN	5.0616742676535055E-5	IMPLEMENTATION	2.5518132600335604E-5	DEFECT	5.173643065793497E-6	DOCUMENTATION	6.490308620537774E-7	TEST
// don't care...	WITHOUT_CLASSIFICATION	0.9999560304214712	WITHOUT_CLASSIFICATION	3.5121163799547464E-5	DESIGN	7.507227050914226E-6	DEFECT	9.91082441257277E-7	IMPLEMENTATION	2.1716615875759724E-7	DOCUMENTATION	1.3293907831857384E-7	TEST
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9971675312029876	WITHOUT_CLASSIFICATION	0.0020046454437732254	DESIGN	4.990660594898727E-4	DEFECT	3.036289156538677E-4	IMPLEMENTATION	2.4315361709591912E-5	TEST	8.130163858285565E-7	DOCUMENTATION
// break the outer loop !!!	WITHOUT_CLASSIFICATION	0.9999994726497015	WITHOUT_CLASSIFICATION	3.2355105316574155E-7	DEFECT	1.3208065651908604E-7	DESIGN	5.332033130932583E-8	IMPLEMENTATION	1.0806151297753205E-8	TEST	7.592106236548863E-9	DOCUMENTATION
// named parameter	WITHOUT_CLASSIFICATION	0.9997733190601008	WITHOUT_CLASSIFICATION	2.1103289667480935E-4	DESIGN	1.4227087718314572E-5	IMPLEMENTATION	6.948003363460483E-7	TEST	6.040166438159613E-7	DEFECT	1.221385258666853E-7	DOCUMENTATION
// could be either an ordinal or JPA-positional parameter	WITHOUT_CLASSIFICATION	0.999972742882293	WITHOUT_CLASSIFICATION	2.6949337438257687E-5	DESIGN	2.4637539125176463E-7	DEFECT	4.912777842099987E-8	IMPLEMENTATION	7.072819177014572E-9	DOCUMENTATION	5.204279869985085E-9	TEST
// a peek ahead showed this as an JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999947313372394	WITHOUT_CLASSIFICATION	5.2075615346331964E-6	DESIGN	1.6785321127394878E-8	DEFECT	1.5978621072118217E-8	IMPLEMENTATION	1.5889282903203088E-8	DOCUMENTATION	1.2448000818561179E-8	TEST
// make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.9999987095456159	WITHOUT_CLASSIFICATION	1.0342786573767886E-6	DESIGN	1.424278797416438E-7	DEFECT	1.083209173092817E-7	TEST	5.0705133471415855E-9	DOCUMENTATION	3.56416452474463E-10	IMPLEMENTATION
// pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9999980671497664	WITHOUT_CLASSIFICATION	1.9227055048004193E-6	DESIGN	7.568533932852E-9	IMPLEMENTATION	1.4433422620717872E-9	DOCUMENTATION	6.95694475192366E-10	TEST	4.371581229106777E-10	DEFECT
// perform the actual work	WITHOUT_CLASSIFICATION	0.9999989631725181	WITHOUT_CLASSIFICATION	4.957680200735495E-7	DESIGN	2.7371863713197263E-7	DEFECT	2.1582955026008518E-7	IMPLEMENTATION	4.7481698392346996E-8	DOCUMENTATION	4.029575909477897E-9	TEST
// if everything went ok, commit the transaction and close the obtained // connection handle...	WITHOUT_CLASSIFICATION	0.9999997173180863	WITHOUT_CLASSIFICATION	2.3122548446325234E-7	IMPLEMENTATION	4.7743385871615815E-8	DESIGN	2.2602736321461924E-9	DOCUMENTATION	1.4206829294187097E-9	TEST	3.208671905207264E-11	DEFECT
// at some point the processing went bad, so we need to: //      1) make sure the connection handle gets released //      2) try to cleanup the JTA context as much as possible	WITHOUT_CLASSIFICATION	0.9989996760040217	WITHOUT_CLASSIFICATION	9.308059042800949E-4	DESIGN	3.420627619380916E-5	DOCUMENTATION	1.67079019016266E-5	IMPLEMENTATION	1.1715229826413021E-5	TEST	6.8886837762547725E-6	DEFECT
// finally handle the exception	WITHOUT_CLASSIFICATION	0.9999927236586907	WITHOUT_CLASSIFICATION	3.95388961509507E-6	DEFECT	3.146788098942486E-6	DESIGN	1.3587124790834393E-7	IMPLEMENTATION	3.619812848460743E-8	DOCUMENTATION	3.5942187801458E-9	TEST
// a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.9990612103735599	WITHOUT_CLASSIFICATION	9.387670542633085E-4	DESIGN	1.3318814885838424E-8	DEFECT	7.275561164531286E-9	IMPLEMENTATION	1.2485781469622471E-9	DOCUMENTATION	7.292225276080227E-10	TEST
//saveOrUpdateCopy() is deprecated!	WITHOUT_CLASSIFICATION	0.9999499899040476	WITHOUT_CLASSIFICATION	3.449527421715879E-5	DESIGN	1.4818111737094311E-5	DEFECT	3.8188982243442385E-7	DOCUMENTATION	1.7677749093499004E-7	TEST	1.3804268471565886E-7	IMPLEMENTATION
// collectionPersister should not be null, but we don't want to throw // an exception if it is null	WITHOUT_CLASSIFICATION	0.9997071356448523	WITHOUT_CLASSIFICATION	1.9536441733123541E-4	DESIGN	9.657084235018162E-5	DEFECT	9.281756186999643E-7	TEST	7.117996237943886E-10	DOCUMENTATION	2.0804798663690478E-10	IMPLEMENTATION
// otherwise a null or brand new collection // this will also (inefficiently) handle arrays, which // have no snapshot, so we can't do any better //processArrayOrNewCollection(collection, type);	WITHOUT_CLASSIFICATION	0.7014741022102345	DESIGN	0.2985246366518859	WITHOUT_CLASSIFICATION	1.1139415150105337E-6	DOCUMENTATION	9.625115756551168E-8	DEFECT	3.01252819825606E-8	IMPLEMENTATION	2.081992507279E-8	TEST
// a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.9999242999933684	WITHOUT_CLASSIFICATION	7.569270270572991E-5	DESIGN	5.4991899172976696E-9	DEFECT	1.0575800800965702E-9	IMPLEMENTATION	7.172406759678719E-10	DOCUMENTATION	2.991509083755394E-11	TEST
//do nothing	WITHOUT_CLASSIFICATION	0.999998515002803	WITHOUT_CLASSIFICATION	5.172912351940606E-7	DEFECT	4.1523534256180984E-7	DESIGN	3.2386952248140304E-7	DOCUMENTATION	1.2398199171464442E-7	IMPLEMENTATION	1.0461910486894515E-7	TEST
//do nothing	WITHOUT_CLASSIFICATION	0.999998515002803	WITHOUT_CLASSIFICATION	5.172912351940606E-7	DEFECT	4.1523534256180984E-7	DESIGN	3.2386952248140304E-7	DOCUMENTATION	1.2398199171464442E-7	IMPLEMENTATION	1.0461910486894515E-7	TEST
//Force a substitution!	WITHOUT_CLASSIFICATION	0.999902469188728	WITHOUT_CLASSIFICATION	8.724269866820981E-5	DESIGN	4.038980463443782E-6	IMPLEMENTATION	3.327312844502118E-6	DEFECT	2.5530861446138773E-6	DOCUMENTATION	3.687331513322217E-7	TEST
// The user requested a "greater" (i.e. more restrictive) form of // pessimistic lock	WITHOUT_CLASSIFICATION	0.999996465961901	WITHOUT_CLASSIFICATION	3.2701618158431185E-6	DEFECT	1.1693015415455116E-7	IMPLEMENTATION	7.703393111992674E-8	TEST	6.669571008279715E-8	DESIGN	3.2164878465622854E-9	DOCUMENTATION
// the database now holds a lock + the object is flushed from the cache, // so release the soft lock	WITHOUT_CLASSIFICATION	0.9999944093622605	WITHOUT_CLASSIFICATION	5.447581662427138E-6	DEFECT	1.2835047993759813E-7	IMPLEMENTATION	1.2153758457238478E-8	DESIGN	1.5665054797790335E-9	TEST	9.85333394552832E-10	DOCUMENTATION
// now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.9999852480417973	WITHOUT_CLASSIFICATION	1.0471913147119532E-5	IMPLEMENTATION	3.915163509547811E-6	DESIGN	3.522973019293543E-7	DEFECT	8.63067785643647E-9	DOCUMENTATION	3.9535661090036095E-9	TEST
// Search for collections by reachability, updating their role. // We don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.9999534604822936	WITHOUT_CLASSIFICATION	4.345201879975487E-5	DESIGN	3.062865157177852E-6	DEFECT	2.306883497062872E-8	TEST	1.0039228690826093E-9	DOCUMENTATION	5.609914846498509E-10	IMPLEMENTATION
// this is a situation where the entity id is assigned by a post-insert generator // and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.9999993278605124	WITHOUT_CLASSIFICATION	3.16240252681367E-7	DEFECT	1.7117015360305714E-7	IMPLEMENTATION	1.6116715973332642E-7	DESIGN	2.142115474553447E-8	TEST	2.1407669326122207E-9	DOCUMENTATION
// NOTE: we need to do the wrap here even if its not "dirty", // because collections need wrapping but changes to _them_ // don't dirty the container. Also, for versioned data, we // need to wrap before calling searchForDirtyCollections	WITHOUT_CLASSIFICATION	0.883412077135852	WITHOUT_CLASSIFICATION	0.06487829649859751	DESIGN	0.051693837297818915	IMPLEMENTATION	9.946045718183153E-6	TEST	5.21827006491039E-6	DEFECT	6.247519483959792E-7	DOCUMENTATION
//grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.9998959735906424	WITHOUT_CLASSIFICATION	6.626115688545354E-5	DESIGN	2.823474408288973E-5	IMPLEMENTATION	6.650612437518492E-6	DEFECT	1.8887980063700962E-6	TEST	9.91097945486139E-7	DOCUMENTATION
// grab its current state	WITHOUT_CLASSIFICATION	0.9999998870686281	WITHOUT_CLASSIFICATION	8.24714078376327E-8	DESIGN	1.0947360464621428E-8	DEFECT	8.963401199299406E-9	IMPLEMENTATION	6.590121135691711E-9	TEST	3.9590814148376825E-9	DOCUMENTATION
// schedule the update // note that we intentionally do _not_ pass in currentPersistentState!	WITHOUT_CLASSIFICATION	0.9999992313506884	WITHOUT_CLASSIFICATION	7.39172411998474E-7	IMPLEMENTATION	2.4845523329000977E-8	DEFECT	2.7848555849758475E-9	DOCUMENTATION	1.7843749648428708E-9	DESIGN	6.21457315704258E-11	TEST
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999988125811898	WITHOUT_CLASSIFICATION	9.435565557153942E-7	DESIGN	2.2540147360979317E-7	DEFECT	9.369621411892886E-9	DOCUMENTATION	8.521212641240174E-9	TEST	5.699468352835592E-10	IMPLEMENTATION
// give the Interceptor a chance to process property values, if the properties // were modified by the Interceptor, we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9999892641553111	WITHOUT_CLASSIFICATION	1.0658145866015794E-5	DESIGN	6.523795720401152E-8	DEFECT	9.88716714686358E-9	DOCUMENTATION	2.420331591324677E-9	TEST	1.5336682754091927E-10	IMPLEMENTATION
// compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.9999996891816507	WITHOUT_CLASSIFICATION	2.7929293547962914E-7	DESIGN	2.4251797551511542E-8	IMPLEMENTATION	6.807850994525525E-9	DEFECT	2.4353218267830146E-10	DOCUMENTATION	2.2223299113149082E-10	TEST
// if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.9999866983432184	WITHOUT_CLASSIFICATION	1.0067425550328524E-5	DESIGN	2.994536129080576E-6	DEFECT	1.64369300948393E-7	TEST	6.9646948288463E-8	IMPLEMENTATION	5.678852918490179E-9	DOCUMENTATION
// increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.9997026664679793	WITHOUT_CLASSIFICATION	2.7296544413791786E-4	DESIGN	1.0264147658340999E-5	IMPLEMENTATION	7.125947435524402E-6	DOCUMENTATION	6.4495387282638505E-6	DEFECT	5.284540604926415E-7	TEST
// check nullability but do not perform command execute // we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.9999990851254723	WITHOUT_CLASSIFICATION	8.994372789251732E-7	DESIGN	1.3264889978922589E-8	DEFECT	7.45024373327855E-10	DOCUMENTATION	7.153106975213733E-10	TEST	7.120238133359875E-10	IMPLEMENTATION
//give the Interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.999940739409832	WITHOUT_CLASSIFICATION	5.869642208738951E-5	DESIGN	4.6422593908812574E-7	DEFECT	6.205309549632443E-8	DOCUMENTATION	3.156746285436208E-8	IMPLEMENTATION	6.321583108425918E-9	TEST
//now we might need to recalculate the dirtyProperties array	WITHOUT_CLASSIFICATION	0.9695471473071391	WITHOUT_CLASSIFICATION	0.02743455524895015	DESIGN	0.002950949565793565	IMPLEMENTATION	3.617800246836928E-5	DOCUMENTATION	1.9203820827230576E-5	TEST	1.1966054821574648E-5	DEFECT
//use the current version	WITHOUT_CLASSIFICATION	0.9999905320428792	WITHOUT_CLASSIFICATION	7.002250937415337E-6	DESIGN	1.6036924038911463E-6	IMPLEMENTATION	5.955492028260509E-7	DOCUMENTATION	2.5860225827197745E-7	DEFECT	7.862318330952397E-9	TEST
// Interceptor returned null, so do the dirtycheck ourself, if possible	WITHOUT_CLASSIFICATION	0.9999997283524715	WITHOUT_CLASSIFICATION	2.249299169060726E-7	DESIGN	4.50641597900939E-8	IMPLEMENTATION	1.4273003933180513E-9	DEFECT	1.2356528213767532E-10	DOCUMENTATION	1.0258602642569519E-10	TEST
// object loaded by update()	WITHOUT_CLASSIFICATION	0.9999972912161533	WITHOUT_CLASSIFICATION	1.6917399446124062E-6	DEFECT	9.339620228673787E-7	IMPLEMENTATION	3.700413233324502E-8	DESIGN	2.7952672587414133E-8	DOCUMENTATION	1.812507420518228E-8	TEST
// dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.9992355641788001	WITHOUT_CLASSIFICATION	7.636696742319279E-4	IMPLEMENTATION	5.895942381687678E-7	DESIGN	8.492856967752881E-8	DEFECT	7.003868506959419E-8	DOCUMENTATION	2.1585475167517356E-8	TEST
// dirty check against the database snapshot, if possible/necessary	WITHOUT_CLASSIFICATION	0.9922556687449356	WITHOUT_CLASSIFICATION	0.007730102718404998	IMPLEMENTATION	6.747089731174561E-6	DESIGN	6.527020931393483E-6	DEFECT	5.932633381014562E-7	TEST	3.6116265873229153E-7	DOCUMENTATION
// the Interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.9999932004404839	WITHOUT_CLASSIFICATION	4.67028541608301E-6	IMPLEMENTATION	2.066299285630903E-6	DESIGN	4.037183363296948E-8	DEFECT	1.434575225674552E-8	DOCUMENTATION	8.257228378956083E-9	TEST
//even process null collections	WITHOUT_CLASSIFICATION	0.999994408447149	WITHOUT_CLASSIFICATION	3.423701636229128E-6	DESIGN	1.4505467418469872E-6	IMPLEMENTATION	5.439080329870358E-7	DEFECT	1.3972546842896074E-7	DOCUMENTATION	3.367097141593777E-8	TEST
// get the id from the object	WITHOUT_CLASSIFICATION	0.9999977056918115	WITHOUT_CLASSIFICATION	1.879500403744507E-6	DESIGN	3.748748285030596E-7	DEFECT	2.1540789279071396E-8	DOCUMENTATION	1.50210960011549E-8	TEST	3.3710707784002784E-9	IMPLEMENTATION
//always do an INSERT, and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.9999559877435604	WITHOUT_CLASSIFICATION	4.295162758194592E-5	DESIGN	1.0179416575789742E-6	DEFECT	2.7182409287239685E-8	TEST	1.5382564190476692E-8	DOCUMENTATION	1.2222644059996812E-10	IMPLEMENTATION
//what is the version on the database?	WITHOUT_CLASSIFICATION	0.907951167494508	WITHOUT_CLASSIFICATION	0.09004240591517046	DESIGN	0.0014897651100269627	DEFECT	5.105859714432703E-4	IMPLEMENTATION	4.375383284475761E-6	DOCUMENTATION	1.7001255668767418E-6	TEST
/// HHH-2378	WITHOUT_CLASSIFICATION	0.9999891715019299	WITHOUT_CLASSIFICATION	6.936102064309858E-6	DESIGN	2.0092334977434015E-6	DEFECT	1.1138667254974935E-6	IMPLEMENTATION	4.5048910916616066E-7	DOCUMENTATION	3.188066734320719E-7	TEST
//will result in a SQL UPDATE:	WITHOUT_CLASSIFICATION	0.9999356374672372	WITHOUT_CLASSIFICATION	5.698434011172659E-5	DESIGN	6.981918529547672E-6	DEFECT	2.1440946404618083E-7	DOCUMENTATION	1.2143543806395546E-7	TEST	6.042921940406288E-8	IMPLEMENTATION
//else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.9999449710448609	WITHOUT_CLASSIFICATION	4.7357669718335294E-5	DESIGN	6.929952250857004E-6	DOCUMENTATION	4.1072977470118097E-7	DEFECT	2.945566123787021E-7	TEST	3.604678285846603E-8	IMPLEMENTATION
// no existing row - do an insert	WITHOUT_CLASSIFICATION	0.9998713808856177	WITHOUT_CLASSIFICATION	1.2188324649681372E-4	DESIGN	3.71443871462503E-6	DEFECT	1.320846118770309E-6	IMPLEMENTATION	1.1577019069486833E-6	TEST	5.428811451135535E-7	DOCUMENTATION
//refresh() does not pass an entityName	WITHOUT_CLASSIFICATION	0.9998906473313854	WITHOUT_CLASSIFICATION	7.316158658188719E-5	DESIGN	1.9808842868843497E-5	IMPLEMENTATION	1.006678014312056E-5	TEST	5.479159472651546E-6	DEFECT	8.362995480781697E-7	DOCUMENTATION
//do not return a proxy! //(this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.9999899651189399	WITHOUT_CLASSIFICATION	9.52617448288448E-6	DESIGN	2.9754131251796964E-7	DEFECT	1.3013776986153908E-7	TEST	4.4975400692108126E-8	DOCUMENTATION	3.6052094230610445E-8	IMPLEMENTATION
//return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.9992844895748195	WITHOUT_CLASSIFICATION	6.645015390495157E-4	DESIGN	3.306673247706432E-5	DEFECT	1.486262727151976E-5	IMPLEMENTATION	1.8016990828845066E-6	DOCUMENTATION	1.2778272992980856E-6	TEST
// return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.9999999119175909	WITHOUT_CLASSIFICATION	7.942753943008975E-8	IMPLEMENTATION	3.533936489476354E-9	DESIGN	2.556496848077777E-9	DEFECT	1.3811992391625825E-9	DOCUMENTATION	1.1832372088226057E-9	TEST
// return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999996605433205	WITHOUT_CLASSIFICATION	2.3215603161300263E-7	DESIGN	8.47583946408501E-8	IMPLEMENTATION	1.5587359516117316E-8	DEFECT	5.905425956674793E-9	DOCUMENTATION	1.049467858778228E-9	TEST
// this object was already loaded	WITHOUT_CLASSIFICATION	0.9999927751942506	WITHOUT_CLASSIFICATION	3.659187317384036E-6	DESIGN	1.8433723916577358E-6	DEFECT	1.4515312542836733E-6	IMPLEMENTATION	1.5977729276686818E-7	TEST	1.1093749330345651E-7	DOCUMENTATION
// Entity was found in second-level cache...	WITHOUT_CLASSIFICATION	0.9999836087776984	WITHOUT_CLASSIFICATION	1.5564113163083283E-5	DESIGN	6.958572009191396E-7	DEFECT	1.1047619055132816E-7	DOCUMENTATION	1.1233868064122079E-8	IMPLEMENTATION	9.541878855259061E-9	TEST
// make it circular-reference safe	WITHOUT_CLASSIFICATION	0.999996660381082	WITHOUT_CLASSIFICATION	1.6621419829911899E-6	DEFECT	1.4838560524225235E-6	IMPLEMENTATION	6.86825039599293E-8	DOCUMENTATION	6.401642956341841E-8	DESIGN	6.092194890739795E-8	TEST
// intializes result by side-effect	WITHOUT_CLASSIFICATION	0.9999998849673928	WITHOUT_CLASSIFICATION	9.548981321414613E-8	DEFECT	1.877657161537669E-8	DESIGN	4.133846215567812E-10	TEST	3.435103188674044E-10	DOCUMENTATION	9.327405914702985E-12	IMPLEMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Pre-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999994378757638	WITHOUT_CLASSIFICATION	3.681196362638024E-6	DEFECT	8.416868500795936E-7	DESIGN	5.047777090842404E-7	IMPLEMENTATION	3.9983055375458565E-7	DOCUMENTATION	1.937508865076918E-7	TEST
//some statistics	WITHOUT_CLASSIFICATION	0.9999594143811854	WITHOUT_CLASSIFICATION	3.014274017092158E-5	DESIGN	5.833570298400811E-6	IMPLEMENTATION	3.400456739156577E-6	DOCUMENTATION	6.805291788158292E-7	DEFECT	5.283224272934192E-7	TEST
//safe from concurrent modification because of how entryList() is implemented on IdentityMap	WITHOUT_CLASSIFICATION	0.9986713343193088	WITHOUT_CLASSIFICATION	7.723734826789546E-4	IMPLEMENTATION	3.0437864281247036E-4	DEFECT	2.480422496770963E-4	DESIGN	3.652942133999269E-6	DOCUMENTATION	2.1836338876747616E-7	TEST
// Initialize dirty flags for arrays + collections with composite elements // and reset reached, doupdate, etc.	WITHOUT_CLASSIFICATION	0.9999969478492605	WITHOUT_CLASSIFICATION	3.0403575908750806E-6	IMPLEMENTATION	1.171862762510923E-8	DEFECT	4.751738125951329E-11	TEST	1.8496663098024544E-11	DOCUMENTATION	8.506793753229432E-12	DESIGN
// Among other things, updateReachables() will recursively load all // collections that are moving roles. This might cause entities to // be loaded.	WITHOUT_CLASSIFICATION	0.9979886292391031	WITHOUT_CLASSIFICATION	0.002001478104141536	DESIGN	5.795731674367762E-6	DEFECT	4.0875031672233435E-6	IMPLEMENTATION	7.854649369832398E-9	TEST	1.5672642906187471E-9	DOCUMENTATION
// So this needs to be safe from concurrent modification problems. // It is safe because of how IdentityMap implements entrySet()	WITHOUT_CLASSIFICATION	0.7134562225040834	WITHOUT_CLASSIFICATION	0.24127726533686014	DESIGN	0.026390510365219465	DEFECT	0.0183543842175592	IMPLEMENTATION	5.195669866995809E-4	DOCUMENTATION	2.0505895783630963E-6	TEST
// Update the status of the object and if necessary, schedule an update	WITHOUT_CLASSIFICATION	0.9999999410234791	WITHOUT_CLASSIFICATION	4.274299023105901E-8	DESIGN	1.1571411083121724E-8	DEFECT	3.130933955971647E-9	IMPLEMENTATION	8.599675787630521E-10	DOCUMENTATION	6.712181986048687E-10	TEST
// Schedule updates to collections:	WITHOUT_CLASSIFICATION	0.9999792331144666	WITHOUT_CLASSIFICATION	1.824028476596308E-5	IMPLEMENTATION	1.598988601642385E-6	DEFECT	7.985715974859577E-7	DESIGN	9.298095103406118E-8	TEST	3.605961724724521E-8	DOCUMENTATION
// we need to lock the collection caches before // executing entity inserts/updates in order to // account for bidi associations	WITHOUT_CLASSIFICATION	0.9999962780645719	WITHOUT_CLASSIFICATION	1.9206269336297318E-6	TEST	1.356512186554034E-6	DESIGN	2.480004662355937E-7	DEFECT	1.4897457493260232E-7	IMPLEMENTATION	4.782126662248412E-8	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Post-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999940477701876	WITHOUT_CLASSIFICATION	3.2450024806580145E-6	DEFECT	1.148713494352263E-6	IMPLEMENTATION	7.543894045358477E-7	DOCUMENTATION	4.627919682720403E-7	DESIGN	3.4133246452453436E-7	TEST
//the database has changed now, so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.9999976971396359	WITHOUT_CLASSIFICATION	2.2013849031081976E-6	IMPLEMENTATION	6.78707783701087E-8	DESIGN	1.9816839393639437E-8	DEFECT	1.0659915755140571E-8	TEST	3.1279275150912427E-9	DOCUMENTATION
//if the collection is dereferenced, remove from the session cache //iter.remove(); //does not work, since the entrySet is not backed by the set	WITHOUT_CLASSIFICATION	0.9999842272721677	WITHOUT_CLASSIFICATION	1.1126423639073769E-5	DEFECT	4.639216701578643E-6	DESIGN	6.9809420825199196E-9	TEST	1.0464659652148527E-10	DOCUMENTATION	1.9030393921318164E-12	IMPLEMENTATION
//otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9755641088893298	WITHOUT_CLASSIFICATION	0.024120667890817855	DESIGN	3.0091823097366143E-4	IMPLEMENTATION	6.50018236141306E-6	TEST	6.266206590214103E-6	DEFECT	1.5385999272167604E-6	DOCUMENTATION
//get a snapshot	WITHOUT_CLASSIFICATION	0.9999516531713405	WITHOUT_CLASSIFICATION	3.752436173758725E-5	DESIGN	6.630089879408909E-6	IMPLEMENTATION	2.6033827869353594E-6	DEFECT	8.832649465351632E-7	TEST	7.05729309090048E-7	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999945736155215	WITHOUT_CLASSIFICATION	5.302509017832E-6	DESIGN	7.636890177224096E-8	DOCUMENTATION	2.2036982292199793E-8	DEFECT	1.721087888563048E-8	IMPLEMENTATION	8.258697746335655E-9	TEST
/* package-private */	WITHOUT_CLASSIFICATION	0.9999945736155215	WITHOUT_CLASSIFICATION	5.302509017832E-6	DESIGN	7.636890177224096E-8	DOCUMENTATION	2.2036982292199793E-8	DEFECT	1.721087888563048E-8	IMPLEMENTATION	8.258697746335655E-9	TEST
// key is an entity involved with the operation performed by the listener; // value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.9999997443146557	WITHOUT_CLASSIFICATION	2.2029894212673662E-7	DEFECT	3.4801094157530286E-8	TEST	2.1952025419789222E-10	DESIGN	2.0920457762986444E-10	DOCUMENTATION	1.5658332047157651E-10	IMPLEMENTATION
// EARLY EXIT!!!	WITHOUT_CLASSIFICATION	0.9999814285001543	WITHOUT_CLASSIFICATION	9.41046893204761E-6	DEFECT	7.303922262106139E-6	IMPLEMENTATION	8.235132689844108E-7	DESIGN	6.564971958439454E-7	DOCUMENTATION	3.770981865527461E-7	TEST
//ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.9999549315034258	WITHOUT_CLASSIFICATION	4.326722351409146E-5	DESIGN	8.200502232728449E-7	DEFECT	7.950375372638465E-7	IMPLEMENTATION	1.7805409879456606E-7	DOCUMENTATION	8.131200737905692E-9	TEST
// before any callbacks, etc, so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.9999971295052611	WITHOUT_CLASSIFICATION	2.859070182623271E-6	DESIGN	7.685345516489073E-9	DEFECT	1.953760106332609E-9	DOCUMENTATION	9.90551918601592E-10	IMPLEMENTATION	7.948986550632346E-10	TEST
// Ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.9999999798346999	WITHOUT_CLASSIFICATION	1.2289115433461283E-8	IMPLEMENTATION	5.427182787380451E-9	DEFECT	2.0351205602429987E-9	DESIGN	2.5185226812059487E-10	DOCUMENTATION	1.6202897493133053E-10	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// cascade-delete to collections BEFORE the collection owner is deleted	WITHOUT_CLASSIFICATION	0.9998904790934134	WITHOUT_CLASSIFICATION	1.0837798538211092E-4	IMPLEMENTATION	6.782267470853759E-7	DESIGN	4.2087034747228754E-7	DEFECT	3.37752018038248E-8	TEST	1.0048908117375076E-8	DOCUMENTATION
// cascade-delete to many-to-one AFTER the parent was deleted	WITHOUT_CLASSIFICATION	0.9999766306936497	WITHOUT_CLASSIFICATION	1.3339161588534739E-5	DESIGN	8.994489806676278E-6	IMPLEMENTATION	8.591731583085404E-7	DEFECT	1.5298293974002482E-7	DOCUMENTATION	2.3498856997002805E-8	TEST
// if it is an initialized proxy, let cascade // handle it later on	WITHOUT_CLASSIFICATION	0.9999880340666194	WITHOUT_CLASSIFICATION	1.0857686790482435E-5	DESIGN	5.878886641329559E-7	IMPLEMENTATION	4.5033031360993673E-7	TEST	6.100967862822976E-8	DEFECT	9.017933673762561E-9	DOCUMENTATION
//assign the requested id to the proxy, *before* //reassociating the proxy	WITHOUT_CLASSIFICATION	0.999658679231048	WITHOUT_CLASSIFICATION	1.7144009646093876E-4	DESIGN	1.0666265867533846E-4	DEFECT	4.870697779330143E-5	TEST	1.4168892692883578E-5	DOCUMENTATION	3.421433296293129E-7	IMPLEMENTATION
// an uninitialized proxy, noop, don't even need to // return an id, since it is never a save()	WITHOUT_CLASSIFICATION	0.9999998598067685	WITHOUT_CLASSIFICATION	1.2101486999282701E-7	DESIGN	1.0732563627564228E-8	DEFECT	5.9287840093925485E-9	IMPLEMENTATION	1.8061258878016548E-9	DOCUMENTATION	7.108878905354816E-10	TEST
//initialize properties of the event:	WITHOUT_CLASSIFICATION	0.9999960466362856	WITHOUT_CLASSIFICATION	1.463476501922809E-6	DEFECT	9.175454308011226E-7	IMPLEMENTATION	6.544975405740972E-7	DESIGN	6.327511577718871E-7	TEST	2.8509308348777264E-7	DOCUMENTATION
//return the id in the event object	WITHOUT_CLASSIFICATION	0.9998870876372052	WITHOUT_CLASSIFICATION	7.535776284512006E-5	DESIGN	3.542277299083824E-5	DEFECT	1.8133994969770997E-6	DOCUMENTATION	1.694194064622415E-7	IMPLEMENTATION	1.4900805541404547E-7	TEST
//TRANSIENT or DELETED	WITHOUT_CLASSIFICATION	0.9999939045903026	WITHOUT_CLASSIFICATION	4.705151291643851E-6	DESIGN	4.803225682569107E-7	IMPLEMENTATION	4.4180907915301074E-7	DOCUMENTATION	3.0013082851438576E-7	DEFECT	1.6799592974306346E-7	TEST
// use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.9999956942643569	WITHOUT_CLASSIFICATION	2.987206815930034E-6	DESIGN	9.5181204839716E-7	IMPLEMENTATION	3.244366204219189E-7	DOCUMENTATION	3.555484927273054E-8	DEFECT	6.725308962865189E-9	TEST
// assume this is a newly instantiated transient object // which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.7940525737834109	WITHOUT_CLASSIFICATION	0.20592738915421474	DESIGN	1.7748106859063194E-5	DEFECT	1.284588934695105E-6	TEST	7.480647454743247E-7	DOCUMENTATION	2.563018349746866E-7	IMPLEMENTATION
// this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.9999713317680117	WITHOUT_CLASSIFICATION	2.2042583249651914E-5	DEFECT	3.271566466004254E-6	DESIGN	3.16659987495507E-6	IMPLEMENTATION	1.5989172957742512E-7	TEST	2.7590668143077125E-8	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999997456011729	WITHOUT_CLASSIFICATION	2.1099715418988993E-7	IMPLEMENTATION	3.999416039810956E-8	DEFECT	3.1728535856125467E-9	DESIGN	1.8347026822390199E-10	DOCUMENTATION	5.1188724200222725E-11	TEST
//cachedState,	WITHOUT_CLASSIFICATION	0.9998717846026858	WITHOUT_CLASSIFICATION	9.74975971421813E-5	DESIGN	2.0723797862470544E-5	IMPLEMENTATION	4.170857064444869E-6	DEFECT	4.115662057913362E-6	DOCUMENTATION	1.7074831873795706E-6	TEST
//assume true, since we don't really know, and it doesn't matter	WITHOUT_CLASSIFICATION	0.9999718492900558	WITHOUT_CLASSIFICATION	1.5147817593068901E-5	DESIGN	1.1167099371539179E-5	DEFECT	1.0828922650794202E-6	DOCUMENTATION	7.129144683242834E-7	TEST	3.998624606999357E-8	IMPLEMENTATION
//a "detached" collection!	WITHOUT_CLASSIFICATION	0.9997168885590392	WITHOUT_CLASSIFICATION	2.435610755162131E-4	DESIGN	2.175270748507167E-5	DEFECT	1.6086433198773733E-5	IMPLEMENTATION	1.206647358544876E-6	DOCUMENTATION	5.045774021939539E-7	TEST
// if the collection belonged to a different entity, // clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.9999989739187513	WITHOUT_CLASSIFICATION	1.0190251336355156E-6	DESIGN	4.296972318494885E-9	DEFECT	1.472489331657826E-9	TEST	8.42480755678347E-10	IMPLEMENTATION	4.4417281370876326E-10	DOCUMENTATION
//log.debug( "calling onLoad()" );	WITHOUT_CLASSIFICATION	0.9999979182647344	WITHOUT_CLASSIFICATION	7.889549579398086E-7	DESIGN	6.418323955941339E-7	DEFECT	5.626426678289874E-7	IMPLEMENTATION	6.620188302278417E-8	DOCUMENTATION	2.2103361245036797E-8	TEST
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999565967824798	WITHOUT_CLASSIFICATION	1.957485059327897E-5	IMPLEMENTATION	1.3221674631034616E-5	DEFECT	6.352398303615392E-6	DESIGN	2.942473402563728E-6	DOCUMENTATION	1.3118205896865665E-6	TEST
// note: performExecutions() clears all collectionXxxxtion  // collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.9820515011838841	WITHOUT_CLASSIFICATION	0.014883314887353775	IMPLEMENTATION	0.002013296369404497	DESIGN	0.001045637081673327	DEFECT	4.97391531182612E-6	DOCUMENTATION	1.2765623723263286E-6	TEST
// if no array holder we found an unwrappered array (this can't occur, // because we now always call wrap() before getting to here) // return (ah==null) ? true : searchForDirtyCollections(ah, type);	WITHOUT_CLASSIFICATION	0.999342355675452	WITHOUT_CLASSIFICATION	3.325349598419612E-4	DEFECT	3.249858879972314E-4	DESIGN	9.74546578338732E-8	IMPLEMENTATION	1.6791794365660933E-8	DOCUMENTATION	9.230256527681996E-9	TEST
// if not wrappered yet, its dirty (this can't occur, because // we now always call wrap() before getting to here) // return ( ! (obj instanceof PersistentCollection) ) ? //true : searchForDirtyCollections( (PersistentCollection) obj, type );	WITHOUT_CLASSIFICATION	0.9863531340821907	DESIGN	0.009997298602232883	DEFECT	0.0036478993640961447	WITHOUT_CLASSIFICATION	1.327207809863729E-6	IMPLEMENTATION	1.714593720389127E-7	DOCUMENTATION	1.692842984051677E-7	TEST
//we need to check even if it was not initialized, because of delayed adds!	WITHOUT_CLASSIFICATION	0.9838605799472743	WITHOUT_CLASSIFICATION	0.015638004618740847	IMPLEMENTATION	3.8322280233627675E-4	DOCUMENTATION	8.755561659008128E-5	DESIGN	1.9767437901545438E-5	TEST	1.0869577157053548E-5	DEFECT
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9995796405720742	WITHOUT_CLASSIFICATION	2.2056338182894155E-4	IMPLEMENTATION	9.89549876808773E-5	DEFECT	8.053901970446797E-5	DESIGN	1.2496455518303245E-5	DOCUMENTATION	7.805583193382023E-6	TEST
// find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.9999852485080029	WITHOUT_CLASSIFICATION	1.2345430013461502E-5	DESIGN	2.2563378298557343E-6	IMPLEMENTATION	5.0412655201034914E-8	DOCUMENTATION	5.027054605239867E-8	DEFECT	4.904095258240565E-8	TEST
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999565967824798	WITHOUT_CLASSIFICATION	1.957485059327897E-5	IMPLEMENTATION	1.3221674631034616E-5	DEFECT	6.352398303615392E-6	DESIGN	2.942473402563728E-6	DOCUMENTATION	1.3118205896865665E-6	TEST
// Check the persistence context for an entry relating to this // entity to be merged...	WITHOUT_CLASSIFICATION	0.9999300649564431	WITHOUT_CLASSIFICATION	6.987432368400446E-5	DESIGN	3.8387083463170687E-8	IMPLEMENTATION	1.4411261022144763E-8	TEST	7.51962573108134E-9	DOCUMENTATION	4.0190262724508754E-10	DEFECT
// we have specialized case of a detached entity from the // perspective of the merge operation.  Specifically, we // have an incoming entity instance which has a corresponding // entry in the current persistence context, but registered // under a different entity instance	WITHOUT_CLASSIFICATION	0.9999996486448361	WITHOUT_CLASSIFICATION	3.0245433378836443E-7	DESIGN	4.439974888157839E-8	DEFECT	4.4927687718566405E-9	DOCUMENTATION	5.388995497084488E-12	IMPLEMENTATION	2.9233302836935446E-12	TEST
//DELETED	WITHOUT_CLASSIFICATION	0.9997437374716546	WITHOUT_CLASSIFICATION	2.2411126619895343E-4	DESIGN	8.818995227493667E-6	DOCUMENTATION	8.489455725704078E-6	DEFECT	8.096006591390599E-6	IMPLEMENTATION	6.746804602073013E-6	TEST
//before cascade!	WITHOUT_CLASSIFICATION	0.9999902547046072	WITHOUT_CLASSIFICATION	4.594352124283968E-6	IMPLEMENTATION	3.133880835528718E-6	DESIGN	1.2594988479299557E-6	DEFECT	6.252247951295144E-7	DOCUMENTATION	1.3233878989894332E-7	TEST
// cascade first, so that all unsaved objects get their // copy created before we actually copy //cascadeOnMerge(event, persister, entity, copyCache, Cascades.CASCADE_BEFORE_MERGE);	WITHOUT_CLASSIFICATION	0.999997661199024	WITHOUT_CLASSIFICATION	1.6903256542740444E-6	IMPLEMENTATION	6.104412729009183E-7	DESIGN	1.9488972912195818E-8	DEFECT	1.576241384540347E-8	DOCUMENTATION	2.7826621027987567E-9	TEST
//this bit is only *really* absolutely necessary for handling //requestedId, but is also good if we merge multiple object //graphs, since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.5583702953616237	DESIGN	0.44158147493160393	WITHOUT_CLASSIFICATION	3.0158238589093637E-5	IMPLEMENTATION	1.785902854542449E-5	TEST	1.8839255366432307E-7	DOCUMENTATION	2.404708414854882E-8	DEFECT
// continue...; we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.8233674973352275	WITHOUT_CLASSIFICATION	0.1764467608061947	DESIGN	1.685139268260498E-4	DEFECT	1.4684631049881562E-5	IMPLEMENTATION	2.36708033728986E-6	TEST	1.762203645401936E-7	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999297643909878	WITHOUT_CLASSIFICATION	6.627350350980958E-5	DESIGN	3.4256251714805762E-6	IMPLEMENTATION	3.1435673265711055E-7	DEFECT	1.5752426823640276E-7	DOCUMENTATION	6.45993300489913E-8	TEST
// check that entity id = requestedId	WITHOUT_CLASSIFICATION	0.999612332067518	WITHOUT_CLASSIFICATION	3.8667605797055226E-4	IMPLEMENTATION	5.622836304074197E-7	TEST	1.8902213426564385E-7	DESIGN	1.372270940766113E-7	DEFECT	1.0334165270974363E-7	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9999902547046072	WITHOUT_CLASSIFICATION	4.594352124283968E-6	IMPLEMENTATION	3.133880835528718E-6	DESIGN	1.2594988479299557E-6	DEFECT	6.252247951295144E-7	DOCUMENTATION	1.3233878989894332E-7	TEST
// we got here because we assumed that an instance // with an assigned id was detached, when it was // really persistent	WITHOUT_CLASSIFICATION	0.9999983507239754	WITHOUT_CLASSIFICATION	1.57845449896108E-6	DESIGN	3.69368600218255E-8	DEFECT	2.0782838355211217E-8	DOCUMENTATION	1.2828577999366869E-8	TEST	2.7324942725367093E-10	IMPLEMENTATION
// cascade first, so that all unsaved objects get their  // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999215862783138	WITHOUT_CLASSIFICATION	6.519928907302897E-5	DESIGN	1.2240689787924198E-5	IMPLEMENTATION	5.378928147448974E-7	DEFECT	3.337539721073669E-7	DOCUMENTATION	1.0209603855793599E-7	TEST
//copyValues works by reflection, so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.9988099759191744	WITHOUT_CLASSIFICATION	6.36298531032944E-4	DEFECT	5.456229349131918E-4	DESIGN	4.346052270040977E-6	DOCUMENTATION	3.4863932588651473E-6	IMPLEMENTATION	2.701693505728444E-7	TEST
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999452312610096	WITHOUT_CLASSIFICATION	3.444658577336344E-5	IMPLEMENTATION	1.0115593611645874E-5	DESIGN	6.306850627927958E-6	DEFECT	2.6129981122817593E-6	DOCUMENTATION	1.286710865285171E-6	TEST
//source.getBatcher().executeBatch(); //found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.9999849683895574	WITHOUT_CLASSIFICATION	1.5011585741693107E-5	DESIGN	1.1891343665424429E-8	IMPLEMENTATION	3.885077739391854E-9	DOCUMENTATION	3.2250544023110486E-9	DEFECT	1.0232251307422439E-9	TEST
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999988125811898	WITHOUT_CLASSIFICATION	9.435565557153942E-7	DESIGN	2.2540147360979317E-7	DEFECT	9.369621411892886E-9	DOCUMENTATION	8.521212641240174E-9	TEST	5.699468352835592E-10	IMPLEMENTATION
//now done in EntityIdentityInsertAction //persister.setIdentifier( entity, id, source.getEntityMode() );	WITHOUT_CLASSIFICATION	0.9999994075418404	WITHOUT_CLASSIFICATION	5.734964382728984E-7	DESIGN	1.1365799568840955E-8	DEFECT	4.1958957451503185E-9	DOCUMENTATION	2.745105755879521E-9	IMPLEMENTATION	6.549203138577407E-10	TEST
//source.getPersistenceContext().removeNonExist( new EntityKey( id, persister, source.getEntityMode() ) );	WITHOUT_CLASSIFICATION	0.9999831135067464	WITHOUT_CLASSIFICATION	1.6711646175076777E-5	DESIGN	1.033465414302173E-7	IMPLEMENTATION	2.6817822243494244E-8	DOCUMENTATION	2.2719807276445153E-8	TEST	2.19629076757209E-8	DEFECT
//keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.9999891212307606	WITHOUT_CLASSIFICATION	8.856692556666625E-6	DESIGN	1.7300774666365257E-6	DEFECT	1.8546742215974067E-7	DOCUMENTATION	8.924904230554988E-8	IMPLEMENTATION	1.728275165677001E-8	TEST
// cascade-save to many-to-one BEFORE the parent is saved	WITHOUT_CLASSIFICATION	0.996009493714723	WITHOUT_CLASSIFICATION	0.0025949047426706076	IMPLEMENTATION	9.218111319718905E-4	DESIGN	4.592564864701497E-4	DEFECT	1.2645574576978668E-5	DOCUMENTATION	1.8883495872588217E-6	TEST
//pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.999999895854882	WITHOUT_CLASSIFICATION	8.818321268545295E-8	DESIGN	8.257561659161156E-9	DOCUMENTATION	6.328884952275584E-9	TEST	1.365016376880341E-9	DEFECT	1.0442303189328635E-11	IMPLEMENTATION
// the object is persistent	WITHOUT_CLASSIFICATION	0.999998742774533	WITHOUT_CLASSIFICATION	6.062628138970593E-7	IMPLEMENTATION	3.694278237372494E-7	DESIGN	1.5686329004516262E-7	DEFECT	8.76502582889361E-8	TEST	3.7021280977631856E-8	DOCUMENTATION
//the entity is associated with the session, so check its status	WITHOUT_CLASSIFICATION	0.9999897868793215	WITHOUT_CLASSIFICATION	7.853910141835083E-6	IMPLEMENTATION	1.7279492210053458E-6	DESIGN	3.134488058039982E-7	TEST	2.9750971880568133E-7	DOCUMENTATION	2.030279113012746E-8	DEFECT
// do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.9999999175087069	WITHOUT_CLASSIFICATION	4.910976963516424E-8	DESIGN	1.2350885783827015E-8	DEFECT	7.952456907950662E-9	IMPLEMENTATION	7.018994967779294E-9	DOCUMENTATION	6.059185848382079E-9	TEST
//ie. e.status==DELETED	WITHOUT_CLASSIFICATION	0.9999937358548985	WITHOUT_CLASSIFICATION	5.664526001738105E-6	DESIGN	2.743478278087282E-7	IMPLEMENTATION	1.4196437497330213E-7	DEFECT	1.0077000478546962E-7	DOCUMENTATION	8.253689219554781E-8	TEST
// the object is transient or detached	WITHOUT_CLASSIFICATION	0.9999704087013788	WITHOUT_CLASSIFICATION	2.7019309575726487E-5	IMPLEMENTATION	2.234775093694189E-6	DESIGN	1.5755522483487477E-7	DEFECT	1.373474033935294E-7	DOCUMENTATION	4.23113236902157E-8	TEST
//NOTE EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999429427678157	WITHOUT_CLASSIFICATION	2.7532143606399972E-5	IMPLEMENTATION	1.2558787856829353E-5	DESIGN	1.1902947394504216E-5	DEFECT	3.17177761921478E-6	DOCUMENTATION	1.8915757074902926E-6	TEST
// Private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.9999797869004122	WITHOUT_CLASSIFICATION	1.9177706203222033E-5	DESIGN	9.51891422279332E-7	IMPLEMENTATION	3.175633728234749E-8	TEST	3.125156957006596E-8	DEFECT	2.0494055502027917E-8	DOCUMENTATION
// First, try to find a matching constructor accepting a ViolatedConstraintNameExtracter param...	WITHOUT_CLASSIFICATION	0.9999736944661066	WITHOUT_CLASSIFICATION	2.609033760546359E-5	IMPLEMENTATION	1.6592769945628569E-7	DESIGN	4.5026594532397126E-8	TEST	3.428929442119173E-9	DEFECT	8.130644364186423E-10	DOCUMENTATION
// eat it and try next	WITHOUT_CLASSIFICATION	0.9999838064182515	WITHOUT_CLASSIFICATION	8.663735446897346E-6	DEFECT	5.203501756758826E-6	DESIGN	1.5818804711058379E-6	IMPLEMENTATION	4.047039840170074E-7	DOCUMENTATION	3.397600897233942E-7	TEST
// Otherwise, try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.999987903848747	WITHOUT_CLASSIFICATION	1.2072800619469556E-5	IMPLEMENTATION	1.6835883986945553E-8	DESIGN	4.679754320371582E-9	DOCUMENTATION	9.369417160518366E-10	TEST	8.980534426839221E-10	DEFECT
// oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.9999841052436146	WITHOUT_CLASSIFICATION	9.937489474040535E-6	IMPLEMENTATION	5.678104811191125E-6	DESIGN	1.2621639011974948E-7	DOCUMENTATION	1.0619950061072972E-7	TEST	4.674620952523946E-8	DEFECT
// CollectionPropertyMapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.9999968122258095	WITHOUT_CLASSIFICATION	1.7312915759500045E-6	DESIGN	1.3501094589083848E-6	DEFECT	5.248342485706358E-8	TEST	3.04544725945855E-8	IMPLEMENTATION	2.3435258071066922E-8	DOCUMENTATION
// remove initial ", "	WITHOUT_CLASSIFICATION	0.9999979593610607	WITHOUT_CLASSIFICATION	1.947946033213047E-6	DESIGN	3.433090687612919E-8	IMPLEMENTATION	3.308365713949716E-8	DEFECT	1.8547052184514716E-8	TEST	6.731289993085968E-9	DOCUMENTATION
// remove initial " and "	WITHOUT_CLASSIFICATION	0.9999982317115484	WITHOUT_CLASSIFICATION	1.6446377761489485E-6	DESIGN	8.911678063373332E-8	IMPLEMENTATION	2.023188946525458E-8	DEFECT	7.2908569475312774E-9	TEST	7.011148349698426E-9	DOCUMENTATION
//beforeClassTokens.add("new"); DEFINITELY DON'T HAVE THIS!!	WITHOUT_CLASSIFICATION	0.99929046165984	WITHOUT_CLASSIFICATION	6.969037367346737E-4	DESIGN	4.974853576136678E-6	DOCUMENTATION	4.053079976957773E-6	IMPLEMENTATION	2.2446891900391243E-6	DEFECT	1.3619806821324515E-6	TEST
//notAfterClassTokens.add(",");	WITHOUT_CLASSIFICATION	0.9999633213520558	WITHOUT_CLASSIFICATION	2.9523623866374314E-5	DESIGN	4.316470489099265E-6	IMPLEMENTATION	1.255773537993845E-6	DOCUMENTATION	8.594490259802658E-7	TEST	7.233310247402345E-7	DEFECT
// just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.9999976700790628	WITHOUT_CLASSIFICATION	1.9003029085062485E-6	IMPLEMENTATION	4.0378190337920236E-7	DESIGN	9.725577197830356E-9	TEST	9.597227662017431E-9	DOCUMENTATION	6.5133203135840565E-9	DEFECT
//update last non-whitespace token, if necessary	WITHOUT_CLASSIFICATION	0.999998421149183	WITHOUT_CLASSIFICATION	1.062380367884476E-6	DESIGN	3.1743242497462936E-7	DEFECT	9.154390281384575E-8	IMPLEMENTATION	8.378234093546252E-8	TEST	2.3711780456778085E-8	DOCUMENTATION
// select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.999998974817706	WITHOUT_CLASSIFICATION	8.065013953851572E-7	DESIGN	2.1034890188571624E-7	DEFECT	7.823739801981634E-9	TEST	4.4431197192778916E-10	DOCUMENTATION	6.39448093559332E-11	IMPLEMENTATION
//scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.9999960646105691	WITHOUT_CLASSIFICATION	1.8578798905211143E-6	DEFECT	1.0575197457480288E-6	DESIGN	4.990725183457806E-7	IMPLEMENTATION	2.811689739611554E-7	TEST	2.397483022657128E-7	DOCUMENTATION
// Note this!!	WITHOUT_CLASSIFICATION	0.9996730735113201	WITHOUT_CLASSIFICATION	2.6395539893469123E-4	DESIGN	3.720213450460306E-5	IMPLEMENTATION	1.3275248810003432E-5	TEST	8.885745828216612E-6	DOCUMENTATION	3.6079606023151615E-6	DEFECT
// Error message constants.	WITHOUT_CLASSIFICATION	0.9999945233055898	WITHOUT_CLASSIFICATION	3.607232982528715E-6	DEFECT	9.153388218846961E-7	IMPLEMENTATION	6.629313835142657E-7	DESIGN	1.6576054938460098E-7	DOCUMENTATION	1.2543067287697986E-7	TEST
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997908297486771	WITHOUT_CLASSIFICATION	1.9485911978167443E-4	IMPLEMENTATION	1.3317117049330855E-5	DESIGN	4.991075675117427E-7	DEFECT	3.136873302072248E-7	TEST	1.812195942011626E-7	DOCUMENTATION
// semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9886993569913716	WITHOUT_CLASSIFICATION	0.011207553900374468	DESIGN	4.3375175911405096E-5	IMPLEMENTATION	2.8267867388272738E-5	DEFECT	1.9789669579566156E-5	DOCUMENTATION	1.6563953747350392E-6	TEST
// Handle collection-fiter compilation. // IMPORTANT NOTE: This is modifying the INPUT (HQL) tree, not the output tree!	WITHOUT_CLASSIFICATION	0.8841558637683865	WITHOUT_CLASSIFICATION	0.06856420021390056	DEFECT	0.04707050723199769	DESIGN	2.0603473368104293E-4	IMPLEMENTATION	3.332919773618356E-6	TEST	6.11322605151419E-8	DOCUMENTATION
// Show the modified AST.	WITHOUT_CLASSIFICATION	0.999720264579654	WITHOUT_CLASSIFICATION	2.526081448236387E-4	IMPLEMENTATION	2.280690051864763E-5	DESIGN	2.7876492617950455E-6	DEFECT	9.841828818015675E-7	DOCUMENTATION	5.485428600878942E-7	TEST
// Create a parameter specification for the collection filter...	WITHOUT_CLASSIFICATION	0.9990000184935944	WITHOUT_CLASSIFICATION	9.949258945960153E-4	DESIGN	3.432859626829892E-6	IMPLEMENTATION	1.1555524269453227E-6	DOCUMENTATION	2.926026566989232E-7	TEST	1.745970989953044E-7	DEFECT
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999996521857247	WITHOUT_CLASSIFICATION	1.799291311732427E-7	DESIGN	1.581387297387275E-7	IMPLEMENTATION	5.264592877599216E-9	DOCUMENTATION	3.8979572629566296E-9	TEST	5.838641513037191E-10	DEFECT
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999996521857247	WITHOUT_CLASSIFICATION	1.799291311732427E-7	DESIGN	1.581387297387275E-7	IMPLEMENTATION	5.264592877599216E-9	DOCUMENTATION	3.8979572629566296E-9	TEST	5.838641513037191E-10	DEFECT
// Get the names of the columns used to link between the collection // owner and the collection elements.	WITHOUT_CLASSIFICATION	0.9999953587121927	WITHOUT_CLASSIFICATION	4.632360939429683E-6	DESIGN	4.903521074267675E-9	DOCUMENTATION	2.887082871439359E-9	IMPLEMENTATION	8.352022451047638E-10	DEFECT	3.0106172080891424E-10	TEST
// The path AST should be a DotNode, and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.9962211116667015	WITHOUT_CLASSIFICATION	0.0022649934337521747	DESIGN	0.001128932614341112	IMPLEMENTATION	3.766401075931544E-4	DEFECT	6.324634593485287E-6	DOCUMENTATION	1.9975430184773496E-6	TEST
// Tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9999972170711672	WITHOUT_CLASSIFICATION	1.622398745847319E-6	DESIGN	8.73038026122565E-7	IMPLEMENTATION	2.1169575550033104E-7	DEFECT	4.7395211211535315E-8	DOCUMENTATION	2.8401094192097842E-8	TEST
// Re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.9999899217237502	WITHOUT_CLASSIFICATION	4.829349331227201E-6	IMPLEMENTATION	4.747371053483863E-6	DESIGN	4.951328449871107E-7	DEFECT	5.141980591259984E-9	DOCUMENTATION	1.2810394684033634E-9	TEST
// Don't forget to resolve the argument! // Resolve the collection function now.	WITHOUT_CLASSIFICATION	0.9999991308930778	WITHOUT_CLASSIFICATION	6.143789905662475E-7	IMPLEMENTATION	1.3278894456148824E-7	DOCUMENTATION	5.822555029912245E-8	DEFECT	5.7330618026929675E-8	DESIGN	6.382818812028385E-9	TEST
// Resolve everything up to this dot, but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.997633822642882	WITHOUT_CLASSIFICATION	0.0023525400788384494	DESIGN	9.98875336114379E-6	DEFECT	3.191242765807271E-6	IMPLEMENTATION	2.849713908118879E-7	TEST	1.7231076182635726E-7	DOCUMENTATION
// Should mean that no such property was found	WITHOUT_CLASSIFICATION	0.9999921924806223	WITHOUT_CLASSIFICATION	5.127666523436588E-6	DESIGN	2.5546509882984215E-6	DEFECT	5.96960853504997E-8	DOCUMENTATION	4.9802491299655096E-8	IMPLEMENTATION	1.5703289251110942E-8	TEST
// Was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.9999911024776093	WITHOUT_CLASSIFICATION	8.249093568580752E-6	DESIGN	5.145490033090255E-7	DEFECT	7.50678593517735E-8	TEST	3.5947433529272726E-8	DOCUMENTATION	2.2864525977777033E-8	IMPLEMENTATION
// Attach any mapping-defined "ORDER BY" fragments	WITHOUT_CLASSIFICATION	0.999998834146681	WITHOUT_CLASSIFICATION	4.544811568842203E-7	DESIGN	4.402495639842369E-7	IMPLEMENTATION	1.851370249680334E-7	DEFECT	5.448509682198278E-8	DOCUMENTATION	3.150047631399661E-8	TEST
// Use the explicitly declared select expression; determine the // return types indicated by each select token	WITHOUT_CLASSIFICATION	0.999999118914257	WITHOUT_CLASSIFICATION	8.793401359976738E-7	DESIGN	1.729641816607704E-9	DEFECT	1.1907115321966921E-11	DOCUMENTATION	4.027412232079577E-12	TEST	3.077049329724564E-14	IMPLEMENTATION
// After that, process the JOINs. // Invoke a delegate to do the work, as this is farily complex.	WITHOUT_CLASSIFICATION	0.9999985420625074	WITHOUT_CLASSIFICATION	8.531601171879193E-7	DEFECT	5.82379443140496E-7	DESIGN	1.4256097337909247E-8	IMPLEMENTATION	4.277912154890128E-9	TEST	3.8639227555738756E-9	DOCUMENTATION
// Make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.9999358242718235	WITHOUT_CLASSIFICATION	3.35435778292638E-5	IMPLEMENTATION	3.0469235530575548E-5	DESIGN	1.2493338712561202E-7	TEST	1.976639837245579E-8	DOCUMENTATION	1.821503122662188E-8	DEFECT
// We need to generate ids as part of this bulk insert. // // Note that this is only supported for sequence-style generators and // post-insert-style generators; basically, only in-db generators	WITHOUT_CLASSIFICATION	0.9999999301718071	WITHOUT_CLASSIFICATION	4.7436829452107473E-8	IMPLEMENTATION	1.2401310034048282E-8	TEST	7.247209765124046E-9	DEFECT	2.5934117931170886E-9	DESIGN	1.4943190916921024E-10	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999996521857247	WITHOUT_CLASSIFICATION	1.799291311732427E-7	DESIGN	1.581387297387275E-7	IMPLEMENTATION	5.264592877599216E-9	DOCUMENTATION	3.8979572629566296E-9	TEST	5.838641513037191E-10	DEFECT
// We need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.9999991442176962	WITHOUT_CLASSIFICATION	5.35604675501207E-7	DEFECT	1.8497808814685357E-7	DESIGN	9.357637176241725E-8	IMPLEMENTATION	3.324536424880967E-8	DOCUMENTATION	8.37780424803924E-9	TEST
// we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.9976111065959851	WITHOUT_CLASSIFICATION	0.0023076484061642843	DESIGN	5.634191473147417E-5	IMPLEMENTATION	1.3801048206076982E-5	DOCUMENTATION	8.42636143661055E-6	DEFECT	2.6756734763887835E-6	TEST
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9961354287223222	WITHOUT_CLASSIFICATION	0.00325267588136364	DEFECT	5.303983743043513E-4	IMPLEMENTATION	8.13228736060254E-5	DESIGN	1.312600921250766E-7	DOCUMENTATION	4.288831169991791E-8	TEST
// Generate implicit joins, only if necessary.	WITHOUT_CLASSIFICATION	0.999999197617306	WITHOUT_CLASSIFICATION	5.605409778755262E-7	DESIGN	1.807396746962026E-7	TEST	3.26509726051919E-8	IMPLEMENTATION	1.424771288744358E-8	DEFECT	1.4203355995321848E-8	DOCUMENTATION
// Notify the FROM element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.9999984236715495	WITHOUT_CLASSIFICATION	6.934344849774337E-7	DESIGN	5.755069082072267E-7	IMPLEMENTATION	2.05972066953645E-7	DEFECT	9.779115544206116E-8	TEST	3.6238349169136124E-9	DOCUMENTATION
// Turn off includeSubclasses on all FromElements.	WITHOUT_CLASSIFICATION	0.9995314814896719	WITHOUT_CLASSIFICATION	4.671838500981196E-4	DESIGN	6.830430364926228E-7	DEFECT	3.703262715512216E-7	IMPLEMENTATION	2.4522153562855073E-7	DOCUMENTATION	3.606938631395049E-8	TEST
// create the node initially with the param name so that it shows // appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.9996534977577555	WITHOUT_CLASSIFICATION	1.9070349628774567E-4	IMPLEMENTATION	1.323668242806679E-4	DESIGN	2.1930308907867908E-5	DEFECT	1.3410639718471778E-6	TEST	1.6054879633854323E-7	DOCUMENTATION
// Use the delegate, resolve identifiers as FROM element aliases.	WITHOUT_CLASSIFICATION	0.999999726531668	WITHOUT_CLASSIFICATION	2.2533571074590333E-7	IMPLEMENTATION	4.7674371530263354E-8	DESIGN	2.242066862686702E-10	TEST	1.9603768825434032E-10	DOCUMENTATION	3.8005464256975876E-11	DEFECT
// select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.9999998444230452	WITHOUT_CLASSIFICATION	5.5587542115100515E-8	IMPLEMENTATION	4.6126212692080625E-8	DEFECT	3.4383220774642846E-8	DESIGN	1.9117913527627336E-8	TEST	3.62065532679764E-10	DOCUMENTATION
// no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.9998316162897916	WITHOUT_CLASSIFICATION	1.6442482399839101E-4	DESIGN	2.5078145686729023E-6	IMPLEMENTATION	1.3554786815271798E-6	TEST	8.394387062353755E-8	DOCUMENTATION	1.1649089198367022E-8	DEFECT
// Make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.9998283593356522	WITHOUT_CLASSIFICATION	1.2248370694213664E-4	DESIGN	4.8121483887913844E-5	IMPLEMENTATION	5.212135194318023E-7	TEST	4.682561517713578E-7	DEFECT	4.600384653970231E-8	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997908297486771	WITHOUT_CLASSIFICATION	1.9485911978167443E-4	IMPLEMENTATION	1.3317117049330855E-5	DESIGN	4.991075675117427E-7	DEFECT	3.136873302072248E-7	TEST	1.812195942011626E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999996521857247	WITHOUT_CLASSIFICATION	1.799291311732427E-7	DESIGN	1.581387297387275E-7	IMPLEMENTATION	5.264592877599216E-9	DOCUMENTATION	3.8979572629566296E-9	TEST	5.838641513037191E-10	DEFECT
// --Commented out by Inspection (12/11/04 10:56 AM): int getWarningCount();	WITHOUT_CLASSIFICATION	0.9999980621843891	WITHOUT_CLASSIFICATION	1.7434872918487432E-6	DEFECT	1.2966245142061981E-7	DESIGN	3.209141197601546E-8	DOCUMENTATION	3.1076362031055235E-8	IMPLEMENTATION	1.4980935948532808E-9	TEST
// Alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.9999998442106098	WITHOUT_CLASSIFICATION	1.3559730704655303E-7	DESIGN	1.5682900951943407E-8	IMPLEMENTATION	3.7242604368482967E-9	DOCUMENTATION	7.567733534370817E-10	DEFECT	2.814836279896911E-11	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999994884829748	WITHOUT_CLASSIFICATION	3.655853995807426E-7	DESIGN	5.630156690430569E-8	IMPLEMENTATION	4.138691383407706E-8	DEFECT	2.8312998698692576E-8	DOCUMENTATION	1.9930146292073223E-8	TEST
// make a new one	WITHOUT_CLASSIFICATION	0.9999800516138805	WITHOUT_CLASSIFICATION	1.3162583886176629E-5	DESIGN	4.472509474087482E-6	DEFECT	1.462772899275614E-6	IMPLEMENTATION	5.934962054094597E-7	TEST	2.5702365457175934E-7	DOCUMENTATION
// just do the regular thing if you can't find the ctor // Your AST must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.8886287402357964	WITHOUT_CLASSIFICATION	0.10863469718369025	DESIGN	0.0027265718352893534	IMPLEMENTATION	6.8337222908751355E-6	DOCUMENTATION	2.989918747609486E-6	TEST	1.671041855822295E-7	DEFECT
// Initialize SQL nodes here.	WITHOUT_CLASSIFICATION	0.9999988034079297	WITHOUT_CLASSIFICATION	1.0052549957899699E-6	DESIGN	7.013647636957218E-8	IMPLEMENTATION	5.712283692541293E-8	DEFECT	4.475165478095022E-8	TEST	1.932610640901585E-8	DOCUMENTATION
// semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999690789857044	WITHOUT_CLASSIFICATION	2.9932520706182496E-4	DESIGN	6.385829446108674E-6	DEFECT	2.897792378629845E-6	DOCUMENTATION	3.293250672282302E-7	IMPLEMENTATION	2.7198900226212776E-7	TEST
// if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999984568483726	WITHOUT_CLASSIFICATION	1.1297005955044739E-6	IMPLEMENTATION	3.608845460563806E-7	DEFECT	3.7252951039574806E-8	DESIGN	1.0323787172083495E-8	TEST	4.9897475776473375E-9	DOCUMENTATION
// this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.9999999989277435	WITHOUT_CLASSIFICATION	5.638025546912725E-10	DESIGN	2.6664332767835597E-10	IMPLEMENTATION	1.4988367720266507E-10	DOCUMENTATION	7.413000281270682E-11	DEFECT	1.7796949284833326E-11	TEST
// --- Inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.9999969213456321	WITHOUT_CLASSIFICATION	2.972492534833135E-6	DESIGN	4.360321031739018E-8	IMPLEMENTATION	3.4791113496097E-8	TEST	1.7818105458144668E-8	DEFECT	9.949403797791922E-9	DOCUMENTATION
// check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.9999982385190396	WITHOUT_CLASSIFICATION	1.692703489244299E-6	IMPLEMENTATION	5.101529763674533E-8	DEFECT	8.925611948850356E-9	DOCUMENTATION	7.549994163339732E-9	DESIGN	1.286567496943015E-9	TEST
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999299110184646	WITHOUT_CLASSIFICATION	5.753399134786891E-4	DESIGN	5.258666584817819E-5	IMPLEMENTATION	2.5754187005847864E-5	DOCUMENTATION	2.5414321560056388E-5	DEFECT	2.179472746118229E-5	TEST
// these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.9999998161106955	WITHOUT_CLASSIFICATION	1.5674200588247138E-7	IMPLEMENTATION	1.9421703613963118E-8	DESIGN	5.608115850902266E-9	TEST	2.0960470169874942E-9	DOCUMENTATION	2.143198365260105E-11	DEFECT
// again, both should be FromElements	WITHOUT_CLASSIFICATION	0.9999605624747787	WITHOUT_CLASSIFICATION	3.188952072269031E-5	DESIGN	6.98543880848814E-6	IMPLEMENTATION	4.1796896797595966E-7	TEST	9.827703208090692E-8	DEFECT	4.63196900380019E-8	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9971675312029876	WITHOUT_CLASSIFICATION	0.0020046454437732254	DESIGN	4.990660594898727E-4	DEFECT	3.036289156538677E-4	IMPLEMENTATION	2.4315361709591912E-5	TEST	8.130163858285565E-7	DOCUMENTATION
// right represents a joins originating from left; or // both right and left reprersent joins originating from the same FromElement	WITHOUT_CLASSIFICATION	0.9999999952429379	WITHOUT_CLASSIFICATION	2.9983852669406984E-9	DEFECT	1.2477796142337917E-9	DESIGN	4.811010833766307E-10	IMPLEMENTATION	1.4953712016091417E-11	DOCUMENTATION	1.4842393905140058E-11	TEST
// check a set of parent/child nodes in the from-clause tree // to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.9999991551574446	WITHOUT_CLASSIFICATION	7.993924674802015E-7	DESIGN	4.5148622204080004E-8	DEFECT	1.572634584844676E-10	IMPLEMENTATION	7.853013759059346E-11	TEST	6.567188931601847E-11	DOCUMENTATION
// right represents a joins originating from left...	WITHOUT_CLASSIFICATION	0.999999901607848	WITHOUT_CLASSIFICATION	5.352599763559584E-8	DEFECT	3.693749311890499E-8	DESIGN	6.795386647441155E-9	IMPLEMENTATION	7.674360650491988E-10	TEST	3.6583850068508927E-10	DOCUMENTATION
// all clear	WITHOUT_CLASSIFICATION	0.9999978003103078	WITHOUT_CLASSIFICATION	1.344860703665426E-6	DESIGN	7.944986733675018E-7	IMPLEMENTATION	2.382880367935366E-8	DOCUMENTATION	2.2392964287858217E-8	DEFECT	1.4108547177359683E-8	TEST
// Ignore the token class name parameter, and use a specific token class.	WITHOUT_CLASSIFICATION	0.9999957998086393	WITHOUT_CLASSIFICATION	4.1960095729962926E-6	DESIGN	3.55260812898822E-9	DOCUMENTATION	3.2149394948033005E-10	IMPLEMENTATION	2.6041845934816506E-10	DEFECT	4.726725527653913E-11	TEST
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9992245487585044	WITHOUT_CLASSIFICATION	7.552829718297182E-4	DESIGN	1.1149569949633102E-5	IMPLEMENTATION	3.7385650757624996E-6	DOCUMENTATION	3.4218217096470657E-6	TEST	1.858312930643089E-6	DEFECT
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9992245487585044	WITHOUT_CLASSIFICATION	7.552829718297182E-4	DESIGN	1.1149569949633102E-5	IMPLEMENTATION	3.7385650757624996E-6	DOCUMENTATION	3.4218217096470657E-6	TEST	1.858312930643089E-6	DEFECT
// remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.9977925186803472	WITHOUT_CLASSIFICATION	0.0021950848164560316	DESIGN	6.58455953833493E-6	DEFECT	5.39279157340689E-6	IMPLEMENTATION	3.2253756019495005E-7	TEST	9.661452473671763E-8	DOCUMENTATION
// don't care about other param types here, just those explicitly user-defined...	WITHOUT_CLASSIFICATION	0.9929046877907013	WITHOUT_CLASSIFICATION	0.007095279905586016	DESIGN	2.4555308954469233E-8	TEST	6.785896271465281E-9	DEFECT	8.808042313344246E-10	DOCUMENTATION	8.170310694428626E-11	IMPLEMENTATION
// If the query is already compiled, skip the compilation.	WITHOUT_CLASSIFICATION	0.9966543639055	WITHOUT_CLASSIFICATION	0.0033355741466602044	IMPLEMENTATION	8.893303664003925E-6	DEFECT	1.0489760908345834E-6	DESIGN	7.647946591324096E-8	DOCUMENTATION	4.318861898198858E-8	TEST
// Remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.9929903024903571	WITHOUT_CLASSIFICATION	0.005898833958027503	DESIGN	0.0010872915297582128	IMPLEMENTATION	1.7118878131186094E-5	DEFECT	5.81796503810022E-6	TEST	6.351786879054175E-7	DOCUMENTATION
// PHASE 1 : Parse the HQL into an AST.	WITHOUT_CLASSIFICATION	0.9999605368544583	WITHOUT_CLASSIFICATION	3.7110695488040106E-5	DESIGN	9.788700705264313E-7	IMPLEMENTATION	8.900077660950681E-7	DEFECT	3.842573631614532E-7	DOCUMENTATION	9.93148539085259E-8	TEST
// PHASE 2 : Analyze the HQL AST, and produce an SQL AST.	WITHOUT_CLASSIFICATION	0.9997120604143489	WITHOUT_CLASSIFICATION	2.795745753115338E-4	DESIGN	5.210672077250457E-6	DEFECT	2.5104951553042706E-6	DOCUMENTATION	5.975732559246804E-7	IMPLEMENTATION	4.6269851013062246E-8	TEST
// PHASE 3 : Generate the SQL.	WITHOUT_CLASSIFICATION	0.9992154558276368	WITHOUT_CLASSIFICATION	7.23885403652041E-4	DESIGN	5.045646481014636E-5	IMPLEMENTATION	6.207969463629419E-6	TEST	3.5742305987909423E-6	DOCUMENTATION	4.2010383852825285E-7	DEFECT
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.999999494053821	WITHOUT_CLASSIFICATION	4.2224719996012965E-7	DEFECT	7.314460919207533E-8	DESIGN	6.070353678882834E-9	IMPLEMENTATION	3.7350126475861976E-9	TEST	7.490034992194799E-10	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.999999494053821	WITHOUT_CLASSIFICATION	4.2224719996012965E-7	DEFECT	7.314460919207533E-8	DESIGN	6.070353678882834E-9	IMPLEMENTATION	3.7350126475861976E-9	TEST	7.490034992194799E-10	DOCUMENTATION
//only needed during compilation phase...	WITHOUT_CLASSIFICATION	0.9999957002315417	WITHOUT_CLASSIFICATION	2.3166404583965444E-6	DESIGN	1.0884585060093395E-6	DEFECT	5.231193597881384E-7	IMPLEMENTATION	2.900661368640611E-7	DOCUMENTATION	8.148399718705144E-8	TEST
// Transform the tree.	WITHOUT_CLASSIFICATION	0.9999955148639812	WITHOUT_CLASSIFICATION	2.872506717973889E-6	DESIGN	1.267362291753455E-6	IMPLEMENTATION	2.1891440395197223E-7	DOCUMENTATION	8.500568883433584E-8	TEST	4.134691629696695E-8	DEFECT
// Parse the query string into an HQL AST.	WITHOUT_CLASSIFICATION	0.9999280151220049	WITHOUT_CLASSIFICATION	6.475837495902189E-5	DESIGN	5.662767744177085E-6	DEFECT	7.657317562451596E-7	DOCUMENTATION	5.878829060056746E-7	IMPLEMENTATION	2.1012062962133671E-7	TEST
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9977507024742304	WITHOUT_CLASSIFICATION	0.0022440457137498644	DESIGN	2.9032758890387275E-6	IMPLEMENTATION	1.3431506718136321E-6	DOCUMENTATION	5.592491228125972E-7	DEFECT	4.4613633600877954E-7	TEST
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9977507024742304	WITHOUT_CLASSIFICATION	0.0022440457137498644	DESIGN	2.9032758890387275E-6	IMPLEMENTATION	1.3431506718136321E-6	DOCUMENTATION	5.592491228125972E-7	DEFECT	4.4613633600877954E-7	TEST
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9977507024742304	WITHOUT_CLASSIFICATION	0.0022440457137498644	DESIGN	2.9032758890387275E-6	IMPLEMENTATION	1.3431506718136321E-6	DOCUMENTATION	5.592491228125972E-7	DEFECT	4.4613633600877954E-7	TEST
// NOTE : ( max - 1 ) because first is zero-based while max is not...	WITHOUT_CLASSIFICATION	0.9970346017317236	WITHOUT_CLASSIFICATION	0.0018024460205692515	DESIGN	8.306464920744747E-4	IMPLEMENTATION	3.102677589262334E-4	DEFECT	2.0170972192945443E-5	TEST	1.867024513462489E-6	DOCUMENTATION
// -- Package local methods for the QueryLoader delegate --	WITHOUT_CLASSIFICATION	0.9996350179716453	WITHOUT_CLASSIFICATION	3.6474638096413355E-4	DESIGN	8.933667979627924E-8	IMPLEMENTATION	7.194495686353288E-8	DOCUMENTATION	4.6838039227153095E-8	DEFECT	2.7527714881045458E-8	TEST
// If there are no collection fetches, then no further checks are needed	WITHOUT_CLASSIFICATION	0.9826124203576659	WITHOUT_CLASSIFICATION	0.01738250495474152	IMPLEMENTATION	3.1997719492523083E-6	TEST	1.0206908198639347E-6	DOCUMENTATION	6.298260468418742E-7	DESIGN	2.243987765243217E-7	DEFECT
// A shallow query is ok (although technically there should be no fetching here...)	WITHOUT_CLASSIFICATION	0.9818193163992591	WITHOUT_CLASSIFICATION	0.013068714192783347	DEFECT	0.003133447738906063	IMPLEMENTATION	0.0019347344202671703	DESIGN	4.18455285782499E-5	TEST	1.941720205892321E-6	DOCUMENTATION
// should be the first, but just to be safe...	WITHOUT_CLASSIFICATION	0.9999833900603154	WITHOUT_CLASSIFICATION	1.1111198979444301E-5	DESIGN	4.1326197880355545E-6	IMPLEMENTATION	1.244865724046346E-6	DEFECT	1.0040638786025243E-7	TEST	2.084880511132867E-8	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999996521857247	WITHOUT_CLASSIFICATION	1.799291311732427E-7	DESIGN	1.581387297387275E-7	IMPLEMENTATION	5.264592877599216E-9	DOCUMENTATION	3.8979572629566296E-9	TEST	5.838641513037191E-10	DEFECT
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999996521857247	WITHOUT_CLASSIFICATION	1.799291311732427E-7	DESIGN	1.581387297387275E-7	IMPLEMENTATION	5.264592877599216E-9	DOCUMENTATION	3.8979572629566296E-9	TEST	5.838641513037191E-10	DEFECT
// Impl Note: allows multiple collection fetches as long as the // entire fecthed graph still "points back" to a single // root entity for return	WITHOUT_CLASSIFICATION	0.9999987230014299	WITHOUT_CLASSIFICATION	9.481707203483386E-7	DEFECT	2.76347193390639E-7	IMPLEMENTATION	5.2021949635959935E-8	DESIGN	4.439626099496966E-10	TEST	1.474405775394975E-11	DOCUMENTATION
// Otherwise, we have a non-scalar select with defined collection fetch(es). // Make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.9999711567079959	WITHOUT_CLASSIFICATION	1.7619688614226532E-5	DESIGN	1.1023412368958492E-5	IMPLEMENTATION	1.9757243717319072E-7	DEFECT	2.3135909860515317E-9	TEST	3.0499284400975573E-10	DOCUMENTATION
// This is not strictly true.  We actually just need to make sure that // it is ordered by root-entity PK and that that order-by comes before // any non-root-entity ordering...	WITHOUT_CLASSIFICATION	0.9998751315938815	WITHOUT_CLASSIFICATION	1.0988112151067954E-4	DESIGN	1.3524784348070884E-5	IMPLEMENTATION	1.355628264437012E-6	DEFECT	1.0115969762557667E-7	TEST	5.7122975530957415E-9	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.9999991998358903	WITHOUT_CLASSIFICATION	6.011526151021084E-7	DESIGN	1.0680041712053641E-7	DEFECT	5.409908200294913E-8	DOCUMENTATION	3.0106929388509535E-8	IMPLEMENTATION	8.005066158959946E-9	TEST
// igndore it...	WITHOUT_CLASSIFICATION	0.9999671969739214	WITHOUT_CLASSIFICATION	1.5216455656920003E-5	DESIGN	8.688369130708488E-6	IMPLEMENTATION	7.6762063704016E-6	DEFECT	6.688744943667401E-7	DOCUMENTATION	5.531204260892659E-7	TEST
// we are now at a new tree level	WITHOUT_CLASSIFICATION	0.9999984371587646	WITHOUT_CLASSIFICATION	1.259878768720744E-6	DESIGN	2.1275450501803397E-7	DEFECT	3.346307117853595E-8	TEST	3.1466305449209425E-8	DOCUMENTATION	2.5278585026684834E-8	IMPLEMENTATION
// [jsd] The fix for HHH-558...	WITHOUT_CLASSIFICATION	0.99865721214487	WITHOUT_CLASSIFICATION	0.0011309670201345408	DESIGN	2.0039408514524817E-4	DEFECT	3.896255825940157E-6	DOCUMENTATION	3.8559329716545075E-6	IMPLEMENTATION	3.6745610524992168E-6	TEST
// If the token can tell us if it could be an identifier...	WITHOUT_CLASSIFICATION	0.9996142061070291	WITHOUT_CLASSIFICATION	3.8532560571122375E-4	DESIGN	2.1835035917307464E-7	IMPLEMENTATION	1.415236067232832E-7	DEFECT	9.809477010669009E-8	TEST	1.0318523684946057E-8	DOCUMENTATION
// ... and the expected token type was an identifier, then:	WITHOUT_CLASSIFICATION	0.9999992370965971	WITHOUT_CLASSIFICATION	5.13936330536508E-7	DESIGN	2.1824530333108424E-7	DEFECT	1.7536229101177327E-8	DOCUMENTATION	8.971382352126973E-9	IMPLEMENTATION	4.214157647098353E-9	TEST
// Use the token as an identifier.	WITHOUT_CLASSIFICATION	0.9999999713969511	WITHOUT_CLASSIFICATION	2.1827079762682094E-8	DESIGN	3.816217855032065E-9	IMPLEMENTATION	1.3208423788147319E-9	DOCUMENTATION	1.1472367613257709E-9	DEFECT	4.916723320622985E-10	TEST
// Add the token to the AST.	WITHOUT_CLASSIFICATION	0.9999733976385651	WITHOUT_CLASSIFICATION	1.253838746157373E-5	DOCUMENTATION	8.807200045307582E-6	DESIGN	4.175234644779485E-6	IMPLEMENTATION	8.16236926145362E-7	DEFECT	2.653023569358126E-7	TEST
// (NOT (EQ a b) ) => (NE a b)	WITHOUT_CLASSIFICATION	0.9999949047602086	WITHOUT_CLASSIFICATION	3.903007601511538E-6	DESIGN	9.000532432144323E-7	IMPLEMENTATION	1.1092108879796967E-7	DEFECT	9.361313426626387E-8	DOCUMENTATION	8.764472356134713E-8	TEST
// (NOT (NE a b) ) => (EQ a b)	WITHOUT_CLASSIFICATION	0.9999949047602086	WITHOUT_CLASSIFICATION	3.903007601511538E-6	DESIGN	9.000532432144323E-7	IMPLEMENTATION	1.1092108879796967E-7	DEFECT	9.361313426626387E-8	DOCUMENTATION	8.764472356134713E-8	TEST
// (NOT (LT a b) ) => (GE a b)	WITHOUT_CLASSIFICATION	0.9999967818014285	WITHOUT_CLASSIFICATION	2.5511401190744614E-6	DESIGN	4.901605494450679E-7	IMPLEMENTATION	6.978098936426691E-8	DEFECT	5.503420663110692E-8	DOCUMENTATION	5.2082706990551724E-8	TEST
// (NOT (GE a b) ) => (LT a b)	WITHOUT_CLASSIFICATION	0.9999967818014285	WITHOUT_CLASSIFICATION	2.5511401190744614E-6	DESIGN	4.901605494450679E-7	IMPLEMENTATION	6.978098936426691E-8	DEFECT	5.503420663110692E-8	DOCUMENTATION	5.2082706990551724E-8	TEST
// (NOT (LE a b) ) => (GT a b)	WITHOUT_CLASSIFICATION	0.9999983079407415	WITHOUT_CLASSIFICATION	1.0809130924738846E-6	DESIGN	4.872933926501312E-7	IMPLEMENTATION	4.641887684317575E-8	DEFECT	3.8928753208913E-8	DOCUMENTATION	3.850514342192821E-8	TEST
// (NOT (LIKE a b) ) => (NOT_LIKE a b)	WITHOUT_CLASSIFICATION	0.9999969794278791	WITHOUT_CLASSIFICATION	1.5816179351324122E-6	DESIGN	1.2464153265857999E-6	IMPLEMENTATION	9.58730523064665E-8	DEFECT	4.97349756752956E-8	DOCUMENTATION	4.6930831294021244E-8	TEST
// (NOT (NOT_LIKE a b) ) => (LIKE a b)	WITHOUT_CLASSIFICATION	0.9999969794278791	WITHOUT_CLASSIFICATION	1.5816179351324122E-6	DESIGN	1.2464153265857999E-6	IMPLEMENTATION	9.58730523064665E-8	DEFECT	4.97349756752956E-8	DOCUMENTATION	4.6930831294021244E-8	TEST
// (NOT (IS_NOT_NULL a b) ) => (IS_NULL a b)	WITHOUT_CLASSIFICATION	0.9999948661220845	WITHOUT_CLASSIFICATION	3.315960193832394E-6	DESIGN	1.6099743842534016E-6	IMPLEMENTATION	1.013812287821769E-7	DEFECT	7.117805184872842E-8	DOCUMENTATION	3.538405676815466E-8	TEST
// (NOT (BETWEEN a b) ) => (NOT_BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999909439931985	WITHOUT_CLASSIFICATION	4.661055109307517E-6	DESIGN	3.884556126834842E-6	IMPLEMENTATION	2.138865267681467E-7	DEFECT	1.4934658172860237E-7	DOCUMENTATION	1.4716245686031722E-7	TEST
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999935759758708	WITHOUT_CLASSIFICATION	4.7199891577657306E-6	DESIGN	1.5886209785305552E-6	IMPLEMENTATION	7.579712697378345E-8	DEFECT	2.2121628076126065E-8	DOCUMENTATION	1.7495237778044948E-8	TEST
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9992245487585044	WITHOUT_CLASSIFICATION	7.552829718297182E-4	DESIGN	1.1149569949633102E-5	IMPLEMENTATION	3.7385650757624996E-6	DOCUMENTATION	3.4218217096470657E-6	TEST	1.858312930643089E-6	DEFECT
// if // if // Otherwise, handle the error normally.	WITHOUT_CLASSIFICATION	0.9999815415355582	WITHOUT_CLASSIFICATION	1.590867776656704E-5	IMPLEMENTATION	1.5429676553077736E-6	DESIGN	9.35928322511664E-7	DEFECT	4.7284642746531914E-8	TEST	2.360605473087573E-8	DOCUMENTATION
// (NOT (NOT_BETWEEN a b) ) => (BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999909439931985	WITHOUT_CLASSIFICATION	4.661055109307517E-6	DESIGN	3.884556126834842E-6	IMPLEMENTATION	2.138865267681467E-7	DEFECT	1.4934658172860237E-7	DOCUMENTATION	1.4716245686031722E-7	TEST
/* This can never happen because this rule will always eliminate the child NOT.	WITHOUT_CLASSIFICATION	0.9987475782598593	WITHOUT_CLASSIFICATION	0.0012343145291273555	DESIGN	1.631103225557789E-5	IMPLEMENTATION	1.4279519664880421E-6	DEFECT	3.232697835763076E-7	DOCUMENTATION	4.49570076301649E-8	TEST
// Just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9999648979465481	WITHOUT_CLASSIFICATION	2.2108212281216405E-5	IMPLEMENTATION	1.1762085191763256E-5	DESIGN	6.360613906973789E-7	DEFECT	3.4542470405398543E-7	DOCUMENTATION	2.5026988417895623E-7	TEST
// (EQ NULL b) => (IS_NULL b)	WITHOUT_CLASSIFICATION	0.999999770362261	WITHOUT_CLASSIFICATION	1.2089985247199172E-7	DESIGN	7.696980534876142E-8	IMPLEMENTATION	1.3618984190130022E-8	DOCUMENTATION	9.56381656909104E-9	DEFECT	8.585280448721954E-9	TEST
// (EQ a NULL) => (IS_NULL a)	WITHOUT_CLASSIFICATION	0.9999995778824914	WITHOUT_CLASSIFICATION	3.0288227909962487E-7	DESIGN	8.769361086401841E-8	IMPLEMENTATION	1.4099539783067582E-8	DOCUMENTATION	1.0627562777875017E-8	DEFECT	6.814516262169049E-9	TEST
// NOTE: Because we're using ASTUtil.createParent(), the tree must be created from the bottom up. // IS EMPTY x => (EXISTS (QUERY (SELECT_FROM (FROM x) ) ) )	WITHOUT_CLASSIFICATION	0.999997981581306	WITHOUT_CLASSIFICATION	1.7807134899249306E-6	DESIGN	2.2834810452779166E-7	IMPLEMENTATION	6.440706039544976E-9	TEST	1.6442101309571952E-9	DEFECT	1.272183245404751E-9	DOCUMENTATION
// Add NOT if it's negated.	WITHOUT_CLASSIFICATION	0.9999605110184985	WITHOUT_CLASSIFICATION	2.7467724401434176E-5	IMPLEMENTATION	6.4417603185543485E-6	DESIGN	3.6071263099352097E-6	TEST	1.212292549236077E-6	DOCUMENTATION	7.600779222389897E-7	DEFECT
// Create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.99998551878834	WITHOUT_CLASSIFICATION	1.4128094825897207E-5	DESIGN	1.2059357218351798E-7	DEFECT	1.1045321157254702E-7	IMPLEMENTATION	7.596009380715836E-8	DOCUMENTATION	4.6109956617395995E-8	TEST
// Case 1: Multi token keywords GROUP BY and ORDER BY // The next token ( LT(2) ) should be 'by'... otherwise, this is just an ident.	WITHOUT_CLASSIFICATION	0.9836665096350724	WITHOUT_CLASSIFICATION	0.015828314214627343	DESIGN	5.031575789405521E-4	DEFECT	1.3420467521939276E-6	TEST	4.1221712442984563E-7	IMPLEMENTATION	2.643074831757012E-7	DOCUMENTATION
// Case 2: The current token is after FROM and before '.'.	WITHOUT_CLASSIFICATION	0.999876090548074	WITHOUT_CLASSIFICATION	1.161079621409226E-4	DEFECT	7.0917724347690765E-6	DESIGN	4.708156362881449E-7	DOCUMENTATION	1.202951988931781E-7	IMPLEMENTATION	1.1860651507706123E-7	TEST
// This handles HHH-354, where there is a strange property name in a where clause. // If the lookahead contains a DOT then something that isn't an IDENT...	WITHOUT_CLASSIFICATION	0.9995339615592431	WITHOUT_CLASSIFICATION	4.65211656384321E-4	DESIGN	7.173555010055367E-7	DEFECT	7.160414504437123E-8	TEST	3.361218232164152E-8	DOCUMENTATION	4.212544228035929E-9	IMPLEMENTATION
// See if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.9999996040798999	WITHOUT_CLASSIFICATION	3.941714977491508E-7	DESIGN	6.122340823292031E-10	DOCUMENTATION	4.977975432405168E-10	DEFECT	4.538531852999267E-10	IMPLEMENTATION	1.8471758718466189E-10	TEST
// Set it!	WITHOUT_CLASSIFICATION	0.9999366882537856	WITHOUT_CLASSIFICATION	4.124983732379976E-5	DEFECT	1.5920897591956538E-5	DESIGN	3.1719197986597172E-6	IMPLEMENTATION	1.7248715696068952E-6	TEST	1.2442199303066162E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999991085847939	WITHOUT_CLASSIFICATION	5.678916425814814E-7	DESIGN	1.9865147318605438E-7	DEFECT	6.276681771231637E-8	IMPLEMENTATION	4.3980501861465335E-8	DOCUMENTATION	1.81247707007564E-8	TEST
// strip the " where "	WITHOUT_CLASSIFICATION	0.99999933668011	WITHOUT_CLASSIFICATION	2.9904850529385966E-7	IMPLEMENTATION	2.80928637631815E-7	DESIGN	4.2521608029756336E-8	TEST	2.5573375423704168E-8	DOCUMENTATION	1.5247763627677813E-8	DEFECT
// Don't really know all the codes required to adequately decipher returned jdbc exceptions here. // simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.999315742091591	WITHOUT_CLASSIFICATION	6.759669368781025E-4	DEFECT	5.9841400376469336E-6	DESIGN	1.751513492798773E-6	IMPLEMENTATION	5.467248025583863E-7	TEST	8.593197816103979E-9	DOCUMENTATION
// at the very least cleanup the data :)	WITHOUT_CLASSIFICATION	0.9954692008187291	WITHOUT_CLASSIFICATION	0.004371589316858901	DESIGN	1.4964946810218176E-4	IMPLEMENTATION	6.597809134165402E-6	DEFECT	1.6341980948881524E-6	DOCUMENTATION	1.3283890806702036E-6	TEST
// First, save off the pertinent ids, as the return value	WITHOUT_CLASSIFICATION	0.9999998045011876	WITHOUT_CLASSIFICATION	8.889495141031452E-8	DEFECT	7.272892910760839E-8	DESIGN	3.109367786182408E-8	IMPLEMENTATION	1.916541064087527E-9	DOCUMENTATION	8.647129665478446E-10	TEST
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999331344036405	WITHOUT_CLASSIFICATION	6.577989171359288E-5	DESIGN	8.600880503512488E-7	IMPLEMENTATION	1.0872707960636988E-7	TEST	6.133381918591245E-8	DOCUMENTATION	5.555569682888168E-8	DEFECT
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999331344036405	WITHOUT_CLASSIFICATION	6.577989171359288E-5	DESIGN	8.600880503512488E-7	IMPLEMENTATION	1.0872707960636988E-7	TEST	6.133381918591245E-8	DOCUMENTATION	5.555569682888168E-8	DEFECT
// Start performing the updates	WITHOUT_CLASSIFICATION	0.999976918969327	WITHOUT_CLASSIFICATION	1.6594908448093424E-5	IMPLEMENTATION	2.823168425484826E-6	DEFECT	2.3846437754686774E-6	DESIGN	9.667612577669917E-7	TEST	3.115487662360777E-7	DOCUMENTATION
// First, save off the pertinent ids, saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.9999993096859421	WITHOUT_CLASSIFICATION	4.5829973249153264E-7	DEFECT	8.775834837530606E-8	DESIGN	8.32713895786497E-8	IMPLEMENTATION	4.8910654047865576E-8	TEST	1.2073933395194959E-8	DOCUMENTATION
// Start performing the deletes	WITHOUT_CLASSIFICATION	0.9999968176513978	WITHOUT_CLASSIFICATION	1.7556193495853406E-6	DESIGN	1.0297896969109079E-6	IMPLEMENTATION	2.880526817711692E-7	TEST	6.976419338158162E-8	DEFECT	3.912268049037132E-8	DOCUMENTATION
// otherwise, everything ok.	WITHOUT_CLASSIFICATION	0.9997606614093484	WITHOUT_CLASSIFICATION	1.3001391141163407E-4	IMPLEMENTATION	1.0577368010427264E-4	DESIGN	1.5509659026768336E-6	TEST	1.3121433997367337E-6	DOCUMENTATION	6.878898331212139E-7	DEFECT
// visit width-first, then depth	WITHOUT_CLASSIFICATION	0.9999967712931384	WITHOUT_CLASSIFICATION	1.97782957695021E-6	IMPLEMENTATION	4.6605398952207446E-7	DEFECT	4.0554221978082956E-7	DESIGN	3.0625456117480495E-7	TEST	7.302651420737337E-8	DOCUMENTATION
// if the types report logical equivalence, return true...	WITHOUT_CLASSIFICATION	0.9999728887015769	WITHOUT_CLASSIFICATION	2.5404545639809908E-5	DESIGN	1.4467604777879388E-6	DEFECT	2.1886433054599765E-7	IMPLEMENTATION	3.1447648860305694E-8	TEST	9.680326065607356E-9	DOCUMENTATION
// otherwise, perform a "deep equivalence" check...	WITHOUT_CLASSIFICATION	0.9987896859715896	WITHOUT_CLASSIFICATION	0.0011915849915155876	DESIGN	1.841668219904948E-5	IMPLEMENTATION	1.8115657332587178E-7	DOCUMENTATION	8.734355329861977E-8	DEFECT	4.3854569204666245E-8	TEST
// If there is no WHERE node, make one.	WITHOUT_CLASSIFICATION	0.9999993294366649	WITHOUT_CLASSIFICATION	4.0448258891064755E-7	DESIGN	1.953082223979709E-7	DEFECT	5.439427109499342E-8	TEST	1.4461579057583214E-8	IMPLEMENTATION	1.9166735562467775E-9	DOCUMENTATION
// inject the WHERE after the parent	WITHOUT_CLASSIFICATION	0.9999955554760289	WITHOUT_CLASSIFICATION	3.1133147561363216E-6	IMPLEMENTATION	1.0337699903202633E-6	DESIGN	1.0671891563506265E-7	DOCUMENTATION	9.774360921470786E-8	DEFECT	9.297669988918768E-8	TEST
// Never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9999943131228058	WITHOUT_CLASSIFICATION	5.615123393543086E-6	DESIGN	3.810447880207616E-8	IMPLEMENTATION	2.702807731577042E-8	TEST	4.295988405207068E-9	DOCUMENTATION	2.325256138045022E-9	DEFECT
// Moved here from SelectClause [jsd]	WITHOUT_CLASSIFICATION	0.9999674399082158	WITHOUT_CLASSIFICATION	3.243163069354016E-5	DESIGN	4.351996386409849E-8	IMPLEMENTATION	3.364006752088846E-8	DEFECT	3.2308849683116134E-8	TEST	1.8992209559514968E-8	DOCUMENTATION
///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999299110184646	WITHOUT_CLASSIFICATION	5.753399134786891E-4	DESIGN	5.258666584817819E-5	IMPLEMENTATION	2.5754187005847864E-5	DOCUMENTATION	2.5414321560056388E-5	DEFECT	2.179472746118229E-5	TEST
// Use the table fromElement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.9999999732947131	WITHOUT_CLASSIFICATION	1.294918068371293E-8	DESIGN	7.65116556794759E-9	DEFECT	4.453246748961184E-9	IMPLEMENTATION	1.4696013419528638E-9	DOCUMENTATION	1.8209242067338808E-10	TEST
// Set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.999991335052585	WITHOUT_CLASSIFICATION	8.357417432432522E-6	DEFECT	2.2653851384463452E-7	IMPLEMENTATION	5.0542978077815816E-8	DOCUMENTATION	1.741877867365012E-8	DESIGN	1.3029712043065538E-8	TEST
// If the uresolved property path isn't set yet, just use the property name.	WITHOUT_CLASSIFICATION	0.9999813748999822	WITHOUT_CLASSIFICATION	1.5434421591420355E-5	IMPLEMENTATION	2.168280194706141E-6	DEFECT	8.166134142180072E-7	DESIGN	1.218367722068323E-7	DOCUMENTATION	8.394804525653787E-8	TEST
// The 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.9999958586012244	WITHOUT_CLASSIFICATION	3.2464537867469704E-6	DEFECT	5.28660705485383E-7	IMPLEMENTATION	3.226931392650615E-7	DESIGN	2.6613457075772677E-8	DOCUMENTATION	1.697768692948446E-8	TEST
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.999998021257946	WITHOUT_CLASSIFICATION	1.475496360360487E-6	DESIGN	2.9752812935266284E-7	IMPLEMENTATION	1.9682760422541899E-7	DEFECT	4.9155362533482784E-9	DOCUMENTATION	3.97442389346725E-9	TEST
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.999998021257946	WITHOUT_CLASSIFICATION	1.475496360360487E-6	DESIGN	2.9752812935266284E-7	IMPLEMENTATION	1.9682760422541899E-7	DEFECT	4.9155362533482784E-9	DOCUMENTATION	3.97442389346725E-9	TEST
// If this dot has already been resolved, stop now.	WITHOUT_CLASSIFICATION	0.9999949778276339	WITHOUT_CLASSIFICATION	3.868612040664206E-6	DESIGN	1.0117733020480654E-6	IMPLEMENTATION	1.0759782659515756E-7	DEFECT	2.348563161755527E-8	TEST	1.0703565195794235E-8	DOCUMENTATION
// If there is no data type for this node, and we're at the end of the path (top most dot node), then // this might be a Java constant.	WITHOUT_CLASSIFICATION	0.9902114737683934	WITHOUT_CLASSIFICATION	0.009751571307354896	DESIGN	3.0526330102343015E-5	DEFECT	5.819217344167415E-6	IMPLEMENTATION	3.8090569300300716E-7	DOCUMENTATION	2.2847111209033653E-7	TEST
// The property is a collection...	WITHOUT_CLASSIFICATION	0.9996885849704049	WITHOUT_CLASSIFICATION	2.9482976454835614E-4	DEFECT	1.235768424730056E-5	DESIGN	3.889122661698281E-6	IMPLEMENTATION	1.693928591374474E-7	DOCUMENTATION	1.6906527865167942E-7	TEST
// The property is a component...	WITHOUT_CLASSIFICATION	0.9999562032468339	WITHOUT_CLASSIFICATION	2.5731419422194754E-5	DEFECT	1.7643461094393543E-5	DESIGN	2.697196952327721E-7	IMPLEMENTATION	9.465053322488381E-8	DOCUMENTATION	5.750242120068383E-8	TEST
// The property is another class..	WITHOUT_CLASSIFICATION	0.999980695205004	WITHOUT_CLASSIFICATION	9.901767937372705E-6	DEFECT	9.158877433340087E-6	DESIGN	1.8175514232712787E-7	DOCUMENTATION	4.822468110078177E-8	TEST	1.416980202337866E-8	IMPLEMENTATION
// Otherwise, this is a primitive type.	WITHOUT_CLASSIFICATION	0.9999864350367925	WITHOUT_CLASSIFICATION	1.3250096641327147E-5	DESIGN	2.3298854152925755E-7	IMPLEMENTATION	4.7676664997815025E-8	TEST	2.2478982747633495E-8	DEFECT	1.1722377074989986E-8	DOCUMENTATION
//foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.9729073208100165	WITHOUT_CLASSIFICATION	0.026929608013433977	DESIGN	9.815111412593322E-5	IMPLEMENTATION	2.4672282326855162E-5	TEST	2.4355232419352257E-5	DEFECT	1.5892547677419705E-5	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999714730207383	WITHOUT_CLASSIFICATION	2.6710341261840862E-5	DEFECT	1.7658945677176406E-6	DESIGN	4.773254686941339E-8	IMPLEMENTATION	2.633643689215698E-9	DOCUMENTATION	3.7724147608235315E-10	TEST
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9992305846534619	WITHOUT_CLASSIFICATION	6.927660196913889E-4	IMPLEMENTATION	6.164088734951204E-5	DESIGN	1.3273317723962628E-5	DEFECT	1.4847632111421931E-6	DOCUMENTATION	2.503585620595266E-7	TEST
// in non-select queries, the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.9999999924241201	WITHOUT_CLASSIFICATION	5.795970349743E-9	DEFECT	1.3873549766409906E-9	DESIGN	3.1994745310276113E-10	TEST	3.9042799719980844E-11	IMPLEMENTATION	3.3564469254942674E-11	DOCUMENTATION
// this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.9999984504667817	WITHOUT_CLASSIFICATION	1.5364675731285358E-6	DESIGN	1.082019974474205E-8	DEFECT	1.4605648374029174E-9	DOCUMENTATION	5.685060748684119E-10	IMPLEMENTATION	2.1637461327819234E-10	TEST
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999714730207383	WITHOUT_CLASSIFICATION	2.6710341261840862E-5	DEFECT	1.7658945677176406E-6	DESIGN	4.773254686941339E-8	IMPLEMENTATION	2.633643689215698E-9	DOCUMENTATION	3.7724147608235315E-10	TEST
// even though we might find a pre-existing element by join path, we may not be able to reuse it...	WITHOUT_CLASSIFICATION	0.9973778221578339	WITHOUT_CLASSIFICATION	0.0026219559517552692	DESIGN	9.66143532761621E-8	IMPLEMENTATION	9.234054082903056E-8	DEFECT	1.7847584832546346E-8	TEST	1.5087932022854147E-8	DOCUMENTATION
// NOTE : addDuplicateAlias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.9700032768877563	WITHOUT_CLASSIFICATION	0.025502496698983884	DESIGN	0.004412908722565268	IMPLEMENTATION	5.250128399354354E-5	DEFECT	2.685534548486287E-5	DOCUMENTATION	1.961061216059603E-6	TEST
// if the from-clauses are the same, we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.999537540742234	WITHOUT_CLASSIFICATION	4.615581272121947E-4	DESIGN	8.061803237026919E-7	DEFECT	5.184099346553572E-8	TEST	3.789592373363266E-8	IMPLEMENTATION	5.213312954517248E-9	DOCUMENTATION
// again, null != null here	WITHOUT_CLASSIFICATION	0.9999967251554288	WITHOUT_CLASSIFICATION	2.6724370036175155E-6	DESIGN	3.044799958660843E-7	IMPLEMENTATION	1.3600113519579115E-7	DEFECT	1.1454173733132805E-7	TEST	4.7384699189700695E-8	DOCUMENTATION
// If this is an implied join in a from element, then use the impled join type which is part of the // tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.9999995349248446	WITHOUT_CLASSIFICATION	4.610350204887834E-7	DESIGN	2.568762505875184E-9	DEFECT	1.2986206969736119E-9	IMPLEMENTATION	9.973379007477638E-11	TEST	7.301779357415595E-11	DOCUMENTATION
// otherwise (subquery case) dont reuse the fromElement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.9999963753543896	WITHOUT_CLASSIFICATION	3.197548176047619E-6	DESIGN	3.438816593594796E-7	DEFECT	6.0700018061284E-8	IMPLEMENTATION	1.820982313684676E-8	DOCUMENTATION	4.305933852001117E-9	TEST
// we know only the lhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999899250244688	WITHOUT_CLASSIFICATION	6.964643219759954E-6	IMPLEMENTATION	2.7932969057792497E-6	DESIGN	2.62165517616029E-7	DOCUMENTATION	4.7177759641908004E-8	DEFECT	7.692128654277628E-9	TEST
// the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.9999997926521597	WITHOUT_CLASSIFICATION	1.1751246646139937E-7	IMPLEMENTATION	6.753938821944757E-8	DEFECT	1.2122585891786867E-8	DOCUMENTATION	7.341644842556189E-9	DESIGN	2.8317548630239337E-9	TEST
// only the identifier property field name can be a reference to the associated entity's PK...	WITHOUT_CLASSIFICATION	0.9999879227290402	WITHOUT_CLASSIFICATION	1.2069016395150978E-5	DESIGN	5.151202272391321E-9	DOCUMENTATION	1.3238268049184509E-9	DEFECT	9.017768578882527E-10	IMPLEMENTATION	8.777587903688069E-10	TEST
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9998483336449366	WITHOUT_CLASSIFICATION	1.3311478980903327E-4	DEFECT	1.3169967982432655E-5	IMPLEMENTATION	2.6999561847628886E-6	TEST	2.200076814254839E-6	DOCUMENTATION	4.815642730049102E-7	DESIGN
// Append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.9995589961384593	WITHOUT_CLASSIFICATION	4.032869206234606E-4	IMPLEMENTATION	1.781066842318462E-5	DEFECT	1.5725640356554128E-5	DESIGN	3.804341424579798E-6	DOCUMENTATION	3.762907128691247E-7	TEST
// If the lhs is a collection, use CollectionPropertyMapping	WITHOUT_CLASSIFICATION	0.999993876797367	WITHOUT_CLASSIFICATION	4.083190277457399E-6	DEFECT	2.0143119320557682E-6	DESIGN	1.8332627283744208E-8	IMPLEMENTATION	4.732875112772813E-9	TEST	2.634921147512997E-9	DOCUMENTATION
// Tell the destination fromElement to 'includeSubclasses'.	WITHOUT_CLASSIFICATION	0.9999726251905326	WITHOUT_CLASSIFICATION	2.5845878749525786E-5	DESIGN	1.1809161262901768E-6	DOCUMENTATION	1.3456401601138292E-7	TEST	1.1275477570971607E-7	IMPLEMENTATION	1.0069580005207808E-7	DEFECT
// Use theta style (for regression) // Move the node up, after the origin node.	WITHOUT_CLASSIFICATION	0.9999996357796715	WITHOUT_CLASSIFICATION	2.2569568931110503E-7	IMPLEMENTATION	1.0692599813418424E-7	DESIGN	2.497204273766247E-8	DEFECT	3.397724706929865E-9	DOCUMENTATION	3.2288734645005242E-9	TEST
// Don't resolve the node again.	WITHOUT_CLASSIFICATION	0.9998870209310401	WITHOUT_CLASSIFICATION	1.0796191488240854E-4	IMPLEMENTATION	2.850548658636532E-6	DESIGN	9.949550891763851E-7	DOCUMENTATION	6.442524664584872E-7	TEST	5.273978633053565E-7	DEFECT
// for expected parameter type injection, we expect that the lhs represents // some form of property ref and that the children of the in-list represent // one-or-more params.	WITHOUT_CLASSIFICATION	0.9999950367884074	WITHOUT_CLASSIFICATION	4.879102276477805E-6	DESIGN	3.9356606475772636E-8	TEST	2.375834123757929E-8	IMPLEMENTATION	1.794587951789978E-8	DOCUMENTATION	3.048488925882754E-9	DEFECT
// we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.9999963743780674	WITHOUT_CLASSIFICATION	3.5523513319096954E-6	DESIGN	3.116561908685119E-8	TEST	2.4694527365089532E-8	IMPLEMENTATION	1.6150026784970827E-8	DOCUMENTATION	1.2604273743199886E-9	DEFECT
// we have something like : "? [op] rhs"	WITHOUT_CLASSIFICATION	0.9855014364077497	WITHOUT_CLASSIFICATION	0.01299623670287447	DESIGN	0.0011063995237054018	IMPLEMENTATION	1.7817745845610336E-4	DEFECT	1.5305470486748484E-4	TEST	6.469520234699217E-5	DOCUMENTATION
// we have something like : "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.9962361224312367	WITHOUT_CLASSIFICATION	0.0032536111756341812	DESIGN	1.951446342774285E-4	DEFECT	1.903959769527738E-4	IMPLEMENTATION	9.398055824308116E-5	TEST	3.074522365577912E-5	DOCUMENTATION
// we know only the rhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.999990964434042	WITHOUT_CLASSIFICATION	5.9673585996427685E-6	IMPLEMENTATION	2.8866966327596804E-6	DESIGN	1.4913525495448227E-7	DOCUMENTATION	2.7060485226570568E-8	DEFECT	5.314985407233772E-9	TEST
// handle the (assumed) valid cases: // #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.9990876047003545	WITHOUT_CLASSIFICATION	8.946836640076413E-4	DESIGN	1.683935066479974E-5	DEFECT	6.51257340266802E-7	IMPLEMENTATION	1.5117202095800492E-7	TEST	6.98556118351885E-8	DOCUMENTATION
// one or the other needs to be a datetime for us to get into this method in the first place...	WITHOUT_CLASSIFICATION	0.7245960448549432	DESIGN	0.27540371190924046	WITHOUT_CLASSIFICATION	1.1466465895341154E-7	IMPLEMENTATION	7.89687658697062E-8	TEST	3.391335689525037E-8	DEFECT	1.5689034538311613E-8	DOCUMENTATION
// #3 - note that this is also true of "datetime - :param"...	WITHOUT_CLASSIFICATION	0.9954466742718645	WITHOUT_CLASSIFICATION	0.004408700520908793	DESIGN	7.463268524468005E-5	IMPLEMENTATION	5.9889243766860676E-5	DEFECT	8.39595977660342E-6	TEST	1.707318438590374E-6	DOCUMENTATION
// #2	WITHOUT_CLASSIFICATION	0.9999970051858881	WITHOUT_CLASSIFICATION	1.2707441361822635E-6	DESIGN	1.1397499432049488E-6	DEFECT	2.636979976288701E-7	IMPLEMENTATION	1.7646469504458466E-7	DOCUMENTATION	1.4415733987755946E-7	TEST
// Generate the inner join -- The elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.9999999562309256	WITHOUT_CLASSIFICATION	4.003192876050053E-8	DESIGN	2.6177903978660023E-9	IMPLEMENTATION	5.819363504784922E-10	DOCUMENTATION	3.344600185609251E-10	TEST	2.0295879501043866E-10	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999010635999149	WITHOUT_CLASSIFICATION	6.391609878867383E-5	IMPLEMENTATION	1.958247717057761E-5	DESIGN	1.1942668444724631E-5	DEFECT	2.441226225870572E-6	DOCUMENTATION	1.0539294551791083E-6	TEST
// The 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.9999966844481408	WITHOUT_CLASSIFICATION	2.1374047274836736E-6	DEFECT	9.060678238721577E-7	IMPLEMENTATION	2.675931072524407E-7	DESIGN	2.929930320738332E-9	TEST	1.5562702443542286E-9	DOCUMENTATION
// Add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.999998848861612	WITHOUT_CLASSIFICATION	1.0080341180411167E-6	IMPLEMENTATION	9.957776418766105E-8	DOCUMENTATION	3.92131497338117E-8	DESIGN	3.191546694111313E-9	DEFECT	1.1218094526517362E-9	TEST
// Sometimes use the element table alias, sometimes use the... umm... collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.9999455303460667	WITHOUT_CLASSIFICATION	4.875010160120997E-5	DESIGN	5.221638907131801E-6	IMPLEMENTATION	2.8728529451826643E-7	DEFECT	1.890935576984137E-7	DOCUMENTATION	2.1534572801413814E-8	TEST
// Now, set the text for this node.  It should be the element columns.	WITHOUT_CLASSIFICATION	0.9977875810710786	WITHOUT_CLASSIFICATION	0.0021793097447922816	DESIGN	3.069899619866545E-5	IMPLEMENTATION	2.3178288248852697E-6	TEST	6.958417784860263E-8	DEFECT	2.277492773606898E-8	DOCUMENTATION
// Get the function return value type, based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.9999999791043281	WITHOUT_CLASSIFICATION	1.4109976332371086E-8	IMPLEMENTATION	4.626451869922037E-9	DESIGN	1.229043323349711E-9	DEFECT	8.920376319160088E-10	DOCUMENTATION	3.816279853673825E-11	TEST
// This will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.9999879545428704	WITHOUT_CLASSIFICATION	6.700872553312078E-6	DEFECT	3.0655313950329968E-6	IMPLEMENTATION	2.1866128837367685E-6	DESIGN	5.983951180186814E-8	DOCUMENTATION	3.2600785819093714E-8	TEST
// mutation depends on the types of nodes invloved...	WITHOUT_CLASSIFICATION	0.9999695736983913	WITHOUT_CLASSIFICATION	1.8664369477350668E-5	DESIGN	6.604032129649808E-6	DEFECT	4.886010072194965E-6	IMPLEMENTATION	1.7956625867753992E-7	TEST	9.232367070367438E-8	DOCUMENTATION
// "pass along" our initial embedded parameter node(s) to the first generated // sql fragment so that it can be handled later for parameter binding...	WITHOUT_CLASSIFICATION	0.995640917929143	WITHOUT_CLASSIFICATION	0.0043587412348894475	DESIGN	2.0704813174425547E-7	IMPLEMENTATION	1.3096524968463104E-7	TEST	1.930296887680889E-9	DEFECT	8.922891968895738E-10	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999997575673358	WITHOUT_CLASSIFICATION	2.078801887355689E-7	DESIGN	2.6170177534259615E-8	IMPLEMENTATION	6.681108247172953E-9	DEFECT	1.2512080525208047E-9	TEST	4.499815312182399E-10	DOCUMENTATION
// Generated select expressions are already resolved, nothing to do.	WITHOUT_CLASSIFICATION	0.9999999223330905	WITHOUT_CLASSIFICATION	4.3461029730374395E-8	DESIGN	2.6639090881618143E-8	IMPLEMENTATION	4.918144889217324E-9	DEFECT	1.4478315130596142E-9	TEST	1.2008124140237528E-9	DOCUMENTATION
// The path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.9999969425222079	WITHOUT_CLASSIFICATION	3.01000193596767E-6	DESIGN	4.409674459291864E-8	DEFECT	2.351452249582986E-9	DOCUMENTATION	8.522292334943555E-10	IMPLEMENTATION	1.7543016602742674E-10	TEST
// The HQL class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.9999999151872663	WITHOUT_CLASSIFICATION	7.950469790663274E-8	DESIGN	4.323785982296319E-9	DEFECT	6.345409266676503E-10	DOCUMENTATION	3.176936589966729E-10	IMPLEMENTATION	3.20153068843871E-11	TEST
// Associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.9999989582453724	WITHOUT_CLASSIFICATION	4.946202028359403E-7	IMPLEMENTATION	4.764479001944258E-7	DESIGN	4.542137188323007E-8	TEST	2.249729870558187E-8	DOCUMENTATION	2.767854028228593E-9	DEFECT
// try the parent FromClause...	WITHOUT_CLASSIFICATION	0.9999917604599058	WITHOUT_CLASSIFICATION	7.526976540863616E-6	IMPLEMENTATION	5.651558750090264E-7	DESIGN	7.681308214671077E-8	DEFECT	4.9626117271130023E-8	DOCUMENTATION	2.0968478768916217E-8	TEST
// Add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.9999985165583607	WITHOUT_CLASSIFICATION	6.160055735145214E-7	IMPLEMENTATION	5.661023107679537E-7	DESIGN	2.673391608961393E-7	DOCUMENTATION	2.6162235916650868E-8	TEST	7.83235809109153E-9	DEFECT
// Make sure that all from elements registered with this FROM clause are actually in the AST.	WITHOUT_CLASSIFICATION	0.9999877421667832	WITHOUT_CLASSIFICATION	1.2247129393846701E-5	DESIGN	8.725801128713741E-9	IMPLEMENTATION	8.909102283375019E-10	DEFECT	6.38983566875095E-10	DOCUMENTATION	4.481280221204195E-10	TEST
// Invoke setScalarColumnText on each constructor argument.	WITHOUT_CLASSIFICATION	0.9999986183025514	WITHOUT_CLASSIFICATION	9.069594459860759E-7	DESIGN	3.7418777792186114E-7	IMPLEMENTATION	6.763058164270096E-8	DOCUMENTATION	3.0150735698563194E-8	DEFECT	2.768907426005129E-9	TEST
// Collect the select expressions, skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.9999999407793502	WITHOUT_CLASSIFICATION	5.101366064830036E-8	DESIGN	3.949182838305941E-9	DEFECT	3.827741056015227E-9	IMPLEMENTATION	3.791454010058978E-10	TEST	5.0919917544093106E-11	DOCUMENTATION
// return an empty Type array	WITHOUT_CLASSIFICATION	0.9999964651458944	WITHOUT_CLASSIFICATION	3.518376936432173E-6	DESIGN	1.1125573993024558E-8	DEFECT	3.144877920555394E-9	DOCUMENTATION	1.1136359527112946E-9	IMPLEMENTATION	1.0930814229518933E-9	TEST
// Constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.9998977399640182	WITHOUT_CLASSIFICATION	1.0088201750162405E-4	DESIGN	6.58789213703781E-7	IMPLEMENTATION	6.302240424412812E-7	DEFECT	4.9990698638388414E-8	TEST	3.901452529266091E-8	DOCUMENTATION
// this is the exception returned by ReflectHelper.getConstructor() if it cannot // locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.9999990327329144	WITHOUT_CLASSIFICATION	5.512871889308707E-7	DESIGN	4.1516051582593355E-7	DEFECT	7.722884698302173E-10	TEST	4.1629661846505485E-11	IMPLEMENTATION	5.462707635046977E-12	DOCUMENTATION
// if there is no order by, make one	WITHOUT_CLASSIFICATION	0.9999976259456088	WITHOUT_CLASSIFICATION	1.7098469426218905E-6	DESIGN	5.467052301229063E-7	TEST	6.837536497979309E-8	DEFECT	4.283727191835252E-8	IMPLEMENTATION	6.289581459700985E-9	DOCUMENTATION
// Find the WHERE; if there is no WHERE, find the FROM...	WITHOUT_CLASSIFICATION	0.9999948731713998	WITHOUT_CLASSIFICATION	4.270579110533065E-6	DESIGN	4.0988678707466354E-7	TEST	2.1891189958683266E-7	IMPLEMENTATION	2.01637784175693E-7	DEFECT	2.5813018853010098E-8	DOCUMENTATION
// Now, inject the newly built ORDER BY into the tree	WITHOUT_CLASSIFICATION	0.9999887977044797	WITHOUT_CLASSIFICATION	9.177502897517571E-6	DESIGN	1.0808891006378945E-6	IMPLEMENTATION	5.119839075396706E-7	DEFECT	3.337200238489002E-7	DOCUMENTATION	9.819959079509306E-8	TEST
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999936910282146	WITHOUT_CLASSIFICATION	4.657067458124066E-6	IMPLEMENTATION	1.1684229687194094E-6	DESIGN	3.382139950010837E-7	TEST	1.1931502754085888E-7	DEFECT	2.5952336130011862E-8	DOCUMENTATION
// logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.999999326955266	WITHOUT_CLASSIFICATION	5.66389458934543E-7	DESIGN	7.797374849803653E-8	IMPLEMENTATION	2.2426048275865062E-8	DEFECT	4.874921454322504E-9	TEST	1.3805566601243511E-9	DOCUMENTATION
// Render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.9999769891425656	WITHOUT_CLASSIFICATION	2.173308082077512E-5	DESIGN	1.1396083231061807E-6	IMPLEMENTATION	1.1364218584325811E-7	TEST	1.4288882568460116E-8	DOCUMENTATION	1.0237222147287744E-8	DEFECT
// Class names in the FROM clause result in a JoinSequence (the old FromParser does this).	WITHOUT_CLASSIFICATION	0.9999967209455208	WITHOUT_CLASSIFICATION	1.9780755070106044E-6	DEFECT	1.2796582357621012E-6	DESIGN	1.6146843627803667E-8	DOCUMENTATION	5.133742639342796E-9	TEST	4.015008318666424E-11	IMPLEMENTATION
// For many-to-many joins, use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.9999878410308097	WITHOUT_CLASSIFICATION	1.2078678354448299E-5	DESIGN	5.8494983723287316E-8	IMPLEMENTATION	9.071901574187058E-9	DEFECT	7.640264701423278E-9	TEST	5.083685921353261E-9	DOCUMENTATION
// Otherwise, use the property mapping.	WITHOUT_CLASSIFICATION	0.9999921661916285	WITHOUT_CLASSIFICATION	6.691383891620005E-6	IMPLEMENTATION	7.391029643936462E-7	DEFECT	2.4732820495694037E-7	DESIGN	1.2953684143799058E-7	DOCUMENTATION	2.6456469083182536E-8	TEST
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.999980778741223	WITHOUT_CLASSIFICATION	1.7855610169528223E-5	DEFECT	9.704360968649074E-7	DESIGN	2.2985532964947217E-7	IMPLEMENTATION	1.1933376637907067E-7	TEST	4.6023414571135716E-8	DOCUMENTATION
// If the property is a special collection property name, return a CollectionPropertyMapping.	WITHOUT_CLASSIFICATION	0.9999872464681715	WITHOUT_CLASSIFICATION	1.0147663487459928E-5	DEFECT	2.4829233176954235E-6	IMPLEMENTATION	1.1216071256541294E-7	DESIGN	8.205965210956892E-9	DOCUMENTATION	2.578345561771359E-9	TEST
// Collection of components.	WITHOUT_CLASSIFICATION	0.9997222578113898	WITHOUT_CLASSIFICATION	2.770685406706175E-4	DESIGN	2.689433005483884E-7	DEFECT	1.9306100169898685E-7	IMPLEMENTATION	1.3315377428533332E-7	DOCUMENTATION	7.84898631722585E-8	TEST
// make sure the lhs is "assignable"...	WITHOUT_CLASSIFICATION	0.9999984494636147	WITHOUT_CLASSIFICATION	1.312586503256851E-6	DESIGN	1.4981475445968534E-7	DEFECT	7.477028879373613E-8	TEST	9.512452860452855E-9	IMPLEMENTATION	3.85238597158762E-9	DOCUMENTATION
// false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.9999993844883864	WITHOUT_CLASSIFICATION	3.5589418687580336E-7	IMPLEMENTATION	1.7868161046846994E-7	DESIGN	3.037483728407847E-8	DOCUMENTATION	2.8920555438742068E-8	DEFECT	2.1640423552051397E-8	TEST
// Register the FromElement with the FROM clause, now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.9999874164959675	WITHOUT_CLASSIFICATION	7.63717877949874E-6	IMPLEMENTATION	4.863759903626931E-6	DESIGN	6.008255243318874E-8	TEST	1.7823344175024235E-8	DEFECT	4.659452695254686E-9	DOCUMENTATION
// currently allowed...	WITHOUT_CLASSIFICATION	0.9997615895465444	WITHOUT_CLASSIFICATION	1.542344758057321E-4	DESIGN	7.049844365840116E-5	IMPLEMENTATION	1.0576466595149963E-5	DEFECT	2.967029057768189E-6	DOCUMENTATION	1.3403833856729034E-7	TEST
// HHH-276 : implied joins in a subselect where clause - The destination needs to be added // to the destination's from clause. // Not sure if this is will fix everything, but it works.	WITHOUT_CLASSIFICATION	0.5109096202760668	WITHOUT_CLASSIFICATION	0.46906260575817066	DEFECT	0.020007253766258472	DESIGN	1.942496668739722E-5	TEST	1.0760263592116815E-6	DOCUMENTATION	1.920645748494393E-8	IMPLEMENTATION
//return classAlias == null ? className : classAlias;	WITHOUT_CLASSIFICATION	0.9843878585984078	WITHOUT_CLASSIFICATION	0.015610948941298726	DESIGN	7.194404658643868E-7	DEFECT	2.580507789824344E-7	DOCUMENTATION	1.1776669685018465E-7	IMPLEMENTATION	9.720235176787911E-8	TEST
// This is an explicit FROM element.	WITHOUT_CLASSIFICATION	0.9995418719537479	WITHOUT_CLASSIFICATION	4.5595480709294413E-4	DESIGN	1.7461400160706987E-6	DEFECT	2.71197885453362E-7	TEST	9.7103376938689E-8	DOCUMENTATION	5.879788083546661E-8	IMPLEMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999936910282146	WITHOUT_CLASSIFICATION	4.657067458124066E-6	IMPLEMENTATION	1.1684229687194094E-6	DESIGN	3.382139950010837E-7	TEST	1.1931502754085888E-7	DEFECT	2.5952336130011862E-8	DOCUMENTATION
// Fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.9999820011206222	WITHOUT_CLASSIFICATION	9.702112788345803E-6	IMPLEMENTATION	5.438605082684606E-6	DESIGN	2.720040113201071E-6	DEFECT	8.635453667920253E-8	TEST	5.176685685833543E-8	DOCUMENTATION
// If it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.9999977377931134	WITHOUT_CLASSIFICATION	1.2080809397753103E-6	DEFECT	1.0419197652323506E-6	IMPLEMENTATION	7.267692709788736E-9	DESIGN	3.0606333823354172E-9	TEST	1.877855543118812E-9	DOCUMENTATION
// Since this is an explicit FROM element, it can't be implied in the FROM clause.	WITHOUT_CLASSIFICATION	0.999992192699543	WITHOUT_CLASSIFICATION	7.73804742609145E-6	DESIGN	5.984014307106057E-8	DEFECT	6.356711869509504E-9	DOCUMENTATION	2.6603940687769484E-9	TEST	3.957819086403608E-10	IMPLEMENTATION
// Do nothing, eplicit from elements are *always* in the projection list.	WITHOUT_CLASSIFICATION	0.9999906413457366	WITHOUT_CLASSIFICATION	9.252400836741188E-6	DESIGN	4.174237958604705E-8	DEFECT	3.909901711583239E-8	DOCUMENTATION	2.1124780736822455E-8	IMPLEMENTATION	4.287249228225101E-9	TEST
// propertyName refers to something like collection.size...	WITHOUT_CLASSIFICATION	0.9999780309694815	WITHOUT_CLASSIFICATION	1.0810983678878326E-5	DESIGN	7.899953523633092E-6	DEFECT	2.6501164901047904E-6	IMPLEMENTATION	3.2339367322402504E-7	DOCUMENTATION	2.845831526688172E-7	TEST
// property name is a sub-path of a component...	WITHOUT_CLASSIFICATION	0.9999982001141189	WITHOUT_CLASSIFICATION	1.05418467763818E-6	DEFECT	7.242452173357967E-7	DESIGN	1.7408348290299613E-8	IMPLEMENTATION	2.159997500044089E-9	TEST	1.8876403804972132E-9	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9992305846534619	WITHOUT_CLASSIFICATION	6.927660196913889E-4	IMPLEMENTATION	6.164088734951204E-5	DESIGN	1.3273317723962628E-5	DEFECT	1.4847632111421931E-6	DOCUMENTATION	2.503585620595266E-7	TEST
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999700320863703	WITHOUT_CLASSIFICATION	2.9115064284367737E-5	DESIGN	6.686336274585249E-7	TEST	9.932979199473837E-8	DEFECT	7.552342439650524E-8	IMPLEMENTATION	9.362501724160524E-9	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999997575673358	WITHOUT_CLASSIFICATION	2.078801887355689E-7	DESIGN	2.6170177534259615E-8	IMPLEMENTATION	6.681108247172953E-9	DEFECT	1.2512080525208047E-9	TEST	4.499815312182399E-10	DOCUMENTATION
// DotNode uses null here...	WITHOUT_CLASSIFICATION	0.9747926038646815	WITHOUT_CLASSIFICATION	0.02396020525281449	DESIGN	0.0011246454573128097	IMPLEMENTATION	8.295779296312382E-5	DEFECT	2.7058148654523994E-5	TEST	1.2529483573617804E-5	DOCUMENTATION
// We represent a from-clause alias	WITHOUT_CLASSIFICATION	0.9999994692047179	WITHOUT_CLASSIFICATION	2.2198029114385569E-7	IMPLEMENTATION	2.1391292284600444E-7	DESIGN	7.29426053757481E-8	DEFECT	1.9277659929231926E-8	DOCUMENTATION	2.6818028341655244E-9	TEST
// we are the LHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999999449572107	WITHOUT_CLASSIFICATION	3.469393944782702E-8	DESIGN	1.369436286348043E-8	DEFECT	4.52150110988544E-9	DOCUMENTATION	1.7848178364348776E-9	TEST	3.4816799058354163E-10	IMPLEMENTATION
// we are the RHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999999241416303	WITHOUT_CLASSIFICATION	4.562368675621127E-8	DESIGN	1.8226131368145846E-8	DEFECT	7.579256397234211E-9	DOCUMENTATION	2.8817364874642058E-9	TEST	1.5475587248040723E-9	IMPLEMENTATION
// we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.9999981335135216	WITHOUT_CLASSIFICATION	8.76183710637529E-7	DESIGN	6.552843156920495E-7	DEFECT	2.9137839212567025E-7	IMPLEMENTATION	2.5586844992929336E-8	TEST	1.8053214847690385E-8	DOCUMENTATION
// EARLY EXIT!!!  return so the resolve call explicitly coming from DotNode can // resolve this...	WITHOUT_CLASSIFICATION	0.999543338259762	WITHOUT_CLASSIFICATION	4.2512875401893706E-4	DESIGN	3.0682954315528756E-5	DEFECT	7.203082270133389E-7	DOCUMENTATION	7.079736007462845E-8	IMPLEMENTATION	5.892631647890796E-8	TEST
// assume this ident's text does *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999460065615852	WITHOUT_CLASSIFICATION	5.1874833391024056E-5	DESIGN	1.961920929121385E-6	DEFECT	7.798783505237751E-8	TEST	7.731041649029734E-8	DOCUMENTATION	1.385842998536508E-9	IMPLEMENTATION
// just ignore it for now, it'll get resolved later...	WITHOUT_CLASSIFICATION	0.976561309632501	WITHOUT_CLASSIFICATION	0.02328283085851468	DESIGN	1.3034838513516724E-4	DEFECT	1.454360107165672E-5	TEST	1.0323583585590108E-5	IMPLEMENTATION	6.439391919580345E-7	DOCUMENTATION
// This is not actually a constant, but a reference to FROM element.	WITHOUT_CLASSIFICATION	0.9974192936281527	WITHOUT_CLASSIFICATION	0.0025647149888833637	DESIGN	1.5616345130368594E-5	DEFECT	3.607473839283979E-7	IMPLEMENTATION	1.1226553439153857E-8	DOCUMENTATION	3.0638962390324315E-9	TEST
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999993958998092	WITHOUT_CLASSIFICATION	5.922128335545958E-7	DESIGN	1.1362061612922281E-8	DEFECT	2.7547094463207017E-10	DOCUMENTATION	2.0857602840803152E-10	IMPLEMENTATION	4.1248560177272646E-11	TEST
// these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9999997560911487	WITHOUT_CLASSIFICATION	1.6421359890331274E-7	IMPLEMENTATION	5.986782636366226E-8	DESIGN	1.3336727516961679E-8	DOCUMENTATION	6.315591450468895E-9	TEST	1.7510709347446589E-10	DEFECT
// used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.9971784973982261	WITHOUT_CLASSIFICATION	0.0028079788955211724	DESIGN	1.238845490865143E-5	IMPLEMENTATION	9.385966570426621E-7	DOCUMENTATION	1.0287956479319142E-7	TEST	9.377512234917169E-8	DEFECT
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999983038859881	WITHOUT_CLASSIFICATION	1.5425761979296506E-6	DESIGN	1.2827753759901396E-7	DEFECT	2.1853902997738654E-8	DOCUMENTATION	2.4292247215400576E-9	IMPLEMENTATION	9.771487523282153E-10	TEST
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999983038859881	WITHOUT_CLASSIFICATION	1.5425761979296506E-6	DESIGN	1.2827753759901396E-7	DEFECT	2.1853902997738654E-8	DOCUMENTATION	2.4292247215400576E-9	IMPLEMENTATION	9.771487523282153E-10	TEST
// naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.9999948705147992	WITHOUT_CLASSIFICATION	5.102009988151113E-6	DESIGN	2.5600346564045257E-8	DEFECT	8.349721469775635E-10	TEST	5.605787110896599E-10	DOCUMENTATION	4.793152896030871E-10	IMPLEMENTATION
// this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.999999856601359	WITHOUT_CLASSIFICATION	9.137167269337653E-8	DESIGN	3.526732286398732E-8	IMPLEMENTATION	9.563082636305752E-9	DOCUMENTATION	6.804040671338991E-9	TEST	3.9252213541783923E-10	DEFECT
// do *not* over-write the column text, as that has already been // "rendered" during resolve	WITHOUT_CLASSIFICATION	0.9999999887757692	WITHOUT_CLASSIFICATION	9.564314026930607E-9	DESIGN	1.0207686920779829E-9	IMPLEMENTATION	5.384432333114277E-10	DEFECT	7.22077758247981E-11	TEST	2.8497040333169758E-11	DOCUMENTATION
// for some reason the antlr.CommonAST initialization routines force // this method to get called twice.  The first time with an empty string	WITHOUT_CLASSIFICATION	0.9999800759048804	WITHOUT_CLASSIFICATION	1.9921084942288966E-5	DESIGN	2.79703543115953E-9	TEST	8.176217665131836E-11	IMPLEMENTATION	7.51474148103718E-11	DEFECT	5.623231652833344E-11	DOCUMENTATION
// Look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.9999999027813681	WITHOUT_CLASSIFICATION	6.752686280575135E-8	DESIGN	1.909930940437948E-8	IMPLEMENTATION	8.11950130966838E-9	DEFECT	1.356721077018526E-9	TEST	1.1162372659058202E-9	DOCUMENTATION
// Add to the query spaces.	WITHOUT_CLASSIFICATION	0.999977342692888	WITHOUT_CLASSIFICATION	1.178992802520968E-5	DESIGN	8.706334013464468E-6	IMPLEMENTATION	1.751858493825981E-6	DOCUMENTATION	3.2634740738078427E-7	DEFECT	8.283917222945704E-8	TEST
// If the from element isn't in the same clause, create a new from element.	WITHOUT_CLASSIFICATION	0.999991507636339	WITHOUT_CLASSIFICATION	8.189377586537746E-6	DESIGN	2.932038282282721E-7	DEFECT	9.164977184168778E-9	DOCUMENTATION	4.817851008832336E-10	TEST	1.3548396879030787E-10	IMPLEMENTATION
// This is the root level node. // Generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.9999642648147027	WITHOUT_CLASSIFICATION	3.5526587086345865E-5	DESIGN	1.9719031437428852E-7	DEFECT	9.308868328789464E-9	TEST	1.9785300492464755E-9	DOCUMENTATION	1.2049824355534288E-10	IMPLEMENTATION
// Correlated subqueries create 'special' implied from nodes // because correlated subselects can't use an ANSI-style join	WITHOUT_CLASSIFICATION	0.9999897154397847	WITHOUT_CLASSIFICATION	9.272263524027985E-6	DEFECT	9.260709429153101E-7	DESIGN	3.893289060577168E-8	TEST	2.6007498116219894E-8	DOCUMENTATION	2.1285359636983077E-8	IMPLEMENTATION
// super-duper-classic-parser-regression-testing-mojo-magic...	WITHOUT_CLASSIFICATION	0.9999926721559526	WITHOUT_CLASSIFICATION	7.224075851489515E-6	DESIGN	8.293046040571834E-8	TEST	1.1623791417336096E-8	DEFECT	7.511501152084754E-9	DOCUMENTATION	1.7024430432716417E-9	IMPLEMENTATION
// A collection of entities...	WITHOUT_CLASSIFICATION	0.9999101837814137	WITHOUT_CLASSIFICATION	4.4970175950234036E-5	IMPLEMENTATION	3.0123085054375048E-5	DESIGN	1.321996322374981E-5	DEFECT	9.229198110813713E-7	DOCUMENTATION	5.800745467435207E-7	TEST
// A collection of components...	WITHOUT_CLASSIFICATION	0.999965009911379	WITHOUT_CLASSIFICATION	2.4281362750649018E-5	DESIGN	7.639404498860653E-6	IMPLEMENTATION	2.724828628329251E-6	DEFECT	1.9947627155220742E-7	DOCUMENTATION	1.4501647159114635E-7	TEST
// A collection of scalar elements...	WITHOUT_CLASSIFICATION	0.9999531832453096	WITHOUT_CLASSIFICATION	3.6464627883804765E-5	IMPLEMENTATION	6.346694331490323E-6	DESIGN	3.7161400670472997E-6	DEFECT	2.2481041629396854E-7	DOCUMENTATION	6.448199203547994E-8	TEST
// according to both the ANSI-SQL and EJB3 specs, trim can either take // exactly one parameter or a variable number of parameters between 1 and 4. // from the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If only <trim specification> is omitted, BOTH is assumed; // if <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999999987226563	WITHOUT_CLASSIFICATION	9.234636651564596E-10	DEFECT	2.522713385851129E-10	IMPLEMENTATION	5.638870869487437E-11	DESIGN	3.1671680703349277E-11	DOCUMENTATION	1.3548136132965601E-11	TEST
// Don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.9996891343522025	WITHOUT_CLASSIFICATION	2.4460526614938406E-4	DESIGN	6.178333983568906E-5	IMPLEMENTATION	2.7755725053059007E-6	DEFECT	1.0695957772368788E-6	DOCUMENTATION	6.31873529954026E-7	TEST
// Treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.9998060258801983	WITHOUT_CLASSIFICATION	1.800050481489604E-4	DEFECT	1.3400948730140529E-5	DESIGN	4.854688082935125E-7	DOCUMENTATION	5.4035407502223306E-8	TEST	2.861870682732668E-8	IMPLEMENTATION
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.9988236465141409	WITHOUT_CLASSIFICATION	0.0011727362883840182	DESIGN	2.3120288377916014E-6	DEFECT	1.0852652381923302E-6	TEST	2.1028766004093328E-7	DOCUMENTATION	9.615739019127752E-9	IMPLEMENTATION
// Create the FROM element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.9999998603103545	WITHOUT_CLASSIFICATION	1.2524463654424308E-7	DESIGN	1.2597619926402205E-8	IMPLEMENTATION	1.3755192624929185E-9	TEST	2.5845095380537577E-10	DEFECT	2.1341891511518358E-10	DOCUMENTATION
// If the join is implied, then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.9999993868999274	WITHOUT_CLASSIFICATION	5.020197587745249E-7	DESIGN	8.831098385053066E-8	DEFECT	1.4912759460438053E-8	IMPLEMENTATION	4.517625584538783E-9	DOCUMENTATION	3.3389450129403548E-9	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999465114362279	WITHOUT_CLASSIFICATION	2.9481612820847996E-5	IMPLEMENTATION	1.9182270809399208E-5	DESIGN	2.423899933074126E-6	DOCUMENTATION	2.3341255952227405E-6	DEFECT	6.665461364221025E-8	TEST
// The associated entity is implied, but it must be included in the FROM. // The collection alias is the role.	WITHOUT_CLASSIFICATION	0.9999989733080243	WITHOUT_CLASSIFICATION	8.80366864272312E-7	DESIGN	7.570749630344686E-8	DEFECT	4.529865395459482E-8	TEST	2.295967293468867E-8	IMPLEMENTATION	2.3592880671705786E-9	DOCUMENTATION
// Tag this node as a JOIN. // Don't include subclasses in the join. // This is a clollection join.	WITHOUT_CLASSIFICATION	0.9999097199475567	WITHOUT_CLASSIFICATION	8.332145616888996E-5	DEFECT	6.104314313317484E-6	DESIGN	4.174040660826713E-7	DOCUMENTATION	3.885419852314052E-7	IMPLEMENTATION	4.833590963763384E-8	TEST
// Get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.9999994229978981	WITHOUT_CLASSIFICATION	4.935110724662396E-7	DESIGN	4.8852333715019855E-8	DOCUMENTATION	2.7545875149508972E-8	TEST	6.010217529861598E-9	IMPLEMENTATION	1.0826029645389035E-9	DEFECT
//  origin, path, implied, columns, classAlias,	WITHOUT_CLASSIFICATION	0.9999989254522037	WITHOUT_CLASSIFICATION	6.917927831543791E-7	DESIGN	2.8471723585675096E-7	IMPLEMENTATION	6.493922896743182E-8	DEFECT	2.0378848481126058E-8	DOCUMENTATION	1.2719699806366038E-8	TEST
/*implied*/	WITHOUT_CLASSIFICATION	0.9989587313140992	WITHOUT_CLASSIFICATION	6.838318305215721E-4	IMPLEMENTATION	3.325755528149521E-4	DESIGN	1.0410496984763778E-5	TEST	8.884105892532661E-6	DEFECT	5.566699687084777E-6	DOCUMENTATION
// For implied many-to-many, just add the end join.	WITHOUT_CLASSIFICATION	0.9887238438250615	WITHOUT_CLASSIFICATION	0.011269023629633496	IMPLEMENTATION	3.2135370454155063E-6	DESIGN	2.8061635198894823E-6	TEST	9.545099307238525E-7	DOCUMENTATION	1.5833480885681833E-7	DEFECT
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999465114362279	WITHOUT_CLASSIFICATION	2.9481612820847996E-5	IMPLEMENTATION	1.9182270809399208E-5	DESIGN	2.423899933074126E-6	DOCUMENTATION	2.3341255952227405E-6	DEFECT	6.665461364221025E-8	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999465114362279	WITHOUT_CLASSIFICATION	2.9481612820847996E-5	IMPLEMENTATION	1.9182270809399208E-5	DESIGN	2.423899933074126E-6	DOCUMENTATION	2.3341255952227405E-6	DEFECT	6.665461364221025E-8	TEST
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999986753419501	WITHOUT_CLASSIFICATION	9.348032083605876E-7	DEFECT	2.186659508805488E-7	DESIGN	1.3955100781203786E-7	IMPLEMENTATION	2.2785591349177363E-8	DOCUMENTATION	8.852291571805331E-9	TEST
// This causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.9998646023603931	WITHOUT_CLASSIFICATION	1.3538775216358006E-4	DESIGN	6.843779171101504E-9	DEFECT	2.2691242875751477E-9	DOCUMENTATION	7.222253778763535E-10	TEST	5.23145171869544E-11	IMPLEMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.99969561741127	WITHOUT_CLASSIFICATION	3.015507279395692E-4	DESIGN	1.7369306737392483E-6	DEFECT	5.891909922212171E-7	DOCUMENTATION	4.0337589964832294E-7	TEST	1.0236322470121983E-7	IMPLEMENTATION
// Frontbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9988389054547911	WITHOUT_CLASSIFICATION	5.054092670148475E-4	IMPLEMENTATION	4.0294947442052483E-4	DEFECT	2.4208773370558328E-4	DESIGN	1.0315195995609908E-5	DOCUMENTATION	3.3287407227999213E-7	TEST
/*	WITHOUT_CLASSIFICATION	0.9819192621518401	WITHOUT_CLASSIFICATION	0.012598127708177996	DESIGN	0.0034337196809112133	DEFECT	0.0017673486614797169	IMPLEMENTATION	1.7059466924859105E-4	DOCUMENTATION	1.109471283424685E-4	TEST
/*public Type[] getSqlResultTypes() {	WITHOUT_CLASSIFICATION	0.9179539726644248	WITHOUT_CLASSIFICATION	0.0815732102550739	DESIGN	4.1625358159117637E-4	DEFECT	3.9225963866131066E-5	DOCUMENTATION	1.3043916664892274E-5	TEST	4.29361837913056E-6	IMPLEMENTATION
// First, collect all of the select expressions. // NOTE: This must be done *before* invoking setScalarColumnText() because setScalarColumnText() // changes the AST!!!	WITHOUT_CLASSIFICATION	0.9999799520781301	WITHOUT_CLASSIFICATION	1.6696911022038953E-5	IMPLEMENTATION	2.658895458438288E-6	DEFECT	6.743830409657202E-7	DESIGN	1.6967965926340092E-8	TEST	7.643825011797827E-10	DOCUMENTATION
// First allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.9886749273075252	WITHOUT_CLASSIFICATION	0.011235657505750278	IMPLEMENTATION	8.93327298865284E-5	DESIGN	6.73057362196947E-8	DEFECT	1.4376226973263242E-8	DOCUMENTATION	7.748748907371591E-10	TEST
//sqlResultTypeList.addAll( constructorArgumentTypeList );	WITHOUT_CLASSIFICATION	0.9999563151726234	WITHOUT_CLASSIFICATION	4.0691478316367776E-5	IMPLEMENTATION	1.4643859537270502E-6	DESIGN	8.659134450618962E-7	DEFECT	3.322666718151634E-7	DOCUMENTATION	3.3078298938616284E-7	TEST
// If the data type is not an association type, it could not have been in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999552292461543	WITHOUT_CLASSIFICATION	4.4428709838634915E-5	DESIGN	2.9488189733649395E-7	DEFECT	2.7638489856558137E-8	TEST	1.4030697189882282E-8	IMPLEMENTATION	5.492922806406759E-9	DOCUMENTATION
//sqlResultTypeList.add( type );	WITHOUT_CLASSIFICATION	0.9999893903655359	WITHOUT_CLASSIFICATION	7.705177673949033E-6	DESIGN	1.8316888184601067E-6	IMPLEMENTATION	4.6997890794700526E-7	TEST	4.602558424483934E-7	DEFECT	1.4253322121803004E-7	DOCUMENTATION
// Always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.999907736587363	WITHOUT_CLASSIFICATION	5.3888510818832284E-5	DESIGN	3.790415997333946E-5	IMPLEMENTATION	2.651830344469057E-7	DOCUMENTATION	1.9694750386716032E-7	DEFECT	8.611306503881651E-9	TEST
// add the fetched entities	WITHOUT_CLASSIFICATION	0.9999991226610718	WITHOUT_CLASSIFICATION	6.7789759728524E-7	IMPLEMENTATION	1.0270265042334865E-7	DESIGN	7.907814949587258E-8	DOCUMENTATION	1.588508871179236E-8	TEST	1.7754424769460722E-9	DEFECT
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999999171310151	WITHOUT_CLASSIFICATION	1.9894929078812784E-8	DEFECT	1.9275510366539736E-8	DESIGN	1.7543351644185583E-8	IMPLEMENTATION	1.6455618451219228E-8	DOCUMENTATION	9.699575446630576E-9	TEST
// function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996453868407535	WITHOUT_CLASSIFICATION	3.3391688421283025E-4	IMPLEMENTATION	9.654103758146358E-6	DEFECT	8.880415352857615E-6	DESIGN	1.88191664467347E-6	DOCUMENTATION	2.79839278064465E-7	TEST
// If there are any scalars (non-entities) selected, render the select column aliases.	WITHOUT_CLASSIFICATION	0.9999998196590272	WITHOUT_CLASSIFICATION	1.495858515082559E-7	IMPLEMENTATION	2.8387105188020547E-8	DESIGN	8.609221634988334E-10	DOCUMENTATION	7.597022142188766E-10	DEFECT	7.473917026818807E-10	TEST
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9997952285283683	WITHOUT_CLASSIFICATION	1.2456570353282532E-4	DEFECT	6.143659105349269E-5	DESIGN	8.711826278358467E-6	TEST	7.343798101826915E-6	IMPLEMENTATION	2.713552665254406E-6	DOCUMENTATION
/*ArrayList sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999898017112393	WITHOUT_CLASSIFICATION	5.483195205595678E-6	DEFECT	2.793193279559168E-6	IMPLEMENTATION	1.064289375581978E-6	DESIGN	7.428720946091691E-7	TEST	1.1473880527428941E-7	DOCUMENTATION
//sqlResultTypes = ( Type[] ) sqlResultTypeList.toArray( new Type[sqlResultTypeList.size()] );	WITHOUT_CLASSIFICATION	0.9999925146808328	WITHOUT_CLASSIFICATION	4.5521484194268415E-6	DESIGN	2.1356088533686217E-6	DEFECT	6.746547674454167E-7	IMPLEMENTATION	9.577116058908577E-8	TEST	2.713596634977668E-8	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999413715772346	WITHOUT_CLASSIFICATION	3.694474682337355E-5	IMPLEMENTATION	1.309438904185624E-5	DEFECT	7.77765343375293E-6	DESIGN	6.946981739679678E-7	DOCUMENTATION	1.1693529235616681E-7	TEST
//TODO:	WITHOUT_CLASSIFICATION	0.9904262383582213	WITHOUT_CLASSIFICATION	0.00544100733612845	DESIGN	0.002576627244559416	IMPLEMENTATION	6.127311256359944E-4	DEFECT	4.991579013158626E-4	DOCUMENTATION	4.442380341390409E-4	TEST
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999982375181747	WITHOUT_CLASSIFICATION	1.4988762573137185E-6	DESIGN	2.3658255905935272E-7	IMPLEMENTATION	1.4797494873407732E-8	DOCUMENTATION	6.477821158760682E-9	DEFECT	5.747692949658389E-9	TEST
// Generate an 2d array of column names, the first dimension is parallel with the // return types array.  The second dimension is the list of column names for each // type.	WITHOUT_CLASSIFICATION	0.9999999908236447	WITHOUT_CLASSIFICATION	7.981282684558242E-9	DESIGN	9.507320714609997E-10	DEFECT	2.2246324502251273E-10	IMPLEMENTATION	2.0374822904874878E-11	TEST	1.502566404384552E-12	DOCUMENTATION
// Generate the select expression.	WITHOUT_CLASSIFICATION	0.999998249859117	WITHOUT_CLASSIFICATION	1.643248300930816E-6	IMPLEMENTATION	5.682825126514734E-8	DESIGN	2.5837328083054995E-8	DEFECT	1.9322362173630265E-8	TEST	4.904640368964469E-9	DOCUMENTATION
// union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999925302483114	WITHOUT_CLASSIFICATION	4.746726485649637E-6	DESIGN	2.3249378370945313E-6	IMPLEMENTATION	2.927009310076132E-7	DEFECT	8.231878525171901E-8	DOCUMENTATION	2.3067649589531142E-8	TEST
// Skip 'DISTINCT' and 'ALL', so we return the first expression node.	WITHOUT_CLASSIFICATION	0.9999922746231494	WITHOUT_CLASSIFICATION	5.763200556473969E-6	IMPLEMENTATION	1.3966086960555686E-6	DESIGN	5.133802170026144E-7	DEFECT	4.882325754079931E-8	DOCUMENTATION	3.364123525674225E-9	TEST
// Create SQL_TOKEN nodes for the columns.	WITHOUT_CLASSIFICATION	0.9999745178748117	WITHOUT_CLASSIFICATION	2.5346878752258156E-5	DESIGN	8.956186098639552E-8	TEST	2.470979697332807E-8	DOCUMENTATION	1.2791165660427383E-8	IMPLEMENTATION	8.183612256882055E-9	DEFECT
// Generate the property select tokens.	WITHOUT_CLASSIFICATION	0.9999990083187135	WITHOUT_CLASSIFICATION	6.026870365755829E-7	DESIGN	2.8558375350502455E-7	IMPLEMENTATION	4.352781973635582E-8	DOCUMENTATION	3.409069026134057E-8	TEST	2.5791986529252062E-8	DEFECT
// Get the function name node.	WITHOUT_CLASSIFICATION	0.999994235565613	WITHOUT_CLASSIFICATION	4.478971705215756E-6	IMPLEMENTATION	6.231017321039533E-7	DESIGN	3.122328019936833E-7	DEFECT	3.084305503666744E-7	DOCUMENTATION	4.1697597404907234E-8	TEST
// Method expressions in a SELECT should always be considered scalar.	WITHOUT_CLASSIFICATION	0.9766452771909673	WITHOUT_CLASSIFICATION	0.02326671379331834	DESIGN	8.681445695206099E-5	DEFECT	1.0012172974439151E-6	IMPLEMENTATION	1.449782262837109E-7	DOCUMENTATION	4.8363238691044674E-8	TEST
// If this is 'elements' then create a new FROM element.	WITHOUT_CLASSIFICATION	0.9999989336581402	WITHOUT_CLASSIFICATION	1.038974114240846E-6	DESIGN	1.3857740225431551E-8	DEFECT	9.090296677870862E-9	TEST	3.0574316438724486E-9	DOCUMENTATION	1.3622769962846544E-9	IMPLEMENTATION
// Not elements(x)	WITHOUT_CLASSIFICATION	0.9996935526951557	WITHOUT_CLASSIFICATION	2.0015097729078032E-4	DESIGN	9.90032344024144E-5	IMPLEMENTATION	4.4014924307874535E-6	DEFECT	2.0413574330852726E-6	TEST	8.502432871872948E-7	DOCUMENTATION
// Dialect function	WITHOUT_CLASSIFICATION	0.9999836948863687	WITHOUT_CLASSIFICATION	8.027618414346724E-6	IMPLEMENTATION	5.099638323050748E-6	DEFECT	2.716581416578719E-6	DESIGN	3.8242050392298224E-7	DOCUMENTATION	7.885497345270354E-8	TEST
// Collection 'property function'	WITHOUT_CLASSIFICATION	0.9998900906939612	WITHOUT_CLASSIFICATION	1.0625526523230174E-4	DEFECT	3.118176573940252E-6	DESIGN	3.166503341066858E-7	DOCUMENTATION	1.8276738210498343E-7	IMPLEMENTATION	3.6446516376258805E-8	TEST
// If the constant is an IDENT, figure out what it means...	WITHOUT_CLASSIFICATION	0.9998375842275288	WITHOUT_CLASSIFICATION	1.594244940699855E-4	DESIGN	2.4931669729218176E-6	DEFECT	2.848614011382006E-7	TEST	1.819009646145106E-7	IMPLEMENTATION	3.134906256851256E-8	DOCUMENTATION
// IDENT is a class alias in the FROM.	WITHOUT_CLASSIFICATION	0.9999951149611916	WITHOUT_CLASSIFICATION	4.861369063399881E-6	DESIGN	1.0210449775353951E-8	DEFECT	6.802671256598993E-9	DOCUMENTATION	4.484111790872668E-9	IMPLEMENTATION	2.1725121781182015E-9	TEST
// Resolve to an identity column.	WITHOUT_CLASSIFICATION	0.9984905063407746	WITHOUT_CLASSIFICATION	0.001504778203310912	DESIGN	2.224446888668205E-6	IMPLEMENTATION	9.927844223467307E-7	DOCUMENTATION	9.750895588314196E-7	DEFECT	5.231350447155828E-7	TEST
// Otherwise, it's a literal.	WITHOUT_CLASSIFICATION	0.9999872115731755	WITHOUT_CLASSIFICATION	8.434729006825891E-6	IMPLEMENTATION	4.2309686739500686E-6	DESIGN	8.83661680392338E-8	TEST	1.858264373594067E-8	DOCUMENTATION	1.578033190403532E-8	DEFECT
// the name of an entity class	WITHOUT_CLASSIFICATION	0.99999458407999	WITHOUT_CLASSIFICATION	5.335777790993367E-6	DESIGN	6.283228142189142E-8	DOCUMENTATION	8.230490772367693E-9	TEST	6.55807774748048E-9	IMPLEMENTATION	2.5213690602350846E-9	DEFECT
//the class discriminator value	WITHOUT_CLASSIFICATION	0.9999965244102069	WITHOUT_CLASSIFICATION	3.3778795632543974E-6	DESIGN	7.196802029100381E-8	DEFECT	2.3827358922058322E-8	DOCUMENTATION	1.7525882743254697E-9	TEST	1.622623297921673E-10	IMPLEMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999965421858374	WITHOUT_CLASSIFICATION	2.2339372000285016E-6	TEST	5.503517229136853E-7	IMPLEMENTATION	4.1200441541627456E-7	DESIGN	2.0054090110707622E-7	DEFECT	6.097992302468518E-8	DOCUMENTATION
// Add a space before the display text.	WITHOUT_CLASSIFICATION	0.9999982390249489	WITHOUT_CLASSIFICATION	1.6019691590339882E-6	IMPLEMENTATION	1.0746067664170791E-7	DESIGN	2.4647012795594376E-8	DEFECT	2.1556127524315167E-8	DOCUMENTATION	5.34207503789104E-9	TEST
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.999996828996184	WITHOUT_CLASSIFICATION	2.6473935621928694E-6	IMPLEMENTATION	3.040476903662303E-7	DESIGN	9.070983511738928E-8	DOCUMENTATION	8.407185732364484E-8	DEFECT	4.4780870990911566E-8	TEST
// child == parent.getFirstChild()	WITHOUT_CLASSIFICATION	0.9999974585955878	WITHOUT_CLASSIFICATION	2.524431217022233E-6	IMPLEMENTATION	1.0058116482973123E-8	DESIGN	3.191067450314331E-9	DEFECT	2.328619409635587E-9	DOCUMENTATION	1.395391706899206E-9	TEST
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.999996828996184	WITHOUT_CLASSIFICATION	2.6473935621928694E-6	IMPLEMENTATION	3.040476903662303E-7	DESIGN	9.070983511738928E-8	DOCUMENTATION	8.407185732364484E-8	DEFECT	4.4780870990911566E-8	TEST
// Filter conditions need to be inserted before the HQL where condition and the // theta join node.  This is because org.hibernate.loader.Loader binds the filter parameters first, // then it binds all the HQL query parameters, see org.hibernate.loader.Loader.processFilterParameters().	WITHOUT_CLASSIFICATION	0.9999997683377492	WITHOUT_CLASSIFICATION	1.28295024325976E-7	DESIGN	7.134311980869317E-8	IMPLEMENTATION	2.9498288851178128E-8	DEFECT	1.7922635968352416E-9	DOCUMENTATION	7.335542624151245E-10	TEST
// Put the FILTERS node before the HQL condition and theta joins	WITHOUT_CLASSIFICATION	0.9999987827210757	WITHOUT_CLASSIFICATION	1.0694011426882556E-6	DESIGN	1.26249010509088E-7	IMPLEMENTATION	1.5922770919984893E-8	DOCUMENTATION	4.667708412690863E-9	DEFECT	1.0382917710920783E-9	TEST
// add the current fragment to the FILTERS node	WITHOUT_CLASSIFICATION	0.9994404947357413	WITHOUT_CLASSIFICATION	3.68199828198407E-4	IMPLEMENTATION	1.3667517152837535E-4	DESIGN	5.113805151981042E-5	DOCUMENTATION	2.5047727199000496E-6	DEFECT	9.874402922859421E-7	TEST
// Create a new THETA_JOINS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999702709935858	WITHOUT_CLASSIFICATION	2.0531574162719187E-5	IMPLEMENTATION	8.793106481302056E-6	DESIGN	3.759629790268419E-7	DEFECT	1.668772469443881E-8	DOCUMENTATION	1.167506640238993E-8	TEST
// Put the THETA_JOINS node before the HQL condition, after the filters.	WITHOUT_CLASSIFICATION	0.9999888271157923	WITHOUT_CLASSIFICATION	1.0139960129971809E-5	DESIGN	9.999849165912062E-7	IMPLEMENTATION	1.6356273559473496E-8	TEST	1.0959488331481104E-8	DOCUMENTATION	5.62339940356391E-9	DEFECT
// add the current fragment to the THETA_JOINS node	WITHOUT_CLASSIFICATION	0.9996327774774327	WITHOUT_CLASSIFICATION	1.6657435340135176E-4	DESIGN	1.470502144219487E-4	IMPLEMENTATION	5.147061077081235E-5	DOCUMENTATION	1.3477128512284168E-6	DEFECT	7.796311219753135E-7	TEST
// First, try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.9999999390606402	WITHOUT_CLASSIFICATION	2.3097732982345044E-8	IMPLEMENTATION	1.8936664799792237E-8	DEFECT	1.0852121736755295E-8	DESIGN	5.47577750407558E-9	TEST	2.5770627923220953E-9	DOCUMENTATION
// unable to locate it using this name	WITHOUT_CLASSIFICATION	0.9999895627874613	WITHOUT_CLASSIFICATION	9.91185759887819E-6	DESIGN	3.819345399744378E-7	TEST	1.2540724816430738E-7	DEFECT	9.98839213807524E-9	DOCUMENTATION	8.024759553687802E-9	IMPLEMENTATION
// If that didn't work, try using the 'import' name.	WITHOUT_CLASSIFICATION	0.9991372319398177	WITHOUT_CLASSIFICATION	8.286639428475231E-4	DEFECT	3.3100025143447584E-5	DESIGN	4.105075429486739E-7	IMPLEMENTATION	3.275284780197016E-7	TEST	2.660561701836819E-7	DOCUMENTATION
// Implicit joins use theta style (WHERE pk = fk), explicit joins use JOIN (after from)	WITHOUT_CLASSIFICATION	0.9999988486630516	WITHOUT_CLASSIFICATION	6.776671540884534E-7	IMPLEMENTATION	4.5706009626886167E-7	DESIGN	1.1247238954373941E-8	DEFECT	3.5229354646326232E-9	DOCUMENTATION	1.8395236960192063E-9	TEST
// locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.999999417650902	WITHOUT_CLASSIFICATION	4.510216160657646E-7	IMPLEMENTATION	6.8097075354225E-8	DESIGN	4.173175270561679E-8	DEFECT	1.0866286062291502E-8	TEST	1.06323678688025E-8	DOCUMENTATION
// determine the type of the first argument...	WITHOUT_CLASSIFICATION	0.9999973612768595	WITHOUT_CLASSIFICATION	2.5873568055187784E-6	DESIGN	2.7231467366312654E-8	DOCUMENTATION	1.2589561938229783E-8	IMPLEMENTATION	8.843426349263284E-9	TEST	2.701879428777752E-9	DEFECT
// Use the DOT node to emit the first column name. // Create the column names, folled by the column aliases.	WITHOUT_CLASSIFICATION	0.9999997430475268	WITHOUT_CLASSIFICATION	1.3598246223327614E-7	IMPLEMENTATION	7.91280226393793E-8	DESIGN	2.2188714104118606E-8	TEST	1.8309013442737153E-8	DEFECT	1.3442608331195717E-9	DOCUMENTATION
// Note: this simply constructs a "raw" SQL_TOKEN representing the // where fragment and injects this into the tree.  This "works"; // however it is probably not the best long-term solution. // // At some point we probably want to apply an additional grammar to // properly tokenize this where fragment into constituent parts // focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.9970936310835788	DESIGN	0.002874493418830359	WITHOUT_CLASSIFICATION	2.8418328717191594E-5	DEFECT	2.991752632059878E-6	TEST	2.672750457151028E-7	DOCUMENTATION	1.9814119577801294E-7	IMPLEMENTATION
// Append the text of the current node.	WITHOUT_CLASSIFICATION	0.9994850994447627	WITHOUT_CLASSIFICATION	2.440120326922455E-4	IMPLEMENTATION	2.2755256731140438E-4	DEFECT	2.7867182967424106E-5	DESIGN	1.229992444511824E-5	DOCUMENTATION	3.168847820929872E-6	TEST
// If the node has a first child, recurse into the first child.	WITHOUT_CLASSIFICATION	0.9999999836620798	WITHOUT_CLASSIFICATION	1.1937354160792681E-8	IMPLEMENTATION	4.061100448173135E-9	DESIGN	1.8362691526147032E-10	DEFECT	9.717750364259366E-11	DOCUMENTATION	5.866119431644081E-11	TEST
// If there is a second child (RHS), recurse into that child.	WITHOUT_CLASSIFICATION	0.9999970461529186	WITHOUT_CLASSIFICATION	2.9438389558806767E-6	DESIGN	7.987490949825988E-9	IMPLEMENTATION	1.188082767458858E-9	DEFECT	6.10840768197302E-10	DOCUMENTATION	2.2171108430983832E-10	TEST
// Iterate through the alias,JoinSequence pairs and generate SQL token nodes.	WITHOUT_CLASSIFICATION	0.9999987223080083	WITHOUT_CLASSIFICATION	1.2695485276117874E-6	DESIGN	3.747360051390797E-9	DOCUMENTATION	2.011583242611732E-9	TEST	1.8424631796979432E-9	DEFECT	5.42057589900843E-10	IMPLEMENTATION
// If the from element represents a JOIN_FRAGMENT and it is // a theta-style join, convert its type from JOIN_FRAGMENT // to FROM_FRAGMENT	WITHOUT_CLASSIFICATION	0.9999997991991894	WITHOUT_CLASSIFICATION	1.945534844689611E-7	DESIGN	3.9994741480593025E-9	IMPLEMENTATION	1.6166342750431531E-9	DEFECT	5.785350955003946E-10	TEST	5.2682662324966135E-11	DOCUMENTATION
// this is used during SqlGenerator processing	WITHOUT_CLASSIFICATION	0.9997897140723422	WITHOUT_CLASSIFICATION	2.1002168914672839E-4	DESIGN	1.2597127303091071E-7	TEST	9.054974867447455E-8	DEFECT	4.158122526808315E-8	DOCUMENTATION	6.136264264234933E-9	IMPLEMENTATION
// If there is a FROM fragment and the FROM element is an explicit, then add the from part.	WITHOUT_CLASSIFICATION	0.9987826520412358	WITHOUT_CLASSIFICATION	0.001215974008702503	DESIGN	8.658018403089001E-7	DEFECT	3.1431953471238227E-7	TEST	1.0451993165081712E-7	DOCUMENTATION	8.930875486109493E-8	IMPLEMENTATION
/*&& StringHelper.isNotEmpty( frag )*/	WITHOUT_CLASSIFICATION	0.9989408641841213	WITHOUT_CLASSIFICATION	7.474394241998605E-4	DESIGN	2.658668475073872E-4	IMPLEMENTATION	3.895890254492386E-5	DEFECT	3.6227895140407124E-6	TEST	3.2478521124266774E-6	DOCUMENTATION
// The FROM fragment will probably begin with ', '.  Remove this if it is present.	WITHOUT_CLASSIFICATION	0.98097751394274	WITHOUT_CLASSIFICATION	0.0188665212464085	DESIGN	1.2049885370849048E-4	DEFECT	3.403762068816042E-5	TEST	1.0270327642971994E-6	DOCUMENTATION	4.013036906649895E-7	IMPLEMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999987895700841	WITHOUT_CLASSIFICATION	1.0890232697886782E-6	DESIGN	6.466758386185771E-8	IMPLEMENTATION	5.6558425114932824E-8	DEFECT	1.326404896964648E-10	TEST	4.799659258557209E-11	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person ORDER BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999963632339677	WITHOUT_CLASSIFICATION	3.305858354144459E-6	IMPLEMENTATION	1.806747219618563E-7	DESIGN	8.268756712565375E-8	DEFECT	3.649463504181491E-8	TEST	3.105075412761515E-8	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9991776431610255	WITHOUT_CLASSIFICATION	7.634384585117663E-4	DESIGN	5.877253194968809E-5	DEFECT	8.757548832296031E-8	TEST	5.806277629477662E-8	DOCUMENTATION	2.102483247207637E-10	IMPLEMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9991790455417977	WITHOUT_CLASSIFICATION	7.623305087174423E-4	DESIGN	3.085850623321424E-5	DEFECT	2.1084473043643776E-5	IMPLEMENTATION	4.810525962340511E-6	TEST	1.8704442457054031E-6	DOCUMENTATION
//default mode	WITHOUT_CLASSIFICATION	0.9998957332735214	WITHOUT_CLASSIFICATION	9.746257840892909E-5	DESIGN	3.5738588088468875E-6	IMPLEMENTATION	1.6428674294971515E-6	DEFECT	8.945066850554818E-7	DOCUMENTATION	6.929151461533336E-7	TEST
//QueryJoinFragment join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999859454488267	WITHOUT_CLASSIFICATION	6.874805525575354E-6	DESIGN	5.487782270955579E-6	IMPLEMENTATION	1.0768744217012396E-6	DOCUMENTATION	4.6834182249967476E-7	DEFECT	1.4674713263952106E-7	TEST
//reset the dotcount (but not the path) //after reset!	WITHOUT_CLASSIFICATION	0.9999967024587095	WITHOUT_CLASSIFICATION	2.603232577312602E-6	DEFECT	5.099198727925903E-7	IMPLEMENTATION	1.001159092875095E-7	TEST	5.763457158713528E-8	DESIGN	2.6638359408195813E-8	DOCUMENTATION
//after reset!	WITHOUT_CLASSIFICATION	0.9999943400929077	WITHOUT_CLASSIFICATION	2.08160060819044E-6	DEFECT	1.9040448158873934E-6	IMPLEMENTATION	7.662163089348152E-7	TEST	6.815200031684654E-7	DESIGN	2.26525356126784E-7	DOCUMENTATION
// we don't need to worry about any condition in the ON clause // here (toFromFragmentString), since anything in the ON condition // is already applied to the whole query	WITHOUT_CLASSIFICATION	0.9983956827250262	WITHOUT_CLASSIFICATION	0.0015110852395636533	DESIGN	5.2491373076284475E-5	IMPLEMENTATION	3.489796163043983E-5	DOCUMENTATION	4.668568451846751E-6	DEFECT	1.1741322515947288E-6	TEST
// bit_length feels a bit broken to me. We have to cast to char in order to // pass when a numeric value is supplied. But of course the answers given will // be wildly different for these two datatypes. 1234.5678 will be 9 bytes as // a char string but will be 8 or 16 bytes as a true numeric. // Jay Nance 2006-09-22	WITHOUT_CLASSIFICATION	0.9999342591783291	WITHOUT_CLASSIFICATION	6.56388225541059E-5	DESIGN	8.8438478313308E-8	DEFECT	1.0677959713415698E-8	IMPLEMENTATION	1.6874349300268861E-9	DOCUMENTATION	1.195243914915879E-9	TEST
// dotcount>=2	WITHOUT_CLASSIFICATION	0.9999917793065454	WITHOUT_CLASSIFICATION	7.586107467657074E-6	DEFECT	2.5763633874638444E-7	DESIGN	1.9173749426855747E-7	IMPLEMENTATION	1.4596167302844027E-7	DOCUMENTATION	3.9250480936094476E-8	TEST
// Do the corresponding RHS	WITHOUT_CLASSIFICATION	0.9999847344638799	WITHOUT_CLASSIFICATION	7.391910590549643E-6	IMPLEMENTATION	4.093661713946772E-6	DESIGN	2.0020671225329246E-6	DEFECT	1.3534086167226694E-6	DOCUMENTATION	4.244880763081499E-7	TEST
//if its "id"	WITHOUT_CLASSIFICATION	0.9999916634455214	WITHOUT_CLASSIFICATION	5.1508055660088565E-6	DESIGN	1.2249263271420832E-6	DEFECT	1.022290506922044E-6	IMPLEMENTATION	7.419058046535222E-7	TEST	1.9662627382985852E-7	DOCUMENTATION
//or its the id property name	WITHOUT_CLASSIFICATION	0.9999780692051766	WITHOUT_CLASSIFICATION	1.275229118993142E-5	DESIGN	8.066542440073858E-6	DEFECT	6.666055178578E-7	DOCUMENTATION	3.3433319960937214E-7	TEST	1.1102247595988635E-7	IMPLEMENTATION
//join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999959344917003	WITHOUT_CLASSIFICATION	1.9608342165117383E-6	IMPLEMENTATION	1.4607119818899275E-6	DESIGN	4.412071141074501E-7	DOCUMENTATION	1.5616155794532993E-7	DEFECT	4.6593429162777624E-8	TEST
//important!!	WITHOUT_CLASSIFICATION	0.9997025875319461	WITHOUT_CLASSIFICATION	1.789077897739823E-4	DEFECT	7.566206250183142E-5	DESIGN	2.7670628129564486E-5	IMPLEMENTATION	1.115515352732743E-5	DOCUMENTATION	4.016834121287546E-6	TEST
//String[] keyCols = collPersister.getKeyColumnNames();	WITHOUT_CLASSIFICATION	0.9999990370852146	WITHOUT_CLASSIFICATION	4.88824585151451E-7	DESIGN	3.791523460580296E-7	DEFECT	5.8180917968542014E-8	TEST	3.03695449782862E-8	IMPLEMENTATION	6.387391226779958E-9	DOCUMENTATION
// an association	WITHOUT_CLASSIFICATION	0.9999982058462552	WITHOUT_CLASSIFICATION	7.217145977704054E-7	DESIGN	5.596364468414772E-7	DOCUMENTATION	3.7571963760895526E-7	TEST	1.2601870547013013E-7	DEFECT	1.1064356945130066E-8	IMPLEMENTATION
//allow index() function:	WITHOUT_CLASSIFICATION	0.9997750054514227	WITHOUT_CLASSIFICATION	1.768483927201412E-4	DEFECT	3.932752492426711E-5	IMPLEMENTATION	6.899923298475045E-6	DESIGN	1.6837896468282358E-6	DOCUMENTATION	2.349179877016388E-7	TEST
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9872049145756921	WITHOUT_CLASSIFICATION	0.009232939995362958	DEFECT	0.0034112917594827145	DESIGN	1.4263492586393474E-4	TEST	8.178761370585832E-6	DOCUMENTATION	3.9982227617261605E-8	IMPLEMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9991776431610255	WITHOUT_CLASSIFICATION	7.634384585117663E-4	DESIGN	5.877253194968809E-5	DEFECT	8.757548832296031E-8	TEST	5.806277629477662E-8	DOCUMENTATION	2.102483247207637E-10	IMPLEMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9977849882959291	WITHOUT_CLASSIFICATION	8.987890354474154E-4	DESIGN	8.364085803858201E-4	DEFECT	3.033105523253342E-4	IMPLEMENTATION	1.4691029120017618E-4	DOCUMENTATION	2.9593244712116167E-5	TEST
// collections of values	WITHOUT_CLASSIFICATION	0.9999993097453491	WITHOUT_CLASSIFICATION	4.84350426583871E-7	DEFECT	1.9027474032758116E-7	DESIGN	6.922042716277053E-9	IMPLEMENTATION	4.792440958850997E-9	TEST	3.915000438159578E-9	DOCUMENTATION
//opening paren in new Foo ( ... )	WITHOUT_CLASSIFICATION	0.9969635318424288	WITHOUT_CLASSIFICATION	0.002747781630324996	DESIGN	1.6003842344739815E-4	DEFECT	6.128212164864408E-5	IMPLEMENTATION	5.536696718979011E-5	DOCUMENTATION	1.1999014960413494E-5	TEST
//if we are inside a new Result(), but not inside a nested function	WITHOUT_CLASSIFICATION	0.9999988319603031	WITHOUT_CLASSIFICATION	5.908545725959741E-7	DEFECT	4.832469510832938E-7	DESIGN	8.036451474658517E-8	TEST	1.1322420946482016E-8	DOCUMENTATION	2.2512374252769456E-9	IMPLEMENTATION
//special case	WITHOUT_CLASSIFICATION	0.9999757277079278	WITHOUT_CLASSIFICATION	2.2131074562912897E-5	IMPLEMENTATION	1.0533034198708648E-6	DESIGN	5.788754445650857E-7	DOCUMENTATION	4.515582330539874E-7	DEFECT	5.748041188975483E-8	TEST
// the name of an SQL function	WITHOUT_CLASSIFICATION	0.9999992003771959	WITHOUT_CLASSIFICATION	4.993771771282873E-7	DESIGN	1.5221419427273318E-7	DEFECT	1.3212979527735875E-7	DOCUMENTATION	8.5667012981295E-9	TEST	7.334936133672544E-9	IMPLEMENTATION
//null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.9998502873769768	WITHOUT_CLASSIFICATION	1.4910106409507043E-4	DESIGN	2.573594369081307E-7	DOCUMENTATION	2.1663895948216522E-7	DEFECT	1.2538856695956368E-7	IMPLEMENTATION	1.2171964744532299E-8	TEST
//this is basically a copy/paste of OrderByParser ... might be worth refactoring	WITHOUT_CLASSIFICATION	0.5525846753900114	DESIGN	0.4313047924108022	WITHOUT_CLASSIFICATION	0.016092906675905305	DEFECT	8.784347070281292E-6	TEST	7.8829328301042E-6	IMPLEMENTATION	9.582433808725752E-7	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person GROUP BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999930111908201	WITHOUT_CLASSIFICATION	5.6652933082686616E-6	IMPLEMENTATION	1.07459715879524E-6	DESIGN	1.5126233461346577E-7	DEFECT	5.080640217709136E-8	DOCUMENTATION	4.684997598868926E-8	TEST
// return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.9998454365336882	WITHOUT_CLASSIFICATION	1.5431762718647315E-4	DESIGN	2.3129529043452091E-7	DEFECT	7.313734552654363E-9	DOCUMENTATION	5.583223608054756E-9	TEST	1.6468768606456265E-9	IMPLEMENTATION
//register collection role	WITHOUT_CLASSIFICATION	0.99990537353347	WITHOUT_CLASSIFICATION	9.080001692718239E-5	DESIGN	2.369396607852114E-6	IMPLEMENTATION	7.148816292182517E-7	TEST	5.551246522993275E-7	DEFECT	1.8704671350364533E-7	DOCUMENTATION
// The keyword used to specify an identity column, if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.9999999427237123	WITHOUT_CLASSIFICATION	5.431431863582134E-8	DESIGN	1.1478526179684628E-9	DOCUMENTATION	9.882512368683754E-10	DEFECT	5.704202450423855E-10	TEST	2.554450127177405E-10	IMPLEMENTATION
//.getElementPropertyMapping();	WITHOUT_CLASSIFICATION	0.9998483185400777	WITHOUT_CLASSIFICATION	1.211964617707105E-4	IMPLEMENTATION	2.490317150530494E-5	DEFECT	2.360546391712123E-6	DESIGN	1.7248069796693743E-6	DOCUMENTATION	1.4964732748005326E-6	TEST
//crossJoins.add(name);	WITHOUT_CLASSIFICATION	0.9999078700323977	WITHOUT_CLASSIFICATION	7.407139334814194E-5	DESIGN	7.083981354389405E-6	DOCUMENTATION	7.060993321196055E-6	IMPLEMENTATION	2.524852628718738E-6	DEFECT	1.3887469498707044E-6	TEST
//ie no select clause in HQL	WITHOUT_CLASSIFICATION	0.9999997941810583	WITHOUT_CLASSIFICATION	1.5629348820960344E-7	DESIGN	4.0156514000066695E-8	DOCUMENTATION	5.996120928896137E-9	DEFECT	2.5459119658302647E-9	IMPLEMENTATION	8.269065604053752E-10	TEST
// initialize the Set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.9999976905385298	WITHOUT_CLASSIFICATION	2.288518356489557E-6	DESIGN	1.3060415835644138E-8	IMPLEMENTATION	4.527693937999483E-9	TEST	2.085172733170139E-9	DEFECT	1.2698312587187595E-9	DOCUMENTATION
//ie. no select clause	WITHOUT_CLASSIFICATION	0.9999999425424277	WITHOUT_CLASSIFICATION	3.837084175981247E-8	DESIGN	9.723396759938119E-9	IMPLEMENTATION	6.528231416273471E-9	DOCUMENTATION	1.5993264932751856E-9	DEFECT	1.235775802774212E-9	TEST
//there _was_ a select clause	WITHOUT_CLASSIFICATION	0.9999999175734866	WITHOUT_CLASSIFICATION	4.2165712005324875E-8	DESIGN	3.36491926859137E-8	IMPLEMENTATION	3.6345058815226074E-9	TEST	2.17578363218062E-9	DOCUMENTATION	8.013191491412383E-10	DEFECT
// return the concrete type, or the underlying type if a concrete type // was not specified	WITHOUT_CLASSIFICATION	0.9999705351784269	WITHOUT_CLASSIFICATION	2.7336851383578967E-5	DESIGN	1.5232821922943241E-6	IMPLEMENTATION	5.880348803200851E-7	DEFECT	8.859113494509127E-9	DOCUMENTATION	7.794003279432564E-9	TEST
//many-to-many	WITHOUT_CLASSIFICATION	0.9977849882959291	WITHOUT_CLASSIFICATION	8.987890354474154E-4	DESIGN	8.364085803858201E-4	DEFECT	3.033105523253342E-4	IMPLEMENTATION	1.4691029120017618E-4	DOCUMENTATION	2.9593244712116167E-5	TEST
//q.addCollection(collectionName, collectionRole);	WITHOUT_CLASSIFICATION	0.9999540897652658	WITHOUT_CLASSIFICATION	1.9397650485292063E-5	IMPLEMENTATION	1.587303690731993E-5	DESIGN	8.024597623696969E-6	DEFECT	1.5376907236699067E-6	TEST	1.0772589942519213E-6	DOCUMENTATION
// classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.9999884893312462	WITHOUT_CLASSIFICATION	7.786164761303513E-6	DESIGN	3.658419058468121E-6	DEFECT	3.470342965654688E-8	DOCUMENTATION	2.184621952029144E-8	TEST	9.535284911835953E-9	IMPLEMENTATION
// can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.9999989305611395	WITHOUT_CLASSIFICATION	9.326242541527327E-7	DESIGN	1.056204575414111E-7	DEFECT	2.780966794444983E-8	DOCUMENTATION	2.9311928004478812E-9	TEST	4.5328805224186123E-10	IMPLEMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999606518034464	WITHOUT_CLASSIFICATION	3.809226300408311E-5	DESIGN	1.0407489114433446E-6	DEFECT	1.3919889122267327E-7	DOCUMENTATION	6.547178253472256E-8	IMPLEMENTATION	1.0513964508128915E-8	TEST
// This is the legacy behaviour for HQL queries...	WITHOUT_CLASSIFICATION	0.9995975349561095	WITHOUT_CLASSIFICATION	3.964924131062572E-4	DESIGN	5.921703258844188E-6	DEFECT	2.6637867392005254E-8	TEST	1.334014885812635E-8	DOCUMENTATION	1.0949509102851817E-8	IMPLEMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9591887775979606	WITHOUT_CLASSIFICATION	0.03515889294616483	IMPLEMENTATION	0.004502149923497853	DEFECT	9.724773467249329E-4	DESIGN	1.0273805195715438E-4	DOCUMENTATION	7.496413369448614E-5	TEST
// not known!	WITHOUT_CLASSIFICATION	0.9591887775979606	WITHOUT_CLASSIFICATION	0.03515889294616483	IMPLEMENTATION	0.004502149923497853	DEFECT	9.724773467249329E-4	DESIGN	1.0273805195715438E-4	DOCUMENTATION	7.496413369448614E-5	TEST
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999935673646151	WITHOUT_CLASSIFICATION	2.539211568160108E-6	DEFECT	2.337404730468923E-6	DESIGN	8.971743661540798E-7	IMPLEMENTATION	5.117225436101414E-7	DOCUMENTATION	1.4712217654593218E-7	TEST
// not known!	WITHOUT_CLASSIFICATION	0.9591887775979606	WITHOUT_CLASSIFICATION	0.03515889294616483	IMPLEMENTATION	0.004502149923497853	DEFECT	9.724773467249329E-4	DESIGN	1.0273805195715438E-4	DOCUMENTATION	7.496413369448614E-5	TEST
// not known!	WITHOUT_CLASSIFICATION	0.9591887775979606	WITHOUT_CLASSIFICATION	0.03515889294616483	IMPLEMENTATION	0.004502149923497853	DEFECT	9.724773467249329E-4	DESIGN	1.0273805195715438E-4	DOCUMENTATION	7.496413369448614E-5	TEST
//Need this, since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.9520544480090571	WITHOUT_CLASSIFICATION	0.0472049526829689	DESIGN	5.623819690541592E-4	DOCUMENTATION	9.42971587622392E-5	IMPLEMENTATION	4.832073971816158E-5	DEFECT	3.55994404393183E-5	TEST
//tokens that close a sub expression //tokens that open a sub expression //tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.9999816249895337	WITHOUT_CLASSIFICATION	1.706365705829707E-5	DEFECT	1.2514976800696332E-6	DESIGN	2.485744365570402E-8	IMPLEMENTATION	2.4453823133715227E-8	TEST	1.0544461167726587E-8	DOCUMENTATION
//expressionTerminators.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999998649463735	WITHOUT_CLASSIFICATION	9.818392247664378E-8	DESIGN	2.22768633383067E-8	DEFECT	9.612174867348738E-9	IMPLEMENTATION	3.4517171334493526E-9	TEST	1.5289486866994254E-9	DOCUMENTATION
//expressionOpeners.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999996261593262	WITHOUT_CLASSIFICATION	1.8737421215932258E-7	IMPLEMENTATION	1.2863243417513102E-7	DESIGN	4.6145728518735055E-8	DEFECT	6.49041561630654E-9	TEST	5.197883364364699E-9	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource) // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9980272639406057	WITHOUT_CLASSIFICATION	0.0010093646465023115	DEFECT	9.609703626524734E-4	DESIGN	1.3123450354359877E-6	IMPLEMENTATION	1.0534040267090241E-6	DOCUMENTATION	3.5301177286579026E-8	TEST
// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and "do the right thing" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character (what is to be trimmed off?) // the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.9595523275852768	WITHOUT_CLASSIFICATION	0.04044393547289726	DESIGN	1.8984805932073491E-6	DOCUMENTATION	1.7649556125311144E-6	IMPLEMENTATION	6.905048241848284E-8	TEST	4.4551378999534894E-9	DEFECT
//Inside a BETWEEN ... AND ... expression	WITHOUT_CLASSIFICATION	0.9961241686428142	WITHOUT_CLASSIFICATION	0.0016282134849783328	DEFECT	0.0013858021151933006	IMPLEMENTATION	8.43445219220776E-4	DESIGN	1.6262757959692068E-5	DOCUMENTATION	2.107779833672733E-6	TEST
//were an odd or even number of NOTs encountered //the join string built up by compound paths inside this expression //a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.999998699174362	WITHOUT_CLASSIFICATION	1.1540465041795015E-6	DESIGN	1.0077645339107493E-7	DEFECT	2.8008252785923635E-8	DOCUMENTATION	9.976813120473265E-9	IMPLEMENTATION	8.017614518046224E-9	TEST
//ie. a many-to-many	WITHOUT_CLASSIFICATION	0.9996481326040647	WITHOUT_CLASSIFICATION	2.720892223107006E-4	DESIGN	5.1719169590106224E-5	DEFECT	2.2935559132197444E-5	IMPLEMENTATION	4.11320985179352E-6	DOCUMENTATION	1.0102350505318714E-6	TEST
//Cope with [,]	WITHOUT_CLASSIFICATION	0.9998416875849866	WITHOUT_CLASSIFICATION	1.1889575555684718E-4	DESIGN	2.723903877906158E-5	IMPLEMENTATION	4.570424452688611E-6	TEST	4.1798766529353455E-6	DOCUMENTATION	3.4273195718414643E-6	DEFECT
//Cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.999624778646803	WITHOUT_CLASSIFICATION	3.720172310200351E-4	DESIGN	1.7601308049908952E-6	DEFECT	1.0422006126076537E-6	IMPLEMENTATION	3.175537799918618E-7	DOCUMENTATION	8.423697944573043E-8	TEST
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9994235056950334	WITHOUT_CLASSIFICATION	5.23319274831345E-4	DESIGN	3.090274564467328E-5	DEFECT	2.0823493723546188E-5	IMPLEMENTATION	1.102783820795892E-6	DOCUMENTATION	3.460069463251172E-7	TEST
//Cope with a subselect	WITHOUT_CLASSIFICATION	0.9999894239669902	WITHOUT_CLASSIFICATION	1.0156683693842059E-5	DESIGN	1.513590557931637E-7	DEFECT	1.3113153795734589E-7	IMPLEMENTATION	8.071083046997692E-8	TEST	5.6147891838418214E-8	DOCUMENTATION
//Cope with special cases of AND, NOT, ()	WITHOUT_CLASSIFICATION	0.999843153203302	WITHOUT_CLASSIFICATION	1.1703106730656958E-4	IMPLEMENTATION	1.8639448512957452E-5	DESIGN	1.317199292031256E-5	DEFECT	5.944194093478405E-6	DOCUMENTATION	2.0600938646270332E-6	TEST
//Close extra brackets we opened	WITHOUT_CLASSIFICATION	0.9999804302983925	WITHOUT_CLASSIFICATION	1.9294149956967493E-5	DESIGN	1.0254731061932162E-7	DEFECT	9.096137825110857E-8	IMPLEMENTATION	4.74115506093672E-8	DOCUMENTATION	3.463141113169332E-8	TEST
//take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.9922552552440445	WITHOUT_CLASSIFICATION	0.005696693071287226	DEFECT	0.002018089046778356	DESIGN	1.9902109360693553E-5	TEST	5.5342026410956224E-6	IMPLEMENTATION	4.5263258880797855E-6	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999997161114866	WITHOUT_CLASSIFICATION	2.5107016061385275E-7	DESIGN	1.1276848159930375E-8	DOCUMENTATION	1.074864589642703E-8	DEFECT	6.682674111280941E-9	IMPLEMENTATION	4.110184587451681E-9	TEST
//process a token, mapping OO path expressions to SQL expressions	WITHOUT_CLASSIFICATION	0.9999990953904564	WITHOUT_CLASSIFICATION	7.519630495973444E-7	DEFECT	6.499612528664996E-8	IMPLEMENTATION	5.831507972782669E-8	DESIGN	2.5973536670995085E-8	DOCUMENTATION	3.361752499914239E-9	TEST
//Open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.9449256298761946	WITHOUT_CLASSIFICATION	0.05498374557213071	DESIGN	2.8736534762915398E-5	DOCUMENTATION	2.4577546172140543E-5	TEST	2.2238816295935997E-5	DEFECT	1.5071654443733752E-5	IMPLEMENTATION
//Cope with special cases of AND, NOT, )	WITHOUT_CLASSIFICATION	0.9997910733737664	WITHOUT_CLASSIFICATION	1.3536351906187678E-4	IMPLEMENTATION	4.079945803109863E-5	DESIGN	2.0695748146510124E-5	DEFECT	8.361405511919898E-6	DOCUMENTATION	3.7064954821701566E-6	TEST
// the next one up must also be	WITHOUT_CLASSIFICATION	0.9999777004445578	WITHOUT_CLASSIFICATION	1.1193691290396547E-5	IMPLEMENTATION	1.0344029832602149E-5	DESIGN	3.6083942629701266E-7	TEST	2.0077064599791035E-7	DEFECT	2.002242468252735E-7	DOCUMENTATION
// Add any joins	WITHOUT_CLASSIFICATION	0.9999964707544386	WITHOUT_CLASSIFICATION	2.3445497587642122E-6	IMPLEMENTATION	7.344338666095165E-7	DOCUMENTATION	3.5855882682795526E-7	DEFECT	5.654879268586679E-8	DESIGN	3.5154316560374174E-8	TEST
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999997161114866	WITHOUT_CLASSIFICATION	2.5107016061385275E-7	DESIGN	1.1276848159930375E-8	DOCUMENTATION	1.074864589642703E-8	DEFECT	6.682674111280941E-9	IMPLEMENTATION	4.110184587451681E-9	TEST
//named query parameter	WITHOUT_CLASSIFICATION	0.9991790455417977	WITHOUT_CLASSIFICATION	7.623305087174423E-4	DESIGN	3.085850623321424E-5	DEFECT	2.1084473043643776E-5	IMPLEMENTATION	4.810525962340511E-6	TEST	1.8704442457054031E-6	DOCUMENTATION
//path expression	WITHOUT_CLASSIFICATION	0.9999760556277405	WITHOUT_CLASSIFICATION	1.3408197450361042E-5	DEFECT	9.03640588457342E-6	IMPLEMENTATION	8.626457505762701E-7	DESIGN	4.520639079329051E-7	DOCUMENTATION	1.8505926602095337E-7	TEST
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999988776097943	WITHOUT_CLASSIFICATION	1.0088219525100026E-6	IMPLEMENTATION	7.322287253340737E-8	DEFECT	1.8957799619459827E-8	TEST	1.4645606264268614E-8	DESIGN	6.741974572841508E-9	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999996943590491	WITHOUT_CLASSIFICATION	2.5975991757277136E-7	IMPLEMENTATION	2.6295613060717127E-8	DESIGN	1.3316114298770111E-8	DEFECT	4.941064069025081E-9	TEST	1.3282418630049842E-9	DOCUMENTATION
//anything else	WITHOUT_CLASSIFICATION	0.9999113955909663	WITHOUT_CLASSIFICATION	7.503473794909418E-5	IMPLEMENTATION	6.72463502327719E-6	DESIGN	4.3558506942645125E-6	DOCUMENTATION	1.3880205988502596E-6	TEST	1.1011647682966695E-6	DEFECT
// the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.9999985023242618	WITHOUT_CLASSIFICATION	1.1543070136785956E-6	DESIGN	2.6347135061068555E-7	DEFECT	6.721688735420529E-8	IMPLEMENTATION	1.0574544468916509E-8	DOCUMENTATION	2.10594204657306E-9	TEST
// careful with this!	WITHOUT_CLASSIFICATION	0.9999989762271656	WITHOUT_CLASSIFICATION	9.644400155441785E-7	DESIGN	3.075081143707063E-8	TEST	1.0107580918866214E-8	IMPLEMENTATION	1.0105933319454702E-8	DEFECT	8.368493233100707E-9	DOCUMENTATION
// the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.9982603548743452	WITHOUT_CLASSIFICATION	0.0017275944545958382	IMPLEMENTATION	9.963649699104812E-6	DEFECT	1.5394179278123761E-6	DESIGN	3.115667817868267E-7	DOCUMENTATION	2.360366503800802E-7	TEST
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999862049999243	WITHOUT_CLASSIFICATION	1.2878356255129844E-5	IMPLEMENTATION	4.067629816233172E-7	DOCUMENTATION	2.95732208945102E-7	DEFECT	1.2058130475468558E-7	TEST	9.356732520729503E-8	DESIGN
//NOTICE: no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.9998080485213495	WITHOUT_CLASSIFICATION	1.896819968413315E-4	DESIGN	2.1395592442253385E-6	IMPLEMENTATION	1.0238475230818877E-7	DOCUMENTATION	1.6309855526683715E-8	TEST	1.1227957175887701E-8	DEFECT
//cannot instantiate	WITHOUT_CLASSIFICATION	0.9992374460312841	WITHOUT_CLASSIFICATION	6.820770756353242E-4	DESIGN	6.736800803996872E-5	DEFECT	6.327513183863736E-6	IMPLEMENTATION	4.596323848891248E-6	DOCUMENTATION	2.185048007880936E-6	TEST
// start by looking for HQL keywords...	WITHOUT_CLASSIFICATION	0.9999995532464383	WITHOUT_CLASSIFICATION	3.575848432488543E-7	DEFECT	7.523177791307881E-8	DESIGN	1.1541667010256523E-8	TEST	1.3731613856886631E-9	DOCUMENTATION	1.0221121210813093E-9	IMPLEMENTATION
// inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.9999974718766621	WITHOUT_CLASSIFICATION	2.1292089365848725E-6	DESIGN	3.1113666253316836E-7	DEFECT	4.263356003002393E-8	IMPLEMENTATION	3.038139917604487E-8	TEST	1.4762779430468202E-8	DOCUMENTATION
// 'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.9999998809088757	WITHOUT_CLASSIFICATION	9.395282347294462E-8	IMPLEMENTATION	1.5307927484891135E-8	DEFECT	8.666114245506626E-9	DESIGN	6.528803181601319E-10	DOCUMENTATION	5.11378671985098E-10	TEST
// now anything that is not a HQL keyword	WITHOUT_CLASSIFICATION	0.9997790266888896	WITHOUT_CLASSIFICATION	1.7953885940670975E-4	DEFECT	2.9939556498098084E-5	IMPLEMENTATION	1.0003394965981782E-5	DESIGN	1.235286558472564E-6	TEST	2.562136809305664E-7	DOCUMENTATION
// process the "old" HQL style where aliases appear _first_ // ie. using the IN or IN CLASS constructions	WITHOUT_CLASSIFICATION	0.9999999532830549	WITHOUT_CLASSIFICATION	3.704389616087898E-8	DESIGN	6.8435054051130675E-9	DEFECT	2.6135002530985472E-9	IMPLEMENTATION	1.1652670561335268E-10	TEST	9.951659603823476E-11	DOCUMENTATION
// treat it as a classname	WITHOUT_CLASSIFICATION	0.9999990102388578	WITHOUT_CLASSIFICATION	8.223361737037773E-7	DESIGN	8.641346606100837E-8	DEFECT	5.2665469030975706E-8	TEST	1.965180129810746E-8	IMPLEMENTATION	8.694232194740519E-9	DOCUMENTATION
// treat it as a path expression	WITHOUT_CLASSIFICATION	0.9999479641290158	WITHOUT_CLASSIFICATION	3.062433173508682E-5	DEFECT	2.116836989808966E-5	IMPLEMENTATION	1.3745480776836788E-7	TEST	6.74843280990215E-8	DESIGN	3.82302152837373E-8	DOCUMENTATION
// starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.9999599738090369	WITHOUT_CLASSIFICATION	4.000960064019919E-5	DESIGN	7.73400054785381E-9	TEST	4.155409077232385E-9	DEFECT	2.79070349091201E-9	IMPLEMENTATION	1.9102097665617905E-9	DOCUMENTATION
// starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.9999876403241995	WITHOUT_CLASSIFICATION	1.1028459150125581E-5	DESIGN	1.062223150678777E-6	DEFECT	2.3391777540150084E-7	IMPLEMENTATION	2.815732909678942E-8	TEST	6.918395250438428E-9	DOCUMENTATION
//allow ODMG OQL style: from Person p, p.cars c	WITHOUT_CLASSIFICATION	0.9953516152243683	WITHOUT_CLASSIFICATION	0.004525148519980562	DESIGN	9.772076672358705E-5	DEFECT	2.346547453437702E-5	IMPLEMENTATION	1.1545240573797016E-6	TEST	8.954903356572495E-7	DOCUMENTATION
//handle quoted strings	WITHOUT_CLASSIFICATION	0.9999671813750354	WITHOUT_CLASSIFICATION	2.676269164446956E-5	DESIGN	3.7618634294311433E-6	IMPLEMENTATION	1.419077626308147E-6	TEST	5.243330482541439E-7	DEFECT	3.5065921610794234E-7	DOCUMENTATION
// Object insertions, updates, and deletions have list semantics because // they must happen in the right order so as to respect referential // integrity	WITHOUT_CLASSIFICATION	0.9999993771923404	WITHOUT_CLASSIFICATION	5.91622695247634E-7	DEFECT	1.6833429670805096E-8	DESIGN	1.1461932262779894E-8	IMPLEMENTATION	2.5615636925509453E-9	DOCUMENTATION	3.280385841858736E-10	TEST
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999862049999243	WITHOUT_CLASSIFICATION	1.2878356255129844E-5	IMPLEMENTATION	4.067629816233172E-7	DOCUMENTATION	2.95732208945102E-7	DEFECT	1.2058130475468558E-7	TEST	9.356732520729503E-8	DESIGN
//ignore whitespace	WITHOUT_CLASSIFICATION	0.9999992796021853	WITHOUT_CLASSIFICATION	5.019681741803269E-7	DESIGN	1.1041527986820297E-7	DOCUMENTATION	4.463016685931692E-8	TEST	3.9933532098185513E-8	IMPLEMENTATION	2.3450661667969686E-8	DEFECT
//do replacements	WITHOUT_CLASSIFICATION	0.9999051651605367	WITHOUT_CLASSIFICATION	8.138635645355543E-5	DESIGN	1.27059223075618E-5	IMPLEMENTATION	5.073639755100898E-7	DOCUMENTATION	1.791472047580788E-7	TEST	5.604952190480357E-8	DEFECT
//handle HQL2 collection syntax	WITHOUT_CLASSIFICATION	0.9995889551554809	WITHOUT_CLASSIFICATION	1.9418263212011487E-4	IMPLEMENTATION	1.5461809915751375E-4	DESIGN	5.456598063878806E-5	DEFECT	6.972816505414881E-6	DOCUMENTATION	7.053160972871597E-7	TEST
// uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.9997576656847402	WITHOUT_CLASSIFICATION	2.402647963081083E-4	DESIGN	1.2414167452562755E-6	IMPLEMENTATION	3.91736622919285E-7	DEFECT	3.2338667905510056E-7	TEST	1.1297890444670582E-7	DOCUMENTATION
// AbstractSelectingDelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999996302850984	WITHOUT_CLASSIFICATION	2.5641164659333863E-6	DESIGN	8.599882398602555E-7	IMPLEMENTATION	2.482095753732655E-7	TEST	1.688017551323615E-8	DOCUMENTATION	7.954559287893495E-9	DEFECT
//hilo params	WITHOUT_CLASSIFICATION	0.999988573042703	WITHOUT_CLASSIFICATION	8.096723635892124E-6	DESIGN	2.858005932752498E-6	IMPLEMENTATION	2.5012003590092006E-7	TEST	1.2614930627602752E-7	DOCUMENTATION	9.595838606995039E-8	DEFECT
//sql = query;	WITHOUT_CLASSIFICATION	0.9999344266951985	WITHOUT_CLASSIFICATION	4.715573867733927E-5	DESIGN	1.172949593923024E-5	IMPLEMENTATION	5.3217540866168764E-6	DEFECT	7.584015760529308E-7	TEST	6.079145222436692E-7	DOCUMENTATION
// performance opt	WITHOUT_CLASSIFICATION	0.9999899504923615	WITHOUT_CLASSIFICATION	3.571777054273133E-6	IMPLEMENTATION	3.077462820821621E-6	DESIGN	2.019616397233904E-6	DOCUMENTATION	1.3149863712796978E-6	DEFECT	6.566499487993645E-8	TEST
//sql = update;	WITHOUT_CLASSIFICATION	0.9999826519108348	WITHOUT_CLASSIFICATION	1.0682068668586708E-5	IMPLEMENTATION	5.448261179346918E-6	DESIGN	8.817328774893896E-7	DEFECT	1.8341784683921947E-7	DOCUMENTATION	1.5260859302045872E-7	TEST
//hilo config	WITHOUT_CLASSIFICATION	0.9999682433497348	WITHOUT_CLASSIFICATION	1.3951820160953738E-5	DESIGN	8.873805813183547E-6	IMPLEMENTATION	4.606755726129032E-6	DEFECT	3.542023203781032E-6	DOCUMENTATION	7.822453612137456E-7	TEST
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999989337029809	WITHOUT_CLASSIFICATION	8.900232506614033E-7	DESIGN	8.581202973935727E-8	DOCUMENTATION	4.043494391981872E-8	DEFECT	3.451234170242802E-8	IMPLEMENTATION	1.5514453102028915E-8	TEST
// don't allow comments on these insert statements as comments totally // blow up the Oracle getGeneratedKeys "support" :(	WITHOUT_CLASSIFICATION	0.9999999680270784	WITHOUT_CLASSIFICATION	3.082978505768802E-8	DEFECT	9.045865119212107E-10	DESIGN	1.6371150848803893E-10	IMPLEMENTATION	7.202899159734681E-11	TEST	2.8094720402509746E-12	DOCUMENTATION
//abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.9117822742455989	WITHOUT_CLASSIFICATION	0.06827646612138497	IMPLEMENTATION	0.018873504473266543	DESIGN	9.565416735981459E-4	DEFECT	8.788965669821764E-5	DOCUMENTATION	2.3323829453371835E-5	TEST
//throw new IdentifierGenerationException("save associated object first, or disable cascade for inverse association");	WITHOUT_CLASSIFICATION	0.99999998662925	WITHOUT_CLASSIFICATION	9.910630950974635E-9	IMPLEMENTATION	3.044275101467627E-9	TEST	3.1610909109947124E-10	DOCUMENTATION	7.547187478956361E-11	DESIGN	2.4262990439057374E-11	DEFECT
// intentionally empty	WITHOUT_CLASSIFICATION	0.999992463609089	WITHOUT_CLASSIFICATION	6.835172943918101E-6	DESIGN	4.4835015714046607E-7	DEFECT	1.7479444436979803E-7	DOCUMENTATION	6.397277108738948E-8	IMPLEMENTATION	1.4100594634715046E-8	TEST
//do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.9999986451306737	WITHOUT_CLASSIFICATION	1.2047203417008286E-6	DEFECT	8.406354703576454E-8	DESIGN	5.52191796714542E-8	DOCUMENTATION	1.0182922174284034E-8	TEST	6.83335733838352E-10	IMPLEMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999870797266538	WITHOUT_CLASSIFICATION	6.001217150430555E-6	DESIGN	5.806406519289675E-6	IMPLEMENTATION	5.039902060351575E-7	DEFECT	3.4924249430076924E-7	TEST	2.594169762274031E-7	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999989337029809	WITHOUT_CLASSIFICATION	8.900232506614033E-7	DESIGN	8.581202973935727E-8	DOCUMENTATION	4.043494391981872E-8	DEFECT	3.451234170242802E-8	IMPLEMENTATION	1.5514453102028915E-8	TEST
// do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.9999999738273753	WITHOUT_CLASSIFICATION	1.1972606325806329E-8	DESIGN	1.1609105861564855E-8	IMPLEMENTATION	1.4321703685996383E-9	TEST	8.988582251339007E-10	DOCUMENTATION	2.5988385993354986E-10	DEFECT
/* COLUMN and TABLE should be renamed but it would break the public API */	WITHOUT_CLASSIFICATION	0.9995494492934561	WITHOUT_CLASSIFICATION	2.3223521273492878E-4	DEFECT	2.1092636081340832E-4	DESIGN	4.96976797949615E-6	IMPLEMENTATION	1.2122373325160526E-6	DOCUMENTATION	1.2071276836283494E-6	TEST
// Loaded entity instances, by EntityKey	WITHOUT_CLASSIFICATION	0.9999985873996227	WITHOUT_CLASSIFICATION	6.817057567671925E-7	DEFECT	5.8939112744202E-7	DESIGN	9.651138263412074E-8	DOCUMENTATION	2.6317345242258716E-8	IMPLEMENTATION	1.8674765213047836E-8	TEST
// if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.9999486432227774	WITHOUT_CLASSIFICATION	3.2534421528989954E-5	IMPLEMENTATION	1.603413006908152E-5	DESIGN	1.3761179793520895E-6	DEFECT	9.079057976135666E-7	DOCUMENTATION	5.042018475603544E-7	TEST
// the default...	WITHOUT_CLASSIFICATION	0.9999907769467925	WITHOUT_CLASSIFICATION	4.795622263125014E-6	DESIGN	4.033441517874776E-6	IMPLEMENTATION	1.645305200475805E-7	DOCUMENTATION	1.4283895848059133E-7	DEFECT	8.661994794030181E-8	TEST
// unfortunately not really safe to normalize this // to 1 as an initial value like we do the others // because we would not be able to control this if // we are using a sequence...	WITHOUT_CLASSIFICATION	0.9999999003931407	WITHOUT_CLASSIFICATION	5.454404389981951E-8	IMPLEMENTATION	4.3593363507374964E-8	DESIGN	6.101196365982427E-10	DEFECT	6.046820212116799E-10	TEST	2.546504229197544E-10	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.999992463609089	WITHOUT_CLASSIFICATION	6.835172943918101E-6	DESIGN	4.4835015714046607E-7	DEFECT	1.7479444436979803E-7	DOCUMENTATION	6.397277108738948E-8	IMPLEMENTATION	1.4100594634715046E-8	TEST
// Identity map of CollectionEntry instances, by the collection wrapper	WITHOUT_CLASSIFICATION	0.999998787264587	WITHOUT_CLASSIFICATION	6.42394141510414E-7	IMPLEMENTATION	3.975764144170364E-7	DEFECT	1.602585081161961E-7	DESIGN	6.659651756314313E-9	DOCUMENTATION	5.8466972545960624E-9	TEST
// general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999815391149349	WITHOUT_CLASSIFICATION	1.73365375697E-5	DESIGN	7.266246518768074E-7	DEFECT	3.28216950343522E-7	IMPLEMENTATION	4.583256063347628E-8	DOCUMENTATION	2.3673332542507344E-8	TEST
// table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993943017392	WITHOUT_CLASSIFICATION	5.888002425452487E-7	DESIGN	1.0368546468364768E-8	IMPLEMENTATION	3.920752544371006E-9	TEST	1.5993986674345363E-9	DOCUMENTATION	1.009320526842289E-9	DEFECT
// Configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997766680260493	WITHOUT_CLASSIFICATION	1.9403762005138313E-4	IMPLEMENTATION	2.7205609940694436E-5	DESIGN	1.3209480215718457E-6	DEFECT	4.010628426704145E-7	TEST	3.6673309428445786E-7	DOCUMENTATION
// IdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9959705786500654	WITHOUT_CLASSIFICATION	0.004023340821256119	IMPLEMENTATION	4.975697965255551E-6	DESIGN	7.48793571406276E-7	DEFECT	1.9800690475017693E-7	TEST	1.580302369503486E-7	DOCUMENTATION
// PersistentIdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9985117518784262	WITHOUT_CLASSIFICATION	0.0014849553291471926	IMPLEMENTATION	2.758067942291785E-6	DESIGN	3.4274059515707855E-7	TEST	1.3821559126613968E-7	DEFECT	5.3768297784460043E-8	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999999901628777	WITHOUT_CLASSIFICATION	3.0571874114941894E-9	DEFECT	2.732917994337498E-9	DESIGN	2.0355895683686463E-9	IMPLEMENTATION	1.359145728059165E-9	DOCUMENTATION	6.522816280297831E-10	TEST
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999999901628777	WITHOUT_CLASSIFICATION	3.0571874114941894E-9	DEFECT	2.732917994337498E-9	DESIGN	2.0355895683686463E-9	IMPLEMENTATION	1.359145728059165E-9	DOCUMENTATION	6.522816280297831E-10	TEST
//fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.9997378604211128	WITHOUT_CLASSIFICATION	2.44743447076226E-4	DESIGN	1.2838355067203295E-5	DEFECT	2.896386162939658E-6	TEST	8.518706882163421E-7	IMPLEMENTATION	8.095198927061331E-7	DOCUMENTATION
// we just hit the last position	WITHOUT_CLASSIFICATION	0.999980669998474	WITHOUT_CLASSIFICATION	1.4368563793255437E-5	IMPLEMENTATION	2.8006677483660585E-6	DESIGN	1.2207382844019256E-6	DEFECT	8.202778900790953E-7	DOCUMENTATION	1.1975380995953864E-7	TEST
// scroll ahead	WITHOUT_CLASSIFICATION	0.9999978635289432	WITHOUT_CLASSIFICATION	1.1681941443992683E-6	DESIGN	8.190247992645288E-7	IMPLEMENTATION	6.753208435447188E-8	DOCUMENTATION	6.531706503342328E-8	DEFECT	1.640296375298561E-8	TEST
// scroll backward	WITHOUT_CLASSIFICATION	0.9999973857421786	WITHOUT_CLASSIFICATION	1.1729918184990214E-6	DESIGN	1.1186511778158333E-6	DEFECT	2.6745782277863776E-7	IMPLEMENTATION	3.8020801951613153E-8	DOCUMENTATION	1.7136200329066192E-8	TEST
// we have not yet hit the last result...	WITHOUT_CLASSIFICATION	0.9994435543432272	WITHOUT_CLASSIFICATION	3.031653351846503E-4	IMPLEMENTATION	2.2999277779835772E-4	DEFECT	1.3230879175371062E-5	TEST	8.963430559809935E-6	DESIGN	1.0932340545848862E-6	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999996707982948	WITHOUT_CLASSIFICATION	2.2250382481812317E-6	DESIGN	4.960142809002882E-7	DEFECT	4.4326082090452623E-7	IMPLEMENTATION	8.968388043832919E-8	TEST	3.801982144928181E-8	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999990797960405	WITHOUT_CLASSIFICATION	4.792983374116424E-6	IMPLEMENTATION	1.8189806029769113E-6	DESIGN	1.5605685418088922E-6	DEFECT	7.411694068197094E-7	DOCUMENTATION	2.8833766917235296E-7	TEST
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999931369378515	WITHOUT_CLASSIFICATION	3.6135010775569405E-6	IMPLEMENTATION	2.4277601150337794E-6	DESIGN	4.79762871753639E-7	DEFECT	3.1994094829818576E-7	TEST	2.209713595710044E-8	DOCUMENTATION
// do this when all the properties are updateable since there is // a certain likelihood that the information will already be // snapshot-cached.	WITHOUT_CLASSIFICATION	0.9903177452425229	WITHOUT_CLASSIFICATION	0.009676257272763073	DESIGN	3.2151488934672604E-6	IMPLEMENTATION	1.4944367997843714E-6	DOCUMENTATION	1.1769171967910534E-6	DEFECT	1.1098182383053059E-7	TEST
// Inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999621066432	WITHOUT_CLASSIFICATION	2.411977778513641E-8	DESIGN	6.3674974237774976E-9	TEST	2.650194765132012E-9	DOCUMENTATION	2.3799983355253323E-9	DEFECT	2.3758885760329837E-9	IMPLEMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999996707982948	WITHOUT_CLASSIFICATION	2.2250382481812317E-6	DESIGN	4.960142809002882E-7	DEFECT	4.4326082090452623E-7	IMPLEMENTATION	8.968388043832919E-8	TEST	3.801982144928181E-8	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999990797960405	WITHOUT_CLASSIFICATION	4.792983374116424E-6	IMPLEMENTATION	1.8189806029769113E-6	DESIGN	1.5605685418088922E-6	DEFECT	7.411694068197094E-7	DOCUMENTATION	2.8833766917235296E-7	TEST
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999931369378515	WITHOUT_CLASSIFICATION	3.6135010775569405E-6	IMPLEMENTATION	2.4277601150337794E-6	DESIGN	4.79762871753639E-7	DEFECT	3.1994094829818576E-7	TEST	2.209713595710044E-8	DOCUMENTATION
// Caches	WITHOUT_CLASSIFICATION	0.9999960785065388	WITHOUT_CLASSIFICATION	3.803019727601488E-6	DESIGN	4.97454495507561E-8	DOCUMENTATION	3.857082466131404E-8	TEST	1.7730276968168197E-8	IMPLEMENTATION	1.2427182450547897E-8	DEFECT
//Generators:	WITHOUT_CLASSIFICATION	0.9987607118549191	WITHOUT_CLASSIFICATION	0.0010645651336064618	DESIGN	1.4024596966818274E-4	IMPLEMENTATION	1.7954991504913543E-5	TEST	9.534943460416122E-6	DOCUMENTATION	6.9871068409081555E-6	DEFECT
// cache region is defined by the root-class in the hierarchy...	WITHOUT_CLASSIFICATION	0.9999883819838304	WITHOUT_CLASSIFICATION	1.161524484203768E-5	DESIGN	2.1075644148179686E-9	DEFECT	2.7363091072921015E-10	DOCUMENTATION	2.5430714013799994E-10	TEST	1.3582512027425182E-10	IMPLEMENTATION
//check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.9999732336111196	WITHOUT_CLASSIFICATION	2.5771620762426286E-5	DESIGN	5.985114873424282E-7	DEFECT	2.4030118478649477E-7	IMPLEMENTATION	1.0214394248341178E-7	TEST	5.381150349932689E-8	DOCUMENTATION
// after *all* persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.9999846887913546	WITHOUT_CLASSIFICATION	1.4876059953464662E-5	DESIGN	3.6028704736336886E-7	IMPLEMENTATION	5.4090350272965144E-8	DEFECT	1.791276980152645E-8	TEST	2.8585243855308905E-9	DOCUMENTATION
// if we get here, it is possible that we have a proxy 'in the way' of the merge map resolution... // 	WITHOUT_CLASSIFICATION	0.9999406661598252	WITHOUT_CLASSIFICATION	5.589810709857287E-5	DEFECT	3.2804781457407396E-6	DESIGN	1.4726760121690285E-7	TEST	6.589666002478978E-9	IMPLEMENTATION	1.397663279792014E-9	DOCUMENTATION
//JNDI + Serialization:	WITHOUT_CLASSIFICATION	0.9999926305769377	WITHOUT_CLASSIFICATION	2.7033138201098608E-6	DESIGN	2.5340948266479676E-6	DEFECT	1.3863502248723049E-6	IMPLEMENTATION	5.990765108204269E-7	DOCUMENTATION	1.4658767988268543E-7	TEST
//checking for named queries	WITHOUT_CLASSIFICATION	0.9999313384561925	WITHOUT_CLASSIFICATION	5.134233385135199E-5	DESIGN	6.206191987972245E-6	TEST	6.102035747086361E-6	IMPLEMENTATION	3.7413200438727836E-6	DEFECT	1.269662177325216E-6	DOCUMENTATION
//stats	WITHOUT_CLASSIFICATION	0.99989547410749	WITHOUT_CLASSIFICATION	9.033886698913364E-5	DESIGN	4.571171980699263E-6	TEST	4.1093029925843854E-6	IMPLEMENTATION	2.7746317820898676E-6	DEFECT	2.7319187655957245E-6	DOCUMENTATION
// EntityNotFoundDelegate	WITHOUT_CLASSIFICATION	0.9998938270006597	WITHOUT_CLASSIFICATION	1.0170768243030543E-4	DESIGN	1.9779580264172513E-6	IMPLEMENTATION	1.4967067823349147E-6	DEFECT	6.397657059149553E-7	TEST	3.5088639527319013E-7	DOCUMENTATION
// Check named HQL queries	WITHOUT_CLASSIFICATION	0.9999988885100309	WITHOUT_CLASSIFICATION	1.0057066144955266E-6	DESIGN	6.028582513725109E-8	IMPLEMENTATION	2.5539776656344497E-8	TEST	1.0470606809443473E-8	DOCUMENTATION	9.487145999087072E-9	DEFECT
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9929956791199278	WITHOUT_CLASSIFICATION	0.006745419999331047	DESIGN	1.6058083287074038E-4	DEFECT	9.184058639675307E-5	TEST	4.555711765309687E-6	IMPLEMENTATION	1.9237497082726733E-6	DOCUMENTATION
//prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.9989184452927337	WITHOUT_CLASSIFICATION	0.001017746645900595	DESIGN	6.12359933282436E-5	DEFECT	1.5017547898247077E-6	DOCUMENTATION	8.497012733198777E-7	TEST	2.206119743875812E-7	IMPLEMENTATION
// from javax.naming.Referenceable	WITHOUT_CLASSIFICATION	0.9999821561941921	WITHOUT_CLASSIFICATION	1.728441914741957E-5	DESIGN	3.083391995811331E-7	DEFECT	2.0035818148304674E-7	DOCUMENTATION	3.746589431730806E-8	TEST	1.322338501968682E-8	IMPLEMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999688109981174	WITHOUT_CLASSIFICATION	1.943072805534223E-5	DESIGN	1.1027580936361251E-5	IMPLEMENTATION	5.039893261173835E-7	DEFECT	1.89586498833998E-7	DOCUMENTATION	3.7117066042280757E-8	TEST
//for a dynamic-class	WITHOUT_CLASSIFICATION	0.9999793519061532	WITHOUT_CLASSIFICATION	2.0494000273089637E-5	DESIGN	8.687137778884471E-8	DOCUMENTATION	4.164209746712162E-8	DEFECT	2.082157954552564E-8	TEST	4.758518830257748E-9	IMPLEMENTATION
//test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.9990052652162908	WITHOUT_CLASSIFICATION	5.828538104927085E-4	DESIGN	4.0910186140105507E-4	TEST	2.538503735394569E-6	DOCUMENTATION	2.0109715617082519E-7	DEFECT	3.9510923973829505E-8	IMPLEMENTATION
//NOTE EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999212030059614	WITHOUT_CLASSIFICATION	4.8448824787399526E-5	IMPLEMENTATION	1.999847460652264E-5	DESIGN	5.677747674465814E-6	DEFECT	2.8165974030752392E-6	DOCUMENTATION	1.8553495671502467E-6	TEST
// for backward-compatability	WITHOUT_CLASSIFICATION	0.9999991795434177	WITHOUT_CLASSIFICATION	4.1369205540791496E-7	DESIGN	2.7535313711052587E-7	DEFECT	1.2027441460586456E-7	IMPLEMENTATION	6.2160619912561045E-9	TEST	4.920913239911258E-9	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999998707819449	WITHOUT_CLASSIFICATION	9.239239967177862E-8	DEFECT	1.7798141239494556E-8	DESIGN	8.523131526657576E-9	IMPLEMENTATION	6.166056820876047E-9	TEST	4.338325889273381E-9	DOCUMENTATION
//to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.9999970103123141	WITHOUT_CLASSIFICATION	2.9189175649300586E-6	DESIGN	2.9415213819437296E-8	DEFECT	1.6590687394778842E-8	IMPLEMENTATION	1.5214973621262058E-8	DOCUMENTATION	9.549246052372981E-9	TEST
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9493129793506092	WITHOUT_CLASSIFICATION	0.050305122448908605	DESIGN	3.7042004967064373E-4	IMPLEMENTATION	5.444256608641585E-6	DOCUMENTATION	3.0904604593445016E-6	DEFECT	2.9434337435048716E-6	TEST
//must add to JNDI _after_ adding to HashMaps, because some JNDI servers use serialization	WITHOUT_CLASSIFICATION	0.9999872389936463	WITHOUT_CLASSIFICATION	1.1996104239670088E-5	DESIGN	5.318855723251305E-7	IMPLEMENTATION	1.8400423026489624E-7	DOCUMENTATION	4.089017341278587E-8	TEST	8.122137996080088E-9	DEFECT
// Make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.999996750087029	WITHOUT_CLASSIFICATION	2.7119546839448725E-6	DESIGN	4.226799042729408E-7	IMPLEMENTATION	1.0988118861651552E-7	DEFECT	2.947039819445775E-9	DOCUMENTATION	2.4501544272085495E-9	TEST
// for each of the defined parameters, make sure its value // has been set	WITHOUT_CLASSIFICATION	0.9999989338457257	WITHOUT_CLASSIFICATION	1.0432470174709052E-6	DESIGN	2.0757020355680965E-8	DEFECT	1.3109634761803734E-9	TEST	7.235853485747339E-10	IMPLEMENTATION	1.1568766631453222E-10	DOCUMENTATION
//we never need to apply locks to the SQL	WITHOUT_CLASSIFICATION	0.9996774594089122	WITHOUT_CLASSIFICATION	1.459682247070259E-4	DESIGN	8.57681916025816E-5	IMPLEMENTATION	4.582155323338744E-5	DEFECT	4.1154644404917495E-5	DOCUMENTATION	3.8279771397051505E-6	TEST
// inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999982343799797	WITHOUT_CLASSIFICATION	1.140718301783433E-6	DESIGN	3.7732573313024E-7	DEFECT	1.809092221553582E-7	TEST	4.003763497149589E-8	IMPLEMENTATION	2.66291282885573E-8	DOCUMENTATION
// deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999992212253946	WITHOUT_CLASSIFICATION	3.080824040226686E-7	IMPLEMENTATION	2.3725959967527602E-7	TEST	1.2044786184821582E-7	DEFECT	9.059062493177599E-8	DESIGN	2.239411490271601E-8	DOCUMENTATION
// during deserialization, we need to reconnect all proxies and // collections to this session, as well as the EntityEntry and // CollectionEntry instances; these associations are transient // because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.9999598521025465	WITHOUT_CLASSIFICATION	3.969227072139778E-5	DESIGN	4.544509064485661E-7	DOCUMENTATION	6.879207996430733E-10	TEST	4.5720780477605895E-10	IMPLEMENTATION	3.069715614683837E-11	DEFECT
// updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999973889598247	WITHOUT_CLASSIFICATION	1.582472486041038E-6	IMPLEMENTATION	4.982098564057398E-7	DEFECT	2.6883287504889313E-7	TEST	2.1178003730039098E-7	DESIGN	4.974492052864653E-8	DOCUMENTATION
// loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999923425126654	WITHOUT_CLASSIFICATION	6.5403296911433376E-6	DEFECT	6.684975386771455E-7	IMPLEMENTATION	2.2461864616987348E-7	TEST	1.3556524227958553E-7	DOCUMENTATION	8.847621627745404E-8	DESIGN
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999876997618613	WITHOUT_CLASSIFICATION	1.1088845083456152E-5	DESIGN	4.980501979887413E-7	IMPLEMENTATION	3.711144299390845E-7	DEFECT	1.7792830696335908E-7	DOCUMENTATION	1.6430012026956045E-7	TEST
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999876997618613	WITHOUT_CLASSIFICATION	1.1088845083456152E-5	DESIGN	4.980501979887413E-7	IMPLEMENTATION	3.711144299390845E-7	DEFECT	1.7792830696335908E-7	DOCUMENTATION	1.6430012026956045E-7	TEST
// first, try to load it from the temp PC associated to this SS	WITHOUT_CLASSIFICATION	0.9999997524294039	WITHOUT_CLASSIFICATION	1.5086290278779327E-7	TEST	9.227436785443908E-8	DESIGN	3.1061665689040552E-9	DOCUMENTATION	7.129900247295388E-10	IMPLEMENTATION	6.141688982445942E-10	DEFECT
// if the metadata allowed proxy creation and caller did not request forceful eager loading, // generate a proxy	WITHOUT_CLASSIFICATION	0.9999999558539399	WITHOUT_CLASSIFICATION	3.0924328569309483E-8	TEST	1.2817100566189403E-8	DEFECT	3.078533025608282E-10	IMPLEMENTATION	6.721629219704858E-11	DESIGN	2.9561383820785204E-11	DOCUMENTATION
// otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.9999079137714001	WITHOUT_CLASSIFICATION	6.826540083227152E-5	DESIGN	2.3274552193992047E-5	IMPLEMENTATION	2.5736599558226406E-7	DEFECT	2.1756145812851334E-7	TEST	7.134812010426028E-8	DOCUMENTATION
/////////////////////////////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999299110184646	WITHOUT_CLASSIFICATION	5.753399134786891E-4	DESIGN	5.258666584817819E-5	IMPLEMENTATION	2.5754187005847864E-5	DOCUMENTATION	2.5414321560056388E-5	DEFECT	2.179472746118229E-5	TEST
// no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.9999095264964907	WITHOUT_CLASSIFICATION	4.7712960447154865E-5	DESIGN	4.1221272298095636E-5	IMPLEMENTATION	1.1556398138151694E-6	DEFECT	2.200799490049704E-7	DOCUMENTATION	1.635510013053882E-7	TEST
//after setting values to object, entityMode	WITHOUT_CLASSIFICATION	0.9997458146057483	WITHOUT_CLASSIFICATION	2.5327300925257704E-4	DESIGN	7.539604348496342E-7	DEFECT	1.2783149435763247E-7	DOCUMENTATION	2.9101631896190117E-8	TEST	1.4914379795143756E-9	IMPLEMENTATION
//for EJB3	WITHOUT_CLASSIFICATION	0.9998852054861121	WITHOUT_CLASSIFICATION	1.0135062335217611E-4	DESIGN	5.769072348085324E-6	DEFECT	3.2454968936025667E-6	DOCUMENTATION	2.337466626471829E-6	TEST	2.091854667426189E-6	IMPLEMENTATION
// just ignore	WITHOUT_CLASSIFICATION	0.9999957139478702	WITHOUT_CLASSIFICATION	2.506391419727811E-6	DESIGN	1.2675437592539764E-6	IMPLEMENTATION	2.8271956177067264E-7	DEFECT	1.2368826157029528E-7	TEST	1.0570912740221102E-7	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9998659509350426	WITHOUT_CLASSIFICATION	1.1709552292621405E-4	DESIGN	1.5131778531059467E-5	IMPLEMENTATION	9.021088937949366E-7	DEFECT	7.8341123796557E-7	DOCUMENTATION	1.3624336842509714E-7	TEST
// saveOrUpdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999226252403	WITHOUT_CLASSIFICATION	3.193345390970755E-8	IMPLEMENTATION	2.69504631220088E-8	DEFECT	1.4248445219284575E-8	DESIGN	2.148582504316517E-9	DOCUMENTATION	2.093814938698003E-9	TEST
// update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996051870256	WITHOUT_CLASSIFICATION	3.2650043319313516E-7	IMPLEMENTATION	5.4777281290659576E-8	DEFECT	8.14786006896958E-9	DESIGN	2.990784379059671E-9	TEST	2.396615578205596E-9	DOCUMENTATION
// lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997295648309	WITHOUT_CLASSIFICATION	1.8798865060259158E-7	DEFECT	3.907224411356673E-8	IMPLEMENTATION	3.262735105483741E-8	DESIGN	5.407169314450469E-9	DOCUMENTATION	5.339753991373291E-9	TEST
// persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998521985664	WITHOUT_CLASSIFICATION	9.991637977862928E-8	IMPLEMENTATION	2.5543766769412584E-8	DEFECT	1.597894696586583E-8	DESIGN	3.9014288773467365E-9	TEST	2.4609114128591744E-9	DOCUMENTATION
// persistOnFlush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999602051809	WITHOUT_CLASSIFICATION	1.5065357210946237E-8	IMPLEMENTATION	1.482375961520239E-8	DESIGN	7.853718029877188E-9	DEFECT	1.3575253251183575E-9	TEST	6.944589123174608E-10	DOCUMENTATION
// merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999296562955	WITHOUT_CLASSIFICATION	3.1356842758295205E-8	IMPLEMENTATION	1.8595912934943504E-8	DESIGN	1.3920691045408833E-8	DEFECT	4.2079289193431455E-9	TEST	2.262328908388008E-9	DOCUMENTATION
// saveOrUpdateCopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999640005413	WITHOUT_CLASSIFICATION	2.220749653618911E-7	DEFECT	6.456089219569052E-8	IMPLEMENTATION	5.916279323701102E-8	DESIGN	7.474594555088671E-9	DOCUMENTATION	6.721341670789829E-9	TEST
// delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999719937536	WITHOUT_CLASSIFICATION	2.314244281511303E-8	IMPLEMENTATION	2.9990647011110905E-9	DEFECT	8.51791052207315E-10	DESIGN	7.239606743545611E-10	TEST	2.8898726559577944E-10	DOCUMENTATION
// load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998020311169	WITHOUT_CLASSIFICATION	9.743313698213424E-8	IMPLEMENTATION	7.200850963508581E-8	DEFECT	2.2413141359185432E-8	DESIGN	4.440272605981081E-9	TEST	1.6738225265423983E-9	DOCUMENTATION
// refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996951052514	WITHOUT_CLASSIFICATION	1.892529167459645E-7	IMPLEMENTATION	7.588536800051392E-8	DEFECT	2.392564226451776E-8	DESIGN	1.2000785259703535E-8	TEST	3.830036348355626E-9	DOCUMENTATION
// replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996399253017	WITHOUT_CLASSIFICATION	3.150573275645579E-7	DESIGN	2.8540751390538487E-8	IMPLEMENTATION	7.286873389490878E-9	DEFECT	4.883617086397708E-9	TEST	4.30612877285709E-9	DOCUMENTATION
// do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.9999965914625315	WITHOUT_CLASSIFICATION	2.6335906990043532E-6	IMPLEMENTATION	4.661552637492676E-7	DESIGN	2.7800880032855564E-7	DEFECT	2.833725056592539E-8	DOCUMENTATION	2.4454547145887867E-9	TEST
// this is an internal error of some sort...	WITHOUT_CLASSIFICATION	0.9999797791552365	WITHOUT_CLASSIFICATION	1.8305188253720184E-5	DESIGN	1.3557723849342864E-6	DEFECT	2.9113750411095E-7	TEST	2.080710843990799E-7	DOCUMENTATION	6.067553640440044E-8	IMPLEMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9925072274020478	WITHOUT_CLASSIFICATION	0.0074891747813929	DESIGN	1.9065280663095681E-6	TEST	1.6151388185473093E-6	DEFECT	4.3289480946534323E-8	IMPLEMENTATION	3.286019353850399E-8	DOCUMENTATION
//only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.9999777918980997	WITHOUT_CLASSIFICATION	1.9610853224154703E-5	DESIGN	1.3769504558214285E-6	DEFECT	1.1776905548819233E-6	IMPLEMENTATION	3.7467900938374965E-8	DOCUMENTATION	5.139764490432753E-9	TEST
// if it was previously unreferenced, we need to flush in order to // get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.9996111951140172	WITHOUT_CLASSIFICATION	2.884065325439555E-4	DESIGN	7.054948719231667E-5	IMPLEMENTATION	1.7435337328828338E-5	DEFECT	1.0189579992460748E-5	DOCUMENTATION	2.223948925261972E-6	TEST
// not for internal use:	WITHOUT_CLASSIFICATION	0.9843754019570824	WITHOUT_CLASSIFICATION	0.015237830003801951	DESIGN	3.219317645120545E-4	IMPLEMENTATION	5.2756097632353795E-5	DEFECT	6.300753402804522E-6	TEST	5.779423568481229E-6	DOCUMENTATION
// otherwise, we only need to flush if there are in-memory changes // to the queried tables	WITHOUT_CLASSIFICATION	0.9999982097758836	WITHOUT_CLASSIFICATION	1.0789978491993387E-6	IMPLEMENTATION	4.083671796344458E-7	TEST	2.907890776009636E-7	DESIGN	7.110653414401209E-9	DEFECT	4.959356469622029E-9	DOCUMENTATION
// might need to run a different filter entirely after the flush // because the collection role may have changed	WITHOUT_CLASSIFICATION	0.9979315258918399	WITHOUT_CLASSIFICATION	0.0016745903027361997	IMPLEMENTATION	3.929218053463051E-4	DESIGN	4.2381903311556735E-7	DOCUMENTATION	3.6847570906811016E-7	DEFECT	1.697053354592271E-7	TEST
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9925072274020478	WITHOUT_CLASSIFICATION	0.0074891747813929	DESIGN	1.9065280663095681E-6	TEST	1.6151388185473093E-6	DEFECT	4.3289480946534323E-8	IMPLEMENTATION	3.286019353850399E-8	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9925072274020478	WITHOUT_CLASSIFICATION	0.0074891747813929	DESIGN	1.9065280663095681E-6	TEST	1.6151388185473093E-6	DEFECT	4.3289480946534323E-8	IMPLEMENTATION	3.286019353850399E-8	DOCUMENTATION
//if it is initialized, see if the underlying //instance is contained, since we need to  //account for the fact that it might have been //evicted	WITHOUT_CLASSIFICATION	0.9829592213997916	WITHOUT_CLASSIFICATION	0.014350615160022142	DESIGN	0.0024911019691416718	IMPLEMENTATION	1.7888333819191644E-4	TEST	1.9398246683486985E-5	DOCUMENTATION	7.7988616913077E-7	DEFECT
// basically just an adapted copy of find(CriteriaImpl)	WITHOUT_CLASSIFICATION	0.9999929802606221	WITHOUT_CLASSIFICATION	5.431990146357464E-6	IMPLEMENTATION	9.533107293083386E-7	DEFECT	5.479944473026037E-7	DESIGN	7.81221550378665E-8	TEST	8.321899915314024E-9	DOCUMENTATION
// it is possible for this method to be called during flush processing, // so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999779386567708	WITHOUT_CLASSIFICATION	2.1993539351407426E-5	DESIGN	6.124920987215891E-8	TEST	3.6246526513295273E-9	DOCUMENTATION	1.9868423278547827E-9	IMPLEMENTATION	9.431728428410604E-10	DEFECT
// nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.9999384220182713	WITHOUT_CLASSIFICATION	3.212791705127475E-5	DESIGN	1.7976056370733536E-5	IMPLEMENTATION	1.0787281099639017E-5	DEFECT	4.747085933157214E-7	DOCUMENTATION	2.1201861376001052E-7	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999991085847939	WITHOUT_CLASSIFICATION	5.678916425814814E-7	DESIGN	1.9865147318605438E-7	DEFECT	6.276681771231637E-8	IMPLEMENTATION	4.3980501861465335E-8	DOCUMENTATION	1.81247707007564E-8	TEST
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999998707819449	WITHOUT_CLASSIFICATION	9.239239967177862E-8	DEFECT	1.7798141239494556E-8	DESIGN	8.523131526657576E-9	IMPLEMENTATION	6.166056820876047E-9	TEST	4.338325889273381E-9	DOCUMENTATION
// we need to writeObject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.9999993135856132	WITHOUT_CLASSIFICATION	5.98794459959695E-7	DESIGN	5.5566211896872744E-8	DOCUMENTATION	1.2549217048229734E-8	TEST	1.0484856952512567E-8	DEFECT	9.0196410255505E-9	IMPLEMENTATION
// the old-time stand-by...	WITHOUT_CLASSIFICATION	0.9999964880428495	WITHOUT_CLASSIFICATION	2.6020736260294614E-6	IMPLEMENTATION	4.814568677793389E-7	DEFECT	3.426154507114168E-7	DESIGN	6.759385349431615E-8	DOCUMENTATION	1.821735256535842E-8	TEST
// parameter bind values...	WITHOUT_CLASSIFICATION	0.999999614326178	WITHOUT_CLASSIFICATION	2.953923337773231E-7	DESIGN	5.9332950990633086E-8	DEFECT	1.795365934158582E-8	TEST	1.0658381028440652E-8	IMPLEMENTATION	2.336496774277935E-9	DOCUMENTATION
// Parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997547671891662	WITHOUT_CLASSIFICATION	2.3517264345353206E-4	DESIGN	7.682783812208017E-6	IMPLEMENTATION	1.7344112824865907E-6	TEST	3.72558655086455E-7	DEFECT	2.704136304795581E-7	DOCUMENTATION
// prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.999694116536967	WITHOUT_CLASSIFICATION	3.007713688594461E-4	IMPLEMENTATION	3.3999162593124692E-6	DEFECT	1.6074406553830764E-6	DESIGN	5.76111514476929E-8	TEST	4.712610733295464E-8	DOCUMENTATION
// Execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999525046502332	WITHOUT_CLASSIFICATION	4.143207639250145E-5	DESIGN	2.608190290809943E-6	DEFECT	2.2014503370816313E-6	IMPLEMENTATION	8.512975145304919E-7	DOCUMENTATION	4.023352319285326E-7	TEST
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9996585264175204	WITHOUT_CLASSIFICATION	3.251416308563484E-4	DESIGN	6.556775352403323E-6	IMPLEMENTATION	6.424628708990129E-6	DEFECT	3.198512523059165E-6	DOCUMENTATION	1.520350386827865E-7	TEST
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9996585264175204	WITHOUT_CLASSIFICATION	3.251416308563484E-4	DESIGN	6.556775352403323E-6	IMPLEMENTATION	6.424628708990129E-6	DEFECT	3.198512523059165E-6	DOCUMENTATION	1.520350386827865E-7	TEST
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9998004298328358	WITHOUT_CLASSIFICATION	1.908003804545501E-4	DESIGN	3.489281941083747E-6	IMPLEMENTATION	3.1898224336341955E-6	DOCUMENTATION	1.0697052838328018E-6	DEFECT	1.0209770511017817E-6	TEST
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9998004298328358	WITHOUT_CLASSIFICATION	1.908003804545501E-4	DESIGN	3.489281941083747E-6	IMPLEMENTATION	3.1898224336341955E-6	DOCUMENTATION	1.0697052838328018E-6	DEFECT	1.0209770511017817E-6	TEST
// FieldInterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998750008278046	WITHOUT_CLASSIFICATION	1.151641370779952E-4	IMPLEMENTATION	7.834163906529706E-6	DESIGN	1.333166042754757E-6	DEFECT	5.909303181892305E-7	TEST	7.677484999210476E-8	DOCUMENTATION
// subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999983836541635	WITHOUT_CLASSIFICATION	1.5960853762807816E-6	DESIGN	7.134187978950824E-9	TEST	5.284558717797132E-9	DOCUMENTATION	4.036031927556654E-9	IMPLEMENTATION	3.805681600748726E-9	DEFECT
//let's assume that there is only one lazy fetch group, for now!	WITHOUT_CLASSIFICATION	0.9999980298342117	WITHOUT_CLASSIFICATION	1.8434296867832235E-6	DEFECT	8.591477637582553E-8	DESIGN	3.1679935591596575E-8	TEST	5.314440648025101E-9	IMPLEMENTATION	3.826948892407723E-9	DOCUMENTATION
// FieldHandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998503679961689	WITHOUT_CLASSIFICATION	1.3772045012792064E-4	IMPLEMENTATION	1.0256697433578342E-5	DESIGN	1.3002716690045546E-6	TEST	2.9258706850608133E-7	DEFECT	6.199753208818594E-8	DOCUMENTATION
// should *not* need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.9999526402449358	WITHOUT_CLASSIFICATION	3.352009402024749E-5	DESIGN	1.2831329314401228E-5	DEFECT	9.8556163327546E-7	IMPLEMENTATION	1.4005956344040316E-8	DOCUMENTATION	8.764140070837822E-9	TEST
// should probably no-op commit/rollback here, at least in JTA scenarios	WITHOUT_CLASSIFICATION	0.9573136772074498	WITHOUT_CLASSIFICATION	0.04253557873861116	DESIGN	1.3574681177577546E-4	DEFECT	5.450888298605192E-6	IMPLEMENTATION	4.9089086780830855E-6	TEST	4.637445186524967E-6	DOCUMENTATION
// Base Expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999472865808917	WITHOUT_CLASSIFICATION	3.9712735032251477E-5	DEFECT	1.216577970566692E-5	IMPLEMENTATION	3.736640188296739E-7	DOCUMENTATION	3.028087229829285E-7	DESIGN	1.5843162856473203E-7	TEST
// Various Expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999718930750618	WITHOUT_CLASSIFICATION	2.428304317321674E-5	DEFECT	3.026010289024072E-6	DESIGN	3.86920683130414E-7	IMPLEMENTATION	3.787963222867476E-7	DOCUMENTATION	3.215447041587443E-8	TEST
// explicitly perform no checking...	WITHOUT_CLASSIFICATION	0.9990494293496435	WITHOUT_CLASSIFICATION	9.44084142416864E-4	DESIGN	4.890916195807421E-6	DEFECT	1.4393594343859465E-6	DOCUMENTATION	8.997361990391902E-8	TEST	6.625868952844016E-8	IMPLEMENTATION
// used from testsuite	WITHOUT_CLASSIFICATION	0.9999862879165139	WITHOUT_CLASSIFICATION	1.3024096254418176E-5	TEST	5.704933136828814E-7	DESIGN	9.349195135395332E-8	DEFECT	2.102782632526649E-8	DOCUMENTATION	2.9741403440761993E-9	IMPLEMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999999832518284	WITHOUT_CLASSIFICATION	9.345525071079657E-9	DESIGN	4.2659385655339384E-9	DOCUMENTATION	2.108776620001951E-9	TEST	1.0157455869838908E-9	DEFECT	1.218575109690549E-11	IMPLEMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9982414523766154	WITHOUT_CLASSIFICATION	0.0016475936779793072	DESIGN	7.351568261524677E-5	IMPLEMENTATION	1.679939678418562E-5	DOCUMENTATION	1.6057984814387536E-5	DEFECT	4.580881191449248E-6	TEST
// register synch; stats.connect()	WITHOUT_CLASSIFICATION	0.9999971684281905	WITHOUT_CLASSIFICATION	2.0946789687096933E-6	DESIGN	6.362286883811312E-7	IMPLEMENTATION	4.724387434400265E-8	DOCUMENTATION	3.724457184030875E-8	DEFECT	1.617570637338243E-8	TEST
//noncritical, swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.9985106181364882	WITHOUT_CLASSIFICATION	0.0014741326472360225	DESIGN	9.151190048988493E-6	IMPLEMENTATION	4.398826655631817E-6	DEFECT	1.3983491182005013E-6	DOCUMENTATION	3.0085045279999334E-7	TEST
// calls executeBatch()	WITHOUT_CLASSIFICATION	0.9999998110533037	WITHOUT_CLASSIFICATION	1.5218211734302593E-7	DESIGN	2.3997915170383162E-8	DEFECT	5.6621175037049675E-9	IMPLEMENTATION	5.653806786490074E-9	DOCUMENTATION	1.450739380486318E-9	TEST
//no big deal	WITHOUT_CLASSIFICATION	0.9999701437615653	WITHOUT_CLASSIFICATION	1.2870152098723148E-5	DESIGN	7.987946526831523E-6	IMPLEMENTATION	6.291407386330086E-6	DEFECT	2.5282850362958423E-6	DOCUMENTATION	1.7844738642780882E-7	TEST
// no big deal	WITHOUT_CLASSIFICATION	0.9999604183886548	WITHOUT_CLASSIFICATION	2.464755680549993E-5	IMPLEMENTATION	1.0630045419399087E-5	DESIGN	3.242055033407343E-6	DEFECT	9.914126731942112E-7	DOCUMENTATION	7.054141371690842E-8	TEST
// no big deal	WITHOUT_CLASSIFICATION	0.9999604183886548	WITHOUT_CLASSIFICATION	2.464755680549993E-5	IMPLEMENTATION	1.0630045419399087E-5	DESIGN	3.242055033407343E-6	DEFECT	9.914126731942112E-7	DOCUMENTATION	7.054141371690842E-8	TEST
// sybase driver (jConnect) throwing NPE here in certain // cases, but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.999994179221956	WITHOUT_CLASSIFICATION	2.206596128800018E-6	DESIGN	1.6782334506258524E-6	DEFECT	1.5780617633927752E-6	IMPLEMENTATION	3.1554474782918977E-7	TEST	4.2341953339987826E-8	DOCUMENTATION
// see explanation above...	WITHOUT_CLASSIFICATION	0.999994178956634	WITHOUT_CLASSIFICATION	2.7688912245077537E-6	DEFECT	2.587872298353199E-6	DESIGN	3.554538447369757E-7	DOCUMENTATION	6.084776633788786E-8	IMPLEMENTATION	4.797823206992482E-8	TEST
// If we are in the process of releasing, no sense // checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.9999999980373815	WITHOUT_CLASSIFICATION	1.424399520399024E-9	DEFECT	4.129260858818461E-10	DOCUMENTATION	1.0423404194925353E-10	DESIGN	1.264474735491584E-11	TEST	8.414099545932227E-12	IMPLEMENTATION
// EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999810109085736	WITHOUT_CLASSIFICATION	9.648838316536011E-6	DEFECT	7.399240628139929E-6	IMPLEMENTATION	8.804957835374682E-7	DESIGN	6.737408533424219E-7	DOCUMENTATION	3.8677584472639516E-7	TEST
// ResultSet impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992198814818456	WITHOUT_CLASSIFICATION	6.411067409776684E-4	DESIGN	1.1856965702409634E-4	IMPLEMENTATION	1.533974800967973E-5	DEFECT	4.614020921720791E-6	TEST	4.88351221337977E-7	DOCUMENTATION
// ResultSet impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996534459008667	WITHOUT_CLASSIFICATION	2.564413571509951E-4	DESIGN	7.062912664723215E-5	IMPLEMENTATION	1.2841478641753598E-5	TEST	6.260407798746441E-6	DEFECT	3.8172889467017255E-7	DOCUMENTATION
// refer to comment in StatefulPersistenceContext.addCollection()	WITHOUT_CLASSIFICATION	0.9999990109551652	WITHOUT_CLASSIFICATION	4.5774215122201855E-7	DESIGN	2.527449226334825E-7	IMPLEMENTATION	2.1119183220645917E-7	DEFECT	5.79626484291598E-8	DOCUMENTATION	9.403280252681422E-9	TEST
// ConnectionManager.Callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9853823341402699	WITHOUT_CLASSIFICATION	0.014289433233843928	IMPLEMENTATION	1.8805982123951492E-4	DESIGN	1.3726017008419014E-4	DEFECT	2.483770304477301E-6	DOCUMENTATION	4.2886425800575737E-7	TEST
// Note : success = false, because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.9984428127479219	WITHOUT_CLASSIFICATION	0.0015071182952001343	IMPLEMENTATION	4.7498942476814845E-5	DESIGN	1.8103042358568016E-6	DEFECT	6.659478048639974E-7	DOCUMENTATION	9.376236031348446E-8	TEST
// we already have a callback registered; either a local // (org.hibernate.Transaction) transaction has accepted // callback responsibilities, or we have previously // registered a transaction synch.	WITHOUT_CLASSIFICATION	0.9999999081727753	WITHOUT_CLASSIFICATION	5.375111863301818E-8	IMPLEMENTATION	2.534852971772942E-8	DESIGN	1.21581493906268E-8	DEFECT	5.395744593979505E-10	DOCUMENTATION	2.985239937437453E-11	TEST
// the configured transaction-factory says it only supports // local callback mode, so no sense attempting to register a // JTA Synchronization	WITHOUT_CLASSIFICATION	0.9999782220927845	WITHOUT_CLASSIFICATION	2.1737569853676225E-5	DESIGN	3.0022051502240585E-8	IMPLEMENTATION	5.81397997233149E-9	DOCUMENTATION	4.193336105891049E-9	DEFECT	3.0799402135728076E-10	TEST
// transactions marked for rollback-only cause some TM impls to throw exceptions	WITHOUT_CLASSIFICATION	0.9999979441852309	WITHOUT_CLASSIFICATION	1.185531772769384E-6	IMPLEMENTATION	8.470854558270388E-7	DEFECT	1.6166318644153094E-8	DESIGN	4.673699598012255E-9	DOCUMENTATION	2.3575222742927927E-9	TEST
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999992385713953	WITHOUT_CLASSIFICATION	4.0321475118349497E-7	DEFECT	2.149326985399295E-7	DESIGN	8.898587619778305E-8	IMPLEMENTATION	4.2879679645410615E-8	DOCUMENTATION	1.1415598999273066E-8	TEST
//postInitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.999999835458091	WITHOUT_CLASSIFICATION	1.4214136780509072E-7	IMPLEMENTATION	1.5629988281186015E-8	DEFECT	3.938332704391085E-9	DESIGN	2.066873139455424E-9	DOCUMENTATION	7.653471027884292E-10	TEST
// cannot handle single quotes	WITHOUT_CLASSIFICATION	0.9999911877296593	WITHOUT_CLASSIFICATION	4.465158686233951E-6	IMPLEMENTATION	3.6639431287687916E-6	DEFECT	3.23303438597808E-7	TEST	3.113715182941973E-7	DESIGN	4.849356880367372E-8	DOCUMENTATION
// todo : for 4.0 //	WITHOUT_CLASSIFICATION	0.9992246539530687	WITHOUT_CLASSIFICATION	6.914281870814264E-4	DESIGN	4.0347173145886556E-5	DEFECT	3.2432124618346076E-5	IMPLEMENTATION	8.809899665649045E-6	TEST	2.3286624201499162E-6	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999685760469973	WITHOUT_CLASSIFICATION	3.1099230006632137E-5	DESIGN	1.617572880726908E-7	DEFECT	1.4459916418983927E-7	TEST	1.1626154293294077E-8	IMPLEMENTATION	6.740389332453828E-9	DOCUMENTATION
// don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.9999501985835351	WITHOUT_CLASSIFICATION	4.122683737198106E-5	DEFECT	7.015223528759892E-6	DESIGN	9.88473194004714E-7	IMPLEMENTATION	3.6971401052031914E-7	DOCUMENTATION	2.011683596301645E-7	TEST
// don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.9998412661264514	WITHOUT_CLASSIFICATION	1.3964201458365984E-4	DEFECT	1.5507914973165832E-5	DESIGN	2.2061428549227456E-6	IMPLEMENTATION	1.0441092099647154E-6	DOCUMENTATION	3.3369192684327653E-7	TEST
// position cursor to the last row	WITHOUT_CLASSIFICATION	0.9999997930171861	WITHOUT_CLASSIFICATION	9.625466988981682E-8	IMPLEMENTATION	6.271711883647018E-8	DESIGN	2.9893684177967235E-8	DEFECT	1.7223501140585872E-8	DOCUMENTATION	8.93839863717699E-10	TEST
// sequentially read the result set in reverse until we recognize // a change in the key value.  At that point, we are pointed at // the last physical sequential row for the logical row in which // we are interested in processing	WITHOUT_CLASSIFICATION	0.999999970938324	WITHOUT_CLASSIFICATION	2.6923425727089428E-8	DEFECT	1.3699812828295634E-9	DESIGN	5.308082823261255E-10	DOCUMENTATION	1.5168217454947637E-10	TEST	8.5778522753454E-11	IMPLEMENTATION
// Read backwards until we read past the first physical sequential // row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.9999935383197498	WITHOUT_CLASSIFICATION	6.347513986015227E-6	DEFECT	7.296962617732061E-8	TEST	4.0417714644834284E-8	IMPLEMENTATION	7.035925820295054E-10	DOCUMENTATION	7.533076433220717E-11	DESIGN
// Finally, read ahead one row to position result set cursor // at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.9999610014893819	WITHOUT_CLASSIFICATION	2.227235898201499E-5	DEFECT	1.2598704777346994E-5	DESIGN	3.454834347934136E-6	IMPLEMENTATION	3.4844246716306217E-7	DOCUMENTATION	3.24170043517219E-7	TEST
// now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.9999789312740329	WITHOUT_CLASSIFICATION	2.103669812740064E-5	DESIGN	1.5089580453227762E-8	TEST	1.1169424383633894E-8	DEFECT	4.67851187195274E-9	IMPLEMENTATION	1.0903229904428166E-9	DOCUMENTATION
// force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.9999977247841854	WITHOUT_CLASSIFICATION	1.8449525323553967E-6	DESIGN	4.0884953211660913E-7	IMPLEMENTATION	1.0024137133295145E-8	DOCUMENTATION	5.767420499527927E-9	DEFECT	5.622192640851565E-9	TEST
// this is equivalent to the old behavior...	WITHOUT_CLASSIFICATION	0.9996965738943157	WITHOUT_CLASSIFICATION	3.004766561747938E-4	DESIGN	2.700904553798391E-6	DEFECT	1.0644051403311662E-7	DOCUMENTATION	1.0065587626445448E-7	TEST	4.144856542514844E-8	IMPLEMENTATION
//if null, owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.9999698911342464	WITHOUT_CLASSIFICATION	2.2596765099063516E-5	DEFECT	4.405162041608711E-6	DESIGN	3.0295018596809086E-6	IMPLEMENTATION	4.486837435231328E-8	TEST	3.2568378891977103E-8	DOCUMENTATION
//final String queryString, 	WITHOUT_CLASSIFICATION	0.9999065188107937	WITHOUT_CLASSIFICATION	5.61121745584531E-5	DESIGN	3.43065760645231E-5	DEFECT	1.6570978451062407E-6	DOCUMENTATION	7.834497064222342E-7	IMPLEMENTATION	6.218910318030743E-7	TEST
// if it was a reference to self, don't need to nullify // unless we are using native id generation, in which // case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.9999999999536306	WITHOUT_CLASSIFICATION	2.4764419751497834E-11	DEFECT	9.821438391960437E-12	DOCUMENTATION	6.167620500228592E-12	TEST	5.613807013321713E-12	DESIGN	2.0000229766847272E-15	IMPLEMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9977246649262247	WITHOUT_CLASSIFICATION	0.002193858745125236	DESIGN	4.592222543925139E-5	IMPLEMENTATION	1.5646332120551237E-5	TEST	1.0459303155867145E-5	DEFECT	9.448467934359043E-6	DOCUMENTATION
// in an effort to avoid concurrent-modification-exceptions (from // potential recursive calls back through here as a result of the // eventual call to PersistentCollection#endRead), we scan the // internal loadingCollections map for matches and store those matches // in a temp collection.  the temp collection is then used to "drive" // the #endRead processing.	WITHOUT_CLASSIFICATION	0.9999999377703993	WITHOUT_CLASSIFICATION	5.703832628359862E-8	DESIGN	5.185934431197039E-9	DEFECT	3.481740955902258E-12	TEST	1.8473074898342272E-12	DOCUMENTATION	1.0869514200414637E-14	IMPLEMENTATION
//we can reuse it for each row	WITHOUT_CLASSIFICATION	0.9999975710514362	WITHOUT_CLASSIFICATION	2.1488760900066265E-6	DESIGN	1.8518639824402348E-7	DEFECT	5.0928430566764174E-8	IMPLEMENTATION	3.352888005490974E-8	DOCUMENTATION	1.0428764918519626E-8	TEST
//can't reuse in this case	WITHOUT_CLASSIFICATION	0.9999544865464227	WITHOUT_CLASSIFICATION	4.082879246577005E-5	DESIGN	4.093180732014516E-6	DEFECT	4.7086808493278875E-7	DOCUMENTATION	8.681280756049484E-8	TEST	3.37994868797903E-8	IMPLEMENTATION
// First we need to suspend any current JTA transaction and obtain // a JDBC connection	WITHOUT_CLASSIFICATION	0.9917020763349451	WITHOUT_CLASSIFICATION	0.006907126385751907	IMPLEMENTATION	7.492737731816232E-4	DESIGN	6.367842902554221E-4	DOCUMENTATION	4.048229600771975E-6	DEFECT	6.909862650963546E-7	TEST
//getResultList(results);	WITHOUT_CLASSIFICATION	0.9999863974450233	WITHOUT_CLASSIFICATION	1.1141260035605425E-5	DEFECT	1.4584694760123081E-6	DESIGN	7.970541509649787E-7	TEST	1.5026557488478388E-7	IMPLEMENTATION	5.55057394065458E-8	DOCUMENTATION
//if we only returned one entity, query by key is more efficient	WITHOUT_CLASSIFICATION	0.9995556627694084	WITHOUT_CLASSIFICATION	4.211325634775045E-4	DESIGN	2.068994343377618E-5	DEFECT	1.4641028106447804E-6	IMPLEMENTATION	7.451341403038412E-7	TEST	3.0548672946229254E-7	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999997456011729	WITHOUT_CLASSIFICATION	2.1099715418988993E-7	IMPLEMENTATION	3.999416039810956E-8	DEFECT	3.1728535856125467E-9	DESIGN	1.8347026822390199E-10	DOCUMENTATION	5.1188724200222725E-11	TEST
// handle empty collection	WITHOUT_CLASSIFICATION	0.9985901897449047	WITHOUT_CLASSIFICATION	0.0010550055084988187	DESIGN	3.350193461537205E-4	IMPLEMENTATION	1.8534758697294493E-5	DEFECT	8.311668189794953E-7	DOCUMENTATION	4.1947492648033127E-7	TEST
// else no collection element, but also no owner	WITHOUT_CLASSIFICATION	0.9999996399800212	WITHOUT_CLASSIFICATION	3.029578478654442E-7	IMPLEMENTATION	3.956071044948406E-8	DESIGN	1.1033868348503235E-8	DEFECT	5.643133415364776E-9	DOCUMENTATION	8.2441875639344E-10	TEST
//handle empty collections	WITHOUT_CLASSIFICATION	0.9999445923192521	WITHOUT_CLASSIFICATION	4.165104805454337E-5	IMPLEMENTATION	1.346013170081908E-5	DESIGN	1.5825684152230295E-7	DEFECT	7.689433965076886E-8	DOCUMENTATION	6.134981128837773E-8	TEST
// else this is not a collection initializer (and empty collections will // be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.9999970661558731	WITHOUT_CLASSIFICATION	2.546959501080568E-6	DESIGN	3.7229028097640735E-7	DEFECT	1.4139287763908858E-8	IMPLEMENTATION	4.253789796798491E-10	TEST	2.9677857318641654E-11	DOCUMENTATION
// validate() instances of Validatable	WITHOUT_CLASSIFICATION	0.9999899730290724	WITHOUT_CLASSIFICATION	6.599778311377883E-6	DEFECT	3.10231488888151E-6	DESIGN	2.5935512673285763E-7	IMPLEMENTATION	4.2005076093619536E-8	DOCUMENTATION	2.3517524477338088E-8	TEST
// if we know there is exactly 1 row, we can skip. // it would be great if we could _always_ skip this; // it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.5304031115117015	WITHOUT_CLASSIFICATION	0.38623368874019204	DESIGN	0.0832226035505348	DEFECT	9.800345088881914E-5	IMPLEMENTATION	3.817607637681512E-5	TEST	4.416670305858396E-6	DOCUMENTATION
// remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.9999927954690357	WITHOUT_CLASSIFICATION	7.18300526921431E-6	DESIGN	1.845155656938918E-8	IMPLEMENTATION	2.4985814703603116E-9	DEFECT	3.192931024187112E-10	DOCUMENTATION	2.562639707067065E-10	TEST
//null version means the object is in the process of being loaded somewhere else in the ResultSet	WITHOUT_CLASSIFICATION	0.9999625574392338	WITHOUT_CLASSIFICATION	2.166184467281202E-5	DESIGN	1.572009081845838E-5	DEFECT	4.1296552933782434E-8	DOCUMENTATION	1.598654962563303E-8	IMPLEMENTATION	3.342172540446305E-9	TEST
//problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.9979185327224616	WITHOUT_CLASSIFICATION	0.0013995166465310407	DEFECT	6.540728787656651E-4	DESIGN	1.8385467180507043E-5	DOCUMENTATION	7.263743588299973E-6	IMPLEMENTATION	2.228541472865557E-6	TEST
//use the id passed in	WITHOUT_CLASSIFICATION	0.9999994338694926	WITHOUT_CLASSIFICATION	3.5139297930677996E-7	IMPLEMENTATION	8.380819469851833E-8	DESIGN	6.800176987534403E-8	DOCUMENTATION	4.590003589215588E-8	TEST	1.7027527704387408E-8	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.999998515002803	WITHOUT_CLASSIFICATION	5.172912351940606E-7	DEFECT	4.1523534256180984E-7	DESIGN	3.2386952248140304E-7	DOCUMENTATION	1.2398199171464442E-7	IMPLEMENTATION	1.0461910486894515E-7	TEST
// prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.9999996150804161	WITHOUT_CLASSIFICATION	2.3378518588649336E-7	IMPLEMENTATION	1.2425737809972743E-7	DEFECT	1.564955332223162E-8	DESIGN	9.992810145064282E-9	DOCUMENTATION	1.2346563418778594E-9	TEST
//no point doing this if NONE was requested	WITHOUT_CLASSIFICATION	0.9998499777032785	WITHOUT_CLASSIFICATION	1.262206270526561E-4	TEST	2.1738585939274128E-5	DESIGN	1.1613316312363002E-6	DEFECT	5.007929988430098E-7	IMPLEMENTATION	4.0095909933141056E-7	DOCUMENTATION
//If the object is already loaded, return the loaded one	WITHOUT_CLASSIFICATION	0.9999832821347894	WITHOUT_CLASSIFICATION	7.890745654100387E-6	IMPLEMENTATION	7.724110291786948E-6	DEFECT	1.0362543341973293E-6	DESIGN	4.611465919069169E-8	DOCUMENTATION	2.064027123260446E-8	TEST
//its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.9999520603610166	WITHOUT_CLASSIFICATION	2.0154295575164002E-5	DEFECT	1.7836636442229762E-5	DESIGN	4.283821388111195E-6	TEST	3.2102066540342006E-6	IMPLEMENTATION	2.4546789238600606E-6	DOCUMENTATION
// cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.9998559056504202	WITHOUT_CLASSIFICATION	1.3039392974989884E-4	IMPLEMENTATION	1.2738029544891599E-5	DESIGN	5.876617070329419E-7	DOCUMENTATION	2.8838238226505684E-7	DEFECT	8.634619579544657E-8	TEST
//the load() which takes an entity does not pass an entityName	WITHOUT_CLASSIFICATION	0.9999506909250311	WITHOUT_CLASSIFICATION	3.2051574091098385E-5	DEFECT	5.479374327601347E-6	TEST	5.275380301567099E-6	DESIGN	4.956637016100464E-6	IMPLEMENTATION	1.546109232714036E-6	DOCUMENTATION
//we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.9999958944541116	WITHOUT_CLASSIFICATION	3.1162169748094487E-6	IMPLEMENTATION	6.352525918585759E-7	DEFECT	3.0329527590991226E-7	DOCUMENTATION	3.6121718657963004E-8	DESIGN	1.4659327165216565E-8	TEST
// look for a proxy	WITHOUT_CLASSIFICATION	0.9999950686850195	WITHOUT_CLASSIFICATION	2.1441001591756016E-6	DESIGN	1.4569992407511996E-6	DEFECT	1.2777228593561918E-6	IMPLEMENTATION	3.5807588331113934E-8	DOCUMENTATION	1.6685132992721842E-8	TEST
//we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.990749690894343	WITHOUT_CLASSIFICATION	0.008773271831094848	IMPLEMENTATION	2.474260598328279E-4	TEST	1.9198512906507412E-4	DESIGN	3.6322587352217775E-5	DOCUMENTATION	1.3034983120455658E-6	DEFECT
//its the given optional object	WITHOUT_CLASSIFICATION	0.9999758854370216	WITHOUT_CLASSIFICATION	9.36780585362828E-6	IMPLEMENTATION	5.8848909569270166E-6	DEFECT	5.659191505356138E-6	DOCUMENTATION	3.0860979286762843E-6	DESIGN	1.1657673372376804E-7	TEST
// instantiate a new instance	WITHOUT_CLASSIFICATION	0.9999890872072608	WITHOUT_CLASSIFICATION	1.0842831406790792E-5	DESIGN	3.545805527624795E-8	DEFECT	2.977558842050942E-8	DOCUMENTATION	4.050600232399249E-9	TEST	6.770885322008398E-10	IMPLEMENTATION
//need to hydrate it.	WITHOUT_CLASSIFICATION	0.9964284286919969	WITHOUT_CLASSIFICATION	0.00325392913549427	DESIGN	2.4260548205313947E-4	IMPLEMENTATION	4.4797820740135886E-5	TEST	2.9014139001593957E-5	DOCUMENTATION	1.224730713920817E-6	DEFECT
// return a newly loaded object	WITHOUT_CLASSIFICATION	0.9999972847827803	WITHOUT_CLASSIFICATION	2.2475863709974293E-6	DESIGN	4.639876773460245E-7	DEFECT	2.9022583576160543E-9	DOCUMENTATION	5.08826618075057E-10	TEST	2.3208634896823989E-10	IMPLEMENTATION
//will be ignored, using the existing Entry instead	WITHOUT_CLASSIFICATION	0.9999995142623185	WITHOUT_CLASSIFICATION	2.231861820315009E-7	DESIGN	1.930224348313646E-7	IMPLEMENTATION	5.588276482860925E-8	DEFECT	9.006565089789534E-9	DOCUMENTATION	4.639734832538447E-9	TEST
// key is an entity involved with the operation performed by the listener; // value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.9999999932790489	WITHOUT_CLASSIFICATION	5.548135116850075E-9	DESIGN	9.053896104756972E-10	DEFECT	1.416349161040951E-10	TEST	1.221174293386363E-10	IMPLEMENTATION	3.674006946771269E-12	DOCUMENTATION
//materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.9999180058946259	WITHOUT_CLASSIFICATION	6.666719114020255E-5	DESIGN	7.370447113388332E-6	IMPLEMENTATION	5.193489435993281E-6	DOCUMENTATION	2.390024195218909E-6	TEST	3.729534893797196E-7	DEFECT
// Get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.9999994200193946	WITHOUT_CLASSIFICATION	5.664479782364972E-7	DESIGN	5.404752738225046E-9	IMPLEMENTATION	5.402410787402335E-9	TEST	2.2632811991019007E-9	DOCUMENTATION	4.6218252565804335E-10	DEFECT
// ok in normal Hibernate usage to delete a detached entity; JPA however // forbids it, thus this is a hook for HEM to affect this behavior	WITHOUT_CLASSIFICATION	0.9997471415755063	WITHOUT_CLASSIFICATION	1.4845143514282305E-4	DEFECT	1.0406017661184755E-4	DESIGN	2.992842908598609E-7	IMPLEMENTATION	4.3882685325196475E-8	DOCUMENTATION	3.6457628731104504E-9	TEST
// the entry will be removed after the flush, and will no longer // override the stale snapshot // This is now handled by removeEntity() in EntityDeleteAction //persistenceContext.removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9991073712525625	WITHOUT_CLASSIFICATION	8.599994839792705E-4	DESIGN	3.209021530862989E-5	DEFECT	5.373971055578615E-7	IMPLEMENTATION	1.0508183126860978E-9	DOCUMENTATION	6.002256623937678E-10	TEST
//addInitializedCollection(collection, persister, id);	WITHOUT_CLASSIFICATION	0.9999954819468001	WITHOUT_CLASSIFICATION	3.0339648381831004E-6	IMPLEMENTATION	1.0205193125679534E-6	DESIGN	2.815182690094995E-7	DEFECT	9.124257464061817E-8	DOCUMENTATION	9.080820542688912E-8	TEST
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999565967824798	WITHOUT_CLASSIFICATION	1.957485059327897E-5	IMPLEMENTATION	1.3221674631034616E-5	DEFECT	6.352398303615392E-6	DESIGN	2.942473402563728E-6	DOCUMENTATION	1.3118205896865665E-6	TEST
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999565967824798	WITHOUT_CLASSIFICATION	1.957485059327897E-5	IMPLEMENTATION	1.3221674631034616E-5	DEFECT	6.352398303615392E-6	DESIGN	2.942473402563728E-6	DOCUMENTATION	1.3118205896865665E-6	TEST
/*|| oj.getJoinable().consumesCollectionAlias() */	WITHOUT_CLASSIFICATION	0.9999983296995003	WITHOUT_CLASSIFICATION	5.727805447943251E-7	DESIGN	5.281176059478884E-7	DEFECT	2.919494007206232E-7	DOCUMENTATION	1.6143266480339528E-7	IMPLEMENTATION	1.1602028330978528E-7	TEST
// here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.9996816560425947	WITHOUT_CLASSIFICATION	3.181947997922572E-4	DESIGN	7.712095477087415E-8	TEST	3.1707217705315276E-8	IMPLEMENTATION	2.6477024752871283E-8	DOCUMENTATION	1.3852415908004386E-8	DEFECT
// Code to handle subclasses of topClass	WITHOUT_CLASSIFICATION	0.9997205506806611	WITHOUT_CLASSIFICATION	2.788818227110847E-4	DESIGN	3.1053948534199105E-7	DEFECT	1.1501796379185443E-7	IMPLEMENTATION	8.96029747524175E-8	TEST	5.2336203987090574E-8	DOCUMENTATION
//woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.9992594200898626	WITHOUT_CLASSIFICATION	7.39892095471722E-4	DESIGN	2.964469561932837E-7	DEFECT	2.8737093443003176E-7	DOCUMENTATION	7.517567152401455E-8	TEST	2.882110377336194E-8	IMPLEMENTATION
// we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.9999922588256295	WITHOUT_CLASSIFICATION	6.297063508321466E-6	DEFECT	9.541648068649457E-7	DESIGN	4.3119741917761244E-7	IMPLEMENTATION	4.533362180588182E-8	DOCUMENTATION	1.3415014433652815E-8	TEST
// we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.9997470510637666	WITHOUT_CLASSIFICATION	1.6678693515626193E-4	DESIGN	8.299396059612045E-5	IMPLEMENTATION	1.618988836183884E-6	TEST	1.2404241895509392E-6	DEFECT	3.086274554134082E-7	DOCUMENTATION
// synchronized to avoid multi-thread access issues; defined as method synch to avoid // potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.9999994806575182	WITHOUT_CLASSIFICATION	5.127814669516778E-7	DESIGN	5.213530963136904E-9	DEFECT	1.2055901045054634E-9	DOCUMENTATION	1.1577723012885558E-10	TEST	2.6116695821954593E-11	IMPLEMENTATION
// Allows various loaders (ok mainly the QueryLoader :) to check // whether scrolling of their result set should be allowed. // // By default it is allowed.	WITHOUT_CLASSIFICATION	0.9999896151982924	WITHOUT_CLASSIFICATION	6.066763725610508E-6	DEFECT	4.278034228817228E-6	IMPLEMENTATION	2.5646208498721684E-8	DESIGN	1.0121624205712689E-8	TEST	4.23592040344726E-9	DOCUMENTATION
//before adding to collection!	WITHOUT_CLASSIFICATION	0.9999204519531406	WITHOUT_CLASSIFICATION	5.679963371419166E-5	DEFECT	1.336762017796913E-5	IMPLEMENTATION	7.680550296292224E-6	DESIGN	1.0520135522859597E-6	DOCUMENTATION	6.482291187254992E-7	TEST
// if the current depth is 0, the root thing being loaded is the // many-to-many collection itself.  Here, it is alright to use // an inner join...	WITHOUT_CLASSIFICATION	0.9999998751776453	WITHOUT_CLASSIFICATION	1.0169097566547123E-7	DESIGN	1.8242987719722134E-8	DEFECT	3.372155128926036E-9	TEST	1.2025948555952726E-9	IMPLEMENTATION	3.1364132522804085E-10	DOCUMENTATION
//operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.9999997101394722	WITHOUT_CLASSIFICATION	1.688508996180465E-7	IMPLEMENTATION	5.337268788639649E-8	DESIGN	4.8515323668653376E-8	DEFECT	1.7060355094331468E-8	DOCUMENTATION	2.061261461794357E-9	TEST
// simple, because we can't have a one-to-one or a collection  // (or even a property-ref) in a composite-element:	WITHOUT_CLASSIFICATION	0.9999354938122201	WITHOUT_CLASSIFICATION	6.244772921154513E-5	DEFECT	1.523220354085462E-6	IMPLEMENTATION	4.769192632536516E-7	DESIGN	5.492167632158678E-8	DOCUMENTATION	3.397274623949357E-9	TEST
//a composite key	WITHOUT_CLASSIFICATION	0.9999953148449523	WITHOUT_CLASSIFICATION	3.6428154792737077E-6	DESIGN	4.464529571672025E-7	DEFECT	3.8728142828658063E-7	IMPLEMENTATION	1.4734262020840165E-7	DOCUMENTATION	6.126256274080482E-8	TEST
// if no batch, use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.9999980436259752	WITHOUT_CLASSIFICATION	1.9280024903632526E-6	DESIGN	9.752446663693402E-9	DOCUMENTATION	8.719582228888979E-9	IMPLEMENTATION	7.925981124640875E-9	DEFECT	1.973524442062713E-9	TEST
//it must be a collection fetch	WITHOUT_CLASSIFICATION	0.9997742135313922	WITHOUT_CLASSIFICATION	2.2351666915161679E-4	DESIGN	9.536103923129175E-7	IMPLEMENTATION	9.068862293597422E-7	DEFECT	3.1045296567990026E-7	TEST	9.884986867853166E-8	DOCUMENTATION
// needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.6569689006332371	DESIGN	0.2451501937671205	WITHOUT_CLASSIFICATION	0.0949237219795139	IMPLEMENTATION	0.0017304057569211297	DEFECT	9.94489767552784E-4	DOCUMENTATION	2.322880956546107E-4	TEST
/*&& etype.isReferenceToPrimaryKey()*/	WITHOUT_CLASSIFICATION	0.9999938989077775	WITHOUT_CLASSIFICATION	2.740196662457663E-6	DESIGN	2.084575793128019E-6	IMPLEMENTATION	8.217374549800397E-7	DEFECT	4.191445797333717E-7	DOCUMENTATION	3.543773221899901E-8	TEST
// it might still need to apply a collection ordering based on a // many-to-many defined order-by...	WITHOUT_CLASSIFICATION	0.9818951263906935	WITHOUT_CLASSIFICATION	0.013020015048599839	IMPLEMENTATION	0.00412456954361497	DESIGN	8.995959866608442E-4	DEFECT	4.72525583405142E-5	TEST	1.3440472090197543E-5	DOCUMENTATION
// if a composite key, use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching //TODO: unnecessary for databases with ANSI-style joins	WITHOUT_CLASSIFICATION	0.9443834982984018	WITHOUT_CLASSIFICATION	0.05339189781464457	IMPLEMENTATION	0.0022103051621858755	DESIGN	9.286805413082638E-6	DEFECT	4.179459495663695E-6	TEST	8.324598590532927E-7	DOCUMENTATION
// belong to other persister // belong to other persister	WITHOUT_CLASSIFICATION	0.9997472879875577	WITHOUT_CLASSIFICATION	2.5111570335752516E-4	DESIGN	1.0264461612029873E-6	IMPLEMENTATION	3.538932699894202E-7	TEST	1.981493989260808E-7	DEFECT	1.782025466224931E-8	DOCUMENTATION
// we found it	WITHOUT_CLASSIFICATION	0.9999785791131904	WITHOUT_CLASSIFICATION	1.6553270219427786E-5	DEFECT	3.7150909125991766E-6	DESIGN	5.690552842891547E-7	IMPLEMENTATION	4.444843871109177E-7	DOCUMENTATION	1.3898600627773818E-7	TEST
//we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.9998964057785097	WITHOUT_CLASSIFICATION	1.018489261604275E-4	DESIGN	1.146238709376007E-6	DOCUMENTATION	3.8761781518539665E-7	IMPLEMENTATION	1.461725034361342E-7	DEFECT	6.526630196119085E-8	TEST
//disable a join back to this same association	WITHOUT_CLASSIFICATION	0.999118979052446	WITHOUT_CLASSIFICATION	8.174552024251026E-4	DESIGN	5.035867323267594E-5	DOCUMENTATION	6.916506291365313E-6	TEST	4.533811505737127E-6	IMPLEMENTATION	1.7567540990891156E-6	DEFECT
//NOTE: unlike all other Loaders, this one is NOT //      multithreaded, or cacheable!!	WITHOUT_CLASSIFICATION	0.9851178856283506	WITHOUT_CLASSIFICATION	0.0148384832587886	DESIGN	3.714423434024007E-5	IMPLEMENTATION	5.320638761244595E-6	TEST	9.713579534881684E-7	DEFECT	1.9488180583237858E-7	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999999709272063	WITHOUT_CLASSIFICATION	2.144574619157513E-8	DESIGN	6.10343743696364E-9	DOCUMENTATION	9.69879900046977E-10	DEFECT	4.5347438800135793E-10	IMPLEMENTATION	1.0025569367596526E-10	TEST
//root entity comes *last*	WITHOUT_CLASSIFICATION	0.9998244348462844	WITHOUT_CLASSIFICATION	1.746426913581809E-4	DESIGN	4.6696925318864567E-7	DEFECT	1.7315853064231775E-7	TEST	1.531711658991773E-7	IMPLEMENTATION	1.2916340773834986E-7	DOCUMENTATION
//deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.9999837241750174	WITHOUT_CLASSIFICATION	9.283112430414409E-6	DEFECT	5.300516032473841E-6	DESIGN	1.478866965017017E-6	IMPLEMENTATION	1.9118305720377206E-7	DOCUMENTATION	2.214649752155599E-8	TEST
//alias may be null //EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999812409497559	WITHOUT_CLASSIFICATION	8.152168441631102E-6	DEFECT	6.409825524628994E-6	DESIGN	3.950961220858687E-6	IMPLEMENTATION	1.8778676280680383E-7	DOCUMENTATION	5.830829415187132E-8	TEST
// if it is a compound path	WITHOUT_CLASSIFICATION	0.9999983564673212	WITHOUT_CLASSIFICATION	1.5443819779037248E-6	DESIGN	4.1620414542799185E-8	IMPLEMENTATION	3.05782898909871E-8	DEFECT	2.494684554770106E-8	TEST	2.005150885234335E-9	DOCUMENTATION
// otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.9999493651069654	WITHOUT_CLASSIFICATION	4.032593430956537E-5	DESIGN	1.022165876500119E-5	IMPLEMENTATION	5.329285640917915E-8	TEST	2.3874573535538768E-8	DOCUMENTATION	1.0132530031404922E-8	DEFECT
// if its the root criteria, we are done	WITHOUT_CLASSIFICATION	0.9999992179771934	WITHOUT_CLASSIFICATION	7.33343392920215E-7	DESIGN	3.1640862298977684E-8	TEST	1.0502832377332317E-8	DEFECT	3.85660040801159E-9	IMPLEMENTATION	2.679118644433726E-9	DOCUMENTATION
// otherwise, recurse	WITHOUT_CLASSIFICATION	0.9998156864886426	WITHOUT_CLASSIFICATION	1.80319856098608E-4	DESIGN	3.5914516864057624E-6	IMPLEMENTATION	1.7115804126253058E-7	DEFECT	1.433731832039418E-7	DOCUMENTATION	8.767234778399382E-8	TEST
//the criteria instance	WITHOUT_CLASSIFICATION	0.9999922910520335	WITHOUT_CLASSIFICATION	7.555788022559671E-6	DESIGN	5.7530613550086986E-8	DOCUMENTATION	4.766675032693833E-8	IMPLEMENTATION	3.153869792933342E-8	DEFECT	1.642388217695183E-8	TEST
// the entity name	WITHOUT_CLASSIFICATION	0.9999965138712587	WITHOUT_CLASSIFICATION	1.7066054099148878E-6	IMPLEMENTATION	1.428976056994085E-6	DESIGN	1.599088402875336E-7	DEFECT	1.3496002166365601E-7	DOCUMENTATION	5.5678412576067256E-8	TEST
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9997208279539608	WITHOUT_CLASSIFICATION	1.5268380475860524E-4	DESIGN	7.930626859446102E-5	DEFECT	3.595562874907706E-5	IMPLEMENTATION	6.2694461821509E-6	TEST	4.956897754826472E-6	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9997208279539608	WITHOUT_CLASSIFICATION	1.5268380475860524E-4	DESIGN	7.930626859446102E-5	DEFECT	3.595562874907706E-5	IMPLEMENTATION	6.2694461821509E-6	TEST	4.956897754826472E-6	DOCUMENTATION
//it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.9999956609099254	WITHOUT_CLASSIFICATION	2.8896498820683235E-6	DEFECT	1.0453812119264907E-6	DESIGN	3.599976180470445E-7	IMPLEMENTATION	3.735542134662511E-8	DOCUMENTATION	6.705941172781634E-9	TEST
//should never happen, i think	WITHOUT_CLASSIFICATION	0.999625344114052	WITHOUT_CLASSIFICATION	3.6991838593595513E-4	DESIGN	1.7690329950436873E-6	TEST	1.6248474341799388E-6	DEFECT	9.66318598177485E-7	DOCUMENTATION	3.773009847144021E-7	IMPLEMENTATION
// Detect discriminator values...	WITHOUT_CLASSIFICATION	0.9999888208562686	WITHOUT_CLASSIFICATION	8.851853945749864E-6	DESIGN	1.919746942006162E-6	DEFECT	1.5408905424519066E-7	DOCUMENTATION	1.4655243770624675E-7	TEST	1.0690135163947053E-7	IMPLEMENTATION
// Convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.9999406871081673	WITHOUT_CLASSIFICATION	4.969918385728046E-5	DESIGN	5.4495771906530285E-6	DEFECT	2.751314130090751E-6	IMPLEMENTATION	1.0694837343067788E-6	DOCUMENTATION	3.4333292033945586E-7	TEST
// and the qualifier is not the alias of this criteria //      -> check to see if we belong to some criteria other //          than the one that created us	WITHOUT_CLASSIFICATION	0.9999970265125121	WITHOUT_CLASSIFICATION	2.9704885997040165E-6	DESIGN	1.2714790739606562E-9	TEST	8.068536171807346E-10	DOCUMENTATION	7.660044619250486E-10	IMPLEMENTATION	1.5455101914059734E-10	DEFECT
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999500820888751	WITHOUT_CLASSIFICATION	3.699271078859653E-5	DEFECT	1.2327271098391617E-5	DESIGN	3.95770291062984E-7	TEST	1.3409598172980202E-7	DOCUMENTATION	6.806296513254336E-8	IMPLEMENTATION
// Otherwise, this is an ordinary value.	WITHOUT_CLASSIFICATION	0.9999961183596864	WITHOUT_CLASSIFICATION	3.2169758327628348E-6	DESIGN	6.372249891017605E-7	DEFECT	1.5218928390967048E-8	TEST	8.049886219371865E-9	DOCUMENTATION	4.17067716604613E-9	IMPLEMENTATION
// Currently *not* cachable if autodiscover types is in effect (e.g. "select * ...")	WITHOUT_CLASSIFICATION	0.9998490294238305	WITHOUT_CLASSIFICATION	1.5095230685214E-4	DESIGN	1.5676352249689686E-8	DEFECT	1.641016923484335E-9	TEST	5.435396088458707E-10	IMPLEMENTATION	4.084085319876147E-10	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// this is only needed (afaict) for ResultTransformer processing...	WITHOUT_CLASSIFICATION	0.9980924805234374	WITHOUT_CLASSIFICATION	0.0018986691157329794	DESIGN	5.634662385508189E-6	TEST	2.2814397657928296E-6	DEFECT	8.67867541486445E-7	DOCUMENTATION	6.639113690309706E-8	IMPLEMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999996107024453	WITHOUT_CLASSIFICATION	3.861654691111408E-7	DESIGN	1.9294749200314307E-9	TEST	8.202731868457891E-10	IMPLEMENTATION	2.7837749479428657E-10	DEFECT	1.0396008360497013E-10	DOCUMENTATION
// build an array with indices equal to the total number // of actual returns in the result Hibernate will return // for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.9999901346877732	WITHOUT_CLASSIFICATION	5.956700124405865E-6	DESIGN	2.198887792752031E-6	IMPLEMENTATION	1.7057796770383826E-6	DEFECT	2.0232421397240523E-9	TEST	1.921390523837286E-9	DOCUMENTATION
// replace {....} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.999966321528855	WITHOUT_CLASSIFICATION	2.7300769039777118E-5	DESIGN	5.263023866303372E-6	IMPLEMENTATION	7.150006074082906E-7	DEFECT	3.3033831854676095E-7	TEST	6.933931301312474E-8	DOCUMENTATION
// No additional open braces found in the string, append the // rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.999997143505437	WITHOUT_CLASSIFICATION	2.0243540749087784E-6	DEFECT	4.5142430835928365E-7	DESIGN	3.1283966079357815E-7	TEST	3.9086792455924395E-8	DOCUMENTATION	2.878972648604305E-8	IMPLEMENTATION
// apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.9996552811835152	WITHOUT_CLASSIFICATION	3.3512260673709647E-4	DESIGN	7.469737944136272E-6	IMPLEMENTATION	1.2636461760667035E-6	DEFECT	6.174579194416393E-7	DOCUMENTATION	2.4536770798350475E-7	TEST
// it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.9999997883823213	WITHOUT_CLASSIFICATION	1.841516192211896E-7	IMPLEMENTATION	1.2629260665480931E-8	DEFECT	8.671231451651695E-9	TEST	5.958693532652827E-9	DESIGN	2.06873940711508E-10	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9991348004051317	WITHOUT_CLASSIFICATION	3.9975266880947966E-4	IMPLEMENTATION	3.3682508748412266E-4	DESIGN	1.155243814031607E-4	DEFECT	1.0288882023714114E-5	DOCUMENTATION	2.808575147899662E-6	TEST
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9991348004051317	WITHOUT_CLASSIFICATION	3.9975266880947966E-4	IMPLEMENTATION	3.3682508748412266E-4	DESIGN	1.155243814031607E-4	DEFECT	1.0288882023714114E-5	DOCUMENTATION	2.808575147899662E-6	TEST
// The current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.9999875862926009	WITHOUT_CLASSIFICATION	1.190893615751999E-5	DEFECT	3.4978683165765126E-7	DESIGN	1.4710181707623862E-7	IMPLEMENTATION	7.595180820584447E-9	DOCUMENTATION	2.874119617529246E-10	TEST
// it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.9999978243426151	WITHOUT_CLASSIFICATION	1.9877994951762487E-6	DEFECT	1.5635421323964616E-7	DESIGN	1.343701490191503E-8	DOCUMENTATION	1.0469187406906301E-8	IMPLEMENTATION	7.597474184594579E-9	TEST
// Possibly handle :something parameters for the query ?	WITHOUT_CLASSIFICATION	0.9862424434323883	WITHOUT_CLASSIFICATION	0.012807028229883912	DESIGN	9.212618389383062E-4	IMPLEMENTATION	1.6809495615696867E-5	TEST	1.0432515108565939E-5	DEFECT	2.0244880651150225E-6	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999997880874448	WITHOUT_CLASSIFICATION	1.8417142193344154E-7	DESIGN	1.5318849885465262E-8	IMPLEMENTATION	1.1631112471163651E-8	DEFECT	4.41415168597984E-10	TEST	3.497558766987485E-10	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9982414523766154	WITHOUT_CLASSIFICATION	0.0016475936779793072	DESIGN	7.351568261524677E-5	IMPLEMENTATION	1.679939678418562E-5	DOCUMENTATION	1.6057984814387536E-5	DEFECT	4.580881191449248E-6	TEST
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9995796405720742	WITHOUT_CLASSIFICATION	2.2056338182894155E-4	IMPLEMENTATION	9.89549876808773E-5	DEFECT	8.053901970446797E-5	DESIGN	1.2496455518303245E-5	DOCUMENTATION	7.805583193382023E-6	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// Now, process the returns	WITHOUT_CLASSIFICATION	0.9999991654213699	WITHOUT_CLASSIFICATION	6.111588814838229E-7	DESIGN	1.61792344415472E-7	IMPLEMENTATION	4.7245020907880026E-8	DEFECT	1.1691954527238634E-8	DOCUMENTATION	2.6904287342155743E-9	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// already been processed...	WITHOUT_CLASSIFICATION	0.9999568718760775	WITHOUT_CLASSIFICATION	4.0148417216943484E-5	DESIGN	2.4343565074593636E-6	IMPLEMENTATION	4.615806875940798E-7	DOCUMENTATION	4.9614336083230574E-8	TEST	3.4155174479141656E-8	DEFECT
// already been processed...	WITHOUT_CLASSIFICATION	0.9999568718760775	WITHOUT_CLASSIFICATION	4.0148417216943484E-5	DESIGN	2.4343565074593636E-6	IMPLEMENTATION	4.615806875940798E-7	DOCUMENTATION	4.9614336083230574E-8	TEST	3.4155174479141656E-8	DEFECT
// Make sure the owner alias is known...	WITHOUT_CLASSIFICATION	0.9999824517050176	WITHOUT_CLASSIFICATION	9.209062568438734E-6	IMPLEMENTATION	6.929028662597204E-6	DESIGN	1.1877882927446163E-6	DEFECT	1.5132756412536312E-7	TEST	7.108789458700909E-8	DOCUMENTATION
// first, break down the returns into maps keyed by alias // so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.9996302345445863	WITHOUT_CLASSIFICATION	1.2886470325315668E-4	IMPLEMENTATION	1.2285760746322792E-4	DESIGN	1.1792800523098597E-4	DEFECT	1.0023529223620882E-7	TEST	1.490417395252908E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// If this return's alias has not been processed yet, do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.9999932388355679	WITHOUT_CLASSIFICATION	6.659734555634468E-6	DESIGN	4.1316639209634354E-8	DEFECT	3.6707754377971434E-8	IMPLEMENTATION	1.3933076471144234E-8	TEST	9.472406458697506E-9	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// for merging of versioned entities, we consider the version having // been changed only when: // 1) the two version values are different; //      *AND* // 2) The target actually represents database state! // // This second condition is a special case which allows // an entity to be merged during the same transaction // (though during a seperate operation) in which it was // originally persisted/saved	WITHOUT_CLASSIFICATION	0.9999959784424284	WITHOUT_CLASSIFICATION	3.947922085844486E-6	DESIGN	6.841370240847045E-8	DEFECT	4.572312864945715E-9	IMPLEMENTATION	6.21903728717588E-10	DOCUMENTATION	2.756683167387592E-11	TEST
// this is the second pass through on a merge op, so here we limit the // replacement to associations types (value types were already replaced // during the first pass)	WITHOUT_CLASSIFICATION	0.985255723507846	WITHOUT_CLASSIFICATION	0.014743783450550545	DESIGN	3.5048051546151015E-7	DOCUMENTATION	9.983968770298039E-8	TEST	3.210435491898101E-8	IMPLEMENTATION	1.0617045530535438E-8	DEFECT
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999452312610096	WITHOUT_CLASSIFICATION	3.444658577336344E-5	IMPLEMENTATION	1.0115593611645874E-5	DESIGN	6.306850627927958E-6	DEFECT	2.6129981122817593E-6	DOCUMENTATION	1.286710865285171E-6	TEST
// cascade-save to collections AFTER the collection owner was saved	WITHOUT_CLASSIFICATION	0.9997285397065857	WITHOUT_CLASSIFICATION	1.992314728764541E-4	IMPLEMENTATION	6.76605531895605E-5	DESIGN	4.319969486426959E-6	DEFECT	2.1162670803874738E-7	DOCUMENTATION	3.667115362189715E-8	TEST
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999935759758708	WITHOUT_CLASSIFICATION	4.7199891577657306E-6	DESIGN	1.5886209785305552E-6	IMPLEMENTATION	7.579712697378345E-8	DEFECT	2.2121628076126065E-8	DOCUMENTATION	1.7495237778044948E-8	TEST
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999996521857247	WITHOUT_CLASSIFICATION	1.799291311732427E-7	DESIGN	1.581387297387275E-7	IMPLEMENTATION	5.264592877599216E-9	DOCUMENTATION	3.8979572629566296E-9	TEST	5.838641513037191E-10	DEFECT
// currently only the Hibernate-supplied DbTimestampType is supported here	WITHOUT_CLASSIFICATION	0.999651452585891	WITHOUT_CLASSIFICATION	3.256400527987686E-4	DESIGN	1.8483451861466242E-5	IMPLEMENTATION	3.117778239760245E-6	TEST	7.245263758617648E-7	DEFECT	5.816048332060104E-7	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9961354287223222	WITHOUT_CLASSIFICATION	0.00325267588136364	DEFECT	5.303983743043513E-4	IMPLEMENTATION	8.13228736060254E-5	DESIGN	1.312600921250766E-7	DOCUMENTATION	4.288831169991791E-8	TEST
// make a new one	WITHOUT_CLASSIFICATION	0.9999800516138805	WITHOUT_CLASSIFICATION	1.3162583886176629E-5	DESIGN	4.472509474087482E-6	DEFECT	1.462772899275614E-6	IMPLEMENTATION	5.934962054094597E-7	TEST	2.5702365457175934E-7	DOCUMENTATION
// not so sure this is even valid subtree.  but if it was, it'd // represent two unrelated table references...	WITHOUT_CLASSIFICATION	0.99998683909931	WITHOUT_CLASSIFICATION	1.1305118887138833E-5	DESIGN	1.0531325635162395E-6	IMPLEMENTATION	5.055221830768877E-7	TEST	2.712262436079779E-7	DEFECT	2.5900812779173367E-8	DOCUMENTATION
// (NOT (GT a b) ) => (LE a b)	WITHOUT_CLASSIFICATION	0.9999983079407415	WITHOUT_CLASSIFICATION	1.0809130924738846E-6	DESIGN	4.872933926501312E-7	IMPLEMENTATION	4.641887684317575E-8	DEFECT	3.8928753208913E-8	DOCUMENTATION	3.850514342192821E-8	TEST
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.99969561741127	WITHOUT_CLASSIFICATION	3.015507279395692E-4	DESIGN	1.7369306737392483E-6	DEFECT	5.891909922212171E-7	DOCUMENTATION	4.0337589964832294E-7	TEST	1.0236322470121983E-7	IMPLEMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.999998131346888	WITHOUT_CLASSIFICATION	1.8426997519434255E-6	DESIGN	9.672513310573987E-9	DOCUMENTATION	9.245521159188293E-9	DEFECT	4.010119443016635E-9	TEST	3.025206166182318E-9	IMPLEMENTATION
//sqlResultTypes = selectClause.getSqlResultTypes();	WITHOUT_CLASSIFICATION	0.9999999729179205	WITHOUT_CLASSIFICATION	1.3235038142053179E-8	DESIGN	1.1782420740267863E-8	DEFECT	7.85528894263619E-10	TEST	7.111087924345576E-10	DOCUMENTATION	5.679829642052846E-10	IMPLEMENTATION
//by default	WITHOUT_CLASSIFICATION	0.9999833317390574	WITHOUT_CLASSIFICATION	6.989495139471339E-6	DESIGN	4.321729986698526E-6	DEFECT	4.265847433029255E-6	IMPLEMENTATION	8.137618241461486E-7	DOCUMENTATION	2.7742655939208205E-7	TEST
// This is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.9998205491023503	WITHOUT_CLASSIFICATION	1.6452296192846444E-4	DESIGN	1.3078800130928149E-5	DEFECT	1.4561156641989591E-6	IMPLEMENTATION	3.258025695920553E-7	TEST	6.721735646998299E-8	DOCUMENTATION
// -- Loader implementation --	WITHOUT_CLASSIFICATION	0.99997741343682	WITHOUT_CLASSIFICATION	2.0757206281923205E-5	IMPLEMENTATION	1.3495170106291958E-6	DESIGN	3.764256395323738E-7	DEFECT	7.293484009022328E-8	DOCUMENTATION	3.0479407797239836E-8	TEST
// -- Loader overrides --	WITHOUT_CLASSIFICATION	0.9999999146878314	WITHOUT_CLASSIFICATION	6.534882788512849E-8	DESIGN	6.804669633766658E-9	IMPLEMENTATION	5.451120799833573E-9	DEFECT	4.101732725307832E-9	DOCUMENTATION	3.605817551515515E-9	TEST
// (NOT (IS_NULL a b) ) => (IS_NOT_NULL a b)	WITHOUT_CLASSIFICATION	0.9999948661220845	WITHOUT_CLASSIFICATION	3.315960193832394E-6	DESIGN	1.6099743842534016E-6	IMPLEMENTATION	1.013812287821769E-7	DEFECT	7.117805184872842E-8	DOCUMENTATION	3.538405676815466E-8	TEST
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999791630898943	WITHOUT_CLASSIFICATION	1.1079106342738567E-5	DESIGN	4.403787506904899E-6	IMPLEMENTATION	2.8006962289110335E-6	TEST	2.4118822851923707E-6	DEFECT	1.4143774192475633E-7	DOCUMENTATION
// meant to handle dynamic instantiation queries...	WITHOUT_CLASSIFICATION	0.999000016492722	WITHOUT_CLASSIFICATION	9.625388501922145E-4	DESIGN	3.3108050681382074E-5	DEFECT	2.4804557686924036E-6	IMPLEMENTATION	1.067546862268123E-6	DOCUMENTATION	7.886037735499628E-7	TEST
// --- Query translator methods ---	WITHOUT_CLASSIFICATION	0.9999681521504276	WITHOUT_CLASSIFICATION	3.009572085787329E-5	DESIGN	1.4535559347578827E-6	IMPLEMENTATION	1.8911744051300187E-7	DEFECT	6.317927783843947E-8	TEST	4.627606147660622E-8	DOCUMENTATION
// -- Implementation private methods --	WITHOUT_CLASSIFICATION	0.9999037965764627	WITHOUT_CLASSIFICATION	7.132278355452423E-5	DESIGN	2.4657729139303698E-5	IMPLEMENTATION	1.3185750513542627E-7	DOCUMENTATION	6.641535735180121E-8	DEFECT	2.4637981124782984E-8	TEST
//deduplicate unique constraints sharing the same columns //this is needed by Hibernate Annotations since it creates automagically // unique constraints for the user	WITHOUT_CLASSIFICATION	0.9997990274145743	WITHOUT_CLASSIFICATION	1.6016684196260738E-4	IMPLEMENTATION	1.8417672056904397E-5	DESIGN	1.212846349108497E-5	DEFECT	1.011182091544788E-5	TEST	1.4778699945233232E-7	DOCUMENTATION
// Try to find out the name of the primary key to create it as identity if the IdentityGenerator is used	WITHOUT_CLASSIFICATION	0.998402071467358	WITHOUT_CLASSIFICATION	0.0015882514144140078	DESIGN	9.39920951421348E-6	IMPLEMENTATION	2.1067081770697662E-7	TEST	5.5213118085629635E-8	DOCUMENTATION	1.2024777991886146E-8	DEFECT
// to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.9991469312302602	WITHOUT_CLASSIFICATION	8.334963322958485E-4	DESIGN	1.818397125727833E-5	IMPLEMENTATION	1.3415225576583904E-6	DEFECT	3.604889520623588E-8	DOCUMENTATION	1.0894733717622188E-8	TEST
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.999998021257946	WITHOUT_CLASSIFICATION	1.475496360360487E-6	DESIGN	2.9752812935266284E-7	IMPLEMENTATION	1.9682760422541899E-7	DEFECT	4.9155362533482784E-9	DOCUMENTATION	3.97442389346725E-9	TEST
//used also for generation of FK names!	WITHOUT_CLASSIFICATION	0.9995679596643587	WITHOUT_CLASSIFICATION	2.196635105872275E-4	DESIGN	1.3212399680051078E-4	IMPLEMENTATION	5.6416351828525626E-5	DEFECT	1.4071342778924282E-5	TEST	9.765133646083497E-6	DOCUMENTATION
//usually useless	WITHOUT_CLASSIFICATION	0.9998638895537885	WITHOUT_CLASSIFICATION	1.3436326894575217E-4	DESIGN	1.222452263932533E-6	IMPLEMENTATION	2.1496693423838307E-7	DOCUMENTATION	1.7641669966733213E-7	DEFECT	1.3334136806065798E-7	TEST
// added this caching as I noticed that getType() is being called multiple times...	WITHOUT_CLASSIFICATION	0.9999168244758776	WITHOUT_CLASSIFICATION	8.232096697992778E-5	DESIGN	4.972566961133931E-7	IMPLEMENTATION	3.0958404196875597E-7	DEFECT	3.508799788097577E-8	TEST	1.2628406636522818E-8	DOCUMENTATION
//do not add unique constraint on DB not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.9999997205404796	WITHOUT_CLASSIFICATION	2.5906440160004764E-7	IMPLEMENTATION	1.1569523449801485E-8	DESIGN	4.38369107147962E-9	DOCUMENTATION	2.9394979745303142E-9	TEST	1.502406491266005E-9	DEFECT
//for backward compatibility, disable this:	WITHOUT_CLASSIFICATION	0.999999639667532	WITHOUT_CLASSIFICATION	2.744193784131345E-7	IMPLEMENTATION	3.6023497115207976E-8	DESIGN	3.027389436394078E-8	TEST	1.0065389306184374E-8	DEFECT	9.550308810103894E-9	DOCUMENTATION
//may be final //may be final //may be final	WITHOUT_CLASSIFICATION	0.9999372899163724	WITHOUT_CLASSIFICATION	3.90962003274029E-5	DESIGN	2.110658836211193E-5	DEFECT	1.414996353296738E-6	IMPLEMENTATION	7.986104105664442E-7	DOCUMENTATION	2.9368817425002313E-7	TEST
//may be final	WITHOUT_CLASSIFICATION	0.9999675509882456	WITHOUT_CLASSIFICATION	2.383347858864673E-5	DESIGN	6.70259766966575E-6	DEFECT	1.2166064613810163E-6	IMPLEMENTATION	5.701377839657871E-7	DOCUMENTATION	1.2619125064050188E-7	TEST
// may be final	WITHOUT_CLASSIFICATION	0.9999958643816795	WITHOUT_CLASSIFICATION	2.169808600708878E-6	DESIGN	1.7189816262279737E-6	DEFECT	1.8578586772272145E-7	IMPLEMENTATION	4.659724976906045E-8	DOCUMENTATION	1.4444976075992456E-8	TEST
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999690287761063	WITHOUT_CLASSIFICATION	3.057891069999781E-5	DESIGN	2.5143296192073177E-7	DEFECT	7.798830386740357E-8	DOCUMENTATION	5.5655418171904925E-8	TEST	7.236509756521733E-9	IMPLEMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9999999129624347	WITHOUT_CLASSIFICATION	4.5827045155644754E-8	DESIGN	1.602231926574294E-8	DOCUMENTATION	1.0971763750064481E-8	DEFECT	8.644737189835363E-9	TEST	5.571699875107136E-9	IMPLEMENTATION
// the root of the incoming property path matched one // of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.9999999944182689	WITHOUT_CLASSIFICATION	3.732857684155471E-9	DEFECT	1.1167419773414766E-9	DESIGN	3.33009409907075E-10	IMPLEMENTATION	3.1890445713958816E-10	TEST	8.021758237340573E-11	DOCUMENTATION
// ignore it...	WITHOUT_CLASSIFICATION	0.9999862803395247	WITHOUT_CLASSIFICATION	9.442724422657617E-6	DESIGN	2.0295892990105763E-6	IMPLEMENTATION	1.789276348632263E-6	DEFECT	2.852525208957657E-7	DOCUMENTATION	1.728178841429592E-7	TEST
//flat recursive algorithm	WITHOUT_CLASSIFICATION	0.9999908163725025	WITHOUT_CLASSIFICATION	3.7637375413538986E-6	DESIGN	3.33190312348509E-6	IMPLEMENTATION	1.5103227567002959E-6	DEFECT	5.094505179063117E-7	DOCUMENTATION	6.82135580126128E-8	TEST
//an identifier mapper => getKey will be included in the getNonDuplicatedPropertyIterator() //and checked later, so it needs to be excluded	WITHOUT_CLASSIFICATION	0.9999991616081702	WITHOUT_CLASSIFICATION	7.543161266073219E-7	DESIGN	7.635722270180761E-8	DEFECT	4.6484208521490994E-9	DOCUMENTATION	2.456781022872177E-9	IMPLEMENTATION	6.132787807964952E-10	TEST
//if the hibernate-mapping did not specify a schema/catalog, use the defaults //specified by properties - but note that if the schema/catalog were specified //in hibernate-mapping, or as params, they will already be initialized and //will override the values set here (they are in identifierGeneratorProperties)	WITHOUT_CLASSIFICATION	0.9999999760823338	WITHOUT_CLASSIFICATION	2.3518284657022742E-8	IMPLEMENTATION	2.2342625698531395E-10	DOCUMENTATION	1.1104598432244648E-10	DESIGN	4.995229669671633E-11	DEFECT	1.495696921454733E-11	TEST
//pass the entity-name, if not a collection-id	WITHOUT_CLASSIFICATION	0.9999752986202802	WITHOUT_CLASSIFICATION	1.4457232947759968E-5	IMPLEMENTATION	8.198716468819438E-6	DESIGN	1.8066706541124106E-6	DEFECT	2.083379789678174E-7	TEST	3.042167003467308E-8	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999690287761063	WITHOUT_CLASSIFICATION	3.057891069999781E-5	DESIGN	2.5143296192073177E-7	DEFECT	7.798830386740357E-8	DOCUMENTATION	5.5655418171904925E-8	TEST	7.236509756521733E-9	IMPLEMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9999999129624347	WITHOUT_CLASSIFICATION	4.5827045155644754E-8	DESIGN	1.602231926574294E-8	DOCUMENTATION	1.0971763750064481E-8	DEFECT	8.644737189835363E-9	TEST	5.571699875107136E-9	IMPLEMENTATION
//pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.9999951640061138	WITHOUT_CLASSIFICATION	3.0386688730866594E-6	IMPLEMENTATION	1.1399403579407655E-6	DEFECT	5.167789820774144E-7	DESIGN	1.310141075730933E-7	TEST	9.591565772890957E-9	DOCUMENTATION
//needed to satisfy KeyValue	WITHOUT_CLASSIFICATION	0.999767277475128	WITHOUT_CLASSIFICATION	1.9515765881147104E-4	DESIGN	1.7749923896353254E-5	IMPLEMENTATION	1.3682439132071774E-5	DOCUMENTATION	5.028156998516748E-6	DEFECT	1.104346033531585E-6	TEST
// empty means no scoping	WITHOUT_CLASSIFICATION	0.9999997582736487	WITHOUT_CLASSIFICATION	1.8483496640620236E-7	DESIGN	3.973670444239867E-8	DEFECT	9.012786296786895E-9	DOCUMENTATION	6.7092305047523195E-9	IMPLEMENTATION	1.4326636810006445E-9	TEST
// index should be last column listed	WITHOUT_CLASSIFICATION	0.9998789775830751	WITHOUT_CLASSIFICATION	6.831592081758037E-5	IMPLEMENTATION	4.041179730937878E-5	DEFECT	7.83800213988083E-6	DESIGN	4.24595985850939E-6	TEST	2.10736799443843E-7	DOCUMENTATION
//if it is a formula index, use the element columns in the PK	WITHOUT_CLASSIFICATION	0.9999963131419243	WITHOUT_CLASSIFICATION	1.9188457386903368E-6	IMPLEMENTATION	1.6309045920353618E-6	DESIGN	1.0708962642008143E-7	DEFECT	1.7047639747171163E-8	DOCUMENTATION	1.2970478850988571E-8	TEST
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns	WITHOUT_CLASSIFICATION	0.9998783962437148	WITHOUT_CLASSIFICATION	1.1677702716606914E-4	DEFECT	3.884333660628885E-6	DESIGN	4.6051541512940656E-7	TEST	4.0863405937921033E-7	IMPLEMENTATION	7.324598402101312E-8	DOCUMENTATION
/*ArrayList list = new ArrayList();	WITHOUT_CLASSIFICATION	0.9988206917915231	WITHOUT_CLASSIFICATION	0.0011606965130903806	IMPLEMENTATION	1.4596054735240705E-5	DEFECT	1.919750028709646E-6	TEST	1.1885894462549732E-6	DESIGN	9.073011762714257E-7	DOCUMENTATION
// }	WITHOUT_CLASSIFICATION	0.9999924862224975	WITHOUT_CLASSIFICATION	4.777269140442563E-6	DESIGN	1.3834639268403746E-6	DEFECT	7.470806274980279E-7	IMPLEMENTATION	3.412903426351173E-7	DOCUMENTATION	2.646734651391849E-7	TEST
// no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.9998889200959851	WITHOUT_CLASSIFICATION	5.303423837755097E-5	DEFECT	3.3712985736569686E-5	IMPLEMENTATION	2.289513887252565E-5	DESIGN	1.2921063916251485E-6	DOCUMENTATION	1.4543463676051182E-7	TEST
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.9638939548927274	WITHOUT_CLASSIFICATION	0.021672244653537943	DESIGN	0.014132873406800415	IMPLEMENTATION	2.508683344080903E-4	DEFECT	2.7470563966189774E-5	DOCUMENTATION	2.2588148559985593E-5	TEST
// the case of a foreign key to something other than the pk is handled in createPropertyRefConstraints	WITHOUT_CLASSIFICATION	0.9999999921894244	WITHOUT_CLASSIFICATION	6.320795758511883E-9	DESIGN	9.076297477070493E-10	TEST	4.864044280357347E-10	DEFECT	7.91892339738829E-11	DOCUMENTATION	1.6556482909016318E-11	IMPLEMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.9638939548927274	WITHOUT_CLASSIFICATION	0.021672244653537943	DESIGN	0.014132873406800415	IMPLEMENTATION	2.508683344080903E-4	DEFECT	2.7470563966189774E-5	DOCUMENTATION	2.2588148559985593E-5	TEST
// if the property mapping consists of all formulas,  // make it non-updateable	WITHOUT_CLASSIFICATION	0.9999984994656161	WITHOUT_CLASSIFICATION	1.3530972058177632E-6	DEFECT	8.247064800043558E-8	TEST	6.433644218678747E-8	IMPLEMENTATION	3.9895104730423764E-10	DESIGN	2.3113684116194844E-10	DOCUMENTATION
//columnUpdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.9999644526600047	WITHOUT_CLASSIFICATION	2.382698060465157E-5	IMPLEMENTATION	6.679293333772636E-6	DESIGN	3.5036546080957623E-6	DEFECT	9.623023533170576E-7	DOCUMENTATION	5.751090954756516E-7	TEST
// if the property mapping consists of all formulas,  // make it insertable	WITHOUT_CLASSIFICATION	0.9999965558161203	WITHOUT_CLASSIFICATION	2.822270840815186E-6	DEFECT	5.705848996292401E-7	TEST	4.598849747568697E-8	IMPLEMENTATION	4.294603008659599E-9	DESIGN	1.0450388101529968E-9	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999984684435104	WITHOUT_CLASSIFICATION	1.4127053162374624E-6	DESIGN	5.169579064582542E-8	IMPLEMENTATION	4.425473515325514E-8	TEST	1.5907843115949343E-8	DEFECT	6.9928045989204225E-9	DOCUMENTATION
// expected type is intrinsic here...	WITHOUT_CLASSIFICATION	0.9999877543732107	WITHOUT_CLASSIFICATION	1.1759361715032911E-5	DESIGN	2.598522948328642E-7	DEFECT	1.0287457419675932E-7	TEST	8.915500912696264E-8	IMPLEMENTATION	3.438319611891976E-8	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9995903518559589	WITHOUT_CLASSIFICATION	3.3502523996472184E-4	DESIGN	2.778315218255801E-5	DEFECT	1.8827237061008496E-5	IMPLEMENTATION	1.664445418874903E-5	DOCUMENTATION	1.1368060644110092E-5	TEST
//}	WITHOUT_CLASSIFICATION	0.9995903518559589	WITHOUT_CLASSIFICATION	3.3502523996472184E-4	DESIGN	2.778315218255801E-5	DEFECT	1.8827237061008496E-5	IMPLEMENTATION	1.664445418874903E-5	DOCUMENTATION	1.1368060644110092E-5	TEST
//return memberPersister.getPropertyType(propertyName);	WITHOUT_CLASSIFICATION	0.9999474884494642	WITHOUT_CLASSIFICATION	4.703219534055561E-5	DESIGN	4.966372875145372E-6	DEFECT	2.83183681899017E-7	TEST	1.416600513996491E-7	IMPLEMENTATION	8.813858692727066E-8	DOCUMENTATION
//return memberPersister.toColumns(alias, propertyName);	WITHOUT_CLASSIFICATION	0.9995348119563897	WITHOUT_CLASSIFICATION	4.634148293505489E-4	DESIGN	1.4227055789679235E-6	DEFECT	1.6532808222468413E-7	TEST	1.0055156553251536E-7	DOCUMENTATION	8.462903310454847E-8	IMPLEMENTATION
//return memberPersister.getType();	WITHOUT_CLASSIFICATION	0.9999861795750997	WITHOUT_CLASSIFICATION	1.2102546214345469E-5	DESIGN	1.046387733586494E-6	IMPLEMENTATION	5.457855110889623E-7	DEFECT	8.563529342865597E-8	TEST	4.007014793088336E-8	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999887621423453	WITHOUT_CLASSIFICATION	4.337009151930325E-6	DEFECT	3.83003967759858E-6	DESIGN	2.204217255431011E-6	IMPLEMENTATION	6.715472475567635E-7	DOCUMENTATION	1.9504432224641124E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
//instanceof AssociationType;	WITHOUT_CLASSIFICATION	0.9999082497473067	WITHOUT_CLASSIFICATION	4.8950376804126885E-5	DESIGN	2.4749725553406645E-5	DEFECT	1.707800455333385E-5	DOCUMENTATION	5.932497715706203E-7	IMPLEMENTATION	3.7889601091352923E-7	TEST
// we need to determine the best way to know that two joinables // represent a single many-to-many...	WITHOUT_CLASSIFICATION	0.9452647078552083	WITHOUT_CLASSIFICATION	0.054581198002368846	DESIGN	1.0832620768875939E-4	IMPLEMENTATION	4.422212122039761E-5	TEST	1.3753396844900324E-6	DOCUMENTATION	1.7047382911957854E-7	DEFECT
//strip leading ','	WITHOUT_CLASSIFICATION	0.9999984856641182	WITHOUT_CLASSIFICATION	5.574008632064014E-7	DESIGN	5.517273740479633E-7	IMPLEMENTATION	2.2489061291512735E-7	TEST	9.802222232012963E-8	DOCUMENTATION	8.229480928183225E-8	DEFECT
//public boolean isSubselectLoadable();	WITHOUT_CLASSIFICATION	0.9999991361993518	WITHOUT_CLASSIFICATION	7.136187468795123E-7	DESIGN	7.400454342133616E-8	DEFECT	2.7937005240113342E-8	IMPLEMENTATION	2.6038353140795E-8	TEST	2.2201999657476224E-8	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999916908270141	WITHOUT_CLASSIFICATION	7.35236771179149E-6	DESIGN	3.960112032322104E-7	DEFECT	2.1225470518902713E-7	IMPLEMENTATION	1.8569325656286586E-7	DOCUMENTATION	1.6284610910793235E-7	TEST
//columns	WITHOUT_CLASSIFICATION	0.9998747212077883	WITHOUT_CLASSIFICATION	1.1089705839983701E-4	DESIGN	4.851047964216394E-6	IMPLEMENTATION	4.4459242675018815E-6	DEFECT	3.6801208437891887E-6	DOCUMENTATION	1.4046407363345124E-6	TEST
//SQL statements	WITHOUT_CLASSIFICATION	0.9999984403281303	WITHOUT_CLASSIFICATION	1.0668252417711836E-6	DESIGN	1.7588383824352301E-7	DOCUMENTATION	1.7542769348134159E-7	IMPLEMENTATION	1.0704856842858982E-7	TEST	3.448652773859058E-8	DEFECT
//extra information about the element type	WITHOUT_CLASSIFICATION	0.9999922193693648	WITHOUT_CLASSIFICATION	6.242821666525149E-6	DESIGN	7.429042675138513E-7	IMPLEMENTATION	4.2427305019734293E-7	DEFECT	2.969910214771194E-7	DOCUMENTATION	7.364062944690748E-8	TEST
//types	WITHOUT_CLASSIFICATION	0.9997553542190143	WITHOUT_CLASSIFICATION	2.1049413155157007E-4	DESIGN	1.4258353954151079E-5	IMPLEMENTATION	7.39272591022148E-6	DEFECT	6.490306580295638E-6	TEST	6.010262989604843E-6	DOCUMENTATION
// custom sql	WITHOUT_CLASSIFICATION	0.9999972230153829	WITHOUT_CLASSIFICATION	2.50915471176205E-6	DESIGN	2.060888004939967E-7	DEFECT	2.687587638767712E-8	DOCUMENTATION	2.3678949514211144E-8	TEST	1.1186278877157518E-8	IMPLEMENTATION
//private final String unquotedIdentifierColumnName;	WITHOUT_CLASSIFICATION	0.9993420127777982	WITHOUT_CLASSIFICATION	5.734439404841792E-4	DESIGN	7.522817584335627E-5	IMPLEMENTATION	5.588733735127276E-6	DEFECT	3.2319228074388014E-6	DOCUMENTATION	4.944493316677873E-7	TEST
// dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.9999956392852558	WITHOUT_CLASSIFICATION	3.970250376291386E-6	DESIGN	2.1293116510998763E-7	DEFECT	9.451852544679103E-8	DOCUMENTATION	8.16269051334595E-8	IMPLEMENTATION	1.3877722331679972E-9	TEST
// dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.9999993161970016	WITHOUT_CLASSIFICATION	4.7502642833786307E-7	DESIGN	1.454265191930506E-7	IMPLEMENTATION	4.0389865010200996E-8	DEFECT	1.6205165999046206E-8	TEST	6.7550199749216884E-9	DOCUMENTATION
// NativeSQL: collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.9998846630202846	WITHOUT_CLASSIFICATION	1.002637191124959E-4	IMPLEMENTATION	1.1229078694442654E-5	DESIGN	2.84629829977314E-6	DEFECT	5.549538785261425E-7	DOCUMENTATION	4.429297302977585E-7	TEST
//unquotedKeyColumnNames = StringHelper.unQuote(keyColumnAliases);	WITHOUT_CLASSIFICATION	0.9999966737752793	WITHOUT_CLASSIFICATION	2.0935115357118863E-6	DEFECT	1.0727617702565726E-6	DESIGN	8.802612547705602E-8	TEST	5.097280892930762E-8	IMPLEMENTATION	2.0952480290368187E-8	DOCUMENTATION
//ELEMENT	WITHOUT_CLASSIFICATION	0.9996938265667399	WITHOUT_CLASSIFICATION	2.6974568304200794E-4	DESIGN	1.3860901287490405E-5	DEFECT	8.380102585990368E-6	IMPLEMENTATION	7.2161563140163225E-6	DOCUMENTATION	6.970590030582462E-6	TEST
// NativeSQL: collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.99951437181311	WITHOUT_CLASSIFICATION	4.6918204058932114E-4	IMPLEMENTATION	1.5082690537987277E-5	DESIGN	6.38593764973534E-7	DOCUMENTATION	5.021801330727469E-7	DEFECT	2.2268186463235021E-7	TEST
// INDEX AND ROW SELECT	WITHOUT_CLASSIFICATION	0.9999816425201962	WITHOUT_CLASSIFICATION	1.3756681985123881E-5	IMPLEMENTATION	2.7126672001628924E-6	DESIGN	8.414593470846632E-7	DOCUMENTATION	7.717701413209291E-7	DEFECT	2.749011301317497E-7	TEST
// NativeSQL: collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.9989379117408279	WITHOUT_CLASSIFICATION	9.303714667663453E-4	IMPLEMENTATION	1.0392006231182064E-4	DESIGN	2.250541564852017E-5	DEFECT	3.016802441642083E-6	TEST	2.2745120036707336E-6	DOCUMENTATION
//unquotedIdentifierColumnName = identifierColumnAlias;	WITHOUT_CLASSIFICATION	0.9999450555559107	WITHOUT_CLASSIFICATION	3.209868393008482E-5	IMPLEMENTATION	2.1230164448058027E-5	DESIGN	6.055274833300101E-7	DOCUMENTATION	5.179415951780141E-7	DEFECT	4.921266326016544E-7	TEST
//unquotedIdentifierColumnName = null;	WITHOUT_CLASSIFICATION	0.999904626525877	WITHOUT_CLASSIFICATION	4.781114990008663E-5	IMPLEMENTATION	3.634855241604037E-5	DESIGN	1.0109345950719446E-5	DEFECT	7.110843577159014E-7	DOCUMENTATION	3.933414984918922E-7	TEST
//GENERATE THE SQL:	WITHOUT_CLASSIFICATION	0.9998544840426316	WITHOUT_CLASSIFICATION	1.3476308173913105E-4	DESIGN	4.038762568885155E-6	DEFECT	2.6778839770210475E-6	IMPLEMENTATION	2.405065888933921E-6	DOCUMENTATION	1.6311631945070772E-6	TEST
// for non-arrays, we don't need to know the element class //elementType.returnedClass();	WITHOUT_CLASSIFICATION	0.9999839402247211	WITHOUT_CLASSIFICATION	1.5929860200013673E-5	DESIGN	7.194494509352414E-8	IMPLEMENTATION	4.1422269052078016E-8	DEFECT	1.340909352989178E-8	DOCUMENTATION	3.1387711751641055E-9	TEST
//not all classpersisters implement PropertyMapping!	WITHOUT_CLASSIFICATION	0.9986898253189003	WITHOUT_CLASSIFICATION	6.495911203933751E-4	IMPLEMENTATION	6.151442641209275E-4	DESIGN	3.067963349941365E-5	DEFECT	1.1422903468588396E-5	TEST	3.3367596172983685E-6	DOCUMENTATION
// Handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.9803627090336557	WITHOUT_CLASSIFICATION	0.019183022439271072	DESIGN	4.508066061043255E-4	IMPLEMENTATION	1.889519075370794E-6	TEST	1.1636634054794364E-6	DOCUMENTATION	4.0873848800711546E-7	DEFECT
// Handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.9093260351602005	WITHOUT_CLASSIFICATION	0.08986486584820289	DESIGN	8.040361782534537E-4	IMPLEMENTATION	2.8759459212325295E-6	TEST	1.9724327513576786E-6	DOCUMENTATION	2.1443467053370916E-7	DEFECT
//if there is a user-specified loader, return that //TODO: filters!?	WITHOUT_CLASSIFICATION	0.6463165902310721	WITHOUT_CLASSIFICATION	0.33930484299256136	DESIGN	0.01396153389480859	IMPLEMENTATION	3.4322494580192955E-4	DEFECT	6.444512056073084E-5	TEST	9.36281519523055E-6	DOCUMENTATION
// Take care of any entities that might have // been evicted!	WITHOUT_CLASSIFICATION	0.999947821850479	WITHOUT_CLASSIFICATION	4.024772666484934E-5	DESIGN	1.052074678181364E-5	DEFECT	7.532463787711718E-7	TEST	4.593097922057689E-7	IMPLEMENTATION	1.971199033240707E-7	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9999984856641182	WITHOUT_CLASSIFICATION	5.574008632064014E-7	DESIGN	5.517273740479633E-7	IMPLEMENTATION	2.2489061291512735E-7	TEST	9.802222232012963E-8	DOCUMENTATION	8.229480928183225E-8	DEFECT
// Run a subquery loader	WITHOUT_CLASSIFICATION	0.9999677057929189	WITHOUT_CLASSIFICATION	2.655825811807428E-5	DEFECT	3.915268850694669E-6	DESIGN	1.6848129230093734E-6	IMPLEMENTATION	8.634753239639262E-8	DOCUMENTATION	4.951965700086986E-8	TEST
//needed by arrays	WITHOUT_CLASSIFICATION	0.9998177284373801	WITHOUT_CLASSIFICATION	1.3237063022626357E-4	IMPLEMENTATION	3.326116783992742E-5	DESIGN	9.27457677558855E-6	TEST	4.725739020266407E-6	DOCUMENTATION	2.6394487578909785E-6	DEFECT
//TODO: something with formulas...	WITHOUT_CLASSIFICATION	0.824109745559038	WITHOUT_CLASSIFICATION	0.12186258881124011	IMPLEMENTATION	0.04067202057693405	DESIGN	0.010586075475706518	TEST	0.0019278529212872564	DOCUMENTATION	8.417166557940048E-4	DEFECT
//an assertion	WITHOUT_CLASSIFICATION	0.9999957052802969	WITHOUT_CLASSIFICATION	2.548540422168609E-6	TEST	6.747040973199421E-7	DEFECT	4.2454936348395147E-7	DESIGN	4.0125954152395257E-7	DOCUMENTATION	2.4566627858625046E-7	IMPLEMENTATION
// Remove all the old entries	WITHOUT_CLASSIFICATION	0.99999289135566	WITHOUT_CLASSIFICATION	3.6257321916482647E-6	DESIGN	3.399737184757082E-6	IMPLEMENTATION	3.146844429236393E-8	DEFECT	2.9457602280729185E-8	DOCUMENTATION	2.22489169909569E-8	TEST
//create all the new entries	WITHOUT_CLASSIFICATION	0.9999933435300171	WITHOUT_CLASSIFICATION	4.457331688442069E-6	IMPLEMENTATION	1.935083264088495E-6	DESIGN	2.1372494203558684E-7	DOCUMENTATION	4.6988803035341396E-8	TEST	3.3412853372313418E-9	DEFECT
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999887621423453	WITHOUT_CLASSIFICATION	4.337009151930325E-6	DEFECT	3.83003967759858E-6	DESIGN	2.204217255431011E-6	IMPLEMENTATION	6.715472475567635E-7	DOCUMENTATION	1.9504432224641124E-7	TEST
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999887621423453	WITHOUT_CLASSIFICATION	4.337009151930325E-6	DEFECT	3.83003967759858E-6	DESIGN	2.204217255431011E-6	IMPLEMENTATION	6.715472475567635E-7	DOCUMENTATION	1.9504432224641124E-7	TEST
//delete all the deleted entries	WITHOUT_CLASSIFICATION	0.9999907608332645	WITHOUT_CLASSIFICATION	8.664175603505922E-6	IMPLEMENTATION	4.987898975707523E-7	DESIGN	4.380249834719571E-8	DOCUMENTATION	3.053871260368638E-8	TEST	1.8600234158787E-9	DEFECT
//insert all the new entries	WITHOUT_CLASSIFICATION	0.9999968142629693	WITHOUT_CLASSIFICATION	2.9354714737375678E-6	IMPLEMENTATION	1.654249935581715E-7	DESIGN	6.106057222962485E-8	TEST	2.2585562009166187E-8	DOCUMENTATION	1.1944293727035191E-9	DEFECT
//==elementType ??	WITHOUT_CLASSIFICATION	0.9993204840801466	WITHOUT_CLASSIFICATION	6.421714556845117E-4	DESIGN	3.1874893804904235E-5	IMPLEMENTATION	2.991104029062692E-6	DOCUMENTATION	1.628110177448435E-6	DEFECT	8.503561573181444E-7	TEST
//update all the modified entries	WITHOUT_CLASSIFICATION	0.9999567483947491	WITHOUT_CLASSIFICATION	4.178788739938166E-5	IMPLEMENTATION	1.3361096725228984E-6	DESIGN	6.231618270605858E-8	DOCUMENTATION	3.6539432758260625E-8	TEST	2.8752563482544578E-8	DEFECT
//identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.999698587905101	WITHOUT_CLASSIFICATION	2.2344238782316412E-4	IMPLEMENTATION	6.521985476668345E-5	DESIGN	1.1818319271147871E-5	DEFECT	5.767977476291498E-7	TEST	3.5473529027653087E-7	DOCUMENTATION
// update removed rows fks to null	WITHOUT_CLASSIFICATION	0.9982813903899571	WITHOUT_CLASSIFICATION	0.0016818812532775056	DEFECT	2.171489553625537E-5	DESIGN	1.468485769349669E-5	IMPLEMENTATION	1.825697892478974E-7	TEST	1.4603374643803195E-7	DOCUMENTATION
// will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.9978772385607554	WITHOUT_CLASSIFICATION	0.0010689698160230724	DEFECT	9.358985828742217E-4	DESIGN	1.0536396259655291E-4	IMPLEMENTATION	1.0334561253903743E-5	DOCUMENTATION	2.194516496757449E-6	TEST
// now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.9999977441270794	WITHOUT_CLASSIFICATION	1.31781991861536E-6	IMPLEMENTATION	6.328429758520882E-7	DEFECT	2.997105798203369E-7	DESIGN	3.985804776815357E-9	DOCUMENTATION	1.5136414777080578E-9	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
//use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.9999185253326287	WITHOUT_CLASSIFICATION	7.572163867569565E-5	DESIGN	4.463536238642728E-6	IMPLEMENTATION	5.988674436290236E-7	DEFECT	5.894875544349654E-7	DOCUMENTATION	1.0113745875318695E-7	TEST
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999999777291908	WITHOUT_CLASSIFICATION	1.9144904013574166E-8	DESIGN	2.5339139850561327E-9	IMPLEMENTATION	4.1345164555197446E-10	TEST	1.3906912582233656E-10	DOCUMENTATION	3.947046661221213E-11	DEFECT
//private final String rootTableName;	WITHOUT_CLASSIFICATION	0.9990306229834638	WITHOUT_CLASSIFICATION	9.58760347293219E-4	DESIGN	5.543573313033468E-6	DEFECT	2.939705267528791E-6	IMPLEMENTATION	1.0680846324659545E-6	DOCUMENTATION	1.0653060300481331E-6	TEST
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.999728143760131	WITHOUT_CLASSIFICATION	1.8967379618224062E-4	IMPLEMENTATION	4.584498258003082E-5	DESIGN	1.9103583495687297E-5	DEFECT	9.398492359495299E-6	DOCUMENTATION	7.835385251495578E-6	TEST
//Custom SQL	WITHOUT_CLASSIFICATION	0.99984374067469	WITHOUT_CLASSIFICATION	1.5399726753022395E-4	DESIGN	1.02065715942092E-6	DEFECT	7.173161528093808E-7	DOCUMENTATION	4.305771387736637E-7	TEST	9.350732878781526E-8	IMPLEMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999999777291908	WITHOUT_CLASSIFICATION	1.9144904013574166E-8	DESIGN	2.5339139850561327E-9	IMPLEMENTATION	4.1345164555197446E-10	TEST	1.3906912582233656E-10	DOCUMENTATION	3.947046661221213E-11	DEFECT
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999935840090891	WITHOUT_CLASSIFICATION	4.981154964705449E-6	DESIGN	4.777534068045876E-7	IMPLEMENTATION	4.7410596941216003E-7	DOCUMENTATION	2.5097871782783753E-7	DEFECT	2.3199785204589574E-7	TEST
// This could also just be true all the time...	WITHOUT_CLASSIFICATION	0.9979604668485648	WITHOUT_CLASSIFICATION	0.001978365224557127	DESIGN	6.0641810244153723E-5	IMPLEMENTATION	2.7659083020702894E-7	DEFECT	1.960365128130396E-7	TEST	5.348929088486034E-8	DOCUMENTATION
//chop the last union (all)	WITHOUT_CLASSIFICATION	0.9999721199715037	WITHOUT_CLASSIFICATION	1.0056682096602733E-5	DESIGN	9.997417548948536E-6	IMPLEMENTATION	5.807938200453197E-6	DEFECT	1.704942521611972E-6	DOCUMENTATION	3.1304812861969634E-7	TEST
//TODO: check this....	WITHOUT_CLASSIFICATION	0.491009698470242	IMPLEMENTATION	0.38639689427399526	WITHOUT_CLASSIFICATION	0.11228292433277628	DESIGN	0.007966772199982031	DOCUMENTATION	0.001981918615313903	TEST	3.617921076905652E-4	DEFECT
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.999728143760131	WITHOUT_CLASSIFICATION	1.8967379618224062E-4	IMPLEMENTATION	4.584498258003082E-5	DESIGN	1.9103583495687297E-5	DEFECT	9.398492359495299E-6	DOCUMENTATION	7.835385251495578E-6	TEST
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999991823601255	WITHOUT_CLASSIFICATION	6.755378012513294E-7	DESIGN	7.701753549637002E-8	DEFECT	4.9573029761183904E-8	TEST	1.545414461711851E-8	DOCUMENTATION	5.736337252927372E-11	IMPLEMENTATION
// the closure of all properties in the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999999044491126	WITHOUT_CLASSIFICATION	8.404452009302084E-8	DESIGN	9.121665910231518E-9	DEFECT	1.3933758394040611E-9	IMPLEMENTATION	8.229361302610024E-10	DOCUMENTATION	1.6838947242627456E-10	TEST
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999998852360039	WITHOUT_CLASSIFICATION	1.0195467608966171E-7	DESIGN	1.222272691140705E-8	IMPLEMENTATION	2.492832265767677E-10	TEST	2.1242537276484912E-10	DEFECT	1.2488445606038237E-10	DOCUMENTATION
// subclass discrimination works by assigning particular // values to certain combinations of null primary key // values in the outer join using an SQL CASE	WITHOUT_CLASSIFICATION	0.9999813198894806	WITHOUT_CLASSIFICATION	1.8393967221338247E-5	DEFECT	2.8324922139933456E-7	DESIGN	2.5305227093922737E-9	DOCUMENTATION	3.573142155795952E-10	TEST	6.239778511409879E-12	IMPLEMENTATION
//MULTITABLES	WITHOUT_CLASSIFICATION	0.9997860695263631	WITHOUT_CLASSIFICATION	1.6751504132073036E-4	DESIGN	1.9407146800024687E-5	IMPLEMENTATION	1.4317325428656303E-5	DEFECT	9.368777809838922E-6	DOCUMENTATION	3.3221822776749617E-6	TEST
// Custom sql	WITHOUT_CLASSIFICATION	0.9999854428413102	WITHOUT_CLASSIFICATION	1.3953873877990914E-5	DESIGN	4.07100871490023E-7	DEFECT	9.020584864816904E-8	TEST	6.532986982653801E-8	DOCUMENTATION	4.064822194325184E-8	IMPLEMENTATION
// subclass closure properties	WITHOUT_CLASSIFICATION	0.9999991853537384	WITHOUT_CLASSIFICATION	7.971486072753263E-7	DESIGN	1.4817037803518185E-8	DEFECT	1.6681569476111465E-9	DOCUMENTATION	7.10463449482768E-10	TEST	3.019962562211609E-10	IMPLEMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999923543839202	WITHOUT_CLASSIFICATION	3.607695584180777E-6	DESIGN	2.3476256179457545E-6	IMPLEMENTATION	1.0572530402573298E-6	DEFECT	4.464895754009385E-7	DOCUMENTATION	1.8655226199473263E-7	TEST
//( (Column) model.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9983080646378113	WITHOUT_CLASSIFICATION	0.0016605381058844677	DESIGN	2.3649030701842266E-5	IMPLEMENTATION	4.8880625556195195E-6	DEFECT	2.0058233354843957E-6	TEST	8.543397112166634E-7	DOCUMENTATION
//( (Column) sc.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9998770766004667	WITHOUT_CLASSIFICATION	1.1514251920931796E-4	DESIGN	6.046693946064708E-6	IMPLEMENTATION	9.647280564025786E-7	DEFECT	4.653190710532449E-7	TEST	3.0413925050692894E-7	DOCUMENTATION
// don't need subclass tables, because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.9993399746899844	WITHOUT_CLASSIFICATION	6.274104144739402E-4	DESIGN	3.1135451551195015E-5	DEFECT	1.0958959203114313E-6	DOCUMENTATION	2.2475110191004375E-7	TEST	1.5879696838825908E-7	IMPLEMENTATION
// special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.999987352607922	WITHOUT_CLASSIFICATION	8.793482617673578E-6	IMPLEMENTATION	2.8683624572833317E-6	DESIGN	9.805790793041249E-7	DOCUMENTATION	2.497354846102344E-9	TEST	2.4705687981867722E-9	DEFECT
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999999777291908	WITHOUT_CLASSIFICATION	1.9144904013574166E-8	DESIGN	2.5339139850561327E-9	IMPLEMENTATION	4.1345164555197446E-10	TEST	1.3906912582233656E-10	DOCUMENTATION	3.947046661221213E-11	DEFECT
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999991823601255	WITHOUT_CLASSIFICATION	6.755378012513294E-7	DESIGN	7.701753549637002E-8	DEFECT	4.9573029761183904E-8	TEST	1.545414461711851E-8	DOCUMENTATION	5.736337252927372E-11	IMPLEMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999998852360039	WITHOUT_CLASSIFICATION	1.0195467608966171E-7	DESIGN	1.222272691140705E-8	IMPLEMENTATION	2.492832265767677E-10	TEST	2.1242537276484912E-10	DEFECT	1.2488445606038237E-10	DOCUMENTATION
//get em on the second pass!	WITHOUT_CLASSIFICATION	0.9999573355497522	WITHOUT_CLASSIFICATION	4.002518744505564E-5	DESIGN	1.0633879423150399E-6	IMPLEMENTATION	7.282473362963289E-7	DEFECT	7.240177230360961E-7	DOCUMENTATION	1.2360980126652318E-7	TEST
// now look up the object we are really interested in! // (this lets us correctly handle proxies and multi-row // or multi-column queries)	WITHOUT_CLASSIFICATION	0.9995187855691594	WITHOUT_CLASSIFICATION	2.4301396115059595E-4	DEFECT	2.3584795461540083E-4	DESIGN	1.2295921200638591E-6	IMPLEMENTATION	8.233064534393735E-7	TEST	2.996165011375011E-7	DOCUMENTATION
// discriminator column	WITHOUT_CLASSIFICATION	0.9999993920785444	WITHOUT_CLASSIFICATION	2.910168359494052E-7	DESIGN	2.784148583672471E-7	DEFECT	2.7567030042650826E-8	DOCUMENTATION	6.74992892107989E-9	TEST	4.1728024252768225E-9	IMPLEMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.999728143760131	WITHOUT_CLASSIFICATION	1.8967379618224062E-4	IMPLEMENTATION	4.584498258003082E-5	DESIGN	1.9103583495687297E-5	DEFECT	9.398492359495299E-6	DOCUMENTATION	7.835385251495578E-6	TEST
//private final Map propertyTableNumbersByName = new HashMap();	WITHOUT_CLASSIFICATION	0.9990882583418045	WITHOUT_CLASSIFICATION	9.053452461290384E-4	DESIGN	2.6132253148761416E-6	DEFECT	1.6626412661955924E-6	IMPLEMENTATION	1.4002492383123242E-6	DOCUMENTATION	7.202962470822121E-7	TEST
// CLASS + TABLE	WITHOUT_CLASSIFICATION	0.9999995609682663	WITHOUT_CLASSIFICATION	1.3481788804743943E-7	IMPLEMENTATION	1.2482702642140916E-7	DESIGN	9.355897479658845E-8	DEFECT	5.5077223336300084E-8	DOCUMENTATION	3.075062109412415E-8	TEST
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999247567544072	WITHOUT_CLASSIFICATION	6.0462339695737215E-5	IMPLEMENTATION	8.766296347875363E-6	DESIGN	3.1538336624836415E-6	DEFECT	2.0568523756748327E-6	DOCUMENTATION	8.039235111364066E-7	TEST
// PROPERTIES	WITHOUT_CLASSIFICATION	0.99999514917522	WITHOUT_CLASSIFICATION	2.154747782576821E-6	IMPLEMENTATION	1.7374828801012408E-6	DESIGN	4.1264992060843796E-7	DOCUMENTATION	3.720870231584972E-7	DEFECT	1.7385717361685337E-7	TEST
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999923543839202	WITHOUT_CLASSIFICATION	3.607695584180777E-6	DESIGN	2.3476256179457545E-6	IMPLEMENTATION	1.0572530402573298E-6	DEFECT	4.464895754009385E-7	DOCUMENTATION	1.8655226199473263E-7	TEST
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999935840090891	WITHOUT_CLASSIFICATION	4.981154964705449E-6	DESIGN	4.777534068045876E-7	IMPLEMENTATION	4.7410596941216003E-7	DOCUMENTATION	2.5097871782783753E-7	DEFECT	2.3199785204589574E-7	TEST
// JOINS	WITHOUT_CLASSIFICATION	0.9999926520093906	WITHOUT_CLASSIFICATION	4.992898998826669E-6	DESIGN	1.2453351566535588E-6	IMPLEMENTATION	6.726936839790879E-7	DEFECT	2.566394451225828E-7	DOCUMENTATION	1.8042332492751432E-7	TEST
//propertyTableNumbersByName.put( prop.getName(), join );	WITHOUT_CLASSIFICATION	0.9999981400058204	WITHOUT_CLASSIFICATION	5.821423548314026E-7	DEFECT	5.631638997449743E-7	IMPLEMENTATION	3.874637353024722E-7	DESIGN	2.1557187008596452E-7	DOCUMENTATION	1.1165231960829575E-7	TEST
//Access cached SQL	WITHOUT_CLASSIFICATION	0.9999608876428987	WITHOUT_CLASSIFICATION	3.8847203119083316E-5	DESIGN	8.720315326303183E-8	DOCUMENTATION	7.339723226298586E-8	TEST	6.23700315211397E-8	DEFECT	4.218356527110801E-8	IMPLEMENTATION
//figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.9975090929508744	WITHOUT_CLASSIFICATION	0.002481964653233234	DESIGN	2.911714071177269E-6	DEFECT	2.4558461198274097E-6	TEST	2.273347485260386E-6	IMPLEMENTATION	1.3014882162925582E-6	DOCUMENTATION
//figure out which columns are needed	WITHOUT_CLASSIFICATION	0.9747469849390364	WITHOUT_CLASSIFICATION	0.024203034695025574	DESIGN	0.0010042516569832476	IMPLEMENTATION	3.105269808022144E-5	DOCUMENTATION	1.296453119532661E-5	TEST	1.711479679240496E-6	DEFECT
//figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.9894125483057052	WITHOUT_CLASSIFICATION	0.010482403167124545	DESIGN	7.418059118950886E-5	IMPLEMENTATION	2.458624513250303E-5	DOCUMENTATION	5.71813357307945E-6	TEST	5.635572751040455E-7	DEFECT
//render the SQL	WITHOUT_CLASSIFICATION	0.9994514574685761	WITHOUT_CLASSIFICATION	5.066161880159616E-4	DESIGN	2.9656179009705366E-5	IMPLEMENTATION	5.829524334955404E-6	DOCUMENTATION	3.8059178731847427E-6	DEFECT	2.6347221900212798E-6	TEST
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999984684435104	WITHOUT_CLASSIFICATION	1.4127053162374624E-6	DESIGN	5.169579064582542E-8	IMPLEMENTATION	4.425473515325514E-8	TEST	1.5907843115949343E-8	DEFECT	6.9928045989204225E-9	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999521913617353	WITHOUT_CLASSIFICATION	4.760846371894012E-5	DESIGN	1.2831855528265571E-7	IMPLEMENTATION	3.0719297700713204E-8	TEST	2.8203971265896556E-8	DEFECT	1.293272168595561E-8	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999993199205585	WITHOUT_CLASSIFICATION	2.6780794213774574E-6	IMPLEMENTATION	1.660777727158303E-6	DESIGN	1.4459067892569273E-6	DEFECT	5.551161170798426E-7	DOCUMENTATION	4.609143600473982E-7	TEST
// The optional SQL string defined in the where attribute	WITHOUT_CLASSIFICATION	0.9999998948288131	WITHOUT_CLASSIFICATION	4.458382260631923E-8	IMPLEMENTATION	3.14329159750638E-8	DEFECT	2.315276048296932E-8	DESIGN	4.612162992772537E-9	DOCUMENTATION	1.3895249911050896E-9	TEST
//information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.9999309034904684	WITHOUT_CLASSIFICATION	6.278824668057143E-5	DESIGN	4.8645489884963715E-6	DEFECT	7.731696241554813E-7	TEST	6.676183943891485E-7	DOCUMENTATION	2.92584407625283E-9	IMPLEMENTATION
//information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.9999991822780112	WITHOUT_CLASSIFICATION	6.449629224432369E-7	DESIGN	1.0345044657910774E-7	DEFECT	5.9598168027618174E-8	DOCUMENTATION	7.05125350629845E-9	TEST	2.6591982969766743E-9	IMPLEMENTATION
//information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.9999995956045983	WITHOUT_CLASSIFICATION	3.6990406656974615E-7	DESIGN	1.3468122408724618E-8	DOCUMENTATION	1.0321331457290981E-8	IMPLEMENTATION	9.318117369643514E-9	DEFECT	1.3837637902498932E-9	TEST
// dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9999998586750769	WITHOUT_CLASSIFICATION	1.3484463825235914E-7	DESIGN	3.4697689897024238E-9	DEFECT	1.2596630356063533E-9	DOCUMENTATION	1.1570233425022106E-9	IMPLEMENTATION	5.938294985573616E-10	TEST
// SQL strings	WITHOUT_CLASSIFICATION	0.9999992283704108	WITHOUT_CLASSIFICATION	5.161874410570521E-7	DESIGN	9.694043540047162E-8	IMPLEMENTATION	8.942831239977667E-8	DEFECT	3.985149855130299E-8	TEST	2.922190188026227E-8	DOCUMENTATION
// for objects that came in via update()	WITHOUT_CLASSIFICATION	0.99999963395098	WITHOUT_CLASSIFICATION	2.468800390177952E-7	DESIGN	7.913811925390558E-8	IMPLEMENTATION	3.20383198189951E-8	DEFECT	5.597002149414288E-9	DOCUMENTATION	2.3955396844517037E-9	TEST
// PROPERTIES	WITHOUT_CLASSIFICATION	0.99999514917522	WITHOUT_CLASSIFICATION	2.154747782576821E-6	IMPLEMENTATION	1.7374828801012408E-6	DESIGN	4.1264992060843796E-7	DOCUMENTATION	3.720870231584972E-7	DEFECT	1.7385717361685337E-7	TEST
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999993199205585	WITHOUT_CLASSIFICATION	2.6780794213774574E-6	IMPLEMENTATION	1.660777727158303E-6	DESIGN	1.4459067892569273E-6	DEFECT	5.551161170798426E-7	DOCUMENTATION	4.609143600473982E-7	TEST
// IDENTIFIER	WITHOUT_CLASSIFICATION	0.9999877317399389	WITHOUT_CLASSIFICATION	8.562278914450321E-6	IMPLEMENTATION	2.309461653248115E-6	DESIGN	8.194881955341739E-7	DEFECT	2.8864169120129443E-7	DOCUMENTATION	2.883896066098126E-7	TEST
// VERSION	WITHOUT_CLASSIFICATION	0.9999970719518138	WITHOUT_CLASSIFICATION	1.8239822805772594E-6	DESIGN	5.78828885778323E-7	IMPLEMENTATION	2.997315095787788E-7	DEFECT	1.2488465270744645E-7	DOCUMENTATION	1.0062085769311287E-7	TEST
//WHERE STRING	WITHOUT_CLASSIFICATION	0.9999756809177245	WITHOUT_CLASSIFICATION	1.2956447530792333E-5	IMPLEMENTATION	7.208744875577946E-6	DESIGN	1.739392442477621E-6	DOCUMENTATION	1.670032976487378E-6	DEFECT	7.444644502128255E-7	TEST
// SUBCLASS PROPERTY CLOSURE	WITHOUT_CLASSIFICATION	0.9999987625684311	WITHOUT_CLASSIFICATION	4.59328848976879E-7	IMPLEMENTATION	4.3010567789355016E-7	DESIGN	1.9725975640950332E-7	DOCUMENTATION	9.992599564772601E-8	DEFECT	5.08112899026907E-8	TEST
//before add :-)	WITHOUT_CLASSIFICATION	0.999948534185745	WITHOUT_CLASSIFICATION	3.0220692621050278E-5	IMPLEMENTATION	1.359319396787865E-5	DESIGN	3.604712279417399E-6	DOCUMENTATION	3.2702945175562315E-6	DEFECT	7.769208691255645E-7	TEST
// Handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.9995481823166716	WITHOUT_CLASSIFICATION	4.4637077724667004E-4	DESIGN	5.344207652267139E-6	IMPLEMENTATION	6.743227629855755E-8	DOCUMENTATION	3.150653759980496E-8	TEST	3.759615460841034E-9	DEFECT
// only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.9999864834400605	WITHOUT_CLASSIFICATION	1.1469398089078047E-5	DEFECT	1.023054185157518E-6	IMPLEMENTATION	9.125213950815032E-7	DESIGN	6.218634664237602E-8	DOCUMENTATION	4.939992369589599E-8	TEST
//note early exit here:	WITHOUT_CLASSIFICATION	0.9952451163294014	WITHOUT_CLASSIFICATION	0.0024427761255153575	DESIGN	0.0016722480088099596	IMPLEMENTATION	5.340104055395873E-4	DEFECT	6.788720059834422E-5	TEST	3.7961930135303886E-5	DOCUMENTATION
// object have been loaded with setReadOnly(true); HHH-2236	WITHOUT_CLASSIFICATION	0.9999618894912117	WITHOUT_CLASSIFICATION	2.5887231103356986E-5	DEFECT	7.906219454369311E-6	DESIGN	3.989962447337006E-6	IMPLEMENTATION	1.93114031887357E-7	DOCUMENTATION	1.3398175138278272E-7	TEST
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.9951323760975873	WITHOUT_CLASSIFICATION	0.002006195679669849	DESIGN	0.0019906591278743085	TEST	8.522758273901137E-4	DEFECT	1.334349064999121E-5	IMPLEMENTATION	5.149776828341219E-6	DOCUMENTATION
//strip leading ", "	WITHOUT_CLASSIFICATION	0.9999985439849809	WITHOUT_CLASSIFICATION	7.217772942778082E-7	DESIGN	3.6077273286878695E-7	IMPLEMENTATION	2.4526991155228954E-7	TEST	7.222876917129693E-8	DOCUMENTATION	5.5966311280885757E-8	DEFECT
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9999602176436511	WITHOUT_CLASSIFICATION	2.590616019668464E-5	DEFECT	1.3445835167763E-5	DESIGN	3.0826930223777766E-7	TEST	8.788454000360216E-8	IMPLEMENTATION	3.4207142340900515E-8	DOCUMENTATION
//otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.9988568562682638	WITHOUT_CLASSIFICATION	0.0010761852338832063	DESIGN	6.532564948829603E-5	IMPLEMENTATION	8.791564089927144E-7	TEST	5.148708288194317E-7	DEFECT	2.388211268954532E-7	DOCUMENTATION
//null owner ok??	WITHOUT_CLASSIFICATION	0.999860828337452	WITHOUT_CLASSIFICATION	1.1395497100499364E-4	DESIGN	1.8870098810492E-5	IMPLEMENTATION	5.0817795750911495E-6	DEFECT	8.329724111766268E-7	DOCUMENTATION	4.318407461705444E-7	TEST
// null sql means that the only lazy properties // are shared PK one-to-one associations which are // handled differently in the Type#nullSafeGet code...	WITHOUT_CLASSIFICATION	0.9905925191249766	WITHOUT_CLASSIFICATION	0.009401472219256598	DESIGN	5.249722056322725E-6	DOCUMENTATION	4.2532082141662423E-7	DEFECT	1.963079954026489E-7	IMPLEMENTATION	1.373048938144474E-7	TEST
// Create a new FROM node for the referenced class.	WITHOUT_CLASSIFICATION	0.9999655883682885	WITHOUT_CLASSIFICATION	3.4385221193758856E-5	DESIGN	1.6646968969554086E-8	DOCUMENTATION	4.5255011161624376E-9	TEST	4.446023911117482E-9	IMPLEMENTATION	7.920237298710246E-10	DEFECT
// the difficulty here is exactly what do we update in order to // force the version to be incremented in the db...	WITHOUT_CLASSIFICATION	0.9995995050683023	WITHOUT_CLASSIFICATION	3.9934973158231807E-4	DESIGN	8.70959543825235E-7	IMPLEMENTATION	1.3772754586768082E-7	DOCUMENTATION	1.3174313299566928E-7	DEFECT	4.7698927354269086E-9	TEST
// performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.9999983667092383	WITHOUT_CLASSIFICATION	1.0220968513345152E-6	DESIGN	4.893315551299357E-7	DOCUMENTATION	7.041133089739382E-8	IMPLEMENTATION	4.8403551418350056E-8	DEFECT	3.047472881335392E-9	TEST
// properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.9999995765588731	WITHOUT_CLASSIFICATION	3.24174283204203E-7	IMPLEMENTATION	3.277115661129578E-8	DESIGN	3.2355369603410485E-8	DEFECT	2.4057228426814365E-8	DOCUMENTATION	1.0083089092481327E-8	TEST
//Enable for HHH-440, which we don't like:	WITHOUT_CLASSIFICATION	0.9937769375051888	WITHOUT_CLASSIFICATION	0.00618781252288371	DESIGN	1.6143051074633988E-5	DEFECT	1.2170124287491588E-5	DOCUMENTATION	6.274400900867307E-6	TEST	6.623956644110498E-7	IMPLEMENTATION
// ALIASES	WITHOUT_CLASSIFICATION	0.9999945889684574	WITHOUT_CLASSIFICATION	2.735484761548631E-6	DESIGN	1.3085657944723027E-6	DEFECT	9.93625198558223E-7	IMPLEMENTATION	2.499504325111519E-7	DOCUMENTATION	1.234053554747871E-7	TEST
// aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.9999939663647994	WITHOUT_CLASSIFICATION	5.469602097435224E-6	DESIGN	4.823237333903616E-7	IMPLEMENTATION	4.6387948939206174E-8	TEST	2.0271139256788197E-8	DOCUMENTATION	1.505028140502906E-8	DEFECT
// aliases for composite-id's	WITHOUT_CLASSIFICATION	0.9999998691767394	WITHOUT_CLASSIFICATION	1.0535118010199333E-7	DESIGN	1.6428518302824264E-8	IMPLEMENTATION	4.397548337525706E-9	TEST	3.095828261250682E-9	DEFECT	1.5501855187839906E-9	DOCUMENTATION
// Fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.9999996780860756	WITHOUT_CLASSIFICATION	2.819650077940718E-7	DESIGN	3.749449944789374E-8	DEFECT	1.0365347346961849E-9	DOCUMENTATION	8.545734297988939E-10	IMPLEMENTATION	5.633090090555508E-10	TEST
// embedded composite ids ( alias.idname1, alias.idname2 )	WITHOUT_CLASSIFICATION	0.9999974369319193	WITHOUT_CLASSIFICATION	2.1000974057313967E-6	DESIGN	3.7938510373432657E-7	IMPLEMENTATION	6.601194276058975E-8	DEFECT	9.359740041667561E-9	TEST	8.213888395912251E-9	DOCUMENTATION
// TODO: skip formulas?	WITHOUT_CLASSIFICATION	0.49451687281614043	IMPLEMENTATION	0.39978906507379214	WITHOUT_CLASSIFICATION	0.09719414830149742	DESIGN	0.004627083124569752	DOCUMENTATION	0.0029887518541367062	DEFECT	8.840788298636644E-4	TEST
//don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9999883400827435	WITHOUT_CLASSIFICATION	6.46807040475531E-6	IMPLEMENTATION	4.096771278717911E-6	DESIGN	6.226421924682484E-7	TEST	2.585288555067235E-7	DOCUMENTATION	2.1390452498586972E-7	DEFECT
//do two passes, for collection property-ref!	WITHOUT_CLASSIFICATION	0.9999940044116596	WITHOUT_CLASSIFICATION	2.526030061041221E-6	IMPLEMENTATION	2.4408729072128783E-6	DEFECT	7.507328811853752E-7	TEST	2.0522238334544462E-7	DOCUMENTATION	7.273010755642544E-8	DESIGN
// select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.999990243674291	WITHOUT_CLASSIFICATION	4.9987044633429966E-6	DEFECT	3.7922802392022415E-6	DESIGN	8.79462579528967E-7	IMPLEMENTATION	7.483240769484666E-8	TEST	1.104601917007998E-8	DOCUMENTATION
//TODO: eventually, rowIdName[j]	WITHOUT_CLASSIFICATION	0.9667714280803164	IMPLEMENTATION	0.022210305521890204	DESIGN	0.006048749084197446	WITHOUT_CLASSIFICATION	0.004589903947506058	DEFECT	2.729928426578539E-4	DOCUMENTATION	1.066205234321648E-4	TEST
// this is a property of the table, which we are updating	WITHOUT_CLASSIFICATION	0.9999968984569727	WITHOUT_CLASSIFICATION	2.9890066397167103E-6	DEFECT	9.871760468342994E-8	DESIGN	8.036577961133419E-9	DOCUMENTATION	3.083145707621639E-9	TEST	2.6990591940243887E-9	IMPLEMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9998483336449366	WITHOUT_CLASSIFICATION	1.3311478980903327E-4	DEFECT	1.3169967982432655E-5	IMPLEMENTATION	2.6999561847628886E-6	TEST	2.200076814254839E-6	DOCUMENTATION	4.815642730049102E-7	DESIGN
// we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.9999831725425641	WITHOUT_CLASSIFICATION	1.6740871669620075E-5	DEFECT	3.100372323873702E-8	DESIGN	2.907511251353822E-8	DOCUMENTATION	1.4437453897023938E-8	TEST	1.2069476576654363E-8	IMPLEMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999700320863703	WITHOUT_CLASSIFICATION	2.9115064284367737E-5	DESIGN	6.686336274585249E-7	TEST	9.932979199473837E-8	DEFECT	7.552342439650524E-8	IMPLEMENTATION	9.362501724160524E-9	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999950445004546	WITHOUT_CLASSIFICATION	4.806006166839592E-6	DESIGN	1.449319454893564E-7	DEFECT	3.4687713893196506E-9	TEST	7.836195448775024E-10	DOCUMENTATION	3.0904213279472516E-10	IMPLEMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9999991694962038	WITHOUT_CLASSIFICATION	6.124263417426538E-7	IMPLEMENTATION	8.822425912738106E-8	DOCUMENTATION	6.4867010097465E-8	DEFECT	5.5510041268429163E-8	DESIGN	9.476144049264875E-9	TEST
// add the discriminator	WITHOUT_CLASSIFICATION	0.9999984738544528	WITHOUT_CLASSIFICATION	1.391754541577017E-6	DESIGN	1.0756920523399307E-7	DOCUMENTATION	1.4295348951674805E-8	IMPLEMENTATION	7.554878060559667E-9	TEST	4.971573433921064E-9	DEFECT
// more specifically : "? [op] datetime" //      1) if the operator is MINUS, the param needs to be of //          some datetime type //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.8170973288549335	WITHOUT_CLASSIFICATION	0.18286917913628414	DESIGN	2.412032072475209E-5	DEFECT	4.279585570146435E-6	DOCUMENTATION	3.5570230821041928E-6	IMPLEMENTATION	1.5350794053260559E-6	TEST
// add normal properties	WITHOUT_CLASSIFICATION	0.9999991694962038	WITHOUT_CLASSIFICATION	6.124263417426538E-7	IMPLEMENTATION	8.822425912738106E-8	DOCUMENTATION	6.4867010097465E-8	DEFECT	5.5510041268429163E-8	DESIGN	9.476144049264875E-9	TEST
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999950445004546	WITHOUT_CLASSIFICATION	4.806006166839592E-6	DESIGN	1.449319454893564E-7	DEFECT	3.4687713893196506E-9	TEST	7.836195448775024E-10	DOCUMENTATION	3.0904213279472516E-10	IMPLEMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.9999984738544528	WITHOUT_CLASSIFICATION	1.391754541577017E-6	DESIGN	1.0756920523399307E-7	DOCUMENTATION	1.4295348951674805E-8	IMPLEMENTATION	7.554878060559667E-9	TEST	4.971573433921064E-9	DEFECT
// add the primary key	WITHOUT_CLASSIFICATION	0.9999950597058782	WITHOUT_CLASSIFICATION	3.8071094960065303E-6	IMPLEMENTATION	7.854437494822973E-7	DESIGN	2.8204081090967477E-7	DOCUMENTATION	4.06544001319203E-8	TEST	2.5045665298461744E-8	DEFECT
// delegate already handles PK columns	WITHOUT_CLASSIFICATION	0.9999997006151362	WITHOUT_CLASSIFICATION	2.3715252920037088E-7	DESIGN	3.488161665197226E-8	IMPLEMENTATION	1.3799153251241572E-8	DEFECT	9.464601356714619E-9	DOCUMENTATION	4.086963502389416E-9	TEST
// we can't batch joined inserts, *especially* not if it is an identity insert; // nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.9999991529456034	WITHOUT_CLASSIFICATION	8.422142821070735E-7	DEFECT	3.4622532269816413E-9	TEST	1.0105410281518791E-9	DESIGN	2.6167333172453244E-10	IMPLEMENTATION	1.0564697388276239E-10	DOCUMENTATION
// Render the SQL query	WITHOUT_CLASSIFICATION	0.9969431778631814	WITHOUT_CLASSIFICATION	0.002933955212498206	DESIGN	5.9428461039405825E-5	IMPLEMENTATION	5.213721934791127E-5	DEFECT	7.821731241424564E-6	DOCUMENTATION	3.4795126917760214E-6	TEST
// Write the values of fields onto the prepared statement - we MUST use the state at the time the // insert was issued (cos of foreign key constraints). Not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.9999999357823626	WITHOUT_CLASSIFICATION	6.238831525637109E-8	DEFECT	1.386910846903917E-9	DESIGN	3.794858543463845E-10	DOCUMENTATION	5.02572816166093E-11	IMPLEMENTATION	1.2668151669538088E-11	TEST
// TODO : shouldnt inserts be Expectations.NONE?	WITHOUT_CLASSIFICATION	0.9829929269297233	DESIGN	0.014322427909465788	IMPLEMENTATION	0.001962028287442934	DEFECT	5.140860094789626E-4	WITHOUT_CLASSIFICATION	1.8740723521327855E-4	TEST	2.1123628675860987E-5	DOCUMENTATION
//don't bother trying to update, we know there is no row there yet	WITHOUT_CLASSIFICATION	0.8750532587307328	WITHOUT_CLASSIFICATION	0.10125837906469153	DESIGN	0.022463141730932303	DEFECT	0.0011554777308469442	IMPLEMENTATION	5.514558564690317E-5	TEST	1.4597157149462564E-5	DOCUMENTATION
//if all fields are null, we might need to delete existing row	WITHOUT_CLASSIFICATION	0.9999222233420803	WITHOUT_CLASSIFICATION	3.855277827747053E-5	IMPLEMENTATION	3.68754050010538E-5	DESIGN	1.1562195171879517E-6	TEST	8.320699508255778E-7	DEFECT	3.6018517330411946E-7	DOCUMENTATION
//there is probably a row there, so try to update //if no rows were updated, we will find out	WITHOUT_CLASSIFICATION	0.9999640006770475	WITHOUT_CLASSIFICATION	3.584917877385705E-5	DESIGN	8.727336381314734E-8	DEFECT	5.2785699812574986E-8	IMPLEMENTATION	6.113503323991996E-9	TEST	3.9716116401658914E-9	DOCUMENTATION
//note: updates to joined tables can't be batched...	WITHOUT_CLASSIFICATION	0.999822801852228	WITHOUT_CLASSIFICATION	1.2671775694868083E-4	DESIGN	4.768470692818609E-5	DEFECT	1.646333564674099E-6	IMPLEMENTATION	8.112403524936422E-7	TEST	3.3810997787999753E-7	DOCUMENTATION
// starting index	WITHOUT_CLASSIFICATION	0.9999848742444154	WITHOUT_CLASSIFICATION	6.9718498616009794E-6	DEFECT	5.37266161328946E-6	DESIGN	1.94232295747982E-6	IMPLEMENTATION	4.4149144545624013E-7	TEST	3.9742970695555346E-7	DOCUMENTATION
//Now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.9999997017418952	WITHOUT_CLASSIFICATION	2.0281488284494025E-7	IMPLEMENTATION	6.057867542064961E-8	DEFECT	2.502358641845485E-8	DESIGN	5.864315633547642E-9	TEST	3.976644364789506E-9	DOCUMENTATION
// Write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.9999590173430302	WITHOUT_CLASSIFICATION	2.3669845718835705E-5	DESIGN	1.4806073594895867E-5	IMPLEMENTATION	2.1948137742417516E-6	DEFECT	2.6744387323926943E-7	DOCUMENTATION	4.4480008644119866E-8	TEST
//Render the SQL query	WITHOUT_CLASSIFICATION	0.9932625351096203	WITHOUT_CLASSIFICATION	0.006528475507246895	DESIGN	1.0481254089113644E-4	IMPLEMENTATION	6.145405691082009E-5	DEFECT	3.208453543686277E-5	DOCUMENTATION	1.0638249893999315E-5	TEST
// Do the key. The key is immutable so we can use the _current_ object state - not necessarily // the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.9999945808122942	WITHOUT_CLASSIFICATION	4.733039071745768E-6	IMPLEMENTATION	6.388860668637453E-7	DEFECT	4.1530590801373125E-8	DOCUMENTATION	3.4294366162100896E-9	DESIGN	2.3025396530469964E-9	TEST
// We should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.9999998651597858	WITHOUT_CLASSIFICATION	1.0001178317313764E-7	DEFECT	2.8559973385953517E-8	IMPLEMENTATION	3.808518106935546E-9	DESIGN	1.815470198036215E-9	DOCUMENTATION	6.444695696999657E-10	TEST
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999991946608254	WITHOUT_CLASSIFICATION	6.155192794671085E-7	DESIGN	1.8750796459182755E-7	DEFECT	1.523244516037373E-9	DOCUMENTATION	7.317220252489372E-10	TEST	5.696408252954408E-11	IMPLEMENTATION
//note: dirtyFields==null means we had no snapshot, and we couldn't get one using select-before-update //	WITHOUT_CLASSIFICATION	0.9999874588066109	WITHOUT_CLASSIFICATION	1.2364457183380338E-5	DESIGN	1.3349693154537408E-7	DEFECT	4.09268856658753E-8	IMPLEMENTATION	1.7325928312009082E-9	TEST	5.797956590258981E-10	DOCUMENTATION
// more specifically : "datetime [op] ?" //      1) if the operator is MINUS, we really cannot determine //          the expected type as either another datetime or //          numeric would be valid //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9990918355856502	WITHOUT_CLASSIFICATION	9.042918602733194E-4	DESIGN	3.838288822211345E-6	DEFECT	2.4943960121263022E-8	DOCUMENTATION	9.104250402372158E-9	TEST	2.170437171607284E-10	IMPLEMENTATION
// For the case of dynamic-update="true", we need to generate the UPDATE SQL	WITHOUT_CLASSIFICATION	0.9999989858077458	WITHOUT_CLASSIFICATION	7.002730697113157E-7	DESIGN	1.132631909224084E-7	IMPLEMENTATION	1.1039188743225167E-7	DOCUMENTATION	4.79763424817058E-8	TEST	4.228776360167338E-8	DEFECT
// don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.9769920493972873	WITHOUT_CLASSIFICATION	0.020449854669215426	IMPLEMENTATION	0.0013358034170366862	DESIGN	0.0011798755447351584	DEFECT	2.5891374260731672E-5	DOCUMENTATION	1.6525597464586585E-5	TEST
// For the case of dynamic-update="false", or no snapshot, we use the static SQL	WITHOUT_CLASSIFICATION	0.9999999571349095	WITHOUT_CLASSIFICATION	2.2009358302963635E-8	DESIGN	1.1376835026505428E-8	DEFECT	6.897715685097112E-9	IMPLEMENTATION	2.5167902677839096E-9	DOCUMENTATION	6.439124682137912E-11	TEST
// if not "get", then try "is"	WITHOUT_CLASSIFICATION	0.9999821271596194	WITHOUT_CLASSIFICATION	1.0068920175458922E-5	DEFECT	4.873767606338176E-6	DESIGN	1.8571873089576287E-6	TEST	8.491736406390395E-7	IMPLEMENTATION	2.2379164919251457E-7	DOCUMENTATION
// Now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.9999988805388637	WITHOUT_CLASSIFICATION	6.501286947798103E-7	IMPLEMENTATION	4.3187355967259547E-7	DESIGN	3.099707865218077E-8	DEFECT	4.425162848952351E-9	DOCUMENTATION	2.0366403860267417E-9	TEST
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999929735932895	WITHOUT_CLASSIFICATION	6.499462278263024E-6	DESIGN	2.562738176877811E-7	TEST	1.9258574490627313E-7	DOCUMENTATION	5.6384256253163364E-8	IMPLEMENTATION	2.170061323712723E-8	DEFECT
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999929735932895	WITHOUT_CLASSIFICATION	6.499462278263024E-6	DESIGN	2.562738176877811E-7	TEST	1.9258574490627313E-7	DOCUMENTATION	5.6384256253163364E-8	IMPLEMENTATION	2.170061323712723E-8	DEFECT
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999999841980162	WITHOUT_CLASSIFICATION	1.2711894561246488E-8	DESIGN	1.54338543685409E-9	DEFECT	7.906986988920721E-10	IMPLEMENTATION	6.471291126854239E-10	DOCUMENTATION	1.0887593663945008E-10	TEST
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999999841980162	WITHOUT_CLASSIFICATION	1.2711894561246488E-8	DESIGN	1.54338543685409E-9	DEFECT	7.906986988920721E-10	IMPLEMENTATION	6.471291126854239E-10	DOCUMENTATION	1.0887593663945008E-10	TEST
// not supported	WITHOUT_CLASSIFICATION	0.9907229126794871	WITHOUT_CLASSIFICATION	0.007449281257140563	IMPLEMENTATION	0.001712038136234564	DESIGN	9.91376668230679E-5	DEFECT	1.0717643832633648E-5	TEST	5.912616481964257E-6	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999991946608254	WITHOUT_CLASSIFICATION	6.155192794671085E-7	DESIGN	1.8750796459182755E-7	DEFECT	1.523244516037373E-9	DOCUMENTATION	7.317220252489372E-10	TEST	5.696408252954408E-11	IMPLEMENTATION
// we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.9999969864901561	WITHOUT_CLASSIFICATION	1.8231526726783718E-6	DESIGN	7.487011389480807E-7	DOCUMENTATION	3.6865471007796064E-7	IMPLEMENTATION	5.0197130540651745E-8	TEST	2.2804191599054905E-8	DEFECT
// otherwise, utilize the static delete statements	WITHOUT_CLASSIFICATION	0.9999991287775188	WITHOUT_CLASSIFICATION	7.143447681298429E-7	IMPLEMENTATION	1.5315150276800852E-7	DESIGN	1.848159186584555E-9	DOCUMENTATION	1.268956463452213E-9	TEST	6.090945549262752E-10	DEFECT
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9997930632116514	WITHOUT_CLASSIFICATION	1.806302955798626E-4	DESIGN	1.4053795317659363E-5	DOCUMENTATION	7.964250385901068E-6	IMPLEMENTATION	3.181955613437936E-6	DEFECT	1.1064914517310946E-6	TEST
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9997930632116514	WITHOUT_CLASSIFICATION	1.806302955798626E-4	DESIGN	1.4053795317659363E-5	DOCUMENTATION	7.964250385901068E-6	IMPLEMENTATION	3.181955613437936E-6	DEFECT	1.1064914517310946E-6	TEST
//all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.999993433542538	WITHOUT_CLASSIFICATION	3.248439225302537E-6	DESIGN	2.2889144594101874E-6	IMPLEMENTATION	8.383395486941945E-7	DEFECT	1.6577155530804755E-7	DOCUMENTATION	2.499267344625811E-8	TEST
//notice that we skip the first table; it is the driving table!	WITHOUT_CLASSIFICATION	0.9999381344622724	WITHOUT_CLASSIFICATION	5.1793619380617105E-5	DESIGN	8.343157499147362E-6	DEFECT	9.021051509167133E-7	TEST	7.404549652345326E-7	IMPLEMENTATION	8.620073173099063E-8	DOCUMENTATION
//we can inner join to superclass tables (the row MUST be there) //we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.9994978960293608	WITHOUT_CLASSIFICATION	5.020430617917584E-4	DESIGN	5.249671369753907E-8	DEFECT	5.525204754975029E-9	DOCUMENTATION	2.0853578866029783E-9	IMPLEMENTATION	8.015709968080568E-10	TEST
//skip the driving table	WITHOUT_CLASSIFICATION	0.9999888017848383	WITHOUT_CLASSIFICATION	8.045738893287238E-6	DESIGN	2.0563687492580697E-6	IMPLEMENTATION	5.367625105930981E-7	TEST	3.793739090818702E-7	DEFECT	1.799710996077971E-7	DOCUMENTATION
//get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.9689225576106084	WITHOUT_CLASSIFICATION	0.029428791092915477	DESIGN	0.0013344787926982996	DEFECT	3.0668152601407995E-4	IMPLEMENTATION	5.726037532355483E-6	DOCUMENTATION	1.7649402312362275E-6	TEST
// here, we work under the following assumptions: //      ------------ valid cases -------------------------------------- //      1) datetime + {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      2) datetime - datetime : always results in a DOUBLE //      3) datetime - {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      ------------ invalid cases ------------------------------------ //      4) datetime + datetime //      5) {something other than datetime} - datetime //      6) datetime * {any type} //      7) datetime / {any type} //      8) {any type} / datetime // doing so allows us to properly handle parameters as either the left // or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.9889055068199709	WITHOUT_CLASSIFICATION	0.010821368291952063	DEFECT	2.48574114182811E-4	DESIGN	2.4356964150220496E-5	IMPLEMENTATION	1.8518874103720398E-7	DOCUMENTATION	8.621002977201279E-9	TEST
//render the where and from parts	WITHOUT_CLASSIFICATION	0.9998933055633704	WITHOUT_CLASSIFICATION	1.0095507106340936E-4	DESIGN	2.0713324931359395E-6	IMPLEMENTATION	1.7151135475443017E-6	DEFECT	1.188403869246611E-6	DOCUMENTATION	7.645156562712965E-7	TEST
//we *could* regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.9987501247681918	WITHOUT_CLASSIFICATION	0.0012492589716086367	DESIGN	3.9751754544356295E-7	DEFECT	1.0718811208200874E-7	IMPLEMENTATION	9.896830851384544E-8	TEST	1.25862335426589E-8	DOCUMENTATION
//now render the joins	WITHOUT_CLASSIFICATION	0.9998843140641577	WITHOUT_CLASSIFICATION	8.137841623574893E-5	DESIGN	3.030029695515801E-5	IMPLEMENTATION	2.0679971183983074E-6	DOCUMENTATION	1.413476344292436E-6	DEFECT	5.257491886319431E-7	TEST
// This will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.9999960662482014	WITHOUT_CLASSIFICATION	1.8031131591091564E-6	IMPLEMENTATION	1.2293944506571057E-6	DESIGN	7.374899967013601E-7	DEFECT	1.5398517563098723E-7	DOCUMENTATION	9.76901640871434E-9	TEST
//now render the select clause	WITHOUT_CLASSIFICATION	0.9999967428156847	WITHOUT_CLASSIFICATION	2.382833633829692E-6	DESIGN	7.53586883217072E-7	IMPLEMENTATION	6.359143347267449E-8	DEFECT	3.9265171473114626E-8	DOCUMENTATION	1.7907193233882312E-8	TEST
//now tie it all together	WITHOUT_CLASSIFICATION	0.9996818501143357	WITHOUT_CLASSIFICATION	1.7775945084408945E-4	IMPLEMENTATION	1.393123795873689E-4	DESIGN	5.071493166741171E-7	DEFECT	2.972134212102469E-7	DOCUMENTATION	2.736924950004194E-7	TEST
//insert/update/delete SQL	WITHOUT_CLASSIFICATION	0.9999995361996075	WITHOUT_CLASSIFICATION	4.007799319729307E-7	DESIGN	3.545835224064084E-8	DEFECT	1.036814504615838E-8	TEST	9.092127717859568E-9	IMPLEMENTATION	8.101835577672858E-9	DOCUMENTATION
//select SQL	WITHOUT_CLASSIFICATION	0.9999830194939536	WITHOUT_CLASSIFICATION	1.5349256825816807E-5	DESIGN	8.95484944351675E-7	IMPLEMENTATION	3.101618393561648E-7	TEST	2.3030821958168804E-7	DOCUMENTATION	1.95294217142205E-7	DEFECT
//no need to check laziness, dirty checking handles that	WITHOUT_CLASSIFICATION	0.999981868793778	WITHOUT_CLASSIFICATION	9.913078410980726E-6	IMPLEMENTATION	6.1493267876545545E-6	DESIGN	1.1365552189080907E-6	DEFECT	4.855392545541665E-7	DOCUMENTATION	4.4670654981047377E-7	TEST
// Fully resolve the map reference, create implicit joins.	WITHOUT_CLASSIFICATION	0.9999937582401193	WITHOUT_CLASSIFICATION	5.701987119246715E-6	DESIGN	3.7916158157123307E-7	IMPLEMENTATION	7.347047702214258E-8	TEST	4.899647332544049E-8	DEFECT	3.814422961372573E-8	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998806279709738	WITHOUT_CLASSIFICATION	1.1804286643147365E-4	DESIGN	5.694714763942851E-7	TEST	3.017375899384294E-7	IMPLEMENTATION	2.908552755352733E-7	DEFECT	1.6709825302888168E-7	DOCUMENTATION
// The basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.999997168221136	WITHOUT_CLASSIFICATION	2.503731573595196E-6	DESIGN	2.1884062873030354E-7	IMPLEMENTATION	9.823210631692515E-8	DEFECT	9.926579460640081E-9	DOCUMENTATION	1.0479757301638752E-9	TEST
// for dialects which are known to not support ANSI-SQL row-value-constructor syntax, // we should mutate the tree.	WITHOUT_CLASSIFICATION	0.9999548439981287	WITHOUT_CLASSIFICATION	4.130798382969925E-5	DESIGN	2.8264707538799834E-6	DEFECT	9.72261904456455E-7	IMPLEMENTATION	3.747723956419153E-8	TEST	1.1808143724426701E-8	DOCUMENTATION
// Due to the complexity in initializing the SelectClause, do not generate one here. // If it is not found; simply return null... // // Also, do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.9999999666483365	WITHOUT_CLASSIFICATION	2.3698003614796252E-8	DESIGN	5.383316691698802E-9	IMPLEMENTATION	3.889776934680507E-9	DEFECT	2.8587984098099625E-10	TEST	9.468646570208335E-11	DOCUMENTATION
// check the version unsaved-value, if appropriate	WITHOUT_CLASSIFICATION	0.9998824863283094	WITHOUT_CLASSIFICATION	1.1211842034313142E-4	IMPLEMENTATION	4.120679248417612E-6	DESIGN	1.1857965990867611E-6	DEFECT	8.297500644367898E-8	DOCUMENTATION	5.800493580661136E-9	TEST
// let this take precedence if defined, since it works for // assigned identifiers	WITHOUT_CLASSIFICATION	0.9999985793727514	WITHOUT_CLASSIFICATION	1.073704074052536E-6	DESIGN	2.904902140257403E-7	TEST	3.637100344443986E-8	DEFECT	1.3892189803495176E-8	IMPLEMENTATION	6.16976719958877E-9	DOCUMENTATION
// check the id unsaved-value	WITHOUT_CLASSIFICATION	0.9999923586830397	WITHOUT_CLASSIFICATION	6.783835319996202E-6	IMPLEMENTATION	4.7287096009243783E-7	DESIGN	2.481994437681343E-7	DEFECT	1.3101543803395214E-7	DOCUMENTATION	5.395798335753075E-9	TEST
// check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.9999828025294774	WITHOUT_CLASSIFICATION	1.7031741451127075E-5	DESIGN	6.768494910559104E-8	DEFECT	5.7947478203987903E-8	IMPLEMENTATION	3.3982239684783885E-8	DOCUMENTATION	6.114404511055582E-9	TEST
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999299110184646	WITHOUT_CLASSIFICATION	5.753399134786891E-4	DESIGN	5.258666584817819E-5	IMPLEMENTATION	2.5754187005847864E-5	DOCUMENTATION	2.5414321560056388E-5	DEFECT	2.179472746118229E-5	TEST
// For property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.9999970216636194	WITHOUT_CLASSIFICATION	1.2456191236518937E-6	DEFECT	8.029497621143925E-7	IMPLEMENTATION	7.907013095543096E-7	DESIGN	1.0064226912542154E-7	DOCUMENTATION	3.842391612758892E-8	TEST
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999993199205585	WITHOUT_CLASSIFICATION	2.6780794213774574E-6	IMPLEMENTATION	1.660777727158303E-6	DESIGN	1.4459067892569273E-6	DEFECT	5.551161170798426E-7	DOCUMENTATION	4.609143600473982E-7	TEST
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9999602176436511	WITHOUT_CLASSIFICATION	2.590616019668464E-5	DEFECT	1.3445835167763E-5	DESIGN	3.0826930223777766E-7	TEST	8.788454000360216E-8	IMPLEMENTATION	3.4207142340900515E-8	DOCUMENTATION
//force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.9999980908806428	WITHOUT_CLASSIFICATION	1.4001671566866352E-6	DESIGN	3.236636941960622E-7	DEFECT	1.1581649516617605E-7	DOCUMENTATION	4.878200813352838E-8	TEST	2.0690003100986408E-8	IMPLEMENTATION
// If this from element is a collection and the path is a collection property (maxIndex, etc.) then // generate a sub-query.	WITHOUT_CLASSIFICATION	0.9999630921766156	WITHOUT_CLASSIFICATION	3.2293700922702255E-5	DEFECT	4.25823808405419E-6	DESIGN	2.747438567156016E-7	IMPLEMENTATION	4.221164570904874E-8	TEST	3.892887527128634E-8	DOCUMENTATION
// entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999894684754927	WITHOUT_CLASSIFICATION	8.132914271672799E-6	DESIGN	1.5649984842634671E-6	IMPLEMENTATION	2.9921139765403726E-7	TEST	2.7023352084332703E-7	DOCUMENTATION	2.6416683303369467E-7	DEFECT
// collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999897040401711	WITHOUT_CLASSIFICATION	4.2232601764960846E-6	DESIGN	3.2078204646067912E-6	IMPLEMENTATION	2.650688776013221E-6	DEFECT	1.150313785142179E-7	TEST	9.915903330753132E-8	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.9999596015884267	WITHOUT_CLASSIFICATION	3.2537427293903457E-5	DESIGN	5.441366747886612E-6	DEFECT	1.5845344646226138E-6	DOCUMENTATION	5.864162298474525E-7	IMPLEMENTATION	2.486668370357402E-7	TEST
//cannot occur	WITHOUT_CLASSIFICATION	0.9999596015884267	WITHOUT_CLASSIFICATION	3.2537427293903457E-5	DESIGN	5.441366747886612E-6	DEFECT	1.5845344646226138E-6	DOCUMENTATION	5.864162298474525E-7	IMPLEMENTATION	2.486668370357402E-7	TEST
// only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.9997508488854395	WITHOUT_CLASSIFICATION	2.480696228110034E-4	DESIGN	9.264471078416414E-7	DEFECT	7.471999050660781E-8	TEST	6.919716834136507E-8	IMPLEMENTATION	1.1127482815719429E-8	DOCUMENTATION
// try "get"	WITHOUT_CLASSIFICATION	0.9999987852751763	WITHOUT_CLASSIFICATION	4.5242732066683934E-7	DEFECT	4.2848639542447584E-7	IMPLEMENTATION	2.5281889326422215E-7	DESIGN	4.281395906926023E-8	TEST	3.8178255222926364E-8	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999983033361809	WITHOUT_CLASSIFICATION	1.0364139918087538E-6	DESIGN	3.732515198691463E-7	DEFECT	1.4517054635053915E-7	DOCUMENTATION	7.846773600283491E-8	IMPLEMENTATION	6.336002502630684E-8	TEST
// do nothing...	WITHOUT_CLASSIFICATION	0.9999983033361809	WITHOUT_CLASSIFICATION	1.0364139918087538E-6	DESIGN	3.732515198691463E-7	DEFECT	1.4517054635053915E-7	DOCUMENTATION	7.846773600283491E-8	IMPLEMENTATION	6.336002502630684E-8	TEST
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.999980778741223	WITHOUT_CLASSIFICATION	1.7855610169528223E-5	DEFECT	9.704360968649074E-7	DESIGN	2.2985532964947217E-7	IMPLEMENTATION	1.1933376637907067E-7	TEST	4.6023414571135716E-8	DOCUMENTATION
// this page intentionally left blank :)	WITHOUT_CLASSIFICATION	0.9999935489198216	WITHOUT_CLASSIFICATION	5.29542323217792E-6	DESIGN	5.380681870701824E-7	IMPLEMENTATION	3.182679630088868E-7	DOCUMENTATION	2.7337099874368004E-7	DEFECT	2.594979727621757E-8	TEST
// do not do anything	WITHOUT_CLASSIFICATION	0.9999940172091225	WITHOUT_CLASSIFICATION	3.490035450619987E-6	DEFECT	9.549196501563617E-7	DOCUMENTATION	8.866442384997358E-7	IMPLEMENTATION	4.250940186897418E-7	DESIGN	2.2609751978373232E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999991085847939	WITHOUT_CLASSIFICATION	5.678916425814814E-7	DESIGN	1.9865147318605438E-7	DEFECT	6.276681771231637E-8	IMPLEMENTATION	4.3980501861465335E-8	DOCUMENTATION	1.81247707007564E-8	TEST
//cant instantiate	WITHOUT_CLASSIFICATION	0.9993756020663461	WITHOUT_CLASSIFICATION	6.076570585654948E-4	DESIGN	7.370176119209528E-6	DEFECT	3.853893779729525E-6	DOCUMENTATION	3.1404539166100115E-6	IMPLEMENTATION	2.3763512728822645E-6	TEST
//if it is a property of an embedded component, invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.9999737114047341	WITHOUT_CLASSIFICATION	2.6164694887459598E-5	DESIGN	9.257329208115372E-8	DEFECT	2.288590370566581E-8	TEST	7.584581285086652E-9	DOCUMENTATION	8.566014604936029E-10	IMPLEMENTATION
// otherwise:	WITHOUT_CLASSIFICATION	0.9969449379715294	WITHOUT_CLASSIFICATION	0.0021396170583623426	DESIGN	9.040952396342431E-4	IMPLEMENTATION	4.671088494505291E-6	DEFECT	4.545471423291718E-6	TEST	2.133170556171717E-6	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999107900923738	WITHOUT_CLASSIFICATION	4.673669395195104E-5	DESIGN	3.9814606918234096E-5	IMPLEMENTATION	1.1081411073202786E-6	DOCUMENTATION	9.473817996802296E-7	DEFECT	6.030838487035332E-7	TEST
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9997960070139964	WITHOUT_CLASSIFICATION	2.0324175183898682E-4	DESIGN	5.794600994773648E-7	DEFECT	7.711062019690553E-8	DOCUMENTATION	7.439843764839181E-8	IMPLEMENTATION	2.026500719300088E-8	TEST
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9997960070139964	WITHOUT_CLASSIFICATION	2.0324175183898682E-4	DESIGN	5.794600994773648E-7	DEFECT	7.711062019690553E-8	DOCUMENTATION	7.439843764839181E-8	IMPLEMENTATION	2.026500719300088E-8	TEST
// HHH-2481 make sure the callback gets cleared, otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.9162894406277139	WITHOUT_CLASSIFICATION	0.08338566574344777	DESIGN	3.189896235574037E-4	DEFECT	5.5938868081077235E-6	IMPLEMENTATION	2.982297066409382E-7	DOCUMENTATION	1.1888766076070341E-8	TEST
// while constructor is running	WITHOUT_CLASSIFICATION	0.999999741585864	WITHOUT_CLASSIFICATION	1.1500648093286019E-7	DESIGN	6.698795362777432E-8	DEFECT	5.601658101668905E-8	IMPLEMENTATION	1.7915174867537697E-8	TEST	2.487945503141012E-9	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.999999741585864	WITHOUT_CLASSIFICATION	1.1500648093286019E-7	DESIGN	6.698795362777432E-8	DEFECT	5.601658101668905E-8	IMPLEMENTATION	1.7915174867537697E-8	TEST	2.487945503141012E-9	DOCUMENTATION
// note: interface is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9998755266988653	WITHOUT_CLASSIFICATION	1.2434253059371742E-4	DESIGN	5.789987433434273E-8	DEFECT	3.5324230830784036E-8	DOCUMENTATION	3.312059241781593E-8	IMPLEMENTATION	4.425843243118465E-9	TEST
// interfaces // arguments	WITHOUT_CLASSIFICATION	0.9999999535913356	WITHOUT_CLASSIFICATION	3.860928176377956E-8	DESIGN	3.142896656143401E-9	DOCUMENTATION	2.5359883640868547E-9	TEST	2.1163337577492094E-9	DEFECT	4.163847208676073E-12	IMPLEMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9749685683683971	WITHOUT_CLASSIFICATION	0.018369560997673815	DESIGN	0.0025515388994754753	IMPLEMENTATION	0.0017555080185570485	DEFECT	0.0015174034730859004	DOCUMENTATION	8.374202428107158E-4	TEST
// Get the caller	WITHOUT_CLASSIFICATION	0.9999995995479786	WITHOUT_CLASSIFICATION	2.714136696875136E-7	IMPLEMENTATION	1.1794923880721469E-7	DESIGN	4.73046893479221E-9	TEST	4.222994105132027E-9	DEFECT	2.1356499406138113E-9	DOCUMENTATION
// Get the caller principals	WITHOUT_CLASSIFICATION	0.999999680908759	WITHOUT_CLASSIFICATION	1.7002774327885014E-7	DESIGN	1.4002815346418002E-7	IMPLEMENTATION	4.272951193202978E-9	DOCUMENTATION	2.8223398201449494E-9	TEST	1.940053283055062E-9	DEFECT
//private static final Alias DEFAULT_ALIAS = new Alias(10, null);	WITHOUT_CLASSIFICATION	0.9999999597315387	WITHOUT_CLASSIFICATION	2.982920654705979E-8	DESIGN	9.48673382488414E-9	DEFECT	7.962668875281783E-10	DOCUMENTATION	1.1719577054064573E-10	IMPLEMENTATION	3.905840525638469E-11	TEST
// Needed to bump this up to DotNode, because that is the only thing which currently // knows about the property-ref path in the correct format; it is either this, or // recurse over the DotNodes constructing the property path just like DotNode does // internally	WITHOUT_CLASSIFICATION	0.9999899306927748	WITHOUT_CLASSIFICATION	7.754782559744416E-6	IMPLEMENTATION	1.0500277426223644E-6	TEST	9.53915441502655E-7	DOCUMENTATION	1.8895030526862573E-7	DESIGN	1.216311760073535E-7	DEFECT
//if the identifier is quoted, remove the quotes	WITHOUT_CLASSIFICATION	0.9999679199960532	WITHOUT_CLASSIFICATION	1.6310931215548826E-5	DESIGN	8.283629963268896E-6	IMPLEMENTATION	7.09083558296748E-6	TEST	3.0011214685176104E-7	DEFECT	9.449503813031643E-8	DOCUMENTATION
//truncate the identifier to the max alias length, less the suffix length	WITHOUT_CLASSIFICATION	0.9999814045353994	WITHOUT_CLASSIFICATION	1.751176665598006E-5	DESIGN	8.900694585701005E-7	IMPLEMENTATION	1.2760004717702892E-7	DOCUMENTATION	4.5244579342910443E-8	DEFECT	2.0783859719970912E-8	TEST
//full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.9974717586511966	WITHOUT_CLASSIFICATION	0.0013086218575504875	DESIGN	7.441139585314913E-4	IMPLEMENTATION	4.493653537099393E-4	DEFECT	1.684620229471507E-5	TEST	9.293976716701252E-6	DOCUMENTATION
// null is not considered the same type as Integer. //$NON-NLS-1 //$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9997591864208155	WITHOUT_CLASSIFICATION	2.2902861692563706E-4	DESIGN	1.043352623209807E-5	DEFECT	1.3375405701987649E-6	IMPLEMENTATION	8.60801058050668E-9	TEST	5.2874459340946125E-9	DOCUMENTATION
// the outerJoinsAfterWhere needs to come before where clause to properly // handle dynamic filters	WITHOUT_CLASSIFICATION	0.999991643169202	WITHOUT_CLASSIFICATION	8.127391111980117E-6	IMPLEMENTATION	1.6338258377585976E-7	DESIGN	4.6118094346059705E-8	DEFECT	1.8367869566190826E-8	DOCUMENTATION	1.5711383361873493E-9	TEST
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999191161232236	WITHOUT_CLASSIFICATION	6.705160307536035E-5	DESIGN	1.0244862304574877E-5	DEFECT	1.281296954827546E-6	DOCUMENTATION	1.2358576239834836E-6	IMPLEMENTATION	1.0702568175825381E-6	TEST
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999191161232236	WITHOUT_CLASSIFICATION	6.705160307536035E-5	DESIGN	1.0244862304574877E-5	DEFECT	1.281296954827546E-6	DOCUMENTATION	1.2358576239834836E-6	IMPLEMENTATION	1.0702568175825381E-6	TEST
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999191161232236	WITHOUT_CLASSIFICATION	6.705160307536035E-5	DESIGN	1.0244862304574877E-5	DEFECT	1.281296954827546E-6	DOCUMENTATION	1.2358576239834836E-6	IMPLEMENTATION	1.0702568175825381E-6	TEST
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999191161232236	WITHOUT_CLASSIFICATION	6.705160307536035E-5	DESIGN	1.0244862304574877E-5	DEFECT	1.281296954827546E-6	DOCUMENTATION	1.2358576239834836E-6	IMPLEMENTATION	1.0702568175825381E-6	TEST
// strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.9999987390981803	WITHOUT_CLASSIFICATION	7.887588164824242E-7	DEFECT	3.041113403105572E-7	IMPLEMENTATION	6.00976380625733E-8	DOCUMENTATION	5.520020049825181E-8	TEST	5.273382430226106E-8	DESIGN
// if the condition is not already there...	WITHOUT_CLASSIFICATION	0.9999949125099655	WITHOUT_CLASSIFICATION	4.056033887534901E-6	DESIGN	5.282725793177887E-7	IMPLEMENTATION	4.1461955018823407E-7	DEFECT	7.852135473814409E-8	TEST	1.0042662752256114E-8	DOCUMENTATION
//dontSpace.add("'");	WITHOUT_CLASSIFICATION	0.9999840331911964	WITHOUT_CLASSIFICATION	1.1043101526201994E-5	DESIGN	2.917049895377799E-6	IMPLEMENTATION	1.3741753448057122E-6	DOCUMENTATION	4.1930756242568235E-7	DEFECT	2.1317447472467467E-7	TEST
//for MySQL	WITHOUT_CLASSIFICATION	0.9998894927183719	WITHOUT_CLASSIFICATION	1.0235483048162298E-4	DESIGN	3.804643376005337E-6	DEFECT	2.292172028217023E-6	DOCUMENTATION	1.1170466756080552E-6	IMPLEMENTATION	9.385890666304215E-7	TEST
//HashMap columnsUnique = new HashMap();	WITHOUT_CLASSIFICATION	0.9999951496500028	WITHOUT_CLASSIFICATION	3.419442995959028E-6	IMPLEMENTATION	1.2060827130176753E-6	DESIGN	1.140339630575797E-7	DEFECT	7.14398849329605E-8	DOCUMENTATION	3.9350440472169324E-8	TEST
//null caused some problems	WITHOUT_CLASSIFICATION	0.9946903478928472	WITHOUT_CLASSIFICATION	0.005231359734399207	DESIGN	3.749787740168578E-5	IMPLEMENTATION	2.082351537032511E-5	DEFECT	1.777496790386621E-5	DOCUMENTATION	2.1960120778974537E-6	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9982414523766154	WITHOUT_CLASSIFICATION	0.0016475936779793072	DESIGN	7.351568261524677E-5	IMPLEMENTATION	1.679939678418562E-5	DOCUMENTATION	1.6057984814387536E-5	DEFECT	4.580881191449248E-6	TEST
//not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.9991283636782775	WITHOUT_CLASSIFICATION	8.696603093046085E-4	DESIGN	1.5551423463072786E-6	DEFECT	3.2443777857805366E-7	TEST	7.46373059521424E-8	IMPLEMENTATION	2.1794987067092596E-8	DOCUMENTATION
//even on inverse="true"	WITHOUT_CLASSIFICATION	0.9999699246427937	WITHOUT_CLASSIFICATION	1.4100872624508284E-5	DESIGN	1.0147914543579968E-5	IMPLEMENTATION	3.237595684893626E-6	DEFECT	2.129337993256637E-6	DOCUMENTATION	4.596363601580182E-7	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9982414523766154	WITHOUT_CLASSIFICATION	0.0016475936779793072	DESIGN	7.351568261524677E-5	IMPLEMENTATION	1.679939678418562E-5	DOCUMENTATION	1.6057984814387536E-5	DEFECT	4.580881191449248E-6	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9982414523766154	WITHOUT_CLASSIFICATION	0.0016475936779793072	DESIGN	7.351568261524677E-5	IMPLEMENTATION	1.679939678418562E-5	DOCUMENTATION	1.6057984814387536E-5	DEFECT	4.580881191449248E-6	TEST
// If true then execute db updates, otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.9999956020661669	WITHOUT_CLASSIFICATION	4.219018049059423E-6	IMPLEMENTATION	1.054570628562911E-7	DESIGN	4.3605336687621565E-8	DEFECT	2.2003756475511523E-8	TEST	7.849628123244978E-9	DOCUMENTATION
// we only release the connection	WITHOUT_CLASSIFICATION	0.9999973716427241	WITHOUT_CLASSIFICATION	1.7407399442016453E-6	DESIGN	3.663751710420291E-7	DOCUMENTATION	3.086441089112653E-7	IMPLEMENTATION	1.9178881865269558E-7	DEFECT	2.0809233041142504E-8	TEST
// deprecated option...	WITHOUT_CLASSIFICATION	0.9997902928690706	WITHOUT_CLASSIFICATION	1.8225558072459952E-4	DESIGN	2.2704365236640538E-5	IMPLEMENTATION	2.130299352247516E-6	DEFECT	2.077646363664002E-6	DOCUMENTATION	5.392392521210812E-7	TEST
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.999958314538927	WITHOUT_CLASSIFICATION	2.1060132238435563E-5	DEFECT	2.0225844916572596E-5	DESIGN	2.964897034399219E-7	IMPLEMENTATION	7.39861112122208E-8	TEST	2.900810333279658E-8	DOCUMENTATION
//actually, this last test is probably unnecessary, since  //beforeCompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.9485548409135511	WITHOUT_CLASSIFICATION	0.04806802292784109	DESIGN	0.0030441256991797683	TEST	3.2574892954494324E-4	DEFECT	6.632550553528614E-6	DOCUMENTATION	6.289793294421076E-7	IMPLEMENTATION
// this one only really needed for badly-behaved applications! // (if the TransactionManager has a Sychronization registered, // its a noop) // (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.9999929466106976	WITHOUT_CLASSIFICATION	6.9368343858847055E-6	DESIGN	3.29775494345013E-8	TEST	3.132474695162578E-8	DEFECT	2.7791556261868404E-8	IMPLEMENTATION	2.44610637513314E-8	DOCUMENTATION
// Create an DotNode AST for the path and resolve it.	WITHOUT_CLASSIFICATION	0.9998511853700881	WITHOUT_CLASSIFICATION	1.4288946281206872E-4	DESIGN	4.6984910641584136E-6	IMPLEMENTATION	7.233485306634365E-7	DOCUMENTATION	4.402752809305098E-7	TEST	6.305222410107817E-8	DEFECT
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.999958314538927	WITHOUT_CLASSIFICATION	2.1060132238435563E-5	DEFECT	2.0225844916572596E-5	DESIGN	2.964897034399219E-7	IMPLEMENTATION	7.39861112122208E-8	TEST	2.900810333279658E-8	DOCUMENTATION
//if we could not register a synchronization, //do the before/after completion callbacks //ourself (but we need to let jdbcContext //know that this is what we are going to //do, so it doesn't keep trying to register //synchronizations)	WITHOUT_CLASSIFICATION	0.9999637269342879	WITHOUT_CLASSIFICATION	3.5543366322922085E-5	DESIGN	3.5033815036244287E-7	DEFECT	2.53131328885795E-7	TEST	9.782963997274378E-8	DOCUMENTATION	2.8400269971425558E-8	IMPLEMENTATION
// swallow it, and continue to roll back JTA transaction	WITHOUT_CLASSIFICATION	0.9999367257849474	WITHOUT_CLASSIFICATION	3.291255203746749E-5	DESIGN	2.201904131665585E-5	IMPLEMENTATION	8.152841344970363E-6	DEFECT	1.8708568405297887E-7	DOCUMENTATION	2.6946694543244576E-9	TEST
// so the transaction is already rolled back, by JTA spec	WITHOUT_CLASSIFICATION	0.9999821544782593	WITHOUT_CLASSIFICATION	1.5008003510129239E-5	IMPLEMENTATION	2.122047142794265E-6	DESIGN	4.0174280599566855E-7	DEFECT	3.065923947946477E-7	DOCUMENTATION	7.135887005904205E-9	TEST
// this method is a noop if there is a Synchronization!	WITHOUT_CLASSIFICATION	0.9999933389046449	WITHOUT_CLASSIFICATION	6.0328779539429826E-6	DESIGN	4.302120334799283E-7	DEFECT	1.392460930969315E-7	TEST	5.409715393563051E-8	DOCUMENTATION	4.662120578467739E-9	IMPLEMENTATION
// two conditions where we need to transform this to a theta-join syntax: //      1) 'elem' is the "root from-element" in correlated subqueries //      2) The DotNode.useThetaStyleImplicitJoins has been set to true //          and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.9944666430842052	WITHOUT_CLASSIFICATION	0.005532551392521016	DESIGN	6.533364818549196E-7	DEFECT	1.2728479535246244E-7	DOCUMENTATION	2.4572828781280452E-8	TEST	3.2916771698360213E-10	IMPLEMENTATION
// WebSphere, however, is not a sane JEE/JTA container...	WITHOUT_CLASSIFICATION	0.9996469160259835	WITHOUT_CLASSIFICATION	2.6249607473615073E-4	DESIGN	8.485461684528348E-5	DEFECT	5.177153475900981E-6	IMPLEMENTATION	4.6385963135503043E-7	TEST	9.226932780347033E-8	DOCUMENTATION
// for sane JEE/JTA containers, the transaction itself functions as its identifier...	WITHOUT_CLASSIFICATION	0.9999732893569975	WITHOUT_CLASSIFICATION	2.522272466770694E-5	DESIGN	1.4806396291597436E-6	IMPLEMENTATION	5.022898983107913E-9	DOCUMENTATION	1.7467560709736248E-9	TEST	5.09050679343653E-10	DEFECT
//swallow, the transaction was finished	WITHOUT_CLASSIFICATION	0.985626366707028	WITHOUT_CLASSIFICATION	0.014267667915663258	IMPLEMENTATION	5.751860026139767E-5	DESIGN	4.148746287827791E-5	DEFECT	5.112564131392969E-6	DOCUMENTATION	1.8467500377349908E-6	TEST
// all AliasToEntityMapResultTransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999806615894818	WITHOUT_CLASSIFICATION	1.0859071083677865E-5	DESIGN	8.381914512738674E-6	IMPLEMENTATION	5.517234497528786E-8	DEFECT	3.1045410110097617E-8	DOCUMENTATION	1.1207166700240831E-8	TEST
// Create the join element under the from element.	WITHOUT_CLASSIFICATION	0.9999876160920015	WITHOUT_CLASSIFICATION	1.1570156753999034E-5	DESIGN	4.5413153062949874E-7	DEFECT	2.156147495596289E-7	IMPLEMENTATION	1.0406453505383407E-7	DOCUMENTATION	3.994042919694249E-8	TEST
// all DistinctRootEntityResultTransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999937470505846	WITHOUT_CLASSIFICATION	6.153727493914566E-6	DESIGN	6.752695240900524E-8	IMPLEMENTATION	1.680192608347599E-8	DEFECT	9.964911756644392E-9	DOCUMENTATION	4.928131096650725E-9	TEST
// map of EntityMode -> Tuplizer	WITHOUT_CLASSIFICATION	0.9999926536861377	WITHOUT_CLASSIFICATION	6.794408941536319E-6	DESIGN	3.063578288413215E-7	DEFECT	1.67656964455058E-7	IMPLEMENTATION	5.298429251905724E-8	DOCUMENTATION	2.490583495160774E-8	TEST
// this is a virtual id property...	WITHOUT_CLASSIFICATION	0.9997740198978627	WITHOUT_CLASSIFICATION	2.1278229603714896E-4	DESIGN	1.1705637319431501E-5	DEFECT	1.0298883356805544E-6	IMPLEMENTATION	2.365285246207451E-7	DOCUMENTATION	2.257519203658745E-7	TEST
//this one needed only for guessEntityMode()	WITHOUT_CLASSIFICATION	0.9985627191450179	WITHOUT_CLASSIFICATION	0.0013234698505344934	DESIGN	4.456460161963991E-5	TEST	2.8938988946665075E-5	IMPLEMENTATION	2.4271888558323222E-5	DEFECT	1.6035525322952264E-5	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999690142315271	WITHOUT_CLASSIFICATION	3.013673431755398E-5	IMPLEMENTATION	5.236994301124585E-7	DEFECT	2.5467894291309583E-7	DESIGN	4.039348977426959E-8	TEST	3.02622925094975E-8	DOCUMENTATION
// todo : move this to SF per HHH-3517; also see HHH-1907 and ComponentMetamodel	WITHOUT_CLASSIFICATION	0.8134070685646898	WITHOUT_CLASSIFICATION	0.1865926433627542	DESIGN	1.5416631787768026E-7	DEFECT	1.067541642888005E-7	DOCUMENTATION	2.6759988257048012E-8	TEST	3.92085657899183E-10	IMPLEMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999918343507089	WITHOUT_CLASSIFICATION	7.808248361947074E-6	DESIGN	3.1187221078318876E-7	DEFECT	3.16881626710884E-8	TEST	7.015103798697397E-9	IMPLEMENTATION	6.825451796385219E-9	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9997893315805869	WITHOUT_CLASSIFICATION	1.549351409105832E-4	DESIGN	4.472944772199644E-5	DEFECT	8.063803897206194E-6	IMPLEMENTATION	2.2084317773378144E-6	DOCUMENTATION	7.315951059886066E-7	TEST
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999269219563286	WITHOUT_CLASSIFICATION	7.125273110870991E-5	DESIGN	1.141389855081648E-6	IMPLEMENTATION	5.543484479278261E-7	TEST	9.82029617300206E-8	DEFECT	3.137129787274486E-8	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9997893315805869	WITHOUT_CLASSIFICATION	1.549351409105832E-4	DESIGN	4.472944772199644E-5	DEFECT	8.063803897206194E-6	IMPLEMENTATION	2.2084317773378144E-6	DOCUMENTATION	7.315951059886066E-7	TEST
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999997713031381	WITHOUT_CLASSIFICATION	1.6405333708947526E-7	DESIGN	3.432293650737494E-8	IMPLEMENTATION	2.4921515620580466E-8	DEFECT	2.9043472375644295E-9	TEST	2.4947253812228416E-9	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999988206898903	WITHOUT_CLASSIFICATION	8.652934166039311E-7	DESIGN	2.2079231472663498E-7	DEFECT	8.739239767114813E-8	TEST	3.85486600237766E-9	IMPLEMENTATION	1.977114535706877E-9	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// cached for efficiency...	WITHOUT_CLASSIFICATION	0.9995191204337994	WITHOUT_CLASSIFICATION	4.796095562279283E-4	DESIGN	6.713745372154171E-7	DOCUMENTATION	3.812054284069856E-7	IMPLEMENTATION	1.1022166134336263E-7	TEST	1.0720834554566611E-7	DEFECT
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
//it was not embedded, so the argument is just an id	WITHOUT_CLASSIFICATION	0.9999428038973873	WITHOUT_CLASSIFICATION	5.2700694791562005E-5	DESIGN	2.125841684056029E-6	DOCUMENTATION	1.352239893440321E-6	TEST	9.903940286071518E-7	DEFECT	2.6932214862687656E-8	IMPLEMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999918343507089	WITHOUT_CLASSIFICATION	7.808248361947074E-6	DESIGN	3.1187221078318876E-7	DEFECT	3.16881626710884E-8	TEST	7.015103798697397E-9	IMPLEMENTATION	6.825451796385219E-9	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999269219563286	WITHOUT_CLASSIFICATION	7.125273110870991E-5	DESIGN	1.141389855081648E-6	IMPLEMENTATION	5.543484479278261E-7	TEST	9.82029617300206E-8	DEFECT	3.137129787274486E-8	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999997713031381	WITHOUT_CLASSIFICATION	1.6405333708947526E-7	DESIGN	3.432293650737494E-8	IMPLEMENTATION	2.4921515620580466E-8	DEFECT	2.9043472375644295E-9	TEST	2.4947253812228416E-9	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.99995716021739	WITHOUT_CLASSIFICATION	3.443423756691488E-5	DESIGN	7.944206724556588E-6	IMPLEMENTATION	2.642709506301451E-7	TEST	1.4819027900330344E-7	DOCUMENTATION	4.887708878013885E-8	DEFECT
//return currentId;	WITHOUT_CLASSIFICATION	0.9999841847341449	WITHOUT_CLASSIFICATION	1.1524277722089378E-5	DESIGN	1.840988724048126E-6	DEFECT	1.78718041672367E-6	IMPLEMENTATION	6.309690370093052E-7	DOCUMENTATION	3.1849955377830646E-8	TEST
//reset the id	WITHOUT_CLASSIFICATION	0.9998462742948546	WITHOUT_CLASSIFICATION	1.459948810962462E-4	IMPLEMENTATION	4.251044895786007E-6	DESIGN	2.142630346029851E-6	TEST	8.767850016696575E-7	DEFECT	4.603638056544921E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
//reset the version	WITHOUT_CLASSIFICATION	0.9999782280057457	WITHOUT_CLASSIFICATION	1.7837391324324147E-5	IMPLEMENTATION	2.2221376419024987E-6	DESIGN	1.2857378515180549E-6	DEFECT	2.4566996773668005E-7	DOCUMENTATION	1.8105746886949818E-7	TEST
// the default is to simply not lazy fetch properties for now...	WITHOUT_CLASSIFICATION	0.999743550706421	WITHOUT_CLASSIFICATION	1.5586287116029084E-4	DESIGN	9.982096391874754E-5	DEFECT	4.651917391559894E-7	IMPLEMENTATION	1.626199050801593E-7	DOCUMENTATION	1.3764685580979345E-7	TEST
// Add the second join, the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.9999970121888816	WITHOUT_CLASSIFICATION	2.4048148669563643E-6	IMPLEMENTATION	2.89247984993455E-7	DESIGN	2.4551807893925764E-7	DOCUMENTATION	2.4165121857275035E-8	DEFECT	2.406506567583489E-8	TEST
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998806279709738	WITHOUT_CLASSIFICATION	1.1804286643147365E-4	DESIGN	5.694714763942851E-7	TEST	3.017375899384294E-7	IMPLEMENTATION	2.908552755352733E-7	DEFECT	1.6709825302888168E-7	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999988206898903	WITHOUT_CLASSIFICATION	8.652934166039311E-7	DESIGN	2.2079231472663498E-7	DEFECT	8.739239767114813E-8	TEST	3.85486600237766E-9	IMPLEMENTATION	1.977114535706877E-9	DOCUMENTATION
// determine the id getter and setter methods from the proxy interface (if any) // determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.9999595925726976	WITHOUT_CLASSIFICATION	3.9279028445551966E-5	DESIGN	1.1228100846321661E-6	DEFECT	2.774040968739147E-9	DOCUMENTATION	2.6984682160916345E-9	TEST	1.1626307155850922E-10	IMPLEMENTATION
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
//not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.9934396570661519	WITHOUT_CLASSIFICATION	0.004356846096884317	DESIGN	0.002194768970524022	DEFECT	5.737693778809318E-6	DOCUMENTATION	2.734850313343517E-6	IMPLEMENTATION	2.553223476774514E-7	TEST
// superclass entity-name	WITHOUT_CLASSIFICATION	0.9999954251533909	WITHOUT_CLASSIFICATION	4.565271915943419E-6	DESIGN	4.775272393832438E-9	DOCUMENTATION	1.8505635012103093E-9	DEFECT	1.7493272878279159E-9	IMPLEMENTATION	1.1995299168054861E-9	TEST
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998806279709738	WITHOUT_CLASSIFICATION	1.1804286643147365E-4	DESIGN	5.694714763942851E-7	TEST	3.017375899384294E-7	IMPLEMENTATION	2.908552755352733E-7	DEFECT	1.6709825302888168E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999993199205585	WITHOUT_CLASSIFICATION	2.6780794213774574E-6	IMPLEMENTATION	1.660777727158303E-6	DESIGN	1.4459067892569273E-6	DEFECT	5.551161170798426E-7	DOCUMENTATION	4.609143600473982E-7	TEST
//init the aliases, after initing the constructornode	WITHOUT_CLASSIFICATION	0.9999839717054921	WITHOUT_CLASSIFICATION	1.4542553015884317E-5	IMPLEMENTATION	9.143582938888978E-7	TEST	4.778729862219659E-7	DESIGN	5.0481637056996247E-8	DOCUMENTATION	4.302857495824083E-8	DEFECT
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998806279709738	WITHOUT_CLASSIFICATION	1.1804286643147365E-4	DESIGN	5.694714763942851E-7	TEST	3.017375899384294E-7	IMPLEMENTATION	2.908552755352733E-7	DEFECT	1.6709825302888168E-7	DOCUMENTATION
// legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.9999961377182258	WITHOUT_CLASSIFICATION	2.917610827468644E-6	DESIGN	9.01642515398003E-7	IMPLEMENTATION	2.5850389344957048E-8	DOCUMENTATION	1.6196562825797883E-8	TEST	9.814791274472109E-10	DEFECT
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999999171310151	WITHOUT_CLASSIFICATION	1.9894929078812784E-8	DEFECT	1.9275510366539736E-8	DESIGN	1.7543351644185583E-8	IMPLEMENTATION	1.6455618451219228E-8	DOCUMENTATION	9.699575446630576E-9	TEST
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999993199205585	WITHOUT_CLASSIFICATION	2.6780794213774574E-6	IMPLEMENTATION	1.660777727158303E-6	DESIGN	1.4459067892569273E-6	DEFECT	5.551161170798426E-7	DOCUMENTATION	4.609143600473982E-7	TEST
//note: this affects the return value!	WITHOUT_CLASSIFICATION	0.9998010693149185	WITHOUT_CLASSIFICATION	1.514833003772076E-4	DEFECT	4.4039311586597035E-5	DESIGN	2.359611633925452E-6	IMPLEMENTATION	8.931382854327612E-7	DOCUMENTATION	1.5532319825589987E-7	TEST
// Need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.9999702716955617	WITHOUT_CLASSIFICATION	2.5198589435661716E-5	IMPLEMENTATION	3.273332755464783E-6	DESIGN	1.1008064210426405E-6	TEST	8.025538979010529E-8	DOCUMENTATION	7.532043620268046E-8	DEFECT
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999982375181747	WITHOUT_CLASSIFICATION	1.4988762573137185E-6	DESIGN	2.3658255905935272E-7	IMPLEMENTATION	1.4797494873407732E-8	DOCUMENTATION	6.477821158760682E-9	DEFECT	5.747692949658389E-9	TEST
// Collection Types:	WITHOUT_CLASSIFICATION	0.9999574148224988	WITHOUT_CLASSIFICATION	2.6309778012155516E-5	DESIGN	1.3736009318005477E-5	DEFECT	1.6750074462504922E-6	IMPLEMENTATION	5.870552703222192E-7	DOCUMENTATION	2.773274543191407E-7	TEST
// convenience methods relating to operations across arrays of types...	WITHOUT_CLASSIFICATION	0.9999989555267108	WITHOUT_CLASSIFICATION	9.797001886853307E-7	DESIGN	3.383067559409363E-8	DEFECT	1.1212162031915862E-8	DOCUMENTATION	1.0665297621738008E-8	TEST	9.064965236865492E-9	IMPLEMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999726842251017	WITHOUT_CLASSIFICATION	2.6969578990778433E-5	DESIGN	2.1996173662418249E-7	DEFECT	1.0301900649586377E-7	IMPLEMENTATION	1.8368284909020473E-8	TEST	4.846879339445092E-9	DOCUMENTATION
//Blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.9999997867718463	WITHOUT_CLASSIFICATION	1.6146869005298968E-7	DESIGN	2.607529303401859E-8	IMPLEMENTATION	9.430543670512247E-9	DEFECT	8.216649369035782E-9	DOCUMENTATION	8.036977513048034E-9	TEST
//value is the entity name	WITHOUT_CLASSIFICATION	0.9999563914313935	WITHOUT_CLASSIFICATION	4.202382157817021E-5	DESIGN	1.1225696815997104E-6	DEFECT	2.208855855984895E-7	DOCUMENTATION	1.6264808781001767E-7	IMPLEMENTATION	7.864367325858128E-8	TEST
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999565967824798	WITHOUT_CLASSIFICATION	1.957485059327897E-5	IMPLEMENTATION	1.3221674631034616E-5	DEFECT	6.352398303615392E-6	DESIGN	2.942473402563728E-6	DOCUMENTATION	1.3118205896865665E-6	TEST
// generate id select fragment and then property select fragment for // each expression, just like generateSelectFragments().	WITHOUT_CLASSIFICATION	0.9999786202678521	WITHOUT_CLASSIFICATION	1.6954943175195345E-5	DESIGN	3.035861749107282E-6	DEFECT	8.342396183581734E-7	TEST	5.198935891298292E-7	DOCUMENTATION	3.47940162456638E-8	IMPLEMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9749685683683971	WITHOUT_CLASSIFICATION	0.018369560997673815	DESIGN	0.0025515388994754753	IMPLEMENTATION	0.0017555080185570485	DEFECT	0.0015174034730859004	DOCUMENTATION	8.374202428107158E-4	TEST
//xml is the entity name	WITHOUT_CLASSIFICATION	0.9999747701383916	WITHOUT_CLASSIFICATION	2.4409802761410185E-5	DESIGN	3.0338513143941945E-7	DEFECT	1.9351158030172955E-7	TEST	1.7712396256535906E-7	IMPLEMENTATION	1.460381726799186E-7	DOCUMENTATION
//special case ... this is the leaf of the containment graph, even though not immutable	WITHOUT_CLASSIFICATION	0.8751270193454331	WITHOUT_CLASSIFICATION	0.12114448139037035	DESIGN	0.003639823346094441	DEFECT	3.685247138129723E-5	DOCUMENTATION	3.54065234996231E-5	TEST	1.6416923221194284E-5	IMPLEMENTATION
//tolerates nulls	WITHOUT_CLASSIFICATION	0.9999840458973885	WITHOUT_CLASSIFICATION	9.9768536618334E-6	DESIGN	2.538339670159583E-6	TEST	2.3986741027202066E-6	DEFECT	9.587214019841786E-7	IMPLEMENTATION	8.151377467627562E-8	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9997952285283683	WITHOUT_CLASSIFICATION	1.2456570353282532E-4	DEFECT	6.143659105349269E-5	DESIGN	8.711826278358467E-6	TEST	7.343798101826915E-6	IMPLEMENTATION	2.713552665254406E-6	DOCUMENTATION
// metaType is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.9999998377804581	WITHOUT_CLASSIFICATION	9.820372424990578E-8	DESIGN	6.323748988272112E-8	DEFECT	3.7627250896003875E-10	TEST	3.693272678429837E-10	DOCUMENTATION	3.272790887439448E-11	IMPLEMENTATION
// Get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.9999639847044948	WITHOUT_CLASSIFICATION	3.441933608088271E-5	DESIGN	1.4782954319697267E-6	IMPLEMENTATION	1.0382467281259377E-7	DEFECT	9.729293487515229E-9	TEST	4.110026075221137E-9	DOCUMENTATION
// Look through the FromElement's children to find any collections of values that should be fetched...	WITHOUT_CLASSIFICATION	0.9998279301552369	WITHOUT_CLASSIFICATION	1.0809687519007589E-4	IMPLEMENTATION	5.315750737430155E-5	DEFECT	1.0776826894780317E-5	DESIGN	2.3242905619559484E-8	TEST	1.5392398368293586E-8	DOCUMENTATION
//return AssociationType.FOREIGN_KEY_TO_PARENT; //this is better but causes a transient object exception...	WITHOUT_CLASSIFICATION	0.9994884279726142	WITHOUT_CLASSIFICATION	5.080489880547847E-4	DESIGN	1.4801491487773105E-6	DEFECT	1.453325834411232E-6	IMPLEMENTATION	4.687187505626646E-7	TEST	1.2084559740924242E-7	DOCUMENTATION
// Use the lower case function name. // Remember whether we're in a SELECT clause or not.	WITHOUT_CLASSIFICATION	0.9999928951350134	WITHOUT_CLASSIFICATION	5.6972559310636604E-6	DESIGN	1.1484359574591969E-6	DEFECT	2.3023032320888208E-7	IMPLEMENTATION	2.7377931714880157E-8	DOCUMENTATION	1.5648430798720896E-9	TEST
// IDENT might be the name of a class.	WITHOUT_CLASSIFICATION	0.9998298020185963	WITHOUT_CLASSIFICATION	1.7008385413582735E-4	DESIGN	3.742632219588566E-8	DEFECT	3.270027903644634E-8	DOCUMENTATION	2.2440077550530648E-8	IMPLEMENTATION	2.156058908312047E-8	TEST
//TODO!!!	WITHOUT_CLASSIFICATION	0.9360235387633493	WITHOUT_CLASSIFICATION	0.05323028324816145	DESIGN	0.003306083725445704	IMPLEMENTATION	0.0029954272396086694	DEFECT	0.0029830501635244944	DOCUMENTATION	0.0014616168599102498	TEST
//st.setTimestamp( index,  new Timestamp( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9997131405105985	WITHOUT_CLASSIFICATION	2.7497865843971957E-4	DEFECT	7.847145985845877E-6	DESIGN	2.5354665379826973E-6	IMPLEMENTATION	1.0024906888161813E-6	TEST	4.957277492579782E-7	DOCUMENTATION
//st.setDate( index,  new Date( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9998013782906712	WITHOUT_CLASSIFICATION	1.6703161686186188E-4	DEFECT	2.3499852470916357E-5	DESIGN	6.58278974155157E-6	IMPLEMENTATION	1.0057495352054307E-6	DOCUMENTATION	5.01700719112503E-7	TEST
// both are Timestamps	WITHOUT_CLASSIFICATION	0.9999997137157198	WITHOUT_CLASSIFICATION	1.666810287864355E-7	DESIGN	7.40996248518877E-8	TEST	3.808383999254526E-8	IMPLEMENTATION	5.14772988722508E-9	DOCUMENTATION	2.272056737157544E-9	DEFECT
// at least one is a plain old Date	WITHOUT_CLASSIFICATION	0.999822603043561	WITHOUT_CLASSIFICATION	1.6488613839717262E-4	DESIGN	7.50636451497349E-6	IMPLEMENTATION	3.2886884142759172E-6	TEST	1.129159914254431E-6	DEFECT	5.866051984655122E-7	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9997421941405843	WITHOUT_CLASSIFICATION	1.7383685475088375E-4	DESIGN	6.009261517111683E-5	DEFECT	1.0873010870729053E-5	DOCUMENTATION	9.031185069464862E-6	IMPLEMENTATION	3.972193553653619E-6	TEST
// if the corresponding SQL value is NULL, the reader we got is NULL as well	WITHOUT_CLASSIFICATION	0.9999812882351066	WITHOUT_CLASSIFICATION	1.8557626320233556E-5	DEFECT	9.051106690434821E-8	DESIGN	4.894828533491498E-8	TEST	1.0489501547940147E-8	IMPLEMENTATION	4.189719428958092E-9	DOCUMENTATION
// Fetch Reader content up to the end - and put characters in a StringBuffer	WITHOUT_CLASSIFICATION	0.9951768557392019	WITHOUT_CLASSIFICATION	0.0035410425785727282	DESIGN	0.0012745776889812237	IMPLEMENTATION	7.03273707349564E-6	DOCUMENTATION	3.872922954986965E-7	DEFECT	1.0396387513854153E-7	TEST
// Return StringBuffer content as a large String	WITHOUT_CLASSIFICATION	0.9999969692058438	WITHOUT_CLASSIFICATION	1.748387866250218E-6	DESIGN	7.724380871561712E-7	IMPLEMENTATION	4.6852695160139237E-7	DEFECT	3.439634933077443E-8	DOCUMENTATION	7.044901853471413E-9	TEST
//or Types.LONGVARCHAR?	WITHOUT_CLASSIFICATION	0.9998266398324321	WITHOUT_CLASSIFICATION	1.5958550921690094E-4	DESIGN	9.235366386980875E-6	IMPLEMENTATION	2.049896148758417E-6	DOCUMENTATION	1.5698266178036004E-6	TEST	9.19569197262835E-7	DEFECT
//Not called at runtime so doesn't matter if its slow :)	WITHOUT_CLASSIFICATION	0.9997361082609656	WITHOUT_CLASSIFICATION	1.4345043130917933E-4	IMPLEMENTATION	8.227832310167305E-5	DESIGN	2.2354628204319323E-5	DEFECT	1.5448285607119056E-5	TEST	3.6007081212141413E-7	DOCUMENTATION
//TODO	WITHOUT_CLASSIFICATION	0.9978840034058215	WITHOUT_CLASSIFICATION	0.0014840146666467158	DESIGN	2.723868313208358E-4	IMPLEMENTATION	1.620210222693624E-4	DOCUMENTATION	1.0183883116664964E-4	TEST	9.573524277504409E-5	DEFECT
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999965421858374	WITHOUT_CLASSIFICATION	2.2339372000285016E-6	TEST	5.503517229136853E-7	IMPLEMENTATION	4.1200441541627456E-7	DESIGN	2.0054090110707622E-7	DEFECT	6.097992302468518E-8	DOCUMENTATION
//different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.9999396559055321	WITHOUT_CLASSIFICATION	5.8198704548992045E-5	DESIGN	1.1526408524260122E-6	DEFECT	3.537493011271882E-7	IMPLEMENTATION	3.468655275358041E-7	TEST	2.9213423782307195E-7	DOCUMENTATION
//cache this	WITHOUT_CLASSIFICATION	0.9996703880548116	WITHOUT_CLASSIFICATION	3.021161607023047E-4	DESIGN	1.6410717913551514E-5	IMPLEMENTATION	8.25509864181899E-6	DOCUMENTATION	2.4201838218386323E-6	TEST	4.0978410913221775E-7	DEFECT
//only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.9998645569233068	WITHOUT_CLASSIFICATION	8.627745971109195E-5	DEFECT	2.7757568656516663E-5	DESIGN	1.6147830117144108E-5	IMPLEMENTATION	2.9591976501828208E-6	DOCUMENTATION	2.301020558203277E-6	TEST
// Forcefully remove leading ands from where fragments; the grammar will // handle adding them	WITHOUT_CLASSIFICATION	0.9996235087618804	WITHOUT_CLASSIFICATION	3.522672402770454E-4	DESIGN	2.2938564080802758E-5	DEFECT	6.673485053115589E-7	IMPLEMENTATION	4.6725542301114233E-7	TEST	1.5082983326238623E-7	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9512418084070164	WITHOUT_CLASSIFICATION	0.028117067703826625	DESIGN	0.011614180566178004	IMPLEMENTATION	0.003792615991052739	DOCUMENTATION	0.0033245951723843074	DEFECT	0.0019097321595418107	TEST
// Create a new FILTERS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999621207773765	WITHOUT_CLASSIFICATION	3.0486325769834668E-5	IMPLEMENTATION	6.684910081283137E-6	DESIGN	6.801996968102504E-7	DEFECT	1.4544350414871927E-8	DOCUMENTATION	1.3242725264062243E-8	TEST
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999993199205585	WITHOUT_CLASSIFICATION	2.6780794213774574E-6	IMPLEMENTATION	1.660777727158303E-6	DESIGN	1.4459067892569273E-6	DEFECT	5.551161170798426E-7	DOCUMENTATION	4.609143600473982E-7	TEST
//public Object instantiate(Object parent, SessionImplementor session) throws HibernateException;	WITHOUT_CLASSIFICATION	0.8994224874550434	WITHOUT_CLASSIFICATION	0.10049908837836186	DESIGN	6.666034910697074E-5	DEFECT	5.495988666550924E-6	IMPLEMENTATION	4.6749645302497875E-6	TEST	1.5928642908785706E-6	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9999365569171702	WITHOUT_CLASSIFICATION	3.0282140626623935E-5	DESIGN	1.2895706436743695E-5	IMPLEMENTATION	1.2479949440237771E-5	DEFECT	5.660852370393768E-6	DOCUMENTATION	2.124433955820916E-6	TEST
//nothing to do	WITHOUT_CLASSIFICATION	0.9999365569171702	WITHOUT_CLASSIFICATION	3.0282140626623935E-5	DESIGN	1.2895706436743695E-5	IMPLEMENTATION	1.2479949440237771E-5	DEFECT	5.660852370393768E-6	DOCUMENTATION	2.124433955820916E-6	TEST
// VersionType impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //      Note : simply returns null for seed() and next() as the only known //      application of binary types for versioning is for use with the //      TIMESTAMP datatype supported by Sybase and SQL Server, which //      are completely db-generated values...	WITHOUT_CLASSIFICATION	0.9999745779388328	WITHOUT_CLASSIFICATION	1.0556926090938098E-5	DEFECT	9.431553817764909E-6	DESIGN	5.4241803463632706E-6	IMPLEMENTATION	5.873770632707392E-9	DOCUMENTATION	3.5271414492114573E-9	TEST
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999726842251017	WITHOUT_CLASSIFICATION	2.6969578990778433E-5	DESIGN	2.1996173662418249E-7	DEFECT	1.0301900649586377E-7	IMPLEMENTATION	1.8368284909020473E-8	TEST	4.846879339445092E-9	DOCUMENTATION
//not really necessary, I guess...	WITHOUT_CLASSIFICATION	0.9859853682880868	WITHOUT_CLASSIFICATION	0.013823355570913413	DESIGN	1.252483404563472E-4	DEFECT	5.488782148091204E-5	IMPLEMENTATION	9.486546394503344E-6	DOCUMENTATION	1.653432668059623E-6	TEST
//Clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.9999999899999579	WITHOUT_CLASSIFICATION	4.2463094914389535E-9	DESIGN	2.8197315717694604E-9	DEFECT	1.0429504513581341E-9	TEST	9.652878958873135E-10	DOCUMENTATION	9.257626599406452E-10	IMPLEMENTATION
// we do not have to worry about queued additions to uninitialized // collections, since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.999999499958469	WITHOUT_CLASSIFICATION	4.383594964239376E-7	DEFECT	5.7841474717703094E-8	IMPLEMENTATION	2.2236858514326323E-9	DESIGN	9.455828532332832E-10	TEST	6.712911110448963E-10	DOCUMENTATION
// collections cannot be compared	WITHOUT_CLASSIFICATION	0.9999948431552429	WITHOUT_CLASSIFICATION	4.398293841190228E-6	DESIGN	4.1295955311156E-7	IMPLEMENTATION	3.408730317575155E-7	DEFECT	4.215860655452034E-9	TEST	5.024703327113316E-10	DOCUMENTATION
//remember the uk value	WITHOUT_CLASSIFICATION	0.9998589064883343	WITHOUT_CLASSIFICATION	1.156406999943664E-4	DESIGN	1.5596133661625914E-5	IMPLEMENTATION	6.072552811964976E-6	DEFECT	2.0054807061851036E-6	TEST	1.7786444916649521E-6	DOCUMENTATION
//NOOP	WITHOUT_CLASSIFICATION	0.9997969347390054	WITHOUT_CLASSIFICATION	1.6628616848218412E-4	DESIGN	1.3547508597594716E-5	IMPLEMENTATION	9.335601785689087E-6	DOCUMENTATION	6.993865952696187E-6	DEFECT	6.902116176460863E-6	TEST
//processCollectionProperty(token, q.getCollectionPersister(collectionRole), collectionName);	WITHOUT_CLASSIFICATION	0.999997922922836	WITHOUT_CLASSIFICATION	1.0627799100709007E-6	DEFECT	9.193178468224971E-7	DESIGN	8.379968424912405E-8	TEST	1.0208858625348522E-8	DOCUMENTATION	9.70864238194636E-10	IMPLEMENTATION
//we must use the "remembered" uk value, since it is  //not available from the EntityEntry during assembly	WITHOUT_CLASSIFICATION	0.9989285344136924	WITHOUT_CLASSIFICATION	0.0010672383916458137	DESIGN	2.930052128145745E-6	TEST	1.2548154979608837E-6	DEFECT	2.244956109477238E-8	DOCUMENTATION	1.987747452254148E-8	IMPLEMENTATION
// collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.9999916808655971	WITHOUT_CLASSIFICATION	7.983218728495615E-6	DESIGN	2.1093404620303068E-7	IMPLEMENTATION	1.1566953629990877E-7	DEFECT	5.915361626117537E-9	DOCUMENTATION	3.3967303459872536E-9	TEST
// return false;	WITHOUT_CLASSIFICATION	0.9999969478124004	WITHOUT_CLASSIFICATION	2.7666213326447507E-6	DESIGN	1.807798626501677E-7	DEFECT	9.208326351720441E-8	IMPLEMENTATION	8.758078625012168E-9	DOCUMENTATION	3.945062145545747E-9	TEST
// This just handles a particular case of component // projection, perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.8257805549985024	WITHOUT_CLASSIFICATION	0.17294463835718346	DESIGN	0.0012640923459551177	DEFECT	9.913170878934942E-6	IMPLEMENTATION	5.860705912355341E-7	TEST	2.1505688883033847E-7	DOCUMENTATION
//NOTE: we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.9999984401108349	WITHOUT_CLASSIFICATION	9.484632550634824E-7	DESIGN	4.346248803275542E-7	DEFECT	1.5648636774284424E-7	TEST	1.9854102446465405E-8	DOCUMENTATION	4.6055960972647156E-10	IMPLEMENTATION
// the key is the owning entity itself, so get the ID from the key	WITHOUT_CLASSIFICATION	0.9999928371495087	WITHOUT_CLASSIFICATION	7.0555051291001175E-6	DESIGN	3.6231195665746735E-8	TEST	3.543507323710994E-8	IMPLEMENTATION	2.7174571108618452E-8	DEFECT	8.504522144369477E-9	DOCUMENTATION
// if the original is a PersistentCollection, and that original // was not flagged as dirty, then reset the target's dirty flag // here after the copy operation. // </p> // One thing to be careful of here is a "bare" original collection // in which case we should never ever ever reset the dirty flag // on the target because we simply do not know...	WITHOUT_CLASSIFICATION	0.9999999688106324	WITHOUT_CLASSIFICATION	2.9072035321143772E-8	DEFECT	2.0577698316384122E-9	IMPLEMENTATION	3.455191794291007E-11	TEST	1.8273776078250676E-11	DESIGN	6.736908863595921E-12	DOCUMENTATION
//ignore subselect keywords	WITHOUT_CLASSIFICATION	0.999999908465135	WITHOUT_CLASSIFICATION	4.008455174009772E-8	DEFECT	3.6983297118860335E-8	IMPLEMENTATION	7.407431193831389E-9	DESIGN	5.0008706576572404E-9	DOCUMENTATION	2.0587142415653736E-9	TEST
// copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.9999999961863526	WITHOUT_CLASSIFICATION	2.911249219613115E-9	DESIGN	6.368125978096994E-10	DEFECT	2.0631812441527682E-10	IMPLEMENTATION	3.9367525692244954E-11	DOCUMENTATION	1.9899984666328726E-11	TEST
// for a null target, or a target which is the same as the original, we // need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.9999705672723486	WITHOUT_CLASSIFICATION	2.9294967497443354E-5	DESIGN	1.2331198868402473E-7	DEFECT	1.277090399483732E-8	DOCUMENTATION	9.37166528800189E-10	TEST	7.400947935828141E-10	IMPLEMENTATION
// by default just use an unanticipated capacity since we don't // know how to extract the capacity to use from original here...	WITHOUT_CLASSIFICATION	0.9894849957459969	WITHOUT_CLASSIFICATION	0.010455798930336851	DESIGN	5.747457000949935E-5	IMPLEMENTATION	1.0235143737507104E-6	DEFECT	5.901889892174585E-7	DOCUMENTATION	1.1705029375534119E-7	TEST
// get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.9999814648589759	WITHOUT_CLASSIFICATION	1.7343365873129123E-5	IMPLEMENTATION	7.829053928744425E-7	DESIGN	3.978947677363963E-7	DEFECT	5.632299102944947E-9	DOCUMENTATION	5.3426913379500765E-9	TEST
// check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.9999048444165771	WITHOUT_CLASSIFICATION	4.717434081570675E-5	IMPLEMENTATION	2.3947201133097922E-5	DESIGN	2.3416789428386665E-5	DEFECT	3.6526440190752656E-7	DOCUMENTATION	2.5198764377057673E-7	TEST
// check if it is already completely loaded, but unowned	WITHOUT_CLASSIFICATION	0.9998385743070851	WITHOUT_CLASSIFICATION	1.6069102231663733E-4	IMPLEMENTATION	4.6553724789676113E-7	DEFECT	1.8645855508879459E-7	DESIGN	7.869602650692974E-8	TEST	3.978768847815018E-9	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999999842083157	WITHOUT_CLASSIFICATION	1.4694802274422274E-8	DEFECT	5.286677535321487E-10	IMPLEMENTATION	3.5010893086064744E-10	DOCUMENTATION	1.731921256570362E-10	DESIGN	4.491323944777978E-11	TEST
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9512418084070164	WITHOUT_CLASSIFICATION	0.028117067703826625	DESIGN	0.011614180566178004	IMPLEMENTATION	0.003792615991052739	DOCUMENTATION	0.0033245951723843074	DEFECT	0.0019097321595418107	TEST
// create a new collection wrapper, to be initialized later	WITHOUT_CLASSIFICATION	0.999742657718391	WITHOUT_CLASSIFICATION	2.5002242793962614E-4	DESIGN	4.6415903987460995E-6	DEFECT	2.474176175488456E-6	IMPLEMENTATION	1.275284957814872E-7	TEST	7.65585993220303E-8	DOCUMENTATION
// Some JDBC drivers erroneously return an empty array here for a null DB value :/	WITHOUT_CLASSIFICATION	0.9988509691539385	WITHOUT_CLASSIFICATION	0.0011340565807701614	DESIGN	1.4669852640282236E-5	DEFECT	2.8156149156038323E-7	IMPLEMENTATION	2.101734043543593E-8	DOCUMENTATION	1.8338191713710918E-9	TEST
// our column span is the number of columns in the PK	WITHOUT_CLASSIFICATION	0.999999967023178	WITHOUT_CLASSIFICATION	2.4264266221917233E-8	DEFECT	8.17461569571881E-9	DESIGN	3.3709523073431253E-10	DOCUMENTATION	1.0211525935277113E-10	IMPLEMENTATION	9.872947111172354E-11	TEST
//cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.9999867120670936	WITHOUT_CLASSIFICATION	1.0398628752575312E-5	DEFECT	1.0155824382754552E-6	DESIGN	6.958798510950164E-7	IMPLEMENTATION	6.343701483901048E-7	DOCUMENTATION	5.434717160886136E-7	TEST
// we already know current is not null...	WITHOUT_CLASSIFICATION	0.9962241308795171	WITHOUT_CLASSIFICATION	0.0028937688578320854	DEFECT	7.977771748521323E-4	IMPLEMENTATION	6.87921841129071E-5	DESIGN	1.4709600561207751E-5	DOCUMENTATION	8.213031245404558E-7	TEST
// the ids are fully resolved, so compare them with isDirty(), not isModified()	WITHOUT_CLASSIFICATION	0.9999981801825477	WITHOUT_CLASSIFICATION	1.0983772576680872E-6	IMPLEMENTATION	4.7074970936012824E-7	DESIGN	2.411479640897085E-7	DEFECT	9.03155012966623E-9	TEST	5.109708993089113E-10	DOCUMENTATION
//the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.9999988980521101	WITHOUT_CLASSIFICATION	5.281576028234125E-7	DEFECT	3.016958675259668E-7	TEST	1.4476023486829774E-7	IMPLEMENTATION	8.09774445164395E-8	DOCUMENTATION	4.635674028599998E-8	DESIGN
// ----------------------------------------------------------- Constructors	WITHOUT_CLASSIFICATION	0.9999988896086274	WITHOUT_CLASSIFICATION	6.017750226135965E-7	DESIGN	3.4618853926396876E-7	IMPLEMENTATION	9.59461006273895E-8	DEFECT	3.9594701144144525E-8	TEST	2.688700880275841E-8	DOCUMENTATION
// ----------------------------------------------------- Instance Variables	WITHOUT_CLASSIFICATION	0.9999956279787	WITHOUT_CLASSIFICATION	3.170067458096194E-6	DESIGN	1.0191727268286838E-6	IMPLEMENTATION	1.0529273807590747E-7	DEFECT	4.571259444684278E-8	DOCUMENTATION	3.177578258765321E-8	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// --------------------------------------------------------- Public Methods	WITHOUT_CLASSIFICATION	0.9998423504095971	WITHOUT_CLASSIFICATION	1.5701929546189778E-4	DESIGN	2.1821287568549828E-7	DOCUMENTATION	2.1494706875817568E-7	IMPLEMENTATION	1.28143550261225E-7	DEFECT	6.899144623567284E-8	TEST
// Compare the two maps for equality	WITHOUT_CLASSIFICATION	0.9999988580014929	WITHOUT_CLASSIFICATION	9.891324874734073E-7	DESIGN	1.1549678742740983E-7	IMPLEMENTATION	2.1420129004793708E-8	DEFECT	1.1641408052247628E-8	TEST	4.307695154977751E-9	DOCUMENTATION
// Simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.9999945871233454	WITHOUT_CLASSIFICATION	3.812358899327166E-6	TEST	1.4430601887584655E-6	DEFECT	1.4693956764385233E-7	DOCUMENTATION	7.047018296478938E-9	IMPLEMENTATION	3.4709804870667595E-9	DESIGN
//Sybase fail if we don't do that, sigh...	WITHOUT_CLASSIFICATION	0.9895951531479051	WITHOUT_CLASSIFICATION	0.009869272495342458	DESIGN	4.695467557006281E-4	DEFECT	3.461869032772494E-5	TEST	2.839648381982789E-5	DOCUMENTATION	3.0124269044538893E-6	IMPLEMENTATION
// Handles things like: // a and b or c // a and ( b or c ) // not a and not b // not ( a and b ) // x between y and z            (overloaded "and") // x in ( a, b, c )             (overloaded brackets) // not not a // a is not null                (overloaded "not") // etc...... // and expressions like // foo = bar                    (maps to: foo.id = bar.id) // foo.Bar = 'foo'              (maps to: foo.bar = 'foo') // foo.Bar.Baz = 1.0            (maps to: foo.bar = bar.id and bar.baz = 1.0) // 1.0 = foo.Bar.Baz            (maps to: bar.baz = 1.0 and foo.Bar = bar.id) // foo.Bar.Baz = a.B.C          (maps to: bar.Baz = b.C and foo.Bar = bar.id and a.B = b.id) // foo.Bar.Baz + a.B.C          (maps to: bar.Baz + b.C and foo.Bar = bar.id and a.B = b.id) // ( foo.Bar.Baz + 1.0 ) < 2.0  (maps to: ( bar.Baz + 1.0 ) < 2.0 and foo.Bar = bar.id)	WITHOUT_CLASSIFICATION	0.7181851069879812	DESIGN	0.24216404388187476	WITHOUT_CLASSIFICATION	0.03963883811480747	DEFECT	9.349857634128859E-6	TEST	1.6111231105994068E-6	DOCUMENTATION	1.0500345919113781E-6	IMPLEMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999983211257112	WITHOUT_CLASSIFICATION	1.2238933317034277E-6	DESIGN	4.465349501403588E-7	IMPLEMENTATION	7.324739067596132E-9	DOCUMENTATION	9.657357811682314E-10	TEST	1.5553212813254796E-10	DEFECT
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999983211257112	WITHOUT_CLASSIFICATION	1.2238933317034277E-6	DESIGN	4.465349501403588E-7	IMPLEMENTATION	7.324739067596132E-9	DOCUMENTATION	9.657357811682314E-10	TEST	1.5553212813254796E-10	DEFECT
// try to "pretty print" it	WITHOUT_CLASSIFICATION	0.999999341575668	WITHOUT_CLASSIFICATION	4.1886351177337836E-7	DEFECT	1.3320912946308218E-7	DESIGN	6.935112113659767E-8	IMPLEMENTATION	2.7613768606666964E-8	DOCUMENTATION	9.386801000440051E-9	TEST
// otherwise, just dump it	WITHOUT_CLASSIFICATION	0.999847003122424	WITHOUT_CLASSIFICATION	1.102588619750368E-4	DESIGN	4.10415292223868E-5	IMPLEMENTATION	1.4138685695110967E-6	TEST	1.5104896703729513E-7	DOCUMENTATION	1.3156884198827912E-7	DEFECT
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9999967201292956	WITHOUT_CLASSIFICATION	2.8089051476474716E-6	DESIGN	2.5983288763871346E-7	DEFECT	1.9224095809375052E-7	DOCUMENTATION	1.8016503273953387E-8	TEST	8.75207669443617E-10	IMPLEMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9999967201292956	WITHOUT_CLASSIFICATION	2.8089051476474716E-6	DESIGN	2.5983288763871346E-7	DEFECT	1.9224095809375052E-7	DOCUMENTATION	1.8016503273953387E-8	TEST	8.75207669443617E-10	IMPLEMENTATION
// use default behavior	WITHOUT_CLASSIFICATION	0.9999507609390708	WITHOUT_CLASSIFICATION	4.9158618455476324E-5	DESIGN	3.0018791697468715E-8	DEFECT	2.6218271239997826E-8	IMPLEMENTATION	2.098270835085202E-8	DOCUMENTATION	3.222702502232507E-9	TEST
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9994235056950334	WITHOUT_CLASSIFICATION	5.23319274831345E-4	DESIGN	3.090274564467328E-5	DEFECT	2.0823493723546188E-5	IMPLEMENTATION	1.102783820795892E-6	DOCUMENTATION	3.460069463251172E-7	TEST
// the MRU cache used to keep hard references to the most recently used query plans; // note : LRU here is a bit of a misnomer, it indicates that LRU entries are removed, the // actual kept entries are the MRU entries	WITHOUT_CLASSIFICATION	0.7132020586792369	WITHOUT_CLASSIFICATION	0.19856263273116762	IMPLEMENTATION	0.08823438341112955	DESIGN	4.150709531605449E-7	TEST	3.46556394719119E-7	DEFECT	1.6355111802684275E-7	DOCUMENTATION
// we want to be able to just use the defaults, // if JNDI environment properties are not supplied // so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.9973885469336924	WITHOUT_CLASSIFICATION	0.0026112146195152266	DESIGN	1.2651454801210126E-7	TEST	1.0303277988073197E-7	DOCUMENTATION	8.159179882373772E-9	IMPLEMENTATION	7.402846835159955E-10	DEFECT
// Clone //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999992258344366	WITHOUT_CLASSIFICATION	4.3773287094298746E-7	DEFECT	2.3827239856029458E-7	DESIGN	3.9023642943291066E-8	TEST	3.004608606438539E-8	DOCUMENTATION	2.909056496247564E-8	IMPLEMENTATION
// Serialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999990701559568	WITHOUT_CLASSIFICATION	5.528222635472217E-7	IMPLEMENTATION	2.1668510142465182E-7	DESIGN	9.71090748925388E-8	DEFECT	3.178896111696927E-8	DOCUMENTATION	3.1438642376597876E-8	TEST
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999997362989753	WITHOUT_CLASSIFICATION	1.5093523736492372E-7	DEFECT	1.0750976031238953E-7	DESIGN	3.5972236839510976E-9	DOCUMENTATION	8.531014174937112E-10	TEST	8.057017980686488E-10	IMPLEMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999997362989753	WITHOUT_CLASSIFICATION	1.5093523736492372E-7	DEFECT	1.0750976031238953E-7	DESIGN	3.5972236839510976E-9	DOCUMENTATION	8.531014174937112E-10	TEST	8.057017980686488E-10	IMPLEMENTATION
// Deserialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999987671410052	WITHOUT_CLASSIFICATION	1.092182548054136E-6	IMPLEMENTATION	6.192050623663337E-8	TEST	4.0532173486761334E-8	DESIGN	2.1591524818472137E-8	DEFECT	1.663224228984455E-8	DOCUMENTATION
/* static methods only - hide constructor */	WITHOUT_CLASSIFICATION	0.9999946025270302	WITHOUT_CLASSIFICATION	3.264172401325355E-6	DESIGN	1.9444583495791314E-6	IMPLEMENTATION	1.4364684820069995E-7	DEFECT	2.785168741202074E-8	DOCUMENTATION	1.7343683384183888E-8	TEST
/*&& !('_'==character)*/	WITHOUT_CLASSIFICATION	0.9999982067931709	WITHOUT_CLASSIFICATION	1.2073946729288642E-6	DESIGN	3.1028339386212646E-7	IMPLEMENTATION	1.2399037549887546E-7	DOCUMENTATION	1.1006512972057754E-7	TEST	4.1473257076507916E-8	DEFECT
// returnign null!	WITHOUT_CLASSIFICATION	0.9999969928302144	WITHOUT_CLASSIFICATION	2.0151768309391577E-6	DEFECT	8.088554896259072E-7	DESIGN	1.5733235345906304E-7	IMPLEMENTATION	2.2202525484328497E-8	DOCUMENTATION	3.6025862264499145E-9	TEST
// returnign null!	WITHOUT_CLASSIFICATION	0.9999969928302144	WITHOUT_CLASSIFICATION	2.0151768309391577E-6	DEFECT	8.088554896259072E-7	DESIGN	1.5733235345906304E-7	IMPLEMENTATION	2.2202525484328497E-8	DOCUMENTATION	3.6025862264499145E-9	TEST
// includes last '.'	WITHOUT_CLASSIFICATION	0.9999994192391758	WITHOUT_CLASSIFICATION	2.8056673287114473E-7	DESIGN	1.9953862439056817E-7	DEFECT	5.569093522040963E-8	TEST	3.769986343018592E-8	DOCUMENTATION	7.264668365128865E-9	IMPLEMENTATION
// +1 to include the following '.'	WITHOUT_CLASSIFICATION	0.9998915158754482	WITHOUT_CLASSIFICATION	8.213747707003882E-5	DEFECT	1.6062600379944392E-5	IMPLEMENTATION	9.122175192971011E-6	DESIGN	1.0136580759421209E-6	DOCUMENTATION	1.4821383281828947E-7	TEST
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9999964346285916	WITHOUT_CLASSIFICATION	3.257354175287578E-6	DESIGN	2.260951398872489E-7	DEFECT	6.067793927536362E-8	IMPLEMENTATION	1.9573862993657897E-8	TEST	1.6702910276323029E-9	DOCUMENTATION
// first time we find match!	WITHOUT_CLASSIFICATION	0.9999999019861601	WITHOUT_CLASSIFICATION	4.5902759455661066E-8	DESIGN	2.4779502563927234E-8	IMPLEMENTATION	1.3606614674927572E-8	TEST	1.0568985223222578E-8	DOCUMENTATION	3.155978065553766E-9	DEFECT
// entityNames may now include slashes for the representations //classname may be an inner class	WITHOUT_CLASSIFICATION	0.9998130897785836	WITHOUT_CLASSIFICATION	1.8687323171074133E-4	DESIGN	1.545395122756377E-8	DOCUMENTATION	1.2814679224953044E-8	IMPLEMENTATION	5.534784647702898E-9	DEFECT	3.186290553191805E-9	TEST
// wrapped iterators	WITHOUT_CLASSIFICATION	0.9999962166534567	WITHOUT_CLASSIFICATION	3.63814743722194E-6	DESIGN	5.3601962040818214E-8	IMPLEMENTATION	5.31277819960899E-8	TEST	3.2324674355376725E-8	DEFECT	6.144687666420353E-9	DOCUMENTATION
// index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.9999845705176997	WITHOUT_CLASSIFICATION	1.232150048086691E-5	DESIGN	2.9058991443543497E-6	DEFECT	8.5125949703997E-8	TEST	6.474487797741088E-8	DOCUMENTATION	5.2211847355555664E-8	IMPLEMENTATION
// the current iterator	WITHOUT_CLASSIFICATION	0.9999966861894847	WITHOUT_CLASSIFICATION	3.013779419563392E-6	DESIGN	1.573433473591994E-7	IMPLEMENTATION	5.881072731467836E-8	TEST	5.269634537357414E-8	DOCUMENTATION	3.118067573262656E-8	DEFECT
// the last used iterator	WITHOUT_CLASSIFICATION	0.9999935887916599	WITHOUT_CLASSIFICATION	6.374934190259926E-6	DESIGN	3.0318012663815986E-8	TEST	3.271796830359464E-9	IMPLEMENTATION	1.4506309644605588E-9	DOCUMENTATION	1.2337093833935796E-9	DEFECT
//it was a boolean expression	WITHOUT_CLASSIFICATION	0.9999076152282665	WITHOUT_CLASSIFICATION	4.698610377683753E-5	DEFECT	4.50733695892771E-5	DESIGN	1.831684515344136E-7	TEST	9.374212091342398E-8	DOCUMENTATION	4.8387795015835996E-8	IMPLEMENTATION
/*public static Object[] clone(Class elementClass, Object[] array) {	WITHOUT_CLASSIFICATION	0.9999595767525397	WITHOUT_CLASSIFICATION	4.015980428697476E-5	DESIGN	1.6369424572417346E-7	DEFECT	7.90692027645619E-8	DOCUMENTATION	1.4609586028506967E-8	IMPLEMENTATION	6.070138669013272E-9	TEST
// call this before any Iterator method to make sure that the current Iterator // is not exhausted	WITHOUT_CLASSIFICATION	0.9989778379350823	WITHOUT_CLASSIFICATION	9.058473900396527E-4	DESIGN	1.0304681499632401E-4	DEFECT	9.931646740235975E-6	IMPLEMENTATION	3.169632468839137E-6	TEST	1.6658067267648594E-7	DOCUMENTATION
//doable if needed	WITHOUT_CLASSIFICATION	0.9894536112822208	WITHOUT_CLASSIFICATION	0.008194596112102808	IMPLEMENTATION	0.0020797548137769257	DESIGN	2.440155962215577E-4	TEST	2.2570074731116863E-5	DOCUMENTATION	5.452120946719686E-6	DEFECT
// set last used iterator here, in case the user calls remove // before calling hasNext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.9993910656962688	WITHOUT_CLASSIFICATION	6.068951578124511E-4	DESIGN	1.5340108595537895E-6	DEFECT	4.429490186515221E-7	TEST	5.92806480107504E-8	IMPLEMENTATION	2.9053926149546277E-9	DOCUMENTATION
// peek ahead	WITHOUT_CLASSIFICATION	0.9999918323575681	WITHOUT_CLASSIFICATION	7.413824389632748E-6	IMPLEMENTATION	4.2911636671247675E-7	DESIGN	2.1026889602781038E-7	DOCUMENTATION	7.223244128350015E-8	DEFECT	4.2200338246083846E-8	TEST
// if we reach the end of the string w/o finding the // matching end, that is an exception	WITHOUT_CLASSIFICATION	0.9999992829543034	WITHOUT_CLASSIFICATION	6.523307943987957E-7	DEFECT	5.022249720549447E-8	DESIGN	1.1565976630381776E-8	TEST	2.0925066162163283E-9	IMPLEMENTATION	8.339219008021572E-10	DOCUMENTATION
// we have a placeholder, spin forward till we find the end	WITHOUT_CLASSIFICATION	0.9993511940839045	WITHOUT_CLASSIFICATION	5.546053302780192E-4	IMPLEMENTATION	8.907843343645597E-5	DESIGN	3.647712794869624E-6	DEFECT	1.4111340432906797E-6	DOCUMENTATION	6.33055427937868E-8	TEST
// make sure spinning forward did not put us past the end of the buffer...	WITHOUT_CLASSIFICATION	0.9999780318653102	WITHOUT_CLASSIFICATION	1.836532844191382E-5	DESIGN	2.0293009582466023E-6	IMPLEMENTATION	1.1379033096498644E-6	DEFECT	4.1663980889416376E-7	TEST	1.8962171031416078E-8	DOCUMENTATION
// First, try to locate this resource through the current // context classloader.	WITHOUT_CLASSIFICATION	0.9999956613225344	WITHOUT_CLASSIFICATION	4.053815592324186E-6	DESIGN	1.611184615056095E-7	IMPLEMENTATION	8.821683863789716E-8	DOCUMENTATION	2.6764965991826083E-8	TEST	8.761607199320322E-9	DEFECT
// Next, try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.9999950357985854	WITHOUT_CLASSIFICATION	4.946194783640775E-6	DESIGN	1.0901128393007115E-8	TEST	5.0279704764988005E-9	DOCUMENTATION	1.1931251377352596E-9	IMPLEMENTATION	8.844069681322009E-10	DEFECT
// Next, try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.999988367189332	WITHOUT_CLASSIFICATION	1.1531597507005067E-5	DESIGN	3.948815491744823E-8	TEST	2.6490039863164773E-8	DEFECT	1.9255801617666123E-8	DOCUMENTATION	1.5979164490270928E-8	IMPLEMENTATION
// Anywhere else we should look?	WITHOUT_CLASSIFICATION	0.9997251532239184	WITHOUT_CLASSIFICATION	2.686471334208876E-4	DESIGN	4.855864347302627E-6	DEFECT	1.0610271806542269E-6	IMPLEMENTATION	1.7409483595765953E-7	DOCUMENTATION	1.0865629684466339E-7	TEST
// would need an IdentitySet for this!	WITHOUT_CLASSIFICATION	0.9990072281455793	WITHOUT_CLASSIFICATION	9.750522818119818E-4	DESIGN	1.302089755013301E-5	TEST	3.0692141859259674E-6	DOCUMENTATION	1.3885218263243165E-6	IMPLEMENTATION	2.409390464405749E-7	DEFECT
//Arrays.asList doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.9999915626673439	WITHOUT_CLASSIFICATION	2.761266851543564E-6	IMPLEMENTATION	2.470293777863053E-6	DESIGN	2.2783396380855176E-6	TEST	6.520010677731249E-7	DOCUMENTATION	2.7543132077913923E-7	DEFECT
//faster?	WITHOUT_CLASSIFICATION	0.9865374188098721	WITHOUT_CLASSIFICATION	0.013422017917050699	DESIGN	2.3959096873984328E-5	TEST	7.432677210995775E-6	IMPLEMENTATION	5.960408713539983E-6	DOCUMENTATION	3.2110902787174714E-6	DEFECT
// the name of a class	WITHOUT_CLASSIFICATION	0.9999887582221927	WITHOUT_CLASSIFICATION	1.1152282405509331E-5	DESIGN	4.4936571543828073E-8	DOCUMENTATION	2.2935809375262647E-8	TEST	1.2229946788623003E-8	DEFECT	9.393074111971441E-9	IMPLEMENTATION
// Its the listener class name	WITHOUT_CLASSIFICATION	0.9999984028211216	WITHOUT_CLASSIFICATION	1.5705955942212187E-6	DESIGN	1.3078990335161927E-8	TEST	6.384142808718243E-9	IMPLEMENTATION	3.7173149383680276E-9	DEFECT	3.4028362022746592E-9	DOCUMENTATION
//allow 9,8,7,6,5,4,3,2,1	WITHOUT_CLASSIFICATION	0.9999316052623115	WITHOUT_CLASSIFICATION	3.526140232872218E-5	DEFECT	2.1291775129759654E-5	DESIGN	9.384291466946905E-6	IMPLEMENTATION	1.3623203102850554E-6	DOCUMENTATION	1.0949484527775353E-6	TEST
// default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.9999998811394809	WITHOUT_CLASSIFICATION	6.623037804382437E-8	IMPLEMENTATION	3.8166514199903684E-8	DESIGN	1.3255008707409113E-8	DOCUMENTATION	6.683256600333687E-10	TEST	5.402926743679067E-10	DEFECT
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999688109981174	WITHOUT_CLASSIFICATION	1.943072805534223E-5	DESIGN	1.1027580936361251E-5	IMPLEMENTATION	5.039893261173835E-7	DEFECT	1.89586498833998E-7	DOCUMENTATION	3.7117066042280757E-8	TEST
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9493129793506092	WITHOUT_CLASSIFICATION	0.050305122448908605	DESIGN	3.7042004967064373E-4	IMPLEMENTATION	5.444256608641585E-6	DOCUMENTATION	3.0904604593445016E-6	DEFECT	2.9434337435048716E-6	TEST
// first, lets determine whether to apply cglib or javassist based instrumentation...	WITHOUT_CLASSIFICATION	0.9999654500093094	WITHOUT_CLASSIFICATION	3.443912948781021E-5	DESIGN	7.801960325281894E-8	DOCUMENTATION	1.403856293648635E-8	TEST	1.2639741788022423E-8	DEFECT	6.163294691927678E-9	IMPLEMENTATION
// Make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.9999981746390891	WITHOUT_CLASSIFICATION	1.6896392337565607E-6	DESIGN	6.578395815792215E-8	DEFECT	6.289225896606534E-8	IMPLEMENTATION	5.356826937262197E-9	DOCUMENTATION	1.6886329193894776E-9	TEST
//entirely optional!!	WITHOUT_CLASSIFICATION	0.999851116001383	WITHOUT_CLASSIFICATION	8.969674578335657E-5	DESIGN	2.8097300347032264E-5	IMPLEMENTATION	2.1486540864051812E-5	DEFECT	9.047038818683553E-6	DOCUMENTATION	5.563728039001511E-7	TEST
// Its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.9999018338218334	WITHOUT_CLASSIFICATION	9.709637091973337E-5	DESIGN	9.289259625773337E-7	IMPLEMENTATION	5.4038203221197624E-8	DEFECT	5.323413250875488E-8	DOCUMENTATION	3.3608948397016416E-8	TEST
//context.unbind(boundName);	WITHOUT_CLASSIFICATION	0.9998477759495287	WITHOUT_CLASSIFICATION	9.400999667212318E-5	DESIGN	2.316882523495765E-5	IMPLEMENTATION	2.2716947946940048E-5	DEFECT	6.552365116719728E-6	DOCUMENTATION	5.775915500527837E-6	TEST
//readResolveObject	WITHOUT_CLASSIFICATION	0.999650113884395	WITHOUT_CLASSIFICATION	3.3945925129412604E-4	DESIGN	3.5972280178778577E-6	DOCUMENTATION	3.456952200887656E-6	DEFECT	1.8221644105620931E-6	TEST	1.550519681487581E-6	IMPLEMENTATION
//cfg.setProperty("hibernate.show_sql", "true");	WITHOUT_CLASSIFICATION	0.9999997425319839	WITHOUT_CLASSIFICATION	1.9194815041127474E-7	DEFECT	4.610821369997472E-8	DESIGN	1.10543258145475E-8	TEST	5.0213262392504965E-9	IMPLEMENTATION	3.335999913088189E-9	DOCUMENTATION
// Defensive, convenience methods	WITHOUT_CLASSIFICATION	0.9999901357376827	WITHOUT_CLASSIFICATION	9.257551060520162E-6	IMPLEMENTATION	2.9704938361619864E-7	DESIGN	2.3714565555572147E-7	DOCUMENTATION	4.857051421948369E-8	TEST	2.3945703341555044E-8	DEFECT
// Create the SessionFactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.999978088653597	WITHOUT_CLASSIFICATION	2.1255987424593434E-5	DESIGN	3.2235196272935815E-7	DEFECT	2.447527355024583E-7	IMPLEMENTATION	4.6505573017900975E-8	DOCUMENTATION	4.174870689423143E-8	TEST
// Make sure you log the exception, as it might be swallowed	WITHOUT_CLASSIFICATION	0.9999134662884867	WITHOUT_CLASSIFICATION	7.999710193368907E-5	DEFECT	5.71963109667885E-6	DESIGN	7.941134057593932E-7	IMPLEMENTATION	1.9993699133991305E-8	TEST	2.871377978899545E-9	DOCUMENTATION
// Begin unit of work	WITHOUT_CLASSIFICATION	0.9978819293760741	WITHOUT_CLASSIFICATION	0.0020407295664149503	DEFECT	6.703770004734189E-5	DESIGN	5.501982902702644E-6	DOCUMENTATION	3.1035697988321173E-6	IMPLEMENTATION	1.6978047620361367E-6	TEST
// Write HTML header	WITHOUT_CLASSIFICATION	0.999997415353474	WITHOUT_CLASSIFICATION	1.435260125812405E-6	DESIGN	9.138223208427554E-7	IMPLEMENTATION	1.343675575564728E-7	DEFECT	6.8432533270746E-8	DOCUMENTATION	3.2763988479030164E-8	TEST
// Handle actions	WITHOUT_CLASSIFICATION	0.9998835085421562	WITHOUT_CLASSIFICATION	8.82367844846794E-5	DESIGN	2.7773020665495265E-5	IMPLEMENTATION	3.2993643606959725E-7	DOCUMENTATION	1.0375194824782867E-7	DEFECT	4.796430933012704E-8	TEST
// Print page	WITHOUT_CLASSIFICATION	0.9999941676049967	WITHOUT_CLASSIFICATION	3.3393432184478477E-6	IMPLEMENTATION	1.5659335185652955E-6	DESIGN	5.614252512411045E-7	DEFECT	2.096351067393965E-7	DOCUMENTATION	1.5605790831231848E-7	TEST
// Write HTML footer	WITHOUT_CLASSIFICATION	0.9999977665345544	WITHOUT_CLASSIFICATION	1.0998189257822885E-6	DESIGN	9.92303254540871E-7	DEFECT	9.374532568959164E-8	IMPLEMENTATION	2.6277374476476197E-8	DOCUMENTATION	2.1320565260355723E-8	TEST
// End unit of work	WITHOUT_CLASSIFICATION	0.9996423477677796	WITHOUT_CLASSIFICATION	3.455961355360827E-4	DEFECT	9.160721401949227E-6	DESIGN	1.700622834778084E-6	IMPLEMENTATION	6.283594297371105E-7	TEST	5.66393017912079E-7	DOCUMENTATION
// Start the session to be used for this request	WITHOUT_CLASSIFICATION	0.9996264031103576	WITHOUT_CLASSIFICATION	3.731479205722677E-4	DESIGN	2.5658660454900987E-7	TEST	7.999711081363044E-8	DEFECT	6.312779591514565E-8	IMPLEMENTATION	4.9257558761396713E-8	DOCUMENTATION
// make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.9999971974726873	WITHOUT_CLASSIFICATION	2.3448335453371754E-6	DESIGN	2.556954244387604E-7	DEFECT	7.527483826705101E-8	DOCUMENTATION	7.26922128833793E-8	IMPLEMENTATION	5.403129169690957E-8	TEST
// pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.999999834034627	WITHOUT_CLASSIFICATION	9.413050092338457E-8	IMPLEMENTATION	2.7888421497485803E-8	DEFECT	2.4443710024691418E-8	DESIGN	1.5046495785566635E-8	TEST	4.456244609182664E-9	DOCUMENTATION
// remove session from "current context"	WITHOUT_CLASSIFICATION	0.9998433706637595	WITHOUT_CLASSIFICATION	1.2392928456601612E-4	DESIGN	3.1496002011397415E-5	DEFECT	8.797416505225617E-7	DOCUMENTATION	2.5221407130604783E-7	IMPLEMENTATION	7.209394124155125E-8	TEST
// Eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.9996728498427997	WITHOUT_CLASSIFICATION	2.2564453542170632E-4	IMPLEMENTATION	1.0015675555487677E-4	DESIGN	8.633777568846893E-7	DEFECT	3.654163243613741E-7	DOCUMENTATION	1.200721425677247E-7	TEST
// If we want to handle it bidirectional and detached, we also need to load this // collection with an eager outer-join fetch, this time with Criteria and not HQL:	WITHOUT_CLASSIFICATION	0.9999838473637449	WITHOUT_CLASSIFICATION	1.551156395849302E-5	DESIGN	4.942411508350262E-7	IMPLEMENTATION	7.986311242540078E-8	TEST	5.9170723872337496E-8	DEFECT	7.797309535710283E-9	DOCUMENTATION
/*        Event anEvent = (Event) session                .createCriteria(Event.class).setFetchMode("participants", FetchMode.JOIN)                .add( Expression.eq("id", eventId) )                .uniqueResult(); // Eager fetch the colleciton so we can use it detached        */	WITHOUT_CLASSIFICATION	0.9999998731367947	WITHOUT_CLASSIFICATION	1.242064436590271E-7	DESIGN	2.1440347487476378E-9	IMPLEMENTATION	2.931785244104192E-10	DEFECT	1.4885705632206365E-10	TEST	7.069119150336326E-11	DOCUMENTATION
// End of first unit of work	WITHOUT_CLASSIFICATION	0.9999418415821173	WITHOUT_CLASSIFICATION	5.312093395833916E-5	DEFECT	3.596093905860556E-6	DESIGN	8.293861057890079E-7	TEST	4.157362826704968E-7	IMPLEMENTATION	1.962676300405141E-7	DOCUMENTATION
// or bidirectional safety method, setting both sides: aPerson.addToEvent(anEvent);	WITHOUT_CLASSIFICATION	0.9996630117571719	WITHOUT_CLASSIFICATION	3.225720607098262E-4	IMPLEMENTATION	1.2839278880670388E-5	DESIGN	1.2636202518511988E-6	DEFECT	1.9505573353344116E-7	DOCUMENTATION	1.182272522204032E-7	TEST
// Begin second unit of work	WITHOUT_CLASSIFICATION	0.9990065048455309	WITHOUT_CLASSIFICATION	7.278482581512402E-4	DEFECT	2.5267148788636504E-4	DESIGN	1.0469556311826889E-5	DOCUMENTATION	1.7766850518724043E-6	IMPLEMENTATION	7.29167067892286E-7	TEST
// Reattachment of aPerson	WITHOUT_CLASSIFICATION	0.9999934142721157	WITHOUT_CLASSIFICATION	4.612910812985912E-6	DESIGN	1.1769933907393675E-6	DEFECT	4.044373070249426E-7	IMPLEMENTATION	3.2332182497457124E-7	DOCUMENTATION	6.806454859912366E-8	TEST
// The getEmailAddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.9995685792616997	WITHOUT_CLASSIFICATION	4.306025188780227E-4	DEFECT	6.207705416981589E-7	IMPLEMENTATION	1.0037853110499433E-7	TEST	7.259082184001643E-8	DESIGN	2.4479527537259135E-8	DOCUMENTATION
// We need our tm, so get it now and avoid doing other work // if there is a problem	WITHOUT_CLASSIFICATION	0.9999943489021067	WITHOUT_CLASSIFICATION	4.553159298612886E-6	DESIGN	6.05761214777075E-7	TEST	4.892068208466726E-7	DEFECT	1.931311494391087E-9	DOCUMENTATION	1.0392475969349432E-9	IMPLEMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999968152284591	WITHOUT_CLASSIFICATION	2.5013205413113278E-6	IMPLEMENTATION	5.103701257670572E-7	DEFECT	1.445472044961679E-7	DESIGN	1.9390801593202234E-8	DOCUMENTATION	9.142867783288446E-9	TEST
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999968152284591	WITHOUT_CLASSIFICATION	2.5013205413113278E-6	IMPLEMENTATION	5.103701257670572E-7	DEFECT	1.445472044961679E-7	DESIGN	1.9390801593202234E-8	DOCUMENTATION	9.142867783288446E-9	TEST
// JBC put a version in the node when it created as part of // some internal operation. We are always newer, but if // the JBC version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.9999998523277503	WITHOUT_CLASSIFICATION	1.0489233032806856E-7	DESIGN	2.3343489001726402E-8	DEFECT	1.3210267606347967E-8	TEST	4.237036287511369E-9	IMPLEMENTATION	1.9891264179987473E-9	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for properties with //                     hibernate-specific overrides to detect and warn about conflicting //                     declarations	WITHOUT_CLASSIFICATION	0.9997441976428328	WITHOUT_CLASSIFICATION	2.546914524154232E-4	DESIGN	4.6233426084935565E-7	TEST	3.109289788471689E-7	IMPLEMENTATION	2.9394630434665326E-7	DOCUMENTATION	4.3695207672724974E-8	DEFECT
// Not null if the Isolation level has been specified in the configuration file. // Otherwise, it is left to the Driver's default value.	WITHOUT_CLASSIFICATION	0.9999965854732619	WITHOUT_CLASSIFICATION	3.0880601544488485E-6	DESIGN	3.0687735994602675E-7	IMPLEMENTATION	9.357847212183508E-9	DOCUMENTATION	8.375106510352129E-9	DEFECT	1.8562699737772712E-9	TEST
// Configured outside of Hibernate (i.e. Servlet container, or Java Bean Container // already has Proxool pools running, and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.999624826220638	WITHOUT_CLASSIFICATION	3.7516974253783494E-4	DESIGN	1.7650842324504027E-9	DEFECT	1.3979928407911928E-9	DOCUMENTATION	8.157375912455635E-10	TEST	5.800957658644334E-11	IMPLEMENTATION
// If you're closing down the ConnectionProvider chances are an // is not a real big deal, just warn	WITHOUT_CLASSIFICATION	0.9999982800573657	WITHOUT_CLASSIFICATION	1.7009248028604797E-6	DEFECT	1.6056708873305265E-8	DESIGN	1.935936655652638E-9	TEST	7.377655065455348E-10	IMPLEMENTATION	2.8742042323195185E-10	DOCUMENTATION
// (AS is always optional, for consistency with SQL/OQL)	WITHOUT_CLASSIFICATION	0.9999525018057746	WITHOUT_CLASSIFICATION	2.5748893683163108E-5	DESIGN	2.068095571186422E-5	IMPLEMENTATION	4.384153458245346E-7	TEST	3.677092270200309E-7	DOCUMENTATION	2.622202576166235E-7	DEFECT
// process the "new" HQL style where aliases are assigned // _after_ the class name or path expression ie. using // the AS construction	WITHOUT_CLASSIFICATION	0.9999999671152088	WITHOUT_CLASSIFICATION	3.257176572984955E-8	DESIGN	1.4640952646958835E-10	DEFECT	1.27565498363793E-10	DOCUMENTATION	1.9806470218517522E-11	TEST	1.924399090730933E-11	IMPLEMENTATION
// the loaded owner will be set to null after the collection is removed, // so capture its value as the affected owner so it is accessible to // both pre- and post- events	WITHOUT_CLASSIFICATION	0.9999999975312855	WITHOUT_CLASSIFICATION	2.2579722886292135E-9	DESIGN	1.2011421419572047E-10	IMPLEMENTATION	8.930681014514836E-11	DEFECT	1.2315604604655805E-12	TEST	8.951354639693388E-14	DOCUMENTATION
// is a primitive type // invokespecial	WITHOUT_CLASSIFICATION	0.9999999881947315	WITHOUT_CLASSIFICATION	7.622742679990943E-9	DESIGN	2.0085285718598973E-9	DEFECT	1.2745904407204087E-9	TEST	7.104832262686261E-10	DOCUMENTATION	1.8892356182162755E-10	IMPLEMENTATION
// array of primitive type // do nothing	WITHOUT_CLASSIFICATION	0.9999999868237113	WITHOUT_CLASSIFICATION	5.222126227795E-9	DESIGN	4.843261156654212E-9	DEFECT	1.50012904270302E-9	DOCUMENTATION	8.081972685882502E-10	IMPLEMENTATION	8.025751019290465E-10	TEST
// handle a path expression or class name that // appears at the start, in the "new" HQL // style or an alias that appears at the start // in the "old" HQL style	WITHOUT_CLASSIFICATION	0.9897217510375113	WITHOUT_CLASSIFICATION	0.010156197894718237	DESIGN	1.2148781472531141E-4	DEFECT	4.301622645843918E-7	IMPLEMENTATION	9.379076726607009E-8	DOCUMENTATION	3.930001347884967E-8	TEST
//handle <=, >=, !=, is not, not between, not in	WITHOUT_CLASSIFICATION	0.9989233454444765	WITHOUT_CLASSIFICATION	0.0010133989236214619	DESIGN	5.41497089992636E-5	DEFECT	3.825026740998503E-6	TEST	3.8019560678186588E-6	IMPLEMENTATION	1.4789400939159243E-6	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999999669314125	WITHOUT_CLASSIFICATION	3.170781376120246E-8	DEFECT	1.2750929844943626E-9	IMPLEMENTATION	3.567191969495505E-11	TEST	2.805439622625543E-11	DESIGN	2.1954497913849893E-11	DOCUMENTATION
// transfer an explicitly defined entity name // handle the lazy attribute	WITHOUT_CLASSIFICATION	0.9999989345264004	WITHOUT_CLASSIFICATION	1.0171205520510763E-6	DESIGN	4.501658468096398E-8	IMPLEMENTATION	1.7982160089877175E-9	TEST	1.4007135398169936E-9	DOCUMENTATION	1.3753327245347408E-10	DEFECT
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999870797266538	WITHOUT_CLASSIFICATION	6.001217150430555E-6	DESIGN	5.806406519289675E-6	IMPLEMENTATION	5.039902060351575E-7	DEFECT	3.4924249430076924E-7	TEST	2.594169762274031E-7	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999870797266538	WITHOUT_CLASSIFICATION	6.001217150430555E-6	DESIGN	5.806406519289675E-6	IMPLEMENTATION	5.039902060351575E-7	DEFECT	3.4924249430076924E-7	TEST	2.594169762274031E-7	DOCUMENTATION
// get meta's from // <joined-subclass>	WITHOUT_CLASSIFICATION	0.9999983356249894	WITHOUT_CLASSIFICATION	1.6562644059186376E-6	DESIGN	6.910691586208026E-9	DEFECT	8.598339893411225E-10	TEST	3.097704160783025E-10	DOCUMENTATION	3.0308699593369393E-11	IMPLEMENTATION
// parameters on the property mapping should // override parameters in the typedef	WITHOUT_CLASSIFICATION	0.9999433233677976	WITHOUT_CLASSIFICATION	4.669996279290854E-5	DEFECT	6.482763478131711E-6	DESIGN	3.3456573695689794E-6	IMPLEMENTATION	1.2745219152327692E-7	TEST	2.0796370307808456E-8	DOCUMENTATION
//fetch="join" overrides default laziness //fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.9999999005147379	WITHOUT_CLASSIFICATION	5.4318434426069844E-8	DESIGN	2.896702003832286E-8	IMPLEMENTATION	6.119023609218529E-9	DOCUMENTATION	5.125099493143916E-9	TEST	4.955684601234253E-9	DEFECT
//NOTE SPECIAL CASE: // default to join and non-lazy for the "second join" // of the many-to-many	WITHOUT_CLASSIFICATION	0.9999987148419516	WITHOUT_CLASSIFICATION	9.734063472089644E-7	DESIGN	2.7480152104766843E-7	DOCUMENTATION	2.296716529982912E-8	DEFECT	1.2873546264768913E-8	IMPLEMENTATION	1.109468425257984E-9	TEST
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999989337029809	WITHOUT_CLASSIFICATION	8.900232506614033E-7	DESIGN	8.581202973935727E-8	DOCUMENTATION	4.043494391981872E-8	DEFECT	3.451234170242802E-8	IMPLEMENTATION	1.5514453102028915E-8	TEST
// state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999968333024094	WITHOUT_CLASSIFICATION	1.2422164454248438E-6	IMPLEMENTATION	1.1556913598942992E-6	DESIGN	2.8646935070113906E-7	DEFECT	2.486343499492964E-7	DOCUMENTATION	2.3368608457458271E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
//element //index -> id	WITHOUT_CLASSIFICATION	0.99997777154773	WITHOUT_CLASSIFICATION	8.985966804811503E-6	IMPLEMENTATION	6.425199537821325E-6	DESIGN	4.331891194011029E-6	DEFECT	1.3657851677256917E-6	TEST	1.1196095657284294E-6	DOCUMENTATION
// note that it might be better to iterate the snapshot but this is safe, // assuming the user implements equals() properly, as required by the Set // contract!	WITHOUT_CLASSIFICATION	0.8107678593701583	WITHOUT_CLASSIFICATION	0.10325567926593485	DEFECT	0.08526914954088059	IMPLEMENTATION	5.105902115698386E-4	DESIGN	1.8733217492251852E-4	TEST	9.389436533930615E-6	DOCUMENTATION
// collections detect changes made via their public interface and mark // themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.9999999371844636	WITHOUT_CLASSIFICATION	5.537262253701166E-8	IMPLEMENTATION	4.645324786793946E-9	DESIGN	1.4173661276851565E-9	DOCUMENTATION	1.2228571761021092E-9	DEFECT	1.5736587460274576E-10	TEST
// essentially, if the real session is closed allow any // method call to pass through since the real session // will complain by throwing an appropriate exception; // NOTE that allowing close() above has the same basic effect, //   but we capture that there simply to perform the unbind...	WITHOUT_CLASSIFICATION	0.9999871664553026	WITHOUT_CLASSIFICATION	1.1333904942501029E-5	DESIGN	1.2717207022324544E-6	DEFECT	2.1077107891727804E-7	IMPLEMENTATION	1.6572734764491986E-8	TEST	5.752391821996498E-10	DOCUMENTATION
// The default SQLExceptionConverter for all dialects is based on SQLState // since SQLErrorCode is extremely vendor-specific.  Specific Dialects // may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.9999997986002358	WITHOUT_CLASSIFICATION	1.9238230923789023E-7	DESIGN	6.063130259859598E-9	DEFECT	2.815310982170367E-9	IMPLEMENTATION	9.80816436691913E-11	DOCUMENTATION	4.093194601685577E-11	TEST
//only necessary for postgre < 7.4 //http://anoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.9999980628160496	WITHOUT_CLASSIFICATION	8.800213148379813E-7	DEFECT	4.534585692944323E-7	DESIGN	4.5044344468352864E-7	DOCUMENTATION	8.959064203875549E-8	TEST	6.366997944615419E-8	IMPLEMENTATION
// select topic, syntax from information_schema.help // where section like 'Function%' order by section, topic // // see also ->  http://www.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.9999998203619538	WITHOUT_CLASSIFICATION	1.6330829685254754E-7	DEFECT	1.2724120204299232E-8	DESIGN	3.3599869710435918E-9	DOCUMENTATION	1.2802678403001546E-10	IMPLEMENTATION	1.1761540365655025E-10	TEST
// registerColumnType(Types.VARBINARY, "CHARACTER($l)"); // registerColumnType(Types.BLOB, "CHARACTER($l)" );  // For use prior to CP 11.0 // registerColumnType(Types.CLOB, "CHARACTER($l)" );	WITHOUT_CLASSIFICATION	0.9999903323098602	WITHOUT_CLASSIFICATION	7.835915792314397E-6	IMPLEMENTATION	1.6903961824414412E-6	DESIGN	7.44562142496527E-8	DEFECT	4.911010039201115E-8	TEST	1.7811850500118503E-8	DOCUMENTATION
//the BLOB type requires a size arguement - this defaults to //bytes - no arg defaults to 1 whole byte! //other argument mods include K - kilobyte, M - megabyte, G - gigabyte. //refer to the PBdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.9252922873427453	WITHOUT_CLASSIFICATION	0.07451831884946698	DESIGN	1.691104821898991E-4	DEFECT	1.5586766627185497E-5	DOCUMENTATION	4.337960707920027E-6	TEST	3.5859826263977695E-7	IMPLEMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9995047251784287	WITHOUT_CLASSIFICATION	4.8143935166647633E-4	DESIGN	1.3753985486419354E-5	DEFECT	5.139409184924533E-8	TEST	1.56079908682217E-8	DOCUMENTATION	1.4482335834037744E-8	IMPLEMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.9755340022101351	WITHOUT_CLASSIFICATION	0.024461188270152298	DESIGN	4.559006671109128E-6	DEFECT	1.5502164491546556E-7	TEST	9.096549945804683E-8	IMPLEMENTATION	4.525897120326856E-9	DOCUMENTATION
// add the comment // nest the main query in an outer select // add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9998645130851871	WITHOUT_CLASSIFICATION	1.2841616304033903E-4	DESIGN	6.559810291741796E-6	TEST	3.7699905392780543E-7	DOCUMENTATION	1.1711283199622502E-7	IMPLEMENTATION	1.6829594876993458E-8	DEFECT
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// Note: For object <-> SQL datatype mappings see: //	WITHOUT_CLASSIFICATION	0.9999300178633006	WITHOUT_CLASSIFICATION	6.684511994708684E-5	DESIGN	2.866173402582052E-6	DEFECT	1.3921566763376295E-7	IMPLEMENTATION	9.433584750656455E-8	TEST	3.729183477747973E-8	DOCUMENTATION
// TRIM(end_keyword string-expression-1 FROM string-expression-2) // use Hibernate implementation "From" is one of the parameters they pass in position ?3 //registerFunction( "trim", new SQLFunctionTemplate(Hibernate.STRING, "trim(?1 ?2 from ?3)") );	WITHOUT_CLASSIFICATION	0.9999999768420417	WITHOUT_CLASSIFICATION	1.6082133325104057E-8	IMPLEMENTATION	4.736576260429742E-9	DEFECT	2.3363210752802976E-9	DESIGN	1.8229545225270824E-12	TEST	1.1048661993454971E-12	DOCUMENTATION
// Whether this dialect has an Identity clause added to the data type or a completely seperate identity // data type	WITHOUT_CLASSIFICATION	0.9999996293089972	WITHOUT_CLASSIFICATION	3.700261419695654E-7	DESIGN	3.981731236890324E-10	IMPLEMENTATION	1.5488761458242953E-10	DEFECT	7.584046306992002E-11	DOCUMENTATION	3.595958782417968E-11	TEST
// According to both the ANSI-SQL and JPA specs, trim takes a variable number of parameters between 1 and 4. // at least one paramer (trimSource) is required.  From the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If <trim specification> is omitted, BOTH is assumed. // If <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999999063107018	WITHOUT_CLASSIFICATION	6.258497997558407E-8	DEFECT	2.481854770755099E-8	DESIGN	4.269355222054698E-9	IMPLEMENTATION	1.1913845018140506E-9	DOCUMENTATION	8.250308008569037E-10	TEST
/////////////////////////////////////////////////////////////////////// // Prepare persisters and link them up with their cache // region/access-strategy	WITHOUT_CLASSIFICATION	0.9999924509676591	WITHOUT_CLASSIFICATION	7.534490748582769E-6	DESIGN	5.28536489817475E-9	DEFECT	3.9979290712515655E-9	TEST	3.6499409788489477E-9	IMPLEMENTATION	1.6083573390137579E-9	DOCUMENTATION
//Named Queries:	WITHOUT_CLASSIFICATION	0.9999632767097594	WITHOUT_CLASSIFICATION	2.9465964060018688E-5	DESIGN	4.291738198211183E-6	IMPLEMENTATION	2.2829008325125585E-6	TEST	3.753234709020595E-7	DEFECT	3.0736367905928524E-7	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9929956791199278	WITHOUT_CLASSIFICATION	0.006745419999331047	DESIGN	1.6058083287074038E-4	DEFECT	9.184058639675307E-5	TEST	4.555711765309687E-6	IMPLEMENTATION	1.9237497082726733E-6	DOCUMENTATION
// does not handle arrays (thats ok, cos they can't be lazy) // or newly instantiated collections, so we can do the cast	WITHOUT_CLASSIFICATION	0.9948670195914663	WITHOUT_CLASSIFICATION	0.004118795679957528	DEFECT	0.0010104314052195025	DESIGN	1.7591438882725614E-6	IMPLEMENTATION	1.201871634991294E-6	TEST	7.92307833478099E-7	DOCUMENTATION
// collection deletions are a special case since update() can add // deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.9999849179089243	WITHOUT_CLASSIFICATION	8.367245741603366E-6	IMPLEMENTATION	6.713250976391668E-6	DEFECT	9.771657954732168E-10	DOCUMENTATION	5.908595467738442E-10	TEST	2.633232061898982E-11	DESIGN
// we can do the cast since orphan-delete does not apply to: // 1. newly instantiated collections // 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.9912129037751999	WITHOUT_CLASSIFICATION	0.006065982098545752	DEFECT	0.001837652839419913	DESIGN	8.771004761999601E-4	IMPLEMENTATION	4.606855114326488E-6	DOCUMENTATION	1.7539555201438222E-6	TEST
// if the natural-id is marked as non-mutable, it is not retrieved during a // normal database-snapshot operation...	WITHOUT_CLASSIFICATION	0.999806732616286	WITHOUT_CLASSIFICATION	1.8090924388355746E-4	IMPLEMENTATION	1.0570804700989834E-5	DEFECT	1.2040432373252658E-6	TEST	5.816710080324892E-7	DESIGN	1.6208838806957518E-9	DOCUMENTATION
// watch out for a case where old is still referenced // somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9999374608121125	WITHOUT_CLASSIFICATION	6.129431197075278E-5	DESIGN	1.0845332070391518E-6	DEFECT	9.832830935437095E-8	DOCUMENTATION	4.918721264888541E-8	IMPLEMENTATION	1.2827187614076093E-8	TEST
//slice, to get the columns for this component //property	WITHOUT_CLASSIFICATION	0.987238303705455	WITHOUT_CLASSIFICATION	0.01276034242806013	DESIGN	8.335029217719686E-7	TEST	3.010110154176314E-7	DOCUMENTATION	1.8404806228532127E-7	DEFECT	3.5304485505781844E-8	IMPLEMENTATION
//int result = 17; //result = 37 * result + type.hashCode(); //result = 37 * result + ( value==null ? 0 : value.hashCode() ); //return result;	WITHOUT_CLASSIFICATION	0.9999995977575858	WITHOUT_CLASSIFICATION	3.7257289964632996E-7	DEFECT	2.4676117540231224E-8	DESIGN	4.125812875507614E-9	IMPLEMENTATION	6.231311653774287E-10	DOCUMENTATION	2.4445298228209076E-10	TEST
// The CollectionEntry.isReached() stuff is just to detect any silly users   // who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.9999881066910093	WITHOUT_CLASSIFICATION	1.1789853005992057E-5	DESIGN	1.0150870911726911E-7	DEFECT	1.194226095629557E-9	IMPLEMENTATION	5.81400088034178E-10	DOCUMENTATION	1.7164922066162583E-10	TEST
// detached collection wrappers that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999877625856316	WITHOUT_CLASSIFICATION	9.691816232314683E-6	DESIGN	1.7261559591511705E-6	DEFECT	8.148810497996293E-7	IMPLEMENTATION	2.624485821175639E-9	TEST	1.9366412608394765E-9	DOCUMENTATION
// The unique property value represented here may or may not be // serializable, so we do an explicit check here in order to generate // a better error message	WITHOUT_CLASSIFICATION	0.9355956258298982	WITHOUT_CLASSIFICATION	0.06053332975570374	DESIGN	0.0038495108543492892	DEFECT	1.0976058572178872E-5	DOCUMENTATION	6.45144517586271E-6	TEST	4.106056300700681E-6	IMPLEMENTATION
// if the version of a newly instantiated object is not the same // as the version seed value, use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999032137605137	WITHOUT_CLASSIFICATION	8.672570728412797E-5	DESIGN	9.971446346654342E-6	DEFECT	7.224418827565465E-8	IMPLEMENTATION	1.0892102837984965E-8	DOCUMENTATION	5.949564457398951E-9	TEST
// ie. we never have to null out a reference to // an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999990930894597	WITHOUT_CLASSIFICATION	9.015235635444892E-7	DESIGN	2.113518390498973E-9	DEFECT	1.6428613402949017E-9	IMPLEMENTATION	1.2192277639743312E-9	DOCUMENTATION	4.113693933241962E-10	TEST
// ignore this row, the collection is in process of // being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.9999978025952457	WITHOUT_CLASSIFICATION	1.7536177256893286E-6	DESIGN	4.3156546468994783E-7	DEFECT	1.0540295650160168E-8	TEST	1.5521678784551599E-9	DOCUMENTATION	1.2910046131553166E-10	IMPLEMENTATION
// Entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // 	WITHOUT_CLASSIFICATION	0.9999990654396673	WITHOUT_CLASSIFICATION	7.669218079268307E-7	DEFECT	8.798700152380905E-8	DESIGN	5.085846741597547E-8	TEST	1.7011601944525892E-8	DOCUMENTATION	1.1781453875117916E-8	IMPLEMENTATION
// should be ok performance-wise to generate new delegate instances for each // request since these are locally stack-scoped.  Besides, it makes the code // much easier to read than the old TransactionHelper stuff...	WITHOUT_CLASSIFICATION	0.9995529598075141	WITHOUT_CLASSIFICATION	4.4695921544993125E-4	DESIGN	7.02335201145305E-8	DEFECT	5.347983762822892E-9	TEST	3.018212020931154E-9	IMPLEMENTATION	2.3773199853074838E-9	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9998540513674734	WITHOUT_CLASSIFICATION	7.805557347254072E-5	IMPLEMENTATION	3.725172410397071E-5	DEFECT	3.002232588595394E-5	DESIGN	3.652690503261451E-7	TEST	2.537400139228438E-7	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9998540513674734	WITHOUT_CLASSIFICATION	7.805557347254072E-5	IMPLEMENTATION	3.725172410397071E-5	DEFECT	3.002232588595394E-5	DESIGN	3.652690503261451E-7	TEST	2.537400139228438E-7	DOCUMENTATION
// wrap up any new collections directly referenced by the object // or its components	WITHOUT_CLASSIFICATION	0.9999993661594796	WITHOUT_CLASSIFICATION	6.305067482461346E-7	DESIGN	1.4518254780560925E-9	IMPLEMENTATION	1.1722812071872003E-9	DEFECT	5.574037971088099E-10	TEST	1.5226170700791465E-10	DOCUMENTATION
// remove any snapshot, not really for memory management purposes, but // rather because it might now be stale, and there is no longer any  // EntityEntry to take precedence // This is now handled by removeEntity() //session.getPersistenceContext().removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9987565068728982	WITHOUT_CLASSIFICATION	9.924826713868325E-4	DESIGN	2.508888014908596E-4	DEFECT	6.981874672245643E-8	DOCUMENTATION	3.305472891213035E-8	IMPLEMENTATION	1.878074845100622E-8	TEST
// skip this check for composite-ids relating to dom4j entity-mode; // alternatively, we could add a check to make sure the incoming id value is // an instance of Element...	WITHOUT_CLASSIFICATION	0.5697716460013155	DESIGN	0.43017279035604117	WITHOUT_CLASSIFICATION	4.518383210304419E-5	IMPLEMENTATION	8.596836966565328E-6	DEFECT	1.6244068978185612E-6	DOCUMENTATION	1.5856667586514215E-7	TEST
// upgrade the lock if necessary: //lock(result, lockMode);	WITHOUT_CLASSIFICATION	0.9999668341323698	WITHOUT_CLASSIFICATION	1.2078236913091924E-5	DEFECT	1.058228270376075E-5	IMPLEMENTATION	1.0189641938281396E-5	DESIGN	1.753675657386275E-7	TEST	1.4033850935863027E-7	DOCUMENTATION
// now, any collections that are initialized // inside this block do not get updated - they // are ignored until the next flush	WITHOUT_CLASSIFICATION	0.9999558876368418	WITHOUT_CLASSIFICATION	3.03931570555545E-5	IMPLEMENTATION	1.150807126333669E-5	DESIGN	2.14132673925736E-6	DEFECT	5.3574595545750715E-8	TEST	1.6233504555102197E-8	DOCUMENTATION
//we must clone embedded composite identifiers, or  //we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.9999368447998693	WITHOUT_CLASSIFICATION	6.28567442381114E-5	DESIGN	1.8865690417309366E-7	IMPLEMENTATION	1.0696267977844879E-7	DEFECT	2.1610584695148205E-9	DOCUMENTATION	6.752501646125538E-10	TEST
// Sub-insertions should occur before containing insertion so // Try to do the callback now	WITHOUT_CLASSIFICATION	0.9999499515571171	WITHOUT_CLASSIFICATION	3.4262552547505266E-5	DESIGN	9.356298258237008E-6	DEFECT	6.085845090229699E-6	IMPLEMENTATION	3.0810732698172703E-7	DOCUMENTATION	3.5639659840419626E-8	TEST
//the entity is not associated with the session, so //try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.9999858754531459	WITHOUT_CLASSIFICATION	1.3588367322555212E-5	DESIGN	3.6015889038225227E-7	DEFECT	8.276843340165614E-8	IMPLEMENTATION	5.7331356535968786E-8	TEST	3.592085134310768E-8	DOCUMENTATION
//scan the query string for class names appearing in the from clause and replace //with all persistent implementors of the class/interface, returning multiple //query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.9490842725316311	DESIGN	0.04204553628486512	WITHOUT_CLASSIFICATION	0.00816806222769795	DEFECT	6.993842393183419E-4	IMPLEMENTATION	1.450987983261344E-6	TEST	1.2937285044300433E-6	DOCUMENTATION
// save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998158643415	WITHOUT_CLASSIFICATION	6.48031397166275E-8	DEFECT	6.231151799928989E-8	IMPLEMENTATION	4.237724251738069E-8	DESIGN	8.20494344078067E-9	DOCUMENTATION	6.438814884352102E-9	TEST
// evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998556666659	WITHOUT_CLASSIFICATION	6.726366702658029E-8	DESIGN	3.658616709127021E-8	IMPLEMENTATION	2.985947769824369E-8	DEFECT	5.5150961341150205E-9	TEST	5.108926292482624E-9	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9925072274020478	WITHOUT_CLASSIFICATION	0.0074891747813929	DESIGN	1.9065280663095681E-6	TEST	1.6151388185473093E-6	DEFECT	4.3289480946534323E-8	IMPLEMENTATION	3.286019353850399E-8	DOCUMENTATION
//if it is an uninitialized proxy, pointing //with this session, then when it is accessed, //the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.999974492794291	WITHOUT_CLASSIFICATION	2.0505600044940555E-5	IMPLEMENTATION	3.189352393939312E-6	DESIGN	7.095059024803958E-7	TEST	7.04998612544573E-7	DEFECT	3.9774875507293494E-7	DOCUMENTATION
// Generate an explicit join for the root dot node.   The implied joins will be collected and passed up // to the root dot node.	WITHOUT_CLASSIFICATION	0.9999999994988703	WITHOUT_CLASSIFICATION	4.0601096681909547E-10	DESIGN	6.961422309545506E-11	TEST	1.9477020863755556E-11	IMPLEMENTATION	3.35458211385909E-12	DEFECT	2.6729299604611565E-12	DOCUMENTATION
// A session is considered to contain an entity only if the entity has // an entry in the session's persistence context and the entry reports // that the entity has not been removed	WITHOUT_CLASSIFICATION	0.999319819212518	WITHOUT_CLASSIFICATION	6.794469082171706E-4	DESIGN	6.857475209071769E-7	IMPLEMENTATION	3.812231529366277E-8	DEFECT	5.833866813478793E-9	TEST	4.175561731541565E-9	DOCUMENTATION
// Does the collection referenced by this FromElement // specify an order-by attribute?  If so, attach it to // the query's order-by	WITHOUT_CLASSIFICATION	0.9991605250512066	WITHOUT_CLASSIFICATION	7.660088884459842E-4	DESIGN	6.157216969387358E-5	IMPLEMENTATION	6.718692112452329E-6	DOCUMENTATION	3.103006874314781E-6	DEFECT	2.072191666743324E-6	TEST
// ... and the token could be an identifer and the error is // a mismatched token error ...	WITHOUT_CLASSIFICATION	0.999978457042713	WITHOUT_CLASSIFICATION	2.1406952358145915E-5	DESIGN	1.292560354194786E-7	DEFECT	2.8554127919016928E-9	DOCUMENTATION	2.0755847133743184E-9	TEST	1.8178958511347396E-9	IMPLEMENTATION
// If a where clause was specified in the update/delete query, use it to limit the // returned ids here...	WITHOUT_CLASSIFICATION	0.9999999866948253	WITHOUT_CLASSIFICATION	1.0343004927365623E-8	DESIGN	2.1575107188524513E-9	IMPLEMENTATION	6.297290375680324E-10	DEFECT	1.648265241921298E-10	DOCUMENTATION	1.0103606329688936E-11	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// Default implementation: // If this node has a data type, and that data type is not an association, then this is scalar.	WITHOUT_CLASSIFICATION	0.9999480773600201	WITHOUT_CLASSIFICATION	4.158594889811769E-5	DESIGN	6.422782649153055E-6	DEFECT	3.3970717827770485E-6	IMPLEMENTATION	3.8936662499129354E-7	TEST	1.274700248113625E-7	DOCUMENTATION
// Resolve the LHS fully, generate implicit joins.  Pass in the property name so that the resolver can // discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.9999995064687107	WITHOUT_CLASSIFICATION	3.8502920413481707E-7	DESIGN	9.501066815301613E-8	DEFECT	9.006625707218096E-9	TEST	2.3693847368705255E-9	DOCUMENTATION	2.1154064939076683E-9	IMPLEMENTATION
// If the propertyType is null and there isn't a parent, just // stop now... there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.9868561325811449	WITHOUT_CLASSIFICATION	0.006740129135683316	DESIGN	0.0064011404577542915	DEFECT	1.2817588555464753E-6	DOCUMENTATION	8.29702967055085E-7	TEST	4.86363594986053E-7	IMPLEMENTATION
//We do not look for an existing join on the same path, because //it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.9999885117410797	WITHOUT_CLASSIFICATION	1.1116648560763642E-5	DESIGN	2.9925987173893016E-7	IMPLEMENTATION	6.008220736097481E-8	DEFECT	7.343160316928333E-9	TEST	4.925120286244225E-9	DOCUMENTATION
// our parent is another dot node, meaning we are being further dereferenced. // thus we need to generate a join unless the parent refers to the associated // entity's PK (because 'our' table would know the FK).	WITHOUT_CLASSIFICATION	0.9999938208972045	WITHOUT_CLASSIFICATION	3.858784010488802E-6	IMPLEMENTATION	2.1149810808622512E-6	DESIGN	1.316051846745488E-7	TEST	7.355832664083108E-8	DOCUMENTATION	1.7419278902958713E-10	DEFECT
/*public final Currency getCurrency(int col) throws HibernateException {	WITHOUT_CLASSIFICATION	0.9965096481258318	WITHOUT_CLASSIFICATION	0.0028527875963684363	DESIGN	6.278888779640812E-4	DEFECT	6.734169931871486E-6	DOCUMENTATION	1.581807902214951E-6	IMPLEMENTATION	1.3594220015042156E-6	TEST
// here, we have two possibilities: // 	WITHOUT_CLASSIFICATION	0.9996902228791719	WITHOUT_CLASSIFICATION	2.1504887021549002E-4	DESIGN	8.378793083182511E-5	IMPLEMENTATION	7.593109270923404E-6	TEST	2.8373967035566554E-6	DEFECT	5.09813806517245E-7	DOCUMENTATION
// Set the unresolved path in this node and the parent. // Set the text for the parent.	WITHOUT_CLASSIFICATION	0.9997479714944303	WITHOUT_CLASSIFICATION	1.7999650532408003E-4	IMPLEMENTATION	5.51876640510447E-5	DESIGN	9.27618354174681E-6	TEST	5.581471082937762E-6	DEFECT	1.9866815699360353E-6	DOCUMENTATION
// Get the first child to be considered.  Sub-classes may do this differently in order to skip nodes that // are not select expressions (e.g. DISTINCT).	WITHOUT_CLASSIFICATION	0.999989239651818	WITHOUT_CLASSIFICATION	1.0738131026029981E-5	DESIGN	1.9815042238803065E-8	IMPLEMENTATION	2.161461622604916E-9	DOCUMENTATION	1.8556457664636796E-10	DEFECT	5.5087476248527304E-11	TEST
// If this is an entity and the property is the identifier property, then use getIdentifierType(). //      Note that the propertyName.equals( propertyPath ) checks whether we have a component //      key reference, where the component class property name is the same as the //      entity id property name; if the two are not equal, this is the case and //      we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.999999984543417	WITHOUT_CLASSIFICATION	1.4190404832601756E-8	DESIGN	6.98635148153109E-10	DEFECT	3.2506137666435035E-10	DOCUMENTATION	1.96064907861458E-10	IMPLEMENTATION	4.641674367766659E-11	TEST
// for a subquery, the alias to use depends on a few things (we // already know this is not an overall SELECT): //      1) if this FROM_ELEMENT represents a correlation to the //          outer-most query //              A) if the outer query represents a multi-table //                  persister, we need to use the given alias //                  in anticipation of one of the multi-table //                  executors being used (as this subquery will //                  actually be used in the "id select" phase //                  of that multi-table executor) //              B) otherwise, we need to use the persister's //                  table name as the column qualification //      2) otherwise (not correlated), use the given alias	WITHOUT_CLASSIFICATION	0.9804599832185109	WITHOUT_CLASSIFICATION	0.01941039308265934	DESIGN	6.905875505137733E-5	IMPLEMENTATION	6.032474122021635E-5	DEFECT	2.1142835958550505E-7	DOCUMENTATION	2.8774198691010607E-8	TEST
// Not a collection? // Return the entity property mapping.	WITHOUT_CLASSIFICATION	0.999477679100803	WITHOUT_CLASSIFICATION	2.0451511777753713E-4	DESIGN	1.6193418443108702E-4	DEFECT	1.5550351453964364E-4	IMPLEMENTATION	2.786827110164328E-7	TEST	8.939973769612783E-8	DOCUMENTATION
// collection of <many-to-any/> mappings... // used to circumvent the component-collection check below...	WITHOUT_CLASSIFICATION	0.9991711257056648	WITHOUT_CLASSIFICATION	5.444463356407483E-4	IMPLEMENTATION	2.8118905025799427E-4	DESIGN	2.0910882278131003E-6	DEFECT	9.19540538302079E-7	DOCUMENTATION	2.282796703981851E-7	TEST
// Otherwise, the destination node was implied by the FROM clause and the FROM clause processor // will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.9999333461087964	WITHOUT_CLASSIFICATION	5.571949734248049E-5	DESIGN	6.646722228102659E-6	IMPLEMENTATION	3.5432341991659463E-6	DEFECT	7.059545659625532E-7	DOCUMENTATION	3.848286801708993E-8	TEST
// If the first identifier in the path referrs to the class alias (not the class name), then this // is a correlated subselect.  If it's a correlated sub-select, use the existing table alias.  Otherwise // generate a new one.	WITHOUT_CLASSIFICATION	0.9999911448387537	WITHOUT_CLASSIFICATION	8.816675970781552E-6	DESIGN	2.436738039896464E-8	IMPLEMENTATION	1.2902790442827757E-8	DEFECT	1.178820213384998E-9	TEST	3.628434247085475E-11	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999993958998092	WITHOUT_CLASSIFICATION	5.922128335545958E-7	DESIGN	1.1362061612922281E-8	DEFECT	2.7547094463207017E-10	DOCUMENTATION	2.0857602840803152E-10	IMPLEMENTATION	4.1248560177272646E-11	TEST
// An ident node can represent an index expression if the ident // represents a naked property ref //      *Note: this makes the assumption (which is currently the case //      in the hql-sql grammar) that the ident is first resolved //      itself (addrExpr -> resolve()).  The other option, if that //      changes, is to call resolve from here; but it is //      currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.9999995436200786	WITHOUT_CLASSIFICATION	4.5154033632144057E-7	DESIGN	2.404393561966051E-9	DEFECT	1.4107929407720498E-9	TEST	9.188862154149802E-10	IMPLEMENTATION	1.055123715581414E-10	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999987895700841	WITHOUT_CLASSIFICATION	1.0890232697886782E-6	DESIGN	6.466758386185771E-8	IMPLEMENTATION	5.6558425114932824E-8	DEFECT	1.326404896964648E-10	TEST	4.799659258557209E-11	DOCUMENTATION
// If this is an implied join in a FROM clause, then use ANSI-style joining, and set the // flag on the FromElement that indicates that it was implied in the FROM clause itself.	WITHOUT_CLASSIFICATION	0.9999994002685835	WITHOUT_CLASSIFICATION	5.33596267211568E-7	DESIGN	3.526283741310971E-8	TEST	1.8703611997519205E-8	IMPLEMENTATION	1.0195326042482113E-8	DEFECT	1.97337388490761E-9	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// For an explicit many-to-many relationship, add a second join from the intermediate  // (many-to-many) table to the destination table.  Also, make sure that the from element's  // idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.9999999769550432	WITHOUT_CLASSIFICATION	2.0831572360918208E-8	DESIGN	1.775974384924285E-9	DEFECT	2.7585336655388776E-10	DOCUMENTATION	1.5087090059825868E-10	TEST	1.0685771370451873E-11	IMPLEMENTATION
// Reset the node type, because the rest of the system is expecting FROM_FRAGMENT, all we wanted was // for the factory to create the right sub-class.  This might get reset again later on anyway to make the // SQL generation simpler.	WITHOUT_CLASSIFICATION	0.9871054209478679	WITHOUT_CLASSIFICATION	0.012618506030145799	DESIGN	1.3374580614527857E-4	DEFECT	1.0364097097426085E-4	IMPLEMENTATION	3.634432290413955E-5	TEST	2.3419219626181102E-6	DOCUMENTATION
//explicit = true;	WITHOUT_CLASSIFICATION	0.9998344815943551	WITHOUT_CLASSIFICATION	1.363509263464212E-4	DESIGN	2.5626929459024945E-5	DEFECT	1.5201500075874325E-6	TEST	1.0509334413655195E-6	IMPLEMENTATION	9.694663905091446E-7	DOCUMENTATION
//sqlResultTypeList.add( type ); // Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999991840044264	WITHOUT_CLASSIFICATION	5.402135206085891E-7	IMPLEMENTATION	2.3430184103612718E-7	DESIGN	2.2030642220321156E-8	TEST	1.7999465195977302E-8	DEFECT	1.4501045357369437E-9	DOCUMENTATION
// If the expression list has exactly one expression, and the type of the expression is a collection // then this might be a collection function, such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.9999332283787514	WITHOUT_CLASSIFICATION	6.186996186880973E-5	DESIGN	4.885589713834284E-6	DEFECT	8.75737781504663E-9	IMPLEMENTATION	5.971487444007933E-9	DOCUMENTATION	1.3408005841025431E-9	TEST
// Need to parse off the column qualifiers; this is assuming (which is true as of now) // that this is only used from update and delete HQL statement parsing	WITHOUT_CLASSIFICATION	0.9999999523720661	WITHOUT_CLASSIFICATION	3.645568961604524E-8	IMPLEMENTATION	1.0522967738359709E-8	DEFECT	4.427980185181797E-10	DESIGN	1.3054978643571035E-10	TEST	7.592869858799254E-11	DOCUMENTATION
// for regression testing against output from the old parser... // found it easiest to simply reorder the FromElements here into ascending order // in terms of injecting them into the resulting sql ast in orders relative to those // expected by the old parser; this is definitely another of those "only needed // for regression purposes".  The SyntheticAndFactory, then, simply injects them as it // encounters them.	WITHOUT_CLASSIFICATION	0.9999637852518424	WITHOUT_CLASSIFICATION	3.2695037676935564E-5	DEFECT	1.9075759895220935E-6	TEST	1.6042807515990973E-6	DESIGN	7.846732219339813E-9	DOCUMENTATION	7.007365589787404E-12	IMPLEMENTATION
// The uber-rule here is that we need to include  subclass joins if // the FromElement is in any way dereferenced by a property from // the subclass table; otherwise we end up with column references // qualified by a non-existent table reference in the resulting SQL...	WITHOUT_CLASSIFICATION	0.9951187557847746	WITHOUT_CLASSIFICATION	0.004878320474571886	DESIGN	2.2132406436351366E-6	IMPLEMENTATION	5.965080765266379E-7	DEFECT	7.569711774700846E-8	DOCUMENTATION	3.8294815628129985E-8	TEST
// classic translator does not support collection of ordinal // param metadata	WITHOUT_CLASSIFICATION	0.9985969714719644	WITHOUT_CLASSIFICATION	0.0013614137894620427	DESIGN	3.9535646233680744E-5	DEFECT	1.7797549279136485E-6	IMPLEMENTATION	2.305069191172933E-7	TEST	6.883049295975666E-8	DOCUMENTATION
// The following variables are stacks that keep information about each subexpression // in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.9999247527790489	WITHOUT_CLASSIFICATION	4.158633850058876E-5	DEFECT	3.334137439722729E-5	DESIGN	1.683281801439467E-7	IMPLEMENTATION	1.2025349261846838E-7	DOCUMENTATION	3.092638047324671E-8	TEST
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999999669314125	WITHOUT_CLASSIFICATION	3.170781376120246E-8	DEFECT	1.2750929844943626E-9	IMPLEMENTATION	3.567191969495505E-11	TEST	2.805439622625543E-11	DESIGN	2.1954497913849893E-11	DOCUMENTATION
// should not be able to reach last without maxPosition being set // unless there are no results	WITHOUT_CLASSIFICATION	0.9999999963855322	WITHOUT_CLASSIFICATION	3.3143306012012865E-9	DESIGN	2.440736396165751E-10	TEST	4.7327738294377876E-11	DEFECT	7.515626006553591E-12	IMPLEMENTATION	1.2202724516268823E-12	DOCUMENTATION
// we found it in the temp PC.  Should indicate we are in the midst of processing a result set // containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.9999999689016853	WITHOUT_CLASSIFICATION	3.101013919449406E-8	DESIGN	7.445403291346626E-11	TEST	9.379119207736436E-12	DOCUMENTATION	3.2135685659438106E-12	IMPLEMENTATION	1.1287126341882506E-12	DEFECT
//do not use proxiesByKey, since not all //proxies that point to this session's //instances are in that collection!	WITHOUT_CLASSIFICATION	0.9994981423516378	WITHOUT_CLASSIFICATION	4.0659953562516564E-4	DESIGN	5.5995528520195946E-5	DEFECT	3.802217127837547E-5	IMPLEMENTATION	1.2173584358398542E-6	DOCUMENTATION	2.3054502634663272E-8	TEST
// if there is no TM configured, we will not be able to access // the javax.transaction.Transaction object in order to // register a synch anyway.	WITHOUT_CLASSIFICATION	0.8906589017827943	DESIGN	0.10931617002751962	WITHOUT_CLASSIFICATION	2.214862372028492E-5	IMPLEMENTATION	2.1185198687120974E-6	DOCUMENTATION	6.24615314602244E-7	TEST	3.643078262198244E-8	DEFECT
// Since the result set cursor is always left at the first // physical row after the "last processed", we need to jump // back one position to get the key value we are interested // in skipping	WITHOUT_CLASSIFICATION	0.9999993736566584	WITHOUT_CLASSIFICATION	5.993629730069382E-7	DESIGN	1.3619948861283412E-8	DOCUMENTATION	1.2906276647548304E-8	DEFECT	3.645881199491218E-10	TEST	8.955530246211902E-11	IMPLEMENTATION
//true if this is a query and we are loading multiple instances of the same collection role //otherwise this is a CollectionInitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.9999481770156422	WITHOUT_CLASSIFICATION	4.784136333202018E-5	DEFECT	3.2142347317036523E-6	DESIGN	7.389564617861491E-7	IMPLEMENTATION	1.506489739825057E-8	DOCUMENTATION	1.3364935029680458E-8	TEST
// we don't need to worry about existing version being uninitialized // because this block isn't called by a re-entrant load (re-entrant // loads _always_ have lock mode NONE)	WITHOUT_CLASSIFICATION	0.9995172198471742	WITHOUT_CLASSIFICATION	4.5851042235502864E-4	IMPLEMENTATION	2.3438976473448972E-5	DESIGN	7.220165665378101E-7	DEFECT	6.437780584745059E-8	TEST	4.435962495924378E-8	DOCUMENTATION
// add temp entry so that the next step is circular-reference // safe - only needed because some types don't take proper // advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.9999994691235129	WITHOUT_CLASSIFICATION	4.019932230856641E-7	DEFECT	7.85601637963801E-8	DOCUMENTATION	4.4532520928343966E-8	TEST	5.328916748853872E-9	DESIGN	4.616626886057871E-10	IMPLEMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999999832518284	WITHOUT_CLASSIFICATION	9.345525071079657E-9	DESIGN	4.2659385655339384E-9	DOCUMENTATION	2.108776620001951E-9	TEST	1.0157455869838908E-9	DEFECT	1.218575109690549E-11	IMPLEMENTATION
// log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.9999001603512641	WITHOUT_CLASSIFICATION	7.610155156610066E-5	IMPLEMENTATION	2.238943439173316E-5	DEFECT	8.908503892224805E-7	DESIGN	2.96644164522093E-7	TEST	1.6116822434648274E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// this has been shown to happen occasionally in rare cases // when using a transaction manager + transaction-timeout // where the timeout calls back through Hibernate's // registered transaction synchronization on a separate // "reaping" thread.  In cases where that reaping thread // executes through this block at the same time the main // application thread does we can get into situations where // these CMEs occur.  And though it is not "allowed" per-se, // the end result without handling it specifically is infinite // looping.  So here, we simply break the loop	WITHOUT_CLASSIFICATION	0.9999999152886134	WITHOUT_CLASSIFICATION	7.745947307562611E-8	DESIGN	7.187603461004784E-9	DEFECT	5.84396513468481E-11	DOCUMENTATION	5.269655660927679E-12	IMPLEMENTATION	6.007397745197864E-13	TEST
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999606518034464	WITHOUT_CLASSIFICATION	3.809226300408311E-5	DESIGN	1.0407489114433446E-6	DEFECT	1.3919889122267327E-7	DOCUMENTATION	6.547178253472256E-8	IMPLEMENTATION	1.0513964508128915E-8	TEST
// can't cache this stuff either (per-invocation) // we are given a map of user-alias -> lock mode // create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.9999978259507385	WITHOUT_CLASSIFICATION	1.972622632768579E-6	DESIGN	1.9176533378703722E-7	DEFECT	9.067751606705387E-9	DOCUMENTATION	5.862769484211516E-10	TEST	7.266393749401308E-12	IMPLEMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns //getCollectionTable().createUniqueKey( getIdentifier().getConstraintColumns() );	WITHOUT_CLASSIFICATION	0.9999903813281622	WITHOUT_CLASSIFICATION	9.185810034595431E-6	DEFECT	4.1000342647609465E-7	DESIGN	1.658035409219762E-8	TEST	3.738558880098797E-9	IMPLEMENTATION	2.539463938414911E-9	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99999953743407	WITHOUT_CLASSIFICATION	3.6221254183221275E-7	DESIGN	5.8721178245547325E-8	IMPLEMENTATION	2.5678344656873085E-8	DEFECT	1.063792443861126E-8	TEST	5.3159408390750654E-9	DOCUMENTATION
//isSet = collection.isSet(); //isSorted = collection.isSorted();	WITHOUT_CLASSIFICATION	0.9999918031465761	WITHOUT_CLASSIFICATION	7.066788625124333E-6	IMPLEMENTATION	5.440738963032853E-7	DEFECT	3.155528367119282E-7	TEST	2.2357006788141856E-7	DESIGN	4.6867997963923516E-8	DOCUMENTATION
//lists, arrays //sets, maps, bags	WITHOUT_CLASSIFICATION	0.9999993369104545	WITHOUT_CLASSIFICATION	4.0140268659332533E-7	DESIGN	1.1337200774770522E-7	TEST	7.39720513389532E-8	IMPLEMENTATION	6.76898730287923E-8	DEFECT	6.652926743301009E-9	DOCUMENTATION
// we finish all the "removes" first to take care of possible unique // constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.9999996406825469	WITHOUT_CLASSIFICATION	1.3190517424483875E-7	DEFECT	1.1208061190548082E-7	DESIGN	1.007968485361062E-7	IMPLEMENTATION	1.423996231570138E-8	TEST	2.9485633442933974E-10	DOCUMENTATION
//use a combination of foreign key columns and pk columns, since //the ordering of removal and addition is not guaranteed when //a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.9981342463563402	WITHOUT_CLASSIFICATION	0.001543896870210177	DESIGN	3.205478160942225E-4	DEFECT	1.0359581191991026E-6	DOCUMENTATION	1.799622478748471E-7	TEST	9.303698835670777E-8	IMPLEMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99999953743407	WITHOUT_CLASSIFICATION	3.6221254183221275E-7	DESIGN	5.8721178245547325E-8	IMPLEMENTATION	2.5678344656873085E-8	DEFECT	1.063792443861126E-8	TEST	5.3159408390750654E-9	DOCUMENTATION
//information about properties of this class, //including inherited properties //(only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.9999395096782168	WITHOUT_CLASSIFICATION	4.7224740460890594E-5	DESIGN	8.873328485894816E-6	DEFECT	2.910849190395129E-6	TEST	1.4583876325796707E-6	DOCUMENTATION	2.3016013492417383E-8	IMPLEMENTATION
// all this only really needs to consider properties // of this class, not its subclasses, but since we // are reusing code used for sequential selects, we // use the subclass closure	WITHOUT_CLASSIFICATION	0.99999981290494	WITHOUT_CLASSIFICATION	1.855662192764265E-7	DESIGN	1.1967440827071768E-9	DEFECT	1.9545615160845968E-10	TEST	1.3061293320779967E-10	DOCUMENTATION	6.027632759160745E-12	IMPLEMENTATION
// Here we render the select column list based on the properties defined as being generated. // For partial component generation, we currently just re-select the whole component // rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.9840533121909608	WITHOUT_CLASSIFICATION	0.015946287075338995	DESIGN	3.098515882847147E-7	DEFECT	8.297864030292553E-8	IMPLEMENTATION	5.3942065856197015E-9	TEST	2.5092650062568608E-9	DOCUMENTATION
// this is the root (versioned) table, and we are using version-based // optimistic locking;  if we are not updating the version, also don't // check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.999999733814295	WITHOUT_CLASSIFICATION	2.650573547724992E-7	DEFECT	9.683895763593846E-10	DESIGN	8.773087096937518E-11	TEST	3.639523630322658E-11	IMPLEMENTATION	3.583457571177693E-11	DOCUMENTATION
//optimistic-lock="all", include all updatable properties //optimistic-lock="dirty", include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.9999931303813527	WITHOUT_CLASSIFICATION	4.205299056958899E-6	DEFECT	1.925345985147777E-6	DESIGN	3.177301325536095E-7	DOCUMENTATION	2.736504667001691E-7	IMPLEMENTATION	1.4759300599343024E-7	TEST
// this property belongs to the table, and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999912436233919	WITHOUT_CLASSIFICATION	5.234974528401184E-6	DESIGN	3.5142404758870185E-6	DEFECT	4.513667780858983E-9	DOCUMENTATION	2.5334276964936377E-9	TEST	1.1450844222340731E-10	IMPLEMENTATION
// check to see if the connection is in auto-commit  // mode (no connection means aggressive connection // release outside a JTA transaction context, so MUST // be autocommit mode)	WITHOUT_CLASSIFICATION	0.9999269743921273	WITHOUT_CLASSIFICATION	7.302084862105358E-5	DESIGN	2.5915109814758367E-9	IMPLEMENTATION	1.927136626176611E-9	DOCUMENTATION	2.2812567085738083E-10	TEST	1.2478392323570303E-11	DEFECT
// need to treat this as if it where optimistic-lock="all" (dirty does *not* make sense); // first we need to locate the "loaded" state // // Note, it potentially could be a proxy, so perform the location the safe way...	WITHOUT_CLASSIFICATION	0.8706753950909274	WITHOUT_CLASSIFICATION	0.12920347014242928	DESIGN	8.902133519270367E-5	DEFECT	1.7026502081666765E-5	IMPLEMENTATION	1.3079423149187996E-5	TEST	2.0075062197115217E-6	DOCUMENTATION
// we *always* assume an instance with a null // identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.9999999342890428	WITHOUT_CLASSIFICATION	3.980245575572689E-8	DEFECT	2.4876082492783592E-8	DESIGN	9.723113503350968E-10	DOCUMENTATION	5.542612614202687E-11	TEST	4.681607644285684E-12	IMPLEMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999736312932639	WITHOUT_CLASSIFICATION	1.2393696304026773E-5	IMPLEMENTATION	1.0449688126918436E-5	DEFECT	3.4114807750440094E-6	DESIGN	8.567573270876588E-8	TEST	2.8165797260377154E-8	DOCUMENTATION
//allow any identifier quoted with backtick //only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.9992453507590396	WITHOUT_CLASSIFICATION	6.5816872106764E-4	DESIGN	6.239868891131308E-5	DEFECT	3.1925932010143314E-5	IMPLEMENTATION	1.7214784979177856E-6	TEST	4.3442047327570707E-7	DOCUMENTATION
//following doesn't handle (null, not null) but unnecessary //since this would mean all rows	WITHOUT_CLASSIFICATION	0.9899110857871788	WITHOUT_CLASSIFICATION	0.0035095126434340498	DEFECT	0.0030431732592901568	DESIGN	0.002920718246786711	IMPLEMENTATION	6.082626470012658E-4	TEST	7.247416308997711E-6	DOCUMENTATION
// IMPL NOTE : due to the delayed population of setters (setters cached // 	WITHOUT_CLASSIFICATION	0.9999760217624235	WITHOUT_CLASSIFICATION	2.3753072123638836E-5	DESIGN	2.1557746731949466E-7	DEFECT	6.252919173001575E-9	IMPLEMENTATION	2.8619821080195722E-9	DOCUMENTATION	4.730842121061695E-10	TEST
// we need to dirty check collections, since they can cause an owner // version number increment	WITHOUT_CLASSIFICATION	0.9996552507393768	WITHOUT_CLASSIFICATION	3.422318873163494E-4	IMPLEMENTATION	1.5304687649423659E-6	DOCUMENTATION	6.775563366364918E-7	DESIGN	2.75848205897533E-7	DEFECT	3.3499999399325985E-8	TEST
//return the id, so we can use it to reset the proxy id //return result;	WITHOUT_CLASSIFICATION	0.9999881972324128	WITHOUT_CLASSIFICATION	1.023519484003551E-5	DESIGN	1.0904365089810095E-6	IMPLEMENTATION	4.4755069657711234E-7	DEFECT	2.6187031563595975E-8	DOCUMENTATION	3.398510182321558E-9	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999999842083157	WITHOUT_CLASSIFICATION	1.4694802274422274E-8	DEFECT	5.286677535321487E-10	IMPLEMENTATION	3.5010893086064744E-10	DOCUMENTATION	1.731921256570362E-10	DESIGN	4.491323944777978E-11	TEST
// We now have the value of the property-ref we reference.  However, // we need to dig a little deeper, as that property might also be // an entity type, in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.9999999713683048	WITHOUT_CLASSIFICATION	1.660038303412936E-8	DESIGN	1.1633233980053768E-8	DEFECT	3.662419322703283E-10	DOCUMENTATION	2.959793049580256E-11	IMPLEMENTATION	2.23822826776679E-12	TEST
// Retrieve the value of the designated column in the current row of this // ResultSet object as a java.io.Reader object	WITHOUT_CLASSIFICATION	0.9999984083382898	WITHOUT_CLASSIFICATION	1.4883862901387176E-6	DEFECT	6.761117543187728E-8	DOCUMENTATION	2.860557618547727E-8	DESIGN	5.0163378355976285E-9	IMPLEMENTATION	2.042330584058667E-9	TEST
//not absolutely necessary, but helps for some //equals()/hashCode() implementations	WITHOUT_CLASSIFICATION	0.9986694952833275	WITHOUT_CLASSIFICATION	0.0010049610988776955	IMPLEMENTATION	3.1591573190760657E-4	DESIGN	7.805218064648445E-6	TEST	1.101043187052944E-6	DEFECT	7.216246354508976E-7	DOCUMENTATION
//this should be a call to resolve(), not resolveIdentifier(),  //'cos it might be a property-ref, and we did not cache the //referenced value	WITHOUT_CLASSIFICATION	0.9999892211473557	WITHOUT_CLASSIFICATION	9.774287963445032E-6	DESIGN	9.816895730118443E-7	DEFECT	1.994805709542431E-8	IMPLEMENTATION	2.7363607977217387E-9	DOCUMENTATION	1.9068995696553811E-10	TEST
// If we have <tt>not-found="ignore"</tt> association mapped to a // formula, we always need to dirty check it, so we can update the // second-level cache	WITHOUT_CLASSIFICATION	0.9999980590670552	WITHOUT_CLASSIFICATION	1.4757528747449882E-6	IMPLEMENTATION	4.277154168155637E-7	DESIGN	1.9429326419003386E-8	DOCUMENTATION	1.678488219223756E-8	DEFECT	1.2504447202724578E-9	TEST
// can't just return null here, since that would // cause an owning component to become null	WITHOUT_CLASSIFICATION	0.999999235449755	WITHOUT_CLASSIFICATION	4.79849085737439E-7	DESIGN	2.475364192950863E-7	IMPLEMENTATION	3.241881534408369E-8	DEFECT	2.8948045673052613E-9	TEST	1.8511201007842507E-9	DOCUMENTATION
//for arrays, replaceElements() may return a different reference, since //the array length might not match	WITHOUT_CLASSIFICATION	0.9999999702468485	WITHOUT_CLASSIFICATION	2.6673755609520435E-8	DEFECT	1.7097247880733855E-9	DESIGN	8.318998288401237E-10	IMPLEMENTATION	5.220994021954931E-10	DOCUMENTATION	1.5672017291536977E-11	TEST
// actual cache of the entries.  soft references are used for both the keys and the // values here since the values pertaining to the MRU entries are kept in a // seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.999999995453956	WITHOUT_CLASSIFICATION	3.913469621648492E-9	DESIGN	6.219373375451915E-10	IMPLEMENTATION	4.873680726588883E-12	DOCUMENTATION	3.1594793652988248E-12	TEST	2.603812591990821E-12	DEFECT
// as soon as we encounter our first letter, return the substring // from that position	WITHOUT_CLASSIFICATION	0.9999999695112508	WITHOUT_CLASSIFICATION	2.2899902617881235E-8	DESIGN	7.358390121714191E-9	DEFECT	1.0443864368501249E-10	IMPLEMENTATION	6.888689082759212E-11	TEST	5.713091866984802E-11	DOCUMENTATION
// Note : expected in the syntax: //      type=listenerClass //          ({sep}type=listenerClass)* // where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.999999563756105	WITHOUT_CLASSIFICATION	4.1410634277761067E-7	DEFECT	1.1841534679028262E-8	TEST	9.417362911345784E-9	DESIGN	6.823191794913695E-10	DOCUMENTATION	1.9633556031539894E-10	IMPLEMENTATION
// isTransactionCallbackRegistered denotes whether any Hibernate // Transaction has registered as a callback against this // JDBCContext; only one such callback is allowed.  Directly // serializing this value causes problems with JDBCTransaction, // or really any Transaction impl where the callback is local // to the Transaction instance itself, since that Transaction // is not serialized along with the JDBCContext.  Thus we // handle that fact here explicitly...	WITHOUT_CLASSIFICATION	0.9882908823563483	WITHOUT_CLASSIFICATION	0.010446419240451987	DESIGN	0.0012620252620077032	DEFECT	2.880332149837841E-7	TEST	2.861865507528572E-7	IMPLEMENTATION	9.892142643190802E-8	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999685760469973	WITHOUT_CLASSIFICATION	3.1099230006632137E-5	DESIGN	1.617572880726908E-7	DEFECT	1.4459916418983927E-7	TEST	1.1626154293294077E-8	IMPLEMENTATION	6.740389332453828E-9	DOCUMENTATION
// We call getKeyFromResultSet() here so that we can know the // key value upon which to perform the breaking logic.  However, // it is also then called from getRowFromResultSet() which is certainly // not the most efficient.  But the call here is needed, and there // currently is no other way without refactoring of the doQuery()/getRowFromResultSet() // methods	WITHOUT_CLASSIFICATION	0.9138222217815388	DESIGN	0.0645915867494172	WITHOUT_CLASSIFICATION	0.02135130179559064	IMPLEMENTATION	2.3051574360737523E-4	DEFECT	2.5024583747840736E-6	TEST	1.8714714711549257E-6	DOCUMENTATION
// This check is needed since processing leaves the cursor // after the last physical row for the current logical row; // thus if we are after the last physical row, this might be // caused by either: //      1) scrolling to the last logical row //      2) scrolling past the last logical row // In the latter scenario, the previous logical row // really is the last logical row. // // In all other cases, we should process back two // logical records (the current logic row, plus the // previous logical row).	WITHOUT_CLASSIFICATION	0.8420165470588589	WITHOUT_CLASSIFICATION	0.14943607035064208	DEFECT	0.00819724948663077	DESIGN	3.1505616676205813E-4	IMPLEMENTATION	3.3536185737157905E-5	DOCUMENTATION	1.5407513691159726E-6	TEST
// and perform the load	WITHOUT_CLASSIFICATION	0.9999950491002636	WITHOUT_CLASSIFICATION	3.880745611077309E-6	DESIGN	8.268157797127811E-7	IMPLEMENTATION	1.1787328388681227E-7	DOCUMENTATION	1.0199765288980902E-7	DEFECT	2.346740887707502E-8	TEST
//important: reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.9717962235268673	WITHOUT_CLASSIFICATION	0.025847662547109712	DESIGN	0.001916582489566417	DEFECT	2.8345831241991356E-4	IMPLEMENTATION	1.477190921210497E-4	DOCUMENTATION	8.354031915673804E-6	TEST
//this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.9993397240883485	WITHOUT_CLASSIFICATION	6.030686311360937E-4	DEFECT	5.573499752098289E-5	DESIGN	1.2156600683609509E-6	IMPLEMENTATION	2.033104183534222E-7	DOCUMENTATION	5.3312507802188264E-8	TEST
// we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.9999834556116493	WITHOUT_CLASSIFICATION	1.5387212193884852E-5	DESIGN	1.109920421085034E-6	DEFECT	2.817153019138542E-8	IMPLEMENTATION	1.508040717876947E-8	DOCUMENTATION	4.0037984726950386E-9	TEST
// we did not find a collection element in the result set, so we // ensure that a collection is created with the owner's identifier, // since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.9999998219161756	WITHOUT_CLASSIFICATION	1.758101334268836E-7	DESIGN	1.3724898040184041E-9	DEFECT	8.149246091099865E-10	IMPLEMENTATION	7.508237934107036E-11	TEST	1.1194218328130287E-11	DOCUMENTATION
// this is a collection initializer, so we must create a collection // for each of the passed-in keys, to account for the possibility // that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.9999999367012617	WITHOUT_CLASSIFICATION	3.855963836071894E-8	DEFECT	1.8957720401200848E-8	DESIGN	3.0228332884441973E-9	IMPLEMENTATION	2.7000692676552416E-9	TEST	5.847683958264119E-11	DOCUMENTATION
// grab its state from the ResultSet and keep it in the Session // (but don't yet initialize the object itself) // note that we acquire LockMode.READ even if it was not requested	WITHOUT_CLASSIFICATION	0.9999825566992174	WITHOUT_CLASSIFICATION	1.675507541691321E-5	DESIGN	4.895915976164968E-7	DEFECT	1.7469244045609523E-7	TEST	1.504224205061507E-8	IMPLEMENTATION	8.899085585621159E-9	DOCUMENTATION
// a many-to-many; // decrement currentDepth here to allow join across the association table // without exceeding MAX_FETCH_DEPTH (i.e. the "currentDepth - 1" bit)	WITHOUT_CLASSIFICATION	0.9945879036735479	WITHOUT_CLASSIFICATION	0.005193611358358882	DESIGN	2.1479962353712853E-4	DEFECT	1.737086165857501E-6	IMPLEMENTATION	1.0300383618902537E-6	TEST	9.182200284191081E-7	DOCUMENTATION
// if not a composite key, use "foo in (?, ?, ?)" for batching // if no batch, and not a composite key, use "foo = ?"	WITHOUT_CLASSIFICATION	0.9999996588544482	WITHOUT_CLASSIFICATION	3.305164194802355E-7	DESIGN	8.598078838442128E-9	DEFECT	9.657898307521186E-10	TEST	7.512030179920638E-10	DOCUMENTATION	3.140605909506563E-10	IMPLEMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999999709272063	WITHOUT_CLASSIFICATION	2.144574619157513E-8	DESIGN	6.10343743696364E-9	DOCUMENTATION	9.69879900046977E-10	DEFECT	4.5347438800135793E-10	IMPLEMENTATION	1.0025569367596526E-10	TEST
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.999635773600624	WITHOUT_CLASSIFICATION	2.8953081321141057E-4	IMPLEMENTATION	7.300350052766954E-5	DESIGN	1.1862740891240671E-6	DOCUMENTATION	4.4145991112166546E-7	DEFECT	6.435163665483287E-8	TEST
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.999635773600624	WITHOUT_CLASSIFICATION	2.8953081321141057E-4	IMPLEMENTATION	7.300350052766954E-5	DESIGN	1.1862740891240671E-6	DOCUMENTATION	4.4145991112166546E-7	DEFECT	6.435163665483287E-8	TEST
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999500820888751	WITHOUT_CLASSIFICATION	3.699271078859653E-5	DEFECT	1.2327271098391617E-5	DESIGN	3.95770291062984E-7	TEST	1.3409598172980202E-7	DOCUMENTATION	6.806296513254336E-8	IMPLEMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999996107024453	WITHOUT_CLASSIFICATION	3.861654691111408E-7	DESIGN	1.9294749200314307E-9	TEST	8.202731868457891E-10	IMPLEMENTATION	2.7837749479428657E-10	DEFECT	1.0396008360497013E-10	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999997880874448	WITHOUT_CLASSIFICATION	1.8417142193344154E-7	DESIGN	1.5318849885465262E-8	IMPLEMENTATION	1.1631112471163651E-8	DEFECT	4.41415168597984E-10	TEST	3.497558766987485E-10	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.41192914246627127	DOCUMENTATION	0.37751716258507445	DESIGN	0.10445436084894476	IMPLEMENTATION	0.03906412540457568	WITHOUT_CLASSIFICATION	0.03353849397195846	DEFECT	0.033496714723175385	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999991085847939	WITHOUT_CLASSIFICATION	5.678916425814814E-7	DESIGN	1.9865147318605438E-7	DEFECT	6.276681771231637E-8	IMPLEMENTATION	4.3980501861465335E-8	DOCUMENTATION	1.81247707007564E-8	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999991085847939	WITHOUT_CLASSIFICATION	5.678916425814814E-7	DESIGN	1.9865147318605438E-7	DEFECT	6.276681771231637E-8	IMPLEMENTATION	4.3980501861465335E-8	DOCUMENTATION	1.81247707007564E-8	TEST
//        }	WITHOUT_CLASSIFICATION	0.9999925223992971	WITHOUT_CLASSIFICATION	2.3197213560181485E-6	DEFECT	2.1303210598362142E-6	IMPLEMENTATION	1.7675868915741253E-6	DESIGN	6.439590548245317E-7	DOCUMENTATION	6.160123404255218E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.999998131346888	WITHOUT_CLASSIFICATION	1.8426997519434255E-6	DESIGN	9.672513310573987E-9	DOCUMENTATION	9.245521159188293E-9	DEFECT	4.010119443016635E-9	TEST	3.025206166182318E-9	IMPLEMENTATION
//	WITHOUT_CLASSIFICATION	0.9959043829604289	WITHOUT_CLASSIFICATION	0.003961354903060371	DESIGN	4.429403028328539E-5	DEFECT	3.5467135702751354E-5	IMPLEMENTATION	3.0325674709004533E-5	DOCUMENTATION	2.4175295815566E-5	TEST
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999791630898943	WITHOUT_CLASSIFICATION	1.1079106342738567E-5	DESIGN	4.403787506904899E-6	IMPLEMENTATION	2.8006962289110335E-6	TEST	2.4118822851923707E-6	DEFECT	1.4143774192475633E-7	DOCUMENTATION
// at this point we have (drivingSqlAlias) the SQL alias of the driving table // corresponding to the given user alias.  However, the driving table is not // (necessarily) the table against which we want to apply locks.  Mainly, // the exception case here is joined-subclass hierarchies where we instead // want to apply the lock against the root table (for all other strategies, // it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.9997649301792844	WITHOUT_CLASSIFICATION	2.294475638254828E-4	DESIGN	5.43772953649565E-6	DEFECT	1.5480194859948906E-7	IMPLEMENTATION	2.5185770606587667E-8	DOCUMENTATION	4.5396343924319125E-9	TEST
// the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.9999917680608003	WITHOUT_CLASSIFICATION	6.72322430124325E-6	IMPLEMENTATION	7.813958815062888E-7	DEFECT	4.903425148192975E-7	TEST	1.3323474433474685E-7	DOCUMENTATION	1.037417577627623E-7	DESIGN
// we have a mapped identifier property and the root of // the incoming property path matched that identifier // property	WITHOUT_CLASSIFICATION	0.9999992986969454	WITHOUT_CLASSIFICATION	6.354005344461496E-7	DEFECT	4.89968217871552E-8	DESIGN	8.605235441214806E-9	DOCUMENTATION	6.861199020312779E-9	IMPLEMENTATION	1.4392637625767183E-9	TEST
// we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9999990273026984	WITHOUT_CLASSIFICATION	9.544030373782242E-7	DESIGN	7.530510604123324E-9	IMPLEMENTATION	4.859464537720808E-9	DEFECT	3.4790918541776562E-9	DOCUMENTATION	2.4251972134911857E-9	TEST
// both many-to-one and one-to-one are represented as a // Property.  EntityPersister is relying on this value to // determine "lazy fetch groups" in terms of field-level // interception.  So we need to make sure that we return // true here for the case of many-to-one and one-to-one // with lazy="no-proxy" // // * impl note - lazy="no-proxy" currently forces both // lazy and unwrap to be set to true.  The other case we // are extremely interested in here is that of lazy="proxy" // where lazy is set to true, but unwrap is set to false. // thus we use both here under the assumption that this // return is really only ever used during persister // construction to determine the lazy property/field fetch // groupings.  If that assertion changes then this check // needs to change as well.  Partially, this is an issue with // the overloading of the term "lazy" here...	WITHOUT_CLASSIFICATION	0.9999921359809792	WITHOUT_CLASSIFICATION	7.844642491655312E-6	DEFECT	1.4074558943563689E-8	DESIGN	5.030435385215872E-9	TEST	2.3123817938755674E-10	DOCUMENTATION	4.029652708281872E-11	IMPLEMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999277368827	WITHOUT_CLASSIFICATION	2.80822780800633E-8	IMPLEMENTATION	2.717787661561123E-8	DESIGN	9.226774467369677E-9	TEST	7.280168552692642E-9	DEFECT	4.960196560402644E-10	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999277368827	WITHOUT_CLASSIFICATION	2.80822780800633E-8	IMPLEMENTATION	2.717787661561123E-8	DESIGN	9.226774467369677E-9	TEST	7.280168552692642E-9	DEFECT	4.960196560402644E-10	DOCUMENTATION
/*rootTableName = persistentClass.getRootTable().getQualifiedName( 	WITHOUT_CLASSIFICATION	0.9999347784888474	WITHOUT_CLASSIFICATION	3.4544984004907646E-5	IMPLEMENTATION	2.8401721991443385E-5	DESIGN	1.5428654078126746E-6	DEFECT	5.257765351415888E-7	TEST	2.061632132851528E-7	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999923543839202	WITHOUT_CLASSIFICATION	3.607695584180777E-6	DESIGN	2.3476256179457545E-6	IMPLEMENTATION	1.0572530402573298E-6	DEFECT	4.464895754009385E-7	DOCUMENTATION	1.8655226199473263E-7	TEST
// Custom sql	WITHOUT_CLASSIFICATION	0.9999854428413102	WITHOUT_CLASSIFICATION	1.3953873877990914E-5	DESIGN	4.07100871490023E-7	DEFECT	9.020584864816904E-8	TEST	6.532986982653801E-8	DOCUMENTATION	4.064822194325184E-8	IMPLEMENTATION
/*protected void initPropertyPaths(	WITHOUT_CLASSIFICATION	0.9995422889672654	WITHOUT_CLASSIFICATION	3.974562542223548E-4	DESIGN	2.9723663993503365E-5	DEFECT	1.3949543530510984E-5	TEST	9.830017620962909E-6	DOCUMENTATION	6.751553367294181E-6	IMPLEMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999993199205585	WITHOUT_CLASSIFICATION	2.6780794213774574E-6	IMPLEMENTATION	1.660777727158303E-6	DESIGN	1.4459067892569273E-6	DEFECT	5.551161170798426E-7	DOCUMENTATION	4.609143600473982E-7	TEST
//Custom SQL (would be better if these were private)	WITHOUT_CLASSIFICATION	0.9807976251829866	WITHOUT_CLASSIFICATION	0.01919414501015079	DESIGN	7.63932821308391E-6	TEST	3.046293253720811E-7	IMPLEMENTATION	2.4506490692011157E-7	DOCUMENTATION	4.078441709686582E-8	DEFECT
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999521913617353	WITHOUT_CLASSIFICATION	4.760846371894012E-5	DESIGN	1.2831855528265571E-7	IMPLEMENTATION	3.0719297700713204E-8	TEST	2.8203971265896556E-8	DEFECT	1.293272168595561E-8	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999993199205585	WITHOUT_CLASSIFICATION	2.6780794213774574E-6	IMPLEMENTATION	1.660777727158303E-6	DESIGN	1.4459067892569273E-6	DEFECT	5.551161170798426E-7	DOCUMENTATION	4.609143600473982E-7	TEST
// aliases for identifier ( alias.id ); skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.9999998440400018	WITHOUT_CLASSIFICATION	1.1472760926125162E-7	DESIGN	3.004683790129736E-8	IMPLEMENTATION	7.440647560478889E-9	DEFECT	2.388425844340339E-9	TEST	1.356477526079861E-9	DOCUMENTATION
//decide which ResultSet to get the property value from:	WITHOUT_CLASSIFICATION	0.999285468259878	WITHOUT_CLASSIFICATION	6.262484764324218E-4	DESIGN	8.598477991181748E-5	DEFECT	2.0587457689968526E-6	DOCUMENTATION	1.9011036680374666E-7	TEST	4.962764196830842E-8	IMPLEMENTATION
//note: it is conceptually possible that a UserType could map null to //	WITHOUT_CLASSIFICATION	0.9647920944219592	WITHOUT_CLASSIFICATION	0.03518814348991469	DESIGN	1.0061946837692446E-5	IMPLEMENTATION	9.405634093748353E-6	DEFECT	2.8516416307374254E-7	TEST	9.343031544447572E-9	DOCUMENTATION
// the contract of EntityTuplizer.determineConcreteSubclassEntityName says that returning null // is an indication that the specified entity-name (this.getEntityName) should be used.	WITHOUT_CLASSIFICATION	0.8588944909264057	WITHOUT_CLASSIFICATION	0.14110507660277044	DESIGN	2.829708091326888E-7	IMPLEMENTATION	1.4150107003315079E-7	DOCUMENTATION	7.3482968967070695E-9	TEST	6.50647813893748E-10	DEFECT
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999736312932639	WITHOUT_CLASSIFICATION	1.2393696304026773E-5	IMPLEMENTATION	1.0449688126918436E-5	DEFECT	3.4114807750440094E-6	DESIGN	8.567573270876588E-8	TEST	2.8165797260377154E-8	DOCUMENTATION
// cache these since they are stateless // this one could even be static...	WITHOUT_CLASSIFICATION	0.9995404004863175	WITHOUT_CLASSIFICATION	4.59525101869983E-4	DESIGN	4.007280445339909E-8	DEFECT	2.420797814903385E-8	TEST	6.332165844704147E-9	DOCUMENTATION	3.798863916280429E-9	IMPLEMENTATION
//"as" is not in KEYWORDS	WITHOUT_CLASSIFICATION	0.9993266771919849	WITHOUT_CLASSIFICATION	3.921284244275083E-4	DESIGN	2.6735438460628267E-4	DEFECT	7.073482366930895E-6	TEST	5.769713904907521E-6	DOCUMENTATION	9.968027093591554E-7	IMPLEMENTATION
// --Commented out by Inspection (12/4/04 9:10 AM): public abstract void addCondition(String alias, String[] columns, String condition);	WITHOUT_CLASSIFICATION	0.9999888303242015	WITHOUT_CLASSIFICATION	1.0946989451177887E-5	DESIGN	1.5433791246004804E-7	DOCUMENTATION	5.571750287248617E-8	IMPLEMENTATION	7.612953430944362E-9	DEFECT	5.017978453795712E-9	TEST
//use the id column alias	WITHOUT_CLASSIFICATION	0.9999918344931504	WITHOUT_CLASSIFICATION	4.232374891063989E-6	DESIGN	3.3110187849452567E-6	IMPLEMENTATION	4.3871206041707685E-7	DOCUMENTATION	1.1380361301229065E-7	DEFECT	6.959750003285232E-8	TEST
//private List aliases = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999998298439766	WITHOUT_CLASSIFICATION	1.147592356742643E-7	IMPLEMENTATION	2.29587626241692E-8	DEFECT	2.0204963617507936E-8	TEST	9.340542729072441E-9	DESIGN	2.8925187383134937E-9	DOCUMENTATION
//columns.add(columnName); //aliases.add(tableAlias);	WITHOUT_CLASSIFICATION	0.9998819282432018	WITHOUT_CLASSIFICATION	6.340593285631449E-5	DESIGN	3.614704023290467E-5	IMPLEMENTATION	1.1199260405109831E-5	DEFECT	5.433043915736524E-6	TEST	1.8864793882384729E-6	DOCUMENTATION
//where fragment must be empty!	WITHOUT_CLASSIFICATION	0.996565697468354	WITHOUT_CLASSIFICATION	0.00339945595509395	DESIGN	1.407892356936675E-5	IMPLEMENTATION	1.2138969257369872E-5	TEST	6.525456978485984E-6	DEFECT	2.103226746970194E-6	DOCUMENTATION
// revert to traditional hibernate behavior of setting initialPoolSize to minPoolSize // unless otherwise specified with a c3p0.*-style parameter.	WITHOUT_CLASSIFICATION	0.9994145642847434	WITHOUT_CLASSIFICATION	5.506920740869443E-4	DESIGN	3.465358805152699E-5	IMPLEMENTATION	7.43287650704692E-8	TEST	1.1765866543602768E-8	DOCUMENTATION	3.958486655112608E-9	DEFECT
//arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.999997666356016	WITHOUT_CLASSIFICATION	1.7707058361791013E-6	DESIGN	3.76071745338284E-7	DEFECT	1.2395925606382812E-7	DOCUMENTATION	5.910218309335349E-8	IMPLEMENTATION	3.804963535788222E-9	TEST
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9989398798322543	WITHOUT_CLASSIFICATION	8.728868525060094E-4	DESIGN	1.5469508442523755E-4	DEFECT	2.3831776016178857E-5	IMPLEMENTATION	6.832302503376062E-6	DOCUMENTATION	1.8741522948201879E-6	TEST
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9989398798322543	WITHOUT_CLASSIFICATION	8.728868525060094E-4	DESIGN	1.5469508442523755E-4	DEFECT	2.3831776016178857E-5	IMPLEMENTATION	6.832302503376062E-6	DOCUMENTATION	1.8741522948201879E-6	TEST
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.999958314538927	WITHOUT_CLASSIFICATION	2.1060132238435563E-5	DEFECT	2.0225844916572596E-5	DESIGN	2.964897034399219E-7	IMPLEMENTATION	7.39861112122208E-8	TEST	2.900810333279658E-8	DOCUMENTATION
// Essentially: // 1) If we have a local (Hibernate) transaction in progress //      and it already has the UserTransaction cached, use that //      UserTransaction to determine the status. // 2) If a transaction manager has been located, use //      that transaction manager to determine the status. // 3) Finally, as the last resort, try to lookup the //      UserTransaction via JNDI and use that to determine the //      status.	WITHOUT_CLASSIFICATION	0.999999982889885	WITHOUT_CLASSIFICATION	1.3573231625494796E-8	IMPLEMENTATION	3.3599513630728813E-9	DESIGN	1.6470462800814333E-10	DEFECT	1.2209210332693537E-11	DOCUMENTATION	1.7989412714788128E-14	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9982414523766154	WITHOUT_CLASSIFICATION	0.0016475936779793072	DESIGN	7.351568261524677E-5	IMPLEMENTATION	1.679939678418562E-5	DOCUMENTATION	1.6057984814387536E-5	DEFECT	4.580881191449248E-6	TEST
//swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.9993564176626302	WITHOUT_CLASSIFICATION	3.2661970942386844E-4	IMPLEMENTATION	3.014152875201481E-4	DESIGN	1.4709665396305349E-5	DEFECT	5.742021740867584E-7	DOCUMENTATION	2.6347285540797855E-7	TEST
// ignore it	WITHOUT_CLASSIFICATION	0.9999986582513094	WITHOUT_CLASSIFICATION	5.870617195569445E-7	DESIGN	5.434693584359119E-7	DEFECT	1.2875494862941514E-7	IMPLEMENTATION	5.6679876414652236E-8	DOCUMENTATION	2.5782787810790355E-8	TEST
// we need to dirty check many-to-ones with not-found="ignore" in order  // to update the cache (not the database), since in this case a null // entity reference can lose information	WITHOUT_CLASSIFICATION	0.9999932193985585	WITHOUT_CLASSIFICATION	3.6836560120615557E-6	DEFECT	2.0315200124287627E-6	DESIGN	1.0087895979074938E-6	IMPLEMENTATION	5.580303822140206E-8	DOCUMENTATION	8.32780916536973E-10	TEST
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999690142315271	WITHOUT_CLASSIFICATION	3.013673431755398E-5	IMPLEMENTATION	5.236994301124585E-7	DEFECT	2.5467894291309583E-7	DESIGN	4.039348977426959E-8	TEST	3.02622925094975E-8	DOCUMENTATION
// Regions can get instantiated in the course of normal work (e.g. // a named query region will be created the first time the query is // executed), so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.9860020998688589	WITHOUT_CLASSIFICATION	0.009017652244578792	DESIGN	0.0049802305423952975	DEFECT	8.022535735756473E-9	IMPLEMENTATION	7.58880472647481E-9	DOCUMENTATION	1.7328264270492072E-9	TEST
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.99995716021739	WITHOUT_CLASSIFICATION	3.443423756691488E-5	DESIGN	7.944206724556588E-6	IMPLEMENTATION	2.642709506301451E-7	TEST	1.4819027900330344E-7	DOCUMENTATION	4.887708878013885E-8	DEFECT
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999636242502451	WITHOUT_CLASSIFICATION	1.883370419489575E-5	DESIGN	1.0642681110488267E-5	DEFECT	6.845574878979888E-6	IMPLEMENTATION	3.136154937328766E-8	TEST	2.2428021231740092E-8	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998806279709738	WITHOUT_CLASSIFICATION	1.1804286643147365E-4	DESIGN	5.694714763942851E-7	TEST	3.017375899384294E-7	IMPLEMENTATION	2.908552755352733E-7	DEFECT	1.6709825302888168E-7	DOCUMENTATION
// NOTE : this is being used from the process of shutting down a // SessionFactory. Specific things to consider: // (1) this clearing of the region should not propagate to // other nodes on the cluster (if any); this is the // cache-mode-local option bit... // (2) really just trying a best effort to cleanup after // ourselves; lock failures, etc are not critical here; // this is the fail-silently option bit...	WITHOUT_CLASSIFICATION	0.9999898047283212	DESIGN	6.314177500293735E-6	WITHOUT_CLASSIFICATION	3.878109921407742E-6	DEFECT	1.9366230176510623E-9	TEST	8.908133197669756E-10	IMPLEMENTATION	1.568205550760853E-10	DOCUMENTATION
// need to extract the component values and check for subtype replacements...	WITHOUT_CLASSIFICATION	0.5459610945241736	DESIGN	0.40533421238357553	WITHOUT_CLASSIFICATION	0.048692768947906084	IMPLEMENTATION	7.96469090192177E-6	DOCUMENTATION	2.1793131732708514E-6	TEST	1.7801402696602132E-6	DEFECT
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999999995118631	WITHOUT_CLASSIFICATION	2.614558467408603E-10	DEFECT	1.9690029257496626E-10	DESIGN	2.5820108723531814E-11	IMPLEMENTATION	2.8867827749106002E-12	TEST	1.0737715471265257E-12	DOCUMENTATION
// for now, just "re-flatten" the metamodel since this is temporary stuff anyway (HHH-1907)	WITHOUT_CLASSIFICATION	0.6480605154998254	WITHOUT_CLASSIFICATION	0.3519386074249581	DESIGN	4.7060778107337386E-7	DEFECT	3.648553287182376E-7	TEST	3.8565472266958414E-8	DOCUMENTATION	3.0466343195527543E-9	IMPLEMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9998676003368147	WITHOUT_CLASSIFICATION	1.3222904434226284E-4	DESIGN	1.0275636166101318E-7	IMPLEMENTATION	4.548603470729905E-8	DOCUMENTATION	2.0196162070592487E-8	DEFECT	2.180284657861931E-9	TEST
//This solution would allow us to eliminate the owner arg to disassemble(), but //what if the collection was null, and then later had elements added? seems unsafe //session.getPersistenceContext().getCollectionEntry( (PersistentCollection) value ).getKey();	WITHOUT_CLASSIFICATION	0.8972557576038203	DESIGN	0.10170223910519839	WITHOUT_CLASSIFICATION	9.83392759354928E-4	DEFECT	5.634309389557396E-5	IMPLEMENTATION	1.1664709342552015E-6	DOCUMENTATION	1.1009667967682345E-6	TEST
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999883816370603	WITHOUT_CLASSIFICATION	6.084900243547521E-6	DESIGN	4.0843784835200285E-6	DEFECT	8.470621797326465E-7	IMPLEMENTATION	4.860199355459947E-7	TEST	1.160020971754322E-7	DOCUMENTATION
// some collections are not lazy:	WITHOUT_CLASSIFICATION	0.9998462766363673	WITHOUT_CLASSIFICATION	1.2702945632802172E-4	DESIGN	1.8899781697936873E-5	IMPLEMENTATION	6.294145471437613E-6	DEFECT	1.0635094182453905E-6	TEST	4.364707169224664E-7	DOCUMENTATION
// Here we don't want to suspend the tx. If we do: // 1) We might be caching query results that reflect uncommitted // changes. No tx == no WL on cache node, so other threads // can prematurely see those query results // 2) No tx == immediate replication. More overhead, plus we // spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.9891744934444803	WITHOUT_CLASSIFICATION	0.010749194595398425	DESIGN	7.63072782287592E-5	DEFECT	3.8154710121197024E-9	DOCUMENTATION	8.619004186988742E-10	TEST	4.521048361081328E-12	IMPLEMENTATION
// return the (fully resolved) identifier value, but do not resolve // to the actual referenced entity instance // NOTE: the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.9999999848797302	WITHOUT_CLASSIFICATION	1.3122827820251333E-8	DEFECT	1.6478042018173087E-9	DESIGN	2.650144521935168E-10	IMPLEMENTATION	6.581631185197788E-11	DOCUMENTATION	1.8807170019176676E-11	TEST
// Add a zero (or quite low) timeout option so we don't block. // Ignore any TimeoutException. Basically we forego caching the // query result in order to avoid blocking. // Reads are done with suspended tx, so they should not hold the // lock for long.  Not caching the query result is OK, since // any subsequent read will just see the old result with its // out-of-date timestamp; that result will be discarded and the // db query performed again.	WITHOUT_CLASSIFICATION	0.9998457014289855	WITHOUT_CLASSIFICATION	1.3042754581483277E-4	DEFECT	2.289491894625162E-5	DESIGN	8.395380580295951E-7	IMPLEMENTATION	1.2219946999559284E-7	DOCUMENTATION	1.4368725391076345E-8	TEST
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9999964346285916	WITHOUT_CLASSIFICATION	3.257354175287578E-6	DESIGN	2.260951398872489E-7	DEFECT	6.067793927536362E-8	IMPLEMENTATION	1.9573862993657897E-8	TEST	1.6702910276323029E-9	DOCUMENTATION
// We have the JBCWriteMutex, so no other *local* thread will  // be trying to write this key.  // It's possible here some remote thread has come in and // changed the values again, but since we are reading the // values to write to JBC right now, we know we are writing // the latest values; i.e. we don't assume that what we cached // in entry.update() above is what we should write to JBC *now*. // Our write could be redundant, i.e. we are writing what // some remote thread just came in an wrote.  There is a chance  // that yet another remote thread will update us, and we'll then // overwrite that later data in JBC.  But, all remote nodes will // ignore that change in their localCache; the only place it  // will live will be in JBC, where it can only effect the  // initial state transfer values on newly joined nodes  // (i.e. populateLocalCache()).	WITHOUT_CLASSIFICATION	0.9999999999742192	WITHOUT_CLASSIFICATION	2.3802178015831634E-11	DEFECT	1.9416246596909894E-12	DESIGN	1.5394037130661834E-14	TEST	1.3396920574776244E-14	IMPLEMENTATION	8.318029004242474E-15	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999929058944176	WITHOUT_CLASSIFICATION	4.5711291569954946E-6	DEFECT	1.570420921504551E-6	DOCUMENTATION	9.241442498933832E-7	DESIGN	2.703775751946931E-8	IMPLEMENTATION	1.3734963266301545E-9	TEST
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999929058944176	WITHOUT_CLASSIFICATION	4.5711291569954946E-6	DEFECT	1.570420921504551E-6	DOCUMENTATION	9.241442498933832E-7	DESIGN	2.703775751946931E-8	IMPLEMENTATION	1.3734963266301545E-9	TEST
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9992851616983677	WITHOUT_CLASSIFICATION	3.305526503371449E-4	DESIGN	2.4375425772477964E-4	TEST	7.469139318969118E-5	DEFECT	6.081692334131495E-5	IMPLEMENTATION	5.023077039329572E-6	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9941110516900238	WITHOUT_CLASSIFICATION	0.005803561585079557	DESIGN	5.7121990422501395E-5	IMPLEMENTATION	2.79463309458577E-5	DEFECT	2.508191388018937E-7	TEST	6.758438946751158E-8	DOCUMENTATION
// we need to obtain the lock before any actions are // executed, since this may be an inverse="true" // bidirectional association and it is one of the // earlier entity actions which actually updates // the database (this action is resposible for // second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.9999997603640957	WITHOUT_CLASSIFICATION	1.4878609483420187E-7	DESIGN	8.269380821141268E-8	IMPLEMENTATION	7.256600404003303E-9	DOCUMENTATION	7.639688992607424E-10	TEST	1.354320480179392E-10	DEFECT
//postDelete: // After actually deleting a row, record the fact that the instance no longer  // exists on the database (needed for identity-column key generation), and // remove it from the session cache	WITHOUT_CLASSIFICATION	0.9994407816233107	WITHOUT_CLASSIFICATION	5.592045458686311E-4	DESIGN	1.3275279314125836E-8	DEFECT	2.802487874046145E-10	TEST	1.7596977646691248E-10	IMPLEMENTATION	9.932280519616737E-11	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.999992463609089	WITHOUT_CLASSIFICATION	6.835172943918101E-6	DESIGN	4.4835015714046607E-7	DEFECT	1.7479444436979803E-7	DOCUMENTATION	6.397277108738948E-8	IMPLEMENTATION	1.4100594634715046E-8	TEST
//TODO find a decent name before documenting	DOCUMENTATION	0.6349099694299887	DOCUMENTATION	0.25216640043754657	WITHOUT_CLASSIFICATION	0.09976223767189996	DESIGN	0.0108129433049841	DEFECT	0.0018130969406253113	IMPLEMENTATION	5.353522149554753E-4	TEST
//FIXME we don't have the associated entity table name here, has to be done in a second pass	DEFECT	0.7054481847451849	WITHOUT_CLASSIFICATION	0.2944053263485149	DESIGN	1.053477805457246E-4	IMPLEMENTATION	2.0134105965675973E-5	DEFECT	1.172799530182829E-5	TEST	9.279024487031256E-6	DOCUMENTATION
// For a one-to-many, a <bag> is not really a bag; // it is *really* a set, since it can't contain the // same element twice. It could be considered a bug // in the mapping dtd that <bag> allows <one-to-many>.	DEFECT	0.9789115189203911	WITHOUT_CLASSIFICATION	0.01147237410124882	DEFECT	0.00945017354395298	DESIGN	1.6589277285247934E-4	IMPLEMENTATION	2.499770820540576E-8	DOCUMENTATION	1.5663846444616767E-8	TEST
// RDMS does not directly support the trim() function, we use rtrim() and ltrim()	DEFECT	0.9995302134988157	WITHOUT_CLASSIFICATION	2.7604157021911003E-4	IMPLEMENTATION	1.8253535916580568E-4	DESIGN	1.0176324294978143E-5	DEFECT	8.844511006620286E-7	DOCUMENTATION	1.4879640382837126E-7	TEST
/*         * The following types are not supported in RDMS/JDBC and therefore commented out.         * However, in some cases, mapping them to CHARACTER columns works         * for many applications, but does not work for all cases.         */	DEFECT	0.8814447245203209	DEFECT	0.11843345543002076	WITHOUT_CLASSIFICATION	1.115189760933459E-4	DESIGN	7.7893260411018E-6	DOCUMENTATION	1.8426684411030322E-6	TEST	6.690790828938109E-7	IMPLEMENTATION
// The preference here would be //   SQLFunctionTemplate( Hibernate.TIMESTAMP, "current_timestamp(?1)", false) // but this appears not to work. // Jay Nance 2006-09-22	DEFECT	0.6041541264435878	DEFECT	0.39462041984659657	WITHOUT_CLASSIFICATION	0.001054372205485816	DESIGN	1.5781366270488934E-4	IMPLEMENTATION	7.4064591481158315E-6	DOCUMENTATION	5.861382476889583E-6	TEST
// note: at least my local SQL Server 2005 Express shows this not working...	DEFECT	0.7480153686980311	WITHOUT_CLASSIFICATION	0.1511692391383128	DESIGN	0.09952382202407599	DEFECT	0.0012077636363946823	TEST	7.085026394772091E-5	IMPLEMENTATION	1.2956239237677745E-5	DOCUMENTATION
// note: at least my local MySQL 5.1 install shows this not working...	DEFECT	0.4926343288801641	WITHOUT_CLASSIFICATION	0.35308483378780137	DESIGN	0.15407108639657505	DEFECT	1.0745527043479743E-4	TEST	9.091090349025868E-5	IMPLEMENTATION	1.1384761534336747E-5	DOCUMENTATION
/*	DEFECT	0.9819192621518401	WITHOUT_CLASSIFICATION	0.012598127708177996	DESIGN	0.0034337196809112133	DEFECT	0.0017673486614797169	IMPLEMENTATION	1.7059466924859105E-4	DOCUMENTATION	1.109471283424685E-4	TEST
//Don't need this, because we should never ever be selecting no columns in an insert ... select... //and because it causes a bug on DB2	DEFECT	0.9995785052990315	WITHOUT_CLASSIFICATION	2.709241373079196E-4	DESIGN	1.1965930515623049E-4	DEFECT	2.849192355542841E-5	TEST	2.328493509696798E-6	DOCUMENTATION	9.084143911348258E-8	IMPLEMENTATION
// TODO : this is broke for subqueries in statements other than selects...	DEFECT	0.9996768074933552	DESIGN	2.7579978531775496E-4	DEFECT	3.391074554293453E-5	TEST	1.0048006268162997E-5	WITHOUT_CLASSIFICATION	2.561894637139077E-6	DOCUMENTATION	8.720748787684369E-7	IMPLEMENTATION
// TODO : should this be an error?	DEFECT	0.9999926935654116	DESIGN	3.0730580762042995E-6	IMPLEMENTATION	2.9364641109348103E-6	DEFECT	7.843304091104887E-7	TEST	3.9258413625597257E-7	DOCUMENTATION	1.199978557360408E-7	WITHOUT_CLASSIFICATION
// TODO : not sure which (either?) is correct, could not find docs on how to do this. // did find various blogs and forums mentioning that select CURRENT_TIMESTAMP // does not work...	DEFECT	0.9884305575576375	DESIGN	0.011540383931685659	DEFECT	1.4802613400148619E-5	DOCUMENTATION	1.3770308387696336E-5	TEST	3.313552573454015E-7	IMPLEMENTATION	1.5423363162217203E-7	WITHOUT_CLASSIFICATION
// TODO: figure out how this should be set. /////////////////////////////////////////////////////////////////////////////// // This was the reason for failures regarding INDEX_OP and subclass joins on // theta-join dialects; not sure what behaviour we were trying to emulate ;) //	DEFECT	0.5848518196614262	DESIGN	0.4147886290701503	DEFECT	2.855058953431385E-4	WITHOUT_CLASSIFICATION	7.251789194241394E-5	IMPLEMENTATION	9.610695904260254E-7	TEST	5.664115474429862E-7	DOCUMENTATION
//TODO: would be nice to use false, but issues with MS SQL	DEFECT	0.7738795012740879	DESIGN	0.11796660041819211	WITHOUT_CLASSIFICATION	0.08548064087169016	DEFECT	0.019297218623111775	IMPLEMENTATION	0.0031114986042481934	TEST	2.6454020866985625E-4	DOCUMENTATION
//TODO: would be nice to use false, but issues with MS SQL	DEFECT	0.7738795012740879	DESIGN	0.11796660041819211	WITHOUT_CLASSIFICATION	0.08548064087169016	DEFECT	0.019297218623111775	IMPLEMENTATION	0.0031114986042481934	TEST	2.6454020866985625E-4	DOCUMENTATION
// TODO: cannot use generateSuffixes() - it handles the initial suffix differently.	DEFECT	0.999765435967104	DESIGN	1.5113173831719507E-4	IMPLEMENTATION	6.209487510018873E-5	DEFECT	1.9680705167816854E-5	WITHOUT_CLASSIFICATION	8.386288080314778E-7	TEST	8.180855028034294E-7	DOCUMENTATION
// starts with an alias (old style) // semi-bad thing about this: can't re-alias another alias.....	DEFECT	0.9930035389635381	WITHOUT_CLASSIFICATION	0.006989825106974372	DESIGN	5.452849484541527E-6	DEFECT	1.1588330810721796E-6	TEST	2.4020870963668288E-8	DOCUMENTATION	2.2605101767245058E-10	IMPLEMENTATION
//TODO: BUG! this currently fails for named queries for non-POJO entities	DEFECT	0.9425749802999358	DESIGN	0.02647369696523607	WITHOUT_CLASSIFICATION	0.017166961960178702	IMPLEMENTATION	0.011615882016507635	DEFECT	0.0016050253451005867	TEST	5.634534130413174E-4	DOCUMENTATION
// this call is side-effecty	DEFECT	0.9999975556478452	WITHOUT_CLASSIFICATION	2.278179528433869E-6	DESIGN	1.291126538334435E-7	DEFECT	1.4519891114588535E-8	IMPLEMENTATION	1.346472592219489E-8	TEST	9.075355523364212E-9	DOCUMENTATION
//TODO: old version did not require hashmap lookup: //keys[collectionOwner].getIdentifier()	DEFECT	0.9291724540222769	WITHOUT_CLASSIFICATION	0.04541724505658366	IMPLEMENTATION	0.02453719877624694	DEFECT	8.69144343955956E-4	DESIGN	2.5598595930863937E-6	DOCUMENTATION	1.3979413434460015E-6	TEST
//TODO: when this is the entry point, we should use an INNER_JOIN for fetching the many-to-many elements!	DEFECT	0.8800775703187145	WITHOUT_CLASSIFICATION	0.10697546646435008	DESIGN	0.012587101941789934	DEFECT	2.2424988274474561E-4	IMPLEMENTATION	9.336580031397411E-5	DOCUMENTATION	4.224559208694555E-5	TEST
// this is only needed (afaict) for processing results from the query cache; // however, this cannot possibly work in the case of discovered types...	DEFECT	0.5071907480574976	WITHOUT_CLASSIFICATION	0.4924953860214044	DEFECT	3.129458223303011E-4	DESIGN	6.772544550507474E-7	TEST	2.4083496741856264E-7	DOCUMENTATION	2.009345326224457E-9	IMPLEMENTATION
//TODO: this requires that the collection is defined after the //      referenced property in the mapping file (ok?)	DEFECT	0.9734060586395895	WITHOUT_CLASSIFICATION	0.022134160719593902	DESIGN	0.003579067764487618	IMPLEMENTATION	6.69045287493357E-4	DEFECT	1.328878302185115E-4	TEST	7.877975861721977E-5	DOCUMENTATION
//TODO: is this completely correct?	DEFECT	0.9753577157698761	DESIGN	0.024386333768919792	WITHOUT_CLASSIFICATION	1.2101274292502345E-4	IMPLEMENTATION	7.522897584526014E-5	TEST	5.508257903638555E-5	DEFECT	4.626163397475499E-6	DOCUMENTATION
// three general cases we check here as to whether to render a physical SQL join: // 1) is our parent a DotNode as well?  If so, our property reference is // 	DEFECT	0.9999804697117329	WITHOUT_CLASSIFICATION	1.86632599553386E-5	DESIGN	7.819791297062984E-7	DEFECT	8.330331055075103E-8	DOCUMENTATION	1.4506873399640348E-9	IMPLEMENTATION	2.9518413385688724E-10	TEST
// TODO : currently we really do not handle ValueInclusion.PARTIAL... // ValueInclusion.PARTIAL would indicate parts of a component need to // be included in the select; currently we then just render the entire // component into the select clause in that case.	DEFECT	0.8684551922596443	IMPLEMENTATION	0.1303707115580358	DESIGN	0.0011614800988589008	DEFECT	9.492063000819637E-6	WITHOUT_CLASSIFICATION	3.0310168539257807E-6	DOCUMENTATION	9.300360629634164E-8	TEST
//TODO: inexact, what we really need to know is: are any outer joins used?	DEFECT	0.9999835727819275	DESIGN	9.731412157786057E-6	IMPLEMENTATION	3.0669710349556063E-6	DOCUMENTATION	2.878583570151848E-6	WITHOUT_CLASSIFICATION	6.043518075532768E-7	DEFECT	1.4589950200122245E-7	TEST
// todo : this call will not work for anything other than pojos!	DEFECT	0.6056008336579781	WITHOUT_CLASSIFICATION	0.3374687570402887	DEFECT	0.05218029046957581	DESIGN	0.004668464166186705	IMPLEMENTATION	5.1783901597159624E-5	TEST	2.9870764373594652E-5	DOCUMENTATION
//TODO: currently we don't know a SessionFactory reference when building the Tuplizer //      THIS IS A BUG (embedded-xml=false on component) // TODO : fix this after HHH-1907 is complete	DEFECT	0.9999996231442918	DESIGN	3.6074841241493837E-7	DEFECT	9.520289798876618E-9	IMPLEMENTATION	6.274439553563396E-9	DOCUMENTATION	3.11132723832131E-10	TEST	1.433679186767484E-12	WITHOUT_CLASSIFICATION
// TODO: this disables laziness even in non-pojo entity modes:	DEFECT	0.5848804075315179	WITHOUT_CLASSIFICATION	0.3244666624035038	DESIGN	0.08544531872680965	IMPLEMENTATION	0.0026883720253060924	DEFECT	0.001380855159728461	TEST	0.0011383841531341088	DOCUMENTATION
//TODO: currently broken for unique-key references (does not detect //      change to unique key property of the associated object) //the owner of the association is not the owner of the id	DEFECT	0.9002579521608138	WITHOUT_CLASSIFICATION	0.09022479024622684	DEFECT	0.005996436493999169	IMPLEMENTATION	0.0026914637322527795	DOCUMENTATION	4.7477179047464757E-4	DESIGN	3.5458557623281936E-4	TEST
//TODO: entities CAN be compared, by PK, fix this! -> only if/when we can extract the id values....	DEFECT	0.9934748559677167	DESIGN	0.002601483743000282	WITHOUT_CLASSIFICATION	0.0021451080572374827	DEFECT	0.0016421191678776743	IMPLEMENTATION	1.0069761510138584E-4	TEST	3.573544906642848E-5	DOCUMENTATION
//TODO: entities CAN be compared, by PK and entity name, fix this!	DEFECT	0.9789406323189426	DESIGN	0.017803754316151412	WITHOUT_CLASSIFICATION	0.0017345444943251806	DEFECT	0.001337115375054348	IMPLEMENTATION	1.4272849822923874E-4	TEST	4.1224997297256093E-5	DOCUMENTATION
//TODO: this is kinda inconsistent with CollectionType	DEFECT	0.9643134373164417	DESIGN	0.01208029829022414	DEFECT	0.009954165074682298	WITHOUT_CLASSIFICATION	0.009454330933669822	IMPLEMENTATION	0.004010977306945382	TEST	1.8679107803652495E-4	DOCUMENTATION
//TODO: would be nice to use false, but issues with MS SQL	DEFECT	0.7738795012740879	DESIGN	0.11796660041819211	WITHOUT_CLASSIFICATION	0.08548064087169016	DEFECT	0.019297218623111775	IMPLEMENTATION	0.0031114986042481934	TEST	2.6454020866985625E-4	DOCUMENTATION
// TODO: does not work for EntityMode.DOM4J yet!	DEFECT	0.9730405667494401	DEFECT	0.024754488878186216	DESIGN	0.0018240406593399276	IMPLEMENTATION	3.296930989103801E-4	TEST	4.804458323085911E-5	DOCUMENTATION	3.166030892598851E-6	WITHOUT_CLASSIFICATION
//TODO: currently broken for unique-key references (does not detect //      change to unique key property of the associated object)	DEFECT	0.7309774514389267	WITHOUT_CLASSIFICATION	0.15177883412529872	DEFECT	0.04697253826513282	IMPLEMENTATION	0.03920838462317926	DESIGN	0.028712947902594214	DOCUMENTATION	0.0023498436448682724	TEST
//TODO: not really completely correct, since //      the uoe could occur while resolving //      associations, leaving the PC in an //      inconsistent state	DEFECT	0.6944126960453331	DEFECT	0.29718410374358406	WITHOUT_CLASSIFICATION	0.005025241314095967	DESIGN	0.002616094679780177	TEST	5.436884123799153E-4	IMPLEMENTATION	2.181758048267287E-4	DOCUMENTATION
// could happen for custom Criteria impls.  Not likely, but... // 	DEFECT	0.80181603014557	WITHOUT_CLASSIFICATION	0.1930266697383669	DESIGN	0.004744133782126648	DEFECT	3.571872800832379E-4	TEST	5.381308155790878E-5	IMPLEMENTATION	2.165972295203548E-6	DOCUMENTATION
// This does not support the Cache SQL 'DISTINCT BY (comma-list)' extensions, // but this extension is not supported through Hibernate anyway.	DEFECT	0.9997247228443551	WITHOUT_CLASSIFICATION	2.7470093509658427E-4	DESIGN	4.408685313212134E-7	DEFECT	1.0541036063905899E-7	TEST	1.860646313108125E-8	DOCUMENTATION	1.1335193288315831E-8	IMPLEMENTATION
// note that this timestamp is not correct if the connection provider // returns an older JDBC connection that was associated with a // transaction that was already begun before openSession() was called // (don't know any possible solution to this!)	DEFECT	0.9349676815623257	WITHOUT_CLASSIFICATION	0.03707194894975212	DESIGN	0.027424673551814514	IMPLEMENTATION	5.185746252007158E-4	DEFECT	1.4517147319278223E-5	TEST	2.6041635877398474E-6	DOCUMENTATION
//no need to take a snapshot - this is a  //performance optimization, but not really //important, except for entities with huge  //mutable property values	DEFECT	0.998266168323134	WITHOUT_CLASSIFICATION	0.0016807968283160727	DEFECT	4.990027936973907E-5	DESIGN	1.7176670824804243E-6	TEST	1.230951707374242E-6	DOCUMENTATION	1.8595039016808724E-7	IMPLEMENTATION
// TODO : this really needs to be delayed unitl after we definitively know the operand node type; // where this is currently a problem is parameters for which where we cannot unequivocally // resolve an expected type	DEFECT	0.9223618097330979	DESIGN	0.06805620841718805	DEFECT	0.005376617285061735	WITHOUT_CLASSIFICATION	0.003515654895751181	IMPLEMENTATION	6.808688869126348E-4	DOCUMENTATION	8.840781988583694E-6	TEST
// First, validate all the enabled filters... //TODO: this implementation has bad performance	DEFECT	0.9987126397956134	IMPLEMENTATION	7.21298606576782E-4	DESIGN	4.5576507236150715E-4	WITHOUT_CLASSIFICATION	1.0351848461806922E-4	DEFECT	4.261068674062571E-6	DOCUMENTATION	2.5169721562000743E-6	TEST
// TODO: what if batchUpdate is a callablestatement ? // calls executeBatch()	DEFECT	0.8220385175604441	WITHOUT_CLASSIFICATION	0.12325912479231105	DESIGN	0.03504584472045129	IMPLEMENTATION	0.015456240753615616	DEFECT	0.004127686210213598	TEST	7.258596296442381E-5	DOCUMENTATION
// assume that the row was not there since it previously had only null // values, so do an INSERT instead //TODO: does not respect dynamic-insert	DEFECT	0.999531151941828	WITHOUT_CLASSIFICATION	4.148354283125065E-4	DEFECT	4.6694730405517695E-5	DESIGN	4.288253289091373E-6	TEST	1.5439049719398803E-6	DOCUMENTATION	1.4857411930489183E-6	IMPLEMENTATION
//TODO: passing null here, because this method is not really used for DOM4J at the moment //      but it is still a bug, if we don't get rid of this!	DEFECT	0.9726330238503171	DESIGN	0.017788417169686713	DEFECT	0.006600635809418858	IMPLEMENTATION	0.001963550395572805	WITHOUT_CLASSIFICATION	9.462853096431841E-4	TEST	6.808746536149938E-5	DOCUMENTATION
//note that this implementation is kinda broken //for components with many-to-one associations	DEFECT	0.9976351335091719	WITHOUT_CLASSIFICATION	0.0023289414464875775	DESIGN	2.3779410633209433E-5	TEST	5.989291773465062E-6	DEFECT	5.478550858661232E-6	IMPLEMENTATION	6.777910751802687E-7	DOCUMENTATION
// TODO: at the point where we are resolving collection references, we don't // know if the uk value has been resolved (depends if it was earlier or // later in the mapping document) - now, we could try and use e.getStatus() // to decide to semiResolve(), trouble is that initializeEntity() reuses // the same array for resolved and hydrated values	DEFECT	0.3940526448852204	DESIGN	0.3252366647082951	DEFECT	0.15481095888076085	IMPLEMENTATION	0.11295168564521883	WITHOUT_CLASSIFICATION	0.012942321623279771	DOCUMENTATION	5.7242572251763545E-6	TEST
//TODO: This is assertion is disabled because there is a bug that means the //	DEFECT	0.5777016276299219	WITHOUT_CLASSIFICATION	0.2990373969191895	DEFECT	0.10113446003431653	DESIGN	0.02017090244437804	IMPLEMENTATION	0.0019263256138601886	TEST	2.92873583337416E-5	DOCUMENTATION
// This doesn't actually seem to work but it *might* // work on some dbs. Also it doesn't work if there // are multiple columns of results because it // is not accounting for the suffix: // return new String[] { getDiscriminatorColumnName() };	DEFECT	0.6594591436445871	WITHOUT_CLASSIFICATION	0.34053109110033425	DESIGN	9.752812601108595E-6	DEFECT	9.800547560452924E-9	TEST	2.631228333343064E-9	DOCUMENTATION	1.070165357446592E-11	IMPLEMENTATION
// TODO: Deal with the "optional" attribute in the <join> mapping; // this code assumes that optional defaults to "true" because it // doesn't actually seem to work in the fetch="join" code // // Note that actual proper handling of optional-ality here is actually // more involved than this patch assumes.  Remember that we might have // multiple <join/> mappings associated with a single entity.  Really // a couple of things need to happen to properly handle optional here: //  1) First and foremost, when handling multiple <join/>s, we really //      should be using the entity root table as the driving table; //      another option here would be to choose some non-optional joined //      table to use as the driving table.  In all likelihood, just using //      the root table is much simplier //  2) Need to add the FK columns corresponding to each joined table //      to the generated select list; these would then be used when //      iterating the result set to determine whether all non-optional //      data is present // My initial thoughts on the best way to deal with this would be // to introduce a new SequentialSelect abstraction that actually gets // generated in the persisters (ok, SingleTable...) and utilized here. // It would encapsulated all this required optional-ality checking...	DEFECT	0.9914094902334829	DESIGN	0.008564339538964169	WITHOUT_CLASSIFICATION	1.735754635926768E-5	DEFECT	4.2517229382983854E-6	TEST	2.3722960696492353E-6	IMPLEMENTATION	2.188662185653396E-6	DOCUMENTATION
// todo : what else to do here?	DESIGN	0.930389734536653	WITHOUT_CLASSIFICATION	0.06112917963192296	IMPLEMENTATION	0.0084442617806397	DESIGN	2.1550012818066065E-5	DEFECT	1.057975448369792E-5	TEST	4.6942834824960616E-6	DOCUMENTATION
//put() has nowait semantics, is this really appropriate? //note that it needs to be async replication, never local or sync	DESIGN	0.6965384734965873	WITHOUT_CLASSIFICATION	0.29905375440474763	DESIGN	0.004123512766176728	DEFECT	2.257012007171623E-4	IMPLEMENTATION	5.6536831189567575E-5	DOCUMENTATION	2.0213005816612256E-6	TEST
// 'hibernate.temp.use_jdbc_metadata_defaults' is a temporary magic value. // The need for it is intended to be alleviated with future developement, thus it is // not defined as an Environment constant... // // it is used to control whether we should consult the JDBC metadata to determine // certain Settings default values; it is useful to *not* do this when the database // may not be available (mainly in tools usage).	DESIGN	0.9987061760841768	WITHOUT_CLASSIFICATION	0.0012938231237146485	DESIGN	5.401452357965585E-10	DEFECT	2.2430377598129274E-10	TEST	2.765742548155982E-11	DOCUMENTATION	1.9832654550299617E-15	IMPLEMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.9415446981238131	DESIGN	0.058355114865733825	WITHOUT_CLASSIFICATION	4.27367601325224E-5	DEFECT	3.304731928618004E-5	IMPLEMENTATION	1.6812506292155065E-5	TEST	7.590424741915894E-6	DOCUMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.9415446981238131	DESIGN	0.058355114865733825	WITHOUT_CLASSIFICATION	4.27367601325224E-5	DEFECT	3.304731928618004E-5	IMPLEMENTATION	1.6812506292155065E-5	TEST	7.590424741915894E-6	DOCUMENTATION
// todo : eventually merge this with TreeCache and just add optional opt-lock support there.	DESIGN	0.9957378351764965	WITHOUT_CLASSIFICATION	0.004213356865885149	IMPLEMENTATION	4.777454129503257E-5	DESIGN	8.005809760902297E-7	DOCUMENTATION	1.803572824183826E-7	TEST	5.247806481929352E-8	DEFECT
// can happen because of the multiple ways Cache.remove() // can be invoked :(	DESIGN	0.9999978757110877	WITHOUT_CLASSIFICATION	2.114718804560371E-6	DESIGN	6.9064187389739565E-9	DEFECT	1.5289489967734607E-9	IMPLEMENTATION	9.799779187876824E-10	DOCUMENTATION	1.5476225237400007E-10	TEST
// work around the "feature" where tree cache is validating the // inserted node during the next transaction.  no idea...	DESIGN	0.9982773479313726	WITHOUT_CLASSIFICATION	0.0014739607460179957	DESIGN	2.4798187925495577E-4	DEFECT	3.483779545983625E-7	IMPLEMENTATION	2.2683317456191335E-7	DOCUMENTATION	1.3423222545715237E-7	TEST
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.9998598310435675	DESIGN	1.0677815112112908E-4	WITHOUT_CLASSIFICATION	2.9218196444536592E-5	DOCUMENTATION	3.4852719618611464E-6	DEFECT	6.338781178688848E-7	TEST	5.345878724283019E-8	IMPLEMENTATION
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.9998598310435675	DESIGN	1.0677815112112908E-4	WITHOUT_CLASSIFICATION	2.9218196444536592E-5	DOCUMENTATION	3.4852719618611464E-6	DEFECT	6.338781178688848E-7	TEST	5.345878724283019E-8	IMPLEMENTATION
// FIXME Hacky workaround to JBCACHE-1202	DESIGN	0.9989012928911769	DESIGN	0.0010949182912608128	DEFECT	3.3505660291288033E-6	IMPLEMENTATION	3.6365786434534126E-7	DOCUMENTATION	4.2192808938675584E-8	WITHOUT_CLASSIFICATION	3.240085989993641E-8	TEST
// FIXME Hacky workaround to JBCACHE-1202	DESIGN	0.9989012928911769	DESIGN	0.0010949182912608128	DEFECT	3.3505660291288033E-6	IMPLEMENTATION	3.6365786434534126E-7	DOCUMENTATION	4.2192808938675584E-8	WITHOUT_CLASSIFICATION	3.240085989993641E-8	TEST
// TODO: I considered validating TS cache config here, // but decided to defer unti getTimestampsCacheInstance() in case the  // cache is never actually used	DESIGN	0.9113162755216	IMPLEMENTATION	0.07173082481361817	DESIGN	0.01632887095087897	WITHOUT_CLASSIFICATION	6.070824682818703E-4	DEFECT	1.5930049555829738E-5	DOCUMENTATION	1.0161960652322877E-6	TEST
// TODO Is this a valid operation on a timestamps cache?	DESIGN	0.999746982122329	DESIGN	1.868859344087373E-4	IMPLEMENTATION	4.961094758490602E-5	WITHOUT_CLASSIFICATION	1.0031561229089113E-5	TEST	3.793846415304453E-6	DEFECT	2.6955880327442623E-6	DOCUMENTATION
// TODO Is this a valid operation on a timestamps cache?	DESIGN	0.999746982122329	DESIGN	1.868859344087373E-4	IMPLEMENTATION	4.961094758490602E-5	WITHOUT_CLASSIFICATION	1.0031561229089113E-5	TEST	3.793846415304453E-6	DEFECT	2.6955880327442623E-6	DOCUMENTATION
// TODO Why not use the timestamp in a DataVersion?	DESIGN	0.9935198289833973	DESIGN	0.006043378226338971	IMPLEMENTATION	3.686901791785729E-4	DEFECT	4.698758442188497E-5	DOCUMENTATION	1.578469430332361E-5	TEST	5.330332360030263E-6	WITHOUT_CLASSIFICATION
// can happen because of the multiple ways Cache.remove() // can be invoked :(	DESIGN	0.9999978757110877	WITHOUT_CLASSIFICATION	2.114718804560371E-6	DESIGN	6.9064187389739565E-9	DEFECT	1.5289489967734607E-9	IMPLEMENTATION	9.799779187876824E-10	DOCUMENTATION	1.5476225237400007E-10	TEST
// work around the "feature" where tree cache is validating the // inserted node during the next transaction. no idea...	DESIGN	0.9984771660024963	WITHOUT_CLASSIFICATION	0.0013443154030248	DESIGN	1.7783091872638487E-4	DEFECT	3.460026038364593E-7	IMPLEMENTATION	2.2090609717805097E-7	DOCUMENTATION	1.207670515382115E-7	TEST
//swaldman 2004-02-07: modify to allow null values to signify fall through to c3p0 PoolConfig defaults	DESIGN	0.998912753443108	WITHOUT_CLASSIFICATION	0.0010516749830858042	DESIGN	3.535841236525845E-5	DEFECT	1.377661651152411E-7	DOCUMENTATION	5.1422652462562864E-8	TEST	2.3972623346584833E-8	IMPLEMENTATION
// turn hibernate.c3p0.* into c3p0.*, so c3p0 // gets a chance to see all hibernate.c3p0.*	DESIGN	0.9999893577728022	WITHOUT_CLASSIFICATION	1.064141801676181E-5	DESIGN	3.929680102084467E-10	DEFECT	2.411052525987039E-10	DOCUMENTATION	9.528079679096897E-11	TEST	7.982689511564881E-11	IMPLEMENTATION
//TODO: this bit actually has to be called after all cascades! //      but since identity insert is called *synchronously*, //      instead of asynchronously as other actions, it isn't	DESIGN	0.9866014842091818	WITHOUT_CLASSIFICATION	0.013172557086450268	DESIGN	1.167956495808348E-4	IMPLEMENTATION	8.453634711288361E-5	DEFECT	1.486262489168912E-5	TEST	9.764082782516925E-6	DOCUMENTATION
//TODO: reenable if we also fix the above todo	DESIGN	0.907410933584975	DESIGN	0.08585588502473526	WITHOUT_CLASSIFICATION	0.0028709950298602955	TEST	0.0026636661757194592	IMPLEMENTATION	8.65392149107793E-4	DEFECT	3.331280356021632E-4	DOCUMENTATION
//TODO: inefficient if that cache is just going to ignore the updated state!	DESIGN	0.8776341273243152	WITHOUT_CLASSIFICATION	0.07829027198005212	IMPLEMENTATION	0.0439427621530887	DESIGN	8.818486095457714E-5	TEST	2.768968765341532E-5	DOCUMENTATION	1.696399393603373E-5	DEFECT
// we may be screwed here since the collection action is about to execute // and we do not know the final owner key value	DESIGN	0.9999751174895403	WITHOUT_CLASSIFICATION	2.479840783927707E-5	DESIGN	8.046577051266402E-8	DEFECT	2.5992071114554072E-9	IMPLEMENTATION	6.867190224294494E-10	TEST	3.509239252254307E-10	DOCUMENTATION
/** Create an action that will evict collection and entity regions based on queryspaces (table names).	DESIGN	0.5017757678063225	WITHOUT_CLASSIFICATION	0.3388442082854247	DESIGN	0.1536349937349255	IMPLEMENTATION	0.004762477260684957	DEFECT	5.352508812110844E-4	DOCUMENTATION	4.473020314312503E-4	TEST
// todo : what else to do here?	DESIGN	0.930389734536653	WITHOUT_CLASSIFICATION	0.06112917963192296	IMPLEMENTATION	0.0084442617806397	DESIGN	2.1550012818066065E-5	DEFECT	1.057975448369792E-5	TEST	4.6942834824960616E-6	DOCUMENTATION
// todo : modify the class definition if not already transformed...	DESIGN	0.99917914994987	WITHOUT_CLASSIFICATION	7.942949188421089E-4	DESIGN	2.606968891496537E-5	IMPLEMENTATION	2.2747930578996287E-7	DOCUMENTATION	2.0499102813618194E-7	TEST	5.297203905463291E-8	DEFECT
// todo : what else to do here?	DESIGN	0.930389734536653	WITHOUT_CLASSIFICATION	0.06112917963192296	IMPLEMENTATION	0.0084442617806397	DESIGN	2.1550012818066065E-5	DEFECT	1.057975448369792E-5	TEST	4.6942834824960616E-6	DOCUMENTATION
// this is called by SessionFactory irregardless; we just disregard here; // could also add a check to SessionFactory to only conditionally call start	DESIGN	0.9467786091238478	WITHOUT_CLASSIFICATION	0.05321318860943725	DESIGN	4.899782907830621E-6	IMPLEMENTATION	1.2845317764355376E-6	DOCUMENTATION	1.1908341254654356E-6	DEFECT	8.271179051433948E-7	TEST
// this is called by SessionFactory irregardless; we just disregard here; // could also add a check to SessionFactory to only conditionally call stop	DESIGN	0.9912736844871358	WITHOUT_CLASSIFICATION	0.008722176350781248	DESIGN	2.571227638842014E-6	IMPLEMENTATION	7.953027410019683E-7	DEFECT	4.074931301304233E-7	DOCUMENTATION	3.651385728721662E-7	TEST
//TODO: to handle concurrent writes correctly, this should return a Lock to the client	DESIGN	0.9991173407509775	DESIGN	3.7182580986712063E-4	WITHOUT_CLASSIFICATION	2.8088952460406384E-4	DEFECT	1.5057810026717397E-4	IMPLEMENTATION	4.350431899520222E-5	DOCUMENTATION	3.586149528911878E-5	TEST
//put() has nowait semantics, is this really appropriate? //note that it needs to be async replication, never local or sync	DESIGN	0.6965384734965873	WITHOUT_CLASSIFICATION	0.29905375440474763	DESIGN	0.004123512766176728	DEFECT	2.257012007171623E-4	IMPLEMENTATION	5.6536831189567575E-5	DOCUMENTATION	2.0213005816612256E-6	TEST
//TODO: to handle concurrent writes correctly, the client should pass in a Lock	DESIGN	0.9924401327750302	DESIGN	0.0052090887625167	WITHOUT_CLASSIFICATION	0.0011362576354232972	IMPLEMENTATION	9.02213404821615E-4	DEFECT	1.6350121783157432E-4	TEST	1.4880620437663944E-4	DOCUMENTATION
//TODO: assumes all collections disassemble to an array!	DESIGN	0.9989602658045671	WITHOUT_CLASSIFICATION	5.538977580647933E-4	DEFECT	3.9230570208177273E-4	IMPLEMENTATION	5.079052436140537E-5	DESIGN	3.762612267321391E-5	TEST	5.114088251636701E-6	DOCUMENTATION
//TODO: reuse the PreLoadEvent	DESIGN	0.7667914270248234	WITHOUT_CLASSIFICATION	0.18457786806923204	IMPLEMENTATION	0.04734756592967359	DESIGN	0.00105438206605575	DOCUMENTATION	1.541952408525073E-4	TEST	7.456166936262007E-5	DEFECT
// todo: this was added to support initializing an entity's EntityEntry snapshot during reattach; // this should be refactored to instead expose a method to assemble a EntityEntry based on this // state for return.	DESIGN	0.8486721835087895	DESIGN	0.15132396868128667	WITHOUT_CLASSIFICATION	2.6976435547796134E-6	DEFECT	1.1370231050517373E-6	TEST	9.241893942042586E-9	DOCUMENTATION	3.90136993468953E-9	IMPLEMENTATION
// todo : what is the implication of this?	DESIGN	0.9977006976557413	WITHOUT_CLASSIFICATION	0.0015878156855161816	DESIGN	4.826993518859785E-4	DOCUMENTATION	1.3492086618202315E-4	DEFECT	7.704377861344557E-5	IMPLEMENTATION	1.6822662061004638E-5	TEST
// use COUNT as the default.  This mimics the old behavior, although // NONE might be a better option moving forward in the case of callable	DESIGN	0.5771078430328465	WITHOUT_CLASSIFICATION	0.42287112607181904	DESIGN	2.0787655638176138E-5	DEFECT	1.8542372134843344E-7	TEST	4.5321477780634236E-8	IMPLEMENTATION	1.2494497166521367E-8	DOCUMENTATION
/* TODO: joinKeyColumnName & foreignKeyColumnName should be called either here or at a	DESIGN	0.6573489572976611	IMPLEMENTATION	0.23364323689520686	DESIGN	0.09277624918732509	WITHOUT_CLASSIFICATION	0.013407694100121043	DEFECT	0.0021861298991402373	TEST	6.377326205456711E-4	DOCUMENTATION
//TODO: suck this into initLaziness!	DESIGN	0.5851727072366818	WITHOUT_CLASSIFICATION	0.36034786011442427	DESIGN	0.03827142270324641	IMPLEMENTATION	0.008385340833892845	DEFECT	0.004477756337362541	DOCUMENTATION	0.0033449127743922506	TEST
// we have to set up the table later!! yuck	DESIGN	0.9990946460515118	WITHOUT_CLASSIFICATION	8.982410701794633E-4	DESIGN	5.137431264614662E-6	DEFECT	1.7175150350173414E-6	IMPLEMENTATION	1.6154629689212845E-7	TEST	9.638571226940934E-8	DOCUMENTATION
//TODO: better to degrade to lazy="false" if uninstrumented	DESIGN	0.9672323170018698	IMPLEMENTATION	0.01646491128637389	WITHOUT_CLASSIFICATION	0.014858278623673999	DESIGN	7.07286865188403E-4	TEST	5.575068570584891E-4	DOCUMENTATION	1.7969936583536888E-4	DEFECT
// todo : again, how *should* this work for non-pojo entities?	DESIGN	0.9559505985380379	WITHOUT_CLASSIFICATION	0.04173403250720442	DESIGN	0.001915193914699295	IMPLEMENTATION	3.6752746422110354E-4	DEFECT	2.460392845432242E-5	TEST	8.043647383039123E-6	DOCUMENTATION
// TODO: this is a bit of copy/paste from IndexedCollection.createPrimaryKey()	DESIGN	0.5815574188345588	IMPLEMENTATION	0.40000105425239874	DESIGN	0.017291947582522928	DEFECT	9.157723329780529E-4	WITHOUT_CLASSIFICATION	2.254074678849445E-4	TEST	8.399529656594715E-6	DOCUMENTATION
// This inner class implements a case statement....perhaps im being a bit over-clever here	DESIGN	0.7190596086766233	DESIGN	0.2782365183253896	WITHOUT_CLASSIFICATION	0.0026279266176634183	IMPLEMENTATION	5.448254386140569E-5	DEFECT	2.0028863169159848E-5	TEST	1.4349732929592105E-6	DOCUMENTATION
//TODO: bad implementation, cos it depends upon ordering of mapping doc //      fixing this requires that Collection/PersistentClass gain access //      to the Mappings reference from Configuration (or the filterDefinitions //      map directly) sometime during Configuration.buildSessionFactory //      (after all the types/filter-defs are known and before building //      persisters).	DESIGN	0.9998024372393687	DESIGN	1.9632239435355084E-4	IMPLEMENTATION	4.860886685118357E-7	DEFECT	3.999982255947705E-7	WITHOUT_CLASSIFICATION	3.075608643213768E-7	DOCUMENTATION	4.6718519279411385E-8	TEST
//use of a stringbuffer to workaround a JDK bug	DESIGN	0.8894470785773032	DESIGN	0.0911478250535974	WITHOUT_CLASSIFICATION	0.01847339802118026	DEFECT	8.027947107197865E-4	IMPLEMENTATION	1.149196881706785E-4	DOCUMENTATION	1.3983949028562048E-5	TEST
// hack/workaround as sqlquery impl depend on having a key.	DESIGN	0.9999375733523252	DESIGN	5.606683923672502E-5	DEFECT	4.015819259956147E-6	IMPLEMENTATION	2.2454922599219343E-6	WITHOUT_CLASSIFICATION	6.112075800745421E-8	TEST	3.737616008541306E-8	DOCUMENTATION
//FIXME: get the PersistentClass	DESIGN	0.6539255160506472	WITHOUT_CLASSIFICATION	0.3266524548296035	DESIGN	0.018143016529341315	IMPLEMENTATION	9.7856224305983E-4	TEST	2.0878821612922607E-4	DEFECT	9.166213121894347E-5	DOCUMENTATION
//FIXME: get the PersistentClass	DESIGN	0.6539255160506472	WITHOUT_CLASSIFICATION	0.3266524548296035	DESIGN	0.018143016529341315	IMPLEMENTATION	9.7856224305983E-4	TEST	2.0878821612922607E-4	DEFECT	9.166213121894347E-5	DOCUMENTATION
//Icky workaround for MySQL bug:	DESIGN	0.8187863735380835	DESIGN	0.16894663444422006	WITHOUT_CLASSIFICATION	0.011898224691339403	DEFECT	1.7815756587962964E-4	DOCUMENTATION	1.5787358078186875E-4	IMPLEMENTATION	3.273617969552104E-5	TEST
//TODO: Somehow add the newly created foreign keys to the internal collection	DESIGN	0.5346711940948601	IMPLEMENTATION	0.43982558600148264	WITHOUT_CLASSIFICATION	0.019766638931499884	DEFECT	0.0041869337869855005	DOCUMENTATION	0.001482381355398214	DESIGN	6.726582977362995E-5	TEST
//TODO possibly relax that	DESIGN	0.8398048678435326	WITHOUT_CLASSIFICATION	0.1589531648346019	DESIGN	9.331226510214674E-4	IMPLEMENTATION	1.5812715814694005E-4	DOCUMENTATION	8.676970021105328E-5	TEST	6.39478124860605E-5	DEFECT
//TODO possibly relax that	DESIGN	0.8398048678435326	WITHOUT_CLASSIFICATION	0.1589531648346019	DESIGN	9.331226510214674E-4	IMPLEMENTATION	1.5812715814694005E-4	DOCUMENTATION	8.676970021105328E-5	TEST	6.39478124860605E-5	DEFECT
//TODO possibly relax that	DESIGN	0.8398048678435326	WITHOUT_CLASSIFICATION	0.1589531648346019	DESIGN	9.331226510214674E-4	IMPLEMENTATION	1.5812715814694005E-4	DOCUMENTATION	8.676970021105328E-5	TEST	6.39478124860605E-5	DEFECT
//use of a stringbuffer to workaround a JDK bug	DESIGN	0.8894470785773032	DESIGN	0.0911478250535974	WITHOUT_CLASSIFICATION	0.01847339802118026	DEFECT	8.027947107197865E-4	IMPLEMENTATION	1.149196881706785E-4	DOCUMENTATION	1.3983949028562048E-5	TEST
//use a degenerated strategy for backward compatibility	DESIGN	0.9999967277213594	WITHOUT_CLASSIFICATION	2.857334156845196E-6	DESIGN	3.3656483750195804E-7	IMPLEMENTATION	4.1580800024306725E-8	DEFECT	2.8424595534918493E-8	TEST	8.374250689368937E-9	DOCUMENTATION
// Sets can be just a view of a part of another collection. // do we need to copy it to be sure it won't be changing // underneath us? // ie. this.set.addAll(set);	DESIGN	0.9991881947734621	WITHOUT_CLASSIFICATION	5.399381382830457E-4	DESIGN	1.439534130260543E-4	DEFECT	1.2651641753026735E-4	IMPLEMENTATION	1.2841778005600635E-6	TEST	1.130798979632792E-7	DOCUMENTATION
//note that i parameter is now unused (delete it?)	DESIGN	0.9896341629495053	WITHOUT_CLASSIFICATION	0.010172052428157705	DESIGN	1.8826212182091595E-4	IMPLEMENTATION	3.7509288470913564E-6	TEST	1.6631847785304259E-6	DEFECT	1.083868902880117E-7	DOCUMENTATION
//just to help out during the load (ugly, i know)	DESIGN	0.9426519045128722	WITHOUT_CLASSIFICATION	0.04572951784389283	DESIGN	0.01020517020036124	IMPLEMENTATION	0.0012336264230243972	DEFECT	1.168477288338858E-4	TEST	6.293329101546249E-5	DOCUMENTATION
// TODO : safe to interpret "map.remove(key) == null" as non-dirty?	DESIGN	0.5234102655552991	DESIGN	0.26014681940303297	DEFECT	0.15183900384962642	IMPLEMENTATION	0.06430678827663276	WITHOUT_CLASSIFICATION	1.6512388672778653E-4	DOCUMENTATION	1.3199902868096341E-4	TEST
// yick!  need this for proper serialization/deserialization handling...	DESIGN	0.9978614069859608	WITHOUT_CLASSIFICATION	0.0011887904312640155	DESIGN	7.410176633115246E-4	DEFECT	1.4389101878992157E-4	DOCUMENTATION	6.195244790785864E-5	TEST	2.9414527657310985E-6	IMPLEMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.9415446981238131	DESIGN	0.058355114865733825	WITHOUT_CLASSIFICATION	4.27367601325224E-5	DEFECT	3.304731928618004E-5	IMPLEMENTATION	1.6812506292155065E-5	TEST	7.590424741915894E-6	DOCUMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.9415446981238131	DESIGN	0.058355114865733825	WITHOUT_CLASSIFICATION	4.27367601325224E-5	DEFECT	3.304731928618004E-5	IMPLEMENTATION	1.6812506292155065E-5	TEST	7.590424741915894E-6	DOCUMENTATION
//yuck!	DESIGN	0.9973414483994528	WITHOUT_CLASSIFICATION	0.002404728109656016	DESIGN	2.0542022826575072E-4	DEFECT	3.520916044772639E-5	DOCUMENTATION	9.459108749401201E-6	TEST	3.734993428229762E-6	IMPLEMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.9415446981238131	DESIGN	0.058355114865733825	WITHOUT_CLASSIFICATION	4.27367601325224E-5	DEFECT	3.304731928618004E-5	IMPLEMENTATION	1.6812506292155065E-5	TEST	7.590424741915894E-6	DOCUMENTATION
// TODO : not sure this is correct, could not find docs on how to do this.	DESIGN	0.9957751127243887	DESIGN	0.004219958046008683	DEFECT	2.244195934608516E-6	DOCUMENTATION	1.3752058477588694E-6	TEST	1.26749290610844E-6	IMPLEMENTATION	4.233491429547778E-8	WITHOUT_CLASSIFICATION
//HSQL has no Blob/Clob support .... but just put these here for now!	DESIGN	0.9999443527537957	WITHOUT_CLASSIFICATION	5.0347499998148723E-5	DESIGN	3.3522004940437274E-6	IMPLEMENTATION	1.237243654194858E-6	TEST	5.845524926725758E-7	DEFECT	1.2574956518182315E-7	DOCUMENTATION
// does this need holdlock also? : return tableName + " with (updlock, rowlock, holdlock)";	DESIGN	0.9495943560157314	WITHOUT_CLASSIFICATION	0.05027674806270277	DESIGN	5.0191186835596115E-5	TEST	4.0539524789399964E-5	DEFECT	3.5742205789775944E-5	IMPLEMENTATION	2.4230041510377788E-6	DOCUMENTATION
// sql-server, at least needed this dropped after use; strange!	DESIGN	0.9972606694313586	WITHOUT_CLASSIFICATION	0.002701053883529494	DESIGN	2.8590900343077327E-5	TEST	7.895028469395344E-6	IMPLEMENTATION	1.486331192663268E-6	DOCUMENTATION	3.0442510676794264E-7	DEFECT
// todo : is there really any reason to kkeep trying if this fails once?	DESIGN	0.9617778711216564	WITHOUT_CLASSIFICATION	0.027336472844436296	DESIGN	0.010856641683781865	DEFECT	1.855805917316806E-5	TEST	9.103042528721952E-6	DOCUMENTATION	1.3532484234574779E-6	IMPLEMENTATION
// TBD should this be varbinary($1)? //	DESIGN	0.9560696290755749	WITHOUT_CLASSIFICATION	0.043856012716046465	DESIGN	3.754681762127719E-5	IMPLEMENTATION	2.667667223626826E-5	DEFECT	8.219438613334787E-6	TEST	1.9152799078670214E-6	DOCUMENTATION
// is it necessary to register %exact since it can only appear in a where clause?	DESIGN	0.9720377160270393	WITHOUT_CLASSIFICATION	0.027759245122350205	DESIGN	1.1300407786720902E-4	IMPLEMENTATION	8.667777854731621E-5	DEFECT	2.1353604019498904E-6	DOCUMENTATION	1.2216337939471588E-6	TEST
// xmlforest requires a new kind of function constructor	DESIGN	0.9999810589081339	WITHOUT_CLASSIFICATION	1.0616553070022636E-5	IMPLEMENTATION	6.81324458319601E-6	DEFECT	8.810352137185595E-7	DESIGN	6.12772946892125E-7	TEST	1.748605211962327E-8	DOCUMENTATION
// Does this dialect support the ALTER TABLE syntax?	DESIGN	0.9997874819744409	WITHOUT_CLASSIFICATION	1.5335739186774137E-4	DESIGN	5.3913866845791555E-5	IMPLEMENTATION	2.289506442001941E-6	DOCUMENTATION	1.9423998748984512E-6	DEFECT	1.0148605288269553E-6	TEST
// Do we need to qualify index names with the schema name?	DESIGN	0.8425600675906909	WITHOUT_CLASSIFICATION	0.12634273525958511	IMPLEMENTATION	0.028804053857983507	DESIGN	0.0011829528735751325	DOCUMENTATION	8.13612620813715E-4	DEFECT	2.9657779735159254E-4	TEST
// Does this dialect support the UNIQUE column syntax?	DESIGN	0.9991709220641191	WITHOUT_CLASSIFICATION	4.8333729402851337E-4	IMPLEMENTATION	3.3448386058543283E-4	DESIGN	4.863770959574011E-6	DOCUMENTATION	4.0984291424191005E-6	DEFECT	2.294581164935627E-6	TEST
// Does this dialect support check constraints?	DESIGN	0.9997785153342247	WITHOUT_CLASSIFICATION	1.873424789727028E-4	IMPLEMENTATION	3.0360954534244002E-5	DESIGN	1.952395486793548E-6	DOCUMENTATION	1.7555340019018366E-6	TEST	7.330277965050241E-8	DEFECT
// Do we need to drop constraints before dropping tables in this dialect?	DESIGN	0.9995430116550501	WITHOUT_CLASSIFICATION	4.5550445974922173E-4	DESIGN	8.124713496926169E-7	TEST	3.012435385018731E-7	DOCUMENTATION	2.667766651901164E-7	DEFECT	1.0339364728926584E-7	IMPLEMENTATION
// Does this dialect support the FOR UPDATE syntax?	DESIGN	0.9984379623789954	WITHOUT_CLASSIFICATION	0.0011535698145025545	DESIGN	3.9453057934915505E-4	IMPLEMENTATION	7.273032943409122E-6	DOCUMENTATION	3.5360659869874985E-6	DEFECT	3.128128222515073E-6	TEST
// Does this dialect support the Oracle-style FOR UPDATE NOWAIT syntax?	DESIGN	0.999399218959328	WITHOUT_CLASSIFICATION	3.333564362408742E-4	IMPLEMENTATION	2.6479626225451284E-4	DESIGN	1.318527685916071E-6	DOCUMENTATION	1.1954055347125038E-6	TEST	1.1440895595929874E-7	DEFECT
// Does this dialect support FOR UPDATE OF, allowing particular rows to be locked?	DESIGN	0.9704461708012637	DESIGN	0.029014551722689404	WITHOUT_CLASSIFICATION	3.0010596029951325E-4	DEFECT	2.2656693117937957E-4	IMPLEMENTATION	7.6235406363310564E-6	DOCUMENTATION	4.981043931671802E-6	TEST
//note there is a wierd implementation in the client side	DESIGN	0.9997149741766909	WITHOUT_CLASSIFICATION	2.8182372953312364E-4	DESIGN	2.9784588572093456E-6	IMPLEMENTATION	1.601205183965332E-7	DEFECT	4.473279849848947E-8	TEST	1.8781601936529774E-8	DOCUMENTATION
//TODO: never reached, since getTypeName() actually throws an exception!	DESIGN	0.5600544512197821	DEFECT	0.390661701970215	WITHOUT_CLASSIFICATION	0.032124981992745834	DESIGN	0.016864047053910553	IMPLEMENTATION	1.4840080307323297E-4	TEST	1.4641696027319678E-4	DOCUMENTATION
// todo : should we additionally check the current isolation mode explicitly?	DESIGN	0.5908738659538227	WITHOUT_CLASSIFICATION	0.34489047735087247	DESIGN	0.060677100592633926	IMPLEMENTATION	0.002566518158153557	DEFECT	9.880134551291417E-4	DOCUMENTATION	4.024489388266457E-6	TEST
// todo : remove this and just have subclasses use Isolater/IsolatedWork directly...	DESIGN	0.9272872129881876	DESIGN	0.07270359971340923	WITHOUT_CLASSIFICATION	5.864715113773872E-6	IMPLEMENTATION	2.3686587331949374E-6	DEFECT	7.996413635080617E-7	TEST	1.5428319258638668E-7	DOCUMENTATION
//TODO: should orphans really be deleted during lock???	DESIGN	0.6907584183174846	DESIGN	0.28663556383196664	WITHOUT_CLASSIFICATION	0.02097264078681634	DEFECT	0.0015921113053971449	IMPLEMENTATION	2.5642798023727828E-5	DOCUMENTATION	1.562296031156247E-5	TEST
// orphans should not be deleted during merge??	DESIGN	0.9994915162369452	WITHOUT_CLASSIFICATION	5.077286825452251E-4	DESIGN	4.411099225809978E-7	DEFECT	2.391461391922654E-7	IMPLEMENTATION	7.213705790230763E-8	TEST	2.6873897091074063E-9	DOCUMENTATION
// orphans should not be deleted during copy??	DESIGN	0.9998477119488743	WITHOUT_CLASSIFICATION	1.5052482975776136E-4	DESIGN	1.497851405315428E-6	DEFECT	2.2280494615638569E-7	IMPLEMENTATION	3.8265627882723015E-8	TEST	4.2993885030369795E-9	DOCUMENTATION
//I suppose?	DESIGN	0.994186820843907	WITHOUT_CLASSIFICATION	0.00353427788691538	DESIGN	0.0022328489552355703	IMPLEMENTATION	2.505833569047061E-5	DOCUMENTATION	1.7195167934184E-5	DEFECT	3.7988103172691265E-6	TEST
//TODO: suck this logic into the collection!	DESIGN	0.4974869207436104	WITHOUT_CLASSIFICATION	0.26971937704451204	IMPLEMENTATION	0.22364643019072583	DESIGN	0.0072886293522485684	DEFECT	0.0015374147397039645	DOCUMENTATION	3.2122792919917484E-4	TEST
// TODO: an alternative is to check if the owner has changed; if it hasn't then // get the ID from collection.getOwner()	DESIGN	0.9900543960551325	IMPLEMENTATION	0.006429911757112585	DEFECT	0.002636489679246581	WITHOUT_CLASSIFICATION	8.389902440825557E-4	DESIGN	3.856657656592286E-5	TEST	1.6456878599292895E-6	DOCUMENTATION
//TODO:refactor + make this method private	DESIGN	0.8711744570817269	DESIGN	0.12705870410558906	WITHOUT_CLASSIFICATION	8.555494188833778E-4	IMPLEMENTATION	7.878914846573818E-4	TEST	1.1012176477452454E-4	DOCUMENTATION	1.3276144368731245E-5	DEFECT
// todo : we can actually just determine this from the incoming EntityEntry-s	DESIGN	0.9978278278183801	WITHOUT_CLASSIFICATION	0.0021720923964139716	DESIGN	3.891685765432886E-8	DEFECT	1.4031372568623029E-8	IMPLEMENTATION	1.3530457809429192E-8	DOCUMENTATION	1.3306517888938707E-8	TEST
//TODO: Should this be an InitializeEntityEventListener??? (watch out for performance!)	DESIGN	0.999656592412412	DESIGN	2.1929319602867435E-4	IMPLEMENTATION	1.1450830597216359E-4	WITHOUT_CLASSIFICATION	5.521499614904383E-6	TEST	3.810822796289647E-6	DOCUMENTATION	2.737631759379011E-7	DEFECT
//TODO: better to pass the id in as an argument?	DESIGN	0.9694134988067241	DESIGN	0.030152951560311718	WITHOUT_CLASSIFICATION	2.465859440469186E-4	DOCUMENTATION	8.251855535246359E-5	TEST	7.622176323678433E-5	IMPLEMENTATION	2.8223370328048884E-5	DEFECT
// todo : potentially look at optimizing these two arrays	DESIGN	0.9999520382960574	WITHOUT_CLASSIFICATION	4.2006520637841206E-5	IMPLEMENTATION	4.304010062304699E-6	DEFECT	1.2505677513043086E-6	DESIGN	2.519557590819579E-7	TEST	1.486497320067154E-7	DOCUMENTATION
/* trim done to workaround stupid oracle bug that cant handle whitespaces before a { in a sp */	DESIGN	0.698073199125845	DESIGN	0.2820307861744016	WITHOUT_CLASSIFICATION	0.018939417692873148	DEFECT	9.194022575199143E-4	IMPLEMENTATION	3.0711426910663814E-5	TEST	6.48332244974419E-6	DOCUMENTATION
/* trim done to workaround stupid oracle bug that cant handle whitespaces before a { in a sp */	DESIGN	0.698073199125845	DESIGN	0.2820307861744016	WITHOUT_CLASSIFICATION	0.018939417692873148	DEFECT	9.194022575199143E-4	IMPLEMENTATION	3.0711426910663814E-5	TEST	6.48332244974419E-6	DOCUMENTATION
//TODO: temporary	DESIGN	0.984110799463999	DESIGN	0.012669112179196435	WITHOUT_CLASSIFICATION	0.002828977418919113	IMPLEMENTATION	2.6114143218675025E-4	TEST	6.773709927012275E-5	DEFECT	6.223240642836597E-5	DOCUMENTATION
//TODO: not quite sure about the full implications of this!	DESIGN	0.6507886577325003	WITHOUT_CLASSIFICATION	0.20247417972994156	DESIGN	0.07456089423983608	IMPLEMENTATION	0.06897091256359511	DEFECT	0.002861777332458422	TEST	3.43578401668474E-4	DOCUMENTATION
//TODO: not quite sure about the full implications of this!	DESIGN	0.6507886577325003	WITHOUT_CLASSIFICATION	0.20247417972994156	DESIGN	0.07456089423983608	IMPLEMENTATION	0.06897091256359511	DEFECT	0.002861777332458422	TEST	3.43578401668474E-4	DOCUMENTATION
//TODO: ugly here:	DESIGN	0.7044907912988895	DESIGN	0.24417653526512215	IMPLEMENTATION	0.04698468906236199	WITHOUT_CLASSIFICATION	0.0019718484294649627	DEFECT	0.0013329123428805192	TEST	0.0010432236012808294	DOCUMENTATION
//this is kinda the best we can do...	DESIGN	0.9848921501360309	WITHOUT_CLASSIFICATION	0.013938044474963846	DESIGN	6.072730344838325E-4	DEFECT	5.09816347544356E-4	TEST	2.6447605901408733E-5	IMPLEMENTATION	2.626840107556416E-5	DOCUMENTATION
//TODO: this needn't exclude subclasses...	DESIGN	0.7761163446978284	DESIGN	0.19088924252844428	WITHOUT_CLASSIFICATION	0.024368436691810387	IMPLEMENTATION	0.004461387576459648	TEST	0.0023500048043192255	DEFECT	0.00181458370113808	DOCUMENTATION
// todo : need map? the prob is a proper key, right?	DESIGN	0.9816498169325953	WITHOUT_CLASSIFICATION	0.01462409963619962	DESIGN	0.0028946579754406234	DEFECT	7.41798283787242E-4	IMPLEMENTATION	4.7596817892950926E-5	TEST	4.2030354084142326E-5	DOCUMENTATION
// todo : i'd much rather have this done from #endLoadingCollection(CollectionPersister,LoadingCollectionEntry)...	DESIGN	0.9822725200656788	WITHOUT_CLASSIFICATION	0.017724209279522337	DESIGN	2.415607100456222E-6	DEFECT	8.423664516678566E-7	TEST	1.1514697526177557E-8	DOCUMENTATION	1.166549223878542E-9	IMPLEMENTATION
// todo : hack!!! // NOTE : here we cleanup the load context when we have no more local // LCE entries.  This "works" for the time being because really // only the collection load contexts are implemented.  Long term, // this cleanup should become part of the "close result set" // processing from the (sandbox/jdbc) jdbc-container code.	DESIGN	0.9926372462407844	DESIGN	0.007361205142676401	WITHOUT_CLASSIFICATION	9.61733303614788E-7	DEFECT	4.2040137439760874E-7	TEST	1.5692245725160976E-7	IMPLEMENTATION	9.559403868551688E-9	DOCUMENTATION
// todo : should really move this log statement to CollectionType, where this is used from...	DESIGN	0.9789053088842561	WITHOUT_CLASSIFICATION	0.02097228396020924	DESIGN	1.201090742427489E-4	DEFECT	1.1916984994660798E-6	IMPLEMENTATION	1.0039427443888236E-6	TEST	1.024400480165467E-7	DOCUMENTATION
// TODO : keep seperate notions of QT[] here for shallow/non-shallow queries...	DESIGN	0.7500708788820815	DESIGN	0.21898916640870492	IMPLEMENTATION	0.028796697626359034	DEFECT	0.0014096313842708347	TEST	6.746297001466394E-4	WITHOUT_CLASSIFICATION	5.899599843706537E-5	DOCUMENTATION
// TODO : add this info to the translator and aggregate it here...	DESIGN	0.8746982907831583	IMPLEMENTATION	0.12472624828457772	DESIGN	3.0728980355486884E-4	TEST	2.2221577136273768E-4	DOCUMENTATION	3.992811706298834E-5	WITHOUT_CLASSIFICATION	6.027240283339312E-6	DEFECT
//TODO: move into collection type, so we can use polymorphism!	DESIGN	0.9750737477761027	DESIGN	0.024520238039291195	WITHOUT_CLASSIFICATION	3.1365460861055325E-4	IMPLEMENTATION	7.142171715562153E-5	DEFECT	1.8740027468521683E-5	DOCUMENTATION	2.197831371428432E-6	TEST
// todo : should we check the current isolation mode explicitly?	DESIGN	0.8775237204929764	WITHOUT_CLASSIFICATION	0.08282625234770648	DESIGN	0.035461012187897906	IMPLEMENTATION	0.00382995346393356	DEFECT	3.484066787852131E-4	DOCUMENTATION	1.0654828700345899E-5	TEST
//TODO: suck into event class	DESIGN	0.8432217338069291	DESIGN	0.13379996047215179	WITHOUT_CLASSIFICATION	0.019150661176097636	IMPLEMENTATION	0.0029956274712603153	DOCUMENTATION	6.715579974944414E-4	DEFECT	1.6045907606660525E-4	TEST
//do we even really need this? the update will fail anyway....	DESIGN	0.8155290745711199	WITHOUT_CLASSIFICATION	0.09741235516074921	DESIGN	0.04128624388012885	DOCUMENTATION	0.03643464470837669	IMPLEMENTATION	0.008980931736775883	DEFECT	3.567499428493518E-4	TEST
//hum ... should we cascade anyway? throw an exception? fine like it is?	DESIGN	0.9990360354041883	DESIGN	5.645587989574923E-4	DEFECT	2.7418073525799783E-4	WITHOUT_CLASSIFICATION	6.335417628673626E-5	DOCUMENTATION	5.0743514384903214E-5	IMPLEMENTATION	1.112737092464926E-5	TEST
//TODO: would it be better to do a refresh from db?	DESIGN	0.9190470153646255	DESIGN	0.08016021324352911	IMPLEMENTATION	4.1522366167223896E-4	DEFECT	2.075468417219541E-4	TEST	1.675122526992128E-4	WITHOUT_CLASSIFICATION	2.4886357521267376E-6	DOCUMENTATION
//TODO: we use two visitors here, inefficient!	DESIGN	0.7889210401256359	DESIGN	0.17799941066008568	WITHOUT_CLASSIFICATION	0.03138685090971595	IMPLEMENTATION	0.001211099376062725	DOCUMENTATION	2.5445875777332005E-4	DEFECT	2.271401707264321E-4	TEST
// this class has no proxies (so do a shortcut)	DESIGN	0.9999109656299723	WITHOUT_CLASSIFICATION	8.898447464808119E-5	DESIGN	1.7386944374392223E-8	DOCUMENTATION	1.6791883267350887E-8	TEST	9.104200310574896E-9	DEFECT	6.612351620100424E-9	IMPLEMENTATION
//PostLoad is needed for EJB3 //TODO: reuse the PostLoadEvent...	DESIGN	0.6747494479794732	IMPLEMENTATION	0.26888683438958766	DESIGN	0.04794617174307681	WITHOUT_CLASSIFICATION	0.007223338172852671	TEST	8.898805106357069E-4	DOCUMENTATION	3.0432720437385406E-4	DEFECT
//TODO: put this stuff back in to read snapshot from //      the second-level cache (needs some extra work)	DESIGN	0.9977018473866802	DESIGN	0.0013049375097500487	WITHOUT_CLASSIFICATION	8.239405378069768E-4	IMPLEMENTATION	1.5510556458453315E-4	DEFECT	9.683790094741116E-6	DOCUMENTATION	4.485211083628945E-6	TEST
// null or brand new collection // this will also (inefficiently) handle arrays, which have // no snapshot, so we can't do any better	DESIGN	0.7370378530864989	WITHOUT_CLASSIFICATION	0.2629454383902772	DESIGN	1.3464608932328997E-5	IMPLEMENTATION	2.834731981983616E-6	DOCUMENTATION	2.3928805781595977E-7	DEFECT	1.69894251800325E-7	TEST
//TODO: is this 100% correct?	DESIGN	0.9595834784259657	DESIGN	0.03820773366942492	WITHOUT_CLASSIFICATION	0.0018427877282454238	DEFECT	2.259402727307749E-4	TEST	9.074818024474738E-5	DOCUMENTATION	4.931172338845961E-5	IMPLEMENTATION
// TODO: iteratively get transient entities and retry merge until one of the following conditions: //       1) transientCopyCache.size() == 0 //       2) transientCopyCache.size() is not decreasing and copyCache.size() is not increasing // TODO: find out if retrying can add entities to copyCache (don't think it can...) // For now, just retry once; throw TransientObjectException if there are still any transient entities	DESIGN	0.6835681459678659	DEFECT	0.14677610314001782	IMPLEMENTATION	0.1336839340973771	DESIGN	0.0351298581679935	WITHOUT_CLASSIFICATION	7.64639807152739E-4	TEST	7.731881959297864E-5	DOCUMENTATION
// entity name will not be available for non-POJO entities // TODO: cache the entity name somewhere so that it is available to this exception	DESIGN	0.9990450183493746	DESIGN	9.47044194920394E-4	WITHOUT_CLASSIFICATION	3.019752444295055E-6	DEFECT	2.4660097353664926E-6	IMPLEMENTATION	2.2978154417070682E-6	TEST	1.5387808365600283E-7	DOCUMENTATION
//TODO: we should throw an exception if we really *know* for sure   //      that this is a detached instance, rather than just assuming //throw new StaleObjectStateException(entityName, id);	DESIGN	0.5317859314423382	DESIGN	0.46789242834642053	WITHOUT_CLASSIFICATION	3.074782505332017E-4	DEFECT	1.3823522648132687E-5	TEST	2.4520582970835266E-7	DOCUMENTATION	9.32322302386578E-8	IMPLEMENTATION
// TODO : perhaps we should additionally require that the incoming entity // version be equivalent to the defined unsaved-value?	DESIGN	0.9980686821360183	DESIGN	0.0019306901669421672	IMPLEMENTATION	5.195609182604259E-7	DEFECT	8.422267783058954E-8	DOCUMENTATION	2.3372368433084628E-8	WITHOUT_CLASSIFICATION	5.410749488879981E-10	TEST
// perhaps this should be an exception since it is only ever used // in the above method?	DESIGN	0.5548742301789799	DESIGN	0.444841275447216	WITHOUT_CLASSIFICATION	2.8206468700086115E-4	DEFECT	2.3432740718541448E-6	TEST	8.407333352040886E-8	DOCUMENTATION	2.3393977445022414E-9	IMPLEMENTATION
// Put a placeholder in entries, so we don't recurse back and try to save() the // same object again. QUESTION: should this be done before onSave() is called? // likewise, should it be done before onUpdate()?	DESIGN	0.9031430801273177	WITHOUT_CLASSIFICATION	0.09680946974464888	DESIGN	4.716696078765073E-5	IMPLEMENTATION	1.4938451760201973E-7	DOCUMENTATION	8.289777042973173E-8	DEFECT	5.0884957740076964E-8	TEST
//TODO: merge into one method!	DESIGN	0.8709558488193495	DESIGN	0.12215942942952901	WITHOUT_CLASSIFICATION	0.00460369331597958	IMPLEMENTATION	0.0017057498255713007	DEFECT	3.0097202128194126E-4	TEST	2.7430658828864917E-4	DOCUMENTATION
//TODO: refactor to .sql package	DESIGN	0.9844055290767817	DESIGN	0.013941938333789596	WITHOUT_CLASSIFICATION	0.0016340592287080657	IMPLEMENTATION	1.0363094000878146E-5	DOCUMENTATION	5.046444648852642E-6	TEST	3.0638220706981474E-6	DEFECT
/** * Provides query splitting methods, which were originally in QueryTranslator. * <br> * TODO: This will need to be refactored at some point. * * @author josh */	DESIGN	0.9905886013831703	DESIGN	0.008665910365331663	DOCUMENTATION	3.6081133306465853E-4	IMPLEMENTATION	1.9694029660918995E-4	DEFECT	1.2323318653401273E-4	WITHOUT_CLASSIFICATION	6.450343529029905E-5	TEST
//TODO: this is one of the ugliest and most fragile pieces of code in Hibernate....	DESIGN	0.9960327361153682	DESIGN	0.0025185828006973406	IMPLEMENTATION	7.628292131246568E-4	WITHOUT_CLASSIFICATION	6.30497018536946E-4	TEST	4.878778347664307E-5	DEFECT	6.5670687960807376E-6	DOCUMENTATION
// todo : temporary //      needed because currently persister is the one that //      creates and renders the join fragments for inheritence //      hierarchies...	DESIGN	0.9258221517831704	WITHOUT_CLASSIFICATION	0.07409133928674085	DESIGN	4.899887565273241E-5	IMPLEMENTATION	1.5248158190954724E-5	TEST	1.377427975877313E-5	DOCUMENTATION	8.487616486524638E-6	DEFECT
// TODO : better way?!?	DESIGN	0.9995620518051275	DESIGN	3.862733570704611E-4	IMPLEMENTATION	2.336612777231389E-5	TEST	1.4984892306766478E-5	DOCUMENTATION	1.2928578227084094E-5	DEFECT	3.952394959995974E-7	WITHOUT_CLASSIFICATION
// Not possible to simply re-use the versionPropertyNode here as it causes // OOM errors due to circularity :(	DESIGN	0.9999991934973383	WITHOUT_CLASSIFICATION	7.982529925259035E-7	IMPLEMENTATION	4.245887997256611E-9	DESIGN	3.851178815277575E-9	DEFECT	7.908596769386999E-11	DOCUMENTATION	7.351636734095758E-11	TEST
//TODO:this is only needed during compilation .. can we eliminate the instvar?	DESIGN	0.9999047681294382	DESIGN	7.637036256507441E-5	WITHOUT_CLASSIFICATION	1.582372125037256E-5	DEFECT	1.4633994978252884E-6	IMPLEMENTATION	8.127654226190781E-7	DOCUMENTATION	7.616218259095997E-7	TEST
// TODO : this is a bit dodgy, come up with a better way to check this (plus see above comment)	DESIGN	0.999849164505532	DESIGN	1.4900932247515988E-4	IMPLEMENTATION	1.2423875172595547E-6	TEST	4.5290369016796026E-7	DOCUMENTATION	1.1853666090823822E-7	DEFECT	1.2344124646427794E-8	WITHOUT_CLASSIFICATION
// even here, if only properties mapped to the "base table" are referenced // in the set and where clauses, this could be handled by the BasicDelegate. // TODO : decide if it is better performance-wise to perform that check, or to simply use the MultiTableUpdateDelegate	DESIGN	0.9999999275644398	DESIGN	6.608895659805835E-8	WITHOUT_CLASSIFICATION	4.208932249955366E-9	DOCUMENTATION	1.028437031895757E-9	TEST	8.130673381164222E-10	DEFECT	2.961670545502412E-10	IMPLEMENTATION
//TODO: switch statements are always evil! We already had bugs because  //      of forgotten token types. Use polymorphism for this!	DESIGN	0.9160742483547185	WITHOUT_CLASSIFICATION	0.045318132454431545	DESIGN	0.03802835317673727	DEFECT	4.354449300765851E-4	DOCUMENTATION	9.231150951285567E-5	IMPLEMENTATION	5.150957452325034E-5	TEST
// TODO : we really need to be able to deal with component paths here also; // this is difficult because the hql-sql grammar expects all those node types // to be FromReferenceNodes.  One potential fix here would be to convert the // IntoClause to just use a FromClause/FromElement combo (as a child of the // InsertStatement) and move all this logic into the InsertStatement.  That's // probably the easiest approach (read: least amount of changes to the grammar // and code), but just doesn't feel right as then an insert would contain // 2 from-clauses	DESIGN	0.8966786300629674	DESIGN	0.10331896635153193	WITHOUT_CLASSIFICATION	1.7765835368851059E-6	TEST	5.742441111009819E-7	DOCUMENTATION	2.7310265112619915E-8	IMPLEMENTATION	2.5447587451407715E-8	DEFECT
// really there are two situations where it should be ok to allow the insertion // into properties defined on a superclass: //      1) union-subclass with an abstract root entity //      2) discrim-subclass // // #1 is handled already because of the fact that // UnionSubclassPersister alreay always returns 0 // for this call... // // we may want to disallow it for discrim-subclass just for // consistency-sake (currently does not work anyway)...	DESIGN	0.9997810503416301	WITHOUT_CLASSIFICATION	2.1893426727548457E-4	DESIGN	8.924758029678406E-9	IMPLEMENTATION	4.271000487003819E-9	DOCUMENTATION	1.2253087521827102E-9	TEST	9.70027187429979E-10	DEFECT
//yuck!	DESIGN	0.9973414483994528	WITHOUT_CLASSIFICATION	0.002404728109656016	DESIGN	2.0542022826575072E-4	DEFECT	3.520916044772639E-5	DOCUMENTATION	9.459108749401201E-6	TEST	3.734993428229762E-6	IMPLEMENTATION
// implicit joins are always(?) ok to reuse	DESIGN	0.998036405258824	WITHOUT_CLASSIFICATION	0.0019566459043945123	DESIGN	6.017264125343261E-6	IMPLEMENTATION	5.281026626078901E-7	DOCUMENTATION	3.092060530272935E-7	DEFECT	9.426394044472538E-8	TEST
// TODO : we may also want to check that the types here map to exactly one column/JDBC-type //      can't think of a situation where arithmetic expression between multi-column mappings //      makes any sense.	DESIGN	0.8832600496168703	IMPLEMENTATION	0.10622978376295261	DESIGN	0.006184147570185	DEFECT	0.0024059993268597257	DOCUMENTATION	0.001892929129112611	WITHOUT_CLASSIFICATION	2.7090594019763116E-5	TEST
// we do not know either type //BLIND GUESS!	DESIGN	0.9992621222876177	WITHOUT_CLASSIFICATION	6.559433758635735E-4	DESIGN	5.4119042998498386E-5	IMPLEMENTATION	2.3698863504124462E-5	DEFECT	2.2255102471916875E-6	TEST	1.8909197689657206E-6	DOCUMENTATION
//TODO: used to be exprNoParens! was this needed?	DESIGN	0.9999884255140898	DESIGN	1.0791532684014166E-5	IMPLEMENTATION	3.584835076316627E-7	DOCUMENTATION	3.3847297509319864E-7	DEFECT	4.494963672155769E-8	TEST	4.104710675435051E-8	WITHOUT_CLASSIFICATION
// TODO: Replace this with a more elegant solution.	DESIGN	0.9988771718414787	DESIGN	0.0011169763223052055	IMPLEMENTATION	4.523339818278858E-6	TEST	6.579974191820229E-7	WITHOUT_CLASSIFICATION	5.638082441885664E-7	DEFECT	1.0669073431459538E-7	DOCUMENTATION
// TODO: Should this really return null?  If not, figure out something better to do here.	DESIGN	0.9976816870316012	DESIGN	0.0023083539488818272	IMPLEMENTATION	6.4795485383469736E-6	DEFECT	1.7268322469741739E-6	WITHOUT_CLASSIFICATION	1.1629722229139483E-6	TEST	5.89666508800175E-7	DOCUMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.9415446981238131	DESIGN	0.058355114865733825	WITHOUT_CLASSIFICATION	4.27367601325224E-5	DEFECT	3.304731928618004E-5	IMPLEMENTATION	1.6812506292155065E-5	TEST	7.590424741915894E-6	DOCUMENTATION
// yuck!	DESIGN	0.9999571399263248	WITHOUT_CLASSIFICATION	3.339086793813451E-5	DESIGN	8.293164316787648E-6	DEFECT	7.427515687504006E-7	DOCUMENTATION	2.461583321220637E-7	TEST	1.8713151942284434E-7	IMPLEMENTATION
// ignore it; the incoming property could not be found so we // cannot be sure what to do here.  At the very least, the // safest is to simply not apply any dereference toggling...	DESIGN	0.999691868593545	WITHOUT_CLASSIFICATION	2.9377952900250416E-4	DESIGN	1.1585246264462092E-5	DEFECT	2.330282841372994E-6	IMPLEMENTATION	2.508058839082019E-7	TEST	1.8554246288306768E-7	DOCUMENTATION
// TODO : most of below was taken verbatim from DotNode; should either delegate this logic or super-type it	DESIGN	0.9999370656911428	DESIGN	4.294064386399208E-5	DEFECT	1.1090341338974383E-5	WITHOUT_CLASSIFICATION	5.2672918263722694E-6	TEST	3.056904621692855E-6	IMPLEMENTATION	5.791272061528755E-7	DOCUMENTATION
// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and "do the right thing" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character // the trim-source	DESIGN	0.9104408151690818	WITHOUT_CLASSIFICATION	0.08949499373049963	DESIGN	5.47950203263404E-5	IMPLEMENTATION	9.18796215358469E-6	DOCUMENTATION	2.078272390997434E-7	TEST	2.906994792755093E-10	DEFECT
// todo: we should really just collect these from the various SelectExpressions, rather than regenerating here	DESIGN	0.9958483104097214	WITHOUT_CLASSIFICATION	0.004140372431273947	DESIGN	8.150160618443303E-6	DEFECT	1.8540660657604704E-6	IMPLEMENTATION	1.2814819378080831E-6	TEST	3.1450382515717826E-8	DOCUMENTATION
//TODO: is this a bit ugly?	DESIGN	0.9991871833227902	DESIGN	4.389233404904681E-4	IMPLEMENTATION	3.098119073682411E-4	WITHOUT_CLASSIFICATION	3.1242268165488415E-5	TEST	2.0779083085027745E-5	DEFECT	1.2060078100762927E-5	DOCUMENTATION
// Need a better way to define the suffixes here...	DESIGN	0.7448286308096862	WITHOUT_CLASSIFICATION	0.2548730046599223	DESIGN	1.9407318459300246E-4	IMPLEMENTATION	9.703023252146902E-5	TEST	3.8903628246746455E-6	DOCUMENTATION	3.3707504523783923E-6	DEFECT
// TODO: something much better - look at the type of the other expression! // TODO: Have comparisonExpression and/or arithmeticExpression rules complete the resolution of boolean nodes.	DESIGN	0.9999884017911755	DESIGN	6.966286832315004E-6	DEFECT	2.8241379178034294E-6	IMPLEMENTATION	9.361740694444433E-7	WITHOUT_CLASSIFICATION	8.450761808117322E-7	TEST	2.6533824084178496E-8	DOCUMENTATION
// TODO : what amount of significant digits need to be supported here? //      - from the DecimalFormat docs: //          [significant digits] = [minimum integer digits] + [maximum fraction digits]	DESIGN	0.9943134036360286	DESIGN	0.0032976187897684034	DOCUMENTATION	0.0018081298905150583	DEFECT	3.9917925792106606E-4	IMPLEMENTATION	9.444889379721514E-5	WITHOUT_CLASSIFICATION	8.721953196979765E-5	TEST
// Needed the "clazz_" check to work around union-subclasses // TODO : is there a way to tell whether a persister is truly discrim-column based inheritence?	DESIGN	0.9995935511365336	DESIGN	2.3297395284758808E-4	WITHOUT_CLASSIFICATION	1.4983126909881879E-4	IMPLEMENTATION	1.0058576507173594E-5	DOCUMENTATION	7.0129676858986274E-6	TEST	6.5720973269663595E-6	DEFECT
//We should actually rework this class to not implement Parser //and just process path expressions in the most convenient way.	DESIGN	0.622084755011478	DESIGN	0.13919296190054314	DEFECT	0.1269588987776827	WITHOUT_CLASSIFICATION	0.11168058018415584	IMPLEMENTATION	7.966985184254843E-5	DOCUMENTATION	3.134274297670763E-6	TEST
//The class is now way to complex!	DESIGN	0.9999480549101938	WITHOUT_CLASSIFICATION	4.274452721818949E-5	DESIGN	7.316231192494075E-6	DEFECT	1.5159218737375558E-6	IMPLEMENTATION	2.6745698621729335E-7	DOCUMENTATION	1.0095253568022556E-7	TEST
//TODO: get SQL rendering out of here	DESIGN	0.9889293984513458	DESIGN	0.007856548058683695	WITHOUT_CLASSIFICATION	0.002659976579405485	IMPLEMENTATION	3.052471560074632E-4	DEFECT	1.905842312327197E-4	TEST	5.8245523324915584E-5	DOCUMENTATION
//TODO: is there a better way?	DESIGN	0.9994237180117126	DESIGN	4.993416596682096E-4	IMPLEMENTATION	6.231397824190871E-5	WITHOUT_CLASSIFICATION	1.1743599100995992E-5	TEST	1.8119822411560023E-6	DOCUMENTATION	1.0707690352903705E-6	DEFECT
//Must be done here because of side-effect! yuck...	DESIGN	0.9168731042061297	WITHOUT_CLASSIFICATION	0.08297509155596526	DESIGN	9.394671420358157E-5	DEFECT	2.241046700212094E-5	TEST	2.0033468198348536E-5	DOCUMENTATION	1.5413588500998004E-5	IMPLEMENTATION
//name from a super query (a bit inelegant that it shows up here)	DESIGN	0.7143318862520066	WITHOUT_CLASSIFICATION	0.2845051910295318	DESIGN	6.616249401163429E-4	IMPLEMENTATION	3.311697030468949E-4	DEFECT	1.6431518230528385E-4	TEST	5.812892993141018E-6	DOCUMENTATION
// We should reengineer this class so that, rather than the current ad - // hoc linear approach to processing a stream of tokens, we instead // build up a tree of expressions.	DESIGN	0.9976550113137387	DESIGN	0.002327994611918989	WITHOUT_CLASSIFICATION	1.6754694134123155E-5	DEFECT	2.069498810647934E-7	DOCUMENTATION	3.191888795969588E-8	TEST	5.114389627891835E-10	IMPLEMENTATION
// this is ugly here, but needed because its a subquery	DESIGN	0.9972434915635714	WITHOUT_CLASSIFICATION	0.0024682675262152646	DESIGN	2.483910958573069E-4	IMPLEMENTATION	1.917118035239914E-5	DEFECT	1.8159056552801806E-5	TEST	2.519577450800572E-6	DOCUMENTATION
// unhappy about this being public ... is there a better way?	DESIGN	0.9978294905332405	DESIGN	0.002167620995591106	WITHOUT_CLASSIFICATION	1.387572784627658E-6	DEFECT	9.522621042202159E-7	TEST	4.1421449454170446E-7	IMPLEMENTATION	1.3442178498162235E-7	DOCUMENTATION
// Make sure this is a defined parameter and check the incoming value type // TODO: what should be the actual exception type here?	DESIGN	0.7072143553778395	DESIGN	0.2918264184601535	IMPLEMENTATION	6.731704701277432E-4	WITHOUT_CLASSIFICATION	2.8192753653451957E-4	DEFECT	3.736170438506509E-6	TEST	3.919849061032866E-7	DOCUMENTATION
// TODO : this constructor form is *only* used from constructor directly below us; can it go away?	DESIGN	0.9999949449566521	DESIGN	4.192054464600026E-6	IMPLEMENTATION	4.5243642740890765E-7	WITHOUT_CLASSIFICATION	2.3293981345509347E-7	TEST	1.5774441344040065E-7	DEFECT	1.986822906748545E-8	DOCUMENTATION
//TODO: COPY/PASTE FROM SessionImpl, pull up!	DESIGN	0.5325595560752298	IMPLEMENTATION	0.41930420968811927	WITHOUT_CLASSIFICATION	0.04405206174548912	DESIGN	0.002729078343179142	DEFECT	8.267276276014945E-4	DOCUMENTATION	5.283665203812231E-4	TEST
// TODO : should remove this exposure //  and have all references to the session's batcher use the ConnectionManager.	DESIGN	0.9994306623543348	DESIGN	2.884156122383688E-4	IMPLEMENTATION	1.7913775122645423E-4	DEFECT	9.730877856131497E-5	WITHOUT_CLASSIFICATION	4.346330238207172E-6	DOCUMENTATION	1.2917340099163342E-7	TEST
// todo : should this get moved to PersistentContext? // logically, is PersistentContext the "thing" to which an interceptor gets attached?	DESIGN	0.9643618380165964	DESIGN	0.03563351066517762	WITHOUT_CLASSIFICATION	4.116958311312612E-6	DEFECT	5.254002365360433E-7	TEST	8.206176117165176E-9	DOCUMENTATION	7.535020539931947E-10	IMPLEMENTATION
// TODO: what type?	DESIGN	0.8337564005967156	IMPLEMENTATION	0.15923257138924485	DESIGN	0.004111537072519182	WITHOUT_CLASSIFICATION	0.0018293046422097753	DEFECT	5.587144426251356E-4	DOCUMENTATION	5.114718566853855E-4	TEST
// todo : should seriously consider not allowing a txn to begin from a child session //      can always route the request to the root session...	DESIGN	0.9654807692665643	WITHOUT_CLASSIFICATION	0.020459247608826166	DESIGN	0.014000461038557961	DEFECT	3.7263524264275356E-5	IMPLEMENTATION	2.2050586230747056E-5	TEST	2.079755564749618E-7	DOCUMENTATION
// short-circuit for performance...	DESIGN	0.999809166044663	WITHOUT_CLASSIFICATION	1.835801574364137E-4	DESIGN	3.1558526013713444E-6	DOCUMENTATION	2.2094099160849404E-6	DEFECT	1.0878389802129366E-6	TEST	8.006964027865157E-7	IMPLEMENTATION
// not absolutely necessary, but does help with aggressive release	DESIGN	0.9825718488862643	WITHOUT_CLASSIFICATION	0.017328154258221266	DESIGN	5.980128868141465E-5	IMPLEMENTATION	2.715227003064208E-5	TEST	1.2285372879878962E-5	DEFECT	7.579239225452732E-7	DOCUMENTATION
// TODO : remove these last two as batcher is no longer managing connections	DESIGN	0.8609440761020192	DESIGN	0.1383256828328208	WITHOUT_CLASSIFICATION	5.542863012575757E-4	TEST	1.073013672021574E-4	DEFECT	5.3034535233563166E-5	IMPLEMENTATION	1.5618861466665745E-5	DOCUMENTATION
//work around a bug in all known connection pools....	DESIGN	0.6972242323199553	DESIGN	0.20310100787316065	DEFECT	0.07002367355790429	IMPLEMENTATION	0.029032185866544456	WITHOUT_CLASSIFICATION	6.129917250383689E-4	DOCUMENTATION	5.908657396928059E-6	TEST
// TODO : make this the factory for "entity mode related" sessions; // also means making this the target of transaction-synch and the // thing that knows how to cascade things between related sessions // // At that point, perhaps this thing is a "SessionContext", and // ConnectionManager is a "JDBCContext"?  A "SessionContext" should // live in the impl package...	DESIGN	0.9999905228212917	DESIGN	9.472865790591318E-6	IMPLEMENTATION	1.7973425397140913E-9	DOCUMENTATION	1.3895282113185744E-9	DEFECT	1.0030850020477732E-9	TEST	1.229620223566523E-10	WITHOUT_CLASSIFICATION
//TODO: does this really need to be here? //      does the collection already have //      it's own up-to-date snapshot?	DESIGN	0.5947563077410871	DESIGN	0.3144881495823543	IMPLEMENTATION	0.06057217608673666	WITHOUT_CLASSIFICATION	0.02971768580522584	DEFECT	3.768288715178195E-4	TEST	8.88519130783217E-5	DOCUMENTATION
//TODO: the i==entitySpan-1 bit depends upon subclass implementation (very bad)	DESIGN	0.9230454182300137	DESIGN	0.07681272941048156	IMPLEMENTATION	1.3897972403484563E-4	WITHOUT_CLASSIFICATION	2.342386298710143E-6	DOCUMENTATION	4.048040468044608E-7	DEFECT	1.2544512435707333E-7	TEST
/**	DESIGN	0.41192914246627127	DOCUMENTATION	0.37751716258507445	DESIGN	0.10445436084894476	IMPLEMENTATION	0.03906412540457568	WITHOUT_CLASSIFICATION	0.03353849397195846	DEFECT	0.033496714723175385	TEST
// todo : add the notion of enabled filters to the CacheKey to differentiate filtered collections from non-filtered; //      but CacheKey is currently used for both collections and entities; would ideally need to define two seperate ones; //      currently this works in conjuction with the check on //      DefaultInitializeCollectionEventHandler.initializeCollectionFromCache() (which makes sure to not read from //      cache with enabled filters). // EARLY EXIT!!!!!	DESIGN	0.9952843249308501	WITHOUT_CLASSIFICATION	0.004715480448184114	DESIGN	6.86680306566265E-8	DOCUMENTATION	6.233048606670177E-8	DEFECT	4.5503056153218326E-8	IMPLEMENTATION	1.811939296422625E-8	TEST
//for sets, we should end the collection load after resolving //the entities, since we might call hashCode() on the elements //TODO: or we could do this polymorphically, and have two //      different operations implemented differently for arrays	DESIGN	0.8510864073614761	DESIGN	0.14750115598558736	WITHOUT_CLASSIFICATION	0.001085917352618346	DEFECT	2.9948224100178234E-4	IMPLEMENTATION	2.1070277654748554E-5	TEST	5.966781661719374E-6	DOCUMENTATION
//This is not very nice (and quite slow):	DESIGN	0.8685401905560606	WITHOUT_CLASSIFICATION	0.10196149824555548	DESIGN	0.029345501518891814	DEFECT	1.3298484631911418E-4	IMPLEMENTATION	1.3763958948915357E-5	DOCUMENTATION	6.060874224152851E-6	TEST
//use of trim() here is ugly?	DESIGN	0.9992623344086228	WITHOUT_CLASSIFICATION	7.256576016180931E-4	DESIGN	5.368794310454112E-6	IMPLEMENTATION	4.764569128454905E-6	DEFECT	1.1140323847995053E-6	DOCUMENTATION	7.605939355318594E-7	TEST
//TODO: this is too conservative; if all preceding joins were  //      also inner joins, we could use an inner join here	DESIGN	0.8311043930704991	DESIGN	0.16826916132743322	WITHOUT_CLASSIFICATION	2.4692679967060107E-4	DEFECT	2.148702235380195E-4	TEST	1.1236330939944611E-4	DOCUMENTATION	5.228526945975538E-5	IMPLEMENTATION
//TODO: look at the owning property and check that it  //      isn't lazy (by instrumentation)	DESIGN	0.9200556195660262	IMPLEMENTATION	0.07801661055036077	WITHOUT_CLASSIFICATION	0.0016240657724739564	DEFECT	2.95542525584658E-4	DOCUMENTATION	6.403936908367926E-6	TEST	1.7576486460734358E-6	DESIGN
//TODO: inefficient	DESIGN	0.6786085477686544	DESIGN	0.22711810057634776	WITHOUT_CLASSIFICATION	0.09007356292638069	IMPLEMENTATION	0.003128397210397988	DOCUMENTATION	6.574420722637425E-4	TEST	4.1394944595527313E-4	DEFECT
// why does this matter?	DESIGN	0.9902634585996739	WITHOUT_CLASSIFICATION	0.009621504910415232	DESIGN	7.824685906149719E-5	TEST	2.3550232093443236E-5	DEFECT	9.50840810314591E-6	DOCUMENTATION	3.7309906528222055E-6	IMPLEMENTATION
// from the collection of associations, locate OJA for the // ManyToOne corresponding to this persister to fully // define the many-to-many; we need that OJA so that we can // use its alias here // TODO : is there a better way here?	DESIGN	0.9999961742542756	DESIGN	3.0807427403337086E-6	IMPLEMENTATION	5.637292745628301E-7	TEST	6.62793919613108E-8	DEFECT	5.8904257781167495E-8	WITHOUT_CLASSIFICATION	5.6090059695624045E-8	DOCUMENTATION
//TODO: this class depends directly upon CriteriaImpl,  //      in the impl package ... add a CriteriaImplementor  //      interface	DESIGN	0.9990573768631819	DESIGN	7.307948608199614E-4	IMPLEMENTATION	1.2461514685576175E-4	WITHOUT_CLASSIFICATION	8.33266013480263E-5	DEFECT	2.4645507524805177E-6	DOCUMENTATION	1.4219770419055815E-6	TEST
//TODO: add a CriteriaImplementor interface //      this class depends directly upon CriteriaImpl in the impl package...	DESIGN	0.9940352100479743	DESIGN	0.003948725220995159	WITHOUT_CLASSIFICATION	0.0019717282446572205	IMPLEMENTATION	3.5491659536139715E-5	DEFECT	6.6430672223307095E-6	DOCUMENTATION	2.201759614981032E-6	TEST
// TODO : not so sure this is needed...	DESIGN	0.9966073164013001	DESIGN	0.003335597971244233	IMPLEMENTATION	3.2156729546042855E-5	TEST	1.5545856737573494E-5	DEFECT	9.34891813690049E-6	DOCUMENTATION	3.4123035397646005E-8	WITHOUT_CLASSIFICATION
// meant to handle dynamic instantiation queries...(Copy from QueryLoader)	DESIGN	0.9995567866922661	WITHOUT_CLASSIFICATION	3.9738891390062156E-4	DESIGN	4.5221898444062575E-5	DEFECT	3.6185204420934883E-7	DOCUMENTATION	1.832844222937361E-7	IMPLEMENTATION	5.7358922783780265E-8	TEST
// TODO: The order in which entities are saved may matter (e.g., a particular transient entity //       may need to be saved before other transient entities can be saved; //       Keep retrying the batch of transient entities until either: //       1) there are no transient entities left in transientCopyCache //       or 2) no transient entities were saved in the last batch // For now, just run through the transient entities and retry the merge	DESIGN	0.5395780742876629	DESIGN	0.427728872812603	WITHOUT_CLASSIFICATION	0.028684439313101887	DEFECT	0.003907072068871703	IMPLEMENTATION	7.685841579598011E-5	TEST	2.4683101964522526E-5	DOCUMENTATION
// todo: this might really even be moved into the cfg package and used as the basis for all things which are configurable.	DESIGN	0.8520027945868113	WITHOUT_CLASSIFICATION	0.14798438457099933	DESIGN	1.0463321930634595E-5	IMPLEMENTATION	1.4217973853147278E-6	DEFECT	8.871852165667213E-7	DOCUMENTATION	4.853765682151612E-8	TEST
// todo : currently expects that the individual with expressions apply to the same sql table join. //      This may not be the case for joined-subclass where the property values //      might be coming from different tables in the joined hierarchy.  At some //      point we should expand this to support that capability.  However, that has //      some difficulties: //          1) the biggest is how to handle ORs when the individual comparisons are //              linked to different sql joins. //          2) here we would need to track each comparison individually, along with //              the join alias to which it applies and then pass that information //              back to the FromElement so it can pass it along to the JoinSequence	DESIGN	0.9893737305629596	WITHOUT_CLASSIFICATION	0.004478756857453814	IMPLEMENTATION	0.004455718419401658	DESIGN	0.0016607120349595918	DEFECT	3.1045038301471924E-5	DOCUMENTATION	3.708692380417218E-8	TEST
// this function has a template -> restore output, apply the template and write the result out // TODO: Downcast to avoid using an interface?  Yuck.	DESIGN	0.9964241057471485	DESIGN	0.0032497560400824264	WITHOUT_CLASSIFICATION	1.770570720476876E-4	TEST	7.914324088769324E-5	IMPLEMENTATION	4.230818127108884E-5	DEFECT	2.762971856289663E-5	DOCUMENTATION
// at some point the generate phase needs to be moved out of here, // because a single object-level DML might spawn multiple SQL DML // command executions. // // Possible to just move the sql generation for dml stuff, but for // consistency-sake probably best to just move responsiblity for // the generation phase completely into the delegates // (QueryLoader/StatementExecutor) themselves.  Also, not sure why // QueryLoader currently even has a dependency on this at all; does // it need it?  Ideally like to see the walker itself given to the delegates directly...	DESIGN	0.9997369219566785	DESIGN	2.630385193144072E-4	WITHOUT_CLASSIFICATION	2.5986643040888502E-8	DEFECT	1.3506702414940114E-8	DOCUMENTATION	3.0504793993164974E-11	TEST	1.5676475523455792E-13	IMPLEMENTATION
// get the right object from the list ... would it be easier to just call getEntity() ??	DESIGN	0.6556985708747959	WITHOUT_CLASSIFICATION	0.3441609206324857	DESIGN	1.134197329961294E-4	IMPLEMENTATION	2.687501893422896E-5	DEFECT	1.1225357659608396E-7	DOCUMENTATION	1.0148721156343334E-7	TEST
// TODO should we just collect these like with the collections above?	DESIGN	0.8789406945544577	IMPLEMENTATION	0.12090726699850421	DESIGN	1.4815415166766254E-4	TEST	1.731808917414773E-6	DOCUMENTATION	1.4012011379876178E-6	DEFECT	7.512853149994109E-7	WITHOUT_CLASSIFICATION
// todo : better to handle dynamic filters through implicit DynamicFilterParameterSpecification // see the discussion there in DynamicFilterParameterSpecification's javadocs as to why // it is currently not done that way.	DESIGN	0.9881202908225171	DESIGN	0.011763209752383253	WITHOUT_CLASSIFICATION	1.1519222547862423E-4	DOCUMENTATION	8.675207552780819E-7	DEFECT	4.223619284523305E-7	TEST	1.7316937378624924E-8	IMPLEMENTATION
/////////////////////////////////////////////////////////////////////////// // USED ONLY FOR REGRESSION TESTING!!!! // // todo : obviously get rid of all this junk ;) ///////////////////////////////////////////////////////////////////////////	DESIGN	0.9943756000552297	WITHOUT_CLASSIFICATION	0.005458534822256496	DESIGN	1.6231831376264827E-4	IMPLEMENTATION	2.519062900279472E-6	DEFECT	6.66540576964931E-7	DOCUMENTATION	3.61205273811608E-7	TEST
//create an index on the key columns??	DESIGN	0.9997952631471748	WITHOUT_CLASSIFICATION	1.6549535796594713E-4	DESIGN	3.355891630820536E-5	DEFECT	2.7503430369766514E-6	IMPLEMENTATION	2.190468693844792E-6	DOCUMENTATION	7.417668201619588E-7	TEST
//TODO: deprecated, remove eventually	DESIGN	0.9058861000304577	DESIGN	0.08079840895297734	IMPLEMENTATION	0.011532305634472701	WITHOUT_CLASSIFICATION	0.0015579403644976585	DEFECT	1.777061912413492E-4	DOCUMENTATION	4.753882635325022E-5	TEST
//create an index on the key columns??	DESIGN	0.9997952631471748	WITHOUT_CLASSIFICATION	1.6549535796594713E-4	DESIGN	3.355891630820536E-5	DEFECT	2.7503430369766514E-6	IMPLEMENTATION	2.190468693844792E-6	DOCUMENTATION	7.417668201619588E-7	TEST
//TODO: improve this hack!	DESIGN	0.999913485715358	DESIGN	5.669986511286465E-5	WITHOUT_CLASSIFICATION	1.350037403173775E-5	TEST	1.171509365548532E-5	IMPLEMENTATION	3.2143279683108163E-6	DEFECT	1.384623873686117E-6	DOCUMENTATION
// inheritance cycle detection (paranoid check)	DESIGN	0.999400940510514	WITHOUT_CLASSIFICATION	4.525978193212234E-4	DESIGN	1.4437758086153612E-4	IMPLEMENTATION	1.0597773041145092E-6	DEFECT	9.447655763603689E-7	DOCUMENTATION	7.95464227298519E-8	TEST
//TODO: remove use of instanceof!	DESIGN	0.9593609608632282	DESIGN	0.03725246681730941	WITHOUT_CLASSIFICATION	0.0018794519487233083	DEFECT	0.0012810020447133804	IMPLEMENTATION	2.1207473695791803E-4	DOCUMENTATION	1.404358906770844E-5	TEST
//shortcut	DESIGN	0.9992427258364542	WITHOUT_CLASSIFICATION	7.358210888117376E-4	DESIGN	7.774613131627997E-6	DOCUMENTATION	6.433751453481175E-6	TEST	6.338963479564587E-6	DEFECT	9.057466693917995E-7	IMPLEMENTATION
//TODO: handle the case of a foreign key to something other than the pk	DESIGN	0.4824897559688421	WITHOUT_CLASSIFICATION	0.46476331407546106	IMPLEMENTATION	0.051784535005818685	DESIGN	5.075662436687101E-4	DEFECT	2.721004534259966E-4	DOCUMENTATION	1.8272825278341332E-4	TEST
// create an index on the key columns??	DESIGN	0.9999885084927563	WITHOUT_CLASSIFICATION	6.857745090914149E-6	DESIGN	4.343606302412862E-6	DEFECT	1.2125296529376986E-7	IMPLEMENTATION	1.1844410917866229E-7	DOCUMENTATION	5.045877582955122E-8	TEST
// todo : remove	DESIGN	0.988173418170732	WITHOUT_CLASSIFICATION	0.011792059022419442	DESIGN	2.2112125438928058E-5	IMPLEMENTATION	8.202284045285824E-6	DEFECT	2.7659452916636005E-6	TEST	1.4424520726107357E-6	DOCUMENTATION
// todo : remove	DESIGN	0.988173418170732	WITHOUT_CLASSIFICATION	0.011792059022419442	DESIGN	2.2112125438928058E-5	IMPLEMENTATION	8.202284045285824E-6	DEFECT	2.7659452916636005E-6	TEST	1.4424520726107357E-6	DOCUMENTATION
// todo : remove	DESIGN	0.988173418170732	WITHOUT_CLASSIFICATION	0.011792059022419442	DESIGN	2.2112125438928058E-5	IMPLEMENTATION	8.202284045285824E-6	DEFECT	2.7659452916636005E-6	TEST	1.4424520726107357E-6	DOCUMENTATION
// todo : throw exception?	DESIGN	0.9740541081164243	WITHOUT_CLASSIFICATION	0.025473151625060954	DESIGN	3.979858710793549E-4	DEFECT	6.445277945705754E-5	IMPLEMENTATION	5.438552802144826E-6	DOCUMENTATION	4.863055176087895E-6	TEST
// todo : throw exception?  maybe warn if not the same?	DESIGN	0.741536143246471	DESIGN	0.23683184327903717	WITHOUT_CLASSIFICATION	0.020336249164459988	DEFECT	0.0012620320086876003	IMPLEMENTATION	1.9526240359045576E-5	TEST	1.4206060985351993E-5	DOCUMENTATION
//TODO: make EntityPersister *not* depend on SessionFactoryImplementor //interface, if possible	DESIGN	0.9675603172473632	DESIGN	0.02167450515971185	WITHOUT_CLASSIFICATION	0.006993992702445776	IMPLEMENTATION	0.003474274310919656	DEFECT	2.7239102648448943E-4	TEST	2.4519553074996043E-5	DOCUMENTATION
//TODO: is there a more elegant way than downcasting?	DESIGN	0.9999833985244213	DESIGN	7.648751082970192E-6	WITHOUT_CLASSIFICATION	6.962143044730493E-6	IMPLEMENTATION	1.6421288566890761E-6	TEST	2.473375056067379E-7	DEFECT	1.0111508863098788E-7	DOCUMENTATION
// TODO: encapsulate the protected instance variables!	DESIGN	0.9245611334384659	IMPLEMENTATION	0.07237034000614885	DESIGN	0.0015730751746415178	WITHOUT_CLASSIFICATION	0.0013382306353963824	DEFECT	8.071814103572853E-5	DOCUMENTATION	7.650260431167071E-5	TEST
// should indicate that we are processing an INSERT/UPDATE/DELETE // query with a subquery implied via a collection property // function. Here, we need to use the table name itself as the // qualification alias. // TODO : verify this works for all databases... // TODO : is this also the case in non-"indexed" scenarios?	DESIGN	0.9978241933628176	DESIGN	0.0020956022528213192	IMPLEMENTATION	6.126397743329534E-5	DEFECT	1.427583612755535E-5	TEST	2.82274129551917E-6	WITHOUT_CLASSIFICATION	1.8418295046069476E-6	DOCUMENTATION
//TODO: copy/paste from insertRows()	DESIGN	0.9211359470598391	WITHOUT_CLASSIFICATION	0.034195644810783236	DESIGN	0.025873656439431528	DEFECT	0.01709606568554094	IMPLEMENTATION	0.001440904476373009	TEST	2.5778152803226933E-4	DOCUMENTATION
//TODO: copy/paste from recreate()	DESIGN	0.594681149938166	WITHOUT_CLASSIFICATION	0.29274007276524844	DESIGN	0.10481109676681886	IMPLEMENTATION	0.006221176356904288	DEFECT	8.257099826980072E-4	DOCUMENTATION	7.207941901643688E-4	TEST
//should this interface extend PropertyMapping?	DESIGN	0.970589105607579	DESIGN	0.029403463256544804	WITHOUT_CLASSIFICATION	4.4579988770274265E-6	TEST	2.1114938747855985E-6	DEFECT	8.417696505120531E-7	DOCUMENTATION	1.9873473777146953E-8	IMPLEMENTATION
//ie. the subquery! yuck!	DESIGN	0.9993328877954984	WITHOUT_CLASSIFICATION	6.16410084043271E-4	DESIGN	3.4722482429149327E-5	DEFECT	1.1546077016619137E-5	IMPLEMENTATION	2.9224449567687914E-6	DOCUMENTATION	1.5111160557381324E-6	TEST
//TODO: move to .sql package!!	DESIGN	0.9634919502061122	DESIGN	0.034180672623585456	WITHOUT_CLASSIFICATION	0.0019974113578641564	IMPLEMENTATION	1.8496598445481705E-4	DEFECT	9.459212344900413E-5	DOCUMENTATION	5.040770453418071E-5	TEST
//TODO: code duplication with SingleTableEntityPersister	DESIGN	0.9806952330322957	DESIGN	0.01858701816728449	WITHOUT_CLASSIFICATION	6.079291167428941E-4	IMPLEMENTATION	5.701052067724516E-5	TEST	4.72154099989954E-5	DOCUMENTATION	5.593753000927346E-6	DEFECT
// TODO: It would be really, really nice to use this to also model components!	DESIGN	0.9999800651658989	DESIGN	1.4507245426600833E-5	IMPLEMENTATION	3.7266060709682042E-6	WITHOUT_CLASSIFICATION	1.6289895504039083E-6	DEFECT	4.890899946123904E-8	DOCUMENTATION	2.3084053799173105E-8	TEST
//TODO: *two* hashmap lookups here is one too many...	DESIGN	0.8511895849559563	WITHOUT_CLASSIFICATION	0.0838902054100207	DESIGN	0.06298858275768869	DEFECT	0.0017672501707806632	IMPLEMENTATION	1.5254492374632383E-4	TEST	1.183178180722636E-5	DOCUMENTATION
//TODO: code duplication with JoinedSubclassEntityPersister	DESIGN	0.9908624669321306	DESIGN	0.009098347709390834	WITHOUT_CLASSIFICATION	2.6911636401541576E-5	IMPLEMENTATION	7.094980877689702E-6	DOCUMENTATION	4.880141670048449E-6	TEST	2.985995290790768E-7	DEFECT
//perhaps not really necessary...	DESIGN	0.8192469277887695	WITHOUT_CLASSIFICATION	0.17771090340751575	DESIGN	0.0015103368731989408	IMPLEMENTATION	0.0015009366653116302	DEFECT	2.3736422837814852E-5	DOCUMENTATION	7.158842366331372E-6	TEST
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass! // was toUnqotedAliasStrings( getIdentiferColumnNames() ) before - now tried // to remove that unqoting and missing aliases..	DESIGN	0.8000404830573544	DESIGN	0.19965948006952108	WITHOUT_CLASSIFICATION	2.427694625928289E-4	DEFECT	5.373183730369354E-5	TEST	3.0134938833456025E-6	IMPLEMENTATION	5.220793445370454E-7	DOCUMENTATION
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass! // was toUnqotedAliasStrings( getdiscriminatorColumnName() ) before - now tried // to remove that unqoting and missing aliases..	DESIGN	0.7961394090872768	DESIGN	0.20335494545863264	WITHOUT_CLASSIFICATION	4.6301226732988165E-4	DEFECT	4.2006197825686934E-5	TEST	4.5226040110998344E-7	DOCUMENTATION	1.7472853390461348E-7	IMPLEMENTATION
//TODO: should we use SELECT .. FOR UPDATE?	DESIGN	0.9658712060403957	DESIGN	0.031755202003667236	IMPLEMENTATION	0.001789448080735949	WITHOUT_CLASSIFICATION	2.7990616130462337E-4	DOCUMENTATION	2.463430971402874E-4	DEFECT	5.789461675619737E-5	TEST
//TODO: optimize this better!	DESIGN	0.6684252641368202	IMPLEMENTATION	0.3064870131953409	DESIGN	0.02157231922672332	WITHOUT_CLASSIFICATION	0.0030160780012949474	TEST	3.3388459966906837E-4	DOCUMENTATION	1.6544084015147976E-4	DEFECT
//TODO: should we allow suffixes on these ?	DESIGN	0.992161798826695	DESIGN	0.004803858298428065	WITHOUT_CLASSIFICATION	0.002070428919009102	DEFECT	9.041408791411925E-4	IMPLEMENTATION	3.366928404185489E-5	TEST	2.6103792684784668E-5	DOCUMENTATION
//This is really ugly, but necessary:	DESIGN	0.8793087970443735	WITHOUT_CLASSIFICATION	0.11939888327455103	DESIGN	0.0012645173095343497	DEFECT	1.4809089059155151E-5	IMPLEMENTATION	8.763035483241264E-6	DOCUMENTATION	4.23024699880739E-6	TEST
//ugly little workaround for fact that createUniqueKeyLoaders() does not handle component properties	DESIGN	0.9977436404097021	DESIGN	0.0022516378272865556	WITHOUT_CLASSIFICATION	2.89226365801189E-6	IMPLEMENTATION	1.2699574543390118E-6	TEST	4.082217002847412E-7	DOCUMENTATION	1.5132019882082224E-7	DEFECT
//TODO: disable batch loading if lockMode > READ?	DESIGN	0.9277478729754655	WITHOUT_CLASSIFICATION	0.04232298535690908	IMPLEMENTATION	0.017062786003320694	DEFECT	0.008722035448839637	DESIGN	0.00322470668063725	TEST	9.196135348278677E-4	DOCUMENTATION
// append the SQL to return the generated identifier //TODO: suck into Insert	DESIGN	0.9716452346815682	WITHOUT_CLASSIFICATION	0.027519074347094916	DESIGN	8.188861050450315E-4	IMPLEMENTATION	8.195209691821944E-6	DEFECT	7.312226945773395E-6	DOCUMENTATION	1.2974296542114318E-6	TEST
//TODO: I am not so sure about the exception handling in this bit!	DESIGN	0.9960791548179273	DESIGN	0.0021058391882974353	DEFECT	0.00172934324133377	WITHOUT_CLASSIFICATION	7.22347673721178E-5	IMPLEMENTATION	8.387559691397388E-6	DOCUMENTATION	5.040425377927487E-6	TEST
//TODO: is this really necessary????	DESIGN	0.9458941059725842	DESIGN	0.05314791928212245	WITHOUT_CLASSIFICATION	7.033501294879294E-4	IMPLEMENTATION	1.5315821349591845E-4	DEFECT	7.44161615533759E-5	DOCUMENTATION	2.705024075604149E-5	TEST
//TODO: move to .sql package, and refactor with similar things!	DESIGN	0.9717969370848859	DESIGN	0.028170675387653873	WITHOUT_CLASSIFICATION	1.7650929640690605E-5	IMPLEMENTATION	8.730128568363893E-6	TEST	3.4734948191198257E-6	DEFECT	2.532974431897521E-6	DOCUMENTATION
//TODO: implement functionality //  this might be painful to do here, as the "join post processing" for //  the subquery has already been performed (meaning that for //  theta-join dialects, the join conditions have already been moved //  over to the where clause).  A "simple" solution here might to //  perform "join post processing" once for the entire query (including //  any subqueries) at one fell swoop	DESIGN	0.9660777721061892	DESIGN	0.03389694783271035	IMPLEMENTATION	2.4216400049432376E-5	WITHOUT_CLASSIFICATION	9.261810495385598E-7	DOCUMENTATION	1.0068696751220502E-7	DEFECT	3.67930339751524E-8	TEST
// todo : this eventually needs to be removed	DESIGN	0.9913587066292786	WITHOUT_CLASSIFICATION	0.008216265058667857	DESIGN	3.705413042234012E-4	IMPLEMENTATION	5.1938692469453255E-5	DEFECT	1.5534478075514815E-6	DOCUMENTATION	9.94867553055966E-7	TEST
//kinda ugly, but needed for collections with a "." node mapping	DESIGN	0.9955582849420773	WITHOUT_CLASSIFICATION	0.003448884239991881	IMPLEMENTATION	7.579000850394072E-4	DESIGN	1.3152018293543746E-4	DEFECT	1.0084527494249112E-4	TEST	2.5652750135349607E-6	DOCUMENTATION
//is this ok?	DESIGN	0.9993485887771707	WITHOUT_CLASSIFICATION	6.399414195615078E-4	DESIGN	3.3099294460104877E-6	DOCUMENTATION	2.8687359326925355E-6	DEFECT	2.7452331998404488E-6	IMPLEMENTATION	2.5459046893995103E-6	TEST
//TODO: perhaps this should be some other RuntimeException...	DESIGN	0.9998334990505431	DESIGN	1.3372044421839196E-4	IMPLEMENTATION	2.4450324662750248E-5	DEFECT	4.9356799886518485E-6	TEST	2.9719233618285556E-6	WITHOUT_CLASSIFICATION	4.2257722509137353E-7	DOCUMENTATION
//TODO: make this a bit nicer	DESIGN	0.9814577434766789	DESIGN	0.016937785474992962	WITHOUT_CLASSIFICATION	8.034685778143897E-4	TEST	7.029719087912511E-4	IMPLEMENTATION	6.54900533156646E-5	DEFECT	3.25405084067396E-5	DOCUMENTATION
//Yuck:	DESIGN	0.9676753191772187	WITHOUT_CLASSIFICATION	0.03167272581577322	DESIGN	3.9257481511730934E-4	DEFECT	1.2409447779046512E-4	DOCUMENTATION	7.612468602403595E-5	IMPLEMENTATION	5.9161028076171825E-5	TEST
//TODO: we should provide some way to get keys of collection of statistics to make it easier to retrieve from a GUI perspective	DESIGN	0.9993986954633712	DESIGN	5.685965281114232E-4	WITHOUT_CLASSIFICATION	1.871637541360189E-5	DEFECT	1.3017742629780862E-5	IMPLEMENTATION	7.513144210897626E-7	DOCUMENTATION	2.225760531065945E-7	TEST
/**	DESIGN	0.41192914246627127	DOCUMENTATION	0.37751716258507445	DESIGN	0.10445436084894476	IMPLEMENTATION	0.03906412540457568	WITHOUT_CLASSIFICATION	0.03353849397195846	DEFECT	0.033496714723175385	TEST
// TODO : will need reference to session factory to fully complete HHH-1907	DESIGN	0.9899819097424023	DESIGN	0.005972551759767088	WITHOUT_CLASSIFICATION	0.0034982615085750795	IMPLEMENTATION	4.202681881372955E-4	DEFECT	1.12410273767303E-4	DOCUMENTATION	1.4598527350845554E-5	TEST
//TODO: currently keeps Getters and Setters (instead of PropertyAccessors) because of the way getGetter() and getSetter() are implemented currently; yuck!	DESIGN	0.99998847935798	DESIGN	9.508441880015849E-6	WITHOUT_CLASSIFICATION	1.1587861264899153E-6	DOCUMENTATION	5.329981062631996E-7	IMPLEMENTATION	2.692192604369899E-7	DEFECT	5.119664668771331E-8	TEST
//TODO: redesign how PropertyAccessors are acquired...	DESIGN	0.9972758210661561	DESIGN	0.0010230381706179098	DEFECT	9.305432828742495E-4	IMPLEMENTATION	5.677811590292213E-4	WITHOUT_CLASSIFICATION	1.4723305248851983E-4	DOCUMENTATION	5.558326883402358E-5	TEST
// todo : YUCK!!!	DESIGN	0.9991945784974278	WITHOUT_CLASSIFICATION	6.898643432703882E-4	DESIGN	7.876294361877725E-5	DEFECT	2.4846323944073022E-5	IMPLEMENTATION	8.071295463979381E-6	DOCUMENTATION	3.876596274912887E-6	TEST
// TODO : YUCK!!!  fix after HHH-1907 is complete	DESIGN	0.9985605597280921	DESIGN	0.0012626814824758354	DEFECT	8.367845624059659E-5	IMPLEMENTATION	4.5582070755087145E-5	WITHOUT_CLASSIFICATION	4.5532638855515944E-5	TEST	1.965623580705985E-6	DOCUMENTATION
//TODO: need to make the majority of this functionality into a top-level support class for custom impl support	DESIGN	0.9539007503735579	DESIGN	0.04106288655912771	IMPLEMENTATION	0.004538158702301516	WITHOUT_CLASSIFICATION	4.001362446769322E-4	TEST	9.347535986608651E-5	DOCUMENTATION	4.5927604699000224E-6	DEFECT
//TODO: design new lifecycle for ProxyFactory	DESIGN	0.4995900981275798	DESIGN	0.4446221370212192	WITHOUT_CLASSIFICATION	0.04676653414552067	IMPLEMENTATION	0.004118163025470631	DEFECT	0.00402669859749802	DOCUMENTATION	8.763690827116111E-4	TEST
//TODO: would be nice to handle proxy classes elegantly!	DESIGN	0.9764131772376442	DESIGN	0.020777540349997268	WITHOUT_CLASSIFICATION	0.0025922670069655138	IMPLEMENTATION	1.526883241488085E-4	DEFECT	3.257947911813005E-5	DOCUMENTATION	3.174760212623844E-5	TEST
// TODO: copy/paste from ManyToOneType	DESIGN	0.4406672193726438	DESIGN	0.3043850725473627	IMPLEMENTATION	0.18230247649410575	WITHOUT_CLASSIFICATION	0.06797123066932767	DEFECT	0.002753007161532471	TEST	0.0019209937550277343	DOCUMENTATION
//TODO: should this be Session.instantiate(Persister, ...)?	DESIGN	0.9913057755347325	DESIGN	0.00744686151584814	WITHOUT_CLASSIFICATION	6.410955555598659E-4	IMPLEMENTATION	5.147533612734915E-4	DEFECT	7.893124033267753E-5	TEST	1.2582792253258762E-5	DOCUMENTATION
//TODO: this is a bit arbitrary, expose a switch to the user?	DESIGN	0.9933283000797054	DESIGN	0.005865890557300811	WITHOUT_CLASSIFICATION	6.274702558156643E-4	IMPLEMENTATION	1.5111266062421008E-4	DEFECT	1.932483546278472E-5	DOCUMENTATION	7.90161109117914E-6	TEST
//TODO: implement caching?! proxies?!	DESIGN	0.9984771338713767	IMPLEMENTATION	7.339473450663942E-4	WITHOUT_CLASSIFICATION	6.31589285107537E-4	DESIGN	8.499896908934438E-5	TEST	4.2216312578907965E-5	DEFECT	3.0114216781058318E-5	DOCUMENTATION
//TODO: is this right??	DESIGN	0.9374225606332672	DESIGN	0.06127918362069378	WITHOUT_CLASSIFICATION	8.598692141508162E-4	IMPLEMENTATION	1.9222711116911043E-4	TEST	1.2779863916621338E-4	DOCUMENTATION	1.1836078155276303E-4	DEFECT
// is this really necessary?	DESIGN	0.9994621885482659	WITHOUT_CLASSIFICATION	5.37473278691223E-4	DESIGN	2.1211668898185918E-7	DEFECT	8.783340286336984E-8	DOCUMENTATION	2.8735671885017224E-8	TEST	9.487279213636849E-9	IMPLEMENTATION
//TODO: move these to a new JoinableType abstract class, //extended by EntityType and PersistentCollectionType:	DESIGN	0.9944624376625018	DESIGN	0.005529061407673067	WITHOUT_CLASSIFICATION	8.373027143421175E-6	TEST	5.653224037054419E-8	DOCUMENTATION	4.5037599244366184E-8	DEFECT	2.6332842224216643E-8	IMPLEMENTATION
// TODO: this is very suboptimal for some subclasses (namely components), // since it does not take advantage of two-phase-load	DESIGN	0.9515332825308258	DESIGN	0.04258096653645958	WITHOUT_CLASSIFICATION	0.0048402278197674595	DEFECT	0.0010019805413280709	TEST	2.24392166000955E-5	IMPLEMENTATION	2.110335501898214E-5	DOCUMENTATION
// worrying about proxies is perhaps a little bit of overkill here...	DESIGN	0.9949436563067926	DESIGN	0.0040669465300807554	WITHOUT_CLASSIFICATION	8.202141912490486E-4	DEFECT	1.5864934990498218E-4	IMPLEMENTATION	1.0311400353492866E-5	TEST	2.2222161898146995E-7	DOCUMENTATION
// NOTE VERY HACKISH WORKAROUND!! // TODO: Fix this so it will work for non-POJO entity mode	DESIGN	0.9999864007605971	DESIGN	9.6444650569468E-6	IMPLEMENTATION	3.7687375367763275E-6	DEFECT	1.716247680858827E-7	TEST	1.440803323833579E-8	DOCUMENTATION	4.007962470740933E-12	WITHOUT_CLASSIFICATION
// TODO: Fix this so it will work for non-POJO entity mode	DESIGN	0.7987486065942114	DESIGN	0.18827402648379432	IMPLEMENTATION	0.012285284171979213	DEFECT	5.778974952225083E-4	TEST	1.0538886308136935E-4	DOCUMENTATION	8.796391711187079E-6	WITHOUT_CLASSIFICATION
// We would probably refactor to have LogicParser (builds a tree of simple // expressions connected by and, or, not), ExpressionParser (translates // from OO terms like foo, foo.Bar, foo.Bar.Baz to SQL terms like // FOOS.ID, FOOS.BAR_ID, etc) and PathExpressionParser (which does much // the same thing it does now)	DESIGN	0.9954967608618059	WITHOUT_CLASSIFICATION	0.004485349859968991	DESIGN	8.713643394630929E-6	IMPLEMENTATION	6.6177997699771955E-6	DEFECT	2.5140042875533145E-6	TEST	4.383077286726645E-8	DOCUMENTATION
//TODO: this is a little inefficient, don't need to do a whole //      deep replaceElements() call	DESIGN	0.9999871335660104	DESIGN	1.174899493351016E-5	IMPLEMENTATION	1.020732154239962E-6	WITHOUT_CLASSIFICATION	7.245185319479388E-8	TEST	1.6667640707776643E-8	DOCUMENTATION	7.587408013551437E-9	DEFECT
//workaround for WebLogic	DESIGN	0.8761976854745537	WITHOUT_CLASSIFICATION	0.1233693264284931	DESIGN	1.9322783296038152E-4	IMPLEMENTATION	1.6734573684073315E-4	DEFECT	5.631596685408015E-5	DOCUMENTATION	1.6098560297900067E-5	TEST
//TODO: this dependency is kinda Bad	DESIGN	0.9932071702965036	DESIGN	0.004257792567182723	IMPLEMENTATION	9.74260464021863E-4	DEFECT	8.498966723342054E-4	WITHOUT_CLASSIFICATION	5.203639237118101E-4	DOCUMENTATION	1.9051607624584227E-4	TEST
//ick!	DESIGN	0.9998245327285219	WITHOUT_CLASSIFICATION	1.251426868989837E-4	DESIGN	3.635404810781617E-5	DEFECT	9.786688392628117E-6	DOCUMENTATION	2.8253129238846135E-6	TEST	1.3585351548793272E-6	IMPLEMENTATION
// short cut check...	DESIGN	0.9996671692828907	WITHOUT_CLASSIFICATION	3.1152395696943834E-4	DESIGN	1.578751768631793E-5	IMPLEMENTATION	2.7849478485653108E-6	TEST	1.7083968559888523E-6	DOCUMENTATION	1.0258977490222598E-6	DEFECT
// todo : move to StringHelper?	DESIGN	0.9160796157318568	WITHOUT_CLASSIFICATION	0.08389812364427306	DESIGN	1.6955217995098867E-5	DEFECT	3.0578617127664704E-6	IMPLEMENTATION	1.2559294851308406E-6	TEST	9.91614677000798E-7	DOCUMENTATION
//yukky! Don't you have subclasses for that! //TODO race conditions can happen here	DESIGN	0.9974928852561687	DESIGN	0.002187556226343798	WITHOUT_CLASSIFICATION	1.4683603264398548E-4	DEFECT	8.976699216641754E-5	TEST	6.940990752533271E-5	DOCUMENTATION	1.3545585151619E-5	IMPLEMENTATION
//TODO: We probably should have a StatisticsNotPublishedException, to make it clean	DESIGN	0.9996108422038724	DESIGN	1.8042129613115554E-4	DEFECT	1.7459573764312957E-4	WITHOUT_CLASSIFICATION	2.9151329773838143E-5	IMPLEMENTATION	4.4231923649296255E-6	TEST	5.662402142571586E-7	DOCUMENTATION
// FIXME hack to work around fact that calling // Node added = root.addChild( fqn ); doesn't  // properly set the version on the node	DESIGN	0.9948439201715319	DESIGN	0.004909840282770679	DEFECT	2.0354190668559342E-4	IMPLEMENTATION	4.176031989606115E-5	WITHOUT_CLASSIFICATION	8.805411560931769E-7	DOCUMENTATION	5.677795963247656E-8	TEST
// TODO: I considered validating the presence of the TS cache here, // but decided to defer unti getQueryCacheInstance() in case the  // cache is never actually used	DESIGN	0.604633218089996	IMPLEMENTATION	0.3410138046985624	DESIGN	0.0439956327945041	WITHOUT_CLASSIFICATION	0.010307986360456422	DEFECT	4.90379536432382E-5	DOCUMENTATION	3.2010283779002047E-7	TEST
//need to do that here rather than in the save event listener to let //the post insert events to have a id-filled entity when IDENTITY is used (EJB3)	DESIGN	0.9396449392808217	DESIGN	0.059956624060684485	WITHOUT_CLASSIFICATION	2.091838494614278E-4	IMPLEMENTATION	1.6877412188335918E-4	DEFECT	1.812045366160714E-5	TEST	2.358233487256017E-6	DOCUMENTATION
//TODO: simply remove this override //      if we fix the above todos	DESIGN	0.9882313746840342	WITHOUT_CLASSIFICATION	0.006277795788010125	DESIGN	0.004003669276695841	DEFECT	0.0010216721550219128	IMPLEMENTATION	4.6284293342460945E-4	TEST	2.64516281321798E-6	DOCUMENTATION
// This, is used by SessionFactoryImpl to hand to the generated SessionImpl; // was the only reason I could see that we cannot just use null as // Settings.cacheProvider	DESIGN	0.9987641975885375	WITHOUT_CLASSIFICATION	0.0012346845434878869	DESIGN	1.1054093620969255E-6	DEFECT	4.750249631574822E-9	IMPLEMENTATION	4.448145089679413E-9	TEST	3.2602178341599494E-9	DOCUMENTATION
// this is done here 'cos we might only know the type here (ugly!) // TODO: improve this a lot:	DESIGN	0.998788722422556	DESIGN	8.478868173437928E-4	DEFECT	2.571286239698103E-4	IMPLEMENTATION	1.0230884586044174E-4	TEST	3.029965733197677E-6	WITHOUT_CLASSIFICATION	9.233245368100502E-7	DOCUMENTATION
// todo : would love to have this work on a notification basis //    where the successful binding of an entity/subclass would //    emit a notification which the extendsQueue entries could //    react to...	DESIGN	0.9902221689564438	WITHOUT_CLASSIFICATION	0.00977297777853933	DESIGN	4.690488475122815E-6	DEFECT	1.542603832856174E-7	TEST	7.793298057245155E-9	DOCUMENTATION	7.228606057324094E-10	IMPLEMENTATION
// TODO : not sure the best way to handle this. // The non-performant way :	DESIGN	0.9868121998505816	DESIGN	0.012476427188892171	IMPLEMENTATION	3.8332130004711085E-4	TEST	2.2992215052600016E-4	DEFECT	8.873652250105621E-5	DOCUMENTATION	9.392987452142271E-6	WITHOUT_CLASSIFICATION
// would be better to use the element-type to determine // whether the old and the new are equal here; the problem being // we do not necessarily have access to the element type in all // cases	DESIGN	0.999981524281407	WITHOUT_CLASSIFICATION	1.824739559573122E-5	DESIGN	1.90947989737643E-7	IMPLEMENTATION	2.6382580241298865E-8	DEFECT	1.0796503114002619E-8	DOCUMENTATION	1.9592407792565396E-10	TEST
// This next bit is to allow for both unsaved-value="negative" // and for "older" behavior where version number did not get // seeded if it was already set in the object // TODO: shift it into unsaved-value strategy	DESIGN	0.9478579294304695	DESIGN	0.05173982920520177	WITHOUT_CLASSIFICATION	3.960087690729976E-4	DEFECT	5.744838441688879E-6	IMPLEMENTATION	3.198702031855588E-7	TEST	1.6788661080083976E-7	DOCUMENTATION
// merges don't cascade to uninitialized collections //	DESIGN	0.9999854540441818	WITHOUT_CLASSIFICATION	1.3034770119127665E-5	DESIGN	1.210071135204847E-6	IMPLEMENTATION	1.4446428159769377E-7	DEFECT	1.397363795566798E-7	TEST	1.6913902772382852E-8	DOCUMENTATION
// TODO: an alternative is to check if the owner has changed; if it hasn't then // return collection.getOwner()	DESIGN	0.9676532777741207	IMPLEMENTATION	0.028807055426738233	WITHOUT_CLASSIFICATION	0.0019066846927076274	DESIGN	0.001607220874131002	DEFECT	2.3623406555818576E-5	TEST	2.137825746553973E-6	DOCUMENTATION
//it is possible that the tree-walking in OuterJoinLoader can get to //an association defined by a subclass, in which case the property-ref //might refer to a property defined on a subclass of the current class //in this case, the table name is not known - this temporary solution  //assumes that the property-ref refers to a property of the subclass //table that the association belongs to (a reasonable guess) //TODO: fix this, add: OuterJoinLoadable.getSubclassPropertyTableName(String propertyName)	DESIGN	0.7231591150951894	DESIGN	0.2768337708177186	DEFECT	4.664293927419048E-6	DOCUMENTATION	1.4969471174508758E-6	IMPLEMENTATION	9.080907932774335E-7	TEST	4.475525382992311E-8	WITHOUT_CLASSIFICATION
// this only works because collection entries are kept in a sequenced // map by persistence context (maybe we should do like entities and // keep a separate sequences set...) //TODO: calling entrySet on an IdentityMap is SLOW!!	DESIGN	0.9999477665969676	DESIGN	3.61443648331174E-5	WITHOUT_CLASSIFICATION	8.636807433473582E-6	DEFECT	6.736004133391978E-6	IMPLEMENTATION	6.640929558188514E-7	TEST	5.213367664128325E-8	DOCUMENTATION
// important, to account for newly saved entities in query // todo : some kind of check for new status...	DESIGN	0.9432261958664406	WITHOUT_CLASSIFICATION	0.05508604897641344	DESIGN	0.0013352162314885145	DEFECT	3.236212212672265E-4	IMPLEMENTATION	2.0411095474187423E-5	TEST	8.50660891599829E-6	DOCUMENTATION
// brand new collection //TODO: or an array!! we can't lock objects with arrays now??	DESIGN	0.5880877899999368	WITHOUT_CLASSIFICATION	0.315124583300171	DEFECT	0.05340203157550672	DESIGN	0.042731903203627304	IMPLEMENTATION	4.718073673327806E-4	DOCUMENTATION	1.818845534253854E-4	TEST
//TODO: if object was an uninitialized proxy, this is inefficient, //      resulting in two SQL selects	DESIGN	0.9977218462570291	WITHOUT_CLASSIFICATION	0.002245687035557488	DESIGN	2.6637360063082464E-5	TEST	3.103129517672464E-6	DEFECT	2.5121791433219404E-6	DOCUMENTATION	2.1403868948546472E-7	IMPLEMENTATION
//before cascade! //TODO: should this be Session.instantiate(Persister, ...)?	DESIGN	0.9448536484752432	DESIGN	0.03726216879401634	WITHOUT_CLASSIFICATION	0.01548685035259517	DEFECT	0.0020752906075812397	IMPLEMENTATION	2.569372534281461E-4	TEST	6.510451713586444E-5	DOCUMENTATION
// TODO : absolutely no usages of this constructor form; can it go away?	DESIGN	0.9992240285883048	DESIGN	7.379817471957064E-4	IMPLEMENTATION	2.8931946750617043E-5	TEST	7.023079947503269E-6	WITHOUT_CLASSIFICATION	1.4447053679745404E-6	DOCUMENTATION	5.89932433364759E-7	DEFECT
// todo : need to find a clean way to handle the "event source" role // a seperate classs responsible for generating/dispatching events just duplicates most of the Session methods... // passing around seperate reto interceptor, factory, actionQueue, and persistentContext is not manageable...	DESIGN	0.999142040764747	DESIGN	8.577663189738157E-4	WITHOUT_CLASSIFICATION	1.5223031293955626E-7	TEST	3.494149247989019E-8	IMPLEMENTATION	4.013835743822617E-9	DOCUMENTATION	1.7306381256586301E-9	DEFECT
// todo : remove	DESIGN	0.988173418170732	WITHOUT_CLASSIFICATION	0.011792059022419442	DESIGN	2.2112125438928058E-5	IMPLEMENTATION	8.202284045285824E-6	DEFECT	2.7659452916636005E-6	TEST	1.4424520726107357E-6	DOCUMENTATION
//aliasRefNode.resolve( false, false, aliasRefNode.getText() ); //TODO: is it kosher to do it here? //TODO: is it kosher to do it here?	DESIGN	0.9708544215237547	IMPLEMENTATION	0.028937191352728552	DESIGN	1.2089259171412592E-4	TEST	5.399494878139675E-5	WITHOUT_CLASSIFICATION	3.304930378263768E-5	DEFECT	4.5027923867567916E-7	DOCUMENTATION
// No explicit select expression; render the id and properties // projection lists for every persister in the from clause into // a single 'token node'. //TODO: the only reason we need this stuff now is collection filters, //      we should get rid of derived select clause completely!	DESIGN	0.9955067168085449	DESIGN	0.0036453099114541576	WITHOUT_CLASSIFICATION	8.228040779103371E-4	DEFECT	1.9741142836062835E-5	TEST	4.744555143674785E-6	DOCUMENTATION	6.835041108629221E-7	IMPLEMENTATION
// TODO : an optimization here would be to consider cascade deletes and not gen those delete statements; //      the difficulty is the ordering of the tables here vs the cascade attributes on the persisters -> //          the table info gotten here should really be self-contained (i.e., a class representation //          defining all the needed attributes), then we could then get an array of those	DESIGN	0.9887064706813857	DESIGN	0.01099767826938939	WITHOUT_CLASSIFICATION	2.927693323447831E-4	IMPLEMENTATION	1.4680111137342509E-6	DOCUMENTATION	1.1260490117394688E-6	DEFECT	4.876567546216565E-7	TEST
// TODO: get SQL rendering out of here, create an AST for the join expressions. // Use the SQL generator grammar to generate the SQL text for the index expression.	DESIGN	0.719982213895394	DESIGN	0.2453273611689112	WITHOUT_CLASSIFICATION	0.033775954686038404	IMPLEMENTATION	7.553426551169583E-4	TEST	9.005490646021744E-5	DOCUMENTATION	6.907268807930398E-5	DEFECT
// TODO : this really needs to be delayed unitl after we definitively know all node types // where this is currently a problem is parameters for which where we cannot unequivocally // resolve an expected type	DESIGN	0.996114430834994	DESIGN	0.0037046754784329033	DEFECT	8.63662011230205E-5	WITHOUT_CLASSIFICATION	6.24942001417158E-5	DOCUMENTATION	3.104517178898844E-5	IMPLEMENTATION	9.881135195102562E-7	TEST
// TODO: Figure out a better way to get the FROM elements in a proper tree structure. // If this is not the destination of a many-to-many, add it as a child of the origin.	DESIGN	0.7989409805397601	DESIGN	0.1630797619632546	DEFECT	0.019159327824043455	WITHOUT_CLASSIFICATION	0.018187160330013104	IMPLEMENTATION	4.1519971802054124E-4	TEST	2.1756962490813224E-4	DOCUMENTATION
// work around that crazy issue where the tree contains // "empty" FromElements (no text); afaict, this is caused // by FromElementFactory.createCollectionJoin()	DESIGN	0.6973831088884811	WITHOUT_CLASSIFICATION	0.3016047668389237	DESIGN	5.090342101933166E-4	DEFECT	4.8221588246734456E-4	IMPLEMENTATION	1.5106934320503582E-5	TEST	5.767245614083248E-6	DOCUMENTATION
//TODO: this class does too many things! we need a different //kind of path expression parser for each of the diffferent //ways in which path expressions can occur	DESIGN	0.9597171068686424	DESIGN	0.02667926624788086	DEFECT	0.010723776867461761	WITHOUT_CLASSIFICATION	0.0027902547897641072	DOCUMENTATION	4.7029037119709114E-5	IMPLEMENTATION	4.256618913127162E-5	TEST
//real hacky... // used to count the nesting of parentheses	DESIGN	0.9931880587403313	DESIGN	0.005815039514642478	WITHOUT_CLASSIFICATION	9.370742430986762E-4	IMPLEMENTATION	4.019349165185329E-5	DEFECT	1.2340467097857599E-5	TEST	7.293543177692458E-6	DOCUMENTATION
// TODO : would be really nice to cache the spec on the query-def so as to not have to re-calc the hash; // currently not doable though because of the resultset-ref stuff...	DESIGN	0.9902959477694535	DESIGN	0.004678885198111994	WITHOUT_CLASSIFICATION	0.004322553668603411	DEFECT	6.625012509724244E-4	IMPLEMENTATION	3.790273319937617E-5	DOCUMENTATION	2.209379659401203E-6	TEST
//for arrays, we should end the collection load before resolving //the entities, since the actual array instances are not instantiated //during loading //TODO: or we could do this polymorphically, and have two //      different operations implemented differently for arrays	DESIGN	0.49660711119610057	DESIGN	0.3343429051854695	IMPLEMENTATION	0.16737493520926275	DEFECT	0.0015770457233818846	WITHOUT_CLASSIFICATION	7.089219196648794E-5	TEST	2.71104938188695E-5	DOCUMENTATION
// polymorphism not really handled completely correctly, // perhaps...well, actually its ok, assuming that the // entity name used in the lookup is the same as the // the one used here, which it will be	DESIGN	0.9028267045771755	WITHOUT_CLASSIFICATION	0.09560636490481264	DESIGN	0.0015565951819961614	DEFECT	1.0160001164897376E-5	IMPLEMENTATION	1.1604727553790682E-7	TEST	5.928757525529101E-8	DOCUMENTATION
// TODO: should "record" how many properties we have reffered to - and if we  //       don't get'em'all we throw an exception! Way better than trial and error ;)	DESIGN	0.9971785475860887	DEFECT	0.0027081024900241124	DESIGN	1.1223477572259512E-4	WITHOUT_CLASSIFICATION	8.923559635700142E-7	TEST	1.2713914712165856E-7	DOCUMENTATION	9.565305376575832E-8	IMPLEMENTATION
// VERY IMPORTANT!!!! - This class needs to be free of any static references // to any CGLIB or Javassist classes.  Otherwise, users will always need both // on their classpaths no matter which (if either) they use. // // Another option here would be to remove the Hibernate.isPropertyInitialized() // method and have the users go through the SessionFactory to get this information.	DESIGN	0.9999993980765337	WITHOUT_CLASSIFICATION	5.741730044701844E-7	DESIGN	2.22582577656672E-8	DEFECT	4.845918546635581E-9	DOCUMENTATION	5.852182450686263E-10	IMPLEMENTATION	6.106718566285522E-11	TEST
// TODO: is it really neceassry to provide Configuration to CollectionPersisters ? Should it not be enough with associated class ? // or why does EntityPersister's not get access to configuration ? // // The only reason I could see that Configuration gets passed to collection persisters // is so that they can look up the dom4j node name of the entity element in case // no explicit node name was applied at the collection element level.  Are you kidding me? // Trivial to fix then.  Just store and expose the node name on the entity persister // (which the collection persister looks up anyway via other means...).	DESIGN	0.999663595687384	DESIGN	3.3036943858181475E-4	WITHOUT_CLASSIFICATION	5.030542746198943E-6	DEFECT	4.689079399778631E-7	IMPLEMENTATION	2.9989301208150483E-7	DOCUMENTATION	2.355303359956955E-7	TEST
//for backward compatibility, allow a set with no not-null  //element columns, using all columns in the row locater SQL //TODO: create an implicit not null constraint on all cols?	DESIGN	0.8724463076453708	WITHOUT_CLASSIFICATION	0.11816830255276217	DESIGN	0.007774563297840212	IMPLEMENTATION	0.0013251925603170157	DEFECT	2.674167425400579E-4	TEST	1.8217201169758516E-5	DOCUMENTATION
//SPACES //TODO: i'm not sure, but perhaps we should exclude //      abstract denormalized tables?	DESIGN	0.9955073718905401	DESIGN	0.0033106727542597018	IMPLEMENTATION	8.219422474176768E-4	DEFECT	1.9247148808493718E-4	WITHOUT_CLASSIFICATION	1.3700514009687577E-4	TEST	3.053647960067066E-5	DOCUMENTATION
//workaround, for backward compatibility of sets with no //not-null columns, assume all columns are used in the //row locator SQL	DESIGN	0.999954134099111	WITHOUT_CLASSIFICATION	4.56874092892184E-5	DESIGN	1.7547638064255443E-7	DEFECT	1.3436596526858137E-9	TEST	1.0639361716765942E-9	DOCUMENTATION	6.076232500820422E-10	IMPLEMENTATION
//note that this method could easily be moved up to BasicEntityPersister, //if we ever needed to reuse it from other subclasses	DESIGN	0.9918334714586686	DESIGN	0.00816617639384176	WITHOUT_CLASSIFICATION	2.4069679049587795E-7	TEST	1.0360875676957073E-7	IMPLEMENTATION	4.666387951360625E-9	DOCUMENTATION	3.175554397283877E-9	DEFECT
//index += getPropertyColumnSpan( i ); //TODO:  this is kinda slow...	DESIGN	0.9675931979739115	DEFECT	0.0258217769966891	DESIGN	0.00325303210816233	IMPLEMENTATION	0.002825977055936506	WITHOUT_CLASSIFICATION	4.483660757120355E-4	TEST	5.764978958845605E-5	DOCUMENTATION
//TODO: need some caching scheme? really comes down to decision  //      regarding amount of state (if any) kept on PropertyAccessors	DESIGN	0.9741900205084714	DESIGN	0.02364529163031638	DEFECT	0.00148403163750044	WITHOUT_CLASSIFICATION	3.706804606105275E-4	TEST	2.1919554614696502E-4	IMPLEMENTATION	9.078021695439638E-5	DOCUMENTATION
// TODO: here is why we need to make bytecode provider global :( // TODO : again, fix this after HHH-1907 is complete	DESIGN	0.9999368111873367	DESIGN	5.580159541207514E-5	IMPLEMENTATION	7.047738899598181E-6	TEST	2.5589091921921027E-7	DEFECT	8.352203371550028E-8	DOCUMENTATION	6.539878690554817E-11	WITHOUT_CLASSIFICATION
//TODO: Yuck! This is not quite good enough, it's a quick //hack around the problem of having a to-one association //that refers to an embedded component:	DESIGN	0.9999260892331169	DESIGN	7.280372575025994E-5	DEFECT	1.082746071751184E-6	IMPLEMENTATION	1.33485557262934E-8	TEST	9.373180331304278E-9	DOCUMENTATION	1.5733249189978327E-9	WITHOUT_CLASSIFICATION
// for DOM4J "collections" only // TODO: it would be better if this was done at the higher level by Printer	DESIGN	0.4086849883457065	DESIGN	0.3365286724634521	TEST	0.1611644755010356	IMPLEMENTATION	0.08506835072443847	WITHOUT_CLASSIFICATION	0.008241983865143193	DEFECT	3.1152910022413477E-4	DOCUMENTATION
// would be great to move all this below here into another method that could also be used // from the new scrolling stuff. // // Would need to change the way the max-row stuff is handled (i.e. behind an interface) so // that I could do the control breaking at the means to know when to stop	DESIGN	0.9999362365167633	DESIGN	6.376282819683332E-5	WITHOUT_CLASSIFICATION	4.5489698507880277E-10	TEST	1.5938566719305436E-10	DEFECT	3.009293433929508E-11	DOCUMENTATION	1.0664246170357114E-11	IMPLEMENTATION
//TODO: can we *always* use the "null property" approach for everything?	DESIGN	0.9942183350751876	DESIGN	0.0048782100063994634	IMPLEMENTATION	4.831295386233596E-4	WITHOUT_CLASSIFICATION	3.580252003557648E-4	DEFECT	6.129949344893836E-5	DOCUMENTATION	1.000685984805204E-6	TEST
//polymorphism comment above	DESIGN	0.9999946888462047	WITHOUT_CLASSIFICATION	4.143249617046793E-6	DESIGN	7.412149210446741E-7	DEFECT	1.8109526637614317E-7	TEST	1.7918225420996532E-7	DOCUMENTATION	6.641173668421731E-8	IMPLEMENTATION
// some messy, complex stuff here, since createCriteria() can take an // aliased path, or a path rooted at the creating criteria instance	DESIGN	0.9999990962453554	WITHOUT_CLASSIFICATION	5.006420026778752E-7	IMPLEMENTATION	3.2406382453828055E-7	DEFECT	4.648117480390725E-8	DESIGN	2.897873407148599E-8	TEST	3.588908297463446E-9	DOCUMENTATION
//TODO: really bad, evil hack to fix!!!	DESIGN	0.9999869695722363	DESIGN	7.8030042868675E-6	DEFECT	5.086033540982973E-6	IMPLEMENTATION	1.2316397647973714E-7	DOCUMENTATION	1.0638786800312775E-8	WITHOUT_CLASSIFICATION	7.587172545667069E-9	TEST
// ugly hack for cases like "elements(foo.bar.collection)" // (multi-part path expression ending in elements or indices)	DESIGN	0.917547504921543	DESIGN	0.0727618327184786	WITHOUT_CLASSIFICATION	0.00951160050910022	DEFECT	1.7085249196364746E-4	IMPLEMENTATION	4.63651737157304E-6	TEST	3.5728415429811712E-6	DOCUMENTATION
// try block is a hack around fact that currently tuplizers are not // given the opportunity to resolve a subclass entity name.  this // allows the (we assume custom) interceptor the ability to // influence this decision if we were not able to based on the // given entityName	DESIGN	0.9998767344225336	DESIGN	1.2326441350484223E-4	WITHOUT_CLASSIFICATION	5.726141450288829E-10	DOCUMENTATION	3.6429831873007653E-10	TEST	2.1054789301542884E-10	IMPLEMENTATION	1.6501158751324833E-11	DEFECT
/////////////////////////////////////////////////////////////////////// // HACK ALERT !!!!!!!!!!!!!!!!!!!!!!!!!!!! // Attempt to work around "ghost" ImpliedFromElements that occasionally // show up between the actual things being joined.  This consistently // occurs from index nodes (at least against many-to-many).  Not sure // if there are other conditions // // Essentially, look-ahead to the next FromElement that actually // writes something to the SQL	DESIGN	0.9996511433332822	DESIGN	3.4876989854322823E-4	WITHOUT_CLASSIFICATION	4.622703611003767E-8	DEFECT	3.022304266969279E-8	TEST	7.929085547078502E-9	DOCUMENTATION	2.3890103846225725E-9	IMPLEMENTATION
//init the table here instead of earlier, so that we can get a quoted table name //TODO: would it be better to simply pass the qualified table name, instead of //      splitting it up into schema/catalog/table names	DESIGN	0.6161218747661045	WITHOUT_CLASSIFICATION	0.22157495964585308	DESIGN	0.16208991185862662	IMPLEMENTATION	2.050554364147652E-4	TEST	7.281855945433072E-6	DEFECT	9.164370556514585E-7	DOCUMENTATION
// TODO : would be great to have a Mapping#hasNonIdentifierPropertyNamedId method // I don't believe that Mapping#getReferencedPropertyType accounts for the identifier property; so // if it returns for a property named 'id', then we should have a non-id field named id	DESIGN	0.9964865540957155	DESIGN	0.0033889176517488966	WITHOUT_CLASSIFICATION	1.1357242814201662E-4	DEFECT	7.366999069944961E-6	IMPLEMENTATION	3.433449985066863E-6	TEST	1.5537533879534878E-7	DOCUMENTATION
//TODO: is this really necessary????	DESIGN	0.9458941059725842	DESIGN	0.05314791928212245	WITHOUT_CLASSIFICATION	7.033501294879294E-4	IMPLEMENTATION	1.5315821349591845E-4	DEFECT	7.44161615533759E-5	DOCUMENTATION	2.705024075604149E-5	TEST
//TODO: ideally we need the construction of PropertyAccessor to take the following: //      1) EntityMode //      2) EntityMode-specific data (i.e., the classname for pojo entities) //      3) Property-specific data based on the EntityMode (i.e., property-name or dom4j-node-name) // The easiest way, with the introduction of the new runtime-metamodel classes, would be the // the following predicates: //      1) PropertyAccessorFactory.getPropertyAccessor() takes references to both a //          org.hibernate.metadata.EntityModeMetadata and org.hibernate.metadata.Property //      2) What is now termed a "PropertyAccessor" stores any values needed from those two //          pieces of information //      3) Code can then simply call PropertyAccess.getGetter() with no parameters; likewise with //          PropertyAccessor.getSetter()	DESIGN	0.8837572455765683	DESIGN	0.11453294756750887	WITHOUT_CLASSIFICATION	0.0012224251405072988	DEFECT	4.2216185596333146E-4	IMPLEMENTATION	5.0031241907252485E-5	DOCUMENTATION	1.5188617544918323E-5	TEST
//TODO: this is temporary in that the end result will probably not take a Property reference per-se.	DESIGN	0.9995065031698306	DESIGN	2.903791038186155E-4	DEFECT	2.0295975686198116E-4	WITHOUT_CLASSIFICATION	1.089186686085847E-7	DOCUMENTATION	4.742083142585348E-8	TEST	1.6299887819695952E-9	IMPLEMENTATION
// todo : this eventually needs to be removed	DESIGN	0.9913587066292786	WITHOUT_CLASSIFICATION	0.008216265058667857	DESIGN	3.705413042234012E-4	IMPLEMENTATION	5.1938692469453255E-5	DEFECT	1.5534478075514815E-6	DOCUMENTATION	9.94867553055966E-7	TEST
//TODO: make this a bit nicer	DESIGN	0.9814577434766789	DESIGN	0.016937785474992962	WITHOUT_CLASSIFICATION	8.034685778143897E-4	TEST	7.029719087912511E-4	IMPLEMENTATION	6.54900533156646E-5	DEFECT	3.25405084067396E-5	DOCUMENTATION
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9220574003580193	DESIGN	0.0779329727626003	WITHOUT_CLASSIFICATION	8.67591257122288E-6	IMPLEMENTATION	3.969677457855865E-7	TEST	3.691677543088902E-7	DOCUMENTATION	1.848313090675446E-7	DEFECT
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9220574003580193	DESIGN	0.0779329727626003	WITHOUT_CLASSIFICATION	8.67591257122288E-6	IMPLEMENTATION	3.969677457855865E-7	TEST	3.691677543088902E-7	DOCUMENTATION	1.848313090675446E-7	DEFECT
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9220574003580193	DESIGN	0.0779329727626003	WITHOUT_CLASSIFICATION	8.67591257122288E-6	IMPLEMENTATION	3.969677457855865E-7	TEST	3.691677543088902E-7	DOCUMENTATION	1.848313090675446E-7	DEFECT
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9220574003580193	DESIGN	0.0779329727626003	WITHOUT_CLASSIFICATION	8.67591257122288E-6	IMPLEMENTATION	3.969677457855865E-7	TEST	3.691677543088902E-7	DOCUMENTATION	1.848313090675446E-7	DEFECT
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9220574003580193	DESIGN	0.0779329727626003	WITHOUT_CLASSIFICATION	8.67591257122288E-6	IMPLEMENTATION	3.969677457855865E-7	TEST	3.691677543088902E-7	DOCUMENTATION	1.848313090675446E-7	DEFECT
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9220574003580193	DESIGN	0.0779329727626003	WITHOUT_CLASSIFICATION	8.67591257122288E-6	IMPLEMENTATION	3.969677457855865E-7	TEST	3.691677543088902E-7	DOCUMENTATION	1.848313090675446E-7	DEFECT
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9220574003580193	DESIGN	0.0779329727626003	WITHOUT_CLASSIFICATION	8.67591257122288E-6	IMPLEMENTATION	3.969677457855865E-7	TEST	3.691677543088902E-7	DOCUMENTATION	1.848313090675446E-7	DEFECT
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9220574003580193	DESIGN	0.0779329727626003	WITHOUT_CLASSIFICATION	8.67591257122288E-6	IMPLEMENTATION	3.969677457855865E-7	TEST	3.691677543088902E-7	DOCUMENTATION	1.848313090675446E-7	DEFECT
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.9998598310435675	DESIGN	1.0677815112112908E-4	WITHOUT_CLASSIFICATION	2.9218196444536592E-5	DOCUMENTATION	3.4852719618611464E-6	DEFECT	6.338781178688848E-7	TEST	5.345878724283019E-8	IMPLEMENTATION
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.9998598310435675	DESIGN	1.0677815112112908E-4	WITHOUT_CLASSIFICATION	2.9218196444536592E-5	DOCUMENTATION	3.4852719618611464E-6	DEFECT	6.338781178688848E-7	TEST	5.345878724283019E-8	IMPLEMENTATION
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.9998598310435675	DESIGN	1.0677815112112908E-4	WITHOUT_CLASSIFICATION	2.9218196444536592E-5	DOCUMENTATION	3.4852719618611464E-6	DEFECT	6.338781178688848E-7	TEST	5.345878724283019E-8	IMPLEMENTATION
// TODO : probably better to calculate these and pass them in, as it'll be more performant	DESIGN	0.999982912066893	DESIGN	7.705742438564813E-6	IMPLEMENTATION	4.648566605596091E-6	DEFECT	2.876048275651586E-6	DOCUMENTATION	1.7268937484884758E-6	WITHOUT_CLASSIFICATION	1.306820387552878E-7	TEST
