// todo : add support for READ_WRITE ( + NONSTRICT_READ_WRITE ??? )	IMPLEMENTATION	0.9492737360948711	WITHOUT_CLASSIFICATION	0.049962726496782406	IMPLEMENTATION	7.30496013400929E-4	DESIGN	2.066483106397972E-5	TEST	9.986227745159785E-6	DOCUMENTATION	2.390336136482625E-6	DEFECT
// todo : add support for READ_WRITE ( + NONSTRICT_READ_WRITE ??? )	IMPLEMENTATION	0.9492737360948711	WITHOUT_CLASSIFICATION	0.049962726496782406	IMPLEMENTATION	7.30496013400929E-4	DESIGN	2.066483106397972E-5	TEST	9.986227745159785E-6	DOCUMENTATION	2.390336136482625E-6	DEFECT
//TODO: return new Lock(ts);	IMPLEMENTATION	0.8978441320268032	WITHOUT_CLASSIFICATION	0.1009320530083172	DESIGN	7.4340690676285E-4	DEFECT	3.386798381458474E-4	IMPLEMENTATION	1.289692916504525E-4	DOCUMENTATION	1.2758928320425832E-5	TEST
//TODO: if lock.getTimestamp().equals(ts)	IMPLEMENTATION	0.7196733742360887	WITHOUT_CLASSIFICATION	0.23330994096992322	IMPLEMENTATION	0.025066540641975322	DEFECT	0.01810694209211625	TEST	0.0033809281134688117	DESIGN	4.62273946427664E-4	DOCUMENTATION
//TODO mappings.getLogicalTableName(ownerTable)	IMPLEMENTATION	0.4528621161920978	IMPLEMENTATION	0.4060690851247176	WITHOUT_CLASSIFICATION	0.13163826386013205	DESIGN	0.005348182154208154	TEST	0.003347666857340211	DEFECT	7.346858115041802E-4	DOCUMENTATION
// TODO: handle TypeDefs	IMPLEMENTATION	0.8739266773598745	IMPLEMENTATION	0.06755416280998666	WITHOUT_CLASSIFICATION	0.057351080378616755	DESIGN	6.416202082976219E-4	DEFECT	2.9787714633465657E-4	DOCUMENTATION	2.2858209688980354E-4	TEST
//TODO check there is no actual definition elemnents when a ref is defined	IMPLEMENTATION	0.9656989804776902	WITHOUT_CLASSIFICATION	0.03174520938149022	DESIGN	0.0025409494095551214	IMPLEMENTATION	8.985176853122602E-6	DOCUMENTATION	5.409902787982427E-6	TEST	4.6565162342827156E-7	DEFECT
// TODO: bindpropertyresults(alias, returnElem)	IMPLEMENTATION	0.4326348883593113	WITHOUT_CLASSIFICATION	0.32759549808639965	DESIGN	0.22886622162346873	DEFECT	0.010329353373219578	IMPLEMENTATION	3.943711815322695E-4	TEST	1.7966737606845806E-4	DOCUMENTATION
//TODO: validate existing of property with the chosen name. (secondpass )	IMPLEMENTATION	0.9842991912221435	WITHOUT_CLASSIFICATION	0.007932101847450083	DESIGN	0.0069621389023948885	IMPLEMENTATION	3.9541884270804975E-4	TEST	3.8206285719659557E-4	DEFECT	2.9086328106733246E-5	DOCUMENTATION
//TODO: native ids	IMPLEMENTATION	0.8559691452070819	IMPLEMENTATION	0.10519027084881474	WITHOUT_CLASSIFICATION	0.027631864760343836	DESIGN	0.009730732555455743	DEFECT	0.0011766930453023228	DOCUMENTATION	3.01293583001447E-4	TEST
//TODO: if we are using identity columns, fetch the identifier	IMPLEMENTATION	0.9979456034602308	WITHOUT_CLASSIFICATION	0.0018605811669421134	DESIGN	1.7077500211278482E-4	IMPLEMENTATION	7.890007213824238E-6	DEFECT	7.602200755801991E-6	DOCUMENTATION	7.5481627447672056E-6	TEST
//TODO: handle property-ref	IMPLEMENTATION	0.6842431627057598	WITHOUT_CLASSIFICATION	0.23312240221270467	DESIGN	0.07286808025030156	IMPLEMENTATION	0.008291613512937494	DEFECT	8.553614489426226E-4	DOCUMENTATION	6.193798693538919E-4	TEST
//TODO: get all properties, not just the fetched ones!	IMPLEMENTATION	0.9993034816468986	WITHOUT_CLASSIFICATION	4.874971073314435E-4	IMPLEMENTATION	1.8846858668678163E-4	DESIGN	1.3986571604037982E-5	DEFECT	5.642729077338583E-6	TEST	9.233584016506952E-7	DOCUMENTATION
//TODO: get all properties, not just the fetched ones!	IMPLEMENTATION	0.9993034816468986	WITHOUT_CLASSIFICATION	4.874971073314435E-4	IMPLEMENTATION	1.8846858668678163E-4	DESIGN	1.3986571604037982E-5	DEFECT	5.642729077338583E-6	TEST	9.233584016506952E-7	DOCUMENTATION
/**	IMPLEMENTATION	0.41247235596325493	DOCUMENTATION	0.37795729203980877	DESIGN	0.1053852951692493	IMPLEMENTATION	0.039437941980969234	WITHOUT_CLASSIFICATION	0.03307494829562861	DEFECT	0.031672166551089107	TEST
// TODO: RESTRICT VIOLATION	IMPLEMENTATION	0.4896024670622525	IMPLEMENTATION	0.32210669123089886	WITHOUT_CLASSIFICATION	0.16012973225047009	DESIGN	0.021737266359907147	DEFECT	0.003412823357060924	DOCUMENTATION	0.0030110197394105664	TEST
// TODO: lowercasing done here. Was done "at random" before; maybe not needed at all ?	IMPLEMENTATION	0.9613154774704186	IMPLEMENTATION	0.028712266418544245	DESIGN	0.009826308274956178	DEFECT	1.397868081839454E-4	TEST	3.616813127658157E-6	WITHOUT_CLASSIFICATION	2.5442147694152645E-6	DOCUMENTATION
// TODO: toLowerCase was not done before. Only used in Template.	IMPLEMENTATION	0.9979246331870697	DESIGN	0.0020300696119669075	WITHOUT_CLASSIFICATION	3.732446679604991E-5	DEFECT	6.769881441886689E-6	TEST	6.721944842479312E-7	DOCUMENTATION	5.306582412596614E-7	IMPLEMENTATION
// add an entry for this type of entity. // we can be assured that all referenced entities have already // been processed, // so specify that this entity is with the latest batch. // doing the batch number before adding the name to the list is // a faster way to get an accurate number.	IMPLEMENTATION	0.9999999960693334	WITHOUT_CLASSIFICATION	3.918611638372247E-9	DESIGN	9.84227988655534E-12	TEST	2.2116808674126174E-12	DOCUMENTATION	8.102970554567237E-16	IMPLEMENTATION	3.005221496567024E-16	DEFECT
//TODO: avoid this for non-new instances where mightBeDirty==false	IMPLEMENTATION	0.8651154946071031	DESIGN	0.06544683243498771	DEFECT	0.04486543950147064	WITHOUT_CLASSIFICATION	0.022523429980254604	IMPLEMENTATION	0.0011264468574516064	DOCUMENTATION	9.223566187321682E-4	TEST
//TODO: optimize away this lookup for entities w/o unsaved-value="undefined"	IMPLEMENTATION	0.8639738741979244	WITHOUT_CLASSIFICATION	0.10345265441238884	IMPLEMENTATION	0.032402495711775905	DESIGN	9.47725331241335E-5	TEST	6.40696645208587E-5	DOCUMENTATION	1.2133480265924952E-5	DEFECT
// we could move this inside if we wanted to // tolerate collection initializations during // collection dirty checking:	IMPLEMENTATION	0.9869195404544524	DESIGN	0.01295475147406435	WITHOUT_CLASSIFICATION	1.030806102160379E-4	IMPLEMENTATION	1.2364907247543548E-5	TEST	1.0115889621672362E-5	DEFECT	1.4666439799265062E-7	DOCUMENTATION
//TODO: assertion only, could be optimized away	IMPLEMENTATION	0.7235384978927283	IMPLEMENTATION	0.2528685382318971	WITHOUT_CLASSIFICATION	0.019359132387389174	DESIGN	0.0020695508791902357	TEST	0.0019585050213526568	DEFECT	2.057755874425621E-4	DOCUMENTATION
//TODO: check that entry.getIdentifier().equals(requestedId)	IMPLEMENTATION	0.9209437456437762	IMPLEMENTATION	0.07207524728368879	WITHOUT_CLASSIFICATION	0.006853908434819639	DESIGN	1.0466886319354576E-4	TEST	1.5204682903948167E-5	DOCUMENTATION	7.225091617809736E-6	DEFECT
//TODO: check that entry.getIdentifier().equals(requestedId)	IMPLEMENTATION	0.9209437456437762	IMPLEMENTATION	0.07207524728368879	WITHOUT_CLASSIFICATION	0.006853908434819639	DESIGN	1.0466886319354576E-4	TEST	1.5204682903948167E-5	DOCUMENTATION	7.225091617809736E-6	DEFECT
// TODO : why aren't these the same?	IMPLEMENTATION	0.6632489191681823	DESIGN	0.3336874155026007	IMPLEMENTATION	0.0017468870883918584	DOCUMENTATION	6.730823811639772E-4	DEFECT	6.348488644083842E-4	TEST	8.846995252772148E-6	WITHOUT_CLASSIFICATION
//TODO: always true for now, but not if we later decide to support elements() in the from clause	IMPLEMENTATION	0.6366486599463721	DESIGN	0.33959054544257006	WITHOUT_CLASSIFICATION	0.021129472924718815	DEFECT	0.002597476502325896	IMPLEMENTATION	3.25882060248485E-5	DOCUMENTATION	1.2569779886034546E-6	TEST
// TODO : or should we return 'containsTableAlias'??	IMPLEMENTATION	0.9898748233252872	DESIGN	0.010072776372525473	IMPLEMENTATION	2.6487199974539348E-5	DEFECT	1.3884520272748152E-5	WITHOUT_CLASSIFICATION	1.125462779286837E-5	DOCUMENTATION	7.739541470578853E-7	TEST
//TODO: arithmetic expressions, multiple new Foo(...)	IMPLEMENTATION	0.4868657813521468	WITHOUT_CLASSIFICATION	0.46372150617840274	IMPLEMENTATION	0.04568458565527354	DESIGN	0.003482591176191535	DEFECT	1.2743288162967857E-4	DOCUMENTATION	1.1810275635570296E-4	TEST
//TODO: for some dialects it would be appropriate to add the renderOrderByPropertiesSelect() to other select strings	IMPLEMENTATION	0.4426014666203991	DESIGN	0.30558015134942346	WITHOUT_CLASSIFICATION	0.2379525486441972	IMPLEMENTATION	0.006863018213956668	TEST	0.006859950416067149	DEFECT	1.4286475595651598E-4	DOCUMENTATION
//TODO: cache the persister, this shows up in yourkit	IMPLEMENTATION	0.9797447848014549	DESIGN	0.017008114960266395	WITHOUT_CLASSIFICATION	0.003004100653777148	DEFECT	1.5916514016339859E-4	IMPLEMENTATION	4.7971760687841756E-5	TEST	3.5862683650322086E-5	DOCUMENTATION
//TODO: theoretically non-threadsafe...	IMPLEMENTATION	0.8129510139359581	DESIGN	0.10407228913672756	IMPLEMENTATION	0.06483659593221551	WITHOUT_CLASSIFICATION	0.017809420366833882	DEFECT	3.1940372696236195E-4	DOCUMENTATION	1.1276901302499906E-5	TEST
// todo : look at optimizing these...	IMPLEMENTATION	0.8405320893865029	WITHOUT_CLASSIFICATION	0.13495388068070588	IMPLEMENTATION	0.01604920426883312	DEFECT	0.008219014412253943	DESIGN	2.0147446218404312E-4	TEST	4.433678952011842E-5	DOCUMENTATION
//TODO: maybe call it getRowSelection() ?	IMPLEMENTATION	0.5491798869371953	DESIGN	0.29326539600588397	IMPLEMENTATION	0.14136477347988388	WITHOUT_CLASSIFICATION	0.015949889098228715	DEFECT	1.369975307453255E-4	DOCUMENTATION	1.0305694806295659E-4	TEST
//TODO: make this handle multiple collection roles!	IMPLEMENTATION	0.8837189338367786	DESIGN	0.047983496794297684	IMPLEMENTATION	0.04104310993380359	DEFECT	0.026658105509303864	WITHOUT_CLASSIFICATION	5.262357041659208E-4	TEST	7.011822165012831E-5	DOCUMENTATION
//TODO: can we limit stored procedures ?!	IMPLEMENTATION	0.7050602268874199	DESIGN	0.28773878525065993	WITHOUT_CLASSIFICATION	0.0069623038629979365	DEFECT	1.3452387958275627E-4	DOCUMENTATION	5.922153684636882E-5	TEST	4.4938582493109664E-5	IMPLEMENTATION
// TODO: not visible to the user!	IMPLEMENTATION	0.5454430463100854	WITHOUT_CLASSIFICATION	0.2575794932091976	IMPLEMENTATION	0.18412053598355746	DEFECT	0.012109134516298163	DESIGN	5.147312512302155E-4	DOCUMENTATION	2.3305872963093604E-4	TEST
//TODO: unnecessary for databases with ANSI-style joins	IMPLEMENTATION	0.43814124678876587	DESIGN	0.41364184147040944	IMPLEMENTATION	0.1473525301472917	WITHOUT_CLASSIFICATION	5.995390534534613E-4	DEFECT	1.7063122675660972E-4	TEST	9.421131332293587E-5	DOCUMENTATION
//TODO: use these in methods above	IMPLEMENTATION	0.9783841217210705	DESIGN	0.015688085078909463	IMPLEMENTATION	0.005800824712478643	WITHOUT_CLASSIFICATION	5.747201039637803E-5	TEST	5.253098669243908E-5	DOCUMENTATION	1.6965490452712135E-5	DEFECT
// TODO: better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.7970448440262666	DESIGN	0.17740945610744294	IMPLEMENTATION	0.023030787373648217	WITHOUT_CLASSIFICATION	0.0021369004234613885	DEFECT	3.320087233408822E-4	TEST	4.600334584015524E-5	DOCUMENTATION
// TODO: better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.7970448440262666	DESIGN	0.17740945610744294	IMPLEMENTATION	0.023030787373648217	WITHOUT_CLASSIFICATION	0.0021369004234613885	DEFECT	3.320087233408822E-4	TEST	4.600334584015524E-5	DOCUMENTATION
// TODO : temporary initial step towards HHH-1907	IMPLEMENTATION	0.9991606596245335	DESIGN	5.953900265572148E-4	IMPLEMENTATION	1.7599458270835825E-4	WITHOUT_CLASSIFICATION	3.8790138636803656E-5	DEFECT	2.5513538012640845E-5	TEST	3.6520895515946362E-6	DOCUMENTATION
// todo : remove this once ComponentMetamodel is complete and merged	IMPLEMENTATION	0.9561510944025827	DESIGN	0.04384879541105273	WITHOUT_CLASSIFICATION	7.505556719110395E-8	TEST	2.918431091454973E-8	DEFECT	4.494031502941367E-9	IMPLEMENTATION	1.4524550814228143E-9	DOCUMENTATION
//TODO handle supportsNotNullUnique=false, but such a case does not exist in the wild so far	IMPLEMENTATION	0.825402269425063	WITHOUT_CLASSIFICATION	0.09405510723082663	DEFECT	0.05936413860012205	DESIGN	0.018187637475810377	IMPLEMENTATION	0.002747161881494436	TEST	2.436853866834178E-4	DOCUMENTATION
// TODO : still need to make CollectionPersisters EntityMode-aware	IMPLEMENTATION	0.9562168357219003	DESIGN	0.0398186290130937	IMPLEMENTATION	0.001129817953459945	DEFECT	0.0011261028512535322	TEST	9.870167949632257E-4	WITHOUT_CLASSIFICATION	7.215976653294235E-4	DOCUMENTATION
//TODO: add owner argument!!	IMPLEMENTATION	0.6498403454582102	DESIGN	0.2462277932344066	IMPLEMENTATION	0.04737583634224044	WITHOUT_CLASSIFICATION	0.044948275851103385	DOCUMENTATION	0.010704351506517676	DEFECT	9.033976075216996E-4	TEST
//TODO: formulas ?	IMPLEMENTATION	0.8664416420001627	WITHOUT_CLASSIFICATION	0.11940422063467232	DESIGN	0.0133982076791215	IMPLEMENTATION	3.6088731590746073E-4	DEFECT	2.1411482955709582E-4	TEST	1.809275405789E-4	DOCUMENTATION
//TODO: include the rowids!!!!	IMPLEMENTATION	0.7353942420855656	DESIGN	0.20110371213628372	WITHOUT_CLASSIFICATION	0.059372203604304515	IMPLEMENTATION	0.0026558760052017923	DEFECT	0.0013867776694962575	DOCUMENTATION	8.718849914803842E-5	TEST
// todo : cache this sql...	IMPLEMENTATION	0.9567300069592151	WITHOUT_CLASSIFICATION	0.04162296414851863	DESIGN	0.0016226396904499673	DEFECT	9.665327400391266E-6	DOCUMENTATION	7.907417724249795E-6	IMPLEMENTATION	6.8164566916885704E-6	TEST
//TODO: create uk loaders for component properties	IMPLEMENTATION	0.9620272418942324	WITHOUT_CLASSIFICATION	0.034301582824003043	DESIGN	0.0032208515984596944	IMPLEMENTATION	2.758498970393129E-4	TEST	9.547329290548287E-5	DOCUMENTATION	7.900049336012013E-5	DEFECT
//TODO: cache this in an instvar	IMPLEMENTATION	0.9368783701677205	DESIGN	0.06293840208542362	WITHOUT_CLASSIFICATION	7.531458742000157E-5	DEFECT	5.4903781027491006E-5	DOCUMENTATION	3.46443735652799E-5	TEST	1.8365004843213546E-5	IMPLEMENTATION
/////////////////////////////////////////////////////////////////////// // TODO : look at perhaps caching this...	IMPLEMENTATION	0.9864627203046193	DESIGN	0.010298431819260637	IMPLEMENTATION	0.0030873109716559244	DEFECT	8.3680293478398E-5	TEST	6.031893300354463E-5	DOCUMENTATION	7.537677981926093E-6	WITHOUT_CLASSIFICATION
//TODO: eventually put this back in, once we think all is fixed //Object otherAlias = columnsUnique.put(qualifiedColumn, columnAlias);	IMPLEMENTATION	0.5239607182505913	IMPLEMENTATION	0.458481231584081	DESIGN	0.017305369537465858	WITHOUT_CLASSIFICATION	1.0325872754009465E-4	DOCUMENTATION	1.0006160459013452E-4	DEFECT	4.936029573163496E-5	TEST
//TODO: if we support multiple fetch groups, we would need //      to clone the set of lazy properties!	IMPLEMENTATION	0.9749409877536651	WITHOUT_CLASSIFICATION	0.023779542012674102	DESIGN	0.0011790997659579475	IMPLEMENTATION	7.107627229826584E-5	TEST	2.5685614886780492E-5	DEFECT	3.6085805177507825E-6	DOCUMENTATION
//TODO: proxies!	IMPLEMENTATION	0.6672188773431301	IMPLEMENTATION	0.26337283152636604	WITHOUT_CLASSIFICATION	0.055190484227078736	DESIGN	0.012044283646312078	DEFECT	0.0012295064539286507	DOCUMENTATION	9.440168031844383E-4	TEST
//TODO: terrible implementation!	IMPLEMENTATION	0.8879098657263954	IMPLEMENTATION	0.0923625957013921	WITHOUT_CLASSIFICATION	0.016847559394835208	DESIGN	0.0020902871976388074	DEFECT	6.787785739946593E-4	TEST	1.109134057437891E-4	DOCUMENTATION
//TODO: proxies!	IMPLEMENTATION	0.6672188773431301	IMPLEMENTATION	0.26337283152636604	WITHOUT_CLASSIFICATION	0.055190484227078736	DESIGN	0.012044283646312078	DEFECT	0.0012295064539286507	DOCUMENTATION	9.440168031844383E-4	TEST
// TODO: I don't really like this implementation; it would be better if // this was handled by searchForDirtyCollections()	IMPLEMENTATION	0.6950403394640183	DESIGN	0.2910049229890484	IMPLEMENTATION	0.013911788056297513	DEFECT	3.685322160248358E-5	TEST	5.894245310003467E-6	WITHOUT_CLASSIFICATION	2.0202372335212598E-7	DOCUMENTATION
// TODO: check if key contains the owner ID	IMPLEMENTATION	0.8751370158457773	IMPLEMENTATION	0.11633662101579613	WITHOUT_CLASSIFICATION	0.006568234138343794	DESIGN	0.0017372519486473642	DEFECT	1.8795255178866177E-4	DOCUMENTATION	3.292449964668554E-5	TEST
//TODO: proxies!	IMPLEMENTATION	0.6672188773431301	IMPLEMENTATION	0.26337283152636604	WITHOUT_CLASSIFICATION	0.055190484227078736	DESIGN	0.012044283646312078	DEFECT	0.0012295064539286507	DOCUMENTATION	9.440168031844383E-4	TEST
// table=null -> an association // - fill it in later //TODO fill in the mappings for table == null	IMPLEMENTATION	0.9938106742959217	WITHOUT_CLASSIFICATION	0.005660926401523802	DESIGN	3.308403249883193E-4	DEFECT	1.7216665525996428E-4	TEST	1.648928184494079E-5	IMPLEMENTATION	8.903040461250802E-6	DOCUMENTATION
// table=null -> an association - fill // it in later //TODO fill in the mappings for table == null	IMPLEMENTATION	0.9929623331928864	WITHOUT_CLASSIFICATION	0.006721849335070402	DESIGN	1.5845617369331742E-4	DEFECT	1.4966198413535761E-4	TEST	4.322753065170173E-6	DOCUMENTATION	3.376561149445346E-6	IMPLEMENTATION
// if we are still not resolved, we might represent a constant. //      needed to add this here because the allowance of //      naked-prop-refs in the grammar collides with the //      definition of literals/constants ("nondeterminism"). //      TODO: cleanup the grammar so that "processConstants" is always just handled from here	IMPLEMENTATION	0.9973694962778044	DESIGN	0.0025822659588736877	WITHOUT_CLASSIFICATION	4.350841292766186E-5	IMPLEMENTATION	4.193906877027838E-6	DOCUMENTATION	4.6130860309745067E-7	TEST	7.413491412351366E-8	DEFECT
//TODO: add referencedClass to disambiguate to FKs on the same //      columns, pointing to different tables	IMPLEMENTATION	0.9997981613809712	WITHOUT_CLASSIFICATION	1.4208394039566736E-4	DESIGN	5.422870388645195E-5	IMPLEMENTATION	3.0925386740840874E-6	DEFECT	2.28867438464514E-6	DOCUMENTATION	1.447616879773811E-7	TEST
//test out the optimizer:	WITHOUT_CLASSIFICATION	0.999715850386454	WITHOUT_CLASSIFICATION	2.6293429273026954E-4	TEST	1.6891718618320562E-5	IMPLEMENTATION	3.716431730295903E-6	DESIGN	4.808716725549423E-7	DOCUMENTATION	1.2629879446442761E-7	DEFECT
// aload_0	WITHOUT_CLASSIFICATION	0.9999986220995575	WITHOUT_CLASSIFICATION	1.1133474201561277E-6	DESIGN	1.4994392122801075E-7	DEFECT	8.605254302782596E-8	IMPLEMENTATION	1.8182676877226265E-8	DOCUMENTATION	1.0373881275986278E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999986220995575	WITHOUT_CLASSIFICATION	1.1133474201561277E-6	DESIGN	1.4994392122801075E-7	DEFECT	8.605254302782596E-8	IMPLEMENTATION	1.8182676877226265E-8	DOCUMENTATION	1.0373881275986278E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999986220995575	WITHOUT_CLASSIFICATION	1.1133474201561277E-6	DESIGN	1.4994392122801075E-7	DEFECT	8.605254302782596E-8	IMPLEMENTATION	1.8182676877226265E-8	DOCUMENTATION	1.0373881275986278E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999986220995575	WITHOUT_CLASSIFICATION	1.1133474201561277E-6	DESIGN	1.4994392122801075E-7	DEFECT	8.605254302782596E-8	IMPLEMENTATION	1.8182676877226265E-8	DOCUMENTATION	1.0373881275986278E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999986220995575	WITHOUT_CLASSIFICATION	1.1133474201561277E-6	DESIGN	1.4994392122801075E-7	DEFECT	8.605254302782596E-8	IMPLEMENTATION	1.8182676877226265E-8	DOCUMENTATION	1.0373881275986278E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999986220995575	WITHOUT_CLASSIFICATION	1.1133474201561277E-6	DESIGN	1.4994392122801075E-7	DEFECT	8.605254302782596E-8	IMPLEMENTATION	1.8182676877226265E-8	DOCUMENTATION	1.0373881275986278E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999986220995575	WITHOUT_CLASSIFICATION	1.1133474201561277E-6	DESIGN	1.4994392122801075E-7	DEFECT	8.605254302782596E-8	IMPLEMENTATION	1.8182676877226265E-8	DOCUMENTATION	1.0373881275986278E-8	TEST
// return	WITHOUT_CLASSIFICATION	0.9999843843737153	WITHOUT_CLASSIFICATION	1.5114790098808906E-5	DESIGN	3.982627706060649E-7	DEFECT	8.790495422800258E-8	IMPLEMENTATION	1.0735647077051652E-8	DOCUMENTATION	3.932814003805783E-9	TEST
// return	WITHOUT_CLASSIFICATION	0.9999843843737153	WITHOUT_CLASSIFICATION	1.5114790098808906E-5	DESIGN	3.982627706060649E-7	DEFECT	8.790495422800258E-8	IMPLEMENTATION	1.0735647077051652E-8	DOCUMENTATION	3.932814003805783E-9	TEST
/* | this | bean | args | raw bean | */	WITHOUT_CLASSIFICATION	0.9992888759846446	WITHOUT_CLASSIFICATION	7.012772913617804E-4	DESIGN	4.526437769267537E-6	IMPLEMENTATION	2.9915297377707397E-6	DEFECT	1.7254155655219066E-6	TEST	6.033409210427951E-7	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999937319934494	WITHOUT_CLASSIFICATION	5.91741006069375E-6	DESIGN	3.101277699858085E-7	DEFECT	2.697818604061257E-8	DOCUMENTATION	9.689511740179388E-9	TEST	3.801021984161962E-9	IMPLEMENTATION
// astore 4 // store the raw bean	WITHOUT_CLASSIFICATION	0.9999997605492494	WITHOUT_CLASSIFICATION	1.4807411172020709E-7	DESIGN	7.049642248995195E-8	IMPLEMENTATION	1.2613021102279573E-8	TEST	5.701863820783137E-9	DEFECT	2.56533144428649E-9	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999988732587889	WITHOUT_CLASSIFICATION	6.784385652852974E-7	DESIGN	3.978387002904509E-7	DEFECT	4.29928667637241E-8	DOCUMENTATION	5.500895566600904E-9	IMPLEMENTATION	1.9701832954911577E-9	TEST
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999988732587889	WITHOUT_CLASSIFICATION	6.784385652852974E-7	DESIGN	3.978387002904509E-7	DEFECT	4.29928667637241E-8	DOCUMENTATION	5.500895566600904E-9	IMPLEMENTATION	1.9701832954911577E-9	TEST
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999996709863614	WITHOUT_CLASSIFICATION	3.2320057198847404E-7	DESIGN	4.261085343945287E-9	DEFECT	8.09903027123304E-10	IMPLEMENTATION	4.75161065160397E-10	TEST	2.6691722212926854E-10	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999998682185295	WITHOUT_CLASSIFICATION	1.0243509506966018E-7	DEFECT	1.6203087510007694E-8	DESIGN	1.14625494792378E-8	IMPLEMENTATION	1.2968316517470781E-9	TEST	3.8390681460794477E-10	DOCUMENTATION
// putfield // new value of the field	WITHOUT_CLASSIFICATION	0.9999842365443011	WITHOUT_CLASSIFICATION	1.08184221275891E-5	DESIGN	3.958798064993486E-6	IMPLEMENTATION	5.394017246509681E-7	DEFECT	3.818918130317904E-7	TEST	6.494196853552302E-8	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999801424279883	WITHOUT_CLASSIFICATION	1.6423271486540333E-5	DESIGN	2.8315707220669847E-6	DEFECT	4.30184181382796E-7	IMPLEMENTATION	1.613784164316116E-7	DOCUMENTATION	1.1167205376301341E-8	TEST
// double	WITHOUT_CLASSIFICATION	0.9999904714746876	WITHOUT_CLASSIFICATION	7.622437528783716E-6	DESIGN	1.8248588596708813E-6	DEFECT	3.780505673195329E-8	IMPLEMENTATION	2.6331972903968373E-8	DOCUMENTATION	1.7091894531095456E-8	TEST
// double	WITHOUT_CLASSIFICATION	0.9999904714746876	WITHOUT_CLASSIFICATION	7.622437528783716E-6	DESIGN	1.8248588596708813E-6	DEFECT	3.780505673195329E-8	IMPLEMENTATION	2.6331972903968373E-8	DOCUMENTATION	1.7091894531095456E-8	TEST
// long	WITHOUT_CLASSIFICATION	0.9999922749133595	WITHOUT_CLASSIFICATION	6.049720985799335E-6	DEFECT	1.4376196618340942E-6	DESIGN	1.4954840902219233E-7	IMPLEMENTATION	4.8467451603282363E-8	TEST	3.973013231747422E-8	DOCUMENTATION
// just decrement the lock, don't recache // (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.9992528512743761	WITHOUT_CLASSIFICATION	6.594118118293446E-4	IMPLEMENTATION	7.777745582506047E-5	DESIGN	8.567764385951212E-6	DOCUMENTATION	1.1490696581652576E-6	DEFECT	2.4262392540749324E-7	TEST
// decode row selection...	WITHOUT_CLASSIFICATION	0.9993959188504922	WITHOUT_CLASSIFICATION	3.212685148497997E-4	DEFECT	2.7121475814969253E-4	DESIGN	1.075618384031409E-5	IMPLEMENTATION	6.635642487906742E-7	DOCUMENTATION	1.781284191728738E-7	TEST
//disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.999986931807734	WITHOUT_CLASSIFICATION	1.2543434103368878E-5	DESIGN	4.863387115067089E-7	DEFECT	3.474557438637131E-8	TEST	3.173996876127569E-9	DOCUMENTATION	4.998799562624542E-10	IMPLEMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999986255379255	WITHOUT_CLASSIFICATION	1.293764446548716E-6	DESIGN	8.046850086194104E-8	DEFECT	1.7165082551226246E-10	TEST	4.088083057024252E-11	IMPLEMENTATION	1.659549322591625E-11	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999895538275438	WITHOUT_CLASSIFICATION	1.0067463007110869E-5	DESIGN	2.578886237913082E-7	DEFECT	5.5740481848789256E-8	DOCUMENTATION	3.992605230208599E-8	TEST	2.5154291120570678E-8	IMPLEMENTATION
// ROW ID	WITHOUT_CLASSIFICATION	0.9999841353432963	WITHOUT_CLASSIFICATION	9.130173881995502E-6	DESIGN	3.877227373391922E-6	IMPLEMENTATION	2.3828603565710496E-6	DEFECT	2.6547898683943977E-7	DOCUMENTATION	2.0891610478716796E-7	TEST
// COMPOSITE-ID	WITHOUT_CLASSIFICATION	0.9999997617131096	WITHOUT_CLASSIFICATION	1.257595445899303E-7	DESIGN	4.2726881383726705E-8	DEFECT	3.691793198076907E-8	IMPLEMENTATION	2.1630295151190243E-8	DOCUMENTATION	1.1252237274292899E-8	TEST
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.999945922400007	WITHOUT_CLASSIFICATION	4.795864709630393E-5	IMPLEMENTATION	3.1596185730357047E-6	DESIGN	1.7660743650827204E-6	DEFECT	8.255932006307366E-7	DOCUMENTATION	3.676667578182426E-7	TEST
/*	WITHOUT_CLASSIFICATION	0.9335139475304616	WITHOUT_CLASSIFICATION	0.057420572938627165	DESIGN	0.005812814405640206	DEFECT	0.0029924136177781986	IMPLEMENTATION	1.5574926612179705E-4	DOCUMENTATION	1.0450224137110372E-4	TEST
// DYNAMIC INSERT	WITHOUT_CLASSIFICATION	0.9999822363078005	WITHOUT_CLASSIFICATION	1.1267848837645048E-5	IMPLEMENTATION	5.884194585099278E-6	DESIGN	2.5439478014560154E-7	DOCUMENTATION	2.461743941107665E-7	DEFECT	1.110796025622557E-7	TEST
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999941875132454	WITHOUT_CLASSIFICATION	2.6245426007220354E-6	DESIGN	2.4182721650968196E-6	IMPLEMENTATION	4.5139389173399153E-7	DEFECT	2.1328012471561538E-7	DOCUMENTATION	1.0499797235328743E-7	TEST
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999896426094551	WITHOUT_CLASSIFICATION	1.0327677509775207E-5	DESIGN	2.7111478593109054E-8	DEFECT	2.0222302860435585E-9	TEST	5.32230155474052E-10	DOCUMENTATION	4.709588727691314E-11	IMPLEMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999837907263617	WITHOUT_CLASSIFICATION	1.1748629784438314E-5	DESIGN	3.2611209306480034E-6	IMPLEMENTATION	5.561720387582557E-7	DEFECT	4.1141076984736767E-7	DOCUMENTATION	2.3194011458022425E-7	TEST
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999837907263617	WITHOUT_CLASSIFICATION	1.1748629784438314E-5	DESIGN	3.2611209306480034E-6	IMPLEMENTATION	5.561720387582557E-7	DEFECT	4.1141076984736767E-7	DOCUMENTATION	2.3194011458022425E-7	TEST
// generated properties can *never* be insertable...	WITHOUT_CLASSIFICATION	0.9999241082280762	WITHOUT_CLASSIFICATION	7.296037406137055E-5	DESIGN	2.9091559210572464E-6	DEFECT	1.4275716229255863E-8	TEST	6.589522979920606E-9	IMPLEMENTATION	1.3767021331706207E-9	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.999997793891013	WITHOUT_CLASSIFICATION	1.3591512892092733E-6	DESIGN	6.049346379564375E-7	DEFECT	1.2796969711131708E-7	IMPLEMENTATION	6.28642713449181E-8	DOCUMENTATION	5.1189091426852396E-8	TEST
//by default, natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.9999969844355803	WITHOUT_CLASSIFICATION	2.9526690617077308E-6	DESIGN	5.0724169781051287E-8	IMPLEMENTATION	1.012942263946909E-8	DEFECT	1.6295249112858239E-9	DOCUMENTATION	4.1224085379251576E-10	TEST
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999145816669187	WITHOUT_CLASSIFICATION	4.891276375364029E-5	IMPLEMENTATION	3.3095637031868324E-5	DESIGN	3.2966423598270137E-6	DEFECT	9.546463703231118E-8	TEST	1.7825298849992515E-8	DOCUMENTATION
// we found some extends attributes referencing entities which were // not already processed.  here we need to locate all entity-names // and class-names contained in this document itself, making sure // that these get removed from the extendz list such that only // extends names which require us to delay processing (i.e. // external to this document and not yet processed) are contained // in the returned result	WITHOUT_CLASSIFICATION	0.8572218614209963	DESIGN	0.14276425506665538	WITHOUT_CLASSIFICATION	1.1925043123162461E-5	DOCUMENTATION	1.9062841758138192E-6	IMPLEMENTATION	5.186313118737196E-8	TEST	3.21918236634263E-10	DEFECT
/**	WITHOUT_CLASSIFICATION	0.41247235596325493	DOCUMENTATION	0.37795729203980877	DESIGN	0.1053852951692493	IMPLEMENTATION	0.039437941980969234	WITHOUT_CLASSIFICATION	0.03307494829562861	DEFECT	0.031672166551089107	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
/**	WITHOUT_CLASSIFICATION	0.41247235596325493	DOCUMENTATION	0.37795729203980877	DESIGN	0.1053852951692493	IMPLEMENTATION	0.039437941980969234	WITHOUT_CLASSIFICATION	0.03307494829562861	DEFECT	0.031672166551089107	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// If close() is called, guarantee unbind()	WITHOUT_CLASSIFICATION	0.9999998714420221	WITHOUT_CLASSIFICATION	8.006410253512063E-8	IMPLEMENTATION	4.657968892362175E-8	DEFECT	1.1599447862747589E-9	TEST	5.29830818318738E-10	DESIGN	2.2441086158726944E-10	DOCUMENTATION
// if a ThreadLocalSessionContext-bound session happens to get // serialized, to be completely correct, we need to make sure // that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.9999830895435529	WITHOUT_CLASSIFICATION	1.6584216772740318E-5	DESIGN	2.765216977472079E-7	DEFECT	4.756863602381542E-8	TEST	1.5051848573687708E-9	DOCUMENTATION	6.441558023052183E-10	IMPLEMENTATION
// on the inverse, it makes sense that if a ThreadLocalSessionContext- // bound session then gets deserialized to go ahead and re-bind it to // the ThreadLocalSessionContext session map.	WITHOUT_CLASSIFICATION	0.99999989733075	WITHOUT_CLASSIFICATION	1.0167717232651846E-7	DESIGN	7.770729884211722E-10	DEFECT	9.176923068396284E-11	IMPLEMENTATION	9.084574811923448E-11	TEST	3.2389623146472735E-11	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9966546532891416	WITHOUT_CLASSIFICATION	0.003343570371608247	DESIGN	1.3532649346622011E-6	DEFECT	2.431038813990879E-7	DOCUMENTATION	1.0334119762328232E-7	TEST	7.662923652018534E-8	IMPLEMENTATION
// 60 second lock timeout	WITHOUT_CLASSIFICATION	0.9999792638194323	WITHOUT_CLASSIFICATION	1.3461730134163567E-5	DEFECT	6.789578622376523E-6	DESIGN	3.247719849923457E-7	DOCUMENTATION	1.3449800350898281E-7	IMPLEMENTATION	2.560182279145866E-8	TEST
// OptimisticCache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999986287954664	WITHOUT_CLASSIFICATION	6.18425297095538E-7	IMPLEMENTATION	5.881199983954482E-7	DESIGN	8.208982347984004E-8	DEFECT	6.099606135176238E-8	TEST	2.1573353320028212E-8	DOCUMENTATION
// Cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999966423949612	WITHOUT_CLASSIFICATION	2.6995533588373128E-6	DESIGN	3.3314891810666875E-7	DEFECT	2.5383742238047923E-7	IMPLEMENTATION	4.365905944239944E-8	TEST	2.740628004159291E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// do the put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9998847939002522	WITHOUT_CLASSIFICATION	1.1300095577067764E-4	DESIGN	8.600391132729235E-7	DEFECT	6.53211869159835E-7	IMPLEMENTATION	6.419719207615701E-7	DOCUMENTATION	4.9921073895446036E-8	TEST
//ignore!	WITHOUT_CLASSIFICATION	0.999984918640392	WITHOUT_CLASSIFICATION	6.807835477019737E-6	DEFECT	5.4575169779236385E-6	DESIGN	1.6390338624796687E-6	IMPLEMENTATION	9.725774441630383E-7	DOCUMENTATION	2.0439584634233673E-7	TEST
// tree cache in optimistic mode seems to have as very difficult // time with remove calls on non-existent nodes (NPEs)...	WITHOUT_CLASSIFICATION	0.9993355749813673	WITHOUT_CLASSIFICATION	6.626080948441151E-4	DEFECT	1.702303801462842E-6	DESIGN	1.0822143788623199E-7	IMPLEMENTATION	4.345379598723716E-9	TEST	2.053169599355641E-9	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.99997119192037	WITHOUT_CLASSIFICATION	1.1713576013410387E-5	IMPLEMENTATION	1.1237563596566637E-5	DESIGN	4.050011897286429E-6	DEFECT	1.6071481842550972E-6	DOCUMENTATION	1.9977993849368126E-7	TEST
//ignore!	WITHOUT_CLASSIFICATION	0.999984918640392	WITHOUT_CLASSIFICATION	6.807835477019737E-6	DEFECT	5.4575169779236385E-6	DESIGN	1.6390338624796687E-6	IMPLEMENTATION	9.725774441630383E-7	DOCUMENTATION	2.0439584634233673E-7	TEST
//60 seconds	WITHOUT_CLASSIFICATION	0.99997119192037	WITHOUT_CLASSIFICATION	1.1713576013410387E-5	IMPLEMENTATION	1.1237563596566637E-5	DESIGN	4.050011897286429E-6	DEFECT	1.6071481842550972E-6	DOCUMENTATION	1.9977993849368126E-7	TEST
//do the failfast put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999988679813883	WITHOUT_CLASSIFICATION	7.361187831071709E-7	DESIGN	1.5365492435718127E-7	DEFECT	9.992318493642732E-8	TEST	8.198736312541039E-8	DOCUMENTATION	6.033435620689533E-8	IMPLEMENTATION
// NOTE : evict() operates locally only (i.e., does not propogate // to any other nodes in the potential cluster).  This is // exactly what is needed when we destroy() here; destroy() is used // as part of the process of shutting down a SessionFactory; thus // these removals should not be propogated	WITHOUT_CLASSIFICATION	0.8426078571755643	DESIGN	0.15675383420145203	WITHOUT_CLASSIFICATION	6.25635117605405E-4	TEST	1.2632545100499852E-5	DEFECT	4.0066466406642584E-8	DOCUMENTATION	8.938114550863343E-10	IMPLEMENTATION
//    protected RegionRootListener listener;	WITHOUT_CLASSIFICATION	0.9999983323681765	WITHOUT_CLASSIFICATION	1.0384090878920889E-6	IMPLEMENTATION	3.062250949091237E-7	DESIGN	2.6459842294884E-7	DEFECT	5.223171716482572E-8	TEST	6.167500648635393E-9	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9997412325299381	WITHOUT_CLASSIFICATION	2.2480853123771021E-4	DESIGN	2.965728987268454E-5	IMPLEMENTATION	4.140677312404715E-6	DEFECT	1.265819175443237E-7	TEST	3.438972152740498E-8	DOCUMENTATION
// If we've been blocking for the mutex, perhaps another // thread has already reestablished the root. // In case the node was reestablised via replication, confirm it's  // marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.9999805866507766	WITHOUT_CLASSIFICATION	1.5638274630402673E-5	DESIGN	3.3396457183832915E-6	DEFECT	2.488970544843244E-7	TEST	1.7358070564898112E-7	DOCUMENTATION	1.2951114643458933E-8	IMPLEMENTATION
// For pessimistic locking, we just want to toss out our ref // to any old invalid root node and get the latest (may be null)            	WITHOUT_CLASSIFICATION	0.999934754656636	WITHOUT_CLASSIFICATION	5.3912019419577506E-5	DESIGN	8.19724887093537E-6	TEST	3.0491271873106068E-6	DEFECT	5.917381324766149E-8	DOCUMENTATION	2.777407286035504E-8	IMPLEMENTATION
// The rest only matters for optimistic locking, where we // need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.9745034499694477	WITHOUT_CLASSIFICATION	0.018281340138512767	DESIGN	0.006097409810236029	DEFECT	9.00922690744905E-4	TEST	1.1655111140547091E-4	IMPLEMENTATION	1.0032627965316444E-4	DOCUMENTATION
// Don't hold a transactional lock for this 	WITHOUT_CLASSIFICATION	0.9825077799439	WITHOUT_CLASSIFICATION	0.017016942943628325	DESIGN	2.658382104242721E-4	IMPLEMENTATION	1.8397791819271526E-4	DEFECT	2.283429995977024E-5	DOCUMENTATION	2.626683894964643E-6	TEST
// Make sure the root node for the region exists and  // has a DataVersion that never complains	WITHOUT_CLASSIFICATION	0.999998863073742	WITHOUT_CLASSIFICATION	1.1112192885928927E-6	IMPLEMENTATION	2.128701306897806E-8	DESIGN	3.837717358820995E-9	DEFECT	5.222096164188743E-10	TEST	6.002947343496646E-11	DOCUMENTATION
// Never evict this node	WITHOUT_CLASSIFICATION	0.9998903990719172	WITHOUT_CLASSIFICATION	8.290035177646051E-5	DESIGN	2.2577100410014637E-5	IMPLEMENTATION	2.9731840541732218E-6	TEST	7.000332877328494E-7	DEFECT	4.502585542469386E-7	DOCUMENTATION
// Fix up the resident flag	WITHOUT_CLASSIFICATION	0.999927354970302	WITHOUT_CLASSIFICATION	4.213408880197372E-5	IMPLEMENTATION	2.5671885982250983E-5	DESIGN	3.9543983352790205E-6	DEFECT	5.407205244482211E-7	TEST	3.439360540428318E-7	DOCUMENTATION
// 60 seconds	WITHOUT_CLASSIFICATION	0.9999927295969767	WITHOUT_CLASSIFICATION	3.4741101574486948E-6	IMPLEMENTATION	2.1617591678116333E-6	DEFECT	1.3693026061933112E-6	DESIGN	2.3206580008285043E-7	DOCUMENTATION	3.316529175294165E-8	TEST
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.999999939567597	WITHOUT_CLASSIFICATION	5.6941389847067327E-8	DESIGN	3.2019898191284586E-9	DEFECT	2.63826021303389E-10	IMPLEMENTATION	1.9832702845451268E-11	TEST	5.364704205234268E-12	DOCUMENTATION
// no-op. We don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.9993354160839585	WITHOUT_CLASSIFICATION	6.5918426831909E-4	DESIGN	3.650143814072992E-6	DEFECT	1.6139133846148462E-6	IMPLEMENTATION	1.0334135510059927E-7	DOCUMENTATION	3.2249168737014346E-8	TEST
// This should only be possible if the caches are constructor injected 	WITHOUT_CLASSIFICATION	0.9964474780829418	WITHOUT_CLASSIFICATION	0.0035497219114411236	DESIGN	1.7412000167051763E-6	IMPLEMENTATION	7.472927388413195E-7	DEFECT	3.0770659534453216E-7	TEST	3.806266214094663E-9	DOCUMENTATION
// We only build caches if *none* were passed in.  Passing in // caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.9995480619748003	WITHOUT_CLASSIFICATION	4.3712034117850525E-4	DESIGN	1.3501235824189447E-5	DEFECT	1.3099190024988394E-6	TEST	6.138636030224883E-9	DOCUMENTATION	3.9055848265045527E-10	IMPLEMENTATION
// Set up the cache factory	WITHOUT_CLASSIFICATION	0.9997585516206012	WITHOUT_CLASSIFICATION	2.412929381586579E-4	DESIGN	1.410532037496549E-7	DEFECT	8.750708568765933E-9	DOCUMENTATION	3.448075386571151E-9	TEST	2.1892523537882705E-9	IMPLEMENTATION
// See if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.9999406753271612	WITHOUT_CLASSIFICATION	5.3214122289393925E-5	DESIGN	3.584337004332742E-6	IMPLEMENTATION	2.404369000526872E-6	DEFECT	7.191274848745955E-8	TEST	4.993179590115407E-8	DOCUMENTATION
// Default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999965556305404	WITHOUT_CLASSIFICATION	3.431030108717286E-6	DESIGN	7.485396445863244E-9	DEFECT	3.1124002207203828E-9	IMPLEMENTATION	2.6457905467048557E-9	TEST	9.576375162232189E-11	DOCUMENTATION
// Default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999996436559414	WITHOUT_CLASSIFICATION	3.522487603204852E-7	DESIGN	3.776382430078404E-9	DEFECT	2.889380255332925E-10	TEST	2.373952142636696E-11	DOCUMENTATION	6.238322827915211E-12	IMPLEMENTATION
// For Timestamps, we default to a separate config	WITHOUT_CLASSIFICATION	0.9999973176163428	WITHOUT_CLASSIFICATION	1.385572304561064E-6	DEFECT	9.020692081638518E-7	DESIGN	2.208702972539598E-7	TEST	1.5204961687208847E-7	IMPLEMENTATION	2.182223041828937E-8	DOCUMENTATION
// We can't change the TM on a running cache; just check // if the cache has no TM and we're OK with that	WITHOUT_CLASSIFICATION	0.999999864048816	WITHOUT_CLASSIFICATION	1.3540155182027425E-7	DESIGN	2.3722782964223313E-10	DEFECT	2.137728719113114E-10	TEST	7.581055978100011E-11	IMPLEMENTATION	2.2821011161960798E-11	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9999843245207448	WITHOUT_CLASSIFICATION	1.5587096722658083E-5	DESIGN	7.149564730882779E-8	IMPLEMENTATION	1.0249595369450899E-8	DOCUMENTATION	6.183793980384303E-9	DEFECT	4.53495685671986E-10	TEST
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999984092556897	WITHOUT_CLASSIFICATION	9.01934375998666E-7	DESIGN	3.8850636362821587E-7	DEFECT	1.476888215681075E-7	IMPLEMENTATION	1.4112951194986946E-7	TEST	1.1485236909324077E-8	DOCUMENTATION
// This method should be implemented assuming it's valid to  // do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.8156251053965539	DESIGN	0.18383627015069098	WITHOUT_CLASSIFICATION	3.5698222742891326E-4	IMPLEMENTATION	1.1010691145984398E-4	TEST	7.122294898365993E-5	DEFECT	3.12364882715359E-7	DOCUMENTATION
// Make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.9999998173296701	WITHOUT_CLASSIFICATION	1.630990520061014E-7	DESIGN	1.2891626403013772E-8	DEFECT	3.824882545558321E-9	IMPLEMENTATION	2.2827677356132447E-9	DOCUMENTATION	5.720012901702867E-10	TEST
// We use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.9999999056664488	WITHOUT_CLASSIFICATION	9.4277371104062E-8	DESIGN	3.8266888994341246E-11	DOCUMENTATION	9.835841779192931E-12	IMPLEMENTATION	5.299126616554609E-12	DEFECT	2.778389891209426E-12	TEST
// Following methods we don't delegate since they have so little logic // it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.5131858934788203	WITHOUT_CLASSIFICATION	0.45113119362611825	DESIGN	0.035657005414311674	IMPLEMENTATION	2.494384001154997E-5	TEST	8.105291341705259E-7	DOCUMENTATION	1.5311160415081757E-7	DEFECT
// If JBC is using INVALIDATION, we don't want to propagate changes. // We use the Timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.9999999351255807	WITHOUT_CLASSIFICATION	3.046658963537234E-8	DEFECT	2.863354464175062E-8	DESIGN	4.8153545648937055E-9	TEST	7.637473301644689E-10	DOCUMENTATION	1.9518319063803228E-10	IMPLEMENTATION
// We don't want to waste effort setting an option if JBC is // already in LOCAL mode. If JBC is REPL_(A)SYNC then check // if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.9999993754880865	WITHOUT_CLASSIFICATION	4.155668299962842E-7	IMPLEMENTATION	1.6427067736148901E-7	DESIGN	3.8973543669716194E-8	TEST	3.335750973420926E-9	DOCUMENTATION	2.3651114515330473E-9	DEFECT
// Don't hold the JBC node lock throughout the tx, as that // prevents updates // Add a zero (or low) timeout option so we don't block // waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.9999999146162571	WITHOUT_CLASSIFICATION	5.9579398465631185E-8	DEFECT	2.265292436722343E-8	IMPLEMENTATION	1.7963468686856905E-9	DOCUMENTATION	1.2022189935906666E-9	TEST	1.5285423615617354E-10	DESIGN
// Double check the distributed cache	WITHOUT_CLASSIFICATION	0.9999999393730662	WITHOUT_CLASSIFICATION	3.457221965068623E-8	IMPLEMENTATION	2.502247646169863E-8	DESIGN	5.115517978465967E-10	DOCUMENTATION	3.2869207600310654E-10	DEFECT	1.9199395111485308E-10	TEST
// Get an exclusive right to update JBC for this key from this node.	WITHOUT_CLASSIFICATION	0.999988776529165	WITHOUT_CLASSIFICATION	1.0720806148152445E-5	DESIGN	4.9935396782737E-7	DEFECT	2.2456379424207875E-9	DOCUMENTATION	8.153279348730901E-10	TEST	2.4975328171165183E-10	IMPLEMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9999153514653665	WITHOUT_CLASSIFICATION	7.834050626531394E-5	DESIGN	6.071715136265041E-6	DEFECT	1.5685324286937488E-7	IMPLEMENTATION	7.382531905555898E-8	DOCUMENTATION	5.634670119640866E-9	TEST
// Initial load from JBC	WITHOUT_CLASSIFICATION	0.9999998268495949	WITHOUT_CLASSIFICATION	1.554617564715339E-7	DEFECT	1.1043974388160706E-8	DESIGN	3.819811393056427E-9	IMPLEMENTATION	1.4250109586582115E-9	TEST	1.3998519074572814E-9	DOCUMENTATION
// See if we had a 2nd invalidation from the same initial // preinvalidation timestamp. If so, only increment // if the new current value is an increase	WITHOUT_CLASSIFICATION	0.9999999988320019	WITHOUT_CLASSIFICATION	9.7666349375787E-10	DEFECT	8.381205055310361E-11	DESIGN	5.7536169871052884E-11	TEST	4.986389604067333E-11	DOCUMENTATION	1.2242137254672075E-13	IMPLEMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9999153514653665	WITHOUT_CLASSIFICATION	7.834050626531394E-5	DESIGN	6.071715136265041E-6	DEFECT	1.5685324286937488E-7	IMPLEMENTATION	7.382531905555898E-8	DOCUMENTATION	5.634670119640866E-9	TEST
// If the workspace node has null as well, OK; if not we've // been modified in a non-comparable manner, which we have to // treat as us being newer	WITHOUT_CLASSIFICATION	0.9999999455318369	WITHOUT_CLASSIFICATION	5.139597429719628E-8	DEFECT	1.5616889080746802E-9	IMPLEMENTATION	1.430523811974958E-9	DESIGN	6.650636096725866E-11	TEST	1.3469740084011153E-11	DOCUMENTATION
// The standard comparator types are not Serializable but are singletons	WITHOUT_CLASSIFICATION	0.999989322537894	WITHOUT_CLASSIFICATION	6.209014159434259E-6	DEFECT	4.41850117061715E-6	DESIGN	4.274146186985493E-8	IMPLEMENTATION	6.614435684840837E-9	TEST	5.908784103766907E-10	DOCUMENTATION
// ignore!	WITHOUT_CLASSIFICATION	0.9999989886119741	WITHOUT_CLASSIFICATION	5.547701172327946E-7	DEFECT	2.618918974037799E-7	DESIGN	1.5901551882791483E-7	IMPLEMENTATION	2.72226846664527E-8	DOCUMENTATION	8.487807725210273E-9	TEST
// ignore it	WITHOUT_CLASSIFICATION	0.9999991295540291	WITHOUT_CLASSIFICATION	6.538499017512914E-7	DESIGN	1.3421495542497436E-7	DEFECT	6.056725536355615E-8	IMPLEMENTATION	1.5174283397179594E-8	DOCUMENTATION	6.639574887962815E-9	TEST
// construct the cache	WITHOUT_CLASSIFICATION	0.9999901196076769	WITHOUT_CLASSIFICATION	9.046030950275411E-6	DESIGN	6.824068221484886E-7	IMPLEMENTATION	8.36607607067797E-8	DEFECT	3.599483402360672E-8	TEST	3.2298955838055635E-8	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999990117969826	WITHOUT_CLASSIFICATION	4.441533715640004E-7	DESIGN	3.916518960305611E-7	DEFECT	1.520136863800855E-7	DOCUMENTATION	2.540255103957973E-10	IMPLEMENTATION	1.3003790110895728E-10	TEST
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999990117969826	WITHOUT_CLASSIFICATION	4.441533715640004E-7	DESIGN	3.916518960305611E-7	DEFECT	1.520136863800855E-7	DOCUMENTATION	2.540255103957973E-10	IMPLEMENTATION	1.3003790110895728E-10	TEST
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999692208165115	WITHOUT_CLASSIFICATION	1.440160447099447E-5	DESIGN	1.0996374123748086E-5	IMPLEMENTATION	4.522937435841272E-6	DEFECT	7.046241221261392E-7	DOCUMENTATION	1.5364333558376996E-7	TEST
//swaldman 2006-08-28: define c3p0-style configuration parameters for initialPoolSize, which //                     hibernate sensibly lets default to minPoolSize, but we'll let users //                     override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.9999040679281298	WITHOUT_CLASSIFICATION	9.573846680874017E-5	DESIGN	9.85056445888002E-8	TEST	5.0280830591281564E-8	DEFECT	2.5384070217746684E-8	DOCUMENTATION	1.943451609606031E-8	IMPLEMENTATION
/*DataSource unpooled = DataSources.unpooledDataSource(	WITHOUT_CLASSIFICATION	0.999937494649526	WITHOUT_CLASSIFICATION	4.3411092556767455E-5	IMPLEMENTATION	1.1458261226487332E-5	DESIGN	6.590836654379233E-6	DEFECT	8.654246134713335E-7	DOCUMENTATION	1.7973542291132247E-7	TEST
// TRUE if the pool is borrowed from the outside, FALSE if we used to create it	WITHOUT_CLASSIFICATION	0.9999997520801831	WITHOUT_CLASSIFICATION	2.4762228529608695E-7	DESIGN	1.4841444758448902E-10	DEFECT	1.2061696007874436E-10	TEST	2.2306574259639045E-11	IMPLEMENTATION	6.193528755270926E-12	DOCUMENTATION
// get a connection from the pool (thru DriverManager, cfr. Proxool doc)	WITHOUT_CLASSIFICATION	0.9999974378664208	WITHOUT_CLASSIFICATION	2.5466566736036206E-6	DESIGN	7.318822248082721E-9	DEFECT	3.7638522410741E-9	IMPLEMENTATION	3.7376449871747675E-9	DOCUMENTATION	6.565860262191616E-10	TEST
// set the Transaction Isolation if defined	WITHOUT_CLASSIFICATION	0.9999993035606245	WITHOUT_CLASSIFICATION	6.485028896250487E-7	DESIGN	4.569112722127428E-8	IMPLEMENTATION	1.1293968743217759E-9	DOCUMENTATION	9.809476497871893E-10	TEST	1.3501407486110103E-10	DEFECT
// toggle autoCommit to false if set	WITHOUT_CLASSIFICATION	0.9999997888332726	WITHOUT_CLASSIFICATION	8.198284882489692E-8	DEFECT	6.45429468673018E-8	IMPLEMENTATION	4.8706138452394544E-8	DESIGN	1.2615549531337722E-8	TEST	3.3192437293359465E-9	DOCUMENTATION
// return the connection	WITHOUT_CLASSIFICATION	0.9998999619078809	WITHOUT_CLASSIFICATION	9.624866113839164E-5	DESIGN	3.336526891619515E-6	DEFECT	3.354406209219816E-7	IMPLEMENTATION	1.1344410352447374E-7	DOCUMENTATION	4.019364659785017E-9	TEST
// Get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.999984260170017	WITHOUT_CLASSIFICATION	1.3045934331862411E-5	DESIGN	2.405573532868164E-6	IMPLEMENTATION	2.2328710781926517E-7	TEST	3.798536615580934E-8	DOCUMENTATION	2.7049644203413182E-8	DEFECT
// Default the Proxool alias setting	WITHOUT_CLASSIFICATION	0.9999999978143691	WITHOUT_CLASSIFICATION	8.607248048054878E-10	IMPLEMENTATION	8.424507525167383E-10	DESIGN	2.6179342708221E-10	DEFECT	1.2610918947638948E-10	DOCUMENTATION	9.455273476103207E-11	TEST
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999988696040276	WITHOUT_CLASSIFICATION	1.1295912693515415E-6	DESIGN	3.003723186603877E-10	IMPLEMENTATION	2.297041879674981E-10	DOCUMENTATION	2.254698828033443E-10	DEFECT	4.91566310999662E-11	TEST
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999988696040276	WITHOUT_CLASSIFICATION	1.1295912693515415E-6	DESIGN	3.003723186603877E-10	IMPLEMENTATION	2.297041879674981E-10	DOCUMENTATION	2.254698828033443E-10	DEFECT	4.91566310999662E-11	TEST
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999900159719931	WITHOUT_CLASSIFICATION	8.82091296753378E-6	IMPLEMENTATION	8.427474618191062E-7	DEFECT	2.3822385784093358E-7	DESIGN	7.555685286507272E-8	DOCUMENTATION	6.586866919481602E-9	TEST
// Set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.9999999744602943	WITHOUT_CLASSIFICATION	1.3308810433809083E-8	IMPLEMENTATION	6.497699323812534E-9	DESIGN	4.292767625673215E-9	DEFECT	9.006541140670672E-10	DOCUMENTATION	5.397742356616694E-10	TEST
// Configured using the JAXP Configurator	WITHOUT_CLASSIFICATION	0.9989548694335337	WITHOUT_CLASSIFICATION	0.0010434804361090923	DESIGN	6.737303468945006E-7	DEFECT	4.008606839482127E-7	IMPLEMENTATION	3.784950694968787E-7	TEST	1.9704425678032855E-7	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999988696040276	WITHOUT_CLASSIFICATION	1.1295912693515415E-6	DESIGN	3.003723186603877E-10	IMPLEMENTATION	2.297041879674981E-10	DOCUMENTATION	2.254698828033443E-10	DEFECT	4.91566310999662E-11	TEST
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999900159719931	WITHOUT_CLASSIFICATION	8.82091296753378E-6	IMPLEMENTATION	8.427474618191062E-7	DEFECT	2.3822385784093358E-7	DESIGN	7.555685286507272E-8	DOCUMENTATION	6.586866919481602E-9	TEST
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999900159719931	WITHOUT_CLASSIFICATION	8.82091296753378E-6	IMPLEMENTATION	8.427474618191062E-7	DEFECT	2.3822385784093358E-7	DESIGN	7.555685286507272E-8	DOCUMENTATION	6.586866919481602E-9	TEST
// Configured using the Properties File Configurator	WITHOUT_CLASSIFICATION	0.9990766932644878	WITHOUT_CLASSIFICATION	9.226719484991938E-4	DESIGN	5.784070072620658E-7	TEST	2.6320506029538093E-8	IMPLEMENTATION	2.0940326052691143E-8	DEFECT	9.119173767380493E-9	DOCUMENTATION
// Remember Isolation level	WITHOUT_CLASSIFICATION	0.9998114649474216	WITHOUT_CLASSIFICATION	1.8029145200396896E-4	DESIGN	5.958080926421295E-6	DEFECT	1.9022499877807358E-6	IMPLEMENTATION	1.951720083348394E-7	TEST	1.8809765178791545E-7	DOCUMENTATION
// If the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.9999999941157947	WITHOUT_CLASSIFICATION	5.711270978581713E-9	DEFECT	7.54880675120904E-11	DESIGN	6.264182578588333E-11	TEST	2.4820955080876218E-11	DOCUMENTATION	9.983669882627392E-12	IMPLEMENTATION
// We have created the pool ourselves, so shut it down	WITHOUT_CLASSIFICATION	0.9999982536890061	WITHOUT_CLASSIFICATION	1.7086112302045344E-6	DESIGN	2.0345245225002053E-8	TEST	1.49658419160643E-8	IMPLEMENTATION	1.274718114548432E-9	DOCUMENTATION	1.1139586473667327E-9	DEFECT
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9991447164311342	WITHOUT_CLASSIFICATION	6.356554401044899E-4	DESIGN	1.5655719839387217E-4	IMPLEMENTATION	5.9201042837441633E-5	DEFECT	3.6306310667626433E-6	DOCUMENTATION	2.3925646308678956E-7	TEST
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9991447164311342	WITHOUT_CLASSIFICATION	6.356554401044899E-4	DESIGN	1.5655719839387217E-4	IMPLEMENTATION	5.9201042837441633E-5	DEFECT	3.6306310667626433E-6	DOCUMENTATION	2.3925646308678956E-7	TEST
//always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.9999986370327913	WITHOUT_CLASSIFICATION	1.1417698083963445E-6	IMPLEMENTATION	1.9077659904048094E-7	DESIGN	2.3930368338435754E-8	DEFECT	5.231514591291716E-9	DOCUMENTATION	1.258918360052864E-9	TEST
//public Currency getCurrency(int col) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9998394927248218	WITHOUT_CLASSIFICATION	1.6036826821850246E-4	DESIGN	5.768585887130438E-8	DEFECT	4.075196588861332E-8	DOCUMENTATION	3.394130812164241E-8	TEST	6.627826856377323E-9	IMPLEMENTATION
// default is POJO	WITHOUT_CLASSIFICATION	0.9999978578210135	WITHOUT_CLASSIFICATION	8.609336140745906E-7	DEFECT	7.442245033325627E-7	DESIGN	4.854422384172644E-7	IMPLEMENTATION	3.421375542354549E-8	TEST	1.7364875374059795E-8	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999890497028988	WITHOUT_CLASSIFICATION	1.0665712355321893E-5	DESIGN	2.0078924663034673E-7	DEFECT	5.662978332097738E-8	IMPLEMENTATION	1.915370113234841E-8	TEST	8.01201487056911E-9	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999890497028988	WITHOUT_CLASSIFICATION	1.0665712355321893E-5	DESIGN	2.0078924663034673E-7	DEFECT	5.662978332097738E-8	IMPLEMENTATION	1.915370113234841E-8	TEST	8.01201487056911E-9	DOCUMENTATION
//private CacheEntry cacheEntry;	WITHOUT_CLASSIFICATION	0.999990741683877	WITHOUT_CLASSIFICATION	9.015834064151544E-6	DESIGN	1.3646371358913763E-7	DEFECT	8.52494674554331E-8	DOCUMENTATION	1.2344290952971495E-8	TEST	8.42458696211148E-9	IMPLEMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9994761126875921	WITHOUT_CLASSIFICATION	4.0768985932933407E-4	DEFECT	5.158903777284155E-5	TEST	3.5672160154810224E-5	DESIGN	2.701403335563827E-5	IMPLEMENTATION	1.92222179516912E-6	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.8151542294095915	WITHOUT_CLASSIFICATION	0.18465372118767567	DESIGN	1.6000439201640772E-4	DEFECT	2.466032421128048E-5	IMPLEMENTATION	5.6263167122658086E-6	TEST	1.7583697929435503E-6	DOCUMENTATION
// get the updated snapshot of the entity state by cloning current state; // it is safe to copy in place, since by this time no-one else (should have) // has a reference  to the array	WITHOUT_CLASSIFICATION	0.9999999926062287	WITHOUT_CLASSIFICATION	6.479532211893783E-9	DESIGN	6.211896350466161E-10	DEFECT	2.6442226203902744E-10	IMPLEMENTATION	1.523007900039104E-11	DOCUMENTATION	1.33970448690914E-11	TEST
// this entity defines proeprty generation, so process those generated // values...	WITHOUT_CLASSIFICATION	0.9999978025426903	WITHOUT_CLASSIFICATION	2.18191540548894E-6	DESIGN	1.2073436731566336E-8	DEFECT	2.277690234547736E-9	TEST	1.1905370216302732E-9	DOCUMENTATION	2.4020338496691E-13	IMPLEMENTATION
// have the entity entry perform post-update processing, passing it the // update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.9999999797428908	WITHOUT_CLASSIFICATION	1.9662910984174113E-8	DESIGN	2.95129698652472E-10	DOCUMENTATION	1.722160401503901E-10	DEFECT	9.27212090611196E-11	TEST	3.413135867900925E-11	IMPLEMENTATION
/*!persister.isCacheInvalidationRequired()*/	WITHOUT_CLASSIFICATION	0.9999955341870499	WITHOUT_CLASSIFICATION	1.8699400078355898E-6	DEFECT	1.7822178745331658E-6	DESIGN	7.380520097201749E-7	IMPLEMENTATION	5.0041180569326163E-8	DOCUMENTATION	2.556187753926473E-8	TEST
// need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.9995471589957746	WITHOUT_CLASSIFICATION	4.007087123965166E-4	DESIGN	5.076015741008518E-5	IMPLEMENTATION	4.831181575062502E-7	TEST	4.563956380744828E-7	DOCUMENTATION	4.326206233185999E-7	DEFECT
//sort first by role name	WITHOUT_CLASSIFICATION	0.9998123818463726	WITHOUT_CLASSIFICATION	1.8515868576629075E-4	DESIGN	1.404103112555315E-6	TEST	4.738542874982084E-7	DEFECT	4.6834543194006356E-7	IMPLEMENTATION	1.1316502920209074E-7	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.8151542294095915	WITHOUT_CLASSIFICATION	0.18465372118767567	DESIGN	1.6000439201640772E-4	DEFECT	2.466032421128048E-5	IMPLEMENTATION	5.6263167122658086E-6	TEST	1.7583697929435503E-6	DOCUMENTATION
//then by fk	WITHOUT_CLASSIFICATION	0.9996809839882282	WITHOUT_CLASSIFICATION	2.1437735124336908E-4	DESIGN	5.2547974313699283E-5	IMPLEMENTATION	3.750873473670063E-5	DEFECT	8.899348297928797E-6	DOCUMENTATION	5.682603179781902E-6	TEST
// nothing to do	WITHOUT_CLASSIFICATION	0.99994604471815	WITHOUT_CLASSIFICATION	3.01350602388322E-5	IMPLEMENTATION	2.067275479890411E-5	DESIGN	2.042503906686816E-6	DEFECT	7.635990407240981E-7	DOCUMENTATION	3.4136386488564613E-7	TEST
// nothing to do	WITHOUT_CLASSIFICATION	0.99994604471815	WITHOUT_CLASSIFICATION	3.01350602388322E-5	IMPLEMENTATION	2.067275479890411E-5	DESIGN	2.042503906686816E-6	DEFECT	7.635990407240981E-7	DOCUMENTATION	3.4136386488564613E-7	TEST
// an existing collection that was either non-empty or uninitialized // is replaced by null or a different collection // (if the collection is uninitialized, hibernate has no way of // knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.9977490725118503	WITHOUT_CLASSIFICATION	0.0022505468334284955	DESIGN	2.7912437130483853E-7	IMPLEMENTATION	5.395418250696674E-8	DEFECT	4.700872147106134E-8	TEST	5.67445887030975E-10	DOCUMENTATION
// this method is called when a new non-null collection is persisted // or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.9996160455681273	WITHOUT_CLASSIFICATION	3.8085879093097667E-4	DESIGN	2.95554219546504E-6	IMPLEMENTATION	1.1046039101609503E-7	TEST	2.734961965534851E-8	DEFECT	2.2887355412408533E-9	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.6641867113134902	WITHOUT_CLASSIFICATION	0.33575127728874354	DESIGN	3.4203965952921916E-5	DEFECT	2.518232754565944E-5	IMPLEMENTATION	2.542435650248411E-6	TEST	8.266861733564965E-8	DOCUMENTATION
//do nothing - we only need to notify the cache...	WITHOUT_CLASSIFICATION	0.9999896453566138	WITHOUT_CLASSIFICATION	7.595591464800405E-6	DESIGN	1.4785145201594508E-6	DOCUMENTATION	1.0098747542157388E-6	DEFECT	1.9228068333925066E-7	TEST	7.838196366736278E-8	IMPLEMENTATION
//sort first by entity name	WITHOUT_CLASSIFICATION	0.9996389159315645	WITHOUT_CLASSIFICATION	3.59861098333013E-4	DESIGN	7.18872069339691E-7	TEST	2.456507887512076E-7	IMPLEMENTATION	1.728331079825509E-7	DOCUMENTATION	8.561413641520969E-8	DEFECT
//then by id	WITHOUT_CLASSIFICATION	0.9963121950138523	WITHOUT_CLASSIFICATION	0.002942482772767205	DESIGN	6.087143118577409E-4	IMPLEMENTATION	9.409328933442169E-5	DEFECT	2.816683779679976E-5	DOCUMENTATION	1.43477743916114E-5	TEST
// to be safe...	WITHOUT_CLASSIFICATION	0.9988912355318479	WITHOUT_CLASSIFICATION	9.976421258678092E-4	DEFECT	9.239532706427157E-5	DESIGN	1.6792405852786102E-5	IMPLEMENTATION	1.6372482052917042E-6	DOCUMENTATION	2.973611618702044E-7	TEST
// no transformations took place, so handle it as we would a // non-instrumented class	WITHOUT_CLASSIFICATION	0.9999775996362839	WITHOUT_CLASSIFICATION	2.175302389285787E-5	DESIGN	6.142738285720493E-7	IMPLEMENTATION	2.373943012831444E-8	DOCUMENTATION	5.589283757675625E-9	TEST	3.737280825048955E-9	DEFECT
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999999966277291	WITHOUT_CLASSIFICATION	2.9044409398250062E-9	DESIGN	4.3127085548897524E-10	DEFECT	2.7460657153380168E-11	TEST	5.854761197060594E-12	DOCUMENTATION	3.2437587678021053E-12	IMPLEMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999999966277291	WITHOUT_CLASSIFICATION	2.9044409398250062E-9	DESIGN	4.3127085548897524E-10	DEFECT	2.7460657153380168E-11	TEST	5.854761197060594E-12	DOCUMENTATION	3.2437587678021053E-12	IMPLEMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999417088902455	WITHOUT_CLASSIFICATION	5.778395841214376E-5	DESIGN	3.4591053480068435E-7	DEFECT	1.1973606698796762E-7	DOCUMENTATION	3.324644466112102E-8	IMPLEMENTATION	8.258295941168778E-9	TEST
//test out the optimizer:	WITHOUT_CLASSIFICATION	0.999715850386454	WITHOUT_CLASSIFICATION	2.6293429273026954E-4	TEST	1.6891718618320562E-5	IMPLEMENTATION	3.716431730295903E-6	DESIGN	4.808716725549423E-7	DOCUMENTATION	1.2629879446442761E-7	DEFECT
// set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.9999993055198729	WITHOUT_CLASSIFICATION	6.522426763315426E-7	DESIGN	2.4109046494762852E-8	DEFECT	1.1254278169628021E-8	TEST	3.978212327612385E-9	DOCUMENTATION	2.8959137267118483E-9	IMPLEMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999986220995575	WITHOUT_CLASSIFICATION	1.1133474201561277E-6	DESIGN	1.4994392122801075E-7	DEFECT	8.605254302782596E-8	IMPLEMENTATION	1.8182676877226265E-8	DOCUMENTATION	1.0373881275986278E-8	TEST
// invokespecial	WITHOUT_CLASSIFICATION	0.9999996919440441	WITHOUT_CLASSIFICATION	1.3625673506855333E-7	DEFECT	5.91947119896637E-8	DESIGN	5.650268161543833E-8	IMPLEMENTATION	4.984719475934367E-8	DOCUMENTATION	6.254632394431603E-9	TEST
// return	WITHOUT_CLASSIFICATION	0.9999843843737153	WITHOUT_CLASSIFICATION	1.5114790098808906E-5	DESIGN	3.982627706060649E-7	DEFECT	8.790495422800258E-8	IMPLEMENTATION	1.0735647077051652E-8	DOCUMENTATION	3.932814003805783E-9	TEST
// aload_1 // load bean	WITHOUT_CLASSIFICATION	0.9999971732987128	WITHOUT_CLASSIFICATION	2.0141703353380858E-6	DESIGN	6.419633100571708E-7	DEFECT	1.1717631754294414E-7	IMPLEMENTATION	2.8843287624552403E-8	DOCUMENTATION	2.4548036646780254E-8	TEST
// checkcast // cast bean	WITHOUT_CLASSIFICATION	0.9999962613320051	WITHOUT_CLASSIFICATION	3.2057170781243893E-6	DESIGN	3.1675594662254613E-7	IMPLEMENTATION	1.1185852902626217E-7	DEFECT	6.004814986432353E-8	TEST	4.4288291285444514E-8	DOCUMENTATION
// astore_3 // store bean	WITHOUT_CLASSIFICATION	0.9999965842720734	WITHOUT_CLASSIFICATION	3.2672608004547844E-6	DESIGN	6.693785165800749E-8	TEST	3.8890485748970135E-8	DEFECT	2.6576515825056E-8	IMPLEMENTATION	1.6062272996544218E-8	DOCUMENTATION
// aload_2 // args	WITHOUT_CLASSIFICATION	0.9999949626378108	WITHOUT_CLASSIFICATION	3.310439868702191E-6	IMPLEMENTATION	1.3380690556764166E-6	DESIGN	3.3290974283641655E-7	DEFECT	3.410593662318841E-8	TEST	2.1837585285136704E-8	DOCUMENTATION
// iconst_i // continue to aastore // growing stack is 1	WITHOUT_CLASSIFICATION	0.9999802876678022	WITHOUT_CLASSIFICATION	1.5572238594853418E-5	DEFECT	3.6751927327779624E-6	DESIGN	3.790852345342031E-7	IMPLEMENTATION	7.349926018699826E-8	TEST	1.2316375544847266E-8	DOCUMENTATION
// new	WITHOUT_CLASSIFICATION	0.9999259947024548	WITHOUT_CLASSIFICATION	6.570562730755887E-5	DESIGN	5.695754230290925E-6	IMPLEMENTATION	1.7539967333845898E-6	DEFECT	5.264721324632525E-7	DOCUMENTATION	3.234471414851026E-7	TEST
// dup	WITHOUT_CLASSIFICATION	0.9999780471107951	WITHOUT_CLASSIFICATION	1.7012889955914477E-5	DESIGN	4.4382179867214535E-6	DEFECT	2.9377640584933043E-7	IMPLEMENTATION	1.419380383409512E-7	DOCUMENTATION	6.606681798708651E-8	TEST
// aload_3 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999987709407604	WITHOUT_CLASSIFICATION	5.717412976860891E-7	IMPLEMENTATION	4.321157834942575E-7	DESIGN	1.8051295522943282E-7	DEFECT	2.4868891763723668E-8	TEST	1.982031145383514E-8	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999937319934494	WITHOUT_CLASSIFICATION	5.91741006069375E-6	DESIGN	3.101277699858085E-7	DEFECT	2.697818604061257E-8	DOCUMENTATION	9.689511740179388E-9	TEST	3.801021984161962E-9	IMPLEMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999994596778129	WITHOUT_CLASSIFICATION	2.9608983837876205E-7	DEFECT	1.6099546941463756E-7	DESIGN	6.506212770419347E-8	IMPLEMENTATION	1.2392096429768892E-8	DOCUMENTATION	5.7826553092772554E-9	TEST
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999994596778129	WITHOUT_CLASSIFICATION	2.9608983837876205E-7	DEFECT	1.6099546941463756E-7	DESIGN	6.506212770419347E-8	IMPLEMENTATION	1.2392096429768892E-8	DOCUMENTATION	5.7826553092772554E-9	TEST
// aastore // args	WITHOUT_CLASSIFICATION	0.999997269297495	WITHOUT_CLASSIFICATION	1.8831085894667888E-6	DESIGN	6.585926910011397E-7	IMPLEMENTATION	9.382244929051842E-8	TEST	7.843239487857545E-8	DEFECT	1.6746380525769608E-8	DOCUMENTATION
/* | this | bean | args | i | raw bean | exception | */	WITHOUT_CLASSIFICATION	0.99686552851531	WITHOUT_CLASSIFICATION	0.003086990048338041	DESIGN	2.500045644323262E-5	DEFECT	2.0109562198005265E-5	IMPLEMENTATION	1.6172899396609256E-6	TEST	7.54127771172363E-7	DOCUMENTATION
// required to exception table // iconst_0 // i	WITHOUT_CLASSIFICATION	0.9999955920448864	WITHOUT_CLASSIFICATION	4.267278501992302E-6	DESIGN	1.2608552468416455E-7	DEFECT	1.3221365544116878E-8	IMPLEMENTATION	9.587427574143908E-10	TEST	4.109785996583382E-10	DOCUMENTATION
// istore_3 // store i	WITHOUT_CLASSIFICATION	0.999997410954295	WITHOUT_CLASSIFICATION	2.188855620260217E-6	DESIGN	2.4721826486251434E-7	DEFECT	1.212612410222954E-7	TEST	1.626153188372608E-8	DOCUMENTATION	1.5449047062874223E-8	IMPLEMENTATION
// aload_1 // load the bean	WITHOUT_CLASSIFICATION	0.999997366709599	WITHOUT_CLASSIFICATION	2.230522103627508E-6	DESIGN	1.7475545257219831E-7	DEFECT	1.6395060562797713E-7	IMPLEMENTATION	4.4229188748451175E-8	DOCUMENTATION	1.983305040476786E-8	TEST
// checkcast // cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.999952488053811	WITHOUT_CLASSIFICATION	4.698864928597499E-5	DESIGN	4.491610923552021E-7	IMPLEMENTATION	3.285236759461434E-8	DEFECT	2.2723890349516407E-8	TEST	1.8559552664685565E-8	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999988732587889	WITHOUT_CLASSIFICATION	6.784385652852974E-7	DESIGN	3.978387002904509E-7	DEFECT	4.29928667637241E-8	DOCUMENTATION	5.500895566600904E-9	IMPLEMENTATION	1.9701832954911577E-9	TEST
// start region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9981265872502296	WITHOUT_CLASSIFICATION	0.0018709290662069673	DESIGN	1.2245659298809368E-6	IMPLEMENTATION	1.1051776507756783E-6	DEFECT	8.593122976400632E-8	TEST	6.800875288190008E-8	DOCUMENTATION
// iinc 3, 1	WITHOUT_CLASSIFICATION	0.9999914106704708	WITHOUT_CLASSIFICATION	2.9573917990621267E-6	DESIGN	2.5981597045344828E-6	IMPLEMENTATION	2.5955967917313482E-6	DEFECT	3.3126887952777166E-7	DOCUMENTATION	1.0691235448168721E-7	TEST
// aload 4 // load the raw bean	WITHOUT_CLASSIFICATION	0.999998332554962	WITHOUT_CLASSIFICATION	1.0160797122995765E-6	DESIGN	4.317332675930606E-7	IMPLEMENTATION	1.8441698784135172E-7	DEFECT	2.0183433895130686E-8	DOCUMENTATION	1.503163636073626E-8	TEST
// aload_2 // load the args	WITHOUT_CLASSIFICATION	0.9999995191628945	WITHOUT_CLASSIFICATION	2.838051188711401E-7	DESIGN	1.0498704012367053E-7	IMPLEMENTATION	5.8253925351272E-8	DEFECT	1.7236496361324997E-8	DOCUMENTATION	1.6554524719004525E-8	TEST
// iconst_i	WITHOUT_CLASSIFICATION	0.9999732372292102	WITHOUT_CLASSIFICATION	2.2830673794752587E-5	DESIGN	2.4385083771818324E-6	DEFECT	1.1412398564995084E-6	IMPLEMENTATION	2.318349710409946E-7	DOCUMENTATION	1.2051379023680677E-7	TEST
// aaload	WITHOUT_CLASSIFICATION	0.9999896700318943	WITHOUT_CLASSIFICATION	8.611365581292355E-6	DESIGN	9.577741212346557E-7	IMPLEMENTATION	6.399217262299151E-7	DEFECT	6.93035844034281E-8	DOCUMENTATION	5.160309237334662E-8	TEST
// checkcast	WITHOUT_CLASSIFICATION	0.9999962219321411	WITHOUT_CLASSIFICATION	2.2578455476398868E-6	IMPLEMENTATION	1.3046372031704928E-6	DESIGN	8.754412083892134E-8	DEFECT	7.275316678307222E-8	DOCUMENTATION	5.5287820502749895E-8	TEST
// checkcast (case of primitive type) // invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.9999999506269251	WITHOUT_CLASSIFICATION	2.5323890648806155E-8	DEFECT	1.4167166533017411E-8	DESIGN	6.154463911462072E-9	IMPLEMENTATION	2.126483218156564E-9	DOCUMENTATION	1.6010704688145093E-9	TEST
// checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.9999982939510829	WITHOUT_CLASSIFICATION	9.298037653590653E-7	DESIGN	5.944659624226412E-7	IMPLEMENTATION	9.878390651597215E-8	DOCUMENTATION	7.573408302326077E-8	DEFECT	7.261199791689668E-9	TEST
/* current stack len = 2 */	WITHOUT_CLASSIFICATION	0.9999966081132012	WITHOUT_CLASSIFICATION	1.6643708366968288E-6	DEFECT	1.5259017705491606E-6	DESIGN	1.1150310017480793E-7	DOCUMENTATION	8.482893773298972E-8	IMPLEMENTATION	5.282153541997555E-9	TEST
// end region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9348409168831129	WITHOUT_CLASSIFICATION	0.06513129058963195	DESIGN	1.5588284732072078E-5	DEFECT	1.1071090079529374E-5	IMPLEMENTATION	8.642621794570683E-7	DOCUMENTATION	2.6889026429858295E-7	TEST
// register in exception table	WITHOUT_CLASSIFICATION	0.9999062154269415	WITHOUT_CLASSIFICATION	9.362928239961562E-5	DESIGN	7.727905446996815E-8	DEFECT	6.695292388889004E-8	IMPLEMENTATION	7.982277087932299E-9	TEST	3.076403470891184E-9	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999986220995575	WITHOUT_CLASSIFICATION	1.1133474201561277E-6	DESIGN	1.4994392122801075E-7	DEFECT	8.605254302782596E-8	IMPLEMENTATION	1.8182676877226265E-8	DOCUMENTATION	1.0373881275986278E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999986220995575	WITHOUT_CLASSIFICATION	1.1133474201561277E-6	DESIGN	1.4994392122801075E-7	DEFECT	8.605254302782596E-8	IMPLEMENTATION	1.8182676877226265E-8	DOCUMENTATION	1.0373881275986278E-8	TEST
// return	WITHOUT_CLASSIFICATION	0.9999843843737153	WITHOUT_CLASSIFICATION	1.5114790098808906E-5	DESIGN	3.982627706060649E-7	DEFECT	8.790495422800258E-8	IMPLEMENTATION	1.0735647077051652E-8	DOCUMENTATION	3.932814003805783E-9	TEST
// return	WITHOUT_CLASSIFICATION	0.9999843843737153	WITHOUT_CLASSIFICATION	1.5114790098808906E-5	DESIGN	3.982627706060649E-7	DEFECT	8.790495422800258E-8	IMPLEMENTATION	1.0735647077051652E-8	DOCUMENTATION	3.932814003805783E-9	TEST
// dup	WITHOUT_CLASSIFICATION	0.9999780471107951	WITHOUT_CLASSIFICATION	1.7012889955914477E-5	DESIGN	4.4382179867214535E-6	DEFECT	2.9377640584933043E-7	IMPLEMENTATION	1.419380383409512E-7	DOCUMENTATION	6.606681798708651E-8	TEST
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999994596778129	WITHOUT_CLASSIFICATION	2.9608983837876205E-7	DEFECT	1.6099546941463756E-7	DESIGN	6.506212770419347E-8	IMPLEMENTATION	1.2392096429768892E-8	DOCUMENTATION	5.7826553092772554E-9	TEST
// checkcast	WITHOUT_CLASSIFICATION	0.9999962219321411	WITHOUT_CLASSIFICATION	2.2578455476398868E-6	IMPLEMENTATION	1.3046372031704928E-6	DESIGN	8.754412083892134E-8	DEFECT	7.275316678307222E-8	DOCUMENTATION	5.5287820502749895E-8	TEST
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999996709863614	WITHOUT_CLASSIFICATION	3.2320057198847404E-7	DESIGN	4.261085343945287E-9	DEFECT	8.09903027123304E-10	IMPLEMENTATION	4.75161065160397E-10	TEST	2.6691722212926854E-10	DOCUMENTATION
// astore 5 // store exception	WITHOUT_CLASSIFICATION	0.9999981827951409	WITHOUT_CLASSIFICATION	1.3582705857707914E-6	DESIGN	4.414356828647533E-7	DEFECT	8.200484289526593E-9	TEST	5.043615647577757E-9	DOCUMENTATION	4.254490542126327E-9	IMPLEMENTATION
// new // BulkAccessorException	WITHOUT_CLASSIFICATION	0.9995907326004666	WITHOUT_CLASSIFICATION	3.134583453722216E-4	DEFECT	9.187025170837452E-5	DESIGN	2.2469548791729914E-6	IMPLEMENTATION	9.516589679656068E-7	TEST	7.401886056542992E-7	DOCUMENTATION
// aload 5 // load exception	WITHOUT_CLASSIFICATION	0.9999367224980916	WITHOUT_CLASSIFICATION	4.554461235941834E-5	DEFECT	1.700848707287459E-5	DESIGN	5.421978929741486E-7	IMPLEMENTATION	1.417344819561103E-7	DOCUMENTATION	4.047010105423994E-8	TEST
// iload_3 // i	WITHOUT_CLASSIFICATION	0.9999948254669206	WITHOUT_CLASSIFICATION	2.398832289819827E-6	DEFECT	1.9012419396617319E-6	IMPLEMENTATION	6.481482804567925E-7	DESIGN	1.6927802603821284E-7	TEST	5.7032543334517996E-8	DOCUMENTATION
// invokespecial // BulkAccessorException.<init>	WITHOUT_CLASSIFICATION	0.9999973598283504	WITHOUT_CLASSIFICATION	2.557234472862423E-6	DEFECT	3.240047479518936E-8	IMPLEMENTATION	1.9388337928379155E-8	DOCUMENTATION	1.6283219023048396E-8	DESIGN	1.4865144983876593E-8	TEST
// athrow	WITHOUT_CLASSIFICATION	0.9999984556588292	WITHOUT_CLASSIFICATION	1.2506934080509153E-6	DESIGN	1.8858491644451882E-7	DEFECT	6.262290494205369E-8	IMPLEMENTATION	2.2693223036852576E-8	TEST	1.9746718337480003E-8	DOCUMENTATION
// WARNING: classfile only	WITHOUT_CLASSIFICATION	0.9999346826515739	WITHOUT_CLASSIFICATION	4.9399858105937665E-5	DESIGN	1.5418123004570424E-5	DEFECT	2.673209817659929E-7	DOCUMENTATION	1.5724033389259428E-7	IMPLEMENTATION	7.480599987454276E-8	TEST
//swallow	WITHOUT_CLASSIFICATION	0.9999861822096106	WITHOUT_CLASSIFICATION	6.638747486677938E-6	DESIGN	4.4666470953153326E-6	IMPLEMENTATION	2.177102498926268E-6	DEFECT	3.2147917537411165E-7	DOCUMENTATION	2.1381413309255806E-7	TEST
/* local variable | this | */	WITHOUT_CLASSIFICATION	0.9999766300530191	WITHOUT_CLASSIFICATION	2.295176571764438E-5	DESIGN	2.0503545055188233E-7	IMPLEMENTATION	8.419422939149575E-8	DEFECT	8.088315688225986E-8	TEST	4.806842637446321E-8	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999926549137427	WITHOUT_CLASSIFICATION	5.934121466547126E-6	DESIGN	5.313732190439122E-7	DEFECT	4.082726016213003E-7	DOCUMENTATION	2.445828111154691E-7	TEST	2.267361589718476E-7	IMPLEMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999926549137427	WITHOUT_CLASSIFICATION	5.934121466547126E-6	DESIGN	5.313732190439122E-7	DEFECT	4.082726016213003E-7	DOCUMENTATION	2.445828111154691E-7	TEST	2.267361589718476E-7	IMPLEMENTATION
// getfield // get field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999998913974902	WITHOUT_CLASSIFICATION	1.0653576968997402E-7	DESIGN	9.982144625495266E-10	IMPLEMENTATION	6.166453644389846E-10	DEFECT	3.6368470453384045E-10	TEST	8.819538720261902E-11	DOCUMENTATION
// areturn // return the value of the field	WITHOUT_CLASSIFICATION	0.9999986407789161	WITHOUT_CLASSIFICATION	1.2244444921476316E-6	DESIGN	7.892639612415832E-8	DEFECT	5.339998782371662E-8	IMPLEMENTATION	1.3815161122730434E-9	TEST	1.068691809977412E-9	DOCUMENTATION
/* local variables | this | callback | */	WITHOUT_CLASSIFICATION	0.9995526705480164	WITHOUT_CLASSIFICATION	4.16216345878782E-4	DESIGN	2.2928289178351015E-5	DEFECT	7.166714117718071E-6	IMPLEMENTATION	7.091265657968255E-7	TEST	3.0897624291769114E-7	DOCUMENTATION
// aload_1 // load callback	WITHOUT_CLASSIFICATION	0.9999936000035053	WITHOUT_CLASSIFICATION	4.006175340468925E-6	DEFECT	1.5234191831470887E-6	DESIGN	8.274344990529902E-7	IMPLEMENTATION	2.6371163666963636E-8	DOCUMENTATION	1.6596308306941576E-8	TEST
// putfield // put field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999999400108871	WITHOUT_CLASSIFICATION	4.9575128749257406E-8	DESIGN	6.856133254856811E-9	IMPLEMENTATION	2.7758452081595687E-9	DEFECT	5.505104471801566E-10	TEST	2.3149536216021563E-10	DOCUMENTATION
// case of non-static field	WITHOUT_CLASSIFICATION	0.9999988346227927	WITHOUT_CLASSIFICATION	8.461067642948533E-7	DESIGN	2.4148668265597536E-7	IMPLEMENTATION	6.892170151830793E-8	DEFECT	7.488489541715423E-9	DOCUMENTATION	1.3735693024852075E-9	TEST
// getfield // get each field	WITHOUT_CLASSIFICATION	0.9999735377047165	WITHOUT_CLASSIFICATION	2.6384042917835325E-5	DESIGN	3.019030658418055E-8	TEST	2.486029946045746E-8	DEFECT	1.9508133225095235E-8	IMPLEMENTATION	3.693626335367135E-9	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999998682185295	WITHOUT_CLASSIFICATION	1.0243509506966018E-7	DEFECT	1.6203087510007694E-8	DESIGN	1.14625494792378E-8	IMPLEMENTATION	1.2968316517470781E-9	TEST	3.8390681460794477E-10	DOCUMENTATION
// ifnonnull	WITHOUT_CLASSIFICATION	0.9999950929393709	WITHOUT_CLASSIFICATION	3.0969493512519063E-6	DEFECT	1.4692009481025392E-6	DESIGN	2.9380571882927865E-7	IMPLEMENTATION	2.794951507523799E-8	DOCUMENTATION	1.9155095749683943E-8	TEST
// *return // each type	WITHOUT_CLASSIFICATION	0.9999995395687139	WITHOUT_CLASSIFICATION	3.7343183073973753E-7	DESIGN	8.511706799024471E-8	DEFECT	8.844211646962665E-10	DOCUMENTATION	8.004430456112401E-10	IMPLEMENTATION	1.975230207909134E-10	TEST
// *return // each type	WITHOUT_CLASSIFICATION	0.9999995395687139	WITHOUT_CLASSIFICATION	3.7343183073973753E-7	DESIGN	8.511706799024471E-8	DEFECT	8.844211646962665E-10	DOCUMENTATION	8.004430456112401E-10	IMPLEMENTATION	1.975230207909134E-10	TEST
// *store_1 // each type	WITHOUT_CLASSIFICATION	0.9999998852211405	WITHOUT_CLASSIFICATION	1.039463481702796E-7	DESIGN	8.823070911300113E-9	DEFECT	9.840702756432959E-10	TEST	5.149794086044042E-10	DOCUMENTATION	5.103906948294642E-10	IMPLEMENTATION
// ldc // name of the field	WITHOUT_CLASSIFICATION	0.9999190678783634	WITHOUT_CLASSIFICATION	7.823466148378041E-5	DESIGN	1.4915695867807675E-6	IMPLEMENTATION	7.362295064963689E-7	DEFECT	3.520378300521835E-7	TEST	1.1762322955375245E-7	DOCUMENTATION
// *load_1 // each type	WITHOUT_CLASSIFICATION	0.9999996767925106	WITHOUT_CLASSIFICATION	2.2626248858279098E-7	DESIGN	8.760469325937883E-8	DEFECT	5.093747370495542E-9	IMPLEMENTATION	2.533215490420939E-9	DOCUMENTATION	1.7133449553580384E-9	TEST
// invokeinterface // invoke Callback.read*() // each type	WITHOUT_CLASSIFICATION	0.9999994252670557	WITHOUT_CLASSIFICATION	5.168682236891E-7	DEFECT	5.695958113794766E-8	DESIGN	6.265617784330847E-10	DOCUMENTATION	1.9968729861130986E-10	TEST	7.889047550990293E-11	IMPLEMENTATION
// int	WITHOUT_CLASSIFICATION	0.9999905725652566	WITHOUT_CLASSIFICATION	6.4134383811568956E-6	DESIGN	2.719990742285936E-6	DEFECT	1.4271007638843422E-7	DOCUMENTATION	9.53569135297893E-8	IMPLEMENTATION	5.593862997028039E-8	TEST
// return	WITHOUT_CLASSIFICATION	0.9999843843737153	WITHOUT_CLASSIFICATION	1.5114790098808906E-5	DESIGN	3.982627706060649E-7	DEFECT	8.790495422800258E-8	IMPLEMENTATION	1.0735647077051652E-8	DOCUMENTATION	3.932814003805783E-9	TEST
// dup	WITHOUT_CLASSIFICATION	0.9999780471107951	WITHOUT_CLASSIFICATION	1.7012889955914477E-5	DESIGN	4.4382179867214535E-6	DEFECT	2.9377640584933043E-7	IMPLEMENTATION	1.419380383409512E-7	DOCUMENTATION	6.606681798708651E-8	TEST
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999937319934494	WITHOUT_CLASSIFICATION	5.91741006069375E-6	DESIGN	3.101277699858085E-7	DEFECT	2.697818604061257E-8	DOCUMENTATION	9.689511740179388E-9	TEST	3.801021984161962E-9	IMPLEMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999962219321411	WITHOUT_CLASSIFICATION	2.2578455476398868E-6	IMPLEMENTATION	1.3046372031704928E-6	DESIGN	8.754412083892134E-8	DEFECT	7.275316678307222E-8	DOCUMENTATION	5.5287820502749895E-8	TEST
// checkcast	WITHOUT_CLASSIFICATION	0.9999962219321411	WITHOUT_CLASSIFICATION	2.2578455476398868E-6	IMPLEMENTATION	1.3046372031704928E-6	DESIGN	8.754412083892134E-8	DEFECT	7.275316678307222E-8	DOCUMENTATION	5.5287820502749895E-8	TEST
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999999017176093	WITHOUT_CLASSIFICATION	7.414818094054066E-8	DEFECT	1.2563093704407511E-8	DESIGN	1.0535783425508542E-8	IMPLEMENTATION	7.834308909298511E-10	TEST	2.5190168462627974E-10	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999999017176093	WITHOUT_CLASSIFICATION	7.414818094054066E-8	DEFECT	1.2563093704407511E-8	DESIGN	1.0535783425508542E-8	IMPLEMENTATION	7.834308909298511E-10	TEST	2.5190168462627974E-10	DOCUMENTATION
// ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.9999991039024625	WITHOUT_CLASSIFICATION	6.689182487054191E-7	DESIGN	1.8760996523683118E-7	IMPLEMENTATION	3.163220348009803E-8	DEFECT	4.983541876346525E-9	DOCUMENTATION	2.9535780148323193E-9	TEST
// *load_1	WITHOUT_CLASSIFICATION	0.999993817673275	WITHOUT_CLASSIFICATION	4.7011346314466275E-6	DESIGN	9.91608278278691E-7	DEFECT	4.185115951838717E-7	IMPLEMENTATION	3.631723239730358E-8	TEST	3.475498768934088E-8	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.999993817673275	WITHOUT_CLASSIFICATION	4.7011346314466275E-6	DESIGN	9.91608278278691E-7	DEFECT	4.185115951838717E-7	IMPLEMENTATION	3.631723239730358E-8	TEST	3.475498768934088E-8	DOCUMENTATION
// putfield	WITHOUT_CLASSIFICATION	0.9999765621124193	WITHOUT_CLASSIFICATION	1.4391426370601484E-5	DESIGN	8.06832482946962E-6	IMPLEMENTATION	8.287146110022405E-7	DEFECT	9.665400752699339E-8	TEST	5.2767762149021514E-8	DOCUMENTATION
// return ;	WITHOUT_CLASSIFICATION	0.999978275294917	WITHOUT_CLASSIFICATION	2.0633951627992364E-5	DESIGN	7.318019063484319E-7	DEFECT	3.330794704266799E-7	IMPLEMENTATION	2.0945646541823905E-8	DOCUMENTATION	4.9264316442500864E-9	TEST
// ldc // field name	WITHOUT_CLASSIFICATION	0.9999980366728574	WITHOUT_CLASSIFICATION	1.6798632946236846E-6	DESIGN	1.4967926253395144E-7	DEFECT	9.66122301334752E-8	IMPLEMENTATION	3.1966085520224105E-8	TEST	5.206269835443411E-9	DOCUMENTATION
// getfield // old value of the field	WITHOUT_CLASSIFICATION	0.9999931546081869	WITHOUT_CLASSIFICATION	6.035234648594236E-6	DESIGN	5.900731788993151E-7	DEFECT	1.2130045800141542E-7	TEST	8.597300723472761E-8	IMPLEMENTATION	1.2810520390014323E-8	DOCUMENTATION
// invokeinterface // callback.write*(..)	WITHOUT_CLASSIFICATION	0.9999921705004038	WITHOUT_CLASSIFICATION	7.48129701131376E-6	DEFECT	3.2593286178286407E-7	DESIGN	1.2724194664292637E-8	IMPLEMENTATION	5.209578323855217E-9	DOCUMENTATION	4.335950025356975E-9	TEST
// reference type	WITHOUT_CLASSIFICATION	0.9999801424279883	WITHOUT_CLASSIFICATION	1.6423271486540333E-5	DESIGN	2.8315707220669847E-6	DEFECT	4.30184181382796E-7	IMPLEMENTATION	1.613784164316116E-7	DOCUMENTATION	1.1167205376301341E-8	TEST
// reference type	WITHOUT_CLASSIFICATION	0.9999801424279883	WITHOUT_CLASSIFICATION	1.6423271486540333E-5	DESIGN	2.8315707220669847E-6	DEFECT	4.30184181382796E-7	IMPLEMENTATION	1.613784164316116E-7	DOCUMENTATION	1.1167205376301341E-8	TEST
// not array	WITHOUT_CLASSIFICATION	0.9996553105646948	WITHOUT_CLASSIFICATION	1.6868743913623464E-4	DESIGN	1.3469054192402744E-4	IMPLEMENTATION	3.991166598420217E-5	DEFECT	7.355103134160963E-7	DOCUMENTATION	6.642779473531064E-7	TEST
// array of reference type	WITHOUT_CLASSIFICATION	0.9999981514669871	WITHOUT_CLASSIFICATION	1.2456865556418945E-6	DEFECT	4.89746221222637E-7	DESIGN	6.056898128356633E-8	DOCUMENTATION	4.8731814925280696E-8	IMPLEMENTATION	3.799439889237074E-9	TEST
// boolean	WITHOUT_CLASSIFICATION	0.9999994710206144	WITHOUT_CLASSIFICATION	4.7228741309091675E-7	DESIGN	4.252431623276354E-8	DEFECT	5.558574394282063E-9	IMPLEMENTATION	4.52931930700038E-9	TEST	4.079762562066365E-9	DOCUMENTATION
// byte	WITHOUT_CLASSIFICATION	0.9999766765924927	WITHOUT_CLASSIFICATION	1.4995741931567416E-5	DESIGN	4.744012787628457E-6	IMPLEMENTATION	3.0658408940487724E-6	DEFECT	2.6974081478328056E-7	TEST	2.4807107935744957E-7	DOCUMENTATION
// char	WITHOUT_CLASSIFICATION	0.9999999430373554	WITHOUT_CLASSIFICATION	4.4489498828369194E-8	DESIGN	6.7565004521279065E-9	DEFECT	3.7784713888286815E-9	IMPLEMENTATION	9.828448259836468E-10	TEST	9.553291116768006E-10	DOCUMENTATION
// short	WITHOUT_CLASSIFICATION	0.99994916865815	WITHOUT_CLASSIFICATION	4.9970382515739364E-5	DESIGN	4.984283323026E-7	DEFECT	1.9890641525901216E-7	TEST	8.933431368358425E-8	DOCUMENTATION	7.42902730790398E-8	IMPLEMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999904714746876	WITHOUT_CLASSIFICATION	7.622437528783716E-6	DESIGN	1.8248588596708813E-6	DEFECT	3.780505673195329E-8	IMPLEMENTATION	2.6331972903968373E-8	DOCUMENTATION	1.7091894531095456E-8	TEST
// float	WITHOUT_CLASSIFICATION	0.9999940579886266	WITHOUT_CLASSIFICATION	3.4818571585667255E-6	DEFECT	2.300549278865572E-6	DESIGN	6.236367548446763E-8	IMPLEMENTATION	5.4206775828178055E-8	TEST	4.303448452530197E-8	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999940579886266	WITHOUT_CLASSIFICATION	3.4818571585667255E-6	DEFECT	2.300549278865572E-6	DESIGN	6.236367548446763E-8	IMPLEMENTATION	5.4206775828178055E-8	TEST	4.303448452530197E-8	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999922749133595	WITHOUT_CLASSIFICATION	6.049720985799335E-6	DEFECT	1.4376196618340942E-6	DESIGN	1.4954840902219233E-7	IMPLEMENTATION	4.8467451603282363E-8	TEST	3.973013231747422E-8	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999922749133595	WITHOUT_CLASSIFICATION	6.049720985799335E-6	DEFECT	1.4376196618340942E-6	DESIGN	1.4954840902219233E-7	IMPLEMENTATION	4.8467451603282363E-8	TEST	3.973013231747422E-8	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999915211430819	WITHOUT_CLASSIFICATION	4.767454959498119E-6	DESIGN	2.030387963083754E-6	DEFECT	1.530916406847717E-6	IMPLEMENTATION	1.0736230272231079E-7	DOCUMENTATION	4.273528592785091E-8	TEST
// bad type	WITHOUT_CLASSIFICATION	0.9999915211430819	WITHOUT_CLASSIFICATION	4.767454959498119E-6	DESIGN	2.030387963083754E-6	DEFECT	1.530916406847717E-6	IMPLEMENTATION	1.0736230272231079E-7	DOCUMENTATION	4.273528592785091E-8	TEST
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999999867810779	WITHOUT_CLASSIFICATION	9.408392832423718E-9	DESIGN	2.0671225482996324E-9	DEFECT	7.788647601046362E-10	TEST	6.947408849409327E-10	IMPLEMENTATION	2.698010489723253E-10	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999999867810779	WITHOUT_CLASSIFICATION	9.408392832423718E-9	DESIGN	2.0671225482996324E-9	DEFECT	7.788647601046362E-10	TEST	6.947408849409327E-10	IMPLEMENTATION	2.698010489723253E-10	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999801424279883	WITHOUT_CLASSIFICATION	1.6423271486540333E-5	DESIGN	2.8315707220669847E-6	DEFECT	4.30184181382796E-7	IMPLEMENTATION	1.613784164316116E-7	DOCUMENTATION	1.1167205376301341E-8	TEST
// double	WITHOUT_CLASSIFICATION	0.9999904714746876	WITHOUT_CLASSIFICATION	7.622437528783716E-6	DESIGN	1.8248588596708813E-6	DEFECT	3.780505673195329E-8	IMPLEMENTATION	2.6331972903968373E-8	DOCUMENTATION	1.7091894531095456E-8	TEST
// float	WITHOUT_CLASSIFICATION	0.9999940579886266	WITHOUT_CLASSIFICATION	3.4818571585667255E-6	DEFECT	2.300549278865572E-6	DESIGN	6.236367548446763E-8	IMPLEMENTATION	5.4206775828178055E-8	TEST	4.303448452530197E-8	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999940579886266	WITHOUT_CLASSIFICATION	3.4818571585667255E-6	DEFECT	2.300549278865572E-6	DESIGN	6.236367548446763E-8	IMPLEMENTATION	5.4206775828178055E-8	TEST	4.303448452530197E-8	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999922749133595	WITHOUT_CLASSIFICATION	6.049720985799335E-6	DEFECT	1.4376196618340942E-6	DESIGN	1.4954840902219233E-7	IMPLEMENTATION	4.8467451603282363E-8	TEST	3.973013231747422E-8	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999915211430819	WITHOUT_CLASSIFICATION	4.767454959498119E-6	DESIGN	2.030387963083754E-6	DEFECT	1.530916406847717E-6	IMPLEMENTATION	1.0736230272231079E-7	DOCUMENTATION	4.273528592785091E-8	TEST
// bad type	WITHOUT_CLASSIFICATION	0.9999915211430819	WITHOUT_CLASSIFICATION	4.767454959498119E-6	DESIGN	2.030387963083754E-6	DEFECT	1.530916406847717E-6	IMPLEMENTATION	1.0736230272231079E-7	DOCUMENTATION	4.273528592785091E-8	TEST
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999999867810779	WITHOUT_CLASSIFICATION	9.408392832423718E-9	DESIGN	2.0671225482996324E-9	DEFECT	7.788647601046362E-10	TEST	6.947408849409327E-10	IMPLEMENTATION	2.698010489723253E-10	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.999783994639365	WITHOUT_CLASSIFICATION	1.1951437766430195E-4	DESIGN	9.314947185993426E-5	IMPLEMENTATION	1.732105799448261E-6	DEFECT	1.0526495725522303E-6	DOCUMENTATION	5.56755738759783E-7	TEST
//Mainly for OSCache	WITHOUT_CLASSIFICATION	0.9998027138604249	WITHOUT_CLASSIFICATION	1.9572645979828605E-4	DESIGN	6.414952809873323E-7	DOCUMENTATION	5.226693565790182E-7	DEFECT	2.0256383204728232E-7	TEST	1.929513072249953E-7	IMPLEMENTATION
//decrement the lock	WITHOUT_CLASSIFICATION	0.9998629135665449	WITHOUT_CLASSIFICATION	7.204303273605416E-5	DESIGN	3.6746718580789636E-5	IMPLEMENTATION	1.9115097746162437E-5	DEFECT	7.01756751334884E-6	DOCUMENTATION	2.1640168787647255E-6	TEST
// create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.9999979384448731	WITHOUT_CLASSIFICATION	1.0590002129226108E-6	DEFECT	9.371175768503451E-7	DESIGN	4.0032905533116493E-8	TEST	2.198199288136625E-8	IMPLEMENTATION	3.42243892443548E-9	DOCUMENTATION
//recache the updated state	WITHOUT_CLASSIFICATION	0.9998277359028174	WITHOUT_CLASSIFICATION	1.6971856673356312E-4	DESIGN	2.1085995973648062E-6	IMPLEMENTATION	2.0171292280763634E-7	DEFECT	1.685826630472122E-7	DOCUMENTATION	6.663526582244838E-8	TEST
// noop	WITHOUT_CLASSIFICATION	0.9999868177206218	WITHOUT_CLASSIFICATION	7.250945082427322E-6	DESIGN	2.8489019502373725E-6	DEFECT	2.8327665517957084E-6	IMPLEMENTATION	1.8324828740799932E-7	DOCUMENTATION	6.641750619152635E-8	TEST
//null clientLock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.9983414254346857	WITHOUT_CLASSIFICATION	0.001653645278025514	DESIGN	4.681282343626676E-6	DEFECT	1.2393676467120762E-7	IMPLEMENTATION	9.856293201331242E-8	DOCUMENTATION	2.5505248401133805E-8	TEST
// we really could refresh the item if it // is not a lock, but it might be slower //return freshTimestamp < txTimestamp	WITHOUT_CLASSIFICATION	0.9607001788010385	DEFECT	0.02034941925194161	WITHOUT_CLASSIFICATION	0.01894814124586639	DESIGN	1.9561758051352193E-6	TEST	2.94853164166916E-7	IMPLEMENTATION	9.672184119699319E-9	DOCUMENTATION
//by requiring <, we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.9988263577641069	WITHOUT_CLASSIFICATION	0.001125104186326466	DEFECT	4.561362872503888E-5	DESIGN	2.502915212782833E-6	IMPLEMENTATION	2.125655313562171E-7	DOCUMENTATION	2.089400974083026E-7	TEST
// the user provided resulttransformer, not the one used with "select new". Here to avoid mangling // transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.9999999972651475	WITHOUT_CLASSIFICATION	2.553093239672099E-9	DEFECT	9.911885773689604E-11	TEST	5.078753843023462E-11	IMPLEMENTATION	3.046503830914523E-11	DESIGN	1.3877953032560968E-12	DOCUMENTATION
// disassemble positional parameters	WITHOUT_CLASSIFICATION	0.999999597168765	WITHOUT_CLASSIFICATION	3.4616509455338534E-7	IMPLEMENTATION	5.443200541822742E-8	DEFECT	1.0274410095996633E-9	DESIGN	8.887438842512426E-10	TEST	3.1795029410716564E-10	DOCUMENTATION
// disassemble named parameters	WITHOUT_CLASSIFICATION	0.9999999564597338	WITHOUT_CLASSIFICATION	1.642300351059605E-8	IMPLEMENTATION	1.237062041621506E-8	DEFECT	1.2182106669392804E-8	DESIGN	2.4359546391137616E-9	TEST	1.2858089499077907E-10	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999692208165115	WITHOUT_CLASSIFICATION	1.440160447099447E-5	DESIGN	1.0996374123748086E-5	IMPLEMENTATION	4.522937435841272E-6	DEFECT	7.046241221261392E-7	DOCUMENTATION	1.5364333558376996E-7	TEST
// noop	WITHOUT_CLASSIFICATION	0.9999868177206218	WITHOUT_CLASSIFICATION	7.250945082427322E-6	DESIGN	2.8489019502373725E-6	DEFECT	2.8327665517957084E-6	IMPLEMENTATION	1.8324828740799932E-7	DOCUMENTATION	6.641750619152635E-8	TEST
//noop	WITHOUT_CLASSIFICATION	0.9999601948625657	WITHOUT_CLASSIFICATION	1.8448116543411793E-5	DESIGN	1.8221834274479216E-5	DEFECT	1.3585547460082011E-6	DOCUMENTATION	1.2430110044979848E-6	IMPLEMENTATION	5.336208659780474E-7	TEST
//noop	WITHOUT_CLASSIFICATION	0.9999601948625657	WITHOUT_CLASSIFICATION	1.8448116543411793E-5	DESIGN	1.8221834274479216E-5	DEFECT	1.3585547460082011E-6	DOCUMENTATION	1.2430110044979848E-6	IMPLEMENTATION	5.336208659780474E-7	TEST
// this is called from SettingsFactory irregardless; trivial to simply disregard	WITHOUT_CLASSIFICATION	0.9999952776166785	WITHOUT_CLASSIFICATION	4.566534447860946E-6	DESIGN	1.5309881350756445E-7	DEFECT	1.912320985771955E-9	TEST	6.430339532063158E-10	IMPLEMENTATION	1.9470529527003375E-10	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999790229029402	WITHOUT_CLASSIFICATION	1.8308771550389345E-5	DESIGN	2.090556853536621E-6	IMPLEMENTATION	2.4611301390627215E-7	DEFECT	2.0934652608170297E-7	DOCUMENTATION	1.2230911589795575E-7	TEST
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999790229029402	WITHOUT_CLASSIFICATION	1.8308771550389345E-5	DESIGN	2.090556853536621E-6	IMPLEMENTATION	2.4611301390627215E-7	DEFECT	2.0934652608170297E-7	DOCUMENTATION	1.2230911589795575E-7	TEST
//throw new UnsupportedOperationException("Can't write to a readonly object");	WITHOUT_CLASSIFICATION	0.9999951366819803	WITHOUT_CLASSIFICATION	4.787025356819454E-6	DESIGN	6.707645460895683E-8	DEFECT	6.5494221951871234E-9	DOCUMENTATION	2.592711215710351E-9	TEST	7.407488063812014E-11	IMPLEMENTATION
//assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9998722640872784	WITHOUT_CLASSIFICATION	1.2612599403875402E-4	DESIGN	1.5665389413464395E-6	DEFECT	3.8411532512068855E-8	TEST	4.7260158479699545E-9	DOCUMENTATION	2.421932240909887E-10	IMPLEMENTATION
//persister.setIdentifier(result, id); //before calling interceptor, for consistency with normal load	WITHOUT_CLASSIFICATION	0.99999941861118	WITHOUT_CLASSIFICATION	5.563475597411698E-7	DEFECT	1.5696983808929845E-8	IMPLEMENTATION	4.6180752505991984E-9	TEST	4.05660110902885E-9	DESIGN	6.695999345704573E-10	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999524167382275	WITHOUT_CLASSIFICATION	4.4439768164168965E-5	DESIGN	1.7937573084679864E-6	DEFECT	1.2779422570390331E-6	IMPLEMENTATION	5.8044304094875126E-8	DOCUMENTATION	1.3749738706965824E-8	TEST
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999524167382275	WITHOUT_CLASSIFICATION	4.4439768164168965E-5	DESIGN	1.7937573084679864E-6	DEFECT	1.2779422570390331E-6	IMPLEMENTATION	5.8044304094875126E-8	DOCUMENTATION	1.3749738706965824E-8	TEST
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999986255379255	WITHOUT_CLASSIFICATION	1.293764446548716E-6	DESIGN	8.046850086194104E-8	DEFECT	1.7165082551226246E-10	TEST	4.088083057024252E-11	IMPLEMENTATION	1.659549322591625E-11	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999397527576609	WITHOUT_CLASSIFICATION	3.271205895650062E-5	DEFECT	2.753263092592437E-5	DESIGN	1.4570928420149105E-9	IMPLEMENTATION	6.355448653307822E-10	TEST	4.5981905014739115E-10	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999397527576609	WITHOUT_CLASSIFICATION	3.271205895650062E-5	DEFECT	2.753263092592437E-5	DESIGN	1.4570928420149105E-9	IMPLEMENTATION	6.355448653307822E-10	TEST	4.5981905014739115E-10	DOCUMENTATION
// classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.9999521849581657	WITHOUT_CLASSIFICATION	4.4602631902838314E-5	DESIGN	2.1265677978036162E-6	TEST	6.462312641910717E-7	DEFECT	2.8726378904913694E-7	DOCUMENTATION	1.5234708041645318E-7	IMPLEMENTATION
// get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.9999993690595476	WITHOUT_CLASSIFICATION	6.153481950462178E-7	DESIGN	9.553327526286129E-9	DEFECT	3.828681363124591E-9	TEST	1.8567431185918894E-9	IMPLEMENTATION	3.5350547035515345E-10	DOCUMENTATION
// get meta's from <class>	WITHOUT_CLASSIFICATION	0.9999970576484303	WITHOUT_CLASSIFICATION	2.9192466659828235E-6	DESIGN	1.9476254288139645E-8	DEFECT	2.842669406296843E-9	TEST	7.186952089747148E-10	DOCUMENTATION	6.728480536265003E-11	IMPLEMENTATION
// DB-OBJECTNAME	WITHOUT_CLASSIFICATION	0.9999963238492267	WITHOUT_CLASSIFICATION	2.017875670013403E-6	IMPLEMENTATION	1.1167521702755851E-6	DESIGN	2.483926578011958E-7	DEFECT	1.9194130237121422E-7	DOCUMENTATION	1.0118897291883822E-7	TEST
// MUTABLE	WITHOUT_CLASSIFICATION	0.9999978304067708	WITHOUT_CLASSIFICATION	1.9295620986931835E-6	DESIGN	1.670362306425395E-7	DEFECT	2.8039534771789613E-8	DOCUMENTATION	2.4200175759021074E-8	IMPLEMENTATION	2.075518924635867E-8	TEST
// WHERE	WITHOUT_CLASSIFICATION	0.9999898157399578	WITHOUT_CLASSIFICATION	8.731624696118986E-6	DESIGN	1.114556813900772E-6	DEFECT	1.5727738278264475E-7	IMPLEMENTATION	9.318457526765925E-8	DOCUMENTATION	8.761657414716451E-8	TEST
// CHECK	WITHOUT_CLASSIFICATION	0.9999895538275438	WITHOUT_CLASSIFICATION	1.0067463007110869E-5	DESIGN	2.578886237913082E-7	DEFECT	5.5740481848789256E-8	DOCUMENTATION	3.992605230208599E-8	TEST	2.5154291120570678E-8	IMPLEMENTATION
// POLYMORPHISM	WITHOUT_CLASSIFICATION	0.9999944944893273	WITHOUT_CLASSIFICATION	3.1145887402398984E-6	DESIGN	1.1134214119135514E-6	IMPLEMENTATION	1.0575041582235026E-6	DEFECT	1.3912013718325625E-7	DOCUMENTATION	8.087622504121184E-8	TEST
// TODO:	WITHOUT_CLASSIFICATION	0.9870919846464277	WITHOUT_CLASSIFICATION	0.006253616656486058	IMPLEMENTATION	0.0050018344707876685	DESIGN	0.001040847189408473	DEFECT	3.279984286610448E-4	DOCUMENTATION	2.837186082291307E-4	TEST
// ID	WITHOUT_CLASSIFICATION	0.999995927826876	WITHOUT_CLASSIFICATION	1.9621302462998387E-6	DESIGN	1.105194435802142E-6	DEFECT	8.021577602759897E-7	IMPLEMENTATION	1.1057587123960313E-7	DOCUMENTATION	9.211481046168289E-8	TEST
// VERSION / TIMESTAMP	WITHOUT_CLASSIFICATION	0.9999995938578317	WITHOUT_CLASSIFICATION	2.3445765476990372E-7	DESIGN	6.855597838616373E-8	DEFECT	4.6618304279322255E-8	IMPLEMENTATION	3.008930044461564E-8	TEST	2.6420930505280848E-8	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.999945922400007	WITHOUT_CLASSIFICATION	4.795864709630393E-5	IMPLEMENTATION	3.1596185730357047E-6	DESIGN	1.7660743650827204E-6	DEFECT	8.255932006307366E-7	DOCUMENTATION	3.676667578182426E-7	TEST
// Primary key constraint	WITHOUT_CLASSIFICATION	0.999999186383345	WITHOUT_CLASSIFICATION	7.628803352527857E-7	DESIGN	1.9169309179912627E-8	DEFECT	1.4753990811974066E-8	IMPLEMENTATION	1.2495360252429187E-8	DOCUMENTATION	4.317659408021342E-9	TEST
// this is either a <version/> tag with no type attribute, // or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.9999998579596655	WITHOUT_CLASSIFICATION	6.908789694201347E-8	TEST	5.642697347627551E-8	DEFECT	1.1336760731891268E-8	DESIGN	5.022519041593067E-9	IMPLEMENTATION	1.6618421044850863E-10	DOCUMENTATION
// for version properties marked as being generated, make sure they are "always" // generated; aka, "insert" is invalid; this is dis-allowed by the DTD, // but just to make sure...	WITHOUT_CLASSIFICATION	0.9999999928795971	WITHOUT_CLASSIFICATION	4.031721128319252E-9	TEST	1.8816511781073143E-9	DESIGN	1.0917407479510846E-9	DEFECT	1.0136959028245385E-10	IMPLEMENTATION	1.3920219477620541E-11	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.999945922400007	WITHOUT_CLASSIFICATION	4.795864709630393E-5	IMPLEMENTATION	3.1596185730357047E-6	DESIGN	1.7660743650827204E-6	DEFECT	8.255932006307366E-7	DOCUMENTATION	3.676667578182426E-7	TEST
// ( (Column) discrim.getColumnIterator().next() ).setType(type);	WITHOUT_CLASSIFICATION	0.9999943829600567	WITHOUT_CLASSIFICATION	4.9880445979870325E-6	DESIGN	5.989499959691689E-7	DEFECT	2.388094567811607E-8	IMPLEMENTATION	4.792119069655248E-9	DOCUMENTATION	1.3722846727968501E-9	TEST
// go ahead and set the lazy here, since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.9999988637904298	WITHOUT_CLASSIFICATION	1.065497793742859E-6	IMPLEMENTATION	4.7203903750351167E-8	DESIGN	2.078238520824723E-8	DEFECT	2.388349243646438E-9	DOCUMENTATION	3.371383868387017E-10	TEST
// DYNAMIC UPDATE	WITHOUT_CLASSIFICATION	0.9999914468524254	WITHOUT_CLASSIFICATION	6.7897662210657644E-6	IMPLEMENTATION	1.4771525042117194E-6	DESIGN	1.3294460674804013E-7	DOCUMENTATION	1.0616410827968589E-7	DEFECT	4.7120134326927974E-8	TEST
// IMPORT	WITHOUT_CLASSIFICATION	0.9999931309844108	WITHOUT_CLASSIFICATION	3.2173411011334738E-6	DEFECT	2.972987467704345E-6	DESIGN	4.2129989837612196E-7	IMPLEMENTATION	1.445686153991754E-7	DOCUMENTATION	1.1281850670920498E-7	TEST
// BATCH SIZE	WITHOUT_CLASSIFICATION	0.999974053714157	WITHOUT_CLASSIFICATION	9.35724313135044E-6	DEFECT	9.261521424729979E-6	DESIGN	6.353730752511905E-6	IMPLEMENTATION	7.637694425328695E-7	DOCUMENTATION	2.100210918161521E-7	TEST
// SELECT BEFORE UPDATE	WITHOUT_CLASSIFICATION	0.9999987988330455	WITHOUT_CLASSIFICATION	7.70867978775098E-7	DESIGN	1.4028630912433017E-7	DEFECT	1.3861172631741849E-7	IMPLEMENTATION	1.1870818984106736E-7	DOCUMENTATION	3.269275043701092E-8	TEST
// OPTIMISTIC LOCK MODE	WITHOUT_CLASSIFICATION	0.9999997126180099	WITHOUT_CLASSIFICATION	2.1037078567495144E-7	DESIGN	3.819281129753094E-8	DOCUMENTATION	1.5882406766880784E-8	TEST	1.523252916305168E-8	IMPLEMENTATION	7.703457322961241E-9	DEFECT
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999941875132454	WITHOUT_CLASSIFICATION	2.6245426007220354E-6	DESIGN	2.4182721650968196E-6	IMPLEMENTATION	4.5139389173399153E-7	DEFECT	2.1328012471561538E-7	DOCUMENTATION	1.0499797235328743E-7	TEST
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.999974642137133	WITHOUT_CLASSIFICATION	2.4716671643072432E-5	DESIGN	3.5890874421538663E-7	DEFECT	1.6571243261802766E-7	DOCUMENTATION	6.23683891400754E-8	TEST	5.420165786140219E-8	IMPLEMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999896426094551	WITHOUT_CLASSIFICATION	1.0327677509775207E-5	DESIGN	2.7111478593109054E-8	DEFECT	2.0222302860435585E-9	TEST	5.32230155474052E-10	DOCUMENTATION	4.709588727691314E-11	IMPLEMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999975627709711	WITHOUT_CLASSIFICATION	1.4505827890826815E-6	DESIGN	5.670145947763715E-7	DEFECT	3.20655752056548E-7	IMPLEMENTATION	4.9950751179224064E-8	TEST	4.902514193090439E-8	DOCUMENTATION
// joined subclasses	WITHOUT_CLASSIFICATION	0.9999988593487645	WITHOUT_CLASSIFICATION	1.0650898685927495E-6	DESIGN	3.845264945594431E-8	IMPLEMENTATION	2.1298463072030278E-8	DEFECT	1.0872160893762962E-8	DOCUMENTATION	4.9380933490769865E-9	TEST
// KEY	WITHOUT_CLASSIFICATION	0.9999911374382112	WITHOUT_CLASSIFICATION	7.965394044624513E-6	DESIGN	5.813159387186377E-7	DEFECT	1.519153127892896E-7	IMPLEMENTATION	8.463978648954877E-8	DOCUMENTATION	7.929670609552982E-8	TEST
// CHECK	WITHOUT_CLASSIFICATION	0.9999895538275438	WITHOUT_CLASSIFICATION	1.0067463007110869E-5	DESIGN	2.578886237913082E-7	DEFECT	5.5740481848789256E-8	DOCUMENTATION	3.992605230208599E-8	TEST	2.5154291120570678E-8	IMPLEMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.999974642137133	WITHOUT_CLASSIFICATION	2.4716671643072432E-5	DESIGN	3.5890874421538663E-7	DEFECT	1.6571243261802766E-7	DOCUMENTATION	6.23683891400754E-8	TEST	5.420165786140219E-8	IMPLEMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999975627709711	WITHOUT_CLASSIFICATION	1.4505827890826815E-6	DESIGN	5.670145947763715E-7	DEFECT	3.20655752056548E-7	IMPLEMENTATION	4.9950751179224064E-8	TEST	4.902514193090439E-8	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999911374382112	WITHOUT_CLASSIFICATION	7.965394044624513E-6	DESIGN	5.813159387186377E-7	DEFECT	1.519153127892896E-7	IMPLEMENTATION	8.463978648954877E-8	DOCUMENTATION	7.929670609552982E-8	TEST
// model.getKey().setType( new Type( model.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999999553212202	WITHOUT_CLASSIFICATION	2.3406725621046986E-8	DESIGN	1.6183697217956365E-8	IMPLEMENTATION	4.340144168497996E-9	DEFECT	5.472505373469039E-10	DOCUMENTATION	2.0096230390254818E-10	TEST
// TABLENAME	WITHOUT_CLASSIFICATION	0.999995826416096	WITHOUT_CLASSIFICATION	2.5355077152412975E-6	DESIGN	7.732215457471722E-7	IMPLEMENTATION	6.697427712442781E-7	DEFECT	1.0110367520133923E-7	TEST	9.400819656537944E-8	DOCUMENTATION
// join.getKey().setType( new Type( lazz.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999999789252383	WITHOUT_CLASSIFICATION	1.506517504073793E-8	IMPLEMENTATION	4.858585131496162E-9	DESIGN	8.215361714667332E-10	DEFECT	2.9360872859484804E-10	DOCUMENTATION	3.58565607963559E-11	TEST
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999837907263617	WITHOUT_CLASSIFICATION	1.1748629784438314E-5	DESIGN	3.2611209306480034E-6	IMPLEMENTATION	5.561720387582557E-7	DEFECT	4.1141076984736767E-7	DOCUMENTATION	2.3194011458022425E-7	TEST
// COLUMN(S)	WITHOUT_CLASSIFICATION	0.9999974663901195	WITHOUT_CLASSIFICATION	2.0552324256384744E-6	DESIGN	2.0146897846203645E-7	DEFECT	1.822775806451677E-7	IMPLEMENTATION	5.4426621256855154E-8	DOCUMENTATION	4.020427445166527E-8	TEST
// column index	WITHOUT_CLASSIFICATION	0.9999842065528242	WITHOUT_CLASSIFICATION	1.2511278592819476E-5	DEFECT	2.9054961306021164E-6	IMPLEMENTATION	2.801764922695388E-7	DESIGN	7.76350779648778E-8	DOCUMENTATION	1.8860882227362663E-8	TEST
//column unique-key	WITHOUT_CLASSIFICATION	0.9999704724620624	WITHOUT_CLASSIFICATION	2.2013448196467283E-5	DESIGN	4.426119684519186E-6	DEFECT	2.0055246606813073E-6	IMPLEMENTATION	8.276216393669381E-7	DOCUMENTATION	2.5482375666655036E-7	TEST
// automatically makes a column with the default name if none is specifed by XML	WITHOUT_CLASSIFICATION	0.9982335510650331	WITHOUT_CLASSIFICATION	0.0017657663201319101	DESIGN	4.27259179234603E-7	DEFECT	1.967646870349395E-7	TEST	3.9197607585629555E-8	IMPLEMENTATION	1.9393361119437832E-8	DOCUMENTATION
// for an any	WITHOUT_CLASSIFICATION	0.9999984227169383	WITHOUT_CLASSIFICATION	1.2928663298245926E-6	DESIGN	2.0445464509356423E-7	DEFECT	3.111799285753354E-8	DOCUMENTATION	2.9361697189027166E-8	TEST	1.94823965703684E-8	IMPLEMENTATION
// insertable simply because that is the user did not specify // anything; just override it	WITHOUT_CLASSIFICATION	0.9999999989175037	WITHOUT_CLASSIFICATION	8.771386891419769E-10	IMPLEMENTATION	9.963294874507449E-11	DESIGN	7.662988146776366E-11	DEFECT	1.622984194010627E-11	DOCUMENTATION	1.2864970722863833E-11	TEST
// the user specifically supplied insert="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999939763416618	WITHOUT_CLASSIFICATION	5.830864246429943E-6	DESIGN	1.5594219974352032E-7	TEST	1.664249517508098E-8	DEFECT	1.1277640683569132E-8	DOCUMENTATION	8.931756315282895E-9	IMPLEMENTATION
// properties generated on update can never be updateable...	WITHOUT_CLASSIFICATION	0.9999441547663478	WITHOUT_CLASSIFICATION	3.726916742777995E-5	DEFECT	1.8280953940048906E-5	DESIGN	2.638417432533673E-7	IMPLEMENTATION	2.6560264568476216E-8	TEST	4.7102765668904045E-9	DOCUMENTATION
// updateable only because the user did not specify  // anything; just override it	WITHOUT_CLASSIFICATION	0.9999999817668723	WITHOUT_CLASSIFICATION	1.797615375856281E-8	IMPLEMENTATION	2.0140232551050422E-10	DOCUMENTATION	3.691941156419629E-11	DEFECT	1.090590649235088E-11	TEST	7.74629221781012E-12	DESIGN
// the user specifically supplied update="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999984991817126	WITHOUT_CLASSIFICATION	1.3652505623460552E-6	DESIGN	8.25102380901356E-8	IMPLEMENTATION	2.842857602798706E-8	TEST	1.8559310407800688E-8	DEFECT	6.069600620415532E-9	DOCUMENTATION
// ROLENAME	WITHOUT_CLASSIFICATION	0.9999898359296266	WITHOUT_CLASSIFICATION	6.524890706855108E-6	DESIGN	2.0502039228615654E-6	DEFECT	1.3070158644384735E-6	IMPLEMENTATION	1.6133949618676726E-7	TEST	1.206203830068431E-7	DOCUMENTATION
// FETCH STRATEGY	WITHOUT_CLASSIFICATION	0.9999866017880914	WITHOUT_CLASSIFICATION	7.762308432192051E-6	DESIGN	4.705140431982549E-6	IMPLEMENTATION	4.7445086434500274E-7	DEFECT	2.9871878287562014E-7	DOCUMENTATION	1.5759339737795996E-7	TEST
// TABLE	WITHOUT_CLASSIFICATION	0.999997793891013	WITHOUT_CLASSIFICATION	1.3591512892092733E-6	DESIGN	6.049346379564375E-7	DEFECT	1.2796969711131708E-7	IMPLEMENTATION	6.28642713449181E-8	DOCUMENTATION	5.1189091426852396E-8	TEST
//tableName = mappings.getNamingStrategy().propertyToTableName( className, path );	WITHOUT_CLASSIFICATION	0.9999984967846036	WITHOUT_CLASSIFICATION	1.124538316359954E-6	DESIGN	1.9755960609362854E-7	TEST	9.873508406588727E-8	DEFECT	7.183825137939962E-8	IMPLEMENTATION	1.0544138401353088E-8	DOCUMENTATION
// SORT	WITHOUT_CLASSIFICATION	0.9999897695439144	WITHOUT_CLASSIFICATION	7.948641075352882E-6	DESIGN	1.2202232758400007E-6	DEFECT	6.703084246967759E-7	IMPLEMENTATION	2.4082337996024524E-7	DOCUMENTATION	1.504599298120012E-7	TEST
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.999974642137133	WITHOUT_CLASSIFICATION	2.4716671643072432E-5	DESIGN	3.5890874421538663E-7	DEFECT	1.6571243261802766E-7	DOCUMENTATION	6.23683891400754E-8	TEST	5.420165786140219E-8	IMPLEMENTATION
// unsorted, natural, comparator.class.name	WITHOUT_CLASSIFICATION	0.9999936518737771	WITHOUT_CLASSIFICATION	6.29466313219526E-6	DESIGN	3.563435118002846E-8	IMPLEMENTATION	1.1356189194802275E-8	DEFECT	5.056894277883096E-9	TEST	1.415655965067239E-9	DOCUMENTATION
// ORPHAN DELETE (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.9999992125420188	WITHOUT_CLASSIFICATION	6.688308204043914E-7	IMPLEMENTATION	1.0978468533484351E-7	DESIGN	4.703680364705436E-9	DOCUMENTATION	2.7704338209811785E-9	TEST	1.3683611238975409E-9	DEFECT
// set up second pass	WITHOUT_CLASSIFICATION	0.9999986656466694	WITHOUT_CLASSIFICATION	1.169943839896345E-6	DESIGN	1.2881056959510068E-7	IMPLEMENTATION	1.8013323787948112E-8	DEFECT	1.4700948993900262E-8	DOCUMENTATION	2.884648370683278E-9	TEST
// an "embedded" component (composite ids and unique) // note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.9994367144003534	WITHOUT_CLASSIFICATION	5.142321259689229E-4	DESIGN	4.8508783773815635E-5	TEST	5.183692041767626E-7	IMPLEMENTATION	1.3323245793556746E-8	DOCUMENTATION	1.2997453991465297E-8	DEFECT
// a nested composite element	WITHOUT_CLASSIFICATION	0.999998921271209	WITHOUT_CLASSIFICATION	9.585665419957593E-7	DESIGN	5.652862786005247E-8	IMPLEMENTATION	3.470468540612689E-8	TEST	2.5015235494490593E-8	DEFECT	3.9137001677789965E-9	DOCUMENTATION
// for an any // we will have to use reflection	WITHOUT_CLASSIFICATION	0.9999874346242188	WITHOUT_CLASSIFICATION	1.118126593704104E-5	DESIGN	1.3439897818595954E-6	DEFECT	1.8453687075108817E-8	DOCUMENTATION	1.796220803088513E-8	IMPLEMENTATION	3.7041672239306763E-9	TEST
//NOTE SPECIAL CASE: // one-to-one constrained=false cannot be proxied, // so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.9999999863515044	WITHOUT_CLASSIFICATION	1.3544423642519495E-8	DESIGN	4.598285954756566E-11	DOCUMENTATION	4.30625559901891E-11	IMPLEMENTATION	1.4561225912755273E-11	DEFECT	4.65355954393112E-13	TEST
// use old (HB 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.9999998760195417	WITHOUT_CLASSIFICATION	9.22515168811352E-8	DESIGN	2.9414474286772305E-8	IMPLEMENTATION	1.086256952336303E-9	DEFECT	1.0542591055523905E-9	DOCUMENTATION	1.7395116186362887E-10	TEST
//lazy = !join;	WITHOUT_CLASSIFICATION	0.9999637725443727	WITHOUT_CLASSIFICATION	2.433641678229358E-5	DESIGN	5.9324464757851016E-6	DEFECT	4.391781889274644E-6	IMPLEMENTATION	1.3306435947788783E-6	DOCUMENTATION	2.3616688507083012E-7	TEST
// GENERATOR	WITHOUT_CLASSIFICATION	0.9999930526627232	WITHOUT_CLASSIFICATION	4.4776498123623065E-6	DESIGN	1.4965726615633028E-6	IMPLEMENTATION	6.015875372919711E-7	DEFECT	2.0355014660644787E-7	DOCUMENTATION	1.6797711904056105E-7	TEST
// ID UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999945860229182	WITHOUT_CLASSIFICATION	3.365140217892149E-6	IMPLEMENTATION	1.5162012909430446E-6	DESIGN	3.9998319656260634E-7	DEFECT	7.817264934162884E-8	DOCUMENTATION	5.447972721904947E-8	TEST
// VERSION UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999995500991311	WITHOUT_CLASSIFICATION	3.100779590077106E-7	DESIGN	7.268530116622594E-8	IMPLEMENTATION	3.450741832662028E-8	DEFECT	1.880168451424909E-8	DOCUMENTATION	1.3828505873391447E-8	TEST
// not necessarily a *unique* property reference	WITHOUT_CLASSIFICATION	0.9990579072015234	WITHOUT_CLASSIFICATION	5.876535650687217E-4	DESIGN	2.2948157099609792E-4	IMPLEMENTATION	1.2239550666674106E-4	DEFECT	2.1763097032816617E-6	DOCUMENTATION	3.858460417738895E-7	TEST
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999145816669187	WITHOUT_CLASSIFICATION	4.891276375364029E-5	IMPLEMENTATION	3.3095637031868324E-5	DESIGN	3.2966423598270137E-6	DEFECT	9.546463703231118E-8	TEST	1.7825298849992515E-8	DOCUMENTATION
// contained elements:	WITHOUT_CLASSIFICATION	0.999994592242118	WITHOUT_CLASSIFICATION	5.204812417221036E-6	DESIGN	1.3652436424244813E-7	IMPLEMENTATION	4.748656032920517E-8	DEFECT	1.5719775995004646E-8	DOCUMENTATION	3.2147641102328494E-9	TEST
// for non-inverse one-to-many, with a not-null fk, add a backref!	WITHOUT_CLASSIFICATION	0.9999845260815571	WITHOUT_CLASSIFICATION	8.19851493413823E-6	IMPLEMENTATION	6.081256986468571E-6	DESIGN	1.15710097062821E-6	DEFECT	2.723684964095112E-8	DOCUMENTATION	9.808702187735917E-9	TEST
// Bind the where	WITHOUT_CLASSIFICATION	0.9997545436067713	WITHOUT_CLASSIFICATION	1.5262381673031736E-4	DESIGN	7.674864665852765E-5	IMPLEMENTATION	1.0080817195943032E-5	DEFECT	3.4173389416172295E-6	DOCUMENTATION	2.58577370227553E-6	TEST
// Bind the order-by	WITHOUT_CLASSIFICATION	0.9999814023750809	WITHOUT_CLASSIFICATION	1.20485290521483E-5	IMPLEMENTATION	4.243382741589024E-6	DESIGN	1.9797739354755977E-6	DEFECT	2.6405846246389276E-7	DOCUMENTATION	6.188072732944478E-8	TEST
// Bind the filters	WITHOUT_CLASSIFICATION	0.999952254739403	WITHOUT_CLASSIFICATION	4.028981839933497E-5	IMPLEMENTATION	6.002590670381689E-6	DESIGN	1.2557362604058996E-6	DEFECT	1.1142374094150829E-7	TEST	8.569152604996973E-8	DOCUMENTATION
// overriding inherited meta attribute. HBX-621 & HBX-793	WITHOUT_CLASSIFICATION	0.9999295900886357	WITHOUT_CLASSIFICATION	5.6302316601048056E-5	DESIGN	8.38030671530417E-6	IMPLEMENTATION	5.22982328568768E-6	DEFECT	4.770316990786998E-7	TEST	2.0433063171687893E-8	DOCUMENTATION
// first, iterate over all elements capable of defining an extends attribute // collecting all found extends references if they cannot be resolved // against the already processed mappings.	WITHOUT_CLASSIFICATION	0.9999999991309685	WITHOUT_CLASSIFICATION	8.434426556122587E-10	IMPLEMENTATION	2.3059696550485213E-11	DESIGN	2.4652255436345813E-12	TEST	3.4236665890401417E-14	DOCUMENTATION	2.9586783609416224E-14	DEFECT
// mappings might contain either the "raw" extends name (in the case of // an entity-name mapping) or a FQN (in the case of a POJO mapping).	WITHOUT_CLASSIFICATION	0.9999971322535747	WITHOUT_CLASSIFICATION	2.583611735395188E-6	DESIGN	2.4259762911148657E-7	DEFECT	2.0203070569423813E-8	IMPLEMENTATION	1.8613615176456557E-8	TEST	2.7203750859728926E-9	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9617824767656675	WITHOUT_CLASSIFICATION	0.03821582978473948	DESIGN	7.684436704204034E-7	DEFECT	6.405422416887091E-7	IMPLEMENTATION	2.009013823575776E-7	DOCUMENTATION	8.356229857008556E-8	TEST
//SessionFactory name:	WITHOUT_CLASSIFICATION	0.999658865797969	WITHOUT_CLASSIFICATION	3.3721771660499936E-4	DESIGN	2.1213156799433357E-6	DEFECT	8.27054657728083E-7	DOCUMENTATION	5.155673209773713E-7	TEST	4.5254776726831554E-7	IMPLEMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9997679408325924	WITHOUT_CLASSIFICATION	1.8438525378206304E-4	DESIGN	3.0424517344270425E-5	IMPLEMENTATION	8.873693166591474E-6	DEFECT	8.00198652690833E-6	DOCUMENTATION	3.73716587577385E-7	TEST
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9997679408325924	WITHOUT_CLASSIFICATION	1.8438525378206304E-4	DESIGN	3.0424517344270425E-5	IMPLEMENTATION	8.873693166591474E-6	DEFECT	8.00198652690833E-6	DOCUMENTATION	3.73716587577385E-7	TEST
//Interrogate JDBC metadata	WITHOUT_CLASSIFICATION	0.9999939234445313	WITHOUT_CLASSIFICATION	2.952695150863345E-6	IMPLEMENTATION	1.6198818994213828E-6	DESIGN	8.598179214987675E-7	DEFECT	4.0649589728073074E-7	DOCUMENTATION	2.3766459969648767E-7	TEST
// user supplied JDBC connections	WITHOUT_CLASSIFICATION	0.999504900859729	WITHOUT_CLASSIFICATION	4.651167567293732E-4	IMPLEMENTATION	2.9600019353723754E-5	DESIGN	2.4288337915289484E-7	DEFECT	1.1598252199063536E-7	DOCUMENTATION	2.3498286798557998E-8	TEST
//use dialect default properties	WITHOUT_CLASSIFICATION	0.9999948768214351	WITHOUT_CLASSIFICATION	4.922434172729279E-6	DESIGN	1.389238667932132E-7	IMPLEMENTATION	3.0728193273799987E-8	DEFECT	2.423444537648413E-8	DOCUMENTATION	6.857886784406629E-9	TEST
// Transaction settings:	WITHOUT_CLASSIFICATION	0.999945818468727	WITHOUT_CLASSIFICATION	5.0674302391347866E-5	DESIGN	1.754532066578635E-6	DEFECT	1.2427794950651184E-6	IMPLEMENTATION	4.5530982091833E-7	DOCUMENTATION	5.460749914239037E-8	TEST
//SQL Generation settings:	WITHOUT_CLASSIFICATION	0.9996722601011369	WITHOUT_CLASSIFICATION	3.267978149016528E-4	DESIGN	6.114307572911458E-7	DEFECT	2.33982910051038E-7	DOCUMENTATION	8.473645340128301E-8	TEST	1.1933840902422185E-8	IMPLEMENTATION
//Query parser settings:	WITHOUT_CLASSIFICATION	0.9989829896317992	WITHOUT_CLASSIFICATION	6.55560388823583E-4	DESIGN	3.603911827943011E-4	DEFECT	5.022401335762313E-7	DOCUMENTATION	3.2446133606153256E-7	TEST	2.3209511316763844E-7	IMPLEMENTATION
// Second-level / query cache:	WITHOUT_CLASSIFICATION	0.999924187017612	WITHOUT_CLASSIFICATION	7.013301299907947E-5	DESIGN	5.224177053746132E-6	DEFECT	3.673125897781216E-7	IMPLEMENTATION	5.87028050893395E-8	DOCUMENTATION	2.9776940340870433E-8	TEST
// The cache provider is needed when we either have second-level cache enabled // or query cache enabled.  Note that useSecondLevelCache is enabled by default	WITHOUT_CLASSIFICATION	0.9999917329745207	WITHOUT_CLASSIFICATION	7.4547324995083055E-6	DESIGN	6.881179294343906E-7	DEFECT	1.167047415359536E-7	TEST	6.651718533770576E-9	IMPLEMENTATION	8.185903164242812E-10	DOCUMENTATION
//SQL Exception converter:	WITHOUT_CLASSIFICATION	0.9995473881722639	WITHOUT_CLASSIFICATION	4.438626510680082E-4	DESIGN	6.693704795738587E-6	DEFECT	1.0508625377202678E-6	DOCUMENTATION	6.426985645012742E-7	TEST	3.619107702879446E-7	IMPLEMENTATION
//Statistics and logging:	WITHOUT_CLASSIFICATION	0.9999936845507356	WITHOUT_CLASSIFICATION	5.263625551670582E-6	DESIGN	7.714427144571386E-7	DEFECT	1.3381523422448566E-7	IMPLEMENTATION	1.1435373330161511E-7	DOCUMENTATION	3.221203080968273E-8	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
//Schema export:	WITHOUT_CLASSIFICATION	0.9999474053696237	WITHOUT_CLASSIFICATION	4.806785496893666E-5	DESIGN	2.7313973300538205E-6	DEFECT	1.2941327551863836E-6	IMPLEMENTATION	2.933050976875892E-7	DOCUMENTATION	2.079402243200731E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// legacy behavior, apply the bridge...	WITHOUT_CLASSIFICATION	0.999591289152105	WITHOUT_CLASSIFICATION	3.900791500940777E-4	DESIGN	1.2894968059170601E-5	DEFECT	5.342268814180645E-6	IMPLEMENTATION	2.19576929100338E-7	DOCUMENTATION	1.7488399837353312E-7	TEST
// maybe a concrete SQLpropertyresult type, but Map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.9985615383145888	WITHOUT_CLASSIFICATION	8.762845870049441E-4	DEFECT	5.607764120987784E-4	DESIGN	1.1475192868533398E-6	TEST	2.4006095141937464E-7	DOCUMENTATION	1.310606934979815E-8	IMPLEMENTATION
//if dotted and not load-collection nor return-join //regular property	WITHOUT_CLASSIFICATION	0.9999997961072187	WITHOUT_CLASSIFICATION	1.120667748040024E-7	DEFECT	5.189190693703575E-8	DESIGN	3.785969038979622E-8	IMPLEMENTATION	1.6034454786004753E-9	DOCUMENTATION	4.709636372922263E-10	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999540715576277	WITHOUT_CLASSIFICATION	4.5455583734858964E-5	DESIGN	4.162578763716279E-7	DEFECT	2.4533444256969783E-8	IMPLEMENTATION	2.145574698981221E-8	TEST	1.0611569814396547E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999535038955005	WITHOUT_CLASSIFICATION	4.424666198765787E-5	DESIGN	1.611472837028899E-6	DEFECT	5.778264186457622E-7	IMPLEMENTATION	3.698770659058234E-8	TEST	2.315554951891185E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// using local since the inheritedMetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.9999981140034605	WITHOUT_CLASSIFICATION	1.7033067144373922E-6	DEFECT	1.69911890802096E-7	DESIGN	1.2223538970486475E-8	IMPLEMENTATION	4.1124676194194353E-10	TEST	1.431484841550949E-10	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// if doc is null, then for whatever reason, the cached file cannot be used...	WITHOUT_CLASSIFICATION	0.9999993663014753	WITHOUT_CLASSIFICATION	4.117376433818181E-7	DEFECT	2.1836769750345907E-7	DESIGN	2.91544079047746E-9	TEST	6.111231736572959E-10	DOCUMENTATION	6.66199024684271E-11	IMPLEMENTATION
// drop them in reverse order in case db needs it done that way...	WITHOUT_CLASSIFICATION	0.990963203740053	WITHOUT_CLASSIFICATION	0.008474813037452926	DESIGN	5.394018045494352E-4	DEFECT	1.9966273901026193E-5	IMPLEMENTATION	1.8571160490325939E-6	DOCUMENTATION	7.580279946478195E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// This method may be called many times!!	WITHOUT_CLASSIFICATION	0.9895968513960289	WITHOUT_CLASSIFICATION	0.0079377315630091	IMPLEMENTATION	0.0018576905641332026	DESIGN	6.020416463117432E-4	DEFECT	3.817478383937456E-6	TEST	1.8673521330827657E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// found	WITHOUT_CLASSIFICATION	0.9999803212889024	WITHOUT_CLASSIFICATION	1.6326005242453433E-5	DESIGN	2.5177740403550895E-6	DEFECT	6.405692093774851E-7	IMPLEMENTATION	1.26954207984082E-7	DOCUMENTATION	6.740839733021102E-8	TEST
// found	WITHOUT_CLASSIFICATION	0.9999803212889024	WITHOUT_CLASSIFICATION	1.6326005242453433E-5	DESIGN	2.5177740403550895E-6	DEFECT	6.405692093774851E-7	IMPLEMENTATION	1.26954207984082E-7	DOCUMENTATION	6.740839733021102E-8	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
//<String, String>	WITHOUT_CLASSIFICATION	0.9999263641286797	WITHOUT_CLASSIFICATION	6.713788858672185E-5	DESIGN	3.946447857950912E-6	DEFECT	1.3082226623046035E-6	DOCUMENTATION	8.126747897161259E-7	IMPLEMENTATION	4.3063742360561487E-7	TEST
//<String, String>	WITHOUT_CLASSIFICATION	0.9999263641286797	WITHOUT_CLASSIFICATION	6.713788858672185E-5	DESIGN	3.946447857950912E-6	DEFECT	1.3082226623046035E-6	DOCUMENTATION	8.126747897161259E-7	IMPLEMENTATION	4.3063742360561487E-7	TEST
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9617824767656675	WITHOUT_CLASSIFICATION	0.03821582978473948	DESIGN	7.684436704204034E-7	DEFECT	6.405422416887091E-7	IMPLEMENTATION	2.009013823575776E-7	DOCUMENTATION	8.356229857008556E-8	TEST
//Set USE_REFLECTION_OPTIMIZER to false to fix HHH-227	WITHOUT_CLASSIFICATION	0.9999994514290411	WITHOUT_CLASSIFICATION	4.0440500266393723E-7	DESIGN	1.11809752162519E-7	DEFECT	1.4590082298963834E-8	IMPLEMENTATION	1.0728027276336969E-8	DOCUMENTATION	7.038094479024673E-9	TEST
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9997895285793024	WITHOUT_CLASSIFICATION	2.0731572346879346E-4	DESIGN	2.0120973249902266E-6	IMPLEMENTATION	5.291442001880754E-7	TEST	3.3719727925358944E-7	DEFECT	2.7725842433616163E-7	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999995492285968	WITHOUT_CLASSIFICATION	2.940649568778937E-7	DESIGN	7.052013695834649E-8	IMPLEMENTATION	5.306535366257963E-8	TEST	3.054011716892807E-8	DEFECT	2.5808386961033895E-9	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999417088902455	WITHOUT_CLASSIFICATION	5.778395841214376E-5	DESIGN	3.4591053480068435E-7	DEFECT	1.1973606698796762E-7	DOCUMENTATION	3.324644466112102E-8	IMPLEMENTATION	8.258295941168778E-9	TEST
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9997895285793024	WITHOUT_CLASSIFICATION	2.0731572346879346E-4	DESIGN	2.0120973249902266E-6	IMPLEMENTATION	5.291442001880754E-7	TEST	3.3719727925358944E-7	DEFECT	2.7725842433616163E-7	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999995492285968	WITHOUT_CLASSIFICATION	2.940649568778937E-7	DESIGN	7.052013695834649E-8	IMPLEMENTATION	5.306535366257963E-8	TEST	3.054011716892807E-8	DEFECT	2.5808386961033895E-9	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999942183821015	WITHOUT_CLASSIFICATION	4.1840918190365905E-6	IMPLEMENTATION	7.816701566218372E-7	DESIGN	4.896394481244897E-7	TEST	2.2071409895441326E-7	DOCUMENTATION	1.0550237574999284E-7	DEFECT
//maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.9999986108980748	WITHOUT_CLASSIFICATION	1.3768935774214963E-6	DESIGN	8.17818608985546E-9	TEST	2.7130043029259047E-9	DEFECT	1.3163894450669366E-9	DOCUMENTATION	7.679229869406348E-13	IMPLEMENTATION
// the element has been removed from the set	WITHOUT_CLASSIFICATION	0.9999809470891498	WITHOUT_CLASSIFICATION	1.865016367453593E-5	DESIGN	3.330016564172095E-7	DEFECT	6.553336853006817E-8	IMPLEMENTATION	2.6344063123179686E-9	TEST	1.577744353785819E-9	DOCUMENTATION
// the element has changed	WITHOUT_CLASSIFICATION	0.9999885587589528	WITHOUT_CLASSIFICATION	6.614428942745555E-6	DESIGN	4.371595199773816E-6	IMPLEMENTATION	3.8728981638796686E-7	DEFECT	5.226127773126701E-8	TEST	1.5665810612294927E-8	DOCUMENTATION
//Careful: these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.9798623969049846	WITHOUT_CLASSIFICATION	0.018574333400153884	DESIGN	0.0014789983671590723	IMPLEMENTATION	5.010739885602479E-5	DEFECT	3.324020884178927E-5	TEST	9.237200047117642E-7	DOCUMENTATION
//needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.6257912824674272	WITHOUT_CLASSIFICATION	0.374199833390664	DESIGN	4.8205246424407215E-6	DEFECT	1.635735196720713E-6	DOCUMENTATION	1.2420482763930948E-6	TEST	1.185833793248775E-6	IMPLEMENTATION
// override on some subclasses	WITHOUT_CLASSIFICATION	0.9999994579476942	WITHOUT_CLASSIFICATION	4.17587265545478E-7	DESIGN	7.079125973859975E-8	IMPLEMENTATION	3.2038373851016876E-8	DEFECT	1.8301735881434945E-8	DOCUMENTATION	3.333670904389324E-9	TEST
//override on some subclasses	WITHOUT_CLASSIFICATION	0.9999946245976563	WITHOUT_CLASSIFICATION	4.759103346653443E-6	DESIGN	3.17838680058495E-7	IMPLEMENTATION	1.7734784954111825E-7	DOCUMENTATION	9.291643081983335E-8	DEFECT	2.8196036538396334E-8	TEST
//do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.9989884732120091	WITHOUT_CLASSIFICATION	9.715369701985618E-4	DESIGN	2.1207498592875522E-5	IMPLEMENTATION	1.3429684129078208E-5	DEFECT	3.41076115327648E-6	TEST	1.941873917123652E-6	DOCUMENTATION
// short-circuit(s) // no new elements, the old list contains only Orphans // no old elements, so no Orphans neither	WITHOUT_CLASSIFICATION	0.9999999991971662	WITHOUT_CLASSIFICATION	7.883643932154498E-10	DESIGN	7.075236425587406E-12	TEST	5.428445508556293E-12	DEFECT	1.6231693885948605E-12	DOCUMENTATION	3.425031851313996E-13	IMPLEMENTATION
// create the collection holding the Orphans	WITHOUT_CLASSIFICATION	0.9999976510730794	WITHOUT_CLASSIFICATION	1.8255295592503606E-6	DEFECT	3.214545682963108E-7	IMPLEMENTATION	1.7375333073336807E-7	DESIGN	2.0114034453630333E-8	TEST	8.075427894481708E-9	DOCUMENTATION
// collect EntityIdentifier(s) of the *current* elements - add them into a HashSet for fast access	WITHOUT_CLASSIFICATION	0.9999840016669912	WITHOUT_CLASSIFICATION	1.595489079445887E-5	DESIGN	3.689865766682931E-8	DEFECT	3.5370835966208616E-9	TEST	1.798865685478484E-9	IMPLEMENTATION	1.2076075243131878E-9	DOCUMENTATION
// iterate over the *old* list	WITHOUT_CLASSIFICATION	0.9999995097463602	WITHOUT_CLASSIFICATION	4.808604561822664E-7	DESIGN	5.357944861464335E-9	TEST	2.3498528781719318E-9	IMPLEMENTATION	1.370228879393421E-9	DEFECT	3.1515695547239965E-10	DOCUMENTATION
/*(array==null) ? tempList.size() :*/	WITHOUT_CLASSIFICATION	0.9999255792192587	WITHOUT_CLASSIFICATION	3.468673642994519E-5	IMPLEMENTATION	2.8490058190982425E-5	DEFECT	7.992586321916781E-6	DESIGN	3.0553700799739274E-6	TEST	1.960297183732095E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999417088902455	WITHOUT_CLASSIFICATION	5.778395841214376E-5	DESIGN	3.4591053480068435E-7	DEFECT	1.1973606698796762E-7	DOCUMENTATION	3.324644466112102E-8	IMPLEMENTATION	8.258295941168778E-9	TEST
/*(array==null) ? tempList.get(i) :*/	WITHOUT_CLASSIFICATION	0.9999553622117519	WITHOUT_CLASSIFICATION	1.8074228968570812E-5	DEFECT	1.516198927125165E-5	IMPLEMENTATION	9.665444759719618E-6	DESIGN	1.6248085733766941E-6	TEST	1.1131667529450493E-7	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999563941098263	WITHOUT_CLASSIFICATION	2.462517011298508E-5	DESIGN	1.135762945122262E-5	TEST	6.418172200404117E-6	DEFECT	1.114646706800362E-6	DOCUMENTATION	9.027170236001556E-8	IMPLEMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999563941098263	WITHOUT_CLASSIFICATION	2.462517011298508E-5	DESIGN	1.135762945122262E-5	TEST	6.418172200404117E-6	DEFECT	1.114646706800362E-6	DOCUMENTATION	9.027170236001556E-8	IMPLEMENTATION
// amazingly, these two will work because AbstractCollection // uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.9975223086674848	WITHOUT_CLASSIFICATION	0.00245595944176204	DESIGN	1.666444136068307E-5	DEFECT	4.509176876608378E-6	IMPLEMENTATION	3.9027885844334966E-7	DOCUMENTATION	1.6799365740373208E-7	TEST
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999942183821015	WITHOUT_CLASSIFICATION	4.1840918190365905E-6	IMPLEMENTATION	7.816701566218372E-7	DESIGN	4.896394481244897E-7	TEST	2.2071409895441326E-7	DOCUMENTATION	1.0550237574999284E-7	DEFECT
// finally, what it's all about...	WITHOUT_CLASSIFICATION	0.9978419470824637	WITHOUT_CLASSIFICATION	0.0014925401073804725	DEFECT	4.533091152488121E-4	DESIGN	2.0912270401131247E-4	IMPLEMENTATION	1.7811870507602248E-6	TEST	1.2998038451545692E-6	DOCUMENTATION
// note that if we load this collection from a cartesian product // the multiplicity would be broken ... so use an idbag instead	WITHOUT_CLASSIFICATION	0.9990362112702086	DESIGN	9.61694418171049E-4	WITHOUT_CLASSIFICATION	1.6890977167832755E-6	DEFECT	3.9994501009728103E-7	TEST	3.1084269745692544E-9	DOCUMENTATION	2.160466713645629E-9	IMPLEMENTATION
// Anyway, here we implement <set> semantics for a // <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.9428521734280059	WITHOUT_CLASSIFICATION	0.05499347319701992	DESIGN	0.0016496123186908508	DEFECT	4.6856258142137047E-4	IMPLEMENTATION	2.6066520704915296E-5	TEST	1.0111954157025119E-5	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999996361787025	WITHOUT_CLASSIFICATION	2.1954585319747588E-7	DEFECT	1.3917414958561868E-7	DESIGN	4.027344949356427E-9	TEST	1.0322973482323159E-9	DOCUMENTATION	4.165240561895986E-11	IMPLEMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9942283907127841	WITHOUT_CLASSIFICATION	0.005736721514991515	DESIGN	1.9834048096310328E-5	TEST	1.3877704200416339E-5	DEFECT	9.084373644006448E-7	IMPLEMENTATION	2.675825633542117E-7	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999942183821015	WITHOUT_CLASSIFICATION	4.1840918190365905E-6	IMPLEMENTATION	7.816701566218372E-7	DESIGN	4.896394481244897E-7	TEST	2.2071409895441326E-7	DOCUMENTATION	1.0550237574999284E-7	DEFECT
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999996361787025	WITHOUT_CLASSIFICATION	2.1954585319747588E-7	DEFECT	1.3917414958561868E-7	DESIGN	4.027344949356427E-9	TEST	1.0322973482323159E-9	DOCUMENTATION	4.165240561895986E-11	IMPLEMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9942283907127841	WITHOUT_CLASSIFICATION	0.005736721514991515	DESIGN	1.9834048096310328E-5	TEST	1.3877704200416339E-5	DEFECT	9.084373644006448E-7	IMPLEMENTATION	2.675825633542117E-7	DOCUMENTATION
/*public boolean equals(Object other) {	WITHOUT_CLASSIFICATION	0.9016231016212469	WITHOUT_CLASSIFICATION	0.09831830587989092	DESIGN	4.173903065210305E-5	IMPLEMENTATION	9.388039067631258E-6	DOCUMENTATION	6.507736480453105E-6	TEST	9.576926619174846E-7	DEFECT
// List OPERATIONS:	WITHOUT_CLASSIFICATION	0.9999987262484767	WITHOUT_CLASSIFICATION	1.016696477467511E-6	IMPLEMENTATION	9.723208902683904E-8	TEST	9.267366908333772E-8	DESIGN	5.237193830770783E-8	DEFECT	1.477734938542932E-8	DOCUMENTATION
//pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.9999990987253388	WITHOUT_CLASSIFICATION	8.374021828251267E-7	DEFECT	4.685158664108145E-8	DESIGN	8.99385822279847E-9	IMPLEMENTATION	5.682061171053394E-9	DOCUMENTATION	2.3449723534063884E-9	TEST
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999942183821015	WITHOUT_CLASSIFICATION	4.1840918190365905E-6	IMPLEMENTATION	7.816701566218372E-7	DESIGN	4.896394481244897E-7	TEST	2.2071409895441326E-7	DOCUMENTATION	1.0550237574999284E-7	DEFECT
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999942183821015	WITHOUT_CLASSIFICATION	4.1840918190365905E-6	IMPLEMENTATION	7.816701566218372E-7	DESIGN	4.896394481244897E-7	TEST	2.2071409895441326E-7	DOCUMENTATION	1.0550237574999284E-7	DEFECT
// from Map	WITHOUT_CLASSIFICATION	0.9999940701878305	WITHOUT_CLASSIFICATION	4.3495092057486855E-6	DESIGN	7.617100188892321E-7	DEFECT	7.198741781686719E-7	IMPLEMENTATION	6.312851799274501E-8	TEST	3.559024891960131E-8	DOCUMENTATION
// from SortedMap	WITHOUT_CLASSIFICATION	0.999987848099372	WITHOUT_CLASSIFICATION	8.545461036863561E-6	DESIGN	2.2365663042697593E-6	DEFECT	1.1480013312964617E-6	IMPLEMENTATION	1.5593690562438732E-7	TEST	6.593504990212195E-8	DOCUMENTATION
//inject the data	WITHOUT_CLASSIFICATION	0.9999079921998699	WITHOUT_CLASSIFICATION	6.619320603910945E-5	DESIGN	2.1990645200642077E-5	IMPLEMENTATION	2.2652486163072677E-6	DEFECT	1.2805357444834548E-6	DOCUMENTATION	2.781645294972701E-7	TEST
// cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999745289658051	WITHOUT_CLASSIFICATION	2.5096348260399755E-5	DESIGN	3.6039384966886264E-7	DEFECT	5.835632046779116E-9	DOCUMENTATION	5.44153943473068E-9	IMPLEMENTATION	3.014913430271042E-9	TEST
//default pool size 20	WITHOUT_CLASSIFICATION	0.9999994496724836	WITHOUT_CLASSIFICATION	2.0426096762618776E-7	IMPLEMENTATION	1.6926937546639343E-7	DEFECT	1.3946432515803522E-7	DESIGN	3.174223521713966E-8	DOCUMENTATION	5.590612816581406E-9	TEST
// trying via forName() first to be as close to DriverManager's semantics	WITHOUT_CLASSIFICATION	0.9999999972022786	WITHOUT_CLASSIFICATION	1.779113292508217E-9	DESIGN	8.022497861299616E-10	DEFECT	1.7633063112904693E-10	TEST	2.8195531088489732E-11	DOCUMENTATION	1.1832125143030149E-11	IMPLEMENTATION
// if debug level is enabled, then log the password, otherwise mask it	WITHOUT_CLASSIFICATION	0.9999990785077342	WITHOUT_CLASSIFICATION	9.046457861691956E-7	IMPLEMENTATION	9.785389618750091E-9	TEST	5.844352528421709E-9	DESIGN	1.1666059737267965E-9	DEFECT	5.0131565170004826E-11	DOCUMENTATION
// register a cleanup synch	WITHOUT_CLASSIFICATION	0.9987840760826888	WITHOUT_CLASSIFICATION	0.0012158280545556104	DESIGN	4.524389260385047E-8	DEFECT	1.924537324150449E-8	DOCUMENTATION	1.7845993278335848E-8	IMPLEMENTATION	1.3527496544249463E-8	TEST
// wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.999989117103287	WITHOUT_CLASSIFICATION	1.0790546982472428E-5	DESIGN	6.047883039638073E-8	DEFECT	1.9042395049420034E-8	IMPLEMENTATION	1.225600274506344E-8	DOCUMENTATION	5.72502149074578E-10	TEST
// then bind it	WITHOUT_CLASSIFICATION	0.9998851399700962	WITHOUT_CLASSIFICATION	8.630730218124808E-5	DESIGN	1.3674652782993694E-5	IMPLEMENTATION	1.209914534646253E-5	DEFECT	1.5991175277351041E-6	TEST	1.179812065402252E-6	DOCUMENTATION
// try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.999996303219651	WITHOUT_CLASSIFICATION	2.469799212852855E-6	DESIGN	1.148405039832486E-6	DEFECT	3.809459189183087E-8	IMPLEMENTATION	3.671137965001752E-8	DOCUMENTATION	3.770124704269788E-9	TEST
// allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.999987946300818	WITHOUT_CLASSIFICATION	9.97387687769956E-6	DESIGN	2.0341903290457803E-6	IMPLEMENTATION	3.612820987730572E-8	DEFECT	7.530785515778329E-9	DOCUMENTATION	1.9729798239311655E-9	TEST
// limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.9999991391116553	WITHOUT_CLASSIFICATION	8.522176636796766E-7	DESIGN	4.973373510096742E-9	IMPLEMENTATION	2.246935048528637E-9	TEST	9.971866577275921E-10	DEFECT	4.5318596915236094E-10	DOCUMENTATION
// allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.9993454955964122	WITHOUT_CLASSIFICATION	6.513720031214767E-4	DESIGN	3.0947733492686464E-6	IMPLEMENTATION	1.7137773854195403E-8	TEST	1.1321650349074996E-8	DEFECT	9.1676929417109E-9	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999987659209657	WITHOUT_CLASSIFICATION	9.095149778001787E-7	DEFECT	2.5185727921511223E-7	DESIGN	4.5924925107447766E-8	IMPLEMENTATION	2.1064454525597203E-8	DOCUMENTATION	5.7173977317474965E-9	TEST
// We could register the session against the transaction even though it is // not started, but we'd have no guarentee of ever getting the map // entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.9974161845085399	WITHOUT_CLASSIFICATION	0.002582878834638825	DESIGN	7.218876948674987E-7	DEFECT	1.2900888062288866E-7	TEST	8.341879257138378E-8	IMPLEMENTATION	2.3414531842493936E-9	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9966546532891416	WITHOUT_CLASSIFICATION	0.003343570371608247	DESIGN	1.3532649346622011E-6	DEFECT	2.431038813990879E-7	DOCUMENTATION	1.0334119762328232E-7	TEST	7.662923652018534E-8	IMPLEMENTATION
//private String propertyName;	WITHOUT_CLASSIFICATION	0.996975145786498	WITHOUT_CLASSIFICATION	0.00291395765967795	DESIGN	7.929543466005775E-5	DEFECT	1.7867363127009158E-5	DOCUMENTATION	1.3514453748825053E-5	TEST	2.193022879314587E-7	IMPLEMENTATION
/*public PropertyProjection project() {	WITHOUT_CLASSIFICATION	0.972526167948065	WITHOUT_CLASSIFICATION	0.02657578123121593	DESIGN	7.198856115425817E-4	DEFECT	9.112146525767922E-5	DOCUMENTATION	8.3529455518112E-5	IMPLEMENTATION	3.5142884007698003E-6	TEST
//String[] fk = StringHelper.qualify( "collection_", cp.getKeyColumnNames() );	WITHOUT_CLASSIFICATION	0.9999996898407375	WITHOUT_CLASSIFICATION	1.3066534784045637E-7	DESIGN	1.1831981737660611E-7	IMPLEMENTATION	5.0609474899781883E-8	DEFECT	8.03734152994237E-9	TEST	2.527280935095712E-9	DOCUMENTATION
//" collection_ where " +	WITHOUT_CLASSIFICATION	0.9999913690276268	WITHOUT_CLASSIFICATION	6.633050885711989E-6	DESIGN	1.2665530659786925E-6	IMPLEMENTATION	4.5175332345484456E-7	DEFECT	1.8075418304238847E-7	TEST	9.886091498328634E-8	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9994608767660902	WITHOUT_CLASSIFICATION	2.697962381420469E-4	IMPLEMENTATION	2.5092763004388823E-4	DESIGN	1.2170135674610834E-5	DEFECT	3.490085505298668E-6	DOCUMENTATION	2.7391445438092096E-6	TEST
//unsupported	WITHOUT_CLASSIFICATION	0.9994608767660902	WITHOUT_CLASSIFICATION	2.697962381420469E-4	IMPLEMENTATION	2.5092763004388823E-4	DESIGN	1.2170135674610834E-5	DEFECT	3.490085505298668E-6	DOCUMENTATION	2.7391445438092096E-6	TEST
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9966546532891416	WITHOUT_CLASSIFICATION	0.003343570371608247	DESIGN	1.3532649346622011E-6	DEFECT	2.431038813990879E-7	DOCUMENTATION	1.0334119762328232E-7	TEST	7.662923652018534E-8	IMPLEMENTATION
//the following two lines were added to ensure that this.params is not null, which //can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.999937061207975	WITHOUT_CLASSIFICATION	2.3509678923202076E-5	TEST	2.0207333922775178E-5	DESIGN	1.3636589360233039E-5	IMPLEMENTATION	5.538544552728086E-6	DEFECT	4.664526591338207E-8	DOCUMENTATION
//with two-deep subqueries, the same alias would get generated for //both using the old method (criteriaQuery.generateSQLAlias()), so //that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.8982046633195586	WITHOUT_CLASSIFICATION	0.10178116908350866	DESIGN	1.1866128401019314E-5	TEST	2.1043618907869624E-6	DEFECT	1.918605136741151E-7	IMPLEMENTATION	5.2461271070671485E-9	DOCUMENTATION
//implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.9803900396919075	WITHOUT_CLASSIFICATION	0.017276071761199708	DESIGN	0.0020804973782414106	IMPLEMENTATION	2.069121556337478E-4	TEST	3.639446950887366E-5	DEFECT	1.0084543508540605E-5	DOCUMENTATION
//pull off the last ", "	WITHOUT_CLASSIFICATION	0.9999996926728354	WITHOUT_CLASSIFICATION	1.3066901529881945E-7	DESIGN	6.44634875779943E-8	TEST	6.145970882705195E-8	IMPLEMENTATION	3.341067339542657E-8	DEFECT	1.732427953360723E-8	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999385300274085	WITHOUT_CLASSIFICATION	5.156186486687925E-5	DESIGN	8.233168391626407E-6	DEFECT	7.299143659018547E-7	TEST	5.468764689513189E-7	DOCUMENTATION	3.9814849820329755E-7	IMPLEMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.9999994439385474	WITHOUT_CLASSIFICATION	4.262337468887874E-7	DESIGN	6.323610608275357E-8	DEFECT	3.522655945795093E-8	DOCUMENTATION	2.336091045002378E-8	IMPLEMENTATION	8.004129560037813E-9	TEST
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource)	WITHOUT_CLASSIFICATION	0.9902089649138882	WITHOUT_CLASSIFICATION	0.009788825218717124	DESIGN	1.9207443661586394E-6	DEFECT	1.6176951834307695E-7	DOCUMENTATION	1.0952378618449181E-7	IMPLEMENTATION	1.782972407555451E-8	TEST
// NOT_SUPPORTED_SHOULD_USE_JDBC3_PreparedStatement.getGeneratedKeys_method	WITHOUT_CLASSIFICATION	0.9999771743609494	WITHOUT_CLASSIFICATION	1.5412790235656426E-5	DESIGN	6.589368140042725E-6	IMPLEMENTATION	4.085352993020745E-7	DEFECT	3.759789727058923E-7	TEST	3.896640292678462E-8	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999999999471333	WITHOUT_CLASSIFICATION	4.882445091349613E-11	DESIGN	2.8567515678132085E-12	DOCUMENTATION	9.322527740574719E-13	IMPLEMENTATION	1.2923903500621215E-13	DEFECT	1.2403149435190322E-13	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999935489753967	WITHOUT_CLASSIFICATION	4.814608865717508E-6	IMPLEMENTATION	1.1126470527074986E-6	DESIGN	2.611632497615637E-7	DEFECT	2.5039091598603353E-7	DOCUMENTATION	1.221451902113938E-8	TEST
// Oracle did add support for ANSI CASE statements in 9i	WITHOUT_CLASSIFICATION	0.9999985392763981	WITHOUT_CLASSIFICATION	1.4207941501417317E-6	DESIGN	2.5732900623520842E-8	IMPLEMENTATION	6.638180593033562E-9	DOCUMENTATION	4.905587457006077E-9	DEFECT	2.652783028203614E-9	TEST
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999424565465947	WITHOUT_CLASSIFICATION	4.774716973503218E-5	DEFECT	4.8150344789379784E-6	DESIGN	4.7495611317287574E-6	IMPLEMENTATION	1.3771158644348418E-7	DOCUMENTATION	9.397647300416729E-8	TEST
// Informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.999828448597095	WITHOUT_CLASSIFICATION	1.6286743963783276E-4	DEFECT	5.741518805218685E-6	DESIGN	2.637716154087651E-6	TEST	2.0571223946904987E-7	DOCUMENTATION	9.901606836942277E-8	IMPLEMENTATION
// or BYTE // or TEXT? // or MONEY	WITHOUT_CLASSIFICATION	0.9999685478378587	WITHOUT_CLASSIFICATION	1.4347628181361343E-5	DESIGN	9.858455823050652E-6	IMPLEMENTATION	4.2573261957393184E-6	DEFECT	2.3754141927936266E-6	TEST	6.133377483941644E-7	DOCUMENTATION
// strip table-owner because Informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.9999999949366363	WITHOUT_CLASSIFICATION	4.454606089622087E-9	DESIGN	5.812477133882204E-10	IMPLEMENTATION	2.1298960815217976E-11	DEFECT	4.716649404588874E-12	DOCUMENTATION	1.494139994975234E-12	TEST
// build the map of standard ANSI SQL aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999990767669523	WITHOUT_CLASSIFICATION	8.646816112017314E-7	IMPLEMENTATION	3.561889144640228E-8	DEFECT	2.1271913729856357E-8	DESIGN	1.2854905346056953E-9	DOCUMENTATION	3.7514092376506556E-10	TEST
//pre H3.2 behavior: super.getReturnType(ct, m);	WITHOUT_CLASSIFICATION	0.9990591685790805	WITHOUT_CLASSIFICATION	9.112212811123786E-4	DESIGN	2.936839745298728E-5	DEFECT	9.423748748555952E-8	TEST	8.538615874937521E-8	DOCUMENTATION	6.211870797260177E-8	IMPLEMENTATION
// finally use the sqltype if == on Hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.999988721175895	WITHOUT_CLASSIFICATION	1.1268662459433609E-5	DESIGN	1.0039769317116362E-8	DEFECT	7.708835922201878E-11	TEST	3.0528288223884224E-11	DOCUMENTATION	1.4259647264201589E-11	IMPLEMENTATION
//because numeric can be anything	WITHOUT_CLASSIFICATION	0.9999853410042393	WITHOUT_CLASSIFICATION	7.526388601755724E-6	DESIGN	3.3642272942198487E-6	DEFECT	2.3341144199205953E-6	DOCUMENTATION	1.3866753293395357E-6	IMPLEMENTATION	4.7590115458540424E-8	TEST
// constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999865025529205	WITHOUT_CLASSIFICATION	1.2276028850114882E-5	DESIGN	1.131405933866601E-6	IMPLEMENTATION	5.703805609106682E-8	DEFECT	2.5742105961369776E-8	TEST	7.232133391958376E-9	DOCUMENTATION
// standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.9999611920349328	WITHOUT_CLASSIFICATION	2.5550566110240402E-5	DESIGN	1.2064906309865903E-5	IMPLEMENTATION	1.1702765935964873E-6	DEFECT	1.7300435931119965E-8	DOCUMENTATION	4.915617580701743E-9	TEST
//map second/minute/hour/day/month/year to ANSI extract(), override on subclasses	WITHOUT_CLASSIFICATION	0.9999822381684714	WITHOUT_CLASSIFICATION	9.846129844918084E-6	IMPLEMENTATION	7.843102930159046E-6	DESIGN	5.239365429140412E-8	DOCUMENTATION	1.403751626320116E-8	DEFECT	6.1675826909186714E-9	TEST
// register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.9991111333705995	WITHOUT_CLASSIFICATION	8.886577660011123E-4	DESIGN	1.858468544634527E-7	IMPLEMENTATION	1.7922290231454714E-8	DOCUMENTATION	3.0254333160256687E-9	TEST	2.0688212694280385E-9	DEFECT
// database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999032921623396	WITHOUT_CLASSIFICATION	7.582384384240496E-5	IMPLEMENTATION	1.3118981892031783E-5	DEFECT	7.429916727639373E-6	DESIGN	1.925948517241807E-7	DOCUMENTATION	1.425003465356659E-7	TEST
// hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998249202131739	WITHOUT_CLASSIFICATION	9.730270627724208E-5	DESIGN	7.51239501043019E-5	IMPLEMENTATION	1.372105499506337E-6	TEST	9.608755413751988E-7	DEFECT	3.201494037651533E-7	DOCUMENTATION
// keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999990295876922	WITHOUT_CLASSIFICATION	8.797569400428313E-6	IMPLEMENTATION	6.013873595851752E-7	DESIGN	2.344524486802599E-7	DEFECT	4.297175303847537E-8	DOCUMENTATION	2.774211632147498E-8	TEST
// native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998041487283222	WITHOUT_CLASSIFICATION	1.766134710763743E-4	DESIGN	1.4347970898034084E-5	IMPLEMENTATION	4.240756691038633E-6	DEFECT	4.3935696956607927E-7	DOCUMENTATION	2.097160428244592E-7	TEST
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999592097014769	WITHOUT_CLASSIFICATION	3.815604493557518E-5	IMPLEMENTATION	2.222117643120781E-6	DESIGN	1.6696880860294795E-7	TEST	1.5908371210428737E-7	DEFECT	8.608342373969827E-8	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999364917138923	WITHOUT_CLASSIFICATION	3.2397152017925546E-5	DESIGN	3.0119476400860493E-5	IMPLEMENTATION	4.810119138377068E-7	DEFECT	2.708891841358298E-7	DOCUMENTATION	2.3975659090092287E-7	TEST
// GUID support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999448362232715	WITHOUT_CLASSIFICATION	3.9198696932206796E-5	IMPLEMENTATION	1.536142098695145E-5	DESIGN	2.965002275342238E-7	DEFECT	1.9202176227907804E-7	DOCUMENTATION	1.1513681958320684E-7	TEST
// limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999985253833457	WITHOUT_CLASSIFICATION	6.490119359306484E-7	IMPLEMENTATION	6.423367671080324E-7	DESIGN	1.648963955952135E-7	DEFECT	1.1852762146655757E-8	TEST	6.51879355578662E-9	DOCUMENTATION
// by default we report no support	WITHOUT_CLASSIFICATION	0.9999342323905914	WITHOUT_CLASSIFICATION	6.0903921044839263E-5	DESIGN	3.978748587394081E-6	IMPLEMENTATION	7.241589463047061E-7	DEFECT	1.3674693585432254E-7	DOCUMENTATION	2.40338939970598E-8	TEST
// by default we report no support for NOWAIT lock semantics	WITHOUT_CLASSIFICATION	0.9976815026902207	WITHOUT_CLASSIFICATION	0.002269330804509292	DESIGN	2.6011868431467653E-5	IMPLEMENTATION	2.0188809228245303E-5	DEFECT	2.626679126097322E-6	DOCUMENTATION	3.3914848428628726E-7	TEST
// table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999941352306966	WITHOUT_CLASSIFICATION	5.313060010949867E-6	IMPLEMENTATION	4.6769843229438446E-7	DESIGN	5.689319055651953E-8	DEFECT	2.1362651868962957E-8	TEST	5.755017591763431E-9	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999906730349846	WITHOUT_CLASSIFICATION	8.648962424274665E-6	DESIGN	6.21924147382898E-7	IMPLEMENTATION	4.45148481771676E-8	TEST	8.813254919461422E-9	DEFECT	2.7503406835310384E-9	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999552218405507	WITHOUT_CLASSIFICATION	3.365845623214956E-5	IMPLEMENTATION	1.0813349029399087E-5	DESIGN	2.4954992011428156E-7	DEFECT	3.8851423611135616E-8	DOCUMENTATION	1.795284401951611E-8	TEST
// current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999818308676369	WITHOUT_CLASSIFICATION	1.7197992494964687E-5	IMPLEMENTATION	5.02648443387193E-7	DEFECT	2.2725037796109665E-7	TEST	1.391451046693839E-7	DOCUMENTATION	1.0209594194615474E-7	DESIGN
// SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998380242744839	WITHOUT_CLASSIFICATION	1.369220677188459E-4	DESIGN	2.0463128788446254E-5	IMPLEMENTATION	3.9088540144198906E-6	DEFECT	5.336700393972439E-7	DOCUMENTATION	1.4800495497799118E-7	TEST
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999916088939266	WITHOUT_CLASSIFICATION	6.3131598472462025E-6	IMPLEMENTATION	2.0033084611132814E-6	DESIGN	3.518159104318794E-8	DEFECT	2.064287122422188E-8	TEST	1.8813302791025006E-8	DOCUMENTATION
// identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999439748911952	WITHOUT_CLASSIFICATION	5.1230297899037004E-5	IMPLEMENTATION	4.510786126620221E-6	DESIGN	1.089688861391051E-7	TEST	1.0774267968486514E-7	DEFECT	6.731321335843134E-8	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999289805829086	WITHOUT_CLASSIFICATION	5.7532946854288854E-5	IMPLEMENTATION	1.2234148704236398E-5	DESIGN	6.594869245751577E-7	DEFECT	3.356197362632734E-7	DOCUMENTATION	2.572148720760011E-7	TEST
// grrr... for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.9999973688797633	WITHOUT_CLASSIFICATION	1.8807402832019542E-6	DESIGN	3.4784457375162145E-7	IMPLEMENTATION	3.0522843072753175E-7	DEFECT	6.080021128282802E-8	TEST	3.650673747928588E-8	DOCUMENTATION
// Informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999930287679533	WITHOUT_CLASSIFICATION	5.819523943644588E-6	IMPLEMENTATION	8.482510500015779E-7	DEFECT	2.0321457619748738E-7	DESIGN	9.2336547862345E-8	DOCUMENTATION	7.905928928623161E-9	TEST
// return false here, as most databases do not properly support this construct...	WITHOUT_CLASSIFICATION	0.7327912779922044	DESIGN	0.23019896160692968	WITHOUT_CLASSIFICATION	0.018476054345080088	IMPLEMENTATION	0.018338056486071515	DEFECT	1.915968417836804E-4	TEST	4.052727930516626E-6	DOCUMENTATION
// Mckoi has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.999986549452722	WITHOUT_CLASSIFICATION	1.057046520171506E-5	DESIGN	2.5826431228807305E-6	DEFECT	1.91464659577843E-7	IMPLEMENTATION	9.936978977990135E-8	DOCUMENTATION	6.604503968102724E-9	TEST
// Oracle8 and previous define only a "DATE" type which //      is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.9999999992648078	WITHOUT_CLASSIFICATION	6.97295672567695E-10	DESIGN	2.6726342747289143E-11	DOCUMENTATION	8.850243326079884E-12	IMPLEMENTATION	2.0472884091062114E-12	TEST	2.725275782647094E-13	DEFECT
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9987896193231218	WITHOUT_CLASSIFICATION	0.0012079645734439895	DESIGN	2.292352510899844E-6	TEST	6.893636489931647E-8	DEFECT	4.023436078232932E-8	DOCUMENTATION	1.458019752887048E-8	IMPLEMENTATION
//" cascade";	WITHOUT_CLASSIFICATION	0.9999786468170953	WITHOUT_CLASSIFICATION	1.0796186006255406E-5	DESIGN	9.360240519538251E-6	IMPLEMENTATION	6.130206062750489E-7	DOCUMENTATION	4.2304572853632817E-7	DEFECT	1.6069004414307455E-7	TEST
//trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.9999986177994473	WITHOUT_CLASSIFICATION	9.542556741421343E-7	IMPLEMENTATION	3.132343989022255E-7	DESIGN	8.070501303389893E-8	DEFECT	2.09208477654527E-8	DOCUMENTATION	1.3084618755666387E-8	TEST
/*public boolean dropTemporaryTableAfterUse() {	WITHOUT_CLASSIFICATION	0.9467039707316047	DESIGN	0.0532930448728604	WITHOUT_CLASSIFICATION	2.332739044536862E-6	DEFECT	3.5490355157611973E-7	DOCUMENTATION	2.2348169637550527E-7	TEST	7.327124227152339E-8	IMPLEMENTATION
// CHECK VIOLATION	WITHOUT_CLASSIFICATION	0.9999995704978991	WITHOUT_CLASSIFICATION	2.985384683826087E-7	DESIGN	5.364132277926497E-8	IMPLEMENTATION	4.854598727804455E-8	DEFECT	1.586447708903992E-8	DOCUMENTATION	1.291184528828674E-8	TEST
// UNIQUE VIOLATION	WITHOUT_CLASSIFICATION	0.9999969616888683	WITHOUT_CLASSIFICATION	2.094821018649263E-6	IMPLEMENTATION	5.161397633379944E-7	DEFECT	3.092262637548686E-7	DESIGN	6.879346258450147E-8	DOCUMENTATION	4.9330623378803685E-8	TEST
// FOREIGN KEY VIOLATION	WITHOUT_CLASSIFICATION	0.9999978395504531	WITHOUT_CLASSIFICATION	9.929694083007815E-7	DESIGN	8.062514754156749E-7	IMPLEMENTATION	1.6966950864743715E-7	DEFECT	1.1449387902382817E-7	TEST	7.706527564389155E-8	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999935489753967	WITHOUT_CLASSIFICATION	4.814608865717508E-6	IMPLEMENTATION	1.1126470527074986E-6	DESIGN	2.611632497615637E-7	DEFECT	2.5039091598603353E-7	DOCUMENTATION	1.221451902113938E-8	TEST
// NOT NULL VIOLATION	WITHOUT_CLASSIFICATION	0.9998709209496823	WITHOUT_CLASSIFICATION	1.1249946433631611E-4	DESIGN	9.982983174614601E-6	IMPLEMENTATION	3.0221544000968136E-6	DEFECT	2.4221847882850276E-6	TEST	1.1522636183731012E-6	DOCUMENTATION
// ALL OTHER	WITHOUT_CLASSIFICATION	0.9999949735687861	WITHOUT_CLASSIFICATION	3.030039564614873E-6	DESIGN	1.0557071321161284E-6	DEFECT	7.293778924127773E-7	IMPLEMENTATION	1.2827603584783204E-7	DOCUMENTATION	8.303058893476155E-8	TEST
// Register the type of the out param - PostgreSQL uses Types.OTHER	WITHOUT_CLASSIFICATION	0.9998933275597554	WITHOUT_CLASSIFICATION	1.0659517551737753E-4	DESIGN	4.90708132112454E-8	TEST	2.4453117423575066E-8	DEFECT	2.6692222646537894E-9	IMPLEMENTATION	1.0715743285298867E-9	DOCUMENTATION
// seems to not really... //	WITHOUT_CLASSIFICATION	0.9868397980149879	WITHOUT_CLASSIFICATION	0.010675750638965495	DEFECT	0.002482457287666894	DESIGN	1.1516302905705179E-6	IMPLEMENTATION	4.323718135985388E-7	TEST	4.1005627563725284E-7	DOCUMENTATION
// seems to have spotty LOB suppport	WITHOUT_CLASSIFICATION	0.9997557698874375	WITHOUT_CLASSIFICATION	2.403444614726025E-4	DESIGN	2.6099930638847635E-6	DEFECT	1.0414162227825903E-6	IMPLEMENTATION	1.6670301652479606E-7	DOCUMENTATION	6.75387865388718E-8	TEST
// HHH-2300	WITHOUT_CLASSIFICATION	0.9999796389522609	WITHOUT_CLASSIFICATION	1.660265966686816E-5	DESIGN	2.6657555484617355E-6	DEFECT	6.657991943600781E-7	IMPLEMENTATION	2.2655535257384257E-7	DOCUMENTATION	2.0027797713994886E-7	TEST
// ignore (probably H2 not in the classpath)	WITHOUT_CLASSIFICATION	0.9991095957481649	WITHOUT_CLASSIFICATION	8.749737361618756E-4	DESIGN	1.5221191526317908E-5	DEFECT	1.324406486338943E-7	DOCUMENTATION	7.252552606833732E-8	IMPLEMENTATION	4.357972210806109E-9	TEST
// Numeric Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999824284655293	WITHOUT_CLASSIFICATION	1.6116103364457126E-5	IMPLEMENTATION	7.41371699237178E-7	DESIGN	5.56499477575576E-7	DEFECT	1.1231650818270178E-7	DOCUMENTATION	4.524342118651421E-8	TEST
// String Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999952983635622	WITHOUT_CLASSIFICATION	2.471888139797455E-6	IMPLEMENTATION	1.5432208048770687E-6	DESIGN	6.001568035719404E-7	DEFECT	7.239211943721854E-8	DOCUMENTATION	1.3978570220251904E-8	TEST
// Time and Date Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999964507061516	WITHOUT_CLASSIFICATION	1.6878933710867234E-6	IMPLEMENTATION	1.3647928656390329E-6	DESIGN	2.5622006099826926E-7	DEFECT	2.072478624007324E-7	DOCUMENTATION	3.3139688226864835E-8	TEST
// System Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999814760359593	WITHOUT_CLASSIFICATION	1.0334666635109546E-5	IMPLEMENTATION	5.69457446201233E-6	DESIGN	2.1633253517434525E-6	DEFECT	2.1535473661352026E-7	DOCUMENTATION	1.160428552015704E-7	TEST
// not null is implicit	WITHOUT_CLASSIFICATION	0.9932466795496067	WITHOUT_CLASSIFICATION	0.0065453505695254625	DESIGN	1.1407035732501834E-4	DEFECT	8.407495148960387E-5	IMPLEMENTATION	9.029228801617199E-6	TEST	7.953432517606525E-7	DOCUMENTATION
// 23000: Check constraint violation: {0} // 23001: Unique index or primary key violation: {0}	WITHOUT_CLASSIFICATION	0.9999999972950409	WITHOUT_CLASSIFICATION	2.114800261666148E-9	DEFECT	4.2113834386992335E-10	IMPLEMENTATION	9.520748981849601E-11	DESIGN	5.4036873012968376E-11	DOCUMENTATION	1.977625782477573E-11	TEST
// Display the dialect version.	WITHOUT_CLASSIFICATION	0.9961835606443531	WITHOUT_CLASSIFICATION	0.0037769236646832995	IMPLEMENTATION	3.6198596831506595E-5	DESIGN	2.963888950258559E-6	DEFECT	2.7095681254324306E-7	DOCUMENTATION	8.224836935215568E-8	TEST
// The RDMS concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9999770096295483	WITHOUT_CLASSIFICATION	2.1805791344428054E-5	IMPLEMENTATION	1.0066521759638158E-6	DEFECT	1.6118869247451643E-7	DESIGN	1.192742091153674E-8	DOCUMENTATION	4.810817922840067E-9	TEST
// Dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999942453091829	WITHOUT_CLASSIFICATION	5.141755120803364E-6	IMPLEMENTATION	5.568214989589175E-7	DESIGN	4.1205039201195623E-8	TEST	1.0724435828472654E-8	DEFECT	4.1847222123495715E-9	DOCUMENTATION
// Original Dialect.java returns " for update";	WITHOUT_CLASSIFICATION	0.9999962713616558	WITHOUT_CLASSIFICATION	3.638419281582579E-6	DESIGN	8.154171273305348E-8	DEFECT	5.94268739609027E-9	IMPLEMENTATION	2.3301254449024878E-9	DOCUMENTATION	4.045370883900232E-10	TEST
// Verify the state of this new method in Hibernate 3.0 Dialect.java	WITHOUT_CLASSIFICATION	0.9738250223089252	WITHOUT_CLASSIFICATION	0.026167622097724715	DESIGN	5.272528147530188E-6	DEFECT	1.3442170698945178E-6	TEST	7.284900351077611E-7	DOCUMENTATION	1.0358097486181654E-8	IMPLEMENTATION
// Origial Dialect.java returns true;	WITHOUT_CLASSIFICATION	0.99999175796132	WITHOUT_CLASSIFICATION	7.958819354724206E-6	DESIGN	2.620882546257626E-7	DEFECT	1.4768557697027746E-8	IMPLEMENTATION	5.26950372322922E-9	DOCUMENTATION	1.0930092972637526E-9	TEST
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.999999971740363	WITHOUT_CLASSIFICATION	2.393838249023456E-8	DESIGN	3.2765535307320487E-9	IMPLEMENTATION	6.707470071420502E-10	DOCUMENTATION	3.64287456141188E-10	DEFECT	9.666472152161922E-12	TEST
// *** Sequence methods - start. The RDMS dialect needs these	WITHOUT_CLASSIFICATION	0.9999869704438434	WITHOUT_CLASSIFICATION	8.872650551997621E-6	DESIGN	2.155449325751955E-6	IMPLEMENTATION	1.1333588800200357E-6	DEFECT	6.468604372483452E-7	TEST	2.2123696161957525E-7	DOCUMENTATION
// methods to make it possible to use the Native Id generator	WITHOUT_CLASSIFICATION	0.9995381563315345	WITHOUT_CLASSIFICATION	4.3803281670948995E-4	DESIGN	2.35513375884501E-5	IMPLEMENTATION	1.5368462742436633E-7	DEFECT	9.968568338449454E-8	TEST	6.143856767869565E-9	DOCUMENTATION
// The where clause was added to eliminate this statement from Brute Force Searches.	WITHOUT_CLASSIFICATION	0.999987945247588	WITHOUT_CLASSIFICATION	1.196483721754801E-5	DESIGN	5.90104910994785E-8	DEFECT	2.39836148102417E-8	DOCUMENTATION	6.497030642790568E-9	TEST	4.240579753194316E-10	IMPLEMENTATION
// *** Sequence methods - end	WITHOUT_CLASSIFICATION	0.9843693551586148	WITHOUT_CLASSIFICATION	0.01558427282041098	DESIGN	1.773300466656084E-5	DOCUMENTATION	1.520209345797256E-5	DEFECT	9.908427248394999E-6	IMPLEMENTATION	3.5284956013527814E-6	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999935489753967	WITHOUT_CLASSIFICATION	4.814608865717508E-6	IMPLEMENTATION	1.1126470527074986E-6	DESIGN	2.611632497615637E-7	DEFECT	2.5039091598603353E-7	DOCUMENTATION	1.221451902113938E-8	TEST
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9987896193231218	WITHOUT_CLASSIFICATION	0.0012079645734439895	DESIGN	2.292352510899844E-6	TEST	6.893636489931647E-8	DEFECT	4.023436078232932E-8	DOCUMENTATION	1.458019752887048E-8	IMPLEMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9986784140472452	WITHOUT_CLASSIFICATION	0.0013091428228207754	DESIGN	1.2310825826094876E-5	DEFECT	6.794927562182641E-8	IMPLEMENTATION	5.292841315485217E-8	TEST	1.1426419081459852E-8	DOCUMENTATION
// Used with DROP TABLE to delete all records in the table.	WITHOUT_CLASSIFICATION	0.9999992411550505	WITHOUT_CLASSIFICATION	7.192255134198023E-7	IMPLEMENTATION	3.8420806011067764E-8	DESIGN	9.510656084916949E-10	DEFECT	2.1073724561842214E-10	DOCUMENTATION	3.682727747217433E-11	TEST
// RDMS supports the UNION ALL clause.	WITHOUT_CLASSIFICATION	0.9999995492334685	WITHOUT_CLASSIFICATION	3.922957550779675E-7	IMPLEMENTATION	2.945202757205887E-8	DESIGN	2.7441083627016395E-8	DEFECT	1.202660184699547E-9	DOCUMENTATION	3.7500499702566416E-10	TEST
// RDMS has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999888742185521	WITHOUT_CLASSIFICATION	8.751667494325185E-6	DEFECT	1.996486538535058E-6	DESIGN	2.951549032808324E-7	IMPLEMENTATION	7.536711989643417E-8	DOCUMENTATION	7.1053918062296764E-9	TEST
// Multi-param dialect functions...	WITHOUT_CLASSIFICATION	0.999996622214021	WITHOUT_CLASSIFICATION	1.5252467407345622E-6	IMPLEMENTATION	1.1821219117001029E-6	DEFECT	6.650217944785024E-7	DESIGN	3.3128147565529303E-9	DOCUMENTATION	2.0827173969151366E-9	TEST
// function templates	WITHOUT_CLASSIFICATION	0.9999980943031298	WITHOUT_CLASSIFICATION	9.769717598519022E-7	IMPLEMENTATION	6.641540057228063E-7	DESIGN	1.5559465792648015E-7	DEFECT	8.187869660403666E-8	TEST	2.709775015109968E-8	DOCUMENTATION
//not null is implicit	WITHOUT_CLASSIFICATION	0.9966349731683193	WITHOUT_CLASSIFICATION	0.0032523808960542217	DESIGN	1.0185681108916439E-4	DEFECT	7.68852622922566E-6	TEST	2.2659564732235226E-6	IMPLEMENTATION	8.346418348963311E-7	DOCUMENTATION
// this assumes schema support, which is present in 1.8.0 and later...	WITHOUT_CLASSIFICATION	0.9992992423354108	WITHOUT_CLASSIFICATION	5.142005636461027E-4	DESIGN	1.844505606292526E-4	DEFECT	1.4441919883335891E-6	DOCUMENTATION	4.86745276652334E-7	TEST	1.756030490181033E-7	IMPLEMENTATION
// HSQLDB only supports READ_UNCOMMITTED transaction isolation	WITHOUT_CLASSIFICATION	0.9999994031164401	WITHOUT_CLASSIFICATION	4.93078033417556E-7	DESIGN	9.325267597331179E-8	DEFECT	7.763158225347098E-9	IMPLEMENTATION	2.535356935464961E-9	DOCUMENTATION	2.543354479275394E-10	TEST
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999952358030708	WITHOUT_CLASSIFICATION	2.257649121657488E-6	DEFECT	1.2611494400506728E-6	IMPLEMENTATION	1.2353069929279454E-6	DESIGN	5.069524558200116E-9	TEST	5.021850084238325E-9	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999883469459855	WITHOUT_CLASSIFICATION	4.788318558145503E-6	DEFECT	3.558866762486453E-6	DESIGN	3.2840499584358395E-6	IMPLEMENTATION	1.780611622680719E-8	DOCUMENTATION	4.012619199939672E-9	TEST
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999975073160188	WITHOUT_CLASSIFICATION	9.899750174982868E-7	DEFECT	9.528865290741802E-7	DESIGN	5.458085313378272E-7	IMPLEMENTATION	2.3735650187136347E-9	DOCUMENTATION	1.6403383836718437E-9	TEST
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999940193468111	WITHOUT_CLASSIFICATION	5.937947069404373E-6	DESIGN	3.341257046417861E-8	IMPLEMENTATION	6.089065517744564E-9	DEFECT	1.630561913225847E-9	TEST	1.5739215674111288E-9	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999935489753967	WITHOUT_CLASSIFICATION	4.814608865717508E-6	IMPLEMENTATION	1.1126470527074986E-6	DESIGN	2.611632497615637E-7	DEFECT	2.5039091598603353E-7	DOCUMENTATION	1.221451902113938E-8	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999935489753967	WITHOUT_CLASSIFICATION	4.814608865717508E-6	IMPLEMENTATION	1.1126470527074986E-6	DESIGN	2.611632497615637E-7	DEFECT	2.5039091598603353E-7	DOCUMENTATION	1.221451902113938E-8	TEST
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9787813203589935	WITHOUT_CLASSIFICATION	0.0212136578509265	DESIGN	4.577404246792862E-6	DEFECT	4.0198571575369154E-7	IMPLEMENTATION	2.6648997113101962E-8	DOCUMENTATION	1.575112035896672E-8	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// TimesTen has no BLOB/CLOB support, but these types may be suitable  // for some applications. The length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.9987251185564509	WITHOUT_CLASSIFICATION	0.001255576237339499	IMPLEMENTATION	9.20194468614354E-6	TEST	6.424619813712614E-6	DEFECT	2.502599674484122E-6	DESIGN	1.1760420351135775E-6	DOCUMENTATION
// new methods in dialect3	WITHOUT_CLASSIFICATION	0.9998053196433481	WITHOUT_CLASSIFICATION	1.917237765956301E-4	DESIGN	1.6137421404585757E-6	IMPLEMENTATION	1.1607149951830574E-6	DEFECT	1.1714448743241651E-7	DOCUMENTATION	6.497843327408024E-8	TEST
/*public boolean supportsForUpdateNowait() {	WITHOUT_CLASSIFICATION	0.9996706354083217	WITHOUT_CLASSIFICATION	3.251599813828561E-4	DESIGN	3.104892593740017E-6	IMPLEMENTATION	8.129035116265913E-7	DEFECT	2.1924535722682867E-7	DOCUMENTATION	6.756883283276805E-8	TEST
// TimesTen has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999865212207885	WITHOUT_CLASSIFICATION	1.0454140240588124E-5	DEFECT	1.5203509659644253E-6	DESIGN	1.2676484784829818E-6	IMPLEMENTATION	1.838939349042157E-7	DOCUMENTATION	5.2745591476962386E-8	TEST
// iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.999999927534251	WITHOUT_CLASSIFICATION	7.087392806313858E-8	DESIGN	1.0754431391108823E-9	TEST	3.470693807290515E-10	DEFECT	1.5514783612496434E-10	IMPLEMENTATION	1.4160608719742819E-11	DOCUMENTATION
// add new ordered map	WITHOUT_CLASSIFICATION	0.9999995398854572	WITHOUT_CLASSIFICATION	4.007677763646916E-7	IMPLEMENTATION	3.719540704278605E-8	DESIGN	7.89856730916985E-9	DEFECT	7.147970369649335E-9	DOCUMENTATION	7.10482179936559E-9	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999935489753967	WITHOUT_CLASSIFICATION	4.814608865717508E-6	IMPLEMENTATION	1.1126470527074986E-6	DESIGN	2.611632497615637E-7	DEFECT	2.5039091598603353E-7	DOCUMENTATION	1.221451902113938E-8	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999975538620575	WITHOUT_CLASSIFICATION	2.252412351367154E-6	DESIGN	1.9173886302216E-7	IMPLEMENTATION	1.6936485141126463E-9	DEFECT	2.0337860908025903E-10	DOCUMENTATION	8.970113115043021E-11	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
//registerColumnType data types	WITHOUT_CLASSIFICATION	0.9998919839410227	WITHOUT_CLASSIFICATION	1.0757589422510317E-4	DESIGN	3.135208131472331E-7	DEFECT	6.071449023439997E-8	IMPLEMENTATION	4.93109708722619E-8	TEST	1.661847786710019E-8	DOCUMENTATION
// hibernate seems to ignore this type...	WITHOUT_CLASSIFICATION	0.9998752034382443	WITHOUT_CLASSIFICATION	1.2144427400728917E-4	DESIGN	1.745914779053933E-6	DEFECT	1.3921202515622044E-6	IMPLEMENTATION	1.315089317554319E-7	DOCUMENTATION	8.274378603736832E-8	TEST
// IBID for current_time and current_date	WITHOUT_CLASSIFICATION	0.9999987769211085	WITHOUT_CLASSIFICATION	7.750706980873132E-7	IMPLEMENTATION	2.3358301827801077E-7	DEFECT	1.1537635272094395E-7	DESIGN	9.305988724034449E-8	DOCUMENTATION	5.988935161395144E-9	TEST
// Tell hibernate to use getBytes instead of getBinaryStream	WITHOUT_CLASSIFICATION	0.999527927861208	WITHOUT_CLASSIFICATION	4.701226262320819E-4	DESIGN	1.6804889154766036E-6	DEFECT	1.6489782867263136E-7	TEST	7.581420326408587E-8	IMPLEMENTATION	2.831161262610799E-8	DOCUMENTATION
// No batch statements	WITHOUT_CLASSIFICATION	0.9999997809580664	WITHOUT_CLASSIFICATION	1.598806983177234E-7	DESIGN	2.1002358052770986E-8	DOCUMENTATION	1.412535660752983E-8	IMPLEMENTATION	1.2017862834816593E-8	DEFECT	1.201565776165023E-8	TEST
/*	WITHOUT_CLASSIFICATION	0.9335139475304616	WITHOUT_CLASSIFICATION	0.057420572938627165	DESIGN	0.005812814405640206	DEFECT	0.0029924136177781986	IMPLEMENTATION	1.5574926612179705E-4	DOCUMENTATION	1.0450224137110372E-4	TEST
//no pointbase BIT	WITHOUT_CLASSIFICATION	0.9999972262255507	WITHOUT_CLASSIFICATION	1.4375602361251014E-6	IMPLEMENTATION	6.79104345004177E-7	DEFECT	3.4362424015244987E-7	DESIGN	2.993634145029967E-7	DOCUMENTATION	1.4122213451696599E-8	TEST
//no pointbase TINYINT	WITHOUT_CLASSIFICATION	0.9999996587425382	WITHOUT_CLASSIFICATION	1.2857253636929142E-7	IMPLEMENTATION	9.774092750353446E-8	DESIGN	8.004602227260282E-8	DOCUMENTATION	2.835568784573477E-8	DEFECT	6.542287964788958E-9	TEST
// Pointbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999953668737643	WITHOUT_CLASSIFICATION	2.3876220550558007E-6	DESIGN	1.996846462165887E-6	DEFECT	1.6959905789226533E-7	IMPLEMENTATION	7.509405914962057E-8	DOCUMENTATION	3.9646014202631785E-9	TEST
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9987896193231218	WITHOUT_CLASSIFICATION	0.0012079645734439895	DESIGN	2.292352510899844E-6	TEST	6.893636489931647E-8	DEFECT	4.023436078232932E-8	DOCUMENTATION	1.458019752887048E-8	IMPLEMENTATION
// The current_timestamp is more accurate, but only known to be supported // in SQL Server 7.0 and later (i.e., Sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.7306702218307015	WITHOUT_CLASSIFICATION	0.19808102213374584	DESIGN	0.07121791795954886	DEFECT	1.4607735999585997E-5	TEST	1.012074112876009E-5	IMPLEMENTATION	6.1095988753333805E-6	DOCUMENTATION
// SQL Server (at least up through 2005) does not support defining // cascade delete constraints which can circel back to the mutating // table	WITHOUT_CLASSIFICATION	0.9999595240003689	WITHOUT_CLASSIFICATION	4.043240819275695E-5	DESIGN	2.3310562239746378E-8	IMPLEMENTATION	9.26383076411143E-9	TEST	8.973148443191975E-9	DEFECT	2.04389690316786E-9	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9989925975668235	WITHOUT_CLASSIFICATION	7.465624801027355E-4	DEFECT	2.2318647497358344E-4	DESIGN	3.674701548141477E-5	TEST	8.962127974187079E-7	DOCUMENTATION	1.0249821467985703E-8	IMPLEMENTATION
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9987896193231218	WITHOUT_CLASSIFICATION	0.0012079645734439895	DESIGN	2.292352510899844E-6	TEST	6.893636489931647E-8	DEFECT	4.023436078232932E-8	DOCUMENTATION	1.458019752887048E-8	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999894856038092	WITHOUT_CLASSIFICATION	1.0405105719549037E-5	DESIGN	5.958278318684424E-8	DEFECT	3.785121245720946E-8	DOCUMENTATION	6.085387420012418E-9	TEST	5.7710881352984594E-9	IMPLEMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999975538620575	WITHOUT_CLASSIFICATION	2.252412351367154E-6	DESIGN	1.9173886302216E-7	IMPLEMENTATION	1.6936485141126463E-9	DEFECT	2.0337860908025903E-10	DOCUMENTATION	8.970113115043021E-11	TEST
//Sybase BIT type does not support null values	WITHOUT_CLASSIFICATION	0.94876025546492	WITHOUT_CLASSIFICATION	0.05040073861905687	DESIGN	8.196934012843528E-4	DEFECT	9.049845076784012E-6	TEST	6.975511910777694E-6	IMPLEMENTATION	3.287157751154341E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999935489753967	WITHOUT_CLASSIFICATION	4.814608865717508E-6	IMPLEMENTATION	1.1126470527074986E-6	DESIGN	2.611632497615637E-7	DEFECT	2.5039091598603353E-7	DOCUMENTATION	1.221451902113938E-8	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
//not null ... (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.962108480290803	WITHOUT_CLASSIFICATION	0.036540649414823094	DESIGN	8.20282904212479E-4	DEFECT	4.942813044455569E-4	TEST	3.508882716456789E-5	IMPLEMENTATION	1.2172585512114593E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999935489753967	WITHOUT_CLASSIFICATION	4.814608865717508E-6	IMPLEMENTATION	1.1126470527074986E-6	DESIGN	2.611632497615637E-7	DEFECT	2.5039091598603353E-7	DOCUMENTATION	1.221451902113938E-8	TEST
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.7946935488965735	WITHOUT_CLASSIFICATION	0.20527042431960238	DESIGN	3.1058928192853625E-5	DEFECT	4.41188701823752E-6	TEST	5.395095007457949E-7	IMPLEMENTATION	1.645911199758678E-8	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999952358030708	WITHOUT_CLASSIFICATION	2.257649121657488E-6	DEFECT	1.2611494400506728E-6	IMPLEMENTATION	1.2353069929279454E-6	DESIGN	5.069524558200116E-9	TEST	5.021850084238325E-9	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999883469459855	WITHOUT_CLASSIFICATION	4.788318558145503E-6	DEFECT	3.558866762486453E-6	DESIGN	3.2840499584358395E-6	IMPLEMENTATION	1.780611622680719E-8	DOCUMENTATION	4.012619199939672E-9	TEST
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999975073160188	WITHOUT_CLASSIFICATION	9.899750174982868E-7	DEFECT	9.528865290741802E-7	DESIGN	5.458085313378272E-7	IMPLEMENTATION	2.3735650187136347E-9	DOCUMENTATION	1.6403383836718437E-9	TEST
// add another (inner) nested select // add the main query // close off the inner nested select	WITHOUT_CLASSIFICATION	0.999999995810723	WITHOUT_CLASSIFICATION	3.4523449181822715E-9	TEST	2.9283881818207493E-10	DEFECT	2.2229527962021808E-10	DOCUMENTATION	1.9251205971605019E-10	DESIGN	2.9285816452311165E-11	IMPLEMENTATION
// add the main query	WITHOUT_CLASSIFICATION	0.9999705575148653	WITHOUT_CLASSIFICATION	2.8603295450894128E-5	DESIGN	3.593920931296867E-7	IMPLEMENTATION	3.419909341089374E-7	DOCUMENTATION	7.41950733673908E-8	DEFECT	6.361158309518542E-8	TEST
//add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.9999992163450612	WITHOUT_CLASSIFICATION	6.760511740495537E-7	DESIGN	4.440020899863644E-8	IMPLEMENTATION	3.089151476362947E-8	DOCUMENTATION	1.7950557979088002E-8	TEST	1.4361483056983804E-8	DEFECT
// This assumes you will want to ignore any update counts 	WITHOUT_CLASSIFICATION	0.9999993714518957	WITHOUT_CLASSIFICATION	5.453593423147034E-7	DEFECT	7.500333990656756E-8	DESIGN	4.6016066541902645E-9	IMPLEMENTATION	2.3648399401565973E-9	TEST	1.2189754304861096E-9	DOCUMENTATION
// You may still have other ResultSets or update counts left to process here  // but you can't do it now or the ResultSet you just got will be closed 	WITHOUT_CLASSIFICATION	0.9999999253283732	WITHOUT_CLASSIFICATION	7.269119746283856E-8	DEFECT	1.8510901794523068E-9	DESIGN	1.162617881293475E-10	TEST	1.0810884205901106E-11	IMPLEMENTATION	2.2664103888004124E-12	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999935489753967	WITHOUT_CLASSIFICATION	4.814608865717508E-6	IMPLEMENTATION	1.1126470527074986E-6	DESIGN	2.611632497615637E-7	DEFECT	2.5039091598603353E-7	DOCUMENTATION	1.221451902113938E-8	TEST
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9987896193231218	WITHOUT_CLASSIFICATION	0.0012079645734439895	DESIGN	2.292352510899844E-6	TEST	6.893636489931647E-8	DEFECT	4.023436078232932E-8	DOCUMENTATION	1.458019752887048E-8	IMPLEMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999940193468111	WITHOUT_CLASSIFICATION	5.937947069404373E-6	DESIGN	3.341257046417861E-8	IMPLEMENTATION	6.089065517744564E-9	DEFECT	1.630561913225847E-9	TEST	1.5739215674111288E-9	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9787813203589935	WITHOUT_CLASSIFICATION	0.0212136578509265	DESIGN	4.577404246792862E-6	DEFECT	4.0198571575369154E-7	IMPLEMENTATION	2.6648997113101962E-8	DOCUMENTATION	1.575112035896672E-8	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// features which change between 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995051833661192	WITHOUT_CLASSIFICATION	4.93424247485021E-4	DESIGN	1.087589269495572E-6	DEFECT	1.759594836754331E-7	IMPLEMENTATION	1.0660841793496721E-7	DOCUMENTATION	2.2229224726478538E-8	TEST
// features which remain constant across 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999918361714685	WITHOUT_CLASSIFICATION	6.625785090150881E-6	DESIGN	1.5130657982460965E-6	DEFECT	1.9038221187517754E-8	DOCUMENTATION	3.816334945530882E-9	IMPLEMENTATION	2.1230868961701536E-9	TEST
// binary %Stream // character %Stream	WITHOUT_CLASSIFICATION	0.9999997862719154	WITHOUT_CLASSIFICATION	2.0180248960113653E-7	DESIGN	9.390887531748646E-9	DEFECT	1.3338476024609218E-9	TEST	6.113597962231732E-10	IMPLEMENTATION	5.894999406488161E-10	DOCUMENTATION
//getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE, NO_BATCH);	WITHOUT_CLASSIFICATION	0.9999999955792018	WITHOUT_CLASSIFICATION	1.231426659979288E-9	TEST	1.123670869559767E-9	DESIGN	9.34262268928897E-10	DOCUMENTATION	7.205154051663281E-10	DEFECT	4.1092292498317764E-10	IMPLEMENTATION
// hibernate impelemnts cast in Dialect.java	WITHOUT_CLASSIFICATION	0.9994434568255626	WITHOUT_CLASSIFICATION	5.559849391184494E-4	DESIGN	3.43492544867215E-7	DEFECT	1.8598057256924668E-7	TEST	2.2393806914189488E-8	DOCUMENTATION	6.368394633996967E-9	IMPLEMENTATION
// aggregate functions shouldn't be registered, right? //registerFunction( "list", new StandardSQLFunction("list",Hibernate.STRING) ); // stopped on $list	WITHOUT_CLASSIFICATION	0.9711002201785902	WITHOUT_CLASSIFICATION	0.028899168935827425	DESIGN	4.853503524612862E-7	DEFECT	1.1136093916599312E-7	IMPLEMENTATION	1.3155605661661493E-8	TEST	1.018685005244316E-9	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999289805829086	WITHOUT_CLASSIFICATION	5.7532946854288854E-5	IMPLEMENTATION	1.2234148704236398E-5	DESIGN	6.594869245751577E-7	DEFECT	3.356197362632734E-7	DOCUMENTATION	2.572148720760011E-7	TEST
// below is for Cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.9898534707249514	WITHOUT_CLASSIFICATION	0.010144940846543965	DESIGN	1.4174383552535859E-6	DEFECT	1.518931830226561E-7	TEST	1.570838038896639E-8	DOCUMENTATION	3.3885858613149454E-9	IMPLEMENTATION
// note that %string is deprecated	WITHOUT_CLASSIFICATION	0.9807538586165775	WITHOUT_CLASSIFICATION	0.01777462908830237	DESIGN	0.0014523380410974	IMPLEMENTATION	1.6576784621885145E-5	TEST	1.3302982730384E-6	DEFECT	1.2671711280267595E-6	DOCUMENTATION
// %upper is deprecated	WITHOUT_CLASSIFICATION	0.9979842460208421	WITHOUT_CLASSIFICATION	0.002013507696889325	DESIGN	1.2265044452533022E-6	DEFECT	4.984023406096434E-7	IMPLEMENTATION	4.003502189861291E-7	TEST	1.2102526351746263E-7	DOCUMENTATION
// The syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.9999994502953072	WITHOUT_CLASSIFICATION	5.431061498043794E-7	DESIGN	3.0251242516427816E-9	IMPLEMENTATION	1.8196817409733796E-9	DEFECT	1.568151835082851E-9	DOCUMENTATION	1.8558511780033635E-10	TEST
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999999282696242	WITHOUT_CLASSIFICATION	6.02678498313222E-8	DESIGN	9.43771240257162E-9	IMPLEMENTATION	9.471695914193753E-10	DEFECT	6.689969833798968E-10	DOCUMENTATION	4.0864687462778673E-10	TEST
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999592097014769	WITHOUT_CLASSIFICATION	3.815604493557518E-5	IMPLEMENTATION	2.222117643120781E-6	DESIGN	1.6696880860294795E-7	TEST	1.5908371210428737E-7	DEFECT	8.608342373969827E-8	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999364917138923	WITHOUT_CLASSIFICATION	3.2397152017925546E-5	DESIGN	3.0119476400860493E-5	IMPLEMENTATION	4.810119138377068E-7	DEFECT	2.708891841358298E-7	DOCUMENTATION	2.3975659090092287E-7	TEST
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999906730349846	WITHOUT_CLASSIFICATION	8.648962424274665E-6	DESIGN	6.21924147382898E-7	IMPLEMENTATION	4.45148481771676E-8	TEST	8.813254919461422E-9	DEFECT	2.7503406835310384E-9	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999999282696242	WITHOUT_CLASSIFICATION	6.02678498313222E-8	DESIGN	9.43771240257162E-9	IMPLEMENTATION	9.471695914193753E-10	DEFECT	6.689969833798968E-10	DOCUMENTATION	4.0864687462778673E-10	TEST
// The syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.9999117867799352	WITHOUT_CLASSIFICATION	8.801297263426405E-5	DESIGN	1.0706447900261368E-7	IMPLEMENTATION	4.768141547377146E-8	DOCUMENTATION	4.339007535792804E-8	DEFECT	2.1114606527495064E-9	TEST
// Completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.9999994691889598	WITHOUT_CLASSIFICATION	2.628970702621595E-7	DEFECT	1.825955866197165E-7	IMPLEMENTATION	8.131131126029822E-8	DESIGN	3.0544192890131076E-9	DOCUMENTATION	9.52652771940005E-10	TEST
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999908441075187	WITHOUT_CLASSIFICATION	7.532681941060971E-5	IMPLEMENTATION	9.940272179900468E-6	DEFECT	5.763444577082875E-6	DESIGN	4.592938902158896E-7	DOCUMENTATION	6.909475510243681E-8	TEST
// LIMIT support (ala TOP) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999862467528651	WITHOUT_CLASSIFICATION	1.033760969746251E-5	IMPLEMENTATION	2.747843047278301E-6	DESIGN	5.207157987771201E-7	DEFECT	8.481237590362707E-8	DOCUMENTATION	6.226621561352789E-8	TEST
// InterSystems Cache' does not current support "SELECT ... FOR UPDATE" syntax... // Set your transaction mode to READ_COMMITTED before using	WITHOUT_CLASSIFICATION	0.9999923390637798	WITHOUT_CLASSIFICATION	6.668520529919455E-6	DEFECT	6.302841881786468E-7	DESIGN	3.4658841203076545E-7	IMPLEMENTATION	8.360645010371912E-9	TEST	7.1824449823568494E-9	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999935489753967	WITHOUT_CLASSIFICATION	4.814608865717508E-6	IMPLEMENTATION	1.1126470527074986E-6	DESIGN	2.611632497615637E-7	DEFECT	2.5039091598603353E-7	DOCUMENTATION	1.221451902113938E-8	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999935489753967	WITHOUT_CLASSIFICATION	4.814608865717508E-6	IMPLEMENTATION	1.1126470527074986E-6	DESIGN	2.611632497615637E-7	DEFECT	2.5039091598603353E-7	DOCUMENTATION	1.221451902113938E-8	TEST
/*<String>*/	WITHOUT_CLASSIFICATION	0.9995965419028158	WITHOUT_CLASSIFICATION	3.147092730159391E-4	DESIGN	5.586929543155265E-5	DEFECT	2.3754365540005254E-5	IMPLEMENTATION	7.238746248998077E-6	DOCUMENTATION	1.8864169476909007E-6	TEST
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999552218405507	WITHOUT_CLASSIFICATION	3.365845623214956E-5	IMPLEMENTATION	1.0813349029399087E-5	DESIGN	2.4954992011428156E-7	DEFECT	3.8851423611135616E-8	DOCUMENTATION	1.795284401951611E-8	TEST
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999916088939266	WITHOUT_CLASSIFICATION	6.3131598472462025E-6	IMPLEMENTATION	2.0033084611132814E-6	DESIGN	3.518159104318794E-8	DEFECT	2.064287122422188E-8	TEST	1.8813302791025006E-8	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.999999971740363	WITHOUT_CLASSIFICATION	2.393838249023456E-8	DESIGN	3.2765535307320487E-9	IMPLEMENTATION	6.707470071420502E-10	DOCUMENTATION	3.64287456141188E-10	DEFECT	9.666472152161922E-12	TEST
// Does the LIMIT clause come at the start of the SELECT statement, rather than at the end?	WITHOUT_CLASSIFICATION	0.9988566838844466	WITHOUT_CLASSIFICATION	0.0011397522044464773	DESIGN	1.637111286816914E-6	DEFECT	1.0958006954216657E-6	TEST	8.207311724005887E-7	DOCUMENTATION	1.0267952441496251E-8	IMPLEMENTATION
// Does the LIMIT clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.9999490712534872	WITHOUT_CLASSIFICATION	4.8237857854624236E-5	DESIGN	2.655491130225455E-6	DEFECT	2.454199989746609E-8	DOCUMENTATION	7.636301233763577E-9	TEST	3.2192267099185834E-9	IMPLEMENTATION
// The name of the SQL function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.9999999173027104	WITHOUT_CLASSIFICATION	7.224940236059113E-8	DESIGN	8.380783970873389E-9	DEFECT	1.671883447967387E-9	IMPLEMENTATION	3.397531809931338E-10	DOCUMENTATION	5.5466533573296974E-11	TEST
// Create an OuterJoinGenerator for this dialect.	WITHOUT_CLASSIFICATION	0.9999316142173931	WITHOUT_CLASSIFICATION	6.83196656249648E-5	DESIGN	6.002535707066803E-8	TEST	3.4874780798972193E-9	DEFECT	2.4909464673048836E-9	DOCUMENTATION	1.1320033380519769E-10	IMPLEMENTATION
// The keyword used to insert a row without specifying // any column values	WITHOUT_CLASSIFICATION	0.9999996156804729	WITHOUT_CLASSIFICATION	2.6428312334665113E-7	DESIGN	8.219943423891875E-8	DEFECT	2.1620087182711775E-8	IMPLEMENTATION	1.0814723834793178E-8	TEST	5.402158506307042E-9	DOCUMENTATION
//registerFunction( "trim", new StandardSQLFunction( "trim", Hibernate.STRING ) );	WITHOUT_CLASSIFICATION	0.9999999100454259	WITHOUT_CLASSIFICATION	6.459706878463682E-8	IMPLEMENTATION	2.3739755975278703E-8	DESIGN	8.289955310910932E-10	DEFECT	4.499606873782942E-10	DOCUMENTATION	3.3879328363253963E-10	TEST
//skip the FROM keyword in params	WITHOUT_CLASSIFICATION	0.9999593490495412	WITHOUT_CLASSIFICATION	2.2281980761589952E-5	IMPLEMENTATION	1.4057329686641278E-5	DESIGN	3.072255054321747E-6	DEFECT	8.642604031704423E-7	DOCUMENTATION	3.751245530448669E-7	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9996866627785144	WITHOUT_CLASSIFICATION	2.588796342758592E-4	DESIGN	4.658146770550267E-5	IMPLEMENTATION	4.1116288446745785E-6	DEFECT	2.9143409007184537E-6	DOCUMENTATION	8.501497588761329E-7	TEST
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999999999471333	WITHOUT_CLASSIFICATION	4.882445091349613E-11	DESIGN	2.8567515678132085E-12	DOCUMENTATION	9.322527740574719E-13	IMPLEMENTATION	1.2923903500621215E-13	DEFECT	1.2403149435190322E-13	TEST
// SQLFunction implementation	WITHOUT_CLASSIFICATION	0.9999800966946342	WITHOUT_CLASSIFICATION	1.4364315198234958E-5	IMPLEMENTATION	3.7277009855161586E-6	DESIGN	1.6461854526797384E-6	DEFECT	1.5589296411612664E-7	DOCUMENTATION	9.210765266152524E-9	TEST
// conceivable that the dialect ctor could throw HibernateExceptions, so don't re-wrap	WITHOUT_CLASSIFICATION	0.9999969392282699	WITHOUT_CLASSIFICATION	2.9523438657002268E-6	DESIGN	1.0572484445206035E-7	IMPLEMENTATION	1.3054693590342115E-9	DEFECT	1.1392680075918293E-9	TEST	2.5828255941694943E-10	DOCUMENTATION
// register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.9999816245386917	WITHOUT_CLASSIFICATION	1.2889258576805917E-5	IMPLEMENTATION	4.507506742818661E-6	DESIGN	9.393919720670439E-7	DEFECT	3.076384842772934E-8	TEST	8.540168126487918E-9	DOCUMENTATION
// register resolvers set via Environment property	WITHOUT_CLASSIFICATION	0.9999987689663095	WITHOUT_CLASSIFICATION	1.198502303467033E-6	DESIGN	2.233203571707824E-8	DEFECT	9.127838122243124E-9	TEST	9.571637016310744E-10	DOCUMENTATION	1.1434935217312652E-10	IMPLEMENTATION
// kept for backward compatibility until after the 3.1beta5 release of HA	WITHOUT_CLASSIFICATION	0.999999509340238	WITHOUT_CLASSIFICATION	4.2645235732015827E-7	IMPLEMENTATION	5.9600146382063844E-8	DESIGN	3.029933232231114E-9	DEFECT	1.2769901885703084E-9	TEST	3.003349268445949E-10	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.999388633467606	WITHOUT_CLASSIFICATION	5.879500182554945E-4	DESIGN	1.9757819797177E-5	IMPLEMENTATION	1.5958086765717542E-6	DOCUMENTATION	1.2486871140933247E-6	DEFECT	8.141985507043627E-7	TEST
// the CascadingAction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999313543230293	WITHOUT_CLASSIFICATION	5.546470029536924E-5	IMPLEMENTATION	9.832125293253772E-6	DESIGN	2.4141409918018243E-6	DOCUMENTATION	7.475293962774719E-7	DEFECT	1.871809940637875E-7	TEST
// the CascadingAction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9971909429581829	WITHOUT_CLASSIFICATION	0.002743987977693365	IMPLEMENTATION	3.3207743688349146E-5	DEFECT	3.013224815624714E-5	DESIGN	1.1834420516972652E-6	DOCUMENTATION	5.456302275100601E-7	TEST
// delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999996278793744	WITHOUT_CLASSIFICATION	3.476287659199997E-6	IMPLEMENTATION	1.3738635788431988E-7	DESIGN	5.838150112379452E-8	DEFECT	3.8773274507533063E-8	TEST	1.0377463270709155E-8	DOCUMENTATION
// orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.9999700583415403	WITHOUT_CLASSIFICATION	2.292468360625065E-5	DESIGN	3.5454148071764573E-6	DEFECT	3.3862919577656276E-6	IMPLEMENTATION	7.561138345030068E-8	TEST	9.656705104770096E-9	DOCUMENTATION
/*(LockMode) anything*/	WITHOUT_CLASSIFICATION	0.9997953856559328	WITHOUT_CLASSIFICATION	7.912819209048876E-5	DEFECT	7.406432492294605E-5	DESIGN	4.7665882450744644E-5	DOCUMENTATION	2.173387176702938E-6	IMPLEMENTATION	1.5825574263841568E-6	TEST
// lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999316985703884	WITHOUT_CLASSIFICATION	6.688735131743274E-5	IMPLEMENTATION	7.031312080782619E-7	DEFECT	3.2029821296401074E-7	TEST	2.1105664324247749E-7	DESIGN	1.7959223001751915E-7	DOCUMENTATION
// refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999883900307089	WITHOUT_CLASSIFICATION	1.1319584304909337E-5	IMPLEMENTATION	1.7959265901942325E-7	DESIGN	6.979698142054092E-8	TEST	3.023029588025162E-8	DEFECT	1.0765049803667295E-8	DOCUMENTATION
// evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999990183012196	WITHOUT_CLASSIFICATION	5.930261999494128E-7	IMPLEMENTATION	2.498861634818772E-7	DESIGN	1.1837830415757081E-7	DEFECT	1.123094934420676E-8	DOCUMENTATION	9.177163371486574E-9	TEST
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999973901760444	WITHOUT_CLASSIFICATION	2.2813295829700455E-6	IMPLEMENTATION	2.2932455284689249E-7	DEFECT	7.336040482909087E-8	DESIGN	1.7821998054185576E-8	TEST	7.987416799958162E-9	DOCUMENTATION
// orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.9999958449521476	WITHOUT_CLASSIFICATION	2.9979968358154903E-6	DESIGN	6.081872373402508E-7	DEFECT	5.393744394258361E-7	IMPLEMENTATION	7.337261035223287E-9	TEST	2.1520788448401945E-9	DOCUMENTATION
// for deprecated saveOrUpdateCopy()	WITHOUT_CLASSIFICATION	0.9999964903845181	WITHOUT_CLASSIFICATION	2.3712202456516194E-6	DESIGN	9.148540667973623E-7	IMPLEMENTATION	1.0353632204769955E-7	DOCUMENTATION	1.0341310862040151E-7	DEFECT	1.6591738900695522E-8	TEST
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999967483172936	WITHOUT_CLASSIFICATION	1.8130406980092656E-6	IMPLEMENTATION	1.0562571947012885E-6	DESIGN	3.5055088728454893E-7	DEFECT	2.5138507444629798E-8	TEST	6.695419098237169E-9	DOCUMENTATION
//a proxy cannot be transient and it breaks ForeignKeys.isTransient	WITHOUT_CLASSIFICATION	0.9998443047537938	WITHOUT_CLASSIFICATION	1.0261354723991003E-4	DESIGN	5.284784456907376E-5	DEFECT	1.3194594726510265E-7	IMPLEMENTATION	7.494149307398318E-8	DOCUMENTATION	2.6966956976324872E-8	TEST
// replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999998797273808	WITHOUT_CLASSIFICATION	7.928158870736796E-7	DESIGN	3.671083633285113E-7	IMPLEMENTATION	3.283896597765099E-8	TEST	5.2716029161183545E-9	DEFECT	4.691372720661992E-9	DOCUMENTATION
// static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999943674647541	WITHOUT_CLASSIFICATION	5.174369247300183E-6	DESIGN	3.8390214081647737E-7	IMPLEMENTATION	6.393163418927567E-8	DEFECT	6.656073376613627E-9	TEST	3.676150168850365E-9	DOCUMENTATION
// handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.9994731499387121	WITHOUT_CLASSIFICATION	5.250531090719675E-4	DESIGN	1.3453322902229642E-6	DEFECT	3.988988155228631E-7	IMPLEMENTATION	2.8115036301243266E-8	TEST	2.4606074028775644E-8	DOCUMENTATION
// Actually the semantics of the next three are really "Bag" // Note that, unlike objects, collection insertions, updates, // deletions are not really remembered between flushes. We // just re-use the same Lists for convenience.	WITHOUT_CLASSIFICATION	0.9999969471454544	WITHOUT_CLASSIFICATION	2.034333422991579E-6	IMPLEMENTATION	4.966453812553488E-7	DESIGN	4.07323695738795E-7	DEFECT	1.069897424130866E-7	TEST	7.562303277911403E-9	DOCUMENTATION
// Add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.9999984470141501	WITHOUT_CLASSIFICATION	1.4291705915026395E-6	DESIGN	6.714211845906415E-8	DEFECT	4.605916960839598E-8	DOCUMENTATION	8.921508078766701E-9	IMPLEMENTATION	1.6924622409316742E-9	TEST
// continue loop	WITHOUT_CLASSIFICATION	0.9999908224086483	WITHOUT_CLASSIFICATION	7.1208648312375545E-6	DEFECT	1.6319384201953163E-6	DESIGN	3.728346719264631E-7	IMPLEMENTATION	4.696917265497148E-8	DOCUMENTATION	4.984255597968566E-9	TEST
//sort the updates by fk	WITHOUT_CLASSIFICATION	0.9992479586356938	WITHOUT_CLASSIFICATION	4.911240330819226E-4	DESIGN	1.781618913902188E-4	IMPLEMENTATION	5.0564187248489255E-5	TEST	2.968084426106474E-5	DEFECT	2.5104083244592865E-6	DOCUMENTATION
//sort the updates by pk	WITHOUT_CLASSIFICATION	0.9985163248488631	WITHOUT_CLASSIFICATION	0.0011490732910769458	DESIGN	2.634949969943801E-4	IMPLEMENTATION	5.2162893410285306E-5	TEST	1.5182852735742198E-5	DEFECT	3.7611169196396843E-6	DOCUMENTATION
// the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.9999996688200491	WITHOUT_CLASSIFICATION	1.651540123227116E-7	TEST	1.4685904206185161E-7	DESIGN	1.766127391770793E-8	DEFECT	1.072900706377059E-9	DOCUMENTATION	4.3272187296175134E-10	IMPLEMENTATION
// the map of batch numbers to EntityInsertAction lists	WITHOUT_CLASSIFICATION	0.9999988481237915	WITHOUT_CLASSIFICATION	9.207188253014557E-7	DESIGN	2.2607564438113748E-7	DEFECT	2.1469363875188E-9	IMPLEMENTATION	1.6381549959124075E-9	DOCUMENTATION	1.2966473467848239E-9	TEST
//optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.9999365100146725	WITHOUT_CLASSIFICATION	6.311642632440443E-5	DESIGN	3.0914952458067476E-7	IMPLEMENTATION	2.5716284478380678E-8	DEFECT	2.0395317339634235E-8	TEST	1.8297876568303273E-8	DOCUMENTATION
// the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.9999850843900169	WITHOUT_CLASSIFICATION	1.4891065192134331E-5	DESIGN	9.676659761836451E-9	TEST	6.7971219660676314E-9	IMPLEMENTATION	5.577091951751237E-9	DEFECT	2.4939173571862126E-9	DOCUMENTATION
// remove the current element from insertions. It will be added back later.	WITHOUT_CLASSIFICATION	0.9982547314418855	WITHOUT_CLASSIFICATION	0.001688745363154762	DESIGN	5.6507808948735024E-5	DEFECT	8.904168798493088E-9	DOCUMENTATION	4.07971954048623E-9	TEST	2.402122732003375E-9	IMPLEMENTATION
// the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.9939918620332492	WITHOUT_CLASSIFICATION	0.004615664693752996	DESIGN	0.0013243731073609261	IMPLEMENTATION	3.232358631782498E-5	DOCUMENTATION	3.076439540370823E-5	TEST	5.0121839154079135E-6	DEFECT
// There is already an existing batch for this type of entity. // Check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.9999997045707855	WITHOUT_CLASSIFICATION	2.589926259568931E-7	DESIGN	3.6116964875325555E-8	TEST	1.6747197728880658E-10	DOCUMENTATION	1.5050178139332995E-10	DEFECT	1.6499748514217246E-12	IMPLEMENTATION
// now rebuild the insertions list. There is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.9999980421728318	WITHOUT_CLASSIFICATION	1.951815271946964E-6	DESIGN	2.990579510991675E-9	IMPLEMENTATION	2.3553152687174146E-9	DEFECT	4.937885667452767E-10	TEST	1.7221283997765393E-10	DOCUMENTATION
// the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.9999969323115759	WITHOUT_CLASSIFICATION	2.4681700680499133E-6	DESIGN	5.609533266941617E-7	TEST	3.3324001550373764E-8	DEFECT	5.060393621202199E-9	DOCUMENTATION	1.8063413873376726E-10	IMPLEMENTATION
// loop through all the associations of the current entity and make sure that they are processed // before the current batch number	WITHOUT_CLASSIFICATION	0.9999997321354387	WITHOUT_CLASSIFICATION	2.656766373203395E-7	DESIGN	9.238585445916426E-10	DEFECT	6.751314982943277E-10	TEST	4.936992000615558E-10	DOCUMENTATION	9.523476814084882E-11	IMPLEMENTATION
// find the batch number associated with the current association, if any.	WITHOUT_CLASSIFICATION	0.9999725170868945	WITHOUT_CLASSIFICATION	2.5488874991323473E-5	DESIGN	1.3244794328478547E-6	TEST	5.310557793413773E-7	DOCUMENTATION	1.0558238330504515E-7	IMPLEMENTATION	3.2920518791917466E-8	DEFECT
// create a new batch for this type. The batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.9999999217699632	WITHOUT_CLASSIFICATION	7.675420264629034E-8	DESIGN	8.845400167239385E-10	DEFECT	3.9845753457711975E-10	TEST	1.9274458595862933E-10	DOCUMENTATION	9.209375297146736E-14	IMPLEMENTATION
// loop through all the associated entities and make sure they have been // processed before the latest // batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.9999994987675496	WITHOUT_CLASSIFICATION	3.7857054770440325E-7	TEST	1.1612155932986338E-7	DESIGN	6.0076923746517105E-9	IMPLEMENTATION	3.2792420011808224E-10	DOCUMENTATION	2.047267407084311E-10	DEFECT
// since this entity will now be processed in the latest possible batch, // we can be assured that it will come after all other associations, // there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.9516991000626099	WITHOUT_CLASSIFICATION	0.048207204742260285	DESIGN	4.671076801768188E-5	TEST	4.056072166239232E-5	IMPLEMENTATION	5.992649469942677E-6	DEFECT	4.310559799753331E-7	DOCUMENTATION
//cascade to current collection elements	WITHOUT_CLASSIFICATION	0.99998585372166	WITHOUT_CLASSIFICATION	9.325413464020535E-6	IMPLEMENTATION	4.590325273981205E-6	DESIGN	1.3820743592959582E-7	DOCUMENTATION	8.960824889517367E-8	DEFECT	2.7239171390601743E-9	TEST
//not really necessary, but good for consistency...	WITHOUT_CLASSIFICATION	0.9959215725030129	WITHOUT_CLASSIFICATION	0.0035847552246414103	DESIGN	4.6968369527005294E-4	DEFECT	1.9606076282353045E-5	IMPLEMENTATION	3.0654984634562752E-6	DOCUMENTATION	1.3170023298468849E-6	TEST
// we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.9999999456536454	WITHOUT_CLASSIFICATION	4.1381585120350216E-8	DESIGN	1.1674680775809144E-8	DEFECT	7.062300896795042E-10	DOCUMENTATION	5.471925666132214E-10	IMPLEMENTATION	3.666618266588389E-11	TEST
//a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.9996072508676838	WITHOUT_CLASSIFICATION	3.6335277735970845E-4	DESIGN	2.776385940100995E-5	DEFECT	1.3473666745744163E-6	IMPLEMENTATION	2.4270267623330897E-7	DOCUMENTATION	4.2426204656526454E-8	TEST
// handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.9949152158294772	WITHOUT_CLASSIFICATION	0.005055995426023098	DESIGN	2.670185949767808E-5	IMPLEMENTATION	8.061962509719459E-7	DOCUMENTATION	6.928301421572621E-7	TEST	5.878586090503324E-7	DEFECT
// Loaded entity instances, by EntityUniqueKey	WITHOUT_CLASSIFICATION	0.9999972249890403	WITHOUT_CLASSIFICATION	2.408131273865957E-6	DESIGN	3.4027313653546184E-7	DEFECT	2.2517529926491257E-8	DOCUMENTATION	2.228369313943863E-9	TEST	1.8606499048707258E-9	IMPLEMENTATION
// Identity map of EntityEntry instances, by the entity instance	WITHOUT_CLASSIFICATION	0.9999996266034639	WITHOUT_CLASSIFICATION	1.5534916081130014E-7	DEFECT	1.3128826929007138E-7	DESIGN	7.886064569975897E-8	IMPLEMENTATION	6.4496911564814165E-9	DOCUMENTATION	1.4487691489812833E-9	TEST
// Entity proxies, by EntityKey	WITHOUT_CLASSIFICATION	0.9999989729617743	WITHOUT_CLASSIFICATION	6.029565399242783E-7	DESIGN	3.5224033702075616E-7	DEFECT	3.089628235893385E-8	TEST	2.0634376270304025E-8	DOCUMENTATION	2.031069021696382E-8	IMPLEMENTATION
// Snapshots of current database state for entities // that have *not* been loaded	WITHOUT_CLASSIFICATION	0.9988227788308811	WITHOUT_CLASSIFICATION	0.0011471079551725579	DESIGN	2.615888947926939E-5	IMPLEMENTATION	3.7488960984196564E-6	DEFECT	1.4664638643730289E-7	TEST	5.878198211879874E-8	DOCUMENTATION
// Identity map of array holder ArrayHolder instances, by the array instance	WITHOUT_CLASSIFICATION	0.9999957585105893	WITHOUT_CLASSIFICATION	3.31265110904593E-6	DEFECT	5.208002908096211E-7	DESIGN	3.9085019009962445E-7	IMPLEMENTATION	1.2601199160811702E-8	DOCUMENTATION	4.586621611438656E-9	TEST
// Collection wrappers, by the CollectionKey //key=CollectionKey, value=PersistentCollection	WITHOUT_CLASSIFICATION	0.9999994452058335	WITHOUT_CLASSIFICATION	3.557208017922855E-7	DESIGN	1.9236798394962786E-7	DEFECT	4.8783578249902E-9	TEST	1.5683789002596995E-9	DOCUMENTATION	2.586440601293137E-10	IMPLEMENTATION
// Set of EntityKeys of deleted objects	WITHOUT_CLASSIFICATION	0.9999953841983531	WITHOUT_CLASSIFICATION	4.444309715387436E-6	DESIGN	1.104020566283442E-7	DEFECT	3.149638975174009E-8	IMPLEMENTATION	1.628539085168856E-8	DOCUMENTATION	1.3308094157130585E-8	TEST
// properties that we have tried to load, and not found in the database	WITHOUT_CLASSIFICATION	0.9999994188403354	WITHOUT_CLASSIFICATION	4.142394148379487E-7	DEFECT	1.660420304643905E-7	DESIGN	5.317489969798083E-10	IMPLEMENTATION	2.453503299603951E-10	DOCUMENTATION	1.0112009888642718E-10	TEST
// A list of collection wrappers that were instantiating during result set // processing, that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9999825311943478	WITHOUT_CLASSIFICATION	1.7332727957955186E-5	DEFECT	9.120176097048285E-8	DESIGN	3.1145213569523424E-8	IMPLEMENTATION	1.1605197808488272E-8	TEST	2.1255218147315326E-9	DOCUMENTATION
// A container for collections we load up when the owning entity is not // yet loaded ... for now, this is purely transient!	WITHOUT_CLASSIFICATION	0.9923808331134936	WITHOUT_CLASSIFICATION	0.004294887876517763	DEFECT	0.0026759825367441486	DESIGN	6.427450325535764E-4	IMPLEMENTATION	4.6069941793327944E-6	TEST	9.444465115190177E-7	DOCUMENTATION
// Downgrade locks	WITHOUT_CLASSIFICATION	0.9997468347511786	WITHOUT_CLASSIFICATION	2.1454983312977233E-4	IMPLEMENTATION	2.170973153144852E-5	DESIGN	1.325236929354703E-5	DEFECT	3.2351224036871193E-6	DOCUMENTATION	4.181924629662009E-7	TEST
// any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.9999861920039939	WITHOUT_CLASSIFICATION	8.915357797829432E-6	DESIGN	4.804554023060917E-6	DEFECT	4.248659808673591E-8	DOCUMENTATION	2.9405074565240066E-8	IMPLEMENTATION	1.6192512462459427E-8	TEST
//unwrap the object	WITHOUT_CLASSIFICATION	0.9999815783237758	WITHOUT_CLASSIFICATION	1.6224172350054895E-5	DESIGN	1.2932682668980816E-6	IMPLEMENTATION	5.721651491478074E-7	DEFECT	2.801517818797673E-7	DOCUMENTATION	5.1918676211321094E-8	TEST
//initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.9999985357537696	WITHOUT_CLASSIFICATION	8.131220579150723E-7	IMPLEMENTATION	5.282273199589689E-7	DESIGN	6.487981844309744E-8	DOCUMENTATION	3.676610198820612E-8	DEFECT	2.125093206350672E-8	TEST
//return the proxied object	WITHOUT_CLASSIFICATION	0.9927017368830421	WITHOUT_CLASSIFICATION	0.007265406198451729	DESIGN	2.9439096759798515E-5	DEFECT	1.702211565541238E-6	IMPLEMENTATION	1.6081894619098448E-6	DOCUMENTATION	1.0742071896506428E-7	TEST
//overwrite old proxy	WITHOUT_CLASSIFICATION	0.9999824677161688	WITHOUT_CLASSIFICATION	1.721315669764501E-5	DESIGN	2.0961021042779312E-7	DEFECT	4.9513724584149774E-8	DOCUMENTATION	3.133545100372132E-8	TEST	2.86677475452803E-8	IMPLEMENTATION
// early exit...	WITHOUT_CLASSIFICATION	0.999766060077296	WITHOUT_CLASSIFICATION	1.9607924857611145E-4	DEFECT	3.360527978139336E-5	DESIGN	3.5948787861451916E-6	IMPLEMENTATION	4.461848650740165E-7	DOCUMENTATION	2.1433069545870005E-7	TEST
// or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.9942581041237951	WITHOUT_CLASSIFICATION	0.005121162512149753	DESIGN	4.073879434433421E-4	IMPLEMENTATION	2.071096864623383E-4	DEFECT	5.425304788463587E-6	TEST	8.104293610756375E-7	DOCUMENTATION
//treat it just like a new collection	WITHOUT_CLASSIFICATION	0.999944458815662	WITHOUT_CLASSIFICATION	4.449252200583411E-5	DESIGN	9.398372365083697E-6	IMPLEMENTATION	1.2256388186367966E-6	DEFECT	3.0416302475690727E-7	TEST	1.20488123647589E-7	DOCUMENTATION
//do this work only at the very highest level of the load //don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.539338551391484	WITHOUT_CLASSIFICATION	0.44858419504376174	DESIGN	0.011934510456947016	DEFECT	7.13630328092775E-5	TEST	6.76019704405333E-5	IMPLEMENTATION	3.7781045575018312E-6	DOCUMENTATION
//note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.9999999678097461	WITHOUT_CLASSIFICATION	2.602463402858546E-8	IMPLEMENTATION	5.5391844464887375E-9	DESIGN	3.040579451539399E-10	TEST	1.9054228775813544E-10	DOCUMENTATION	1.3183517513663638E-10	DEFECT
//it might be an unwrapped collection reference! //try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.5179022609787395	WITHOUT_CLASSIFICATION	0.4816695607801463	DESIGN	4.2164779596781015E-4	DEFECT	4.731728895943418E-6	IMPLEMENTATION	1.1076224659975664E-6	DOCUMENTATION	6.910937845137881E-7	TEST
/*public boolean isNonExistant(EntityKey key) {	WITHOUT_CLASSIFICATION	0.9996478144703074	WITHOUT_CLASSIFICATION	3.482488821339656E-4	DESIGN	3.3168153823826406E-6	DEFECT	3.547439864059292E-7	DOCUMENTATION	2.0411099788217686E-7	TEST	6.097719191923027E-8	IMPLEMENTATION
/*public boolean isNonExistant(EntityUniqueKey key) {	WITHOUT_CLASSIFICATION	0.9994507910359892	WITHOUT_CLASSIFICATION	5.458212902470606E-4	DESIGN	2.6626499753535446E-6	DEFECT	3.4774748143090143E-7	DOCUMENTATION	2.9516767913490414E-7	TEST	8.210862786440212E-8	IMPLEMENTATION
// iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.9915555468153423	WITHOUT_CLASSIFICATION	0.008409945506944757	DESIGN	2.9547991825942858E-5	IMPLEMENTATION	2.489710972575205E-6	TEST	1.7407870829868057E-6	DOCUMENTATION	7.291878313994206E-7	DEFECT
// does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.9999723975708165	WITHOUT_CLASSIFICATION	2.7503991576999957E-5	DESIGN	7.094819290401497E-8	DOCUMENTATION	1.4003653739056983E-8	TEST	1.3458835845150744E-8	DEFECT	2.692403710011868E-11	IMPLEMENTATION
//check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.997740795412675	WITHOUT_CLASSIFICATION	0.0021924970491094165	DESIGN	5.8012839635466E-5	IMPLEMENTATION	3.6265651921134263E-6	DEFECT	2.8548325458111094E-6	TEST	2.213300842084931E-6	DOCUMENTATION
// otherwise, the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.9999959141705773	WITHOUT_CLASSIFICATION	3.9111744358083935E-6	DEFECT	1.410997055586816E-7	DESIGN	1.2141654822981463E-8	IMPLEMENTATION	1.1584480048026176E-8	TEST	9.829146490440908E-9	DOCUMENTATION
// adds remove as a sort-of alias for delete...	WITHOUT_CLASSIFICATION	0.9999993762327128	WITHOUT_CLASSIFICATION	5.266226538872361E-7	IMPLEMENTATION	8.200214516058627E-8	DEFECT	1.0760929785281208E-8	DESIGN	3.1347094001279004E-9	TEST	1.2468487260195962E-9	DOCUMENTATION
//bad cast	WITHOUT_CLASSIFICATION	0.9987682726343867	WITHOUT_CLASSIFICATION	0.001220180778719916	DESIGN	5.370019552518112E-6	DEFECT	2.370817232828267E-6	IMPLEMENTATION	1.9045292076340293E-6	TEST	1.901220900359993E-6	DOCUMENTATION
//return lhsPersister.getSubclassPropertyColumnNames(property);	WITHOUT_CLASSIFICATION	0.9999876793836684	WITHOUT_CLASSIFICATION	1.1191230176093868E-5	DESIGN	1.0750763490507413E-6	DEFECT	4.258075887308508E-8	TEST	1.0556734810073678E-8	DOCUMENTATION	1.1723130242119802E-9	IMPLEMENTATION
//property-refs for associations defined on a //component are not supported, so no need to slice	WITHOUT_CLASSIFICATION	0.9999999565411045	WITHOUT_CLASSIFICATION	3.6085924268068086E-8	DESIGN	5.810635516049763E-9	TEST	1.5297664130491638E-9	DOCUMENTATION	2.3912502704065187E-11	DEFECT	8.656798737199402E-12	IMPLEMENTATION
//if there is no property-ref, assume the join //is to the subclass table (ie. the table of the //subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.9999998488247381	WITHOUT_CLASSIFICATION	1.5053933933959338E-7	DESIGN	3.691493152816741E-10	TEST	2.5011751929968555E-10	DOCUMENTATION	1.563070355231284E-11	DEFECT	1.0250432886547703E-12	IMPLEMENTATION
//handle a property-ref	WITHOUT_CLASSIFICATION	0.9999809627909083	WITHOUT_CLASSIFICATION	1.8574143124899518E-5	DESIGN	3.717053522903061E-7	DEFECT	4.3764710243500534E-8	DOCUMENTATION	3.268916734565463E-8	TEST	1.4906736954287956E-8	IMPLEMENTATION
/*NativeSQLQueryReturn*/	WITHOUT_CLASSIFICATION	0.9967721631620483	WITHOUT_CLASSIFICATION	0.0032025049095127205	DESIGN	1.8062284775128105E-5	DEFECT	4.682084692928616E-6	IMPLEMENTATION	2.1019268235891704E-6	DOCUMENTATION	4.85632147407996E-7	TEST
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999993889244883	WITHOUT_CLASSIFICATION	5.648860721431267E-7	DESIGN	1.9470839913495557E-8	DEFECT	1.1038662715752224E-8	IMPLEMENTATION	8.906282409886398E-9	TEST	6.773654476955088E-9	DOCUMENTATION
// why is all others non final ?	WITHOUT_CLASSIFICATION	0.9987226794182068	WITHOUT_CLASSIFICATION	0.0012741087693607495	DESIGN	2.9536790559120014E-6	IMPLEMENTATION	1.595762505686913E-7	DEFECT	5.318534509218499E-8	DOCUMENTATION	4.5371780787064484E-8	TEST
//this.forceCacheRefresh = forceCacheRefresh;	WITHOUT_CLASSIFICATION	0.9999975187289114	WITHOUT_CLASSIFICATION	2.1518615845607164E-6	IMPLEMENTATION	1.1189871913993673E-7	TEST	8.63153163151303E-8	DESIGN	7.688993634019452E-8	DOCUMENTATION	5.430553232625516E-8	DEFECT
// HELLA IMPORTANT OPTIMIZATION!!!	WITHOUT_CLASSIFICATION	0.9999673770483326	WITHOUT_CLASSIFICATION	2.6109534914361476E-5	DESIGN	5.268194292413315E-6	DEFECT	5.072499177769042E-7	IMPLEMENTATION	4.060774679708287E-7	DOCUMENTATION	3.3189507480102537E-7	TEST
/*return that.type.equals(type) && 	WITHOUT_CLASSIFICATION	0.9993898684202348	WITHOUT_CLASSIFICATION	5.653101554677025E-4	DESIGN	3.9720248102705826E-5	DEFECT	4.4153347966136825E-6	IMPLEMENTATION	3.995680878254855E-7	TEST	2.862733103265029E-7	DOCUMENTATION
//Must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.9998505097208523	WITHOUT_CLASSIFICATION	1.479016689942377E-4	DESIGN	6.401194988506062E-7	DEFECT	3.843019726790243E-7	TEST	3.162321978426059E-7	DOCUMENTATION	2.4795648405187575E-7	IMPLEMENTATION
//take a snapshot	WITHOUT_CLASSIFICATION	0.9999339613712793	WITHOUT_CLASSIFICATION	3.393865311482147E-5	DESIGN	2.1453797213528772E-5	DEFECT	7.972886402940633E-6	IMPLEMENTATION	1.3829029888696284E-6	DOCUMENTATION	1.2903890004336852E-6	TEST
// do a check	WITHOUT_CLASSIFICATION	0.9999433889109395	WITHOUT_CLASSIFICATION	5.1289739299990296E-5	DESIGN	4.2898223302014646E-6	IMPLEMENTATION	8.034164980141839E-7	DEFECT	1.947191398203135E-7	DOCUMENTATION	3.339179262592604E-8	TEST
// the owning entity may have been deleted and its identifier unset due to // identifier-rollback; in which case, try to look up its identifier from // the persistence context	WITHOUT_CLASSIFICATION	0.9999984878084972	WITHOUT_CLASSIFICATION	1.4843238512876729E-6	DESIGN	1.857539817966913E-8	DEFECT	9.02485503327447E-9	IMPLEMENTATION	2.0230973716188369E-10	DOCUMENTATION	6.508863636859518E-11	TEST
// do the work	WITHOUT_CLASSIFICATION	0.9995787910535222	WITHOUT_CLASSIFICATION	2.560820823470259E-4	DESIGN	1.509222492093037E-4	DEFECT	9.84195141945257E-6	IMPLEMENTATION	3.3938748304872546E-6	DOCUMENTATION	9.68788671497893E-7	TEST
// We've been here before	WITHOUT_CLASSIFICATION	0.9998588722772981	WITHOUT_CLASSIFICATION	5.2612985297026826E-5	DESIGN	4.915382694805642E-5	DEFECT	3.199980133401666E-5	IMPLEMENTATION	4.167527488605435E-6	DOCUMENTATION	3.193581634330177E-6	TEST
// it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.9999883801238446	WITHOUT_CLASSIFICATION	1.1122513904464035E-5	DESIGN	2.5638195543256106E-7	DEFECT	1.6416478399632353E-7	TEST	4.429845142946379E-8	IMPLEMENTATION	3.2517060004097474E-8	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9995787910535222	WITHOUT_CLASSIFICATION	2.560820823470259E-4	DESIGN	1.509222492093037E-4	DEFECT	9.84195141945257E-6	IMPLEMENTATION	3.3938748304872546E-6	DOCUMENTATION	9.68788671497893E-7	TEST
// if either its role changed,	WITHOUT_CLASSIFICATION	0.9999995293851017	WITHOUT_CLASSIFICATION	4.670170758256148E-7	DESIGN	1.6946197133912666E-9	DEFECT	1.4317426059278398E-9	TEST	3.9968730190752395E-10	IMPLEMENTATION	7.177274484877916E-11	DOCUMENTATION
// or its key changed	WITHOUT_CLASSIFICATION	0.9999944638186654	WITHOUT_CLASSIFICATION	3.804757757924111E-6	DESIGN	1.0802705908545954E-6	DEFECT	5.987867496712593E-7	IMPLEMENTATION	3.26866985548105E-8	TEST	1.967953756716395E-8	DOCUMENTATION
// we will need to create new entries	WITHOUT_CLASSIFICATION	0.9999934327254897	WITHOUT_CLASSIFICATION	4.772891625135718E-6	IMPLEMENTATION	1.5279840781992874E-6	DESIGN	1.574848248796391E-7	DOCUMENTATION	8.902738976208162E-8	TEST	1.9886592284269128E-8	DEFECT
// we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.9999815838532591	WITHOUT_CLASSIFICATION	1.3578321400142978E-5	IMPLEMENTATION	2.793093291027288E-6	DESIGN	1.7846148207729944E-6	DEFECT	1.5492455403741693E-7	DOCUMENTATION	1.0519267484433953E-7	TEST
// force initialize!	WITHOUT_CLASSIFICATION	0.999999589877843	WITHOUT_CLASSIFICATION	3.0192237596744967E-7	IMPLEMENTATION	5.548576620757739E-8	DEFECT	3.5743676076437294E-8	DESIGN	1.1205145959617577E-8	DOCUMENTATION	5.765193016131265E-9	TEST
// else if it's elements changed	WITHOUT_CLASSIFICATION	0.9999998457606669	WITHOUT_CLASSIFICATION	1.296888774922728E-7	IMPLEMENTATION	1.9922526365343098E-8	DESIGN	3.6003883699060002E-9	DEFECT	8.807282687922581E-10	TEST	1.4681251456308014E-10	DOCUMENTATION
//ATTRIBUTES MAINTAINED BETWEEN FLUSH CYCLES	WITHOUT_CLASSIFICATION	0.9999823344054829	WITHOUT_CLASSIFICATION	1.0449353029460895E-5	DESIGN	5.846990097580223E-6	IMPLEMENTATION	5.998025099798295E-7	DOCUMENTATION	3.9610397904973035E-7	DEFECT	3.7334490099791E-7	TEST
// session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.9999997370890814	WITHOUT_CLASSIFICATION	2.3048089643243438E-7	DESIGN	2.723325889003511E-8	IMPLEMENTATION	2.364568330703477E-9	TEST	1.7141706090778474E-9	DEFECT	1.1180241508730903E-9	DOCUMENTATION
// allow the CollectionSnapshot to be serialized	WITHOUT_CLASSIFICATION	0.9998206883771721	WITHOUT_CLASSIFICATION	1.6394224319779636E-4	DESIGN	1.4237192309666153E-5	IMPLEMENTATION	1.0924850730028027E-6	DEFECT	2.156411608032716E-8	TEST	1.813813136103396E-8	DOCUMENTATION
// ATTRIBUTES USED ONLY DURING FLUSH CYCLE	WITHOUT_CLASSIFICATION	0.9999888804189139	WITHOUT_CLASSIFICATION	6.439568174729587E-6	DESIGN	3.84293228929446E-6	IMPLEMENTATION	3.7119078331903513E-7	DEFECT	3.279426561958703E-7	DOCUMENTATION	1.3794718250278908E-7	TEST
// "current" means the reference that was found during flush() 	WITHOUT_CLASSIFICATION	0.9999987628698491	WITHOUT_CLASSIFICATION	1.1244342991159772E-6	DEFECT	1.0266126608429475E-7	DESIGN	7.488477323839256E-9	DOCUMENTATION	2.1273686941705247E-9	IMPLEMENTATION	4.18739717555008E-10	TEST
// "loaded" means the reference that is consistent  // with the current database state	WITHOUT_CLASSIFICATION	0.9999932592690656	WITHOUT_CLASSIFICATION	3.358820128179551E-6	IMPLEMENTATION	2.9002286434222138E-6	DESIGN	4.4991726657575686E-7	DEFECT	2.561006124010999E-8	TEST	6.154834987671325E-9	DOCUMENTATION
// during flush, we navigate the object graph to // collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.998047370395652	WITHOUT_CLASSIFICATION	0.0019304267300945374	DESIGN	2.0941215304940087E-5	IMPLEMENTATION	7.18226535120524E-7	TEST	3.1015517388996723E-7	DEFECT	2.3327723950108463E-7	DOCUMENTATION
// if we instantiate a collection during the flush() process, // we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.9999999988450762	WITHOUT_CLASSIFICATION	8.090822284448782E-10	DESIGN	2.7204364649247694E-10	TEST	7.169631325659523E-11	DEFECT	2.0704846662037914E-12	DOCUMENTATION	3.108211370887576E-14	IMPLEMENTATION
// new collections that get found + wrapped // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999371495848609	WITHOUT_CLASSIFICATION	6.277173021563607E-5	DESIGN	6.058512612725621E-8	IMPLEMENTATION	1.6358652009785453E-8	DEFECT	1.559686340691752E-9	TEST	1.814588483243974E-10	DOCUMENTATION
//a newly wrapped collection is NOT dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.9806596942080441	WITHOUT_CLASSIFICATION	0.019334749822083212	DESIGN	3.2375281709226834E-6	DEFECT	1.5217723739805141E-6	IMPLEMENTATION	7.208764845879907E-7	TEST	7.57928431674945E-8	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9991510923300557	WITHOUT_CLASSIFICATION	5.03251395030866E-4	IMPLEMENTATION	2.7703278251946717E-4	DESIGN	5.6146502779554414E-5	DEFECT	8.784864973975426E-6	DOCUMENTATION	3.692124640477876E-6	TEST
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9991510923300557	WITHOUT_CLASSIFICATION	5.03251395030866E-4	IMPLEMENTATION	2.7703278251946717E-4	DESIGN	5.6146502779554414E-5	DEFECT	8.784864973975426E-6	DOCUMENTATION	3.692124640477876E-6	TEST
// detached collections that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999952960284091	WITHOUT_CLASSIFICATION	4.651285014892536E-6	DESIGN	3.955175727767689E-8	DEFECT	1.2882710981397917E-8	IMPLEMENTATION	1.807955418210605E-10	TEST	7.131243944724635E-11	DOCUMENTATION
//optimization	WITHOUT_CLASSIFICATION	0.9998961679630507	WITHOUT_CLASSIFICATION	8.895676186800647E-5	DEFECT	5.988892417184839E-6	DESIGN	4.6263076792193244E-6	IMPLEMENTATION	3.573322028535444E-6	DOCUMENTATION	6.867529564178001E-7	TEST
//optimization //optimization	WITHOUT_CLASSIFICATION	0.9999731380883882	WITHOUT_CLASSIFICATION	2.5684086285287156E-5	DEFECT	6.563270748434761E-7	DOCUMENTATION	3.5561165609987584E-7	DESIGN	8.673673371798932E-8	IMPLEMENTATION	7.914986189049318E-8	TEST
//re-snapshot	WITHOUT_CLASSIFICATION	0.999794200125418	WITHOUT_CLASSIFICATION	1.834070897799191E-4	DESIGN	1.4260129561104027E-5	IMPLEMENTATION	5.140803015888999E-6	DEFECT	1.5158401624401E-6	DOCUMENTATION	1.4760120628124927E-6	TEST
// for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.9999971110157293	WITHOUT_CLASSIFICATION	1.3946033964207685E-6	IMPLEMENTATION	9.920500747819566E-7	DESIGN	3.321128431212091E-7	DEFECT	1.6225793981112295E-7	DOCUMENTATION	7.960016569250565E-9	TEST
//NOTE: this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.5204628124060913	WITHOUT_CLASSIFICATION	0.4513470807231521	DESIGN	0.027969253857430484	DEFECT	1.8983376472498525E-4	TEST	2.7418124730309984E-5	DOCUMENTATION	3.6011238708821167E-6	IMPLEMENTATION
//memory optimization	WITHOUT_CLASSIFICATION	0.9999635833722771	WITHOUT_CLASSIFICATION	3.4484332124718634E-5	DEFECT	1.122813222479733E-6	DESIGN	4.1129625947667205E-7	DOCUMENTATION	2.853403403340696E-7	IMPLEMENTATION	1.1284577590447893E-7	TEST
// use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999518790541834	WITHOUT_CLASSIFICATION	4.78139938108639E-5	DESIGN	2.813031784958679E-7	DEFECT	1.9840562032749266E-8	DOCUMENTATION	5.3080528934358485E-9	IMPLEMENTATION	5.002124340068349E-10	TEST
// copied from Session:	WITHOUT_CLASSIFICATION	0.9999643756303982	WITHOUT_CLASSIFICATION	3.3272944496551115E-5	DESIGN	1.5023260096151122E-6	DEFECT	6.622324905746548E-7	IMPLEMENTATION	1.2545477263056166E-7	TEST	6.141183234005175E-8	DOCUMENTATION
// this should not happen since the DTD prevents it	WITHOUT_CLASSIFICATION	0.9999232040667795	WITHOUT_CLASSIFICATION	3.953905739042174E-5	DEFECT	1.962611837162443E-5	DESIGN	1.7129134941270348E-5	IMPLEMENTATION	2.7275461424653986E-7	DOCUMENTATION	2.2886790300038662E-7	TEST
// JoinProcessor needs to know if the where clause fragment came from a dynamic filter or not so it // can put the where clause fragment in the right place in the SQL AST.   'hasFilterCondition' keeps track // of that fact.	WITHOUT_CLASSIFICATION	0.999633720532781	WITHOUT_CLASSIFICATION	3.596858173693787E-4	DESIGN	6.530067108741566E-6	DEFECT	4.054432920793352E-8	DOCUMENTATION	2.1370665078439713E-8	TEST	1.667746532985961E-9	IMPLEMENTATION
// the current join represents the join between a many-to-many association table // and its "target" table.  Here we need to apply any additional filters // defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.999989559479914	WITHOUT_CLASSIFICATION	1.038979328160006E-5	DESIGN	3.300952837688567E-8	DOCUMENTATION	1.759563603185408E-8	IMPLEMENTATION	6.73293522632961E-11	DEFECT	5.431059858458914E-11	TEST
//check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.9999465324026241	WITHOUT_CLASSIFICATION	5.323316625524047E-5	DESIGN	1.6449560223762946E-7	IMPLEMENTATION	3.9491276275274393E-8	DOCUMENTATION	2.7036457194805324E-8	DEFECT	3.4077849319989537E-9	TEST
//values is not null and is checkable, we'll look deeper	WITHOUT_CLASSIFICATION	0.9614106666804336	WITHOUT_CLASSIFICATION	0.038504291998134293	DESIGN	5.879647999315693E-5	DEFECT	2.3984372154725954E-5	IMPLEMENTATION	1.8807897110684975E-6	TEST	3.796795730775071E-7	DOCUMENTATION
//for non null args, check for components and elements containing components	WITHOUT_CLASSIFICATION	0.9999993989671437	WITHOUT_CLASSIFICATION	5.974907279345244E-7	DESIGN	2.8865602744498476E-9	IMPLEMENTATION	3.8260738194615756E-10	DEFECT	2.348523409960957E-10	DOCUMENTATION	3.81086190557868E-11	TEST
//cache the hashcode	WITHOUT_CLASSIFICATION	0.999388633467606	WITHOUT_CLASSIFICATION	5.879500182554945E-4	DESIGN	1.9757819797177E-5	IMPLEMENTATION	1.5958086765717542E-6	DOCUMENTATION	1.2486871140933247E-6	DEFECT	8.141985507043627E-7	TEST
//persistent collections may have components	WITHOUT_CLASSIFICATION	0.9999994536975568	WITHOUT_CLASSIFICATION	4.1997175859221234E-7	DESIGN	1.0630847534298993E-7	IMPLEMENTATION	1.3306987243675198E-8	TEST	6.153364170652892E-9	DEFECT	5.618577765563635E-10	DOCUMENTATION
//check for all components values in the collection	WITHOUT_CLASSIFICATION	0.9999997283712158	WITHOUT_CLASSIFICATION	2.685462096973898E-7	DESIGN	2.4612424374126595E-9	DEFECT	3.106919036463244E-10	IMPLEMENTATION	2.4712598010297756E-10	DOCUMENTATION	6.351404102316379E-11	TEST
/* will check current level if some of them are not null	WITHOUT_CLASSIFICATION	0.9970756519442194	WITHOUT_CLASSIFICATION	0.0021317279350324754	DESIGN	4.0583937342036E-4	DEFECT	3.0297767556571216E-4	IMPLEMENTATION	7.687953877513226E-5	DOCUMENTATION	6.923532986836117E-6	TEST
//do the test	WITHOUT_CLASSIFICATION	0.9986490873835581	WITHOUT_CLASSIFICATION	0.001341098060741897	TEST	3.733901040460347E-6	DOCUMENTATION	2.5833998923421036E-6	IMPLEMENTATION	2.392947569945321E-6	DESIGN	1.1043071971331927E-6	DEFECT
// if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.9999954475519061	WITHOUT_CLASSIFICATION	4.377073190134617E-6	DESIGN	1.6497517877101904E-7	DEFECT	5.779487392749124E-9	IMPLEMENTATION	2.643618982735869E-9	TEST	1.9766186957157588E-9	DOCUMENTATION
//unwrap it	WITHOUT_CLASSIFICATION	0.9999849671419095	WITHOUT_CLASSIFICATION	7.574508197032262E-6	DESIGN	4.473791071064241E-6	IMPLEMENTATION	2.614807945816763E-6	DEFECT	2.019416862393155E-7	TEST	1.6780919035096216E-7	DOCUMENTATION
// See if the entity is already bound to this session, if not look at the // entity identifier and assume that the entity is persistent if the // id is not "unsaved" (that is, we rely on foreign keys to keep // database integrity)	WITHOUT_CLASSIFICATION	0.9999922259419586	WITHOUT_CLASSIFICATION	7.642765003201771E-6	DESIGN	1.288349775904997E-7	DEFECT	1.9942456632556848E-9	DOCUMENTATION	3.0473971425861647E-10	TEST	1.5907522493894705E-10	IMPLEMENTATION
// an unfetched association can only point to // an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.9999996438742699	WITHOUT_CLASSIFICATION	3.490413706416076E-7	DESIGN	4.1207266849091906E-9	DEFECT	1.8650177152810583E-9	DOCUMENTATION	6.846930411627946E-10	IMPLEMENTATION	4.139219876547217E-10	TEST
// let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999999540820825	WITHOUT_CLASSIFICATION	2.7982411543468823E-8	IMPLEMENTATION	1.511041483554767E-8	DESIGN	1.769140971935569E-9	DEFECT	1.0107628651429006E-9	DOCUMENTATION	4.518719340149376E-11	TEST
// let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999971418373315	WITHOUT_CLASSIFICATION	2.4480038746426375E-6	DESIGN	3.82523477851694E-7	IMPLEMENTATION	1.6883882641806012E-8	DEFECT	1.0239989100782965E-8	DOCUMENTATION	5.114442471556334E-10	TEST
// we use the assumed value, if there is one, to avoid hitting // the database	WITHOUT_CLASSIFICATION	0.9999963340024001	WITHOUT_CLASSIFICATION	3.64559071061879E-6	DESIGN	1.4014602168897576E-8	TEST	6.023753423035036E-9	DEFECT	2.518623604672448E-10	IMPLEMENTATION	1.1667135623845151E-10	DOCUMENTATION
// hit the database, after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.8263004550064426	DESIGN	0.1733346980948492	WITHOUT_CLASSIFICATION	2.8564942774360666E-4	DEFECT	7.590247116659453E-5	IMPLEMENTATION	2.480401473783786E-6	TEST	8.145983242908245E-7	DOCUMENTATION
// context-entity-identifier returns null explicitly if the entity // is not associated with the persistence context; so make some // deeper checks...	WITHOUT_CLASSIFICATION	0.9999841311437077	WITHOUT_CLASSIFICATION	1.4052187625611779E-5	DESIGN	8.507133921553299E-7	IMPLEMENTATION	5.362868449518588E-7	TEST	3.992012183531149E-7	DEFECT	3.0467211237433945E-8	DOCUMENTATION
//int count = 0;	WITHOUT_CLASSIFICATION	0.9999857563799631	WITHOUT_CLASSIFICATION	7.243586275528569E-6	DEFECT	5.301675031343544E-6	DESIGN	1.1302550021944835E-6	IMPLEMENTATION	4.585878768977852E-7	DOCUMENTATION	1.0951585093526407E-7	TEST
//the first key found after the given key	WITHOUT_CLASSIFICATION	0.9999981927026754	WITHOUT_CLASSIFICATION	1.0283502529622285E-6	DESIGN	5.396187770704076E-7	IMPLEMENTATION	1.1253525637116213E-7	TEST	1.0235157722268981E-7	DOCUMENTATION	2.444146102160857E-8	DEFECT
//checkForEnd = false;	WITHOUT_CLASSIFICATION	0.9999910048569091	WITHOUT_CLASSIFICATION	6.9843786353245035E-6	DESIGN	1.314022627541169E-6	IMPLEMENTATION	4.60971273629848E-7	DEFECT	1.7656074952342703E-7	DOCUMENTATION	5.9209804961542824E-8	TEST
//count++;	WITHOUT_CLASSIFICATION	0.9998476970305575	WITHOUT_CLASSIFICATION	1.1276046330079143E-4	DESIGN	3.41639649612041E-5	DEFECT	3.0696968654532583E-6	DOCUMENTATION	1.6214030231611217E-6	IMPLEMENTATION	6.87441291823818E-7	TEST
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9999235200248057	WITHOUT_CLASSIFICATION	6.909316818714193E-5	DESIGN	5.468946979291558E-6	IMPLEMENTATION	1.1598668500883302E-6	TEST	4.6490406338441654E-7	DOCUMENTATION	2.9308911444483725E-7	DEFECT
//we ran out of keys to try	WITHOUT_CLASSIFICATION	0.9997567477394993	WITHOUT_CLASSIFICATION	2.3983074369091878E-4	DESIGN	2.2805763636967974E-6	DEFECT	5.630750028028719E-7	DOCUMENTATION	4.449557960830226E-7	IMPLEMENTATION	1.3290964710731207E-7	TEST
//first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.9999992638675126	WITHOUT_CLASSIFICATION	2.721282573582721E-7	DEFECT	2.654290578659292E-7	IMPLEMENTATION	1.7299037285854176E-7	DESIGN	1.5706032993310527E-8	TEST	9.878766484131981E-9	DOCUMENTATION
//the first id found after the given id	WITHOUT_CLASSIFICATION	0.9999956478888312	WITHOUT_CLASSIFICATION	3.2319661048227875E-6	IMPLEMENTATION	6.527742471697682E-7	DESIGN	3.323225758965851E-7	TEST	1.0774576176310396E-7	DOCUMENTATION	2.7302478976929707E-8	DEFECT
//we ran out of ids to try	WITHOUT_CLASSIFICATION	0.9978285019160559	WITHOUT_CLASSIFICATION	0.0021587967422846016	DESIGN	9.602640652101795E-6	DEFECT	2.073627424418111E-6	IMPLEMENTATION	8.309199320216255E-7	DOCUMENTATION	1.941536510067817E-7	TEST
// look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.9999999804930946	WITHOUT_CLASSIFICATION	1.4065997888208163E-8	IMPLEMENTATION	3.628264000716889E-9	DEFECT	1.281224462866766E-9	TEST	3.6177334901515506E-10	DESIGN	1.6964558636320992E-10	DOCUMENTATION
// ignore this row of results! Note the early exit	WITHOUT_CLASSIFICATION	0.9999273604909067	WITHOUT_CLASSIFICATION	7.214396613963034E-5	DEFECT	3.612946978169794E-7	DESIGN	1.0203828270272877E-7	TEST	1.9860985235623685E-8	IMPLEMENTATION	1.2348987907798318E-8	DOCUMENTATION
// initialize this collection	WITHOUT_CLASSIFICATION	0.9998138374333091	WITHOUT_CLASSIFICATION	1.8313634176759573E-4	DESIGN	1.8173372286574664E-6	IMPLEMENTATION	6.35715476924327E-7	TEST	3.407854092751874E-7	DEFECT	2.3238680834082824E-7	DOCUMENTATION
// create one	WITHOUT_CLASSIFICATION	0.9999978255997375	WITHOUT_CLASSIFICATION	1.7585928222054034E-6	DESIGN	2.189978005912252E-7	IMPLEMENTATION	1.471387563975106E-7	DEFECT	2.7921740524980572E-8	DOCUMENTATION	2.1749142656961984E-8	TEST
// warning: can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.9984403298946268	WITHOUT_CLASSIFICATION	0.0015557770076322988	DEFECT	3.290391000087227E-6	DESIGN	4.349485455411938E-7	IMPLEMENTATION	1.6203584594685232E-7	DOCUMENTATION	5.72234916962783E-9	TEST
// there were no queued additions // and the role has a cache	WITHOUT_CLASSIFICATION	0.9999769933245336	WITHOUT_CLASSIFICATION	2.295011655460683E-5	DESIGN	4.6773914842927364E-8	DEFECT	6.057971722288555E-9	IMPLEMENTATION	2.4075085824200736E-9	DOCUMENTATION	1.319516679770255E-9	TEST
// and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.999999869115191	WITHOUT_CLASSIFICATION	9.147124812435952E-8	DESIGN	3.469387073356597E-8	DEFECT	2.612443105173938E-9	TEST	1.0966068078774726E-9	IMPLEMENTATION	1.0106400667341611E-9	DOCUMENTATION
// some filters affecting the collection are enabled on the session, so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.9998831864795401	WITHOUT_CLASSIFICATION	1.1674811939529138E-4	DESIGN	3.980288008790599E-8	DEFECT	1.8715933360978018E-8	IMPLEMENTATION	6.346149358252502E-9	TEST	5.361017630917858E-10	DOCUMENTATION
// cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999077860591804	WITHOUT_CLASSIFICATION	7.20412546516672E-5	DESIGN	1.1424080613731744E-5	IMPLEMENTATION	7.933538320130073E-6	DEFECT	6.121129950364623E-7	DOCUMENTATION	2.029542388929504E-7	TEST
// loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999994034027165	WITHOUT_CLASSIFICATION	5.242910815838874E-7	DEFECT	4.9639692479861444E-8	IMPLEMENTATION	1.8705023230358622E-8	DESIGN	2.9106872255783857E-9	TEST	1.0507989203569527E-9	DOCUMENTATION
// Collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999890709468444	WITHOUT_CLASSIFICATION	7.1373421526317475E-6	DESIGN	3.417994538082059E-6	DEFECT	2.856247271132127E-7	IMPLEMENTATION	6.153566916621799E-8	DOCUMENTATION	2.6556068468289565E-8	TEST
// simple cache of param metadata based on query string.  Ideally, the // original "user-supplied query" string should be used to retreive this // metadata (i.e., not the para-list-expanded query string) to avoid // unnecessary cache entries. // Used solely for caching param metadata for native-sql queries, see // getSQLParameterMetadata() for a discussion as to why...	WITHOUT_CLASSIFICATION	0.9947178414927563	WITHOUT_CLASSIFICATION	0.005237989999002523	DESIGN	4.416689752005865E-5	DEFECT	1.3580487985384284E-9	IMPLEMENTATION	1.92927891287146E-10	TEST	5.974444162166302E-11	DOCUMENTATION
// the cache of the actual plans...	WITHOUT_CLASSIFICATION	0.9999996744387771	WITHOUT_CLASSIFICATION	2.6342403739775846E-7	IMPLEMENTATION	3.8828953956162314E-8	DEFECT	1.809299942465357E-8	DESIGN	4.614203769625068E-9	DOCUMENTATION	6.01028279350585E-10	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9996866627785144	WITHOUT_CLASSIFICATION	2.588796342758592E-4	DESIGN	4.658146770550267E-5	IMPLEMENTATION	4.1116288446745785E-6	DEFECT	2.9143409007184537E-6	DOCUMENTATION	8.501497588761329E-7	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9996866627785144	WITHOUT_CLASSIFICATION	2.588796342758592E-4	DESIGN	4.658146770550267E-5	IMPLEMENTATION	4.1116288446745785E-6	DEFECT	2.9143409007184537E-6	DOCUMENTATION	8.501497588761329E-7	TEST
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999999662233316	WITHOUT_CLASSIFICATION	3.183497216567321E-8	DESIGN	9.426938745601574E-10	DEFECT	5.103443639117044E-10	DOCUMENTATION	2.60926136161968E-10	IMPLEMENTATION	2.277318745010477E-10	TEST
// for native-sql queries, the param metadata is determined outside // any relation to a query plan, because query plan creation and/or // retreival for a native-sql query depends on all of the return // types having been set, which might not be the case up-front when // param metadata would be most useful	WITHOUT_CLASSIFICATION	0.9996617445993758	WITHOUT_CLASSIFICATION	3.376460533314342E-4	DESIGN	6.087284009843853E-7	DEFECT	5.311149770824292E-10	IMPLEMENTATION	5.765867227049037E-11	TEST	3.011799220149719E-11	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9987867690166068	WITHOUT_CLASSIFICATION	0.0010016586541777644	DEFECT	2.0759521035523226E-4	DESIGN	3.323735223943123E-6	IMPLEMENTATION	4.355419703344522E-7	DOCUMENTATION	2.1784166585918425E-7	TEST
// Recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999429561894284	WITHOUT_CLASSIFICATION	1.986607068650628E-5	DESIGN	1.852472692952599E-5	IMPLEMENTATION	1.701138687243247E-5	DEFECT	1.4452922286750329E-6	DOCUMENTATION	1.9633385438997385E-7	TEST
// don't care...	WITHOUT_CLASSIFICATION	0.9987867690166068	WITHOUT_CLASSIFICATION	0.0010016586541777644	DEFECT	2.0759521035523226E-4	DESIGN	3.323735223943123E-6	IMPLEMENTATION	4.355419703344522E-7	DOCUMENTATION	2.1784166585918425E-7	TEST
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9981459353847041	WITHOUT_CLASSIFICATION	0.001515471464143184	DESIGN	2.33010159291391E-4	IMPLEMENTATION	6.87685127727377E-5	DEFECT	3.6542022772749015E-5	TEST	2.724563159743877E-7	DOCUMENTATION
// break the outer loop !!!	WITHOUT_CLASSIFICATION	0.9998120841485333	WITHOUT_CLASSIFICATION	1.8211565741573784E-4	DESIGN	5.432164496155475E-6	DEFECT	2.16784931055459E-7	IMPLEMENTATION	8.988988927036361E-8	TEST	6.135473436436079E-8	DOCUMENTATION
// named parameter	WITHOUT_CLASSIFICATION	0.9996105895006427	WITHOUT_CLASSIFICATION	3.677511255823114E-4	DESIGN	2.0837048795429052E-5	IMPLEMENTATION	5.231381382967022E-7	DEFECT	2.4794212181665803E-7	TEST	5.124471911090401E-8	DOCUMENTATION
// could be either an ordinal or JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999876235220143	WITHOUT_CLASSIFICATION	1.2179287667102556E-5	DESIGN	1.0584158472672854E-7	DEFECT	8.503357061975108E-8	IMPLEMENTATION	3.980620684545968E-9	TEST	2.334542500887534E-9	DOCUMENTATION
// a peek ahead showed this as an JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999999001487321	WITHOUT_CLASSIFICATION	9.491373741989875E-8	DESIGN	1.990810575957951E-9	DEFECT	1.5921575012283016E-9	IMPLEMENTATION	8.014501868880367E-10	DOCUMENTATION	5.531120275867367E-10	TEST
// make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.9999998742073022	WITHOUT_CLASSIFICATION	6.998802334149096E-8	DESIGN	2.7648452160867954E-8	DEFECT	2.7024856183707334E-8	TEST	9.086671582795619E-10	DOCUMENTATION	2.2269903713390888E-10	IMPLEMENTATION
// pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9999973756798741	WITHOUT_CLASSIFICATION	2.6160625898625205E-6	DESIGN	4.65902182328013E-9	DEFECT	1.9497989656583848E-9	IMPLEMENTATION	8.313333411162875E-10	TEST	8.173818676459806E-10	DOCUMENTATION
// perform the actual work	WITHOUT_CLASSIFICATION	0.9999998791482169	WITHOUT_CLASSIFICATION	6.507540911905454E-8	DEFECT	4.001360984637236E-8	DESIGN	8.606120615261889E-9	IMPLEMENTATION	5.4192482576496804E-9	DOCUMENTATION	1.7373953562939366E-9	TEST
// if everything went ok, commit the transaction and close the obtained // connection handle...	WITHOUT_CLASSIFICATION	0.9999972974412407	WITHOUT_CLASSIFICATION	1.737843810092962E-6	IMPLEMENTATION	9.159817846958448E-7	DESIGN	2.7225150961118583E-8	DEFECT	1.4092934999368155E-8	DOCUMENTATION	7.415078488451687E-9	TEST
// at some point the processing went bad, so we need to: //      1) make sure the connection handle gets released //      2) try to cleanup the JTA context as much as possible	WITHOUT_CLASSIFICATION	0.9995518821500774	WITHOUT_CLASSIFICATION	3.805604797149378E-4	DESIGN	2.4069565365171365E-5	DOCUMENTATION	1.805196577151872E-5	DEFECT	1.5514304203898743E-5	IMPLEMENTATION	9.921534867097953E-6	TEST
// finally handle the exception	WITHOUT_CLASSIFICATION	0.9999795393950591	WITHOUT_CLASSIFICATION	1.9391650994544412E-5	DESIGN	8.757400215974933E-7	DEFECT	1.691165574050092E-7	IMPLEMENTATION	2.1209368619218648E-8	DOCUMENTATION	2.8879987516895627E-9	TEST
// a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.9970516538036298	WITHOUT_CLASSIFICATION	0.002948342610020531	DESIGN	3.2985112306637098E-9	DEFECT	1.4765811123832408E-10	DOCUMENTATION	8.280877570540601E-11	IMPLEMENTATION	5.7371673914896254E-11	TEST
//saveOrUpdateCopy() is deprecated!	WITHOUT_CLASSIFICATION	0.9999909963513541	WITHOUT_CLASSIFICATION	5.117336063716598E-6	DEFECT	3.6965441365084287E-6	DESIGN	7.524864637818768E-8	DOCUMENTATION	5.9167336171116733E-8	TEST	5.5352462975577185E-8	IMPLEMENTATION
// collectionPersister should not be null, but we don't want to throw // an exception if it is null	WITHOUT_CLASSIFICATION	0.9997466599460672	WITHOUT_CLASSIFICATION	1.6918491544267732E-4	DESIGN	8.387325676830245E-5	DEFECT	2.803751768000014E-7	TEST	9.60104336334885E-10	IMPLEMENTATION	5.464406823876628E-10	DOCUMENTATION
// otherwise a null or brand new collection // this will also (inefficiently) handle arrays, which // have no snapshot, so we can't do any better //processArrayOrNewCollection(collection, type);	WITHOUT_CLASSIFICATION	0.9987451208828607	WITHOUT_CLASSIFICATION	0.0012547902248260816	DESIGN	5.012863203835543E-8	DOCUMENTATION	3.6893462229453324E-8	DEFECT	1.4514039532030017E-9	TEST	4.188149403409616E-10	IMPLEMENTATION
// a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.9991073016114891	WITHOUT_CLASSIFICATION	8.926956661064314E-4	DESIGN	2.52047495539301E-9	DEFECT	1.8566350410771953E-10	DOCUMENTATION	1.0103038307457433E-11	IMPLEMENTATION	6.1629726950519775E-12	TEST
//do nothing	WITHOUT_CLASSIFICATION	0.999991466626628	WITHOUT_CLASSIFICATION	5.8730680503065265E-6	DESIGN	1.3757342786101952E-6	DEFECT	6.827744585262511E-7	DOCUMENTATION	3.8416345422771443E-7	IMPLEMENTATION	2.176331304151002E-7	TEST
//do nothing	WITHOUT_CLASSIFICATION	0.999991466626628	WITHOUT_CLASSIFICATION	5.8730680503065265E-6	DESIGN	1.3757342786101952E-6	DEFECT	6.827744585262511E-7	DOCUMENTATION	3.8416345422771443E-7	IMPLEMENTATION	2.176331304151002E-7	TEST
//Force a substitution!	WITHOUT_CLASSIFICATION	0.9997590571776181	WITHOUT_CLASSIFICATION	2.3157996596708587E-4	DESIGN	4.426928043863925E-6	DEFECT	2.7575852567131136E-6	IMPLEMENTATION	1.8832797321719822E-6	DOCUMENTATION	2.95063381945117E-7	TEST
// The user requested a "greater" (i.e. more restrictive) form of // pessimistic lock	WITHOUT_CLASSIFICATION	0.9999995400497304	WITHOUT_CLASSIFICATION	3.7026184318734727E-7	DEFECT	6.519515491928697E-8	TEST	1.846029727924341E-8	IMPLEMENTATION	5.517411703840515E-9	DESIGN	5.155626271266873E-10	DOCUMENTATION
// the database now holds a lock + the object is flushed from the cache, // so release the soft lock	WITHOUT_CLASSIFICATION	0.9999974591284464	WITHOUT_CLASSIFICATION	2.4437860140788127E-6	DEFECT	5.8841832850654765E-8	DESIGN	3.695975444366939E-8	IMPLEMENTATION	8.879753173496835E-10	TEST	3.9597677708457716E-10	DOCUMENTATION
// now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.9999871932744612	WITHOUT_CLASSIFICATION	1.0343624341522242E-5	IMPLEMENTATION	2.456971898157443E-6	DESIGN	4.752449844508669E-9	DEFECT	1.0936856467729904E-9	DOCUMENTATION	2.8316377392005517E-10	TEST
// Search for collections by reachability, updating their role. // We don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.9609121072728134	WITHOUT_CLASSIFICATION	0.039086146586960795	DESIGN	1.6973225178370937E-6	DEFECT	4.4113106259145713E-8	TEST	2.8111897561396687E-9	IMPLEMENTATION	1.8934119473874123E-9	DOCUMENTATION
// this is a situation where the entity id is assigned by a post-insert generator // and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.9999973883628442	WITHOUT_CLASSIFICATION	1.4361196740685363E-6	DEFECT	1.1444195819478076E-6	DESIGN	2.1821246450558738E-8	TEST	8.281888046824387E-9	IMPLEMENTATION	9.947652079896647E-10	DOCUMENTATION
// NOTE: we need to do the wrap here even if its not "dirty", // because collections need wrapping but changes to _them_ // don't dirty the container. Also, for versioned data, we // need to wrap before calling searchForDirtyCollections	WITHOUT_CLASSIFICATION	0.91010936724514	WITHOUT_CLASSIFICATION	0.08851878196090017	IMPLEMENTATION	0.0013101036544805485	DESIGN	5.720486173176016E-5	DEFECT	4.3105648620286395E-6	TEST	2.3171288535501235E-7	DOCUMENTATION
//grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.9999597764441408	WITHOUT_CLASSIFICATION	2.489195305836105E-5	DESIGN	1.4406955589775912E-5	IMPLEMENTATION	5.923657641250782E-7	DEFECT	1.8938202411400262E-7	TEST	1.4289942294599221E-7	DOCUMENTATION
// grab its current state	WITHOUT_CLASSIFICATION	0.9999988965769857	WITHOUT_CLASSIFICATION	1.0791944055261893E-6	DESIGN	1.1416740530990785E-8	DEFECT	7.038383053674497E-9	IMPLEMENTATION	3.073992045662605E-9	DOCUMENTATION	2.699493078919945E-9	TEST
// schedule the update // note that we intentionally do _not_ pass in currentPersistentState!	WITHOUT_CLASSIFICATION	0.9999999611075326	WITHOUT_CLASSIFICATION	3.6001702293469485E-8	IMPLEMENTATION	2.2804919720523382E-9	DEFECT	3.5345727140448353E-10	DESIGN	2.535675704477748E-10	DOCUMENTATION	3.248192668103976E-12	TEST
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999987093861487	WITHOUT_CLASSIFICATION	1.229253356200276E-6	DESIGN	5.070902925472599E-8	DEFECT	5.1850800486524645E-9	TEST	4.366526007237495E-9	DOCUMENTATION	1.0998597658832623E-9	IMPLEMENTATION
// give the Interceptor a chance to process property values, if the properties // were modified by the Interceptor, we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9999995599884053	WITHOUT_CLASSIFICATION	4.386698519036794E-7	DESIGN	6.577926277386386E-10	TEST	3.580323288780826E-10	DEFECT	3.239314618076503E-10	DOCUMENTATION	1.9863880207682305E-12	IMPLEMENTATION
// compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.9999999626987159	WITHOUT_CLASSIFICATION	2.348503703139115E-8	IMPLEMENTATION	1.1464256248096587E-8	DESIGN	2.2869632093770025E-9	DEFECT	3.530279217932798E-11	TEST	2.9724844312242755E-11	DOCUMENTATION
// if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.9999915444900661	WITHOUT_CLASSIFICATION	8.16495346702388E-6	DESIGN	2.737775278419737E-7	DEFECT	1.2989359238286616E-8	TEST	3.2055359296802727E-9	IMPLEMENTATION	5.840440058392175E-10	DOCUMENTATION
// increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.9991145881671852	WITHOUT_CLASSIFICATION	8.793913185351001E-4	DESIGN	2.4829549549421476E-6	DOCUMENTATION	1.9255816033998352E-6	IMPLEMENTATION	1.351008933001818E-6	DEFECT	2.6096878835749903E-7	TEST
// check nullability but do not perform command execute // we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.9999993660614883	WITHOUT_CLASSIFICATION	6.198578154455791E-7	DESIGN	1.3341034503665513E-8	DEFECT	3.659769074740901E-10	TEST	2.507775121486325E-10	DOCUMENTATION	1.229072258828662E-10	IMPLEMENTATION
//give the Interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.9999603215736678	WITHOUT_CLASSIFICATION	3.9560099903456277E-5	DESIGN	9.678506452057623E-8	DEFECT	1.3546935055445402E-8	DOCUMENTATION	4.466939625721903E-9	IMPLEMENTATION	3.5274896116295767E-9	TEST
//now we might need to recalculate the dirtyProperties array	WITHOUT_CLASSIFICATION	0.9176112285712872	WITHOUT_CLASSIFICATION	0.08193473661411693	DESIGN	4.195405443004303E-4	IMPLEMENTATION	1.5448169584495435E-5	DEFECT	1.2848076438983972E-5	DOCUMENTATION	6.198024272008564E-6	TEST
//use the current version	WITHOUT_CLASSIFICATION	0.9999852983247092	WITHOUT_CLASSIFICATION	1.2482914672160438E-5	DESIGN	1.3522416024538297E-6	IMPLEMENTATION	4.535562174781708E-7	DOCUMENTATION	4.0681722033376673E-7	DEFECT	6.145578416309172E-9	TEST
// Interceptor returned null, so do the dirtycheck ourself, if possible	WITHOUT_CLASSIFICATION	0.9999999773664702	WITHOUT_CLASSIFICATION	1.5203703305562586E-8	DESIGN	7.164661411657222E-9	IMPLEMENTATION	2.490803956674799E-10	DEFECT	1.2614744228007197E-11	DOCUMENTATION	3.470123956773959E-12	TEST
// object loaded by update()	WITHOUT_CLASSIFICATION	0.9999969667532994	WITHOUT_CLASSIFICATION	1.2515730015666799E-6	DEFECT	9.988202549281487E-7	DESIGN	7.251333591790243E-7	IMPLEMENTATION	3.545652743550986E-8	DOCUMENTATION	2.2263557471924606E-8	TEST
// dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.9999942003345478	WITHOUT_CLASSIFICATION	4.481549250317562E-6	IMPLEMENTATION	1.2669604375854214E-6	DESIGN	3.130625874067806E-8	DEFECT	1.147955426810364E-8	DOCUMENTATION	8.369951285468959E-9	TEST
// dirty check against the database snapshot, if possible/necessary	WITHOUT_CLASSIFICATION	0.9988039225989247	WITHOUT_CLASSIFICATION	0.0011125134569276282	IMPLEMENTATION	7.95847297177939E-5	DESIGN	3.4324638155005773E-6	DEFECT	3.77476452437459E-7	TEST	1.6927416199714814E-7	DOCUMENTATION
// the Interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.9950931197053925	WITHOUT_CLASSIFICATION	0.0032261048323417776	DESIGN	0.0016778035289748674	IMPLEMENTATION	2.1777411948284927E-6	DEFECT	4.91703234295403E-7	DOCUMENTATION	3.0248886155978105E-7	TEST
//even process null collections	WITHOUT_CLASSIFICATION	0.999999795047944	WITHOUT_CLASSIFICATION	1.0919530776754021E-7	IMPLEMENTATION	5.1148044811108497E-8	DESIGN	3.661721729297914E-8	DEFECT	6.505067881281679E-9	DOCUMENTATION	1.4864182933120458E-9	TEST
// get the id from the object	WITHOUT_CLASSIFICATION	0.9999288485218768	WITHOUT_CLASSIFICATION	7.098019182444132E-5	DESIGN	8.761181989677137E-8	DEFECT	5.0514389821024794E-8	TEST	2.740616931222551E-8	DOCUMENTATION	5.753919823387353E-9	IMPLEMENTATION
//always do an INSERT, and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.9999990073828773	WITHOUT_CLASSIFICATION	9.59670450928867E-7	DESIGN	3.16396777691295E-8	DEFECT	7.349536331028478E-10	TEST	5.687542450646939E-10	DOCUMENTATION	3.2860730137932812E-12	IMPLEMENTATION
//what is the version on the database?	WITHOUT_CLASSIFICATION	0.6577472247003937	DESIGN	0.33977482467171033	WITHOUT_CLASSIFICATION	0.0016153953835621661	IMPLEMENTATION	8.505802848593432E-4	DEFECT	7.722173022155468E-6	TEST	4.252786452497142E-6	DOCUMENTATION
/// HHH-2378	WITHOUT_CLASSIFICATION	0.9999839569973341	WITHOUT_CLASSIFICATION	1.0892323325635285E-5	DESIGN	2.5710156837758206E-6	DEFECT	2.0664103732698423E-6	IMPLEMENTATION	2.739644789316343E-7	DOCUMENTATION	2.392888042604369E-7	TEST
//will result in a SQL UPDATE:	WITHOUT_CLASSIFICATION	0.9999631131944781	WITHOUT_CLASSIFICATION	2.48798236512231E-5	DESIGN	1.1911616928712631E-5	DEFECT	5.816892265125609E-8	DOCUMENTATION	2.7924315648527008E-8	TEST	9.27170358505648E-9	IMPLEMENTATION
//else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.999910345868649	WITHOUT_CLASSIFICATION	8.50028988564401E-5	DESIGN	4.027111185864051E-6	DOCUMENTATION	3.930855846879572E-7	DEFECT	1.9270947495500747E-7	TEST	3.832624899572916E-8	IMPLEMENTATION
// no existing row - do an insert	WITHOUT_CLASSIFICATION	0.9999886208783393	WITHOUT_CLASSIFICATION	1.0942085398804816E-5	DESIGN	2.2058113830446002E-7	IMPLEMENTATION	1.2059793325881695E-7	DEFECT	5.4957622529463785E-8	TEST	4.08995678473867E-8	DOCUMENTATION
//refresh() does not pass an entityName	WITHOUT_CLASSIFICATION	0.9999115877488131	WITHOUT_CLASSIFICATION	7.109144664687334E-5	DESIGN	9.136935209734304E-6	DEFECT	6.460570240686386E-6	TEST	1.4954546210373617E-6	IMPLEMENTATION	2.2784446868842893E-7	DOCUMENTATION
//do not return a proxy! //(this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.9994546040883808	WITHOUT_CLASSIFICATION	5.400779903742156E-4	DESIGN	4.201919063717527E-6	DEFECT	8.002717922059325E-7	TEST	1.653480773067626E-7	IMPLEMENTATION	1.503823116678801E-7	DOCUMENTATION
//return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.9996372825729203	WITHOUT_CLASSIFICATION	3.558267232055865E-4	DESIGN	5.451319674985125E-6	DEFECT	1.0923436241818853E-6	IMPLEMENTATION	2.2539201395422108E-7	DOCUMENTATION	1.2164856101159607E-7	TEST
// return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.9999981813951208	WITHOUT_CLASSIFICATION	1.6500575221114627E-6	IMPLEMENTATION	1.5587427710460458E-7	DESIGN	4.8478679339033464E-9	DEFECT	4.0937081053974045E-9	DOCUMENTATION	3.731504013581838E-9	TEST
// return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999972410415972	WITHOUT_CLASSIFICATION	2.691224257780465E-6	DESIGN	3.8957933007289386E-8	IMPLEMENTATION	2.241671546682751E-8	DEFECT	5.204340991432873E-9	DOCUMENTATION	1.1551556050167191E-9	TEST
// this object was already loaded	WITHOUT_CLASSIFICATION	0.9985550719880747	WITHOUT_CLASSIFICATION	0.001408275950651666	DESIGN	2.090407203723629E-5	DEFECT	1.4132105310314235E-5	IMPLEMENTATION	8.89881530811188E-7	TEST	7.260023951554638E-7	DOCUMENTATION
// Entity was found in second-level cache...	WITHOUT_CLASSIFICATION	0.9997330279021418	WITHOUT_CLASSIFICATION	2.4434831365608464E-4	DESIGN	2.2374685209130216E-5	DEFECT	2.110172965470159E-7	DOCUMENTATION	1.917860450821628E-8	TEST	1.8903092123609136E-8	IMPLEMENTATION
// make it circular-reference safe	WITHOUT_CLASSIFICATION	0.9999970644065123	WITHOUT_CLASSIFICATION	1.4505442194039391E-6	IMPLEMENTATION	1.4499496997493244E-6	DEFECT	1.8122004499577488E-8	DOCUMENTATION	1.0247212323510719E-8	DESIGN	6.7303518714017526E-9	TEST
// intializes result by side-effect	WITHOUT_CLASSIFICATION	0.9999997929824088	WITHOUT_CLASSIFICATION	2.029846295625603E-7	DEFECT	3.8297348276334E-9	DESIGN	9.91397381696625E-11	DOCUMENTATION	9.672937800909353E-11	TEST	7.357667672328618E-12	IMPLEMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Pre-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999988803312659	WITHOUT_CLASSIFICATION	8.427582583480731E-7	DEFECT	1.1547952509325242E-7	IMPLEMENTATION	8.581402745579962E-8	DESIGN	5.091231878948441E-8	DOCUMENTATION	2.4704604482136886E-8	TEST
//some statistics	WITHOUT_CLASSIFICATION	0.9998028483043145	WITHOUT_CLASSIFICATION	1.7608105555556243E-4	DESIGN	1.4274134286947751E-5	IMPLEMENTATION	4.277383955743569E-6	DOCUMENTATION	1.9505737053363545E-6	DEFECT	5.685481819279442E-7	TEST
//safe from concurrent modification because of how entryList() is implemented on IdentityMap	WITHOUT_CLASSIFICATION	0.9994683314713593	WITHOUT_CLASSIFICATION	3.263790591031336E-4	DEFECT	1.1886911395775402E-4	DESIGN	8.505698527570153E-5	IMPLEMENTATION	1.26421560281323E-6	DOCUMENTATION	9.91547011326036E-8	TEST
// Initialize dirty flags for arrays + collections with composite elements // and reset reached, doupdate, etc.	WITHOUT_CLASSIFICATION	0.9999995720740259	WITHOUT_CLASSIFICATION	4.059570943569731E-7	IMPLEMENTATION	2.1838555501402237E-8	DEFECT	8.984045136108014E-11	DESIGN	3.542722435959144E-11	TEST	5.056615871584248E-12	DOCUMENTATION
// Among other things, updateReachables() will recursively load all // collections that are moving roles. This might cause entities to // be loaded.	WITHOUT_CLASSIFICATION	0.994260060174343	WITHOUT_CLASSIFICATION	0.005543908984029658	DESIGN	1.937332975382553E-4	DEFECT	2.28837827876075E-6	IMPLEMENTATION	8.01065535649841E-9	TEST	1.1551549854126263E-9	DOCUMENTATION
// So this needs to be safe from concurrent modification problems. // It is safe because of how IdentityMap implements entrySet()	WITHOUT_CLASSIFICATION	0.7916277608345115	WITHOUT_CLASSIFICATION	0.18653406636209857	DESIGN	0.01898031335326129	DEFECT	0.002594017957285025	IMPLEMENTATION	2.6296835428440735E-4	DOCUMENTATION	8.731385592028326E-7	TEST
// Update the status of the object and if necessary, schedule an update	WITHOUT_CLASSIFICATION	0.9999997520764302	WITHOUT_CLASSIFICATION	2.467010630937703E-7	DESIGN	6.457896835333691E-10	DEFECT	3.085734789580732E-10	IMPLEMENTATION	1.6044414565878497E-10	DOCUMENTATION	1.0769932363360753E-10	TEST
// Schedule updates to collections:	WITHOUT_CLASSIFICATION	0.9999895520801483	WITHOUT_CLASSIFICATION	9.792086784765503E-6	IMPLEMENTATION	3.351785395713772E-7	DESIGN	3.0380187097151584E-7	DEFECT	1.003957421261962E-8	TEST	6.813082203418853E-9	DOCUMENTATION
// we need to lock the collection caches before // executing entity inserts/updates in order to // account for bidi associations	WITHOUT_CLASSIFICATION	0.9999942197441652	WITHOUT_CLASSIFICATION	3.4233913632248426E-6	DEFECT	1.4186067221044007E-6	DESIGN	7.429555590710191E-7	TEST	1.451256781143716E-7	IMPLEMENTATION	5.0176512192555566E-8	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Post-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999990886241281	WITHOUT_CLASSIFICATION	4.4963677417077364E-7	DEFECT	3.010358980172948E-7	IMPLEMENTATION	8.521098935663909E-8	DOCUMENTATION	4.3617936376322365E-8	TEST	3.1874273926769514E-8	DESIGN
//the database has changed now, so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.9999997016029489	WITHOUT_CLASSIFICATION	2.0584268969868554E-7	DESIGN	8.243915863196991E-8	IMPLEMENTATION	5.325453466084746E-9	DEFECT	4.008283606576979E-9	TEST	7.814656905254119E-10	DOCUMENTATION
//if the collection is dereferenced, remove from the session cache //iter.remove(); //does not work, since the entrySet is not backed by the set	WITHOUT_CLASSIFICATION	0.99998379400063	WITHOUT_CLASSIFICATION	1.2018085772683436E-5	DEFECT	4.178722421497224E-6	DESIGN	9.141947533303171E-9	TEST	4.8396451318748694E-11	DOCUMENTATION	8.316522680072771E-13	IMPLEMENTATION
//otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9995364223210795	WITHOUT_CLASSIFICATION	4.6115196335942725E-4	DESIGN	2.3390523515507085E-6	IMPLEMENTATION	5.979059630711241E-8	TEST	1.3533241897238759E-8	DOCUMENTATION	1.3339371171048833E-8	DEFECT
//get a snapshot	WITHOUT_CLASSIFICATION	0.9999813424644157	WITHOUT_CLASSIFICATION	1.576372603869075E-5	DESIGN	2.275779677370985E-6	IMPLEMENTATION	3.5456055438058447E-7	DEFECT	1.5141187562268468E-7	TEST	1.1205743829894611E-7	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999894856038092	WITHOUT_CLASSIFICATION	1.0405105719549037E-5	DESIGN	5.958278318684424E-8	DEFECT	3.785121245720946E-8	DOCUMENTATION	6.085387420012418E-9	TEST	5.7710881352984594E-9	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999894856038092	WITHOUT_CLASSIFICATION	1.0405105719549037E-5	DESIGN	5.958278318684424E-8	DEFECT	3.785121245720946E-8	DOCUMENTATION	6.085387420012418E-9	TEST	5.7710881352984594E-9	IMPLEMENTATION
// key is an entity involved with the operation performed by the listener; // value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.9999998516848911	WITHOUT_CLASSIFICATION	1.139369820983564E-7	TEST	3.3573145726079245E-8	DEFECT	7.422606135291561E-10	DESIGN	5.752567680205555E-11	DOCUMENTATION	5.194783786369654E-12	IMPLEMENTATION
// EARLY EXIT!!!	WITHOUT_CLASSIFICATION	0.9999513607121129	WITHOUT_CLASSIFICATION	1.724613678959738E-5	DEFECT	1.589833536553349E-5	IMPLEMENTATION	1.4047705556886768E-5	DESIGN	8.783163027781915E-7	DOCUMENTATION	5.68793872281417E-7	TEST
//ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.9988132230688942	WITHOUT_CLASSIFICATION	0.001178802902254066	DESIGN	7.530203197355201E-6	DEFECT	2.537022943715904E-7	DOCUMENTATION	1.6517252688202138E-7	IMPLEMENTATION	2.4950833134692766E-8	TEST
// before any callbacks, etc, so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.99998626414693	WITHOUT_CLASSIFICATION	1.3574496879124968E-5	DESIGN	1.546315997784807E-7	DEFECT	2.904018567189361E-9	DOCUMENTATION	2.8968089327169604E-9	IMPLEMENTATION	9.237634994892037E-10	TEST
// Ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.9999999885789324	WITHOUT_CLASSIFICATION	9.813798079331567E-9	IMPLEMENTATION	1.0099942573294986E-9	DEFECT	5.448044815036129E-10	DESIGN	3.2352664596721266E-11	DOCUMENTATION	2.0118154659974483E-11	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// cascade-delete to collections BEFORE the collection owner is deleted	WITHOUT_CLASSIFICATION	0.9996498049469172	WITHOUT_CLASSIFICATION	3.489194015559061E-4	IMPLEMENTATION	7.437362376824106E-7	DEFECT	4.953539328940498E-7	DESIGN	2.9780226578391963E-8	TEST	6.781129813519898E-9	DOCUMENTATION
// cascade-delete to many-to-one AFTER the parent was deleted	WITHOUT_CLASSIFICATION	0.999826042947347	WITHOUT_CLASSIFICATION	1.4490623050016565E-4	DESIGN	2.6761900312011283E-5	IMPLEMENTATION	2.024709023614901E-6	DEFECT	2.088096066341514E-7	DOCUMENTATION	5.5403210632975324E-8	TEST
// if it is an initialized proxy, let cascade // handle it later on	WITHOUT_CLASSIFICATION	0.9999948575625338	WITHOUT_CLASSIFICATION	4.632649104811728E-6	DESIGN	2.8542752388104343E-7	IMPLEMENTATION	1.696912309508541E-7	TEST	5.2168900867679696E-8	DEFECT	2.5007057680159578E-9	DOCUMENTATION
//assign the requested id to the proxy, *before* //reassociating the proxy	WITHOUT_CLASSIFICATION	0.9987672306102365	WITHOUT_CLASSIFICATION	0.0010924141849340077	DESIGN	1.1131565832681999E-4	TEST	2.1636428008222008E-5	DEFECT	7.246489194771057E-6	DOCUMENTATION	1.5662929978751127E-7	IMPLEMENTATION
// an uninitialized proxy, noop, don't even need to // return an id, since it is never a save()	WITHOUT_CLASSIFICATION	0.9999999939756871	WITHOUT_CLASSIFICATION	5.572117811521158E-9	DESIGN	3.1727864636953236E-10	DEFECT	6.054788066054923E-11	DOCUMENTATION	4.629410806550244E-11	IMPLEMENTATION	2.807449568353429E-11	TEST
//initialize properties of the event:	WITHOUT_CLASSIFICATION	0.9999986133224112	WITHOUT_CLASSIFICATION	4.904101808099354E-7	DESIGN	3.8142245283526764E-7	DEFECT	3.699898754051359E-7	TEST	8.759231834454908E-8	IMPLEMENTATION	5.7262761185061884E-8	DOCUMENTATION
//return the id in the event object	WITHOUT_CLASSIFICATION	0.9978688551931885	WITHOUT_CLASSIFICATION	0.0021131677084337687	DESIGN	1.672135146607905E-5	DEFECT	1.1445978835178495E-6	DOCUMENTATION	6.54510662616193E-8	IMPLEMENTATION	4.56979619570712E-8	TEST
//TRANSIENT or DELETED	WITHOUT_CLASSIFICATION	0.9999982608731062	WITHOUT_CLASSIFICATION	1.398883398150114E-6	DESIGN	1.0536740608444677E-7	DOCUMENTATION	1.0084287792696591E-7	DEFECT	6.7798406884201E-8	IMPLEMENTATION	6.6234804699285E-8	TEST
// use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.9999718807453769	WITHOUT_CLASSIFICATION	2.6685280430787966E-5	DESIGN	1.0975814443802597E-6	IMPLEMENTATION	2.918972367761205E-7	DOCUMENTATION	4.17360759858796E-8	DEFECT	2.759435156008012E-9	TEST
// assume this is a newly instantiated transient object // which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.7024234963783631	WITHOUT_CLASSIFICATION	0.29757313645960304	DESIGN	3.0855466827266023E-6	DEFECT	1.4896175837662076E-7	DOCUMENTATION	1.2378477164754246E-7	TEST	8.868820980651034E-9	IMPLEMENTATION
// this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.9997484468514304	WITHOUT_CLASSIFICATION	2.134722682748587E-4	DESIGN	3.6086397265756424E-5	DEFECT	1.1271331185460909E-6	TEST	8.269511438338194E-7	IMPLEMENTATION	4.039876655856165E-8	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999996535145074	WITHOUT_CLASSIFICATION	1.6405360429755086E-7	DESIGN	1.2764889548310227E-7	DEFECT	5.4533575996812636E-8	IMPLEMENTATION	2.246857079370855E-10	DOCUMENTATION	2.4731081459985505E-11	TEST
//cachedState,	WITHOUT_CLASSIFICATION	0.9998659589319177	WITHOUT_CLASSIFICATION	1.2655429632584154E-4	DESIGN	3.6200172304710516E-6	IMPLEMENTATION	2.2386620302350584E-6	DEFECT	1.1883245869843308E-6	DOCUMENTATION	4.39767908847101E-7	TEST
//assume true, since we don't really know, and it doesn't matter	WITHOUT_CLASSIFICATION	0.9999953591766088	WITHOUT_CLASSIFICATION	2.529117785337433E-6	DESIGN	2.0440593814630373E-6	DEFECT	4.23118707836035E-8	DOCUMENTATION	2.499395481693315E-8	TEST	3.4039876420660823E-10	IMPLEMENTATION
//a "detached" collection!	WITHOUT_CLASSIFICATION	0.9999618260468085	WITHOUT_CLASSIFICATION	2.961850335770428E-5	DESIGN	5.4652274837632974E-6	DEFECT	2.8534191590010535E-6	IMPLEMENTATION	1.719420942498066E-7	DOCUMENTATION	6.486109673402955E-8	TEST
// if the collection belonged to a different entity, // clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.9999750202095248	WITHOUT_CLASSIFICATION	2.497438464401134E-5	DESIGN	4.721044921510898E-9	DEFECT	4.585145165734614E-10	TEST	1.9629305984438286E-10	DOCUMENTATION	2.997891801644738E-11	IMPLEMENTATION
//log.debug( "calling onLoad()" );	WITHOUT_CLASSIFICATION	0.9999992065918736	WITHOUT_CLASSIFICATION	3.486615171090956E-7	DEFECT	2.8075416307901365E-7	IMPLEMENTATION	1.3908330127594121E-7	DESIGN	1.6421057610937684E-8	DOCUMENTATION	8.488087281442177E-9	TEST
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999562415465948	WITHOUT_CLASSIFICATION	1.579202200741501E-5	DESIGN	1.5548930029786993E-5	IMPLEMENTATION	9.971529828453265E-6	DEFECT	1.597265590381826E-6	DOCUMENTATION	8.487059492163494E-7	TEST
// note: performExecutions() clears all collectionXxxxtion  // collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.9966709397843999	WITHOUT_CLASSIFICATION	0.002967486891112105	IMPLEMENTATION	3.1194055514420266E-4	DEFECT	4.917887537585387E-5	DESIGN	3.6806136089984994E-7	DOCUMENTATION	8.583260721065866E-8	TEST
// if no array holder we found an unwrappered array (this can't occur, // because we now always call wrap() before getting to here) // return (ah==null) ? true : searchForDirtyCollections(ah, type);	WITHOUT_CLASSIFICATION	0.9949975960549506	WITHOUT_CLASSIFICATION	0.004772833454329552	DESIGN	2.2936166337335237E-4	DEFECT	1.9295290111330697E-7	IMPLEMENTATION	1.1864895434128852E-8	DOCUMENTATION	4.009549962297971E-9	TEST
// if not wrappered yet, its dirty (this can't occur, because // we now always call wrap() before getting to here) // return ( ! (obj instanceof PersistentCollection) ) ? //true : searchForDirtyCollections( (PersistentCollection) obj, type );	WITHOUT_CLASSIFICATION	0.9995686552995411	DESIGN	2.656116811568215E-4	DEFECT	1.6550181503837067E-4	WITHOUT_CLASSIFICATION	2.237124384337067E-7	IMPLEMENTATION	4.9192481705591355E-9	DOCUMENTATION	2.5725771014056422E-9	TEST
//we need to check even if it was not initialized, because of delayed adds!	WITHOUT_CLASSIFICATION	0.9832912668188685	WITHOUT_CLASSIFICATION	0.016641168162087626	IMPLEMENTATION	5.874736715167911E-5	DOCUMENTATION	4.954381276180655E-6	DESIGN	2.6473948220890625E-6	TEST	1.2158757939971217E-6	DEFECT
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9995252471449646	WITHOUT_CLASSIFICATION	2.1165667764637853E-4	IMPLEMENTATION	1.417568992599547E-4	DESIGN	1.0360669581287213E-4	DEFECT	9.320444141291745E-6	TEST	8.412138174869058E-6	DOCUMENTATION
// find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.9999661151274695	WITHOUT_CLASSIFICATION	3.3718965640251975E-5	DESIGN	1.0951271037345152E-7	IMPLEMENTATION	4.583197259496186E-8	DEFECT	6.360437387082857E-9	DOCUMENTATION	4.201769906927231E-9	TEST
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999562415465948	WITHOUT_CLASSIFICATION	1.579202200741501E-5	DESIGN	1.5548930029786993E-5	IMPLEMENTATION	9.971529828453265E-6	DEFECT	1.597265590381826E-6	DOCUMENTATION	8.487059492163494E-7	TEST
// Check the persistence context for an entry relating to this // entity to be merged...	WITHOUT_CLASSIFICATION	0.9999681869896018	WITHOUT_CLASSIFICATION	3.1789435225440475E-5	DESIGN	1.5774298532193033E-8	DEFECT	5.370116816805527E-9	TEST	1.993191096628036E-9	DOCUMENTATION	4.375664304326525E-10	IMPLEMENTATION
// we have specialized case of a detached entity from the // perspective of the merge operation.  Specifically, we // have an incoming entity instance which has a corresponding // entry in the current persistence context, but registered // under a different entity instance	WITHOUT_CLASSIFICATION	0.9947530787194223	WITHOUT_CLASSIFICATION	0.005154638355017014	DESIGN	9.208669496629762E-5	DEFECT	1.9593276629790348E-7	DOCUMENTATION	2.8965042390579686E-10	TEST	8.177513292309917E-12	IMPLEMENTATION
//DELETED	WITHOUT_CLASSIFICATION	0.9999317399290836	WITHOUT_CLASSIFICATION	6.224962547555382E-5	DESIGN	1.907357308774659E-6	DEFECT	1.5402443742197196E-6	DOCUMENTATION	1.3792754435898056E-6	TEST	1.1835683143119106E-6	IMPLEMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9999633074705163	WITHOUT_CLASSIFICATION	2.4081903342108698E-5	IMPLEMENTATION	7.520107785867486E-6	DESIGN	4.1298543453477146E-6	DEFECT	7.635990739889007E-7	DOCUMENTATION	1.9706493641073594E-7	TEST
// cascade first, so that all unsaved objects get their // copy created before we actually copy //cascadeOnMerge(event, persister, entity, copyCache, Cascades.CASCADE_BEFORE_MERGE);	WITHOUT_CLASSIFICATION	0.9999999771182619	WITHOUT_CLASSIFICATION	1.920156996316657E-8	DESIGN	3.3607109372669387E-9	IMPLEMENTATION	1.8198392383436294E-10	DOCUMENTATION	7.186479280081945E-11	TEST	6.560861442876753E-11	DEFECT
//this bit is only *really* absolutely necessary for handling //requestedId, but is also good if we merge multiple object //graphs, since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.6755072819958371	WITHOUT_CLASSIFICATION	0.32448512557544024	DESIGN	4.041003381886559E-6	TEST	3.4803891802006586E-6	IMPLEMENTATION	3.849821131479669E-8	DEFECT	3.2537949272756954E-8	DOCUMENTATION
// continue...; we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.9900602888592283	WITHOUT_CLASSIFICATION	0.009744441919813229	DESIGN	1.0763273532485624E-4	IMPLEMENTATION	8.736533239418553E-5	DEFECT	2.393263296320711E-7	TEST	3.182690980818192E-8	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999986705611765	WITHOUT_CLASSIFICATION	1.2147229128090207E-6	DESIGN	1.0259782255557625E-7	IMPLEMENTATION	5.7688518344633695E-9	DEFECT	3.8780311536440425E-9	DOCUMENTATION	2.4712052090161714E-9	TEST
// check that entity id = requestedId	WITHOUT_CLASSIFICATION	0.9998565286564518	WITHOUT_CLASSIFICATION	1.3682582893529807E-4	IMPLEMENTATION	4.988621568935937E-6	DESIGN	1.0862948326358642E-6	TEST	4.6515428974206386E-7	DEFECT	1.0544392146638404E-7	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9999633074705163	WITHOUT_CLASSIFICATION	2.4081903342108698E-5	IMPLEMENTATION	7.520107785867486E-6	DESIGN	4.1298543453477146E-6	DEFECT	7.635990739889007E-7	DOCUMENTATION	1.9706493641073594E-7	TEST
// we got here because we assumed that an instance // with an assigned id was detached, when it was // really persistent	WITHOUT_CLASSIFICATION	0.9999980198074802	WITHOUT_CLASSIFICATION	1.968537707013129E-6	DESIGN	4.69202448272437E-9	DEFECT	3.510551583018669E-9	TEST	3.4124450017623416E-9	DOCUMENTATION	3.979180388435458E-11	IMPLEMENTATION
// cascade first, so that all unsaved objects get their  // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999967842997819	WITHOUT_CLASSIFICATION	2.5936565815048712E-6	DESIGN	5.926821329046355E-7	IMPLEMENTATION	1.2427009495836516E-8	DOCUMENTATION	1.0729360984078825E-8	DEFECT	6.2051332307656555E-9	TEST
//copyValues works by reflection, so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.999739207077301	WITHOUT_CLASSIFICATION	2.3200288022185762E-4	DESIGN	2.858994647629032E-5	DEFECT	1.8429993655059909E-7	DOCUMENTATION	9.040439638793629E-9	TEST	6.755624687829608E-9	IMPLEMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999566921276389	WITHOUT_CLASSIFICATION	2.1413219708215196E-5	IMPLEMENTATION	1.657790176031639E-5	DESIGN	3.5816698693999044E-6	DEFECT	1.102039311757853E-6	DOCUMENTATION	6.330417113805837E-7	TEST
//source.getBatcher().executeBatch(); //found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.9999894922874285	WITHOUT_CLASSIFICATION	1.0505778537482255E-5	DESIGN	8.611530438472875E-10	IMPLEMENTATION	4.775342003195497E-10	DEFECT	4.5066402588304877E-10	DOCUMENTATION	1.4468279529243717E-10	TEST
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999987093861487	WITHOUT_CLASSIFICATION	1.229253356200276E-6	DESIGN	5.070902925472599E-8	DEFECT	5.1850800486524645E-9	TEST	4.366526007237495E-9	DOCUMENTATION	1.0998597658832623E-9	IMPLEMENTATION
//now done in EntityIdentityInsertAction //persister.setIdentifier( entity, id, source.getEntityMode() );	WITHOUT_CLASSIFICATION	0.9999999652195593	WITHOUT_CLASSIFICATION	3.445714184389282E-8	DESIGN	2.2237578215205378E-10	DEFECT	8.379520410667902E-11	DOCUMENTATION	1.3923369375598796E-11	TEST	3.204478796041754E-12	IMPLEMENTATION
//source.getPersistenceContext().removeNonExist( new EntityKey( id, persister, source.getEntityMode() ) );	WITHOUT_CLASSIFICATION	0.9999996561770638	WITHOUT_CLASSIFICATION	3.377875469371537E-7	DESIGN	2.498503880791621E-9	DEFECT	1.3930547187796437E-9	DOCUMENTATION	1.333035908774073E-9	TEST	8.107947241551166E-10	IMPLEMENTATION
//keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.9999894083823007	WITHOUT_CLASSIFICATION	1.0515898537448842E-5	DESIGN	3.149055942935453E-8	DEFECT	3.030898614969232E-8	DOCUMENTATION	9.718397212382615E-9	IMPLEMENTATION	4.201219218902858E-9	TEST
// cascade-save to many-to-one BEFORE the parent is saved	WITHOUT_CLASSIFICATION	0.9979946332150518	WITHOUT_CLASSIFICATION	0.001067331424838734	IMPLEMENTATION	5.911440564513613E-4	DEFECT	3.401012205544384E-4	DESIGN	5.205126113235914E-6	DOCUMENTATION	1.584956990527751E-6	TEST
//pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.9999748872434173	WITHOUT_CLASSIFICATION	2.5058700667224235E-5	DESIGN	3.3763436615945375E-8	DOCUMENTATION	1.7391392933026014E-8	TEST	2.8646441522762143E-9	DEFECT	3.644181200375031E-11	IMPLEMENTATION
// the object is persistent	WITHOUT_CLASSIFICATION	0.9999586956266712	WITHOUT_CLASSIFICATION	3.626730690353213E-5	DESIGN	2.7518132745527146E-6	IMPLEMENTATION	1.0826349921687646E-6	DEFECT	1.0350315083372197E-6	TEST	1.6758665032243151E-7	DOCUMENTATION
//the entity is associated with the session, so check its status	WITHOUT_CLASSIFICATION	0.9999487987997611	WITHOUT_CLASSIFICATION	4.9808807589864565E-5	DESIGN	6.573232975120029E-7	TEST	5.413409437831921E-7	IMPLEMENTATION	1.8822135405785014E-7	DOCUMENTATION	5.5070536487841775E-9	DEFECT
// do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.9999997320676904	WITHOUT_CLASSIFICATION	2.1858157019104714E-7	DESIGN	2.114685589005424E-8	IMPLEMENTATION	1.6339001739697497E-8	DEFECT	6.383893144786099E-9	DOCUMENTATION	5.480988493967716E-9	TEST
//ie. e.status==DELETED	WITHOUT_CLASSIFICATION	0.9999853308558653	WITHOUT_CLASSIFICATION	1.4435715529699606E-5	DESIGN	1.1094708916777876E-7	IMPLEMENTATION	4.361407813675212E-8	DEFECT	4.063775802581296E-8	DOCUMENTATION	3.822967995691542E-8	TEST
// the object is transient or detached	WITHOUT_CLASSIFICATION	0.9999193346340765	WITHOUT_CLASSIFICATION	4.60547863178727E-5	IMPLEMENTATION	3.3722838214152005E-5	DESIGN	5.680644820820686E-7	DEFECT	2.0355188701889978E-7	DOCUMENTATION	1.1612502237011707E-7	TEST
//NOTE EARLY EXIT!	WITHOUT_CLASSIFICATION	0.999938427454859	WITHOUT_CLASSIFICATION	2.667151061372966E-5	DESIGN	2.0909573010528636E-5	IMPLEMENTATION	9.771365847548465E-6	DEFECT	2.2660921250056234E-6	TEST	1.9540035442178357E-6	DOCUMENTATION
// Private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.9999995699918113	WITHOUT_CLASSIFICATION	3.876441045828264E-7	DESIGN	3.8953319848446874E-8	IMPLEMENTATION	2.2511911710295756E-9	TEST	6.333394698773088E-10	DOCUMENTATION	5.262337206015748E-10	DEFECT
// First, try to find a matching constructor accepting a ViolatedConstraintNameExtracter param...	WITHOUT_CLASSIFICATION	0.9999799302500162	WITHOUT_CLASSIFICATION	1.8818917834750638E-5	IMPLEMENTATION	1.108913197981371E-6	DESIGN	1.0940360307756456E-7	TEST	3.1414013767748175E-8	DEFECT	1.1013342197790666E-9	DOCUMENTATION
// eat it and try next	WITHOUT_CLASSIFICATION	0.9985755270600909	WITHOUT_CLASSIFICATION	0.0013561980521806195	DESIGN	6.316370491239474E-5	DEFECT	3.2036725535885466E-6	IMPLEMENTATION	1.3772429716748509E-6	DOCUMENTATION	5.302672908745407E-7	TEST
// Otherwise, try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.9999859807194632	WITHOUT_CLASSIFICATION	1.3393788138564852E-5	IMPLEMENTATION	6.170629373946246E-7	DESIGN	6.639905988707356E-9	DOCUMENTATION	1.5017615317651689E-9	TEST	2.877933344497868E-10	DEFECT
// oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.9999941838397166	WITHOUT_CLASSIFICATION	4.136635400316166E-6	DESIGN	1.5393921495550834E-6	IMPLEMENTATION	5.3823908898487045E-8	DEFECT	4.735904174173081E-8	TEST	3.894978294692638E-8	DOCUMENTATION
// CollectionPropertyMapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.999999931307407	WITHOUT_CLASSIFICATION	5.076184816810898E-8	DEFECT	9.839776596665928E-9	DESIGN	4.2500647332543745E-9	TEST	3.065131493327664E-9	IMPLEMENTATION	7.757720637270349E-10	DOCUMENTATION
// remove initial ", "	WITHOUT_CLASSIFICATION	0.9999979403247342	WITHOUT_CLASSIFICATION	1.967055658521505E-6	DESIGN	7.037447681093735E-8	DEFECT	1.026155230031997E-8	TEST	8.705524576721157E-9	IMPLEMENTATION	3.2780536175101358E-9	DOCUMENTATION
// remove initial " and "	WITHOUT_CLASSIFICATION	0.9999979692039981	WITHOUT_CLASSIFICATION	1.9743491694297894E-6	DESIGN	3.602236204458166E-8	DEFECT	1.490867293134803E-8	IMPLEMENTATION	2.8301835145121072E-9	TEST	2.6856141551278943E-9	DOCUMENTATION
//beforeClassTokens.add("new"); DEFINITELY DON'T HAVE THIS!!	WITHOUT_CLASSIFICATION	0.9977129204156909	WITHOUT_CLASSIFICATION	0.002103307331541508	DESIGN	9.484116323627989E-5	IMPLEMENTATION	5.662058527548557E-5	DEFECT	1.9452524586035482E-5	DOCUMENTATION	1.2857979669779753E-5	TEST
//notAfterClassTokens.add(",");	WITHOUT_CLASSIFICATION	0.9999626335619978	WITHOUT_CLASSIFICATION	2.050185491527246E-5	DESIGN	1.156411185355837E-5	IMPLEMENTATION	3.5882880025265313E-6	DEFECT	9.449379187094606E-7	DOCUMENTATION	7.672453121133073E-7	TEST
// just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.999999798228201	WITHOUT_CLASSIFICATION	1.073658249237973E-7	DESIGN	9.260065957705151E-8	IMPLEMENTATION	7.339121289453867E-10	DEFECT	6.674768014122502E-10	DOCUMENTATION	4.0392577621971795E-10	TEST
//update last non-whitespace token, if necessary	WITHOUT_CLASSIFICATION	0.9999988434447815	WITHOUT_CLASSIFICATION	5.852561187360512E-7	DESIGN	5.350538630727375E-7	DEFECT	1.8826049827377414E-8	TEST	1.0639982370142639E-8	IMPLEMENTATION	6.779204521085889E-9	DOCUMENTATION
// select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.9999984551587353	WITHOUT_CLASSIFICATION	1.5114817169970217E-6	DESIGN	2.6393137834753065E-8	DEFECT	6.7853466282981975E-9	TEST	1.39496392046251E-10	DOCUMENTATION	4.1566941664890074E-11	IMPLEMENTATION
//scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.9999951701882642	WITHOUT_CLASSIFICATION	3.3923574621764136E-6	DEFECT	8.94149253337428E-7	IMPLEMENTATION	2.9904792980604394E-7	DESIGN	1.3159090000856923E-7	DOCUMENTATION	1.126661905320554E-7	TEST
// Note this!!	WITHOUT_CLASSIFICATION	0.9988616606106361	WITHOUT_CLASSIFICATION	9.6248604350342E-4	DESIGN	1.3061552953715105E-4	IMPLEMENTATION	2.177020188673014E-5	TEST	1.3366155358404615E-5	DOCUMENTATION	1.010145907810495E-5	DEFECT
// Error message constants.	WITHOUT_CLASSIFICATION	0.9999935982509215	WITHOUT_CLASSIFICATION	5.735097170388553E-6	DEFECT	3.1124133441594447E-7	IMPLEMENTATION	2.707494890964931E-7	DESIGN	5.582527121134271E-8	DOCUMENTATION	2.8835813289287825E-8	TEST
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999204124875621	WITHOUT_CLASSIFICATION	7.706901663255952E-5	IMPLEMENTATION	1.5894498644576686E-6	DESIGN	7.597177923317353E-7	DEFECT	1.1476098658809166E-7	TEST	5.45671618729928E-8	DOCUMENTATION
// semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.998820477068584	WITHOUT_CLASSIFICATION	0.0011421753569345729	DESIGN	2.4582643317910562E-5	IMPLEMENTATION	8.232488717958106E-6	DEFECT	4.192366074716024E-6	DOCUMENTATION	3.4007637074729315E-7	TEST
// Handle collection-fiter compilation. // IMPORTANT NOTE: This is modifying the INPUT (HQL) tree, not the output tree!	WITHOUT_CLASSIFICATION	0.9625363499062038	WITHOUT_CLASSIFICATION	0.021144391966665496	DEFECT	0.015892617185806906	DESIGN	4.063932518913439E-4	IMPLEMENTATION	2.021931519335928E-5	TEST	2.8374238983337558E-8	DOCUMENTATION
// Show the modified AST.	WITHOUT_CLASSIFICATION	0.9994549175329611	WITHOUT_CLASSIFICATION	4.696014948372448E-4	IMPLEMENTATION	6.962499309258014E-5	DESIGN	4.225737685386566E-6	DEFECT	9.027597626479343E-7	DOCUMENTATION	7.274816610993203E-7	TEST
// Create a parameter specification for the collection filter...	WITHOUT_CLASSIFICATION	0.9999882095524543	WITHOUT_CLASSIFICATION	1.168238372232609E-5	DESIGN	4.811775617618724E-8	DEFECT	2.6107400697373136E-8	IMPLEMENTATION	2.5173057163616092E-8	DOCUMENTATION	8.66560942738322E-9	TEST
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999993218115508	WITHOUT_CLASSIFICATION	4.825948225117671E-7	DESIGN	1.893853007018678E-7	IMPLEMENTATION	2.918311399087166E-9	DOCUMENTATION	2.4533625714000065E-9	TEST	8.366521456136471E-10	DEFECT
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999993218115508	WITHOUT_CLASSIFICATION	4.825948225117671E-7	DESIGN	1.893853007018678E-7	IMPLEMENTATION	2.918311399087166E-9	DOCUMENTATION	2.4533625714000065E-9	TEST	8.366521456136471E-10	DEFECT
// Get the names of the columns used to link between the collection // owner and the collection elements.	WITHOUT_CLASSIFICATION	0.9999961020862935	WITHOUT_CLASSIFICATION	3.896716811088858E-6	DESIGN	6.709120043676354E-10	DOCUMENTATION	3.584928856067269E-10	IMPLEMENTATION	1.4931613008688099E-10	DEFECT	1.8174386507678135E-11	TEST
// The path AST should be a DotNode, and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.9998748271089116	WITHOUT_CLASSIFICATION	8.932603526480574E-5	DESIGN	3.330595755165379E-5	DEFECT	2.176393620586556E-6	IMPLEMENTATION	1.9818132290487436E-7	DOCUMENTATION	1.663233283686369E-7	TEST
// Tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9999943429608761	WITHOUT_CLASSIFICATION	4.675715785843323E-6	DESIGN	8.483309329762728E-7	IMPLEMENTATION	9.252139347234111E-8	DEFECT	2.310678956608002E-8	DOCUMENTATION	1.7364222010869144E-8	TEST
// Re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.9999942231414228	WITHOUT_CLASSIFICATION	3.726204177278226E-6	IMPLEMENTATION	1.7278637824466823E-6	DESIGN	3.2074452125307654E-7	DEFECT	1.4355005765656387E-9	DOCUMENTATION	6.105956963280797E-10	TEST
// Don't forget to resolve the argument! // Resolve the collection function now.	WITHOUT_CLASSIFICATION	0.9999855806128725	WITHOUT_CLASSIFICATION	1.1856496956335347E-5	IMPLEMENTATION	1.4526178844379903E-6	DESIGN	5.640956706064403E-7	DEFECT	5.197432929317016E-7	DOCUMENTATION	2.643332328217004E-8	TEST
// Resolve everything up to this dot, but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.9270447253993837	WITHOUT_CLASSIFICATION	0.0693025342393486	DESIGN	0.003636799809897371	DEFECT	1.0129335305152061E-5	IMPLEMENTATION	4.7743516829575075E-6	TEST	1.0368643823284232E-6	DOCUMENTATION
// Should mean that no such property was found	WITHOUT_CLASSIFICATION	0.9992351574049996	WITHOUT_CLASSIFICATION	7.492569042329289E-4	DESIGN	1.5145356041712597E-5	DEFECT	2.347088771464038E-7	DOCUMENTATION	1.4000893278631758E-7	TEST	6.56169158209032E-8	IMPLEMENTATION
// Was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.9999938298999732	WITHOUT_CLASSIFICATION	4.5126325477600395E-6	DESIGN	1.5433889779974E-6	DEFECT	8.198248524370926E-8	TEST	1.675522438160266E-8	IMPLEMENTATION	1.5340791506678798E-8	DOCUMENTATION
// Attach any mapping-defined "ORDER BY" fragments	WITHOUT_CLASSIFICATION	0.9999997172425426	WITHOUT_CLASSIFICATION	1.91464970903971E-7	IMPLEMENTATION	4.98439658920939E-8	DEFECT	3.049615599253568E-8	DESIGN	7.3248779637685075E-9	DOCUMENTATION	3.6274866243352264E-9	TEST
// Use the explicitly declared select expression; determine the // return types indicated by each select token	WITHOUT_CLASSIFICATION	0.9999999116219841	WITHOUT_CLASSIFICATION	8.746168465596119E-8	DESIGN	9.142259206234985E-10	DEFECT	1.5391900204199394E-12	DOCUMENTATION	5.490496043143871E-13	TEST	1.6950071898324882E-14	IMPLEMENTATION
// After that, process the JOINs. // Invoke a delegate to do the work, as this is farily complex.	WITHOUT_CLASSIFICATION	0.9999964613495969	WITHOUT_CLASSIFICATION	3.528024688409614E-6	DEFECT	7.1611776575222225E-9	TEST	2.7699503050654386E-9	DESIGN	3.990459788506279E-10	DOCUMENTATION	2.95540746180449E-10	IMPLEMENTATION
// Make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.9999730378271565	WITHOUT_CLASSIFICATION	2.538355465171101E-5	IMPLEMENTATION	1.5492496708112478E-6	DESIGN	2.4558384496566316E-8	TEST	2.9935837996709594E-9	DOCUMENTATION	1.8165526890159385E-9	DEFECT
// We need to generate ids as part of this bulk insert. // // Note that this is only supported for sequence-style generators and // post-insert-style generators; basically, only in-db generators	WITHOUT_CLASSIFICATION	0.9999987962309519	WITHOUT_CLASSIFICATION	4.5001172973920593E-7	DEFECT	4.275828768267998E-7	IMPLEMENTATION	2.7016649727990806E-7	TEST	5.469486004305684E-8	DESIGN	1.3130844111877761E-9	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999993218115508	WITHOUT_CLASSIFICATION	4.825948225117671E-7	DESIGN	1.893853007018678E-7	IMPLEMENTATION	2.918311399087166E-9	DOCUMENTATION	2.4533625714000065E-9	TEST	8.366521456136471E-10	DEFECT
// We need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.9999669796154647	WITHOUT_CLASSIFICATION	1.5244969548868486E-5	DEFECT	1.4720234948558331E-5	DESIGN	2.318064603850599E-6	IMPLEMENTATION	4.1381552564942344E-7	DOCUMENTATION	3.2329990834433607E-7	TEST
// we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.9997299948088129	WITHOUT_CLASSIFICATION	2.4481419798567E-4	DESIGN	1.2407273005371908E-5	IMPLEMENTATION	9.157697113293127E-6	DEFECT	3.15422582597112E-6	DOCUMENTATION	4.717972568776275E-7	TEST
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9818639572663723	WITHOUT_CLASSIFICATION	0.016773471007244092	DEFECT	6.910755254213746E-4	IMPLEMENTATION	6.70707995598519E-4	DESIGN	5.92433485131965E-7	TEST	1.957718787349862E-7	DOCUMENTATION
// Generate implicit joins, only if necessary.	WITHOUT_CLASSIFICATION	0.9999989029933434	WITHOUT_CLASSIFICATION	1.0641964589184933E-6	DESIGN	2.4908655509702844E-8	TEST	3.4715821463573948E-9	DEFECT	2.5844485274361164E-9	DOCUMENTATION	1.845511617678759E-9	IMPLEMENTATION
// Notify the FROM element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.9999912250962515	WITHOUT_CLASSIFICATION	6.929091783015633E-6	DESIGN	1.1452274497668318E-6	IMPLEMENTATION	4.386477164469197E-7	DEFECT	2.579552503339307E-7	TEST	3.981548923691061E-9	DOCUMENTATION
// Turn off includeSubclasses on all FromElements.	WITHOUT_CLASSIFICATION	0.999963986927078	WITHOUT_CLASSIFICATION	3.533445572230411E-5	DESIGN	5.728124870539316E-7	DEFECT	8.092990681125843E-8	IMPLEMENTATION	2.1547799273256E-8	DOCUMENTATION	3.3270068313499644E-9	TEST
// create the node initially with the param name so that it shows // appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.9998892353382076	WITHOUT_CLASSIFICATION	8.18582798880397E-5	DESIGN	2.3650085083310096E-5	IMPLEMENTATION	4.92706503226114E-6	DEFECT	3.0840033153153516E-7	TEST	2.0831457196919867E-8	DOCUMENTATION
// Use the delegate, resolve identifiers as FROM element aliases.	WITHOUT_CLASSIFICATION	0.9999980091953804	WITHOUT_CLASSIFICATION	1.7021249293775991E-6	DESIGN	2.8670860285958043E-7	IMPLEMENTATION	1.0772209796410247E-9	TEST	5.12956103502189E-10	DEFECT	3.8091030091094177E-10	DOCUMENTATION
// select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.9999751991383328	WITHOUT_CLASSIFICATION	1.9539028278400587E-5	DESIGN	5.094504613169924E-6	DEFECT	9.31452072694754E-8	IMPLEMENTATION	7.240486785409029E-8	TEST	1.7787004878019081E-9	DOCUMENTATION
// no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.9999007416302866	WITHOUT_CLASSIFICATION	5.723197142339948E-5	DESIGN	4.096151664442368E-5	IMPLEMENTATION	9.59974512593968E-7	TEST	8.898668436624399E-8	DOCUMENTATION	1.5920448563354592E-8	DEFECT
// Make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.9997450318574232	WITHOUT_CLASSIFICATION	2.2453862539435234E-4	DESIGN	2.8898355350522987E-5	IMPLEMENTATION	1.3576897501809978E-6	TEST	1.4641421853160878E-7	DEFECT	2.70578632097125E-8	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999204124875621	WITHOUT_CLASSIFICATION	7.706901663255952E-5	IMPLEMENTATION	1.5894498644576686E-6	DESIGN	7.597177923317353E-7	DEFECT	1.1476098658809166E-7	TEST	5.45671618729928E-8	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999993218115508	WITHOUT_CLASSIFICATION	4.825948225117671E-7	DESIGN	1.893853007018678E-7	IMPLEMENTATION	2.918311399087166E-9	DOCUMENTATION	2.4533625714000065E-9	TEST	8.366521456136471E-10	DEFECT
// --Commented out by Inspection (12/11/04 10:56 AM): int getWarningCount();	WITHOUT_CLASSIFICATION	0.9999998156643278	WITHOUT_CLASSIFICATION	1.8077922164720955E-7	DEFECT	2.0898270333677763E-9	IMPLEMENTATION	9.233579528904626E-10	DOCUMENTATION	5.123568809875458E-10	DESIGN	3.0908658990195933E-11	TEST
// Alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.9999998760533222	WITHOUT_CLASSIFICATION	1.0727692068042778E-7	DESIGN	1.0536704971761294E-8	IMPLEMENTATION	4.6691605181367135E-9	DEFECT	1.456133398310601E-9	DOCUMENTATION	7.7582223609463E-12	TEST
// switch	WITHOUT_CLASSIFICATION	0.999991597335647	WITHOUT_CLASSIFICATION	8.102679987729986E-6	DESIGN	1.3810920956267785E-7	DEFECT	8.413343314372135E-8	IMPLEMENTATION	4.5076569545753756E-8	DOCUMENTATION	3.266515310821671E-8	TEST
// make a new one	WITHOUT_CLASSIFICATION	0.9999923563088585	WITHOUT_CLASSIFICATION	3.4352406616411906E-6	DESIGN	1.9303364195484213E-6	IMPLEMENTATION	1.8756378669324552E-6	DEFECT	3.230796375484106E-7	TEST	7.939655569136684E-8	DOCUMENTATION
// just do the regular thing if you can't find the ctor // Your AST must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.9437107962295681	WITHOUT_CLASSIFICATION	0.054992769944745896	DESIGN	0.001295045570190505	IMPLEMENTATION	9.596987275540396E-7	DOCUMENTATION	4.2106304788493045E-7	TEST	7.49372024167071E-9	DEFECT
// Initialize SQL nodes here.	WITHOUT_CLASSIFICATION	0.9999952629423474	WITHOUT_CLASSIFICATION	2.86258551238883E-6	DESIGN	1.4822304490024896E-6	DEFECT	2.3219423539869798E-7	IMPLEMENTATION	1.1730723745296494E-7	TEST	4.274021829818011E-8	DOCUMENTATION
// semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999947878296052	WITHOUT_CLASSIFICATION	4.76984065612814E-6	DESIGN	2.427698702081227E-7	DEFECT	1.4474556528922345E-7	DOCUMENTATION	3.035971727610508E-8	IMPLEMENTATION	2.4454585893564335E-8	TEST
// if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999975922866379	WITHOUT_CLASSIFICATION	2.1448612950090348E-6	IMPLEMENTATION	1.626406082741485E-7	DEFECT	9.316068989102578E-8	DESIGN	5.052317497036104E-9	TEST	1.9984514503332995E-9	DOCUMENTATION
// this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.9999999525025189	WITHOUT_CLASSIFICATION	4.6131728809028477E-8	DESIGN	5.757358612739584E-10	IMPLEMENTATION	4.259501313585635E-10	DEFECT	3.0859355995992595E-10	DOCUMENTATION	5.547267807053577E-11	TEST
// --- Inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.999999882570346	WITHOUT_CLASSIFICATION	6.636605072498598E-8	DESIGN	2.5628405684830138E-8	DEFECT	1.3035182322905993E-8	TEST	1.1264992050188649E-8	IMPLEMENTATION	1.1350232275519794E-9	DOCUMENTATION
// check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.9999948909837189	WITHOUT_CLASSIFICATION	4.941103836462494E-6	IMPLEMENTATION	1.5979117660942581E-7	DEFECT	4.76032149002773E-9	DOCUMENTATION	2.61906258434017E-9	DESIGN	7.418838443875599E-10	TEST
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997808702198667	WITHOUT_CLASSIFICATION	1.8039887732025525E-4	DESIGN	1.8687851948760043E-5	IMPLEMENTATION	8.302523883219948E-6	DEFECT	6.018446551254673E-6	TEST	5.7220804297309275E-6	DOCUMENTATION
// these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.9999901086834897	WITHOUT_CLASSIFICATION	8.50758271081456E-6	IMPLEMENTATION	1.350969172468942E-6	DESIGN	2.127813223199414E-8	TEST	1.1221583721590022E-8	DOCUMENTATION	2.649110342292524E-10	DEFECT
// again, both should be FromElements	WITHOUT_CLASSIFICATION	0.9999983192223885	WITHOUT_CLASSIFICATION	1.3729213871576637E-6	DESIGN	2.664722752949812E-7	IMPLEMENTATION	3.4102334324113766E-8	TEST	4.400776298308828E-9	DEFECT	2.880838446177043E-9	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9981459353847041	WITHOUT_CLASSIFICATION	0.001515471464143184	DESIGN	2.33010159291391E-4	IMPLEMENTATION	6.87685127727377E-5	DEFECT	3.6542022772749015E-5	TEST	2.724563159743877E-7	DOCUMENTATION
// right represents a joins originating from left; or // both right and left reprersent joins originating from the same FromElement	WITHOUT_CLASSIFICATION	0.9999999723666747	WITHOUT_CLASSIFICATION	1.841106770169485E-8	DEFECT	8.721955908704403E-9	DESIGN	4.651999958010535E-10	IMPLEMENTATION	2.414305333739191E-11	TEST	1.095852096359344E-11	DOCUMENTATION
// check a set of parent/child nodes in the from-clause tree // to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.9999999880868982	WITHOUT_CLASSIFICATION	8.162910924963566E-9	DESIGN	3.743886369054537E-9	DEFECT	3.932555104658012E-12	IMPLEMENTATION	1.2274676033024193E-12	TEST	1.1445435592448219E-12	DOCUMENTATION
// right represents a joins originating from left...	WITHOUT_CLASSIFICATION	0.9999944782716362	WITHOUT_CLASSIFICATION	5.44884097929569E-6	DEFECT	6.205133997792965E-8	DESIGN	8.732624372798444E-9	IMPLEMENTATION	1.6788596855087848E-9	TEST	4.2456053331450813E-10	DOCUMENTATION
// all clear	WITHOUT_CLASSIFICATION	0.999999151142869	WITHOUT_CLASSIFICATION	5.707455926593765E-7	DESIGN	2.5916380952635374E-7	IMPLEMENTATION	1.2861575087336766E-8	DEFECT	3.9806672923499475E-9	DOCUMENTATION	2.10548655025576E-9	TEST
// Ignore the token class name parameter, and use a specific token class.	WITHOUT_CLASSIFICATION	0.9999999771988349	WITHOUT_CLASSIFICATION	2.2128995680088594E-8	DESIGN	4.943189258226574E-10	DEFECT	1.5971593634324335E-10	DOCUMENTATION	1.3577484870097389E-11	IMPLEMENTATION	4.557077246920591E-12	TEST
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9997745527357904	WITHOUT_CLASSIFICATION	2.2287319683167778E-4	DESIGN	1.0764481241367239E-6	IMPLEMENTATION	5.658852805618369E-7	DOCUMENTATION	5.410209760556709E-7	DEFECT	3.907129972412402E-7	TEST
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9997745527357904	WITHOUT_CLASSIFICATION	2.2287319683167778E-4	DESIGN	1.0764481241367239E-6	IMPLEMENTATION	5.658852805618369E-7	DOCUMENTATION	5.410209760556709E-7	DEFECT	3.907129972412402E-7	TEST
// remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.9983723015327285	WITHOUT_CLASSIFICATION	0.0016213397716397253	DESIGN	6.078045650740576E-6	DEFECT	1.7849183011792499E-7	IMPLEMENTATION	8.504637146014696E-8	TEST	1.7111779524181972E-8	DOCUMENTATION
// don't care about other param types here, just those explicitly user-defined...	WITHOUT_CLASSIFICATION	0.9998608081927599	WITHOUT_CLASSIFICATION	1.3918697411112715E-4	DESIGN	3.893270369066576E-9	TEST	8.99072948247256E-10	DEFECT	3.700114462233626E-11	DOCUMENTATION	3.784455543758771E-12	IMPLEMENTATION
// If the query is already compiled, skip the compilation.	WITHOUT_CLASSIFICATION	0.9990035185108551	WITHOUT_CLASSIFICATION	9.927194270663501E-4	IMPLEMENTATION	3.686092428779262E-6	DEFECT	4.678558911644819E-8	DESIGN	1.9664045571441713E-8	TEST	9.520015326701597E-9	DOCUMENTATION
// Remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.9998702703473625	WITHOUT_CLASSIFICATION	1.0243410318524777E-4	DESIGN	1.6450594090966136E-5	IMPLEMENTATION	9.88226579467207E-6	DEFECT	9.390900927798968E-7	TEST	2.359947376545099E-8	DOCUMENTATION
// PHASE 1 : Parse the HQL into an AST.	WITHOUT_CLASSIFICATION	0.9999604010948658	WITHOUT_CLASSIFICATION	3.7498226410974664E-5	DESIGN	1.2015642808735034E-6	DEFECT	6.937714307495192E-7	IMPLEMENTATION	1.7581434001527577E-7	DOCUMENTATION	2.952867157278213E-8	TEST
// PHASE 2 : Analyze the HQL AST, and produce an SQL AST.	WITHOUT_CLASSIFICATION	0.9997738955010527	WITHOUT_CLASSIFICATION	2.2041474599924195E-4	DESIGN	5.060407525236291E-6	DEFECT	5.831477068673213E-7	DOCUMENTATION	3.496635062141641E-8	IMPLEMENTATION	1.1231365410370043E-8	TEST
// PHASE 3 : Generate the SQL.	WITHOUT_CLASSIFICATION	0.9974047152268032	WITHOUT_CLASSIFICATION	0.002569075248087979	DESIGN	1.4207203502534512E-5	IMPLEMENTATION	4.8509305992459955E-6	DEFECT	4.169649992238639E-6	TEST	2.9817410149628872E-6	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999999934626438	WITHOUT_CLASSIFICATION	5.772038032006493E-9	DEFECT	4.702427836517919E-10	DESIGN	2.2933990096751516E-10	TEST	5.4530439208235856E-11	IMPLEMENTATION	1.120499107247903E-11	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999999934626438	WITHOUT_CLASSIFICATION	5.772038032006493E-9	DEFECT	4.702427836517919E-10	DESIGN	2.2933990096751516E-10	TEST	5.4530439208235856E-11	IMPLEMENTATION	1.120499107247903E-11	DOCUMENTATION
//only needed during compilation phase...	WITHOUT_CLASSIFICATION	0.9999992347975942	WITHOUT_CLASSIFICATION	4.755082006188974E-7	DEFECT	1.410574751429555E-7	DESIGN	8.404635150623349E-8	IMPLEMENTATION	4.411441285480697E-8	DOCUMENTATION	2.047596572980406E-8	TEST
// Transform the tree.	WITHOUT_CLASSIFICATION	0.9999976291056143	WITHOUT_CLASSIFICATION	1.544129534165044E-6	DESIGN	5.633999729101116E-7	IMPLEMENTATION	1.0354933723020217E-7	DOCUMENTATION	1.0058996240222184E-7	DEFECT	5.922557889255507E-8	TEST
// Parse the query string into an HQL AST.	WITHOUT_CLASSIFICATION	0.9999669015675366	WITHOUT_CLASSIFICATION	3.0468110141243057E-5	DESIGN	2.1739342183248E-6	DEFECT	2.290678443810789E-7	IMPLEMENTATION	1.8587719354539332E-7	DOCUMENTATION	4.144306578339622E-8	TEST
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999675354214165	WITHOUT_CLASSIFICATION	3.21846823301855E-5	DESIGN	1.522575606112833E-7	DEFECT	6.207030118588431E-8	DOCUMENTATION	3.3699919169271827E-8	IMPLEMENTATION	3.186847217945815E-8	TEST
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999675354214165	WITHOUT_CLASSIFICATION	3.21846823301855E-5	DESIGN	1.522575606112833E-7	DEFECT	6.207030118588431E-8	DOCUMENTATION	3.3699919169271827E-8	IMPLEMENTATION	3.186847217945815E-8	TEST
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999675354214165	WITHOUT_CLASSIFICATION	3.21846823301855E-5	DESIGN	1.522575606112833E-7	DEFECT	6.207030118588431E-8	DOCUMENTATION	3.3699919169271827E-8	IMPLEMENTATION	3.186847217945815E-8	TEST
// NOTE : ( max - 1 ) because first is zero-based while max is not...	WITHOUT_CLASSIFICATION	0.9918028896394233	WITHOUT_CLASSIFICATION	0.005044490216864559	DEFECT	0.0016783472868933632	DESIGN	0.0013963287917984075	IMPLEMENTATION	7.55302021549784E-5	TEST	2.413862865474609E-6	DOCUMENTATION
// -- Package local methods for the QueryLoader delegate --	WITHOUT_CLASSIFICATION	0.9999768607155564	WITHOUT_CLASSIFICATION	2.3126277652163636E-5	DESIGN	4.1990006045428075E-9	TEST	3.433102671439399E-9	DOCUMENTATION	2.916324315653585E-9	IMPLEMENTATION	2.4583639407939726E-9	DEFECT
// If there are no collection fetches, then no further checks are needed	WITHOUT_CLASSIFICATION	0.9910039043496383	WITHOUT_CLASSIFICATION	0.008993204230318503	IMPLEMENTATION	1.921095781778126E-6	TEST	4.1589929331554983E-7	DOCUMENTATION	3.3093515297199706E-7	DEFECT	2.2348981503751076E-7	DESIGN
// A shallow query is ok (although technically there should be no fetching here...)	WITHOUT_CLASSIFICATION	0.5372478238530658	DEFECT	0.3372782295600495	WITHOUT_CLASSIFICATION	0.0837085486557161	IMPLEMENTATION	0.041042087866284015	DESIGN	7.131989692367039E-4	TEST	1.0111095647930523E-5	DOCUMENTATION
// should be the first, but just to be safe...	WITHOUT_CLASSIFICATION	0.9999685639300158	WITHOUT_CLASSIFICATION	2.524263997736147E-5	DESIGN	3.1586107465982843E-6	DEFECT	2.9728543628398334E-6	IMPLEMENTATION	4.819961238387814E-8	TEST	1.3765285067239275E-8	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999993218115508	WITHOUT_CLASSIFICATION	4.825948225117671E-7	DESIGN	1.893853007018678E-7	IMPLEMENTATION	2.918311399087166E-9	DOCUMENTATION	2.4533625714000065E-9	TEST	8.366521456136471E-10	DEFECT
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999993218115508	WITHOUT_CLASSIFICATION	4.825948225117671E-7	DESIGN	1.893853007018678E-7	IMPLEMENTATION	2.918311399087166E-9	DOCUMENTATION	2.4533625714000065E-9	TEST	8.366521456136471E-10	DEFECT
// Impl Note: allows multiple collection fetches as long as the // entire fecthed graph still "points back" to a single // root entity for return	WITHOUT_CLASSIFICATION	0.9999997440054775	WITHOUT_CLASSIFICATION	2.364826339167116E-7	DEFECT	1.37278250119798E-8	DESIGN	5.749048882101282E-9	IMPLEMENTATION	3.4060530594170386E-11	TEST	9.542099657200617E-13	DOCUMENTATION
// Otherwise, we have a non-scalar select with defined collection fetch(es). // Make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.9971024661258129	WITHOUT_CLASSIFICATION	0.0028953059888488955	DESIGN	2.1647566350848574E-6	IMPLEMENTATION	5.042033266232337E-8	DEFECT	1.2420424279663149E-8	TEST	2.8794621805746263E-10	DOCUMENTATION
// This is not strictly true.  We actually just need to make sure that // it is ordered by root-entity PK and that that order-by comes before // any non-root-entity ordering...	WITHOUT_CLASSIFICATION	0.9999732473880947	WITHOUT_CLASSIFICATION	2.514629426383822E-5	DESIGN	7.874496736895768E-7	IMPLEMENTATION	7.136728764699942E-7	DEFECT	1.0388451267281776E-7	TEST	1.3105785571378815E-9	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.9999995694978312	WITHOUT_CLASSIFICATION	4.213983151326487E-7	DESIGN	3.852935438717146E-9	DOCUMENTATION	2.823672397837612E-9	DEFECT	1.7180988440952733E-9	IMPLEMENTATION	7.091468696467252E-10	TEST
// igndore it...	WITHOUT_CLASSIFICATION	0.9994294556775898	WITHOUT_CLASSIFICATION	4.8096632492748806E-4	DEFECT	7.638098240084122E-5	DESIGN	1.0792338174179729E-5	IMPLEMENTATION	1.3504791235532444E-6	DOCUMENTATION	1.0541977841569163E-6	TEST
// we are now at a new tree level	WITHOUT_CLASSIFICATION	0.9999995621322937	WITHOUT_CLASSIFICATION	2.82335300777921E-7	DESIGN	1.445983881464491E-7	DEFECT	4.237396597298324E-9	DOCUMENTATION	3.3957936795972273E-9	TEST	3.300827037589466E-9	IMPLEMENTATION
// [jsd] The fix for HHH-558...	WITHOUT_CLASSIFICATION	0.994214148148583	WITHOUT_CLASSIFICATION	0.005050495297768752	DESIGN	7.211552597243843E-4	DEFECT	6.6720574037877125E-6	IMPLEMENTATION	3.7884507809495832E-6	TEST	3.7407857391278858E-6	DOCUMENTATION
// If the token can tell us if it could be an identifier...	WITHOUT_CLASSIFICATION	0.9995431860146919	WITHOUT_CLASSIFICATION	4.332664690514914E-4	DESIGN	2.1400782826729006E-5	DEFECT	1.8076850200060717E-6	IMPLEMENTATION	3.175190236087322E-7	TEST	2.152938639427494E-8	DOCUMENTATION
// ... and the expected token type was an identifier, then:	WITHOUT_CLASSIFICATION	0.9999995226333425	WITHOUT_CLASSIFICATION	2.685741545480673E-7	DEFECT	2.009414065920923E-7	DESIGN	3.824741746299281E-9	DOCUMENTATION	2.133528465250152E-9	IMPLEMENTATION	1.8928262850856954E-9	TEST
// Use the token as an identifier.	WITHOUT_CLASSIFICATION	0.9999999838954237	WITHOUT_CLASSIFICATION	1.049307274478252E-8	DESIGN	2.733085748026452E-9	DEFECT	2.1410966973433272E-9	IMPLEMENTATION	4.712642099324559E-10	DOCUMENTATION	2.660570027520525E-10	TEST
// Add the token to the AST.	WITHOUT_CLASSIFICATION	0.9999861551511018	WITHOUT_CLASSIFICATION	5.95036979413047E-6	DESIGN	5.1098632181599784E-6	DOCUMENTATION	1.854618539556413E-6	DEFECT	8.348124200706827E-7	IMPLEMENTATION	9.518492633537168E-8	TEST
// (NOT (EQ a b) ) => (NE a b)	WITHOUT_CLASSIFICATION	0.9999577845306317	WITHOUT_CLASSIFICATION	3.987062137069335E-5	DESIGN	1.4583723634269795E-6	IMPLEMENTATION	3.698215908501582E-7	TEST	3.426634388593514E-7	DEFECT	1.739906046915787E-7	DOCUMENTATION
// (NOT (NE a b) ) => (EQ a b)	WITHOUT_CLASSIFICATION	0.9999577845306317	WITHOUT_CLASSIFICATION	3.987062137069335E-5	DESIGN	1.4583723634269795E-6	IMPLEMENTATION	3.698215908501582E-7	TEST	3.426634388593514E-7	DEFECT	1.739906046915787E-7	DOCUMENTATION
// (NOT (LT a b) ) => (GE a b)	WITHOUT_CLASSIFICATION	0.9999617274050249	WITHOUT_CLASSIFICATION	3.700337442716584E-5	DESIGN	6.229645017679227E-7	IMPLEMENTATION	2.8422095560362835E-7	DEFECT	2.493628335191817E-7	TEST	1.1267225712200964E-7	DOCUMENTATION
// (NOT (GE a b) ) => (LT a b)	WITHOUT_CLASSIFICATION	0.9999617274050249	WITHOUT_CLASSIFICATION	3.700337442716584E-5	DESIGN	6.229645017679227E-7	IMPLEMENTATION	2.8422095560362835E-7	DEFECT	2.493628335191817E-7	TEST	1.1267225712200964E-7	DOCUMENTATION
// (NOT (LE a b) ) => (GT a b)	WITHOUT_CLASSIFICATION	0.9999639946222404	WITHOUT_CLASSIFICATION	3.4566587685280554E-5	DESIGN	8.002860640957277E-7	IMPLEMENTATION	2.639232611520799E-7	DEFECT	2.620985858814378E-7	TEST	1.1248216314699265E-7	DOCUMENTATION
// (NOT (LIKE a b) ) => (NOT_LIKE a b)	WITHOUT_CLASSIFICATION	0.9999954256895798	WITHOUT_CLASSIFICATION	3.090366755348195E-6	DESIGN	1.1953926478108398E-6	IMPLEMENTATION	1.386148833146539E-7	DEFECT	1.0927622534004357E-7	TEST	4.0659908191255876E-8	DOCUMENTATION
// (NOT (NOT_LIKE a b) ) => (LIKE a b)	WITHOUT_CLASSIFICATION	0.9999954256895798	WITHOUT_CLASSIFICATION	3.090366755348195E-6	DESIGN	1.1953926478108398E-6	IMPLEMENTATION	1.386148833146539E-7	DEFECT	1.0927622534004357E-7	TEST	4.0659908191255876E-8	DOCUMENTATION
// (NOT (IS_NOT_NULL a b) ) => (IS_NULL a b)	WITHOUT_CLASSIFICATION	0.9999826000093278	WITHOUT_CLASSIFICATION	1.5016587125099333E-5	DESIGN	1.8796443045053654E-6	IMPLEMENTATION	2.8732867898290115E-7	DEFECT	1.265581141739009E-7	TEST	8.987244940080711E-8	DOCUMENTATION
// (NOT (BETWEEN a b) ) => (NOT_BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999881639205929	WITHOUT_CLASSIFICATION	7.245397990365531E-6	DESIGN	4.011095334160495E-6	IMPLEMENTATION	2.742874276707233E-7	TEST	2.006451428274953E-7	DEFECT	1.0465351199069739E-7	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999992273334761	WITHOUT_CLASSIFICATION	5.56807689196874E-7	DESIGN	1.989823376533221E-7	IMPLEMENTATION	8.955538755953505E-9	DEFECT	5.6137066322439476E-9	TEST	2.3072516582013204E-9	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9997745527357904	WITHOUT_CLASSIFICATION	2.2287319683167778E-4	DESIGN	1.0764481241367239E-6	IMPLEMENTATION	5.658852805618369E-7	DOCUMENTATION	5.410209760556709E-7	DEFECT	3.907129972412402E-7	TEST
// if // if // Otherwise, handle the error normally.	WITHOUT_CLASSIFICATION	0.9999931122226926	WITHOUT_CLASSIFICATION	3.9054394210095305E-6	IMPLEMENTATION	2.7947755563512313E-6	DESIGN	1.6317609910993958E-7	DEFECT	1.7533448839968454E-8	TEST	6.8527821705691846E-9	DOCUMENTATION
// (NOT (NOT_BETWEEN a b) ) => (BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999881639205929	WITHOUT_CLASSIFICATION	7.245397990365531E-6	DESIGN	4.011095334160495E-6	IMPLEMENTATION	2.742874276707233E-7	TEST	2.006451428274953E-7	DEFECT	1.0465351199069739E-7	DOCUMENTATION
/* This can never happen because this rule will always eliminate the child NOT.	WITHOUT_CLASSIFICATION	0.973095065310551	WITHOUT_CLASSIFICATION	0.02686561121839242	DESIGN	3.750531848101471E-5	IMPLEMENTATION	1.309485529238165E-6	DEFECT	4.3685589837149426E-7	DOCUMENTATION	7.181114781225965E-8	TEST
// Just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9998131105161272	WITHOUT_CLASSIFICATION	1.2902338427299702E-4	DESIGN	4.763647616310993E-5	IMPLEMENTATION	9.246742155997378E-6	DEFECT	5.674885023940666E-7	DOCUMENTATION	4.153927782140441E-7	TEST
// (EQ NULL b) => (IS_NULL b)	WITHOUT_CLASSIFICATION	0.9999996131596727	WITHOUT_CLASSIFICATION	2.999566686684562E-7	DESIGN	3.8699135996339684E-8	IMPLEMENTATION	2.6961229438866682E-8	DEFECT	1.1820272301845534E-8	DOCUMENTATION	9.403020773995538E-9	TEST
// (EQ a NULL) => (IS_NULL a)	WITHOUT_CLASSIFICATION	0.9999995789393296	WITHOUT_CLASSIFICATION	3.492184154417072E-7	DESIGN	3.9695870144408905E-8	IMPLEMENTATION	1.8236847126300554E-8	DEFECT	8.211536712743929E-9	DOCUMENTATION	5.698001021886275E-9	TEST
// NOTE: Because we're using ASTUtil.createParent(), the tree must be created from the bottom up. // IS EMPTY x => (EXISTS (QUERY (SELECT_FROM (FROM x) ) ) )	WITHOUT_CLASSIFICATION	0.9999944242329214	WITHOUT_CLASSIFICATION	4.324496068689016E-6	DESIGN	1.2023021377820316E-6	IMPLEMENTATION	4.115747011186401E-8	TEST	5.8447288792543665E-9	DEFECT	1.9666731167438854E-9	DOCUMENTATION
// Add NOT if it's negated.	WITHOUT_CLASSIFICATION	0.9992721922448572	WITHOUT_CLASSIFICATION	4.920260039204133E-4	DESIGN	1.5337204998450117E-4	IMPLEMENTATION	7.123758556356458E-5	TEST	6.4158471148223395E-6	DOCUMENTATION	4.756268559624257E-6	DEFECT
// Create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.9999993295539391	WITHOUT_CLASSIFICATION	6.600183844506128E-7	DESIGN	5.504108413484592E-9	DEFECT	2.45895362706789E-9	DOCUMENTATION	1.9910560861605218E-9	TEST	4.735583973536033E-10	IMPLEMENTATION
// Case 1: Multi token keywords GROUP BY and ORDER BY // The next token ( LT(2) ) should be 'by'... otherwise, this is just an ident.	WITHOUT_CLASSIFICATION	0.9406597949987116	WITHOUT_CLASSIFICATION	0.05829372453512925	DESIGN	0.0010430837132811303	DEFECT	2.954303480166654E-6	TEST	3.1189946095091326E-7	DOCUMENTATION	1.305499369632583E-7	IMPLEMENTATION
// Case 2: The current token is after FROM and before '.'.	WITHOUT_CLASSIFICATION	0.9998168489258697	WITHOUT_CLASSIFICATION	1.828154407995174E-4	DEFECT	1.8535900933905585E-7	DESIGN	7.799279847283668E-8	DOCUMENTATION	4.83024683366633E-8	TEST	2.3979054598310616E-8	IMPLEMENTATION
// This handles HHH-354, where there is a strange property name in a where clause. // If the lookahead contains a DOT then something that isn't an IDENT...	WITHOUT_CLASSIFICATION	0.9944833724439431	WITHOUT_CLASSIFICATION	0.005462926155324201	DESIGN	5.129193265825302E-5	DEFECT	2.274089447788755E-6	TEST	1.1651763609653171E-7	DOCUMENTATION	1.8860990605080854E-8	IMPLEMENTATION
// See if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.9999999786921423	WITHOUT_CLASSIFICATION	2.0083477561966717E-8	DESIGN	1.1051971144130868E-9	DEFECT	6.77232916419818E-11	DOCUMENTATION	2.6332823019617162E-11	IMPLEMENTATION	2.512686488619449E-11	TEST
// Set it!	WITHOUT_CLASSIFICATION	0.9999481173672139	WITHOUT_CLASSIFICATION	3.059483686926602E-5	DESIGN	1.8285741932428822E-5	DEFECT	1.8946076362879918E-6	IMPLEMENTATION	6.502165008565646E-7	TEST	4.5722984744624014E-7	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999994365319849	WITHOUT_CLASSIFICATION	3.751646589186226E-7	DESIGN	1.0889089547337328E-7	DEFECT	6.070382664797166E-8	IMPLEMENTATION	1.417363308791069E-8	DOCUMENTATION	4.535001194219872E-9	TEST
// strip the " where "	WITHOUT_CLASSIFICATION	0.9999959942169504	WITHOUT_CLASSIFICATION	3.4779248030659196E-6	DESIGN	3.5082384334048494E-7	IMPLEMENTATION	9.131224580453754E-8	TEST	4.8644801059228735E-8	DEFECT	3.707735641716197E-8	DOCUMENTATION
// Don't really know all the codes required to adequately decipher returned jdbc exceptions here. // simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.9998375074004008	WITHOUT_CLASSIFICATION	1.5516423534846693E-4	DEFECT	7.0475342643945705E-6	IMPLEMENTATION	2.3650115359182034E-7	DESIGN	4.3491255915106796E-8	TEST	8.375769904104551E-10	DOCUMENTATION
// at the very least cleanup the data :)	WITHOUT_CLASSIFICATION	0.9916325223137267	WITHOUT_CLASSIFICATION	0.008191136217376082	DESIGN	1.0939549295920729E-4	IMPLEMENTATION	6.46610783539244E-5	DEFECT	1.2929767456422288E-6	DOCUMENTATION	9.919208383970714E-7	TEST
// First, save off the pertinent ids, as the return value	WITHOUT_CLASSIFICATION	0.9999999375720485	WITHOUT_CLASSIFICATION	4.4143110244195935E-8	DESIGN	1.1491422159268527E-8	IMPLEMENTATION	5.915867518350149E-9	DEFECT	4.993492216715036E-10	TEST	3.7820232323548444E-10	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9998802483326981	WITHOUT_CLASSIFICATION	1.1807970489621157E-4	DESIGN	9.90142332670881E-7	IMPLEMENTATION	5.359243384823538E-7	DEFECT	9.312979428564584E-8	TEST	5.2765940149378513E-8	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9998802483326981	WITHOUT_CLASSIFICATION	1.1807970489621157E-4	DESIGN	9.90142332670881E-7	IMPLEMENTATION	5.359243384823538E-7	DEFECT	9.312979428564584E-8	TEST	5.2765940149378513E-8	DOCUMENTATION
// Start performing the updates	WITHOUT_CLASSIFICATION	0.9999944891522022	WITHOUT_CLASSIFICATION	4.13526887727199E-6	IMPLEMENTATION	8.010625844024307E-7	DESIGN	3.0291628443635933E-7	DEFECT	2.2514352092518476E-7	TEST	4.645653071794208E-8	DOCUMENTATION
// First, save off the pertinent ids, saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.999999852885018	WITHOUT_CLASSIFICATION	9.722559438441166E-8	DESIGN	2.0058266307798074E-8	DEFECT	1.967952620158275E-8	TEST	7.993426959956398E-9	IMPLEMENTATION	2.1581680654343196E-9	DOCUMENTATION
// Start performing the deletes	WITHOUT_CLASSIFICATION	0.9999972309781112	WITHOUT_CLASSIFICATION	1.8780926340928666E-6	IMPLEMENTATION	7.504866435567214E-7	DESIGN	1.1268843903980263E-7	TEST	1.747344752078638E-8	DEFECT	1.0280724517732714E-8	DOCUMENTATION
// otherwise, everything ok.	WITHOUT_CLASSIFICATION	0.9999085052362705	WITHOUT_CLASSIFICATION	5.158409692556611E-5	DESIGN	3.851906857276289E-5	IMPLEMENTATION	7.849114639452671E-7	TEST	3.6748593030432154E-7	DOCUMENTATION	2.392008369974182E-7	DEFECT
// visit width-first, then depth	WITHOUT_CLASSIFICATION	0.9999932274457237	WITHOUT_CLASSIFICATION	6.215394532533455E-6	DESIGN	2.769049637774337E-7	IMPLEMENTATION	1.3382912883042728E-7	DEFECT	1.1706572212695152E-7	TEST	2.9359928927380904E-8	DOCUMENTATION
// if the types report logical equivalence, return true...	WITHOUT_CLASSIFICATION	0.999944604510024	WITHOUT_CLASSIFICATION	3.87095379936563E-5	DESIGN	1.6246503818858083E-5	DEFECT	3.9805158686369634E-7	IMPLEMENTATION	3.294700245976062E-8	TEST	8.449574106424251E-9	DOCUMENTATION
// otherwise, perform a "deep equivalence" check...	WITHOUT_CLASSIFICATION	0.9999560818753581	WITHOUT_CLASSIFICATION	4.1232681777075274E-5	DESIGN	2.656991465526752E-6	IMPLEMENTATION	1.3104715772721652E-8	DOCUMENTATION	9.988160192137605E-9	DEFECT	5.358523287156491E-9	TEST
// If there is no WHERE node, make one.	WITHOUT_CLASSIFICATION	0.9999994994199791	WITHOUT_CLASSIFICATION	2.0755651741417487E-7	DESIGN	1.349415046455418E-7	DEFECT	1.2713151448172798E-7	TEST	2.9800378646172044E-8	IMPLEMENTATION	1.1501057293064416E-9	DOCUMENTATION
// inject the WHERE after the parent	WITHOUT_CLASSIFICATION	0.9999548226953416	WITHOUT_CLASSIFICATION	4.0493718546751715E-5	DESIGN	3.194000901350822E-6	IMPLEMENTATION	1.1581964680123174E-6	DEFECT	1.665210134202254E-7	DOCUMENTATION	1.6486772893861024E-7	TEST
// Never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9997667657517343	WITHOUT_CLASSIFICATION	2.3187847236319351E-4	DESIGN	1.2286988925698859E-6	IMPLEMENTATION	1.0359189515904454E-7	TEST	1.311216115979731E-8	DEFECT	1.0372953458504977E-8	DOCUMENTATION
// Moved here from SelectClause [jsd]	WITHOUT_CLASSIFICATION	0.9999833694557272	WITHOUT_CLASSIFICATION	1.611787910576502E-5	DESIGN	4.5446716230964856E-7	IMPLEMENTATION	2.374906235988398E-8	DEFECT	2.188864567401434E-8	TEST	1.2560296617232981E-8	DOCUMENTATION
///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997808702198667	WITHOUT_CLASSIFICATION	1.8039887732025525E-4	DESIGN	1.8687851948760043E-5	IMPLEMENTATION	8.302523883219948E-6	DEFECT	6.018446551254673E-6	TEST	5.7220804297309275E-6	DOCUMENTATION
// Use the table fromElement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.9999997871723251	WITHOUT_CLASSIFICATION	2.0827620524459205E-7	DESIGN	1.9596113390909366E-9	DEFECT	1.7135025846813417E-9	IMPLEMENTATION	7.011935002391127E-10	DOCUMENTATION	1.771622795433943E-10	TEST
// Set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.9999925066321051	WITHOUT_CLASSIFICATION	7.2636930364588565E-6	DEFECT	1.5265712978472254E-7	DESIGN	3.891155856894657E-8	TEST	2.2275949673973744E-8	DOCUMENTATION	1.5830220441290276E-8	IMPLEMENTATION
// If the uresolved property path isn't set yet, just use the property name.	WITHOUT_CLASSIFICATION	0.9994253084327203	WITHOUT_CLASSIFICATION	2.89375847506921E-4	DEFECT	2.2428293874827412E-4	DESIGN	5.281497972141909E-5	IMPLEMENTATION	7.136383621517931E-6	TEST	1.0814176815732185E-6	DOCUMENTATION
// The 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.9999709905315602	WITHOUT_CLASSIFICATION	1.6775860368663843E-5	DESIGN	1.1443652196255037E-5	DEFECT	3.8922959879906126E-7	IMPLEMENTATION	3.372202260652792E-7	TEST	6.350604987954348E-8	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999999737225632	WITHOUT_CLASSIFICATION	9.54511601331404E-9	DESIGN	9.272091756632055E-9	IMPLEMENTATION	7.314318204102986E-9	DEFECT	7.367690736583249E-11	DOCUMENTATION	7.223398221163009E-11	TEST
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999999737225632	WITHOUT_CLASSIFICATION	9.54511601331404E-9	DESIGN	9.272091756632055E-9	IMPLEMENTATION	7.314318204102986E-9	DEFECT	7.367690736583249E-11	DOCUMENTATION	7.223398221163009E-11	TEST
// If this dot has already been resolved, stop now.	WITHOUT_CLASSIFICATION	0.9996183778295586	WITHOUT_CLASSIFICATION	2.621640935716352E-4	DESIGN	1.0713596184855702E-4	IMPLEMENTATION	1.1634561157763256E-5	DEFECT	5.118584331403914E-7	TEST	1.756954301779903E-7	DOCUMENTATION
// If there is no data type for this node, and we're at the end of the path (top most dot node), then // this might be a Java constant.	WITHOUT_CLASSIFICATION	0.9973720745111299	WITHOUT_CLASSIFICATION	0.0017970698311233727	DESIGN	8.302248507413382E-4	DEFECT	3.600156644325469E-7	TEST	1.488499129670207E-7	IMPLEMENTATION	1.2194142810357073E-7	DOCUMENTATION
// The property is a collection...	WITHOUT_CLASSIFICATION	0.9992902160932933	WITHOUT_CLASSIFICATION	7.001688722067262E-4	DEFECT	8.1805561056334E-6	DESIGN	1.0841399145230912E-6	IMPLEMENTATION	2.715192775751082E-7	TEST	7.881920226231687E-8	DOCUMENTATION
// The property is a component...	WITHOUT_CLASSIFICATION	0.999723599550674	WITHOUT_CLASSIFICATION	2.7135833750392376E-4	DEFECT	4.812087760520436E-6	DESIGN	1.5222585497278714E-7	TEST	4.430259560458955E-8	DOCUMENTATION	3.3495610837196465E-8	IMPLEMENTATION
// The property is another class..	WITHOUT_CLASSIFICATION	0.9999370510840722	WITHOUT_CLASSIFICATION	4.6810779567242974E-5	DEFECT	1.58523086311462E-5	DESIGN	1.705666913572327E-7	TEST	1.1150519314912137E-7	DOCUMENTATION	3.755845048010997E-9	IMPLEMENTATION
// Otherwise, this is a primitive type.	WITHOUT_CLASSIFICATION	0.9999916455881637	WITHOUT_CLASSIFICATION	7.825753537213195E-6	DESIGN	2.640420017455248E-7	DEFECT	1.418376142173478E-7	IMPLEMENTATION	1.1324317075937814E-7	TEST	9.535512550573826E-9	DOCUMENTATION
//foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.9919893928350995	WITHOUT_CLASSIFICATION	0.007951810098063073	DESIGN	5.01554825740969E-5	IMPLEMENTATION	3.939262147555283E-6	DEFECT	2.451577972608608E-6	DOCUMENTATION	2.2507441432099465E-6	TEST
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999818403257429	WITHOUT_CLASSIFICATION	1.1707842420133551E-5	DEFECT	6.42889829472702E-6	DESIGN	2.0428382560047473E-8	IMPLEMENTATION	1.4662829564930276E-9	DOCUMENTATION	1.0388767765290763E-9	TEST
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9998384866425465	WITHOUT_CLASSIFICATION	1.5546599490627358E-4	IMPLEMENTATION	3.6373968336513937E-6	DESIGN	2.269321834101257E-6	DEFECT	1.2260315151799235E-7	DOCUMENTATION	1.804072789862481E-8	TEST
// in non-select queries, the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.999999996818861	WITHOUT_CLASSIFICATION	2.755958760384826E-9	DEFECT	3.5024322442809365E-10	DESIGN	6.504287289889104E-11	TEST	5.875643463155873E-12	DOCUMENTATION	4.018474002607095E-12	IMPLEMENTATION
// this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.999946647660729	WITHOUT_CLASSIFICATION	5.3255715313451156E-5	DESIGN	7.10990960282543E-8	DEFECT	1.5803875671922147E-8	IMPLEMENTATION	6.551227001164972E-9	DOCUMENTATION	3.169758677745201E-9	TEST
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999818403257429	WITHOUT_CLASSIFICATION	1.1707842420133551E-5	DEFECT	6.42889829472702E-6	DESIGN	2.0428382560047473E-8	IMPLEMENTATION	1.4662829564930276E-9	DOCUMENTATION	1.0388767765290763E-9	TEST
// even though we might find a pre-existing element by join path, we may not be able to reuse it...	WITHOUT_CLASSIFICATION	0.6307055158133339	WITHOUT_CLASSIFICATION	0.36928724149068354	DESIGN	7.116097654109899E-6	DEFECT	4.711695645968109E-8	TEST	4.0850443038632694E-8	IMPLEMENTATION	3.8630928849492824E-8	DOCUMENTATION
// NOTE : addDuplicateAlias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.9951105070291638	WITHOUT_CLASSIFICATION	0.004786842758585303	DESIGN	9.75819403347204E-5	IMPLEMENTATION	2.418268528823591E-6	DEFECT	2.0254571924450396E-6	DOCUMENTATION	6.245461947471792E-7	TEST
// if the from-clauses are the same, we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.9985631837934897	WITHOUT_CLASSIFICATION	0.0014311879129109957	DESIGN	5.542631706446732E-6	DEFECT	5.2365067324721897E-8	IMPLEMENTATION	2.920860942963269E-8	TEST	4.088216048576041E-9	DOCUMENTATION
// again, null != null here	WITHOUT_CLASSIFICATION	0.9999985991085267	WITHOUT_CLASSIFICATION	1.1867724203491065E-6	DESIGN	9.172911376736E-8	IMPLEMENTATION	6.855167664668032E-8	DEFECT	3.905724932502444E-8	TEST	1.4781013009695737E-8	DOCUMENTATION
// If this is an implied join in a from element, then use the impled join type which is part of the // tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.9999999079695169	WITHOUT_CLASSIFICATION	8.969560033882741E-8	DESIGN	2.27243571885581E-9	DEFECT	4.637399088457276E-11	TEST	8.910116280124846E-12	IMPLEMENTATION	7.162905126677804E-12	DOCUMENTATION
// otherwise (subquery case) dont reuse the fromElement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.9999999845083861	WITHOUT_CLASSIFICATION	1.4619830619117888E-8	DESIGN	4.033732456875716E-10	DEFECT	2.1503898572222873E-10	IMPLEMENTATION	1.519021315100317E-10	TEST	1.0146898878119738E-10	DOCUMENTATION
// we know only the lhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999997919106641	WITHOUT_CLASSIFICATION	1.7756660047450904E-7	DESIGN	2.558868185139163E-8	IMPLEMENTATION	4.57236952732239E-9	DOCUMENTATION	2.338514387409476E-10	DEFECT	1.2783276702426525E-10	TEST
// the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.9999997406773293	WITHOUT_CLASSIFICATION	1.7505977112541297E-7	IMPLEMENTATION	7.16255248421763E-8	DEFECT	6.004264770779005E-9	DOCUMENTATION	4.893732811118697E-9	DESIGN	1.7393772524051968E-9	TEST
// only the identifier property field name can be a reference to the associated entity's PK...	WITHOUT_CLASSIFICATION	0.9991565807902631	WITHOUT_CLASSIFICATION	8.433718620157267E-4	DESIGN	3.858265981448388E-8	DEFECT	6.291499401615909E-9	DOCUMENTATION	2.427749527104567E-9	TEST	4.5812342943908614E-11	IMPLEMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9997283377584466	WITHOUT_CLASSIFICATION	1.6191887251367724E-4	DEFECT	9.635539407240426E-5	DESIGN	8.247471242858663E-6	TEST	3.2260792293643926E-6	DOCUMENTATION	1.914424494945695E-6	IMPLEMENTATION
// Append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.9999048739266839	WITHOUT_CLASSIFICATION	4.053309763153284E-5	DEFECT	3.438197946995105E-5	DESIGN	1.7892756889768326E-5	IMPLEMENTATION	1.7856176710350192E-6	DOCUMENTATION	5.326216537525366E-7	TEST
// If the lhs is a collection, use CollectionPropertyMapping	WITHOUT_CLASSIFICATION	0.9999982706205871	WITHOUT_CLASSIFICATION	1.3236821573589574E-6	DEFECT	3.95125571445684E-7	DESIGN	7.248782308067895E-9	IMPLEMENTATION	2.6525601014544902E-9	TEST	6.703416128586167E-10	DOCUMENTATION
// Tell the destination fromElement to 'includeSubclasses'.	WITHOUT_CLASSIFICATION	0.9999110434726431	WITHOUT_CLASSIFICATION	8.851228026748837E-5	DESIGN	3.073090807808311E-7	DOCUMENTATION	7.334271850849353E-8	TEST	4.884793181889202E-8	IMPLEMENTATION	1.4747358212889497E-8	DEFECT
// Use theta style (for regression) // Move the node up, after the origin node.	WITHOUT_CLASSIFICATION	0.9999976652590614	WITHOUT_CLASSIFICATION	1.5371071533051833E-6	IMPLEMENTATION	4.806381530386684E-7	DESIGN	3.0260223872079745E-7	DEFECT	7.36589616984955E-9	TEST	7.027497390309578E-9	DOCUMENTATION
// Don't resolve the node again.	WITHOUT_CLASSIFICATION	0.9998028577593212	WITHOUT_CLASSIFICATION	1.8516258266451568E-4	IMPLEMENTATION	5.745295867993704E-6	DESIGN	3.87052333351968E-6	DEFECT	1.246156735301235E-6	DOCUMENTATION	1.1176820773876288E-6	TEST
// for expected parameter type injection, we expect that the lhs represents // some form of property ref and that the children of the in-list represent // one-or-more params.	WITHOUT_CLASSIFICATION	0.9999948465284498	WITHOUT_CLASSIFICATION	5.1458809872993684E-6	DESIGN	4.983887039554103E-9	TEST	1.3099559708441733E-9	DOCUMENTATION	1.0854298692155446E-9	DEFECT	2.1129009630918445E-10	IMPLEMENTATION
// we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.9999983581707375	WITHOUT_CLASSIFICATION	1.6326698541930064E-6	DESIGN	3.973958355498184E-9	TEST	3.2982637403182712E-9	DOCUMENTATION	1.252641903322067E-9	IMPLEMENTATION	6.345442702697321E-10	DEFECT
// we have something like : "? [op] rhs"	WITHOUT_CLASSIFICATION	0.9719919685286816	WITHOUT_CLASSIFICATION	0.027391610704175597	DESIGN	4.939139953492013E-4	IMPLEMENTATION	6.257277416570043E-5	DEFECT	3.914206184176048E-5	TEST	2.0791935786077203E-5	DOCUMENTATION
// we have something like : "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.9956118422058498	WITHOUT_CLASSIFICATION	0.004206555520325634	DESIGN	8.502298452722017E-5	IMPLEMENTATION	6.307155954113607E-5	DEFECT	2.473979452931962E-5	TEST	8.767935226839342E-6	DOCUMENTATION
// we know only the rhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999997221047282	WITHOUT_CLASSIFICATION	2.5212331093936727E-7	DESIGN	2.2706030598326208E-8	IMPLEMENTATION	2.8200682273265617E-9	DOCUMENTATION	1.3434946086320268E-10	DEFECT	1.1151265090502869E-10	TEST
// handle the (assumed) valid cases: // #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.9994279912869248	WITHOUT_CLASSIFICATION	5.691502928124938E-4	DESIGN	2.7127422375473007E-6	DEFECT	8.333667396169717E-8	TEST	5.044094516335175E-8	IMPLEMENTATION	1.1900405979062136E-8	DOCUMENTATION
// one or the other needs to be a datetime for us to get into this method in the first place...	WITHOUT_CLASSIFICATION	0.6895556610677986	DESIGN	0.3104439637135106	WITHOUT_CLASSIFICATION	2.4162709908476247E-7	IMPLEMENTATION	7.114198784267813E-8	TEST	5.4544516607743216E-8	DEFECT	7.90508749735159E-9	DOCUMENTATION
// #3 - note that this is also true of "datetime - :param"...	WITHOUT_CLASSIFICATION	0.9990654382265443	WITHOUT_CLASSIFICATION	7.639319582698323E-4	DESIGN	1.4201247016678957E-4	DEFECT	2.4879802535952583E-5	IMPLEMENTATION	3.259010985181931E-6	TEST	4.785314979968487E-7	DOCUMENTATION
// #2	WITHOUT_CLASSIFICATION	0.9999973155528358	WITHOUT_CLASSIFICATION	1.2092901677709692E-6	DESIGN	1.166558571955141E-6	DEFECT	1.764943999030398E-7	IMPLEMENTATION	6.9241693320679E-8	DOCUMENTATION	6.286233136183426E-8	TEST
// Generate the inner join -- The elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.9999999269085141	WITHOUT_CLASSIFICATION	7.264944938409433E-8	DESIGN	1.5053687334179465E-10	IMPLEMENTATION	1.4046976445262204E-10	DEFECT	1.1832323947093465E-10	DOCUMENTATION	3.270664276870643E-11	TEST
// nothing to do	WITHOUT_CLASSIFICATION	0.99994604471815	WITHOUT_CLASSIFICATION	3.01350602388322E-5	IMPLEMENTATION	2.067275479890411E-5	DESIGN	2.042503906686816E-6	DEFECT	7.635990407240981E-7	DOCUMENTATION	3.4136386488564613E-7	TEST
// The 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.9999858153879826	WITHOUT_CLASSIFICATION	8.492992228537132E-6	DEFECT	3.4765486518129823E-6	DESIGN	2.202697934021531E-6	IMPLEMENTATION	1.0403000658041125E-8	TEST	1.9702023145156326E-9	DOCUMENTATION
// Add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.9999995444364651	WITHOUT_CLASSIFICATION	3.828448439872231E-7	IMPLEMENTATION	3.2600752242148074E-8	DOCUMENTATION	2.9759389729533728E-8	DESIGN	1.0078498211698184E-8	DEFECT	2.8005063557584604E-10	TEST
// Sometimes use the element table alias, sometimes use the... umm... collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.9999977248639892	WITHOUT_CLASSIFICATION	2.0214396057276015E-6	DESIGN	2.3481212738654844E-7	IMPLEMENTATION	1.155695095923448E-8	DEFECT	6.794006796279936E-9	DOCUMENTATION	5.333198021121575E-10	TEST
// Now, set the text for this node.  It should be the element columns.	WITHOUT_CLASSIFICATION	0.9987190253625451	WITHOUT_CLASSIFICATION	0.0012724608983466072	DESIGN	7.851822920467368E-6	IMPLEMENTATION	5.8907949395011E-7	TEST	6.769683033305756E-8	DEFECT	5.1398634547605935E-9	DOCUMENTATION
// Get the function return value type, based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.9999999770875847	WITHOUT_CLASSIFICATION	1.4885955200022227E-8	IMPLEMENTATION	6.806666772320692E-9	DESIGN	8.662046131486482E-10	DEFECT	3.257236135286489E-10	DOCUMENTATION	2.786514429193516E-11	TEST
// This will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.9999027269397689	WITHOUT_CLASSIFICATION	5.7808433001359E-5	DEFECT	2.40940866188846E-5	DESIGN	1.5067517471938914E-5	IMPLEMENTATION	1.697975942687148E-7	DOCUMENTATION	1.3322554459867518E-7	TEST
// mutation depends on the types of nodes invloved...	WITHOUT_CLASSIFICATION	0.9999927129840495	WITHOUT_CLASSIFICATION	6.313332934208205E-6	DEFECT	7.15500653974294E-7	DESIGN	2.3410433125812707E-7	IMPLEMENTATION	1.5409029321556433E-8	TEST	8.669001789581713E-9	DOCUMENTATION
// "pass along" our initial embedded parameter node(s) to the first generated // sql fragment so that it can be handled later for parameter binding...	WITHOUT_CLASSIFICATION	0.9971522895152958	WITHOUT_CLASSIFICATION	0.0028474368309640715	DESIGN	1.8786011198331485E-7	IMPLEMENTATION	5.125753148468781E-8	TEST	3.4138444064507905E-8	DEFECT	3.9765257445053903E-10	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999970457309348	WITHOUT_CLASSIFICATION	2.9307764593450997E-6	DESIGN	1.1981866186193773E-8	IMPLEMENTATION	9.803480292063567E-9	DEFECT	1.3481959273818754E-9	TEST	3.590633329821759E-10	DOCUMENTATION
// Generated select expressions are already resolved, nothing to do.	WITHOUT_CLASSIFICATION	0.9999998709572567	WITHOUT_CLASSIFICATION	7.779339236671535E-8	DESIGN	2.8321808738659997E-8	DEFECT	2.140098348639116E-8	IMPLEMENTATION	9.332190105873093E-10	TEST	5.933396477391727E-10	DOCUMENTATION
// The path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.9993532296971342	WITHOUT_CLASSIFICATION	6.464866866020014E-4	DESIGN	2.651926142634318E-7	DEFECT	1.2043794728570212E-8	DOCUMENTATION	4.945243699623653E-9	IMPLEMENTATION	1.434611193973774E-9	TEST
// The HQL class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.9999999396285872	WITHOUT_CLASSIFICATION	4.553923019212099E-8	DESIGN	1.4407083755511133E-8	DEFECT	2.5061169968211077E-10	DOCUMENTATION	1.5227130732939032E-10	IMPLEMENTATION	2.2215822410727005E-11	TEST
// Associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.99999992958236	WITHOUT_CLASSIFICATION	3.450936446402636E-8	DESIGN	2.8315801026673683E-8	IMPLEMENTATION	4.8964019175609E-9	TEST	1.791801906884962E-9	DOCUMENTATION	9.042707347233161E-10	DEFECT
// try the parent FromClause...	WITHOUT_CLASSIFICATION	0.9999634189703993	WITHOUT_CLASSIFICATION	2.7438905998704967E-5	IMPLEMENTATION	5.652682505781404E-6	DEFECT	3.3294093163037767E-6	DESIGN	1.1064919069998668E-7	DOCUMENTATION	4.938258914473982E-8	TEST
// Add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.9999994756555206	WITHOUT_CLASSIFICATION	4.2199858205001553E-7	DESIGN	4.868889277195091E-8	IMPLEMENTATION	4.5458524821206215E-8	DOCUMENTATION	5.706478758136153E-9	TEST	2.492000972547019E-9	DEFECT
// Make sure that all from elements registered with this FROM clause are actually in the AST.	WITHOUT_CLASSIFICATION	0.9999986292971327	WITHOUT_CLASSIFICATION	1.3694481515179889E-6	DESIGN	8.516576616424608E-10	IMPLEMENTATION	2.882555462202138E-10	DEFECT	5.786159564261682E-11	TEST	5.694090577898032E-11	DOCUMENTATION
// Invoke setScalarColumnText on each constructor argument.	WITHOUT_CLASSIFICATION	0.9999777158461265	WITHOUT_CLASSIFICATION	2.1764993265255178E-5	DESIGN	3.576682578443786E-7	IMPLEMENTATION	8.677863704396103E-8	DOCUMENTATION	7.001113985372708E-8	DEFECT	4.702573568500609E-9	TEST
// Collect the select expressions, skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.999999901614081	WITHOUT_CLASSIFICATION	8.606830219661577E-8	DESIGN	8.685813995599991E-9	DEFECT	3.3785971014695523E-9	IMPLEMENTATION	2.3834008895981533E-10	TEST	1.486567666334659E-11	DOCUMENTATION
// return an empty Type array	WITHOUT_CLASSIFICATION	0.9999727528808721	WITHOUT_CLASSIFICATION	2.720384844875705E-5	DESIGN	3.9849338782761626E-8	DEFECT	2.252985883627923E-9	DOCUMENTATION	7.538024058037E-10	TEST	4.1455195401246774E-10	IMPLEMENTATION
// Constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.9998809000653561	WITHOUT_CLASSIFICATION	1.1794165066879876E-4	DESIGN	6.711482142822808E-7	DEFECT	4.6727253642428364E-7	IMPLEMENTATION	1.2214557750169068E-8	DOCUMENTATION	7.648666721105832E-9	TEST
// this is the exception returned by ReflectHelper.getConstructor() if it cannot // locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.9999967012382288	WITHOUT_CLASSIFICATION	2.7135221120850096E-6	DESIGN	5.84523237979874E-7	DEFECT	6.751679244091802E-10	TEST	3.735090169454036E-11	IMPLEMENTATION	3.902436092107088E-12	DOCUMENTATION
// if there is no order by, make one	WITHOUT_CLASSIFICATION	0.9999949332332839	WITHOUT_CLASSIFICATION	2.3385919703375585E-6	DESIGN	1.978203269978151E-6	TEST	6.818124293319123E-7	IMPLEMENTATION	5.9193033579911E-8	DEFECT	8.966012875219518E-9	DOCUMENTATION
// Find the WHERE; if there is no WHERE, find the FROM...	WITHOUT_CLASSIFICATION	0.9999997092996268	WITHOUT_CLASSIFICATION	1.5169484309831162E-7	DESIGN	7.835563168651504E-8	TEST	3.527522955370751E-8	DEFECT	2.298365327469972E-8	IMPLEMENTATION	2.3910155392369423E-9	DOCUMENTATION
// Now, inject the newly built ORDER BY into the tree	WITHOUT_CLASSIFICATION	0.9999863330753519	WITHOUT_CLASSIFICATION	1.22912196707123E-5	DESIGN	5.749579519468207E-7	DEFECT	4.4479252318179486E-7	IMPLEMENTATION	2.6716040559095435E-7	DOCUMENTATION	8.879409669667412E-8	TEST
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999963463260856	WITHOUT_CLASSIFICATION	2.3895866569557914E-6	IMPLEMENTATION	1.1268325258439933E-6	DESIGN	7.0818727859285E-8	TEST	6.011654208139277E-8	DEFECT	6.319461666771164E-9	DOCUMENTATION
// logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.9999964429842629	WITHOUT_CLASSIFICATION	3.5275558266704613E-6	DESIGN	1.2918469995262369E-8	DEFECT	1.2704319433300882E-8	IMPLEMENTATION	3.2909558515485527E-9	TEST	5.46165125275277E-10	DOCUMENTATION
// Render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.999991568869393	WITHOUT_CLASSIFICATION	7.64625300030204E-6	DESIGN	7.522035476955347E-7	IMPLEMENTATION	1.8539455036761284E-8	TEST	1.1427063637059735E-8	DEFECT	2.7075401974618616E-9	DOCUMENTATION
// Class names in the FROM clause result in a JoinSequence (the old FromParser does this).	WITHOUT_CLASSIFICATION	0.999999367740555	WITHOUT_CLASSIFICATION	6.301428642385922E-7	DEFECT	1.5366489159044288E-9	DESIGN	2.9209356882303226E-10	TEST	2.8722064468397585E-10	DOCUMENTATION	6.17400459274341E-13	IMPLEMENTATION
// For many-to-many joins, use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.9999997086620878	WITHOUT_CLASSIFICATION	2.642254639716148E-7	DESIGN	2.6110096336157123E-8	IMPLEMENTATION	3.596406626569083E-10	TEST	3.3304249491637785E-10	DOCUMENTATION	3.0966878515543834E-10	DEFECT
// Otherwise, use the property mapping.	WITHOUT_CLASSIFICATION	0.9999994134849357	WITHOUT_CLASSIFICATION	3.5217094554860153E-7	IMPLEMENTATION	1.3386266757579804E-7	DESIGN	6.160595892781388E-8	DEFECT	2.2875151955869782E-8	DOCUMENTATION	1.6000340237430108E-8	TEST
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999774805777037	WITHOUT_CLASSIFICATION	1.2964995980584153E-5	DESIGN	9.336782199576727E-6	DEFECT	1.4254748663255394E-7	IMPLEMENTATION	4.399800356066133E-8	TEST	3.109862600868136E-8	DOCUMENTATION
// If the property is a special collection property name, return a CollectionPropertyMapping.	WITHOUT_CLASSIFICATION	0.9999918428189646	WITHOUT_CLASSIFICATION	7.331481291862297E-6	DEFECT	7.416304258815879E-7	IMPLEMENTATION	7.801672103226502E-8	DESIGN	3.1206536086950557E-9	DOCUMENTATION	2.931943200000521E-9	TEST
// Collection of components.	WITHOUT_CLASSIFICATION	0.9999608111727365	WITHOUT_CLASSIFICATION	3.912785577060719E-5	DESIGN	3.158436107265262E-8	DEFECT	1.3057016938127144E-8	IMPLEMENTATION	1.125724661611026E-8	DOCUMENTATION	5.072868243882077E-9	TEST
// make sure the lhs is "assignable"...	WITHOUT_CLASSIFICATION	0.99999983207228	WITHOUT_CLASSIFICATION	9.623776158594344E-8	DEFECT	3.581421190638121E-8	DESIGN	2.260205019755814E-8	TEST	1.2522285269560388E-8	IMPLEMENTATION	7.514109743969848E-10	DOCUMENTATION
// false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.9999114014658378	WITHOUT_CLASSIFICATION	8.44306275937838E-5	DESIGN	1.7999873804696271E-6	IMPLEMENTATION	1.7994790347460184E-6	DEFECT	3.636047896328684E-7	TEST	2.048353635887072E-7	DOCUMENTATION
// Register the FromElement with the FROM clause, now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.9999969196802424	WITHOUT_CLASSIFICATION	2.148596465163928E-6	DESIGN	8.82461785591347E-7	IMPLEMENTATION	2.8176544095361075E-8	TEST	2.013340741429128E-8	DEFECT	9.515552728629281E-10	DOCUMENTATION
// currently allowed...	WITHOUT_CLASSIFICATION	0.999862744021926	WITHOUT_CLASSIFICATION	5.5664236850793306E-5	DEFECT	5.149888473254437E-5	IMPLEMENTATION	2.899491138943641E-5	DESIGN	1.07231918075145E-6	DOCUMENTATION	2.5625920599969512E-8	TEST
// HHH-276 : implied joins in a subselect where clause - The destination needs to be added // to the destination's from clause. // Not sure if this is will fix everything, but it works.	WITHOUT_CLASSIFICATION	0.9915620958716407	DEFECT	0.006459601548437958	DESIGN	0.0019674943648234034	WITHOUT_CLASSIFICATION	1.0735965874326339E-5	TEST	7.178535546319672E-8	DOCUMENTATION	4.6386813919099126E-10	IMPLEMENTATION
//return classAlias == null ? className : classAlias;	WITHOUT_CLASSIFICATION	0.9651341854414351	WITHOUT_CLASSIFICATION	0.03474847773979839	DESIGN	1.1557579438310325E-4	DEFECT	7.599199478060261E-7	DOCUMENTATION	7.310860640568756E-7	IMPLEMENTATION	2.7001837148741293E-7	TEST
// This is an explicit FROM element.	WITHOUT_CLASSIFICATION	0.9999457234981889	WITHOUT_CLASSIFICATION	5.3863408812758815E-5	DESIGN	2.9904940692505637E-7	DEFECT	7.79209221210662E-8	TEST	2.1239912582988037E-8	IMPLEMENTATION	1.488275674826037E-8	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999963463260856	WITHOUT_CLASSIFICATION	2.3895866569557914E-6	IMPLEMENTATION	1.1268325258439933E-6	DESIGN	7.0818727859285E-8	TEST	6.011654208139277E-8	DEFECT	6.319461666771164E-9	DOCUMENTATION
// Fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.9999783733329607	WITHOUT_CLASSIFICATION	1.6296802104234016E-5	DESIGN	3.4415458055736247E-6	DEFECT	1.7389897090339538E-6	IMPLEMENTATION	1.244529465179341E-7	TEST	2.4876474021070672E-8	DOCUMENTATION
// If it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.9999963135551782	WITHOUT_CLASSIFICATION	3.3400703983413276E-6	IMPLEMENTATION	3.3645306674314317E-7	DEFECT	7.408832502214235E-9	TEST	1.9277902065933575E-9	DESIGN	5.847340257139412E-10	DOCUMENTATION
// Since this is an explicit FROM element, it can't be implied in the FROM clause.	WITHOUT_CLASSIFICATION	0.999938552686359	WITHOUT_CLASSIFICATION	6.13917941776633E-5	DESIGN	5.1819108989241365E-8	DEFECT	2.7436866484937507E-9	DOCUMENTATION	8.636527949935915E-10	TEST	9.301507015849923E-11	IMPLEMENTATION
// Do nothing, eplicit from elements are *always* in the projection list.	WITHOUT_CLASSIFICATION	0.9999513421522637	WITHOUT_CLASSIFICATION	4.85140949502919E-5	DESIGN	9.426863090179993E-8	DEFECT	3.51257787349949E-8	DOCUMENTATION	8.921928371464536E-9	IMPLEMENTATION	5.436448034581219E-9	TEST
// propertyName refers to something like collection.size...	WITHOUT_CLASSIFICATION	0.9995448820768532	WITHOUT_CLASSIFICATION	4.0897195705501244E-4	DEFECT	3.147859002552945E-5	DESIGN	1.2871214603733231E-5	IMPLEMENTATION	1.147550148873638E-6	TEST	6.486113136713999E-7	DOCUMENTATION
// property name is a sub-path of a component...	WITHOUT_CLASSIFICATION	0.999988257718194	WITHOUT_CLASSIFICATION	9.157494535281116E-6	DEFECT	2.5682846054619557E-6	DESIGN	1.2064780929690158E-8	TEST	2.8536104327904935E-9	IMPLEMENTATION	1.5842738223590523E-9	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9998384866425465	WITHOUT_CLASSIFICATION	1.5546599490627358E-4	IMPLEMENTATION	3.6373968336513937E-6	DESIGN	2.269321834101257E-6	DEFECT	1.2260315151799235E-7	DOCUMENTATION	1.804072789862481E-8	TEST
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9995825272879525	WITHOUT_CLASSIFICATION	4.1010829107914555E-4	DESIGN	5.966763451488479E-6	TEST	7.756863540901233E-7	DEFECT	5.950077214358506E-7	IMPLEMENTATION	2.696344134464767E-8	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999970457309348	WITHOUT_CLASSIFICATION	2.9307764593450997E-6	DESIGN	1.1981866186193773E-8	IMPLEMENTATION	9.803480292063567E-9	DEFECT	1.3481959273818754E-9	TEST	3.590633329821759E-10	DOCUMENTATION
// DotNode uses null here...	WITHOUT_CLASSIFICATION	0.978830413489223	WITHOUT_CLASSIFICATION	0.012783806743481224	DESIGN	0.006255419843418658	DEFECT	0.002075794732824153	IMPLEMENTATION	3.209126517090058E-5	TEST	2.2473925882129324E-5	DOCUMENTATION
// We represent a from-clause alias	WITHOUT_CLASSIFICATION	0.9999996782607253	WITHOUT_CLASSIFICATION	2.441582366104224E-7	IMPLEMENTATION	5.274135135078204E-8	DESIGN	2.1200619525124432E-8	DEFECT	3.049143059469004E-9	DOCUMENTATION	5.899239318686606E-10	TEST
// we are the LHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999999442618137	WITHOUT_CLASSIFICATION	5.111334359191977E-8	DESIGN	1.9971455750503196E-9	TEST	1.2596549283688231E-9	DOCUMENTATION	1.1529887314593177E-9	DEFECT	2.1505340617164976E-10	IMPLEMENTATION
// we are the RHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999999391189247	WITHOUT_CLASSIFICATION	5.339384128315292E-8	DESIGN	3.0045242063838524E-9	TEST	2.010262643650958E-9	DOCUMENTATION	1.2666922324065762E-9	DEFECT	1.2057549332572947E-9	IMPLEMENTATION
// we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.9999935654512025	WITHOUT_CLASSIFICATION	6.2592144944460065E-6	DESIGN	9.562671926976803E-8	DEFECT	6.206255019827274E-8	IMPLEMENTATION	1.224647570491996E-8	TEST	5.398557986726017E-9	DOCUMENTATION
// EARLY EXIT!!!  return so the resolve call explicitly coming from DotNode can // resolve this...	WITHOUT_CLASSIFICATION	0.9975637060044881	WITHOUT_CLASSIFICATION	0.002357237455840382	DESIGN	7.69356553253305E-5	DEFECT	1.5356097382944756E-6	DOCUMENTATION	4.5455690651690754E-7	IMPLEMENTATION	1.307177014026967E-7	TEST
// assume this ident's text does *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.999983377201636	WITHOUT_CLASSIFICATION	1.655807846091398E-5	DESIGN	3.851055002955451E-8	DEFECT	2.1500277691457578E-8	TEST	4.664164383143719E-9	DOCUMENTATION	4.491092377133379E-11	IMPLEMENTATION
// just ignore it for now, it'll get resolved later...	WITHOUT_CLASSIFICATION	0.9980782966729663	WITHOUT_CLASSIFICATION	0.0019081344970994297	DESIGN	1.0575038124848933E-5	DEFECT	2.1209089055138334E-6	IMPLEMENTATION	8.358027658328982E-7	TEST	3.708013790558494E-8	DOCUMENTATION
// This is not actually a constant, but a reference to FROM element.	WITHOUT_CLASSIFICATION	0.9967465147898628	WITHOUT_CLASSIFICATION	0.0032210772069093947	DESIGN	3.220605611756842E-5	DEFECT	1.9289036644742488E-7	IMPLEMENTATION	7.509714676347282E-9	DOCUMENTATION	1.5470291223681215E-9	TEST
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999999513125882	WITHOUT_CLASSIFICATION	4.6850718782007555E-8	DESIGN	1.8163630513202738E-9	DEFECT	1.183735303568003E-11	DOCUMENTATION	6.09777629476962E-12	TEST	2.394867894511954E-12	IMPLEMENTATION
// these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9999681357588628	WITHOUT_CLASSIFICATION	2.4084821213111942E-5	IMPLEMENTATION	7.353388319799481E-6	DESIGN	2.5647937359147086E-7	DOCUMENTATION	1.0464661058850641E-7	TEST	6.490562016893524E-8	DEFECT
// used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.9968902158194938	WITHOUT_CLASSIFICATION	0.003105825858868536	DESIGN	3.3876703118343327E-6	IMPLEMENTATION	3.970508371172184E-7	DOCUMENTATION	1.0592615036884814E-7	DEFECT	6.767433843732792E-8	TEST
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999738852423186	WITHOUT_CLASSIFICATION	2.6044161836876376E-5	DESIGN	5.7078666635202425E-8	DEFECT	1.1338737190608423E-8	DOCUMENTATION	1.875867850192507E-9	TEST	3.0257281864467503E-10	IMPLEMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999738852423186	WITHOUT_CLASSIFICATION	2.6044161836876376E-5	DESIGN	5.7078666635202425E-8	DEFECT	1.1338737190608423E-8	DOCUMENTATION	1.875867850192507E-9	TEST	3.0257281864467503E-10	IMPLEMENTATION
// naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.999977450766179	WITHOUT_CLASSIFICATION	2.2544007283910877E-5	DESIGN	4.037047639042867E-9	DEFECT	9.239207653349869E-10	TEST	1.693070528833384E-10	DOCUMENTATION	9.626143938300213E-11	IMPLEMENTATION
// this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9999990588859645	WITHOUT_CLASSIFICATION	4.6498762661075766E-7	DESIGN	4.0830348621047823E-7	IMPLEMENTATION	3.264008288216078E-8	DOCUMENTATION	1.8931903682724473E-8	TEST	1.625093602784873E-8	DEFECT
// do *not* over-write the column text, as that has already been // "rendered" during resolve	WITHOUT_CLASSIFICATION	0.9999996195507624	WITHOUT_CLASSIFICATION	3.406428582335986E-7	DESIGN	2.7078080466205526E-8	DEFECT	1.2016424379019637E-8	IMPLEMENTATION	5.649652230055176E-10	TEST	1.469093044516656E-10	DOCUMENTATION
// for some reason the antlr.CommonAST initialization routines force // this method to get called twice.  The first time with an empty string	WITHOUT_CLASSIFICATION	0.9997113816671167	WITHOUT_CLASSIFICATION	2.886055443775235E-4	DESIGN	1.1357818270873404E-8	TEST	1.1011515794695796E-9	IMPLEMENTATION	2.4006181188826463E-10	DEFECT	8.947412803745809E-11	DOCUMENTATION
// Look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.9999988029944838	WITHOUT_CLASSIFICATION	1.0797222839955422E-6	DESIGN	8.377642024905807E-8	IMPLEMENTATION	3.001016892662766E-8	DEFECT	2.3247618431162008E-9	TEST	1.1718810842777057E-9	DOCUMENTATION
// Add to the query spaces.	WITHOUT_CLASSIFICATION	0.9999705434808988	WITHOUT_CLASSIFICATION	2.6736236146520564E-5	DESIGN	1.6119797144691335E-6	IMPLEMENTATION	7.532315578672844E-7	DOCUMENTATION	3.1544163573318635E-7	DEFECT	3.963004677527633E-8	TEST
// If the from element isn't in the same clause, create a new from element.	WITHOUT_CLASSIFICATION	0.9999991618015859	WITHOUT_CLASSIFICATION	4.7080513473641706E-7	DESIGN	3.664441839685909E-7	DEFECT	7.722673834135365E-10	DOCUMENTATION	1.676020587066365E-10	TEST	9.225874520226972E-12	IMPLEMENTATION
// This is the root level node. // Generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.9999713075189341	WITHOUT_CLASSIFICATION	2.853601775504686E-5	DESIGN	1.362636577285872E-7	DEFECT	1.9424639013891245E-8	TEST	7.119722697196744E-10	DOCUMENTATION	6.304181476010761E-11	IMPLEMENTATION
// Correlated subqueries create 'special' implied from nodes // because correlated subselects can't use an ANSI-style join	WITHOUT_CLASSIFICATION	0.9999992986177865	WITHOUT_CLASSIFICATION	3.7657697000528964E-7	DESIGN	3.15905902093591E-7	DEFECT	3.85448459968836E-9	IMPLEMENTATION	2.8153456728432507E-9	TEST	2.2295110674819655E-9	DOCUMENTATION
// super-duper-classic-parser-regression-testing-mojo-magic...	WITHOUT_CLASSIFICATION	0.9998629043378399	WITHOUT_CLASSIFICATION	1.3638609269714302E-4	DESIGN	3.550781983276374E-7	DEFECT	3.2901716778500087E-7	TEST	1.946979652848313E-8	DOCUMENTATION	6.004300248713115E-9	IMPLEMENTATION
// A collection of entities...	WITHOUT_CLASSIFICATION	0.9998921815096047	WITHOUT_CLASSIFICATION	6.956219522834065E-5	DESIGN	3.0168606478155314E-5	DEFECT	7.632157365889267E-6	IMPLEMENTATION	3.6046080033368225E-7	DOCUMENTATION	9.50705226615855E-8	TEST
// A collection of components...	WITHOUT_CLASSIFICATION	0.9999990890304803	WITHOUT_CLASSIFICATION	3.470282294123647E-7	DESIGN	3.3356128584901223E-7	DEFECT	2.2163121513932926E-7	IMPLEMENTATION	6.0700670289900176E-9	DOCUMENTATION	2.6787221992023893E-9	TEST
// A collection of scalar elements...	WITHOUT_CLASSIFICATION	0.9999963745908985	WITHOUT_CLASSIFICATION	2.5782740643947892E-6	IMPLEMENTATION	7.753164639887193E-7	DEFECT	2.6036637620386424E-7	DESIGN	1.0389046592300324E-8	DOCUMENTATION	1.0631504438583849E-9	TEST
// according to both the ANSI-SQL and EJB3 specs, trim can either take // exactly one parameter or a variable number of parameters between 1 and 4. // from the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If only <trim specification> is omitted, BOTH is assumed; // if <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999999999672418	WITHOUT_CLASSIFICATION	3.219729418271E-11	DEFECT	2.1915698921154713E-13	TEST	1.9964200703478967E-13	DOCUMENTATION	7.371400668486983E-14	DESIGN	6.85352954077295E-14	IMPLEMENTATION
// Don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.9985742036601548	WITHOUT_CLASSIFICATION	8.959427679074854E-4	DESIGN	5.095715085586703E-4	IMPLEMENTATION	1.8518116458572923E-5	DEFECT	1.0197377580017404E-6	DOCUMENTATION	7.442091624627242E-7	TEST
// Treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.9999834093119448	WITHOUT_CLASSIFICATION	1.5137368637292915E-5	DESIGN	1.4347481763858314E-6	DEFECT	1.4748856569454714E-8	DOCUMENTATION	3.722118942064826E-9	TEST	1.002660245005114E-10	IMPLEMENTATION
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.9952998190276543	WITHOUT_CLASSIFICATION	0.004692091052432853	DESIGN	6.360956200076162E-6	DEFECT	1.4224989891302334E-6	TEST	2.777383377444606E-7	DOCUMENTATION	2.8726385939139514E-8	IMPLEMENTATION
// Create the FROM element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.9999999991857325	WITHOUT_CLASSIFICATION	7.261418633457676E-10	DESIGN	7.062753486882885E-11	IMPLEMENTATION	1.5041666468065484E-11	TEST	1.261628013639014E-12	DOCUMENTATION	1.194987786987044E-12	DEFECT
// If the join is implied, then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.9999998766440893	WITHOUT_CLASSIFICATION	7.710752663217742E-8	DEFECT	3.967085825379971E-8	DESIGN	5.1769153896357315E-9	IMPLEMENTATION	9.914121228986426E-10	TEST	4.091981758745287E-10	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999935489753967	WITHOUT_CLASSIFICATION	4.814608865717508E-6	IMPLEMENTATION	1.1126470527074986E-6	DESIGN	2.611632497615637E-7	DEFECT	2.5039091598603353E-7	DOCUMENTATION	1.221451902113938E-8	TEST
// The associated entity is implied, but it must be included in the FROM. // The collection alias is the role.	WITHOUT_CLASSIFICATION	0.9998597722593876	WITHOUT_CLASSIFICATION	1.3981640312500887E-4	DESIGN	2.2070192333354627E-7	TEST	1.6796427005205963E-7	DEFECT	1.7055203946336597E-8	IMPLEMENTATION	5.616090060499131E-9	DOCUMENTATION
// Tag this node as a JOIN. // Don't include subclasses in the join. // This is a clollection join.	WITHOUT_CLASSIFICATION	0.9999852171745379	WITHOUT_CLASSIFICATION	1.3398417488583376E-5	DEFECT	1.113986319152933E-6	DESIGN	2.1077941283781368E-7	IMPLEMENTATION	5.099917828519834E-8	DOCUMENTATION	8.643063301203465E-9	TEST
// Get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.9999908611007491	WITHOUT_CLASSIFICATION	9.048871396936144E-6	DESIGN	4.3822419311689144E-8	TEST	4.013571859039257E-8	DOCUMENTATION	4.524854734409574E-9	DEFECT	1.5448614813522368E-9	IMPLEMENTATION
//  origin, path, implied, columns, classAlias,	WITHOUT_CLASSIFICATION	0.9999974989669186	WITHOUT_CLASSIFICATION	1.1336704827238516E-6	DESIGN	7.288178153256691E-7	IMPLEMENTATION	5.971796653892845E-7	DEFECT	2.6123183878738966E-8	DOCUMENTATION	1.524193405718715E-8	TEST
/*implied*/	WITHOUT_CLASSIFICATION	0.9978976343882738	WITHOUT_CLASSIFICATION	0.0010996804322865057	IMPLEMENTATION	9.78714998203167E-4	DESIGN	1.2068985278775529E-5	DEFECT	7.770010944644857E-6	TEST	4.13118501326304E-6	DOCUMENTATION
// For implied many-to-many, just add the end join.	WITHOUT_CLASSIFICATION	0.9873337785492746	WITHOUT_CLASSIFICATION	0.012654127269935365	IMPLEMENTATION	9.213642566639508E-6	DESIGN	1.9786312464228474E-6	TEST	7.006560585849575E-7	DOCUMENTATION	2.0125091832906552E-7	DEFECT
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999935489753967	WITHOUT_CLASSIFICATION	4.814608865717508E-6	IMPLEMENTATION	1.1126470527074986E-6	DESIGN	2.611632497615637E-7	DEFECT	2.5039091598603353E-7	DOCUMENTATION	1.221451902113938E-8	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999935489753967	WITHOUT_CLASSIFICATION	4.814608865717508E-6	IMPLEMENTATION	1.1126470527074986E-6	DESIGN	2.611632497615637E-7	DEFECT	2.5039091598603353E-7	DOCUMENTATION	1.221451902113938E-8	TEST
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999424565465947	WITHOUT_CLASSIFICATION	4.774716973503218E-5	DEFECT	4.8150344789379784E-6	DESIGN	4.7495611317287574E-6	IMPLEMENTATION	1.3771158644348418E-7	DOCUMENTATION	9.397647300416729E-8	TEST
// This causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.9999895144989294	WITHOUT_CLASSIFICATION	1.0476748787418284E-5	DESIGN	8.350483941229543E-9	DEFECT	3.1381460728402994E-10	DOCUMENTATION	7.721790971604866E-11	TEST	1.0766827391948965E-11	IMPLEMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9998122688663734	WITHOUT_CLASSIFICATION	1.8515317211251044E-4	DESIGN	1.9099492781664356E-6	DEFECT	4.359796951376006E-7	TEST	2.1198750994641543E-7	DOCUMENTATION	2.0045030785573575E-8	IMPLEMENTATION
// Frontbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999691677268467	WITHOUT_CLASSIFICATION	2.4772450220885254E-5	DEFECT	5.097651209328323E-6	DESIGN	6.699485430355692E-7	IMPLEMENTATION	2.760863632062554E-7	DOCUMENTATION	1.6136816790283313E-8	TEST
/*	WITHOUT_CLASSIFICATION	0.9335139475304616	WITHOUT_CLASSIFICATION	0.057420572938627165	DESIGN	0.005812814405640206	DEFECT	0.0029924136177781986	IMPLEMENTATION	1.5574926612179705E-4	DOCUMENTATION	1.0450224137110372E-4	TEST
/*public Type[] getSqlResultTypes() {	WITHOUT_CLASSIFICATION	0.5614155951345591	WITHOUT_CLASSIFICATION	0.4381627146618835	DESIGN	3.6005660306422896E-4	DEFECT	3.0440398427067607E-5	DOCUMENTATION	2.6858950717214097E-5	TEST	4.3342513488273516E-6	IMPLEMENTATION
// First, collect all of the select expressions. // NOTE: This must be done *before* invoking setScalarColumnText() because setScalarColumnText() // changes the AST!!!	WITHOUT_CLASSIFICATION	0.9990793992154865	WITHOUT_CLASSIFICATION	8.968581501366368E-4	IMPLEMENTATION	1.810345799803118E-5	DEFECT	5.582140178822083E-6	DESIGN	5.5629043561093396E-8	TEST	1.4071564755720262E-9	DOCUMENTATION
// First allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.9636112137308795	WITHOUT_CLASSIFICATION	0.03613813658415413	IMPLEMENTATION	2.504660509718232E-4	DESIGN	1.627975463820051E-7	DEFECT	1.6104380935394003E-8	DOCUMENTATION	4.732067342328768E-9	TEST
//sqlResultTypeList.addAll( constructorArgumentTypeList );	WITHOUT_CLASSIFICATION	0.9998507116894385	WITHOUT_CLASSIFICATION	1.0051244034447421E-4	IMPLEMENTATION	4.325406050279419E-5	DESIGN	3.523251272545107E-6	DEFECT	1.1091508785769065E-6	TEST	8.894075631221679E-7	DOCUMENTATION
// If the data type is not an association type, it could not have been in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999989556393775	WITHOUT_CLASSIFICATION	1.0125010114215384E-6	DESIGN	2.549915537654995E-8	DEFECT	3.15508426407533E-9	IMPLEMENTATION	2.8067374065783256E-9	TEST	3.9863411478952847E-10	DOCUMENTATION
//sqlResultTypeList.add( type );	WITHOUT_CLASSIFICATION	0.9999296753275154	WITHOUT_CLASSIFICATION	5.54601351805892E-5	DESIGN	1.0450663208337381E-5	DEFECT	2.0845187737767363E-6	IMPLEMENTATION	2.028827076489639E-6	TEST	3.0052824530879416E-7	DOCUMENTATION
// Always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.9998709259311793	WITHOUT_CLASSIFICATION	6.640583787525371E-5	DESIGN	6.18620808867338E-5	IMPLEMENTATION	6.270758647122951E-7	DEFECT	1.7481265843142267E-7	DOCUMENTATION	4.261535544076259E-9	TEST
// add the fetched entities	WITHOUT_CLASSIFICATION	0.9999962011427231	WITHOUT_CLASSIFICATION	2.9246631284328836E-6	DESIGN	7.248616030901396E-7	IMPLEMENTATION	1.1857368422597868E-7	DOCUMENTATION	1.7566175860977055E-8	TEST	1.3192685201126431E-8	DEFECT
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999999308926316	WITHOUT_CLASSIFICATION	4.9968741523990366E-8	DESIGN	6.647226505522108E-9	DEFECT	4.860597857779957E-9	IMPLEMENTATION	4.7026817495844736E-9	DOCUMENTATION	2.9281207825330733E-9	TEST
// function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9987181560021408	WITHOUT_CLASSIFICATION	0.001255094927634615	IMPLEMENTATION	2.190488437345907E-5	DESIGN	3.3313795913523066E-6	DEFECT	1.330960124418448E-6	DOCUMENTATION	1.8184613537152084E-7	TEST
// If there are any scalars (non-entities) selected, render the select column aliases.	WITHOUT_CLASSIFICATION	0.9999999518940238	WITHOUT_CLASSIFICATION	4.1597102795847505E-8	IMPLEMENTATION	3.692448622814308E-9	DEFECT	2.3158660947838853E-9	DESIGN	3.291088985150303E-10	TEST	1.714498853578353E-10	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9998017311126484	WITHOUT_CLASSIFICATION	1.4772474102573596E-4	DEFECT	4.224388338723287E-5	DESIGN	5.477395409688983E-6	TEST	1.7037787613612816E-6	IMPLEMENTATION	1.1190887677120951E-6	DOCUMENTATION
/*ArrayList sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999944914323974	WITHOUT_CLASSIFICATION	4.813335766923773E-6	DEFECT	3.838469715070292E-7	IMPLEMENTATION	1.8398937326639096E-7	TEST	1.0905324048456525E-7	DESIGN	1.8342250454127305E-8	DOCUMENTATION
//sqlResultTypes = ( Type[] ) sqlResultTypeList.toArray( new Type[sqlResultTypeList.size()] );	WITHOUT_CLASSIFICATION	0.9999973332611976	WITHOUT_CLASSIFICATION	1.5625237706735751E-6	DEFECT	9.062427086470886E-7	DESIGN	9.981813280657991E-8	IMPLEMENTATION	8.998397259630091E-8	TEST	8.170217609389239E-9	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999908441075187	WITHOUT_CLASSIFICATION	7.532681941060971E-5	IMPLEMENTATION	9.940272179900468E-6	DEFECT	5.763444577082875E-6	DESIGN	4.592938902158896E-7	DOCUMENTATION	6.909475510243681E-8	TEST
//TODO:	WITHOUT_CLASSIFICATION	0.9913955352446278	WITHOUT_CLASSIFICATION	0.00506260978239246	DESIGN	0.002571978255705461	IMPLEMENTATION	3.751760773059287E-4	DEFECT	3.1776129270186894E-4	DOCUMENTATION	2.7693934726640186E-4	TEST
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999973105959835	WITHOUT_CLASSIFICATION	2.6060718819042452E-6	DESIGN	6.174756197615604E-8	IMPLEMENTATION	1.0695413161789709E-8	DEFECT	7.60372731792919E-9	DOCUMENTATION	3.285432114638332E-9	TEST
// Generate an 2d array of column names, the first dimension is parallel with the // return types array.  The second dimension is the list of column names for each // type.	WITHOUT_CLASSIFICATION	0.9999999984380596	WITHOUT_CLASSIFICATION	1.2452467081234256E-9	DESIGN	2.9223169420789664E-10	DEFECT	1.5672515671176863E-11	IMPLEMENTATION	8.67061582753707E-12	TEST	1.1863932383262223E-13	DOCUMENTATION
// Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999997153116944	WITHOUT_CLASSIFICATION	1.5928610986119985E-7	IMPLEMENTATION	1.089710080935497E-7	DEFECT	1.0817777729940214E-8	DESIGN	4.813306568169187E-9	TEST	8.001033127877181E-10	DOCUMENTATION
// union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997960215657137	WITHOUT_CLASSIFICATION	1.5932659556161313E-4	DESIGN	3.986726988206029E-5	IMPLEMENTATION	4.309814055229261E-6	DEFECT	3.4832889307052836E-7	DOCUMENTATION	1.2642589431937826E-7	TEST
// Skip 'DISTINCT' and 'ALL', so we return the first expression node.	WITHOUT_CLASSIFICATION	0.9999969895796639	WITHOUT_CLASSIFICATION	1.6692719469244864E-6	IMPLEMENTATION	1.3065996571581172E-6	DESIGN	2.6231859315601694E-8	DEFECT	7.627528893625512E-9	DOCUMENTATION	6.893438376016065E-10	TEST
// Create SQL_TOKEN nodes for the columns.	WITHOUT_CLASSIFICATION	0.999996498958901	WITHOUT_CLASSIFICATION	3.4632376993565596E-6	DESIGN	2.7847277223965983E-8	TEST	4.653733119225927E-9	DEFECT	4.071039088846995E-9	DOCUMENTATION	1.2313503003258934E-9	IMPLEMENTATION
// Generate the property select tokens.	WITHOUT_CLASSIFICATION	0.999999115894839	WITHOUT_CLASSIFICATION	5.325785553725817E-7	DESIGN	2.7257558940381196E-7	DEFECT	3.0710396119107525E-8	TEST	3.0156832417751424E-8	IMPLEMENTATION	1.808378780505577E-8	DOCUMENTATION
// Get the function name node.	WITHOUT_CLASSIFICATION	0.9999958373821975	WITHOUT_CLASSIFICATION	3.2906715663437947E-6	IMPLEMENTATION	6.776841706655844E-7	DESIGN	1.0122838049799641E-7	DOCUMENTATION	7.49906509144234E-8	DEFECT	1.804303403380892E-8	TEST
// Method expressions in a SELECT should always be considered scalar.	WITHOUT_CLASSIFICATION	0.9997678950238921	WITHOUT_CLASSIFICATION	2.2499793363396257E-4	DESIGN	6.929373469885953E-6	DEFECT	1.7046166058875952E-7	IMPLEMENTATION	6.017645360080702E-9	DOCUMENTATION	1.1896982910046203E-9	TEST
// If this is 'elements' then create a new FROM element.	WITHOUT_CLASSIFICATION	0.9999994532390734	WITHOUT_CLASSIFICATION	4.3075373805476886E-7	DESIGN	9.44315861321273E-8	DEFECT	1.9828897852108784E-8	TEST	1.3168321773267122E-9	DOCUMENTATION	4.2987255336804673E-10	IMPLEMENTATION
// Not elements(x)	WITHOUT_CLASSIFICATION	0.9998051179343418	WITHOUT_CLASSIFICATION	1.1020663784088435E-4	DESIGN	7.9317463869108E-5	IMPLEMENTATION	4.438158830168108E-6	DEFECT	6.326608218254358E-7	TEST	2.871442964374002E-7	DOCUMENTATION
// Dialect function	WITHOUT_CLASSIFICATION	0.9999896706040927	WITHOUT_CLASSIFICATION	6.845848499920103E-6	IMPLEMENTATION	2.224951831674884E-6	DEFECT	1.122402791349582E-6	DESIGN	1.1845051221730585E-7	DOCUMENTATION	1.7742271989938E-8	TEST
// Collection 'property function'	WITHOUT_CLASSIFICATION	0.9999801051911239	WITHOUT_CLASSIFICATION	1.7237247915995094E-5	DEFECT	2.545599352491312E-6	DESIGN	5.679994496756211E-8	DOCUMENTATION	4.6009515548411436E-8	IMPLEMENTATION	9.15214712597049E-9	TEST
// If the constant is an IDENT, figure out what it means...	WITHOUT_CLASSIFICATION	0.9999434497913073	WITHOUT_CLASSIFICATION	3.740060061730237E-5	DESIGN	1.7834138644123647E-5	DEFECT	8.579736845805316E-7	IMPLEMENTATION	4.3109307488655467E-7	TEST	2.6402671753711578E-8	DOCUMENTATION
// IDENT is a class alias in the FROM.	WITHOUT_CLASSIFICATION	0.9999999008481574	WITHOUT_CLASSIFICATION	8.561129176417006E-8	DESIGN	1.112399741271546E-8	DEFECT	9.67170541123164E-10	IMPLEMENTATION	8.085555006415526E-10	DOCUMENTATION	6.408274255955285E-10	TEST
// Resolve to an identity column.	WITHOUT_CLASSIFICATION	0.9916868171140453	WITHOUT_CLASSIFICATION	0.008305168689722305	DESIGN	5.285118893856603E-6	DEFECT	1.1322475708450137E-6	IMPLEMENTATION	1.027374475250988E-6	DOCUMENTATION	5.694552924688655E-7	TEST
// Otherwise, it's a literal.	WITHOUT_CLASSIFICATION	0.9999786157510415	WITHOUT_CLASSIFICATION	1.707458208519989E-5	DESIGN	4.192540003112119E-6	IMPLEMENTATION	9.569495291320285E-8	TEST	1.1240216110244618E-8	DOCUMENTATION	1.0191701210288675E-8	DEFECT
// the name of an entity class	WITHOUT_CLASSIFICATION	0.9998430539975833	WITHOUT_CLASSIFICATION	1.5551900246797844E-4	DESIGN	9.614804329622815E-7	DEFECT	3.8264714794971725E-7	DOCUMENTATION	6.015692360427148E-8	TEST	2.2715444033650814E-8	IMPLEMENTATION
//the class discriminator value	WITHOUT_CLASSIFICATION	0.9999845953511348	WITHOUT_CLASSIFICATION	1.526567350259029E-5	DESIGN	1.1658721584407424E-7	DEFECT	1.8821435560425162E-8	DOCUMENTATION	3.440857871891081E-9	TEST	1.2585330756007822E-10	IMPLEMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.999998115561389	WITHOUT_CLASSIFICATION	1.4408416341880651E-6	TEST	1.755652121428839E-7	DEFECT	1.5752681298561252E-7	IMPLEMENTATION	9.548460565771075E-8	DESIGN	1.502034609731207E-8	DOCUMENTATION
// Add a space before the display text.	WITHOUT_CLASSIFICATION	0.9999988718600137	WITHOUT_CLASSIFICATION	1.0585357862102784E-6	IMPLEMENTATION	3.094754933463964E-8	DEFECT	2.7692003185273272E-8	DESIGN	8.224786706092406E-9	DOCUMENTATION	2.7398608708850837E-9	TEST
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999997244186072	WITHOUT_CLASSIFICATION	2.5861197423797854E-7	IMPLEMENTATION	6.679012354920405E-9	DESIGN	4.722467292750142E-9	DEFECT	3.5386097665370734E-9	DOCUMENTATION	2.0293291498747833E-9	TEST
// child == parent.getFirstChild()	WITHOUT_CLASSIFICATION	0.9999677069186333	WITHOUT_CLASSIFICATION	3.2237665200263074E-5	IMPLEMENTATION	3.6071951454329376E-8	DEFECT	1.3204875279764479E-8	DESIGN	3.494950621723439E-9	DOCUMENTATION	2.644388939482355E-9	TEST
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999997244186072	WITHOUT_CLASSIFICATION	2.5861197423797854E-7	IMPLEMENTATION	6.679012354920405E-9	DESIGN	4.722467292750142E-9	DEFECT	3.5386097665370734E-9	DOCUMENTATION	2.0293291498747833E-9	TEST
// Filter conditions need to be inserted before the HQL where condition and the // theta join node.  This is because org.hibernate.loader.Loader binds the filter parameters first, // then it binds all the HQL query parameters, see org.hibernate.loader.Loader.processFilterParameters().	WITHOUT_CLASSIFICATION	0.999999509163214	WITHOUT_CLASSIFICATION	3.787791620586198E-7	DESIGN	9.136860091046492E-8	DEFECT	1.7784852686211757E-8	IMPLEMENTATION	1.9668920023811625E-9	TEST	9.372784462339666E-10	DOCUMENTATION
// Put the FILTERS node before the HQL condition and theta joins	WITHOUT_CLASSIFICATION	0.9999934627739764	WITHOUT_CLASSIFICATION	5.2964923054502806E-6	DESIGN	9.117466162586861E-7	IMPLEMENTATION	2.6327358469195946E-7	DEFECT	6.198145781861292E-8	DOCUMENTATION	3.732059421944792E-9	TEST
// add the current fragment to the FILTERS node	WITHOUT_CLASSIFICATION	0.9999399738182512	WITHOUT_CLASSIFICATION	5.089853973961919E-5	IMPLEMENTATION	4.76611518719215E-6	DESIGN	4.1159701687754174E-6	DOCUMENTATION	1.481004756130638E-7	DEFECT	9.745617753799676E-8	TEST
// Create a new THETA_JOINS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999998224049577	WITHOUT_CLASSIFICATION	1.1436414123700423E-7	IMPLEMENTATION	5.721580458192868E-8	DESIGN	5.4532009383451365E-9	DEFECT	3.5574880924445345E-10	TEST	2.0614678556414915E-10	DOCUMENTATION
// Put the THETA_JOINS node before the HQL condition, after the filters.	WITHOUT_CLASSIFICATION	0.9999972918959638	WITHOUT_CLASSIFICATION	2.1835760648371804E-6	DESIGN	4.313021986098676E-7	IMPLEMENTATION	7.423236136185295E-8	DEFECT	1.2604439658876288E-8	TEST	6.3889715978492975E-9	DOCUMENTATION
// add the current fragment to the THETA_JOINS node	WITHOUT_CLASSIFICATION	0.9999875820742505	WITHOUT_CLASSIFICATION	1.0622816114328253E-5	IMPLEMENTATION	1.3283743731384392E-6	DOCUMENTATION	4.194470884445148E-7	DESIGN	2.737567203227961E-8	TEST	1.991250147190069E-8	DEFECT
// First, try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.9999983017679417	WITHOUT_CLASSIFICATION	1.4977303761677434E-6	DESIGN	8.622369496876145E-8	IMPLEMENTATION	6.699991404519798E-8	DEFECT	3.88257496408213E-8	TEST	8.452323474402111E-9	DOCUMENTATION
// unable to locate it using this name	WITHOUT_CLASSIFICATION	0.9997445256859322	WITHOUT_CLASSIFICATION	2.5482474218699704E-4	DESIGN	4.696598560581501E-7	TEST	1.43695223839312E-7	DEFECT	2.107741580546688E-8	IMPLEMENTATION	1.5139385122720967E-8	DOCUMENTATION
// If that didn't work, try using the 'import' name.	WITHOUT_CLASSIFICATION	0.9992523717017587	WITHOUT_CLASSIFICATION	6.418507742028435E-4	DEFECT	1.0526446458574223E-4	DESIGN	3.543163277731809E-7	TEST	1.0155150953203455E-7	DOCUMENTATION	5.7191615402406255E-8	IMPLEMENTATION
// Implicit joins use theta style (WHERE pk = fk), explicit joins use JOIN (after from)	WITHOUT_CLASSIFICATION	0.999998968005775	WITHOUT_CLASSIFICATION	7.639187183057051E-7	IMPLEMENTATION	2.31129754317538E-7	DESIGN	3.1666721290938727E-8	DEFECT	2.8002891998925035E-9	TEST	2.4787420347527794E-9	DOCUMENTATION
// locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.9999998372977871	WITHOUT_CLASSIFICATION	9.498856069755977E-8	IMPLEMENTATION	5.342592896755001E-8	DESIGN	6.2074153519756926E-9	TEST	5.637647435818661E-9	DEFECT	2.442660492798177E-9	DOCUMENTATION
// determine the type of the first argument...	WITHOUT_CLASSIFICATION	0.9999607701785073	WITHOUT_CLASSIFICATION	3.867749298004718E-5	DESIGN	3.7224135641541513E-7	DEFECT	8.859561102118054E-8	DOCUMENTATION	6.198974861760383E-8	IMPLEMENTATION	2.950179651972401E-8	TEST
// Use the DOT node to emit the first column name. // Create the column names, folled by the column aliases.	WITHOUT_CLASSIFICATION	0.9999999714992672	WITHOUT_CLASSIFICATION	1.7493834615239818E-8	DESIGN	6.015635110723256E-9	IMPLEMENTATION	3.8157641611356826E-9	TEST	1.068016321604819E-9	DEFECT	1.0748261507106197E-10	DOCUMENTATION
// Note: this simply constructs a "raw" SQL_TOKEN representing the // where fragment and injects this into the tree.  This "works"; // however it is probably not the best long-term solution. // // At some point we probably want to apply an additional grammar to // properly tokenize this where fragment into constituent parts // focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.9998160501370416	DESIGN	1.752429294308262E-4	WITHOUT_CLASSIFICATION	6.951391136903128E-6	DEFECT	1.6821980847857285E-6	TEST	4.213020311825029E-8	IMPLEMENTATION	3.1214102731288036E-8	DOCUMENTATION
// Append the text of the current node.	WITHOUT_CLASSIFICATION	0.9999624555272255	WITHOUT_CLASSIFICATION	2.4443031022752936E-5	IMPLEMENTATION	1.1757455487399206E-5	DEFECT	6.452404873471748E-7	DOCUMENTATION	5.505157139542094E-7	DESIGN	1.482300628244304E-7	TEST
// If the node has a first child, recurse into the first child.	WITHOUT_CLASSIFICATION	0.9999999165273147	WITHOUT_CLASSIFICATION	7.805306418071174E-8	IMPLEMENTATION	3.73866968154626E-9	DESIGN	1.4574873240128926E-9	DEFECT	1.1209039200733617E-10	DOCUMENTATION	1.1137355852901797E-10	TEST
// If there is a second child (RHS), recurse into that child.	WITHOUT_CLASSIFICATION	0.9999339516183308	WITHOUT_CLASSIFICATION	6.56659301186796E-5	DESIGN	2.2555740135635842E-7	IMPLEMENTATION	1.4389992886119562E-7	DEFECT	7.378300060936556E-9	TEST	5.615920314057825E-9	DOCUMENTATION
// Iterate through the alias,JoinSequence pairs and generate SQL token nodes.	WITHOUT_CLASSIFICATION	0.9999972443378574	WITHOUT_CLASSIFICATION	2.7424784348813686E-6	DESIGN	9.511864800264538E-9	DEFECT	2.108434257629007E-9	DOCUMENTATION	1.475128875648597E-9	TEST	8.827971542295242E-11	IMPLEMENTATION
// If the from element represents a JOIN_FRAGMENT and it is // a theta-style join, convert its type from JOIN_FRAGMENT // to FROM_FRAGMENT	WITHOUT_CLASSIFICATION	0.9999999421029943	WITHOUT_CLASSIFICATION	5.308770568531736E-8	DESIGN	2.231949462374277E-9	DEFECT	1.8007822530959618E-9	IMPLEMENTATION	7.616148891165634E-10	TEST	1.4953395819571125E-11	DOCUMENTATION
// this is used during SqlGenerator processing	WITHOUT_CLASSIFICATION	0.9995846614178893	WITHOUT_CLASSIFICATION	4.150902863662775E-4	DESIGN	1.2639099288781283E-7	TEST	9.014247351967316E-8	DEFECT	2.6489608152067248E-8	DOCUMENTATION	5.272669853700386E-9	IMPLEMENTATION
// If there is a FROM fragment and the FROM element is an explicit, then add the from part.	WITHOUT_CLASSIFICATION	0.9999918156780107	WITHOUT_CLASSIFICATION	7.919603150332427E-6	DESIGN	1.3479630959087154E-7	DEFECT	1.1593331529902377E-7	TEST	8.489158208629897E-9	IMPLEMENTATION	5.50005578198671E-9	DOCUMENTATION
/*&& StringHelper.isNotEmpty( frag )*/	WITHOUT_CLASSIFICATION	0.99984633656394	WITHOUT_CLASSIFICATION	8.626967370378405E-5	DESIGN	6.029053480510166E-5	IMPLEMENTATION	6.108273962149677E-6	DEFECT	6.358711057657742E-7	TEST	3.5908248310331665E-7	DOCUMENTATION
// The FROM fragment will probably begin with ', '.  Remove this if it is present.	WITHOUT_CLASSIFICATION	0.9933859582625676	WITHOUT_CLASSIFICATION	0.0063071858685968445	DESIGN	2.67707993931674E-4	DEFECT	3.832385537211076E-5	TEST	5.214923310652975E-7	DOCUMENTATION	3.0252720057338503E-7	IMPLEMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999497647748473	WITHOUT_CLASSIFICATION	4.941767242031781E-5	DESIGN	6.090349134093572E-7	IMPLEMENTATION	2.074025102114363E-7	DEFECT	9.345867616375672E-10	TEST	1.8072204012521037E-10	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person ORDER BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999989401524928	WITHOUT_CLASSIFICATION	8.660702126471776E-7	IMPLEMENTATION	8.225137718725472E-8	DEFECT	6.846794915799536E-8	DESIGN	3.159917144473302E-8	TEST	1.14587968166489E-8	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9978639708133765	WITHOUT_CLASSIFICATION	0.0016675714161208477	DESIGN	4.6767211001145934E-4	DEFECT	7.355130168509441E-7	TEST	5.0018050981480437E-8	DOCUMENTATION	1.2942332935968936E-10	IMPLEMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9996090934229556	WITHOUT_CLASSIFICATION	3.72701958490755E-4	DESIGN	1.2286364529298617E-5	DEFECT	4.4610898579850835E-6	IMPLEMENTATION	1.0990862961023917E-6	TEST	3.580778704453078E-7	DOCUMENTATION
//default mode	WITHOUT_CLASSIFICATION	0.9999903032150101	WITHOUT_CLASSIFICATION	7.840891718838E-6	DESIGN	1.2247637997122916E-6	IMPLEMENTATION	4.357786147620219E-7	DEFECT	1.1493813765908126E-7	DOCUMENTATION	8.041271883483737E-8	TEST
//QueryJoinFragment join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999995972073498	WITHOUT_CLASSIFICATION	1.851393179799525E-7	IMPLEMENTATION	1.796308032344211E-7	DESIGN	2.7748266721684108E-8	DOCUMENTATION	6.9127613438153174E-9	DEFECT	3.3615009887301083E-9	TEST
//reset the dotcount (but not the path) //after reset!	WITHOUT_CLASSIFICATION	0.9999687764502978	WITHOUT_CLASSIFICATION	3.0516281480020635E-5	DEFECT	3.883574785653824E-7	IMPLEMENTATION	1.5620507088690348E-7	TEST	1.3930921120434778E-7	DESIGN	2.3396461377491715E-8	DOCUMENTATION
//after reset!	WITHOUT_CLASSIFICATION	0.9999900775559344	WITHOUT_CLASSIFICATION	6.41986686567635E-6	DEFECT	2.2363564658444205E-6	IMPLEMENTATION	7.636926277378049E-7	DESIGN	3.971263787240109E-7	TEST	1.0540172767693858E-7	DOCUMENTATION
// we don't need to worry about any condition in the ON clause // here (toFromFragmentString), since anything in the ON condition // is already applied to the whole query	WITHOUT_CLASSIFICATION	0.9926889606545999	WITHOUT_CLASSIFICATION	0.005403056681395916	DESIGN	0.0015422982172696796	DEFECT	2.3010886466053596E-4	IMPLEMENTATION	1.305630362256666E-4	DOCUMENTATION	5.012545848251955E-6	TEST
// bit_length feels a bit broken to me. We have to cast to char in order to // pass when a numeric value is supplied. But of course the answers given will // be wildly different for these two datatypes. 1234.5678 will be 9 bytes as // a char string but will be 8 or 16 bytes as a true numeric. // Jay Nance 2006-09-22	WITHOUT_CLASSIFICATION	0.8555875360361097	WITHOUT_CLASSIFICATION	0.1443920385734037	DESIGN	1.9012706909468296E-5	DEFECT	1.0482844012896197E-6	TEST	3.065694487911384E-7	IMPLEMENTATION	5.782972700164781E-8	DOCUMENTATION
// dotcount>=2	WITHOUT_CLASSIFICATION	0.9999869291990091	WITHOUT_CLASSIFICATION	1.1568544646632677E-5	DEFECT	1.1724154082061504E-6	DESIGN	1.9904194312004267E-7	IMPLEMENTATION	1.0684297426963897E-7	DOCUMENTATION	2.3956018786069808E-8	TEST
// Do the corresponding RHS	WITHOUT_CLASSIFICATION	0.9999252329362351	WITHOUT_CLASSIFICATION	5.264547228122282E-5	DEFECT	1.1022328923016877E-5	DESIGN	7.4747364981894E-6	IMPLEMENTATION	2.882047404433329E-6	DOCUMENTATION	7.424786579160459E-7	TEST
//if its "id"	WITHOUT_CLASSIFICATION	0.9999830230358969	WITHOUT_CLASSIFICATION	1.1984267481736524E-5	DESIGN	2.3693396531879232E-6	DEFECT	2.031000998886749E-6	IMPLEMENTATION	4.451414344430226E-7	TEST	1.472145347753261E-7	DOCUMENTATION
//or its the id property name	WITHOUT_CLASSIFICATION	0.9996180175073366	WITHOUT_CLASSIFICATION	3.736406478795562E-4	DESIGN	7.107552430553248E-6	DEFECT	6.123207469692198E-7	DOCUMENTATION	6.026511303182204E-7	TEST	1.9320476008687097E-8	IMPLEMENTATION
//join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999997980410003	WITHOUT_CLASSIFICATION	1.158947603666244E-7	IMPLEMENTATION	5.6930311224220054E-8	DESIGN	1.9951192458530036E-8	DOCUMENTATION	7.1783877749065226E-9	DEFECT	2.0043478167716566E-9	TEST
//important!!	WITHOUT_CLASSIFICATION	0.9997033448220095	WITHOUT_CLASSIFICATION	1.6360224552135655E-4	DESIGN	9.61399156469184E-5	DEFECT	2.8671608029621576E-5	IMPLEMENTATION	6.272210960595093E-6	DOCUMENTATION	1.9691978319850498E-6	TEST
//String[] keyCols = collPersister.getKeyColumnNames();	WITHOUT_CLASSIFICATION	0.9999974711487795	WITHOUT_CLASSIFICATION	1.947101490041273E-6	DESIGN	3.665079038015147E-7	DEFECT	1.3404176651504143E-7	IMPLEMENTATION	7.503564943392171E-8	TEST	6.164410626941376E-9	DOCUMENTATION
// an association	WITHOUT_CLASSIFICATION	0.9999988556381262	WITHOUT_CLASSIFICATION	6.751289539689841E-7	DESIGN	2.36534479789704E-7	DOCUMENTATION	1.3013942519589043E-7	TEST	9.747973292188978E-8	DEFECT	5.079281871161467E-9	IMPLEMENTATION
//allow index() function:	WITHOUT_CLASSIFICATION	0.9999664934592423	WITHOUT_CLASSIFICATION	1.9741931602710193E-5	DEFECT	1.2517048495890266E-5	IMPLEMENTATION	9.654558577000149E-7	DESIGN	2.407999507967942E-7	DOCUMENTATION	4.1304850679583107E-8	TEST
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9989925975668235	WITHOUT_CLASSIFICATION	7.465624801027355E-4	DEFECT	2.2318647497358344E-4	DESIGN	3.674701548141477E-5	TEST	8.962127974187079E-7	DOCUMENTATION	1.0249821467985703E-8	IMPLEMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9978639708133765	WITHOUT_CLASSIFICATION	0.0016675714161208477	DESIGN	4.6767211001145934E-4	DEFECT	7.355130168509441E-7	TEST	5.0018050981480437E-8	DOCUMENTATION	1.2942332935968936E-10	IMPLEMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9994126896767327	WITHOUT_CLASSIFICATION	4.5386009311086754E-4	DESIGN	6.94297250325026E-5	DEFECT	3.716374556151501E-5	IMPLEMENTATION	2.1977973825399964E-5	DOCUMENTATION	4.878785737029668E-6	TEST
// collections of values	WITHOUT_CLASSIFICATION	0.9999968440632041	WITHOUT_CLASSIFICATION	1.8156734319542884E-6	DESIGN	1.2379649109054598E-6	DEFECT	8.35896132847994E-8	IMPLEMENTATION	1.156361606061099E-8	TEST	7.145223658671107E-9	DOCUMENTATION
//opening paren in new Foo ( ... )	WITHOUT_CLASSIFICATION	0.9977052067729305	WITHOUT_CLASSIFICATION	0.002103423641962149	DESIGN	1.4189078570553428E-4	DEFECT	2.4907538352722912E-5	IMPLEMENTATION	1.8936443729806357E-5	DOCUMENTATION	5.634817319352169E-6	TEST
//if we are inside a new Result(), but not inside a nested function	WITHOUT_CLASSIFICATION	0.9999918905341308	WITHOUT_CLASSIFICATION	7.68527449837193E-6	DEFECT	3.332547068291086E-7	DESIGN	8.167561630725642E-8	TEST	7.49022436753967E-9	DOCUMENTATION	1.7708234819192994E-9	IMPLEMENTATION
//special case	WITHOUT_CLASSIFICATION	0.9999882121096669	WITHOUT_CLASSIFICATION	1.1311900481048882E-5	IMPLEMENTATION	2.272907359261436E-7	DEFECT	1.3703633244105746E-7	DESIGN	1.0261335832535078E-7	DOCUMENTATION	9.049425271188641E-9	TEST
// the name of an SQL function	WITHOUT_CLASSIFICATION	0.9999917605180404	WITHOUT_CLASSIFICATION	7.610659330032784E-6	DESIGN	3.541815713387566E-7	DEFECT	2.3825656559850106E-7	DOCUMENTATION	1.8917231711884308E-8	TEST	1.7467260846383945E-8	IMPLEMENTATION
//null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.999074163718926	WITHOUT_CLASSIFICATION	9.239786744582344E-4	DESIGN	1.282017238867666E-6	IMPLEMENTATION	3.3793405018338876E-7	DOCUMENTATION	2.278322374587596E-7	DEFECT	9.823089444109782E-9	TEST
//this is basically a copy/paste of OrderByParser ... might be worth refactoring	WITHOUT_CLASSIFICATION	0.9188054218162474	DESIGN	0.041789694488702483	DEFECT	0.03939824544868123	WITHOUT_CLASSIFICATION	5.0023195116379984E-6	TEST	1.380626226796099E-6	IMPLEMENTATION	2.553006305499645E-7	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person GROUP BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999967567218871	WITHOUT_CLASSIFICATION	2.0122970187915817E-6	IMPLEMENTATION	8.911805775532818E-7	DESIGN	2.579742217449298E-7	DEFECT	5.592070763490385E-8	TEST	2.590558699976081E-8	DOCUMENTATION
// return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.9984751106551962	WITHOUT_CLASSIFICATION	0.001518922347902349	DESIGN	5.935143074597741E-6	DEFECT	1.6172823668253083E-8	DOCUMENTATION	9.42740755834E-9	IMPLEMENTATION	6.25359554904449E-9	TEST
//register collection role	WITHOUT_CLASSIFICATION	0.9999416043357635	WITHOUT_CLASSIFICATION	5.49361269786843E-5	DESIGN	2.5646368770050104E-6	IMPLEMENTATION	6.423294893552927E-7	DEFECT	1.7073428643795407E-7	TEST	8.183660499335545E-8	DOCUMENTATION
// The keyword used to specify an identity column, if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.9999999648308964	WITHOUT_CLASSIFICATION	3.4573241961306124E-8	DESIGN	2.695415420395143E-10	DOCUMENTATION	1.685886334835158E-10	DEFECT	1.4706754149275957E-10	TEST	1.0664048054335242E-11	IMPLEMENTATION
//.getElementPropertyMapping();	WITHOUT_CLASSIFICATION	0.9999814499988806	WITHOUT_CLASSIFICATION	1.302203866823944E-5	IMPLEMENTATION	4.302757921595123E-6	DEFECT	6.225789482293948E-7	DESIGN	3.4135528676237987E-7	TEST	2.6127029458098484E-7	DOCUMENTATION
//crossJoins.add(name);	WITHOUT_CLASSIFICATION	0.9996458779085747	WITHOUT_CLASSIFICATION	3.1860589489510834E-4	DESIGN	1.2668174336223061E-5	DEFECT	1.142270369898987E-5	IMPLEMENTATION	9.723864356018182E-6	DOCUMENTATION	1.7014541387978347E-6	TEST
//ie no select clause in HQL	WITHOUT_CLASSIFICATION	0.9999997966028644	WITHOUT_CLASSIFICATION	1.5005736833614925E-7	DESIGN	2.9116613837320696E-8	DEFECT	2.258646480874446E-8	DOCUMENTATION	1.4147009114359535E-9	IMPLEMENTATION	2.2198766019180185E-10	TEST
// initialize the Set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.9999901722812597	WITHOUT_CLASSIFICATION	9.802335714459574E-6	DESIGN	1.9674247692223932E-8	IMPLEMENTATION	3.703649352567948E-9	TEST	1.246998857109166E-9	DEFECT	7.581298748016575E-10	DOCUMENTATION
//ie. no select clause	WITHOUT_CLASSIFICATION	0.9999999763872796	WITHOUT_CLASSIFICATION	9.067563767372311E-9	DESIGN	7.67146286548918E-9	IMPLEMENTATION	4.414180010319035E-9	DEFECT	2.157757061560856E-9	DOCUMENTATION	3.0175671249126806E-10	TEST
//there _was_ a select clause	WITHOUT_CLASSIFICATION	0.9999999858919855	WITHOUT_CLASSIFICATION	6.966734051224792E-9	DESIGN	5.23283122701779E-9	IMPLEMENTATION	8.921035139740884E-10	DEFECT	6.914519488958723E-10	TEST	3.2489381871221794E-10	DOCUMENTATION
// return the concrete type, or the underlying type if a concrete type // was not specified	WITHOUT_CLASSIFICATION	0.999934689156869	WITHOUT_CLASSIFICATION	6.452766442508269E-5	DESIGN	7.005469303196465E-7	DEFECT	7.662056407025174E-8	IMPLEMENTATION	4.032845749884865E-9	TEST	1.978365844474576E-9	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9994126896767327	WITHOUT_CLASSIFICATION	4.5386009311086754E-4	DESIGN	6.94297250325026E-5	DEFECT	3.716374556151501E-5	IMPLEMENTATION	2.1977973825399964E-5	DOCUMENTATION	4.878785737029668E-6	TEST
//q.addCollection(collectionName, collectionRole);	WITHOUT_CLASSIFICATION	0.9999729934447784	WITHOUT_CLASSIFICATION	2.0888903074636495E-5	IMPLEMENTATION	2.7700544884462627E-6	DEFECT	2.592685703775046E-6	DESIGN	4.859562304860478E-7	TEST	2.689557241493656E-7	DOCUMENTATION
// classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.9999031888069417	WITHOUT_CLASSIFICATION	8.72039008033821E-5	DEFECT	9.49837766911285E-6	DESIGN	4.7508033503890925E-8	DOCUMENTATION	3.3095848677375754E-8	TEST	2.8310703519096822E-8	IMPLEMENTATION
// can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.9999990086537599	WITHOUT_CLASSIFICATION	5.892257193946799E-7	DESIGN	3.858045275047315E-7	DEFECT	1.2861949693113879E-8	DOCUMENTATION	3.3271335815836345E-9	TEST	1.2691005127990064E-10	IMPLEMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9988824402472888	WITHOUT_CLASSIFICATION	0.0011153549746327725	DESIGN	1.9615299386152595E-6	DEFECT	1.7823158790633284E-7	DOCUMENTATION	3.6252418618596586E-8	IMPLEMENTATION	2.876413331996065E-8	TEST
// This is the legacy behaviour for HQL queries...	WITHOUT_CLASSIFICATION	0.9997181013899787	WITHOUT_CLASSIFICATION	2.759639320683964E-4	DESIGN	5.9085556948163814E-6	DEFECT	2.07895695185508E-8	TEST	4.103388095469011E-9	DOCUMENTATION	1.2293006612282422E-9	IMPLEMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9774502580822936	WITHOUT_CLASSIFICATION	0.019171187478704017	IMPLEMENTATION	0.0019955197151638794	DESIGN	0.0013166797537061327	DEFECT	3.7906533942431934E-5	DOCUMENTATION	2.8448436189967767E-5	TEST
// not known!	WITHOUT_CLASSIFICATION	0.9774502580822936	WITHOUT_CLASSIFICATION	0.019171187478704017	IMPLEMENTATION	0.0019955197151638794	DESIGN	0.0013166797537061327	DEFECT	3.7906533942431934E-5	DOCUMENTATION	2.8448436189967767E-5	TEST
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999948012449954	WITHOUT_CLASSIFICATION	3.4183983249933414E-6	DESIGN	1.5661641958490918E-6	DEFECT	1.2370642421100108E-7	DOCUMENTATION	6.334223714211005E-8	IMPLEMENTATION	2.7143822413114566E-8	TEST
// not known!	WITHOUT_CLASSIFICATION	0.9774502580822936	WITHOUT_CLASSIFICATION	0.019171187478704017	IMPLEMENTATION	0.0019955197151638794	DESIGN	0.0013166797537061327	DEFECT	3.7906533942431934E-5	DOCUMENTATION	2.8448436189967767E-5	TEST
// not known!	WITHOUT_CLASSIFICATION	0.9774502580822936	WITHOUT_CLASSIFICATION	0.019171187478704017	IMPLEMENTATION	0.0019955197151638794	DESIGN	0.0013166797537061327	DEFECT	3.7906533942431934E-5	DOCUMENTATION	2.8448436189967767E-5	TEST
//Need this, since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.645406430683137	DESIGN	0.3217746547028464	WITHOUT_CLASSIFICATION	0.028501532052527537	DEFECT	0.003704305927265566	DOCUMENTATION	5.707723035829586E-4	IMPLEMENTATION	4.230433064058244E-5	TEST
//tokens that close a sub expression //tokens that open a sub expression //tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.9999989161001891	WITHOUT_CLASSIFICATION	7.466338315581202E-7	DEFECT	3.277877025544682E-7	DESIGN	7.886826208941937E-9	TEST	8.032356705037274E-10	IMPLEMENTATION	7.882148494175322E-10	DOCUMENTATION
//expressionTerminators.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999767927536879	WITHOUT_CLASSIFICATION	2.2932232662982752E-5	DESIGN	1.7338530403046778E-7	IMPLEMENTATION	5.8300745419664355E-8	DEFECT	3.679048340337411E-8	TEST	6.5371161370118175E-9	DOCUMENTATION
//expressionOpeners.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.999995507724086	WITHOUT_CLASSIFICATION	3.5305986754377285E-6	DESIGN	6.04124094606978E-7	IMPLEMENTATION	3.1040601857583575E-7	DEFECT	3.64645372216162E-8	TEST	1.068258821695776E-8	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource) // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9622872015740696	WITHOUT_CLASSIFICATION	0.037652802173766806	DESIGN	5.9021631988219064E-5	DEFECT	5.746275217053981E-7	DOCUMENTATION	3.4195691309657975E-7	IMPLEMENTATION	5.8035740616151705E-8	TEST
// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and "do the right thing" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character (what is to be trimmed off?) // the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.9964019919635199	WITHOUT_CLASSIFICATION	0.003596871030844712	DESIGN	7.385902025411432E-7	DOCUMENTATION	1.439600782952234E-7	TEST	1.280746842147475E-7	IMPLEMENTATION	1.263806703777963E-7	DEFECT
//Inside a BETWEEN ... AND ... expression	WITHOUT_CLASSIFICATION	0.999608089315727	WITHOUT_CLASSIFICATION	2.728093029785278E-4	DEFECT	1.0897854747161307E-4	IMPLEMENTATION	9.153472509890281E-6	DESIGN	8.058755685882995E-7	DOCUMENTATION	1.6348574444501953E-7	TEST
//were an odd or even number of NOTs encountered //the join string built up by compound paths inside this expression //a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.9999999349910726	WITHOUT_CLASSIFICATION	6.471734565986575E-8	DESIGN	1.107853553463213E-10	DOCUMENTATION	1.014083136604776E-10	TEST	7.923469030159737E-11	DEFECT	1.5337864846479537E-13	IMPLEMENTATION
//ie. a many-to-many	WITHOUT_CLASSIFICATION	0.9992487122686161	WITHOUT_CLASSIFICATION	6.991088769240718E-4	DESIGN	3.2096745675569345E-5	DEFECT	1.7376104363689282E-5	IMPLEMENTATION	1.9663786313885645E-6	DOCUMENTATION	7.396257892048896E-7	TEST
//Cope with [,]	WITHOUT_CLASSIFICATION	0.9997540296344744	WITHOUT_CLASSIFICATION	2.2698150554120483E-4	DESIGN	1.1164857362366998E-5	IMPLEMENTATION	4.6230447756586875E-6	TEST	1.8316295320240197E-6	DOCUMENTATION	1.369328314435934E-6	DEFECT
//Cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.9977906702899814	WITHOUT_CLASSIFICATION	0.002207872194526442	DESIGN	9.841201572577788E-7	DEFECT	2.0803659161813465E-7	IMPLEMENTATION	1.4765068482557913E-7	DOCUMENTATION	1.177080585309771E-7	TEST
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9999016766636725	WITHOUT_CLASSIFICATION	9.043057082641518E-5	DESIGN	5.211014498772794E-6	DEFECT	2.4966138900625523E-6	IMPLEMENTATION	1.2797025453033688E-7	DOCUMENTATION	5.716685771789337E-8	TEST
//Cope with a subselect	WITHOUT_CLASSIFICATION	0.9999776608673154	WITHOUT_CLASSIFICATION	2.1991094135559604E-5	DESIGN	1.442548512910245E-7	DEFECT	8.706239506387447E-8	IMPLEMENTATION	8.346394154520931E-8	TEST	3.325736108284085E-8	DOCUMENTATION
//Cope with special cases of AND, NOT, ()	WITHOUT_CLASSIFICATION	0.999975154904021	WITHOUT_CLASSIFICATION	1.38655645880643E-5	IMPLEMENTATION	3.7935606696389122E-6	TEST	3.034099485434908E-6	DESIGN	2.8049430981288543E-6	DEFECT	1.3469281375962617E-6	DOCUMENTATION
//Close extra brackets we opened	WITHOUT_CLASSIFICATION	0.9999982933542712	WITHOUT_CLASSIFICATION	1.6635948912862957E-6	DESIGN	2.7977463551617086E-8	DEFECT	7.57264329433956E-9	IMPLEMENTATION	4.579946288024641E-9	DOCUMENTATION	2.920784569324327E-9	TEST
//take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.999770678396839	WITHOUT_CLASSIFICATION	1.572404739399611E-4	DEFECT	7.058414987515255E-5	DESIGN	1.2948872844267086E-6	TEST	1.2823023015044133E-7	DOCUMENTATION	7.386183135675368E-8	IMPLEMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999999662233316	WITHOUT_CLASSIFICATION	3.183497216567321E-8	DESIGN	9.426938745601574E-10	DEFECT	5.103443639117044E-10	DOCUMENTATION	2.60926136161968E-10	IMPLEMENTATION	2.277318745010477E-10	TEST
//process a token, mapping OO path expressions to SQL expressions	WITHOUT_CLASSIFICATION	0.9999993903803736	WITHOUT_CLASSIFICATION	5.809490066163157E-7	DEFECT	1.0128299679467047E-8	IMPLEMENTATION	7.656979369750972E-9	DESIGN	6.543499457972245E-9	DOCUMENTATION	4.341841302056517E-9	TEST
//Open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.9532718403217236	WITHOUT_CLASSIFICATION	0.04646550336049226	DESIGN	2.1517762742745116E-4	DEFECT	2.366851732566255E-5	DOCUMENTATION	1.8349585575663646E-5	TEST	5.4605874553597E-6	IMPLEMENTATION
//Cope with special cases of AND, NOT, )	WITHOUT_CLASSIFICATION	0.999946726437596	WITHOUT_CLASSIFICATION	1.992773672980832E-5	DESIGN	1.7278181125196502E-5	IMPLEMENTATION	8.527130765865077E-6	TEST	4.948289853753068E-6	DEFECT	2.592223929475253E-6	DOCUMENTATION
// the next one up must also be	WITHOUT_CLASSIFICATION	0.9998949669528392	WITHOUT_CLASSIFICATION	8.972554039558864E-5	DESIGN	1.441202762212929E-5	IMPLEMENTATION	4.109903338618422E-7	DEFECT	2.7898173517147967E-7	TEST	2.055070741217235E-7	DOCUMENTATION
// Add any joins	WITHOUT_CLASSIFICATION	0.9999830064020728	WITHOUT_CLASSIFICATION	1.1873808687399871E-5	IMPLEMENTATION	2.7519632451259323E-6	DEFECT	1.5265336254550132E-6	DOCUMENTATION	7.910043394489784E-7	DESIGN	5.0288029747341013E-8	TEST
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999999662233316	WITHOUT_CLASSIFICATION	3.183497216567321E-8	DESIGN	9.426938745601574E-10	DEFECT	5.103443639117044E-10	DOCUMENTATION	2.60926136161968E-10	IMPLEMENTATION	2.277318745010477E-10	TEST
//named query parameter	WITHOUT_CLASSIFICATION	0.9996090934229556	WITHOUT_CLASSIFICATION	3.72701958490755E-4	DESIGN	1.2286364529298617E-5	DEFECT	4.4610898579850835E-6	IMPLEMENTATION	1.0990862961023917E-6	TEST	3.580778704453078E-7	DOCUMENTATION
//path expression	WITHOUT_CLASSIFICATION	0.9999851700775719	WITHOUT_CLASSIFICATION	7.829481752851992E-6	DEFECT	4.205735805629636E-6	IMPLEMENTATION	2.4746194987057845E-6	DESIGN	1.948900412385208E-7	DOCUMENTATION	1.2519532973429827E-7	TEST
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999973901760444	WITHOUT_CLASSIFICATION	2.2813295829700455E-6	IMPLEMENTATION	2.2932455284689249E-7	DEFECT	7.336040482909087E-8	DESIGN	1.7821998054185576E-8	TEST	7.987416799958162E-9	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999967483172936	WITHOUT_CLASSIFICATION	1.8130406980092656E-6	IMPLEMENTATION	1.0562571947012885E-6	DESIGN	3.5055088728454893E-7	DEFECT	2.5138507444629798E-8	TEST	6.695419098237169E-9	DOCUMENTATION
//anything else	WITHOUT_CLASSIFICATION	0.9999774640649598	WITHOUT_CLASSIFICATION	2.1372538341550826E-5	IMPLEMENTATION	4.075731633000927E-7	DESIGN	3.9520690313599214E-7	DOCUMENTATION	2.3915642111841057E-7	DEFECT	1.2146021118087386E-7	TEST
// the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.999983919544891	WITHOUT_CLASSIFICATION	1.3086395610482168E-5	DESIGN	2.9341293201039894E-6	DEFECT	4.1757622357841934E-8	IMPLEMENTATION	1.2458770060531436E-8	DOCUMENTATION	5.7137861455642E-9	TEST
// careful with this!	WITHOUT_CLASSIFICATION	0.9999954274103325	WITHOUT_CLASSIFICATION	4.361452140201785E-6	DESIGN	6.701235477806382E-8	TEST	6.641074312615933E-8	DEFECT	6.153553300250273E-8	IMPLEMENTATION	1.6178896363491277E-8	DOCUMENTATION
// the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.9971409562093453	WITHOUT_CLASSIFICATION	0.0025629409441886935	IMPLEMENTATION	2.2657201529532664E-4	DEFECT	6.699325765668024E-5	DESIGN	1.6190350404339523E-6	TEST	9.185384736054779E-7	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999961585288495	WITHOUT_CLASSIFICATION	3.165792209783979E-6	IMPLEMENTATION	2.2236171542894412E-7	DESIGN	1.9156337654543468E-7	DOCUMENTATION	1.8880773442707255E-7	DEFECT	7.29461144190081E-8	TEST
//NOTICE: no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.9994991695638925	WITHOUT_CLASSIFICATION	4.895001437202476E-4	DESIGN	1.1102879176539946E-5	IMPLEMENTATION	1.5042491856728694E-7	DOCUMENTATION	6.623562989966255E-8	TEST	1.0752662056164669E-8	DEFECT
//cannot instantiate	WITHOUT_CLASSIFICATION	0.9988318390685703	WITHOUT_CLASSIFICATION	0.0011450117131376683	DESIGN	2.0777282296597842E-5	DEFECT	1.0601345827771107E-6	IMPLEMENTATION	1.0104115565626777E-6	DOCUMENTATION	3.0138985595755945E-7	TEST
// start by looking for HQL keywords...	WITHOUT_CLASSIFICATION	0.9999997333538836	WITHOUT_CLASSIFICATION	1.5090312712296168E-7	DEFECT	1.1348296020623117E-7	DESIGN	1.5739507577126552E-9	TEST	3.527295970764536E-10	IMPLEMENTATION	3.33348791618581E-10	DOCUMENTATION
// inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.9999940613433139	WITHOUT_CLASSIFICATION	5.1612880920056205E-6	DESIGN	7.562129598325848E-7	DEFECT	8.786688126570665E-9	TEST	6.21207552586217E-9	IMPLEMENTATION	6.156870639696149E-9	DOCUMENTATION
// 'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.9999999775904128	WITHOUT_CLASSIFICATION	1.9186693765592632E-8	IMPLEMENTATION	2.2736875499359418E-9	DESIGN	7.717485910029902E-10	DEFECT	1.2132937804150286E-10	TEST	5.612776089717533E-11	DOCUMENTATION
// now anything that is not a HQL keyword	WITHOUT_CLASSIFICATION	0.9998605726451583	WITHOUT_CLASSIFICATION	6.280399732660174E-5	DEFECT	4.443381872980879E-5	IMPLEMENTATION	3.111197021343758E-5	DESIGN	9.495216237405942E-7	TEST	1.2804694818436718E-7	DOCUMENTATION
// process the "old" HQL style where aliases appear _first_ // ie. using the IN or IN CLASS constructions	WITHOUT_CLASSIFICATION	0.999999624310924	WITHOUT_CLASSIFICATION	3.046238109463748E-7	DESIGN	3.7201117910197846E-8	IMPLEMENTATION	3.143256137626304E-8	DEFECT	2.211467237628271E-9	TEST	2.2011843998950472E-10	DOCUMENTATION
// treat it as a classname	WITHOUT_CLASSIFICATION	0.9999703178311595	WITHOUT_CLASSIFICATION	1.5930626554981263E-5	DEFECT	1.3394726923678238E-5	DESIGN	1.8261731054967188E-7	IMPLEMENTATION	1.4472244760084033E-7	TEST	2.9475603608547563E-8	DOCUMENTATION
// treat it as a path expression	WITHOUT_CLASSIFICATION	0.9998405878716574	WITHOUT_CLASSIFICATION	1.4175758195333557E-4	DEFECT	1.6887182745733838E-5	IMPLEMENTATION	5.216044031395149E-7	DESIGN	2.1366638149614617E-7	TEST	3.209285884688969E-8	DOCUMENTATION
// starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.9998080689576678	WITHOUT_CLASSIFICATION	1.9188027659532042E-4	DESIGN	2.8633387772432122E-8	DEFECT	1.5543645558101737E-8	TEST	4.592303320119342E-9	IMPLEMENTATION	1.9964002964330693E-9	DOCUMENTATION
// starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.9999957651627819	WITHOUT_CLASSIFICATION	3.909380346811048E-6	DESIGN	2.989130763515754E-7	DEFECT	1.7331661810112763E-8	IMPLEMENTATION	8.291297198135735E-9	TEST	9.20835947140436E-10	DOCUMENTATION
//allow ODMG OQL style: from Person p, p.cars c	WITHOUT_CLASSIFICATION	0.9975465509960845	WITHOUT_CLASSIFICATION	0.0023547603493374674	DESIGN	8.420575291724634E-5	DEFECT	1.3097049124616716E-5	IMPLEMENTATION	9.895742301312794E-7	TEST	3.962783061714597E-7	DOCUMENTATION
//handle quoted strings	WITHOUT_CLASSIFICATION	0.9999862637379486	WITHOUT_CLASSIFICATION	1.2123759011754619E-5	DESIGN	1.0925607383732618E-6	IMPLEMENTATION	3.3071288373866387E-7	TEST	9.497071273005327E-8	DOCUMENTATION	9.425870478620654E-8	DEFECT
// Object insertions, updates, and deletions have list semantics because // they must happen in the right order so as to respect referential // integrity	WITHOUT_CLASSIFICATION	0.9999960302217259	WITHOUT_CLASSIFICATION	2.2038241728602517E-6	DESIGN	1.7377210925742682E-6	DEFECT	2.3352925895939882E-8	IMPLEMENTATION	4.5922049405016396E-9	DOCUMENTATION	2.878778408140946E-10	TEST
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999961585288495	WITHOUT_CLASSIFICATION	3.165792209783979E-6	IMPLEMENTATION	2.2236171542894412E-7	DESIGN	1.9156337654543468E-7	DOCUMENTATION	1.8880773442707255E-7	DEFECT	7.29461144190081E-8	TEST
//ignore whitespace	WITHOUT_CLASSIFICATION	0.9999946497791982	WITHOUT_CLASSIFICATION	4.4493288809587E-6	DESIGN	4.5292935195944734E-7	IMPLEMENTATION	2.521632842692037E-7	DOCUMENTATION	1.2439812205378598E-7	TEST	7.140116259684484E-8	DEFECT
//do replacements	WITHOUT_CLASSIFICATION	0.9999513612380179	WITHOUT_CLASSIFICATION	3.082364533923307E-5	DESIGN	1.7411024907979437E-5	IMPLEMENTATION	2.2411311857671376E-7	DOCUMENTATION	1.1727335514860256E-7	DEFECT	6.270526127784204E-8	TEST
//handle HQL2 collection syntax	WITHOUT_CLASSIFICATION	0.9999536489133806	WITHOUT_CLASSIFICATION	2.4526708636944204E-5	DESIGN	1.8986714171303215E-5	IMPLEMENTATION	2.1872875757396793E-6	DEFECT	6.055098694609198E-7	DOCUMENTATION	4.486636587850281E-8	TEST
// uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.9965259384985212	WITHOUT_CLASSIFICATION	0.003469376463235233	DESIGN	2.5330809472918117E-6	IMPLEMENTATION	1.0330158110031262E-6	DEFECT	9.321834276913179E-7	TEST	1.8675805759176507E-7	DOCUMENTATION
// AbstractSelectingDelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995132846469	WITHOUT_CLASSIFICATION	4.252920543298411E-7	DESIGN	2.9552833801480706E-8	TEST	2.829977527395978E-8	IMPLEMENTATION	1.8625543805099281E-9	DEFECT	1.7081352337603547E-9	DOCUMENTATION
//hilo params	WITHOUT_CLASSIFICATION	0.9999815469321974	WITHOUT_CLASSIFICATION	1.4909562489552848E-5	DESIGN	2.6458561708406586E-6	IMPLEMENTATION	5.51479335315701E-7	DEFECT	2.3872956693087786E-7	TEST	1.0744023989852677E-7	DOCUMENTATION
//sql = query;	WITHOUT_CLASSIFICATION	0.999984200853342	WITHOUT_CLASSIFICATION	1.2559582071924578E-5	DESIGN	2.214468650434664E-6	IMPLEMENTATION	8.418083553279237E-7	DEFECT	1.0326797708173506E-7	TEST	8.001960318411305E-8	DOCUMENTATION
// performance opt	WITHOUT_CLASSIFICATION	0.9999854545539529	WITHOUT_CLASSIFICATION	6.531270802511451E-6	DESIGN	6.0764778815108E-6	IMPLEMENTATION	1.0506258506236008E-6	DOCUMENTATION	8.432905203719887E-7	DEFECT	4.378099187896606E-8	TEST
//sql = update;	WITHOUT_CLASSIFICATION	0.9999935129840692	WITHOUT_CLASSIFICATION	3.5654546287087105E-6	IMPLEMENTATION	2.663118575438943E-6	DESIGN	2.0127221718115668E-7	DEFECT	3.548088240058849E-8	DOCUMENTATION	2.16896270822577E-8	TEST
//hilo config	WITHOUT_CLASSIFICATION	0.9998115725626413	WITHOUT_CLASSIFICATION	9.790438649613572E-5	IMPLEMENTATION	5.804278808898702E-5	DESIGN	2.3265911224036796E-5	DEFECT	7.3620071307423255E-6	DOCUMENTATION	1.8523444187976418E-6	TEST
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999998259736557	WITHOUT_CLASSIFICATION	1.488664653197184E-7	DESIGN	1.0027827156884961E-8	DOCUMENTATION	9.693527768042791E-9	DEFECT	3.3337774940210484E-9	IMPLEMENTATION	2.104746631102087E-9	TEST
// don't allow comments on these insert statements as comments totally // blow up the Oracle getGeneratedKeys "support" :(	WITHOUT_CLASSIFICATION	0.9999875658951725	WITHOUT_CLASSIFICATION	1.2050434148634147E-5	DEFECT	3.823238905694869E-7	DESIGN	8.608787090267093E-10	TEST	4.624577049975546E-10	IMPLEMENTATION	2.3451902810169378E-11	DOCUMENTATION
//abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.9256228650555268	WITHOUT_CLASSIFICATION	0.04931765839136351	DESIGN	0.024923810784275965	IMPLEMENTATION	9.228491801079546E-5	DEFECT	2.909091280588094E-5	DOCUMENTATION	1.428993801704192E-5	TEST
//throw new IdentifierGenerationException("save associated object first, or disable cascade for inverse association");	WITHOUT_CLASSIFICATION	0.9999999953250178	WITHOUT_CLASSIFICATION	3.899004778499975E-9	IMPLEMENTATION	6.481915780118094E-10	TEST	7.277743993301157E-11	DOCUMENTATION	5.373868877338791E-11	DESIGN	1.2697528572900208E-12	DEFECT
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999417088902455	WITHOUT_CLASSIFICATION	5.778395841214376E-5	DESIGN	3.4591053480068435E-7	DEFECT	1.1973606698796762E-7	DOCUMENTATION	3.324644466112102E-8	IMPLEMENTATION	8.258295941168778E-9	TEST
//do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.9999974309888494	WITHOUT_CLASSIFICATION	1.3610662281982867E-6	DESIGN	1.0881136326829674E-6	DEFECT	7.782375479802598E-8	DOCUMENTATION	4.1045640519855506E-8	TEST	9.61894313774834E-10	IMPLEMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999990890267604	WITHOUT_CLASSIFICATION	5.794939039436584E-7	DESIGN	3.052288902435877E-7	IMPLEMENTATION	1.1650769649993862E-8	DOCUMENTATION	8.856805502872855E-9	DEFECT	5.742870245019633E-9	TEST
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999998259736557	WITHOUT_CLASSIFICATION	1.488664653197184E-7	DESIGN	1.0027827156884961E-8	DOCUMENTATION	9.693527768042791E-9	DEFECT	3.3337774940210484E-9	IMPLEMENTATION	2.104746631102087E-9	TEST
// do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.9999984673419958	WITHOUT_CLASSIFICATION	1.4580480817882678E-6	DESIGN	3.77707575532219E-8	DEFECT	1.8640077916352547E-8	TEST	1.3747359675587423E-8	IMPLEMENTATION	4.451727189379551E-9	DOCUMENTATION
/* COLUMN and TABLE should be renamed but it would break the public API */	WITHOUT_CLASSIFICATION	0.8964587811603987	WITHOUT_CLASSIFICATION	0.10126409417523155	DESIGN	0.002262962204494339	DEFECT	8.468957559987155E-6	TEST	3.903877610882473E-6	DOCUMENTATION	1.78962470447257E-6	IMPLEMENTATION
// Loaded entity instances, by EntityKey	WITHOUT_CLASSIFICATION	0.9999983333305206	WITHOUT_CLASSIFICATION	1.2694983213223672E-6	DESIGN	3.6404837416215213E-7	DEFECT	2.8029255620022848E-8	DOCUMENTATION	2.78236086735272E-9	IMPLEMENTATION	2.3111673047659756E-9	TEST
// if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.9987745962266958	WITHOUT_CLASSIFICATION	8.718507954726955E-4	DESIGN	3.372080334682834E-4	IMPLEMENTATION	1.1128424742531684E-5	TEST	3.6438387304785307E-6	DOCUMENTATION	1.5726808899421624E-6	DEFECT
// the default...	WITHOUT_CLASSIFICATION	0.9998687656394337	WITHOUT_CLASSIFICATION	1.0508935610156143E-4	DEFECT	1.7210488069862476E-5	IMPLEMENTATION	8.255734011958471E-6	DESIGN	4.700448222023144E-7	DOCUMENTATION	2.0873756053261267E-7	TEST
// unfortunately not really safe to normalize this // to 1 as an initial value like we do the others // because we would not be able to control this if // we are using a sequence...	WITHOUT_CLASSIFICATION	0.9999962423578732	WITHOUT_CLASSIFICATION	3.4241090263116004E-6	IMPLEMENTATION	3.2900568722919047E-7	DESIGN	2.5387718222206393E-9	DEFECT	1.4175652176702531E-9	TEST	5.710759617647214E-10	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999417088902455	WITHOUT_CLASSIFICATION	5.778395841214376E-5	DESIGN	3.4591053480068435E-7	DEFECT	1.1973606698796762E-7	DOCUMENTATION	3.324644466112102E-8	IMPLEMENTATION	8.258295941168778E-9	TEST
// Identity map of CollectionEntry instances, by the collection wrapper	WITHOUT_CLASSIFICATION	0.9999998032823547	WITHOUT_CLASSIFICATION	1.1821042770895767E-7	DEFECT	5.1757719228097065E-8	IMPLEMENTATION	2.5395847688651182E-8	DESIGN	9.451307564849513E-10	DOCUMENTATION	4.0851979307557456E-10	TEST
// general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996950695665	WITHOUT_CLASSIFICATION	1.516591853764101E-7	DEFECT	1.390901575917217E-7	DESIGN	8.76772637379029E-9	IMPLEMENTATION	3.6836577033484525E-9	TEST	1.729706468595459E-9	DOCUMENTATION
// table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997786273506	WITHOUT_CLASSIFICATION	2.08580878791536E-7	DESIGN	1.0142600778709807E-8	IMPLEMENTATION	1.3460354982162942E-9	DEFECT	8.894018847917946E-10	TEST	4.137324940629897E-10	DOCUMENTATION
// Configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9986715574181992	WITHOUT_CLASSIFICATION	0.0012524931546926573	IMPLEMENTATION	7.209661505664026E-5	DESIGN	3.11792453544243E-6	DEFECT	4.276220008755595E-7	DOCUMENTATION	3.072655151021974E-7	TEST
// IdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9978862409950603	WITHOUT_CLASSIFICATION	0.0021007746990451995	IMPLEMENTATION	1.1360633310538494E-5	DESIGN	1.415359813218236E-6	DEFECT	1.2004383810148774E-7	TEST	8.826893246937146E-8	DOCUMENTATION
// PersistentIdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999142933413722	WITHOUT_CLASSIFICATION	8.477503180787301E-4	IMPLEMENTATION	8.954513884326593E-6	DESIGN	1.83627119900674E-7	TEST	1.4736645220404573E-7	DEFECT	3.076074301816378E-8	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999997846970284	WITHOUT_CLASSIFICATION	1.3401742525959602E-7	DEFECT	6.955102745024075E-8	DESIGN	6.162198954775974E-9	IMPLEMENTATION	3.433496309702059E-9	DOCUMENTATION	2.138823508340823E-9	TEST
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999997846970284	WITHOUT_CLASSIFICATION	1.3401742525959602E-7	DEFECT	6.955102745024075E-8	DESIGN	6.162198954775974E-9	IMPLEMENTATION	3.433496309702059E-9	DOCUMENTATION	2.138823508340823E-9	TEST
//fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.9990608475192507	WITHOUT_CLASSIFICATION	9.285702947916655E-4	DESIGN	9.095054016543386E-6	DEFECT	1.159103443990252E-6	TEST	2.3272435292013895E-7	DOCUMENTATION	9.530414405881214E-8	IMPLEMENTATION
// we just hit the last position	WITHOUT_CLASSIFICATION	0.9999986340689916	WITHOUT_CLASSIFICATION	8.062030506905317E-7	IMPLEMENTATION	3.6739670055206396E-7	DESIGN	1.1935317742632699E-7	DEFECT	6.198486957590255E-8	DOCUMENTATION	1.0993210077534237E-8	TEST
// scroll ahead	WITHOUT_CLASSIFICATION	0.9999876088335732	WITHOUT_CLASSIFICATION	1.029870988253479E-5	DESIGN	1.8228290856578074E-6	IMPLEMENTATION	1.7651359064243308E-7	DEFECT	7.588351609252552E-8	DOCUMENTATION	1.7230352072714654E-8	TEST
// scroll backward	WITHOUT_CLASSIFICATION	0.9999961328078317	WITHOUT_CLASSIFICATION	2.0759839349665083E-6	DESIGN	1.5221224306939439E-6	DEFECT	2.405247826935029E-7	IMPLEMENTATION	2.0089487950348082E-8	DOCUMENTATION	8.471531879202032E-9	TEST
// we have not yet hit the last result...	WITHOUT_CLASSIFICATION	0.7709470157448884	WITHOUT_CLASSIFICATION	0.228959754536811	DEFECT	7.678387551936885E-5	IMPLEMENTATION	1.3865162152056051E-5	TEST	1.894627385828653E-6	DESIGN	6.860532433575144E-7	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999942859694071	WITHOUT_CLASSIFICATION	5.4067070631042335E-6	DESIGN	1.3546687056952053E-7	IMPLEMENTATION	1.3280165583291833E-7	DEFECT	2.6465710848045546E-8	TEST	1.2589292430663145E-8	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998150916657	WITHOUT_CLASSIFICATION	7.754427176814193E-7	DESIGN	5.329461679816094E-7	IMPLEMENTATION	3.757049662422429E-7	DEFECT	1.1004317717491508E-7	DOCUMENTATION	5.494631397514547E-8	TEST
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999964173397285	WITHOUT_CLASSIFICATION	1.857460617404162E-6	DESIGN	9.469434983999891E-7	IMPLEMENTATION	6.789831202841292E-7	DEFECT	9.220711803412974E-8	TEST	7.065917280132052E-9	DOCUMENTATION
// do this when all the properties are updateable since there is // a certain likelihood that the information will already be // snapshot-cached.	WITHOUT_CLASSIFICATION	0.999487486817727	WITHOUT_CLASSIFICATION	5.123071692206751E-4	DESIGN	1.1094667415786259E-7	DEFECT	4.801191911525901E-8	DOCUMENTATION	4.118876746787824E-8	IMPLEMENTATION	5.865691549580394E-9	TEST
// Inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999178436391	WITHOUT_CLASSIFICATION	5.4700482500197355E-8	DEFECT	1.657122413628176E-8	DESIGN	5.285173861141319E-9	TEST	3.7927750315836995E-9	IMPLEMENTATION	1.8067054991166084E-9	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999942859694071	WITHOUT_CLASSIFICATION	5.4067070631042335E-6	DESIGN	1.3546687056952053E-7	IMPLEMENTATION	1.3280165583291833E-7	DEFECT	2.6465710848045546E-8	TEST	1.2589292430663145E-8	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998150916657	WITHOUT_CLASSIFICATION	7.754427176814193E-7	DESIGN	5.329461679816094E-7	IMPLEMENTATION	3.757049662422429E-7	DEFECT	1.1004317717491508E-7	DOCUMENTATION	5.494631397514547E-8	TEST
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999964173397285	WITHOUT_CLASSIFICATION	1.857460617404162E-6	DESIGN	9.469434983999891E-7	IMPLEMENTATION	6.789831202841292E-7	DEFECT	9.220711803412974E-8	TEST	7.065917280132052E-9	DOCUMENTATION
// Caches	WITHOUT_CLASSIFICATION	0.9999974311668902	WITHOUT_CLASSIFICATION	2.4933354656686187E-6	DESIGN	2.7335463253593245E-8	DEFECT	2.0363710570347024E-8	DOCUMENTATION	1.6233403269590384E-8	TEST	1.1565067003952629E-8	IMPLEMENTATION
//Generators:	WITHOUT_CLASSIFICATION	0.9963127394685523	WITHOUT_CLASSIFICATION	0.0035988119153442626	DESIGN	7.291083758699735E-5	IMPLEMENTATION	5.425559901919259E-6	DEFECT	5.369087269827695E-6	TEST	4.743131344751992E-6	DOCUMENTATION
// cache region is defined by the root-class in the hierarchy...	WITHOUT_CLASSIFICATION	0.9999868946620797	WITHOUT_CLASSIFICATION	1.2766995848692086E-5	DESIGN	3.3631445920036183E-7	DEFECT	1.2363005357486212E-9	TEST	4.5160630730144635E-10	DOCUMENTATION	3.397057071522113E-10	IMPLEMENTATION
//check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.9922022775913998	WITHOUT_CLASSIFICATION	0.007788274159433499	DESIGN	3.975224353118416E-6	DEFECT	3.061294083187951E-6	IMPLEMENTATION	2.109374777140552E-6	TEST	3.0235595321688427E-7	DOCUMENTATION
// after *all* persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.9999899021863112	WITHOUT_CLASSIFICATION	1.0062494580312949E-5	DESIGN	1.929173830308393E-8	IMPLEMENTATION	1.3202499989509006E-8	DEFECT	2.558663225408508E-9	TEST	2.6620677413089985E-10	DOCUMENTATION
// if we get here, it is possible that we have a proxy 'in the way' of the merge map resolution... // 	WITHOUT_CLASSIFICATION	0.9998893348599784	WITHOUT_CLASSIFICATION	9.738636090178561E-5	DEFECT	1.265131787609247E-5	DESIGN	6.164225119879431E-7	TEST	1.0069256489007918E-8	IMPLEMENTATION	9.694751415573976E-10	DOCUMENTATION
//JNDI + Serialization:	WITHOUT_CLASSIFICATION	0.999997519075081	WITHOUT_CLASSIFICATION	1.3240767027363125E-6	DEFECT	7.420820919661214E-7	DESIGN	2.3720892631991327E-7	IMPLEMENTATION	1.4139413566806557E-7	DOCUMENTATION	3.616306217432858E-8	TEST
//checking for named queries	WITHOUT_CLASSIFICATION	0.9924312968440612	WITHOUT_CLASSIFICATION	0.007358267004847332	DESIGN	1.5239331455749864E-4	IMPLEMENTATION	3.918005259303434E-5	TEST	1.3107871557988662E-5	DEFECT	5.754912382897844E-6	DOCUMENTATION
//stats	WITHOUT_CLASSIFICATION	0.9994138494201357	WITHOUT_CLASSIFICATION	5.655382345117798E-4	DESIGN	7.541204653070311E-6	DEFECT	6.2849953258378205E-6	IMPLEMENTATION	3.956809080532226E-6	TEST	2.8293362931773407E-6	DOCUMENTATION
// EntityNotFoundDelegate	WITHOUT_CLASSIFICATION	0.9999594077292491	WITHOUT_CLASSIFICATION	4.0308752476738005E-5	DESIGN	1.4338798626281422E-7	DEFECT	7.033375626203204E-8	TEST	3.611093664855982E-8	IMPLEMENTATION	3.3685594944916674E-8	DOCUMENTATION
// Check named HQL queries	WITHOUT_CLASSIFICATION	0.9999936726242964	WITHOUT_CLASSIFICATION	6.257366273017713E-6	DESIGN	2.6200178261623407E-8	IMPLEMENTATION	1.9699229410156878E-8	DEFECT	1.6495899366415705E-8	TEST	7.614123600553775E-9	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9362027290740472	WITHOUT_CLASSIFICATION	0.06232616099932121	DESIGN	8.960992900969265E-4	DEFECT	5.111902025594481E-4	TEST	5.963353559582694E-5	IMPLEMENTATION	4.186898379309984E-6	DOCUMENTATION
//prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.9965115848845945	WITHOUT_CLASSIFICATION	0.0033659718013020197	DESIGN	1.1603894304600328E-4	DEFECT	2.2529333613601646E-6	TEST	2.192518148101884E-6	IMPLEMENTATION	1.9589195479927902E-6	DOCUMENTATION
// from javax.naming.Referenceable	WITHOUT_CLASSIFICATION	0.9998551490848714	WITHOUT_CLASSIFICATION	1.4234635961312583E-4	DESIGN	1.0308497451336697E-6	DEFECT	7.214693601377668E-7	IMPLEMENTATION	6.742889364964418E-7	DOCUMENTATION	7.79474737887048E-8	TEST
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999727210456666	WITHOUT_CLASSIFICATION	2.6044916408180992E-5	DESIGN	8.719233092147266E-7	IMPLEMENTATION	3.110017209820166E-7	DEFECT	4.5109630268414444E-8	DOCUMENTATION	6.003264875067899E-9	TEST
//for a dynamic-class	WITHOUT_CLASSIFICATION	0.9999891765529775	WITHOUT_CLASSIFICATION	1.0205100898235062E-5	DESIGN	5.418533748503869E-7	DEFECT	5.662934635802046E-8	DOCUMENTATION	1.492126493540987E-8	TEST	4.942138074324774E-9	IMPLEMENTATION
//test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.9982048723499842	WITHOUT_CLASSIFICATION	0.001592217550344776	DESIGN	2.0219766488322513E-4	TEST	6.505406711693892E-7	DOCUMENTATION	6.01842570884604E-8	DEFECT	1.709859367009481E-9	IMPLEMENTATION
//NOTE EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999366575050652	WITHOUT_CLASSIFICATION	2.8795568938903423E-5	IMPLEMENTATION	2.7998738898970698E-5	DESIGN	3.5097652539738773E-6	DEFECT	1.6902528522169995E-6	TEST	1.3481689908479215E-6	DOCUMENTATION
// for backward-compatability	WITHOUT_CLASSIFICATION	0.9999811354877612	WITHOUT_CLASSIFICATION	1.824833604448593E-5	DESIGN	5.088726260610478E-7	DEFECT	9.208215602488567E-8	IMPLEMENTATION	8.33521538527889E-9	TEST	6.886196752098755E-9	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999999528300363	WITHOUT_CLASSIFICATION	1.8332994210008483E-8	DEFECT	1.3754719210269192E-8	IMPLEMENTATION	1.1120802270830418E-8	DESIGN	2.3164086946044637E-9	TEST	1.6450394870420494E-9	DOCUMENTATION
//to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.9999855707272292	WITHOUT_CLASSIFICATION	1.4322774669387441E-5	DESIGN	6.146160408018889E-8	DEFECT	2.2672074948126657E-8	TEST	1.2441595888214847E-8	DOCUMENTATION	9.922826369102303E-9	IMPLEMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.5668675538603544	DESIGN	0.25919152628009173	WITHOUT_CLASSIFICATION	0.11186476887844045	IMPLEMENTATION	0.061815735253711	DEFECT	1.585032237674237E-4	DOCUMENTATION	1.0191250363511008E-4	TEST
//must add to JNDI _after_ adding to HashMaps, because some JNDI servers use serialization	WITHOUT_CLASSIFICATION	0.9999998311618604	WITHOUT_CLASSIFICATION	1.0691664544903564E-7	DESIGN	3.7204135981948746E-8	IMPLEMENTATION	1.3455528608962744E-8	DOCUMENTATION	6.9003349187814326E-9	DEFECT	4.361494740287078E-9	TEST
// Make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.9999966594631473	WITHOUT_CLASSIFICATION	3.082198893661183E-6	DESIGN	1.3475420330334175E-7	DEFECT	1.2027485832274528E-7	IMPLEMENTATION	2.3986673263475268E-9	TEST	9.102301977043328E-10	DOCUMENTATION
// for each of the defined parameters, make sure its value // has been set	WITHOUT_CLASSIFICATION	0.9999992316873113	WITHOUT_CLASSIFICATION	7.650438909780905E-7	DESIGN	2.0209947039610142E-9	DEFECT	9.047499945081382E-10	TEST	3.2401383364198515E-10	IMPLEMENTATION	1.9039178516298153E-11	DOCUMENTATION
//we never need to apply locks to the SQL	WITHOUT_CLASSIFICATION	0.9998177950189919	WITHOUT_CLASSIFICATION	6.257610456350738E-5	DESIGN	4.816641035584265E-5	IMPLEMENTATION	4.519883394363445E-5	DEFECT	2.4303096725693116E-5	DOCUMENTATION	1.9605354194499273E-6	TEST
// inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999971262368418	WITHOUT_CLASSIFICATION	1.5159081672710252E-6	DEFECT	1.2597900978218104E-6	DESIGN	5.8991465243093375E-8	TEST	2.5533197167610646E-8	IMPLEMENTATION	1.3540230682537142E-8	DOCUMENTATION
// deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999947480102833	WITHOUT_CLASSIFICATION	2.738784995411558E-6	IMPLEMENTATION	1.024805033627194E-6	DESIGN	1.0166010859261392E-6	DEFECT	4.2933792075029366E-7	TEST	4.246068103818534E-8	DOCUMENTATION
// during deserialization, we need to reconnect all proxies and // collections to this session, as well as the EntityEntry and // CollectionEntry instances; these associations are transient // because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.9927943293663831	WITHOUT_CLASSIFICATION	0.007203344267632559	DESIGN	2.3215962776513775E-6	DOCUMENTATION	2.889613279724348E-9	DEFECT	1.2373118019771038E-9	TEST	6.427815150395243E-10	IMPLEMENTATION
// updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999948965296126	WITHOUT_CLASSIFICATION	2.678428851244148E-6	IMPLEMENTATION	1.2472455392176214E-6	DESIGN	9.130250599936456E-7	DEFECT	2.2226949159139732E-7	TEST	4.250144525138388E-8	DOCUMENTATION
// loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999967385172788	WITHOUT_CLASSIFICATION	2.812605381673861E-6	DEFECT	3.186356643229457E-7	IMPLEMENTATION	5.533384179627468E-8	TEST	3.947991175821673E-8	DESIGN	3.542792169315127E-8	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999993889244883	WITHOUT_CLASSIFICATION	5.648860721431267E-7	DESIGN	1.9470839913495557E-8	DEFECT	1.1038662715752224E-8	IMPLEMENTATION	8.906282409886398E-9	TEST	6.773654476955088E-9	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999993889244883	WITHOUT_CLASSIFICATION	5.648860721431267E-7	DESIGN	1.9470839913495557E-8	DEFECT	1.1038662715752224E-8	IMPLEMENTATION	8.906282409886398E-9	TEST	6.773654476955088E-9	DOCUMENTATION
// first, try to load it from the temp PC associated to this SS	WITHOUT_CLASSIFICATION	0.9999986816529639	WITHOUT_CLASSIFICATION	9.507275276653738E-7	DESIGN	3.553070982050277E-7	TEST	6.971580968047307E-9	DOCUMENTATION	3.555412529220731E-9	IMPLEMENTATION	1.7854167772781313E-9	DEFECT
// if the metadata allowed proxy creation and caller did not request forceful eager loading, // generate a proxy	WITHOUT_CLASSIFICATION	0.9999999893174635	WITHOUT_CLASSIFICATION	8.464543612891906E-9	TEST	2.184618430677315E-9	DEFECT	2.4729924025235726E-11	DESIGN	6.335867329372602E-12	IMPLEMENTATION	2.3085866275293358E-12	DOCUMENTATION
// otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.9999439907447064	WITHOUT_CLASSIFICATION	5.2041472371592144E-5	DESIGN	3.0183795226237794E-6	IMPLEMENTATION	7.341498696311841E-7	DEFECT	1.8851549910221123E-7	TEST	2.6738030688000166E-8	DOCUMENTATION
/////////////////////////////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997808702198667	WITHOUT_CLASSIFICATION	1.8039887732025525E-4	DESIGN	1.8687851948760043E-5	IMPLEMENTATION	8.302523883219948E-6	DEFECT	6.018446551254673E-6	TEST	5.7220804297309275E-6	DOCUMENTATION
// no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.999945232980603	WITHOUT_CLASSIFICATION	4.463143165375576E-5	DESIGN	1.0073577886997437E-5	IMPLEMENTATION	2.3501416423854986E-8	DOCUMENTATION	2.2775899097444966E-8	TEST	1.5732540669784082E-8	DEFECT
//after setting values to object, entityMode	WITHOUT_CLASSIFICATION	0.9994207748937327	WITHOUT_CLASSIFICATION	5.789408059575587E-4	DESIGN	2.4207417079583254E-7	DEFECT	3.084880605328591E-8	DOCUMENTATION	1.1191142164162198E-8	TEST	1.8619057994627607E-10	IMPLEMENTATION
//for EJB3	WITHOUT_CLASSIFICATION	0.9998583678979769	WITHOUT_CLASSIFICATION	1.2567320314641812E-4	DESIGN	8.914376053596223E-6	DEFECT	3.1474287769128444E-6	IMPLEMENTATION	1.998807935377912E-6	TEST	1.8982861109152768E-6	DOCUMENTATION
// just ignore	WITHOUT_CLASSIFICATION	0.9999985420514627	WITHOUT_CLASSIFICATION	9.069348020035136E-7	IMPLEMENTATION	5.106302480875985E-7	DESIGN	1.5028704126321458E-8	DEFECT	1.3766334145192508E-8	DOCUMENTATION	1.1588448927912657E-8	TEST
// do a check	WITHOUT_CLASSIFICATION	0.9999433889109395	WITHOUT_CLASSIFICATION	5.1289739299990296E-5	DESIGN	4.2898223302014646E-6	IMPLEMENTATION	8.034164980141839E-7	DEFECT	1.947191398203135E-7	DOCUMENTATION	3.339179262592604E-8	TEST
// saveOrUpdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999918440817	WITHOUT_CLASSIFICATION	3.455289920829632E-8	DEFECT	2.6207814717765647E-8	DESIGN	1.7722143583260923E-8	IMPLEMENTATION	1.9247175733236246E-9	TEST	1.1516079067789913E-9	DOCUMENTATION
// update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999992467377423	WITHOUT_CLASSIFICATION	3.732777166430522E-7	IMPLEMENTATION	2.3381076575550026E-7	DEFECT	1.36506896499649E-7	DESIGN	6.563427203345316E-9	TEST	3.1034515641266424E-9	DOCUMENTATION
// lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999994858019823	WITHOUT_CLASSIFICATION	4.7543233190476444E-7	DEFECT	1.8190506366348336E-8	IMPLEMENTATION	1.539408088161652E-8	DESIGN	3.1982660334112183E-9	TEST	1.9828325264388615E-9	DOCUMENTATION
// persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999794070143	WITHOUT_CLASSIFICATION	9.78422218338729E-8	IMPLEMENTATION	6.612828470976453E-8	DEFECT	3.506124811332213E-8	DESIGN	5.2270881810910625E-9	TEST	1.6710140951450825E-9	DOCUMENTATION
// persistOnFlush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998993810912	WITHOUT_CLASSIFICATION	5.333454687772053E-8	DESIGN	2.8046679396587314E-8	DEFECT	1.5195779731478726E-8	IMPLEMENTATION	3.371450604869969E-9	TEST	6.704520106753342E-10	DOCUMENTATION
// merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998815690962	WITHOUT_CLASSIFICATION	4.093123659635537E-8	DESIGN	3.9798930677021545E-8	DEFECT	2.8518623534617895E-8	IMPLEMENTATION	7.611649658049793E-9	TEST	1.570463345239904E-9	DOCUMENTATION
// saveOrUpdateCopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999827910373	WITHOUT_CLASSIFICATION	1.1547577969779665E-7	DEFECT	3.543187837749554E-8	DESIGN	1.7274047232689557E-8	IMPLEMENTATION	2.10315735510953E-9	TEST	1.8047643040178375E-9	DOCUMENTATION
// delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996767616319	WITHOUT_CLASSIFICATION	1.9681587081084364E-7	IMPLEMENTATION	7.459332794054498E-8	DEFECT	4.6772285283524385E-8	DESIGN	4.039234147188074E-9	TEST	1.0176498526548792E-9	DOCUMENTATION
// load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999394243001	WITHOUT_CLASSIFICATION	3.413220788811623E-8	DEFECT	2.089974665744746E-8	IMPLEMENTATION	4.454520972875141E-9	DESIGN	8.473364660469549E-10	TEST	2.4188794672323655E-10	DOCUMENTATION
// refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999992711792692	WITHOUT_CLASSIFICATION	2.781219844034475E-7	IMPLEMENTATION	2.1413025065637674E-7	DEFECT	2.104183098018009E-7	DESIGN	2.269927284715169E-8	TEST	3.450913091733377E-9	DOCUMENTATION
// replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995048870971	WITHOUT_CLASSIFICATION	4.6460414861060004E-7	DESIGN	1.4175167444728624E-8	IMPLEMENTATION	8.17722401703341E-9	DEFECT	6.323706308443747E-9	TEST	1.8326566115213787E-9	DOCUMENTATION
// do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.9999933646760535	WITHOUT_CLASSIFICATION	4.7293428371031975E-6	DESIGN	1.0450390097860657E-6	DEFECT	8.298537514372304E-7	IMPLEMENTATION	2.862887494816544E-8	DOCUMENTATION	2.4594733219124994E-9	TEST
// this is an internal error of some sort...	WITHOUT_CLASSIFICATION	0.9996240041474953	WITHOUT_CLASSIFICATION	3.659374486167683E-4	DEFECT	8.911041691691274E-6	DESIGN	6.254854443794087E-7	TEST	4.0269711125489755E-7	DOCUMENTATION	1.1917964062139511E-7	IMPLEMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9298807086490655	WITHOUT_CLASSIFICATION	0.0699951269646524	DESIGN	1.0560120325030186E-4	DEFECT	1.7462697680879737E-5	TEST	9.452470898042207E-7	IMPLEMENTATION	1.5523826108243176E-7	DOCUMENTATION
//only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.9999873750229791	WITHOUT_CLASSIFICATION	1.1932436567921804E-5	DESIGN	6.526610583157077E-7	IMPLEMENTATION	3.662742549020705E-8	DEFECT	3.0094569983834003E-9	DOCUMENTATION	2.4251219745162466E-10	TEST
// if it was previously unreferenced, we need to flush in order to // get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.9999721566821177	WITHOUT_CLASSIFICATION	2.627450823484784E-5	DESIGN	1.2328578359453634E-6	IMPLEMENTATION	2.646245772186226E-7	DOCUMENTATION	4.172180672743507E-8	TEST	2.9605427530256336E-8	DEFECT
// not for internal use:	WITHOUT_CLASSIFICATION	0.9970678649170096	WITHOUT_CLASSIFICATION	0.00287257938829651	DESIGN	5.4191245415419456E-5	IMPLEMENTATION	4.166609533588751E-6	DEFECT	6.172256103749357E-7	DOCUMENTATION	5.806141343310026E-7	TEST
// otherwise, we only need to flush if there are in-memory changes // to the queried tables	WITHOUT_CLASSIFICATION	0.9999993576530638	WITHOUT_CLASSIFICATION	4.191308969913807E-7	IMPLEMENTATION	1.1142772415452199E-7	DESIGN	1.090271195904688E-7	TEST	1.6424585819633597E-9	DEFECT	1.1187368148407324E-9	DOCUMENTATION
// might need to run a different filter entirely after the flush // because the collection role may have changed	WITHOUT_CLASSIFICATION	0.9991550457188847	WITHOUT_CLASSIFICATION	7.754133762626549E-4	IMPLEMENTATION	6.84125479494964E-5	DESIGN	9.757560628494283E-7	DEFECT	1.2402502095977962E-7	DOCUMENTATION	2.857581939726011E-8	TEST
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9298807086490655	WITHOUT_CLASSIFICATION	0.0699951269646524	DESIGN	1.0560120325030186E-4	DEFECT	1.7462697680879737E-5	TEST	9.452470898042207E-7	IMPLEMENTATION	1.5523826108243176E-7	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9298807086490655	WITHOUT_CLASSIFICATION	0.0699951269646524	DESIGN	1.0560120325030186E-4	DEFECT	1.7462697680879737E-5	TEST	9.452470898042207E-7	IMPLEMENTATION	1.5523826108243176E-7	DOCUMENTATION
//if it is initialized, see if the underlying //instance is contained, since we need to  //account for the fact that it might have been //evicted	WITHOUT_CLASSIFICATION	0.9975882395799981	WITHOUT_CLASSIFICATION	0.0015839422503592803	DESIGN	7.628281596198178E-4	IMPLEMENTATION	6.063819809654683E-5	TEST	4.0236237056588E-6	DOCUMENTATION	3.2818822063293974E-7	DEFECT
// basically just an adapted copy of find(CriteriaImpl)	WITHOUT_CLASSIFICATION	0.99999823949022	WITHOUT_CLASSIFICATION	1.5273070943184089E-6	IMPLEMENTATION	1.238770073740064E-7	DESIGN	1.0033103691927215E-7	DEFECT	7.922275175323796E-9	TEST	1.0723662352653155E-9	DOCUMENTATION
// it is possible for this method to be called during flush processing, // so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999662390871491	WITHOUT_CLASSIFICATION	3.37533517982565E-5	DESIGN	7.051457248150298E-9	TEST	3.969154031548595E-10	DOCUMENTATION	6.864706677777033E-11	DEFECT	4.403297965512938E-11	IMPLEMENTATION
// nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.9999831253575001	WITHOUT_CLASSIFICATION	1.3971885544117002E-5	DESIGN	2.4272321114480283E-6	IMPLEMENTATION	3.9573074902989256E-7	DEFECT	5.257349415214381E-8	DOCUMENTATION	2.722060105959537E-8	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999994365319849	WITHOUT_CLASSIFICATION	3.751646589186226E-7	DESIGN	1.0889089547337328E-7	DEFECT	6.070382664797166E-8	IMPLEMENTATION	1.417363308791069E-8	DOCUMENTATION	4.535001194219872E-9	TEST
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999999528300363	WITHOUT_CLASSIFICATION	1.8332994210008483E-8	DEFECT	1.3754719210269192E-8	IMPLEMENTATION	1.1120802270830418E-8	DESIGN	2.3164086946044637E-9	TEST	1.6450394870420494E-9	DOCUMENTATION
// we need to writeObject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.9999999400429225	WITHOUT_CLASSIFICATION	5.465400447323489E-8	DESIGN	4.012617306396689E-9	DOCUMENTATION	5.846876822693648E-10	IMPLEMENTATION	4.726549749924905E-10	TEST	2.3311302138490957E-10	DEFECT
// the old-time stand-by...	WITHOUT_CLASSIFICATION	0.9999047501930498	WITHOUT_CLASSIFICATION	8.795222898579681E-5	DEFECT	4.33588470469526E-6	IMPLEMENTATION	2.660566333665217E-6	DESIGN	2.2891273551564663E-7	DOCUMENTATION	7.221419055151538E-8	TEST
// parameter bind values...	WITHOUT_CLASSIFICATION	0.9999846266839117	WITHOUT_CLASSIFICATION	1.1867938768597518E-5	DESIGN	3.3377032085637534E-6	DEFECT	8.276482968469785E-8	TEST	7.49827041765168E-8	IMPLEMENTATION	9.926577414465618E-9	DOCUMENTATION
// Parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999784620362748	WITHOUT_CLASSIFICATION	1.9291124156294358E-5	DESIGN	1.8485908380726847E-6	IMPLEMENTATION	2.3898670000977745E-7	TEST	1.2701643416261113E-7	DEFECT	3.224559659521881E-8	DOCUMENTATION
// prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.9998467482238911	WITHOUT_CLASSIFICATION	1.4741441399394132E-4	IMPLEMENTATION	3.338200818362102E-6	DESIGN	2.3035862813009084E-6	DEFECT	1.7335909165612765E-7	TEST	2.221592351061442E-8	DOCUMENTATION
// Execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999569490267429	WITHOUT_CLASSIFICATION	3.603170251204675E-5	DESIGN	4.871863224119151E-6	IMPLEMENTATION	1.5387208664074075E-6	DEFECT	4.357240977080102E-7	DOCUMENTATION	1.729625568761938E-7	TEST
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9943751236695609	WITHOUT_CLASSIFICATION	0.005616827707540573	DESIGN	5.556488558382595E-6	DEFECT	1.5713895519943578E-6	DOCUMENTATION	8.502391886362225E-7	IMPLEMENTATION	7.050559960996503E-8	TEST
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9943751236695609	WITHOUT_CLASSIFICATION	0.005616827707540573	DESIGN	5.556488558382595E-6	DEFECT	1.5713895519943578E-6	DOCUMENTATION	8.502391886362225E-7	IMPLEMENTATION	7.050559960996503E-8	TEST
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9992589691935599	WITHOUT_CLASSIFICATION	7.398056353077955E-4	DESIGN	5.966202648719264E-7	DOCUMENTATION	3.391828927558911E-7	DEFECT	1.4584285187581275E-7	IMPLEMENTATION	1.4352512273727196E-7	TEST
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9992589691935599	WITHOUT_CLASSIFICATION	7.398056353077955E-4	DESIGN	5.966202648719264E-7	DOCUMENTATION	3.391828927558911E-7	DEFECT	1.4584285187581275E-7	IMPLEMENTATION	1.4352512273727196E-7	TEST
// FieldInterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999510258922308	WITHOUT_CLASSIFICATION	4.5372048994081224E-5	IMPLEMENTATION	2.791334066563878E-6	DESIGN	6.374791643466219E-7	DEFECT	1.56837168794041E-7	TEST	1.6408375382030558E-8	DOCUMENTATION
// subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999981117680934	WITHOUT_CLASSIFICATION	1.8455837906929803E-6	DESIGN	2.1792876622811807E-8	DEFECT	9.202084523682435E-9	IMPLEMENTATION	8.108259806341048E-9	TEST	3.54489502992294E-9	DOCUMENTATION
//let's assume that there is only one lazy fetch group, for now!	WITHOUT_CLASSIFICATION	0.9999971265278916	WITHOUT_CLASSIFICATION	2.179741960677658E-6	DESIGN	5.820826723725754E-7	DEFECT	1.0261814649883202E-7	TEST	6.088852424765248E-9	IMPLEMENTATION	2.9404764143415415E-9	DOCUMENTATION
// FieldHandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999716533048526	WITHOUT_CLASSIFICATION	2.3949589841054637E-4	IMPLEMENTATION	4.110777326421403E-5	DESIGN	2.0613517884279806E-6	TEST	7.455681951119436E-7	DEFECT	5.635981577805125E-8	DOCUMENTATION
// should *not* need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.9996186171777621	WITHOUT_CLASSIFICATION	3.540135542012926E-4	DESIGN	2.5142238174434372E-5	DEFECT	2.190065071790775E-6	IMPLEMENTATION	2.467564098692234E-8	DOCUMENTATION	1.2289149398292605E-8	TEST
// should probably no-op commit/rollback here, at least in JTA scenarios	WITHOUT_CLASSIFICATION	0.6201815289488666	DESIGN	0.3787197420532784	WITHOUT_CLASSIFICATION	9.33734004947637E-4	DEFECT	1.4851172052396977E-4	IMPLEMENTATION	1.0553429902426094E-5	DOCUMENTATION	5.929842480840996E-6	TEST
// Base Expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999089981505151	WITHOUT_CLASSIFICATION	8.139241319132734E-5	DEFECT	9.137084826329657E-6	IMPLEMENTATION	1.8581790342638717E-7	DOCUMENTATION	1.746743036717285E-7	DESIGN	1.1185926011026323E-7	TEST
// Various Expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999989824118281	WITHOUT_CLASSIFICATION	7.918754928382625E-6	DEFECT	1.963317570516844E-6	DESIGN	1.9670645171609625E-7	IMPLEMENTATION	9.26873955248704E-8	DOCUMENTATION	4.415372949981499E-9	TEST
// explicitly perform no checking...	WITHOUT_CLASSIFICATION	0.9470066155242804	WITHOUT_CLASSIFICATION	0.05296364587686188	DESIGN	2.3546692436328217E-5	DEFECT	5.23671624733117E-6	DOCUMENTATION	5.705933742548528E-7	IMPLEMENTATION	3.84596799899361E-7	TEST
// used from testsuite	WITHOUT_CLASSIFICATION	0.9998316741128163	WITHOUT_CLASSIFICATION	8.455292546246614E-5	TEST	8.34086929371305E-5	DESIGN	2.6754491784120543E-7	DEFECT	8.665524238744242E-8	DOCUMENTATION	1.0068623883798984E-8	IMPLEMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999999559046492	WITHOUT_CLASSIFICATION	4.191427727548284E-8	DESIGN	9.671188819485063E-10	DOCUMENTATION	8.39770747253574E-10	DEFECT	3.734220244019206E-10	TEST	7.617698544677456E-13	IMPLEMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996866627785144	WITHOUT_CLASSIFICATION	2.588796342758592E-4	DESIGN	4.658146770550267E-5	IMPLEMENTATION	4.1116288446745785E-6	DEFECT	2.9143409007184537E-6	DOCUMENTATION	8.501497588761329E-7	TEST
// register synch; stats.connect()	WITHOUT_CLASSIFICATION	0.999989407721714	WITHOUT_CLASSIFICATION	9.398975930423393E-6	DESIGN	1.1123539541827723E-6	IMPLEMENTATION	3.7953207857325574E-8	DEFECT	3.388574381170822E-8	DOCUMENTATION	9.10944985916758E-9	TEST
//noncritical, swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.9999881084063031	WITHOUT_CLASSIFICATION	1.1595303603689527E-5	DESIGN	1.503190426722234E-7	DEFECT	8.862617992100176E-8	IMPLEMENTATION	3.786424944778376E-8	DOCUMENTATION	1.948062114466382E-8	TEST
// calls executeBatch()	WITHOUT_CLASSIFICATION	0.9999993414296048	WITHOUT_CLASSIFICATION	3.8322080448758453E-7	DEFECT	2.406735886055128E-7	DESIGN	2.3910989378501796E-8	IMPLEMENTATION	8.544633692741221E-9	DOCUMENTATION	2.220378955105099E-9	TEST
//no big deal	WITHOUT_CLASSIFICATION	0.9999882002206905	WITHOUT_CLASSIFICATION	6.417994541722032E-6	DESIGN	2.6835459037827008E-6	IMPLEMENTATION	2.002802821396651E-6	DEFECT	6.50545293762754E-7	DOCUMENTATION	4.4890748656012996E-8	TEST
// no big deal	WITHOUT_CLASSIFICATION	0.9999660752904398	WITHOUT_CLASSIFICATION	2.0790652738784027E-5	IMPLEMENTATION	1.1824945916987197E-5	DESIGN	9.002340417029722E-7	DEFECT	3.850835649742216E-7	DOCUMENTATION	2.3793297638638254E-8	TEST
// no big deal	WITHOUT_CLASSIFICATION	0.9999660752904398	WITHOUT_CLASSIFICATION	2.0790652738784027E-5	IMPLEMENTATION	1.1824945916987197E-5	DESIGN	9.002340417029722E-7	DEFECT	3.850835649742216E-7	DOCUMENTATION	2.3793297638638254E-8	TEST
// sybase driver (jConnect) throwing NPE here in certain // cases, but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.9999991176409907	WITHOUT_CLASSIFICATION	3.700603981634826E-7	DEFECT	3.345865065611862E-7	DESIGN	1.031515298703925E-7	IMPLEMENTATION	6.852294126688836E-8	TEST	6.037633560865011E-9	DOCUMENTATION
// see explanation above...	WITHOUT_CLASSIFICATION	0.9999950751140433	WITHOUT_CLASSIFICATION	3.286319828293504E-6	DEFECT	1.4304486988400885E-6	DESIGN	1.4413923011454776E-7	DOCUMENTATION	5.016853977638963E-8	IMPLEMENTATION	1.3809659772341109E-8	TEST
// If we are in the process of releasing, no sense // checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.9999996821466596	WITHOUT_CLASSIFICATION	2.134641948194742E-7	DEFECT	9.643893554017965E-8	DESIGN	6.96979343241171E-9	DOCUMENTATION	8.155994157143605E-10	TEST	1.6481738931450613E-10	IMPLEMENTATION
// EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999494672316407	WITHOUT_CLASSIFICATION	1.773914155413038E-5	DEFECT	1.622586382588968E-5	IMPLEMENTATION	1.50787380804942E-5	DESIGN	9.042828776933991E-7	DOCUMENTATION	5.847420211735862E-7	TEST
// ResultSet impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999939149860033	WITHOUT_CLASSIFICATION	2.7728519562986085E-5	DESIGN	1.884763564577824E-5	IMPLEMENTATION	1.3229198363056417E-5	DEFECT	9.754609567099219E-7	TEST	6.932543844523442E-8	DOCUMENTATION
// ResultSet impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999618828751212	WITHOUT_CLASSIFICATION	1.7050767171122288E-5	DESIGN	1.496979458109671E-5	IMPLEMENTATION	3.7603885133637703E-6	TEST	2.2871225228711364E-6	DEFECT	4.9052090260899466E-8	DOCUMENTATION
// refer to comment in StatefulPersistenceContext.addCollection()	WITHOUT_CLASSIFICATION	0.99999903847352	WITHOUT_CLASSIFICATION	5.597709020711922E-7	DESIGN	1.9409924629099493E-7	DEFECT	1.8928881506823452E-7	IMPLEMENTATION	1.7296516228473728E-8	DOCUMENTATION	1.071000446682889E-9	TEST
// ConnectionManager.Callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9949514010669495	WITHOUT_CLASSIFICATION	0.004510574913336918	IMPLEMENTATION	3.8857657381563115E-4	DESIGN	1.4788819866455306E-4	DEFECT	1.3870041397875658E-6	DOCUMENTATION	1.722430936495727E-7	TEST
// Note : success = false, because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.9998804916846926	WITHOUT_CLASSIFICATION	1.1593344281819295E-4	IMPLEMENTATION	3.1266064799316123E-6	DESIGN	3.665099815623015E-7	DEFECT	6.464320287327961E-8	DOCUMENTATION	1.711282478587173E-8	TEST
// we already have a callback registered; either a local // (org.hibernate.Transaction) transaction has accepted // callback responsibilities, or we have previously // registered a transaction synch.	WITHOUT_CLASSIFICATION	0.9999965818303092	WITHOUT_CLASSIFICATION	3.3899500524575823E-6	DESIGN	2.1834938467227632E-8	DEFECT	5.7512601197617335E-9	IMPLEMENTATION	5.685114511701732E-10	DOCUMENTATION	6.492835486168549E-11	TEST
// the configured transaction-factory says it only supports // local callback mode, so no sense attempting to register a // JTA Synchronization	WITHOUT_CLASSIFICATION	0.9999496477511218	WITHOUT_CLASSIFICATION	5.0278251833176907E-5	DESIGN	5.7515462118148924E-8	DEFECT	1.0730979803087019E-8	IMPLEMENTATION	5.657031608218579E-9	DOCUMENTATION	9.357134244171113E-11	TEST
// transactions marked for rollback-only cause some TM impls to throw exceptions	WITHOUT_CLASSIFICATION	0.9999124976641526	WITHOUT_CLASSIFICATION	7.892522260676533E-5	IMPLEMENTATION	8.405495197782143E-6	DEFECT	1.3990524501130482E-7	DESIGN	2.2694898578743758E-8	DOCUMENTATION	9.017899397462729E-9	TEST
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999987659209657	WITHOUT_CLASSIFICATION	9.095149778001787E-7	DEFECT	2.5185727921511223E-7	DESIGN	4.5924925107447766E-8	IMPLEMENTATION	2.1064454525597203E-8	DOCUMENTATION	5.7173977317474965E-9	TEST
//postInitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.9999995575826388	WITHOUT_CLASSIFICATION	2.621457242338424E-7	DEFECT	1.4902526358735708E-7	IMPLEMENTATION	2.495187705850764E-8	DESIGN	3.375037003979227E-9	DOCUMENTATION	2.91945943810688E-9	TEST
// cannot handle single quotes	WITHOUT_CLASSIFICATION	0.999991705963161	WITHOUT_CLASSIFICATION	3.980457214266099E-6	DEFECT	3.1593712531302584E-6	IMPLEMENTATION	8.438456256323235E-7	DESIGN	2.743478846840403E-7	TEST	3.601486128945386E-8	DOCUMENTATION
// todo : for 4.0 //	WITHOUT_CLASSIFICATION	0.9961673589189279	WITHOUT_CLASSIFICATION	0.002162457632379825	DESIGN	0.0015585387185869308	DEFECT	8.726313507860251E-5	IMPLEMENTATION	2.0003438337123504E-5	TEST	4.3781566896691185E-6	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999922430113712	WITHOUT_CLASSIFICATION	7.70245720091893E-6	DESIGN	4.268320909980352E-8	TEST	9.712425808283039E-9	DEFECT	1.6299315000178003E-9	IMPLEMENTATION	5.05861388441924E-10	DOCUMENTATION
// don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.9999850474909825	WITHOUT_CLASSIFICATION	9.93874293768507E-6	DESIGN	4.672737905869662E-6	DEFECT	2.5666310988228447E-7	IMPLEMENTATION	5.104250085989439E-8	DOCUMENTATION	3.3322563128750487E-8	TEST
// don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.9999696862089864	WITHOUT_CLASSIFICATION	1.9451518497125074E-5	DESIGN	1.0394196125251382E-5	DEFECT	3.0844753929780525E-7	IMPLEMENTATION	1.1166820877062085E-7	DOCUMENTATION	4.7960643126325346E-8	TEST
// position cursor to the last row	WITHOUT_CLASSIFICATION	0.9999999298719774	WITHOUT_CLASSIFICATION	3.2825472862718855E-8	IMPLEMENTATION	1.9563056518436593E-8	DESIGN	1.3368627060738114E-8	DEFECT	4.129177800846316E-9	DOCUMENTATION	2.4168835525232807E-10	TEST
// sequentially read the result set in reverse until we recognize // a change in the key value.  At that point, we are pointed at // the last physical sequential row for the logical row in which // we are interested in processing	WITHOUT_CLASSIFICATION	0.9999999993550335	WITHOUT_CLASSIFICATION	5.291178796280694E-10	DEFECT	8.184918505474185E-11	DESIGN	1.688412523989953E-11	TEST	1.262320772194817E-11	DOCUMENTATION	4.49219197281468E-12	IMPLEMENTATION
// Read backwards until we read past the first physical sequential // row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.9999885818508488	WITHOUT_CLASSIFICATION	1.1295358747977488E-5	DEFECT	9.017318067830888E-8	TEST	3.2001982494742454E-8	IMPLEMENTATION	3.807708286655465E-10	DOCUMENTATION	2.3446929445392817E-10	DESIGN
// Finally, read ahead one row to position result set cursor // at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.9998890908307208	WITHOUT_CLASSIFICATION	7.232684322017509E-5	DESIGN	3.748376747027767E-5	DEFECT	7.904535285974123E-7	IMPLEMENTATION	1.7891704878441895E-7	TEST	1.2918801133572298E-7	DOCUMENTATION
// now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.9999970137352729	WITHOUT_CLASSIFICATION	2.983049010832686E-6	DESIGN	2.849983559874929E-9	TEST	2.412730419872899E-10	IMPLEMENTATION	9.284469853819302E-11	DEFECT	3.1614953066621344E-11	DOCUMENTATION
// force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.999992640088716	WITHOUT_CLASSIFICATION	7.142613821972053E-6	DESIGN	1.64529830119613E-7	IMPLEMENTATION	2.951719539466765E-8	DEFECT	1.4809556124316278E-8	TEST	8.440880302117606E-9	DOCUMENTATION
// this is equivalent to the old behavior...	WITHOUT_CLASSIFICATION	0.9999533600824548	WITHOUT_CLASSIFICATION	4.3905949967227515E-5	DESIGN	2.6773422310733575E-6	DEFECT	3.138689220429768E-8	TEST	2.0959811070006793E-8	DOCUMENTATION	4.278643582584162E-9	IMPLEMENTATION
//if null, owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.9999623578746092	WITHOUT_CLASSIFICATION	2.0800071808393735E-5	DEFECT	1.5762627852173608E-5	DESIGN	1.0007599591412594E-6	IMPLEMENTATION	5.729788344111361E-8	TEST	2.136788761649123E-8	DOCUMENTATION
//final String queryString, 	WITHOUT_CLASSIFICATION	0.9995216231630204	WITHOUT_CLASSIFICATION	4.583808487237183E-4	DESIGN	1.7999322121858282E-5	DEFECT	1.0970761029031124E-6	DOCUMENTATION	4.998617147437704E-7	TEST	3.9972831625164684E-7	IMPLEMENTATION
// if it was a reference to self, don't need to nullify // unless we are using native id generation, in which // case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.9999999994200549	WITHOUT_CLASSIFICATION	2.872348137445275E-10	DESIGN	2.6362503700668605E-10	DEFECT	2.078134885127679E-11	DOCUMENTATION	8.302651936630196E-12	TEST	1.1619069363833383E-15	IMPLEMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9999235200248057	WITHOUT_CLASSIFICATION	6.909316818714193E-5	DESIGN	5.468946979291558E-6	IMPLEMENTATION	1.1598668500883302E-6	TEST	4.6490406338441654E-7	DOCUMENTATION	2.9308911444483725E-7	DEFECT
// in an effort to avoid concurrent-modification-exceptions (from // potential recursive calls back through here as a result of the // eventual call to PersistentCollection#endRead), we scan the // internal loadingCollections map for matches and store those matches // in a temp collection.  the temp collection is then used to "drive" // the #endRead processing.	WITHOUT_CLASSIFICATION	0.9999999953296743	WITHOUT_CLASSIFICATION	4.145274822740606E-9	DEFECT	5.224786613270003E-10	DESIGN	2.337914575764185E-12	TEST	2.2918331052158787E-13	DOCUMENTATION	5.1167388706281256E-15	IMPLEMENTATION
//we can reuse it for each row	WITHOUT_CLASSIFICATION	0.999999790861065	WITHOUT_CLASSIFICATION	1.7929485080376516E-7	DESIGN	2.4865044146974052E-8	DEFECT	2.186591805205935E-9	DOCUMENTATION	2.019150801088803E-9	IMPLEMENTATION	7.732973863479612E-10	TEST
//can't reuse in this case	WITHOUT_CLASSIFICATION	0.9994838539650331	WITHOUT_CLASSIFICATION	5.016285931408684E-4	DESIGN	1.3565903545013246E-5	DEFECT	7.320281447389025E-7	DOCUMENTATION	1.1437041193946639E-7	IMPLEMENTATION	1.0513972440299712E-7	TEST
// First we need to suspend any current JTA transaction and obtain // a JDBC connection	WITHOUT_CLASSIFICATION	0.9996751272753843	WITHOUT_CLASSIFICATION	2.0331142872064445E-4	IMPLEMENTATION	6.545462908507184E-5	DESIGN	5.5784129811995984E-5	DOCUMENTATION	3.019564455634761E-7	DEFECT	2.058055244278099E-8	TEST
//getResultList(results);	WITHOUT_CLASSIFICATION	0.9999497547312965	WITHOUT_CLASSIFICATION	4.836081729029391E-5	DEFECT	9.54303614240109E-7	DESIGN	7.985439608096255E-7	TEST	9.103774113396314E-8	IMPLEMENTATION	4.056609698518909E-8	DOCUMENTATION
//if we only returned one entity, query by key is more efficient	WITHOUT_CLASSIFICATION	0.9929502279820848	WITHOUT_CLASSIFICATION	0.00703930042056123	DESIGN	8.671953180007933E-6	DEFECT	9.733098070120416E-7	IMPLEMENTATION	6.305695162801933E-7	TEST	1.9576485074866758E-7	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999996535145074	WITHOUT_CLASSIFICATION	1.6405360429755086E-7	DESIGN	1.2764889548310227E-7	DEFECT	5.4533575996812636E-8	IMPLEMENTATION	2.246857079370855E-10	DOCUMENTATION	2.4731081459985505E-11	TEST
// handle empty collection	WITHOUT_CLASSIFICATION	0.999320566530277	WITHOUT_CLASSIFICATION	5.998257160663534E-4	DESIGN	7.078944799446591E-5	IMPLEMENTATION	8.482790640444402E-6	DEFECT	2.1652827753342285E-7	DOCUMENTATION	1.1898674425247349E-7	TEST
// else no collection element, but also no owner	WITHOUT_CLASSIFICATION	0.9999999622710233	WITHOUT_CLASSIFICATION	2.339971428289268E-8	IMPLEMENTATION	1.0669164016408678E-8	DESIGN	2.9474132596462507E-9	DEFECT	6.662049073973551E-10	DOCUMENTATION	4.6480133306281894E-11	TEST
//handle empty collections	WITHOUT_CLASSIFICATION	0.999910716438252	WITHOUT_CLASSIFICATION	7.545200762268834E-5	IMPLEMENTATION	1.3518539953051368E-5	DESIGN	2.2895034296565802E-7	DEFECT	5.026973970567388E-8	DOCUMENTATION	3.379408950279609E-8	TEST
// else this is not a collection initializer (and empty collections will // be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.999994071090742	WITHOUT_CLASSIFICATION	4.545978341632684E-6	DESIGN	1.3729078289681274E-6	DEFECT	8.856646929315376E-9	IMPLEMENTATION	1.153768757430868E-9	TEST	1.267173148198048E-11	DOCUMENTATION
// validate() instances of Validatable	WITHOUT_CLASSIFICATION	0.9999836539138672	WITHOUT_CLASSIFICATION	6.541083761849659E-6	IMPLEMENTATION	6.530973976763663E-6	DEFECT	3.212069720890843E-6	DESIGN	4.2777163380658316E-8	DOCUMENTATION	1.9181509890996728E-8	TEST
// if we know there is exactly 1 row, we can skip. // it would be great if we could _always_ skip this; // it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.5763670737633929	WITHOUT_CLASSIFICATION	0.4093501539170945	DESIGN	0.013992705739795509	DEFECT	2.600953053704565E-4	IMPLEMENTATION	2.799249623109544E-5	TEST	1.978778115450262E-6	DOCUMENTATION
// remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.9998492614507807	WITHOUT_CLASSIFICATION	1.5072358670384722E-4	DESIGN	1.412001109166815E-8	DEFECT	5.171924035336922E-10	IMPLEMENTATION	1.928645151249381E-10	TEST	1.3244753189270781E-10	DOCUMENTATION
//null version means the object is in the process of being loaded somewhere else in the ResultSet	WITHOUT_CLASSIFICATION	0.9999935563732026	WITHOUT_CLASSIFICATION	5.866656369770401E-6	DESIGN	5.691475800568856E-7	DEFECT	3.9803790968838625E-9	DOCUMENTATION	2.7449504040638654E-9	TEST	1.097518025045152E-9	IMPLEMENTATION
//problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.9998311821429433	WITHOUT_CLASSIFICATION	9.078494887502231E-5	DEFECT	7.265936031841544E-5	DESIGN	3.0049954612408267E-6	IMPLEMENTATION	2.077745886437104E-6	DOCUMENTATION	2.90806515485547E-7	TEST
//use the id passed in	WITHOUT_CLASSIFICATION	0.9999979884171761	WITHOUT_CLASSIFICATION	1.6779803512867988E-6	DESIGN	1.866371317619272E-7	IMPLEMENTATION	7.378316964118915E-8	DOCUMENTATION	4.605946993841132E-8	TEST	2.712270116508286E-8	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.999991466626628	WITHOUT_CLASSIFICATION	5.8730680503065265E-6	DESIGN	1.3757342786101952E-6	DEFECT	6.827744585262511E-7	DOCUMENTATION	3.8416345422771443E-7	IMPLEMENTATION	2.176331304151002E-7	TEST
// prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.9999854223022353	WITHOUT_CLASSIFICATION	8.424933019164456E-6	DESIGN	5.570590376286415E-6	DEFECT	4.903107359751262E-7	IMPLEMENTATION	8.062840389081767E-8	DOCUMENTATION	1.1235229199296208E-8	TEST
//no point doing this if NONE was requested	WITHOUT_CLASSIFICATION	0.9999696082586296	WITHOUT_CLASSIFICATION	2.8905502146761867E-5	TEST	1.4005707794073387E-6	DESIGN	3.344762671459069E-8	DEFECT	2.7412214393177864E-8	DOCUMENTATION	2.480860309566768E-8	IMPLEMENTATION
//If the object is already loaded, return the loaded one	WITHOUT_CLASSIFICATION	0.9999184571348186	WITHOUT_CLASSIFICATION	4.2720527376345676E-5	IMPLEMENTATION	3.5336622545803525E-5	DESIGN	3.3892940551345635E-6	DEFECT	6.140804993492814E-8	DOCUMENTATION	3.5013153968404725E-8	TEST
//its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.9999966869077938	WITHOUT_CLASSIFICATION	1.7038807397114679E-6	DESIGN	1.002690856500491E-6	DEFECT	2.563775882534747E-7	TEST	1.8063899277921777E-7	IMPLEMENTATION	1.6950402899680725E-7	DOCUMENTATION
// cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.9998323805454037	WITHOUT_CLASSIFICATION	1.549718803703821E-4	DESIGN	1.2138279943195206E-5	IMPLEMENTATION	2.6192909904632654E-7	DOCUMENTATION	1.8800734368170013E-7	DEFECT	5.9357840056128145E-8	TEST
//the load() which takes an entity does not pass an entityName	WITHOUT_CLASSIFICATION	0.9999940254549055	WITHOUT_CLASSIFICATION	3.682961003769199E-6	DEFECT	1.1088044425863784E-6	DESIGN	1.0018982208687305E-6	TEST	1.1285490242809748E-7	DOCUMENTATION	6.802652486094914E-8	IMPLEMENTATION
//we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.9999959907820444	WITHOUT_CLASSIFICATION	2.381415392289099E-6	IMPLEMENTATION	1.2482855651143416E-6	DEFECT	2.5482563909898625E-7	DOCUMENTATION	9.579901666295861E-8	DESIGN	2.8892342482317373E-8	TEST
// look for a proxy	WITHOUT_CLASSIFICATION	0.999993519061445	WITHOUT_CLASSIFICATION	5.2579463520896615E-6	DESIGN	9.857372723117075E-7	DEFECT	2.1792837240379952E-7	IMPLEMENTATION	1.1076117906789264E-8	DOCUMENTATION	8.250440241793318E-9	TEST
//we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.9699375566216771	WITHOUT_CLASSIFICATION	0.025995523581369404	IMPLEMENTATION	0.0024407845202202853	DESIGN	0.0015239082014861889	TEST	9.909441816166653E-5	DOCUMENTATION	3.132657085484524E-6	DEFECT
//its the given optional object	WITHOUT_CLASSIFICATION	0.9999941154913615	WITHOUT_CLASSIFICATION	2.5149248717905684E-6	IMPLEMENTATION	2.0267980853768542E-6	DESIGN	8.838620527544981E-7	DOCUMENTATION	4.2576202860486434E-7	DEFECT	3.3161600015165775E-8	TEST
// instantiate a new instance	WITHOUT_CLASSIFICATION	0.9999628587944607	WITHOUT_CLASSIFICATION	3.708024570265035E-5	DESIGN	4.1661640759043506E-8	DEFECT	1.7276077360321314E-8	DOCUMENTATION	1.7410836592223207E-9	TEST	2.8103495194540817E-10	IMPLEMENTATION
//need to hydrate it.	WITHOUT_CLASSIFICATION	0.9971054331723403	WITHOUT_CLASSIFICATION	0.00278183238767797	DESIGN	4.8661476418498646E-5	TEST	4.239153201308652E-5	IMPLEMENTATION	1.761709081730245E-5	DOCUMENTATION	4.064340732906004E-6	DEFECT
// return a newly loaded object	WITHOUT_CLASSIFICATION	0.999973036503827	WITHOUT_CLASSIFICATION	2.6849382890901256E-5	DESIGN	1.1187781026798353E-7	DEFECT	1.7976818958006019E-9	DOCUMENTATION	2.2106330820261004E-10	IMPLEMENTATION	2.1672664463655117E-10	TEST
//will be ignored, using the existing Entry instead	WITHOUT_CLASSIFICATION	0.9999993394058231	WITHOUT_CLASSIFICATION	6.37310147489428E-7	DESIGN	1.3570148291226614E-8	IMPLEMENTATION	6.665514326481844E-9	DEFECT	1.883160344468825E-9	DOCUMENTATION	1.1652064004420346E-9	TEST
// key is an entity involved with the operation performed by the listener; // value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.9999999973598921	WITHOUT_CLASSIFICATION	2.1074337375035347E-9	DESIGN	2.684706094439435E-10	TEST	2.619359631015717E-10	DEFECT	1.6753273271767425E-12	IMPLEMENTATION	5.923731662499475E-13	DOCUMENTATION
//materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.9997046741011518	WITHOUT_CLASSIFICATION	2.840154854188881E-4	DESIGN	5.028992842504011E-6	IMPLEMENTATION	3.78210215547886E-6	DOCUMENTATION	1.941346044792369E-6	TEST	5.57972386646677E-7	DEFECT
// Get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.9999994632211722	WITHOUT_CLASSIFICATION	5.3299308397126E-7	DESIGN	2.2795694740729353E-9	TEST	6.098750153885668E-10	IMPLEMENTATION	4.633452122062552E-10	DOCUMENTATION	4.329541443026498E-10	DEFECT
// ok in normal Hibernate usage to delete a detached entity; JPA however // forbids it, thus this is a hook for HEM to affect this behavior	WITHOUT_CLASSIFICATION	0.9998911266025562	WITHOUT_CLASSIFICATION	7.730944561759636E-5	DESIGN	3.153870157761921E-5	DEFECT	1.80307218866604E-8	IMPLEMENTATION	6.885876927291744E-9	DOCUMENTATION	3.3364981681280765E-10	TEST
// the entry will be removed after the flush, and will no longer // override the stale snapshot // This is now handled by removeEntity() in EntityDeleteAction //persistenceContext.removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9999979129206052	WITHOUT_CLASSIFICATION	1.592747719387071E-6	DEFECT	4.93284871640261E-7	DESIGN	1.0278423932294131E-9	IMPLEMENTATION	1.0492274277879013E-11	DOCUMENTATION	8.46898682622932E-12	TEST
//addInitializedCollection(collection, persister, id);	WITHOUT_CLASSIFICATION	0.9999993857767666	WITHOUT_CLASSIFICATION	5.285570604068169E-7	IMPLEMENTATION	3.878339935743459E-8	DEFECT	2.896658479071957E-8	DESIGN	9.04012145428989E-9	DOCUMENTATION	8.876067311745587E-9	TEST
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999562415465948	WITHOUT_CLASSIFICATION	1.579202200741501E-5	DESIGN	1.5548930029786993E-5	IMPLEMENTATION	9.971529828453265E-6	DEFECT	1.597265590381826E-6	DOCUMENTATION	8.487059492163494E-7	TEST
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999562415465948	WITHOUT_CLASSIFICATION	1.579202200741501E-5	DESIGN	1.5548930029786993E-5	IMPLEMENTATION	9.971529828453265E-6	DEFECT	1.597265590381826E-6	DOCUMENTATION	8.487059492163494E-7	TEST
/*|| oj.getJoinable().consumesCollectionAlias() */	WITHOUT_CLASSIFICATION	0.9999998627919179	WITHOUT_CLASSIFICATION	5.98089682343265E-8	IMPLEMENTATION	2.6682928991881128E-8	DESIGN	2.616437408439892E-8	DEFECT	1.850193188387725E-8	DOCUMENTATION	6.049878998967236E-9	TEST
// here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.9980908885553091	WITHOUT_CLASSIFICATION	0.0019087319792480367	DESIGN	2.3750334165977633E-7	TEST	5.5158236274720286E-8	DEFECT	4.7376300900316266E-8	IMPLEMENTATION	3.94275640359552E-8	DOCUMENTATION
// Code to handle subclasses of topClass	WITHOUT_CLASSIFICATION	0.9999256657282681	WITHOUT_CLASSIFICATION	7.33378711785416E-5	DESIGN	8.658958533802058E-7	DEFECT	7.390732814797736E-8	IMPLEMENTATION	3.774890149283412E-8	TEST	1.8848470356163394E-8	DOCUMENTATION
//woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.9980133008700418	WITHOUT_CLASSIFICATION	0.0019851195542722818	DESIGN	1.2799099206665734E-6	DEFECT	2.0818538668765505E-7	DOCUMENTATION	5.4402137980942775E-8	TEST	3.707824077073386E-8	IMPLEMENTATION
// we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.9999995253883158	WITHOUT_CLASSIFICATION	3.0652645346664964E-7	DEFECT	1.522090238615963E-7	DESIGN	1.2906840671524445E-8	IMPLEMENTATION	2.3561070461275254E-9	DOCUMENTATION	6.132593358919564E-10	TEST
// we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.9993403898730896	WITHOUT_CLASSIFICATION	6.351494785661904E-4	DESIGN	2.3505748574304593E-5	IMPLEMENTATION	7.670193866023425E-7	TEST	9.421265804643128E-8	DOCUMENTATION	9.366772536383162E-8	DEFECT
// synchronized to avoid multi-thread access issues; defined as method synch to avoid // potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.9999958758551148	WITHOUT_CLASSIFICATION	4.113966351826889E-6	DESIGN	8.438272087233746E-9	DEFECT	1.2906928012465582E-9	DOCUMENTATION	4.3785549701569565E-10	TEST	1.1712853755953827E-11	IMPLEMENTATION
// Allows various loaders (ok mainly the QueryLoader :) to check // whether scrolling of their result set should be allowed. // // By default it is allowed.	WITHOUT_CLASSIFICATION	0.9999989703285365	WITHOUT_CLASSIFICATION	6.530656241724721E-7	DEFECT	3.6086799874363417E-7	IMPLEMENTATION	1.031380262016897E-8	TEST	5.0164939998935836E-9	DESIGN	4.075439986617918E-10	DOCUMENTATION
//before adding to collection!	WITHOUT_CLASSIFICATION	0.999777099461938	WITHOUT_CLASSIFICATION	1.2987984870073277E-4	DESIGN	6.576067596557442E-5	DEFECT	2.528909835491328E-5	IMPLEMENTATION	1.1938248037618231E-6	DOCUMENTATION	7.770902369916236E-7	TEST
// if the current depth is 0, the root thing being loaded is the // many-to-many collection itself.  Here, it is alright to use // an inner join...	WITHOUT_CLASSIFICATION	0.9999981420218279	WITHOUT_CLASSIFICATION	1.8388749087715165E-6	DESIGN	1.309587702089904E-8	DEFECT	3.919004101393754E-9	TEST	1.7702518988236252E-9	IMPLEMENTATION	3.1813040031966233E-10	DOCUMENTATION
//operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.9999999226315577	WITHOUT_CLASSIFICATION	2.7267647718067767E-8	DESIGN	2.6934617166166844E-8	IMPLEMENTATION	2.0649052674338224E-8	DEFECT	2.3182886548036684E-9	DOCUMENTATION	1.9883610438162544E-10	TEST
// simple, because we can't have a one-to-one or a collection  // (or even a property-ref) in a composite-element:	WITHOUT_CLASSIFICATION	0.9999998540443602	WITHOUT_CLASSIFICATION	1.3783473913118017E-7	DEFECT	6.683787137051666E-9	DESIGN	1.17243320190662E-9	IMPLEMENTATION	2.360548409282642E-10	DOCUMENTATION	2.8625424562251733E-11	TEST
//a composite key	WITHOUT_CLASSIFICATION	0.9999972614806605	WITHOUT_CLASSIFICATION	2.570218881066174E-6	DESIGN	6.959964354971389E-8	IMPLEMENTATION	6.12493351877319E-8	DEFECT	2.3785343054390753E-8	DOCUMENTATION	1.3666136714559949E-8	TEST
// if no batch, use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.9999997849853338	WITHOUT_CLASSIFICATION	2.1246621237420758E-7	DESIGN	1.148600424507916E-9	DEFECT	9.156246268187516E-10	DOCUMENTATION	3.494868250773471E-10	IMPLEMENTATION	1.3474196495247641E-10	TEST
//it must be a collection fetch	WITHOUT_CLASSIFICATION	0.9998960698566711	WITHOUT_CLASSIFICATION	1.0339010776179201E-4	DESIGN	3.022974311218452E-7	DEFECT	1.660702504808808E-7	IMPLEMENTATION	5.4077328076184255E-8	TEST	1.7590557536056976E-8	DOCUMENTATION
// needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.5436335637312105	WITHOUT_CLASSIFICATION	0.3195261955847723	DESIGN	0.13598523971582221	IMPLEMENTATION	4.3209187713722993E-4	DOCUMENTATION	2.977589873453168E-4	DEFECT	1.2515010371239558E-4	TEST
/*&& etype.isReferenceToPrimaryKey()*/	WITHOUT_CLASSIFICATION	0.9999883010130024	WITHOUT_CLASSIFICATION	7.147631874411683E-6	DESIGN	2.8537498081568605E-6	IMPLEMENTATION	1.4350194857653301E-6	DEFECT	2.414783012588408E-7	DOCUMENTATION	2.1107527981811666E-8	TEST
// it might still need to apply a collection ordering based on a // many-to-many defined order-by...	WITHOUT_CLASSIFICATION	0.9930080983095794	WITHOUT_CLASSIFICATION	0.0035112571217451463	DEFECT	0.003430657515983658	IMPLEMENTATION	4.5097909578551704E-5	DESIGN	3.159698749180277E-6	TEST	1.7294443640480756E-6	DOCUMENTATION
// if a composite key, use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching //TODO: unnecessary for databases with ANSI-style joins	WITHOUT_CLASSIFICATION	0.982661859743937	WITHOUT_CLASSIFICATION	0.00993086477557946	IMPLEMENTATION	0.007393045389522994	DESIGN	7.926524381998125E-6	DEFECT	5.807485093446752E-6	TEST	4.960814850032337E-7	DOCUMENTATION
// belong to other persister // belong to other persister	WITHOUT_CLASSIFICATION	0.9999868555111051	WITHOUT_CLASSIFICATION	1.3055573903362809E-5	DESIGN	4.933429397232771E-8	IMPLEMENTATION	3.3353113963278505E-8	TEST	5.33686851933995E-9	DEFECT	8.907152500570472E-10	DOCUMENTATION
// we found it	WITHOUT_CLASSIFICATION	0.9999789298000628	WITHOUT_CLASSIFICATION	1.886515101786114E-5	DESIGN	1.8596251553488893E-6	DEFECT	1.9114598514859195E-7	IMPLEMENTATION	1.1863783576466418E-7	DOCUMENTATION	3.563994303511976E-8	TEST
//we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.9999442969215842	WITHOUT_CLASSIFICATION	5.558856711891677E-5	DESIGN	9.225799914370737E-8	DOCUMENTATION	9.868525103285965E-9	DEFECT	7.3282802825221025E-9	IMPLEMENTATION	5.056492386075045E-9	TEST
//disable a join back to this same association	WITHOUT_CLASSIFICATION	0.9995216568080703	WITHOUT_CLASSIFICATION	4.5711423033636733E-4	DESIGN	1.6638858750963073E-5	DOCUMENTATION	3.065050259074424E-6	DEFECT	1.0690875161580209E-6	TEST	4.559650672518932E-7	IMPLEMENTATION
//NOTE: unlike all other Loaders, this one is NOT //      multithreaded, or cacheable!!	WITHOUT_CLASSIFICATION	0.9220125701454086	WITHOUT_CLASSIFICATION	0.07788144972996756	DESIGN	5.279651013973839E-5	IMPLEMENTATION	3.929809041038174E-5	TEST	1.3505060422279048E-5	DEFECT	3.8046365144748424E-7	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999999970669846	WITHOUT_CLASSIFICATION	1.9220777800245E-9	DEFECT	5.477833328618979E-10	DOCUMENTATION	4.500368574391632E-10	DESIGN	9.754747102255506E-12	TEST	3.3628118065733573E-12	IMPLEMENTATION
//root entity comes *last*	WITHOUT_CLASSIFICATION	0.9972972703111715	WITHOUT_CLASSIFICATION	0.002696224981265346	DESIGN	6.039992582061938E-6	DEFECT	2.9534722884333603E-7	TEST	1.4142489215275876E-7	DOCUMENTATION	2.7942860224170263E-8	IMPLEMENTATION
//deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.9999991330935764	WITHOUT_CLASSIFICATION	4.281593040805505E-7	IMPLEMENTATION	2.1848052804564154E-7	DESIGN	2.0534396027429447E-7	DEFECT	1.2420058128163427E-8	DOCUMENTATION	2.5025732346114195E-9	TEST
//alias may be null //EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999888282430262	WITHOUT_CLASSIFICATION	6.24788024864387E-6	DEFECT	3.3355584803543398E-6	IMPLEMENTATION	1.4657317137705566E-6	DESIGN	7.984514706935298E-8	DOCUMENTATION	4.2741384088972065E-8	TEST
// if it is a compound path	WITHOUT_CLASSIFICATION	0.9999920039090746	WITHOUT_CLASSIFICATION	7.92690511811955E-6	DESIGN	3.084627009323391E-8	IMPLEMENTATION	1.9301752972017764E-8	TEST	1.7940041559511147E-8	DEFECT	1.0977425680406075E-9	DOCUMENTATION
// otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.9998005856091151	WITHOUT_CLASSIFICATION	1.9415785559093575E-4	DESIGN	5.1470535569898214E-6	IMPLEMENTATION	8.303632278222146E-8	TEST	1.3527966490582486E-8	DEFECT	1.2917447614379097E-8	DOCUMENTATION
// if its the root criteria, we are done	WITHOUT_CLASSIFICATION	0.9999952179494772	WITHOUT_CLASSIFICATION	4.742711389158685E-6	DESIGN	1.985065235048201E-8	TEST	1.6148680091138318E-8	DEFECT	1.8342416303736475E-9	IMPLEMENTATION	1.505559511109088E-9	DOCUMENTATION
// otherwise, recurse	WITHOUT_CLASSIFICATION	0.9997678111151617	WITHOUT_CLASSIFICATION	2.2381958732750731E-4	DESIGN	8.116825651985195E-6	IMPLEMENTATION	9.214436840877608E-8	DEFECT	8.856850273046566E-8	DOCUMENTATION	7.175898766385038E-8	TEST
//the criteria instance	WITHOUT_CLASSIFICATION	0.99985909998029	WITHOUT_CLASSIFICATION	1.4038413664312373E-4	DESIGN	3.100477355535858E-7	DEFECT	1.1493768430249844E-7	DOCUMENTATION	7.20091453681486E-8	IMPLEMENTATION	1.8888501785089452E-8	TEST
// the entity name	WITHOUT_CLASSIFICATION	0.9999355223739291	WITHOUT_CLASSIFICATION	6.130263025474343E-5	DESIGN	1.8864470495741703E-6	DEFECT	9.199874975692743E-7	IMPLEMENTATION	2.5558481230588986E-7	DOCUMENTATION	1.1297645672389599E-7	TEST
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9995257299009218	WITHOUT_CLASSIFICATION	4.682000637880149E-4	DESIGN	2.473397768184767E-6	DEFECT	1.5817217387054066E-6	IMPLEMENTATION	1.3831643090758257E-6	TEST	6.317514742169962E-7	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9995257299009218	WITHOUT_CLASSIFICATION	4.682000637880149E-4	DESIGN	2.473397768184767E-6	DEFECT	1.5817217387054066E-6	IMPLEMENTATION	1.3831643090758257E-6	TEST	6.317514742169962E-7	DOCUMENTATION
//it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.999999283465467	WITHOUT_CLASSIFICATION	4.817267496323681E-7	DEFECT	2.173781524032382E-7	DESIGN	1.3061741344300144E-8	IMPLEMENTATION	3.3433368545893548E-9	DOCUMENTATION	1.0245528054867047E-9	TEST
//should never happen, i think	WITHOUT_CLASSIFICATION	0.9995736191745069	WITHOUT_CLASSIFICATION	4.229539839802941E-4	DESIGN	2.044764021014813E-6	DEFECT	6.62902082667784E-7	DOCUMENTATION	5.927052872163123E-7	TEST	1.2647012192254557E-7	IMPLEMENTATION
// Detect discriminator values...	WITHOUT_CLASSIFICATION	0.9999928405368557	WITHOUT_CLASSIFICATION	6.17388617932686E-6	DESIGN	8.701537593383272E-7	DEFECT	4.575376357766367E-8	DOCUMENTATION	4.287653133573059E-8	TEST	2.679291078931209E-8	IMPLEMENTATION
// Convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.999945476322077	WITHOUT_CLASSIFICATION	5.110331798102748E-5	DESIGN	2.1794163348846387E-6	DEFECT	4.405885993354859E-7	IMPLEMENTATION	4.3948795896855526E-7	TEST	3.608670488610011E-7	DOCUMENTATION
// and the qualifier is not the alias of this criteria //      -> check to see if we belong to some criteria other //          than the one that created us	WITHOUT_CLASSIFICATION	0.9999999674228284	WITHOUT_CLASSIFICATION	3.251254496086681E-8	DESIGN	4.854969647814828E-11	TEST	1.0600162910474599E-11	DOCUMENTATION	3.7605048551204345E-12	IMPLEMENTATION	1.716320056536478E-12	DEFECT
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.999993646492627	WITHOUT_CLASSIFICATION	4.048164845284757E-6	DESIGN	2.1984647592928383E-6	DEFECT	9.759914354622321E-8	TEST	8.775751952761418E-9	DOCUMENTATION	5.028728186822988E-10	IMPLEMENTATION
// Otherwise, this is an ordinary value.	WITHOUT_CLASSIFICATION	0.9999963201622191	WITHOUT_CLASSIFICATION	3.1912243198776793E-6	DESIGN	4.464700149030777E-7	DEFECT	3.3290937441113014E-8	TEST	5.0766757304793116E-9	DOCUMENTATION	3.775833027055521E-9	IMPLEMENTATION
// Currently *not* cachable if autodiscover types is in effect (e.g. "select * ...")	WITHOUT_CLASSIFICATION	0.9999981265357177	WITHOUT_CLASSIFICATION	1.839363895840139E-6	DESIGN	3.392095095577053E-8	DEFECT	9.537380591495964E-11	IMPLEMENTATION	5.549229097647071E-11	TEST	2.856936614195254E-11	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// this is only needed (afaict) for ResultTransformer processing...	WITHOUT_CLASSIFICATION	0.9757809430515537	WITHOUT_CLASSIFICATION	0.022864772709942565	DESIGN	0.00111266716832381	DEFECT	2.334490604875971E-4	TEST	7.924820503410893E-6	DOCUMENTATION	2.431891888637889E-7	IMPLEMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999975263617458	WITHOUT_CLASSIFICATION	2.4622861411154867E-6	DESIGN	9.387733870049926E-9	DEFECT	9.464155517158234E-10	IMPLEMENTATION	9.262680703155682E-10	TEST	9.169563617185761E-11	DOCUMENTATION
// build an array with indices equal to the total number // of actual returns in the result Hibernate will return // for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.999999399462651	WITHOUT_CLASSIFICATION	5.371391339056903E-7	DEFECT	5.3759433383123485E-8	IMPLEMENTATION	9.309062638829354E-9	DESIGN	2.5846220491616287E-10	TEST	7.125684913508511E-11	DOCUMENTATION
// replace {....} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.9998549864221367	WITHOUT_CLASSIFICATION	1.0812055189512544E-4	DESIGN	2.0826791234454204E-5	IMPLEMENTATION	1.5015354212710713E-5	DEFECT	9.332795428475481E-7	TEST	1.1760097816594443E-7	DOCUMENTATION
// No additional open braces found in the string, append the // rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.9999791124299462	WITHOUT_CLASSIFICATION	1.433520243789032E-5	DESIGN	5.679269372296211E-6	DEFECT	7.859372004896868E-7	TEST	5.932691381332901E-8	DOCUMENTATION	2.7834129296034052E-8	IMPLEMENTATION
// apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.9997624207655414	WITHOUT_CLASSIFICATION	2.3288249619046096E-4	DESIGN	3.5975845927846046E-6	IMPLEMENTATION	9.093687287989595E-7	DEFECT	1.5923621409920412E-7	DOCUMENTATION	3.0548732466524636E-8	TEST
// it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.9999999632635056	WITHOUT_CLASSIFICATION	3.2168239818400984E-8	IMPLEMENTATION	1.8881617501263088E-9	DESIGN	1.5999685754030179E-9	DEFECT	1.0590704667771629E-9	TEST	2.1053680143306627E-11	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9979604936781911	WITHOUT_CLASSIFICATION	0.001936832978933832	DESIGN	6.76663280698767E-5	IMPLEMENTATION	2.9523691428827586E-5	DEFECT	3.945052467590773E-6	DOCUMENTATION	1.538270908739663E-6	TEST
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9979604936781911	WITHOUT_CLASSIFICATION	0.001936832978933832	DESIGN	6.76663280698767E-5	IMPLEMENTATION	2.9523691428827586E-5	DEFECT	3.945052467590773E-6	DOCUMENTATION	1.538270908739663E-6	TEST
// The current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.9999981174595649	WITHOUT_CLASSIFICATION	1.3279581312858297E-6	DESIGN	5.508453528631487E-7	DEFECT	2.7786131780335864E-9	IMPLEMENTATION	9.094744969788029E-10	DOCUMENTATION	4.8863319158470134E-11	TEST
// it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.9999987736185025	WITHOUT_CLASSIFICATION	1.1433941388218801E-6	DEFECT	7.532269847970705E-8	DESIGN	2.9076010593966288E-9	TEST	2.5763142663349132E-9	DOCUMENTATION	2.1807449699891723E-9	IMPLEMENTATION
// Possibly handle :something parameters for the query ?	WITHOUT_CLASSIFICATION	0.9905217009382926	WITHOUT_CLASSIFICATION	0.009414222922972329	DESIGN	5.7728740915629536E-5	IMPLEMENTATION	4.235480662517158E-6	TEST	1.8426832664256563E-6	DEFECT	2.6923389043496827E-7	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999971829127992	WITHOUT_CLASSIFICATION	2.804365716400512E-6	DESIGN	8.69752645151498E-9	DEFECT	2.943382225955729E-9	IMPLEMENTATION	8.884988155510321E-10	TEST	1.9207700220114676E-10	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9996866627785144	WITHOUT_CLASSIFICATION	2.588796342758592E-4	DESIGN	4.658146770550267E-5	IMPLEMENTATION	4.1116288446745785E-6	DEFECT	2.9143409007184537E-6	DOCUMENTATION	8.501497588761329E-7	TEST
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9995252471449646	WITHOUT_CLASSIFICATION	2.1165667764637853E-4	IMPLEMENTATION	1.417568992599547E-4	DESIGN	1.0360669581287213E-4	DEFECT	9.320444141291745E-6	TEST	8.412138174869058E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// Now, process the returns	WITHOUT_CLASSIFICATION	0.9999997539159624	WITHOUT_CLASSIFICATION	1.8157202400212705E-7	DESIGN	3.540313242795642E-8	IMPLEMENTATION	2.3592728552104278E-8	DEFECT	3.265334333926023E-9	DOCUMENTATION	2.250818219838118E-9	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// already been processed...	WITHOUT_CLASSIFICATION	0.9999973505595251	WITHOUT_CLASSIFICATION	2.343032699971362E-6	DESIGN	1.8012862368813035E-7	IMPLEMENTATION	6.203408115360381E-8	DEFECT	5.680504859156913E-8	DOCUMENTATION	7.4400214447072395E-9	TEST
// already been processed...	WITHOUT_CLASSIFICATION	0.9999973505595251	WITHOUT_CLASSIFICATION	2.343032699971362E-6	DESIGN	1.8012862368813035E-7	IMPLEMENTATION	6.203408115360381E-8	DEFECT	5.680504859156913E-8	DOCUMENTATION	7.4400214447072395E-9	TEST
// Make sure the owner alias is known...	WITHOUT_CLASSIFICATION	0.9999985274493295	WITHOUT_CLASSIFICATION	6.453381328785959E-7	IMPLEMENTATION	4.26953614238664E-7	DESIGN	3.609617747275903E-7	DEFECT	3.2342355050035126E-8	TEST	6.9547935383277996E-9	DOCUMENTATION
// first, break down the returns into maps keyed by alias // so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.9999879967740869	WITHOUT_CLASSIFICATION	8.36597707058642E-6	DESIGN	2.466697223917309E-6	DEFECT	1.168645509301567E-6	IMPLEMENTATION	1.5515616580335354E-9	TEST	3.5454764455746017E-10	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// If this return's alias has not been processed yet, do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.9999999332279972	WITHOUT_CLASSIFICATION	3.758091362212332E-8	DESIGN	1.3462830891442564E-8	IMPLEMENTATION	1.2953039254959746E-8	DEFECT	2.1476268172102927E-9	TEST	6.275921991208839E-10	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// for merging of versioned entities, we consider the version having // been changed only when: // 1) the two version values are different; //      *AND* // 2) The target actually represents database state! // // This second condition is a special case which allows // an entity to be merged during the same transaction // (though during a seperate operation) in which it was // originally persisted/saved	WITHOUT_CLASSIFICATION	0.9999225664444129	WITHOUT_CLASSIFICATION	7.499895198864169E-5	DESIGN	2.434167117105965E-6	DEFECT	3.707288949807545E-10	DOCUMENTATION	3.444510061861376E-11	TEST	3.130743058523392E-11	IMPLEMENTATION
// this is the second pass through on a merge op, so here we limit the // replacement to associations types (value types were already replaced // during the first pass)	WITHOUT_CLASSIFICATION	0.9693461956617833	WITHOUT_CLASSIFICATION	0.03065282785060835	DESIGN	4.0303712800036507E-7	TEST	3.712732058022479E-7	DOCUMENTATION	1.2653246625820043E-7	DEFECT	7.564480845143652E-8	IMPLEMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999566921276389	WITHOUT_CLASSIFICATION	2.1413219708215196E-5	IMPLEMENTATION	1.657790176031639E-5	DESIGN	3.5816698693999044E-6	DEFECT	1.102039311757853E-6	DOCUMENTATION	6.330417113805837E-7	TEST
// cascade-save to collections AFTER the collection owner was saved	WITHOUT_CLASSIFICATION	0.9997187114513003	WITHOUT_CLASSIFICATION	1.9733632779447594E-4	IMPLEMENTATION	7.860738929902238E-5	DESIGN	5.205457442843927E-6	DEFECT	1.251124352673116E-7	DOCUMENTATION	1.4261728165569437E-8	TEST
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999992273334761	WITHOUT_CLASSIFICATION	5.56807689196874E-7	DESIGN	1.989823376533221E-7	IMPLEMENTATION	8.955538755953505E-9	DEFECT	5.6137066322439476E-9	TEST	2.3072516582013204E-9	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999993218115508	WITHOUT_CLASSIFICATION	4.825948225117671E-7	DESIGN	1.893853007018678E-7	IMPLEMENTATION	2.918311399087166E-9	DOCUMENTATION	2.4533625714000065E-9	TEST	8.366521456136471E-10	DEFECT
// currently only the Hibernate-supplied DbTimestampType is supported here	WITHOUT_CLASSIFICATION	0.999749737420444	WITHOUT_CLASSIFICATION	2.2957306215943808E-4	DESIGN	1.2465606876922825E-5	IMPLEMENTATION	6.884284399586376E-6	TEST	9.416590780607665E-7	DEFECT	3.979670419396392E-7	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9818639572663723	WITHOUT_CLASSIFICATION	0.016773471007244092	DEFECT	6.910755254213746E-4	IMPLEMENTATION	6.70707995598519E-4	DESIGN	5.92433485131965E-7	TEST	1.957718787349862E-7	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.9999923563088585	WITHOUT_CLASSIFICATION	3.4352406616411906E-6	DESIGN	1.9303364195484213E-6	IMPLEMENTATION	1.8756378669324552E-6	DEFECT	3.230796375484106E-7	TEST	7.939655569136684E-8	DOCUMENTATION
// not so sure this is even valid subtree.  but if it was, it'd // represent two unrelated table references...	WITHOUT_CLASSIFICATION	0.9997454151137251	WITHOUT_CLASSIFICATION	1.7663964248166127E-4	IMPLEMENTATION	7.351660463452609E-5	DESIGN	2.9193146722875728E-6	DEFECT	1.4176475144327696E-6	TEST	9.167697203269435E-8	DOCUMENTATION
// (NOT (GT a b) ) => (LE a b)	WITHOUT_CLASSIFICATION	0.9999639946222404	WITHOUT_CLASSIFICATION	3.4566587685280554E-5	DESIGN	8.002860640957273E-7	IMPLEMENTATION	2.639232611520799E-7	DEFECT	2.620985858814378E-7	TEST	1.1248216314699265E-7	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9998122688663734	WITHOUT_CLASSIFICATION	1.8515317211251044E-4	DESIGN	1.9099492781664356E-6	DEFECT	4.359796951376006E-7	TEST	2.1198750994641543E-7	DOCUMENTATION	2.0045030785573575E-8	IMPLEMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9999968595497997	WITHOUT_CLASSIFICATION	3.1214459814837915E-6	DESIGN	1.0154546057366946E-8	DEFECT	3.4177628748066565E-9	DOCUMENTATION	2.893286857615115E-9	IMPLEMENTATION	2.5386230698279145E-9	TEST
//sqlResultTypes = selectClause.getSqlResultTypes();	WITHOUT_CLASSIFICATION	0.9999999009722067	WITHOUT_CLASSIFICATION	7.26506376576682E-8	DEFECT	1.2652071980584204E-8	DESIGN	1.042320849473496E-8	IMPLEMENTATION	2.33750191070457E-9	TEST	9.643732254257592E-10	DOCUMENTATION
//by default	WITHOUT_CLASSIFICATION	0.9999349085814981	WITHOUT_CLASSIFICATION	5.217374038300332E-5	DESIGN	8.890423790018482E-6	IMPLEMENTATION	3.2268183297477794E-6	DEFECT	6.129452913356475E-7	DOCUMENTATION	1.8749070787136346E-7	TEST
// This is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.9986161997522525	WITHOUT_CLASSIFICATION	0.0013641714629205961	DESIGN	1.4843083032671162E-5	DEFECT	4.34962801368022E-6	IMPLEMENTATION	3.59514347265396E-7	TEST	7.655943330319882E-8	DOCUMENTATION
// -- Loader implementation --	WITHOUT_CLASSIFICATION	0.9999914347841815	WITHOUT_CLASSIFICATION	6.544902925852379E-6	IMPLEMENTATION	1.3962047059894657E-6	DESIGN	5.754102619534633E-7	DEFECT	3.478007673169016E-8	DOCUMENTATION	1.3917847909489448E-8	TEST
// -- Loader overrides --	WITHOUT_CLASSIFICATION	0.9999999718803917	WITHOUT_CLASSIFICATION	1.334434007197938E-8	DESIGN	7.059344427545134E-9	DEFECT	4.7234361123395706E-9	IMPLEMENTATION	1.5599906232402856E-9	DOCUMENTATION	1.4324970610025192E-9	TEST
// (NOT (IS_NULL a b) ) => (IS_NOT_NULL a b)	WITHOUT_CLASSIFICATION	0.9999826000093278	WITHOUT_CLASSIFICATION	1.5016587125099333E-5	DESIGN	1.8796443045053654E-6	IMPLEMENTATION	2.8732867898290115E-7	DEFECT	1.265581141739009E-7	TEST	8.987244940080711E-8	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999765946052409	WITHOUT_CLASSIFICATION	1.3955746402184278E-5	DESIGN	5.903575021123855E-6	TEST	2.8476662467893034E-6	DEFECT	6.227956342283277E-7	IMPLEMENTATION	7.561145481232127E-8	DOCUMENTATION
// meant to handle dynamic instantiation queries...	WITHOUT_CLASSIFICATION	0.9999721394220825	WITHOUT_CLASSIFICATION	2.457515712886904E-5	DESIGN	3.234688411491145E-6	DEFECT	2.8258971453939885E-8	DOCUMENTATION	1.2318518411763613E-8	TEST	1.0154887116369627E-8	IMPLEMENTATION
// --- Query translator methods ---	WITHOUT_CLASSIFICATION	0.9999968093320749	WITHOUT_CLASSIFICATION	3.1034713099211424E-6	DESIGN	6.198350851385005E-8	IMPLEMENTATION	1.9299167242937625E-8	DEFECT	3.111489991703255E-9	TEST	2.8024493333739375E-9	DOCUMENTATION
// -- Implementation private methods --	WITHOUT_CLASSIFICATION	0.9999896144054835	WITHOUT_CLASSIFICATION	6.042793024908131E-6	DESIGN	4.257756637462477E-6	IMPLEMENTATION	5.385012098192568E-8	DEFECT	2.2367817161911668E-8	DOCUMENTATION	8.826915850849303E-9	TEST
//deduplicate unique constraints sharing the same columns //this is needed by Hibernate Annotations since it creates automagically // unique constraints for the user	WITHOUT_CLASSIFICATION	0.9999903001770573	WITHOUT_CLASSIFICATION	9.330950164903304E-6	DESIGN	2.643840187733595E-7	TEST	7.133361956668177E-8	IMPLEMENTATION	3.0904804782090675E-8	DEFECT	2.250334753524876E-9	DOCUMENTATION
// Try to find out the name of the primary key to create it as identity if the IdentityGenerator is used	WITHOUT_CLASSIFICATION	0.9977735778063571	WITHOUT_CLASSIFICATION	0.0022259803593702686	DESIGN	3.535603309319587E-7	IMPLEMENTATION	8.253679824212458E-8	TEST	5.52720435475383E-9	DOCUMENTATION	2.0993915199908615E-10	DEFECT
// to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.9999684188511914	WITHOUT_CLASSIFICATION	3.121462343948692E-5	DESIGN	2.2736373048213668E-7	IMPLEMENTATION	1.3757757832740475E-7	DEFECT	1.358135129383681E-9	DOCUMENTATION	2.2592524550248312E-10	TEST
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999999737225632	WITHOUT_CLASSIFICATION	9.54511601331404E-9	DESIGN	9.272091756632055E-9	IMPLEMENTATION	7.314318204102986E-9	DEFECT	7.367690736583249E-11	DOCUMENTATION	7.223398221163009E-11	TEST
//used also for generation of FK names!	WITHOUT_CLASSIFICATION	0.9984528877551234	WITHOUT_CLASSIFICATION	0.0012825472144068573	DESIGN	1.3830406699180531E-4	IMPLEMENTATION	1.0294504361380469E-4	DEFECT	1.4217292088115392E-5	TEST	9.098627775993571E-6	DOCUMENTATION
//usually useless	WITHOUT_CLASSIFICATION	0.9999394835582103	WITHOUT_CLASSIFICATION	5.9765880942747963E-5	DESIGN	4.761331115995671E-7	IMPLEMENTATION	1.8794395900072418E-7	DEFECT	5.84385391944559E-8	DOCUMENTATION	2.804523705419886E-8	TEST
// added this caching as I noticed that getType() is being called multiple times...	WITHOUT_CLASSIFICATION	0.9997903336721762	WITHOUT_CLASSIFICATION	1.7740915704449593E-4	DEFECT	3.116302471293068E-5	DESIGN	9.769557057890962E-7	IMPLEMENTATION	9.308675680914181E-8	TEST	2.41036039581549E-8	DOCUMENTATION
//do not add unique constraint on DB not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.9999998473247195	WITHOUT_CLASSIFICATION	1.4867522440887698E-7	IMPLEMENTATION	2.3967012546268933E-9	DESIGN	9.802124099812708E-10	DOCUMENTATION	4.4336843788619906E-10	TEST	1.7977402158876499E-10	DEFECT
//for backward compatibility, disable this:	WITHOUT_CLASSIFICATION	0.9999997602104912	WITHOUT_CLASSIFICATION	1.6395106856836378E-7	DESIGN	6.25865726592537E-8	IMPLEMENTATION	6.785746344897593E-9	TEST	3.810126449115082E-9	DOCUMENTATION	2.6559948118297175E-9	DEFECT
//may be final //may be final //may be final	WITHOUT_CLASSIFICATION	0.9999576760044525	WITHOUT_CLASSIFICATION	3.0740675808661217E-5	DESIGN	1.0377182176030792E-5	DEFECT	6.92514214594408E-7	IMPLEMENTATION	2.913847552738374E-7	DOCUMENTATION	2.2223859306017173E-7	TEST
//may be final	WITHOUT_CLASSIFICATION	0.9995740677342663	WITHOUT_CLASSIFICATION	4.045122268810215E-4	DESIGN	1.653216257994005E-5	DEFECT	3.5543858552298558E-6	IMPLEMENTATION	1.0012909412510378E-6	DOCUMENTATION	3.3219947629744195E-7	TEST
// may be final	WITHOUT_CLASSIFICATION	0.9999677377076427	WITHOUT_CLASSIFICATION	2.3779069443448178E-5	DESIGN	6.8660014924622495E-6	DEFECT	1.467461460297542E-6	IMPLEMENTATION	1.0377545242138761E-7	DOCUMENTATION	4.598450868278782E-8	TEST
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999836335536835	WITHOUT_CLASSIFICATION	1.628757906780878E-5	DESIGN	4.8655891831538025E-8	DEFECT	1.6975962472603158E-8	DOCUMENTATION	1.1709104314304272E-8	TEST	1.5262901721140417E-9	IMPLEMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9999975099841821	WITHOUT_CLASSIFICATION	2.4115084132842003E-6	DESIGN	3.210662737476801E-8	DOCUMENTATION	2.3351929688946487E-8	DEFECT	1.4062037853661305E-8	IMPLEMENTATION	8.986809617556725E-9	TEST
// the root of the incoming property path matched one // of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.999999975994795	WITHOUT_CLASSIFICATION	1.9714736079113463E-8	DESIGN	3.1992970169587417E-9	DEFECT	9.49913705598672E-10	TEST	8.92292938352657E-11	IMPLEMENTATION	5.202882338117854E-11	DOCUMENTATION
// ignore it...	WITHOUT_CLASSIFICATION	0.9999589092168554	WITHOUT_CLASSIFICATION	2.6925984792087765E-5	DEFECT	1.241238909890205E-5	DESIGN	1.3915048205885368E-6	IMPLEMENTATION	2.269975544109875E-7	DOCUMENTATION	1.3390687865240242E-7	TEST
//flat recursive algorithm	WITHOUT_CLASSIFICATION	0.9999126334119063	WITHOUT_CLASSIFICATION	4.693456970597067E-5	IMPLEMENTATION	3.179417588947072E-5	DESIGN	7.039708083973191E-6	DEFECT	1.3380568387332803E-6	DOCUMENTATION	2.600775755385312E-7	TEST
//an identifier mapper => getKey will be included in the getNonDuplicatedPropertyIterator() //and checked later, so it needs to be excluded	WITHOUT_CLASSIFICATION	0.9999999376878586	WITHOUT_CLASSIFICATION	6.195969280851816E-8	DESIGN	1.346978587672119E-10	DEFECT	1.2113095130219566E-10	DOCUMENTATION	5.952684889498646E-11	IMPLEMENTATION	3.709294642130043E-11	TEST
//if the hibernate-mapping did not specify a schema/catalog, use the defaults //specified by properties - but note that if the schema/catalog were specified //in hibernate-mapping, or as params, they will already be initialized and //will override the values set here (they are in identifierGeneratorProperties)	WITHOUT_CLASSIFICATION	0.9999999999647872	WITHOUT_CLASSIFICATION	2.450263205909025E-11	IMPLEMENTATION	4.820049943874565E-12	DEFECT	2.843673523071129E-12	DESIGN	2.488923506091931E-12	DOCUMENTATION	5.57417748651222E-13	TEST
//pass the entity-name, if not a collection-id	WITHOUT_CLASSIFICATION	0.9999973647600402	WITHOUT_CLASSIFICATION	2.1025537485315893E-6	DESIGN	3.417654781680596E-7	IMPLEMENTATION	1.7442966538367227E-7	DEFECT	1.4620195914232355E-8	TEST	1.8708719504513275E-9	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999836335536835	WITHOUT_CLASSIFICATION	1.628757906780878E-5	DESIGN	4.8655891831538025E-8	DEFECT	1.6975962472603158E-8	DOCUMENTATION	1.1709104314304272E-8	TEST	1.5262901721140417E-9	IMPLEMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9999975099841821	WITHOUT_CLASSIFICATION	2.4115084132842003E-6	DESIGN	3.210662737476801E-8	DOCUMENTATION	2.3351929688946487E-8	DEFECT	1.4062037853661305E-8	IMPLEMENTATION	8.986809617556725E-9	TEST
//pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.9999928448189792	WITHOUT_CLASSIFICATION	3.311198476561082E-6	DESIGN	2.673827425530721E-6	IMPLEMENTATION	1.042833688945218E-6	DEFECT	1.2108819599837108E-7	TEST	6.2332338161949634E-9	DOCUMENTATION
//needed to satisfy KeyValue	WITHOUT_CLASSIFICATION	0.9997030840633998	WITHOUT_CLASSIFICATION	2.824463544120589E-4	DESIGN	6.911421338138028E-6	DOCUMENTATION	5.290428527713562E-6	IMPLEMENTATION	1.5912478154366334E-6	DEFECT	6.764845069485358E-7	TEST
// empty means no scoping	WITHOUT_CLASSIFICATION	0.9999989862589528	WITHOUT_CLASSIFICATION	9.249534067440109E-7	DESIGN	7.363492932550808E-8	DEFECT	7.868870660368921E-9	DOCUMENTATION	6.2159178469040775E-9	IMPLEMENTATION	1.0679226597490417E-9	TEST
// index should be last column listed	WITHOUT_CLASSIFICATION	0.9999748121433687	WITHOUT_CLASSIFICATION	1.9586894867343006E-5	IMPLEMENTATION	2.9295398175848762E-6	DEFECT	1.9257435671009945E-6	DESIGN	7.104344759199818E-7	TEST	3.5243903381885387E-8	DOCUMENTATION
//if it is a formula index, use the element columns in the PK	WITHOUT_CLASSIFICATION	0.9999995371595566	WITHOUT_CLASSIFICATION	3.8113092238896847E-7	IMPLEMENTATION	5.404492693082531E-8	DESIGN	2.6044617004088277E-8	DEFECT	1.1109343661849022E-9	DOCUMENTATION	5.090427289072383E-10	TEST
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns	WITHOUT_CLASSIFICATION	0.999140388195789	WITHOUT_CLASSIFICATION	7.705790827066282E-4	DEFECT	8.469118511428559E-5	DESIGN	3.1335038774046087E-6	IMPLEMENTATION	1.0523944446706979E-6	TEST	1.5563806813117887E-7	DOCUMENTATION
/*ArrayList list = new ArrayList();	WITHOUT_CLASSIFICATION	0.9986732218763172	WITHOUT_CLASSIFICATION	0.0013171988803272626	IMPLEMENTATION	7.546644367420176E-6	DEFECT	8.841210546878933E-7	DESIGN	6.76021465233439E-7	TEST	4.72456468236376E-7	DOCUMENTATION
// }	WITHOUT_CLASSIFICATION	0.9999944879421437	WITHOUT_CLASSIFICATION	3.6857399041854588E-6	DESIGN	1.3218197924312626E-6	DEFECT	3.233169559991639E-7	IMPLEMENTATION	9.820595696020428E-8	DOCUMENTATION	8.297524660971869E-8	TEST
// no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.9999925258700044	WITHOUT_CLASSIFICATION	6.156604301744708E-6	DESIGN	6.50045155410537E-7	DEFECT	6.110800803887911E-7	IMPLEMENTATION	5.013054976612132E-8	DOCUMENTATION	6.2699083686000434E-9	TEST
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.4648436674508832	WITHOUT_CLASSIFICATION	0.42043661313483927	IMPLEMENTATION	0.10795793779448189	DESIGN	0.006655536169482821	DEFECT	7.488098226249704E-5	DOCUMENTATION	3.1364468050406274E-5	TEST
// the case of a foreign key to something other than the pk is handled in createPropertyRefConstraints	WITHOUT_CLASSIFICATION	0.9999999969727258	WITHOUT_CLASSIFICATION	2.7832453846843043E-9	DESIGN	2.1287169671062219E-10	TEST	2.460950386917648E-11	DEFECT	6.237897120847342E-12	DOCUMENTATION	3.097188718537508E-13	IMPLEMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.4648436674508832	WITHOUT_CLASSIFICATION	0.42043661313483927	IMPLEMENTATION	0.10795793779448189	DESIGN	0.006655536169482821	DEFECT	7.488098226249704E-5	DOCUMENTATION	3.1364468050406274E-5	TEST
// if the property mapping consists of all formulas,  // make it non-updateable	WITHOUT_CLASSIFICATION	0.9999995010099257	WITHOUT_CLASSIFICATION	3.418088514126416E-7	DEFECT	1.390751195837217E-7	IMPLEMENTATION	1.789569850043827E-8	TEST	1.4439983223978546E-10	DESIGN	6.600485088189655E-11	DOCUMENTATION
//columnUpdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.9999900923470969	WITHOUT_CLASSIFICATION	6.3818113019251724E-6	IMPLEMENTATION	2.7067509330907226E-6	DESIGN	5.35215944155295E-7	DEFECT	1.889830934323683E-7	DOCUMENTATION	9.489163065499437E-8	TEST
// if the property mapping consists of all formulas,  // make it insertable	WITHOUT_CLASSIFICATION	0.999996048153457	WITHOUT_CLASSIFICATION	3.4865081069062253E-6	DEFECT	2.839965930711319E-7	TEST	1.7919475507636483E-7	IMPLEMENTATION	1.690908774978804E-9	DESIGN	4.5617918215531203E-10	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999983807244553	WITHOUT_CLASSIFICATION	1.4890977181791327E-6	DESIGN	7.20443028197264E-8	IMPLEMENTATION	4.053743999371407E-8	TEST	1.3589744932319671E-8	DEFECT	4.00633871074113E-9	DOCUMENTATION
// expected type is intrinsic here...	WITHOUT_CLASSIFICATION	0.9999625287217982	WITHOUT_CLASSIFICATION	3.052996908883872E-5	DEFECT	6.363301001179534E-6	DESIGN	4.036923982398298E-7	IMPLEMENTATION	1.256420457390952E-7	TEST	4.867366763578417E-8	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9999338137653695	WITHOUT_CLASSIFICATION	5.7002878881005144E-5	DESIGN	4.727655990944478E-6	DEFECT	2.0036298172637786E-6	IMPLEMENTATION	1.3764822541358623E-6	DOCUMENTATION	1.0755876871275984E-6	TEST
//}	WITHOUT_CLASSIFICATION	0.9999338137653695	WITHOUT_CLASSIFICATION	5.7002878881005144E-5	DESIGN	4.727655990944478E-6	DEFECT	2.0036298172637786E-6	IMPLEMENTATION	1.3764822541358623E-6	DOCUMENTATION	1.0755876871275984E-6	TEST
//return memberPersister.getPropertyType(propertyName);	WITHOUT_CLASSIFICATION	0.9999868509738754	WITHOUT_CLASSIFICATION	8.669308776369365E-6	DESIGN	4.2021250802021795E-6	DEFECT	2.1522922141603215E-7	TEST	3.9258523768451025E-8	IMPLEMENTATION	2.3104522826593924E-8	DOCUMENTATION
//return memberPersister.toColumns(alias, propertyName);	WITHOUT_CLASSIFICATION	0.9999683855037109	WITHOUT_CLASSIFICATION	3.037898574053371E-5	DESIGN	1.1629274937933967E-6	DEFECT	4.9042534439728156E-8	TEST	1.5091753427547296E-8	DOCUMENTATION	8.448766873633231E-9	IMPLEMENTATION
//return memberPersister.getType();	WITHOUT_CLASSIFICATION	0.9999933187373411	WITHOUT_CLASSIFICATION	5.299556248523519E-6	DESIGN	8.543719424434635E-7	DEFECT	4.6085862606596264E-7	IMPLEMENTATION	5.038153077111957E-8	TEST	1.6094311146716038E-8	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999823584796159	WITHOUT_CLASSIFICATION	8.312761122751169E-6	DEFECT	5.748025484050781E-6	DESIGN	3.0006787186512824E-6	IMPLEMENTATION	4.736363781846355E-7	DOCUMENTATION	1.0641868051943812E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
//instanceof AssociationType;	WITHOUT_CLASSIFICATION	0.9998538639382374	WITHOUT_CLASSIFICATION	9.69582283817161E-5	DESIGN	2.960555486000628E-5	DEFECT	1.8190187513140388E-5	DOCUMENTATION	1.1504861358289158E-6	IMPLEMENTATION	2.3160487177207693E-7	TEST
// we need to determine the best way to know that two joinables // represent a single many-to-many...	WITHOUT_CLASSIFICATION	0.5563662606519336	DESIGN	0.4433009903198227	WITHOUT_CLASSIFICATION	2.9884927415215867E-4	IMPLEMENTATION	3.162122365994584E-5	TEST	1.7389380349173287E-6	DOCUMENTATION	5.395923967226927E-7	DEFECT
//strip leading ','	WITHOUT_CLASSIFICATION	0.9999931865331306	WITHOUT_CLASSIFICATION	3.219166667723234E-6	DESIGN	2.5341940753626767E-6	IMPLEMENTATION	6.640327278600012E-7	DEFECT	2.3177257711039335E-7	TEST	1.6430082123938487E-7	DOCUMENTATION
//public boolean isSubselectLoadable();	WITHOUT_CLASSIFICATION	0.9999995857665366	WITHOUT_CLASSIFICATION	3.3741286338218906E-7	DESIGN	3.408314390596268E-8	IMPLEMENTATION	2.984238888666988E-8	DEFECT	7.2210680225614976E-9	DOCUMENTATION	5.6739992692095325E-9	TEST
// KEY	WITHOUT_CLASSIFICATION	0.9999911374382112	WITHOUT_CLASSIFICATION	7.965394044624513E-6	DESIGN	5.813159387186377E-7	DEFECT	1.519153127892896E-7	IMPLEMENTATION	8.463978648954877E-8	DOCUMENTATION	7.929670609552982E-8	TEST
//columns	WITHOUT_CLASSIFICATION	0.9999608686586449	WITHOUT_CLASSIFICATION	3.086926657018839E-5	DESIGN	4.0967434534733255E-6	DEFECT	2.7303055245685074E-6	IMPLEMENTATION	1.081097186901425E-6	DOCUMENTATION	3.5392861998202444E-7	TEST
//SQL statements	WITHOUT_CLASSIFICATION	0.9999770260738294	WITHOUT_CLASSIFICATION	2.2383265532104648E-5	DESIGN	2.1946847494814644E-7	DOCUMENTATION	1.6137463037367447E-7	IMPLEMENTATION	1.1242262246718747E-7	DEFECT	9.739491067395697E-8	TEST
//extra information about the element type	WITHOUT_CLASSIFICATION	0.9999989880208152	WITHOUT_CLASSIFICATION	7.534032483460406E-7	DESIGN	1.5557253073038283E-7	DEFECT	5.966245225355747E-8	IMPLEMENTATION	3.298645403837723E-8	DOCUMENTATION	1.0354499511276771E-8	TEST
//types	WITHOUT_CLASSIFICATION	0.9997860130138075	WITHOUT_CLASSIFICATION	1.956400250396682E-4	DESIGN	7.940531716872094E-6	DEFECT	5.820957270267186E-6	IMPLEMENTATION	2.4190541295222235E-6	TEST	2.1664180362765566E-6	DOCUMENTATION
// custom sql	WITHOUT_CLASSIFICATION	0.9999990327827494	WITHOUT_CLASSIFICATION	8.508913864246404E-7	DESIGN	8.739815125407439E-8	DEFECT	1.2074154413327715E-8	IMPLEMENTATION	8.511712655346114E-9	DOCUMENTATION	8.341845884752798E-9	TEST
//private final String unquotedIdentifierColumnName;	WITHOUT_CLASSIFICATION	0.9999648859893108	WITHOUT_CLASSIFICATION	3.0329765950158947E-5	DESIGN	4.337806221332319E-6	IMPLEMENTATION	1.7730995840549119E-7	DOCUMENTATION	1.6084299245271913E-7	DEFECT	1.0828556689880856E-7	TEST
// dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.9999996047321154	WITHOUT_CLASSIFICATION	3.444852165744147E-7	DESIGN	4.1249484972308045E-8	DEFECT	5.967457595459139E-9	DOCUMENTATION	3.5268201086712616E-9	IMPLEMENTATION	3.8905413304637746E-11	TEST
// dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.9999997856963132	WITHOUT_CLASSIFICATION	1.449897634543349E-7	DESIGN	5.2319471867144945E-8	DEFECT	1.2609124244353422E-8	IMPLEMENTATION	3.2568318052896426E-9	TEST	1.1284953618492772E-9	DOCUMENTATION
// NativeSQL: collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.9998917802830875	WITHOUT_CLASSIFICATION	9.523790102171211E-5	IMPLEMENTATION	1.032255528544963E-5	DESIGN	2.237775779620498E-6	DEFECT	2.648735820083544E-7	DOCUMENTATION	1.5661124366943717E-7	TEST
//unquotedKeyColumnNames = StringHelper.unQuote(keyColumnAliases);	WITHOUT_CLASSIFICATION	0.9999992090280532	WITHOUT_CLASSIFICATION	6.889050740718203E-7	DEFECT	5.22202442361438E-8	DESIGN	2.801901919245702E-8	TEST	1.8599877615764244E-8	IMPLEMENTATION	3.2277315742373693E-9	DOCUMENTATION
//ELEMENT	WITHOUT_CLASSIFICATION	0.9998709965482834	WITHOUT_CLASSIFICATION	1.188362165325098E-4	DESIGN	4.419151535242437E-6	DEFECT	2.3612595769774066E-6	TEST	1.7157489248160904E-6	DOCUMENTATION	1.67107514716492E-6	IMPLEMENTATION
// NativeSQL: collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.9997194736960752	WITHOUT_CLASSIFICATION	2.3190099898057483E-4	IMPLEMENTATION	4.775128607333531E-5	DESIGN	5.28340087621317E-7	DEFECT	2.8148978050165226E-7	DOCUMENTATION	6.418900263175431E-8	TEST
// INDEX AND ROW SELECT	WITHOUT_CLASSIFICATION	0.9999948392672919	WITHOUT_CLASSIFICATION	4.061161780393472E-6	IMPLEMENTATION	5.615975005766757E-7	DESIGN	2.2135181745365857E-7	DEFECT	2.0939682889173997E-7	DOCUMENTATION	1.0722478074472668E-7	TEST
// NativeSQL: collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.9993285364908374	WITHOUT_CLASSIFICATION	6.261231285717099E-4	IMPLEMENTATION	3.3463468966584534E-5	DESIGN	1.052270524343497E-5	DEFECT	7.171976184770557E-7	TEST	6.370087623029045E-7	DOCUMENTATION
//unquotedIdentifierColumnName = identifierColumnAlias;	WITHOUT_CLASSIFICATION	0.9999975472443544	WITHOUT_CLASSIFICATION	2.0607007560761786E-6	IMPLEMENTATION	3.11163779050534E-7	DESIGN	3.799530376549457E-8	TEST	2.4263550679335267E-8	DOCUMENTATION	1.8632255890461987E-8	DEFECT
//unquotedIdentifierColumnName = null;	WITHOUT_CLASSIFICATION	0.9999893254382011	WITHOUT_CLASSIFICATION	7.0527796122378526E-6	IMPLEMENTATION	3.0881038599097454E-6	DESIGN	3.9641212999136464E-7	DEFECT	7.449490062178488E-8	DOCUMENTATION	6.277129613809049E-8	TEST
//GENERATE THE SQL:	WITHOUT_CLASSIFICATION	0.9998262258376535	WITHOUT_CLASSIFICATION	1.703064570375195E-4	DESIGN	1.5353653193044199E-6	DEFECT	7.30013690144298E-7	DOCUMENTATION	6.748748794585306E-7	IMPLEMENTATION	5.274514201157169E-7	TEST
// for non-arrays, we don't need to know the element class //elementType.returnedClass();	WITHOUT_CLASSIFICATION	0.9999790220232595	WITHOUT_CLASSIFICATION	2.083348544629922E-5	DESIGN	8.244550959566467E-8	DEFECT	5.5930482071715844E-8	IMPLEMENTATION	4.8428693811257E-9	DOCUMENTATION	1.272433223582444E-9	TEST
//not all classpersisters implement PropertyMapping!	WITHOUT_CLASSIFICATION	0.9995970492067351	WITHOUT_CLASSIFICATION	2.919010580748629E-4	DESIGN	6.220757770057635E-5	DEFECT	4.560621348054851E-5	IMPLEMENTATION	2.6236980060829946E-6	TEST	6.1224600301363E-7	DOCUMENTATION
// Handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.839439792885544	WITHOUT_CLASSIFICATION	0.15648053148423946	DESIGN	0.004072812278708668	IMPLEMENTATION	3.2188907146471677E-6	TEST	2.0730110575979405E-6	DOCUMENTATION	1.5714497356826889E-6	DEFECT
// Handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.6200535794804435	WITHOUT_CLASSIFICATION	0.3722976093832285	DESIGN	0.0076428881883070406	IMPLEMENTATION	3.1960382271860074E-6	TEST	2.3744317592459125E-6	DOCUMENTATION	3.524780346000764E-7	DEFECT
//if there is a user-specified loader, return that //TODO: filters!?	WITHOUT_CLASSIFICATION	0.5358486822415017	WITHOUT_CLASSIFICATION	0.45454854269041145	DESIGN	0.00935636683587288	IMPLEMENTATION	1.8649873980550066E-4	DEFECT	5.472375950482421E-5	TEST	5.185732903554311E-6	DOCUMENTATION
// Take care of any entities that might have // been evicted!	WITHOUT_CLASSIFICATION	0.9994879539807047	WITHOUT_CLASSIFICATION	4.7753024790432114E-4	DESIGN	3.3004281824023887E-5	DEFECT	1.0268723556258428E-6	TEST	2.6596945004907884E-7	IMPLEMENTATION	2.186477613454823E-7	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9999931865331306	WITHOUT_CLASSIFICATION	3.219166667723234E-6	DESIGN	2.5341940753626767E-6	IMPLEMENTATION	6.640327278600012E-7	DEFECT	2.3177257711039335E-7	TEST	1.6430082123938487E-7	DOCUMENTATION
// Run a subquery loader	WITHOUT_CLASSIFICATION	0.9999276488369838	WITHOUT_CLASSIFICATION	6.04831746000259E-5	DEFECT	1.0617896605228757E-5	DESIGN	1.1446541731627024E-6	IMPLEMENTATION	6.897976533636551E-8	DOCUMENTATION	3.645787247488371E-8	TEST
//needed by arrays	WITHOUT_CLASSIFICATION	0.9998813554321926	WITHOUT_CLASSIFICATION	9.770653934871291E-5	IMPLEMENTATION	9.938614400759917E-6	DESIGN	4.92333728160971E-6	DEFECT	4.031812588985666E-6	TEST	2.04426418729435E-6	DOCUMENTATION
//TODO: something with formulas...	WITHOUT_CLASSIFICATION	0.8567611800114401	WITHOUT_CLASSIFICATION	0.09890831995924323	IMPLEMENTATION	0.03760088418709494	DESIGN	0.00510380557360187	TEST	9.079745562025326E-4	DOCUMENTATION	7.178357124172816E-4	DEFECT
//an assertion	WITHOUT_CLASSIFICATION	0.9999994602346832	WITHOUT_CLASSIFICATION	2.7911350445283045E-7	TEST	1.0729623090312058E-7	DEFECT	7.729609040903976E-8	DESIGN	4.337820005971527E-8	DOCUMENTATION	3.268129110357022E-8	IMPLEMENTATION
// Remove all the old entries	WITHOUT_CLASSIFICATION	0.9999941658742251	WITHOUT_CLASSIFICATION	4.818511886119068E-6	DESIGN	9.170379083245868E-7	IMPLEMENTATION	7.885753402284284E-8	DEFECT	1.1786005071778929E-8	DOCUMENTATION	7.932441228064929E-9	TEST
//create all the new entries	WITHOUT_CLASSIFICATION	0.9999992825109835	WITHOUT_CLASSIFICATION	5.863434533171969E-7	DESIGN	1.1062656430014342E-7	IMPLEMENTATION	1.6116970808771342E-8	DOCUMENTATION	3.880183677153002E-9	TEST	5.218444300566058E-10	DEFECT
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999823584796159	WITHOUT_CLASSIFICATION	8.312761122751169E-6	DEFECT	5.748025484050781E-6	DESIGN	3.0006787186512824E-6	IMPLEMENTATION	4.736363781846355E-7	DOCUMENTATION	1.0641868051943812E-7	TEST
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999823584796159	WITHOUT_CLASSIFICATION	8.312761122751169E-6	DEFECT	5.748025484050781E-6	DESIGN	3.0006787186512824E-6	IMPLEMENTATION	4.736363781846355E-7	DOCUMENTATION	1.0641868051943812E-7	TEST
//delete all the deleted entries	WITHOUT_CLASSIFICATION	0.9999952049233705	WITHOUT_CLASSIFICATION	4.4080243687698245E-6	IMPLEMENTATION	3.7760877122225006E-7	DESIGN	6.370936592153487E-9	DOCUMENTATION	2.6093610196242455E-9	TEST	4.631918490493851E-10	DEFECT
//insert all the new entries	WITHOUT_CLASSIFICATION	0.9999991003313096	WITHOUT_CLASSIFICATION	4.536549961135049E-7	DESIGN	4.195108296248057E-7	IMPLEMENTATION	1.6109301726166926E-8	TEST	8.705647021751418E-9	DOCUMENTATION	1.6879158290644971E-9	DEFECT
//==elementType ??	WITHOUT_CLASSIFICATION	0.99866174098661	WITHOUT_CLASSIFICATION	0.001316848745635993	DESIGN	1.2219956663235518E-5	IMPLEMENTATION	6.413825289135432E-6	DEFECT	2.0340191416642142E-6	DOCUMENTATION	7.424666601852736E-7	TEST
//update all the modified entries	WITHOUT_CLASSIFICATION	0.9999898066417664	WITHOUT_CLASSIFICATION	8.799850361642301E-6	IMPLEMENTATION	1.3694663080285685E-6	DESIGN	9.767522086170255E-9	DOCUMENTATION	9.004880731550953E-9	DEFECT	5.269160943577181E-9	TEST
//identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.999940446367182	WITHOUT_CLASSIFICATION	4.400177418624954E-5	IMPLEMENTATION	1.4950116593666251E-5	DESIGN	5.104452156003345E-7	DEFECT	5.78075051692059E-8	TEST	3.348931717515482E-8	DOCUMENTATION
// update removed rows fks to null	WITHOUT_CLASSIFICATION	0.9993766827570235	WITHOUT_CLASSIFICATION	5.707167980921309E-4	DEFECT	5.1604940437992145E-5	DESIGN	9.087309916252815E-7	IMPLEMENTATION	4.8653665648096396E-8	TEST	3.811978903178584E-8	DOCUMENTATION
// will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.998335152252185	WITHOUT_CLASSIFICATION	0.001430410474261097	DESIGN	2.3173689632109115E-4	DEFECT	1.3596638701274032E-6	DOCUMENTATION	8.231589283468406E-7	IMPLEMENTATION	5.1755443435975E-7	TEST
// now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.9999995596975352	WITHOUT_CLASSIFICATION	1.6699249789824492E-7	DESIGN	1.6141229559789017E-7	IMPLEMENTATION	1.1117387520484962E-7	DEFECT	4.962729805670349E-10	DOCUMENTATION	2.275230803413648E-10	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
//use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.9997657863886078	WITHOUT_CLASSIFICATION	2.334245519643286E-4	DESIGN	4.7504431724585024E-7	DEFECT	1.550509774454522E-7	DOCUMENTATION	1.2338572372262198E-7	IMPLEMENTATION	3.557840953382529E-8	TEST
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999991383315602	WITHOUT_CLASSIFICATION	8.141100441782318E-7	DESIGN	3.309848396061531E-8	IMPLEMENTATION	9.981798138337712E-9	DEFECT	3.569175579548925E-9	TEST	9.089379992643172E-10	DOCUMENTATION
//private final String rootTableName;	WITHOUT_CLASSIFICATION	0.9998685495972057	WITHOUT_CLASSIFICATION	1.3012787231461882E-4	DESIGN	4.949160413885338E-7	IMPLEMENTATION	3.7310494390738495E-7	DEFECT	3.3856851701409205E-7	TEST	1.1594097729839064E-7	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9999001754501302	WITHOUT_CLASSIFICATION	6.992154534582762E-5	IMPLEMENTATION	1.8494405129766864E-5	DESIGN	5.961064676864205E-6	DEFECT	3.033531386966587E-6	TEST	2.414003330433268E-6	DOCUMENTATION
//Custom SQL	WITHOUT_CLASSIFICATION	0.9998058437082882	WITHOUT_CLASSIFICATION	1.933206946397665E-4	DESIGN	3.2674541132292603E-7	DEFECT	2.8166209908742003E-7	DOCUMENTATION	1.8283115207958123E-7	TEST	4.43584096828697E-8	IMPLEMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999991383315602	WITHOUT_CLASSIFICATION	8.141100441782318E-7	DESIGN	3.309848396061531E-8	IMPLEMENTATION	9.981798138337712E-9	DEFECT	3.569175579548925E-9	TEST	9.089379992643172E-10	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999901400987873	WITHOUT_CLASSIFICATION	9.244365724467805E-6	DESIGN	1.8984213476096733E-7	DOCUMENTATION	1.8281701838147558E-7	DEFECT	1.5487634602892345E-7	IMPLEMENTATION	8.79999888323465E-8	TEST
// This could also just be true all the time...	WITHOUT_CLASSIFICATION	0.9651458802601249	WITHOUT_CLASSIFICATION	0.030794942035462455	DESIGN	0.004052566956678757	IMPLEMENTATION	5.043298489129718E-6	DEFECT	1.2984775132132196E-6	TEST	2.6897173159434395E-7	DOCUMENTATION
//chop the last union (all)	WITHOUT_CLASSIFICATION	0.9999908550757917	WITHOUT_CLASSIFICATION	4.264183920698364E-6	DEFECT	2.4090472905463887E-6	DESIGN	1.9958891455694972E-6	IMPLEMENTATION	3.8303667411258267E-7	DOCUMENTATION	9.276717735864129E-8	TEST
//TODO: check this....	WITHOUT_CLASSIFICATION	0.7383465987671881	DESIGN	0.1795106397912051	IMPLEMENTATION	0.07231492988394857	WITHOUT_CLASSIFICATION	0.0070554782973615525	DOCUMENTATION	0.0019563875301421983	DEFECT	8.159657301546066E-4	TEST
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9999001754501302	WITHOUT_CLASSIFICATION	6.992154534582762E-5	IMPLEMENTATION	1.8494405129766864E-5	DESIGN	5.961064676864205E-6	DEFECT	3.033531386966587E-6	TEST	2.414003330433268E-6	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999886730579429	WITHOUT_CLASSIFICATION	5.996343099766567E-6	DESIGN	4.902389784496987E-6	DEFECT	3.6447815496226275E-7	TEST	6.171228775594365E-8	DOCUMENTATION	2.0187300487271292E-9	IMPLEMENTATION
// the closure of all properties in the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999997119447407	WITHOUT_CLASSIFICATION	1.4623633270166227E-7	DESIGN	1.3948396458471043E-7	DEFECT	1.7748530710191524E-9	IMPLEMENTATION	4.426878214115114E-10	DOCUMENTATION	1.1742103577572647E-10	TEST
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999998289422078	WITHOUT_CLASSIFICATION	1.4402147240215394E-7	DESIGN	2.450301780748289E-8	IMPLEMENTATION	2.2797179577127836E-9	DEFECT	1.8123222162945951E-10	TEST	7.235177750846897E-11	DOCUMENTATION
// subclass discrimination works by assigning particular // values to certain combinations of null primary key // values in the outer join using an SQL CASE	WITHOUT_CLASSIFICATION	0.9999978435758531	WITHOUT_CLASSIFICATION	1.1349266679584375E-6	DEFECT	1.0211200401431756E-6	DESIGN	3.31643539000154E-10	DOCUMENTATION	4.555670501179218E-11	TEST	2.3861501167564277E-13	IMPLEMENTATION
//MULTITABLES	WITHOUT_CLASSIFICATION	0.9998581024324515	WITHOUT_CLASSIFICATION	1.2518408755938043E-4	DESIGN	6.546869306995129E-6	DEFECT	5.998408452407714E-6	IMPLEMENTATION	2.9250773709566073E-6	DOCUMENTATION	1.2431248587460041E-6	TEST
// Custom sql	WITHOUT_CLASSIFICATION	0.9999976575114331	WITHOUT_CLASSIFICATION	2.2793874758497122E-6	DESIGN	4.071693303329286E-8	DEFECT	1.0522626175478642E-8	TEST	7.158270650939296E-9	DOCUMENTATION	4.703261352022783E-9	IMPLEMENTATION
// subclass closure properties	WITHOUT_CLASSIFICATION	0.9999961490279566	WITHOUT_CLASSIFICATION	3.822101539770267E-6	DESIGN	2.6489065655223555E-8	DEFECT	1.290326486454722E-9	TEST	9.663278519639214E-10	DOCUMENTATION	1.2478343458686256E-10	IMPLEMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999875538083108	WITHOUT_CLASSIFICATION	8.928704655848764E-6	DESIGN	1.7754392832184537E-6	IMPLEMENTATION	1.400831880910152E-6	DEFECT	2.519076604060474E-7	DOCUMENTATION	8.930820885116833E-8	TEST
//( (Column) model.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9984414231330727	WITHOUT_CLASSIFICATION	0.0013859752163261217	DESIGN	1.5893705714251747E-4	IMPLEMENTATION	8.990857231706333E-6	DEFECT	3.7638173537138993E-6	TEST	9.099188732948684E-7	DOCUMENTATION
//( (Column) sc.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9998764711606642	WITHOUT_CLASSIFICATION	9.194165457461443E-5	DESIGN	2.9658231394258114E-5	IMPLEMENTATION	9.50075509734158E-7	DEFECT	7.387555112704664E-7	TEST	2.4012234585307414E-7	DOCUMENTATION
// don't need subclass tables, because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.9711650652447138	WITHOUT_CLASSIFICATION	0.021762409498620353	DESIGN	0.0070586536004848014	DEFECT	8.215721793041684E-6	DOCUMENTATION	5.222281880377938E-6	IMPLEMENTATION	4.3365250758134477E-7	TEST
// special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.9998972440928913	WITHOUT_CLASSIFICATION	6.302474065787193E-5	IMPLEMENTATION	3.790541484658354E-5	DESIGN	1.8000927212397663E-6	DOCUMENTATION	2.0343516941338464E-8	DEFECT	5.3153660709421055E-9	TEST
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999991383315602	WITHOUT_CLASSIFICATION	8.141100441782318E-7	DESIGN	3.309848396061531E-8	IMPLEMENTATION	9.981798138337712E-9	DEFECT	3.569175579548925E-9	TEST	9.089379992643172E-10	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999886730579429	WITHOUT_CLASSIFICATION	5.996343099766567E-6	DESIGN	4.902389784496987E-6	DEFECT	3.6447815496226275E-7	TEST	6.171228775594365E-8	DOCUMENTATION	2.0187300487271292E-9	IMPLEMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999998289422078	WITHOUT_CLASSIFICATION	1.4402147240215394E-7	DESIGN	2.450301780748289E-8	IMPLEMENTATION	2.2797179577127836E-9	DEFECT	1.8123222162945951E-10	TEST	7.235177750846897E-11	DOCUMENTATION
//get em on the second pass!	WITHOUT_CLASSIFICATION	0.999992741724871	WITHOUT_CLASSIFICATION	6.5795341118447324E-6	DESIGN	4.332882739286244E-7	DEFECT	1.1279897639310064E-7	IMPLEMENTATION	1.0789535639419724E-7	DOCUMENTATION	2.4758410557699553E-8	TEST
// now look up the object we are really interested in! // (this lets us correctly handle proxies and multi-row // or multi-column queries)	WITHOUT_CLASSIFICATION	0.9978517145188786	WITHOUT_CLASSIFICATION	0.0019987927284850176	DESIGN	1.4347035431740333E-4	DEFECT	5.1461446879761374E-6	IMPLEMENTATION	5.908383321530912E-7	TEST	2.854152989160126E-7	DOCUMENTATION
// discriminator column	WITHOUT_CLASSIFICATION	0.9999977736414822	WITHOUT_CLASSIFICATION	1.8620032977706703E-6	DESIGN	3.388863432816057E-7	DEFECT	2.052643045330096E-8	DOCUMENTATION	2.9506894262623236E-9	TEST	1.9917569716374885E-9	IMPLEMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9999001754501302	WITHOUT_CLASSIFICATION	6.992154534582762E-5	IMPLEMENTATION	1.8494405129766864E-5	DESIGN	5.961064676864205E-6	DEFECT	3.033531386966587E-6	TEST	2.414003330433268E-6	DOCUMENTATION
//private final Map propertyTableNumbersByName = new HashMap();	WITHOUT_CLASSIFICATION	0.9999651821235517	WITHOUT_CLASSIFICATION	3.421416914163845E-5	DESIGN	3.560586776629655E-7	TEST	1.2476584015506264E-7	DEFECT	9.328644493080911E-8	DOCUMENTATION	2.9596343975569085E-8	IMPLEMENTATION
// CLASS + TABLE	WITHOUT_CLASSIFICATION	0.9999998677256271	WITHOUT_CLASSIFICATION	5.4766820597246536E-8	DESIGN	3.1839416811580646E-8	DEFECT	2.789862676717805E-8	IMPLEMENTATION	1.11293343563336E-8	DOCUMENTATION	6.640174352141986E-9	TEST
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.999945922400007	WITHOUT_CLASSIFICATION	4.795864709630393E-5	IMPLEMENTATION	3.1596185730357047E-6	DESIGN	1.7660743650827204E-6	DEFECT	8.255932006307366E-7	DOCUMENTATION	3.676667578182426E-7	TEST
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999837907263617	WITHOUT_CLASSIFICATION	1.1748629784438314E-5	DESIGN	3.2611209306480034E-6	IMPLEMENTATION	5.561720387582557E-7	DEFECT	4.1141076984736767E-7	DOCUMENTATION	2.3194011458022425E-7	TEST
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999875538083108	WITHOUT_CLASSIFICATION	8.928704655848764E-6	DESIGN	1.7754392832184537E-6	IMPLEMENTATION	1.400831880910152E-6	DEFECT	2.519076604060474E-7	DOCUMENTATION	8.930820885116833E-8	TEST
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999901400987873	WITHOUT_CLASSIFICATION	9.244365724467805E-6	DESIGN	1.8984213476096733E-7	DOCUMENTATION	1.8281701838147558E-7	DEFECT	1.5487634602892345E-7	IMPLEMENTATION	8.79999888323465E-8	TEST
// JOINS	WITHOUT_CLASSIFICATION	0.9999960336696694	WITHOUT_CLASSIFICATION	1.7473171072000674E-6	DESIGN	1.1689594474787342E-6	DEFECT	8.415566040419496E-7	IMPLEMENTATION	1.1079241982608417E-7	TEST	9.770475196913489E-8	DOCUMENTATION
//propertyTableNumbersByName.put( prop.getName(), join );	WITHOUT_CLASSIFICATION	0.9999981565695283	WITHOUT_CLASSIFICATION	7.569883790786722E-7	DESIGN	4.3231916465326615E-7	DEFECT	3.9589032576882464E-7	TEST	1.3847427649196033E-7	IMPLEMENTATION	1.1975832575110302E-7	DOCUMENTATION
//Access cached SQL	WITHOUT_CLASSIFICATION	0.9998818993011785	WITHOUT_CLASSIFICATION	1.1742901427199312E-4	DESIGN	3.603445584114958E-7	DEFECT	1.0717105907211578E-7	DOCUMENTATION	1.0373507091884797E-7	TEST	1.0043386100236485E-7	IMPLEMENTATION
//figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.9982725321277339	WITHOUT_CLASSIFICATION	0.0017259261188054891	DESIGN	6.82305351965028E-7	IMPLEMENTATION	4.7051897959812703E-7	TEST	2.32237166344787E-7	DOCUMENTATION	1.5669196263450995E-7	DEFECT
//figure out which columns are needed	WITHOUT_CLASSIFICATION	0.9525041019989161	WITHOUT_CLASSIFICATION	0.0416391039800515	DESIGN	0.005806482418783005	IMPLEMENTATION	3.205147968251791E-5	DOCUMENTATION	1.6906629635448475E-5	TEST	1.353492931417658E-6	DEFECT
//figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.9986434629864598	WITHOUT_CLASSIFICATION	0.0011449161179920312	DESIGN	2.002624769624292E-4	IMPLEMENTATION	8.02433215605609E-6	DOCUMENTATION	3.1459039746290114E-6	TEST	1.8818245510548678E-7	DEFECT
//render the SQL	WITHOUT_CLASSIFICATION	0.999033018553314	WITHOUT_CLASSIFICATION	9.105806787966553E-4	DESIGN	4.044619363703965E-5	DEFECT	9.322434773891573E-6	IMPLEMENTATION	4.74941828378071E-6	DOCUMENTATION	1.8827211946609525E-6	TEST
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999983807244553	WITHOUT_CLASSIFICATION	1.4890977181791327E-6	DESIGN	7.20443028197264E-8	IMPLEMENTATION	4.053743999371407E-8	TEST	1.3589744932319671E-8	DEFECT	4.00633871074113E-9	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998942354033697	WITHOUT_CLASSIFICATION	1.0570647235285661E-4	DESIGN	2.279314759862245E-8	IMPLEMENTATION	2.1383075717371987E-8	DEFECT	8.415652724022421E-9	TEST	5.532401434312208E-9	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999960904946565	WITHOUT_CLASSIFICATION	1.3968289166594325E-6	IMPLEMENTATION	1.1716273835302389E-6	DEFECT	9.850729298611552E-7	DESIGN	1.8091627428451516E-7	DOCUMENTATION	1.7505983908293684E-7	TEST
// The optional SQL string defined in the where attribute	WITHOUT_CLASSIFICATION	0.9999997899523728	WITHOUT_CLASSIFICATION	2.0109931851344181E-7	DESIGN	5.818756264571882E-9	IMPLEMENTATION	1.2353782599976099E-9	DEFECT	1.0771058600048727E-9	DOCUMENTATION	8.170683550595848E-10	TEST
//information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.9995718250527955	WITHOUT_CLASSIFICATION	2.6646334261737543E-4	DESIGN	1.4996340363269828E-4	DEFECT	8.674656484586324E-6	TEST	2.9469055637165772E-6	DOCUMENTATION	1.2663890604300246E-7	IMPLEMENTATION
//information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.9999995446474926	WITHOUT_CLASSIFICATION	2.531089206126134E-7	DEFECT	1.8817997016246992E-7	DESIGN	1.136781061980149E-8	DOCUMENTATION	2.1582043603612445E-9	TEST	5.376016761918825E-10	IMPLEMENTATION
//information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.9999996976618776	WITHOUT_CLASSIFICATION	2.0687313619577623E-7	DESIGN	7.292109153641038E-8	DEFECT	1.5507632372835036E-8	IMPLEMENTATION	6.422661820376901E-9	DOCUMENTATION	6.136003903894466E-10	TEST
// dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9999993791289263	WITHOUT_CLASSIFICATION	4.6899440074774215E-7	DESIGN	1.494335175098986E-7	DEFECT	1.1334384013975809E-9	DOCUMENTATION	6.56558298728627E-10	TEST	6.531586955776822E-10	IMPLEMENTATION
// SQL strings	WITHOUT_CLASSIFICATION	0.9999960716583515	WITHOUT_CLASSIFICATION	3.1274269518398077E-6	DESIGN	4.910176558611723E-7	DEFECT	2.3270291439384358E-7	IMPLEMENTATION	4.506989452654819E-8	DOCUMENTATION	3.212423190795794E-8	TEST
// for objects that came in via update()	WITHOUT_CLASSIFICATION	0.9999992136978727	WITHOUT_CLASSIFICATION	7.347528582328434E-7	DESIGN	3.0064065656346165E-8	IMPLEMENTATION	1.8647440714733425E-8	DEFECT	2.204198760271967E-9	DOCUMENTATION	6.335639008231902E-10	TEST
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999837907263617	WITHOUT_CLASSIFICATION	1.1748629784438314E-5	DESIGN	3.2611209306480034E-6	IMPLEMENTATION	5.561720387582557E-7	DEFECT	4.1141076984736767E-7	DOCUMENTATION	2.3194011458022425E-7	TEST
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999960904946565	WITHOUT_CLASSIFICATION	1.3968289166594325E-6	IMPLEMENTATION	1.1716273835302389E-6	DEFECT	9.850729298611552E-7	DESIGN	1.8091627428451516E-7	DOCUMENTATION	1.7505983908293684E-7	TEST
// IDENTIFIER	WITHOUT_CLASSIFICATION	0.9999935403288736	WITHOUT_CLASSIFICATION	4.677763156203148E-6	IMPLEMENTATION	9.86460099736126E-7	DESIGN	5.375589162275591E-7	DEFECT	1.5755245091352043E-7	TEST	1.003365032998121E-7	DOCUMENTATION
// VERSION	WITHOUT_CLASSIFICATION	0.9999987750003203	WITHOUT_CLASSIFICATION	7.562200335111501E-7	DESIGN	2.157841086392899E-7	DEFECT	1.7177580039658335E-7	IMPLEMENTATION	4.598904887185594E-8	TEST	3.523068827196695E-8	DOCUMENTATION
//WHERE STRING	WITHOUT_CLASSIFICATION	0.9999894668418289	WITHOUT_CLASSIFICATION	5.29911446208688E-6	IMPLEMENTATION	4.076677552095471E-6	DESIGN	4.570214065581893E-7	DOCUMENTATION	4.503680305555569E-7	DEFECT	2.4997671983061573E-7	TEST
// SUBCLASS PROPERTY CLOSURE	WITHOUT_CLASSIFICATION	0.9999967724649291	WITHOUT_CLASSIFICATION	2.606340079169163E-6	DESIGN	2.621114863651307E-7	IMPLEMENTATION	1.727328183228639E-7	DOCUMENTATION	1.335710679177461E-7	DEFECT	5.277961899365608E-8	TEST
//before add :-)	WITHOUT_CLASSIFICATION	0.9928696012730475	WITHOUT_CLASSIFICATION	0.006219968031973879	DESIGN	8.110026702260168E-4	IMPLEMENTATION	6.073964875491028E-5	DEFECT	3.100801395628295E-5	DOCUMENTATION	7.680362041400126E-6	TEST
// Handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.9961849644113683	WITHOUT_CLASSIFICATION	0.0037911923288731697	DESIGN	2.3407175826275843E-5	IMPLEMENTATION	1.4581050799450161E-7	TEST	1.451391667391972E-7	DOCUMENTATION	1.4513425758930397E-7	DEFECT
// only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.9999956016091712	WITHOUT_CLASSIFICATION	2.5584166059555577E-6	DEFECT	1.5160782617299777E-6	DESIGN	2.6413116318107146E-7	IMPLEMENTATION	4.1565872285529223E-8	TEST	1.8198925653457334E-8	DOCUMENTATION
//note early exit here:	WITHOUT_CLASSIFICATION	0.9992135699282861	WITHOUT_CLASSIFICATION	5.988498762455555E-4	DESIGN	1.2381942986628206E-4	DEFECT	4.684225249584828E-5	IMPLEMENTATION	1.2897045440311106E-5	TEST	4.021467665859563E-6	DOCUMENTATION
// object have been loaded with setReadOnly(true); HHH-2236	WITHOUT_CLASSIFICATION	0.9999833194186073	WITHOUT_CLASSIFICATION	1.4028367483765428E-5	DESIGN	1.9620214148887366E-6	DEFECT	5.926987976387046E-7	IMPLEMENTATION	5.57742218614312E-8	TEST	4.1719474461087715E-8	DOCUMENTATION
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.9934245046062041	WITHOUT_CLASSIFICATION	0.0031814138804029785	TEST	0.0024438671831536374	DESIGN	9.384577031024796E-4	DEFECT	9.217381123121486E-6	IMPLEMENTATION	2.5392460136878193E-6	DOCUMENTATION
//strip leading ", "	WITHOUT_CLASSIFICATION	0.999996418252142	WITHOUT_CLASSIFICATION	2.0870632101656763E-6	DESIGN	8.468510919970294E-7	IMPLEMENTATION	3.7252565496134123E-7	DEFECT	1.87162898809194E-7	TEST	8.814500192580359E-8	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9999916658931663	WITHOUT_CLASSIFICATION	6.9811888028457065E-6	DEFECT	1.2125300336956053E-6	DESIGN	1.249414494123532E-7	TEST	1.021033272371468E-8	IMPLEMENTATION	5.236215040908566E-9	DOCUMENTATION
//otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.962273387170002	WITHOUT_CLASSIFICATION	0.037427332419005324	DESIGN	2.78073846893108E-4	IMPLEMENTATION	1.2445016775624076E-5	DEFECT	7.962310685820803E-6	TEST	7.992366381123831E-7	DOCUMENTATION
//null owner ok??	WITHOUT_CLASSIFICATION	0.9999624329113376	WITHOUT_CLASSIFICATION	2.9758080733893853E-5	DESIGN	3.920938348061929E-6	DEFECT	3.553449265991673E-6	IMPLEMENTATION	1.9840105464469003E-7	DOCUMENTATION	1.3621925977915884E-7	TEST
// null sql means that the only lazy properties // are shared PK one-to-one associations which are // handled differently in the Type#nullSafeGet code...	WITHOUT_CLASSIFICATION	0.9999587059459456	WITHOUT_CLASSIFICATION	4.12096513930179E-5	DESIGN	6.465414387933489E-8	DOCUMENTATION	1.6375643704287325E-8	DEFECT	1.7566139063422746E-9	IMPLEMENTATION	1.6162597545959206E-9	TEST
// Create a new FROM node for the referenced class.	WITHOUT_CLASSIFICATION	0.9999896425220746	WITHOUT_CLASSIFICATION	1.0353301975654486E-5	DESIGN	2.066472140806392E-9	DOCUMENTATION	1.354367616672063E-9	TEST	5.83740176654103E-10	DEFECT	1.7136986878662878E-10	IMPLEMENTATION
// the difficulty here is exactly what do we update in order to // force the version to be incremented in the db...	WITHOUT_CLASSIFICATION	0.854510761294765	WITHOUT_CLASSIFICATION	0.14537403787936073	DESIGN	7.478170030962519E-5	DEFECT	3.7501654690269607E-5	IMPLEMENTATION	2.7060942215034013E-6	DOCUMENTATION	2.1137665292134369E-7	TEST
// performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.9999983227478959	WITHOUT_CLASSIFICATION	1.4594129444753578E-6	DESIGN	1.701954610128204E-7	DOCUMENTATION	2.577903761440884E-8	DEFECT	2.0434675274629472E-8	IMPLEMENTATION	1.4299857806760863E-9	TEST
// properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.9999970032593063	WITHOUT_CLASSIFICATION	2.5279666842692765E-6	DESIGN	2.732080217359548E-7	IMPLEMENTATION	8.310381639619292E-8	DEFECT	5.869566610605598E-8	TEST	5.376650510323065E-8	DOCUMENTATION
//Enable for HHH-440, which we don't like:	WITHOUT_CLASSIFICATION	0.9970173293626561	WITHOUT_CLASSIFICATION	0.0029783335022718154	DESIGN	1.8888605592075277E-6	DOCUMENTATION	1.5535588242501908E-6	DEFECT	6.817705657948146E-7	TEST	2.1294512286476616E-7	IMPLEMENTATION
// ALIASES	WITHOUT_CLASSIFICATION	0.9999954009066445	WITHOUT_CLASSIFICATION	2.72732689642443E-6	DESIGN	1.415278587461336E-6	DEFECT	3.295088734974731E-7	IMPLEMENTATION	8.480758795442059E-8	DOCUMENTATION	4.2171410187296236E-8	TEST
// aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.9999804317659726	WITHOUT_CLASSIFICATION	1.926964697834613E-5	DESIGN	2.4845053006692047E-7	IMPLEMENTATION	3.36290306483615E-8	TEST	8.738240352334841E-9	DEFECT	7.769248005860437E-9	DOCUMENTATION
// aliases for composite-id's	WITHOUT_CLASSIFICATION	0.9999999680869224	WITHOUT_CLASSIFICATION	2.245255889814199E-8	DESIGN	5.399914179380241E-9	IMPLEMENTATION	1.897485701903959E-9	DEFECT	1.877732423415266E-9	TEST	2.853863772018365E-10	DOCUMENTATION
// Fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.9999999894435009	WITHOUT_CLASSIFICATION	9.075402487630604E-9	DESIGN	1.3538665336684005E-9	DEFECT	1.0136375786803716E-10	TEST	2.2760717428758234E-11	DOCUMENTATION	3.1056426867679803E-12	IMPLEMENTATION
// embedded composite ids ( alias.idname1, alias.idname2 )	WITHOUT_CLASSIFICATION	0.9999998811469474	WITHOUT_CLASSIFICATION	9.670297584710723E-8	DESIGN	1.2463363419827098E-8	IMPLEMENTATION	8.158214362105185E-9	DEFECT	1.1172432191291428E-9	TEST	4.112557834408489E-10	DOCUMENTATION
// TODO: skip formulas?	WITHOUT_CLASSIFICATION	0.7581752642673344	IMPLEMENTATION	0.14887542220692584	DESIGN	0.08344958418076821	WITHOUT_CLASSIFICATION	0.004702953939119478	DOCUMENTATION	0.003967925389764555	DEFECT	8.288500160873913E-4	TEST
//don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9999886868005334	WITHOUT_CLASSIFICATION	5.535045151998737E-6	DESIGN	4.935635950851716E-6	IMPLEMENTATION	4.804558802732073E-7	TEST	2.216093963942903E-7	DEFECT	1.4045308692594589E-7	DOCUMENTATION
//do two passes, for collection property-ref!	WITHOUT_CLASSIFICATION	0.9999978842976772	WITHOUT_CLASSIFICATION	1.676300072924392E-6	DEFECT	2.2292765688654004E-7	IMPLEMENTATION	1.4027893575669644E-7	TEST	3.81822452780344E-8	DOCUMENTATION	3.80134120101745E-8	DESIGN
// select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.999982688479494	WITHOUT_CLASSIFICATION	8.743791218319767E-6	DESIGN	8.425822160193797E-6	DEFECT	8.016161013619618E-8	IMPLEMENTATION	5.732033304992753E-8	TEST	4.425184325852557E-9	DOCUMENTATION
//TODO: eventually, rowIdName[j]	WITHOUT_CLASSIFICATION	0.7860476644977752	IMPLEMENTATION	0.17938437305683552	WITHOUT_CLASSIFICATION	0.025949530707100172	DESIGN	0.007944141444992885	DEFECT	5.058825471460117E-4	DOCUMENTATION	1.6840774615021573E-4	TEST
// this is a property of the table, which we are updating	WITHOUT_CLASSIFICATION	0.9999635167339802	WITHOUT_CLASSIFICATION	3.0425420506139218E-5	DEFECT	5.975898425092428E-6	DESIGN	3.529322498984173E-8	DOCUMENTATION	3.152041010068895E-8	TEST	1.5133453401027394E-8	IMPLEMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9997283377584466	WITHOUT_CLASSIFICATION	1.6191887251367724E-4	DEFECT	9.635539407240426E-5	DESIGN	8.247471242858663E-6	TEST	3.2260792293643926E-6	DOCUMENTATION	1.914424494945695E-6	IMPLEMENTATION
// we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.9998439094517738	WITHOUT_CLASSIFICATION	1.2937875853628593E-4	DEFECT	2.597630901574009E-5	DESIGN	3.8717886566781773E-7	IMPLEMENTATION	2.329446822888727E-7	DOCUMENTATION	1.1535712630668788E-7	TEST
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9995825272879525	WITHOUT_CLASSIFICATION	4.1010829107914555E-4	DESIGN	5.966763451488479E-6	TEST	7.756863540901233E-7	DEFECT	5.950077214358506E-7	IMPLEMENTATION	2.696344134464767E-8	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9998939238234799	WITHOUT_CLASSIFICATION	1.0111006366021654E-4	DESIGN	4.946029829916169E-6	DEFECT	1.9092864391968213E-8	TEST	9.742258103541348E-10	DOCUMENTATION	1.5939769042818834E-11	IMPLEMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9999999050148232	WITHOUT_CLASSIFICATION	4.145553377937816E-8	IMPLEMENTATION	2.667129420007691E-8	DESIGN	1.3130542346440477E-8	DEFECT	1.2371034887501008E-8	DOCUMENTATION	1.3567714412766673E-9	TEST
// add the discriminator	WITHOUT_CLASSIFICATION	0.9999811923689162	WITHOUT_CLASSIFICATION	1.8660415708029802E-5	DESIGN	1.217081478957432E-7	DOCUMENTATION	1.1906847605289537E-8	IMPLEMENTATION	7.546329178414981E-9	TEST	6.054051198333824E-9	DEFECT
// more specifically : "? [op] datetime" //      1) if the operator is MINUS, the param needs to be of //          some datetime type //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.8139682856171006	WITHOUT_CLASSIFICATION	0.1859689322725318	DESIGN	5.8265377869913255E-5	DEFECT	2.716461758902816E-6	DOCUMENTATION	1.447786565272086E-6	TEST	3.5248417339954845E-7	IMPLEMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9999999050148232	WITHOUT_CLASSIFICATION	4.145553377937816E-8	IMPLEMENTATION	2.667129420007691E-8	DESIGN	1.3130542346440477E-8	DEFECT	1.2371034887501008E-8	DOCUMENTATION	1.3567714412766673E-9	TEST
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9998939238234799	WITHOUT_CLASSIFICATION	1.0111006366021654E-4	DESIGN	4.946029829916169E-6	DEFECT	1.9092864391968213E-8	TEST	9.742258103541348E-10	DOCUMENTATION	1.5939769042818834E-11	IMPLEMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.9999811923689162	WITHOUT_CLASSIFICATION	1.8660415708029802E-5	DESIGN	1.217081478957432E-7	DOCUMENTATION	1.1906847605289537E-8	IMPLEMENTATION	7.546329178414981E-9	TEST	6.054051198333824E-9	DEFECT
// add the primary key	WITHOUT_CLASSIFICATION	0.9999681831803029	WITHOUT_CLASSIFICATION	2.9802517109920077E-5	DESIGN	1.5578930112760511E-6	IMPLEMENTATION	3.4645880652854057E-7	DOCUMENTATION	6.158098730302194E-8	TEST	4.8369782146707985E-8	DEFECT
// delegate already handles PK columns	WITHOUT_CLASSIFICATION	0.9999971373215191	WITHOUT_CLASSIFICATION	2.633851667933103E-6	DESIGN	1.1363654104440177E-7	IMPLEMENTATION	9.215736903287867E-8	DEFECT	1.3030717222278777E-8	DOCUMENTATION	1.0002185564930949E-8	TEST
// we can't batch joined inserts, *especially* not if it is an identity insert; // nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.999997595619782	WITHOUT_CLASSIFICATION	2.350793058543991E-6	DEFECT	5.142267257068743E-8	DESIGN	2.0730166633768887E-9	TEST	6.437059387429383E-11	DOCUMENTATION	2.7099695573886545E-11	IMPLEMENTATION
// Render the SQL query	WITHOUT_CLASSIFICATION	0.9961393309842762	WITHOUT_CLASSIFICATION	0.0037938624342344317	DESIGN	6.162937186474646E-5	DEFECT	2.226049602563345E-6	DOCUMENTATION	1.9604773580432007E-6	IMPLEMENTATION	9.906826639519848E-7	TEST
// Write the values of fields onto the prepared statement - we MUST use the state at the time the // insert was issued (cos of foreign key constraints). Not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.9998247797925276	WITHOUT_CLASSIFICATION	1.1577679540707157E-4	DESIGN	5.935882385671629E-5	DEFECT	5.8887623968154986E-8	DOCUMENTATION	2.3669277668837088E-8	TEST	2.031306955903634E-9	IMPLEMENTATION
// TODO : shouldnt inserts be Expectations.NONE?	WITHOUT_CLASSIFICATION	0.9868703228332267	DESIGN	0.00825613046785178	IMPLEMENTATION	0.004740504532963178	DEFECT	6.909110004782691E-5	TEST	5.1340622338232915E-5	WITHOUT_CLASSIFICATION	1.2610443572113191E-5	DOCUMENTATION
//don't bother trying to update, we know there is no row there yet	WITHOUT_CLASSIFICATION	0.6012623174524296	DESIGN	0.39651449173747916	WITHOUT_CLASSIFICATION	0.002150233461946638	DEFECT	5.624547674945928E-5	IMPLEMENTATION	1.4956296280381738E-5	TEST	1.75557511467742E-6	DOCUMENTATION
//if all fields are null, we might need to delete existing row	WITHOUT_CLASSIFICATION	0.9999155760611937	WITHOUT_CLASSIFICATION	4.80332532121748E-5	IMPLEMENTATION	3.155321756259961E-5	DESIGN	3.847152059856132E-6	DEFECT	7.492677717528806E-7	TEST	2.410481997816476E-7	DOCUMENTATION
//there is probably a row there, so try to update //if no rows were updated, we will find out	WITHOUT_CLASSIFICATION	0.998652164202037	WITHOUT_CLASSIFICATION	0.0013478075982094274	DESIGN	2.187488902707031E-8	IMPLEMENTATION	3.0075404656116616E-9	TEST	1.892888194296996E-9	DEFECT	1.4244359824352975E-9	DOCUMENTATION
//note: updates to joined tables can't be batched...	WITHOUT_CLASSIFICATION	0.9999943597767091	WITHOUT_CLASSIFICATION	5.068462769638823E-6	DEFECT	5.488812672675958E-7	DESIGN	1.0139583807415118E-8	IMPLEMENTATION	7.92478324951169E-9	TEST	4.814887053513449E-9	DOCUMENTATION
// starting index	WITHOUT_CLASSIFICATION	0.999985495404523	WITHOUT_CLASSIFICATION	6.662918155756416E-6	DEFECT	4.667202562293395E-6	DESIGN	2.841713754743897E-6	IMPLEMENTATION	1.791249089873314E-7	DOCUMENTATION	1.5363609523922594E-7	TEST
//Now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.9998750450527654	WITHOUT_CLASSIFICATION	1.0354404034272272E-4	DESIGN	1.0961152931643763E-5	DEFECT	8.28573121587205E-6	IMPLEMENTATION	2.033069005083566E-6	TEST	1.3095373940269784E-7	DOCUMENTATION
// Write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.9998225557980819	WITHOUT_CLASSIFICATION	1.033203026100793E-4	DEFECT	5.5269905873136745E-5	DESIGN	1.8316197895277238E-5	IMPLEMENTATION	3.9478129014175463E-7	DOCUMENTATION	1.4301424939582068E-7	TEST
//Render the SQL query	WITHOUT_CLASSIFICATION	0.9975985572973554	WITHOUT_CLASSIFICATION	0.0023790821831585684	DESIGN	1.6269026488436095E-5	DEFECT	3.6521265153755468E-6	DOCUMENTATION	1.311445750355953E-6	TEST	1.1279207319417797E-6	IMPLEMENTATION
// Do the key. The key is immutable so we can use the _current_ object state - not necessarily // the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.9999791618011843	WITHOUT_CLASSIFICATION	1.4949648174750442E-5	IMPLEMENTATION	5.499020621268866E-6	DEFECT	2.176156599442119E-7	DESIGN	1.6237609370859274E-7	DOCUMENTATION	9.538265944830739E-9	TEST
// We should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.9999972281202264	WITHOUT_CLASSIFICATION	2.304101488310241E-6	DESIGN	4.36458411996715E-7	DEFECT	2.5185221716595966E-8	IMPLEMENTATION	4.550750100096364E-9	DOCUMENTATION	1.5839014835493467E-9	TEST
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999958117825307	WITHOUT_CLASSIFICATION	3.5495429449418405E-6	DESIGN	6.348604636627266E-7	DEFECT	2.185989265520357E-9	TEST	1.5555422915984635E-9	DOCUMENTATION	7.25291770889595E-11	IMPLEMENTATION
//note: dirtyFields==null means we had no snapshot, and we couldn't get one using select-before-update //	WITHOUT_CLASSIFICATION	0.9999971590708038	WITHOUT_CLASSIFICATION	2.230732221239373E-6	DESIGN	5.635503604778216E-7	DEFECT	4.5784937280045754E-8	IMPLEMENTATION	7.227694286516283E-10	TEST	1.3890768111840456E-10	DOCUMENTATION
// more specifically : "datetime [op] ?" //      1) if the operator is MINUS, we really cannot determine //          the expected type as either another datetime or //          numeric would be valid //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9997150544032042	WITHOUT_CLASSIFICATION	2.8459137508097697E-4	DESIGN	3.444216747056718E-7	DEFECT	5.75968486532357E-9	TEST	4.032962290658284E-9	DOCUMENTATION	7.392975535433983E-12	IMPLEMENTATION
// For the case of dynamic-update="true", we need to generate the UPDATE SQL	WITHOUT_CLASSIFICATION	0.9999998925034476	WITHOUT_CLASSIFICATION	9.160664392286811E-8	DESIGN	8.821190490291253E-9	DOCUMENTATION	3.4206111195650307E-9	TEST	2.074463690281939E-9	IMPLEMENTATION	1.5736432169362372E-9	DEFECT
// don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.6017363602284408	IMPLEMENTATION	0.24961701062839842	WITHOUT_CLASSIFICATION	0.143290845364586	DESIGN	0.005119561891487397	DEFECT	1.2343557791188892E-4	DOCUMENTATION	1.1278630917557448E-4	TEST
// For the case of dynamic-update="false", or no snapshot, we use the static SQL	WITHOUT_CLASSIFICATION	0.9999999948072366	WITHOUT_CLASSIFICATION	3.748077374048314E-9	DESIGN	8.713246147474476E-10	DEFECT	2.9400432659325564E-10	IMPLEMENTATION	2.741487116800812E-10	DOCUMENTATION	5.208510262262703E-12	TEST
// if not "get", then try "is"	WITHOUT_CLASSIFICATION	0.9999589006902756	WITHOUT_CLASSIFICATION	2.472606411541409E-5	DESIGN	1.4658487537829335E-5	DEFECT	1.1720588040061033E-6	TEST	3.7677939144157514E-7	IMPLEMENTATION	1.6591987570488538E-7	DOCUMENTATION
// Now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.9999996618864815	WITHOUT_CLASSIFICATION	3.2076001149393875E-7	DESIGN	1.544482725840978E-8	IMPLEMENTATION	7.588790763659516E-10	TEST	7.25438893434246E-10	DEFECT	4.2436176092660137E-10	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999991011097535	WITHOUT_CLASSIFICATION	8.180685958961607E-7	DESIGN	5.342709743041562E-8	TEST	2.3436126609979325E-8	DOCUMENTATION	2.870722486243694E-9	DEFECT	1.0877040734328438E-9	IMPLEMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999991011097535	WITHOUT_CLASSIFICATION	8.180685958961607E-7	DESIGN	5.342709743041562E-8	TEST	2.3436126609979325E-8	DOCUMENTATION	2.870722486243694E-9	DEFECT	1.0877040734328438E-9	IMPLEMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999999890500761	WITHOUT_CLASSIFICATION	8.935619541667896E-9	DESIGN	1.6733367769549096E-9	DEFECT	2.2520783152143446E-10	DOCUMENTATION	7.566295106831944E-11	IMPLEMENTATION	4.009691998769103E-11	TEST
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999999890500761	WITHOUT_CLASSIFICATION	8.935619541667896E-9	DESIGN	1.6733367769549096E-9	DEFECT	2.2520783152143446E-10	DOCUMENTATION	7.566295106831944E-11	IMPLEMENTATION	4.009691998769103E-11	TEST
// not supported	WITHOUT_CLASSIFICATION	0.993774328553869	WITHOUT_CLASSIFICATION	0.004556763326348355	IMPLEMENTATION	0.0016284907598544166	DESIGN	3.3391441497107075E-5	DEFECT	4.566722368038986E-6	TEST	2.4591960629847842E-6	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999958117825307	WITHOUT_CLASSIFICATION	3.5495429449418405E-6	DESIGN	6.348604636627266E-7	DEFECT	2.185989265520357E-9	TEST	1.5555422915984635E-9	DOCUMENTATION	7.25291770889595E-11	IMPLEMENTATION
// we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.9999854481921875	WITHOUT_CLASSIFICATION	1.3490444007419457E-5	DESIGN	6.780526905105899E-7	DOCUMENTATION	3.256071490903923E-7	IMPLEMENTATION	3.353755346043653E-8	DEFECT	2.416641205204929E-8	TEST
// otherwise, utilize the static delete statements	WITHOUT_CLASSIFICATION	0.9999975803840342	WITHOUT_CLASSIFICATION	1.4354509893219393E-6	DESIGN	9.813691317231054E-7	IMPLEMENTATION	1.4290107422819688E-9	DOCUMENTATION	8.871732428415868E-10	TEST	4.796608066249041E-10	DEFECT
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9999284538325317	WITHOUT_CLASSIFICATION	6.801530398940596E-5	DESIGN	1.7490903263321877E-6	DOCUMENTATION	1.4826071008588022E-6	IMPLEMENTATION	1.541562679089785E-7	TEST	1.450097838568126E-7	DEFECT
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9999284538325317	WITHOUT_CLASSIFICATION	6.801530398940596E-5	DESIGN	1.7490903263321877E-6	DOCUMENTATION	1.4826071008588022E-6	IMPLEMENTATION	1.541562679089785E-7	TEST	1.450097838568126E-7	DEFECT
//all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.9999977977136163	WITHOUT_CLASSIFICATION	1.3092764722329113E-6	IMPLEMENTATION	6.420320295072265E-7	DESIGN	2.1633345764579984E-7	DEFECT	3.0254731533514725E-8	DOCUMENTATION	4.389692729607883E-9	TEST
//notice that we skip the first table; it is the driving table!	WITHOUT_CLASSIFICATION	0.9999994563881485	WITHOUT_CLASSIFICATION	3.4102617298871203E-7	DESIGN	1.0815266874724956E-7	IMPLEMENTATION	7.419680494690563E-8	DEFECT	1.8496005789717438E-8	TEST	1.740199148451486E-9	DOCUMENTATION
//we can inner join to superclass tables (the row MUST be there) //we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.9998571074631646	WITHOUT_CLASSIFICATION	1.4289169633285585E-4	DESIGN	6.051149026337935E-10	DEFECT	1.8902775656471356E-10	DOCUMENTATION	2.350541827879831E-11	IMPLEMENTATION	2.285447737158515E-11	TEST
//skip the driving table	WITHOUT_CLASSIFICATION	0.9999905629589688	WITHOUT_CLASSIFICATION	6.49289906423694E-6	IMPLEMENTATION	2.5182139650751268E-6	DESIGN	2.2223043996773337E-7	DEFECT	1.3181199175820999E-7	TEST	7.188557013697891E-8	DOCUMENTATION
//get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.9303761440888525	WITHOUT_CLASSIFICATION	0.06382863799082916	DESIGN	0.005705673475868391	DEFECT	8.53026884837911E-5	IMPLEMENTATION	3.0301157398948836E-6	DOCUMENTATION	1.2116402262749916E-6	TEST
// here, we work under the following assumptions: //      ------------ valid cases -------------------------------------- //      1) datetime + {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      2) datetime - datetime : always results in a DOUBLE //      3) datetime - {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      ------------ invalid cases ------------------------------------ //      4) datetime + datetime //      5) {something other than datetime} - datetime //      6) datetime * {any type} //      7) datetime / {any type} //      8) {any type} / datetime // doing so allows us to properly handle parameters as either the left // or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.9598118735947538	WITHOUT_CLASSIFICATION	0.039970343713714704	DEFECT	2.1771774069751285E-4	DESIGN	4.078770214994451E-8	IMPLEMENTATION	1.8088794473578435E-8	DOCUMENTATION	6.0743374035809835E-9	TEST
//render the where and from parts	WITHOUT_CLASSIFICATION	0.9995902228579381	WITHOUT_CLASSIFICATION	3.914754701919241E-4	DESIGN	1.1704165556151599E-5	DEFECT	3.9900399913167774E-6	TEST	1.3515354711952895E-6	DOCUMENTATION	1.2559308512049438E-6	IMPLEMENTATION
//we *could* regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.9782167178099007	WITHOUT_CLASSIFICATION	0.021762974892100686	DESIGN	1.9034232142319234E-5	DEFECT	1.0339309971384232E-6	IMPLEMENTATION	1.9832127459186846E-7	TEST	4.08135846523224E-8	DOCUMENTATION
//now render the joins	WITHOUT_CLASSIFICATION	0.9997097871149209	WITHOUT_CLASSIFICATION	2.6296786428934747E-4	DESIGN	1.6775248169112577E-5	DEFECT	8.005873551327562E-6	IMPLEMENTATION	2.022624204337205E-6	DOCUMENTATION	4.412748650762332E-7	TEST
// This will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.9999914056871184	WITHOUT_CLASSIFICATION	6.239269742029556E-6	DESIGN	1.7402283627895152E-6	IMPLEMENTATION	4.623032994822969E-7	DEFECT	1.3063855931595255E-7	DOCUMENTATION	2.18729179961849E-8	TEST
//now render the select clause	WITHOUT_CLASSIFICATION	0.999999626040214	WITHOUT_CLASSIFICATION	1.7767521214833477E-7	DESIGN	1.518269220989541E-7	DEFECT	3.7962905857658E-8	IMPLEMENTATION	4.660651681218976E-9	DOCUMENTATION	1.83409421845835E-9	TEST
//now tie it all together	WITHOUT_CLASSIFICATION	0.9999780419171203	WITHOUT_CLASSIFICATION	1.6748230161495328E-5	DESIGN	5.1500600636418304E-6	IMPLEMENTATION	2.235855113786394E-8	DEFECT	2.171267034710624E-8	TEST	1.572143308763725E-8	DOCUMENTATION
//insert/update/delete SQL	WITHOUT_CLASSIFICATION	0.9999972028072045	WITHOUT_CLASSIFICATION	2.52331742947278E-6	DESIGN	2.4456458090537145E-7	DEFECT	1.3052329675570605E-8	IMPLEMENTATION	9.668290337965518E-9	DOCUMENTATION	6.590164949363575E-9	TEST
//select SQL	WITHOUT_CLASSIFICATION	0.9999817915759712	WITHOUT_CLASSIFICATION	1.6370076738791564E-5	DESIGN	1.0288310376697208E-6	IMPLEMENTATION	5.608730385176394E-7	DEFECT	1.2825047381212695E-7	DOCUMENTATION	1.2039274005350643E-7	TEST
//no need to check laziness, dirty checking handles that	WITHOUT_CLASSIFICATION	0.9987321391838313	WITHOUT_CLASSIFICATION	8.776921553391103E-4	DESIGN	3.7860569595745715E-4	IMPLEMENTATION	4.6882191519768145E-6	DEFECT	3.588644706399149E-6	DOCUMENTATION	3.286101013717204E-6	TEST
// Fully resolve the map reference, create implicit joins.	WITHOUT_CLASSIFICATION	0.999916574327063	WITHOUT_CLASSIFICATION	8.280707588548405E-5	DESIGN	2.7604624768449154E-7	IMPLEMENTATION	1.672381929252414E-7	DEFECT	1.2302840963250204E-7	TEST	5.228420118870162E-8	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998255674861074	WITHOUT_CLASSIFICATION	1.728843589116382E-4	DESIGN	8.856407347434112E-7	DEFECT	3.402775243104149E-7	TEST	2.28093344464216E-7	IMPLEMENTATION	9.414337744683082E-8	DOCUMENTATION
// The basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.999999045772864	WITHOUT_CLASSIFICATION	9.012295396666033E-7	DESIGN	4.318092733715185E-8	IMPLEMENTATION	7.3206295467771315E-9	DEFECT	2.2064690366794096E-9	DOCUMENTATION	2.895704051830837E-10	TEST
// for dialects which are known to not support ANSI-SQL row-value-constructor syntax, // we should mutate the tree.	WITHOUT_CLASSIFICATION	0.9998378716965596	WITHOUT_CLASSIFICATION	1.615935062050404E-4	DESIGN	3.2709729209992255E-7	DEFECT	1.9425650645811367E-7	IMPLEMENTATION	1.0184338634321648E-8	TEST	3.2590981932099236E-9	DOCUMENTATION
// Due to the complexity in initializing the SelectClause, do not generate one here. // If it is not found; simply return null... // // Also, do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.9999991922961806	WITHOUT_CLASSIFICATION	4.843793491043242E-7	DEFECT	2.2961283407749606E-7	DESIGN	9.249835707284986E-8	IMPLEMENTATION	8.945276151074254E-10	TEST	3.187515612427672E-10	DOCUMENTATION
// check the version unsaved-value, if appropriate	WITHOUT_CLASSIFICATION	0.9999857915091918	WITHOUT_CLASSIFICATION	9.772260489609213E-6	IMPLEMENTATION	3.7716769025478123E-6	DESIGN	6.441712429161062E-7	DEFECT	1.8170133675043228E-8	DOCUMENTATION	2.212039399706572E-9	TEST
// let this take precedence if defined, since it works for // assigned identifiers	WITHOUT_CLASSIFICATION	0.9999998621201039	WITHOUT_CLASSIFICATION	8.621523490047448E-8	DEFECT	3.107222360320488E-8	TEST	1.4812022972012307E-8	DESIGN	4.988608872669797E-9	IMPLEMENTATION	7.918057153379024E-10	DOCUMENTATION
// check the id unsaved-value	WITHOUT_CLASSIFICATION	0.9999936784187728	WITHOUT_CLASSIFICATION	3.2010286135506767E-6	IMPLEMENTATION	2.1121538884407255E-6	DESIGN	8.850663259970616E-7	DEFECT	1.1568493306874107E-7	DOCUMENTATION	7.647466190286973E-9	TEST
// check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.9999940842024551	WITHOUT_CLASSIFICATION	5.759235754551753E-6	DESIGN	1.1764495560448002E-7	DEFECT	2.7845091838500812E-8	IMPLEMENTATION	9.540940225912482E-9	DOCUMENTATION	1.5308027575467101E-9	TEST
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997808702198667	WITHOUT_CLASSIFICATION	1.8039887732025525E-4	DESIGN	1.8687851948760043E-5	IMPLEMENTATION	8.302523883219948E-6	DEFECT	6.018446551254673E-6	TEST	5.7220804297309275E-6	DOCUMENTATION
// For property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.9999997459360429	WITHOUT_CLASSIFICATION	1.3394406308231396E-7	DEFECT	6.109264920177988E-8	DESIGN	4.902093139898024E-8	IMPLEMENTATION	6.0812966595420224E-9	DOCUMENTATION	3.925016877070345E-9	TEST
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999960904946565	WITHOUT_CLASSIFICATION	1.3968289166594325E-6	IMPLEMENTATION	1.1716273835302389E-6	DEFECT	9.850729298611552E-7	DESIGN	1.8091627428451516E-7	DOCUMENTATION	1.7505983908293684E-7	TEST
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9999916658931663	WITHOUT_CLASSIFICATION	6.9811888028457065E-6	DEFECT	1.2125300336956053E-6	DESIGN	1.249414494123532E-7	TEST	1.021033272371468E-8	IMPLEMENTATION	5.236215040908566E-9	DOCUMENTATION
//force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.9999985396754694	WITHOUT_CLASSIFICATION	1.1785270719836747E-6	DEFECT	2.257757251863332E-7	DESIGN	3.4204627337520254E-8	DOCUMENTATION	1.8685195387462292E-8	TEST	3.131910667689059E-9	IMPLEMENTATION
// If this from element is a collection and the path is a collection property (maxIndex, etc.) then // generate a sub-query.	WITHOUT_CLASSIFICATION	0.9999871415195948	WITHOUT_CLASSIFICATION	1.1662522512998688E-5	DEFECT	1.1385287690561048E-6	DESIGN	4.610702953875052E-8	TEST	6.732518357290859E-9	IMPLEMENTATION	4.58957524593999E-9	DOCUMENTATION
// entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999810186650162	WITHOUT_CLASSIFICATION	1.7449844300393855E-5	DESIGN	8.223700448206805E-7	IMPLEMENTATION	4.5911955232937476E-7	DEFECT	1.2622979877083857E-7	DOCUMENTATION	1.237712876032409E-7	TEST
// collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999988214065641	WITHOUT_CLASSIFICATION	8.397381376107923E-6	IMPLEMENTATION	2.631437140405159E-6	DEFECT	7.005914816035351E-7	DESIGN	2.9692363161855074E-8	DOCUMENTATION	2.6831997687613618E-8	TEST
//cannot occur	WITHOUT_CLASSIFICATION	0.9994501173748016	WITHOUT_CLASSIFICATION	5.447783252521887E-4	DESIGN	3.615394494447943E-6	DEFECT	1.088403444690314E-6	DOCUMENTATION	2.306321668607997E-7	IMPLEMENTATION	1.6986984030911202E-7	TEST
//cannot occur	WITHOUT_CLASSIFICATION	0.9994501173748016	WITHOUT_CLASSIFICATION	5.447783252521887E-4	DESIGN	3.615394494447943E-6	DEFECT	1.088403444690314E-6	DOCUMENTATION	2.306321668607997E-7	IMPLEMENTATION	1.6986984030911202E-7	TEST
// only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.9999981746941677	WITHOUT_CLASSIFICATION	1.6271294809351314E-6	DESIGN	1.908882928892502E-7	DEFECT	4.5457304864470145E-9	TEST	2.3834331812112335E-9	IMPLEMENTATION	3.588947161202916E-10	DOCUMENTATION
// try "get"	WITHOUT_CLASSIFICATION	0.9999954645893671	WITHOUT_CLASSIFICATION	1.9651042273937198E-6	DEFECT	1.7777129612814841E-6	DESIGN	7.07561456137197E-7	IMPLEMENTATION	4.2709025587970885E-8	DOCUMENTATION	4.2322962533074914E-8	TEST
// do nothing...	WITHOUT_CLASSIFICATION	0.9997042896111633	WITHOUT_CLASSIFICATION	1.9162342702511075E-4	DESIGN	1.0023351845916105E-4	DEFECT	2.1363462854803764E-6	DOCUMENTATION	1.1160739699952795E-6	IMPLEMENTATION	6.010230967418527E-7	TEST
// do nothing...	WITHOUT_CLASSIFICATION	0.9997042896111633	WITHOUT_CLASSIFICATION	1.9162342702511075E-4	DESIGN	1.0023351845916105E-4	DEFECT	2.1363462854803764E-6	DOCUMENTATION	1.1160739699952795E-6	IMPLEMENTATION	6.010230967418527E-7	TEST
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999774805777037	WITHOUT_CLASSIFICATION	1.2964995980584153E-5	DESIGN	9.336782199576727E-6	DEFECT	1.4254748663255394E-7	IMPLEMENTATION	4.399800356066133E-8	TEST	3.109862600868136E-8	DOCUMENTATION
// this page intentionally left blank :)	WITHOUT_CLASSIFICATION	0.9997456350338301	WITHOUT_CLASSIFICATION	2.4600972234635883E-4	DESIGN	4.810608094777328E-6	IMPLEMENTATION	2.0922385906467805E-6	DEFECT	1.3728440459262507E-6	DOCUMENTATION	7.955309233518509E-8	TEST
// do not do anything	WITHOUT_CLASSIFICATION	0.9999571665462763	WITHOUT_CLASSIFICATION	3.285211680386862E-5	DEFECT	6.189741815934529E-6	DESIGN	2.118843339323288E-6	DOCUMENTATION	1.2454058599229114E-6	IMPLEMENTATION	4.2734590472594105E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999994365319849	WITHOUT_CLASSIFICATION	3.751646589186226E-7	DESIGN	1.0889089547337328E-7	DEFECT	6.070382664797166E-8	IMPLEMENTATION	1.417363308791069E-8	DOCUMENTATION	4.535001194219872E-9	TEST
//cant instantiate	WITHOUT_CLASSIFICATION	0.999066910802128	WITHOUT_CLASSIFICATION	9.252801965633077E-4	DESIGN	4.121969244551682E-6	DEFECT	2.0506516261817997E-6	IMPLEMENTATION	1.2617762038741207E-6	DOCUMENTATION	3.7460423406175965E-7	TEST
//if it is a property of an embedded component, invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.9999737118371463	WITHOUT_CLASSIFICATION	2.6184896073532146E-5	DESIGN	6.358649902379991E-8	DEFECT	3.699162440883903E-8	TEST	2.559643183862211E-9	DOCUMENTATION	1.2901349107444802E-10	IMPLEMENTATION
// otherwise:	WITHOUT_CLASSIFICATION	0.9961621609358629	WITHOUT_CLASSIFICATION	0.003355099889445165	DESIGN	4.786725749746489E-4	IMPLEMENTATION	2.0551565606020213E-6	TEST	1.280758184551195E-6	DEFECT	7.306849721135203E-7	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.999783994639365	WITHOUT_CLASSIFICATION	1.1951437766430195E-4	DESIGN	9.314947185993426E-5	IMPLEMENTATION	1.732105799448261E-6	DEFECT	1.0526495725522303E-6	DOCUMENTATION	5.56755738759783E-7	TEST
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9963821301647531	WITHOUT_CLASSIFICATION	0.003597105523162881	DESIGN	2.0225859780520166E-5	DEFECT	3.302331075826475E-7	IMPLEMENTATION	1.7309226471993153E-7	DOCUMENTATION	3.512693111992699E-8	TEST
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9963821301647531	WITHOUT_CLASSIFICATION	0.003597105523162881	DESIGN	2.0225859780520166E-5	DEFECT	3.302331075826475E-7	IMPLEMENTATION	1.7309226471993153E-7	DOCUMENTATION	3.512693111992699E-8	TEST
// HHH-2481 make sure the callback gets cleared, otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.9928151702054057	WITHOUT_CLASSIFICATION	0.007171672632063889	DESIGN	1.2268719404364229E-5	DEFECT	8.606294789423869E-7	IMPLEMENTATION	2.6943750730224853E-8	DOCUMENTATION	8.698964083438206E-10	TEST
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999955512112267	WITHOUT_CLASSIFICATION	4.111122289408462E-6	DESIGN	1.498749409248459E-7	IMPLEMENTATION	1.2067945670270608E-7	DEFECT	6.142480844107694E-8	TEST	5.687277790970783E-9	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999955512112267	WITHOUT_CLASSIFICATION	4.111122289408462E-6	DESIGN	1.498749409248459E-7	IMPLEMENTATION	1.2067945670270608E-7	DEFECT	6.142480844107694E-8	TEST	5.687277790970783E-9	DOCUMENTATION
// note: interface is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9993900120712018	WITHOUT_CLASSIFICATION	6.087203212572402E-4	DESIGN	1.1950542261947466E-6	DEFECT	3.7334739468370146E-8	DOCUMENTATION	3.102861876532045E-8	IMPLEMENTATION	4.1899565549827805E-9	TEST
// interfaces // arguments	WITHOUT_CLASSIFICATION	0.9999964891241849	WITHOUT_CLASSIFICATION	3.4513622758826784E-6	DESIGN	3.696207148114821E-8	DEFECT	1.5165864470731984E-8	DOCUMENTATION	7.333584730424312E-9	TEST	5.201856238403759E-11	IMPLEMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9667453451389737	WITHOUT_CLASSIFICATION	0.025666655503741913	DESIGN	0.0037887100690787803	IMPLEMENTATION	0.001646597606689848	DEFECT	0.0013484900843080626	DOCUMENTATION	8.042015972076924E-4	TEST
// Get the caller	WITHOUT_CLASSIFICATION	0.9999996929751588	WITHOUT_CLASSIFICATION	1.5612181596351066E-7	DESIGN	1.3660122196068164E-7	IMPLEMENTATION	1.1296193889237017E-8	DEFECT	2.0508027152977956E-9	TEST	9.54806720034129E-10	DOCUMENTATION
// Get the caller principals	WITHOUT_CLASSIFICATION	0.9999998522830343	WITHOUT_CLASSIFICATION	1.0410308714424597E-7	DESIGN	3.4782027597075475E-8	IMPLEMENTATION	6.586661381261218E-9	DEFECT	1.6166452714745876E-9	DOCUMENTATION	6.28544200449905E-10	TEST
//private static final Alias DEFAULT_ALIAS = new Alias(10, null);	WITHOUT_CLASSIFICATION	0.9999999972893888	WITHOUT_CLASSIFICATION	1.4430824871727708E-9	DEFECT	1.128250630182109E-9	DESIGN	1.1446735646936215E-10	DOCUMENTATION	1.3489633394265412E-11	IMPLEMENTATION	1.132104162185645E-11	TEST
// Needed to bump this up to DotNode, because that is the only thing which currently // knows about the property-ref path in the correct format; it is either this, or // recurse over the DotNodes constructing the property path just like DotNode does // internally	WITHOUT_CLASSIFICATION	0.9999965183644052	WITHOUT_CLASSIFICATION	1.77272201091948E-6	IMPLEMENTATION	1.0696175805701738E-6	DESIGN	3.382461176631349E-7	DOCUMENTATION	2.93247105601896E-7	TEST	7.802780016137797E-9	DEFECT
//if the identifier is quoted, remove the quotes	WITHOUT_CLASSIFICATION	0.9999726217306821	WITHOUT_CLASSIFICATION	1.2804624070809273E-5	DESIGN	9.889198770429683E-6	TEST	4.3706727227672885E-6	IMPLEMENTATION	2.707829338416252E-7	DEFECT	4.2990820152245556E-8	DOCUMENTATION
//truncate the identifier to the max alias length, less the suffix length	WITHOUT_CLASSIFICATION	0.9999994165384063	WITHOUT_CLASSIFICATION	5.705967904271318E-7	DESIGN	8.768444131186602E-9	IMPLEMENTATION	2.9762866414562525E-9	DOCUMENTATION	8.097988420195007E-10	TEST	3.102737145035913E-10	DEFECT
//full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.9904535159962172	WITHOUT_CLASSIFICATION	0.006931571700690526	DEFECT	0.0016992329021410478	IMPLEMENTATION	8.915677040756727E-4	DESIGN	1.6826941643184204E-5	TEST	7.284755232404472E-6	DOCUMENTATION
// null is not considered the same type as Integer. //$NON-NLS-1 //$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999988936642326	WITHOUT_CLASSIFICATION	1.015693229397446E-6	DEFECT	8.639805523245226E-8	DESIGN	3.9706008919802455E-9	IMPLEMENTATION	2.2434568296878619E-10	TEST	4.953624199071417E-11	DOCUMENTATION
// the outerJoinsAfterWhere needs to come before where clause to properly // handle dynamic filters	WITHOUT_CLASSIFICATION	0.999996150336431	WITHOUT_CLASSIFICATION	3.442863329255497E-6	IMPLEMENTATION	1.9882425977948574E-7	DEFECT	1.9281543257273422E-7	DESIGN	1.1864145019598236E-8	DOCUMENTATION	3.2964024422035947E-9	TEST
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999385300274085	WITHOUT_CLASSIFICATION	5.156186486687925E-5	DESIGN	8.233168391626407E-6	DEFECT	7.299143659018547E-7	TEST	5.468764689513189E-7	DOCUMENTATION	3.9814849820329755E-7	IMPLEMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999385300274085	WITHOUT_CLASSIFICATION	5.156186486687925E-5	DESIGN	8.233168391626407E-6	DEFECT	7.299143659018547E-7	TEST	5.468764689513189E-7	DOCUMENTATION	3.9814849820329755E-7	IMPLEMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999385300274085	WITHOUT_CLASSIFICATION	5.156186486687925E-5	DESIGN	8.233168391626407E-6	DEFECT	7.299143659018547E-7	TEST	5.468764689513189E-7	DOCUMENTATION	3.9814849820329755E-7	IMPLEMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999385300274085	WITHOUT_CLASSIFICATION	5.156186486687925E-5	DESIGN	8.233168391626407E-6	DEFECT	7.299143659018547E-7	TEST	5.468764689513189E-7	DOCUMENTATION	3.9814849820329755E-7	IMPLEMENTATION
// strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.9999926275620247	WITHOUT_CLASSIFICATION	6.40801142238848E-6	DEFECT	5.295293238257734E-7	IMPLEMENTATION	2.7298974325159433E-7	DESIGN	8.741408565916741E-8	DOCUMENTATION	7.449340015355288E-8	TEST
// if the condition is not already there...	WITHOUT_CLASSIFICATION	0.9984989782488937	WITHOUT_CLASSIFICATION	0.0014571984268099544	DEFECT	2.6433605864092893E-5	DESIGN	1.6134381934606695E-5	IMPLEMENTATION	1.1494769878291015E-6	TEST	1.0585950987518952E-7	DOCUMENTATION
//dontSpace.add("'");	WITHOUT_CLASSIFICATION	0.9999960177372014	WITHOUT_CLASSIFICATION	1.6880282278932665E-6	IMPLEMENTATION	1.4830704474228133E-6	DESIGN	4.103312712984585E-7	DOCUMENTATION	3.1523624739124817E-7	DEFECT	8.559660471186625E-8	TEST
//for MySQL	WITHOUT_CLASSIFICATION	0.999452451645983	WITHOUT_CLASSIFICATION	5.386350935385248E-4	DESIGN	5.451106205065827E-6	DEFECT	1.7234233954833633E-6	DOCUMENTATION	8.804253084186852E-7	TEST	8.583055697952515E-7	IMPLEMENTATION
//HashMap columnsUnique = new HashMap();	WITHOUT_CLASSIFICATION	0.9999971460935877	WITHOUT_CLASSIFICATION	2.572140008507913E-6	IMPLEMENTATION	2.1239412807615028E-7	DESIGN	2.6654702212399904E-8	DEFECT	2.2777954441462186E-8	TEST	1.993961918751865E-8	DOCUMENTATION
//null caused some problems	WITHOUT_CLASSIFICATION	0.9988049941340187	WITHOUT_CLASSIFICATION	9.935614745805778E-4	DESIGN	1.8179545160927697E-4	DEFECT	1.1681465129227959E-5	IMPLEMENTATION	7.448478650232514E-6	DOCUMENTATION	5.189960120624902E-7	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9996866627785144	WITHOUT_CLASSIFICATION	2.588796342758592E-4	DESIGN	4.658146770550267E-5	IMPLEMENTATION	4.1116288446745785E-6	DEFECT	2.9143409007184537E-6	DOCUMENTATION	8.501497588761329E-7	TEST
//not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.9977875198875972	WITHOUT_CLASSIFICATION	0.002212093117442434	DESIGN	2.115954908359714E-7	DEFECT	1.3378464502034715E-7	TEST	3.310678754456928E-8	IMPLEMENTATION	8.508037061899423E-9	DOCUMENTATION
//even on inverse="true"	WITHOUT_CLASSIFICATION	0.9999976253236574	WITHOUT_CLASSIFICATION	9.89381317225212E-7	DESIGN	8.978031839179684E-7	IMPLEMENTATION	2.6348375708886656E-7	DEFECT	1.8224210833101539E-7	DOCUMENTATION	4.176597595851395E-8	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9996866627785144	WITHOUT_CLASSIFICATION	2.588796342758592E-4	DESIGN	4.658146770550267E-5	IMPLEMENTATION	4.1116288446745785E-6	DEFECT	2.9143409007184537E-6	DOCUMENTATION	8.501497588761329E-7	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9996866627785144	WITHOUT_CLASSIFICATION	2.588796342758592E-4	DESIGN	4.658146770550267E-5	IMPLEMENTATION	4.1116288446745785E-6	DEFECT	2.9143409007184537E-6	DOCUMENTATION	8.501497588761329E-7	TEST
// If true then execute db updates, otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.9999992922786212	WITHOUT_CLASSIFICATION	5.840777397941143E-7	IMPLEMENTATION	1.1360167784949492E-7	DESIGN	5.2201993604533896E-9	TEST	3.630662113808231E-9	DEFECT	1.1910996539716658E-9	DOCUMENTATION
// we only release the connection	WITHOUT_CLASSIFICATION	0.9999998815692912	WITHOUT_CLASSIFICATION	6.472670458118419E-8	DESIGN	2.8044695893936615E-8	DEFECT	1.6983064873997035E-8	DOCUMENTATION	7.771064836011213E-9	IMPLEMENTATION	9.051786503196681E-10	TEST
// deprecated option...	WITHOUT_CLASSIFICATION	0.9983025158911943	WITHOUT_CLASSIFICATION	0.0016052576726085356	DESIGN	6.047348488731252E-5	IMPLEMENTATION	2.8450234562165E-5	DEFECT	2.7043782451891086E-6	DOCUMENTATION	5.983385023900688E-7	TEST
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9998714159191093	WITHOUT_CLASSIFICATION	1.027492615690657E-4	DESIGN	1.661349427069808E-5	DEFECT	9.02649800228067E-6	IMPLEMENTATION	1.4267969281898655E-7	TEST	5.2147355819818104E-8	DOCUMENTATION
//actually, this last test is probably unnecessary, since  //beforeCompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.9998906961089872	WITHOUT_CLASSIFICATION	8.682530409892043E-5	TEST	2.233257263113907E-5	DESIGN	1.2235001753596546E-7	DEFECT	2.037605235233825E-8	DOCUMENTATION	3.2882128729128494E-9	IMPLEMENTATION
// this one only really needed for badly-behaved applications! // (if the TransactionManager has a Sychronization registered, // its a noop) // (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.999999950648092	WITHOUT_CLASSIFICATION	4.5581272949164193E-8	DESIGN	1.5396372846714733E-9	DEFECT	1.054796015314649E-9	TEST	8.235113727326101E-10	DOCUMENTATION	3.5269027159196245E-10	IMPLEMENTATION
// Create an DotNode AST for the path and resolve it.	WITHOUT_CLASSIFICATION	0.9995647940320117	WITHOUT_CLASSIFICATION	4.3275707462823635E-4	DESIGN	1.4529423268867972E-6	TEST	3.896276954902823E-7	DOCUMENTATION	3.2185471416347433E-7	DEFECT	2.84468623466563E-7	IMPLEMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9998714159191093	WITHOUT_CLASSIFICATION	1.027492615690657E-4	DESIGN	1.661349427069808E-5	DEFECT	9.02649800228067E-6	IMPLEMENTATION	1.4267969281898655E-7	TEST	5.2147355819818104E-8	DOCUMENTATION
//if we could not register a synchronization, //do the before/after completion callbacks //ourself (but we need to let jdbcContext //know that this is what we are going to //do, so it doesn't keep trying to register //synchronizations)	WITHOUT_CLASSIFICATION	0.9999996565000624	WITHOUT_CLASSIFICATION	2.1115223492827229E-7	DEFECT	9.165665711914175E-8	DESIGN	2.545602557095041E-8	TEST	8.220222165606948E-9	IMPLEMENTATION	7.014797858665152E-9	DOCUMENTATION
// swallow it, and continue to roll back JTA transaction	WITHOUT_CLASSIFICATION	0.9999748489226726	WITHOUT_CLASSIFICATION	2.256464873731644E-5	DESIGN	2.116415781969248E-6	DEFECT	4.4818001802200877E-7	IMPLEMENTATION	2.162565139316601E-8	DOCUMENTATION	2.071387168085634E-10	TEST
// so the transaction is already rolled back, by JTA spec	WITHOUT_CLASSIFICATION	0.9999997213378908	WITHOUT_CLASSIFICATION	1.9275814336738646E-7	IMPLEMENTATION	6.012564714265801E-8	DEFECT	1.666750672353278E-8	DESIGN	8.924922287375492E-9	DOCUMENTATION	1.8588962332507667E-10	TEST
// this method is a noop if there is a Synchronization!	WITHOUT_CLASSIFICATION	0.9995820817697519	WITHOUT_CLASSIFICATION	4.106376906327728E-4	DESIGN	4.764580878224525E-6	DEFECT	2.1191667768940256E-6	TEST	3.151533839101848E-7	DOCUMENTATION	8.163857622108378E-8	IMPLEMENTATION
// two conditions where we need to transform this to a theta-join syntax: //      1) 'elem' is the "root from-element" in correlated subqueries //      2) The DotNode.useThetaStyleImplicitJoins has been set to true //          and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.9999843498370398	WITHOUT_CLASSIFICATION	1.5045571509885128E-5	DESIGN	5.90839167336918E-7	DEFECT	1.0127485681207988E-8	DOCUMENTATION	3.4296532914411302E-9	TEST	1.9514406658507058E-10	IMPLEMENTATION
// WebSphere, however, is not a sane JEE/JTA container...	WITHOUT_CLASSIFICATION	0.999881107069979	WITHOUT_CLASSIFICATION	7.10155001703413E-5	DEFECT	4.6508940823940905E-5	DESIGN	1.2805100823350528E-6	IMPLEMENTATION	7.274183905308777E-8	TEST	1.52371053747335E-8	DOCUMENTATION
// for sane JEE/JTA containers, the transaction itself functions as its identifier...	WITHOUT_CLASSIFICATION	0.9999946772217896	WITHOUT_CLASSIFICATION	5.173810944149794E-6	DESIGN	1.4416851312164429E-7	IMPLEMENTATION	3.779175305393342E-9	DEFECT	8.407194545996326E-10	DOCUMENTATION	1.788584636894339E-10	TEST
//swallow, the transaction was finished	WITHOUT_CLASSIFICATION	0.9996515294763682	WITHOUT_CLASSIFICATION	3.294414964283093E-4	IMPLEMENTATION	1.6701075770113336E-5	DEFECT	1.7766454333758067E-6	DESIGN	3.6143149563936694E-7	DOCUMENTATION	1.8987450431805997E-7	TEST
// all AliasToEntityMapResultTransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998249944005	WITHOUT_CLASSIFICATION	1.1332923001783912E-7	DESIGN	5.127825816801967E-8	IMPLEMENTATION	9.604775834652833E-9	DEFECT	5.844611859605125E-10	DOCUMENTATION	2.0887423059057684E-10	TEST
// Create the join element under the from element.	WITHOUT_CLASSIFICATION	0.9999898348791056	WITHOUT_CLASSIFICATION	1.0036239126324983E-5	DESIGN	9.978221085372496E-8	DEFECT	1.2164833557974937E-8	DOCUMENTATION	8.563734295318515E-9	IMPLEMENTATION	8.370989164217857E-9	TEST
// all DistinctRootEntityResultTransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999014550566	WITHOUT_CLASSIFICATION	9.695828629145547E-8	DESIGN	1.0646553816598612E-9	DEFECT	2.6871966916393217E-10	IMPLEMENTATION	1.7051495920681913E-10	DOCUMENTATION	8.276706262071257E-11	TEST
// map of EntityMode -> Tuplizer	WITHOUT_CLASSIFICATION	0.9999990257155696	WITHOUT_CLASSIFICATION	9.386084753790032E-7	DESIGN	1.769807163101789E-8	DEFECT	9.691220110621556E-9	IMPLEMENTATION	5.172166738857093E-9	DOCUMENTATION	3.1144965157993024E-9	TEST
// this is a virtual id property...	WITHOUT_CLASSIFICATION	0.9991173485237587	WITHOUT_CLASSIFICATION	5.881815478023156E-4	DEFECT	2.932734811857568E-4	DESIGN	5.387387632787696E-7	IMPLEMENTATION	3.9616473088288544E-7	TEST	2.615437591955169E-7	DOCUMENTATION
//this one needed only for guessEntityMode()	WITHOUT_CLASSIFICATION	0.8450979962253187	WITHOUT_CLASSIFICATION	0.15462030627352472	DESIGN	1.883577496989053E-4	TEST	3.809047084737156E-5	DOCUMENTATION	3.1560294256082306E-5	IMPLEMENTATION	2.3688986354360033E-5	DEFECT
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999304632142579	WITHOUT_CLASSIFICATION	6.87202654996882E-5	IMPLEMENTATION	4.107036993002244E-7	DEFECT	3.200283305222052E-7	DESIGN	6.385531714722526E-8	TEST	2.1932895382183282E-8	DOCUMENTATION
// todo : move this to SF per HHH-3517; also see HHH-1907 and ComponentMetamodel	WITHOUT_CLASSIFICATION	0.5424150432298886	DESIGN	0.45757071602624044	WITHOUT_CLASSIFICATION	1.3865111353330982E-5	DEFECT	2.9546381741091453E-7	DOCUMENTATION	7.859618256667119E-8	TEST	1.5725175863116385E-9	IMPLEMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999990735930417	WITHOUT_CLASSIFICATION	8.602860746014698E-7	DESIGN	4.26352548026717E-8	DEFECT	1.4408401397553457E-8	IMPLEMENTATION	7.965159756621393E-9	TEST	1.1120677659470078E-9	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999635258445034	WITHOUT_CLASSIFICATION	2.796131932682665E-5	DEFECT	7.476981597743472E-6	DESIGN	7.309511958998348E-7	IMPLEMENTATION	2.1646629591435355E-7	DOCUMENTATION	8.84370802005132E-8	TEST
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999620125473104	WITHOUT_CLASSIFICATION	3.27848109193167E-5	DESIGN	4.735921689244135E-6	IMPLEMENTATION	3.216052688173217E-7	TEST	1.3073636293632486E-7	DEFECT	1.4378449248939222E-8	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999635258445034	WITHOUT_CLASSIFICATION	2.796131932682665E-5	DEFECT	7.476981597743472E-6	DESIGN	7.309511958998348E-7	IMPLEMENTATION	2.1646629591435355E-7	DOCUMENTATION	8.84370802005132E-8	TEST
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999998854449603	WITHOUT_CLASSIFICATION	4.9192481906944024E-8	DESIGN	4.7065333605846405E-8	IMPLEMENTATION	1.4994226426747813E-8	DEFECT	2.3147486410509804E-9	TEST	9.882491206388605E-10	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999323408471795	WITHOUT_CLASSIFICATION	6.749131150930348E-5	DESIGN	9.063402236105017E-8	TEST	7.546928403204446E-8	DEFECT	1.3777194065003365E-9	DOCUMENTATION	3.602853233844867E-10	IMPLEMENTATION
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// cached for efficiency...	WITHOUT_CLASSIFICATION	0.9992251066304036	WITHOUT_CLASSIFICATION	7.662272771523014E-4	DESIGN	6.426094523810854E-6	DEFECT	1.1629621367676238E-6	IMPLEMENTATION	9.621973319678764E-7	DOCUMENTATION	1.1483845151736376E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
//it was not embedded, so the argument is just an id	WITHOUT_CLASSIFICATION	0.9991719234673231	WITHOUT_CLASSIFICATION	8.22861707916468E-4	DESIGN	2.264345154784084E-6	TEST	2.1602763323680655E-6	DOCUMENTATION	7.784451444719815E-7	DEFECT	1.1758128797966201E-8	IMPLEMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999990735930417	WITHOUT_CLASSIFICATION	8.602860746014698E-7	DESIGN	4.26352548026717E-8	DEFECT	1.4408401397553457E-8	IMPLEMENTATION	7.965159756621393E-9	TEST	1.1120677659470078E-9	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999620125473104	WITHOUT_CLASSIFICATION	3.27848109193167E-5	DESIGN	4.735921689244135E-6	IMPLEMENTATION	3.216052688173217E-7	TEST	1.3073636293632486E-7	DEFECT	1.4378449248939222E-8	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999998854449603	WITHOUT_CLASSIFICATION	4.9192481906944024E-8	DESIGN	4.7065333605846405E-8	IMPLEMENTATION	1.4994226426747813E-8	DEFECT	2.3147486410509804E-9	TEST	9.882491206388605E-10	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9999300340529182	WITHOUT_CLASSIFICATION	6.958259126778498E-5	DESIGN	1.916426264785272E-7	IMPLEMENTATION	1.0631408244323351E-7	DEFECT	5.322408272997866E-8	TEST	3.2175022238728887E-8	DOCUMENTATION
//return currentId;	WITHOUT_CLASSIFICATION	0.9999675974313633	WITHOUT_CLASSIFICATION	1.9732170295761044E-5	DESIGN	9.002754086880273E-6	DEFECT	3.1577798281879746E-6	IMPLEMENTATION	4.983743936236915E-7	DOCUMENTATION	1.1490032212347347E-8	TEST
//reset the id	WITHOUT_CLASSIFICATION	0.9998392742424298	WITHOUT_CLASSIFICATION	9.64239515857118E-5	IMPLEMENTATION	5.181057148569517E-5	DESIGN	8.163831549367366E-6	DEFECT	3.737238878798224E-6	TEST	5.90164070658924E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
//reset the version	WITHOUT_CLASSIFICATION	0.9999531526645508	WITHOUT_CLASSIFICATION	3.0199108958066558E-5	IMPLEMENTATION	1.179853562976036E-5	DEFECT	4.155860760049505E-6	DESIGN	4.1361449144467366E-7	TEST	2.802156098399238E-7	DOCUMENTATION
// the default is to simply not lazy fetch properties for now...	WITHOUT_CLASSIFICATION	0.9988118512626082	WITHOUT_CLASSIFICATION	9.76490724856394E-4	DESIGN	2.0913868121571582E-4	DEFECT	1.9517916794954818E-6	IMPLEMENTATION	3.8676480469467037E-7	TEST	1.807748355145183E-7	DOCUMENTATION
// Add the second join, the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.9999993029734656	WITHOUT_CLASSIFICATION	5.075563641202809E-7	IMPLEMENTATION	1.4972859022146722E-7	DESIGN	3.2971756289847025E-8	DOCUMENTATION	4.714961146562129E-9	DEFECT	2.0548623990591003E-9	TEST
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998255674861074	WITHOUT_CLASSIFICATION	1.728843589116382E-4	DESIGN	8.856407347434112E-7	DEFECT	3.402775243104149E-7	TEST	2.28093344464216E-7	IMPLEMENTATION	9.414337744683082E-8	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999323408471795	WITHOUT_CLASSIFICATION	6.749131150930348E-5	DESIGN	9.063402236105017E-8	TEST	7.546928403204446E-8	DEFECT	1.3777194065003365E-9	DOCUMENTATION	3.602853233844867E-10	IMPLEMENTATION
// determine the id getter and setter methods from the proxy interface (if any) // determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.998957721946682	WITHOUT_CLASSIFICATION	0.0010344910702829995	DESIGN	7.759362728437311E-6	DEFECT	2.3443981322022632E-8	TEST	4.098393502187645E-9	DOCUMENTATION	7.793188282199195E-11	IMPLEMENTATION
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
//not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.9998389686268595	WITHOUT_CLASSIFICATION	9.336018012340157E-5	DEFECT	6.745358247247794E-5	DESIGN	1.7271080320667203E-7	DOCUMENTATION	2.4725909379646513E-8	IMPLEMENTATION	2.0173832079633665E-8	TEST
// superclass entity-name	WITHOUT_CLASSIFICATION	0.9999714488176987	WITHOUT_CLASSIFICATION	2.853971566043066E-5	DESIGN	7.4007909772554795E-9	DEFECT	2.8059387267647534E-9	DOCUMENTATION	7.776643672172653E-10	TEST	4.822468154407017E-10	IMPLEMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998255674861074	WITHOUT_CLASSIFICATION	1.728843589116382E-4	DESIGN	8.856407347434112E-7	DEFECT	3.402775243104149E-7	TEST	2.28093344464216E-7	IMPLEMENTATION	9.414337744683082E-8	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999960904946565	WITHOUT_CLASSIFICATION	1.3968289166594325E-6	IMPLEMENTATION	1.1716273835302389E-6	DEFECT	9.850729298611552E-7	DESIGN	1.8091627428451516E-7	DOCUMENTATION	1.7505983908293684E-7	TEST
//init the aliases, after initing the constructornode	WITHOUT_CLASSIFICATION	0.9999883350244486	WITHOUT_CLASSIFICATION	9.106841204104843E-6	IMPLEMENTATION	1.9646866894535268E-6	DESIGN	5.504684491307118E-7	TEST	2.594029814703984E-8	DOCUMENTATION	1.703891058094407E-8	DEFECT
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998255674861074	WITHOUT_CLASSIFICATION	1.728843589116382E-4	DESIGN	8.856407347434112E-7	DEFECT	3.402775243104149E-7	TEST	2.28093344464216E-7	IMPLEMENTATION	9.414337744683082E-8	DOCUMENTATION
// legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.999999723764087	WITHOUT_CLASSIFICATION	2.672761698647078E-7	DESIGN	5.577304329756462E-9	IMPLEMENTATION	1.6814489362792676E-9	TEST	1.621524212594477E-9	DOCUMENTATION	7.94656553886562E-11	DEFECT
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999999308926316	WITHOUT_CLASSIFICATION	4.9968741523990366E-8	DESIGN	6.647226505522108E-9	DEFECT	4.860597857779957E-9	IMPLEMENTATION	4.7026817495844736E-9	DOCUMENTATION	2.9281207825330733E-9	TEST
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999960904946565	WITHOUT_CLASSIFICATION	1.3968289166594325E-6	IMPLEMENTATION	1.1716273835302389E-6	DEFECT	9.850729298611552E-7	DESIGN	1.8091627428451516E-7	DOCUMENTATION	1.7505983908293684E-7	TEST
//note: this affects the return value!	WITHOUT_CLASSIFICATION	0.999949728944333	WITHOUT_CLASSIFICATION	4.4624053012858783E-5	DEFECT	4.852801840146325E-6	DESIGN	6.203989938248308E-7	IMPLEMENTATION	1.3481818712621257E-7	DOCUMENTATION	3.89836330514302E-8	TEST
// Need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.999872531195423	WITHOUT_CLASSIFICATION	1.2667394931279217E-4	IMPLEMENTATION	4.538070244457252E-7	DESIGN	2.811109359505784E-7	TEST	3.615642566429974E-8	DEFECT	2.3780878141859735E-8	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999973105959835	WITHOUT_CLASSIFICATION	2.6060718819042452E-6	DESIGN	6.174756197615604E-8	IMPLEMENTATION	1.0695413161789709E-8	DEFECT	7.60372731792919E-9	DOCUMENTATION	3.285432114638332E-9	TEST
// Collection Types:	WITHOUT_CLASSIFICATION	0.9999788458026275	WITHOUT_CLASSIFICATION	1.62487923753999E-5	DESIGN	3.991303880724559E-6	DEFECT	7.363751913444202E-7	IMPLEMENTATION	1.377154562663191E-7	DOCUMENTATION	4.0010468572215817E-8	TEST
// convenience methods relating to operations across arrays of types...	WITHOUT_CLASSIFICATION	0.999972900240076	WITHOUT_CLASSIFICATION	1.8004202021988255E-5	DESIGN	7.827398659084588E-6	DEFECT	1.10827697876378E-6	IMPLEMENTATION	8.08450242384209E-8	TEST	7.903724000399297E-8	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999708787798132	WITHOUT_CLASSIFICATION	2.8681729935098766E-5	DESIGN	4.257593404862831E-7	DEFECT	6.302673956794161E-9	TEST	6.092967680812375E-9	IMPLEMENTATION	1.335269626609091E-9	DOCUMENTATION
//Blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.9999981564453998	WITHOUT_CLASSIFICATION	1.7400597729784457E-6	DESIGN	4.111160616586089E-8	IMPLEMENTATION	2.6424040355804016E-8	DEFECT	2.3731103236492815E-8	TEST	1.2228077453345899E-8	DOCUMENTATION
//value is the entity name	WITHOUT_CLASSIFICATION	0.9996125292042959	WITHOUT_CLASSIFICATION	3.865327139874928E-4	DESIGN	6.57838380881377E-7	DEFECT	1.5754221501478862E-7	TEST	1.142837960512237E-7	DOCUMENTATION	8.417324711668969E-9	IMPLEMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999562415465948	WITHOUT_CLASSIFICATION	1.579202200741501E-5	DESIGN	1.5548930029786993E-5	IMPLEMENTATION	9.971529828453265E-6	DEFECT	1.597265590381826E-6	DOCUMENTATION	8.487059492163494E-7	TEST
// generate id select fragment and then property select fragment for // each expression, just like generateSelectFragments().	WITHOUT_CLASSIFICATION	0.9999979430281382	WITHOUT_CLASSIFICATION	1.2830714233823048E-6	DESIGN	6.825576590900877E-7	DEFECT	7.056730711282916E-8	TEST	2.0490622419240698E-8	DOCUMENTATION	2.848497626312775E-10	IMPLEMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9667453451389737	WITHOUT_CLASSIFICATION	0.025666655503741913	DESIGN	0.0037887100690787803	IMPLEMENTATION	0.001646597606689848	DEFECT	0.0013484900843080626	DOCUMENTATION	8.042015972076924E-4	TEST
//xml is the entity name	WITHOUT_CLASSIFICATION	0.9998675196094957	WITHOUT_CLASSIFICATION	1.3198110618264352E-4	DESIGN	2.89646924772602E-7	DEFECT	1.351105138890865E-7	TEST	6.419660819598533E-8	DOCUMENTATION	1.0330274757070637E-8	IMPLEMENTATION
//special case ... this is the leaf of the containment graph, even though not immutable	WITHOUT_CLASSIFICATION	0.991519441480311	WITHOUT_CLASSIFICATION	0.004663813959176986	DEFECT	0.003660667687364691	DESIGN	1.3217739725563603E-4	IMPLEMENTATION	1.2522257662493638E-5	DOCUMENTATION	1.1377218229137889E-5	TEST
//tolerates nulls	WITHOUT_CLASSIFICATION	0.9999505688036281	WITHOUT_CLASSIFICATION	4.3086336333291784E-5	DESIGN	4.252537535001076E-6	DEFECT	1.2710086999604537E-6	TEST	7.633363215509906E-7	IMPLEMENTATION	5.797748208756025E-8	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9998017311126484	WITHOUT_CLASSIFICATION	1.4772474102573596E-4	DEFECT	4.224388338723287E-5	DESIGN	5.477395409688983E-6	TEST	1.7037787613612816E-6	IMPLEMENTATION	1.1190887677120951E-6	DOCUMENTATION
// metaType is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.9999975369490508	WITHOUT_CLASSIFICATION	2.3780720829031035E-6	DESIGN	8.386830586122013E-8	DEFECT	6.364817731044997E-10	TEST	4.2708297067476807E-10	DOCUMENTATION	4.6995662881057266E-11	IMPLEMENTATION
// Get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.9999860453944998	WITHOUT_CLASSIFICATION	1.3553759352942329E-5	DESIGN	3.3483379690373306E-7	DEFECT	6.427691789080609E-8	IMPLEMENTATION	1.2736385718089621E-9	TEST	4.6179398334115844E-10	DOCUMENTATION
// Look through the FromElement's children to find any collections of values that should be fetched...	WITHOUT_CLASSIFICATION	0.9999928062474277	WITHOUT_CLASSIFICATION	3.429216443949397E-6	DEFECT	3.007260629144574E-6	DESIGN	7.542376184358733E-7	IMPLEMENTATION	2.377630426862154E-9	TEST	6.602503238891552E-10	DOCUMENTATION
//return AssociationType.FOREIGN_KEY_TO_PARENT; //this is better but causes a transient object exception...	WITHOUT_CLASSIFICATION	0.9964167630206547	WITHOUT_CLASSIFICATION	0.0034056458572808996	DESIGN	1.6598360596053815E-4	DEFECT	1.0195707798636175E-5	IMPLEMENTATION	9.580331890309402E-7	TEST	4.5377511617161395E-7	DOCUMENTATION
// Use the lower case function name. // Remember whether we're in a SELECT clause or not.	WITHOUT_CLASSIFICATION	0.9999975024411888	WITHOUT_CLASSIFICATION	2.004730888050293E-6	DESIGN	3.718373502991866E-7	DEFECT	1.1488242026828997E-7	IMPLEMENTATION	5.101074222756249E-9	DOCUMENTATION	1.0070783582420747E-9	TEST
// IDENT might be the name of a class.	WITHOUT_CLASSIFICATION	0.9999698180481489	WITHOUT_CLASSIFICATION	3.0019400108488237E-5	DESIGN	1.3580099482216942E-7	DEFECT	1.2688394809287451E-8	TEST	8.785572817177896E-9	DOCUMENTATION	5.276780077158218E-9	IMPLEMENTATION
//TODO!!!	WITHOUT_CLASSIFICATION	0.7847858978673427	WITHOUT_CLASSIFICATION	0.19796168412573942	DESIGN	0.007351305897332522	IMPLEMENTATION	0.003992851529855924	DEFECT	0.003864926085491867	DOCUMENTATION	0.002043334494237528	TEST
//st.setTimestamp( index,  new Timestamp( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9978877166350408	WITHOUT_CLASSIFICATION	0.002069496676650806	DEFECT	3.5860164169673473E-5	DESIGN	5.309185101960918E-6	TEST	8.265917838744705E-7	IMPLEMENTATION	7.907472526306441E-7	DOCUMENTATION
//st.setDate( index,  new Date( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9988766906991672	WITHOUT_CLASSIFICATION	9.585283390652867E-4	DEFECT	1.594033455712478E-4	DESIGN	2.4894932514174795E-6	TEST	1.6381932319858427E-6	DOCUMENTATION	1.2499297129636023E-6	IMPLEMENTATION
// both are Timestamps	WITHOUT_CLASSIFICATION	0.9999992814940559	WITHOUT_CLASSIFICATION	5.733132453574925E-7	DESIGN	9.809597573132762E-8	TEST	3.6143919739273806E-8	IMPLEMENTATION	6.532716964583028E-9	DEFECT	4.420086277808109E-9	DOCUMENTATION
// at least one is a plain old Date	WITHOUT_CLASSIFICATION	0.9999828135022245	WITHOUT_CLASSIFICATION	1.645536085448203E-5	DESIGN	3.170717012850411E-7	TEST	3.103976804359251E-7	IMPLEMENTATION	6.96058284939163E-8	DEFECT	3.406171081741467E-8	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9999601948625657	WITHOUT_CLASSIFICATION	1.8448116543411793E-5	DESIGN	1.8221834274479216E-5	DEFECT	1.3585547460082011E-6	DOCUMENTATION	1.2430110044979848E-6	IMPLEMENTATION	5.336208659780474E-7	TEST
// if the corresponding SQL value is NULL, the reader we got is NULL as well	WITHOUT_CLASSIFICATION	0.9996834635812897	WITHOUT_CLASSIFICATION	3.1213541816831845E-4	DEFECT	2.4322131514823613E-6	TEST	1.7762273656785321E-6	DESIGN	1.6933914035999547E-7	IMPLEMENTATION	2.3220884624217105E-8	DOCUMENTATION
// Fetch Reader content up to the end - and put characters in a StringBuffer	WITHOUT_CLASSIFICATION	0.9959187825338978	WITHOUT_CLASSIFICATION	0.00405802081153655	DESIGN	2.124788098636185E-5	IMPLEMENTATION	1.4097309462033096E-6	DOCUMENTATION	5.165574439808432E-7	DEFECT	2.2485189242278885E-8	TEST
// Return StringBuffer content as a large String	WITHOUT_CLASSIFICATION	0.9999982615454743	WITHOUT_CLASSIFICATION	1.3483323627766938E-6	DESIGN	2.517565060231142E-7	IMPLEMENTATION	1.3135266654140192E-7	DEFECT	6.155557956862349E-9	DOCUMENTATION	8.574322869971722E-10	TEST
//or Types.LONGVARCHAR?	WITHOUT_CLASSIFICATION	0.9993799403277125	WITHOUT_CLASSIFICATION	6.063482475608065E-4	DESIGN	6.929658704022402E-6	IMPLEMENTATION	2.9865866737317917E-6	TEST	2.1390122735580013E-6	DOCUMENTATION	1.6561670753361215E-6	DEFECT
//Not called at runtime so doesn't matter if its slow :)	WITHOUT_CLASSIFICATION	0.9996654516895507	WITHOUT_CLASSIFICATION	1.9443262869292264E-4	DEFECT	6.642942488953807E-5	IMPLEMENTATION	6.212204567890399E-5	DESIGN	1.1406272796912459E-5	TEST	1.579383909004656E-7	DOCUMENTATION
//TODO	WITHOUT_CLASSIFICATION	0.9983092130282206	WITHOUT_CLASSIFICATION	0.001150382021182801	DESIGN	2.9809677549967714E-4	IMPLEMENTATION	1.0588476905325924E-4	DOCUMENTATION	7.123337812371277E-5	TEST	6.519002791984781E-5	DEFECT
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.999998115561389	WITHOUT_CLASSIFICATION	1.4408416341880651E-6	TEST	1.755652121428839E-7	DEFECT	1.5752681298561252E-7	IMPLEMENTATION	9.548460565771075E-8	DESIGN	1.502034609731207E-8	DOCUMENTATION
//different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.9998465978101354	WITHOUT_CLASSIFICATION	1.5084513181125753E-4	DESIGN	1.9798013383860442E-6	DEFECT	2.0630099801207004E-7	IMPLEMENTATION	1.9260486737767501E-7	DOCUMENTATION	1.7835084955482573E-7	TEST
//cache this	WITHOUT_CLASSIFICATION	0.9989572279859258	WITHOUT_CLASSIFICATION	9.990303083063743E-4	DESIGN	2.5573112241815798E-5	IMPLEMENTATION	1.1594649253252207E-5	DOCUMENTATION	4.125265525455633E-6	DEFECT	2.4486787473312285E-6	TEST
//only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.9999786593690291	WITHOUT_CLASSIFICATION	1.0832809401347438E-5	DEFECT	6.9556503701923454E-6	IMPLEMENTATION	2.5454556237284827E-6	DESIGN	5.145255858867139E-7	DOCUMENTATION	4.92189989693896E-7	TEST
// Forcefully remove leading ands from where fragments; the grammar will // handle adding them	WITHOUT_CLASSIFICATION	0.9999367111631567	WITHOUT_CLASSIFICATION	4.046818220477055E-5	DEFECT	2.2321980001014985E-5	DESIGN	3.069241039259331E-7	TEST	1.629610311389386E-7	IMPLEMENTATION	2.8789502460527696E-8	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.8201729264870626	WITHOUT_CLASSIFICATION	0.1299753773051362	DESIGN	0.037437349334137414	IMPLEMENTATION	0.005606270702748214	DOCUMENTATION	0.00401125335545159	DEFECT	0.002796822815464003	TEST
// Create a new FILTERS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999988573804269	WITHOUT_CLASSIFICATION	8.341732241265907E-7	DESIGN	2.668520234926817E-7	IMPLEMENTATION	3.9811278721948125E-8	DEFECT	1.1958556869333194E-9	TEST	5.871911369854583E-10	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999960904946565	WITHOUT_CLASSIFICATION	1.3968289166594325E-6	IMPLEMENTATION	1.1716273835302389E-6	DEFECT	9.850729298611552E-7	DESIGN	1.8091627428451516E-7	DOCUMENTATION	1.7505983908293684E-7	TEST
//public Object instantiate(Object parent, SessionImplementor session) throws HibernateException;	WITHOUT_CLASSIFICATION	0.6707689470580458	DESIGN	0.32919974921179773	WITHOUT_CLASSIFICATION	2.2093739440699602E-5	DEFECT	4.637586622638737E-6	TEST	3.441617950827682E-6	IMPLEMENTATION	1.1307861421450582E-6	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9999841200853274	WITHOUT_CLASSIFICATION	1.1573709691776186E-5	DESIGN	1.6018185468714125E-6	DEFECT	1.4171670100981249E-6	IMPLEMENTATION	8.984818663231455E-7	DOCUMENTATION	3.8873755740556E-7	TEST
//nothing to do	WITHOUT_CLASSIFICATION	0.9999841200853274	WITHOUT_CLASSIFICATION	1.1573709691776186E-5	DESIGN	1.6018185468714125E-6	DEFECT	1.4171670100981249E-6	IMPLEMENTATION	8.984818663231455E-7	DOCUMENTATION	3.8873755740556E-7	TEST
// VersionType impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //      Note : simply returns null for seed() and next() as the only known //      application of binary types for versioning is for use with the //      TIMESTAMP datatype supported by Sybase and SQL Server, which //      are completely db-generated values...	WITHOUT_CLASSIFICATION	0.999999703977097	WITHOUT_CLASSIFICATION	2.501288772259411E-7	DEFECT	3.9663153638899226E-8	DESIGN	5.323496343614001E-9	IMPLEMENTATION	8.030838240996869E-10	TEST	1.042919779116027E-10	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999708787798132	WITHOUT_CLASSIFICATION	2.8681729935098766E-5	DESIGN	4.257593404862831E-7	DEFECT	6.302673956794161E-9	TEST	6.092967680812375E-9	IMPLEMENTATION	1.335269626609091E-9	DOCUMENTATION
//not really necessary, I guess...	WITHOUT_CLASSIFICATION	0.9726421023450389	WITHOUT_CLASSIFICATION	0.027300998057951924	DESIGN	3.951048729564105E-5	DEFECT	1.4582279168967559E-5	IMPLEMENTATION	2.384234122546E-6	DOCUMENTATION	4.2259642210136266E-7	TEST
//Clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.9999998537635564	WITHOUT_CLASSIFICATION	1.3690979626050747E-7	DESIGN	4.04287706430158E-9	TEST	3.6264241156752612E-9	DEFECT	1.1066472543557789E-9	DOCUMENTATION	5.506988249145657E-10	IMPLEMENTATION
// we do not have to worry about queued additions to uninitialized // collections, since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.9999978541671707	WITHOUT_CLASSIFICATION	1.5266427682739697E-6	DEFECT	6.13586686860079E-7	IMPLEMENTATION	4.4123621291537736E-9	DESIGN	7.813042782649342E-10	DOCUMENTATION	4.097075919265666E-10	TEST
// collections cannot be compared	WITHOUT_CLASSIFICATION	0.999999026014461	WITHOUT_CLASSIFICATION	4.46918940841744E-7	DESIGN	4.2623497782903765E-7	DEFECT	1.0017038722360392E-7	IMPLEMENTATION	5.885721663719924E-10	TEST	7.26609007460593E-11	DOCUMENTATION
//remember the uk value	WITHOUT_CLASSIFICATION	0.9998941854797829	WITHOUT_CLASSIFICATION	9.175872728115579E-5	DESIGN	8.872987692234206E-6	DEFECT	2.684952682817732E-6	IMPLEMENTATION	1.7615996447342247E-6	TEST	7.362529160442293E-7	DOCUMENTATION
//NOOP	WITHOUT_CLASSIFICATION	0.9999107579555544	WITHOUT_CLASSIFICATION	7.24371741222956E-5	DESIGN	5.350395029608007E-6	IMPLEMENTATION	4.754013907434177E-6	DEFECT	3.662252969398811E-6	TEST	3.038208416767842E-6	DOCUMENTATION
//processCollectionProperty(token, q.getCollectionPersister(collectionRole), collectionName);	WITHOUT_CLASSIFICATION	0.999998823096337	WITHOUT_CLASSIFICATION	1.022356407774217E-6	DEFECT	9.162039070824952E-8	TEST	5.985006792471991E-8	DESIGN	2.569804329136925E-9	DOCUMENTATION	5.069924112291901E-10	IMPLEMENTATION
//we must use the "remembered" uk value, since it is  //not available from the EntityEntry during assembly	WITHOUT_CLASSIFICATION	0.9999709768201402	WITHOUT_CLASSIFICATION	2.896520410597886E-5	DESIGN	5.6448195916918866E-8	TEST	1.270122538356901E-9	DEFECT	2.088966354242186E-10	DOCUMENTATION	4.853874251588149E-11	IMPLEMENTATION
// collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.980194904431357	WITHOUT_CLASSIFICATION	0.019785236736526095	DESIGN	1.590078239944116E-5	DEFECT	3.7790740669747415E-6	IMPLEMENTATION	1.1194549918208307E-7	DOCUMENTATION	6.703015132557318E-8	TEST
// return false;	WITHOUT_CLASSIFICATION	0.9999881340815427	WITHOUT_CLASSIFICATION	1.0955730603259363E-5	DESIGN	5.787747119821332E-7	DEFECT	3.209321023879633E-7	IMPLEMENTATION	7.909972117518835E-9	DOCUMENTATION	2.571067527271423E-9	TEST
// This just handles a particular case of component // projection, perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.8520972912267221	WITHOUT_CLASSIFICATION	0.14763508382967022	DESIGN	1.827192505128524E-4	DEFECT	8.387815101833237E-5	IMPLEMENTATION	8.92481419944317E-7	TEST	1.3506065641983452E-7	DOCUMENTATION
//NOTE: we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.9999990640508988	WITHOUT_CLASSIFICATION	8.396433746151448E-7	DESIGN	9.116882761810989E-8	TEST	3.2012955240707717E-9	DEFECT	1.9135256869829093E-9	DOCUMENTATION	2.207794000335547E-11	IMPLEMENTATION
// the key is the owning entity itself, so get the ID from the key	WITHOUT_CLASSIFICATION	0.9999796512192186	WITHOUT_CLASSIFICATION	2.0311009706196038E-5	DESIGN	3.114518985764176E-8	TEST	2.6680931626555435E-9	DEFECT	2.0881651957436346E-9	IMPLEMENTATION	1.8696269989793416E-9	DOCUMENTATION
// if the original is a PersistentCollection, and that original // was not flagged as dirty, then reset the target's dirty flag // here after the copy operation. // </p> // One thing to be careful of here is a "bare" original collection // in which case we should never ever ever reset the dirty flag // on the target because we simply do not know...	WITHOUT_CLASSIFICATION	0.9999999973915294	WITHOUT_CLASSIFICATION	2.5657783486443044E-9	DEFECT	3.6292636643526594E-11	DESIGN	3.303993715075215E-12	TEST	2.8597753428114227E-12	IMPLEMENTATION	2.3583143488606917E-13	DOCUMENTATION
//ignore subselect keywords	WITHOUT_CLASSIFICATION	0.9999999859466242	WITHOUT_CLASSIFICATION	6.5102575296714014E-9	DEFECT	6.092981160762488E-9	IMPLEMENTATION	7.393976199132476E-10	DESIGN	5.899153470474496E-10	DOCUMENTATION	1.2082414434463293E-10	TEST
// copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.9999999980718645	WITHOUT_CLASSIFICATION	1.607252171810411E-9	DESIGN	1.87072082560568E-10	DEFECT	1.2228180578743703E-10	IMPLEMENTATION	7.992452157376362E-12	DOCUMENTATION	3.5370312074630107E-12	TEST
// for a null target, or a target which is the same as the original, we // need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.999999188233124	WITHOUT_CLASSIFICATION	8.106090018012194E-7	DESIGN	8.666928166342963E-10	DEFECT	2.31930151429135E-10	DOCUMENTATION	5.3792288087233115E-11	TEST	5.458949561051483E-12	IMPLEMENTATION
// by default just use an unanticipated capacity since we don't // know how to extract the capacity to use from original here...	WITHOUT_CLASSIFICATION	0.998864623650468	WITHOUT_CLASSIFICATION	0.0011290500840811341	DESIGN	5.598449525346071E-6	IMPLEMENTATION	6.29823409290621E-7	DEFECT	7.825380542484622E-8	DOCUMENTATION	1.9738710839846673E-8	TEST
// get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.9999949506299302	WITHOUT_CLASSIFICATION	3.5901556925864697E-6	IMPLEMENTATION	1.3085096995082657E-6	DESIGN	1.4699815202582836E-7	DEFECT	2.1870212720756892E-9	TEST	1.5195045300043327E-9	DOCUMENTATION
// check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.9997000975621869	WITHOUT_CLASSIFICATION	2.591545183576454E-4	IMPLEMENTATION	3.501498532396172E-5	DESIGN	5.420899926362987E-6	DEFECT	2.0404579668989036E-7	DOCUMENTATION	1.0798840857788775E-7	TEST
// check if it is already completely loaded, but unowned	WITHOUT_CLASSIFICATION	0.9999474461109726	WITHOUT_CLASSIFICATION	5.2273795492394456E-5	IMPLEMENTATION	1.3856984224264422E-7	DEFECT	1.1131156875656631E-7	DESIGN	2.9443618131915005E-8	TEST	7.685058416219044E-10	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999990045980578	WITHOUT_CLASSIFICATION	9.670555194852945E-7	DEFECT	1.7667859101307372E-8	DESIGN	5.168148526664271E-9	TEST	3.857655730456907E-9	DOCUMENTATION	1.6527594232628117E-9	IMPLEMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.8201729264870626	WITHOUT_CLASSIFICATION	0.1299753773051362	DESIGN	0.037437349334137414	IMPLEMENTATION	0.005606270702748214	DOCUMENTATION	0.00401125335545159	DEFECT	0.002796822815464003	TEST
// create a new collection wrapper, to be initialized later	WITHOUT_CLASSIFICATION	0.9999822050298517	WITHOUT_CLASSIFICATION	1.7428917364513763E-5	DESIGN	3.4496555828034666E-7	DEFECT	1.2877539528821401E-8	IMPLEMENTATION	5.659688420044074E-9	TEST	2.5499976645732095E-9	DOCUMENTATION
// Some JDBC drivers erroneously return an empty array here for a null DB value :/	WITHOUT_CLASSIFICATION	0.9999665142585804	WITHOUT_CLASSIFICATION	2.8617649977626162E-5	DESIGN	4.531594895520608E-6	DEFECT	3.3252143564853065E-7	IMPLEMENTATION	3.1129840389130743E-9	DOCUMENTATION	8.621268204518931E-10	TEST
// our column span is the number of columns in the PK	WITHOUT_CLASSIFICATION	0.9999999807636333	WITHOUT_CLASSIFICATION	1.0501967529630685E-8	DEFECT	8.590123436159533E-9	DESIGN	9.809956822198083E-11	DOCUMENTATION	2.4914034932205192E-11	IMPLEMENTATION	2.126215212531379E-11	TEST
//cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.9999975549062273	WITHOUT_CLASSIFICATION	1.3391559285544854E-6	DEFECT	8.164250555938285E-7	DESIGN	1.8936791094286157E-7	TEST	8.343594420657446E-8	DOCUMENTATION	1.6708933568795094E-8	IMPLEMENTATION
// we already know current is not null...	WITHOUT_CLASSIFICATION	0.9980358147627401	WITHOUT_CLASSIFICATION	0.001613637278829746	DEFECT	2.529138693458925E-4	DESIGN	9.357671475225956E-5	IMPLEMENTATION	3.903541639701211E-6	DOCUMENTATION	1.5383269240083337E-7	TEST
// the ids are fully resolved, so compare them with isDirty(), not isModified()	WITHOUT_CLASSIFICATION	0.9999255950992407	WITHOUT_CLASSIFICATION	6.346805214768745E-5	IMPLEMENTATION	6.38276575522734E-6	DESIGN	4.3943157553417135E-6	DEFECT	1.5697316917529153E-7	TEST	2.7939320259634916E-9	DOCUMENTATION
//the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.9999976990781089	WITHOUT_CLASSIFICATION	8.774761759662554E-7	TEST	8.409853124694925E-7	DESIGN	4.750899949265748E-7	DEFECT	8.099990749728135E-8	DOCUMENTATION	2.637050029193737E-8	IMPLEMENTATION
// ----------------------------------------------------------- Constructors	WITHOUT_CLASSIFICATION	0.9999998206606826	WITHOUT_CLASSIFICATION	1.1426900021211031E-7	DESIGN	4.9807311958220435E-8	IMPLEMENTATION	8.33476903386843E-9	DEFECT	3.883183323627343E-9	TEST	3.045052865371584E-9	DOCUMENTATION
// ----------------------------------------------------- Instance Variables	WITHOUT_CLASSIFICATION	0.9999999285855452	WITHOUT_CLASSIFICATION	5.133535819297458E-8	IMPLEMENTATION	1.2353602894125817E-8	DEFECT	6.450417963501915E-9	DESIGN	9.807776136591078E-10	DOCUMENTATION	2.942981951757631E-10	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// --------------------------------------------------------- Public Methods	WITHOUT_CLASSIFICATION	0.9999910086448702	WITHOUT_CLASSIFICATION	8.874102288099901E-6	DESIGN	6.821055768413169E-8	IMPLEMENTATION	2.5015781077657797E-8	DOCUMENTATION	1.784942128839554E-8	DEFECT	6.177081598124716E-9	TEST
// Compare the two maps for equality	WITHOUT_CLASSIFICATION	0.9999997274549202	WITHOUT_CLASSIFICATION	2.5259829299044105E-7	DESIGN	9.69803751603579E-9	IMPLEMENTATION	7.389662243556561E-9	DEFECT	2.328541114828823E-9	TEST	5.305460032987798E-10	DOCUMENTATION
// Simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.9999980675705828	WITHOUT_CLASSIFICATION	1.6304445214442069E-6	TEST	2.5696108545134035E-7	DEFECT	3.884573616793958E-8	DOCUMENTATION	5.573750760447342E-9	DESIGN	6.043232880508361E-10	IMPLEMENTATION
//Sybase fail if we don't do that, sigh...	WITHOUT_CLASSIFICATION	0.9991840358777795	WITHOUT_CLASSIFICATION	4.8071731259302007E-4	DESIGN	3.2809747348899184E-4	DEFECT	4.045248264371878E-6	TEST	2.9527540114370437E-6	DOCUMENTATION	1.5133386257514718E-7	IMPLEMENTATION
// Handles things like: // a and b or c // a and ( b or c ) // not a and not b // not ( a and b ) // x between y and z            (overloaded "and") // x in ( a, b, c )             (overloaded brackets) // not not a // a is not null                (overloaded "not") // etc...... // and expressions like // foo = bar                    (maps to: foo.id = bar.id) // foo.Bar = 'foo'              (maps to: foo.bar = 'foo') // foo.Bar.Baz = 1.0            (maps to: foo.bar = bar.id and bar.baz = 1.0) // 1.0 = foo.Bar.Baz            (maps to: bar.baz = 1.0 and foo.Bar = bar.id) // foo.Bar.Baz = a.B.C          (maps to: bar.Baz = b.C and foo.Bar = bar.id and a.B = b.id) // foo.Bar.Baz + a.B.C          (maps to: bar.Baz + b.C and foo.Bar = bar.id and a.B = b.id) // ( foo.Bar.Baz + 1.0 ) < 2.0  (maps to: ( bar.Baz + 1.0 ) < 2.0 and foo.Bar = bar.id)	WITHOUT_CLASSIFICATION	0.9401067724906627	WITHOUT_CLASSIFICATION	0.05002441129306066	DEFECT	0.009863487163923403	DESIGN	3.756461303880666E-6	TEST	1.1787817481594954E-6	IMPLEMENTATION	3.9380930128173646E-7	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999951176996791	WITHOUT_CLASSIFICATION	3.7180456398383736E-6	DESIGN	1.1480967678882927E-6	IMPLEMENTATION	1.1038891272755052E-8	DOCUMENTATION	3.5941931103819548E-9	DEFECT	1.5248289529914287E-9	TEST
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999951176996791	WITHOUT_CLASSIFICATION	3.7180456398383736E-6	DESIGN	1.1480967678882927E-6	IMPLEMENTATION	1.1038891272755052E-8	DOCUMENTATION	3.5941931103819548E-9	DEFECT	1.5248289529914287E-9	TEST
// try to "pretty print" it	WITHOUT_CLASSIFICATION	0.9999752523889845	WITHOUT_CLASSIFICATION	2.1023232666224928E-5	DESIGN	3.570486567349773E-6	DEFECT	7.627984435817439E-8	DOCUMENTATION	5.847500772686544E-8	IMPLEMENTATION	1.913692988065843E-8	TEST
// otherwise, just dump it	WITHOUT_CLASSIFICATION	0.9998008189987592	WITHOUT_CLASSIFICATION	1.8614710513337025E-4	DESIGN	1.2457073828771392E-5	IMPLEMENTATION	5.267154476506816E-7	TEST	4.264973785431563E-8	DOCUMENTATION	7.457093385347842E-9	DEFECT
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9998556685456705	WITHOUT_CLASSIFICATION	9.170879428567465E-5	DESIGN	5.192348855682378E-5	DEFECT	6.486777314760644E-7	DOCUMENTATION	4.875396605501697E-8	TEST	1.739789312290862E-9	IMPLEMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9998556685456705	WITHOUT_CLASSIFICATION	9.170879428567465E-5	DESIGN	5.192348855682378E-5	DEFECT	6.486777314760644E-7	DOCUMENTATION	4.875396605501697E-8	TEST	1.739789312290862E-9	IMPLEMENTATION
// use default behavior	WITHOUT_CLASSIFICATION	0.9999198725599124	WITHOUT_CLASSIFICATION	8.010832841653808E-5	DESIGN	6.843173661283299E-9	DEFECT	6.490805994558585E-9	DOCUMENTATION	5.1852136715097044E-9	IMPLEMENTATION	5.92477712943645E-10	TEST
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9999016766636725	WITHOUT_CLASSIFICATION	9.043057082641518E-5	DESIGN	5.211014498772794E-6	DEFECT	2.4966138900625523E-6	IMPLEMENTATION	1.2797025453033688E-7	DOCUMENTATION	5.716685771789337E-8	TEST
// the MRU cache used to keep hard references to the most recently used query plans; // note : LRU here is a bit of a misnomer, it indicates that LRU entries are removed, the // actual kept entries are the MRU entries	WITHOUT_CLASSIFICATION	0.5517209483953129	IMPLEMENTATION	0.32147864003962795	DESIGN	0.12679966765652206	WITHOUT_CLASSIFICATION	3.589970366358499E-7	DEFECT	2.8925731637309185E-7	TEST	9.565418399429286E-8	DOCUMENTATION
// we want to be able to just use the defaults, // if JNDI environment properties are not supplied // so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.9999900952924169	WITHOUT_CLASSIFICATION	9.90323225805208E-6	DESIGN	8.052736209715735E-10	TEST	6.421247361462613E-10	DOCUMENTATION	2.62670116311894E-11	IMPLEMENTATION	1.659629402269366E-12	DEFECT
// Clone //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999999146496209	WITHOUT_CLASSIFICATION	4.4219186506650746E-8	DESIGN	3.216873184156959E-8	DEFECT	4.116703510050905E-9	TEST	2.5890652642611188E-9	DOCUMENTATION	2.256691880929497E-9	IMPLEMENTATION
// Serialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999997483865122	WITHOUT_CLASSIFICATION	1.1578215377756419E-7	IMPLEMENTATION	9.916572815064516E-8	DEFECT	2.3058006408041095E-8	DESIGN	7.693516805107762E-9	TEST	5.914082755352025E-9	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999976955123094	WITHOUT_CLASSIFICATION	2.271591579658241E-6	DESIGN	3.161638978531952E-8	DEFECT	1.0083215016742052E-9	DOCUMENTATION	2.130469833197973E-10	TEST	5.835272836880995E-11	IMPLEMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999976955123094	WITHOUT_CLASSIFICATION	2.271591579658241E-6	DESIGN	3.161638978531952E-8	DEFECT	1.0083215016742052E-9	DOCUMENTATION	2.130469833197973E-10	TEST	5.835272836880995E-11	IMPLEMENTATION
// Deserialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999992798394027	WITHOUT_CLASSIFICATION	5.987064587345541E-7	IMPLEMENTATION	7.464027722648464E-8	DEFECT	2.975254458219158E-8	TEST	9.948198144842547E-9	DESIGN	7.113118565886164E-9	DOCUMENTATION
/* static methods only - hide constructor */	WITHOUT_CLASSIFICATION	0.9982815659058707	WITHOUT_CLASSIFICATION	0.001705153342867559	DESIGN	1.2063231806472801E-5	IMPLEMENTATION	1.0380403681995232E-6	DEFECT	1.290977687293811E-7	DOCUMENTATION	5.0381318298701995E-8	TEST
/*&& !('_'==character)*/	WITHOUT_CLASSIFICATION	0.9999970741794207	WITHOUT_CLASSIFICATION	2.5048788252024757E-6	DESIGN	1.5216808778438858E-7	IMPLEMENTATION	1.0812420151098591E-7	DEFECT	8.969745577167693E-8	TEST	7.095200896509691E-8	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.9999908555796926	WITHOUT_CLASSIFICATION	6.641206022528873E-6	DESIGN	2.268183319847773E-6	DEFECT	2.1574406896523379E-7	IMPLEMENTATION	1.7904453921801454E-8	DOCUMENTATION	1.382442196701999E-9	TEST
// returnign null!	WITHOUT_CLASSIFICATION	0.9999908555796926	WITHOUT_CLASSIFICATION	6.641206022528873E-6	DESIGN	2.268183319847773E-6	DEFECT	2.1574406896523379E-7	IMPLEMENTATION	1.7904453921801454E-8	DOCUMENTATION	1.382442196701999E-9	TEST
// includes last '.'	WITHOUT_CLASSIFICATION	0.999999682163378	WITHOUT_CLASSIFICATION	1.4533756894701547E-7	DEFECT	1.4069200639473662E-7	DESIGN	1.406275716642637E-8	IMPLEMENTATION	9.093460001031513E-9	DOCUMENTATION	8.650829678624767E-9	TEST
// +1 to include the following '.'	WITHOUT_CLASSIFICATION	0.9999986274211757	WITHOUT_CLASSIFICATION	9.014554976136058E-7	IMPLEMENTATION	3.199622771291054E-7	DEFECT	1.3473950547649442E-7	DESIGN	1.396849455960139E-8	DOCUMENTATION	2.4530495910990066E-9	TEST
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9999475851178009	WITHOUT_CLASSIFICATION	2.9710066020535435E-5	DESIGN	2.175108221677109E-5	DEFECT	6.465358462865161E-7	TEST	3.000321432266197E-7	IMPLEMENTATION	7.165972170626791E-9	DOCUMENTATION
// first time we find match!	WITHOUT_CLASSIFICATION	0.9999995897464188	WITHOUT_CLASSIFICATION	3.4673205492428407E-7	DESIGN	2.9218222200632123E-8	IMPLEMENTATION	1.5839840006231407E-8	TEST	1.0785391666526791E-8	DOCUMENTATION	7.678072376545943E-9	DEFECT
// entityNames may now include slashes for the representations //classname may be an inner class	WITHOUT_CLASSIFICATION	0.9994273231069801	WITHOUT_CLASSIFICATION	5.719742163346344E-4	DESIGN	6.584857885723032E-7	DEFECT	1.6638487320360662E-8	DOCUMENTATION	1.4027441758410125E-8	TEST	1.3524967665195673E-8	IMPLEMENTATION
// wrapped iterators	WITHOUT_CLASSIFICATION	0.9999792008083305	WITHOUT_CLASSIFICATION	2.0695241514032586E-5	DESIGN	5.215340356736749E-8	IMPLEMENTATION	2.4957548415117155E-8	DEFECT	2.298193087302491E-8	TEST	3.857272417717091E-9	DOCUMENTATION
// index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.9998148806716384	WITHOUT_CLASSIFICATION	1.80719573877653E-4	DESIGN	4.306485911438326E-6	DEFECT	4.300203860458932E-8	TEST	4.043502770944737E-8	DOCUMENTATION	9.831506052497305E-9	IMPLEMENTATION
// the current iterator	WITHOUT_CLASSIFICATION	0.9999296501188015	WITHOUT_CLASSIFICATION	6.960827997945821E-5	DESIGN	3.693587996985923E-7	IMPLEMENTATION	1.7045568311208275E-7	DEFECT	1.0342781421122886E-7	DOCUMENTATION	9.835892205636686E-8	TEST
// the last used iterator	WITHOUT_CLASSIFICATION	0.9994757892866728	WITHOUT_CLASSIFICATION	5.241041930307106E-4	DESIGN	8.650583248318918E-8	TEST	8.883638050403601E-9	IMPLEMENTATION	6.878928218968456E-9	DEFECT	4.251897706510451E-9	DOCUMENTATION
//it was a boolean expression	WITHOUT_CLASSIFICATION	0.9999896449039704	WITHOUT_CLASSIFICATION	6.6765772401982466E-6	DESIGN	3.6604812604758196E-6	DEFECT	1.1785815094082905E-8	TEST	5.206675400822235E-9	DOCUMENTATION	1.0450385666251893E-9	IMPLEMENTATION
/*public static Object[] clone(Class elementClass, Object[] array) {	WITHOUT_CLASSIFICATION	0.9715873787370645	WITHOUT_CLASSIFICATION	0.02840553946674241	DESIGN	4.684144792000051E-6	DEFECT	1.2577061452695432E-6	IMPLEMENTATION	1.058692576568913E-6	DOCUMENTATION	8.12526792645039E-8	TEST
// call this before any Iterator method to make sure that the current Iterator // is not exhausted	WITHOUT_CLASSIFICATION	0.9993514904451465	WITHOUT_CLASSIFICATION	5.561755563392762E-4	DESIGN	7.840476677386785E-5	DEFECT	1.1987885053110206E-5	IMPLEMENTATION	1.8709129435892838E-6	TEST	7.043374366685005E-8	DOCUMENTATION
//doable if needed	WITHOUT_CLASSIFICATION	0.9961502467418328	WITHOUT_CLASSIFICATION	0.00321437828054884	IMPLEMENTATION	5.831880590431477E-4	DESIGN	4.552552810500133E-5	TEST	5.503331488655265E-6	DOCUMENTATION	1.1580589816553404E-6	DEFECT
// set last used iterator here, in case the user calls remove // before calling hasNext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.9949865918755533	WITHOUT_CLASSIFICATION	0.004709755694644224	DESIGN	2.9835809050051537E-4	DEFECT	3.918087549575039E-6	TEST	1.3570407186251224E-6	IMPLEMENTATION	1.921103380261112E-8	DOCUMENTATION
// peek ahead	WITHOUT_CLASSIFICATION	0.999955132430168	WITHOUT_CLASSIFICATION	4.0642831051638064E-5	IMPLEMENTATION	3.4403856893172623E-6	DESIGN	3.78243921068163E-7	DOCUMENTATION	3.188627987640987E-7	DEFECT	8.724637135900032E-8	TEST
// if we reach the end of the string w/o finding the // matching end, that is an exception	WITHOUT_CLASSIFICATION	0.9999993837475718	WITHOUT_CLASSIFICATION	5.804505297544482E-7	DEFECT	1.8752238164937135E-8	DESIGN	1.1065330227223124E-8	TEST	5.604519301911032E-9	IMPLEMENTATION	3.79810782269658E-10	DOCUMENTATION
// we have a placeholder, spin forward till we find the end	WITHOUT_CLASSIFICATION	0.999997790361219	WITHOUT_CLASSIFICATION	1.905714359810909E-6	IMPLEMENTATION	2.4833287284046007E-7	DESIGN	4.4949102750446734E-8	DEFECT	9.878171732770036E-9	DOCUMENTATION	7.642739122578828E-10	TEST
// make sure spinning forward did not put us past the end of the buffer...	WITHOUT_CLASSIFICATION	0.999999993281209	WITHOUT_CLASSIFICATION	3.5218409938503706E-9	DEFECT	1.9023543141541078E-9	TEST	8.175642340396077E-10	IMPLEMENTATION	4.5107593553663683E-10	DESIGN	2.5955567418854377E-11	DOCUMENTATION
// First, try to locate this resource through the current // context classloader.	WITHOUT_CLASSIFICATION	0.9999840015353832	WITHOUT_CLASSIFICATION	1.2182822543389894E-5	DESIGN	2.4524390624427073E-6	DEFECT	9.024605455826087E-7	IMPLEMENTATION	3.555955226577482E-7	DOCUMENTATION	1.0514694263908253E-7	TEST
// Next, try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.9999377980333284	WITHOUT_CLASSIFICATION	6.158286015234569E-5	DESIGN	2.980647327443388E-7	DEFECT	2.015789760852694E-7	TEST	5.986072546729422E-8	DOCUMENTATION	5.960208491954369E-8	IMPLEMENTATION
// Next, try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.9999545653160044	WITHOUT_CLASSIFICATION	4.270376159736649E-5	DESIGN	2.3781139086064898E-6	DEFECT	2.1462029777437908E-7	TEST	7.154182284811654E-8	IMPLEMENTATION	6.66463691256669E-8	DOCUMENTATION
// Anywhere else we should look?	WITHOUT_CLASSIFICATION	0.9998958760411222	WITHOUT_CLASSIFICATION	1.0053012284711506E-4	DESIGN	3.3418838611183813E-6	DEFECT	1.7241228721239354E-7	IMPLEMENTATION	4.37976495261439E-8	DOCUMENTATION	3.57422328481359E-8	TEST
// would need an IdentitySet for this!	WITHOUT_CLASSIFICATION	0.9995008662074703	WITHOUT_CLASSIFICATION	4.972648093075962E-4	DESIGN	1.2648598184721079E-6	TEST	4.81016950249817E-7	DOCUMENTATION	1.0046414079454999E-7	IMPLEMENTATION	2.264231264513697E-8	DEFECT
//Arrays.asList doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.9999985007408274	WITHOUT_CLASSIFICATION	6.829458372229075E-7	TEST	4.861049513844977E-7	DEFECT	1.8146968713865958E-7	IMPLEMENTATION	7.590227481504828E-8	DESIGN	7.283642208181902E-8	DOCUMENTATION
//faster?	WITHOUT_CLASSIFICATION	0.9838693959666975	WITHOUT_CLASSIFICATION	0.01609419467028594	DESIGN	1.8135674131442483E-5	TEST	7.515860334244526E-6	DEFECT	7.015923530974137E-6	IMPLEMENTATION	3.7419050199384585E-6	DOCUMENTATION
// the name of a class	WITHOUT_CLASSIFICATION	0.9999283404087297	WITHOUT_CLASSIFICATION	6.96416551261275E-5	DESIGN	1.6963518849469675E-6	DEFECT	1.5697198010579764E-7	DOCUMENTATION	1.0212875707778476E-7	TEST	6.248352204305904E-8	IMPLEMENTATION
// Its the listener class name	WITHOUT_CLASSIFICATION	0.9999942288199788	WITHOUT_CLASSIFICATION	5.715455449706414E-6	DESIGN	3.3284066516199735E-8	DEFECT	1.4057628390577713E-8	TEST	5.219974939042255E-9	IMPLEMENTATION	3.1629015964450147E-9	DOCUMENTATION
//allow 9,8,7,6,5,4,3,2,1	WITHOUT_CLASSIFICATION	0.9999891246394946	WITHOUT_CLASSIFICATION	6.162807922979984E-6	DEFECT	2.2794372665044437E-6	IMPLEMENTATION	2.024637614642013E-6	DESIGN	2.1928033413086713E-7	TEST	1.8919736715670965E-7	DOCUMENTATION
// default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.9999999908000748	WITHOUT_CLASSIFICATION	7.375708874060443E-9	DESIGN	1.2076724969386103E-9	IMPLEMENTATION	5.444584428326287E-10	DOCUMENTATION	4.9697289941463943E-11	DEFECT	2.2388073357445702E-11	TEST
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999727210456666	WITHOUT_CLASSIFICATION	2.6044916408180992E-5	DESIGN	8.719233092147266E-7	IMPLEMENTATION	3.110017209820166E-7	DEFECT	4.5109630268414444E-8	DOCUMENTATION	6.003264875067899E-9	TEST
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.5668675538603544	DESIGN	0.25919152628009173	WITHOUT_CLASSIFICATION	0.11186476887844045	IMPLEMENTATION	0.061815735253711	DEFECT	1.585032237674237E-4	DOCUMENTATION	1.0191250363511008E-4	TEST
// first, lets determine whether to apply cglib or javassist based instrumentation...	WITHOUT_CLASSIFICATION	0.9999911881276818	WITHOUT_CLASSIFICATION	8.758301875066133E-6	DESIGN	2.6745085028135744E-8	DOCUMENTATION	1.4658372126356708E-8	DEFECT	6.4354979097093055E-9	TEST	5.731488149882972E-9	IMPLEMENTATION
// Make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.9999994906450567	WITHOUT_CLASSIFICATION	4.941106368133371E-7	DESIGN	8.598298595889297E-9	IMPLEMENTATION	5.047743799619099E-9	DEFECT	8.821129603370291E-10	TEST	7.161510760445897E-10	DOCUMENTATION
//entirely optional!!	WITHOUT_CLASSIFICATION	0.9999554001540746	WITHOUT_CLASSIFICATION	3.220009773552109E-5	DESIGN	6.044714835882054E-6	DEFECT	4.806302391872056E-6	IMPLEMENTATION	1.419280756624238E-6	DOCUMENTATION	1.2945020551846994E-7	TEST
// Its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.9998913233435338	WITHOUT_CLASSIFICATION	1.0677984712277494E-4	DESIGN	1.2853904733704307E-6	IMPLEMENTATION	5.548980525593541E-7	DEFECT	4.160052528838904E-8	DOCUMENTATION	1.4920292083699264E-8	TEST
//context.unbind(boundName);	WITHOUT_CLASSIFICATION	0.9994301174461436	WITHOUT_CLASSIFICATION	3.7684855723867295E-4	DESIGN	8.837079974200286E-5	IMPLEMENTATION	7.532027133953299E-5	DEFECT	1.7269881600507437E-5	TEST	1.2073043935782742E-5	DOCUMENTATION
//readResolveObject	WITHOUT_CLASSIFICATION	0.9949400854288823	WITHOUT_CLASSIFICATION	0.0050242153131718	DESIGN	1.64591458532827E-5	DEFECT	7.99078703229366E-6	IMPLEMENTATION	7.894243714137683E-6	DOCUMENTATION	3.3550813461468664E-6	TEST
//cfg.setProperty("hibernate.show_sql", "true");	WITHOUT_CLASSIFICATION	0.9999999677307878	WITHOUT_CLASSIFICATION	1.5021952055443936E-8	DEFECT	1.4129390730401716E-8	DESIGN	2.6238629096505687E-9	TEST	3.123022188795253E-10	DOCUMENTATION	1.817042260452577E-10	IMPLEMENTATION
// Defensive, convenience methods	WITHOUT_CLASSIFICATION	0.999850935563789	WITHOUT_CLASSIFICATION	1.4731628584621482E-4	IMPLEMENTATION	1.0759140014268902E-6	DESIGN	5.198285558187533E-7	DOCUMENTATION	8.930583762829467E-8	DEFECT	6.310196976434734E-8	TEST
// Create the SessionFactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.9999942289058118	WITHOUT_CLASSIFICATION	5.721184413211186E-6	DESIGN	2.3532334104267303E-8	DEFECT	1.267018605223954E-8	TEST	8.61660414544213E-9	IMPLEMENTATION	5.090650832561356E-9	DOCUMENTATION
// Make sure you log the exception, as it might be swallowed	WITHOUT_CLASSIFICATION	0.9994017047586168	WITHOUT_CLASSIFICATION	5.811759203142908E-4	DEFECT	1.588652231214538E-5	DESIGN	1.1657355766925252E-6	IMPLEMENTATION	6.313343130191063E-8	TEST	3.929748750762338E-9	DOCUMENTATION
// Begin unit of work	WITHOUT_CLASSIFICATION	0.9994395506872954	WITHOUT_CLASSIFICATION	5.196141563243298E-4	DEFECT	3.8221532446779455E-5	DESIGN	1.4699033329898788E-6	DOCUMENTATION	6.127516615454992E-7	IMPLEMENTATION	5.309689390078221E-7	TEST
// Write HTML header	WITHOUT_CLASSIFICATION	0.999858900794355	WITHOUT_CLASSIFICATION	1.1857362708398221E-4	DESIGN	1.9427242922257995E-5	IMPLEMENTATION	2.4268781657448464E-6	DEFECT	4.662648671769617E-7	DOCUMENTATION	2.0519260581534513E-7	TEST
// Handle actions	WITHOUT_CLASSIFICATION	0.9998380774749231	WITHOUT_CLASSIFICATION	9.088094577375278E-5	IMPLEMENTATION	7.03899128652603E-5	DESIGN	3.478061993243239E-7	DEFECT	2.654106674911743E-7	DOCUMENTATION	3.844957109122547E-8	TEST
// Print page	WITHOUT_CLASSIFICATION	0.9999971465946117	WITHOUT_CLASSIFICATION	1.8478679733466496E-6	IMPLEMENTATION	7.45294404399762E-7	DESIGN	1.9549707887592157E-7	DEFECT	4.6976973386114184E-8	DOCUMENTATION	1.7768958384269224E-8	TEST
// Write HTML footer	WITHOUT_CLASSIFICATION	0.9999713205180069	WITHOUT_CLASSIFICATION	2.6127486796443405E-5	DESIGN	2.340866732168498E-6	DEFECT	1.3765246737842798E-7	IMPLEMENTATION	3.71278893419751E-8	DOCUMENTATION	3.634810778921586E-8	TEST
// End unit of work	WITHOUT_CLASSIFICATION	0.9999204175285664	WITHOUT_CLASSIFICATION	6.340389073139878E-5	DEFECT	1.5396786771549914E-5	DESIGN	3.8032995268770346E-7	IMPLEMENTATION	2.3113423534940508E-7	TEST	1.7032974278178852E-7	DOCUMENTATION
// Start the session to be used for this request	WITHOUT_CLASSIFICATION	0.9746069878439017	WITHOUT_CLASSIFICATION	0.02539236079236729	DESIGN	5.214111561239224E-7	TEST	6.592447468249252E-8	DEFECT	4.4037506213300513E-8	DOCUMENTATION	1.9990593873906347E-8	IMPLEMENTATION
// make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.9999989070884244	WITHOUT_CLASSIFICATION	6.661443163141851E-7	DESIGN	2.2410972609579199E-7	IMPLEMENTATION	1.5528726810340745E-7	DEFECT	3.2337311462482004E-8	DOCUMENTATION	1.5032953637651096E-8	TEST
// pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.9999999790516658	WITHOUT_CLASSIFICATION	9.85343465103708E-9	TEST	7.687405358990293E-9	IMPLEMENTATION	2.08577427140834E-9	DEFECT	1.0040987879421623E-9	DESIGN	3.176210510177271E-10	DOCUMENTATION
// remove session from "current context"	WITHOUT_CLASSIFICATION	0.9991210213395748	WITHOUT_CLASSIFICATION	7.559460498631403E-4	DESIGN	1.2124467053084948E-4	DEFECT	1.201633247625308E-6	DOCUMENTATION	4.454014738387146E-7	IMPLEMENTATION	1.4090530968172932E-7	TEST
// Eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.9999888641671623	WITHOUT_CLASSIFICATION	7.603711105675292E-6	DESIGN	3.4985498647707044E-6	IMPLEMENTATION	1.7474259589412325E-8	DEFECT	1.3667651525115756E-8	DOCUMENTATION	2.429956135883345E-9	TEST
// If we want to handle it bidirectional and detached, we also need to load this // collection with an eager outer-join fetch, this time with Criteria and not HQL:	WITHOUT_CLASSIFICATION	0.999999780032178	WITHOUT_CLASSIFICATION	1.9821467704059397E-7	DESIGN	1.5896744013581615E-8	IMPLEMENTATION	3.386884399906554E-9	DEFECT	2.1617143053331127E-9	TEST	3.078021132192702E-10	DOCUMENTATION
/*        Event anEvent = (Event) session                .createCriteria(Event.class).setFetchMode("participants", FetchMode.JOIN)                .add( Expression.eq("id", eventId) )                .uniqueResult(); // Eager fetch the colleciton so we can use it detached        */	WITHOUT_CLASSIFICATION	0.9999999992094617	WITHOUT_CLASSIFICATION	7.043906208156911E-10	DESIGN	4.63392779290002E-11	IMPLEMENTATION	3.22771554353656E-11	DEFECT	5.9117313321596164E-12	TEST	1.619532825324631E-12	DOCUMENTATION
// End of first unit of work	WITHOUT_CLASSIFICATION	0.99999324772154	WITHOUT_CLASSIFICATION	4.970979004460286E-6	DEFECT	1.5279844014106745E-6	DESIGN	1.753357096901694E-7	TEST	4.562638833486422E-8	IMPLEMENTATION	3.235295618844261E-8	DOCUMENTATION
// or bidirectional safety method, setting both sides: aPerson.addToEvent(anEvent);	WITHOUT_CLASSIFICATION	0.9998681510539699	WITHOUT_CLASSIFICATION	1.2114048176188888E-4	IMPLEMENTATION	1.0424990026537075E-5	DESIGN	2.0438753653262702E-7	DEFECT	4.3698986478057026E-8	DOCUMENTATION	3.538771864874165E-8	TEST
// Begin second unit of work	WITHOUT_CLASSIFICATION	0.9996959827202192	WITHOUT_CLASSIFICATION	2.3841818804271018E-4	DEFECT	6.199319024577301E-5	DESIGN	2.7242630220572626E-6	DOCUMENTATION	6.93953782870536E-7	IMPLEMENTATION	1.8768468717778044E-7	TEST
// Reattachment of aPerson	WITHOUT_CLASSIFICATION	0.9999672736977941	WITHOUT_CLASSIFICATION	2.972484738580143E-5	DESIGN	2.5989248405385077E-6	DEFECT	2.350464842015045E-7	DOCUMENTATION	1.1257982611420017E-7	IMPLEMENTATION	5.490366916493212E-8	TEST
// The getEmailAddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.9957166862329833	WITHOUT_CLASSIFICATION	0.00426320841421336	DEFECT	1.6389826040434752E-5	DESIGN	2.8347228846198817E-6	IMPLEMENTATION	7.42695604880052E-7	TEST	1.3810827358104093E-7	DOCUMENTATION
// We need our tm, so get it now and avoid doing other work // if there is a problem	WITHOUT_CLASSIFICATION	0.999970553795568	WITHOUT_CLASSIFICATION	2.855078381960638E-5	DESIGN	8.131413339904209E-7	TEST	8.05900982293689E-8	DEFECT	1.1196256913390172E-9	DOCUMENTATION	5.695545086643787E-10	IMPLEMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.999999255087612	WITHOUT_CLASSIFICATION	5.420076897952281E-7	DEFECT	1.9764868753959607E-7	IMPLEMENTATION	1.9694425036359544E-9	DESIGN	1.935978334520995E-9	DOCUMENTATION	1.3505899382153437E-9	TEST
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.999999255087612	WITHOUT_CLASSIFICATION	5.420076897952281E-7	DEFECT	1.9764868753959607E-7	IMPLEMENTATION	1.9694425036359544E-9	DESIGN	1.935978334520995E-9	DOCUMENTATION	1.3505899382153437E-9	TEST
// JBC put a version in the node when it created as part of // some internal operation. We are always newer, but if // the JBC version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.9999998471769568	WITHOUT_CLASSIFICATION	1.4695735038969343E-7	DESIGN	4.31726823218263E-9	TEST	1.3138982674018757E-9	DEFECT	1.3614049603020963E-10	DOCUMENTATION	9.838587972811378E-11	IMPLEMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for properties with //                     hibernate-specific overrides to detect and warn about conflicting //                     declarations	WITHOUT_CLASSIFICATION	0.9997020673829262	WITHOUT_CLASSIFICATION	2.916217828886045E-4	DESIGN	3.940398638350025E-6	IMPLEMENTATION	1.5139252267169745E-6	TEST	4.880472106230733E-7	DOCUMENTATION	3.6846310956776804E-7	DEFECT
// Not null if the Isolation level has been specified in the configuration file. // Otherwise, it is left to the Driver's default value.	WITHOUT_CLASSIFICATION	0.9999992162328339	WITHOUT_CLASSIFICATION	7.146677003620286E-7	IMPLEMENTATION	6.674924427429646E-8	DESIGN	1.1397747444497105E-9	DOCUMENTATION	7.946004141044204E-10	TEST	4.1584607851350244E-10	DEFECT
// Configured outside of Hibernate (i.e. Servlet container, or Java Bean Container // already has Proxool pools running, and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.9997849742125984	WITHOUT_CLASSIFICATION	2.150245983680833E-4	DESIGN	5.872028129649417E-10	DEFECT	3.624647821337693E-10	DOCUMENTATION	2.0731832656759887E-10	TEST	3.204778244161129E-11	IMPLEMENTATION
// If you're closing down the ConnectionProvider chances are an // is not a real big deal, just warn	WITHOUT_CLASSIFICATION	0.9999254391981635	WITHOUT_CLASSIFICATION	7.354053667721951E-5	DEFECT	9.935122907866713E-7	DESIGN	1.3064245120093864E-8	TEST	1.1779011472901688E-8	IMPLEMENTATION	1.909611860152962E-9	DOCUMENTATION
// (AS is always optional, for consistency with SQL/OQL)	WITHOUT_CLASSIFICATION	0.9999959711600862	WITHOUT_CLASSIFICATION	3.218145014567726E-6	IMPLEMENTATION	6.749628551281623E-7	DESIGN	8.618161463966516E-8	TEST	2.5173587215638903E-8	DEFECT	2.4376842281798643E-8	DOCUMENTATION
// process the "new" HQL style where aliases are assigned // _after_ the class name or path expression ie. using // the AS construction	WITHOUT_CLASSIFICATION	0.9999946382348781	WITHOUT_CLASSIFICATION	5.3054005605914225E-6	DESIGN	5.2979344427130046E-8	DEFECT	1.7471959614488671E-9	TEST	1.33650367528158E-9	DOCUMENTATION	3.0151724416114114E-10	IMPLEMENTATION
// the loaded owner will be set to null after the collection is removed, // so capture its value as the affected owner so it is accessible to // both pre- and post- events	WITHOUT_CLASSIFICATION	0.999999999979056	WITHOUT_CLASSIFICATION	1.951505862721295E-11	DESIGN	9.979603900001792E-13	DEFECT	4.10343697502401E-13	IMPLEMENTATION	1.9996335677956112E-14	TEST	7.321199374718857E-16	DOCUMENTATION
// is a primitive type // invokespecial	WITHOUT_CLASSIFICATION	0.9999991101879516	WITHOUT_CLASSIFICATION	6.864405082884255E-7	DEFECT	1.9012783086034456E-7	DESIGN	8.708079189125832E-9	TEST	4.0296670783822155E-9	DOCUMENTATION	5.059629012654964E-10	IMPLEMENTATION
// array of primitive type // do nothing	WITHOUT_CLASSIFICATION	0.9999986181332119	WITHOUT_CLASSIFICATION	8.861320070587737E-7	DEFECT	4.5246511336672666E-7	DESIGN	1.9825813336318017E-8	DOCUMENTATION	1.697810621095156E-8	TEST	6.46574821218296E-9	IMPLEMENTATION
// handle a path expression or class name that // appears at the start, in the "new" HQL // style or an alias that appears at the start // in the "old" HQL style	WITHOUT_CLASSIFICATION	0.9980858997511307	WITHOUT_CLASSIFICATION	0.0018597293252722482	DESIGN	5.435052861592389E-5	DEFECT	8.173517430859569E-9	TEST	6.479501259937618E-9	DOCUMENTATION	5.741962516262704E-9	IMPLEMENTATION
//handle <=, >=, !=, is not, not between, not in	WITHOUT_CLASSIFICATION	0.9999165395804644	WITHOUT_CLASSIFICATION	7.236611765127309E-5	DESIGN	9.608374289653113E-6	DEFECT	7.078885910630038E-7	TEST	5.85151939700711E-7	IMPLEMENTATION	1.9288706396389042E-7	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999996047875657	WITHOUT_CLASSIFICATION	3.9304202024028186E-7	DEFECT	1.5625497512781064E-9	IMPLEMENTATION	4.943840966679299E-10	DESIGN	7.42825935662463E-11	TEST	3.91975083644407E-11	DOCUMENTATION
// transfer an explicitly defined entity name // handle the lazy attribute	WITHOUT_CLASSIFICATION	0.9999207313396585	WITHOUT_CLASSIFICATION	7.925890781416101E-5	DESIGN	8.443188688979935E-9	IMPLEMENTATION	7.393555573365733E-10	DOCUMENTATION	5.055699951016448E-10	TEST	6.441317493560487E-11	DEFECT
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999990890267604	WITHOUT_CLASSIFICATION	5.794939039436584E-7	DESIGN	3.052288902435877E-7	IMPLEMENTATION	1.1650769649993862E-8	DOCUMENTATION	8.856805502872855E-9	DEFECT	5.742870245019633E-9	TEST
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999990890267604	WITHOUT_CLASSIFICATION	5.794939039436584E-7	DESIGN	3.052288902435877E-7	IMPLEMENTATION	1.1650769649993862E-8	DOCUMENTATION	8.856805502872855E-9	DEFECT	5.742870245019633E-9	TEST
// get meta's from // <joined-subclass>	WITHOUT_CLASSIFICATION	0.9999994988687454	WITHOUT_CLASSIFICATION	4.950050198576446E-7	DESIGN	5.683795864837799E-9	DEFECT	3.5021807741955E-10	TEST	7.155969586106547E-11	DOCUMENTATION	2.066097551495526E-11	IMPLEMENTATION
// parameters on the property mapping should // override parameters in the typedef	WITHOUT_CLASSIFICATION	0.9995383907705807	WITHOUT_CLASSIFICATION	4.5886458008953616E-4	DEFECT	1.3916719430844044E-6	IMPLEMENTATION	1.202393809150808E-6	DESIGN	1.4123128282802097E-7	TEST	9.352294857861378E-9	DOCUMENTATION
//fetch="join" overrides default laziness //fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.9999999861698973	WITHOUT_CLASSIFICATION	1.0461757987610873E-8	IMPLEMENTATION	2.0423789191484025E-9	DESIGN	5.314301790167054E-10	DOCUMENTATION	4.770203569445423E-10	DEFECT	3.1751526208995416E-10	TEST
//NOTE SPECIAL CASE: // default to join and non-lazy for the "second join" // of the many-to-many	WITHOUT_CLASSIFICATION	0.999999952842992	WITHOUT_CLASSIFICATION	3.838051916792952E-8	DESIGN	8.132172999682771E-9	DOCUMENTATION	4.95850446009448E-10	DEFECT	1.0895947427429795E-10	IMPLEMENTATION	3.9505884125671033E-11	TEST
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999998259736557	WITHOUT_CLASSIFICATION	1.488664653197184E-7	DESIGN	1.0027827156884961E-8	DOCUMENTATION	9.693527768042791E-9	DEFECT	3.3337774940210484E-9	IMPLEMENTATION	2.104746631102087E-9	TEST
// state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999995244960551	WITHOUT_CLASSIFICATION	3.93674556461439E-6	DESIGN	4.1843775877415084E-7	IMPLEMENTATION	1.7067035270246376E-7	DEFECT	1.2706441831181283E-7	TEST	1.0212135447781565E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
//element //index -> id	WITHOUT_CLASSIFICATION	0.9999972847834501	WITHOUT_CLASSIFICATION	1.0324204951505084E-6	DEFECT	8.254087865381499E-7	DESIGN	6.374225871486581E-7	IMPLEMENTATION	1.1714222957292238E-7	DOCUMENTATION	1.0282245159989186E-7	TEST
// note that it might be better to iterate the snapshot but this is safe, // assuming the user implements equals() properly, as required by the Set // contract!	WITHOUT_CLASSIFICATION	0.6796180767446681	WITHOUT_CLASSIFICATION	0.31988261907621596	DEFECT	2.5248804871924266E-4	DESIGN	1.2930635091216796E-4	TEST	1.1646509786040177E-4	IMPLEMENTATION	1.044681624217059E-6	DOCUMENTATION
// collections detect changes made via their public interface and mark // themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.9999913205962377	WITHOUT_CLASSIFICATION	5.412259588733787E-6	IMPLEMENTATION	3.2189490401992444E-6	DESIGN	2.9109971854390727E-8	DEFECT	1.678391908563154E-8	DOCUMENTATION	2.3012423190883607E-9	TEST
// essentially, if the real session is closed allow any // method call to pass through since the real session // will complain by throwing an appropriate exception; // NOTE that allowing close() above has the same basic effect, //   but we capture that there simply to perform the unbind...	WITHOUT_CLASSIFICATION	0.999999994500828	WITHOUT_CLASSIFICATION	3.5705321912304127E-9	IMPLEMENTATION	1.312243413885059E-9	DESIGN	5.608372851395183E-10	TEST	5.4456770878526364E-11	DEFECT	1.1023551502278594E-12	DOCUMENTATION
// The default SQLExceptionConverter for all dialects is based on SQLState // since SQLErrorCode is extremely vendor-specific.  Specific Dialects // may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.9999999986313705	WITHOUT_CLASSIFICATION	1.0135429287783378E-9	DESIGN	2.3162816266012202E-10	IMPLEMENTATION	1.2068450018575259E-10	DEFECT	2.3017154736282234E-12	DOCUMENTATION	4.723342248709276E-13	TEST
//only necessary for postgre < 7.4 //http://anoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.9999999720609554	WITHOUT_CLASSIFICATION	1.110849906592942E-8	DESIGN	8.895607676298082E-9	DOCUMENTATION	4.741614035932699E-9	DEFECT	2.4917150749468245E-9	TEST	7.016087515071354E-10	IMPLEMENTATION
// select topic, syntax from information_schema.help // where section like 'Function%' order by section, topic // // see also ->  http://www.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.999999998536176	WITHOUT_CLASSIFICATION	8.798772465851692E-10	DEFECT	3.7370181234456834E-10	DESIGN	1.4062172790552534E-10	DOCUMENTATION	5.501871716869367E-11	IMPLEMENTATION	1.4604394772862996E-11	TEST
// registerColumnType(Types.VARBINARY, "CHARACTER($l)"); // registerColumnType(Types.BLOB, "CHARACTER($l)" );  // For use prior to CP 11.0 // registerColumnType(Types.CLOB, "CHARACTER($l)" );	WITHOUT_CLASSIFICATION	0.99999890500838	WITHOUT_CLASSIFICATION	6.634150161346052E-7	DESIGN	3.884170247686316E-7	IMPLEMENTATION	2.224758462048315E-8	TEST	1.7431199850219276E-8	DEFECT	3.48079472276641E-9	DOCUMENTATION
//the BLOB type requires a size arguement - this defaults to //bytes - no arg defaults to 1 whole byte! //other argument mods include K - kilobyte, M - megabyte, G - gigabyte. //refer to the PBdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.9997119545546177	DESIGN	2.8048696136835595E-4	WITHOUT_CLASSIFICATION	7.071397378579275E-6	DEFECT	2.804321822464192E-7	DOCUMENTATION	1.958255010067552E-7	TEST	1.0828952269153482E-8	IMPLEMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9986784140472452	WITHOUT_CLASSIFICATION	0.0013091428228207754	DESIGN	1.2310825826094876E-5	DEFECT	6.794927562182641E-8	IMPLEMENTATION	5.292841315485217E-8	TEST	1.1426419081459852E-8	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.7946935488965735	WITHOUT_CLASSIFICATION	0.20527042431960238	DESIGN	3.1058928192853625E-5	DEFECT	4.41188701823752E-6	TEST	5.395095007457949E-7	IMPLEMENTATION	1.645911199758678E-8	DOCUMENTATION
// add the comment // nest the main query in an outer select // add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9999349932403049	WITHOUT_CLASSIFICATION	6.359817505772565E-5	DESIGN	1.2607301763367975E-6	TEST	1.033950434954104E-7	DOCUMENTATION	2.563815407725265E-8	IMPLEMENTATION	1.8821263544122962E-8	DEFECT
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// Note: For object <-> SQL datatype mappings see: //	WITHOUT_CLASSIFICATION	0.9999805949873929	WITHOUT_CLASSIFICATION	1.208349880698359E-5	DESIGN	7.208786436914232E-6	DEFECT	7.304582973870582E-8	IMPLEMENTATION	2.664371982350858E-8	TEST	1.3037813719427451E-8	DOCUMENTATION
// TRIM(end_keyword string-expression-1 FROM string-expression-2) // use Hibernate implementation "From" is one of the parameters they pass in position ?3 //registerFunction( "trim", new SQLFunctionTemplate(Hibernate.STRING, "trim(?1 ?2 from ?3)") );	WITHOUT_CLASSIFICATION	0.9999999862203065	WITHOUT_CLASSIFICATION	1.134833057547313E-8	DESIGN	2.0030566328371513E-9	IMPLEMENTATION	4.1416389905883994E-10	DEFECT	1.356001955285606E-11	TEST	5.82381208402961E-13	DOCUMENTATION
// Whether this dialect has an Identity clause added to the data type or a completely seperate identity // data type	WITHOUT_CLASSIFICATION	0.9999899481908211	WITHOUT_CLASSIFICATION	1.0025339478812462E-5	DESIGN	2.6028915870986454E-8	DEFECT	1.6824906707494111E-10	TEST	1.6038070365195723E-10	DOCUMENTATION	1.1215444761607909E-10	IMPLEMENTATION
// According to both the ANSI-SQL and JPA specs, trim takes a variable number of parameters between 1 and 4. // at least one paramer (trimSource) is required.  From the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If <trim specification> is omitted, BOTH is assumed. // If <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999999993965397	WITHOUT_CLASSIFICATION	5.986443994768859E-10	DEFECT	2.2832796508198092E-12	TEST	1.2063464181000624E-12	DESIGN	1.177852892201737E-12	DOCUMENTATION	1.4848619532403472E-13	IMPLEMENTATION
/////////////////////////////////////////////////////////////////////// // Prepare persisters and link them up with their cache // region/access-strategy	WITHOUT_CLASSIFICATION	0.9999709735067709	WITHOUT_CLASSIFICATION	2.9007256358495804E-5	DESIGN	1.3240640086984403E-8	DEFECT	4.685436461373001E-9	TEST	9.221634948056095E-10	DOCUMENTATION	3.8863042917636854E-10	IMPLEMENTATION
//Named Queries:	WITHOUT_CLASSIFICATION	0.9998033552152095	WITHOUT_CLASSIFICATION	1.888645541391454E-4	DESIGN	4.832644687395276E-6	IMPLEMENTATION	2.1084741602362355E-6	TEST	5.976909579898443E-7	DEFECT	2.414208458100559E-7	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9362027290740472	WITHOUT_CLASSIFICATION	0.06232616099932121	DESIGN	8.960992900969265E-4	DEFECT	5.111902025594481E-4	TEST	5.963353559582694E-5	IMPLEMENTATION	4.186898379309984E-6	DOCUMENTATION
// does not handle arrays (thats ok, cos they can't be lazy) // or newly instantiated collections, so we can do the cast	WITHOUT_CLASSIFICATION	0.9741947928675173	WITHOUT_CLASSIFICATION	0.02430604343560575	DEFECT	0.0014952058652268126	DESIGN	2.6399180219897957E-6	IMPLEMENTATION	7.174342765591156E-7	TEST	6.004793516428549E-7	DOCUMENTATION
// collection deletions are a special case since update() can add // deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.9999523859462826	WITHOUT_CLASSIFICATION	3.471294973982771E-5	DEFECT	1.2899474754006317E-5	IMPLEMENTATION	8.73269972285838E-10	DOCUMENTATION	5.254158791751441E-10	TEST	2.3053777510131021E-10	DESIGN
// we can do the cast since orphan-delete does not apply to: // 1. newly instantiated collections // 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.9983387396957736	WITHOUT_CLASSIFICATION	0.0014524597738964772	DEFECT	1.5520328873713275E-4	IMPLEMENTATION	5.3196764013815135E-5	DESIGN	2.9267730721939405E-7	DOCUMENTATION	1.0780027188177091E-7	TEST
// if the natural-id is marked as non-mutable, it is not retrieved during a // normal database-snapshot operation...	WITHOUT_CLASSIFICATION	0.998353182006727	WITHOUT_CLASSIFICATION	0.0016422508736172769	IMPLEMENTATION	2.1082274408891644E-6	DESIGN	1.3658120954912351E-6	DEFECT	1.0923187984831155E-6	TEST	7.613208941381698E-10	DOCUMENTATION
// watch out for a case where old is still referenced // somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9997963341214519	WITHOUT_CLASSIFICATION	2.0233981925533222E-4	DESIGN	1.1450676251153505E-6	DEFECT	7.891470414307026E-8	DOCUMENTATION	7.497252335708555E-8	IMPLEMENTATION	2.710444018706805E-8	TEST
//slice, to get the columns for this component //property	WITHOUT_CLASSIFICATION	0.9989198323135484	WITHOUT_CLASSIFICATION	0.001079924258883415	DESIGN	2.0935132889470153E-7	TEST	2.0228242895629344E-8	DOCUMENTATION	1.2344983208486048E-8	DEFECT	1.5030131695641236E-9	IMPLEMENTATION
//int result = 17; //result = 37 * result + type.hashCode(); //result = 37 * result + ( value==null ? 0 : value.hashCode() ); //return result;	WITHOUT_CLASSIFICATION	0.9999828019479075	WITHOUT_CLASSIFICATION	1.716730192180004E-5	DEFECT	2.379243902539189E-8	DESIGN	4.9567293474198035E-9	IMPLEMENTATION	1.1206891424685432E-9	TEST	8.803133757201716E-10	DOCUMENTATION
// The CollectionEntry.isReached() stuff is just to detect any silly users   // who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.9999823340469209	WITHOUT_CLASSIFICATION	1.7660876800764308E-5	DESIGN	4.61227779482746E-9	DEFECT	3.452784591842844E-10	IMPLEMENTATION	9.820723714163689E-11	DOCUMENTATION	2.0514850549830117E-11	TEST
// detached collection wrappers that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999782718215623	WITHOUT_CLASSIFICATION	2.137757340662992E-5	DESIGN	3.2641088016082433E-7	DEFECT	2.3668589638855066E-8	IMPLEMENTATION	3.399439102786343E-10	TEST	1.8561739536522147E-10	DOCUMENTATION
// The unique property value represented here may or may not be // serializable, so we do an explicit check here in order to generate // a better error message	WITHOUT_CLASSIFICATION	0.5385762267262911	DESIGN	0.44582513704224636	WITHOUT_CLASSIFICATION	0.0154669394108001	DEFECT	8.787844900345992E-5	TEST	2.3037832365665017E-5	IMPLEMENTATION	2.078053929335441E-5	DOCUMENTATION
// if the version of a newly instantiated object is not the same // as the version seed value, use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.9997340957044695	WITHOUT_CLASSIFICATION	2.632925486022588E-4	DESIGN	2.5272589256356558E-6	DEFECT	6.252355084964528E-8	IMPLEMENTATION	1.3865571602006157E-8	TEST	8.09888014805918E-9	DOCUMENTATION
// ie. we never have to null out a reference to // an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999596399097777	WITHOUT_CLASSIFICATION	4.0358347167539076E-5	DESIGN	7.207950530104639E-10	DOCUMENTATION	4.609587340836489E-10	IMPLEMENTATION	4.258894463062653E-10	DEFECT	1.3541161040083755E-10	TEST
// ignore this row, the collection is in process of // being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.9999999704841939	WITHOUT_CLASSIFICATION	2.1370196127896458E-8	DESIGN	7.154629777736875E-9	DEFECT	9.083361972085488E-10	TEST	6.736761162812096E-11	DOCUMENTATION	1.5276452293107115E-11	IMPLEMENTATION
// Entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // 	WITHOUT_CLASSIFICATION	0.9999762745505822	WITHOUT_CLASSIFICATION	1.8098900189089196E-5	DEFECT	5.389049612415184E-6	DESIGN	1.3649388102982916E-7	TEST	6.500228997867409E-8	DOCUMENTATION	3.6003445151872115E-8	IMPLEMENTATION
// should be ok performance-wise to generate new delegate instances for each // request since these are locally stack-scoped.  Besides, it makes the code // much easier to read than the old TransactionHelper stuff...	WITHOUT_CLASSIFICATION	0.9985195922405903	WITHOUT_CLASSIFICATION	0.0014803621880934796	DESIGN	4.3524721461605826E-8	DEFECT	1.3696798377500324E-9	TEST	5.045417846995022E-10	DOCUMENTATION	1.7237322615820262E-10	IMPLEMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9904923900086059	WITHOUT_CLASSIFICATION	0.008788862957875326	DESIGN	5.245163797248668E-4	DEFECT	1.7880046785598703E-4	IMPLEMENTATION	1.3191715234897429E-5	TEST	2.2384707032375406E-6	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9904923900086059	WITHOUT_CLASSIFICATION	0.008788862957875326	DESIGN	5.245163797248668E-4	DEFECT	1.7880046785598703E-4	IMPLEMENTATION	1.3191715234897429E-5	TEST	2.2384707032375406E-6	DOCUMENTATION
// wrap up any new collections directly referenced by the object // or its components	WITHOUT_CLASSIFICATION	0.9999999581844109	WITHOUT_CLASSIFICATION	4.1698033690796146E-8	DESIGN	6.552935262587657E-11	IMPLEMENTATION	2.7951244999514473E-11	DEFECT	1.830003021751157E-11	TEST	5.774708651799212E-12	DOCUMENTATION
// remove any snapshot, not really for memory management purposes, but // rather because it might now be stale, and there is no longer any  // EntityEntry to take precedence // This is now handled by removeEntity() //session.getPersistenceContext().removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9998333376344758	WITHOUT_CLASSIFICATION	1.3611606257825213E-4	DEFECT	3.0530572904478E-5	DESIGN	8.043947797575877E-9	TEST	7.295092919478481E-9	DOCUMENTATION	3.9100079507837254E-10	IMPLEMENTATION
// skip this check for composite-ids relating to dom4j entity-mode; // alternatively, we could add a check to make sure the incoming id value is // an instance of Element...	WITHOUT_CLASSIFICATION	0.8694832684301698	WITHOUT_CLASSIFICATION	0.13023732346527273	DESIGN	1.9816291572831993E-4	DEFECT	7.962118414359446E-5	IMPLEMENTATION	1.363718070123618E-6	DOCUMENTATION	2.602866155840317E-7	TEST
// upgrade the lock if necessary: //lock(result, lockMode);	WITHOUT_CLASSIFICATION	0.9989923988994959	WITHOUT_CLASSIFICATION	5.846171425241589E-4	DEFECT	3.7434124370604356E-4	DESIGN	4.705624573920916E-5	IMPLEMENTATION	8.083858968975389E-7	TEST	7.78082637839804E-7	DOCUMENTATION
// now, any collections that are initialized // inside this block do not get updated - they // are ignored until the next flush	WITHOUT_CLASSIFICATION	0.9999115012620204	WITHOUT_CLASSIFICATION	7.505504847956974E-5	IMPLEMENTATION	1.3118485134391834E-5	DESIGN	3.119323574838205E-7	DEFECT	7.786950290302298E-9	TEST	5.485057822936374E-9	DOCUMENTATION
//we must clone embedded composite identifiers, or  //we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.999996014847582	WITHOUT_CLASSIFICATION	3.965362824290835E-6	DESIGN	1.7730011550481052E-8	DEFECT	1.946827941163286E-9	IMPLEMENTATION	7.205472404886156E-11	DOCUMENTATION	4.06994984543717E-11	TEST
// Sub-insertions should occur before containing insertion so // Try to do the callback now	WITHOUT_CLASSIFICATION	0.9999954603777746	WITHOUT_CLASSIFICATION	2.5867954294856127E-6	DEFECT	1.204405368597371E-6	DESIGN	7.094416557029732E-7	IMPLEMENTATION	3.678398124004872E-8	DOCUMENTATION	2.195790301264647E-9	TEST
//the entity is not associated with the session, so //try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.9999960723850401	WITHOUT_CLASSIFICATION	3.895665494130392E-6	DESIGN	1.6033537570849505E-8	DEFECT	1.3135422243873114E-8	TEST	2.3886872585030605E-9	DOCUMENTATION	3.918188101536862E-10	IMPLEMENTATION
//scan the query string for class names appearing in the from clause and replace //with all persistent implementors of the class/interface, returning multiple //query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.6960016126831016	DESIGN	0.29531307831000936	WITHOUT_CLASSIFICATION	0.00830555232558954	DEFECT	3.779296640942101E-4	IMPLEMENTATION	1.2799969588311187E-6	TEST	5.470202464423394E-7	DOCUMENTATION
// save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996348516017	WITHOUT_CLASSIFICATION	1.505795811673244E-7	DESIGN	1.4872100212728844E-7	DEFECT	5.145646109896365E-8	IMPLEMENTATION	8.353598543707727E-9	TEST	6.037755401914214E-9	DOCUMENTATION
// evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999174515708	WITHOUT_CLASSIFICATION	3.420951372626257E-8	DESIGN	3.0473330086744105E-8	DEFECT	1.441059177378145E-8	IMPLEMENTATION	2.1339543841996333E-9	TEST	1.3210391715590734E-9	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9298807086490655	WITHOUT_CLASSIFICATION	0.0699951269646524	DESIGN	1.0560120325030186E-4	DEFECT	1.7462697680879737E-5	TEST	9.452470898042207E-7	IMPLEMENTATION	1.5523826108243176E-7	DOCUMENTATION
//if it is an uninitialized proxy, pointing //with this session, then when it is accessed, //the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.9999965176293684	WITHOUT_CLASSIFICATION	1.1401738457080363E-6	TEST	1.131543520748344E-6	DEFECT	6.371147238839948E-7	IMPLEMENTATION	5.054610802782762E-7	DESIGN	6.80774609998706E-8	DOCUMENTATION
// Generate an explicit join for the root dot node.   The implied joins will be collected and passed up // to the root dot node.	WITHOUT_CLASSIFICATION	0.9999999961708202	WITHOUT_CLASSIFICATION	3.7102711866151633E-9	DESIGN	7.785978961835148E-11	TEST	3.66644035199479E-11	DEFECT	2.292009098798303E-12	IMPLEMENTATION	2.0923285342115255E-12	DOCUMENTATION
// A session is considered to contain an entity only if the entity has // an entry in the session's persistence context and the entry reports // that the entity has not been removed	WITHOUT_CLASSIFICATION	0.9999788710643753	WITHOUT_CLASSIFICATION	2.1115792647843592E-5	DESIGN	6.8450995337800856E-9	DEFECT	6.014997796701601E-9	IMPLEMENTATION	1.5320302875859528E-10	DOCUMENTATION	1.2967633349019455E-10	TEST
// Does the collection referenced by this FromElement // specify an order-by attribute?  If so, attach it to // the query's order-by	WITHOUT_CLASSIFICATION	0.9999251422409121	WITHOUT_CLASSIFICATION	7.381668594496337E-5	DESIGN	6.587564976553641E-7	IMPLEMENTATION	2.645864614099546E-7	DOCUMENTATION	8.45243554371375E-8	TEST	3.3205828242260923E-8	DEFECT
// ... and the token could be an identifer and the error is // a mismatched token error ...	WITHOUT_CLASSIFICATION	0.9986394349443402	WITHOUT_CLASSIFICATION	0.0013038266932318787	DESIGN	5.661288470566201E-5	DEFECT	6.634381733815057E-8	TEST	3.229863663101312E-8	DOCUMENTATION	2.6835268441888457E-8	IMPLEMENTATION
// If a where clause was specified in the update/delete query, use it to limit the // returned ids here...	WITHOUT_CLASSIFICATION	0.9999998385861554	WITHOUT_CLASSIFICATION	7.43903418953663E-8	DEFECT	5.219134690800843E-8	DESIGN	3.4334554515806027E-8	IMPLEMENTATION	4.6339240307920437E-10	DOCUMENTATION	3.420889944710512E-11	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// Default implementation: // If this node has a data type, and that data type is not an association, then this is scalar.	WITHOUT_CLASSIFICATION	0.9999988808705522	WITHOUT_CLASSIFICATION	9.570447900683246E-7	DEFECT	7.203756671505272E-8	IMPLEMENTATION	6.742230966307408E-8	DESIGN	1.877476994125751E-8	TEST	3.850011390224038E-9	DOCUMENTATION
// Resolve the LHS fully, generate implicit joins.  Pass in the property name so that the resolver can // discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.9999634323302089	WITHOUT_CLASSIFICATION	2.372042323523703E-5	DESIGN	1.2749909270892124E-5	DEFECT	8.76580720520792E-8	TEST	8.962321286216459E-9	DOCUMENTATION	7.168915579597719E-10	IMPLEMENTATION
// If the propertyType is null and there isn't a parent, just // stop now... there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.9362898506089747	WITHOUT_CLASSIFICATION	0.033514014763667596	DEFECT	0.03017824799652434	DESIGN	1.5043563401282516E-5	TEST	1.8735010704414643E-6	DOCUMENTATION	9.69566361620329E-7	IMPLEMENTATION
//We do not look for an existing join on the same path, because //it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.9999697963980522	WITHOUT_CLASSIFICATION	2.953942884220116E-5	DESIGN	5.135560924340434E-7	IMPLEMENTATION	1.4510796175289185E-7	DEFECT	3.5269107371356855E-9	DOCUMENTATION	1.9821407784438856E-9	TEST
// our parent is another dot node, meaning we are being further dereferenced. // thus we need to generate a join unless the parent refers to the associated // entity's PK (because 'our' table would know the FK).	WITHOUT_CLASSIFICATION	0.999809759286172	WITHOUT_CLASSIFICATION	1.8752470803201767E-4	DESIGN	2.04093073975657E-6	IMPLEMENTATION	5.321772931023284E-7	TEST	1.4208237198864887E-7	DOCUMENTATION	8.153910325679777E-10	DEFECT
/*public final Currency getCurrency(int col) throws HibernateException {	WITHOUT_CLASSIFICATION	0.9951286067165783	WITHOUT_CLASSIFICATION	0.004851008367348191	DESIGN	1.766783233107907E-5	DEFECT	1.624708468009991E-6	DOCUMENTATION	6.675047412906337E-7	IMPLEMENTATION	4.248705330940558E-7	TEST
// here, we have two possibilities: // 	WITHOUT_CLASSIFICATION	0.9596269894498577	WITHOUT_CLASSIFICATION	0.039722586102763434	DESIGN	3.8053614650099444E-4	IMPLEMENTATION	2.1311130851169244E-4	DEFECT	5.3152076039348926E-5	TEST	3.624916326827014E-6	DOCUMENTATION
// Set the unresolved path in this node and the parent. // Set the text for the parent.	WITHOUT_CLASSIFICATION	0.9992510576675053	WITHOUT_CLASSIFICATION	4.648600545484855E-4	DESIGN	1.737483747425898E-4	IMPLEMENTATION	8.815181257458081E-5	DEFECT	1.9446378640057482E-5	TEST	2.735711989045936E-6	DOCUMENTATION
// Get the first child to be considered.  Sub-classes may do this differently in order to skip nodes that // are not select expressions (e.g. DISTINCT).	WITHOUT_CLASSIFICATION	0.9999993897758895	WITHOUT_CLASSIFICATION	4.0094476897789427E-7	DESIGN	1.9135172768288081E-7	IMPLEMENTATION	1.6274008122713756E-8	DEFECT	1.5863564487202986E-9	DOCUMENTATION	6.724912504684822E-11	TEST
// If this is an entity and the property is the identifier property, then use getIdentifierType(). //      Note that the propertyName.equals( propertyPath ) checks whether we have a component //      key reference, where the component class property name is the same as the //      entity id property name; if the two are not equal, this is the case and //      we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.9999999935884594	WITHOUT_CLASSIFICATION	3.666724626979755E-9	DESIGN	2.0813661621528034E-9	DEFECT	5.927442299402653E-10	TEST	6.638294155099327E-11	DOCUMENTATION	4.3226312605262534E-12	IMPLEMENTATION
// for a subquery, the alias to use depends on a few things (we // already know this is not an overall SELECT): //      1) if this FROM_ELEMENT represents a correlation to the //          outer-most query //              A) if the outer query represents a multi-table //                  persister, we need to use the given alias //                  in anticipation of one of the multi-table //                  executors being used (as this subquery will //                  actually be used in the "id select" phase //                  of that multi-table executor) //              B) otherwise, we need to use the persister's //                  table name as the column qualification //      2) otherwise (not correlated), use the given alias	WITHOUT_CLASSIFICATION	0.9999998761371914	WITHOUT_CLASSIFICATION	1.0573154630342405E-7	DESIGN	1.0883163350760524E-8	DEFECT	7.175091043387805E-9	IMPLEMENTATION	5.44861794978384E-11	DOCUMENTATION	1.8521969598020202E-11	TEST
// Not a collection? // Return the entity property mapping.	WITHOUT_CLASSIFICATION	0.9998729156321902	WITHOUT_CLASSIFICATION	1.0072180406919396E-4	DESIGN	2.4296120376787615E-5	DEFECT	2.016475489380802E-6	IMPLEMENTATION	4.1513787787899663E-8	TEST	8.454086729486104E-9	DOCUMENTATION
// collection of <many-to-any/> mappings... // used to circumvent the component-collection check below...	WITHOUT_CLASSIFICATION	0.9986258655469032	WITHOUT_CLASSIFICATION	0.0011020541452896914	IMPLEMENTATION	2.7038136288930816E-4	DESIGN	1.17006698552488E-6	DEFECT	4.463399718528655E-7	DOCUMENTATION	8.25379603046917E-8	TEST
// Otherwise, the destination node was implied by the FROM clause and the FROM clause processor // will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.9996689452670354	WITHOUT_CLASSIFICATION	3.1582096040624777E-4	DESIGN	7.291461796397699E-6	IMPLEMENTATION	6.6743435104859795E-6	DEFECT	9.280638255964857E-7	DOCUMENTATION	3.3990342578332374E-7	TEST
// If the first identifier in the path referrs to the class alias (not the class name), then this // is a correlated subselect.  If it's a correlated sub-select, use the existing table alias.  Otherwise // generate a new one.	WITHOUT_CLASSIFICATION	0.9999797049017979	WITHOUT_CLASSIFICATION	2.0284230611439888E-5	DESIGN	7.610824677856294E-9	IMPLEMENTATION	2.3123173921731196E-9	DEFECT	9.39478287186879E-10	TEST	4.970287550563441E-12	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999999513125882	WITHOUT_CLASSIFICATION	4.6850718782007555E-8	DESIGN	1.8163630513202738E-9	DEFECT	1.183735303568003E-11	DOCUMENTATION	6.09777629476962E-12	TEST	2.394867894511954E-12	IMPLEMENTATION
// An ident node can represent an index expression if the ident // represents a naked property ref //      *Note: this makes the assumption (which is currently the case //      in the hql-sql grammar) that the ident is first resolved //      itself (addrExpr -> resolve()).  The other option, if that //      changes, is to call resolve from here; but it is //      currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.999999147161255	WITHOUT_CLASSIFICATION	8.492370685311425E-7	DESIGN	2.604907574599573E-9	TEST	7.741181895791444E-10	DEFECT	1.7690939347667704E-10	IMPLEMENTATION	4.5741141039667325E-11	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999497647748473	WITHOUT_CLASSIFICATION	4.941767242031781E-5	DESIGN	6.090349134093572E-7	IMPLEMENTATION	2.074025102114363E-7	DEFECT	9.345867616375672E-10	TEST	1.8072204012521037E-10	DOCUMENTATION
// If this is an implied join in a FROM clause, then use ANSI-style joining, and set the // flag on the FromElement that indicates that it was implied in the FROM clause itself.	WITHOUT_CLASSIFICATION	0.9999993996798466	WITHOUT_CLASSIFICATION	5.621874325120982E-7	DESIGN	2.8718094812490014E-8	TEST	8.095211056639879E-9	DEFECT	9.108321728564067E-10	IMPLEMENTATION	4.085828595065008E-10	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// For an explicit many-to-many relationship, add a second join from the intermediate  // (many-to-many) table to the destination table.  Also, make sure that the from element's  // idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.9999999893188585	WITHOUT_CLASSIFICATION	1.0492238876299468E-8	DESIGN	1.024154281718475E-10	DEFECT	4.9318742928380326E-11	TEST	3.488381511934111E-11	DOCUMENTATION	2.2847182043179524E-12	IMPLEMENTATION
// Reset the node type, because the rest of the system is expecting FROM_FRAGMENT, all we wanted was // for the factory to create the right sub-class.  This might get reset again later on anyway to make the // SQL generation simpler.	WITHOUT_CLASSIFICATION	0.9982192579616141	WITHOUT_CLASSIFICATION	0.0017144258103631393	DESIGN	3.5266564657621297E-5	DEFECT	1.636364131425735E-5	TEST	1.4374097661361908E-5	IMPLEMENTATION	3.119243895552826E-7	DOCUMENTATION
//explicit = true;	WITHOUT_CLASSIFICATION	0.9999734163227783	WITHOUT_CLASSIFICATION	2.5193678275271687E-5	DESIGN	1.1386542600671048E-6	DEFECT	1.0231490427029536E-7	TEST	7.535749475147022E-8	IMPLEMENTATION	7.367228741963466E-8	DOCUMENTATION
//sqlResultTypeList.add( type ); // Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999949526084521	WITHOUT_CLASSIFICATION	4.006489393983904E-6	DEFECT	7.08905391666876E-7	DESIGN	2.2611006035963493E-7	IMPLEMENTATION	1.0354597552532422E-7	TEST	2.3407264415816338E-9	DOCUMENTATION
// If the expression list has exactly one expression, and the type of the expression is a collection // then this might be a collection function, such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.9998326859736903	WITHOUT_CLASSIFICATION	1.5547185251198756E-4	DEFECT	1.1836921243123288E-5	DESIGN	2.255206276268287E-9	DOCUMENTATION	2.1674692769810317E-9	TEST	8.298789353574373E-10	IMPLEMENTATION
// Need to parse off the column qualifiers; this is assuming (which is true as of now) // that this is only used from update and delete HQL statement parsing	WITHOUT_CLASSIFICATION	0.9999996786916877	WITHOUT_CLASSIFICATION	2.593596316266194E-7	IMPLEMENTATION	5.260527942153015E-8	DESIGN	7.1876445871805E-9	DEFECT	1.9789039804284806E-9	TEST	1.7685270783800115E-10	DOCUMENTATION
// for regression testing against output from the old parser... // found it easiest to simply reorder the FromElements here into ascending order // in terms of injecting them into the resulting sql ast in orders relative to those // expected by the old parser; this is definitely another of those "only needed // for regression purposes".  The SyntheticAndFactory, then, simply injects them as it // encounters them.	WITHOUT_CLASSIFICATION	0.9999987100496397	WITHOUT_CLASSIFICATION	1.2000066296415463E-6	TEST	8.937738728139079E-8	DEFECT	4.897718314462342E-10	DESIGN	7.647201635601164E-11	DOCUMENTATION	9.941503793666619E-14	IMPLEMENTATION
// The uber-rule here is that we need to include  subclass joins if // the FromElement is in any way dereferenced by a property from // the subclass table; otherwise we end up with column references // qualified by a non-existent table reference in the resulting SQL...	WITHOUT_CLASSIFICATION	0.9992256084314945	WITHOUT_CLASSIFICATION	7.741671701049647E-4	DESIGN	1.0629011186919137E-7	DEFECT	9.430801122883139E-8	IMPLEMENTATION	1.7205586174838194E-8	TEST	6.594691182515037E-9	DOCUMENTATION
// classic translator does not support collection of ordinal // param metadata	WITHOUT_CLASSIFICATION	0.9997679611227519	WITHOUT_CLASSIFICATION	1.5418789915386597E-4	DESIGN	7.706733931280607E-5	DEFECT	6.885452221932782E-7	IMPLEMENTATION	7.781417937403551E-8	TEST	1.7279379709445737E-8	DOCUMENTATION
// The following variables are stacks that keep information about each subexpression // in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.9999200181361729	WITHOUT_CLASSIFICATION	7.825445062495587E-5	DESIGN	1.693548797621223E-6	DEFECT	1.9236562924879697E-8	DOCUMENTATION	8.66877635036961E-9	IMPLEMENTATION	5.959065176851888E-9	TEST
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999996047875657	WITHOUT_CLASSIFICATION	3.9304202024028186E-7	DEFECT	1.5625497512781064E-9	IMPLEMENTATION	4.943840966679299E-10	DESIGN	7.42825935662463E-11	TEST	3.91975083644407E-11	DOCUMENTATION
// should not be able to reach last without maxPosition being set // unless there are no results	WITHOUT_CLASSIFICATION	0.9999999994296709	WITHOUT_CLASSIFICATION	4.3308610317738933E-10	DESIGN	8.54312683079063E-11	DEFECT	5.014054554518688E-11	TEST	1.4975134560455595E-12	IMPLEMENTATION	1.7353332379724972E-13	DOCUMENTATION
// we found it in the temp PC.  Should indicate we are in the midst of processing a result set // containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.9999999998609443	WITHOUT_CLASSIFICATION	1.3517044965993447E-10	DESIGN	3.4584045959363005E-12	TEST	2.423583546362433E-13	DEFECT	1.5680063357469724E-13	DOCUMENTATION	2.759484843490495E-14	IMPLEMENTATION
//do not use proxiesByKey, since not all //proxies that point to this session's //instances are in that collection!	WITHOUT_CLASSIFICATION	0.9999256598872575	WITHOUT_CLASSIFICATION	7.023141673113492E-5	DESIGN	3.161615833265689E-6	IMPLEMENTATION	8.941136345911518E-7	DEFECT	5.262646803405597E-8	DOCUMENTATION	3.4007558766801426E-10	TEST
// if there is no TM configured, we will not be able to access // the javax.transaction.Transaction object in order to // register a synch anyway.	WITHOUT_CLASSIFICATION	0.8369117961675204	WITHOUT_CLASSIFICATION	0.16291782521661172	DESIGN	1.6593395810468595E-4	IMPLEMENTATION	3.2083301875526345E-6	DOCUMENTATION	1.0249272884388209E-6	TEST	2.1140028730849576E-7	DEFECT
// Since the result set cursor is always left at the first // physical row after the "last processed", we need to jump // back one position to get the key value we are interested // in skipping	WITHOUT_CLASSIFICATION	0.9999999776647133	WITHOUT_CLASSIFICATION	1.8948294311529854E-8	DESIGN	1.6707545879556473E-9	DEFECT	1.5030142471227317E-9	DOCUMENTATION	1.8083279382901076E-10	TEST	3.23908237623594E-11	IMPLEMENTATION
//true if this is a query and we are loading multiple instances of the same collection role //otherwise this is a CollectionInitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.9994590170468979	WITHOUT_CLASSIFICATION	4.532463509786337E-4	DEFECT	8.389883107690435E-5	DESIGN	3.7843461813616776E-6	IMPLEMENTATION	3.2152838302586954E-8	DOCUMENTATION	2.127202676628048E-8	TEST
// we don't need to worry about existing version being uninitialized // because this block isn't called by a re-entrant load (re-entrant // loads _always_ have lock mode NONE)	WITHOUT_CLASSIFICATION	0.997263322755568	WITHOUT_CLASSIFICATION	0.002724222416513348	IMPLEMENTATION	1.1397029560778665E-5	DESIGN	9.323128403575285E-7	DEFECT	7.763227419112703E-8	TEST	4.785324334610914E-8	DOCUMENTATION
// add temp entry so that the next step is circular-reference // safe - only needed because some types don't take proper // advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.999998714161443	WITHOUT_CLASSIFICATION	1.115501720450038E-6	DEFECT	8.42015745618258E-8	DOCUMENTATION	6.923695265503308E-8	TEST	1.6589787625751132E-8	DESIGN	3.085216604590778E-10	IMPLEMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999999559046492	WITHOUT_CLASSIFICATION	4.191427727548284E-8	DESIGN	9.671188819485063E-10	DOCUMENTATION	8.39770747253574E-10	DEFECT	3.734220244019206E-10	TEST	7.617698544677456E-13	IMPLEMENTATION
// log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.9999413139028726	WITHOUT_CLASSIFICATION	4.5067850340723854E-5	IMPLEMENTATION	1.3406827496683941E-5	DEFECT	9.861047588549789E-8	DESIGN	7.368707385539985E-8	TEST	3.9121740319598185E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// this has been shown to happen occasionally in rare cases // when using a transaction manager + transaction-timeout // where the timeout calls back through Hibernate's // registered transaction synchronization on a separate // "reaping" thread.  In cases where that reaping thread // executes through this block at the same time the main // application thread does we can get into situations where // these CMEs occur.  And though it is not "allowed" per-se, // the end result without handling it specifically is infinite // looping.  So here, we simply break the loop	WITHOUT_CLASSIFICATION	0.9999999999478201	WITHOUT_CLASSIFICATION	4.0297641301495114E-11	DEFECT	1.1485898482047725E-11	DESIGN	2.379054173216717E-13	DOCUMENTATION	1.5178691749766392E-13	IMPLEMENTATION	6.542649765743593E-15	TEST
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9988824402472888	WITHOUT_CLASSIFICATION	0.0011153549746327725	DESIGN	1.9615299386152595E-6	DEFECT	1.7823158790633284E-7	DOCUMENTATION	3.6252418618596586E-8	IMPLEMENTATION	2.876413331996065E-8	TEST
// can't cache this stuff either (per-invocation) // we are given a map of user-alias -> lock mode // create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.9999999387944345	WITHOUT_CLASSIFICATION	4.365149530805751E-8	DEFECT	1.696025083613605E-8	DESIGN	4.300211647777373E-10	DOCUMENTATION	1.6369425555751869E-10	TEST	1.0407162234854093E-13	IMPLEMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns //getCollectionTable().createUniqueKey( getIdentifier().getConstraintColumns() );	WITHOUT_CLASSIFICATION	0.9999565302049007	WITHOUT_CLASSIFICATION	3.886573462117343E-5	DESIGN	4.528453910547079E-6	DEFECT	3.6990464370325926E-8	TEST	3.4273125299911313E-8	IMPLEMENTATION	4.342977905068252E-9	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999994982383426	WITHOUT_CLASSIFICATION	4.740435641720322E-7	DESIGN	1.1940390909878525E-8	DEFECT	1.002108490439642E-8	IMPLEMENTATION	4.122487020686315E-9	TEST	1.6341302839786922E-9	DOCUMENTATION
//isSet = collection.isSet(); //isSorted = collection.isSorted();	WITHOUT_CLASSIFICATION	0.9999942431248781	WITHOUT_CLASSIFICATION	5.597824323386492E-6	IMPLEMENTATION	8.539450919506794E-8	DEFECT	5.3957213379018805E-8	TEST	1.2710393028838374E-8	DESIGN	6.988682936002764E-9	DOCUMENTATION
//lists, arrays //sets, maps, bags	WITHOUT_CLASSIFICATION	0.9999995153697085	WITHOUT_CLASSIFICATION	2.836342392980598E-7	DEFECT	1.2252322911981088E-7	IMPLEMENTATION	4.965459877675437E-8	DESIGN	2.6247482903172903E-8	TEST	2.570741397111265E-9	DOCUMENTATION
// we finish all the "removes" first to take care of possible unique // constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.9999997136944834	WITHOUT_CLASSIFICATION	2.736299399810932E-7	DESIGN	8.796922784409051E-9	DEFECT	3.3941075895836206E-9	IMPLEMENTATION	4.59270464910492E-10	TEST	2.5275789853635594E-11	DOCUMENTATION
//use a combination of foreign key columns and pk columns, since //the ordering of removal and addition is not guaranteed when //a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.9998788913195191	WITHOUT_CLASSIFICATION	1.0299525680089905E-4	DESIGN	1.7895119877914372E-5	DEFECT	1.2396427935195592E-7	TEST	8.903237328015747E-8	DOCUMENTATION	5.30714955097053E-9	IMPLEMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999994982383426	WITHOUT_CLASSIFICATION	4.740435641720322E-7	DESIGN	1.1940390909878525E-8	DEFECT	1.002108490439642E-8	IMPLEMENTATION	4.122487020686315E-9	TEST	1.6341302839786922E-9	DOCUMENTATION
//information about properties of this class, //including inherited properties //(only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.999966608754087	WITHOUT_CLASSIFICATION	2.9384548854673704E-5	DEFECT	2.3613663155548166E-6	TEST	1.1159702973289225E-6	DESIGN	4.6822768405214046E-7	DOCUMENTATION	6.113276123642932E-8	IMPLEMENTATION
// all this only really needs to consider properties // of this class, not its subclasses, but since we // are reusing code used for sequential selects, we // use the subclass closure	WITHOUT_CLASSIFICATION	0.999999999668462	WITHOUT_CLASSIFICATION	3.175856271538141E-10	DESIGN	1.111917655013796E-11	DEFECT	1.31893058398254E-12	DOCUMENTATION	1.0449393755824289E-12	TEST	4.692381875606146E-13	IMPLEMENTATION
// Here we render the select column list based on the properties defined as being generated. // For partial component generation, we currently just re-select the whole component // rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.9996742319325432	WITHOUT_CLASSIFICATION	3.2575420430996054E-4	DESIGN	1.339563259930656E-8	DEFECT	3.580344371853843E-10	TEST	7.839808060001605E-11	IMPLEMENTATION	3.1081621824730565E-11	DOCUMENTATION
// this is the root (versioned) table, and we are using version-based // optimistic locking;  if we are not updating the version, also don't // check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.999956833428702	WITHOUT_CLASSIFICATION	4.315183226611074E-5	DEFECT	1.1743657674827285E-8	DESIGN	2.0240877535563806E-9	IMPLEMENTATION	7.595225511348441E-10	TEST	2.1176394701753647E-10	DOCUMENTATION
//optimistic-lock="all", include all updatable properties //optimistic-lock="dirty", include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.9999941246491516	WITHOUT_CLASSIFICATION	3.6095652921027354E-6	DESIGN	1.974536976580415E-6	DEFECT	1.819267298002973E-7	IMPLEMENTATION	7.290424640605774E-8	DOCUMENTATION	3.6417603558649594E-8	TEST
// this property belongs to the table, and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999642903783923	WITHOUT_CLASSIFICATION	2.1205088958086216E-5	DESIGN	1.4489469768824924E-5	DEFECT	8.842038396441755E-9	TEST	5.887625098281424E-9	DOCUMENTATION	3.332172912224891E-10	IMPLEMENTATION
// check to see if the connection is in auto-commit  // mode (no connection means aggressive connection // release outside a JTA transaction context, so MUST // be autocommit mode)	WITHOUT_CLASSIFICATION	0.9999999485097615	WITHOUT_CLASSIFICATION	5.1292362740257016E-8	DESIGN	7.808473501485195E-11	DOCUMENTATION	7.45411288317904E-11	IMPLEMENTATION	3.2997222826650714E-11	DEFECT	1.2252672141661872E-11	TEST
// need to treat this as if it where optimistic-lock="all" (dirty does *not* make sense); // first we need to locate the "loaded" state // // Note, it potentially could be a proxy, so perform the location the safe way...	WITHOUT_CLASSIFICATION	0.5566512777077689	WITHOUT_CLASSIFICATION	0.44003057505196735	DESIGN	0.0022037664950682293	DEFECT	7.917627573559569E-4	IMPLEMENTATION	3.1372625980505395E-4	TEST	8.891728034469753E-6	DOCUMENTATION
// we *always* assume an instance with a null // identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.9999999291437488	WITHOUT_CLASSIFICATION	4.765017880721656E-8	DEFECT	2.2778313504053287E-8	DESIGN	3.855289411443954E-10	DOCUMENTATION	4.120365486637232E-11	TEST	1.026336989461888E-12	IMPLEMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999430229305483	WITHOUT_CLASSIFICATION	4.682301263161815E-5	DEFECT	9.969497655592326E-6	IMPLEMENTATION	9.0210947652973E-8	TEST	8.614157694677783E-8	DESIGN	8.206639900839178E-9	DOCUMENTATION
//allow any identifier quoted with backtick //only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.9999954482638702	WITHOUT_CLASSIFICATION	3.4412768106917798E-6	IMPLEMENTATION	6.364880518173739E-7	DESIGN	4.34675612464342E-7	DEFECT	3.4232472482117366E-8	TEST	5.063182352170841E-9	DOCUMENTATION
//following doesn't handle (null, not null) but unnecessary //since this would mean all rows	WITHOUT_CLASSIFICATION	0.9856868775852332	WITHOUT_CLASSIFICATION	0.007628076578316295	IMPLEMENTATION	0.0049205525651145185	DESIGN	9.826776715866513E-4	DEFECT	7.77640550016674E-4	TEST	4.175049732666226E-6	DOCUMENTATION
// IMPL NOTE : due to the delayed population of setters (setters cached // 	WITHOUT_CLASSIFICATION	0.9999034958130734	WITHOUT_CLASSIFICATION	8.43233842793741E-5	DESIGN	1.2160476659711485E-5	DEFECT	9.778641732736708E-9	IMPLEMENTATION	7.056622233476068E-9	DOCUMENTATION	3.490723725175899E-9	TEST
// we need to dirty check collections, since they can cause an owner // version number increment	WITHOUT_CLASSIFICATION	0.9999166403749412	WITHOUT_CLASSIFICATION	8.137165984138652E-5	IMPLEMENTATION	1.3284319167734984E-6	DESIGN	5.595440014110159E-7	DOCUMENTATION	9.675380234199398E-8	DEFECT	3.23549696961274E-9	TEST
//return the id, so we can use it to reset the proxy id //return result;	WITHOUT_CLASSIFICATION	0.9999862032878175	WITHOUT_CLASSIFICATION	1.1107559213989284E-5	DESIGN	2.5645957230781572E-6	DEFECT	1.1038532226919829E-7	IMPLEMENTATION	1.2158749407212298E-8	DOCUMENTATION	2.0131737457286527E-9	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999990045980578	WITHOUT_CLASSIFICATION	9.670555194852945E-7	DEFECT	1.7667859101307372E-8	DESIGN	5.168148526664271E-9	TEST	3.857655730456907E-9	DOCUMENTATION	1.6527594232628117E-9	IMPLEMENTATION
// We now have the value of the property-ref we reference.  However, // we need to dig a little deeper, as that property might also be // an entity type, in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.9999997564373371	WITHOUT_CLASSIFICATION	2.404896430991384E-7	DESIGN	2.921286797604737E-9	DEFECT	1.4389195478098403E-10	DOCUMENTATION	5.97080420320323E-12	TEST	1.8702831574951193E-12	IMPLEMENTATION
// Retrieve the value of the designated column in the current row of this // ResultSet object as a java.io.Reader object	WITHOUT_CLASSIFICATION	0.999999406043484	WITHOUT_CLASSIFICATION	2.4893711178975876E-7	DEFECT	1.8350730449810675E-7	DESIGN	8.623365837148547E-8	IMPLEMENTATION	7.37174542693826E-8	DOCUMENTATION	1.5609869623284906E-9	TEST
//not absolutely necessary, but helps for some //equals()/hashCode() implementations	WITHOUT_CLASSIFICATION	0.9989934693306336	WITHOUT_CLASSIFICATION	6.438722003840427E-4	IMPLEMENTATION	3.232630240432554E-4	DESIGN	2.0463381702748663E-5	TEST	1.8347988883221463E-5	DEFECT	5.840743530649267E-7	DOCUMENTATION
//this should be a call to resolve(), not resolveIdentifier(),  //'cos it might be a property-ref, and we did not cache the //referenced value	WITHOUT_CLASSIFICATION	0.9823567655611034	WITHOUT_CLASSIFICATION	0.01670418713665489	DESIGN	9.390006409077435E-4	DEFECT	3.3561848867972274E-8	DOCUMENTATION	7.89177038312363E-9	TEST	5.207714814566303E-9	IMPLEMENTATION
// If we have <tt>not-found="ignore"</tt> association mapped to a // formula, we always need to dirty check it, so we can update the // second-level cache	WITHOUT_CLASSIFICATION	0.999997177062155	WITHOUT_CLASSIFICATION	2.0207473688579773E-6	IMPLEMENTATION	7.90258870107626E-7	DESIGN	8.459804397354478E-9	DOCUMENTATION	3.033553468802111E-9	DEFECT	4.3824825438284824E-10	TEST
// can't just return null here, since that would // cause an owning component to become null	WITHOUT_CLASSIFICATION	0.9999999644182039	WITHOUT_CLASSIFICATION	2.4278327713459583E-8	DESIGN	9.68314455789156E-9	IMPLEMENTATION	1.4776728058535089E-9	DEFECT	7.602146215604133E-11	TEST	6.662968455294295E-11	DOCUMENTATION
//for arrays, replaceElements() may return a different reference, since //the array length might not match	WITHOUT_CLASSIFICATION	0.9999981166179363	WITHOUT_CLASSIFICATION	1.772753617411753E-6	DEFECT	1.0656458549266854E-7	DESIGN	2.4092577082228975E-9	DOCUMENTATION	1.5808844355169521E-9	IMPLEMENTATION	7.371868786929248E-11	TEST
// actual cache of the entries.  soft references are used for both the keys and the // values here since the values pertaining to the MRU entries are kept in a // seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.9999999998698773	WITHOUT_CLASSIFICATION	9.318335996772571E-11	IMPLEMENTATION	3.6784335935129236E-11	DESIGN	6.739688494771437E-14	DOCUMENTATION	6.455692630513775E-14	TEST	2.306349444044037E-14	DEFECT
// as soon as we encounter our first letter, return the substring // from that position	WITHOUT_CLASSIFICATION	0.9999999992426185	WITHOUT_CLASSIFICATION	4.5019919695809563E-10	DEFECT	3.0424358838420177E-10	DESIGN	9.824429251127305E-13	TEST	9.806139072466085E-13	IMPLEMENTATION	9.75708510679259E-13	DOCUMENTATION
// Note : expected in the syntax: //      type=listenerClass //          ({sep}type=listenerClass)* // where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.9999992071800116	WITHOUT_CLASSIFICATION	7.778145518190872E-7	DEFECT	1.31292339748685E-8	TEST	1.4056902482421411E-9	DESIGN	2.6014939852247065E-10	IMPLEMENTATION	2.1036297635137228E-10	DOCUMENTATION
// isTransactionCallbackRegistered denotes whether any Hibernate // Transaction has registered as a callback against this // JDBCContext; only one such callback is allowed.  Directly // serializing this value causes problems with JDBCTransaction, // or really any Transaction impl where the callback is local // to the Transaction instance itself, since that Transaction // is not serialized along with the JDBCContext.  Thus we // handle that fact here explicitly...	WITHOUT_CLASSIFICATION	0.9987650287538923	WITHOUT_CLASSIFICATION	0.0011922027481598432	DEFECT	4.2674740359666076E-5	DESIGN	8.954347978477125E-8	TEST	3.3236078609014757E-9	DOCUMENTATION	8.905004635987707E-10	IMPLEMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999922430113712	WITHOUT_CLASSIFICATION	7.70245720091893E-6	DESIGN	4.268320909980352E-8	TEST	9.712425808283039E-9	DEFECT	1.6299315000178003E-9	IMPLEMENTATION	5.05861388441924E-10	DOCUMENTATION
// We call getKeyFromResultSet() here so that we can know the // key value upon which to perform the breaking logic.  However, // it is also then called from getRowFromResultSet() which is certainly // not the most efficient.  But the call here is needed, and there // currently is no other way without refactoring of the doQuery()/getRowFromResultSet() // methods	WITHOUT_CLASSIFICATION	0.8330439647941081	WITHOUT_CLASSIFICATION	0.1325597504630376	IMPLEMENTATION	0.034190967170445376	DESIGN	1.726306960774507E-4	DEFECT	3.064470609864619E-5	TEST	2.042170232678457E-6	DOCUMENTATION
// This check is needed since processing leaves the cursor // after the last physical row for the current logical row; // thus if we are after the last physical row, this might be // caused by either: //      1) scrolling to the last logical row //      2) scrolling past the last logical row // In the latter scenario, the previous logical row // really is the last logical row. // // In all other cases, we should process back two // logical records (the current logic row, plus the // previous logical row).	WITHOUT_CLASSIFICATION	0.9840368890233605	WITHOUT_CLASSIFICATION	0.01596246871508348	DEFECT	2.617420749643399E-7	DESIGN	2.0639595817282106E-7	IMPLEMENTATION	1.5777731222943467E-7	DOCUMENTATION	1.6346210626277765E-8	TEST
// and perform the load	WITHOUT_CLASSIFICATION	0.9999975068515484	WITHOUT_CLASSIFICATION	2.3884938219574416E-6	DESIGN	6.280328289785474E-8	IMPLEMENTATION	1.885344019502085E-8	DOCUMENTATION	1.7405159654579273E-8	DEFECT	5.592746797849584E-9	TEST
//important: reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.9349514662220545	WITHOUT_CLASSIFICATION	0.06394241305400519	DESIGN	8.897938252498097E-4	DEFECT	1.6152994586975396E-4	IMPLEMENTATION	5.22631130146505E-5	DOCUMENTATION	2.5338398061690267E-6	TEST
//this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.9882256271155311	WITHOUT_CLASSIFICATION	0.010630537248841932	DEFECT	0.0011381496585876297	DESIGN	5.164369023586347E-6	IMPLEMENTATION	4.1365690645371723E-7	DOCUMENTATION	1.0795110934038908E-7	TEST
// we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.9999567969699281	WITHOUT_CLASSIFICATION	4.284464208701073E-5	DESIGN	3.549386122336768E-7	DEFECT	1.6386655259416369E-9	DOCUMENTATION	1.307433956005055E-9	IMPLEMENTATION	5.032729901000649E-10	TEST
// we did not find a collection element in the result set, so we // ensure that a collection is created with the owner's identifier, // since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.9999999983937161	WITHOUT_CLASSIFICATION	1.5512409228823171E-9	DESIGN	4.476738819078005E-11	DEFECT	5.200361540355103E-12	TEST	4.9667396669730306E-12	IMPLEMENTATION	1.0847525855216738E-13	DOCUMENTATION
// this is a collection initializer, so we must create a collection // for each of the passed-in keys, to account for the possibility // that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.9999998237210391	WITHOUT_CLASSIFICATION	1.5202206441301552E-7	DESIGN	2.1447027248050193E-8	DEFECT	2.6207347904901094E-9	TEST	1.735578603435154E-10	IMPLEMENTATION	1.5576524964104904E-11	DOCUMENTATION
// grab its state from the ResultSet and keep it in the Session // (but don't yet initialize the object itself) // note that we acquire LockMode.READ even if it was not requested	WITHOUT_CLASSIFICATION	0.9999808962928983	WITHOUT_CLASSIFICATION	1.9016055961319795E-5	DESIGN	6.428118688492902E-8	TEST	2.048898606339332E-8	DEFECT	1.9742627563578196E-9	IMPLEMENTATION	9.067045070895285E-10	DOCUMENTATION
// a many-to-many; // decrement currentDepth here to allow join across the association table // without exceeding MAX_FETCH_DEPTH (i.e. the "currentDepth - 1" bit)	WITHOUT_CLASSIFICATION	0.9881112890766826	WITHOUT_CLASSIFICATION	0.011848227154634478	DESIGN	2.8462595211048234E-5	DEFECT	1.0541358431758103E-5	IMPLEMENTATION	8.660372779609149E-7	TEST	6.137777622288334E-7	DOCUMENTATION
// if not a composite key, use "foo in (?, ?, ?)" for batching // if no batch, and not a composite key, use "foo = ?"	WITHOUT_CLASSIFICATION	0.9999999931114174	WITHOUT_CLASSIFICATION	6.597600818096012E-9	DESIGN	2.51971009908742E-10	DEFECT	1.8381670612545677E-11	TEST	1.6846893844272715E-11	DOCUMENTATION	3.782168246152679E-12	IMPLEMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999999970669846	WITHOUT_CLASSIFICATION	1.9220777800245E-9	DEFECT	5.477833328618979E-10	DOCUMENTATION	4.500368574391632E-10	DESIGN	9.754747102255506E-12	TEST	3.3628118065733573E-12	IMPLEMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.99997304373516	WITHOUT_CLASSIFICATION	1.9209558586338824E-5	IMPLEMENTATION	7.596348355426105E-6	DESIGN	8.672508696262479E-8	DOCUMENTATION	5.977261750561082E-8	DEFECT	3.860193765444785E-9	TEST
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.99997304373516	WITHOUT_CLASSIFICATION	1.9209558586338824E-5	IMPLEMENTATION	7.596348355426105E-6	DESIGN	8.672508696262479E-8	DOCUMENTATION	5.977261750561082E-8	DEFECT	3.860193765444785E-9	TEST
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.999993646492627	WITHOUT_CLASSIFICATION	4.048164845284757E-6	DESIGN	2.1984647592928383E-6	DEFECT	9.759914354622321E-8	TEST	8.775751952761418E-9	DOCUMENTATION	5.028728186822988E-10	IMPLEMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999975263617458	WITHOUT_CLASSIFICATION	2.4622861411154867E-6	DESIGN	9.387733870049926E-9	DEFECT	9.464155517158234E-10	IMPLEMENTATION	9.262680703155682E-10	TEST	9.169563617185761E-11	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999971829127992	WITHOUT_CLASSIFICATION	2.804365716400512E-6	DESIGN	8.69752645151498E-9	DEFECT	2.943382225955729E-9	IMPLEMENTATION	8.884988155510321E-10	TEST	1.9207700220114676E-10	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.41247235596325493	DOCUMENTATION	0.37795729203980877	DESIGN	0.1053852951692493	IMPLEMENTATION	0.039437941980969234	WITHOUT_CLASSIFICATION	0.03307494829562861	DEFECT	0.031672166551089107	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999994365319849	WITHOUT_CLASSIFICATION	3.751646589186226E-7	DESIGN	1.0889089547337328E-7	DEFECT	6.070382664797166E-8	IMPLEMENTATION	1.417363308791069E-8	DOCUMENTATION	4.535001194219872E-9	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999994365319849	WITHOUT_CLASSIFICATION	3.751646589186226E-7	DESIGN	1.0889089547337328E-7	DEFECT	6.070382664797166E-8	IMPLEMENTATION	1.417363308791069E-8	DOCUMENTATION	4.535001194219872E-9	TEST
//        }	WITHOUT_CLASSIFICATION	0.9999953786936475	WITHOUT_CLASSIFICATION	1.6937896134529791E-6	DESIGN	1.5023070353542982E-6	DEFECT	1.0484611297731777E-6	IMPLEMENTATION	2.0636692724933308E-7	DOCUMENTATION	1.7038164657372293E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9999968595497997	WITHOUT_CLASSIFICATION	3.1214459814837915E-6	DESIGN	1.0154546057366946E-8	DEFECT	3.4177628748066565E-9	DOCUMENTATION	2.893286857615115E-9	IMPLEMENTATION	2.5386230698279145E-9	TEST
//	WITHOUT_CLASSIFICATION	0.9962350809187541	WITHOUT_CLASSIFICATION	0.003678126436392957	DESIGN	4.1829101144865584E-5	DEFECT	2.0835985496786867E-5	IMPLEMENTATION	1.2478258111294663E-5	DOCUMENTATION	1.16493000998391E-5	TEST
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999765946052409	WITHOUT_CLASSIFICATION	1.3955746402184278E-5	DESIGN	5.903575021123855E-6	TEST	2.8476662467893034E-6	DEFECT	6.227956342283277E-7	IMPLEMENTATION	7.561145481232127E-8	DOCUMENTATION
// at this point we have (drivingSqlAlias) the SQL alias of the driving table // corresponding to the given user alias.  However, the driving table is not // (necessarily) the table against which we want to apply locks.  Mainly, // the exception case here is joined-subclass hierarchies where we instead // want to apply the lock against the root table (for all other strategies, // it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.9999998915504172	WITHOUT_CLASSIFICATION	9.450082330193121E-8	DESIGN	1.2506339750915998E-8	DEFECT	1.3056171465579257E-9	IMPLEMENTATION	8.919924581680787E-11	DOCUMENTATION	4.7603035691784636E-11	TEST
// the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.9999914823393831	WITHOUT_CLASSIFICATION	5.803534604648003E-6	IMPLEMENTATION	2.21475817334737E-6	DEFECT	2.748152713307608E-7	TEST	1.5100511313068353E-7	DESIGN	7.354745441166096E-8	DOCUMENTATION
// we have a mapped identifier property and the root of // the incoming property path matched that identifier // property	WITHOUT_CLASSIFICATION	0.9999791714132478	WITHOUT_CLASSIFICATION	1.8925229963453925E-5	DESIGN	1.867667829771678E-6	DEFECT	1.7890921750756674E-8	DOCUMENTATION	1.5472790711908853E-8	TEST	2.3252465916352446E-9	IMPLEMENTATION
// we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9999994107253306	WITHOUT_CLASSIFICATION	5.874300171763393E-7	DESIGN	6.981383896150863E-10	IMPLEMENTATION	4.882704985699775E-10	TEST	3.350556865853485E-10	DEFECT	3.231877380004346E-10	DOCUMENTATION
// both many-to-one and one-to-one are represented as a // Property.  EntityPersister is relying on this value to // determine "lazy fetch groups" in terms of field-level // interception.  So we need to make sure that we return // true here for the case of many-to-one and one-to-one // with lazy="no-proxy" // // * impl note - lazy="no-proxy" currently forces both // lazy and unwrap to be set to true.  The other case we // are extremely interested in here is that of lazy="proxy" // where lazy is set to true, but unwrap is set to false. // thus we use both here under the assumption that this // return is really only ever used during persister // construction to determine the lazy property/field fetch // groupings.  If that assertion changes then this check // needs to change as well.  Partially, this is an issue with // the overloading of the term "lazy" here...	WITHOUT_CLASSIFICATION	0.9999946590354051	WITHOUT_CLASSIFICATION	4.308338048271821E-6	DEFECT	8.301678428781464E-7	DESIGN	2.0206855072105262E-7	TEST	2.7442810679662894E-10	DOCUMENTATION	1.1572476836689652E-10	IMPLEMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995893091466	WITHOUT_CLASSIFICATION	3.573480123226764E-7	DESIGN	1.841502438579934E-8	IMPLEMENTATION	1.804752853421356E-8	TEST	1.631267765029558E-8	DEFECT	5.676104779061917E-10	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995893091466	WITHOUT_CLASSIFICATION	3.573480123226764E-7	DESIGN	1.841502438579934E-8	IMPLEMENTATION	1.804752853421356E-8	TEST	1.631267765029558E-8	DEFECT	5.676104779061917E-10	DOCUMENTATION
/*rootTableName = persistentClass.getRootTable().getQualifiedName( 	WITHOUT_CLASSIFICATION	0.9984762352301769	WITHOUT_CLASSIFICATION	0.0010322283985897318	DESIGN	4.805059922937583E-4	IMPLEMENTATION	6.521358140889983E-6	TEST	3.7952857571179906E-6	DEFECT	7.137350415172688E-7	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999875538083108	WITHOUT_CLASSIFICATION	8.928704655848764E-6	DESIGN	1.7754392832184537E-6	IMPLEMENTATION	1.400831880910152E-6	DEFECT	2.519076604060474E-7	DOCUMENTATION	8.930820885116833E-8	TEST
// Custom sql	WITHOUT_CLASSIFICATION	0.9999976575114331	WITHOUT_CLASSIFICATION	2.2793874758497122E-6	DESIGN	4.071693303329286E-8	DEFECT	1.0522626175478642E-8	TEST	7.158270650939296E-9	DOCUMENTATION	4.703261352022783E-9	IMPLEMENTATION
/*protected void initPropertyPaths(	WITHOUT_CLASSIFICATION	0.9735364863263221	WITHOUT_CLASSIFICATION	0.02624876343346136	DESIGN	1.0888330730707499E-4	DEFECT	6.65677281721469E-5	TEST	2.6301339317108226E-5	DOCUMENTATION	1.2997865420263417E-5	IMPLEMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999960904946565	WITHOUT_CLASSIFICATION	1.3968289166594325E-6	IMPLEMENTATION	1.1716273835302389E-6	DEFECT	9.850729298611552E-7	DESIGN	1.8091627428451516E-7	DOCUMENTATION	1.7505983908293684E-7	TEST
//Custom SQL (would be better if these were private)	WITHOUT_CLASSIFICATION	0.6418184399014233	DESIGN	0.35816082345548556	WITHOUT_CLASSIFICATION	2.000653888721278E-5	TEST	3.5714951117394363E-7	IMPLEMENTATION	3.221258114710604E-7	DOCUMENTATION	5.082888143249826E-8	DEFECT
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998942354033697	WITHOUT_CLASSIFICATION	1.0570647235285661E-4	DESIGN	2.279314759862245E-8	IMPLEMENTATION	2.1383075717371987E-8	DEFECT	8.415652724022421E-9	TEST	5.532401434312208E-9	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999960904946565	WITHOUT_CLASSIFICATION	1.3968289166594325E-6	IMPLEMENTATION	1.1716273835302389E-6	DEFECT	9.850729298611552E-7	DESIGN	1.8091627428451516E-7	DOCUMENTATION	1.7505983908293684E-7	TEST
// aliases for identifier ( alias.id ); skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.9999998263565111	WITHOUT_CLASSIFICATION	1.6908434186111572E-7	DESIGN	2.251467931344462E-9	DEFECT	1.5190719683350776E-9	TEST	5.913136275635998E-10	IMPLEMENTATION	1.972935272802801E-10	DOCUMENTATION
//decide which ResultSet to get the property value from:	WITHOUT_CLASSIFICATION	0.9998092167566739	WITHOUT_CLASSIFICATION	1.7753229600551857E-4	DESIGN	1.2390855221239865E-5	DEFECT	4.5223169192689514E-7	TEST	4.0419078589337005E-7	DOCUMENTATION	3.6696215056291825E-9	IMPLEMENTATION
//note: it is conceptually possible that a UserType could map null to //	WITHOUT_CLASSIFICATION	0.6857638644747903	WITHOUT_CLASSIFICATION	0.31392238742568795	DESIGN	2.771055803120233E-4	IMPLEMENTATION	3.613093242618158E-5	DEFECT	4.837720916988002E-7	TEST	2.781469181330026E-8	DOCUMENTATION
// the contract of EntityTuplizer.determineConcreteSubclassEntityName says that returning null // is an indication that the specified entity-name (this.getEntityName) should be used.	WITHOUT_CLASSIFICATION	0.9782668825918973	WITHOUT_CLASSIFICATION	0.021732927626263335	DESIGN	1.0537776064876581E-7	IMPLEMENTATION	7.345268747571508E-8	DOCUMENTATION	7.082107831651524E-9	TEST	3.869283519205291E-9	DEFECT
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999430229305483	WITHOUT_CLASSIFICATION	4.682301263161815E-5	DEFECT	9.969497655592326E-6	IMPLEMENTATION	9.0210947652973E-8	TEST	8.614157694677783E-8	DESIGN	8.206639900839178E-9	DOCUMENTATION
// cache these since they are stateless // this one could even be static...	WITHOUT_CLASSIFICATION	0.6964729134151381	WITHOUT_CLASSIFICATION	0.3034896098192138	DESIGN	3.614983861999735E-5	DEFECT	1.038541057979752E-6	IMPLEMENTATION	1.467822265126914E-7	DOCUMENTATION	1.416037437602469E-7	TEST
//"as" is not in KEYWORDS	WITHOUT_CLASSIFICATION	0.9998169522044278	WITHOUT_CLASSIFICATION	9.587954005280915E-5	DESIGN	8.216761231534729E-5	DEFECT	2.809837703541296E-6	TEST	1.635308587800897E-6	DOCUMENTATION	5.554969126325929E-7	IMPLEMENTATION
// --Commented out by Inspection (12/4/04 9:10 AM): public abstract void addCondition(String alias, String[] columns, String condition);	WITHOUT_CLASSIFICATION	0.999999877706358	WITHOUT_CLASSIFICATION	5.325953499464227E-8	DESIGN	4.2240592599574836E-8	DEFECT	1.9733911608495166E-8	DOCUMENTATION	6.7411097961574094E-9	IMPLEMENTATION	3.184929711274537E-10	TEST
//use the id column alias	WITHOUT_CLASSIFICATION	0.9999879552971407	WITHOUT_CLASSIFICATION	9.706761682472818E-6	DESIGN	2.0216525530646902E-6	IMPLEMENTATION	2.2454722834014849E-7	DOCUMENTATION	6.27857009132236E-8	DEFECT	2.8955694677662323E-8	TEST
//private List aliases = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999999548123495	WITHOUT_CLASSIFICATION	2.5863500595299045E-8	IMPLEMENTATION	1.2675100608950104E-8	DEFECT	5.588541090267647E-9	TEST	5.657098733650823E-10	DESIGN	4.947981841442756E-10	DOCUMENTATION
//columns.add(columnName); //aliases.add(tableAlias);	WITHOUT_CLASSIFICATION	0.99994003138112	WITHOUT_CLASSIFICATION	4.513826276349716E-5	IMPLEMENTATION	6.658242069277799E-6	DEFECT	6.637940745766329E-6	DESIGN	1.1175588217622785E-6	TEST	4.166144798520864E-7	DOCUMENTATION
//where fragment must be empty!	WITHOUT_CLASSIFICATION	0.9821895543999909	WITHOUT_CLASSIFICATION	0.01773194220022493	DESIGN	3.6825618924158534E-5	IMPLEMENTATION	2.8288481684282953E-5	TEST	1.1391553875769983E-5	DEFECT	1.997745299872167E-6	DOCUMENTATION
// revert to traditional hibernate behavior of setting initialPoolSize to minPoolSize // unless otherwise specified with a c3p0.*-style parameter.	WITHOUT_CLASSIFICATION	0.9994516639407699	WITHOUT_CLASSIFICATION	5.481523581745267E-4	DESIGN	1.4585530923832684E-7	IMPLEMENTATION	3.623683159757061E-8	TEST	9.083372035113063E-10	DOCUMENTATION	7.005775853006585E-10	DEFECT
//arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.9999996818134806	WITHOUT_CLASSIFICATION	2.278531202530053E-7	DEFECT	7.350598101514149E-8	DESIGN	1.1406054610497634E-8	DOCUMENTATION	5.0383272092617695E-9	IMPLEMENTATION	3.830361774010584E-10	TEST
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9997161871130158	WITHOUT_CLASSIFICATION	1.4678124216924458E-4	DESIGN	1.3239156937497687E-4	DEFECT	2.942305312606015E-6	IMPLEMENTATION	1.3396265604626454E-6	DOCUMENTATION	3.581435669494321E-7	TEST
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9997161871130158	WITHOUT_CLASSIFICATION	1.4678124216924458E-4	DESIGN	1.3239156937497687E-4	DEFECT	2.942305312606015E-6	IMPLEMENTATION	1.3396265604626454E-6	DOCUMENTATION	3.581435669494321E-7	TEST
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9998714159191093	WITHOUT_CLASSIFICATION	1.027492615690657E-4	DESIGN	1.661349427069808E-5	DEFECT	9.02649800228067E-6	IMPLEMENTATION	1.4267969281898655E-7	TEST	5.2147355819818104E-8	DOCUMENTATION
// Essentially: // 1) If we have a local (Hibernate) transaction in progress //      and it already has the UserTransaction cached, use that //      UserTransaction to determine the status. // 2) If a transaction manager has been located, use //      that transaction manager to determine the status. // 3) Finally, as the last resort, try to lookup the //      UserTransaction via JNDI and use that to determine the //      status.	WITHOUT_CLASSIFICATION	0.9999999984487353	WITHOUT_CLASSIFICATION	1.2999646327256996E-9	DESIGN	2.3901114910577675E-10	IMPLEMENTATION	1.1489199096213613E-11	DEFECT	7.985461975983718E-13	DOCUMENTATION	1.14424989442477E-15	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9996866627785144	WITHOUT_CLASSIFICATION	2.588796342758592E-4	DESIGN	4.658146770550267E-5	IMPLEMENTATION	4.1116288446745785E-6	DEFECT	2.9143409007184537E-6	DOCUMENTATION	8.501497588761329E-7	TEST
//swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.9999881642895535	WITHOUT_CLASSIFICATION	6.973779242671434E-6	IMPLEMENTATION	3.873839404957127E-6	DESIGN	9.56463400810313E-7	DEFECT	2.0755206290115606E-8	DOCUMENTATION	1.0873191832364776E-8	TEST
// ignore it	WITHOUT_CLASSIFICATION	0.9999991295540291	WITHOUT_CLASSIFICATION	6.538499017512914E-7	DESIGN	1.3421495542497436E-7	DEFECT	6.056725536355615E-8	IMPLEMENTATION	1.5174283397179594E-8	DOCUMENTATION	6.639574887962815E-9	TEST
// we need to dirty check many-to-ones with not-found="ignore" in order  // to update the cache (not the database), since in this case a null // entity reference can lose information	WITHOUT_CLASSIFICATION	0.9999983494817849	WITHOUT_CLASSIFICATION	9.82308653738391E-7	DESIGN	6.033253760041143E-7	DEFECT	5.261162615386345E-8	IMPLEMENTATION	1.2034187228306025E-8	DOCUMENTATION	2.383719303438075E-10	TEST
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999304632142579	WITHOUT_CLASSIFICATION	6.87202654996882E-5	IMPLEMENTATION	4.107036993002244E-7	DEFECT	3.200283305222052E-7	DESIGN	6.385531714722526E-8	TEST	2.1932895382183282E-8	DOCUMENTATION
// Regions can get instantiated in the course of normal work (e.g. // a named query region will be created the first time the query is // executed), so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.9994769326714527	WITHOUT_CLASSIFICATION	4.651733605716514E-4	DESIGN	5.7893442734994116E-5	DEFECT	2.627695944039744E-10	TEST	1.5338502681294758E-10	DOCUMENTATION	1.0908593241580506E-10	IMPLEMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9999300340529182	WITHOUT_CLASSIFICATION	6.958259126778498E-5	DESIGN	1.916426264785272E-7	IMPLEMENTATION	1.0631408244323351E-7	DEFECT	5.322408272997866E-8	TEST	3.2175022238728887E-8	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9997412325299381	WITHOUT_CLASSIFICATION	2.2480853123771021E-4	DESIGN	2.965728987268454E-5	IMPLEMENTATION	4.140677312404715E-6	DEFECT	1.265819175443237E-7	TEST	3.438972152740498E-8	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998255674861074	WITHOUT_CLASSIFICATION	1.728843589116382E-4	DESIGN	8.856407347434112E-7	DEFECT	3.402775243104149E-7	TEST	2.28093344464216E-7	IMPLEMENTATION	9.414337744683082E-8	DOCUMENTATION
// NOTE : this is being used from the process of shutting down a // SessionFactory. Specific things to consider: // (1) this clearing of the region should not propagate to // other nodes on the cluster (if any); this is the // cache-mode-local option bit... // (2) really just trying a best effort to cleanup after // ourselves; lock failures, etc are not critical here; // this is the fail-silently option bit...	WITHOUT_CLASSIFICATION	0.9869589402892196	DESIGN	0.008618646849565035	DEFECT	0.004421144763261591	WITHOUT_CLASSIFICATION	1.209348426690182E-6	TEST	4.826437386882816E-8	IMPLEMENTATION	1.0485153267016628E-8	DOCUMENTATION
// need to extract the component values and check for subtype replacements...	WITHOUT_CLASSIFICATION	0.9180448026630582	WITHOUT_CLASSIFICATION	0.07101218774889748	DESIGN	0.010935964320105681	IMPLEMENTATION	2.9847667742154604E-6	DEFECT	2.154172582358723E-6	DOCUMENTATION	1.906328582058933E-6	TEST
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.999999939567597	WITHOUT_CLASSIFICATION	5.6941389847067327E-8	DESIGN	3.2019898191284586E-9	DEFECT	2.63826021303389E-10	IMPLEMENTATION	1.9832702845451268E-11	TEST	5.364704205234268E-12	DOCUMENTATION
// for now, just "re-flatten" the metamodel since this is temporary stuff anyway (HHH-1907)	WITHOUT_CLASSIFICATION	0.9930988384945556	WITHOUT_CLASSIFICATION	0.006900988686908032	DESIGN	1.4634117251824262E-7	DEFECT	2.325462494857776E-8	TEST	2.716853375687106E-9	DOCUMENTATION	5.058855189998724E-10	IMPLEMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9999843245207448	WITHOUT_CLASSIFICATION	1.5587096722658083E-5	DESIGN	7.149564730882779E-8	IMPLEMENTATION	1.0249595369450899E-8	DOCUMENTATION	6.183793980384303E-9	DEFECT	4.53495685671986E-10	TEST
//This solution would allow us to eliminate the owner arg to disassemble(), but //what if the collection was null, and then later had elements added? seems unsafe //session.getPersistenceContext().getCollectionEntry( (PersistentCollection) value ).getKey();	WITHOUT_CLASSIFICATION	0.6636508710744706	DESIGN	0.3356835694195768	WITHOUT_CLASSIFICATION	4.59963021636273E-4	IMPLEMENTATION	2.0417307496463477E-4	DEFECT	7.200767484305567E-7	DOCUMENTATION	7.033326035215309E-7	TEST
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999984092556897	WITHOUT_CLASSIFICATION	9.01934375998666E-7	DESIGN	3.8850636362821587E-7	DEFECT	1.476888215681075E-7	IMPLEMENTATION	1.4112951194986946E-7	TEST	1.1485236909324077E-8	DOCUMENTATION
// some collections are not lazy:	WITHOUT_CLASSIFICATION	0.9998565526985546	WITHOUT_CLASSIFICATION	6.167028902917455E-5	IMPLEMENTATION	4.543934314472184E-5	DEFECT	3.584410939903047E-5	DESIGN	2.793534890489145E-7	TEST	2.142063833859291E-7	DOCUMENTATION
// Here we don't want to suspend the tx. If we do: // 1) We might be caching query results that reflect uncommitted // changes. No tx == no WL on cache node, so other threads // can prematurely see those query results // 2) No tx == immediate replication. More overhead, plus we // spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.9992243309439629	WITHOUT_CLASSIFICATION	7.540621444654924E-4	DEFECT	2.160606817958468E-5	DESIGN	4.840828554578447E-10	TEST	3.5913533032345987E-10	DOCUMENTATION	1.738781394072208E-13	IMPLEMENTATION
// return the (fully resolved) identifier value, but do not resolve // to the actual referenced entity instance // NOTE: the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.9999997854774398	WITHOUT_CLASSIFICATION	1.1699143066144722E-7	DEFECT	9.694204760717599E-8	DESIGN	2.7509196643916967E-10	DOCUMENTATION	2.494276379390056E-10	TEST	6.456231760384012E-11	IMPLEMENTATION
// Add a zero (or quite low) timeout option so we don't block. // Ignore any TimeoutException. Basically we forego caching the // query result in order to avoid blocking. // Reads are done with suspended tx, so they should not hold the // lock for long.  Not caching the query result is OK, since // any subsequent read will just see the old result with its // out-of-date timestamp; that result will be discarded and the // db query performed again.	WITHOUT_CLASSIFICATION	0.9998739579069524	WITHOUT_CLASSIFICATION	1.256807197506242E-4	DEFECT	2.719819411153667E-7	DESIGN	6.58977424580749E-8	IMPLEMENTATION	1.5348539050202514E-8	TEST	8.145074323521304E-9	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9999475851178009	WITHOUT_CLASSIFICATION	2.9710066020535435E-5	DESIGN	2.175108221677109E-5	DEFECT	6.465358462865161E-7	TEST	3.000321432266197E-7	IMPLEMENTATION	7.165972170626791E-9	DOCUMENTATION
// We have the JBCWriteMutex, so no other *local* thread will  // be trying to write this key.  // It's possible here some remote thread has come in and // changed the values again, but since we are reading the // values to write to JBC right now, we know we are writing // the latest values; i.e. we don't assume that what we cached // in entry.update() above is what we should write to JBC *now*. // Our write could be redundant, i.e. we are writing what // some remote thread just came in an wrote.  There is a chance  // that yet another remote thread will update us, and we'll then // overwrite that later data in JBC.  But, all remote nodes will // ignore that change in their localCache; the only place it  // will live will be in JBC, where it can only effect the  // initial state transfer values on newly joined nodes  // (i.e. populateLocalCache()).	WITHOUT_CLASSIFICATION	0.999999629595942	WITHOUT_CLASSIFICATION	3.038421686667978E-7	DESIGN	6.655762061506561E-8	DEFECT	3.670169254235557E-12	TEST	4.0521970569336697E-13	DOCUMENTATION	1.9322448307550418E-13	IMPLEMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999990117969826	WITHOUT_CLASSIFICATION	4.441533715640004E-7	DESIGN	3.916518960305611E-7	DEFECT	1.520136863800855E-7	DOCUMENTATION	2.540255103957973E-10	IMPLEMENTATION	1.3003790110895728E-10	TEST
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999990117969826	WITHOUT_CLASSIFICATION	4.441533715640004E-7	DESIGN	3.916518960305611E-7	DEFECT	1.520136863800855E-7	DOCUMENTATION	2.540255103957973E-10	IMPLEMENTATION	1.3003790110895728E-10	TEST
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9994761126875921	WITHOUT_CLASSIFICATION	4.0768985932933407E-4	DEFECT	5.158903777284155E-5	TEST	3.5672160154810224E-5	DESIGN	2.701403335563827E-5	IMPLEMENTATION	1.92222179516912E-6	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.6641867113134902	WITHOUT_CLASSIFICATION	0.33575127728874354	DESIGN	3.4203965952921916E-5	DEFECT	2.518232754565944E-5	IMPLEMENTATION	2.542435650248411E-6	TEST	8.266861733564965E-8	DOCUMENTATION
// we need to obtain the lock before any actions are // executed, since this may be an inverse="true" // bidirectional association and it is one of the // earlier entity actions which actually updates // the database (this action is resposible for // second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.9999000630780789	WITHOUT_CLASSIFICATION	9.970308822910099E-5	DESIGN	2.0282936320456255E-7	IMPLEMENTATION	2.9644192786125934E-8	DOCUMENTATION	8.211038727864516E-10	TEST	5.390320777511805E-10	DEFECT
//postDelete: // After actually deleting a row, record the fact that the instance no longer  // exists on the database (needed for identity-column key generation), and // remove it from the session cache	WITHOUT_CLASSIFICATION	0.9999832640412056	WITHOUT_CLASSIFICATION	1.6721412992477464E-5	DESIGN	1.4529390021941076E-8	DEFECT	6.795857708449091E-12	DOCUMENTATION	5.528677720761437E-12	TEST	4.087310862366909E-12	IMPLEMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999417088902455	WITHOUT_CLASSIFICATION	5.778395841214376E-5	DESIGN	3.4591053480068435E-7	DEFECT	1.1973606698796762E-7	DOCUMENTATION	3.324644466112102E-8	IMPLEMENTATION	8.258295941168778E-9	TEST
//TODO find a decent name before documenting	DOCUMENTATION	0.5295821643025822	DOCUMENTATION	0.35780678368813607	DESIGN	0.10464421666748047	WITHOUT_CLASSIFICATION	0.006381417184467133	IMPLEMENTATION	0.001198730833618785	DEFECT	3.86687323715243E-4	TEST
//FIXME we don't have the associated entity table name here, has to be done in a second pass	DEFECT	0.9801844895750061	DESIGN	0.0198139652255951	WITHOUT_CLASSIFICATION	1.0403851207215527E-6	DEFECT	2.2435172119775344E-7	TEST	1.9948460571205942E-7	DOCUMENTATION	8.097795124211956E-8	IMPLEMENTATION
// For a one-to-many, a <bag> is not really a bag; // it is *really* a set, since it can't contain the // same element twice. It could be considered a bug // in the mapping dtd that <bag> allows <one-to-many>.	DEFECT	0.9695915267155534	WITHOUT_CLASSIFICATION	0.02954669353272791	DESIGN	8.592182790552432E-4	DEFECT	2.5603377677422454E-6	IMPLEMENTATION	9.131062191508057E-10	DOCUMENTATION	2.217894163398718E-10	TEST
// RDMS does not directly support the trim() function, we use rtrim() and ltrim()	DEFECT	0.9998109767336238	WITHOUT_CLASSIFICATION	1.0636571208610569E-4	IMPLEMENTATION	6.039109004964567E-5	DESIGN	2.1617321912790142E-5	DEFECT	4.827608355544366E-7	DOCUMENTATION	1.663814919765876E-7	TEST
/*         * The following types are not supported in RDMS/JDBC and therefore commented out.         * However, in some cases, mapping them to CHARACTER columns works         * for many applications, but does not work for all cases.         */	DEFECT	0.9030559350533459	WITHOUT_CLASSIFICATION	0.09694227261767141	DEFECT	7.093739151610169E-7	DOCUMENTATION	4.848618808871022E-7	DESIGN	3.2032664742779857E-7	IMPLEMENTATION	2.777665392513016E-7	TEST
// The preference here would be //   SQLFunctionTemplate( Hibernate.TIMESTAMP, "current_timestamp(?1)", false) // but this appears not to work. // Jay Nance 2006-09-22	DEFECT	0.9966696960072127	DEFECT	0.0019391178025898433	WITHOUT_CLASSIFICATION	0.001350496304508916	DESIGN	2.1284279223647545E-5	IMPLEMENTATION	1.734632102096844E-5	TEST	2.0592854439776007E-6	DOCUMENTATION
// note: at least my local SQL Server 2005 Express shows this not working...	DEFECT	0.8271052934527351	DEFECT	0.16241062614846122	DESIGN	0.010162248736375362	WITHOUT_CLASSIFICATION	3.1207864505812505E-4	TEST	7.126671595179366E-6	IMPLEMENTATION	2.626345775127724E-6	DOCUMENTATION
// note: at least my local MySQL 5.1 install shows this not working...	DEFECT	0.7050991753043476	DEFECT	0.28831523254090385	DESIGN	0.006573426464024591	WITHOUT_CLASSIFICATION	8.134246988705093E-6	TEST	2.8588318748054613E-6	IMPLEMENTATION	1.1726118603169274E-6	DOCUMENTATION
/*	DEFECT	0.9335139475304616	WITHOUT_CLASSIFICATION	0.057420572938627165	DESIGN	0.005812814405640206	DEFECT	0.0029924136177781986	IMPLEMENTATION	1.5574926612179705E-4	DOCUMENTATION	1.0450224137110372E-4	TEST
//Don't need this, because we should never ever be selecting no columns in an insert ... select... //and because it causes a bug on DB2	DEFECT	0.9984585171406667	WITHOUT_CLASSIFICATION	0.001536019757181448	DEFECT	3.3662091422658993E-6	DESIGN	1.6227441999843055E-6	TEST	4.680628121864985E-7	DOCUMENTATION	6.085997287493953E-9	IMPLEMENTATION
// TODO : this is broke for subqueries in statements other than selects...	DEFECT	0.9990473329966658	DESIGN	9.451354880506543E-4	DEFECT	5.878145228584433E-6	TEST	7.642348028993108E-7	WITHOUT_CLASSIFICATION	7.404528719038075E-7	DOCUMENTATION	1.486823801687209E-7	IMPLEMENTATION
// TODO : should this be an error?	DEFECT	0.9999676366629081	DESIGN	2.3501519674020417E-5	IMPLEMENTATION	6.434837633408893E-6	DEFECT	1.4316011852999375E-6	TEST	9.260654029265491E-7	DOCUMENTATION	6.931319625047385E-8	WITHOUT_CLASSIFICATION
// TODO : not sure which (either?) is correct, could not find docs on how to do this. // did find various blogs and forums mentioning that select CURRENT_TIMESTAMP // does not work...	DEFECT	0.8190661296460423	DEFECT	0.18057911071942953	DESIGN	3.058573152090185E-4	TEST	4.3403219891638194E-5	DOCUMENTATION	5.476584356956774E-6	IMPLEMENTATION	2.2515070513646658E-8	WITHOUT_CLASSIFICATION
// TODO: figure out how this should be set. /////////////////////////////////////////////////////////////////////////////// // This was the reason for failures regarding INDEX_OP and subclass joins on // theta-join dialects; not sure what behaviour we were trying to emulate ;) //	DEFECT	0.6096539950555928	DEFECT	0.3902840464963548	DESIGN	3.325530233780998E-5	WITHOUT_CLASSIFICATION	2.8190040449268483E-5	IMPLEMENTATION	4.108967200065005E-7	TEST	1.0220854528371958E-7	DOCUMENTATION
//TODO: would be nice to use false, but issues with MS SQL	DEFECT	0.9887958990696404	DESIGN	0.006899208542595715	DEFECT	0.0024578525358680114	WITHOUT_CLASSIFICATION	0.0012983903109596354	IMPLEMENTATION	5.138851622323641E-4	TEST	3.476437870397067E-5	DOCUMENTATION
//TODO: would be nice to use false, but issues with MS SQL	DEFECT	0.9887958990696404	DESIGN	0.006899208542595715	DEFECT	0.0024578525358680114	WITHOUT_CLASSIFICATION	0.0012983903109596354	IMPLEMENTATION	5.138851622323641E-4	TEST	3.476437870397067E-5	DOCUMENTATION
// TODO: cannot use generateSuffixes() - it handles the initial suffix differently.	DEFECT	0.999989528479043	DESIGN	7.901787387031147E-6	DEFECT	2.299795166359978E-6	WITHOUT_CLASSIFICATION	1.6227134665264065E-7	IMPLEMENTATION	6.571834387319038E-8	TEST	4.194871318563525E-8	DOCUMENTATION
// starts with an alias (old style) // semi-bad thing about this: can't re-alias another alias.....	DEFECT	0.983311758928912	WITHOUT_CLASSIFICATION	0.016651193500768324	DESIGN	3.580806175947395E-5	DEFECT	1.2187512007202087E-6	TEST	2.0202925232379957E-8	DOCUMENTATION	5.544342924269511E-10	IMPLEMENTATION
//TODO: BUG! this currently fails for named queries for non-POJO entities	DEFECT	0.9525140297332038	DESIGN	0.03108334868525346	DEFECT	0.015189440994889652	IMPLEMENTATION	6.668778688469276E-4	WITHOUT_CLASSIFICATION	3.624571726717355E-4	TEST	1.8384554513444401E-4	DOCUMENTATION
// this call is side-effecty	DEFECT	0.9999496097950168	WITHOUT_CLASSIFICATION	4.75762222469288E-5	DESIGN	2.629445278315755E-6	DEFECT	1.1465997976354076E-7	IMPLEMENTATION	3.52092072143134E-8	DOCUMENTATION	3.466827115689477E-8	TEST
//TODO: old version did not require hashmap lookup: //keys[collectionOwner].getIdentifier()	DEFECT	0.9875848213365717	WITHOUT_CLASSIFICATION	0.011240545861786888	IMPLEMENTATION	0.001137496784670386	DEFECT	3.6596076911220854E-5	DESIGN	3.0403435533655295E-7	TEST	2.3590570462107236E-7	DOCUMENTATION
//TODO: when this is the entry point, we should use an INNER_JOIN for fetching the many-to-many elements!	DEFECT	0.730757731712166	WITHOUT_CLASSIFICATION	0.2676410785902963	DESIGN	0.0015442907700955156	DEFECT	2.3571255252941693E-5	DOCUMENTATION	1.7264077840845405E-5	IMPLEMENTATION	1.6063594348654153E-5	TEST
// this is only needed (afaict) for processing results from the query cache; // however, this cannot possibly work in the case of discovered types...	DEFECT	0.7107075762166661	WITHOUT_CLASSIFICATION	0.28929019203862644	DEFECT	2.061648508515268E-6	DESIGN	1.5533352556834762E-7	TEST	1.4737126186269527E-8	DOCUMENTATION	2.5547236165117243E-11	IMPLEMENTATION
//TODO: this requires that the collection is defined after the //      referenced property in the mapping file (ok?)	DEFECT	0.982684803875791	WITHOUT_CLASSIFICATION	0.01566085797105056	DESIGN	0.0010290813259983109	DEFECT	4.99201885082875E-4	IMPLEMENTATION	8.541236490388826E-5	TEST	4.064257717343157E-5	DOCUMENTATION
//TODO: is this completely correct?	DEFECT	0.9760782973992911	DESIGN	0.023245323148976343	WITHOUT_CLASSIFICATION	4.189627361025385E-4	IMPLEMENTATION	1.5184569142393577E-4	TEST	9.982918832979403E-5	DEFECT	5.7418358763699145E-6	DOCUMENTATION
// three general cases we check here as to whether to render a physical SQL join: // 1) is our parent a DotNode as well?  If so, our property reference is // 	DEFECT	0.994927485139517	WITHOUT_CLASSIFICATION	0.004469319903038542	DESIGN	6.011921269327073E-4	DEFECT	1.963459281155957E-6	DOCUMENTATION	2.8399985294710243E-8	TEST	1.0971245406425863E-8	IMPLEMENTATION
// TODO : currently we really do not handle ValueInclusion.PARTIAL... // ValueInclusion.PARTIAL would indicate parts of a component need to // be included in the select; currently we then just render the entire // component into the select clause in that case.	DEFECT	0.9640007675075509	IMPLEMENTATION	0.03451920969125885	DESIGN	0.0014751789698930814	DEFECT	3.5836161745027012E-6	WITHOUT_CLASSIFICATION	1.1962733372644492E-6	DOCUMENTATION	6.394178540126274E-8	TEST
//TODO: inexact, what we really need to know is: are any outer joins used?	DEFECT	0.9999965676692073	DESIGN	1.6183427917870829E-6	WITHOUT_CLASSIFICATION	8.460984721818396E-7	IMPLEMENTATION	8.40270322662285E-7	DOCUMENTATION	1.0141758565369624E-7	DEFECT	2.6201620459174714E-8	TEST
// todo : this call will not work for anything other than pojos!	DEFECT	0.9612317716753714	DEFECT	0.03724413836075064	WITHOUT_CLASSIFICATION	9.682411043496589E-4	DESIGN	5.419416113825366E-4	IMPLEMENTATION	1.157019964654294E-5	TEST	2.3370484992342432E-6	DOCUMENTATION
//TODO: currently we don't know a SessionFactory reference when building the Tuplizer //      THIS IS A BUG (embedded-xml=false on component) // TODO : fix this after HHH-1907 is complete	DEFECT	0.9999973928586148	DESIGN	2.415478947530979E-6	DEFECT	1.5096951047375045E-7	IMPLEMENTATION	3.778773177081167E-8	DOCUMENTATION	2.8873171125895076E-9	TEST	1.7878312258687617E-11	WITHOUT_CLASSIFICATION
// TODO: this disables laziness even in non-pojo entity modes:	DEFECT	0.6513777270929383	DESIGN	0.3416793996610691	WITHOUT_CLASSIFICATION	0.006289707439033917	IMPLEMENTATION	3.35621324442462E-4	DOCUMENTATION	2.1018761875579844E-4	DEFECT	1.0735686376048293E-4	TEST
//TODO: currently broken for unique-key references (does not detect //      change to unique key property of the associated object) //the owner of the association is not the owner of the id	DEFECT	0.8493854160107746	DESIGN	0.08549019026089673	DEFECT	0.05099915949371068	WITHOUT_CLASSIFICATION	0.008631245099105463	DOCUMENTATION	0.004085840991214561	TEST	0.001408148144297969	IMPLEMENTATION
//TODO: entities CAN be compared, by PK, fix this! -> only if/when we can extract the id values....	DEFECT	0.9971118676399486	DESIGN	0.0019490066507546016	DEFECT	8.472778281338628E-4	WITHOUT_CLASSIFICATION	5.1925929075111144E-5	IMPLEMENTATION	3.2588233513940735E-5	TEST	7.333718573911956E-6	DOCUMENTATION
//TODO: entities CAN be compared, by PK and entity name, fix this!	DEFECT	0.9979277472622434	DESIGN	9.983990769845982E-4	DEFECT	9.510540891306868E-4	WITHOUT_CLASSIFICATION	9.58764272136778E-5	IMPLEMENTATION	2.110848880170748E-5	TEST	5.814655625936685E-6	DOCUMENTATION
//TODO: this is kinda inconsistent with CollectionType	DEFECT	0.9133772315294652	DESIGN	0.040574173776443144	IMPLEMENTATION	0.03142792368901729	WITHOUT_CLASSIFICATION	0.010124409306996665	DEFECT	0.004212132427805783	TEST	2.841292702720059E-4	DOCUMENTATION
//TODO: would be nice to use false, but issues with MS SQL	DEFECT	0.9887958990696404	DESIGN	0.006899208542595715	DEFECT	0.0024578525358680114	WITHOUT_CLASSIFICATION	0.0012983903109596354	IMPLEMENTATION	5.138851622323641E-4	TEST	3.476437870397067E-5	DOCUMENTATION
// TODO: does not work for EntityMode.DOM4J yet!	DEFECT	0.9590742081194903	DEFECT	0.03928628557051682	DESIGN	0.0012125254308242267	IMPLEMENTATION	3.7292114623934086E-4	TEST	4.497620267305282E-5	DOCUMENTATION	9.083530256289838E-6	WITHOUT_CLASSIFICATION
//TODO: currently broken for unique-key references (does not detect //      change to unique key property of the associated object)	DEFECT	0.9811922769683618	DESIGN	0.008361228678529174	DEFECT	0.004215988637439893	DOCUMENTATION	0.003622394436413124	IMPLEMENTATION	0.0021246738825382886	WITHOUT_CLASSIFICATION	4.834373967179842E-4	TEST
//TODO: not really completely correct, since //      the uoe could occur while resolving //      associations, leaving the PC in an //      inconsistent state	DEFECT	0.8892570013334747	DEFECT	0.08092627768221006	DESIGN	0.022754268464193195	WITHOUT_CLASSIFICATION	0.0039075695069776435	IMPLEMENTATION	0.0027660821754472505	TEST	3.888008376970484E-4	DOCUMENTATION
// could happen for custom Criteria impls.  Not likely, but... // 	DEFECT	0.6332840833216383	DEFECT	0.24418895794004425	DESIGN	0.12019417508997995	WITHOUT_CLASSIFICATION	0.0013002185888133819	IMPLEMENTATION	0.001027287084623012	TEST	5.277974901082316E-6	DOCUMENTATION
// This does not support the Cache SQL 'DISTINCT BY (comma-list)' extensions, // but this extension is not supported through Hibernate anyway.	DEFECT	0.9997516815800943	WITHOUT_CLASSIFICATION	2.463948100903613E-4	DESIGN	1.0562097806141447E-6	TEST	8.369756009000689E-7	DEFECT	2.4294125415340266E-8	DOCUMENTATION	6.130308405557157E-9	IMPLEMENTATION
// note that this timestamp is not correct if the connection provider // returns an older JDBC connection that was associated with a // transaction that was already begun before openSession() was called // (don't know any possible solution to this!)	DEFECT	0.973430070769251	WITHOUT_CLASSIFICATION	0.010794602485421342	IMPLEMENTATION	0.010062661778977943	DESIGN	0.005679698534573124	DEFECT	3.0725388909520454E-5	TEST	2.2410428670031162E-6	DOCUMENTATION
//no need to take a snapshot - this is a  //performance optimization, but not really //important, except for entities with huge  //mutable property values	DEFECT	0.9995724557494372	WITHOUT_CLASSIFICATION	3.5999201277240136E-4	DEFECT	6.178523098058537E-5	DESIGN	4.962702729910915E-6	TEST	7.162376886467356E-7	DOCUMENTATION	8.806639133595621E-8	IMPLEMENTATION
// TODO : this really needs to be delayed unitl after we definitively know the operand node type; // where this is currently a problem is parameters for which where we cannot unequivocally // resolve an expected type	DEFECT	0.9827936527987036	DESIGN	0.014476244519712748	DEFECT	0.002160738009746167	WITHOUT_CLASSIFICATION	4.0451097552770805E-4	IMPLEMENTATION	1.5961121555295785E-4	DOCUMENTATION	5.242480756875204E-6	TEST
// First, validate all the enabled filters... //TODO: this implementation has bad performance	DEFECT	0.9967291792626678	IMPLEMENTATION	0.0029430521452877595	DESIGN	2.4216584998763764E-4	DEFECT	8.154946589963917E-5	WITHOUT_CLASSIFICATION	2.651751919714548E-6	DOCUMENTATION	1.4015242374648843E-6	TEST
// TODO: what if batchUpdate is a callablestatement ? // calls executeBatch()	DEFECT	0.7656977467758691	DESIGN	0.13230641281681968	WITHOUT_CLASSIFICATION	0.049415244951838376	DEFECT	0.04917260555601705	IMPLEMENTATION	0.0033395966502197997	TEST	6.839324923593841E-5	DOCUMENTATION
// assume that the row was not there since it previously had only null // values, so do an INSERT instead //TODO: does not respect dynamic-insert	DEFECT	0.9999972333010868	WITHOUT_CLASSIFICATION	1.8843157602218541E-6	DEFECT	5.077690836787373E-7	DESIGN	3.2107645598598613E-7	TEST	4.1901259454302E-8	DOCUMENTATION	1.1636353897270851E-8	IMPLEMENTATION
//TODO: passing null here, because this method is not really used for DOM4J at the moment //      but it is still a bug, if we don't get rid of this!	DEFECT	0.9943252788061355	DESIGN	0.0024221272222238023	IMPLEMENTATION	0.0016880718300702276	DEFECT	0.0013746946305366156	WITHOUT_CLASSIFICATION	1.7555663076528709E-4	TEST	1.4270880268623781E-5	DOCUMENTATION
//note that this implementation is kinda broken //for components with many-to-one associations	DEFECT	0.9980004368921215	WITHOUT_CLASSIFICATION	0.0018740823011015992	DESIGN	7.211147821191955E-5	DEFECT	4.3666589983961024E-5	TEST	8.923754833223034E-6	IMPLEMENTATION	7.789837477843539E-7	DOCUMENTATION
// TODO: at the point where we are resolving collection references, we don't // know if the uk value has been resolved (depends if it was earlier or // later in the mapping document) - now, we could try and use e.getStatus() // to decide to semiResolve(), trouble is that initializeEntity() reuses // the same array for resolved and hydrated values	DEFECT	0.9895162787100023	DESIGN	0.00924730195268893	DEFECT	0.0010032697767803638	IMPLEMENTATION	1.8933441870092816E-4	DOCUMENTATION	4.3690591109842243E-5	WITHOUT_CLASSIFICATION	1.2455071771876994E-7	TEST
//TODO: This is assertion is disabled because there is a bug that means the //	DEFECT	0.9850754116209509	WITHOUT_CLASSIFICATION	0.012374777491721969	DEFECT	0.0018378425702722107	DESIGN	6.235992495538544E-4	IMPLEMENTATION	8.700881070243039E-5	TEST	1.3602567984431934E-6	DOCUMENTATION
// This doesn't actually seem to work but it *might* // work on some dbs. Also it doesn't work if there // are multiple columns of results because it // is not accounting for the suffix: // return new String[] { getDiscriminatorColumnName() };	DEFECT	0.5321513993171978	DESIGN	0.4672262899976769	WITHOUT_CLASSIFICATION	6.221183663503256E-4	DEFECT	1.8833892382989865E-7	TEST	3.96121980773856E-9	DOCUMENTATION	1.8631249148439188E-11	IMPLEMENTATION
// TODO: Deal with the "optional" attribute in the <join> mapping; // this code assumes that optional defaults to "true" because it // doesn't actually seem to work in the fetch="join" code // // Note that actual proper handling of optional-ality here is actually // more involved than this patch assumes.  Remember that we might have // multiple <join/> mappings associated with a single entity.  Really // a couple of things need to happen to properly handle optional here: //  1) First and foremost, when handling multiple <join/>s, we really //      should be using the entity root table as the driving table; //      another option here would be to choose some non-optional joined //      table to use as the driving table.  In all likelihood, just using //      the root table is much simplier //  2) Need to add the FK columns corresponding to each joined table //      to the generated select list; these would then be used when //      iterating the result set to determine whether all non-optional //      data is present // My initial thoughts on the best way to deal with this would be // to introduce a new SequentialSelect abstraction that actually gets // generated in the persisters (ok, SingleTable...) and utilized here. // It would encapsulated all this required optional-ality checking...	DEFECT	0.9606063504562701	DESIGN	0.01973725428411791	WITHOUT_CLASSIFICATION	0.019396638791063892	DEFECT	2.533669746378452E-4	TEST	5.966485006242942E-6	DOCUMENTATION	4.2300890410321787E-7	IMPLEMENTATION
// todo : what else to do here?	DESIGN	0.9467544469792929	WITHOUT_CLASSIFICATION	0.04888455632642199	IMPLEMENTATION	0.004041495104290196	DESIGN	3.060953164728442E-4	DEFECT	1.0041539662699452E-5	TEST	3.3647338593369453E-6	DOCUMENTATION
//put() has nowait semantics, is this really appropriate? //note that it needs to be async replication, never local or sync	DESIGN	0.9914090876240339	WITHOUT_CLASSIFICATION	0.008525920246834528	DESIGN	6.339658938471455E-5	DEFECT	1.3619875373884381E-6	DOCUMENTATION	1.2999543197856996E-7	IMPLEMENTATION	1.0355677753657712E-7	TEST
// 'hibernate.temp.use_jdbc_metadata_defaults' is a temporary magic value. // The need for it is intended to be alleviated with future developement, thus it is // not defined as an Environment constant... // // it is used to control whether we should consult the JDBC metadata to determine // certain Settings default values; it is useful to *not* do this when the database // may not be available (mainly in tools usage).	DESIGN	0.8465354210371694	WITHOUT_CLASSIFICATION	0.15346457322760018	DESIGN	4.214484784307194E-9	TEST	1.3603664909077298E-9	DEFECT	1.6031328113159163E-10	DOCUMENTATION	6.586391774564369E-14	IMPLEMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.9594143428916018	DESIGN	0.040499684295427815	WITHOUT_CLASSIFICATION	5.37437675451242E-5	IMPLEMENTATION	1.4617957520366685E-5	TEST	1.221427089507653E-5	DEFECT	5.396817009937771E-6	DOCUMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.9594143428916018	DESIGN	0.040499684295427815	WITHOUT_CLASSIFICATION	5.37437675451242E-5	IMPLEMENTATION	1.4617957520366685E-5	TEST	1.221427089507653E-5	DEFECT	5.396817009937771E-6	DOCUMENTATION
// todo : eventually merge this with TreeCache and just add optional opt-lock support there.	DESIGN	0.9977977381646606	WITHOUT_CLASSIFICATION	0.0020789629622808992	IMPLEMENTATION	1.221447007869669E-4	DESIGN	5.832821582217589E-7	DOCUMENTATION	4.830142557025407E-7	TEST	8.787585765874092E-8	DEFECT
// can happen because of the multiple ways Cache.remove() // can be invoked :(	DESIGN	0.9999016286827748	WITHOUT_CLASSIFICATION	9.779121308436047E-5	DESIGN	5.743035131770733E-7	DEFECT	3.736202428175458E-9	DOCUMENTATION	1.3436887338547738E-9	IMPLEMENTATION	7.207364691548777E-10	TEST
// work around the "feature" where tree cache is validating the // inserted node during the next transaction.  no idea...	DESIGN	0.5898417406759353	WITHOUT_CLASSIFICATION	0.40704487401080675	DESIGN	0.003103922679920595	DEFECT	4.9607375046126414E-6	IMPLEMENTATION	2.7879414641104684E-6	TEST	1.7139543686517235E-6	DOCUMENTATION
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.9997083632120699	DESIGN	1.3881310186922093E-4	DOCUMENTATION	7.694087418952416E-5	DEFECT	7.045503385884581E-5	WITHOUT_CLASSIFICATION	4.158574445103033E-6	TEST	1.2692035674643248E-6	IMPLEMENTATION
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.9997083632120699	DESIGN	1.3881310186922093E-4	DOCUMENTATION	7.694087418952416E-5	DEFECT	7.045503385884581E-5	WITHOUT_CLASSIFICATION	4.158574445103033E-6	TEST	1.2692035674643248E-6	IMPLEMENTATION
// FIXME Hacky workaround to JBCACHE-1202	DESIGN	0.9999538819649133	DESIGN	4.581225228675881E-5	DEFECT	2.600807655100684E-7	IMPLEMENTATION	3.518837231296276E-8	DOCUMENTATION	7.763710627443604E-9	TEST	2.7499515825380763E-9	WITHOUT_CLASSIFICATION
// FIXME Hacky workaround to JBCACHE-1202	DESIGN	0.9999538819649133	DESIGN	4.581225228675881E-5	DEFECT	2.600807655100684E-7	IMPLEMENTATION	3.518837231296276E-8	DOCUMENTATION	7.763710627443604E-9	TEST	2.7499515825380763E-9	WITHOUT_CLASSIFICATION
// TODO: I considered validating TS cache config here, // but decided to defer unti getTimestampsCacheInstance() in case the  // cache is never actually used	DESIGN	0.8720456400137618	IMPLEMENTATION	0.1276285294794042	DESIGN	2.705117950538499E-4	WITHOUT_CLASSIFICATION	5.0062962837883725E-5	DEFECT	4.69882562579078E-6	DOCUMENTATION	5.569233165173551E-7	TEST
// TODO Is this a valid operation on a timestamps cache?	DESIGN	0.9954188856207227	DESIGN	0.0025807070513973566	IMPLEMENTATION	0.0014501359626143409	WITHOUT_CLASSIFICATION	2.862347070696602E-4	TEST	2.2723729085205856E-4	DEFECT	3.679936734378012E-5	DOCUMENTATION
// TODO Is this a valid operation on a timestamps cache?	DESIGN	0.9954188856207227	DESIGN	0.0025807070513973566	IMPLEMENTATION	0.0014501359626143409	WITHOUT_CLASSIFICATION	2.862347070696602E-4	TEST	2.2723729085205856E-4	DEFECT	3.679936734378012E-5	DOCUMENTATION
// TODO Why not use the timestamp in a DataVersion?	DESIGN	0.9965497315869948	DESIGN	0.0032915028672022006	IMPLEMENTATION	1.1421006029616856E-4	DEFECT	3.0380988630117703E-5	DOCUMENTATION	1.2945734848745041E-5	TEST	1.2287620278580448E-6	WITHOUT_CLASSIFICATION
// can happen because of the multiple ways Cache.remove() // can be invoked :(	DESIGN	0.9999016286827748	WITHOUT_CLASSIFICATION	9.779121308436047E-5	DESIGN	5.743035131770733E-7	DEFECT	3.736202428175458E-9	DOCUMENTATION	1.3436887338547738E-9	IMPLEMENTATION	7.207364691548777E-10	TEST
// work around the "feature" where tree cache is validating the // inserted node during the next transaction. no idea...	DESIGN	0.7426615241517647	WITHOUT_CLASSIFICATION	0.2558429836910829	DESIGN	0.0014893384375279143	DEFECT	3.1724769899396462E-6	IMPLEMENTATION	1.7185845558187907E-6	TEST	1.262658078637816E-6	DOCUMENTATION
//swaldman 2004-02-07: modify to allow null values to signify fall through to c3p0 PoolConfig defaults	DESIGN	0.999914835829571	WITHOUT_CLASSIFICATION	7.867391666049272E-5	DESIGN	6.391379975315803E-6	DEFECT	5.4382138754036453E-8	IMPLEMENTATION	2.8733989686455532E-8	DOCUMENTATION	1.5757664731379558E-8	TEST
// turn hibernate.c3p0.* into c3p0.*, so c3p0 // gets a chance to see all hibernate.c3p0.*	DESIGN	0.9999940877613217	WITHOUT_CLASSIFICATION	5.911927986855575E-6	DESIGN	2.2447556268042271E-10	DEFECT	4.4287298917684596E-11	DOCUMENTATION	3.44351949257149E-11	IMPLEMENTATION	7.493424275215993E-12	TEST
//TODO: this bit actually has to be called after all cascades! //      but since identity insert is called *synchronously*, //      instead of asynchronously as other actions, it isn't	DESIGN	0.7800886266558674	WITHOUT_CLASSIFICATION	0.21857804846210466	DESIGN	0.0012817885451818613	DEFECT	2.480734248553295E-5	TEST	1.7574906500680606E-5	DOCUMENTATION	9.154087859771429E-6	IMPLEMENTATION
//TODO: reenable if we also fix the above todo	DESIGN	0.9863234414973734	DESIGN	0.012462268830022416	WITHOUT_CLASSIFICATION	4.8611603915206904E-4	IMPLEMENTATION	3.3836040835350396E-4	TEST	3.191641773029921E-4	DEFECT	7.064904779559076E-5	DOCUMENTATION
//TODO: inefficient if that cache is just going to ignore the updated state!	DESIGN	0.7437905986487949	WITHOUT_CLASSIFICATION	0.16548310300832372	IMPLEMENTATION	0.09067535864101535	DESIGN	4.110888003632305E-5	TEST	9.458769212943302E-6	DOCUMENTATION	3.7205261667360847E-7	DEFECT
// we may be screwed here since the collection action is about to execute // and we do not know the final owner key value	DESIGN	0.9999657983497087	WITHOUT_CLASSIFICATION	3.414376330344939E-5	DESIGN	3.25906406103103E-8	IMPLEMENTATION	2.415050573706962E-8	DEFECT	8.879006649277757E-10	TEST	2.5794094314256093E-10	DOCUMENTATION
/** Create an action that will evict collection and entity regions based on queryspaces (table names).	DESIGN	0.8185980601441545	WITHOUT_CLASSIFICATION	0.1723613270822817	DESIGN	0.005070936046515147	IMPLEMENTATION	0.003785901809539628	DEFECT	9.874108276562643E-5	TEST	8.503383474341965E-5	DOCUMENTATION
// todo : what else to do here?	DESIGN	0.9467544469792929	WITHOUT_CLASSIFICATION	0.04888455632642199	IMPLEMENTATION	0.004041495104290196	DESIGN	3.060953164728442E-4	DEFECT	1.0041539662699452E-5	TEST	3.3647338593369453E-6	DOCUMENTATION
// todo : modify the class definition if not already transformed...	DESIGN	0.9997109279883051	WITHOUT_CLASSIFICATION	2.1819457429798325E-4	DESIGN	3.937112495393644E-5	IMPLEMENTATION	3.0908924815008465E-5	DEFECT	3.2291906796441947E-7	TEST	2.744685599783756E-7	DOCUMENTATION
// todo : what else to do here?	DESIGN	0.9467544469792929	WITHOUT_CLASSIFICATION	0.04888455632642199	IMPLEMENTATION	0.004041495104290196	DESIGN	3.060953164728442E-4	DEFECT	1.0041539662699452E-5	TEST	3.3647338593369453E-6	DOCUMENTATION
// this is called by SessionFactory irregardless; we just disregard here; // could also add a check to SessionFactory to only conditionally call start	DESIGN	0.5525630997112349	WITHOUT_CLASSIFICATION	0.4472467641645178	DESIGN	1.5433969821459855E-4	IMPLEMENTATION	2.321399237143756E-5	DEFECT	6.6038179274066585E-6	TEST	5.97861573375816E-6	DOCUMENTATION
// this is called by SessionFactory irregardless; we just disregard here; // could also add a check to SessionFactory to only conditionally call stop	DESIGN	0.8767515343558244	WITHOUT_CLASSIFICATION	0.1230078836133405	DESIGN	1.9391765739284333E-4	IMPLEMENTATION	3.7207414152274796E-5	DEFECT	5.673747207711431E-6	TEST	3.78321208228564E-6	DOCUMENTATION
//TODO: to handle concurrent writes correctly, this should return a Lock to the client	DESIGN	0.9996510324942519	DESIGN	3.244174063132233E-4	DEFECT	1.0587258106858612E-5	IMPLEMENTATION	6.752744509164162E-6	DOCUMENTATION	3.892754956946564E-6	WITHOUT_CLASSIFICATION	3.3173418620189575E-6	TEST
//put() has nowait semantics, is this really appropriate? //note that it needs to be async replication, never local or sync	DESIGN	0.9914090876240339	WITHOUT_CLASSIFICATION	0.008525920246834528	DESIGN	6.339658938471455E-5	DEFECT	1.3619875373884381E-6	DOCUMENTATION	1.2999543197856996E-7	IMPLEMENTATION	1.0355677753657712E-7	TEST
//TODO: to handle concurrent writes correctly, the client should pass in a Lock	DESIGN	0.9853762312451364	DESIGN	0.007655612538027433	WITHOUT_CLASSIFICATION	0.0065155178859121615	DEFECT	1.6979017382206846E-4	IMPLEMENTATION	1.5595212266186472E-4	DOCUMENTATION	1.26896034439805E-4	TEST
//TODO: assumes all collections disassemble to an array!	DESIGN	0.9999325833918513	WITHOUT_CLASSIFICATION	5.073493226203093E-5	DEFECT	1.1170120888819368E-5	IMPLEMENTATION	4.4649701894850684E-6	DESIGN	7.403769302085185E-7	TEST	3.0620787808014776E-7	DOCUMENTATION
//TODO: reuse the PreLoadEvent	DESIGN	0.5040577598168644	WITHOUT_CLASSIFICATION	0.26806302307245683	DESIGN	0.22635059605263286	IMPLEMENTATION	0.0012898017053589747	DOCUMENTATION	1.358484953992136E-4	TEST	1.0297085728766387E-4	DEFECT
// todo: this was added to support initializing an entity's EntityEntry snapshot during reattach; // this should be refactored to instead expose a method to assemble a EntityEntry based on this // state for return.	DESIGN	0.9939390455921419	DESIGN	0.006059855782861936	WITHOUT_CLASSIFICATION	9.278220287143452E-7	DEFECT	1.688715009337593E-7	TEST	1.0153618645676478E-9	IMPLEMENTATION	9.161046250284215E-10	DOCUMENTATION
// todo : what is the implication of this?	DESIGN	0.6064963267767873	WITHOUT_CLASSIFICATION	0.35317804956047205	DESIGN	0.021618477488063455	DOCUMENTATION	0.014475816124093478	DEFECT	0.0026535943349242134	IMPLEMENTATION	0.0015777357156593545	TEST
// use COUNT as the default.  This mimics the old behavior, although // NONE might be a better option moving forward in the case of callable	DESIGN	0.9767737007252176	WITHOUT_CLASSIFICATION	0.023195671159308474	DESIGN	3.0326280196922583E-5	DEFECT	1.534021257200665E-7	IMPLEMENTATION	1.440891506527857E-7	TEST	4.344000512793457E-9	DOCUMENTATION
/* TODO: joinKeyColumnName & foreignKeyColumnName should be called either here or at a	DESIGN	0.6157611754644657	IMPLEMENTATION	0.37073958421106934	DESIGN	0.007026704897648262	DEFECT	0.005359373950306789	WITHOUT_CLASSIFICATION	9.062688519811579E-4	TEST	2.0689262452870945E-4	DOCUMENTATION
//TODO: suck this into initLaziness!	DESIGN	0.9933787610139463	DESIGN	0.003408140598867262	IMPLEMENTATION	0.0016266468032854605	WITHOUT_CLASSIFICATION	9.597674989145152E-4	DEFECT	3.8982021543707983E-4	DOCUMENTATION	2.36863869549295E-4	TEST
// we have to set up the table later!! yuck	DESIGN	0.9975243900942579	WITHOUT_CLASSIFICATION	0.002474019047999991	DESIGN	1.3442364504217026E-6	DEFECT	2.1438413794792814E-7	IMPLEMENTATION	1.644170387596092E-8	DOCUMENTATION	1.5795449909892352E-8	TEST
//TODO: better to degrade to lazy="false" if uninstrumented	DESIGN	0.593918370843894	IMPLEMENTATION	0.3326905530728204	DESIGN	0.06919175984413924	WITHOUT_CLASSIFICATION	0.001802482026039485	DOCUMENTATION	0.001213261656701031	TEST	0.0011835725564058105	DEFECT
// todo : again, how *should* this work for non-pojo entities?	DESIGN	0.9472076668826367	DESIGN	0.021716613426649566	WITHOUT_CLASSIFICATION	0.015703081571076288	DEFECT	0.015308905967427152	IMPLEMENTATION	4.3248204321373836E-5	TEST	2.048394788897193E-5	DOCUMENTATION
// TODO: this is a bit of copy/paste from IndexedCollection.createPrimaryKey()	DESIGN	0.5601570050124675	DESIGN	0.4129014518384048	IMPLEMENTATION	0.025495086597565872	DEFECT	0.001053754658149174	WITHOUT_CLASSIFICATION	3.833845823538279E-4	TEST	9.317311058836037E-6	DOCUMENTATION
// This inner class implements a case statement....perhaps im being a bit over-clever here	DESIGN	0.9721789802365207	DESIGN	0.027648992686517063	WITHOUT_CLASSIFICATION	1.4266223771837496E-4	IMPLEMENTATION	2.8073280236310425E-5	DEFECT	1.1638113573972263E-6	TEST	1.277476500069213E-7	DOCUMENTATION
//TODO: bad implementation, cos it depends upon ordering of mapping doc //      fixing this requires that Collection/PersistentClass gain access //      to the Mappings reference from Configuration (or the filterDefinitions //      map directly) sometime during Configuration.buildSessionFactory //      (after all the types/filter-defs are known and before building //      persisters).	DESIGN	0.9971205636865281	DESIGN	0.002611493917747198	IMPLEMENTATION	2.1199763259652815E-4	DEFECT	4.8448361706070587E-5	WITHOUT_CLASSIFICATION	6.639378794567067E-6	DOCUMENTATION	8.570226273749972E-7	TEST
//use of a stringbuffer to workaround a JDK bug	DESIGN	0.9995699705898923	DESIGN	3.7689818288854716E-4	WITHOUT_CLASSIFICATION	4.6044610169057914E-5	DEFECT	5.3775594002031855E-6	IMPLEMENTATION	1.47201657844791E-6	DOCUMENTATION	2.3704107128049878E-7	TEST
// hack/workaround as sqlquery impl depend on having a key.	DESIGN	0.999999593498095	DESIGN	2.1134396470374437E-7	DEFECT	1.635123142725669E-7	IMPLEMENTATION	2.708030773850376E-8	WITHOUT_CLASSIFICATION	3.880687412403398E-9	TEST	6.846309062660827E-10	DOCUMENTATION
//FIXME: get the PersistentClass	DESIGN	0.476061481060421	WITHOUT_CLASSIFICATION	0.3944668830555508	DESIGN	0.12685622948392658	IMPLEMENTATION	0.0019115046384374547	TEST	5.899375642124107E-4	DEFECT	1.1396419745176185E-4	DOCUMENTATION
//FIXME: get the PersistentClass	DESIGN	0.476061481060421	WITHOUT_CLASSIFICATION	0.3944668830555508	DESIGN	0.12685622948392658	IMPLEMENTATION	0.0019115046384374547	TEST	5.899375642124107E-4	DEFECT	1.1396419745176185E-4	DOCUMENTATION
//Icky workaround for MySQL bug:	DESIGN	0.998140079596806	DESIGN	0.0015147824244825358	WITHOUT_CLASSIFICATION	3.298351182914396E-4	DEFECT	6.332694754774807E-6	IMPLEMENTATION	6.224528484711146E-6	DOCUMENTATION	2.7456371804592615E-6	TEST
//TODO: Somehow add the newly created foreign keys to the internal collection	DESIGN	0.7217760513968711	WITHOUT_CLASSIFICATION	0.27248324103818633	IMPLEMENTATION	0.0021903520648905617	DEFECT	0.001835602880748437	DOCUMENTATION	0.0016899405309337748	DESIGN	2.4812088369741838E-5	TEST
//TODO possibly relax that	DESIGN	0.6700554576424664	DESIGN	0.3289415098477547	WITHOUT_CLASSIFICATION	7.142903377755405E-4	IMPLEMENTATION	1.5012440126905053E-4	DOCUMENTATION	7.345680745358207E-5	DEFECT	6.516096328073716E-5	TEST
//TODO possibly relax that	DESIGN	0.6700554576424664	DESIGN	0.3289415098477547	WITHOUT_CLASSIFICATION	7.142903377755405E-4	IMPLEMENTATION	1.5012440126905053E-4	DOCUMENTATION	7.345680745358207E-5	DEFECT	6.516096328073716E-5	TEST
//TODO possibly relax that	DESIGN	0.6700554576424664	DESIGN	0.3289415098477547	WITHOUT_CLASSIFICATION	7.142903377755405E-4	IMPLEMENTATION	1.5012440126905053E-4	DOCUMENTATION	7.345680745358207E-5	DEFECT	6.516096328073716E-5	TEST
//use of a stringbuffer to workaround a JDK bug	DESIGN	0.9995699705898923	DESIGN	3.7689818288854716E-4	WITHOUT_CLASSIFICATION	4.6044610169057914E-5	DEFECT	5.3775594002031855E-6	IMPLEMENTATION	1.47201657844791E-6	DOCUMENTATION	2.3704107128049878E-7	TEST
//use a degenerated strategy for backward compatibility	DESIGN	0.99936895617725	WITHOUT_CLASSIFICATION	6.305634231566509E-4	DESIGN	3.2780619306330605E-7	IMPLEMENTATION	6.764407611220556E-8	DEFECT	6.604293522713389E-8	TEST	1.890638903420066E-8	DOCUMENTATION
// Sets can be just a view of a part of another collection. // do we need to copy it to be sure it won't be changing // underneath us? // ie. this.set.addAll(set);	DESIGN	0.5294128116989867	DESIGN	0.468988730858815	WITHOUT_CLASSIFICATION	0.001377754262809447	DEFECT	1.739077080058972E-4	IMPLEMENTATION	4.588022835747194E-5	TEST	9.152430255643002E-7	DOCUMENTATION
//note that i parameter is now unused (delete it?)	DESIGN	0.9471312819506205	DESIGN	0.052680107594682765	WITHOUT_CLASSIFICATION	1.7983622123694522E-4	IMPLEMENTATION	6.704751718888971E-6	TEST	1.988106900342693E-6	DEFECT	8.137484074691793E-8	DOCUMENTATION
//just to help out during the load (ugly, i know)	DESIGN	0.9941706127004014	WITHOUT_CLASSIFICATION	0.004809879018532052	DESIGN	9.940766923516031E-4	IMPLEMENTATION	1.6339989651957606E-5	DEFECT	5.863586090212168E-6	TEST	3.228012972897995E-6	DOCUMENTATION
// TODO : safe to interpret "map.remove(key) == null" as non-dirty?	DESIGN	0.5126664768723754	DEFECT	0.2678051974213815	DESIGN	0.12104239393367272	IMPLEMENTATION	0.0982171770332373	WITHOUT_CLASSIFICATION	1.9230421846843678E-4	DOCUMENTATION	7.645052086463311E-5	TEST
// yick!  need this for proper serialization/deserialization handling...	DESIGN	0.502628180525318	DEFECT	0.2944466215239024	WITHOUT_CLASSIFICATION	0.19955260888591206	DESIGN	0.00211607604597216	DOCUMENTATION	0.0012376468160922522	TEST	1.886620280312633E-5	IMPLEMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.9594143428916018	DESIGN	0.040499684295427815	WITHOUT_CLASSIFICATION	5.37437675451242E-5	IMPLEMENTATION	1.4617957520366685E-5	TEST	1.221427089507653E-5	DEFECT	5.396817009937771E-6	DOCUMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.9594143428916018	DESIGN	0.040499684295427815	WITHOUT_CLASSIFICATION	5.37437675451242E-5	IMPLEMENTATION	1.4617957520366685E-5	TEST	1.221427089507653E-5	DEFECT	5.396817009937771E-6	DOCUMENTATION
//yuck!	DESIGN	0.9845965107107965	WITHOUT_CLASSIFICATION	0.014958671468131133	DESIGN	3.9663001668030154E-4	DEFECT	3.329097039855155E-5	DOCUMENTATION	1.117573466578792E-5	TEST	3.72109932785319E-6	IMPLEMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.9594143428916018	DESIGN	0.040499684295427815	WITHOUT_CLASSIFICATION	5.37437675451242E-5	IMPLEMENTATION	1.4617957520366685E-5	TEST	1.221427089507653E-5	DEFECT	5.396817009937771E-6	DOCUMENTATION
// TODO : not sure this is correct, could not find docs on how to do this.	DESIGN	0.9954403056500587	DESIGN	0.0045118563993950455	DEFECT	3.605706057152447E-5	IMPLEMENTATION	6.043137754353805E-6	TEST	5.7221425925866425E-6	DOCUMENTATION	1.5609627840863545E-8	WITHOUT_CLASSIFICATION
//HSQL has no Blob/Clob support .... but just put these here for now!	DESIGN	0.9958839635084629	WITHOUT_CLASSIFICATION	0.0039891120291342935	DESIGN	9.695074296099337E-5	IMPLEMENTATION	2.594660382973934E-5	TEST	3.11452442482889E-6	DEFECT	9.125911873378343E-7	DOCUMENTATION
// does this need holdlock also? : return tableName + " with (updlock, rowlock, holdlock)";	DESIGN	0.659060870338719	WITHOUT_CLASSIFICATION	0.34036636009251103	DESIGN	3.630237399641054E-4	DEFECT	1.563899043713021E-4	TEST	4.907343808554872E-5	IMPLEMENTATION	4.282486348883599E-6	DOCUMENTATION
// sql-server, at least needed this dropped after use; strange!	DESIGN	0.9996893588255228	WITHOUT_CLASSIFICATION	2.9331266067765695E-4	DESIGN	9.013253105112764E-6	TEST	7.4270142917199285E-6	IMPLEMENTATION	6.351089879562588E-7	DOCUMENTATION	2.531374146870761E-7	DEFECT
// todo : is there really any reason to kkeep trying if this fails once?	DESIGN	0.584614055536907	WITHOUT_CLASSIFICATION	0.2264008667476655	DEFECT	0.18890331908048982	DESIGN	5.512680653731417E-5	TEST	1.9458674279660256E-5	DOCUMENTATION	7.173154120462073E-6	IMPLEMENTATION
// TBD should this be varbinary($1)? //	DESIGN	0.9950807740024132	WITHOUT_CLASSIFICATION	0.004872182100715576	DESIGN	2.9022383973093116E-5	DEFECT	1.3781375071576801E-5	IMPLEMENTATION	3.5274277870930737E-6	TEST	7.127100394390509E-7	DOCUMENTATION
// is it necessary to register %exact since it can only appear in a where clause?	DESIGN	0.9972985104340804	WITHOUT_CLASSIFICATION	0.0026667903498610894	DESIGN	1.9251898104224113E-5	DEFECT	1.4904575424661973E-5	IMPLEMENTATION	2.7443430488471093E-7	TEST	2.683082248048212E-7	DOCUMENTATION
// xmlforest requires a new kind of function constructor	DESIGN	0.9999729910448546	WITHOUT_CLASSIFICATION	2.453556701526517E-5	IMPLEMENTATION	1.5466706175804706E-6	DESIGN	5.398026832486118E-7	DEFECT	3.801529634642658E-7	TEST	6.761865978094955E-9	DOCUMENTATION
// Does this dialect support the ALTER TABLE syntax?	DESIGN	0.9978481918721596	WITHOUT_CLASSIFICATION	0.002120235909406303	DESIGN	2.3721841779253716E-5	IMPLEMENTATION	3.5901665461490947E-6	DEFECT	3.1418591586732085E-6	DOCUMENTATION	1.1183509501239498E-6	TEST
// Do we need to qualify index names with the schema name?	DESIGN	0.9932586713325624	WITHOUT_CLASSIFICATION	0.006511346544037149	IMPLEMENTATION	1.1305449677624977E-4	DESIGN	6.48553139408714E-5	DOCUMENTATION	3.0101537584348936E-5	TEST	2.197077509903515E-5	DEFECT
// Does this dialect support the UNIQUE column syntax?	DESIGN	0.9976325545841215	WITHOUT_CLASSIFICATION	0.0016678571818020654	DESIGN	6.853027298784753E-4	IMPLEMENTATION	6.709338283171686E-6	DOCUMENTATION	5.2087819481270365E-6	DEFECT	2.3673839667525965E-6	TEST
// Does this dialect support check constraints?	DESIGN	0.9959461183011141	WITHOUT_CLASSIFICATION	0.0030101435822641642	DESIGN	0.0010270779698890317	IMPLEMENTATION	1.202645870839161E-5	DOCUMENTATION	4.059735327633479E-6	TEST	5.739526965737773E-7	DEFECT
// Do we need to drop constraints before dropping tables in this dialect?	DESIGN	0.9704893066907652	WITHOUT_CLASSIFICATION	0.0295047313581189	DESIGN	2.036864098995287E-6	IMPLEMENTATION	1.8713251542879732E-6	DOCUMENTATION	1.2854978945163036E-6	DEFECT	7.682639680561581E-7	TEST
// Does this dialect support the FOR UPDATE syntax?	DESIGN	0.9918185087874355	WITHOUT_CLASSIFICATION	0.00797839244746758	DESIGN	1.8543703886911997E-4	IMPLEMENTATION	8.662245903866959E-6	DOCUMENTATION	5.910143916880677E-6	DEFECT	3.0893364071923813E-6	TEST
// Does this dialect support the Oracle-style FOR UPDATE NOWAIT syntax?	DESIGN	0.9952494291348368	WITHOUT_CLASSIFICATION	0.004186929661035034	DESIGN	5.537727533223964E-4	IMPLEMENTATION	5.150106234980684E-6	TEST	4.099039439137354E-6	DOCUMENTATION	6.193051313382897E-7	DEFECT
// Does this dialect support FOR UPDATE OF, allowing particular rows to be locked?	DESIGN	0.9957044405770156	DESIGN	0.0042166061413328034	WITHOUT_CLASSIFICATION	5.4792014118358575E-5	DEFECT	2.1985166764117063E-5	IMPLEMENTATION	1.515727360544295E-6	DOCUMENTATION	6.603734085681994E-7	TEST
//note there is a wierd implementation in the client side	DESIGN	0.9998581053363157	WITHOUT_CLASSIFICATION	1.413795121496669E-4	DESIGN	3.715202757697028E-7	IMPLEMENTATION	1.1308129323072591E-7	DEFECT	2.6365486275068792E-8	TEST	4.184479461377857E-9	DOCUMENTATION
//TODO: never reached, since getTypeName() actually throws an exception!	DESIGN	0.7698552040826663	WITHOUT_CLASSIFICATION	0.12408188417969448	DEFECT	0.0617741516242241	DESIGN	0.0436254657906433	IMPLEMENTATION	4.3864445079587277E-4	TEST	2.2464987197603562E-4	DOCUMENTATION
// todo : should we additionally check the current isolation mode explicitly?	DESIGN	0.9560426807695515	DESIGN	0.01758660860513434	IMPLEMENTATION	0.016050194625920722	DEFECT	0.009993703463463894	WITHOUT_CLASSIFICATION	3.257268901230205E-4	DOCUMENTATION	1.085645806583595E-6	TEST
// todo : remove this and just have subclasses use Isolater/IsolatedWork directly...	DESIGN	0.957230513003585	DESIGN	0.04202851683391246	WITHOUT_CLASSIFICATION	7.349608859293127E-4	DEFECT	5.309520214505175E-6	IMPLEMENTATION	5.184490121300191E-7	TEST	1.813073467343643E-7	DOCUMENTATION
//TODO: should orphans really be deleted during lock???	DESIGN	0.9497721352065565	DESIGN	0.031165470012604325	WITHOUT_CLASSIFICATION	0.012617980804853947	DEFECT	0.006422824038767976	IMPLEMENTATION	1.4747778610317838E-5	DOCUMENTATION	6.842158606887717E-6	TEST
// orphans should not be deleted during merge??	DESIGN	0.9997171844096308	WITHOUT_CLASSIFICATION	2.8131161885359447E-4	DESIGN	7.465778103555051E-7	IMPLEMENTATION	7.026483905810182E-7	DEFECT	5.304745022898933E-8	TEST	1.6978643992456058E-9	DOCUMENTATION
// orphans should not be deleted during copy??	DESIGN	0.9998702548442163	WITHOUT_CLASSIFICATION	1.200445778723195E-4	DESIGN	8.804763908561776E-6	DEFECT	8.564979525258252E-7	IMPLEMENTATION	3.5405212843162423E-8	TEST	3.91083749548875E-9	DOCUMENTATION
//I suppose?	DESIGN	0.9863403164047554	WITHOUT_CLASSIFICATION	0.008916363768527965	DESIGN	0.004704808727444325	IMPLEMENTATION	2.1487019044437827E-5	DOCUMENTATION	1.2194645523646898E-5	DEFECT	4.8294347044752104E-6	TEST
//TODO: suck this logic into the collection!	DESIGN	0.9462632029843074	DESIGN	0.04835996728437697	IMPLEMENTATION	0.004218172389317663	WITHOUT_CLASSIFICATION	8.493416424032883E-4	DEFECT	2.716892262783615E-4	DOCUMENTATION	3.762647331632635E-5	TEST
// TODO: an alternative is to check if the owner has changed; if it hasn't then // get the ID from collection.getOwner()	DESIGN	0.993987957321867	IMPLEMENTATION	0.0033941976048325047	WITHOUT_CLASSIFICATION	0.0023313851577769933	DEFECT	1.521537218339868E-4	DESIGN	1.334775557985071E-4	TEST	8.286378910167144E-7	DOCUMENTATION
//TODO:refactor + make this method private	DESIGN	0.9947822139460736	DESIGN	0.004406363826605986	WITHOUT_CLASSIFICATION	6.847898916693494E-4	IMPLEMENTATION	1.077607309788527E-4	TEST	1.806696364941499E-5	DOCUMENTATION	8.046410227350186E-7	DEFECT
// todo : we can actually just determine this from the incoming EntityEntry-s	DESIGN	0.9995785666857383	WITHOUT_CLASSIFICATION	4.213320024627479E-4	DESIGN	8.753458081316637E-8	DEFECT	5.1707440756314436E-9	IMPLEMENTATION	4.640694518044928E-9	DOCUMENTATION	3.965779562881101E-9	TEST
//TODO: Should this be an InitializeEntityEventListener??? (watch out for performance!)	DESIGN	0.9995367917094896	DESIGN	3.297895640384725E-4	IMPLEMENTATION	1.2148119835004767E-4	WITHOUT_CLASSIFICATION	6.3566448505358204E-6	TEST	5.293018098236274E-6	DOCUMENTATION	2.8786517306970415E-7	DEFECT
//TODO: better to pass the id in as an argument?	DESIGN	0.9992356620055869	DESIGN	7.391012298242515E-4	WITHOUT_CLASSIFICATION	1.570916581122725E-5	DOCUMENTATION	4.349283447579979E-6	TEST	3.8713943736007045E-6	DEFECT	1.306920956336098E-6	IMPLEMENTATION
// todo : potentially look at optimizing these two arrays	DESIGN	0.9979750565372234	WITHOUT_CLASSIFICATION	7.400653661631706E-4	DESIGN	6.621688212280373E-4	IMPLEMENTATION	6.16546407849393E-4	DEFECT	3.9392571718303255E-6	TEST	2.2236103640418588E-6	DOCUMENTATION
/* trim done to workaround stupid oracle bug that cant handle whitespaces before a { in a sp */	DESIGN	0.9999675439153274	DESIGN	2.04498338741189E-5	DEFECT	9.84405999197509E-6	WITHOUT_CLASSIFICATION	2.0890752414515875E-6	IMPLEMENTATION	6.46832246879144E-8	TEST	8.432340570068572E-9	DOCUMENTATION
/* trim done to workaround stupid oracle bug that cant handle whitespaces before a { in a sp */	DESIGN	0.9999675439153274	DESIGN	2.04498338741189E-5	DEFECT	9.84405999197509E-6	WITHOUT_CLASSIFICATION	2.0890752414515875E-6	IMPLEMENTATION	6.46832246879144E-8	TEST	8.432340570068572E-9	DOCUMENTATION
//TODO: temporary	DESIGN	0.9989516589536372	DESIGN	9.38503596903181E-4	WITHOUT_CLASSIFICATION	7.205213807449251E-5	IMPLEMENTATION	2.393271270149242E-5	TEST	8.548668057552344E-6	DEFECT	5.303930626081133E-6	DOCUMENTATION
//TODO: not quite sure about the full implications of this!	DESIGN	0.49540297263648314	IMPLEMENTATION	0.3886746654876452	WITHOUT_CLASSIFICATION	0.0819058308613069	DESIGN	0.02589920948093775	DEFECT	0.007787377632541389	TEST	3.29943901085526E-4	DOCUMENTATION
//TODO: not quite sure about the full implications of this!	DESIGN	0.49540297263648314	IMPLEMENTATION	0.3886746654876452	WITHOUT_CLASSIFICATION	0.0819058308613069	DESIGN	0.02589920948093775	DEFECT	0.007787377632541389	TEST	3.29943901085526E-4	DOCUMENTATION
//TODO: ugly here:	DESIGN	0.9726423505895894	DESIGN	0.026527841904828296	IMPLEMENTATION	3.931183764540029E-4	WITHOUT_CLASSIFICATION	2.3533028046057852E-4	DEFECT	1.2175854537818488E-4	TEST	7.960030328954498E-5	DOCUMENTATION
//this is kinda the best we can do...	DESIGN	0.9900376588004314	WITHOUT_CLASSIFICATION	0.00775762274346239	DESIGN	0.0020130839115857163	DEFECT	1.709627324739713E-4	TEST	1.2344417543294718E-5	DOCUMENTATION	8.327394503322015E-6	IMPLEMENTATION
//TODO: this needn't exclude subclasses...	DESIGN	0.9835281183134975	DESIGN	0.006197763623559325	WITHOUT_CLASSIFICATION	0.005880178479404244	DEFECT	0.0034665080911175203	IMPLEMENTATION	6.030210905149142E-4	TEST	3.244104019063788E-4	DOCUMENTATION
// todo : need map? the prob is a proper key, right?	DESIGN	0.7617828001125057	DESIGN	0.2001340632211486	DEFECT	0.028420739813189506	WITHOUT_CLASSIFICATION	0.008796587740940392	IMPLEMENTATION	6.31565525812796E-4	TEST	2.3424358640305066E-4	DOCUMENTATION
// todo : i'd much rather have this done from #endLoadingCollection(CollectionPersister,LoadingCollectionEntry)...	DESIGN	0.9487415988897352	WITHOUT_CLASSIFICATION	0.05116776151264747	DESIGN	8.974247843826891E-5	DEFECT	8.737094016194527E-7	TEST	2.068035168552713E-8	DOCUMENTATION	2.729425798941151E-9	IMPLEMENTATION
// todo : hack!!! // NOTE : here we cleanup the load context when we have no more local // LCE entries.  This "works" for the time being because really // only the collection load contexts are implemented.  Long term, // this cleanup should become part of the "close result set" // processing from the (sandbox/jdbc) jdbc-container code.	DESIGN	0.9999264693754762	DESIGN	6.044966554291387E-5	WITHOUT_CLASSIFICATION	1.0892073923334405E-5	DEFECT	2.1847563594638056E-6	TEST	2.3810925882904264E-9	IMPLEMENTATION	1.747605452788257E-9	DOCUMENTATION
// todo : should really move this log statement to CollectionType, where this is used from...	DESIGN	0.7313321334701898	DESIGN	0.2677522818037478	WITHOUT_CLASSIFICATION	8.94560398435247E-4	DEFECT	1.4765072704670738E-5	IMPLEMENTATION	5.86026067887334E-6	TEST	3.9899424358413593E-7	DOCUMENTATION
// TODO : keep seperate notions of QT[] here for shallow/non-shallow queries...	DESIGN	0.5838149317170332	DESIGN	0.3992630219146376	IMPLEMENTATION	0.015911547523625585	DEFECT	5.201190394437031E-4	TEST	4.6379463691857616E-4	WITHOUT_CLASSIFICATION	2.658516834123667E-5	DOCUMENTATION
// TODO : add this info to the translator and aggregate it here...	DESIGN	0.9604375623522031	IMPLEMENTATION	0.03879713285487494	DESIGN	3.387786183966045E-4	DEFECT	2.2198614380784733E-4	TEST	1.9961844531576054E-4	DOCUMENTATION	4.921585401709477E-6	WITHOUT_CLASSIFICATION
//TODO: move into collection type, so we can use polymorphism!	DESIGN	0.955718068487904	DESIGN	0.044173662287214414	WITHOUT_CLASSIFICATION	5.7225479701485554E-5	DEFECT	3.827616454829415E-5	IMPLEMENTATION	1.2238573586039255E-5	DOCUMENTATION	5.290070459973625E-7	TEST
// todo : should we check the current isolation mode explicitly?	DESIGN	0.4253636145205626	WITHOUT_CLASSIFICATION	0.3179770756144039	DESIGN	0.1797233714461331	DEFECT	0.07611262077819343	IMPLEMENTATION	8.015053139434503E-4	DOCUMENTATION	2.1812326763464147E-5	TEST
//TODO: suck into event class	DESIGN	0.9980256137147618	DESIGN	0.001541249617592616	IMPLEMENTATION	1.578170040860276E-4	WITHOUT_CLASSIFICATION	1.3702804204470428E-4	DEFECT	1.343481473648206E-4	DOCUMENTATION	3.9434741499927495E-6	TEST
//do we even really need this? the update will fail anyway....	DESIGN	0.5386579191604203	WITHOUT_CLASSIFICATION	0.30792853176452845	DEFECT	0.10666371152165165	DESIGN	0.039981485194868605	DOCUMENTATION	0.0066134223081679485	IMPLEMENTATION	1.549300503629807E-4	TEST
//hum ... should we cascade anyway? throw an exception? fine like it is?	DESIGN	0.9992065566777456	DESIGN	5.124030611325907E-4	IMPLEMENTATION	2.0931786033910724E-4	DEFECT	4.0956828508039266E-5	DOCUMENTATION	2.457079446242189E-5	WITHOUT_CLASSIFICATION	6.194777812474438E-6	TEST
//TODO: would it be better to do a refresh from db?	DESIGN	0.9919116641383301	DESIGN	0.00785123456992967	IMPLEMENTATION	9.841218442982709E-5	WITHOUT_CLASSIFICATION	7.789502709097627E-5	DEFECT	6.009714621013658E-5	TEST	6.969340092356972E-7	DOCUMENTATION
//TODO: we use two visitors here, inefficient!	DESIGN	0.9963863586812997	DESIGN	0.0018304455549138223	WITHOUT_CLASSIFICATION	0.0016360903773683828	IMPLEMENTATION	9.492265372518455E-5	DOCUMENTATION	3.971687262593937E-5	DEFECT	1.2465860067075478E-5	TEST
// this class has no proxies (so do a shortcut)	DESIGN	0.9998887406130965	WITHOUT_CLASSIFICATION	1.1104961139617396E-4	DESIGN	1.5753995507185218E-7	DEFECT	2.0397549803786873E-8	DOCUMENTATION	1.753119082870876E-8	TEST	1.4306811534421179E-8	IMPLEMENTATION
//PostLoad is needed for EJB3 //TODO: reuse the PostLoadEvent...	DESIGN	0.9362271362739784	IMPLEMENTATION	0.026952593790747124	WITHOUT_CLASSIFICATION	0.022623045728249584	DESIGN	0.010249455762158471	TEST	0.003241279143495602	DEFECT	7.064893013708976E-4	DOCUMENTATION
//TODO: put this stuff back in to read snapshot from //      the second-level cache (needs some extra work)	DESIGN	0.9837486044145152	DESIGN	0.013090191211286678	WITHOUT_CLASSIFICATION	0.002011517028291928	DEFECT	0.00110324848140524	IMPLEMENTATION	3.527520687978913E-5	DOCUMENTATION	1.116365762128983E-5	TEST
// null or brand new collection // this will also (inefficiently) handle arrays, which have // no snapshot, so we can't do any better	DESIGN	0.9671225767107037	WITHOUT_CLASSIFICATION	0.032875509388318	DESIGN	1.4678795990653918E-6	IMPLEMENTATION	3.604663357022462E-7	DOCUMENTATION	7.375382249801891E-8	DEFECT	1.180122108528172E-8	TEST
//TODO: is this 100% correct?	DESIGN	0.9958279158770565	DESIGN	0.002972914474332096	WITHOUT_CLASSIFICATION	0.0011063452601286618	DEFECT	5.214424642866033E-5	TEST	2.831487824451366E-5	DOCUMENTATION	1.2365263809717912E-5	IMPLEMENTATION
// TODO: iteratively get transient entities and retry merge until one of the following conditions: //       1) transientCopyCache.size() == 0 //       2) transientCopyCache.size() is not decreasing and copyCache.size() is not increasing // TODO: find out if retrying can add entities to copyCache (don't think it can...) // For now, just retry once; throw TransientObjectException if there are still any transient entities	DESIGN	0.6622883024571717	DEFECT	0.20536028987705618	IMPLEMENTATION	0.11620924864071847	DESIGN	0.01557322442784288	WITHOUT_CLASSIFICATION	5.41357508366266E-4	TEST	2.7577088844555723E-5	DOCUMENTATION
// entity name will not be available for non-POJO entities // TODO: cache the entity name somewhere so that it is available to this exception	DESIGN	0.9999193102062744	DESIGN	7.716188215112059E-5	WITHOUT_CLASSIFICATION	2.147542773979055E-6	DEFECT	8.369593063966443E-7	IMPLEMENTATION	5.084811241284249E-7	TEST	3.492836993423416E-8	DOCUMENTATION
//TODO: we should throw an exception if we really *know* for sure   //      that this is a detached instance, rather than just assuming //throw new StaleObjectStateException(entityName, id);	DESIGN	0.9850997342593377	DESIGN	0.014882807484106822	WITHOUT_CLASSIFICATION	1.6036417259743915E-5	DEFECT	1.3946213099471726E-6	TEST	2.4475019945968187E-8	DOCUMENTATION	2.7429655898109322E-9	IMPLEMENTATION
// TODO : perhaps we should additionally require that the incoming entity // version be equivalent to the defined unsaved-value?	DESIGN	0.9999304686573706	DESIGN	6.918991309530124E-5	IMPLEMENTATION	2.9377271496898326E-7	DEFECT	3.3030736687629706E-8	DOCUMENTATION	1.4289647480722798E-8	WITHOUT_CLASSIFICATION	3.364350378702315E-10	TEST
// perhaps this should be an exception since it is only ever used // in the above method?	DESIGN	0.9842736066719584	DESIGN	0.01571702333976578	WITHOUT_CLASSIFICATION	9.289440783035899E-6	DEFECT	7.528750446336979E-8	TEST	5.0694432284243185E-9	DOCUMENTATION	1.905450816947489E-10	IMPLEMENTATION
// Put a placeholder in entries, so we don't recurse back and try to save() the // same object again. QUESTION: should this be done before onSave() is called? // likewise, should it be done before onUpdate()?	DESIGN	0.9299077297552553	WITHOUT_CLASSIFICATION	0.07006872074707168	DESIGN	2.345371641355138E-5	IMPLEMENTATION	5.560317941112312E-8	DOCUMENTATION	2.598066172458679E-8	TEST	1.419741839641501E-8	DEFECT
//TODO: merge into one method!	DESIGN	0.93547057477086	DESIGN	0.06340740617904811	WITHOUT_CLASSIFICATION	6.92808458426184E-4	IMPLEMENTATION	2.847861104684943E-4	DEFECT	7.75620929909502E-5	DOCUMENTATION	6.686238820635505E-5	TEST
//TODO: refactor to .sql package	DESIGN	0.9735781716907095	DESIGN	0.024885289485418897	WITHOUT_CLASSIFICATION	0.0015256696887722882	IMPLEMENTATION	6.5895501843183295E-6	DOCUMENTATION	3.084136722968651E-6	TEST	1.1954481923010426E-6	DEFECT
/** * Provides query splitting methods, which were originally in QueryTranslator. * <br> * TODO: This will need to be refactored at some point. * * @author josh */	DESIGN	0.9988895346607626	DESIGN	9.684658833627311E-4	DOCUMENTATION	1.1658727705336315E-4	IMPLEMENTATION	1.9777759581199934E-5	DEFECT	4.687963094629602E-6	TEST	9.464561454951537E-7	WITHOUT_CLASSIFICATION
//TODO: this is one of the ugliest and most fragile pieces of code in Hibernate....	DESIGN	0.9998352657061598	DESIGN	6.843503808806347E-5	TEST	6.740589115225398E-5	IMPLEMENTATION	2.2756692719549342E-5	DEFECT	5.7019467681014905E-6	WITHOUT_CLASSIFICATION	4.3472511236527886E-7	DOCUMENTATION
// todo : temporary //      needed because currently persister is the one that //      creates and renders the join fragments for inheritence //      hierarchies...	DESIGN	0.782243158350815	DESIGN	0.21766842838277287	WITHOUT_CLASSIFICATION	5.828065156757909E-5	DEFECT	1.1975609582956537E-5	IMPLEMENTATION	9.079856373437748E-6	DOCUMENTATION	9.077148888284554E-6	TEST
// TODO : better way?!?	DESIGN	0.9998514945694391	DESIGN	1.3376145202155545E-4	IMPLEMENTATION	7.606479227429033E-6	DEFECT	3.6393641946167926E-6	TEST	3.493840456227552E-6	DOCUMENTATION	4.294661155353873E-9	WITHOUT_CLASSIFICATION
// Not possible to simply re-use the versionPropertyNode here as it causes // OOM errors due to circularity :(	DESIGN	0.9999931977120892	WITHOUT_CLASSIFICATION	6.1721178103880256E-6	IMPLEMENTATION	5.70387265866275E-7	DESIGN	5.6366733958762815E-8	DEFECT	2.811976202749633E-9	TEST	6.041243267779869E-10	DOCUMENTATION
//TODO:this is only needed during compilation .. can we eliminate the instvar?	DESIGN	0.9992033806863361	DESIGN	7.778996462553601E-4	WITHOUT_CLASSIFICATION	1.4140352662072093E-5	DEFECT	2.881176063455975E-6	TEST	1.1077895995452653E-6	DOCUMENTATION	5.90349083435709E-7	IMPLEMENTATION
// TODO : this is a bit dodgy, come up with a better way to check this (plus see above comment)	DESIGN	0.9996271638208811	DESIGN	3.631446726408393E-4	IMPLEMENTATION	4.6292589096011475E-6	DEFECT	3.8708874733696116E-6	TEST	1.18805092474289E-6	DOCUMENTATION	3.309170304217489E-9	WITHOUT_CLASSIFICATION
// even here, if only properties mapped to the "base table" are referenced // in the set and where clauses, this could be handled by the BasicDelegate. // TODO : decide if it is better performance-wise to perform that check, or to simply use the MultiTableUpdateDelegate	DESIGN	0.9999999993993816	DESIGN	4.451274440769859E-10	IMPLEMENTATION	1.016438014688131E-10	DOCUMENTATION	2.6528891528109576E-11	TEST	1.4355856011254834E-11	DEFECT	1.2962259611728859E-11	WITHOUT_CLASSIFICATION
//TODO: switch statements are always evil! We already had bugs because  //      of forgotten token types. Use polymorphism for this!	DESIGN	0.9021761145322597	DESIGN	0.05482408702314084	WITHOUT_CLASSIFICATION	0.042859293464862586	DEFECT	1.2704175644315604E-4	DOCUMENTATION	8.25055224014107E-6	TEST	5.2126710535972506E-6	IMPLEMENTATION
// TODO : we really need to be able to deal with component paths here also; // this is difficult because the hql-sql grammar expects all those node types // to be FromReferenceNodes.  One potential fix here would be to convert the // IntoClause to just use a FromClause/FromElement combo (as a child of the // InsertStatement) and move all this logic into the InsertStatement.  That's // probably the easiest approach (read: least amount of changes to the grammar // and code), but just doesn't feel right as then an insert would contain // 2 from-clauses	DESIGN	0.9916421649567386	DESIGN	0.00835303335123248	WITHOUT_CLASSIFICATION	4.5763650060595196E-6	TEST	2.0519318407145952E-7	DOCUMENTATION	1.3268773956769833E-8	DEFECT	6.865064919151963E-9	IMPLEMENTATION
// really there are two situations where it should be ok to allow the insertion // into properties defined on a superclass: //      1) union-subclass with an abstract root entity //      2) discrim-subclass // // #1 is handled already because of the fact that // UnionSubclassPersister alreay always returns 0 // for this call... // // we may want to disallow it for discrim-subclass just for // consistency-sake (currently does not work anyway)...	DESIGN	0.9999988647374259	WITHOUT_CLASSIFICATION	1.127133607833521E-6	DESIGN	7.875750378942713E-9	DEFECT	1.7657608951479804E-10	DOCUMENTATION	4.596267488573872E-11	TEST	3.0676950390074855E-11	IMPLEMENTATION
//yuck!	DESIGN	0.9845965107107965	WITHOUT_CLASSIFICATION	0.014958671468131133	DESIGN	3.9663001668030154E-4	DEFECT	3.329097039855155E-5	DOCUMENTATION	1.117573466578792E-5	TEST	3.72109932785319E-6	IMPLEMENTATION
// implicit joins are always(?) ok to reuse	DESIGN	0.9989490322773514	WITHOUT_CLASSIFICATION	0.0010475798552158628	DESIGN	2.7835179693538243E-6	IMPLEMENTATION	3.9391211917335654E-7	DEFECT	1.749111582465664E-7	DOCUMENTATION	3.552618598237895E-8	TEST
// TODO : we may also want to check that the types here map to exactly one column/JDBC-type //      can't think of a situation where arithmetic expression between multi-column mappings //      makes any sense.	DESIGN	0.5161159401938588	DESIGN	0.4517727103747689	IMPLEMENTATION	0.03151601534203864	DEFECT	5.860540070050856E-4	DOCUMENTATION	6.489167835248286E-6	TEST	2.7909144932941273E-6	WITHOUT_CLASSIFICATION
// we do not know either type //BLIND GUESS!	DESIGN	0.9997943258940102	WITHOUT_CLASSIFICATION	2.0226508127879365E-4	DESIGN	2.5979786438361495E-6	DEFECT	4.7477677537030896E-7	IMPLEMENTATION	2.026061090246901E-7	TEST	1.3366318270755507E-7	DOCUMENTATION
//TODO: used to be exprNoParens! was this needed?	DESIGN	0.9999995814721451	DESIGN	2.927101051703902E-7	IMPLEMENTATION	5.753819013601827E-8	DOCUMENTATION	5.7035441481626354E-8	DEFECT	7.569607940960105E-9	TEST	3.674510110034896E-9	WITHOUT_CLASSIFICATION
// TODO: Replace this with a more elegant solution.	DESIGN	0.9960276508606832	DESIGN	0.003948578776831352	IMPLEMENTATION	1.603284442152997E-5	TEST	5.636902290273901E-6	DEFECT	1.819588256005765E-6	WITHOUT_CLASSIFICATION	2.8102751755794416E-7	DOCUMENTATION
// TODO: Should this really return null?  If not, figure out something better to do here.	DESIGN	0.9850305404139295	DESIGN	0.014930992708928727	IMPLEMENTATION	3.5917384628053774E-5	DEFECT	1.1617822672613672E-6	DOCUMENTATION	8.16479462208362E-7	WITHOUT_CLASSIFICATION	5.712307842765895E-7	TEST
//TODO: get SQL rendering out of this package!	DESIGN	0.9594143428916018	DESIGN	0.040499684295427815	WITHOUT_CLASSIFICATION	5.37437675451242E-5	IMPLEMENTATION	1.4617957520366685E-5	TEST	1.221427089507653E-5	DEFECT	5.396817009937771E-6	DOCUMENTATION
// yuck!	DESIGN	0.9995111947020482	WITHOUT_CLASSIFICATION	4.4323330017407826E-4	DESIGN	4.379977918497892E-5	DEFECT	1.044323436508695E-6	DOCUMENTATION	4.1907324297496866E-7	TEST	3.088219133569944E-7	IMPLEMENTATION
// ignore it; the incoming property could not be found so we // cannot be sure what to do here.  At the very least, the // safest is to simply not apply any dereference toggling...	DESIGN	0.9796569432808292	WITHOUT_CLASSIFICATION	0.014184772329329862	DESIGN	0.005850545460691798	DEFECT	2.925176719944258E-4	IMPLEMENTATION	1.1322406948681324E-5	TEST	3.898850206003427E-6	DOCUMENTATION
// TODO : most of below was taken verbatim from DotNode; should either delegate this logic or super-type it	DESIGN	0.9998958086458218	DESIGN	5.1132957295433026E-5	DEFECT	3.9765838523820443E-5	TEST	6.321405220431089E-6	WITHOUT_CLASSIFICATION	5.836199380631726E-6	IMPLEMENTATION	1.1349537577093638E-6	DOCUMENTATION
// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and "do the right thing" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character // the trim-source	DESIGN	0.9991549528088032	WITHOUT_CLASSIFICATION	8.431421787880243E-4	DESIGN	9.544350194533458E-7	IMPLEMENTATION	9.157276559044729E-7	DOCUMENTATION	3.2642360196035404E-8	TEST	2.2073733469091783E-9	DEFECT
// todo: we should really just collect these from the various SelectExpressions, rather than regenerating here	DESIGN	0.9584253249907474	WITHOUT_CLASSIFICATION	0.03751070989546989	DESIGN	0.004042039554104807	DEFECT	1.4396506828750874E-5	IMPLEMENTATION	7.331397416885411E-6	TEST	1.976554322492388E-7	DOCUMENTATION
//TODO: is this a bit ugly?	DESIGN	0.9999586021070468	DESIGN	2.8168273810585623E-5	IMPLEMENTATION	9.44557780339758E-6	DEFECT	2.0335002018238622E-6	TEST	1.0519395415589903E-6	DOCUMENTATION	6.986015958053288E-7	WITHOUT_CLASSIFICATION
// Need a better way to define the suffixes here...	DESIGN	0.7115867028542752	DESIGN	0.28629653799991794	WITHOUT_CLASSIFICATION	0.001942646910396933	IMPLEMENTATION	1.3020373010711386E-4	TEST	3.831158278985276E-5	DEFECT	5.596922512973581E-6	DOCUMENTATION
// TODO: something much better - look at the type of the other expression! // TODO: Have comparisonExpression and/or arithmeticExpression rules complete the resolution of boolean nodes.	DESIGN	0.9999731534851796	DESIGN	2.2191201972775887E-5	DEFECT	2.8754809778804935E-6	IMPLEMENTATION	1.5610359323412173E-6	TEST	1.977617773339808E-7	WITHOUT_CLASSIFICATION	2.1034159915987335E-8	DOCUMENTATION
// TODO : what amount of significant digits need to be supported here? //      - from the DecimalFormat docs: //          [significant digits] = [minimum integer digits] + [maximum fraction digits]	DESIGN	0.9377019892223735	DESIGN	0.038803920979358836	WITHOUT_CLASSIFICATION	0.021897168578947596	DOCUMENTATION	0.0012069520667818531	IMPLEMENTATION	2.807174508923538E-4	TEST	1.0925170164590742E-4	DEFECT
// Needed the "clazz_" check to work around union-subclasses // TODO : is there a way to tell whether a persister is truly discrim-column based inheritence?	DESIGN	0.9997139325318264	DESIGN	2.223935459847593E-4	IMPLEMENTATION	3.0068621092174223E-5	WITHOUT_CLASSIFICATION	2.9052312557735237E-5	TEST	4.2143500162878055E-6	DOCUMENTATION	3.3863852254527964E-7	DEFECT
//We should actually rework this class to not implement Parser //and just process path expressions in the most convenient way.	DESIGN	0.8974510055597856	DEFECT	0.05007108345639393	IMPLEMENTATION	0.034531756573729824	DESIGN	0.017930017451228165	WITHOUT_CLASSIFICATION	1.491707110259595E-5	DOCUMENTATION	1.219887759799746E-6	TEST
//The class is now way to complex!	DESIGN	0.9998561066922598	WITHOUT_CLASSIFICATION	9.241143620928565E-5	DESIGN	4.8098098769202336E-5	DEFECT	2.423080316262331E-6	IMPLEMENTATION	5.894999674397205E-7	TEST	3.7119247797919774E-7	DOCUMENTATION
//TODO: get SQL rendering out of here	DESIGN	0.9619690272813196	DESIGN	0.030159910537640024	WITHOUT_CLASSIFICATION	0.007507664923914077	IMPLEMENTATION	2.2323440770361422E-4	TEST	8.288907716864899E-5	DEFECT	5.7273772254064196E-5	DOCUMENTATION
//TODO: is there a better way?	DESIGN	0.9998965008773449	DESIGN	9.727508370543625E-5	IMPLEMENTATION	3.787121927774182E-6	TEST	1.408571872202132E-6	WITHOUT_CLASSIFICATION	6.89605298294751E-7	DEFECT	3.3873985151009014E-7	DOCUMENTATION
//Must be done here because of side-effect! yuck...	DESIGN	0.9682123850668257	WITHOUT_CLASSIFICATION	0.031678918565974046	DESIGN	8.695929511489631E-5	DEFECT	1.0054838459584251E-5	IMPLEMENTATION	6.252774974690905E-6	DOCUMENTATION	5.429458651180333E-6	TEST
//name from a super query (a bit inelegant that it shows up here)	DESIGN	0.8319869525630313	DESIGN	0.16767386751977092	WITHOUT_CLASSIFICATION	1.48839884033137E-4	DEFECT	1.0278622225635056E-4	IMPLEMENTATION	8.623196878582922E-5	TEST	1.3218421225025039E-6	DOCUMENTATION
// We should reengineer this class so that, rather than the current ad - // hoc linear approach to processing a stream of tokens, we instead // build up a tree of expressions.	DESIGN	0.7407097374545616	DESIGN	0.25373657365592645	WITHOUT_CLASSIFICATION	0.005551159318052481	DEFECT	2.1925454984821094E-6	DOCUMENTATION	3.3177469385860325E-7	TEST	5.251267147217E-9	IMPLEMENTATION
// this is ugly here, but needed because its a subquery	DESIGN	0.5552243505834376	DESIGN	0.4438834597493141	WITHOUT_CLASSIFICATION	5.260466106322508E-4	IMPLEMENTATION	2.1660537856341779E-4	DEFECT	1.358239104980536E-4	TEST	1.3713767554538409E-5	DOCUMENTATION
// unhappy about this being public ... is there a better way?	DESIGN	0.9999993613142774	DESIGN	3.283218050898694E-7	WITHOUT_CLASSIFICATION	1.7081944336433318E-7	DEFECT	8.458338605448237E-8	IMPLEMENTATION	5.185045464985893E-8	TEST	3.110633532226378E-9	DOCUMENTATION
// Make sure this is a defined parameter and check the incoming value type // TODO: what should be the actual exception type here?	DESIGN	0.7244874110197727	DESIGN	0.27424160746744985	IMPLEMENTATION	8.729873828086418E-4	WITHOUT_CLASSIFICATION	3.757391862166105E-4	DEFECT	2.1873226916906264E-5	TEST	3.817168352684541E-7	DOCUMENTATION
// TODO : this constructor form is *only* used from constructor directly below us; can it go away?	DESIGN	0.999997079208374	DESIGN	2.868109383254123E-6	IMPLEMENTATION	3.550579855507059E-8	TEST	8.400376106895695E-9	WITHOUT_CLASSIFICATION	4.601397038668221E-9	DEFECT	4.174671136008607E-9	DOCUMENTATION
//TODO: COPY/PASTE FROM SessionImpl, pull up!	DESIGN	0.7175176604437505	WITHOUT_CLASSIFICATION	0.2761963729654963	IMPLEMENTATION	0.004962317840945998	DESIGN	7.235257558820536E-4	DEFECT	3.231463717748308E-4	DOCUMENTATION	2.769766221503904E-4	TEST
// TODO : should remove this exposure //  and have all references to the session's batcher use the ConnectionManager.	DESIGN	0.9997925525254758	DESIGN	1.613296642339269E-4	IMPLEMENTATION	2.367779323481109E-5	WITHOUT_CLASSIFICATION	2.0795802859853493E-5	DEFECT	1.6153002083882182E-6	DOCUMENTATION	2.891398717780663E-8	TEST
// todo : should this get moved to PersistentContext? // logically, is PersistentContext the "thing" to which an interceptor gets attached?	DESIGN	0.9851220086966773	DESIGN	0.014789915448126257	WITHOUT_CLASSIFICATION	8.744716726706128E-5	DEFECT	6.129676712989479E-7	TEST	1.3646130460477923E-8	DOCUMENTATION	2.0741276817559636E-9	IMPLEMENTATION
// TODO: what type?	DESIGN	0.6451157938377775	IMPLEMENTATION	0.344793602203167	DESIGN	0.005331793314968672	WITHOUT_CLASSIFICATION	0.0032336500667026233	DEFECT	8.086487190561059E-4	TEST	7.165118583279831E-4	DOCUMENTATION
// todo : should seriously consider not allowing a txn to begin from a child session //      can always route the request to the root session...	DESIGN	0.9536747476156241	WITHOUT_CLASSIFICATION	0.024612064649913147	DEFECT	0.02157200105310023	DESIGN	1.1008653738631534E-4	IMPLEMENTATION	3.091839078058526E-5	TEST	1.817531956430522E-7	DOCUMENTATION
// short-circuit for performance...	DESIGN	0.9998810594475159	WITHOUT_CLASSIFICATION	1.1522558339497021E-4	DESIGN	1.7968545065664707E-6	DEFECT	1.0338770005843131E-6	DOCUMENTATION	6.257984502947319E-7	IMPLEMENTATION	2.584391318505479E-7	TEST
// not absolutely necessary, but does help with aggressive release	DESIGN	0.9998540943263592	WITHOUT_CLASSIFICATION	1.2937022109149135E-4	DESIGN	1.099778238488972E-5	IMPLEMENTATION	4.313153064991301E-6	TEST	1.1892785460651352E-6	DEFECT	3.5238553416215243E-8	DOCUMENTATION
// TODO : remove these last two as batcher is no longer managing connections	DESIGN	0.9589610047533654	DESIGN	0.0395694780259511	WITHOUT_CLASSIFICATION	5.926965620067391E-4	TEST	4.709911566640103E-4	DEFECT	3.7772317270708475E-4	IMPLEMENTATION	2.8106329305463362E-5	DOCUMENTATION
//work around a bug in all known connection pools....	DESIGN	0.9241795038124425	DESIGN	0.05265070648903907	DEFECT	0.017948926815362098	WITHOUT_CLASSIFICATION	0.005138479847112968	IMPLEMENTATION	8.194788078177832E-5	DOCUMENTATION	4.3515526179027126E-7	TEST
// TODO : make this the factory for "entity mode related" sessions; // also means making this the target of transaction-synch and the // thing that knows how to cascade things between related sessions // // At that point, perhaps this thing is a "SessionContext", and // ConnectionManager is a "JDBCContext"?  A "SessionContext" should // live in the impl package...	DESIGN	0.9999904754558501	DESIGN	9.521715872573091E-6	IMPLEMENTATION	2.0369502217950347E-9	DEFECT	6.739408972248237E-10	DOCUMENTATION	1.145575014428804E-10	TEST	2.8288398925353063E-12	WITHOUT_CLASSIFICATION
//TODO: does this really need to be here? //      does the collection already have //      it's own up-to-date snapshot?	DESIGN	0.9259644625752085	DESIGN	0.0431039920959552	WITHOUT_CLASSIFICATION	0.02741730140267608	IMPLEMENTATION	0.003388939489196214	DEFECT	1.0208925729815944E-4	TEST	2.3215179665687235E-5	DOCUMENTATION
//TODO: the i==entitySpan-1 bit depends upon subclass implementation (very bad)	DESIGN	0.9996323283024349	DESIGN	3.342634897870927E-4	IMPLEMENTATION	3.2805891492820065E-5	WITHOUT_CLASSIFICATION	3.347635021727462E-7	DOCUMENTATION	2.484343034323437E-7	DEFECT	1.9118479586313192E-8	TEST
/**	DESIGN	0.41247235596325493	DOCUMENTATION	0.37795729203980877	DESIGN	0.1053852951692493	IMPLEMENTATION	0.039437941980969234	WITHOUT_CLASSIFICATION	0.03307494829562861	DEFECT	0.031672166551089107	TEST
// todo : add the notion of enabled filters to the CacheKey to differentiate filtered collections from non-filtered; //      but CacheKey is currently used for both collections and entities; would ideally need to define two seperate ones; //      currently this works in conjuction with the check on //      DefaultInitializeCollectionEventHandler.initializeCollectionFromCache() (which makes sure to not read from //      cache with enabled filters). // EARLY EXIT!!!!!	DESIGN	0.6664902718422312	DESIGN	0.3334964023729701	WITHOUT_CLASSIFICATION	7.444872953968669E-6	DEFECT	3.061258481556613E-6	IMPLEMENTATION	1.6649329910851171E-6	DOCUMENTATION	1.1547203720508109E-6	TEST
//for sets, we should end the collection load after resolving //the entities, since we might call hashCode() on the elements //TODO: or we could do this polymorphically, and have two //      different operations implemented differently for arrays	DESIGN	0.9699316699520979	DESIGN	0.028599757350053417	DEFECT	0.0014675908960277535	WITHOUT_CLASSIFICATION	3.939488602670534E-7	IMPLEMENTATION	3.480691649687217E-7	DOCUMENTATION	2.397837957970232E-7	TEST
//This is not very nice (and quite slow):	DESIGN	0.7697042020458228	WITHOUT_CLASSIFICATION	0.13367482473596232	DESIGN	0.09633478456859186	DEFECT	2.588819896112113E-4	IMPLEMENTATION	1.4633285620967035E-5	DOCUMENTATION	1.2673374390823148E-5	TEST
//use of trim() here is ugly?	DESIGN	0.6046742642725738	DESIGN	0.39421090010151894	WITHOUT_CLASSIFICATION	8.699250559464536E-4	DEFECT	1.1663890224070634E-4	IMPLEMENTATION	9.635814729713909E-5	TEST	3.191352042295441E-5	DOCUMENTATION
//TODO: this is too conservative; if all preceding joins were  //      also inner joins, we could use an inner join here	DESIGN	0.9980266281448265	DESIGN	0.0015445678570480958	DEFECT	3.4427253760733047E-4	WITHOUT_CLASSIFICATION	3.680342741948336E-5	IMPLEMENTATION	2.7025524312002343E-5	DOCUMENTATION	2.070250878663011E-5	TEST
//TODO: look at the owning property and check that it  //      isn't lazy (by instrumentation)	DESIGN	0.7121322576407862	IMPLEMENTATION	0.2762301330863374	WITHOUT_CLASSIFICATION	0.010157689968801831	DEFECT	0.0013005598794522868	DOCUMENTATION	9.166890584033646E-5	DESIGN	8.76905187818749E-5	TEST
//TODO: inefficient	DESIGN	0.9293960334501817	DESIGN	0.05721137728325443	IMPLEMENTATION	0.012698317507676311	WITHOUT_CLASSIFICATION	5.425599365063817E-4	DOCUMENTATION	8.037023961966408E-5	TEST	7.134158276153734E-5	DEFECT
// why does this matter?	DESIGN	0.7382914223373847	WITHOUT_CLASSIFICATION	0.261027480690377	DESIGN	3.6153260046586954E-4	DEFECT	2.822162932446879E-4	TEST	3.0176335661047718E-5	DOCUMENTATION	7.171742866648899E-6	IMPLEMENTATION
// from the collection of associations, locate OJA for the // ManyToOne corresponding to this persister to fully // define the many-to-many; we need that OJA so that we can // use its alias here // TODO : is there a better way here?	DESIGN	0.9999987835803859	DESIGN	9.910671328676988E-7	IMPLEMENTATION	1.6569088340496113E-7	TEST	3.0990359500402065E-8	DOCUMENTATION	2.3992142435286337E-8	WITHOUT_CLASSIFICATION	4.679095859033956E-9	DEFECT
//TODO: this class depends directly upon CriteriaImpl,  //      in the impl package ... add a CriteriaImplementor  //      interface	DESIGN	0.9998628436345903	DESIGN	8.106544199426208E-5	IMPLEMENTATION	5.4074158228397016E-5	DEFECT	1.5559527374785537E-6	WITHOUT_CLASSIFICATION	3.4858194990709954E-7	DOCUMENTATION	1.1223049973730722E-7	TEST
//TODO: add a CriteriaImplementor interface //      this class depends directly upon CriteriaImpl in the impl package...	DESIGN	0.996174762234194	DESIGN	0.0025070165945450485	IMPLEMENTATION	0.0010733323443012828	DEFECT	2.3857725942675597E-4	WITHOUT_CLASSIFICATION	5.542682426960391E-6	DOCUMENTATION	7.688851058593514E-7	TEST
// TODO : not so sure this is needed...	DESIGN	0.9623784929499498	DESIGN	0.03645072780952841	IMPLEMENTATION	5.4208398985469E-4	TEST	5.035352993935039E-4	DEFECT	1.2472097361492516E-4	DOCUMENTATION	4.3897765849621695E-7	WITHOUT_CLASSIFICATION
// meant to handle dynamic instantiation queries...(Copy from QueryLoader)	DESIGN	0.9999645497774007	WITHOUT_CLASSIFICATION	3.340254452473104E-5	DESIGN	2.024965040024775E-6	DEFECT	1.7413230018152405E-8	DOCUMENTATION	2.8313775871926723E-9	TEST	2.4684267151261825E-9	IMPLEMENTATION
// TODO: The order in which entities are saved may matter (e.g., a particular transient entity //       may need to be saved before other transient entities can be saved; //       Keep retrying the batch of transient entities until either: //       1) there are no transient entities left in transientCopyCache //       or 2) no transient entities were saved in the last batch // For now, just run through the transient entities and retry the merge	DESIGN	0.6505263661973476	DESIGN	0.29154156080248605	WITHOUT_CLASSIFICATION	0.05727923279574418	DEFECT	5.492576908679606E-4	IMPLEMENTATION	8.712354555897324E-5	TEST	1.645896799543218E-5	DOCUMENTATION
// todo: this might really even be moved into the cfg package and used as the basis for all things which are configurable.	DESIGN	0.9753855783076272	DESIGN	0.023793595790615428	WITHOUT_CLASSIFICATION	6.330559169840118E-4	DEFECT	1.860896021638469E-4	IMPLEMENTATION	1.6295594003266866E-6	DOCUMENTATION	5.08232091324271E-8	TEST
// todo : currently expects that the individual with expressions apply to the same sql table join. //      This may not be the case for joined-subclass where the property values //      might be coming from different tables in the joined hierarchy.  At some //      point we should expand this to support that capability.  However, that has //      some difficulties: //          1) the biggest is how to handle ORs when the individual comparisons are //              linked to different sql joins. //          2) here we would need to track each comparison individually, along with //              the join alias to which it applies and then pass that information //              back to the FromElement so it can pass it along to the JoinSequence	DESIGN	0.9527083289853613	DEFECT	0.029994394501569852	WITHOUT_CLASSIFICATION	0.015481831345693673	IMPLEMENTATION	0.0017762154535966666	DESIGN	3.9012898939721874E-5	DOCUMENTATION	2.16814838870991E-7	TEST
// this function has a template -> restore output, apply the template and write the result out // TODO: Downcast to avoid using an interface?  Yuck.	DESIGN	0.9986046916364972	DESIGN	4.723542462551537E-4	TEST	4.544101330625953E-4	IMPLEMENTATION	4.441630656981099E-4	WITHOUT_CLASSIFICATION	1.7143062317698214E-5	DOCUMENTATION	7.237856169209731E-6	DEFECT
// at some point the generate phase needs to be moved out of here, // because a single object-level DML might spawn multiple SQL DML // command executions. // // Possible to just move the sql generation for dml stuff, but for // consistency-sake probably best to just move responsiblity for // the generation phase completely into the delegates // (QueryLoader/StatementExecutor) themselves.  Also, not sure why // QueryLoader currently even has a dependency on this at all; does // it need it?  Ideally like to see the walker itself given to the delegates directly...	DESIGN	0.999999887495424	DESIGN	1.1072695005989115E-7	DEFECT	1.6605244288957743E-9	WITHOUT_CLASSIFICATION	1.168419525584058E-10	DOCUMENTATION	2.594123232734282E-13	TEST	1.9106411348821561E-16	IMPLEMENTATION
// get the right object from the list ... would it be easier to just call getEntity() ??	DESIGN	0.7888455569453454	WITHOUT_CLASSIFICATION	0.21114011465217147	DESIGN	1.2185644356227544E-5	IMPLEMENTATION	2.083468843925756E-6	DEFECT	4.046465449542981E-8	TEST	1.882462848369708E-8	DOCUMENTATION
// TODO should we just collect these like with the collections above?	DESIGN	0.9723749474912337	IMPLEMENTATION	0.027582771948579658	DESIGN	4.140810007870463E-5	TEST	5.735375581310097E-7	DOCUMENTATION	1.7476514683603517E-7	WITHOUT_CLASSIFICATION	1.241574030013605E-7	DEFECT
// todo : better to handle dynamic filters through implicit DynamicFilterParameterSpecification // see the discussion there in DynamicFilterParameterSpecification's javadocs as to why // it is currently not done that way.	DESIGN	0.9536679073330899	WITHOUT_CLASSIFICATION	0.046044090849090974	DESIGN	2.8107840989949047E-4	DOCUMENTATION	5.708076115678808E-6	DEFECT	1.0463821776008315E-6	TEST	1.6894962621034854E-7	IMPLEMENTATION
/////////////////////////////////////////////////////////////////////////// // USED ONLY FOR REGRESSION TESTING!!!! // // todo : obviously get rid of all this junk ;) ///////////////////////////////////////////////////////////////////////////	DESIGN	0.7995040666950134	WITHOUT_CLASSIFICATION	0.19735017734197557	DESIGN	0.003129938325887778	IMPLEMENTATION	9.60496576156419E-6	DEFECT	3.7112149686418403E-6	DOCUMENTATION	2.501456393091793E-6	TEST
//create an index on the key columns??	DESIGN	0.999989183035603	WITHOUT_CLASSIFICATION	7.688499209668174E-6	DESIGN	2.759861725827608E-6	DEFECT	1.5037968765757995E-7	DOCUMENTATION	1.3056143473713814E-7	IMPLEMENTATION	8.766233918748767E-8	TEST
//TODO: deprecated, remove eventually	DESIGN	0.8873516019626502	DESIGN	0.10215235935126002	WITHOUT_CLASSIFICATION	0.008644562478940236	IMPLEMENTATION	0.0017274782245423818	DEFECT	1.0872285162488654E-4	DOCUMENTATION	1.5275130982501015E-5	TEST
//create an index on the key columns??	DESIGN	0.999989183035603	WITHOUT_CLASSIFICATION	7.688499209668174E-6	DESIGN	2.759861725827608E-6	DEFECT	1.5037968765757995E-7	DOCUMENTATION	1.3056143473713814E-7	IMPLEMENTATION	8.766233918748767E-8	TEST
//TODO: improve this hack!	DESIGN	0.9999984799332933	DESIGN	7.13032446380195E-7	IMPLEMENTATION	4.380395291397664E-7	TEST	2.2743400297733735E-7	DEFECT	7.662676035879784E-8	WITHOUT_CLASSIFICATION	6.493396797160595E-8	DOCUMENTATION
// inheritance cycle detection (paranoid check)	DESIGN	0.9994204724937636	WITHOUT_CLASSIFICATION	4.253827889973667E-4	DESIGN	1.5278549290190593E-4	IMPLEMENTATION	9.54754835429287E-7	DEFECT	3.743705179214377E-7	DOCUMENTATION	3.009898381304433E-8	TEST
//TODO: remove use of instanceof!	DESIGN	0.9534592621138156	DESIGN	0.040038855532835045	WITHOUT_CLASSIFICATION	0.0032765610873009125	IMPLEMENTATION	0.0029768504227901398	DEFECT	2.38991421176815E-4	DOCUMENTATION	9.479422081643954E-6	TEST
//shortcut	DESIGN	0.9994315185965261	WITHOUT_CLASSIFICATION	5.608993173418244E-4	DESIGN	2.8347244190015966E-6	DEFECT	2.3017718096772133E-6	DOCUMENTATION	2.2080946877800737E-6	TEST	2.3749521559378837E-7	IMPLEMENTATION
//TODO: handle the case of a foreign key to something other than the pk	DESIGN	0.9905537909281608	WITHOUT_CLASSIFICATION	0.005893670093040392	IMPLEMENTATION	0.003495311361940182	DESIGN	2.2940608798742996E-5	TEST	2.0072160375933447E-5	DOCUMENTATION	1.4214847684088504E-5	DEFECT
// create an index on the key columns??	DESIGN	0.9999984313894638	WITHOUT_CLASSIFICATION	9.134518925958336E-7	DEFECT	6.018562601813454E-7	DESIGN	2.5237915230889624E-8	IMPLEMENTATION	1.6488619683512E-8	DOCUMENTATION	1.1575848475432964E-8	TEST
// todo : remove	DESIGN	0.8947585749189153	WITHOUT_CLASSIFICATION	0.104376916203844	DESIGN	7.32664557076267E-4	DEFECT	1.1674347980676981E-4	IMPLEMENTATION	9.439155989792212E-6	TEST	5.661684367927664E-6	DOCUMENTATION
// todo : remove	DESIGN	0.8947585749189153	WITHOUT_CLASSIFICATION	0.104376916203844	DESIGN	7.32664557076267E-4	DEFECT	1.1674347980676981E-4	IMPLEMENTATION	9.439155989792212E-6	TEST	5.661684367927664E-6	DOCUMENTATION
// todo : remove	DESIGN	0.8947585749189153	WITHOUT_CLASSIFICATION	0.104376916203844	DESIGN	7.32664557076267E-4	DEFECT	1.1674347980676981E-4	IMPLEMENTATION	9.439155989792212E-6	TEST	5.661684367927664E-6	DOCUMENTATION
// todo : throw exception?	DESIGN	0.8215888181736396	WITHOUT_CLASSIFICATION	0.17323821075038073	DESIGN	0.00397888034825532	DEFECT	0.0011424316053328405	IMPLEMENTATION	2.679383079624033E-5	TEST	2.4865291595269235E-5	DOCUMENTATION
// todo : throw exception?  maybe warn if not the same?	DESIGN	0.42526832426857464	DESIGN	0.2869480357306715	WITHOUT_CLASSIFICATION	0.26700820742470155	DEFECT	0.020602745865238196	IMPLEMENTATION	1.2924800421675527E-4	TEST	4.3438706597424506E-5	DOCUMENTATION
//TODO: make EntityPersister *not* depend on SessionFactoryImplementor //interface, if possible	DESIGN	0.9987473257700751	DESIGN	9.770381525160898E-4	IMPLEMENTATION	1.8304898524270057E-4	WITHOUT_CLASSIFICATION	7.690610305667621E-5	DEFECT	1.3999728301030769E-5	TEST	1.6812608085239056E-6	DOCUMENTATION
//TODO: is there a more elegant way than downcasting?	DESIGN	0.9999963150558165	DESIGN	2.146614042305028E-6	WITHOUT_CLASSIFICATION	1.1751827212974457E-6	TEST	3.0952697794712846E-7	IMPLEMENTATION	3.046379123242391E-8	DEFECT	2.315665054073745E-8	DOCUMENTATION
// TODO: encapsulate the protected instance variables!	DESIGN	0.9452764673307499	IMPLEMENTATION	0.026948547037945865	WITHOUT_CLASSIFICATION	0.02270087044201697	DESIGN	0.0048665326061625375	DEFECT	1.293482735087028E-4	DOCUMENTATION	7.823430961596374E-5	TEST
// should indicate that we are processing an INSERT/UPDATE/DELETE // query with a subquery implied via a collection property // function. Here, we need to use the table name itself as the // qualification alias. // TODO : verify this works for all databases... // TODO : is this also the case in non-"indexed" scenarios?	DESIGN	0.9922929986007598	DESIGN	0.007473386015138466	IMPLEMENTATION	1.7740578950303963E-4	TEST	4.791671632659979E-5	DEFECT	4.8058104160715644E-6	DOCUMENTATION	3.487067856126594E-6	WITHOUT_CLASSIFICATION
//TODO: copy/paste from insertRows()	DESIGN	0.7582654088722663	WITHOUT_CLASSIFICATION	0.17382249793863908	DESIGN	0.052173760884043206	DEFECT	0.012868852214725866	IMPLEMENTATION	0.0025815106356239354	TEST	2.8796945470145217E-4	DOCUMENTATION
//TODO: copy/paste from recreate()	DESIGN	0.6982400176104893	WITHOUT_CLASSIFICATION	0.2494569479085886	DESIGN	0.04687765725067267	IMPLEMENTATION	0.004040789182119789	DEFECT	9.484917662276427E-4	TEST	4.3609628190184504E-4	DOCUMENTATION
//should this interface extend PropertyMapping?	DESIGN	0.9719337191008355	DESIGN	0.02804351947812498	WITHOUT_CLASSIFICATION	1.666686618048325E-5	DEFECT	5.1267067832807644E-6	TEST	9.542605117022466E-7	DOCUMENTATION	1.3587563935889718E-8	IMPLEMENTATION
//ie. the subquery! yuck!	DESIGN	0.9807688681629907	WITHOUT_CLASSIFICATION	0.019067516314923427	DESIGN	1.4506954318666216E-4	DEFECT	8.701906047929393E-6	IMPLEMENTATION	4.979008466782359E-6	TEST	4.8650643846014635E-6	DOCUMENTATION
//TODO: move to .sql package!!	DESIGN	0.9780706991602828	DESIGN	0.020984048358452065	WITHOUT_CLASSIFICATION	5.890806280496903E-4	IMPLEMENTATION	2.583079097061804E-4	DEFECT	6.662458799106791E-5	DOCUMENTATION	3.123935551814554E-5	TEST
//TODO: code duplication with SingleTableEntityPersister	DESIGN	0.9899817348771798	DESIGN	0.009975589599108388	WITHOUT_CLASSIFICATION	2.3673220916678544E-5	IMPLEMENTATION	1.0456205276945818E-5	TEST	8.408101741148526E-6	DOCUMENTATION	1.379957770147574E-7	DEFECT
// TODO: It would be really, really nice to use this to also model components!	DESIGN	0.9999974794310136	DESIGN	2.4403672728633814E-6	IMPLEMENTATION	4.3455437971616364E-8	DEFECT	3.2162459226181485E-8	WITHOUT_CLASSIFICATION	3.4587654084981465E-9	DOCUMENTATION	1.1250510772456126E-9	TEST
//TODO: *two* hashmap lookups here is one too many...	DESIGN	0.5156843430331364	DEFECT	0.26516407320513585	WITHOUT_CLASSIFICATION	0.21800845306691014	DESIGN	9.471626211509575E-4	IMPLEMENTATION	1.887248564770296E-4	TEST	7.2432171896040225E-6	DOCUMENTATION
//TODO: code duplication with JoinedSubclassEntityPersister	DESIGN	0.9648798637539042	DESIGN	0.03511070351093963	WITHOUT_CLASSIFICATION	3.821721077389635E-6	DOCUMENTATION	3.483382691018144E-6	TEST	1.966644642922536E-6	IMPLEMENTATION	1.6098674481038933E-7	DEFECT
//perhaps not really necessary...	DESIGN	0.8990242272223657	WITHOUT_CLASSIFICATION	0.09566810524948109	DESIGN	0.004916544717350302	DEFECT	3.8144895912757396E-4	IMPLEMENTATION	7.308854400351225E-6	DOCUMENTATION	2.3649972750366657E-6	TEST
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass! // was toUnqotedAliasStrings( getIdentiferColumnNames() ) before - now tried // to remove that unqoting and missing aliases..	DESIGN	0.6515193121189853	WITHOUT_CLASSIFICATION	0.3451220624896434	DESIGN	0.003108926641384637	DEFECT	2.4607881554837693E-4	TEST	3.131346032766947E-6	IMPLEMENTATION	4.885884057269181E-7	DOCUMENTATION
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass! // was toUnqotedAliasStrings( getdiscriminatorColumnName() ) before - now tried // to remove that unqoting and missing aliases..	DESIGN	0.5564950565597968	DESIGN	0.43454581735964576	WITHOUT_CLASSIFICATION	0.008465385569844613	DEFECT	4.928620350135219E-4	TEST	6.180243912915926E-7	DOCUMENTATION	2.604513081100426E-7	IMPLEMENTATION
//TODO: should we use SELECT .. FOR UPDATE?	DESIGN	0.9902553129460762	DESIGN	0.009054639142637622	IMPLEMENTATION	4.641717988811754E-4	WITHOUT_CLASSIFICATION	1.157355549254042E-4	DOCUMENTATION	9.030670935598146E-5	DEFECT	1.983384812393682E-5	TEST
//TODO: optimize this better!	DESIGN	0.5556382992259506	DESIGN	0.43745634535557887	IMPLEMENTATION	0.004777333934909254	WITHOUT_CLASSIFICATION	0.0012958119549561274	TEST	6.175809285749395E-4	DEFECT	2.1462860002999576E-4	DOCUMENTATION
//TODO: should we allow suffixes on these ?	DESIGN	0.9995860728919965	DESIGN	1.6886398676324213E-4	IMPLEMENTATION	1.4768794127906473E-4	WITHOUT_CLASSIFICATION	9.097195221452115E-5	DEFECT	4.032549000029122E-6	TEST	2.3706787465980495E-6	DOCUMENTATION
//This is really ugly, but necessary:	DESIGN	0.9241214914563652	DESIGN	0.07487036984364455	WITHOUT_CLASSIFICATION	9.954120189457935E-4	DEFECT	7.508716103216221E-6	IMPLEMENTATION	3.468161680865984E-6	DOCUMENTATION	1.7498032602887124E-6	TEST
//ugly little workaround for fact that createUniqueKeyLoaders() does not handle component properties	DESIGN	0.9999982398571586	DESIGN	1.687765801016816E-6	WITHOUT_CLASSIFICATION	6.758000420256596E-8	TEST	3.238102961688381E-9	IMPLEMENTATION	1.4152749215634454E-9	DOCUMENTATION	1.4365827638018E-10	DEFECT
//TODO: disable batch loading if lockMode > READ?	DESIGN	0.9906634283615819	WITHOUT_CLASSIFICATION	0.006185200988194282	IMPLEMENTATION	0.0013944471517301487	DEFECT	0.0013312601649922975	DESIGN	2.4356545694496817E-4	TEST	1.8209787655630116E-4	DOCUMENTATION
// append the SQL to return the generated identifier //TODO: suck into Insert	DESIGN	0.9160759038042737	DESIGN	0.08330473308189451	WITHOUT_CLASSIFICATION	6.05187072635465E-4	IMPLEMENTATION	8.120531988446334E-6	DEFECT	5.530857727754381E-6	DOCUMENTATION	5.246514801215065E-7	TEST
//TODO: I am not so sure about the exception handling in this bit!	DESIGN	0.9958913239072541	DESIGN	0.0032665193458334065	DEFECT	4.726734192903303E-4	IMPLEMENTATION	3.564953734573613E-4	WITHOUT_CLASSIFICATION	8.394755201284468E-6	DOCUMENTATION	4.593198963580646E-6	TEST
//TODO: is this really necessary????	DESIGN	0.9941094254194374	DESIGN	0.00547424763084098	WITHOUT_CLASSIFICATION	2.726133610872479E-4	IMPLEMENTATION	1.1411814442261279E-4	DEFECT	2.317121775613548E-5	DOCUMENTATION	6.4242264559180865E-6	TEST
//TODO: move to .sql package, and refactor with similar things!	DESIGN	0.9987840618612064	DESIGN	0.0012089736068578753	WITHOUT_CLASSIFICATION	2.836137146988587E-6	DEFECT	1.9209071374701753E-6	TEST	1.6327222255751514E-6	IMPLEMENTATION	5.747654257587304E-7	DOCUMENTATION
//TODO: implement functionality //  this might be painful to do here, as the "join post processing" for //  the subquery has already been performed (meaning that for //  theta-join dialects, the join conditions have already been moved //  over to the where clause).  A "simple" solution here might to //  perform "join post processing" once for the entire query (including //  any subqueries) at one fell swoop	DESIGN	0.9990827782627049	DESIGN	9.138045457009718E-4	IMPLEMENTATION	2.2415257673781397E-6	WITHOUT_CLASSIFICATION	1.061500140925335E-6	DEFECT	1.0934397776965888E-7	DOCUMENTATION	4.8217081427286834E-9	TEST
// todo : this eventually needs to be removed	DESIGN	0.9612516579947988	WITHOUT_CLASSIFICATION	0.038304598349968536	DESIGN	3.916362599937636E-4	DEFECT	4.9625979828449984E-5	IMPLEMENTATION	1.6879990573226385E-6	DOCUMENTATION	7.93416353122259E-7	TEST
//kinda ugly, but needed for collections with a "." node mapping	DESIGN	0.9938910563001773	WITHOUT_CLASSIFICATION	0.003661837769890681	IMPLEMENTATION	0.002208674506359364	DESIGN	1.4557628523098392E-4	DEFECT	9.068695836021037E-5	TEST	2.1681799815343236E-6	DOCUMENTATION
//is this ok?	DESIGN	0.9892735028068594	WITHOUT_CLASSIFICATION	0.010631433252064705	DESIGN	3.611180938690656E-5	DEFECT	2.54219096903937E-5	IMPLEMENTATION	1.9714604154210263E-5	TEST	1.3815617844412116E-5	DOCUMENTATION
//TODO: perhaps this should be some other RuntimeException...	DESIGN	0.9997042320977836	DESIGN	1.576173686335012E-4	DEFECT	1.3483415606049302E-4	IMPLEMENTATION	2.9021403486131023E-6	TEST	2.489484477913966E-7	DOCUMENTATION	1.6528872600695684E-7	WITHOUT_CLASSIFICATION
//TODO: make this a bit nicer	DESIGN	0.9992193381500164	DESIGN	5.556966939442371E-4	IMPLEMENTATION	1.392430734112678E-4	WITHOUT_CLASSIFICATION	5.480346597732618E-5	TEST	2.4431789411200027E-5	DEFECT	6.4868272395406625E-6	DOCUMENTATION
//Yuck:	DESIGN	0.8033405497333274	WITHOUT_CLASSIFICATION	0.19574129027919251	DESIGN	6.674172141149759E-4	DEFECT	1.0735451648970114E-4	DOCUMENTATION	8.431928564886035E-5	IMPLEMENTATION	5.906897122662997E-5	TEST
//TODO: we should provide some way to get keys of collection of statistics to make it easier to retrieve from a GUI perspective	DESIGN	0.9999996939061411	DESIGN	1.7497573092962188E-7	DEFECT	9.641564544496998E-8	IMPLEMENTATION	2.8661927856201303E-8	WITHOUT_CLASSIFICATION	5.193331293694215E-9	DOCUMENTATION	8.472233561053762E-10	TEST
/**	DESIGN	0.41247235596325493	DOCUMENTATION	0.37795729203980877	DESIGN	0.1053852951692493	IMPLEMENTATION	0.039437941980969234	WITHOUT_CLASSIFICATION	0.03307494829562861	DEFECT	0.031672166551089107	TEST
// TODO : will need reference to session factory to fully complete HHH-1907	DESIGN	0.9984435332185385	DESIGN	0.0013529519816103737	IMPLEMENTATION	1.0878814867702785E-4	WITHOUT_CLASSIFICATION	6.509030420501262E-5	DEFECT	2.5953671760485607E-5	DOCUMENTATION	3.6826752087250917E-6	TEST
//TODO: currently keeps Getters and Setters (instead of PropertyAccessors) because of the way getGetter() and getSetter() are implemented currently; yuck!	DESIGN	0.9999999499982356	DESIGN	1.8225069929604576E-8	DOCUMENTATION	1.813915433732674E-8	WITHOUT_CLASSIFICATION	1.2096922381583582E-8	DEFECT	8.350006760625253E-10	IMPLEMENTATION	7.056170438358612E-10	TEST
//TODO: redesign how PropertyAccessors are acquired...	DESIGN	0.8935192964345762	DESIGN	0.08625652487336032	DEFECT	0.011054473242746526	WITHOUT_CLASSIFICATION	0.007805073486676644	IMPLEMENTATION	8.699080500216979E-4	DOCUMENTATION	4.94723912618696E-4	TEST
// todo : YUCK!!!	DESIGN	0.9602054936416881	WITHOUT_CLASSIFICATION	0.030766717490076912	DESIGN	0.008658545436302857	DEFECT	2.7510883573722084E-4	IMPLEMENTATION	6.483478851986203E-5	DOCUMENTATION	2.9299807675113573E-5	TEST
// TODO : YUCK!!!  fix after HHH-1907 is complete	DESIGN	0.9989765170250499	DESIGN	5.134538086393259E-4	DEFECT	4.6316027271493083E-4	IMPLEMENTATION	4.179531142580682E-5	TEST	4.040483134343924E-6	WITHOUT_CLASSIFICATION	1.0330990357614565E-6	DOCUMENTATION
//TODO: need to make the majority of this functionality into a top-level support class for custom impl support	DESIGN	0.8586034769968416	DESIGN	0.14088877476544084	IMPLEMENTATION	2.8364857305980404E-4	WITHOUT_CLASSIFICATION	1.8497518945748405E-4	TEST	3.8793727964395144E-5	DOCUMENTATION	3.3074723601001855E-7	DEFECT
//TODO: design new lifecycle for ProxyFactory	DESIGN	0.5419689525803943	DESIGN	0.43912833690773334	WITHOUT_CLASSIFICATION	0.017024565090616	IMPLEMENTATION	0.0013777038972779929	DOCUMENTATION	3.314347900460032E-4	DEFECT	1.6900673393242246E-4	TEST
//TODO: would be nice to handle proxy classes elegantly!	DESIGN	0.9964402588335404	DESIGN	0.0024207694939277786	WITHOUT_CLASSIFICATION	8.654599935758228E-4	IMPLEMENTATION	2.4221350741699456E-4	DEFECT	1.92553870321569E-5	TEST	1.2042784506834336E-5	DOCUMENTATION
// TODO: copy/paste from ManyToOneType	DESIGN	0.4314406936275783	WITHOUT_CLASSIFICATION	0.3870717003436048	DESIGN	0.11979400095417887	IMPLEMENTATION	0.0567688836586784	DEFECT	0.0032777112850425013	TEST	0.001647010130917166	DOCUMENTATION
//TODO: should this be Session.instantiate(Persister, ...)?	DESIGN	0.9429622896925841	DESIGN	0.052139015040618436	WITHOUT_CLASSIFICATION	0.003497663116269003	DEFECT	0.0011848207323625088	IMPLEMENTATION	1.7699452111007643E-4	TEST	3.921689705567738E-5	DOCUMENTATION
//TODO: this is a bit arbitrary, expose a switch to the user?	DESIGN	0.9892898444200912	DESIGN	0.010544073547866252	WITHOUT_CLASSIFICATION	1.0826434763734188E-4	DEFECT	3.961601832677573E-5	IMPLEMENTATION	1.1207301100599113E-5	DOCUMENTATION	6.994364977839953E-6	TEST
//TODO: implement caching?! proxies?!	DESIGN	0.9605504395852988	IMPLEMENTATION	0.038341009121357024	DESIGN	4.665824003156891E-4	DEFECT	2.9044707910368713E-4	TEST	2.4084862493240584E-4	WITHOUT_CLASSIFICATION	1.1067318899226632E-4	DOCUMENTATION
//TODO: is this right??	DESIGN	0.9998617657576465	DESIGN	6.06383247934474E-5	WITHOUT_CLASSIFICATION	4.1665107799712816E-5	IMPLEMENTATION	2.129560406632459E-5	DEFECT	8.228068925015384E-6	TEST	6.407136768972134E-6	DOCUMENTATION
// is this really necessary?	DESIGN	0.9166621675085356	WITHOUT_CLASSIFICATION	0.0833225451775835	DESIGN	1.3974941294699508E-5	DEFECT	9.343248057006672E-7	DOCUMENTATION	2.3678503847951262E-7	TEST	1.4126274196297738E-7	IMPLEMENTATION
//TODO: move these to a new JoinableType abstract class, //extended by EntityType and PersistentCollectionType:	DESIGN	0.9873123296610804	DESIGN	0.01268084309316871	WITHOUT_CLASSIFICATION	6.619850462685712E-6	TEST	1.6269789535079002E-7	DEFECT	4.3184812270069684E-8	DOCUMENTATION	1.5125804740681958E-9	IMPLEMENTATION
// TODO: this is very suboptimal for some subclasses (namely components), // since it does not take advantage of two-phase-load	DESIGN	0.5087296436550441	WITHOUT_CLASSIFICATION	0.458209588579157	DESIGN	0.02971530241831704	DEFECT	0.0032980975467855754	TEST	3.10053834968461E-5	DOCUMENTATION	1.6362417199478147E-5	IMPLEMENTATION
// worrying about proxies is perhaps a little bit of overkill here...	DESIGN	0.9969373141407963	DESIGN	0.0024903243242862406	DEFECT	3.595875536346565E-4	WITHOUT_CLASSIFICATION	2.0985066987762576E-4	IMPLEMENTATION	2.8596103919448485E-6	TEST	6.37010131132384E-8	DOCUMENTATION
// NOTE VERY HACKISH WORKAROUND!! // TODO: Fix this so it will work for non-POJO entity mode	DESIGN	0.9999959772404833	DESIGN	3.057943467929581E-6	IMPLEMENTATION	9.166631041821659E-7	DEFECT	4.347614911250279E-8	TEST	4.676492197011478E-9	DOCUMENTATION	3.0313738721202035E-13	WITHOUT_CLASSIFICATION
// TODO: Fix this so it will work for non-POJO entity mode	DESIGN	0.959470856418469	DESIGN	0.03562745809481251	IMPLEMENTATION	0.004753703856927281	DEFECT	1.107712625153518E-4	TEST	3.585835624807224E-5	DOCUMENTATION	1.3520110280447817E-6	WITHOUT_CLASSIFICATION
// We would probably refactor to have LogicParser (builds a tree of simple // expressions connected by and, or, not), ExpressionParser (translates // from OO terms like foo, foo.Bar, foo.Bar.Baz to SQL terms like // FOOS.ID, FOOS.BAR_ID, etc) and PathExpressionParser (which does much // the same thing it does now)	DESIGN	0.9986213823093065	WITHOUT_CLASSIFICATION	0.001377717005403453	DESIGN	6.317752535566068E-7	IMPLEMENTATION	2.0629664646901305E-7	TEST	5.967998713835945E-8	DEFECT	2.933403084803191E-9	DOCUMENTATION
//TODO: this is a little inefficient, don't need to do a whole //      deep replaceElements() call	DESIGN	0.9999979023204354	DESIGN	2.002226874917952E-6	IMPLEMENTATION	7.581585497813955E-8	WITHOUT_CLASSIFICATION	1.3869956884464856E-8	TEST	4.520728157625787E-9	DOCUMENTATION	1.2461495029109107E-9	DEFECT
//workaround for WebLogic	DESIGN	0.983763044755201	DESIGN	0.016199862860060785	WITHOUT_CLASSIFICATION	2.5642363604865112E-5	IMPLEMENTATION	4.715815296518219E-6	DOCUMENTATION	3.865935335896666E-6	DEFECT	2.8682705008652897E-6	TEST
//TODO: this dependency is kinda Bad	DESIGN	0.9978248063035374	DESIGN	0.0018709777476626306	IMPLEMENTATION	1.2017813670719325E-4	DEFECT	1.1138769433648032E-4	DOCUMENTATION	3.87134641159763E-5	WITHOUT_CLASSIFICATION	3.393665364008931E-5	TEST
//ick!	DESIGN	0.9998398728646093	WITHOUT_CLASSIFICATION	1.1978893511256567E-4	DESIGN	3.2476506345131065E-5	DEFECT	4.8894400207821935E-6	DOCUMENTATION	1.643533637873215E-6	TEST	1.3287202744118079E-6	IMPLEMENTATION
// short cut check...	DESIGN	0.9992531213662531	WITHOUT_CLASSIFICATION	7.415846407435691E-4	DESIGN	2.499428092498595E-6	IMPLEMENTATION	1.2229847942101056E-6	DEFECT	9.366882299441262E-7	TEST	6.348918866077403E-7	DOCUMENTATION
// todo : move to StringHelper?	DESIGN	0.8401121547960952	WITHOUT_CLASSIFICATION	0.1588246198376379	DESIGN	0.001056642383712519	DEFECT	2.8462982944270026E-6	IMPLEMENTATION	1.992851261674069E-6	DOCUMENTATION	1.7438329983383894E-6	TEST
//yukky! Don't you have subclasses for that! //TODO race conditions can happen here	DESIGN	0.9427283861619555	DESIGN	0.05717646713774985	DEFECT	4.3442960310853774E-5	TEST	3.53710737981132E-5	DOCUMENTATION	9.894094471677851E-6	WITHOUT_CLASSIFICATION	6.438571713974844E-6	IMPLEMENTATION
//TODO: We probably should have a StatisticsNotPublishedException, to make it clean	DESIGN	0.9990527018364734	DESIGN	8.60546666216678E-4	WITHOUT_CLASSIFICATION	5.611030533420169E-5	DEFECT	2.6266248324936923E-5	IMPLEMENTATION	3.7390622892745147E-6	TEST	6.358813615677697E-7	DOCUMENTATION
// FIXME hack to work around fact that calling // Node added = root.addChild( fqn ); doesn't  // properly set the version on the node	DESIGN	0.9999838797473253	DESIGN	1.6082777741363878E-5	DEFECT	3.210905602641591E-8	IMPLEMENTATION	2.565671865727319E-9	TEST	1.5838901363498503E-9	DOCUMENTATION	1.2163151782471369E-9	WITHOUT_CLASSIFICATION
// TODO: I considered validating the presence of the TS cache here, // but decided to defer unti getQueryCacheInstance() in case the  // cache is never actually used	DESIGN	0.897483273454366	DESIGN	0.10095235651151842	IMPLEMENTATION	0.0013992903200520227	WITHOUT_CLASSIFICATION	1.564457226529108E-4	DEFECT	8.467244916589839E-6	DOCUMENTATION	1.667464942610684E-7	TEST
//need to do that here rather than in the save event listener to let //the post insert events to have a id-filled entity when IDENTITY is used (EJB3)	DESIGN	0.8817306877542677	WITHOUT_CLASSIFICATION	0.11799791043332497	DESIGN	2.331668949807663E-4	DEFECT	2.0006774356289734E-5	IMPLEMENTATION	1.728558252407563E-5	TEST	9.425605462749878E-7	DOCUMENTATION
//TODO: simply remove this override //      if we fix the above todos	DESIGN	0.9014745268856531	WITHOUT_CLASSIFICATION	0.08202448118971874	DESIGN	0.013256788880119767	DEFECT	0.002475803395592871	IMPLEMENTATION	7.621812242959923E-4	TEST	6.218424619350006E-6	DOCUMENTATION
// This, is used by SessionFactoryImpl to hand to the generated SessionImpl; // was the only reason I could see that we cannot just use null as // Settings.cacheProvider	DESIGN	0.5776398003407228	WITHOUT_CLASSIFICATION	0.422358871836843	DESIGN	1.2819119676139685E-6	DEFECT	2.2569783295432793E-8	TEST	1.298328196121125E-8	DOCUMENTATION	1.0357401341990641E-8	IMPLEMENTATION
// this is done here 'cos we might only know the type here (ugly!) // TODO: improve this a lot:	DESIGN	0.9995027511368453	DESIGN	4.926006329810363E-4	DEFECT	3.3806710454237396E-6	TEST	1.2411499094404147E-6	IMPLEMENTATION	2.5677023222587933E-8	DOCUMENTATION	7.321955571006207E-10	WITHOUT_CLASSIFICATION
// todo : would love to have this work on a notification basis //    where the successful binding of an entity/subclass would //    emit a notification which the extendsQueue entries could //    react to...	DESIGN	0.9831546427287998	WITHOUT_CLASSIFICATION	0.016292264186239008	DESIGN	5.52593442057709E-4	DEFECT	4.7190312838839457E-7	TEST	2.4112401042403584E-8	DOCUMENTATION	3.627374017050721E-9	IMPLEMENTATION
// TODO : not sure the best way to handle this. // The non-performant way :	DESIGN	0.9953969329313179	DESIGN	0.004155516054194872	IMPLEMENTATION	3.7714119782016335E-4	TEST	5.344929054815302E-5	DOCUMENTATION	1.4363020276963942E-5	DEFECT	2.5975058419827395E-6	WITHOUT_CLASSIFICATION
// would be better to use the element-type to determine // whether the old and the new are equal here; the problem being // we do not necessarily have access to the element type in all // cases	DESIGN	0.999977752200432	WITHOUT_CLASSIFICATION	2.220215153501729E-5	DESIGN	3.449297738428334E-8	IMPLEMENTATION	9.038001903573794E-9	DEFECT	1.995951768728584E-9	DOCUMENTATION	1.2110213018554962E-10	TEST
// This next bit is to allow for both unsaved-value="negative" // and for "older" behavior where version number did not get // seeded if it was already set in the object // TODO: shift it into unsaved-value strategy	DESIGN	0.9963334839745361	DESIGN	0.003666278865210829	WITHOUT_CLASSIFICATION	2.2085059056833602E-7	DEFECT	1.3850681504171687E-8	TEST	1.5131186878552667E-9	DOCUMENTATION	9.458623117081183E-10	IMPLEMENTATION
// merges don't cascade to uninitialized collections //	DESIGN	0.9999918005868105	WITHOUT_CLASSIFICATION	7.217205124138451E-6	DESIGN	4.7633518738622696E-7	IMPLEMENTATION	4.2961573982029064E-7	DEFECT	6.931209728621908E-8	TEST	6.945040994481144E-9	DOCUMENTATION
// TODO: an alternative is to check if the owner has changed; if it hasn't then // return collection.getOwner()	DESIGN	0.9883070958748286	IMPLEMENTATION	0.009118883127874958	WITHOUT_CLASSIFICATION	0.0015624094262284374	DEFECT	9.702807783900148E-4	DESIGN	4.02986095792083E-5	TEST	1.0321830988512886E-6	DOCUMENTATION
//it is possible that the tree-walking in OuterJoinLoader can get to //an association defined by a subclass, in which case the property-ref //might refer to a property defined on a subclass of the current class //in this case, the table name is not known - this temporary solution  //assumes that the property-ref refers to a property of the subclass //table that the association belongs to (a reasonable guess) //TODO: fix this, add: OuterJoinLoadable.getSubclassPropertyTableName(String propertyName)	DESIGN	0.9990663088124088	DESIGN	9.335254722014624E-4	DEFECT	9.407786080213702E-8	DOCUMENTATION	4.457153911035038E-8	TEST	2.5835403626715577E-8	WITHOUT_CLASSIFICATION	1.2305860664769717E-9	IMPLEMENTATION
// this only works because collection entries are kept in a sequenced // map by persistence context (maybe we should do like entities and // keep a separate sequences set...) //TODO: calling entrySet on an IdentityMap is SLOW!!	DESIGN	0.996635994173565	DESIGN	0.0033550255036863806	DEFECT	4.395979607698386E-6	WITHOUT_CLASSIFICATION	4.363032659519251E-6	IMPLEMENTATION	1.5398291415633138E-7	TEST	6.732756726449E-8	DOCUMENTATION
// important, to account for newly saved entities in query // todo : some kind of check for new status...	DESIGN	0.7348241148657604	WITHOUT_CLASSIFICATION	0.24610023451605278	DESIGN	0.0183196670099393	DEFECT	7.333696346377618E-4	IMPLEMENTATION	1.178205374069175E-5	TEST	1.0831919869065491E-5	DOCUMENTATION
// brand new collection //TODO: or an array!! we can't lock objects with arrays now??	DESIGN	0.7172389748724142	WITHOUT_CLASSIFICATION	0.1861479727556192	DEFECT	0.0878016907387313	DESIGN	0.008464922454159049	IMPLEMENTATION	2.877056770219077E-4	DOCUMENTATION	5.87335020543466E-5	TEST
//TODO: if object was an uninitialized proxy, this is inefficient, //      resulting in two SQL selects	DESIGN	0.790519561955324	WITHOUT_CLASSIFICATION	0.20675039384238628	DESIGN	0.0020740415910584175	DEFECT	5.886228840392142E-4	TEST	6.433306618093505E-5	DOCUMENTATION	3.0466610112427725E-6	IMPLEMENTATION
//before cascade! //TODO: should this be Session.instantiate(Persister, ...)?	DESIGN	0.7050872927869728	DESIGN	0.22856586536214948	DEFECT	0.054593364148859055	WITHOUT_CLASSIFICATION	0.010798291294347092	IMPLEMENTATION	7.465822747755312E-4	TEST	2.0860413289594963E-4	DOCUMENTATION
// TODO : absolutely no usages of this constructor form; can it go away?	DESIGN	0.9768972576140457	DESIGN	0.02303546966112571	IMPLEMENTATION	5.438531801731847E-5	TEST	7.090863614583441E-6	WITHOUT_CLASSIFICATION	5.194322638730223E-6	DOCUMENTATION	6.02220558067742E-7	DEFECT
// todo : need to find a clean way to handle the "event source" role // a seperate classs responsible for generating/dispatching events just duplicates most of the Session methods... // passing around seperate reto interceptor, factory, actionQueue, and persistentContext is not manageable...	DESIGN	0.9139795038741236	DESIGN	0.08598477019714652	WITHOUT_CLASSIFICATION	2.5344319857728245E-5	TEST	8.720957092990307E-6	IMPLEMENTATION	1.5024661111585608E-6	DEFECT	1.5818566799524896E-7	DOCUMENTATION
// todo : remove	DESIGN	0.8947585749189153	WITHOUT_CLASSIFICATION	0.104376916203844	DESIGN	7.32664557076267E-4	DEFECT	1.1674347980676981E-4	IMPLEMENTATION	9.439155989792212E-6	TEST	5.661684367927664E-6	DOCUMENTATION
//aliasRefNode.resolve( false, false, aliasRefNode.getText() ); //TODO: is it kosher to do it here? //TODO: is it kosher to do it here?	DESIGN	0.9924583082184174	IMPLEMENTATION	0.006743651938386058	DESIGN	5.862149689926256E-4	TEST	1.2778782752484496E-4	DEFECT	8.354887236010839E-5	WITHOUT_CLASSIFICATION	4.881743190414458E-7	DOCUMENTATION
// No explicit select expression; render the id and properties // projection lists for every persister in the from clause into // a single 'token node'. //TODO: the only reason we need this stuff now is collection filters, //      we should get rid of derived select clause completely!	DESIGN	0.9998398983602353	DESIGN	1.156597375349361E-4	DEFECT	4.038222398713614E-5	WITHOUT_CLASSIFICATION	3.7315363468349565E-6	TEST	3.1885714705417846E-7	DOCUMENTATION	9.284748502634118E-9	IMPLEMENTATION
// TODO : an optimization here would be to consider cascade deletes and not gen those delete statements; //      the difficulty is the ordering of the tables here vs the cascade attributes on the persisters -> //          the table info gotten here should really be self-contained (i.e., a class representation //          defining all the needed attributes), then we could then get an array of those	DESIGN	0.9978559458210694	DESIGN	0.0017720490715822461	IMPLEMENTATION	3.6789404584717145E-4	WITHOUT_CLASSIFICATION	3.003988313159571E-6	DEFECT	6.15850215297088E-7	DOCUMENTATION	4.912229727027142E-7	TEST
// TODO: get SQL rendering out of here, create an AST for the join expressions. // Use the SQL generator grammar to generate the SQL text for the index expression.	DESIGN	0.8230392701784084	WITHOUT_CLASSIFICATION	0.1678643272559844	DESIGN	0.008733407391297979	IMPLEMENTATION	3.2438155428876983E-4	TEST	2.182959643508598E-5	DOCUMENTATION	1.6784023585158485E-5	DEFECT
// TODO : this really needs to be delayed unitl after we definitively know all node types // where this is currently a problem is parameters for which where we cannot unequivocally // resolve an expected type	DESIGN	0.9996160172516971	DESIGN	3.58069425216505E-4	DEFECT	1.0357932430074027E-5	WITHOUT_CLASSIFICATION	9.486213529936088E-6	DOCUMENTATION	5.782895066246063E-6	IMPLEMENTATION	2.8628206022690546E-7	TEST
// TODO: Figure out a better way to get the FROM elements in a proper tree structure. // If this is not the destination of a many-to-many, add it as a child of the origin.	DESIGN	0.8299944458822547	DESIGN	0.12561114838739038	DEFECT	0.02544581073682521	IMPLEMENTATION	0.017291562425981604	WITHOUT_CLASSIFICATION	0.0014171336011393474	TEST	2.3989896640901328E-4	DOCUMENTATION
// work around that crazy issue where the tree contains // "empty" FromElements (no text); afaict, this is caused // by FromElementFactory.createCollectionJoin()	DESIGN	0.5503439366751011	DESIGN	0.4448341550239306	WITHOUT_CLASSIFICATION	0.0023977023097417893	IMPLEMENTATION	0.002377114516067387	DEFECT	3.925521153477012E-5	TEST	7.83626362428626E-6	DOCUMENTATION
//TODO: this class does too many things! we need a different //kind of path expression parser for each of the diffferent //ways in which path expressions can occur	DESIGN	0.912011583988333	DESIGN	0.08390494489544925	DEFECT	0.0020912616239293514	DOCUMENTATION	0.0018880712216051332	WITHOUT_CLASSIFICATION	6.835025946076213E-5	TEST	3.57880112224981E-5	IMPLEMENTATION
//real hacky... // used to count the nesting of parentheses	DESIGN	0.9999682420512617	DESIGN	2.9367690389491004E-5	IMPLEMENTATION	1.2052829188810257E-6	WITHOUT_CLASSIFICATION	8.83806867295016E-7	DEFECT	2.2485333628635345E-7	TEST	7.631522642747765E-8	DOCUMENTATION
// TODO : would be really nice to cache the spec on the query-def so as to not have to re-calc the hash; // currently not doable though because of the resultset-ref stuff...	DESIGN	0.9926340351467424	DESIGN	0.0026793207805007554	DEFECT	0.00251882722395152	WITHOUT_CLASSIFICATION	0.002134918521962789	IMPLEMENTATION	3.130993915474992E-5	DOCUMENTATION	1.5883876876254472E-6	TEST
//for arrays, we should end the collection load before resolving //the entities, since the actual array instances are not instantiated //during loading //TODO: or we could do this polymorphically, and have two //      different operations implemented differently for arrays	DESIGN	0.805153750517944	DEFECT	0.1873711656009404	DESIGN	0.007440638707159184	IMPLEMENTATION	2.983991924981461E-5	WITHOUT_CLASSIFICATION	3.1951818703232587E-6	DOCUMENTATION	1.4100728363370789E-6	TEST
// polymorphism not really handled completely correctly, // perhaps...well, actually its ok, assuming that the // entity name used in the lookup is the same as the // the one used here, which it will be	DESIGN	0.8556172044862863	WITHOUT_CLASSIFICATION	0.14336139297405995	DESIGN	0.0010196320022067232	DEFECT	1.6449718977098627E-6	IMPLEMENTATION	1.1290642383185764E-7	TEST	1.2659125421035934E-8	DOCUMENTATION
// TODO: should "record" how many properties we have reffered to - and if we  //       don't get'em'all we throw an exception! Way better than trial and error ;)	DESIGN	0.9664005522134987	DEFECT	0.03285041335759296	DESIGN	7.275084996650225E-4	WITHOUT_CLASSIFICATION	1.1799973849784678E-5	IMPLEMENTATION	8.497641820296043E-6	TEST	1.2283135731689383E-6	DOCUMENTATION
// VERY IMPORTANT!!!! - This class needs to be free of any static references // to any CGLIB or Javassist classes.  Otherwise, users will always need both // on their classpaths no matter which (if either) they use. // // Another option here would be to remove the Hibernate.isPropertyInitialized() // method and have the users go through the SessionFactory to get this information.	DESIGN	0.9999999532252707	WITHOUT_CLASSIFICATION	4.232894819647703E-8	DESIGN	3.901977495728869E-9	DEFECT	4.882254863927338E-10	DOCUMENTATION	2.787119405105618E-11	IMPLEMENTATION	2.770682260443585E-11	TEST
// TODO: is it really neceassry to provide Configuration to CollectionPersisters ? Should it not be enough with associated class ? // or why does EntityPersister's not get access to configuration ? // // The only reason I could see that Configuration gets passed to collection persisters // is so that they can look up the dom4j node name of the entity element in case // no explicit node name was applied at the collection element level.  Are you kidding me? // Trivial to fix then.  Just store and expose the node name on the entity persister // (which the collection persister looks up anyway via other means...).	DESIGN	0.9998909211604612	DESIGN	8.9343916247252E-5	WITHOUT_CLASSIFICATION	9.872099108089885E-6	DEFECT	9.144164730641399E-6	IMPLEMENTATION	3.952949685402346E-7	DOCUMENTATION	3.2336448446715245E-7	TEST
//for backward compatibility, allow a set with no not-null  //element columns, using all columns in the row locater SQL //TODO: create an implicit not null constraint on all cols?	DESIGN	0.6266884777474927	WITHOUT_CLASSIFICATION	0.3714951867987516	DESIGN	0.0016510113115100324	IMPLEMENTATION	1.0917811560674704E-4	TEST	4.846154999694533E-5	DEFECT	7.684476641799292E-6	DOCUMENTATION
//SPACES //TODO: i'm not sure, but perhaps we should exclude //      abstract denormalized tables?	DESIGN	0.9989995151265372	DESIGN	7.062218658125141E-4	IMPLEMENTATION	2.430884921210934E-4	DEFECT	2.5051871784394536E-5	TEST	1.6083483572044724E-5	WITHOUT_CLASSIFICATION	1.0039160172950812E-5	DOCUMENTATION
//workaround, for backward compatibility of sets with no //not-null columns, assume all columns are used in the //row locator SQL	DESIGN	0.986508022789703	WITHOUT_CLASSIFICATION	0.013491901838976587	DESIGN	6.94634832286558E-8	DEFECT	3.389641639848458E-9	TEST	2.006700306977592E-9	DOCUMENTATION	5.114952628375781E-10	IMPLEMENTATION
//note that this method could easily be moved up to BasicEntityPersister, //if we ever needed to reuse it from other subclasses	DESIGN	0.996848841372444	DESIGN	0.0031511010346935864	WITHOUT_CLASSIFICATION	4.596428872822655E-8	TEST	1.0567564173936532E-8	IMPLEMENTATION	6.665780236127486E-10	DOCUMENTATION	3.9443164328208663E-10	DEFECT
//index += getPropertyColumnSpan( i ); //TODO:  this is kinda slow...	DESIGN	0.9862307484256551	DEFECT	0.010170846515400365	DESIGN	0.0029460420635997026	IMPLEMENTATION	3.2462299253377614E-4	TEST	3.013650459960169E-4	WITHOUT_CLASSIFICATION	2.6374956815029766E-5	DOCUMENTATION
//TODO: need some caching scheme? really comes down to decision  //      regarding amount of state (if any) kept on PropertyAccessors	DESIGN	0.8929641173830385	DESIGN	0.0941962739063406	DEFECT	0.010335033969279582	WITHOUT_CLASSIFICATION	0.0018034009430564694	TEST	3.9986170444809637E-4	IMPLEMENTATION	3.013120938368689E-4	DOCUMENTATION
// TODO: here is why we need to make bytecode provider global :( // TODO : again, fix this after HHH-1907 is complete	DESIGN	0.9979957648160488	DESIGN	0.001953742401428222	IMPLEMENTATION	4.835635791010729E-5	TEST	1.7794789998576645E-6	DEFECT	3.5693964175395264E-7	DOCUMENTATION	5.971118564880464E-12	WITHOUT_CLASSIFICATION
//TODO: Yuck! This is not quite good enough, it's a quick //hack around the problem of having a to-one association //that refers to an embedded component:	DESIGN	0.9999997236678759	DESIGN	2.066835529132697E-7	DEFECT	5.884868928287856E-8	IMPLEMENTATION	6.27645927676021E-9	TEST	3.1730535818631455E-9	WITHOUT_CLASSIFICATION	1.3503690872154524E-9	DOCUMENTATION
// for DOM4J "collections" only // TODO: it would be better if this was done at the higher level by Printer	DESIGN	0.4747000744683992	WITHOUT_CLASSIFICATION	0.23220083244482825	DESIGN	0.177517652483542	TEST	0.1089328285100732	IMPLEMENTATION	0.006430602496028456	DEFECT	2.1800959712896882E-4	DOCUMENTATION
// would be great to move all this below here into another method that could also be used // from the new scrolling stuff. // // Would need to change the way the max-row stuff is handled (i.e. behind an interface) so // that I could do the control breaking at the means to know when to stop	DESIGN	0.9999995314746997	DESIGN	4.684572520839104E-7	WITHOUT_CLASSIFICATION	5.854904099156802E-11	TEST	6.058834663777476E-12	IMPLEMENTATION	2.129093987083833E-12	DEFECT	1.3112010361179602E-12	DOCUMENTATION
//TODO: can we *always* use the "null property" approach for everything?	DESIGN	0.9888784001707615	DESIGN	0.009661423980794908	WITHOUT_CLASSIFICATION	9.508892325392902E-4	IMPLEMENTATION	4.4448080813209637E-4	DEFECT	6.368563008188643E-5	DOCUMENTATION	1.120177690318159E-6	TEST
//polymorphism comment above	DESIGN	0.9999526696631789	WITHOUT_CLASSIFICATION	4.337668546666382E-5	DESIGN	3.391184084033723E-6	DEFECT	2.4946904253056766E-7	DOCUMENTATION	2.045868340672937E-7	TEST	1.0841139395033584E-7	IMPLEMENTATION
// some messy, complex stuff here, since createCriteria() can take an // aliased path, or a path rooted at the creating criteria instance	DESIGN	0.9999979403133595	WITHOUT_CLASSIFICATION	1.4267229238528606E-6	DEFECT	4.420215519532385E-7	DESIGN	1.5756749388913555E-7	IMPLEMENTATION	3.0694116989046115E-8	TEST	2.6805537245096603E-9	DOCUMENTATION
//TODO: really bad, evil hack to fix!!!	DESIGN	0.9999998022547996	DESIGN	1.3262713352779946E-7	DEFECT	6.249373067407917E-8	IMPLEMENTATION	2.4661116333417058E-9	DOCUMENTATION	1.3170639847797407E-10	TEST	2.6518156314512068E-11	WITHOUT_CLASSIFICATION
// ugly hack for cases like "elements(foo.bar.collection)" // (multi-part path expression ending in elements or indices)	DESIGN	0.9998902037301766	DESIGN	9.12351921457538E-5	DEFECT	1.7325235572872218E-5	WITHOUT_CLASSIFICATION	1.1775661695671298E-6	IMPLEMENTATION	4.293633373935936E-8	TEST	1.533960152526966E-8	DOCUMENTATION
// try block is a hack around fact that currently tuplizers are not // given the opportunity to resolve a subclass entity name.  this // allows the (we assume custom) interceptor the ability to // influence this decision if we were not able to based on the // given entityName	DESIGN	0.9999998944844942	DESIGN	1.0550828167563911E-7	WITHOUT_CLASSIFICATION	3.451969420917874E-12	TEST	2.0478480479349457E-12	DOCUMENTATION	1.703020416338887E-12	IMPLEMENTATION	2.128142475934635E-14	DEFECT
/////////////////////////////////////////////////////////////////////// // HACK ALERT !!!!!!!!!!!!!!!!!!!!!!!!!!!! // Attempt to work around "ghost" ImpliedFromElements that occasionally // show up between the actual things being joined.  This consistently // occurs from index nodes (at least against many-to-many).  Not sure // if there are other conditions // // Essentially, look-ahead to the next FromElement that actually // writes something to the SQL	DESIGN	0.9999886387218777	DESIGN	1.1277788838175979E-5	WITHOUT_CLASSIFICATION	4.638898632364409E-8	TEST	2.9624959351081838E-8	DEFECT	4.882480805594474E-9	IMPLEMENTATION	2.5928576508467775E-9	DOCUMENTATION
//init the table here instead of earlier, so that we can get a quoted table name //TODO: would it be better to simply pass the qualified table name, instead of //      splitting it up into schema/catalog/table names	DESIGN	0.9803984873473931	DESIGN	0.010707775570798201	WITHOUT_CLASSIFICATION	0.008889793017075525	IMPLEMENTATION	3.879769617281413E-6	TEST	3.430341670979241E-8	DEFECT	2.999169907780298E-8	DOCUMENTATION
// TODO : would be great to have a Mapping#hasNonIdentifierPropertyNamedId method // I don't believe that Mapping#getReferencedPropertyType accounts for the identifier property; so // if it returns for a property named 'id', then we should have a non-id field named id	DESIGN	0.9279555569392891	DESIGN	0.07189029671446653	WITHOUT_CLASSIFICATION	1.2713840207866577E-4	DEFECT	2.1469545274604553E-5	TEST	5.308822907003873E-6	IMPLEMENTATION	2.295759840307062E-7	DOCUMENTATION
//TODO: is this really necessary????	DESIGN	0.9941094254194374	DESIGN	0.00547424763084098	WITHOUT_CLASSIFICATION	2.726133610872479E-4	IMPLEMENTATION	1.1411814442261279E-4	DEFECT	2.317121775613548E-5	DOCUMENTATION	6.4242264559180865E-6	TEST
//TODO: ideally we need the construction of PropertyAccessor to take the following: //      1) EntityMode //      2) EntityMode-specific data (i.e., the classname for pojo entities) //      3) Property-specific data based on the EntityMode (i.e., property-name or dom4j-node-name) // The easiest way, with the introduction of the new runtime-metamodel classes, would be the // the following predicates: //      1) PropertyAccessorFactory.getPropertyAccessor() takes references to both a //          org.hibernate.metadata.EntityModeMetadata and org.hibernate.metadata.Property //      2) What is now termed a "PropertyAccessor" stores any values needed from those two //          pieces of information //      3) Code can then simply call PropertyAccess.getGetter() with no parameters; likewise with //          PropertyAccessor.getSetter()	DESIGN	0.5225838734267336	WITHOUT_CLASSIFICATION	0.4773815156569542	DESIGN	1.9015602611113072E-5	IMPLEMENTATION	6.962668943459589E-6	DOCUMENTATION	5.331781070743602E-6	DEFECT	3.3008636867781685E-6	TEST
//TODO: this is temporary in that the end result will probably not take a Property reference per-se.	DESIGN	0.999827795318449	DESIGN	1.7044533501400498E-4	DEFECT	1.7437495382479965E-6	WITHOUT_CLASSIFICATION	8.769094305640094E-9	DOCUMENTATION	6.782613804412117E-9	TEST	4.529062156787823E-11	IMPLEMENTATION
// todo : this eventually needs to be removed	DESIGN	0.9612516579947988	WITHOUT_CLASSIFICATION	0.038304598349968536	DESIGN	3.916362599937636E-4	DEFECT	4.9625979828449984E-5	IMPLEMENTATION	1.6879990573226385E-6	DOCUMENTATION	7.93416353122259E-7	TEST
//TODO: make this a bit nicer	DESIGN	0.9992193381500164	DESIGN	5.556966939442371E-4	IMPLEMENTATION	1.392430734112678E-4	WITHOUT_CLASSIFICATION	5.480346597732618E-5	TEST	2.4431789411200027E-5	DEFECT	6.4868272395406625E-6	DOCUMENTATION
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9934848589765084	DESIGN	0.006357697501848472	WITHOUT_CLASSIFICATION	1.3824586407019262E-4	DEFECT	1.8512911798884976E-5	IMPLEMENTATION	4.4959846410287775E-7	DOCUMENTATION	2.351473098642729E-7	TEST
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9934848589765084	DESIGN	0.006357697501848472	WITHOUT_CLASSIFICATION	1.3824586407019262E-4	DEFECT	1.8512911798884976E-5	IMPLEMENTATION	4.4959846410287775E-7	DOCUMENTATION	2.351473098642729E-7	TEST
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9934848589765084	DESIGN	0.006357697501848472	WITHOUT_CLASSIFICATION	1.3824586407019262E-4	DEFECT	1.8512911798884976E-5	IMPLEMENTATION	4.4959846410287775E-7	DOCUMENTATION	2.351473098642729E-7	TEST
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9934848589765084	DESIGN	0.006357697501848472	WITHOUT_CLASSIFICATION	1.3824586407019262E-4	DEFECT	1.8512911798884976E-5	IMPLEMENTATION	4.4959846410287775E-7	DOCUMENTATION	2.351473098642729E-7	TEST
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9934848589765084	DESIGN	0.006357697501848472	WITHOUT_CLASSIFICATION	1.3824586407019262E-4	DEFECT	1.8512911798884976E-5	IMPLEMENTATION	4.4959846410287775E-7	DOCUMENTATION	2.351473098642729E-7	TEST
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9934848589765084	DESIGN	0.006357697501848472	WITHOUT_CLASSIFICATION	1.3824586407019262E-4	DEFECT	1.8512911798884976E-5	IMPLEMENTATION	4.4959846410287775E-7	DOCUMENTATION	2.351473098642729E-7	TEST
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9934848589765084	DESIGN	0.006357697501848472	WITHOUT_CLASSIFICATION	1.3824586407019262E-4	DEFECT	1.8512911798884976E-5	IMPLEMENTATION	4.4959846410287775E-7	DOCUMENTATION	2.351473098642729E-7	TEST
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9934848589765084	DESIGN	0.006357697501848472	WITHOUT_CLASSIFICATION	1.3824586407019262E-4	DEFECT	1.8512911798884976E-5	IMPLEMENTATION	4.4959846410287775E-7	DOCUMENTATION	2.351473098642729E-7	TEST
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.9997083632120699	DESIGN	1.3881310186922093E-4	DOCUMENTATION	7.694087418952416E-5	DEFECT	7.045503385884581E-5	WITHOUT_CLASSIFICATION	4.158574445103033E-6	TEST	1.2692035674643248E-6	IMPLEMENTATION
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.9997083632120699	DESIGN	1.3881310186922093E-4	DOCUMENTATION	7.694087418952416E-5	DEFECT	7.045503385884581E-5	WITHOUT_CLASSIFICATION	4.158574445103033E-6	TEST	1.2692035674643248E-6	IMPLEMENTATION
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.9997083632120699	DESIGN	1.3881310186922093E-4	DOCUMENTATION	7.694087418952416E-5	DEFECT	7.045503385884581E-5	WITHOUT_CLASSIFICATION	4.158574445103033E-6	TEST	1.2692035674643248E-6	IMPLEMENTATION
// TODO : probably better to calculate these and pass them in, as it'll be more performant	DESIGN	0.9999990519942136	DESIGN	7.25240436805823E-7	IMPLEMENTATION	1.1427592113643758E-7	DOCUMENTATION	9.396712569597168E-8	DEFECT	9.62842948426499E-9	WITHOUT_CLASSIFICATION	4.8938732542672585E-9	TEST
