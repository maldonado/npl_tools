// todo : add support for READ_WRITE ( + NONSTRICT_READ_WRITE ??? )	IMPLEMENTATION	0.9785716378738161	WITHOUT_CLASSIFICATION	0.020896010014194544	IMPLEMENTATION	5.248856348300847E-4	DESIGN	4.381438694641503E-6	TEST	2.362151052181544E-6	DOCUMENTATION	7.22887412333658E-7	DEFECT
// todo : add support for READ_WRITE ( + NONSTRICT_READ_WRITE ??? )	IMPLEMENTATION	0.9785716378738161	WITHOUT_CLASSIFICATION	0.020896010014194544	IMPLEMENTATION	5.248856348300847E-4	DESIGN	4.381438694641503E-6	TEST	2.362151052181544E-6	DOCUMENTATION	7.22887412333658E-7	DEFECT
//TODO: return new Lock(ts);	IMPLEMENTATION	0.9636996718539893	WITHOUT_CLASSIFICATION	0.03574463796065678	DESIGN	2.823417484020791E-4	IMPLEMENTATION	2.0257743055297598E-4	DEFECT	5.310828818595504E-5	DOCUMENTATION	1.766271821296895E-5	TEST
//TODO: if lock.getTimestamp().equals(ts)	IMPLEMENTATION	0.8278129420440055	WITHOUT_CLASSIFICATION	0.05721160234211606	IMPLEMENTATION	0.050800463165506814	DEFECT	0.04553719167290328	DESIGN	0.01737535245776128	TEST	0.0012624483177071863	DOCUMENTATION
//TODO mappings.getLogicalTableName(ownerTable)	IMPLEMENTATION	0.8845396089416782	WITHOUT_CLASSIFICATION	0.09397960321141667	DESIGN	0.015936371838524414	IMPLEMENTATION	0.0031056193655641623	TEST	0.0020581943521839046	DEFECT	3.8060229063258556E-4	DOCUMENTATION
// TODO: handle TypeDefs	IMPLEMENTATION	0.9531837446618191	IMPLEMENTATION	0.02658737984394561	WITHOUT_CLASSIFICATION	0.01991467451451336	DESIGN	1.3084470738345153E-4	DOCUMENTATION	9.558285946339028E-5	TEST	8.777341287507826E-5	DEFECT
//TODO check there is no actual definition elemnents when a ref is defined	IMPLEMENTATION	0.8195655474809271	WITHOUT_CLASSIFICATION	0.17741799601265176	DESIGN	0.0029650422898860676	IMPLEMENTATION	2.141474388309969E-5	TEST	2.116035551603277E-5	DOCUMENTATION	8.839117135830549E-6	DEFECT
// TODO: bindpropertyresults(alias, returnElem)	IMPLEMENTATION	0.5445230765793294	DESIGN	0.40564027950484977	WITHOUT_CLASSIFICATION	0.02858770151739091	DEFECT	0.021014261914130375	IMPLEMENTATION	1.2822116001289367E-4	TEST	1.0645932428667557E-4	DOCUMENTATION
//TODO: validate existing of property with the chosen name. (secondpass )	IMPLEMENTATION	0.9153645528932352	WITHOUT_CLASSIFICATION	0.08121437416280906	DESIGN	0.001740939905809588	DEFECT	0.0013300782217708033	IMPLEMENTATION	2.6744345555693616E-4	TEST	8.261136081837378E-5	DOCUMENTATION
//TODO: native ids	IMPLEMENTATION	0.9082309372030329	WITHOUT_CLASSIFICATION	0.07988786173945607	IMPLEMENTATION	0.0072582893736920385	DESIGN	0.003162154492663535	DEFECT	8.398909130147813E-4	DOCUMENTATION	6.208662781406054E-4	TEST
//TODO: if we are using identity columns, fetch the identifier	IMPLEMENTATION	0.9999515784891553	WITHOUT_CLASSIFICATION	4.0658823780852624E-5	IMPLEMENTATION	3.5613884971054725E-6	DESIGN	2.0108895887887342E-6	DOCUMENTATION	1.4901810967347439E-6	TEST	7.002278810939297E-7	DEFECT
//TODO: handle property-ref	IMPLEMENTATION	0.7799337380995828	WITHOUT_CLASSIFICATION	0.11534899021834319	IMPLEMENTATION	0.09343291524371818	DESIGN	0.01019418416418414	DEFECT	6.849022283753057E-4	TEST	4.052700457964777E-4	DOCUMENTATION
//TODO: get all properties, not just the fetched ones!	IMPLEMENTATION	0.9967309687227726	WITHOUT_CLASSIFICATION	0.0012804698784425722	IMPLEMENTATION	0.0010065734111162933	DESIGN	9.301536546205019E-4	DEFECT	4.824161216718288E-5	TEST	3.592720880796302E-6	DOCUMENTATION
//TODO: get all properties, not just the fetched ones!	IMPLEMENTATION	0.9967309687227726	WITHOUT_CLASSIFICATION	0.0012804698784425722	IMPLEMENTATION	0.0010065734111162933	DESIGN	9.301536546205019E-4	DEFECT	4.824161216718288E-5	TEST	3.592720880796302E-6	DOCUMENTATION
/**	IMPLEMENTATION	0.7473852745238675	DESIGN	0.09040106869639221	WITHOUT_CLASSIFICATION	0.081661877013653	IMPLEMENTATION	0.0793016833748996	DEFECT	7.006091714672338E-4	DOCUMENTATION	5.494872197204492E-4	TEST
// TODO: RESTRICT VIOLATION	IMPLEMENTATION	0.774341358499899	IMPLEMENTATION	0.13021564892701434	WITHOUT_CLASSIFICATION	0.07729510938527466	DESIGN	0.014270185328265059	DEFECT	0.002290748297480267	DOCUMENTATION	0.0015869495620666862	TEST
// TODO: lowercasing done here. Was done "at random" before; maybe not needed at all ?	IMPLEMENTATION	0.7892294148873861	IMPLEMENTATION	0.2017843560994778	DESIGN	0.00885695492610157	DEFECT	1.0185018690939872E-4	TEST	2.4325870099243803E-5	WITHOUT_CLASSIFICATION	3.0980300259169985E-6	DOCUMENTATION
// TODO: toLowerCase was not done before. Only used in Template.	IMPLEMENTATION	0.9592808499818585	DESIGN	0.030321525260494957	WITHOUT_CLASSIFICATION	0.010000842709326666	DEFECT	3.125972154317349E-4	IMPLEMENTATION	5.417938051060277E-5	TEST	3.000545237760276E-5	DOCUMENTATION
// add an entry for this type of entity. // we can be assured that all referenced entities have already // been processed, // so specify that this entity is with the latest batch. // doing the batch number before adding the name to the list is // a faster way to get an accurate number.	IMPLEMENTATION	0.9999955121191006	WITHOUT_CLASSIFICATION	4.465490809362685E-6	DESIGN	1.2719350825333047E-8	TEST	9.574971248852996E-9	DOCUMENTATION	9.359600637372078E-11	IMPLEMENTATION	2.1718343925503235E-12	DEFECT
//TODO: avoid this for non-new instances where mightBeDirty==false	IMPLEMENTATION	0.8324186044960029	WITHOUT_CLASSIFICATION	0.16470212985512586	DESIGN	0.0025407791231679493	DEFECT	1.6945382970225443E-4	TEST	1.0701854389522977E-4	DOCUMENTATION	6.201415210584279E-5	IMPLEMENTATION
//TODO: optimize away this lookup for entities w/o unsaved-value="undefined"	IMPLEMENTATION	0.9952358770536887	WITHOUT_CLASSIFICATION	0.0032168173080148518	IMPLEMENTATION	0.0015215015742543777	DESIGN	1.053849895379347E-5	DOCUMENTATION	9.18236423420603E-6	TEST	6.083200854130855E-6	DEFECT
// we could move this inside if we wanted to // tolerate collection initializations during // collection dirty checking:	IMPLEMENTATION	0.9996007670752052	WITHOUT_CLASSIFICATION	3.9200556075579294E-4	DESIGN	6.713791285787863E-6	TEST	3.93602625356558E-7	IMPLEMENTATION	9.636001926900741E-8	DEFECT	2.3610108569437188E-8	DOCUMENTATION
//TODO: assertion only, could be optimized away	IMPLEMENTATION	0.623350570304632	WITHOUT_CLASSIFICATION	0.36034989326470146	IMPLEMENTATION	0.009964518760508117	DESIGN	0.0036123524936959514	TEST	0.0025799260899209255	DEFECT	1.4273908654141728E-4	DOCUMENTATION
//TODO: check that entry.getIdentifier().equals(requestedId)	IMPLEMENTATION	0.8756974588738754	IMPLEMENTATION	0.1233102217848268	WITHOUT_CLASSIFICATION	8.561682220715011E-4	DESIGN	7.887021724569941E-5	TEST	3.300093481068678E-5	DOCUMENTATION	2.4279967169940387E-5	DEFECT
//TODO: check that entry.getIdentifier().equals(requestedId)	IMPLEMENTATION	0.8756974588738754	IMPLEMENTATION	0.1233102217848268	WITHOUT_CLASSIFICATION	8.561682220715011E-4	DESIGN	7.887021724569941E-5	TEST	3.300093481068678E-5	DOCUMENTATION	2.4279967169940387E-5	DEFECT
// TODO : why aren't these the same?	IMPLEMENTATION	0.7505047223536142	IMPLEMENTATION	0.24686063067233321	DESIGN	0.0018002118527555282	DOCUMENTATION	5.241167003708274E-4	TEST	2.522500765918383E-4	DEFECT	5.80683443344472E-5	WITHOUT_CLASSIFICATION
//TODO: always true for now, but not if we later decide to support elements() in the from clause	IMPLEMENTATION	0.8636711165660764	DESIGN	0.0709235283284698	DEFECT	0.0648232643407516	WITHOUT_CLASSIFICATION	5.417368320158333E-4	IMPLEMENTATION	3.317709999297464E-5	DOCUMENTATION	7.1768326933258E-6	TEST
// TODO : or should we return 'containsTableAlias'??	IMPLEMENTATION	0.9964306856018467	DESIGN	0.003520260042288194	IMPLEMENTATION	2.9120070093250298E-5	WITHOUT_CLASSIFICATION	1.0449406677187175E-5	DEFECT	6.930860035949149E-6	DOCUMENTATION	2.5540190587866174E-6	TEST
//TODO: arithmetic expressions, multiple new Foo(...)	IMPLEMENTATION	0.7643422141421929	WITHOUT_CLASSIFICATION	0.17668431732727602	DESIGN	0.05755719777762126	IMPLEMENTATION	0.0010629687111041839	DEFECT	1.8778268841771067E-4	DOCUMENTATION	1.6551935338793812E-4	TEST
//TODO: for some dialects it would be appropriate to add the renderOrderByPropertiesSelect() to other select strings	IMPLEMENTATION	0.8342018610015873	DESIGN	0.11089659848694604	IMPLEMENTATION	0.050846124531857356	WITHOUT_CLASSIFICATION	0.003347032613564063	TEST	6.626445399116696E-4	DEFECT	4.5738826133579455E-5	DOCUMENTATION
//TODO: cache the persister, this shows up in yourkit	IMPLEMENTATION	0.780130726432155	DESIGN	0.20519332255224307	WITHOUT_CLASSIFICATION	0.01348756828828115	DEFECT	4.837649741720997E-4	IMPLEMENTATION	4.2231788253885256E-4	TEST	2.8229987060995936E-4	DOCUMENTATION
//TODO: theoretically non-threadsafe...	IMPLEMENTATION	0.796549967197175	WITHOUT_CLASSIFICATION	0.15883939897506044	DESIGN	0.03630578007921887	IMPLEMENTATION	0.007813141809150883	DEFECT	4.2906420164881163E-4	DOCUMENTATION	6.264773774588257E-5	TEST
// todo : look at optimizing these...	IMPLEMENTATION	0.9986232773167273	WITHOUT_CLASSIFICATION	0.0013168260676881007	IMPLEMENTATION	2.6764820323169185E-5	DEFECT	2.3417308188318588E-5	DESIGN	7.649702389259532E-6	TEST	2.06478468396836E-6	DOCUMENTATION
//TODO: maybe call it getRowSelection() ?	IMPLEMENTATION	0.9952564614404193	DESIGN	0.0018105865660111315	IMPLEMENTATION	0.0016953581807900465	WITHOUT_CLASSIFICATION	0.0012138290492499546	DEFECT	1.5740442238295936E-5	DOCUMENTATION	8.024321291323705E-6	TEST
//TODO: make this handle multiple collection roles!	IMPLEMENTATION	0.8628287964381062	DESIGN	0.13170155980827802	WITHOUT_CLASSIFICATION	0.0029287162080259663	DEFECT	0.0012704009934674085	IMPLEMENTATION	0.0012380966310980054	TEST	3.242992102446523E-5	DOCUMENTATION
//TODO: can we limit stored procedures ?!	IMPLEMENTATION	0.7071426622068919	WITHOUT_CLASSIFICATION	0.28862495211181616	DESIGN	0.004027867797962256	DEFECT	8.063755521439357E-5	IMPLEMENTATION	6.298921974416917E-5	TEST	6.089110837089329E-5	DOCUMENTATION
// TODO: not visible to the user!	IMPLEMENTATION	0.43665286088923005	IMPLEMENTATION	0.38911770006842605	WITHOUT_CLASSIFICATION	0.1285063858365677	DEFECT	0.043484440924019346	DESIGN	0.001492157989377002	DOCUMENTATION	7.464542923797564E-4	TEST
//TODO: unnecessary for databases with ANSI-style joins	IMPLEMENTATION	0.9236387343947781	WITHOUT_CLASSIFICATION	0.05448833808064178	IMPLEMENTATION	0.021472161936582485	DESIGN	3.251332533924104E-4	DEFECT	5.2683096596944985E-5	TEST	2.2949238008319017E-5	DOCUMENTATION
//TODO: use these in methods above	IMPLEMENTATION	0.5806469089432862	DESIGN	0.40712375372712495	WITHOUT_CLASSIFICATION	0.008427756084018303	IMPLEMENTATION	0.0021299296187095433	TEST	0.0012401788172683578	DEFECT	4.3147280959242854E-4	DOCUMENTATION
// TODO: better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.9771447893098626	DESIGN	0.021118411265390134	IMPLEMENTATION	0.0011600563868749438	WITHOUT_CLASSIFICATION	3.8376800868976277E-4	DEFECT	1.3466323589371703E-4	TEST	5.831179328887325E-5	DOCUMENTATION
// TODO: better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.9771447893098626	DESIGN	0.021118411265390134	IMPLEMENTATION	0.0011600563868749438	WITHOUT_CLASSIFICATION	3.8376800868976277E-4	DEFECT	1.3466323589371703E-4	TEST	5.831179328887325E-5	DOCUMENTATION
// TODO : temporary initial step towards HHH-1907	IMPLEMENTATION	0.9983671526665365	DESIGN	0.0011051091934639822	IMPLEMENTATION	2.8084306439966065E-4	DEFECT	1.9040273659628543E-4	WITHOUT_CLASSIFICATION	4.438853615330401E-5	TEST	1.2103802850122849E-5	DOCUMENTATION
// todo : remove this once ComponentMetamodel is complete and merged	IMPLEMENTATION	0.7803380204344745	DESIGN	0.21966183511434922	WITHOUT_CLASSIFICATION	1.2559005294287865E-7	TEST	7.402793236198126E-9	DOCUMENTATION	7.030477946755362E-9	IMPLEMENTATION	4.427852158975646E-9	DEFECT
//TODO handle supportsNotNullUnique=false, but such a case does not exist in the wild so far	IMPLEMENTATION	0.8428899507342896	WITHOUT_CLASSIFICATION	0.14435250353486767	DEFECT	0.00994923506824062	DESIGN	0.0019050024783965054	IMPLEMENTATION	7.936847892946779E-4	TEST	1.0962339491094995E-4	DOCUMENTATION
// TODO : still need to make CollectionPersisters EntityMode-aware	IMPLEMENTATION	0.9851401058529605	DESIGN	0.012729306233601299	IMPLEMENTATION	0.0013545015362809974	TEST	3.0555234192592616E-4	DOCUMENTATION	2.663780415415773E-4	DEFECT	2.0415599368955216E-4	WITHOUT_CLASSIFICATION
//TODO: add owner argument!!	IMPLEMENTATION	0.9444650593038216	WITHOUT_CLASSIFICATION	0.03188169292217816	IMPLEMENTATION	0.010365159686307865	DOCUMENTATION	0.009618182000214238	DEFECT	0.002844682349500918	DESIGN	8.252237379771616E-4	TEST
//TODO: formulas ?	IMPLEMENTATION	0.9408930632066506	WITHOUT_CLASSIFICATION	0.05852609619264307	DESIGN	3.962616344655123E-4	IMPLEMENTATION	1.1111721944978816E-4	DEFECT	4.576145336276932E-5	TEST	2.770029342838096E-5	DOCUMENTATION
//TODO: include the rowids!!!!	IMPLEMENTATION	0.5680196041146978	DESIGN	0.3685281918938228	WITHOUT_CLASSIFICATION	0.04825704825792762	IMPLEMENTATION	0.011003633008619125	DEFECT	0.003548148421919243	DOCUMENTATION	6.433743030134349E-4	TEST
// todo : cache this sql...	IMPLEMENTATION	0.9924097752346581	WITHOUT_CLASSIFICATION	0.007571665386750187	DESIGN	9.899439791074793E-6	IMPLEMENTATION	3.4803686042736062E-6	TEST	2.595715086835541E-6	DEFECT	2.5838551094116924E-6	DOCUMENTATION
//TODO: create uk loaders for component properties	IMPLEMENTATION	0.8935352542476112	WITHOUT_CLASSIFICATION	0.09349039073553234	DESIGN	0.009923320230041959	IMPLEMENTATION	0.0023795760449202073	DEFECT	6.19047915608047E-4	TEST	5.241082628638084E-5	DOCUMENTATION
//TODO: cache this in an instvar	IMPLEMENTATION	0.830476887219349	DESIGN	0.16931817450086897	WITHOUT_CLASSIFICATION	1.2503074786736207E-4	TEST	5.486403119059683E-5	DOCUMENTATION	1.9168643253858836E-5	DEFECT	5.874857470246342E-6	IMPLEMENTATION
/////////////////////////////////////////////////////////////////////// // TODO : look at perhaps caching this...	IMPLEMENTATION	0.9829122018619356	DESIGN	0.014007733789795716	IMPLEMENTATION	0.0017627778376282479	DEFECT	7.083844494573318E-4	TEST	3.799535638332976E-4	WITHOUT_CLASSIFICATION	2.2894849734980647E-4	DOCUMENTATION
//TODO: eventually put this back in, once we think all is fixed //Object otherAlias = columnsUnique.put(qualifiedColumn, columnAlias);	IMPLEMENTATION	0.5690753787954609	WITHOUT_CLASSIFICATION	0.2719791193652041	IMPLEMENTATION	0.15636543856804758	DESIGN	0.0017156957620843404	DEFECT	6.649103467177553E-4	DOCUMENTATION	1.9945716248541938E-4	TEST
//TODO: if we support multiple fetch groups, we would need //      to clone the set of lazy properties!	IMPLEMENTATION	0.9995658191105646	WITHOUT_CLASSIFICATION	3.4557398942560276E-4	IMPLEMENTATION	5.1866692115300274E-5	DESIGN	1.818769414127532E-5	DEFECT	1.7961536069528387E-5	TEST	5.90977683722742E-7	DOCUMENTATION
//TODO: proxies!	IMPLEMENTATION	0.9175460466537476	WITHOUT_CLASSIFICATION	0.04179483611554583	IMPLEMENTATION	0.0268252030097694	DESIGN	0.011876164940071147	DEFECT	0.001276694215581579	TEST	6.810550652845084E-4	DOCUMENTATION
//TODO: terrible implementation!	IMPLEMENTATION	0.8736431183463422	IMPLEMENTATION	0.11811283257405474	WITHOUT_CLASSIFICATION	0.004020840042886101	DEFECT	0.003588997966166821	DESIGN	4.380726914581437E-4	TEST	1.9613837909199325E-4	DOCUMENTATION
//TODO: proxies!	IMPLEMENTATION	0.9175460466537476	WITHOUT_CLASSIFICATION	0.04179483611554583	IMPLEMENTATION	0.0268252030097694	DESIGN	0.011876164940071147	DEFECT	0.001276694215581579	TEST	6.810550652845084E-4	DOCUMENTATION
// TODO: I don't really like this implementation; it would be better if // this was handled by searchForDirtyCollections()	IMPLEMENTATION	0.7405847476619365	DESIGN	0.25568668224652713	IMPLEMENTATION	0.003693526130898978	DEFECT	3.2557310517308826E-5	TEST	2.012046958865133E-6	WITHOUT_CLASSIFICATION	4.7460316130549075E-7	DOCUMENTATION
// TODO: check if key contains the owner ID	IMPLEMENTATION	0.9367025681797723	IMPLEMENTATION	0.0581885969442511	WITHOUT_CLASSIFICATION	0.004906400787987817	DESIGN	1.4104956372576504E-4	DOCUMENTATION	4.7729870933887424E-5	DEFECT	1.3654653329098573E-5	TEST
//TODO: proxies!	IMPLEMENTATION	0.9175460466537476	WITHOUT_CLASSIFICATION	0.04179483611554583	IMPLEMENTATION	0.0268252030097694	DESIGN	0.011876164940071147	DEFECT	0.001276694215581579	TEST	6.810550652845084E-4	DOCUMENTATION
// table=null -> an association // - fill it in later //TODO fill in the mappings for table == null	IMPLEMENTATION	0.9992614142018198	WITHOUT_CLASSIFICATION	3.8803314749165043E-4	DESIGN	2.656286833422928E-4	TEST	8.372990653839879E-5	DEFECT	9.232946966246613E-7	DOCUMENTATION	2.707661113130444E-7	IMPLEMENTATION
// table=null -> an association - fill // it in later //TODO fill in the mappings for table == null	IMPLEMENTATION	0.9992822332976328	WITHOUT_CLASSIFICATION	4.716480247522069E-4	DESIGN	2.080399912910991E-4	TEST	3.7584514657810074E-5	DEFECT	4.392043185168642E-7	DOCUMENTATION	5.496734747421821E-8	IMPLEMENTATION
// if we are still not resolved, we might represent a constant. //      needed to add this here because the allowance of //      naked-prop-refs in the grammar collides with the //      definition of literals/constants ("nondeterminism"). //      TODO: cleanup the grammar so that "processConstants" is always just handled from here	IMPLEMENTATION	0.9998876618545228	DESIGN	1.1157845300585733E-4	WITHOUT_CLASSIFICATION	3.542864509010989E-7	DOCUMENTATION	1.7686140437621217E-7	IMPLEMENTATION	1.6190577538909197E-7	TEST	6.66388404404E-8	DEFECT
//TODO: add referencedClass to disambiguate to FKs on the same //      columns, pointing to different tables	IMPLEMENTATION	0.9999678446250437	WITHOUT_CLASSIFICATION	1.4693509996167279E-5	DEFECT	1.1342590078995312E-5	DESIGN	4.709829450157456E-6	IMPLEMENTATION	1.169366329163664E-6	DOCUMENTATION	2.4007910167018177E-7	TEST
//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9994323439369523	WITHOUT_CLASSIFICATION	3.194508427753974E-4	TEST	2.4132714041207696E-4	IMPLEMENTATION	3.981515133965293E-6	DESIGN	2.22948988182749E-6	DOCUMENTATION	6.670748442502889E-7	DEFECT
// aload_0	WITHOUT_CLASSIFICATION	0.9999968321694566	WITHOUT_CLASSIFICATION	2.4242588583870465E-6	DESIGN	4.566889244515108E-7	DEFECT	2.1259323075869214E-7	IMPLEMENTATION	4.1123000554252055E-8	DOCUMENTATION	3.316652933607635E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999968321694566	WITHOUT_CLASSIFICATION	2.4242588583870465E-6	DESIGN	4.566889244515108E-7	DEFECT	2.1259323075869214E-7	IMPLEMENTATION	4.1123000554252055E-8	DOCUMENTATION	3.316652933607635E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999968321694566	WITHOUT_CLASSIFICATION	2.4242588583870465E-6	DESIGN	4.566889244515108E-7	DEFECT	2.1259323075869214E-7	IMPLEMENTATION	4.1123000554252055E-8	DOCUMENTATION	3.316652933607635E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999968321694566	WITHOUT_CLASSIFICATION	2.4242588583870465E-6	DESIGN	4.566889244515108E-7	DEFECT	2.1259323075869214E-7	IMPLEMENTATION	4.1123000554252055E-8	DOCUMENTATION	3.316652933607635E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999968321694566	WITHOUT_CLASSIFICATION	2.4242588583870465E-6	DESIGN	4.566889244515108E-7	DEFECT	2.1259323075869214E-7	IMPLEMENTATION	4.1123000554252055E-8	DOCUMENTATION	3.316652933607635E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999968321694566	WITHOUT_CLASSIFICATION	2.4242588583870465E-6	DESIGN	4.566889244515108E-7	DEFECT	2.1259323075869214E-7	IMPLEMENTATION	4.1123000554252055E-8	DOCUMENTATION	3.316652933607635E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999968321694566	WITHOUT_CLASSIFICATION	2.4242588583870465E-6	DESIGN	4.566889244515108E-7	DEFECT	2.1259323075869214E-7	IMPLEMENTATION	4.1123000554252055E-8	DOCUMENTATION	3.316652933607635E-8	TEST
// return	WITHOUT_CLASSIFICATION	0.9999911704791664	WITHOUT_CLASSIFICATION	7.4722031876870335E-6	DESIGN	6.864231282640529E-7	DEFECT	6.195127127820527E-7	IMPLEMENTATION	3.3732303078025076E-8	DOCUMENTATION	1.7649501928107135E-8	TEST
// return	WITHOUT_CLASSIFICATION	0.9999911704791664	WITHOUT_CLASSIFICATION	7.4722031876870335E-6	DESIGN	6.864231282640529E-7	DEFECT	6.195127127820527E-7	IMPLEMENTATION	3.3732303078025076E-8	DOCUMENTATION	1.7649501928107135E-8	TEST
/* | this | bean | args | raw bean | */	WITHOUT_CLASSIFICATION	0.999982088722816	WITHOUT_CLASSIFICATION	1.4587795695717527E-5	DESIGN	1.9041466703383342E-6	TEST	9.039410406197011E-7	IMPLEMENTATION	3.1181367219358024E-7	DEFECT	2.035801051194199E-7	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999992120548463	WITHOUT_CLASSIFICATION	7.301219053240696E-7	DESIGN	3.166591168143573E-8	DEFECT	1.737899848003468E-8	DOCUMENTATION	8.071608076308254E-9	TEST	7.067301393387633E-10	IMPLEMENTATION
// astore 4 // store the raw bean	WITHOUT_CLASSIFICATION	0.9999924336917343	WITHOUT_CLASSIFICATION	3.8114664062593235E-6	DESIGN	3.0398967903828626E-6	IMPLEMENTATION	4.0060208472371984E-7	TEST	2.233074975356189E-7	DEFECT	9.103548677538146E-8	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999990707875267	WITHOUT_CLASSIFICATION	6.272164362293186E-7	DESIGN	1.0664023926434915E-7	DEFECT	9.53503468110266E-8	IMPLEMENTATION	9.273601686538663E-8	DOCUMENTATION	7.269434091430942E-9	TEST
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999990707875267	WITHOUT_CLASSIFICATION	6.272164362293186E-7	DESIGN	1.0664023926434915E-7	DEFECT	9.53503468110266E-8	IMPLEMENTATION	9.273601686538663E-8	DOCUMENTATION	7.269434091430942E-9	TEST
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999994996287532	WITHOUT_CLASSIFICATION	4.3517086290774885E-7	DESIGN	5.657805533867469E-8	DEFECT	4.4531515557582265E-9	IMPLEMENTATION	2.9730077181245798E-9	TEST	1.1961693200816465E-9	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999997378339672	WITHOUT_CLASSIFICATION	2.394887814174043E-7	DESIGN	1.645954180966168E-8	DEFECT	2.8295236418108126E-9	TEST	1.7663527636729387E-9	DOCUMENTATION	1.6218330411836147E-9	IMPLEMENTATION
// putfield // new value of the field	WITHOUT_CLASSIFICATION	0.9999977079366607	WITHOUT_CLASSIFICATION	1.588150160769296E-6	DESIGN	3.399587097522073E-7	IMPLEMENTATION	3.1637794943177166E-7	DEFECT	3.2808555336743685E-8	DOCUMENTATION	1.4767964060150935E-8	TEST
// reference type	WITHOUT_CLASSIFICATION	0.9999985901209593	WITHOUT_CLASSIFICATION	1.1515899506237124E-6	DESIGN	1.2223498602543334E-7	IMPLEMENTATION	7.821555699574765E-8	DOCUMENTATION	4.8530975113106806E-8	DEFECT	9.307571913769704E-9	TEST
// double	WITHOUT_CLASSIFICATION	0.999997943447298	WITHOUT_CLASSIFICATION	1.793726688405522E-6	DESIGN	2.321732875102592E-7	DEFECT	1.1212342538098986E-8	IMPLEMENTATION	1.0711793705208231E-8	TEST	8.728589693622378E-9	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.999997943447298	WITHOUT_CLASSIFICATION	1.793726688405522E-6	DESIGN	2.321732875102592E-7	DEFECT	1.1212342538098986E-8	IMPLEMENTATION	1.0711793705208231E-8	TEST	8.728589693622378E-9	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999708508648996	WITHOUT_CLASSIFICATION	1.8020527619971168E-5	DEFECT	1.0469109675231729E-5	DESIGN	3.4910009890409815E-7	IMPLEMENTATION	1.6189921405943706E-7	DOCUMENTATION	1.484984922697912E-7	TEST
// just decrement the lock, don't recache // (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.9923084248777252	WITHOUT_CLASSIFICATION	0.007652598999479024	IMPLEMENTATION	1.687936270932274E-5	DOCUMENTATION	1.5648998553242995E-5	DESIGN	6.063073026932595E-6	DEFECT	3.8468850632131143E-7	TEST
// decode row selection...	WITHOUT_CLASSIFICATION	0.9998907544090373	WITHOUT_CLASSIFICATION	9.55276218679742E-5	DESIGN	8.497440211510758E-6	IMPLEMENTATION	4.711262474814723E-6	DEFECT	2.8450763195933965E-7	DOCUMENTATION	2.2475877650975935E-7	TEST
//disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.9999046923735189	WITHOUT_CLASSIFICATION	9.286688606062341E-5	DESIGN	2.2852190201285996E-6	DEFECT	8.36046641732857E-8	TEST	5.49427016579951E-8	DOCUMENTATION	1.6974034594413902E-8	IMPLEMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999999662538737	WITHOUT_CLASSIFICATION	2.7249630211025335E-8	DESIGN	5.336842310698871E-9	DEFECT	9.655131138903008E-10	IMPLEMENTATION	1.672227767481613E-10	TEST	2.6917900589482908E-11	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999699195639481	WITHOUT_CLASSIFICATION	2.899702572780628E-5	DESIGN	6.500644125652516E-7	DEFECT	1.8379492902016322E-7	DOCUMENTATION	1.420901908527506E-7	TEST	1.0746079181602427E-7	IMPLEMENTATION
// ROW ID	WITHOUT_CLASSIFICATION	0.999962874206027	WITHOUT_CLASSIFICATION	2.5823402445435057E-5	DESIGN	8.029132124266838E-6	IMPLEMENTATION	2.4451254806838836E-6	DEFECT	4.489739990913051E-7	DOCUMENTATION	3.791599234732733E-7	TEST
// COMPOSITE-ID	WITHOUT_CLASSIFICATION	0.9999962051517713	WITHOUT_CLASSIFICATION	2.8601709908989164E-6	DESIGN	3.866051338751113E-7	DEFECT	2.545342230929849E-7	IMPLEMENTATION	2.0476043566572476E-7	DOCUMENTATION	8.877744505687159E-8	TEST
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9998764946712931	WITHOUT_CLASSIFICATION	7.822683395724707E-5	IMPLEMENTATION	3.4531711121345124E-5	DESIGN	6.64388050626347E-6	DEFECT	2.60757063745517E-6	DOCUMENTATION	1.495332484642253E-6	TEST
/*	WITHOUT_CLASSIFICATION	0.9625855444912206	WITHOUT_CLASSIFICATION	0.026097610924683663	DESIGN	0.00739982775603616	DEFECT	0.003707326217175183	IMPLEMENTATION	1.0587277362289763E-4	DOCUMENTATION	1.038178372614674E-4	TEST
// DYNAMIC INSERT	WITHOUT_CLASSIFICATION	0.9997574541490333	WITHOUT_CLASSIFICATION	1.7580818536700797E-4	DESIGN	6.0248664940993E-5	IMPLEMENTATION	3.0101748089128805E-6	DEFECT	2.2213147284505104E-6	DOCUMENTATION	1.2575111213373656E-6	TEST
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999927492055899	WITHOUT_CLASSIFICATION	3.5634017844431534E-6	DESIGN	2.408575543619636E-6	IMPLEMENTATION	6.839581727545458E-7	DEFECT	3.833892888579051E-7	DOCUMENTATION	2.1146962041371228E-7	TEST
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999867006587734	WITHOUT_CLASSIFICATION	1.3243235186147807E-5	DESIGN	5.039030007733648E-8	DEFECT	3.886386400767501E-9	TEST	1.6388903980296285E-9	DOCUMENTATION	1.90463613566348E-10	IMPLEMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999935996453612	WITHOUT_CLASSIFICATION	3.4953616016158255E-6	DESIGN	1.7736340158713255E-6	IMPLEMENTATION	5.558921067786602E-7	DEFECT	3.757606975958942E-7	DOCUMENTATION	1.9970621704131538E-7	TEST
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999935996453612	WITHOUT_CLASSIFICATION	3.4953616016158255E-6	DESIGN	1.7736340158713255E-6	IMPLEMENTATION	5.558921067786602E-7	DEFECT	3.757606975958942E-7	DOCUMENTATION	1.9970621704131538E-7	TEST
// generated properties can *never* be insertable...	WITHOUT_CLASSIFICATION	0.9999497369448133	WITHOUT_CLASSIFICATION	5.016977492637324E-5	DESIGN	3.906205108426525E-8	TEST	2.7635890385670464E-8	IMPLEMENTATION	2.599723445849885E-8	DEFECT	5.850843797345219E-10	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9999969917965663	WITHOUT_CLASSIFICATION	1.179115845388376E-6	DESIGN	1.0604837812580882E-6	DEFECT	5.647272849087585E-7	IMPLEMENTATION	1.1911951039240018E-7	DOCUMENTATION	8.475701178169726E-8	TEST
//by default, natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.9996798115926697	WITHOUT_CLASSIFICATION	3.1886881356202394E-4	DESIGN	8.635932461325764E-7	IMPLEMENTATION	3.712797371913374E-7	DEFECT	6.325779946397914E-8	DOCUMENTATION	2.1462985503679004E-8	TEST
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999506844753864	WITHOUT_CLASSIFICATION	4.3627558026952636E-5	DESIGN	2.979035835098219E-6	DEFECT	2.662508015915914E-6	IMPLEMENTATION	2.6640920421037805E-8	DOCUMENTATION	1.978181526712994E-8	TEST
// we found some extends attributes referencing entities which were // not already processed.  here we need to locate all entity-names // and class-names contained in this document itself, making sure // that these get removed from the extendz list such that only // extends names which require us to delay processing (i.e. // external to this document and not yet processed) are contained // in the returned result	WITHOUT_CLASSIFICATION	0.7146070654677248	WITHOUT_CLASSIFICATION	0.2853083446680699	DESIGN	8.36868334746914E-5	DOCUMENTATION	8.238361873917677E-7	IMPLEMENTATION	7.794053362514463E-8	TEST	1.2540095933691558E-9	DEFECT
/**	WITHOUT_CLASSIFICATION	0.7473852745238675	DESIGN	0.09040106869639221	WITHOUT_CLASSIFICATION	0.081661877013653	IMPLEMENTATION	0.0793016833748996	DEFECT	7.006091714672338E-4	DOCUMENTATION	5.494872197204492E-4	TEST
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.7473852745238675	DESIGN	0.09040106869639221	WITHOUT_CLASSIFICATION	0.081661877013653	IMPLEMENTATION	0.0793016833748996	DEFECT	7.006091714672338E-4	DOCUMENTATION	5.494872197204492E-4	TEST
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// If close() is called, guarantee unbind()	WITHOUT_CLASSIFICATION	0.9999996591345768	WITHOUT_CLASSIFICATION	2.3357270637398542E-7	DEFECT	9.325241134542692E-8	IMPLEMENTATION	1.0666495928546157E-8	DESIGN	1.7869860665762516E-9	TEST	1.5868235957264316E-9	DOCUMENTATION
// if a ThreadLocalSessionContext-bound session happens to get // serialized, to be completely correct, we need to make sure // that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.9999972786943143	WITHOUT_CLASSIFICATION	2.6794847159324626E-6	DESIGN	3.517548719059407E-8	DEFECT	4.886172528848097E-9	TEST	1.5707042274241618E-9	DOCUMENTATION	1.8860589514206633E-10	IMPLEMENTATION
// on the inverse, it makes sense that if a ThreadLocalSessionContext- // bound session then gets deserialized to go ahead and re-bind it to // the ThreadLocalSessionContext session map.	WITHOUT_CLASSIFICATION	0.9999998809704891	WITHOUT_CLASSIFICATION	1.1815977048581798E-7	DESIGN	4.4396706398710475E-10	DEFECT	2.315734149069672E-10	TEST	1.115136334066868E-10	IMPLEMENTATION	8.268621237989095E-11	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9991209457608161	WITHOUT_CLASSIFICATION	8.62931197258863E-4	DESIGN	1.2168013392097977E-5	IMPLEMENTATION	1.6531677891146587E-6	DEFECT	1.2651816971227823E-6	DOCUMENTATION	1.0366790466420514E-6	TEST
// 60 second lock timeout	WITHOUT_CLASSIFICATION	0.9999822955355723	WITHOUT_CLASSIFICATION	1.4219880530694024E-5	DESIGN	2.050516600667174E-6	DEFECT	7.27682370339263E-7	IMPLEMENTATION	6.572158634907672E-7	DOCUMENTATION	4.916906251182699E-8	TEST
// OptimisticCache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999951399956907	WITHOUT_CLASSIFICATION	3.036123902725339E-6	IMPLEMENTATION	1.5583119156048481E-6	DESIGN	1.1553777040852367E-7	DEFECT	8.575989974289148E-8	DOCUMENTATION	6.427082086079225E-8	TEST
// Cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999945846883038	WITHOUT_CLASSIFICATION	3.2127876738776634E-6	DESIGN	1.5502899460094005E-6	IMPLEMENTATION	4.638987466514626E-7	DEFECT	1.3137427049637898E-7	DOCUMENTATION	5.6961059034156E-8	TEST
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// do the put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999919418878516	WITHOUT_CLASSIFICATION	6.618138175865212E-6	DESIGN	6.44261106568897E-7	DEFECT	4.621537319328158E-7	IMPLEMENTATION	3.020543036323779E-7	DOCUMENTATION	3.1504830483775644E-8	TEST
//ignore!	WITHOUT_CLASSIFICATION	0.9998613823750316	WITHOUT_CLASSIFICATION	6.89543115763067E-5	DESIGN	5.335256870972037E-5	DEFECT	7.326919084541686E-6	IMPLEMENTATION	7.179373855464395E-6	DOCUMENTATION	1.8044517425051005E-6	TEST
// tree cache in optimistic mode seems to have as very difficult // time with remove calls on non-existent nodes (NPEs)...	WITHOUT_CLASSIFICATION	0.9998439355114693	WITHOUT_CLASSIFICATION	1.4834689946119025E-4	DESIGN	7.147121946342657E-6	DEFECT	5.436036070078665E-7	IMPLEMENTATION	1.7135427995320777E-8	DOCUMENTATION	9.72808821188499E-9	TEST
//60 seconds	WITHOUT_CLASSIFICATION	0.999890066530584	WITHOUT_CLASSIFICATION	9.15095991973677E-5	DESIGN	1.2730473995201504E-5	IMPLEMENTATION	3.5060904046438066E-6	DOCUMENTATION	1.2853301427804543E-6	DEFECT	9.019756760522527E-7	TEST
//ignore!	WITHOUT_CLASSIFICATION	0.9998613823750316	WITHOUT_CLASSIFICATION	6.89543115763067E-5	DESIGN	5.335256870972037E-5	DEFECT	7.326919084541686E-6	IMPLEMENTATION	7.179373855464395E-6	DOCUMENTATION	1.8044517425051005E-6	TEST
//60 seconds	WITHOUT_CLASSIFICATION	0.999890066530584	WITHOUT_CLASSIFICATION	9.15095991973677E-5	DESIGN	1.2730473995201504E-5	IMPLEMENTATION	3.5060904046438066E-6	DOCUMENTATION	1.2853301427804543E-6	DEFECT	9.019756760522527E-7	TEST
//do the failfast put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999899302860406	WITHOUT_CLASSIFICATION	6.224998013639573E-6	DESIGN	1.7646323202430018E-6	DEFECT	1.0154907774151192E-6	TEST	5.39256538012171E-7	IMPLEMENTATION	5.253363102042843E-7	DOCUMENTATION
// NOTE : evict() operates locally only (i.e., does not propogate // to any other nodes in the potential cluster).  This is // exactly what is needed when we destroy() here; destroy() is used // as part of the process of shutting down a SessionFactory; thus // these removals should not be propogated	WITHOUT_CLASSIFICATION	0.9789620405941778	DESIGN	0.02095631605341199	WITHOUT_CLASSIFICATION	6.466692759599171E-5	DEFECT	1.690935916646339E-5	TEST	5.5287107905372886E-8	DOCUMENTATION	1.1778540006917367E-8	IMPLEMENTATION
//    protected RegionRootListener listener;	WITHOUT_CLASSIFICATION	0.9999863681044499	WITHOUT_CLASSIFICATION	9.609236543007548E-6	IMPLEMENTATION	2.4825511320147578E-6	DESIGN	1.246842197022344E-6	DEFECT	2.520904928276776E-7	TEST	4.1175185232915584E-8	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.999885346535301	WITHOUT_CLASSIFICATION	9.707361799320335E-5	DESIGN	1.01679058259601E-5	DEFECT	7.231549392649517E-6	IMPLEMENTATION	1.2059458291179293E-7	TEST	5.979690425754839E-8	DOCUMENTATION
// If we've been blocking for the mutex, perhaps another // thread has already reestablished the root. // In case the node was reestablised via replication, confirm it's  // marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.9936389896904897	WITHOUT_CLASSIFICATION	0.005979332472574712	DESIGN	3.654485512499087E-4	DEFECT	1.4242078876633276E-5	DOCUMENTATION	1.914221030981313E-6	TEST	7.298577802625433E-8	IMPLEMENTATION
// For pessimistic locking, we just want to toss out our ref // to any old invalid root node and get the latest (may be null)            	WITHOUT_CLASSIFICATION	0.9999981744044116	WITHOUT_CLASSIFICATION	1.2523538761238572E-6	DEFECT	2.978319875075898E-7	DESIGN	2.674806214038196E-7	TEST	6.418010473009381E-9	DOCUMENTATION	1.511092851844733E-9	IMPLEMENTATION
// The rest only matters for optimistic locking, where we // need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.9969912085927397	WITHOUT_CLASSIFICATION	0.0021537948060169655	DEFECT	8.014523700151459E-4	DESIGN	2.636535719147102E-5	TEST	2.4386721701302307E-5	IMPLEMENTATION	2.7921523352947667E-6	DOCUMENTATION
// Don't hold a transactional lock for this 	WITHOUT_CLASSIFICATION	0.9985880284563501	WITHOUT_CLASSIFICATION	0.0010519526779058203	DESIGN	3.4561864242110883E-4	IMPLEMENTATION	7.1701559296009505E-6	DOCUMENTATION	5.53444962601873E-6	DEFECT	1.695617767355757E-6	TEST
// Make sure the root node for the region exists and  // has a DataVersion that never complains	WITHOUT_CLASSIFICATION	0.9999356157370399	WITHOUT_CLASSIFICATION	6.108673833918798E-5	IMPLEMENTATION	2.1298495012430873E-6	DESIGN	1.1424382241187934E-6	DEFECT	2.1610495034185633E-8	TEST	3.626400505836263E-9	DOCUMENTATION
// Never evict this node	WITHOUT_CLASSIFICATION	0.9998952532598199	WITHOUT_CLASSIFICATION	8.072580229718355E-5	DESIGN	1.555411880116998E-5	IMPLEMENTATION	7.99227765377162E-6	TEST	3.5326150954753575E-7	DOCUMENTATION	1.2127991829555566E-7	DEFECT
// Fix up the resident flag	WITHOUT_CLASSIFICATION	0.9998986796498593	WITHOUT_CLASSIFICATION	9.080688838122667E-5	IMPLEMENTATION	5.146903503189757E-6	DESIGN	3.606420599372673E-6	DEFECT	9.33124214985913E-7	DOCUMENTATION	8.270134418608452E-7	TEST
// 60 seconds	WITHOUT_CLASSIFICATION	0.9999878645342515	WITHOUT_CLASSIFICATION	8.149897800230665E-6	DESIGN	3.0130449227274805E-6	IMPLEMENTATION	4.3515195983323853E-7	DEFECT	4.2070898432463854E-7	DOCUMENTATION	1.1666208148863885E-7	TEST
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999999991808944	WITHOUT_CLASSIFICATION	3.5239889342330445E-10	DEFECT	3.398120370086145E-10	DESIGN	1.0974196551212731E-10	IMPLEMENTATION	1.4634982930919323E-11	TEST	2.5176211654962984E-12	DOCUMENTATION
// no-op. We don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.9999578048802114	WITHOUT_CLASSIFICATION	2.8591566054392413E-5	DESIGN	1.2797949263654032E-5	IMPLEMENTATION	6.167596101253745E-7	DEFECT	1.6863175445128495E-7	DOCUMENTATION	2.021310603500043E-8	TEST
// This should only be possible if the caches are constructor injected 	WITHOUT_CLASSIFICATION	0.999987898432033	WITHOUT_CLASSIFICATION	9.910450518907267E-6	DESIGN	1.7775672980978678E-6	IMPLEMENTATION	2.1492778946295494E-7	TEST	1.9462206929503176E-7	DEFECT	4.00029138713822E-9	DOCUMENTATION
// We only build caches if *none* were passed in.  Passing in // caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.9999801994882845	WITHOUT_CLASSIFICATION	1.8914281112003167E-5	DEFECT	4.523053317926225E-7	DESIGN	4.2093954634751777E-7	TEST	1.2260338302712774E-8	DOCUMENTATION	7.253868285085864E-10	IMPLEMENTATION
// Set up the cache factory	WITHOUT_CLASSIFICATION	0.9999357372113451	WITHOUT_CLASSIFICATION	6.40652418107623E-5	DESIGN	1.2654129695572017E-7	DEFECT	3.7731843160691305E-8	DOCUMENTATION	2.013178413442833E-8	IMPLEMENTATION	1.3141919859939063E-8	TEST
// See if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.9990260234407707	WITHOUT_CLASSIFICATION	9.689387302498901E-4	DESIGN	3.6131233234309655E-6	IMPLEMENTATION	7.824223597762453E-7	DEFECT	3.333523843097404E-7	DOCUMENTATION	3.089309118565304E-7	TEST
// Default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999763998048685	WITHOUT_CLASSIFICATION	2.3418910905445123E-5	DESIGN	9.086175166212702E-8	IMPLEMENTATION	5.787253017127544E-8	DEFECT	2.9354104214974695E-8	TEST	3.195840083388553E-9	DOCUMENTATION
// Default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999992915079623	WITHOUT_CLASSIFICATION	6.640205580007063E-7	DESIGN	4.0380463182259474E-8	DEFECT	1.844379610799276E-9	TEST	1.4362795303042322E-9	IMPLEMENTATION	8.103573710499937E-10	DOCUMENTATION
// For Timestamps, we default to a separate config	WITHOUT_CLASSIFICATION	0.9999760818525266	WITHOUT_CLASSIFICATION	1.7234531707896385E-5	DESIGN	3.2327638104849878E-6	DEFECT	1.7252153522438142E-6	TEST	1.2667239961602219E-6	IMPLEMENTATION	4.5891260668252104E-7	DOCUMENTATION
// We can't change the TM on a running cache; just check // if the cache has no TM and we're OK with that	WITHOUT_CLASSIFICATION	0.9999999898849761	WITHOUT_CLASSIFICATION	8.982002052946606E-9	DESIGN	9.247382964080457E-10	IMPLEMENTATION	1.0137050464029797E-10	TEST	6.105864828241682E-11	DEFECT	4.5854347677733624E-11	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9998908916807284	WITHOUT_CLASSIFICATION	1.0879884849208326E-4	DESIGN	1.5221782187327393E-7	IMPLEMENTATION	1.252750609292544E-7	DOCUMENTATION	2.8167856892458227E-8	DEFECT	3.810039660338023E-9	TEST
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999911845849019	WITHOUT_CLASSIFICATION	5.044136709642739E-6	DEFECT	3.1151488351750955E-6	DESIGN	3.7967338364793076E-7	IMPLEMENTATION	2.068290116780522E-7	TEST	6.962715796739382E-8	DOCUMENTATION
// This method should be implemented assuming it's valid to  // do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.996409723559661	WITHOUT_CLASSIFICATION	0.0023689154035710595	DESIGN	6.14202977292885E-4	DEFECT	5.888836757071687E-4	IMPLEMENTATION	1.7914582736762658E-5	TEST	3.5980103127501843E-7	DOCUMENTATION
// Make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.9999992072017304	WITHOUT_CLASSIFICATION	5.826005905600862E-7	DESIGN	1.1874060555650676E-7	IMPLEMENTATION	5.548018107570648E-8	DEFECT	3.38772972665305E-8	DOCUMENTATION	2.0995952722931633E-9	TEST
// We use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.9999987569949665	WITHOUT_CLASSIFICATION	1.2424624046896804E-6	DESIGN	3.956612366285812E-10	DOCUMENTATION	9.341152566313015E-11	IMPLEMENTATION	3.3995646194003554E-11	DEFECT	1.956032839623628E-11	TEST
// Following methods we don't delegate since they have so little logic // it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.8943153334151386	WITHOUT_CLASSIFICATION	0.07156262023766889	DESIGN	0.03397980346572278	IMPLEMENTATION	7.575433746158964E-5	DEFECT	6.337041401168321E-5	TEST	3.1181299965399427E-6	DOCUMENTATION
// If JBC is using INVALIDATION, we don't want to propagate changes. // We use the Timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.9999997145133734	WITHOUT_CLASSIFICATION	2.1105454655678152E-7	DEFECT	6.019307530220816E-8	DESIGN	5.318357848804487E-9	DOCUMENTATION	5.01990154355616E-9	TEST	3.900745222625779E-9	IMPLEMENTATION
// We don't want to waste effort setting an option if JBC is // already in LOCAL mode. If JBC is REPL_(A)SYNC then check // if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.9999918969336077	WITHOUT_CLASSIFICATION	7.948027634337961E-6	IMPLEMENTATION	9.988299589780515E-8	TEST	2.694242689745502E-8	DOCUMENTATION	1.4252919009976142E-8	DESIGN	1.396041631791902E-8	DEFECT
// Don't hold the JBC node lock throughout the tx, as that // prevents updates // Add a zero (or low) timeout option so we don't block // waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.999997757129094	WITHOUT_CLASSIFICATION	1.7987135188386786E-6	IMPLEMENTATION	4.3383732797241576E-7	DEFECT	6.843189532913712E-9	TEST	3.379476789911551E-9	DOCUMENTATION	9.739278442562402E-11	DESIGN
// Double check the distributed cache	WITHOUT_CLASSIFICATION	0.9999996376783212	WITHOUT_CLASSIFICATION	3.555895980740781E-7	IMPLEMENTATION	5.002239024558387E-9	DESIGN	9.705200934911103E-10	DOCUMENTATION	6.100631291971047E-10	TEST	1.492585571807918E-10	DEFECT
// Get an exclusive right to update JBC for this key from this node.	WITHOUT_CLASSIFICATION	0.9999927735186513	WITHOUT_CLASSIFICATION	7.147418259788175E-6	DESIGN	7.150745837547357E-8	DEFECT	5.52777120791586E-9	DOCUMENTATION	1.8766314033733004E-9	TEST	1.5122787835972853E-10	IMPLEMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.999108807612045	WITHOUT_CLASSIFICATION	8.408228949047877E-4	DESIGN	4.6309040148015195E-5	DEFECT	3.0282323298370464E-6	IMPLEMENTATION	9.410492566062933E-7	DOCUMENTATION	9.117131574918506E-8	TEST
// Initial load from JBC	WITHOUT_CLASSIFICATION	0.9999991390258652	WITHOUT_CLASSIFICATION	7.996888570323062E-7	DEFECT	2.4649407802892994E-8	DESIGN	2.1763179929030586E-8	IMPLEMENTATION	8.435437236197632E-9	DOCUMENTATION	6.43725281125877E-9	TEST
// See if we had a 2nd invalidation from the same initial // preinvalidation timestamp. If so, only increment // if the new current value is an increase	WITHOUT_CLASSIFICATION	0.9999999931246675	WITHOUT_CLASSIFICATION	6.1865568761460604E-9	DEFECT	4.5924306591488333E-10	DOCUMENTATION	1.403867503348051E-10	DESIGN	8.733913357412086E-11	TEST	1.8066729620834381E-12	IMPLEMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.999108807612045	WITHOUT_CLASSIFICATION	8.408228949047877E-4	DESIGN	4.6309040148015195E-5	DEFECT	3.0282323298370464E-6	IMPLEMENTATION	9.410492566062933E-7	DOCUMENTATION	9.117131574918506E-8	TEST
// If the workspace node has null as well, OK; if not we've // been modified in a non-comparable manner, which we have to // treat as us being newer	WITHOUT_CLASSIFICATION	0.9999990249570844	WITHOUT_CLASSIFICATION	8.562849994643278E-7	DESIGN	1.0233541476465636E-7	DEFECT	1.3180121194318508E-8	IMPLEMENTATION	2.122597633577694E-9	TEST	1.119782685356931E-9	DOCUMENTATION
// The standard comparator types are not Serializable but are singletons	WITHOUT_CLASSIFICATION	0.999998668813499	WITHOUT_CLASSIFICATION	8.550363518330104E-7	DEFECT	4.665245073231304E-7	DESIGN	4.7734864319054575E-9	TEST	4.108044822323717E-9	IMPLEMENTATION	7.441106337573901E-10	DOCUMENTATION
// ignore!	WITHOUT_CLASSIFICATION	0.99999560648693	WITHOUT_CLASSIFICATION	2.458964935978136E-6	DEFECT	1.1292854214318893E-6	DESIGN	5.774906684926675E-7	IMPLEMENTATION	1.6676831483679057E-7	DOCUMENTATION	6.100372932127672E-8	TEST
// ignore it	WITHOUT_CLASSIFICATION	0.9999977375581258	WITHOUT_CLASSIFICATION	1.2265514180667714E-6	DESIGN	7.325061840447078E-7	DEFECT	1.6804656602626944E-7	IMPLEMENTATION	9.618343430654698E-8	DOCUMENTATION	3.915427173927159E-8	TEST
// construct the cache	WITHOUT_CLASSIFICATION	0.9999962078624395	WITHOUT_CLASSIFICATION	1.883897154366146E-6	DESIGN	1.791749624594416E-6	IMPLEMENTATION	4.9207423514878385E-8	TEST	4.87513998558906E-8	DOCUMENTATION	1.8531958144301168E-8	DEFECT
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999897655421663	WITHOUT_CLASSIFICATION	8.077486549624345E-6	DEFECT	1.718270536278097E-6	DOCUMENTATION	4.096601298721807E-7	DESIGN	2.7611865321333605E-8	IMPLEMENTATION	1.4287525719402548E-9	TEST
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999897655421663	WITHOUT_CLASSIFICATION	8.077486549624345E-6	DEFECT	1.718270536278097E-6	DOCUMENTATION	4.096601298721807E-7	DESIGN	2.7611865321333605E-8	IMPLEMENTATION	1.4287525719402548E-9	TEST
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.999941098917756	WITHOUT_CLASSIFICATION	5.3066766976843544E-5	DESIGN	4.011055571483929E-6	IMPLEMENTATION	9.847135574733587E-7	DOCUMENTATION	5.564074018399167E-7	DEFECT	2.821387364772823E-7	TEST
//swaldman 2006-08-28: define c3p0-style configuration parameters for initialPoolSize, which //                     hibernate sensibly lets default to minPoolSize, but we'll let users //                     override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.9773013546365246	WITHOUT_CLASSIFICATION	0.022697522780632744	DESIGN	6.216386906638908E-7	TEST	2.584416630017779E-7	DOCUMENTATION	2.0575081938337194E-7	IMPLEMENTATION	3.675166956044529E-8	DEFECT
/*DataSource unpooled = DataSources.unpooledDataSource(	WITHOUT_CLASSIFICATION	0.9995118962747706	WITHOUT_CLASSIFICATION	3.533557955771181E-4	IMPLEMENTATION	1.185438567027719E-4	DESIGN	1.3407203989165085E-5	DEFECT	2.0230806284317663E-6	DOCUMENTATION	7.737883320646596E-7	TEST
// TRUE if the pool is borrowed from the outside, FALSE if we used to create it	WITHOUT_CLASSIFICATION	0.9999999824072876	WITHOUT_CLASSIFICATION	1.5291577125578236E-8	DESIGN	2.1598405742980178E-9	DEFECT	9.021995563641517E-11	TEST	3.8926439672807663E-11	IMPLEMENTATION	1.2148375045501999E-11	DOCUMENTATION
// get a connection from the pool (thru DriverManager, cfr. Proxool doc)	WITHOUT_CLASSIFICATION	0.9999365968888175	WITHOUT_CLASSIFICATION	6.282882662222698E-5	DESIGN	2.72612535940367E-7	DEFECT	1.4604759002535782E-7	DOCUMENTATION	1.4515949037576278E-7	IMPLEMENTATION	1.0464943772073587E-8	TEST
// set the Transaction Isolation if defined	WITHOUT_CLASSIFICATION	0.9999542846567844	WITHOUT_CLASSIFICATION	2.6104855918221308E-5	DESIGN	1.944475043675821E-5	IMPLEMENTATION	8.671199868000309E-8	TEST	7.354356614513315E-8	DOCUMENTATION	5.4812959822873066E-9	DEFECT
// toggle autoCommit to false if set	WITHOUT_CLASSIFICATION	0.9999997575613859	WITHOUT_CLASSIFICATION	1.2516985597865536E-7	IMPLEMENTATION	6.666627559302921E-8	DEFECT	2.4728877700097798E-8	DESIGN	1.3330228506723672E-8	DOCUMENTATION	1.2543376292962145E-8	TEST
// return the connection	WITHOUT_CLASSIFICATION	0.9999875470933706	WITHOUT_CLASSIFICATION	1.012161764171101E-5	DESIGN	1.5586821753736127E-6	IMPLEMENTATION	5.806845264757099E-7	DEFECT	1.8005120459494787E-7	DOCUMENTATION	1.1871081155210867E-8	TEST
// Get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.9999541426233145	WITHOUT_CLASSIFICATION	4.5294864088779685E-5	DESIGN	4.408231553207011E-7	TEST	5.851454014669946E-8	IMPLEMENTATION	4.822357111344433E-8	DOCUMENTATION	1.4951330163137287E-8	DEFECT
// Default the Proxool alias setting	WITHOUT_CLASSIFICATION	0.9999999203684791	WITHOUT_CLASSIFICATION	4.00448640358959E-8	DESIGN	1.97864839560165E-8	IMPLEMENTATION	1.181159197041121E-8	DEFECT	6.2393533506239214E-9	DOCUMENTATION	1.749227507083944E-9	TEST
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9997450885410619	WITHOUT_CLASSIFICATION	2.548499236256803E-4	DESIGN	3.31962834088085E-8	DEFECT	1.5730199368580398E-8	DOCUMENTATION	6.363446527703802E-9	IMPLEMENTATION	6.245383075655719E-9	TEST
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9997450885410619	WITHOUT_CLASSIFICATION	2.548499236256803E-4	DESIGN	3.31962834088085E-8	DEFECT	1.5730199368580398E-8	DOCUMENTATION	6.363446527703802E-9	IMPLEMENTATION	6.245383075655719E-9	TEST
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9992006080525883	WITHOUT_CLASSIFICATION	7.623816592070907E-4	IMPLEMENTATION	2.3336958585157433E-5	DEFECT	1.0486373510086464E-5	DESIGN	2.975393207939641E-6	DOCUMENTATION	2.1156290145307447E-7	TEST
// Set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.9999946646100599	WITHOUT_CLASSIFICATION	3.080865077513716E-6	IMPLEMENTATION	2.0337088266451987E-6	DEFECT	1.513129257969033E-7	DOCUMENTATION	3.616157877770005E-8	DESIGN	3.334153144330651E-8	TEST
// Configured using the JAXP Configurator	WITHOUT_CLASSIFICATION	0.9997958878515188	WITHOUT_CLASSIFICATION	1.992985974703375E-4	DESIGN	3.0920659522539085E-6	DEFECT	9.369354676949007E-7	TEST	5.872932431923956E-7	DOCUMENTATION	1.9725634766030384E-7	IMPLEMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9997450885410619	WITHOUT_CLASSIFICATION	2.548499236256803E-4	DESIGN	3.31962834088085E-8	DEFECT	1.5730199368580398E-8	DOCUMENTATION	6.363446527703802E-9	IMPLEMENTATION	6.245383075655719E-9	TEST
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9992006080525883	WITHOUT_CLASSIFICATION	7.623816592070907E-4	IMPLEMENTATION	2.3336958585157433E-5	DEFECT	1.0486373510086464E-5	DESIGN	2.975393207939641E-6	DOCUMENTATION	2.1156290145307447E-7	TEST
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9992006080525883	WITHOUT_CLASSIFICATION	7.623816592070907E-4	IMPLEMENTATION	2.3336958585157433E-5	DEFECT	1.0486373510086464E-5	DESIGN	2.975393207939641E-6	DOCUMENTATION	2.1156290145307447E-7	TEST
// Configured using the Properties File Configurator	WITHOUT_CLASSIFICATION	0.9998830345560368	WITHOUT_CLASSIFICATION	1.1602021378601347E-4	DESIGN	8.511726137254294E-7	TEST	5.250468166619651E-8	DEFECT	2.4442843874089015E-8	IMPLEMENTATION	1.7110037806862904E-8	DOCUMENTATION
// Remember Isolation level	WITHOUT_CLASSIFICATION	0.9990914659112408	WITHOUT_CLASSIFICATION	8.446817007710255E-4	DESIGN	4.8151945952686896E-5	IMPLEMENTATION	1.3213556251831438E-5	DEFECT	1.4357997486867428E-6	TEST	1.051086034987137E-6	DOCUMENTATION
// If the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.9999999949207207	WITHOUT_CLASSIFICATION	4.580633830628001E-9	DEFECT	2.869282947903324E-10	DESIGN	9.88763221544337E-11	DOCUMENTATION	5.855142497943141E-11	IMPLEMENTATION	5.428937964667831E-11	TEST
// We have created the pool ourselves, so shut it down	WITHOUT_CLASSIFICATION	0.9999992006819712	WITHOUT_CLASSIFICATION	4.2420353658729703E-7	DESIGN	1.7895557797793234E-7	IMPLEMENTATION	1.6691258159929775E-7	TEST	2.1837263212715662E-8	DEFECT	7.409069346701153E-9	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9985304841249178	WITHOUT_CLASSIFICATION	6.754132698126995E-4	IMPLEMENTATION	5.276310378119838E-4	DEFECT	2.594562272196667E-4	DESIGN	6.187459166270494E-6	DOCUMENTATION	8.278810714800607E-7	TEST
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9985304841249178	WITHOUT_CLASSIFICATION	6.754132698126995E-4	IMPLEMENTATION	5.276310378119838E-4	DEFECT	2.594562272196667E-4	DESIGN	6.187459166270494E-6	DOCUMENTATION	8.278810714800607E-7	TEST
//always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.9999622983283821	WITHOUT_CLASSIFICATION	2.830557610206445E-5	DESIGN	8.632755991665358E-6	IMPLEMENTATION	6.559261883690072E-7	DEFECT	7.793702492540552E-8	DOCUMENTATION	2.947631091685058E-8	TEST
//public Currency getCurrency(int col) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9998527383334765	WITHOUT_CLASSIFICATION	1.4200305427560303E-4	DESIGN	4.2340697972594905E-6	DEFECT	7.087017789459565E-7	DOCUMENTATION	2.65647931303248E-7	TEST	5.0192740450969647E-8	IMPLEMENTATION
// default is POJO	WITHOUT_CLASSIFICATION	0.999999216885677	WITHOUT_CLASSIFICATION	3.26420472278021E-7	DEFECT	2.2723153664233297E-7	DESIGN	1.9776319778862298E-7	IMPLEMENTATION	1.9639836757461724E-8	TEST	1.205927952414397E-8	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999969170029632	WITHOUT_CLASSIFICATION	2.752261407532549E-6	DESIGN	2.995030871413782E-7	DEFECT	1.2643865377655384E-8	TEST	1.02937093254863E-8	IMPLEMENTATION	8.294967501991598E-9	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999969170029632	WITHOUT_CLASSIFICATION	2.752261407532549E-6	DESIGN	2.995030871413782E-7	DEFECT	1.2643865377655384E-8	TEST	1.02937093254863E-8	IMPLEMENTATION	8.294967501991598E-9	DOCUMENTATION
//private CacheEntry cacheEntry;	WITHOUT_CLASSIFICATION	0.9999831227901095	WITHOUT_CLASSIFICATION	1.6144777873863304E-5	DESIGN	3.7938741248535924E-7	DOCUMENTATION	2.439781737194622E-7	DEFECT	6.78666997094502E-8	IMPLEMENTATION	4.1199730794756587E-8	TEST
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9997926278245179	WITHOUT_CLASSIFICATION	1.0377030022719614E-4	TEST	3.919924578215593E-5	DEFECT	3.2542982959366844E-5	IMPLEMENTATION	2.7506104732089904E-5	DESIGN	4.353541781251532E-6	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9862814276951465	WITHOUT_CLASSIFICATION	0.013639656006570442	DESIGN	5.3378849023395374E-5	DEFECT	1.9753530238836283E-5	IMPLEMENTATION	2.9332506471904708E-6	DOCUMENTATION	2.850668373705387E-6	TEST
// get the updated snapshot of the entity state by cloning current state; // it is safe to copy in place, since by this time no-one else (should have) // has a reference  to the array	WITHOUT_CLASSIFICATION	0.9999999752179608	WITHOUT_CLASSIFICATION	9.532844941379303E-9	DEFECT	8.686413954636228E-9	IMPLEMENTATION	5.909755839490824E-9	DESIGN	5.554713197383703E-10	DOCUMENTATION	9.75532451552993E-11	TEST
// this entity defines proeprty generation, so process those generated // values...	WITHOUT_CLASSIFICATION	0.9999994802119592	WITHOUT_CLASSIFICATION	5.1582547733995E-7	DESIGN	1.5126128231633812E-9	DOCUMENTATION	1.2499720396568594E-9	DEFECT	1.19433463420434E-9	TEST	5.644035066907021E-12	IMPLEMENTATION
// have the entity entry perform post-update processing, passing it the // update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.9999998867521921	WITHOUT_CLASSIFICATION	6.49724167082603E-8	DESIGN	2.331657822722753E-8	DEFECT	1.710874578642653E-8	IMPLEMENTATION	7.139064966772549E-9	DOCUMENTATION	7.110022124804048E-10	TEST
/*!persister.isCacheInvalidationRequired()*/	WITHOUT_CLASSIFICATION	0.9983972612493814	WITHOUT_CLASSIFICATION	0.0014100214316706769	DESIGN	1.6526458545306757E-4	DEFECT	2.565871030836558E-5	IMPLEMENTATION	1.1779937524542915E-6	DOCUMENTATION	6.160294339110541E-7	TEST
// need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.9995554488723272	WITHOUT_CLASSIFICATION	3.6512202859793555E-4	DESIGN	7.419463118504263E-5	IMPLEMENTATION	2.4643909120202684E-6	DOCUMENTATION	1.8426927969487852E-6	DEFECT	9.273841808628921E-7	TEST
//sort first by role name	WITHOUT_CLASSIFICATION	0.9997128520012148	WITHOUT_CLASSIFICATION	2.575247274285912E-4	DESIGN	1.7132470391973116E-5	IMPLEMENTATION	9.517306807913636E-6	TEST	1.568213268329182E-6	DOCUMENTATION	1.4052808884362673E-6	DEFECT
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9862814276951465	WITHOUT_CLASSIFICATION	0.013639656006570442	DESIGN	5.3378849023395374E-5	DEFECT	1.9753530238836283E-5	IMPLEMENTATION	2.9332506471904708E-6	DOCUMENTATION	2.850668373705387E-6	TEST
//then by fk	WITHOUT_CLASSIFICATION	0.9990330482077483	WITHOUT_CLASSIFICATION	5.64353039949275E-4	IMPLEMENTATION	2.0165536722795886E-4	DESIGN	1.2209763089380963E-4	DEFECT	5.194434036255573E-5	DOCUMENTATION	2.690141381818193E-5	TEST
// nothing to do	WITHOUT_CLASSIFICATION	0.9998049724595838	WITHOUT_CLASSIFICATION	1.251179091611697E-4	IMPLEMENTATION	3.8569436248610766E-5	DESIGN	2.2396751716152813E-5	DEFECT	6.854887702674306E-6	DOCUMENTATION	2.088555587528164E-6	TEST
// nothing to do	WITHOUT_CLASSIFICATION	0.9998049724595838	WITHOUT_CLASSIFICATION	1.251179091611697E-4	IMPLEMENTATION	3.8569436248610766E-5	DESIGN	2.2396751716152813E-5	DEFECT	6.854887702674306E-6	DOCUMENTATION	2.088555587528164E-6	TEST
// an existing collection that was either non-empty or uninitialized // is replaced by null or a different collection // (if the collection is uninitialized, hibernate has no way of // knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.9937918948274482	WITHOUT_CLASSIFICATION	0.006207513364757092	DESIGN	4.628361341673683E-7	IMPLEMENTATION	9.239884393381582E-8	DEFECT	3.1085719834311695E-8	TEST	5.487096787010787E-9	DOCUMENTATION
// this method is called when a new non-null collection is persisted // or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.9627768267817274	WITHOUT_CLASSIFICATION	0.03695576592314583	DESIGN	2.5512807752343773E-4	IMPLEMENTATION	9.282311057942147E-6	TEST	2.533825383838026E-6	DEFECT	4.630811616025087E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9928472971761676	WITHOUT_CLASSIFICATION	0.006858095428184985	DESIGN	2.4788305971373516E-4	IMPLEMENTATION	4.5806476792164074E-5	DEFECT	5.878905893820881E-7	TEST	3.299685521748291E-7	DOCUMENTATION
//do nothing - we only need to notify the cache...	WITHOUT_CLASSIFICATION	0.9999393004883689	WITHOUT_CLASSIFICATION	4.5822322724869116E-5	DESIGN	1.1745451220005297E-5	DOCUMENTATION	1.8011525855645545E-6	DEFECT	9.28404613162455E-7	TEST	4.021804876527752E-7	IMPLEMENTATION
//sort first by entity name	WITHOUT_CLASSIFICATION	0.9998835115012379	WITHOUT_CLASSIFICATION	7.326492674145352E-5	DESIGN	3.33532950292672E-5	IMPLEMENTATION	6.387699383610935E-6	TEST	2.9575080719799026E-6	DOCUMENTATION	5.250695359259772E-7	DEFECT
//then by id	WITHOUT_CLASSIFICATION	0.9964049609850374	WITHOUT_CLASSIFICATION	0.002863883878822242	IMPLEMENTATION	4.058232431619717E-4	DESIGN	2.0186411869270546E-4	DEFECT	8.548064358324166E-5	DOCUMENTATION	3.798713070246591E-5	TEST
// to be safe...	WITHOUT_CLASSIFICATION	0.999980700963511	WITHOUT_CLASSIFICATION	6.985869738001761E-6	DEFECT	6.6139589274784655E-6	IMPLEMENTATION	5.1758605139639685E-6	DESIGN	3.9589340940414214E-7	DOCUMENTATION	1.2745390003943857E-7	TEST
// no transformations took place, so handle it as we would a // non-instrumented class	WITHOUT_CLASSIFICATION	0.9999190414760173	WITHOUT_CLASSIFICATION	7.988446072750226E-5	IMPLEMENTATION	9.654788617275795E-7	DESIGN	9.531118623923903E-8	DOCUMENTATION	1.2317920670923906E-8	TEST	9.55286662850493E-10	DEFECT
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999999878269339	WITHOUT_CLASSIFICATION	1.1869574654601769E-8	DESIGN	1.403121517412871E-10	TEST	1.1905117274302718E-10	DEFECT	3.8871305510650795E-11	DOCUMENTATION	5.256972309413216E-12	IMPLEMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999999878269339	WITHOUT_CLASSIFICATION	1.1869574654601769E-8	DESIGN	1.403121517412871E-10	TEST	1.1905117274302718E-10	DEFECT	3.8871305510650795E-11	DOCUMENTATION	5.256972309413216E-12	IMPLEMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.999991306979069	WITHOUT_CLASSIFICATION	6.804899086745884E-6	DESIGN	1.0709698591202427E-6	DEFECT	4.872641771793007E-7	DOCUMENTATION	3.029668091821558E-7	IMPLEMENTATION	2.6920998664507015E-8	TEST
//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9994323439369523	WITHOUT_CLASSIFICATION	3.194508427753974E-4	TEST	2.4132714041207696E-4	IMPLEMENTATION	3.981515133965293E-6	DESIGN	2.22948988182749E-6	DOCUMENTATION	6.670748442502889E-7	DEFECT
// set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.9999962552973394	WITHOUT_CLASSIFICATION	3.6717837607505916E-6	DESIGN	2.5568553329359026E-8	DOCUMENTATION	1.738207787532165E-8	DEFECT	1.7114252846386004E-8	TEST	1.2854015807108005E-8	IMPLEMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999968321694566	WITHOUT_CLASSIFICATION	2.4242588583870465E-6	DESIGN	4.566889244515108E-7	DEFECT	2.1259323075869214E-7	IMPLEMENTATION	4.1123000554252055E-8	DOCUMENTATION	3.316652933607635E-8	TEST
// invokespecial	WITHOUT_CLASSIFICATION	0.9999999130781535	WITHOUT_CLASSIFICATION	3.289182605307989E-8	DOCUMENTATION	1.905761889700019E-8	IMPLEMENTATION	1.4585640716953208E-8	DESIGN	1.4388209543443304E-8	DEFECT	5.998551129507618E-9	TEST
// return	WITHOUT_CLASSIFICATION	0.9999911704791664	WITHOUT_CLASSIFICATION	7.4722031876870335E-6	DESIGN	6.864231282640529E-7	DEFECT	6.195127127820527E-7	IMPLEMENTATION	3.3732303078025076E-8	DOCUMENTATION	1.7649501928107135E-8	TEST
// aload_1 // load bean	WITHOUT_CLASSIFICATION	0.9999668904079009	WITHOUT_CLASSIFICATION	1.2576459091101606E-5	DESIGN	1.0446207622519783E-5	DEFECT	8.81676033027307E-6	IMPLEMENTATION	8.060600566864913E-7	TEST	4.6410499853157464E-7	DOCUMENTATION
// checkcast // cast bean	WITHOUT_CLASSIFICATION	0.9999754925044891	WITHOUT_CLASSIFICATION	1.3376836280528532E-5	IMPLEMENTATION	9.552041230171466E-6	DESIGN	8.934393033697274E-7	TEST	4.556645014774049E-7	DOCUMENTATION	2.2951419535068497E-7	DEFECT
// astore_3 // store bean	WITHOUT_CLASSIFICATION	0.9999914616608723	WITHOUT_CLASSIFICATION	6.0900060676623105E-6	DESIGN	1.4341647239538423E-6	IMPLEMENTATION	6.324740275947452E-7	TEST	2.500987602704173E-7	DEFECT	1.3159554828369914E-7	DOCUMENTATION
// aload_2 // args	WITHOUT_CLASSIFICATION	0.9999976808257687	WITHOUT_CLASSIFICATION	1.033940030528143E-6	DESIGN	9.44049945637226E-7	IMPLEMENTATION	2.657969472828436E-7	DEFECT	5.476691208274998E-8	TEST	2.0620395979828148E-8	DOCUMENTATION
// iconst_i // continue to aastore // growing stack is 1	WITHOUT_CLASSIFICATION	0.9991533907549902	WITHOUT_CLASSIFICATION	7.686858653258813E-4	DEFECT	7.12762819547567E-5	DESIGN	5.677120318904587E-6	IMPLEMENTATION	5.948945507580783E-7	TEST	3.750828594452789E-7	DOCUMENTATION
// new	WITHOUT_CLASSIFICATION	0.9995402846725878	WITHOUT_CLASSIFICATION	4.145368113685592E-4	DESIGN	3.5064075267528424E-5	IMPLEMENTATION	5.806623853940268E-6	DEFECT	2.6491947641428517E-6	DOCUMENTATION	1.6586221580893713E-6	TEST
// dup	WITHOUT_CLASSIFICATION	0.9999909010141903	WITHOUT_CLASSIFICATION	7.031523732573186E-6	DESIGN	1.6825840275349445E-6	DEFECT	2.3065587307609962E-7	IMPLEMENTATION	1.0144933611013318E-7	DOCUMENTATION	5.2772840229001135E-8	TEST
// aload_3 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999754137326424	WITHOUT_CLASSIFICATION	1.142309979969185E-5	IMPLEMENTATION	6.725031606645322E-6	DESIGN	5.203475239912962E-6	DEFECT	7.528807074970453E-7	TEST	4.817800036537011E-7	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999992120548463	WITHOUT_CLASSIFICATION	7.301219053240696E-7	DESIGN	3.166591168143573E-8	DEFECT	1.737899848003468E-8	DOCUMENTATION	8.071608076308254E-9	TEST	7.067301393387633E-10	IMPLEMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999989164599855	WITHOUT_CLASSIFICATION	4.826356104281579E-7	DESIGN	4.4326148487315613E-7	DEFECT	7.592652537532358E-8	IMPLEMENTATION	5.830008589410863E-8	DOCUMENTATION	2.3416307871650767E-8	TEST
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999989164599855	WITHOUT_CLASSIFICATION	4.826356104281579E-7	DESIGN	4.4326148487315613E-7	DEFECT	7.592652537532358E-8	IMPLEMENTATION	5.830008589410863E-8	DOCUMENTATION	2.3416307871650767E-8	TEST
// aastore // args	WITHOUT_CLASSIFICATION	0.9999983933428427	WITHOUT_CLASSIFICATION	1.0550815735927761E-6	DESIGN	3.8164095712744616E-7	IMPLEMENTATION	8.501147763995543E-8	TEST	6.783000310036541E-8	DEFECT	1.7093145759611937E-8	DOCUMENTATION
/* | this | bean | args | i | raw bean | exception | */	WITHOUT_CLASSIFICATION	0.9999537216678479	WITHOUT_CLASSIFICATION	4.2912427410179154E-5	DESIGN	1.8074593766275803E-6	DEFECT	1.1963305279208374E-6	TEST	2.2647435287395666E-7	IMPLEMENTATION	1.3564048449187605E-7	DOCUMENTATION
// required to exception table // iconst_0 // i	WITHOUT_CLASSIFICATION	0.9999696166529941	WITHOUT_CLASSIFICATION	2.831697568277889E-5	DESIGN	2.015769466241536E-6	DEFECT	2.8016574390404998E-8	TEST	1.7795836878971387E-8	IMPLEMENTATION	4.78944568449639E-9	DOCUMENTATION
// istore_3 // store i	WITHOUT_CLASSIFICATION	0.9999993866957406	WITHOUT_CLASSIFICATION	2.6654976626592643E-7	DEFECT	1.5850622177767544E-7	DESIGN	1.1279409980399958E-7	TEST	5.866844892516707E-8	IMPLEMENTATION	1.6785722601493686E-8	DOCUMENTATION
// aload_1 // load the bean	WITHOUT_CLASSIFICATION	0.9999476625798319	WITHOUT_CLASSIFICATION	2.902731660253427E-5	IMPLEMENTATION	1.657319531018359E-5	DESIGN	4.477597750960126E-6	DEFECT	1.2469305478896104E-6	DOCUMENTATION	1.0123799565231392E-6	TEST
// checkcast // cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.9990484243954766	WITHOUT_CLASSIFICATION	9.133551547678123E-4	DESIGN	3.3804420768177405E-5	IMPLEMENTATION	1.7609005739241676E-6	TEST	1.439130501911913E-6	DOCUMENTATION	1.215997911615964E-6	DEFECT
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999990707875267	WITHOUT_CLASSIFICATION	6.272164362293186E-7	DESIGN	1.0664023926434915E-7	DEFECT	9.53503468110266E-8	IMPLEMENTATION	9.273601686538663E-8	DOCUMENTATION	7.269434091430942E-9	TEST
// start region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9930805642839423	WITHOUT_CLASSIFICATION	0.006888013510014742	DESIGN	2.8242080073601204E-5	DEFECT	1.846656259293033E-6	IMPLEMENTATION	9.045921177177966E-7	DOCUMENTATION	4.2887759225992287E-7	TEST
// iinc 3, 1	WITHOUT_CLASSIFICATION	0.9999958167910912	WITHOUT_CLASSIFICATION	1.284932308909205E-6	DEFECT	1.2826974939306532E-6	DESIGN	9.80505173604584E-7	IMPLEMENTATION	4.7093394942269604E-7	DOCUMENTATION	1.6413998298777157E-7	TEST
// aload 4 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999513624679758	WITHOUT_CLASSIFICATION	2.3335701544264368E-5	DESIGN	1.567657096192902E-5	IMPLEMENTATION	8.147114166877708E-6	DEFECT	7.676593604564576E-7	TEST	7.104859906599502E-7	DOCUMENTATION
// aload_2 // load the args	WITHOUT_CLASSIFICATION	0.9999990175658539	WITHOUT_CLASSIFICATION	7.207246783863782E-7	IMPLEMENTATION	9.082638095064614E-8	DEFECT	8.633902848805603E-8	DESIGN	5.120041950797268E-8	TEST	3.334363873971677E-8	DOCUMENTATION
// iconst_i	WITHOUT_CLASSIFICATION	0.9998897723567637	WITHOUT_CLASSIFICATION	1.0012388000003152E-4	DESIGN	4.8817734126612804E-6	DEFECT	3.2562868486101197E-6	IMPLEMENTATION	1.0911881082174936E-6	DOCUMENTATION	8.745148668157467E-7	TEST
// aaload	WITHOUT_CLASSIFICATION	0.9999909203901847	WITHOUT_CLASSIFICATION	5.717308397721777E-6	DESIGN	1.6337503145862045E-6	IMPLEMENTATION	1.5421938744912192E-6	DEFECT	9.345526070667101E-8	DOCUMENTATION	9.29019676815034E-8	TEST
// checkcast	WITHOUT_CLASSIFICATION	0.9999976750629468	WITHOUT_CLASSIFICATION	1.3028974241251877E-6	IMPLEMENTATION	8.517371456916452E-7	DESIGN	8.468468160556162E-8	DOCUMENTATION	5.6115055959375785E-8	TEST	2.9502745872431542E-8	DEFECT
// checkcast (case of primitive type) // invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.9999994997042932	WITHOUT_CLASSIFICATION	4.233420687748371E-7	DESIGN	3.890202454489129E-8	IMPLEMENTATION	2.5201513073885433E-8	DOCUMENTATION	9.526773281666315E-9	DEFECT	3.323327150667428E-9	TEST
// checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.9999958069498976	WITHOUT_CLASSIFICATION	2.1759805897410126E-6	DESIGN	1.4769034627242471E-6	IMPLEMENTATION	4.677285950991803E-7	DOCUMENTATION	5.64504675467341E-8	DEFECT	1.5986987228688604E-8	TEST
/* current stack len = 2 */	WITHOUT_CLASSIFICATION	0.9999955669417065	WITHOUT_CLASSIFICATION	1.7113567157166797E-6	DESIGN	1.5349546153470355E-6	IMPLEMENTATION	8.687107696072733E-7	DEFECT	2.9297348353199883E-7	DOCUMENTATION	2.5062709321386344E-8	TEST
// end region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.5955062410962564	DESIGN	0.4044313569562253	WITHOUT_CLASSIFICATION	4.6136404086767485E-5	DEFECT	1.050940658827432E-5	IMPLEMENTATION	4.672906628786402E-6	DOCUMENTATION	1.0832302144152657E-6	TEST
// register in exception table	WITHOUT_CLASSIFICATION	0.9999957314508546	WITHOUT_CLASSIFICATION	4.220583163487063E-6	DESIGN	3.352726818652876E-8	DEFECT	1.2008734193956463E-8	TEST	1.4930230574488683E-9	DOCUMENTATION	9.3695645929884E-10	IMPLEMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999968321694566	WITHOUT_CLASSIFICATION	2.4242588583870465E-6	DESIGN	4.566889244515108E-7	DEFECT	2.1259323075869214E-7	IMPLEMENTATION	4.1123000554252055E-8	DOCUMENTATION	3.316652933607635E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999968321694566	WITHOUT_CLASSIFICATION	2.4242588583870465E-6	DESIGN	4.566889244515108E-7	DEFECT	2.1259323075869214E-7	IMPLEMENTATION	4.1123000554252055E-8	DOCUMENTATION	3.316652933607635E-8	TEST
// return	WITHOUT_CLASSIFICATION	0.9999911704791664	WITHOUT_CLASSIFICATION	7.4722031876870335E-6	DESIGN	6.864231282640529E-7	DEFECT	6.195127127820527E-7	IMPLEMENTATION	3.3732303078025076E-8	DOCUMENTATION	1.7649501928107135E-8	TEST
// return	WITHOUT_CLASSIFICATION	0.9999911704791664	WITHOUT_CLASSIFICATION	7.4722031876870335E-6	DESIGN	6.864231282640529E-7	DEFECT	6.195127127820527E-7	IMPLEMENTATION	3.3732303078025076E-8	DOCUMENTATION	1.7649501928107135E-8	TEST
// dup	WITHOUT_CLASSIFICATION	0.9999909010141903	WITHOUT_CLASSIFICATION	7.031523732573186E-6	DESIGN	1.6825840275349445E-6	DEFECT	2.3065587307609962E-7	IMPLEMENTATION	1.0144933611013318E-7	DOCUMENTATION	5.2772840229001135E-8	TEST
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999989164599855	WITHOUT_CLASSIFICATION	4.826356104281579E-7	DESIGN	4.4326148487315613E-7	DEFECT	7.592652537532358E-8	IMPLEMENTATION	5.830008589410863E-8	DOCUMENTATION	2.3416307871650767E-8	TEST
// checkcast	WITHOUT_CLASSIFICATION	0.9999976750629468	WITHOUT_CLASSIFICATION	1.3028974241251877E-6	IMPLEMENTATION	8.517371456916452E-7	DESIGN	8.468468160556162E-8	DOCUMENTATION	5.6115055959375785E-8	TEST	2.9502745872431542E-8	DEFECT
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999994996287532	WITHOUT_CLASSIFICATION	4.3517086290774885E-7	DESIGN	5.657805533867469E-8	DEFECT	4.4531515557582265E-9	IMPLEMENTATION	2.9730077181245798E-9	TEST	1.1961693200816465E-9	DOCUMENTATION
// astore 5 // store exception	WITHOUT_CLASSIFICATION	0.9999994655595733	WITHOUT_CLASSIFICATION	2.874089850692124E-7	DEFECT	2.236360800541149E-7	DESIGN	1.3630650081483971E-8	TEST	7.69887474370046E-9	DOCUMENTATION	2.0658367866397053E-9	IMPLEMENTATION
// new // BulkAccessorException	WITHOUT_CLASSIFICATION	0.9959270726413884	WITHOUT_CLASSIFICATION	0.0028815873425485933	DESIGN	0.001174813272612819	DEFECT	6.538907707312574E-6	TEST	6.032947955304808E-6	DOCUMENTATION	3.954887787561794E-6	IMPLEMENTATION
// aload 5 // load exception	WITHOUT_CLASSIFICATION	0.9999735922906278	WITHOUT_CLASSIFICATION	2.3790167351343525E-5	DEFECT	2.337726418530951E-6	DESIGN	1.3609591359705614E-7	DOCUMENTATION	8.214811909939798E-8	TEST	6.15715695424411E-8	IMPLEMENTATION
// iload_3 // i	WITHOUT_CLASSIFICATION	0.9999983241286492	WITHOUT_CLASSIFICATION	9.978748865846916E-7	DEFECT	4.1478307290399966E-7	IMPLEMENTATION	1.20005390219633E-7	TEST	1.1042719070959023E-7	DESIGN	3.278081040017794E-8	DOCUMENTATION
// invokespecial // BulkAccessorException.<init>	WITHOUT_CLASSIFICATION	0.999995818107924	WITHOUT_CLASSIFICATION	3.772454578938811E-6	DEFECT	1.6323332969376715E-7	DESIGN	1.0617834779734221E-7	DOCUMENTATION	8.038621802675711E-8	TEST	5.963960146445853E-8	IMPLEMENTATION
// athrow	WITHOUT_CLASSIFICATION	0.9999944380097064	WITHOUT_CLASSIFICATION	2.7041611069265753E-6	DESIGN	1.8036398955770428E-6	DEFECT	8.422379067495009E-7	IMPLEMENTATION	1.108311557110285E-7	TEST	1.0112022865434578E-7	DOCUMENTATION
// WARNING: classfile only	WITHOUT_CLASSIFICATION	0.9999711706269387	WITHOUT_CLASSIFICATION	2.202277899946008E-5	DESIGN	3.5790176191509426E-6	DEFECT	2.550893541307565E-6	IMPLEMENTATION	4.997679987612329E-7	DOCUMENTATION	1.7691490252740446E-7	TEST
//swallow	WITHOUT_CLASSIFICATION	0.9997432268885502	WITHOUT_CLASSIFICATION	1.94021254439581E-4	DESIGN	3.4398089752000935E-5	IMPLEMENTATION	2.4514189243956422E-5	DEFECT	1.9574966039769466E-6	DOCUMENTATION	1.8820814102233516E-6	TEST
/* local variable | this | */	WITHOUT_CLASSIFICATION	0.9999954054301728	WITHOUT_CLASSIFICATION	4.153008599342025E-6	DESIGN	2.1921109257073546E-7	TEST	1.8753255870223968E-7	IMPLEMENTATION	2.123232527276251E-8	DOCUMENTATION	1.3585251227702025E-8	DEFECT
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999927369023708	WITHOUT_CLASSIFICATION	4.966216477786594E-6	DESIGN	9.086050926662606E-7	TEST	5.815287065547182E-7	IMPLEMENTATION	4.89894482325873E-7	DOCUMENTATION	3.168528699186858E-7	DEFECT
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999927369023708	WITHOUT_CLASSIFICATION	4.966216477786594E-6	DESIGN	9.086050926662606E-7	TEST	5.815287065547182E-7	IMPLEMENTATION	4.89894482325873E-7	DOCUMENTATION	3.168528699186858E-7	DEFECT
// getfield // get field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.999996030691971	WITHOUT_CLASSIFICATION	3.942760421423226E-6	DESIGN	1.3818555131386973E-8	IMPLEMENTATION	5.954089005138062E-9	DEFECT	4.595740797301013E-9	TEST	2.1792226995430934E-9	DOCUMENTATION
// areturn // return the value of the field	WITHOUT_CLASSIFICATION	0.9999992019966244	WITHOUT_CLASSIFICATION	6.9504986734426E-7	DESIGN	7.517752033016183E-8	DEFECT	2.5295723580983887E-8	IMPLEMENTATION	1.8540811630396622E-9	DOCUMENTATION	6.261830517077828E-10	TEST
/* local variables | this | callback | */	WITHOUT_CLASSIFICATION	0.9997845446276925	WITHOUT_CLASSIFICATION	2.0616721925827917E-4	DESIGN	3.948418496699863E-6	DEFECT	2.9835568162412152E-6	IMPLEMENTATION	2.1748429808263153E-6	TEST	1.8133475539444825E-7	DOCUMENTATION
// aload_1 // load callback	WITHOUT_CLASSIFICATION	0.9999667926630705	WITHOUT_CLASSIFICATION	1.7726524031818775E-5	DEFECT	8.130973283350876E-6	DESIGN	7.043049816602738E-6	IMPLEMENTATION	1.8994472396483088E-7	TEST	1.1684507379750664E-7	DOCUMENTATION
// putfield // put field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999998109280531	WITHOUT_CLASSIFICATION	1.488849594245863E-7	DESIGN	3.4658945566740274E-8	IMPLEMENTATION	3.2881749077416464E-9	DEFECT	1.1581673792689854E-9	DOCUMENTATION	1.0816995808047953E-9	TEST
// case of non-static field	WITHOUT_CLASSIFICATION	0.9999998575359625	WITHOUT_CLASSIFICATION	7.196106892255827E-8	IMPLEMENTATION	5.000807405225242E-8	DESIGN	1.4863489401403659E-8	DEFECT	5.241376392586747E-9	DOCUMENTATION	3.900285259216758E-10	TEST
// getfield // get each field	WITHOUT_CLASSIFICATION	0.9999925614345857	WITHOUT_CLASSIFICATION	7.344065864830938E-6	DESIGN	3.253158265044583E-8	IMPLEMENTATION	2.9484529795267264E-8	DEFECT	2.2843407389002682E-8	TEST	9.640029656356637E-9	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999997378339672	WITHOUT_CLASSIFICATION	2.394887814174043E-7	DESIGN	1.645954180966168E-8	DEFECT	2.8295236418108126E-9	TEST	1.7663527636729387E-9	DOCUMENTATION	1.6218330411836147E-9	IMPLEMENTATION
// ifnonnull	WITHOUT_CLASSIFICATION	0.9999942478926375	WITHOUT_CLASSIFICATION	4.224579466047651E-6	DEFECT	7.94739736822818E-7	DESIGN	6.010919823782674E-7	IMPLEMENTATION	8.303267068655252E-8	DOCUMENTATION	4.866350667599782E-8	TEST
// *return // each type	WITHOUT_CLASSIFICATION	0.9999992895708881	WITHOUT_CLASSIFICATION	6.686023802091198E-7	DESIGN	1.893424978122279E-8	IMPLEMENTATION	1.6572473913951435E-8	DEFECT	4.818174867580609E-9	DOCUMENTATION	1.501832912130078E-9	TEST
// *return // each type	WITHOUT_CLASSIFICATION	0.9999992895708881	WITHOUT_CLASSIFICATION	6.686023802091198E-7	DESIGN	1.893424978122279E-8	IMPLEMENTATION	1.6572473913951435E-8	DEFECT	4.818174867580609E-9	DOCUMENTATION	1.501832912130078E-9	TEST
// *store_1 // each type	WITHOUT_CLASSIFICATION	0.999999792236845	WITHOUT_CLASSIFICATION	1.8869995727255352E-7	DESIGN	1.1312281187629015E-8	IMPLEMENTATION	3.184064725521589E-9	TEST	2.515931511639585E-9	DEFECT	2.0509204168011974E-9	DOCUMENTATION
// ldc // name of the field	WITHOUT_CLASSIFICATION	0.9999705363076509	WITHOUT_CLASSIFICATION	2.7692290888573925E-5	DESIGN	1.1916113925918888E-6	IMPLEMENTATION	2.28777724264715E-7	DOCUMENTATION	1.767524024074033E-7	TEST	1.7425994121374434E-7	DEFECT
// *load_1 // each type	WITHOUT_CLASSIFICATION	0.9999997153771513	WITHOUT_CLASSIFICATION	2.003039078429382E-7	DESIGN	5.3282032385417915E-8	IMPLEMENTATION	1.8764189284937145E-8	DEFECT	7.354246782499711E-9	DOCUMENTATION	4.918472307966752E-9	TEST
// invokeinterface // invoke Callback.read*() // each type	WITHOUT_CLASSIFICATION	0.9999999258638832	WITHOUT_CLASSIFICATION	6.360619146704469E-8	DESIGN	9.02686108811846E-9	DEFECT	1.1743258327971347E-9	DOCUMENTATION	2.3516260973717126E-10	TEST	9.357572522346916E-11	IMPLEMENTATION
// int	WITHOUT_CLASSIFICATION	0.9999962845222357	WITHOUT_CLASSIFICATION	1.9123040416492385E-6	DEFECT	1.5100431137079315E-6	DESIGN	1.6451960711330863E-7	DOCUMENTATION	7.738387862885683E-8	TEST	5.1227123170712015E-8	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999911704791664	WITHOUT_CLASSIFICATION	7.4722031876870335E-6	DESIGN	6.864231282640529E-7	DEFECT	6.195127127820527E-7	IMPLEMENTATION	3.3732303078025076E-8	DOCUMENTATION	1.7649501928107135E-8	TEST
// dup	WITHOUT_CLASSIFICATION	0.9999909010141903	WITHOUT_CLASSIFICATION	7.031523732573186E-6	DESIGN	1.6825840275349445E-6	DEFECT	2.3065587307609962E-7	IMPLEMENTATION	1.0144933611013318E-7	DOCUMENTATION	5.2772840229001135E-8	TEST
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999992120548463	WITHOUT_CLASSIFICATION	7.301219053240696E-7	DESIGN	3.166591168143573E-8	DEFECT	1.737899848003468E-8	DOCUMENTATION	8.071608076308254E-9	TEST	7.067301393387633E-10	IMPLEMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999976750629468	WITHOUT_CLASSIFICATION	1.3028974241251877E-6	IMPLEMENTATION	8.517371456916452E-7	DESIGN	8.468468160556162E-8	DOCUMENTATION	5.6115055959375785E-8	TEST	2.9502745872431542E-8	DEFECT
// checkcast	WITHOUT_CLASSIFICATION	0.9999976750629468	WITHOUT_CLASSIFICATION	1.3028974241251877E-6	IMPLEMENTATION	8.517371456916452E-7	DESIGN	8.468468160556162E-8	DOCUMENTATION	5.6115055959375785E-8	TEST	2.9502745872431542E-8	DEFECT
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.999999842192469	WITHOUT_CLASSIFICATION	1.4269892635661053E-7	DESIGN	9.861217397381515E-9	DEFECT	2.0022488991250264E-9	IMPLEMENTATION	1.985750351338247E-9	TEST	1.2593880517020611E-9	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.999999842192469	WITHOUT_CLASSIFICATION	1.4269892635661053E-7	DESIGN	9.861217397381515E-9	DEFECT	2.0022488991250264E-9	IMPLEMENTATION	1.985750351338247E-9	TEST	1.2593880517020611E-9	DOCUMENTATION
// ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.9999765953512325	WITHOUT_CLASSIFICATION	1.4817390310860847E-5	DESIGN	7.016222133436678E-6	IMPLEMENTATION	1.267660717099045E-6	DEFECT	2.1433986321486312E-7	DOCUMENTATION	8.903574291715636E-8	TEST
// *load_1	WITHOUT_CLASSIFICATION	0.9999983637608079	WITHOUT_CLASSIFICATION	6.930194387123085E-7	DESIGN	5.623669342336616E-7	DEFECT	3.4283231705641265E-7	IMPLEMENTATION	2.2206793541816865E-8	TEST	1.5813708582146423E-8	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.9999983637608079	WITHOUT_CLASSIFICATION	6.930194387123085E-7	DESIGN	5.623669342336616E-7	DEFECT	3.4283231705641265E-7	IMPLEMENTATION	2.2206793541816865E-8	TEST	1.5813708582146423E-8	DOCUMENTATION
// putfield	WITHOUT_CLASSIFICATION	0.9999979553812476	WITHOUT_CLASSIFICATION	1.3886220155497789E-6	IMPLEMENTATION	5.142032495363444E-7	DESIGN	1.0815534824250177E-7	DEFECT	2.1260903054790634E-8	DOCUMENTATION	1.2377236082155828E-8	TEST
// return ;	WITHOUT_CLASSIFICATION	0.9999887075698103	WITHOUT_CLASSIFICATION	9.067854264982603E-6	DESIGN	1.071253393362533E-6	IMPLEMENTATION	1.070136915060531E-6	DEFECT	5.803318558459121E-8	DOCUMENTATION	2.515243070510148E-8	TEST
// ldc // field name	WITHOUT_CLASSIFICATION	0.999998176947189	WITHOUT_CLASSIFICATION	1.7022530476167486E-6	DESIGN	4.2147304218919925E-8	DEFECT	3.945094361873329E-8	IMPLEMENTATION	2.9674805235716723E-8	TEST	9.526710330177286E-9	DOCUMENTATION
// getfield // old value of the field	WITHOUT_CLASSIFICATION	0.999998527415988	WITHOUT_CLASSIFICATION	7.240720169537557E-7	DESIGN	7.181254587460343E-7	DEFECT	1.19215949763555E-8	IMPLEMENTATION	9.367099443733693E-9	DOCUMENTATION	9.097841744180716E-9	TEST
// invokeinterface // callback.write*(..)	WITHOUT_CLASSIFICATION	0.9999995307972435	WITHOUT_CLASSIFICATION	3.7887095731946576E-7	DEFECT	8.344511142793606E-8	DESIGN	2.502433125564898E-9	DOCUMENTATION	2.383495395353418E-9	TEST	2.0007592293814233E-9	IMPLEMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999985901209593	WITHOUT_CLASSIFICATION	1.1515899506237124E-6	DESIGN	1.2223498602543334E-7	IMPLEMENTATION	7.821555699574765E-8	DOCUMENTATION	4.8530975113106806E-8	DEFECT	9.307571913769704E-9	TEST
// reference type	WITHOUT_CLASSIFICATION	0.9999985901209593	WITHOUT_CLASSIFICATION	1.1515899506237124E-6	DESIGN	1.2223498602543334E-7	IMPLEMENTATION	7.821555699574765E-8	DOCUMENTATION	4.8530975113106806E-8	DEFECT	9.307571913769704E-9	TEST
// not array	WITHOUT_CLASSIFICATION	0.9995311943524877	WITHOUT_CLASSIFICATION	2.4046588066637658E-4	IMPLEMENTATION	1.7582732501566595E-4	DESIGN	4.7535503121404366E-5	DEFECT	2.5514847724531786E-6	DOCUMENTATION	2.425453936439035E-6	TEST
// array of reference type	WITHOUT_CLASSIFICATION	0.9999995896277315	WITHOUT_CLASSIFICATION	2.8590278494342453E-7	DESIGN	5.484625343696415E-8	DOCUMENTATION	3.304377544133487E-8	DEFECT	3.176723870590041E-8	IMPLEMENTATION	4.8122160752491924E-9	TEST
// boolean	WITHOUT_CLASSIFICATION	0.9999942398823318	WITHOUT_CLASSIFICATION	5.0447736130500345E-6	DESIGN	3.0233179314034915E-7	DEFECT	2.7323427214499807E-7	IMPLEMENTATION	7.09413797986923E-8	DOCUMENTATION	6.883661000984676E-8	TEST
// byte	WITHOUT_CLASSIFICATION	0.9999882630586783	WITHOUT_CLASSIFICATION	5.834039085426463E-6	IMPLEMENTATION	4.03231877511441E-6	DESIGN	1.3861400673892418E-6	DEFECT	2.6236605372345165E-7	TEST	2.220773400126374E-7	DOCUMENTATION
// char	WITHOUT_CLASSIFICATION	0.9999999744249883	WITHOUT_CLASSIFICATION	2.06097026937398E-8	DESIGN	1.904852035350278E-9	DEFECT	1.6657361583845197E-9	IMPLEMENTATION	7.642734526538624E-10	DOCUMENTATION	6.304474885669804E-10	TEST
// short	WITHOUT_CLASSIFICATION	0.9999812111267907	WITHOUT_CLASSIFICATION	1.661700730370691E-5	DESIGN	1.330146081805762E-6	DEFECT	4.1155743525853486E-7	IMPLEMENTATION	2.755411086783752E-7	TEST	1.546212797657282E-7	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.999997943447298	WITHOUT_CLASSIFICATION	1.793726688405522E-6	DESIGN	2.321732875102592E-7	DEFECT	1.1212342538098986E-8	IMPLEMENTATION	1.0711793705208231E-8	TEST	8.728589693622378E-9	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999952814241013	WITHOUT_CLASSIFICATION	3.8689203547787065E-6	DEFECT	6.185380931684753E-7	DESIGN	1.2395194400391722E-7	IMPLEMENTATION	6.008588183552512E-8	TEST	4.707962497578367E-8	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999952814241013	WITHOUT_CLASSIFICATION	3.8689203547787065E-6	DEFECT	6.185380931684753E-7	DESIGN	1.2395194400391722E-7	IMPLEMENTATION	6.008588183552512E-8	TEST	4.707962497578367E-8	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999708508648996	WITHOUT_CLASSIFICATION	1.8020527619971168E-5	DEFECT	1.0469109675231729E-5	DESIGN	3.4910009890409815E-7	IMPLEMENTATION	1.6189921405943706E-7	DOCUMENTATION	1.484984922697912E-7	TEST
// long	WITHOUT_CLASSIFICATION	0.9999708508648996	WITHOUT_CLASSIFICATION	1.8020527619971168E-5	DEFECT	1.0469109675231729E-5	DESIGN	3.4910009890409815E-7	IMPLEMENTATION	1.6189921405943706E-7	DOCUMENTATION	1.484984922697912E-7	TEST
// bad type	WITHOUT_CLASSIFICATION	0.9999973815999819	WITHOUT_CLASSIFICATION	1.305113327448053E-6	DESIGN	1.1331635091677412E-6	IMPLEMENTATION	7.418242791002795E-8	DOCUMENTATION	5.798519952288021E-8	DEFECT	4.795555415627542E-8	TEST
// bad type	WITHOUT_CLASSIFICATION	0.9999973815999819	WITHOUT_CLASSIFICATION	1.305113327448053E-6	DESIGN	1.1331635091677412E-6	IMPLEMENTATION	7.418242791002795E-8	DOCUMENTATION	5.798519952288021E-8	DEFECT	4.795555415627542E-8	TEST
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999996889814334	WITHOUT_CLASSIFICATION	1.7078315724335126E-7	DESIGN	7.220976027581934E-8	IMPLEMENTATION	4.368349948663464E-8	DEFECT	1.3382275295613058E-8	DOCUMENTATION	1.0959874335542806E-8	TEST
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999996889814334	WITHOUT_CLASSIFICATION	1.7078315724335126E-7	DESIGN	7.220976027581934E-8	IMPLEMENTATION	4.368349948663464E-8	DEFECT	1.3382275295613058E-8	DOCUMENTATION	1.0959874335542806E-8	TEST
// reference type	WITHOUT_CLASSIFICATION	0.9999985901209593	WITHOUT_CLASSIFICATION	1.1515899506237124E-6	DESIGN	1.2223498602543334E-7	IMPLEMENTATION	7.821555699574765E-8	DOCUMENTATION	4.8530975113106806E-8	DEFECT	9.307571913769704E-9	TEST
// double	WITHOUT_CLASSIFICATION	0.999997943447298	WITHOUT_CLASSIFICATION	1.793726688405522E-6	DESIGN	2.321732875102592E-7	DEFECT	1.1212342538098986E-8	IMPLEMENTATION	1.0711793705208231E-8	TEST	8.728589693622378E-9	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999952814241013	WITHOUT_CLASSIFICATION	3.8689203547787065E-6	DEFECT	6.185380931684753E-7	DESIGN	1.2395194400391722E-7	IMPLEMENTATION	6.008588183552512E-8	TEST	4.707962497578367E-8	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999952814241013	WITHOUT_CLASSIFICATION	3.8689203547787065E-6	DEFECT	6.185380931684753E-7	DESIGN	1.2395194400391722E-7	IMPLEMENTATION	6.008588183552512E-8	TEST	4.707962497578367E-8	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999708508648996	WITHOUT_CLASSIFICATION	1.8020527619971168E-5	DEFECT	1.0469109675231729E-5	DESIGN	3.4910009890409815E-7	IMPLEMENTATION	1.6189921405943706E-7	DOCUMENTATION	1.484984922697912E-7	TEST
// bad type	WITHOUT_CLASSIFICATION	0.9999973815999819	WITHOUT_CLASSIFICATION	1.305113327448053E-6	DESIGN	1.1331635091677412E-6	IMPLEMENTATION	7.418242791002795E-8	DOCUMENTATION	5.798519952288021E-8	DEFECT	4.795555415627542E-8	TEST
// bad type	WITHOUT_CLASSIFICATION	0.9999973815999819	WITHOUT_CLASSIFICATION	1.305113327448053E-6	DESIGN	1.1331635091677412E-6	IMPLEMENTATION	7.418242791002795E-8	DOCUMENTATION	5.798519952288021E-8	DEFECT	4.795555415627542E-8	TEST
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999996889814334	WITHOUT_CLASSIFICATION	1.7078315724335126E-7	DESIGN	7.220976027581934E-8	IMPLEMENTATION	4.368349948663464E-8	DEFECT	1.3382275295613058E-8	DOCUMENTATION	1.0959874335542806E-8	TEST
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999764901728444	WITHOUT_CLASSIFICATION	1.5153681459998284E-5	IMPLEMENTATION	6.99992683870996E-6	DESIGN	6.642753551096452E-7	DOCUMENTATION	4.3377830135481907E-7	DEFECT	2.581652004571915E-7	TEST
//Mainly for OSCache	WITHOUT_CLASSIFICATION	0.9997615028634798	WITHOUT_CLASSIFICATION	2.350801738078993E-4	DESIGN	1.6853323282135323E-6	DOCUMENTATION	7.889593354601972E-7	IMPLEMENTATION	6.221087982448405E-7	DEFECT	3.2056225048031794E-7	TEST
//decrement the lock	WITHOUT_CLASSIFICATION	0.9989866128372077	WITHOUT_CLASSIFICATION	6.239309684172624E-4	IMPLEMENTATION	3.188053962836729E-4	DESIGN	3.744429075781072E-5	DOCUMENTATION	2.5929882473702496E-5	DEFECT	7.276624859894488E-6	TEST
// create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.9999981642251706	WITHOUT_CLASSIFICATION	8.627101313353614E-7	DESIGN	7.382469128574723E-7	DEFECT	1.703895836068396E-7	IMPLEMENTATION	5.637959523097909E-8	TEST	8.048606304624787E-9	DOCUMENTATION
//recache the updated state	WITHOUT_CLASSIFICATION	0.9999962065463057	WITHOUT_CLASSIFICATION	1.873290906102779E-6	DESIGN	1.7537097184692604E-6	IMPLEMENTATION	6.90153484473166E-8	DOCUMENTATION	6.377075668553965E-8	TEST	3.366696457753445E-8	DEFECT
// noop	WITHOUT_CLASSIFICATION	0.9999501326593111	WITHOUT_CLASSIFICATION	3.061255168238426E-5	DESIGN	9.259403528466524E-6	DEFECT	8.966981320156865E-6	IMPLEMENTATION	7.173272361972432E-7	DOCUMENTATION	3.110769215576967E-7	TEST
//null clientLock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.9996177351061282	WITHOUT_CLASSIFICATION	3.6329142869398587E-4	DESIGN	1.6040718165452223E-5	DEFECT	2.5387726055661867E-6	IMPLEMENTATION	3.566012738691829E-7	DOCUMENTATION	3.7373133037232014E-8	TEST
// we really could refresh the item if it // is not a lock, but it might be slower //return freshTimestamp < txTimestamp	WITHOUT_CLASSIFICATION	0.9123578486564788	WITHOUT_CLASSIFICATION	0.08673568003264909	DEFECT	8.994190793511355E-4	DESIGN	6.432406592870007E-6	TEST	5.917965440017508E-7	IMPLEMENTATION	2.802838414678362E-8	DOCUMENTATION
//by requiring <, we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.9882634117407906	WITHOUT_CLASSIFICATION	0.01132007812531462	DEFECT	3.825308642610462E-4	DESIGN	2.9384450494893802E-5	IMPLEMENTATION	3.8502286108567774E-6	DOCUMENTATION	7.445905280579295E-7	TEST
// the user provided resulttransformer, not the one used with "select new". Here to avoid mangling // transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.999999996116382	WITHOUT_CLASSIFICATION	3.357126327336911E-9	DESIGN	3.2179682903717925E-10	IMPLEMENTATION	1.104236389262009E-10	TEST	8.504697882764318E-11	DEFECT	9.224442134445814E-12	DOCUMENTATION
// disassemble positional parameters	WITHOUT_CLASSIFICATION	0.999990437390588	WITHOUT_CLASSIFICATION	8.879720418179931E-6	IMPLEMENTATION	5.396194747883384E-7	DEFECT	1.0152193352587201E-7	DESIGN	2.7404455025196154E-8	TEST	1.4343130558382816E-8	DOCUMENTATION
// disassemble named parameters	WITHOUT_CLASSIFICATION	0.9999996683614898	WITHOUT_CLASSIFICATION	1.4523640434590144E-7	DESIGN	1.3201069850591205E-7	IMPLEMENTATION	3.798071043935648E-8	TEST	1.4757218062250565E-8	DEFECT	1.653479002545442E-9	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.999941098917756	WITHOUT_CLASSIFICATION	5.3066766976843544E-5	DESIGN	4.011055571483929E-6	IMPLEMENTATION	9.847135574733587E-7	DOCUMENTATION	5.564074018399167E-7	DEFECT	2.821387364772823E-7	TEST
// noop	WITHOUT_CLASSIFICATION	0.9999501326593111	WITHOUT_CLASSIFICATION	3.061255168238426E-5	DESIGN	9.259403528466524E-6	DEFECT	8.966981320156865E-6	IMPLEMENTATION	7.173272361972432E-7	DOCUMENTATION	3.110769215576967E-7	TEST
//noop	WITHOUT_CLASSIFICATION	0.9995559812158034	WITHOUT_CLASSIFICATION	3.24367088516468E-4	DESIGN	9.507919457623802E-5	DEFECT	1.1684391318673071E-5	IMPLEMENTATION	9.055997357426253E-6	DOCUMENTATION	3.832112427910448E-6	TEST
//noop	WITHOUT_CLASSIFICATION	0.9995559812158034	WITHOUT_CLASSIFICATION	3.24367088516468E-4	DESIGN	9.507919457623802E-5	DEFECT	1.1684391318673071E-5	IMPLEMENTATION	9.055997357426253E-6	DOCUMENTATION	3.832112427910448E-6	TEST
// this is called from SettingsFactory irregardless; trivial to simply disregard	WITHOUT_CLASSIFICATION	0.9999990856230079	WITHOUT_CLASSIFICATION	8.746426756700187E-7	DESIGN	3.868383940195952E-8	DEFECT	6.880748370046387E-10	TEST	2.2582138578044444E-10	DOCUMENTATION	1.3658074869167917E-10	IMPLEMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999996460879872	WITHOUT_CLASSIFICATION	3.246539564119467E-7	DESIGN	1.534174422398328E-8	IMPLEMENTATION	7.758974010377712E-9	DOCUMENTATION	3.880607115584363E-9	TEST	2.276730977872735E-9	DEFECT
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999996460879872	WITHOUT_CLASSIFICATION	3.246539564119467E-7	DESIGN	1.534174422398328E-8	IMPLEMENTATION	7.758974010377712E-9	DOCUMENTATION	3.880607115584363E-9	TEST	2.276730977872735E-9	DEFECT
//throw new UnsupportedOperationException("Can't write to a readonly object");	WITHOUT_CLASSIFICATION	0.9999831590201371	WITHOUT_CLASSIFICATION	1.6083587850749034E-5	DESIGN	6.538774650691506E-7	DEFECT	7.969508555130552E-8	DOCUMENTATION	1.923713158950914E-8	TEST	4.582330000302835E-9	IMPLEMENTATION
//assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9976062373039791	WITHOUT_CLASSIFICATION	0.002341342139206782	DESIGN	5.217504859533614E-5	DEFECT	1.3258487504551816E-7	DOCUMENTATION	1.0794668424202238E-7	TEST	4.976659389891316E-9	IMPLEMENTATION
//persister.setIdentifier(result, id); //before calling interceptor, for consistency with normal load	WITHOUT_CLASSIFICATION	0.9999681533018786	WITHOUT_CLASSIFICATION	2.9017227951379598E-5	DEFECT	1.8969050488413878E-6	IMPLEMENTATION	8.310094248832722E-7	DESIGN	5.749025441487795E-8	TEST	4.406544197003571E-8	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999231381666454	WITHOUT_CLASSIFICATION	6.775356591931213E-5	DESIGN	6.814771984194483E-6	DEFECT	1.948163099455143E-6	IMPLEMENTATION	2.7865125026944156E-7	DOCUMENTATION	6.668110147049807E-8	TEST
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999231381666454	WITHOUT_CLASSIFICATION	6.775356591931213E-5	DESIGN	6.814771984194483E-6	DEFECT	1.948163099455143E-6	IMPLEMENTATION	2.7865125026944156E-7	DOCUMENTATION	6.668110147049807E-8	TEST
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999999662538737	WITHOUT_CLASSIFICATION	2.7249630211025335E-8	DESIGN	5.336842310698871E-9	DEFECT	9.655131138903008E-10	IMPLEMENTATION	1.672227767481613E-10	TEST	2.6917900589482908E-11	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999942654325923	WITHOUT_CLASSIFICATION	4.172450426052916E-6	DEFECT	1.5485250660892474E-6	DESIGN	9.502655408648893E-9	IMPLEMENTATION	2.1500038865333605E-9	TEST	1.939256438311366E-9	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999942654325923	WITHOUT_CLASSIFICATION	4.172450426052916E-6	DEFECT	1.5485250660892474E-6	DESIGN	9.502655408648893E-9	IMPLEMENTATION	2.1500038865333605E-9	TEST	1.939256438311366E-9	DOCUMENTATION
// classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.9998694781012658	WITHOUT_CLASSIFICATION	1.2452001946279228E-4	DESIGN	5.157390231005818E-6	TEST	5.303288402334101E-7	DEFECT	3.0484028411786214E-7	DOCUMENTATION	9.31991587822383E-9	IMPLEMENTATION
// get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.9999971519163902	WITHOUT_CLASSIFICATION	2.2395652533386105E-6	DESIGN	5.40031424830028E-7	DEFECT	3.112046579146307E-8	IMPLEMENTATION	2.9432043686291285E-8	TEST	7.934422223710516E-9	DOCUMENTATION
// get meta's from <class>	WITHOUT_CLASSIFICATION	0.9999886904658353	WITHOUT_CLASSIFICATION	1.1270602633296422E-5	DESIGN	2.879822038757968E-8	DEFECT	7.41473953801809E-9	TEST	2.42667851588903E-9	DOCUMENTATION	2.918931281710758E-10	IMPLEMENTATION
// DB-OBJECTNAME	WITHOUT_CLASSIFICATION	0.9999813499937916	WITHOUT_CLASSIFICATION	1.2301438619697439E-5	DESIGN	3.796835039398029E-6	IMPLEMENTATION	1.2427428834488464E-6	DEFECT	8.288692804564781E-7	DOCUMENTATION	4.801203853570945E-7	TEST
// MUTABLE	WITHOUT_CLASSIFICATION	0.9999970767877319	WITHOUT_CLASSIFICATION	2.400896083880228E-6	DESIGN	3.244314361010035E-7	DEFECT	9.059973232594436E-8	IMPLEMENTATION	5.481621673765984E-8	DOCUMENTATION	5.246879916813045E-8	TEST
// WHERE	WITHOUT_CLASSIFICATION	0.9999955945460142	WITHOUT_CLASSIFICATION	2.6944409360977152E-6	DESIGN	1.2026588358983972E-6	DEFECT	2.829238439465659E-7	IMPLEMENTATION	1.2158081351890447E-7	TEST	1.0384955620040998E-7	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999699195639481	WITHOUT_CLASSIFICATION	2.899702572780628E-5	DESIGN	6.500644125652516E-7	DEFECT	1.8379492902016322E-7	DOCUMENTATION	1.420901908527506E-7	TEST	1.0746079181602427E-7	IMPLEMENTATION
// POLYMORPHISM	WITHOUT_CLASSIFICATION	0.999991401289192	WITHOUT_CLASSIFICATION	5.350583367259904E-6	DESIGN	1.623511031154467E-6	IMPLEMENTATION	1.1840051924702318E-6	DEFECT	2.82909181344694E-7	DOCUMENTATION	1.5770203582939713E-7	TEST
// TODO:	WITHOUT_CLASSIFICATION	0.9857175266518888	WITHOUT_CLASSIFICATION	0.007180060763618398	IMPLEMENTATION	0.005266373346307437	DESIGN	0.001245984160550397	DEFECT	3.1409129495442954E-4	DOCUMENTATION	2.7596378268056766E-4	TEST
// ID	WITHOUT_CLASSIFICATION	0.999984281622675	WITHOUT_CLASSIFICATION	1.059382095735336E-5	DESIGN	3.0973323561209928E-6	IMPLEMENTATION	1.5067066415024466E-6	DEFECT	2.8249907040725986E-7	DOCUMENTATION	2.3801829956821917E-7	TEST
// VERSION / TIMESTAMP	WITHOUT_CLASSIFICATION	0.9999960521052854	WITHOUT_CLASSIFICATION	1.6793536437199084E-6	DESIGN	1.2918431545026146E-6	IMPLEMENTATION	5.811667156904836E-7	DEFECT	2.0685041585771607E-7	DOCUMENTATION	1.8868078490532632E-7	TEST
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9998764946712931	WITHOUT_CLASSIFICATION	7.822683395724707E-5	IMPLEMENTATION	3.4531711121345124E-5	DESIGN	6.64388050626347E-6	DEFECT	2.60757063745517E-6	DOCUMENTATION	1.495332484642253E-6	TEST
// Primary key constraint	WITHOUT_CLASSIFICATION	0.9999999450179314	WITHOUT_CLASSIFICATION	3.9867438808612965E-8	DESIGN	6.064453019729693E-9	DOCUMENTATION	5.0794774892422146E-9	IMPLEMENTATION	2.9881288498169674E-9	TEST	9.825704857102378E-10	DEFECT
// this is either a <version/> tag with no type attribute, // or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.9999998765632856	WITHOUT_CLASSIFICATION	4.1124310013868806E-8	DEFECT	3.312191676328296E-8	TEST	3.0077248453832205E-8	IMPLEMENTATION	1.808597497739054E-8	DESIGN	1.0272642071461311E-9	DOCUMENTATION
// for version properties marked as being generated, make sure they are "always" // generated; aka, "insert" is invalid; this is dis-allowed by the DTD, // but just to make sure...	WITHOUT_CLASSIFICATION	0.9999980178342749	WITHOUT_CLASSIFICATION	1.9555045030066336E-6	DESIGN	1.4317320817420718E-8	TEST	1.1795446951450116E-8	DEFECT	4.622159921304866E-10	IMPLEMENTATION	8.623826229222806E-11	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9998764946712931	WITHOUT_CLASSIFICATION	7.822683395724707E-5	IMPLEMENTATION	3.4531711121345124E-5	DESIGN	6.64388050626347E-6	DEFECT	2.60757063745517E-6	DOCUMENTATION	1.495332484642253E-6	TEST
// ( (Column) discrim.getColumnIterator().next() ).setType(type);	WITHOUT_CLASSIFICATION	0.9999904020349756	WITHOUT_CLASSIFICATION	9.209605573159932E-6	DESIGN	3.294855893031469E-7	DEFECT	4.899444891486677E-8	IMPLEMENTATION	8.296972375546954E-9	DOCUMENTATION	1.5824406305270126E-9	TEST
// go ahead and set the lazy here, since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.9999976701176875	WITHOUT_CLASSIFICATION	2.2172216908288122E-6	IMPLEMENTATION	9.043727699614393E-8	DESIGN	1.8436501884737677E-8	DEFECT	3.0372448017716683E-9	DOCUMENTATION	7.495979159747702E-10	TEST
// DYNAMIC UPDATE	WITHOUT_CLASSIFICATION	0.9999628098416182	WITHOUT_CLASSIFICATION	1.8898101026103252E-5	IMPLEMENTATION	1.6637792363300952E-5	DESIGN	6.607583587730379E-7	DEFECT	6.436895538308376E-7	DOCUMENTATION	3.4981707964283536E-7	TEST
// IMPORT	WITHOUT_CLASSIFICATION	0.9999866566921105	WITHOUT_CLASSIFICATION	8.214189484979234E-6	DESIGN	3.032147822256717E-6	DEFECT	1.6762799218973135E-6	IMPLEMENTATION	2.6396999326315427E-7	DOCUMENTATION	1.5672066698279883E-7	TEST
// BATCH SIZE	WITHOUT_CLASSIFICATION	0.9999406747222971	WITHOUT_CLASSIFICATION	3.182662387423529E-5	DESIGN	1.747303643868077E-5	DEFECT	7.249551573936582E-6	IMPLEMENTATION	2.0687856462512412E-6	DOCUMENTATION	7.072801698364546E-7	TEST
// SELECT BEFORE UPDATE	WITHOUT_CLASSIFICATION	0.999996782097739	WITHOUT_CLASSIFICATION	1.410789115536643E-6	DESIGN	1.0272287083212928E-6	IMPLEMENTATION	3.3385480406813935E-7	DOCUMENTATION	3.2104943861354276E-7	DEFECT	1.249801943312854E-7	TEST
// OPTIMISTIC LOCK MODE	WITHOUT_CLASSIFICATION	0.9999951738173873	WITHOUT_CLASSIFICATION	4.021670583209114E-6	DESIGN	3.2279971388577377E-7	DOCUMENTATION	2.5756420388904397E-7	IMPLEMENTATION	1.410944113038879E-7	TEST	8.305370021829967E-8	DEFECT
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999927492055899	WITHOUT_CLASSIFICATION	3.5634017844431534E-6	DESIGN	2.408575543619636E-6	IMPLEMENTATION	6.839581727545458E-7	DEFECT	3.833892888579051E-7	DOCUMENTATION	2.1146962041371228E-7	TEST
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.999988979612186	WITHOUT_CLASSIFICATION	1.0513740964742592E-5	DESIGN	2.4093157564529804E-7	DEFECT	1.5856929063877083E-7	DOCUMENTATION	6.732520863749712E-8	TEST	3.9820774365365555E-8	IMPLEMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999867006587734	WITHOUT_CLASSIFICATION	1.3243235186147807E-5	DESIGN	5.039030007733648E-8	DEFECT	3.886386400767501E-9	TEST	1.6388903980296285E-9	DOCUMENTATION	1.90463613566348E-10	IMPLEMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999986117135928	WITHOUT_CLASSIFICATION	6.42022595439049E-7	DESIGN	3.510982400219735E-7	DEFECT	3.0207109835517316E-7	IMPLEMENTATION	6.393998298721636E-8	TEST	2.9154490316005267E-8	DOCUMENTATION
// joined subclasses	WITHOUT_CLASSIFICATION	0.9999998053889683	WITHOUT_CLASSIFICATION	1.8217350827173128E-7	DESIGN	3.918835782989851E-9	IMPLEMENTATION	3.552753577421347E-9	TEST	3.0795893981806025E-9	DOCUMENTATION	1.886344642369287E-9	DEFECT
// KEY	WITHOUT_CLASSIFICATION	0.9999857660727985	WITHOUT_CLASSIFICATION	1.2694695919068924E-5	DESIGN	8.313827984893638E-7	DEFECT	3.629500371997889E-7	IMPLEMENTATION	1.7409529986519852E-7	TEST	1.708031470776767E-7	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999699195639481	WITHOUT_CLASSIFICATION	2.899702572780628E-5	DESIGN	6.500644125652516E-7	DEFECT	1.8379492902016322E-7	DOCUMENTATION	1.420901908527506E-7	TEST	1.0746079181602427E-7	IMPLEMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.999988979612186	WITHOUT_CLASSIFICATION	1.0513740964742592E-5	DESIGN	2.4093157564529804E-7	DEFECT	1.5856929063877083E-7	DOCUMENTATION	6.732520863749712E-8	TEST	3.9820774365365555E-8	IMPLEMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999986117135928	WITHOUT_CLASSIFICATION	6.42022595439049E-7	DESIGN	3.510982400219735E-7	DEFECT	3.0207109835517316E-7	IMPLEMENTATION	6.393998298721636E-8	TEST	2.9154490316005267E-8	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999857660727985	WITHOUT_CLASSIFICATION	1.2694695919068924E-5	DESIGN	8.313827984893638E-7	DEFECT	3.629500371997889E-7	IMPLEMENTATION	1.7409529986519852E-7	TEST	1.708031470776767E-7	DOCUMENTATION
// model.getKey().setType( new Type( model.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999987035894332	WITHOUT_CLASSIFICATION	9.681522332010453E-7	DESIGN	2.7423256765337526E-7	IMPLEMENTATION	4.0341483505626486E-8	DEFECT	1.2194989677868792E-8	DOCUMENTATION	1.4892926399374005E-9	TEST
// TABLENAME	WITHOUT_CLASSIFICATION	0.9999891254940323	WITHOUT_CLASSIFICATION	4.9810689032670585E-6	DESIGN	3.2554244233335327E-6	IMPLEMENTATION	2.0096922927821854E-6	DEFECT	3.4044793228305355E-7	DOCUMENTATION	2.8787241600935783E-7	TEST
// join.getKey().setType( new Type( lazz.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999998829968721	WITHOUT_CLASSIFICATION	6.397612382256214E-8	IMPLEMENTATION	4.03048735858024E-8	DESIGN	1.0348044167626548E-8	DEFECT	2.247856466710057E-9	DOCUMENTATION	1.262298626312157E-10	TEST
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999935996453612	WITHOUT_CLASSIFICATION	3.4953616016158255E-6	DESIGN	1.7736340158713255E-6	IMPLEMENTATION	5.558921067786602E-7	DEFECT	3.757606975958942E-7	DOCUMENTATION	1.9970621704131538E-7	TEST
// COLUMN(S)	WITHOUT_CLASSIFICATION	0.9999947753876164	WITHOUT_CLASSIFICATION	4.41463720754332E-6	DESIGN	3.773026456246304E-7	IMPLEMENTATION	2.2681864139798016E-7	DEFECT	1.3683415371057167E-7	DOCUMENTATION	6.901973524902136E-8	TEST
// column index	WITHOUT_CLASSIFICATION	0.9999704551313859	WITHOUT_CLASSIFICATION	2.396163596005466E-5	DEFECT	3.7103306624766186E-6	DESIGN	1.3693764489431848E-6	IMPLEMENTATION	3.931418205328826E-7	DOCUMENTATION	1.1038372197675353E-7	TEST
//column unique-key	WITHOUT_CLASSIFICATION	0.9999068163168698	WITHOUT_CLASSIFICATION	6.019769378887187E-5	DESIGN	1.710701093031189E-5	DEFECT	9.60262305333957E-6	IMPLEMENTATION	5.4979548617724815E-6	DOCUMENTATION	7.784004957708794E-7	TEST
// automatically makes a column with the default name if none is specifed by XML	WITHOUT_CLASSIFICATION	0.9930940179071365	WITHOUT_CLASSIFICATION	0.0067468862265816065	DESIGN	1.4918039839790904E-4	DEFECT	4.225029982796163E-6	TEST	3.830698692780911E-6	IMPLEMENTATION	1.8597392082847266E-6	DOCUMENTATION
// for an any	WITHOUT_CLASSIFICATION	0.9999951466888443	WITHOUT_CLASSIFICATION	3.136536315043112E-6	DESIGN	1.0968495489508919E-6	DEFECT	2.315573148092866E-7	IMPLEMENTATION	2.1988912031361324E-7	TEST	1.6847885663777366E-7	DOCUMENTATION
// insertable simply because that is the user did not specify // anything; just override it	WITHOUT_CLASSIFICATION	0.999999979289651	WITHOUT_CLASSIFICATION	1.9632580896924035E-8	IMPLEMENTATION	5.385535846325414E-10	DESIGN	2.905388159145138E-10	DEFECT	1.3371189404327516E-10	TEST	1.149638488472601E-10	DOCUMENTATION
// the user specifically supplied insert="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999993424300648	WITHOUT_CLASSIFICATION	5.884941784287712E-7	DESIGN	2.944543965827932E-8	TEST	1.877558848094003E-8	DOCUMENTATION	1.115047211222102E-8	IMPLEMENTATION	9.704256377964788E-9	DEFECT
// properties generated on update can never be updateable...	WITHOUT_CLASSIFICATION	0.9999962521302506	WITHOUT_CLASSIFICATION	3.3940383528984362E-6	DESIGN	2.8315320312505866E-7	DEFECT	5.21771191018362E-8	IMPLEMENTATION	1.788365103833995E-8	TEST	6.174234183710396E-10	DOCUMENTATION
// updateable only because the user did not specify  // anything; just override it	WITHOUT_CLASSIFICATION	0.9999988001033272	WITHOUT_CLASSIFICATION	1.1936593649905587E-6	IMPLEMENTATION	4.109008366688749E-9	DOCUMENTATION	1.3003292603777819E-9	DEFECT	6.760832296289546E-10	TEST	1.51886886545753E-10	DESIGN
// the user specifically supplied update="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999996973820539	WITHOUT_CLASSIFICATION	1.5890706526213553E-7	IMPLEMENTATION	8.822299520024944E-8	DESIGN	3.139240124505563E-8	DEFECT	1.3014535505409356E-8	DOCUMENTATION	1.1080949007077603E-8	TEST
// ROLENAME	WITHOUT_CLASSIFICATION	0.9999798820117372	WITHOUT_CLASSIFICATION	1.3604809230819733E-5	DESIGN	3.3351510006288597E-6	IMPLEMENTATION	2.4732612174120493E-6	DEFECT	4.0190470929332915E-7	TEST	3.0286210476759207E-7	DOCUMENTATION
// FETCH STRATEGY	WITHOUT_CLASSIFICATION	0.9999656731713154	WITHOUT_CLASSIFICATION	2.1214066287253973E-5	DESIGN	9.363188665590898E-6	IMPLEMENTATION	2.0821419549422694E-6	DEFECT	1.0467281255441032E-6	DOCUMENTATION	6.207036512098667E-7	TEST
// TABLE	WITHOUT_CLASSIFICATION	0.9999969917965663	WITHOUT_CLASSIFICATION	1.179115845388376E-6	DESIGN	1.0604837812580882E-6	DEFECT	5.647272849087585E-7	IMPLEMENTATION	1.1911951039240018E-7	DOCUMENTATION	8.475701178169726E-8	TEST
//tableName = mappings.getNamingStrategy().propertyToTableName( className, path );	WITHOUT_CLASSIFICATION	0.9999966816605597	WITHOUT_CLASSIFICATION	2.9118326877454605E-6	DESIGN	2.2234768348599615E-7	IMPLEMENTATION	1.0342181835507614E-7	TEST	5.69726233465288E-8	DEFECT	2.376462734331784E-8	DOCUMENTATION
// SORT	WITHOUT_CLASSIFICATION	0.9999887928065948	WITHOUT_CLASSIFICATION	8.117656551881242E-6	DESIGN	1.7050674836154424E-6	DEFECT	8.897613796902145E-7	IMPLEMENTATION	2.9863159717816977E-7	DOCUMENTATION	1.9607639275477458E-7	TEST
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.999988979612186	WITHOUT_CLASSIFICATION	1.0513740964742592E-5	DESIGN	2.4093157564529804E-7	DEFECT	1.5856929063877083E-7	DOCUMENTATION	6.732520863749712E-8	TEST	3.9820774365365555E-8	IMPLEMENTATION
// unsorted, natural, comparator.class.name	WITHOUT_CLASSIFICATION	0.9999487688999816	WITHOUT_CLASSIFICATION	5.110257984738526E-5	DESIGN	7.376081096171314E-8	IMPLEMENTATION	2.4975690016951924E-8	TEST	1.8966270558950913E-8	DEFECT	1.0817399360149719E-8	DOCUMENTATION
// ORPHAN DELETE (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.9999464851776335	WITHOUT_CLASSIFICATION	5.082002437060451E-5	DESIGN	2.5392716395986593E-6	IMPLEMENTATION	7.78091326945993E-8	DEFECT	5.226393736121075E-8	DOCUMENTATION	2.5453286136118233E-8	TEST
// set up second pass	WITHOUT_CLASSIFICATION	0.9999917089861575	WITHOUT_CLASSIFICATION	6.9348974991117E-6	DESIGN	1.2532068347876114E-6	IMPLEMENTATION	6.0440019151112E-8	DOCUMENTATION	2.8078007353553644E-8	TEST	1.4391481987510121E-8	DEFECT
// an "embedded" component (composite ids and unique) // note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.9993444854083291	WITHOUT_CLASSIFICATION	5.796507638937838E-4	DESIGN	5.321399713360518E-5	TEST	2.247193112235755E-5	IMPLEMENTATION	9.942593752418587E-8	DOCUMENTATION	7.847358352242873E-8	DEFECT
// a nested composite element	WITHOUT_CLASSIFICATION	0.9999988048583061	WITHOUT_CLASSIFICATION	1.0069640319116316E-6	DESIGN	1.1162468738190869E-7	IMPLEMENTATION	3.850736944398645E-8	TEST	2.3124737449229256E-8	DEFECT	1.4920867717769945E-8	DOCUMENTATION
// for an any // we will have to use reflection	WITHOUT_CLASSIFICATION	0.999837638737508	WITHOUT_CLASSIFICATION	8.985660259183857E-5	DEFECT	6.97839439665064E-5	DESIGN	2.049491268064316E-6	IMPLEMENTATION	5.284739098572066E-7	DOCUMENTATION	1.4275075579811427E-7	TEST
//NOTE SPECIAL CASE: // one-to-one constrained=false cannot be proxied, // so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.9999994248063103	WITHOUT_CLASSIFICATION	4.83900735208921E-7	DESIGN	8.472803072292379E-8	IMPLEMENTATION	4.3587769032049745E-9	DOCUMENTATION	2.157023790269001E-9	DEFECT	4.912294022132384E-11	TEST
// use old (HB 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.9999997772054626	WITHOUT_CLASSIFICATION	1.4341295157054818E-7	DESIGN	5.947212389012546E-8	IMPLEMENTATION	1.3007734713458106E-8	DEFECT	5.892477624933758E-9	DOCUMENTATION	1.0092495975298481E-9	TEST
//lazy = !join;	WITHOUT_CLASSIFICATION	0.9999912463840297	WITHOUT_CLASSIFICATION	4.077485830169603E-6	DEFECT	3.004050688599429E-6	DESIGN	7.908265489940941E-7	DOCUMENTATION	7.382891346576476E-7	IMPLEMENTATION	1.4296376786723345E-7	TEST
// GENERATOR	WITHOUT_CLASSIFICATION	0.9999843710430211	WITHOUT_CLASSIFICATION	1.033119104429908E-5	DESIGN	2.341729041852847E-6	IMPLEMENTATION	1.957208765243379E-6	DEFECT	5.071432009302697E-7	DOCUMENTATION	4.916849264790295E-7	TEST
// ID UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999219945475949	WITHOUT_CLASSIFICATION	4.172487226433695E-5	IMPLEMENTATION	3.2683105906255633E-5	DESIGN	2.361625514592688E-6	DEFECT	7.48888148257999E-7	DOCUMENTATION	4.869605716754418E-7	TEST
// VERSION UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999940438696016	WITHOUT_CLASSIFICATION	3.1485250813757233E-6	DESIGN	2.2113791622913015E-6	IMPLEMENTATION	2.966426705623027E-7	DEFECT	1.6788008078287776E-7	DOCUMENTATION	1.3170340341447443E-7	TEST
// not necessarily a *unique* property reference	WITHOUT_CLASSIFICATION	0.9995978467737308	WITHOUT_CLASSIFICATION	2.260201557012444E-4	IMPLEMENTATION	1.567938162872569E-4	DEFECT	1.852920783231882E-5	DESIGN	6.590962214696564E-7	DOCUMENTATION	1.5095022689497156E-7	TEST
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999506844753864	WITHOUT_CLASSIFICATION	4.3627558026952636E-5	DESIGN	2.979035835098219E-6	DEFECT	2.662508015915914E-6	IMPLEMENTATION	2.6640920421037805E-8	DOCUMENTATION	1.978181526712994E-8	TEST
// contained elements:	WITHOUT_CLASSIFICATION	0.9999943788607156	WITHOUT_CLASSIFICATION	5.3493450393280815E-6	DESIGN	2.0270542428781527E-7	IMPLEMENTATION	4.235611564190259E-8	DOCUMENTATION	1.3872312420109431E-8	TEST	1.2860392624153088E-8	DEFECT
// for non-inverse one-to-many, with a not-null fk, add a backref!	WITHOUT_CLASSIFICATION	0.9998193979828901	WITHOUT_CLASSIFICATION	1.0583291946633345E-4	IMPLEMENTATION	4.354243955724847E-5	DEFECT	3.086436752642577E-5	DESIGN	2.868150979270992E-7	DOCUMENTATION	7.547546189196071E-8	TEST
// Bind the where	WITHOUT_CLASSIFICATION	0.9998892836433056	WITHOUT_CLASSIFICATION	5.424695937678468E-5	DESIGN	4.636583255608051E-5	IMPLEMENTATION	5.207934796095895E-6	DEFECT	2.5852592666649872E-6	TEST	2.310370698751087E-6	DOCUMENTATION
// Bind the order-by	WITHOUT_CLASSIFICATION	0.9999463144255349	WITHOUT_CLASSIFICATION	4.1189174326043585E-5	IMPLEMENTATION	6.717695328562E-6	DESIGN	4.477966416302244E-6	DEFECT	1.1273126190303773E-6	DOCUMENTATION	1.734257749972071E-7	TEST
// Bind the filters	WITHOUT_CLASSIFICATION	0.9999706384736072	WITHOUT_CLASSIFICATION	1.7444228987331397E-5	IMPLEMENTATION	1.0859026891977215E-5	DESIGN	5.076029730768693E-7	DEFECT	3.20330070306978E-7	TEST	2.3033747010872744E-7	DOCUMENTATION
// overriding inherited meta attribute. HBX-621 & HBX-793	WITHOUT_CLASSIFICATION	0.9999806368941275	WITHOUT_CLASSIFICATION	1.0586224406891535E-5	DEFECT	5.132352301765668E-6	IMPLEMENTATION	3.1363836433807017E-6	DESIGN	4.655717247861669E-7	TEST	4.257379556830422E-8	DOCUMENTATION
// first, iterate over all elements capable of defining an extends attribute // collecting all found extends references if they cannot be resolved // against the already processed mappings.	WITHOUT_CLASSIFICATION	0.999999979509095	WITHOUT_CLASSIFICATION	2.0265518096114638E-8	IMPLEMENTATION	1.288741824002874E-10	TEST	9.500391367382293E-11	DESIGN	1.376118140536073E-12	DOCUMENTATION	1.327156702287497E-13	DEFECT
// mappings might contain either the "raw" extends name (in the case of // an entity-name mapping) or a FQN (in the case of a POJO mapping).	WITHOUT_CLASSIFICATION	0.9974535907117882	WITHOUT_CLASSIFICATION	0.0025273673748731134	DESIGN	1.735286747718161E-5	IMPLEMENTATION	6.593021961999648E-7	DOCUMENTATION	6.49356806265797E-7	TEST	3.803868589736833E-7	DEFECT
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9944967568189698	WITHOUT_CLASSIFICATION	0.005498916822489848	DESIGN	2.0313744659255094E-6	IMPLEMENTATION	1.493862946514432E-6	DEFECT	6.357400500933822E-7	DOCUMENTATION	1.6538107784385028E-7	TEST
//SessionFactory name:	WITHOUT_CLASSIFICATION	0.9992394823262714	WITHOUT_CLASSIFICATION	7.471817070956524E-4	DESIGN	5.050344652444144E-6	DEFECT	4.065475661126957E-6	DOCUMENTATION	2.2792063606193373E-6	IMPLEMENTATION	1.940939958793564E-6	TEST
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9999292057300848	WITHOUT_CLASSIFICATION	3.029544340333856E-5	DESIGN	2.4182275799496837E-5	IMPLEMENTATION	7.71186529311142E-6	DOCUMENTATION	7.583524127512711E-6	DEFECT	1.0211612917095823E-6	TEST
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9999292057300848	WITHOUT_CLASSIFICATION	3.029544340333856E-5	DESIGN	2.4182275799496837E-5	IMPLEMENTATION	7.71186529311142E-6	DOCUMENTATION	7.583524127512711E-6	DEFECT	1.0211612917095823E-6	TEST
//Interrogate JDBC metadata	WITHOUT_CLASSIFICATION	0.9999196487870112	WITHOUT_CLASSIFICATION	4.2956703847642936E-5	DESIGN	2.4000179889913404E-5	IMPLEMENTATION	7.693398649979561E-6	DEFECT	4.376245235126712E-6	DOCUMENTATION	1.3246853661879353E-6	TEST
// user supplied JDBC connections	WITHOUT_CLASSIFICATION	0.9999691578052624	WITHOUT_CLASSIFICATION	2.2845918815289663E-5	IMPLEMENTATION	7.86161189949562E-6	DESIGN	5.886499858441002E-8	DOCUMENTATION	5.3428512571569195E-8	DEFECT	2.237051156328404E-8	TEST
//use dialect default properties	WITHOUT_CLASSIFICATION	0.9998522899993416	WITHOUT_CLASSIFICATION	1.4560394405870936E-4	DESIGN	1.2199761338031974E-6	IMPLEMENTATION	6.17360208952223E-7	DEFECT	1.5458266151019467E-7	DOCUMENTATION	1.1413759551154752E-7	TEST
// Transaction settings:	WITHOUT_CLASSIFICATION	0.999996082838707	WITHOUT_CLASSIFICATION	2.209982949894229E-6	DESIGN	1.1667225496725657E-6	IMPLEMENTATION	2.5522478220288653E-7	DOCUMENTATION	2.4156036222133335E-7	DEFECT	4.367064903221588E-8	TEST
//SQL Generation settings:	WITHOUT_CLASSIFICATION	0.9999899013637158	WITHOUT_CLASSIFICATION	9.694952433813487E-6	DESIGN	1.686714103139198E-7	DOCUMENTATION	1.0509193781295485E-7	TEST	8.038487513868383E-8	DEFECT	4.953562704448345E-8	IMPLEMENTATION
//Query parser settings:	WITHOUT_CLASSIFICATION	0.9999585648458412	WITHOUT_CLASSIFICATION	2.618188133426512E-5	DESIGN	1.4122581299814343E-5	DEFECT	5.234695064545204E-7	IMPLEMENTATION	4.2538349809986037E-7	DOCUMENTATION	1.8183852017347483E-7	TEST
// Second-level / query cache:	WITHOUT_CLASSIFICATION	0.9997648089559864	WITHOUT_CLASSIFICATION	2.2671952171576004E-4	DESIGN	4.2713643864587425E-6	DEFECT	3.739399979750021E-6	IMPLEMENTATION	3.3485365329057616E-7	DOCUMENTATION	1.2590427825500956E-7	TEST
// The cache provider is needed when we either have second-level cache enabled // or query cache enabled.  Note that useSecondLevelCache is enabled by default	WITHOUT_CLASSIFICATION	0.9999919391537291	WITHOUT_CLASSIFICATION	5.255847076589753E-6	DESIGN	2.4107486385670882E-6	DEFECT	3.0313312013045163E-7	IMPLEMENTATION	8.464218114242592E-8	TEST	6.475254366161823E-9	DOCUMENTATION
//SQL Exception converter:	WITHOUT_CLASSIFICATION	0.9999036623840631	WITHOUT_CLASSIFICATION	9.464914074596792E-5	DESIGN	6.889278713772214E-7	TEST	5.020494031154218E-7	DOCUMENTATION	4.320033224790458E-7	DEFECT	6.549459385364179E-8	IMPLEMENTATION
//Statistics and logging:	WITHOUT_CLASSIFICATION	0.999998442895263	WITHOUT_CLASSIFICATION	9.84882053953208E-7	DESIGN	2.3127703057537584E-7	IMPLEMENTATION	2.2232646066420759E-7	DEFECT	6.967938422532236E-8	DOCUMENTATION	4.893980763548785E-8	TEST
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
//Schema export:	WITHOUT_CLASSIFICATION	0.9997198176874442	WITHOUT_CLASSIFICATION	2.469897682376601E-4	DESIGN	1.6755085830417963E-5	DEFECT	1.0400814831657424E-5	IMPLEMENTATION	3.818769443253684E-6	DOCUMENTATION	2.2178742128313205E-6	TEST
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// legacy behavior, apply the bridge...	WITHOUT_CLASSIFICATION	0.9951390968504292	WITHOUT_CLASSIFICATION	0.0048545696917146	DESIGN	5.111612822192386E-6	IMPLEMENTATION	7.500138222220102E-7	DEFECT	3.294972574474034E-7	DOCUMENTATION	1.423339544057E-7	TEST
// maybe a concrete SQLpropertyresult type, but Map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.9941497226537231	WITHOUT_CLASSIFICATION	0.00582852873657667	DESIGN	2.1343347188327203E-5	DEFECT	2.6969644556675484E-7	DOCUMENTATION	1.313257493680036E-7	TEST	4.2403169266116935E-9	IMPLEMENTATION
//if dotted and not load-collection nor return-join //regular property	WITHOUT_CLASSIFICATION	0.9999970589855102	WITHOUT_CLASSIFICATION	2.2480763158626343E-6	DEFECT	6.400264066990324E-7	DESIGN	3.527840359929312E-8	IMPLEMENTATION	1.239055569362809E-8	TEST	5.242808016825377E-9	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999938893704354	WITHOUT_CLASSIFICATION	5.9953166561083815E-6	DESIGN	8.93148218825154E-8	DEFECT	9.644758086705666E-9	TEST	9.35953393168724E-9	IMPLEMENTATION	6.993794573763714E-9	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999315497385332	WITHOUT_CLASSIFICATION	6.575835194160847E-5	DESIGN	2.0012888555187117E-6	IMPLEMENTATION	5.697756001543952E-7	DEFECT	7.122526732982255E-8	TEST	4.96198022767204E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// using local since the inheritedMetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.999996474206672	WITHOUT_CLASSIFICATION	2.7188063624670587E-6	DEFECT	7.984723631412333E-7	DESIGN	3.983604973605008E-9	IMPLEMENTATION	3.4780003882562545E-9	TEST	1.0529969006896993E-9	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// if doc is null, then for whatever reason, the cached file cannot be used...	WITHOUT_CLASSIFICATION	0.9999874064698475	WITHOUT_CLASSIFICATION	1.243391178516515E-5	DESIGN	7.109732524152528E-8	TEST	7.003783891862754E-8	DEFECT	9.401948854661833E-9	DOCUMENTATION	9.081254222199364E-9	IMPLEMENTATION
// drop them in reverse order in case db needs it done that way...	WITHOUT_CLASSIFICATION	0.9860516111331281	WITHOUT_CLASSIFICATION	0.013890016064515218	DESIGN	3.86585505131001E-5	DEFECT	1.7172252002896003E-5	IMPLEMENTATION	1.319663996631667E-6	DOCUMENTATION	1.2223358440927782E-6	TEST
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// This method may be called many times!!	WITHOUT_CLASSIFICATION	0.9991911109944864	WITHOUT_CLASSIFICATION	6.305391243410591E-4	IMPLEMENTATION	1.270692392728961E-4	DESIGN	4.943872932820538E-5	DEFECT	1.2112891763562109E-6	TEST	6.306233948422005E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.9999889702342558	WITHOUT_CLASSIFICATION	5.0594025091785544E-6	DEFECT	4.233806532537798E-6	DESIGN	1.4974036898462535E-6	IMPLEMENTATION	1.4946607699216215E-7	DOCUMENTATION	8.968693558600154E-8	TEST
// found	WITHOUT_CLASSIFICATION	0.9999889702342558	WITHOUT_CLASSIFICATION	5.0594025091785544E-6	DEFECT	4.233806532537798E-6	DESIGN	1.4974036898462535E-6	IMPLEMENTATION	1.4946607699216215E-7	DOCUMENTATION	8.968693558600154E-8	TEST
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9999694073899764	WITHOUT_CLASSIFICATION	2.3626299583992153E-5	DESIGN	2.770021041417207E-6	DEFECT	2.3955371471178942E-6	DOCUMENTATION	1.1109564119940033E-6	TEST	6.897958390889796E-7	IMPLEMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9999694073899764	WITHOUT_CLASSIFICATION	2.3626299583992153E-5	DESIGN	2.770021041417207E-6	DEFECT	2.3955371471178942E-6	DOCUMENTATION	1.1109564119940033E-6	TEST	6.897958390889796E-7	IMPLEMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9944967568189698	WITHOUT_CLASSIFICATION	0.005498916822489848	DESIGN	2.0313744659255094E-6	IMPLEMENTATION	1.493862946514432E-6	DEFECT	6.357400500933822E-7	DOCUMENTATION	1.6538107784385028E-7	TEST
//Set USE_REFLECTION_OPTIMIZER to false to fix HHH-227	WITHOUT_CLASSIFICATION	0.9999747902955944	WITHOUT_CLASSIFICATION	2.0573951234384146E-5	DESIGN	2.0030891105768333E-6	DEFECT	1.972813635583556E-6	IMPLEMENTATION	5.488782062030615E-7	DOCUMENTATION	1.1097221869862548E-7	TEST
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9953637943090795	WITHOUT_CLASSIFICATION	0.004523850284475278	DESIGN	8.245091125934995E-5	IMPLEMENTATION	1.3100918056159527E-5	DEFECT	1.1738489652163781E-5	TEST	5.0650874775024415E-6	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999853973839605	WITHOUT_CLASSIFICATION	7.335373901379026E-6	IMPLEMENTATION	7.114978165814705E-6	DESIGN	6.644565140984796E-8	TEST	4.90328777774587E-8	DEFECT	3.678544314162049E-8	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.999991306979069	WITHOUT_CLASSIFICATION	6.804899086745884E-6	DESIGN	1.0709698591202427E-6	DEFECT	4.872641771793007E-7	DOCUMENTATION	3.029668091821558E-7	IMPLEMENTATION	2.6920998664507015E-8	TEST
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9953637943090795	WITHOUT_CLASSIFICATION	0.004523850284475278	DESIGN	8.245091125934995E-5	IMPLEMENTATION	1.3100918056159527E-5	DEFECT	1.1738489652163781E-5	TEST	5.0650874775024415E-6	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999853973839605	WITHOUT_CLASSIFICATION	7.335373901379026E-6	IMPLEMENTATION	7.114978165814705E-6	DESIGN	6.644565140984796E-8	TEST	4.90328777774587E-8	DEFECT	3.678544314162049E-8	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999691963125605	WITHOUT_CLASSIFICATION	1.7100669629100856E-5	IMPLEMENTATION	1.0326921343505975E-5	DESIGN	2.634200750394038E-6	TEST	5.366781808892035E-7	DOCUMENTATION	2.052175356072357E-7	DEFECT
//maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.9993744216678451	WITHOUT_CLASSIFICATION	6.174779925872469E-4	DESIGN	4.333849235432096E-6	DEFECT	3.6001597617689834E-6	TEST	1.6611019870186751E-7	DOCUMENTATION	2.2037184382082897E-10	IMPLEMENTATION
// the element has been removed from the set	WITHOUT_CLASSIFICATION	0.9999957490138964	WITHOUT_CLASSIFICATION	4.0569712628368326E-6	DESIGN	1.1751450725757166E-7	IMPLEMENTATION	7.122643852249604E-8	DEFECT	2.9745332806012344E-9	DOCUMENTATION	2.2993616296566512E-9	TEST
// the element has changed	WITHOUT_CLASSIFICATION	0.9999867482001552	WITHOUT_CLASSIFICATION	1.119214025957204E-5	IMPLEMENTATION	1.933861016834334E-6	DESIGN	6.134561630515935E-8	DEFECT	3.3062113580515613E-8	DOCUMENTATION	3.139083841152912E-8	TEST
//Careful: these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.9953536986341581	WITHOUT_CLASSIFICATION	0.004554845254630176	DESIGN	6.442318582383473E-5	IMPLEMENTATION	1.707108109452791E-5	TEST	9.323176866895294E-6	DEFECT	6.386674264548914E-7	DOCUMENTATION
//needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.796274608074756	DESIGN	0.20371810874927834	WITHOUT_CLASSIFICATION	3.6551371030998893E-6	TEST	2.0026834789951484E-6	DOCUMENTATION	1.1489929828366156E-6	DEFECT	4.763624007261537E-7	IMPLEMENTATION
// override on some subclasses	WITHOUT_CLASSIFICATION	0.9999998099397375	WITHOUT_CLASSIFICATION	1.4833919903637053E-7	DESIGN	3.000952997539766E-8	IMPLEMENTATION	7.805606463691634E-9	DOCUMENTATION	3.2759853061824357E-9	TEST	6.299418402721788E-10	DEFECT
//override on some subclasses	WITHOUT_CLASSIFICATION	0.9999976943610546	WITHOUT_CLASSIFICATION	2.031078431236896E-6	DESIGN	1.462231327753609E-7	IMPLEMENTATION	8.979638009419564E-8	DOCUMENTATION	3.517642510597125E-8	TEST	3.364576260119468E-9	DEFECT
//do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.9999863467108859	WITHOUT_CLASSIFICATION	1.2816899523866627E-5	DESIGN	3.0364808946457825E-7	TEST	2.4226658733736996E-7	DEFECT	1.7336354523001797E-7	DOCUMENTATION	1.1711136807493256E-7	IMPLEMENTATION
// short-circuit(s) // no new elements, the old list contains only Orphans // no old elements, so no Orphans neither	WITHOUT_CLASSIFICATION	0.99999991059529	WITHOUT_CLASSIFICATION	8.746199833363468E-8	DESIGN	1.3581548734844143E-9	IMPLEMENTATION	3.7259870704207397E-10	DOCUMENTATION	1.6948308722476446E-10	TEST	4.247481946313052E-11	DEFECT
// create the collection holding the Orphans	WITHOUT_CLASSIFICATION	0.9999978698487663	WITHOUT_CLASSIFICATION	7.851792611190249E-7	IMPLEMENTATION	6.398003944768562E-7	DESIGN	6.08854283823522E-7	DEFECT	8.391783763412092E-8	TEST	1.239945663971695E-8	DOCUMENTATION
// collect EntityIdentifier(s) of the *current* elements - add them into a HashSet for fast access	WITHOUT_CLASSIFICATION	0.9998640860620718	WITHOUT_CLASSIFICATION	1.358484916964482E-4	DESIGN	1.9831086253281498E-8	DEFECT	1.7352041027765213E-8	TEST	1.6891863814727745E-8	IMPLEMENTATION	1.137124078421582E-8	DOCUMENTATION
// iterate over the *old* list	WITHOUT_CLASSIFICATION	0.9999999218784601	WITHOUT_CLASSIFICATION	6.262448777710116E-8	DESIGN	1.105890344228523E-8	IMPLEMENTATION	4.002790576603365E-9	TEST	3.1721750329402846E-10	DOCUMENTATION	1.1814070851676507E-10	DEFECT
/*(array==null) ? tempList.size() :*/	WITHOUT_CLASSIFICATION	0.9998876321873894	WITHOUT_CLASSIFICATION	1.0210897279585699E-4	IMPLEMENTATION	4.685232725380972E-6	DESIGN	4.464465156999207E-6	DEFECT	9.159503054684035E-7	TEST	1.931916269557898E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.999991306979069	WITHOUT_CLASSIFICATION	6.804899086745884E-6	DESIGN	1.0709698591202427E-6	DEFECT	4.872641771793007E-7	DOCUMENTATION	3.029668091821558E-7	IMPLEMENTATION	2.6920998664507015E-8	TEST
/*(array==null) ? tempList.get(i) :*/	WITHOUT_CLASSIFICATION	0.9998862242622976	WITHOUT_CLASSIFICATION	6.039984642894952E-5	DESIGN	4.290766266916532E-5	IMPLEMENTATION	8.603902785634181E-6	DEFECT	1.5606919682812929E-6	TEST	3.0363385040536955E-7	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999930915688433	WITHOUT_CLASSIFICATION	2.2179765414490944E-6	TEST	2.0899687015899455E-6	DESIGN	1.9535040128399545E-6	DEFECT	5.403087576120829E-7	DOCUMENTATION	1.0667314312850839E-7	IMPLEMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999930915688433	WITHOUT_CLASSIFICATION	2.2179765414490944E-6	TEST	2.0899687015899455E-6	DESIGN	1.9535040128399545E-6	DEFECT	5.403087576120829E-7	DOCUMENTATION	1.0667314312850839E-7	IMPLEMENTATION
// amazingly, these two will work because AbstractCollection // uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.9999827896434385	WITHOUT_CLASSIFICATION	9.253327803970852E-6	IMPLEMENTATION	6.7032866978287635E-6	DESIGN	9.658690108356348E-7	DEFECT	2.5265924269263455E-7	DOCUMENTATION	3.521380620398454E-8	TEST
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999691963125605	WITHOUT_CLASSIFICATION	1.7100669629100856E-5	IMPLEMENTATION	1.0326921343505975E-5	DESIGN	2.634200750394038E-6	TEST	5.366781808892035E-7	DOCUMENTATION	2.052175356072357E-7	DEFECT
// finally, what it's all about...	WITHOUT_CLASSIFICATION	0.9996507892484726	WITHOUT_CLASSIFICATION	1.7197854630844018E-4	DEFECT	9.40494815922549E-5	IMPLEMENTATION	8.081893614916155E-5	DESIGN	1.1849354327232688E-6	TEST	1.1788520447841026E-6	DOCUMENTATION
// note that if we load this collection from a cartesian product // the multiplicity would be broken ... so use an idbag instead	WITHOUT_CLASSIFICATION	0.9928587705961194	DESIGN	0.007116484550244199	WITHOUT_CLASSIFICATION	1.8892400016311956E-5	TEST	5.699011703274512E-6	DEFECT	9.566696149767226E-8	DOCUMENTATION	5.7774955271836975E-8	IMPLEMENTATION
// Anyway, here we implement <set> semantics for a // <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.8850985663221289	WITHOUT_CLASSIFICATION	0.1019720462239958	DESIGN	0.007578996399508672	DEFECT	0.005305873781755758	IMPLEMENTATION	2.5963506581162637E-5	TEST	1.8553766029636865E-5	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999881396398913	WITHOUT_CLASSIFICATION	9.943488939622923E-6	DEFECT	1.761800386094276E-6	DESIGN	9.222407630833086E-8	TEST	4.426317860090745E-8	DOCUMENTATION	1.8583528011339347E-8	IMPLEMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.5710263274862029	WITHOUT_CLASSIFICATION	0.42703055771203274	DESIGN	9.531509534241368E-4	TEST	5.053535086982082E-4	DEFECT	4.697947300389884E-4	IMPLEMENTATION	1.481560960310638E-5	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999691963125605	WITHOUT_CLASSIFICATION	1.7100669629100856E-5	IMPLEMENTATION	1.0326921343505975E-5	DESIGN	2.634200750394038E-6	TEST	5.366781808892035E-7	DOCUMENTATION	2.052175356072357E-7	DEFECT
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999881396398913	WITHOUT_CLASSIFICATION	9.943488939622923E-6	DEFECT	1.761800386094276E-6	DESIGN	9.222407630833086E-8	TEST	4.426317860090745E-8	DOCUMENTATION	1.8583528011339347E-8	IMPLEMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.5710263274862029	WITHOUT_CLASSIFICATION	0.42703055771203274	DESIGN	9.531509534241368E-4	TEST	5.053535086982082E-4	DEFECT	4.697947300389884E-4	IMPLEMENTATION	1.481560960310638E-5	DOCUMENTATION
/*public boolean equals(Object other) {	WITHOUT_CLASSIFICATION	0.7417061545570448	WITHOUT_CLASSIFICATION	0.25719095031883843	DESIGN	9.406478606962687E-4	IMPLEMENTATION	7.405321781586233E-5	DOCUMENTATION	6.09101054442105E-5	DEFECT	2.7283940160563282E-5	TEST
// List OPERATIONS:	WITHOUT_CLASSIFICATION	0.9999969393864769	WITHOUT_CLASSIFICATION	2.4913684573616655E-6	IMPLEMENTATION	2.4012836251804006E-7	TEST	1.5067926771988527E-7	DEFECT	1.3371699135174952E-7	DESIGN	4.472044411599726E-8	DOCUMENTATION
//pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.9999987239031181	WITHOUT_CLASSIFICATION	8.88327746019086E-7	DEFECT	2.944767451123789E-7	DESIGN	4.4488834989026634E-8	IMPLEMENTATION	4.4196693065218744E-8	DOCUMENTATION	4.606862618196966E-9	TEST
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999691963125605	WITHOUT_CLASSIFICATION	1.7100669629100856E-5	IMPLEMENTATION	1.0326921343505975E-5	DESIGN	2.634200750394038E-6	TEST	5.366781808892035E-7	DOCUMENTATION	2.052175356072357E-7	DEFECT
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999691963125605	WITHOUT_CLASSIFICATION	1.7100669629100856E-5	IMPLEMENTATION	1.0326921343505975E-5	DESIGN	2.634200750394038E-6	TEST	5.366781808892035E-7	DOCUMENTATION	2.052175356072357E-7	DEFECT
// from Map	WITHOUT_CLASSIFICATION	0.9999950295955864	WITHOUT_CLASSIFICATION	2.8326095137509395E-6	DESIGN	1.5370454831262932E-6	DEFECT	4.6010229947148985E-7	IMPLEMENTATION	7.049075629449704E-8	DOCUMENTATION	7.01563610120751E-8	TEST
// from SortedMap	WITHOUT_CLASSIFICATION	0.9999723861037498	WITHOUT_CLASSIFICATION	1.6490489880871602E-5	DESIGN	7.61151139579474E-6	DEFECT	2.8479382395032737E-6	IMPLEMENTATION	3.7338452533253373E-7	TEST	2.905722086667712E-7	DOCUMENTATION
//inject the data	WITHOUT_CLASSIFICATION	0.9998213444523385	WITHOUT_CLASSIFICATION	9.409068565629734E-5	IMPLEMENTATION	7.380721200127865E-5	DESIGN	6.160019081291561E-6	DOCUMENTATION	3.4112839677003453E-6	DEFECT	1.1863469548813459E-6	TEST
// cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999832926280484	WITHOUT_CLASSIFICATION	1.5649406685414998E-5	DESIGN	6.401756025054757E-7	IMPLEMENTATION	3.439777391628273E-7	DEFECT	3.7076945213442285E-8	TEST	3.6734979297484715E-8	DOCUMENTATION
//default pool size 20	WITHOUT_CLASSIFICATION	0.9999917445636409	WITHOUT_CLASSIFICATION	3.815059579806437E-6	IMPLEMENTATION	2.4187302453979943E-6	DESIGN	1.5425207051417254E-6	DEFECT	4.1197844288912453E-7	DOCUMENTATION	6.714738597675271E-8	TEST
// trying via forName() first to be as close to DriverManager's semantics	WITHOUT_CLASSIFICATION	0.9999999344064908	WITHOUT_CLASSIFICATION	4.441310748911288E-8	DESIGN	1.4324328698306788E-8	DEFECT	3.067437821082378E-9	IMPLEMENTATION	2.1460117157628297E-9	TEST	1.642623424464772E-9	DOCUMENTATION
// if debug level is enabled, then log the password, otherwise mask it	WITHOUT_CLASSIFICATION	0.9999796981735225	WITHOUT_CLASSIFICATION	1.792240804548673E-5	IMPLEMENTATION	1.1774527435353495E-6	DEFECT	8.263710325826327E-7	DESIGN	3.697022019111348E-7	TEST	5.8924539554934E-9	DOCUMENTATION
// register a cleanup synch	WITHOUT_CLASSIFICATION	0.999974008926174	WITHOUT_CLASSIFICATION	2.5904252189114394E-5	DESIGN	2.9679561215458137E-8	IMPLEMENTATION	2.2083591223207994E-8	DOCUMENTATION	2.025049422216545E-8	DEFECT	1.4807990154809334E-8	TEST
// wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.9999717948264266	WITHOUT_CLASSIFICATION	2.4129996002905743E-5	DESIGN	2.0249667905497923E-6	IMPLEMENTATION	1.7197681141254367E-6	DEFECT	3.086246796651899E-7	DOCUMENTATION	2.181798609043431E-8	TEST
// then bind it	WITHOUT_CLASSIFICATION	0.999984966647986	WITHOUT_CLASSIFICATION	5.5774153301453116E-6	IMPLEMENTATION	4.737960569294095E-6	DESIGN	2.409701610953653E-6	DEFECT	1.398203847039144E-6	TEST	9.100706566333445E-7	DOCUMENTATION
// try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.9999887558444213	WITHOUT_CLASSIFICATION	5.562991073096276E-6	DEFECT	5.107302033268817E-6	DESIGN	2.9170170710027874E-7	DOCUMENTATION	2.658659980432624E-7	IMPLEMENTATION	1.6294767068758204E-8	TEST
// allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.9999549925097445	WITHOUT_CLASSIFICATION	4.247490075265612E-5	DESIGN	2.3934779922541927E-6	IMPLEMENTATION	9.860424245447776E-8	DEFECT	3.545918023823225E-8	DOCUMENTATION	5.048087998318957E-9	TEST
// limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.99999799315887	WITHOUT_CLASSIFICATION	1.968253859476257E-6	DESIGN	3.004080104574947E-8	TEST	7.017100615667615E-9	IMPLEMENTATION	1.0831795695095042E-9	DOCUMENTATION	4.4618951352125956E-10	DEFECT
// allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.9813425958006384	WITHOUT_CLASSIFICATION	0.018445140856608956	DESIGN	2.0945678976621603E-4	IMPLEMENTATION	1.8466574084149988E-6	DEFECT	5.174112916681177E-7	TEST	4.424842863731651E-7	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999990328964673	WITHOUT_CLASSIFICATION	7.597141173721414E-7	DEFECT	8.909343933702755E-8	DESIGN	8.157239375582278E-8	IMPLEMENTATION	2.550806952158702E-8	DOCUMENTATION	1.1215512743415732E-8	TEST
// We could register the session against the transaction even though it is // not started, but we'd have no guarentee of ever getting the map // entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.9987830539134008	WITHOUT_CLASSIFICATION	0.001216181789899812	DESIGN	5.334965996635376E-7	TEST	1.479334364058133E-7	DEFECT	7.452845774373752E-8	IMPLEMENTATION	8.338205434788557E-9	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9991209457608161	WITHOUT_CLASSIFICATION	8.62931197258863E-4	DESIGN	1.2168013392097977E-5	IMPLEMENTATION	1.6531677891146587E-6	DEFECT	1.2651816971227823E-6	DOCUMENTATION	1.0366790466420514E-6	TEST
//private String propertyName;	WITHOUT_CLASSIFICATION	0.9930867391618534	WITHOUT_CLASSIFICATION	0.006718614837482121	DESIGN	1.1648268917801217E-4	DEFECT	4.7132571096048E-5	DOCUMENTATION	2.6678092610803474E-5	TEST	4.352647779515552E-6	IMPLEMENTATION
/*public PropertyProjection project() {	WITHOUT_CLASSIFICATION	0.9728752486299698	WITHOUT_CLASSIFICATION	0.024009582255675066	DESIGN	0.002004191045108345	DEFECT	0.0010283701056958165	IMPLEMENTATION	7.482195056969656E-5	DOCUMENTATION	7.786012981308082E-6	TEST
//String[] fk = StringHelper.qualify( "collection_", cp.getKeyColumnNames() );	WITHOUT_CLASSIFICATION	0.9999834609588295	WITHOUT_CLASSIFICATION	1.2525083311531757E-5	DESIGN	2.0851203488312666E-6	IMPLEMENTATION	1.7300306067997272E-6	DEFECT	1.223455063070019E-7	DOCUMENTATION	7.646139704080221E-8	TEST
//" collection_ where " +	WITHOUT_CLASSIFICATION	0.999749571150395	WITHOUT_CLASSIFICATION	2.2294834619895107E-4	DESIGN	1.959366985285078E-5	IMPLEMENTATION	4.114583507369693E-6	DEFECT	2.4557765509633434E-6	TEST	1.3164734949073428E-6	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9833072144327881	WITHOUT_CLASSIFICATION	0.008810230242475816	IMPLEMENTATION	0.007591508875946771	DESIGN	1.6943387342497918E-4	DEFECT	6.183815016439573E-5	TEST	5.977442520004319E-5	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9833072144327881	WITHOUT_CLASSIFICATION	0.008810230242475816	IMPLEMENTATION	0.007591508875946771	DESIGN	1.6943387342497918E-4	DEFECT	6.183815016439573E-5	TEST	5.977442520004319E-5	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9991209457608161	WITHOUT_CLASSIFICATION	8.62931197258863E-4	DESIGN	1.2168013392097977E-5	IMPLEMENTATION	1.6531677891146587E-6	DEFECT	1.2651816971227823E-6	DOCUMENTATION	1.0366790466420514E-6	TEST
//the following two lines were added to ensure that this.params is not null, which //can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.9998544064122656	WITHOUT_CLASSIFICATION	5.921791837053566E-5	TEST	4.3586568204036704E-5	IMPLEMENTATION	3.3665658511742155E-5	DEFECT	8.841937313039559E-6	DESIGN	2.8150533494123503E-7	DOCUMENTATION
//with two-deep subqueries, the same alias would get generated for //both using the old method (criteriaQuery.generateSQLAlias()), so //that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.9997889188308415	WITHOUT_CLASSIFICATION	2.1024708496745852E-4	DESIGN	7.502427937568557E-7	TEST	5.672242100474213E-8	DEFECT	2.43415319545853E-8	IMPLEMENTATION	2.777444456299552E-9	DOCUMENTATION
//implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.7998984791928755	WITHOUT_CLASSIFICATION	0.12019652649689351	DESIGN	0.07735101576664406	IMPLEMENTATION	0.0013198061947458976	DEFECT	0.001054594105958259	TEST	1.7957824288277727E-4	DOCUMENTATION
//pull off the last ", "	WITHOUT_CLASSIFICATION	0.9999953585674171	WITHOUT_CLASSIFICATION	2.8824843277766254E-6	DESIGN	1.0721303162126283E-6	IMPLEMENTATION	2.986583767350931E-7	TEST	1.95899974234508E-7	DOCUMENTATION	1.922595879413508E-7	DEFECT
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999068771111536	WITHOUT_CLASSIFICATION	7.9002126862139E-5	DESIGN	1.0775117734175912E-5	DEFECT	1.3898027718673306E-6	TEST	1.1792972848878074E-6	DOCUMENTATION	7.76544193385208E-7	IMPLEMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.9999971252460912	WITHOUT_CLASSIFICATION	1.4612222874097428E-6	DESIGN	7.431373891360404E-7	IMPLEMENTATION	4.680841281554303E-7	DOCUMENTATION	1.1694999093800089E-7	DEFECT	8.536011305242995E-8	TEST
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource)	WITHOUT_CLASSIFICATION	0.9985168142579554	WITHOUT_CLASSIFICATION	0.0014174703303387185	DESIGN	5.949842660128026E-5	DEFECT	4.537166761072094E-6	IMPLEMENTATION	1.6378813838866569E-6	DOCUMENTATION	4.1936959761106216E-8	TEST
// NOT_SUPPORTED_SHOULD_USE_JDBC3_PreparedStatement.getGeneratedKeys_method	WITHOUT_CLASSIFICATION	0.9999201310551774	WITHOUT_CLASSIFICATION	4.752018529042229E-5	DESIGN	3.064121421358447E-5	IMPLEMENTATION	8.341610203720848E-7	TEST	6.047571914585787E-7	DEFECT	2.6862710668496746E-7	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999999999033053	WITHOUT_CLASSIFICATION	5.5896641766025064E-11	DOCUMENTATION	2.1034029983480955E-11	DESIGN	1.2176266053530129E-11	IMPLEMENTATION	7.0677339113618565E-12	DEFECT	5.199878637185971E-13	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999927711465321	WITHOUT_CLASSIFICATION	4.907171403982236E-5	IMPLEMENTATION	1.354088598706007E-5	DESIGN	7.515845949132985E-6	DEFECT	2.0452161647923634E-6	DOCUMENTATION	1.1487253819350909E-7	TEST
// Oracle did add support for ANSI CASE statements in 9i	WITHOUT_CLASSIFICATION	0.9999990778833399	WITHOUT_CLASSIFICATION	5.345399502121731E-7	DESIGN	3.563100016353389E-7	IMPLEMENTATION	1.4063367868870785E-8	DOCUMENTATION	9.774030014681443E-9	TEST	7.4293105506903985E-9	DEFECT
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999990838491194	WITHOUT_CLASSIFICATION	7.078828043622909E-7	DEFECT	1.3817671403469775E-7	DESIGN	4.6343417477642624E-8	IMPLEMENTATION	1.601030762087541E-8	DOCUMENTATION	7.737637099714217E-9	TEST
// Informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.9999204119905496	WITHOUT_CLASSIFICATION	6.934408673255785E-5	DESIGN	8.140448611581504E-6	DEFECT	1.2061325102880964E-6	TEST	5.765058091544307E-7	DOCUMENTATION	3.208357867624302E-7	IMPLEMENTATION
// or BYTE // or TEXT? // or MONEY	WITHOUT_CLASSIFICATION	0.9998891532728004	WITHOUT_CLASSIFICATION	8.103237026043477E-5	DESIGN	1.7518305580821756E-5	IMPLEMENTATION	8.211336058407557E-6	DEFECT	2.6104694882091266E-6	TEST	1.474245811643325E-6	DOCUMENTATION
// strip table-owner because Informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.9999999074738603	WITHOUT_CLASSIFICATION	8.310516450848015E-8	DESIGN	7.942898521069759E-9	IMPLEMENTATION	1.1522649939689373E-9	DEFECT	2.1211301446732068E-10	DOCUMENTATION	1.1369886611022223E-10	TEST
// build the map of standard ANSI SQL aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997302537061	WITHOUT_CLASSIFICATION	1.6160956678152317E-7	IMPLEMENTATION	7.122758598294869E-8	DEFECT	3.446663907033307E-8	DESIGN	1.7881554445733612E-9	DOCUMENTATION	6.54346651914785E-10	TEST
//pre H3.2 behavior: super.getReturnType(ct, m);	WITHOUT_CLASSIFICATION	0.9977981345330853	WITHOUT_CLASSIFICATION	0.0021040769396458484	DESIGN	9.73101770592282E-5	DEFECT	2.071198497265928E-7	DOCUMENTATION	1.893072137703311E-7	IMPLEMENTATION	8.19231460491951E-8	TEST
// finally use the sqltype if == on Hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.9999192283906044	WITHOUT_CLASSIFICATION	8.073866639148436E-5	DESIGN	2.6349897657516507E-8	DEFECT	4.866216878374716E-9	IMPLEMENTATION	9.462674933009936E-10	DOCUMENTATION	7.806219649291378E-10	TEST
//because numeric can be anything	WITHOUT_CLASSIFICATION	0.9999820699769115	WITHOUT_CLASSIFICATION	7.535875826170685E-6	DOCUMENTATION	6.1872966125701404E-6	IMPLEMENTATION	2.6199607425185947E-6	DESIGN	1.3864798321106757E-6	DEFECT	2.0041007495383645E-7	TEST
// constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999984952310448	WITHOUT_CLASSIFICATION	8.709347987177019E-7	DESIGN	5.601407073372793E-7	IMPLEMENTATION	4.04066144147088E-8	DEFECT	2.615172757235315E-8	TEST	7.13510716573419E-9	DOCUMENTATION
// standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.9997950644618159	WITHOUT_CLASSIFICATION	1.9311040421829588E-4	DESIGN	7.862767228437839E-6	IMPLEMENTATION	3.900941066137382E-6	DEFECT	4.339817897949354E-8	DOCUMENTATION	1.8027492288746234E-8	TEST
//map second/minute/hour/day/month/year to ANSI extract(), override on subclasses	WITHOUT_CLASSIFICATION	0.9986842317760332	WITHOUT_CLASSIFICATION	0.0012325259666540293	DESIGN	8.169029525337576E-5	IMPLEMENTATION	1.4121422710324555E-6	DOCUMENTATION	1.1703216439418094E-7	TEST	2.2787624087774465E-8	DEFECT
// register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.9772325908001823	WITHOUT_CLASSIFICATION	0.022766120712364665	DESIGN	1.055788761052151E-6	IMPLEMENTATION	1.501345363831601E-7	DOCUMENTATION	5.934587265889588E-8	DEFECT	2.32182830140416E-8	TEST
// database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998657369726079	WITHOUT_CLASSIFICATION	1.1441314425102211E-4	IMPLEMENTATION	1.223469543953992E-5	DEFECT	6.5581051500513406E-6	DESIGN	8.333592134162577E-7	DOCUMENTATION	2.237233379685844E-7	TEST
// hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9933002551308303	WITHOUT_CLASSIFICATION	0.004601019764037477	DESIGN	0.002063037139681987	IMPLEMENTATION	1.4351495312353558E-5	TEST	1.1662098297281188E-5	DOCUMENTATION	9.674371840576871E-6	DEFECT
// keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999468455141893	WITHOUT_CLASSIFICATION	4.623664167439281E-5	IMPLEMENTATION	4.456210623293338E-6	DESIGN	2.0085845574008045E-6	DEFECT	2.7938188739017267E-7	DOCUMENTATION	1.7366706815580107E-7	TEST
// native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999894683372036	WITHOUT_CLASSIFICATION	7.5780758385097446E-6	DESIGN	2.4743200796384467E-6	IMPLEMENTATION	3.089715824807229E-7	DEFECT	1.22488902865525E-7	DOCUMENTATION	4.780639290788173E-8	TEST
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995863368325214	WITHOUT_CLASSIFICATION	3.6235929338112623E-4	IMPLEMENTATION	4.5429647017461636E-5	DESIGN	3.975618304844144E-6	DEFECT	1.01768858964373E-6	TEST	8.809201854671344E-7	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997470785393828	WITHOUT_CLASSIFICATION	1.2703542696423866E-4	DESIGN	1.1883504566926516E-4	IMPLEMENTATION	4.644934168584541E-6	DEFECT	1.3965588880104459E-6	DOCUMENTATION	1.0094949269870613E-6	TEST
// GUID support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999836357594296	WITHOUT_CLASSIFICATION	1.1901304742200855E-4	IMPLEMENTATION	4.1401879174729714E-5	DESIGN	2.044548928566305E-6	DEFECT	7.251803194072887E-7	DOCUMENTATION	4.5774985921564855E-7	TEST
// limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99996289981404	WITHOUT_CLASSIFICATION	2.6117409910101374E-5	DESIGN	9.110518027809567E-6	IMPLEMENTATION	1.6678409063102145E-6	DEFECT	1.1272146046545114E-7	DOCUMENTATION	9.169565538150579E-8	TEST
// by default we report no support	WITHOUT_CLASSIFICATION	0.9999705197585761	WITHOUT_CLASSIFICATION	1.7752996648657885E-5	DESIGN	9.157723680503805E-6	IMPLEMENTATION	2.3008958047944393E-6	DEFECT	2.4087091569831386E-7	DOCUMENTATION	2.775437429514362E-8	TEST
// by default we report no support for NOWAIT lock semantics	WITHOUT_CLASSIFICATION	0.9977627081421624	WITHOUT_CLASSIFICATION	0.0019945394041434774	DESIGN	1.6712727627532875E-4	DEFECT	7.034882904236049E-5	IMPLEMENTATION	4.844431450774568E-6	DOCUMENTATION	4.31916925811492E-7	TEST
// table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999885319531477	WITHOUT_CLASSIFICATION	9.554084857139963E-6	IMPLEMENTATION	1.558066065115072E-6	DESIGN	2.0722217744062157E-7	DEFECT	1.2083318908418079E-7	TEST	2.7840563551310284E-8	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998822883320044	WITHOUT_CLASSIFICATION	1.1126783240389746E-4	DESIGN	5.832721809969651E-6	IMPLEMENTATION	4.91328833346424E-7	TEST	7.484315246611634E-8	DEFECT	4.494179599425983E-8	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999971382021094	WITHOUT_CLASSIFICATION	2.485288413985888E-5	IMPLEMENTATION	3.452117720468494E-6	DESIGN	1.9961299707952707E-7	DEFECT	8.13247388094168E-8	DOCUMENTATION	3.203930992545198E-8	TEST
// current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999738180139875	WITHOUT_CLASSIFICATION	2.520933951722105E-5	IMPLEMENTATION	3.8857137792116576E-7	DEFECT	3.5060796181929183E-7	DOCUMENTATION	1.682882361670375E-7	TEST	6.517891944512897E-8	DESIGN
// SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999348372304642	WITHOUT_CLASSIFICATION	4.590378338975933E-5	DESIGN	9.494136266455347E-6	DEFECT	8.624424900020439E-6	IMPLEMENTATION	7.405265943843162E-7	DOCUMENTATION	3.998983852771314E-7	TEST
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999536329443276	WITHOUT_CLASSIFICATION	3.704234655796954E-5	DESIGN	8.79768316780952E-6	IMPLEMENTATION	2.887646902431503E-7	DEFECT	1.3785923769562158E-7	DOCUMENTATION	1.0040201872260487E-7	TEST
// identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998381912174058	WITHOUT_CLASSIFICATION	1.3406461243171364E-4	IMPLEMENTATION	2.2225964863655324E-5	DESIGN	4.145836167465285E-6	DEFECT	7.481893378900286E-7	DOCUMENTATION	6.241797934232537E-7	TEST
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998689055961548	WITHOUT_CLASSIFICATION	1.0677495870570887E-4	IMPLEMENTATION	1.9901462662649506E-5	DESIGN	2.963379977288914E-6	DEFECT	7.875524163241248E-7	DOCUMENTATION	6.670500832310388E-7	TEST
// grrr... for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.9999976682124267	WITHOUT_CLASSIFICATION	1.6672881784524765E-6	DESIGN	3.4936274001648325E-7	IMPLEMENTATION	2.1611074134399287E-7	DEFECT	5.876091039242777E-8	TEST	4.026500306374946E-8	DOCUMENTATION
// Informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999884110675515	WITHOUT_CLASSIFICATION	8.488931431469933E-5	IMPLEMENTATION	2.3950246275834865E-5	DEFECT	5.492809564961011E-6	DESIGN	1.4789324570511697E-6	DOCUMENTATION	7.80218724953928E-8	TEST
// return false here, as most databases do not properly support this construct...	WITHOUT_CLASSIFICATION	0.9961970610171217	WITHOUT_CLASSIFICATION	0.003214510459663637	IMPLEMENTATION	5.548444278466517E-4	DESIGN	3.0039813487543263E-5	DEFECT	3.492018645303095E-6	TEST	5.2263235150468906E-8	DOCUMENTATION
// Mckoi has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9996482413531093	WITHOUT_CLASSIFICATION	1.997146962036428E-4	DESIGN	1.068108100240058E-4	IMPLEMENTATION	4.284292657561165E-5	DEFECT	2.03283690124756E-6	DOCUMENTATION	3.5737718628595266E-7	TEST
// Oracle8 and previous define only a "DATE" type which //      is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.9999993040037439	WITHOUT_CLASSIFICATION	6.280382602214538E-7	DESIGN	3.491039571090792E-8	DOCUMENTATION	3.027994789116041E-8	IMPLEMENTATION	1.6684802652371734E-9	DEFECT	1.0991720613558087E-9	TEST
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999792869690579	WITHOUT_CLASSIFICATION	1.9524651975999547E-5	DESIGN	8.533805205892862E-7	TEST	1.6100528692060203E-7	IMPLEMENTATION	1.0309680559943063E-7	DEFECT	7.089635295637534E-8	DOCUMENTATION
//" cascade";	WITHOUT_CLASSIFICATION	0.999943177041957	WITHOUT_CLASSIFICATION	4.4142977793403325E-5	DESIGN	1.116977913201946E-5	IMPLEMENTATION	7.1089813507857E-7	DOCUMENTATION	4.054991497823837E-7	TEST	3.938038325636483E-7	DEFECT
//trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.999998966826028	WITHOUT_CLASSIFICATION	7.212751290029746E-7	DESIGN	2.022953162618498E-7	IMPLEMENTATION	6.818718266484843E-8	DEFECT	2.9471622218643638E-8	DOCUMENTATION	1.1944721777431783E-8	TEST
/*public boolean dropTemporaryTableAfterUse() {	WITHOUT_CLASSIFICATION	0.535874290135419	DESIGN	0.4640803033539661	WITHOUT_CLASSIFICATION	3.545467514023849E-5	DEFECT	4.291485972171816E-6	IMPLEMENTATION	2.83566266923605E-6	TEST	2.824686833343091E-6	DOCUMENTATION
// CHECK VIOLATION	WITHOUT_CLASSIFICATION	0.9999987814214892	WITHOUT_CLASSIFICATION	7.659417240575363E-7	DESIGN	1.8200223738137016E-7	IMPLEMENTATION	1.713232114538549E-7	DEFECT	5.744008797976627E-8	DOCUMENTATION	4.1871249933688754E-8	TEST
// UNIQUE VIOLATION	WITHOUT_CLASSIFICATION	0.9999939054064004	WITHOUT_CLASSIFICATION	4.438900275897339E-6	IMPLEMENTATION	7.623205454840175E-7	DEFECT	6.499502091604516E-7	DESIGN	1.4625470206753345E-7	DOCUMENTATION	9.716786687685649E-8	TEST
// FOREIGN KEY VIOLATION	WITHOUT_CLASSIFICATION	0.9999855816178036	WITHOUT_CLASSIFICATION	1.0180431739847458E-5	IMPLEMENTATION	2.661199644747224E-6	DESIGN	8.266087627988326E-7	DEFECT	4.0564792404844464E-7	TEST	3.444941250198599E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999927711465321	WITHOUT_CLASSIFICATION	4.907171403982236E-5	IMPLEMENTATION	1.354088598706007E-5	DESIGN	7.515845949132985E-6	DEFECT	2.0452161647923634E-6	DOCUMENTATION	1.1487253819350909E-7	TEST
// NOT NULL VIOLATION	WITHOUT_CLASSIFICATION	0.9999821937485469	WITHOUT_CLASSIFICATION	9.764926367812688E-6	DESIGN	6.602200229182905E-6	IMPLEMENTATION	6.364536705349731E-7	DEFECT	4.4879976471242516E-7	TEST	3.5387142085099997E-7	DOCUMENTATION
// ALL OTHER	WITHOUT_CLASSIFICATION	0.9999948699233243	WITHOUT_CLASSIFICATION	2.2827155371204905E-6	DESIGN	1.5607677711751105E-6	DEFECT	9.75414159595282E-7	IMPLEMENTATION	1.7583759809548628E-7	DOCUMENTATION	1.353416096349497E-7	TEST
// Register the type of the out param - PostgreSQL uses Types.OTHER	WITHOUT_CLASSIFICATION	0.9991816151803029	WITHOUT_CLASSIFICATION	8.182585281728742E-4	DESIGN	7.305329037528656E-8	TEST	3.504669128633189E-8	DEFECT	1.3730131028651083E-8	DOCUMENTATION	4.461411515474597E-9	IMPLEMENTATION
// seems to not really... //	WITHOUT_CLASSIFICATION	0.9992599139230118	WITHOUT_CLASSIFICATION	4.534463422488014E-4	DEFECT	2.8481267497567036E-4	DESIGN	1.2531433633530202E-6	IMPLEMENTATION	2.9557090853811945E-7	DOCUMENTATION	2.783454919213366E-7	TEST
// seems to have spotty LOB suppport	WITHOUT_CLASSIFICATION	0.9990589241238438	WITHOUT_CLASSIFICATION	9.147056892686819E-4	DESIGN	2.0896914437217582E-5	DEFECT	4.3201145629453765E-6	IMPLEMENTATION	1.0002479750589478E-6	DOCUMENTATION	1.5290991234277574E-7	TEST
// HHH-2300	WITHOUT_CLASSIFICATION	0.9999548883621069	WITHOUT_CLASSIFICATION	4.0732055380414395E-5	DESIGN	3.0776670618300305E-6	DEFECT	4.774872119357064E-7	DOCUMENTATION	4.2367228574687454E-7	IMPLEMENTATION	4.0075595323398124E-7	TEST
// ignore (probably H2 not in the classpath)	WITHOUT_CLASSIFICATION	0.9994760634606844	WITHOUT_CLASSIFICATION	5.167680703632562E-4	DESIGN	6.923004265930804E-6	DEFECT	2.0394508982816288E-7	DOCUMENTATION	2.6302115171172944E-8	IMPLEMENTATION	1.5217481455188456E-8	TEST
// Numeric Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999506302110626	WITHOUT_CLASSIFICATION	3.5127791340598116E-5	IMPLEMENTATION	1.20508035418038E-5	DESIGN	1.321285050166851E-6	DEFECT	5.528436469375474E-7	DOCUMENTATION	3.1706535783655236E-7	TEST
// String Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999666633926023	WITHOUT_CLASSIFICATION	2.073487047395299E-5	DESIGN	6.334889500922039E-6	IMPLEMENTATION	5.488436689671595E-6	DEFECT	5.964210588232747E-7	DOCUMENTATION	1.819896744504886E-7	TEST
// Time and Date Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999913574912592	WITHOUT_CLASSIFICATION	5.5434034054682175E-5	IMPLEMENTATION	2.6892024884463382E-5	DESIGN	2.1050032501711908E-6	DOCUMENTATION	1.7255181342498918E-6	DEFECT	2.6850708440423607E-7	TEST
// System Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998751549459974	WITHOUT_CLASSIFICATION	6.521411579853721E-5	IMPLEMENTATION	4.520265282859617E-5	DESIGN	1.2200849611841652E-5	DEFECT	1.4885731439739931E-6	DOCUMENTATION	7.388626197769192E-7	TEST
// not null is implicit	WITHOUT_CLASSIFICATION	0.9961877813122602	WITHOUT_CLASSIFICATION	0.0033781666501205643	DESIGN	3.0402364798784226E-4	DEFECT	1.224185733406281E-4	IMPLEMENTATION	5.853494424871229E-6	TEST	1.7563218658872181E-6	DOCUMENTATION
// 23000: Check constraint violation: {0} // 23001: Unique index or primary key violation: {0}	WITHOUT_CLASSIFICATION	0.9999999773412473	WITHOUT_CLASSIFICATION	1.4210529402173236E-8	IMPLEMENTATION	5.826848751835746E-9	DEFECT	1.144793691790325E-9	DESIGN	1.1076919736467893E-9	DOCUMENTATION	3.6888897259802233E-10	TEST
// Display the dialect version.	WITHOUT_CLASSIFICATION	0.99938570547519	WITHOUT_CLASSIFICATION	5.574208014903144E-4	IMPLEMENTATION	5.6164396996052913E-5	DESIGN	4.3066323973630707E-7	DEFECT	2.3000561882208313E-7	DOCUMENTATION	4.865746514677889E-8	TEST
// The RDMS concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9997826768193723	WITHOUT_CLASSIFICATION	2.0239739671057237E-4	IMPLEMENTATION	8.222441904162841E-6	DESIGN	6.446473328136345E-6	DEFECT	2.1295687218167047E-7	DOCUMENTATION	4.3911812574683925E-8	TEST
// Dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999780026591214	WITHOUT_CLASSIFICATION	1.48114706634762E-5	IMPLEMENTATION	6.784071427055475E-6	DESIGN	3.5381182705405645E-7	TEST	3.1765086113337304E-8	DEFECT	1.622187482871773E-8	DOCUMENTATION
// Original Dialect.java returns " for update";	WITHOUT_CLASSIFICATION	0.9999924588708505	WITHOUT_CLASSIFICATION	7.509728399659399E-6	DESIGN	2.5767994198302054E-8	DEFECT	4.249685913218196E-9	IMPLEMENTATION	8.434360442835551E-10	DOCUMENTATION	5.396336029249107E-10	TEST
// Verify the state of this new method in Hibernate 3.0 Dialect.java	WITHOUT_CLASSIFICATION	0.991897155037934	WITHOUT_CLASSIFICATION	0.008095076939154363	DESIGN	5.334766605697711E-6	DEFECT	1.9972581050584803E-6	TEST	4.1137788708116855E-7	DOCUMENTATION	2.4620313597331964E-8	IMPLEMENTATION
// Origial Dialect.java returns true;	WITHOUT_CLASSIFICATION	0.9999762335157457	WITHOUT_CLASSIFICATION	2.3574623440909508E-5	DESIGN	1.6673212569051065E-7	DEFECT	1.8534723243291303E-8	IMPLEMENTATION	4.257173301365735E-9	DOCUMENTATION	2.3367910754262334E-9	TEST
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999998781691299	WITHOUT_CLASSIFICATION	8.964476543993584E-8	DESIGN	1.773228140495895E-8	IMPLEMENTATION	9.23664397716813E-9	DOCUMENTATION	5.080807043574202E-9	DEFECT	1.363720895244754E-10	TEST
// *** Sequence methods - start. The RDMS dialect needs these	WITHOUT_CLASSIFICATION	0.9999734097577941	WITHOUT_CLASSIFICATION	1.8268429236322056E-5	DESIGN	5.514570558115025E-6	DEFECT	1.2677284523998657E-6	IMPLEMENTATION	1.1135547235312423E-6	TEST	4.25959235438029E-7	DOCUMENTATION
// methods to make it possible to use the Native Id generator	WITHOUT_CLASSIFICATION	0.9998594950688982	WITHOUT_CLASSIFICATION	8.881157024596072E-5	IMPLEMENTATION	5.15303497498582E-5	DESIGN	9.801241624846099E-8	TEST	4.9404460675361323E-8	DEFECT	1.5594229124091267E-8	DOCUMENTATION
// The where clause was added to eliminate this statement from Brute Force Searches.	WITHOUT_CLASSIFICATION	0.9999899646753267	WITHOUT_CLASSIFICATION	9.935323878277358E-6	DESIGN	4.695267787471767E-8	DOCUMENTATION	4.6114127835276033E-8	DEFECT	6.20702375818299E-9	TEST	7.269654649804058E-10	IMPLEMENTATION
// *** Sequence methods - end	WITHOUT_CLASSIFICATION	0.9987194591956393	WITHOUT_CLASSIFICATION	0.0012323473836268835	DESIGN	2.224965178831773E-5	IMPLEMENTATION	1.2855322997122648E-5	DEFECT	9.42698845284218E-6	DOCUMENTATION	3.6614574953760078E-6	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999927711465321	WITHOUT_CLASSIFICATION	4.907171403982236E-5	IMPLEMENTATION	1.354088598706007E-5	DESIGN	7.515845949132985E-6	DEFECT	2.0452161647923634E-6	DOCUMENTATION	1.1487253819350909E-7	TEST
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999792869690579	WITHOUT_CLASSIFICATION	1.9524651975999547E-5	DESIGN	8.533805205892862E-7	TEST	1.6100528692060203E-7	IMPLEMENTATION	1.0309680559943063E-7	DEFECT	7.089635295637534E-8	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9992310046230294	WITHOUT_CLASSIFICATION	7.345575420962202E-4	DESIGN	3.418338437327327E-5	DEFECT	1.6683743647150589E-7	TEST	4.565519078304309E-8	DOCUMENTATION	4.19578739776167E-8	IMPLEMENTATION
// Used with DROP TABLE to delete all records in the table.	WITHOUT_CLASSIFICATION	0.9999982694441902	WITHOUT_CLASSIFICATION	1.6062809891738871E-6	IMPLEMENTATION	1.1591754108756275E-7	DESIGN	6.2009681840980915E-9	DEFECT	1.5037422067721526E-9	DOCUMENTATION	6.525691072487586E-10	TEST
// RDMS supports the UNION ALL clause.	WITHOUT_CLASSIFICATION	0.999997728218528	WITHOUT_CLASSIFICATION	1.516421305380911E-6	IMPLEMENTATION	7.247320273383249E-7	DESIGN	2.3840116759480466E-8	DEFECT	5.144244127802007E-9	DOCUMENTATION	1.6437783608398435E-9	TEST
// RDMS has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9996575979936789	WITHOUT_CLASSIFICATION	1.9404555298823038E-4	IMPLEMENTATION	9.765129858032445E-5	DEFECT	4.878882342698275E-5	DESIGN	1.611516309262202E-6	DOCUMENTATION	3.0481501637728613E-7	TEST
// Multi-param dialect functions...	WITHOUT_CLASSIFICATION	0.9999902465858788	WITHOUT_CLASSIFICATION	8.831127637850609E-6	DESIGN	4.98098346697136E-7	DEFECT	3.896909615428607E-7	IMPLEMENTATION	1.836116900102926E-8	DOCUMENTATION	1.6136006048719696E-8	TEST
// function templates	WITHOUT_CLASSIFICATION	0.9999965062609703	WITHOUT_CLASSIFICATION	1.7980644480499974E-6	IMPLEMENTATION	9.843805009343814E-7	DESIGN	4.3146882471173125E-7	DEFECT	2.1372879095189332E-7	TEST	6.609646516760245E-8	DOCUMENTATION
//not null is implicit	WITHOUT_CLASSIFICATION	0.99543335206275	WITHOUT_CLASSIFICATION	0.004251283640278905	DESIGN	2.962416069816043E-4	DEFECT	8.839232111053008E-6	IMPLEMENTATION	7.5231930957756224E-6	TEST	2.7602647826643267E-6	DOCUMENTATION
// this assumes schema support, which is present in 1.8.0 and later...	WITHOUT_CLASSIFICATION	0.9967486823697643	WITHOUT_CLASSIFICATION	0.0031604069922432187	DESIGN	7.401697683296302E-5	DEFECT	1.0594416430560635E-5	DOCUMENTATION	5.1644170552115894E-6	TEST	1.1348276738557913E-6	IMPLEMENTATION
// HSQLDB only supports READ_UNCOMMITTED transaction isolation	WITHOUT_CLASSIFICATION	0.9999633058433819	WITHOUT_CLASSIFICATION	3.382777213777235E-5	DESIGN	2.0039367409365566E-6	DEFECT	7.320328330787637E-7	IMPLEMENTATION	1.1799498680743111E-7	DOCUMENTATION	1.2419919376476784E-8	TEST
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999912365058977	WITHOUT_CLASSIFICATION	7.673589738066293E-6	DESIGN	8.435211525390482E-7	DEFECT	1.888307122300808E-7	IMPLEMENTATION	3.0021497197685166E-8	TEST	2.7531002306299648E-8	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999599973267026	WITHOUT_CLASSIFICATION	3.69495884336147E-5	DESIGN	1.7326781901467908E-6	DEFECT	1.1776450076182198E-6	IMPLEMENTATION	1.004037403504687E-7	DOCUMENTATION	4.235792572025937E-8	TEST
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999796640020391	WITHOUT_CLASSIFICATION	1.9047963017007287E-5	DESIGN	8.049524212693832E-7	DEFECT	4.4186334101034E-7	IMPLEMENTATION	2.1585043097758926E-8	DOCUMENTATION	1.9634138503768173E-8	TEST
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.999999975899541	WITHOUT_CLASSIFICATION	1.8571783445109497E-8	DESIGN	3.6456557382512025E-9	IMPLEMENTATION	9.932834216864697E-10	DEFECT	5.638874264498702E-10	DOCUMENTATION	3.2584896017847423E-10	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999927711465321	WITHOUT_CLASSIFICATION	4.907171403982236E-5	IMPLEMENTATION	1.354088598706007E-5	DESIGN	7.515845949132985E-6	DEFECT	2.0452161647923634E-6	DOCUMENTATION	1.1487253819350909E-7	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999927711465321	WITHOUT_CLASSIFICATION	4.907171403982236E-5	IMPLEMENTATION	1.354088598706007E-5	DESIGN	7.515845949132985E-6	DEFECT	2.0452161647923634E-6	DOCUMENTATION	1.1487253819350909E-7	TEST
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9891380712700175	WITHOUT_CLASSIFICATION	0.010861359355894717	DESIGN	4.5530098262651657E-7	DEFECT	5.77671130850547E-8	IMPLEMENTATION	3.2235846562615254E-8	DOCUMENTATION	2.4070145473965038E-8	TEST
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// TimesTen has no BLOB/CLOB support, but these types may be suitable  // for some applications. The length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.9999918966107774	WITHOUT_CLASSIFICATION	8.008901942506125E-6	IMPLEMENTATION	4.0912469818155076E-8	DOCUMENTATION	2.854056825924157E-8	TEST	1.4521748313813312E-8	DEFECT	1.0512493754790513E-8	DESIGN
// new methods in dialect3	WITHOUT_CLASSIFICATION	0.9997677705559673	WITHOUT_CLASSIFICATION	2.2903497868029016E-4	DESIGN	1.965818905303819E-6	IMPLEMENTATION	6.815612908866425E-7	DEFECT	2.8515187323729183E-7	DOCUMENTATION	2.619332830096798E-7	TEST
/*public boolean supportsForUpdateNowait() {	WITHOUT_CLASSIFICATION	0.9982027920383413	WITHOUT_CLASSIFICATION	0.001719094693189943	DESIGN	6.0891985244844826E-5	IMPLEMENTATION	1.4509701885815317E-5	DEFECT	1.6136881047410176E-6	DOCUMENTATION	1.0978932333845604E-6	TEST
// TimesTen has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9956930579071012	WITHOUT_CLASSIFICATION	0.004115841757323054	IMPLEMENTATION	1.6128682353786173E-4	DEFECT	2.078929110826689E-5	DESIGN	6.5299256762736945E-6	DOCUMENTATION	2.4942952534893E-6	TEST
// iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.9999996905739583	WITHOUT_CLASSIFICATION	2.4233506783339417E-7	DESIGN	4.9187336854015096E-8	IMPLEMENTATION	1.5708461538274104E-8	TEST	1.6936758399755036E-9	DEFECT	5.014995242144196E-10	DOCUMENTATION
// add new ordered map	WITHOUT_CLASSIFICATION	0.9999977439028708	WITHOUT_CLASSIFICATION	1.60060673759189E-6	IMPLEMENTATION	5.427479903444305E-7	DESIGN	5.3862654255452543E-8	TEST	3.765137665850718E-8	DEFECT	2.1228370362497324E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999927711465321	WITHOUT_CLASSIFICATION	4.907171403982236E-5	IMPLEMENTATION	1.354088598706007E-5	DESIGN	7.515845949132985E-6	DEFECT	2.0452161647923634E-6	DOCUMENTATION	1.1487253819350909E-7	TEST
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999962886826204	WITHOUT_CLASSIFICATION	2.1387080613344775E-6	DESIGN	1.5371906905988046E-6	IMPLEMENTATION	3.3380131297021576E-8	DEFECT	1.2440240204884337E-9	DOCUMENTATION	7.944724119126794E-10	TEST
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
//registerColumnType data types	WITHOUT_CLASSIFICATION	0.9991962954774785	WITHOUT_CLASSIFICATION	8.018201518921361E-4	DESIGN	8.811587296371199E-7	DEFECT	4.249420300836121E-7	IMPLEMENTATION	3.683247398291438E-7	TEST	2.0994512991936994E-7	DOCUMENTATION
// hibernate seems to ignore this type...	WITHOUT_CLASSIFICATION	0.9948046691488239	WITHOUT_CLASSIFICATION	0.005192113297301731	DESIGN	1.0582548826088152E-6	IMPLEMENTATION	9.753138255545345E-7	DOCUMENTATION	6.117151196325718E-7	DEFECT	5.722700464434534E-7	TEST
// IBID for current_time and current_date	WITHOUT_CLASSIFICATION	0.9999300622998929	WITHOUT_CLASSIFICATION	6.667043450922702E-5	IMPLEMENTATION	1.2964220712840306E-6	DEFECT	9.969472236676742E-7	DOCUMENTATION	9.055489569530596E-7	DESIGN	6.834734587209075E-8	TEST
// Tell hibernate to use getBytes instead of getBinaryStream	WITHOUT_CLASSIFICATION	0.9979950918584253	WITHOUT_CLASSIFICATION	0.0020004191386638406	DESIGN	3.1210350162444137E-6	DEFECT	6.33704822325496E-7	IMPLEMENTATION	4.737310582932522E-7	TEST	2.6053201398255024E-7	DOCUMENTATION
// No batch statements	WITHOUT_CLASSIFICATION	0.9999997415709371	WITHOUT_CLASSIFICATION	1.6673834120200774E-7	IMPLEMENTATION	4.484988163181454E-8	DOCUMENTATION	2.1790151385200628E-8	DESIGN	1.9946761321141762E-8	TEST	5.103927294304151E-9	DEFECT
/*	WITHOUT_CLASSIFICATION	0.9625855444912206	WITHOUT_CLASSIFICATION	0.026097610924683663	DESIGN	0.00739982775603616	DEFECT	0.003707326217175183	IMPLEMENTATION	1.0587277362289763E-4	DOCUMENTATION	1.038178372614674E-4	TEST
//no pointbase BIT	WITHOUT_CLASSIFICATION	0.999994780524283	WITHOUT_CLASSIFICATION	2.4889539801052304E-6	IMPLEMENTATION	1.4827989006224577E-6	DEFECT	9.332662130933486E-7	DOCUMENTATION	2.792714710000971E-7	DESIGN	3.518515205396306E-8	TEST
//no pointbase TINYINT	WITHOUT_CLASSIFICATION	0.999996668019062	WITHOUT_CLASSIFICATION	1.9871486830330856E-6	IMPLEMENTATION	7.328958364076629E-7	DOCUMENTATION	2.8649440829416736E-7	DESIGN	2.860855701418928E-7	DEFECT	3.9356440102929306E-8	TEST
// Pointbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9998398371562557	WITHOUT_CLASSIFICATION	1.0694373040502426E-4	IMPLEMENTATION	4.159156775629962E-5	DEFECT	9.969009934989679E-6	DESIGN	1.5125462663314997E-6	DOCUMENTATION	1.4598938173709744E-7	TEST
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999792869690579	WITHOUT_CLASSIFICATION	1.9524651975999547E-5	DESIGN	8.533805205892862E-7	TEST	1.6100528692060203E-7	IMPLEMENTATION	1.0309680559943063E-7	DEFECT	7.089635295637534E-8	DOCUMENTATION
// The current_timestamp is more accurate, but only known to be supported // in SQL Server 7.0 and later (i.e., Sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.9952669304256893	WITHOUT_CLASSIFICATION	0.00455322412524265	DEFECT	1.4530287668092627E-4	DESIGN	2.9271395144024375E-5	IMPLEMENTATION	2.8542593677388766E-6	DOCUMENTATION	2.4169178753607846E-6	TEST
// SQL Server (at least up through 2005) does not support defining // cascade delete constraints which can circel back to the mutating // table	WITHOUT_CLASSIFICATION	0.9999963429078453	WITHOUT_CLASSIFICATION	3.645483489624575E-6	DESIGN	7.86229149938425E-9	TEST	2.0986668509890036E-9	DEFECT	1.2563948130074866E-9	DOCUMENTATION	3.9131189066508305E-10	IMPLEMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9899877001880413	WITHOUT_CLASSIFICATION	0.007553566405727898	DEFECT	0.0023047324870452005	DESIGN	1.4978719478127154E-4	TEST	4.2018029627072264E-6	DOCUMENTATION	1.1921441687651285E-8	IMPLEMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999792869690579	WITHOUT_CLASSIFICATION	1.9524651975999547E-5	DESIGN	8.533805205892862E-7	TEST	1.6100528692060203E-7	IMPLEMENTATION	1.0309680559943063E-7	DEFECT	7.089635295637534E-8	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999959144353561	WITHOUT_CLASSIFICATION	3.988820634337444E-6	DESIGN	3.478949095782569E-8	DOCUMENTATION	2.7551850515850257E-8	DEFECT	2.1441347622442454E-8	IMPLEMENTATION	1.2961320532478735E-8	TEST
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999962886826204	WITHOUT_CLASSIFICATION	2.1387080613344775E-6	DESIGN	1.5371906905988046E-6	IMPLEMENTATION	3.3380131297021576E-8	DEFECT	1.2440240204884337E-9	DOCUMENTATION	7.944724119126794E-10	TEST
//Sybase BIT type does not support null values	WITHOUT_CLASSIFICATION	0.9977072623277092	WITHOUT_CLASSIFICATION	0.002206532930077167	DESIGN	8.140411036948385E-5	DEFECT	3.01962057198234E-6	IMPLEMENTATION	1.1495167692212767E-6	DOCUMENTATION	6.314945028731996E-7	TEST
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999927711465321	WITHOUT_CLASSIFICATION	4.907171403982236E-5	IMPLEMENTATION	1.354088598706007E-5	DESIGN	7.515845949132985E-6	DEFECT	2.0452161647923634E-6	DOCUMENTATION	1.1487253819350909E-7	TEST
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
//not null ... (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.9918678596921927	WITHOUT_CLASSIFICATION	0.006760479061585832	DESIGN	0.001314095105683545	DEFECT	3.3404752903764955E-5	TEST	2.2082249051077277E-5	IMPLEMENTATION	2.0791385830854957E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999927711465321	WITHOUT_CLASSIFICATION	4.907171403982236E-5	IMPLEMENTATION	1.354088598706007E-5	DESIGN	7.515845949132985E-6	DEFECT	2.0452161647923634E-6	DOCUMENTATION	1.1487253819350909E-7	TEST
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.8891624906575829	WITHOUT_CLASSIFICATION	0.11083261499459797	DESIGN	3.7732506136664902E-6	DEFECT	5.645776587601302E-7	TEST	5.425707754498328E-7	IMPLEMENTATION	1.3948771214097066E-8	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999912365058977	WITHOUT_CLASSIFICATION	7.673589738066293E-6	DESIGN	8.435211525390482E-7	DEFECT	1.888307122300808E-7	IMPLEMENTATION	3.0021497197685166E-8	TEST	2.7531002306299648E-8	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999599973267026	WITHOUT_CLASSIFICATION	3.69495884336147E-5	DESIGN	1.7326781901467908E-6	DEFECT	1.1776450076182198E-6	IMPLEMENTATION	1.004037403504687E-7	DOCUMENTATION	4.235792572025937E-8	TEST
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999796640020391	WITHOUT_CLASSIFICATION	1.9047963017007287E-5	DESIGN	8.049524212693832E-7	DEFECT	4.4186334101034E-7	IMPLEMENTATION	2.1585043097758926E-8	DOCUMENTATION	1.9634138503768173E-8	TEST
// add another (inner) nested select // add the main query // close off the inner nested select	WITHOUT_CLASSIFICATION	0.999999971663089	WITHOUT_CLASSIFICATION	1.9730432235442486E-8	TEST	4.491157925821042E-9	DEFECT	2.125076278659953E-9	DOCUMENTATION	1.033933053396986E-9	DESIGN	9.563115481570985E-10	IMPLEMENTATION
// add the main query	WITHOUT_CLASSIFICATION	0.9999848122868218	WITHOUT_CLASSIFICATION	8.796248857331313E-6	DESIGN	4.7724001642315E-6	IMPLEMENTATION	9.418854301986609E-7	DOCUMENTATION	3.650948048947849E-7	TEST	3.120839214315433E-7	DEFECT
//add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.999997324660153	WITHOUT_CLASSIFICATION	2.4815477533655987E-6	DESIGN	6.199142639927927E-8	TEST	5.503254446993087E-8	IMPLEMENTATION	4.8384676089637125E-8	DOCUMENTATION	2.83834466665676E-8	DEFECT
// This assumes you will want to ignore any update counts 	WITHOUT_CLASSIFICATION	0.9999987418815024	WITHOUT_CLASSIFICATION	1.242783901405861E-6	DEFECT	5.687644404609885E-9	IMPLEMENTATION	4.73408008877727E-9	DESIGN	2.7676260873811053E-9	DOCUMENTATION	2.1452456757029965E-9	TEST
// You may still have other ResultSets or update counts left to process here  // but you can't do it now or the ResultSet you just got will be closed 	WITHOUT_CLASSIFICATION	0.9999998174076142	WITHOUT_CLASSIFICATION	1.7174233477421032E-7	DEFECT	1.0771454407212032E-8	DESIGN	4.903041817235814E-11	IMPLEMENTATION	2.6111372492243952E-11	TEST	3.454806433387869E-12	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999927711465321	WITHOUT_CLASSIFICATION	4.907171403982236E-5	IMPLEMENTATION	1.354088598706007E-5	DESIGN	7.515845949132985E-6	DEFECT	2.0452161647923634E-6	DOCUMENTATION	1.1487253819350909E-7	TEST
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999792869690579	WITHOUT_CLASSIFICATION	1.9524651975999547E-5	DESIGN	8.533805205892862E-7	TEST	1.6100528692060203E-7	IMPLEMENTATION	1.0309680559943063E-7	DEFECT	7.089635295637534E-8	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.999999975899541	WITHOUT_CLASSIFICATION	1.8571783445109497E-8	DESIGN	3.6456557382512025E-9	IMPLEMENTATION	9.932834216864697E-10	DEFECT	5.638874264498702E-10	DOCUMENTATION	3.2584896017847423E-10	TEST
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9891380712700175	WITHOUT_CLASSIFICATION	0.010861359355894717	DESIGN	4.5530098262651657E-7	DEFECT	5.77671130850547E-8	IMPLEMENTATION	3.2235846562615254E-8	DOCUMENTATION	2.4070145473965038E-8	TEST
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// features which change between 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999913789729321	WITHOUT_CLASSIFICATION	3.904971906328057E-6	DESIGN	2.459443756713977E-6	DEFECT	2.0018884737845476E-6	IMPLEMENTATION	1.9608054787732445E-7	DOCUMENTATION	5.8642383358909713E-8	TEST
// features which remain constant across 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999905860242365	WITHOUT_CLASSIFICATION	8.443920957034172E-6	DEFECT	8.78563600016342E-7	DESIGN	5.371542646421987E-8	DOCUMENTATION	2.8423305422586773E-8	IMPLEMENTATION	9.352474658974388E-9	TEST
// binary %Stream // character %Stream	WITHOUT_CLASSIFICATION	0.9999999330339564	WITHOUT_CLASSIFICATION	5.9284219943420324E-8	DESIGN	3.1323751150223005E-9	DEFECT	2.130923415439777E-9	TEST	1.5290146986580483E-9	DOCUMENTATION	8.895104340054725E-10	IMPLEMENTATION
//getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE, NO_BATCH);	WITHOUT_CLASSIFICATION	0.9999993808270276	WITHOUT_CLASSIFICATION	4.4907481687199743E-7	DESIGN	1.0668682227659159E-7	DEFECT	4.227686037062976E-8	DOCUMENTATION	1.243012667402695E-8	TEST	8.704346223656193E-9	IMPLEMENTATION
// hibernate impelemnts cast in Dialect.java	WITHOUT_CLASSIFICATION	0.9979351190365846	WITHOUT_CLASSIFICATION	0.002062843035290099	DESIGN	1.1507686813408792E-6	TEST	7.25541250545656E-7	DEFECT	9.198127712280366E-8	IMPLEMENTATION	6.963691613878144E-8	DOCUMENTATION
// aggregate functions shouldn't be registered, right? //registerFunction( "list", new StandardSQLFunction("list",Hibernate.STRING) ); // stopped on $list	WITHOUT_CLASSIFICATION	0.9977673042112668	WITHOUT_CLASSIFICATION	0.002232600509610885	DESIGN	5.06332283544212E-8	DEFECT	4.329336326990776E-8	IMPLEMENTATION	1.1091573972604888E-9	TEST	2.4337325092201745E-10	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998689055961548	WITHOUT_CLASSIFICATION	1.0677495870570887E-4	IMPLEMENTATION	1.9901462662649506E-5	DESIGN	2.963379977288914E-6	DEFECT	7.875524163241248E-7	DOCUMENTATION	6.670500832310388E-7	TEST
// below is for Cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.9986020353606386	WITHOUT_CLASSIFICATION	0.001395913043964554	DESIGN	1.939620939979436E-6	DEFECT	8.826095779256463E-8	TEST	1.46443785077934E-8	DOCUMENTATION	9.06912057849746E-9	IMPLEMENTATION
// note that %string is deprecated	WITHOUT_CLASSIFICATION	0.9974358347105153	WITHOUT_CLASSIFICATION	0.00175315372705071	DESIGN	7.920843854759722E-4	IMPLEMENTATION	1.4498601381070458E-5	TEST	2.801090287831099E-6	DEFECT	1.6274852892302932E-6	DOCUMENTATION
// %upper is deprecated	WITHOUT_CLASSIFICATION	0.9999432078436579	WITHOUT_CLASSIFICATION	5.5382606704925095E-5	DESIGN	5.918429899035267E-7	IMPLEMENTATION	5.766300941016619E-7	DEFECT	2.0759242945458526E-7	TEST	3.348412370606322E-8	DOCUMENTATION
// The syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.9999997231913789	WITHOUT_CLASSIFICATION	1.9013511528443196E-7	DESIGN	3.8529555215438385E-8	DEFECT	3.680559614497991E-8	IMPLEMENTATION	9.214060010389582E-9	DOCUMENTATION	2.12429445588668E-9	TEST
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999999773540351	WITHOUT_CLASSIFICATION	1.1711222588365878E-8	IMPLEMENTATION	8.943162304507926E-9	DESIGN	9.968596493626467E-10	DOCUMENTATION	5.454998726154319E-10	TEST	4.492202338288035E-10	DEFECT
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995863368325214	WITHOUT_CLASSIFICATION	3.6235929338112623E-4	IMPLEMENTATION	4.5429647017461636E-5	DESIGN	3.975618304844144E-6	DEFECT	1.01768858964373E-6	TEST	8.809201854671344E-7	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997470785393828	WITHOUT_CLASSIFICATION	1.2703542696423866E-4	DESIGN	1.1883504566926516E-4	IMPLEMENTATION	4.644934168584541E-6	DEFECT	1.3965588880104459E-6	DOCUMENTATION	1.0094949269870613E-6	TEST
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998822883320044	WITHOUT_CLASSIFICATION	1.1126783240389746E-4	DESIGN	5.832721809969651E-6	IMPLEMENTATION	4.91328833346424E-7	TEST	7.484315246611634E-8	DEFECT	4.494179599425983E-8	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999999773540351	WITHOUT_CLASSIFICATION	1.1711222588365878E-8	IMPLEMENTATION	8.943162304507926E-9	DESIGN	9.968596493626467E-10	DOCUMENTATION	5.454998726154319E-10	TEST	4.492202338288035E-10	DEFECT
// The syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.9999730907936124	WITHOUT_CLASSIFICATION	2.413210233663809E-5	DESIGN	1.9809269380246127E-6	DEFECT	5.548974108541194E-7	IMPLEMENTATION	2.1205310526152302E-7	DOCUMENTATION	2.922659692412048E-8	TEST
// Completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.999994879020506	WITHOUT_CLASSIFICATION	2.5795475902660332E-6	DESIGN	1.5072010730881947E-6	DEFECT	9.977451503969996E-7	IMPLEMENTATION	3.1199608193345364E-8	DOCUMENTATION	5.286071967026532E-9	TEST
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998947316647865	WITHOUT_CLASSIFICATION	6.064392887981716E-5	IMPLEMENTATION	2.6893969977259718E-5	DEFECT	1.6731873056695982E-5	DESIGN	8.206184623198774E-7	DOCUMENTATION	1.7794483746595998E-7	TEST
// LIMIT support (ala TOP) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999466571568303	WITHOUT_CLASSIFICATION	3.360785336845267E-5	IMPLEMENTATION	1.6441269547420765E-5	DESIGN	2.7629278296122734E-6	DEFECT	4.0957221752191134E-7	DOCUMENTATION	1.2122020670878338E-7	TEST
// InterSystems Cache' does not current support "SELECT ... FOR UPDATE" syntax... // Set your transaction mode to READ_COMMITTED before using	WITHOUT_CLASSIFICATION	0.999985681415213	WITHOUT_CLASSIFICATION	5.611100155249931E-6	DESIGN	4.550863877336864E-6	DEFECT	4.0301157457010125E-6	IMPLEMENTATION	6.96247410955586E-8	TEST	5.688026753839105E-8	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999927711465321	WITHOUT_CLASSIFICATION	4.907171403982236E-5	IMPLEMENTATION	1.354088598706007E-5	DESIGN	7.515845949132985E-6	DEFECT	2.0452161647923634E-6	DOCUMENTATION	1.1487253819350909E-7	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999927711465321	WITHOUT_CLASSIFICATION	4.907171403982236E-5	IMPLEMENTATION	1.354088598706007E-5	DESIGN	7.515845949132985E-6	DEFECT	2.0452161647923634E-6	DOCUMENTATION	1.1487253819350909E-7	TEST
/*<String>*/	WITHOUT_CLASSIFICATION	0.9986486298285872	WITHOUT_CLASSIFICATION	0.0010199551618610438	DESIGN	2.2742327988917635E-4	DEFECT	6.805893740727461E-5	IMPLEMENTATION	2.306480220093421E-5	DOCUMENTATION	1.286799005436083E-5	TEST
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999971382021094	WITHOUT_CLASSIFICATION	2.485288413985888E-5	IMPLEMENTATION	3.452117720468494E-6	DESIGN	1.9961299707952707E-7	DEFECT	8.13247388094168E-8	DOCUMENTATION	3.203930992545198E-8	TEST
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999536329443276	WITHOUT_CLASSIFICATION	3.704234655796954E-5	DESIGN	8.79768316780952E-6	IMPLEMENTATION	2.887646902431503E-7	DEFECT	1.3785923769562158E-7	DOCUMENTATION	1.0040201872260487E-7	TEST
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999998781691299	WITHOUT_CLASSIFICATION	8.964476543993584E-8	DESIGN	1.773228140495895E-8	IMPLEMENTATION	9.23664397716813E-9	DOCUMENTATION	5.080807043574202E-9	DEFECT	1.363720895244754E-10	TEST
// Does the LIMIT clause come at the start of the SELECT statement, rather than at the end?	WITHOUT_CLASSIFICATION	0.999797928339004	WITHOUT_CLASSIFICATION	1.9782028813537E-4	DESIGN	2.3958666686218514E-6	DOCUMENTATION	8.323188464403252E-7	TEST	5.359470539476624E-7	IMPLEMENTATION	4.872402914254427E-7	DEFECT
// Does the LIMIT clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.9995798762569682	WITHOUT_CLASSIFICATION	3.504980334371568E-4	DESIGN	6.687692457091415E-5	DEFECT	1.9413387082397537E-6	IMPLEMENTATION	5.806993625567325E-7	DOCUMENTATION	2.2674695293846719E-7	TEST
// The name of the SQL function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.9999988479506632	WITHOUT_CLASSIFICATION	5.721591106678716E-7	DEFECT	5.220200705717472E-7	DESIGN	4.452472498585048E-8	IMPLEMENTATION	1.2224929827719303E-8	DOCUMENTATION	1.1205007805963223E-9	TEST
// Create an OuterJoinGenerator for this dialect.	WITHOUT_CLASSIFICATION	0.9999682096873371	WITHOUT_CLASSIFICATION	3.1665626698238086E-5	DESIGN	1.1880908296474315E-7	TEST	4.411299746957225E-9	DOCUMENTATION	7.697817625143962E-10	DEFECT	6.958002140354297E-10	IMPLEMENTATION
// The keyword used to insert a row without specifying // any column values	WITHOUT_CLASSIFICATION	0.9999998317552421	WITHOUT_CLASSIFICATION	1.2920921183611424E-7	DEFECT	1.718091652319602E-8	DESIGN	9.398981023965147E-9	IMPLEMENTATION	8.617678723143882E-9	DOCUMENTATION	3.837969821147089E-9	TEST
//registerFunction( "trim", new StandardSQLFunction( "trim", Hibernate.STRING ) );	WITHOUT_CLASSIFICATION	0.9999959109424222	WITHOUT_CLASSIFICATION	2.2259105640106213E-6	DESIGN	1.7985323915764962E-6	IMPLEMENTATION	4.57301379967373E-8	DEFECT	1.2911240171518417E-8	DOCUMENTATION	5.9732440361477175E-9	TEST
//skip the FROM keyword in params	WITHOUT_CLASSIFICATION	0.999955597830805	WITHOUT_CLASSIFICATION	2.206084389300917E-5	IMPLEMENTATION	1.852977890476183E-5	DESIGN	2.1686475385216848E-6	DOCUMENTATION	8.810129043234725E-7	DEFECT	7.618859544397512E-7	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9978396653539129	WITHOUT_CLASSIFICATION	0.002047636254167967	DESIGN	8.364911112739331E-5	IMPLEMENTATION	1.746060139679287E-5	DEFECT	7.776673285281719E-6	DOCUMENTATION	3.812006109517023E-6	TEST
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999999999033053	WITHOUT_CLASSIFICATION	5.5896641766025064E-11	DOCUMENTATION	2.1034029983480955E-11	DESIGN	1.2176266053530129E-11	IMPLEMENTATION	7.0677339113618565E-12	DEFECT	5.199878637185971E-13	TEST
// SQLFunction implementation	WITHOUT_CLASSIFICATION	0.9998544682113354	WITHOUT_CLASSIFICATION	1.3696752097496723E-4	IMPLEMENTATION	5.8513607676995544E-6	DESIGN	1.7672103743008656E-6	DEFECT	9.19295268306199E-7	DOCUMENTATION	2.64012793386173E-8	TEST
// conceivable that the dialect ctor could throw HibernateExceptions, so don't re-wrap	WITHOUT_CLASSIFICATION	0.9999994748346306	WITHOUT_CLASSIFICATION	4.933180356904711E-7	DESIGN	1.889014734724634E-8	IMPLEMENTATION	7.873543993093007E-9	DEFECT	4.6766692096678156E-9	TEST	4.069732147192245E-10	DOCUMENTATION
// register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.9999963245514992	WITHOUT_CLASSIFICATION	2.320374452195747E-6	DESIGN	1.1672409168254124E-6	IMPLEMENTATION	1.5997349961748475E-7	DEFECT	1.96220927911137E-8	TEST	8.237539246885945E-9	DOCUMENTATION
// register resolvers set via Environment property	WITHOUT_CLASSIFICATION	0.9999951230412555	WITHOUT_CLASSIFICATION	4.799836093149563E-6	DESIGN	4.838694133748588E-8	DEFECT	2.0169619464334918E-8	TEST	5.901633582853013E-9	DOCUMENTATION	2.6644569953316834E-9	IMPLEMENTATION
// kept for backward compatibility until after the 3.1beta5 release of HA	WITHOUT_CLASSIFICATION	0.9999954521395678	WITHOUT_CLASSIFICATION	4.191286382960828E-6	IMPLEMENTATION	3.339034405496934E-7	DESIGN	1.2307947181280484E-8	DEFECT	5.7215990178519045E-9	TEST	4.641062752206916E-9	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9991117575242732	WITHOUT_CLASSIFICATION	8.394386461106783E-4	DESIGN	4.488443091427671E-5	IMPLEMENTATION	2.048225941383744E-6	DOCUMENTATION	1.6124253895534876E-6	TEST	2.5874737096891437E-7	DEFECT
// the CascadingAction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999799274047351	WITHOUT_CLASSIFICATION	1.4599552901588329E-5	IMPLEMENTATION	4.183773754315122E-6	DESIGN	1.0917712615069665E-6	DOCUMENTATION	1.6293934975483574E-7	TEST	3.455799780132414E-8	DEFECT
// the CascadingAction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9987471588718938	WITHOUT_CLASSIFICATION	0.001242213402640441	IMPLEMENTATION	9.06483638553374E-6	DESIGN	8.655771279764831E-7	DEFECT	5.734069206080923E-7	DOCUMENTATION	1.2390503158280475E-7	TEST
// delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999999888309196	WITHOUT_CLASSIFICATION	6.301947296795601E-8	IMPLEMENTATION	2.5657058206881056E-8	DESIGN	1.3915886013727011E-8	TEST	6.866608268870934E-9	DEFECT	2.231778691871252E-9	DOCUMENTATION
// orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.9998563184992003	WITHOUT_CLASSIFICATION	1.3195706830037264E-4	DESIGN	8.178425284878703E-6	DEFECT	3.15084276610181E-6	IMPLEMENTATION	3.5777061654843384E-7	TEST	3.739383179111053E-8	DOCUMENTATION
/*(LockMode) anything*/	WITHOUT_CLASSIFICATION	0.9997521488386117	WITHOUT_CLASSIFICATION	1.4088574928166212E-4	DESIGN	6.133995464655548E-5	DOCUMENTATION	2.6333533814483848E-5	DEFECT	1.5458968529390945E-5	IMPLEMENTATION	3.832955116105894E-6	TEST
// lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999643680217059	WITHOUT_CLASSIFICATION	3.415817208227429E-5	IMPLEMENTATION	5.03206439654028E-7	DESIGN	3.824882127621344E-7	TEST	3.362994601305499E-7	DEFECT	2.518120993093035E-7	DOCUMENTATION
// refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999995242541658	WITHOUT_CLASSIFICATION	4.561040599552226E-6	IMPLEMENTATION	1.0758359676284975E-7	DESIGN	5.3774541702530827E-8	TEST	2.2106894463987486E-8	DEFECT	1.2952709421981763E-8	DOCUMENTATION
// evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999985286119344	WITHOUT_CLASSIFICATION	7.226530524977713E-7	DESIGN	6.024594179392023E-7	IMPLEMENTATION	9.589762591401846E-8	DEFECT	3.1111932278425056E-8	TEST	1.9266036866008084E-8	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999992275010817	WITHOUT_CLASSIFICATION	6.13725700740238E-7	IMPLEMENTATION	1.1614225106117111E-7	DEFECT	2.054414048115166E-8	DESIGN	1.7831219513479035E-8	TEST	4.255606337827908E-9	DOCUMENTATION
// orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.9999617298545498	WITHOUT_CLASSIFICATION	3.269272706728744E-5	DESIGN	4.393011119673943E-6	DEFECT	1.075864969379381E-6	IMPLEMENTATION	9.54591876422261E-8	TEST	1.3083106143348059E-8	DOCUMENTATION
// for deprecated saveOrUpdateCopy()	WITHOUT_CLASSIFICATION	0.999967083357981	WITHOUT_CLASSIFICATION	2.9972703668239E-5	DESIGN	1.4773356584100177E-6	IMPLEMENTATION	1.153063625362931E-6	DEFECT	1.906301232971056E-7	DOCUMENTATION	1.2290894360403167E-7	TEST
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999994299944075	WITHOUT_CLASSIFICATION	4.888536037793973E-7	IMPLEMENTATION	5.3431066700123935E-8	DESIGN	1.842239946149275E-8	DEFECT	7.793144807671136E-9	TEST	1.5053778342193282E-9	DOCUMENTATION
//a proxy cannot be transient and it breaks ForeignKeys.isTransient	WITHOUT_CLASSIFICATION	0.9999755153658453	WITHOUT_CLASSIFICATION	1.8568048713909306E-5	DESIGN	4.957579463570221E-6	DEFECT	8.00837256181895E-7	IMPLEMENTATION	1.1020899366187418E-7	DOCUMENTATION	4.7959727395677614E-8	TEST
// replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999997229951503	WITHOUT_CLASSIFICATION	2.4474435134399047E-6	DESIGN	2.2886811602759065E-7	IMPLEMENTATION	6.940433928616017E-8	TEST	1.2946617811130771E-8	DEFECT	1.1385910550645701E-8	DOCUMENTATION
// static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993739890982	WITHOUT_CLASSIFICATION	4.348102393119653E-7	DESIGN	1.519384890941642E-7	IMPLEMENTATION	3.001956571136142E-8	DEFECT	7.09459081991817E-9	TEST	2.1480167338879957E-9	DOCUMENTATION
// handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.9948448732596403	WITHOUT_CLASSIFICATION	0.00515019873470127	DESIGN	3.2512974493698045E-6	DEFECT	9.843140798032248E-7	IMPLEMENTATION	4.848434267012516E-7	TEST	2.0755070261769675E-7	DOCUMENTATION
// Actually the semantics of the next three are really "Bag" // Note that, unlike objects, collection insertions, updates, // deletions are not really remembered between flushes. We // just re-use the same Lists for convenience.	WITHOUT_CLASSIFICATION	0.9999658247266601	WITHOUT_CLASSIFICATION	2.2364279125614167E-5	DEFECT	6.573730539693749E-6	IMPLEMENTATION	2.6304583100982057E-6	TEST	2.544474743598589E-6	DESIGN	6.233062098535013E-8	DOCUMENTATION
// Add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.9999980288925451	WITHOUT_CLASSIFICATION	1.497325371973423E-6	DESIGN	3.1383396485388325E-7	DEFECT	7.528165819470281E-8	DOCUMENTATION	7.091958876952647E-8	IMPLEMENTATION	1.3746871382180064E-8	TEST
// continue loop	WITHOUT_CLASSIFICATION	0.9999867201063404	WITHOUT_CLASSIFICATION	1.0607659258177226E-5	DEFECT	2.2229209172431606E-6	DESIGN	2.7049242353732576E-7	IMPLEMENTATION	1.628974638277988E-7	DOCUMENTATION	1.592359693835644E-8	TEST
//sort the updates by fk	WITHOUT_CLASSIFICATION	0.999188097361723	WITHOUT_CLASSIFICATION	7.47772106156405E-4	IMPLEMENTATION	3.2189779496526076E-5	DESIGN	1.8639660984145888E-5	TEST	1.11440776419288E-5	DEFECT	2.1570139979410317E-6	DOCUMENTATION
//sort the updates by pk	WITHOUT_CLASSIFICATION	0.9991809009312607	WITHOUT_CLASSIFICATION	7.790836993853245E-4	IMPLEMENTATION	2.193927575743015E-5	DESIGN	1.1879298866969095E-5	TEST	4.232774213619733E-6	DEFECT	1.9640205160404336E-6	DOCUMENTATION
// the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.999994830603704	WITHOUT_CLASSIFICATION	3.392085443048836E-6	TEST	6.884196472553925E-7	IMPLEMENTATION	5.008754719481251E-7	DESIGN	4.38512704434705E-7	DEFECT	1.4950302925890257E-7	DOCUMENTATION
// the map of batch numbers to EntityInsertAction lists	WITHOUT_CLASSIFICATION	0.99999883849706	WITHOUT_CLASSIFICATION	6.849471528868828E-7	DESIGN	2.3290893962308154E-7	DEFECT	2.1564147972289977E-7	IMPLEMENTATION	1.654866409809369E-8	DOCUMENTATION	1.1456703713433598E-8	TEST
//optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.9984193521054469	WITHOUT_CLASSIFICATION	0.0015460526103796216	DESIGN	3.2889599615910184E-5	IMPLEMENTATION	8.560714660227786E-7	DOCUMENTATION	5.156140812983962E-7	DEFECT	3.339990103275041E-7	TEST
// the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.9999782610880493	WITHOUT_CLASSIFICATION	1.9153968686285602E-5	DESIGN	2.2745853882651918E-6	IMPLEMENTATION	1.205595783603406E-7	TEST	9.946431073273466E-8	DOCUMENTATION	9.033398707722638E-8	DEFECT
// remove the current element from insertions. It will be added back later.	WITHOUT_CLASSIFICATION	0.9998062032847053	WITHOUT_CLASSIFICATION	1.8366857082052564E-4	DESIGN	1.0085777471037346E-5	DEFECT	2.1289310395710714E-8	DOCUMENTATION	1.586984203303279E-8	IMPLEMENTATION	5.207850692425346E-9	TEST
// the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.9973953278567534	WITHOUT_CLASSIFICATION	0.0025222379933067785	IMPLEMENTATION	6.0191990280974884E-5	DESIGN	1.4414679584436898E-5	DOCUMENTATION	7.690224358234782E-6	TEST	1.3725571625164128E-7	DEFECT
// There is already an existing batch for this type of entity. // Check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.9999916152158118	WITHOUT_CLASSIFICATION	6.908405161572126E-6	DESIGN	1.4275675308161106E-6	TEST	3.7862041374520715E-8	DOCUMENTATION	1.0765206279093727E-8	DEFECT	1.8424792644689328E-10	IMPLEMENTATION
// now rebuild the insertions list. There is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.9999937909451877	WITHOUT_CLASSIFICATION	6.089772546994973E-6	DESIGN	8.827115613563421E-8	DEFECT	2.5182107918400963E-8	IMPLEMENTATION	2.980405283635765E-9	TEST	2.8485959700835447E-9	DOCUMENTATION
// the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.9999942351331575	WITHOUT_CLASSIFICATION	3.0059240323036014E-6	TEST	2.541457041824091E-6	DESIGN	9.919390771857E-8	DOCUMENTATION	6.605092460560382E-8	IMPLEMENTATION	5.224093582180909E-8	DEFECT
// loop through all the associations of the current entity and make sure that they are processed // before the current batch number	WITHOUT_CLASSIFICATION	0.9999999724680366	WITHOUT_CLASSIFICATION	1.059646976540771E-8	IMPLEMENTATION	7.800683880035533E-9	DEFECT	5.700390749133797E-9	DESIGN	2.3487718548837373E-9	DOCUMENTATION	1.085647226683851E-9	TEST
// find the batch number associated with the current association, if any.	WITHOUT_CLASSIFICATION	0.9998038880589202	WITHOUT_CLASSIFICATION	8.041581069440407E-5	IMPLEMENTATION	7.182497334591887E-5	DESIGN	2.5960937615962717E-5	TEST	1.7342362830245975E-5	DOCUMENTATION	5.678565933611072E-7	DEFECT
// create a new batch for this type. The batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.999999212414399	WITHOUT_CLASSIFICATION	7.595540543855754E-7	DESIGN	1.2051137479231277E-8	DEFECT	8.823367693662033E-9	DOCUMENTATION	7.016666890526499E-9	TEST	1.4037455254488739E-10	IMPLEMENTATION
// loop through all the associated entities and make sure they have been // processed before the latest // batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.9999978477523769	WITHOUT_CLASSIFICATION	1.7214901216413786E-6	TEST	2.505421249879812E-7	DESIGN	1.6984654180227252E-7	IMPLEMENTATION	7.293524022490142E-9	DOCUMENTATION	3.075310601434545E-9	DEFECT
// since this entity will now be processed in the latest possible batch, // we can be assured that it will come after all other associations, // there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.9922210189785922	WITHOUT_CLASSIFICATION	0.0071940315206642505	IMPLEMENTATION	4.2830285206603804E-4	DESIGN	1.4304427326788363E-4	TEST	1.100127156300803E-5	DEFECT	2.6011038467789253E-6	DOCUMENTATION
//cascade to current collection elements	WITHOUT_CLASSIFICATION	0.9998037426026803	WITHOUT_CLASSIFICATION	1.0353106624152158E-4	IMPLEMENTATION	8.942213849682245E-5	DESIGN	2.512266968384546E-6	DOCUMENTATION	6.662546523828409E-7	DEFECT	1.2567096053146272E-7	TEST
//not really necessary, but good for consistency...	WITHOUT_CLASSIFICATION	0.9561324736704471	WITHOUT_CLASSIFICATION	0.04308174072872695	DESIGN	4.077384546861182E-4	DEFECT	3.5279164697851214E-4	IMPLEMENTATION	1.3333522260813347E-5	DOCUMENTATION	1.1921976900466265E-5	TEST
// we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.9999996799884513	WITHOUT_CLASSIFICATION	1.7654623290679013E-7	DESIGN	8.104196688780714E-8	DEFECT	4.5863684412488923E-8	IMPLEMENTATION	1.510959126015246E-8	DOCUMENTATION	1.4500733140406081E-9	TEST
//a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.9940017512544516	WITHOUT_CLASSIFICATION	0.005933634048045751	DESIGN	5.553333581816148E-5	DEFECT	6.817800186904543E-6	IMPLEMENTATION	1.707883562361176E-6	DOCUMENTATION	5.556779353662207E-7	TEST
// handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.9986044386673794	WITHOUT_CLASSIFICATION	0.001092004723913093	DESIGN	2.984708970686174E-4	IMPLEMENTATION	2.4034523175103328E-6	DOCUMENTATION	2.2572954193395242E-6	TEST	4.2496390204572033E-7	DEFECT
// Loaded entity instances, by EntityUniqueKey	WITHOUT_CLASSIFICATION	0.9999977571633901	WITHOUT_CLASSIFICATION	1.6062295905011976E-6	DEFECT	4.3653788474891256E-7	DESIGN	1.1118275184584351E-7	DOCUMENTATION	7.320399223835193E-8	IMPLEMENTATION	1.568239062342461E-8	TEST
// Identity map of EntityEntry instances, by the entity instance	WITHOUT_CLASSIFICATION	0.9999986351782175	WITHOUT_CLASSIFICATION	1.0033175213290839E-6	IMPLEMENTATION	2.815354748413092E-7	DEFECT	4.088190159211545E-8	DESIGN	3.40225591699855E-8	DOCUMENTATION	5.064325537693551E-9	TEST
// Entity proxies, by EntityKey	WITHOUT_CLASSIFICATION	0.99999722067994	WITHOUT_CLASSIFICATION	1.326179009167766E-6	DEFECT	1.125660331292047E-6	IMPLEMENTATION	1.1917347780142633E-7	TEST	1.108182490954849E-7	DESIGN	9.748899250452409E-8	DOCUMENTATION
// Snapshots of current database state for entities // that have *not* been loaded	WITHOUT_CLASSIFICATION	0.9999820108253956	WITHOUT_CLASSIFICATION	1.0664329674846846E-5	IMPLEMENTATION	5.532513056186482E-6	DEFECT	1.6457201865765498E-6	DESIGN	1.2348134104051564E-7	TEST	2.3130345761382726E-8	DOCUMENTATION
// Identity map of array holder ArrayHolder instances, by the array instance	WITHOUT_CLASSIFICATION	0.9999970593739511	WITHOUT_CLASSIFICATION	2.3462157642231124E-6	IMPLEMENTATION	5.459458057555487E-7	DEFECT	2.8025922290030524E-8	DESIGN	1.596440349377345E-8	DOCUMENTATION	4.474152968355921E-9	TEST
// Collection wrappers, by the CollectionKey //key=CollectionKey, value=PersistentCollection	WITHOUT_CLASSIFICATION	0.9999956628975636	WITHOUT_CLASSIFICATION	3.020592404544311E-6	DESIGN	1.2412750451108337E-6	DEFECT	3.261068130322588E-8	DOCUMENTATION	3.2130660085266336E-8	TEST	1.0493645373760837E-8	IMPLEMENTATION
// Set of EntityKeys of deleted objects	WITHOUT_CLASSIFICATION	0.9999931491966632	WITHOUT_CLASSIFICATION	5.414393166151467E-6	DESIGN	1.044405091064484E-6	DEFECT	1.8522471458927832E-7	TEST	1.1887974863194278E-7	IMPLEMENTATION	8.790061644424686E-8	DOCUMENTATION
// properties that we have tried to load, and not found in the database	WITHOUT_CLASSIFICATION	0.9999873872523142	WITHOUT_CLASSIFICATION	1.2474163714319253E-5	DEFECT	1.1894240119889462E-7	DESIGN	1.5930594317330357E-8	IMPLEMENTATION	2.4813077331096346E-9	TEST	1.2296682690237105E-9	DOCUMENTATION
// A list of collection wrappers that were instantiating during result set // processing, that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9999764915072391	WITHOUT_CLASSIFICATION	1.857609480896165E-5	DEFECT	4.092598726039912E-6	IMPLEMENTATION	7.951226420690911E-7	DESIGN	2.8658442070411132E-8	TEST	1.601814187968323E-8	DOCUMENTATION
// A container for collections we load up when the owning entity is not // yet loaded ... for now, this is purely transient!	WITHOUT_CLASSIFICATION	0.993668365012044	WITHOUT_CLASSIFICATION	0.005298651967137495	IMPLEMENTATION	7.153793816567978E-4	DEFECT	3.0359947121725916E-4	DESIGN	1.1832252038726742E-5	TEST	2.1719159056924455E-6	DOCUMENTATION
// Downgrade locks	WITHOUT_CLASSIFICATION	0.9999133137471607	WITHOUT_CLASSIFICATION	6.53219462117123E-5	IMPLEMENTATION	1.6698541655582524E-5	DESIGN	2.294576558696169E-6	DEFECT	1.7779583925761353E-6	DOCUMENTATION	5.932300208143026E-7	TEST
// any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.9999862478436934	WITHOUT_CLASSIFICATION	1.1084472402270496E-5	DESIGN	2.492852929014743E-6	DEFECT	7.024160267769584E-8	IMPLEMENTATION	6.080925891837653E-8	DOCUMENTATION	4.3780113656747206E-8	TEST
//unwrap the object	WITHOUT_CLASSIFICATION	0.9999885992833369	WITHOUT_CLASSIFICATION	9.439030139090773E-6	DESIGN	7.042927761712339E-7	IMPLEMENTATION	6.890411113079632E-7	DOCUMENTATION	4.670542524911483E-7	DEFECT	1.0129838394319989E-7	TEST
//initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.9999992180240809	WITHOUT_CLASSIFICATION	4.019021174009388E-7	DESIGN	1.649654952988732E-7	DOCUMENTATION	1.4509854288338143E-7	IMPLEMENTATION	4.841330773555743E-8	DEFECT	2.159645577392951E-8	TEST
//return the proxied object	WITHOUT_CLASSIFICATION	0.9996847475657274	WITHOUT_CLASSIFICATION	3.0508018668770593E-4	DESIGN	5.348956696060672E-6	DEFECT	3.5661589569051094E-6	IMPLEMENTATION	1.1136190139102191E-6	DOCUMENTATION	1.4351291788847773E-7	TEST
//overwrite old proxy	WITHOUT_CLASSIFICATION	0.9999962202869289	WITHOUT_CLASSIFICATION	3.0811775152949315E-6	DESIGN	3.210811603637879E-7	IMPLEMENTATION	2.5882603459398245E-7	DEFECT	6.873286287493994E-8	TEST	4.989549794132228E-8	DOCUMENTATION
// early exit...	WITHOUT_CLASSIFICATION	0.9999907675825798	WITHOUT_CLASSIFICATION	2.9783701784507106E-6	DESIGN	2.9205957632931293E-6	DEFECT	2.9029698873408204E-6	IMPLEMENTATION	3.2999499067059344E-7	DOCUMENTATION	1.0048660047153142E-7	TEST
// or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.9956052981667716	WITHOUT_CLASSIFICATION	0.00411786099372053	DESIGN	2.3016998499060426E-4	DEFECT	3.9767609982228337E-5	IMPLEMENTATION	5.63890089743027E-6	TEST	1.2643436377889222E-6	DOCUMENTATION
//treat it just like a new collection	WITHOUT_CLASSIFICATION	0.9980797324408831	WITHOUT_CLASSIFICATION	0.0017561955497609675	DESIGN	9.368160664812948E-5	IMPLEMENTATION	5.6541811179521496E-5	DEFECT	1.0441491620022399E-5	TEST	3.4070999082018167E-6	DOCUMENTATION
//do this work only at the very highest level of the load //don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.9904049979370447	WITHOUT_CLASSIFICATION	0.008610169034780126	DESIGN	9.469433104758587E-4	DEFECT	2.3850260263160335E-5	TEST	1.2454354868498774E-5	IMPLEMENTATION	1.5851025675797106E-6	DOCUMENTATION
//note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.9999992588321036	WITHOUT_CLASSIFICATION	6.21028118681258E-7	IMPLEMENTATION	1.0826853323739855E-7	DESIGN	4.435877584291518E-9	DEFECT	3.995023244459731E-9	DOCUMENTATION	3.440343770105002E-9	TEST
//it might be an unwrapped collection reference! //try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.9972755416931776	WITHOUT_CLASSIFICATION	0.002658375037946781	DESIGN	4.184841427648114E-5	IMPLEMENTATION	2.2850112224458882E-5	DEFECT	7.860420503377416E-7	DOCUMENTATION	5.987003244877512E-7	TEST
/*public boolean isNonExistant(EntityKey key) {	WITHOUT_CLASSIFICATION	0.9993979523479416	WITHOUT_CLASSIFICATION	5.746442122629732E-4	DESIGN	2.3075333029378944E-5	DEFECT	2.2055583015413713E-6	DOCUMENTATION	1.2779601755276204E-6	IMPLEMENTATION	8.445882891019413E-7	TEST
/*public boolean isNonExistant(EntityUniqueKey key) {	WITHOUT_CLASSIFICATION	0.9990649552071186	WITHOUT_CLASSIFICATION	8.998116080711913E-4	DESIGN	2.897415402737027E-5	DEFECT	2.604324238370098E-6	IMPLEMENTATION	2.508838584195486E-6	DOCUMENTATION	1.1458679604542832E-6	TEST
// iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.9984397710053374	WITHOUT_CLASSIFICATION	0.0014573765699475362	DESIGN	9.610183932150189E-5	IMPLEMENTATION	4.0668043244366105E-6	DOCUMENTATION	2.644391988589263E-6	TEST	3.9389080600411716E-8	DEFECT
// does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.9999995223976867	WITHOUT_CLASSIFICATION	2.1140406940441653E-7	DOCUMENTATION	2.1074546268922476E-7	DESIGN	3.9553250220280636E-8	TEST	1.1493063338673047E-8	DEFECT	4.406467581820579E-9	IMPLEMENTATION
//check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.9999876217191327	WITHOUT_CLASSIFICATION	9.59676029144694E-6	DESIGN	1.912925963148204E-6	IMPLEMENTATION	4.5080585566457575E-7	DOCUMENTATION	2.6432414264045857E-7	TEST	1.5346461447396688E-7	DEFECT
// otherwise, the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.9999936209973558	WITHOUT_CLASSIFICATION	6.176788816191725E-6	DEFECT	1.0508505972079602E-7	IMPLEMENTATION	7.995824150374472E-8	DESIGN	1.3142086540225716E-8	DOCUMENTATION	4.0284402341396285E-9	TEST
// adds remove as a sort-of alias for delete...	WITHOUT_CLASSIFICATION	0.9999982818798047	WITHOUT_CLASSIFICATION	8.937315269248709E-7	DESIGN	7.705254911917364E-7	IMPLEMENTATION	3.7493307034755435E-8	DEFECT	1.4273225532833158E-8	TEST	2.0966446544073003E-9	DOCUMENTATION
//bad cast	WITHOUT_CLASSIFICATION	0.9999646677668477	WITHOUT_CLASSIFICATION	3.353106625608006E-5	DESIGN	6.557866302552173E-7	IMPLEMENTATION	4.833779744625206E-7	TEST	4.3564437357254163E-7	DEFECT	2.2635791788990482E-7	DOCUMENTATION
//return lhsPersister.getSubclassPropertyColumnNames(property);	WITHOUT_CLASSIFICATION	0.9998562827839698	WITHOUT_CLASSIFICATION	1.4238395864269896E-4	DESIGN	1.1652448537432556E-6	DEFECT	1.0996616043103707E-7	TEST	4.633908133749415E-8	DOCUMENTATION	1.170729198085898E-8	IMPLEMENTATION
//property-refs for associations defined on a //component are not supported, so no need to slice	WITHOUT_CLASSIFICATION	0.9999617702346926	WITHOUT_CLASSIFICATION	3.776189993182202E-5	DESIGN	3.872014583319649E-7	TEST	6.853636815477194E-8	DOCUMENTATION	7.582680253220175E-9	DEFECT	4.544868958526055E-9	IMPLEMENTATION
//if there is no property-ref, assume the join //is to the subclass table (ie. the table of the //subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.999999984905477	WITHOUT_CLASSIFICATION	1.4342172965596176E-8	DESIGN	3.147526529774408E-10	TEST	2.3255273275325136E-10	DEFECT	1.9977596671766887E-10	DOCUMENTATION	5.268473841815712E-12	IMPLEMENTATION
//handle a property-ref	WITHOUT_CLASSIFICATION	0.9999371100568846	WITHOUT_CLASSIFICATION	5.559507865630632E-5	DESIGN	3.500395257690269E-6	IMPLEMENTATION	3.198658405593094E-6	DEFECT	3.114681505338018E-7	DOCUMENTATION	2.8434264528454047E-7	TEST
/*NativeSQLQueryReturn*/	WITHOUT_CLASSIFICATION	0.9989335900800853	WITHOUT_CLASSIFICATION	8.679744490272123E-4	DESIGN	1.0042453621975345E-4	IMPLEMENTATION	9.142284200966718E-5	DEFECT	4.897711268810519E-6	DOCUMENTATION	1.6903813893775032E-6	TEST
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.999975420753488	WITHOUT_CLASSIFICATION	2.2425554650204142E-5	DESIGN	9.063556910467162E-7	IMPLEMENTATION	7.075826635550072E-7	DEFECT	2.7033696179611913E-7	TEST	2.6941654533690513E-7	DOCUMENTATION
// why is all others non final ?	WITHOUT_CLASSIFICATION	0.9980975880403673	WITHOUT_CLASSIFICATION	0.0018728230807997055	DESIGN	2.1435022199565036E-5	IMPLEMENTATION	7.391234850403712E-6	DEFECT	5.251444332046311E-7	DOCUMENTATION	2.3747734991924933E-7	TEST
//this.forceCacheRefresh = forceCacheRefresh;	WITHOUT_CLASSIFICATION	0.9999915821230195	WITHOUT_CLASSIFICATION	7.024315655347244E-6	IMPLEMENTATION	4.80857927164851E-7	TEST	3.837275489894875E-7	DEFECT	2.794911400898663E-7	DOCUMENTATION	2.4948470888077886E-7	DESIGN
// HELLA IMPORTANT OPTIMIZATION!!!	WITHOUT_CLASSIFICATION	0.9997871515144199	WITHOUT_CLASSIFICATION	1.7379578348544435E-4	DESIGN	3.0398764531872126E-5	DEFECT	5.0563007962924035E-6	IMPLEMENTATION	2.3327643017746497E-6	DOCUMENTATION	1.2648724647921755E-6	TEST
/*return that.type.equals(type) && 	WITHOUT_CLASSIFICATION	0.9998898044823145	WITHOUT_CLASSIFICATION	7.993841330514612E-5	DESIGN	2.705213403293724E-5	IMPLEMENTATION	2.9074000108465876E-6	DEFECT	1.5954858576352926E-7	DOCUMENTATION	1.3802175087422364E-7	TEST
//Must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.9998817779450745	WITHOUT_CLASSIFICATION	1.14934136509464E-4	DESIGN	1.554022544759478E-6	DEFECT	8.064815015369852E-7	DOCUMENTATION	6.629357445449797E-7	TEST	2.6447862517574037E-7	IMPLEMENTATION
//take a snapshot	WITHOUT_CLASSIFICATION	0.9998385146567578	WITHOUT_CLASSIFICATION	6.725124206471628E-5	DESIGN	5.639378052215825E-5	DEFECT	2.6438699860631426E-5	IMPLEMENTATION	6.871586230201792E-6	DOCUMENTATION	4.530034564587747E-6	TEST
// do a check	WITHOUT_CLASSIFICATION	0.9997786430860575	WITHOUT_CLASSIFICATION	2.018011789641922E-4	DESIGN	1.83360686064822E-5	IMPLEMENTATION	6.535418800783338E-7	DOCUMENTATION	4.0444129010479953E-7	DEFECT	1.6168320159830762E-7	TEST
// the owning entity may have been deleted and its identifier unset due to // identifier-rollback; in which case, try to look up its identifier from // the persistence context	WITHOUT_CLASSIFICATION	0.9999998288634478	WITHOUT_CLASSIFICATION	1.1126031652371103E-7	DEFECT	3.3189506985342406E-8	IMPLEMENTATION	2.5438227772787243E-8	DESIGN	1.1187456113631258E-9	DOCUMENTATION	1.2975541846473357E-10	TEST
// do the work	WITHOUT_CLASSIFICATION	0.9998937097627458	WITHOUT_CLASSIFICATION	7.538693719511627E-5	DESIGN	2.0694008309352096E-5	IMPLEMENTATION	7.216074383274862E-6	DEFECT	2.4358042764809558E-6	DOCUMENTATION	5.574130900869186E-7	TEST
// We've been here before	WITHOUT_CLASSIFICATION	0.9999629136332916	WITHOUT_CLASSIFICATION	1.9876501943699574E-5	IMPLEMENTATION	1.0709293235671959E-5	DESIGN	3.829635665793232E-6	DEFECT	2.0800174116926266E-6	TEST	5.909184515434698E-7	DOCUMENTATION
// it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.99999940907112	WITHOUT_CLASSIFICATION	4.727931853948285E-7	DESIGN	5.030667410202497E-8	TEST	4.414308033791365E-8	DEFECT	1.3036203792788107E-8	IMPLEMENTATION	1.0649736338894987E-8	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9998937097627458	WITHOUT_CLASSIFICATION	7.538693719511627E-5	DESIGN	2.0694008309352096E-5	IMPLEMENTATION	7.216074383274862E-6	DEFECT	2.4358042764809558E-6	DOCUMENTATION	5.574130900869186E-7	TEST
// if either its role changed,	WITHOUT_CLASSIFICATION	0.9999996074827324	WITHOUT_CLASSIFICATION	3.7577558759882093E-7	DESIGN	8.302859840219619E-9	TEST	5.463111171032045E-9	IMPLEMENTATION	2.593517734656262E-9	DEFECT	3.8219124009131737E-10	DOCUMENTATION
// or its key changed	WITHOUT_CLASSIFICATION	0.9999993137848133	WITHOUT_CLASSIFICATION	3.454146444201939E-7	IMPLEMENTATION	2.620356451961682E-7	DESIGN	5.4950723790577633E-8	DEFECT	1.262401549456178E-8	TEST	1.1190157862265354E-8	DOCUMENTATION
// we will need to create new entries	WITHOUT_CLASSIFICATION	0.9999453566092827	WITHOUT_CLASSIFICATION	4.4813435166940046E-5	IMPLEMENTATION	8.042720805714658E-6	DESIGN	9.252501649963029E-7	TEST	7.6239855908864E-7	DOCUMENTATION	9.958602055109727E-8	DEFECT
// we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.9990081766872949	WITHOUT_CLASSIFICATION	9.466207653487377E-4	IMPLEMENTATION	3.448284978011712E-5	DESIGN	5.5166810170589265E-6	DEFECT	2.9446217209826583E-6	DOCUMENTATION	2.2583948382626983E-6	TEST
// force initialize!	WITHOUT_CLASSIFICATION	0.9999998058091306	WITHOUT_CLASSIFICATION	8.801049237356021E-8	IMPLEMENTATION	4.25417429227255E-8	DESIGN	3.3076194224204235E-8	DEFECT	2.0987231877080034E-8	DOCUMENTATION	9.575207930013137E-9	TEST
// else if it's elements changed	WITHOUT_CLASSIFICATION	0.9999983490415598	WITHOUT_CLASSIFICATION	1.036726679929343E-6	IMPLEMENTATION	5.257419229293462E-7	DESIGN	6.803123001097E-8	DEFECT	1.4291151423048844E-8	TEST	6.167456019155523E-9	DOCUMENTATION
//ATTRIBUTES MAINTAINED BETWEEN FLUSH CYCLES	WITHOUT_CLASSIFICATION	0.9985483855901491	WITHOUT_CLASSIFICATION	0.0011977978166522701	DESIGN	2.0388338549397287E-4	IMPLEMENTATION	2.19283082959319E-5	DEFECT	1.7731749043754055E-5	DOCUMENTATION	1.0273150364836064E-5	TEST
// session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.9999985858682694	WITHOUT_CLASSIFICATION	9.406529821922157E-7	IMPLEMENTATION	2.4151765676771056E-7	DESIGN	2.0242048468498532E-7	DEFECT	1.9936195430558563E-8	DOCUMENTATION	9.604411566330457E-9	TEST
// allow the CollectionSnapshot to be serialized	WITHOUT_CLASSIFICATION	0.9989028086260946	WITHOUT_CLASSIFICATION	7.270895740418083E-4	DESIGN	3.652384529026026E-4	IMPLEMENTATION	4.2837751315612585E-6	DEFECT	3.47928054878274E-7	DOCUMENTATION	2.3164377456985175E-7	TEST
// ATTRIBUTES USED ONLY DURING FLUSH CYCLE	WITHOUT_CLASSIFICATION	0.999711864931057	WITHOUT_CLASSIFICATION	2.0553750420562974E-4	DESIGN	6.853918449246566E-5	IMPLEMENTATION	8.521909457338337E-6	DEFECT	3.8859428437641914E-6	DOCUMENTATION	1.6505279438582826E-6	TEST
// "current" means the reference that was found during flush() 	WITHOUT_CLASSIFICATION	0.9999939928345403	WITHOUT_CLASSIFICATION	5.772260055892962E-6	DEFECT	1.7801725146159588E-7	DESIGN	3.535794513896489E-8	DOCUMENTATION	2.0666885478866218E-8	IMPLEMENTATION	8.633217973484351E-10	TEST
// "loaded" means the reference that is consistent  // with the current database state	WITHOUT_CLASSIFICATION	0.9999664213797426	WITHOUT_CLASSIFICATION	2.9422885367646473E-5	DEFECT	3.384871901035391E-6	IMPLEMENTATION	6.811886060300907E-7	DESIGN	5.769321498592245E-8	TEST	3.1981168025065605E-8	DOCUMENTATION
// during flush, we navigate the object graph to // collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.9984942325218122	WITHOUT_CLASSIFICATION	0.0014114770159112206	DESIGN	9.248644992894596E-5	IMPLEMENTATION	9.670367428685189E-7	TEST	5.651363162460487E-7	DOCUMENTATION	2.7183928850335715E-7	DEFECT
// if we instantiate a collection during the flush() process, // we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.9999989734709749	WITHOUT_CLASSIFICATION	9.125507548838035E-7	DESIGN	6.539387622215604E-8	TEST	4.7633144953364216E-8	DEFECT	8.625300287031039E-10	DOCUMENTATION	8.871894057588512E-11	IMPLEMENTATION
// new collections that get found + wrapped // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9998796617260585	WITHOUT_CLASSIFICATION	1.1848343964788622E-4	DESIGN	1.781584361492245E-6	IMPLEMENTATION	5.758410585608999E-8	DEFECT	1.3728009595793807E-8	TEST	1.9378167017299577E-9	DOCUMENTATION
//a newly wrapped collection is NOT dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.9930023079134295	WITHOUT_CLASSIFICATION	0.0069920381280649405	DESIGN	3.5984552862415185E-6	DEFECT	1.7676897103827007E-6	IMPLEMENTATION	1.8051216449310813E-7	TEST	1.0730134445211627E-7	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9876933581268218	WITHOUT_CLASSIFICATION	0.0074464444189059125	DESIGN	0.00434898522154632	IMPLEMENTATION	3.0457833397332367E-4	DEFECT	1.5721021629847001E-4	DOCUMENTATION	4.942368245414784E-5	TEST
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9876933581268218	WITHOUT_CLASSIFICATION	0.0074464444189059125	DESIGN	0.00434898522154632	IMPLEMENTATION	3.0457833397332367E-4	DEFECT	1.5721021629847001E-4	DOCUMENTATION	4.942368245414784E-5	TEST
// detached collections that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.999998750237204	WITHOUT_CLASSIFICATION	7.696999995866593E-7	DESIGN	3.741403292877533E-7	IMPLEMENTATION	1.0430312891323146E-7	DEFECT	1.2687508771440057E-9	TEST	3.505876384679822E-10	DOCUMENTATION
//optimization	WITHOUT_CLASSIFICATION	0.9997657786560906	WITHOUT_CLASSIFICATION	2.010497600641267E-4	DEFECT	1.1314692281462462E-5	DESIGN	1.0602062058907293E-5	DOCUMENTATION	9.133554716035008E-6	IMPLEMENTATION	2.1212747888776137E-6	TEST
//optimization //optimization	WITHOUT_CLASSIFICATION	0.9999768466851352	WITHOUT_CLASSIFICATION	2.162314308290247E-5	DEFECT	8.561235480341952E-7	DOCUMENTATION	2.9089529867798755E-7	IMPLEMENTATION	1.9479782276502953E-7	TEST	1.883551124009238E-7	DESIGN
//re-snapshot	WITHOUT_CLASSIFICATION	0.9995045471231057	WITHOUT_CLASSIFICATION	4.525189547351029E-4	DESIGN	2.4953674932553053E-5	IMPLEMENTATION	8.670981112229238E-6	DEFECT	5.033840520122024E-6	DOCUMENTATION	4.275425594409054E-6	TEST
// for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.9999996111221219	WITHOUT_CLASSIFICATION	1.5016645001232384E-7	IMPLEMENTATION	1.3183825953017545E-7	DESIGN	7.880412747526622E-8	DOCUMENTATION	2.129091182107231E-8	DEFECT	6.778129151966049E-9	TEST
//NOTE: this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.5292630908058686	WITHOUT_CLASSIFICATION	0.23953268950284834	DESIGN	0.2304580202987483	DEFECT	6.039608349806223E-4	TEST	8.733037661061514E-5	DOCUMENTATION	5.4908180943549786E-5	IMPLEMENTATION
//memory optimization	WITHOUT_CLASSIFICATION	0.9999670774614374	WITHOUT_CLASSIFICATION	2.5103815294741868E-5	DEFECT	3.734193251094502E-6	IMPLEMENTATION	1.8888968871052234E-6	DOCUMENTATION	1.7731933096803299E-6	DESIGN	4.2243981994379364E-7	TEST
// use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999929539789711	WITHOUT_CLASSIFICATION	6.598086906089254E-6	DESIGN	4.1595058367664704E-7	DEFECT	2.4073355597880082E-8	DOCUMENTATION	7.495300967109914E-9	IMPLEMENTATION	4.148825550743695E-10	TEST
// copied from Session:	WITHOUT_CLASSIFICATION	0.9999980305924571	WITHOUT_CLASSIFICATION	1.556367357180626E-6	DESIGN	3.1184326000967914E-7	DEFECT	4.980823167519868E-8	IMPLEMENTATION	3.513120580540321E-8	TEST	1.625748828790796E-8	DOCUMENTATION
// this should not happen since the DTD prevents it	WITHOUT_CLASSIFICATION	0.9999046218320629	WITHOUT_CLASSIFICATION	6.119240989012696E-5	DESIGN	2.5916100044861014E-5	DEFECT	5.3651663015445434E-6	IMPLEMENTATION	2.2990632283218684E-6	TEST	6.054284723400207E-7	DOCUMENTATION
// JoinProcessor needs to know if the where clause fragment came from a dynamic filter or not so it // can put the where clause fragment in the right place in the SQL AST.   'hasFilterCondition' keeps track // of that fact.	WITHOUT_CLASSIFICATION	0.9995384441378788	WITHOUT_CLASSIFICATION	4.6151439995511617E-4	DESIGN	2.055953061678674E-8	DOCUMENTATION	1.8954532867897443E-8	DEFECT	1.9265538474460357E-9	TEST	2.1548825092482385E-11	IMPLEMENTATION
// the current join represents the join between a many-to-many association table // and its "target" table.  Here we need to apply any additional filters // defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.9999686403373107	WITHOUT_CLASSIFICATION	3.0563746734308596E-5	DESIGN	4.521455196749537E-7	DOCUMENTATION	3.4077219757129887E-7	IMPLEMENTATION	1.8322071355686784E-9	TEST	1.1660305593452902E-9	DEFECT
//check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.9994239854194461	WITHOUT_CLASSIFICATION	5.739353772363374E-4	DESIGN	1.1390618096029586E-6	IMPLEMENTATION	6.319732576530335E-7	DOCUMENTATION	2.537540821454389E-7	DEFECT	5.441416810077058E-8	TEST
//values is not null and is checkable, we'll look deeper	WITHOUT_CLASSIFICATION	0.9974533700123727	WITHOUT_CLASSIFICATION	0.0024086755808757137	DESIGN	1.0486168386250685E-4	DEFECT	3.1950240586163314E-5	IMPLEMENTATION	8.515853130153695E-7	TEST	2.9089698988793487E-7	DOCUMENTATION
//for non null args, check for components and elements containing components	WITHOUT_CLASSIFICATION	0.9999796124519493	WITHOUT_CLASSIFICATION	2.0264155515103787E-5	DESIGN	1.03107980416666E-7	IMPLEMENTATION	1.1306413519623206E-8	DOCUMENTATION	7.564704183155524E-9	DEFECT	1.413437281722243E-9	TEST
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9991117575242732	WITHOUT_CLASSIFICATION	8.394386461106783E-4	DESIGN	4.488443091427671E-5	IMPLEMENTATION	2.048225941383744E-6	DOCUMENTATION	1.6124253895534876E-6	TEST	2.5874737096891437E-7	DEFECT
//persistent collections may have components	WITHOUT_CLASSIFICATION	0.9999689596471477	WITHOUT_CLASSIFICATION	2.990897072475246E-5	DESIGN	9.43727462538373E-7	IMPLEMENTATION	1.240275521276769E-7	TEST	5.022097846607324E-8	DEFECT	1.3406134602185594E-8	DOCUMENTATION
//check for all components values in the collection	WITHOUT_CLASSIFICATION	0.9999763608868898	WITHOUT_CLASSIFICATION	2.342262168546882E-5	DESIGN	1.3889909139684086E-7	DEFECT	3.837355167171551E-8	IMPLEMENTATION	3.4315928741157605E-8	DOCUMENTATION	4.90285283126507E-9	TEST
/* will check current level if some of them are not null	WITHOUT_CLASSIFICATION	0.9997571304903851	WITHOUT_CLASSIFICATION	2.0003740160846176E-4	IMPLEMENTATION	2.2491928363561615E-5	DOCUMENTATION	1.103304902889227E-5	DESIGN	8.04385551609596E-6	DEFECT	1.263275097941394E-6	TEST
//do the test	WITHOUT_CLASSIFICATION	0.9993559544993169	WITHOUT_CLASSIFICATION	6.274570812592785E-4	TEST	6.205413910846338E-6	IMPLEMENTATION	5.3018725694999E-6	DESIGN	4.6668199082801084E-6	DOCUMENTATION	4.143130351823814E-7	DEFECT
// if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.9999999790167095	WITHOUT_CLASSIFICATION	1.6251710932449618E-8	DESIGN	1.957946772297387E-9	DEFECT	1.777324536128937E-9	IMPLEMENTATION	7.197935335927168E-10	TEST	2.7651484588607125E-10	DOCUMENTATION
//unwrap it	WITHOUT_CLASSIFICATION	0.9999904155567112	WITHOUT_CLASSIFICATION	4.085745126991521E-6	DESIGN	2.8923945045978837E-6	DEFECT	1.8332933800654943E-6	IMPLEMENTATION	4.095317932388732E-7	DOCUMENTATION	3.634784838144337E-7	TEST
// See if the entity is already bound to this session, if not look at the // entity identifier and assume that the entity is persistent if the // id is not "unsaved" (that is, we rely on foreign keys to keep // database integrity)	WITHOUT_CLASSIFICATION	0.999999738760784	WITHOUT_CLASSIFICATION	1.8516720523269166E-7	DESIGN	7.127419501736537E-8	DEFECT	3.785572522854149E-9	DOCUMENTATION	6.278730978090434E-10	IMPLEMENTATION	3.8437016343592574E-10	TEST
// an unfetched association can only point to // an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.9999987977239607	WITHOUT_CLASSIFICATION	1.0798029701266073E-6	IMPLEMENTATION	5.3319689945602476E-8	DEFECT	3.248293285652138E-8	DOCUMENTATION	2.2084969151547703E-8	DESIGN	1.4585477282258608E-8	TEST
// let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999946402140525	WITHOUT_CLASSIFICATION	2.9057840551084207E-6	IMPLEMENTATION	2.367107586255255E-6	DESIGN	6.133442817758033E-8	DOCUMENTATION	1.9381997675111894E-8	DEFECT	6.177880446815092E-9	TEST
// let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.999964296461356	WITHOUT_CLASSIFICATION	2.2026503357689686E-5	IMPLEMENTATION	1.3526281187133606E-5	DESIGN	1.032757439398033E-7	DOCUMENTATION	3.751793207054336E-8	DEFECT	9.960423262462516E-9	TEST
// we use the assumed value, if there is one, to avoid hitting // the database	WITHOUT_CLASSIFICATION	0.9999999394414903	WITHOUT_CLASSIFICATION	4.633184887358913E-8	DEFECT	1.0117764263355405E-8	DESIGN	3.729819969389485E-9	TEST	2.9296736847546264E-10	IMPLEMENTATION	8.610927932705046E-11	DOCUMENTATION
// hit the database, after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.98210827952245	WITHOUT_CLASSIFICATION	0.017677900419787458	DESIGN	1.104306795316168E-4	DEFECT	1.011753177215363E-4	IMPLEMENTATION	1.3303674515128776E-6	TEST	8.836930579090873E-7	DOCUMENTATION
// context-entity-identifier returns null explicitly if the entity // is not associated with the persistence context; so make some // deeper checks...	WITHOUT_CLASSIFICATION	0.999984442375699	WITHOUT_CLASSIFICATION	1.0639431702724757E-5	IMPLEMENTATION	2.6026161517290414E-6	DESIGN	2.0442522535263903E-6	TEST	1.8213726850937505E-7	DOCUMENTATION	8.918692452223568E-8	DEFECT
//int count = 0;	WITHOUT_CLASSIFICATION	0.9999605164251912	WITHOUT_CLASSIFICATION	3.0015785211607157E-5	DEFECT	6.745418839131373E-6	DESIGN	1.5355047731456003E-6	DOCUMENTATION	7.795794398383297E-7	IMPLEMENTATION	4.0728654502300457E-7	TEST
//the first key found after the given key	WITHOUT_CLASSIFICATION	0.999983285956012	WITHOUT_CLASSIFICATION	1.3309278776454635E-5	IMPLEMENTATION	2.1160486550310846E-6	DESIGN	9.188139046246474E-7	DOCUMENTATION	3.2334912803642454E-7	TEST	4.655352371078088E-8	DEFECT
//checkForEnd = false;	WITHOUT_CLASSIFICATION	0.9999677023708866	WITHOUT_CLASSIFICATION	2.0104925303820096E-5	DESIGN	1.0818193014849243E-5	IMPLEMENTATION	5.986805490508354E-7	DEFECT	5.603403912859231E-7	DOCUMENTATION	2.1548985438033395E-7	TEST
//count++;	WITHOUT_CLASSIFICATION	0.9990521715820687	WITHOUT_CLASSIFICATION	6.108641067326545E-4	DESIGN	3.0616630660215536E-4	DEFECT	1.5819409828705364E-5	DOCUMENTATION	1.026098503257764E-5	IMPLEMENTATION	4.717609735093802E-6	TEST
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9997141722408799	WITHOUT_CLASSIFICATION	2.4190390050686663E-4	DESIGN	2.5286816320175137E-5	IMPLEMENTATION	8.27970555846348E-6	TEST	7.175598340824886E-6	DOCUMENTATION	3.181738393732581E-6	DEFECT
//we ran out of keys to try	WITHOUT_CLASSIFICATION	0.9998615550739933	WITHOUT_CLASSIFICATION	1.1770523681108054E-4	DESIGN	1.0566615494351627E-5	DEFECT	6.449613270907732E-6	IMPLEMENTATION	2.8136512804468443E-6	DOCUMENTATION	9.09809149816618E-7	TEST
//first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.9999995152601029	WITHOUT_CLASSIFICATION	2.981816952505127E-7	IMPLEMENTATION	1.0461727465896466E-7	DEFECT	4.273024455984013E-8	DESIGN	2.8252347782964495E-8	DOCUMENTATION	1.0958334843552122E-8	TEST
//the first id found after the given id	WITHOUT_CLASSIFICATION	0.9999233318854845	WITHOUT_CLASSIFICATION	6.289282024090114E-5	IMPLEMENTATION	7.821917347494311E-6	DESIGN	3.233668592725817E-6	TEST	2.4180917710507645E-6	DOCUMENTATION	3.0161656320135805E-7	DEFECT
//we ran out of ids to try	WITHOUT_CLASSIFICATION	0.9996970550154025	WITHOUT_CLASSIFICATION	2.391274194355876E-4	DESIGN	3.2756942280577136E-5	DEFECT	2.7091478471820597E-5	IMPLEMENTATION	2.8803121118942874E-6	DOCUMENTATION	1.0888322978227273E-6	TEST
// look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.9999998719055638	WITHOUT_CLASSIFICATION	9.698914466908665E-8	IMPLEMENTATION	1.0648732179907224E-8	DESIGN	9.12076294170076E-9	TEST	8.784493026059395E-9	DEFECT	2.5513034055493057E-9	DOCUMENTATION
// ignore this row of results! Note the early exit	WITHOUT_CLASSIFICATION	0.9999594140492186	WITHOUT_CLASSIFICATION	4.005883250276543E-5	DEFECT	3.6956286228627563E-7	DESIGN	6.54820870195092E-8	TEST	4.637609184296424E-8	IMPLEMENTATION	4.569723754449445E-8	DOCUMENTATION
// initialize this collection	WITHOUT_CLASSIFICATION	0.9999741395614866	WITHOUT_CLASSIFICATION	2.478362151855846E-5	DESIGN	7.155896108965804E-7	TEST	1.692301190060439E-7	DOCUMENTATION	1.3803746295980142E-7	IMPLEMENTATION	5.39598017373947E-8	DEFECT
// create one	WITHOUT_CLASSIFICATION	0.9999987295101226	WITHOUT_CLASSIFICATION	9.008960496678056E-7	DESIGN	1.6338677295608915E-7	IMPLEMENTATION	1.4133770046210622E-7	DEFECT	4.008332643289844E-8	TEST	2.478602788911372E-8	DOCUMENTATION
// warning: can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.9999125953874183	WITHOUT_CLASSIFICATION	8.579724878553194E-5	DEFECT	1.2765998868546003E-6	DESIGN	1.8417978922709435E-7	IMPLEMENTATION	1.4323406696551374E-7	DOCUMENTATION	3.350053059514466E-9	TEST
// there were no queued additions // and the role has a cache	WITHOUT_CLASSIFICATION	0.9999463350983497	WITHOUT_CLASSIFICATION	5.347068089836616E-5	DESIGN	1.7222842395689026E-7	IMPLEMENTATION	1.314212000076723E-8	DEFECT	4.8721489527612216E-9	DOCUMENTATION	3.97805888211458E-9	TEST
// and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.9999979251417953	WITHOUT_CLASSIFICATION	1.6724513111474686E-6	DESIGN	3.545713235664258E-7	DEFECT	3.14379450118249E-8	TEST	8.655715236162866E-9	DOCUMENTATION	7.741909808317177E-9	IMPLEMENTATION
// some filters affecting the collection are enabled on the session, so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.9998392563749868	WITHOUT_CLASSIFICATION	1.6066547783849302E-4	DESIGN	4.06121315887705E-8	TEST	2.2900379792045416E-8	DEFECT	1.0015348923624392E-8	IMPLEMENTATION	4.619314301269938E-9	DOCUMENTATION
// cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999221051382596	WITHOUT_CLASSIFICATION	6.56045810340454E-5	DESIGN	8.140160215379703E-6	IMPLEMENTATION	3.016600957665847E-6	DEFECT	7.716712493947843E-7	DOCUMENTATION	3.6184828404260994E-7	TEST
// loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999972572682453	WITHOUT_CLASSIFICATION	2.43780147809614E-6	DEFECT	1.5794291343985024E-7	IMPLEMENTATION	1.0474131069354516E-7	DESIGN	3.68250278006575E-8	TEST	5.421024686765366E-9	DOCUMENTATION
// Collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999890366132175	WITHOUT_CLASSIFICATION	5.65753419259279E-6	DEFECT	4.570207198905475E-6	DESIGN	3.3960275618327997E-7	IMPLEMENTATION	2.5357460598272613E-7	TEST	1.4246802877669295E-7	DOCUMENTATION
// simple cache of param metadata based on query string.  Ideally, the // original "user-supplied query" string should be used to retreive this // metadata (i.e., not the para-list-expanded query string) to avoid // unnecessary cache entries. // Used solely for caching param metadata for native-sql queries, see // getSQLParameterMetadata() for a discussion as to why...	WITHOUT_CLASSIFICATION	0.7216452026077609	WITHOUT_CLASSIFICATION	0.27830626679395465	DESIGN	4.844343663966899E-5	DEFECT	7.802968987672773E-8	IMPLEMENTATION	6.66010453229275E-9	DOCUMENTATION	2.471850247473311E-9	TEST
// the cache of the actual plans...	WITHOUT_CLASSIFICATION	0.9999983281193622	WITHOUT_CLASSIFICATION	1.4090282263176821E-6	IMPLEMENTATION	2.1410532132520954E-7	DESIGN	3.187839778478379E-8	DOCUMENTATION	1.4614740581542279E-8	DEFECT	2.2539518448379453E-9	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9978396653539129	WITHOUT_CLASSIFICATION	0.002047636254167967	DESIGN	8.364911112739331E-5	IMPLEMENTATION	1.746060139679287E-5	DEFECT	7.776673285281719E-6	DOCUMENTATION	3.812006109517023E-6	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9978396653539129	WITHOUT_CLASSIFICATION	0.002047636254167967	DESIGN	8.364911112739331E-5	IMPLEMENTATION	1.746060139679287E-5	DEFECT	7.776673285281719E-6	DOCUMENTATION	3.812006109517023E-6	TEST
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999995726462252	WITHOUT_CLASSIFICATION	3.4925609413414187E-7	DESIGN	2.765643433796462E-8	DOCUMENTATION	2.238157693007229E-8	IMPLEMENTATION	2.152742026445587E-8	DEFECT	6.532249160404253E-9	TEST
// for native-sql queries, the param metadata is determined outside // any relation to a query plan, because query plan creation and/or // retreival for a native-sql query depends on all of the return // types having been set, which might not be the case up-front when // param metadata would be most useful	WITHOUT_CLASSIFICATION	0.9985296308805744	WITHOUT_CLASSIFICATION	0.0012747650447170978	DESIGN	1.9559300017596938E-4	DEFECT	7.182127713537047E-9	IMPLEMENTATION	2.3656596253279963E-9	DOCUMENTATION	1.5267450371052376E-9	TEST
// don't care...	WITHOUT_CLASSIFICATION	0.9999733875899568	WITHOUT_CLASSIFICATION	2.2696251376144192E-5	DESIGN	2.909122319990312E-6	DEFECT	8.316182447906258E-7	IMPLEMENTATION	9.167668779385754E-8	DOCUMENTATION	8.37414144686852E-8	TEST
// Recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998436967551191	WITHOUT_CLASSIFICATION	9.6265630718648E-5	DESIGN	3.2963574950051235E-5	IMPLEMENTATION	2.2846413053153754E-5	DEFECT	3.165997079284895E-6	DOCUMENTATION	1.0616290798061984E-6	TEST
// don't care...	WITHOUT_CLASSIFICATION	0.9999733875899568	WITHOUT_CLASSIFICATION	2.2696251376144192E-5	DESIGN	2.909122319990312E-6	DEFECT	8.316182447906258E-7	IMPLEMENTATION	9.167668779385754E-8	DOCUMENTATION	8.37414144686852E-8	TEST
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9988240014164343	WITHOUT_CLASSIFICATION	7.228047729870515E-4	DESIGN	2.566305778392459E-4	DEFECT	1.8402590865810258E-4	IMPLEMENTATION	1.2113906374290645E-5	TEST	4.23417706997101E-7	DOCUMENTATION
// break the outer loop !!!	WITHOUT_CLASSIFICATION	0.9999989811062118	WITHOUT_CLASSIFICATION	6.291357258153991E-7	DEFECT	2.574706002786694E-7	DESIGN	1.0063137064226431E-7	IMPLEMENTATION	1.8065549696829544E-8	TEST	1.3590541849455225E-8	DOCUMENTATION
// named parameter	WITHOUT_CLASSIFICATION	0.9996857234627945	WITHOUT_CLASSIFICATION	2.991912058381127E-4	DESIGN	1.3184017538812773E-5	IMPLEMENTATION	1.0229927184733062E-6	TEST	6.830703308062306E-7	DEFECT	1.9525077938305027E-7	DOCUMENTATION
// could be either an ordinal or JPA-positional parameter	WITHOUT_CLASSIFICATION	0.999925584222816	WITHOUT_CLASSIFICATION	7.260270512458053E-5	DESIGN	1.5974439086914872E-6	DEFECT	1.6554465702351378E-7	IMPLEMENTATION	2.6725502139365584E-8	TEST	2.3357991580964348E-8	DOCUMENTATION
// a peek ahead showed this as an JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999833533704169	WITHOUT_CLASSIFICATION	1.6362155564299212E-5	DESIGN	1.1069267806372944E-7	DEFECT	6.863201582697096E-8	DOCUMENTATION	6.566868582012364E-8	TEST	3.948063918456891E-8	IMPLEMENTATION
// make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.9999911524139193	WITHOUT_CLASSIFICATION	7.636833519060321E-6	DESIGN	6.017310959471175E-7	TEST	5.61761410804401E-7	DEFECT	4.555676822973678E-8	DOCUMENTATION	1.7032867340540853E-9	IMPLEMENTATION
// pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9999972111615663	WITHOUT_CLASSIFICATION	2.7772986978550847E-6	DESIGN	8.06189459436912E-9	IMPLEMENTATION	1.5015498950596324E-9	DOCUMENTATION	1.0988950359214431E-9	TEST	8.773962951752288E-10	DEFECT
// perform the actual work	WITHOUT_CLASSIFICATION	0.999998822404335	WITHOUT_CLASSIFICATION	5.620875296845102E-7	DESIGN	3.4527936432534123E-7	IMPLEMENTATION	2.0850622498896729E-7	DEFECT	5.747357380840165E-8	DOCUMENTATION	4.24897207793046E-9	TEST
// if everything went ok, commit the transaction and close the obtained // connection handle...	WITHOUT_CLASSIFICATION	0.999998288209039	WITHOUT_CLASSIFICATION	1.6269907237493266E-6	IMPLEMENTATION	7.076512763860083E-8	DESIGN	7.2837942246471035E-9	TEST	6.615075586572652E-9	DOCUMENTATION	1.3623989110370876E-10	DEFECT
// at some point the processing went bad, so we need to: //      1) make sure the connection handle gets released //      2) try to cleanup the JTA context as much as possible	WITHOUT_CLASSIFICATION	0.9996176807828414	WITHOUT_CLASSIFICATION	1.596728244601322E-4	IMPLEMENTATION	1.0724048659941642E-4	DESIGN	8.467927480563369E-5	DOCUMENTATION	2.1823857539845995E-5	TEST	8.902773753553891E-6	DEFECT
// finally handle the exception	WITHOUT_CLASSIFICATION	0.9999959910712076	WITHOUT_CLASSIFICATION	2.3210810712717326E-6	DESIGN	1.464537749104996E-6	DEFECT	1.4350078021882655E-7	IMPLEMENTATION	7.367633698968251E-8	DOCUMENTATION	6.132854771504785E-9	TEST
// a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.9974444897267916	WITHOUT_CLASSIFICATION	0.002555306530970304	DESIGN	1.0056489627930695E-7	IMPLEMENTATION	8.974552335675654E-8	DEFECT	8.536582240219907E-9	DOCUMENTATION	4.895236072342304E-9	TEST
//saveOrUpdateCopy() is deprecated!	WITHOUT_CLASSIFICATION	0.9999648409845836	WITHOUT_CLASSIFICATION	2.3521582070730046E-5	DESIGN	1.109390833059068E-5	DEFECT	1.9291944409734757E-7	TEST	1.8531639201854693E-7	DOCUMENTATION	1.6528917888470765E-7	IMPLEMENTATION
// collectionPersister should not be null, but we don't want to throw // an exception if it is null	WITHOUT_CLASSIFICATION	0.9999709803245826	WITHOUT_CLASSIFICATION	2.1739406671232943E-5	DESIGN	6.693335104006698E-6	DEFECT	5.863896427934484E-7	TEST	3.8313767375639063E-10	DOCUMENTATION	1.6086160140390634E-10	IMPLEMENTATION
// otherwise a null or brand new collection // this will also (inefficiently) handle arrays, which // have no snapshot, so we can't do any better //processArrayOrNewCollection(collection, type);	WITHOUT_CLASSIFICATION	0.5553611197268226	DESIGN	0.44463665642425904	WITHOUT_CLASSIFICATION	2.055464014088918E-6	DOCUMENTATION	8.734602513403674E-8	IMPLEMENTATION	4.754762278751079E-8	DEFECT	3.349125630546603E-8	TEST
// a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.9995926980700509	WITHOUT_CLASSIFICATION	4.0718764418651976E-4	DESIGN	6.7106609999227E-8	DEFECT	3.318768084898082E-8	IMPLEMENTATION	1.347464914032551E-8	DOCUMENTATION	5.168225376711443E-10	TEST
//do nothing	WITHOUT_CLASSIFICATION	0.9999970487101577	WITHOUT_CLASSIFICATION	1.2280163294842106E-6	DESIGN	7.505970548208867E-7	DEFECT	6.403648033441418E-7	DOCUMENTATION	2.240365026478926E-7	TEST	1.082751520528961E-7	IMPLEMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9999970487101577	WITHOUT_CLASSIFICATION	1.2280163294842106E-6	DESIGN	7.505970548208867E-7	DEFECT	6.403648033441418E-7	DOCUMENTATION	2.240365026478926E-7	TEST	1.082751520528961E-7	IMPLEMENTATION
//Force a substitution!	WITHOUT_CLASSIFICATION	0.9999271925150032	WITHOUT_CLASSIFICATION	5.980600053001498E-5	DESIGN	4.837940519231614E-6	IMPLEMENTATION	4.596643208525355E-6	DEFECT	3.010099999694703E-6	DOCUMENTATION	5.568007393440398E-7	TEST
// The user requested a "greater" (i.e. more restrictive) form of // pessimistic lock	WITHOUT_CLASSIFICATION	0.9999939458841449	WITHOUT_CLASSIFICATION	5.030118305554648E-6	DEFECT	7.754662877331364E-7	DESIGN	1.234746950707999E-7	IMPLEMENTATION	1.1973768813504547E-7	TEST	5.318878441527423E-9	DOCUMENTATION
// the database now holds a lock + the object is flushed from the cache, // so release the soft lock	WITHOUT_CLASSIFICATION	0.9999965521727183	WITHOUT_CLASSIFICATION	3.293884947468252E-6	DEFECT	1.4866923584660345E-7	IMPLEMENTATION	2.61398892981318E-9	DESIGN	1.40558297642959E-9	DOCUMENTATION	1.2535265033114272E-9	TEST
// now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.999954166582383	WITHOUT_CLASSIFICATION	2.2787927674842052E-5	DESIGN	2.2014784100075463E-5	IMPLEMENTATION	9.828969623542907E-7	DEFECT	3.0726297107926105E-8	DOCUMENTATION	1.7082582678326504E-8	TEST
// Search for collections by reachability, updating their role. // We don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.9999506148435893	WITHOUT_CLASSIFICATION	4.088130345144506E-5	DESIGN	8.460320891489235E-6	DEFECT	3.920139502992616E-8	TEST	2.4173787733028063E-9	DOCUMENTATION	1.9132941388115747E-9	IMPLEMENTATION
// this is a situation where the entity id is assigned by a post-insert generator // and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.9999989185187718	WITHOUT_CLASSIFICATION	4.861668340201087E-7	DESIGN	3.523726316595819E-7	DEFECT	2.0111456929355418E-7	IMPLEMENTATION	3.836748810919749E-8	TEST	3.4597051431367778E-9	DOCUMENTATION
// NOTE: we need to do the wrap here even if its not "dirty", // because collections need wrapping but changes to _them_ // don't dirty the container. Also, for versioned data, we // need to wrap before calling searchForDirtyCollections	WITHOUT_CLASSIFICATION	0.9083550110143335	WITHOUT_CLASSIFICATION	0.0611858781199535	IMPLEMENTATION	0.030444494836834115	DESIGN	6.927839267913627E-6	TEST	6.918827208656729E-6	DEFECT	7.693624022679081E-7	DOCUMENTATION
//grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.9998127540347784	WITHOUT_CLASSIFICATION	1.5766525366881932E-4	DESIGN	1.5232112768868554E-5	IMPLEMENTATION	1.0880030607509993E-5	DEFECT	2.8253920380112937E-6	TEST	6.431761384072629E-7	DOCUMENTATION
// grab its current state	WITHOUT_CLASSIFICATION	0.9999998305589021	WITHOUT_CLASSIFICATION	7.92513081437815E-8	DESIGN	5.41129990123376E-8	IMPLEMENTATION	1.6241141075745635E-8	DEFECT	1.06062238964676E-8	TEST	9.229425589162818E-9	DOCUMENTATION
// schedule the update // note that we intentionally do _not_ pass in currentPersistentState!	WITHOUT_CLASSIFICATION	0.9999951448876971	WITHOUT_CLASSIFICATION	4.8029636605469126E-6	IMPLEMENTATION	4.514117443245192E-8	DEFECT	5.0787689163502905E-9	DOCUMENTATION	1.752527494851918E-9	DESIGN	1.761716323074256E-10	TEST
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999965697216174	WITHOUT_CLASSIFICATION	3.039162227315243E-6	DESIGN	3.5544772169592387E-7	DEFECT	2.2295428274312285E-8	DOCUMENTATION	1.0491116953769589E-8	TEST	2.8818884534717608E-9	IMPLEMENTATION
// give the Interceptor a chance to process property values, if the properties // were modified by the Interceptor, we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9999340954396327	WITHOUT_CLASSIFICATION	6.578599392980723E-5	DESIGN	7.222277466120878E-8	DEFECT	3.649699328946877E-8	DOCUMENTATION	8.743023510545206E-9	TEST	1.1036459257876312E-9	IMPLEMENTATION
// compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.9999996253975845	WITHOUT_CLASSIFICATION	3.055472636699241E-7	DESIGN	5.572012546839207E-8	IMPLEMENTATION	1.2478096757130723E-8	DEFECT	4.880928344956883E-10	DOCUMENTATION	3.6883675092820986E-10	TEST
// if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.9999949239948004	WITHOUT_CLASSIFICATION	3.84097463485426E-6	DESIGN	1.0824349662753437E-6	DEFECT	1.1496503118810123E-7	TEST	3.50286494050201E-8	IMPLEMENTATION	2.6019178552147143E-9	DOCUMENTATION
// increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.9998390816564773	WITHOUT_CLASSIFICATION	1.3344634474433015E-4	DESIGN	1.603118424304811E-5	IMPLEMENTATION	5.884791681522325E-6	DEFECT	5.2770654134087125E-6	DOCUMENTATION	2.789574403824948E-7	TEST
// check nullability but do not perform command execute // we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.9999999184412196	WITHOUT_CLASSIFICATION	7.252001730050115E-8	DESIGN	7.883813746972366E-9	DEFECT	5.020792729613677E-10	IMPLEMENTATION	3.366460244757391E-10	DOCUMENTATION	3.1622419019725463E-10	TEST
//give the Interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.9996244621131662	WITHOUT_CLASSIFICATION	3.7368794606837E-4	DESIGN	1.3560357195391E-6	DEFECT	2.3644270293601723E-7	IMPLEMENTATION	2.238088598826133E-7	DOCUMENTATION	3.365348296150548E-8	TEST
//now we might need to recalculate the dirtyProperties array	WITHOUT_CLASSIFICATION	0.9615758478501205	WITHOUT_CLASSIFICATION	0.036950043470456474	DESIGN	0.001427683913904507	IMPLEMENTATION	2.2392229135815148E-5	DOCUMENTATION	1.4604569526959264E-5	TEST	9.427966855814706E-6	DEFECT
//use the current version	WITHOUT_CLASSIFICATION	0.9999890385903707	WITHOUT_CLASSIFICATION	6.757285703383749E-6	DESIGN	2.9561769462301352E-6	IMPLEMENTATION	1.0218441302380564E-6	DOCUMENTATION	2.1209267268700354E-7	DEFECT	1.4010176798659203E-8	TEST
// Interceptor returned null, so do the dirtycheck ourself, if possible	WITHOUT_CLASSIFICATION	0.9999995029347708	WITHOUT_CLASSIFICATION	4.040385925754681E-7	DESIGN	9.190398187559319E-8	IMPLEMENTATION	7.098433045796033E-10	DEFECT	3.1222357753074826E-10	DOCUMENTATION	1.005878171299312E-10	TEST
// object loaded by update()	WITHOUT_CLASSIFICATION	0.999997147757117	WITHOUT_CLASSIFICATION	1.46462683099489E-6	DEFECT	1.3272159960239975E-6	IMPLEMENTATION	2.4188386568111713E-8	DOCUMENTATION	2.112001340149955E-8	DESIGN	1.5091655963386223E-8	TEST
// dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.9994535857404278	WITHOUT_CLASSIFICATION	5.455970855503529E-4	IMPLEMENTATION	4.53513848996526E-7	DESIGN	2.4025789376227495E-7	DOCUMENTATION	9.671831267435451E-8	DEFECT	2.6683966446834968E-8	TEST
// dirty check against the database snapshot, if possible/necessary	WITHOUT_CLASSIFICATION	0.993239887269611	WITHOUT_CLASSIFICATION	0.006753698887461901	IMPLEMENTATION	2.8218287031910807E-6	DESIGN	2.589875168993093E-6	DEFECT	7.132168341049051E-7	DOCUMENTATION	2.889222209219176E-7	TEST
// the Interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.9999909205854359	WITHOUT_CLASSIFICATION	7.5521637878278395E-6	IMPLEMENTATION	1.4585757672359433E-6	DESIGN	3.655097903562564E-8	DOCUMENTATION	2.370107037175436E-8	DEFECT	8.422959489972631E-9	TEST
//even process null collections	WITHOUT_CLASSIFICATION	0.999981904222494	WITHOUT_CLASSIFICATION	1.4173480324927071E-5	DESIGN	2.388211298522697E-6	IMPLEMENTATION	1.2820389914915494E-6	DEFECT	1.6560755622485137E-7	DOCUMENTATION	8.643933498042783E-8	TEST
// get the id from the object	WITHOUT_CLASSIFICATION	0.9999929671642929	WITHOUT_CLASSIFICATION	6.918945744475874E-6	DESIGN	5.7563368454233246E-8	DEFECT	3.2034676669930294E-8	DOCUMENTATION	1.9917366975110705E-8	TEST	4.374550496340656E-9	IMPLEMENTATION
//always do an INSERT, and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.9997842255228014	WITHOUT_CLASSIFICATION	2.1419383795689213E-4	DESIGN	1.4803041656980695E-6	DEFECT	7.079602394467548E-8	TEST	2.927815946911216E-8	DOCUMENTATION	2.608924494422601E-10	IMPLEMENTATION
//what is the version on the database?	WITHOUT_CLASSIFICATION	0.9799760671206657	WITHOUT_CLASSIFICATION	0.019048043404506748	DESIGN	7.165593586134138E-4	DEFECT	2.561152503742314E-4	IMPLEMENTATION	1.735083432942478E-6	DOCUMENTATION	1.4797824069801096E-6	TEST
/// HHH-2378	WITHOUT_CLASSIFICATION	0.9999741379684641	WITHOUT_CLASSIFICATION	1.9756517304346415E-5	DESIGN	3.848360355217516E-6	DEFECT	1.191545574092623E-6	IMPLEMENTATION	5.903518448366453E-7	DOCUMENTATION	4.752564574733099E-7	TEST
//will result in a SQL UPDATE:	WITHOUT_CLASSIFICATION	0.999917520871664	WITHOUT_CLASSIFICATION	6.537261289649617E-5	DESIGN	1.629392885482168E-5	DEFECT	3.7366415773696416E-7	DOCUMENTATION	2.5519131038960015E-7	IMPLEMENTATION	1.8373111652364087E-7	TEST
//else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.9999276010128193	WITHOUT_CLASSIFICATION	6.138659110512359E-5	DESIGN	9.696223984597605E-6	DOCUMENTATION	7.707956523472037E-7	DEFECT	4.729594021398312E-7	TEST	7.241703644877733E-8	IMPLEMENTATION
// no existing row - do an insert	WITHOUT_CLASSIFICATION	0.9998087428444248	WITHOUT_CLASSIFICATION	1.8245669186995245E-4	DESIGN	4.679660249397088E-6	DEFECT	1.6320168510433224E-6	TEST	1.3892801243214906E-6	IMPLEMENTATION	1.0995064804536164E-6	DOCUMENTATION
//refresh() does not pass an entityName	WITHOUT_CLASSIFICATION	0.9997413745866719	WITHOUT_CLASSIFICATION	1.4537573461893296E-4	DESIGN	7.965131213457447E-5	IMPLEMENTATION	2.3261397979456017E-5	TEST	8.852834692692749E-6	DEFECT	1.4841339024797828E-6	DOCUMENTATION
//do not return a proxy! //(this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.9999898665361046	WITHOUT_CLASSIFICATION	9.06769095749062E-6	DESIGN	7.302951670021541E-7	DEFECT	2.5324440250035183E-7	TEST	4.929711548669926E-8	IMPLEMENTATION	3.29362528636138E-8	DOCUMENTATION
//return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.9987384444872492	WITHOUT_CLASSIFICATION	0.0011225000513834594	DESIGN	6.68440465452609E-5	DEFECT	6.636770571136301E-5	IMPLEMENTATION	3.6643135096822164E-6	TEST	2.179395601023554E-6	DOCUMENTATION
// return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.9999994013255454	WITHOUT_CLASSIFICATION	5.548213288968505E-7	IMPLEMENTATION	2.6640797280095775E-8	DESIGN	1.0872773626212306E-8	DEFECT	3.311764309966945E-9	TEST	3.0277903710267133E-9	DOCUMENTATION
// return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.999999611870503	WITHOUT_CLASSIFICATION	1.870176183898593E-7	DESIGN	1.7213334729757941E-7	IMPLEMENTATION	2.2984037922013033E-8	DEFECT	4.608416987398007E-9	DOCUMENTATION	1.3860763664228574E-9	TEST
// this object was already loaded	WITHOUT_CLASSIFICATION	0.999986765954636	WITHOUT_CLASSIFICATION	7.670004185039745E-6	DESIGN	4.3360968631944746E-6	DEFECT	8.108914032109605E-7	IMPLEMENTATION	2.8253754063694015E-7	TEST	1.345153718811216E-7	DOCUMENTATION
// Entity was found in second-level cache...	WITHOUT_CLASSIFICATION	0.9999776067546614	WITHOUT_CLASSIFICATION	2.103639665601208E-5	DESIGN	1.1504302026150333E-6	DEFECT	1.3205795813564895E-7	DOCUMENTATION	6.290428551793303E-8	IMPLEMENTATION	1.1456236427806543E-8	TEST
// make it circular-reference safe	WITHOUT_CLASSIFICATION	0.9999965306336055	WITHOUT_CLASSIFICATION	2.6895126424349397E-6	DEFECT	5.733350308569164E-7	IMPLEMENTATION	8.713603853462438E-8	DESIGN	6.696934468334764E-8	DOCUMENTATION	5.2413338065124124E-8	TEST
// intializes result by side-effect	WITHOUT_CLASSIFICATION	0.9999999184314837	WITHOUT_CLASSIFICATION	6.017676417161473E-8	DEFECT	2.0872921623966962E-8	DESIGN	3.291513697538768E-10	DOCUMENTATION	1.7512332788128306E-10	TEST	1.4555666955181376E-11	IMPLEMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Pre-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999909880101482	WITHOUT_CLASSIFICATION	6.581577687823585E-6	DEFECT	1.0472989245981129E-6	DESIGN	7.047867250772626E-7	IMPLEMENTATION	3.936382286337638E-7	DOCUMENTATION	2.84688285628537E-7	TEST
//some statistics	WITHOUT_CLASSIFICATION	0.9999587533843195	WITHOUT_CLASSIFICATION	2.3870368539711827E-5	DESIGN	1.0922411745938483E-5	IMPLEMENTATION	4.6431661651984436E-6	DOCUMENTATION	1.0701273993078858E-6	TEST	7.405418303779315E-7	DEFECT
//safe from concurrent modification because of how entryList() is implemented on IdentityMap	WITHOUT_CLASSIFICATION	0.9991607700239344	WITHOUT_CLASSIFICATION	6.113016002021318E-4	IMPLEMENTATION	1.819763922733907E-4	DEFECT	4.184100863582814E-5	DESIGN	4.0417787277371885E-6	DOCUMENTATION	6.919622662412554E-8	TEST
// Initialize dirty flags for arrays + collections with composite elements // and reset reached, doupdate, etc.	WITHOUT_CLASSIFICATION	0.9999982341158642	WITHOUT_CLASSIFICATION	1.7424923679741853E-6	IMPLEMENTATION	2.3312424483991873E-8	DEFECT	3.764615447366107E-11	TEST	2.6241370137437394E-11	DOCUMENTATION	1.5455879335289567E-11	DESIGN
// Among other things, updateReachables() will recursively load all // collections that are moving roles. This might cause entities to // be loaded.	WITHOUT_CLASSIFICATION	0.99948441255609	WITHOUT_CLASSIFICATION	4.8821243564522055E-4	DESIGN	2.2234534301923815E-5	DEFECT	5.118298556186157E-6	IMPLEMENTATION	1.7643091718921226E-8	TEST	4.532314850051403E-9	DOCUMENTATION
// So this needs to be safe from concurrent modification problems. // It is safe because of how IdentityMap implements entrySet()	WITHOUT_CLASSIFICATION	0.844863820829717	WITHOUT_CLASSIFICATION	0.10271746363041996	DESIGN	0.037006523849331584	DEFECT	0.014363402547060918	IMPLEMENTATION	0.0010466641969475144	DOCUMENTATION	2.124946523141473E-6	TEST
// Update the status of the object and if necessary, schedule an update	WITHOUT_CLASSIFICATION	0.9999999406729946	WITHOUT_CLASSIFICATION	3.456337280409405E-8	DESIGN	1.5224780234602277E-8	DEFECT	7.291487651772182E-9	IMPLEMENTATION	1.2092857385097482E-9	DOCUMENTATION	1.0380790339184873E-9	TEST
// Schedule updates to collections:	WITHOUT_CLASSIFICATION	0.9999856580808176	WITHOUT_CLASSIFICATION	1.1562967944123217E-5	IMPLEMENTATION	1.5436790579696571E-6	DEFECT	1.0868966080058783E-6	DESIGN	1.0228575244595554E-7	TEST	4.608981971237561E-8	DOCUMENTATION
// we need to lock the collection caches before // executing entity inserts/updates in order to // account for bidi associations	WITHOUT_CLASSIFICATION	0.9999959598228264	WITHOUT_CLASSIFICATION	2.2065552070154075E-6	TEST	1.090202893222767E-6	DESIGN	3.459463244042664E-7	DEFECT	2.860740317675686E-7	IMPLEMENTATION	1.11398717294149E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Post-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999897914583472	WITHOUT_CLASSIFICATION	6.491914270913685E-6	DEFECT	1.6820117739438052E-6	IMPLEMENTATION	9.12741044579974E-7	DOCUMENTATION	6.548376604591223E-7	DESIGN	4.670369029610452E-7	TEST
//the database has changed now, so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.9999958068077749	WITHOUT_CLASSIFICATION	4.048353625013932E-6	IMPLEMENTATION	9.884148384204446E-8	DESIGN	2.8039195362400452E-8	DEFECT	9.381124907457781E-9	TEST	8.576795970249464E-9	DOCUMENTATION
//if the collection is dereferenced, remove from the session cache //iter.remove(); //does not work, since the entrySet is not backed by the set	WITHOUT_CLASSIFICATION	0.9999794155635289	WITHOUT_CLASSIFICATION	1.6602588085203803E-5	DEFECT	3.96795119534703E-6	DESIGN	1.3693900084234468E-8	TEST	1.9930342574405765E-10	DOCUMENTATION	3.987048678728142E-12	IMPLEMENTATION
//otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9976539025940903	WITHOUT_CLASSIFICATION	0.002293961383104556	DESIGN	4.952819628195258E-5	IMPLEMENTATION	1.5989026092823308E-6	TEST	7.677421936600714E-7	DEFECT	2.411817204695745E-7	DOCUMENTATION
//get a snapshot	WITHOUT_CLASSIFICATION	0.9999360877721444	WITHOUT_CLASSIFICATION	5.429913094789241E-5	DESIGN	5.05494165638309E-6	IMPLEMENTATION	2.7062325777507553E-6	DEFECT	9.465992802354241E-7	TEST	9.053233933862783E-7	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999959144353561	WITHOUT_CLASSIFICATION	3.988820634337444E-6	DESIGN	3.478949095782569E-8	DOCUMENTATION	2.7551850515850257E-8	DEFECT	2.1441347622442454E-8	IMPLEMENTATION	1.2961320532478735E-8	TEST
/* package-private */	WITHOUT_CLASSIFICATION	0.9999959144353561	WITHOUT_CLASSIFICATION	3.988820634337444E-6	DESIGN	3.478949095782569E-8	DOCUMENTATION	2.7551850515850257E-8	DEFECT	2.1441347622442454E-8	IMPLEMENTATION	1.2961320532478735E-8	TEST
// key is an entity involved with the operation performed by the listener; // value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.9999998420649102	WITHOUT_CLASSIFICATION	9.702172794135354E-8	DEFECT	5.922202910015977E-8	TEST	6.145638611925573E-10	DESIGN	5.463900816772475E-10	IMPLEMENTATION	5.30378887749857E-10	DOCUMENTATION
// EARLY EXIT!!!	WITHOUT_CLASSIFICATION	0.9999766973268495	WITHOUT_CLASSIFICATION	1.3957680703040672E-5	DEFECT	6.40539339482595E-6	IMPLEMENTATION	1.7665777304198878E-6	DESIGN	6.812933134722186E-7	DOCUMENTATION	4.917280088413747E-7	TEST
//ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.999977424626004	WITHOUT_CLASSIFICATION	1.9976854636023822E-5	DESIGN	9.822580550030649E-7	DEFECT	9.656872977345994E-7	IMPLEMENTATION	6.351193191878875E-7	DOCUMENTATION	1.545468792099001E-8	TEST
// before any callbacks, etc, so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.9999989502130302	WITHOUT_CLASSIFICATION	1.0338192636404753E-6	DESIGN	8.552169292482308E-9	IMPLEMENTATION	5.1406001087362096E-9	DEFECT	1.398348989916773E-9	DOCUMENTATION	8.765877506617047E-10	TEST
// Ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.9999999323821482	WITHOUT_CLASSIFICATION	3.932032168842361E-8	IMPLEMENTATION	2.150528988787927E-8	DEFECT	6.072968390696242E-9	DESIGN	4.374585888876672E-10	DOCUMENTATION	2.818131678694424E-10	TEST
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// cascade-delete to collections BEFORE the collection owner is deleted	WITHOUT_CLASSIFICATION	0.999914586736793	WITHOUT_CLASSIFICATION	8.408598899106909E-5	IMPLEMENTATION	9.60451283792199E-7	DESIGN	3.1660805369653256E-7	DEFECT	4.384934148289392E-8	TEST	6.3655370049237324E-9	DOCUMENTATION
// cascade-delete to many-to-one AFTER the parent was deleted	WITHOUT_CLASSIFICATION	0.9999199495260448	WITHOUT_CLASSIFICATION	6.363893836449707E-5	IMPLEMENTATION	1.3788856941892667E-5	DESIGN	2.3680515180354783E-6	DEFECT	2.2281486055861542E-7	DOCUMENTATION	3.181227008847553E-8	TEST
// if it is an initialized proxy, let cascade // handle it later on	WITHOUT_CLASSIFICATION	0.9999884445479438	WITHOUT_CLASSIFICATION	1.0273846954922035E-5	DESIGN	6.047087352256278E-7	IMPLEMENTATION	5.862641319692475E-7	TEST	8.719216370517133E-8	DEFECT	3.440070422738586E-9	DOCUMENTATION
//assign the requested id to the proxy, *before* //reassociating the proxy	WITHOUT_CLASSIFICATION	0.9996420332828914	WITHOUT_CLASSIFICATION	1.9601036723493893E-4	DESIGN	1.0033614656638825E-4	DEFECT	4.521202567761731E-5	TEST	1.5533612773478716E-5	DOCUMENTATION	8.745648562135603E-7	IMPLEMENTATION
// an uninitialized proxy, noop, don't even need to // return an id, since it is never a save()	WITHOUT_CLASSIFICATION	0.9999997901677709	WITHOUT_CLASSIFICATION	1.726283568919878E-7	DESIGN	2.348626079952602E-8	DEFECT	1.0149490859014623E-8	IMPLEMENTATION	2.0583283726812748E-9	TEST	1.5097922708820247E-9	DOCUMENTATION
//initialize properties of the event:	WITHOUT_CLASSIFICATION	0.9999950490034053	WITHOUT_CLASSIFICATION	2.6077121237489983E-6	DEFECT	9.919421338871872E-7	DESIGN	8.927382656257038E-7	TEST	2.687433224710556E-7	IMPLEMENTATION	1.8986074895672744E-7	DOCUMENTATION
//return the id in the event object	WITHOUT_CLASSIFICATION	0.9996913496272852	WITHOUT_CLASSIFICATION	2.9702487887104463E-4	DESIGN	8.620245021414413E-6	DEFECT	2.4888621246179514E-6	DOCUMENTATION	3.20254112050769E-7	IMPLEMENTATION	1.961325855698212E-7	TEST
//TRANSIENT or DELETED	WITHOUT_CLASSIFICATION	0.9999847865731375	WITHOUT_CLASSIFICATION	1.2587209185748193E-5	DESIGN	8.310085272631384E-7	DEFECT	7.640824540870227E-7	IMPLEMENTATION	6.159098955711822E-7	DOCUMENTATION	4.152167998486334E-7	TEST
// use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.9999980475749263	WITHOUT_CLASSIFICATION	1.4875159566280792E-6	DESIGN	2.9201122082358915E-7	IMPLEMENTATION	1.620595413992916E-7	DOCUMENTATION	7.327815277800888E-9	DEFECT	3.5105395920414948E-9	TEST
// assume this is a newly instantiated transient object // which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.7158718196160803	WITHOUT_CLASSIFICATION	0.2841005426290767	DESIGN	1.8883205339575854E-5	DEFECT	4.477208810737468E-6	TEST	3.141450606883871E-6	DOCUMENTATION	1.1358900860509584E-6	IMPLEMENTATION
// this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.9999194379617119	WITHOUT_CLASSIFICATION	4.335359761179828E-5	DEFECT	3.1995557332330075E-5	DESIGN	4.2507385379829014E-6	IMPLEMENTATION	7.805646978634302E-7	TEST	1.8158010811354006E-7	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999997351167526	WITHOUT_CLASSIFICATION	2.2555562860540818E-7	IMPLEMENTATION	3.821280787582412E-8	DEFECT	7.028253997711304E-10	DESIGN	3.284506542902438E-10	DOCUMENTATION	8.353493138787219E-11	TEST
//cachedState,	WITHOUT_CLASSIFICATION	0.9998717978770556	WITHOUT_CLASSIFICATION	8.310403678279119E-5	DESIGN	3.445440594712215E-5	IMPLEMENTATION	4.790992502531371E-6	DEFECT	3.7775730689009417E-6	DOCUMENTATION	2.0751146430865533E-6	TEST
//assume true, since we don't really know, and it doesn't matter	WITHOUT_CLASSIFICATION	0.9999282003731993	WITHOUT_CLASSIFICATION	4.9954675194569576E-5	DEFECT	1.92531062789973E-5	DESIGN	1.7962277443866844E-6	DOCUMENTATION	6.697923759846765E-7	TEST	1.258252066878356E-7	IMPLEMENTATION
//a "detached" collection!	WITHOUT_CLASSIFICATION	0.9983944455452137	WITHOUT_CLASSIFICATION	0.0014761038166723735	DESIGN	7.837113800246164E-5	IMPLEMENTATION	4.427906756243165E-5	DEFECT	4.4252912064823966E-6	DOCUMENTATION	2.3751413424998115E-6	TEST
// if the collection belonged to a different entity, // clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.9999997366488785	WITHOUT_CLASSIFICATION	2.5325510035242917E-7	DESIGN	5.858557350066217E-9	DEFECT	2.6139588120939236E-9	TEST	1.0366703161133129E-9	DOCUMENTATION	5.868345393231279E-10	IMPLEMENTATION
//log.debug( "calling onLoad()" );	WITHOUT_CLASSIFICATION	0.9999933708959652	WITHOUT_CLASSIFICATION	3.9115686329769615E-6	DESIGN	1.9968898502662548E-6	DEFECT	5.408078104258982E-7	IMPLEMENTATION	1.4720545034076892E-7	DOCUMENTATION	3.263229095424319E-8	TEST
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999436305875675	WITHOUT_CLASSIFICATION	2.110339497928084E-5	DEFECT	1.568933342052672E-5	IMPLEMENTATION	1.4725918444870232E-5	DESIGN	2.9826470555039145E-6	DOCUMENTATION	1.8681185323399315E-6	TEST
// note: performExecutions() clears all collectionXxxxtion  // collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.9791817387860737	WITHOUT_CLASSIFICATION	0.011474820334472561	IMPLEMENTATION	0.006923455239501764	DESIGN	0.0024076686697954474	DEFECT	1.0548268508306655E-5	DOCUMENTATION	1.768701648191484E-6	TEST
// if no array holder we found an unwrappered array (this can't occur, // because we now always call wrap() before getting to here) // return (ah==null) ? true : searchForDirtyCollections(ah, type);	WITHOUT_CLASSIFICATION	0.978514433535512	WITHOUT_CLASSIFICATION	0.01962633182325911	DESIGN	0.0018292819752389912	DEFECT	2.9443915563037768E-5	IMPLEMENTATION	3.544184453086877E-7	DOCUMENTATION	1.5433198143317447E-7	TEST
// if not wrappered yet, its dirty (this can't occur, because // we now always call wrap() before getting to here) // return ( ! (obj instanceof PersistentCollection) ) ? //true : searchForDirtyCollections( (PersistentCollection) obj, type );	WITHOUT_CLASSIFICATION	0.9815071328760713	DESIGN	0.017096533320075328	DEFECT	0.0013684044089174096	WITHOUT_CLASSIFICATION	2.7292773495465295E-5	IMPLEMENTATION	4.376572524334367E-7	DOCUMENTATION	1.9896418800293542E-7	TEST
//we need to check even if it was not initialized, because of delayed adds!	WITHOUT_CLASSIFICATION	0.9704169035152899	WITHOUT_CLASSIFICATION	0.028975474705051407	IMPLEMENTATION	4.126711652051745E-4	DOCUMENTATION	1.2583961594050312E-4	DESIGN	5.1586973893522234E-5	TEST	1.7524024619571813E-5	DEFECT
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9993616607644588	WITHOUT_CLASSIFICATION	2.2017519860292452E-4	DEFECT	2.138252266508122E-4	DESIGN	1.7615030478961577E-4	IMPLEMENTATION	1.495274744361376E-5	DOCUMENTATION	1.3235758054292526E-5	TEST
// find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.999958568443163	WITHOUT_CLASSIFICATION	2.669524806183212E-5	DESIGN	1.4304793555889034E-5	IMPLEMENTATION	2.1160017345683794E-7	DEFECT	1.4265485282480563E-7	DOCUMENTATION	7.726019297868732E-8	TEST
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999436305875675	WITHOUT_CLASSIFICATION	2.110339497928084E-5	DEFECT	1.568933342052672E-5	IMPLEMENTATION	1.4725918444870232E-5	DESIGN	2.9826470555039145E-6	DOCUMENTATION	1.8681185323399315E-6	TEST
// Check the persistence context for an entry relating to this // entity to be merged...	WITHOUT_CLASSIFICATION	0.9999662943554971	WITHOUT_CLASSIFICATION	3.310564992362697E-5	DESIGN	4.7117189957769384E-7	IMPLEMENTATION	8.060426590193362E-8	TEST	4.6493192898349757E-8	DOCUMENTATION	1.7252209541544001E-9	DEFECT
// we have specialized case of a detached entity from the // perspective of the merge operation.  Specifically, we // have an incoming entity instance which has a corresponding // entry in the current persistence context, but registered // under a different entity instance	WITHOUT_CLASSIFICATION	0.9999998290817851	WITHOUT_CLASSIFICATION	9.384029194775285E-8	DESIGN	6.438535369993514E-8	DEFECT	1.267924038365819E-8	DOCUMENTATION	7.289305599464326E-12	IMPLEMENTATION	6.039613453378914E-12	TEST
//DELETED	WITHOUT_CLASSIFICATION	0.9996416696089442	WITHOUT_CLASSIFICATION	3.232377761794399E-4	DESIGN	1.3777898463082352E-5	DEFECT	8.905923717790551E-6	IMPLEMENTATION	6.503668458699186E-6	TEST	5.905124236759151E-6	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9999862577768349	WITHOUT_CLASSIFICATION	6.714550526204628E-6	DESIGN	5.149196705621274E-6	IMPLEMENTATION	1.4055429851138316E-6	DEFECT	2.745119742430384E-7	DOCUMENTATION	1.984209737203297E-7	TEST
// cascade first, so that all unsaved objects get their // copy created before we actually copy //cascadeOnMerge(event, persister, entity, copyCache, Cascades.CASCADE_BEFORE_MERGE);	WITHOUT_CLASSIFICATION	0.9999929652380511	WITHOUT_CLASSIFICATION	6.584337763193872E-6	IMPLEMENTATION	3.5108689218644456E-7	DESIGN	7.145711264264334E-8	DEFECT	2.031684912894961E-8	DOCUMENTATION	7.563331562778753E-9	TEST
//this bit is only *really* absolutely necessary for handling //requestedId, but is also good if we merge multiple object //graphs, since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.5598496825109791	DESIGN	0.43983654259739385	WITHOUT_CLASSIFICATION	2.759448004372843E-4	IMPLEMENTATION	3.7159825916443046E-5	TEST	6.293160816991641E-7	DOCUMENTATION	4.094919157197544E-8	DEFECT
// continue...; we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.9320064901517782	WITHOUT_CLASSIFICATION	0.0677793018539798	DESIGN	2.0509225708404847E-4	DEFECT	6.8349009661245984E-6	IMPLEMENTATION	2.1115093166329466E-6	TEST	1.6932687512291302E-7	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999753314873548	WITHOUT_CLASSIFICATION	2.1592756703888168E-5	DESIGN	2.6038956829427417E-6	IMPLEMENTATION	3.353871616398662E-7	DEFECT	6.949624528456328E-8	DOCUMENTATION	6.69768512879229E-8	TEST
// check that entity id = requestedId	WITHOUT_CLASSIFICATION	0.998714179192901	WITHOUT_CLASSIFICATION	0.0012848952841452341	IMPLEMENTATION	5.160874996457035E-7	TEST	1.6955426027841647E-7	DOCUMENTATION	1.5864695950176264E-7	DEFECT	8.123423436013501E-8	DESIGN
//before cascade!	WITHOUT_CLASSIFICATION	0.9999862577768349	WITHOUT_CLASSIFICATION	6.714550526204628E-6	DESIGN	5.149196705621274E-6	IMPLEMENTATION	1.4055429851138316E-6	DEFECT	2.745119742430384E-7	DOCUMENTATION	1.984209737203297E-7	TEST
// we got here because we assumed that an instance // with an assigned id was detached, when it was // really persistent	WITHOUT_CLASSIFICATION	0.9999975469857779	WITHOUT_CLASSIFICATION	2.2406804318770597E-6	DESIGN	1.7510953760910576E-7	DEFECT	2.1316980716611253E-8	DOCUMENTATION	1.4811061099941152E-8	TEST	1.0962107106458849E-9	IMPLEMENTATION
// cascade first, so that all unsaved objects get their  // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999677433045354	WITHOUT_CLASSIFICATION	2.170259355100412E-5	DESIGN	9.879067268990125E-6	IMPLEMENTATION	4.288566998765113E-7	DEFECT	1.4976357286971178E-7	DOCUMENTATION	9.641437184719612E-8	TEST
//copyValues works by reflection, so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.9974289178763794	WITHOUT_CLASSIFICATION	0.001787577152148809	DEFECT	7.486480217790741E-4	DESIGN	2.4676426963269606E-5	DOCUMENTATION	9.697767656292271E-6	IMPLEMENTATION	4.827550732724867E-7	TEST
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999383184512969	WITHOUT_CLASSIFICATION	2.725592619822628E-5	IMPLEMENTATION	2.08216441254198E-5	DESIGN	9.65855634305174E-6	DEFECT	2.3499216286859394E-6	DOCUMENTATION	1.5955004076093615E-6	TEST
//source.getBatcher().executeBatch(); //found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.9995217694160211	WITHOUT_CLASSIFICATION	4.770407312395247E-4	DESIGN	9.88613975350646E-7	IMPLEMENTATION	1.2209766436734864E-7	DEFECT	5.952501982327895E-8	DOCUMENTATION	1.9616079819942584E-8	TEST
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999965697216174	WITHOUT_CLASSIFICATION	3.039162227315243E-6	DESIGN	3.5544772169592387E-7	DEFECT	2.2295428274312285E-8	DOCUMENTATION	1.0491116953769589E-8	TEST	2.8818884534717608E-9	IMPLEMENTATION
//now done in EntityIdentityInsertAction //persister.setIdentifier( entity, id, source.getEntityMode() );	WITHOUT_CLASSIFICATION	0.999999405114902	WITHOUT_CLASSIFICATION	5.697423881947743E-7	DESIGN	1.4200449984107191E-8	DEFECT	5.53011770313777E-9	DOCUMENTATION	4.884777152865163E-9	IMPLEMENTATION	5.273650572537572E-10	TEST
//source.getPersistenceContext().removeNonExist( new EntityKey( id, persister, source.getEntityMode() ) );	WITHOUT_CLASSIFICATION	0.9999606533297042	WITHOUT_CLASSIFICATION	3.816354242083402E-5	DESIGN	9.072020264224626E-7	IMPLEMENTATION	1.5104351114289254E-7	DOCUMENTATION	6.543534236167767E-8	DEFECT	5.944699493943997E-8	TEST
//keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.9999918475365931	WITHOUT_CLASSIFICATION	6.096198454839972E-6	DESIGN	1.7279326309011552E-6	DEFECT	2.947605321283495E-7	DOCUMENTATION	1.8309550847289517E-8	TEST	1.5262238160734264E-8	IMPLEMENTATION
// cascade-save to many-to-one BEFORE the parent is saved	WITHOUT_CLASSIFICATION	0.9950561463718299	WITHOUT_CLASSIFICATION	0.0038837695140500807	IMPLEMENTATION	7.312321051913605E-4	DESIGN	3.103690666951723E-4	DEFECT	1.65857087219563E-5	DOCUMENTATION	1.897233511375935E-6	TEST
//pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.9999998991846847	WITHOUT_CLASSIFICATION	8.13405623280685E-8	DESIGN	1.1741183693519308E-8	DOCUMENTATION	6.5814158941079E-9	TEST	1.1416469430777198E-9	DEFECT	1.0506481582528245E-11	IMPLEMENTATION
// the object is persistent	WITHOUT_CLASSIFICATION	0.9999950113723577	WITHOUT_CLASSIFICATION	3.0629208451242954E-6	DESIGN	1.2860433389102709E-6	IMPLEMENTATION	2.805788271373201E-7	DEFECT	2.4210606749076503E-7	TEST	1.1697856369276708E-7	DOCUMENTATION
//the entity is associated with the session, so check its status	WITHOUT_CLASSIFICATION	0.999986799179344	WITHOUT_CLASSIFICATION	1.0280100704594115E-5	IMPLEMENTATION	1.7982876715327548E-6	DESIGN	5.739604363451791E-7	DOCUMENTATION	5.394440749050539E-7	TEST	9.027768651957102E-9	DEFECT
// do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.9999997111538323	WITHOUT_CLASSIFICATION	2.175308771207385E-7	DESIGN	2.4618645809580608E-8	IMPLEMENTATION	2.2620593866545735E-8	DEFECT	1.3187868194508402E-8	DOCUMENTATION	1.0888182689977337E-8	TEST
//ie. e.status==DELETED	WITHOUT_CLASSIFICATION	0.9999897995713415	WITHOUT_CLASSIFICATION	8.921156785446464E-6	DESIGN	6.632408523372242E-7	IMPLEMENTATION	2.938479709202984E-7	DEFECT	1.6259468846877626E-7	TEST	1.59588361452075E-7	DOCUMENTATION
// the object is transient or detached	WITHOUT_CLASSIFICATION	0.999898716834108	WITHOUT_CLASSIFICATION	9.025154729514365E-5	IMPLEMENTATION	1.0117216675231361E-5	DESIGN	5.102923478307832E-7	DEFECT	2.973406372633063E-7	DOCUMENTATION	1.0676893662273976E-7	TEST
//NOTE EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999396341200342	WITHOUT_CLASSIFICATION	2.563615456248767E-5	DESIGN	1.5741647532884782E-5	IMPLEMENTATION	1.412199473217343E-5	DEFECT	2.6572252165307595E-6	DOCUMENTATION	2.2088579218537557E-6	TEST
// Private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.9999590546809662	WITHOUT_CLASSIFICATION	3.459773925822813E-5	DESIGN	6.192878602535354E-6	IMPLEMENTATION	6.043025566893607E-8	DOCUMENTATION	5.55317717069923E-8	TEST	3.873914579470751E-8	DEFECT
// First, try to find a matching constructor accepting a ViolatedConstraintNameExtracter param...	WITHOUT_CLASSIFICATION	0.9999537499373518	WITHOUT_CLASSIFICATION	4.578485192275481E-5	IMPLEMENTATION	3.839514465641293E-7	DESIGN	7.040658198578645E-8	TEST	6.709582458723916E-9	DOCUMENTATION	4.1431144055080505E-9	DEFECT
// eat it and try next	WITHOUT_CLASSIFICATION	0.9999567966928132	WITHOUT_CLASSIFICATION	2.4117786998306587E-5	DEFECT	8.577887550151671E-6	IMPLEMENTATION	8.112616609373725E-6	DESIGN	1.3824751346658353E-6	DOCUMENTATION	1.0125408943341462E-6	TEST
// Otherwise, try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.9999790375777075	WITHOUT_CLASSIFICATION	2.0932206208365337E-5	IMPLEMENTATION	1.4296777156654587E-8	DOCUMENTATION	1.2617173757870554E-8	DESIGN	2.1670520694667582E-9	DEFECT	1.135081091372611E-9	TEST
// oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.999961578846759	WITHOUT_CLASSIFICATION	2.742941419173954E-5	DESIGN	1.0720331621945549E-5	IMPLEMENTATION	1.6130380226735292E-7	TEST	5.549680829763252E-8	DEFECT	5.460681658729554E-8	DOCUMENTATION
// CollectionPropertyMapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.9999915636997937	WITHOUT_CLASSIFICATION	6.957673525707055E-6	DESIGN	1.2440618501221684E-6	DEFECT	1.3526652857754793E-7	TEST	5.733579558361804E-8	IMPLEMENTATION	4.196250647188378E-8	DOCUMENTATION
// remove initial ", "	WITHOUT_CLASSIFICATION	0.9999973576180288	WITHOUT_CLASSIFICATION	2.405895568347156E-6	DESIGN	1.3183254823174593E-7	IMPLEMENTATION	6.010007790251596E-8	DEFECT	2.9026402927067784E-8	TEST	1.552737395450028E-8	DOCUMENTATION
// remove initial " and "	WITHOUT_CLASSIFICATION	0.9999949611982195	WITHOUT_CLASSIFICATION	4.259769099347854E-6	DESIGN	6.683006512418267E-7	IMPLEMENTATION	6.551367650067535E-8	DEFECT	2.3521951771871232E-8	TEST	2.169640172532434E-8	DOCUMENTATION
//beforeClassTokens.add("new"); DEFINITELY DON'T HAVE THIS!!	WITHOUT_CLASSIFICATION	0.999035971607828	WITHOUT_CLASSIFICATION	9.474746284169154E-4	DESIGN	8.219666209605911E-6	IMPLEMENTATION	3.4972058085617565E-6	DEFECT	3.2022182157618626E-6	DOCUMENTATION	1.634673521230526E-6	TEST
//notAfterClassTokens.add(",");	WITHOUT_CLASSIFICATION	0.9999630220754526	WITHOUT_CLASSIFICATION	2.8947919038356396E-5	DESIGN	5.665438008427067E-6	IMPLEMENTATION	1.181621973240612E-6	DEFECT	6.250822396438429E-7	DOCUMENTATION	5.578632876240109E-7	TEST
// just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.9999990553207688	WITHOUT_CLASSIFICATION	7.236976726552885E-7	IMPLEMENTATION	2.0651491367873856E-7	DESIGN	5.991662348094022E-9	TEST	5.273681556595093E-9	DOCUMENTATION	3.2013009603323192E-9	DEFECT
//update last non-whitespace token, if necessary	WITHOUT_CLASSIFICATION	0.9999975300186058	WITHOUT_CLASSIFICATION	1.610881586163668E-6	DESIGN	4.598146133381019E-7	DEFECT	2.2509269160202147E-7	IMPLEMENTATION	1.0288550901504142E-7	TEST	7.130699407895934E-8	DOCUMENTATION
// select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.9999991998406181	WITHOUT_CLASSIFICATION	4.94095865434503E-7	DESIGN	2.957856567204832E-7	DEFECT	9.713422226542358E-9	TEST	5.008434033872656E-10	DOCUMENTATION	6.359411207983692E-11	IMPLEMENTATION
//scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.9999905471292306	WITHOUT_CLASSIFICATION	5.024675589443821E-6	DEFECT	1.8951044687819747E-6	IMPLEMENTATION	1.2220389634865072E-6	DESIGN	7.291031805507831E-7	DOCUMENTATION	5.819485670133384E-7	TEST
// Note this!!	WITHOUT_CLASSIFICATION	0.9994284372273832	WITHOUT_CLASSIFICATION	4.817492657477482E-4	DESIGN	4.5655434408928706E-5	IMPLEMENTATION	2.5610227422349223E-5	TEST	1.3918019153790626E-5	DOCUMENTATION	4.629825884109844E-6	DEFECT
// Error message constants.	WITHOUT_CLASSIFICATION	0.9999944429464485	WITHOUT_CLASSIFICATION	2.2063244578810426E-6	DEFECT	1.6664676141379244E-6	DESIGN	1.2176144450147068E-6	IMPLEMENTATION	2.606228323588506E-7	DOCUMENTATION	2.0602420230999753E-7	TEST
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999370375199939	WITHOUT_CLASSIFICATION	5.805911245798637E-5	IMPLEMENTATION	4.1764684292930085E-6	DESIGN	3.902177563069674E-7	DEFECT	1.7248021797033372E-7	DOCUMENTATION	1.6420114478565405E-7	TEST
// semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9955305360525672	WITHOUT_CLASSIFICATION	0.0043642452569152435	DESIGN	5.367217004061068E-5	DEFECT	3.625930164271829E-5	IMPLEMENTATION	1.3561563184255973E-5	DOCUMENTATION	1.7256556500424155E-6	TEST
// Handle collection-fiter compilation. // IMPORTANT NOTE: This is modifying the INPUT (HQL) tree, not the output tree!	WITHOUT_CLASSIFICATION	0.45007987213448475	DESIGN	0.28289927639507584	WITHOUT_CLASSIFICATION	0.26334931425187785	DEFECT	0.0036539578822539043	IMPLEMENTATION	1.691508348163765E-5	TEST	6.642528260031549E-7	DOCUMENTATION
// Show the modified AST.	WITHOUT_CLASSIFICATION	0.9998412834362449	WITHOUT_CLASSIFICATION	1.3346700858600456E-4	IMPLEMENTATION	2.204816392265312E-5	DESIGN	1.9557036585668515E-6	DEFECT	6.618367570899314E-7	DOCUMENTATION	5.838508306477232E-7	TEST
// Create a parameter specification for the collection filter...	WITHOUT_CLASSIFICATION	0.999626340869357	WITHOUT_CLASSIFICATION	3.727122653186633E-4	DESIGN	5.305278776982836E-7	DOCUMENTATION	1.9776787279244418E-7	IMPLEMENTATION	1.7088627783292388E-7	TEST	4.7683296071277167E-8	DEFECT
// Use the delegate.	WITHOUT_CLASSIFICATION	0.999999262517913	WITHOUT_CLASSIFICATION	4.132625369160543E-7	IMPLEMENTATION	3.11823009250311E-7	DESIGN	6.252662784115076E-9	DOCUMENTATION	5.188594016034976E-9	TEST	9.552840560648346E-10	DEFECT
// Use the delegate.	WITHOUT_CLASSIFICATION	0.999999262517913	WITHOUT_CLASSIFICATION	4.132625369160543E-7	IMPLEMENTATION	3.11823009250311E-7	DESIGN	6.252662784115076E-9	DOCUMENTATION	5.188594016034976E-9	TEST	9.552840560648346E-10	DEFECT
// Get the names of the columns used to link between the collection // owner and the collection elements.	WITHOUT_CLASSIFICATION	0.9999976686428054	WITHOUT_CLASSIFICATION	2.3236518271515873E-6	DESIGN	4.882657671549787E-9	DOCUMENTATION	2.0080252679837844E-9	IMPLEMENTATION	5.695178026679729E-10	DEFECT	2.4516664036887744E-10	TEST
// The path AST should be a DotNode, and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.9602371281495701	WITHOUT_CLASSIFICATION	0.03140907764291195	DESIGN	0.006628265005024879	IMPLEMENTATION	0.0016761417985866884	DEFECT	3.2038729145404726E-5	DOCUMENTATION	1.7348674760871944E-5	TEST
// Tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9999967021623366	WITHOUT_CLASSIFICATION	1.7379440002566483E-6	DESIGN	1.3619054860354532E-6	IMPLEMENTATION	1.315813462811242E-7	DEFECT	4.8437655777757755E-8	DOCUMENTATION	1.796917507560772E-8	TEST
// Re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.9999783427484671	WITHOUT_CLASSIFICATION	1.3461981728808863E-5	DESIGN	6.780557437506599E-6	IMPLEMENTATION	1.3954975569775722E-6	DEFECT	1.4045686235943861E-8	DOCUMENTATION	5.169123351414149E-9	TEST
// Don't forget to resolve the argument! // Resolve the collection function now.	WITHOUT_CLASSIFICATION	0.9999994880659556	WITHOUT_CLASSIFICATION	3.124784032988959E-7	IMPLEMENTATION	9.830349737961647E-8	DOCUMENTATION	6.270955992437654E-8	DESIGN	3.302993610045423E-8	DEFECT	5.412647712513457E-9	TEST
// Resolve everything up to this dot, but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.9984549064690388	WITHOUT_CLASSIFICATION	0.0015338499367842492	DESIGN	7.190083534317914E-6	DEFECT	3.533928165804596E-6	IMPLEMENTATION	3.145543478104794E-7	TEST	2.050281292282411E-7	DOCUMENTATION
// Should mean that no such property was found	WITHOUT_CLASSIFICATION	0.9999852912687689	WITHOUT_CLASSIFICATION	7.339427879947931E-6	DESIGN	6.917956008997883E-6	DEFECT	3.5971115911186484E-7	IMPLEMENTATION	5.18349633729029E-8	DOCUMENTATION	3.9801219475509375E-8	TEST
// Was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.9999672208296231	WITHOUT_CLASSIFICATION	3.001509814634463E-5	DESIGN	2.414529463544302E-6	DEFECT	1.921914567382051E-7	TEST	8.717089624697931E-8	DOCUMENTATION	7.018041415065011E-8	IMPLEMENTATION
// Attach any mapping-defined "ORDER BY" fragments	WITHOUT_CLASSIFICATION	0.9999877138901773	WITHOUT_CLASSIFICATION	6.374124283395212E-6	IMPLEMENTATION	4.000091323149441E-6	DESIGN	1.1764883963529401E-6	DEFECT	5.342126602411582E-7	DOCUMENTATION	2.0119315956855582E-7	TEST
// Use the explicitly declared select expression; determine the // return types indicated by each select token	WITHOUT_CLASSIFICATION	0.9999990757765517	WITHOUT_CLASSIFICATION	9.158269173093526E-7	DESIGN	8.318936242859916E-9	DEFECT	7.171276226245013E-11	DOCUMENTATION	5.70388962493915E-12	TEST	1.7825135670000008E-13	IMPLEMENTATION
// After that, process the JOINs. // Invoke a delegate to do the work, as this is farily complex.	WITHOUT_CLASSIFICATION	0.9999970470072592	WITHOUT_CLASSIFICATION	2.4123704482345662E-6	DESIGN	5.259660922265344E-7	DEFECT	6.79926828866605E-9	IMPLEMENTATION	4.80079680126108E-9	TEST	3.0561352696996366E-9	DOCUMENTATION
// Make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.9999523317872968	WITHOUT_CLASSIFICATION	3.371177142562945E-5	IMPLEMENTATION	1.376788227046741E-5	DESIGN	1.3661466375541639E-7	TEST	4.0420700208422435E-8	DOCUMENTATION	1.1523643337199895E-8	DEFECT
// We need to generate ids as part of this bulk insert. // // Note that this is only supported for sequence-style generators and // post-insert-style generators; basically, only in-db generators	WITHOUT_CLASSIFICATION	0.9999997276699046	WITHOUT_CLASSIFICATION	2.0891295548375228E-7	IMPLEMENTATION	3.423405081859471E-8	TEST	2.473545729894084E-8	DESIGN	3.527625615068634E-9	DEFECT	9.200060798958088E-10	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.999999262517913	WITHOUT_CLASSIFICATION	4.132625369160543E-7	IMPLEMENTATION	3.11823009250311E-7	DESIGN	6.252662784115076E-9	DOCUMENTATION	5.188594016034976E-9	TEST	9.552840560648346E-10	DEFECT
// We need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.9999989328961864	WITHOUT_CLASSIFICATION	4.761751652049156E-7	DEFECT	2.847446392461801E-7	DESIGN	2.2560293835879106E-7	IMPLEMENTATION	5.924382583141371E-8	DOCUMENTATION	2.133724525029922E-8	TEST
// we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.9981952583514444	WITHOUT_CLASSIFICATION	0.0017187638150294494	DESIGN	4.315835702444689E-5	IMPLEMENTATION	3.103174030346053E-5	DOCUMENTATION	8.612412196384943E-6	DEFECT	3.175324001887992E-6	TEST
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9974491165700996	WITHOUT_CLASSIFICATION	0.0021977011235152335	DEFECT	2.823159881837849E-4	IMPLEMENTATION	7.06494980582573E-5	DESIGN	1.821129205876173E-7	DOCUMENTATION	3.470722264986164E-8	TEST
// Generate implicit joins, only if necessary.	WITHOUT_CLASSIFICATION	0.9999977591569146	WITHOUT_CLASSIFICATION	1.8063708064903912E-6	DESIGN	2.0641300059008737E-7	IMPLEMENTATION	1.8110205454307966E-7	TEST	3.3818409756525306E-8	DOCUMENTATION	1.3138813870241883E-8	DEFECT
// Notify the FROM element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.9999957477503527	WITHOUT_CLASSIFICATION	2.2936210187525555E-6	IMPLEMENTATION	9.650379905837122E-7	DESIGN	8.355127623666418E-7	DEFECT	1.4272488618826227E-7	TEST	1.535298937853615E-8	DOCUMENTATION
// Turn off includeSubclasses on all FromElements.	WITHOUT_CLASSIFICATION	0.999067402155776	WITHOUT_CLASSIFICATION	9.312579386185949E-4	DESIGN	6.961683537132902E-7	DEFECT	3.5257016108171013E-7	IMPLEMENTATION	2.5851651195926604E-7	DOCUMENTATION	3.2650578520824654E-8	TEST
// create the node initially with the param name so that it shows // appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.9994366134499372	WITHOUT_CLASSIFICATION	4.5422086875035597E-4	IMPLEMENTATION	6.188182943813997E-5	DESIGN	4.2589441289026406E-5	DEFECT	4.413134318455091E-6	TEST	2.812762667397662E-7	DOCUMENTATION
// Use the delegate, resolve identifiers as FROM element aliases.	WITHOUT_CLASSIFICATION	0.9999995197160975	WITHOUT_CLASSIFICATION	4.1017876594783337E-7	IMPLEMENTATION	6.954837248678525E-8	DESIGN	3.655913023858283E-10	DOCUMENTATION	1.4593835778212043E-10	TEST	4.523449917326533E-11	DEFECT
// select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.999999079888301	WITHOUT_CLASSIFICATION	5.360262650290956E-7	DESIGN	1.8202914708883276E-7	IMPLEMENTATION	1.6083149307214988E-7	DEFECT	4.0101926527885895E-8	TEST	1.1228670496618948E-9	DOCUMENTATION
// no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.9997744587892282	WITHOUT_CLASSIFICATION	1.8089643937904744E-4	DESIGN	3.516661065245869E-5	IMPLEMENTATION	9.202868211754443E-6	TEST	2.30841294652925E-7	DOCUMENTATION	4.445123376848365E-8	DEFECT
// Make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.9999144183359908	WITHOUT_CLASSIFICATION	6.612455842177951E-5	IMPLEMENTATION	1.818249981908416E-5	DESIGN	8.586832569329697E-7	DEFECT	3.8016376495986703E-7	TEST	3.575874653016077E-8	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999370375199939	WITHOUT_CLASSIFICATION	5.805911245798637E-5	IMPLEMENTATION	4.1764684292930085E-6	DESIGN	3.902177563069674E-7	DEFECT	1.7248021797033372E-7	DOCUMENTATION	1.6420114478565405E-7	TEST
// Use the delegate.	WITHOUT_CLASSIFICATION	0.999999262517913	WITHOUT_CLASSIFICATION	4.132625369160543E-7	IMPLEMENTATION	3.11823009250311E-7	DESIGN	6.252662784115076E-9	DOCUMENTATION	5.188594016034976E-9	TEST	9.552840560648346E-10	DEFECT
// --Commented out by Inspection (12/11/04 10:56 AM): int getWarningCount();	WITHOUT_CLASSIFICATION	0.9999911878384165	WITHOUT_CLASSIFICATION	7.441098500839259E-6	DEFECT	1.1327782121656713E-6	IMPLEMENTATION	1.583193297211627E-7	DOCUMENTATION	7.614584136293478E-8	DESIGN	3.819699299772599E-9	TEST
// Alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.9999997910047719	WITHOUT_CLASSIFICATION	1.4015398223663743E-7	DESIGN	6.150674165618544E-8	IMPLEMENTATION	5.362208302203195E-9	DOCUMENTATION	1.891140384857018E-9	DEFECT	8.115556234939492E-11	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992323871475	WITHOUT_CLASSIFICATION	4.625710959090115E-7	DESIGN	1.5046236153292153E-7	IMPLEMENTATION	1.0202154851287685E-7	DEFECT	3.028722580184353E-8	DOCUMENTATION	2.2270620762244346E-8	TEST
// make a new one	WITHOUT_CLASSIFICATION	0.9999547758749922	WITHOUT_CLASSIFICATION	3.753854769085024E-5	DESIGN	3.7864363161407437E-6	DEFECT	2.4057484713817458E-6	IMPLEMENTATION	1.0439820514401961E-6	TEST	4.4941047805550955E-7	DOCUMENTATION
// just do the regular thing if you can't find the ctor // Your AST must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.9205167352481132	WITHOUT_CLASSIFICATION	0.07938660052198838	DESIGN	9.327470408420349E-5	IMPLEMENTATION	1.879958530750554E-6	DOCUMENTATION	1.4731765878876933E-6	TEST	3.639069564125221E-8	DEFECT
// Initialize SQL nodes here.	WITHOUT_CLASSIFICATION	0.9999990999863063	WITHOUT_CLASSIFICATION	7.234515179565621E-7	DESIGN	6.909607404310025E-8	IMPLEMENTATION	5.698799015341378E-8	DEFECT	4.3716620489315957E-8	TEST	6.761490986252731E-9	DOCUMENTATION
// semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99979518956462	WITHOUT_CLASSIFICATION	1.9073976065413613E-4	DESIGN	1.1712550376733741E-5	DEFECT	1.8568891150297554E-6	DOCUMENTATION	2.776702363109614E-7	TEST	2.2356499789801403E-7	IMPLEMENTATION
// if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999997936864078	WITHOUT_CLASSIFICATION	9.704156946728044E-8	IMPLEMENTATION	9.685108902927198E-8	DEFECT	9.507980263961412E-9	DESIGN	1.997380551662617E-9	TEST	9.155731653211226E-10	DOCUMENTATION
// this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.9999999938959138	WITHOUT_CLASSIFICATION	3.573021804480788E-9	DESIGN	1.1266673314240358E-9	IMPLEMENTATION	8.631619283248636E-10	DEFECT	4.4160575831475746E-10	DOCUMENTATION	9.962947621206223E-11	TEST
// --- Inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.9999955629396953	WITHOUT_CLASSIFICATION	4.30975692254642E-6	DESIGN	6.455054723836433E-8	IMPLEMENTATION	3.043979249383723E-8	DEFECT	2.9753527194761407E-8	TEST	2.5595151957832884E-9	DOCUMENTATION
// check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.9999876462910936	WITHOUT_CLASSIFICATION	1.2190733988167976E-5	IMPLEMENTATION	1.2483799299483701E-7	DEFECT	2.2946332922273523E-8	DOCUMENTATION	1.1408944899038876E-8	DESIGN	3.781647442190982E-9	TEST
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9990612659178691	WITHOUT_CLASSIFICATION	8.145738134030273E-4	DESIGN	4.447594921756063E-5	DEFECT	3.910243605146484E-5	IMPLEMENTATION	2.1594717598190095E-5	TEST	1.8987165860590066E-5	DOCUMENTATION
// these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.9999998080240944	WITHOUT_CLASSIFICATION	1.5284081170150458E-7	IMPLEMENTATION	2.7054792219584106E-8	DESIGN	1.0122021014847701E-8	TEST	1.8489524948208682E-9	DOCUMENTATION	1.0932818998053022E-10	DEFECT
// again, both should be FromElements	WITHOUT_CLASSIFICATION	0.9998941285801102	WITHOUT_CLASSIFICATION	9.374785028094894E-5	DESIGN	1.105594403626133E-5	IMPLEMENTATION	7.875119978294163E-7	TEST	1.4175924489983148E-7	DOCUMENTATION	1.383543298929021E-7	DEFECT
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9988240014164343	WITHOUT_CLASSIFICATION	7.228047729870515E-4	DESIGN	2.566305778392459E-4	DEFECT	1.8402590865810258E-4	IMPLEMENTATION	1.2113906374290645E-5	TEST	4.23417706997101E-7	DOCUMENTATION
// right represents a joins originating from left; or // both right and left reprersent joins originating from the same FromElement	WITHOUT_CLASSIFICATION	0.9999999617818649	WITHOUT_CLASSIFICATION	2.8817755087153343E-8	DESIGN	9.055998050990088E-9	DEFECT	2.674396929115319E-10	IMPLEMENTATION	5.1577285102484835E-11	DOCUMENTATION	2.536488340402868E-11	TEST
// check a set of parent/child nodes in the from-clause tree // to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.9999998301892625	WITHOUT_CLASSIFICATION	1.5458243076816105E-7	DESIGN	1.500190421039648E-8	DEFECT	9.709286146478234E-11	IMPLEMENTATION	7.992655470136707E-11	TEST	4.9383161159794865E-11	DOCUMENTATION
// right represents a joins originating from left...	WITHOUT_CLASSIFICATION	0.9999997014540455	WITHOUT_CLASSIFICATION	1.4276635765861846E-7	DEFECT	1.404636347561242E-7	DESIGN	1.3126041356108466E-8	IMPLEMENTATION	1.2881486741973818E-9	TEST	9.017721178713178E-10	DOCUMENTATION
// all clear	WITHOUT_CLASSIFICATION	0.9999953496925544	WITHOUT_CLASSIFICATION	3.276190076078526E-6	DESIGN	1.272406015221278E-6	IMPLEMENTATION	5.305759938731895E-8	DEFECT	3.293436419662621E-8	DOCUMENTATION	1.5719390707009757E-8	TEST
// Ignore the token class name parameter, and use a specific token class.	WITHOUT_CLASSIFICATION	0.999991218560787	WITHOUT_CLASSIFICATION	8.767923464413299E-6	DESIGN	1.1595199593860783E-8	DOCUMENTATION	1.2246448037966654E-9	IMPLEMENTATION	5.464504189391428E-10	DEFECT	1.4945377574089327E-10	TEST
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9994862165892072	WITHOUT_CLASSIFICATION	4.922183542991269E-4	DESIGN	1.3529513483887024E-5	IMPLEMENTATION	3.4386558650758705E-6	TEST	2.9525962931464663E-6	DOCUMENTATION	1.6442908514824992E-6	DEFECT
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9994862165892072	WITHOUT_CLASSIFICATION	4.922183542991269E-4	DESIGN	1.3529513483887024E-5	IMPLEMENTATION	3.4386558650758705E-6	TEST	2.9525962931464663E-6	DOCUMENTATION	1.6442908514824992E-6	DEFECT
// remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.9991734667233838	WITHOUT_CLASSIFICATION	8.125327384137937E-4	DESIGN	9.777097998636175E-6	DEFECT	3.7186062727860014E-6	IMPLEMENTATION	2.9980165885366633E-7	TEST	2.050322720592205E-7	DOCUMENTATION
// don't care about other param types here, just those explicitly user-defined...	WITHOUT_CLASSIFICATION	0.9930906849345327	WITHOUT_CLASSIFICATION	0.006909275881266782	DESIGN	2.6084094538070596E-8	TEST	1.1676081170074446E-8	DEFECT	1.3073935849324695E-9	DOCUMENTATION	1.1663118562076753E-10	IMPLEMENTATION
// If the query is already compiled, skip the compilation.	WITHOUT_CLASSIFICATION	0.9985176886052889	WITHOUT_CLASSIFICATION	0.0014755246747229615	IMPLEMENTATION	5.629105324373863E-6	DEFECT	1.0361513243954187E-6	DESIGN	7.073663777776781E-8	DOCUMENTATION	5.072670154171335E-8	TEST
// Remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.9983176488526347	WITHOUT_CLASSIFICATION	0.0014594366815782623	DESIGN	2.109728113469703E-4	IMPLEMENTATION	8.853058842153131E-6	DEFECT	2.820585080365837E-6	TEST	2.6801051747206364E-7	DOCUMENTATION
// PHASE 1 : Parse the HQL into an AST.	WITHOUT_CLASSIFICATION	0.9998374752062392	WITHOUT_CLASSIFICATION	1.5512658734576686E-4	DESIGN	3.1607740240971594E-6	IMPLEMENTATION	2.5447776935890733E-6	DEFECT	1.324189545247922E-6	DOCUMENTATION	3.6846515201842975E-7	TEST
// PHASE 2 : Analyze the HQL AST, and produce an SQL AST.	WITHOUT_CLASSIFICATION	0.9998157573060585	WITHOUT_CLASSIFICATION	1.7356998353058794E-4	DESIGN	7.401053410069235E-6	DEFECT	1.6282718896248892E-6	IMPLEMENTATION	1.5601897529329085E-6	DOCUMENTATION	8.319535823541604E-8	TEST
// PHASE 3 : Generate the SQL.	WITHOUT_CLASSIFICATION	0.9989265840277018	WITHOUT_CLASSIFICATION	8.499601637914796E-4	DESIGN	2.0718177421604438E-4	IMPLEMENTATION	1.0010046932411823E-5	TEST	5.939253158564526E-6	DOCUMENTATION	3.2473419970306557E-7	DEFECT
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.999999286782076	WITHOUT_CLASSIFICATION	6.847862128028507E-7	DEFECT	2.1677425835444073E-8	DESIGN	3.321720807116931E-9	IMPLEMENTATION	3.3172008173267483E-9	TEST	1.1536368774104497E-10	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.999999286782076	WITHOUT_CLASSIFICATION	6.847862128028507E-7	DEFECT	2.1677425835444073E-8	DESIGN	3.321720807116931E-9	IMPLEMENTATION	3.3172008173267483E-9	TEST	1.1536368774104497E-10	DOCUMENTATION
//only needed during compilation phase...	WITHOUT_CLASSIFICATION	0.9999959975336458	WITHOUT_CLASSIFICATION	1.964810665567442E-6	DESIGN	1.1084928254269442E-6	DEFECT	6.071718656530696E-7	IMPLEMENTATION	2.139520985949139E-7	DOCUMENTATION	1.0803889886165866E-7	TEST
// Transform the tree.	WITHOUT_CLASSIFICATION	0.9999941187116004	WITHOUT_CLASSIFICATION	3.1302974501507128E-6	IMPLEMENTATION	2.349363649590633E-6	DESIGN	2.6142426057391317E-7	DOCUMENTATION	1.0830146674731984E-7	TEST	3.1901572655957123E-8	DEFECT
// Parse the query string into an HQL AST.	WITHOUT_CLASSIFICATION	0.9998263035632456	WITHOUT_CLASSIFICATION	1.5602667238821433E-4	DESIGN	1.3159598942153788E-5	DEFECT	2.526421523471541E-6	DOCUMENTATION	1.4107326660297906E-6	IMPLEMENTATION	5.730112346145384E-7	TEST
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.999709308653992	WITHOUT_CLASSIFICATION	2.8809122523272356E-4	DESIGN	1.5737579905134387E-6	IMPLEMENTATION	5.466330696119813E-7	DOCUMENTATION	2.79718211512774E-7	DEFECT	2.00011503486659E-7	TEST
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.999709308653992	WITHOUT_CLASSIFICATION	2.8809122523272356E-4	DESIGN	1.5737579905134387E-6	IMPLEMENTATION	5.466330696119813E-7	DOCUMENTATION	2.79718211512774E-7	DEFECT	2.00011503486659E-7	TEST
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.999709308653992	WITHOUT_CLASSIFICATION	2.8809122523272356E-4	DESIGN	1.5737579905134387E-6	IMPLEMENTATION	5.466330696119813E-7	DOCUMENTATION	2.79718211512774E-7	DEFECT	2.00011503486659E-7	TEST
// NOTE : ( max - 1 ) because first is zero-based while max is not...	WITHOUT_CLASSIFICATION	0.9994434936489311	WITHOUT_CLASSIFICATION	4.213566335173067E-4	IMPLEMENTATION	8.473096178066432E-5	DESIGN	4.3260668210380775E-5	DEFECT	6.3574040976089305E-6	TEST	8.006834628927691E-7	DOCUMENTATION
// -- Package local methods for the QueryLoader delegate --	WITHOUT_CLASSIFICATION	0.9993387004549199	WITHOUT_CLASSIFICATION	6.609601151207538E-4	DESIGN	1.7658962343492458E-7	DEFECT	9.813960078330426E-8	IMPLEMENTATION	3.266428434732445E-8	DOCUMENTATION	3.20364508141318E-8	TEST
// If there are no collection fetches, then no further checks are needed	WITHOUT_CLASSIFICATION	0.9769173168035897	WITHOUT_CLASSIFICATION	0.023079139290015153	IMPLEMENTATION	2.500473305442009E-6	TEST	5.435562619057479E-7	DOCUMENTATION	2.864240172141029E-7	DEFECT	2.134528106455563E-7	DESIGN
// A shallow query is ok (although technically there should be no fetching here...)	WITHOUT_CLASSIFICATION	0.9836390612065239	WITHOUT_CLASSIFICATION	0.010253922335509386	DEFECT	0.0059304056140291874	IMPLEMENTATION	1.4570476458884826E-4	DESIGN	2.9837752939285826E-5	TEST	1.0683264093596197E-6	DOCUMENTATION
// should be the first, but just to be safe...	WITHOUT_CLASSIFICATION	0.9999739480406427	WITHOUT_CLASSIFICATION	1.4867751186890848E-5	IMPLEMENTATION	8.815375039482293E-6	DESIGN	2.195082162672998E-6	DEFECT	1.4683338641564913E-7	TEST	2.691758199254581E-8	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.999999262517913	WITHOUT_CLASSIFICATION	4.132625369160543E-7	IMPLEMENTATION	3.11823009250311E-7	DESIGN	6.252662784115076E-9	DOCUMENTATION	5.188594016034976E-9	TEST	9.552840560648346E-10	DEFECT
// Use the delegate.	WITHOUT_CLASSIFICATION	0.999999262517913	WITHOUT_CLASSIFICATION	4.132625369160543E-7	IMPLEMENTATION	3.11823009250311E-7	DESIGN	6.252662784115076E-9	DOCUMENTATION	5.188594016034976E-9	TEST	9.552840560648346E-10	DEFECT
// Impl Note: allows multiple collection fetches as long as the // entire fecthed graph still "points back" to a single // root entity for return	WITHOUT_CLASSIFICATION	0.9999812873407012	WITHOUT_CLASSIFICATION	1.036000725566442E-5	IMPLEMENTATION	8.191351922035873E-6	DEFECT	1.5937934845550333E-7	DESIGN	1.750980491418572E-9	TEST	1.6979207072791753E-10	DOCUMENTATION
// Otherwise, we have a non-scalar select with defined collection fetch(es). // Make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.9999926004670571	WITHOUT_CLASSIFICATION	5.476217667193229E-6	IMPLEMENTATION	1.4940573290969752E-6	DESIGN	4.2772466875992293E-7	DEFECT	1.1952451409717565E-9	TEST	3.380326388830124E-10	DOCUMENTATION
// This is not strictly true.  We actually just need to make sure that // it is ordered by root-entity PK and that that order-by comes before // any non-root-entity ordering...	WITHOUT_CLASSIFICATION	0.9998138996524985	WITHOUT_CLASSIFICATION	1.5855977883461435E-4	DESIGN	2.4741045803018045E-5	IMPLEMENTATION	2.5480445226053083E-6	DEFECT	2.2883383938703558E-7	TEST	2.2644501993728878E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.999997905007919	WITHOUT_CLASSIFICATION	1.8177906234980752E-6	DESIGN	1.5277264396973384E-7	DEFECT	6.318524163667456E-8	DOCUMENTATION	5.1191713267531185E-8	IMPLEMENTATION	1.0051858642955126E-8	TEST
// igndore it...	WITHOUT_CLASSIFICATION	0.9999579219762569	WITHOUT_CLASSIFICATION	2.411770554951588E-5	DESIGN	8.41664289602593E-6	DEFECT	8.01034249350918E-6	IMPLEMENTATION	7.685654883769035E-7	TEST	7.647673157755185E-7	DOCUMENTATION
// we are now at a new tree level	WITHOUT_CLASSIFICATION	0.9999956671064809	WITHOUT_CLASSIFICATION	3.424301615242682E-6	DESIGN	6.315127133379458E-7	DEFECT	1.3439182907907346E-7	IMPLEMENTATION	9.05237647682593E-8	DOCUMENTATION	5.2163596600796784E-8	TEST
// [jsd] The fix for HHH-558...	WITHOUT_CLASSIFICATION	0.9983753143640672	WITHOUT_CLASSIFICATION	0.0015241727064914824	DESIGN	9.222407175003627E-5	DEFECT	3.7038263535829228E-6	IMPLEMENTATION	2.3390491443184767E-6	TEST	2.245982193299402E-6	DOCUMENTATION
// If the token can tell us if it could be an identifier...	WITHOUT_CLASSIFICATION	0.9998547021850815	WITHOUT_CLASSIFICATION	1.446104388092942E-4	DESIGN	5.01240948114708E-7	IMPLEMENTATION	1.0904388795530787E-7	TEST	6.636380364128746E-8	DEFECT	1.072746929926316E-8	DOCUMENTATION
// ... and the expected token type was an identifier, then:	WITHOUT_CLASSIFICATION	0.9999988128816514	WITHOUT_CLASSIFICATION	1.013791321239936E-6	DESIGN	1.2653022972704858E-7	DEFECT	3.503351557447657E-8	DOCUMENTATION	6.32460333766857E-9	TEST	5.438678789420487E-9	IMPLEMENTATION
// Use the token as an identifier.	WITHOUT_CLASSIFICATION	0.9999999606784373	WITHOUT_CLASSIFICATION	2.3402239518315478E-8	DESIGN	1.1489594303434284E-8	IMPLEMENTATION	1.9568158923192117E-9	DOCUMENTATION	1.590293679731855E-9	DEFECT	8.826191470653816E-10	TEST
// Add the token to the AST.	WITHOUT_CLASSIFICATION	0.9999815660086319	WITHOUT_CLASSIFICATION	6.665263520346394E-6	IMPLEMENTATION	6.370183476456812E-6	DESIGN	4.4311575799550826E-6	DOCUMENTATION	5.526764085425072E-7	DEFECT	4.14710382824047E-7	TEST
// (NOT (EQ a b) ) => (NE a b)	WITHOUT_CLASSIFICATION	0.9999895743041584	WITHOUT_CLASSIFICATION	7.961166484635872E-6	DESIGN	1.948051751651722E-6	IMPLEMENTATION	2.310959760014982E-7	DEFECT	1.4359727776755657E-7	TEST	1.417843515873294E-7	DOCUMENTATION
// (NOT (NE a b) ) => (EQ a b)	WITHOUT_CLASSIFICATION	0.9999895743041584	WITHOUT_CLASSIFICATION	7.961166484635872E-6	DESIGN	1.948051751651723E-6	IMPLEMENTATION	2.310959760014982E-7	DEFECT	1.4359727776755657E-7	TEST	1.417843515873294E-7	DOCUMENTATION
// (NOT (LT a b) ) => (GE a b)	WITHOUT_CLASSIFICATION	0.9999939263312609	WITHOUT_CLASSIFICATION	4.680618317582778E-6	DESIGN	1.0625558940594423E-6	IMPLEMENTATION	1.55977437200227E-7	DEFECT	8.909302170876796E-8	TEST	8.542406855048046E-8	DOCUMENTATION
// (NOT (GE a b) ) => (LT a b)	WITHOUT_CLASSIFICATION	0.9999939263312609	WITHOUT_CLASSIFICATION	4.680618317582778E-6	DESIGN	1.0625558940594423E-6	IMPLEMENTATION	1.55977437200227E-7	DEFECT	8.909302170876796E-8	TEST	8.542406855048046E-8	DOCUMENTATION
// (NOT (LE a b) ) => (GT a b)	WITHOUT_CLASSIFICATION	0.9999967027733673	WITHOUT_CLASSIFICATION	1.902919821548462E-6	DESIGN	1.1599436649435582E-6	IMPLEMENTATION	1.0615232310777371E-7	DEFECT	6.686260862370375E-8	TEST	6.134821456372966E-8	DOCUMENTATION
// (NOT (LIKE a b) ) => (NOT_LIKE a b)	WITHOUT_CLASSIFICATION	0.9999947554795207	WITHOUT_CLASSIFICATION	3.311061710316231E-6	DESIGN	1.5667079846359482E-6	IMPLEMENTATION	2.3665405726225704E-7	DEFECT	6.772317581908625E-8	DOCUMENTATION	6.237355138858838E-8	TEST
// (NOT (NOT_LIKE a b) ) => (LIKE a b)	WITHOUT_CLASSIFICATION	0.9999947554795207	WITHOUT_CLASSIFICATION	3.311061710316231E-6	DESIGN	1.5667079846359482E-6	IMPLEMENTATION	2.3665405726225704E-7	DEFECT	6.772317581908625E-8	DOCUMENTATION	6.237355138858838E-8	TEST
// (NOT (IS_NOT_NULL a b) ) => (IS_NULL a b)	WITHOUT_CLASSIFICATION	0.9999906184967265	WITHOUT_CLASSIFICATION	7.3026095509721485E-6	DESIGN	1.7018746629646068E-6	IMPLEMENTATION	2.3951689054552777E-7	DEFECT	8.676744252360239E-8	DOCUMENTATION	5.073472654032508E-8	TEST
// (NOT (BETWEEN a b) ) => (NOT_BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999840753953948	WITHOUT_CLASSIFICATION	1.002418626118938E-5	DESIGN	4.81412058394849E-6	IMPLEMENTATION	6.573044462269009E-7	DEFECT	2.1952917590188718E-7	TEST	2.0946413777236416E-7	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999954666665021	WITHOUT_CLASSIFICATION	3.393595453367035E-6	DESIGN	9.539105103148137E-7	IMPLEMENTATION	1.399094524378963E-7	DEFECT	2.8232026420319152E-8	DOCUMENTATION	1.7686055321805225E-8	TEST
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9994862165892072	WITHOUT_CLASSIFICATION	4.922183542991269E-4	DESIGN	1.3529513483887024E-5	IMPLEMENTATION	3.4386558650758705E-6	TEST	2.9525962931464663E-6	DOCUMENTATION	1.6442908514824992E-6	DEFECT
// if // if // Otherwise, handle the error normally.	WITHOUT_CLASSIFICATION	0.9999658432624797	WITHOUT_CLASSIFICATION	2.9792964194524293E-5	IMPLEMENTATION	2.633431764748711E-6	DESIGN	1.6143982727391163E-6	DEFECT	7.185892222558956E-8	TEST	4.408436611877067E-8	DOCUMENTATION
// (NOT (NOT_BETWEEN a b) ) => (BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999840753953948	WITHOUT_CLASSIFICATION	1.002418626118938E-5	DESIGN	4.81412058394849E-6	IMPLEMENTATION	6.573044462269009E-7	DEFECT	2.1952917590188718E-7	TEST	2.0946413777236416E-7	DOCUMENTATION
/* This can never happen because this rule will always eliminate the child NOT.	WITHOUT_CLASSIFICATION	0.9975844189428826	WITHOUT_CLASSIFICATION	0.002353487319107424	DESIGN	5.663063260717369E-5	IMPLEMENTATION	4.865325373133128E-6	DEFECT	5.134753678695608E-7	DOCUMENTATION	8.430466180209478E-8	TEST
// Just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9999671326859111	WITHOUT_CLASSIFICATION	2.978991530439609E-5	IMPLEMENTATION	2.383920212910962E-6	DESIGN	3.996437397691901E-7	DEFECT	1.7391126663228594E-7	TEST	1.1992356531361328E-7	DOCUMENTATION
// (EQ NULL b) => (IS_NULL b)	WITHOUT_CLASSIFICATION	0.9999994911975605	WITHOUT_CLASSIFICATION	2.8230742831944136E-7	DESIGN	1.7321150500369344E-7	IMPLEMENTATION	2.150325832955275E-8	DOCUMENTATION	1.7823921513813206E-8	DEFECT	1.3956326272156213E-8	TEST
// (EQ a NULL) => (IS_NULL a)	WITHOUT_CLASSIFICATION	0.9999991437136727	WITHOUT_CLASSIFICATION	6.247876887290229E-7	DESIGN	1.8225970188162929E-7	IMPLEMENTATION	2.0913157560027106E-8	DOCUMENTATION	1.77397563361572E-8	DEFECT	1.0586022742038667E-8	TEST
// NOTE: Because we're using ASTUtil.createParent(), the tree must be created from the bottom up. // IS EMPTY x => (EXISTS (QUERY (SELECT_FROM (FROM x) ) ) )	WITHOUT_CLASSIFICATION	0.9999990473396153	WITHOUT_CLASSIFICATION	6.020367164461651E-7	IMPLEMENTATION	3.351725950348466E-7	DESIGN	9.682925535067236E-9	TEST	3.2392292624399924E-9	DEFECT	2.52891838060229E-9	DOCUMENTATION
// Add NOT if it's negated.	WITHOUT_CLASSIFICATION	0.9999657328205399	WITHOUT_CLASSIFICATION	2.714564602069741E-5	IMPLEMENTATION	3.3434347811124965E-6	TEST	3.1139421845101697E-6	DESIGN	4.450625723707808E-7	DEFECT	2.1909390136243055E-7	DOCUMENTATION
// Create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.9999900389299051	WITHOUT_CLASSIFICATION	9.675682501945137E-6	DESIGN	1.3373345075970897E-7	DEFECT	5.999661122307252E-8	IMPLEMENTATION	5.110568196958742E-8	DOCUMENTATION	4.055184897449754E-8	TEST
// Case 1: Multi token keywords GROUP BY and ORDER BY // The next token ( LT(2) ) should be 'by'... otherwise, this is just an ident.	WITHOUT_CLASSIFICATION	0.9739749889480496	WITHOUT_CLASSIFICATION	0.025105757836336468	DESIGN	9.11729971611938E-4	DEFECT	3.6904635363371453E-6	IMPLEMENTATION	2.7278357150272486E-6	TEST	1.104944750674321E-6	DOCUMENTATION
// Case 2: The current token is after FROM and before '.'.	WITHOUT_CLASSIFICATION	0.9998587642809226	WITHOUT_CLASSIFICATION	1.3699019326171796E-4	DEFECT	3.2885795586765137E-6	DESIGN	4.859576963629765E-7	DOCUMENTATION	3.748065314325113E-7	IMPLEMENTATION	9.618202923454305E-8	TEST
// This handles HHH-354, where there is a strange property name in a where clause. // If the lookahead contains a DOT then something that isn't an IDENT...	WITHOUT_CLASSIFICATION	0.9998771803907507	WITHOUT_CLASSIFICATION	1.2115073715315397E-4	DESIGN	1.2977580514959919E-6	DEFECT	2.9065908276490504E-7	TEST	6.548807456291007E-8	DOCUMENTATION	1.49668874747983E-8	IMPLEMENTATION
// See if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.9999998992545429	WITHOUT_CLASSIFICATION	9.914618156933026E-8	DESIGN	5.51967474075573E-10	DOCUMENTATION	5.125299808553701E-10	DEFECT	2.940655626404796E-10	IMPLEMENTATION	2.407124843203105E-10	TEST
// Set it!	WITHOUT_CLASSIFICATION	0.9999354181778378	WITHOUT_CLASSIFICATION	4.935000424618907E-5	DEFECT	9.605092294123707E-6	DESIGN	3.113316436063647E-6	IMPLEMENTATION	1.4740807558606939E-6	TEST	1.039328430075848E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999975674143844	WITHOUT_CLASSIFICATION	1.3648294478659303E-6	DESIGN	5.671145305579706E-7	DEFECT	3.820433736968819E-7	IMPLEMENTATION	7.774135294475789E-8	DOCUMENTATION	4.085691057975015E-8	TEST
// strip the " where "	WITHOUT_CLASSIFICATION	0.999997602106976	WITHOUT_CLASSIFICATION	1.2744145333774876E-6	IMPLEMENTATION	9.41783250084101E-7	DESIGN	9.168222853662357E-8	TEST	4.712143725023516E-8	DEFECT	4.2891574948759594E-8	DOCUMENTATION
// Don't really know all the codes required to adequately decipher returned jdbc exceptions here. // simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.9977625860669732	WITHOUT_CLASSIFICATION	0.0021922205021523925	DEFECT	3.517767849552987E-5	DESIGN	8.24631904943209E-6	IMPLEMENTATION	1.7520191982851698E-6	TEST	1.7414131070337548E-8	DOCUMENTATION
// at the very least cleanup the data :)	WITHOUT_CLASSIFICATION	0.9995327966051402	WITHOUT_CLASSIFICATION	3.771003419433877E-4	DESIGN	8.718369036992748E-5	IMPLEMENTATION	1.9224545310421896E-6	DEFECT	6.554247318743179E-7	DOCUMENTATION	3.414832835708851E-7	TEST
// First, save off the pertinent ids, as the return value	WITHOUT_CLASSIFICATION	0.9999996016570133	WITHOUT_CLASSIFICATION	1.6487142347066484E-7	IMPLEMENTATION	1.2176282370342478E-7	DESIGN	1.0706961209370276E-7	DEFECT	3.5447310603496366E-9	DOCUMENTATION	1.0943962747905257E-9	TEST
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999298123718652	WITHOUT_CLASSIFICATION	6.908499374870472E-5	DESIGN	8.352656914284933E-7	IMPLEMENTATION	1.504887310896488E-7	TEST	7.295962136391744E-8	DEFECT	4.39203421797817E-8	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999298123718652	WITHOUT_CLASSIFICATION	6.908499374870472E-5	DESIGN	8.352656914284933E-7	IMPLEMENTATION	1.504887310896488E-7	TEST	7.295962136391744E-8	DEFECT	4.39203421797817E-8	DOCUMENTATION
// Start performing the updates	WITHOUT_CLASSIFICATION	0.9999810634765885	WITHOUT_CLASSIFICATION	1.05076771082313E-5	IMPLEMENTATION	5.410934476854414E-6	DEFECT	1.8698470097019695E-6	DESIGN	7.687913733318239E-7	TEST	3.7927344336467884E-7	DOCUMENTATION
// First, save off the pertinent ids, saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.9999995239396874	WITHOUT_CLASSIFICATION	3.2276824673894685E-7	DEFECT	8.301833353101867E-8	IMPLEMENTATION	3.973136137977154E-8	DESIGN	2.1009783671298983E-8	TEST	9.532587285853538E-9	DOCUMENTATION
// Start performing the deletes	WITHOUT_CLASSIFICATION	0.9999938483057297	WITHOUT_CLASSIFICATION	3.617089431215663E-6	DESIGN	1.937016520586944E-6	IMPLEMENTATION	3.0569942277725004E-7	TEST	2.286706840725367E-7	DEFECT	6.321821171603648E-8	DOCUMENTATION
// otherwise, everything ok.	WITHOUT_CLASSIFICATION	0.9995471613203201	WITHOUT_CLASSIFICATION	2.8212491553827586E-4	IMPLEMENTATION	1.626956859298164E-4	DESIGN	3.2607662958083536E-6	TEST	2.9452494473261235E-6	DOCUMENTATION	1.8120624687203558E-6	DEFECT
// visit width-first, then depth	WITHOUT_CLASSIFICATION	0.9999916853120809	WITHOUT_CLASSIFICATION	5.615330199297034E-6	IMPLEMENTATION	1.172830373098963E-6	DEFECT	8.429445542903948E-7	DESIGN	5.239459712737305E-7	TEST	1.5963682113943208E-7	DOCUMENTATION
// if the types report logical equivalence, return true...	WITHOUT_CLASSIFICATION	0.9999914870675444	WITHOUT_CLASSIFICATION	7.507017016065222E-6	DESIGN	6.090048507072689E-7	DEFECT	3.705323001126675E-7	IMPLEMENTATION	1.5052664491161555E-8	TEST	1.1325624173106283E-8	DOCUMENTATION
// otherwise, perform a "deep equivalence" check...	WITHOUT_CLASSIFICATION	0.9911648683030441	WITHOUT_CLASSIFICATION	0.008726534333374347	DESIGN	1.0760321910702576E-4	IMPLEMENTATION	5.533629180360052E-7	DOCUMENTATION	3.120683311098196E-7	DEFECT	1.2871322543388169E-7	TEST
// If there is no WHERE node, make one.	WITHOUT_CLASSIFICATION	0.9999994654825344	WITHOUT_CLASSIFICATION	3.091370384373448E-7	DESIGN	1.4871105113009917E-7	DEFECT	5.037992068146681E-8	TEST	2.481818554705427E-8	IMPLEMENTATION	1.4712698382207965E-9	DOCUMENTATION
// inject the WHERE after the parent	WITHOUT_CLASSIFICATION	0.9999972457254458	WITHOUT_CLASSIFICATION	1.233521434360865E-6	DESIGN	1.2296203217085549E-6	IMPLEMENTATION	1.4675460236976551E-7	DOCUMENTATION	8.290481701367234E-8	DEFECT	6.147337871007792E-8	TEST
// Never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9999873592238967	WITHOUT_CLASSIFICATION	1.2604963388419746E-5	DESIGN	1.9857009567610512E-8	IMPLEMENTATION	1.0736282897102373E-8	TEST	2.7057328527749176E-9	DEFECT	2.5136895038610443E-9	DOCUMENTATION
// Moved here from SelectClause [jsd]	WITHOUT_CLASSIFICATION	0.9999738566418073	WITHOUT_CLASSIFICATION	2.603647603127092E-5	DESIGN	4.240785917382593E-8	DEFECT	3.2166964208504606E-8	IMPLEMENTATION	2.5586695637745047E-8	TEST	6.720642584459777E-9	DOCUMENTATION
///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9990612659178691	WITHOUT_CLASSIFICATION	8.145738134030273E-4	DESIGN	4.447594921756063E-5	DEFECT	3.910243605146484E-5	IMPLEMENTATION	2.1594717598190095E-5	TEST	1.8987165860590066E-5	DOCUMENTATION
// Use the table fromElement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.9999998362738549	WITHOUT_CLASSIFICATION	1.4024242243788728E-7	DESIGN	1.0825220872933681E-8	IMPLEMENTATION	7.524303049972723E-9	DEFECT	4.546242973083687E-9	DOCUMENTATION	5.879556937731897E-10	TEST
// Set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.9999871132973983	WITHOUT_CLASSIFICATION	1.2762117089365607E-5	DEFECT	6.922688814938274E-8	IMPLEMENTATION	2.5098039986618418E-8	DOCUMENTATION	1.5161150257239192E-8	DESIGN	1.5099433922815083E-8	TEST
// If the uresolved property path isn't set yet, just use the property name.	WITHOUT_CLASSIFICATION	0.999956136890817	WITHOUT_CLASSIFICATION	3.933647066033392E-5	IMPLEMENTATION	3.4151025950024004E-6	DEFECT	8.695532428837738E-7	DESIGN	1.4817106022438688E-7	TEST	9.381162459454703E-8	DOCUMENTATION
// The 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.9999942667950582	WITHOUT_CLASSIFICATION	4.585556901850378E-6	DEFECT	8.933610456140862E-7	IMPLEMENTATION	2.0366361368304895E-7	DESIGN	3.49218647742197E-8	DOCUMENTATION	1.570151594814809E-8	TEST
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999963104563276	WITHOUT_CLASSIFICATION	2.989339379122701E-6	DESIGN	5.634794805159937E-7	IMPLEMENTATION	1.2559394338688324E-7	DEFECT	6.88884859121627E-9	DOCUMENTATION	4.242020704654791E-9	TEST
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999963104563276	WITHOUT_CLASSIFICATION	2.989339379122701E-6	DESIGN	5.634794805159937E-7	IMPLEMENTATION	1.2559394338688324E-7	DEFECT	6.88884859121627E-9	DOCUMENTATION	4.242020704654791E-9	TEST
// If this dot has already been resolved, stop now.	WITHOUT_CLASSIFICATION	0.9999770460551421	WITHOUT_CLASSIFICATION	2.064640993911646E-5	DESIGN	2.0436978521961667E-6	IMPLEMENTATION	1.896534418039391E-7	DEFECT	4.8041072822212185E-8	TEST	2.6142551893417885E-8	DOCUMENTATION
// If there is no data type for this node, and we're at the end of the path (top most dot node), then // this might be a Java constant.	WITHOUT_CLASSIFICATION	0.9949845457328108	WITHOUT_CLASSIFICATION	0.0049812978739450925	DESIGN	2.2669028802946667E-5	DEFECT	1.0645985934268821E-5	IMPLEMENTATION	4.614962971247534E-7	TEST	3.7988220957846935E-7	DOCUMENTATION
// The property is a collection...	WITHOUT_CLASSIFICATION	0.9998641516973468	WITHOUT_CLASSIFICATION	1.1753717476057663E-4	DEFECT	1.4157388972669815E-5	DESIGN	3.7975030796591974E-6	IMPLEMENTATION	2.557371448697794E-7	TEST	1.0049869547538702E-7	DOCUMENTATION
// The property is a component...	WITHOUT_CLASSIFICATION	0.9999797517653783	WITHOUT_CLASSIFICATION	1.3033676941777856E-5	DEFECT	6.9274556052721E-6	DESIGN	1.952541857470815E-7	IMPLEMENTATION	4.787685900049043E-8	TEST	4.397102990762294E-8	DOCUMENTATION
// The property is another class..	WITHOUT_CLASSIFICATION	0.9999816217902462	WITHOUT_CLASSIFICATION	9.39419749845233E-6	DEFECT	8.81873941105471E-6	DESIGN	7.848834265735373E-8	TEST	5.7549663460402E-8	DOCUMENTATION	2.923483809926526E-8	IMPLEMENTATION
// Otherwise, this is a primitive type.	WITHOUT_CLASSIFICATION	0.9999813627602265	WITHOUT_CLASSIFICATION	1.827059336055522E-5	DESIGN	2.605273687434566E-7	IMPLEMENTATION	6.182382030269338E-8	TEST	2.79027471801496E-8	DEFECT	1.6392476699904368E-8	DOCUMENTATION
//foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.9804839135094049	WITHOUT_CLASSIFICATION	0.01941406749248774	DESIGN	6.337105805482377E-5	IMPLEMENTATION	2.1711349517835558E-5	DEFECT	1.1857214657708126E-5	DOCUMENTATION	5.079375876932571E-6	TEST
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999673555706405	WITHOUT_CLASSIFICATION	2.9415578998733106E-5	DEFECT	3.208428754488031E-6	DESIGN	1.5840711495410483E-8	IMPLEMENTATION	4.352002760729623E-9	DOCUMENTATION	2.288919785048882E-10	TEST
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9991492436526273	WITHOUT_CLASSIFICATION	7.612470725749168E-4	IMPLEMENTATION	7.298043932119464E-5	DESIGN	1.532048056027758E-5	DEFECT	8.132499053097964E-7	DOCUMENTATION	3.951050109883511E-7	TEST
// in non-select queries, the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.9999999941614353	WITHOUT_CLASSIFICATION	4.5765730585019565E-9	DEFECT	6.093012133891619E-10	TEST	3.95256264303837E-10	DESIGN	1.9197942382796742E-10	IMPLEMENTATION	6.545472765481403E-11	DOCUMENTATION
// this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.9999842052375695	WITHOUT_CLASSIFICATION	1.57628632713808E-5	DESIGN	2.8143375878235768E-8	DEFECT	2.739525267994549E-9	DOCUMENTATION	6.116467059619006E-10	TEST	4.046112835074853E-10	IMPLEMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999673555706405	WITHOUT_CLASSIFICATION	2.9415578998733106E-5	DEFECT	3.208428754488031E-6	DESIGN	1.5840711495410483E-8	IMPLEMENTATION	4.352002760729623E-9	DOCUMENTATION	2.288919785048882E-10	TEST
// even though we might find a pre-existing element by join path, we may not be able to reuse it...	WITHOUT_CLASSIFICATION	0.9991747284990457	WITHOUT_CLASSIFICATION	8.250419948083033E-4	DESIGN	1.1999998217258138E-7	IMPLEMENTATION	6.553042227920414E-8	DEFECT	3.122287101976935E-8	DOCUMENTATION	1.2752870512233781E-8	TEST
// NOTE : addDuplicateAlias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.9226601264648043	WITHOUT_CLASSIFICATION	0.06797362229033985	DESIGN	0.00926615918610371	IMPLEMENTATION	6.830899570624154E-5	DEFECT	2.8724790717032054E-5	DOCUMENTATION	3.058272328971746E-6	TEST
// if the from-clauses are the same, we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.9999751021504699	WITHOUT_CLASSIFICATION	2.4655748701547656E-5	DESIGN	2.099448605433314E-7	DEFECT	2.0352640780117773E-8	TEST	9.083697967615297E-9	IMPLEMENTATION	2.719629235398262E-9	DOCUMENTATION
// again, null != null here	WITHOUT_CLASSIFICATION	0.9999970026650831	WITHOUT_CLASSIFICATION	2.128560379738848E-6	DESIGN	4.723805142714809E-7	IMPLEMENTATION	2.244634438107505E-7	DEFECT	1.4480055464880736E-7	TEST	2.713002426667728E-8	DOCUMENTATION
// If this is an implied join in a from element, then use the impled join type which is part of the // tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.9999964855174549	WITHOUT_CLASSIFICATION	3.5108500597618023E-6	DESIGN	2.1953212306315645E-9	DEFECT	8.792210012387033E-10	IMPLEMENTATION	4.208435562687784E-10	DOCUMENTATION	1.3709963553438721E-10	TEST
// otherwise (subquery case) dont reuse the fromElement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.9999856357156378	WITHOUT_CLASSIFICATION	1.2936438339365572E-5	DESIGN	1.2147536266153878E-6	DEFECT	1.452879260358773E-7	IMPLEMENTATION	6.381893125928376E-8	DOCUMENTATION	3.985538879722031E-9	TEST
// we know only the lhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999770392025522	WITHOUT_CLASSIFICATION	1.8060119142701073E-5	IMPLEMENTATION	4.03673791967803E-6	DESIGN	7.678338393022307E-7	DOCUMENTATION	8.631424238013864E-8	DEFECT	9.792303711690324E-9	TEST
// the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.9999996955367862	WITHOUT_CLASSIFICATION	1.6180446805400588E-7	IMPLEMENTATION	1.217854597554379E-7	DEFECT	1.3959401510502484E-8	DOCUMENTATION	4.400831823903944E-9	TEST	2.5130527670334212E-9	DESIGN
// only the identifier property field name can be a reference to the associated entity's PK...	WITHOUT_CLASSIFICATION	0.9999905404201577	WITHOUT_CLASSIFICATION	9.434930879171299E-6	DESIGN	9.320661484873761E-9	IMPLEMENTATION	8.240619153729553E-9	DOCUMENTATION	4.88404136450434E-9	TEST	2.203640979250576E-9	DEFECT
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999309087403915	WITHOUT_CLASSIFICATION	6.294408485501978E-5	DEFECT	3.2898254668168736E-6	IMPLEMENTATION	1.5196705770061189E-6	TEST	8.420560964861416E-7	DESIGN	4.956226131419701E-7	DOCUMENTATION
// Append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.9989560453782065	WITHOUT_CLASSIFICATION	9.077832145423486E-4	IMPLEMENTATION	1.0405932379293563E-4	DESIGN	2.6864581074122635E-5	DEFECT	4.093092591205214E-6	DOCUMENTATION	1.1544097927577121E-6	TEST
// If the lhs is a collection, use CollectionPropertyMapping	WITHOUT_CLASSIFICATION	0.9999970045996122	WITHOUT_CLASSIFICATION	1.9516229820283085E-6	DESIGN	1.0232240821818469E-6	DEFECT	1.3188316210775943E-8	IMPLEMENTATION	3.864941364058816E-9	TEST	3.5000661865641425E-9	DOCUMENTATION
// Tell the destination fromElement to 'includeSubclasses'.	WITHOUT_CLASSIFICATION	0.9999430427022438	WITHOUT_CLASSIFICATION	5.484400540525737E-5	DESIGN	1.5071869023288881E-6	DOCUMENTATION	2.979560948665642E-7	IMPLEMENTATION	2.0376068631232256E-7	DEFECT	1.043886676044196E-7	TEST
// Use theta style (for regression) // Move the node up, after the origin node.	WITHOUT_CLASSIFICATION	0.9999997221384705	WITHOUT_CLASSIFICATION	1.7010327703083906E-7	DESIGN	8.68055406166407E-8	IMPLEMENTATION	1.6352542908486138E-8	DEFECT	2.646430796798954E-9	DOCUMENTATION	1.9537380799622347E-9	TEST
// Don't resolve the node again.	WITHOUT_CLASSIFICATION	0.999846957472228	WITHOUT_CLASSIFICATION	1.4546370096380667E-4	IMPLEMENTATION	4.669078893258026E-6	DESIGN	1.2320108269080309E-6	DOCUMENTATION	1.0870624918415513E-6	TEST	5.906745962959314E-7	DEFECT
// for expected parameter type injection, we expect that the lhs represents // some form of property ref and that the children of the in-list represent // one-or-more params.	WITHOUT_CLASSIFICATION	0.9999985439487254	WITHOUT_CLASSIFICATION	1.3655529210415827E-6	DESIGN	5.755993648683191E-8	TEST	2.1837184472979126E-8	DOCUMENTATION	8.721147546807972E-9	IMPLEMENTATION	2.3800849404866936E-9	DEFECT
// we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.9999991758825062	WITHOUT_CLASSIFICATION	7.664190097087252E-7	DESIGN	3.064775774331991E-8	TEST	1.4114905206530193E-8	IMPLEMENTATION	1.1012007503395334E-8	DOCUMENTATION	1.923813619223235E-9	DEFECT
// we have something like : "? [op] rhs"	WITHOUT_CLASSIFICATION	0.9847236087012042	WITHOUT_CLASSIFICATION	0.013421562015858115	DESIGN	0.0011345305513227842	IMPLEMENTATION	3.662377945310696E-4	DEFECT	2.0003799292343436E-4	TEST	1.5402294416030213E-4	DOCUMENTATION
// we have something like : "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.9962596147060266	WITHOUT_CLASSIFICATION	0.0030153136268603656	DESIGN	3.3680057085279494E-4	DEFECT	2.1172521370998543E-4	IMPLEMENTATION	1.1598914073878882E-4	TEST	6.055674181142476E-5	DOCUMENTATION
// we know only the rhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999753905157448	WITHOUT_CLASSIFICATION	1.8761731544934362E-5	IMPLEMENTATION	5.21058692662868E-6	DESIGN	5.636988843346214E-7	DOCUMENTATION	6.494566925933444E-8	DEFECT	8.521229873562214E-9	TEST
// handle the (assumed) valid cases: // #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.9996720302447765	WITHOUT_CLASSIFICATION	3.120437100505642E-4	DESIGN	1.315005779048679E-5	DEFECT	2.5546710186237796E-6	IMPLEMENTATION	1.7004096196203956E-7	TEST	5.1275402046649555E-8	DOCUMENTATION
// one or the other needs to be a datetime for us to get into this method in the first place...	WITHOUT_CLASSIFICATION	0.8990416736798252	DESIGN	0.10095790451871327	WITHOUT_CLASSIFICATION	2.0386325862091598E-7	IMPLEMENTATION	1.6365748108690454E-7	TEST	3.0832289623051354E-8	DOCUMENTATION	2.3448432059433E-8	DEFECT
// #3 - note that this is also true of "datetime - :param"...	WITHOUT_CLASSIFICATION	0.9906459130802082	WITHOUT_CLASSIFICATION	0.009121132490327716	DESIGN	1.2961272833581075E-4	IMPLEMENTATION	8.040803686678088E-5	DEFECT	1.477200898686732E-5	TEST	8.16165527450328E-6	DOCUMENTATION
// #2	WITHOUT_CLASSIFICATION	0.9999960176642191	WITHOUT_CLASSIFICATION	1.9537706338605206E-6	DESIGN	1.4959315271883467E-6	DEFECT	2.948769600300261E-7	IMPLEMENTATION	1.2131528251510092E-7	TEST	1.1644137739315547E-7	DOCUMENTATION
// Generate the inner join -- The elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.9999999202556809	WITHOUT_CLASSIFICATION	7.587547843523415E-8	DESIGN	2.5437108060325835E-9	IMPLEMENTATION	6.248438233193106E-10	DOCUMENTATION	5.780833777027744E-10	TEST	1.2220267053023467E-10	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9998049724595838	WITHOUT_CLASSIFICATION	1.251179091611697E-4	IMPLEMENTATION	3.8569436248610766E-5	DESIGN	2.2396751716152813E-5	DEFECT	6.854887702674306E-6	DOCUMENTATION	2.088555587528164E-6	TEST
// The 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.9999966165108022	WITHOUT_CLASSIFICATION	2.612989871439427E-6	DEFECT	3.915825348278048E-7	DESIGN	3.711738998573038E-7	IMPLEMENTATION	3.895049510551998E-9	DOCUMENTATION	3.847842113854651E-9	TEST
// Add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.9999995766111021	WITHOUT_CLASSIFICATION	3.769725805902606E-7	IMPLEMENTATION	2.4149041405745898E-8	DESIGN	1.786332413291458E-8	DOCUMENTATION	3.6103712938436316E-9	DEFECT	7.935806181337841E-10	TEST
// Sometimes use the element table alias, sometimes use the... umm... collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.9999490788311054	WITHOUT_CLASSIFICATION	3.744774380724965E-5	DESIGN	1.240032382358342E-5	IMPLEMENTATION	6.950121528323929E-7	DOCUMENTATION	3.491793508763719E-7	DEFECT	2.890976017247059E-8	TEST
// Now, set the text for this node.  It should be the element columns.	WITHOUT_CLASSIFICATION	0.9967919614787386	WITHOUT_CLASSIFICATION	0.003064174563526073	DESIGN	1.4069494501095872E-4	IMPLEMENTATION	3.080104786983705E-6	TEST	6.436540933778178E-8	DOCUMENTATION	2.4542527887624498E-8	DEFECT
// Get the function return value type, based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.9999999636365527	WITHOUT_CLASSIFICATION	2.9642676470378494E-8	IMPLEMENTATION	4.314790447273257E-9	DESIGN	1.1951131615624538E-9	DEFECT	1.154941121808584E-9	DOCUMENTATION	5.5926001592301365E-11	TEST
// This will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.9999741599738228	WITHOUT_CLASSIFICATION	1.6159354639598936E-5	DEFECT	7.485084130909116E-6	IMPLEMENTATION	2.0086455878892156E-6	DESIGN	1.3640515907494368E-7	DOCUMENTATION	5.0536659622473864E-8	TEST
// mutation depends on the types of nodes invloved...	WITHOUT_CLASSIFICATION	0.9999726016946389	WITHOUT_CLASSIFICATION	1.1766176411135576E-5	IMPLEMENTATION	1.0355622482953638E-5	DESIGN	4.936052954667899E-6	DEFECT	2.580009484916811E-7	TEST	8.245256382224656E-8	DOCUMENTATION
// "pass along" our initial embedded parameter node(s) to the first generated // sql fragment so that it can be handled later for parameter binding...	WITHOUT_CLASSIFICATION	0.9947838703430074	WITHOUT_CLASSIFICATION	0.005215762727786511	DESIGN	2.50597659021335E-7	IMPLEMENTATION	1.1402784035142904E-7	TEST	1.3459602471839342E-9	DOCUMENTATION	9.577465562838317E-10	DEFECT
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999991687933224	WITHOUT_CLASSIFICATION	7.416757661493147E-7	DESIGN	7.872479083462925E-8	IMPLEMENTATION	7.747471841433321E-9	DEFECT	2.5929882542343727E-9	TEST	4.6566051094904895E-10	DOCUMENTATION
// Generated select expressions are already resolved, nothing to do.	WITHOUT_CLASSIFICATION	0.9999996872295488	WITHOUT_CLASSIFICATION	2.6090157446174514E-7	DESIGN	3.5921984587531576E-8	IMPLEMENTATION	7.374763857566925E-9	DEFECT	4.87798037026363E-9	DOCUMENTATION	3.694147805165878E-9	TEST
// The path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.999995162399783	WITHOUT_CLASSIFICATION	4.673659229819298E-6	DESIGN	1.531207412390059E-7	DEFECT	6.556807741639444E-9	DOCUMENTATION	3.882311806433488E-9	IMPLEMENTATION	3.811264836854218E-10	TEST
// The HQL class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.9999998577539538	WITHOUT_CLASSIFICATION	1.3557769966300762E-7	DESIGN	5.429275430712775E-9	DEFECT	8.055321726258923E-10	DOCUMENTATION	3.7860560056958767E-10	IMPLEMENTATION	5.4933397030447653E-11	TEST
// Associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.9999979974924849	WITHOUT_CLASSIFICATION	9.750859892339595E-7	DESIGN	8.919957960359158E-7	IMPLEMENTATION	7.44131686970675E-8	TEST	5.338074848061086E-8	DOCUMENTATION	7.631812781008405E-9	DEFECT
// try the parent FromClause...	WITHOUT_CLASSIFICATION	0.9999940184161398	WITHOUT_CLASSIFICATION	5.686236991135339E-6	IMPLEMENTATION	1.5439014149766656E-7	DESIGN	7.225250708418068E-8	DEFECT	5.656859888528885E-8	DOCUMENTATION	1.213562177752277E-8	TEST
// Add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.9999991658157712	WITHOUT_CLASSIFICATION	6.309104122647671E-7	IMPLEMENTATION	1.3933465079846913E-7	DESIGN	3.415079868939718E-8	DOCUMENTATION	2.2538090618680755E-8	TEST	7.250276501361936E-9	DEFECT
// Make sure that all from elements registered with this FROM clause are actually in the AST.	WITHOUT_CLASSIFICATION	0.9999710842890823	WITHOUT_CLASSIFICATION	2.890004810479641E-5	DESIGN	9.534271836939163E-9	IMPLEMENTATION	2.7046514521317117E-9	DOCUMENTATION	2.3431813948186385E-9	DEFECT	1.0807082808838322E-9	TEST
// Invoke setScalarColumnText on each constructor argument.	WITHOUT_CLASSIFICATION	0.999997222402374	WITHOUT_CLASSIFICATION	1.826108633590022E-6	DESIGN	5.964896309138258E-7	IMPLEMENTATION	2.7620089408278933E-7	DOCUMENTATION	7.34545195993632E-8	DEFECT	5.343947751469086E-9	TEST
// Collect the select expressions, skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.999999973067895	WITHOUT_CLASSIFICATION	2.200449913166331E-8	DESIGN	2.28036079913763E-9	IMPLEMENTATION	2.1842011530538535E-9	DEFECT	4.0069339052425636E-10	TEST	6.235060582438113E-11	DOCUMENTATION
// return an empty Type array	WITHOUT_CLASSIFICATION	0.9999956509949235	WITHOUT_CLASSIFICATION	4.327588444325581E-6	DESIGN	8.38128887810521E-9	DEFECT	6.198935135308233E-9	DOCUMENTATION	4.971113754491107E-9	IMPLEMENTATION	1.865294566133717E-9	TEST
// Constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.9995802069635161	WITHOUT_CLASSIFICATION	4.182519549154937E-4	DESIGN	7.56746274154801E-7	DEFECT	6.928738635879656E-7	IMPLEMENTATION	4.9892787871012665E-8	TEST	4.156864275154901E-8	DOCUMENTATION
// this is the exception returned by ReflectHelper.getConstructor() if it cannot // locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.9999993035765474	WITHOUT_CLASSIFICATION	5.103746866346688E-7	DESIGN	1.837918979418828E-7	DEFECT	2.147878601693514E-9	TEST	1.0212666638426665E-10	IMPLEMENTATION	6.8627606918097836E-12	DOCUMENTATION
// if there is no order by, make one	WITHOUT_CLASSIFICATION	0.9999988777142078	WITHOUT_CLASSIFICATION	6.278314027382892E-7	DESIGN	4.0811755196634753E-7	TEST	4.8428140944083614E-8	IMPLEMENTATION	3.4702667754029345E-8	DEFECT	3.2060287143017703E-9	DOCUMENTATION
// Find the WHERE; if there is no WHERE, find the FROM...	WITHOUT_CLASSIFICATION	0.9999976052893907	WITHOUT_CLASSIFICATION	1.739153536258029E-6	DESIGN	3.0985784510310806E-7	TEST	2.548259255470684E-7	IMPLEMENTATION	7.644915171339152E-8	DEFECT	1.4424150615686942E-8	DOCUMENTATION
// Now, inject the newly built ORDER BY into the tree	WITHOUT_CLASSIFICATION	0.9999686525945605	WITHOUT_CLASSIFICATION	2.5086257319161486E-5	DESIGN	3.7258349310043272E-6	IMPLEMENTATION	1.511785991102436E-6	DOCUMENTATION	7.898736669245918E-7	DEFECT	2.3365353125602323E-7	TEST
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999906418231053	WITHOUT_CLASSIFICATION	5.146110324637606E-6	IMPLEMENTATION	3.2277903672574503E-6	DESIGN	5.372422807257952E-7	DEFECT	3.545086891948315E-7	TEST	9.25252329285188E-8	DOCUMENTATION
// logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.9999984809379302	WITHOUT_CLASSIFICATION	1.3372406380437172E-6	DESIGN	1.5594366509434042E-7	IMPLEMENTATION	1.808003233533951E-8	DEFECT	6.7858957735245544E-9	TEST	1.011838598776019E-9	DOCUMENTATION
// Render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.9999654465756517	WITHOUT_CLASSIFICATION	3.1800590275209015E-5	DESIGN	2.4904270610118785E-6	IMPLEMENTATION	1.8161524440908114E-7	TEST	6.594461751145097E-8	DOCUMENTATION	1.4847150114945649E-8	DEFECT
// Class names in the FROM clause result in a JoinSequence (the old FromParser does this).	WITHOUT_CLASSIFICATION	0.9999988890804264	WITHOUT_CLASSIFICATION	6.698494899675843E-7	DESIGN	4.33878518635884E-7	DEFECT	5.101260984415085E-9	DOCUMENTATION	2.0697836396309918E-9	TEST	2.0520472163923243E-11	IMPLEMENTATION
// For many-to-many joins, use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.9999948951888894	WITHOUT_CLASSIFICATION	4.581324197110819E-6	DESIGN	4.7143835859667337E-7	IMPLEMENTATION	1.9642749312325686E-8	TEST	1.6614578688465324E-8	DEFECT	1.579122696137105E-8	DOCUMENTATION
// Otherwise, use the property mapping.	WITHOUT_CLASSIFICATION	0.9999896590073437	WITHOUT_CLASSIFICATION	7.550024256618758E-6	IMPLEMENTATION	2.0319041899175648E-6	DEFECT	5.45276483837896E-7	DESIGN	1.8180839890788562E-7	DOCUMENTATION	3.197932710879539E-8	TEST
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999039324583403	WITHOUT_CLASSIFICATION	8.358050332754618E-5	DEFECT	9.056607065069914E-6	DESIGN	2.8078556658490254E-6	IMPLEMENTATION	4.892263398037665E-7	TEST	1.3334926149307003E-7	DOCUMENTATION
// If the property is a special collection property name, return a CollectionPropertyMapping.	WITHOUT_CLASSIFICATION	0.9999733711029115	WITHOUT_CLASSIFICATION	1.4076259649371772E-5	DEFECT	1.2340340799127236E-5	IMPLEMENTATION	1.83720928597174E-7	DESIGN	2.134451402689322E-8	DOCUMENTATION	7.23119736336532E-9	TEST
// Collection of components.	WITHOUT_CLASSIFICATION	0.9998381206345922	WITHOUT_CLASSIFICATION	1.610876094636324E-4	DESIGN	3.6220214560301816E-7	IMPLEMENTATION	1.7627191020289586E-7	DOCUMENTATION	1.4599701372405578E-7	DEFECT	1.072848746741793E-7	TEST
// make sure the lhs is "assignable"...	WITHOUT_CLASSIFICATION	0.9999946151629768	WITHOUT_CLASSIFICATION	4.822422969335133E-6	DESIGN	3.501213183324171E-7	DEFECT	1.604638902893305E-7	TEST	3.814277598346627E-8	IMPLEMENTATION	1.3686069280626424E-8	DOCUMENTATION
// false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.9999963548821572	WITHOUT_CLASSIFICATION	3.4009888914563955E-6	DESIGN	1.4777006111261723E-7	IMPLEMENTATION	5.455643943960632E-8	DOCUMENTATION	2.216093179393436E-8	DEFECT	1.9641519166716837E-8	TEST
// Register the FromElement with the FROM clause, now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.9999842718306372	WITHOUT_CLASSIFICATION	9.505633817783788E-6	DESIGN	6.160607150570098E-6	IMPLEMENTATION	3.771757160880887E-8	TEST	1.2503148587908238E-8	DEFECT	1.1707674134063521E-8	DOCUMENTATION
// currently allowed...	WITHOUT_CLASSIFICATION	0.9998534724633762	WITHOUT_CLASSIFICATION	8.68824470057493E-5	IMPLEMENTATION	5.079993244555937E-5	DESIGN	6.084634672879792E-6	DEFECT	2.629476551996575E-6	DOCUMENTATION	1.3104594759148434E-7	TEST
// HHH-276 : implied joins in a subselect where clause - The destination needs to be added // to the destination's from clause. // Not sure if this is will fix everything, but it works.	WITHOUT_CLASSIFICATION	0.8794946229223412	WITHOUT_CLASSIFICATION	0.10860295639019517	DEFECT	0.011885062630982525	DESIGN	1.6862786407647595E-5	TEST	4.721066975674715E-7	DOCUMENTATION	2.316337601194781E-8	IMPLEMENTATION
//return classAlias == null ? className : classAlias;	WITHOUT_CLASSIFICATION	0.987634721591199	WITHOUT_CLASSIFICATION	0.0123632258518975	DESIGN	1.4436159108179864E-6	DEFECT	2.5938553230333567E-7	IMPLEMENTATION	2.3440023939048275E-7	DOCUMENTATION	1.1515522100248945E-7	TEST
// This is an explicit FROM element.	WITHOUT_CLASSIFICATION	0.999642929532931	WITHOUT_CLASSIFICATION	3.5472736488134106E-4	DESIGN	1.7098360028098764E-6	DEFECT	2.69598408593373E-7	DOCUMENTATION	2.453896582477866E-7	TEST	1.1827811806790271E-7	IMPLEMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999906418231053	WITHOUT_CLASSIFICATION	5.146110324637606E-6	IMPLEMENTATION	3.2277903672574503E-6	DESIGN	5.372422807257952E-7	DEFECT	3.545086891948315E-7	TEST	9.25252329285188E-8	DOCUMENTATION
// Fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.9999531554050676	WITHOUT_CLASSIFICATION	4.091502557487666E-5	IMPLEMENTATION	5.035390013849251E-6	DESIGN	7.642659173060837E-7	DEFECT	8.039786483956314E-8	TEST	4.951556143993849E-8	DOCUMENTATION
// If it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.9999893379353093	WITHOUT_CLASSIFICATION	8.071522895944132E-6	IMPLEMENTATION	2.558526440425727E-6	DEFECT	2.2454819366127642E-8	DESIGN	5.853711525474917E-9	TEST	3.7068233035896467E-9	DOCUMENTATION
// Since this is an explicit FROM element, it can't be implied in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999990304082392	WITHOUT_CLASSIFICATION	9.604890288356566E-7	DESIGN	4.233125971215648E-9	DEFECT	4.0000408654351E-9	DOCUMENTATION	6.595622153942538E-10	TEST	2.1000297237099648E-10	IMPLEMENTATION
// Do nothing, eplicit from elements are *always* in the projection list.	WITHOUT_CLASSIFICATION	0.9999879299664955	WITHOUT_CLASSIFICATION	1.1733619604477903E-5	DESIGN	1.39401848291662E-7	DOCUMENTATION	9.35196724644419E-8	DEFECT	8.929592617672219E-8	IMPLEMENTATION	1.4196453038084377E-8	TEST
// propertyName refers to something like collection.size...	WITHOUT_CLASSIFICATION	0.9999889554310881	WITHOUT_CLASSIFICATION	4.28593486439525E-6	DESIGN	3.915907213332961E-6	DEFECT	2.20519847057563E-6	IMPLEMENTATION	3.576415444324777E-7	TEST	2.798868191228868E-7	DOCUMENTATION
// property name is a sub-path of a component...	WITHOUT_CLASSIFICATION	0.9999992529604412	WITHOUT_CLASSIFICATION	4.764178065419167E-7	DEFECT	2.5927834684538103E-7	DESIGN	7.879645537821998E-9	IMPLEMENTATION	2.1399245751487937E-9	TEST	1.3238352853323112E-9	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9991492436526273	WITHOUT_CLASSIFICATION	7.612470725749168E-4	IMPLEMENTATION	7.298043932119464E-5	DESIGN	1.532048056027758E-5	DEFECT	8.132499053097964E-7	DOCUMENTATION	3.951050109883511E-7	TEST
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999849818542014	WITHOUT_CLASSIFICATION	1.272479056480939E-5	DESIGN	2.0733654464474635E-6	TEST	1.3531914328702623E-7	IMPLEMENTATION	7.860408372590177E-8	DEFECT	6.066560462208568E-9	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999991687933224	WITHOUT_CLASSIFICATION	7.416757661493147E-7	DESIGN	7.872479083462925E-8	IMPLEMENTATION	7.747471841433321E-9	DEFECT	2.5929882542343727E-9	TEST	4.6566051094904895E-10	DOCUMENTATION
// DotNode uses null here...	WITHOUT_CLASSIFICATION	0.9751036304469867	WITHOUT_CLASSIFICATION	0.024010876418800835	DESIGN	7.981134287916587E-4	IMPLEMENTATION	6.501417643910229E-5	DEFECT	1.884171491781883E-5	TEST	3.523814063942352E-6	DOCUMENTATION
// We represent a from-clause alias	WITHOUT_CLASSIFICATION	0.9999992236116705	WITHOUT_CLASSIFICATION	4.4980125068526464E-7	DESIGN	1.6410728465086814E-7	DEFECT	1.247935323093166E-7	IMPLEMENTATION	3.463625558763405E-8	DOCUMENTATION	3.0500063562166854E-9	TEST
// we are the LHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999998183403938	WITHOUT_CLASSIFICATION	1.1509699176809834E-7	DESIGN	4.68403189395371E-8	DEFECT	1.2181805319032018E-8	DOCUMENTATION	7.011492534863134E-9	TEST	5.289976047247484E-10	IMPLEMENTATION
// we are the RHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999996937197965	WITHOUT_CLASSIFICATION	2.0137970292494867E-7	DESIGN	6.760609779729862E-8	DEFECT	2.2374316344147836E-8	DOCUMENTATION	1.2331547964524635E-8	TEST	2.5885386741529123E-9	IMPLEMENTATION
// we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.9999940557306292	WITHOUT_CLASSIFICATION	4.383924101865847E-6	DESIGN	1.152740832712456E-6	DEFECT	3.580546213287184E-7	IMPLEMENTATION	2.7110627138980535E-8	DOCUMENTATION	2.2439187834745156E-8	TEST
// EARLY EXIT!!!  return so the resolve call explicitly coming from DotNode can // resolve this...	WITHOUT_CLASSIFICATION	0.9981723075924436	WITHOUT_CLASSIFICATION	0.0017841206803084451	DESIGN	3.76533334530759E-5	DEFECT	5.212630033346883E-6	DOCUMENTATION	3.847678132614602E-7	IMPLEMENTATION	3.2099594851470973E-7	TEST
// assume this ident's text does *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9996612237031542	WITHOUT_CLASSIFICATION	3.2698708312248133E-4	DESIGN	1.1080675465521832E-5	DEFECT	4.5771820341421424E-7	TEST	2.3542122318878338E-7	DOCUMENTATION	1.5398831257880346E-8	IMPLEMENTATION
// just ignore it for now, it'll get resolved later...	WITHOUT_CLASSIFICATION	0.9936714574379041	WITHOUT_CLASSIFICATION	0.00626462016844903	DESIGN	5.721188861148973E-5	DEFECT	4.061262389274399E-6	TEST	2.5306062052340025E-6	IMPLEMENTATION	1.1863644098228411E-7	DOCUMENTATION
// This is not actually a constant, but a reference to FROM element.	WITHOUT_CLASSIFICATION	0.9990172455462931	WITHOUT_CLASSIFICATION	9.742124489080839E-4	DESIGN	8.191131820909767E-6	DEFECT	3.265956480145275E-7	IMPLEMENTATION	2.2326795268085448E-8	DOCUMENTATION	1.95053462329131E-9	TEST
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999853357666735	WITHOUT_CLASSIFICATION	1.4566251876416462E-5	DESIGN	9.057369921017081E-8	DEFECT	3.6415702460316423E-9	IMPLEMENTATION	3.1930140769917843E-9	DOCUMENTATION	5.731666304518016E-10	TEST
// these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9999997672285726	WITHOUT_CLASSIFICATION	1.1350259040004836E-7	IMPLEMENTATION	1.0081340393224499E-7	DESIGN	1.0323147718816666E-8	DOCUMENTATION	7.963842383217073E-9	TEST	1.6844288612272518E-10	DEFECT
// used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.9990437039272912	WITHOUT_CLASSIFICATION	9.425620357443423E-4	DESIGN	1.2759359568824904E-5	IMPLEMENTATION	8.454489415064632E-7	DOCUMENTATION	8.600999768274122E-8	TEST	4.3218456270774037E-8	DEFECT
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999881427603508	WITHOUT_CLASSIFICATION	1.1003811024116181E-5	DESIGN	7.574985234247902E-7	DEFECT	6.106293175876537E-8	DOCUMENTATION	2.97511670057256E-8	IMPLEMENTATION	5.11600288550183E-9	TEST
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999881427603508	WITHOUT_CLASSIFICATION	1.1003811024116181E-5	DESIGN	7.574985234247902E-7	DEFECT	6.106293175876537E-8	DOCUMENTATION	2.97511670057256E-8	IMPLEMENTATION	5.11600288550183E-9	TEST
// naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.9997774787464858	WITHOUT_CLASSIFICATION	2.2243180109766418E-4	DESIGN	8.221257311496492E-8	DEFECT	4.802944643625849E-9	TEST	1.609543999795895E-9	DOCUMENTATION	8.273548862391409E-10	IMPLEMENTATION
// this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9999997959426237	WITHOUT_CLASSIFICATION	1.5621549963111425E-7	DESIGN	2.7058091655901653E-8	IMPLEMENTATION	1.0327505774781807E-8	TEST	1.015177862269485E-8	DOCUMENTATION	3.045005667066046E-10	DEFECT
// do *not* over-write the column text, as that has already been // "rendered" during resolve	WITHOUT_CLASSIFICATION	0.9999998769148392	WITHOUT_CLASSIFICATION	1.1724886162262198E-7	DESIGN	3.0736701746935518E-9	IMPLEMENTATION	2.2906674612958522E-9	DEFECT	3.5430466508285745E-10	TEST	1.1765689995637494E-10	DOCUMENTATION
// for some reason the antlr.CommonAST initialization routines force // this method to get called twice.  The first time with an empty string	WITHOUT_CLASSIFICATION	0.9999443321620617	WITHOUT_CLASSIFICATION	5.565753140555127E-5	DESIGN	9.664395037368672E-9	TEST	2.8967230139159505E-10	DOCUMENTATION	2.2369585344946212E-10	DEFECT	1.2876962770710938E-10	IMPLEMENTATION
// Look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.9999999063837703	WITHOUT_CLASSIFICATION	4.8456251996145214E-8	DESIGN	3.185518653217457E-8	IMPLEMENTATION	9.593252827027316E-9	DEFECT	1.998135451303907E-9	TEST	1.713402834415906E-9	DOCUMENTATION
// Add to the query spaces.	WITHOUT_CLASSIFICATION	0.9999727305155482	WITHOUT_CLASSIFICATION	1.93315137320377E-5	IMPLEMENTATION	7.0317162349053E-6	DESIGN	5.24918662478207E-7	DOCUMENTATION	2.7830274396081864E-7	DEFECT	1.0303307839219224E-7	TEST
// If the from element isn't in the same clause, create a new from element.	WITHOUT_CLASSIFICATION	0.9999981047445347	WITHOUT_CLASSIFICATION	1.5074403732293894E-6	DESIGN	3.7879593574579864E-7	DEFECT	8.306895388566022E-9	DOCUMENTATION	3.9596616831956256E-10	TEST	3.162947073562592E-10	IMPLEMENTATION
// This is the root level node. // Generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.9999240156255211	WITHOUT_CLASSIFICATION	7.5675179332711E-5	DESIGN	2.761904364075291E-7	DEFECT	2.53644501308489E-8	TEST	6.957261108735512E-9	DOCUMENTATION	6.829984171112887E-10	IMPLEMENTATION
// Correlated subqueries create 'special' implied from nodes // because correlated subselects can't use an ANSI-style join	WITHOUT_CLASSIFICATION	0.9999994473084959	WITHOUT_CLASSIFICATION	4.5475122912319695E-7	DEFECT	7.360878945132252E-8	DESIGN	1.1183075124230576E-8	IMPLEMENTATION	9.884446194598234E-9	TEST	3.2639642139715397E-9	DOCUMENTATION
// super-duper-classic-parser-regression-testing-mojo-magic...	WITHOUT_CLASSIFICATION	0.9999739075699523	WITHOUT_CLASSIFICATION	2.6004794663494937E-5	DESIGN	6.443164411387211E-8	TEST	1.2960486651157274E-8	DEFECT	8.619470131802549E-9	DOCUMENTATION	1.6237832292928702E-9	IMPLEMENTATION
// A collection of entities...	WITHOUT_CLASSIFICATION	0.9999316200851961	WITHOUT_CLASSIFICATION	5.0044393062452206E-5	IMPLEMENTATION	1.1428872955823642E-5	DESIGN	5.537683570997767E-6	DEFECT	7.824613949222341E-7	TEST	5.865038196761626E-7	DOCUMENTATION
// A collection of components...	WITHOUT_CLASSIFICATION	0.9999811788495229	WITHOUT_CLASSIFICATION	1.182708861582692E-5	DESIGN	5.300762016847358E-6	IMPLEMENTATION	1.4246655897981125E-6	DEFECT	1.3478278807377424E-7	DOCUMENTATION	1.3385146664114067E-7	TEST
// A collection of scalar elements...	WITHOUT_CLASSIFICATION	0.9999849858010569	WITHOUT_CLASSIFICATION	8.265453261944568E-6	DESIGN	5.017118615080945E-6	IMPLEMENTATION	1.5703408275310287E-6	DEFECT	1.1823621033246547E-7	DOCUMENTATION	4.305002812158056E-8	TEST
// according to both the ANSI-SQL and EJB3 specs, trim can either take // exactly one parameter or a variable number of parameters between 1 and 4. // from the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If only <trim specification> is omitted, BOTH is assumed; // if <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999999951035082	WITHOUT_CLASSIFICATION	3.6344466039877705E-9	DEFECT	7.982138457054503E-10	IMPLEMENTATION	3.513974208655507E-10	DOCUMENTATION	8.322658450500512E-11	TEST	2.9207375861234965E-11	DESIGN
// Don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.9997144408057347	WITHOUT_CLASSIFICATION	2.563362457826864E-4	DESIGN	2.7059247595249268E-5	IMPLEMENTATION	1.7234524852966193E-6	DEFECT	2.419236585622322E-7	TEST	1.983247435860178E-7	DOCUMENTATION
// Treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.9997338711647232	WITHOUT_CLASSIFICATION	2.5344557302082766E-4	DEFECT	1.1964153415167778E-5	DESIGN	5.557308007538002E-7	DOCUMENTATION	9.533071220470021E-8	IMPLEMENTATION	6.804732764376693E-8	TEST
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.9908356685876788	WITHOUT_CLASSIFICATION	0.009158992779312796	DESIGN	2.4019310118023255E-6	DEFECT	2.3318153394944903E-6	TEST	5.780075835162541E-7	DOCUMENTATION	2.6879073525677867E-8	IMPLEMENTATION
// Create the FROM element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.9999999157318752	WITHOUT_CLASSIFICATION	6.74275735061069E-8	DESIGN	1.4963223946423265E-8	IMPLEMENTATION	1.3275541334086819E-9	TEST	3.1732132658125894E-10	DOCUMENTATION	2.324516967150675E-10	DEFECT
// If the join is implied, then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.9999996772536223	WITHOUT_CLASSIFICATION	2.3623656606772493E-7	DESIGN	7.661966750593838E-8	DEFECT	7.50932718752955E-9	IMPLEMENTATION	1.7265188266621683E-9	DOCUMENTATION	6.542982665947252E-10	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999927711465321	WITHOUT_CLASSIFICATION	4.907171403982236E-5	IMPLEMENTATION	1.354088598706007E-5	DESIGN	7.515845949132985E-6	DEFECT	2.0452161647923634E-6	DOCUMENTATION	1.1487253819350909E-7	TEST
// The associated entity is implied, but it must be included in the FROM. // The collection alias is the role.	WITHOUT_CLASSIFICATION	0.9999977316743086	WITHOUT_CLASSIFICATION	2.084998642469484E-6	DESIGN	7.659107659605642E-8	TEST	5.114350035496256E-8	IMPLEMENTATION	4.984046223122435E-8	DEFECT	5.752009810802873E-9	DOCUMENTATION
// Tag this node as a JOIN. // Don't include subclasses in the join. // This is a clollection join.	WITHOUT_CLASSIFICATION	0.9999878763455166	WITHOUT_CLASSIFICATION	9.439212083491078E-6	DEFECT	2.422731738052303E-6	DESIGN	1.3840839456114792E-7	IMPLEMENTATION	9.77876321674564E-8	DOCUMENTATION	2.5514635259024697E-8	TEST
// Get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.9999991925579349	WITHOUT_CLASSIFICATION	6.734948819165171E-7	DESIGN	6.450398679774133E-8	DOCUMENTATION	4.9719427111902E-8	TEST	1.8711036098060666E-8	IMPLEMENTATION	1.0127331918216393E-9	DEFECT
//  origin, path, implied, columns, classAlias,	WITHOUT_CLASSIFICATION	0.9999981768648157	WITHOUT_CLASSIFICATION	1.412755417594874E-6	DESIGN	2.9823413667641104E-7	IMPLEMENTATION	7.559513859543398E-8	DEFECT	2.670139129608775E-8	DOCUMENTATION	9.849100134535654E-9	TEST
/*implied*/	WITHOUT_CLASSIFICATION	0.9988357873813498	WITHOUT_CLASSIFICATION	6.055408985220891E-4	IMPLEMENTATION	5.396240784207355E-4	DESIGN	1.1403501898986455E-5	DEFECT	4.675889905090682E-6	TEST	2.9682499032790267E-6	DOCUMENTATION
// For implied many-to-many, just add the end join.	WITHOUT_CLASSIFICATION	0.9902183481259609	WITHOUT_CLASSIFICATION	0.009778506713863624	IMPLEMENTATION	1.421386298020225E-6	TEST	9.69658117648749E-7	DESIGN	5.492091525306976E-7	DOCUMENTATION	2.0490660728135856E-7	DEFECT
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999927711465321	WITHOUT_CLASSIFICATION	4.907171403982236E-5	IMPLEMENTATION	1.354088598706007E-5	DESIGN	7.515845949132985E-6	DEFECT	2.0452161647923634E-6	DOCUMENTATION	1.1487253819350909E-7	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999927711465321	WITHOUT_CLASSIFICATION	4.907171403982236E-5	IMPLEMENTATION	1.354088598706007E-5	DESIGN	7.515845949132985E-6	DEFECT	2.0452161647923634E-6	DOCUMENTATION	1.1487253819350909E-7	TEST
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999990838491194	WITHOUT_CLASSIFICATION	7.078828043622909E-7	DEFECT	1.3817671403469775E-7	DESIGN	4.6343417477642624E-8	IMPLEMENTATION	1.601030762087541E-8	DOCUMENTATION	7.737637099714217E-9	TEST
// This causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.9998205803126347	WITHOUT_CLASSIFICATION	1.7940236271280285E-4	DESIGN	1.3045908697327368E-8	DEFECT	2.3773476786528113E-9	DOCUMENTATION	1.6595369682000788E-9	TEST	2.4185939701723344E-10	IMPLEMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9997068043774086	WITHOUT_CLASSIFICATION	2.903048824762758E-4	DESIGN	2.1802280324072415E-6	DEFECT	3.6397059942138655E-7	DOCUMENTATION	2.4397328569748985E-7	TEST	1.025681976339668E-7	IMPLEMENTATION
// Frontbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.998699280640557	WITHOUT_CLASSIFICATION	7.76058295118418E-4	IMPLEMENTATION	4.768143727272466E-4	DEFECT	4.1027656310151495E-5	DESIGN	6.3223313892729825E-6	DOCUMENTATION	4.967038979237495E-7	TEST
/*	WITHOUT_CLASSIFICATION	0.9625855444912206	WITHOUT_CLASSIFICATION	0.026097610924683663	DESIGN	0.00739982775603616	DEFECT	0.003707326217175183	IMPLEMENTATION	1.0587277362289763E-4	DOCUMENTATION	1.038178372614674E-4	TEST
/*public Type[] getSqlResultTypes() {	WITHOUT_CLASSIFICATION	0.9304658740443718	WITHOUT_CLASSIFICATION	0.06924018457640117	DESIGN	2.7591773328337904E-4	DEFECT	1.2348458500547592E-5	DOCUMENTATION	3.03671944363807E-6	TEST	2.638467999530827E-6	IMPLEMENTATION
// First, collect all of the select expressions. // NOTE: This must be done *before* invoking setScalarColumnText() because setScalarColumnText() // changes the AST!!!	WITHOUT_CLASSIFICATION	0.9999866320628685	WITHOUT_CLASSIFICATION	1.0261856337319586E-5	IMPLEMENTATION	2.725532174103785E-6	DEFECT	3.6745659091002356E-7	DESIGN	1.1309690621031913E-8	TEST	1.7823386114682428E-9	DOCUMENTATION
// First allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.9841338160303406	WITHOUT_CLASSIFICATION	0.015755694660708402	IMPLEMENTATION	1.1043124991496829E-4	DESIGN	3.1134753603226945E-8	DOCUMENTATION	2.6248886081674714E-8	DEFECT	6.753964902300221E-10	TEST
//sqlResultTypeList.addAll( constructorArgumentTypeList );	WITHOUT_CLASSIFICATION	0.9999538485273153	WITHOUT_CLASSIFICATION	4.4132337923419583E-5	IMPLEMENTATION	1.0332031395847231E-6	DESIGN	5.061403397759793E-7	DEFECT	3.2759783496521705E-7	DOCUMENTATION	1.521934470205019E-7	TEST
// If the data type is not an association type, it could not have been in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999937261578212	WITHOUT_CLASSIFICATION	6.2134794249810765E-6	DESIGN	2.7486360851724753E-8	DEFECT	1.6306350076283E-8	TEST	1.4962917753722295E-8	IMPLEMENTATION	1.6071250857684917E-9	DOCUMENTATION
//sqlResultTypeList.add( type );	WITHOUT_CLASSIFICATION	0.9999916936920107	WITHOUT_CLASSIFICATION	6.308777703398738E-6	DESIGN	1.3423484940711527E-6	IMPLEMENTATION	3.82720878170331E-7	DEFECT	1.740646604840581E-7	TEST	9.839625324592144E-8	DOCUMENTATION
// Always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.999852103947409	WITHOUT_CLASSIFICATION	8.052235761622426E-5	IMPLEMENTATION	6.695254603869669E-5	DESIGN	2.2206381583631108E-7	DEFECT	1.8583412920820992E-7	DOCUMENTATION	1.3250991160650895E-8	TEST
// add the fetched entities	WITHOUT_CLASSIFICATION	0.999996593937452	WITHOUT_CLASSIFICATION	3.2340391299481753E-6	IMPLEMENTATION	7.262957826334888E-8	DOCUMENTATION	6.08008071623054E-8	DESIGN	3.5109017974259025E-8	TEST	3.484014673038202E-9	DEFECT
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999999422444399	WITHOUT_CLASSIFICATION	2.2364492250782142E-8	DEFECT	9.978493703593271E-9	IMPLEMENTATION	9.581962050613093E-9	DOCUMENTATION	8.520514500132408E-9	DESIGN	7.310097493183347E-9	TEST
// function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996653355915409	WITHOUT_CLASSIFICATION	3.062633541906082E-4	IMPLEMENTATION	1.4071881800253235E-5	DEFECT	1.2633895961014682E-5	DESIGN	1.3637838033491703E-6	DOCUMENTATION	3.314927038204765E-7	TEST
// If there are any scalars (non-entities) selected, render the select column aliases.	WITHOUT_CLASSIFICATION	0.9999993042891578	WITHOUT_CLASSIFICATION	6.284327313659102E-7	IMPLEMENTATION	6.071652749492785E-8	DESIGN	3.1224054736184454E-9	DOCUMENTATION	2.393456754221256E-9	DEFECT	1.0457209447370415E-9	TEST
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9998860415617049	WITHOUT_CLASSIFICATION	6.158506376742973E-5	DEFECT	3.610632348394194E-5	DESIGN	1.2724060005025304E-5	IMPLEMENTATION	2.639215366642333E-6	TEST	9.037756720070615E-7	DOCUMENTATION
/*ArrayList sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999932362176258	WITHOUT_CLASSIFICATION	3.0489640554086855E-6	DEFECT	2.934556692257494E-6	IMPLEMENTATION	5.217725982505057E-7	DESIGN	2.2112707025910286E-7	TEST	3.736195807411587E-8	DOCUMENTATION
//sqlResultTypes = ( Type[] ) sqlResultTypeList.toArray( new Type[sqlResultTypeList.size()] );	WITHOUT_CLASSIFICATION	0.9999973562507395	WITHOUT_CLASSIFICATION	1.3371022140603656E-6	DESIGN	7.802764937040093E-7	DEFECT	4.835337429568934E-7	IMPLEMENTATION	2.373627876857271E-8	TEST	1.9100530929965218E-8	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998947316647865	WITHOUT_CLASSIFICATION	6.064392887981716E-5	IMPLEMENTATION	2.6893969977259718E-5	DEFECT	1.6731873056695982E-5	DESIGN	8.206184623198774E-7	DOCUMENTATION	1.7794483746595998E-7	TEST
//TODO:	WITHOUT_CLASSIFICATION	0.9959868378525016	WITHOUT_CLASSIFICATION	0.003030297161439298	DESIGN	4.30944173674738E-4	DEFECT	2.5081771139063213E-4	IMPLEMENTATION	1.9556354431797177E-4	TEST	1.0553955667571234E-4	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999986403076785	WITHOUT_CLASSIFICATION	9.82794580278673E-7	DESIGN	3.619733989934944E-7	IMPLEMENTATION	6.589389951641427E-9	DOCUMENTATION	4.413753073478547E-9	TEST	3.921199066765954E-9	DEFECT
// Generate an 2d array of column names, the first dimension is parallel with the // return types array.  The second dimension is the list of column names for each // type.	WITHOUT_CLASSIFICATION	0.9999998998573729	WITHOUT_CLASSIFICATION	9.818234827501602E-8	DESIGN	1.0195997918856241E-9	IMPLEMENTATION	8.671165244755125E-10	DEFECT	6.565367446204483E-11	TEST	7.908845459552635E-12	DOCUMENTATION
// Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999984199066508	WITHOUT_CLASSIFICATION	1.3610577087389158E-6	IMPLEMENTATION	1.567940713676001E-7	DESIGN	2.8876967047122257E-8	DEFECT	2.4575635513957557E-8	TEST	8.78896645808688E-9	DOCUMENTATION
// union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999923120381491	WITHOUT_CLASSIFICATION	6.009840012472372E-6	DESIGN	1.1483427141934107E-6	IMPLEMENTATION	4.692096029532691E-7	DEFECT	3.914912151016875E-8	DOCUMENTATION	2.142039980305611E-8	TEST
// Skip 'DISTINCT' and 'ALL', so we return the first expression node.	WITHOUT_CLASSIFICATION	0.9999950964363309	WITHOUT_CLASSIFICATION	3.4021399016563707E-6	IMPLEMENTATION	1.1507104670901406E-6	DESIGN	3.11058389085583E-7	DEFECT	3.465951276298219E-8	DOCUMENTATION	4.995398588480939E-9	TEST
// Create SQL_TOKEN nodes for the columns.	WITHOUT_CLASSIFICATION	0.9999885040641078	WITHOUT_CLASSIFICATION	1.1400142865620942E-5	DESIGN	7.160668630746655E-8	TEST	1.0678936239056218E-8	IMPLEMENTATION	8.389146573006572E-9	DOCUMENTATION	5.118257376178182E-9	DEFECT
// Generate the property select tokens.	WITHOUT_CLASSIFICATION	0.9999955353293922	WITHOUT_CLASSIFICATION	2.3218440253059287E-6	DESIGN	1.9824448086817516E-6	IMPLEMENTATION	6.857033075877919E-8	DOCUMENTATION	6.721949554259073E-8	TEST	2.4591947415407965E-8	DEFECT
// Get the function name node.	WITHOUT_CLASSIFICATION	0.9999949447325466	WITHOUT_CLASSIFICATION	4.128376261629041E-6	IMPLEMENTATION	5.371653077117464E-7	DESIGN	2.3453785419655535E-7	DOCUMENTATION	1.013935993417556E-7	DEFECT	5.3794430528329955E-8	TEST
// Method expressions in a SELECT should always be considered scalar.	WITHOUT_CLASSIFICATION	0.8632447658794147	WITHOUT_CLASSIFICATION	0.13663234697216495	DESIGN	1.217989645486118E-4	DEFECT	6.8438206711845E-7	IMPLEMENTATION	2.3752480147125406E-7	DOCUMENTATION	1.6627700318054524E-7	TEST
// If this is 'elements' then create a new FROM element.	WITHOUT_CLASSIFICATION	0.9999991453592993	WITHOUT_CLASSIFICATION	8.198454157783403E-7	DESIGN	1.5028917223543663E-8	DEFECT	1.2999581765222984E-8	TEST	3.4871402220609025E-9	DOCUMENTATION	3.2796457025910637E-9	IMPLEMENTATION
// Not elements(x)	WITHOUT_CLASSIFICATION	0.9994249952048715	WITHOUT_CLASSIFICATION	3.802431848666469E-4	DESIGN	1.831704910069665E-4	IMPLEMENTATION	7.68458068707281E-6	DEFECT	1.9556232865283037E-6	TEST	1.950915281089496E-6	DOCUMENTATION
// Dialect function	WITHOUT_CLASSIFICATION	0.9999874933838059	WITHOUT_CLASSIFICATION	5.6094975052770035E-6	IMPLEMENTATION	3.238730890931043E-6	DESIGN	3.163506598193474E-6	DEFECT	4.165907694327066E-7	DOCUMENTATION	7.829043034038958E-8	TEST
// Collection 'property function'	WITHOUT_CLASSIFICATION	0.9998786526889984	WITHOUT_CLASSIFICATION	1.1450021009582993E-4	DEFECT	6.089828488908492E-6	DESIGN	4.440377578363367E-7	IMPLEMENTATION	2.4684284427220595E-7	DOCUMENTATION	6.639181469147069E-8	TEST
// If the constant is an IDENT, figure out what it means...	WITHOUT_CLASSIFICATION	0.9998319473458085	WITHOUT_CLASSIFICATION	1.654283073131843E-4	DESIGN	1.8235972842564258E-6	DEFECT	4.848141786651339E-7	TEST	2.4546861278050977E-7	IMPLEMENTATION	7.046680256780046E-8	DOCUMENTATION
// IDENT is a class alias in the FROM.	WITHOUT_CLASSIFICATION	0.999993159834057	WITHOUT_CLASSIFICATION	6.816449821647821E-6	DESIGN	8.09358012549338E-9	DEFECT	6.421113483350559E-9	IMPLEMENTATION	6.167263382377887E-9	DOCUMENTATION	3.0341642859918857E-9	TEST
// Resolve to an identity column.	WITHOUT_CLASSIFICATION	0.9987897752352004	WITHOUT_CLASSIFICATION	0.001201864650586349	DESIGN	5.263191726990064E-6	IMPLEMENTATION	1.6561782429828062E-6	DOCUMENTATION	7.75163588535275E-7	DEFECT	6.655806546989634E-7	TEST
// Otherwise, it's a literal.	WITHOUT_CLASSIFICATION	0.9999646911086464	WITHOUT_CLASSIFICATION	2.5791419273961755E-5	IMPLEMENTATION	9.290665845807863E-6	DESIGN	1.2706699895999443E-7	TEST	6.493222012716602E-8	DEFECT	3.480701460716272E-8	DOCUMENTATION
// the name of an entity class	WITHOUT_CLASSIFICATION	0.999987655577868	WITHOUT_CLASSIFICATION	1.1994749797098828E-5	DESIGN	2.539464105062709E-7	DOCUMENTATION	5.089800985514603E-8	IMPLEMENTATION	4.090578643253396E-8	TEST	3.922127963648436E-9	DEFECT
//the class discriminator value	WITHOUT_CLASSIFICATION	0.9999831013084743	WITHOUT_CLASSIFICATION	1.6725385998329738E-5	DESIGN	1.6093720853242185E-7	DEFECT	9.344866534300463E-9	DOCUMENTATION	2.4935607628309767E-9	TEST	5.298915186390226E-10	IMPLEMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999963112587418	WITHOUT_CLASSIFICATION	2.133869511327955E-6	TEST	7.2034130652542E-7	IMPLEMENTATION	4.025974514291279E-7	DEFECT	3.670262202152914E-7	DESIGN	6.490676886145492E-8	DOCUMENTATION
// Add a space before the display text.	WITHOUT_CLASSIFICATION	0.9999971923140909	WITHOUT_CLASSIFICATION	2.669821955591121E-6	IMPLEMENTATION	9.18544226898759E-8	DESIGN	3.269187536022347E-8	DEFECT	7.464444000670115E-9	DOCUMENTATION	5.853211376503123E-9	TEST
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999926927733224	WITHOUT_CLASSIFICATION	6.94953185999993E-6	IMPLEMENTATION	2.2749845578427958E-7	DESIGN	5.053631679405219E-8	DEFECT	4.7394492993147016E-8	TEST	3.2265552216186726E-8	DOCUMENTATION
// child == parent.getFirstChild()	WITHOUT_CLASSIFICATION	0.9999969797556638	WITHOUT_CLASSIFICATION	3.0100818392776537E-6	IMPLEMENTATION	3.684006592199792E-9	DESIGN	2.827275668936996E-9	DEFECT	2.483047824922867E-9	DOCUMENTATION	1.1681667638329438E-9	TEST
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999926927733224	WITHOUT_CLASSIFICATION	6.94953185999993E-6	IMPLEMENTATION	2.2749845578427958E-7	DESIGN	5.053631679405219E-8	DEFECT	4.7394492993147016E-8	TEST	3.2265552216186726E-8	DOCUMENTATION
// Filter conditions need to be inserted before the HQL where condition and the // theta join node.  This is because org.hibernate.loader.Loader binds the filter parameters first, // then it binds all the HQL query parameters, see org.hibernate.loader.Loader.processFilterParameters().	WITHOUT_CLASSIFICATION	0.9999999645836746	WITHOUT_CLASSIFICATION	1.8021012438420386E-8	DESIGN	1.1560692625261083E-8	DEFECT	4.975420090637469E-9	IMPLEMENTATION	5.200127819114951E-10	DOCUMENTATION	3.3918741280058745E-10	TEST
// Put the FILTERS node before the HQL condition and theta joins	WITHOUT_CLASSIFICATION	0.9999982962480567	WITHOUT_CLASSIFICATION	1.1207210184736309E-6	DESIGN	5.620088188831629E-7	IMPLEMENTATION	1.04546202644204E-8	DOCUMENTATION	7.698653365810012E-9	DEFECT	2.8688323408946285E-9	TEST
// add the current fragment to the FILTERS node	WITHOUT_CLASSIFICATION	0.9988788949468221	WITHOUT_CLASSIFICATION	9.730930203781488E-4	IMPLEMENTATION	1.0189853687572836E-4	DESIGN	4.3538350162457836E-5	DOCUMENTATION	1.38196149718465E-6	DEFECT	1.1931842641962691E-6	TEST
// Create a new THETA_JOINS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.999986259338918	WITHOUT_CLASSIFICATION	7.081588237716199E-6	DESIGN	6.518551099394967E-6	IMPLEMENTATION	1.204941546608235E-7	DEFECT	1.1717045048676404E-8	DOCUMENTATION	8.310545185946247E-9	TEST
// Put the THETA_JOINS node before the HQL condition, after the filters.	WITHOUT_CLASSIFICATION	0.9999847549798571	WITHOUT_CLASSIFICATION	1.473944991978757E-5	DESIGN	4.768642273671198E-7	IMPLEMENTATION	1.681368400147719E-8	TEST	8.126133992362308E-9	DOCUMENTATION	3.766177762950638E-9	DEFECT
// add the current fragment to the THETA_JOINS node	WITHOUT_CLASSIFICATION	0.9993203232938773	WITHOUT_CLASSIFICATION	4.762886591538006E-4	IMPLEMENTATION	1.5203325746713495E-4	DESIGN	4.912235852136316E-5	DOCUMENTATION	1.2224870625479276E-6	TEST	1.00994391778444E-6	DEFECT
// First, try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.9999998021474628	WITHOUT_CLASSIFICATION	1.022562156317879E-7	IMPLEMENTATION	3.703344626421097E-8	DEFECT	3.167328822946601E-8	DESIGN	1.6476303955893968E-8	DOCUMENTATION	1.041328311906602E-8	TEST
// unable to locate it using this name	WITHOUT_CLASSIFICATION	0.9999815521386841	WITHOUT_CLASSIFICATION	1.7356838491596584E-5	DESIGN	8.725820504495129E-7	TEST	1.6984011552269486E-7	DEFECT	3.659751295157906E-8	DOCUMENTATION	1.200314536268726E-8	IMPLEMENTATION
// If that didn't work, try using the 'import' name.	WITHOUT_CLASSIFICATION	0.9985291186326921	WITHOUT_CLASSIFICATION	0.0014497861260308546	DEFECT	1.8685280590298874E-5	DESIGN	1.2655696292897743E-6	IMPLEMENTATION	8.697844106709954E-7	DOCUMENTATION	2.7460664693637375E-7	TEST
// Implicit joins use theta style (WHERE pk = fk), explicit joins use JOIN (after from)	WITHOUT_CLASSIFICATION	0.9999983051678294	WITHOUT_CLASSIFICATION	1.1604627764613083E-6	IMPLEMENTATION	5.139205326615856E-7	DESIGN	1.0643107293580753E-8	DEFECT	8.10345700141777E-9	DOCUMENTATION	1.702297052193246E-9	TEST
// locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.9999994575477507	WITHOUT_CLASSIFICATION	3.180834870769377E-7	DESIGN	1.459646620474918E-7	IMPLEMENTATION	4.9079609131579406E-8	DEFECT	1.775516381030243E-8	TEST	1.1569327341347934E-8	DOCUMENTATION
// determine the type of the first argument...	WITHOUT_CLASSIFICATION	0.9999974851899573	WITHOUT_CLASSIFICATION	2.45579493576903E-6	DESIGN	4.072866364747869E-8	DOCUMENTATION	9.089359998935596E-9	IMPLEMENTATION	6.203330478725082E-9	TEST	2.993752708211849E-9	DEFECT
// Use the DOT node to emit the first column name. // Create the column names, folled by the column aliases.	WITHOUT_CLASSIFICATION	0.9999994587788138	WITHOUT_CLASSIFICATION	2.552337142685626E-7	IMPLEMENTATION	2.2714161507275416E-7	DESIGN	4.241642121420141E-8	TEST	1.3227923801028243E-8	DEFECT	3.2015119598500922E-9	DOCUMENTATION
// Note: this simply constructs a "raw" SQL_TOKEN representing the // where fragment and injects this into the tree.  This "works"; // however it is probably not the best long-term solution. // // At some point we probably want to apply an additional grammar to // properly tokenize this where fragment into constituent parts // focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.9997819167054782	DESIGN	1.711239428854133E-4	WITHOUT_CLASSIFICATION	4.345644321027951E-5	DEFECT	3.102439408389147E-6	TEST	3.0342070135072575E-7	DOCUMENTATION	9.704831616044234E-8	IMPLEMENTATION
// Append the text of the current node.	WITHOUT_CLASSIFICATION	0.9992784818932521	WITHOUT_CLASSIFICATION	5.155089235983193E-4	IMPLEMENTATION	1.7535511487979497E-4	DEFECT	1.3758966457871188E-5	DESIGN	1.3024082432670325E-5	DOCUMENTATION	3.8710193793164455E-6	TEST
// If the node has a first child, recurse into the first child.	WITHOUT_CLASSIFICATION	0.9999999099797413	WITHOUT_CLASSIFICATION	8.589860114179229E-8	IMPLEMENTATION	3.548424584026004E-9	DESIGN	2.560880685257181E-10	DOCUMENTATION	1.9432069925069795E-10	DEFECT	1.2282418900362057E-10	TEST
// If there is a second child (RHS), recurse into that child.	WITHOUT_CLASSIFICATION	0.9999989287086374	WITHOUT_CLASSIFICATION	1.0547006155652256E-6	DESIGN	1.34326212902681E-8	IMPLEMENTATION	2.1859408594973034E-9	DEFECT	6.979847583015054E-10	DOCUMENTATION	2.74200233057072E-10	TEST
// Iterate through the alias,JoinSequence pairs and generate SQL token nodes.	WITHOUT_CLASSIFICATION	0.9999995613398663	WITHOUT_CLASSIFICATION	4.32302679189339E-7	DESIGN	3.252038941692358E-9	DOCUMENTATION	1.8400170021350366E-9	TEST	7.031853067938913E-10	DEFECT	5.622131427931457E-10	IMPLEMENTATION
// If the from element represents a JOIN_FRAGMENT and it is // a theta-style join, convert its type from JOIN_FRAGMENT // to FROM_FRAGMENT	WITHOUT_CLASSIFICATION	0.9999988223861231	WITHOUT_CLASSIFICATION	1.135189317288631E-6	DESIGN	3.4838755085380084E-8	IMPLEMENTATION	4.886070411621824E-9	DEFECT	2.2418505535575523E-9	TEST	4.5788349114800474E-10	DOCUMENTATION
// this is used during SqlGenerator processing	WITHOUT_CLASSIFICATION	0.9972593405410922	WITHOUT_CLASSIFICATION	0.0027402511253538553	DESIGN	2.1544785731668658E-7	TEST	1.0137036833302788E-7	DEFECT	8.12641753817742E-8	DOCUMENTATION	1.0251152951174033E-8	IMPLEMENTATION
// If there is a FROM fragment and the FROM element is an explicit, then add the from part.	WITHOUT_CLASSIFICATION	0.9997590738737449	WITHOUT_CLASSIFICATION	2.3968104451639634E-4	DESIGN	7.933265056940409E-7	DEFECT	2.7274384505091607E-7	TEST	9.566100012638256E-8	DOCUMENTATION	8.33503879697375E-8	IMPLEMENTATION
/*&& StringHelper.isNotEmpty( frag )*/	WITHOUT_CLASSIFICATION	0.9982794987493707	WITHOUT_CLASSIFICATION	0.0011517442867272866	DESIGN	5.172059491688122E-4	IMPLEMENTATION	4.587919596196105E-5	DEFECT	3.1598077630935032E-6	TEST	2.5120110080639946E-6	DOCUMENTATION
// The FROM fragment will probably begin with ', '.  Remove this if it is present.	WITHOUT_CLASSIFICATION	0.955222586678634	WITHOUT_CLASSIFICATION	0.04453832831947089	DESIGN	1.579775450032188E-4	DEFECT	7.632480183407357E-5	TEST	4.292968230920286E-6	DOCUMENTATION	4.896868269223953E-7	IMPLEMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999909245518426	WITHOUT_CLASSIFICATION	8.93190856615483E-6	DESIGN	8.153798557832379E-8	DEFECT	6.139793305042149E-8	IMPLEMENTATION	3.5182517242394153E-10	TEST	2.518474847947999E-10	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person ORDER BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999955982725739	WITHOUT_CLASSIFICATION	3.7545855973746077E-6	IMPLEMENTATION	3.0752118630611115E-7	DESIGN	2.3473862875967634E-7	DEFECT	6.938379415821837E-8	TEST	3.5498219585749844E-8	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9996245069171156	WITHOUT_CLASSIFICATION	3.2206457249838274E-4	DESIGN	5.3352218162759525E-5	DEFECT	4.304996679514051E-8	DOCUMENTATION	3.320989658855215E-8	TEST	3.236001619323226E-11	IMPLEMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.999032916809828	WITHOUT_CLASSIFICATION	8.576369101708754E-4	DESIGN	5.253341236107705E-5	DEFECT	4.40389349372376E-5	IMPLEMENTATION	8.561482795961267E-6	TEST	4.312449906969329E-6	DOCUMENTATION
//default mode	WITHOUT_CLASSIFICATION	0.9998386346582661	WITHOUT_CLASSIFICATION	1.5284721197564034E-4	DESIGN	5.5615307250792065E-6	IMPLEMENTATION	1.3783476227539446E-6	DEFECT	7.913892130687609E-7	DOCUMENTATION	7.868621974647556E-7	TEST
//QueryJoinFragment join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999779378471242	WITHOUT_CLASSIFICATION	1.016853914233656E-5	IMPLEMENTATION	9.475634088047826E-6	DESIGN	1.184681341684975E-6	DOCUMENTATION	1.0740266318603762E-6	DEFECT	1.5927167187067E-7	TEST
//reset the dotcount (but not the path) //after reset!	WITHOUT_CLASSIFICATION	0.9999970234305514	WITHOUT_CLASSIFICATION	2.356347135995363E-6	DEFECT	4.735159576595785E-7	IMPLEMENTATION	7.012517591268148E-8	DESIGN	5.931171421891894E-8	TEST	1.7269464768206737E-8	DOCUMENTATION
//after reset!	WITHOUT_CLASSIFICATION	0.9999938722113089	WITHOUT_CLASSIFICATION	2.86729042780271E-6	DEFECT	1.5365922825259467E-6	IMPLEMENTATION	9.710793468970891E-7	DESIGN	6.180548225873645E-7	TEST	1.3477181135663567E-7	DOCUMENTATION
// we don't need to worry about any condition in the ON clause // here (toFromFragmentString), since anything in the ON condition // is already applied to the whole query	WITHOUT_CLASSIFICATION	0.9998588152407878	WITHOUT_CLASSIFICATION	1.1155685690406993E-4	DESIGN	1.6221822407024374E-5	IMPLEMENTATION	9.734908770232101E-6	DOCUMENTATION	3.1810732300135254E-6	DEFECT	4.900979007847568E-7	TEST
// bit_length feels a bit broken to me. We have to cast to char in order to // pass when a numeric value is supplied. But of course the answers given will // be wildly different for these two datatypes. 1234.5678 will be 9 bytes as // a char string but will be 8 or 16 bytes as a true numeric. // Jay Nance 2006-09-22	WITHOUT_CLASSIFICATION	0.9999451116239204	WITHOUT_CLASSIFICATION	5.482903571336329E-5	DESIGN	4.4049977810218013E-8	IMPLEMENTATION	7.560245138289984E-9	DOCUMENTATION	6.479595158881983E-9	DEFECT	1.2505480880942815E-9	TEST
// dotcount>=2	WITHOUT_CLASSIFICATION	0.9999933979348746	WITHOUT_CLASSIFICATION	5.433369522562214E-6	DEFECT	8.786856900078957E-7	DESIGN	1.3593210323762242E-7	IMPLEMENTATION	1.1425550602946912E-7	DOCUMENTATION	3.982230359952148E-8	TEST
// Do the corresponding RHS	WITHOUT_CLASSIFICATION	0.9999625038512434	WITHOUT_CLASSIFICATION	1.8460141166928624E-5	IMPLEMENTATION	1.3206433129821882E-5	DESIGN	2.9763874001607063E-6	DOCUMENTATION	1.944683305549469E-6	DEFECT	9.085037541523197E-7	TEST
//if its "id"	WITHOUT_CLASSIFICATION	0.9999800253977286	WITHOUT_CLASSIFICATION	1.5732984200259256E-5	DESIGN	1.7744304949876489E-6	DEFECT	1.1953278000610218E-6	IMPLEMENTATION	1.0655914960247927E-6	TEST	2.0626827999759944E-7	DOCUMENTATION
//or its the id property name	WITHOUT_CLASSIFICATION	0.9999868356203773	WITHOUT_CLASSIFICATION	1.0791995196814594E-5	DESIGN	1.5798699816552759E-6	DEFECT	3.9642723935654465E-7	TEST	2.1131395139950173E-7	DOCUMENTATION	1.8477325355453386E-7	IMPLEMENTATION
//join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999927492601424	WITHOUT_CLASSIFICATION	3.349211021124725E-6	IMPLEMENTATION	2.782401229464076E-6	DESIGN	6.272933629326907E-7	DOCUMENTATION	4.2325086499295125E-7	DEFECT	6.858337932736571E-8	TEST
//important!!	WITHOUT_CLASSIFICATION	0.9991785960034408	WITHOUT_CLASSIFICATION	4.6490554498246724E-4	DEFECT	2.537990423144525E-4	DESIGN	5.8528220496894085E-5	IMPLEMENTATION	3.556198375832487E-5	DOCUMENTATION	8.609205006974589E-6	TEST
//String[] keyCols = collPersister.getKeyColumnNames();	WITHOUT_CLASSIFICATION	0.9999980248670008	WITHOUT_CLASSIFICATION	1.7089001795268714E-6	DESIGN	1.7308723583624156E-7	DEFECT	4.3746605326472773E-8	IMPLEMENTATION	3.6654072492466095E-8	TEST	1.2744905992234456E-8	DOCUMENTATION
// an association	WITHOUT_CLASSIFICATION	0.9999964614157311	WITHOUT_CLASSIFICATION	2.066030899771639E-6	DESIGN	7.287607577328335E-7	TEST	5.893624193714782E-7	DOCUMENTATION	1.39779715402973E-7	DEFECT	1.4650476823812532E-8	IMPLEMENTATION
//allow index() function:	WITHOUT_CLASSIFICATION	0.9998286821110689	WITHOUT_CLASSIFICATION	1.2974615086292675E-4	DEFECT	2.8954259164183482E-5	IMPLEMENTATION	1.0897344521944445E-5	DESIGN	1.4864934160575355E-6	DOCUMENTATION	2.3364096609530254E-7	TEST
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9899877001880413	WITHOUT_CLASSIFICATION	0.007553566405727898	DEFECT	0.0023047324870452005	DESIGN	1.4978719478127154E-4	TEST	4.2018029627072264E-6	DOCUMENTATION	1.1921441687651285E-8	IMPLEMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9996245069171156	WITHOUT_CLASSIFICATION	3.2206457249838274E-4	DESIGN	5.3352218162759525E-5	DEFECT	4.304996679514051E-8	DOCUMENTATION	3.320989658855215E-8	TEST	3.236001619323226E-11	IMPLEMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9972056468797216	WITHOUT_CLASSIFICATION	0.0010643225476044786	DESIGN	9.503993158980277E-4	DEFECT	5.490812520554582E-4	IMPLEMENTATION	1.9467740697331622E-4	DOCUMENTATION	3.58725977472251E-5	TEST
// collections of values	WITHOUT_CLASSIFICATION	0.9999992799582521	WITHOUT_CLASSIFICATION	3.9158348487257687E-7	DEFECT	3.0070031759090355E-7	DESIGN	1.4745273266668891E-8	IMPLEMENTATION	8.605857159418524E-9	TEST	4.406814989061268E-9	DOCUMENTATION
//opening paren in new Foo ( ... )	WITHOUT_CLASSIFICATION	0.9975325499838007	WITHOUT_CLASSIFICATION	0.0021931098762827997	DESIGN	1.46134657131003E-4	DEFECT	6.093849821093773E-5	DOCUMENTATION	5.597563576696417E-5	IMPLEMENTATION	1.129134880755577E-5	TEST
//if we are inside a new Result(), but not inside a nested function	WITHOUT_CLASSIFICATION	0.9999990056344568	WITHOUT_CLASSIFICATION	6.831710211466554E-7	DESIGN	2.607990674589262E-7	DEFECT	4.250169724400676E-8	TEST	6.333005927391932E-9	DOCUMENTATION	1.5607514454544569E-9	IMPLEMENTATION
//special case	WITHOUT_CLASSIFICATION	0.9999734218263607	WITHOUT_CLASSIFICATION	2.4311045750770534E-5	IMPLEMENTATION	1.2297769597417303E-6	DESIGN	5.021572092771277E-7	DEFECT	4.855129578069341E-7	DOCUMENTATION	4.9680761713960623E-8	TEST
// the name of an SQL function	WITHOUT_CLASSIFICATION	0.999998624975838	WITHOUT_CLASSIFICATION	9.609470759629623E-7	DESIGN	2.8705304220643473E-7	DOCUMENTATION	9.495763442738484E-8	DEFECT	2.412156813545324E-8	TEST	7.944841182673748E-9	IMPLEMENTATION
//null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.9999494491075412	WITHOUT_CLASSIFICATION	5.0042320967447966E-5	DESIGN	2.1497950574177752E-7	DEFECT	1.8963199613271894E-7	DOCUMENTATION	9.346149091166878E-8	IMPLEMENTATION	1.0498498368385416E-8	TEST
//this is basically a copy/paste of OrderByParser ... might be worth refactoring	WITHOUT_CLASSIFICATION	0.9819991605619948	DESIGN	0.01775717572245515	WITHOUT_CLASSIFICATION	2.4204279529939715E-4	DEFECT	1.0214910327371992E-6	TEST	4.455077144172874E-7	IMPLEMENTATION	1.5392150352092803E-7	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person GROUP BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999910928695955	WITHOUT_CLASSIFICATION	6.78312081937295E-6	IMPLEMENTATION	1.5783301664334602E-6	DESIGN	4.0440294665151475E-7	DEFECT	8.556558720220904E-8	TEST	5.5710884847661404E-8	DOCUMENTATION
// return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.9989905304086871	WITHOUT_CLASSIFICATION	0.0010086046488364951	DESIGN	7.913140300336029E-7	DEFECT	2.9786522999875404E-8	DOCUMENTATION	2.2262596679873724E-8	IMPLEMENTATION	2.157932666832634E-8	TEST
//register collection role	WITHOUT_CLASSIFICATION	0.9995248649367808	WITHOUT_CLASSIFICATION	4.6348615466900014E-4	DESIGN	7.766328551176682E-6	IMPLEMENTATION	2.7775647486449774E-6	TEST	8.044716323104457E-7	DEFECT	3.0054361808914975E-7	DOCUMENTATION
// The keyword used to specify an identity column, if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.9999998837178864	WITHOUT_CLASSIFICATION	1.0739116278960707E-7	DESIGN	4.5767279660204366E-9	DOCUMENTATION	2.816744598607454E-9	IMPLEMENTATION	1.0492638467981443E-9	TEST	4.4821445208180915E-10	DEFECT
//.getElementPropertyMapping();	WITHOUT_CLASSIFICATION	0.9997708729953	WITHOUT_CLASSIFICATION	1.5232982665565963E-4	IMPLEMENTATION	5.522279998357494E-5	DEFECT	1.615679079629466E-5	DESIGN	4.129614004036275E-6	DOCUMENTATION	1.287973260404419E-6	TEST
//crossJoins.add(name);	WITHOUT_CLASSIFICATION	0.9998580097954821	WITHOUT_CLASSIFICATION	1.0008380669541214E-4	DESIGN	2.5730672933582426E-5	IMPLEMENTATION	8.416991918164641E-6	DOCUMENTATION	5.4383169322606796E-6	DEFECT	2.3204160385875353E-6	TEST
//ie no select clause in HQL	WITHOUT_CLASSIFICATION	0.9999997581537392	WITHOUT_CLASSIFICATION	1.6777990725367238E-7	DESIGN	6.285407222389855E-8	DOCUMENTATION	6.574395604918725E-9	IMPLEMENTATION	3.408743505886056E-9	DEFECT	1.2291422837061041E-9	TEST
// initialize the Set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.9999923527233048	WITHOUT_CLASSIFICATION	7.592959834501918E-6	DESIGN	3.1430564070820576E-8	IMPLEMENTATION	1.2523031060655828E-8	TEST	6.630067600161405E-9	DEFECT	3.733198002006807E-9	DOCUMENTATION
//ie. no select clause	WITHOUT_CLASSIFICATION	0.9999999219898738	WITHOUT_CLASSIFICATION	4.6142479729138323E-8	DESIGN	2.0539208417471024E-8	IMPLEMENTATION	8.643277999185908E-9	DOCUMENTATION	1.7198236143372997E-9	TEST	9.65336498684786E-10	DEFECT
//there _was_ a select clause	WITHOUT_CLASSIFICATION	0.999999912102955	WITHOUT_CLASSIFICATION	4.115953520543798E-8	IMPLEMENTATION	4.078312270272771E-8	DESIGN	3.912630875591987E-9	TEST	1.1585166833916195E-9	DOCUMENTATION	8.832394603972239E-10	DEFECT
// return the concrete type, or the underlying type if a concrete type // was not specified	WITHOUT_CLASSIFICATION	0.9999882667712059	WITHOUT_CLASSIFICATION	7.75545424449009E-6	DESIGN	3.5479369634727095E-6	IMPLEMENTATION	4.115838319414435E-7	DEFECT	1.1266283137512589E-8	DOCUMENTATION	6.987471107150042E-9	TEST
//many-to-many	WITHOUT_CLASSIFICATION	0.9972056468797216	WITHOUT_CLASSIFICATION	0.0010643225476044786	DESIGN	9.503993158980277E-4	DEFECT	5.490812520554582E-4	IMPLEMENTATION	1.9467740697331622E-4	DOCUMENTATION	3.58725977472251E-5	TEST
//q.addCollection(collectionName, collectionRole);	WITHOUT_CLASSIFICATION	0.9998710275494086	WITHOUT_CLASSIFICATION	5.6574587747608494E-5	DESIGN	5.15560032963267E-5	IMPLEMENTATION	1.4945252787888031E-5	DEFECT	3.2364388864199643E-6	TEST	2.6601678730987833E-6	DOCUMENTATION
// classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.9999600393684711	WITHOUT_CLASSIFICATION	3.705548968084964E-5	DESIGN	2.820305182335157E-6	DEFECT	3.508424186209999E-8	TEST	2.58809477717782E-8	DOCUMENTATION	2.3871475972993855E-8	IMPLEMENTATION
// can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.9999988508946461	WITHOUT_CLASSIFICATION	9.834595942037275E-7	DESIGN	1.2110348430809254E-7	DEFECT	3.767759403483841E-8	DOCUMENTATION	5.333869018501876E-9	TEST	1.5308124525876366E-9	IMPLEMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999834378331248	WITHOUT_CLASSIFICATION	1.6278708373319125E-5	DESIGN	1.8636108028031016E-7	DEFECT	6.512941516297406E-8	DOCUMENTATION	2.4914411356828467E-8	IMPLEMENTATION	7.0535950444312164E-9	TEST
// This is the legacy behaviour for HQL queries...	WITHOUT_CLASSIFICATION	0.9996066729816875	WITHOUT_CLASSIFICATION	3.9030784193277903E-4	DESIGN	3.0014915847817893E-6	DEFECT	1.0542142844354315E-8	TEST	4.584119577825795E-9	DOCUMENTATION	2.558532496650068E-9	IMPLEMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9755033891821447	WITHOUT_CLASSIFICATION	0.017916353520600295	IMPLEMENTATION	0.004415611128146524	DEFECT	0.00195891725017575	DESIGN	1.1909542259760808E-4	DOCUMENTATION	8.663349633494518E-5	TEST
// not known!	WITHOUT_CLASSIFICATION	0.9755033891821447	WITHOUT_CLASSIFICATION	0.017916353520600295	IMPLEMENTATION	0.004415611128146524	DEFECT	0.00195891725017575	DESIGN	1.1909542259760808E-4	DOCUMENTATION	8.663349633494518E-5	TEST
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999933451071924	WITHOUT_CLASSIFICATION	2.705011652586858E-6	DEFECT	1.5080795056317994E-6	IMPLEMENTATION	1.4880970875638265E-6	DESIGN	8.213857740767313E-7	DOCUMENTATION	1.323187879025438E-7	TEST
// not known!	WITHOUT_CLASSIFICATION	0.9755033891821447	WITHOUT_CLASSIFICATION	0.017916353520600295	IMPLEMENTATION	0.004415611128146524	DEFECT	0.00195891725017575	DESIGN	1.1909542259760808E-4	DOCUMENTATION	8.663349633494518E-5	TEST
// not known!	WITHOUT_CLASSIFICATION	0.9755033891821447	WITHOUT_CLASSIFICATION	0.017916353520600295	IMPLEMENTATION	0.004415611128146524	DEFECT	0.00195891725017575	DESIGN	1.1909542259760808E-4	DOCUMENTATION	8.663349633494518E-5	TEST
//Need this, since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.9816942267910282	WITHOUT_CLASSIFICATION	0.017853209219350803	DESIGN	2.6511373373676214E-4	DOCUMENTATION	7.344409693117833E-5	IMPLEMENTATION	6.159504645549442E-5	TEST	5.241111249753951E-5	DEFECT
//tokens that close a sub expression //tokens that open a sub expression //tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.9998900938550351	WITHOUT_CLASSIFICATION	1.0244308702380718E-4	DEFECT	7.238443096623192E-6	DESIGN	1.3362203456732808E-7	TEST	4.9851567873327596E-8	IMPLEMENTATION	4.114124198116023E-8	DOCUMENTATION
//expressionTerminators.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999996146162594	WITHOUT_CLASSIFICATION	3.304858320846518E-7	DESIGN	4.024259352887902E-8	DEFECT	9.75416900083684E-9	IMPLEMENTATION	3.213035703046453E-9	TEST	1.688110392048917E-9	DOCUMENTATION
//expressionOpeners.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.999999550310793	WITHOUT_CLASSIFICATION	2.080250514547615E-7	DESIGN	1.805906402390442E-7	IMPLEMENTATION	5.275772765531173E-8	DEFECT	4.7446290779335705E-9	TEST	3.571158449727498E-9	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource) // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9982967352811873	WITHOUT_CLASSIFICATION	9.823653115054968E-4	DEFECT	7.086335730526821E-4	DESIGN	9.249364776759451E-6	IMPLEMENTATION	2.950931748925384E-6	DOCUMENTATION	6.553772871654257E-8	TEST
// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and "do the right thing" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character (what is to be trimmed off?) // the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.7441524896005435	WITHOUT_CLASSIFICATION	0.2558204465991676	DESIGN	1.3685678592757951E-5	IMPLEMENTATION	1.2755556187313278E-5	DOCUMENTATION	5.55510542940767E-7	TEST	6.705496608394595E-8	DEFECT
//Inside a BETWEEN ... AND ... expression	WITHOUT_CLASSIFICATION	0.9932841632638976	WITHOUT_CLASSIFICATION	0.00412543206625411	DESIGN	0.002268707483716938	DEFECT	3.02310525339991E-4	IMPLEMENTATION	1.5477421693637614E-5	DOCUMENTATION	3.909239097842285E-6	TEST
//were an odd or even number of NOTs encountered //the join string built up by compound paths inside this expression //a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.999999915659447	WITHOUT_CLASSIFICATION	6.176678374729922E-8	DESIGN	1.5929379417586973E-8	DEFECT	3.537990071398383E-9	DOCUMENTATION	2.9366142719803875E-9	TEST	1.6978545917721017E-10	IMPLEMENTATION
//ie. a many-to-many	WITHOUT_CLASSIFICATION	0.9994454831437014	WITHOUT_CLASSIFICATION	4.291829016859448E-4	DESIGN	6.624123696631216E-5	DEFECT	4.820554990885033E-5	IMPLEMENTATION	9.06305799622043E-6	DOCUMENTATION	1.8241097413411223E-6	TEST
//Cope with [,]	WITHOUT_CLASSIFICATION	0.9997252378345681	WITHOUT_CLASSIFICATION	2.3435481712956555E-4	DESIGN	2.2151796565206803E-5	IMPLEMENTATION	6.662417252534225E-6	TEST	6.067331266123327E-6	DOCUMENTATION	5.52580321852386E-6	DEFECT
//Cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.9992361432032182	WITHOUT_CLASSIFICATION	7.603759059154156E-4	DESIGN	2.367225990248209E-6	DEFECT	6.467025600930376E-7	IMPLEMENTATION	2.8603766505832424E-7	DOCUMENTATION	1.8092465104018014E-7	TEST
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9994739664877299	WITHOUT_CLASSIFICATION	4.257325347325122E-4	DESIGN	5.704283070792084E-5	DEFECT	4.097275055226963E-5	IMPLEMENTATION	1.8171227925135243E-6	DOCUMENTATION	4.6827348479309774E-7	TEST
//Cope with a subselect	WITHOUT_CLASSIFICATION	0.9999524705117087	WITHOUT_CLASSIFICATION	4.677430461294159E-5	DESIGN	3.113071508434472E-7	IMPLEMENTATION	1.6677962766426548E-7	DEFECT	1.4481981617117653E-7	TEST	1.322770838757546E-7	DOCUMENTATION
//Cope with special cases of AND, NOT, ()	WITHOUT_CLASSIFICATION	0.9998858235788249	WITHOUT_CLASSIFICATION	7.953053594603296E-5	IMPLEMENTATION	1.4835928529275191E-5	DESIGN	1.4275122761603664E-5	DEFECT	3.9271250420452765E-6	DOCUMENTATION	1.6077088961065506E-6	TEST
//Close extra brackets we opened	WITHOUT_CLASSIFICATION	0.999951167705528	WITHOUT_CLASSIFICATION	4.748106770980087E-5	DESIGN	6.548438008666586E-7	DEFECT	4.0238849692397127E-7	IMPLEMENTATION	1.5946253519499234E-7	DOCUMENTATION	1.345319292108542E-7	TEST
//take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.9788802219942055	WITHOUT_CLASSIFICATION	0.010774051969395652	DESIGN	0.010238801323623594	DEFECT	8.368004972703394E-5	TEST	1.8929214167089995E-5	DOCUMENTATION	4.31544888129004E-6	IMPLEMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999995726462252	WITHOUT_CLASSIFICATION	3.4925609413414187E-7	DESIGN	2.765643433796462E-8	DOCUMENTATION	2.238157693007229E-8	IMPLEMENTATION	2.152742026445587E-8	DEFECT	6.532249160404253E-9	TEST
//process a token, mapping OO path expressions to SQL expressions	WITHOUT_CLASSIFICATION	0.999998189645371	WITHOUT_CLASSIFICATION	1.4362154918280798E-6	DEFECT	2.966408048217331E-7	DESIGN	4.990780766642913E-8	DOCUMENTATION	1.9955173905524643E-8	IMPLEMENTATION	7.63535071798387E-9	TEST
//Open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.9012180931189142	WITHOUT_CLASSIFICATION	0.09859610958121638	DESIGN	7.445866177175897E-5	DOCUMENTATION	5.529569735961454E-5	TEST	3.267424936437918E-5	DEFECT	2.3368691373567013E-5	IMPLEMENTATION
//Cope with special cases of AND, NOT, )	WITHOUT_CLASSIFICATION	0.9998655728710157	WITHOUT_CLASSIFICATION	8.086022691023798E-5	IMPLEMENTATION	2.5201955097033706E-5	DESIGN	2.0788553369124162E-5	DEFECT	4.866948714587941E-6	DOCUMENTATION	2.7094448931889493E-6	TEST
// the next one up must also be	WITHOUT_CLASSIFICATION	0.9999672894806445	WITHOUT_CLASSIFICATION	1.8492197692806575E-5	IMPLEMENTATION	1.2568861833774933E-5	DESIGN	5.958758754573774E-7	TEST	5.893150652528515E-7	DOCUMENTATION	4.6426888830144887E-7	DEFECT
// Add any joins	WITHOUT_CLASSIFICATION	0.9999959773073234	WITHOUT_CLASSIFICATION	3.295967857271947E-6	IMPLEMENTATION	3.991840937795876E-7	DEFECT	1.6712835213466452E-7	DOCUMENTATION	1.1587211677842811E-7	DESIGN	4.454025653952909E-8	TEST
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999995726462252	WITHOUT_CLASSIFICATION	3.4925609413414187E-7	DESIGN	2.765643433796462E-8	DOCUMENTATION	2.238157693007229E-8	IMPLEMENTATION	2.152742026445587E-8	DEFECT	6.532249160404253E-9	TEST
//named query parameter	WITHOUT_CLASSIFICATION	0.999032916809828	WITHOUT_CLASSIFICATION	8.576369101708754E-4	DESIGN	5.253341236107705E-5	DEFECT	4.40389349372376E-5	IMPLEMENTATION	8.561482795961267E-6	TEST	4.312449906969329E-6	DOCUMENTATION
//path expression	WITHOUT_CLASSIFICATION	0.9999671129141185	WITHOUT_CLASSIFICATION	2.3912651692424025E-5	DEFECT	3.9417104273579E-6	IMPLEMENTATION	3.7460246352144343E-6	DESIGN	8.786366294459025E-7	DOCUMENTATION	4.080624968745174E-7	TEST
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999992275010817	WITHOUT_CLASSIFICATION	6.13725700740238E-7	IMPLEMENTATION	1.1614225106117111E-7	DEFECT	2.054414048115166E-8	DESIGN	1.7831219513479035E-8	TEST	4.255606337827908E-9	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999994299944075	WITHOUT_CLASSIFICATION	4.888536037793973E-7	IMPLEMENTATION	5.3431066700123935E-8	DESIGN	1.842239946149275E-8	DEFECT	7.793144807671136E-9	TEST	1.5053778342193282E-9	DOCUMENTATION
//anything else	WITHOUT_CLASSIFICATION	0.9998773734828791	WITHOUT_CLASSIFICATION	9.618831236614142E-5	IMPLEMENTATION	1.462657481834898E-5	DESIGN	8.342804969011169E-6	DOCUMENTATION	2.028241722645106E-6	TEST	1.4405832447349468E-6	DEFECT
// the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.9999983386936256	WITHOUT_CLASSIFICATION	1.3740583932167941E-6	DESIGN	2.668152466397192E-7	DEFECT	1.0907657855768718E-8	IMPLEMENTATION	7.125182632384131E-9	DOCUMENTATION	2.399894100224409E-9	TEST
// careful with this!	WITHOUT_CLASSIFICATION	0.9999985560711385	WITHOUT_CLASSIFICATION	1.3118643001904532E-6	DESIGN	5.4222553847673637E-8	TEST	3.311611778370313E-8	IMPLEMENTATION	2.6290496368688413E-8	DEFECT	1.8435393294879054E-8	DOCUMENTATION
// the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.9996748694569029	WITHOUT_CLASSIFICATION	3.080936834111475E-4	IMPLEMENTATION	1.4206661650055297E-5	DEFECT	2.2995924299060563E-6	DESIGN	2.9750367499575345E-7	TEST	2.3310193114461855E-7	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999861807097284	WITHOUT_CLASSIFICATION	1.2538351551611358E-5	IMPLEMENTATION	5.109555177516338E-7	DOCUMENTATION	2.974160966446298E-7	DESIGN	2.9630252197831454E-7	DEFECT	1.7626458342899261E-7	TEST
//NOTICE: no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.9995407865480817	WITHOUT_CLASSIFICATION	4.4068369734341975E-4	DESIGN	1.7505551851219777E-5	IMPLEMENTATION	8.600105692546902E-7	DOCUMENTATION	9.866631006452994E-8	TEST	6.552584438776056E-8	DEFECT
//cannot instantiate	WITHOUT_CLASSIFICATION	0.9990288499155906	WITHOUT_CLASSIFICATION	8.783704705653001E-4	DESIGN	7.50954240068481E-5	DEFECT	9.064146644362338E-6	IMPLEMENTATION	5.425461096413563E-6	DOCUMENTATION	3.1945820963308627E-6	TEST
// start by looking for HQL keywords...	WITHOUT_CLASSIFICATION	0.9999997747883886	WITHOUT_CLASSIFICATION	1.9115404854425613E-7	DEFECT	2.9047024852755227E-8	DESIGN	2.915835848825233E-9	TEST	1.1210155765692292E-9	IMPLEMENTATION	9.736866797134668E-10	DOCUMENTATION
// inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.9999975296134664	WITHOUT_CLASSIFICATION	2.0347918490449863E-6	DESIGN	3.0889308383370565E-7	DEFECT	7.845046904537213E-8	IMPLEMENTATION	4.063802329822292E-8	TEST	7.61310813166508E-9	DOCUMENTATION
// 'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.999999582022671	WITHOUT_CLASSIFICATION	3.318021115811685E-7	IMPLEMENTATION	6.909215153835568E-8	DEFECT	1.499703210501393E-8	DESIGN	1.3018038468579222E-9	TEST	7.842298857128801E-10	DOCUMENTATION
// now anything that is not a HQL keyword	WITHOUT_CLASSIFICATION	0.9996015035750768	WITHOUT_CLASSIFICATION	2.476606737150591E-4	DEFECT	1.0911150280602728E-4	IMPLEMENTATION	3.8126157276042E-5	DESIGN	2.634122139701071E-6	TEST	9.639689862893695E-7	DOCUMENTATION
// process the "old" HQL style where aliases appear _first_ // ie. using the IN or IN CLASS constructions	WITHOUT_CLASSIFICATION	0.999999505761972	WITHOUT_CLASSIFICATION	4.656875465607629E-7	DESIGN	1.847105301210236E-8	DEFECT	9.290203433994214E-9	IMPLEMENTATION	4.1917505235120993E-10	DOCUMENTATION	3.7004989787936523E-10	TEST
// treat it as a classname	WITHOUT_CLASSIFICATION	0.9999985044289287	WITHOUT_CLASSIFICATION	1.167010468533683E-6	DESIGN	1.251185456870246E-7	DEFECT	1.1966199146343676E-7	TEST	6.962980436065403E-8	IMPLEMENTATION	1.415026135441913E-8	DOCUMENTATION
// treat it as a path expression	WITHOUT_CLASSIFICATION	0.9999206530641126	WITHOUT_CLASSIFICATION	7.14806898061029E-5	DEFECT	7.249942648821994E-6	IMPLEMENTATION	2.9636947359064957E-7	TEST	2.4967029111190447E-7	DESIGN	7.026366770562861E-8	DOCUMENTATION
// starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.9999737371701821	WITHOUT_CLASSIFICATION	2.624734684807168E-5	DESIGN	6.096891373293081E-9	TEST	3.3331639321511444E-9	IMPLEMENTATION	3.2958686183789665E-9	DEFECT	2.757045855449313E-9	DOCUMENTATION
// starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.9999928726990857	WITHOUT_CLASSIFICATION	5.4195850045988286E-6	DESIGN	1.6024842716535246E-6	DEFECT	7.752164627784067E-8	IMPLEMENTATION	1.9987426421631593E-8	TEST	7.722565341963075E-9	DOCUMENTATION
//allow ODMG OQL style: from Person p, p.cars c	WITHOUT_CLASSIFICATION	0.9961242769095162	WITHOUT_CLASSIFICATION	0.0037706715169360844	DESIGN	7.870081420257044E-5	DEFECT	2.4332593818813274E-5	IMPLEMENTATION	1.114342863707659E-6	TEST	9.038226626035285E-7	DOCUMENTATION
//handle quoted strings	WITHOUT_CLASSIFICATION	0.9999602333520944	WITHOUT_CLASSIFICATION	3.0300138536793607E-5	DESIGN	6.786110195977844E-6	IMPLEMENTATION	1.6460077568249931E-6	TEST	5.872523841228594E-7	DOCUMENTATION	4.471390317573765E-7	DEFECT
// Object insertions, updates, and deletions have list semantics because // they must happen in the right order so as to respect referential // integrity	WITHOUT_CLASSIFICATION	0.9999986792785238	WITHOUT_CLASSIFICATION	1.2993709823004265E-6	DEFECT	1.0191887880726976E-8	DESIGN	9.057321037374741E-9	IMPLEMENTATION	1.9289454956606807E-9	DOCUMENTATION	1.723392653246278E-10	TEST
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999861807097284	WITHOUT_CLASSIFICATION	1.2538351551611358E-5	IMPLEMENTATION	5.109555177516338E-7	DOCUMENTATION	2.974160966446298E-7	DESIGN	2.9630252197831454E-7	DEFECT	1.7626458342899261E-7	TEST
//ignore whitespace	WITHOUT_CLASSIFICATION	0.999997727166471	WITHOUT_CLASSIFICATION	1.7558346685937705E-6	DESIGN	2.3464090681666652E-7	DOCUMENTATION	1.1929198170999958E-7	IMPLEMENTATION	1.1210574409055761E-7	TEST	5.096022785616693E-8	DEFECT
//do replacements	WITHOUT_CLASSIFICATION	0.9996843555415705	WITHOUT_CLASSIFICATION	3.0235300131626524E-4	DESIGN	1.2037754104432304E-5	IMPLEMENTATION	8.97093623731032E-7	DOCUMENTATION	2.6660284614102137E-7	TEST	9.000653898567675E-8	DEFECT
//handle HQL2 collection syntax	WITHOUT_CLASSIFICATION	0.9993578801870429	WITHOUT_CLASSIFICATION	3.2554033341842745E-4	IMPLEMENTATION	2.4341449672857172E-4	DESIGN	6.25365475264084E-5	DEFECT	8.834121260913307E-6	DOCUMENTATION	1.7943140228191884E-6	TEST
// uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.999839310858711	WITHOUT_CLASSIFICATION	1.5651137289543252E-4	DESIGN	3.2131065757346537E-6	IMPLEMENTATION	4.3959635642673367E-7	TEST	4.191650695015144E-7	DEFECT	1.0590039175184498E-7	DOCUMENTATION
// AbstractSelectingDelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999853653243443	WITHOUT_CLASSIFICATION	1.2692368568167685E-5	DESIGN	1.4526369606734644E-6	IMPLEMENTATION	4.019723094217298E-7	TEST	6.622605443831198E-8	DOCUMENTATION	2.1471762834323726E-8	DEFECT
//hilo params	WITHOUT_CLASSIFICATION	0.9999853041682215	WITHOUT_CLASSIFICATION	1.2106084488196469E-5	DESIGN	1.8091894454781123E-6	IMPLEMENTATION	3.777241986694475E-7	TEST	2.1660711819711971E-7	DOCUMENTATION	1.8622652794958889E-7	DEFECT
//sql = query;	WITHOUT_CLASSIFICATION	0.9998697102886637	WITHOUT_CLASSIFICATION	9.360537513548823E-5	DESIGN	2.2034124767619714E-5	IMPLEMENTATION	1.2925274635739049E-5	DEFECT	9.446278180576346E-7	TEST	7.80308979375509E-7	DOCUMENTATION
// performance opt	WITHOUT_CLASSIFICATION	0.9999897755350048	WITHOUT_CLASSIFICATION	4.631961201350677E-6	DESIGN	3.6032399539698574E-6	IMPLEMENTATION	1.1854235657438152E-6	DOCUMENTATION	7.36115899791135E-7	DEFECT	6.772437443101083E-8	TEST
//sql = update;	WITHOUT_CLASSIFICATION	0.9999797368011509	WITHOUT_CLASSIFICATION	1.1001645696011794E-5	IMPLEMENTATION	7.210661757877299E-6	DESIGN	1.7128831531746191E-6	DEFECT	1.7945138311618293E-7	DOCUMENTATION	1.585568589571515E-7	TEST
//hilo config	WITHOUT_CLASSIFICATION	0.9999690695589853	WITHOUT_CLASSIFICATION	2.0115141152242577E-5	DESIGN	3.869057451805943E-6	DEFECT	3.6580138554247535E-6	DOCUMENTATION	2.4634060504097337E-6	IMPLEMENTATION	8.248225047955503E-7	TEST
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999968882677408	WITHOUT_CLASSIFICATION	2.4913517986113044E-6	DESIGN	3.2482945660807713E-7	DOCUMENTATION	1.3070449479350422E-7	IMPLEMENTATION	1.0541059347556359E-7	DEFECT	5.943591578161833E-8	TEST
// don't allow comments on these insert statements as comments totally // blow up the Oracle getGeneratedKeys "support" :(	WITHOUT_CLASSIFICATION	0.9999998766451269	WITHOUT_CLASSIFICATION	1.0380763504185678E-7	DEFECT	1.823692463498889E-8	DESIGN	1.0812354515335075E-9	IMPLEMENTATION	2.0316416215344152E-10	TEST	2.5913830459200065E-11	DOCUMENTATION
//abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.9310593686251842	WITHOUT_CLASSIFICATION	0.05133090822943261	DESIGN	0.01666699775355843	IMPLEMENTATION	8.679877275364753E-4	DEFECT	5.641201354034245E-5	DOCUMENTATION	1.8325650747937204E-5	TEST
//throw new IdentifierGenerationException("save associated object first, or disable cascade for inverse association");	WITHOUT_CLASSIFICATION	0.9999999306479688	WITHOUT_CLASSIFICATION	6.120841253170647E-8	IMPLEMENTATION	6.708780677479743E-9	TEST	9.388943161913377E-10	DOCUMENTATION	4.5755251172763516E-10	DESIGN	3.839099743646348E-11	DEFECT
// intentionally empty	WITHOUT_CLASSIFICATION	0.999991306979069	WITHOUT_CLASSIFICATION	6.804899086745884E-6	DESIGN	1.0709698591202427E-6	DEFECT	4.872641771793007E-7	DOCUMENTATION	3.029668091821558E-7	IMPLEMENTATION	2.6920998664507015E-8	TEST
//do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.9999970136919296	WITHOUT_CLASSIFICATION	2.6883889565556842E-6	DEFECT	1.8533431683280252E-7	DESIGN	7.413287704781225E-8	DOCUMENTATION	3.739151113560624E-8	TEST	1.0604087459757732E-9	IMPLEMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.999979864761141	WITHOUT_CLASSIFICATION	1.5383600825069535E-5	DESIGN	3.3888910410139856E-6	IMPLEMENTATION	6.904557731104376E-7	DEFECT	3.443417810879129E-7	TEST	3.2794943869619543E-7	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999968882677408	WITHOUT_CLASSIFICATION	2.4913517986113044E-6	DESIGN	3.2482945660807713E-7	DOCUMENTATION	1.3070449479350422E-7	IMPLEMENTATION	1.0541059347556359E-7	DEFECT	5.943591578161833E-8	TEST
// do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.9999997771996391	WITHOUT_CLASSIFICATION	1.3004408293831798E-7	IMPLEMENTATION	8.364311651835683E-8	DESIGN	4.573878741087893E-9	DOCUMENTATION	4.264521235726343E-9	TEST	2.747617992961533E-10	DEFECT
/* COLUMN and TABLE should be renamed but it would break the public API */	WITHOUT_CLASSIFICATION	0.9987658795463454	WITHOUT_CLASSIFICATION	7.785928869487802E-4	DEFECT	4.1946321819469773E-4	DESIGN	2.7809911511142984E-5	IMPLEMENTATION	4.861857445175673E-6	TEST	3.392579554817286E-6	DOCUMENTATION
// Loaded entity instances, by EntityKey	WITHOUT_CLASSIFICATION	0.9999988910862592	WITHOUT_CLASSIFICATION	7.344150899997393E-7	DEFECT	2.0921229691220403E-7	DESIGN	9.532250655548776E-8	DOCUMENTATION	5.433638610441839E-8	IMPLEMENTATION	1.5627461266873423E-8	TEST
// if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.999929793777548	WITHOUT_CLASSIFICATION	3.732958053398958E-5	IMPLEMENTATION	2.6867166921918937E-5	DESIGN	3.0683851374867372E-6	DOCUMENTATION	2.09024354328401E-6	DEFECT	8.508463152747832E-7	TEST
// the default...	WITHOUT_CLASSIFICATION	0.9999882049507628	WITHOUT_CLASSIFICATION	6.927739764132146E-6	DESIGN	4.522959634865455E-6	IMPLEMENTATION	1.3633263816049847E-7	DEFECT	1.3025285557830764E-7	DOCUMENTATION	7.776434434587496E-8	TEST
// unfortunately not really safe to normalize this // to 1 as an initial value like we do the others // because we would not be able to control this if // we are using a sequence...	WITHOUT_CLASSIFICATION	0.9999999670804182	WITHOUT_CLASSIFICATION	2.911348500609704E-8	IMPLEMENTATION	2.9420201302683685E-9	DESIGN	5.034371282356704E-10	TEST	2.073739676961051E-10	DEFECT	1.5326554693628085E-10	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.999991306979069	WITHOUT_CLASSIFICATION	6.804899086745884E-6	DESIGN	1.0709698591202427E-6	DEFECT	4.872641771793007E-7	DOCUMENTATION	3.029668091821558E-7	IMPLEMENTATION	2.6920998664507015E-8	TEST
// Identity map of CollectionEntry instances, by the collection wrapper	WITHOUT_CLASSIFICATION	0.9999982815467837	WITHOUT_CLASSIFICATION	1.0159694067923124E-6	IMPLEMENTATION	4.874182427625626E-7	DEFECT	1.9023942898130702E-7	DESIGN	1.6975268995728523E-8	DOCUMENTATION	7.850868764640988E-9	TEST
// general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999605566820523	WITHOUT_CLASSIFICATION	3.731748838370683E-5	DESIGN	1.4560929791305294E-6	DEFECT	5.251993739290139E-7	IMPLEMENTATION	1.1595554784102431E-7	DOCUMENTATION	2.8581663033954827E-8	TEST
// table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999985139471932	WITHOUT_CLASSIFICATION	1.4576754670427865E-6	DESIGN	1.4895942641154245E-8	IMPLEMENTATION	7.112264802865303E-9	TEST	3.971108020247478E-9	DOCUMENTATION	2.3980243519098716E-9	DEFECT
// Configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999838435638107	WITHOUT_CLASSIFICATION	1.3418892740514306E-4	IMPLEMENTATION	2.3433456913884462E-5	DESIGN	2.8851812050555584E-6	DEFECT	7.822330608998196E-7	DOCUMENTATION	2.7456330793566083E-7	TEST
// IdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9881465128062902	WITHOUT_CLASSIFICATION	0.011833135310547045	IMPLEMENTATION	1.840482079317681E-5	DESIGN	1.524859688530584E-6	DEFECT	3.0766432598537054E-7	DOCUMENTATION	1.1453835508411592E-7	TEST
// PersistentIdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9924670514963607	WITHOUT_CLASSIFICATION	0.0075225812724454616	IMPLEMENTATION	9.7716541552261E-6	DESIGN	2.971608621611177E-7	DEFECT	1.901269585940321E-7	TEST	1.0828921772049412E-7	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999999800053915	WITHOUT_CLASSIFICATION	9.771660688683252E-9	DESIGN	4.868026821980313E-9	DEFECT	2.647444534228496E-9	DOCUMENTATION	1.6617100728986848E-9	IMPLEMENTATION	1.045766556118392E-9	TEST
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999999800053915	WITHOUT_CLASSIFICATION	9.771660688683252E-9	DESIGN	4.868026821980313E-9	DEFECT	2.647444534228496E-9	DOCUMENTATION	1.6617100728986848E-9	IMPLEMENTATION	1.045766556118392E-9	TEST
//fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.9990668794506774	WITHOUT_CLASSIFICATION	9.112905636905331E-4	DESIGN	8.832678103601143E-6	DEFECT	5.451694104811961E-6	TEST	4.804546691679228E-6	IMPLEMENTATION	2.74106673199592E-6	DOCUMENTATION
// we just hit the last position	WITHOUT_CLASSIFICATION	0.9999852255340949	WITHOUT_CLASSIFICATION	1.0348289187105684E-5	IMPLEMENTATION	2.160308250360827E-6	DEFECT	1.63611988428301E-6	DESIGN	5.30103458092499E-7	DOCUMENTATION	9.964512533522619E-8	TEST
// scroll ahead	WITHOUT_CLASSIFICATION	0.9999909050184561	WITHOUT_CLASSIFICATION	5.690513882929765E-6	DESIGN	3.030622895898123E-6	IMPLEMENTATION	2.521674252080887E-7	DEFECT	7.759196098391344E-8	DOCUMENTATION	4.4085378895238296E-8	TEST
// scroll backward	WITHOUT_CLASSIFICATION	0.9999904001849299	WITHOUT_CLASSIFICATION	5.502954081064606E-6	DESIGN	3.4977441393789364E-6	DEFECT	5.338992753071549E-7	IMPLEMENTATION	3.7367486626450575E-8	DOCUMENTATION	2.785008771756584E-8	TEST
// we have not yet hit the last result...	WITHOUT_CLASSIFICATION	0.9997592775849061	WITHOUT_CLASSIFICATION	1.336984966892154E-4	IMPLEMENTATION	9.85265043628429E-5	DEFECT	4.184772665044596E-6	TEST	3.7970545349848703E-6	DESIGN	5.155868417603074E-7	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999942376734295	WITHOUT_CLASSIFICATION	4.0864171459873865E-6	DESIGN	9.021412389959042E-7	IMPLEMENTATION	6.221883442336969E-7	DEFECT	1.0529250561367714E-7	TEST	4.6287335664781024E-8	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999903283865492	WITHOUT_CLASSIFICATION	4.431578792637485E-6	IMPLEMENTATION	2.2638188741395155E-6	DEFECT	2.0619720228936205E-6	DESIGN	5.722386774374577E-7	DOCUMENTATION	3.4200508367132785E-7	TEST
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999917892900833	WITHOUT_CLASSIFICATION	4.4552642310766775E-6	IMPLEMENTATION	2.389927531361166E-6	DESIGN	1.098234002697869E-6	DEFECT	2.2641741521141646E-7	TEST	4.086673636987842E-8	DOCUMENTATION
// do this when all the properties are updateable since there is // a certain likelihood that the information will already be // snapshot-cached.	WITHOUT_CLASSIFICATION	0.9988813590411677	WITHOUT_CLASSIFICATION	0.001116596955851255	DESIGN	1.5483032425395445E-6	DEFECT	2.2866823213529513E-7	DOCUMENTATION	1.957337313413766E-7	IMPLEMENTATION	7.129777496963004E-8	TEST
// Inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999479269857	WITHOUT_CLASSIFICATION	3.828112186612658E-8	DESIGN	4.944997359110184E-9	IMPLEMENTATION	4.775736237398874E-9	TEST	3.0437589421025935E-9	DEFECT	1.0274001654640616E-9	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999942376734295	WITHOUT_CLASSIFICATION	4.0864171459873865E-6	DESIGN	9.021412389959042E-7	IMPLEMENTATION	6.221883442336969E-7	DEFECT	1.0529250561367714E-7	TEST	4.6287335664781024E-8	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999903283865492	WITHOUT_CLASSIFICATION	4.431578792637485E-6	IMPLEMENTATION	2.2638188741395155E-6	DEFECT	2.0619720228936205E-6	DESIGN	5.722386774374577E-7	DOCUMENTATION	3.4200508367132785E-7	TEST
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999917892900833	WITHOUT_CLASSIFICATION	4.4552642310766775E-6	IMPLEMENTATION	2.389927531361166E-6	DESIGN	1.098234002697869E-6	DEFECT	2.2641741521141646E-7	TEST	4.086673636987842E-8	DOCUMENTATION
// Caches	WITHOUT_CLASSIFICATION	0.9999957560000929	WITHOUT_CLASSIFICATION	4.110622899024658E-6	DESIGN	4.043400182180744E-8	TEST	3.6708601657439614E-8	IMPLEMENTATION	3.5726780598423995E-8	DOCUMENTATION	2.050762385408493E-8	DEFECT
//Generators:	WITHOUT_CLASSIFICATION	0.996667795243445	WITHOUT_CLASSIFICATION	0.002792783019954603	DESIGN	4.957755067999248E-4	IMPLEMENTATION	2.253047737175708E-5	TEST	1.4365803719284833E-5	DOCUMENTATION	6.7499487094412025E-6	DEFECT
// cache region is defined by the root-class in the hierarchy...	WITHOUT_CLASSIFICATION	0.9999921879921853	WITHOUT_CLASSIFICATION	7.809762332047087E-6	DESIGN	1.779602058136079E-9	DEFECT	2.722390806203553E-10	TEST	9.685368423889351E-11	IMPLEMENTATION	9.678792163138036E-11	DOCUMENTATION
//check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.9999344588868991	WITHOUT_CLASSIFICATION	6.435099561376647E-5	DESIGN	5.56099022171786E-7	IMPLEMENTATION	2.9177464435282314E-7	DEFECT	2.1400690580911254E-7	TEST	1.2823691478910224E-7	DOCUMENTATION
// after *all* persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.9999277769639319	WITHOUT_CLASSIFICATION	7.147413828107512E-5	DESIGN	5.911672171599441E-7	IMPLEMENTATION	1.2335462440459934E-7	DEFECT	3.0378558301802016E-8	TEST	3.997387187516565E-9	DOCUMENTATION
// if we get here, it is possible that we have a proxy 'in the way' of the merge map resolution... // 	WITHOUT_CLASSIFICATION	0.9999306890206798	WITHOUT_CLASSIFICATION	6.657204980020915E-5	DEFECT	2.590514325548974E-6	DESIGN	1.419925411216364E-7	TEST	5.481619676159001E-9	IMPLEMENTATION	9.410336226622816E-10	DOCUMENTATION
//JNDI + Serialization:	WITHOUT_CLASSIFICATION	0.9999920643931612	WITHOUT_CLASSIFICATION	3.3538897730520835E-6	DEFECT	2.369485264726456E-6	DESIGN	1.3093462506959273E-6	IMPLEMENTATION	6.719798532874673E-7	DOCUMENTATION	2.3090569707390964E-7	TEST
//checking for named queries	WITHOUT_CLASSIFICATION	0.9998090198336899	WITHOUT_CLASSIFICATION	1.463108529353837E-4	DESIGN	2.777169812243011E-5	IMPLEMENTATION	1.1280838011809236E-5	TEST	3.678652200657597E-6	DEFECT	1.938125039853331E-6	DOCUMENTATION
//stats	WITHOUT_CLASSIFICATION	0.9998793239863947	WITHOUT_CLASSIFICATION	9.849947936736261E-5	DESIGN	9.438565243661168E-6	IMPLEMENTATION	5.355508930449096E-6	TEST	5.341775144428638E-6	DEFECT	2.0406849193830374E-6	DOCUMENTATION
// EntityNotFoundDelegate	WITHOUT_CLASSIFICATION	0.9999279519472553	WITHOUT_CLASSIFICATION	6.286684227768728E-5	DESIGN	6.143241683489482E-6	IMPLEMENTATION	1.684090807830793E-6	DEFECT	7.288995638475896E-7	TEST	6.249784119113209E-7	DOCUMENTATION
// Check named HQL queries	WITHOUT_CLASSIFICATION	0.9999974711301777	WITHOUT_CLASSIFICATION	2.237371561729122E-6	DESIGN	1.9524065950382854E-7	IMPLEMENTATION	5.8119305682539705E-8	TEST	2.0945135840680677E-8	DOCUMENTATION	1.7193159658112904E-8	DEFECT
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9967515622685336	WITHOUT_CLASSIFICATION	0.002404571309214047	DESIGN	6.497524449238142E-4	DEFECT	1.8622960457457584E-4	TEST	4.650465366596537E-6	IMPLEMENTATION	3.233907387263326E-6	DOCUMENTATION
//prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.9981281509421802	WITHOUT_CLASSIFICATION	0.0017240771143863045	DESIGN	1.4190593750030715E-4	DEFECT	3.1645708679752878E-6	TEST	2.3651887932007897E-6	DOCUMENTATION	3.362462719452384E-7	IMPLEMENTATION
// from javax.naming.Referenceable	WITHOUT_CLASSIFICATION	0.9999750507507369	WITHOUT_CLASSIFICATION	2.4165794740191998E-5	DESIGN	6.26271989551481E-7	DEFECT	9.038592742528852E-8	DOCUMENTATION	5.211756212832788E-8	TEST	1.4679043845488473E-8	IMPLEMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999661854937367	WITHOUT_CLASSIFICATION	1.7721650592529E-5	DESIGN	1.543699453783988E-5	IMPLEMENTATION	3.9559081497147495E-7	DEFECT	2.310799162595456E-7	DOCUMENTATION	2.9190401648539674E-8	TEST
//for a dynamic-class	WITHOUT_CLASSIFICATION	0.9998672921306169	WITHOUT_CLASSIFICATION	1.3242285793135504E-4	DESIGN	1.2258761047538366E-7	DOCUMENTATION	1.024579149388784E-7	DEFECT	4.933009559770822E-8	TEST	1.0635830952684757E-8	IMPLEMENTATION
//test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.9979866383904725	WITHOUT_CLASSIFICATION	0.0010865637384800946	TEST	9.078017110464094E-4	DESIGN	1.7838554688974475E-5	DOCUMENTATION	9.20159557583534E-7	DEFECT	2.3744575445937043E-7	IMPLEMENTATION
//NOTE EARLY EXIT	WITHOUT_CLASSIFICATION	0.999925962316915	WITHOUT_CLASSIFICATION	3.624781886832649E-5	DESIGN	2.7346579036117196E-5	IMPLEMENTATION	6.463270085717381E-6	DEFECT	2.093515822968805E-6	DOCUMENTATION	1.8864992719840277E-6	TEST
// for backward-compatability	WITHOUT_CLASSIFICATION	0.9999986958828164	WITHOUT_CLASSIFICATION	6.452172093417032E-7	DESIGN	3.741863300339073E-7	DEFECT	2.711627501500899E-7	IMPLEMENTATION	7.3132033522852736E-9	DOCUMENTATION	6.237690662529499E-9	TEST
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999994365429965	WITHOUT_CLASSIFICATION	3.143455707098132E-7	DEFECT	1.3592917324318196E-7	DESIGN	5.8961268056551004E-8	IMPLEMENTATION	3.931343965837188E-8	TEST	1.4907551785190575E-8	DOCUMENTATION
//to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.9999968507901486	WITHOUT_CLASSIFICATION	3.0414925120826187E-6	DESIGN	5.7591242394336255E-8	DEFECT	1.9926064284862484E-8	IMPLEMENTATION	1.6206086214167408E-8	DOCUMENTATION	1.39939462790761E-8	TEST
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9844543732516567	WITHOUT_CLASSIFICATION	0.015307938799359266	DESIGN	2.289645881405146E-4	IMPLEMENTATION	4.672320422041948E-6	DEFECT	3.151939701884291E-6	DOCUMENTATION	8.991007195182327E-7	TEST
//must add to JNDI _after_ adding to HashMaps, because some JNDI servers use serialization	WITHOUT_CLASSIFICATION	0.9999996685613883	WITHOUT_CLASSIFICATION	1.7105284657616323E-7	DESIGN	9.881127228207661E-8	IMPLEMENTATION	4.715900098674584E-8	DOCUMENTATION	1.066383360265998E-8	TEST	3.751658293756736E-9	DEFECT
// Make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.9999836163098965	WITHOUT_CLASSIFICATION	1.607606625102843E-5	DESIGN	2.750410731748991E-7	IMPLEMENTATION	2.123153227819434E-8	DEFECT	6.723366472371E-9	DOCUMENTATION	4.627880588581538E-9	TEST
// for each of the defined parameters, make sure its value // has been set	WITHOUT_CLASSIFICATION	0.9999990836272475	WITHOUT_CLASSIFICATION	8.952022237044032E-7	DESIGN	1.9603144727504746E-8	DEFECT	9.732771282630177E-10	TEST	4.931988845621825E-10	IMPLEMENTATION	1.0090802888616001E-10	DOCUMENTATION
//we never need to apply locks to the SQL	WITHOUT_CLASSIFICATION	0.9988910387995764	WITHOUT_CLASSIFICATION	6.734715069746064E-4	DESIGN	2.591901575753505E-4	IMPLEMENTATION	8.82016848157612E-5	DOCUMENTATION	7.641730474409291E-5	DEFECT	1.168054631380361E-5	TEST
// inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999970620211103	WITHOUT_CLASSIFICATION	1.987006883385982E-6	DESIGN	6.424128951541128E-7	DEFECT	2.0847145854755262E-7	TEST	6.175842044715819E-8	IMPLEMENTATION	3.8329232137687826E-8	DOCUMENTATION
// deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999982797650315	WITHOUT_CLASSIFICATION	6.999021403771604E-7	IMPLEMENTATION	4.173131478020326E-7	DESIGN	3.262888659742922E-7	DEFECT	2.583034848217491E-7	TEST	1.842732955650959E-8	DOCUMENTATION
// during deserialization, we need to reconnect all proxies and // collections to this session, as well as the EntityEntry and // CollectionEntry instances; these associations are transient // because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.999997868573562	WITHOUT_CLASSIFICATION	1.9920106235916845E-6	DESIGN	1.38784856077607E-7	DOCUMENTATION	3.7417459029970096E-10	TEST	2.3325563145783583E-10	IMPLEMENTATION	2.3528115544667436E-11	DEFECT
// updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999978986644437	WITHOUT_CLASSIFICATION	8.660247109526993E-7	IMPLEMENTATION	8.045531822284517E-7	DEFECT	2.2852658201681015E-7	DESIGN	1.738560701067834E-7	TEST	2.8375011108217367E-8	DOCUMENTATION
// loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999858830761328	WITHOUT_CLASSIFICATION	1.3112245443003403E-5	DEFECT	5.095827380872477E-7	IMPLEMENTATION	1.8164640688577631E-7	TEST	1.569371132295664E-7	DOCUMENTATION	1.5651216601255555E-7	DESIGN
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.999975420753488	WITHOUT_CLASSIFICATION	2.2425554650204142E-5	DESIGN	9.063556910467162E-7	IMPLEMENTATION	7.075826635550072E-7	DEFECT	2.7033696179611913E-7	TEST	2.6941654533690513E-7	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.999975420753488	WITHOUT_CLASSIFICATION	2.2425554650204142E-5	DESIGN	9.063556910467162E-7	IMPLEMENTATION	7.075826635550072E-7	DEFECT	2.7033696179611913E-7	TEST	2.6941654533690513E-7	DOCUMENTATION
// first, try to load it from the temp PC associated to this SS	WITHOUT_CLASSIFICATION	0.9999995088328361	WITHOUT_CLASSIFICATION	3.890047584605107E-7	TEST	8.445923062484121E-8	DESIGN	1.0873857734950998E-8	DOCUMENTATION	5.394519836698929E-9	IMPLEMENTATION	1.434797293875267E-9	DEFECT
// if the metadata allowed proxy creation and caller did not request forceful eager loading, // generate a proxy	WITHOUT_CLASSIFICATION	0.999999971843008	WITHOUT_CLASSIFICATION	2.2243531264183706E-8	TEST	5.568215675855803E-9	DEFECT	3.180710465500241E-10	IMPLEMENTATION	2.2782226779525726E-11	DESIGN	4.39196032070798E-12	DOCUMENTATION
// otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.9999529101276106	WITHOUT_CLASSIFICATION	3.8542344296672225E-5	DESIGN	7.639689802275519E-6	IMPLEMENTATION	7.189988083767624E-7	DEFECT	1.1991320464715837E-7	TEST	6.89262775000574E-8	DOCUMENTATION
/////////////////////////////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9990612659178691	WITHOUT_CLASSIFICATION	8.145738134030273E-4	DESIGN	4.447594921756063E-5	DEFECT	3.910243605146484E-5	IMPLEMENTATION	2.1594717598190095E-5	TEST	1.8987165860590066E-5	DOCUMENTATION
// no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.9998386611461952	WITHOUT_CLASSIFICATION	1.164747573884423E-4	DESIGN	3.8626734487897504E-5	IMPLEMENTATION	5.095724660386339E-6	DEFECT	9.003295383761095E-7	DOCUMENTATION	2.41307729678122E-7	TEST
//after setting values to object, entityMode	WITHOUT_CLASSIFICATION	0.9997463722384	WITHOUT_CLASSIFICATION	2.521376029938839E-4	DESIGN	1.2430356130776157E-6	DEFECT	2.0938717008895625E-7	DOCUMENTATION	3.465907615057972E-8	TEST	3.0767468147136604E-9	IMPLEMENTATION
//for EJB3	WITHOUT_CLASSIFICATION	0.9997810625370797	WITHOUT_CLASSIFICATION	1.9995316515218E-4	DESIGN	1.1592936181634481E-5	DEFECT	2.688193269344724E-6	IMPLEMENTATION	2.398574454329222E-6	TEST	2.3045938629697556E-6	DOCUMENTATION
// just ignore	WITHOUT_CLASSIFICATION	0.999986047281437	WITHOUT_CLASSIFICATION	7.283288893394039E-6	DESIGN	5.351496917704779E-6	IMPLEMENTATION	8.389157731142857E-7	DEFECT	2.9489654177052885E-7	TEST	1.8412043700451946E-7	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9997786430860575	WITHOUT_CLASSIFICATION	2.018011789641922E-4	DESIGN	1.83360686064822E-5	IMPLEMENTATION	6.535418800783338E-7	DOCUMENTATION	4.0444129010479953E-7	DEFECT	1.6168320159830762E-7	TEST
// saveOrUpdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998608786272	WITHOUT_CLASSIFICATION	6.839784996021474E-8	IMPLEMENTATION	4.902131538309041E-8	DEFECT	1.72797098360008E-8	DESIGN	2.9684412746693707E-9	TEST	1.4540562988318128E-9	DOCUMENTATION
// update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996604270093	WITHOUT_CLASSIFICATION	2.4564060221789386E-7	IMPLEMENTATION	8.121040831735137E-8	DEFECT	8.49975472873281E-9	DESIGN	2.8167765636560707E-9	TEST	1.4054487726875994E-9	DOCUMENTATION
// lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999994398744216	WITHOUT_CLASSIFICATION	3.24068082328902E-7	DEFECT	1.2692975326911657E-7	IMPLEMENTATION	9.445824361655635E-8	DESIGN	9.179508281154781E-9	TEST	5.489990813562493E-9	DOCUMENTATION
// persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995562362929	WITHOUT_CLASSIFICATION	3.643490722978837E-7	IMPLEMENTATION	4.480409062125715E-8	DEFECT	2.5724820710023448E-8	DESIGN	6.267474810430364E-9	TEST	2.6182485883284424E-9	DOCUMENTATION
// persistOnFlush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998230608107	WITHOUT_CLASSIFICATION	1.0636891226358211E-7	IMPLEMENTATION	4.0852769533772785E-8	DESIGN	2.5359342520354073E-8	DEFECT	3.0197883624699213E-9	TEST	1.3383765094567264E-9	DOCUMENTATION
// merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997792347683	WITHOUT_CLASSIFICATION	1.1590262776351195E-7	IMPLEMENTATION	6.071950271077278E-8	DESIGN	3.195830775715982E-8	DEFECT	8.425173788858296E-9	TEST	3.759619593634484E-9	DOCUMENTATION
// saveOrUpdateCopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999992195142609	WITHOUT_CLASSIFICATION	4.793507062383205E-7	DEFECT	1.8592756208545506E-7	IMPLEMENTATION	9.765659707012126E-8	DESIGN	1.0895899038528989E-8	TEST	6.654974801692918E-9	DOCUMENTATION
// delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999040718296	WITHOUT_CLASSIFICATION	8.32632893069012E-8	IMPLEMENTATION	7.918800981879058E-9	DEFECT	3.3453001709121872E-9	DESIGN	1.1330408431769049E-9	TEST	2.67739041566261E-10	DOCUMENTATION
// load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996282266513	WITHOUT_CLASSIFICATION	2.0022748480881569E-7	IMPLEMENTATION	1.4062678641886899E-7	DEFECT	2.4771174545300333E-8	DESIGN	4.908386745639579E-9	TEST	1.2395161066406571E-9	DOCUMENTATION
// refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999992087865073	WITHOUT_CLASSIFICATION	5.557656795757379E-7	IMPLEMENTATION	1.7697291786249963E-7	DEFECT	3.7308459653129195E-8	DESIGN	1.7875962667366147E-8	TEST	3.2904727732386576E-9	DOCUMENTATION
// replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999994453144566	WITHOUT_CLASSIFICATION	4.555647796828163E-7	DESIGN	7.624715716444277E-8	IMPLEMENTATION	1.2552864096414534E-8	DEFECT	6.292861673391733E-9	TEST	4.027880769869148E-9	DOCUMENTATION
// do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.9999992044827185	WITHOUT_CLASSIFICATION	3.7038303175353464E-7	DESIGN	2.9894338132640545E-7	IMPLEMENTATION	1.0495033938226763E-7	DEFECT	1.9480005848353288E-8	DOCUMENTATION	1.7605233330531282E-9	TEST
// this is an internal error of some sort...	WITHOUT_CLASSIFICATION	0.9999794558814497	WITHOUT_CLASSIFICATION	1.78618905625962E-5	DESIGN	1.5602997654100194E-6	DEFECT	6.06083630130274E-7	TEST	4.759354350720871E-7	DOCUMENTATION	3.9909157043647823E-8	IMPLEMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9937452647789236	WITHOUT_CLASSIFICATION	0.006250065646890552	DESIGN	3.0083062886562168E-6	TEST	1.42799819421695E-6	DEFECT	1.5573930508145938E-7	IMPLEMENTATION	7.753039807232822E-8	DOCUMENTATION
//only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.9999671129018908	WITHOUT_CLASSIFICATION	1.3720287955330845E-5	DESIGN	1.2058743512799763E-5	DEFECT	6.910264517131791E-6	IMPLEMENTATION	1.7500995547149462E-7	DOCUMENTATION	2.27921684705993E-8	TEST
// if it was previously unreferenced, we need to flush in order to // get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.9997975053312446	WITHOUT_CLASSIFICATION	1.6034768991880603E-4	DESIGN	1.7685494734341613E-5	IMPLEMENTATION	1.5328924615290436E-5	DEFECT	7.166637694564656E-6	DOCUMENTATION	1.9659217925118577E-6	TEST
// not for internal use:	WITHOUT_CLASSIFICATION	0.9914267894416432	WITHOUT_CLASSIFICATION	0.007745676482078713	DESIGN	7.31555618961528E-4	IMPLEMENTATION	8.15440353087276E-5	DEFECT	7.30403275678789E-6	TEST	7.13038925111755E-6	DOCUMENTATION
// otherwise, we only need to flush if there are in-memory changes // to the queried tables	WITHOUT_CLASSIFICATION	0.9999956592324256	WITHOUT_CLASSIFICATION	3.2911287422839623E-6	IMPLEMENTATION	6.529880301784661E-7	TEST	3.5908832808589924E-7	DESIGN	2.544479248307704E-8	DEFECT	1.2117681318863881E-8	DOCUMENTATION
// might need to run a different filter entirely after the flush // because the collection role may have changed	WITHOUT_CLASSIFICATION	0.9984026110681216	WITHOUT_CLASSIFICATION	0.001137207241917636	DESIGN	4.590442050276506E-4	IMPLEMENTATION	6.860357879233838E-7	DOCUMENTATION	2.3573097485691848E-7	DEFECT	2.1571817024126135E-7	TEST
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9937452647789236	WITHOUT_CLASSIFICATION	0.006250065646890552	DESIGN	3.0083062886562168E-6	TEST	1.42799819421695E-6	DEFECT	1.5573930508145938E-7	IMPLEMENTATION	7.753039807232822E-8	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9937452647789236	WITHOUT_CLASSIFICATION	0.006250065646890552	DESIGN	3.0083062886562168E-6	TEST	1.42799819421695E-6	DEFECT	1.5573930508145938E-7	IMPLEMENTATION	7.753039807232822E-8	DOCUMENTATION
//if it is initialized, see if the underlying //instance is contained, since we need to  //account for the fact that it might have been //evicted	WITHOUT_CLASSIFICATION	0.9782531873846896	WITHOUT_CLASSIFICATION	0.015125140828093308	DESIGN	0.005992048397629619	IMPLEMENTATION	5.330002973002452E-4	TEST	9.180496791349663E-5	DOCUMENTATION	4.818124373682557E-6	DEFECT
// basically just an adapted copy of find(CriteriaImpl)	WITHOUT_CLASSIFICATION	0.9999745558935051	WITHOUT_CLASSIFICATION	1.8769474066167936E-5	IMPLEMENTATION	5.059117468643801E-6	DESIGN	1.367810709364663E-6	DEFECT	2.2809331991200032E-7	TEST	1.961093087498358E-8	DOCUMENTATION
// it is possible for this method to be called during flush processing, // so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999840581172321	WITHOUT_CLASSIFICATION	1.5854074646134354E-5	DESIGN	8.221628414955176E-8	TEST	3.648789101722035E-9	DOCUMENTATION	1.1903638665661329E-9	DEFECT	7.526847251846889E-10	IMPLEMENTATION
// nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.9998648676015773	WITHOUT_CLASSIFICATION	7.811043386245616E-5	DESIGN	2.936816048890755E-5	DEFECT	2.605943044571484E-5	IMPLEMENTATION	1.2789456383372975E-6	DOCUMENTATION	3.154279870963669E-7	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999975674143844	WITHOUT_CLASSIFICATION	1.3648294478659303E-6	DESIGN	5.671145305579706E-7	DEFECT	3.820433736968819E-7	IMPLEMENTATION	7.774135294475789E-8	DOCUMENTATION	4.085691057975015E-8	TEST
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999994365429965	WITHOUT_CLASSIFICATION	3.143455707098132E-7	DEFECT	1.3592917324318196E-7	DESIGN	5.8961268056551004E-8	IMPLEMENTATION	3.931343965837188E-8	TEST	1.4907551785190575E-8	DOCUMENTATION
// we need to writeObject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.999997368917181	WITHOUT_CLASSIFICATION	2.462655965523242E-6	DESIGN	8.66819275122631E-8	DOCUMENTATION	4.30955463128819E-8	TEST	2.6216952595775427E-8	DEFECT	1.243242715994895E-8	IMPLEMENTATION
// the old-time stand-by...	WITHOUT_CLASSIFICATION	0.9999948751745555	WITHOUT_CLASSIFICATION	4.406294620086282E-6	IMPLEMENTATION	3.531638390169245E-7	DEFECT	2.3616477904845673E-7	DESIGN	1.0738389065896469E-7	DOCUMENTATION	2.181831565324957E-8	TEST
// parameter bind values...	WITHOUT_CLASSIFICATION	0.9999993199161642	WITHOUT_CLASSIFICATION	5.598357525245604E-7	DESIGN	7.571008651396235E-8	DEFECT	2.4342613183451766E-8	TEST	1.6484155881052378E-8	IMPLEMENTATION	3.7112276761524374E-9	DOCUMENTATION
// Parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997651459329544	WITHOUT_CLASSIFICATION	2.2852754161050803E-4	DESIGN	3.682735631982041E-6	IMPLEMENTATION	1.70205003029023E-6	TEST	5.826976550968732E-7	DEFECT	3.5904211783884587E-7	DOCUMENTATION
// prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.9997990771102832	WITHOUT_CLASSIFICATION	1.9714156320015325E-4	IMPLEMENTATION	2.7813455105416696E-6	DEFECT	9.168750258015312E-7	DESIGN	5.243891509972658E-8	TEST	3.066706506451291E-8	DOCUMENTATION
// Execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999602210410818	WITHOUT_CLASSIFICATION	3.0838610147448975E-5	DESIGN	4.95031026352167E-6	DEFECT	2.8801435020443886E-6	IMPLEMENTATION	6.537111470328754E-7	DOCUMENTATION	4.561838580436048E-7	TEST
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9998488961214788	WITHOUT_CLASSIFICATION	1.3025091947153154E-4	DESIGN	1.0830944435745119E-5	IMPLEMENTATION	5.405587754079604E-6	DEFECT	4.39759634047215E-6	DOCUMENTATION	2.188305193590294E-7	TEST
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9998488961214788	WITHOUT_CLASSIFICATION	1.3025091947153154E-4	DESIGN	1.0830944435745119E-5	IMPLEMENTATION	5.405587754079604E-6	DEFECT	4.39759634047215E-6	DOCUMENTATION	2.188305193590294E-7	TEST
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999163444825161	WITHOUT_CLASSIFICATION	6.799623389094913E-5	DESIGN	9.773985641236097E-6	IMPLEMENTATION	3.696923254736919E-6	DOCUMENTATION	1.1896153029398369E-6	TEST	9.98759393966841E-7	DEFECT
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999163444825161	WITHOUT_CLASSIFICATION	6.799623389094913E-5	DESIGN	9.773985641236097E-6	IMPLEMENTATION	3.696923254736919E-6	DOCUMENTATION	1.1896153029398369E-6	TEST	9.98759393966841E-7	DEFECT
// FieldInterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998373611624221	WITHOUT_CLASSIFICATION	1.2993365463146602E-4	IMPLEMENTATION	2.9801327347053555E-5	DESIGN	2.2128099003541328E-6	DEFECT	4.6873617856058965E-7	TEST	2.2230952050644557E-7	DOCUMENTATION
// subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999985320040476	WITHOUT_CLASSIFICATION	1.450788437117575E-6	DESIGN	6.83442402273004E-9	DEFECT	4.2420053792497915E-9	IMPLEMENTATION	3.553020317024529E-9	TEST	2.5780655181383406E-9	DOCUMENTATION
//let's assume that there is only one lazy fetch group, for now!	WITHOUT_CLASSIFICATION	0.9999940622258111	WITHOUT_CLASSIFICATION	5.872701029288953E-6	DEFECT	2.3780599897821113E-8	DESIGN	2.3280347308630284E-8	TEST	1.4227513486695178E-8	IMPLEMENTATION	3.784698941527859E-9	DOCUMENTATION
// FieldHandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99981277321001	WITHOUT_CLASSIFICATION	1.6119269954931298E-4	IMPLEMENTATION	2.4499796165579208E-5	DESIGN	9.07447618611336E-7	TEST	4.992187186968832E-7	DEFECT	1.2762793774001888E-7	DOCUMENTATION
// should *not* need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.999981366759051	WITHOUT_CLASSIFICATION	1.1213017991379287E-5	DEFECT	5.520537300829875E-6	DESIGN	1.872293688591047E-6	IMPLEMENTATION	1.787058731337562E-8	DOCUMENTATION	9.521380784883127E-9	TEST
// should probably no-op commit/rollback here, at least in JTA scenarios	WITHOUT_CLASSIFICATION	0.9538087688479949	WITHOUT_CLASSIFICATION	0.04567003780303934	DESIGN	4.797318239114635E-4	DEFECT	2.7846324138643786E-5	IMPLEMENTATION	9.280081681876941E-6	TEST	4.335119233811571E-6	DOCUMENTATION
// Base Expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999187990291973	WITHOUT_CLASSIFICATION	5.994495965501721E-5	DEFECT	2.02126889344587E-5	IMPLEMENTATION	4.648577841393384E-7	DESIGN	4.3767872135337167E-7	DOCUMENTATION	1.407857076761613E-7	TEST
// Various Expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999566559148748	WITHOUT_CLASSIFICATION	3.859598905086838E-5	DEFECT	3.489978498722663E-6	DESIGN	8.349068697397386E-7	IMPLEMENTATION	3.724118696107943E-7	DOCUMENTATION	5.0798836239196127E-8	TEST
// explicitly perform no checking...	WITHOUT_CLASSIFICATION	0.9992191121577415	WITHOUT_CLASSIFICATION	7.724458400223563E-4	DESIGN	4.971608618120989E-6	DOCUMENTATION	2.9311104613922655E-6	DEFECT	3.6991292277531654E-7	IMPLEMENTATION	1.69370233668086E-7	TEST
// used from testsuite	WITHOUT_CLASSIFICATION	0.9999802398332173	WITHOUT_CLASSIFICATION	1.824462985577022E-5	TEST	1.2636160225349756E-6	DESIGN	1.9370509167361784E-7	DEFECT	4.7882268327624976E-8	DOCUMENTATION	1.0333544346843892E-8	IMPLEMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999999641495064	WITHOUT_CLASSIFICATION	1.946932209345699E-8	DESIGN	8.810967328873368E-9	DOCUMENTATION	3.8173051156440285E-9	TEST	3.727086901246797E-9	DEFECT	2.5812199403882268E-11	IMPLEMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9978396653539129	WITHOUT_CLASSIFICATION	0.002047636254167967	DESIGN	8.364911112739331E-5	IMPLEMENTATION	1.746060139679287E-5	DEFECT	7.776673285281719E-6	DOCUMENTATION	3.812006109517023E-6	TEST
// register synch; stats.connect()	WITHOUT_CLASSIFICATION	0.9999935771986783	WITHOUT_CLASSIFICATION	4.879900355304922E-6	DESIGN	1.3321478614787951E-6	IMPLEMENTATION	1.0402676567471355E-7	DOCUMENTATION	8.0049200041933E-8	DEFECT	2.6677139267215465E-8	TEST
//noncritical, swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.9959062612165756	WITHOUT_CLASSIFICATION	0.004056155653042389	DESIGN	2.452267051007671E-5	IMPLEMENTATION	1.0903588531455933E-5	DEFECT	1.231700578313751E-6	DOCUMENTATION	9.251707621041505E-7	TEST
// calls executeBatch()	WITHOUT_CLASSIFICATION	0.9999995403003833	WITHOUT_CLASSIFICATION	3.2313197271876496E-7	DESIGN	8.170937948848796E-8	DEFECT	3.770566928017961E-8	IMPLEMENTATION	1.4125641816874061E-8	DOCUMENTATION	3.026953373625319E-9	TEST
//no big deal	WITHOUT_CLASSIFICATION	0.9999608611299726	WITHOUT_CLASSIFICATION	1.9003786443592456E-5	DESIGN	1.0119407375980069E-5	IMPLEMENTATION	7.100223879759531E-6	DEFECT	2.7019064686748672E-6	DOCUMENTATION	2.1354585931138794E-7	TEST
// no big deal	WITHOUT_CLASSIFICATION	0.999942669520265	WITHOUT_CLASSIFICATION	3.9567272830168176E-5	IMPLEMENTATION	1.30204109669509E-5	DESIGN	3.463443250185227E-6	DEFECT	1.187058835926236E-6	DOCUMENTATION	9.229385178184347E-8	TEST
// no big deal	WITHOUT_CLASSIFICATION	0.999942669520265	WITHOUT_CLASSIFICATION	3.9567272830168176E-5	IMPLEMENTATION	1.30204109669509E-5	DESIGN	3.463443250185227E-6	DEFECT	1.187058835926236E-6	DOCUMENTATION	9.229385178184347E-8	TEST
// sybase driver (jConnect) throwing NPE here in certain // cases, but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.9999941134502657	WITHOUT_CLASSIFICATION	2.364635352650646E-6	IMPLEMENTATION	1.7232251160165541E-6	DEFECT	1.6657310438258483E-6	DESIGN	1.010802407538226E-7	TEST	3.187798093716881E-8	DOCUMENTATION
// see explanation above...	WITHOUT_CLASSIFICATION	0.9999944049855675	WITHOUT_CLASSIFICATION	3.318235367813505E-6	DEFECT	1.7028130254266341E-6	DESIGN	4.010280973570327E-7	DOCUMENTATION	9.059962516909723E-8	TEST	8.233831672804057E-8	IMPLEMENTATION
// If we are in the process of releasing, no sense // checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.9999999978107685	WITHOUT_CLASSIFICATION	1.2466473897504313E-9	DEFECT	7.16594199084505E-10	DOCUMENTATION	1.684935866033731E-10	DESIGN	4.676671597553444E-11	IMPLEMENTATION	1.0729408404770041E-11	TEST
// EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.999975992555739	WITHOUT_CLASSIFICATION	1.4372717959680591E-5	DEFECT	6.521133478542512E-6	IMPLEMENTATION	1.9050352509246942E-6	DESIGN	7.022340088156603E-7	DOCUMENTATION	5.06323563208265E-7	TEST
// ResultSet impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9988891027536547	WITHOUT_CLASSIFICATION	9.928879130083243E-4	DESIGN	9.595269220834994E-5	IMPLEMENTATION	1.9907744323562428E-5	DEFECT	1.706410688938125E-6	TEST	4.424861159696451E-7	DOCUMENTATION
// ResultSet impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996072315714443	WITHOUT_CLASSIFICATION	3.275994024265446E-4	DESIGN	5.1421050542974734E-5	IMPLEMENTATION	9.54247885787579E-6	DEFECT	3.7791897237571406E-6	TEST	4.2630700465879517E-7	DOCUMENTATION
// refer to comment in StatefulPersistenceContext.addCollection()	WITHOUT_CLASSIFICATION	0.9999932120845224	WITHOUT_CLASSIFICATION	3.180201807441461E-6	IMPLEMENTATION	2.032733574497449E-6	DESIGN	1.0542347710097835E-6	DEFECT	4.844282060464571E-7	DOCUMENTATION	3.631711869176475E-8	TEST
// ConnectionManager.Callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9874734448513832	WITHOUT_CLASSIFICATION	0.012233897953914254	IMPLEMENTATION	1.662748398961119E-4	DESIGN	1.2112722651292642E-4	DEFECT	5.020354230108558E-6	DOCUMENTATION	2.3477406343523247E-7	TEST
// Note : success = false, because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.9994844293648171	WITHOUT_CLASSIFICATION	5.100565920109547E-4	IMPLEMENTATION	4.39537164708224E-6	DESIGN	7.623929507652311E-7	DEFECT	3.347849118800026E-7	DOCUMENTATION	2.149366214444805E-8	TEST
// we already have a callback registered; either a local // (org.hibernate.Transaction) transaction has accepted // callback responsibilities, or we have previously // registered a transaction synch.	WITHOUT_CLASSIFICATION	0.9999998661219555	WITHOUT_CLASSIFICATION	5.381188669992395E-8	IMPLEMENTATION	5.020566350753919E-8	DESIGN	2.8965184808056336E-8	DEFECT	8.115122646101904E-10	DOCUMENTATION	8.379714795749158E-11	TEST
// the configured transaction-factory says it only supports // local callback mode, so no sense attempting to register a // JTA Synchronization	WITHOUT_CLASSIFICATION	0.9999613755194566	WITHOUT_CLASSIFICATION	3.844716709826507E-5	DESIGN	1.0914569128945753E-7	IMPLEMENTATION	5.428699328761401E-8	DOCUMENTATION	1.1650211095581924E-8	DEFECT	2.2305494914521316E-9	TEST
// transactions marked for rollback-only cause some TM impls to throw exceptions	WITHOUT_CLASSIFICATION	0.9999984071300457	WITHOUT_CLASSIFICATION	8.825293404964506E-7	IMPLEMENTATION	6.625694689921781E-7	DEFECT	2.606447959619894E-8	DOCUMENTATION	1.8331886107919963E-8	DESIGN	3.3747791106769507E-9	TEST
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999990328964673	WITHOUT_CLASSIFICATION	7.597141173721414E-7	DEFECT	8.909343933702755E-8	DESIGN	8.157239375582278E-8	IMPLEMENTATION	2.550806952158702E-8	DOCUMENTATION	1.1215512743415732E-8	TEST
//postInitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.9999997364252449	WITHOUT_CLASSIFICATION	1.9894785353567312E-7	IMPLEMENTATION	4.390365423621486E-8	DEFECT	1.500070295975163E-8	DESIGN	3.960374727769061E-9	DOCUMENTATION	1.7621696909271894E-9	TEST
// cannot handle single quotes	WITHOUT_CLASSIFICATION	0.9999903374996089	WITHOUT_CLASSIFICATION	5.043851317072644E-6	IMPLEMENTATION	4.044815237922302E-6	DEFECT	2.6093034807274995E-7	TEST	2.5613568891102644E-7	DESIGN	5.6767799031735434E-8	DOCUMENTATION
// todo : for 4.0 //	WITHOUT_CLASSIFICATION	0.9987972131817194	WITHOUT_CLASSIFICATION	0.0011048362374101583	DESIGN	4.838634262504058E-5	DEFECT	3.909876570911923E-5	IMPLEMENTATION	8.850771809697989E-6	TEST	1.6147007266117033E-6	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999480540658551	WITHOUT_CLASSIFICATION	5.123712887846565E-5	DESIGN	3.638502688456378E-7	DEFECT	2.870352069088368E-7	TEST	4.951739398385346E-8	IMPLEMENTATION	8.402396571938803E-9	DOCUMENTATION
// don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.9999318987531745	WITHOUT_CLASSIFICATION	6.439320298948035E-5	DEFECT	1.939536899833668E-6	DESIGN	1.309599695750465E-6	IMPLEMENTATION	3.0304364799269745E-7	DOCUMENTATION	1.5586359247753362E-7	TEST
// don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.9997313598656073	WITHOUT_CLASSIFICATION	2.5442448020383265E-4	DEFECT	6.455549210099611E-6	IMPLEMENTATION	6.238432345681813E-6	DESIGN	1.146884107576755E-6	DOCUMENTATION	3.7478852553729394E-7	TEST
// position cursor to the last row	WITHOUT_CLASSIFICATION	0.9999993920770277	WITHOUT_CLASSIFICATION	4.5853046237184344E-7	IMPLEMENTATION	6.723191348262728E-8	DEFECT	5.162089055491311E-8	DESIGN	2.8539003595338936E-8	DOCUMENTATION	2.000702284422224E-9	TEST
// sequentially read the result set in reverse until we recognize // a change in the key value.  At that point, we are pointed at // the last physical sequential row for the logical row in which // we are interested in processing	WITHOUT_CLASSIFICATION	0.999999997786756	WITHOUT_CLASSIFICATION	1.9599508293451044E-9	DEFECT	1.5309500600037383E-10	DESIGN	8.203771791711172E-11	DOCUMENTATION	1.0341947091954125E-11	TEST	7.818360296837072E-12	IMPLEMENTATION
// Read backwards until we read past the first physical sequential // row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.9999967239022693	WITHOUT_CLASSIFICATION	3.1917364583366107E-6	DEFECT	4.603818661993709E-8	TEST	3.714187809285836E-8	IMPLEMENTATION	1.0395221316981438E-9	DOCUMENTATION	1.416854622244246E-10	DESIGN
// Finally, read ahead one row to position result set cursor // at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.9999461865098871	WITHOUT_CLASSIFICATION	2.8697714254018374E-5	DEFECT	1.8630873099061795E-5	DESIGN	5.6675034241868784E-6	IMPLEMENTATION	5.844581006977017E-7	DOCUMENTATION	2.3294123476986102E-7	TEST
// now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.9998870560349528	WITHOUT_CLASSIFICATION	1.1284824815178776E-4	DESIGN	4.431529701454442E-8	DEFECT	2.6931490341067526E-8	TEST	1.98517473004699E-8	IMPLEMENTATION	4.618360803882689E-9	DOCUMENTATION
// force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.9999954261317058	WITHOUT_CLASSIFICATION	3.795065597073868E-6	DESIGN	7.405716334816862E-7	IMPLEMENTATION	1.5334971049074434E-8	DOCUMENTATION	1.1748106074419983E-8	DEFECT	1.114798663521023E-8	TEST
// this is equivalent to the old behavior...	WITHOUT_CLASSIFICATION	0.9996084579752229	WITHOUT_CLASSIFICATION	3.894114875451377E-4	DESIGN	1.8312473834393454E-6	DEFECT	1.1636293149030657E-7	DOCUMENTATION	1.0240475677127871E-7	TEST	8.052216025265838E-8	IMPLEMENTATION
//if null, owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.9999732277138964	WITHOUT_CLASSIFICATION	1.4172494239478299E-5	DEFECT	1.1457027706014672E-5	DESIGN	1.062594883936124E-6	IMPLEMENTATION	5.595911600271821E-8	TEST	2.421015811977629E-8	DOCUMENTATION
//final String queryString, 	WITHOUT_CLASSIFICATION	0.9999024143886159	WITHOUT_CLASSIFICATION	6.0260878865334216E-5	DESIGN	3.102304356239055E-5	DEFECT	3.4716814092149045E-6	DOCUMENTATION	1.929362307354994E-6	IMPLEMENTATION	9.006452398596176E-7	TEST
// if it was a reference to self, don't need to nullify // unless we are using native id generation, in which // case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.9999999999229794	WITHOUT_CLASSIFICATION	3.84809982569635E-11	DEFECT	1.975600856920815E-11	DOCUMENTATION	1.0610474440130443E-11	DESIGN	8.166808888079053E-12	TEST	6.273020387110354E-15	IMPLEMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9997141722408799	WITHOUT_CLASSIFICATION	2.4190390050686663E-4	DESIGN	2.5286816320175137E-5	IMPLEMENTATION	8.27970555846348E-6	TEST	7.175598340824886E-6	DOCUMENTATION	3.181738393732581E-6	DEFECT
// in an effort to avoid concurrent-modification-exceptions (from // potential recursive calls back through here as a result of the // eventual call to PersistentCollection#endRead), we scan the // internal loadingCollections map for matches and store those matches // in a temp collection.  the temp collection is then used to "drive" // the #endRead processing.	WITHOUT_CLASSIFICATION	0.999999320078101	WITHOUT_CLASSIFICATION	5.699284735067412E-7	DESIGN	1.0989740821590219E-7	DEFECT	5.417295789693753E-11	TEST	4.087690852232084E-11	DOCUMENTATION	9.673939400692765E-13	IMPLEMENTATION
//we can reuse it for each row	WITHOUT_CLASSIFICATION	0.9999913090359557	WITHOUT_CLASSIFICATION	7.851147266026647E-6	DESIGN	4.5526782715891855E-7	DEFECT	2.6346508684420987E-7	IMPLEMENTATION	8.395468110143858E-8	DOCUMENTATION	3.7129183334111315E-8	TEST
//can't reuse in this case	WITHOUT_CLASSIFICATION	0.9999829564914605	WITHOUT_CLASSIFICATION	1.4485288973852955E-5	DESIGN	2.067028781554995E-6	DEFECT	3.4133192166917777E-7	DOCUMENTATION	8.337859856645608E-8	TEST	6.648026392267628E-8	IMPLEMENTATION
// First we need to suspend any current JTA transaction and obtain // a JDBC connection	WITHOUT_CLASSIFICATION	0.9771931346236116	WITHOUT_CLASSIFICATION	0.021019126519308224	IMPLEMENTATION	0.0013867763494601261	DOCUMENTATION	3.9687233489423815E-4	DESIGN	2.5809954973885675E-6	DEFECT	1.5091772284738367E-6	TEST
//getResultList(results);	WITHOUT_CLASSIFICATION	0.9999829243319766	WITHOUT_CLASSIFICATION	1.4194264334967787E-5	DEFECT	1.8453450493383253E-6	DESIGN	5.483677335240781E-7	TEST	4.1669163805970774E-7	IMPLEMENTATION	7.099926752225505E-8	DOCUMENTATION
//if we only returned one entity, query by key is more efficient	WITHOUT_CLASSIFICATION	0.9992212009223123	WITHOUT_CLASSIFICATION	7.64190654491256E-4	DESIGN	9.123486942193147E-6	DEFECT	4.188768171294143E-6	IMPLEMENTATION	8.488711520621272E-7	TEST	4.472969308761583E-7	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999997351167526	WITHOUT_CLASSIFICATION	2.2555562860540818E-7	IMPLEMENTATION	3.821280787582412E-8	DEFECT	7.028253997711304E-10	DESIGN	3.284506542902438E-10	DOCUMENTATION	8.353493138787219E-11	TEST
// handle empty collection	WITHOUT_CLASSIFICATION	0.9984586472187518	WITHOUT_CLASSIFICATION	0.001131455370129664	DESIGN	4.0064856882859754E-4	IMPLEMENTATION	7.148346432412057E-6	DEFECT	1.4478125726745288E-6	DOCUMENTATION	6.526832847241712E-7	TEST
// else no collection element, but also no owner	WITHOUT_CLASSIFICATION	0.9999996286050763	WITHOUT_CLASSIFICATION	2.9143508543500566E-7	IMPLEMENTATION	5.438076031526171E-8	DESIGN	1.4050694228154313E-8	DEFECT	1.064364579877849E-8	DOCUMENTATION	8.847379399645272E-10	TEST
//handle empty collections	WITHOUT_CLASSIFICATION	0.9999138083078514	WITHOUT_CLASSIFICATION	6.830804135614725E-5	IMPLEMENTATION	1.7547660811925927E-5	DESIGN	1.2757264405545917E-7	DOCUMENTATION	1.2219121381493693E-7	TEST	8.622612271597873E-8	DEFECT
// else this is not a collection initializer (and empty collections will // be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.9999990743627166	WITHOUT_CLASSIFICATION	7.250686250584673E-7	DESIGN	1.629626938350896E-7	DEFECT	3.733406282807437E-8	IMPLEMENTATION	2.445355983673053E-10	TEST	2.7365945486997978E-11	DOCUMENTATION
// validate() instances of Validatable	WITHOUT_CLASSIFICATION	0.9999866220961264	WITHOUT_CLASSIFICATION	6.651075566243143E-6	DESIGN	6.370424880573964E-6	DEFECT	2.837247265779685E-7	IMPLEMENTATION	4.237783433620932E-8	DOCUMENTATION	3.030086588800511E-8	TEST
// if we know there is exactly 1 row, we can skip. // it would be great if we could _always_ skip this; // it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.5475297488051012	WITHOUT_CLASSIFICATION	0.42335618367581723	DESIGN	0.028999391163555797	DEFECT	6.0327579040004754E-5	IMPLEMENTATION	5.07268128587696E-5	TEST	3.621963627034661E-6	DOCUMENTATION
// remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.9999941379356887	WITHOUT_CLASSIFICATION	5.771097885606115E-6	DESIGN	8.287156181090282E-8	IMPLEMENTATION	6.447848255741775E-9	DEFECT	1.0065588202077166E-9	DOCUMENTATION	6.40456759031263E-10	TEST
//null version means the object is in the process of being loaded somewhere else in the ResultSet	WITHOUT_CLASSIFICATION	0.9999767912994378	WITHOUT_CLASSIFICATION	1.6197075704129452E-5	DESIGN	6.9900407742960786E-6	DEFECT	1.5615004932882012E-8	DOCUMENTATION	3.6984949473970157E-9	IMPLEMENTATION	2.270583840618394E-9	TEST
//problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.9965011015581858	WITHOUT_CLASSIFICATION	0.00184048305523051	DEFECT	0.001600579547554572	DESIGN	3.286395992894157E-5	DOCUMENTATION	2.1540598697606557E-5	IMPLEMENTATION	3.4312804025582688E-6	TEST
//use the id passed in	WITHOUT_CLASSIFICATION	0.9999979620064746	WITHOUT_CLASSIFICATION	1.6067234292707164E-6	IMPLEMENTATION	1.895910431390639E-7	DESIGN	1.2992934742658717E-7	DOCUMENTATION	1.0068291978644064E-7	TEST	1.106678576811326E-8	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999970487101577	WITHOUT_CLASSIFICATION	1.2280163294842106E-6	DESIGN	7.505970548208867E-7	DEFECT	6.403648033441418E-7	DOCUMENTATION	2.240365026478926E-7	TEST	1.082751520528961E-7	IMPLEMENTATION
// prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.9999996879293803	WITHOUT_CLASSIFICATION	1.8568781841998158E-7	IMPLEMENTATION	1.1124019986508511E-7	DEFECT	7.50234464762481E-9	DOCUMENTATION	6.511489494126241E-9	DESIGN	1.1287673517985196E-9	TEST
//no point doing this if NONE was requested	WITHOUT_CLASSIFICATION	0.9998923652117313	WITHOUT_CLASSIFICATION	9.533424986813464E-5	TEST	9.830827625709416E-6	DESIGN	1.2511772756196275E-6	DEFECT	6.795981089091608E-7	IMPLEMENTATION	5.389353901868387E-7	DOCUMENTATION
//If the object is already loaded, return the loaded one	WITHOUT_CLASSIFICATION	0.9999803813342099	WITHOUT_CLASSIFICATION	9.423758900213912E-6	DEFECT	7.438193505613785E-6	IMPLEMENTATION	2.6679708518572625E-6	DESIGN	5.246454134737618E-8	DOCUMENTATION	3.627799121177967E-8	TEST
//its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.9999012326230639	WITHOUT_CLASSIFICATION	4.59026629226225E-5	DESIGN	3.843433195429544E-5	DEFECT	8.513289650580625E-6	TEST	3.0155691761205815E-6	IMPLEMENTATION	2.9015232324726614E-6	DOCUMENTATION
// cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.9997500797751465	WITHOUT_CLASSIFICATION	2.3951080321434125E-4	IMPLEMENTATION	8.508662213750876E-6	DESIGN	9.11544912116991E-7	DOCUMENTATION	7.795121430570673E-7	DEFECT	2.0970237010434353E-7	TEST
//the load() which takes an entity does not pass an entityName	WITHOUT_CLASSIFICATION	0.9999284924805256	WITHOUT_CLASSIFICATION	3.2145101583953866E-5	DEFECT	1.6831862860721796E-5	IMPLEMENTATION	1.2101314230267828E-5	TEST	7.370977239096457E-6	DESIGN	3.0582635603466355E-6	DOCUMENTATION
//we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.9999924770437439	WITHOUT_CLASSIFICATION	6.534216913615448E-6	IMPLEMENTATION	4.6084410216729826E-7	DOCUMENTATION	4.520691385170134E-7	DEFECT	4.785168135312052E-8	DESIGN	2.797442050431137E-8	TEST
// look for a proxy	WITHOUT_CLASSIFICATION	0.9999940324157168	WITHOUT_CLASSIFICATION	2.5406411394268416E-6	DESIGN	2.081036995251008E-6	DEFECT	1.3072819624315008E-6	IMPLEMENTATION	2.2579619261612216E-8	DOCUMENTATION	1.6044566813488748E-8	TEST
//we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.9910759073027775	WITHOUT_CLASSIFICATION	0.007691814844822345	IMPLEMENTATION	6.833288538292801E-4	DESIGN	4.927791520570711E-4	TEST	5.4415978769449597E-5	DOCUMENTATION	1.7538677442892706E-6	DEFECT
//its the given optional object	WITHOUT_CLASSIFICATION	0.9999788828340453	WITHOUT_CLASSIFICATION	6.186090363918967E-6	IMPLEMENTATION	5.79678775388204E-6	DESIGN	4.5151779336475566E-6	DEFECT	4.467276282403731E-6	DOCUMENTATION	1.5183362064713516E-7	TEST
// instantiate a new instance	WITHOUT_CLASSIFICATION	0.9999846867380164	WITHOUT_CLASSIFICATION	1.5230038236492255E-5	DESIGN	4.212308140805399E-8	DOCUMENTATION	3.121501438230963E-8	DEFECT	7.805911018808415E-9	TEST	2.0797402715120682E-9	IMPLEMENTATION
//need to hydrate it.	WITHOUT_CLASSIFICATION	0.9953914804616333	WITHOUT_CLASSIFICATION	0.0040705677132045525	DESIGN	4.0706409265626103E-4	IMPLEMENTATION	8.448462532943491E-5	TEST	4.491912823780819E-5	DOCUMENTATION	1.483978938534995E-6	DEFECT
// return a newly loaded object	WITHOUT_CLASSIFICATION	0.9999951996076518	WITHOUT_CLASSIFICATION	4.427581992264721E-6	DESIGN	3.67253574185615E-7	DEFECT	3.62403065181311E-9	DOCUMENTATION	1.0668080002009939E-9	IMPLEMENTATION	8.659430736359354E-10	TEST
//will be ignored, using the existing Entry instead	WITHOUT_CLASSIFICATION	0.9999979502949148	WITHOUT_CLASSIFICATION	1.0650541404710145E-6	IMPLEMENTATION	7.570100763458281E-7	DESIGN	1.508817825361118E-7	DEFECT	5.999345487009004E-8	DOCUMENTATION	1.6765630910222284E-8	TEST
// key is an entity involved with the operation performed by the listener; // value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.9999999928207546	WITHOUT_CLASSIFICATION	6.091791027876355E-9	DESIGN	5.176397520498215E-10	IMPLEMENTATION	3.428980191731832E-10	DEFECT	2.2110248985745292E-10	TEST	5.814069363319363E-12	DOCUMENTATION
//materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.9996930751763959	WITHOUT_CLASSIFICATION	2.821890892571094E-4	DESIGN	1.1359263392706311E-5	IMPLEMENTATION	7.8363294322634E-6	DOCUMENTATION	4.746210758965153E-6	TEST	7.93930762949519E-7	DEFECT
// Get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.9999994106567511	WITHOUT_CLASSIFICATION	5.8012021666534E-7	DESIGN	4.619399241298724E-9	IMPLEMENTATION	3.0690215666970976E-9	TEST	1.1380390735522991E-9	DOCUMENTATION	3.9657240630313167E-10	DEFECT
// ok in normal Hibernate usage to delete a detached entity; JPA however // forbids it, thus this is a hook for HEM to affect this behavior	WITHOUT_CLASSIFICATION	0.9995084504007252	WITHOUT_CLASSIFICATION	4.1280618209321463E-4	DEFECT	7.670608228663499E-5	DESIGN	1.935491861050422E-6	IMPLEMENTATION	9.252340331117114E-8	DOCUMENTATION	9.31963069185152E-9	TEST
// the entry will be removed after the flush, and will no longer // override the stale snapshot // This is now handled by removeEntity() in EntityDeleteAction //persistenceContext.removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.999741015292842	WITHOUT_CLASSIFICATION	2.0187164128558998E-4	DESIGN	5.4934959274769664E-5	DEFECT	2.1737032652646E-6	IMPLEMENTATION	3.2419145061165153E-9	DOCUMENTATION	1.1614180087658047E-9	TEST
//addInitializedCollection(collection, persister, id);	WITHOUT_CLASSIFICATION	0.999990811359008	WITHOUT_CLASSIFICATION	4.986769107490103E-6	IMPLEMENTATION	3.534729451825157E-6	DESIGN	3.9066661176707455E-7	DEFECT	1.4260313916176677E-7	DOCUMENTATION	1.3387268172517106E-7	TEST
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999436305875675	WITHOUT_CLASSIFICATION	2.110339497928084E-5	DEFECT	1.568933342052672E-5	IMPLEMENTATION	1.4725918444870232E-5	DESIGN	2.9826470555039145E-6	DOCUMENTATION	1.8681185323399315E-6	TEST
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999436305875675	WITHOUT_CLASSIFICATION	2.110339497928084E-5	DEFECT	1.568933342052672E-5	IMPLEMENTATION	1.4725918444870232E-5	DESIGN	2.9826470555039145E-6	DOCUMENTATION	1.8681185323399315E-6	TEST
/*|| oj.getJoinable().consumesCollectionAlias() */	WITHOUT_CLASSIFICATION	0.9999981036652291	WITHOUT_CLASSIFICATION	8.379282006356788E-7	DESIGN	6.020012626635524E-7	DEFECT	1.909130613310413E-7	IMPLEMENTATION	1.5372220488493196E-7	DOCUMENTATION	1.1177004138940593E-7	TEST
// here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.9993730091599559	WITHOUT_CLASSIFICATION	6.267391917818685E-4	DESIGN	1.1524168596904037E-7	IMPLEMENTATION	1.002390906580111E-7	TEST	2.5218651845420038E-8	DEFECT	1.0948833599353701E-8	DOCUMENTATION
// Code to handle subclasses of topClass	WITHOUT_CLASSIFICATION	0.9998310334126951	WITHOUT_CLASSIFICATION	1.6835147145011908E-4	DESIGN	3.4606973705978287E-7	DEFECT	1.442062048598868E-7	IMPLEMENTATION	8.538432103455519E-8	TEST	3.945559172073435E-8	DOCUMENTATION
//woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.99649420640042	WITHOUT_CLASSIFICATION	0.003503209322391246	DESIGN	1.5311352993733843E-6	DEFECT	4.821689263285011E-7	DOCUMENTATION	3.41819973128781E-7	TEST	2.2915298981697675E-7	IMPLEMENTATION
// we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.9999864812786671	WITHOUT_CLASSIFICATION	8.738668407348164E-6	DEFECT	2.3561664403154116E-6	DESIGN	2.2470995449550755E-6	IMPLEMENTATION	1.3353049533555443E-7	DOCUMENTATION	4.3256444857607237E-8	TEST
// we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.9996983510380775	WITHOUT_CLASSIFICATION	1.8851929513887021E-4	DESIGN	1.0771161758670557E-4	IMPLEMENTATION	2.623112665356195E-6	DEFECT	1.7631883178213951E-6	TEST	1.0317482136632688E-6	DOCUMENTATION
// synchronized to avoid multi-thread access issues; defined as method synch to avoid // potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.99999964135106	WITHOUT_CLASSIFICATION	3.45641725010662E-7	DESIGN	1.044574019567997E-8	DEFECT	2.211925341796864E-9	DOCUMENTATION	1.8513401926487237E-10	TEST	1.6441537047553103E-10	IMPLEMENTATION
// Allows various loaders (ok mainly the QueryLoader :) to check // whether scrolling of their result set should be allowed. // // By default it is allowed.	WITHOUT_CLASSIFICATION	0.9999942581501355	WITHOUT_CLASSIFICATION	3.3863558710971873E-6	IMPLEMENTATION	2.343026306799358E-6	DEFECT	7.662552935183489E-9	TEST	3.3444544550469194E-9	DESIGN	1.4606792130618367E-9	DOCUMENTATION
//before adding to collection!	WITHOUT_CLASSIFICATION	0.999867875397128	WITHOUT_CLASSIFICATION	7.588757810683867E-5	DEFECT	2.8153700508740302E-5	DESIGN	2.3755167968828857E-5	IMPLEMENTATION	2.1754871795878586E-6	DOCUMENTATION	2.1526691081611437E-6	TEST
// if the current depth is 0, the root thing being loaded is the // many-to-many collection itself.  Here, it is alright to use // an inner join...	WITHOUT_CLASSIFICATION	0.9999998499280758	WITHOUT_CLASSIFICATION	1.197444386347994E-7	DESIGN	2.2275378971145595E-8	DEFECT	6.473419296762535E-9	TEST	1.2370078070719936E-9	IMPLEMENTATION	3.4167944067787435E-10	DOCUMENTATION
//operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.9999977824361422	WITHOUT_CLASSIFICATION	1.2199690196121915E-6	DESIGN	7.605797738012587E-7	IMPLEMENTATION	1.4461602315915525E-7	DEFECT	8.007800494338484E-8	DOCUMENTATION	1.232103630388296E-8	TEST
// simple, because we can't have a one-to-one or a collection  // (or even a property-ref) in a composite-element:	WITHOUT_CLASSIFICATION	0.9999839282149952	WITHOUT_CLASSIFICATION	1.5119113107563177E-5	DEFECT	7.99837497825903E-7	IMPLEMENTATION	1.3223161954252954E-7	DESIGN	1.9794405732125535E-8	DOCUMENTATION	8.083739609185239E-10	TEST
//a composite key	WITHOUT_CLASSIFICATION	0.9999962943514509	WITHOUT_CLASSIFICATION	3.2632571775949332E-6	DESIGN	2.454921526206898E-7	IMPLEMENTATION	8.812482906717231E-8	DOCUMENTATION	8.480363079892092E-8	DEFECT	2.397075900565398E-8	TEST
// if no batch, use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.9999976701257565	WITHOUT_CLASSIFICATION	2.2525265386326586E-6	DESIGN	3.857181229038573E-8	IMPLEMENTATION	2.0575979832780822E-8	DOCUMENTATION	1.4615864785566117E-8	DEFECT	3.584048135785397E-9	TEST
//it must be a collection fetch	WITHOUT_CLASSIFICATION	0.9998809647981237	WITHOUT_CLASSIFICATION	1.1516821381558155E-4	DESIGN	2.6769781222660806E-6	IMPLEMENTATION	6.045625133276425E-7	DEFECT	4.6092647899991167E-7	TEST	1.245209460195687E-7	DOCUMENTATION
// needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.6713722117331947	DESIGN	0.3060094230293065	WITHOUT_CLASSIFICATION	0.020316925939720492	IMPLEMENTATION	0.001575613073079483	DEFECT	5.826699222674515E-4	DOCUMENTATION	1.4315630243150315E-4	TEST
/*&& etype.isReferenceToPrimaryKey()*/	WITHOUT_CLASSIFICATION	0.9999943866996233	WITHOUT_CLASSIFICATION	2.6428559134489438E-6	DESIGN	2.2612239189462982E-6	IMPLEMENTATION	5.318607100338726E-7	DEFECT	1.5412350639406172E-7	DOCUMENTATION	2.3236327798372998E-8	TEST
// it might still need to apply a collection ordering based on a // many-to-many defined order-by...	WITHOUT_CLASSIFICATION	0.9590372849901121	WITHOUT_CLASSIFICATION	0.034697164699869644	IMPLEMENTATION	0.0056020456573421815	DESIGN	5.662711685763123E-4	DEFECT	6.974900362809156E-5	TEST	2.748448047176389E-5	DOCUMENTATION
// if a composite key, use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching //TODO: unnecessary for databases with ANSI-style joins	WITHOUT_CLASSIFICATION	0.9895467831844885	WITHOUT_CLASSIFICATION	0.009645704539728215	IMPLEMENTATION	8.0492622777829E-4	DESIGN	1.570512961419909E-6	DEFECT	7.607423561838484E-7	TEST	2.5479268756484035E-7	DOCUMENTATION
// belong to other persister // belong to other persister	WITHOUT_CLASSIFICATION	0.9988963900595121	WITHOUT_CLASSIFICATION	0.0010977852395676027	DESIGN	3.3270028375390586E-6	IMPLEMENTATION	1.3369964880815306E-6	DEFECT	1.092613730586853E-6	TEST	6.808786397311253E-8	DOCUMENTATION
// we found it	WITHOUT_CLASSIFICATION	0.9999639035006064	WITHOUT_CLASSIFICATION	2.189577368365737E-5	DEFECT	1.2180884283360907E-5	DESIGN	1.1639773026779461E-6	IMPLEMENTATION	6.469451508293991E-7	DOCUMENTATION	2.0891897303782288E-7	TEST
//we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.999984865337038	WITHOUT_CLASSIFICATION	1.4066083525696488E-5	DESIGN	5.859854489359594E-7	DOCUMENTATION	3.2158898010253097E-7	IMPLEMENTATION	1.21553126524256E-7	DEFECT	3.9451880657963126E-8	TEST
//disable a join back to this same association	WITHOUT_CLASSIFICATION	0.998080794069849	WITHOUT_CLASSIFICATION	0.001767319558562737	DESIGN	1.1530314108082954E-4	DOCUMENTATION	2.439785681967862E-5	TEST	8.407727127191319E-6	IMPLEMENTATION	3.777646560636423E-6	DEFECT
//NOTE: unlike all other Loaders, this one is NOT //      multithreaded, or cacheable!!	WITHOUT_CLASSIFICATION	0.9989070672030912	WITHOUT_CLASSIFICATION	0.0010627098190897186	DESIGN	2.414518574322956E-5	IMPLEMENTATION	4.07225932502906E-6	TEST	1.8507508086256058E-6	DEFECT	1.5478194218638197E-7	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999997455777029	WITHOUT_CLASSIFICATION	2.1469086225994248E-7	DESIGN	3.104770988455772E-8	DOCUMENTATION	7.531160574908647E-9	DEFECT	7.070879987843447E-10	IMPLEMENTATION	4.4547629888555714E-10	TEST
//root entity comes *last*	WITHOUT_CLASSIFICATION	0.9998593887851797	WITHOUT_CLASSIFICATION	1.387154390766953E-4	DESIGN	7.80947562012294E-7	IMPLEMENTATION	7.62546294256476E-7	DEFECT	2.2742486310548431E-7	TEST	1.2485702426722754E-7	DOCUMENTATION
//deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.9999561733787268	WITHOUT_CLASSIFICATION	2.275586007369283E-5	DESIGN	1.5611105200960926E-5	DEFECT	4.959395863630958E-6	IMPLEMENTATION	4.4855484308309247E-7	DOCUMENTATION	5.17052917689597E-8	TEST
//alias may be null //EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999799133010693	WITHOUT_CLASSIFICATION	9.407955133479005E-6	DESIGN	7.90251537997603E-6	DEFECT	2.579950295419818E-6	IMPLEMENTATION	1.593773025826576E-7	DOCUMENTATION	3.690081921647853E-8	TEST
// if it is a compound path	WITHOUT_CLASSIFICATION	0.9999978775465774	WITHOUT_CLASSIFICATION	1.9579180801844625E-6	DESIGN	9.41999510743506E-8	IMPLEMENTATION	4.715880632961952E-8	TEST	2.0834834272387605E-8	DEFECT	2.341750858058347E-9	DOCUMENTATION
// otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.9999872723305172	WITHOUT_CLASSIFICATION	8.501662037376369E-6	IMPLEMENTATION	4.140412782113985E-6	DESIGN	5.2492177425813076E-8	TEST	1.8857312985118778E-8	DEFECT	1.4245172867772158E-8	DOCUMENTATION
// if its the root criteria, we are done	WITHOUT_CLASSIFICATION	0.9999991495267868	WITHOUT_CLASSIFICATION	7.957431406841776E-7	DESIGN	3.598694449259776E-8	TEST	1.0176519967238903E-8	DEFECT	7.064643924034222E-9	IMPLEMENTATION	1.5019640648466937E-9	DOCUMENTATION
// otherwise, recurse	WITHOUT_CLASSIFICATION	0.9998782442775811	WITHOUT_CLASSIFICATION	1.13550318419979E-4	DESIGN	7.732145870226005E-6	IMPLEMENTATION	2.6830270830607114E-7	DEFECT	1.193136041811457E-7	DOCUMENTATION	8.564181628549948E-8	TEST
//the criteria instance	WITHOUT_CLASSIFICATION	0.9999950614716295	WITHOUT_CLASSIFICATION	4.673170078920051E-6	DESIGN	1.4091940227272152E-7	IMPLEMENTATION	5.704855274810987E-8	DOCUMENTATION	3.3911974486340065E-8	DEFECT	3.347836208565552E-8	TEST
// the entity name	WITHOUT_CLASSIFICATION	0.9999940790335572	WITHOUT_CLASSIFICATION	3.656009380665537E-6	IMPLEMENTATION	1.386002093562497E-6	DESIGN	5.079381211395603E-7	DOCUMENTATION	2.4352694105476384E-7	DEFECT	1.2748990644749567E-7	TEST
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9994004721459284	WITHOUT_CLASSIFICATION	3.093663370828488E-4	DESIGN	2.056517120452381E-4	DEFECT	6.944852319842877E-5	IMPLEMENTATION	7.572661470978628E-6	TEST	7.48862027412747E-6	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9994004721459284	WITHOUT_CLASSIFICATION	3.093663370828488E-4	DESIGN	2.056517120452381E-4	DEFECT	6.944852319842877E-5	IMPLEMENTATION	7.572661470978628E-6	TEST	7.48862027412747E-6	DOCUMENTATION
//it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.9999882939197637	WITHOUT_CLASSIFICATION	7.062215946172046E-6	DEFECT	3.849504050743555E-6	DESIGN	6.931290589654915E-7	IMPLEMENTATION	7.104450717380342E-8	DOCUMENTATION	3.018667327540825E-8	TEST
//should never happen, i think	WITHOUT_CLASSIFICATION	0.9990479031138397	WITHOUT_CLASSIFICATION	9.422045366274252E-4	DESIGN	3.5907073941119203E-6	TEST	2.2661829843805504E-6	DOCUMENTATION	2.1300780686361546E-6	IMPLEMENTATION	1.9053810857771338E-6	DEFECT
// Detect discriminator values...	WITHOUT_CLASSIFICATION	0.9999778754009361	WITHOUT_CLASSIFICATION	1.9372101646418062E-5	DESIGN	2.3512752267120654E-6	DEFECT	2.12866009926002E-7	IMPLEMENTATION	1.0732831237927075E-7	TEST	8.102786855653638E-8	DOCUMENTATION
// Convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.9999383554988622	WITHOUT_CLASSIFICATION	5.027395413098962E-5	DESIGN	5.633398827854285E-6	DEFECT	4.004294748822036E-6	IMPLEMENTATION	1.263557797975857E-6	DOCUMENTATION	4.6929563216652613E-7	TEST
// and the qualifier is not the alias of this criteria //      -> check to see if we belong to some criteria other //          than the one that created us	WITHOUT_CLASSIFICATION	0.9999941095146903	WITHOUT_CLASSIFICATION	5.838866439518371E-6	DESIGN	2.4736265767921922E-8	TEST	1.4020366740941478E-8	IMPLEMENTATION	1.0384843163980845E-8	DOCUMENTATION	2.47739453605613E-9	DEFECT
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999270792489898	WITHOUT_CLASSIFICATION	4.483117389761513E-5	DEFECT	2.7152791262376232E-5	DESIGN	8.107005955873115E-7	TEST	7.161414752254888E-8	IMPLEMENTATION	5.447110715420692E-8	DOCUMENTATION
// Otherwise, this is an ordinary value.	WITHOUT_CLASSIFICATION	0.9999953691613794	WITHOUT_CLASSIFICATION	3.329018365671084E-6	DESIGN	1.2670983083667806E-6	DEFECT	1.5593056103748828E-8	TEST	1.1480963750143946E-8	DOCUMENTATION	7.647926592977733E-9	IMPLEMENTATION
// Currently *not* cachable if autodiscover types is in effect (e.g. "select * ...")	WITHOUT_CLASSIFICATION	0.9997263754278601	WITHOUT_CLASSIFICATION	2.7360306174800865E-4	DESIGN	1.3311686579477432E-8	DEFECT	3.376835851341824E-9	TEST	2.698273911443047E-9	DOCUMENTATION	2.123595499010457E-9	IMPLEMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// this is only needed (afaict) for ResultTransformer processing...	WITHOUT_CLASSIFICATION	0.9908378333840636	WITHOUT_CLASSIFICATION	0.009153422896474117	DESIGN	6.369468391917952E-6	TEST	1.3664713416043636E-6	DEFECT	8.918018669112025E-7	DOCUMENTATION	1.1597786168823052E-7	IMPLEMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999989005033351	WITHOUT_CLASSIFICATION	1.0943856236333108E-6	DESIGN	3.562715007724488E-9	TEST	8.338097335165218E-10	IMPLEMENTATION	5.427471729984422E-10	DEFECT	1.717694768925866E-10	DOCUMENTATION
// build an array with indices equal to the total number // of actual returns in the result Hibernate will return // for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.9999716902624886	WITHOUT_CLASSIFICATION	1.3656699323725984E-5	IMPLEMENTATION	1.2322246588947283E-5	DESIGN	2.3188426561671898E-6	DEFECT	6.137479555179587E-9	TEST	5.81146305787366E-9	DOCUMENTATION
// replace {....} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.999877225245204	WITHOUT_CLASSIFICATION	1.1662256751694755E-4	DESIGN	3.351333593362974E-6	IMPLEMENTATION	2.151405098507243E-6	DEFECT	4.2951189512477963E-7	TEST	2.1993669205546018E-7	DOCUMENTATION
// No additional open braces found in the string, append the // rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.9999967147911182	WITHOUT_CLASSIFICATION	2.9639040275846353E-6	DEFECT	2.0539809839682886E-7	TEST	6.702264278744402E-8	DESIGN	2.993270739016884E-8	IMPLEMENTATION	1.8951405726182084E-8	DOCUMENTATION
// apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.9997570466704754	WITHOUT_CLASSIFICATION	2.2548634489186686E-4	DESIGN	9.161153774726374E-6	IMPLEMENTATION	6.368098811141545E-6	DEFECT	1.350331427077315E-6	DOCUMENTATION	5.874006200272705E-7	TEST
// it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.9999998004099229	WITHOUT_CLASSIFICATION	1.5280233036296802E-7	IMPLEMENTATION	2.5258623579516375E-8	DEFECT	1.2648481806558884E-8	DESIGN	8.438705199002188E-9	TEST	4.4193616984258564E-10	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9976146899275381	WITHOUT_CLASSIFICATION	0.0010590758556429363	IMPLEMENTATION	8.296653487609373E-4	DESIGN	4.590387504827638E-4	DEFECT	3.105087242106356E-5	DOCUMENTATION	6.479245154190466E-6	TEST
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9976146899275381	WITHOUT_CLASSIFICATION	0.0010590758556429363	IMPLEMENTATION	8.296653487609373E-4	DESIGN	4.590387504827638E-4	DEFECT	3.105087242106356E-5	DOCUMENTATION	6.479245154190466E-6	TEST
// The current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.9999813650127286	WITHOUT_CLASSIFICATION	1.7479402298333023E-5	DEFECT	9.447497158341164E-7	IMPLEMENTATION	1.7953634392172812E-7	DESIGN	3.060648786779037E-8	DOCUMENTATION	6.924254541911028E-10	TEST
// it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.9999978812807087	WITHOUT_CLASSIFICATION	2.001939489154923E-6	DEFECT	9.54949183573601E-8	DESIGN	8.531110028067508E-9	TEST	8.029350228442373E-9	IMPLEMENTATION	4.724423557627816E-9	DOCUMENTATION
// Possibly handle :something parameters for the query ?	WITHOUT_CLASSIFICATION	0.9891876244088973	WITHOUT_CLASSIFICATION	0.009656785365588312	DESIGN	0.0011108925803731482	IMPLEMENTATION	2.1492025960201833E-5	DEFECT	1.8381402908663483E-5	TEST	4.824216272447061E-6	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999995180619266	WITHOUT_CLASSIFICATION	4.2415289652949895E-7	DESIGN	3.1896268999519083E-8	IMPLEMENTATION	2.507725488998992E-8	DEFECT	6.094687483138868E-10	TEST	2.0218417637510097E-10	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9978396653539129	WITHOUT_CLASSIFICATION	0.002047636254167967	DESIGN	8.364911112739331E-5	IMPLEMENTATION	1.746060139679287E-5	DEFECT	7.776673285281719E-6	DOCUMENTATION	3.812006109517023E-6	TEST
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9993616607644588	WITHOUT_CLASSIFICATION	2.2017519860292452E-4	DEFECT	2.138252266508122E-4	DESIGN	1.7615030478961577E-4	IMPLEMENTATION	1.495274744361376E-5	DOCUMENTATION	1.3235758054292526E-5	TEST
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// Now, process the returns	WITHOUT_CLASSIFICATION	0.9999981209410521	WITHOUT_CLASSIFICATION	1.404812993631173E-6	DESIGN	4.133955647336143E-7	IMPLEMENTATION	4.654339434904896E-8	DEFECT	9.136543322676539E-9	DOCUMENTATION	5.1704518571197605E-9	TEST
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.9998296998121845	WITHOUT_CLASSIFICATION	1.648735820390748E-4	DESIGN	4.83368878623027E-6	IMPLEMENTATION	4.193964634914944E-7	DOCUMENTATION	1.3372194880212112E-7	TEST	3.979857780261315E-8	DEFECT
// already been processed...	WITHOUT_CLASSIFICATION	0.9998296998121845	WITHOUT_CLASSIFICATION	1.648735820390748E-4	DESIGN	4.83368878623027E-6	IMPLEMENTATION	4.193964634914944E-7	DOCUMENTATION	1.3372194880212112E-7	TEST	3.979857780261315E-8	DEFECT
// Make sure the owner alias is known...	WITHOUT_CLASSIFICATION	0.9999890646013088	WITHOUT_CLASSIFICATION	4.9010368112218184E-6	IMPLEMENTATION	4.542252736318168E-6	DESIGN	1.329856574089434E-6	DEFECT	9.6624530762597E-8	TEST	6.562803883463948E-8	DOCUMENTATION
// first, break down the returns into maps keyed by alias // so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.9997819492438961	WITHOUT_CLASSIFICATION	1.3816056704272646E-4	IMPLEMENTATION	4.767205893749285E-5	DESIGN	3.2134916867812414E-5	DEFECT	6.805368757871698E-8	TEST	1.5159568235129718E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// If this return's alias has not been processed yet, do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.9999866746774138	WITHOUT_CLASSIFICATION	1.3131652159104192E-5	DESIGN	9.276214023219917E-8	IMPLEMENTATION	6.415432251269444E-8	DEFECT	2.4525761696838392E-8	TEST	1.2228202470805925E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// for merging of versioned entities, we consider the version having // been changed only when: // 1) the two version values are different; //      *AND* // 2) The target actually represents database state! // // This second condition is a special case which allows // an entity to be merged during the same transaction // (though during a seperate operation) in which it was // originally persisted/saved	WITHOUT_CLASSIFICATION	0.9999998514524691	WITHOUT_CLASSIFICATION	8.396221318539234E-8	DESIGN	4.066085651921552E-8	DEFECT	2.295443294735449E-8	IMPLEMENTATION	9.25836726485486E-10	DOCUMENTATION	4.4191685259347244E-11	TEST
// this is the second pass through on a merge op, so here we limit the // replacement to associations types (value types were already replaced // during the first pass)	WITHOUT_CLASSIFICATION	0.9350601999290232	WITHOUT_CLASSIFICATION	0.06493880026279694	DESIGN	7.721970234564834E-7	DOCUMENTATION	1.5275237769265329E-7	TEST	4.311913947126049E-8	IMPLEMENTATION	3.173963918781562E-8	DEFECT
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999383184512969	WITHOUT_CLASSIFICATION	2.725592619822628E-5	IMPLEMENTATION	2.08216441254198E-5	DESIGN	9.65855634305174E-6	DEFECT	2.3499216286859394E-6	DOCUMENTATION	1.5955004076093615E-6	TEST
// cascade-save to collections AFTER the collection owner was saved	WITHOUT_CLASSIFICATION	0.999810908611132	WITHOUT_CLASSIFICATION	1.2753760303640163E-4	IMPLEMENTATION	5.5773738313697915E-5	DESIGN	5.621377367927446E-6	DEFECT	1.0043342751268907E-7	DOCUMENTATION	5.8236722371027474E-8	TEST
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999954666665021	WITHOUT_CLASSIFICATION	3.393595453367035E-6	DESIGN	9.539105103148137E-7	IMPLEMENTATION	1.399094524378963E-7	DEFECT	2.8232026420319152E-8	DOCUMENTATION	1.7686055321805225E-8	TEST
// Use the delegate.	WITHOUT_CLASSIFICATION	0.999999262517913	WITHOUT_CLASSIFICATION	4.132625369160543E-7	IMPLEMENTATION	3.11823009250311E-7	DESIGN	6.252662784115076E-9	DOCUMENTATION	5.188594016034976E-9	TEST	9.552840560648346E-10	DEFECT
// currently only the Hibernate-supplied DbTimestampType is supported here	WITHOUT_CLASSIFICATION	0.9994093430735834	WITHOUT_CLASSIFICATION	5.296035081840943E-4	DESIGN	5.344190337915797E-5	IMPLEMENTATION	5.210447390032872E-6	TEST	1.5511326285723557E-6	DEFECT	8.499348346682736E-7	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9974491165700996	WITHOUT_CLASSIFICATION	0.0021977011235152335	DEFECT	2.823159881837849E-4	IMPLEMENTATION	7.06494980582573E-5	DESIGN	1.821129205876173E-7	DOCUMENTATION	3.470722264986164E-8	TEST
// make a new one	WITHOUT_CLASSIFICATION	0.9999547758749922	WITHOUT_CLASSIFICATION	3.753854769085024E-5	DESIGN	3.7864363161407437E-6	DEFECT	2.4057484713817458E-6	IMPLEMENTATION	1.0439820514401961E-6	TEST	4.4941047805550955E-7	DOCUMENTATION
// not so sure this is even valid subtree.  but if it was, it'd // represent two unrelated table references...	WITHOUT_CLASSIFICATION	0.9999866646809795	WITHOUT_CLASSIFICATION	1.1387887474849578E-5	DESIGN	8.523526965085155E-7	TEST	5.35637736349484E-7	IMPLEMENTATION	5.083056401916927E-7	DEFECT	5.1135472585809415E-8	DOCUMENTATION
// (NOT (GT a b) ) => (LE a b)	WITHOUT_CLASSIFICATION	0.9999967027733673	WITHOUT_CLASSIFICATION	1.902919821548462E-6	DESIGN	1.1599436649435582E-6	IMPLEMENTATION	1.0615232310777371E-7	DEFECT	6.686260862370375E-8	TEST	6.134821456372966E-8	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9997068043774086	WITHOUT_CLASSIFICATION	2.903048824762758E-4	DESIGN	2.1802280324072415E-6	DEFECT	3.6397059942138655E-7	DOCUMENTATION	2.4397328569748985E-7	TEST	1.025681976339668E-7	IMPLEMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9999879678189726	WITHOUT_CLASSIFICATION	1.1999361000839148E-5	DESIGN	1.7990570080191197E-8	DEFECT	5.7305212280896835E-9	TEST	4.8452071389971235E-9	IMPLEMENTATION	4.253728135922706E-9	DOCUMENTATION
//sqlResultTypes = selectClause.getSqlResultTypes();	WITHOUT_CLASSIFICATION	0.9999999635462001	WITHOUT_CLASSIFICATION	2.1638445682433463E-8	DESIGN	1.2669796607139348E-8	DEFECT	9.070871387278047E-10	IMPLEMENTATION	7.628008819107519E-10	DOCUMENTATION	4.756695529611096E-10	TEST
//by default	WITHOUT_CLASSIFICATION	0.9999719184316571	WITHOUT_CLASSIFICATION	1.6785736367814733E-5	DESIGN	6.250927126316792E-6	IMPLEMENTATION	4.152583651990456E-6	DEFECT	6.496703674932691E-7	DOCUMENTATION	2.426508292820274E-7	TEST
// This is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.9998344140469003	WITHOUT_CLASSIFICATION	1.4892319788731601E-4	DESIGN	1.2949164786866667E-5	DEFECT	3.254643779018106E-6	IMPLEMENTATION	3.4928580127758036E-7	TEST	1.096608451685461E-7	DOCUMENTATION
// -- Loader implementation --	WITHOUT_CLASSIFICATION	0.9999280794096288	WITHOUT_CLASSIFICATION	6.840284569013833E-5	IMPLEMENTATION	2.0586780282826013E-6	DESIGN	1.2814970923425467E-6	DEFECT	1.4555807277461958E-7	DOCUMENTATION	3.2011487660113675E-8	TEST
// -- Loader overrides --	WITHOUT_CLASSIFICATION	0.9999998644217621	WITHOUT_CLASSIFICATION	8.571463928718545E-8	DESIGN	2.589156171944625E-8	IMPLEMENTATION	1.3633363962944332E-8	DEFECT	7.0943298846669705E-9	TEST	3.2443430145994203E-9	DOCUMENTATION
// (NOT (IS_NULL a b) ) => (IS_NOT_NULL a b)	WITHOUT_CLASSIFICATION	0.9999906184967265	WITHOUT_CLASSIFICATION	7.3026095509721485E-6	DESIGN	1.7018746629646068E-6	IMPLEMENTATION	2.3951689054552777E-7	DEFECT	8.676744252360239E-8	DOCUMENTATION	5.073472654032508E-8	TEST
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999937595936506	WITHOUT_CLASSIFICATION	2.4543335724847127E-6	DESIGN	1.850122083852487E-6	IMPLEMENTATION	1.0839217482934559E-6	TEST	7.819451939984131E-7	DEFECT	7.00837509358584E-8	DOCUMENTATION
// meant to handle dynamic instantiation queries...	WITHOUT_CLASSIFICATION	0.9977280297279222	WITHOUT_CLASSIFICATION	0.0021663010616640986	DESIGN	8.432914188912271E-5	DEFECT	1.692650082935769E-5	IMPLEMENTATION	2.8219679918905474E-6	DOCUMENTATION	1.591599703409851E-6	TEST
// --- Query translator methods ---	WITHOUT_CLASSIFICATION	0.9999490233281038	WITHOUT_CLASSIFICATION	4.185960809194068E-5	DESIGN	8.05616448363399E-6	IMPLEMENTATION	8.17283587859987E-7	DEFECT	1.2768592607312673E-7	DOCUMENTATION	1.159298068293488E-7	TEST
// -- Implementation private methods --	WITHOUT_CLASSIFICATION	0.9998993953528403	WITHOUT_CLASSIFICATION	6.415937608053006E-5	DESIGN	3.6014219507014376E-5	IMPLEMENTATION	2.955208969239945E-7	DEFECT	1.087842713702465E-7	DOCUMENTATION	2.6746403818904154E-8	TEST
//deduplicate unique constraints sharing the same columns //this is needed by Hibernate Annotations since it creates automagically // unique constraints for the user	WITHOUT_CLASSIFICATION	0.9996764644847701	WITHOUT_CLASSIFICATION	2.584103136657761E-4	IMPLEMENTATION	3.3602075415717096E-5	DEFECT	2.276895342255741E-5	TEST	8.539503353993688E-6	DESIGN	2.1466937193863164E-7	DOCUMENTATION
// Try to find out the name of the primary key to create it as identity if the IdentityGenerator is used	WITHOUT_CLASSIFICATION	0.9984597901201863	WITHOUT_CLASSIFICATION	0.0014845243604002787	DESIGN	5.5312150209348095E-5	IMPLEMENTATION	2.917642185089726E-7	TEST	7.890247152779048E-8	DOCUMENTATION	2.702514044612615E-9	DEFECT
// to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.9995583911912304	WITHOUT_CLASSIFICATION	4.240801490738431E-4	DESIGN	1.6771445606593107E-5	IMPLEMENTATION	6.855388133168278E-7	DEFECT	5.87558319805008E-8	DOCUMENTATION	1.2919444008493577E-8	TEST
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999963104563276	WITHOUT_CLASSIFICATION	2.989339379122701E-6	DESIGN	5.634794805159937E-7	IMPLEMENTATION	1.2559394338688324E-7	DEFECT	6.88884859121627E-9	DOCUMENTATION	4.242020704654791E-9	TEST
//used also for generation of FK names!	WITHOUT_CLASSIFICATION	0.9996229352137821	WITHOUT_CLASSIFICATION	1.9385931561670684E-4	DESIGN	1.3032647829446347E-4	IMPLEMENTATION	3.149565679230624E-5	DEFECT	1.265041328113225E-5	TEST	8.732922233448871E-6	DOCUMENTATION
//usually useless	WITHOUT_CLASSIFICATION	0.9994259270953957	WITHOUT_CLASSIFICATION	5.704425142320559E-4	DESIGN	2.7232033839222064E-6	IMPLEMENTATION	3.802213653831147E-7	DOCUMENTATION	3.3531524106394676E-7	DEFECT	1.916503820040783E-7	TEST
// added this caching as I noticed that getType() is being called multiple times...	WITHOUT_CLASSIFICATION	0.9998878736678243	WITHOUT_CLASSIFICATION	1.0952041594004758E-4	DESIGN	2.2128020209921843E-6	IMPLEMENTATION	3.042999210739935E-7	DEFECT	6.492926229287659E-8	TEST	2.3885031229244823E-8	DOCUMENTATION
//do not add unique constraint on DB not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.9999996652110991	WITHOUT_CLASSIFICATION	2.9423007199950116E-7	IMPLEMENTATION	2.1272718460935922E-8	DESIGN	8.956426983183411E-9	TEST	6.84080281546428E-9	DOCUMENTATION	3.488880634251708E-9	DEFECT
//for backward compatibility, disable this:	WITHOUT_CLASSIFICATION	0.9999990193170301	WITHOUT_CLASSIFICATION	8.034252931691506E-7	IMPLEMENTATION	8.724795171075791E-8	DESIGN	5.4681886804511956E-8	TEST	2.0283127914142088E-8	DOCUMENTATION	1.5044710303929696E-8	DEFECT
//may be final //may be final //may be final	WITHOUT_CLASSIFICATION	0.9999458969086743	WITHOUT_CLASSIFICATION	3.7228226099232195E-5	DESIGN	1.4668777577419332E-5	DEFECT	1.116095665120783E-6	IMPLEMENTATION	8.399581802749827E-7	DOCUMENTATION	2.5003380368428796E-7	TEST
//may be final	WITHOUT_CLASSIFICATION	0.9999505736865858	WITHOUT_CLASSIFICATION	4.321819017584054E-5	DESIGN	4.16302365467519E-6	DEFECT	1.0693002987195059E-6	IMPLEMENTATION	8.271976673868259E-7	DOCUMENTATION	1.4860161745363825E-7	TEST
// may be final	WITHOUT_CLASSIFICATION	0.999993382010016	WITHOUT_CLASSIFICATION	4.901769454349161E-6	DESIGN	1.3413083007375133E-6	DEFECT	2.666093120980486E-7	IMPLEMENTATION	8.831615835651768E-8	DOCUMENTATION	1.998675857653339E-8	TEST
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999682652905713	WITHOUT_CLASSIFICATION	3.105001630256932E-5	DESIGN	4.669951268274544E-7	DEFECT	1.2769638892733655E-7	DOCUMENTATION	7.238196282760684E-8	TEST	1.7619647832222042E-8	IMPLEMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9999997164951774	WITHOUT_CLASSIFICATION	2.3900014443070514E-7	DESIGN	2.465398278882679E-8	DOCUMENTATION	9.673664754565307E-9	TEST	7.793908676846041E-9	IMPLEMENTATION	2.3831219023590477E-9	DEFECT
// the root of the incoming property path matched one // of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.9999999806261133	WITHOUT_CLASSIFICATION	1.283156566265197E-8	DEFECT	5.180355389644938E-9	DESIGN	9.116734068258435E-10	TEST	3.3647351594997725E-10	IMPLEMENTATION	1.1381866142348513E-10	DOCUMENTATION
// ignore it...	WITHOUT_CLASSIFICATION	0.9999841083143425	WITHOUT_CLASSIFICATION	1.1238184896096302E-5	DESIGN	2.1037110573219014E-6	IMPLEMENTATION	1.9454773357328693E-6	DEFECT	3.740251337125938E-7	DOCUMENTATION	2.30287234622086E-7	TEST
//flat recursive algorithm	WITHOUT_CLASSIFICATION	0.9999903096139724	WITHOUT_CLASSIFICATION	5.642380664451413E-6	IMPLEMENTATION	1.9368169146984223E-6	DESIGN	1.538375541484815E-6	DEFECT	4.917282660885958E-7	DOCUMENTATION	8.108464090265447E-8	TEST
//an identifier mapper => getKey will be included in the getNonDuplicatedPropertyIterator() //and checked later, so it needs to be excluded	WITHOUT_CLASSIFICATION	0.9999907784016899	WITHOUT_CLASSIFICATION	8.987969926787472E-6	DESIGN	1.5348929622735142E-7	DEFECT	4.593603561366226E-8	DOCUMENTATION	3.06691453337207E-8	IMPLEMENTATION	3.533906122519786E-9	TEST
//if the hibernate-mapping did not specify a schema/catalog, use the defaults //specified by properties - but note that if the schema/catalog were specified //in hibernate-mapping, or as params, they will already be initialized and //will override the values set here (they are in identifierGeneratorProperties)	WITHOUT_CLASSIFICATION	0.9999999598185015	WITHOUT_CLASSIFICATION	3.955191834708751E-8	IMPLEMENTATION	2.6070468399245935E-10	DESIGN	1.9985096439021535E-10	DOCUMENTATION	1.334722425953348E-10	DEFECT	3.5552130504495773E-11	TEST
//pass the entity-name, if not a collection-id	WITHOUT_CLASSIFICATION	0.9999507397798273	WITHOUT_CLASSIFICATION	3.3007857701359735E-5	IMPLEMENTATION	1.3482081238298389E-5	DESIGN	2.080107857620913E-6	DEFECT	5.698939050543225E-7	TEST	1.2027947028192817E-7	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999682652905713	WITHOUT_CLASSIFICATION	3.105001630256932E-5	DESIGN	4.669951268274544E-7	DEFECT	1.2769638892733655E-7	DOCUMENTATION	7.238196282760684E-8	TEST	1.7619647832222042E-8	IMPLEMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9999997164951774	WITHOUT_CLASSIFICATION	2.3900014443070514E-7	DESIGN	2.465398278882679E-8	DOCUMENTATION	9.673664754565307E-9	TEST	7.793908676846041E-9	IMPLEMENTATION	2.3831219023590477E-9	DEFECT
//pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.9999790510916887	WITHOUT_CLASSIFICATION	1.1520821774094106E-5	IMPLEMENTATION	8.199975980909836E-6	DESIGN	9.118953927886404E-7	DEFECT	2.52909437995661E-7	TEST	6.330572547204204E-8	DOCUMENTATION
//needed to satisfy KeyValue	WITHOUT_CLASSIFICATION	0.9994894551349834	WITHOUT_CLASSIFICATION	3.277403898735247E-4	DESIGN	1.424023580384258E-4	IMPLEMENTATION	2.8787043601672603E-5	DOCUMENTATION	9.152759009593317E-6	DEFECT	2.4623144933306915E-6	TEST
// empty means no scoping	WITHOUT_CLASSIFICATION	0.9999993078359323	WITHOUT_CLASSIFICATION	6.137509583670474E-7	DESIGN	2.9253196927106486E-8	DEFECT	2.5678879038672357E-8	IMPLEMENTATION	2.0555630107721557E-8	DOCUMENTATION	2.925403275455957E-9	TEST
// index should be last column listed	WITHOUT_CLASSIFICATION	0.9994576867759153	WITHOUT_CLASSIFICATION	4.623920435234577E-4	IMPLEMENTATION	4.1100337641040584E-5	DEFECT	2.8384653959662448E-5	DESIGN	9.850294994877715E-6	TEST	5.858939657533584E-7	DOCUMENTATION
//if it is a formula index, use the element columns in the PK	WITHOUT_CLASSIFICATION	0.9999959527812733	WITHOUT_CLASSIFICATION	2.2693525118191127E-6	DESIGN	1.6635056160263307E-6	IMPLEMENTATION	7.740295034343471E-8	DEFECT	2.6623590142493596E-8	DOCUMENTATION	1.0334058508053679E-8	TEST
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns	WITHOUT_CLASSIFICATION	0.9999828373355746	WITHOUT_CLASSIFICATION	1.5989382559909626E-5	DEFECT	1.0095365041908595E-6	DESIGN	8.617460945813783E-8	TEST	6.679072442120076E-8	IMPLEMENTATION	1.0780027488853321E-8	DOCUMENTATION
/*ArrayList list = new ArrayList();	WITHOUT_CLASSIFICATION	0.9986771022178365	WITHOUT_CLASSIFICATION	0.0013090244841020221	IMPLEMENTATION	1.1966731493797211E-5	DEFECT	8.047300375024514E-7	DESIGN	7.11634049328508E-7	TEST	3.902024809195876E-7	DOCUMENTATION
// }	WITHOUT_CLASSIFICATION	0.9999877327058784	WITHOUT_CLASSIFICATION	8.341331569880857E-6	DESIGN	2.405731642034741E-6	DEFECT	9.984588052106438E-7	IMPLEMENTATION	2.653797482646272E-7	DOCUMENTATION	2.5639235621195904E-7	TEST
// no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.9998716060228073	WITHOUT_CLASSIFICATION	7.467937170671563E-5	IMPLEMENTATION	3.3900698367762366E-5	DESIGN	1.7512716498133632E-5	DEFECT	2.225650815164538E-6	DOCUMENTATION	7.553980481609608E-8	TEST
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.986192516969729	WITHOUT_CLASSIFICATION	0.012441431064620905	DESIGN	0.00127619097431102	IMPLEMENTATION	7.497436102529492E-5	DEFECT	1.1412839776249265E-5	TEST	3.4737905375469067E-6	DOCUMENTATION
// the case of a foreign key to something other than the pk is handled in createPropertyRefConstraints	WITHOUT_CLASSIFICATION	0.9999999801226375	WITHOUT_CLASSIFICATION	1.3301251514524476E-8	DESIGN	5.769785025423689E-9	TEST	5.231415753595499E-10	DEFECT	1.877544068642468E-10	DOCUMENTATION	9.542997405694391E-11	IMPLEMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.986192516969729	WITHOUT_CLASSIFICATION	0.012441431064620905	DESIGN	0.00127619097431102	IMPLEMENTATION	7.497436102529492E-5	DEFECT	1.1412839776249265E-5	TEST	3.4737905375469067E-6	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it non-updateable	WITHOUT_CLASSIFICATION	0.9999991755354178	WITHOUT_CLASSIFICATION	6.839528945807924E-7	DEFECT	9.485344437791021E-8	TEST	4.500497298320333E-8	IMPLEMENTATION	4.3485808957501043E-10	DESIGN	2.184122223430802E-10	DOCUMENTATION
//columnUpdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.9999622624422689	WITHOUT_CLASSIFICATION	2.520289343337035E-5	IMPLEMENTATION	7.417959959311287E-6	DESIGN	2.8679065355743605E-6	DEFECT	1.797620106406824E-6	DOCUMENTATION	4.511776964802137E-7	TEST
// if the property mapping consists of all formulas,  // make it insertable	WITHOUT_CLASSIFICATION	0.9999977449569724	WITHOUT_CLASSIFICATION	1.5514409868809303E-6	DEFECT	6.625338975666331E-7	TEST	2.8399697366783933E-8	IMPLEMENTATION	1.1722034691466479E-8	DESIGN	9.46411310739798E-10	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996205514625	WITHOUT_CLASSIFICATION	2.782315207236764E-7	DESIGN	4.3137679048436625E-8	IMPLEMENTATION	2.5234691216704775E-8	DEFECT	2.3314795086214896E-8	TEST	9.529851412734375E-9	DOCUMENTATION
// expected type is intrinsic here...	WITHOUT_CLASSIFICATION	0.999970852724889	WITHOUT_CLASSIFICATION	2.8829139206722963E-5	DESIGN	1.1859860680557838E-7	TEST	1.1679497458575165E-7	DEFECT	5.435646951462112E-8	IMPLEMENTATION	2.838585343888231E-8	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9993631749783904	WITHOUT_CLASSIFICATION	5.442675394352939E-4	DESIGN	4.6430996486647376E-5	DEFECT	2.3669236423372748E-5	IMPLEMENTATION	1.1654736496060487E-5	DOCUMENTATION	1.0802512768128452E-5	TEST
//}	WITHOUT_CLASSIFICATION	0.9993631749783904	WITHOUT_CLASSIFICATION	5.442675394352939E-4	DESIGN	4.6430996486647376E-5	DEFECT	2.3669236423372748E-5	IMPLEMENTATION	1.1654736496060487E-5	DOCUMENTATION	1.0802512768128452E-5	TEST
//return memberPersister.getPropertyType(propertyName);	WITHOUT_CLASSIFICATION	0.9996166513095436	WITHOUT_CLASSIFICATION	3.615246958701494E-4	DESIGN	1.9195440263807705E-5	DEFECT	1.3437906751813859E-6	IMPLEMENTATION	1.0367239905356856E-6	TEST	2.4803965682028525E-7	DOCUMENTATION
//return memberPersister.toColumns(alias, propertyName);	WITHOUT_CLASSIFICATION	0.9984641467139119	WITHOUT_CLASSIFICATION	0.0015247993437691384	DESIGN	9.19063684203602E-6	DEFECT	1.1834679446082643E-6	IMPLEMENTATION	4.32355676841263E-7	TEST	2.474818554709939E-7	DOCUMENTATION
//return memberPersister.getType();	WITHOUT_CLASSIFICATION	0.9999005282065484	WITHOUT_CLASSIFICATION	8.664120234348984E-5	DESIGN	1.0116468694880434E-5	IMPLEMENTATION	2.274760122479208E-6	DEFECT	2.495930390067506E-7	TEST	1.897692517233125E-7	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999795761438732	WITHOUT_CLASSIFICATION	8.139951170834615E-6	DESIGN	5.820923084703649E-6	IMPLEMENTATION	5.796463025412191E-6	DEFECT	4.6325799872510946E-7	DOCUMENTATION	2.032608470618436E-7	TEST
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
//instanceof AssociationType;	WITHOUT_CLASSIFICATION	0.999791754215348	WITHOUT_CLASSIFICATION	1.5624598068415328E-4	DESIGN	2.6878093357189752E-5	DOCUMENTATION	2.1493555383223815E-5	DEFECT	2.6053270433752E-6	IMPLEMENTATION	1.0228281839357872E-6	TEST
// we need to determine the best way to know that two joinables // represent a single many-to-many...	WITHOUT_CLASSIFICATION	0.9503917330789137	WITHOUT_CLASSIFICATION	0.049426366568858404	DESIGN	1.3599578666482446E-4	IMPLEMENTATION	4.223907114201619E-5	TEST	2.82570830933046E-6	DOCUMENTATION	8.397861116587556E-7	DEFECT
//strip leading ','	WITHOUT_CLASSIFICATION	0.9999976286550479	WITHOUT_CLASSIFICATION	1.0431081346185484E-6	IMPLEMENTATION	9.121871890921669E-7	DESIGN	1.8307084243844082E-7	TEST	1.2492988016393289E-7	DOCUMENTATION	1.080489058114624E-7	DEFECT
//public boolean isSubselectLoadable();	WITHOUT_CLASSIFICATION	0.9999969808102047	WITHOUT_CLASSIFICATION	2.5533541048726328E-6	DESIGN	2.076258515625057E-7	DEFECT	1.0533709079314764E-7	IMPLEMENTATION	8.160366024720961E-8	DOCUMENTATION	7.126908780348514E-8	TEST
// KEY	WITHOUT_CLASSIFICATION	0.9999857660727985	WITHOUT_CLASSIFICATION	1.2694695919068924E-5	DESIGN	8.313827984893638E-7	DEFECT	3.629500371997889E-7	IMPLEMENTATION	1.7409529986519852E-7	TEST	1.708031470776767E-7	DOCUMENTATION
//columns	WITHOUT_CLASSIFICATION	0.999713196016896	WITHOUT_CLASSIFICATION	2.685291992763555E-4	DESIGN	7.242407280812201E-6	IMPLEMENTATION	6.650692029766073E-6	DEFECT	3.0593104271829997E-6	DOCUMENTATION	1.3223740897880953E-6	TEST
//SQL statements	WITHOUT_CLASSIFICATION	0.9999963615007071	WITHOUT_CLASSIFICATION	2.553131552512499E-6	DESIGN	4.070770729046741E-7	IMPLEMENTATION	4.060142963399196E-7	DOCUMENTATION	2.0101714152562377E-7	TEST	7.125922958068058E-8	DEFECT
//extra information about the element type	WITHOUT_CLASSIFICATION	0.9999832233735474	WITHOUT_CLASSIFICATION	1.2664452726379747E-5	DESIGN	2.3156532760990732E-6	IMPLEMENTATION	1.142256506344815E-6	DOCUMENTATION	5.727686331383878E-7	DEFECT	8.149531072620885E-8	TEST
//types	WITHOUT_CLASSIFICATION	0.9995102556261976	WITHOUT_CLASSIFICATION	4.3590128665531904E-4	DESIGN	3.520376155904095E-5	IMPLEMENTATION	7.11445687850446E-6	TEST	5.901733369504514E-6	DEFECT	5.623135340003145E-6	DOCUMENTATION
// custom sql	WITHOUT_CLASSIFICATION	0.9999981658207533	WITHOUT_CLASSIFICATION	1.429232531935592E-6	DESIGN	3.115671513036061E-7	DEFECT	3.6098549045099386E-8	IMPLEMENTATION	3.25044764502021E-8	DOCUMENTATION	2.4776537938426292E-8	TEST
//private final String unquotedIdentifierColumnName;	WITHOUT_CLASSIFICATION	0.9987069296509709	WITHOUT_CLASSIFICATION	0.0012162633237622735	DESIGN	5.897068323278968E-5	IMPLEMENTATION	1.008676554180786E-5	DEFECT	6.960570484932672E-6	DOCUMENTATION	7.89006007376928E-7	TEST
// dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.9999895393914044	WITHOUT_CLASSIFICATION	1.0205667206865704E-5	DESIGN	1.2968954814997035E-7	DOCUMENTATION	6.646939935484402E-8	DEFECT	5.727405839183311E-8	IMPLEMENTATION	1.50838275265285E-9	TEST
// dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.9999989308731247	WITHOUT_CLASSIFICATION	9.96042537194085E-7	DESIGN	4.1071616882504936E-8	IMPLEMENTATION	1.4551165638117337E-8	DEFECT	1.1350360749985871E-8	TEST	6.111194845454164E-9	DOCUMENTATION
// NativeSQL: collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999408240337636	WITHOUT_CLASSIFICATION	3.488731910167097E-5	IMPLEMENTATION	2.326909755291115E-5	DESIGN	4.7572451510523955E-7	DOCUMENTATION	4.0445362303876146E-7	DEFECT	1.3937144369883787E-7	TEST
//unquotedKeyColumnNames = StringHelper.unQuote(keyColumnAliases);	WITHOUT_CLASSIFICATION	0.9999954319778193	WITHOUT_CLASSIFICATION	2.5220188130412993E-6	DESIGN	1.8870959143267164E-6	DEFECT	6.513825752723525E-8	IMPLEMENTATION	5.7003238563308674E-8	TEST	3.676595738700205E-8	DOCUMENTATION
//ELEMENT	WITHOUT_CLASSIFICATION	0.9995513797766223	WITHOUT_CLASSIFICATION	3.9702407296801656E-4	DESIGN	2.509867359948895E-5	DEFECT	1.3427244297707904E-5	IMPLEMENTATION	7.175696372320641E-6	TEST	5.894536140203056E-6	DOCUMENTATION
// NativeSQL: collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.9996956814318226	WITHOUT_CLASSIFICATION	2.6514535195830825E-4	IMPLEMENTATION	3.7250027859353426E-5	DESIGN	1.2026141218840718E-6	DOCUMENTATION	5.957891834269446E-7	DEFECT	1.2478505431335007E-7	TEST
// INDEX AND ROW SELECT	WITHOUT_CLASSIFICATION	0.9999744529124031	WITHOUT_CLASSIFICATION	2.0319123588135E-5	IMPLEMENTATION	2.8351677166378655E-6	DESIGN	1.299699616383126E-6	DEFECT	7.119007949330939E-7	DOCUMENTATION	3.8119588083704043E-7	TEST
// NativeSQL: collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.9989526880212135	WITHOUT_CLASSIFICATION	7.845764212556847E-4	IMPLEMENTATION	2.2789214881343628E-4	DESIGN	2.761629722483734E-5	DEFECT	4.269371431133486E-6	DOCUMENTATION	2.9577400614669934E-6	TEST
//unquotedIdentifierColumnName = identifierColumnAlias;	WITHOUT_CLASSIFICATION	0.9999432005883236	WITHOUT_CLASSIFICATION	3.148040375827665E-5	IMPLEMENTATION	2.337986946649007E-5	DESIGN	8.300817262232273E-7	DOCUMENTATION	6.851702373581255E-7	DEFECT	4.2388648796700593E-7	TEST
//unquotedIdentifierColumnName = null;	WITHOUT_CLASSIFICATION	0.9999425076683085	WITHOUT_CLASSIFICATION	2.723640920275033E-5	IMPLEMENTATION	2.208289475125979E-5	DESIGN	7.076649053572135E-6	DEFECT	8.493199085339467E-7	DOCUMENTATION	2.4705877544698267E-7	TEST
//GENERATE THE SQL:	WITHOUT_CLASSIFICATION	0.9996952252898837	WITHOUT_CLASSIFICATION	2.912726505931174E-4	DESIGN	5.87586001933738E-6	DEFECT	2.866309591994391E-6	DOCUMENTATION	2.4000259639392547E-6	TEST	2.35986394777294E-6	IMPLEMENTATION
// for non-arrays, we don't need to know the element class //elementType.returnedClass();	WITHOUT_CLASSIFICATION	0.9999921361765457	WITHOUT_CLASSIFICATION	7.1464365622865785E-6	DESIGN	6.594895994829867E-7	IMPLEMENTATION	4.5747101613774336E-8	DEFECT	1.0773360142016904E-8	DOCUMENTATION	1.3768307900144023E-9	TEST
//not all classpersisters implement PropertyMapping!	WITHOUT_CLASSIFICATION	0.9973619976969416	WITHOUT_CLASSIFICATION	0.00196764933894319	DESIGN	6.267620362008206E-4	IMPLEMENTATION	3.58906793447571E-5	DEFECT	4.009385832511739E-6	DOCUMENTATION	3.6908627371916043E-6	TEST
// Handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.9955707909389954	WITHOUT_CLASSIFICATION	0.004312292259580238	DESIGN	1.146992369896494E-4	IMPLEMENTATION	1.2160339777753443E-6	TEST	9.050494651833506E-7	DOCUMENTATION	9.648099174065007E-8	DEFECT
// Handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.9906030162101405	WITHOUT_CLASSIFICATION	0.009076404786018693	DESIGN	3.176239198396442E-4	IMPLEMENTATION	1.8089235170040213E-6	TEST	1.0693428539431036E-6	DOCUMENTATION	7.681763016954517E-8	DEFECT
//if there is a user-specified loader, return that //TODO: filters!?	WITHOUT_CLASSIFICATION	0.9817801122117087	WITHOUT_CLASSIFICATION	0.017786315823957087	DESIGN	3.353878765353983E-4	IMPLEMENTATION	8.595057719775429E-5	DEFECT	1.1205674102536642E-5	TEST	1.0278364986854394E-6	DOCUMENTATION
// Take care of any entities that might have // been evicted!	WITHOUT_CLASSIFICATION	0.9997892718834208	WITHOUT_CLASSIFICATION	1.8344353100003744E-4	DESIGN	2.3334315598977166E-5	DEFECT	2.070516270756335E-6	TEST	1.1836279794784793E-6	IMPLEMENTATION	6.961257299338429E-7	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9999976286550479	WITHOUT_CLASSIFICATION	1.0431081346185484E-6	IMPLEMENTATION	9.121871890921669E-7	DESIGN	1.8307084243844082E-7	TEST	1.2492988016393289E-7	DOCUMENTATION	1.080489058114624E-7	DEFECT
// Run a subquery loader	WITHOUT_CLASSIFICATION	0.9999048661396326	WITHOUT_CLASSIFICATION	7.930050523594815E-5	DEFECT	9.583328131381624E-6	IMPLEMENTATION	6.015861229815115E-6	DESIGN	1.3968598685254758E-7	DOCUMENTATION	9.447978332008772E-8	TEST
//needed by arrays	WITHOUT_CLASSIFICATION	0.9997044470760607	WITHOUT_CLASSIFICATION	1.9823992017326206E-4	IMPLEMENTATION	7.290188223832557E-5	DESIGN	1.5144059741307998E-5	TEST	5.350658725959579E-6	DOCUMENTATION	3.916403060450411E-6	DEFECT
//TODO: something with formulas...	WITHOUT_CLASSIFICATION	0.9815726855726551	WITHOUT_CLASSIFICATION	0.009477760343140625	DESIGN	0.004228913190364356	IMPLEMENTATION	0.003630027979809621	TEST	6.879168257539136E-4	DOCUMENTATION	4.026960882763723E-4	DEFECT
//an assertion	WITHOUT_CLASSIFICATION	0.999995182483044	WITHOUT_CLASSIFICATION	3.0097430018024106E-6	TEST	6.928943417904879E-7	DEFECT	6.038940108423414E-7	DESIGN	3.528023128937872E-7	DOCUMENTATION	1.5818328866296966E-7	IMPLEMENTATION
// Remove all the old entries	WITHOUT_CLASSIFICATION	0.9999836517729097	WITHOUT_CLASSIFICATION	9.234283578259743E-6	IMPLEMENTATION	6.916278882600635E-6	DESIGN	7.824798394921845E-8	DOCUMENTATION	6.78958133724583E-8	DEFECT	5.152083213711982E-8	TEST
//create all the new entries	WITHOUT_CLASSIFICATION	0.999992229603975	WITHOUT_CLASSIFICATION	5.078997235449463E-6	IMPLEMENTATION	2.3993323293276356E-6	DESIGN	1.980893115125739E-7	DOCUMENTATION	8.969530340303622E-8	TEST	4.281845291649395E-9	DEFECT
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999795761438732	WITHOUT_CLASSIFICATION	8.139951170834615E-6	DESIGN	5.820923084703649E-6	IMPLEMENTATION	5.796463025412191E-6	DEFECT	4.6325799872510946E-7	DOCUMENTATION	2.032608470618436E-7	TEST
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999795761438732	WITHOUT_CLASSIFICATION	8.139951170834615E-6	DESIGN	5.820923084703649E-6	IMPLEMENTATION	5.796463025412191E-6	DEFECT	4.6325799872510946E-7	DOCUMENTATION	2.032608470618436E-7	TEST
//delete all the deleted entries	WITHOUT_CLASSIFICATION	0.9999748547235365	WITHOUT_CLASSIFICATION	2.1796479117044534E-5	IMPLEMENTATION	3.1251667794950497E-6	DESIGN	1.204178172677072E-7	DOCUMENTATION	9.193070915873287E-8	TEST	1.1282040604681817E-8	DEFECT
//insert all the new entries	WITHOUT_CLASSIFICATION	0.9999932535355923	WITHOUT_CLASSIFICATION	5.643654729399752E-6	IMPLEMENTATION	8.618037482098385E-7	DESIGN	1.509508164248986E-7	TEST	8.76509458433274E-8	DOCUMENTATION	2.4041678392266216E-9	DEFECT
//==elementType ??	WITHOUT_CLASSIFICATION	0.9987010435850234	WITHOUT_CLASSIFICATION	0.001267235420596127	DESIGN	2.45331444581733E-5	IMPLEMENTATION	5.13058993824078E-6	DOCUMENTATION	1.4358698505516334E-6	DEFECT	6.213901333114546E-7	TEST
//update all the modified entries	WITHOUT_CLASSIFICATION	0.9999416189169422	WITHOUT_CLASSIFICATION	5.384596507865774E-5	IMPLEMENTATION	4.1870519246469195E-6	DESIGN	1.5687759555702294E-7	DOCUMENTATION	9.572345193123795E-8	TEST	9.546500693799666E-8	DEFECT
//identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.9984358206749632	WITHOUT_CLASSIFICATION	0.0014287713303872474	IMPLEMENTATION	1.1816474990142578E-4	DESIGN	1.5191069830637853E-5	DEFECT	1.428196839840352E-6	TEST	6.239780776716337E-7	DOCUMENTATION
// update removed rows fks to null	WITHOUT_CLASSIFICATION	0.9994853879281393	WITHOUT_CLASSIFICATION	5.021644175865399E-4	DEFECT	9.876363828544874E-6	DESIGN	2.475775669029627E-6	IMPLEMENTATION	5.889411956868054E-8	TEST	3.662065695177168E-8	DOCUMENTATION
// will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.9995107105987197	WITHOUT_CLASSIFICATION	3.234284792020746E-4	DEFECT	1.0171524725899607E-4	DESIGN	5.6884714859695574E-5	IMPLEMENTATION	6.334008017078451E-6	DOCUMENTATION	9.269519423831186E-7	TEST
// now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.9999916697785634	WITHOUT_CLASSIFICATION	3.969628360068673E-6	IMPLEMENTATION	2.857096942097026E-6	DEFECT	1.4907104709180067E-6	DESIGN	7.46119771910482E-9	DOCUMENTATION	5.324465814639447E-9	TEST
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
//use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.9999577066827101	WITHOUT_CLASSIFICATION	3.23357769699691E-5	DESIGN	8.579382133456235E-6	IMPLEMENTATION	1.0305666779963888E-6	DOCUMENTATION	2.723918697598561E-7	DEFECT	7.519963862599662E-8	TEST
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999999546812798	WITHOUT_CLASSIFICATION	3.301189912852734E-8	DESIGN	1.1314785844217443E-8	IMPLEMENTATION	7.450084892483708E-10	TEST	1.598889083351564E-10	DOCUMENTATION	8.713786523763729E-11	DEFECT
//private final String rootTableName;	WITHOUT_CLASSIFICATION	0.9935735624720121	WITHOUT_CLASSIFICATION	0.0064011959079203805	DESIGN	1.4907050728130838E-5	DEFECT	3.6271139881301677E-6	TEST	3.5067702422465953E-6	DOCUMENTATION	3.2006851090398442E-6	IMPLEMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9997058367567929	WITHOUT_CLASSIFICATION	1.5670210211643742E-4	IMPLEMENTATION	9.320142899762797E-5	DESIGN	2.681061742896587E-5	DEFECT	9.674795093728067E-6	TEST	7.774299570263842E-6	DOCUMENTATION
//Custom SQL	WITHOUT_CLASSIFICATION	0.9998151697288055	WITHOUT_CLASSIFICATION	1.809154204324816E-4	DESIGN	1.9642792212459893E-6	DEFECT	1.1231882472990295E-6	DOCUMENTATION	6.235452224958937E-7	TEST	2.0383807095339492E-7	IMPLEMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999999546812798	WITHOUT_CLASSIFICATION	3.301189912852734E-8	DESIGN	1.1314785844217443E-8	IMPLEMENTATION	7.450084892483708E-10	TEST	1.598889083351564E-10	DOCUMENTATION	8.713786523763729E-11	DEFECT
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999937741923949	WITHOUT_CLASSIFICATION	4.721670929470003E-6	DESIGN	5.764123793313985E-7	DOCUMENTATION	4.709694275288931E-7	IMPLEMENTATION	2.3211811308763713E-7	DEFECT	2.246367556653231E-7	TEST
// This could also just be true all the time...	WITHOUT_CLASSIFICATION	0.9989577805750489	WITHOUT_CLASSIFICATION	8.382678298056627E-4	DESIGN	2.033030227672024E-4	IMPLEMENTATION	3.8211993973764994E-7	DEFECT	1.953295175953955E-7	TEST	7.112292091623489E-8	DOCUMENTATION
//chop the last union (all)	WITHOUT_CLASSIFICATION	0.9999698121402524	WITHOUT_CLASSIFICATION	1.399393054010867E-5	IMPLEMENTATION	1.0132899627769209E-5	DESIGN	4.199861587469328E-6	DEFECT	1.5015584430055786E-6	DOCUMENTATION	3.596095492666313E-7	TEST
//TODO: check this....	WITHOUT_CLASSIFICATION	0.7844332763879516	WITHOUT_CLASSIFICATION	0.12424037166323439	IMPLEMENTATION	0.08214687576817839	DESIGN	0.006067152895135241	DOCUMENTATION	0.002888275483913268	TEST	2.240478015873086E-4	DEFECT
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9997058367567929	WITHOUT_CLASSIFICATION	1.5670210211643742E-4	IMPLEMENTATION	9.320142899762797E-5	DESIGN	2.681061742896587E-5	DEFECT	9.674795093728067E-6	TEST	7.774299570263842E-6	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999989616982708	WITHOUT_CLASSIFICATION	7.755938829082054E-7	DESIGN	1.7021012142757225E-7	DEFECT	8.739392648444161E-8	TEST	5.018089885285626E-9	DOCUMENTATION	8.570847534276512E-11	IMPLEMENTATION
// the closure of all properties in the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999997360312632	WITHOUT_CLASSIFICATION	1.7971809217998128E-7	DESIGN	8.06395244711113E-8	DEFECT	1.96545356494908E-9	IMPLEMENTATION	1.0189189358901224E-9	DOCUMENTATION	6.267477250150892E-10	TEST
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999993455632429	WITHOUT_CLASSIFICATION	6.189084469443926E-7	DESIGN	2.835149618810531E-8	IMPLEMENTATION	4.915257331338715E-9	DEFECT	1.440011445249213E-9	TEST	8.215452256741381E-10	DOCUMENTATION
// subclass discrimination works by assigning particular // values to certain combinations of null primary key // values in the outer join using an SQL CASE	WITHOUT_CLASSIFICATION	0.999996415775123	WITHOUT_CLASSIFICATION	3.402888903103391E-6	DEFECT	1.8099001071288624E-7	DESIGN	2.683448675571255E-10	DOCUMENTATION	7.723475002521155E-11	TEST	3.8351140163252873E-13	IMPLEMENTATION
//MULTITABLES	WITHOUT_CLASSIFICATION	0.9995950238258361	WITHOUT_CLASSIFICATION	3.47061584052625E-4	DESIGN	2.2903099648410895E-5	DEFECT	2.1434770961590475E-5	IMPLEMENTATION	9.146811333420082E-6	DOCUMENTATION	4.429908167945419E-6	TEST
// Custom sql	WITHOUT_CLASSIFICATION	0.9999868515280121	WITHOUT_CLASSIFICATION	1.2184382241204123E-5	DESIGN	6.676668117628013E-7	DEFECT	1.0551551847622154E-7	IMPLEMENTATION	9.704321252980691E-8	DOCUMENTATION	9.386420387700148E-8	TEST
// subclass closure properties	WITHOUT_CLASSIFICATION	0.9999980929447017	WITHOUT_CLASSIFICATION	1.8567890180828935E-6	DESIGN	4.7327598527110796E-8	DEFECT	1.5651334514131074E-9	TEST	7.892690901883348E-10	DOCUMENTATION	5.842791753244783E-10	IMPLEMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999897779496937	WITHOUT_CLASSIFICATION	5.66381636568993E-6	DESIGN	2.1017428448129247E-6	IMPLEMENTATION	1.7998593365242516E-6	DEFECT	4.341549154578729E-7	DOCUMENTATION	2.2247684378017343E-7	TEST
//( (Column) model.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9964589540110663	WITHOUT_CLASSIFICATION	0.0034752021531844323	DESIGN	5.658222057829754E-5	IMPLEMENTATION	4.5542291566757305E-6	DEFECT	2.4914758050858845E-6	DOCUMENTATION	2.2159102092272627E-6	TEST
//( (Column) sc.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9997576696859812	WITHOUT_CLASSIFICATION	2.2824653321101775E-4	DESIGN	1.2287453809629568E-5	IMPLEMENTATION	7.975888320964144E-7	DEFECT	6.20588455681095E-7	DOCUMENTATION	3.7814971038176785E-7	TEST
// don't need subclass tables, because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.9997840463453593	WITHOUT_CLASSIFICATION	2.0891095443906858E-4	DESIGN	6.401987302172303E-6	DEFECT	3.9375153214435563E-7	DOCUMENTATION	1.4536253174195538E-7	IMPLEMENTATION	1.0159883542131493E-7	TEST
// special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.9999895281839274	WITHOUT_CLASSIFICATION	8.359383836319383E-6	IMPLEMENTATION	1.7131494892455555E-6	DESIGN	3.8781484889080823E-7	DOCUMENTATION	9.293136117941587E-9	DEFECT	2.174762032666035E-9	TEST
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999999546812798	WITHOUT_CLASSIFICATION	3.301189912852734E-8	DESIGN	1.1314785844217443E-8	IMPLEMENTATION	7.450084892483708E-10	TEST	1.598889083351564E-10	DOCUMENTATION	8.713786523763729E-11	DEFECT
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999989616982708	WITHOUT_CLASSIFICATION	7.755938829082054E-7	DESIGN	1.7021012142757225E-7	DEFECT	8.739392648444161E-8	TEST	5.018089885285626E-9	DOCUMENTATION	8.570847534276512E-11	IMPLEMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999993455632429	WITHOUT_CLASSIFICATION	6.189084469443926E-7	DESIGN	2.835149618810531E-8	IMPLEMENTATION	4.915257331338715E-9	DEFECT	1.440011445249213E-9	TEST	8.215452256741381E-10	DOCUMENTATION
//get em on the second pass!	WITHOUT_CLASSIFICATION	0.9999603481714572	WITHOUT_CLASSIFICATION	3.5114901882320246E-5	DESIGN	2.7795288581341337E-6	IMPLEMENTATION	7.764638559139143E-7	DOCUMENTATION	7.126122236320772E-7	DEFECT	2.683217230471906E-7	TEST
// now look up the object we are really interested in! // (this lets us correctly handle proxies and multi-row // or multi-column queries)	WITHOUT_CLASSIFICATION	0.9983019549553013	WITHOUT_CLASSIFICATION	8.739238848847791E-4	DESIGN	8.08414218293139E-4	DEFECT	1.1206811326129815E-5	IMPLEMENTATION	2.7616202700393667E-6	TEST	1.7385099247134725E-6	DOCUMENTATION
// discriminator column	WITHOUT_CLASSIFICATION	0.9999990005484118	WITHOUT_CLASSIFICATION	6.803255944645726E-7	DESIGN	2.86566469749874E-7	DEFECT	1.4377203629147622E-8	DOCUMENTATION	1.2489864640081577E-8	IMPLEMENTATION	5.692455650097273E-9	TEST
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9997058367567929	WITHOUT_CLASSIFICATION	1.5670210211643742E-4	IMPLEMENTATION	9.320142899762797E-5	DESIGN	2.681061742896587E-5	DEFECT	9.674795093728067E-6	TEST	7.774299570263842E-6	DOCUMENTATION
//private final Map propertyTableNumbersByName = new HashMap();	WITHOUT_CLASSIFICATION	0.9981070389726694	WITHOUT_CLASSIFICATION	0.0018840743424718264	DESIGN	4.772214721817027E-6	DEFECT	1.936976330418038E-6	IMPLEMENTATION	1.2438249387214172E-6	DOCUMENTATION	9.336688677395113E-7	TEST
// CLASS + TABLE	WITHOUT_CLASSIFICATION	0.9999993822271055	WITHOUT_CLASSIFICATION	2.0942411171100323E-7	DESIGN	1.6610683072142396E-7	DEFECT	1.3752994785670446E-7	IMPLEMENTATION	6.39756651987628E-8	DOCUMENTATION	4.073633907463649E-8	TEST
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9998764946712931	WITHOUT_CLASSIFICATION	7.822683395724707E-5	IMPLEMENTATION	3.4531711121345124E-5	DESIGN	6.64388050626347E-6	DEFECT	2.60757063745517E-6	DOCUMENTATION	1.495332484642253E-6	TEST
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999935996453612	WITHOUT_CLASSIFICATION	3.4953616016158255E-6	DESIGN	1.7736340158713255E-6	IMPLEMENTATION	5.558921067786602E-7	DEFECT	3.757606975958942E-7	DOCUMENTATION	1.9970621704131538E-7	TEST
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999897779496937	WITHOUT_CLASSIFICATION	5.66381636568993E-6	DESIGN	2.1017428448129247E-6	IMPLEMENTATION	1.7998593365242516E-6	DEFECT	4.341549154578729E-7	DOCUMENTATION	2.2247684378017343E-7	TEST
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999937741923949	WITHOUT_CLASSIFICATION	4.721670929470003E-6	DESIGN	5.764123793313985E-7	DOCUMENTATION	4.709694275288931E-7	IMPLEMENTATION	2.3211811308763713E-7	DEFECT	2.246367556653231E-7	TEST
// JOINS	WITHOUT_CLASSIFICATION	0.9999857322567599	WITHOUT_CLASSIFICATION	1.1310434334283229E-5	DESIGN	1.439350069110015E-6	IMPLEMENTATION	1.1132464259167833E-6	DEFECT	2.1706225077833677E-7	DOCUMENTATION	1.8765016014542437E-7	TEST
//propertyTableNumbersByName.put( prop.getName(), join );	WITHOUT_CLASSIFICATION	0.99999688799443	WITHOUT_CLASSIFICATION	1.1016153729873764E-6	DESIGN	8.592525591948214E-7	IMPLEMENTATION	8.427434339605388E-7	DEFECT	1.555119448316519E-7	DOCUMENTATION	1.5288225908145327E-7	TEST
//Access cached SQL	WITHOUT_CLASSIFICATION	0.9999366946639475	WITHOUT_CLASSIFICATION	6.292655616495114E-5	DESIGN	1.171556381015856E-7	TEST	1.0727682261329021E-7	DEFECT	8.658322446785683E-8	IMPLEMENTATION	6.776420237703699E-8	DOCUMENTATION
//figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.9969121836609225	WITHOUT_CLASSIFICATION	0.003068268820988046	DESIGN	7.239388113910254E-6	DEFECT	5.330003414608371E-6	TEST	4.527554665839433E-6	IMPLEMENTATION	2.450571895029458E-6	DOCUMENTATION
//figure out which columns are needed	WITHOUT_CLASSIFICATION	0.9395691705628468	WITHOUT_CLASSIFICATION	0.05903141542901507	DESIGN	0.0013107807538482615	IMPLEMENTATION	5.9567454755199786E-5	DOCUMENTATION	2.558557475874478E-5	TEST	3.4802247759381643E-6	DEFECT
//figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.9660882128320614	WITHOUT_CLASSIFICATION	0.03381441507947619	DESIGN	6.132114643317226E-5	IMPLEMENTATION	2.635298085356974E-5	DOCUMENTATION	8.707835296638354E-6	TEST	9.901258791190164E-7	DEFECT
//render the SQL	WITHOUT_CLASSIFICATION	0.9990956415953601	WITHOUT_CLASSIFICATION	8.424014951602994E-4	DESIGN	4.317710011578634E-5	IMPLEMENTATION	8.58169783154791E-6	DOCUMENTATION	5.209019930288894E-6	TEST	4.989091601969427E-6	DEFECT
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996205514625	WITHOUT_CLASSIFICATION	2.782315207236764E-7	DESIGN	4.3137679048436625E-8	IMPLEMENTATION	2.5234691216704775E-8	DEFECT	2.3314795086214896E-8	TEST	9.529851412734375E-9	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999050717795437	WITHOUT_CLASSIFICATION	9.355285458213134E-5	DESIGN	1.0924561029410156E-6	IMPLEMENTATION	1.2105229974120888E-7	TEST	1.1204230899207675E-7	DEFECT	4.981516259445262E-8	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999907807450628	WITHOUT_CLASSIFICATION	3.1744570870278095E-6	DESIGN	2.8257034602572826E-6	DEFECT	2.264276197204893E-6	IMPLEMENTATION	4.825231256528824E-7	DOCUMENTATION	4.722950673296086E-7	TEST
// The optional SQL string defined in the where attribute	WITHOUT_CLASSIFICATION	0.9999998292732396	WITHOUT_CLASSIFICATION	6.659005648730247E-8	DEFECT	6.374309192743059E-8	IMPLEMENTATION	3.4688855797907575E-8	DESIGN	3.616818859083907E-9	DOCUMENTATION	2.0879374030034206E-9	TEST
//information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.9998553332821066	WITHOUT_CLASSIFICATION	1.2706711656877102E-4	DESIGN	1.527185053782754E-5	DEFECT	2.0034167405480095E-6	TEST	3.1706033622013736E-7	DOCUMENTATION	7.273710016039128E-9	IMPLEMENTATION
//information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.9999979837217339	WITHOUT_CLASSIFICATION	1.6731444047512924E-6	DESIGN	3.029688786057916E-7	DEFECT	2.0825958710939185E-8	DOCUMENTATION	1.3819357777495571E-8	TEST	5.519665963070425E-9	IMPLEMENTATION
//information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.9999987834341661	WITHOUT_CLASSIFICATION	1.1518149559200833E-6	DESIGN	2.6248005596688925E-8	IMPLEMENTATION	2.4970407868322226E-8	DEFECT	1.1159521539882603E-8	DOCUMENTATION	2.372943058343251E-9	TEST
// dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9999997993894312	WITHOUT_CLASSIFICATION	1.9611834293912952E-7	DESIGN	1.863349498730636E-9	DEFECT	1.2378516716318915E-9	DOCUMENTATION	8.561511516549545E-10	IMPLEMENTATION	5.348734923301743E-10	TEST
// SQL strings	WITHOUT_CLASSIFICATION	0.9999993501199077	WITHOUT_CLASSIFICATION	4.5418277427033317E-7	DESIGN	7.891309493061647E-8	DEFECT	5.180516948417836E-8	IMPLEMENTATION	3.403598386862237E-8	DOCUMENTATION	3.094306980618141E-8	TEST
// for objects that came in via update()	WITHOUT_CLASSIFICATION	0.9999996015041233	WITHOUT_CLASSIFICATION	2.8813045074993985E-7	DESIGN	6.18211264241599E-8	IMPLEMENTATION	3.799731658321445E-8	DEFECT	8.195555473011725E-9	DOCUMENTATION	2.351427620429919E-9	TEST
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999935996453612	WITHOUT_CLASSIFICATION	3.4953616016158255E-6	DESIGN	1.7736340158713255E-6	IMPLEMENTATION	5.558921067786602E-7	DEFECT	3.757606975958942E-7	DOCUMENTATION	1.9970621704131538E-7	TEST
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999907807450628	WITHOUT_CLASSIFICATION	3.1744570870278095E-6	DESIGN	2.8257034602572826E-6	DEFECT	2.264276197204893E-6	IMPLEMENTATION	4.825231256528824E-7	DOCUMENTATION	4.722950673296086E-7	TEST
// IDENTIFIER	WITHOUT_CLASSIFICATION	0.9999641812909067	WITHOUT_CLASSIFICATION	2.05015474821057E-5	IMPLEMENTATION	1.2274424054717149E-5	DESIGN	1.8832692992452026E-6	DEFECT	6.14839671432887E-7	TEST	5.44628585875391E-7	DOCUMENTATION
// VERSION	WITHOUT_CLASSIFICATION	0.9999921515618975	WITHOUT_CLASSIFICATION	5.522220971231514E-6	DESIGN	1.2899294751102168E-6	IMPLEMENTATION	7.402271672267591E-7	DEFECT	1.4889797546635747E-7	DOCUMENTATION	1.4716251349061293E-7	TEST
//WHERE STRING	WITHOUT_CLASSIFICATION	0.9999555023970614	WITHOUT_CLASSIFICATION	2.7317892879427427E-5	DESIGN	1.156772344241289E-5	IMPLEMENTATION	2.4477134242082798E-6	DEFECT	2.0241486148492596E-6	DOCUMENTATION	1.1401245777180535E-6	TEST
// SUBCLASS PROPERTY CLOSURE	WITHOUT_CLASSIFICATION	0.9999983416157286	WITHOUT_CLASSIFICATION	5.999580484515749E-7	IMPLEMENTATION	5.862966306670083E-7	DESIGN	2.0048187190938404E-7	DOCUMENTATION	1.9469679986740332E-7	DEFECT	7.695092055355362E-8	TEST
//before add :-)	WITHOUT_CLASSIFICATION	0.9999401892192158	WITHOUT_CLASSIFICATION	3.627741732637055E-5	IMPLEMENTATION	1.6373583349300957E-5	DESIGN	4.626645791788461E-6	DEFECT	1.4264479678118176E-6	DOCUMENTATION	1.1066863489404988E-6	TEST
// Handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.9999285291993436	WITHOUT_CLASSIFICATION	7.002101699630466E-5	DESIGN	1.4249133547331583E-6	IMPLEMENTATION	1.6266595346659688E-8	DOCUMENTATION	7.909161794587632E-9	TEST	6.945480082009833E-10	DEFECT
// only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.9999748341734519	WITHOUT_CLASSIFICATION	1.993039508545331E-5	DEFECT	4.627731118479941E-6	IMPLEMENTATION	4.799269957249025E-7	DESIGN	7.542526290790494E-8	DOCUMENTATION	5.2348085534705804E-8	TEST
//note early exit here:	WITHOUT_CLASSIFICATION	0.9952209804167922	WITHOUT_CLASSIFICATION	0.0022431859004035082	IMPLEMENTATION	0.001713905856913942	DESIGN	7.126050714025027E-4	DEFECT	7.1613839129435E-5	TEST	3.7708915358381986E-5	DOCUMENTATION
// object have been loaded with setReadOnly(true); HHH-2236	WITHOUT_CLASSIFICATION	0.9999230819525342	WITHOUT_CLASSIFICATION	5.503880187428434E-5	DEFECT	1.1843755967448071E-5	DESIGN	9.479050033697285E-6	IMPLEMENTATION	3.7242363154996646E-7	DOCUMENTATION	1.8401595885620992E-7	TEST
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.996442458125446	WITHOUT_CLASSIFICATION	0.0022038264112892066	DESIGN	6.810668041998473E-4	TEST	6.650653761608713E-4	DEFECT	4.9795941341709E-6	DOCUMENTATION	2.6036887699540945E-6	IMPLEMENTATION
//strip leading ", "	WITHOUT_CLASSIFICATION	0.9999969742224877	WITHOUT_CLASSIFICATION	1.6822979700814573E-6	DESIGN	9.423914428701206E-7	IMPLEMENTATION	2.0807068350481874E-7	TEST	1.128058558111038E-7	DOCUMENTATION	8.021155999017674E-8	DEFECT
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9999951545694385	WITHOUT_CLASSIFICATION	3.7113265641428993E-6	DEFECT	1.0449178925334586E-6	DESIGN	5.657857723629364E-8	TEST	2.5104758451907964E-8	IMPLEMENTATION	7.502769003710979E-9	DOCUMENTATION
//otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.9940143958464048	WITHOUT_CLASSIFICATION	0.00565456245192401	DESIGN	3.269559948869812E-4	IMPLEMENTATION	2.4488552794543405E-6	TEST	1.1589603917181567E-6	DEFECT	4.778911130772071E-7	DOCUMENTATION
//null owner ok??	WITHOUT_CLASSIFICATION	0.9998787880478198	WITHOUT_CLASSIFICATION	1.0228201373210464E-4	DESIGN	1.1757594308969109E-5	IMPLEMENTATION	6.202941723225589E-6	DEFECT	6.960916590306735E-7	DOCUMENTATION	2.733107568639301E-7	TEST
// null sql means that the only lazy properties // are shared PK one-to-one associations which are // handled differently in the Type#nullSafeGet code...	WITHOUT_CLASSIFICATION	0.9899551656790324	WITHOUT_CLASSIFICATION	0.010041651012118678	DESIGN	2.3541951508970378E-6	DOCUMENTATION	4.2773610197882893E-7	DEFECT	2.7139329786053623E-7	IMPLEMENTATION	1.2998429819436235E-7	TEST
// Create a new FROM node for the referenced class.	WITHOUT_CLASSIFICATION	0.9999860711941775	WITHOUT_CLASSIFICATION	1.3912456049764843E-5	DESIGN	5.444624351054515E-9	DOCUMENTATION	5.347174516540762E-9	IMPLEMENTATION	4.984529792113906E-9	TEST	5.734442524679261E-10	DEFECT
// the difficulty here is exactly what do we update in order to // force the version to be incremented in the db...	WITHOUT_CLASSIFICATION	0.9998654501854027	WITHOUT_CLASSIFICATION	1.3381477506973466E-4	DESIGN	6.118080111160263E-7	IMPLEMENTATION	6.957817424529252E-8	DEFECT	4.9025847681780425E-8	DOCUMENTATION	4.627494473534198E-9	TEST
// performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.9999927306474328	WITHOUT_CLASSIFICATION	5.926206700485286E-6	DESIGN	9.661996278701872E-7	DOCUMENTATION	3.083023562529393E-7	IMPLEMENTATION	5.9476557549445356E-8	DEFECT	9.167324996869018E-9	TEST
// properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.9999990902593081	WITHOUT_CLASSIFICATION	7.385040037548189E-7	IMPLEMENTATION	7.007881751992423E-8	DESIGN	6.145173924495365E-8	DEFECT	2.4661461798274614E-8	TEST	1.5044669592602445E-8	DOCUMENTATION
//Enable for HHH-440, which we don't like:	WITHOUT_CLASSIFICATION	0.995883281857065	WITHOUT_CLASSIFICATION	0.004071438958003138	DESIGN	2.2774224826554427E-5	DEFECT	1.3993399166961152E-5	DOCUMENTATION	6.741009411860214E-6	TEST	1.7705515264920776E-6	IMPLEMENTATION
// ALIASES	WITHOUT_CLASSIFICATION	0.9999913963661426	WITHOUT_CLASSIFICATION	4.784000475550714E-6	DESIGN	2.2059576527138525E-6	DEFECT	1.3114278176326824E-6	IMPLEMENTATION	1.756748230255888E-7	DOCUMENTATION	1.265730884760225E-7	TEST
// aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.9999825902452057	WITHOUT_CLASSIFICATION	1.624858978675787E-5	DESIGN	1.006812951452216E-6	IMPLEMENTATION	7.727269375575758E-8	TEST	4.297997013247684E-8	DOCUMENTATION	3.4099392091100973E-8	DEFECT
// aliases for composite-id's	WITHOUT_CLASSIFICATION	0.9999996190504454	WITHOUT_CLASSIFICATION	2.936703206811979E-7	DESIGN	7.244514903440904E-8	IMPLEMENTATION	7.761210874596096E-9	DEFECT	5.5962113793031475E-9	TEST	1.4766627060452518E-9	DOCUMENTATION
// Fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.9999936196600553	WITHOUT_CLASSIFICATION	6.198370689201779E-6	DESIGN	1.7452787878686528E-7	DEFECT	2.6856371401243496E-9	TEST	2.624494246407133E-9	IMPLEMENTATION	2.1312452926031895E-9	DOCUMENTATION
// embedded composite ids ( alias.idname1, alias.idname2 )	WITHOUT_CLASSIFICATION	0.9999983852288015	WITHOUT_CLASSIFICATION	1.21733943393864E-6	DESIGN	3.172608922893716E-7	IMPLEMENTATION	6.160001360876197E-8	DEFECT	1.0678972458410367E-8	TEST	7.891886179431433E-9	DOCUMENTATION
// TODO: skip formulas?	WITHOUT_CLASSIFICATION	0.44273571139462065	WITHOUT_CLASSIFICATION	0.37188215426059557	IMPLEMENTATION	0.17822329261609934	DESIGN	0.0036702564352561065	DOCUMENTATION	0.0029692158666227227	DEFECT	5.193694268055107E-4	TEST
//don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9999942289490941	WITHOUT_CLASSIFICATION	3.5852393345898815E-6	IMPLEMENTATION	1.4796085145929849E-6	DESIGN	4.2815397188672177E-7	TEST	1.7688923244757495E-7	DEFECT	1.0115985249832452E-7	DOCUMENTATION
//do two passes, for collection property-ref!	WITHOUT_CLASSIFICATION	0.9999905513926336	WITHOUT_CLASSIFICATION	5.968428983469598E-6	IMPLEMENTATION	2.07263559031197E-6	DEFECT	1.2009377359361952E-6	TEST	1.4571107623740916E-7	DESIGN	6.08939804660259E-8	DOCUMENTATION
// select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.9999895705417425	WITHOUT_CLASSIFICATION	5.231105117975594E-6	DESIGN	3.7719857630643967E-6	DEFECT	1.3325594653861034E-6	IMPLEMENTATION	7.73859778527039E-8	TEST	1.642193325581551E-8	DOCUMENTATION
//TODO: eventually, rowIdName[j]	WITHOUT_CLASSIFICATION	0.6731065022460756	IMPLEMENTATION	0.18235752224837815	DESIGN	0.1139925733859646	WITHOUT_CLASSIFICATION	0.028524787872204273	DEFECT	0.0014236307860229617	DOCUMENTATION	5.94983461354444E-4	TEST
// this is a property of the table, which we are updating	WITHOUT_CLASSIFICATION	0.9999919423483039	WITHOUT_CLASSIFICATION	7.498764836773259E-6	DEFECT	5.191481387808541E-7	DESIGN	1.9288545439693882E-8	DOCUMENTATION	1.493904117648124E-8	TEST	5.511133906053773E-9	IMPLEMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999309087403915	WITHOUT_CLASSIFICATION	6.294408485501978E-5	DEFECT	3.2898254668168736E-6	IMPLEMENTATION	1.5196705770061189E-6	TEST	8.420560964861416E-7	DESIGN	4.956226131419701E-7	DOCUMENTATION
// we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.9999193804071232	WITHOUT_CLASSIFICATION	7.941491985825449E-5	DEFECT	8.467824737181938E-7	DESIGN	1.6720746204631336E-7	IMPLEMENTATION	1.078726063174771E-7	DOCUMENTATION	8.281047632292E-8	TEST
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999849818542014	WITHOUT_CLASSIFICATION	1.272479056480939E-5	DESIGN	2.0733654464474635E-6	TEST	1.3531914328702623E-7	IMPLEMENTATION	7.860408372590177E-8	DEFECT	6.066560462208568E-9	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999091649401918	WITHOUT_CLASSIFICATION	8.904992162363122E-5	DESIGN	1.692759046576567E-6	DEFECT	8.057654737414452E-8	TEST	6.505293002146363E-9	IMPLEMENTATION	5.2972976762184846E-9	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.999999139926905	WITHOUT_CLASSIFICATION	6.675979616523757E-7	IMPLEMENTATION	9.232790194975516E-8	DESIGN	6.389943002834933E-8	DEFECT	2.1786924311676828E-8	DOCUMENTATION	1.4460876906460201E-8	TEST
// add the discriminator	WITHOUT_CLASSIFICATION	0.9999981973245005	WITHOUT_CLASSIFICATION	1.6797604958007252E-6	DESIGN	6.590988285963559E-8	IMPLEMENTATION	3.8049142285003364E-8	DOCUMENTATION	1.1225115586046082E-8	TEST	7.730863146607443E-9	DEFECT
// more specifically : "? [op] datetime" //      1) if the operator is MINUS, the param needs to be of //          some datetime type //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.8948298693322636	WITHOUT_CLASSIFICATION	0.10510461732956622	DESIGN	3.552432575997944E-5	IMPLEMENTATION	2.051398102209063E-5	DOCUMENTATION	5.837996844977878E-6	DEFECT	3.637034543236134E-6	TEST
// add normal properties	WITHOUT_CLASSIFICATION	0.999999139926905	WITHOUT_CLASSIFICATION	6.675979616523757E-7	IMPLEMENTATION	9.232790194975516E-8	DESIGN	6.389943002834933E-8	DEFECT	2.1786924311676828E-8	DOCUMENTATION	1.4460876906460201E-8	TEST
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999091649401918	WITHOUT_CLASSIFICATION	8.904992162363122E-5	DESIGN	1.692759046576567E-6	DEFECT	8.057654737414452E-8	TEST	6.505293002146363E-9	IMPLEMENTATION	5.2972976762184846E-9	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.9999981973245005	WITHOUT_CLASSIFICATION	1.6797604958007252E-6	DESIGN	6.590988285963559E-8	IMPLEMENTATION	3.8049142285003364E-8	DOCUMENTATION	1.1225115586046082E-8	TEST	7.730863146607443E-9	DEFECT
// add the primary key	WITHOUT_CLASSIFICATION	0.999994394354482	WITHOUT_CLASSIFICATION	4.675861710201239E-6	IMPLEMENTATION	7.372965240928486E-7	DESIGN	1.5020382423296464E-7	DOCUMENTATION	3.044723492955518E-8	TEST	1.1836224620335085E-8	DEFECT
// delegate already handles PK columns	WITHOUT_CLASSIFICATION	0.9999988192357528	WITHOUT_CLASSIFICATION	1.098876216193573E-6	DESIGN	3.3626504805085045E-8	IMPLEMENTATION	3.069303037427213E-8	DEFECT	9.82939945238474E-9	DOCUMENTATION	7.739096468317843E-9	TEST
// we can't batch joined inserts, *especially* not if it is an identity insert; // nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.9999990843670021	WITHOUT_CLASSIFICATION	9.024474717861001E-7	DEFECT	8.77427822967301E-9	TEST	3.051507764018439E-9	DESIGN	1.147902788159165E-9	IMPLEMENTATION	2.118371801682947E-10	DOCUMENTATION
// Render the SQL query	WITHOUT_CLASSIFICATION	0.9976823102655644	WITHOUT_CLASSIFICATION	0.0021476769820097507	DESIGN	1.0632876783195226E-4	IMPLEMENTATION	4.893024691856619E-5	DEFECT	1.0666027837395592E-5	DOCUMENTATION	4.087709838083388E-6	TEST
// Write the values of fields onto the prepared statement - we MUST use the state at the time the // insert was issued (cos of foreign key constraints). Not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.9999999549273274	WITHOUT_CLASSIFICATION	2.5223306015572004E-8	DESIGN	1.7908035821033094E-8	DEFECT	1.7233999945878998E-9	DOCUMENTATION	1.967621208987859E-10	IMPLEMENTATION	2.116856829575363E-11	TEST
// TODO : shouldnt inserts be Expectations.NONE?	WITHOUT_CLASSIFICATION	0.9892226519121712	DESIGN	0.009095088589258784	IMPLEMENTATION	9.696303722038578E-4	DEFECT	5.240334546357294E-4	WITHOUT_CLASSIFICATION	1.6595452016230443E-4	TEST	2.2641151568048906E-5	DOCUMENTATION
//don't bother trying to update, we know there is no row there yet	WITHOUT_CLASSIFICATION	0.9453327493252742	WITHOUT_CLASSIFICATION	0.030199477468374383	DEFECT	0.02294171437395985	DESIGN	0.0014809669366179696	IMPLEMENTATION	3.2816779771747835E-5	TEST	1.2275116001890133E-5	DOCUMENTATION
//if all fields are null, we might need to delete existing row	WITHOUT_CLASSIFICATION	0.9997479286222597	WITHOUT_CLASSIFICATION	1.5344163812217872E-4	DESIGN	9.230380825999215E-5	IMPLEMENTATION	2.862319551811928E-6	TEST	2.1228121480737065E-6	DEFECT	1.3407996582177042E-6	DOCUMENTATION
//there is probably a row there, so try to update //if no rows were updated, we will find out	WITHOUT_CLASSIFICATION	0.9999691550859691	WITHOUT_CLASSIFICATION	3.062184946106578E-5	DESIGN	1.967090220784794E-7	DEFECT	1.4604664579242468E-8	IMPLEMENTATION	8.355483292737992E-9	TEST	3.395399905203923E-9	DOCUMENTATION
//note: updates to joined tables can't be batched...	WITHOUT_CLASSIFICATION	0.9998890039193968	WITHOUT_CLASSIFICATION	8.567875227861413E-5	DESIGN	2.226475398990273E-5	DEFECT	2.3202849367166594E-6	IMPLEMENTATION	5.34330281711852E-7	TEST	1.9795911617553956E-7	DOCUMENTATION
// starting index	WITHOUT_CLASSIFICATION	0.9999905108924454	WITHOUT_CLASSIFICATION	7.301391144772863E-6	DEFECT	8.603574074622176E-7	IMPLEMENTATION	8.353698852011105E-7	DESIGN	2.8812659645031804E-7	DOCUMENTATION	2.0386252076860975E-7	TEST
//Now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.9999995553201906	WITHOUT_CLASSIFICATION	2.7465184324403734E-7	DESIGN	7.68099646441301E-8	DEFECT	7.426361507884494E-8	IMPLEMENTATION	1.1083166977350474E-8	TEST	7.871219389992596E-9	DOCUMENTATION
// Write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.9999291431238897	WITHOUT_CLASSIFICATION	4.1753095908109686E-5	DESIGN	2.246211902323266E-5	IMPLEMENTATION	6.055443000065624E-6	DEFECT	4.317417596658521E-7	DOCUMENTATION	1.5447641918582214E-7	TEST
//Render the SQL query	WITHOUT_CLASSIFICATION	0.993904283669766	WITHOUT_CLASSIFICATION	0.005781580056259285	DESIGN	1.9113285900648156E-4	IMPLEMENTATION	6.225048047253897E-5	DEFECT	4.566759595988493E-5	DOCUMENTATION	1.5085338535788316E-5	TEST
// Do the key. The key is immutable so we can use the _current_ object state - not necessarily // the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.9999672869293973	WITHOUT_CLASSIFICATION	3.0339695390455565E-5	IMPLEMENTATION	2.0886656246961355E-6	DEFECT	2.4598872177166116E-7	DOCUMENTATION	3.100839537087813E-8	DESIGN	7.712470423603408E-9	TEST
// We should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.9999998333691978	WITHOUT_CLASSIFICATION	1.1932482693395168E-7	DEFECT	2.4041352126286077E-8	IMPLEMENTATION	1.924116170933091E-8	DESIGN	3.1712964305849362E-9	DOCUMENTATION	8.52165078316374E-10	TEST
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999812163853685	WITHOUT_CLASSIFICATION	1.7520343022604423E-5	DESIGN	1.2117847761160298E-6	DEFECT	3.015079195747401E-8	DOCUMENTATION	1.9505766165735847E-8	TEST	1.8302747598002975E-9	IMPLEMENTATION
//note: dirtyFields==null means we had no snapshot, and we couldn't get one using select-before-update //	WITHOUT_CLASSIFICATION	0.9999927864533056	WITHOUT_CLASSIFICATION	7.0231368779875375E-6	DESIGN	1.4462437192286871E-7	DEFECT	4.401770818685721E-8	IMPLEMENTATION	9.250252924080556E-10	TEST	8.427110180488915E-10	DOCUMENTATION
// more specifically : "datetime [op] ?" //      1) if the operator is MINUS, we really cannot determine //          the expected type as either another datetime or //          numeric would be valid //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9991630536915842	WITHOUT_CLASSIFICATION	8.356384670653475E-4	DESIGN	1.1567671798086492E-6	DEFECT	1.1390762544000387E-7	DOCUMENTATION	3.5799257398174275E-8	TEST	1.3672877534073212E-9	IMPLEMENTATION
// For the case of dynamic-update="true", we need to generate the UPDATE SQL	WITHOUT_CLASSIFICATION	0.999998639560286	WITHOUT_CLASSIFICATION	9.563602372896484E-7	DESIGN	2.2176906149589122E-7	DOCUMENTATION	1.2784058749585306E-7	IMPLEMENTATION	3.7211426579722443E-8	TEST	1.725840128844105E-8	DEFECT
// don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.9164998725054309	WITHOUT_CLASSIFICATION	0.08193466988979325	IMPLEMENTATION	7.58633593650828E-4	DEFECT	7.527788596113561E-4	DESIGN	3.990251440585756E-5	DOCUMENTATION	1.4142637107686284E-5	TEST
// For the case of dynamic-update="false", or no snapshot, we use the static SQL	WITHOUT_CLASSIFICATION	0.9999999674091056	WITHOUT_CLASSIFICATION	1.4929241387553676E-8	DEFECT	6.70527895939037E-9	DOCUMENTATION	5.879613960835261E-9	DESIGN	5.036579950191803E-9	IMPLEMENTATION	4.01800687758435E-11	TEST
// if not "get", then try "is"	WITHOUT_CLASSIFICATION	0.9999676900245671	WITHOUT_CLASSIFICATION	1.8219440718634794E-5	DEFECT	5.006031815236812E-6	IMPLEMENTATION	4.866680124164454E-6	DESIGN	3.5274642365412744E-6	TEST	6.903585382217233E-7	DOCUMENTATION
// Now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.9999989673473602	WITHOUT_CLASSIFICATION	7.225929578753392E-7	DESIGN	2.415227090058681E-7	IMPLEMENTATION	6.184879816425636E-8	DEFECT	4.338790195142026E-9	TEST	2.3493845302802344E-9	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999798186903599	WITHOUT_CLASSIFICATION	1.911969662035657E-5	DESIGN	6.744967067384323E-7	DOCUMENTATION	2.481144285564112E-7	TEST	1.2772892194812225E-7	IMPLEMENTATION	1.1272962465402473E-8	DEFECT
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999798186903599	WITHOUT_CLASSIFICATION	1.911969662035657E-5	DESIGN	6.744967067384323E-7	DOCUMENTATION	2.481144285564112E-7	TEST	1.2772892194812225E-7	IMPLEMENTATION	1.1272962465402473E-8	DEFECT
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999999859721653	WITHOUT_CLASSIFICATION	9.039942756230107E-9	DESIGN	2.3547131060736094E-9	DEFECT	1.7888601378245636E-9	DOCUMENTATION	7.616218565740622E-10	IMPLEMENTATION	8.269674663332195E-11	TEST
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999999859721653	WITHOUT_CLASSIFICATION	9.039942756230107E-9	DESIGN	2.3547131060736094E-9	DEFECT	1.7888601378245636E-9	DOCUMENTATION	7.616218565740622E-10	IMPLEMENTATION	8.269674663332195E-11	TEST
// not supported	WITHOUT_CLASSIFICATION	0.933345960089884	WITHOUT_CLASSIFICATION	0.05965035346858392	IMPLEMENTATION	0.006594090202134256	DESIGN	3.502971776053703E-4	DEFECT	3.647438788078154E-5	TEST	2.2824673911651296E-5	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999812163853685	WITHOUT_CLASSIFICATION	1.7520343022604423E-5	DESIGN	1.2117847761160298E-6	DEFECT	3.015079195747401E-8	DOCUMENTATION	1.9505766165735847E-8	TEST	1.8302747598002975E-9	IMPLEMENTATION
// we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.9999946530304825	WITHOUT_CLASSIFICATION	3.154994405593717E-6	DESIGN	1.601646657271492E-6	DOCUMENTATION	4.73794240629828E-7	IMPLEMENTATION	6.159171974636873E-8	TEST	5.49424942364678E-8	DEFECT
// otherwise, utilize the static delete statements	WITHOUT_CLASSIFICATION	0.9999988599597054	WITHOUT_CLASSIFICATION	8.535708072971528E-7	IMPLEMENTATION	2.7821420947035165E-7	DESIGN	4.271738970908434E-9	DOCUMENTATION	2.5048089110273505E-9	DEFECT	1.4787298900945782E-9	TEST
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9998525220685675	WITHOUT_CLASSIFICATION	1.2533036085788453E-4	DESIGN	1.141878070601604E-5	IMPLEMENTATION	7.230428200512867E-6	DOCUMENTATION	2.133654222767525E-6	DEFECT	1.3647074453637194E-6	TEST
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9998525220685675	WITHOUT_CLASSIFICATION	1.2533036085788453E-4	DESIGN	1.141878070601604E-5	IMPLEMENTATION	7.230428200512867E-6	DOCUMENTATION	2.133654222767525E-6	DEFECT	1.3647074453637194E-6	TEST
//all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.999994620177272	WITHOUT_CLASSIFICATION	2.20832933996113E-6	IMPLEMENTATION	1.9968649550274633E-6	DESIGN	1.0189985873442456E-6	DEFECT	1.2637245785337794E-7	DOCUMENTATION	2.9257387799909986E-8	TEST
//notice that we skip the first table; it is the driving table!	WITHOUT_CLASSIFICATION	0.9999275591020828	WITHOUT_CLASSIFICATION	4.753864884924327E-5	DESIGN	2.0176501764038055E-5	DEFECT	2.3148322822231617E-6	IMPLEMENTATION	2.1726478643593725E-6	TEST	2.3826715739925476E-7	DOCUMENTATION
//we can inner join to superclass tables (the row MUST be there) //we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.9988224163158465	WITHOUT_CLASSIFICATION	0.0011774831028956015	DESIGN	9.444153321630366E-8	DEFECT	2.888549008925715E-9	DOCUMENTATION	1.969339859603297E-9	IMPLEMENTATION	1.2818360561221337E-9	TEST
//skip the driving table	WITHOUT_CLASSIFICATION	0.9999845508723995	WITHOUT_CLASSIFICATION	8.535640756293734E-6	DESIGN	5.252151238492257E-6	IMPLEMENTATION	8.6748463617585E-7	TEST	5.129688500069827E-7	DEFECT	2.808821195253691E-7	DOCUMENTATION
//get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.9209954900361073	WITHOUT_CLASSIFICATION	0.07342893528638622	DESIGN	0.004386676497262214	DEFECT	0.001168769468801669	IMPLEMENTATION	1.5779564707943106E-5	DOCUMENTATION	4.34914673484448E-6	TEST
// here, we work under the following assumptions: //      ------------ valid cases -------------------------------------- //      1) datetime + {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      2) datetime - datetime : always results in a DOUBLE //      3) datetime - {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      ------------ invalid cases ------------------------------------ //      4) datetime + datetime //      5) {something other than datetime} - datetime //      6) datetime * {any type} //      7) datetime / {any type} //      8) {any type} / datetime // doing so allows us to properly handle parameters as either the left // or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.9950592455745119	WITHOUT_CLASSIFICATION	0.004883533376428597	DEFECT	4.471939575850699E-5	DESIGN	1.2423407202323717E-5	IMPLEMENTATION	7.198350478420909E-8	DOCUMENTATION	6.2625939319700914E-9	TEST
//render the where and from parts	WITHOUT_CLASSIFICATION	0.9997040208305432	WITHOUT_CLASSIFICATION	2.842020858824231E-4	DESIGN	3.756246892628857E-6	IMPLEMENTATION	3.652336263098749E-6	DEFECT	2.4797857696305202E-6	TEST	1.8887146490420752E-6	DOCUMENTATION
//we *could* regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.9976875261546662	WITHOUT_CLASSIFICATION	0.0023114962993276804	DESIGN	5.093159987267875E-7	DEFECT	2.6902781364284065E-7	TEST	1.6864543364196433E-7	IMPLEMENTATION	3.055676006140524E-8	DOCUMENTATION
//now render the joins	WITHOUT_CLASSIFICATION	0.9998468562739975	WITHOUT_CLASSIFICATION	9.972705427107417E-5	DESIGN	4.9078922905129394E-5	IMPLEMENTATION	1.8142967624475966E-6	DEFECT	1.7519681282537996E-6	DOCUMENTATION	7.71483935499225E-7	TEST
// This will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.9999955688264045	WITHOUT_CLASSIFICATION	3.0522751522399844E-6	IMPLEMENTATION	6.453632507301182E-7	DESIGN	5.866076490531709E-7	DEFECT	1.4111349120618847E-7	DOCUMENTATION	5.814052220193198E-9	TEST
//now render the select clause	WITHOUT_CLASSIFICATION	0.9999965601281151	WITHOUT_CLASSIFICATION	1.8722743690930878E-6	DESIGN	1.4556788402978445E-6	IMPLEMENTATION	5.464962585564466E-8	DEFECT	3.679719257101219E-8	DOCUMENTATION	2.0471857015199325E-8	TEST
//now tie it all together	WITHOUT_CLASSIFICATION	0.9995373692424346	WITHOUT_CLASSIFICATION	3.077711369383497E-4	IMPLEMENTATION	1.525475259801361E-4	DESIGN	1.214997227295475E-6	DEFECT	6.926601496720493E-7	DOCUMENTATION	4.044372699575336E-7	TEST
//insert/update/delete SQL	WITHOUT_CLASSIFICATION	0.9999987478397918	WITHOUT_CLASSIFICATION	1.1446060346013077E-6	DESIGN	6.449650370087219E-8	DEFECT	1.5433118574981067E-8	TEST	1.4325700408831338E-8	DOCUMENTATION	1.3298850809723102E-8	IMPLEMENTATION
//select SQL	WITHOUT_CLASSIFICATION	0.9999653565657238	WITHOUT_CLASSIFICATION	3.177347321967697E-5	DESIGN	1.8823576177389141E-6	IMPLEMENTATION	4.3308358547637995E-7	TEST	3.305982316040923E-7	DOCUMENTATION	2.239216216994405E-7	DEFECT
//no need to check laziness, dirty checking handles that	WITHOUT_CLASSIFICATION	0.9999914229963155	WITHOUT_CLASSIFICATION	6.343556252121878E-6	IMPLEMENTATION	1.3877105872764943E-6	DESIGN	3.452558941650503E-7	DOCUMENTATION	3.2747484679565866E-7	DEFECT	1.7300610404910675E-7	TEST
// Fully resolve the map reference, create implicit joins.	WITHOUT_CLASSIFICATION	0.9999979529477256	WITHOUT_CLASSIFICATION	1.4964456352052738E-6	DESIGN	4.706823905073347E-7	IMPLEMENTATION	3.694166128853327E-8	DEFECT	2.5074769226845945E-8	TEST	1.7907818115232568E-8	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994089099748978	WITHOUT_CLASSIFICATION	5.859215525444784E-4	DESIGN	1.693224590594858E-6	IMPLEMENTATION	1.4280107229113313E-6	DEFECT	1.385993890166075E-6	TEST	6.61243354048422E-7	DOCUMENTATION
// The basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.999990116085665	WITHOUT_CLASSIFICATION	7.148752061299465E-6	DESIGN	2.173626547855701E-6	IMPLEMENTATION	4.834791935226586E-7	DEFECT	7.607655853991424E-8	DOCUMENTATION	1.979973546024056E-9	TEST
// for dialects which are known to not support ANSI-SQL row-value-constructor syntax, // we should mutate the tree.	WITHOUT_CLASSIFICATION	0.999886471832485	WITHOUT_CLASSIFICATION	9.761715959845997E-5	DESIGN	1.1069057756633798E-5	DEFECT	4.694859609897357E-6	IMPLEMENTATION	1.1650203547296811E-7	TEST	3.058851447636895E-8	DOCUMENTATION
// Due to the complexity in initializing the SelectClause, do not generate one here. // If it is not found; simply return null... // // Also, do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.9999999940335714	WITHOUT_CLASSIFICATION	4.00068081591115E-9	DESIGN	1.5818609932088435E-9	IMPLEMENTATION	3.162404011047772E-10	DEFECT	4.51292777274861E-11	TEST	2.251719408898193E-11	DOCUMENTATION
// check the version unsaved-value, if appropriate	WITHOUT_CLASSIFICATION	0.9999308706578923	WITHOUT_CLASSIFICATION	6.733753157063055E-5	IMPLEMENTATION	1.1743038289841716E-6	DESIGN	5.854983215199665E-7	DEFECT	2.7005246020216094E-8	DOCUMENTATION	5.0031405062272095E-9	TEST
// let this take precedence if defined, since it works for // assigned identifiers	WITHOUT_CLASSIFICATION	0.9999954342497502	WITHOUT_CLASSIFICATION	3.751337329027584E-6	DESIGN	6.712792818643038E-7	TEST	1.1231850679105408E-7	DEFECT	2.361931076171599E-8	IMPLEMENTATION	7.195821273476634E-9	DOCUMENTATION
// check the id unsaved-value	WITHOUT_CLASSIFICATION	0.9999935622124877	WITHOUT_CLASSIFICATION	5.96572031458785E-6	IMPLEMENTATION	3.4734683727868094E-7	DESIGN	8.127714792771013E-8	DOCUMENTATION	3.891094658156584E-8	DEFECT	4.532265888169808E-9	TEST
// check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.999984816809172	WITHOUT_CLASSIFICATION	1.49695552438625E-5	DESIGN	8.235261643103051E-8	IMPLEMENTATION	6.536946659149636E-8	DOCUMENTATION	5.643411614764536E-8	DEFECT	9.479385107242034E-9	TEST
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9990612659178691	WITHOUT_CLASSIFICATION	8.145738134030273E-4	DESIGN	4.447594921756063E-5	DEFECT	3.910243605146484E-5	IMPLEMENTATION	2.1594717598190095E-5	TEST	1.8987165860590066E-5	DOCUMENTATION
// For property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.9999967314445818	WITHOUT_CLASSIFICATION	1.2361121677599545E-6	DESIGN	1.0488080600732262E-6	DEFECT	8.871766589089898E-7	IMPLEMENTATION	6.029387092701708E-8	DOCUMENTATION	3.616466047667038E-8	TEST
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999907807450628	WITHOUT_CLASSIFICATION	3.1744570870278095E-6	DESIGN	2.8257034602572826E-6	DEFECT	2.264276197204893E-6	IMPLEMENTATION	4.825231256528824E-7	DOCUMENTATION	4.722950673296086E-7	TEST
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9999951545694385	WITHOUT_CLASSIFICATION	3.7113265641428993E-6	DEFECT	1.0449178925334586E-6	DESIGN	5.657857723629364E-8	TEST	2.5104758451907964E-8	IMPLEMENTATION	7.502769003710979E-9	DOCUMENTATION
//force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.9999993433633417	WITHOUT_CLASSIFICATION	3.7059381211441975E-7	DESIGN	1.9766864478566356E-7	DEFECT	5.604272262962002E-8	DOCUMENTATION	2.7864506476173497E-8	TEST	4.466972332247597E-9	IMPLEMENTATION
// If this from element is a collection and the path is a collection property (maxIndex, etc.) then // generate a sub-query.	WITHOUT_CLASSIFICATION	0.9999616726809576	WITHOUT_CLASSIFICATION	2.8655860322111575E-5	DEFECT	8.1073217413251E-6	DESIGN	1.4122116155507888E-6	IMPLEMENTATION	8.570335222932437E-8	TEST	6.622201128071571E-8	DOCUMENTATION
// entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999867601979646	WITHOUT_CLASSIFICATION	8.505495621210289E-6	DESIGN	3.1970902664432734E-6	IMPLEMENTATION	7.228073828309448E-7	DEFECT	4.151522377536862E-7	TEST	3.9925652705455304E-7	DOCUMENTATION
// collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999824432412265	WITHOUT_CLASSIFICATION	8.588439155255644E-6	DESIGN	5.287784258363927E-6	IMPLEMENTATION	3.3687096093170165E-6	DEFECT	1.926233250564994E-7	TEST	1.1920242541270372E-7	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.9999161203331483	WITHOUT_CLASSIFICATION	7.145280250628222E-5	DESIGN	9.03757155709042E-6	DEFECT	2.1066069421879755E-6	DOCUMENTATION	9.062341606349475E-7	IMPLEMENTATION	3.764516855089908E-7	TEST
//cannot occur	WITHOUT_CLASSIFICATION	0.9999161203331483	WITHOUT_CLASSIFICATION	7.145280250628222E-5	DESIGN	9.03757155709042E-6	DEFECT	2.1066069421879755E-6	DOCUMENTATION	9.062341606349475E-7	IMPLEMENTATION	3.764516855089908E-7	TEST
// only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.9998288393593107	WITHOUT_CLASSIFICATION	1.6942571213303173E-4	DESIGN	1.1557649801013744E-6	DEFECT	3.1938018292098625E-7	IMPLEMENTATION	2.2707520171614643E-7	TEST	3.2708191689704335E-8	DOCUMENTATION
// try "get"	WITHOUT_CLASSIFICATION	0.9999959960074547	WITHOUT_CLASSIFICATION	1.4802530096226037E-6	DEFECT	1.441431062688559E-6	IMPLEMENTATION	8.719083767729146E-7	DESIGN	1.0996883404347601E-7	DOCUMENTATION	1.0043126217774529E-7	TEST
// do nothing...	WITHOUT_CLASSIFICATION	0.9999969963109797	WITHOUT_CLASSIFICATION	2.377022069784274E-6	DESIGN	2.8452278373199803E-7	DEFECT	1.9988657796242755E-7	DOCUMENTATION	8.608704695557413E-8	TEST	5.617054183895694E-8	IMPLEMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999969963109797	WITHOUT_CLASSIFICATION	2.377022069784274E-6	DESIGN	2.8452278373199803E-7	DEFECT	1.9988657796242755E-7	DOCUMENTATION	8.608704695557413E-8	TEST	5.617054183895694E-8	IMPLEMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999039324583403	WITHOUT_CLASSIFICATION	8.358050332754618E-5	DEFECT	9.056607065069914E-6	DESIGN	2.8078556658490254E-6	IMPLEMENTATION	4.892263398037665E-7	TEST	1.3334926149307003E-7	DOCUMENTATION
// this page intentionally left blank :)	WITHOUT_CLASSIFICATION	0.9999866707603097	WITHOUT_CLASSIFICATION	9.87244649129313E-6	DESIGN	1.473567368985288E-6	IMPLEMENTATION	1.1756598959827942E-6	DOCUMENTATION	7.332164633144992E-7	DEFECT	7.434947076856961E-8	TEST
// do not do anything	WITHOUT_CLASSIFICATION	0.9999923185382407	WITHOUT_CLASSIFICATION	3.0037570363087706E-6	DEFECT	1.8886717627985503E-6	DOCUMENTATION	1.1881513346558783E-6	IMPLEMENTATION	1.1422827247729793E-6	DESIGN	4.5859890074141093E-7	TEST
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999975674143844	WITHOUT_CLASSIFICATION	1.3648294478659303E-6	DESIGN	5.671145305579706E-7	DEFECT	3.820433736968819E-7	IMPLEMENTATION	7.774135294475789E-8	DOCUMENTATION	4.085691057975015E-8	TEST
//cant instantiate	WITHOUT_CLASSIFICATION	0.9992996101010897	WITHOUT_CLASSIFICATION	6.785180792613371E-4	DESIGN	7.774558173432754E-6	DEFECT	6.045275706861692E-6	IMPLEMENTATION	4.880587339239585E-6	DOCUMENTATION	3.171398429391324E-6	TEST
//if it is a property of an embedded component, invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.9999689701230159	WITHOUT_CLASSIFICATION	3.084658153142362E-5	DESIGN	9.700314667855649E-8	DEFECT	7.823257330427848E-8	TEST	6.058078930231308E-9	DOCUMENTATION	2.0016537473133455E-9	IMPLEMENTATION
// otherwise:	WITHOUT_CLASSIFICATION	0.994494355808217	WITHOUT_CLASSIFICATION	0.003933116409295267	DESIGN	0.0015506632933785273	IMPLEMENTATION	1.128193492935401E-5	DEFECT	7.401062541963381E-6	TEST	3.1814916379315613E-6	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999764901728444	WITHOUT_CLASSIFICATION	1.5153681459998284E-5	IMPLEMENTATION	6.99992683870996E-6	DESIGN	6.642753551096452E-7	DOCUMENTATION	4.3377830135481907E-7	DEFECT	2.581652004571915E-7	TEST
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9989789552632493	WITHOUT_CLASSIFICATION	0.0010178043310145651	DESIGN	2.2978783441526864E-6	DEFECT	4.816637827031919E-7	IMPLEMENTATION	3.236006972468266E-7	DOCUMENTATION	1.3726291208147067E-7	TEST
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9989789552632493	WITHOUT_CLASSIFICATION	0.0010178043310145651	DESIGN	2.2978783441526864E-6	DEFECT	4.816637827031919E-7	IMPLEMENTATION	3.236006972468266E-7	DOCUMENTATION	1.3726291208147067E-7	TEST
// HHH-2481 make sure the callback gets cleared, otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.693643866350096	WITHOUT_CLASSIFICATION	0.30582678108864086	DESIGN	5.255936452781018E-4	DEFECT	2.8763296922154704E-6	IMPLEMENTATION	8.576404850649175E-7	DOCUMENTATION	2.494580768136524E-8	TEST
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999996217020274	WITHOUT_CLASSIFICATION	1.6054129838271998E-7	DESIGN	1.0709349296189931E-7	IMPLEMENTATION	8.016814129353752E-8	DEFECT	2.4653031321044045E-8	TEST	5.842008646855153E-9	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999996217020274	WITHOUT_CLASSIFICATION	1.6054129838271998E-7	DESIGN	1.0709349296189931E-7	IMPLEMENTATION	8.016814129353752E-8	DEFECT	2.4653031321044045E-8	TEST	5.842008646855153E-9	DOCUMENTATION
// note: interface is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9994905319128897	WITHOUT_CLASSIFICATION	5.088151810220634E-4	DESIGN	3.0971005345896006E-7	DEFECT	1.587711444731469E-7	IMPLEMENTATION	1.5032051368458568E-7	DOCUMENTATION	3.410437654650542E-8	TEST
// interfaces // arguments	WITHOUT_CLASSIFICATION	0.9999999245382657	WITHOUT_CLASSIFICATION	5.728355125892044E-8	DESIGN	7.428868858738775E-9	DOCUMENTATION	6.054144949131512E-9	DEFECT	4.677030904180336E-9	TEST	1.8138262476774145E-11	IMPLEMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9876926009812048	WITHOUT_CLASSIFICATION	0.010185325266623574	DESIGN	0.001248771203647784	DEFECT	3.9841665061369813E-4	TEST	2.759109343097543E-4	DOCUMENTATION	1.9897496360038282E-4	IMPLEMENTATION
// Get the caller	WITHOUT_CLASSIFICATION	0.9999994938319178	WITHOUT_CLASSIFICATION	3.746896307024208E-7	IMPLEMENTATION	1.2060303044619762E-7	DESIGN	4.781738674375475E-9	TEST	3.6352289901302254E-9	DEFECT	2.458453522308249E-9	DOCUMENTATION
// Get the caller principals	WITHOUT_CLASSIFICATION	0.9999993714289775	WITHOUT_CLASSIFICATION	4.325027746137406E-7	IMPLEMENTATION	1.8383591456324476E-7	DESIGN	5.679365508075231E-9	DOCUMENTATION	4.7283424706322736E-9	TEST	1.8246252171762142E-9	DEFECT
//private static final Alias DEFAULT_ALIAS = new Alias(10, null);	WITHOUT_CLASSIFICATION	0.9999999558871535	WITHOUT_CLASSIFICATION	3.410490413620715E-8	DESIGN	9.224193995633958E-9	DEFECT	6.485267489087776E-10	DOCUMENTATION	9.872320530937765E-11	IMPLEMENTATION	3.6498269855471875E-11	TEST
// Needed to bump this up to DotNode, because that is the only thing which currently // knows about the property-ref path in the correct format; it is either this, or // recurse over the DotNodes constructing the property path just like DotNode does // internally	WITHOUT_CLASSIFICATION	0.9999968158094049	WITHOUT_CLASSIFICATION	1.4148616722138653E-6	IMPLEMENTATION	1.1752272980198804E-6	TEST	3.7523923792408494E-7	DOCUMENTATION	1.8349137537970263E-7	DEFECT	3.537101153385608E-8	DESIGN
//if the identifier is quoted, remove the quotes	WITHOUT_CLASSIFICATION	0.9999370789909451	WITHOUT_CLASSIFICATION	4.105178513105949E-5	DESIGN	1.0710035390385244E-5	IMPLEMENTATION	1.0516392233828591E-5	TEST	5.120169067924022E-7	DEFECT	1.3077939268144523E-7	DOCUMENTATION
//truncate the identifier to the max alias length, less the suffix length	WITHOUT_CLASSIFICATION	0.9999586735125171	WITHOUT_CLASSIFICATION	4.029946661609437E-5	DESIGN	8.184814977352015E-7	IMPLEMENTATION	1.6669877638925747E-7	DOCUMENTATION	2.678836902532918E-8	DEFECT	1.5052223718216272E-8	TEST
//full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.9969185416837297	WITHOUT_CLASSIFICATION	0.0013466191589154369	DESIGN	9.765094289896139E-4	IMPLEMENTATION	7.347012684471388E-4	DEFECT	1.4931531894158607E-5	TEST	8.696928023984098E-6	DOCUMENTATION
// null is not considered the same type as Integer. //$NON-NLS-1 //$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999161379286045	WITHOUT_CLASSIFICATION	7.985411462680249E-5	DESIGN	3.2175111124235717E-6	DEFECT	7.772408071494785E-7	IMPLEMENTATION	7.458327797552018E-9	TEST	5.746521552145919E-9	DOCUMENTATION
// the outerJoinsAfterWhere needs to come before where clause to properly // handle dynamic filters	WITHOUT_CLASSIFICATION	0.9999870565872935	WITHOUT_CLASSIFICATION	1.237538806773058E-5	IMPLEMENTATION	4.7471633729182604E-7	DESIGN	7.423407563502806E-8	DEFECT	1.4841568031893326E-8	DOCUMENTATION	4.232657787777916E-9	TEST
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999068771111536	WITHOUT_CLASSIFICATION	7.9002126862139E-5	DESIGN	1.0775117734175912E-5	DEFECT	1.3898027718673306E-6	TEST	1.1792972848878074E-6	DOCUMENTATION	7.76544193385208E-7	IMPLEMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999068771111536	WITHOUT_CLASSIFICATION	7.9002126862139E-5	DESIGN	1.0775117734175912E-5	DEFECT	1.3898027718673306E-6	TEST	1.1792972848878074E-6	DOCUMENTATION	7.76544193385208E-7	IMPLEMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999068771111536	WITHOUT_CLASSIFICATION	7.9002126862139E-5	DESIGN	1.0775117734175912E-5	DEFECT	1.3898027718673306E-6	TEST	1.1792972848878074E-6	DOCUMENTATION	7.76544193385208E-7	IMPLEMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999068771111536	WITHOUT_CLASSIFICATION	7.9002126862139E-5	DESIGN	1.0775117734175912E-5	DEFECT	1.3898027718673306E-6	TEST	1.1792972848878074E-6	DOCUMENTATION	7.76544193385208E-7	IMPLEMENTATION
// strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.9999972016231239	WITHOUT_CLASSIFICATION	1.5115488149480837E-6	DEFECT	1.0250633615444856E-6	IMPLEMENTATION	1.3829866771778252E-7	DOCUMENTATION	7.128022963546976E-8	DESIGN	5.2185802202305446E-8	TEST
// if the condition is not already there...	WITHOUT_CLASSIFICATION	0.9999964274911916	WITHOUT_CLASSIFICATION	2.757566518227603E-6	DESIGN	3.918509931768064E-7	IMPLEMENTATION	2.715674334875199E-7	DEFECT	1.4691218782936622E-7	TEST	4.611675801729815E-9	DOCUMENTATION
//dontSpace.add("'");	WITHOUT_CLASSIFICATION	0.9999822733281264	WITHOUT_CLASSIFICATION	8.387499469874088E-6	DESIGN	7.284121191250245E-6	IMPLEMENTATION	1.1755555759663694E-6	DOCUMENTATION	6.263034168474841E-7	DEFECT	2.531922196583046E-7	TEST
//for MySQL	WITHOUT_CLASSIFICATION	0.9997857222430907	WITHOUT_CLASSIFICATION	2.0490419541424336E-4	DESIGN	5.346891276277697E-6	DEFECT	1.9413900088589654E-6	DOCUMENTATION	1.0572013785283516E-6	IMPLEMENTATION	1.0280788314608545E-6	TEST
//HashMap columnsUnique = new HashMap();	WITHOUT_CLASSIFICATION	0.9999919059272339	WITHOUT_CLASSIFICATION	4.179495370859357E-6	IMPLEMENTATION	3.545288503245325E-6	DESIGN	2.1480496003159426E-7	DEFECT	1.2292709029822615E-7	DOCUMENTATION	3.155684161387224E-8	TEST
//null caused some problems	WITHOUT_CLASSIFICATION	0.9944534990006814	WITHOUT_CLASSIFICATION	0.005444674397695657	DESIGN	5.157881739319651E-5	IMPLEMENTATION	2.513792061070072E-5	DEFECT	2.1565180944309206E-5	DOCUMENTATION	3.5446826746804603E-6	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9978396653539129	WITHOUT_CLASSIFICATION	0.002047636254167967	DESIGN	8.364911112739331E-5	IMPLEMENTATION	1.746060139679287E-5	DEFECT	7.776673285281719E-6	DOCUMENTATION	3.812006109517023E-6	TEST
//not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.9997024735324082	WITHOUT_CLASSIFICATION	2.962572791044579E-4	DESIGN	8.709721133609627E-7	DEFECT	3.4075227078912496E-7	TEST	3.882630611126656E-8	IMPLEMENTATION	1.8637797082123334E-8	DOCUMENTATION
//even on inverse="true"	WITHOUT_CLASSIFICATION	0.9999296432318276	WITHOUT_CLASSIFICATION	4.1129327058940876E-5	IMPLEMENTATION	1.9738780507336855E-5	DESIGN	5.161960665424036E-6	DEFECT	3.537033201074067E-6	DOCUMENTATION	7.896667395545818E-7	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9978396653539129	WITHOUT_CLASSIFICATION	0.002047636254167967	DESIGN	8.364911112739331E-5	IMPLEMENTATION	1.746060139679287E-5	DEFECT	7.776673285281719E-6	DOCUMENTATION	3.812006109517023E-6	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9978396653539129	WITHOUT_CLASSIFICATION	0.002047636254167967	DESIGN	8.364911112739331E-5	IMPLEMENTATION	1.746060139679287E-5	DEFECT	7.776673285281719E-6	DOCUMENTATION	3.812006109517023E-6	TEST
// If true then execute db updates, otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.9999934135682467	WITHOUT_CLASSIFICATION	5.869378071639749E-6	IMPLEMENTATION	5.763756063070498E-7	DESIGN	9.772495988559172E-8	DEFECT	2.615570617338661E-8	TEST	1.679740925598979E-8	DOCUMENTATION
// we only release the connection	WITHOUT_CLASSIFICATION	0.999998916899081	WITHOUT_CLASSIFICATION	3.379161130178986E-7	DESIGN	3.337150063876923E-7	DOCUMENTATION	2.9891789064125625E-7	IMPLEMENTATION	1.0097059144685682E-7	DEFECT	1.1581317448507436E-8	TEST
// deprecated option...	WITHOUT_CLASSIFICATION	0.9998840407506409	WITHOUT_CLASSIFICATION	8.603571460943301E-5	DESIGN	2.763921743543486E-5	IMPLEMENTATION	9.753920231402462E-7	DEFECT	6.991308113402637E-7	DOCUMENTATION	6.097944796337296E-7	TEST
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999512582073464	WITHOUT_CLASSIFICATION	3.2528720981287135E-5	DESIGN	1.5559064427131105E-5	DEFECT	4.4744360634940865E-7	IMPLEMENTATION	1.510178070534088E-7	TEST	5.554583180857891E-8	DOCUMENTATION
//actually, this last test is probably unnecessary, since  //beforeCompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.9514256333819875	WITHOUT_CLASSIFICATION	0.04740032545892525	DESIGN	9.973347470608237E-4	TEST	1.7215485895301702E-4	DEFECT	4.382072383629161E-6	DOCUMENTATION	1.694806898956297E-7	IMPLEMENTATION
// this one only really needed for badly-behaved applications! // (if the TransactionManager has a Sychronization registered, // its a noop) // (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.9999965943930904	WITHOUT_CLASSIFICATION	3.1269006343057866E-6	DESIGN	1.3091292224800927E-7	IMPLEMENTATION	7.036415308701276E-8	TEST	5.317737473153056E-8	DEFECT	2.425182509501454E-8	DOCUMENTATION
// Create an DotNode AST for the path and resolve it.	WITHOUT_CLASSIFICATION	0.9995670693301896	WITHOUT_CLASSIFICATION	4.253905590758505E-4	DESIGN	5.421198689704633E-6	IMPLEMENTATION	1.3294909223769515E-6	TEST	6.516279858631359E-7	DOCUMENTATION	1.3779313646063847E-7	DEFECT
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999512582073464	WITHOUT_CLASSIFICATION	3.2528720981287135E-5	DESIGN	1.5559064427131105E-5	DEFECT	4.4744360634940865E-7	IMPLEMENTATION	1.510178070534088E-7	TEST	5.554583180857891E-8	DOCUMENTATION
//if we could not register a synchronization, //do the before/after completion callbacks //ourself (but we need to let jdbcContext //know that this is what we are going to //do, so it doesn't keep trying to register //synchronizations)	WITHOUT_CLASSIFICATION	0.9998657085846593	WITHOUT_CLASSIFICATION	1.326173029549359E-4	DESIGN	9.935505853336258E-7	DEFECT	4.104792008733886E-7	TEST	2.5644380143283543E-7	DOCUMENTATION	1.3638798158043565E-8	IMPLEMENTATION
// swallow it, and continue to roll back JTA transaction	WITHOUT_CLASSIFICATION	0.9999430612986906	WITHOUT_CLASSIFICATION	2.5549946290421773E-5	DESIGN	1.708349916100944E-5	IMPLEMENTATION	1.3891528237897112E-5	DEFECT	4.080210414745191E-7	DOCUMENTATION	5.706578467838113E-9	TEST
// so the transaction is already rolled back, by JTA spec	WITHOUT_CLASSIFICATION	0.9999812087110252	WITHOUT_CLASSIFICATION	1.691299798853277E-5	IMPLEMENTATION	1.2488777937201885E-6	DESIGN	3.224360287577673E-7	DOCUMENTATION	2.8975772764993223E-7	DEFECT	1.7219436102730892E-8	TEST
// this method is a noop if there is a Synchronization!	WITHOUT_CLASSIFICATION	0.9999899792889332	WITHOUT_CLASSIFICATION	8.328356270358735E-6	DESIGN	1.0492768507527624E-6	DEFECT	5.67309903663308E-7	TEST	6.94272938796832E-8	DOCUMENTATION	6.340748284233827E-9	IMPLEMENTATION
// two conditions where we need to transform this to a theta-join syntax: //      1) 'elem' is the "root from-element" in correlated subqueries //      2) The DotNode.useThetaStyleImplicitJoins has been set to true //          and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.9090436956655379	WITHOUT_CLASSIFICATION	0.09095185575842935	DESIGN	2.905856639260885E-6	DEFECT	1.3928453367586302E-6	DOCUMENTATION	1.4663079182072966E-7	TEST	3.2432650054324026E-9	IMPLEMENTATION
// WebSphere, however, is not a sane JEE/JTA container...	WITHOUT_CLASSIFICATION	0.9998729473648221	WITHOUT_CLASSIFICATION	7.785774244435899E-5	DEFECT	4.377080929773231E-5	DESIGN	5.001286005170895E-6	IMPLEMENTATION	3.862621178608951E-7	TEST	3.65353127202461E-8	DOCUMENTATION
// for sane JEE/JTA containers, the transaction itself functions as its identifier...	WITHOUT_CLASSIFICATION	0.999996971910886	WITHOUT_CLASSIFICATION	1.8239138369933196E-6	DESIGN	1.2015809434811692E-6	IMPLEMENTATION	1.3836181753754716E-9	DOCUMENTATION	9.662402016446684E-10	TEST	2.4447518883240737E-10	DEFECT
//swallow, the transaction was finished	WITHOUT_CLASSIFICATION	0.9931268008299867	WITHOUT_CLASSIFICATION	0.006763812825778884	IMPLEMENTATION	6.570308486816293E-5	DESIGN	3.7912503191091956E-5	DEFECT	3.2060255020431494E-6	DOCUMENTATION	2.5647306730351137E-6	TEST
// all AliasToEntityMapResultTransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999652524273984	WITHOUT_CLASSIFICATION	2.3176828373980748E-5	DESIGN	1.148359594743108E-5	IMPLEMENTATION	5.312707556398843E-8	DEFECT	2.5328560902486494E-8	DOCUMENTATION	8.692643542707829E-9	TEST
// Create the join element under the from element.	WITHOUT_CLASSIFICATION	0.9999903844401407	WITHOUT_CLASSIFICATION	8.934431494018738E-6	DESIGN	4.0992825163215744E-7	DEFECT	1.54209876135632E-7	IMPLEMENTATION	8.898032016292826E-8	DOCUMENTATION	2.800991736511714E-8	TEST
// all DistinctRootEntityResultTransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999758871575217	WITHOUT_CLASSIFICATION	2.3932678377450165E-5	DESIGN	1.4520045117435874E-7	IMPLEMENTATION	1.5499575593962938E-8	DEFECT	1.316461901685898E-8	DOCUMENTATION	6.299454964485877E-9	TEST
// map of EntityMode -> Tuplizer	WITHOUT_CLASSIFICATION	0.999996219838908	WITHOUT_CLASSIFICATION	2.7901454644342847E-6	DESIGN	6.741523041671975E-7	DEFECT	1.9282286940868374E-7	IMPLEMENTATION	1.0284492308025872E-7	DOCUMENTATION	2.0195530986976273E-8	TEST
// this is a virtual id property...	WITHOUT_CLASSIFICATION	0.9993740644702842	WITHOUT_CLASSIFICATION	6.205781150260678E-4	DESIGN	4.9077776082158E-6	DEFECT	2.2518374966691896E-7	TEST	1.6918414968200883E-7	IMPLEMENTATION	5.526918225902953E-8	DOCUMENTATION
//this one needed only for guessEntityMode()	WITHOUT_CLASSIFICATION	0.9944435495459208	WITHOUT_CLASSIFICATION	0.005238978029969731	DESIGN	1.1727256952570874E-4	IMPLEMENTATION	1.0228634726299438E-4	TEST	5.660673661602258E-5	DEFECT	4.1306770704772124E-5	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999952883037913	WITHOUT_CLASSIFICATION	4.3746364943374664E-6	IMPLEMENTATION	2.8702867087454314E-7	DEFECT	3.17588354993862E-8	DESIGN	1.179073217374569E-8	TEST	6.48147579801536E-9	DOCUMENTATION
// todo : move this to SF per HHH-3517; also see HHH-1907 and ComponentMetamodel	WITHOUT_CLASSIFICATION	0.9059776013024895	WITHOUT_CLASSIFICATION	0.09402130619128735	DESIGN	5.568954799834607E-7	DEFECT	4.1916838854299544E-7	DOCUMENTATION	1.1342475083829055E-7	TEST	3.0176038864172013E-9	IMPLEMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999992062096755	WITHOUT_CLASSIFICATION	4.6188288803143683E-7	DESIGN	3.0728488542224213E-7	DEFECT	2.1094252115241563E-8	TEST	2.467659899668528E-9	DOCUMENTATION	1.060639056577517E-9	IMPLEMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999753706474075	WITHOUT_CLASSIFICATION	1.3113306200725412E-5	DEFECT	9.2146820421994E-6	DESIGN	1.3670115925826739E-6	IMPLEMENTATION	7.929432207004016E-7	DOCUMENTATION	1.4140953641935882E-7	TEST
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.999968324961477	WITHOUT_CLASSIFICATION	3.060791346385079E-5	DESIGN	6.15450836817063E-7	TEST	2.662830472330185E-7	IMPLEMENTATION	1.735246579071054E-7	DEFECT	1.1866516990462498E-8	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999753706474075	WITHOUT_CLASSIFICATION	1.3113306200725412E-5	DEFECT	9.2146820421994E-6	DESIGN	1.3670115925826739E-6	IMPLEMENTATION	7.929432207004016E-7	DOCUMENTATION	1.4140953641935882E-7	TEST
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999998009647103	WITHOUT_CLASSIFICATION	8.122175496647196E-8	IMPLEMENTATION	7.437559552329067E-8	DESIGN	3.770908316226003E-8	DEFECT	4.1487631521241496E-9	DOCUMENTATION	1.5800928764401336E-9	TEST
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999979844400073	WITHOUT_CLASSIFICATION	1.6759566013990393E-6	DESIGN	2.4539607871100663E-7	DEFECT	8.336719434765583E-8	TEST	7.35104422733874E-9	IMPLEMENTATION	3.489073936193533E-9	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// cached for efficiency...	WITHOUT_CLASSIFICATION	0.9996230839493274	WITHOUT_CLASSIFICATION	3.7552159067426875E-4	DESIGN	6.597296851174176E-7	IMPLEMENTATION	5.300393481181885E-7	DOCUMENTATION	1.3304151777663392E-7	TEST	7.164944734930783E-8	DEFECT
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
//it was not embedded, so the argument is just an id	WITHOUT_CLASSIFICATION	0.9999607860042576	WITHOUT_CLASSIFICATION	3.183500587961725E-5	DESIGN	2.7839047855130805E-6	DOCUMENTATION	2.5498293696130742E-6	DEFECT	2.0149241086597232E-6	TEST	3.033159901553741E-8	IMPLEMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999992062096755	WITHOUT_CLASSIFICATION	4.6188288803143683E-7	DESIGN	3.0728488542224213E-7	DEFECT	2.1094252115241563E-8	TEST	2.467659899668528E-9	DOCUMENTATION	1.060639056577517E-9	IMPLEMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.999968324961477	WITHOUT_CLASSIFICATION	3.060791346385079E-5	DESIGN	6.15450836817063E-7	TEST	2.662830472330185E-7	IMPLEMENTATION	1.735246579071054E-7	DEFECT	1.1866516990462498E-8	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999998009647103	WITHOUT_CLASSIFICATION	8.122175496647196E-8	IMPLEMENTATION	7.437559552329067E-8	DESIGN	3.770908316226003E-8	DEFECT	4.1487631521241496E-9	DOCUMENTATION	1.5800928764401336E-9	TEST
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9999603940622687	WITHOUT_CLASSIFICATION	2.3170537539523015E-5	DESIGN	1.5645641809254644E-5	IMPLEMENTATION	4.81172281300039E-7	TEST	2.1169016875242695E-7	DOCUMENTATION	9.689593244193596E-8	DEFECT
//return currentId;	WITHOUT_CLASSIFICATION	0.9999611343738043	WITHOUT_CLASSIFICATION	2.5199647326369516E-5	DESIGN	9.273273276146432E-6	IMPLEMENTATION	3.1353687844079793E-6	DEFECT	1.1806065962132915E-6	DOCUMENTATION	7.673021253563328E-8	TEST
//reset the id	WITHOUT_CLASSIFICATION	0.999711259681439	WITHOUT_CLASSIFICATION	2.6306988972902645E-4	IMPLEMENTATION	2.0271638407957408E-5	DESIGN	3.684242652948377E-6	TEST	9.437119292415088E-7	DEFECT	7.708358417398016E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
//reset the version	WITHOUT_CLASSIFICATION	0.9999645066821478	WITHOUT_CLASSIFICATION	2.5419183279424073E-5	IMPLEMENTATION	7.661796676793573E-6	DESIGN	1.579990713342631E-6	DEFECT	4.269129817164295E-7	DOCUMENTATION	4.05434200811461E-7	TEST
// the default is to simply not lazy fetch properties for now...	WITHOUT_CLASSIFICATION	0.9996232732173822	WITHOUT_CLASSIFICATION	1.9572572666624226E-4	DESIGN	1.7928330748303887E-4	DEFECT	1.5226949026511938E-6	IMPLEMENTATION	1.1574008138241065E-7	TEST	7.931348450754753E-8	DOCUMENTATION
// Add the second join, the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.9999986857697616	WITHOUT_CLASSIFICATION	1.196632219830276E-6	IMPLEMENTATION	6.998138974075377E-8	DESIGN	2.3781891586487005E-8	DEFECT	1.2648264380395059E-8	TEST	1.1186472805936783E-8	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994089099748978	WITHOUT_CLASSIFICATION	5.859215525444784E-4	DESIGN	1.693224590594858E-6	IMPLEMENTATION	1.4280107229113313E-6	DEFECT	1.385993890166075E-6	TEST	6.61243354048422E-7	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999979844400073	WITHOUT_CLASSIFICATION	1.6759566013990393E-6	DESIGN	2.4539607871100663E-7	DEFECT	8.336719434765583E-8	TEST	7.35104422733874E-9	IMPLEMENTATION	3.489073936193533E-9	DOCUMENTATION
// determine the id getter and setter methods from the proxy interface (if any) // determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.9998371747002139	WITHOUT_CLASSIFICATION	1.607171485606404E-4	DESIGN	2.0948645423941723E-6	DEFECT	7.794580684481693E-9	DOCUMENTATION	5.2508002226143794E-9	TEST	2.4130210201055267E-10	IMPLEMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
//not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.9992905475823597	WITHOUT_CLASSIFICATION	6.141573641002891E-4	DEFECT	9.241375444853184E-5	DESIGN	1.7097462657477195E-6	IMPLEMENTATION	9.84716347638019E-7	DOCUMENTATION	1.868364780708965E-7	TEST
// superclass entity-name	WITHOUT_CLASSIFICATION	0.9999950466198985	WITHOUT_CLASSIFICATION	4.9258362534659855E-6	DESIGN	9.764132559818812E-9	DOCUMENTATION	9.684515210631977E-9	IMPLEMENTATION	5.5794199122341E-9	DEFECT	2.5157803594280668E-9	TEST
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994089099748978	WITHOUT_CLASSIFICATION	5.859215525444784E-4	DESIGN	1.693224590594858E-6	IMPLEMENTATION	1.4280107229113313E-6	DEFECT	1.385993890166075E-6	TEST	6.61243354048422E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999907807450628	WITHOUT_CLASSIFICATION	3.1744570870278095E-6	DESIGN	2.8257034602572826E-6	DEFECT	2.264276197204893E-6	IMPLEMENTATION	4.825231256528824E-7	DOCUMENTATION	4.722950673296086E-7	TEST
//init the aliases, after initing the constructornode	WITHOUT_CLASSIFICATION	0.9999679437020872	WITHOUT_CLASSIFICATION	2.789562234031754E-5	IMPLEMENTATION	2.369913839116225E-6	DESIGN	1.5490271671321387E-6	TEST	1.6287030187004822E-7	DOCUMENTATION	7.886426428620962E-8	DEFECT
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994089099748978	WITHOUT_CLASSIFICATION	5.859215525444784E-4	DESIGN	1.693224590594858E-6	IMPLEMENTATION	1.4280107229113313E-6	DEFECT	1.385993890166075E-6	TEST	6.61243354048422E-7	DOCUMENTATION
// legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.9999947899871099	WITHOUT_CLASSIFICATION	4.189698235850099E-6	DESIGN	9.564066836871371E-7	IMPLEMENTATION	4.663512914022555E-8	DOCUMENTATION	1.6291489338091845E-8	TEST	9.813520750150995E-10	DEFECT
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999999422444399	WITHOUT_CLASSIFICATION	2.2364492250782142E-8	DEFECT	9.978493703593271E-9	IMPLEMENTATION	9.581962050613093E-9	DOCUMENTATION	8.520514500132408E-9	DESIGN	7.310097493183347E-9	TEST
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999907807450628	WITHOUT_CLASSIFICATION	3.1744570870278095E-6	DESIGN	2.8257034602572826E-6	DEFECT	2.264276197204893E-6	IMPLEMENTATION	4.825231256528824E-7	DOCUMENTATION	4.722950673296086E-7	TEST
//note: this affects the return value!	WITHOUT_CLASSIFICATION	0.9994990302412657	WITHOUT_CLASSIFICATION	2.995013647051754E-4	DEFECT	1.9039172666219953E-4	DESIGN	8.31232592046304E-6	IMPLEMENTATION	2.2394094123681323E-6	DOCUMENTATION	5.249320341713069E-7	TEST
// Need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.9999789183373095	WITHOUT_CLASSIFICATION	1.7213294046910504E-5	IMPLEMENTATION	2.2658993912019024E-6	DESIGN	1.3887774766205363E-6	TEST	1.4116116089434826E-7	DEFECT	7.253061499990915E-8	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999986403076785	WITHOUT_CLASSIFICATION	9.82794580278673E-7	DESIGN	3.619733989934944E-7	IMPLEMENTATION	6.589389951641427E-9	DOCUMENTATION	4.413753073478547E-9	TEST	3.921199066765954E-9	DEFECT
// Collection Types:	WITHOUT_CLASSIFICATION	0.9999324660258629	WITHOUT_CLASSIFICATION	5.6169733243242156E-5	DESIGN	7.013867579134733E-6	DEFECT	3.0876623213306343E-6	IMPLEMENTATION	8.18505242767217E-7	DOCUMENTATION	4.4420575059384217E-7	TEST
// convenience methods relating to operations across arrays of types...	WITHOUT_CLASSIFICATION	0.9999985007463514	WITHOUT_CLASSIFICATION	1.4187614200768885E-6	DESIGN	3.925018079480968E-8	DEFECT	1.7442633658183112E-8	TEST	1.2951366254733715E-8	DOCUMENTATION	1.0848047885591592E-8	IMPLEMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999410729308079	WITHOUT_CLASSIFICATION	5.832714501531392E-5	DESIGN	3.61685738711423E-7	IMPLEMENTATION	1.891069264152499E-7	DEFECT	4.1882403124505595E-8	TEST	7.249108600568261E-9	DOCUMENTATION
//Blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.9999994212429726	WITHOUT_CLASSIFICATION	4.968207761852889E-7	DESIGN	4.318759623515563E-8	IMPLEMENTATION	1.3334970927859447E-8	DOCUMENTATION	1.3248300959375898E-8	DEFECT	1.2165383044211075E-8	TEST
//value is the entity name	WITHOUT_CLASSIFICATION	0.9999699355607646	WITHOUT_CLASSIFICATION	2.671320745633583E-5	DESIGN	1.9193597677466973E-6	DEFECT	6.566576196878557E-7	DOCUMENTATION	5.889694424809685E-7	IMPLEMENTATION	1.8624494902398862E-7	TEST
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999436305875675	WITHOUT_CLASSIFICATION	2.110339497928084E-5	DEFECT	1.568933342052672E-5	IMPLEMENTATION	1.4725918444870232E-5	DESIGN	2.9826470555039145E-6	DOCUMENTATION	1.8681185323399315E-6	TEST
// generate id select fragment and then property select fragment for // each expression, just like generateSelectFragments().	WITHOUT_CLASSIFICATION	0.995950676817065	WITHOUT_CLASSIFICATION	0.004031366596494396	DESIGN	1.0440938195968874E-5	DEFECT	4.553930594416876E-6	TEST	2.821542038705042E-6	DOCUMENTATION	1.4017561150904284E-7	IMPLEMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9876926009812048	WITHOUT_CLASSIFICATION	0.010185325266623574	DESIGN	0.001248771203647784	DEFECT	3.9841665061369813E-4	TEST	2.759109343097543E-4	DOCUMENTATION	1.9897496360038282E-4	IMPLEMENTATION
//xml is the entity name	WITHOUT_CLASSIFICATION	0.999986253270791	WITHOUT_CLASSIFICATION	1.156227778413529E-5	DESIGN	6.532779640140102E-7	IMPLEMENTATION	5.413701614341302E-7	DEFECT	4.996000040696292E-7	DOCUMENTATION	4.902032953142519E-7	TEST
//special case ... this is the leaf of the containment graph, even though not immutable	WITHOUT_CLASSIFICATION	0.9812348145791633	WITHOUT_CLASSIFICATION	0.01511549238767596	DESIGN	0.0035269466131501222	DEFECT	7.942367234719127E-5	DOCUMENTATION	2.4911122216549573E-5	TEST	1.8411625446947695E-5	IMPLEMENTATION
//tolerates nulls	WITHOUT_CLASSIFICATION	0.9999781674798318	WITHOUT_CLASSIFICATION	1.614161094600993E-5	DESIGN	2.0123815705375087E-6	TEST	1.8694880906520327E-6	IMPLEMENTATION	1.7093338543925236E-6	DEFECT	9.970570653619797E-8	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9998860415617049	WITHOUT_CLASSIFICATION	6.158506376742973E-5	DEFECT	3.610632348394194E-5	DESIGN	1.2724060005025304E-5	IMPLEMENTATION	2.639215366642333E-6	TEST	9.037756720070615E-7	DOCUMENTATION
// metaType is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.999999874613334	WITHOUT_CLASSIFICATION	9.416356297366991E-8	DESIGN	3.017156606799439E-8	DEFECT	6.021611907950944E-10	DOCUMENTATION	3.9407090661749106E-10	TEST	5.530493160028121E-11	IMPLEMENTATION
// Get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.9999357635216355	WITHOUT_CLASSIFICATION	6.329573722044646E-5	DESIGN	7.940677505325127E-7	IMPLEMENTATION	1.3343217317610423E-7	DEFECT	8.6408718620926E-9	TEST	4.60034834868489E-9	DOCUMENTATION
// Look through the FromElement's children to find any collections of values that should be fetched...	WITHOUT_CLASSIFICATION	0.9979500853206441	WITHOUT_CLASSIFICATION	0.001985974566227988	IMPLEMENTATION	6.0706878021314425E-5	DEFECT	3.0931945326008466E-6	DESIGN	7.154767113785694E-8	DOCUMENTATION	6.849290294371526E-8	TEST
//return AssociationType.FOREIGN_KEY_TO_PARENT; //this is better but causes a transient object exception...	WITHOUT_CLASSIFICATION	0.995283851521849	WITHOUT_CLASSIFICATION	0.004692025418043983	DESIGN	1.7381190907571427E-5	IMPLEMENTATION	3.157635124252458E-6	TEST	2.538754221591092E-6	DEFECT	1.0454798536460175E-6	DOCUMENTATION
// Use the lower case function name. // Remember whether we're in a SELECT clause or not.	WITHOUT_CLASSIFICATION	0.9999977630276691	WITHOUT_CLASSIFICATION	1.0824135632585413E-6	DEFECT	1.0616207592158517E-6	DESIGN	8.276837682321427E-8	IMPLEMENTATION	9.279980173111275E-9	DOCUMENTATION	8.896515058134294E-10	TEST
// IDENT might be the name of a class.	WITHOUT_CLASSIFICATION	0.9989785101276025	WITHOUT_CLASSIFICATION	0.0010212274634016538	DESIGN	8.82822152424014E-8	DOCUMENTATION	8.254169505146874E-8	IMPLEMENTATION	6.417941824215759E-8	TEST	2.7405667329149056E-8	DEFECT
//TODO!!!	WITHOUT_CLASSIFICATION	0.9643632956291455	WITHOUT_CLASSIFICATION	0.03172534861613187	DESIGN	0.002268423380312429	DEFECT	7.725739014332077E-4	TEST	5.883031484091557E-4	DOCUMENTATION	2.8205532456781655E-4	IMPLEMENTATION
//st.setTimestamp( index,  new Timestamp( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9996812599227514	WITHOUT_CLASSIFICATION	3.0213743193039337E-4	DEFECT	1.0891020174540445E-5	DESIGN	3.4521917671442676E-6	IMPLEMENTATION	1.3705965088065982E-6	DOCUMENTATION	8.88836867764727E-7	TEST
//st.setDate( index,  new Date( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9997162085716061	WITHOUT_CLASSIFICATION	2.149924797057035E-4	DEFECT	4.932456307048916E-5	DESIGN	1.5711736354025185E-5	IMPLEMENTATION	3.073709362601081E-6	DOCUMENTATION	6.889399008930159E-7	TEST
// both are Timestamps	WITHOUT_CLASSIFICATION	0.9999996021836174	WITHOUT_CLASSIFICATION	2.2553494490698432E-7	DESIGN	9.700609683390188E-8	TEST	6.254593384382488E-8	IMPLEMENTATION	8.22591246498626E-9	DOCUMENTATION	4.503494640451903E-9	DEFECT
// at least one is a plain old Date	WITHOUT_CLASSIFICATION	0.9997534306742693	WITHOUT_CLASSIFICATION	2.3289947237608967E-4	DESIGN	9.074890430425697E-6	IMPLEMENTATION	3.0626937430812417E-6	TEST	9.533331810060341E-7	DEFECT	5.789360002160911E-7	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9995559812158034	WITHOUT_CLASSIFICATION	3.24367088516468E-4	DESIGN	9.507919457623802E-5	DEFECT	1.1684391318673071E-5	IMPLEMENTATION	9.055997357426253E-6	DOCUMENTATION	3.832112427910448E-6	TEST
// if the corresponding SQL value is NULL, the reader we got is NULL as well	WITHOUT_CLASSIFICATION	0.9999910462415751	WITHOUT_CLASSIFICATION	8.77404179189359E-6	DEFECT	1.0905436306829809E-7	DESIGN	5.4481227836407904E-8	TEST	1.2057404804947728E-8	IMPLEMENTATION	4.123637418758922E-9	DOCUMENTATION
// Fetch Reader content up to the end - and put characters in a StringBuffer	WITHOUT_CLASSIFICATION	0.990018619952002	WITHOUT_CLASSIFICATION	0.006588603882668763	DESIGN	0.0033658656935155354	IMPLEMENTATION	2.561393433055771E-5	DOCUMENTATION	1.088194315208889E-6	DEFECT	2.0834316798613812E-7	TEST
// Return StringBuffer content as a large String	WITHOUT_CLASSIFICATION	0.9999954957765762	WITHOUT_CLASSIFICATION	2.221500658411247E-6	DESIGN	1.7275503023953413E-6	IMPLEMENTATION	5.039916833298828E-7	DEFECT	4.424590448337603E-8	DOCUMENTATION	6.9348752085392804E-9	TEST
//or Types.LONGVARCHAR?	WITHOUT_CLASSIFICATION	0.9997531902611821	WITHOUT_CLASSIFICATION	2.124048269058605E-4	DESIGN	2.8226743361312576E-5	IMPLEMENTATION	2.5987869370596095E-6	TEST	2.445140319558072E-6	DOCUMENTATION	1.1342412941503178E-6	DEFECT
//Not called at runtime so doesn't matter if its slow :)	WITHOUT_CLASSIFICATION	0.9997213367965303	WITHOUT_CLASSIFICATION	1.7628989800899984E-4	DESIGN	6.751006501585787E-5	IMPLEMENTATION	1.9913644766721737E-5	DEFECT	1.4645352469640385E-5	TEST	3.042432084518335E-7	DOCUMENTATION
//TODO	WITHOUT_CLASSIFICATION	0.9990295500979094	WITHOUT_CLASSIFICATION	7.916620595393886E-4	DESIGN	7.362822272200483E-5	DEFECT	4.822058366116667E-5	TEST	3.0394739529184504E-5	DOCUMENTATION	2.654429663887885E-5	IMPLEMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999963112587418	WITHOUT_CLASSIFICATION	2.133869511327955E-6	TEST	7.2034130652542E-7	IMPLEMENTATION	4.025974514291279E-7	DEFECT	3.670262202152914E-7	DESIGN	6.490676886145492E-8	DOCUMENTATION
//different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.9999736239044078	WITHOUT_CLASSIFICATION	2.5231212481967042E-5	DESIGN	6.679069998171225E-7	DEFECT	2.8160364253441475E-7	IMPLEMENTATION	1.0492182088120302E-7	DOCUMENTATION	9.045064684547504E-8	TEST
//cache this	WITHOUT_CLASSIFICATION	0.9995905995404429	WITHOUT_CLASSIFICATION	3.737752833811315E-4	DESIGN	2.0160037792327316E-5	IMPLEMENTATION	1.0954088955663857E-5	DOCUMENTATION	4.0738890552932935E-6	TEST	4.371603726665683E-7	DEFECT
//only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.9998156724034517	WITHOUT_CLASSIFICATION	9.287423052266069E-5	DESIGN	7.5052697055327E-5	DEFECT	9.834998865887429E-6	IMPLEMENTATION	3.765006975778645E-6	DOCUMENTATION	2.800663128758087E-6	TEST
// Forcefully remove leading ands from where fragments; the grammar will // handle adding them	WITHOUT_CLASSIFICATION	0.9994746997469451	WITHOUT_CLASSIFICATION	4.67819080778734E-4	DESIGN	5.41776654566525E-5	DEFECT	2.6294303513015495E-6	IMPLEMENTATION	4.0594354268519876E-7	TEST	2.6813292553909796E-7	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9722385577044622	WITHOUT_CLASSIFICATION	0.022372067694318994	DESIGN	0.0023861115836268155	DEFECT	0.001248932809938739	TEST	0.001002818159598992	DOCUMENTATION	7.51512048054443E-4	IMPLEMENTATION
// Create a new FILTERS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.999987099195328	WITHOUT_CLASSIFICATION	7.818349372642338E-6	IMPLEMENTATION	4.8936446123266655E-6	DESIGN	1.716844409965594E-7	DEFECT	9.513201364719551E-9	DOCUMENTATION	7.613044689018872E-9	TEST
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999907807450628	WITHOUT_CLASSIFICATION	3.1744570870278095E-6	DESIGN	2.8257034602572826E-6	DEFECT	2.264276197204893E-6	IMPLEMENTATION	4.825231256528824E-7	DOCUMENTATION	4.722950673296086E-7	TEST
//public Object instantiate(Object parent, SessionImplementor session) throws HibernateException;	WITHOUT_CLASSIFICATION	0.8001722428433816	WITHOUT_CLASSIFICATION	0.19970286644490862	DESIGN	1.1150878837089911E-4	DEFECT	6.1027889520808925E-6	DOCUMENTATION	4.690554359081069E-6	IMPLEMENTATION	2.5885800277159522E-6	TEST
//nothing to do	WITHOUT_CLASSIFICATION	0.9998840019508007	WITHOUT_CLASSIFICATION	5.929100077204573E-5	DESIGN	2.1964108315310804E-5	DEFECT	1.8208963965430572E-5	IMPLEMENTATION	1.3079119299565086E-5	DOCUMENTATION	3.4548568469458695E-6	TEST
//nothing to do	WITHOUT_CLASSIFICATION	0.9998840019508007	WITHOUT_CLASSIFICATION	5.929100077204573E-5	DESIGN	2.1964108315310804E-5	DEFECT	1.8208963965430572E-5	IMPLEMENTATION	1.3079119299565086E-5	DOCUMENTATION	3.4548568469458695E-6	TEST
// VersionType impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //      Note : simply returns null for seed() and next() as the only known //      application of binary types for versioning is for use with the //      TIMESTAMP datatype supported by Sybase and SQL Server, which //      are completely db-generated values...	WITHOUT_CLASSIFICATION	0.9999968548072433	WITHOUT_CLASSIFICATION	1.9094255924472236E-6	DEFECT	1.098022384733396E-6	IMPLEMENTATION	1.3399395647248022E-7	DESIGN	3.4521481949299687E-9	DOCUMENTATION	2.986748111612177E-10	TEST
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999410729308079	WITHOUT_CLASSIFICATION	5.832714501531392E-5	DESIGN	3.61685738711423E-7	IMPLEMENTATION	1.891069264152499E-7	DEFECT	4.1882403124505595E-8	TEST	7.249108600568261E-9	DOCUMENTATION
//not really necessary, I guess...	WITHOUT_CLASSIFICATION	0.9845207891494581	WITHOUT_CLASSIFICATION	0.01525324602284227	DESIGN	1.39680591876199E-4	DEFECT	7.582205756898007E-5	IMPLEMENTATION	8.892889472768201E-6	DOCUMENTATION	1.5692887818127688E-6	TEST
//Clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.99999997872129	WITHOUT_CLASSIFICATION	1.276535698298947E-8	DESIGN	4.417167690976693E-9	DEFECT	1.5930989140053737E-9	TEST	1.2734835621976514E-9	IMPLEMENTATION	1.2296029777684336E-9	DOCUMENTATION
// we do not have to worry about queued additions to uninitialized // collections, since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.9999991255435398	WITHOUT_CLASSIFICATION	5.893556707462542E-7	DEFECT	2.7636063054609064E-7	IMPLEMENTATION	4.942800061059627E-9	DESIGN	2.8070054133240003E-9	TEST	9.903535928435178E-10	DOCUMENTATION
// collections cannot be compared	WITHOUT_CLASSIFICATION	0.9999866703147077	WITHOUT_CLASSIFICATION	1.1771535909682465E-5	DESIGN	1.1014599522078648E-6	IMPLEMENTATION	4.4552143878260827E-7	DEFECT	1.0121291185719842E-8	TEST	1.0467003346313815E-9	DOCUMENTATION
//remember the uk value	WITHOUT_CLASSIFICATION	0.9997927620995412	WITHOUT_CLASSIFICATION	1.5062811389151352E-4	DESIGN	4.250397996735139E-5	IMPLEMENTATION	8.1053794686446E-6	DEFECT	3.244971315902768E-6	TEST	2.755455815281609E-6	DOCUMENTATION
//NOOP	WITHOUT_CLASSIFICATION	0.9996081573438295	WITHOUT_CLASSIFICATION	3.4440331522677986E-4	DESIGN	1.8183296021423047E-5	IMPLEMENTATION	1.417485517751359E-5	DEFECT	7.838097391122175E-6	TEST	7.243092353684606E-6	DOCUMENTATION
//processCollectionProperty(token, q.getCollectionPersister(collectionRole), collectionName);	WITHOUT_CLASSIFICATION	0.9999750476390821	WITHOUT_CLASSIFICATION	2.122711999907772E-5	DESIGN	3.2520351818890246E-6	DEFECT	3.974994299473089E-7	TEST	6.533617486130891E-8	DOCUMENTATION	1.0370132321687933E-8	IMPLEMENTATION
//we must use the "remembered" uk value, since it is  //not available from the EntityEntry during assembly	WITHOUT_CLASSIFICATION	0.9969523479542723	WITHOUT_CLASSIFICATION	0.0030349891139113106	DESIGN	8.320522442698022E-6	TEST	4.2365592560808635E-6	DEFECT	8.088674210893796E-8	DOCUMENTATION	2.496337544546239E-8	IMPLEMENTATION
// collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.9999976752864825	WITHOUT_CLASSIFICATION	1.7202890155336173E-6	DESIGN	4.771622118435822E-7	IMPLEMENTATION	1.2077876715278135E-7	DEFECT	3.897496072247144E-9	DOCUMENTATION	2.586026834638017E-9	TEST
// return false;	WITHOUT_CLASSIFICATION	0.999992522191938	WITHOUT_CLASSIFICATION	6.605977009381653E-6	DESIGN	4.7051098535500365E-7	IMPLEMENTATION	3.7942967810054996E-7	DEFECT	1.4962263640809988E-8	DOCUMENTATION	6.928125599042854E-9	TEST
// This just handles a particular case of component // projection, perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.8580677461124677	WITHOUT_CLASSIFICATION	0.14158941983285966	DESIGN	3.416461583372846E-4	DEFECT	7.356284112652422E-7	IMPLEMENTATION	2.71451316221153E-7	TEST	1.8081660777592747E-7	DOCUMENTATION
//NOTE: we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.9999974373322569	WITHOUT_CLASSIFICATION	1.8494579926661748E-6	DESIGN	4.74509405293283E-7	TEST	2.2396384419482417E-7	DEFECT	1.257522282771948E-8	DOCUMENTATION	2.161278146782414E-9	IMPLEMENTATION
// the key is the owning entity itself, so get the ID from the key	WITHOUT_CLASSIFICATION	0.999992992609424	WITHOUT_CLASSIFICATION	6.900247488317566E-6	DESIGN	4.7222878549416387E-8	IMPLEMENTATION	2.5731284623990136E-8	TEST	2.1630655755086687E-8	DOCUMENTATION	1.2558268830942762E-8	DEFECT
// if the original is a PersistentCollection, and that original // was not flagged as dirty, then reset the target's dirty flag // here after the copy operation. // </p> // One thing to be careful of here is a "bare" original collection // in which case we should never ever ever reset the dirty flag // on the target because we simply do not know...	WITHOUT_CLASSIFICATION	0.9999996806698893	WITHOUT_CLASSIFICATION	2.415383059554485E-7	DEFECT	7.705264068150295E-8	IMPLEMENTATION	3.39326284065071E-10	TEST	3.1124635664884324E-10	DESIGN	8.859134228347702E-11	DOCUMENTATION
//ignore subselect keywords	WITHOUT_CLASSIFICATION	0.9999998394555498	WITHOUT_CLASSIFICATION	1.0451383951778316E-7	IMPLEMENTATION	2.2885105316044536E-8	DESIGN	2.0586895843018283E-8	DEFECT	1.0422150536255057E-8	DOCUMENTATION	2.1364590149226455E-9	TEST
// copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.9999999809795365	WITHOUT_CLASSIFICATION	1.7300848630582613E-8	DESIGN	1.039416995497464E-9	DEFECT	3.9598214397425055E-10	IMPLEMENTATION	2.3908140960092856E-10	DOCUMENTATION	4.5134368464635193E-11	TEST
// for a null target, or a target which is the same as the original, we // need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.999987128949591	WITHOUT_CLASSIFICATION	1.2697989181959702E-5	DESIGN	1.4403692284781975E-7	DEFECT	2.7532495666893752E-8	DOCUMENTATION	7.983637880664086E-10	TEST	6.934448235958506E-10	IMPLEMENTATION
// by default just use an unanticipated capacity since we don't // know how to extract the capacity to use from original here...	WITHOUT_CLASSIFICATION	0.9983126839336849	WITHOUT_CLASSIFICATION	0.0016244333040268497	DESIGN	6.0950178038582586E-5	IMPLEMENTATION	1.382316237070086E-6	DEFECT	4.298746566585889E-7	DOCUMENTATION	1.2039335597250301E-7	TEST
// get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.999938008585707	WITHOUT_CLASSIFICATION	5.51464874021044E-5	IMPLEMENTATION	6.060400853580299E-6	DESIGN	7.318400661279083E-7	DEFECT	4.0052621794936626E-8	DOCUMENTATION	1.2633349304743906E-8	TEST
// check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.9996978664248745	WITHOUT_CLASSIFICATION	2.2966357575359642E-4	IMPLEMENTATION	4.75330837637147E-5	DESIGN	2.3271020244778582E-5	DEFECT	9.036435194350685E-7	DOCUMENTATION	7.622518440260877E-7	TEST
// check if it is already completely loaded, but unowned	WITHOUT_CLASSIFICATION	0.9999030233068325	WITHOUT_CLASSIFICATION	9.585049753101094E-5	IMPLEMENTATION	5.81147906892851E-7	DEFECT	4.4918875112736E-7	DESIGN	8.850744640614202E-8	TEST	7.3515321563591495E-9	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.999999979654859	WITHOUT_CLASSIFICATION	1.8851708699405387E-8	DEFECT	6.373795882147452E-10	IMPLEMENTATION	4.757620083161317E-10	DOCUMENTATION	2.9850706150057053E-10	DESIGN	8.178369548917071E-11	TEST
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9722385577044622	WITHOUT_CLASSIFICATION	0.022372067694318994	DESIGN	0.0023861115836268155	DEFECT	0.001248932809938739	TEST	0.001002818159598992	DOCUMENTATION	7.51512048054443E-4	IMPLEMENTATION
// create a new collection wrapper, to be initialized later	WITHOUT_CLASSIFICATION	0.9998768620193597	WITHOUT_CLASSIFICATION	1.1979288983487266E-4	DESIGN	2.285556154835873E-6	DEFECT	8.826674543296675E-7	IMPLEMENTATION	1.449465572087933E-7	TEST	3.192063906806199E-8	DOCUMENTATION
// Some JDBC drivers erroneously return an empty array here for a null DB value :/	WITHOUT_CLASSIFICATION	0.998377686132504	WITHOUT_CLASSIFICATION	0.00160894342130809	DESIGN	1.3069949776954971E-5	DEFECT	2.8672466394553615E-7	IMPLEMENTATION	1.1526320647350132E-8	DOCUMENTATION	2.2454263234591766E-9	TEST
// our column span is the number of columns in the PK	WITHOUT_CLASSIFICATION	0.9999999752408143	WITHOUT_CLASSIFICATION	1.7839238241191436E-8	DEFECT	5.998606550694144E-9	DESIGN	4.845105091821398E-10	DOCUMENTATION	2.956386287967883E-10	IMPLEMENTATION	1.4119176036323118E-10	TEST
//cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.9999818175929486	WITHOUT_CLASSIFICATION	9.550933123276918E-6	DEFECT	4.1306990584516344E-6	DESIGN	2.996019291309653E-6	IMPLEMENTATION	8.507032804709048E-7	TEST	6.540522977533467E-7	DOCUMENTATION
// we already know current is not null...	WITHOUT_CLASSIFICATION	0.9977894028299872	WITHOUT_CLASSIFICATION	0.0015580920212953959	DEFECT	5.947589552881837E-4	IMPLEMENTATION	4.30872728571382E-5	DESIGN	1.4058831040798876E-5	DOCUMENTATION	6.000895313247151E-7	TEST
// the ids are fully resolved, so compare them with isDirty(), not isModified()	WITHOUT_CLASSIFICATION	0.9999983139803111	WITHOUT_CLASSIFICATION	9.641661176805476E-7	IMPLEMENTATION	5.463589613180659E-7	DESIGN	1.660803953064685E-7	DEFECT	8.296942234685483E-9	TEST	1.1172723728024977E-9	DOCUMENTATION
//the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.9999988249426762	WITHOUT_CLASSIFICATION	4.7117266587341044E-7	TEST	3.2229376683429337E-7	DEFECT	2.890530102033873E-7	IMPLEMENTATION	4.714763266720763E-8	DESIGN	4.539024810601748E-8	DOCUMENTATION
// ----------------------------------------------------------- Constructors	WITHOUT_CLASSIFICATION	0.9999975210319533	WITHOUT_CLASSIFICATION	1.3470749961386546E-6	DESIGN	7.95527314894667E-7	IMPLEMENTATION	2.160517859878119E-7	DEFECT	6.661743981278947E-8	TEST	5.369650976937093E-8	DOCUMENTATION
// ----------------------------------------------------- Instance Variables	WITHOUT_CLASSIFICATION	0.9999936847082617	WITHOUT_CLASSIFICATION	4.57510019586241E-6	DESIGN	1.1897881642624657E-6	IMPLEMENTATION	4.1488714483045174E-7	DEFECT	7.556423461201494E-8	DOCUMENTATION	5.995199870627648E-8	TEST
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// --------------------------------------------------------- Public Methods	WITHOUT_CLASSIFICATION	0.9997622986518999	WITHOUT_CLASSIFICATION	2.363835215799123E-4	DESIGN	4.483026483655489E-7	IMPLEMENTATION	3.918480501210322E-7	DEFECT	3.622926243080168E-7	DOCUMENTATION	1.1538319738904555E-7	TEST
// Compare the two maps for equality	WITHOUT_CLASSIFICATION	0.999997961244413	WITHOUT_CLASSIFICATION	1.7463684280563933E-6	DESIGN	2.347162507885496E-7	IMPLEMENTATION	4.1087173762869816E-8	DEFECT	1.0244307541280415E-8	TEST	6.3394268348378324E-9	DOCUMENTATION
// Simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.9999946227465519	WITHOUT_CLASSIFICATION	2.714836248702903E-6	DEFECT	2.3765488533406653E-6	TEST	2.7262278848157525E-7	DOCUMENTATION	8.334185691291027E-9	IMPLEMENTATION	4.911371796877984E-9	DESIGN
//Sybase fail if we don't do that, sigh...	WITHOUT_CLASSIFICATION	0.9994149505477179	WITHOUT_CLASSIFICATION	4.390324219067225E-4	DESIGN	1.24893528903855E-4	DEFECT	9.977477816475073E-6	DOCUMENTATION	9.7895339815516E-6	TEST	1.3564896735143889E-6	IMPLEMENTATION
// Handles things like: // a and b or c // a and ( b or c ) // not a and not b // not ( a and b ) // x between y and z            (overloaded "and") // x in ( a, b, c )             (overloaded brackets) // not not a // a is not null                (overloaded "not") // etc...... // and expressions like // foo = bar                    (maps to: foo.id = bar.id) // foo.Bar = 'foo'              (maps to: foo.bar = 'foo') // foo.Bar.Baz = 1.0            (maps to: foo.bar = bar.id and bar.baz = 1.0) // 1.0 = foo.Bar.Baz            (maps to: bar.baz = 1.0 and foo.Bar = bar.id) // foo.Bar.Baz = a.B.C          (maps to: bar.Baz = b.C and foo.Bar = bar.id and a.B = b.id) // foo.Bar.Baz + a.B.C          (maps to: bar.Baz + b.C and foo.Bar = bar.id and a.B = b.id) // ( foo.Bar.Baz + 1.0 ) < 2.0  (maps to: ( bar.Baz + 1.0 ) < 2.0 and foo.Bar = bar.id)	WITHOUT_CLASSIFICATION	0.6251779065277996	DESIGN	0.3550755202222303	WITHOUT_CLASSIFICATION	0.019737616452950774	DEFECT	5.740622015962743E-6	TEST	2.635271197415198E-6	DOCUMENTATION	5.809038059123557E-7	IMPLEMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999878907767245	WITHOUT_CLASSIFICATION	6.5864543215963325E-6	IMPLEMENTATION	5.476189132751937E-6	DESIGN	3.9733331903141606E-8	DOCUMENTATION	5.612533745275921E-9	TEST	1.2339555672375061E-9	DEFECT
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999878907767245	WITHOUT_CLASSIFICATION	6.5864543215963325E-6	IMPLEMENTATION	5.476189132751937E-6	DESIGN	3.9733331903141606E-8	DOCUMENTATION	5.612533745275921E-9	TEST	1.2339555672375061E-9	DEFECT
// try to "pretty print" it	WITHOUT_CLASSIFICATION	0.9999964393868005	WITHOUT_CLASSIFICATION	2.0122881670999865E-6	DEFECT	7.038736148280644E-7	IMPLEMENTATION	6.263551012911745E-7	DESIGN	1.7233912876557292E-7	DOCUMENTATION	4.575718750816597E-8	TEST
// otherwise, just dump it	WITHOUT_CLASSIFICATION	0.9996626517701521	WITHOUT_CLASSIFICATION	2.3822919353024726E-4	DESIGN	9.648461938411716E-5	IMPLEMENTATION	1.8102714878361762E-6	TEST	5.728785486765091E-7	DEFECT	2.512668970914718E-7	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9999967616415683	WITHOUT_CLASSIFICATION	2.4857207581745933E-6	DESIGN	3.7766710586565565E-7	DEFECT	3.4476994794232214E-7	DOCUMENTATION	2.9035274612762808E-8	TEST	1.1653452079450874E-9	IMPLEMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9999967616415683	WITHOUT_CLASSIFICATION	2.4857207581745933E-6	DESIGN	3.7766710586565565E-7	DEFECT	3.4476994794232214E-7	DOCUMENTATION	2.9035274612762808E-8	TEST	1.1653452079450874E-9	IMPLEMENTATION
// use default behavior	WITHOUT_CLASSIFICATION	0.9999689590906803	WITHOUT_CLASSIFICATION	3.097444842668056E-5	DESIGN	2.9802747288342556E-8	IMPLEMENTATION	2.463463191221683E-8	DEFECT	9.990032594807926E-9	DOCUMENTATION	2.033481284783076E-9	TEST
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9994739664877299	WITHOUT_CLASSIFICATION	4.257325347325122E-4	DESIGN	5.704283070792084E-5	DEFECT	4.097275055226963E-5	IMPLEMENTATION	1.8171227925135243E-6	DOCUMENTATION	4.6827348479309774E-7	TEST
// the MRU cache used to keep hard references to the most recently used query plans; // note : LRU here is a bit of a misnomer, it indicates that LRU entries are removed, the // actual kept entries are the MRU entries	WITHOUT_CLASSIFICATION	0.5244231899872761	WITHOUT_CLASSIFICATION	0.41949928434781514	DESIGN	0.056073102628626754	IMPLEMENTATION	2.6871641067561094E-6	DEFECT	9.032278039698964E-7	TEST	8.326443712479748E-7	DOCUMENTATION
// we want to be able to just use the defaults, // if JNDI environment properties are not supplied // so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.9991714906743523	WITHOUT_CLASSIFICATION	8.283300757839015E-4	DESIGN	1.3032475687468745E-7	TEST	3.01095209075363E-8	DOCUMENTATION	1.615662426479586E-8	IMPLEMENTATION	2.658961923937816E-9	DEFECT
// Clone //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999987575534247	WITHOUT_CLASSIFICATION	8.319230792570821E-7	DEFECT	3.347328161736863E-7	DESIGN	3.0191359574685286E-8	DOCUMENTATION	2.5760158384636488E-8	TEST	1.983916189949659E-8	IMPLEMENTATION
// Serialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999996876381435	WITHOUT_CLASSIFICATION	1.389881417782781E-7	DEFECT	8.726740396290512E-8	DESIGN	5.9374120828919245E-8	IMPLEMENTATION	1.481391767883589E-8	DOCUMENTATION	1.1918272163400066E-8	TEST
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999993528722935	WITHOUT_CLASSIFICATION	3.784584962446768E-7	DEFECT	2.492931267481665E-7	DESIGN	1.2256342163692855E-8	DOCUMENTATION	4.6137820006198635E-9	IMPLEMENTATION	2.50595921274254E-9	TEST
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999993528722935	WITHOUT_CLASSIFICATION	3.784584962446768E-7	DEFECT	2.492931267481665E-7	DESIGN	1.2256342163692855E-8	DOCUMENTATION	4.6137820006198635E-9	IMPLEMENTATION	2.50595921274254E-9	TEST
// Deserialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999997955655318	WITHOUT_CLASSIFICATION	1.2639670418101764E-7	IMPLEMENTATION	2.6579657946998446E-8	DEFECT	2.423452424222021E-8	DESIGN	2.0732282366433154E-8	TEST	6.491299617168181E-9	DOCUMENTATION
/* static methods only - hide constructor */	WITHOUT_CLASSIFICATION	0.9999862134203596	WITHOUT_CLASSIFICATION	9.460250283202916E-6	IMPLEMENTATION	3.880922585893693E-6	DESIGN	3.734995333648674E-7	DEFECT	4.122753010060876E-8	DOCUMENTATION	3.067970772111346E-8	TEST
/*&& !('_'==character)*/	WITHOUT_CLASSIFICATION	0.999998393994839	WITHOUT_CLASSIFICATION	1.0004502418198765E-6	DESIGN	4.1398405463654573E-7	IMPLEMENTATION	9.068801673849983E-8	TEST	6.262715555527053E-8	DOCUMENTATION	3.825569219422896E-8	DEFECT
// returnign null!	WITHOUT_CLASSIFICATION	0.9999957780509914	WITHOUT_CLASSIFICATION	2.5135105277343245E-6	DEFECT	1.3958416931347326E-6	DESIGN	2.678517877148929E-7	IMPLEMENTATION	3.937642843470817E-8	DOCUMENTATION	5.368571594351904E-9	TEST
// returnign null!	WITHOUT_CLASSIFICATION	0.9999957780509914	WITHOUT_CLASSIFICATION	2.5135105277343245E-6	DEFECT	1.3958416931347326E-6	DESIGN	2.678517877148929E-7	IMPLEMENTATION	3.937642843470817E-8	DOCUMENTATION	5.368571594351904E-9	TEST
// includes last '.'	WITHOUT_CLASSIFICATION	0.9999992110746223	WITHOUT_CLASSIFICATION	4.533269073379492E-7	DESIGN	2.32958908874276E-7	DEFECT	5.6020452493601263E-8	TEST	2.8786545196452383E-8	DOCUMENTATION	1.7832563783344683E-8	IMPLEMENTATION
// +1 to include the following '.'	WITHOUT_CLASSIFICATION	0.9998279255656269	WITHOUT_CLASSIFICATION	1.284659681861782E-4	DEFECT	2.625043319057205E-5	DESIGN	1.5035559135231519E-5	IMPLEMENTATION	2.0879453618594907E-6	DOCUMENTATION	2.3452849929509453E-7	TEST
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9998753771402339	WITHOUT_CLASSIFICATION	1.2100853065365393E-4	DESIGN	1.9168895318002306E-6	DEFECT	1.396754499344288E-6	IMPLEMENTATION	2.895462787383095E-7	TEST	1.1138802524064179E-8	DOCUMENTATION
// first time we find match!	WITHOUT_CLASSIFICATION	0.9999991180644273	WITHOUT_CLASSIFICATION	6.153278334824266E-7	IMPLEMENTATION	1.482709741688561E-7	DESIGN	5.5000283922513506E-8	TEST	5.471975850878237E-8	DOCUMENTATION	8.616722575527831E-9	DEFECT
// entityNames may now include slashes for the representations //classname may be an inner class	WITHOUT_CLASSIFICATION	0.9998294425138391	WITHOUT_CLASSIFICATION	1.704042145921505E-4	DESIGN	8.822508949323866E-8	IMPLEMENTATION	3.1509515797182567E-8	DEFECT	2.3237149669685215E-8	DOCUMENTATION	1.0299813819928743E-8	TEST
// wrapped iterators	WITHOUT_CLASSIFICATION	0.9999898248378729	WITHOUT_CLASSIFICATION	9.794984588228391E-6	DESIGN	2.1375018505238605E-7	IMPLEMENTATION	8.911657619389884E-8	TEST	6.418384218354928E-8	DEFECT	1.3126935423190265E-8	DOCUMENTATION
// index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.9999822637284479	WITHOUT_CLASSIFICATION	1.512013420868401E-5	DESIGN	2.1063267450712494E-6	DEFECT	2.976994295066093E-7	IMPLEMENTATION	1.2951101382074038E-7	DOCUMENTATION	8.260015503453844E-8	TEST
// the current iterator	WITHOUT_CLASSIFICATION	0.9999954095734889	WITHOUT_CLASSIFICATION	3.491721224202309E-6	DESIGN	7.92216920746769E-7	IMPLEMENTATION	1.7537574328301463E-7	DOCUMENTATION	8.169995244219613E-8	TEST	4.9412670458251086E-8	DEFECT
// the last used iterator	WITHOUT_CLASSIFICATION	0.9999785605691547	WITHOUT_CLASSIFICATION	2.1344367618630047E-5	DESIGN	6.404964578548658E-8	TEST	2.208920372761365E-8	IMPLEMENTATION	4.916803077154243E-9	DOCUMENTATION	4.007574112495346E-9	DEFECT
//it was a boolean expression	WITHOUT_CLASSIFICATION	0.9997391993311805	WITHOUT_CLASSIFICATION	1.7272178294309718E-4	DESIGN	8.721411379780684E-5	DEFECT	5.612326381406994E-7	TEST	2.3592818842775872E-7	DOCUMENTATION	6.761125214960808E-8	IMPLEMENTATION
/*public static Object[] clone(Class elementClass, Object[] array) {	WITHOUT_CLASSIFICATION	0.9999611694201833	WITHOUT_CLASSIFICATION	3.855383832484252E-5	DESIGN	2.2232117490041393E-7	DEFECT	4.304712381194334E-8	DOCUMENTATION	9.771323021461892E-9	IMPLEMENTATION	1.601870003273456E-9	TEST
// call this before any Iterator method to make sure that the current Iterator // is not exhausted	WITHOUT_CLASSIFICATION	0.9989964749361706	WITHOUT_CLASSIFICATION	6.431179374007708E-4	DESIGN	2.9021342739305784E-4	DEFECT	6.171013974917636E-5	IMPLEMENTATION	7.691968608503978E-6	TEST	7.915906778709992E-7	DOCUMENTATION
//doable if needed	WITHOUT_CLASSIFICATION	0.9890430299579404	WITHOUT_CLASSIFICATION	0.005875346344248853	IMPLEMENTATION	0.004613405565372006	DESIGN	4.295230665596281E-4	TEST	3.156498263778658E-5	DOCUMENTATION	7.13008324130355E-6	DEFECT
// set last used iterator here, in case the user calls remove // before calling hasNext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.9999603792743977	WITHOUT_CLASSIFICATION	3.844324226689206E-5	DESIGN	1.0001492662663537E-6	DEFECT	9.549684752180169E-8	IMPLEMENTATION	8.042963156249117E-8	TEST	1.4075900383935324E-9	DOCUMENTATION
// peek ahead	WITHOUT_CLASSIFICATION	0.9999816675026236	WITHOUT_CLASSIFICATION	1.6333900968375502E-5	IMPLEMENTATION	1.4163037289920141E-6	DESIGN	3.2966678894505796E-7	DOCUMENTATION	1.6449558541135083E-7	DEFECT	8.813030461430196E-8	TEST
// if we reach the end of the string w/o finding the // matching end, that is an exception	WITHOUT_CLASSIFICATION	0.9999994872362897	WITHOUT_CLASSIFICATION	4.612821908166462E-7	DEFECT	2.7087968783012894E-8	TEST	1.9955431131183785E-8	DESIGN	2.2653751588380137E-9	DOCUMENTATION	2.1727444248529218E-9	IMPLEMENTATION
// we have a placeholder, spin forward till we find the end	WITHOUT_CLASSIFICATION	0.9986779627381202	WITHOUT_CLASSIFICATION	0.0011382417117104875	IMPLEMENTATION	1.7824232204255848E-4	DESIGN	3.4627607508176462E-6	DEFECT	1.9911724033703068E-6	DOCUMENTATION	9.929497264391484E-8	TEST
// make sure spinning forward did not put us past the end of the buffer...	WITHOUT_CLASSIFICATION	0.9999778586029886	WITHOUT_CLASSIFICATION	1.9498120024845418E-5	DESIGN	1.334644281660875E-6	IMPLEMENTATION	1.027261436280937E-6	DEFECT	2.63728516432802E-7	TEST	1.764275217121645E-8	DOCUMENTATION
// First, try to locate this resource through the current // context classloader.	WITHOUT_CLASSIFICATION	0.9999994553102792	WITHOUT_CLASSIFICATION	3.3817406716037145E-7	DESIGN	1.215969349126461E-7	IMPLEMENTATION	6.571870973969547E-8	DOCUMENTATION	1.3684276521679225E-8	TEST	5.515732407213529E-9	DEFECT
// Next, try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.9999986311660364	WITHOUT_CLASSIFICATION	1.3474588427802387E-6	DESIGN	1.3042834734632054E-8	TEST	4.630990647830499E-9	DOCUMENTATION	1.8856233706190672E-9	DEFECT	1.8156721659373853E-9	IMPLEMENTATION
// Next, try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.9999991135824233	WITHOUT_CLASSIFICATION	8.046320430168423E-7	DESIGN	3.35312774793949E-8	DEFECT	2.3750166135708026E-8	TEST	1.3706206411931809E-8	IMPLEMENTATION	1.0797883674917175E-8	DOCUMENTATION
// Anywhere else we should look?	WITHOUT_CLASSIFICATION	0.9993356660472719	WITHOUT_CLASSIFICATION	6.384811022079591E-4	DESIGN	2.13529322387009E-5	DEFECT	4.053669559175747E-6	IMPLEMENTATION	2.3291901217408532E-7	DOCUMENTATION	2.1332971008365215E-7	TEST
// would need an IdentitySet for this!	WITHOUT_CLASSIFICATION	0.9990974801043649	WITHOUT_CLASSIFICATION	8.238044192392225E-4	DESIGN	4.778426404048869E-5	TEST	1.9653504279117328E-5	IMPLEMENTATION	1.0267589685883734E-5	DOCUMENTATION	1.0101183903211448E-6	DEFECT
//Arrays.asList doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.9999942621545027	WITHOUT_CLASSIFICATION	2.0510072916315154E-6	TEST	1.787321542080534E-6	IMPLEMENTATION	1.3003909483347945E-6	DESIGN	4.102976248439594E-7	DOCUMENTATION	1.888280903362876E-7	DEFECT
//faster?	WITHOUT_CLASSIFICATION	0.9911051899333138	WITHOUT_CLASSIFICATION	0.00885929592204236	DESIGN	1.5291672968434535E-5	TEST	1.3084738724166797E-5	IMPLEMENTATION	4.00294521615206E-6	DEFECT	3.1347877351612146E-6	DOCUMENTATION
// the name of a class	WITHOUT_CLASSIFICATION	0.9999646256806728	WITHOUT_CLASSIFICATION	3.5200116197274244E-5	DESIGN	7.62219305364296E-8	DOCUMENTATION	6.319028535984452E-8	TEST	2.6080579038170784E-8	IMPLEMENTATION	8.710335008593357E-9	DEFECT
// Its the listener class name	WITHOUT_CLASSIFICATION	0.999996562721271	WITHOUT_CLASSIFICATION	3.3747844077607636E-6	DESIGN	3.64845126816692E-8	IMPLEMENTATION	1.9173166454551684E-8	TEST	3.840555616369885E-9	DOCUMENTATION	2.996086361842088E-9	DEFECT
//allow 9,8,7,6,5,4,3,2,1	WITHOUT_CLASSIFICATION	0.9999253425019717	WITHOUT_CLASSIFICATION	3.654319164165866E-5	DEFECT	2.646466715091255E-5	DESIGN	9.28286851652374E-6	IMPLEMENTATION	1.2030704480264566E-6	DOCUMENTATION	1.1637002710255884E-6	TEST
// default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.9999992163326352	WITHOUT_CLASSIFICATION	4.268568658258946E-7	IMPLEMENTATION	2.8667139604995085E-7	DESIGN	6.817383367656152E-8	DOCUMENTATION	1.0786430106556664E-9	DEFECT	8.866263724253375E-10	TEST
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999661854937367	WITHOUT_CLASSIFICATION	1.7721650592529E-5	DESIGN	1.543699453783988E-5	IMPLEMENTATION	3.9559081497147495E-7	DEFECT	2.310799162595456E-7	DOCUMENTATION	2.9190401648539674E-8	TEST
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9844543732516567	WITHOUT_CLASSIFICATION	0.015307938799359266	DESIGN	2.289645881405146E-4	IMPLEMENTATION	4.672320422041948E-6	DEFECT	3.151939701884291E-6	DOCUMENTATION	8.991007195182327E-7	TEST
// first, lets determine whether to apply cglib or javassist based instrumentation...	WITHOUT_CLASSIFICATION	0.9999229187405946	WITHOUT_CLASSIFICATION	7.686088022421335E-5	DESIGN	7.674515374707118E-8	IMPLEMENTATION	7.2139569684975E-8	DOCUMENTATION	5.243807939857864E-8	DEFECT	1.905637829042073E-8	TEST
// Make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.9999983340698652	WITHOUT_CLASSIFICATION	1.5180821663949897E-6	DESIGN	8.936392749264179E-8	DEFECT	5.399102453466283E-8	IMPLEMENTATION	2.885314607850543E-9	DOCUMENTATION	1.6077019412480366E-9	TEST
//entirely optional!!	WITHOUT_CLASSIFICATION	0.9998132734663303	WITHOUT_CLASSIFICATION	6.366307280410803E-5	IMPLEMENTATION	6.243660690116827E-5	DESIGN	4.75115550479328E-5	DEFECT	1.1907396923265104E-5	DOCUMENTATION	1.2079019931233863E-6	TEST
// Its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.9998346949879152	WITHOUT_CLASSIFICATION	1.5984737177876672E-4	DESIGN	5.190122222099465E-6	IMPLEMENTATION	1.106538749754343E-7	DOCUMENTATION	1.0419246140682657E-7	DEFECT	5.2671747590887576E-8	TEST
//context.unbind(boundName);	WITHOUT_CLASSIFICATION	0.9995333145817046	WITHOUT_CLASSIFICATION	2.7284100997028877E-4	DESIGN	9.223584577419288E-5	IMPLEMENTATION	6.293648059844012E-5	DEFECT	2.513579325668133E-5	DOCUMENTATION	1.3536288695855826E-5	TEST
//readResolveObject	WITHOUT_CLASSIFICATION	0.9967877996122719	WITHOUT_CLASSIFICATION	0.0032002135716054396	DESIGN	3.7670042732733695E-6	DOCUMENTATION	3.418463501856559E-6	TEST	2.6370523286300227E-6	DEFECT	2.1642960189526824E-6	IMPLEMENTATION
//cfg.setProperty("hibernate.show_sql", "true");	WITHOUT_CLASSIFICATION	0.9999978558059958	WITHOUT_CLASSIFICATION	1.3463134205129567E-6	DEFECT	7.165693753022222E-7	DESIGN	3.729645855664304E-8	IMPLEMENTATION	3.142717774964121E-8	TEST	1.258757226972123E-8	DOCUMENTATION
// Defensive, convenience methods	WITHOUT_CLASSIFICATION	0.9999891282197911	WITHOUT_CLASSIFICATION	1.0155011322207928E-5	IMPLEMENTATION	3.395906984727975E-7	DESIGN	2.8186843142621125E-7	DOCUMENTATION	6.041838843212309E-8	TEST	3.489136836871253E-8	DEFECT
// Create the SessionFactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.999982810422335	WITHOUT_CLASSIFICATION	1.6639726726899678E-5	DESIGN	2.1352673586842667E-7	DEFECT	2.0335902480352433E-7	IMPLEMENTATION	7.628658397039395E-8	TEST	5.667859340104672E-8	DOCUMENTATION
// Make sure you log the exception, as it might be swallowed	WITHOUT_CLASSIFICATION	0.999943933003927	WITHOUT_CLASSIFICATION	5.385961668571841E-5	DEFECT	1.7150951438106533E-6	DESIGN	4.730806587881904E-7	IMPLEMENTATION	1.496575301995968E-8	TEST	4.237831719113456E-9	DOCUMENTATION
// Begin unit of work	WITHOUT_CLASSIFICATION	0.9987831726749351	WITHOUT_CLASSIFICATION	0.0011686656035522912	DEFECT	3.135800212193682E-5	DESIGN	8.498887964284107E-6	DOCUMENTATION	6.398550597373799E-6	IMPLEMENTATION	1.9062808292008718E-6	TEST
// Write HTML header	WITHOUT_CLASSIFICATION	0.9999916530556094	WITHOUT_CLASSIFICATION	4.616399801519025E-6	DESIGN	3.1996489632932827E-6	IMPLEMENTATION	3.4786623808780917E-7	DEFECT	9.796387740200164E-8	DOCUMENTATION	8.506551022982443E-8	TEST
// Handle actions	WITHOUT_CLASSIFICATION	0.9999000469448096	WITHOUT_CLASSIFICATION	8.24142350747168E-5	DESIGN	1.7117838772930613E-5	IMPLEMENTATION	2.6173300638508225E-7	DOCUMENTATION	9.860112498356321E-8	DEFECT	6.064721151332669E-8	TEST
// Print page	WITHOUT_CLASSIFICATION	0.9999936954420435	WITHOUT_CLASSIFICATION	4.1566436582140926E-6	IMPLEMENTATION	1.1931406338345216E-6	DESIGN	5.0248829685257E-7	DEFECT	2.7854315988222455E-7	DOCUMENTATION	1.7374220768112082E-7	TEST
// Write HTML footer	WITHOUT_CLASSIFICATION	0.9999963148807888	WITHOUT_CLASSIFICATION	2.270621951737957E-6	DESIGN	1.2380896722782955E-6	DEFECT	1.1862155038670574E-7	IMPLEMENTATION	3.121951419760009E-8	TEST	2.6566522547475946E-8	DOCUMENTATION
// End unit of work	WITHOUT_CLASSIFICATION	0.9998011815282257	WITHOUT_CLASSIFICATION	1.8768883480050586E-4	DEFECT	8.02875570501819E-6	DESIGN	1.9868302184724766E-6	IMPLEMENTATION	5.858881708164921E-7	DOCUMENTATION	5.281628794249656E-7	TEST
// Start the session to be used for this request	WITHOUT_CLASSIFICATION	0.9998713882099493	WITHOUT_CLASSIFICATION	1.2827755407112315E-4	DESIGN	1.743163982383421E-7	TEST	8.330468853149697E-8	DEFECT	5.026577152957386E-8	IMPLEMENTATION	2.634912138320773E-8	DOCUMENTATION
// make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.9999860998051533	WITHOUT_CLASSIFICATION	1.2937792915063833E-5	DESIGN	4.130744673552799E-7	DEFECT	2.2058839066737493E-7	DOCUMENTATION	1.9581502233607118E-7	TEST	1.329240513015332E-7	IMPLEMENTATION
// pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.999999720149421	WITHOUT_CLASSIFICATION	1.2528569131677732E-7	IMPLEMENTATION	6.130193583441675E-8	DEFECT	5.6109302201900745E-8	DESIGN	2.7162319013771235E-8	TEST	9.991330638785928E-9	DOCUMENTATION
// remove session from "current context"	WITHOUT_CLASSIFICATION	0.9998835194843235	WITHOUT_CLASSIFICATION	7.967042033603462E-5	DESIGN	3.5183242029689535E-5	DEFECT	1.17766346313153E-6	DOCUMENTATION	3.7026548172483125E-7	IMPLEMENTATION	7.892436580699009E-8	TEST
// Eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.9996852841404423	WITHOUT_CLASSIFICATION	2.905536975052941E-4	IMPLEMENTATION	2.2814883178574922E-5	DESIGN	8.738782124838346E-7	DEFECT	3.5442322886184674E-7	DOCUMENTATION	1.189774324502359E-7	TEST
// If we want to handle it bidirectional and detached, we also need to load this // collection with an eager outer-join fetch, this time with Criteria and not HQL:	WITHOUT_CLASSIFICATION	0.9999972775693865	WITHOUT_CLASSIFICATION	1.4502117325584834E-6	IMPLEMENTATION	9.385729312312064E-7	DESIGN	1.7205754637639893E-7	DEFECT	1.514500217830046E-7	TEST	1.0138381424734633E-8	DOCUMENTATION
/*        Event anEvent = (Event) session                .createCriteria(Event.class).setFetchMode("participants", FetchMode.JOIN)                .add( Expression.eq("id", eventId) )                .uniqueResult(); // Eager fetch the colleciton so we can use it detached        */	WITHOUT_CLASSIFICATION	0.9999999912262999	WITHOUT_CLASSIFICATION	6.403638667611737E-9	DESIGN	2.069835640200356E-9	IMPLEMENTATION	2.202162761154879E-10	DEFECT	6.181568586769364E-11	TEST	1.8193872621791676E-11	DOCUMENTATION
// End of first unit of work	WITHOUT_CLASSIFICATION	0.9999679526211069	WITHOUT_CLASSIFICATION	2.4955533417158264E-5	DEFECT	3.753555452388969E-6	DESIGN	1.8921952886844593E-6	IMPLEMENTATION	1.1477665105586423E-6	TEST	2.9832822430233667E-7	DOCUMENTATION
// or bidirectional safety method, setting both sides: aPerson.addToEvent(anEvent);	WITHOUT_CLASSIFICATION	0.998746461484356	WITHOUT_CLASSIFICATION	0.0012441659501084702	IMPLEMENTATION	4.743989241391053E-6	DEFECT	4.176888374045872E-6	DESIGN	2.952024362923317E-7	DOCUMENTATION	1.5648548362344226E-7	TEST
// Begin second unit of work	WITHOUT_CLASSIFICATION	0.9995992707184175	WITHOUT_CLASSIFICATION	2.9379161448161555E-4	DEFECT	9.256816378987287E-5	DESIGN	9.718690879623207E-6	DOCUMENTATION	3.907764868027758E-6	IMPLEMENTATION	7.430475633485826E-7	TEST
// Reattachment of aPerson	WITHOUT_CLASSIFICATION	0.9999739531198335	WITHOUT_CLASSIFICATION	1.1062640718026991E-5	IMPLEMENTATION	8.814286086076553E-6	DESIGN	3.963581280459112E-6	DEFECT	1.9142772317185827E-6	DOCUMENTATION	2.9209485021118097E-7	TEST
// The getEmailAddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.9994735802160873	WITHOUT_CLASSIFICATION	5.250070565526321E-4	DEFECT	1.0142706220663529E-6	IMPLEMENTATION	2.236304139766883E-7	DESIGN	1.4311850801029978E-7	TEST	3.1707815950699846E-8	DOCUMENTATION
// We need our tm, so get it now and avoid doing other work // if there is a problem	WITHOUT_CLASSIFICATION	0.9999974525201302	WITHOUT_CLASSIFICATION	1.933942916206101E-6	DESIGN	4.6698084111864035E-7	TEST	1.4506843926613965E-7	DEFECT	9.234430384923557E-10	DOCUMENTATION	5.642301941360118E-10	IMPLEMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999980332130214	WITHOUT_CLASSIFICATION	1.3211311044841589E-6	IMPLEMENTATION	5.983677729944101E-7	DEFECT	2.7571100644365493E-8	DESIGN	1.056887625339654E-8	TEST	9.148124278841129E-9	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999980332130214	WITHOUT_CLASSIFICATION	1.3211311044841589E-6	IMPLEMENTATION	5.983677729944101E-7	DEFECT	2.7571100644365493E-8	DESIGN	1.056887625339654E-8	TEST	9.148124278841129E-9	DOCUMENTATION
// JBC put a version in the node when it created as part of // some internal operation. We are always newer, but if // the JBC version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.9999999093472781	WITHOUT_CLASSIFICATION	3.9789134769722016E-8	TEST	2.333629884716757E-8	DEFECT	1.557916432360294E-8	IMPLEMENTATION	1.046628842725588E-8	DESIGN	1.4818355179196735E-9	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for properties with //                     hibernate-specific overrides to detect and warn about conflicting //                     declarations	WITHOUT_CLASSIFICATION	0.9997902348744617	WITHOUT_CLASSIFICATION	2.0756590680565844E-4	DESIGN	1.2191371952136033E-6	TEST	6.323962962852716E-7	IMPLEMENTATION	2.622835916579998E-7	DOCUMENTATION	8.54016495490755E-8	DEFECT
// Not null if the Isolation level has been specified in the configuration file. // Otherwise, it is left to the Driver's default value.	WITHOUT_CLASSIFICATION	0.9999994491258112	WITHOUT_CLASSIFICATION	4.3156075136864246E-7	DESIGN	1.1262031076674126E-7	IMPLEMENTATION	3.2593579736647944E-9	DOCUMENTATION	2.536250374142352E-9	DEFECT	8.975182912365183E-10	TEST
// Configured outside of Hibernate (i.e. Servlet container, or Java Bean Container // already has Proxool pools running, and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.9764596517933986	WITHOUT_CLASSIFICATION	0.023540191818814567	DESIGN	8.672853046690538E-8	DEFECT	4.452151703864683E-8	TEST	2.4185342231003266E-8	DOCUMENTATION	9.523971482684585E-10	IMPLEMENTATION
// If you're closing down the ConnectionProvider chances are an // is not a real big deal, just warn	WITHOUT_CLASSIFICATION	0.9999976429938053	WITHOUT_CLASSIFICATION	2.3498599799707624E-6	DEFECT	2.717403354352454E-9	IMPLEMENTATION	2.30097739595645E-9	DESIGN	1.928641193144767E-9	TEST	1.991927528121668E-10	DOCUMENTATION
// (AS is always optional, for consistency with SQL/OQL)	WITHOUT_CLASSIFICATION	0.9998965555578878	WITHOUT_CLASSIFICATION	5.3088071196833196E-5	IMPLEMENTATION	4.8498372008802454E-5	DESIGN	8.437375582940029E-7	TEST	6.52616788134188E-7	DEFECT	3.6164456006535947E-7	DOCUMENTATION
// process the "new" HQL style where aliases are assigned // _after_ the class name or path expression ie. using // the AS construction	WITHOUT_CLASSIFICATION	0.9999998552484115	WITHOUT_CLASSIFICATION	1.444538134993088E-7	DESIGN	1.568777496098048E-10	DEFECT	1.0776032686215341E-10	DOCUMENTATION	3.109028872406262E-11	TEST	2.046685302085052E-12	IMPLEMENTATION
// the loaded owner will be set to null after the collection is removed, // so capture its value as the affected owner so it is accessible to // both pre- and post- events	WITHOUT_CLASSIFICATION	0.9999999983418066	WITHOUT_CLASSIFICATION	1.4082456607272767E-9	DESIGN	1.9085062090011955E-10	DEFECT	5.760908796368568E-11	IMPLEMENTATION	1.3905771640815325E-12	TEST	9.745773215445026E-14	DOCUMENTATION
// is a primitive type // invokespecial	WITHOUT_CLASSIFICATION	0.9999999889819745	WITHOUT_CLASSIFICATION	7.134399291499796E-9	DESIGN	1.6718013804662785E-9	DEFECT	1.0968309273730808E-9	TEST	8.765606224348358E-10	DOCUMENTATION	2.384331667317237E-10	IMPLEMENTATION
// array of primitive type // do nothing	WITHOUT_CLASSIFICATION	0.9999999479661555	WITHOUT_CLASSIFICATION	4.204266033656257E-8	DESIGN	4.140443730589033E-9	DOCUMENTATION	3.854643193389592E-9	DEFECT	1.5943406121707959E-9	TEST	4.017567850890888E-10	IMPLEMENTATION
// handle a path expression or class name that // appears at the start, in the "new" HQL // style or an alias that appears at the start // in the "old" HQL style	WITHOUT_CLASSIFICATION	0.9995882839996327	WITHOUT_CLASSIFICATION	3.9275463252389284E-4	DESIGN	1.8875797733369872E-5	DEFECT	6.192805324142354E-8	IMPLEMENTATION	1.509705520060605E-8	DOCUMENTATION	8.545001430882054E-9	TEST
//handle <=, >=, !=, is not, not between, not in	WITHOUT_CLASSIFICATION	0.9994164341431498	WITHOUT_CLASSIFICATION	5.325871600655105E-4	DESIGN	3.471274085807475E-5	DEFECT	9.068922897387646E-6	IMPLEMENTATION	5.244438320881458E-6	TEST	1.952594708341406E-6	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999999200613275	WITHOUT_CLASSIFICATION	7.319643856349563E-8	DEFECT	6.555257172960173E-9	IMPLEMENTATION	1.0701867974943887E-10	TEST	7.019452655356732E-11	DOCUMENTATION	9.763556664774212E-12	DESIGN
// transfer an explicitly defined entity name // handle the lazy attribute	WITHOUT_CLASSIFICATION	0.9999982838516631	WITHOUT_CLASSIFICATION	1.2906787506422917E-6	DESIGN	4.1194815878386337E-7	IMPLEMENTATION	6.649424805407556E-9	TEST	6.3558769166522265E-9	DOCUMENTATION	5.161257321160991E-10	DEFECT
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.999979864761141	WITHOUT_CLASSIFICATION	1.5383600825069535E-5	DESIGN	3.3888910410139856E-6	IMPLEMENTATION	6.904557731104376E-7	DEFECT	3.443417810879129E-7	TEST	3.2794943869619543E-7	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.999979864761141	WITHOUT_CLASSIFICATION	1.5383600825069535E-5	DESIGN	3.3888910410139856E-6	IMPLEMENTATION	6.904557731104376E-7	DEFECT	3.443417810879129E-7	TEST	3.2794943869619543E-7	DOCUMENTATION
// get meta's from // <joined-subclass>	WITHOUT_CLASSIFICATION	0.9999989545339115	WITHOUT_CLASSIFICATION	1.031103445222579E-6	DESIGN	1.3417136679146649E-8	DEFECT	6.89530028976769E-10	TEST	2.2398241910068002E-10	DOCUMENTATION	3.199415497830563E-11	IMPLEMENTATION
// parameters on the property mapping should // override parameters in the typedef	WITHOUT_CLASSIFICATION	0.9999425043466236	WITHOUT_CLASSIFICATION	4.7309049870725324E-5	DEFECT	7.555945713168629E-6	DESIGN	2.4316809864918655E-6	IMPLEMENTATION	1.796794399283264E-7	TEST	1.9297366238741366E-8	DOCUMENTATION
//fetch="join" overrides default laziness //fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.9999998590656767	WITHOUT_CLASSIFICATION	8.593109699343062E-8	IMPLEMENTATION	4.144025846036688E-8	DESIGN	7.89504173240413E-9	DEFECT	3.2570442931556114E-9	TEST	2.4108817403887903E-9	DOCUMENTATION
//NOTE SPECIAL CASE: // default to join and non-lazy for the "second join" // of the many-to-many	WITHOUT_CLASSIFICATION	0.9999985353949131	WITHOUT_CLASSIFICATION	1.1568692646286935E-6	DESIGN	2.3427702415049463E-7	DOCUMENTATION	4.803644064229992E-8	IMPLEMENTATION	2.3934656967254135E-8	DEFECT	1.4877006478086442E-9	TEST
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999968882677408	WITHOUT_CLASSIFICATION	2.4913517986113044E-6	DESIGN	3.2482945660807713E-7	DOCUMENTATION	1.3070449479350422E-7	IMPLEMENTATION	1.0541059347556359E-7	DEFECT	5.943591578161833E-8	TEST
// state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999995787438713	WITHOUT_CLASSIFICATION	1.855012080948104E-6	IMPLEMENTATION	1.304634669723279E-6	DESIGN	5.822263316258621E-7	DEFECT	2.671058904106902E-7	TEST	2.0358231430096714E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
//element //index -> id	WITHOUT_CLASSIFICATION	0.9999505728602809	WITHOUT_CLASSIFICATION	3.077244070372107E-5	IMPLEMENTATION	7.584489709004693E-6	DESIGN	6.807405361358056E-6	DEFECT	3.041739231202424E-6	DOCUMENTATION	1.2210647138184067E-6	TEST
// note that it might be better to iterate the snapshot but this is safe, // assuming the user implements equals() properly, as required by the Set // contract!	WITHOUT_CLASSIFICATION	0.7930094273721913	WITHOUT_CLASSIFICATION	0.16812289565821636	DEFECT	0.03559114584784838	IMPLEMENTATION	0.0031156438762872385	DESIGN	1.429604535870709E-4	TEST	1.792679186972162E-5	DOCUMENTATION
// collections detect changes made via their public interface and mark // themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.9999998594199447	WITHOUT_CLASSIFICATION	7.399292741488557E-8	DESIGN	5.813590650711295E-8	IMPLEMENTATION	4.178469449052153E-9	DOCUMENTATION	3.9546626950233635E-9	DEFECT	3.1808919049130247E-10	TEST
// essentially, if the real session is closed allow any // method call to pass through since the real session // will complain by throwing an appropriate exception; // NOTE that allowing close() above has the same basic effect, //   but we capture that there simply to perform the unbind...	WITHOUT_CLASSIFICATION	0.9999969003818489	WITHOUT_CLASSIFICATION	2.0278033126868836E-6	DEFECT	6.588379023730428E-7	IMPLEMENTATION	3.8423594000341264E-7	DESIGN	2.8142052997600424E-8	TEST	5.98943043794403E-10	DOCUMENTATION
// The default SQLExceptionConverter for all dialects is based on SQLState // since SQLErrorCode is extremely vendor-specific.  Specific Dialects // may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.9999996756003445	WITHOUT_CLASSIFICATION	3.047171659516953E-7	DESIGN	1.5497535752471306E-8	DEFECT	3.7724682480104695E-9	IMPLEMENTATION	2.434229701974488E-10	DOCUMENTATION	1.6906266751791492E-10	TEST
//only necessary for postgre < 7.4 //http://anoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.9999983680492592	WITHOUT_CLASSIFICATION	7.975530935620017E-7	DEFECT	4.013233219256362E-7	DESIGN	2.1491539109002407E-7	DOCUMENTATION	1.4865111138404548E-7	IMPLEMENTATION	6.950782289524946E-8	TEST
// select topic, syntax from information_schema.help // where section like 'Function%' order by section, topic // // see also ->  http://www.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.9999991506286255	WITHOUT_CLASSIFICATION	8.365467519809935E-7	DEFECT	6.71787907986166E-9	DOCUMENTATION	4.9698710588888525E-9	DESIGN	9.78556195216909E-10	IMPLEMENTATION	1.5831615305479063E-10	TEST
// registerColumnType(Types.VARBINARY, "CHARACTER($l)"); // registerColumnType(Types.BLOB, "CHARACTER($l)" );  // For use prior to CP 11.0 // registerColumnType(Types.CLOB, "CHARACTER($l)" );	WITHOUT_CLASSIFICATION	0.9999817722435895	WITHOUT_CLASSIFICATION	1.578438018642262E-5	IMPLEMENTATION	2.203849833411648E-6	DESIGN	1.1536453453417045E-7	DEFECT	6.300069568148763E-8	TEST	6.116116036897413E-8	DOCUMENTATION
//the BLOB type requires a size arguement - this defaults to //bytes - no arg defaults to 1 whole byte! //other argument mods include K - kilobyte, M - megabyte, G - gigabyte. //refer to the PBdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.9900049816490539	WITHOUT_CLASSIFICATION	0.009958781850713954	DESIGN	2.7698668256647848E-5	DEFECT	7.147050059704801E-6	DOCUMENTATION	1.2264649870220213E-6	TEST	1.6431692885634282E-7	IMPLEMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9992310046230294	WITHOUT_CLASSIFICATION	7.345575420962202E-4	DESIGN	3.418338437327327E-5	DEFECT	1.6683743647150589E-7	TEST	4.565519078304309E-8	DOCUMENTATION	4.19578739776167E-8	IMPLEMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.8891624906575829	WITHOUT_CLASSIFICATION	0.11083261499459797	DESIGN	3.7732506136664902E-6	DEFECT	5.645776587601302E-7	TEST	5.425707754498328E-7	IMPLEMENTATION	1.3948771214097066E-8	DOCUMENTATION
// add the comment // nest the main query in an outer select // add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9997703286913507	WITHOUT_CLASSIFICATION	2.201876104607607E-4	DESIGN	8.298534549186461E-6	TEST	7.827234079833765E-7	DOCUMENTATION	3.536156970571129E-7	IMPLEMENTATION	4.882453419706929E-8	DEFECT
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// Note: For object <-> SQL datatype mappings see: //	WITHOUT_CLASSIFICATION	0.9999481066463997	WITHOUT_CLASSIFICATION	5.003876618970714E-5	DESIGN	1.6577511934289365E-6	DEFECT	8.67630715419118E-8	IMPLEMENTATION	6.006930908068827E-8	TEST	5.000383656332764E-8	DOCUMENTATION
// TRIM(end_keyword string-expression-1 FROM string-expression-2) // use Hibernate implementation "From" is one of the parameters they pass in position ?3 //registerFunction( "trim", new SQLFunctionTemplate(Hibernate.STRING, "trim(?1 ?2 from ?3)") );	WITHOUT_CLASSIFICATION	0.9999999076144122	WITHOUT_CLASSIFICATION	4.460138322761725E-8	DESIGN	4.147787871041149E-8	IMPLEMENTATION	6.287345541591619E-9	DEFECT	1.499034974667222E-11	DOCUMENTATION	3.990148870461284E-12	TEST
// Whether this dialect has an Identity clause added to the data type or a completely seperate identity // data type	WITHOUT_CLASSIFICATION	0.9999998901187829	WITHOUT_CLASSIFICATION	1.095693521766245E-7	DESIGN	2.3013964620046413E-10	IMPLEMENTATION	4.434466738655656E-11	DOCUMENTATION	2.004828493725477E-11	TEST	1.733228774063558E-11	DEFECT
// According to both the ANSI-SQL and JPA specs, trim takes a variable number of parameters between 1 and 4. // at least one paramer (trimSource) is required.  From the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If <trim specification> is omitted, BOTH is assumed. // If <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999998614964524	WITHOUT_CLASSIFICATION	1.1773197918382173E-7	DEFECT	7.198196812988884E-9	IMPLEMENTATION	6.305746395921635E-9	DESIGN	5.290927639933899E-9	DOCUMENTATION	1.9766974192673315E-9	TEST
/////////////////////////////////////////////////////////////////////// // Prepare persisters and link them up with their cache // region/access-strategy	WITHOUT_CLASSIFICATION	0.9999868845729727	WITHOUT_CLASSIFICATION	1.3082271171972348E-5	DESIGN	1.713309426540925E-8	DEFECT	7.345267027519227E-9	IMPLEMENTATION	4.520733449966784E-9	DOCUMENTATION	4.156760708914451E-9	TEST
//Named Queries:	WITHOUT_CLASSIFICATION	0.9998967028358653	WITHOUT_CLASSIFICATION	9.227349400874968E-5	DESIGN	6.718131453982259E-6	IMPLEMENTATION	3.424542646584891E-6	TEST	5.233866232816344E-7	DEFECT	3.576094020334134E-7	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9967515622685336	WITHOUT_CLASSIFICATION	0.002404571309214047	DESIGN	6.497524449238142E-4	DEFECT	1.8622960457457584E-4	TEST	4.650465366596537E-6	IMPLEMENTATION	3.233907387263326E-6	DOCUMENTATION
// does not handle arrays (thats ok, cos they can't be lazy) // or newly instantiated collections, so we can do the cast	WITHOUT_CLASSIFICATION	0.9993772488777175	WITHOUT_CLASSIFICATION	4.2855195951335207E-4	DESIGN	1.918856940073502E-4	DEFECT	1.4351435175632056E-6	IMPLEMENTATION	4.679638314090348E-7	TEST	4.1036141285733505E-7	DOCUMENTATION
// collection deletions are a special case since update() can add // deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.9999908166420411	WITHOUT_CLASSIFICATION	6.0711507270889496E-6	DEFECT	3.1117529443441922E-6	IMPLEMENTATION	2.731208978056336E-10	TEST	1.792669360751997E-10	DOCUMENTATION	1.8995107064778718E-12	DESIGN
// we can do the cast since orphan-delete does not apply to: // 1. newly instantiated collections // 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.989025364045289	WITHOUT_CLASSIFICATION	0.004437133405941873	DEFECT	0.004157627548517332	DESIGN	0.0023719738934089604	IMPLEMENTATION	5.431760718549454E-6	DOCUMENTATION	2.469346124249632E-6	TEST
// if the natural-id is marked as non-mutable, it is not retrieved during a // normal database-snapshot operation...	WITHOUT_CLASSIFICATION	0.9996320938830683	WITHOUT_CLASSIFICATION	3.625927680738469E-4	IMPLEMENTATION	3.234987689072283E-6	DEFECT	1.2360812140820895E-6	TEST	8.40094424524255E-7	DESIGN	2.1855301755089097E-9	DOCUMENTATION
// watch out for a case where old is still referenced // somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9999710592071839	WITHOUT_CLASSIFICATION	2.7513618619870897E-5	DESIGN	1.2173778841917926E-6	DEFECT	1.595747682850782E-7	DOCUMENTATION	3.700045181744104E-8	IMPLEMENTATION	1.3221091955978478E-8	TEST
//slice, to get the columns for this component //property	WITHOUT_CLASSIFICATION	0.9941409963211245	WITHOUT_CLASSIFICATION	0.0058577022131227514	DESIGN	5.878437267047935E-7	TEST	3.3581759627198865E-7	DEFECT	2.8071903869339943E-7	DOCUMENTATION	9.7085391088971E-8	IMPLEMENTATION
//int result = 17; //result = 37 * result + type.hashCode(); //result = 37 * result + ( value==null ? 0 : value.hashCode() ); //return result;	WITHOUT_CLASSIFICATION	0.9999991782843638	WITHOUT_CLASSIFICATION	6.941113822720972E-7	DEFECT	1.0195179784101698E-7	DESIGN	2.3662571184481427E-8	IMPLEMENTATION	1.7489390026696597E-9	DOCUMENTATION	2.4094587270667826E-10	TEST
// The CollectionEntry.isReached() stuff is just to detect any silly users   // who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.9999899386602209	WITHOUT_CLASSIFICATION	9.950473058008393E-6	DESIGN	1.0948505560468719E-7	DEFECT	8.028595432975951E-10	DOCUMENTATION	4.4960276833121457E-10	IMPLEMENTATION	1.292030714537047E-10	TEST
// detached collection wrappers that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.999990172707874	WITHOUT_CLASSIFICATION	6.4813017707319715E-6	DESIGN	2.1913493028163615E-6	IMPLEMENTATION	1.1487688506175544E-6	DEFECT	4.669709101388216E-9	TEST	1.20249265894599E-9	DOCUMENTATION
// The unique property value represented here may or may not be // serializable, so we do an explicit check here in order to generate // a better error message	WITHOUT_CLASSIFICATION	0.7981641544464947	WITHOUT_CLASSIFICATION	0.20073186591144385	DESIGN	0.0010759111180966043	DEFECT	1.0039321891038142E-5	DOCUMENTATION	9.468328205173611E-6	TEST	8.56087386874214E-6	IMPLEMENTATION
// if the version of a newly instantiated object is not the same // as the version seed value, use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999882391247527	WITHOUT_CLASSIFICATION	6.862236327350313E-6	DESIGN	4.8017119906795786E-6	DEFECT	8.486855841736019E-8	IMPLEMENTATION	7.318407601586497E-9	DOCUMENTATION	4.739963341767436E-9	TEST
// ie. we never have to null out a reference to // an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999992204062038	WITHOUT_CLASSIFICATION	7.619548980621235E-7	DESIGN	9.562649959490621E-9	DEFECT	5.2074139588178234E-9	IMPLEMENTATION	1.8154244627292695E-9	DOCUMENTATION	1.0534096555178982E-9	TEST
// ignore this row, the collection is in process of // being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.9999950428628036	WITHOUT_CLASSIFICATION	4.5007814202682385E-6	DESIGN	4.267720559411438E-7	DEFECT	2.7825358696780507E-8	TEST	1.5862247285137249E-9	DOCUMENTATION	1.721367065192523E-10	IMPLEMENTATION
// Entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // 	WITHOUT_CLASSIFICATION	0.9999983214217802	WITHOUT_CLASSIFICATION	1.4724116090670733E-6	DEFECT	7.721889917794883E-8	TEST	5.230872835890122E-8	DESIGN	5.212524384359171E-8	IMPLEMENTATION	2.4513739356938453E-8	DOCUMENTATION
// should be ok performance-wise to generate new delegate instances for each // request since these are locally stack-scoped.  Besides, it makes the code // much easier to read than the old TransactionHelper stuff...	WITHOUT_CLASSIFICATION	0.9911165583605968	WITHOUT_CLASSIFICATION	0.008883370100135617	DESIGN	3.8316384679905506E-8	DEFECT	1.9778874742913488E-8	TEST	9.174573493730051E-9	IMPLEMENTATION	4.269434744375309E-9	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9999312929640166	WITHOUT_CLASSIFICATION	2.8008888381016727E-5	DESIGN	2.6629755768476026E-5	IMPLEMENTATION	1.3677239676721844E-5	DEFECT	2.8320267626122095E-7	DOCUMENTATION	1.079494808521594E-7	TEST
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9999312929640166	WITHOUT_CLASSIFICATION	2.8008888381016727E-5	DESIGN	2.6629755768476026E-5	IMPLEMENTATION	1.3677239676721844E-5	DEFECT	2.8320267626122095E-7	DOCUMENTATION	1.079494808521594E-7	TEST
// wrap up any new collections directly referenced by the object // or its components	WITHOUT_CLASSIFICATION	0.9999998534100445	WITHOUT_CLASSIFICATION	1.4376852314526722E-7	DESIGN	1.5650684200793875E-9	DEFECT	7.460243215857546E-10	IMPLEMENTATION	3.646056223574081E-10	TEST	1.4573407763195657E-10	DOCUMENTATION
// remove any snapshot, not really for memory management purposes, but // rather because it might now be stale, and there is no longer any  // EntityEntry to take precedence // This is now handled by removeEntity() //session.getPersistenceContext().removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9998673009638716	WITHOUT_CLASSIFICATION	9.871396466347998E-5	DEFECT	3.3925881372994687E-5	DESIGN	3.582740347372542E-8	DOCUMENTATION	2.0226239806774946E-8	IMPLEMENTATION	3.136448526469707E-9	TEST
// skip this check for composite-ids relating to dom4j entity-mode; // alternatively, we could add a check to make sure the incoming id value is // an instance of Element...	WITHOUT_CLASSIFICATION	0.8993215695040065	WITHOUT_CLASSIFICATION	0.10056738379799127	DESIGN	1.069562651884316E-4	IMPLEMENTATION	2.8807082457726723E-6	DEFECT	1.0356560088923013E-6	DOCUMENTATION	1.7406855909212366E-7	TEST
// upgrade the lock if necessary: //lock(result, lockMode);	WITHOUT_CLASSIFICATION	0.9999463675730317	WITHOUT_CLASSIFICATION	3.381064028140936E-5	DESIGN	1.0328273436895691E-5	IMPLEMENTATION	9.124978926332241E-6	DEFECT	2.4614868833758257E-7	DOCUMENTATION	1.2238563528502198E-7	TEST
// now, any collections that are initialized // inside this block do not get updated - they // are ignored until the next flush	WITHOUT_CLASSIFICATION	0.9999480914983735	WITHOUT_CLASSIFICATION	2.691758324562688E-5	IMPLEMENTATION	2.141705247479576E-5	DESIGN	3.3708709756205457E-6	DEFECT	1.6385480257085976E-7	TEST	3.914012799097278E-8	DOCUMENTATION
//we must clone embedded composite identifiers, or  //we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.9999955130108081	WITHOUT_CLASSIFICATION	4.22671136114112E-6	DESIGN	1.5310402481249041E-7	IMPLEMENTATION	1.043284700297169E-7	DEFECT	2.270215998520302E-9	DOCUMENTATION	5.751199064585521E-10	TEST
// Sub-insertions should occur before containing insertion so // Try to do the callback now	WITHOUT_CLASSIFICATION	0.9998449757744623	WITHOUT_CLASSIFICATION	1.0225429791812402E-4	DESIGN	2.730454872727382E-5	IMPLEMENTATION	2.4378174325687667E-5	DEFECT	9.168971262322037E-7	DOCUMENTATION	1.7030744048447698E-7	TEST
//the entity is not associated with the session, so //try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.9999910961431577	WITHOUT_CLASSIFICATION	8.19057179012539E-6	DESIGN	3.955614591166788E-7	DEFECT	1.4294434120528643E-7	IMPLEMENTATION	1.0524950815353835E-7	TEST	6.9529743764597E-8	DOCUMENTATION
//scan the query string for class names appearing in the from clause and replace //with all persistent implementors of the class/interface, returning multiple //query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.9771255824736184	DESIGN	0.017279883944208693	WITHOUT_CLASSIFICATION	0.004896055979280051	DEFECT	6.973971370007078E-4	IMPLEMENTATION	9.189828379287578E-7	DOCUMENTATION	1.6148305426199994E-7	TEST
// save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996672591325	WITHOUT_CLASSIFICATION	1.4446179882253614E-7	IMPLEMENTATION	1.2278979821697017E-7	DEFECT	5.0401495445238665E-8	DESIGN	8.980801948349581E-9	TEST	6.1069730627235435E-9	DOCUMENTATION
// evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996763467617	WITHOUT_CLASSIFICATION	1.9551562439256978E-7	DESIGN	6.979142975412005E-8	IMPLEMENTATION	4.358310076016164E-8	DEFECT	1.0141989491037242E-8	TEST	4.6210939819503415E-9	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9937452647789236	WITHOUT_CLASSIFICATION	0.006250065646890552	DESIGN	3.0083062886562168E-6	TEST	1.42799819421695E-6	DEFECT	1.5573930508145938E-7	IMPLEMENTATION	7.753039807232822E-8	DOCUMENTATION
//if it is an uninitialized proxy, pointing //with this session, then when it is accessed, //the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.9999915021269651	WITHOUT_CLASSIFICATION	3.786325836429975E-6	DESIGN	2.8082140666486697E-6	IMPLEMENTATION	9.100816495738414E-7	DEFECT	7.372432698815265E-7	TEST	2.560082124587569E-7	DOCUMENTATION
// Generate an explicit join for the root dot node.   The implied joins will be collected and passed up // to the root dot node.	WITHOUT_CLASSIFICATION	0.9999999957017991	WITHOUT_CLASSIFICATION	3.7493277355687444E-9	DESIGN	3.222193243018048E-10	TEST	2.0945320163894043E-10	IMPLEMENTATION	1.2958380916687083E-11	DOCUMENTATION	4.242304990367977E-12	DEFECT
// A session is considered to contain an entity only if the entity has // an entry in the session's persistence context and the entry reports // that the entity has not been removed	WITHOUT_CLASSIFICATION	0.9994806856614772	WITHOUT_CLASSIFICATION	4.993346559898803E-4	DESIGN	1.9240017861178335E-5	IMPLEMENTATION	6.450142278945963E-7	DEFECT	7.327953257214566E-8	TEST	2.1370911187838623E-8	DOCUMENTATION
// Does the collection referenced by this FromElement // specify an order-by attribute?  If so, attach it to // the query's order-by	WITHOUT_CLASSIFICATION	0.9934564937979381	WITHOUT_CLASSIFICATION	0.005513484588526753	DESIGN	8.876514366110669E-4	IMPLEMENTATION	8.552144928083184E-5	DOCUMENTATION	4.357450114364345E-5	DEFECT	1.3274226499545148E-5	TEST
// ... and the token could be an identifer and the error is // a mismatched token error ...	WITHOUT_CLASSIFICATION	0.9999335231315768	WITHOUT_CLASSIFICATION	6.610936067654322E-5	DESIGN	3.402261685531727E-7	DEFECT	1.0308457098863755E-8	IMPLEMENTATION	8.616473143611787E-9	TEST	8.35664792404853E-9	DOCUMENTATION
// If a where clause was specified in the update/delete query, use it to limit the // returned ids here...	WITHOUT_CLASSIFICATION	0.9999999915603239	WITHOUT_CLASSIFICATION	3.931235684932174E-9	IMPLEMENTATION	3.4905052148145606E-9	DESIGN	9.402127507742818E-10	DEFECT	7.242782483415595E-11	DOCUMENTATION	5.294480143170235E-12	TEST
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// Default implementation: // If this node has a data type, and that data type is not an association, then this is scalar.	WITHOUT_CLASSIFICATION	0.9999135319916022	WITHOUT_CLASSIFICATION	8.14823014707146E-5	DESIGN	2.972061557682255E-6	DEFECT	1.729645114372972E-6	IMPLEMENTATION	1.5908072885694634E-7	TEST	1.2491952619734627E-7	DOCUMENTATION
// Resolve the LHS fully, generate implicit joins.  Pass in the property name so that the resolver can // discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.9999994456244321	WITHOUT_CLASSIFICATION	5.466978682639735E-7	DESIGN	4.246487791045965E-9	DEFECT	1.5513734855891072E-9	TEST	1.4073570216602366E-9	IMPLEMENTATION	4.72481390818863E-10	DOCUMENTATION
// If the propertyType is null and there isn't a parent, just // stop now... there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.984050682853141	WITHOUT_CLASSIFICATION	0.011963013482189217	DEFECT	0.003984322230082328	DESIGN	7.054777167893446E-7	DOCUMENTATION	6.817576154490422E-7	TEST	5.941992551421028E-7	IMPLEMENTATION
//We do not look for an existing join on the same path, because //it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.9999977960888707	WITHOUT_CLASSIFICATION	2.0666611490777628E-6	DESIGN	1.0209018184939836E-7	IMPLEMENTATION	2.671219978044057E-8	DEFECT	5.448985600534326E-9	TEST	2.9986130974547715E-9	DOCUMENTATION
// our parent is another dot node, meaning we are being further dereferenced. // thus we need to generate a join unless the parent refers to the associated // entity's PK (because 'our' table would know the FK).	WITHOUT_CLASSIFICATION	0.9999818302968826	WITHOUT_CLASSIFICATION	1.591931646833214E-5	IMPLEMENTATION	2.066023255605517E-6	DESIGN	1.126768168926657E-7	TEST	7.15185591431626E-8	DOCUMENTATION	1.680174238937479E-10	DEFECT
/*public final Currency getCurrency(int col) throws HibernateException {	WITHOUT_CLASSIFICATION	0.9976958865979346	WITHOUT_CLASSIFICATION	0.0017332185854202623	DESIGN	5.611246929760617E-4	DEFECT	5.761994586923397E-6	DOCUMENTATION	2.8196061617588618E-6	IMPLEMENTATION	1.188522920483564E-6	TEST
// here, we have two possibilities: // 	WITHOUT_CLASSIFICATION	0.9997777700987001	WITHOUT_CLASSIFICATION	1.108629531091533E-4	IMPLEMENTATION	1.0442130789476031E-4	DESIGN	4.097790530734013E-6	TEST	2.631799101476002E-6	DEFECT	2.160506638605923E-7	DOCUMENTATION
// Set the unresolved path in this node and the parent. // Set the text for the parent.	WITHOUT_CLASSIFICATION	0.9997676844476302	WITHOUT_CLASSIFICATION	2.0763812220849924E-4	IMPLEMENTATION	9.246254350662705E-6	TEST	8.679881107472417E-6	DESIGN	5.392034515883945E-6	DEFECT	1.3592601873393508E-6	DOCUMENTATION
// Get the first child to be considered.  Sub-classes may do this differently in order to skip nodes that // are not select expressions (e.g. DISTINCT).	WITHOUT_CLASSIFICATION	0.9999874925990243	WITHOUT_CLASSIFICATION	1.249145563473528E-5	DESIGN	1.2582602527786102E-8	IMPLEMENTATION	3.1912055492318363E-9	DOCUMENTATION	9.617738306113813E-11	TEST	7.53554090530529E-11	DEFECT
// If this is an entity and the property is the identifier property, then use getIdentifierType(). //      Note that the propertyName.equals( propertyPath ) checks whether we have a component //      key reference, where the component class property name is the same as the //      entity id property name; if the two are not equal, this is the case and //      we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.9999999985766023	WITHOUT_CLASSIFICATION	5.735809153391119E-10	DESIGN	4.6359516150527363E-10	IMPLEMENTATION	2.277919148461915E-10	DEFECT	1.444186686939398E-10	DOCUMENTATION	1.4011183693162777E-11	TEST
// for a subquery, the alias to use depends on a few things (we // already know this is not an overall SELECT): //      1) if this FROM_ELEMENT represents a correlation to the //          outer-most query //              A) if the outer query represents a multi-table //                  persister, we need to use the given alias //                  in anticipation of one of the multi-table //                  executors being used (as this subquery will //                  actually be used in the "id select" phase //                  of that multi-table executor) //              B) otherwise, we need to use the persister's //                  table name as the column qualification //      2) otherwise (not correlated), use the given alias	WITHOUT_CLASSIFICATION	0.9547210792682	WITHOUT_CLASSIFICATION	0.04495100991707781	DESIGN	2.3932827989190983E-4	IMPLEMENTATION	8.556929240917339E-5	DEFECT	2.77246815524427E-6	DOCUMENTATION	2.407742657658765E-7	TEST
// Not a collection? // Return the entity property mapping.	WITHOUT_CLASSIFICATION	0.9995160957978764	WITHOUT_CLASSIFICATION	2.137906723027464E-4	IMPLEMENTATION	1.6206482239196154E-4	DEFECT	1.0757325682023773E-4	DESIGN	3.7493745238015746E-7	TEST	1.0051315627947649E-7	DOCUMENTATION
// collection of <many-to-any/> mappings... // used to circumvent the component-collection check below...	WITHOUT_CLASSIFICATION	0.9996479179990476	WITHOUT_CLASSIFICATION	3.0938411887834933E-4	IMPLEMENTATION	4.0639671984070244E-5	DESIGN	1.1313706753185184E-6	DOCUMENTATION	8.293978689830959E-7	DEFECT	9.744154563732216E-8	TEST
// Otherwise, the destination node was implied by the FROM clause and the FROM clause processor // will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.9999621277277085	WITHOUT_CLASSIFICATION	2.354547170048967E-5	DESIGN	1.1638532051467717E-5	DEFECT	2.5037270893356954E-6	IMPLEMENTATION	1.591337112841602E-7	DOCUMENTATION	2.5407738965963944E-8	TEST
// If the first identifier in the path referrs to the class alias (not the class name), then this // is a correlated subselect.  If it's a correlated sub-select, use the existing table alias.  Otherwise // generate a new one.	WITHOUT_CLASSIFICATION	0.9999855303070804	WITHOUT_CLASSIFICATION	1.441495074167415E-5	DESIGN	4.0050576223169573E-8	IMPLEMENTATION	1.134779375562162E-8	DEFECT	3.083103616231123E-9	TEST	2.607043581416915E-10	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999853357666735	WITHOUT_CLASSIFICATION	1.4566251876416462E-5	DESIGN	9.057369921017081E-8	DEFECT	3.6415702460316423E-9	IMPLEMENTATION	3.1930140769917843E-9	DOCUMENTATION	5.731666304518016E-10	TEST
// An ident node can represent an index expression if the ident // represents a naked property ref //      *Note: this makes the assumption (which is currently the case //      in the hql-sql grammar) that the ident is first resolved //      itself (addrExpr -> resolve()).  The other option, if that //      changes, is to call resolve from here; but it is //      currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.9999992376188801	WITHOUT_CLASSIFICATION	7.316116405585387E-7	DESIGN	1.1830359492793981E-8	DEFECT	1.1365798349619444E-8	TEST	7.24231293515769E-9	IMPLEMENTATION	3.310085436996746E-10	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999909245518426	WITHOUT_CLASSIFICATION	8.93190856615483E-6	DESIGN	8.153798557832379E-8	DEFECT	6.139793305042149E-8	IMPLEMENTATION	3.5182517242394153E-10	TEST	2.518474847947999E-10	DOCUMENTATION
// If this is an implied join in a FROM clause, then use ANSI-style joining, and set the // flag on the FromElement that indicates that it was implied in the FROM clause itself.	WITHOUT_CLASSIFICATION	0.9999995747833343	WITHOUT_CLASSIFICATION	4.0335564003755214E-7	DESIGN	7.996465128108547E-9	TEST	6.814077804527572E-9	DEFECT	5.545734375384705E-9	IMPLEMENTATION	1.504748403204867E-9	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// For an explicit many-to-many relationship, add a second join from the intermediate  // (many-to-many) table to the destination table.  Also, make sure that the from element's  // idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.9999999806907142	WITHOUT_CLASSIFICATION	1.5503041086482166E-8	DESIGN	3.1167573780875756E-9	DEFECT	4.449496755138121E-10	TEST	2.0464760976829354E-10	DOCUMENTATION	3.989000580456274E-11	IMPLEMENTATION
// Reset the node type, because the rest of the system is expecting FROM_FRAGMENT, all we wanted was // for the factory to create the right sub-class.  This might get reset again later on anyway to make the // SQL generation simpler.	WITHOUT_CLASSIFICATION	0.9812718156384653	WITHOUT_CLASSIFICATION	0.01861447414546133	DESIGN	4.5628323138716236E-5	IMPLEMENTATION	3.677894100954472E-5	TEST	2.909421410522593E-5	DEFECT	2.2087378198628032E-6	DOCUMENTATION
//explicit = true;	WITHOUT_CLASSIFICATION	0.9997829221569248	WITHOUT_CLASSIFICATION	1.5665707196562634E-4	DESIGN	5.281951907260773E-5	DEFECT	3.2286351236726788E-6	IMPLEMENTATION	2.6011577357369363E-6	DOCUMENTATION	1.771459177611497E-6	TEST
//sqlResultTypeList.add( type ); // Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999992736086463	WITHOUT_CLASSIFICATION	3.9373089933144574E-7	IMPLEMENTATION	3.1000128398940843E-7	DESIGN	1.0864593850728952E-8	TEST	1.017782716298171E-8	DEFECT	1.6167494378939297E-9	DOCUMENTATION
// If the expression list has exactly one expression, and the type of the expression is a collection // then this might be a collection function, such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.9999647124773223	WITHOUT_CLASSIFICATION	3.29223306670335E-5	DESIGN	2.338203171171861E-6	DEFECT	1.3753952159283937E-8	DOCUMENTATION	1.1390608253185573E-8	IMPLEMENTATION	1.844279146238944E-9	TEST
// Need to parse off the column qualifiers; this is assuming (which is true as of now) // that this is only used from update and delete HQL statement parsing	WITHOUT_CLASSIFICATION	0.9999998632554605	WITHOUT_CLASSIFICATION	7.6754294566603E-8	IMPLEMENTATION	4.882571495584228E-8	DEFECT	9.72097424237951E-9	DESIGN	9.887684355821057E-10	DOCUMENTATION	4.547872693389237E-10	TEST
// for regression testing against output from the old parser... // found it easiest to simply reorder the FromElements here into ascending order // in terms of injecting them into the resulting sql ast in orders relative to those // expected by the old parser; this is definitely another of those "only needed // for regression purposes".  The SyntheticAndFactory, then, simply injects them as it // encounters them.	WITHOUT_CLASSIFICATION	0.9999130279252925	WITHOUT_CLASSIFICATION	6.89978276270901E-5	DEFECT	1.4364481763062979E-5	DESIGN	3.576295097681092E-6	TEST	3.345976754592783E-8	DOCUMENTATION	1.0452199671718482E-11	IMPLEMENTATION
// The uber-rule here is that we need to include  subclass joins if // the FromElement is in any way dereferenced by a property from // the subclass table; otherwise we end up with column references // qualified by a non-existent table reference in the resulting SQL...	WITHOUT_CLASSIFICATION	0.9967017779377699	WITHOUT_CLASSIFICATION	0.003295500372764063	DESIGN	1.863568440595318E-6	DEFECT	7.693120420200073E-7	IMPLEMENTATION	5.9354875739803216E-8	DOCUMENTATION	2.9454107555736985E-8	TEST
// classic translator does not support collection of ordinal // param metadata	WITHOUT_CLASSIFICATION	0.9987453244661265	WITHOUT_CLASSIFICATION	0.0012247779024549131	DESIGN	2.8059301255560476E-5	DEFECT	1.5295581824168703E-6	IMPLEMENTATION	2.4308305710748335E-7	TEST	6.568892359239082E-8	DOCUMENTATION
// The following variables are stacks that keep information about each subexpression // in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.9999045195599024	WITHOUT_CLASSIFICATION	7.470134613849852E-5	DEFECT	2.053661557722986E-5	DESIGN	1.7517087562808112E-7	DOCUMENTATION	4.110334324759336E-8	IMPLEMENTATION	2.620416291553813E-8	TEST
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999999200613275	WITHOUT_CLASSIFICATION	7.319643856349563E-8	DEFECT	6.555257172960173E-9	IMPLEMENTATION	1.0701867974943887E-10	TEST	7.019452655356732E-11	DOCUMENTATION	9.763556664774212E-12	DESIGN
// should not be able to reach last without maxPosition being set // unless there are no results	WITHOUT_CLASSIFICATION	0.9999999964527433	WITHOUT_CLASSIFICATION	2.7297353643111356E-9	DESIGN	5.29551406160573E-10	TEST	2.719877928974846E-10	DEFECT	1.3829073401475697E-11	IMPLEMENTATION	2.1529412750274543E-12	DOCUMENTATION
// we found it in the temp PC.  Should indicate we are in the midst of processing a result set // containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.9999999297272344	WITHOUT_CLASSIFICATION	7.0142959732554E-8	DESIGN	1.0804840283032493E-10	TEST	1.1141455432408972E-11	DOCUMENTATION	5.849845153775067E-12	IMPLEMENTATION	4.766074507198704E-12	DEFECT
//do not use proxiesByKey, since not all //proxies that point to this session's //instances are in that collection!	WITHOUT_CLASSIFICATION	0.9993322512671218	WITHOUT_CLASSIFICATION	5.542828050640177E-4	DESIGN	7.898067016453015E-5	DEFECT	3.1787421788292064E-5	IMPLEMENTATION	2.630902609371025E-6	DOCUMENTATION	6.693325210434274E-8	TEST
// if there is no TM configured, we will not be able to access // the javax.transaction.Transaction object in order to // register a synch anyway.	WITHOUT_CLASSIFICATION	0.7478261280304759	DESIGN	0.25214045307571126	WITHOUT_CLASSIFICATION	3.055206875375047E-5	IMPLEMENTATION	1.6902817113009624E-6	TEST	1.1208528000783584E-6	DOCUMENTATION	5.5690547798477164E-8	DEFECT
// Since the result set cursor is always left at the first // physical row after the "last processed", we need to jump // back one position to get the key value we are interested // in skipping	WITHOUT_CLASSIFICATION	0.999999927490452	WITHOUT_CLASSIFICATION	7.10764277070355E-8	DESIGN	9.460104937405416E-10	DOCUMENTATION	4.590001124552323E-10	DEFECT	2.460533292268704E-11	TEST	3.5043255910349E-12	IMPLEMENTATION
//true if this is a query and we are loading multiple instances of the same collection role //otherwise this is a CollectionInitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.9998856536618176	WITHOUT_CLASSIFICATION	1.0977067241614926E-4	DEFECT	3.568243747121549E-6	DESIGN	9.474397849242464E-7	IMPLEMENTATION	3.978815093235916E-8	DOCUMENTATION	2.0194083294861455E-8	TEST
// we don't need to worry about existing version being uninitialized // because this block isn't called by a re-entrant load (re-entrant // loads _always_ have lock mode NONE)	WITHOUT_CLASSIFICATION	0.9996295410935524	WITHOUT_CLASSIFICATION	3.6836963230589906E-4	IMPLEMENTATION	1.3895030532490126E-6	DESIGN	5.637760454095262E-7	DEFECT	8.905734754157614E-8	TEST	4.693769545783706E-8	DOCUMENTATION
// add temp entry so that the next step is circular-reference // safe - only needed because some types don't take proper // advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.9999885941168275	WITHOUT_CLASSIFICATION	1.0960255380703074E-5	DEFECT	2.444628998224075E-7	TEST	1.842320218974051E-7	DOCUMENTATION	1.4884003565533277E-8	DESIGN	2.048866548107906E-9	IMPLEMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999999641495064	WITHOUT_CLASSIFICATION	1.946932209345699E-8	DESIGN	8.810967328873368E-9	DOCUMENTATION	3.8173051156440285E-9	TEST	3.727086901246797E-9	DEFECT	2.5812199403882268E-11	IMPLEMENTATION
// log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.9998987161459173	WITHOUT_CLASSIFICATION	6.20494332732321E-5	IMPLEMENTATION	3.7951160381031646E-5	DEFECT	7.816617362521733E-7	DESIGN	2.638853564614724E-7	DOCUMENTATION	2.3771333572797405E-7	TEST
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// this has been shown to happen occasionally in rare cases // when using a transaction manager + transaction-timeout // where the timeout calls back through Hibernate's // registered transaction synchronization on a separate // "reaping" thread.  In cases where that reaping thread // executes through this block at the same time the main // application thread does we can get into situations where // these CMEs occur.  And though it is not "allowed" per-se, // the end result without handling it specifically is infinite // looping.  So here, we simply break the loop	WITHOUT_CLASSIFICATION	0.9999998259546566	WITHOUT_CLASSIFICATION	1.3793385537720902E-7	DEFECT	3.548687876072388E-8	DESIGN	5.636791749270893E-10	DOCUMENTATION	5.8086010500078056E-11	IMPLEMENTATION	2.843979854438539E-12	TEST
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999834378331248	WITHOUT_CLASSIFICATION	1.6278708373319125E-5	DESIGN	1.8636108028031016E-7	DEFECT	6.512941516297406E-8	DOCUMENTATION	2.4914411356828467E-8	IMPLEMENTATION	7.0535950444312164E-9	TEST
// can't cache this stuff either (per-invocation) // we are given a map of user-alias -> lock mode // create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.999998166366295	WITHOUT_CLASSIFICATION	1.3930241879588525E-6	DESIGN	4.305340742715047E-7	DEFECT	8.813107896359911E-9	DOCUMENTATION	1.246658147934594E-9	TEST	1.5676606410396972E-11	IMPLEMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns //getCollectionTable().createUniqueKey( getIdentifier().getConstraintColumns() );	WITHOUT_CLASSIFICATION	0.9999985992329811	WITHOUT_CLASSIFICATION	1.195837231290758E-6	DEFECT	1.9723686142747954E-7	DESIGN	4.980667586294359E-9	TEST	1.886608022188962E-9	IMPLEMENTATION	8.256507015971778E-10	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999985387835412	WITHOUT_CLASSIFICATION	7.155587903747272E-7	IMPLEMENTATION	5.451588408213479E-7	DESIGN	1.504749588773771E-7	DEFECT	2.5650589620784598E-8	DOCUMENTATION	2.437327917800328E-8	TEST
//isSet = collection.isSet(); //isSorted = collection.isSorted();	WITHOUT_CLASSIFICATION	0.9999729325241821	WITHOUT_CLASSIFICATION	2.334847903854496E-5	IMPLEMENTATION	1.6768302237925728E-6	DESIGN	1.0890932103700664E-6	DEFECT	8.39145691283088E-7	TEST	1.1392765384646625E-7	DOCUMENTATION
//lists, arrays //sets, maps, bags	WITHOUT_CLASSIFICATION	0.9999988682560245	WITHOUT_CLASSIFICATION	5.845818757514755E-7	DESIGN	1.9355128051709106E-7	IMPLEMENTATION	1.7692105714479292E-7	DEFECT	1.6162619240668334E-7	TEST	1.5063569896052064E-8	DOCUMENTATION
// we finish all the "removes" first to take care of possible unique // constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.9999889711657115	WITHOUT_CLASSIFICATION	7.169411117817524E-6	DESIGN	2.6311703116084E-6	DEFECT	1.006406443389615E-6	IMPLEMENTATION	2.1525260531104442E-7	TEST	6.59381033460367E-9	DOCUMENTATION
//use a combination of foreign key columns and pk columns, since //the ordering of removal and addition is not guaranteed when //a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.999906992883611	WITHOUT_CLASSIFICATION	6.442345754117753E-5	DESIGN	2.824339768164544E-5	DEFECT	2.453901170768546E-7	DOCUMENTATION	5.9451920008030735E-8	IMPLEMENTATION	3.5419129212402974E-8	TEST
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999985387835412	WITHOUT_CLASSIFICATION	7.155587903747272E-7	IMPLEMENTATION	5.451588408213479E-7	DESIGN	1.504749588773771E-7	DEFECT	2.5650589620784598E-8	DOCUMENTATION	2.437327917800328E-8	TEST
//information about properties of this class, //including inherited properties //(only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.9999249753512427	WITHOUT_CLASSIFICATION	3.514039062628793E-5	DESIGN	3.283304466275622E-5	DEFECT	6.765477115395155E-6	TEST	2.605610562353792E-7	DOCUMENTATION	2.517529665691733E-8	IMPLEMENTATION
// all this only really needs to consider properties // of this class, not its subclasses, but since we // are reusing code used for sequential selects, we // use the subclass closure	WITHOUT_CLASSIFICATION	0.9999999139398144	WITHOUT_CLASSIFICATION	8.185786269606055E-8	DESIGN	3.848584090557895E-9	DEFECT	2.939659039643428E-10	TEST	5.442015102055171E-11	DOCUMENTATION	5.352845779934078E-12	IMPLEMENTATION
// Here we render the select column list based on the properties defined as being generated. // For partial component generation, we currently just re-select the whole component // rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.9989304739306547	WITHOUT_CLASSIFICATION	0.0010692672796398914	DESIGN	2.1886805114852662E-7	IMPLEMENTATION	3.735669891701549E-8	DEFECT	1.765285457473532E-9	TEST	7.996700105286318E-10	DOCUMENTATION
// this is the root (versioned) table, and we are using version-based // optimistic locking;  if we are not updating the version, also don't // check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.9999996064899492	WITHOUT_CLASSIFICATION	3.5873030971158104E-7	DEFECT	3.280675169801928E-8	DESIGN	8.204975383192331E-10	TEST	6.903460702218081E-10	IMPLEMENTATION	4.62145725386308E-10	DOCUMENTATION
//optimistic-lock="all", include all updatable properties //optimistic-lock="dirty", include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.9999619361933461	WITHOUT_CLASSIFICATION	2.237993894121867E-5	DEFECT	1.3735022982219648E-5	DESIGN	6.79046731654104E-7	TEST	6.705356416387723E-7	DOCUMENTATION	5.992623573062174E-7	IMPLEMENTATION
// this property belongs to the table, and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9998338864441305	WITHOUT_CLASSIFICATION	1.4358756456515865E-4	DESIGN	2.2373404122036413E-5	DEFECT	8.954817134196187E-8	DOCUMENTATION	5.8837153425318866E-8	TEST	4.201857445898458E-9	IMPLEMENTATION
// check to see if the connection is in auto-commit  // mode (no connection means aggressive connection // release outside a JTA transaction context, so MUST // be autocommit mode)	WITHOUT_CLASSIFICATION	0.9999548907483689	WITHOUT_CLASSIFICATION	4.508880477566793E-5	DESIGN	1.3595739145589149E-8	DOCUMENTATION	6.124931411231373E-9	IMPLEMENTATION	7.163785237540712E-10	TEST	9.806472624588788E-12	DEFECT
// need to treat this as if it where optimistic-lock="all" (dirty does *not* make sense); // first we need to locate the "loaded" state // // Note, it potentially could be a proxy, so perform the location the safe way...	WITHOUT_CLASSIFICATION	0.630338572063361	DESIGN	0.36934040947321356	WITHOUT_CLASSIFICATION	2.3060994944205848E-4	DEFECT	5.379494057606728E-5	TEST	3.484871004069443E-5	IMPLEMENTATION	1.7648633664986251E-6	DOCUMENTATION
// we *always* assume an instance with a null // identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.9999999224301208	WITHOUT_CLASSIFICATION	6.926106086398366E-8	DEFECT	7.55490246526012E-9	DESIGN	6.493882364655382E-10	DOCUMENTATION	9.446788778141383E-11	TEST	1.0059691913056048E-11	IMPLEMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999993708669223	WITHOUT_CLASSIFICATION	4.3154968862029483E-7	DEFECT	1.3079790362303926E-7	IMPLEMENTATION	5.4766954896133504E-8	DESIGN	1.0655867797784884E-8	TEST	1.3626627596961894E-9	DOCUMENTATION
//allow any identifier quoted with backtick //only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.9996223035305625	WITHOUT_CLASSIFICATION	2.808456634692844E-4	DESIGN	5.563461104892974E-5	DEFECT	3.9723619292463284E-5	IMPLEMENTATION	1.0889817714767835E-6	TEST	4.0359385536181355E-7	DOCUMENTATION
//following doesn't handle (null, not null) but unnecessary //since this would mean all rows	WITHOUT_CLASSIFICATION	0.9784737691778584	WITHOUT_CLASSIFICATION	0.010760132656932144	DEFECT	0.006537343857089071	IMPLEMENTATION	0.002880136538075212	DESIGN	0.0013317262757811632	TEST	1.6891494263986887E-5	DOCUMENTATION
// IMPL NOTE : due to the delayed population of setters (setters cached // 	WITHOUT_CLASSIFICATION	0.9999942576175517	WITHOUT_CLASSIFICATION	5.558441845604645E-6	DESIGN	1.5528129752089063E-7	DEFECT	2.643407834125616E-8	IMPLEMENTATION	1.5900314826593215E-9	DOCUMENTATION	6.351953192627432E-10	TEST
// we need to dirty check collections, since they can cause an owner // version number increment	WITHOUT_CLASSIFICATION	0.9999584892813254	WITHOUT_CLASSIFICATION	3.994812204262033E-5	IMPLEMENTATION	1.0406391889125032E-6	DOCUMENTATION	3.862335796849094E-7	DESIGN	1.0942685646300056E-7	DEFECT	2.6297007053410707E-8	TEST
//return the id, so we can use it to reset the proxy id //return result;	WITHOUT_CLASSIFICATION	0.9999920322699424	WITHOUT_CLASSIFICATION	5.200035839132558E-6	DESIGN	2.504623313417194E-6	IMPLEMENTATION	2.3555863943436314E-7	DEFECT	2.4796654662365096E-8	DOCUMENTATION	2.7156109808190235E-9	TEST
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.999999979654859	WITHOUT_CLASSIFICATION	1.8851708699405387E-8	DEFECT	6.373795882147452E-10	IMPLEMENTATION	4.757620083161317E-10	DOCUMENTATION	2.9850706150057053E-10	DESIGN	8.178369548917071E-11	TEST
// We now have the value of the property-ref we reference.  However, // we need to dig a little deeper, as that property might also be // an entity type, in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.9999995481456785	WITHOUT_CLASSIFICATION	2.77759571831163E-7	DEFECT	1.6761089186362056E-7	DESIGN	5.218904396567022E-9	DOCUMENTATION	1.2356686587819114E-9	IMPLEMENTATION	2.9284815056614414E-11	TEST
// Retrieve the value of the designated column in the current row of this // ResultSet object as a java.io.Reader object	WITHOUT_CLASSIFICATION	0.9999994878091404	WITHOUT_CLASSIFICATION	4.3352061691102797E-7	DEFECT	5.46127044664535E-8	DESIGN	1.2346735299208467E-8	DOCUMENTATION	1.007643144071632E-8	IMPLEMENTATION	1.634371503206664E-9	TEST
//not absolutely necessary, but helps for some //equals()/hashCode() implementations	WITHOUT_CLASSIFICATION	0.9986212058044419	WITHOUT_CLASSIFICATION	0.0011671615292897963	IMPLEMENTATION	2.068477681184521E-4	DESIGN	2.743569459651591E-6	DEFECT	1.4456078533558275E-6	TEST	5.957208367801726E-7	DOCUMENTATION
//this should be a call to resolve(), not resolveIdentifier(),  //'cos it might be a property-ref, and we did not cache the //referenced value	WITHOUT_CLASSIFICATION	0.999927956262288	WITHOUT_CLASSIFICATION	6.960438172854442E-5	DESIGN	2.3040468149536427E-6	DEFECT	1.2538136007714907E-7	IMPLEMENTATION	8.790164200237873E-9	DOCUMENTATION	1.1376442584325084E-9	TEST
// If we have <tt>not-found="ignore"</tt> association mapped to a // formula, we always need to dirty check it, so we can update the // second-level cache	WITHOUT_CLASSIFICATION	0.9999923609419681	WITHOUT_CLASSIFICATION	3.9098051784311755E-6	IMPLEMENTATION	3.652491817674476E-6	DESIGN	5.30099528043436E-8	DOCUMENTATION	1.9803098908936296E-8	DEFECT	3.947984082868305E-9	TEST
// can't just return null here, since that would // cause an owning component to become null	WITHOUT_CLASSIFICATION	0.9999998913301983	WITHOUT_CLASSIFICATION	8.232763152750145E-8	IMPLEMENTATION	1.6686068674478138E-8	DEFECT	8.935396157000934E-9	DESIGN	3.804312201481496E-10	TEST	3.4027395759271217E-10	DOCUMENTATION
//for arrays, replaceElements() may return a different reference, since //the array length might not match	WITHOUT_CLASSIFICATION	0.9999998380759939	WITHOUT_CLASSIFICATION	1.1937080302304185E-7	DEFECT	3.796478061305237E-8	DESIGN	2.546690232355256E-9	DOCUMENTATION	2.0258186972238933E-9	IMPLEMENTATION	1.5913561284109544E-11	TEST
// actual cache of the entries.  soft references are used for both the keys and the // values here since the values pertaining to the MRU entries are kept in a // seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.9999998921497466	WITHOUT_CLASSIFICATION	1.0666634231068113E-7	DESIGN	1.1373462375433456E-9	IMPLEMENTATION	2.804987996538848E-11	DOCUMENTATION	1.2689264910850022E-11	TEST	5.825747136996104E-12	DEFECT
// as soon as we encounter our first letter, return the substring // from that position	WITHOUT_CLASSIFICATION	0.9999999860512548	WITHOUT_CLASSIFICATION	8.229000608858612E-9	DEFECT	5.394800276613883E-9	DESIGN	1.712057031661838E-10	IMPLEMENTATION	8.020498747904709E-11	TEST	7.353354430180986E-11	DOCUMENTATION
// Note : expected in the syntax: //      type=listenerClass //          ({sep}type=listenerClass)* // where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.9999994153875519	WITHOUT_CLASSIFICATION	5.398046042483322E-7	DEFECT	2.2545836550214513E-8	TEST	1.9268768264375127E-8	DESIGN	1.8294339833884255E-9	DOCUMENTATION	1.1638051106327395E-9	IMPLEMENTATION
// isTransactionCallbackRegistered denotes whether any Hibernate // Transaction has registered as a callback against this // JDBCContext; only one such callback is allowed.  Directly // serializing this value causes problems with JDBCTransaction, // or really any Transaction impl where the callback is local // to the Transaction instance itself, since that Transaction // is not serialized along with the JDBCContext.  Thus we // handle that fact here explicitly...	WITHOUT_CLASSIFICATION	0.9972439243234986	WITHOUT_CLASSIFICATION	0.0014762291124913625	DESIGN	0.001278923320118759	DEFECT	6.548997854126557E-7	TEST	1.832234319981176E-7	IMPLEMENTATION	8.512067393885295E-8	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999480540658551	WITHOUT_CLASSIFICATION	5.123712887846565E-5	DESIGN	3.638502688456378E-7	DEFECT	2.870352069088368E-7	TEST	4.951739398385346E-8	IMPLEMENTATION	8.402396571938803E-9	DOCUMENTATION
// We call getKeyFromResultSet() here so that we can know the // key value upon which to perform the breaking logic.  However, // it is also then called from getRowFromResultSet() which is certainly // not the most efficient.  But the call here is needed, and there // currently is no other way without refactoring of the doQuery()/getRowFromResultSet() // methods	WITHOUT_CLASSIFICATION	0.9709844739160032	DESIGN	0.02287215630706582	WITHOUT_CLASSIFICATION	0.00597889390188956	IMPLEMENTATION	1.5811583486801542E-4	DEFECT	3.235276507347971E-6	TEST	3.1247636661089715E-6	DOCUMENTATION
// This check is needed since processing leaves the cursor // after the last physical row for the current logical row; // thus if we are after the last physical row, this might be // caused by either: //      1) scrolling to the last logical row //      2) scrolling past the last logical row // In the latter scenario, the previous logical row // really is the last logical row. // // In all other cases, we should process back two // logical records (the current logic row, plus the // previous logical row).	WITHOUT_CLASSIFICATION	0.8866124508117376	WITHOUT_CLASSIFICATION	0.10774768412864655	DEFECT	0.00461437577460666	DESIGN	9.754220142646757E-4	IMPLEMENTATION	4.857838037426444E-5	DOCUMENTATION	1.4888903702547183E-6	TEST
// and perform the load	WITHOUT_CLASSIFICATION	0.9999904887842186	WITHOUT_CLASSIFICATION	6.375576484741742E-6	DESIGN	2.824093490671919E-6	IMPLEMENTATION	1.367817682137428E-7	DEFECT	1.3198548252002087E-7	DOCUMENTATION	4.277855537802163E-8	TEST
//important: reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.9335245858647753	WITHOUT_CLASSIFICATION	0.059617644561374375	DESIGN	0.004641613696951467	DEFECT	0.001851329308085706	IMPLEMENTATION	3.483999584152213E-4	DOCUMENTATION	1.6426610397974958E-5	TEST
//this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.9992258448139762	WITHOUT_CLASSIFICATION	6.823458920924948E-4	DEFECT	8.826402879668512E-5	DESIGN	2.963417488573948E-6	IMPLEMENTATION	4.3071783312051993E-7	DOCUMENTATION	1.511298129916583E-7	TEST
// we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.9999819066690266	WITHOUT_CLASSIFICATION	1.73745442196132E-5	DESIGN	6.502365279498123E-7	DEFECT	5.144013239807179E-8	IMPLEMENTATION	1.527294505766285E-8	DOCUMENTATION	1.837148189507319E-9	TEST
// we did not find a collection element in the result set, so we // ensure that a collection is created with the owner's identifier, // since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.9999999843770618	WITHOUT_CLASSIFICATION	1.5186524640634658E-8	DESIGN	2.1951060237489668E-10	IMPLEMENTATION	1.9271839293502605E-10	DEFECT	2.0992299337118327E-11	TEST	3.192228128532661E-12	DOCUMENTATION
// this is a collection initializer, so we must create a collection // for each of the passed-in keys, to account for the possibility // that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.9999999875103759	WITHOUT_CLASSIFICATION	5.888478815833882E-9	DEFECT	3.242139456578596E-9	DESIGN	2.2078670502386052E-9	IMPLEMENTATION	1.1194580886030298E-9	TEST	3.1680856873139876E-11	DOCUMENTATION
// grab its state from the ResultSet and keep it in the Session // (but don't yet initialize the object itself) // note that we acquire LockMode.READ even if it was not requested	WITHOUT_CLASSIFICATION	0.9999588768346169	WITHOUT_CLASSIFICATION	4.038203865364754E-5	DESIGN	5.397944535979324E-7	DEFECT	1.8917152187246498E-7	TEST	8.901691693512201E-9	DOCUMENTATION	3.2590623219050984E-9	IMPLEMENTATION
// a many-to-many; // decrement currentDepth here to allow join across the association table // without exceeding MAX_FETCH_DEPTH (i.e. the "currentDepth - 1" bit)	WITHOUT_CLASSIFICATION	0.9873388323285719	WITHOUT_CLASSIFICATION	0.010869790137136199	DESIGN	0.0017726229784975395	DEFECT	1.3378786839925695E-5	IMPLEMENTATION	2.7723187195025594E-6	TEST	2.6034502348402777E-6	DOCUMENTATION
// if not a composite key, use "foo in (?, ?, ?)" for batching // if no batch, and not a composite key, use "foo = ?"	WITHOUT_CLASSIFICATION	0.9999999123033461	WITHOUT_CLASSIFICATION	8.352927116029411E-8	DESIGN	2.6386237556959898E-9	DEFECT	6.298859720031573E-10	DOCUMENTATION	4.5986864009659704E-10	IMPLEMENTATION	4.390043933745734E-10	TEST
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999997455777029	WITHOUT_CLASSIFICATION	2.1469086225994248E-7	DESIGN	3.104770988455772E-8	DOCUMENTATION	7.531160574908647E-9	DEFECT	7.070879987843447E-10	IMPLEMENTATION	4.4547629888555714E-10	TEST
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9996588374115324	WITHOUT_CLASSIFICATION	2.925561127127442E-4	IMPLEMENTATION	4.6305211724494366E-5	DESIGN	1.2285158082416584E-6	DEFECT	9.219984134204002E-7	DOCUMENTATION	1.5074980868530091E-7	TEST
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9996588374115324	WITHOUT_CLASSIFICATION	2.925561127127442E-4	IMPLEMENTATION	4.6305211724494366E-5	DESIGN	1.2285158082416584E-6	DEFECT	9.219984134204002E-7	DOCUMENTATION	1.5074980868530091E-7	TEST
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999270792489898	WITHOUT_CLASSIFICATION	4.483117389761513E-5	DEFECT	2.7152791262376232E-5	DESIGN	8.107005955873115E-7	TEST	7.161414752254888E-8	IMPLEMENTATION	5.447110715420692E-8	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999989005033351	WITHOUT_CLASSIFICATION	1.0943856236333108E-6	DESIGN	3.562715007724488E-9	TEST	8.338097335165218E-10	IMPLEMENTATION	5.427471729984422E-10	DEFECT	1.717694768925866E-10	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999995180619266	WITHOUT_CLASSIFICATION	4.2415289652949895E-7	DESIGN	3.1896268999519083E-8	IMPLEMENTATION	2.507725488998992E-8	DEFECT	6.094687483138868E-10	TEST	2.0218417637510097E-10	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.7473852745238675	DESIGN	0.09040106869639221	WITHOUT_CLASSIFICATION	0.081661877013653	IMPLEMENTATION	0.0793016833748996	DEFECT	7.006091714672338E-4	DOCUMENTATION	5.494872197204492E-4	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999975674143844	WITHOUT_CLASSIFICATION	1.3648294478659303E-6	DESIGN	5.671145305579706E-7	DEFECT	3.820433736968819E-7	IMPLEMENTATION	7.774135294475789E-8	DOCUMENTATION	4.085691057975015E-8	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999975674143844	WITHOUT_CLASSIFICATION	1.3648294478659303E-6	DESIGN	5.671145305579706E-7	DEFECT	3.820433736968819E-7	IMPLEMENTATION	7.774135294475789E-8	DOCUMENTATION	4.085691057975015E-8	TEST
//        }	WITHOUT_CLASSIFICATION	0.999991482975323	WITHOUT_CLASSIFICATION	3.3166140574709357E-6	DEFECT	2.2854797798436596E-6	DESIGN	1.6679647677118579E-6	IMPLEMENTATION	6.415142547782109E-7	DOCUMENTATION	6.054518171832709E-7	TEST
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9999879678189726	WITHOUT_CLASSIFICATION	1.1999361000839148E-5	DESIGN	1.7990570080191197E-8	DEFECT	5.7305212280896835E-9	TEST	4.8452071389971235E-9	IMPLEMENTATION	4.253728135922706E-9	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.994325714146358	WITHOUT_CLASSIFICATION	0.005518018434071602	DESIGN	7.13445972436956E-5	DEFECT	4.1360292179983994E-5	IMPLEMENTATION	2.3227888640674012E-5	TEST	2.033464150608322E-5	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999937595936506	WITHOUT_CLASSIFICATION	2.4543335724847127E-6	DESIGN	1.850122083852487E-6	IMPLEMENTATION	1.0839217482934559E-6	TEST	7.819451939984131E-7	DEFECT	7.00837509358584E-8	DOCUMENTATION
// at this point we have (drivingSqlAlias) the SQL alias of the driving table // corresponding to the given user alias.  However, the driving table is not // (necessarily) the table against which we want to apply locks.  Mainly, // the exception case here is joined-subclass hierarchies where we instead // want to apply the lock against the root table (for all other strategies, // it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.9997268685078137	WITHOUT_CLASSIFICATION	2.2709148326151635E-4	DESIGN	4.580880061084117E-5	DEFECT	1.2329874320306426E-7	IMPLEMENTATION	8.677216714895065E-8	DOCUMENTATION	2.113740357238778E-8	TEST
// the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.9999926423049601	WITHOUT_CLASSIFICATION	5.16783075298312E-6	IMPLEMENTATION	9.72329807342807E-7	DEFECT	6.90420489625377E-7	TEST	2.771801145956074E-7	DESIGN	2.49933875376021E-7	DOCUMENTATION
// we have a mapped identifier property and the root of // the incoming property path matched that identifier // property	WITHOUT_CLASSIFICATION	0.999996938967436	WITHOUT_CLASSIFICATION	2.3793424231290074E-6	DEFECT	6.42077318981322E-7	DESIGN	2.160681335833048E-8	DOCUMENTATION	9.189967904075007E-9	TEST	8.816040475138462E-9	IMPLEMENTATION
// we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9999997028267718	WITHOUT_CLASSIFICATION	2.7401965744015484E-7	DESIGN	1.1371748844556319E-8	IMPLEMENTATION	5.634725187206506E-9	DEFECT	3.5705677949155066E-9	TEST	2.576528936027617E-9	DOCUMENTATION
// both many-to-one and one-to-one are represented as a // Property.  EntityPersister is relying on this value to // determine "lazy fetch groups" in terms of field-level // interception.  So we need to make sure that we return // true here for the case of many-to-one and one-to-one // with lazy="no-proxy" // // * impl note - lazy="no-proxy" currently forces both // lazy and unwrap to be set to true.  The other case we // are extremely interested in here is that of lazy="proxy" // where lazy is set to true, but unwrap is set to false. // thus we use both here under the assumption that this // return is really only ever used during persister // construction to determine the lazy property/field fetch // groupings.  If that assertion changes then this check // needs to change as well.  Partially, this is an issue with // the overloading of the term "lazy" here...	WITHOUT_CLASSIFICATION	0.9999044031945815	WITHOUT_CLASSIFICATION	9.148627259394866E-5	DEFECT	4.045158211441584E-6	DESIGN	6.077740636345055E-8	TEST	4.210430798314438E-9	DOCUMENTATION	3.867759612983536E-10	IMPLEMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999586797433	WITHOUT_CLASSIFICATION	1.714919191086083E-8	IMPLEMENTATION	1.0202336293974877E-8	DEFECT	8.157561986400253E-9	DESIGN	5.48783678558255E-9	TEST	3.2332965561974664E-10	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999586797433	WITHOUT_CLASSIFICATION	1.714919191086083E-8	IMPLEMENTATION	1.0202336293974877E-8	DEFECT	8.157561986400253E-9	DESIGN	5.48783678558255E-9	TEST	3.2332965561974664E-10	DOCUMENTATION
/*rootTableName = persistentClass.getRootTable().getQualifiedName( 	WITHOUT_CLASSIFICATION	0.999905174797655	WITHOUT_CLASSIFICATION	6.870287181086304E-5	DESIGN	2.4820416795753726E-5	IMPLEMENTATION	8.730348506268917E-7	DEFECT	3.031193575468189E-7	TEST	1.2575953037978636E-7	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999897779496937	WITHOUT_CLASSIFICATION	5.66381636568993E-6	DESIGN	2.1017428448129247E-6	IMPLEMENTATION	1.7998593365242516E-6	DEFECT	4.341549154578729E-7	DOCUMENTATION	2.2247684378017343E-7	TEST
// Custom sql	WITHOUT_CLASSIFICATION	0.9999868515280121	WITHOUT_CLASSIFICATION	1.2184382241204123E-5	DESIGN	6.676668117628013E-7	DEFECT	1.0551551847622154E-7	IMPLEMENTATION	9.704321252980691E-8	DOCUMENTATION	9.386420387700148E-8	TEST
/*protected void initPropertyPaths(	WITHOUT_CLASSIFICATION	0.9989443984880235	WITHOUT_CLASSIFICATION	9.902223590727195E-4	DESIGN	2.8178781391062528E-5	DEFECT	1.678431221579571E-5	TEST	1.6148887311475016E-5	IMPLEMENTATION	4.26717198548644E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999907807450628	WITHOUT_CLASSIFICATION	3.1744570870278095E-6	DESIGN	2.8257034602572826E-6	DEFECT	2.264276197204893E-6	IMPLEMENTATION	4.825231256528824E-7	DOCUMENTATION	4.722950673296086E-7	TEST
//Custom SQL (would be better if these were private)	WITHOUT_CLASSIFICATION	0.9819766411553583	WITHOUT_CLASSIFICATION	0.018002574001293774	DESIGN	1.8471624576449167E-5	TEST	1.7809313796331455E-6	IMPLEMENTATION	3.9107358283281115E-7	DOCUMENTATION	1.41213809020074E-7	DEFECT
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999050717795437	WITHOUT_CLASSIFICATION	9.355285458213134E-5	DESIGN	1.0924561029410156E-6	IMPLEMENTATION	1.2105229974120888E-7	TEST	1.1204230899207675E-7	DEFECT	4.981516259445262E-8	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999907807450628	WITHOUT_CLASSIFICATION	3.1744570870278095E-6	DESIGN	2.8257034602572826E-6	DEFECT	2.264276197204893E-6	IMPLEMENTATION	4.825231256528824E-7	DOCUMENTATION	4.722950673296086E-7	TEST
// aliases for identifier ( alias.id ); skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.999999539727465	WITHOUT_CLASSIFICATION	2.754679824746783E-7	IMPLEMENTATION	1.5851225549612851E-7	DESIGN	1.9401542054161024E-8	DEFECT	5.563813836402174E-9	TEST	1.3269411188794178E-9	DOCUMENTATION
//decide which ResultSet to get the property value from:	WITHOUT_CLASSIFICATION	0.999036641698983	WITHOUT_CLASSIFICATION	8.843875305932211E-4	DESIGN	7.667749591724927E-5	DEFECT	1.9383277670521867E-6	DOCUMENTATION	2.798354244024368E-7	TEST	7.511131505067942E-8	IMPLEMENTATION
//note: it is conceptually possible that a UserType could map null to //	WITHOUT_CLASSIFICATION	0.9789597716927858	WITHOUT_CLASSIFICATION	0.020972337717512824	DESIGN	4.011924275947434E-5	IMPLEMENTATION	2.7257344495206304E-5	DEFECT	4.775222315192884E-7	TEST	3.648021524858389E-8	DOCUMENTATION
// the contract of EntityTuplizer.determineConcreteSubclassEntityName says that returning null // is an indication that the specified entity-name (this.getEntityName) should be used.	WITHOUT_CLASSIFICATION	0.9375944092860706	WITHOUT_CLASSIFICATION	0.0624050308547204	DESIGN	3.4398841113796637E-7	DOCUMENTATION	1.9119956981114283E-7	IMPLEMENTATION	2.2842833234216102E-8	TEST	1.8283948488765655E-9	DEFECT
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999993708669223	WITHOUT_CLASSIFICATION	4.3154968862029483E-7	DEFECT	1.3079790362303926E-7	IMPLEMENTATION	5.4766954896133504E-8	DESIGN	1.0655867797784884E-8	TEST	1.3626627596961894E-9	DOCUMENTATION
// cache these since they are stateless // this one could even be static...	WITHOUT_CLASSIFICATION	0.9998137663745077	WITHOUT_CLASSIFICATION	1.861466706885671E-4	DESIGN	4.701479058043998E-8	DEFECT	2.8524425612435067E-8	TEST	5.730605900482245E-9	DOCUMENTATION	5.684981656908508E-9	IMPLEMENTATION
//"as" is not in KEYWORDS	WITHOUT_CLASSIFICATION	0.9987387456060359	WITHOUT_CLASSIFICATION	8.167796338036489E-4	DESIGN	4.0763009610297624E-4	DEFECT	1.976003063064318E-5	TEST	1.0859180164785843E-5	DOCUMENTATION	6.225453262165934E-6	IMPLEMENTATION
// --Commented out by Inspection (12/4/04 9:10 AM): public abstract void addCondition(String alias, String[] columns, String condition);	WITHOUT_CLASSIFICATION	0.9999873876539924	WITHOUT_CLASSIFICATION	1.1554292428034099E-5	DESIGN	6.693791109072328E-7	DOCUMENTATION	3.4280536227734214E-7	IMPLEMENTATION	3.036984373586475E-8	DEFECT	1.5499262594308732E-8	TEST
//use the id column alias	WITHOUT_CLASSIFICATION	0.9999865771935775	WITHOUT_CLASSIFICATION	6.863009614807387E-6	DESIGN	5.797445260603106E-6	IMPLEMENTATION	6.016279104484152E-7	DOCUMENTATION	1.1288546443144712E-7	TEST	4.783817216819696E-8	DEFECT
//private List aliases = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999998542923872	WITHOUT_CLASSIFICATION	9.227502611956822E-8	IMPLEMENTATION	2.3534567932165406E-8	DEFECT	1.6173968911417526E-8	TEST	1.1444385631614784E-8	DESIGN	2.279664205986121E-9	DOCUMENTATION
//columns.add(columnName); //aliases.add(tableAlias);	WITHOUT_CLASSIFICATION	0.9999092832079446	WITHOUT_CLASSIFICATION	3.631479582006194E-5	DESIGN	3.484885049960339E-5	IMPLEMENTATION	1.5662135303053226E-5	DEFECT	2.691184363386293E-6	TEST	1.19982606924813E-6	DOCUMENTATION
//where fragment must be empty!	WITHOUT_CLASSIFICATION	0.9935718662093004	WITHOUT_CLASSIFICATION	0.006381514853682164	DESIGN	1.9960509365660814E-5	IMPLEMENTATION	1.4686531596233641E-5	TEST	8.336135879209242E-6	DEFECT	3.6357601764224005E-6	DOCUMENTATION
// revert to traditional hibernate behavior of setting initialPoolSize to minPoolSize // unless otherwise specified with a c3p0.*-style parameter.	WITHOUT_CLASSIFICATION	0.9996363151082427	WITHOUT_CLASSIFICATION	3.590514520034838E-4	DESIGN	4.564026266185332E-6	IMPLEMENTATION	5.0705354325882834E-8	TEST	1.0972870886752615E-8	DOCUMENTATION	7.735262387339513E-9	DEFECT
//arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.9999938906146049	WITHOUT_CLASSIFICATION	5.0984055624563075E-6	DESIGN	6.669162307830379E-7	DEFECT	2.1250117686741985E-7	DOCUMENTATION	1.2153341876876995E-7	IMPLEMENTATION	1.0029006249319945E-8	TEST
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9987143691527038	WITHOUT_CLASSIFICATION	0.0010059038179322615	DESIGN	1.9528001264761078E-4	DEFECT	6.204733904142015E-5	IMPLEMENTATION	1.804259842938974E-5	DOCUMENTATION	4.357079245604353E-6	TEST
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9987143691527038	WITHOUT_CLASSIFICATION	0.0010059038179322615	DESIGN	1.9528001264761078E-4	DEFECT	6.204733904142015E-5	IMPLEMENTATION	1.804259842938974E-5	DOCUMENTATION	4.357079245604353E-6	TEST
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999512582073464	WITHOUT_CLASSIFICATION	3.2528720981287135E-5	DESIGN	1.5559064427131105E-5	DEFECT	4.4744360634940865E-7	IMPLEMENTATION	1.510178070534088E-7	TEST	5.554583180857891E-8	DOCUMENTATION
// Essentially: // 1) If we have a local (Hibernate) transaction in progress //      and it already has the UserTransaction cached, use that //      UserTransaction to determine the status. // 2) If a transaction manager has been located, use //      that transaction manager to determine the status. // 3) Finally, as the last resort, try to lookup the //      UserTransaction via JNDI and use that to determine the //      status.	WITHOUT_CLASSIFICATION	0.9999999957986144	WITHOUT_CLASSIFICATION	3.5977547992611075E-9	IMPLEMENTATION	3.2681753258716595E-10	DEFECT	2.672622132091353E-10	DESIGN	9.53157739332472E-12	DOCUMENTATION	1.946802351039587E-14	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9978396653539129	WITHOUT_CLASSIFICATION	0.002047636254167967	DESIGN	8.364911112739331E-5	IMPLEMENTATION	1.746060139679287E-5	DEFECT	7.776673285281719E-6	DOCUMENTATION	3.812006109517023E-6	TEST
//swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.9996510298002702	WITHOUT_CLASSIFICATION	2.1096078369481577E-4	IMPLEMENTATION	1.2915214378576392E-4	DESIGN	8.307752138692711E-6	DEFECT	3.9910670025137516E-7	DOCUMENTATION	1.5041341027831043E-7	TEST
// ignore it	WITHOUT_CLASSIFICATION	0.9999977375581258	WITHOUT_CLASSIFICATION	1.2265514180667714E-6	DESIGN	7.325061840447078E-7	DEFECT	1.6804656602626944E-7	IMPLEMENTATION	9.618343430654698E-8	DOCUMENTATION	3.915427173927159E-8	TEST
// we need to dirty check many-to-ones with not-found="ignore" in order  // to update the cache (not the database), since in this case a null // entity reference can lose information	WITHOUT_CLASSIFICATION	0.9999749955081036	WITHOUT_CLASSIFICATION	2.299672018675483E-5	DEFECT	1.7437760439386848E-6	IMPLEMENTATION	1.5948169702038902E-7	DOCUMENTATION	1.0356026615356262E-7	DESIGN	9.537023004783414E-10	TEST
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999952883037913	WITHOUT_CLASSIFICATION	4.3746364943374664E-6	IMPLEMENTATION	2.8702867087454314E-7	DEFECT	3.17588354993862E-8	DESIGN	1.179073217374569E-8	TEST	6.48147579801536E-9	DOCUMENTATION
// Regions can get instantiated in the course of normal work (e.g. // a named query region will be created the first time the query is // executed), so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.9924165340957396	WITHOUT_CLASSIFICATION	0.00445522713994657	DEFECT	0.0031279901718320765	DESIGN	2.08808887357187E-7	IMPLEMENTATION	3.1652054741420494E-8	DOCUMENTATION	8.131539666987402E-9	TEST
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9999603940622687	WITHOUT_CLASSIFICATION	2.3170537539523015E-5	DESIGN	1.5645641809254644E-5	IMPLEMENTATION	4.81172281300039E-7	TEST	2.1169016875242695E-7	DOCUMENTATION	9.689593244193596E-8	DEFECT
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.999885346535301	WITHOUT_CLASSIFICATION	9.707361799320335E-5	DESIGN	1.01679058259601E-5	DEFECT	7.231549392649517E-6	IMPLEMENTATION	1.2059458291179293E-7	TEST	5.979690425754839E-8	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994089099748978	WITHOUT_CLASSIFICATION	5.859215525444784E-4	DESIGN	1.693224590594858E-6	IMPLEMENTATION	1.4280107229113313E-6	DEFECT	1.385993890166075E-6	TEST	6.61243354048422E-7	DOCUMENTATION
// NOTE : this is being used from the process of shutting down a // SessionFactory. Specific things to consider: // (1) this clearing of the region should not propagate to // other nodes on the cluster (if any); this is the // cache-mode-local option bit... // (2) really just trying a best effort to cleanup after // ourselves; lock failures, etc are not critical here; // this is the fail-silently option bit...	WITHOUT_CLASSIFICATION	0.9999981547462293	DESIGN	9.640091281590443E-7	DEFECT	8.781365398181429E-7	WITHOUT_CLASSIFICATION	2.9978875851451385E-9	TEST	8.410345949411121E-11	IMPLEMENTATION	2.611167616463169E-11	DOCUMENTATION
// need to extract the component values and check for subtype replacements...	WITHOUT_CLASSIFICATION	0.8814012052884485	DESIGN	0.10629488457967921	WITHOUT_CLASSIFICATION	0.012293308243218833	IMPLEMENTATION	9.495278302458916E-6	DOCUMENTATION	8.600322149014721E-7	TEST	2.465781360116661E-7	DEFECT
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999999991808944	WITHOUT_CLASSIFICATION	3.5239889342330445E-10	DEFECT	3.398120370086145E-10	DESIGN	1.0974196551212731E-10	IMPLEMENTATION	1.4634982930919323E-11	TEST	2.5176211654962984E-12	DOCUMENTATION
// for now, just "re-flatten" the metamodel since this is temporary stuff anyway (HHH-1907)	WITHOUT_CLASSIFICATION	0.9871139476886444	DESIGN	0.01288550874827028	WITHOUT_CLASSIFICATION	2.672663400155065E-7	TEST	2.3481667742405955E-7	DEFECT	2.8585048301244968E-8	DOCUMENTATION	1.2895019534920101E-8	IMPLEMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9998908916807284	WITHOUT_CLASSIFICATION	1.0879884849208326E-4	DESIGN	1.5221782187327393E-7	IMPLEMENTATION	1.252750609292544E-7	DOCUMENTATION	2.8167856892458227E-8	DEFECT	3.810039660338023E-9	TEST
//This solution would allow us to eliminate the owner arg to disassemble(), but //what if the collection was null, and then later had elements added? seems unsafe //session.getPersistenceContext().getCollectionEntry( (PersistentCollection) value ).getKey();	WITHOUT_CLASSIFICATION	0.674328629806053	DESIGN	0.3234988037246359	WITHOUT_CLASSIFICATION	0.0021517738992810776	DEFECT	1.6633500740221997E-5	IMPLEMENTATION	2.2858809057313326E-6	DOCUMENTATION	1.8731883839610802E-6	TEST
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999911845849019	WITHOUT_CLASSIFICATION	5.044136709642739E-6	DEFECT	3.1151488351750955E-6	DESIGN	3.7967338364793076E-7	IMPLEMENTATION	2.068290116780522E-7	TEST	6.962715796739382E-8	DOCUMENTATION
// some collections are not lazy:	WITHOUT_CLASSIFICATION	0.9998768801460283	WITHOUT_CLASSIFICATION	7.759170774192542E-5	DESIGN	3.811582579642713E-5	IMPLEMENTATION	5.123068896202587E-6	DEFECT	1.5990310548091967E-6	TEST	6.902204822109509E-7	DOCUMENTATION
// Here we don't want to suspend the tx. If we do: // 1) We might be caching query results that reflect uncommitted // changes. No tx == no WL on cache node, so other threads // can prematurely see those query results // 2) No tx == immediate replication. More overhead, plus we // spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.9956641827875023	WITHOUT_CLASSIFICATION	0.0038998429916887903	DESIGN	4.3593897432989744E-4	DEFECT	3.3095653280350044E-8	DOCUMENTATION	1.9176625099511202E-9	TEST	2.331631554113394E-10	IMPLEMENTATION
// return the (fully resolved) identifier value, but do not resolve // to the actual referenced entity instance // NOTE: the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.9999999829607671	WITHOUT_CLASSIFICATION	1.6079395460315815E-8	DEFECT	4.547215523396097E-10	DESIGN	4.4578146686530546E-10	IMPLEMENTATION	3.7397246132476266E-11	DOCUMENTATION	2.1937278409395767E-11	TEST
// Add a zero (or quite low) timeout option so we don't block. // Ignore any TimeoutException. Basically we forego caching the // query result in order to avoid blocking. // Reads are done with suspended tx, so they should not hold the // lock for long.  Not caching the query result is OK, since // any subsequent read will just see the old result with its // out-of-date timestamp; that result will be discarded and the // db query performed again.	WITHOUT_CLASSIFICATION	0.9999296120118506	WITHOUT_CLASSIFICATION	6.67218494199601E-5	DEFECT	2.54705305383937E-6	DESIGN	1.0857835756621967E-6	IMPLEMENTATION	2.2341738741073253E-8	DOCUMENTATION	1.0960361099836307E-8	TEST
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9998753771402339	WITHOUT_CLASSIFICATION	1.2100853065365393E-4	DESIGN	1.9168895318002306E-6	DEFECT	1.396754499344288E-6	IMPLEMENTATION	2.895462787383095E-7	TEST	1.1138802524064179E-8	DOCUMENTATION
// We have the JBCWriteMutex, so no other *local* thread will  // be trying to write this key.  // It's possible here some remote thread has come in and // changed the values again, but since we are reading the // values to write to JBC right now, we know we are writing // the latest values; i.e. we don't assume that what we cached // in entry.update() above is what we should write to JBC *now*. // Our write could be redundant, i.e. we are writing what // some remote thread just came in an wrote.  There is a chance  // that yet another remote thread will update us, and we'll then // overwrite that later data in JBC.  But, all remote nodes will // ignore that change in their localCache; the only place it  // will live will be in JBC, where it can only effect the  // initial state transfer values on newly joined nodes  // (i.e. populateLocalCache()).	WITHOUT_CLASSIFICATION	0.9999999999838355	WITHOUT_CLASSIFICATION	1.4399303293545255E-11	DEFECT	1.7335899533685328E-12	DESIGN	1.8601179275392794E-14	TEST	9.55724850389119E-15	DOCUMENTATION	3.4528543426660955E-15	IMPLEMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999897655421663	WITHOUT_CLASSIFICATION	8.077486549624345E-6	DEFECT	1.718270536278097E-6	DOCUMENTATION	4.096601298721807E-7	DESIGN	2.7611865321333605E-8	IMPLEMENTATION	1.4287525719402548E-9	TEST
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999897655421663	WITHOUT_CLASSIFICATION	8.077486549624345E-6	DEFECT	1.718270536278097E-6	DOCUMENTATION	4.096601298721807E-7	DESIGN	2.7611865321333605E-8	IMPLEMENTATION	1.4287525719402548E-9	TEST
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9997926278245179	WITHOUT_CLASSIFICATION	1.0377030022719614E-4	TEST	3.919924578215593E-5	DEFECT	3.2542982959366844E-5	IMPLEMENTATION	2.7506104732089904E-5	DESIGN	4.353541781251532E-6	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9928472971761676	WITHOUT_CLASSIFICATION	0.006858095428184985	DESIGN	2.4788305971373516E-4	IMPLEMENTATION	4.5806476792164074E-5	DEFECT	5.878905893820881E-7	TEST	3.299685521748291E-7	DOCUMENTATION
// we need to obtain the lock before any actions are // executed, since this may be an inverse="true" // bidirectional association and it is one of the // earlier entity actions which actually updates // the database (this action is resposible for // second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.9999993879030528	WITHOUT_CLASSIFICATION	4.3551573780624357E-7	DESIGN	1.332011388406836E-7	IMPLEMENTATION	3.9594000035819836E-8	DOCUMENTATION	3.107856965867922E-9	TEST	6.782136629384171E-10	DEFECT
//postDelete: // After actually deleting a row, record the fact that the instance no longer  // exists on the database (needed for identity-column key generation), and // remove it from the session cache	WITHOUT_CLASSIFICATION	0.9999044494459898	WITHOUT_CLASSIFICATION	9.55475422626462E-5	DESIGN	2.783003294268844E-9	DEFECT	8.238066952270186E-11	DOCUMENTATION	7.73311033311398E-11	IMPLEMENTATION	6.903242813024514E-11	TEST
// intentionally empty	WITHOUT_CLASSIFICATION	0.999991306979069	WITHOUT_CLASSIFICATION	6.804899086745884E-6	DESIGN	1.0709698591202427E-6	DEFECT	4.872641771793007E-7	DOCUMENTATION	3.029668091821558E-7	IMPLEMENTATION	2.6920998664507015E-8	TEST
//TODO find a decent name before documenting	DOCUMENTATION	0.6983772693785916	WITHOUT_CLASSIFICATION	0.16912731357564068	DOCUMENTATION	0.1300212298649986	DESIGN	0.0017751437905472675	DEFECT	4.358277791924293E-4	TEST	2.6321561102931896E-4	IMPLEMENTATION
//FIXME we don't have the associated entity table name here, has to be done in a second pass	DEFECT	0.8799504118031146	WITHOUT_CLASSIFICATION	0.11940920896507856	DESIGN	6.056476142312049E-4	IMPLEMENTATION	1.2733148271570028E-5	TEST	1.2429472661050811E-5	DOCUMENTATION	9.568996642984272E-6	DEFECT
// For a one-to-many, a <bag> is not really a bag; // it is *really* a set, since it can't contain the // same element twice. It could be considered a bug // in the mapping dtd that <bag> allows <one-to-many>.	DEFECT	0.9941155277130748	WITHOUT_CLASSIFICATION	0.004093561971116143	DEFECT	0.0014763910481163376	DESIGN	3.144874653167503E-4	IMPLEMENTATION	2.5335363309850113E-8	DOCUMENTATION	6.467012576085177E-9	TEST
// RDMS does not directly support the trim() function, we use rtrim() and ltrim()	DEFECT	0.9995981453590661	WITHOUT_CLASSIFICATION	2.222949919682162E-4	IMPLEMENTATION	1.7202120863916683E-4	DESIGN	6.574378928804056E-6	DEFECT	8.411102532360324E-7	DOCUMENTATION	1.2295114444118377E-7	TEST
/*         * The following types are not supported in RDMS/JDBC and therefore commented out.         * However, in some cases, mapping them to CHARACTER columns works         * for many applications, but does not work for all cases.         */	DEFECT	0.977880680033545	DEFECT	0.02201686173412912	WITHOUT_CLASSIFICATION	5.902535666482566E-5	DESIGN	3.7989892636506796E-5	DOCUMENTATION	3.3280349401524704E-6	TEST	2.1149480845004095E-6	IMPLEMENTATION
// The preference here would be //   SQLFunctionTemplate( Hibernate.TIMESTAMP, "current_timestamp(?1)", false) // but this appears not to work. // Jay Nance 2006-09-22	DEFECT	0.627756592000658	DEFECT	0.36600184322197626	WITHOUT_CLASSIFICATION	0.005514937932071923	DESIGN	6.910266329863422E-4	IMPLEMENTATION	2.678115572434597E-5	DOCUMENTATION	8.819056583076779E-6	TEST
// note: at least my local SQL Server 2005 Express shows this not working...	DEFECT	0.6889804998567697	WITHOUT_CLASSIFICATION	0.19649664860636845	DESIGN	0.11365160337114778	DEFECT	8.230161612247117E-4	TEST	2.4375939371138495E-5	DOCUMENTATION	2.3856065118266417E-5	IMPLEMENTATION
// note: at least my local MySQL 5.1 install shows this not working...	DEFECT	0.49154396001594175	DESIGN	0.335107186213443	WITHOUT_CLASSIFICATION	0.17309062412076526	DEFECT	1.2195949071712613E-4	IMPLEMENTATION	9.948281500862926E-5	TEST	3.678734412427728E-5	DOCUMENTATION
/*	DEFECT	0.9625855444912206	WITHOUT_CLASSIFICATION	0.026097610924683663	DESIGN	0.00739982775603616	DEFECT	0.003707326217175183	IMPLEMENTATION	1.0587277362289763E-4	DOCUMENTATION	1.038178372614674E-4	TEST
//Don't need this, because we should never ever be selecting no columns in an insert ... select... //and because it causes a bug on DB2	DEFECT	0.999894810588317	WITHOUT_CLASSIFICATION	5.5584775451134425E-5	DESIGN	2.627876821301903E-5	DEFECT	2.1367190753345276E-5	TEST	1.912818009927324E-6	DOCUMENTATION	4.585925548368655E-8	IMPLEMENTATION
// TODO : this is broke for subqueries in statements other than selects...	DEFECT	0.9998494770329169	DESIGN	1.2013208334942958E-4	DEFECT	2.17882904865345E-5	TEST	5.925020263602614E-6	WITHOUT_CLASSIFICATION	2.0325193698385553E-6	DOCUMENTATION	6.450536137973062E-7	IMPLEMENTATION
// TODO : should this be an error?	DEFECT	0.9999919856193249	DESIGN	3.235358159770121E-6	DEFECT	2.5271432848077664E-6	IMPLEMENTATION	1.651780689735473E-6	TEST	4.4455666837730044E-7	DOCUMENTATION	1.5554187241995964E-7	WITHOUT_CLASSIFICATION
// TODO : not sure which (either?) is correct, could not find docs on how to do this. // did find various blogs and forums mentioning that select CURRENT_TIMESTAMP // does not work...	DEFECT	0.9969906807928443	DESIGN	0.002997280170267012	DEFECT	1.0041488511839292E-5	TEST	1.8164640305658035E-6	DOCUMENTATION	1.1349947686668179E-7	IMPLEMENTATION	6.758486927507344E-8	WITHOUT_CLASSIFICATION
// TODO: figure out how this should be set. /////////////////////////////////////////////////////////////////////////////// // This was the reason for failures regarding INDEX_OP and subclass joins on // theta-join dialects; not sure what behaviour we were trying to emulate ;) //	DEFECT	0.8922095733718703	DESIGN	0.10770350837672832	DEFECT	7.936356935033976E-5	WITHOUT_CLASSIFICATION	7.0842725062168185E-6	IMPLEMENTATION	3.3066468069605897E-7	TEST	1.3974486408853254E-7	DOCUMENTATION
//TODO: would be nice to use false, but issues with MS SQL	DEFECT	0.8300323170475913	DESIGN	0.12054669242999798	WITHOUT_CLASSIFICATION	0.04311955812414641	DEFECT	0.0038099654025949537	IMPLEMENTATION	0.0022762127880405453	TEST	2.1525420762869422E-4	DOCUMENTATION
//TODO: would be nice to use false, but issues with MS SQL	DEFECT	0.8300323170475913	DESIGN	0.12054669242999798	WITHOUT_CLASSIFICATION	0.04311955812414641	DEFECT	0.0038099654025949537	IMPLEMENTATION	0.0022762127880405453	TEST	2.1525420762869422E-4	DOCUMENTATION
// TODO: cannot use generateSuffixes() - it handles the initial suffix differently.	DEFECT	0.9999380645704429	DESIGN	4.742165165470889E-5	IMPLEMENTATION	9.713736466022017E-6	WITHOUT_CLASSIFICATION	4.091936729589484E-6	DEFECT	5.961133348801403E-7	DOCUMENTATION	1.1199137190362718E-7	TEST
// starts with an alias (old style) // semi-bad thing about this: can't re-alias another alias.....	DEFECT	0.999332592992518	WITHOUT_CLASSIFICATION	6.640767825445881E-4	DESIGN	3.0035177876465995E-6	DEFECT	3.1360919751770025E-7	TEST	1.2979170555641558E-8	DOCUMENTATION	1.1878190257609007E-10	IMPLEMENTATION
//TODO: BUG! this currently fails for named queries for non-POJO entities	DEFECT	0.8662946887625936	DESIGN	0.06696021964944772	WITHOUT_CLASSIFICATION	0.032594379209675735	DEFECT	0.025321595560131475	IMPLEMENTATION	0.007408761908699924	TEST	0.0014203549094514655	DOCUMENTATION
// this call is side-effecty	DEFECT	0.9999880584178548	WITHOUT_CLASSIFICATION	1.1476191610321464E-5	DESIGN	2.615802058148764E-7	DEFECT	1.0941429727957693E-7	IMPLEMENTATION	5.722110420106651E-8	TEST	3.717492765547126E-8	DOCUMENTATION
//TODO: old version did not require hashmap lookup: //keys[collectionOwner].getIdentifier()	DEFECT	0.9978281013556577	WITHOUT_CLASSIFICATION	0.0015565332672202335	DEFECT	5.23918084080533E-4	IMPLEMENTATION	9.107970823806848E-5	DESIGN	1.9042391778685115E-7	DOCUMENTATION	1.7716088576697278E-7	TEST
//TODO: when this is the entry point, we should use an INNER_JOIN for fetching the many-to-many elements!	DEFECT	0.9757525038848118	WITHOUT_CLASSIFICATION	0.016079899093828152	DEFECT	0.007901528856428783	DESIGN	1.1986318616342066E-4	IMPLEMENTATION	1.1719733364198903E-4	DOCUMENTATION	2.900764512571111E-5	TEST
// this is only needed (afaict) for processing results from the query cache; // however, this cannot possibly work in the case of discovered types...	DEFECT	0.5292532128754642	WITHOUT_CLASSIFICATION	0.4698973057170408	DEFECT	8.485358744626947E-4	DESIGN	6.327553728214109E-7	TEST	3.071124051597705E-7	DOCUMENTATION	5.665254402986439E-9	IMPLEMENTATION
//TODO: this requires that the collection is defined after the //      referenced property in the mapping file (ok?)	DEFECT	0.9929374738143396	WITHOUT_CLASSIFICATION	0.006643999139336267	DESIGN	2.709247675528027E-4	DEFECT	1.0003830340767356E-4	IMPLEMENTATION	4.0934660866198054E-5	TEST	6.629314497473363E-6	DOCUMENTATION
//TODO: is this completely correct?	DEFECT	0.9454556827271636	DESIGN	0.054354331490953235	WITHOUT_CLASSIFICATION	8.876880712587243E-5	DEFECT	7.158082394869031E-5	TEST	2.3122487844181806E-5	IMPLEMENTATION	6.513662964579985E-6	DOCUMENTATION
// three general cases we check here as to whether to render a physical SQL join: // 1) is our parent a DotNode as well?  If so, our property reference is // 	DEFECT	0.9999686816301474	WITHOUT_CLASSIFICATION	3.06243278926753E-5	DESIGN	6.289361501478405E-7	DEFECT	6.297418926045603E-8	DOCUMENTATION	1.8202711318234537E-9	IMPLEMENTATION	3.1134930068650635E-10	TEST
// TODO : currently we really do not handle ValueInclusion.PARTIAL... // ValueInclusion.PARTIAL would indicate parts of a component need to // be included in the select; currently we then just render the entire // component into the select clause in that case.	DEFECT	0.8984113497619638	IMPLEMENTATION	0.10023429007631803	DESIGN	0.0013348767649448453	DEFECT	1.492493123157875E-5	WITHOUT_CLASSIFICATION	4.261471134588981E-6	DOCUMENTATION	2.969944072639467E-7	TEST
//TODO: inexact, what we really need to know is: are any outer joins used?	DEFECT	0.9999855595969391	DESIGN	7.4597142896619854E-6	WITHOUT_CLASSIFICATION	3.8040691870724555E-6	DOCUMENTATION	1.6466440267539583E-6	IMPLEMENTATION	1.3154485666975377E-6	DEFECT	2.1452699057326326E-7	TEST
// todo : this call will not work for anything other than pojos!	DEFECT	0.7519893933399261	DEFECT	0.18647732254402744	WITHOUT_CLASSIFICATION	0.047023098351438364	DESIGN	0.01435372415678975	IMPLEMENTATION	1.1895800391848082E-4	TEST	3.7503603899876005E-5	DOCUMENTATION
//TODO: currently we don't know a SessionFactory reference when building the Tuplizer //      THIS IS A BUG (embedded-xml=false on component) // TODO : fix this after HHH-1907 is complete	DEFECT	0.9999969094961418	DESIGN	2.9768793881900823E-6	DEFECT	1.023580442811395E-7	DOCUMENTATION	9.46780701193205E-9	IMPLEMENTATION	1.542957195340234E-9	TEST	2.5566148850561834E-10	WITHOUT_CLASSIFICATION
// TODO: this disables laziness even in non-pojo entity modes:	DEFECT	0.6191870254558799	WITHOUT_CLASSIFICATION	0.203229630574487	IMPLEMENTATION	0.16736266593742238	DESIGN	0.0055106721673066515	DEFECT	0.0026030754799953094	DOCUMENTATION	0.0021069303849088295	TEST
//TODO: currently broken for unique-key references (does not detect //      change to unique key property of the associated object) //the owner of the association is not the owner of the id	DEFECT	0.9823935109085867	WITHOUT_CLASSIFICATION	0.015721453356636092	DEFECT	8.37812559716812E-4	IMPLEMENTATION	4.476458080374724E-4	DOCUMENTATION	4.0852602539467615E-4	DESIGN	1.910513416282237E-4	TEST
//TODO: entities CAN be compared, by PK, fix this! -> only if/when we can extract the id values....	DEFECT	0.984135901577717	DESIGN	0.011685342268590374	WITHOUT_CLASSIFICATION	0.003012814371368354	IMPLEMENTATION	6.669923821245733E-4	DEFECT	3.293648476136643E-4	TEST	1.6958455258627662E-4	DOCUMENTATION
//TODO: entities CAN be compared, by PK and entity name, fix this!	DEFECT	0.9113553971903876	DESIGN	0.08547996257941508	WITHOUT_CLASSIFICATION	0.0014063057498394582	IMPLEMENTATION	0.001189578903623534	DEFECT	4.197470288056883E-4	TEST	1.490085479286686E-4	DOCUMENTATION
//TODO: this is kinda inconsistent with CollectionType	DEFECT	0.9830714524587122	DESIGN	0.00861308943755884	WITHOUT_CLASSIFICATION	0.002907412071627765	TEST	0.002789350079639353	DEFECT	0.0023956335724549358	IMPLEMENTATION	2.2306238000707211E-4	DOCUMENTATION
//TODO: would be nice to use false, but issues with MS SQL	DEFECT	0.8300323170475913	DESIGN	0.12054669242999798	WITHOUT_CLASSIFICATION	0.04311955812414641	DEFECT	0.0038099654025949537	IMPLEMENTATION	0.0022762127880405453	TEST	2.1525420762869422E-4	DOCUMENTATION
// TODO: does not work for EntityMode.DOM4J yet!	DEFECT	0.9782564540658626	DEFECT	0.019230764569187594	DESIGN	0.002184148397448449	IMPLEMENTATION	2.670815791527096E-4	TEST	5.521219988466791E-5	DOCUMENTATION	6.339188463873631E-6	WITHOUT_CLASSIFICATION
//TODO: currently broken for unique-key references (does not detect //      change to unique key property of the associated object)	DEFECT	0.8702123703349828	WITHOUT_CLASSIFICATION	0.06770338105087509	DESIGN	0.04400796140356364	DEFECT	0.009872780902001495	DOCUMENTATION	0.006662185232423843	IMPLEMENTATION	0.0015413210761530249	TEST
//TODO: not really completely correct, since //      the uoe could occur while resolving //      associations, leaving the PC in an //      inconsistent state	DEFECT	0.5944469705423616	WITHOUT_CLASSIFICATION	0.401915379107366	DEFECT	0.002014479239679384	DESIGN	0.0013089927154670696	TEST	2.586640832580837E-4	DOCUMENTATION	5.551431186786738E-5	IMPLEMENTATION
// could happen for custom Criteria impls.  Not likely, but... // 	DEFECT	0.9162815822181185	WITHOUT_CLASSIFICATION	0.07761819437030651	DESIGN	0.005678436934265436	DEFECT	2.4320702794435324E-4	IMPLEMENTATION	1.7556513774372005E-4	TEST	3.014311621252794E-6	DOCUMENTATION
// This does not support the Cache SQL 'DISTINCT BY (comma-list)' extensions, // but this extension is not supported through Hibernate anyway.	DEFECT	0.9999104343455438	WITHOUT_CLASSIFICATION	8.891916025253984E-5	DESIGN	3.603747820266405E-7	DEFECT	2.0868327813968637E-7	TEST	4.511464331642301E-8	DOCUMENTATION	3.232150018773397E-8	IMPLEMENTATION
// note that this timestamp is not correct if the connection provider // returns an older JDBC connection that was associated with a // transaction that was already begun before openSession() was called // (don't know any possible solution to this!)	DEFECT	0.9397185024900879	WITHOUT_CLASSIFICATION	0.035046237621001494	DESIGN	0.02489028224106606	IMPLEMENTATION	2.8429981117056747E-4	DEFECT	5.7438505380774455E-5	TEST	3.239331293227122E-6	DOCUMENTATION
//no need to take a snapshot - this is a  //performance optimization, but not really //important, except for entities with huge  //mutable property values	DEFECT	0.9940555067497231	WITHOUT_CLASSIFICATION	0.005755951359437048	DEFECT	1.6184226921410754E-4	DESIGN	1.980842355012633E-5	TEST	6.047223915653423E-6	DOCUMENTATION	8.439741600082329E-7	IMPLEMENTATION
// TODO : this really needs to be delayed unitl after we definitively know the operand node type; // where this is currently a problem is parameters for which where we cannot unequivocally // resolve an expected type	DEFECT	0.9983501236043874	DESIGN	0.0012599554424048464	DEFECT	2.485559465544624E-4	IMPLEMENTATION	8.358086563513068E-5	WITHOUT_CLASSIFICATION	5.5118685386497336E-5	DOCUMENTATION	2.6654556317007913E-6	TEST
// First, validate all the enabled filters... //TODO: this implementation has bad performance	DEFECT	0.9837652096212546	IMPLEMENTATION	0.0098090941554597	DESIGN	0.005747439827938159	WITHOUT_CLASSIFICATION	6.457289404254502E-4	DEFECT	1.72231488306516E-5	TEST	1.5304306091437456E-5	DOCUMENTATION
// TODO: what if batchUpdate is a callablestatement ? // calls executeBatch()	DEFECT	0.5073005150324669	WITHOUT_CLASSIFICATION	0.4451686113922249	DESIGN	0.025227410559947722	IMPLEMENTATION	0.018916936348552984	DEFECT	0.0031561570878473567	TEST	2.303695789602966E-4	DOCUMENTATION
// assume that the row was not there since it previously had only null // values, so do an INSERT instead //TODO: does not respect dynamic-insert	DEFECT	0.9992980349421675	WITHOUT_CLASSIFICATION	6.550257529203314E-4	DEFECT	4.284687945345355E-5	DESIGN	2.744166727000925E-6	TEST	1.0887042810528805E-6	DOCUMENTATION	2.59554450597502E-7	IMPLEMENTATION
//TODO: passing null here, because this method is not really used for DOM4J at the moment //      but it is still a bug, if we don't get rid of this!	DEFECT	0.8048799944969167	DESIGN	0.10081325590474219	DEFECT	0.08052216833955025	WITHOUT_CLASSIFICATION	0.008964748110056712	IMPLEMENTATION	0.004585461591350938	TEST	2.3437155738320162E-4	DOCUMENTATION
//note that this implementation is kinda broken //for components with many-to-one associations	DEFECT	0.9968696026023217	WITHOUT_CLASSIFICATION	0.0030249946995943382	DESIGN	5.047629696481122E-5	IMPLEMENTATION	2.9735539744505145E-5	TEST	2.2977308268105612E-5	DEFECT	2.213553106552137E-6	DOCUMENTATION
// TODO: at the point where we are resolving collection references, we don't // know if the uk value has been resolved (depends if it was earlier or // later in the mapping document) - now, we could try and use e.getStatus() // to decide to semiResolve(), trouble is that initializeEntity() reuses // the same array for resolved and hydrated values	DEFECT	0.48085949995544425	DEFECT	0.42585018562979066	WITHOUT_CLASSIFICATION	0.05652226352170084	IMPLEMENTATION	0.024522188895467364	DESIGN	0.01224230984468104	DOCUMENTATION	3.552152915785505E-6	TEST
//TODO: This is assertion is disabled because there is a bug that means the //	DEFECT	0.8379086342320246	WITHOUT_CLASSIFICATION	0.14014550519712785	DEFECT	0.02067891293379942	DESIGN	7.116530241840749E-4	TEST	5.501721990825314E-4	IMPLEMENTATION	5.122413781590897E-6	DOCUMENTATION
// This doesn't actually seem to work but it *might* // work on some dbs. Also it doesn't work if there // are multiple columns of results because it // is not accounting for the suffix: // return new String[] { getDiscriminatorColumnName() };	DEFECT	0.9921691415766861	WITHOUT_CLASSIFICATION	0.007830341600778166	DESIGN	5.153724455792722E-7	DEFECT	8.315050830262183E-10	TEST	6.083565914342989E-10	DOCUMENTATION	1.0228638501076996E-11	IMPLEMENTATION
// TODO: Deal with the "optional" attribute in the <join> mapping; // this code assumes that optional defaults to "true" because it // doesn't actually seem to work in the fetch="join" code // // Note that actual proper handling of optional-ality here is actually // more involved than this patch assumes.  Remember that we might have // multiple <join/> mappings associated with a single entity.  Really // a couple of things need to happen to properly handle optional here: //  1) First and foremost, when handling multiple <join/>s, we really //      should be using the entity root table as the driving table; //      another option here would be to choose some non-optional joined //      table to use as the driving table.  In all likelihood, just using //      the root table is much simplier //  2) Need to add the FK columns corresponding to each joined table //      to the generated select list; these would then be used when //      iterating the result set to determine whether all non-optional //      data is present // My initial thoughts on the best way to deal with this would be // to introduce a new SequentialSelect abstraction that actually gets // generated in the persisters (ok, SingleTable...) and utilized here. // It would encapsulated all this required optional-ality checking...	DEFECT	0.9947238532958248	DESIGN	0.00512739810915523	WITHOUT_CLASSIFICATION	8.849021951371806E-5	IMPLEMENTATION	2.9778605750044612E-5	TEST	2.485253726263066E-5	DEFECT	5.62723249340289E-6	DOCUMENTATION
// todo : what else to do here?	DESIGN	0.8828307664131694	WITHOUT_CLASSIFICATION	0.10865451219099063	IMPLEMENTATION	0.008465422072075807	DESIGN	3.5685592215731845E-5	DEFECT	1.070659062807223E-5	TEST	2.9071409203304287E-6	DOCUMENTATION
//put() has nowait semantics, is this really appropriate? //note that it needs to be async replication, never local or sync	DESIGN	0.5059218820657251	WITHOUT_CLASSIFICATION	0.47951801030134417	DESIGN	0.014207140492993429	DEFECT	2.7388705398874956E-4	IMPLEMENTATION	7.343929076619244E-5	DOCUMENTATION	5.640795182417614E-6	TEST
// 'hibernate.temp.use_jdbc_metadata_defaults' is a temporary magic value. // The need for it is intended to be alleviated with future developement, thus it is // not defined as an Environment constant... // // it is used to control whether we should consult the JDBC metadata to determine // certain Settings default values; it is useful to *not* do this when the database // may not be available (mainly in tools usage).	DESIGN	0.9997910946333307	WITHOUT_CLASSIFICATION	2.0890402101112095E-4	DESIGN	1.0132281955689126E-9	DEFECT	2.481259694849227E-10	TEST	8.429393933838491E-11	DOCUMENTATION	9.990524232778684E-15	IMPLEMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.8190976165294956	DESIGN	0.1808110605659828	WITHOUT_CLASSIFICATION	4.5106370417614995E-5	DEFECT	3.2520323328268544E-5	TEST	8.599942189637658E-6	DOCUMENTATION	5.096268585836502E-6	IMPLEMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.8190976165294956	DESIGN	0.1808110605659828	WITHOUT_CLASSIFICATION	4.5106370417614995E-5	DEFECT	3.2520323328268544E-5	TEST	8.599942189637658E-6	DOCUMENTATION	5.096268585836502E-6	IMPLEMENTATION
// todo : eventually merge this with TreeCache and just add optional opt-lock support there.	DESIGN	0.9874673442945346	WITHOUT_CLASSIFICATION	0.012383913419630405	IMPLEMENTATION	1.4634443037758445E-4	DESIGN	1.1012240360905153E-6	DOCUMENTATION	9.645703063277697E-7	TEST	3.32061114962933E-7	DEFECT
// can happen because of the multiple ways Cache.remove() // can be invoked :(	DESIGN	0.9999990418349404	WITHOUT_CLASSIFICATION	9.500339831456616E-7	DESIGN	3.7239885572083534E-9	DEFECT	3.5185006437276817E-9	IMPLEMENTATION	7.944310474928551E-10	DOCUMENTATION	9.415617258730664E-11	TEST
// work around the "feature" where tree cache is validating the // inserted node during the next transaction.  no idea...	DESIGN	0.9992291704231194	WITHOUT_CLASSIFICATION	4.039432318617889E-4	DEFECT	3.654037791653673E-4	DESIGN	8.457558193290915E-7	IMPLEMENTATION	4.1105975170163993E-7	DOCUMENTATION	2.2575028214450582E-7	TEST
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.9997165249298123	DESIGN	2.7884927077242354E-4	WITHOUT_CLASSIFICATION	3.2111984350841783E-6	DOCUMENTATION	7.576745313648435E-7	DEFECT	4.837037136657434E-7	TEST	1.7322273517035657E-7	IMPLEMENTATION
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.9997165249298123	DESIGN	2.7884927077242354E-4	WITHOUT_CLASSIFICATION	3.2111984350841783E-6	DOCUMENTATION	7.576745313648435E-7	DEFECT	4.837037136657434E-7	TEST	1.7322273517035657E-7	IMPLEMENTATION
// FIXME Hacky workaround to JBCACHE-1202	DESIGN	0.9991733307291484	DESIGN	8.226944625082316E-4	DEFECT	3.145087416113576E-6	IMPLEMENTATION	6.72729869181474E-7	DOCUMENTATION	1.349705953992643E-7	WITHOUT_CLASSIFICATION	2.2020462773820954E-8	TEST
// FIXME Hacky workaround to JBCACHE-1202	DESIGN	0.9991733307291484	DESIGN	8.226944625082316E-4	DEFECT	3.145087416113576E-6	IMPLEMENTATION	6.72729869181474E-7	DOCUMENTATION	1.349705953992643E-7	WITHOUT_CLASSIFICATION	2.2020462773820954E-8	TEST
// TODO: I considered validating TS cache config here, // but decided to defer unti getTimestampsCacheInstance() in case the  // cache is never actually used	DESIGN	0.8333692253425671	IMPLEMENTATION	0.14089536623147556	DESIGN	0.024459448634713152	WITHOUT_CLASSIFICATION	0.0012349151689043886	DEFECT	3.987554220830001E-5	DOCUMENTATION	1.1690801315664376E-6	TEST
// TODO Is this a valid operation on a timestamps cache?	DESIGN	0.9996513605423728	DESIGN	1.9745819991615085E-4	IMPLEMENTATION	1.2696661868045103E-4	WITHOUT_CLASSIFICATION	1.8029329328012343E-5	TEST	4.265704564107178E-6	DEFECT	1.919605138467045E-6	DOCUMENTATION
// TODO Is this a valid operation on a timestamps cache?	DESIGN	0.9996513605423728	DESIGN	1.9745819991615085E-4	IMPLEMENTATION	1.2696661868045103E-4	WITHOUT_CLASSIFICATION	1.8029329328012343E-5	TEST	4.265704564107178E-6	DEFECT	1.919605138467045E-6	DOCUMENTATION
// TODO Why not use the timestamp in a DataVersion?	DESIGN	0.9898565680357646	DESIGN	0.009658282005574233	IMPLEMENTATION	4.1066111599178653E-4	DEFECT	5.784858793476172E-5	DOCUMENTATION	1.4301352655627268E-5	TEST	2.338902078951255E-6	WITHOUT_CLASSIFICATION
// can happen because of the multiple ways Cache.remove() // can be invoked :(	DESIGN	0.9999990418349404	WITHOUT_CLASSIFICATION	9.500339831456616E-7	DESIGN	3.7239885572083534E-9	DEFECT	3.5185006437276817E-9	IMPLEMENTATION	7.944310474928551E-10	DOCUMENTATION	9.415617258730664E-11	TEST
// work around the "feature" where tree cache is validating the // inserted node during the next transaction. no idea...	DESIGN	0.9993916098824561	WITHOUT_CLASSIFICATION	3.1445274179948957E-4	DEFECT	2.922857523968017E-4	DESIGN	1.0749384228125283E-6	IMPLEMENTATION	3.732496556244221E-7	DOCUMENTATION	2.0343526933753127E-7	TEST
//swaldman 2004-02-07: modify to allow null values to signify fall through to c3p0 PoolConfig defaults	DESIGN	0.9985401909934516	WITHOUT_CLASSIFICATION	0.0013134426658644779	DESIGN	1.4494186283570072E-4	DEFECT	7.791240665432749E-7	DOCUMENTATION	3.7455273155975636E-7	IMPLEMENTATION	2.708010498751471E-7	TEST
// turn hibernate.c3p0.* into c3p0.*, so c3p0 // gets a chance to see all hibernate.c3p0.*	DESIGN	0.9998996849890363	WITHOUT_CLASSIFICATION	1.0030890618035165E-4	DESIGN	3.0115378757822625E-9	DEFECT	1.868562509166923E-9	DOCUMENTATION	7.135547492468472E-10	IMPLEMENTATION	5.111283506273046E-10	TEST
//TODO: this bit actually has to be called after all cascades! //      but since identity insert is called *synchronously*, //      instead of asynchronously as other actions, it isn't	DESIGN	0.994232424212473	WITHOUT_CLASSIFICATION	0.00567554769088341	DESIGN	7.387095984304952E-5	DEFECT	1.1543438587515883E-5	TEST	3.4257925746892797E-6	IMPLEMENTATION	3.1879056382916524E-6	DOCUMENTATION
//TODO: reenable if we also fix the above todo	DESIGN	0.6151573760574484	DESIGN	0.3722015050628657	WITHOUT_CLASSIFICATION	0.006753094258871658	TEST	0.004161995095984699	IMPLEMENTATION	9.463007191821527E-4	DOCUMENTATION	7.797288056475E-4	DEFECT
//TODO: inefficient if that cache is just going to ignore the updated state!	DESIGN	0.9864256574748828	WITHOUT_CLASSIFICATION	0.008315691286506124	DESIGN	0.005173702204165698	IMPLEMENTATION	5.787945086639511E-5	TEST	1.7212788498491645E-5	DOCUMENTATION	9.856795080414857E-6	DEFECT
// we may be screwed here since the collection action is about to execute // and we do not know the final owner key value	DESIGN	0.9999848719558843	WITHOUT_CLASSIFICATION	1.5107409912492397E-5	DESIGN	1.887913409386006E-8	DEFECT	1.296650817861769E-9	IMPLEMENTATION	3.897624562106659E-10	TEST	6.865587099431147E-11	DOCUMENTATION
/** Create an action that will evict collection and entity regions based on queryspaces (table names).	DESIGN	0.6110219859737759	DESIGN	0.23755393099196132	WITHOUT_CLASSIFICATION	0.1432826129694446	IMPLEMENTATION	0.00790426181321882	DEFECT	1.7369558824691434E-4	TEST	6.351266335237701E-5	DOCUMENTATION
// todo : what else to do here?	DESIGN	0.8828307664131694	WITHOUT_CLASSIFICATION	0.10865451219099063	IMPLEMENTATION	0.008465422072075807	DESIGN	3.5685592215731845E-5	DEFECT	1.070659062807223E-5	TEST	2.9071409203304287E-6	DOCUMENTATION
// todo : modify the class definition if not already transformed...	DESIGN	0.9937842814519261	WITHOUT_CLASSIFICATION	0.006026649158921701	DESIGN	1.8624056344307164E-4	IMPLEMENTATION	2.2576119947954303E-6	TEST	3.819700744573007E-7	DOCUMENTATION	1.8924364000200396E-7	DEFECT
// todo : what else to do here?	DESIGN	0.8828307664131694	WITHOUT_CLASSIFICATION	0.10865451219099063	IMPLEMENTATION	0.008465422072075807	DESIGN	3.5685592215731845E-5	DEFECT	1.070659062807223E-5	TEST	2.9071409203304287E-6	DOCUMENTATION
// this is called by SessionFactory irregardless; we just disregard here; // could also add a check to SessionFactory to only conditionally call start	DESIGN	0.9887096542665182	WITHOUT_CLASSIFICATION	0.011284528651738191	DESIGN	3.206641431830668E-6	IMPLEMENTATION	1.3533265393486183E-6	DEFECT	7.365366886554604E-7	TEST	5.2057708365621E-7	DOCUMENTATION
// this is called by SessionFactory irregardless; we just disregard here; // could also add a check to SessionFactory to only conditionally call stop	DESIGN	0.9931840101549602	WITHOUT_CLASSIFICATION	0.006808913328970747	DESIGN	4.445945426282484E-6	IMPLEMENTATION	1.5954559540514036E-6	DEFECT	6.804045813508916E-7	TEST	3.5471010729792393E-7	DOCUMENTATION
//TODO: to handle concurrent writes correctly, this should return a Lock to the client	DESIGN	0.9994534554553907	DESIGN	3.1829129202670626E-4	WITHOUT_CLASSIFICATION	1.1216745496263363E-4	DEFECT	4.237993291097913E-5	TEST	4.027692962215116E-5	IMPLEMENTATION	3.3428935086801406E-5	DOCUMENTATION
//put() has nowait semantics, is this really appropriate? //note that it needs to be async replication, never local or sync	DESIGN	0.5059218820657251	WITHOUT_CLASSIFICATION	0.47951801030134417	DESIGN	0.014207140492993429	DEFECT	2.7388705398874956E-4	IMPLEMENTATION	7.343929076619244E-5	DOCUMENTATION	5.640795182417614E-6	TEST
//TODO: to handle concurrent writes correctly, the client should pass in a Lock	DESIGN	0.9821570791568306	DESIGN	0.014041996186812039	WITHOUT_CLASSIFICATION	0.0022313155846573314	IMPLEMENTATION	9.141733394163741E-4	DEFECT	3.882966649609527E-4	TEST	2.671390673226578E-4	DOCUMENTATION
//TODO: assumes all collections disassemble to an array!	DESIGN	0.9994784244918297	WITHOUT_CLASSIFICATION	3.5008574797250927E-4	DEFECT	7.617550685166979E-5	DESIGN	5.009023602932022E-5	IMPLEMENTATION	4.1024245464640725E-5	TEST	4.199771852096115E-6	DOCUMENTATION
//TODO: reuse the PreLoadEvent	DESIGN	0.9642890865512238	WITHOUT_CLASSIFICATION	0.019883682442469634	IMPLEMENTATION	0.015358540243500066	DESIGN	3.406386779281543E-4	DOCUMENTATION	8.52372036582374E-5	TEST	4.281488122017791E-5	DEFECT
// todo: this was added to support initializing an entity's EntityEntry snapshot during reattach; // this should be refactored to instead expose a method to assemble a EntityEntry based on this // state for return.	DESIGN	0.997626734783179	DESIGN	0.00236540822880998	WITHOUT_CLASSIFICATION	5.851041613033923E-6	DEFECT	1.987072084568014E-6	TEST	1.1262902870645696E-8	DOCUMENTATION	7.611410553915419E-9	IMPLEMENTATION
// todo : what is the implication of this?	DESIGN	0.9982584614896881	WITHOUT_CLASSIFICATION	0.0010745161319186476	DESIGN	4.6395345630799385E-4	DOCUMENTATION	1.1626109782078683E-4	DEFECT	6.890396418250765E-5	IMPLEMENTATION	1.7903860082041128E-5	TEST
// use COUNT as the default.  This mimics the old behavior, although // NONE might be a better option moving forward in the case of callable	DESIGN	0.7140036474827866	WITHOUT_CLASSIFICATION	0.2859715283779294	DESIGN	2.4593359971877427E-5	DEFECT	1.5112558608754264E-7	TEST	7.52651174688184E-8	IMPLEMENTATION	4.38860866486576E-9	DOCUMENTATION
/* TODO: joinKeyColumnName & foreignKeyColumnName should be called either here or at a	DESIGN	0.7137137695105107	IMPLEMENTATION	0.1412883867105654	DESIGN	0.13443517751149778	WITHOUT_CLASSIFICATION	0.008636232208718333	DEFECT	0.001723595894522945	TEST	2.0283816418474143E-4	DOCUMENTATION
//TODO: suck this into initLaziness!	DESIGN	0.5467748601009305	WITHOUT_CLASSIFICATION	0.43090487416308937	DESIGN	0.01018528692382542	DEFECT	0.004282652305922849	DOCUMENTATION	0.004264937328477334	IMPLEMENTATION	0.0035873891777545475	TEST
// we have to set up the table later!! yuck	DESIGN	0.9983516879667876	WITHOUT_CLASSIFICATION	0.0016391571853852746	DESIGN	5.74531057850865E-6	DEFECT	2.9157798729679557E-6	IMPLEMENTATION	3.026463110194737E-7	TEST	1.9111106461447366E-7	DOCUMENTATION
//TODO: better to degrade to lazy="false" if uninstrumented	DESIGN	0.7807276449316576	IMPLEMENTATION	0.14346695178813448	DESIGN	0.06988891875918517	WITHOUT_CLASSIFICATION	0.0027556880842634127	DOCUMENTATION	0.0024469951965985	TEST	7.138012401607859E-4	DEFECT
// todo : again, how *should* this work for non-pojo entities?	DESIGN	0.9580223799776381	WITHOUT_CLASSIFICATION	0.02930491954298823	DESIGN	0.010794949250340136	IMPLEMENTATION	0.0017864445116344697	DEFECT	6.250052316595186E-5	TEST	2.8806194232912186E-5	DOCUMENTATION
// TODO: this is a bit of copy/paste from IndexedCollection.createPrimaryKey()	DESIGN	0.519074027401725	IMPLEMENTATION	0.474463912458089	DESIGN	0.00579818190796304	DEFECT	3.514935949381019E-4	TEST	3.0210522479663725E-4	WITHOUT_CLASSIFICATION	1.0279412488130139E-5	DOCUMENTATION
// This inner class implements a case statement....perhaps im being a bit over-clever here	DESIGN	0.7644229313846864	DESIGN	0.23434513043416783	WITHOUT_CLASSIFICATION	0.0011903647186785778	IMPLEMENTATION	3.758999557049788E-5	DEFECT	3.610443897211109E-6	TEST	3.730229994139141E-7	DOCUMENTATION
//TODO: bad implementation, cos it depends upon ordering of mapping doc //      fixing this requires that Collection/PersistentClass gain access //      to the Mappings reference from Configuration (or the filterDefinitions //      map directly) sometime during Configuration.buildSessionFactory //      (after all the types/filter-defs are known and before building //      persisters).	DESIGN	0.9999545571183406	DESIGN	3.419386565248903E-5	IMPLEMENTATION	7.704590971243017E-6	WITHOUT_CLASSIFICATION	3.0458688809458378E-6	DOCUMENTATION	4.0605424585318204E-7	DEFECT	9.25019089199603E-8	TEST
//use of a stringbuffer to workaround a JDK bug	DESIGN	0.9289875872558868	DESIGN	0.0623398289174844	WITHOUT_CLASSIFICATION	0.008259219837124448	DEFECT	2.8749447064669E-4	IMPLEMENTATION	1.1675192715458764E-4	DOCUMENTATION	9.117591702887748E-6	TEST
// hack/workaround as sqlquery impl depend on having a key.	DESIGN	0.9999846095839053	DESIGN	1.3328073864319978E-5	DEFECT	1.259988763314158E-6	IMPLEMENTATION	7.862181978853295E-7	WITHOUT_CLASSIFICATION	8.848368843095201E-9	TEST	7.286900509762157E-9	DOCUMENTATION
//FIXME: get the PersistentClass	DESIGN	0.5672116320319966	WITHOUT_CLASSIFICATION	0.39429028086522044	DESIGN	0.036927356560126995	IMPLEMENTATION	9.003931161123765E-4	TEST	4.3344624159080995E-4	DEFECT	2.3689118495275678E-4	DOCUMENTATION
//FIXME: get the PersistentClass	DESIGN	0.5672116320319966	WITHOUT_CLASSIFICATION	0.39429028086522044	DESIGN	0.036927356560126995	IMPLEMENTATION	9.003931161123765E-4	TEST	4.3344624159080995E-4	DEFECT	2.3689118495275678E-4	DOCUMENTATION
//Icky workaround for MySQL bug:	DESIGN	0.8680703123302212	DESIGN	0.12557925526194783	WITHOUT_CLASSIFICATION	0.006213989016970957	DEFECT	6.852628659235433E-5	DOCUMENTATION	5.0845157075158434E-5	IMPLEMENTATION	1.707194719230401E-5	TEST
//TODO: Somehow add the newly created foreign keys to the internal collection	DESIGN	0.9778219914282423	WITHOUT_CLASSIFICATION	0.017107519520451007	IMPLEMENTATION	0.002754999511482225	DEFECT	0.0014831951860721896	DESIGN	7.753962907244668E-4	DOCUMENTATION	5.6898063027662404E-5	TEST
//TODO possibly relax that	DESIGN	0.9456209208698555	WITHOUT_CLASSIFICATION	0.05414096513025186	DESIGN	1.0587592429013008E-4	IMPLEMENTATION	4.7853669084451313E-5	TEST	4.412946860836727E-5	DOCUMENTATION	4.025493790963215E-5	DEFECT
//TODO possibly relax that	DESIGN	0.9456209208698555	WITHOUT_CLASSIFICATION	0.05414096513025186	DESIGN	1.0587592429013008E-4	IMPLEMENTATION	4.7853669084451313E-5	TEST	4.412946860836727E-5	DOCUMENTATION	4.025493790963215E-5	DEFECT
//TODO possibly relax that	DESIGN	0.9456209208698555	WITHOUT_CLASSIFICATION	0.05414096513025186	DESIGN	1.0587592429013008E-4	IMPLEMENTATION	4.7853669084451313E-5	TEST	4.412946860836727E-5	DOCUMENTATION	4.025493790963215E-5	DEFECT
//use of a stringbuffer to workaround a JDK bug	DESIGN	0.9289875872558868	DESIGN	0.0623398289174844	WITHOUT_CLASSIFICATION	0.008259219837124448	DEFECT	2.8749447064669E-4	IMPLEMENTATION	1.1675192715458764E-4	DOCUMENTATION	9.117591702887748E-6	TEST
//use a degenerated strategy for backward compatibility	DESIGN	0.9999897252733597	WITHOUT_CLASSIFICATION	9.082934329508002E-6	DESIGN	1.1186560478119528E-6	IMPLEMENTATION	2.834057735181172E-8	TEST	2.740642480071142E-8	DEFECT	1.7389260860078315E-8	DOCUMENTATION
// Sets can be just a view of a part of another collection. // do we need to copy it to be sure it won't be changing // underneath us? // ie. this.set.addAll(set);	DESIGN	0.9995120888723062	WITHOUT_CLASSIFICATION	2.2061969546321886E-4	DESIGN	1.585149666437202E-4	DEFECT	1.0691602521442281E-4	IMPLEMENTATION	1.783733343965274E-6	TEST	7.670702837713791E-8	DOCUMENTATION
//note that i parameter is now unused (delete it?)	DESIGN	0.9678346778858296	WITHOUT_CLASSIFICATION	0.0319291725884476	DESIGN	2.2310872465471115E-4	IMPLEMENTATION	7.4866974909795375E-6	TEST	5.141788321359736E-6	DEFECT	4.1231525586324423E-7	DOCUMENTATION
//just to help out during the load (ugly, i know)	DESIGN	0.9522671129972181	WITHOUT_CLASSIFICATION	0.0268750212647202	DESIGN	0.018018332596748485	IMPLEMENTATION	0.0025959072360885074	DEFECT	1.418747480753E-4	DOCUMENTATION	1.0175115714931263E-4	TEST
// TODO : safe to interpret "map.remove(key) == null" as non-dirty?	DESIGN	0.6392442317435524	DESIGN	0.18305361173191884	DEFECT	0.13968465837923216	IMPLEMENTATION	0.03771728348309506	WITHOUT_CLASSIFICATION	2.343339289806319E-4	DOCUMENTATION	6.588073322093263E-5	TEST
// yick!  need this for proper serialization/deserialization handling...	DESIGN	0.9973490976007708	WITHOUT_CLASSIFICATION	0.0016182688567833894	DESIGN	8.612917251900918E-4	DEFECT	1.447367496181596E-4	TEST	2.0222610905183415E-5	DOCUMENTATION	6.382456732325718E-6	IMPLEMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.8190976165294956	DESIGN	0.1808110605659828	WITHOUT_CLASSIFICATION	4.5106370417614995E-5	DEFECT	3.2520323328268544E-5	TEST	8.599942189637658E-6	DOCUMENTATION	5.096268585836502E-6	IMPLEMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.8190976165294956	DESIGN	0.1808110605659828	WITHOUT_CLASSIFICATION	4.5106370417614995E-5	DEFECT	3.2520323328268544E-5	TEST	8.599942189637658E-6	DOCUMENTATION	5.096268585836502E-6	IMPLEMENTATION
//yuck!	DESIGN	0.9949287554202619	WITHOUT_CLASSIFICATION	0.004640552632097137	DESIGN	3.6710774612933603E-4	DEFECT	3.8213820420019025E-5	DOCUMENTATION	1.279034312067926E-5	TEST	1.2580037970964097E-5	IMPLEMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.8190976165294956	DESIGN	0.1808110605659828	WITHOUT_CLASSIFICATION	4.5106370417614995E-5	DEFECT	3.2520323328268544E-5	TEST	8.599942189637658E-6	DOCUMENTATION	5.096268585836502E-6	IMPLEMENTATION
// TODO : not sure this is correct, could not find docs on how to do this.	DESIGN	0.999833606059983	DESIGN	1.6478429815961596E-4	DEFECT	7.462511295519154E-7	IMPLEMENTATION	6.965830019467415E-7	TEST	1.4602254991321294E-7	DOCUMENTATION	2.0785176075363063E-8	WITHOUT_CLASSIFICATION
//HSQL has no Blob/Clob support .... but just put these here for now!	DESIGN	0.9998126497641314	WITHOUT_CLASSIFICATION	1.720832948124568E-4	DESIGN	1.058337946219839E-5	IMPLEMENTATION	2.310487719666353E-6	TEST	2.2531124944701167E-6	DEFECT	1.1996137966394058E-7	DOCUMENTATION
// does this need holdlock also? : return tableName + " with (updlock, rowlock, holdlock)";	DESIGN	0.6268814768927691	WITHOUT_CLASSIFICATION	0.37258484820475857	DESIGN	2.4932930009936963E-4	IMPLEMENTATION	1.8993794766232195E-4	TEST	8.217454831581833E-5	DEFECT	1.2233106394830295E-5	DOCUMENTATION
// sql-server, at least needed this dropped after use; strange!	DESIGN	0.9984097877122537	WITHOUT_CLASSIFICATION	0.0015638954717804275	DESIGN	1.9271985429543676E-5	TEST	5.108803844638437E-6	IMPLEMENTATION	1.562179685155347E-6	DOCUMENTATION	3.738470066300449E-7	DEFECT
// todo : is there really any reason to kkeep trying if this fails once?	DESIGN	0.9743125582243288	WITHOUT_CLASSIFICATION	0.013040511214243012	DEFECT	0.012611133725176154	DESIGN	2.6792314165864754E-5	TEST	8.366828603937145E-6	DOCUMENTATION	6.376934821635904E-7	IMPLEMENTATION
// TBD should this be varbinary($1)? //	DESIGN	0.9772973587831536	WITHOUT_CLASSIFICATION	0.022583790094166972	DESIGN	6.666310942006673E-5	IMPLEMENTATION	3.801412460637868E-5	DEFECT	1.1282324679374091E-5	TEST	2.8915639734819796E-6	DOCUMENTATION
// is it necessary to register %exact since it can only appear in a where clause?	DESIGN	0.941355719089415	WITHOUT_CLASSIFICATION	0.057857987581169584	DESIGN	4.2806853521223573E-4	DEFECT	3.45846553322416E-4	IMPLEMENTATION	9.65375614364285E-6	DOCUMENTATION	2.7244847371614804E-6	TEST
// xmlforest requires a new kind of function constructor	DESIGN	0.9999810587502073	WITHOUT_CLASSIFICATION	1.5238739218866358E-5	IMPLEMENTATION	2.853959422698939E-6	DEFECT	4.792887063559905E-7	TEST	3.6055519640088697E-7	DESIGN	8.707248336987184E-9	DOCUMENTATION
// Does this dialect support the ALTER TABLE syntax?	DESIGN	0.9996842722198219	WITHOUT_CLASSIFICATION	2.4344876162289618E-4	DESIGN	6.21243911851724E-5	IMPLEMENTATION	5.2139575114904915E-6	DOCUMENTATION	3.67045527127122E-6	DEFECT	1.2702145873210276E-6	TEST
// Do we need to qualify index names with the schema name?	DESIGN	0.5193685575754824	IMPLEMENTATION	0.3510537851701615	WITHOUT_CLASSIFICATION	0.12425836215145776	DESIGN	0.003735962640401217	DOCUMENTATION	0.0011524616630960716	DEFECT	4.3087079940109905E-4	TEST
// Does this dialect support the UNIQUE column syntax?	DESIGN	0.998370318076466	WITHOUT_CLASSIFICATION	8.131041161242155E-4	IMPLEMENTATION	7.928489737048347E-4	DESIGN	1.4719152848604912E-5	DOCUMENTATION	6.134849813029949E-6	DEFECT	2.874831043428496E-6	TEST
// Does this dialect support check constraints?	DESIGN	0.9996140482495556	WITHOUT_CLASSIFICATION	2.662083228695102E-4	IMPLEMENTATION	1.0810927351854533E-4	DESIGN	8.272438646999323E-6	DOCUMENTATION	3.2576068464534337E-6	TEST	1.0410856282485001E-7	DEFECT
// Do we need to drop constraints before dropping tables in this dialect?	DESIGN	0.9993901383647452	WITHOUT_CLASSIFICATION	6.070766757088781E-4	DESIGN	1.7517697614784567E-6	TEST	5.984638932968589E-7	DOCUMENTATION	3.374292690693548E-7	DEFECT	9.729662214070027E-8	IMPLEMENTATION
// Does this dialect support the FOR UPDATE syntax?	DESIGN	0.9967369044304616	WITHOUT_CLASSIFICATION	0.0027187020699979054	DESIGN	5.129907453323225E-4	IMPLEMENTATION	1.8778986519115952E-5	DOCUMENTATION	8.005141125367227E-6	DEFECT	4.618626563673415E-6	TEST
// Does this dialect support the Oracle-style FOR UPDATE NOWAIT syntax?	DESIGN	0.998781390625078	WITHOUT_CLASSIFICATION	8.851389111059797E-4	DESIGN	3.2681695806570274E-4	IMPLEMENTATION	4.588354133976718E-6	DOCUMENTATION	1.8329372564461525E-6	TEST	2.3221435999718766E-7	DEFECT
// Does this dialect support FOR UPDATE OF, allowing particular rows to be locked?	DESIGN	0.9920183569496195	DESIGN	0.007857862041151732	WITHOUT_CLASSIFICATION	1.0243137408358057E-4	DEFECT	1.3966216893125933E-5	IMPLEMENTATION	5.631478447886463E-6	DOCUMENTATION	1.7519398040770528E-6	TEST
//note there is a wierd implementation in the client side	DESIGN	0.9998315123506009	WITHOUT_CLASSIFICATION	1.6326472586813707E-4	DESIGN	4.989549767972485E-6	IMPLEMENTATION	1.9895283790499656E-7	DEFECT	2.286231765333935E-8	TEST	1.1558607560723514E-8	DOCUMENTATION
//TODO: never reached, since getTypeName() actually throws an exception!	DESIGN	0.7121750361985596	WITHOUT_CLASSIFICATION	0.22276877442890536	DEFECT	0.06397645027393217	DESIGN	6.584044037955157E-4	IMPLEMENTATION	2.3683141759781254E-4	TEST	1.8450327720948955E-4	DOCUMENTATION
// todo : should we additionally check the current isolation mode explicitly?	DESIGN	0.6617083115253534	IMPLEMENTATION	0.2017731644142374	WITHOUT_CLASSIFICATION	0.1314481444012311	DESIGN	0.0026049365839056235	DOCUMENTATION	0.002453431188559477	DEFECT	1.2011886713111784E-5	TEST
// todo : remove this and just have subclasses use Isolater/IsolatedWork directly...	DESIGN	0.7401608693258985	DESIGN	0.2598203470506088	WITHOUT_CLASSIFICATION	1.2344572861383952E-5	IMPLEMENTATION	4.267382408822409E-6	DEFECT	1.923411671063083E-6	TEST	2.482565512449033E-7	DOCUMENTATION
//TODO: should orphans really be deleted during lock???	DESIGN	0.8557175053756733	DESIGN	0.13530243340849815	WITHOUT_CLASSIFICATION	0.008589425114532452	DEFECT	3.660302855930755E-4	IMPLEMENTATION	1.2851864431708244E-5	TEST	1.1753951271293405E-5	DOCUMENTATION
// orphans should not be deleted during merge??	DESIGN	0.997821186766633	WITHOUT_CLASSIFICATION	0.002177219742946543	DESIGN	7.532133304315669E-7	DEFECT	6.862110612699728E-7	IMPLEMENTATION	1.4648856177349212E-7	TEST	7.57746694495524E-9	DOCUMENTATION
// orphans should not be deleted during copy??	DESIGN	0.9994855858711603	WITHOUT_CLASSIFICATION	5.10857917833925E-4	DESIGN	2.393177556787793E-6	DEFECT	1.0522769962050189E-6	IMPLEMENTATION	1.0053161891713476E-7	TEST	1.0224833775529412E-8	DOCUMENTATION
//I suppose?	DESIGN	0.9827729709435494	WITHOUT_CLASSIFICATION	0.01385233660020828	DESIGN	0.0032805307269348043	IMPLEMENTATION	4.5607570924722516E-5	DEFECT	4.1930890625680065E-5	DOCUMENTATION	6.623267757103366E-6	TEST
//TODO: suck this logic into the collection!	DESIGN	0.5500024979106474	WITHOUT_CLASSIFICATION	0.42936685610092246	DESIGN	0.011488882290147247	IMPLEMENTATION	0.00631348868811151	DEFECT	0.002302307579686138	DOCUMENTATION	5.259674304851262E-4	TEST
// TODO: an alternative is to check if the owner has changed; if it hasn't then // get the ID from collection.getOwner()	DESIGN	0.9952915165025411	IMPLEMENTATION	0.0026048303009681773	DEFECT	0.001501082976964881	WITHOUT_CLASSIFICATION	5.580428348492972E-4	DESIGN	4.0996171348671314E-5	TEST	3.5312133277962554E-6	DOCUMENTATION
//TODO:refactor + make this method private	DESIGN	0.7440076328366622	DESIGN	0.2541012267097936	WITHOUT_CLASSIFICATION	0.0016251363781117562	TEST	2.150209145704188E-4	IMPLEMENTATION	3.586314316444258E-5	DOCUMENTATION	1.5120017697745661E-5	DEFECT
// todo : we can actually just determine this from the incoming EntityEntry-s	DESIGN	0.9977255517210726	WITHOUT_CLASSIFICATION	0.0022741204353070106	DESIGN	1.9582965741196038E-7	DEFECT	4.5681335148427266E-8	IMPLEMENTATION	4.4172361808959113E-8	TEST	4.2160266115884523E-8	DOCUMENTATION
//TODO: Should this be an InitializeEntityEventListener??? (watch out for performance!)	DESIGN	0.998562222410919	DESIGN	9.827215005527596E-4	WITHOUT_CLASSIFICATION	4.17902883072399E-4	IMPLEMENTATION	2.1684116550378084E-5	TEST	1.4014073115766003E-5	DOCUMENTATION	1.455015790037813E-6	DEFECT
//TODO: better to pass the id in as an argument?	DESIGN	0.8886407668396941	DESIGN	0.11102272659091271	WITHOUT_CLASSIFICATION	2.0690171891968857E-4	DOCUMENTATION	9.887330332555277E-5	TEST	1.5377241208777763E-5	IMPLEMENTATION	1.535430593948185E-5	DEFECT
// todo : potentially look at optimizing these two arrays	DESIGN	0.9998539272580441	WITHOUT_CLASSIFICATION	1.2506018069888324E-4	IMPLEMENTATION	1.7467607280993745E-5	DEFECT	2.395945910643019E-6	DESIGN	5.96860756796572E-7	DOCUMENTATION	5.521473086367555E-7	TEST
/* trim done to workaround stupid oracle bug that cant handle whitespaces before a { in a sp */	DESIGN	0.9213221862351426	WITHOUT_CLASSIFICATION	0.06746965466789537	DESIGN	0.010324752341241797	DEFECT	8.668105190792353E-4	IMPLEMENTATION	1.3411908671446198E-5	TEST	3.1843279694597113E-6	DOCUMENTATION
/* trim done to workaround stupid oracle bug that cant handle whitespaces before a { in a sp */	DESIGN	0.9213221862351426	WITHOUT_CLASSIFICATION	0.06746965466789537	DESIGN	0.010324752341241797	DEFECT	8.668105190792353E-4	IMPLEMENTATION	1.3411908671446198E-5	TEST	3.1843279694597113E-6	DOCUMENTATION
//TODO: temporary	DESIGN	0.9846606775640322	DESIGN	0.01422415429860883	WITHOUT_CLASSIFICATION	7.417673077169889E-4	IMPLEMENTATION	2.199412676767855E-4	TEST	9.24825502098452E-5	DEFECT	6.097701175518943E-5	DOCUMENTATION
//TODO: not quite sure about the full implications of this!	DESIGN	0.7251207018052473	WITHOUT_CLASSIFICATION	0.1329179777696412	DESIGN	0.1320485619650043	DEFECT	0.008317229799188555	IMPLEMENTATION	0.0013342768822855579	TEST	2.6125177863301483E-4	DOCUMENTATION
//TODO: not quite sure about the full implications of this!	DESIGN	0.7251207018052473	WITHOUT_CLASSIFICATION	0.1329179777696412	DESIGN	0.1320485619650043	DEFECT	0.008317229799188555	IMPLEMENTATION	0.0013342768822855579	TEST	2.6125177863301483E-4	DOCUMENTATION
//TODO: ugly here:	DESIGN	0.7849020188750332	DESIGN	0.15452351851771756	WITHOUT_CLASSIFICATION	0.05087426688999922	IMPLEMENTATION	0.006922017961042522	DEFECT	0.001881641868740953	TEST	8.965358874666514E-4	DOCUMENTATION
//this is kinda the best we can do...	DESIGN	0.9869770557654008	WITHOUT_CLASSIFICATION	0.012327867466180942	DESIGN	4.5962393689306415E-4	TEST	1.8779434176609952E-4	DEFECT	2.5917178000924766E-5	IMPLEMENTATION	2.1741311758093805E-5	DOCUMENTATION
//TODO: this needn't exclude subclasses...	DESIGN	0.5042485286726407	DESIGN	0.48543430505003565	WITHOUT_CLASSIFICATION	0.005029713538669026	TEST	0.0021420851829775556	IMPLEMENTATION	0.001962719674956135	DEFECT	0.0011826478807209191	DOCUMENTATION
// todo : need map? the prob is a proper key, right?	DESIGN	0.9590467701440292	WITHOUT_CLASSIFICATION	0.03815847654117181	DESIGN	0.0016800566928567488	DEFECT	9.914744386156683E-4	IMPLEMENTATION	9.777311501778233E-5	TEST	2.5449068308867792E-5	DOCUMENTATION
// todo : i'd much rather have this done from #endLoadingCollection(CollectionPersister,LoadingCollectionEntry)...	DESIGN	0.9911964509881861	WITHOUT_CLASSIFICATION	0.008799033691242077	DESIGN	2.891675172513733E-6	DEFECT	1.5737062657492411E-6	TEST	3.635802326999454E-8	DOCUMENTATION	1.358111028827025E-8	IMPLEMENTATION
// todo : hack!!! // NOTE : here we cleanup the load context when we have no more local // LCE entries.  This "works" for the time being because really // only the collection load contexts are implemented.  Long term, // this cleanup should become part of the "close result set" // processing from the (sandbox/jdbc) jdbc-container code.	DESIGN	0.8858915840978138	DESIGN	0.11408380906424911	WITHOUT_CLASSIFICATION	9.456888871594233E-6	IMPLEMENTATION	8.258539291259185E-6	DEFECT	6.666717812315743E-6	TEST	2.2469196194531738E-7	DOCUMENTATION
// todo : should really move this log statement to CollectionType, where this is used from...	DESIGN	0.9764503170331581	WITHOUT_CLASSIFICATION	0.023398828056951836	DESIGN	1.4492074115297473E-4	DEFECT	3.8110748091838182E-6	IMPLEMENTATION	1.7764316018168305E-6	TEST	3.4666232596717935E-7	DOCUMENTATION
// TODO : keep seperate notions of QT[] here for shallow/non-shallow queries...	DESIGN	0.982648981374273	DESIGN	0.010848807998457338	IMPLEMENTATION	0.005434603475419848	DEFECT	6.595589903491892E-4	WITHOUT_CLASSIFICATION	4.015485868598454E-4	TEST	6.4995746408878505E-6	DOCUMENTATION
// TODO : add this info to the translator and aggregate it here...	DESIGN	0.9366146545190402	IMPLEMENTATION	0.06260755757231941	DESIGN	5.744327218508141E-4	TEST	1.1476967320385757E-4	WITHOUT_CLASSIFICATION	7.990564685045364E-5	DOCUMENTATION	8.679866735196289E-6	DEFECT
//TODO: move into collection type, so we can use polymorphism!	DESIGN	0.9079623920212044	DESIGN	0.0915687188919659	WITHOUT_CLASSIFICATION	1.9014189540158646E-4	IMPLEMENTATION	1.7786063645400032E-4	DEFECT	9.093670353527471E-5	DOCUMENTATION	9.949851438857548E-6	TEST
// todo : should we check the current isolation mode explicitly?	DESIGN	0.6176781375923118	WITHOUT_CLASSIFICATION	0.32180975419327074	IMPLEMENTATION	0.05442813726020553	DESIGN	0.004498236023601678	DEFECT	0.0015486108000648607	DOCUMENTATION	3.712413054528195E-5	TEST
//TODO: suck into event class	DESIGN	0.8971693823137267	DESIGN	0.09666624561810412	WITHOUT_CLASSIFICATION	0.004070002783019898	IMPLEMENTATION	0.0016558097670237872	DOCUMENTATION	3.104928874094154E-4	DEFECT	1.280666307162202E-4	TEST
//do we even really need this? the update will fail anyway....	DESIGN	0.6953858148743781	WITHOUT_CLASSIFICATION	0.21050240878022872	DESIGN	0.04521465702373743	DOCUMENTATION	0.030969570234623198	IMPLEMENTATION	0.016820844675205896	DEFECT	0.0011067044118266503	TEST
//hum ... should we cascade anyway? throw an exception? fine like it is?	DESIGN	0.9990152645662325	DESIGN	4.2446348355040824E-4	DEFECT	4.044838206953174E-4	WITHOUT_CLASSIFICATION	9.778316093078822E-5	DOCUMENTATION	4.019889347815946E-5	IMPLEMENTATION	1.7806075112792913E-5	TEST
//TODO: would it be better to do a refresh from db?	DESIGN	0.9711362215757962	DESIGN	0.027359912039673098	IMPLEMENTATION	6.870490381591176E-4	DEFECT	4.736200029515185E-4	WITHOUT_CLASSIFICATION	3.4042663790541004E-4	TEST	2.770705514587145E-6	DOCUMENTATION
//TODO: we use two visitors here, inefficient!	DESIGN	0.5802312646072871	WITHOUT_CLASSIFICATION	0.410729958144714	DESIGN	0.007765907776662872	IMPLEMENTATION	6.794042995563111E-4	DOCUMENTATION	3.867755301398887E-4	DEFECT	2.0668964163977885E-4	TEST
// this class has no proxies (so do a shortcut)	DESIGN	0.999676942609861	WITHOUT_CLASSIFICATION	3.229432872451426E-4	DESIGN	3.4509576926884986E-8	DEFECT	2.865658318707162E-8	DOCUMENTATION	2.557435397648662E-8	TEST	2.5362379756286864E-8	IMPLEMENTATION
//PostLoad is needed for EJB3 //TODO: reuse the PostLoadEvent...	DESIGN	0.564578674576286	IMPLEMENTATION	0.21884175585501944	WITHOUT_CLASSIFICATION	0.20029228562088627	DESIGN	0.014594843028236656	TEST	9.217561671321617E-4	DOCUMENTATION	7.70684752439393E-4	DEFECT
//TODO: put this stuff back in to read snapshot from //      the second-level cache (needs some extra work)	DESIGN	0.9942616447650008	DESIGN	0.004425319214961284	WITHOUT_CLASSIFICATION	6.70924399581602E-4	IMPLEMENTATION	4.845851391949014E-4	DEFECT	1.3363083106628177E-4	DOCUMENTATION	2.3895650195022775E-5	TEST
// null or brand new collection // this will also (inefficiently) handle arrays, which have // no snapshot, so we can't do any better	DESIGN	0.9556534199195342	WITHOUT_CLASSIFICATION	0.044329778642055506	DESIGN	1.3798935216560094E-5	IMPLEMENTATION	2.836743818879977E-6	DOCUMENTATION	1.0339309777312489E-7	TEST	6.2366277016133E-8	DEFECT
//TODO: is this 100% correct?	DESIGN	0.8792404560634497	DESIGN	0.11885329354948351	WITHOUT_CLASSIFICATION	0.001281685936294216	DEFECT	5.074697818309278E-4	TEST	9.831002068535226E-5	DOCUMENTATION	1.8784648256222287E-5	IMPLEMENTATION
// TODO: iteratively get transient entities and retry merge until one of the following conditions: //       1) transientCopyCache.size() == 0 //       2) transientCopyCache.size() is not decreasing and copyCache.size() is not increasing // TODO: find out if retrying can add entities to copyCache (don't think it can...) // For now, just retry once; throw TransientObjectException if there are still any transient entities	DESIGN	0.6056975531199035	DEFECT	0.20853322115692738	WITHOUT_CLASSIFICATION	0.17944758283629667	IMPLEMENTATION	0.0057430944700110785	DESIGN	5.095707346023305E-4	TEST	6.897768225913104E-5	DOCUMENTATION
// entity name will not be available for non-POJO entities // TODO: cache the entity name somewhere so that it is available to this exception	DESIGN	0.9944901007122229	DESIGN	0.005465955418213392	WITHOUT_CLASSIFICATION	2.9104494183884814E-5	TEST	1.0206662608244774E-5	DEFECT	2.800333940616495E-6	IMPLEMENTATION	1.8323788309151167E-6	DOCUMENTATION
//TODO: we should throw an exception if we really *know* for sure   //      that this is a detached instance, rather than just assuming //throw new StaleObjectStateException(entityName, id);	DESIGN	0.5458475077121863	WITHOUT_CLASSIFICATION	0.45363719028348204	DESIGN	4.596728429428763E-4	DEFECT	5.46880820952623E-5	TEST	7.667313097401704E-7	DOCUMENTATION	1.7434798377884784E-7	IMPLEMENTATION
// TODO : perhaps we should additionally require that the incoming entity // version be equivalent to the defined unsaved-value?	DESIGN	0.9463737939790451	DESIGN	0.05362028788150014	IMPLEMENTATION	5.2985960796475154E-6	DEFECT	3.532655171883008E-7	DOCUMENTATION	2.5966594196396197E-7	WITHOUT_CLASSIFICATION	6.611915944804331E-9	TEST
// perhaps this should be an exception since it is only ever used // in the above method?	DESIGN	0.6526743768597509	DESIGN	0.34691370495681373	WITHOUT_CLASSIFICATION	4.0138865382668883E-4	DEFECT	1.0339362494768349E-5	TEST	1.860680733811862E-7	DOCUMENTATION	4.099040659558378E-9	IMPLEMENTATION
// Put a placeholder in entries, so we don't recurse back and try to save() the // same object again. QUESTION: should this be done before onSave() is called? // likewise, should it be done before onUpdate()?	DESIGN	0.5298969955005405	WITHOUT_CLASSIFICATION	0.4698905492917852	DESIGN	2.112727256222409E-4	IMPLEMENTATION	8.052179637010997E-7	DOCUMENTATION	2.4346713982289457E-7	DEFECT	1.337969487385578E-7	TEST
//TODO: merge into one method!	DESIGN	0.8368637030343744	DESIGN	0.1595717324198159	WITHOUT_CLASSIFICATION	0.002251549376761872	DEFECT	5.279940626562542E-4	IMPLEMENTATION	4.077543465196919E-4	TEST	3.772667598716098E-4	DOCUMENTATION
//TODO: refactor to .sql package	DESIGN	0.9535805017407051	DESIGN	0.04574494362946758	WITHOUT_CLASSIFICATION	6.458943343182002E-4	IMPLEMENTATION	1.281242134948143E-5	DOCUMENTATION	1.0395054774170852E-5	TEST	5.4528193854407934E-6	DEFECT
/** * Provides query splitting methods, which were originally in QueryTranslator. * <br> * TODO: This will need to be refactored at some point. * * @author josh */	DESIGN	0.9758083563291572	DESIGN	0.0169964952869291	DOCUMENTATION	0.0036473347559503834	IMPLEMENTATION	0.0028535637441840472	DEFECT	5.52790959154011E-4	WITHOUT_CLASSIFICATION	1.4145892462528214E-4	TEST
//TODO: this is one of the ugliest and most fragile pieces of code in Hibernate....	DESIGN	0.9968230441564472	DESIGN	0.001290480100373285	WITHOUT_CLASSIFICATION	0.0012832820841907888	TEST	5.488222739088674E-4	IMPLEMENTATION	4.598234328206771E-5	DEFECT	8.389041797783346E-6	DOCUMENTATION
// todo : temporary //      needed because currently persister is the one that //      creates and renders the join fragments for inheritence //      hierarchies...	DESIGN	0.9468017311580538	WITHOUT_CLASSIFICATION	0.05267292547720709	DESIGN	4.3678742790832E-4	IMPLEMENTATION	4.283298057191196E-5	TEST	2.9567331833072467E-5	DEFECT	1.615562442569324E-5	DOCUMENTATION
// TODO : better way?!?	DESIGN	0.998504659038115	DESIGN	0.0013853660712087124	IMPLEMENTATION	6.242711692294416E-5	TEST	2.3603950720037392E-5	DEFECT	2.2784582561491286E-5	DOCUMENTATION	1.1592404719116696E-6	WITHOUT_CLASSIFICATION
// Not possible to simply re-use the versionPropertyNode here as it causes // OOM errors due to circularity :(	DESIGN	0.99999937026271	WITHOUT_CLASSIFICATION	6.121944099619363E-7	IMPLEMENTATION	9.046297275225983E-9	DESIGN	8.387738704061682E-9	DEFECT	6.091764139807944E-11	TEST	4.79263427940948E-11	DOCUMENTATION
//TODO:this is only needed during compilation .. can we eliminate the instvar?	DESIGN	0.9997322032570476	DESIGN	2.4911299693093126E-4	WITHOUT_CLASSIFICATION	1.550226980124067E-5	DEFECT	2.067686008679896E-6	TEST	7.366054293825194E-7	DOCUMENTATION	3.771847821085114E-7	IMPLEMENTATION
// TODO : this is a bit dodgy, come up with a better way to check this (plus see above comment)	DESIGN	0.9999119270279635	DESIGN	8.544430035089471E-5	IMPLEMENTATION	1.3818503842519723E-6	TEST	1.1664148028558195E-6	DOCUMENTATION	7.590037960204658E-8	DEFECT	4.506118869953336E-9	WITHOUT_CLASSIFICATION
// even here, if only properties mapped to the "base table" are referenced // in the set and where clauses, this could be handled by the BasicDelegate. // TODO : decide if it is better performance-wise to perform that check, or to simply use the MultiTableUpdateDelegate	DESIGN	0.9999996777143505	DESIGN	3.0859356991564586E-7	WITHOUT_CLASSIFICATION	5.321126054855719E-9	TEST	4.440353656910887E-9	DOCUMENTATION	3.0041200195045993E-9	DEFECT	9.264799155680104E-10	IMPLEMENTATION
//TODO: switch statements are always evil! We already had bugs because  //      of forgotten token types. Use polymorphism for this!	DESIGN	0.9256779968873532	WITHOUT_CLASSIFICATION	0.03744130426973949	DESIGN	0.035175687917830836	DEFECT	0.0015175152559662162	DOCUMENTATION	1.3961785698151822E-4	TEST	4.787781212880713E-5	IMPLEMENTATION
// TODO : we really need to be able to deal with component paths here also; // this is difficult because the hql-sql grammar expects all those node types // to be FromReferenceNodes.  One potential fix here would be to convert the // IntoClause to just use a FromClause/FromElement combo (as a child of the // InsertStatement) and move all this logic into the InsertStatement.  That's // probably the easiest approach (read: least amount of changes to the grammar // and code), but just doesn't feel right as then an insert would contain // 2 from-clauses	DESIGN	0.9983369337511524	DESIGN	0.0016624272633325018	WITHOUT_CLASSIFICATION	3.399648680629395E-7	DOCUMENTATION	2.9618456988727014E-7	TEST	1.738954709737508E-9	IMPLEMENTATION	1.097122428400088E-9	DEFECT
// really there are two situations where it should be ok to allow the insertion // into properties defined on a superclass: //      1) union-subclass with an abstract root entity //      2) discrim-subclass // // #1 is handled already because of the fact that // UnionSubclassPersister alreay always returns 0 // for this call... // // we may want to disallow it for discrim-subclass just for // consistency-sake (currently does not work anyway)...	DESIGN	0.9994094871035143	WITHOUT_CLASSIFICATION	5.90466442289305E-4	DESIGN	2.126622775549838E-8	IMPLEMENTATION	1.6242478609048808E-8	TEST	6.143135095953679E-9	DEFECT	2.8023550625895515E-9	DOCUMENTATION
//yuck!	DESIGN	0.9949287554202619	WITHOUT_CLASSIFICATION	0.004640552632097137	DESIGN	3.6710774612933603E-4	DEFECT	3.8213820420019025E-5	DOCUMENTATION	1.279034312067926E-5	TEST	1.2580037970964097E-5	IMPLEMENTATION
// implicit joins are always(?) ok to reuse	DESIGN	0.997940103167955	WITHOUT_CLASSIFICATION	0.002033071775725746	DESIGN	2.4625354100239418E-5	IMPLEMENTATION	1.2226343851462896E-6	DOCUMENTATION	8.792623157377269E-7	DEFECT	9.780551813971183E-8	TEST
// TODO : we may also want to check that the types here map to exactly one column/JDBC-type //      can't think of a situation where arithmetic expression between multi-column mappings //      makes any sense.	DESIGN	0.7107725177351911	DESIGN	0.27114326057392885	IMPLEMENTATION	0.009921817426159565	DOCUMENTATION	0.004125441547234653	DEFECT	0.003998542375939968	WITHOUT_CLASSIFICATION	3.8420341545695224E-5	TEST
// we do not know either type //BLIND GUESS!	DESIGN	0.9993985926906381	WITHOUT_CLASSIFICATION	5.545884518000722E-4	DESIGN	2.4632263901045857E-5	IMPLEMENTATION	1.8059589373426474E-5	DEFECT	2.43695005006196E-6	DOCUMENTATION	1.6900542373223217E-6	TEST
//TODO: used to be exprNoParens! was this needed?	DESIGN	0.9999967568151203	DESIGN	1.5889234299289524E-6	IMPLEMENTATION	7.727706100946432E-7	DEFECT	6.141908781152028E-7	DOCUMENTATION	1.475260387257989E-7	TEST	1.197739229168159E-7	WITHOUT_CLASSIFICATION
// TODO: Replace this with a more elegant solution.	DESIGN	0.9990962536916222	DESIGN	8.914171982810433E-4	IMPLEMENTATION	9.325739830660378E-6	TEST	1.4820164312781861E-6	DEFECT	1.0082954088981427E-6	WITHOUT_CLASSIFICATION	5.130584260007567E-7	DOCUMENTATION
// TODO: Should this really return null?  If not, figure out something better to do here.	DESIGN	0.9925163699551515	DESIGN	0.007454721941585911	IMPLEMENTATION	1.2161506790521999E-5	WITHOUT_CLASSIFICATION	1.0062739568309705E-5	DEFECT	4.258632500626067E-6	TEST	2.425224403246061E-6	DOCUMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.8190976165294956	DESIGN	0.1808110605659828	WITHOUT_CLASSIFICATION	4.5106370417614995E-5	DEFECT	3.2520323328268544E-5	TEST	8.599942189637658E-6	DOCUMENTATION	5.096268585836502E-6	IMPLEMENTATION
// yuck!	DESIGN	0.9999071203410616	WITHOUT_CLASSIFICATION	7.397340916969475E-5	DESIGN	1.6952803398874062E-5	DEFECT	9.329615209301863E-7	DOCUMENTATION	6.815007657307963E-7	IMPLEMENTATION	3.389840831288726E-7	TEST
// ignore it; the incoming property could not be found so we // cannot be sure what to do here.  At the very least, the // safest is to simply not apply any dereference toggling...	DESIGN	0.9999668108717796	WITHOUT_CLASSIFICATION	2.389868388531887E-5	DESIGN	7.412407921082829E-6	DEFECT	1.7923125503467357E-6	IMPLEMENTATION	5.831192661165626E-8	TEST	2.7411936956740073E-8	DOCUMENTATION
// TODO : most of below was taken verbatim from DotNode; should either delegate this logic or super-type it	DESIGN	0.9999327276334498	DESIGN	4.177092779858493E-5	DEFECT	1.1546485774403315E-5	WITHOUT_CLASSIFICATION	1.0183531782594121E-5	TEST	3.320005526364816E-6	IMPLEMENTATION	4.5141566823820833E-7	DOCUMENTATION
// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and "do the right thing" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character // the trim-source	DESIGN	0.5432623721012327	WITHOUT_CLASSIFICATION	0.4562793771554819	DESIGN	4.208558977913543E-4	IMPLEMENTATION	3.6378601186317975E-5	DOCUMENTATION	1.0132248403147807E-6	TEST	3.019467437445854E-9	DEFECT
// todo: we should really just collect these from the various SelectExpressions, rather than regenerating here	DESIGN	0.9968231830956532	WITHOUT_CLASSIFICATION	0.0031658650484996465	DESIGN	6.756933909401826E-6	DEFECT	2.6040391734300214E-6	IMPLEMENTATION	1.572076355400022E-6	TEST	1.8806408882623585E-8	DOCUMENTATION
//TODO: is this a bit ugly?	DESIGN	0.9988661274519354	DESIGN	8.074320083953033E-4	WITHOUT_CLASSIFICATION	1.662565082439947E-4	IMPLEMENTATION	6.769688121231404E-5	TEST	6.30830100259846E-5	DEFECT	2.9404140187143346E-5	DOCUMENTATION
// Need a better way to define the suffixes here...	DESIGN	0.7844938627821693	WITHOUT_CLASSIFICATION	0.21488713912139848	DESIGN	5.126863783357473E-4	IMPLEMENTATION	9.97805819695243E-5	TEST	4.424789737423833E-6	DEFECT	2.106346389677817E-6	DOCUMENTATION
// TODO: something much better - look at the type of the other expression! // TODO: Have comparisonExpression and/or arithmeticExpression rules complete the resolution of boolean nodes.	DESIGN	0.9999785441733523	DESIGN	9.62823836388271E-6	DEFECT	6.5235156595500925E-6	WITHOUT_CLASSIFICATION	2.62037819839128E-6	IMPLEMENTATION	2.5224235295567873E-6	TEST	1.6127089640451653E-7	DOCUMENTATION
// TODO : what amount of significant digits need to be supported here? //      - from the DecimalFormat docs: //          [significant digits] = [minimum integer digits] + [maximum fraction digits]	DESIGN	0.999220309853423	DESIGN	3.700097124561208E-4	DOCUMENTATION	2.3918686713080483E-4	DEFECT	7.144618703981382E-5	IMPLEMENTATION	6.241586158533791E-5	TEST	3.663151836488487E-5	WITHOUT_CLASSIFICATION
// Needed the "clazz_" check to work around union-subclasses // TODO : is there a way to tell whether a persister is truly discrim-column based inheritence?	DESIGN	0.9998771291225886	DESIGN	9.55207187813458E-5	IMPLEMENTATION	2.0103307456316388E-5	WITHOUT_CLASSIFICATION	4.042740618152608E-6	DEFECT	1.849144318365669E-6	TEST	1.354966237363718E-6	DOCUMENTATION
//We should actually rework this class to not implement Parser //and just process path expressions in the most convenient way.	DESIGN	0.8479138616026533	DESIGN	0.12014976991833765	WITHOUT_CLASSIFICATION	0.028331604344918253	DEFECT	0.0035883781196443484	IMPLEMENTATION	1.571079120163023E-5	DOCUMENTATION	6.75223244895096E-7	TEST
//The class is now way to complex!	DESIGN	0.9998389420215785	WITHOUT_CLASSIFICATION	1.5054599625628935E-4	DESIGN	9.105265539037668E-6	DEFECT	8.266764631311221E-7	IMPLEMENTATION	4.3920467595624094E-7	DOCUMENTATION	1.408354870600146E-7	TEST
//TODO: get SQL rendering out of here	DESIGN	0.9505300646153477	DESIGN	0.04814172892836557	WITHOUT_CLASSIFICATION	6.07629531692333E-4	DEFECT	4.158337027250588E-4	IMPLEMENTATION	2.8062117000098166E-4	TEST	2.4122051868406014E-5	DOCUMENTATION
//TODO: is there a better way?	DESIGN	0.9994418380701371	DESIGN	2.946906024245892E-4	IMPLEMENTATION	2.2455184212394463E-4	WITHOUT_CLASSIFICATION	3.205836787409335E-5	TEST	4.951529372332887E-6	DEFECT	1.909588067854034E-6	DOCUMENTATION
//Must be done here because of side-effect! yuck...	DESIGN	0.975204948717281	WITHOUT_CLASSIFICATION	0.02474809383416636	DESIGN	2.8503112280462913E-5	DEFECT	7.438101987210611E-6	IMPLEMENTATION	6.29408011585436E-6	TEST	4.7221541690990245E-6	DOCUMENTATION
//name from a super query (a bit inelegant that it shows up here)	DESIGN	0.710505996392269	DESIGN	0.28699848393064437	WITHOUT_CLASSIFICATION	0.0017107318672525337	DEFECT	6.148549116034716E-4	IMPLEMENTATION	1.6092206571220437E-4	TEST	9.010832518501223E-6	DOCUMENTATION
// We should reengineer this class so that, rather than the current ad - // hoc linear approach to processing a stream of tokens, we instead // build up a tree of expressions.	DESIGN	0.9911584396004633	DESIGN	0.008785641023176418	WITHOUT_CLASSIFICATION	5.502224487257918E-5	DEFECT	8.184553381577856E-7	DOCUMENTATION	7.812185097721672E-8	TEST	5.542984565840701E-10	IMPLEMENTATION
// this is ugly here, but needed because its a subquery	DESIGN	0.9996345613736001	WITHOUT_CLASSIFICATION	2.805675381995397E-4	DESIGN	6.488551826615472E-5	IMPLEMENTATION	1.1308942884934129E-5	DEFECT	7.689754581814873E-6	TEST	9.868724676690648E-7	DOCUMENTATION
// unhappy about this being public ... is there a better way?	DESIGN	0.9990843668008879	DESIGN	9.130497975835195E-4	WITHOUT_CLASSIFICATION	1.731361111879251E-6	DEFECT	5.781553772083167E-7	TEST	1.760609907102812E-7	IMPLEMENTATION	9.782404870052861E-8	DOCUMENTATION
// Make sure this is a defined parameter and check the incoming value type // TODO: what should be the actual exception type here?	DESIGN	0.968334790368897	DESIGN	0.03141291069584391	IMPLEMENTATION	2.311826090936077E-4	WITHOUT_CLASSIFICATION	1.8367952477697176E-5	DEFECT	2.4638394059416517E-6	TEST	2.8453428183577936E-7	DOCUMENTATION
// TODO : this constructor form is *only* used from constructor directly below us; can it go away?	DESIGN	0.9999915496197194	DESIGN	7.023512602225869E-6	IMPLEMENTATION	5.237849710579272E-7	TEST	4.3917574200209175E-7	WITHOUT_CLASSIFICATION	4.3019681117285793E-7	DEFECT	3.371015407682432E-8	DOCUMENTATION
//TODO: COPY/PASTE FROM SessionImpl, pull up!	DESIGN	0.8979138012353777	WITHOUT_CLASSIFICATION	0.08137620031498387	DESIGN	0.01627145559294188	IMPLEMENTATION	0.003606391502479943	DEFECT	5.768715146655391E-4	DOCUMENTATION	2.552798395510954E-4	TEST
// TODO : should remove this exposure //  and have all references to the session's batcher use the ConnectionManager.	DESIGN	0.9954886746366519	DESIGN	0.002285599429326265	DEFECT	0.0013534919177217938	IMPLEMENTATION	8.364889641705832E-4	WITHOUT_CLASSIFICATION	3.4599123834661755E-5	DOCUMENTATION	1.1459282947484278E-6	TEST
// todo : should this get moved to PersistentContext? // logically, is PersistentContext the "thing" to which an interceptor gets attached?	DESIGN	0.9061063244316945	DESIGN	0.09384494396199637	WITHOUT_CLASSIFICATION	4.376681566087377E-5	DEFECT	4.679902007405081E-6	TEST	2.5609952262867827E-7	DOCUMENTATION	2.8789118182940262E-8	IMPLEMENTATION
// TODO: what type?	DESIGN	0.9191369681085853	IMPLEMENTATION	0.07706004611638387	DESIGN	0.002421978452699994	WITHOUT_CLASSIFICATION	6.171833484350088E-4	DOCUMENTATION	5.427871486326849E-4	DEFECT	2.2103682526320017E-4	TEST
// todo : should seriously consider not allowing a txn to begin from a child session //      can always route the request to the root session...	DESIGN	0.9867578768877178	WITHOUT_CLASSIFICATION	0.0076169131938732485	DESIGN	0.005569088914485706	DEFECT	3.0241877403263658E-5	TEST	2.5679772564495273E-5	IMPLEMENTATION	1.993539553012093E-7	DOCUMENTATION
// short-circuit for performance...	DESIGN	0.9998319770175501	WITHOUT_CLASSIFICATION	1.5786309090162577E-4	DESIGN	3.4197458043314946E-6	DEFECT	3.258664412075213E-6	DOCUMENTATION	2.5879589206493957E-6	IMPLEMENTATION	8.935224113436944E-7	TEST
// not absolutely necessary, but does help with aggressive release	DESIGN	0.9942972021723672	WITHOUT_CLASSIFICATION	0.0056527034708493155	DESIGN	2.9438380786369923E-5	IMPLEMENTATION	1.0452735441390439E-5	TEST	9.619186615082417E-6	DEFECT	5.840539406649731E-7	DOCUMENTATION
// TODO : remove these last two as batcher is no longer managing connections	DESIGN	0.8563466453379156	WITHOUT_CLASSIFICATION	0.1399409487268971	DESIGN	0.0021969898082249612	TEST	0.0011773604819215503	IMPLEMENTATION	2.8352171014250015E-4	DEFECT	5.453393489823151E-5	DOCUMENTATION
//work around a bug in all known connection pools....	DESIGN	0.3910400433913927	DEFECT	0.374749164959376	DESIGN	0.13470002070935763	IMPLEMENTATION	0.09839714997081273	WITHOUT_CLASSIFICATION	0.00109805529549955	DOCUMENTATION	1.5565673561251233E-5	TEST
// TODO : make this the factory for "entity mode related" sessions; // also means making this the target of transaction-synch and the // thing that knows how to cascade things between related sessions // // At that point, perhaps this thing is a "SessionContext", and // ConnectionManager is a "JDBCContext"?  A "SessionContext" should // live in the impl package...	DESIGN	0.999942745881745	DESIGN	5.7204545479620806E-5	IMPLEMENTATION	2.509220862484571E-8	DOCUMENTATION	1.7350201806945476E-8	DEFECT	6.551562825736768E-9	TEST	5.788020742945988E-10	WITHOUT_CLASSIFICATION
//TODO: does this really need to be here? //      does the collection already have //      it's own up-to-date snapshot?	DESIGN	0.6693391962111088	DESIGN	0.30076457065970674	WITHOUT_CLASSIFICATION	0.028159644367730226	DEFECT	0.0012111460217860768	IMPLEMENTATION	4.96936536826625E-4	TEST	2.8506202841621437E-5	DOCUMENTATION
//TODO: the i==entitySpan-1 bit depends upon subclass implementation (very bad)	DESIGN	0.9687747892750885	DESIGN	0.03046311249272937	IMPLEMENTATION	7.558460335245892E-4	WITHOUT_CLASSIFICATION	4.106431718793522E-6	DOCUMENTATION	1.927028231506724E-6	DEFECT	2.187387073962635E-7	TEST
/**	DESIGN	0.7473852745238675	DESIGN	0.09040106869639221	WITHOUT_CLASSIFICATION	0.081661877013653	IMPLEMENTATION	0.0793016833748996	DEFECT	7.006091714672338E-4	DOCUMENTATION	5.494872197204492E-4	TEST
// todo : add the notion of enabled filters to the CacheKey to differentiate filtered collections from non-filtered; //      but CacheKey is currently used for both collections and entities; would ideally need to define two seperate ones; //      currently this works in conjuction with the check on //      DefaultInitializeCollectionEventHandler.initializeCollectionFromCache() (which makes sure to not read from //      cache with enabled filters). // EARLY EXIT!!!!!	DESIGN	0.9994967354503699	WITHOUT_CLASSIFICATION	5.031206590395677E-4	DESIGN	7.482465039783396E-8	DOCUMENTATION	4.738709214061006E-8	TEST	1.0885989860247898E-8	IMPLEMENTATION	1.0792858001608746E-8	DEFECT
//for sets, we should end the collection load after resolving //the entities, since we might call hashCode() on the elements //TODO: or we could do this polymorphically, and have two //      different operations implemented differently for arrays	DESIGN	0.5307705974909973	WITHOUT_CLASSIFICATION	0.46769740388899544	DESIGN	0.0011178240334557851	DEFECT	3.774161481338788E-4	IMPLEMENTATION	2.283753746443283E-5	TEST	1.3920900953297953E-5	DOCUMENTATION
//This is not very nice (and quite slow):	DESIGN	0.9440845763922748	WITHOUT_CLASSIFICATION	0.03956595881575394	DESIGN	0.016247961488572563	DEFECT	8.706351164923782E-5	IMPLEMENTATION	8.631373041974448E-6	DOCUMENTATION	5.808418707446932E-6	TEST
//use of trim() here is ugly?	DESIGN	0.9987895690431359	WITHOUT_CLASSIFICATION	0.0011767506388956244	DESIGN	1.6656344851355413E-5	DEFECT	1.393338062722233E-5	IMPLEMENTATION	1.7822930110610052E-6	DOCUMENTATION	1.3082994788006459E-6	TEST
//TODO: this is too conservative; if all preceding joins were  //      also inner joins, we could use an inner join here	DESIGN	0.9714406244516385	WITHOUT_CLASSIFICATION	0.028215781986942502	DESIGN	1.9249096155298087E-4	DEFECT	1.3204773229805048E-4	TEST	1.324914981931721E-5	DOCUMENTATION	5.805717748648318E-6	IMPLEMENTATION
//TODO: look at the owning property and check that it  //      isn't lazy (by instrumentation)	DESIGN	0.6471419033009779	WITHOUT_CLASSIFICATION	0.34199666925095107	IMPLEMENTATION	0.010360132019115995	DEFECT	4.83627440869854E-4	DOCUMENTATION	1.6235581457098185E-5	TEST	1.4324066280187075E-6	DESIGN
//TODO: inefficient	DESIGN	0.7995959131394199	DESIGN	0.19548970476800226	WITHOUT_CLASSIFICATION	0.003221555921732713	IMPLEMENTATION	0.0012559670264651606	DOCUMENTATION	2.667697999897217E-4	TEST	1.7008934439024153E-4	DEFECT
// why does this matter?	DESIGN	0.9946932743306042	WITHOUT_CLASSIFICATION	0.00519356275026383	DESIGN	7.997434424721713E-5	TEST	1.913772893437052E-5	DEFECT	8.01101244758798E-6	DOCUMENTATION	6.039833502826228E-6	IMPLEMENTATION
// from the collection of associations, locate OJA for the // ManyToOne corresponding to this persister to fully // define the many-to-many; we need that OJA so that we can // use its alias here // TODO : is there a better way here?	DESIGN	0.9999850103485038	DESIGN	1.0143351635009006E-5	IMPLEMENTATION	3.631906655131807E-6	TEST	5.084956576680031E-7	WITHOUT_CLASSIFICATION	4.810376580924265E-7	DEFECT	2.2485989033047865E-7	DOCUMENTATION
//TODO: this class depends directly upon CriteriaImpl,  //      in the impl package ... add a CriteriaImplementor  //      interface	DESIGN	0.9996602079163146	DESIGN	2.71985067883908E-4	WITHOUT_CLASSIFICATION	3.388959510243672E-5	DEFECT	3.257202190569993E-5	IMPLEMENTATION	7.908536424527449E-7	DOCUMENTATION	5.545451508199851E-7	TEST
//TODO: add a CriteriaImplementor interface //      this class depends directly upon CriteriaImpl in the impl package...	DESIGN	0.9875921047755841	DESIGN	0.012245061309524758	WITHOUT_CLASSIFICATION	1.2993638545729752E-4	IMPLEMENTATION	2.9157861813606778E-5	DEFECT	2.84278791870483E-6	DOCUMENTATION	8.96879701534534E-7	TEST
// TODO : not so sure this is needed...	DESIGN	0.9969869754753391	DESIGN	0.0029357858741907773	IMPLEMENTATION	5.2044954244447374E-5	TEST	1.4054881277091106E-5	DEFECT	1.1104281877890318E-5	DOCUMENTATION	3.453307062095923E-8	WITHOUT_CLASSIFICATION
// meant to handle dynamic instantiation queries...(Copy from QueryLoader)	DESIGN	0.999004458477445	WITHOUT_CLASSIFICATION	8.563093389708336E-4	DESIGN	1.3538962901975387E-4	DEFECT	2.375764743601208E-6	IMPLEMENTATION	1.2881260193984765E-6	DOCUMENTATION	1.786638013612405E-7	TEST
// TODO: The order in which entities are saved may matter (e.g., a particular transient entity //       may need to be saved before other transient entities can be saved; //       Keep retrying the batch of transient entities until either: //       1) there are no transient entities left in transientCopyCache //       or 2) no transient entities were saved in the last batch // For now, just run through the transient entities and retry the merge	DESIGN	0.5952441757740413	WITHOUT_CLASSIFICATION	0.24150466898349976	DESIGN	0.14291476284593432	DEFECT	0.019974591310134578	IMPLEMENTATION	2.0646376455462853E-4	TEST	1.5533732183544918E-4	DOCUMENTATION
// todo: this might really even be moved into the cfg package and used as the basis for all things which are configurable.	DESIGN	0.6939258791337811	DESIGN	0.30589228809086494	WITHOUT_CLASSIFICATION	1.6246261589777944E-4	IMPLEMENTATION	1.1988339158290207E-5	DEFECT	6.913882965788094E-6	DOCUMENTATION	4.67937331889356E-7	TEST
// todo : currently expects that the individual with expressions apply to the same sql table join. //      This may not be the case for joined-subclass where the property values //      might be coming from different tables in the joined hierarchy.  At some //      point we should expand this to support that capability.  However, that has //      some difficulties: //          1) the biggest is how to handle ORs when the individual comparisons are //              linked to different sql joins. //          2) here we would need to track each comparison individually, along with //              the join alias to which it applies and then pass that information //              back to the FromElement so it can pass it along to the JoinSequence	DESIGN	0.9599187551733073	WITHOUT_CLASSIFICATION	0.019377732800833478	DEFECT	0.014867386918095766	DESIGN	0.005631250146517669	IMPLEMENTATION	2.046719231199761E-4	DOCUMENTATION	2.030381258882103E-7	TEST
// this function has a template -> restore output, apply the template and write the result out // TODO: Downcast to avoid using an interface?  Yuck.	DESIGN	0.9957599811960091	DESIGN	0.003917532725220811	WITHOUT_CLASSIFICATION	1.3534687542124645E-4	TEST	8.547111879773896E-5	DEFECT	7.665949985138886E-5	IMPLEMENTATION	2.500858469950296E-5	DOCUMENTATION
// at some point the generate phase needs to be moved out of here, // because a single object-level DML might spawn multiple SQL DML // command executions. // // Possible to just move the sql generation for dml stuff, but for // consistency-sake probably best to just move responsiblity for // the generation phase completely into the delegates // (QueryLoader/StatementExecutor) themselves.  Also, not sure why // QueryLoader currently even has a dependency on this at all; does // it need it?  Ideally like to see the walker itself given to the delegates directly...	DESIGN	0.9996581762603194	DESIGN	3.416400075860004E-4	WITHOUT_CLASSIFICATION	1.503406925337856E-7	DEFECT	3.325619963226833E-8	DOCUMENTATION	1.3330948629387174E-10	TEST	1.892893435373819E-12	IMPLEMENTATION
// get the right object from the list ... would it be easier to just call getEntity() ??	DESIGN	0.7492933944736424	DESIGN	0.25007536720967033	WITHOUT_CLASSIFICATION	6.012469642885467E-4	IMPLEMENTATION	2.9269257710058416E-5	DEFECT	4.979998375034572E-7	DOCUMENTATION	2.2409485109798544E-7	TEST
// TODO should we just collect these like with the collections above?	DESIGN	0.667448333303327	IMPLEMENTATION	0.3323182426404494	DESIGN	2.2911525276552425E-4	TEST	1.8683656037781114E-6	DOCUMENTATION	1.4638808189826266E-6	DEFECT	9.765570351453487E-7	WITHOUT_CLASSIFICATION
// todo : better to handle dynamic filters through implicit DynamicFilterParameterSpecification // see the discussion there in DynamicFilterParameterSpecification's javadocs as to why // it is currently not done that way.	DESIGN	0.8934094396501715	DESIGN	0.10658147789608559	WITHOUT_CLASSIFICATION	6.895244427039757E-6	DOCUMENTATION	1.7590088400067812E-6	DEFECT	4.1909781332493925E-7	TEST	9.10266250992947E-9	IMPLEMENTATION
/////////////////////////////////////////////////////////////////////////// // USED ONLY FOR REGRESSION TESTING!!!! // // todo : obviously get rid of all this junk ;) ///////////////////////////////////////////////////////////////////////////	DESIGN	0.9942755748629384	WITHOUT_CLASSIFICATION	0.00552856383205208	DESIGN	1.926231575105424E-4	IMPLEMENTATION	1.8253751544040802E-6	DEFECT	7.756985979977756E-7	DOCUMENTATION	6.370737466696E-7	TEST
//create an index on the key columns??	DESIGN	0.9998298621255558	WITHOUT_CLASSIFICATION	1.598585793827688E-4	DESIGN	6.0013303233161115E-6	DEFECT	2.571059748475245E-6	IMPLEMENTATION	1.1473100626427683E-6	DOCUMENTATION	5.595949269857948E-7	TEST
//TODO: deprecated, remove eventually	DESIGN	0.9559252649654923	DESIGN	0.03099350389793986	WITHOUT_CLASSIFICATION	0.010545600716800956	IMPLEMENTATION	0.0023580091715998744	DEFECT	1.3314449166114376E-4	DOCUMENTATION	4.4476756505740205E-5	TEST
//create an index on the key columns??	DESIGN	0.9998298621255558	WITHOUT_CLASSIFICATION	1.598585793827688E-4	DESIGN	6.0013303233161115E-6	DEFECT	2.571059748475245E-6	IMPLEMENTATION	1.1473100626427683E-6	DOCUMENTATION	5.595949269857948E-7	TEST
//TODO: improve this hack!	DESIGN	0.9998306354701028	DESIGN	1.1044516221286435E-4	WITHOUT_CLASSIFICATION	3.5377104874483545E-5	TEST	1.358759948671635E-5	IMPLEMENTATION	7.331942369086265E-6	DEFECT	2.6227209541549006E-6	DOCUMENTATION
// inheritance cycle detection (paranoid check)	DESIGN	0.9992627426253327	WITHOUT_CLASSIFICATION	5.013781500946785E-4	IMPLEMENTATION	2.3403889922229328E-4	DESIGN	9.421131282661341E-7	DOCUMENTATION	7.453195996372896E-7	DEFECT	1.528926225307637E-7	TEST
//TODO: remove use of instanceof!	DESIGN	0.8244474503533565	DESIGN	0.1711929307336454	WITHOUT_CLASSIFICATION	0.0037577790509744184	DEFECT	3.1322599219279405E-4	IMPLEMENTATION	2.6238064921164423E-4	DOCUMENTATION	2.623322061933872E-5	TEST
//shortcut	DESIGN	0.9987233338046446	WITHOUT_CLASSIFICATION	0.0012586774825129492	DESIGN	9.676620906162838E-6	DEFECT	4.4402121213542865E-6	DOCUMENTATION	2.642850199612773E-6	TEST	1.2290296152882474E-6	IMPLEMENTATION
//TODO: handle the case of a foreign key to something other than the pk	DESIGN	0.9164188475078724	WITHOUT_CLASSIFICATION	0.05586910744471222	IMPLEMENTATION	0.027164843502720387	DESIGN	2.2463005348474056E-4	DOCUMENTATION	1.65072797885518E-4	TEST	1.574986933247227E-4	DEFECT
// create an index on the key columns??	DESIGN	0.9999906405015051	WITHOUT_CLASSIFICATION	7.956081934789573E-6	DESIGN	1.1117932819858093E-6	DEFECT	1.713570055556697E-7	IMPLEMENTATION	7.318510323203387E-8	DOCUMENTATION	4.7081169389820644E-8	TEST
// todo : remove	DESIGN	0.9890023002178652	WITHOUT_CLASSIFICATION	0.010936846287839464	DESIGN	4.294577380108961E-5	IMPLEMENTATION	1.2862397646414097E-5	DEFECT	3.5482316715908453E-6	TEST	1.4970911762654019E-6	DOCUMENTATION
// todo : remove	DESIGN	0.9890023002178652	WITHOUT_CLASSIFICATION	0.010936846287839464	DESIGN	4.294577380108961E-5	IMPLEMENTATION	1.2862397646414097E-5	DEFECT	3.5482316715908453E-6	TEST	1.4970911762654019E-6	DOCUMENTATION
// todo : remove	DESIGN	0.9890023002178652	WITHOUT_CLASSIFICATION	0.010936846287839464	DESIGN	4.294577380108961E-5	IMPLEMENTATION	1.2862397646414097E-5	DEFECT	3.5482316715908453E-6	TEST	1.4970911762654019E-6	DOCUMENTATION
// todo : throw exception?	DESIGN	0.9403128793546676	WITHOUT_CLASSIFICATION	0.05854792111084295	DESIGN	8.934107806318152E-4	DEFECT	1.9886510484535302E-4	IMPLEMENTATION	2.4526689013893614E-5	DOCUMENTATION	2.2396959998396055E-5	TEST
// todo : throw exception?  maybe warn if not the same?	DESIGN	0.9342263471224102	DESIGN	0.043829780430297595	WITHOUT_CLASSIFICATION	0.02094482455515832	DEFECT	9.406473450841649E-4	IMPLEMENTATION	3.1760851904875806E-5	TEST	2.6639695144790333E-5	DOCUMENTATION
//TODO: make EntityPersister *not* depend on SessionFactoryImplementor //interface, if possible	DESIGN	0.9943117115631371	DESIGN	0.00449056707698228	WITHOUT_CLASSIFICATION	7.575619607943714E-4	DEFECT	3.8343728514978137E-4	IMPLEMENTATION	5.085473316988821E-5	TEST	5.867380766685513E-6	DOCUMENTATION
//TODO: is there a more elegant way than downcasting?	DESIGN	0.9999756475784389	DESIGN	1.8439748668954804E-5	WITHOUT_CLASSIFICATION	3.0529311122221753E-6	TEST	1.601560692490226E-6	IMPLEMENTATION	1.1395065972721843E-6	DEFECT	1.1867449026198136E-7	DOCUMENTATION
// TODO: encapsulate the protected instance variables!	DESIGN	0.678517714838018	IMPLEMENTATION	0.31457213747769774	DESIGN	0.0035317966264902215	DEFECT	0.002882017942229036	WITHOUT_CLASSIFICATION	2.591828558109245E-4	DOCUMENTATION	2.371502597540209E-4	TEST
// should indicate that we are processing an INSERT/UPDATE/DELETE // query with a subquery implied via a collection property // function. Here, we need to use the table name itself as the // qualification alias. // TODO : verify this works for all databases... // TODO : is this also the case in non-"indexed" scenarios?	DESIGN	0.9974773177531295	DESIGN	0.002437351988820953	IMPLEMENTATION	7.001816235255803E-5	DEFECT	1.2371190151457106E-5	TEST	1.9756496364110272E-6	DOCUMENTATION	9.652559089409685E-7	WITHOUT_CLASSIFICATION
//TODO: copy/paste from insertRows()	DESIGN	0.9103323522868053	WITHOUT_CLASSIFICATION	0.06913440892792053	DESIGN	0.017938172526092908	DEFECT	0.0013514570629505204	IMPLEMENTATION	0.0010565848690789648	TEST	1.870243271517038E-4	DOCUMENTATION
//TODO: copy/paste from recreate()	DESIGN	0.9703116714563792	WITHOUT_CLASSIFICATION	0.022587823945449923	DESIGN	0.005139339138764099	IMPLEMENTATION	0.0016239769406815932	DEFECT	2.549652522365538E-4	TEST	8.222326648852045E-5	DOCUMENTATION
//should this interface extend PropertyMapping?	DESIGN	0.9785606041027555	DESIGN	0.02142889716630758	WITHOUT_CLASSIFICATION	6.5441450627638695E-6	TEST	2.68246225454994E-6	DEFECT	1.2514543023380585E-6	DOCUMENTATION	2.0669317236777628E-8	IMPLEMENTATION
//ie. the subquery! yuck!	DESIGN	0.9992849479973857	WITHOUT_CLASSIFICATION	6.151497327586965E-4	DESIGN	4.826453945716134E-5	DEFECT	4.291024872869802E-5	IMPLEMENTATION	5.8405190470422496E-6	DOCUMENTATION	2.8869626227524424E-6	TEST
//TODO: move to .sql package!!	DESIGN	0.9325561826582456	DESIGN	0.0664667513762794	WITHOUT_CLASSIFICATION	5.914882286672787E-4	IMPLEMENTATION	1.7615870759214505E-4	DEFECT	1.0978829029527445E-4	DOCUMENTATION	9.963073892039859E-5	TEST
//TODO: code duplication with SingleTableEntityPersister	DESIGN	0.9432632522082306	DESIGN	0.05629291675014497	WITHOUT_CLASSIFICATION	2.0687690857516266E-4	IMPLEMENTATION	1.2585062625291974E-4	TEST	9.136655853889523E-5	DOCUMENTATION	1.9736948257464933E-5	DEFECT
// TODO: It would be really, really nice to use this to also model components!	DESIGN	0.9998575338386648	DESIGN	1.3706355604593934E-4	IMPLEMENTATION	2.6886149974034745E-6	DEFECT	2.3017539456827016E-6	WITHOUT_CLASSIFICATION	3.270544431082032E-7	DOCUMENTATION	8.518190293528346E-8	TEST
//TODO: *two* hashmap lookups here is one too many...	DESIGN	0.9164223720515821	WITHOUT_CLASSIFICATION	0.06158768111564769	DEFECT	0.02180180923017423	DESIGN	1.3924308987547373E-4	IMPLEMENTATION	4.570157634551907E-5	TEST	3.192936375033644E-6	DOCUMENTATION
//TODO: code duplication with JoinedSubclassEntityPersister	DESIGN	0.9816335792732701	DESIGN	0.01834329110673217	WITHOUT_CLASSIFICATION	7.86691740086983E-6	TEST	7.220571926091415E-6	IMPLEMENTATION	7.217342579920722E-6	DOCUMENTATION	8.247880907915641E-7	DEFECT
//perhaps not really necessary...	DESIGN	0.6480018753868918	WITHOUT_CLASSIFICATION	0.34723882727479427	DESIGN	0.0030738892214962803	IMPLEMENTATION	0.0016567709769218961	DEFECT	2.000142000363366E-5	DOCUMENTATION	8.635719891962854E-6	TEST
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass! // was toUnqotedAliasStrings( getIdentiferColumnNames() ) before - now tried // to remove that unqoting and missing aliases..	DESIGN	0.757646935652366	DESIGN	0.241888332530567	WITHOUT_CLASSIFICATION	4.39131169509628E-4	DEFECT	2.15183288586288E-5	TEST	3.0432316617170815E-6	IMPLEMENTATION	1.0390870370575925E-6	DOCUMENTATION
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass! // was toUnqotedAliasStrings( getdiscriminatorColumnName() ) before - now tried // to remove that unqoting and missing aliases..	DESIGN	0.7913002447440962	DESIGN	0.20834795110904808	WITHOUT_CLASSIFICATION	3.4222631833594517E-4	DEFECT	9.16841256062432E-6	TEST	3.1247529081371053E-7	DOCUMENTATION	9.694066837137026E-8	IMPLEMENTATION
//TODO: should we use SELECT .. FOR UPDATE?	DESIGN	0.9893256491812041	DESIGN	0.006843569786427556	IMPLEMENTATION	0.003187164197543966	WITHOUT_CLASSIFICATION	3.736271139599252E-4	DEFECT	1.9547969156553452E-4	DOCUMENTATION	7.451002929893435E-5	TEST
//TODO: optimize this better!	DESIGN	0.49114224335669054	DESIGN	0.34978324735823085	IMPLEMENTATION	0.1446697460267684	WITHOUT_CLASSIFICATION	0.013230842563181185	TEST	6.780087588486374E-4	DOCUMENTATION	4.959119362802949E-4	DEFECT
//TODO: should we allow suffixes on these ?	DESIGN	0.9853354818454706	DESIGN	0.012242195530861645	WITHOUT_CLASSIFICATION	0.0021618863360329268	DEFECT	2.034067223446199E-4	IMPLEMENTATION	3.5864980609571104E-5	TEST	2.1164584680684587E-5	DOCUMENTATION
//This is really ugly, but necessary:	DESIGN	0.8678297393402749	WITHOUT_CLASSIFICATION	0.13034495348199474	DESIGN	0.001782996448894396	DEFECT	1.8975264372330868E-5	IMPLEMENTATION	1.6849052384647375E-5	DOCUMENTATION	6.486412079036619E-6	TEST
//ugly little workaround for fact that createUniqueKeyLoaders() does not handle component properties	DESIGN	0.9972780702257114	DESIGN	0.0027155046526515323	WITHOUT_CLASSIFICATION	4.437150285119009E-6	IMPLEMENTATION	1.4645197568235108E-6	TEST	3.34702734365074E-7	DEFECT	1.8874886087937554E-7	DOCUMENTATION
//TODO: disable batch loading if lockMode > READ?	DESIGN	0.9650402407134461	WITHOUT_CLASSIFICATION	0.01895553827482322	DEFECT	0.008305666819471614	DESIGN	0.004457386531776242	IMPLEMENTATION	0.002712331863770082	TEST	5.288357967127708E-4	DOCUMENTATION
// append the SQL to return the generated identifier //TODO: suck into Insert	DESIGN	0.9290024940935259	WITHOUT_CLASSIFICATION	0.07062779343488801	DESIGN	3.5725924539862803E-4	IMPLEMENTATION	7.3649867394870745E-6	DOCUMENTATION	3.912224523699026E-6	DEFECT	1.176014924205841E-6	TEST
//TODO: I am not so sure about the exception handling in this bit!	DESIGN	0.9392531717403341	DESIGN	0.03276049289108956	WITHOUT_CLASSIFICATION	0.027693292767616957	DEFECT	1.397599147042051E-4	IMPLEMENTATION	7.713326933401118E-5	TEST	7.61494169213133E-5	DOCUMENTATION
//TODO: is this really necessary????	DESIGN	0.9179521202234744	DESIGN	0.08144050746588387	WITHOUT_CLASSIFICATION	2.7617617010431615E-4	DEFECT	2.1490397236893395E-4	IMPLEMENTATION	7.803521061446887E-5	DOCUMENTATION	3.825695755392362E-5	TEST
//TODO: move to .sql package, and refactor with similar things!	DESIGN	0.9544276294068276	DESIGN	0.045544797132345737	WITHOUT_CLASSIFICATION	1.4206028327786688E-5	TEST	5.958784195088256E-6	DEFECT	4.6934449401148016E-6	DOCUMENTATION	2.715203363659456E-6	IMPLEMENTATION
//TODO: implement functionality //  this might be painful to do here, as the "join post processing" for //  the subquery has already been performed (meaning that for //  theta-join dialects, the join conditions have already been moved //  over to the where clause).  A "simple" solution here might to //  perform "join post processing" once for the entire query (including //  any subqueries) at one fell swoop	DESIGN	0.999379836995137	DESIGN	6.093878584121611E-4	IMPLEMENTATION	1.029930749273078E-5	WITHOUT_CLASSIFICATION	3.6609629672243873E-7	DEFECT	1.0072884171277089E-7	DOCUMENTATION	9.013819571568056E-9	TEST
// todo : this eventually needs to be removed	DESIGN	0.9710536940518777	WITHOUT_CLASSIFICATION	0.02740369963183227	DESIGN	0.0012681433822269385	IMPLEMENTATION	2.6324120617669713E-4	DEFECT	7.045770173389755E-6	DOCUMENTATION	4.1759577131275815E-6	TEST
//kinda ugly, but needed for collections with a "." node mapping	DESIGN	0.9749537614967755	WITHOUT_CLASSIFICATION	0.01844005464119818	IMPLEMENTATION	0.005781070755933397	DESIGN	4.3167802079071524E-4	TEST	3.8127840468112913E-4	DEFECT	1.2156680620996085E-5	DOCUMENTATION
//is this ok?	DESIGN	0.9981658288964004	WITHOUT_CLASSIFICATION	0.0018147521225905195	DESIGN	5.52567721493538E-6	DEFECT	5.231333882304115E-6	TEST	5.1684298167291294E-6	DOCUMENTATION	3.4935400951999976E-6	IMPLEMENTATION
//TODO: perhaps this should be some other RuntimeException...	DESIGN	0.9999404972994083	DESIGN	2.7197611204890154E-5	IMPLEMENTATION	1.868407527887435E-5	DEFECT	1.018988515631431E-5	TEST	3.078061192098422E-6	WITHOUT_CLASSIFICATION	3.5306775946217023E-7	DOCUMENTATION
//TODO: make this a bit nicer	DESIGN	0.9740441854112557	DESIGN	0.023990423680841522	WITHOUT_CLASSIFICATION	0.0017062270522341968	TEST	1.766089211545415E-4	IMPLEMENTATION	4.424298418148045E-5	DEFECT	3.8311950332748537E-5	DOCUMENTATION
//Yuck:	DESIGN	0.9624712110719307	WITHOUT_CLASSIFICATION	0.03688168075044089	DESIGN	4.422869169976326E-4	DEFECT	8.64671583068946E-5	IMPLEMENTATION	7.310292855568927E-5	DOCUMENTATION	4.5251173768152134E-5	TEST
//TODO: we should provide some way to get keys of collection of statistics to make it easier to retrieve from a GUI perspective	DESIGN	0.9993549922375317	DESIGN	6.381146089696828E-4	WITHOUT_CLASSIFICATION	3.5689099466523023E-6	IMPLEMENTATION	2.5342535533980157E-6	DEFECT	5.044632217843614E-7	TEST	2.855267767710507E-7	DOCUMENTATION
/**	DESIGN	0.7473852745238675	DESIGN	0.09040106869639221	WITHOUT_CLASSIFICATION	0.081661877013653	IMPLEMENTATION	0.0793016833748996	DEFECT	7.006091714672338E-4	DOCUMENTATION	5.494872197204492E-4	TEST
// TODO : will need reference to session factory to fully complete HHH-1907	DESIGN	0.9870906268608276	DESIGN	0.010099193873276657	WITHOUT_CLASSIFICATION	0.0018780766517051079	IMPLEMENTATION	7.645542446178607E-4	DEFECT	1.5250599806620617E-4	DOCUMENTATION	1.5042371506688613E-5	TEST
//TODO: currently keeps Getters and Setters (instead of PropertyAccessors) because of the way getGetter() and getSetter() are implemented currently; yuck!	DESIGN	0.999987942117294	DESIGN	1.0505006365131423E-5	WITHOUT_CLASSIFICATION	1.325081625362703E-6	DOCUMENTATION	1.3512493244820217E-7	DEFECT	7.021707471964503E-8	IMPLEMENTATION	2.2452708298535365E-8	TEST
//TODO: redesign how PropertyAccessors are acquired...	DESIGN	0.9919896603598687	DESIGN	0.004851781497788315	WITHOUT_CLASSIFICATION	0.002724281715567711	DEFECT	2.6954692118269535E-4	IMPLEMENTATION	1.012789172974554E-4	TEST	6.345058829514303E-5	DOCUMENTATION
// todo : YUCK!!!	DESIGN	0.9980517356205041	WITHOUT_CLASSIFICATION	0.001727995867234461	DESIGN	1.5055029123235014E-4	DEFECT	4.816744980043766E-5	IMPLEMENTATION	1.3674576956415134E-5	DOCUMENTATION	7.876194272208132E-6	TEST
// TODO : YUCK!!!  fix after HHH-1907 is complete	DESIGN	0.9994861655716272	DESIGN	3.42177466381004E-4	DEFECT	7.054593630032623E-5	WITHOUT_CLASSIFICATION	7.002133028003815E-5	IMPLEMENTATION	2.9257112050941484E-5	TEST	1.8325833606029236E-6	DOCUMENTATION
//TODO: need to make the majority of this functionality into a top-level support class for custom impl support	DESIGN	0.9860119838469218	DESIGN	0.010726099846244884	IMPLEMENTATION	0.0028253573723845816	WITHOUT_CLASSIFICATION	3.936144682665853E-4	TEST	3.938323664859073E-5	DOCUMENTATION	3.56122953351551E-6	DEFECT
//TODO: design new lifecycle for ProxyFactory	DESIGN	0.6553932058900277	WITHOUT_CLASSIFICATION	0.33784301336288575	DESIGN	0.003908989709431296	IMPLEMENTATION	0.0016960504567766694	DEFECT	7.673411795024957E-4	DOCUMENTATION	3.913994013761085E-4	TEST
//TODO: would be nice to handle proxy classes elegantly!	DESIGN	0.9721193926381968	DESIGN	0.027147912503939393	WITHOUT_CLASSIFICATION	5.598579343649131E-4	IMPLEMENTATION	9.766159079597604E-5	DEFECT	5.239865386697913E-5	TEST	2.2776678835786913E-5	DOCUMENTATION
// TODO: copy/paste from ManyToOneType	DESIGN	0.5295097533402229	DESIGN	0.3127569034472208	IMPLEMENTATION	0.13601143699502743	WITHOUT_CLASSIFICATION	0.01828657479746697	DEFECT	0.0018091524545329255	TEST	0.0016261789655290532	DOCUMENTATION
//TODO: should this be Session.instantiate(Persister, ...)?	DESIGN	0.9929493986027608	DESIGN	0.006492447665781581	WITHOUT_CLASSIFICATION	3.8646984883387305E-4	DEFECT	8.35509079649221E-5	TEST	7.897885739537642E-5	IMPLEMENTATION	9.154117263594697E-6	DOCUMENTATION
//TODO: this is a bit arbitrary, expose a switch to the user?	DESIGN	0.9879947482874234	DESIGN	0.01112754780034612	WITHOUT_CLASSIFICATION	5.182009344614177E-4	DEFECT	2.539176636480618E-4	IMPLEMENTATION	7.909342703881387E-5	DOCUMENTATION	2.6491887082237393E-5	TEST
//TODO: implement caching?! proxies?!	DESIGN	0.9399111733299007	IMPLEMENTATION	0.03399428242386242	DESIGN	0.023984076782576438	WITHOUT_CLASSIFICATION	9.155552277832574E-4	DEFECT	7.495050653809927E-4	DOCUMENTATION	4.454071704961628E-4	TEST
//TODO: is this right??	DESIGN	0.905909677258421	DESIGN	0.09341134523218347	WITHOUT_CLASSIFICATION	2.516373663502559E-4	TEST	2.070806319657968E-4	DEFECT	1.2472619318196156E-4	IMPLEMENTATION	9.553331789738749E-5	DOCUMENTATION
// is this really necessary?	DESIGN	0.9989337990883241	WITHOUT_CLASSIFICATION	0.0010650536743045409	DESIGN	6.080036368775379E-7	DEFECT	3.119642125420628E-7	DOCUMENTATION	1.1984339136446985E-7	IMPLEMENTATION	1.0742613069078632E-7	TEST
//TODO: move these to a new JoinableType abstract class, //extended by EntityType and PersistentCollectionType:	DESIGN	0.9641527944026237	DESIGN	0.03575786870521335	WITHOUT_CLASSIFICATION	8.830454879435374E-5	TEST	6.411841346912635E-7	DOCUMENTATION	2.3032127204278085E-7	DEFECT	1.6083796193071445E-7	IMPLEMENTATION
// TODO: this is very suboptimal for some subclasses (namely components), // since it does not take advantage of two-phase-load	DESIGN	0.6339554816890095	DESIGN	0.32891291147109714	WITHOUT_CLASSIFICATION	0.03304344001481537	DEFECT	0.003853261669442106	TEST	1.8605074048920798E-4	DOCUMENTATION	4.885441514681873E-5	IMPLEMENTATION
// worrying about proxies is perhaps a little bit of overkill here...	DESIGN	0.9943690130119673	DESIGN	0.0044386026642223774	WITHOUT_CLASSIFICATION	9.797187102589732E-4	DEFECT	2.0482255684723386E-4	IMPLEMENTATION	7.687915511176128E-6	TEST	1.5514119283296887E-7	DOCUMENTATION
// NOTE VERY HACKISH WORKAROUND!! // TODO: Fix this so it will work for non-POJO entity mode	DESIGN	0.999147414534964	DESIGN	7.907147986632891E-4	IMPLEMENTATION	5.78411329845711E-5	DEFECT	3.3471804087374607E-6	TEST	6.822140346779753E-7	DOCUMENTATION	1.389447195895623E-10	WITHOUT_CLASSIFICATION
// TODO: Fix this so it will work for non-POJO entity mode	DESIGN	0.6975400865720205	IMPLEMENTATION	0.2841260870397373	DESIGN	0.016962991308544773	DEFECT	9.115260731656486E-4	TEST	4.421678049360052E-4	DOCUMENTATION	1.7141201595771385E-5	WITHOUT_CLASSIFICATION
// We would probably refactor to have LogicParser (builds a tree of simple // expressions connected by and, or, not), ExpressionParser (translates // from OO terms like foo, foo.Bar, foo.Bar.Baz to SQL terms like // FOOS.ID, FOOS.BAR_ID, etc) and PathExpressionParser (which does much // the same thing it does now)	DESIGN	0.9825946861018359	WITHOUT_CLASSIFICATION	0.017376425628539974	DESIGN	1.3641630052662322E-5	IMPLEMENTATION	8.54090008844311E-6	DEFECT	6.442386177370865E-6	TEST	2.633533056783465E-7	DOCUMENTATION
//TODO: this is a little inefficient, don't need to do a whole //      deep replaceElements() call	DESIGN	0.9999925435039714	DESIGN	5.325696570187341E-6	WITHOUT_CLASSIFICATION	1.985392117449515E-6	IMPLEMENTATION	8.561885936877251E-8	TEST	4.476347584411453E-8	DOCUMENTATION	1.5025006031701398E-8	DEFECT
//workaround for WebLogic	DESIGN	0.8871497396489247	WITHOUT_CLASSIFICATION	0.1125266226953938	DESIGN	1.436967433666122E-4	IMPLEMENTATION	1.29707242738507E-4	DEFECT	3.482466947465687E-5	DOCUMENTATION	1.5409000101758606E-5	TEST
//TODO: this dependency is kinda Bad	DESIGN	0.9882196315081739	DESIGN	0.005159210206416058	WITHOUT_CLASSIFICATION	0.002888704430710811	IMPLEMENTATION	0.0023360860313253267	DEFECT	8.128782587458948E-4	DOCUMENTATION	5.834895646279325E-4	TEST
//ick!	DESIGN	0.9992508025126485	WITHOUT_CLASSIFICATION	6.265940444576057E-4	DESIGN	9.479677872271498E-5	DEFECT	1.6514727872210256E-5	DOCUMENTATION	6.446735091538124E-6	TEST	4.8452012072897865E-6	IMPLEMENTATION
// short cut check...	DESIGN	0.9997176321567295	WITHOUT_CLASSIFICATION	2.036362425950105E-4	DESIGN	7.325666815756997E-5	IMPLEMENTATION	2.2722761907372372E-6	TEST	2.0657913620389593E-6	DOCUMENTATION	1.1368649652107923E-6	DEFECT
// todo : move to StringHelper?	DESIGN	0.8785844158587546	WITHOUT_CLASSIFICATION	0.12136764087420385	DESIGN	3.561733181785095E-5	DEFECT	6.905431429175659E-6	IMPLEMENTATION	2.809219736859687E-6	DOCUMENTATION	2.61128405747441E-6	TEST
//yukky! Don't you have subclasses for that! //TODO race conditions can happen here	DESIGN	0.9712422710902662	DESIGN	0.028100661743173567	WITHOUT_CLASSIFICATION	4.341367133288495E-4	DEFECT	2.0302571759426552E-4	TEST	1.1682779810870284E-5	DOCUMENTATION	8.221955826318926E-6	IMPLEMENTATION
//TODO: We probably should have a StatisticsNotPublishedException, to make it clean	DESIGN	0.9992993072565232	DESIGN	4.651503103471758E-4	WITHOUT_CLASSIFICATION	2.0874506125706798E-4	DEFECT	1.8794087826517353E-5	TEST	6.8886002395102875E-6	IMPLEMENTATION	1.11468380644651E-6	DOCUMENTATION
// FIXME hack to work around fact that calling // Node added = root.addChild( fqn ); doesn't  // properly set the version on the node	DESIGN	0.9954520479017954	DESIGN	0.003807765825547365	DEFECT	4.5528542915544056E-4	WITHOUT_CLASSIFICATION	2.8395295657452485E-4	IMPLEMENTATION	8.158030749962653E-7	DOCUMENTATION	1.3208385242774698E-7	TEST
// TODO: I considered validating the presence of the TS cache here, // but decided to defer unti getQueryCacheInstance() in case the  // cache is never actually used	DESIGN	0.6027762151523847	DESIGN	0.33677208741203424	IMPLEMENTATION	0.03815077360637364	WITHOUT_CLASSIFICATION	0.022215744457547697	DEFECT	8.474250919132282E-5	DOCUMENTATION	4.368624683507904E-7	TEST
//need to do that here rather than in the save event listener to let //the post insert events to have a id-filled entity when IDENTITY is used (EJB3)	DESIGN	0.7077006353371567	DESIGN	0.28710193139061174	WITHOUT_CLASSIFICATION	0.0037435618861702477	IMPLEMENTATION	0.0013265402420121312	DEFECT	1.0563223020948243E-4	TEST	2.1698913839677756E-5	DOCUMENTATION
//TODO: simply remove this override //      if we fix the above todos	DESIGN	0.9974925266212448	WITHOUT_CLASSIFICATION	0.0019156439423849724	DESIGN	4.52163169473124E-4	DEFECT	8.576842705990013E-5	TEST	5.30745755228667E-5	IMPLEMENTATION	8.232643145033248E-7	DOCUMENTATION
// This, is used by SessionFactoryImpl to hand to the generated SessionImpl; // was the only reason I could see that we cannot just use null as // Settings.cacheProvider	DESIGN	0.9995495885147939	WITHOUT_CLASSIFICATION	4.4957460776262956E-4	DESIGN	8.179531496792247E-7	DEFECT	8.94845834518129E-9	IMPLEMENTATION	6.0793083525154414E-9	DOCUMENTATION	3.8965270246950684E-9	TEST
// this is done here 'cos we might only know the type here (ugly!) // TODO: improve this a lot:	DESIGN	0.9998221325021506	DESIGN	1.2120028851547475E-4	DEFECT	4.7691451634172E-5	IMPLEMENTATION	8.109412592123271E-6	TEST	5.734793075470709E-7	WITHOUT_CLASSIFICATION	2.928658001466369E-7	DOCUMENTATION
// todo : would love to have this work on a notification basis //    where the successful binding of an entity/subclass would //    emit a notification which the extendsQueue entries could //    react to...	DESIGN	0.9895893550533517	WITHOUT_CLASSIFICATION	0.010393088347471982	DESIGN	1.6677272108275887E-5	DEFECT	8.388341243615365E-7	TEST	3.6592781424712426E-8	DOCUMENTATION	3.900162280986075E-9	IMPLEMENTATION
// TODO : not sure the best way to handle this. // The non-performant way :	DESIGN	0.9859010914731753	DESIGN	0.013245344339124667	IMPLEMENTATION	4.868214155823724E-4	TEST	2.3723797433683477E-4	DEFECT	1.2327086908353631E-4	DOCUMENTATION	6.233928697245697E-6	WITHOUT_CLASSIFICATION
// would be better to use the element-type to determine // whether the old and the new are equal here; the problem being // we do not necessarily have access to the element type in all // cases	DESIGN	0.9999462465448907	WITHOUT_CLASSIFICATION	5.29809520939486E-5	DESIGN	6.393404472246727E-7	IMPLEMENTATION	1.1473008738803158E-7	DEFECT	1.8268144508536458E-8	DOCUMENTATION	1.6433613730688588E-10	TEST
// This next bit is to allow for both unsaved-value="negative" // and for "older" behavior where version number did not get // seeded if it was already set in the object // TODO: shift it into unsaved-value strategy	DESIGN	0.9881243603011028	DESIGN	0.011839335977373614	WITHOUT_CLASSIFICATION	3.608026237640332E-5	DEFECT	1.109494346878008E-7	TEST	8.923700679376281E-8	IMPLEMENTATION	2.327270566090868E-8	DOCUMENTATION
// merges don't cascade to uninitialized collections //	DESIGN	0.9999787679759196	WITHOUT_CLASSIFICATION	1.8779234751596266E-5	DESIGN	2.066929883944933E-6	IMPLEMENTATION	2.2047489349083762E-7	DEFECT	1.479587389937167E-7	TEST	1.7425812391217807E-8	DOCUMENTATION
// TODO: an alternative is to check if the owner has changed; if it hasn't then // return collection.getOwner()	DESIGN	0.9825993136082256	IMPLEMENTATION	0.015785628557152917	WITHOUT_CLASSIFICATION	8.004779398529255E-4	DESIGN	7.944954287322049E-4	DEFECT	1.7166360490654026E-5	TEST	2.918105545601484E-6	DOCUMENTATION
//it is possible that the tree-walking in OuterJoinLoader can get to //an association defined by a subclass, in which case the property-ref //might refer to a property defined on a subclass of the current class //in this case, the table name is not known - this temporary solution  //assumes that the property-ref refers to a property of the subclass //table that the association belongs to (a reasonable guess) //TODO: fix this, add: OuterJoinLoadable.getSubclassPropertyTableName(String propertyName)	DESIGN	0.8725757449342534	DESIGN	0.12741028413843608	DEFECT	8.305573709761792E-6	DOCUMENTATION	3.6640931748159924E-6	IMPLEMENTATION	1.908518802212949E-6	TEST	9.274162363867266E-8	WITHOUT_CLASSIFICATION
// this only works because collection entries are kept in a sequenced // map by persistence context (maybe we should do like entities and // keep a separate sequences set...) //TODO: calling entrySet on an IdentityMap is SLOW!!	DESIGN	0.9998378517504859	DESIGN	1.2140234547299403E-4	WITHOUT_CLASSIFICATION	3.0015027475209492E-5	DEFECT	5.401791445433576E-6	TEST	4.820076365385675E-6	IMPLEMENTATION	5.090087553451739E-7	DOCUMENTATION
// important, to account for newly saved entities in query // todo : some kind of check for new status...	DESIGN	0.9759322090775605	WITHOUT_CLASSIFICATION	0.011785126940948186	IMPLEMENTATION	0.010322982945568902	DESIGN	0.0018833049611695976	DEFECT	3.958924696241727E-5	TEST	3.6786827790388946E-5	DOCUMENTATION
// brand new collection //TODO: or an array!! we can't lock objects with arrays now??	DESIGN	0.914247963815203	WITHOUT_CLASSIFICATION	0.04080036348103801	DESIGN	0.03683157391772133	DEFECT	0.007789966624658064	IMPLEMENTATION	1.9603459357739626E-4	DOCUMENTATION	1.340975678021623E-4	TEST
//TODO: if object was an uninitialized proxy, this is inefficient, //      resulting in two SQL selects	DESIGN	0.9999353356892192	WITHOUT_CLASSIFICATION	5.952322787041166E-5	DESIGN	3.9101704980145925E-6	TEST	7.604268703725548E-7	DEFECT	4.6474273929160994E-7	DOCUMENTATION	5.742802848430227E-9	IMPLEMENTATION
//before cascade! //TODO: should this be Session.instantiate(Persister, ...)?	DESIGN	0.954944811370772	DESIGN	0.0367314205071766	WITHOUT_CLASSIFICATION	0.0075088872060915446	DEFECT	5.00557721379544E-4	IMPLEMENTATION	2.888628669819718E-4	TEST	2.5460327598238965E-5	DOCUMENTATION
// TODO : absolutely no usages of this constructor form; can it go away?	DESIGN	0.9968326540546671	DESIGN	0.0030633876604176566	IMPLEMENTATION	6.964242071961246E-5	TEST	2.6092300280879995E-5	WITHOUT_CLASSIFICATION	6.832078743849757E-6	DOCUMENTATION	1.3914851710417026E-6	DEFECT
// todo : need to find a clean way to handle the "event source" role // a seperate classs responsible for generating/dispatching events just duplicates most of the Session methods... // passing around seperate reto interceptor, factory, actionQueue, and persistentContext is not manageable...	DESIGN	0.9999210787859439	DESIGN	7.876720238627846E-5	WITHOUT_CLASSIFICATION	1.2571074536244628E-7	TEST	2.5187153813163787E-8	IMPLEMENTATION	2.67490624260419E-9	DOCUMENTATION	4.388642623005304E-10	DEFECT
// todo : remove	DESIGN	0.9890023002178652	WITHOUT_CLASSIFICATION	0.010936846287839464	DESIGN	4.294577380108961E-5	IMPLEMENTATION	1.2862397646414097E-5	DEFECT	3.5482316715908453E-6	TEST	1.4970911762654019E-6	DOCUMENTATION
//aliasRefNode.resolve( false, false, aliasRefNode.getText() ); //TODO: is it kosher to do it here? //TODO: is it kosher to do it here?	DESIGN	0.747816708499091	IMPLEMENTATION	0.25115571828980204	DESIGN	5.006884852414898E-4	WITHOUT_CLASSIFICATION	3.3373621177432486E-4	TEST	1.920982723410751E-4	DEFECT	1.0502417501577912E-6	DOCUMENTATION
// No explicit select expression; render the id and properties // projection lists for every persister in the from clause into // a single 'token node'. //TODO: the only reason we need this stuff now is collection filters, //      we should get rid of derived select clause completely!	DESIGN	0.9958184919137477	DESIGN	0.0032515990662390264	WITHOUT_CLASSIFICATION	8.821598171222986E-4	DEFECT	4.384664966131935E-5	TEST	3.793686282427157E-6	DOCUMENTATION	1.0886694728206802E-7	IMPLEMENTATION
// TODO : an optimization here would be to consider cascade deletes and not gen those delete statements; //      the difficulty is the ordering of the tables here vs the cascade attributes on the persisters -> //          the table info gotten here should really be self-contained (i.e., a class representation //          defining all the needed attributes), then we could then get an array of those	DESIGN	0.998444250363916	DESIGN	0.0013560440868471575	WITHOUT_CLASSIFICATION	1.9787951350678444E-4	IMPLEMENTATION	1.1703842255257505E-6	DEFECT	4.558344124693282E-7	TEST	1.9981709184509786E-7	DOCUMENTATION
// TODO: get SQL rendering out of here, create an AST for the join expressions. // Use the SQL generator grammar to generate the SQL text for the index expression.	DESIGN	0.5667442571228561	DESIGN	0.42093380927140167	WITHOUT_CLASSIFICATION	0.01187200473537932	IMPLEMENTATION	4.106050242215048E-4	TEST	2.4754663063795825E-5	DOCUMENTATION	1.4569183077577562E-5	DEFECT
// TODO : this really needs to be delayed unitl after we definitively know all node types // where this is currently a problem is parameters for which where we cannot unequivocally // resolve an expected type	DESIGN	0.9998951392571099	DESIGN	8.89797772336732E-5	DEFECT	9.862211716154279E-6	DOCUMENTATION	3.6010811906583465E-6	IMPLEMENTATION	1.9826419134010788E-6	WITHOUT_CLASSIFICATION	4.3503083615179864E-7	TEST
// TODO: Figure out a better way to get the FROM elements in a proper tree structure. // If this is not the destination of a many-to-many, add it as a child of the origin.	DESIGN	0.47007605159785015	IMPLEMENTATION	0.33485422162171363	DESIGN	0.13977712581403176	DEFECT	0.05359941718957794	WITHOUT_CLASSIFICATION	0.001526075937378406	TEST	1.6710783944803978E-4	DOCUMENTATION
// work around that crazy issue where the tree contains // "empty" FromElements (no text); afaict, this is caused // by FromElementFactory.createCollectionJoin()	DESIGN	0.7704271248141927	DESIGN	0.22508363740960666	WITHOUT_CLASSIFICATION	0.002800865091347708	IMPLEMENTATION	0.0016164340583362479	DEFECT	3.815667661983811E-5	TEST	3.378194989665382E-5	DOCUMENTATION
//TODO: this class does too many things! we need a different //kind of path expression parser for each of the diffferent //ways in which path expressions can occur	DESIGN	0.9804053887168762	DESIGN	0.01119492007969355	WITHOUT_CLASSIFICATION	0.007383808411374582	DEFECT	9.778470244198895E-4	DOCUMENTATION	3.4600637678244966E-5	TEST	3.435129957427601E-6	IMPLEMENTATION
//real hacky... // used to count the nesting of parentheses	DESIGN	0.9834451821918978	DESIGN	0.015503373912373608	WITHOUT_CLASSIFICATION	9.61957344279429E-4	IMPLEMENTATION	5.114506722174812E-5	DEFECT	2.0994311747355513E-5	DOCUMENTATION	1.7347172479939987E-5	TEST
// TODO : would be really nice to cache the spec on the query-def so as to not have to re-calc the hash; // currently not doable though because of the resultset-ref stuff...	DESIGN	0.9041119315199309	DESIGN	0.051090997941732295	WITHOUT_CLASSIFICATION	0.025461242093390245	DEFECT	0.018966984125513484	IMPLEMENTATION	3.4250313181091616E-4	DOCUMENTATION	2.634118762230648E-5	TEST
//for arrays, we should end the collection load before resolving //the entities, since the actual array instances are not instantiated //during loading //TODO: or we could do this polymorphically, and have two //      different operations implemented differently for arrays	DESIGN	0.3730133066046502	IMPLEMENTATION	0.31168457717482134	DEFECT	0.2725609513377998	DESIGN	0.042285063475255	WITHOUT_CLASSIFICATION	2.926245254594673E-4	TEST	1.63476882014281E-4	DOCUMENTATION
// polymorphism not really handled completely correctly, // perhaps...well, actually its ok, assuming that the // entity name used in the lookup is the same as the // the one used here, which it will be	DESIGN	0.986586033740607	WITHOUT_CLASSIFICATION	0.009433182986078986	DESIGN	0.003970377227288686	DEFECT	1.0174837696732672E-5	IMPLEMENTATION	1.1886433849104226E-7	TEST	1.123439901368175E-7	DOCUMENTATION
// TODO: should "record" how many properties we have reffered to - and if we  //       don't get'em'all we throw an exception! Way better than trial and error ;)	DESIGN	0.9874704137495129	DEFECT	0.012457280292438507	DESIGN	6.866553951260243E-5	WITHOUT_CLASSIFICATION	3.187739290156021E-6	TEST	2.696956825464093E-7	DOCUMENTATION	1.829835631303564E-7	IMPLEMENTATION
// VERY IMPORTANT!!!! - This class needs to be free of any static references // to any CGLIB or Javassist classes.  Otherwise, users will always need both // on their classpaths no matter which (if either) they use. // // Another option here would be to remove the Hibernate.isPropertyInitialized() // method and have the users go through the SessionFactory to get this information.	DESIGN	0.9998357042082452	WITHOUT_CLASSIFICATION	1.6259891116803942E-4	DESIGN	1.1313257793421228E-6	DEFECT	3.8536191175866957E-7	IMPLEMENTATION	1.597355939013173E-7	DOCUMENTATION	2.0457301841946275E-8	TEST
// TODO: is it really neceassry to provide Configuration to CollectionPersisters ? Should it not be enough with associated class ? // or why does EntityPersister's not get access to configuration ? // // The only reason I could see that Configuration gets passed to collection persisters // is so that they can look up the dom4j node name of the entity element in case // no explicit node name was applied at the collection element level.  Are you kidding me? // Trivial to fix then.  Just store and expose the node name on the entity persister // (which the collection persister looks up anyway via other means...).	DESIGN	0.9873610198413777	DESIGN	0.011872404352675715	WITHOUT_CLASSIFICATION	4.523481797509334E-4	IMPLEMENTATION	1.968421145266705E-4	DEFECT	1.0310145856558758E-4	DOCUMENTATION	1.428405310327021E-5	TEST
//for backward compatibility, allow a set with no not-null  //element columns, using all columns in the row locater SQL //TODO: create an implicit not null constraint on all cols?	DESIGN	0.9531122837063474	WITHOUT_CLASSIFICATION	0.044791090978901264	DESIGN	0.0012064761414252645	IMPLEMENTATION	7.877013918930654E-4	DEFECT	8.447889369171678E-5	TEST	1.7968887741181545E-5	DOCUMENTATION
//SPACES //TODO: i'm not sure, but perhaps we should exclude //      abstract denormalized tables?	DESIGN	0.9957596775228205	DESIGN	0.0026535257575723017	DEFECT	8.874716549754468E-4	IMPLEMENTATION	4.5849075076094607E-4	WITHOUT_CLASSIFICATION	1.873503894387916E-4	TEST	5.348392443190389E-5	DOCUMENTATION
//workaround, for backward compatibility of sets with no //not-null columns, assume all columns are used in the //row locator SQL	DESIGN	0.999914080125597	WITHOUT_CLASSIFICATION	8.467455078310742E-5	DESIGN	1.2323517355694312E-6	DEFECT	6.698528077063686E-9	DOCUMENTATION	3.236444521809773E-9	IMPLEMENTATION	3.0369117089418883E-9	TEST
//note that this method could easily be moved up to BasicEntityPersister, //if we ever needed to reuse it from other subclasses	DESIGN	0.9909612800291552	DESIGN	0.009035938712462149	WITHOUT_CLASSIFICATION	2.1472296546172365E-6	TEST	5.744894757220855E-7	IMPLEMENTATION	3.119605385774964E-8	DOCUMENTATION	2.8343198400538403E-8	DEFECT
//index += getPropertyColumnSpan( i ); //TODO:  this is kinda slow...	DESIGN	0.9144444163796336	DEFECT	0.07948896744663524	DESIGN	0.004955258815162423	WITHOUT_CLASSIFICATION	5.278101453481529E-4	TEST	4.967901072696279E-4	IMPLEMENTATION	8.675710595092263E-5	DOCUMENTATION
//TODO: need some caching scheme? really comes down to decision  //      regarding amount of state (if any) kept on PropertyAccessors	DESIGN	0.9846225289829877	DESIGN	0.013007630518607946	DEFECT	0.0017433117078782098	WITHOUT_CLASSIFICATION	4.7334508048686415E-4	TEST	9.187489969763369E-5	IMPLEMENTATION	6.13088103415931E-5	DOCUMENTATION
// TODO: here is why we need to make bytecode provider global :( // TODO : again, fix this after HHH-1907 is complete	DESIGN	0.9999847178555475	DESIGN	1.0872423949610207E-5	IMPLEMENTATION	4.290799271587767E-6	TEST	7.829866004095757E-8	DEFECT	4.055812508926222E-8	DOCUMENTATION	6.444602836627494E-11	WITHOUT_CLASSIFICATION
//TODO: Yuck! This is not quite good enough, it's a quick //hack around the problem of having a to-one association //that refers to an embedded component:	DESIGN	0.9997670157567373	DESIGN	2.3194100936927488E-4	DEFECT	9.147933622252362E-7	IMPLEMENTATION	9.37978578832926E-8	TEST	2.484652799464468E-8	DOCUMENTATION	9.796145221514558E-9	WITHOUT_CLASSIFICATION
// for DOM4J "collections" only // TODO: it would be better if this was done at the higher level by Printer	DESIGN	0.6994164415075248	DESIGN	0.16825673260820267	IMPLEMENTATION	0.10104534190470056	TEST	0.027169467251386973	WITHOUT_CLASSIFICATION	0.003965846995158055	DEFECT	1.4616973302688084E-4	DOCUMENTATION
// would be great to move all this below here into another method that could also be used // from the new scrolling stuff. // // Would need to change the way the max-row stuff is handled (i.e. behind an interface) so // that I could do the control breaking at the means to know when to stop	DESIGN	0.9999561340003695	DESIGN	4.386084565069761E-5	WITHOUT_CLASSIFICATION	3.1927960944881047E-9	TEST	1.474794070424229E-9	DEFECT	2.730856027370443E-10	DOCUMENTATION	2.1330419135200443E-10	IMPLEMENTATION
//TODO: can we *always* use the "null property" approach for everything?	DESIGN	0.9991364903132663	DESIGN	3.2068408781596187E-4	IMPLEMENTATION	2.808329157449536E-4	DEFECT	2.4777004653355383E-4	WITHOUT_CLASSIFICATION	1.3594792598863145E-5	DOCUMENTATION	6.278440404363576E-7	TEST
//polymorphism comment above	DESIGN	0.9999844544093083	WITHOUT_CLASSIFICATION	1.0536036601307936E-5	DESIGN	1.9271283853827294E-6	DEFECT	1.2266398926743823E-6	IMPLEMENTATION	1.0660180522522859E-6	DOCUMENTATION	7.897677600865558E-7	TEST
// some messy, complex stuff here, since createCriteria() can take an // aliased path, or a path rooted at the creating criteria instance	DESIGN	0.9999983201402175	WITHOUT_CLASSIFICATION	8.77079824814819E-7	IMPLEMENTATION	6.600136720957233E-7	DEFECT	9.842364940989205E-8	DESIGN	3.9151958655786254E-8	TEST	5.190677508581374E-9	DOCUMENTATION
//TODO: really bad, evil hack to fix!!!	DESIGN	0.9999695546253613	DESIGN	1.9985766261680185E-5	DEFECT	9.915888522646572E-6	IMPLEMENTATION	4.122709000177041E-7	DOCUMENTATION	9.235782730032679E-8	WITHOUT_CLASSIFICATION	3.909112709954648E-8	TEST
// ugly hack for cases like "elements(foo.bar.collection)" // (multi-part path expression ending in elements or indices)	DESIGN	0.976094219098375	DESIGN	0.018775612585726745	WITHOUT_CLASSIFICATION	0.00510750526652227	DEFECT	1.8890153588000835E-5	IMPLEMENTATION	2.9247565348717396E-6	DOCUMENTATION	8.481392531793568E-7	TEST
// try block is a hack around fact that currently tuplizers are not // given the opportunity to resolve a subclass entity name.  this // allows the (we assume custom) interceptor the ability to // influence this decision if we were not able to based on the // given entityName	DESIGN	0.999557803492952	DESIGN	4.421645480811151E-4	WITHOUT_CLASSIFICATION	1.5265095461069274E-8	DOCUMENTATION	1.079824418429529E-8	TEST	5.710551596949261E-9	IMPLEMENTATION	1.8507593017507268E-10	DEFECT
/////////////////////////////////////////////////////////////////////// // HACK ALERT !!!!!!!!!!!!!!!!!!!!!!!!!!!! // Attempt to work around "ghost" ImpliedFromElements that occasionally // show up between the actual things being joined.  This consistently // occurs from index nodes (at least against many-to-many).  Not sure // if there are other conditions // // Essentially, look-ahead to the next FromElement that actually // writes something to the SQL	DESIGN	0.9997435378196663	DESIGN	2.5594022405135453E-4	WITHOUT_CLASSIFICATION	3.456425124481927E-7	DEFECT	8.871750717471913E-8	TEST	5.698466135418341E-8	DOCUMENTATION	3.061160149196691E-8	IMPLEMENTATION
//init the table here instead of earlier, so that we can get a quoted table name //TODO: would it be better to simply pass the qualified table name, instead of //      splitting it up into schema/catalog/table names	DESIGN	0.5065066516207695	DESIGN	0.48854465909967565	WITHOUT_CLASSIFICATION	0.004864678258426637	IMPLEMENTATION	8.006506791453124E-5	TEST	3.2895892739788433E-6	DEFECT	6.563639396242303E-7	DOCUMENTATION
// TODO : would be great to have a Mapping#hasNonIdentifierPropertyNamedId method // I don't believe that Mapping#getReferencedPropertyType accounts for the identifier property; so // if it returns for a property named 'id', then we should have a non-id field named id	DESIGN	0.9938700528066535	DESIGN	0.005653173091934626	WITHOUT_CLASSIFICATION	2.3409364845588528E-4	DEFECT	2.251560232165379E-4	IMPLEMENTATION	1.7169024282239408E-5	TEST	3.554054572132256E-7	DOCUMENTATION
//TODO: is this really necessary????	DESIGN	0.9179521202234744	DESIGN	0.08144050746588387	WITHOUT_CLASSIFICATION	2.7617617010431615E-4	DEFECT	2.1490397236893395E-4	IMPLEMENTATION	7.803521061446887E-5	DOCUMENTATION	3.825695755392362E-5	TEST
//TODO: ideally we need the construction of PropertyAccessor to take the following: //      1) EntityMode //      2) EntityMode-specific data (i.e., the classname for pojo entities) //      3) Property-specific data based on the EntityMode (i.e., property-name or dom4j-node-name) // The easiest way, with the introduction of the new runtime-metamodel classes, would be the // the following predicates: //      1) PropertyAccessorFactory.getPropertyAccessor() takes references to both a //          org.hibernate.metadata.EntityModeMetadata and org.hibernate.metadata.Property //      2) What is now termed a "PropertyAccessor" stores any values needed from those two //          pieces of information //      3) Code can then simply call PropertyAccess.getGetter() with no parameters; likewise with //          PropertyAccessor.getSetter()	DESIGN	0.9801164621201298	DESIGN	0.018539685241174293	WITHOUT_CLASSIFICATION	9.604835039582005E-4	DEFECT	1.8004642260651923E-4	IMPLEMENTATION	1.6922948853855788E-4	DOCUMENTATION	3.409322359275485E-5	TEST
//TODO: this is temporary in that the end result will probably not take a Property reference per-se.	DESIGN	0.9984815741744661	DESIGN	0.0012800581059618746	DEFECT	2.38182122717152E-4	WITHOUT_CLASSIFICATION	9.769176251233008E-8	TEST	8.732345011038967E-8	DOCUMENTATION	5.816421243724926E-10	IMPLEMENTATION
// todo : this eventually needs to be removed	DESIGN	0.9710536940518777	WITHOUT_CLASSIFICATION	0.02740369963183227	DESIGN	0.0012681433822269385	IMPLEMENTATION	2.6324120617669713E-4	DEFECT	7.045770173389755E-6	DOCUMENTATION	4.1759577131275815E-6	TEST
//TODO: make this a bit nicer	DESIGN	0.9740441854112557	DESIGN	0.023990423680841522	WITHOUT_CLASSIFICATION	0.0017062270522341968	TEST	1.766089211545415E-4	IMPLEMENTATION	4.424298418148045E-5	DEFECT	3.8311950332748537E-5	DOCUMENTATION
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.7209599973207601	DESIGN	0.2789553963625294	WITHOUT_CLASSIFICATION	8.077200180024685E-5	IMPLEMENTATION	2.623236439759349E-6	TEST	6.471470459659814E-7	DOCUMENTATION	5.639314245832756E-7	DEFECT
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.7209599973207601	DESIGN	0.2789553963625294	WITHOUT_CLASSIFICATION	8.077200180024685E-5	IMPLEMENTATION	2.623236439759349E-6	TEST	6.471470459659814E-7	DOCUMENTATION	5.639314245832756E-7	DEFECT
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.7209599973207601	DESIGN	0.2789553963625294	WITHOUT_CLASSIFICATION	8.077200180024685E-5	IMPLEMENTATION	2.623236439759349E-6	TEST	6.471470459659814E-7	DOCUMENTATION	5.639314245832756E-7	DEFECT
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.7209599973207601	DESIGN	0.2789553963625294	WITHOUT_CLASSIFICATION	8.077200180024685E-5	IMPLEMENTATION	2.623236439759349E-6	TEST	6.471470459659814E-7	DOCUMENTATION	5.639314245832756E-7	DEFECT
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.7209599973207601	DESIGN	0.2789553963625294	WITHOUT_CLASSIFICATION	8.077200180024685E-5	IMPLEMENTATION	2.623236439759349E-6	TEST	6.471470459659814E-7	DOCUMENTATION	5.639314245832756E-7	DEFECT
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.7209599973207601	DESIGN	0.2789553963625294	WITHOUT_CLASSIFICATION	8.077200180024685E-5	IMPLEMENTATION	2.623236439759349E-6	TEST	6.471470459659814E-7	DOCUMENTATION	5.639314245832756E-7	DEFECT
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.7209599973207601	DESIGN	0.2789553963625294	WITHOUT_CLASSIFICATION	8.077200180024685E-5	IMPLEMENTATION	2.623236439759349E-6	TEST	6.471470459659814E-7	DOCUMENTATION	5.639314245832756E-7	DEFECT
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.7209599973207601	DESIGN	0.2789553963625294	WITHOUT_CLASSIFICATION	8.077200180024685E-5	IMPLEMENTATION	2.623236439759349E-6	TEST	6.471470459659814E-7	DOCUMENTATION	5.639314245832756E-7	DEFECT
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.9997165249298123	DESIGN	2.7884927077242354E-4	WITHOUT_CLASSIFICATION	3.2111984350841783E-6	DOCUMENTATION	7.576745313648435E-7	DEFECT	4.837037136657434E-7	TEST	1.7322273517035657E-7	IMPLEMENTATION
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.9997165249298123	DESIGN	2.7884927077242354E-4	WITHOUT_CLASSIFICATION	3.2111984350841783E-6	DOCUMENTATION	7.576745313648435E-7	DEFECT	4.837037136657434E-7	TEST	1.7322273517035657E-7	IMPLEMENTATION
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.9997165249298123	DESIGN	2.7884927077242354E-4	WITHOUT_CLASSIFICATION	3.2111984350841783E-6	DOCUMENTATION	7.576745313648435E-7	DEFECT	4.837037136657434E-7	TEST	1.7322273517035657E-7	IMPLEMENTATION
// TODO : probably better to calculate these and pass them in, as it'll be more performant	DESIGN	0.9999832020516563	DESIGN	1.224184792993881E-5	IMPLEMENTATION	2.2240237203655988E-6	DEFECT	1.376162340907559E-6	WITHOUT_CLASSIFICATION	8.053307953881771E-7	DOCUMENTATION	1.505835572610389E-7	TEST
