// todo : add support for READ_WRITE ( + NONSTRICT_READ_WRITE ??? )	IMPLEMENTATION	0.9806859639770529	WITHOUT_CLASSIFICATION	0.017468407305987473	IMPLEMENTATION	0.001816496892344874	DESIGN	1.801302718914144E-5	TEST	5.806003828336475E-6	DOCUMENTATION	5.312793597174946E-6	DEFECT
// todo : add support for READ_WRITE ( + NONSTRICT_READ_WRITE ??? )	IMPLEMENTATION	0.9806859639770529	WITHOUT_CLASSIFICATION	0.017468407305987473	IMPLEMENTATION	0.001816496892344874	DESIGN	1.801302718914144E-5	TEST	5.806003828336475E-6	DOCUMENTATION	5.312793597174946E-6	DEFECT
//TODO: return new Lock(ts);	IMPLEMENTATION	0.9970045797275372	WITHOUT_CLASSIFICATION	0.00235423466958629	DESIGN	4.6347939838685084E-4	IMPLEMENTATION	1.3330323983184675E-4	DEFECT	4.016342289121109E-5	DOCUMENTATION	4.23954176669002E-6	TEST
//TODO: if lock.getTimestamp().equals(ts)	IMPLEMENTATION	0.817846873608792	WITHOUT_CLASSIFICATION	0.14212022040574926	IMPLEMENTATION	0.03273161623675055	DEFECT	0.004445262764239998	DESIGN	0.0019301523746732112	TEST	9.258746097949009E-4	DOCUMENTATION
//TODO mappings.getLogicalTableName(ownerTable)	IMPLEMENTATION	0.9124031184051061	WITHOUT_CLASSIFICATION	0.08187739768161167	IMPLEMENTATION	0.004380794351161379	DESIGN	6.90903954076568E-4	TEST	4.057024908407671E-4	DEFECT	2.420831172035545E-4	DOCUMENTATION
// TODO: handle TypeDefs	IMPLEMENTATION	0.7608267728291475	IMPLEMENTATION	0.16821562293438852	WITHOUT_CLASSIFICATION	0.070114215843488	DESIGN	3.7079820749415335E-4	DOCUMENTATION	2.583501342981002E-4	DEFECT	2.142400511837286E-4	TEST
//TODO check there is no actual definition elemnents when a ref is defined	IMPLEMENTATION	0.9891501032805874	WITHOUT_CLASSIFICATION	0.0062804686384183754	IMPLEMENTATION	0.004478822050302508	DESIGN	4.278597077394956E-5	TEST	2.67353697817166E-5	DOCUMENTATION	2.1084690135989243E-5	DEFECT
// TODO: bindpropertyresults(alias, returnElem)	IMPLEMENTATION	0.6960970163244958	WITHOUT_CLASSIFICATION	0.2725009344398253	DESIGN	0.018859751032703917	DEFECT	0.012304835972725322	IMPLEMENTATION	1.5278131173786244E-4	DOCUMENTATION	8.4680918511842E-5	TEST
//TODO: validate existing of property with the chosen name. (secondpass )	IMPLEMENTATION	0.9921936439063708	WITHOUT_CLASSIFICATION	0.0063910630558180045	DESIGN	0.0010473804015708474	DEFECT	3.0357276685804473E-4	IMPLEMENTATION	4.2689103175094754E-5	DOCUMENTATION	2.1650766207081785E-5	TEST
//TODO: native ids	IMPLEMENTATION	0.9286780118768783	WITHOUT_CLASSIFICATION	0.06549219658584797	IMPLEMENTATION	0.0027164806543698433	DEFECT	0.002525178777375783	DESIGN	5.069720316257226E-4	DOCUMENTATION	8.116007390235817E-5	TEST
//TODO: if we are using identity columns, fetch the identifier	IMPLEMENTATION	0.9999683535692935	WITHOUT_CLASSIFICATION	2.324305390649204E-5	IMPLEMENTATION	2.9197587339464116E-6	DEFECT	2.859710149170882E-6	DESIGN	1.6758033059986903E-6	DOCUMENTATION	9.481046110996056E-7	TEST
//TODO: handle property-ref	IMPLEMENTATION	0.9487222765912622	WITHOUT_CLASSIFICATION	0.03484967841620797	IMPLEMENTATION	0.014194184033849106	DESIGN	0.0020130436647191616	DEFECT	1.6794583080419513E-4	DOCUMENTATION	5.287146315729762E-5	TEST
//TODO: get all properties, not just the fetched ones!	IMPLEMENTATION	0.9982679275947898	WITHOUT_CLASSIFICATION	7.51315345651891E-4	DEFECT	6.009793544362417E-4	DESIGN	3.7179100973417127E-4	IMPLEMENTATION	5.541606172085003E-6	TEST	2.445089215801698E-6	DOCUMENTATION
//TODO: get all properties, not just the fetched ones!	IMPLEMENTATION	0.9982679275947898	WITHOUT_CLASSIFICATION	7.51315345651891E-4	DEFECT	6.009793544362417E-4	DESIGN	3.7179100973417127E-4	IMPLEMENTATION	5.541606172085003E-6	TEST	2.445089215801698E-6	DOCUMENTATION
/**	IMPLEMENTATION	0.7443957798226633	DESIGN	0.09115832074099095	WITHOUT_CLASSIFICATION	0.08242936482622316	DEFECT	0.08071796545512981	IMPLEMENTATION	7.387574675117013E-4	DOCUMENTATION	5.59811687481041E-4	TEST
// TODO: RESTRICT VIOLATION	IMPLEMENTATION	0.6339923511992999	IMPLEMENTATION	0.196509510208715	WITHOUT_CLASSIFICATION	0.14217733196191498	DESIGN	0.023328145707929158	DEFECT	0.0026559700040198575	DOCUMENTATION	0.0013366909181211928	TEST
// TODO: lowercasing done here. Was done "at random" before; maybe not needed at all ?	IMPLEMENTATION	0.9713294230985731	IMPLEMENTATION	0.025480905237425713	DESIGN	0.0029758797430865496	DEFECT	1.7486981501945933E-4	WITHOUT_CLASSIFICATION	3.471503047668562E-5	TEST	4.207075418491304E-6	DOCUMENTATION
// TODO: toLowerCase was not done before. Only used in Template.	IMPLEMENTATION	0.5633752061348538	DESIGN	0.3885346035067792	WITHOUT_CLASSIFICATION	0.04498164353800421	DEFECT	0.00272289062758991	IMPLEMENTATION	2.1026753309560738E-4	TEST	1.7538865967709565E-4	DOCUMENTATION
// add an entry for this type of entity. // we can be assured that all referenced entities have already // been processed, // so specify that this entity is with the latest batch. // doing the batch number before adding the name to the list is // a faster way to get an accurate number.	IMPLEMENTATION	0.9999993314118923	WITHOUT_CLASSIFICATION	6.485373839931236E-7	DESIGN	1.3247447400638982E-8	TEST	6.769859778588304E-9	DOCUMENTATION	3.3248958220874E-11	IMPLEMENTATION	1.6750970036016134E-13	DEFECT
//TODO: avoid this for non-new instances where mightBeDirty==false	IMPLEMENTATION	0.7412382601184839	WITHOUT_CLASSIFICATION	0.25416247920034085	DESIGN	0.0027518047032228433	DEFECT	0.0013868130759950312	IMPLEMENTATION	2.3651762568573166E-4	TEST	2.2412527627163205E-4	DOCUMENTATION
//TODO: optimize away this lookup for entities w/o unsaved-value="undefined"	IMPLEMENTATION	0.9963289897082264	WITHOUT_CLASSIFICATION	0.0035459354507413146	IMPLEMENTATION	1.1192944758301533E-4	DESIGN	6.345935664322366E-6	DOCUMENTATION	4.177379168288669E-6	DEFECT	2.622078616737132E-6	TEST
// we could move this inside if we wanted to // tolerate collection initializations during // collection dirty checking:	IMPLEMENTATION	0.9909059750508641	WITHOUT_CLASSIFICATION	0.009050888026632427	DESIGN	3.719614741112223E-5	TEST	5.46440016002174E-6	IMPLEMENTATION	2.561117145088675E-7	DEFECT	2.2026321782596018E-7	DOCUMENTATION
//TODO: assertion only, could be optimized away	IMPLEMENTATION	0.8690146880957014	WITHOUT_CLASSIFICATION	0.12705999695510262	IMPLEMENTATION	0.001709025441397209	DEFECT	0.0013766518983184329	DESIGN	7.642668659676682E-4	TEST	7.537074351275838E-5	DOCUMENTATION
//TODO: check that entry.getIdentifier().equals(requestedId)	IMPLEMENTATION	0.968298092879728	IMPLEMENTATION	0.031148596260918007	WITHOUT_CLASSIFICATION	3.768180040466577E-4	DESIGN	9.578598030305578E-5	TEST	4.1570183357860155E-5	DEFECT	3.9136691646336205E-5	DOCUMENTATION
//TODO: check that entry.getIdentifier().equals(requestedId)	IMPLEMENTATION	0.968298092879728	IMPLEMENTATION	0.031148596260918007	WITHOUT_CLASSIFICATION	3.768180040466577E-4	DESIGN	9.578598030305578E-5	TEST	4.1570183357860155E-5	DEFECT	3.9136691646336205E-5	DOCUMENTATION
// TODO : why aren't these the same?	IMPLEMENTATION	0.9848400417165779	IMPLEMENTATION	0.014563028843080727	DESIGN	3.164156937785556E-4	DOCUMENTATION	1.3166933411529755E-4	WITHOUT_CLASSIFICATION	1.3080847619725776E-4	TEST	1.803593625015585E-5	DEFECT
//TODO: always true for now, but not if we later decide to support elements() in the from clause	IMPLEMENTATION	0.6513000034043277	DESIGN	0.22198841897649843	DEFECT	0.12275401420626537	WITHOUT_CLASSIFICATION	0.0038004338668826865	IMPLEMENTATION	1.1501223739109512E-4	DOCUMENTATION	4.211730863484905E-5	TEST
// TODO : or should we return 'containsTableAlias'??	IMPLEMENTATION	0.8258205099068509	DESIGN	0.17314320501096397	IMPLEMENTATION	8.588899494516918E-4	WITHOUT_CLASSIFICATION	8.168546092805809E-5	DOCUMENTATION	6.380525720103871E-5	DEFECT	3.1904414604478284E-5	TEST
//TODO: arithmetic expressions, multiple new Foo(...)	IMPLEMENTATION	0.7393727971725718	WITHOUT_CLASSIFICATION	0.24135471978125264	DESIGN	0.018350658314527448	IMPLEMENTATION	6.184086114603768E-4	DEFECT	2.1808560296294164E-4	DOCUMENTATION	8.533051722469222E-5	TEST
//TODO: for some dialects it would be appropriate to add the renderOrderByPropertiesSelect() to other select strings	IMPLEMENTATION	0.7072193198090406	IMPLEMENTATION	0.16233671320426538	DESIGN	0.12739542649168709	WITHOUT_CLASSIFICATION	0.0023689312409815224	TEST	6.20531242079195E-4	DEFECT	5.907801194619335E-5	DOCUMENTATION
//TODO: cache the persister, this shows up in yourkit	IMPLEMENTATION	0.8122508845921348	WITHOUT_CLASSIFICATION	0.1726052648498811	DESIGN	0.01369035286677375	DEFECT	7.028117613414406E-4	IMPLEMENTATION	4.648127276562864E-4	TEST	2.85873202212753E-4	DOCUMENTATION
//TODO: theoretically non-threadsafe...	IMPLEMENTATION	0.5854689061841949	WITHOUT_CLASSIFICATION	0.35303160625806124	IMPLEMENTATION	0.036992947806896076	DEFECT	0.023801482093532274	DESIGN	6.56002861357304E-4	DOCUMENTATION	4.9054795958222145E-5	TEST
// todo : look at optimizing these...	IMPLEMENTATION	0.9979645578443507	WITHOUT_CLASSIFICATION	0.0019225322827972297	IMPLEMENTATION	6.727345603622311E-5	DESIGN	2.465332576622889E-5	DEFECT	1.7027892427655207E-5	TEST	3.955198621912435E-6	DOCUMENTATION
//TODO: maybe call it getRowSelection() ?	IMPLEMENTATION	0.8755923802133149	DESIGN	0.06637587531745394	IMPLEMENTATION	0.05626382958168085	WITHOUT_CLASSIFICATION	0.0015435393609771956	DEFECT	1.5453745547771788E-4	DOCUMENTATION	6.983807109531077E-5	TEST
//TODO: make this handle multiple collection roles!	IMPLEMENTATION	0.8979895353542797	DESIGN	0.09611820829616456	WITHOUT_CLASSIFICATION	0.0033078125159186687	DEFECT	0.0013674713831861	IMPLEMENTATION	0.0011631835843059046	TEST	5.378886614510955E-5	DOCUMENTATION
//TODO: can we limit stored procedures ?!	IMPLEMENTATION	0.9557685160785274	WITHOUT_CLASSIFICATION	0.041569450243888834	DESIGN	0.0021499928422885127	DEFECT	3.969130009641005E-4	IMPLEMENTATION	8.79914441385158E-5	DOCUMENTATION	2.713639019252106E-5	TEST
// TODO: not visible to the user!	IMPLEMENTATION	0.4788011401128321	WITHOUT_CLASSIFICATION	0.25913060918614716	IMPLEMENTATION	0.22824807699355212	DEFECT	0.0313205101020135	DESIGN	0.0017344101998048827	DOCUMENTATION	7.652534056501054E-4	TEST
//TODO: unnecessary for databases with ANSI-style joins	IMPLEMENTATION	0.9101293769032696	WITHOUT_CLASSIFICATION	0.08714693938852744	IMPLEMENTATION	0.0019479028334625395	DESIGN	7.299129258117916E-4	DEFECT	2.5846618490123208E-5	TEST	2.0021330438378686E-5	DOCUMENTATION
//TODO: use these in methods above	IMPLEMENTATION	0.808928583814813	WITHOUT_CLASSIFICATION	0.1878836103857154	DESIGN	0.0026624520337413258	IMPLEMENTATION	3.5759264623723034E-4	TEST	1.3592233155461516E-4	DOCUMENTATION	3.183878793825579E-5	DEFECT
// TODO: better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.9996259907297201	DESIGN	2.177994755405829E-4	IMPLEMENTATION	6.227851683411231E-5	DEFECT	4.613906800965789E-5	WITHOUT_CLASSIFICATION	3.1119253638910064E-5	TEST	1.6672956256578613E-5	DOCUMENTATION
// TODO: better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.9996259907297201	DESIGN	2.177994755405829E-4	IMPLEMENTATION	6.227851683411231E-5	DEFECT	4.613906800965789E-5	WITHOUT_CLASSIFICATION	3.1119253638910064E-5	TEST	1.6672956256578613E-5	DOCUMENTATION
// TODO : temporary initial step towards HHH-1907	IMPLEMENTATION	0.9017442735819665	DESIGN	0.09406158422060305	IMPLEMENTATION	0.002194774762326328	DEFECT	0.0014931655614732124	WITHOUT_CLASSIFICATION	3.2007115451827394E-4	TEST	1.861307191124657E-4	DOCUMENTATION
// todo : remove this once ComponentMetamodel is complete and merged	IMPLEMENTATION	0.9701851118902979	DESIGN	0.029814550881110617	WITHOUT_CLASSIFICATION	3.184348095504564E-7	TEST	9.215881652860406E-9	IMPLEMENTATION	7.973583850027718E-9	DOCUMENTATION	1.6043165247756043E-9	DEFECT
//TODO handle supportsNotNullUnique=false, but such a case does not exist in the wild so far	IMPLEMENTATION	0.9813832059801043	WITHOUT_CLASSIFICATION	0.016797836646837903	DEFECT	0.0013250457899538996	IMPLEMENTATION	2.321874205449114E-4	DESIGN	2.244178794947233E-4	TEST	3.730628306422683E-5	DOCUMENTATION
// TODO : still need to make CollectionPersisters EntityMode-aware	IMPLEMENTATION	0.6901123280978988	IMPLEMENTATION	0.29477160252824747	DESIGN	0.00913379693278714	TEST	0.0029950447505007333	DOCUMENTATION	0.0016111326210643188	WITHOUT_CLASSIFICATION	0.001376095069501441	DEFECT
//TODO: add owner argument!!	IMPLEMENTATION	0.9702181045245687	WITHOUT_CLASSIFICATION	0.012903563195249067	IMPLEMENTATION	0.010271827785720711	DEFECT	0.006197280994588047	DOCUMENTATION	2.592667017696848E-4	DESIGN	1.499567981038746E-4	TEST
//TODO: formulas ?	IMPLEMENTATION	0.9399350294015503	WITHOUT_CLASSIFICATION	0.058032163208160494	DESIGN	0.0016406522700002121	IMPLEMENTATION	3.017396092277808E-4	DEFECT	5.840909451988696E-5	DOCUMENTATION	3.200641654142165E-5	TEST
//TODO: include the rowids!!!!	IMPLEMENTATION	0.7324297309257888	WITHOUT_CLASSIFICATION	0.152443061322761	IMPLEMENTATION	0.0985050373219661	DESIGN	0.012474819823026626	DEFECT	0.003908028208487072	DOCUMENTATION	2.3932239797047145E-4	TEST
// todo : cache this sql...	IMPLEMENTATION	0.9978420719803537	WITHOUT_CLASSIFICATION	0.002127392638195414	DESIGN	1.2696392586720936E-5	IMPLEMENTATION	1.0504752311830379E-5	TEST	3.846807142157745E-6	DOCUMENTATION	3.487429410272594E-6	DEFECT
//TODO: create uk loaders for component properties	IMPLEMENTATION	0.5669271629315843	WITHOUT_CLASSIFICATION	0.2747452380004566	DESIGN	0.13513011915057355	IMPLEMENTATION	0.022538464594155278	DEFECT	4.41649295282436E-4	TEST	2.1736602794792143E-4	DOCUMENTATION
//TODO: cache this in an instvar	IMPLEMENTATION	0.7595518136277375	WITHOUT_CLASSIFICATION	0.24027357031639876	DESIGN	1.0139345571000516E-4	TEST	3.9809663424812635E-5	DOCUMENTATION	2.391046017149661E-5	DEFECT	9.50247655753564E-6	IMPLEMENTATION
/////////////////////////////////////////////////////////////////////// // TODO : look at perhaps caching this...	IMPLEMENTATION	0.45033483998209284	DESIGN	0.39028676189492273	IMPLEMENTATION	0.1271929708326167	WITHOUT_CLASSIFICATION	0.016152176449878954	TEST	0.013155371611239289	DEFECT	0.00287787922924949	DOCUMENTATION
//TODO: eventually put this back in, once we think all is fixed //Object otherAlias = columnsUnique.put(qualifiedColumn, columnAlias);	IMPLEMENTATION	0.48476368045456036	IMPLEMENTATION	0.25538762618508987	DESIGN	0.2530815014297795	WITHOUT_CLASSIFICATION	0.0049850286026018155	DEFECT	0.0014792186811568775	DOCUMENTATION	3.029446468116196E-4	TEST
//TODO: if we support multiple fetch groups, we would need //      to clone the set of lazy properties!	IMPLEMENTATION	0.9970393349923528	WITHOUT_CLASSIFICATION	0.0020779307063613344	DESIGN	5.760497209775382E-4	IMPLEMENTATION	2.940159630903404E-4	DEFECT	6.486285479071069E-6	TEST	6.182331738919096E-6	DOCUMENTATION
//TODO: proxies!	IMPLEMENTATION	0.9363117495648625	WITHOUT_CLASSIFICATION	0.03235754200675543	IMPLEMENTATION	0.02304947867307269	DEFECT	0.007389373219512117	DESIGN	6.7044737741593E-4	DOCUMENTATION	2.214091583813753E-4	TEST
//TODO: terrible implementation!	IMPLEMENTATION	0.9262082385079002	IMPLEMENTATION	0.07038287198666666	WITHOUT_CLASSIFICATION	0.002857941339334276	DEFECT	3.871522215848228E-4	DESIGN	1.1400460868929825E-4	DOCUMENTATION	4.979133582461698E-5	TEST
//TODO: proxies!	IMPLEMENTATION	0.9363117495648625	WITHOUT_CLASSIFICATION	0.03235754200675543	IMPLEMENTATION	0.02304947867307269	DEFECT	0.007389373219512117	DESIGN	6.7044737741593E-4	DOCUMENTATION	2.214091583813753E-4	TEST
// TODO: I don't really like this implementation; it would be better if // this was handled by searchForDirtyCollections()	IMPLEMENTATION	0.9861721150299221	DESIGN	0.012592856736741383	IMPLEMENTATION	0.001222645769434665	DEFECT	1.2207059771353052E-5	TEST	1.4612688406828126E-7	DOCUMENTATION	2.927724630504436E-8	WITHOUT_CLASSIFICATION
// TODO: check if key contains the owner ID	IMPLEMENTATION	0.9949646764005046	IMPLEMENTATION	0.002833781639547418	WITHOUT_CLASSIFICATION	0.0020919261621800077	DESIGN	6.356375395635469E-5	DOCUMENTATION	3.992319305109768E-5	DEFECT	6.128850760548379E-6	TEST
//TODO: proxies!	IMPLEMENTATION	0.9363117495648625	WITHOUT_CLASSIFICATION	0.03235754200675543	IMPLEMENTATION	0.02304947867307269	DEFECT	0.007389373219512117	DESIGN	6.7044737741593E-4	DOCUMENTATION	2.214091583813753E-4	TEST
// table=null -> an association // - fill it in later //TODO fill in the mappings for table == null	IMPLEMENTATION	0.9999878198690361	WITHOUT_CLASSIFICATION	1.0481678157833781E-5	TEST	7.315432889345088E-7	DESIGN	6.92416172104408E-7	IMPLEMENTATION	2.3463657016229198E-7	DEFECT	3.98567749678183E-8	DOCUMENTATION
// table=null -> an association - fill // it in later //TODO fill in the mappings for table == null	IMPLEMENTATION	0.9999927014937645	WITHOUT_CLASSIFICATION	6.521722614422564E-6	TEST	5.545064993381198E-7	DESIGN	1.31883971635753E-7	IMPLEMENTATION	7.489700770678037E-8	DEFECT	1.5496142446911988E-8	DOCUMENTATION
// if we are still not resolved, we might represent a constant. //      needed to add this here because the allowance of //      naked-prop-refs in the grammar collides with the //      definition of literals/constants ("nondeterminism"). //      TODO: cleanup the grammar so that "processConstants" is always just handled from here	IMPLEMENTATION	0.5992967750669639	DESIGN	0.4001629014109044	WITHOUT_CLASSIFICATION	2.488919946753684E-4	DOCUMENTATION	1.2563066308707356E-4	TEST	9.346823950766918E-5	DEFECT	7.233262486164702E-5	IMPLEMENTATION
//TODO: add referencedClass to disambiguate to FKs on the same //      columns, pointing to different tables	IMPLEMENTATION	0.9999078968360545	WITHOUT_CLASSIFICATION	4.2874829022950315E-5	DESIGN	2.5437068650265767E-5	IMPLEMENTATION	1.9481576917983355E-5	DEFECT	3.794045163491102E-6	DOCUMENTATION	5.156441907937044E-7	TEST
//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9989806027894588	WITHOUT_CLASSIFICATION	7.638030263867322E-4	IMPLEMENTATION	2.525332801006826E-4	TEST	2.2192169649772113E-6	DOCUMENTATION	5.287553548169072E-7	DEFECT	3.129317341515543E-7	DESIGN
// aload_0	WITHOUT_CLASSIFICATION	0.9999984079630069	WITHOUT_CLASSIFICATION	1.0956349996256274E-6	DESIGN	2.429796499507866E-7	DEFECT	1.853587191865963E-7	IMPLEMENTATION	3.719670114710292E-8	DOCUMENTATION	3.086692320239661E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999984079630069	WITHOUT_CLASSIFICATION	1.0956349996256274E-6	DESIGN	2.429796499507866E-7	DEFECT	1.853587191865963E-7	IMPLEMENTATION	3.719670114710292E-8	DOCUMENTATION	3.086692320239661E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999984079630069	WITHOUT_CLASSIFICATION	1.0956349996256274E-6	DESIGN	2.429796499507866E-7	DEFECT	1.853587191865963E-7	IMPLEMENTATION	3.719670114710292E-8	DOCUMENTATION	3.086692320239661E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999984079630069	WITHOUT_CLASSIFICATION	1.0956349996256274E-6	DESIGN	2.429796499507866E-7	DEFECT	1.853587191865963E-7	IMPLEMENTATION	3.719670114710292E-8	DOCUMENTATION	3.086692320239661E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999984079630069	WITHOUT_CLASSIFICATION	1.0956349996256274E-6	DESIGN	2.429796499507866E-7	DEFECT	1.853587191865963E-7	IMPLEMENTATION	3.719670114710292E-8	DOCUMENTATION	3.086692320239661E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999984079630069	WITHOUT_CLASSIFICATION	1.0956349996256274E-6	DESIGN	2.429796499507866E-7	DEFECT	1.853587191865963E-7	IMPLEMENTATION	3.719670114710292E-8	DOCUMENTATION	3.086692320239661E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999984079630069	WITHOUT_CLASSIFICATION	1.0956349996256274E-6	DESIGN	2.429796499507866E-7	DEFECT	1.853587191865963E-7	IMPLEMENTATION	3.719670114710292E-8	DOCUMENTATION	3.086692320239661E-8	TEST
// return	WITHOUT_CLASSIFICATION	0.9999896258511505	WITHOUT_CLASSIFICATION	8.41761695605982E-6	DESIGN	1.01872460842426E-6	DEFECT	8.353838703735997E-7	IMPLEMENTATION	5.83979143117521E-8	DOCUMENTATION	4.402550020837714E-8	TEST
// return	WITHOUT_CLASSIFICATION	0.9999896258511505	WITHOUT_CLASSIFICATION	8.41761695605982E-6	DESIGN	1.01872460842426E-6	DEFECT	8.353838703735997E-7	IMPLEMENTATION	5.83979143117521E-8	DOCUMENTATION	4.402550020837714E-8	TEST
/* | this | bean | args | raw bean | */	WITHOUT_CLASSIFICATION	0.9999928075935799	WITHOUT_CLASSIFICATION	3.7403702732362822E-6	DESIGN	2.9655877189079174E-6	TEST	2.424003992729526E-7	IMPLEMENTATION	1.4882042964528712E-7	DEFECT	9.522759899505278E-8	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999983748361295	WITHOUT_CLASSIFICATION	1.415219767426371E-6	DESIGN	1.1062827631740414E-7	DEFECT	5.975219818606198E-8	DOCUMENTATION	3.7631089048192105E-8	TEST	1.932539468114423E-9	IMPLEMENTATION
// astore 4 // store the raw bean	WITHOUT_CLASSIFICATION	0.9999984187006611	WITHOUT_CLASSIFICATION	1.1690522889545698E-6	IMPLEMENTATION	1.6851327198230824E-7	DESIGN	1.4859751737496858E-7	TEST	7.194080978256656E-8	DEFECT	2.319545073057989E-8	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999974216551782	WITHOUT_CLASSIFICATION	9.704030145965447E-7	DEFECT	6.601193432926562E-7	IMPLEMENTATION	5.493058882266398E-7	DESIGN	3.30411003279906E-7	DOCUMENTATION	6.81055722369631E-8	TEST
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999974216551782	WITHOUT_CLASSIFICATION	9.704030145965447E-7	DEFECT	6.601193432926562E-7	IMPLEMENTATION	5.493058882266398E-7	DESIGN	3.30411003279906E-7	DOCUMENTATION	6.81055722369631E-8	TEST
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999991115000839	WITHOUT_CLASSIFICATION	7.924660067473433E-7	DESIGN	8.484938445146477E-8	DEFECT	4.679575538907745E-9	IMPLEMENTATION	3.6750115621413597E-9	TEST	2.829937889702259E-9	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999998237252186	WITHOUT_CLASSIFICATION	1.4966702175271322E-7	DESIGN	2.053831758659167E-8	DEFECT	3.1671499863498368E-9	TEST	2.0531932047853095E-9	DOCUMENTATION	8.490988673091054E-10	IMPLEMENTATION
// putfield // new value of the field	WITHOUT_CLASSIFICATION	0.9999923323732648	WITHOUT_CLASSIFICATION	7.091542999413622E-6	DESIGN	3.5065432089564494E-7	DEFECT	1.2143257410905808E-7	IMPLEMENTATION	6.816776602593313E-8	DOCUMENTATION	3.582907497295058E-8	TEST
// reference type	WITHOUT_CLASSIFICATION	0.9999922890305369	WITHOUT_CLASSIFICATION	6.7556647965089425E-6	DESIGN	5.504542746808789E-7	IMPLEMENTATION	3.026007450607172E-7	DOCUMENTATION	6.034093079779902E-8	DEFECT	4.1908716157417854E-8	TEST
// double	WITHOUT_CLASSIFICATION	0.999999097583827	WITHOUT_CLASSIFICATION	6.155292724102307E-7	DESIGN	2.4834091886958934E-7	DEFECT	1.4382975936423816E-8	TEST	1.3210629377588166E-8	DOCUMENTATION	1.095237646460316E-8	IMPLEMENTATION
// double	WITHOUT_CLASSIFICATION	0.999999097583827	WITHOUT_CLASSIFICATION	6.155292724102307E-7	DESIGN	2.4834091886958934E-7	DEFECT	1.4382975936423816E-8	TEST	1.3210629377588166E-8	DOCUMENTATION	1.095237646460316E-8	IMPLEMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999275707629917	WITHOUT_CLASSIFICATION	5.253820673286967E-5	DEFECT	1.819098905319409E-5	DESIGN	9.73505076417179E-7	IMPLEMENTATION	3.8288829036089406E-7	DOCUMENTATION	3.4364785550966003E-7	TEST
// just decrement the lock, don't recache // (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.9998573141151677	WITHOUT_CLASSIFICATION	1.391078610239231E-4	IMPLEMENTATION	2.1565900195305333E-6	DEFECT	1.1817556406878419E-6	DOCUMENTATION	1.674276518843981E-7	TEST	7.225049646260576E-8	DESIGN
// decode row selection...	WITHOUT_CLASSIFICATION	0.9998099242917577	WITHOUT_CLASSIFICATION	1.4823328208622317E-4	DESIGN	1.9957095820468566E-5	DEFECT	1.923066582915438E-5	IMPLEMENTATION	1.6956065219086565E-6	TEST	9.59057984405896E-7	DOCUMENTATION
//disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.9999881250172734	WITHOUT_CLASSIFICATION	1.0132807819739236E-5	DESIGN	1.4007166027040407E-6	DEFECT	2.203276620085903E-7	TEST	9.020048675745604E-8	DOCUMENTATION	3.09301553772339E-8	IMPLEMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999999972159294	WITHOUT_CLASSIFICATION	2.1735008014084887E-9	DEFECT	4.087491942447985E-10	DESIGN	1.1464510153510207E-10	IMPLEMENTATION	8.301090546386563E-11	TEST	4.164705712000239E-12	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999960151163372	WITHOUT_CLASSIFICATION	3.3871620853446886E-6	DESIGN	3.501283319178809E-7	DEFECT	1.1364287038412865E-7	TEST	7.022587562962215E-8	DOCUMENTATION	6.372449937733853E-8	IMPLEMENTATION
// ROW ID	WITHOUT_CLASSIFICATION	0.99997032540152	WITHOUT_CLASSIFICATION	1.4110025700318849E-5	DESIGN	1.0374168396981705E-5	IMPLEMENTATION	4.02606187666206E-6	DEFECT	5.880364320271225E-7	TEST	5.763060740536084E-7	DOCUMENTATION
// COMPOSITE-ID	WITHOUT_CLASSIFICATION	0.9999929491727922	WITHOUT_CLASSIFICATION	4.9357828156660595E-6	DESIGN	9.744386317060468E-7	IMPLEMENTATION	6.02865938780921E-7	DEFECT	3.0161498798679656E-7	DOCUMENTATION	2.3612483343978078E-7	TEST
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9998045688221382	WITHOUT_CLASSIFICATION	1.2410360546344173E-4	IMPLEMENTATION	5.783372311502133E-5	DESIGN	7.042457258437604E-6	DEFECT	3.800704005116268E-6	DOCUMENTATION	2.6506880197078863E-6	TEST
/*	WITHOUT_CLASSIFICATION	0.9624352627533524	WITHOUT_CLASSIFICATION	0.02618387964556663	DESIGN	0.007498836067607672	DEFECT	0.003664986289146738	IMPLEMENTATION	1.1191917782725857E-4	DOCUMENTATION	1.0511606649930399E-4	TEST
// DYNAMIC INSERT	WITHOUT_CLASSIFICATION	0.9997147729621467	WITHOUT_CLASSIFICATION	2.002902576457996E-4	DESIGN	7.498952273999727E-5	IMPLEMENTATION	4.74157000074569E-6	DEFECT	2.783480761271856E-6	DOCUMENTATION	2.422206705547121E-6	TEST
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999892797910145	WITHOUT_CLASSIFICATION	4.8413470747655585E-6	DESIGN	4.060428311523103E-6	IMPLEMENTATION	9.676518685989454E-7	DEFECT	4.3683385135601067E-7	TEST	4.1394787933260676E-7	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.99999583179707	WITHOUT_CLASSIFICATION	4.120898913613358E-6	DESIGN	3.8663650864592545E-8	DEFECT	6.545044341072895E-9	TEST	1.890751039752852E-9	DOCUMENTATION	2.045703018382838E-10	IMPLEMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999910078771845	WITHOUT_CLASSIFICATION	3.858260371783298E-6	IMPLEMENTATION	3.5911389201648525E-6	DESIGN	7.633689016276436E-7	DEFECT	3.934198804000257E-7	DOCUMENTATION	3.85934741308532E-7	TEST
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999910078771845	WITHOUT_CLASSIFICATION	3.858260371783298E-6	IMPLEMENTATION	3.5911389201648525E-6	DESIGN	7.633689016276436E-7	DEFECT	3.934198804000257E-7	DOCUMENTATION	3.85934741308532E-7	TEST
// generated properties can *never* be insertable...	WITHOUT_CLASSIFICATION	0.9999942399863074	WITHOUT_CLASSIFICATION	5.6965906411219135E-6	DESIGN	3.460834592670317E-8	IMPLEMENTATION	1.5609057059183187E-8	TEST	1.252386031097861E-8	DEFECT	6.817880714911034E-10	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9999904824631336	WITHOUT_CLASSIFICATION	4.718237193310127E-6	DESIGN	3.2478324651594285E-6	DEFECT	9.955718075870713E-7	IMPLEMENTATION	2.795214537597406E-7	DOCUMENTATION	2.7637394665347173E-7	TEST
//by default, natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.99992462161684	WITHOUT_CLASSIFICATION	7.38293128224944E-5	DESIGN	9.62142858222104E-7	IMPLEMENTATION	4.719570241291176E-7	DEFECT	8.284186316338236E-8	DOCUMENTATION	3.2128591836183204E-8	TEST
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999633185284796	WITHOUT_CLASSIFICATION	1.8639371211495037E-5	DESIGN	1.3340776323144545E-5	IMPLEMENTATION	4.585656075754226E-6	DEFECT	6.696569282787067E-8	DOCUMENTATION	4.8702217162613836E-8	TEST
// we found some extends attributes referencing entities which were // not already processed.  here we need to locate all entity-names // and class-names contained in this document itself, making sure // that these get removed from the extendz list such that only // extends names which require us to delay processing (i.e. // external to this document and not yet processed) are contained // in the returned result	WITHOUT_CLASSIFICATION	0.7710726785663817	WITHOUT_CLASSIFICATION	0.22860042447626575	DESIGN	3.239314534685301E-4	DOCUMENTATION	1.6753564059223988E-6	TEST	1.2187468444241451E-6	IMPLEMENTATION	7.140063357507755E-8	DEFECT
/**	WITHOUT_CLASSIFICATION	0.7443957798226633	DESIGN	0.09115832074099095	WITHOUT_CLASSIFICATION	0.08242936482622316	DEFECT	0.08071796545512981	IMPLEMENTATION	7.387574675117013E-4	DOCUMENTATION	5.59811687481041E-4	TEST
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.7443957798226633	DESIGN	0.09115832074099095	WITHOUT_CLASSIFICATION	0.08242936482622316	DEFECT	0.08071796545512981	IMPLEMENTATION	7.387574675117013E-4	DOCUMENTATION	5.59811687481041E-4	TEST
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// If close() is called, guarantee unbind()	WITHOUT_CLASSIFICATION	0.9999988310312107	WITHOUT_CLASSIFICATION	6.471960419662229E-7	DEFECT	3.373797190524667E-7	IMPLEMENTATION	1.4902662910697966E-7	DESIGN	2.6650444311030693E-8	TEST	8.71595483407717E-9	DOCUMENTATION
// if a ThreadLocalSessionContext-bound session happens to get // serialized, to be completely correct, we need to make sure // that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.9999908483596047	WITHOUT_CLASSIFICATION	9.09569411798324E-6	DESIGN	3.114239270789447E-8	TEST	1.8708271986215818E-8	DEFECT	4.730622943552618E-9	DOCUMENTATION	1.3649895933291438E-9	IMPLEMENTATION
// on the inverse, it makes sense that if a ThreadLocalSessionContext- // bound session then gets deserialized to go ahead and re-bind it to // the ThreadLocalSessionContext session map.	WITHOUT_CLASSIFICATION	0.9999384029768935	WITHOUT_CLASSIFICATION	6.153605374210816E-5	DESIGN	3.3376249948678E-8	TEST	1.438855864423511E-8	DEFECT	9.749159689710124E-9	IMPLEMENTATION	3.4553960128374637E-9	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9979648174175247	WITHOUT_CLASSIFICATION	0.0019230655514250292	DESIGN	9.382185481467062E-5	IMPLEMENTATION	6.6476796009934125E-6	DEFECT	6.072039256430971E-6	TEST	5.575457378150797E-6	DOCUMENTATION
// 60 second lock timeout	WITHOUT_CLASSIFICATION	0.9999714541014844	WITHOUT_CLASSIFICATION	1.0874295622769338E-5	DESIGN	9.947115554008482E-6	DEFECT	5.0746511352353474E-6	IMPLEMENTATION	2.4775540709340713E-6	DOCUMENTATION	1.7228213290647913E-7	TEST
// OptimisticCache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999861696257066	WITHOUT_CLASSIFICATION	1.0901271842398417E-5	IMPLEMENTATION	2.2997652246342405E-6	DESIGN	2.6719185188310394E-7	DEFECT	1.8844873956237564E-7	TEST	1.7369663486404883E-7	DOCUMENTATION
// Cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999950741920116	WITHOUT_CLASSIFICATION	2.9279020859054386E-6	IMPLEMENTATION	1.3551592957992044E-6	DESIGN	4.3816732421191604E-7	DEFECT	1.0360297339565477E-7	DOCUMENTATION	1.0097630913618077E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// do the put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999932665166947	WITHOUT_CLASSIFICATION	5.389679917834107E-6	DESIGN	4.529783111170517E-7	DEFECT	4.222677437547594E-7	DOCUMENTATION	3.9439838771292043E-7	IMPLEMENTATION	7.41589448663661E-8	TEST
//ignore!	WITHOUT_CLASSIFICATION	0.9998144289353759	WITHOUT_CLASSIFICATION	1.0598491374664944E-4	DESIGN	6.058269461216836E-5	DEFECT	8.698074707161471E-6	DOCUMENTATION	8.43465465272878E-6	IMPLEMENTATION	1.8707269055282667E-6	TEST
// tree cache in optimistic mode seems to have as very difficult // time with remove calls on non-existent nodes (NPEs)...	WITHOUT_CLASSIFICATION	0.9992238965383368	WITHOUT_CLASSIFICATION	7.690983975628371E-4	DESIGN	5.01926478313986E-6	DEFECT	1.7459666993424727E-6	IMPLEMENTATION	1.990332504248644E-7	TEST	4.079936759981615E-8	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.999777829808543	WITHOUT_CLASSIFICATION	1.7064695894098274E-4	DESIGN	3.271922276790039E-5	IMPLEMENTATION	8.478539789474799E-6	DEFECT	7.86714983831758E-6	DOCUMENTATION	2.458320120418693E-6	TEST
//ignore!	WITHOUT_CLASSIFICATION	0.9998144289353759	WITHOUT_CLASSIFICATION	1.0598491374664944E-4	DESIGN	6.058269461216836E-5	DEFECT	8.698074707161471E-6	DOCUMENTATION	8.43465465272878E-6	IMPLEMENTATION	1.8707269055282667E-6	TEST
//60 seconds	WITHOUT_CLASSIFICATION	0.999777829808543	WITHOUT_CLASSIFICATION	1.7064695894098274E-4	DESIGN	3.271922276790039E-5	IMPLEMENTATION	8.478539789474799E-6	DEFECT	7.86714983831758E-6	DOCUMENTATION	2.458320120418693E-6	TEST
//do the failfast put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.999982013785541	WITHOUT_CLASSIFICATION	1.2064919130920759E-5	DESIGN	2.478312856344071E-6	TEST	1.9940658076219236E-6	DEFECT	8.626948645042543E-7	DOCUMENTATION	5.862217996896284E-7	IMPLEMENTATION
// NOTE : evict() operates locally only (i.e., does not propogate // to any other nodes in the potential cluster).  This is // exactly what is needed when we destroy() here; destroy() is used // as part of the process of shutting down a SessionFactory; thus // these removals should not be propogated	WITHOUT_CLASSIFICATION	0.9997043301847617	DESIGN	2.714640078147444E-4	WITHOUT_CLASSIFICATION	2.0366027804291626E-5	DEFECT	3.822543558078943E-6	TEST	1.4084169397809202E-8	DOCUMENTATION	3.1518918319450474E-9	IMPLEMENTATION
//    protected RegionRootListener listener;	WITHOUT_CLASSIFICATION	0.9999770721690213	WITHOUT_CLASSIFICATION	2.0473749680969035E-5	IMPLEMENTATION	1.0954122765463566E-6	DESIGN	9.803185861778418E-7	DEFECT	2.9648070770038046E-7	TEST	8.186972732484048E-8	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9997561882190522	WITHOUT_CLASSIFICATION	2.0127558340284014E-4	IMPLEMENTATION	2.0699225870587217E-5	DESIGN	1.9825599966876318E-5	DEFECT	1.85460152767452E-6	TEST	1.5677017981185655E-7	DOCUMENTATION
// If we've been blocking for the mutex, perhaps another // thread has already reestablished the root. // In case the node was reestablised via replication, confirm it's  // marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.9998533132842651	WITHOUT_CLASSIFICATION	8.032316270067865E-5	DESIGN	6.217510332202103E-5	DEFECT	2.558544980524974E-6	TEST	1.5777638523075245E-6	DOCUMENTATION	5.214087933071991E-8	IMPLEMENTATION
// For pessimistic locking, we just want to toss out our ref // to any old invalid root node and get the latest (may be null)            	WITHOUT_CLASSIFICATION	0.9999989426046085	WITHOUT_CLASSIFICATION	7.152799926421961E-7	DEFECT	2.960629465087259E-7	TEST	3.543480641254311E-8	DESIGN	8.766246259567027E-9	DOCUMENTATION	1.8513997128983077E-9	IMPLEMENTATION
// The rest only matters for optimistic locking, where we // need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.943136912161212	WITHOUT_CLASSIFICATION	0.019996087741783374	DEFECT	0.0199613387732429	DESIGN	0.016306483646871577	IMPLEMENTATION	4.957500931438249E-4	TEST	1.0342758374634191E-4	DOCUMENTATION
// Don't hold a transactional lock for this 	WITHOUT_CLASSIFICATION	0.9937675087999576	WITHOUT_CLASSIFICATION	0.005559121652166449	DESIGN	6.459771615124588E-4	IMPLEMENTATION	1.0047559312549248E-5	TEST	8.82357581709477E-6	DOCUMENTATION	8.521251233912257E-6	DEFECT
// Make sure the root node for the region exists and  // has a DataVersion that never complains	WITHOUT_CLASSIFICATION	0.9999088081228301	WITHOUT_CLASSIFICATION	9.001187601529098E-5	IMPLEMENTATION	9.901600405929717E-7	DEFECT	1.412356177793246E-7	DESIGN	4.631844125864642E-8	TEST	2.287055076543398E-9	DOCUMENTATION
// Never evict this node	WITHOUT_CLASSIFICATION	0.9997888618972336	WITHOUT_CLASSIFICATION	1.0147554056974897E-4	IMPLEMENTATION	5.527125456007877E-5	TEST	5.246152409754021E-5	DESIGN	1.376177454013695E-6	DOCUMENTATION	5.536060849605578E-7	DEFECT
// Fix up the resident flag	WITHOUT_CLASSIFICATION	0.9999558642852863	WITHOUT_CLASSIFICATION	4.0489324409603264E-5	IMPLEMENTATION	1.7125601534652634E-6	TEST	9.985607123447954E-7	DEFECT	5.658755277784644E-7	DESIGN	3.6939391049574615E-7	DOCUMENTATION
// 60 seconds	WITHOUT_CLASSIFICATION	0.9999738843957463	WITHOUT_CLASSIFICATION	1.555555485103968E-5	DESIGN	6.625190072408428E-6	IMPLEMENTATION	2.5673818416434937E-6	DEFECT	9.758791259784141E-7	DOCUMENTATION	3.9159836267225434E-7	TEST
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999978209935708	WITHOUT_CLASSIFICATION	2.1692481052778482E-6	DESIGN	3.583093831663574E-9	IMPLEMENTATION	3.4881693957969946E-9	DEFECT	2.3405797157066073E-9	TEST	3.464809550809569E-10	DOCUMENTATION
// no-op. We don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.9997401170663119	WITHOUT_CLASSIFICATION	2.2431378019330383E-4	IMPLEMENTATION	3.284386832001883E-5	DESIGN	1.892883945993191E-6	DEFECT	5.224669841352376E-7	DOCUMENTATION	3.099342445472988E-7	TEST
// This should only be possible if the caches are constructor injected 	WITHOUT_CLASSIFICATION	0.9999966009871324	WITHOUT_CLASSIFICATION	2.198735416896626E-6	DESIGN	6.582160105216827E-7	IMPLEMENTATION	3.4460027473081906E-7	DEFECT	1.9410852707664239E-7	TEST	3.3526384750119818E-9	DOCUMENTATION
// We only build caches if *none* were passed in.  Passing in // caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.9998168933278521	WITHOUT_CLASSIFICATION	1.8098354679080603E-4	DEFECT	2.0626497349429295E-6	TEST	4.719870441402239E-8	DESIGN	1.1644179687914588E-8	DOCUMENTATION	1.6327380431514368E-9	IMPLEMENTATION
// Set up the cache factory	WITHOUT_CLASSIFICATION	0.9999979993740246	WITHOUT_CLASSIFICATION	1.8898043238607445E-6	DESIGN	7.045829590094111E-8	DEFECT	1.5177194356253445E-8	TEST	1.508597751180236E-8	DOCUMENTATION	1.0100183876778896E-8	IMPLEMENTATION
// See if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.9887432017228334	WITHOUT_CLASSIFICATION	0.011166640629883208	DESIGN	4.3570992290147116E-5	IMPLEMENTATION	3.9628306293147855E-5	DEFECT	4.696418040960333E-6	TEST	2.261930659146583E-6	DOCUMENTATION
// Default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.999971273210361	WITHOUT_CLASSIFICATION	2.6624878410598282E-5	DESIGN	8.221534330769325E-7	DEFECT	6.998259871682572E-7	TEST	5.622776550625704E-7	IMPLEMENTATION	1.765415334799862E-8	DOCUMENTATION
// Default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999868741011129	WITHOUT_CLASSIFICATION	1.1636243122623316E-5	DESIGN	1.2741417871657056E-6	DEFECT	1.5967853520551334E-7	TEST	3.965532873604084E-8	IMPLEMENTATION	1.6180113547847493E-8	DOCUMENTATION
// For Timestamps, we default to a separate config	WITHOUT_CLASSIFICATION	0.9998285750168252	WITHOUT_CLASSIFICATION	1.2155119771283463E-4	DESIGN	3.090953609688254E-5	IMPLEMENTATION	9.563574385963535E-6	TEST	6.2552396523167066E-6	DEFECT	3.1454353267434175E-6	DOCUMENTATION
// We can't change the TM on a running cache; just check // if the cache has no TM and we're OK with that	WITHOUT_CLASSIFICATION	0.9999999971345362	WITHOUT_CLASSIFICATION	2.437332850438824E-9	IMPLEMENTATION	2.56763590041414E-10	TEST	1.0066892684839736E-10	DESIGN	5.463091046988856E-11	DEFECT	1.606725350323398E-11	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9999001232193456	WITHOUT_CLASSIFICATION	9.957750876045014E-5	DESIGN	1.3922197884045338E-7	DOCUMENTATION	9.14118848500001E-8	IMPLEMENTATION	5.201773936701402E-8	DEFECT	1.662029089694547E-8	TEST
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999944663237025	WITHOUT_CLASSIFICATION	3.279438378809628E-6	DEFECT	1.1651852008184653E-6	IMPLEMENTATION	7.724736127230789E-7	DESIGN	2.4476109647987056E-7	TEST	7.181800864221337E-8	DOCUMENTATION
// This method should be implemented assuming it's valid to  // do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.9930424890673185	WITHOUT_CLASSIFICATION	0.003798061331871673	DESIGN	0.002654486449306028	IMPLEMENTATION	4.5575246489549615E-4	DEFECT	4.8375814321078434E-5	TEST	8.348722872840225E-7	DOCUMENTATION
// Make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.9999991712326051	WITHOUT_CLASSIFICATION	5.109784174972024E-7	IMPLEMENTATION	1.323760640771316E-7	DEFECT	1.23365163256503E-7	DESIGN	5.1072608743004454E-8	DOCUMENTATION	1.0975141363020086E-8	TEST
// We use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.9999980204680243	WITHOUT_CLASSIFICATION	1.9764547371479695E-6	DESIGN	2.2198108481660395E-9	DOCUMENTATION	3.0845979103944657E-10	IMPLEMENTATION	2.8975961244923243E-10	TEST	2.5920822081751724E-10	DEFECT
// Following methods we don't delegate since they have so little logic // it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.9627509168862226	WITHOUT_CLASSIFICATION	0.03319875233118574	IMPLEMENTATION	0.0038392113496826977	DESIGN	1.5730602849070991E-4	TEST	4.938269010548417E-5	DEFECT	4.430714312798291E-6	DOCUMENTATION
// If JBC is using INVALIDATION, we don't want to propagate changes. // We use the Timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.9999969326122942	WITHOUT_CLASSIFICATION	2.413173108732284E-6	DEFECT	3.642422747804401E-7	DESIGN	1.4111722201464604E-7	IMPLEMENTATION	7.693199121289039E-8	DOCUMENTATION	7.19231089811918E-8	TEST
// We don't want to waste effort setting an option if JBC is // already in LOCAL mode. If JBC is REPL_(A)SYNC then check // if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.999693371275225	WITHOUT_CLASSIFICATION	2.763402331866819E-4	IMPLEMENTATION	1.9105639347828275E-5	DESIGN	7.77220879976089E-6	TEST	2.989413960835966E-6	DEFECT	4.2122947971434564E-7	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents updates // Add a zero (or low) timeout option so we don't block // waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.999995546008253	WITHOUT_CLASSIFICATION	4.039265347652431E-6	IMPLEMENTATION	3.2903280527869654E-7	DEFECT	7.168947701642614E-8	TEST	1.3279653206560857E-8	DOCUMENTATION	7.244638458695221E-10	DESIGN
// Double check the distributed cache	WITHOUT_CLASSIFICATION	0.9999992171105835	WITHOUT_CLASSIFICATION	7.739401132455119E-7	IMPLEMENTATION	3.050311778036779E-9	DOCUMENTATION	2.5963213751842433E-9	TEST	2.5607247211605726E-9	DESIGN	7.419454301109383E-10	DEFECT
// Get an exclusive right to update JBC for this key from this node.	WITHOUT_CLASSIFICATION	0.9999979082348074	WITHOUT_CLASSIFICATION	2.0341384402265417E-6	DESIGN	4.721621543081808E-8	DEFECT	6.9559453175858676E-9	TEST	3.3231025160270063E-9	DOCUMENTATION	1.3148915019875216E-10	IMPLEMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9982182096580205	WITHOUT_CLASSIFICATION	0.0012309238125878708	DESIGN	5.41881315281009E-4	DEFECT	6.491041060959564E-6	IMPLEMENTATION	1.8985142226955384E-6	DOCUMENTATION	5.956588269673006E-7	TEST
// Initial load from JBC	WITHOUT_CLASSIFICATION	0.9999983264115032	WITHOUT_CLASSIFICATION	1.175164231059852E-6	DEFECT	2.2510265755669803E-7	DESIGN	2.118689407573911E-7	IMPLEMENTATION	3.571499528742023E-8	DOCUMENTATION	2.5737672118356426E-8	TEST
// See if we had a 2nd invalidation from the same initial // preinvalidation timestamp. If so, only increment // if the new current value is an increase	WITHOUT_CLASSIFICATION	0.9999998877316142	WITHOUT_CLASSIFICATION	5.819044171352058E-8	DEFECT	3.271114468577165E-8	DESIGN	1.0440113563222343E-8	DOCUMENTATION	1.0356899595102633E-8	TEST	5.697861523288624E-10	IMPLEMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9982182096580205	WITHOUT_CLASSIFICATION	0.0012309238125878708	DESIGN	5.41881315281009E-4	DEFECT	6.491041060959564E-6	IMPLEMENTATION	1.8985142226955384E-6	DOCUMENTATION	5.956588269673006E-7	TEST
// If the workspace node has null as well, OK; if not we've // been modified in a non-comparable manner, which we have to // treat as us being newer	WITHOUT_CLASSIFICATION	0.9999429929960494	WITHOUT_CLASSIFICATION	5.512663276388296E-5	DESIGN	9.82943835293096E-7	DEFECT	7.710793603850392E-7	IMPLEMENTATION	9.058843309943265E-8	TEST	3.57595579525661E-8	DOCUMENTATION
// The standard comparator types are not Serializable but are singletons	WITHOUT_CLASSIFICATION	0.999997945580324	WITHOUT_CLASSIFICATION	1.4125786543330437E-6	DEFECT	6.234058526478195E-7	DESIGN	9.42384453799319E-9	IMPLEMENTATION	7.901402631157591E-9	TEST	1.1099218403878128E-9	DOCUMENTATION
// ignore!	WITHOUT_CLASSIFICATION	0.9999941953035495	WITHOUT_CLASSIFICATION	3.4517269808694056E-6	DEFECT	1.3475129627453373E-6	DESIGN	7.051949467947699E-7	IMPLEMENTATION	2.198469287736722E-7	DOCUMENTATION	8.04146314115833E-8	TEST
// ignore it	WITHOUT_CLASSIFICATION	0.9999963752344354	WITHOUT_CLASSIFICATION	1.6611956224969115E-6	DESIGN	1.3530261178963673E-6	DEFECT	3.858545251477314E-7	IMPLEMENTATION	1.6282559255684688E-7	DOCUMENTATION	6.186370646226146E-8	TEST
// construct the cache	WITHOUT_CLASSIFICATION	0.9999978233267985	WITHOUT_CLASSIFICATION	1.8612400255745726E-6	IMPLEMENTATION	1.9280073111000688E-7	DESIGN	7.957205663877252E-8	TEST	3.005224172822622E-8	DOCUMENTATION	1.3008146427899719E-8	DEFECT
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999738582603711	WITHOUT_CLASSIFICATION	2.0190583519917246E-5	DEFECT	4.458170255442737E-6	DOCUMENTATION	1.3810151109506454E-6	DESIGN	9.96026683042812E-8	IMPLEMENTATION	1.236807422229185E-8	TEST
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999738582603711	WITHOUT_CLASSIFICATION	2.0190583519917246E-5	DEFECT	4.458170255442737E-6	DOCUMENTATION	1.3810151109506454E-6	DESIGN	9.96026683042812E-8	IMPLEMENTATION	1.236807422229185E-8	TEST
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.999867896003881	WITHOUT_CLASSIFICATION	1.1642787599542617E-4	DESIGN	8.49598594095866E-6	IMPLEMENTATION	3.982880619588816E-6	DEFECT	2.2739811959661794E-6	DOCUMENTATION	9.232723670838669E-7	TEST
//swaldman 2006-08-28: define c3p0-style configuration parameters for initialPoolSize, which //                     hibernate sensibly lets default to minPoolSize, but we'll let users //                     override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.9598322466908941	DESIGN	0.04016648927655852	WITHOUT_CLASSIFICATION	7.730727515882921E-7	TEST	3.5222383459652507E-7	DOCUMENTATION	1.0031389540840362E-7	IMPLEMENTATION	3.842206585405097E-8	DEFECT
/*DataSource unpooled = DataSources.unpooledDataSource(	WITHOUT_CLASSIFICATION	0.9996956710536964	WITHOUT_CLASSIFICATION	2.8161112216064875E-4	IMPLEMENTATION	1.6500547626815485E-5	DEFECT	4.467370115612466E-6	DESIGN	1.3401392640801268E-6	DOCUMENTATION	4.097671363971833E-7	TEST
// TRUE if the pool is borrowed from the outside, FALSE if we used to create it	WITHOUT_CLASSIFICATION	0.999999932878405	WITHOUT_CLASSIFICATION	5.3799502683098494E-8	DESIGN	1.1716555829053474E-8	DEFECT	9.923450646169641E-10	TEST	5.173425355567423E-10	IMPLEMENTATION	9.584892692449629E-11	DOCUMENTATION
// get a connection from the pool (thru DriverManager, cfr. Proxool doc)	WITHOUT_CLASSIFICATION	0.9999675850006419	WITHOUT_CLASSIFICATION	3.175121538556731E-5	DESIGN	2.518361383223008E-7	DEFECT	2.0740562356709426E-7	IMPLEMENTATION	1.5815614151800915E-7	DOCUMENTATION	4.638606912364936E-8	TEST
// set the Transaction Isolation if defined	WITHOUT_CLASSIFICATION	0.999673694884709	WITHOUT_CLASSIFICATION	2.1615636818973365E-4	IMPLEMENTATION	1.0816184754424462E-4	DESIGN	1.5400400912230961E-6	TEST	3.5561430432689324E-7	DOCUMENTATION	9.124516137054483E-8	DEFECT
// toggle autoCommit to false if set	WITHOUT_CLASSIFICATION	0.9999955244173483	WITHOUT_CLASSIFICATION	1.4641004480275659E-6	DESIGN	1.3601467304681846E-6	DEFECT	1.1789840628591036E-6	IMPLEMENTATION	3.414835373844828E-7	TEST	1.3086787292995217E-7	DOCUMENTATION
// return the connection	WITHOUT_CLASSIFICATION	0.9999842451690261	WITHOUT_CLASSIFICATION	8.378724716759186E-6	DESIGN	6.435177381571683E-6	IMPLEMENTATION	5.447970396423438E-7	DEFECT	3.2714770165324286E-7	DOCUMENTATION	6.89841342234807E-8	TEST
// Get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.9999951521776967	WITHOUT_CLASSIFICATION	3.9027554079052045E-6	DESIGN	8.157552878088481E-7	TEST	8.39127717005675E-8	IMPLEMENTATION	3.066825815489419E-8	DOCUMENTATION	1.4730577646075395E-8	DEFECT
// Default the Proxool alias setting	WITHOUT_CLASSIFICATION	0.9999995295651232	WITHOUT_CLASSIFICATION	2.2868054777345652E-7	DESIGN	1.1829718507956277E-7	IMPLEMENTATION	6.801561765326915E-8	DEFECT	3.551298787926257E-8	TEST	1.9928538312839355E-8	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9998202212394774	WITHOUT_CLASSIFICATION	1.7952361741928888E-4	DESIGN	9.1993822151862E-8	DOCUMENTATION	6.056020984493866E-8	DEFECT	5.185464471997798E-8	IMPLEMENTATION	5.073442665210216E-8	TEST
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9998202212394774	WITHOUT_CLASSIFICATION	1.7952361741928888E-4	DESIGN	9.1993822151862E-8	DOCUMENTATION	6.056020984493866E-8	DEFECT	5.185464471997798E-8	IMPLEMENTATION	5.073442665210216E-8	TEST
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9975919823283274	WITHOUT_CLASSIFICATION	0.0023560532095905093	IMPLEMENTATION	3.696354219230445E-5	DEFECT	7.441826199887646E-6	DESIGN	7.017101375036449E-6	DOCUMENTATION	5.419923147821437E-7	TEST
// Set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.9999780547339125	WITHOUT_CLASSIFICATION	1.526389295013411E-5	IMPLEMENTATION	5.148948152693163E-6	DEFECT	6.097422717038791E-7	DOCUMENTATION	5.302159727188286E-7	TEST	3.9246674019248855E-7	DESIGN
// Configured using the JAXP Configurator	WITHOUT_CLASSIFICATION	0.9998017795403555	WITHOUT_CLASSIFICATION	1.9287141136956775E-4	DESIGN	2.860094561438351E-6	DEFECT	1.7617202723085966E-6	TEST	4.4270368648100994E-7	DOCUMENTATION	2.84529754610591E-7	IMPLEMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9998202212394774	WITHOUT_CLASSIFICATION	1.7952361741928888E-4	DESIGN	9.1993822151862E-8	DOCUMENTATION	6.056020984493866E-8	DEFECT	5.185464471997798E-8	IMPLEMENTATION	5.073442665210216E-8	TEST
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9975919823283274	WITHOUT_CLASSIFICATION	0.0023560532095905093	IMPLEMENTATION	3.696354219230445E-5	DEFECT	7.441826199887646E-6	DESIGN	7.017101375036449E-6	DOCUMENTATION	5.419923147821437E-7	TEST
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9975919823283274	WITHOUT_CLASSIFICATION	0.0023560532095905093	IMPLEMENTATION	3.696354219230445E-5	DEFECT	7.441826199887646E-6	DESIGN	7.017101375036449E-6	DOCUMENTATION	5.419923147821437E-7	TEST
// Configured using the Properties File Configurator	WITHOUT_CLASSIFICATION	0.9999471754725082	WITHOUT_CLASSIFICATION	5.147704218890496E-5	DESIGN	1.1477794688333854E-6	TEST	1.4719619032321831E-7	DEFECT	3.31557855955601E-8	IMPLEMENTATION	1.9353858133241333E-8	DOCUMENTATION
// Remember Isolation level	WITHOUT_CLASSIFICATION	0.9999772440058756	WITHOUT_CLASSIFICATION	1.4353222456866822E-5	IMPLEMENTATION	3.982761108924287E-6	DEFECT	3.7734680720017218E-6	DESIGN	4.095237628090901E-7	TEST	2.3701872382268002E-7	DOCUMENTATION
// If the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.9999999654316151	WITHOUT_CLASSIFICATION	3.249866308136241E-8	DEFECT	1.314569615874212E-9	DESIGN	3.1649733589102387E-10	TEST	2.468360468942657E-10	IMPLEMENTATION	1.918191315856715E-10	DOCUMENTATION
// We have created the pool ourselves, so shut it down	WITHOUT_CLASSIFICATION	0.999961562651436	WITHOUT_CLASSIFICATION	1.7952481875608077E-5	IMPLEMENTATION	1.5713470478838997E-5	TEST	3.1404202631138073E-6	DESIGN	1.3426811055858394E-6	DEFECT	2.882948409704332E-7	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9982329760427393	WITHOUT_CLASSIFICATION	8.02563172079566E-4	DEFECT	5.448282171955927E-4	IMPLEMENTATION	4.109525263814617E-4	DESIGN	5.193163025267881E-6	DOCUMENTATION	3.486878578750321E-6	TEST
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9982329760427393	WITHOUT_CLASSIFICATION	8.02563172079566E-4	DEFECT	5.448282171955927E-4	IMPLEMENTATION	4.109525263814617E-4	DESIGN	5.193163025267881E-6	DOCUMENTATION	3.486878578750321E-6	TEST
//always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.9999850060239464	WITHOUT_CLASSIFICATION	8.451617679442602E-6	DESIGN	4.995874349544038E-6	IMPLEMENTATION	1.2995411526864764E-6	DEFECT	1.440285020050709E-7	DOCUMENTATION	1.0291436997370149E-7	TEST
//public Currency getCurrency(int col) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9936920671500681	WITHOUT_CLASSIFICATION	0.006206444686136941	DESIGN	7.846636426126436E-5	DEFECT	1.258139362273499E-5	DOCUMENTATION	9.582176437771251E-6	TEST	8.582294733050131E-7	IMPLEMENTATION
// default is POJO	WITHOUT_CLASSIFICATION	0.9999975073851987	WITHOUT_CLASSIFICATION	9.025277778280337E-7	DESIGN	7.402875515770651E-7	IMPLEMENTATION	6.244839825269563E-7	DEFECT	1.8490278585981352E-7	TEST	4.041270360397773E-8	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999947020203693	WITHOUT_CLASSIFICATION	5.2516497144127206E-6	DESIGN	2.6496970745426828E-8	DEFECT	8.188497060726414E-9	IMPLEMENTATION	5.99402057487121E-9	TEST	5.650427886252741E-9	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999947020203693	WITHOUT_CLASSIFICATION	5.2516497144127206E-6	DESIGN	2.6496970745426828E-8	DEFECT	8.188497060726414E-9	IMPLEMENTATION	5.99402057487121E-9	TEST	5.650427886252741E-9	DOCUMENTATION
//private CacheEntry cacheEntry;	WITHOUT_CLASSIFICATION	0.9999847119482905	WITHOUT_CLASSIFICATION	1.4795534628804436E-5	DESIGN	2.498556844821704E-7	DOCUMENTATION	1.1066542743247162E-7	IMPLEMENTATION	8.35761218216914E-8	DEFECT	4.841984705360215E-8	TEST
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9971676729668284	WITHOUT_CLASSIFICATION	0.0015244838011487373	DESIGN	6.315051070749238E-4	TEST	4.427116011425445E-4	IMPLEMENTATION	1.7944342468951044E-4	DEFECT	5.418309911586879E-5	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9992633809488456	WITHOUT_CLASSIFICATION	7.161789972547629E-4	DESIGN	8.534214538531337E-6	DEFECT	8.067654065938538E-6	IMPLEMENTATION	3.2623831697626114E-6	TEST	5.75802125332699E-7	DOCUMENTATION
// get the updated snapshot of the entity state by cloning current state; // it is safe to copy in place, since by this time no-one else (should have) // has a reference  to the array	WITHOUT_CLASSIFICATION	0.9999998138053714	WITHOUT_CLASSIFICATION	1.2020291996108395E-7	DESIGN	3.3612649169784745E-8	DEFECT	2.4791808947184164E-8	IMPLEMENTATION	4.2858098646837794E-9	DOCUMENTATION	3.301440598818332E-9	TEST
// this entity defines proeprty generation, so process those generated // values...	WITHOUT_CLASSIFICATION	0.999973035009043	WITHOUT_CLASSIFICATION	2.691510369115218E-5	DESIGN	2.3748657060587555E-8	DOCUMENTATION	2.238823043834478E-8	TEST	3.690405926211113E-9	DEFECT	5.997236216108835E-11	IMPLEMENTATION
// have the entity entry perform post-update processing, passing it the // update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.9999996588718675	WITHOUT_CLASSIFICATION	1.4668333593379216E-7	IMPLEMENTATION	8.918063706795215E-8	DESIGN	8.395907024300363E-8	DEFECT	1.8504902636695735E-8	DOCUMENTATION	2.8001864597660894E-9	TEST
/*!persister.isCacheInvalidationRequired()*/	WITHOUT_CLASSIFICATION	0.9946461624856436	WITHOUT_CLASSIFICATION	0.004733808851527259	DESIGN	5.586442813426176E-4	DEFECT	5.401381692025631E-5	IMPLEMENTATION	4.124887727618801E-6	DOCUMENTATION	3.2456768387987874E-6	TEST
// need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.9971763319637368	WITHOUT_CLASSIFICATION	0.0017078307419896748	DESIGN	0.0010805212191179248	IMPLEMENTATION	2.0496612530860863E-5	DOCUMENTATION	7.6200741711184064E-6	DEFECT	7.199388453587817E-6	TEST
//sort first by role name	WITHOUT_CLASSIFICATION	0.9997763262954603	WITHOUT_CLASSIFICATION	2.0363068927421553E-4	DESIGN	9.975208151622519E-6	IMPLEMENTATION	6.9749311880799675E-6	TEST	1.693113918540791E-6	DOCUMENTATION	1.3997620074985567E-6	DEFECT
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9992633809488456	WITHOUT_CLASSIFICATION	7.161789972547629E-4	DESIGN	8.534214538531337E-6	DEFECT	8.067654065938538E-6	IMPLEMENTATION	3.2623831697626114E-6	TEST	5.75802125332699E-7	DOCUMENTATION
//then by fk	WITHOUT_CLASSIFICATION	0.9992356372924249	WITHOUT_CLASSIFICATION	3.222080486102168E-4	IMPLEMENTATION	2.4247316122167706E-4	DESIGN	1.1196475929889381E-4	DEFECT	4.676745075326411E-5	TEST	4.094928769105958E-5	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9997093444773467	WITHOUT_CLASSIFICATION	1.4289548617694598E-4	DESIGN	1.0908830056652743E-4	IMPLEMENTATION	2.28673603721071E-5	DEFECT	9.358243188904882E-6	DOCUMENTATION	6.446132348808841E-6	TEST
// nothing to do	WITHOUT_CLASSIFICATION	0.9997093444773467	WITHOUT_CLASSIFICATION	1.4289548617694598E-4	DESIGN	1.0908830056652743E-4	IMPLEMENTATION	2.28673603721071E-5	DEFECT	9.358243188904882E-6	DOCUMENTATION	6.446132348808841E-6	TEST
// an existing collection that was either non-empty or uninitialized // is replaced by null or a different collection // (if the collection is uninitialized, hibernate has no way of // knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.9987058228956497	WITHOUT_CLASSIFICATION	0.0012933804303190024	DESIGN	4.2784269607562976E-7	TEST	2.2155240484890466E-7	IMPLEMENTATION	1.307857357999323E-7	DEFECT	1.649319458971675E-8	DOCUMENTATION
// this method is called when a new non-null collection is persisted // or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.9987685729356722	WITHOUT_CLASSIFICATION	0.0012190227404027436	DESIGN	8.778963714597793E-6	TEST	3.3568145476580384E-6	IMPLEMENTATION	1.4003740742810376E-7	DEFECT	1.2850825531477033E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.8821734104942146	WITHOUT_CLASSIFICATION	0.11648766582630844	DESIGN	0.0012969283427300903	IMPLEMENTATION	3.1958509143097164E-5	DEFECT	6.230578072380751E-6	TEST	3.8062495315057387E-6	DOCUMENTATION
//do nothing - we only need to notify the cache...	WITHOUT_CLASSIFICATION	0.9999792993879287	WITHOUT_CLASSIFICATION	8.377285578470718E-6	DESIGN	7.813292920898433E-6	DOCUMENTATION	2.4931822919988966E-6	IMPLEMENTATION	1.0472915577115317E-6	TEST	9.69559722366763E-7	DEFECT
//sort first by entity name	WITHOUT_CLASSIFICATION	0.9998606773417921	WITHOUT_CLASSIFICATION	9.186081770875111E-5	DESIGN	3.072607538285161E-5	IMPLEMENTATION	1.0512469102192636E-5	TEST	5.278402643147455E-6	DOCUMENTATION	9.448933710124705E-7	DEFECT
//then by id	WITHOUT_CLASSIFICATION	0.9982964307214106	WITHOUT_CLASSIFICATION	0.0012959654034854033	IMPLEMENTATION	2.0234442707646789E-4	DESIGN	1.0658966463768902E-4	DEFECT	4.9347226596531876E-5	DOCUMENTATION	4.9322556793339584E-5	TEST
// to be safe...	WITHOUT_CLASSIFICATION	0.9999833770433069	WITHOUT_CLASSIFICATION	7.971743750487888E-6	DEFECT	4.058847561353782E-6	DESIGN	3.779485442837556E-6	IMPLEMENTATION	5.793817564102526E-7	DOCUMENTATION	2.334981820846539E-7	TEST
// no transformations took place, so handle it as we would a // non-instrumented class	WITHOUT_CLASSIFICATION	0.9999392577525736	WITHOUT_CLASSIFICATION	4.987765479834174E-5	IMPLEMENTATION	1.0017792898967657E-5	DESIGN	6.08791652081121E-7	DOCUMENTATION	2.2817871630002351E-7	TEST	9.829360816070916E-9	DEFECT
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999998249153246	WITHOUT_CLASSIFICATION	1.7268360015262416E-7	DESIGN	1.177775426933492E-9	TEST	1.0072892404831838E-9	DEFECT	1.266080007373054E-10	DOCUMENTATION	8.940256991449822E-11	IMPLEMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999998249153246	WITHOUT_CLASSIFICATION	1.7268360015262416E-7	DESIGN	1.177775426933492E-9	TEST	1.0072892404831838E-9	DEFECT	1.266080007373054E-10	DOCUMENTATION	8.940256991449822E-11	IMPLEMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999893990420282	WITHOUT_CLASSIFICATION	6.19448247116322E-6	DESIGN	1.7013476633194105E-6	DEFECT	1.3054935329138277E-6	IMPLEMENTATION	1.3054185616261447E-6	DOCUMENTATION	9.42157426849326E-8	TEST
//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9989806027894588	WITHOUT_CLASSIFICATION	7.638030263867322E-4	IMPLEMENTATION	2.525332801006826E-4	TEST	2.2192169649772113E-6	DOCUMENTATION	5.287553548169072E-7	DEFECT	3.129317341515543E-7	DESIGN
// set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.9999977366612894	WITHOUT_CLASSIFICATION	2.088053329186135E-6	DESIGN	6.071362868986082E-8	DEFECT	4.9675332607342297E-8	TEST	4.1629761512987144E-8	DOCUMENTATION	2.3266658552695433E-8	IMPLEMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999984079630069	WITHOUT_CLASSIFICATION	1.0956349996256274E-6	DESIGN	2.429796499507866E-7	DEFECT	1.853587191865963E-7	IMPLEMENTATION	3.719670114710292E-8	DOCUMENTATION	3.086692320239661E-8	TEST
// invokespecial	WITHOUT_CLASSIFICATION	0.9999996718613702	WITHOUT_CLASSIFICATION	1.3817709088865404E-7	DOCUMENTATION	6.882812470162452E-8	IMPLEMENTATION	5.4084663973206266E-8	DEFECT	3.52882498287873E-8	DESIGN	3.176050049015601E-8	TEST
// return	WITHOUT_CLASSIFICATION	0.9999896258511505	WITHOUT_CLASSIFICATION	8.41761695605982E-6	DESIGN	1.01872460842426E-6	DEFECT	8.353838703735997E-7	IMPLEMENTATION	5.83979143117521E-8	DOCUMENTATION	4.402550020837714E-8	TEST
// aload_1 // load bean	WITHOUT_CLASSIFICATION	0.9999944065642042	WITHOUT_CLASSIFICATION	3.210717374201315E-6	IMPLEMENTATION	1.331586488648704E-6	DEFECT	6.944376026550097E-7	DESIGN	1.8534390007369825E-7	TEST	1.7135043015520786E-7	DOCUMENTATION
// checkcast // cast bean	WITHOUT_CLASSIFICATION	0.9999856736945989	WITHOUT_CLASSIFICATION	9.745291497760048E-6	IMPLEMENTATION	2.6001006867562527E-6	DESIGN	1.4532409030094658E-6	TEST	3.7847079377135976E-7	DOCUMENTATION	1.4920151981410638E-7	DEFECT
// astore_3 // store bean	WITHOUT_CLASSIFICATION	0.9999989898701801	WITHOUT_CLASSIFICATION	5.277767853365349E-7	IMPLEMENTATION	2.143309633068703E-7	DESIGN	1.611248736658823E-7	TEST	6.820615861869996E-8	DEFECT	3.869103915014098E-8	DOCUMENTATION
// aload_2 // args	WITHOUT_CLASSIFICATION	0.9999967579405136	WITHOUT_CLASSIFICATION	1.8200615919659435E-6	DESIGN	1.0167262950945311E-6	IMPLEMENTATION	3.123370455850274E-7	DEFECT	6.000613900961516E-8	TEST	3.2928414837417365E-8	DOCUMENTATION
// iconst_i // continue to aastore // growing stack is 1	WITHOUT_CLASSIFICATION	0.9969764247377836	WITHOUT_CLASSIFICATION	0.0028212908733408044	DEFECT	1.7610201517929917E-4	DESIGN	2.2536197399279237E-5	IMPLEMENTATION	2.2365981980863194E-6	TEST	1.4095780988605535E-6	DOCUMENTATION
// new	WITHOUT_CLASSIFICATION	0.9992907474165195	WITHOUT_CLASSIFICATION	6.545573836208462E-4	DESIGN	3.689647731314769E-5	IMPLEMENTATION	9.694389934621016E-6	DEFECT	4.673884466111067E-6	DOCUMENTATION	3.430448145643356E-6	TEST
// dup	WITHOUT_CLASSIFICATION	0.9999843297987553	WITHOUT_CLASSIFICATION	1.1629565759910395E-5	DESIGN	3.2799706832556456E-6	DEFECT	3.56617309313411E-7	IMPLEMENTATION	2.497815167948509E-7	DOCUMENTATION	1.5426597542933416E-7	TEST
// aload_3 // load the raw bean	WITHOUT_CLASSIFICATION	0.999995623614428	WITHOUT_CLASSIFICATION	3.2033852914387946E-6	IMPLEMENTATION	6.03841035441426E-7	DEFECT	2.597184262958027E-7	DESIGN	1.9929574201190066E-7	TEST	1.1014507690513836E-7	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999983748361295	WITHOUT_CLASSIFICATION	1.415219767426371E-6	DESIGN	1.1062827631740414E-7	DEFECT	5.975219818606198E-8	DOCUMENTATION	3.7631089048192105E-8	TEST	1.932539468114423E-9	IMPLEMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999978259495709	WITHOUT_CLASSIFICATION	1.17173006915813E-6	DEFECT	5.972005745489021E-7	DESIGN	1.6689916066376783E-7	IMPLEMENTATION	1.5548950089200122E-7	DOCUMENTATION	8.273112386367456E-8	TEST
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999978259495709	WITHOUT_CLASSIFICATION	1.17173006915813E-6	DEFECT	5.972005745489021E-7	DESIGN	1.6689916066376783E-7	IMPLEMENTATION	1.5548950089200122E-7	DOCUMENTATION	8.273112386367456E-8	TEST
// aastore // args	WITHOUT_CLASSIFICATION	0.9999994993666333	WITHOUT_CLASSIFICATION	3.0902564445986973E-7	DESIGN	1.2858626648635094E-7	IMPLEMENTATION	3.124014782963317E-8	DEFECT	2.390051092555038E-8	TEST	7.880796845671941E-9	DOCUMENTATION
/* | this | bean | args | i | raw bean | exception | */	WITHOUT_CLASSIFICATION	0.9999920687002499	WITHOUT_CLASSIFICATION	6.2111403570551066E-6	DESIGN	1.0134288052906669E-6	TEST	6.009135982659432E-7	DEFECT	5.74412365612983E-8	DOCUMENTATION	4.8375752847054774E-8	IMPLEMENTATION
// required to exception table // iconst_0 // i	WITHOUT_CLASSIFICATION	0.9999760866967838	WITHOUT_CLASSIFICATION	1.9572178180481127E-5	DESIGN	4.226320244803451E-6	DEFECT	5.306546682717476E-8	IMPLEMENTATION	5.068518050522747E-8	TEST	1.105414361445091E-8	DOCUMENTATION
// istore_3 // store i	WITHOUT_CLASSIFICATION	0.9999995395638803	WITHOUT_CLASSIFICATION	2.584426166314368E-7	DEFECT	8.315603462499403E-8	IMPLEMENTATION	6.523022716451782E-8	TEST	3.770666024415049E-8	DESIGN	1.5900580922013207E-8	DOCUMENTATION
// aload_1 // load the bean	WITHOUT_CLASSIFICATION	0.999990181723673	WITHOUT_CLASSIFICATION	8.652568230328821E-6	IMPLEMENTATION	3.5955576246814294E-7	DESIGN	3.3479254886025553E-7	DEFECT	2.747663685241631E-7	DOCUMENTATION	1.9659341669570997E-7	TEST
// checkcast // cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.9996650738556083	WITHOUT_CLASSIFICATION	2.8716171820065576E-4	DESIGN	3.553871410554196E-5	IMPLEMENTATION	8.249309182478114E-6	TEST	2.3486822807623277E-6	DEFECT	1.6277206223553095E-6	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999974216551782	WITHOUT_CLASSIFICATION	9.704030145965447E-7	DEFECT	6.601193432926562E-7	IMPLEMENTATION	5.493058882266398E-7	DESIGN	3.30411003279906E-7	DOCUMENTATION	6.81055722369631E-8	TEST
// start region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9989684963733122	WITHOUT_CLASSIFICATION	9.701882330947129E-4	DESIGN	5.619281260738993E-5	DEFECT	2.247371824007705E-6	IMPLEMENTATION	1.7611539846765812E-6	TEST	1.1140551769667275E-6	DOCUMENTATION
// iinc 3, 1	WITHOUT_CLASSIFICATION	0.9999945638173051	WITHOUT_CLASSIFICATION	2.0211530629378993E-6	DESIGN	1.3966546189725904E-6	DEFECT	9.835227476711815E-7	IMPLEMENTATION	6.693519591249992E-7	DOCUMENTATION	3.655003062314935E-7	TEST
// aload 4 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999942321182527	WITHOUT_CLASSIFICATION	4.0927079479744055E-6	IMPLEMENTATION	7.13519767100295E-7	DEFECT	6.434480238639028E-7	DESIGN	1.8201659712016187E-7	TEST	1.3618941130117928E-7	DOCUMENTATION
// aload_2 // load the args	WITHOUT_CLASSIFICATION	0.9999992549971898	WITHOUT_CLASSIFICATION	6.736288518524427E-7	IMPLEMENTATION	2.511203340887821E-8	DEFECT	1.5576262380122374E-8	DOCUMENTATION	1.5448636321836244E-8	DESIGN	1.5237026343455357E-8	TEST
// iconst_i	WITHOUT_CLASSIFICATION	0.9999131646546008	WITHOUT_CLASSIFICATION	7.513072880046084E-5	DESIGN	6.224226771240875E-6	DEFECT	2.877864435979384E-6	IMPLEMENTATION	1.3350031112457263E-6	TEST	1.2675222803056902E-6	DOCUMENTATION
// aaload	WITHOUT_CLASSIFICATION	0.9999952069438882	WITHOUT_CLASSIFICATION	2.688477614571328E-6	DESIGN	1.3642164194901553E-6	IMPLEMENTATION	5.761114212154122E-7	DEFECT	8.277640396506261E-8	TEST	8.147425247330485E-8	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999980193975772	WITHOUT_CLASSIFICATION	1.1556792407312633E-6	IMPLEMENTATION	5.694725084949957E-7	DESIGN	1.1587035474216208E-7	TEST	9.96677862025588E-8	DOCUMENTATION	3.991253267123858E-8	DEFECT
// checkcast (case of primitive type) // invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.9999992794172886	WITHOUT_CLASSIFICATION	4.899854532698865E-7	DESIGN	9.791162193017292E-8	IMPLEMENTATION	7.960216851030726E-8	DOCUMENTATION	3.900829947586169E-8	DEFECT	1.4075168203711827E-8	TEST
// checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.999990931241508	WITHOUT_CLASSIFICATION	7.000677785894641E-6	DESIGN	1.1007706302752682E-6	IMPLEMENTATION	8.290390729381294E-7	DOCUMENTATION	6.927705954411959E-8	TEST	6.899394341758962E-8	DEFECT
/* current stack len = 2 */	WITHOUT_CLASSIFICATION	0.9999858129948925	WITHOUT_CLASSIFICATION	7.220684746170433E-6	IMPLEMENTATION	5.039911104171511E-6	DEFECT	1.0148386233924067E-6	DESIGN	7.576634517369015E-7	DOCUMENTATION	1.5390718191446857E-7	TEST
// end region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.8313823352143076	WITHOUT_CLASSIFICATION	0.16846830849139285	DESIGN	1.2306993161580667E-4	DEFECT	1.2252104736163473E-5	IMPLEMENTATION	8.882386224141316E-6	DOCUMENTATION	5.151871723571409E-6	TEST
// register in exception table	WITHOUT_CLASSIFICATION	0.9999961565690051	WITHOUT_CLASSIFICATION	3.777587052256125E-6	DESIGN	3.1745503208860136E-8	DEFECT	2.7512600785374846E-8	TEST	3.825777557706191E-9	IMPLEMENTATION	2.760061103826573E-9	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999984079630069	WITHOUT_CLASSIFICATION	1.0956349996256274E-6	DESIGN	2.429796499507866E-7	DEFECT	1.853587191865963E-7	IMPLEMENTATION	3.719670114710292E-8	DOCUMENTATION	3.086692320239661E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.9999984079630069	WITHOUT_CLASSIFICATION	1.0956349996256274E-6	DESIGN	2.429796499507866E-7	DEFECT	1.853587191865963E-7	IMPLEMENTATION	3.719670114710292E-8	DOCUMENTATION	3.086692320239661E-8	TEST
// return	WITHOUT_CLASSIFICATION	0.9999896258511505	WITHOUT_CLASSIFICATION	8.41761695605982E-6	DESIGN	1.01872460842426E-6	DEFECT	8.353838703735997E-7	IMPLEMENTATION	5.83979143117521E-8	DOCUMENTATION	4.402550020837714E-8	TEST
// return	WITHOUT_CLASSIFICATION	0.9999896258511505	WITHOUT_CLASSIFICATION	8.41761695605982E-6	DESIGN	1.01872460842426E-6	DEFECT	8.353838703735997E-7	IMPLEMENTATION	5.83979143117521E-8	DOCUMENTATION	4.402550020837714E-8	TEST
// dup	WITHOUT_CLASSIFICATION	0.9999843297987553	WITHOUT_CLASSIFICATION	1.1629565759910395E-5	DESIGN	3.2799706832556456E-6	DEFECT	3.56617309313411E-7	IMPLEMENTATION	2.497815167948509E-7	DOCUMENTATION	1.5426597542933416E-7	TEST
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999978259495709	WITHOUT_CLASSIFICATION	1.17173006915813E-6	DEFECT	5.972005745489021E-7	DESIGN	1.6689916066376783E-7	IMPLEMENTATION	1.5548950089200122E-7	DOCUMENTATION	8.273112386367456E-8	TEST
// checkcast	WITHOUT_CLASSIFICATION	0.9999980193975772	WITHOUT_CLASSIFICATION	1.1556792407312633E-6	IMPLEMENTATION	5.694725084949957E-7	DESIGN	1.1587035474216208E-7	TEST	9.96677862025588E-8	DOCUMENTATION	3.991253267123858E-8	DEFECT
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999991115000839	WITHOUT_CLASSIFICATION	7.924660067473433E-7	DESIGN	8.484938445146477E-8	DEFECT	4.679575538907745E-9	IMPLEMENTATION	3.6750115621413597E-9	TEST	2.829937889702259E-9	DOCUMENTATION
// astore 5 // store exception	WITHOUT_CLASSIFICATION	0.9999998386331046	WITHOUT_CLASSIFICATION	1.1147000066375567E-7	DEFECT	3.9676316920553904E-8	DESIGN	4.340953325182447E-9	DOCUMENTATION	4.323051775437899E-9	TEST	1.556572846731988E-9	IMPLEMENTATION
// new // BulkAccessorException	WITHOUT_CLASSIFICATION	0.9981343249759035	WITHOUT_CLASSIFICATION	0.0015790419328664369	DESIGN	2.758537498209728E-4	DEFECT	5.367883902867298E-6	DOCUMENTATION	3.830633303564152E-6	TEST	1.580824202511445E-6	IMPLEMENTATION
// aload 5 // load exception	WITHOUT_CLASSIFICATION	0.9999970904113283	WITHOUT_CLASSIFICATION	2.511936246322101E-6	DEFECT	2.916702525490918E-7	DESIGN	6.095189451679438E-8	DOCUMENTATION	2.8679449717845688E-8	IMPLEMENTATION	1.635082854692075E-8	TEST
// iload_3 // i	WITHOUT_CLASSIFICATION	0.999996485849411	WITHOUT_CLASSIFICATION	2.005617608540528E-6	DEFECT	6.959306629434238E-7	IMPLEMENTATION	4.508488849325311E-7	DESIGN	2.6905725488354594E-7	TEST	9.269617759354206E-8	DOCUMENTATION
// invokespecial // BulkAccessorException.<init>	WITHOUT_CLASSIFICATION	0.999997035269297	WITHOUT_CLASSIFICATION	2.430108216067168E-6	DEFECT	1.8980659475988978E-7	DOCUMENTATION	1.6327800671564568E-7	DESIGN	1.1169003093091363E-7	TEST	6.984785467098646E-8	IMPLEMENTATION
// athrow	WITHOUT_CLASSIFICATION	0.9999963794660953	WITHOUT_CLASSIFICATION	1.7534770839018106E-6	DEFECT	1.0602290670798018E-6	IMPLEMENTATION	5.446332350098037E-7	DESIGN	1.7015612851539503E-7	TEST	9.203839020650881E-8	DOCUMENTATION
// WARNING: classfile only	WITHOUT_CLASSIFICATION	0.9999445104626512	WITHOUT_CLASSIFICATION	4.1512794322666587E-5	DESIGN	8.940377433584606E-6	DEFECT	3.456011414229174E-6	IMPLEMENTATION	9.274193931968013E-7	DOCUMENTATION	6.529347850373659E-7	TEST
//swallow	WITHOUT_CLASSIFICATION	0.9995787593173987	WITHOUT_CLASSIFICATION	2.5893309363484584E-4	DESIGN	7.798580676864269E-5	IMPLEMENTATION	7.36690428934718E-5	DEFECT	5.4348065080191314E-6	TEST	5.217932796379839E-6	DOCUMENTATION
/* local variable | this | */	WITHOUT_CLASSIFICATION	0.9999969511439678	WITHOUT_CLASSIFICATION	2.7565549625355856E-6	DESIGN	1.623428850288528E-7	IMPLEMENTATION	1.0050253999207154E-7	TEST	2.107954902889396E-8	DOCUMENTATION	8.376095707738054E-9	DEFECT
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999953198884434	WITHOUT_CLASSIFICATION	3.296655863910323E-6	DESIGN	5.10712673530462E-7	TEST	4.4140186379825497E-7	IMPLEMENTATION	2.9751854734301304E-7	DOCUMENTATION	1.3382260803153588E-7	DEFECT
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999953198884434	WITHOUT_CLASSIFICATION	3.296655863910323E-6	DESIGN	5.10712673530462E-7	TEST	4.4140186379825497E-7	IMPLEMENTATION	2.9751854734301304E-7	DOCUMENTATION	1.3382260803153588E-7	DEFECT
// getfield // get field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999933649602935	WITHOUT_CLASSIFICATION	6.565665260987185E-6	DESIGN	2.7764340664472934E-8	DEFECT	2.4412615502270578E-8	IMPLEMENTATION	1.353656350082788E-8	TEST	3.66092598740002E-9	DOCUMENTATION
// areturn // return the value of the field	WITHOUT_CLASSIFICATION	0.9999977632202158	WITHOUT_CLASSIFICATION	2.1431215311728465E-6	DESIGN	7.886846128970861E-8	DEFECT	1.0214033095063337E-8	IMPLEMENTATION	2.7063421085853008E-9	DOCUMENTATION	1.8694166820402733E-9	TEST
/* local variables | this | callback | */	WITHOUT_CLASSIFICATION	0.9996285066115577	WITHOUT_CLASSIFICATION	3.5716232716041904E-4	DESIGN	6.1132958933836515E-6	DEFECT	5.106016444289157E-6	IMPLEMENTATION	2.7071459532076345E-6	TEST	4.0460299101271826E-7	DOCUMENTATION
// aload_1 // load callback	WITHOUT_CLASSIFICATION	0.999979792237462	WITHOUT_CLASSIFICATION	8.493163475731004E-6	IMPLEMENTATION	6.6259591848266185E-6	DEFECT	4.792805750307264E-6	DESIGN	1.575381240236411E-7	DOCUMENTATION	1.3829600324621341E-7	TEST
// putfield // put field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999990348927744	WITHOUT_CLASSIFICATION	8.467711556594888E-7	DESIGN	8.438237491934536E-8	IMPLEMENTATION	2.4737990132389893E-8	DEFECT	5.577038530732762E-9	TEST	3.63866644038721E-9	DOCUMENTATION
// case of non-static field	WITHOUT_CLASSIFICATION	0.9999998261972406	WITHOUT_CLASSIFICATION	9.663114597468618E-8	IMPLEMENTATION	3.606633648057278E-8	DEFECT	2.989220977263438E-8	DESIGN	9.996092207432193E-9	DOCUMENTATION	1.2169749083758068E-9	TEST
// getfield // get each field	WITHOUT_CLASSIFICATION	0.9999980306551227	WITHOUT_CLASSIFICATION	1.8305906201890249E-6	DESIGN	6.134741915621372E-8	DEFECT	4.674022748279482E-8	TEST	1.8716118176431515E-8	IMPLEMENTATION	1.195049231092723E-8	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999998237252186	WITHOUT_CLASSIFICATION	1.4966702175271322E-7	DESIGN	2.053831758659167E-8	DEFECT	3.1671499863498368E-9	TEST	2.0531932047853095E-9	DOCUMENTATION	8.490988673091054E-10	IMPLEMENTATION
// ifnonnull	WITHOUT_CLASSIFICATION	0.9999925220280375	WITHOUT_CLASSIFICATION	5.25259988572256E-6	DEFECT	1.3264732698275201E-6	DESIGN	6.275333553828396E-7	IMPLEMENTATION	1.551093741596618E-7	DOCUMENTATION	1.162560774714379E-7	TEST
// *return // each type	WITHOUT_CLASSIFICATION	0.9999998109099478	WITHOUT_CLASSIFICATION	1.5162862271976738E-7	DESIGN	2.0653917567827433E-8	DEFECT	9.663155247346444E-9	IMPLEMENTATION	5.2171784451190424E-9	DOCUMENTATION	1.9271781808333958E-9	TEST
// *return // each type	WITHOUT_CLASSIFICATION	0.9999998109099478	WITHOUT_CLASSIFICATION	1.5162862271976738E-7	DESIGN	2.0653917567827433E-8	DEFECT	9.663155247346444E-9	IMPLEMENTATION	5.2171784451190424E-9	DOCUMENTATION	1.9271781808333958E-9	TEST
// *store_1 // each type	WITHOUT_CLASSIFICATION	0.9999999471950133	WITHOUT_CLASSIFICATION	3.4431245524930585E-8	DESIGN	8.99467250595089E-9	IMPLEMENTATION	4.004946660890239E-9	DEFECT	2.774318920165021E-9	TEST	2.5998031392414406E-9	DOCUMENTATION
// ldc // name of the field	WITHOUT_CLASSIFICATION	0.9999841314777417	WITHOUT_CLASSIFICATION	1.51226147125713E-5	DESIGN	2.832421937958131E-7	IMPLEMENTATION	1.899482433279266E-7	DOCUMENTATION	1.3927886951423252E-7	TEST	1.3343823906134858E-7	DEFECT
// *load_1 // each type	WITHOUT_CLASSIFICATION	0.9999998357615058	WITHOUT_CLASSIFICATION	6.802954411993704E-8	DESIGN	5.592352751564731E-8	IMPLEMENTATION	2.2328927382650986E-8	DEFECT	1.231571948860196E-8	DOCUMENTATION	5.640775845755941E-9	TEST
// invokeinterface // invoke Callback.read*() // each type	WITHOUT_CLASSIFICATION	0.999999706077549	WITHOUT_CLASSIFICATION	2.50775924506981E-7	DESIGN	3.5636041136329025E-8	DEFECT	5.025946073748691E-9	DOCUMENTATION	2.020112994983218E-9	TEST	4.6442632241579133E-10	IMPLEMENTATION
// int	WITHOUT_CLASSIFICATION	0.9999936435767678	WITHOUT_CLASSIFICATION	3.3002593440346956E-6	DEFECT	2.4859598644642597E-6	DESIGN	2.6805841500854037E-7	DOCUMENTATION	2.149721417087235E-7	TEST	8.71734670856841E-8	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999896258511505	WITHOUT_CLASSIFICATION	8.41761695605982E-6	DESIGN	1.01872460842426E-6	DEFECT	8.353838703735997E-7	IMPLEMENTATION	5.83979143117521E-8	DOCUMENTATION	4.402550020837714E-8	TEST
// dup	WITHOUT_CLASSIFICATION	0.9999843297987553	WITHOUT_CLASSIFICATION	1.1629565759910395E-5	DESIGN	3.2799706832556456E-6	DEFECT	3.56617309313411E-7	IMPLEMENTATION	2.497815167948509E-7	DOCUMENTATION	1.5426597542933416E-7	TEST
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999983748361295	WITHOUT_CLASSIFICATION	1.415219767426371E-6	DESIGN	1.1062827631740414E-7	DEFECT	5.975219818606198E-8	DOCUMENTATION	3.7631089048192105E-8	TEST	1.932539468114423E-9	IMPLEMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999980193975772	WITHOUT_CLASSIFICATION	1.1556792407312633E-6	IMPLEMENTATION	5.694725084949957E-7	DESIGN	1.1587035474216208E-7	TEST	9.96677862025588E-8	DOCUMENTATION	3.991253267123858E-8	DEFECT
// checkcast	WITHOUT_CLASSIFICATION	0.9999980193975772	WITHOUT_CLASSIFICATION	1.1556792407312633E-6	IMPLEMENTATION	5.694725084949957E-7	DESIGN	1.1587035474216208E-7	TEST	9.96677862025588E-8	DOCUMENTATION	3.991253267123858E-8	DEFECT
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999997883561613	WITHOUT_CLASSIFICATION	1.864788686834931E-7	DESIGN	1.923638372052647E-8	DEFECT	2.601205076132251E-9	TEST	2.2156329585312805E-9	DOCUMENTATION	1.111748103206492E-9	IMPLEMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999997883561613	WITHOUT_CLASSIFICATION	1.864788686834931E-7	DESIGN	1.923638372052647E-8	DEFECT	2.601205076132251E-9	TEST	2.2156329585312805E-9	DOCUMENTATION	1.111748103206492E-9	IMPLEMENTATION
// ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.9999964355150691	WITHOUT_CLASSIFICATION	2.3115942509639728E-6	IMPLEMENTATION	7.93756625546046E-7	DESIGN	3.060282375844241E-7	DEFECT	9.968399041864537E-8	DOCUMENTATION	5.34218266508659E-8	TEST
// *load_1	WITHOUT_CLASSIFICATION	0.9999981907854739	WITHOUT_CLASSIFICATION	7.14203192998725E-7	DESIGN	6.074786390790737E-7	DEFECT	4.3117932944042243E-7	IMPLEMENTATION	3.068614067138175E-8	TEST	2.5667223759923383E-8	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.9999981907854739	WITHOUT_CLASSIFICATION	7.14203192998725E-7	DESIGN	6.074786390790737E-7	DEFECT	4.3117932944042243E-7	IMPLEMENTATION	3.068614067138175E-8	TEST	2.5667223759923383E-8	DOCUMENTATION
// putfield	WITHOUT_CLASSIFICATION	0.9999976241353152	WITHOUT_CLASSIFICATION	1.2057954157853416E-6	IMPLEMENTATION	8.457726078517999E-7	DESIGN	2.3525266808541857E-7	DEFECT	4.960696058365176E-8	DOCUMENTATION	3.943703249298681E-8	TEST
// return ;	WITHOUT_CLASSIFICATION	0.9999839142516977	WITHOUT_CLASSIFICATION	1.2954046177294124E-5	DESIGN	1.5188986020261587E-6	DEFECT	1.4286899179318503E-6	IMPLEMENTATION	1.0549179389790161E-7	DOCUMENTATION	7.862181121413045E-8	TEST
// ldc // field name	WITHOUT_CLASSIFICATION	0.9999922373979674	WITHOUT_CLASSIFICATION	7.468329746178469E-6	DESIGN	1.51675626610335E-7	DEFECT	5.8542051245086385E-8	IMPLEMENTATION	5.3468244013655426E-8	TEST	3.0586364454483406E-8	DOCUMENTATION
// getfield // old value of the field	WITHOUT_CLASSIFICATION	0.9999980223140286	WITHOUT_CLASSIFICATION	1.4390002383898394E-6	DESIGN	5.105601366642056E-7	DEFECT	1.4645531059298694E-8	TEST	1.07320588063665E-8	DOCUMENTATION	2.7480063507121657E-9	IMPLEMENTATION
// invokeinterface // callback.write*(..)	WITHOUT_CLASSIFICATION	0.9999995072863835	WITHOUT_CLASSIFICATION	3.944024015044948E-7	DEFECT	8.202989441805412E-8	DESIGN	7.934410560314578E-9	TEST	5.6322705465343934E-9	DOCUMENTATION	2.7146395084949984E-9	IMPLEMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999922890305369	WITHOUT_CLASSIFICATION	6.7556647965089425E-6	DESIGN	5.504542746808789E-7	IMPLEMENTATION	3.026007450607172E-7	DOCUMENTATION	6.034093079779902E-8	DEFECT	4.1908716157417854E-8	TEST
// reference type	WITHOUT_CLASSIFICATION	0.9999922890305369	WITHOUT_CLASSIFICATION	6.7556647965089425E-6	DESIGN	5.504542746808789E-7	IMPLEMENTATION	3.026007450607172E-7	DOCUMENTATION	6.034093079779902E-8	DEFECT	4.1908716157417854E-8	TEST
// not array	WITHOUT_CLASSIFICATION	0.9996535469172094	WITHOUT_CLASSIFICATION	1.5195400941623574E-4	DESIGN	1.1221385872768181E-4	IMPLEMENTATION	7.59955015657077E-5	DEFECT	3.883451189355529E-6	TEST	2.406261891577629E-6	DOCUMENTATION
// array of reference type	WITHOUT_CLASSIFICATION	0.9999996322594218	WITHOUT_CLASSIFICATION	2.3691650273010836E-7	DESIGN	7.479974556222468E-8	DOCUMENTATION	3.472776389790487E-8	IMPLEMENTATION	1.3950348231559282E-8	DEFECT	7.3462178081537964E-9	TEST
// boolean	WITHOUT_CLASSIFICATION	0.9999973904005165	WITHOUT_CLASSIFICATION	1.8989457129745334E-6	DESIGN	3.318948742129478E-7	DEFECT	1.705774474234962E-7	IMPLEMENTATION	1.3208818561852127E-7	TEST	7.609326325569687E-8	DOCUMENTATION
// byte	WITHOUT_CLASSIFICATION	0.9999885869563199	WITHOUT_CLASSIFICATION	6.289174350696548E-6	IMPLEMENTATION	2.6606850149009697E-6	DESIGN	1.7457594214986658E-6	DEFECT	4.46496565734976E-7	TEST	2.709283271920992E-7	DOCUMENTATION
// char	WITHOUT_CLASSIFICATION	0.9999999288281737	WITHOUT_CLASSIFICATION	4.0485744857266026E-8	DESIGN	1.153396393867633E-8	IMPLEMENTATION	1.1087494971987086E-8	DEFECT	4.76461369819492E-9	TEST	3.3000086899570944E-9	DOCUMENTATION
// short	WITHOUT_CLASSIFICATION	0.9999933265762272	WITHOUT_CLASSIFICATION	4.666386077971593E-6	DESIGN	1.281491902474208E-6	DEFECT	3.5990757413055196E-7	IMPLEMENTATION	2.366772120111563E-7	TEST	1.2896100620604673E-7	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.999999097583827	WITHOUT_CLASSIFICATION	6.155292724102307E-7	DESIGN	2.4834091886958934E-7	DEFECT	1.4382975936423816E-8	TEST	1.3210629377588166E-8	DOCUMENTATION	1.095237646460316E-8	IMPLEMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999973059102818	WITHOUT_CLASSIFICATION	2.118839241123902E-6	DEFECT	3.7911106646889914E-7	DESIGN	9.293108551660503E-8	IMPLEMENTATION	6.039607310678914E-8	TEST	4.2812251907874567E-8	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999973059102818	WITHOUT_CLASSIFICATION	2.118839241123902E-6	DEFECT	3.7911106646889914E-7	DESIGN	9.293108551660503E-8	IMPLEMENTATION	6.039607310678914E-8	TEST	4.2812251907874567E-8	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999275707629917	WITHOUT_CLASSIFICATION	5.253820673286967E-5	DEFECT	1.819098905319409E-5	DESIGN	9.73505076417179E-7	IMPLEMENTATION	3.8288829036089406E-7	DOCUMENTATION	3.4364785550966003E-7	TEST
// long	WITHOUT_CLASSIFICATION	0.9999275707629917	WITHOUT_CLASSIFICATION	5.253820673286967E-5	DEFECT	1.819098905319409E-5	DESIGN	9.73505076417179E-7	IMPLEMENTATION	3.8288829036089406E-7	DOCUMENTATION	3.4364785550966003E-7	TEST
// bad type	WITHOUT_CLASSIFICATION	0.9999903592856946	WITHOUT_CLASSIFICATION	5.2043592242182744E-6	IMPLEMENTATION	3.6618599892927702E-6	DESIGN	3.352196823813852E-7	DOCUMENTATION	2.3916165132550543E-7	DEFECT	2.0011375815973004E-7	TEST
// bad type	WITHOUT_CLASSIFICATION	0.9999903592856946	WITHOUT_CLASSIFICATION	5.2043592242182744E-6	IMPLEMENTATION	3.6618599892927702E-6	DESIGN	3.352196823813852E-7	DOCUMENTATION	2.3916165132550543E-7	DEFECT	2.0011375815973004E-7	TEST
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999985114056634	WITHOUT_CLASSIFICATION	9.371946876487102E-7	DESIGN	2.212584224773505E-7	IMPLEMENTATION	1.8777025391653852E-7	DEFECT	9.558006346103863E-8	TEST	4.679090909961339E-8	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999985114056634	WITHOUT_CLASSIFICATION	9.371946876487102E-7	DESIGN	2.212584224773505E-7	IMPLEMENTATION	1.8777025391653852E-7	DEFECT	9.558006346103863E-8	TEST	4.679090909961339E-8	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999922890305369	WITHOUT_CLASSIFICATION	6.7556647965089425E-6	DESIGN	5.504542746808789E-7	IMPLEMENTATION	3.026007450607172E-7	DOCUMENTATION	6.034093079779902E-8	DEFECT	4.1908716157417854E-8	TEST
// double	WITHOUT_CLASSIFICATION	0.999999097583827	WITHOUT_CLASSIFICATION	6.155292724102307E-7	DESIGN	2.4834091886958934E-7	DEFECT	1.4382975936423816E-8	TEST	1.3210629377588166E-8	DOCUMENTATION	1.095237646460316E-8	IMPLEMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999973059102818	WITHOUT_CLASSIFICATION	2.118839241123902E-6	DEFECT	3.7911106646889914E-7	DESIGN	9.293108551660503E-8	IMPLEMENTATION	6.039607310678914E-8	TEST	4.2812251907874567E-8	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999973059102818	WITHOUT_CLASSIFICATION	2.118839241123902E-6	DEFECT	3.7911106646889914E-7	DESIGN	9.293108551660503E-8	IMPLEMENTATION	6.039607310678914E-8	TEST	4.2812251907874567E-8	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999275707629917	WITHOUT_CLASSIFICATION	5.253820673286967E-5	DEFECT	1.819098905319409E-5	DESIGN	9.73505076417179E-7	IMPLEMENTATION	3.8288829036089406E-7	DOCUMENTATION	3.4364785550966003E-7	TEST
// bad type	WITHOUT_CLASSIFICATION	0.9999903592856946	WITHOUT_CLASSIFICATION	5.2043592242182744E-6	IMPLEMENTATION	3.6618599892927702E-6	DESIGN	3.352196823813852E-7	DOCUMENTATION	2.3916165132550543E-7	DEFECT	2.0011375815973004E-7	TEST
// bad type	WITHOUT_CLASSIFICATION	0.9999903592856946	WITHOUT_CLASSIFICATION	5.2043592242182744E-6	IMPLEMENTATION	3.6618599892927702E-6	DESIGN	3.352196823813852E-7	DOCUMENTATION	2.3916165132550543E-7	DEFECT	2.0011375815973004E-7	TEST
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999985114056634	WITHOUT_CLASSIFICATION	9.371946876487102E-7	DESIGN	2.212584224773505E-7	IMPLEMENTATION	1.8777025391653852E-7	DEFECT	9.558006346103863E-8	TEST	4.679090909961339E-8	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999888477600364	WITHOUT_CLASSIFICATION	9.622154535248627E-6	IMPLEMENTATION	9.624523027183516E-7	DESIGN	2.9122039703534626E-7	DOCUMENTATION	2.458432640586244E-7	TEST	3.056946447346406E-8	DEFECT
//Mainly for OSCache	WITHOUT_CLASSIFICATION	0.999987407597219	WITHOUT_CLASSIFICATION	1.1308209451442495E-5	DESIGN	5.184149017157993E-7	IMPLEMENTATION	3.3701495220901437E-7	DOCUMENTATION	2.4864532306949473E-7	DEFECT	1.8011815248806438E-7	TEST
//decrement the lock	WITHOUT_CLASSIFICATION	0.9984700142247681	WITHOUT_CLASSIFICATION	0.0011834455985152061	IMPLEMENTATION	2.2975679037384698E-4	DESIGN	5.7086115150574916E-5	DOCUMENTATION	4.053901074231307E-5	DEFECT	1.9158260450061558E-5	TEST
// create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.999962506676229	WITHOUT_CLASSIFICATION	1.9211586951733873E-5	DESIGN	9.388231248192848E-6	DEFECT	6.197698223203199E-6	IMPLEMENTATION	2.463555102370392E-6	TEST	2.3225224549776092E-7	DOCUMENTATION
//recache the updated state	WITHOUT_CLASSIFICATION	0.9999918247449263	WITHOUT_CLASSIFICATION	7.340982051502476E-6	IMPLEMENTATION	2.8534416277733505E-7	DEFECT	2.137375971010782E-7	DESIGN	1.858436701774539E-7	TEST	1.493475921355163E-7	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9999252178968004	WITHOUT_CLASSIFICATION	5.332053243045567E-5	DESIGN	1.1725836232904772E-5	DEFECT	7.921953184142751E-6	IMPLEMENTATION	1.1909792965438042E-6	DOCUMENTATION	6.228020554531144E-7	TEST
//null clientLock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.9977286024104592	WITHOUT_CLASSIFICATION	0.0019459712388661334	DESIGN	2.2769540968004006E-4	DEFECT	8.871073482066011E-5	IMPLEMENTATION	7.854089768739024E-6	DOCUMENTATION	1.1661164052740256E-6	TEST
// we really could refresh the item if it // is not a lock, but it might be slower //return freshTimestamp < txTimestamp	WITHOUT_CLASSIFICATION	0.9869054816335863	WITHOUT_CLASSIFICATION	0.013084288451319079	DEFECT	7.864639896416363E-6	DESIGN	1.9904908005193857E-6	TEST	3.636234226452426E-7	IMPLEMENTATION	1.1160975152479511E-8	DOCUMENTATION
//by requiring <, we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.9932118706482945	WITHOUT_CLASSIFICATION	0.0066763316928835125	DEFECT	5.58392628432678E-5	IMPLEMENTATION	5.036325703358001E-5	DESIGN	2.95359614129498E-6	TEST	2.641542804010484E-6	DOCUMENTATION
// the user provided resulttransformer, not the one used with "select new". Here to avoid mangling // transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.9999999037844274	WITHOUT_CLASSIFICATION	6.001283686113261E-8	DESIGN	1.7002969738866817E-8	DEFECT	1.340363395375831E-8	IMPLEMENTATION	5.398092818477247E-9	TEST	3.9803923932572737E-10	DOCUMENTATION
// disassemble positional parameters	WITHOUT_CLASSIFICATION	0.9999812022096821	WITHOUT_CLASSIFICATION	1.4833209562251763E-5	IMPLEMENTATION	2.1908834845861327E-6	DESIGN	1.5062095789060384E-6	DEFECT	1.6445975844657644E-7	TEST	1.0302793378550045E-7	DOCUMENTATION
// disassemble named parameters	WITHOUT_CLASSIFICATION	0.999999464457348	WITHOUT_CLASSIFICATION	4.072919162272836E-7	DESIGN	6.11960157237106E-8	IMPLEMENTATION	3.892604360151319E-8	TEST	2.4743288972265436E-8	DEFECT	3.3853874103780628E-9	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.999867896003881	WITHOUT_CLASSIFICATION	1.1642787599542617E-4	DESIGN	8.49598594095866E-6	IMPLEMENTATION	3.982880619588816E-6	DEFECT	2.2739811959661794E-6	DOCUMENTATION	9.232723670838669E-7	TEST
// noop	WITHOUT_CLASSIFICATION	0.9999252178968004	WITHOUT_CLASSIFICATION	5.332053243045567E-5	DESIGN	1.1725836232904772E-5	DEFECT	7.921953184142751E-6	IMPLEMENTATION	1.1909792965438042E-6	DOCUMENTATION	6.228020554531144E-7	TEST
//noop	WITHOUT_CLASSIFICATION	0.9994454415472439	WITHOUT_CLASSIFICATION	3.6886517826930656E-4	DESIGN	1.437733379619709E-4	DEFECT	2.0250323724040268E-5	IMPLEMENTATION	1.4894826735613288E-5	DOCUMENTATION	6.774786064948248E-6	TEST
//noop	WITHOUT_CLASSIFICATION	0.9994454415472439	WITHOUT_CLASSIFICATION	3.6886517826930656E-4	DESIGN	1.437733379619709E-4	DEFECT	2.0250323724040268E-5	IMPLEMENTATION	1.4894826735613288E-5	DOCUMENTATION	6.774786064948248E-6	TEST
// this is called from SettingsFactory irregardless; trivial to simply disregard	WITHOUT_CLASSIFICATION	0.9999789562821947	WITHOUT_CLASSIFICATION	2.0934882834686896E-5	DESIGN	9.464478363723427E-8	DEFECT	1.1595755691271823E-8	TEST	2.1919282420269237E-9	DOCUMENTATION	4.025031299038221E-10	IMPLEMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999984795988113	WITHOUT_CLASSIFICATION	1.3993639952069156E-6	DESIGN	4.4669218695476205E-8	IMPLEMENTATION	3.6602918668535055E-8	TEST	2.694019914702991E-8	DOCUMENTATION	1.2824857114258109E-8	DEFECT
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999984795988113	WITHOUT_CLASSIFICATION	1.3993639952069156E-6	DESIGN	4.4669218695476205E-8	IMPLEMENTATION	3.6602918668535055E-8	TEST	2.694019914702991E-8	DOCUMENTATION	1.2824857114258109E-8	DEFECT
//throw new UnsupportedOperationException("Can't write to a readonly object");	WITHOUT_CLASSIFICATION	0.9998659092373331	WITHOUT_CLASSIFICATION	1.1959823776222419E-4	DESIGN	1.370991968965797E-5	DEFECT	4.2792707108897045E-7	TEST	3.0259529803561E-7	DOCUMENTATION	5.2082845910153734E-8	IMPLEMENTATION
//assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9998395615316902	WITHOUT_CLASSIFICATION	1.3494246681726858E-4	DESIGN	2.5209610849471942E-5	DEFECT	1.9353882791104183E-7	TEST	8.248526711590234E-8	DOCUMENTATION	1.0366548207896558E-8	IMPLEMENTATION
//persister.setIdentifier(result, id); //before calling interceptor, for consistency with normal load	WITHOUT_CLASSIFICATION	0.999998066849058	WITHOUT_CLASSIFICATION	8.91518135860007E-7	DEFECT	7.713389000546042E-7	IMPLEMENTATION	2.3310211131917347E-7	DESIGN	2.5536000936323125E-8	TEST	1.165579363109986E-8	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9997690993494444	WITHOUT_CLASSIFICATION	2.2313609462755696E-4	DESIGN	5.412220159540933E-6	DEFECT	1.728061560324124E-6	IMPLEMENTATION	4.773467082943983E-7	DOCUMENTATION	1.4692749994185989E-7	TEST
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9997690993494444	WITHOUT_CLASSIFICATION	2.2313609462755696E-4	DESIGN	5.412220159540933E-6	DEFECT	1.728061560324124E-6	IMPLEMENTATION	4.773467082943983E-7	DOCUMENTATION	1.4692749994185989E-7	TEST
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999999972159294	WITHOUT_CLASSIFICATION	2.1735008014084887E-9	DEFECT	4.087491942447985E-10	DESIGN	1.1464510153510207E-10	IMPLEMENTATION	8.301090546386563E-11	TEST	4.164705712000239E-12	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999996055685294	WITHOUT_CLASSIFICATION	3.722259461472163E-7	DEFECT	1.61258874998144E-8	DESIGN	3.3510102212555395E-9	IMPLEMENTATION	2.175569677687499E-9	TEST	5.530571769288099E-10	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999996055685294	WITHOUT_CLASSIFICATION	3.722259461472163E-7	DEFECT	1.61258874998144E-8	DESIGN	3.3510102212555395E-9	IMPLEMENTATION	2.175569677687499E-9	TEST	5.530571769288099E-10	DOCUMENTATION
// classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.9986902168850126	WITHOUT_CLASSIFICATION	0.0012552216750614173	DESIGN	4.9903242630239264E-5	TEST	2.9707488388210923E-6	DEFECT	1.6007333873442457E-6	DOCUMENTATION	8.67150695914238E-8	IMPLEMENTATION
// get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.999990012860912	WITHOUT_CLASSIFICATION	9.12887405406128E-6	DESIGN	6.792042828726401E-7	DEFECT	1.1103177695142059E-7	TEST	5.021841868302438E-8	IMPLEMENTATION	1.781055540639359E-8	DOCUMENTATION
// get meta's from <class>	WITHOUT_CLASSIFICATION	0.9999948126161526	WITHOUT_CLASSIFICATION	5.145538973519319E-6	DESIGN	2.52658262433842E-8	DEFECT	1.316390804750337E-8	TEST	3.0242370138383786E-9	DOCUMENTATION	3.9090257212383517E-10	IMPLEMENTATION
// DB-OBJECTNAME	WITHOUT_CLASSIFICATION	0.9999138511853183	WITHOUT_CLASSIFICATION	6.219636692451219E-5	DESIGN	1.637124696011921E-5	IMPLEMENTATION	3.0362506978430966E-6	DEFECT	2.3596692311866796E-6	DOCUMENTATION	2.1852808681676224E-6	TEST
// MUTABLE	WITHOUT_CLASSIFICATION	0.9999984675334574	WITHOUT_CLASSIFICATION	9.649619522450222E-7	DESIGN	3.643124818872169E-7	DEFECT	8.661061275100463E-8	IMPLEMENTATION	6.469853304326879E-8	TEST	5.188296273645237E-8	DOCUMENTATION
// WHERE	WITHOUT_CLASSIFICATION	0.9999909579816104	WITHOUT_CLASSIFICATION	4.116412404862608E-6	DEFECT	3.6343172419520636E-6	DESIGN	6.716759620383674E-7	IMPLEMENTATION	4.0219593433175894E-7	TEST	2.174168462392096E-7	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999960151163372	WITHOUT_CLASSIFICATION	3.3871620853446886E-6	DESIGN	3.501283319178809E-7	DEFECT	1.1364287038412865E-7	TEST	7.022587562962215E-8	DOCUMENTATION	6.372449937733853E-8	IMPLEMENTATION
// POLYMORPHISM	WITHOUT_CLASSIFICATION	0.9999802876240526	WITHOUT_CLASSIFICATION	1.2299457862363023E-5	DESIGN	4.502354391885059E-6	IMPLEMENTATION	1.969181507487926E-6	DEFECT	5.251771053446966E-7	DOCUMENTATION	4.1620508026965737E-7	TEST
// TODO:	WITHOUT_CLASSIFICATION	0.9851401364943461	WITHOUT_CLASSIFICATION	0.008239522650515536	IMPLEMENTATION	0.004616827937515524	DESIGN	0.001422504822967596	DEFECT	3.45951980536765E-4	DOCUMENTATION	2.3505611411859265E-4	TEST
// ID	WITHOUT_CLASSIFICATION	0.999976886027244	WITHOUT_CLASSIFICATION	1.2627740835405274E-5	DESIGN	5.8442184491976655E-6	IMPLEMENTATION	3.5392704446943926E-6	DEFECT	5.703851935256005E-7	TEST	5.323578331534421E-7	DOCUMENTATION
// VERSION / TIMESTAMP	WITHOUT_CLASSIFICATION	0.9999933086776843	WITHOUT_CLASSIFICATION	3.2586163638844186E-6	IMPLEMENTATION	1.7031944629301661E-6	DESIGN	1.07082221992886E-6	DEFECT	3.6440673545424183E-7	TEST	2.942825335538518E-7	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9998045688221382	WITHOUT_CLASSIFICATION	1.2410360546344173E-4	IMPLEMENTATION	5.783372311502133E-5	DESIGN	7.042457258437604E-6	DEFECT	3.800704005116268E-6	DOCUMENTATION	2.6506880197078863E-6	TEST
// Primary key constraint	WITHOUT_CLASSIFICATION	0.9999999543745354	WITHOUT_CLASSIFICATION	1.5811830717514977E-8	DESIGN	1.0229268518100948E-8	DOCUMENTATION	9.378628668109196E-9	IMPLEMENTATION	8.277644486429218E-9	TEST	1.9280923074498715E-9	DEFECT
// this is either a <version/> tag with no type attribute, // or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.9999989106445513	WITHOUT_CLASSIFICATION	5.80202045518113E-7	TEST	1.9684570788323774E-7	IMPLEMENTATION	1.897588208671189E-7	DEFECT	1.141106377976308E-7	DESIGN	8.438236507006787E-9	DOCUMENTATION
// for version properties marked as being generated, make sure they are "always" // generated; aka, "insert" is invalid; this is dis-allowed by the DTD, // but just to make sure...	WITHOUT_CLASSIFICATION	0.9999738597407887	WITHOUT_CLASSIFICATION	2.5146713045180148E-5	DESIGN	5.763828993921352E-7	DEFECT	4.0331756335560374E-7	TEST	1.135552596105852E-8	IMPLEMENTATION	2.490177488531108E-9	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9998045688221382	WITHOUT_CLASSIFICATION	1.2410360546344173E-4	IMPLEMENTATION	5.783372311502133E-5	DESIGN	7.042457258437604E-6	DEFECT	3.800704005116268E-6	DOCUMENTATION	2.6506880197078863E-6	TEST
// ( (Column) discrim.getColumnIterator().next() ).setType(type);	WITHOUT_CLASSIFICATION	0.9999964474493056	WITHOUT_CLASSIFICATION	3.0979477833324158E-6	DESIGN	3.853171381383752E-7	DEFECT	5.091641512679897E-8	IMPLEMENTATION	1.339082827486922E-8	DOCUMENTATION	4.9785296258009065E-9	TEST
// go ahead and set the lazy here, since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.9999964338741866	WITHOUT_CLASSIFICATION	3.199708084292401E-6	IMPLEMENTATION	3.326445919645111E-7	DESIGN	2.0438541811534443E-8	DEFECT	6.897334493296824E-9	TEST	6.437260829318758E-9	DOCUMENTATION
// DYNAMIC UPDATE	WITHOUT_CLASSIFICATION	0.9999470290713386	WITHOUT_CLASSIFICATION	2.8251831236214864E-5	IMPLEMENTATION	2.1546051854178032E-5	DESIGN	1.2397952569771888E-6	DEFECT	9.834823885902867E-7	DOCUMENTATION	9.497679254670336E-7	TEST
// IMPORT	WITHOUT_CLASSIFICATION	0.9999769230887949	WITHOUT_CLASSIFICATION	1.1102154837535408E-5	DESIGN	5.987666236412636E-6	DEFECT	5.127053037201442E-6	IMPLEMENTATION	4.803281593315463E-7	DOCUMENTATION	3.797089344276877E-7	TEST
// BATCH SIZE	WITHOUT_CLASSIFICATION	0.9999110038019352	WITHOUT_CLASSIFICATION	7.076577013998539E-5	DESIGN	8.331114484449714E-6	DEFECT	7.020784018192622E-6	IMPLEMENTATION	1.809111997906561E-6	DOCUMENTATION	1.0694174242106668E-6	TEST
// SELECT BEFORE UPDATE	WITHOUT_CLASSIFICATION	0.9999986000103347	WITHOUT_CLASSIFICATION	7.928669928758903E-7	IMPLEMENTATION	2.73661819232088E-7	DESIGN	1.2467218034262682E-7	DOCUMENTATION	1.2322192213362757E-7	DEFECT	8.55667505920865E-8	TEST
// OPTIMISTIC LOCK MODE	WITHOUT_CLASSIFICATION	0.9999962171174713	WITHOUT_CLASSIFICATION	2.009018594476218E-6	DESIGN	1.0099021373068825E-6	IMPLEMENTATION	3.8815987449173356E-7	DOCUMENTATION	2.3395966950304975E-7	TEST	1.4184225282263927E-7	DEFECT
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999892797910145	WITHOUT_CLASSIFICATION	4.8413470747655585E-6	DESIGN	4.060428311523103E-6	IMPLEMENTATION	9.676518685989454E-7	DEFECT	4.3683385135601067E-7	TEST	4.1394787933260676E-7	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999823897637805	WITHOUT_CLASSIFICATION	1.6755381981022918E-5	DESIGN	3.7299857957223455E-7	DEFECT	2.3008883922703356E-7	DOCUMENTATION	1.4925930141330158E-7	TEST	1.0250751839015982E-7	IMPLEMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.99999583179707	WITHOUT_CLASSIFICATION	4.120898913613358E-6	DESIGN	3.8663650864592545E-8	DEFECT	6.545044341072895E-9	TEST	1.890751039752852E-9	DOCUMENTATION	2.045703018382838E-10	IMPLEMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999976861656847	WITHOUT_CLASSIFICATION	1.054239563149981E-6	DEFECT	6.127364024775789E-7	DESIGN	4.957909934575603E-7	IMPLEMENTATION	7.942918235532536E-8	TEST	7.163817376900648E-8	DOCUMENTATION
// joined subclasses	WITHOUT_CLASSIFICATION	0.9999987333508774	WITHOUT_CLASSIFICATION	1.1710285353561707E-6	DESIGN	3.149944210479047E-8	DEFECT	2.710781291186751E-8	TEST	2.0100789576024784E-8	DOCUMENTATION	1.691254261531672E-8	IMPLEMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999866686850835	WITHOUT_CLASSIFICATION	1.0399949927896006E-5	DESIGN	1.6526329556911925E-6	DEFECT	6.30409191645326E-7	IMPLEMENTATION	3.939283116800405E-7	TEST	2.5439452965991237E-7	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999960151163372	WITHOUT_CLASSIFICATION	3.3871620853446886E-6	DESIGN	3.501283319178809E-7	DEFECT	1.1364287038412865E-7	TEST	7.022587562962215E-8	DOCUMENTATION	6.372449937733853E-8	IMPLEMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999823897637805	WITHOUT_CLASSIFICATION	1.6755381981022918E-5	DESIGN	3.7299857957223455E-7	DEFECT	2.3008883922703356E-7	DOCUMENTATION	1.4925930141330158E-7	TEST	1.0250751839015982E-7	IMPLEMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999976861656847	WITHOUT_CLASSIFICATION	1.054239563149981E-6	DEFECT	6.127364024775789E-7	DESIGN	4.957909934575603E-7	IMPLEMENTATION	7.942918235532536E-8	TEST	7.163817376900648E-8	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999866686850835	WITHOUT_CLASSIFICATION	1.0399949927896006E-5	DESIGN	1.6526329556911925E-6	DEFECT	6.30409191645326E-7	IMPLEMENTATION	3.939283116800405E-7	TEST	2.5439452965991237E-7	DOCUMENTATION
// model.getKey().setType( new Type( model.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999927062117979	WITHOUT_CLASSIFICATION	4.0911443505324905E-6	DESIGN	2.579852715556853E-6	IMPLEMENTATION	5.034763986512526E-7	DEFECT	1.0232510733471014E-7	DOCUMENTATION	1.698963011592659E-8	TEST
// TABLENAME	WITHOUT_CLASSIFICATION	0.9999355388650666	WITHOUT_CLASSIFICATION	4.3189589338753935E-5	DESIGN	9.486936296661412E-6	IMPLEMENTATION	9.005913074119064E-6	DEFECT	1.49406835152123E-6	TEST	1.2846278722225713E-6	DOCUMENTATION
// join.getKey().setType( new Type( lazz.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999992078279784	WITHOUT_CLASSIFICATION	6.021381720539682E-7	IMPLEMENTATION	9.270948575411622E-8	DEFECT	8.185084717897425E-8	DESIGN	1.377913485158408E-8	DOCUMENTATION	1.6943817623068803E-9	TEST
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999910078771845	WITHOUT_CLASSIFICATION	3.858260371783298E-6	IMPLEMENTATION	3.5911389201648525E-6	DESIGN	7.633689016276436E-7	DEFECT	3.934198804000257E-7	DOCUMENTATION	3.85934741308532E-7	TEST
// COLUMN(S)	WITHOUT_CLASSIFICATION	0.9999952724912309	WITHOUT_CLASSIFICATION	3.4504330556075104E-6	DESIGN	6.174351208883256E-7	IMPLEMENTATION	3.173522101772467E-7	DEFECT	1.759277549205734E-7	DOCUMENTATION	1.6636062759117094E-7	TEST
// column index	WITHOUT_CLASSIFICATION	0.9999583516380717	WITHOUT_CLASSIFICATION	3.023171014718423E-5	DEFECT	9.089268706203695E-6	DESIGN	1.2040494625218878E-6	IMPLEMENTATION	7.69115112545407E-7	DOCUMENTATION	3.542184998257737E-7	TEST
//column unique-key	WITHOUT_CLASSIFICATION	0.9999049074240434	WITHOUT_CLASSIFICATION	4.049363108573746E-5	DESIGN	2.87078417234034E-5	DEFECT	1.5050419056202951E-5	IMPLEMENTATION	8.901581005931591E-6	DOCUMENTATION	1.939103085361862E-6	TEST
// automatically makes a column with the default name if none is specifed by XML	WITHOUT_CLASSIFICATION	0.9986967714522921	WITHOUT_CLASSIFICATION	8.929881701822206E-4	DESIGN	3.7769386765552595E-4	DEFECT	1.5892869423416195E-5	TEST	1.0196778471283857E-5	IMPLEMENTATION	6.456861975424463E-6	DOCUMENTATION
// for an any	WITHOUT_CLASSIFICATION	0.9999977522301612	WITHOUT_CLASSIFICATION	9.305174675378853E-7	DESIGN	8.811230151318287E-7	DEFECT	2.7722182500122936E-7	TEST	1.1160578358897308E-7	IMPLEMENTATION	4.7301747577227587E-8	DOCUMENTATION
// insertable simply because that is the user did not specify // anything; just override it	WITHOUT_CLASSIFICATION	0.9999999923553735	WITHOUT_CLASSIFICATION	6.339582098962808E-9	IMPLEMENTATION	8.705296724542215E-10	DEFECT	2.1203123041852836E-10	TEST	1.9145964520876172E-10	DESIGN	3.1023902268505654E-11	DOCUMENTATION
// the user specifically supplied insert="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999982790842017	WITHOUT_CLASSIFICATION	1.2778556204779382E-6	DESIGN	2.7727198882303423E-7	TEST	7.29613336448056E-8	DOCUMENTATION	5.3562118240528457E-8	DEFECT	3.926473723516191E-8	IMPLEMENTATION
// properties generated on update can never be updateable...	WITHOUT_CLASSIFICATION	0.9999995676954953	WITHOUT_CLASSIFICATION	2.3205174253646912E-7	DESIGN	1.542440100000126E-7	DEFECT	3.801022715880155E-8	IMPLEMENTATION	7.369064212557205E-9	TEST	6.294609320810213E-10	DOCUMENTATION
// updateable only because the user did not specify  // anything; just override it	WITHOUT_CLASSIFICATION	0.9999997409675984	WITHOUT_CLASSIFICATION	2.489723789943973E-7	IMPLEMENTATION	8.003288734062747E-9	DEFECT	1.205801443509323E-9	TEST	7.863510968682163E-10	DOCUMENTATION	6.458123785833873E-11	DESIGN
// the user specifically supplied update="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999993705194542	WITHOUT_CLASSIFICATION	2.69707327093863E-7	IMPLEMENTATION	1.6102503193595654E-7	DEFECT	8.916507766925686E-8	DESIGN	7.249501531645472E-8	TEST	3.708809387788801E-8	DOCUMENTATION
// ROLENAME	WITHOUT_CLASSIFICATION	0.9999585187068336	WITHOUT_CLASSIFICATION	2.8348536507823404E-5	DESIGN	6.323752426196644E-6	IMPLEMENTATION	5.08588157026084E-6	DEFECT	1.1086672378546028E-6	TEST	6.144554244081788E-7	DOCUMENTATION
// FETCH STRATEGY	WITHOUT_CLASSIFICATION	0.9999489518331955	WITHOUT_CLASSIFICATION	3.929136119760658E-5	DESIGN	7.393490282145701E-6	IMPLEMENTATION	2.336003853538608E-6	DEFECT	1.0270488179352286E-6	DOCUMENTATION	1.0002626532649199E-6	TEST
// TABLE	WITHOUT_CLASSIFICATION	0.9999904824631336	WITHOUT_CLASSIFICATION	4.718237193310127E-6	DESIGN	3.2478324651594285E-6	DEFECT	9.955718075870713E-7	IMPLEMENTATION	2.795214537597406E-7	DOCUMENTATION	2.7637394665347173E-7	TEST
//tableName = mappings.getNamingStrategy().propertyToTableName( className, path );	WITHOUT_CLASSIFICATION	0.9999996468963515	WITHOUT_CLASSIFICATION	2.0343508402768147E-7	DESIGN	1.1223091227971259E-7	IMPLEMENTATION	2.3305394055024063E-8	TEST	8.378163143332541E-9	DOCUMENTATION	5.754095033207533E-9	DEFECT
// SORT	WITHOUT_CLASSIFICATION	0.9999951772362283	WITHOUT_CLASSIFICATION	2.600623770633153E-6	DESIGN	1.1365467646514978E-6	DEFECT	7.28594123826686E-7	IMPLEMENTATION	1.9079092358053337E-7	DOCUMENTATION	1.662081889617319E-7	TEST
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999823897637805	WITHOUT_CLASSIFICATION	1.6755381981022918E-5	DESIGN	3.7299857957223455E-7	DEFECT	2.3008883922703356E-7	DOCUMENTATION	1.4925930141330158E-7	TEST	1.0250751839015982E-7	IMPLEMENTATION
// unsorted, natural, comparator.class.name	WITHOUT_CLASSIFICATION	0.9999279875696151	WITHOUT_CLASSIFICATION	7.179872898023092E-5	DESIGN	1.1576899109524556E-7	IMPLEMENTATION	3.9766156323784264E-8	DEFECT	2.9485504101475855E-8	TEST	2.8680753063571776E-8	DOCUMENTATION
// ORPHAN DELETE (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.9999767984144733	WITHOUT_CLASSIFICATION	2.1645100469598146E-5	DESIGN	1.2721290446839401E-6	IMPLEMENTATION	1.8142815599291432E-7	DEFECT	5.25742841131425E-8	TEST	5.0353572330767886E-8	DOCUMENTATION
// set up second pass	WITHOUT_CLASSIFICATION	0.9999975566438672	WITHOUT_CLASSIFICATION	1.1868372823005156E-6	DESIGN	1.069895980717188E-6	IMPLEMENTATION	7.369528580363528E-8	DOCUMENTATION	6.2205395425762E-8	DEFECT	5.0722188577489345E-8	TEST
// an "embedded" component (composite ids and unique) // note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.9995755053201427	WITHOUT_CLASSIFICATION	3.062195213954858E-4	DESIGN	1.0784162616475266E-4	TEST	9.987619393322928E-6	IMPLEMENTATION	2.6774894158530545E-7	DEFECT	1.7816396218982043E-7	DOCUMENTATION
// a nested composite element	WITHOUT_CLASSIFICATION	0.9999995173636079	WITHOUT_CLASSIFICATION	2.6970616689165164E-7	IMPLEMENTATION	1.199437339141062E-7	DESIGN	5.060629327993298E-8	TEST	2.5392939732731937E-8	DOCUMENTATION	1.698725809977253E-8	DEFECT
// for an any // we will have to use reflection	WITHOUT_CLASSIFICATION	0.9998608051234605	WITHOUT_CLASSIFICATION	7.532895846113347E-5	DESIGN	6.14461307948133E-5	DEFECT	1.360458674073754E-6	IMPLEMENTATION	6.675581839161585E-7	TEST	3.917704254060192E-7	DOCUMENTATION
//NOTE SPECIAL CASE: // one-to-one constrained=false cannot be proxied, // so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.9999995727956638	WITHOUT_CLASSIFICATION	2.1442281014887037E-7	DESIGN	2.0853198712099655E-7	IMPLEMENTATION	2.801496765417966E-9	DEFECT	1.3642634135000658E-9	DOCUMENTATION	8.377887088620014E-11	TEST
// use old (HB 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.9999989574671606	WITHOUT_CLASSIFICATION	3.991166644973427E-7	DESIGN	3.8495610514225556E-7	IMPLEMENTATION	1.9763970271615698E-7	DEFECT	4.694204740006184E-8	DOCUMENTATION	1.3878319655892147E-8	TEST
//lazy = !join;	WITHOUT_CLASSIFICATION	0.9999872477560596	WITHOUT_CLASSIFICATION	7.525778774767277E-6	DEFECT	2.493894960409707E-6	DESIGN	1.3401830968486554E-6	DOCUMENTATION	1.0551327209764625E-6	IMPLEMENTATION	3.3725438724004253E-7	TEST
// GENERATOR	WITHOUT_CLASSIFICATION	0.9999679018863668	WITHOUT_CLASSIFICATION	2.1316936428461253E-5	DESIGN	5.52960239009564E-6	IMPLEMENTATION	3.057412562766755E-6	DEFECT	1.2006856865582116E-6	TEST	9.93476565391926E-7	DOCUMENTATION
// ID UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999434974535036	WITHOUT_CLASSIFICATION	3.5099552595436996E-5	IMPLEMENTATION	1.6296433707358392E-5	DESIGN	3.55731664879096E-6	DEFECT	7.855458163276701E-7	DOCUMENTATION	7.636977284125559E-7	TEST
// VERSION UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999962153033021	WITHOUT_CLASSIFICATION	2.481431446749214E-6	IMPLEMENTATION	7.075046990569543E-7	DESIGN	3.0241984101029493E-7	DEFECT	1.4697996011045217E-7	TEST	1.4636075095219695E-7	DOCUMENTATION
// not necessarily a *unique* property reference	WITHOUT_CLASSIFICATION	0.99940097543294	WITHOUT_CLASSIFICATION	2.4495380946631593E-4	IMPLEMENTATION	1.8348386999352226E-4	DEFECT	1.6788114447209888E-4	DESIGN	2.199514893557076E-6	DOCUMENTATION	5.062282344105353E-7	TEST
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999633185284796	WITHOUT_CLASSIFICATION	1.8639371211495037E-5	DESIGN	1.3340776323144545E-5	IMPLEMENTATION	4.585656075754226E-6	DEFECT	6.696569282787067E-8	DOCUMENTATION	4.8702217162613836E-8	TEST
// contained elements:	WITHOUT_CLASSIFICATION	0.9999978626600516	WITHOUT_CLASSIFICATION	1.6873186742675058E-6	DESIGN	3.179972198216968E-7	IMPLEMENTATION	7.809445764473995E-8	DOCUMENTATION	2.9365683889688714E-8	TEST	2.4563912672511618E-8	DEFECT
// for non-inverse one-to-many, with a not-null fk, add a backref!	WITHOUT_CLASSIFICATION	0.999875788461475	WITHOUT_CLASSIFICATION	7.158597712906691E-5	IMPLEMENTATION	2.9819711643669846E-5	DEFECT	2.2260358628348495E-5	DESIGN	3.5038423711918554E-7	DOCUMENTATION	1.9510688679392918E-7	TEST
// Bind the where	WITHOUT_CLASSIFICATION	0.9998150934910337	WITHOUT_CLASSIFICATION	1.1955142861033E-4	IMPLEMENTATION	4.297996909818249E-5	DESIGN	1.0857156722349858E-5	TEST	6.706180093885037E-6	DEFECT	4.811774441461073E-6	DOCUMENTATION
// Bind the order-by	WITHOUT_CLASSIFICATION	0.9998631983124876	WITHOUT_CLASSIFICATION	1.2328512486369815E-4	IMPLEMENTATION	6.651239908710909E-6	DESIGN	3.932946929187126E-6	DEFECT	2.344027214676687E-6	DOCUMENTATION	5.883485961768505E-7	TEST
// Bind the filters	WITHOUT_CLASSIFICATION	0.9999641395077119	WITHOUT_CLASSIFICATION	2.012672771048089E-5	DESIGN	1.4290005343068267E-5	IMPLEMENTATION	6.996305757339292E-7	TEST	4.0525613700655215E-7	DEFECT	3.3887252187384774E-7	DOCUMENTATION
// overriding inherited meta attribute. HBX-621 & HBX-793	WITHOUT_CLASSIFICATION	0.9999203785004597	WITHOUT_CLASSIFICATION	5.7199723401505764E-5	DESIGN	1.3010923281455564E-5	DEFECT	6.500968521764109E-6	IMPLEMENTATION	2.8123466318836896E-6	TEST	9.753770374806327E-8	DOCUMENTATION
// first, iterate over all elements capable of defining an extends attribute // collecting all found extends references if they cannot be resolved // against the already processed mappings.	WITHOUT_CLASSIFICATION	0.9999999872156531	WITHOUT_CLASSIFICATION	1.183382433618105E-8	IMPLEMENTATION	5.441117607646272E-10	TEST	4.023050580423897E-10	DESIGN	3.565339544750459E-12	DOCUMENTATION	5.403845901412008E-13	DEFECT
// mappings might contain either the "raw" extends name (in the case of // an entity-name mapping) or a FQN (in the case of a POJO mapping).	WITHOUT_CLASSIFICATION	0.9677367044114891	WITHOUT_CLASSIFICATION	0.03222612597334218	DESIGN	2.7862864531316424E-5	IMPLEMENTATION	6.145656405171223E-6	TEST	1.7266833964302996E-6	DOCUMENTATION	1.4344108357432238E-6	DEFECT
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9990982195555866	WITHOUT_CLASSIFICATION	8.916240648923272E-4	DESIGN	4.924703299923922E-6	IMPLEMENTATION	3.719291975271585E-6	DEFECT	9.628528023666168E-7	DOCUMENTATION	5.495314433898973E-7	TEST
//SessionFactory name:	WITHOUT_CLASSIFICATION	0.9999812133538986	WITHOUT_CLASSIFICATION	1.65571702281623E-5	DESIGN	8.4486445252062E-7	DOCUMENTATION	7.090930387922854E-7	DEFECT	4.0444610701194625E-7	IMPLEMENTATION	2.710722749556686E-7	TEST
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.999769270108556	WITHOUT_CLASSIFICATION	1.4081126812519673E-4	DESIGN	3.8732769703687364E-5	DEFECT	3.475683156708188E-5	IMPLEMENTATION	1.242957217808048E-5	DOCUMENTATION	3.999449870061298E-6	TEST
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.999769270108556	WITHOUT_CLASSIFICATION	1.4081126812519673E-4	DESIGN	3.8732769703687364E-5	DEFECT	3.475683156708188E-5	IMPLEMENTATION	1.242957217808048E-5	DOCUMENTATION	3.999449870061298E-6	TEST
//Interrogate JDBC metadata	WITHOUT_CLASSIFICATION	0.9999527057122647	WITHOUT_CLASSIFICATION	2.373198742617034E-5	IMPLEMENTATION	1.3632989747766123E-5	DESIGN	4.978287580651708E-6	DOCUMENTATION	3.2612968561298366E-6	DEFECT	1.689726124590852E-6	TEST
// user supplied JDBC connections	WITHOUT_CLASSIFICATION	0.9998948517520537	WITHOUT_CLASSIFICATION	7.461565988709136E-5	IMPLEMENTATION	2.9163918132917667E-5	DESIGN	8.229090494837831E-7	DEFECT	3.301209142622437E-7	DOCUMENTATION	2.156399624294888E-7	TEST
//use dialect default properties	WITHOUT_CLASSIFICATION	0.9999712757588641	WITHOUT_CLASSIFICATION	2.6682999656849164E-5	DESIGN	1.3937938296747846E-6	IMPLEMENTATION	4.0428732970271015E-7	DEFECT	1.6898374623292697E-7	DOCUMENTATION	7.417657330227833E-8	TEST
// Transaction settings:	WITHOUT_CLASSIFICATION	0.99999702523685	WITHOUT_CLASSIFICATION	1.5011180420065502E-6	DESIGN	5.653171901154426E-7	DEFECT	5.504298562668485E-7	IMPLEMENTATION	2.431086691029176E-7	DOCUMENTATION	1.1478939267877793E-7	TEST
//SQL Generation settings:	WITHOUT_CLASSIFICATION	0.9999787348472892	WITHOUT_CLASSIFICATION	2.0145800687551808E-5	DESIGN	3.611448531411592E-7	DEFECT	3.319478916135989E-7	TEST	3.294604911889034E-7	DOCUMENTATION	9.679878717276783E-8	IMPLEMENTATION
//Query parser settings:	WITHOUT_CLASSIFICATION	0.9999105623044708	WITHOUT_CLASSIFICATION	5.9059535040958964E-5	DEFECT	2.6975675532997127E-5	DESIGN	1.6359895736464569E-6	IMPLEMENTATION	1.0195566986121435E-6	DOCUMENTATION	7.469386829464806E-7	TEST
// Second-level / query cache:	WITHOUT_CLASSIFICATION	0.9999866979830303	WITHOUT_CLASSIFICATION	9.899240448290359E-6	DESIGN	1.7786686525209553E-6	DEFECT	1.3605394554118236E-6	IMPLEMENTATION	1.7498180250763142E-7	DOCUMENTATION	8.85866109012145E-8	TEST
// The cache provider is needed when we either have second-level cache enabled // or query cache enabled.  Note that useSecondLevelCache is enabled by default	WITHOUT_CLASSIFICATION	0.9998665708207939	WITHOUT_CLASSIFICATION	7.258099006394168E-5	DEFECT	5.578692616449133E-5	DESIGN	4.53674824167651E-6	IMPLEMENTATION	4.339506997030457E-7	TEST	9.056403626033832E-8	DOCUMENTATION
//SQL Exception converter:	WITHOUT_CLASSIFICATION	0.9999711524871133	WITHOUT_CLASSIFICATION	2.7131752015287896E-5	DESIGN	6.254903916661791E-7	TEST	5.464603059303575E-7	DEFECT	4.965010123467432E-7	DOCUMENTATION	4.7309161414301746E-8	IMPLEMENTATION
//Statistics and logging:	WITHOUT_CLASSIFICATION	0.9999978898078433	WITHOUT_CLASSIFICATION	8.471218520560791E-7	IMPLEMENTATION	5.448755238531802E-7	DEFECT	5.179641551655296E-7	DESIGN	1.2634654028237374E-7	DOCUMENTATION	7.388408536255848E-8	TEST
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
//Schema export:	WITHOUT_CLASSIFICATION	0.9997481896466092	WITHOUT_CLASSIFICATION	1.8337505238398015E-4	DESIGN	4.3763652494414274E-5	DEFECT	1.622143159900325E-5	IMPLEMENTATION	5.739688398512865E-6	DOCUMENTATION	2.71052851491802E-6	TEST
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// legacy behavior, apply the bridge...	WITHOUT_CLASSIFICATION	0.999598447253964	WITHOUT_CLASSIFICATION	3.987946715883379E-4	DESIGN	1.6215208434119926E-6	IMPLEMENTATION	7.043528174486423E-7	DEFECT	2.773685790213929E-7	DOCUMENTATION	1.548322077130103E-7	TEST
// maybe a concrete SQLpropertyresult type, but Map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.9820745848367878	WITHOUT_CLASSIFICATION	0.017892191905786514	DESIGN	3.131500548138648E-5	DEFECT	1.0310225055524433E-6	DOCUMENTATION	8.660738028007502E-7	TEST	1.1155635842537009E-8	IMPLEMENTATION
//if dotted and not load-collection nor return-join //regular property	WITHOUT_CLASSIFICATION	0.9999194534571901	WITHOUT_CLASSIFICATION	5.50071365299756E-5	DESIGN	2.482936456831635E-5	DEFECT	5.711140283953016E-7	IMPLEMENTATION	7.199179649853857E-8	DOCUMENTATION	6.693588678870727E-8	TEST
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999753850659095	WITHOUT_CLASSIFICATION	2.419004189434416E-5	DESIGN	3.1188662859540335E-7	DEFECT	6.355723165562077E-8	TEST	2.992737237365798E-8	DOCUMENTATION	1.9520963588994532E-8	IMPLEMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999889925649885	WITHOUT_CLASSIFICATION	9.417585086801317E-5	DESIGN	1.0005510604874849E-5	IMPLEMENTATION	5.258003124301728E-6	DEFECT	3.9621284718129203E-7	TEST	2.387726705560156E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// using local since the inheritedMetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.9999965740351676	WITHOUT_CLASSIFICATION	1.727684162295203E-6	DESIGN	1.5976677637222398E-6	DEFECT	6.35464718254627E-8	IMPLEMENTATION	3.4110441617447635E-8	TEST	2.955992876576035E-9	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// if doc is null, then for whatever reason, the cached file cannot be used...	WITHOUT_CLASSIFICATION	0.9999997648088826	WITHOUT_CLASSIFICATION	1.6142380754049532E-7	DESIGN	4.080898920318155E-8	TEST	2.9524153709421516E-8	DEFECT	2.005156551873955E-9	IMPLEMENTATION	1.429010343019925E-9	DOCUMENTATION
// drop them in reverse order in case db needs it done that way...	WITHOUT_CLASSIFICATION	0.9996539693263438	WITHOUT_CLASSIFICATION	2.9439395298462746E-4	DESIGN	4.084657841635595E-5	IMPLEMENTATION	8.098928684346407E-6	DEFECT	1.7945856708622669E-6	TEST	8.96627900166805E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// This method may be called many times!!	WITHOUT_CLASSIFICATION	0.9994756809929592	WITHOUT_CLASSIFICATION	3.954995700512168E-4	IMPLEMENTATION	1.2331532003148166E-4	DESIGN	3.29563520118433E-6	DEFECT	1.5881197282455414E-6	TEST	6.203620287438916E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.9999880273065113	WITHOUT_CLASSIFICATION	6.102405540928273E-6	DESIGN	4.729879205452819E-6	DEFECT	8.172987893193539E-7	IMPLEMENTATION	1.7878000572204978E-7	DOCUMENTATION	1.4432994732125984E-7	TEST
// found	WITHOUT_CLASSIFICATION	0.9999880273065113	WITHOUT_CLASSIFICATION	6.102405540928273E-6	DESIGN	4.729879205452819E-6	DEFECT	8.172987893193539E-7	IMPLEMENTATION	1.7878000572204978E-7	DOCUMENTATION	1.4432994732125984E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.999944794866028	WITHOUT_CLASSIFICATION	4.005078344036382E-5	DESIGN	6.123367356829074E-6	DEFECT	3.851306300996457E-6	DOCUMENTATION	3.000540961924174E-6	TEST	2.1791359119044727E-6	IMPLEMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.999944794866028	WITHOUT_CLASSIFICATION	4.005078344036382E-5	DESIGN	6.123367356829074E-6	DEFECT	3.851306300996457E-6	DOCUMENTATION	3.000540961924174E-6	TEST	2.1791359119044727E-6	IMPLEMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9990982195555866	WITHOUT_CLASSIFICATION	8.916240648923272E-4	DESIGN	4.924703299923922E-6	IMPLEMENTATION	3.719291975271585E-6	DEFECT	9.628528023666168E-7	DOCUMENTATION	5.495314433898973E-7	TEST
//Set USE_REFLECTION_OPTIMIZER to false to fix HHH-227	WITHOUT_CLASSIFICATION	0.9999946580239173	WITHOUT_CLASSIFICATION	3.224169059550259E-6	DESIGN	9.456311855734129E-7	IMPLEMENTATION	8.566689453486246E-7	DEFECT	2.1425043574081162E-7	DOCUMENTATION	1.0125645640829671E-7	TEST
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9827516746298346	WITHOUT_CLASSIFICATION	0.017190215551706873	DESIGN	2.950700894260454E-5	DEFECT	2.0711772268439666E-5	TEST	4.786522278226586E-6	IMPLEMENTATION	3.1045149692281454E-6	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999873996932871	WITHOUT_CLASSIFICATION	6.203457388820096E-6	IMPLEMENTATION	5.8749305056361195E-6	DESIGN	3.5614076628891975E-7	TEST	9.594448142415768E-8	DOCUMENTATION	6.983357087597934E-8	DEFECT
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999893990420282	WITHOUT_CLASSIFICATION	6.19448247116322E-6	DESIGN	1.7013476633194105E-6	DEFECT	1.3054935329138277E-6	IMPLEMENTATION	1.3054185616261447E-6	DOCUMENTATION	9.42157426849326E-8	TEST
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9827516746298346	WITHOUT_CLASSIFICATION	0.017190215551706873	DESIGN	2.950700894260454E-5	DEFECT	2.0711772268439666E-5	TEST	4.786522278226586E-6	IMPLEMENTATION	3.1045149692281454E-6	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999873996932871	WITHOUT_CLASSIFICATION	6.203457388820096E-6	IMPLEMENTATION	5.8749305056361195E-6	DESIGN	3.5614076628891975E-7	TEST	9.594448142415768E-8	DOCUMENTATION	6.983357087597934E-8	DEFECT
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.999840673500501	WITHOUT_CLASSIFICATION	1.0091645752694724E-4	IMPLEMENTATION	5.138797141382253E-5	DESIGN	4.050655123203599E-6	TEST	1.614770329334359E-6	DEFECT	1.3566451057970105E-6	DOCUMENTATION
//maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.9987156721906492	WITHOUT_CLASSIFICATION	0.0012801930130800687	DESIGN	2.109752193722815E-6	TEST	1.8249676893316495E-6	DEFECT	1.9965824270806775E-7	DOCUMENTATION	4.181450814881706E-10	IMPLEMENTATION
// the element has been removed from the set	WITHOUT_CLASSIFICATION	0.9999965777164804	WITHOUT_CLASSIFICATION	3.0054545208806657E-6	DESIGN	2.7573025573952474E-7	IMPLEMENTATION	9.719420730685567E-8	DEFECT	3.8190439226608985E-8	TEST	5.714096350388258E-9	DOCUMENTATION
// the element has changed	WITHOUT_CLASSIFICATION	0.9999964602125314	WITHOUT_CLASSIFICATION	3.4038330484976653E-6	IMPLEMENTATION	6.343407050190935E-8	TEST	5.794676459369854E-8	DESIGN	1.0995250082960454E-8	DOCUMENTATION	3.5783350264710662E-9	DEFECT
//Careful: these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.9393069476906688	WITHOUT_CLASSIFICATION	0.06030614602220297	DESIGN	2.4291327145486952E-4	IMPLEMENTATION	1.2606329429441237E-4	TEST	1.4977285062240915E-5	DEFECT	2.9524363166984637E-6	DOCUMENTATION
//needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.5055181977797558	DESIGN	0.4943441296774014	WITHOUT_CLASSIFICATION	9.403108898912017E-5	TEST	2.2403162132687683E-5	IMPLEMENTATION	1.1463193711640377E-5	DOCUMENTATION	9.775098009320507E-6	DEFECT
// override on some subclasses	WITHOUT_CLASSIFICATION	0.9999995473062939	WITHOUT_CLASSIFICATION	4.08434750811464E-7	DESIGN	1.7276079395899015E-8	IMPLEMENTATION	1.5430912938595534E-8	DOCUMENTATION	1.0655852073163449E-8	TEST	8.961107289403032E-10	DEFECT
//override on some subclasses	WITHOUT_CLASSIFICATION	0.9999934150095791	WITHOUT_CLASSIFICATION	6.147794909236405E-6	DESIGN	1.956401093093948E-7	DOCUMENTATION	1.302864007163149E-7	IMPLEMENTATION	1.051908241653293E-7	TEST	6.07817748436004E-9	DEFECT
//do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.9999516073725113	WITHOUT_CLASSIFICATION	4.3774898034920595E-5	DESIGN	3.901413426341959E-6	TEST	2.62022147701511E-7	IMPLEMENTATION	2.5032831538240665E-7	DOCUMENTATION	2.0396556421824886E-7	DEFECT
// short-circuit(s) // no new elements, the old list contains only Orphans // no old elements, so no Orphans neither	WITHOUT_CLASSIFICATION	0.9999998159596305	WITHOUT_CLASSIFICATION	1.361395743272308E-7	DESIGN	2.6825045689653274E-8	IMPLEMENTATION	1.5553590646673865E-8	TEST	5.001836850732317E-9	DOCUMENTATION	5.203217614834102E-10	DEFECT
// create the collection holding the Orphans	WITHOUT_CLASSIFICATION	0.9999983885587264	WITHOUT_CLASSIFICATION	1.0702756141186096E-6	IMPLEMENTATION	2.216460979577511E-7	DESIGN	1.7511397664095323E-7	DEFECT	1.3569026214579186E-7	TEST	8.715322833040349E-9	DOCUMENTATION
// collect EntityIdentifier(s) of the *current* elements - add them into a HashSet for fast access	WITHOUT_CLASSIFICATION	0.9999882485788446	WITHOUT_CLASSIFICATION	1.1607099481254146E-5	DESIGN	6.640100384533324E-8	DEFECT	5.5583591483523353E-8	TEST	1.2538886707649294E-8	IMPLEMENTATION	9.798192134949125E-9	DOCUMENTATION
// iterate over the *old* list	WITHOUT_CLASSIFICATION	0.9999999689343703	WITHOUT_CLASSIFICATION	1.8217939945296308E-8	DESIGN	7.036805756104823E-9	IMPLEMENTATION	5.363602897967965E-9	TEST	3.71381305278576E-10	DOCUMENTATION	7.589993000975319E-11	DEFECT
/*(array==null) ? tempList.size() :*/	WITHOUT_CLASSIFICATION	0.9999413708608752	WITHOUT_CLASSIFICATION	5.0361609618057E-5	IMPLEMENTATION	3.938866186190161E-6	DESIGN	3.0794048156128274E-6	DEFECT	9.717294893725017E-7	TEST	2.7752901552874613E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999893990420282	WITHOUT_CLASSIFICATION	6.19448247116322E-6	DESIGN	1.7013476633194105E-6	DEFECT	1.3054935329138277E-6	IMPLEMENTATION	1.3054185616261447E-6	DOCUMENTATION	9.42157426849326E-8	TEST
/*(array==null) ? tempList.get(i) :*/	WITHOUT_CLASSIFICATION	0.999923399358742	WITHOUT_CLASSIFICATION	3.5744462166575845E-5	DESIGN	3.244464424692595E-5	IMPLEMENTATION	6.298009150244981E-6	DEFECT	1.6541723900477409E-6	TEST	4.5935330420289935E-7	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999877137952208	WITHOUT_CLASSIFICATION	6.499568260472949E-6	TEST	2.257073481525335E-6	DEFECT	1.4995549426173638E-6	DESIGN	1.3573709311136011E-6	DOCUMENTATION	6.726371635322854E-7	IMPLEMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999877137952208	WITHOUT_CLASSIFICATION	6.499568260472949E-6	TEST	2.257073481525335E-6	DEFECT	1.4995549426173638E-6	DESIGN	1.3573709311136011E-6	DOCUMENTATION	6.726371635322854E-7	IMPLEMENTATION
// amazingly, these two will work because AbstractCollection // uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.9999908139898789	WITHOUT_CLASSIFICATION	3.7732923224605253E-6	DESIGN	2.6138189486106773E-6	IMPLEMENTATION	2.169394822971735E-6	DEFECT	3.653672122258989E-7	DOCUMENTATION	2.6413681486495253E-7	TEST
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.999840673500501	WITHOUT_CLASSIFICATION	1.0091645752694724E-4	IMPLEMENTATION	5.138797141382253E-5	DESIGN	4.050655123203599E-6	TEST	1.614770329334359E-6	DEFECT	1.3566451057970105E-6	DOCUMENTATION
// finally, what it's all about...	WITHOUT_CLASSIFICATION	0.9991745424344545	WITHOUT_CLASSIFICATION	5.478341525544072E-4	DESIGN	1.4038459735463444E-4	DEFECT	1.267443060305214E-4	IMPLEMENTATION	7.768379136581255E-6	TEST	2.7261304694795396E-6	DOCUMENTATION
// note that if we load this collection from a cartesian product // the multiplicity would be broken ... so use an idbag instead	WITHOUT_CLASSIFICATION	0.8545432978060867	DESIGN	0.1454007765735418	WITHOUT_CLASSIFICATION	5.3317966031461094E-5	TEST	1.9043028744427386E-6	DEFECT	4.6418446327116675E-7	IMPLEMENTATION	2.391670023973866E-7	DOCUMENTATION
// Anyway, here we implement <set> semantics for a // <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.9405560793434192	WITHOUT_CLASSIFICATION	0.04161217553762608	DESIGN	0.013843143933666341	DEFECT	0.003915341537021652	IMPLEMENTATION	5.974114397662282E-5	TEST	1.3518504290099556E-5	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999714375748647	WITHOUT_CLASSIFICATION	2.2004701356355993E-5	DEFECT	6.11657825101704E-6	DESIGN	3.062098980095514E-7	TEST	6.983764201282031E-8	DOCUMENTATION	6.509798793284464E-8	IMPLEMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.5379954271126349	WITHOUT_CLASSIFICATION	0.4570954452348251	DESIGN	0.0036559051897100668	TEST	7.830924321509294E-4	IMPLEMENTATION	4.580896264461639E-4	DEFECT	1.204040423271426E-5	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.999840673500501	WITHOUT_CLASSIFICATION	1.0091645752694724E-4	IMPLEMENTATION	5.138797141382253E-5	DESIGN	4.050655123203599E-6	TEST	1.614770329334359E-6	DEFECT	1.3566451057970105E-6	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999714375748647	WITHOUT_CLASSIFICATION	2.2004701356355993E-5	DEFECT	6.11657825101704E-6	DESIGN	3.062098980095514E-7	TEST	6.983764201282031E-8	DOCUMENTATION	6.509798793284464E-8	IMPLEMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.5379954271126349	WITHOUT_CLASSIFICATION	0.4570954452348251	DESIGN	0.0036559051897100668	TEST	7.830924321509294E-4	IMPLEMENTATION	4.580896264461639E-4	DEFECT	1.204040423271426E-5	DOCUMENTATION
/*public boolean equals(Object other) {	WITHOUT_CLASSIFICATION	0.9914917847866233	WITHOUT_CLASSIFICATION	0.00815958890823263	DESIGN	2.592152055360224E-4	IMPLEMENTATION	3.495006282843378E-5	DEFECT	3.216629155609526E-5	TEST	2.229474522348968E-5	DOCUMENTATION
// List OPERATIONS:	WITHOUT_CLASSIFICATION	0.9999875474172029	WITHOUT_CLASSIFICATION	9.5833566757616E-6	IMPLEMENTATION	1.2897109226966922E-6	TEST	8.107872268064968E-7	DESIGN	6.493754405304375E-7	DEFECT	1.193525313507694E-7	DOCUMENTATION
//pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.9999970529655346	WITHOUT_CLASSIFICATION	1.351737494928975E-6	DESIGN	1.2304736631200597E-6	DEFECT	2.3414048358183377E-7	DOCUMENTATION	7.963791087718105E-8	IMPLEMENTATION	5.104491295381456E-8	TEST
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.999840673500501	WITHOUT_CLASSIFICATION	1.0091645752694724E-4	IMPLEMENTATION	5.138797141382253E-5	DESIGN	4.050655123203599E-6	TEST	1.614770329334359E-6	DEFECT	1.3566451057970105E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.999840673500501	WITHOUT_CLASSIFICATION	1.0091645752694724E-4	IMPLEMENTATION	5.138797141382253E-5	DESIGN	4.050655123203599E-6	TEST	1.614770329334359E-6	DEFECT	1.3566451057970105E-6	DOCUMENTATION
// from Map	WITHOUT_CLASSIFICATION	0.9999952162601395	WITHOUT_CLASSIFICATION	2.1936316631663334E-6	DESIGN	1.7860373313271605E-6	DEFECT	5.93148085146277E-7	IMPLEMENTATION	1.1404252083384686E-7	TEST	9.688026000921395E-8	DOCUMENTATION
// from SortedMap	WITHOUT_CLASSIFICATION	0.9999802706273422	WITHOUT_CLASSIFICATION	1.076416398889597E-5	DESIGN	6.257855127673068E-6	DEFECT	2.1337537022294047E-6	IMPLEMENTATION	3.074155301887038E-7	TEST	2.661843086417722E-7	DOCUMENTATION
//inject the data	WITHOUT_CLASSIFICATION	0.9999190464127458	WITHOUT_CLASSIFICATION	6.852123325866217E-5	IMPLEMENTATION	7.225399906788518E-6	DESIGN	2.638495141922248E-6	DOCUMENTATION	1.4586388866476066E-6	TEST	1.1098200601595546E-6	DEFECT
// cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999358154731729	WITHOUT_CLASSIFICATION	5.6560460856317234E-5	DESIGN	6.141583153951374E-6	IMPLEMENTATION	9.375007241778483E-7	DEFECT	3.397980546629038E-7	TEST	2.0518403797215808E-7	DOCUMENTATION
//default pool size 20	WITHOUT_CLASSIFICATION	0.9999899116880786	WITHOUT_CLASSIFICATION	7.264867586915018E-6	IMPLEMENTATION	1.4740934238225615E-6	DEFECT	7.308037289777103E-7	DESIGN	4.716115536897398E-7	DOCUMENTATION	1.4693562796102787E-7	TEST
// trying via forName() first to be as close to DriverManager's semantics	WITHOUT_CLASSIFICATION	0.9999989278462228	WITHOUT_CLASSIFICATION	1.0222748308965227E-6	DESIGN	2.315405131463909E-8	DEFECT	1.1209647359952152E-8	TEST	1.1116232990622323E-8	IMPLEMENTATION	4.399014713769369E-9	DOCUMENTATION
// if debug level is enabled, then log the password, otherwise mask it	WITHOUT_CLASSIFICATION	0.9999467154922921	WITHOUT_CLASSIFICATION	4.728846533088648E-5	IMPLEMENTATION	3.4986183051992125E-6	DEFECT	1.6027286160734362E-6	DESIGN	8.699055307643834E-7	TEST	2.4789925068771606E-8	DOCUMENTATION
// register a cleanup synch	WITHOUT_CLASSIFICATION	0.9999976125904011	WITHOUT_CLASSIFICATION	2.291058295264486E-6	DESIGN	3.3990848818435336E-8	IMPLEMENTATION	3.306859064717876E-8	TEST	1.5275219768956133E-8	DOCUMENTATION	1.4016644466748861E-8	DEFECT
// wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.9999929319299811	WITHOUT_CLASSIFICATION	3.3601322463206576E-6	IMPLEMENTATION	1.925757591254465E-6	DESIGN	1.558367951919204E-6	DEFECT	1.8295035372634056E-7	DOCUMENTATION	4.086187577960439E-8	TEST
// then bind it	WITHOUT_CLASSIFICATION	0.9999870359655598	WITHOUT_CLASSIFICATION	4.194103863866649E-6	IMPLEMENTATION	3.387404287248211E-6	DESIGN	2.7604972888278277E-6	TEST	1.7242207033920451E-6	DEFECT	8.978082969516202E-7	DOCUMENTATION
// try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.9999909780906707	WITHOUT_CLASSIFICATION	4.977133507454568E-6	DEFECT	2.1089775550806876E-6	DESIGN	1.3769453310161105E-6	IMPLEMENTATION	4.905347298357766E-7	DOCUMENTATION	6.831820589841433E-8	TEST
// allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.9999701955101836	WITHOUT_CLASSIFICATION	1.5747069654936753E-5	DESIGN	1.3089519437227619E-5	IMPLEMENTATION	7.596425754898472E-7	DEFECT	1.0524244155636558E-7	DOCUMENTATION	1.0301570706271846E-7	TEST
// limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.9999940109479729	WITHOUT_CLASSIFICATION	5.569980029087237E-6	DESIGN	3.469736449624085E-7	TEST	6.710141236272563E-8	IMPLEMENTATION	4.505940408589042E-9	DOCUMENTATION	4.910001756511928E-10	DEFECT
// allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.997409483987868	WITHOUT_CLASSIFICATION	0.0023748547579622386	DESIGN	2.1237797176535902E-4	IMPLEMENTATION	1.6533062939896313E-6	TEST	8.399773810996299E-7	DEFECT	7.899987294141982E-7	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999976581598943	WITHOUT_CLASSIFICATION	2.0168324840430475E-6	DEFECT	1.537774436325693E-7	IMPLEMENTATION	9.640707348179943E-8	DESIGN	4.2406436075809425E-8	TEST	3.241666857095108E-8	DOCUMENTATION
// We could register the session against the transaction even though it is // not started, but we'd have no guarentee of ever getting the map // entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.9797208835850241	WITHOUT_CLASSIFICATION	0.0202037743832456	DESIGN	6.56845506489838E-5	TEST	9.087288184668113E-6	DEFECT	4.484568654191431E-7	IMPLEMENTATION	1.2173603130976268E-7	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9979648174175247	WITHOUT_CLASSIFICATION	0.0019230655514250292	DESIGN	9.382185481467062E-5	IMPLEMENTATION	6.6476796009934125E-6	DEFECT	6.072039256430971E-6	TEST	5.575457378150797E-6	DOCUMENTATION
//private String propertyName;	WITHOUT_CLASSIFICATION	0.9998913194103922	WITHOUT_CLASSIFICATION	1.0170801183996089E-4	DESIGN	3.780793993129778E-6	DOCUMENTATION	1.22051682071898E-6	DEFECT	1.079272975544754E-6	TEST	8.919939783405163E-7	IMPLEMENTATION
/*public PropertyProjection project() {	WITHOUT_CLASSIFICATION	0.9824252726638311	WITHOUT_CLASSIFICATION	0.014520351425375484	DESIGN	0.0016708659023285254	DEFECT	0.001300485889259932	IMPLEMENTATION	7.258990734066878E-5	DOCUMENTATION	1.0434211864317435E-5	TEST
//String[] fk = StringHelper.qualify( "collection_", cp.getKeyColumnNames() );	WITHOUT_CLASSIFICATION	0.9999689986009929	WITHOUT_CLASSIFICATION	1.642617309691584E-5	DESIGN	8.53557404482464E-6	IMPLEMENTATION	5.128150526811729E-6	DEFECT	5.546609704451163E-7	TEST	3.5684036817310407E-7	DOCUMENTATION
//" collection_ where " +	WITHOUT_CLASSIFICATION	0.999901793266754	WITHOUT_CLASSIFICATION	5.1600797167377696E-5	DESIGN	3.2156205777138976E-5	IMPLEMENTATION	7.02152037713072E-6	DEFECT	5.390021128588862E-6	TEST	2.038188795728954E-6	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9799366534240516	WITHOUT_CLASSIFICATION	0.013848855064724299	DESIGN	0.005427442481345975	IMPLEMENTATION	5.367110886546341E-4	DEFECT	1.4119437404660766E-4	DOCUMENTATION	1.0914356717696545E-4	TEST
//unsupported	WITHOUT_CLASSIFICATION	0.9799366534240516	WITHOUT_CLASSIFICATION	0.013848855064724299	DESIGN	0.005427442481345975	IMPLEMENTATION	5.367110886546341E-4	DEFECT	1.4119437404660766E-4	DOCUMENTATION	1.0914356717696545E-4	TEST
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9979648174175247	WITHOUT_CLASSIFICATION	0.0019230655514250292	DESIGN	9.382185481467062E-5	IMPLEMENTATION	6.6476796009934125E-6	DEFECT	6.072039256430971E-6	TEST	5.575457378150797E-6	DOCUMENTATION
//the following two lines were added to ensure that this.params is not null, which //can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.9993521669004286	WITHOUT_CLASSIFICATION	2.9175079769794027E-4	IMPLEMENTATION	2.848068500280686E-4	TEST	6.269820110302028E-5	DEFECT	7.680689234796092E-6	DESIGN	8.965615075822993E-7	DOCUMENTATION
//with two-deep subqueries, the same alias would get generated for //both using the old method (criteriaQuery.generateSQLAlias()), so //that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.9937751863694924	WITHOUT_CLASSIFICATION	0.006178724328232612	DESIGN	4.4049781198019716E-5	TEST	1.4599313040378868E-6	IMPLEMENTATION	5.595194769106771E-7	DEFECT	2.0070296129906874E-8	DOCUMENTATION
//implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.5858304028730867	WITHOUT_CLASSIFICATION	0.333863126765932	DESIGN	0.06675232364648978	IMPLEMENTATION	0.012098350030600455	DEFECT	0.001091810925557963	TEST	3.6398575833295995E-4	DOCUMENTATION
//pull off the last ", "	WITHOUT_CLASSIFICATION	0.9999967167876412	WITHOUT_CLASSIFICATION	1.6225789324645827E-6	IMPLEMENTATION	9.059768462674653E-7	DESIGN	4.278591222236179E-7	TEST	1.9538378409548365E-7	DOCUMENTATION	1.3141367379900538E-7	DEFECT
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9998047110455981	WITHOUT_CLASSIFICATION	1.1276354639063946E-4	DESIGN	7.409737908734308E-5	DEFECT	3.2905114804703085E-6	DOCUMENTATION	2.6265644935545396E-6	TEST	2.510952949711992E-6	IMPLEMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.999989170353952	WITHOUT_CLASSIFICATION	6.96223888353463E-6	IMPLEMENTATION	1.600515922054813E-6	DESIGN	1.3337612301807503E-6	DOCUMENTATION	6.55878802354162E-7	DEFECT	2.772512099109088E-7	TEST
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource)	WITHOUT_CLASSIFICATION	0.9968419522270774	WITHOUT_CLASSIFICATION	0.0029571597003538075	DESIGN	1.6067392971241598E-4	DEFECT	3.332809838473017E-5	IMPLEMENTATION	6.364329559165761E-6	DOCUMENTATION	5.217149125018557E-7	TEST
// NOT_SUPPORTED_SHOULD_USE_JDBC3_PreparedStatement.getGeneratedKeys_method	WITHOUT_CLASSIFICATION	0.9999925397940295	WITHOUT_CLASSIFICATION	6.737799092652623E-6	IMPLEMENTATION	4.794664984832368E-7	DESIGN	1.8971326620657398E-7	TEST	3.4109883785015086E-8	DOCUMENTATION	1.9117229445103567E-8	DEFECT
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999999694063882	WITHOUT_CLASSIFICATION	2.3341006823288876E-8	DESIGN	6.4542255728248175E-9	DOCUMENTATION	4.3690060773813737E-10	TEST	2.088197334470851E-10	DEFECT	1.5265892329725684E-10	IMPLEMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996693802961176	WITHOUT_CLASSIFICATION	2.1738652352683364E-4	IMPLEMENTATION	5.5526329227518115E-5	DESIGN	4.8221276519080573E-5	DEFECT	8.698864509608273E-6	DOCUMENTATION	7.867100991837695E-7	TEST
// Oracle did add support for ANSI CASE statements in 9i	WITHOUT_CLASSIFICATION	0.9999993840274564	WITHOUT_CLASSIFICATION	3.423069424547505E-7	IMPLEMENTATION	2.1091225996737985E-7	DESIGN	2.8552553456110722E-8	DEFECT	2.3138801886245552E-8	TEST	1.1061985818056213E-8	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999948811935356	WITHOUT_CLASSIFICATION	3.9988346398857344E-6	DEFECT	5.867624608810135E-7	DESIGN	3.881823972343547E-7	IMPLEMENTATION	8.582110713599427E-8	DOCUMENTATION	5.920585921168977E-8	TEST
// Informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.9999548103660644	WITHOUT_CLASSIFICATION	3.983583086651094E-5	DESIGN	3.5330463899708687E-6	DEFECT	1.198382802913629E-6	TEST	3.502507963812021E-7	DOCUMENTATION	2.721230798916182E-7	IMPLEMENTATION
// or BYTE // or TEXT? // or MONEY	WITHOUT_CLASSIFICATION	0.9998576590597626	WITHOUT_CLASSIFICATION	9.825695154443227E-5	DESIGN	2.8961606565632272E-5	IMPLEMENTATION	9.260411377241218E-6	DEFECT	3.612364071699108E-6	TEST	2.249606678380223E-6	DOCUMENTATION
// strip table-owner because Informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.9999999847469111	WITHOUT_CLASSIFICATION	7.975368629705012E-9	DESIGN	4.19626476586654E-9	DEFECT	2.6037521089450675E-9	IMPLEMENTATION	2.487888796981133E-10	DOCUMENTATION	2.2891434660422088E-10	TEST
// build the map of standard ANSI SQL aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999994144862501	WITHOUT_CLASSIFICATION	3.2093649145676055E-7	IMPLEMENTATION	1.784902616437519E-7	DEFECT	7.825400737143715E-8	DESIGN	4.2649716009058675E-9	TEST	3.5680178342376917E-9	DOCUMENTATION
//pre H3.2 behavior: super.getReturnType(ct, m);	WITHOUT_CLASSIFICATION	0.9986126400649739	WITHOUT_CLASSIFICATION	0.001303995790499871	DESIGN	8.284550484675713E-5	DEFECT	2.9659747134277034E-7	DOCUMENTATION	1.3091684939012266E-7	IMPLEMENTATION	9.112535876110247E-8	TEST
// finally use the sqltype if == on Hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.9998617775394877	WITHOUT_CLASSIFICATION	1.3775254693923787E-4	DESIGN	3.7839876966276795E-7	DEFECT	7.84998457722755E-8	IMPLEMENTATION	8.519686447939303E-9	DOCUMENTATION	4.495271130565402E-9	TEST
//because numeric can be anything	WITHOUT_CLASSIFICATION	0.9999970842956566	WITHOUT_CLASSIFICATION	1.4664740225183423E-6	IMPLEMENTATION	5.618781227735514E-7	DESIGN	3.723861109889487E-7	DEFECT	3.6000416380890276E-7	DOCUMENTATION	1.5496192324324938E-7	TEST
// constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999983579325339	WITHOUT_CLASSIFICATION	1.3009255246210845E-6	DESIGN	2.508428896076481E-7	IMPLEMENTATION	6.507875158067169E-8	TEST	1.692336908221243E-8	DEFECT	8.296931204505341E-9	DOCUMENTATION
// standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.999991987989777	WITHOUT_CLASSIFICATION	5.536891303163512E-6	DESIGN	1.944841777874419E-6	DEFECT	4.983429462054714E-7	IMPLEMENTATION	1.7342890608994352E-8	TEST	1.4591305139141372E-8	DOCUMENTATION
//map second/minute/hour/day/month/year to ANSI extract(), override on subclasses	WITHOUT_CLASSIFICATION	0.9986081905992927	WITHOUT_CLASSIFICATION	0.0012525650282468952	DESIGN	1.3300678739012312E-4	IMPLEMENTATION	4.601160507196488E-6	DOCUMENTATION	1.2801491133814064E-6	TEST	3.562754496608467E-7	DEFECT
// register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.8878727366313235	WITHOUT_CLASSIFICATION	0.11212596019882302	DESIGN	9.580324762541129E-7	IMPLEMENTATION	1.9771329827206956E-7	DOCUMENTATION	1.1715112183753256E-7	TEST	3.0272957177523116E-8	DEFECT
// database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999774478296386	WITHOUT_CLASSIFICATION	1.698694723452913E-4	IMPLEMENTATION	4.1112309252073984E-5	DESIGN	1.2101192717914697E-5	DEFECT	1.7978771331938369E-6	DOCUMENTATION	6.408521654765508E-7	TEST
// hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9686347201064417	WITHOUT_CLASSIFICATION	0.030402903515697462	DESIGN	9.161062814734902E-4	IMPLEMENTATION	2.0614177247144607E-5	TEST	1.7295093433774612E-5	DOCUMENTATION	8.360825706446027E-6	DEFECT
// keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999109802999055	WITHOUT_CLASSIFICATION	7.069637565491856E-5	IMPLEMENTATION	1.2254613069707081E-5	DEFECT	4.402386146152297E-6	DESIGN	9.031656299692458E-7	DOCUMENTATION	7.631595935543085E-7	TEST
// native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999926817952052	WITHOUT_CLASSIFICATION	5.1875152519119574E-6	DESIGN	1.6693848841635206E-6	IMPLEMENTATION	2.8999661710192007E-7	DEFECT	1.1174960179719344E-7	DOCUMENTATION	5.95584397639328E-8	TEST
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993168950090054	WITHOUT_CLASSIFICATION	5.263651330425739E-4	IMPLEMENTATION	1.2114642322668282E-4	DESIGN	2.912261294232576E-5	DEFECT	3.854401855412572E-6	TEST	2.616419927623202E-6	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999875550403773	WITHOUT_CLASSIFICATION	7.769972051614323E-5	DESIGN	3.5072290596647974E-5	IMPLEMENTATION	9.276443935205371E-6	DEFECT	1.3469354325908306E-6	TEST	1.0542057463610966E-6	DOCUMENTATION
// GUID support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998074288388351	WITHOUT_CLASSIFICATION	1.275624808772385E-4	IMPLEMENTATION	4.806309429506453E-5	DESIGN	1.3725820502875607E-5	DEFECT	1.839622375268541E-6	DOCUMENTATION	1.3801431145133873E-6	TEST
// limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996749368008361	WITHOUT_CLASSIFICATION	2.600066224656401E-4	DESIGN	3.371179899859515E-5	IMPLEMENTATION	2.9356302842062555E-5	DEFECT	1.202871570171691E-6	TEST	7.85603287352313E-7	DOCUMENTATION
// by default we report no support	WITHOUT_CLASSIFICATION	0.9998670369045362	WITHOUT_CLASSIFICATION	5.849890000420407E-5	DESIGN	4.99920775412444E-5	IMPLEMENTATION	2.229087727726843E-5	DEFECT	1.754219958216886E-6	DOCUMENTATION	4.2702068288330846E-7	TEST
// by default we report no support for NOWAIT lock semantics	WITHOUT_CLASSIFICATION	0.9950773795069244	WITHOUT_CLASSIFICATION	0.0032805211376687204	DESIGN	0.001262682008075423	DEFECT	3.6130564310803424E-4	IMPLEMENTATION	1.5590027761980064E-5	DOCUMENTATION	2.5216764612907313E-6	TEST
// table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999829200986122	WITHOUT_CLASSIFICATION	1.2042087635802145E-5	IMPLEMENTATION	3.952813132166601E-6	DESIGN	8.10452757220353E-7	DEFECT	2.0094212089422154E-7	TEST	7.360574163298145E-8	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996421302721148	WITHOUT_CLASSIFICATION	3.4738873885684454E-4	DESIGN	9.511449201194873E-6	IMPLEMENTATION	6.12843500211931E-7	TEST	2.2632162244312718E-7	DEFECT	1.3037470451452565E-7	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999703681730123	WITHOUT_CLASSIFICATION	2.8160178506470383E-5	IMPLEMENTATION	9.170204046738318E-7	DESIGN	4.014314048878927E-7	DEFECT	1.1065850802793606E-7	DOCUMENTATION	4.253816353026816E-8	TEST
// current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998885697054746	WITHOUT_CLASSIFICATION	9.996786919953117E-5	IMPLEMENTATION	3.698386295875521E-6	DEFECT	3.3203905965564763E-6	DOCUMENTATION	2.409325433230711E-6	TEST	2.034323000232286E-6	DESIGN
// SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999226917623151	WITHOUT_CLASSIFICATION	5.595977528289496E-5	DESIGN	1.884310664765822E-5	DEFECT	1.4022314685810791E-6	IMPLEMENTATION	5.923948893958395E-7	DOCUMENTATION	5.107293964923834E-7	TEST
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999837576985855	WITHOUT_CLASSIFICATION	1.5166487762195317E-4	DESIGN	8.511594045045363E-6	IMPLEMENTATION	1.3279462695218206E-6	DEFECT	4.845874286654891E-7	DOCUMENTATION	4.3400877973863806E-7	TEST
// identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998673416677707	WITHOUT_CLASSIFICATION	7.71509679787118E-5	IMPLEMENTATION	3.573416482543286E-5	DESIGN	1.7223260555522563E-5	DEFECT	1.446745858291912E-6	TEST	1.1031930113260486E-6	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996882171338065	WITHOUT_CLASSIFICATION	1.9222554907307813E-4	IMPLEMENTATION	8.893763797309378E-5	DESIGN	2.3555978495653292E-5	DEFECT	3.5385329705877456E-6	DOCUMENTATION	3.525167681125377E-6	TEST
// grrr... for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.9999858612832643	WITHOUT_CLASSIFICATION	1.1866374879325242E-5	DESIGN	1.1894069260302392E-6	IMPLEMENTATION	6.643743409505532E-7	DEFECT	3.013179425915221E-7	TEST	1.1724264675509138E-7	DOCUMENTATION
// Informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9989128625427668	WITHOUT_CLASSIFICATION	7.328271765033577E-4	IMPLEMENTATION	2.96333662958357E-4	DEFECT	4.571294136528081E-5	DESIGN	1.1482542641593209E-5	DOCUMENTATION	7.81133764602331E-7	TEST
// return false here, as most databases do not properly support this construct...	WITHOUT_CLASSIFICATION	0.9916728705254125	WITHOUT_CLASSIFICATION	0.004688121419154645	IMPLEMENTATION	0.0035211848855755874	DESIGN	9.005107068283808E-5	DEFECT	2.748322083737474E-5	TEST	2.888783368718199E-7	DOCUMENTATION
// Mckoi has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999168042280258	WITHOUT_CLASSIFICATION	3.720958564193012E-5	DESIGN	3.176766302579916E-5	IMPLEMENTATION	1.3183541016495769E-5	DEFECT	5.902437655057559E-7	DOCUMENTATION	4.447385245923099E-7	TEST
// Oracle8 and previous define only a "DATE" type which //      is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.9999975497297068	WITHOUT_CLASSIFICATION	2.2937608557261647E-6	DESIGN	1.0763036319819008E-7	DOCUMENTATION	4.2042793617970375E-8	IMPLEMENTATION	4.613100875435385E-9	TEST	2.223179809987092E-9	DEFECT
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999896170895008	WITHOUT_CLASSIFICATION	3.941055582003719E-6	DESIGN	3.410675910956434E-6	TEST	2.261349472254607E-6	IMPLEMENTATION	4.833711497001872E-7	DEFECT	2.864583841688083E-7	DOCUMENTATION
//" cascade";	WITHOUT_CLASSIFICATION	0.999921082054941	WITHOUT_CLASSIFICATION	5.176163481926403E-5	DESIGN	2.396089562812281E-5	IMPLEMENTATION	1.385458519715073E-6	DOCUMENTATION	1.0078858829734303E-6	TEST	8.020702089941454E-7	DEFECT
//trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.9999985059060413	WITHOUT_CLASSIFICATION	1.0702931402607259E-6	DESIGN	3.013851799528755E-7	IMPLEMENTATION	5.5052810589307505E-8	DEFECT	3.750819393744244E-8	DOCUMENTATION	2.985463399148732E-8	TEST
/*public boolean dropTemporaryTableAfterUse() {	WITHOUT_CLASSIFICATION	0.9359714227353249	WITHOUT_CLASSIFICATION	0.0639933116202528	DESIGN	2.753460703602815E-5	DEFECT	2.8874598652959265E-6	TEST	2.8037102216187496E-6	IMPLEMENTATION	2.0398672994389285E-6	DOCUMENTATION
// CHECK VIOLATION	WITHOUT_CLASSIFICATION	0.9999979211482185	WITHOUT_CLASSIFICATION	1.2238005640503624E-6	DESIGN	3.3294608986789704E-7	DEFECT	3.284625632345388E-7	IMPLEMENTATION	1.111426984764152E-7	TEST	8.24998660253262E-8	DOCUMENTATION
// UNIQUE VIOLATION	WITHOUT_CLASSIFICATION	0.9999906767976507	WITHOUT_CLASSIFICATION	5.357205092530517E-6	IMPLEMENTATION	1.7538080010371913E-6	DESIGN	1.636306316810623E-6	DEFECT	2.953457799188268E-7	DOCUMENTATION	2.8053715901764286E-7	TEST
// FOREIGN KEY VIOLATION	WITHOUT_CLASSIFICATION	0.9999827298304357	WITHOUT_CLASSIFICATION	1.279981356529045E-5	IMPLEMENTATION	2.3373798367985356E-6	DESIGN	1.021583334837211E-6	DEFECT	6.331552346520045E-7	TEST	4.78237592842791E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996693802961176	WITHOUT_CLASSIFICATION	2.1738652352683364E-4	IMPLEMENTATION	5.5526329227518115E-5	DESIGN	4.8221276519080573E-5	DEFECT	8.698864509608273E-6	DOCUMENTATION	7.867100991837695E-7	TEST
// NOT NULL VIOLATION	WITHOUT_CLASSIFICATION	0.9999874590290362	WITHOUT_CLASSIFICATION	9.347597600636394E-6	IMPLEMENTATION	1.683317293462561E-6	DESIGN	6.346185372764378E-7	DEFECT	5.179581860719603E-7	TEST	3.574793463848882E-7	DOCUMENTATION
// ALL OTHER	WITHOUT_CLASSIFICATION	0.9999794118762488	WITHOUT_CLASSIFICATION	1.0681275170640844E-5	DESIGN	4.843344287034606E-6	DEFECT	3.8567582116543035E-6	IMPLEMENTATION	6.165242366138235E-7	TEST	5.902218453720147E-7	DOCUMENTATION
// Register the type of the out param - PostgreSQL uses Types.OTHER	WITHOUT_CLASSIFICATION	0.9976819379247873	WITHOUT_CLASSIFICATION	0.0023177044277181316	DESIGN	2.652654956052827E-7	TEST	5.629774070344152E-8	DEFECT	2.7146145849950503E-8	DOCUMENTATION	8.938112312269697E-9	IMPLEMENTATION
// seems to not really... //	WITHOUT_CLASSIFICATION	0.9995299529999571	WITHOUT_CLASSIFICATION	3.1702704581728963E-4	DEFECT	1.5057465461395454E-4	DESIGN	1.451436129706421E-6	IMPLEMENTATION	7.812697091287899E-7	TEST	2.1259377281359653E-7	DOCUMENTATION
// seems to have spotty LOB suppport	WITHOUT_CLASSIFICATION	0.9994092371187066	WITHOUT_CLASSIFICATION	5.645060371804455E-4	DESIGN	1.8189174137091938E-5	DEFECT	6.464143134572935E-6	IMPLEMENTATION	1.3084451244385878E-6	DOCUMENTATION	2.950817169117513E-7	TEST
// HHH-2300	WITHOUT_CLASSIFICATION	0.9999306491784011	WITHOUT_CLASSIFICATION	5.916415976888563E-5	DESIGN	7.167106536286323E-6	DEFECT	1.1634796429749248E-6	TEST	1.011714806118379E-6	DOCUMENTATION	8.443608446427128E-7	IMPLEMENTATION
// ignore (probably H2 not in the classpath)	WITHOUT_CLASSIFICATION	0.9998500786232037	WITHOUT_CLASSIFICATION	1.0497755973864962E-4	DESIGN	4.416157196458546E-5	DEFECT	4.043292133541205E-7	IMPLEMENTATION	3.3140148120768056E-7	DOCUMENTATION	4.6514398428366674E-8	TEST
// Numeric Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998307005876079	WITHOUT_CLASSIFICATION	1.2460460215333642E-4	IMPLEMENTATION	2.7572492895493334E-5	DESIGN	1.2348078279687832E-5	DEFECT	2.4032056704479603E-6	TEST	2.3710333931640857E-6	DOCUMENTATION
// String Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999620218410052	WITHOUT_CLASSIFICATION	1.6751054409046322E-5	DESIGN	1.0379299691852577E-5	DEFECT	9.722449255295325E-6	IMPLEMENTATION	6.527963843831082E-7	DOCUMENTATION	4.725592541434321E-7	TEST
// Time and Date Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999106382884033	WITHOUT_CLASSIFICATION	5.682040418998474E-5	IMPLEMENTATION	2.629985183921302E-5	DESIGN	3.3687083143842E-6	DEFECT	2.4087146558809314E-6	DOCUMENTATION	4.64032597169928E-7	TEST
// System Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999686003556425	WITHOUT_CLASSIFICATION	1.839119812660224E-5	IMPLEMENTATION	6.909853575459371E-6	DEFECT	4.91667985064553E-6	DESIGN	6.451247725909838E-7	DOCUMENTATION	5.367880322443047E-7	TEST
// not null is implicit	WITHOUT_CLASSIFICATION	0.9994522065446387	WITHOUT_CLASSIFICATION	4.251344423617212E-4	DESIGN	6.0044481900432295E-5	IMPLEMENTATION	5.629775327139762E-5	DEFECT	4.913942904415007E-6	TEST	1.4028349232076324E-6	DOCUMENTATION
// 23000: Check constraint violation: {0} // 23001: Unique index or primary key violation: {0}	WITHOUT_CLASSIFICATION	0.9999986675904966	WITHOUT_CLASSIFICATION	7.05573541611023E-7	DEFECT	3.675712143760918E-7	IMPLEMENTATION	1.964565290392857E-7	DESIGN	4.5769018168361057E-8	DOCUMENTATION	1.7039200151833947E-8	TEST
// Display the dialect version.	WITHOUT_CLASSIFICATION	0.9967758051505656	WITHOUT_CLASSIFICATION	0.003175553356657482	IMPLEMENTATION	4.7216662931096096E-5	DESIGN	7.472106864703599E-7	DOCUMENTATION	4.3434646826328655E-7	TEST	2.4327269101233026E-7	DEFECT
// The RDMS concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9998454955009157	WITHOUT_CLASSIFICATION	1.028996026030938E-4	IMPLEMENTATION	3.867984328547736E-5	DESIGN	1.2202068872883883E-5	DEFECT	4.4622412482169275E-7	DOCUMENTATION	2.767601980006269E-7	TEST
// Dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999570599248117	WITHOUT_CLASSIFICATION	2.701746429632265E-5	DESIGN	1.3622502098259155E-5	IMPLEMENTATION	2.2379876416017597E-6	TEST	5.109640162011325E-8	DOCUMENTATION	1.1024750672911252E-8	DEFECT
// Original Dialect.java returns " for update";	WITHOUT_CLASSIFICATION	0.9999600412130621	WITHOUT_CLASSIFICATION	3.9705871266949836E-5	DESIGN	2.0251249306657792E-7	DEFECT	4.0738967469459936E-8	IMPLEMENTATION	5.438024504991614E-9	DOCUMENTATION	4.226186038473294E-9	TEST
// Verify the state of this new method in Hibernate 3.0 Dialect.java	WITHOUT_CLASSIFICATION	0.9985561080290248	WITHOUT_CLASSIFICATION	0.0014380143954102773	DESIGN	2.9499832888039474E-6	TEST	2.5665792441459144E-6	DEFECT	3.486305066775103E-7	DOCUMENTATION	1.2382525422507083E-8	IMPLEMENTATION
// Origial Dialect.java returns true;	WITHOUT_CLASSIFICATION	0.9999350113006662	WITHOUT_CLASSIFICATION	6.468374450107094E-5	DESIGN	1.8153612308701052E-7	DEFECT	9.599651841941273E-8	IMPLEMENTATION	1.5190621059218858E-8	DOCUMENTATION	1.2231570069865678E-8	TEST
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999998770380993	WITHOUT_CLASSIFICATION	5.242736740175053E-8	IMPLEMENTATION	4.4456299980847375E-8	DESIGN	1.9058629966722223E-8	DOCUMENTATION	6.723352820395645E-9	DEFECT	2.962503761796123E-10	TEST
// *** Sequence methods - start. The RDMS dialect needs these	WITHOUT_CLASSIFICATION	0.9994547839025291	WITHOUT_CLASSIFICATION	4.4974919852563505E-4	DESIGN	7.791314668560213E-5	IMPLEMENTATION	1.0039070881668226E-5	TEST	5.148578890992854E-6	DOCUMENTATION	2.366102486980137E-6	DEFECT
// methods to make it possible to use the Native Id generator	WITHOUT_CLASSIFICATION	0.9999341201736481	WITHOUT_CLASSIFICATION	5.202354752811572E-5	IMPLEMENTATION	1.336162088924816E-5	DESIGN	4.254245041500951E-7	TEST	3.6682292500783703E-8	DOCUMENTATION	3.25511379350058E-8	DEFECT
// The where clause was added to eliminate this statement from Brute Force Searches.	WITHOUT_CLASSIFICATION	0.9997489225671683	WITHOUT_CLASSIFICATION	2.4448381348824935E-4	DESIGN	4.524840407138055E-6	DEFECT	1.4452951686302484E-6	DOCUMENTATION	5.335706223133666E-7	TEST	8.991314543957965E-8	IMPLEMENTATION
// *** Sequence methods - end	WITHOUT_CLASSIFICATION	0.998064274216842	WITHOUT_CLASSIFICATION	0.0018651154628486065	DESIGN	4.563781945168153E-5	IMPLEMENTATION	1.483484221800235E-5	DOCUMENTATION	9.220174280474322E-6	TEST	9.174843592618897E-7	DEFECT
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996693802961176	WITHOUT_CLASSIFICATION	2.1738652352683364E-4	IMPLEMENTATION	5.5526329227518115E-5	DESIGN	4.8221276519080573E-5	DEFECT	8.698864509608273E-6	DOCUMENTATION	7.867100991837695E-7	TEST
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999896170895008	WITHOUT_CLASSIFICATION	3.941055582003719E-6	DESIGN	3.410675910956434E-6	TEST	2.261349472254607E-6	IMPLEMENTATION	4.833711497001872E-7	DEFECT	2.864583841688083E-7	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9950089631079941	WITHOUT_CLASSIFICATION	0.004980369499778227	DESIGN	9.804386580316501E-6	DEFECT	6.340744192884265E-7	TEST	1.3815034884373984E-7	IMPLEMENTATION	9.078087919751574E-8	DOCUMENTATION
// Used with DROP TABLE to delete all records in the table.	WITHOUT_CLASSIFICATION	0.99999312912699	WITHOUT_CLASSIFICATION	6.305261876421991E-6	IMPLEMENTATION	5.126497033761231E-7	DESIGN	3.7289411092323725E-8	DEFECT	9.317414228673704E-9	TEST	6.354604831340213E-9	DOCUMENTATION
// RDMS supports the UNION ALL clause.	WITHOUT_CLASSIFICATION	0.9999976734280511	WITHOUT_CLASSIFICATION	1.9514764339965472E-6	IMPLEMENTATION	3.05006518930808E-7	DESIGN	5.91309178350052E-8	DEFECT	7.81799573349905E-9	DOCUMENTATION	3.140082701774217E-9	TEST
// RDMS has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9998554393639598	WITHOUT_CLASSIFICATION	6.637814167208176E-5	IMPLEMENTATION	4.199176691671366E-5	DEFECT	3.485500412856669E-5	DESIGN	7.123798495624278E-7	DOCUMENTATION	6.233434733710858E-7	TEST
// Multi-param dialect functions...	WITHOUT_CLASSIFICATION	0.9999963371827496	WITHOUT_CLASSIFICATION	2.595127610282885E-6	DESIGN	6.454283762880496E-7	IMPLEMENTATION	3.6677673999029204E-7	DEFECT	2.7846643111137095E-8	TEST	2.763788068334938E-8	DOCUMENTATION
// function templates	WITHOUT_CLASSIFICATION	0.9999979068252882	WITHOUT_CLASSIFICATION	1.5522353294722978E-6	IMPLEMENTATION	1.751374042712191E-7	DESIGN	1.5867760949437687E-7	DEFECT	1.5772774032439758E-7	TEST	4.939662824909164E-8	DOCUMENTATION
//not null is implicit	WITHOUT_CLASSIFICATION	0.9997386755591792	WITHOUT_CLASSIFICATION	1.9423574198120625E-4	DESIGN	5.1592725542907977E-5	DEFECT	8.796938958545512E-6	IMPLEMENTATION	4.7551576527016515E-6	TEST	1.943876685414738E-6	DOCUMENTATION
// this assumes schema support, which is present in 1.8.0 and later...	WITHOUT_CLASSIFICATION	0.9988598305718601	WITHOUT_CLASSIFICATION	0.0010350555257733584	DESIGN	8.738461369492003E-5	DEFECT	9.281470387575079E-6	TEST	7.885126968910915E-6	DOCUMENTATION	5.62691315206411E-7	IMPLEMENTATION
// HSQLDB only supports READ_UNCOMMITTED transaction isolation	WITHOUT_CLASSIFICATION	0.9999670161950435	WITHOUT_CLASSIFICATION	2.8863830095537085E-5	DESIGN	3.7537418622088315E-6	DEFECT	2.1253140633066565E-7	IMPLEMENTATION	1.178604494979123E-7	DOCUMENTATION	3.5841142817169195E-8	TEST
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999961787264684	WITHOUT_CLASSIFICATION	3.067501245133957E-6	DESIGN	3.424100826923475E-7	IMPLEMENTATION	3.3586749763029254E-7	DEFECT	4.54880917844332E-8	TEST	3.0006614250827884E-8	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999700432708607	WITHOUT_CLASSIFICATION	2.5573707217759687E-5	DESIGN	2.4447968525071596E-6	IMPLEMENTATION	1.616055231716868E-6	DEFECT	2.1885061467567922E-7	DOCUMENTATION	1.0331922269253186E-7	TEST
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999978511777765	WITHOUT_CLASSIFICATION	1.5266409268526396E-6	DESIGN	3.7407180723850876E-7	IMPLEMENTATION	2.188615573596198E-7	DEFECT	1.5740607875237694E-8	DOCUMENTATION	1.3507324194624099E-8	TEST
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999999703855843	WITHOUT_CLASSIFICATION	2.4097554625631682E-8	DESIGN	3.3720216026107042E-9	IMPLEMENTATION	1.0100726995070043E-9	DOCUMENTATION	7.092804333311829E-10	TEST	4.2548647984946645E-10	DEFECT
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996693802961176	WITHOUT_CLASSIFICATION	2.1738652352683364E-4	IMPLEMENTATION	5.5526329227518115E-5	DESIGN	4.8221276519080573E-5	DEFECT	8.698864509608273E-6	DOCUMENTATION	7.867100991837695E-7	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996693802961176	WITHOUT_CLASSIFICATION	2.1738652352683364E-4	IMPLEMENTATION	5.5526329227518115E-5	DESIGN	4.8221276519080573E-5	DEFECT	8.698864509608273E-6	DOCUMENTATION	7.867100991837695E-7	TEST
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9880242360008369	WITHOUT_CLASSIFICATION	0.011965063684159545	DESIGN	9.618082409503348E-6	DEFECT	6.298703513060844E-7	IMPLEMENTATION	3.0003357386128566E-7	DOCUMENTATION	1.5232866900179254E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// TimesTen has no BLOB/CLOB support, but these types may be suitable  // for some applications. The length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.9999305914456118	WITHOUT_CLASSIFICATION	6.845788519768715E-5	IMPLEMENTATION	3.9589829368091766E-7	TEST	3.502170168542556E-7	DESIGN	1.879563857258531E-7	DOCUMENTATION	1.6597494262956903E-8	DEFECT
// new methods in dialect3	WITHOUT_CLASSIFICATION	0.9995659116160784	WITHOUT_CLASSIFICATION	4.2832570771651025E-4	DESIGN	3.624131569979907E-6	IMPLEMENTATION	1.4484477487991336E-6	TEST	5.656564016346888E-7	DOCUMENTATION	1.244404846673213E-7	DEFECT
/*public boolean supportsForUpdateNowait() {	WITHOUT_CLASSIFICATION	0.9997912079152007	WITHOUT_CLASSIFICATION	1.6302790897591466E-4	DESIGN	2.1874321381035666E-5	IMPLEMENTATION	2.0402473464117334E-5	DEFECT	1.9830188026393156E-6	TEST	1.5043621755685777E-6	DOCUMENTATION
// TimesTen has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9980361533828753	WITHOUT_CLASSIFICATION	0.001862336487456816	IMPLEMENTATION	6.087994145380315E-5	DEFECT	3.099621860518061E-5	DESIGN	5.889307169974329E-6	TEST	3.744662438898598E-6	DOCUMENTATION
// iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.9999886783370735	WITHOUT_CLASSIFICATION	9.682582999557338E-6	DESIGN	8.288837115295129E-7	IMPLEMENTATION	6.744492197455337E-7	TEST	1.1387750296247094E-7	DEFECT	2.186949277861962E-8	DOCUMENTATION
// add new ordered map	WITHOUT_CLASSIFICATION	0.99998252383825	WITHOUT_CLASSIFICATION	1.617008847676462E-5	IMPLEMENTATION	6.934633413365572E-7	DESIGN	2.615137372864679E-7	DEFECT	2.1959078537265144E-7	TEST	1.3150540915798211E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996693802961176	WITHOUT_CLASSIFICATION	2.1738652352683364E-4	IMPLEMENTATION	5.5526329227518115E-5	DESIGN	4.8221276519080573E-5	DEFECT	8.698864509608273E-6	DOCUMENTATION	7.867100991837695E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999978667724879	WITHOUT_CLASSIFICATION	1.0444888516682504E-6	IMPLEMENTATION	9.409010943198331E-7	DESIGN	1.4252911347227596E-7	DEFECT	3.3806829593664313E-9	TEST	1.9277698719455415E-9	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
//registerColumnType data types	WITHOUT_CLASSIFICATION	0.9993234709879775	WITHOUT_CLASSIFICATION	6.731511824298875E-4	DESIGN	1.2496651161053916E-6	DEFECT	1.0404174226106016E-6	IMPLEMENTATION	6.287168407411972E-7	TEST	4.5903021296236647E-7	DOCUMENTATION
// hibernate seems to ignore this type...	WITHOUT_CLASSIFICATION	0.9901495929989865	WITHOUT_CLASSIFICATION	0.009846196809371677	DESIGN	1.3251062278570452E-6	IMPLEMENTATION	1.1528690428147652E-6	DOCUMENTATION	9.434985427917741E-7	DEFECT	7.887178282601348E-7	TEST
// IBID for current_time and current_date	WITHOUT_CLASSIFICATION	0.9999406974123761	WITHOUT_CLASSIFICATION	5.5090485892917294E-5	IMPLEMENTATION	2.3056378164339273E-6	DEFECT	9.841984935264936E-7	DESIGN	8.073763540844046E-7	DOCUMENTATION	1.1488906687191759E-7	TEST
// Tell hibernate to use getBytes instead of getBinaryStream	WITHOUT_CLASSIFICATION	0.9947723683650196	WITHOUT_CLASSIFICATION	0.005220929035524732	DESIGN	4.19444122071189E-6	DEFECT	1.3207792762804733E-6	TEST	6.200564881063612E-7	IMPLEMENTATION	5.673224705085964E-7	DOCUMENTATION
// No batch statements	WITHOUT_CLASSIFICATION	0.9999990073869991	WITHOUT_CLASSIFICATION	7.436955188216587E-7	IMPLEMENTATION	1.4842861035604363E-7	DOCUMENTATION	5.848693455227862E-8	TEST	2.5642962465755626E-8	DEFECT	1.6358974752306658E-8	DESIGN
/*	WITHOUT_CLASSIFICATION	0.9624352627533524	WITHOUT_CLASSIFICATION	0.02618387964556663	DESIGN	0.007498836067607672	DEFECT	0.003664986289146738	IMPLEMENTATION	1.1191917782725857E-4	DOCUMENTATION	1.0511606649930399E-4	TEST
//no pointbase BIT	WITHOUT_CLASSIFICATION	0.9999810404714565	WITHOUT_CLASSIFICATION	1.0423256010766651E-5	IMPLEMENTATION	3.911000360962937E-6	DEFECT	3.1000105817531073E-6	DOCUMENTATION	1.3312154293712569E-6	DESIGN	1.940461606841393E-7	TEST
//no pointbase TINYINT	WITHOUT_CLASSIFICATION	0.9999919598915252	WITHOUT_CLASSIFICATION	5.69467750828227E-6	IMPLEMENTATION	1.4221269295376286E-6	DOCUMENTATION	4.869042033694272E-7	DEFECT	3.1138298934825147E-7	DESIGN	1.2501684425065315E-7	TEST
// Pointbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999365368798544	WITHOUT_CLASSIFICATION	4.4472403804773646E-5	IMPLEMENTATION	1.2049907916269197E-5	DEFECT	6.095894995985291E-6	DESIGN	5.746730401382285E-7	DOCUMENTATION	2.702403882593185E-7	TEST
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999896170895008	WITHOUT_CLASSIFICATION	3.941055582003719E-6	DESIGN	3.410675910956434E-6	TEST	2.261349472254607E-6	IMPLEMENTATION	4.833711497001872E-7	DEFECT	2.864583841688083E-7	DOCUMENTATION
// The current_timestamp is more accurate, but only known to be supported // in SQL Server 7.0 and later (i.e., Sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.9792933165403468	WITHOUT_CLASSIFICATION	0.019281102621524177	DEFECT	0.0013982832285311167	DESIGN	1.311611020433865E-5	IMPLEMENTATION	7.140961785384881E-6	DOCUMENTATION	7.040537608241269E-6	TEST
// SQL Server (at least up through 2005) does not support defining // cascade delete constraints which can circel back to the mutating // table	WITHOUT_CLASSIFICATION	0.9999946526301018	WITHOUT_CLASSIFICATION	5.172075768701079E-6	DESIGN	1.299127147829837E-7	TEST	3.181036830321127E-8	DEFECT	1.1051926365873264E-8	DOCUMENTATION	2.5191202478266263E-9	IMPLEMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9422506128985358	WITHOUT_CLASSIFICATION	0.04803216467908903	DEFECT	0.00901887472569312	DESIGN	6.796719425877981E-4	TEST	1.855096014047396E-5	DOCUMENTATION	1.2479395386929553E-7	IMPLEMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999896170895008	WITHOUT_CLASSIFICATION	3.941055582003719E-6	DESIGN	3.410675910956434E-6	TEST	2.261349472254607E-6	IMPLEMENTATION	4.833711497001872E-7	DEFECT	2.864583841688083E-7	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999992296521041	WITHOUT_CLASSIFICATION	6.849956499986313E-7	DESIGN	3.351096717839608E-8	DOCUMENTATION	3.0915725392244446E-8	IMPLEMENTATION	1.2654553506778679E-8	DEFECT	8.27099995171446E-9	TEST
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999978667724879	WITHOUT_CLASSIFICATION	1.0444888516682504E-6	IMPLEMENTATION	9.409010943198331E-7	DESIGN	1.4252911347227596E-7	DEFECT	3.3806829593664313E-9	TEST	1.9277698719455415E-9	DOCUMENTATION
//Sybase BIT type does not support null values	WITHOUT_CLASSIFICATION	0.9964193336439809	WITHOUT_CLASSIFICATION	0.003552810133291057	DESIGN	1.9683081023373335E-5	DEFECT	5.899223303592435E-6	IMPLEMENTATION	1.7903804330806232E-6	DOCUMENTATION	4.835379679884833E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996693802961176	WITHOUT_CLASSIFICATION	2.1738652352683364E-4	IMPLEMENTATION	5.5526329227518115E-5	DESIGN	4.8221276519080573E-5	DEFECT	8.698864509608273E-6	DOCUMENTATION	7.867100991837695E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
//not null ... (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.9977550913081182	WITHOUT_CLASSIFICATION	0.001306976446278216	DESIGN	7.362302681454962E-4	DEFECT	1.0521415476110562E-4	TEST	9.104187190707883E-5	IMPLEMENTATION	5.445950789832149E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996693802961176	WITHOUT_CLASSIFICATION	2.1738652352683364E-4	IMPLEMENTATION	5.5526329227518115E-5	DESIGN	4.8221276519080573E-5	DEFECT	8.698864509608273E-6	DOCUMENTATION	7.867100991837695E-7	TEST
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.8708054325050085	WITHOUT_CLASSIFICATION	0.12917543665745043	DESIGN	1.1004041839604057E-5	DEFECT	6.462871342581868E-6	TEST	1.636269675580538E-6	IMPLEMENTATION	2.765468326301463E-8	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999961787264684	WITHOUT_CLASSIFICATION	3.067501245133957E-6	DESIGN	3.424100826923475E-7	IMPLEMENTATION	3.3586749763029254E-7	DEFECT	4.54880917844332E-8	TEST	3.0006614250827884E-8	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999700432708607	WITHOUT_CLASSIFICATION	2.5573707217759687E-5	DESIGN	2.4447968525071596E-6	IMPLEMENTATION	1.616055231716868E-6	DEFECT	2.1885061467567922E-7	DOCUMENTATION	1.0331922269253186E-7	TEST
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999978511777765	WITHOUT_CLASSIFICATION	1.5266409268526396E-6	DESIGN	3.7407180723850876E-7	IMPLEMENTATION	2.188615573596198E-7	DEFECT	1.5740607875237694E-8	DOCUMENTATION	1.3507324194624099E-8	TEST
// add another (inner) nested select // add the main query // close off the inner nested select	WITHOUT_CLASSIFICATION	0.9999999196943538	WITHOUT_CLASSIFICATION	6.218823707663528E-8	TEST	7.354707369506855E-9	DEFECT	4.076760574917806E-9	DOCUMENTATION	3.5021797056695533E-9	IMPLEMENTATION	3.1837615307310202E-9	DESIGN
// add the main query	WITHOUT_CLASSIFICATION	0.9999952479307831	WITHOUT_CLASSIFICATION	3.397229328347385E-6	IMPLEMENTATION	5.925205485254445E-7	DESIGN	3.5461788074765065E-7	DOCUMENTATION	3.0909603601338577E-7	TEST	9.8605423238179E-8	DEFECT
//add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.9999990244462647	WITHOUT_CLASSIFICATION	4.909402167967934E-7	DESIGN	2.106102029730314E-7	TEST	1.4584844308335518E-7	IMPLEMENTATION	6.968542810053639E-8	DEFECT	5.846944449302803E-8	DOCUMENTATION
// This assumes you will want to ignore any update counts 	WITHOUT_CLASSIFICATION	0.9999934225897774	WITHOUT_CLASSIFICATION	6.4822923392271565E-6	DEFECT	4.8949372528614426E-8	DESIGN	2.2772938827295662E-8	TEST	1.3657399296102984E-8	IMPLEMENTATION	9.738172714439367E-9	DOCUMENTATION
// You may still have other ResultSets or update counts left to process here  // but you can't do it now or the ResultSet you just got will be closed 	WITHOUT_CLASSIFICATION	0.9999990882224304	WITHOUT_CLASSIFICATION	8.347808842742871E-7	DEFECT	7.61755923996137E-8	DESIGN	6.085247771330454E-10	TEST	1.7334350863061332E-10	IMPLEMENTATION	3.922468252866698E-11	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996693802961176	WITHOUT_CLASSIFICATION	2.1738652352683364E-4	IMPLEMENTATION	5.5526329227518115E-5	DESIGN	4.8221276519080573E-5	DEFECT	8.698864509608273E-6	DOCUMENTATION	7.867100991837695E-7	TEST
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999896170895008	WITHOUT_CLASSIFICATION	3.941055582003719E-6	DESIGN	3.410675910956434E-6	TEST	2.261349472254607E-6	IMPLEMENTATION	4.833711497001872E-7	DEFECT	2.864583841688083E-7	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999999703855843	WITHOUT_CLASSIFICATION	2.4097554625631682E-8	DESIGN	3.3720216026107042E-9	IMPLEMENTATION	1.0100726995070043E-9	DOCUMENTATION	7.092804333311829E-10	TEST	4.2548647984946645E-10	DEFECT
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9880242360008369	WITHOUT_CLASSIFICATION	0.011965063684159545	DESIGN	9.618082409503348E-6	DEFECT	6.298703513060844E-7	IMPLEMENTATION	3.0003357386128566E-7	DOCUMENTATION	1.5232866900179254E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// features which change between 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999997962329076	WITHOUT_CLASSIFICATION	7.339890750427304E-7	DEFECT	5.538967946691382E-7	IMPLEMENTATION	5.391928612553405E-7	DESIGN	1.1624119572885775E-7	TEST	9.435099739210064E-8	DOCUMENTATION
// features which remain constant across 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999822536020513	WITHOUT_CLASSIFICATION	1.4977574526266157E-5	DEFECT	2.559007396408077E-6	DESIGN	9.566685246354282E-8	DOCUMENTATION	7.235818461116397E-8	TEST	4.179098887480261E-8	IMPLEMENTATION
// binary %Stream // character %Stream	WITHOUT_CLASSIFICATION	0.9999996576281284	WITHOUT_CLASSIFICATION	2.9650612837252656E-7	DESIGN	1.9003498120222954E-8	TEST	1.562313971149974E-8	DEFECT	6.882975663497662E-9	DOCUMENTATION	4.356129807449414E-9	IMPLEMENTATION
//getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE, NO_BATCH);	WITHOUT_CLASSIFICATION	0.9999987865878606	WITHOUT_CLASSIFICATION	6.215435399562393E-7	DESIGN	4.4670759970324517E-7	DEFECT	7.914223384578406E-8	DOCUMENTATION	4.145807223252433E-8	TEST	2.4560693664013058E-8	IMPLEMENTATION
// hibernate impelemnts cast in Dialect.java	WITHOUT_CLASSIFICATION	0.9984282778988289	WITHOUT_CLASSIFICATION	0.0015675721478111665	DESIGN	2.3946777797523466E-6	TEST	1.5320242515193687E-6	DEFECT	1.1707032889222041E-7	IMPLEMENTATION	1.0618099967406052E-7	DOCUMENTATION
// aggregate functions shouldn't be registered, right? //registerFunction( "list", new StandardSQLFunction("list",Hibernate.STRING) ); // stopped on $list	WITHOUT_CLASSIFICATION	0.999950469228371	WITHOUT_CLASSIFICATION	4.943332649556479E-5	DESIGN	8.882160214982888E-8	IMPLEMENTATION	7.058114792726288E-9	DEFECT	1.4494824166522248E-9	TEST	1.1593414092104649E-10	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996882171338065	WITHOUT_CLASSIFICATION	1.9222554907307813E-4	IMPLEMENTATION	8.893763797309378E-5	DESIGN	2.3555978495653292E-5	DEFECT	3.5385329705877456E-6	DOCUMENTATION	3.525167681125377E-6	TEST
// below is for Cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.998253213481638	WITHOUT_CLASSIFICATION	0.0017422678173845785	DESIGN	3.7283912862741525E-6	DEFECT	7.615988312435995E-7	TEST	1.5296072299370047E-8	IMPLEMENTATION	1.3414787690046789E-8	DOCUMENTATION
// note that %string is deprecated	WITHOUT_CLASSIFICATION	0.9844517461761868	WITHOUT_CLASSIFICATION	0.013377899973988184	DESIGN	0.00208213181809669	IMPLEMENTATION	7.931834759107958E-5	TEST	4.586032000860182E-6	DOCUMENTATION	4.317652136425736E-6	DEFECT
// %upper is deprecated	WITHOUT_CLASSIFICATION	0.9999466038378483	WITHOUT_CLASSIFICATION	4.9330530109884195E-5	DESIGN	1.5777630639451741E-6	DEFECT	1.4795701757292536E-6	IMPLEMENTATION	8.823621500516622E-7	TEST	1.2593665214430514E-7	DOCUMENTATION
// The syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.9999980516121524	WITHOUT_CLASSIFICATION	1.076072674679538E-6	DESIGN	6.497480203107919E-7	DEFECT	1.7095647603834933E-7	IMPLEMENTATION	3.4228709249499475E-8	DOCUMENTATION	1.7381967324073365E-8	TEST
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999999334339849	WITHOUT_CLASSIFICATION	4.738953659609052E-8	IMPLEMENTATION	1.0306178738747172E-8	DESIGN	4.0530727314618675E-9	DOCUMENTATION	2.8933556686644093E-9	TEST	1.9238714767085126E-9	DEFECT
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993168950090054	WITHOUT_CLASSIFICATION	5.263651330425739E-4	IMPLEMENTATION	1.2114642322668282E-4	DESIGN	2.912261294232576E-5	DEFECT	3.854401855412572E-6	TEST	2.616419927623202E-6	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999875550403773	WITHOUT_CLASSIFICATION	7.769972051614323E-5	DESIGN	3.5072290596647974E-5	IMPLEMENTATION	9.276443935205371E-6	DEFECT	1.3469354325908306E-6	TEST	1.0542057463610966E-6	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996421302721148	WITHOUT_CLASSIFICATION	3.4738873885684454E-4	DESIGN	9.511449201194873E-6	IMPLEMENTATION	6.12843500211931E-7	TEST	2.2632162244312718E-7	DEFECT	1.3037470451452565E-7	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999999334339849	WITHOUT_CLASSIFICATION	4.738953659609052E-8	IMPLEMENTATION	1.0306178738747172E-8	DESIGN	4.0530727314618675E-9	DOCUMENTATION	2.8933556686644093E-9	TEST	1.9238714767085126E-9	DEFECT
// The syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.9999806972223863	WITHOUT_CLASSIFICATION	1.2943716385685089E-5	DESIGN	4.88488858724399E-6	DEFECT	1.047960277108341E-6	IMPLEMENTATION	3.432514824791908E-7	DOCUMENTATION	8.29608812795248E-8	TEST
// Completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.9999886782905102	WITHOUT_CLASSIFICATION	6.271788793828718E-6	DESIGN	2.764998105559692E-6	IMPLEMENTATION	2.1842663612674746E-6	DEFECT	7.860396230164266E-8	DOCUMENTATION	2.2052266717175782E-8	TEST
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995116623586442	WITHOUT_CLASSIFICATION	3.172464267296612E-4	DEFECT	1.1133054106018725E-4	DESIGN	5.495393005126096E-5	IMPLEMENTATION	3.287749049761078E-6	DOCUMENTATION	1.5189944648308735E-6	TEST
// LIMIT support (ala TOP) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992503042820825	WITHOUT_CLASSIFICATION	4.604578760457847E-4	IMPLEMENTATION	2.4003658056231112E-4	DESIGN	4.32226286801994E-5	DEFECT	4.157669749431767E-6	DOCUMENTATION	1.820962879831E-6	TEST
// InterSystems Cache' does not current support "SELECT ... FOR UPDATE" syntax... // Set your transaction mode to READ_COMMITTED before using	WITHOUT_CLASSIFICATION	0.99999842401817	WITHOUT_CLASSIFICATION	1.294263087196974E-6	DEFECT	1.838220557699312E-7	DESIGN	7.630784778322348E-8	IMPLEMENTATION	1.633614548196278E-8	TEST	5.252693674064106E-9	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996693802961176	WITHOUT_CLASSIFICATION	2.1738652352683364E-4	IMPLEMENTATION	5.5526329227518115E-5	DESIGN	4.8221276519080573E-5	DEFECT	8.698864509608273E-6	DOCUMENTATION	7.867100991837695E-7	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996693802961176	WITHOUT_CLASSIFICATION	2.1738652352683364E-4	IMPLEMENTATION	5.5526329227518115E-5	DESIGN	4.8221276519080573E-5	DEFECT	8.698864509608273E-6	DOCUMENTATION	7.867100991837695E-7	TEST
/*<String>*/	WITHOUT_CLASSIFICATION	0.9974735273499825	WITHOUT_CLASSIFICATION	0.0019311979124158197	DESIGN	3.803948368828767E-4	DEFECT	1.541854970596891E-4	IMPLEMENTATION	3.386240663364835E-5	DOCUMENTATION	2.683199702550369E-5	TEST
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999703681730123	WITHOUT_CLASSIFICATION	2.8160178506470383E-5	IMPLEMENTATION	9.170204046738318E-7	DESIGN	4.014314048878927E-7	DEFECT	1.1065850802793606E-7	DOCUMENTATION	4.253816353026816E-8	TEST
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999837576985855	WITHOUT_CLASSIFICATION	1.5166487762195317E-4	DESIGN	8.511594045045363E-6	IMPLEMENTATION	1.3279462695218206E-6	DEFECT	4.845874286654891E-7	DOCUMENTATION	4.3400877973863806E-7	TEST
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999998770380993	WITHOUT_CLASSIFICATION	5.242736740175053E-8	IMPLEMENTATION	4.4456299980847375E-8	DESIGN	1.9058629966722223E-8	DOCUMENTATION	6.723352820395645E-9	DEFECT	2.962503761796123E-10	TEST
// Does the LIMIT clause come at the start of the SELECT statement, rather than at the end?	WITHOUT_CLASSIFICATION	0.9999977333441785	WITHOUT_CLASSIFICATION	1.3012534850461854E-6	DESIGN	5.447007155702535E-7	TEST	2.6065715947236245E-7	DOCUMENTATION	1.1386686457236051E-7	IMPLEMENTATION	4.617759683386081E-8	DEFECT
// Does the LIMIT clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.9999003883279931	WITHOUT_CLASSIFICATION	5.692064017067695E-5	DESIGN	2.171697423295905E-5	IMPLEMENTATION	1.866225412912659E-5	DEFECT	1.5853086771853036E-6	DOCUMENTATION	7.264947969165438E-7	TEST
// The name of the SQL function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.9999989388373213	WITHOUT_CLASSIFICATION	5.543006356809106E-7	DEFECT	4.585038657780907E-7	DESIGN	3.267265557537946E-8	IMPLEMENTATION	9.991124253688037E-9	DOCUMENTATION	5.694397423075419E-9	TEST
// Create an OuterJoinGenerator for this dialect.	WITHOUT_CLASSIFICATION	0.9999870855992965	WITHOUT_CLASSIFICATION	1.2693825577521072E-5	DESIGN	2.1803158012164528E-7	TEST	1.615844001186082E-9	DOCUMENTATION	7.138075600591981E-10	IMPLEMENTATION	2.138944289468597E-10	DEFECT
// The keyword used to insert a row without specifying // any column values	WITHOUT_CLASSIFICATION	0.9999988936635705	WITHOUT_CLASSIFICATION	6.37804510747078E-7	DEFECT	1.8448212604237664E-7	IMPLEMENTATION	1.5685758543961205E-7	DESIGN	8.714590953299202E-8	TEST	4.004629771723156E-8	DOCUMENTATION
//registerFunction( "trim", new StandardSQLFunction( "trim", Hibernate.STRING ) );	WITHOUT_CLASSIFICATION	0.9999904290042484	WITHOUT_CLASSIFICATION	6.1672690421914645E-6	DESIGN	3.1697477182055935E-6	IMPLEMENTATION	1.5460767009050155E-7	DEFECT	5.382565662586748E-8	DOCUMENTATION	2.5545664514216555E-8	TEST
//skip the FROM keyword in params	WITHOUT_CLASSIFICATION	0.999962621974206	WITHOUT_CLASSIFICATION	3.2543688156253495E-5	IMPLEMENTATION	2.0857779690273922E-6	DESIGN	1.1650295148982145E-6	DOCUMENTATION	9.322288360922646E-7	DEFECT	6.513013177166189E-7	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9954271247081595	WITHOUT_CLASSIFICATION	0.004322989338518281	DESIGN	1.7356294724047073E-4	IMPLEMENTATION	4.7901055112023405E-5	DEFECT	1.831782340941365E-5	DOCUMENTATION	1.0104127560420165E-5	TEST
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999999694063882	WITHOUT_CLASSIFICATION	2.3341006823288876E-8	DESIGN	6.4542255728248175E-9	DOCUMENTATION	4.3690060773813737E-10	TEST	2.088197334470851E-10	DEFECT	1.5265892329725684E-10	IMPLEMENTATION
// SQLFunction implementation	WITHOUT_CLASSIFICATION	0.9998729916214419	WITHOUT_CLASSIFICATION	1.2249714932105417E-4	IMPLEMENTATION	2.3430684509512593E-6	DEFECT	1.149982811945145E-6	DESIGN	9.545961121590836E-7	DOCUMENTATION	6.358186202379385E-8	TEST
// conceivable that the dialect ctor could throw HibernateExceptions, so don't re-wrap	WITHOUT_CLASSIFICATION	0.9999995513082826	WITHOUT_CLASSIFICATION	4.0055959596845003E-7	DESIGN	3.2104902005451475E-8	IMPLEMENTATION	8.431020777318583E-9	TEST	6.9284429313821925E-9	DEFECT	6.677557341635193E-10	DOCUMENTATION
// register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.9999958096468887	WITHOUT_CLASSIFICATION	3.0490855726161173E-6	IMPLEMENTATION	9.985867661225273E-7	DESIGN	6.585863304112395E-8	TEST	6.486074800074055E-8	DEFECT	1.1961391434717898E-8	DOCUMENTATION
// register resolvers set via Environment property	WITHOUT_CLASSIFICATION	0.9998912309470058	WITHOUT_CLASSIFICATION	1.0782385797129896E-4	DESIGN	4.6612569856276246E-7	DEFECT	3.804336277568855E-7	TEST	6.408465526603942E-8	DOCUMENTATION	3.4551041357777816E-8	IMPLEMENTATION
// kept for backward compatibility until after the 3.1beta5 release of HA	WITHOUT_CLASSIFICATION	0.9999992098678652	WITHOUT_CLASSIFICATION	6.891587404110441E-7	IMPLEMENTATION	3.7829993639477784E-8	DESIGN	3.684306505969217E-8	DEFECT	2.238838911768705E-8	TEST	3.91194657420021E-9	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9996086425693265	WITHOUT_CLASSIFICATION	3.416306978319675E-4	DESIGN	4.2955631500221904E-5	IMPLEMENTATION	4.0069763021096575E-6	TEST	2.470601859001692E-6	DOCUMENTATION	2.9352318030755686E-7	DEFECT
// the CascadingAction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999388806393987	WITHOUT_CLASSIFICATION	4.485942915505037E-5	IMPLEMENTATION	1.3078342470984054E-5	DESIGN	1.5521231512376713E-6	DOCUMENTATION	1.5021947545567287E-6	TEST	1.2727106955879424E-7	DEFECT
// the CascadingAction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9972488924454925	WITHOUT_CLASSIFICATION	0.002733131776335398	IMPLEMENTATION	1.4830976702990622E-5	DESIGN	1.7276494502889488E-6	DEFECT	8.06678671079841E-7	DOCUMENTATION	6.104733476939563E-7	TEST
// delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999993996999347	WITHOUT_CLASSIFICATION	3.674361524499874E-7	DESIGN	1.0639556935799666E-7	TEST	8.625700184734788E-8	IMPLEMENTATION	2.2322056101100245E-8	DEFECT	1.7889285665324902E-8	DOCUMENTATION
// orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.9998962804863084	WITHOUT_CLASSIFICATION	9.85650748579052E-5	DESIGN	3.823459137120358E-6	DEFECT	9.412616584519972E-7	IMPLEMENTATION	3.508836169449543E-7	TEST	3.88344211371695E-8	DOCUMENTATION
/*(LockMode) anything*/	WITHOUT_CLASSIFICATION	0.9999563729398908	WITHOUT_CLASSIFICATION	1.610269220830982E-5	DESIGN	1.0813943312301835E-5	IMPLEMENTATION	7.977682407365423E-6	DEFECT	5.363291998427109E-6	DOCUMENTATION	3.369450182905281E-6	TEST
// lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9998625895644621	WITHOUT_CLASSIFICATION	1.3188192518052543E-4	IMPLEMENTATION	2.2705903451388837E-6	TEST	1.2271158533289883E-6	DESIGN	1.1556492730406638E-6	DEFECT	8.751548859254027E-7	DOCUMENTATION
// refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999754952761332	WITHOUT_CLASSIFICATION	2.2770744575042034E-5	IMPLEMENTATION	8.060822579499305E-7	DESIGN	7.481412118988416E-7	TEST	1.175222223788826E-7	DEFECT	6.223359958634196E-8	DOCUMENTATION
// evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999897212822805	WITHOUT_CLASSIFICATION	5.910664230058506E-6	DESIGN	2.9158448658881307E-6	IMPLEMENTATION	9.59458794124493E-7	DEFECT	3.4791390713534457E-7	TEST	1.4483592232005192E-7	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999986022948252	WITHOUT_CLASSIFICATION	8.976579344258189E-7	IMPLEMENTATION	3.4808317828582356E-7	DEFECT	8.006554061600416E-8	TEST	5.641221858729535E-8	DESIGN	1.5486302823840458E-8	DOCUMENTATION
// orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.9999895879000701	WITHOUT_CLASSIFICATION	9.186556784061388E-6	DESIGN	1.0797495495694737E-6	DEFECT	9.306717945262433E-8	IMPLEMENTATION	4.487111898176972E-8	TEST	7.855297833556389E-9	DOCUMENTATION
// for deprecated saveOrUpdateCopy()	WITHOUT_CLASSIFICATION	0.9999946340824356	WITHOUT_CLASSIFICATION	3.541014031959914E-6	DESIGN	1.0753447938317201E-6	IMPLEMENTATION	5.790170569986798E-7	DEFECT	9.461107572718209E-8	DOCUMENTATION	7.593060586077857E-8	TEST
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999982516736642	WITHOUT_CLASSIFICATION	1.3609397220818885E-6	IMPLEMENTATION	1.583375192999993E-7	DESIGN	1.4877365803107542E-7	DEFECT	7.097151581583663E-8	TEST	9.303920612593199E-9	DOCUMENTATION
//a proxy cannot be transient and it breaks ForeignKeys.isTransient	WITHOUT_CLASSIFICATION	0.9999404336143797	WITHOUT_CLASSIFICATION	2.7231418296851716E-5	DEFECT	1.831771086541524E-5	DESIGN	1.3245656076182574E-5	IMPLEMENTATION	4.828581088545002E-7	DOCUMENTATION	2.8874227302606057E-7	TEST
// replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999932242718279	WITHOUT_CLASSIFICATION	5.360600602715088E-6	DESIGN	9.278320357128245E-7	IMPLEMENTATION	3.701974464212196E-7	TEST	7.608576886480244E-8	DOCUMENTATION	4.101231833483448E-8	DEFECT
// static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999997568561551	WITHOUT_CLASSIFICATION	1.2083897336581032E-6	IMPLEMENTATION	9.83775858142008E-7	DESIGN	1.2143417902155655E-7	DEFECT	1.0206805391538463E-7	TEST	1.5770624364647673E-8	DOCUMENTATION
// handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.9927276432465408	WITHOUT_CLASSIFICATION	0.00724668894859532	DESIGN	2.1567389211749024E-5	DEFECT	2.055574195682049E-6	TEST	1.4176762664826765E-6	IMPLEMENTATION	6.271651899093977E-7	DOCUMENTATION
// Actually the semantics of the next three are really "Bag" // Note that, unlike objects, collection insertions, updates, // deletions are not really remembered between flushes. We // just re-use the same Lists for convenience.	WITHOUT_CLASSIFICATION	0.9953074336202554	WITHOUT_CLASSIFICATION	0.004541470449057456	DEFECT	6.475103131958403E-5	TEST	4.3059742436182305E-5	IMPLEMENTATION	4.256297714428619E-5	DESIGN	7.221797870974231E-7	DOCUMENTATION
// Add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.9999900161080504	WITHOUT_CLASSIFICATION	6.2038110238387215E-6	DESIGN	2.8316955847822354E-6	DEFECT	4.911989794040049E-7	DOCUMENTATION	3.2794465928424856E-7	IMPLEMENTATION	1.292417023724163E-7	TEST
// continue loop	WITHOUT_CLASSIFICATION	0.9999807742826142	WITHOUT_CLASSIFICATION	1.3382919244064794E-5	DEFECT	4.761454471257455E-6	DESIGN	6.136256397035878E-7	IMPLEMENTATION	4.1519347149657936E-7	DOCUMENTATION	5.2524559218658164E-8	TEST
//sort the updates by fk	WITHOUT_CLASSIFICATION	0.9993147366140909	WITHOUT_CLASSIFICATION	6.435641697996393E-4	IMPLEMENTATION	2.086109967905311E-5	TEST	1.2898707643196952E-5	DEFECT	5.984342560287585E-6	DESIGN	1.955066226914214E-6	DOCUMENTATION
//sort the updates by pk	WITHOUT_CLASSIFICATION	0.9992414057476527	WITHOUT_CLASSIFICATION	7.353588706470142E-4	IMPLEMENTATION	1.3102310446282074E-5	TEST	5.484187982925066E-6	DEFECT	2.754041721008215E-6	DESIGN	1.8948415500473769E-6	DOCUMENTATION
// the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.9999920149881278	WITHOUT_CLASSIFICATION	6.301671148866238E-6	TEST	7.072839010802763E-7	IMPLEMENTATION	4.3129104201694353E-7	DESIGN	2.8334001672769103E-7	DOCUMENTATION	2.614257636097967E-7	DEFECT
// the map of batch numbers to EntityInsertAction lists	WITHOUT_CLASSIFICATION	0.999995430460771	WITHOUT_CLASSIFICATION	3.537810016884394E-6	DESIGN	5.551116461300894E-7	DEFECT	3.440674572158247E-7	IMPLEMENTATION	6.84730257708008E-8	TEST	6.40770829484498E-8	DOCUMENTATION
//optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.9974564166211701	WITHOUT_CLASSIFICATION	0.002484479857239181	DESIGN	5.518865754990515E-5	IMPLEMENTATION	1.4612697461528408E-6	DOCUMENTATION	1.4554245007535508E-6	DEFECT	9.98169793866089E-7	TEST
// the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.9999859502494073	WITHOUT_CLASSIFICATION	1.237667851480951E-5	DESIGN	1.0639966121386376E-6	IMPLEMENTATION	2.9755437593542476E-7	TEST	2.2159883819804027E-7	DOCUMENTATION	8.992225166982818E-8	DEFECT
// remove the current element from insertions. It will be added back later.	WITHOUT_CLASSIFICATION	0.9999368069391776	WITHOUT_CLASSIFICATION	4.132396224017434E-5	DESIGN	2.164981647121703E-5	DEFECT	1.2911797056770237E-7	IMPLEMENTATION	5.3915417717166055E-8	DOCUMENTATION	3.6248722820602846E-8	TEST
// the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.9982975173157301	WITHOUT_CLASSIFICATION	0.0016355449107404057	IMPLEMENTATION	3.0205206243061406E-5	TEST	1.984868923876827E-5	DESIGN	1.6593134126556692E-5	DOCUMENTATION	2.9074392111925144E-7	DEFECT
// There is already an existing batch for this type of entity. // Check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.999990499816533	WITHOUT_CLASSIFICATION	6.822826791928592E-6	DESIGN	2.629551290465233E-6	TEST	3.249850818438506E-8	DEFECT	1.4999773695351107E-8	DOCUMENTATION	3.0710279758165664E-10	IMPLEMENTATION
// now rebuild the insertions list. There is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.9999887605262648	WITHOUT_CLASSIFICATION	1.084331245857089E-5	DESIGN	3.351304526769462E-7	DEFECT	3.6387922138756414E-8	IMPLEMENTATION	1.9093058072615972E-8	TEST	5.549843770324883E-9	DOCUMENTATION
// the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.999992607302143	WITHOUT_CLASSIFICATION	5.641968819824498E-6	TEST	1.5196550492690392E-6	DESIGN	1.0418070892633005E-7	DOCUMENTATION	8.420639291071673E-8	IMPLEMENTATION	4.2686885935843925E-8	DEFECT
// loop through all the associations of the current entity and make sure that they are processed // before the current batch number	WITHOUT_CLASSIFICATION	0.9999995667253875	WITHOUT_CLASSIFICATION	2.1859495065430922E-7	IMPLEMENTATION	8.264170143559767E-8	DEFECT	8.235888616759937E-8	DESIGN	3.5174752149441556E-8	DOCUMENTATION	1.4504322151944352E-8	TEST
// find the batch number associated with the current association, if any.	WITHOUT_CLASSIFICATION	0.9999193935171877	WITHOUT_CLASSIFICATION	3.6999038103460534E-5	TEST	2.4356158417759086E-5	IMPLEMENTATION	1.2094515667055461E-5	DESIGN	6.739340231000964E-6	DOCUMENTATION	4.174303931454731E-7	DEFECT
// create a new batch for this type. The batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.9999926181306208	WITHOUT_CLASSIFICATION	7.251687201256244E-6	DESIGN	7.659738200913944E-8	TEST	2.7167544360790622E-8	DOCUMENTATION	2.567122515184394E-8	DEFECT	7.460262900811503E-10	IMPLEMENTATION
// loop through all the associated entities and make sure they have been // processed before the latest // batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.9999892928778484	WITHOUT_CLASSIFICATION	6.776510088730043E-6	TEST	3.4367770636244087E-6	IMPLEMENTATION	4.046527892876247E-7	DESIGN	6.68464931681227E-8	DOCUMENTATION	2.2335716742908684E-8	DEFECT
// since this entity will now be processed in the latest possible batch, // we can be assured that it will come after all other associations, // there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.984151706624784	WITHOUT_CLASSIFICATION	0.01571460716386895	IMPLEMENTATION	1.2524238950017513E-4	TEST	4.162990994127883E-6	DESIGN	2.883142244215083E-6	DEFECT	1.3976886086472725E-6	DOCUMENTATION
//cascade to current collection elements	WITHOUT_CLASSIFICATION	0.9998228766563545	WITHOUT_CLASSIFICATION	9.08301412969425E-5	IMPLEMENTATION	7.772823629991504E-5	DESIGN	4.7360438590359566E-6	DOCUMENTATION	3.343277229321854E-6	DEFECT	4.856449602721702E-7	TEST
//not really necessary, but good for consistency...	WITHOUT_CLASSIFICATION	0.95729877629242	WITHOUT_CLASSIFICATION	0.0402744992200034	DESIGN	0.001417026065910797	DEFECT	8.802156780493162E-4	IMPLEMENTATION	9.876261498082087E-5	TEST	3.07201286356271E-5	DOCUMENTATION
// we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.9999991505862151	WITHOUT_CLASSIFICATION	3.941110350416738E-7	IMPLEMENTATION	2.7539542651740454E-7	DESIGN	1.3925516936407074E-7	DEFECT	3.246227585311511E-8	DOCUMENTATION	8.189877993161518E-9	TEST
//a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.9969869229842528	WITHOUT_CLASSIFICATION	0.0029657863126185137	DESIGN	3.6937051134588326E-5	DEFECT	8.42133735157412E-6	IMPLEMENTATION	1.0262477770969408E-6	DOCUMENTATION	9.06066865306983E-7	TEST
// handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.9998147936282995	WITHOUT_CLASSIFICATION	1.474764870832829E-4	DESIGN	3.4555951478405806E-5	IMPLEMENTATION	1.5207816911190432E-6	DOCUMENTATION	1.1141510437092925E-6	TEST	5.390004039373034E-7	DEFECT
// Loaded entity instances, by EntityUniqueKey	WITHOUT_CLASSIFICATION	0.9999909885571578	WITHOUT_CLASSIFICATION	6.220239356954138E-6	DEFECT	1.695952386541351E-6	DESIGN	5.066780320319053E-7	DOCUMENTATION	4.7336198301023E-7	IMPLEMENTATION	1.1521108356451001E-7	TEST
// Identity map of EntityEntry instances, by the entity instance	WITHOUT_CLASSIFICATION	0.9999938306227076	WITHOUT_CLASSIFICATION	5.013504222220841E-6	IMPLEMENTATION	5.089632012920023E-7	DEFECT	4.49794989319183E-7	DESIGN	1.5191214028209982E-7	DOCUMENTATION	4.520273916474728E-8	TEST
// Entity proxies, by EntityKey	WITHOUT_CLASSIFICATION	0.9999935257172193	WITHOUT_CLASSIFICATION	4.5426479437530516E-6	DEFECT	1.2196944236847117E-6	IMPLEMENTATION	3.0513710826180066E-7	TEST	2.2140859032638322E-7	DOCUMENTATION	1.853947146284611E-7	DESIGN
// Snapshots of current database state for entities // that have *not* been loaded	WITHOUT_CLASSIFICATION	0.9999747456197621	WITHOUT_CLASSIFICATION	1.573532536342384E-5	IMPLEMENTATION	7.677103469239481E-6	DEFECT	1.4461315699771093E-6	DESIGN	3.5005524392647765E-7	TEST	4.5764591362062875E-8	DOCUMENTATION
// Identity map of array holder ArrayHolder instances, by the array instance	WITHOUT_CLASSIFICATION	0.9999927861664961	WITHOUT_CLASSIFICATION	5.926622703048599E-6	IMPLEMENTATION	5.958358826226774E-7	DESIGN	5.811322396984362E-7	DEFECT	6.410948466707167E-8	DOCUMENTATION	4.6133193721073204E-8	TEST
// Collection wrappers, by the CollectionKey //key=CollectionKey, value=PersistentCollection	WITHOUT_CLASSIFICATION	0.9999998392167474	WITHOUT_CLASSIFICATION	9.967053867337977E-8	DEFECT	2.4492547951088497E-8	TEST	2.367046889153161E-8	DESIGN	8.559693115567433E-9	DOCUMENTATION	4.390003810795768E-9	IMPLEMENTATION
// Set of EntityKeys of deleted objects	WITHOUT_CLASSIFICATION	0.9999860568545857	WITHOUT_CLASSIFICATION	8.532331029160318E-6	DESIGN	4.840203239045206E-6	DEFECT	3.982061338725799E-7	TEST	1.36075216531806E-7	DOCUMENTATION	3.6329795642022776E-8	IMPLEMENTATION
// properties that we have tried to load, and not found in the database	WITHOUT_CLASSIFICATION	0.9999946092073645	WITHOUT_CLASSIFICATION	5.192944368478671E-6	DEFECT	9.53546421587022E-8	IMPLEMENTATION	9.386405973440782E-8	DESIGN	6.305282235924E-9	TEST	2.3242828289450504E-9	DOCUMENTATION
// A list of collection wrappers that were instantiating during result set // processing, that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9997301216636094	WITHOUT_CLASSIFICATION	1.645020234471637E-4	DEFECT	7.636968156928163E-5	IMPLEMENTATION	2.706122203480361E-5	DESIGN	1.6441401118794427E-6	TEST	3.012692274752443E-7	DOCUMENTATION
// A container for collections we load up when the owning entity is not // yet loaded ... for now, this is purely transient!	WITHOUT_CLASSIFICATION	0.9966906177966116	WITHOUT_CLASSIFICATION	0.0022821129742611797	IMPLEMENTATION	9.628081914987975E-4	DEFECT	3.810779247986643E-5	DESIGN	2.4945108699860666E-5	TEST	1.4081364485739745E-6	DOCUMENTATION
// Downgrade locks	WITHOUT_CLASSIFICATION	0.9998444607462802	WITHOUT_CLASSIFICATION	1.3777943433839864E-4	IMPLEMENTATION	7.580043673645141E-6	DEFECT	5.719915183689727E-6	DESIGN	3.537038061811014E-6	DOCUMENTATION	9.22822462273524E-7	TEST
// any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.9999806496356803	WITHOUT_CLASSIFICATION	1.0938669540404982E-5	DESIGN	7.758479971078657E-6	DEFECT	3.204594613499693E-7	IMPLEMENTATION	1.7142391403806674E-7	TEST	1.6133143278658673E-7	DOCUMENTATION
//unwrap the object	WITHOUT_CLASSIFICATION	0.9999940589927875	WITHOUT_CLASSIFICATION	2.4481542364674166E-6	DESIGN	1.3223158066771738E-6	IMPLEMENTATION	1.010353745273627E-6	DOCUMENTATION	9.33255625382957E-7	DEFECT	2.2692779874518448E-7	TEST
//initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.9999992788992071	WITHOUT_CLASSIFICATION	2.3226533870388822E-7	DOCUMENTATION	2.060377594616787E-7	IMPLEMENTATION	1.4659331353232878E-7	DESIGN	6.989401430376719E-8	DEFECT	6.6310366803891E-8	TEST
//return the proxied object	WITHOUT_CLASSIFICATION	0.9999609652940932	WITHOUT_CLASSIFICATION	2.9350076530890886E-5	DESIGN	4.596225587002019E-6	DEFECT	3.9049800547749155E-6	IMPLEMENTATION	1.079757071253398E-6	DOCUMENTATION	1.0366666293149779E-7	TEST
//overwrite old proxy	WITHOUT_CLASSIFICATION	0.9999988215579819	WITHOUT_CLASSIFICATION	5.702246363445533E-7	DESIGN	2.5011553672883577E-7	IMPLEMENTATION	2.3130618779999608E-7	DEFECT	6.926956943768196E-8	DOCUMENTATION	5.7526087721303764E-8	TEST
// early exit...	WITHOUT_CLASSIFICATION	0.9999601496701397	WITHOUT_CLASSIFICATION	2.847696697287352E-5	DEFECT	5.173127154496734E-6	DESIGN	4.593348138235394E-6	IMPLEMENTATION	1.0029239934939105E-6	DOCUMENTATION	6.039636013679709E-7	TEST
// or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.9995073459825252	WITHOUT_CLASSIFICATION	3.5510169367773594E-4	DESIGN	1.2114077084326599E-4	DEFECT	8.495100537891184E-6	IMPLEMENTATION	7.145036762832627E-6	TEST	7.714156530591822E-7	DOCUMENTATION
//treat it just like a new collection	WITHOUT_CLASSIFICATION	0.9985730209226401	WITHOUT_CLASSIFICATION	0.0011615242772051477	DESIGN	1.5440871753733023E-4	IMPLEMENTATION	7.396140597071941E-5	DEFECT	3.2428854019495864E-5	TEST	4.655822627056575E-6	DOCUMENTATION
//do this work only at the very highest level of the load //don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.9913927731185969	WITHOUT_CLASSIFICATION	0.008510295516987546	DESIGN	6.662751541407973E-5	TEST	2.5576917830350524E-5	DEFECT	3.7498940141433277E-6	IMPLEMENTATION	9.7703715708782E-7	DOCUMENTATION
//note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.9999991466786826	WITHOUT_CLASSIFICATION	7.553843572709084E-7	IMPLEMENTATION	6.054228998449523E-8	DESIGN	1.781407476028332E-8	DEFECT	1.0795193421979483E-8	TEST	8.785401946238438E-9	DOCUMENTATION
//it might be an unwrapped collection reference! //try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.9991311975039977	WITHOUT_CLASSIFICATION	7.955686623959767E-4	DESIGN	5.985442802103793E-5	IMPLEMENTATION	9.47971200812305E-6	DEFECT	2.6286270985188983E-6	TEST	1.2710664786116486E-6	DOCUMENTATION
/*public boolean isNonExistant(EntityKey key) {	WITHOUT_CLASSIFICATION	0.9998342683354738	WITHOUT_CLASSIFICATION	9.554710349655833E-5	DESIGN	6.474497511319435E-5	DEFECT	2.503425574533749E-6	TEST	2.0709629458017043E-6	DOCUMENTATION	8.651973962518858E-7	IMPLEMENTATION
/*public boolean isNonExistant(EntityUniqueKey key) {	WITHOUT_CLASSIFICATION	0.9997751306047208	WITHOUT_CLASSIFICATION	1.243674689791048E-4	DESIGN	9.215510543601871E-5	DEFECT	3.497958765708629E-6	TEST	2.599563344766977E-6	DOCUMENTATION	2.249298753677968E-6	IMPLEMENTATION
// iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.9999769765354504	WITHOUT_CLASSIFICATION	1.4779770288180905E-5	DESIGN	6.353899335780906E-6	IMPLEMENTATION	9.979523970190104E-7	TEST	8.863946089174581E-7	DOCUMENTATION	5.447919910237617E-9	DEFECT
// does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.9999952299216698	WITHOUT_CLASSIFICATION	2.1995588141535408E-6	DOCUMENTATION	1.907696321634557E-6	TEST	5.588304195928322E-7	DESIGN	6.383097845871383E-8	IMPLEMENTATION	4.0161796285377126E-8	DEFECT
//check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.9995792300254506	WITHOUT_CLASSIFICATION	3.7037533247803517E-4	DESIGN	3.684719174452819E-5	IMPLEMENTATION	6.720388761541131E-6	DOCUMENTATION	4.011179960570708E-6	TEST	2.8158816047401143E-6	DEFECT
// otherwise, the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.9999964828623781	WITHOUT_CLASSIFICATION	3.398832893246872E-6	DEFECT	7.76427495035665E-8	IMPLEMENTATION	2.3724309422827542E-8	DESIGN	1.2252849289138361E-8	DOCUMENTATION	4.684820426951674E-9	TEST
// adds remove as a sort-of alias for delete...	WITHOUT_CLASSIFICATION	0.9999802480705691	WITHOUT_CLASSIFICATION	1.820680611716807E-5	DESIGN	1.2574076505964402E-6	IMPLEMENTATION	1.843184657075219E-7	DEFECT	9.469778240376358E-8	TEST	8.69941482930995E-9	DOCUMENTATION
//bad cast	WITHOUT_CLASSIFICATION	0.9999747572466356	WITHOUT_CLASSIFICATION	2.1333921426555895E-5	DESIGN	1.9673388786594E-6	IMPLEMENTATION	7.844368444416627E-7	DEFECT	7.555827734685331E-7	TEST	4.014734411748816E-7	DOCUMENTATION
//return lhsPersister.getSubclassPropertyColumnNames(property);	WITHOUT_CLASSIFICATION	0.9999541396957541	WITHOUT_CLASSIFICATION	4.5581606444620246E-5	DESIGN	1.9114154910954953E-7	DEFECT	5.724680262915655E-8	TEST	2.42388279974292E-8	DOCUMENTATION	6.070621528498719E-9	IMPLEMENTATION
//property-refs for associations defined on a //component are not supported, so no need to slice	WITHOUT_CLASSIFICATION	0.9988975753669377	WITHOUT_CLASSIFICATION	0.0010991309701581468	DESIGN	2.490643908561577E-6	TEST	5.970212882485458E-7	DOCUMENTATION	1.0823181947469757E-7	DEFECT	9.776588785601604E-8	IMPLEMENTATION
//if there is no property-ref, assume the join //is to the subclass table (ie. the table of the //subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.9999998828459585	WITHOUT_CLASSIFICATION	1.1209492529273683E-7	DESIGN	2.5530449212152566E-9	TEST	1.5177775301069535E-9	DEFECT	9.726030992448584E-10	DOCUMENTATION	1.569059360791641E-11	IMPLEMENTATION
//handle a property-ref	WITHOUT_CLASSIFICATION	0.9999818847953497	WITHOUT_CLASSIFICATION	1.592638838484207E-5	DESIGN	1.0665753115509026E-6	IMPLEMENTATION	8.827882896734255E-7	DEFECT	1.5355114575584926E-7	DOCUMENTATION	8.590151852410988E-8	TEST
/*NativeSQLQueryReturn*/	WITHOUT_CLASSIFICATION	0.9998132417356029	WITHOUT_CLASSIFICATION	1.0124859936454025E-4	DESIGN	5.340699125673983E-5	IMPLEMENTATION	2.8679683282819994E-5	DEFECT	2.458634375761246E-6	DOCUMENTATION	9.643561173397108E-7	TEST
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999800339370913	WITHOUT_CLASSIFICATION	1.6805782011270466E-5	DESIGN	1.4190229664715085E-6	IMPLEMENTATION	9.045685929437717E-7	DEFECT	6.223837872236132E-7	TEST	2.143055508614907E-7	DOCUMENTATION
// why is all others non final ?	WITHOUT_CLASSIFICATION	0.9998477250008493	WITHOUT_CLASSIFICATION	1.0742755782074496E-4	DESIGN	4.082376668593369E-5	IMPLEMENTATION	2.7523315614016545E-6	DEFECT	8.703687451536143E-7	TEST	4.00974337572712E-7	DOCUMENTATION
//this.forceCacheRefresh = forceCacheRefresh;	WITHOUT_CLASSIFICATION	0.9999904542554398	WITHOUT_CLASSIFICATION	7.084487914364751E-6	IMPLEMENTATION	9.761511139182613E-7	TEST	7.469599578513161E-7	DEFECT	5.054610826908223E-7	DESIGN	2.326844914252467E-7	DOCUMENTATION
// HELLA IMPORTANT OPTIMIZATION!!!	WITHOUT_CLASSIFICATION	0.9997006220145338	WITHOUT_CLASSIFICATION	2.312968220228837E-4	DESIGN	5.7537882359075956E-5	DEFECT	5.887142179846928E-6	IMPLEMENTATION	2.8801389461041272E-6	DOCUMENTATION	1.7759999582936319E-6	TEST
/*return that.type.equals(type) && 	WITHOUT_CLASSIFICATION	0.999811709002842	WITHOUT_CLASSIFICATION	1.1168796817958878E-4	DESIGN	6.984430988800575E-5	IMPLEMENTATION	5.7031367011772E-6	DEFECT	6.612295157541547E-7	TEST	3.9435287372101866E-7	DOCUMENTATION
//Must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.9999127832889928	WITHOUT_CLASSIFICATION	8.318496532914843E-5	DESIGN	1.958210361759825E-6	DEFECT	1.1741548186453475E-6	TEST	5.995015471412804E-7	DOCUMENTATION	2.998789505226741E-7	IMPLEMENTATION
//take a snapshot	WITHOUT_CLASSIFICATION	0.9999546004120747	WITHOUT_CLASSIFICATION	1.9894202486896492E-5	IMPLEMENTATION	1.0008385088343481E-5	DESIGN	9.997254739915979E-6	DEFECT	2.767682424622041E-6	DOCUMENTATION	2.7320631854156745E-6	TEST
// do a check	WITHOUT_CLASSIFICATION	0.9999183932582337	WITHOUT_CLASSIFICATION	6.428266318672059E-5	DESIGN	1.5691857351152765E-5	IMPLEMENTATION	8.870376989963044E-7	DOCUMENTATION	3.9237706071360895E-7	DEFECT	3.5280646868137765E-7	TEST
// the owning entity may have been deleted and its identifier unset due to // identifier-rollback; in which case, try to look up its identifier from // the persistence context	WITHOUT_CLASSIFICATION	0.9999996772288967	WITHOUT_CLASSIFICATION	1.6099930657864137E-7	IMPLEMENTATION	8.541122670943437E-8	DESIGN	6.717656550006165E-8	DEFECT	6.929608073794985E-9	DOCUMENTATION	2.254396474187847E-9	TEST
// do the work	WITHOUT_CLASSIFICATION	0.9993640054594736	WITHOUT_CLASSIFICATION	3.1563207083362986E-4	DESIGN	2.4430647058009894E-4	IMPLEMENTATION	4.275263466591413E-5	DEFECT	2.314423522484877E-5	DOCUMENTATION	1.0159129221976551E-5	TEST
// We've been here before	WITHOUT_CLASSIFICATION	0.9999252428800827	WITHOUT_CLASSIFICATION	4.969871336439979E-5	IMPLEMENTATION	1.0394372371260243E-5	DEFECT	7.839969564745732E-6	TEST	5.742805421059614E-6	DESIGN	1.081259195928932E-6	DOCUMENTATION
// it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.9999959030753749	WITHOUT_CLASSIFICATION	3.0939028419164903E-6	DESIGN	7.723474940755227E-7	TEST	1.264779763496916E-7	DEFECT	5.388107481937911E-8	DOCUMENTATION	5.031523785487816E-8	IMPLEMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9993640054594736	WITHOUT_CLASSIFICATION	3.1563207083362986E-4	DESIGN	2.4430647058009894E-4	IMPLEMENTATION	4.275263466591413E-5	DEFECT	2.314423522484877E-5	DOCUMENTATION	1.0159129221976551E-5	TEST
// if either its role changed,	WITHOUT_CLASSIFICATION	0.9999998053378658	WITHOUT_CLASSIFICATION	1.1484155497522921E-7	DESIGN	4.416319146709008E-8	TEST	2.8030044742744697E-8	IMPLEMENTATION	6.696932845117683E-9	DEFECT	9.304100746621119E-10	DOCUMENTATION
// or its key changed	WITHOUT_CLASSIFICATION	0.9999997122881827	WITHOUT_CLASSIFICATION	2.4467136867484303E-7	IMPLEMENTATION	1.871568729829655E-8	TEST	1.4327868897779934E-8	DEFECT	5.080585222499868E-9	DOCUMENTATION	4.916307219585941E-9	DESIGN
// we will need to create new entries	WITHOUT_CLASSIFICATION	0.9993268430094887	WITHOUT_CLASSIFICATION	5.974251819013478E-4	IMPLEMENTATION	5.763884405469373E-5	DESIGN	9.591472267724024E-6	DOCUMENTATION	6.816154848846314E-6	TEST	1.685337438579724E-6	DEFECT
// we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.9810505000675753	WITHOUT_CLASSIFICATION	0.01823869907335858	IMPLEMENTATION	4.679279154648554E-4	DESIGN	1.588638565780992E-4	DEFECT	6.022939504828207E-5	DOCUMENTATION	2.3779691974898362E-5	TEST
// force initialize!	WITHOUT_CLASSIFICATION	0.9999996615906592	WITHOUT_CLASSIFICATION	1.3465102399621163E-7	DESIGN	1.102070229594127E-7	IMPLEMENTATION	4.278310385331786E-8	DEFECT	3.0118855006417416E-8	DOCUMENTATION	2.0649334839589396E-8	TEST
// else if it's elements changed	WITHOUT_CLASSIFICATION	0.9999991697753068	WITHOUT_CLASSIFICATION	5.552834232194911E-7	IMPLEMENTATION	1.838211281548117E-7	DESIGN	4.6847767834003594E-8	DEFECT	3.882937167727039E-8	TEST	5.443002308410171E-9	DOCUMENTATION
//ATTRIBUTES MAINTAINED BETWEEN FLUSH CYCLES	WITHOUT_CLASSIFICATION	0.9994279849654469	WITHOUT_CLASSIFICATION	3.6709288057686784E-4	DESIGN	1.5913747695149545E-4	IMPLEMENTATION	2.7350567245013897E-5	DEFECT	1.0596500153019569E-5	DOCUMENTATION	7.837609626766016E-6	TEST
// session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.9999982975128701	WITHOUT_CLASSIFICATION	1.0225654573717968E-6	IMPLEMENTATION	4.085978609978262E-7	DEFECT	1.8473885071617878E-7	DESIGN	5.114527488218047E-8	TEST	3.54396859753228E-8	DOCUMENTATION
// allow the CollectionSnapshot to be serialized	WITHOUT_CLASSIFICATION	0.9997210662698502	WITHOUT_CLASSIFICATION	2.3171623952653834E-4	IMPLEMENTATION	3.981767869949495E-5	DESIGN	6.406243726588487E-6	DEFECT	7.536455749759654E-7	TEST	2.3992262215106566E-7	DOCUMENTATION
// ATTRIBUTES USED ONLY DURING FLUSH CYCLE	WITHOUT_CLASSIFICATION	0.9999590301711394	WITHOUT_CLASSIFICATION	2.3700190829041235E-5	IMPLEMENTATION	1.1539338873298294E-5	DESIGN	4.0429142989771125E-6	DEFECT	1.0338228621594123E-6	DOCUMENTATION	6.535619968876798E-7	TEST
// "current" means the reference that was found during flush() 	WITHOUT_CLASSIFICATION	0.9999987690459818	WITHOUT_CLASSIFICATION	5.875567356333204E-7	DEFECT	5.410195203080118E-7	DESIGN	5.545831595066304E-8	DOCUMENTATION	3.885426442276421E-8	IMPLEMENTATION	8.065181707597144E-9	TEST
// "loaded" means the reference that is consistent  // with the current database state	WITHOUT_CLASSIFICATION	0.9999519203594796	WITHOUT_CLASSIFICATION	3.1446274723767596E-5	IMPLEMENTATION	1.4069890325053002E-5	DEFECT	1.600375448313278E-6	DESIGN	7.622093474293935E-7	TEST	2.0089067585101478E-7	DOCUMENTATION
// during flush, we navigate the object graph to // collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.9992093514139997	WITHOUT_CLASSIFICATION	7.703720429649421E-4	DESIGN	1.7986394470788167E-5	IMPLEMENTATION	1.1219921308203676E-6	TEST	9.396757640562671E-7	DOCUMENTATION	2.2848066966999142E-7	DEFECT
// if we instantiate a collection during the flush() process, // we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.9999939135549528	WITHOUT_CLASSIFICATION	5.799935835992022E-6	DESIGN	2.1914439484297295E-7	TEST	6.40527479282573E-8	DEFECT	2.2708764940812196E-9	DOCUMENTATION	1.0411918598901188E-9	IMPLEMENTATION
// new collections that get found + wrapped // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9997395944219772	WITHOUT_CLASSIFICATION	2.558520340368076E-4	DESIGN	4.465502787899054E-6	IMPLEMENTATION	4.214465057389525E-8	TEST	4.18379906035828E-8	DEFECT	4.0585568614945195E-9	DOCUMENTATION
//a newly wrapped collection is NOT dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.9999526181064762	WITHOUT_CLASSIFICATION	3.922820633280724E-5	DESIGN	4.799145759131152E-6	DEFECT	2.8764948171171604E-6	IMPLEMENTATION	3.5483935416026213E-7	TEST	1.2320726065973992E-7	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9908106098929995	WITHOUT_CLASSIFICATION	0.006597876160284446	IMPLEMENTATION	0.0018661636467024335	DESIGN	4.276146675572367E-4	DEFECT	2.0155457193617632E-4	DOCUMENTATION	9.618106052020955E-5	TEST
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9908106098929995	WITHOUT_CLASSIFICATION	0.006597876160284446	IMPLEMENTATION	0.0018661636467024335	DESIGN	4.276146675572367E-4	DEFECT	2.0155457193617632E-4	DOCUMENTATION	9.618106052020955E-5	TEST
// detached collections that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.999992147513661	WITHOUT_CLASSIFICATION	6.028586061059072E-6	DESIGN	1.5612175078987643E-6	IMPLEMENTATION	2.481852162795991E-7	DEFECT	1.3404012633630614E-8	TEST	1.093541277368872E-9	DOCUMENTATION
//optimization	WITHOUT_CLASSIFICATION	0.9996850034379787	WITHOUT_CLASSIFICATION	2.4381048979094672E-4	DEFECT	3.0063797798722023E-5	DESIGN	1.9174753945624146E-5	DOCUMENTATION	1.7472726895677644E-5	IMPLEMENTATION	4.474793590336452E-6	TEST
//optimization //optimization	WITHOUT_CLASSIFICATION	0.9999860357190262	WITHOUT_CLASSIFICATION	1.256979015482985E-5	DEFECT	7.272223043915024E-7	DOCUMENTATION	3.611540510202788E-7	IMPLEMENTATION	2.0172068782121526E-7	TEST	1.043937756089499E-7	DESIGN
//re-snapshot	WITHOUT_CLASSIFICATION	0.9997011877967651	WITHOUT_CLASSIFICATION	2.3833730772514306E-4	DESIGN	3.9086152040056534E-5	IMPLEMENTATION	1.0248984004483155E-5	DEFECT	6.02975850645198E-6	DOCUMENTATION	5.110000958922735E-6	TEST
// for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.9999989831766675	WITHOUT_CLASSIFICATION	5.744522049661805E-7	DESIGN	2.3350601587457287E-7	IMPLEMENTATION	1.7548288594146226E-7	DOCUMENTATION	2.0791116582216085E-8	DEFECT	1.2591109265081697E-8	TEST
//NOTE: this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.87737625255062	WITHOUT_CLASSIFICATION	0.1191050302588899	DEFECT	0.0034058657294748825	DESIGN	9.485875351488913E-5	TEST	1.4873512670178546E-5	DOCUMENTATION	3.119194830069157E-6	IMPLEMENTATION
//memory optimization	WITHOUT_CLASSIFICATION	0.9999762872091599	WITHOUT_CLASSIFICATION	1.623515271900843E-5	DEFECT	4.774721942813115E-6	IMPLEMENTATION	1.7054676299201347E-6	DOCUMENTATION	6.85230795461868E-7	DESIGN	3.1221775295721353E-7	TEST
// use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999939171230202	WITHOUT_CLASSIFICATION	5.962396033168311E-6	DESIGN	9.280006554517781E-8	DEFECT	2.329923861222566E-8	DOCUMENTATION	3.690205837272747E-9	IMPLEMENTATION	6.914366438927998E-10	TEST
// copied from Session:	WITHOUT_CLASSIFICATION	0.9999943089317718	WITHOUT_CLASSIFICATION	4.781361580147163E-6	DESIGN	5.742302996380613E-7	DEFECT	1.916923822084165E-7	IMPLEMENTATION	9.560121292961617E-8	TEST	4.8182753265444826E-8	DOCUMENTATION
// this should not happen since the DTD prevents it	WITHOUT_CLASSIFICATION	0.9999737913569886	WITHOUT_CLASSIFICATION	1.279670021420368E-5	DEFECT	8.483471776732355E-6	DESIGN	2.635383112327685E-6	IMPLEMENTATION	1.8909751970210125E-6	TEST	4.021127110861232E-7	DOCUMENTATION
// JoinProcessor needs to know if the where clause fragment came from a dynamic filter or not so it // can put the where clause fragment in the right place in the SQL AST.   'hasFilterCondition' keeps track // of that fact.	WITHOUT_CLASSIFICATION	0.9940578585169626	WITHOUT_CLASSIFICATION	0.005941995810510212	DESIGN	5.703086367688765E-8	DOCUMENTATION	4.950527579694947E-8	DEFECT	3.908290067275918E-8	TEST	5.34872784812537E-11	IMPLEMENTATION
// the current join represents the join between a many-to-many association table // and its "target" table.  Here we need to apply any additional filters // defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.9998324615951646	WITHOUT_CLASSIFICATION	1.63527401392046E-4	DESIGN	2.557309711715613E-6	DOCUMENTATION	1.4129841976894251E-6	IMPLEMENTATION	3.4796952084579345E-8	TEST	5.912581820991656E-9	DEFECT
//check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.9997995378870054	WITHOUT_CLASSIFICATION	1.9930855768131704E-4	DESIGN	5.692611795743059E-7	IMPLEMENTATION	4.744384376770306E-7	DOCUMENTATION	6.928280021483642E-8	DEFECT	4.05728957608338E-8	TEST
//values is not null and is checkable, we'll look deeper	WITHOUT_CLASSIFICATION	0.9998907583018938	WITHOUT_CLASSIFICATION	6.946874776394254E-5	DESIGN	3.2778106248105187E-5	IMPLEMENTATION	6.566211427728391E-6	DEFECT	2.905981388291585E-7	TEST	1.380345276864948E-7	DOCUMENTATION
//for non null args, check for components and elements containing components	WITHOUT_CLASSIFICATION	0.9999987962559054	WITHOUT_CLASSIFICATION	1.0429946100998245E-6	DESIGN	1.510380258057157E-7	IMPLEMENTATION	5.2117237153906046E-9	DOCUMENTATION	3.608711606211411E-9	DEFECT	8.910232889542407E-10	TEST
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9996086425693265	WITHOUT_CLASSIFICATION	3.416306978319675E-4	DESIGN	4.2955631500221904E-5	IMPLEMENTATION	4.0069763021096575E-6	TEST	2.470601859001692E-6	DOCUMENTATION	2.9352318030755686E-7	DEFECT
//persistent collections may have components	WITHOUT_CLASSIFICATION	0.9998455689404299	WITHOUT_CLASSIFICATION	1.2792579538692E-4	DESIGN	2.479655503865731E-5	IMPLEMENTATION	1.3602269470612042E-6	TEST	1.933283390718655E-7	DEFECT	1.551538582152785E-7	DOCUMENTATION
//check for all components values in the collection	WITHOUT_CLASSIFICATION	0.999989653531737	WITHOUT_CLASSIFICATION	9.974881374263357E-6	DESIGN	1.7769074234890085E-7	IMPLEMENTATION	1.4137774134938997E-7	DEFECT	3.5580980243196076E-8	DOCUMENTATION	1.6937424737367927E-8	TEST
/* will check current level if some of them are not null	WITHOUT_CLASSIFICATION	0.9995863709616138	WITHOUT_CLASSIFICATION	1.631928388899255E-4	IMPLEMENTATION	1.5696720633404695E-4	DESIGN	7.060307676754226E-5	DOCUMENTATION	1.8219979646945548E-5	DEFECT	4.645936747530748E-6	TEST
//do the test	WITHOUT_CLASSIFICATION	0.9995335337410699	WITHOUT_CLASSIFICATION	4.3564990137847265E-4	TEST	2.0730244320232153E-5	IMPLEMENTATION	6.83140128152524E-6	DOCUMENTATION	2.9950699742493776E-6	DESIGN	2.5964197552115833E-7	DEFECT
// if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.9999999636467682	WITHOUT_CLASSIFICATION	2.7087962735979684E-8	DESIGN	3.863076681980843E-9	IMPLEMENTATION	2.7057671966545596E-9	TEST	2.3496299966839767E-9	DEFECT	3.4679517421083453E-10	DOCUMENTATION
//unwrap it	WITHOUT_CLASSIFICATION	0.9999806429858444	WITHOUT_CLASSIFICATION	8.247140964201025E-6	DEFECT	4.6119361998272145E-6	DESIGN	4.354951818242501E-6	IMPLEMENTATION	1.2356332596449122E-6	TEST	9.073519136880142E-7	DOCUMENTATION
// See if the entity is already bound to this session, if not look at the // entity identifier and assume that the entity is persistent if the // id is not "unsaved" (that is, we rely on foreign keys to keep // database integrity)	WITHOUT_CLASSIFICATION	0.9999998016833999	WITHOUT_CLASSIFICATION	1.7161493502815783E-7	DEFECT	2.225568871706538E-8	DESIGN	2.026596172371333E-9	DOCUMENTATION	1.627803465630097E-9	TEST	7.915767367809005E-10	IMPLEMENTATION
// an unfetched association can only point to // an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.9999994887369987	WITHOUT_CLASSIFICATION	2.718030212145547E-7	IMPLEMENTATION	1.085475563281203E-7	TEST	6.627829880766944E-8	DEFECT	3.269434802017688E-8	DESIGN	3.193977690459064E-8	DOCUMENTATION
// let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999932939989896	WITHOUT_CLASSIFICATION	4.332487382525861E-6	IMPLEMENTATION	2.175636365240726E-6	DESIGN	1.4113769290017336E-7	DOCUMENTATION	2.886547443190998E-8	DEFECT	2.7874095241793518E-8	TEST
// let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999168993268209	WITHOUT_CLASSIFICATION	4.705882288430112E-5	IMPLEMENTATION	3.541049827296509E-5	DESIGN	4.504329003720294E-7	DOCUMENTATION	1.0018560952440207E-7	TEST	8.073351191642411E-8	DEFECT
// we use the assumed value, if there is one, to avoid hitting // the database	WITHOUT_CLASSIFICATION	0.9999997216618572	WITHOUT_CLASSIFICATION	2.102269054932611E-7	DEFECT	3.5169378062334184E-8	TEST	3.187412901015978E-8	DESIGN	5.919668282232308E-10	IMPLEMENTATION	4.757633140668934E-10	DOCUMENTATION
// hit the database, after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.9996722949652449	WITHOUT_CLASSIFICATION	2.732224551786144E-4	DESIGN	4.4019902078986575E-5	IMPLEMENTATION	9.836715587106918E-6	DEFECT	5.511194199359739E-7	TEST	7.48424905078366E-8	DOCUMENTATION
// context-entity-identifier returns null explicitly if the entity // is not associated with the persistence context; so make some // deeper checks...	WITHOUT_CLASSIFICATION	0.9999918375385084	WITHOUT_CLASSIFICATION	5.489236846052825E-6	IMPLEMENTATION	2.071503280578909E-6	TEST	3.8257917374486933E-7	DESIGN	2.1002804946451213E-7	DOCUMENTATION	9.114141783424949E-9	DEFECT
//int count = 0;	WITHOUT_CLASSIFICATION	0.999965126374447	WITHOUT_CLASSIFICATION	2.2803511740075915E-5	DEFECT	7.188775862727909E-6	DESIGN	2.42227445115208E-6	DOCUMENTATION	1.4622675717294383E-6	TEST	9.96795927329979E-7	IMPLEMENTATION
//the first key found after the given key	WITHOUT_CLASSIFICATION	0.9999811417420043	WITHOUT_CLASSIFICATION	1.5378101761484412E-5	IMPLEMENTATION	1.5930948058515442E-6	DESIGN	8.971026063356771E-7	TEST	8.826161178912698E-7	DOCUMENTATION	1.073427041893535E-7	DEFECT
//checkForEnd = false;	WITHOUT_CLASSIFICATION	0.9999924458876065	WITHOUT_CLASSIFICATION	5.969799470497984E-6	IMPLEMENTATION	6.713136220976105E-7	DESIGN	5.238139952034427E-7	DEFECT	2.6732995201788064E-7	DOCUMENTATION	1.218553538853584E-7	TEST
//count++;	WITHOUT_CLASSIFICATION	0.9989879719451094	WITHOUT_CLASSIFICATION	6.230417151512873E-4	DESIGN	3.555092707640218E-4	DEFECT	1.9462397610656464E-5	DOCUMENTATION	7.322051506842805E-6	IMPLEMENTATION	6.692619857720712E-6	TEST
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9998709063120139	WITHOUT_CLASSIFICATION	9.086017060679194E-5	DESIGN	1.5009975900149501E-5	IMPLEMENTATION	1.4803935852533482E-5	TEST	4.4744443264046005E-6	DEFECT	3.94516130027013E-6	DOCUMENTATION
//we ran out of keys to try	WITHOUT_CLASSIFICATION	0.9999751656458675	WITHOUT_CLASSIFICATION	1.0409598250111327E-5	DESIGN	5.695796011011546E-6	DEFECT	4.3025212713026835E-6	IMPLEMENTATION	2.2465633083573083E-6	DOCUMENTATION	2.1798752917503407E-6	TEST
//first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.9999991527585573	WITHOUT_CLASSIFICATION	2.9657143264157803E-7	IMPLEMENTATION	2.2623676132365044E-7	DEFECT	1.9142295429089546E-7	DESIGN	7.628833369653477E-8	TEST	5.672196068102222E-8	DOCUMENTATION
//the first id found after the given id	WITHOUT_CLASSIFICATION	0.9999105360345074	WITHOUT_CLASSIFICATION	6.748317784519604E-5	IMPLEMENTATION	1.2125508747938888E-5	DESIGN	7.011029697581094E-6	TEST	2.2796205946089457E-6	DOCUMENTATION	5.646286074184888E-7	DEFECT
//we ran out of ids to try	WITHOUT_CLASSIFICATION	0.9998991508878053	WITHOUT_CLASSIFICATION	4.863152856925129E-5	DESIGN	2.7468688862194946E-5	IMPLEMENTATION	1.7637595293973377E-5	DEFECT	3.9640245779535196E-6	TEST	3.1472748911963804E-6	DOCUMENTATION
// look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.9999998171019413	WITHOUT_CLASSIFICATION	8.074183537128758E-8	IMPLEMENTATION	4.433845671387972E-8	DESIGN	4.2866338550207526E-8	TEST	1.1219027526947786E-8	DEFECT	3.732400696944759E-9	DOCUMENTATION
// ignore this row of results! Note the early exit	WITHOUT_CLASSIFICATION	0.9990468483520826	WITHOUT_CLASSIFICATION	9.491353628489295E-4	DEFECT	2.932016646414431E-6	DESIGN	5.066396187543051E-7	TEST	3.008875732011188E-7	DOCUMENTATION	2.767412302141661E-7	IMPLEMENTATION
// initialize this collection	WITHOUT_CLASSIFICATION	0.9999846874126426	WITHOUT_CLASSIFICATION	1.2747885661787053E-5	DESIGN	2.1611066497223465E-6	TEST	1.9463427824191832E-7	DOCUMENTATION	1.7653253095441203E-7	IMPLEMENTATION	3.242823658190702E-8	DEFECT
// create one	WITHOUT_CLASSIFICATION	0.9999972189531703	WITHOUT_CLASSIFICATION	1.985033251053994E-6	DESIGN	3.4348776215818726E-7	IMPLEMENTATION	2.5643681798018534E-7	DEFECT	1.340093826976417E-7	TEST	6.207961584231621E-8	DOCUMENTATION
// warning: can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.9999832690603535	WITHOUT_CLASSIFICATION	1.55544546032249E-5	DEFECT	9.953491979900497E-7	DESIGN	1.010371825304647E-7	DOCUMENTATION	7.458876396347667E-8	IMPLEMENTATION	5.509898790931966E-9	TEST
// there were no queued additions // and the role has a cache	WITHOUT_CLASSIFICATION	0.9998250874120266	WITHOUT_CLASSIFICATION	1.745402977575714E-4	DESIGN	2.1463543061540023E-7	IMPLEMENTATION	9.839917836189893E-8	DEFECT	3.974618550803188E-8	TEST	1.9509421330588927E-8	DOCUMENTATION
// and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.9999895600027202	WITHOUT_CLASSIFICATION	9.889058130728602E-6	DESIGN	4.3935650327833503E-7	DEFECT	9.03488226930596E-8	TEST	1.2890675863912989E-8	IMPLEMENTATION	8.343147205522426E-9	DOCUMENTATION
// some filters affecting the collection are enabled on the session, so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.9999655932419642	WITHOUT_CLASSIFICATION	3.42054889308951E-5	DESIGN	1.4733331633023588E-7	TEST	2.601393994776041E-8	IMPLEMENTATION	2.1411526043835677E-8	DEFECT	6.510322607073055E-9	DOCUMENTATION
// cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999867760731338	WITHOUT_CLASSIFICATION	6.470064095071581E-6	DESIGN	3.6621349972960506E-6	IMPLEMENTATION	2.0330530669705937E-6	DEFECT	5.744552389509221E-7	DOCUMENTATION	4.842194679852143E-7	TEST
// loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999955755801185	WITHOUT_CLASSIFICATION	3.6082230319735075E-6	DEFECT	5.251365822428807E-7	DESIGN	1.936673248147597E-7	IMPLEMENTATION	8.76397244090353E-8	TEST	9.753217986932387E-9	DOCUMENTATION
// Collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999949815868282	WITHOUT_CLASSIFICATION	2.7223039695645687E-6	DEFECT	1.379706414722436E-6	DESIGN	5.606856579055899E-7	IMPLEMENTATION	2.2971737870179312E-7	TEST	1.2599975084932926E-7	DOCUMENTATION
// simple cache of param metadata based on query string.  Ideally, the // original "user-supplied query" string should be used to retreive this // metadata (i.e., not the para-list-expanded query string) to avoid // unnecessary cache entries. // Used solely for caching param metadata for native-sql queries, see // getSQLParameterMetadata() for a discussion as to why...	WITHOUT_CLASSIFICATION	0.8007748747752903	DESIGN	0.1983170621169414	WITHOUT_CLASSIFICATION	9.073020229455647E-4	DEFECT	6.321668087678675E-7	IMPLEMENTATION	1.1008703106757443E-7	TEST	1.8830982934262444E-8	DOCUMENTATION
// the cache of the actual plans...	WITHOUT_CLASSIFICATION	0.9999984371240358	WITHOUT_CLASSIFICATION	1.233182964854111E-6	IMPLEMENTATION	2.616998502059161E-7	DESIGN	4.101105095524466E-8	DOCUMENTATION	1.8718040925979146E-8	DEFECT	8.264057263152294E-9	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9954271247081595	WITHOUT_CLASSIFICATION	0.004322989338518281	DESIGN	1.7356294724047073E-4	IMPLEMENTATION	4.7901055112023405E-5	DEFECT	1.831782340941365E-5	DOCUMENTATION	1.0104127560420165E-5	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9954271247081595	WITHOUT_CLASSIFICATION	0.004322989338518281	DESIGN	1.7356294724047073E-4	IMPLEMENTATION	4.7901055112023405E-5	DEFECT	1.831782340941365E-5	DOCUMENTATION	1.0104127560420165E-5	TEST
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999948761883142	WITHOUT_CLASSIFICATION	4.554548351422181E-6	DESIGN	1.6623326260435444E-7	DOCUMENTATION	1.626180808939646E-7	IMPLEMENTATION	1.6146825353399426E-7	TEST	7.8943737436917E-8	DEFECT
// for native-sql queries, the param metadata is determined outside // any relation to a query plan, because query plan creation and/or // retreival for a native-sql query depends on all of the return // types having been set, which might not be the case up-front when // param metadata would be most useful	WITHOUT_CLASSIFICATION	0.8570038770851531	WITHOUT_CLASSIFICATION	0.13063769197387495	DESIGN	0.012355872394207637	DEFECT	2.2623452382691078E-6	IMPLEMENTATION	2.0833097198169405E-7	TEST	8.787055397465797E-8	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9999170699355318	WITHOUT_CLASSIFICATION	6.928445557067146E-5	DESIGN	1.065515434690156E-5	DEFECT	2.3755724453491047E-6	IMPLEMENTATION	3.7615997922746353E-7	TEST	2.387221261589399E-7	DOCUMENTATION
// Recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998721312300902	WITHOUT_CLASSIFICATION	6.426795285181305E-5	DESIGN	3.2672215037729446E-5	DEFECT	2.3553401234002884E-5	IMPLEMENTATION	3.838513402825117E-6	DOCUMENTATION	3.5366873834152406E-6	TEST
// don't care...	WITHOUT_CLASSIFICATION	0.9999170699355318	WITHOUT_CLASSIFICATION	6.928445557067146E-5	DESIGN	1.065515434690156E-5	DEFECT	2.3755724453491047E-6	IMPLEMENTATION	3.7615997922746353E-7	TEST	2.387221261589399E-7	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9998476891483156	WITHOUT_CLASSIFICATION	6.929758618481497E-5	DEFECT	6.305822301167219E-5	IMPLEMENTATION	1.293937508709513E-5	DESIGN	6.873938926520603E-6	TEST	1.4172847417151092E-7	DOCUMENTATION
// break the outer loop !!!	WITHOUT_CLASSIFICATION	0.9999991378262101	WITHOUT_CLASSIFICATION	5.853554801762165E-7	DEFECT	1.9661138713444789E-7	IMPLEMENTATION	3.262779456932771E-8	DESIGN	2.883194063249977E-8	TEST	1.8747187446852826E-8	DOCUMENTATION
// named parameter	WITHOUT_CLASSIFICATION	0.9993200558803509	WITHOUT_CLASSIFICATION	6.66114831150886E-4	DESIGN	1.021776267213018E-5	IMPLEMENTATION	1.636331197419129E-6	TEST	1.4222722156560122E-6	DEFECT	5.529224129003719E-7	DOCUMENTATION
// could be either an ordinal or JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9996059800886186	WITHOUT_CLASSIFICATION	3.897215499784971E-4	DESIGN	3.4290434470703807E-6	DEFECT	4.1247864539811126E-7	IMPLEMENTATION	3.29401211064128E-7	TEST	1.274380994477705E-7	DOCUMENTATION
// a peek ahead showed this as an JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999820976652113	WITHOUT_CLASSIFICATION	1.6959771052812583E-5	DESIGN	5.071014168247046E-7	TEST	1.661687238342259E-7	DOCUMENTATION	1.3702316435086993E-7	IMPLEMENTATION	1.3227043083638056E-7	DEFECT
// make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.9999841755933996	WITHOUT_CLASSIFICATION	1.2984109798994539E-5	DESIGN	2.0143946664765688E-6	TEST	7.456485718560027E-7	DEFECT	7.710808378250902E-8	DOCUMENTATION	3.145479250790459E-9	IMPLEMENTATION
// pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9999974536396841	WITHOUT_CLASSIFICATION	2.517527643377508E-6	DESIGN	1.8767294519518354E-8	IMPLEMENTATION	5.397898613128751E-9	TEST	3.0265867741679367E-9	DOCUMENTATION	1.6408924941726024E-9	DEFECT
// perform the actual work	WITHOUT_CLASSIFICATION	0.9999964821419328	WITHOUT_CLASSIFICATION	1.6432792149045425E-6	IMPLEMENTATION	8.915827865320024E-7	DESIGN	7.143422780010679E-7	DEFECT	2.2858569485004702E-7	DOCUMENTATION	4.006809281848315E-8	TEST
// if everything went ok, commit the transaction and close the obtained // connection handle...	WITHOUT_CLASSIFICATION	0.9999997492599576	WITHOUT_CLASSIFICATION	2.2747494812666109E-7	IMPLEMENTATION	1.0948308819850789E-8	DESIGN	1.0757305700879996E-8	TEST	1.4208172910306565E-9	DOCUMENTATION	1.3866247907317468E-10	DEFECT
// at some point the processing went bad, so we need to: //      1) make sure the connection handle gets released //      2) try to cleanup the JTA context as much as possible	WITHOUT_CLASSIFICATION	0.9992680787993384	WITHOUT_CLASSIFICATION	5.682097837572666E-4	IMPLEMENTATION	1.0972851447222879E-4	DOCUMENTATION	3.504950158568214E-5	TEST	1.3139931653962232E-5	DESIGN	5.793469192307362E-6	DEFECT
// finally handle the exception	WITHOUT_CLASSIFICATION	0.9999930887226889	WITHOUT_CLASSIFICATION	4.752903135841109E-6	DESIGN	1.883773435272758E-6	DEFECT	1.3123151739410965E-7	DOCUMENTATION	1.259699363198068E-7	IMPLEMENTATION	1.739928626113255E-8	TEST
// a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.9995402378860966	WITHOUT_CLASSIFICATION	4.593034647710801E-4	DESIGN	2.438394799464662E-7	DEFECT	1.3255736310993776E-7	IMPLEMENTATION	5.776001088160522E-8	TEST	2.449227843508978E-8	DOCUMENTATION
//saveOrUpdateCopy() is deprecated!	WITHOUT_CLASSIFICATION	0.9999746461538267	WITHOUT_CLASSIFICATION	1.2750390192089612E-5	DESIGN	1.1766642944626088E-5	DEFECT	3.16404392320809E-7	DOCUMENTATION	2.989272124696492E-7	TEST	2.2148143178946454E-7	IMPLEMENTATION
// collectionPersister should not be null, but we don't want to throw // an exception if it is null	WITHOUT_CLASSIFICATION	0.9996895107300234	WITHOUT_CLASSIFICATION	2.750915698681188E-4	DESIGN	2.671061979487174E-5	DEFECT	8.680576661408898E-6	TEST	4.526616086853848E-9	DOCUMENTATION	1.9770359948299595E-9	IMPLEMENTATION
// otherwise a null or brand new collection // this will also (inefficiently) handle arrays, which // have no snapshot, so we can't do any better //processArrayOrNewCollection(collection, type);	WITHOUT_CLASSIFICATION	0.86492323606718	DESIGN	0.13507480304862557	WITHOUT_CLASSIFICATION	1.6787563844451945E-6	DOCUMENTATION	1.6193095442466027E-7	TEST	1.0854126136484852E-7	IMPLEMENTATION	1.1655594163645245E-8	DEFECT
// a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.9998417847840295	WITHOUT_CLASSIFICATION	1.5732722518727456E-4	DESIGN	5.344403247152229E-7	DEFECT	2.6247790769376587E-7	IMPLEMENTATION	7.883034502401797E-8	DOCUMENTATION	1.2242205735201942E-8	TEST
//do nothing	WITHOUT_CLASSIFICATION	0.999996800664025	WITHOUT_CLASSIFICATION	1.0068024846380766E-6	DEFECT	9.072794162471088E-7	DESIGN	5.761946391645835E-7	DOCUMENTATION	4.4068206705787276E-7	TEST	2.6837736788107007E-7	IMPLEMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.999996800664025	WITHOUT_CLASSIFICATION	1.0068024846380766E-6	DEFECT	9.072794162471088E-7	DESIGN	5.761946391645835E-7	DOCUMENTATION	4.4068206705787276E-7	TEST	2.6837736788107007E-7	IMPLEMENTATION
//Force a substitution!	WITHOUT_CLASSIFICATION	0.9999588932755094	WITHOUT_CLASSIFICATION	3.207909303662447E-5	DESIGN	3.2812047410250414E-6	DEFECT	3.0555643436296305E-6	IMPLEMENTATION	2.221165740563926E-6	DOCUMENTATION	4.696966288284357E-7	TEST
// The user requested a "greater" (i.e. more restrictive) form of // pessimistic lock	WITHOUT_CLASSIFICATION	0.9999318262677984	WITHOUT_CLASSIFICATION	6.303150659070568E-5	DEFECT	4.4433108622519865E-6	DESIGN	4.52473812549824E-7	IMPLEMENTATION	2.225942143867915E-7	TEST	2.3846721730103118E-8	DOCUMENTATION
// the database now holds a lock + the object is flushed from the cache, // so release the soft lock	WITHOUT_CLASSIFICATION	0.9999965222211824	WITHOUT_CLASSIFICATION	3.0888952533180903E-6	DEFECT	3.589603242118043E-7	IMPLEMENTATION	1.491645166249925E-8	DESIGN	1.1027566798727664E-8	TEST	3.979221744178437E-9	DOCUMENTATION
// now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.9999852016124989	WITHOUT_CLASSIFICATION	9.864162345992587E-6	DESIGN	4.773538657526934E-6	IMPLEMENTATION	6.998064127099463E-8	DEFECT	5.801369065907549E-8	TEST	3.26921655670738E-8	DOCUMENTATION
// Search for collections by reachability, updating their role. // We don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.9990819947412479	WITHOUT_CLASSIFICATION	8.040968690866279E-4	DESIGN	1.130767138684258E-4	DEFECT	8.143173417504898E-7	TEST	1.1310717751866536E-8	DOCUMENTATION	6.047737418797062E-9	IMPLEMENTATION
// this is a situation where the entity id is assigned by a post-insert generator // and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.9999983647139769	WITHOUT_CLASSIFICATION	7.508497363242989E-7	DEFECT	6.750826537454955E-7	DESIGN	1.5666340838156362E-7	TEST	4.912356735067037E-8	IMPLEMENTATION	3.56665734892265E-9	DOCUMENTATION
// NOTE: we need to do the wrap here even if its not "dirty", // because collections need wrapping but changes to _them_ // don't dirty the container. Also, for versioned data, we // need to wrap before calling searchForDirtyCollections	WITHOUT_CLASSIFICATION	0.9004169714572479	WITHOUT_CLASSIFICATION	0.0994801473227647	IMPLEMENTATION	9.746427845812283E-5	DESIGN	3.0223577731964554E-6	TEST	2.2258583257257332E-6	DEFECT	1.687254303068512E-7	DOCUMENTATION
//grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.9999640406893161	WITHOUT_CLASSIFICATION	2.332272161449303E-5	DESIGN	5.8326510716016E-6	DEFECT	4.754737686997742E-6	IMPLEMENTATION	1.5834639208944606E-6	TEST	4.6573638988885606E-7	DOCUMENTATION
// grab its current state	WITHOUT_CLASSIFICATION	0.9999997238078817	WITHOUT_CLASSIFICATION	1.3396447449223344E-7	IMPLEMENTATION	5.2815045777356677E-8	DEFECT	4.676183267932222E-8	TEST	2.5240275944353828E-8	DESIGN	1.741048919466485E-8	DOCUMENTATION
// schedule the update // note that we intentionally do _not_ pass in currentPersistentState!	WITHOUT_CLASSIFICATION	0.9999910318115213	WITHOUT_CLASSIFICATION	8.226069096685424E-6	IMPLEMENTATION	4.882562710138089E-7	DEFECT	1.741704142956236E-7	DESIGN	7.179282321829047E-8	DOCUMENTATION	7.89987356331662E-9	TEST
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999978940466885	WITHOUT_CLASSIFICATION	1.851573713258321E-6	DESIGN	1.9732966828669868E-7	DEFECT	3.1983960438662744E-8	DOCUMENTATION	2.2354868521827437E-8	TEST	2.7111009131960083E-9	IMPLEMENTATION
// give the Interceptor a chance to process property values, if the properties // were modified by the Interceptor, we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9999976515608832	WITHOUT_CLASSIFICATION	2.2991909138250934E-6	DESIGN	2.9499610191888714E-8	DOCUMENTATION	1.761962779868699E-8	DEFECT	1.102456773496872E-9	IMPLEMENTATION	1.0265083694881716E-9	TEST
// compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.9999985754815827	WITHOUT_CLASSIFICATION	6.458639520329927E-7	IMPLEMENTATION	5.905300406717824E-7	DESIGN	1.7672951302710964E-7	DEFECT	6.244804871359463E-9	DOCUMENTATION	5.150106625252482E-9	TEST
// if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.9999858099259614	WITHOUT_CLASSIFICATION	7.744290268090347E-6	DESIGN	5.30553488979748E-6	DEFECT	9.790514536332895E-7	TEST	1.487132219804872E-7	IMPLEMENTATION	1.24842050992999E-8	DOCUMENTATION
// increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.9999523840232261	WITHOUT_CLASSIFICATION	2.2758535965120146E-5	DESIGN	1.54236844805213E-5	IMPLEMENTATION	4.731503866013199E-6	DEFECT	3.6861757728255164E-6	DOCUMENTATION	1.016076689356259E-6	TEST
// check nullability but do not perform command execute // we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.9999998945728963	WITHOUT_CLASSIFICATION	9.300688819680673E-8	DESIGN	9.701725000661546E-9	DEFECT	1.273630324902518E-9	TEST	9.408495075696021E-10	DOCUMENTATION	5.040107952799988E-10	IMPLEMENTATION
//give the Interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.9999991619572766	WITHOUT_CLASSIFICATION	7.760350384603103E-7	DESIGN	3.6654253791451614E-8	IMPLEMENTATION	1.5464516779632776E-8	DOCUMENTATION	8.80307675381669E-9	DEFECT	1.0858377559348401E-9	TEST
//now we might need to recalculate the dirtyProperties array	WITHOUT_CLASSIFICATION	0.9754613616013533	WITHOUT_CLASSIFICATION	0.014283900674155	DESIGN	0.010136548506505734	IMPLEMENTATION	7.19839408970324E-5	DOCUMENTATION	3.24459922890239E-5	TEST	1.3759284799861501E-5	DEFECT
//use the current version	WITHOUT_CLASSIFICATION	0.9999907686216367	WITHOUT_CLASSIFICATION	4.295649411841981E-6	DESIGN	3.5477326196778595E-6	IMPLEMENTATION	1.1575424279577058E-6	DOCUMENTATION	1.735283940744602E-7	DEFECT	5.692550992557126E-8	TEST
// Interceptor returned null, so do the dirtycheck ourself, if possible	WITHOUT_CLASSIFICATION	0.999998718764877	WITHOUT_CLASSIFICATION	8.953736899828447E-7	IMPLEMENTATION	3.819930583283811E-7	DESIGN	2.044980535175735E-9	DOCUMENTATION	1.2430639602749121E-9	DEFECT	5.803301672628168E-10	TEST
// object loaded by update()	WITHOUT_CLASSIFICATION	0.999995455011189	WITHOUT_CLASSIFICATION	2.3327685982885906E-6	DEFECT	2.079406644669857E-6	IMPLEMENTATION	7.14922797937872E-8	DOCUMENTATION	3.5630781497097593E-8	TEST	2.5690506781216823E-8	DESIGN
// dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.998630813717746	WITHOUT_CLASSIFICATION	0.0013663940581511225	IMPLEMENTATION	9.97040507894362E-7	DESIGN	8.740366775405598E-7	DOCUMENTATION	5.393260796928782E-7	DEFECT	3.818208377891679E-7	TEST
// dirty check against the database snapshot, if possible/necessary	WITHOUT_CLASSIFICATION	0.9873028724601739	WITHOUT_CLASSIFICATION	0.012694901071721476	IMPLEMENTATION	8.55571235970342E-7	DEFECT	5.956586967841788E-7	DOCUMENTATION	5.12724104833369E-7	TEST	2.625140669995486E-7	DESIGN
// the Interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.9999978003349136	WITHOUT_CLASSIFICATION	1.8307049727729965E-6	IMPLEMENTATION	3.275500708925904E-7	DESIGN	2.30031828225024E-8	DOCUMENTATION	9.335468250204719E-9	TEST	9.071391673240512E-9	DEFECT
//even process null collections	WITHOUT_CLASSIFICATION	0.9999951486557762	WITHOUT_CLASSIFICATION	2.6060470375679313E-6	DESIGN	1.5810623053461035E-6	IMPLEMENTATION	4.51930786055114E-7	DEFECT	1.761825701387795E-7	DOCUMENTATION	3.612152463151709E-8	TEST
// get the id from the object	WITHOUT_CLASSIFICATION	0.9999972553440982	WITHOUT_CLASSIFICATION	2.5560956251534757E-6	DESIGN	7.434612394451768E-8	DEFECT	4.8959880281645454E-8	DOCUMENTATION	4.83844264659711E-8	TEST	1.6869845796247474E-8	IMPLEMENTATION
//always do an INSERT, and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.9993198158488802	WITHOUT_CLASSIFICATION	6.758800793252652E-4	DESIGN	3.46507864708233E-6	DEFECT	7.179668473098207E-7	TEST	1.2016189422786327E-7	DOCUMENTATION	8.644059095878259E-10	IMPLEMENTATION
//what is the version on the database?	WITHOUT_CLASSIFICATION	0.996251664260747	WITHOUT_CLASSIFICATION	0.002873817085348696	DESIGN	6.228511598188755E-4	IMPLEMENTATION	2.423506651705486E-4	DEFECT	7.096923424701643E-6	TEST	2.219905490163385E-6	DOCUMENTATION
/// HHH-2378	WITHOUT_CLASSIFICATION	0.999942759538406	WITHOUT_CLASSIFICATION	4.158094624337782E-5	DESIGN	1.0388466800408665E-5	DEFECT	2.456443643033912E-6	IMPLEMENTATION	1.4102465718407612E-6	TEST	1.404358335396709E-6	DOCUMENTATION
//will result in a SQL UPDATE:	WITHOUT_CLASSIFICATION	0.9999687403479111	WITHOUT_CLASSIFICATION	2.2300291769329922E-5	DESIGN	8.21908397361006E-6	DEFECT	2.969306023516934E-7	TEST	2.663961961364132E-7	IMPLEMENTATION	1.769495474274482E-7	DOCUMENTATION
//else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.999968119732438	WITHOUT_CLASSIFICATION	2.618594274836266E-5	DESIGN	3.157685331229989E-6	DOCUMENTATION	1.512393108478689E-6	DEFECT	7.658748979825002E-7	TEST	2.583714759626792E-7	IMPLEMENTATION
// no existing row - do an insert	WITHOUT_CLASSIFICATION	0.9971023572984874	WITHOUT_CLASSIFICATION	0.002796270508430539	DESIGN	4.71869616204632E-5	DEFECT	3.8355765648919795E-5	TEST	8.180856699275584E-6	IMPLEMENTATION	7.648609113474955E-6	DOCUMENTATION
//refresh() does not pass an entityName	WITHOUT_CLASSIFICATION	0.9997721632206319	WITHOUT_CLASSIFICATION	9.553044036575321E-5	DESIGN	6.541882777265774E-5	TEST	4.826268303237875E-5	IMPLEMENTATION	1.6917589561831867E-5	DEFECT	1.70723863563598E-6	DOCUMENTATION
//do not return a proxy! //(this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.9999981881560671	WITHOUT_CLASSIFICATION	1.034181119896368E-6	DESIGN	4.636405462780251E-7	DEFECT	2.3326627368035762E-7	TEST	6.040360438513795E-8	IMPLEMENTATION	2.0352388667533885E-8	DOCUMENTATION
//return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.999301459718234	WITHOUT_CLASSIFICATION	6.27061665004829E-4	DESIGN	3.6336242041921715E-5	DEFECT	3.237361831104502E-5	IMPLEMENTATION	1.4703335369025033E-6	DOCUMENTATION	1.2984228713642858E-6	TEST
// return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.9999995624013029	WITHOUT_CLASSIFICATION	2.5300746577277974E-7	DESIGN	8.346242824082172E-8	DEFECT	7.762233352038482E-8	IMPLEMENTATION	1.525672535116347E-8	TEST	8.249744114318128E-9	DOCUMENTATION
// return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999992996345011	WITHOUT_CLASSIFICATION	3.0259892404212013E-7	DESIGN	2.981725673955199E-7	IMPLEMENTATION	7.753357596259804E-8	DEFECT	1.590871166387342E-8	DOCUMENTATION	6.151719972052168E-9	TEST
// this object was already loaded	WITHOUT_CLASSIFICATION	0.9999872334174373	WITHOUT_CLASSIFICATION	7.0244743801651E-6	DESIGN	2.958875300529786E-6	DEFECT	1.565028460387312E-6	IMPLEMENTATION	1.0152713737795302E-6	TEST	2.0293304776718632E-7	DOCUMENTATION
// Entity was found in second-level cache...	WITHOUT_CLASSIFICATION	0.9999582033388738	WITHOUT_CLASSIFICATION	3.754595503016435E-5	DESIGN	3.92849654461631E-6	DEFECT	1.8907774458005583E-7	DOCUMENTATION	7.437543555232102E-8	TEST	5.875637123839895E-8	IMPLEMENTATION
// make it circular-reference safe	WITHOUT_CLASSIFICATION	0.9999935214363428	WITHOUT_CLASSIFICATION	3.6231224884368483E-6	DEFECT	1.2439431124777083E-6	IMPLEMENTATION	9.02203376128082E-7	DESIGN	4.269891892480406E-7	TEST	2.82305490916384E-7	DOCUMENTATION
// intializes result by side-effect	WITHOUT_CLASSIFICATION	0.9999995522112581	WITHOUT_CLASSIFICATION	3.1890093428520857E-7	DEFECT	1.245317372794236E-7	DESIGN	2.639622249181874E-9	TEST	1.6545445693374182E-9	DOCUMENTATION	6.190345011371343E-11	IMPLEMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Pre-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999888984454492	WITHOUT_CLASSIFICATION	7.91057232398918E-6	DEFECT	2.2315418592219536E-6	DESIGN	4.038115077014863E-7	TEST	3.8047493098494845E-7	IMPLEMENTATION	1.751539288806348E-7	DOCUMENTATION
//some statistics	WITHOUT_CLASSIFICATION	0.9999451599360051	WITHOUT_CLASSIFICATION	2.448044394125313E-5	IMPLEMENTATION	2.0223193119614507E-5	DESIGN	7.431608171161991E-6	DOCUMENTATION	1.4269590470697392E-6	TEST	1.2778597158172622E-6	DEFECT
//safe from concurrent modification because of how entryList() is implemented on IdentityMap	WITHOUT_CLASSIFICATION	0.9998821024479903	WITHOUT_CLASSIFICATION	7.73708048528129E-5	IMPLEMENTATION	2.7913957974118992E-5	DEFECT	1.0291247858495837E-5	DESIGN	2.1634022369103728E-6	DOCUMENTATION	1.5813908750408504E-7	TEST
// Initialize dirty flags for arrays + collections with composite elements // and reset reached, doupdate, etc.	WITHOUT_CLASSIFICATION	0.9999906797349208	WITHOUT_CLASSIFICATION	8.854431552791512E-6	IMPLEMENTATION	4.595783894372106E-7	DEFECT	2.8553991721588414E-9	TEST	2.7232797425276578E-9	DESIGN	6.764580029975766E-10	DOCUMENTATION
// Among other things, updateReachables() will recursively load all // collections that are moving roles. This might cause entities to // be loaded.	WITHOUT_CLASSIFICATION	0.9980656162354657	WITHOUT_CLASSIFICATION	0.0017995322255306618	DESIGN	1.148257939807265E-4	DEFECT	1.97302250934131E-5	IMPLEMENTATION	2.633272676047479E-7	TEST	3.219266182914482E-8	DOCUMENTATION
// So this needs to be safe from concurrent modification problems. // It is safe because of how IdentityMap implements entrySet()	WITHOUT_CLASSIFICATION	0.9691095366349415	WITHOUT_CLASSIFICATION	0.01267474379200246	DEFECT	0.012078423260914578	DESIGN	0.00551449580945187	IMPLEMENTATION	6.184713159560923E-4	DOCUMENTATION	4.3291867335134265E-6	TEST
// Update the status of the object and if necessary, schedule an update	WITHOUT_CLASSIFICATION	0.9999999009697496	WITHOUT_CLASSIFICATION	7.646764060529343E-8	DEFECT	1.083310756144805E-8	IMPLEMENTATION	8.096390792261619E-9	DESIGN	1.949336296243399E-9	TEST	1.6837751765377435E-9	DOCUMENTATION
// Schedule updates to collections:	WITHOUT_CLASSIFICATION	0.9999964001330011	WITHOUT_CLASSIFICATION	1.9320872826911513E-6	IMPLEMENTATION	1.3738073977931855E-6	DEFECT	1.596831422612309E-7	DESIGN	1.0151521390850869E-7	TEST	3.27739621769071E-8	DOCUMENTATION
// we need to lock the collection caches before // executing entity inserts/updates in order to // account for bidi associations	WITHOUT_CLASSIFICATION	0.9999958997091016	WITHOUT_CLASSIFICATION	2.1802880637513954E-6	TEST	9.595803280428888E-7	DEFECT	6.686021519849073E-7	IMPLEMENTATION	1.9406573121623974E-7	DESIGN	9.775462347458631E-8	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Post-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999934611353221	WITHOUT_CLASSIFICATION	4.177920648620897E-6	DEFECT	1.076822622384281E-6	DESIGN	5.247564235202007E-7	IMPLEMENTATION	4.6483391590147634E-7	TEST	2.9453106749702346E-7	DOCUMENTATION
//the database has changed now, so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.9999548531638791	WITHOUT_CLASSIFICATION	4.494391528510369E-5	IMPLEMENTATION	1.0055474184421438E-7	TEST	3.709482194735339E-8	DEFECT	3.6663809365394666E-8	DOCUMENTATION	2.8607462515874512E-8	DESIGN
//if the collection is dereferenced, remove from the session cache //iter.remove(); //does not work, since the entrySet is not backed by the set	WITHOUT_CLASSIFICATION	0.9998917823475503	WITHOUT_CLASSIFICATION	8.15919202219927E-5	DEFECT	2.6321353987396942E-5	DESIGN	3.0053499004752734E-7	TEST	3.56871352011416E-9	DOCUMENTATION	2.745367647223788E-10	IMPLEMENTATION
//otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9996581435254837	WITHOUT_CLASSIFICATION	1.9284114415984765E-4	DESIGN	1.4378819910829382E-4	IMPLEMENTATION	4.354010991203327E-6	TEST	6.387376341275181E-7	DEFECT	2.3438262278839256E-7	DOCUMENTATION
//get a snapshot	WITHOUT_CLASSIFICATION	0.9999639123549434	WITHOUT_CLASSIFICATION	2.7867393622229787E-5	DESIGN	4.937897015333027E-6	IMPLEMENTATION	1.4749496544075312E-6	DEFECT	1.120363624622883E-6	TEST	6.870411399886562E-7	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999992296521041	WITHOUT_CLASSIFICATION	6.849956499986313E-7	DESIGN	3.351096717839608E-8	DOCUMENTATION	3.0915725392244446E-8	IMPLEMENTATION	1.2654553506778679E-8	DEFECT	8.27099995171446E-9	TEST
/* package-private */	WITHOUT_CLASSIFICATION	0.9999992296521041	WITHOUT_CLASSIFICATION	6.849956499986313E-7	DESIGN	3.351096717839608E-8	DOCUMENTATION	3.0915725392244446E-8	IMPLEMENTATION	1.2654553506778679E-8	DEFECT	8.27099995171446E-9	TEST
// key is an entity involved with the operation performed by the listener; // value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.9999999352127199	WITHOUT_CLASSIFICATION	4.2938401318338847E-8	TEST	2.0559432463201212E-8	DEFECT	6.147879045596774E-10	DESIGN	4.0697826271724595E-10	DOCUMENTATION	2.6768024697794684E-10	IMPLEMENTATION
// EARLY EXIT!!!	WITHOUT_CLASSIFICATION	0.9999283346193827	WITHOUT_CLASSIFICATION	3.689811277151555E-5	DEFECT	1.9333868467336243E-5	IMPLEMENTATION	1.1530029441855217E-5	DESIGN	2.19249676986476E-6	DOCUMENTATION	1.7108731666702445E-6	TEST
//ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.9999270493808547	WITHOUT_CLASSIFICATION	6.752469344195997E-5	DESIGN	2.328824738004955E-6	DEFECT	1.7601195856367063E-6	IMPLEMENTATION	1.219168755356976E-6	DOCUMENTATION	1.178126243717971E-7	TEST
// before any callbacks, etc, so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.9999872708944698	WITHOUT_CLASSIFICATION	1.264334804074452E-5	DESIGN	3.6958792445478675E-8	DEFECT	2.8843267673170258E-8	IMPLEMENTATION	1.7537058809226676E-8	TEST	2.4183706743767107E-9	DOCUMENTATION
// Ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.9999996684861326	WITHOUT_CLASSIFICATION	2.1717291522328894E-7	IMPLEMENTATION	6.407168988744784E-8	DESIGN	4.3127032794077106E-8	DEFECT	4.693527396566045E-9	TEST	2.4487020371832494E-9	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// cascade-delete to collections BEFORE the collection owner is deleted	WITHOUT_CLASSIFICATION	0.9999254964781318	WITHOUT_CLASSIFICATION	7.208841280912207E-5	IMPLEMENTATION	1.565128264258537E-6	DESIGN	5.327941954487614E-7	DEFECT	2.979840516804977E-7	TEST	1.920254768856671E-8	DOCUMENTATION
// cascade-delete to many-to-one AFTER the parent was deleted	WITHOUT_CLASSIFICATION	0.9999253038315071	WITHOUT_CLASSIFICATION	4.4141541834878644E-5	IMPLEMENTATION	2.660458679744324E-5	DESIGN	3.2073041444159037E-6	DEFECT	5.685226044534527E-7	DOCUMENTATION	1.7421311162543865E-7	TEST
// if it is an initialized proxy, let cascade // handle it later on	WITHOUT_CLASSIFICATION	0.9999805012712137	WITHOUT_CLASSIFICATION	1.7850078922316406E-5	DESIGN	1.3641410865360287E-6	TEST	1.6959056130009326E-7	IMPLEMENTATION	1.1060023477665911E-7	DEFECT	4.317981203498872E-9	DOCUMENTATION
//assign the requested id to the proxy, *before* //reassociating the proxy	WITHOUT_CLASSIFICATION	0.999936745081846	WITHOUT_CLASSIFICATION	3.017535278007871E-5	DEFECT	2.2192957503691193E-5	TEST	4.079592525979248E-6	DOCUMENTATION	3.902682096801117E-6	DESIGN	2.9043332471519474E-6	IMPLEMENTATION
// an uninitialized proxy, noop, don't even need to // return an id, since it is never a save()	WITHOUT_CLASSIFICATION	0.9999984681508487	WITHOUT_CLASSIFICATION	1.4126210180763046E-6	DESIGN	8.176878178976498E-8	DEFECT	2.5672902668898457E-8	IMPLEMENTATION	5.931442998556998E-9	DOCUMENTATION	5.855005812859536E-9	TEST
//initialize properties of the event:	WITHOUT_CLASSIFICATION	0.9999911799616724	WITHOUT_CLASSIFICATION	6.346921668697071E-6	DEFECT	9.102554579726987E-7	TEST	7.198151587282706E-7	DESIGN	4.871773676116642E-7	IMPLEMENTATION	3.558686745902774E-7	DOCUMENTATION
//return the id in the event object	WITHOUT_CLASSIFICATION	0.9996568198659609	WITHOUT_CLASSIFICATION	3.1455771259088775E-4	DESIGN	2.14733936917701E-5	DEFECT	5.035128850505656E-6	DOCUMENTATION	1.4710972371485258E-6	IMPLEMENTATION	6.428016687032653E-7	TEST
//TRANSIENT or DELETED	WITHOUT_CLASSIFICATION	0.999993733137614	WITHOUT_CLASSIFICATION	2.5026879891490504E-6	DESIGN	1.474674837864504E-6	DEFECT	1.405509255701789E-6	IMPLEMENTATION	5.516135228352598E-7	DOCUMENTATION	3.32376780392973E-7	TEST
// use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.9999951323728241	WITHOUT_CLASSIFICATION	4.110797171825009E-6	DESIGN	3.757256668520126E-7	IMPLEMENTATION	3.457724703346256E-7	DOCUMENTATION	1.8326882975894827E-8	TEST	1.7004983765540937E-8	DEFECT
// assume this is a newly instantiated transient object // which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.9638714333167815	WITHOUT_CLASSIFICATION	0.03605845596937632	DESIGN	4.6948698627170734E-5	DEFECT	1.2927358606955935E-5	TEST	7.592513461201986E-6	DOCUMENTATION	2.6421431468365036E-6	IMPLEMENTATION
// this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.9998515575402117	WITHOUT_CLASSIFICATION	7.688733572544668E-5	DEFECT	6.5874293168016E-5	DESIGN	3.0685365675093824E-6	IMPLEMENTATION	2.288368642117081E-6	TEST	3.239256851694782E-7	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999991122586156	WITHOUT_CLASSIFICATION	7.190642025451711E-7	IMPLEMENTATION	1.660557942165176E-7	DEFECT	1.2041189151926638E-9	DESIGN	7.726146789867234E-10	TEST	6.44654288760791E-10	DOCUMENTATION
//cachedState,	WITHOUT_CLASSIFICATION	0.999841246064042	WITHOUT_CLASSIFICATION	8.811925976922287E-5	DESIGN	5.119607259734677E-5	IMPLEMENTATION	9.149000239431989E-6	DEFECT	6.104300262594129E-6	DOCUMENTATION	4.185303089412157E-6	TEST
//assume true, since we don't really know, and it doesn't matter	WITHOUT_CLASSIFICATION	0.9999215186553986	WITHOUT_CLASSIFICATION	4.876939175135406E-5	DEFECT	1.8433804633266125E-5	DESIGN	5.026695769169422E-6	TEST	4.830249669268138E-6	DOCUMENTATION	1.4212027783024983E-6	IMPLEMENTATION
//a "detached" collection!	WITHOUT_CLASSIFICATION	0.9994127520502438	WITHOUT_CLASSIFICATION	4.394765658443913E-4	DESIGN	7.422526389907257E-5	DEFECT	6.279156446246868E-5	IMPLEMENTATION	6.486054323747715E-6	DOCUMENTATION	4.2685012267128755E-6	TEST
// if the collection belonged to a different entity, // clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.9999999156509215	WITHOUT_CLASSIFICATION	3.721776487066193E-8	DESIGN	3.2241407612099047E-8	DEFECT	1.2997852746468622E-8	TEST	1.6071519107797098E-9	DOCUMENTATION	2.8490145712846847E-10	IMPLEMENTATION
//log.debug( "calling onLoad()" );	WITHOUT_CLASSIFICATION	0.9999830750282824	WITHOUT_CLASSIFICATION	1.0564067632606652E-5	DESIGN	4.339662428924233E-6	DEFECT	1.5326538170673288E-6	IMPLEMENTATION	3.7118676833443344E-7	DOCUMENTATION	1.1740107071332989E-7	TEST
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9997848562416923	WITHOUT_CLASSIFICATION	8.372299825323778E-5	DESIGN	6.276501348622162E-5	DEFECT	5.3794321227872224E-5	IMPLEMENTATION	9.018015980353736E-6	DOCUMENTATION	5.843409359872022E-6	TEST
// note: performExecutions() clears all collectionXxxxtion  // collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.9745950815126082	WITHOUT_CLASSIFICATION	0.017877788920840985	DESIGN	0.004227101305129354	IMPLEMENTATION	0.003282431845706567	DEFECT	1.0871950827918633E-5	DOCUMENTATION	6.724464886965294E-6	TEST
// if no array holder we found an unwrappered array (this can't occur, // because we now always call wrap() before getting to here) // return (ah==null) ? true : searchForDirtyCollections(ah, type);	WITHOUT_CLASSIFICATION	0.9368098409003651	WITHOUT_CLASSIFICATION	0.06212818326505304	DESIGN	0.0010056470431146736	DEFECT	5.366235891839724E-5	IMPLEMENTATION	2.087245528726606E-6	TEST	5.791870200771806E-7	DOCUMENTATION
// if not wrappered yet, its dirty (this can't occur, because // we now always call wrap() before getting to here) // return ( ! (obj instanceof PersistentCollection) ) ? //true : searchForDirtyCollections( (PersistentCollection) obj, type );	WITHOUT_CLASSIFICATION	0.9587171554122161	DESIGN	0.025930731846134366	DEFECT	0.015086583582804467	WITHOUT_CLASSIFICATION	2.5827667300524175E-4	IMPLEMENTATION	5.429782214913342E-6	TEST	1.8227036246737865E-6	DOCUMENTATION
//we need to check even if it was not initialized, because of delayed adds!	WITHOUT_CLASSIFICATION	0.996512561239999	WITHOUT_CLASSIFICATION	0.002641650577234666	IMPLEMENTATION	4.6792081046314677E-4	DOCUMENTATION	3.0000276454935677E-4	DESIGN	4.407500667899334E-5	TEST	3.3789601074928706E-5	DEFECT
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9987859569186616	WITHOUT_CLASSIFICATION	4.7861416563833463E-4	DESIGN	4.121472802462167E-4	DEFECT	2.792438886222275E-4	IMPLEMENTATION	2.5680981753181346E-5	DOCUMENTATION	1.835676507847049E-5	TEST
// find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.9999548363509325	WITHOUT_CLASSIFICATION	3.289079327931749E-5	IMPLEMENTATION	1.054124737617089E-5	DESIGN	8.906725768159024E-7	TEST	6.134917108434897E-7	DEFECT	2.274441243645266E-7	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9997848562416923	WITHOUT_CLASSIFICATION	8.372299825323778E-5	DESIGN	6.276501348622162E-5	DEFECT	5.3794321227872224E-5	IMPLEMENTATION	9.018015980353736E-6	DOCUMENTATION	5.843409359872022E-6	TEST
// Check the persistence context for an entry relating to this // entity to be merged...	WITHOUT_CLASSIFICATION	0.9999263068624623	WITHOUT_CLASSIFICATION	7.264862319926746E-5	DESIGN	6.256015067726955E-7	TEST	3.617960295689675E-7	IMPLEMENTATION	5.6368572178723346E-8	DOCUMENTATION	7.482298863901097E-10	DEFECT
// we have specialized case of a detached entity from the // perspective of the merge operation.  Specifically, we // have an incoming entity instance which has a corresponding // entry in the current persistence context, but registered // under a different entity instance	WITHOUT_CLASSIFICATION	0.9999998966528039	WITHOUT_CLASSIFICATION	9.193109297322232E-8	DESIGN	6.322817616779207E-9	DEFECT	5.072206013302199E-9	DOCUMENTATION	1.9814321025362893E-11	TEST	1.2650631033405273E-12	IMPLEMENTATION
//DELETED	WITHOUT_CLASSIFICATION	0.9996496832310339	WITHOUT_CLASSIFICATION	2.9620178503967775E-4	DESIGN	2.5510847004860988E-5	DEFECT	1.2279589811164839E-5	IMPLEMENTATION	8.832131158327127E-6	TEST	7.492415952028239E-6	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.999985658168986	WITHOUT_CLASSIFICATION	7.53065988947902E-6	IMPLEMENTATION	4.741594274357844E-6	DESIGN	1.635696226435144E-6	DEFECT	2.9604996916112637E-7	DOCUMENTATION	1.3783065443459527E-7	TEST
// cascade first, so that all unsaved objects get their // copy created before we actually copy //cascadeOnMerge(event, persister, entity, copyCache, Cascades.CASCADE_BEFORE_MERGE);	WITHOUT_CLASSIFICATION	0.9999949559007264	WITHOUT_CLASSIFICATION	4.540719910961E-6	IMPLEMENTATION	3.928906190572366E-7	DESIGN	4.440701096997566E-8	DEFECT	3.717209801932191E-8	TEST	2.8909634718783998E-8	DOCUMENTATION
//this bit is only *really* absolutely necessary for handling //requestedId, but is also good if we merge multiple object //graphs, since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.5375007577387936	DESIGN	0.4607837552340622	WITHOUT_CLASSIFICATION	0.0013487743218562782	IMPLEMENTATION	3.6516933824388764E-4	TEST	1.477644358696273E-6	DOCUMENTATION	6.572268513144728E-8	DEFECT
// continue...; we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.9977972894606559	WITHOUT_CLASSIFICATION	0.001821116640645335	DESIGN	3.7128884709518696E-4	DEFECT	7.524720524154761E-6	IMPLEMENTATION	2.595288858531432E-6	TEST	1.8504222099322443E-7	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999956739633808	WITHOUT_CLASSIFICATION	2.7049840535456565E-6	IMPLEMENTATION	1.301565632135914E-6	DESIGN	1.392046233805421E-7	DEFECT	1.2102226197198005E-7	TEST	5.926004818251874E-8	DOCUMENTATION
// check that entity id = requestedId	WITHOUT_CLASSIFICATION	0.9946525795480381	WITHOUT_CLASSIFICATION	0.005324288176144191	IMPLEMENTATION	1.8266948281699984E-5	TEST	2.002665525587539E-6	DEFECT	1.9159935479771253E-6	DOCUMENTATION	9.466684622917464E-7	DESIGN
//before cascade!	WITHOUT_CLASSIFICATION	0.999985658168986	WITHOUT_CLASSIFICATION	7.53065988947902E-6	IMPLEMENTATION	4.741594274357844E-6	DESIGN	1.635696226435144E-6	DEFECT	2.9604996916112637E-7	DOCUMENTATION	1.3783065443459527E-7	TEST
// we got here because we assumed that an instance // with an assigned id was detached, when it was // really persistent	WITHOUT_CLASSIFICATION	0.9999882386798877	WITHOUT_CLASSIFICATION	1.0388452472545393E-5	DESIGN	6.394186508342111E-7	DEFECT	5.830058267088975E-7	TEST	1.496278068103747E-7	DOCUMENTATION	8.153553042350447E-10	IMPLEMENTATION
// cascade first, so that all unsaved objects get their  // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999933328709871	WITHOUT_CLASSIFICATION	5.594181278203345E-6	IMPLEMENTATION	7.362778362854162E-7	DESIGN	1.3289797026490278E-7	DEFECT	1.1738811161082647E-7	TEST	8.638381643467556E-8	DOCUMENTATION
//copyValues works by reflection, so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.9617770859341401	WITHOUT_CLASSIFICATION	0.03445130356484686	DESIGN	0.003137449221280026	DEFECT	3.4001954740961346E-4	DOCUMENTATION	2.6962853866667057E-4	IMPLEMENTATION	2.4513193656690785E-5	TEST
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.999775780892406	WITHOUT_CLASSIFICATION	9.399090114120869E-5	IMPLEMENTATION	9.106440363704637E-5	DESIGN	2.718233334482924E-5	DEFECT	6.628891441913464E-6	DOCUMENTATION	5.352578028902095E-6	TEST
//source.getBatcher().executeBatch(); //found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.9998062764838554	WITHOUT_CLASSIFICATION	1.8141322725518717E-4	DESIGN	1.086443837464204E-5	IMPLEMENTATION	6.716732935938842E-7	DEFECT	4.441766480266214E-7	TEST	3.3000057306982286E-7	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999978940466885	WITHOUT_CLASSIFICATION	1.851573713258321E-6	DESIGN	1.9732966828669868E-7	DEFECT	3.1983960438662744E-8	DOCUMENTATION	2.2354868521827437E-8	TEST	2.7111009131960083E-9	IMPLEMENTATION
//now done in EntityIdentityInsertAction //persister.setIdentifier( entity, id, source.getEntityMode() );	WITHOUT_CLASSIFICATION	0.9999965242929107	WITHOUT_CLASSIFICATION	3.3266310663208136E-6	DESIGN	6.10443252739804E-8	DEFECT	4.415250254777591E-8	IMPLEMENTATION	3.3036365386068465E-8	DOCUMENTATION	1.0842829712261375E-8	TEST
//source.getPersistenceContext().removeNonExist( new EntityKey( id, persister, source.getEntityMode() ) );	WITHOUT_CLASSIFICATION	0.9998642800295936	WITHOUT_CLASSIFICATION	1.3195082058319927E-4	DESIGN	2.070606161311275E-6	IMPLEMENTATION	8.753122823464954E-7	TEST	6.851202989317889E-7	DOCUMENTATION	1.3811108054359015E-7	DEFECT
//keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.9999964333564115	WITHOUT_CLASSIFICATION	2.14595707051908E-6	DESIGN	1.216380963931784E-6	DEFECT	1.608999445297681E-7	DOCUMENTATION	2.9937492924927325E-8	TEST	1.346811657444164E-8	IMPLEMENTATION
// cascade-save to many-to-one BEFORE the parent is saved	WITHOUT_CLASSIFICATION	0.9886198745351124	WITHOUT_CLASSIFICATION	0.010939902471581154	IMPLEMENTATION	2.8306876063335516E-4	DESIGN	1.2850832069662014E-4	DEFECT	2.065593100787108E-5	DOCUMENTATION	7.989980968568389E-6	TEST
//pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.9999993349087211	WITHOUT_CLASSIFICATION	3.3567364877104513E-7	DESIGN	2.2443728846077324E-7	TEST	8.676251197029619E-8	DOCUMENTATION	1.8089491609456238E-8	DEFECT	1.2833804244587701E-10	IMPLEMENTATION
// the object is persistent	WITHOUT_CLASSIFICATION	0.9999955217350838	WITHOUT_CLASSIFICATION	1.7075134104241214E-6	IMPLEMENTATION	1.5047206885497333E-6	DESIGN	8.051233611808397E-7	TEST	2.3927636688614566E-7	DEFECT	2.216310892856684E-7	DOCUMENTATION
//the entity is associated with the session, so check its status	WITHOUT_CLASSIFICATION	0.9999454238126086	WITHOUT_CLASSIFICATION	4.942444667967283E-5	IMPLEMENTATION	2.967645209207268E-6	TEST	1.6212502814333014E-6	DOCUMENTATION	4.899558340691189E-7	DESIGN	7.288938685842237E-8	DEFECT
// do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.9999997090063294	WITHOUT_CLASSIFICATION	1.5242663040891453E-7	DESIGN	7.599620491446773E-8	IMPLEMENTATION	2.8199484495453667E-8	TEST	2.5272226083032855E-8	DEFECT	9.099124690387674E-9	DOCUMENTATION
//ie. e.status==DELETED	WITHOUT_CLASSIFICATION	0.9999976107920965	WITHOUT_CLASSIFICATION	1.3347219576483034E-6	DESIGN	3.9870030742643486E-7	IMPLEMENTATION	3.6195817022019725E-7	DEFECT	1.6869821062866914E-7	TEST	1.2512925760398197E-7	DOCUMENTATION
// the object is transient or detached	WITHOUT_CLASSIFICATION	0.9999171588681314	WITHOUT_CLASSIFICATION	8.018756004788504E-5	IMPLEMENTATION	1.3026037045622921E-6	DESIGN	5.49813629930256E-7	DEFECT	4.978497585537124E-7	TEST	3.033047277862769E-7	DOCUMENTATION
//NOTE EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999032920959737	WITHOUT_CLASSIFICATION	4.1247631417642774E-5	DESIGN	2.9432993829691962E-5	IMPLEMENTATION	1.8609820769291705E-5	DEFECT	4.138036025107122E-6	DOCUMENTATION	3.279421984627933E-6	TEST
// Private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.9999987324364209	WITHOUT_CLASSIFICATION	9.587686768397003E-7	IMPLEMENTATION	2.874483876974795E-7	DESIGN	1.1335274826796693E-8	TEST	7.509507128584747E-9	DOCUMENTATION	2.5017325450296365E-9	DEFECT
// First, try to find a matching constructor accepting a ViolatedConstraintNameExtracter param...	WITHOUT_CLASSIFICATION	0.9999976769079185	WITHOUT_CLASSIFICATION	1.7512001156387742E-6	IMPLEMENTATION	5.179301048976658E-7	DESIGN	4.694987932694718E-8	TEST	4.557662288374378E-9	DOCUMENTATION	2.4543193727093405E-9	DEFECT
// eat it and try next	WITHOUT_CLASSIFICATION	0.9999677263070856	WITHOUT_CLASSIFICATION	1.4601047102035657E-5	IMPLEMENTATION	1.270002894827688E-5	DEFECT	2.3863445730845273E-6	DESIGN	1.36006267857116E-6	TEST	1.2262096123680612E-6	DOCUMENTATION
// Otherwise, try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.999988195382981	WITHOUT_CLASSIFICATION	1.173608579484735E-5	IMPLEMENTATION	3.2520611401498404E-8	DESIGN	2.7488562077231245E-8	DOCUMENTATION	5.635491124901254E-9	TEST	2.8865593465248896E-9	DEFECT
// oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.9999706771821737	WITHOUT_CLASSIFICATION	1.8375390963177234E-5	DESIGN	1.0412837754049752E-5	IMPLEMENTATION	2.2801536659492915E-7	TEST	2.135776801717904E-7	DEFECT	9.299606219638944E-8	DOCUMENTATION
// CollectionPropertyMapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.9999982455872409	WITHOUT_CLASSIFICATION	1.0074847054364693E-6	DEFECT	5.980201044960001E-7	DESIGN	7.267847572470765E-8	TEST	6.346241788635929E-8	IMPLEMENTATION	1.2767055580743418E-8	DOCUMENTATION
// remove initial ", "	WITHOUT_CLASSIFICATION	0.9999921967941161	WITHOUT_CLASSIFICATION	6.465564497067147E-6	DESIGN	9.478309514473397E-7	IMPLEMENTATION	2.0090308151881227E-7	TEST	1.2461332620337353E-7	DEFECT	6.429402775685792E-8	DOCUMENTATION
// remove initial " and "	WITHOUT_CLASSIFICATION	0.9999891917104535	WITHOUT_CLASSIFICATION	7.306225418077557E-6	DESIGN	3.2553284027946023E-6	IMPLEMENTATION	1.0063146859107566E-7	TEST	8.544870005730429E-8	DEFECT	6.065555690213596E-8	DOCUMENTATION
//beforeClassTokens.add("new"); DEFINITELY DON'T HAVE THIS!!	WITHOUT_CLASSIFICATION	0.9997776208122701	WITHOUT_CLASSIFICATION	2.041499920597494E-4	DESIGN	7.74384132318901E-6	DEFECT	7.536420426327437E-6	IMPLEMENTATION	2.141659284327705E-6	DOCUMENTATION	8.072746362317092E-7	TEST
//notAfterClassTokens.add(",");	WITHOUT_CLASSIFICATION	0.9999368975171843	WITHOUT_CLASSIFICATION	2.8527662191309537E-5	IMPLEMENTATION	2.4865808236862674E-5	DESIGN	6.350866192606827E-6	DEFECT	1.7569004543539395E-6	TEST	1.60124574050291E-6	DOCUMENTATION
// just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.9999980604880264	WITHOUT_CLASSIFICATION	1.7146042020052311E-6	IMPLEMENTATION	1.6970451828514202E-7	DESIGN	3.802029492091756E-8	TEST	9.738614744581116E-9	DEFECT	7.444343601601651E-9	DOCUMENTATION
//update last non-whitespace token, if necessary	WITHOUT_CLASSIFICATION	0.999995140983013	WITHOUT_CLASSIFICATION	1.9039209279796384E-6	DEFECT	1.197393996036196E-6	IMPLEMENTATION	1.1334805417635577E-6	DESIGN	3.52117891897008E-7	TEST	2.721036292228776E-7	DOCUMENTATION
// select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.9999941797740296	WITHOUT_CLASSIFICATION	3.6862461193100057E-6	DESIGN	2.042454079381395E-6	DEFECT	8.723438107723247E-8	TEST	3.5141160917654264E-9	DOCUMENTATION	7.772745858024729E-10	IMPLEMENTATION
//scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.9999757261088257	WITHOUT_CLASSIFICATION	1.2306283614721245E-5	IMPLEMENTATION	7.963548742622622E-6	DEFECT	1.703863882739358E-6	TEST	1.1557038484339585E-6	DOCUMENTATION	1.1444910857109306E-6	DESIGN
// Note this!!	WITHOUT_CLASSIFICATION	0.9995062653055707	WITHOUT_CLASSIFICATION	3.746022477987812E-4	DESIGN	6.700786084409892E-5	IMPLEMENTATION	2.9829001260503405E-5	TEST	1.579257208235854E-5	DOCUMENTATION	6.503012443517603E-6	DEFECT
// Error message constants.	WITHOUT_CLASSIFICATION	0.9999895720885722	WITHOUT_CLASSIFICATION	4.948049576870206E-6	DEFECT	3.634553880571396E-6	IMPLEMENTATION	8.623235403119754E-7	DESIGN	5.830293291836983E-7	TEST	3.9995510082226343E-7	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999617506670301	WITHOUT_CLASSIFICATION	2.8219260395957132E-5	IMPLEMENTATION	8.922044966239947E-6	DESIGN	5.176543320974547E-7	DEFECT	3.4243468451239085E-7	TEST	2.479385910993138E-7	DOCUMENTATION
// semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9956215231827937	WITHOUT_CLASSIFICATION	0.004308647161092052	DESIGN	4.152163950976262E-5	DEFECT	1.6657024366886093E-5	IMPLEMENTATION	7.446247087514018E-6	DOCUMENTATION	4.204745149954853E-6	TEST
// Handle collection-fiter compilation. // IMPORTANT NOTE: This is modifying the INPUT (HQL) tree, not the output tree!	WITHOUT_CLASSIFICATION	0.550380843374323	WITHOUT_CLASSIFICATION	0.276828505239543	DESIGN	0.1618974620227768	DEFECT	0.010850017788921282	IMPLEMENTATION	4.224781274095464E-5	TEST	9.237616949109121E-7	DOCUMENTATION
// Show the modified AST.	WITHOUT_CLASSIFICATION	0.9999597211998036	WITHOUT_CLASSIFICATION	3.9533471154010266E-5	IMPLEMENTATION	2.3406548711349746E-7	DEFECT	2.2416532494843913E-7	DESIGN	1.587130727042108E-7	TEST	1.2838515761627437E-7	DOCUMENTATION
// Create a parameter specification for the collection filter...	WITHOUT_CLASSIFICATION	0.9995280991813084	WITHOUT_CLASSIFICATION	4.7058797868388427E-4	DESIGN	5.171096892930017E-7	TEST	3.772737007715419E-7	DOCUMENTATION	3.6848228224379063E-7	IMPLEMENTATION	4.997433535217913E-8	DEFECT
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999986559870773	WITHOUT_CLASSIFICATION	6.824434754920393E-7	IMPLEMENTATION	6.150210705995265E-7	DESIGN	2.3741079765576713E-8	TEST	1.80018779769591E-8	DOCUMENTATION	4.805418902380737E-9	DEFECT
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999986559870773	WITHOUT_CLASSIFICATION	6.824434754920393E-7	IMPLEMENTATION	6.150210705995265E-7	DESIGN	2.3741079765576713E-8	TEST	1.80018779769591E-8	DOCUMENTATION	4.805418902380737E-9	DEFECT
// Get the names of the columns used to link between the collection // owner and the collection elements.	WITHOUT_CLASSIFICATION	0.9999990013696378	WITHOUT_CLASSIFICATION	9.662979415120007E-7	DESIGN	1.7249951717378573E-8	DOCUMENTATION	1.0317075113381683E-8	DEFECT	2.4193745380399964E-9	IMPLEMENTATION	2.346019262948256E-9	TEST
// The path AST should be a DotNode, and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.9843160105153025	WITHOUT_CLASSIFICATION	0.012304685253410141	DESIGN	0.0028348905527449545	IMPLEMENTATION	5.09884975694952E-4	DEFECT	2.1476573122670588E-5	TEST	1.3052129724824468E-5	DOCUMENTATION
// Tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9999929128499436	WITHOUT_CLASSIFICATION	3.8595891824289114E-6	IMPLEMENTATION	2.7962067869166174E-6	DESIGN	2.0540426662719083E-7	DEFECT	1.1369445121399157E-7	TEST	1.1225536917952314E-7	DOCUMENTATION
// Re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.9999977797520139	WITHOUT_CLASSIFICATION	1.791208615176915E-6	IMPLEMENTATION	2.846398667231394E-7	DESIGN	1.3780797568419984E-7	DEFECT	4.671943857001644E-9	TEST	1.9195847189414785E-9	DOCUMENTATION
// Don't forget to resolve the argument! // Resolve the collection function now.	WITHOUT_CLASSIFICATION	0.9999994373276619	WITHOUT_CLASSIFICATION	3.573846581899345E-7	IMPLEMENTATION	9.680431822778962E-8	DEFECT	6.14600926559365E-8	DOCUMENTATION	2.3531117019504808E-8	DESIGN	2.3492151894389644E-8	TEST
// Resolve everything up to this dot, but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.9999940522273065	WITHOUT_CLASSIFICATION	3.4304955304493058E-6	DESIGN	2.054101983489799E-6	DEFECT	3.2219893357217606E-7	IMPLEMENTATION	1.2621855617814358E-7	TEST	1.4757689857973766E-8	DOCUMENTATION
// Should mean that no such property was found	WITHOUT_CLASSIFICATION	0.9999949085675374	WITHOUT_CLASSIFICATION	3.6570640506135715E-6	DESIGN	7.527229486106252E-7	DEFECT	5.468535220556784E-7	IMPLEMENTATION	7.411002084281999E-8	DOCUMENTATION	6.068192043609994E-8	TEST
// Was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.9999909249245571	WITHOUT_CLASSIFICATION	8.027052219168422E-6	DESIGN	6.019544061708468E-7	DEFECT	4.1141411807765054E-7	TEST	2.2204359117990763E-8	DOCUMENTATION	1.2450340289029812E-8	IMPLEMENTATION
// Attach any mapping-defined "ORDER BY" fragments	WITHOUT_CLASSIFICATION	0.9999938666111545	WITHOUT_CLASSIFICATION	5.112024738483617E-6	IMPLEMENTATION	5.9655616104284E-7	DEFECT	2.0392096804693116E-7	DESIGN	1.2912280799664086E-7	DOCUMENTATION	9.176416977656285E-8	TEST
// Use the explicitly declared select expression; determine the // return types indicated by each select token	WITHOUT_CLASSIFICATION	0.9999981142136832	WITHOUT_CLASSIFICATION	1.8450503293530737E-6	DESIGN	3.9886579035484295E-8	DEFECT	7.009586984170375E-10	DOCUMENTATION	1.4474192546700565E-10	TEST	3.707722818816366E-12	IMPLEMENTATION
// After that, process the JOINs. // Invoke a delegate to do the work, as this is farily complex.	WITHOUT_CLASSIFICATION	0.9999978042036672	WITHOUT_CLASSIFICATION	1.6647021579802568E-6	DESIGN	4.599981919164097E-7	DEFECT	4.00250014973416E-8	TEST	1.6901528018423228E-8	IMPLEMENTATION	1.416945334273945E-8	DOCUMENTATION
// Make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.9999936196825683	WITHOUT_CLASSIFICATION	5.925784547299435E-6	IMPLEMENTATION	3.6825817048144524E-7	DESIGN	6.774514865092226E-8	TEST	1.6063098062735698E-8	DOCUMENTATION	2.466467407511873E-9	DEFECT
// We need to generate ids as part of this bulk insert. // // Note that this is only supported for sequence-style generators and // post-insert-style generators; basically, only in-db generators	WITHOUT_CLASSIFICATION	0.9999962043031245	WITHOUT_CLASSIFICATION	2.6230112145670843E-6	DESIGN	6.469229940503793E-7	TEST	4.1218092660640587E-7	IMPLEMENTATION	1.0153748141944582E-7	DEFECT	1.2044258782128224E-8	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999986559870773	WITHOUT_CLASSIFICATION	6.824434754920393E-7	IMPLEMENTATION	6.150210705995265E-7	DESIGN	2.3741079765576713E-8	TEST	1.80018779769591E-8	DOCUMENTATION	4.805418902380737E-9	DEFECT
// We need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.9999964696243729	WITHOUT_CLASSIFICATION	1.878497084626528E-6	DEFECT	7.170557435898093E-7	IMPLEMENTATION	6.259947564732745E-7	DESIGN	1.8829289743390285E-7	TEST	1.2053514481799563E-7	DOCUMENTATION
// we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.9996341942531256	WITHOUT_CLASSIFICATION	2.976037275419299E-4	DESIGN	4.625714234631633E-5	IMPLEMENTATION	1.7467572913654916E-5	DOCUMENTATION	3.1265947735524356E-6	TEST	1.3507092987321718E-6	DEFECT
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9997906843681208	WITHOUT_CLASSIFICATION	1.3750170825916033E-4	DESIGN	5.142577705973942E-5	DEFECT	2.0265411852423273E-5	IMPLEMENTATION	9.40193699548029E-8	DOCUMENTATION	2.8715337920477372E-8	TEST
// Generate implicit joins, only if necessary.	WITHOUT_CLASSIFICATION	0.9999884793053841	WITHOUT_CLASSIFICATION	9.292932497350992E-6	DESIGN	1.0554209308750289E-6	IMPLEMENTATION	9.37269356628844E-7	TEST	1.6844555881771966E-7	DOCUMENTATION	6.662627217762703E-8	DEFECT
// Notify the FROM element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.9999925054741674	WITHOUT_CLASSIFICATION	6.00048900634143E-6	IMPLEMENTATION	5.955966633900107E-7	DEFECT	4.867708598985754E-7	TEST	3.949645936280862E-7	DESIGN	1.670470935651351E-8	DOCUMENTATION
// Turn off includeSubclasses on all FromElements.	WITHOUT_CLASSIFICATION	0.9977778815631825	WITHOUT_CLASSIFICATION	0.002219982450246463	DESIGN	9.566331729370145E-7	DEFECT	6.667811079322125E-7	IMPLEMENTATION	3.613218285884023E-7	DOCUMENTATION	1.5125046149481593E-7	TEST
// create the node initially with the param name so that it shows // appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.9989479478652812	WITHOUT_CLASSIFICATION	8.322941225744438E-4	IMPLEMENTATION	1.660764417576273E-4	DESIGN	3.742068308455198E-5	DEFECT	1.5414423674005203E-5	TEST	8.464636282787527E-7	DOCUMENTATION
// Use the delegate, resolve identifiers as FROM element aliases.	WITHOUT_CLASSIFICATION	0.9999992487055299	WITHOUT_CLASSIFICATION	6.781541334911936E-7	IMPLEMENTATION	7.12334168251566E-8	DESIGN	1.0343811994508514E-9	TEST	7.89567015730736E-10	DOCUMENTATION	8.29714463663209E-11	DEFECT
// select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.9999980162878516	WITHOUT_CLASSIFICATION	6.12802515850235E-7	IMPLEMENTATION	5.505260358277944E-7	DEFECT	4.10795956967283E-7	TEST	4.067511927182545E-7	DESIGN	2.8364469836488375E-9	DOCUMENTATION
// no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.9911646529957683	WITHOUT_CLASSIFICATION	0.005814068069831625	DESIGN	0.002890600568491994	IMPLEMENTATION	1.2066590921258753E-4	TEST	6.711046667457486E-6	DOCUMENTATION	3.3014100281110695E-6	DEFECT
// Make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.9999299937643746	WITHOUT_CLASSIFICATION	6.815802185552938E-5	IMPLEMENTATION	8.53361319394943E-7	DESIGN	6.67192004416572E-7	TEST	2.933007723952512E-7	DEFECT	3.435967366060048E-8	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999617506670301	WITHOUT_CLASSIFICATION	2.8219260395957132E-5	IMPLEMENTATION	8.922044966239947E-6	DESIGN	5.176543320974547E-7	DEFECT	3.4243468451239085E-7	TEST	2.479385910993138E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999986559870773	WITHOUT_CLASSIFICATION	6.824434754920393E-7	IMPLEMENTATION	6.150210705995265E-7	DESIGN	2.3741079765576713E-8	TEST	1.80018779769591E-8	DOCUMENTATION	4.805418902380737E-9	DEFECT
// --Commented out by Inspection (12/11/04 10:56 AM): int getWarningCount();	WITHOUT_CLASSIFICATION	0.9999056436557874	WITHOUT_CLASSIFICATION	8.368805251014649E-5	DEFECT	7.673124466546432E-6	IMPLEMENTATION	1.7303755083619932E-6	DOCUMENTATION	1.1440152985381941E-6	DESIGN	1.2077642914884673E-7	TEST
// Alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.999999418471048	WITHOUT_CLASSIFICATION	4.611483677706977E-7	DESIGN	1.0049412929449037E-7	IMPLEMENTATION	1.5261981658350725E-8	DOCUMENTATION	3.974371400177648E-9	DEFECT	6.501019077243634E-10	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999991475008521	WITHOUT_CLASSIFICATION	4.033169435403749E-7	DESIGN	1.685654287084944E-7	DEFECT	1.6067639551827345E-7	IMPLEMENTATION	7.25728856646811E-8	TEST	4.736749447561959E-8	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.9999444758068817	WITHOUT_CLASSIFICATION	4.5456171554311365E-5	DESIGN	3.5568396287873503E-6	DEFECT	2.9576971700599244E-6	IMPLEMENTATION	2.711238180001912E-6	TEST	8.422465851443558E-7	DOCUMENTATION
// just do the regular thing if you can't find the ctor // Your AST must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.9739783951516625	WITHOUT_CLASSIFICATION	0.02595650349186393	DESIGN	6.310485393678471E-5	IMPLEMENTATION	1.7171603166578787E-6	TEST	2.521935114505295E-7	DOCUMENTATION	2.7148708691903892E-8	DEFECT
// Initialize SQL nodes here.	WITHOUT_CLASSIFICATION	0.9999970809723264	WITHOUT_CLASSIFICATION	2.2901937551300954E-6	DESIGN	2.960896447855084E-7	TEST	2.164303536033217E-7	IMPLEMENTATION	9.359058764875101E-8	DEFECT	2.272333245583953E-8	DOCUMENTATION
// semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999292125198169	WITHOUT_CLASSIFICATION	5.697881951451452E-5	DESIGN	1.203879143968234E-5	DEFECT	1.1646766355481011E-6	DOCUMENTATION	3.395196133219054E-7	IMPLEMENTATION	2.6567297994781364E-7	TEST
// if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999998686995917	WITHOUT_CLASSIFICATION	8.728193283525354E-8	IMPLEMENTATION	3.784886334979107E-8	DEFECT	4.698789537223591E-9	TEST	7.886424047870043E-10	DOCUMENTATION	6.821802456167948E-10	DESIGN
// this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.9999999739388568	WITHOUT_CLASSIFICATION	1.9616177448961597E-8	DESIGN	2.091469393407769E-9	DEFECT	1.965127287788323E-9	IMPLEMENTATION	1.2582127424579094E-9	TEST	1.1301564212218423E-9	DOCUMENTATION
// --- Inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.999968236631259	WITHOUT_CLASSIFICATION	3.039551797638061E-5	DESIGN	6.196203215267898E-7	IMPLEMENTATION	4.2990169858837875E-7	TEST	2.9670342690177445E-7	DEFECT	2.162531754066888E-8	DOCUMENTATION
// check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.9999853893348887	WITHOUT_CLASSIFICATION	1.434050781327093E-5	IMPLEMENTATION	1.4342994323512127E-7	DEFECT	5.763263541550627E-8	DOCUMENTATION	4.34076734486506E-8	DESIGN	2.5687045947584806E-8	TEST
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9984535121720532	WITHOUT_CLASSIFICATION	0.0013343024467748793	DESIGN	8.378911869780322E-5	DEFECT	6.247921169673682E-5	IMPLEMENTATION	3.7384276562327543E-5	TEST	2.853277421478978E-5	DOCUMENTATION
// these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.999998695704448	WITHOUT_CLASSIFICATION	1.2072327025568E-6	IMPLEMENTATION	6.13096855943918E-8	DESIGN	2.93318255838419E-8	TEST	6.009432995283523E-9	DOCUMENTATION	4.1190519763363923E-10	DEFECT
// again, both should be FromElements	WITHOUT_CLASSIFICATION	0.9999646657860758	WITHOUT_CLASSIFICATION	3.019993461908172E-5	DESIGN	4.153155515882593E-6	IMPLEMENTATION	7.232866892346592E-7	TEST	1.4760285217287852E-7	DEFECT	1.1023424787144972E-7	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9998476891483156	WITHOUT_CLASSIFICATION	6.929758618481497E-5	DEFECT	6.305822301167219E-5	IMPLEMENTATION	1.293937508709513E-5	DESIGN	6.873938926520603E-6	TEST	1.4172847417151092E-7	DOCUMENTATION
// right represents a joins originating from left; or // both right and left reprersent joins originating from the same FromElement	WITHOUT_CLASSIFICATION	0.9999996449933839	WITHOUT_CLASSIFICATION	2.882442926867424E-7	DESIGN	6.17046779590817E-8	DEFECT	4.406417527222486E-9	IMPLEMENTATION	3.4411884041317615E-10	TEST	3.0710899626577355E-10	DOCUMENTATION
// check a set of parent/child nodes in the from-clause tree // to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.999988947537797	WITHOUT_CLASSIFICATION	9.699071788591046E-6	DESIGN	1.326194940126226E-6	DEFECT	1.9443806058254456E-8	TEST	5.02076037578941E-9	IMPLEMENTATION	2.730907893656999E-9	DOCUMENTATION
// right represents a joins originating from left...	WITHOUT_CLASSIFICATION	0.999997094268371	WITHOUT_CLASSIFICATION	2.0993775883580508E-6	DESIGN	7.532317228401517E-7	DEFECT	4.172299562482516E-8	IMPLEMENTATION	7.98618572330534E-9	TEST	3.413136394213976E-9	DOCUMENTATION
// all clear	WITHOUT_CLASSIFICATION	0.9999975511687691	WITHOUT_CLASSIFICATION	1.76549041896409E-6	IMPLEMENTATION	5.272666895421742E-7	DESIGN	8.450652021877002E-8	DEFECT	3.9865113713888764E-8	DOCUMENTATION	3.170248845662599E-8	TEST
// Ignore the token class name parameter, and use a specific token class.	WITHOUT_CLASSIFICATION	0.9999571746158725	WITHOUT_CLASSIFICATION	4.279288573560014E-5	DESIGN	2.8392299068847192E-8	DOCUMENTATION	2.5469754833144134E-9	IMPLEMENTATION	1.2957487254362935E-9	DEFECT	2.633685880691063E-10	TEST
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9995198842522959	WITHOUT_CLASSIFICATION	4.5148495448475647E-4	DESIGN	1.027146706554538E-5	TEST	8.43007234283526E-6	IMPLEMENTATION	5.170530647242811E-6	DEFECT	4.758723163862047E-6	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9995198842522959	WITHOUT_CLASSIFICATION	4.5148495448475647E-4	DESIGN	1.027146706554538E-5	TEST	8.43007234283526E-6	IMPLEMENTATION	5.170530647242811E-6	DEFECT	4.758723163862047E-6	DOCUMENTATION
// remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.9930977571195312	WITHOUT_CLASSIFICATION	0.0068580425267808	DESIGN	2.0214130749977692E-5	IMPLEMENTATION	1.7931783747716237E-5	DEFECT	4.444042062854156E-6	TEST	1.6103971273838E-6	DOCUMENTATION
// don't care about other param types here, just those explicitly user-defined...	WITHOUT_CLASSIFICATION	0.9969179878063854	WITHOUT_CLASSIFICATION	0.00308190931926942	DESIGN	8.748098927609378E-8	TEST	1.3350261905091377E-8	DEFECT	1.8266084228099015E-9	DOCUMENTATION	2.1648560099944792E-10	IMPLEMENTATION
// If the query is already compiled, skip the compilation.	WITHOUT_CLASSIFICATION	0.9923431465876911	WITHOUT_CLASSIFICATION	0.007630204890408245	IMPLEMENTATION	2.557206175594867E-5	DEFECT	4.841774701603133E-7	DESIGN	4.1649727178977834E-7	TEST	1.7578540276501915E-7	DOCUMENTATION
// Remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.9996501145034813	WITHOUT_CLASSIFICATION	2.1433418127516109E-4	IMPLEMENTATION	1.296397567931418E-4	DESIGN	3.5676774331884224E-6	DEFECT	2.195049227095232E-6	TEST	1.4883179009480832E-7	DOCUMENTATION
// PHASE 1 : Parse the HQL into an AST.	WITHOUT_CLASSIFICATION	0.9992301650264286	WITHOUT_CLASSIFICATION	7.481678407473268E-4	DESIGN	1.0791177725378065E-5	DEFECT	6.2190207134437954E-6	IMPLEMENTATION	2.6125772810692007E-6	TEST	2.044357104151686E-6	DOCUMENTATION
// PHASE 2 : Analyze the HQL AST, and produce an SQL AST.	WITHOUT_CLASSIFICATION	0.9999831566276682	WITHOUT_CLASSIFICATION	1.3015212456583185E-5	DESIGN	3.20843920812789E-6	DEFECT	3.551973886680529E-7	IMPLEMENTATION	2.4107196445706597E-7	DOCUMENTATION	2.3451313701927918E-8	TEST
// PHASE 3 : Generate the SQL.	WITHOUT_CLASSIFICATION	0.9998227498290749	WITHOUT_CLASSIFICATION	1.1278890073337922E-4	DESIGN	5.975288439560183E-5	IMPLEMENTATION	2.8513517558894675E-6	TEST	1.7405557025651609E-6	DOCUMENTATION	1.1647833764552649E-7	DEFECT
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999997998939489	WITHOUT_CLASSIFICATION	1.342931052471651E-7	DEFECT	5.997333753519962E-8	DESIGN	3.0537445236812632E-9	TEST	2.628998987135687E-9	IMPLEMENTATION	1.568647015163561E-10	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999997998939489	WITHOUT_CLASSIFICATION	1.342931052471651E-7	DEFECT	5.997333753519962E-8	DESIGN	3.0537445236812632E-9	TEST	2.628998987135687E-9	IMPLEMENTATION	1.568647015163561E-10	DOCUMENTATION
//only needed during compilation phase...	WITHOUT_CLASSIFICATION	0.9999175247999381	WITHOUT_CLASSIFICATION	4.700644955248316E-5	IMPLEMENTATION	1.812742362274964E-5	DESIGN	1.3750657941577434E-5	DEFECT	2.2314288368559902E-6	DOCUMENTATION	1.3592401081131173E-6	TEST
// Transform the tree.	WITHOUT_CLASSIFICATION	0.9999950764334808	WITHOUT_CLASSIFICATION	3.2777816901073653E-6	IMPLEMENTATION	1.2700689757294626E-6	DESIGN	1.8689423144289028E-7	DOCUMENTATION	1.5732937519821559E-7	TEST	3.149224672916295E-8	DEFECT
// Parse the query string into an HQL AST.	WITHOUT_CLASSIFICATION	0.9992818886474697	WITHOUT_CLASSIFICATION	6.919151261863231E-4	DESIGN	1.6488750567297437E-5	DEFECT	4.427228690789564E-6	TEST	3.34552623628648E-6	IMPLEMENTATION	1.9347208497218284E-6	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.999938349026463	WITHOUT_CLASSIFICATION	5.527044453034272E-5	DESIGN	4.031689307005936E-6	IMPLEMENTATION	1.2311556533552942E-6	DOCUMENTATION	6.119866085262085E-7	TEST	5.056974377841192E-7	DEFECT
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.999938349026463	WITHOUT_CLASSIFICATION	5.527044453034272E-5	DESIGN	4.031689307005936E-6	IMPLEMENTATION	1.2311556533552942E-6	DOCUMENTATION	6.119866085262085E-7	TEST	5.056974377841192E-7	DEFECT
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.999938349026463	WITHOUT_CLASSIFICATION	5.527044453034272E-5	DESIGN	4.031689307005936E-6	IMPLEMENTATION	1.2311556533552942E-6	DOCUMENTATION	6.119866085262085E-7	TEST	5.056974377841192E-7	DEFECT
// NOTE : ( max - 1 ) because first is zero-based while max is not...	WITHOUT_CLASSIFICATION	0.9998320673097555	WITHOUT_CLASSIFICATION	1.0126967782448771E-4	IMPLEMENTATION	5.258911444051396E-5	DEFECT	7.119923232475903E-6	TEST	6.44063866085402E-6	DESIGN	5.133360862443788E-7	DOCUMENTATION
// -- Package local methods for the QueryLoader delegate --	WITHOUT_CLASSIFICATION	0.9992028617991949	WITHOUT_CLASSIFICATION	7.965506865248022E-4	DESIGN	3.05287369351013E-7	IMPLEMENTATION	1.376581673653989E-7	TEST	8.581602124230931E-8	DEFECT	5.875272241054674E-8	DOCUMENTATION
// If there are no collection fetches, then no further checks are needed	WITHOUT_CLASSIFICATION	0.9558834644897761	WITHOUT_CLASSIFICATION	0.04409085658469931	IMPLEMENTATION	1.810177114961449E-5	TEST	3.958060535488306E-6	DEFECT	2.3226996027476174E-6	DOCUMENTATION	1.2963942368118316E-6	DESIGN
// A shallow query is ok (although technically there should be no fetching here...)	WITHOUT_CLASSIFICATION	0.9808084293352008	WITHOUT_CLASSIFICATION	0.01669558200187895	DEFECT	0.0019461108739862846	IMPLEMENTATION	3.848338149598038E-4	DESIGN	1.6220164690681894E-4	TEST	2.8423270672354984E-6	DOCUMENTATION
// should be the first, but just to be safe...	WITHOUT_CLASSIFICATION	0.9999717777672444	WITHOUT_CLASSIFICATION	1.2029564192439688E-5	IMPLEMENTATION	9.298216881651393E-6	DEFECT	6.3687407011142536E-6	DESIGN	4.6047749978827134E-7	TEST	6.52334805361003E-8	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999986559870773	WITHOUT_CLASSIFICATION	6.824434754920393E-7	IMPLEMENTATION	6.150210705995265E-7	DESIGN	2.3741079765576713E-8	TEST	1.80018779769591E-8	DOCUMENTATION	4.805418902380737E-9	DEFECT
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999986559870773	WITHOUT_CLASSIFICATION	6.824434754920393E-7	IMPLEMENTATION	6.150210705995265E-7	DESIGN	2.3741079765576713E-8	TEST	1.80018779769591E-8	DOCUMENTATION	4.805418902380737E-9	DEFECT
// Impl Note: allows multiple collection fetches as long as the // entire fecthed graph still "points back" to a single // root entity for return	WITHOUT_CLASSIFICATION	0.999782061557849	WITHOUT_CLASSIFICATION	1.487264832780101E-4	DEFECT	5.24906539962884E-5	IMPLEMENTATION	1.667178472957343E-5	DESIGN	4.659110981937241E-8	TEST	2.9290373476325152E-9	DOCUMENTATION
// Otherwise, we have a non-scalar select with defined collection fetch(es). // Make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.9999901399414578	WITHOUT_CLASSIFICATION	8.751728531896405E-6	IMPLEMENTATION	5.529733690398837E-7	DEFECT	5.350332531161934E-7	DESIGN	1.955029392413536E-8	TEST	7.730942723477697E-10	DOCUMENTATION
// This is not strictly true.  We actually just need to make sure that // it is ordered by root-entity PK and that that order-by comes before // any non-root-entity ordering...	WITHOUT_CLASSIFICATION	0.9977128578722398	WITHOUT_CLASSIFICATION	0.001484825055386504	IMPLEMENTATION	7.381517259151778E-4	DESIGN	5.864505629990318E-5	DEFECT	5.251520978975496E-6	TEST	2.6876917963132614E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.9999993840462053	WITHOUT_CLASSIFICATION	1.8885356723954038E-7	DEFECT	1.7332769207699635E-7	DESIGN	1.714400333068009E-7	IMPLEMENTATION	7.281419725073543E-8	DOCUMENTATION	9.518304735542425E-9	TEST
// igndore it...	WITHOUT_CLASSIFICATION	0.9999325349744677	WITHOUT_CLASSIFICATION	3.785494810433182E-5	DESIGN	1.7047908279981244E-5	DEFECT	1.022694765261261E-5	IMPLEMENTATION	1.3643725510288951E-6	DOCUMENTATION	9.708489443480598E-7	TEST
// we are now at a new tree level	WITHOUT_CLASSIFICATION	0.9999963005321485	WITHOUT_CLASSIFICATION	2.0878819422187516E-6	DESIGN	1.0828244550537677E-6	DEFECT	2.0846218406456523E-7	IMPLEMENTATION	1.807004777826722E-7	TEST	1.3959879228117978E-7	DOCUMENTATION
// [jsd] The fix for HHH-558...	WITHOUT_CLASSIFICATION	0.9996524778157349	WITHOUT_CLASSIFICATION	2.8856353056582086E-4	DESIGN	5.296978113490397E-5	DEFECT	2.8519244803771304E-6	IMPLEMENTATION	2.081124054720086E-6	TEST	1.0558240294178515E-6	DOCUMENTATION
// If the token can tell us if it could be an identifier...	WITHOUT_CLASSIFICATION	0.9999952904771993	WITHOUT_CLASSIFICATION	4.078299023327611E-6	DESIGN	4.751857873681372E-7	IMPLEMENTATION	1.2467143005215358E-7	TEST	2.610615462638412E-8	DEFECT	5.2604053468431295E-9	DOCUMENTATION
// ... and the expected token type was an identifier, then:	WITHOUT_CLASSIFICATION	0.9999997639092761	WITHOUT_CLASSIFICATION	1.6892218292105686E-7	DESIGN	3.437780112552186E-8	DEFECT	1.979748186040889E-8	DOCUMENTATION	9.86396831965464E-9	TEST	3.1292895692683422E-9	IMPLEMENTATION
// Use the token as an identifier.	WITHOUT_CLASSIFICATION	0.9999999845145496	WITHOUT_CLASSIFICATION	7.914314067591843E-9	IMPLEMENTATION	2.702886443528814E-9	DESIGN	2.3565065032854856E-9	TEST	1.4213001387760745E-9	DEFECT	1.0904431984837953E-9	DOCUMENTATION
// Add the token to the AST.	WITHOUT_CLASSIFICATION	0.9999931953362052	WITHOUT_CLASSIFICATION	3.9591485380976074E-6	IMPLEMENTATION	1.9809309743164882E-6	DOCUMENTATION	4.032767031251239E-7	TEST	2.360265431079304E-7	DESIGN	2.2528103605875972E-7	DEFECT
// (NOT (EQ a b) ) => (NE a b)	WITHOUT_CLASSIFICATION	0.999998728153768	WITHOUT_CLASSIFICATION	6.105539380334555E-7	IMPLEMENTATION	4.2155779055548373E-7	DESIGN	9.245834098850855E-8	TEST	9.071676619817104E-8	DEFECT	5.6559396227949216E-8	DOCUMENTATION
// (NOT (NE a b) ) => (EQ a b)	WITHOUT_CLASSIFICATION	0.999998728153768	WITHOUT_CLASSIFICATION	6.105539380334555E-7	IMPLEMENTATION	4.2155779055548373E-7	DESIGN	9.245834098850855E-8	TEST	9.071676619817104E-8	DEFECT	5.6559396227949216E-8	DOCUMENTATION
// (NOT (LT a b) ) => (GE a b)	WITHOUT_CLASSIFICATION	0.9999990014262644	WITHOUT_CLASSIFICATION	4.410525357303363E-7	IMPLEMENTATION	3.671066338860975E-7	DESIGN	7.95425912031593E-8	DEFECT	6.652795712473681E-8	TEST	4.43440176221782E-8	DOCUMENTATION
// (NOT (GE a b) ) => (LT a b)	WITHOUT_CLASSIFICATION	0.9999990014262644	WITHOUT_CLASSIFICATION	4.410525357303363E-7	IMPLEMENTATION	3.671066338860975E-7	DESIGN	7.95425912031593E-8	DEFECT	6.652795712473681E-8	TEST	4.43440176221782E-8	DOCUMENTATION
// (NOT (LE a b) ) => (GT a b)	WITHOUT_CLASSIFICATION	0.9999993262017369	WITHOUT_CLASSIFICATION	4.179935631644216E-7	IMPLEMENTATION	1.3084373676896936E-7	DESIGN	5.04886617945114E-8	DEFECT	4.561275150543807E-8	TEST	2.8859549813482088E-8	DOCUMENTATION
// (NOT (LIKE a b) ) => (NOT_LIKE a b)	WITHOUT_CLASSIFICATION	0.999998421671307	WITHOUT_CLASSIFICATION	7.223861819285477E-7	IMPLEMENTATION	5.243541277938286E-7	DESIGN	2.2308190566660501E-7	DEFECT	6.502335421966113E-8	TEST	4.348312331031906E-8	DOCUMENTATION
// (NOT (NOT_LIKE a b) ) => (LIKE a b)	WITHOUT_CLASSIFICATION	0.999998421671307	WITHOUT_CLASSIFICATION	7.223861819285477E-7	IMPLEMENTATION	5.243541277938286E-7	DESIGN	2.2308190566660501E-7	DEFECT	6.502335421966113E-8	TEST	4.348312331031906E-8	DOCUMENTATION
// (NOT (IS_NOT_NULL a b) ) => (IS_NULL a b)	WITHOUT_CLASSIFICATION	0.999996101886479	WITHOUT_CLASSIFICATION	2.3538966584736074E-6	DESIGN	1.112646408516637E-6	IMPLEMENTATION	2.849228481429481E-7	DEFECT	7.725510063418943E-8	DOCUMENTATION	6.93925052424925E-8	TEST
// (NOT (BETWEEN a b) ) => (NOT_BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999959547730517	WITHOUT_CLASSIFICATION	1.8746445490942866E-6	IMPLEMENTATION	1.266662901771185E-6	DESIGN	5.712766720268665E-7	DEFECT	2.1273269765867962E-7	TEST	1.1991012775740895E-7	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999928544938745	WITHOUT_CLASSIFICATION	4.805035835559032E-6	DESIGN	1.5781486358907508E-6	IMPLEMENTATION	5.459326436668781E-7	DEFECT	1.4674090381189934E-7	TEST	6.964810654521944E-8	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9995198842522959	WITHOUT_CLASSIFICATION	4.5148495448475647E-4	DESIGN	1.027146706554538E-5	TEST	8.43007234283526E-6	IMPLEMENTATION	5.170530647242811E-6	DEFECT	4.758723163862047E-6	DOCUMENTATION
// if // if // Otherwise, handle the error normally.	WITHOUT_CLASSIFICATION	0.9998647307688586	WITHOUT_CLASSIFICATION	1.0321164376953182E-4	IMPLEMENTATION	1.5717111323419906E-5	DEFECT	1.536772727414337E-5	DESIGN	7.463223243950334E-7	TEST	2.2642644983013925E-7	DOCUMENTATION
// (NOT (NOT_BETWEEN a b) ) => (BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999959547730517	WITHOUT_CLASSIFICATION	1.8746445490942866E-6	IMPLEMENTATION	1.266662901771185E-6	DESIGN	5.712766720268665E-7	DEFECT	2.1273269765867962E-7	TEST	1.1991012775740895E-7	DOCUMENTATION
/* This can never happen because this rule will always eliminate the child NOT.	WITHOUT_CLASSIFICATION	0.9987021722303253	WITHOUT_CLASSIFICATION	0.0011393751917313341	DESIGN	1.4645431638206564E-4	IMPLEMENTATION	9.947341620399168E-6	DEFECT	1.6246917779325795E-6	DOCUMENTATION	4.262281629895334E-7	TEST
// Just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9999834718545494	WITHOUT_CLASSIFICATION	1.55102316425021E-5	IMPLEMENTATION	4.658410566056392E-7	DESIGN	3.1906975006649405E-7	DEFECT	1.4613721427377125E-7	TEST	8.686578727316471E-8	DOCUMENTATION
// (EQ NULL b) => (IS_NULL b)	WITHOUT_CLASSIFICATION	0.999999433903446	WITHOUT_CLASSIFICATION	2.667697287862965E-7	IMPLEMENTATION	1.7801927699722295E-7	DESIGN	4.1962869734751336E-8	TEST	3.9906335954378046E-8	DEFECT	3.94383424498817E-8	DOCUMENTATION
// (EQ a NULL) => (IS_NULL a)	WITHOUT_CLASSIFICATION	0.9999988414734806	WITHOUT_CLASSIFICATION	6.774806655756516E-7	DESIGN	3.6241634864919355E-7	IMPLEMENTATION	4.344271093787407E-8	DEFECT	3.857819848002061E-8	DOCUMENTATION	3.660859567289903E-8	TEST
// NOTE: Because we're using ASTUtil.createParent(), the tree must be created from the bottom up. // IS EMPTY x => (EXISTS (QUERY (SELECT_FROM (FROM x) ) ) )	WITHOUT_CLASSIFICATION	0.9999976213708338	WITHOUT_CLASSIFICATION	1.402524591483711E-6	DESIGN	8.92372164039757E-7	IMPLEMENTATION	6.566608166762432E-8	TEST	1.3585241875973449E-8	DEFECT	4.481087030673572E-9	DOCUMENTATION
// Add NOT if it's negated.	WITHOUT_CLASSIFICATION	0.9999768598863173	WITHOUT_CLASSIFICATION	1.7946543311831164E-5	IMPLEMENTATION	3.04253332692701E-6	TEST	1.4549020757499113E-6	DESIGN	4.6617415621611245E-7	DEFECT	2.2996081196994985E-7	DOCUMENTATION
// Create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.9998214211162183	WITHOUT_CLASSIFICATION	1.7618099360514153E-4	DESIGN	9.657866426628738E-7	TEST	8.506809383276816E-7	IMPLEMENTATION	3.5737834579722325E-7	DOCUMENTATION	2.2404424989286124E-7	DEFECT
// Case 1: Multi token keywords GROUP BY and ORDER BY // The next token ( LT(2) ) should be 'by'... otherwise, this is just an ident.	WITHOUT_CLASSIFICATION	0.9817550326819693	WITHOUT_CLASSIFICATION	0.013055610036382047	DESIGN	0.005172347693881074	DEFECT	7.88176469550052E-6	IMPLEMENTATION	7.742499208164569E-6	TEST	1.3853238639127332E-6	DOCUMENTATION
// Case 2: The current token is after FROM and before '.'.	WITHOUT_CLASSIFICATION	0.9998939611602756	WITHOUT_CLASSIFICATION	1.0435564490047017E-4	DEFECT	9.749661440192749E-7	DESIGN	4.0927329847990585E-7	IMPLEMENTATION	1.8085412679725088E-7	DOCUMENTATION	1.1810125457552689E-7	TEST
// This handles HHH-354, where there is a strange property name in a where clause. // If the lookahead contains a DOT then something that isn't an IDENT...	WITHOUT_CLASSIFICATION	0.9997327055110008	WITHOUT_CLASSIFICATION	2.653665963924938E-4	DESIGN	1.202934059774644E-6	DEFECT	6.320672871643974E-7	TEST	4.752138623452812E-8	IMPLEMENTATION	4.536987345039333E-8	DOCUMENTATION
// See if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.999999989915121	WITHOUT_CLASSIFICATION	7.763290298872514E-9	DESIGN	1.1990425578341186E-9	DEFECT	6.355097651981623E-10	IMPLEMENTATION	2.6809295244170416E-10	TEST	2.189436491488551E-10	DOCUMENTATION
// Set it!	WITHOUT_CLASSIFICATION	0.9999393717723681	WITHOUT_CLASSIFICATION	4.838985125555848E-5	DEFECT	7.172471434113883E-6	DESIGN	2.4292268169478284E-6	TEST	1.7418567847192988E-6	IMPLEMENTATION	8.948213405878072E-7	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999963440015754	WITHOUT_CLASSIFICATION	1.6558900873185054E-6	DESIGN	1.1317686996720128E-6	DEFECT	6.600785398107811E-7	IMPLEMENTATION	1.296224918940625E-7	DOCUMENTATION	7.863860571699599E-8	TEST
// strip the " where "	WITHOUT_CLASSIFICATION	0.999998210962562	WITHOUT_CLASSIFICATION	1.4893541513969123E-6	IMPLEMENTATION	1.573430303820544E-7	TEST	6.285928110463956E-8	DEFECT	4.576175177029106E-8	DESIGN	3.371922324637943E-8	DOCUMENTATION
// Don't really know all the codes required to adequately decipher returned jdbc exceptions here. // simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.9974304613904456	WITHOUT_CLASSIFICATION	0.002479716071309705	DEFECT	7.549157303990787E-5	DESIGN	1.1976912873108194E-5	TEST	2.3206481934391985E-6	IMPLEMENTATION	3.340413820130888E-8	DOCUMENTATION
// at the very least cleanup the data :)	WITHOUT_CLASSIFICATION	0.999984174432787	WITHOUT_CLASSIFICATION	1.2840344618087909E-5	IMPLEMENTATION	2.1690471617728542E-6	DESIGN	4.5519861934922223E-7	DEFECT	2.4714859789767247E-7	TEST	1.138282159504135E-7	DOCUMENTATION
// First, save off the pertinent ids, as the return value	WITHOUT_CLASSIFICATION	0.9999998068312342	WITHOUT_CLASSIFICATION	1.6621827650414425E-7	DESIGN	1.703637694712593E-8	IMPLEMENTATION	6.0802100591674215E-9	DEFECT	2.0148031821527605E-9	TEST	1.8190990178375789E-9	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999830749570806	WITHOUT_CLASSIFICATION	1.5545974990195283E-5	DESIGN	1.087431321108439E-6	IMPLEMENTATION	1.7855826905782884E-7	TEST	6.436672726461657E-8	DEFECT	4.8711611748973576E-8	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999830749570806	WITHOUT_CLASSIFICATION	1.5545974990195283E-5	DESIGN	1.087431321108439E-6	IMPLEMENTATION	1.7855826905782884E-7	TEST	6.436672726461657E-8	DEFECT	4.8711611748973576E-8	DOCUMENTATION
// Start performing the updates	WITHOUT_CLASSIFICATION	0.9999834750848002	WITHOUT_CLASSIFICATION	7.86852883707783E-6	IMPLEMENTATION	6.519227401235692E-6	DEFECT	9.455219783166244E-7	DESIGN	9.429510189482028E-7	TEST	2.486859641404176E-7	DOCUMENTATION
// First, save off the pertinent ids, saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.9999994397937697	WITHOUT_CLASSIFICATION	2.621022403641526E-7	DESIGN	2.2768658248934632E-7	DEFECT	4.098208470973028E-8	TEST	1.716563920964711E-8	IMPLEMENTATION	1.2269683558430098E-8	DOCUMENTATION
// Start performing the deletes	WITHOUT_CLASSIFICATION	0.9999938308754887	WITHOUT_CLASSIFICATION	4.059293041601967E-6	DESIGN	1.2648966099816206E-6	IMPLEMENTATION	4.230773202474106E-7	TEST	3.614177637134711E-7	DEFECT	6.04397756021756E-8	DOCUMENTATION
// otherwise, everything ok.	WITHOUT_CLASSIFICATION	0.9998259621296636	WITHOUT_CLASSIFICATION	1.5061663458133855E-4	IMPLEMENTATION	1.826771705371829E-5	DESIGN	2.929074966919631E-6	TEST	1.4761724566047832E-6	DEFECT	7.482712778657636E-7	DOCUMENTATION
// visit width-first, then depth	WITHOUT_CLASSIFICATION	0.9999884126925708	WITHOUT_CLASSIFICATION	5.489901715860716E-6	IMPLEMENTATION	2.2560385503492456E-6	TEST	1.9010034966324461E-6	DEFECT	1.6049269870132447E-6	DESIGN	3.3543667951005234E-7	DOCUMENTATION
// if the types report logical equivalence, return true...	WITHOUT_CLASSIFICATION	0.999952854595669	WITHOUT_CLASSIFICATION	4.316226167618397E-5	DESIGN	3.425844821251662E-6	IMPLEMENTATION	4.4793726688108347E-7	DEFECT	6.483573739726802E-8	TEST	4.4524829239603325E-8	DOCUMENTATION
// otherwise, perform a "deep equivalence" check...	WITHOUT_CLASSIFICATION	0.992042433336943	WITHOUT_CLASSIFICATION	0.007775563798125932	DESIGN	1.7952187543601175E-4	IMPLEMENTATION	1.2068817252198304E-6	DOCUMENTATION	8.553954333467879E-7	DEFECT	4.1871233647815166E-7	TEST
// If there is no WHERE node, make one.	WITHOUT_CLASSIFICATION	0.9999905439730015	WITHOUT_CLASSIFICATION	3.7263558762372425E-6	DEFECT	3.586176857239786E-6	DESIGN	1.5665847486274008E-6	TEST	5.520118827728062E-7	IMPLEMENTATION	2.4897633640826304E-8	DOCUMENTATION
// inject the WHERE after the parent	WITHOUT_CLASSIFICATION	0.9999951443362511	WITHOUT_CLASSIFICATION	3.0525561756439116E-6	IMPLEMENTATION	1.2455318127077153E-6	DESIGN	2.1543879310748434E-7	TEST	1.8737674974889758E-7	DEFECT	1.5476021771852104E-7	DOCUMENTATION
// Never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9999770446559462	WITHOUT_CLASSIFICATION	2.2584413669282367E-5	DESIGN	2.6124433558785196E-7	IMPLEMENTATION	5.9409820142200576E-8	TEST	3.77700159147019E-8	DEFECT	1.2506212878423728E-8	DOCUMENTATION
// Moved here from SelectClause [jsd]	WITHOUT_CLASSIFICATION	0.9999969811759425	WITHOUT_CLASSIFICATION	2.979377445018682E-6	DESIGN	1.555253650403524E-8	DEFECT	1.4335232566754374E-8	TEST	7.1222161362550874E-9	IMPLEMENTATION	2.4366273490917558E-9	DOCUMENTATION
///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9984535121720532	WITHOUT_CLASSIFICATION	0.0013343024467748793	DESIGN	8.378911869780322E-5	DEFECT	6.247921169673682E-5	IMPLEMENTATION	3.7384276562327543E-5	TEST	2.853277421478978E-5	DOCUMENTATION
// Use the table fromElement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.9999992862914208	WITHOUT_CLASSIFICATION	6.657187506807682E-7	DESIGN	2.036682259265817E-8	IMPLEMENTATION	1.5577096449968044E-8	DEFECT	1.044292683864472E-8	DOCUMENTATION	1.6029826738472088E-9	TEST
// Set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.9999966191562635	WITHOUT_CLASSIFICATION	2.970880884600188E-6	DEFECT	2.5812609123286895E-7	DESIGN	6.679338974599641E-8	IMPLEMENTATION	4.7416620337363666E-8	DOCUMENTATION	3.7626750671790026E-8	TEST
// If the uresolved property path isn't set yet, just use the property name.	WITHOUT_CLASSIFICATION	0.9999973249393149	WITHOUT_CLASSIFICATION	1.5274446520447576E-6	IMPLEMENTATION	1.1037015215268706E-6	DEFECT	2.285624254805149E-8	DESIGN	1.3690704035427204E-8	TEST	7.367565002702558E-9	DOCUMENTATION
// The 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.9999938039443516	WITHOUT_CLASSIFICATION	3.8532289995725185E-6	DEFECT	1.2380567468441323E-6	DESIGN	9.725067311326703E-7	IMPLEMENTATION	7.206811519317166E-8	DOCUMENTATION	6.019505570972632E-8	TEST
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999992190452197	WITHOUT_CLASSIFICATION	3.7961582493839244E-7	DESIGN	2.5868781984237847E-7	IMPLEMENTATION	1.340636678924173E-7	DEFECT	5.669424998780313E-9	TEST	2.9180424885399262E-9	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999992190452197	WITHOUT_CLASSIFICATION	3.7961582493839244E-7	DESIGN	2.5868781984237847E-7	IMPLEMENTATION	1.340636678924173E-7	DEFECT	5.669424998780313E-9	TEST	2.9180424885399262E-9	DOCUMENTATION
// If this dot has already been resolved, stop now.	WITHOUT_CLASSIFICATION	0.999981169363934	WITHOUT_CLASSIFICATION	1.4117673243011943E-5	IMPLEMENTATION	3.2218643884094655E-6	DESIGN	8.950211552737479E-7	TEST	5.353809074630348E-7	DEFECT	6.069637186239155E-8	DOCUMENTATION
// If there is no data type for this node, and we're at the end of the path (top most dot node), then // this might be a Java constant.	WITHOUT_CLASSIFICATION	0.9998001216516136	WITHOUT_CLASSIFICATION	1.866016072756442E-4	DESIGN	1.0918296177165165E-5	DEFECT	1.946688039469028E-6	IMPLEMENTATION	3.0414311629137727E-7	TEST	1.076137779430507E-7	DOCUMENTATION
// The property is a collection...	WITHOUT_CLASSIFICATION	0.9998740018085313	WITHOUT_CLASSIFICATION	1.0227233431360177E-4	DEFECT	1.6968039598151016E-5	DESIGN	6.179575099393431E-6	IMPLEMENTATION	3.9637088169416215E-7	TEST	1.8187157598781863E-7	DOCUMENTATION
// The property is a component...	WITHOUT_CLASSIFICATION	0.9999581427347572	WITHOUT_CLASSIFICATION	2.140042736994517E-5	DEFECT	1.9637740943767155E-5	DESIGN	5.558483644274166E-7	IMPLEMENTATION	1.3676037700377732E-7	TEST	1.264881876855134E-7	DOCUMENTATION
// The property is another class..	WITHOUT_CLASSIFICATION	0.9999936127539729	WITHOUT_CLASSIFICATION	4.7121350382157135E-6	DEFECT	1.5523754522029663E-6	DESIGN	6.169411409994913E-8	TEST	3.287220850666896E-8	DOCUMENTATION	2.816921396880008E-8	IMPLEMENTATION
// Otherwise, this is a primitive type.	WITHOUT_CLASSIFICATION	0.9999875525398064	WITHOUT_CLASSIFICATION	1.0424782846034342E-5	DESIGN	1.7263215463736333E-6	IMPLEMENTATION	1.8459489016394028E-7	TEST	7.372251318881003E-8	DEFECT	3.803839775569329E-8	DOCUMENTATION
//foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.9895268206459952	WITHOUT_CLASSIFICATION	0.0103505290710538	DESIGN	4.341006795022487E-5	IMPLEMENTATION	3.6924305903127686E-5	DEFECT	2.2429525219651023E-5	DOCUMENTATION	1.9886383878095245E-5	TEST
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999891025281237	WITHOUT_CLASSIFICATION	8.687381097631063E-6	DEFECT	2.19809391050931E-6	DESIGN	5.838403212112418E-9	IMPLEMENTATION	4.309717549773952E-9	DOCUMENTATION	1.8487474440389538E-9	TEST
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9994212277438712	WITHOUT_CLASSIFICATION	5.500833696141657E-4	IMPLEMENTATION	2.4316080008430188E-5	DEFECT	2.8642494976351713E-6	DESIGN	7.772914879770583E-7	TEST	7.312655205228092E-7	DOCUMENTATION
// in non-select queries, the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.9999999096746234	WITHOUT_CLASSIFICATION	5.0792242718403854E-8	DEFECT	1.8380609436664366E-8	DESIGN	1.4795029400151394E-8	TEST	5.276370083210361E-9	IMPLEMENTATION	1.0811249501077421E-9	DOCUMENTATION
// this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.9999780805009956	WITHOUT_CLASSIFICATION	2.1856548148331127E-5	DESIGN	5.459275411613973E-8	DEFECT	4.735402731727172E-9	DOCUMENTATION	3.2923662216719988E-9	TEST	3.3033288430345635E-10	IMPLEMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999891025281237	WITHOUT_CLASSIFICATION	8.687381097631063E-6	DEFECT	2.19809391050931E-6	DESIGN	5.838403212112418E-9	IMPLEMENTATION	4.309717549773952E-9	DOCUMENTATION	1.8487474440389538E-9	TEST
// even though we might find a pre-existing element by join path, we may not be able to reuse it...	WITHOUT_CLASSIFICATION	0.998436669296535	WITHOUT_CLASSIFICATION	0.0015619665237561814	DESIGN	9.827582681368275E-7	IMPLEMENTATION	1.608994131801523E-7	DOCUMENTATION	1.5775485698960395E-7	DEFECT	6.276717073763076E-8	TEST
// NOTE : addDuplicateAlias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.9988178068837184	WITHOUT_CLASSIFICATION	7.87444739799117E-4	IMPLEMENTATION	3.8417146143206773E-4	DESIGN	6.535427789679483E-6	DEFECT	3.0953755078410074E-6	DOCUMENTATION	9.461117530249634E-7	TEST
// if the from-clauses are the same, we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.9998507654074258	WITHOUT_CLASSIFICATION	1.4904027104651346E-4	DESIGN	1.2574287271314388E-7	DEFECT	3.655294841776701E-8	TEST	2.6622148878388627E-8	IMPLEMENTATION	5.403557681703172E-9	DOCUMENTATION
// again, null != null here	WITHOUT_CLASSIFICATION	0.9999985320358664	WITHOUT_CLASSIFICATION	5.474680254816514E-7	DESIGN	3.975185604880848E-7	TEST	3.947924498256313E-7	IMPLEMENTATION	9.64720545306344E-8	DEFECT	3.171304324765823E-8	DOCUMENTATION
// If this is an implied join in a from element, then use the impled join type which is part of the // tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.9999609089204645	WITHOUT_CLASSIFICATION	3.9017780336446253E-5	DESIGN	6.531995210744432E-8	DEFECT	3.3267292021317643E-9	TEST	2.7578325227310677E-9	DOCUMENTATION	1.8946851458835426E-9	IMPLEMENTATION
// otherwise (subquery case) dont reuse the fromElement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.9999853135047977	WITHOUT_CLASSIFICATION	9.39974595752615E-6	DESIGN	4.577435482795184E-6	DEFECT	5.139785667736171E-7	IMPLEMENTATION	1.770461991438801E-7	DOCUMENTATION	1.8288996091336014E-8	TEST
// we know only the lhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999587819887363	WITHOUT_CLASSIFICATION	3.5024863911733426E-5	IMPLEMENTATION	4.012668677851046E-6	DESIGN	1.944100069848643E-6	DOCUMENTATION	1.4613598601351047E-7	DEFECT	9.024261814633879E-8	TEST
// the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.9999924350077468	WITHOUT_CLASSIFICATION	7.102961272739846E-6	IMPLEMENTATION	2.7819956813706794E-7	DEFECT	1.053006555030266E-7	DOCUMENTATION	6.523691995668344E-8	TEST	1.3293836918623152E-8	DESIGN
// only the identifier property field name can be a reference to the associated entity's PK...	WITHOUT_CLASSIFICATION	0.9999562384478023	WITHOUT_CLASSIFICATION	4.3691539982260456E-5	DESIGN	3.007484865645776E-8	IMPLEMENTATION	2.184939190440348E-8	DOCUMENTATION	1.7137365515516885E-8	TEST	9.5060943074055E-10	DEFECT
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999777912094946	WITHOUT_CLASSIFICATION	1.792853458043176E-5	DEFECT	1.566046862785455E-6	TEST	1.2469409367920738E-6	DESIGN	1.0829203631130256E-6	IMPLEMENTATION	3.8434776203039033E-7	DOCUMENTATION
// Append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.9994748842434951	WITHOUT_CLASSIFICATION	4.4712609815634536E-4	IMPLEMENTATION	4.8769163273173234E-5	DESIGN	2.1052662986441755E-5	DEFECT	6.9432297365782806E-6	DOCUMENTATION	1.224602352289381E-6	TEST
// If the lhs is a collection, use CollectionPropertyMapping	WITHOUT_CLASSIFICATION	0.9999983638762571	WITHOUT_CLASSIFICATION	1.0287201935806151E-6	DEFECT	5.603387534598918E-7	DESIGN	3.3847620752221106E-8	IMPLEMENTATION	9.690484471768126E-9	TEST	3.5266907003264044E-9	DOCUMENTATION
// Tell the destination fromElement to 'includeSubclasses'.	WITHOUT_CLASSIFICATION	0.9999407783064598	WITHOUT_CLASSIFICATION	5.534728976272927E-5	DESIGN	1.8564081208494732E-6	DOCUMENTATION	7.115355931353513E-7	IMPLEMENTATION	7.044946003488219E-7	TEST	6.019654632809972E-7	DEFECT
// Use theta style (for regression) // Move the node up, after the origin node.	WITHOUT_CLASSIFICATION	0.9999979105575889	WITHOUT_CLASSIFICATION	1.8806947918000386E-6	DESIGN	1.2700901086320241E-7	IMPLEMENTATION	5.814789940411787E-8	DEFECT	1.634723863099441E-8	TEST	7.243470444978972E-9	DOCUMENTATION
// Don't resolve the node again.	WITHOUT_CLASSIFICATION	0.9998719142994683	WITHOUT_CLASSIFICATION	1.2147879988334835E-4	IMPLEMENTATION	3.0235388326645043E-6	DESIGN	2.476620915179148E-6	TEST	6.793854335021038E-7	DOCUMENTATION	4.273554670104961E-7	DEFECT
// for expected parameter type injection, we expect that the lhs represents // some form of property ref and that the children of the in-list represent // one-or-more params.	WITHOUT_CLASSIFICATION	0.9988603113434019	WITHOUT_CLASSIFICATION	0.0011392860838436803	DESIGN	2.3539530781026761E-7	TEST	1.3765225677997057E-7	DOCUMENTATION	2.5042392886038003E-8	IMPLEMENTATION	4.482797015384102E-9	DEFECT
// we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.9999992355336162	WITHOUT_CLASSIFICATION	4.459419604460081E-7	DESIGN	1.539566703508361E-7	TEST	8.569997446201688E-8	IMPLEMENTATION	5.4643943785356986E-8	DOCUMENTATION	2.422383468554555E-8	DEFECT
// we have something like : "? [op] rhs"	WITHOUT_CLASSIFICATION	0.9941598845752802	WITHOUT_CLASSIFICATION	0.004660474417439678	DESIGN	8.680581020946922E-4	IMPLEMENTATION	1.562753704719998E-4	TEST	7.80167024880165E-5	DEFECT	7.729083222531522E-5	DOCUMENTATION
// we have something like : "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.9959981677535857	WITHOUT_CLASSIFICATION	0.0033540906137384126	DESIGN	3.2415990918728863E-4	IMPLEMENTATION	1.6213529164938614E-4	TEST	1.0413674872356037E-4	DEFECT	5.730968311572465E-5	DOCUMENTATION
// we know only the rhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999258311523611	WITHOUT_CLASSIFICATION	6.58403711728016E-5	IMPLEMENTATION	6.191814000509995E-6	DESIGN	1.8218616130800716E-6	DOCUMENTATION	1.9826564010489532E-7	DEFECT	1.165352122770522E-7	TEST
// handle the (assumed) valid cases: // #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.999265756474401	WITHOUT_CLASSIFICATION	5.06135392300309E-4	DESIGN	2.208145830010012E-4	DEFECT	4.226111695119322E-6	IMPLEMENTATION	2.788096460695274E-6	TEST	2.7934214203905515E-7	DOCUMENTATION
// one or the other needs to be a datetime for us to get into this method in the first place...	WITHOUT_CLASSIFICATION	0.7517261062015249	WITHOUT_CLASSIFICATION	0.24826934265331574	DESIGN	2.7851475552337786E-6	TEST	1.4800699361587046E-6	IMPLEMENTATION	1.6218297782596069E-7	DOCUMENTATION	1.2374469022343918E-7	DEFECT
// #3 - note that this is also true of "datetime - :param"...	WITHOUT_CLASSIFICATION	0.9650231814488385	WITHOUT_CLASSIFICATION	0.03424631925405378	DESIGN	6.039287004421506E-4	IMPLEMENTATION	7.002878943838791E-5	TEST	3.164563713895502E-5	DEFECT	2.4896170088238826E-5	DOCUMENTATION
// #2	WITHOUT_CLASSIFICATION	0.9999928538809731	WITHOUT_CLASSIFICATION	3.156668969427932E-6	DEFECT	2.98630640711208E-6	DESIGN	4.904695871965564E-7	IMPLEMENTATION	2.935760137540551E-7	TEST	2.1909804947792676E-7	DOCUMENTATION
// Generate the inner join -- The elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.9999998378630593	WITHOUT_CLASSIFICATION	9.167542948335081E-8	DESIGN	5.999851146582085E-8	IMPLEMENTATION	4.885154484947784E-9	DOCUMENTATION	4.236931054115915E-9	TEST	1.340913971453561E-9	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9997093444773467	WITHOUT_CLASSIFICATION	1.4289548617694598E-4	DESIGN	1.0908830056652743E-4	IMPLEMENTATION	2.28673603721071E-5	DEFECT	9.358243188904882E-6	DOCUMENTATION	6.446132348808841E-6	TEST
// The 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.9999950203372597	WITHOUT_CLASSIFICATION	3.7562823953598663E-6	DEFECT	7.948082046888825E-7	DESIGN	3.9900339015406473E-7	IMPLEMENTATION	2.1817939430457615E-8	TEST	7.750810679610769E-9	DOCUMENTATION
// Add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.9999978868936491	WITHOUT_CLASSIFICATION	1.8359188802438616E-6	IMPLEMENTATION	1.0854894919251296E-7	DOCUMENTATION	9.817429268062793E-8	DESIGN	4.8150571229473604E-8	DEFECT	2.2313657522681927E-8	TEST
// Sometimes use the element table alias, sometimes use the... umm... collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.9999589384200525	WITHOUT_CLASSIFICATION	2.1785214157613483E-5	DESIGN	1.799875699585765E-5	IMPLEMENTATION	6.404853447194527E-7	DOCUMENTATION	3.2812226215800526E-7	DEFECT	3.090011871899835E-7	TEST
// Now, set the text for this node.  It should be the element columns.	WITHOUT_CLASSIFICATION	0.9987082446758856	WITHOUT_CLASSIFICATION	7.989496889538988E-4	IMPLEMENTATION	4.780960688427385E-4	DESIGN	1.4239632196713172E-5	TEST	3.5034900378268994E-7	DEFECT	1.1958511726509497E-7	DOCUMENTATION
// Get the function return value type, based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.9999999672734159	WITHOUT_CLASSIFICATION	2.141077134692247E-8	IMPLEMENTATION	8.245569293525467E-9	DESIGN	1.5479574290047187E-9	DOCUMENTATION	1.1559696406496823E-9	DEFECT	3.6631637250273337E-10	TEST
// This will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.9999612472738111	WITHOUT_CLASSIFICATION	2.1029689451974442E-5	DEFECT	9.858553044777276E-6	DESIGN	7.0030724423124295E-6	IMPLEMENTATION	4.466004292458535E-7	TEST	4.148108207024477E-7	DOCUMENTATION
// mutation depends on the types of nodes invloved...	WITHOUT_CLASSIFICATION	0.9998222300240049	WITHOUT_CLASSIFICATION	1.118835028334884E-4	DESIGN	4.655068453612317E-5	IMPLEMENTATION	1.6092797560870907E-5	DEFECT	2.690464459941959E-6	TEST	5.525266046784399E-7	DOCUMENTATION
// "pass along" our initial embedded parameter node(s) to the first generated // sql fragment so that it can be handled later for parameter binding...	WITHOUT_CLASSIFICATION	0.9999906971806032	WITHOUT_CLASSIFICATION	9.266020197253443E-6	DESIGN	3.5211870365180186E-8	TEST	1.5106746525155009E-9	IMPLEMENTATION	6.859393787957172E-11	DOCUMENTATION	8.060593126598541E-12	DEFECT
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999991836258147	WITHOUT_CLASSIFICATION	7.258988755845149E-7	DESIGN	6.194983221031041E-8	IMPLEMENTATION	1.5686062354041517E-8	DEFECT	1.1609106972097022E-8	TEST	1.2303081462789804E-9	DOCUMENTATION
// Generated select expressions are already resolved, nothing to do.	WITHOUT_CLASSIFICATION	0.9999998774627854	WITHOUT_CLASSIFICATION	8.313901042247185E-8	DESIGN	3.0834978648163525E-8	IMPLEMENTATION	4.781943391025793E-9	TEST	2.007411223646808E-9	DOCUMENTATION	1.7738708294800648E-9	DEFECT
// The path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.9999764876768418	WITHOUT_CLASSIFICATION	2.3382358556937593E-5	DESIGN	8.445119731280422E-8	DEFECT	2.5312954911995092E-8	DOCUMENTATION	1.3259341912557878E-8	IMPLEMENTATION	6.941107131545952E-9	TEST
// The HQL class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.9999975494436688	WITHOUT_CLASSIFICATION	2.427282748950983E-6	DESIGN	1.6422547795511796E-8	DEFECT	4.829726790412212E-9	DOCUMENTATION	1.045178441079767E-9	IMPLEMENTATION	9.761292205377036E-10	TEST
// Associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.9999988552229356	WITHOUT_CLASSIFICATION	8.878991820570588E-7	IMPLEMENTATION	1.239861373149332E-7	DESIGN	8.602054698433051E-8	TEST	4.2010643412004806E-8	DOCUMENTATION	4.860554701487676E-9	DEFECT
// try the parent FromClause...	WITHOUT_CLASSIFICATION	0.9999785166217847	WITHOUT_CLASSIFICATION	2.049993567980056E-5	IMPLEMENTATION	5.334735494559566E-7	DESIGN	2.1074483565152846E-7	DEFECT	1.6344608565025947E-7	DOCUMENTATION	7.577806472672667E-8	TEST
// Add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.999959301060376	WITHOUT_CLASSIFICATION	3.3097524721859365E-5	IMPLEMENTATION	5.154496173663834E-6	DESIGN	1.6279414393220813E-6	TEST	7.332388513507245E-7	DOCUMENTATION	8.573843768367004E-8	DEFECT
// Make sure that all from elements registered with this FROM clause are actually in the AST.	WITHOUT_CLASSIFICATION	0.9999991436915803	WITHOUT_CLASSIFICATION	8.468930986718315E-7	DESIGN	4.765501100570842E-9	IMPLEMENTATION	2.725495699716301E-9	TEST	1.1048253141880562E-9	DOCUMENTATION	8.194989376904445E-10	DEFECT
// Invoke setScalarColumnText on each constructor argument.	WITHOUT_CLASSIFICATION	0.9999987464097523	WITHOUT_CLASSIFICATION	4.0136137669841795E-7	DEFECT	3.8035708399892396E-7	IMPLEMENTATION	2.8434325208793193E-7	DESIGN	1.6940733740709675E-7	DOCUMENTATION	1.8121197626837075E-8	TEST
// Collect the select expressions, skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.9999999970252659	WITHOUT_CLASSIFICATION	1.6449242351921004E-9	DESIGN	8.519301114501827E-10	DEFECT	2.4980353044514607E-10	TEST	2.0524582202294146E-10	IMPLEMENTATION	2.283037838751389E-11	DOCUMENTATION
// return an empty Type array	WITHOUT_CLASSIFICATION	0.9999990242099565	WITHOUT_CLASSIFICATION	9.649214469119124E-7	DESIGN	3.3631457694406984E-9	DOCUMENTATION	2.9445860080412916E-9	IMPLEMENTATION	2.35674153879499E-9	DEFECT	2.2041233728860757E-9	TEST
// Constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.9998774803778145	WITHOUT_CLASSIFICATION	1.1304978059205566E-4	DESIGN	7.226798212497753E-6	DEFECT	1.7286438754640505E-6	IMPLEMENTATION	4.0681816862215693E-7	TEST	1.075813368804409E-7	DOCUMENTATION
// this is the exception returned by ReflectHelper.getConstructor() if it cannot // locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.9999888778058804	WITHOUT_CLASSIFICATION	1.0381412082052258E-5	DESIGN	7.217647262989114E-7	DEFECT	1.6426805735923433E-8	TEST	2.534242862897125E-9	IMPLEMENTATION	5.626258384848978E-11	DOCUMENTATION
// if there is no order by, make one	WITHOUT_CLASSIFICATION	0.9999920019559478	WITHOUT_CLASSIFICATION	4.9443979968577254E-6	TEST	1.791044880000832E-6	DESIGN	7.232469985982594E-7	DEFECT	5.06861197335279E-7	IMPLEMENTATION	3.249297929596099E-8	DOCUMENTATION
// Find the WHERE; if there is no WHERE, find the FROM...	WITHOUT_CLASSIFICATION	0.999995028361558	WITHOUT_CLASSIFICATION	2.375874183634597E-6	DESIGN	1.2926947476288566E-6	TEST	7.221271930840339E-7	IMPLEMENTATION	5.374296742870766E-7	DEFECT	4.351264327728557E-8	DOCUMENTATION
// Now, inject the newly built ORDER BY into the tree	WITHOUT_CLASSIFICATION	0.9999718945352438	WITHOUT_CLASSIFICATION	1.3275162488669918E-5	IMPLEMENTATION	1.013178755901882E-5	DESIGN	2.293475580447125E-6	DOCUMENTATION	1.205622660916821E-6	DEFECT	1.1994164670546879E-6	TEST
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999022885493385	WITHOUT_CLASSIFICATION	4.586195086452094E-5	IMPLEMENTATION	4.5580394600626027E-5	DESIGN	3.4392815111208705E-6	TEST	2.11125553098048E-6	DEFECT	7.185681543142305E-7	DOCUMENTATION
// logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.99999773139864	WITHOUT_CLASSIFICATION	2.009161010854151E-6	DESIGN	1.7154082385703546E-7	IMPLEMENTATION	4.594051521608493E-8	DEFECT	3.8653898948263784E-8	TEST	3.3051111415116884E-9	DOCUMENTATION
// Render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.9999992066954444	WITHOUT_CLASSIFICATION	6.718868362167916E-7	IMPLEMENTATION	9.399542318020188E-8	DESIGN	2.2758056102999983E-8	TEST	3.1061795510715273E-9	DOCUMENTATION	1.558060538987435E-9	DEFECT
// Class names in the FROM clause result in a JoinSequence (the old FromParser does this).	WITHOUT_CLASSIFICATION	0.99998886634506	WITHOUT_CLASSIFICATION	1.0582502265360372E-5	DESIGN	5.095046742855567E-7	DEFECT	2.734511946394592E-8	TEST	1.4195126040063387E-8	DOCUMENTATION	1.0775486716359098E-10	IMPLEMENTATION
// For many-to-many joins, use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.9999946325586104	WITHOUT_CLASSIFICATION	4.054011444803877E-6	DESIGN	1.2449298926353575E-6	IMPLEMENTATION	5.348939274452678E-8	TEST	8.52052798110341E-9	DOCUMENTATION	6.490131415221615E-9	DEFECT
// Otherwise, use the property mapping.	WITHOUT_CLASSIFICATION	0.999978197902688	WITHOUT_CLASSIFICATION	1.7549929924584714E-5	IMPLEMENTATION	2.4687796372610375E-6	DESIGN	1.2874709126530155E-6	DEFECT	4.314919425016092E-7	DOCUMENTATION	6.442489505091076E-8	TEST
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9997637169993652	WITHOUT_CLASSIFICATION	1.707660930171388E-4	DEFECT	4.673251326786407E-5	DESIGN	8.983030800928214E-6	TEST	8.778887683480688E-6	IMPLEMENTATION	1.0224758652308052E-6	DOCUMENTATION
// If the property is a special collection property name, return a CollectionPropertyMapping.	WITHOUT_CLASSIFICATION	0.9999667234857108	WITHOUT_CLASSIFICATION	2.8933800351246675E-5	IMPLEMENTATION	4.013882296174065E-6	DEFECT	2.8246720932514604E-7	DESIGN	3.0568464128624046E-8	DOCUMENTATION	1.579596827522345E-8	TEST
// Collection of components.	WITHOUT_CLASSIFICATION	0.9999629847260533	WITHOUT_CLASSIFICATION	3.567638734783041E-5	DESIGN	4.560748910069802E-7	IMPLEMENTATION	3.345414856989815E-7	DEFECT	2.958849495173161E-7	TEST	2.523852727536076E-7	DOCUMENTATION
// make sure the lhs is "assignable"...	WITHOUT_CLASSIFICATION	0.9999985931694091	WITHOUT_CLASSIFICATION	9.026014433118478E-7	DESIGN	3.139796472552336E-7	DEFECT	1.2811148480137786E-7	TEST	4.818019602528081E-8	IMPLEMENTATION	1.3957819589794347E-8	DOCUMENTATION
// false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.9999724089867376	WITHOUT_CLASSIFICATION	2.6955549886621912E-5	DESIGN	2.3530326504799464E-7	DOCUMENTATION	2.0036934381675646E-7	IMPLEMENTATION	1.0123977038228724E-7	TEST	9.855099659119123E-8	DEFECT
// Register the FromElement with the FROM clause, now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.9999922419255548	WITHOUT_CLASSIFICATION	5.431434950459226E-6	IMPLEMENTATION	2.1025864903597488E-6	DESIGN	1.929841811802438E-7	TEST	1.9710461535814216E-8	DOCUMENTATION	1.1358361619912865E-8	DEFECT
// currently allowed...	WITHOUT_CLASSIFICATION	0.9999737790208375	WITHOUT_CLASSIFICATION	1.2712876591983101E-5	IMPLEMENTATION	5.98807816995465E-6	DEFECT	5.456994030095289E-6	DESIGN	1.8818563658915567E-6	DOCUMENTATION	1.8117400475522214E-7	TEST
// HHH-276 : implied joins in a subselect where clause - The destination needs to be added // to the destination's from clause. // Not sure if this is will fix everything, but it works.	WITHOUT_CLASSIFICATION	0.7302106133072056	WITHOUT_CLASSIFICATION	0.2661538894415955	DEFECT	0.003611292537972592	DESIGN	2.3766680691124613E-5	TEST	3.77358287581473E-7	DOCUMENTATION	6.067424761584871E-8	IMPLEMENTATION
//return classAlias == null ? className : classAlias;	WITHOUT_CLASSIFICATION	0.9978265870439406	WITHOUT_CLASSIFICATION	0.0021724228565081715	DESIGN	4.1190087877148485E-7	DEFECT	2.3368373096341468E-7	IMPLEMENTATION	2.3226644050212156E-7	DOCUMENTATION	1.1224850106383936E-7	TEST
// This is an explicit FROM element.	WITHOUT_CLASSIFICATION	0.9998647538900588	WITHOUT_CLASSIFICATION	1.3331016315816583E-4	DESIGN	1.168515573692126E-6	DEFECT	6.073246930347601E-7	TEST	1.283582227939328E-7	DOCUMENTATION	3.174829343030697E-8	IMPLEMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999022885493385	WITHOUT_CLASSIFICATION	4.586195086452094E-5	IMPLEMENTATION	4.5580394600626027E-5	DESIGN	3.4392815111208705E-6	TEST	2.11125553098048E-6	DEFECT	7.185681543142305E-7	DOCUMENTATION
// Fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.9999895720784094	WITHOUT_CLASSIFICATION	9.011501978021201E-6	IMPLEMENTATION	9.084324160131412E-7	DESIGN	3.192588969279736E-7	DEFECT	1.7105433645428115E-7	TEST	1.7673963099908745E-8	DOCUMENTATION
// If it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.9999738078187558	WITHOUT_CLASSIFICATION	1.8331704992125795E-5	DEFECT	7.790927515700715E-6	IMPLEMENTATION	4.160368720054905E-8	TEST	2.4241167837646408E-8	DESIGN	3.703881305083024E-9	DOCUMENTATION
// Since this is an explicit FROM element, it can't be implied in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999994757331644	WITHOUT_CLASSIFICATION	5.217437980075911E-7	DESIGN	1.2507439535275644E-9	TEST	5.989724968007595E-10	DEFECT	5.977858420445518E-10	DOCUMENTATION	7.55354326560243E-11	IMPLEMENTATION
// Do nothing, eplicit from elements are *always* in the projection list.	WITHOUT_CLASSIFICATION	0.999999322198031	WITHOUT_CLASSIFICATION	5.801859850369694E-7	DESIGN	3.910518126983656E-8	DEFECT	2.4308121637744384E-8	DOCUMENTATION	1.9004543191505712E-8	IMPLEMENTATION	1.519813778038893E-8	TEST
// propertyName refers to something like collection.size...	WITHOUT_CLASSIFICATION	0.9998831175334988	WITHOUT_CLASSIFICATION	9.388147421938566E-5	DESIGN	1.2060395456281502E-5	IMPLEMENTATION	5.878152431356943E-6	DEFECT	3.930139875841528E-6	TEST	1.1323045181708764E-6	DOCUMENTATION
// property name is a sub-path of a component...	WITHOUT_CLASSIFICATION	0.9999977909351506	WITHOUT_CLASSIFICATION	1.5084835108455895E-6	DESIGN	6.701323514096969E-7	DEFECT	1.6892573430622836E-8	IMPLEMENTATION	8.085411594164798E-9	TEST	5.471002164924225E-9	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9994212277438712	WITHOUT_CLASSIFICATION	5.500833696141657E-4	IMPLEMENTATION	2.4316080008430188E-5	DEFECT	2.8642494976351713E-6	DESIGN	7.772914879770583E-7	TEST	7.312655205228092E-7	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999450726495266	WITHOUT_CLASSIFICATION	5.327927583596757E-5	DESIGN	1.601728540603897E-6	TEST	2.461221427043967E-8	DEFECT	1.4072938690510285E-8	IMPLEMENTATION	7.660943857395823E-9	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999991836258147	WITHOUT_CLASSIFICATION	7.258988755845149E-7	DESIGN	6.194983221031041E-8	IMPLEMENTATION	1.5686062354041517E-8	DEFECT	1.1609106972097022E-8	TEST	1.2303081462789804E-9	DOCUMENTATION
// DotNode uses null here...	WITHOUT_CLASSIFICATION	0.9990865399415664	WITHOUT_CLASSIFICATION	5.22625643329973E-4	DESIGN	3.664496566886754E-4	IMPLEMENTATION	1.1990131353642297E-5	TEST	1.0317510616512661E-5	DEFECT	2.077116444763546E-6	DOCUMENTATION
// We represent a from-clause alias	WITHOUT_CLASSIFICATION	0.9999957029780623	WITHOUT_CLASSIFICATION	3.0029765672959047E-6	DESIGN	7.655101684429013E-7	DEFECT	4.186740461789817E-7	IMPLEMENTATION	9.252811090370426E-8	DOCUMENTATION	1.7333044758345684E-8	TEST
// we are the LHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999997015821451	WITHOUT_CLASSIFICATION	1.4773729141383387E-7	DEFECT	9.325692878932131E-8	DESIGN	3.224682888170907E-8	DOCUMENTATION	1.5569400203590338E-8	TEST	9.607405577402979E-9	IMPLEMENTATION
// we are the RHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999995702572484	WITHOUT_CLASSIFICATION	1.854904010372451E-7	DEFECT	1.2847750596143245E-7	DESIGN	5.077573436013212E-8	DOCUMENTATION	4.1036431223077634E-8	IMPLEMENTATION	2.396267898807705E-8	TEST
// we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.9999817095448557	WITHOUT_CLASSIFICATION	9.95780919949478E-6	DESIGN	4.087317632740332E-6	IMPLEMENTATION	3.968865819021893E-6	DEFECT	1.5028549933361262E-7	DOCUMENTATION	1.2617699372964578E-7	TEST
// EARLY EXIT!!!  return so the resolve call explicitly coming from DotNode can // resolve this...	WITHOUT_CLASSIFICATION	0.997817319067085	WITHOUT_CLASSIFICATION	0.0021656212205020484	DESIGN	9.575733833322322E-6	DEFECT	4.450021558509237E-6	DOCUMENTATION	1.5866003765370372E-6	IMPLEMENTATION	1.447356644483009E-6	TEST
// assume this ident's text does *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999751195641559	WITHOUT_CLASSIFICATION	2.3545779259234288E-5	DESIGN	8.908767640304065E-7	DEFECT	3.5045229789288505E-7	TEST	8.580341119261818E-8	DOCUMENTATION	7.524111750226828E-9	IMPLEMENTATION
// just ignore it for now, it'll get resolved later...	WITHOUT_CLASSIFICATION	0.9999818991289503	WITHOUT_CLASSIFICATION	1.2946103898073285E-5	DESIGN	3.734027944511586E-6	DEFECT	1.01954454642894E-6	IMPLEMENTATION	3.8951547932998436E-7	TEST	1.167918160038702E-8	DOCUMENTATION
// This is not actually a constant, but a reference to FROM element.	WITHOUT_CLASSIFICATION	0.9963215150355541	WITHOUT_CLASSIFICATION	0.0036566584804386417	DESIGN	2.1472747784823924E-5	DEFECT	2.556714872730785E-7	IMPLEMENTATION	7.703232261275983E-8	DOCUMENTATION	2.103241248846398E-8	TEST
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999686996531073	WITHOUT_CLASSIFICATION	3.118630803246615E-5	DESIGN	1.025812295902313E-7	DEFECT	5.482698007005808E-9	IMPLEMENTATION	4.106438771617853E-9	DOCUMENTATION	1.8684938466176175E-9	TEST
// these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9999958375834481	WITHOUT_CLASSIFICATION	3.639661611989188E-6	DESIGN	4.360794329285523E-7	IMPLEMENTATION	4.7777243784929325E-8	TEST	3.6471356599221796E-8	DOCUMENTATION	2.426906580264048E-9	DEFECT
// used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.9995676584305426	WITHOUT_CLASSIFICATION	4.1603117702841E-4	DESIGN	1.387056998073388E-5	IMPLEMENTATION	1.807078346671973E-6	DOCUMENTATION	3.852487626485735E-7	TEST	2.4749533882460287E-7	DEFECT
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999953386375605	WITHOUT_CLASSIFICATION	4.328164206375083E-6	DESIGN	2.0410503550335135E-7	DEFECT	8.275602150473758E-8	DOCUMENTATION	2.9069605229810228E-8	IMPLEMENTATION	1.726757099639588E-8	TEST
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999953386375605	WITHOUT_CLASSIFICATION	4.328164206375083E-6	DESIGN	2.0410503550335135E-7	DEFECT	8.275602150473758E-8	DOCUMENTATION	2.9069605229810228E-8	IMPLEMENTATION	1.726757099639588E-8	TEST
// naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.9997117190906625	WITHOUT_CLASSIFICATION	2.8811975591814393E-4	DESIGN	1.1493178537610834E-7	DEFECT	3.6686973231508184E-8	TEST	6.5778053544415895E-9	DOCUMENTATION	2.956855281870017E-9	IMPLEMENTATION
// this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9999969486141985	WITHOUT_CLASSIFICATION	2.733484148809269E-6	DESIGN	1.7981817472552366E-7	IMPLEMENTATION	9.534248243738252E-8	TEST	3.723697628444786E-8	DOCUMENTATION	5.504019280050111E-9	DEFECT
// do *not* over-write the column text, as that has already been // "rendered" during resolve	WITHOUT_CLASSIFICATION	0.9999999877968194	WITHOUT_CLASSIFICATION	8.807326768486673E-9	DESIGN	1.6512232040793845E-9	IMPLEMENTATION	1.6112667384749477E-9	TEST	7.602429044354844E-11	DEFECT	5.733968102380695E-11	DOCUMENTATION
// for some reason the antlr.CommonAST initialization routines force // this method to get called twice.  The first time with an empty string	WITHOUT_CLASSIFICATION	0.9980425221973287	WITHOUT_CLASSIFICATION	0.001956420467028288	DESIGN	1.0522264195654507E-6	TEST	2.756101660751373E-9	IMPLEMENTATION	1.4160900848494578E-9	DOCUMENTATION	9.370318192354585E-10	DEFECT
// Look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.9999998770481439	WITHOUT_CLASSIFICATION	4.2141330747194364E-8	IMPLEMENTATION	4.1679754248849685E-8	DEFECT	2.9496260870480614E-8	DESIGN	6.74450059448487E-9	TEST	2.89000966948515E-9	DOCUMENTATION
// Add to the query spaces.	WITHOUT_CLASSIFICATION	0.9999400673476937	WITHOUT_CLASSIFICATION	5.69405915313187E-5	IMPLEMENTATION	1.2292030578297494E-6	DOCUMENTATION	8.336308964515815E-7	DESIGN	5.122056096844978E-7	DEFECT	4.170212110311203E-7	TEST
// If the from element isn't in the same clause, create a new from element.	WITHOUT_CLASSIFICATION	0.9999969047494536	WITHOUT_CLASSIFICATION	2.209033731134313E-6	DESIGN	8.699101655265945E-7	DEFECT	8.95294245005688E-9	DOCUMENTATION	3.9241170277463445E-9	TEST	3.429590358565391E-9	IMPLEMENTATION
// This is the root level node. // Generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.9998396189386605	WITHOUT_CLASSIFICATION	1.6022519733950358E-4	DESIGN	8.295894748780507E-8	DEFECT	6.725143031307363E-8	TEST	5.1523502389840945E-9	DOCUMENTATION	5.012720684643863E-10	IMPLEMENTATION
// Correlated subqueries create 'special' implied from nodes // because correlated subselects can't use an ANSI-style join	WITHOUT_CLASSIFICATION	0.9999981591478347	WITHOUT_CLASSIFICATION	1.2904250229281178E-6	DEFECT	3.076907550546425E-7	DESIGN	1.4057276840892003E-7	IMPLEMENTATION	9.664434255228407E-8	TEST	5.519276400212386E-9	DOCUMENTATION
// super-duper-classic-parser-regression-testing-mojo-magic...	WITHOUT_CLASSIFICATION	0.9996888684706642	WITHOUT_CLASSIFICATION	3.091078767461663E-4	DESIGN	1.0506883782309805E-6	TEST	6.589508450532565E-7	DEFECT	2.1328330294824235E-7	DOCUMENTATION	1.0073006358634802E-7	IMPLEMENTATION
// A collection of entities...	WITHOUT_CLASSIFICATION	0.9999368125980929	WITHOUT_CLASSIFICATION	2.6380120916900897E-5	IMPLEMENTATION	2.175613752202956E-5	DEFECT	1.0903054461896258E-5	DESIGN	3.0471423823754234E-6	TEST	1.1009466240466216E-6	DOCUMENTATION
// A collection of components...	WITHOUT_CLASSIFICATION	0.9998792976064982	WITHOUT_CLASSIFICATION	7.42530661501612E-5	DESIGN	2.511143318802736E-5	DEFECT	1.8818471450975212E-5	IMPLEMENTATION	1.5872085984488678E-6	TEST	9.322141139519034E-7	DOCUMENTATION
// A collection of scalar elements...	WITHOUT_CLASSIFICATION	0.9998791246299762	WITHOUT_CLASSIFICATION	8.20606126303913E-5	DESIGN	2.6656579070707543E-5	DEFECT	1.0876937129704617E-5	IMPLEMENTATION	6.994154678343632E-7	DOCUMENTATION	5.818257252012825E-7	TEST
// according to both the ANSI-SQL and EJB3 specs, trim can either take // exactly one parameter or a variable number of parameters between 1 and 4. // from the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If only <trim specification> is omitted, BOTH is assumed; // if <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999999956108474	WITHOUT_CLASSIFICATION	1.6075780034815082E-9	DOCUMENTATION	1.2507288039163595E-9	DEFECT	5.42371172327547E-10	IMPLEMENTATION	5.241828157363874E-10	DESIGN	4.6429182513334257E-10	TEST
// Don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.9993779152105134	WITHOUT_CLASSIFICATION	3.835656125198964E-4	DESIGN	2.26367180080115E-4	IMPLEMENTATION	1.0107461921818971E-5	DEFECT	1.648012786630469E-6	TEST	3.9652217794570537E-7	DOCUMENTATION
// Treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.9996669455476314	WITHOUT_CLASSIFICATION	3.0057433228471115E-4	DEFECT	3.144894225625611E-5	DESIGN	7.202030719872571E-7	DOCUMENTATION	2.4732793832394046E-7	TEST	6.364681741515652E-8	IMPLEMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.9984714429302077	WITHOUT_CLASSIFICATION	0.0015203469924731103	DESIGN	3.883145741321714E-6	TEST	3.5751392811879345E-6	DEFECT	6.720968497992787E-7	DOCUMENTATION	7.969544698493902E-8	IMPLEMENTATION
// Create the FROM element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.999999914121643	WITHOUT_CLASSIFICATION	4.781699658794703E-8	DESIGN	2.9581704404271992E-8	IMPLEMENTATION	7.0182106745540075E-9	TEST	1.0714501122566452E-9	DEFECT	3.8999514966455986E-10	DOCUMENTATION
// If the join is implied, then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.9999972773455368	WITHOUT_CLASSIFICATION	1.384598963153618E-6	DEFECT	1.240042002050131E-6	DESIGN	7.85857137635547E-8	IMPLEMENTATION	1.12018924136497E-8	TEST	8.225891832821068E-9	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996693802961176	WITHOUT_CLASSIFICATION	2.1738652352683364E-4	IMPLEMENTATION	5.5526329227518115E-5	DESIGN	4.8221276519080573E-5	DEFECT	8.698864509608273E-6	DOCUMENTATION	7.867100991837695E-7	TEST
// The associated entity is implied, but it must be included in the FROM. // The collection alias is the role.	WITHOUT_CLASSIFICATION	0.9997820041917458	WITHOUT_CLASSIFICATION	2.1355543406066936E-4	DESIGN	3.0661091143853064E-6	TEST	1.1829490134790138E-6	IMPLEMENTATION	1.2420667695477137E-7	DEFECT	6.710938885749502E-8	DOCUMENTATION
// Tag this node as a JOIN. // Don't include subclasses in the join. // This is a clollection join.	WITHOUT_CLASSIFICATION	0.9999759195119978	WITHOUT_CLASSIFICATION	1.668504921515028E-5	DESIGN	6.945868419750495E-6	DEFECT	2.1331861346844975E-7	IMPLEMENTATION	1.4670632834067143E-7	TEST	8.954542547108148E-8	DOCUMENTATION
// Get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.9999987722389471	WITHOUT_CLASSIFICATION	9.264153932379167E-7	DESIGN	1.7293874806903284E-7	TEST	9.900380580648629E-8	DOCUMENTATION	2.6680213986462663E-8	IMPLEMENTATION	2.722891935304482E-9	DEFECT
//  origin, path, implied, columns, classAlias,	WITHOUT_CLASSIFICATION	0.9999971916369167	WITHOUT_CLASSIFICATION	1.8122106849638096E-6	DESIGN	5.996593018617101E-7	IMPLEMENTATION	2.776182799636706E-7	DEFECT	7.570073535624853E-8	DOCUMENTATION	4.3174081185573665E-8	TEST
/*implied*/	WITHOUT_CLASSIFICATION	0.9972459322954907	WITHOUT_CLASSIFICATION	0.001481939281607596	IMPLEMENTATION	0.0012140631368688986	DESIGN	3.431293578956921E-5	DEFECT	1.3916522948712034E-5	TEST	9.835827294510183E-6	DOCUMENTATION
// For implied many-to-many, just add the end join.	WITHOUT_CLASSIFICATION	0.9787405676274071	WITHOUT_CLASSIFICATION	0.021255800957445645	IMPLEMENTATION	2.292080906870158E-6	TEST	5.751460341776564E-7	DEFECT	5.310044972373445E-7	DOCUMENTATION	2.3318370896211146E-7	DESIGN
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996693802961176	WITHOUT_CLASSIFICATION	2.1738652352683364E-4	IMPLEMENTATION	5.5526329227518115E-5	DESIGN	4.8221276519080573E-5	DEFECT	8.698864509608273E-6	DOCUMENTATION	7.867100991837695E-7	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996693802961176	WITHOUT_CLASSIFICATION	2.1738652352683364E-4	IMPLEMENTATION	5.5526329227518115E-5	DESIGN	4.8221276519080573E-5	DEFECT	8.698864509608273E-6	DOCUMENTATION	7.867100991837695E-7	TEST
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999948811935356	WITHOUT_CLASSIFICATION	3.9988346398857344E-6	DEFECT	5.867624608810135E-7	DESIGN	3.881823972343547E-7	IMPLEMENTATION	8.582110713599427E-8	DOCUMENTATION	5.920585921168977E-8	TEST
// This causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.9987286053096738	WITHOUT_CLASSIFICATION	0.001271288747594355	DESIGN	7.941699295886917E-8	DEFECT	1.4536197587471276E-8	TEST	1.1511746340532824E-8	DOCUMENTATION	4.777950459241585E-10	IMPLEMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9999959165904208	WITHOUT_CLASSIFICATION	3.7134413561519352E-6	DESIGN	2.2244677919660143E-7	DEFECT	7.428231697328601E-8	DOCUMENTATION	3.796631186408284E-8	TEST	3.527281504416373E-8	IMPLEMENTATION
// Frontbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9997559704331999	WITHOUT_CLASSIFICATION	1.4439725042229682E-4	IMPLEMENTATION	8.400643403283785E-5	DEFECT	1.362626365964269E-5	DESIGN	1.504629937159489E-6	DOCUMENTATION	4.949887482464687E-7	TEST
/*	WITHOUT_CLASSIFICATION	0.9624352627533524	WITHOUT_CLASSIFICATION	0.02618387964556663	DESIGN	0.007498836067607672	DEFECT	0.003664986289146738	IMPLEMENTATION	1.1191917782725857E-4	DOCUMENTATION	1.0511606649930399E-4	TEST
/*public Type[] getSqlResultTypes() {	WITHOUT_CLASSIFICATION	0.9990710853147079	WITHOUT_CLASSIFICATION	8.851655330310793E-4	DESIGN	3.989057540446999E-5	DEFECT	2.226326688285615E-6	DOCUMENTATION	8.269122947444843E-7	TEST	8.0533787369142E-7	IMPLEMENTATION
// First, collect all of the select expressions. // NOTE: This must be done *before* invoking setScalarColumnText() because setScalarColumnText() // changes the AST!!!	WITHOUT_CLASSIFICATION	0.9999996172878183	WITHOUT_CLASSIFICATION	2.744078059824888E-7	DESIGN	7.74805334959233E-8	IMPLEMENTATION	2.839297241068819E-8	DEFECT	2.1919654397624753E-9	TEST	2.3890439566239084E-10	DOCUMENTATION
// First allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.9994393221124811	WITHOUT_CLASSIFICATION	5.25117035835988E-4	IMPLEMENTATION	3.55382805947992E-5	DESIGN	1.657350897801692E-8	DOCUMENTATION	3.0315270846402615E-9	DEFECT	2.9660521468315946E-9	TEST
//sqlResultTypeList.addAll( constructorArgumentTypeList );	WITHOUT_CLASSIFICATION	0.9999879149985038	WITHOUT_CLASSIFICATION	1.0725965139540934E-5	IMPLEMENTATION	8.41447834844012E-7	DEFECT	2.523014557919691E-7	DOCUMENTATION	1.8138114361802522E-7	TEST	8.390592243709884E-8	DESIGN
// If the data type is not an association type, it could not have been in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999944408936622	WITHOUT_CLASSIFICATION	5.209054787630576E-6	DESIGN	2.112360247046286E-7	TEST	7.794960577530289E-8	DEFECT	5.741081142093633E-8	IMPLEMENTATION	3.4551083157052924E-9	DOCUMENTATION
//sqlResultTypeList.add( type );	WITHOUT_CLASSIFICATION	0.9999970632817844	WITHOUT_CLASSIFICATION	1.2811830358567625E-6	DESIGN	1.057593030809853E-6	IMPLEMENTATION	3.2703842815227975E-7	DEFECT	1.6375850233849583E-7	TEST	1.071452184226615E-7	DOCUMENTATION
// Always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.9999869121952806	WITHOUT_CLASSIFICATION	1.1622520410804009E-5	IMPLEMENTATION	1.3035899623628423E-6	DESIGN	8.16510813475574E-8	DEFECT	6.486281124114036E-8	DOCUMENTATION	1.518045372447738E-8	TEST
// add the fetched entities	WITHOUT_CLASSIFICATION	0.9999995962783654	WITHOUT_CLASSIFICATION	3.430283805390974E-7	IMPLEMENTATION	2.7926913773723822E-8	DOCUMENTATION	2.2512986361508887E-8	TEST	6.385512190362082E-9	DESIGN	3.867841741959587E-9	DEFECT
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999994316362213	WITHOUT_CLASSIFICATION	2.9509002801435914E-7	DEFECT	1.194415225556067E-7	IMPLEMENTATION	9.862205766806728E-8	TEST	4.1865639427136355E-8	DOCUMENTATION	1.3344531108720599E-8	DESIGN
// function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997611125631425	WITHOUT_CLASSIFICATION	1.346478608380693E-4	IMPLEMENTATION	6.63376388060347E-5	DEFECT	3.4076728779097085E-5	DESIGN	2.4314446802943795E-6	DOCUMENTATION	1.3937637541365374E-6	TEST
// If there are any scalars (non-entities) selected, render the select column aliases.	WITHOUT_CLASSIFICATION	0.9999937264241451	WITHOUT_CLASSIFICATION	5.7605314958646205E-6	IMPLEMENTATION	3.492607741364191E-7	DESIGN	8.264371927363609E-8	DEFECT	6.944268504137081E-8	TEST	1.1697180663313741E-8	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999678646384618	WITHOUT_CLASSIFICATION	1.9982900250584494E-5	DEFECT	6.107342563322285E-6	IMPLEMENTATION	4.097101605298194E-6	DESIGN	1.351241176611702E-6	TEST	5.967759422210683E-7	DOCUMENTATION
/*ArrayList sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999905766685119	WITHOUT_CLASSIFICATION	6.137126619372055E-6	DEFECT	2.3738853130242224E-6	IMPLEMENTATION	4.5774390389472375E-7	DESIGN	4.018657575604056E-7	TEST	5.2709894350009154E-8	DOCUMENTATION
//sqlResultTypes = ( Type[] ) sqlResultTypeList.toArray( new Type[sqlResultTypeList.size()] );	WITHOUT_CLASSIFICATION	0.9999990787571703	WITHOUT_CLASSIFICATION	5.805351965095584E-7	DEFECT	1.729052594527662E-7	IMPLEMENTATION	1.2367314964154446E-7	DESIGN	2.6111530739249853E-8	TEST	1.8017693205878135E-8	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995116623586442	WITHOUT_CLASSIFICATION	3.172464267296612E-4	DEFECT	1.1133054106018725E-4	DESIGN	5.495393005126096E-5	IMPLEMENTATION	3.287749049761078E-6	DOCUMENTATION	1.5189944648308735E-6	TEST
//TODO:	WITHOUT_CLASSIFICATION	0.9981003730016246	WITHOUT_CLASSIFICATION	9.673214368257319E-4	DESIGN	4.009287060601391E-4	DEFECT	3.898960489532298E-4	IMPLEMENTATION	8.069843986467145E-5	DOCUMENTATION	6.07823666717522E-5	TEST
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.999999501829116	WITHOUT_CLASSIFICATION	2.833939733399409E-7	DESIGN	1.745259523854022E-7	IMPLEMENTATION	1.7158505718745486E-8	TEST	1.2015887376526635E-8	DOCUMENTATION	1.1076565089219837E-8	DEFECT
// Generate an 2d array of column names, the first dimension is parallel with the // return types array.  The second dimension is the list of column names for each // type.	WITHOUT_CLASSIFICATION	0.9999998779900432	WITHOUT_CLASSIFICATION	1.2135529503637877E-7	DESIGN	3.8079437632876043E-10	DEFECT	1.3487937289765674E-10	IMPLEMENTATION	1.2817316111500232E-10	TEST	1.0814941000686088E-11	DOCUMENTATION
// Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999981777382728	WITHOUT_CLASSIFICATION	1.271322341406336E-6	IMPLEMENTATION	4.6352321200171256E-7	DESIGN	4.082106976366523E-8	TEST	3.154520661227866E-8	DEFECT	1.5049897452569425E-8	DOCUMENTATION
// union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999685425569182	WITHOUT_CLASSIFICATION	2.403482568139327E-5	DESIGN	5.852466371614685E-6	DEFECT	1.2700269456023759E-6	IMPLEMENTATION	1.5875359556398967E-7	TEST	1.4137048757730438E-7	DOCUMENTATION
// Skip 'DISTINCT' and 'ALL', so we return the first expression node.	WITHOUT_CLASSIFICATION	0.9999911606430596	WITHOUT_CLASSIFICATION	4.433302128036098E-6	IMPLEMENTATION	4.0544602117971415E-6	DESIGN	2.655765896808534E-7	DEFECT	5.0038001190881023E-8	DOCUMENTATION	3.598000982378691E-8	TEST
// Create SQL_TOKEN nodes for the columns.	WITHOUT_CLASSIFICATION	0.999994550654227	WITHOUT_CLASSIFICATION	5.269871113714216E-6	DESIGN	1.0796522288355766E-7	TEST	6.107470822475958E-8	IMPLEMENTATION	6.311151274259825E-9	DOCUMENTATION	4.123576854651774E-9	DEFECT
// Generate the property select tokens.	WITHOUT_CLASSIFICATION	0.9999946448267587	WITHOUT_CLASSIFICATION	3.8162859184421615E-6	IMPLEMENTATION	1.3506380577819407E-6	DESIGN	9.983347017796389E-8	DOCUMENTATION	6.118402027855599E-8	TEST	2.723177457724751E-8	DEFECT
// Get the function name node.	WITHOUT_CLASSIFICATION	0.9999924035518092	WITHOUT_CLASSIFICATION	6.5952063160879E-6	IMPLEMENTATION	3.3323755111249216E-7	DESIGN	3.1750680175274154E-7	DOCUMENTATION	2.0283145716243433E-7	TEST	1.4766606468498243E-7	DEFECT
// Method expressions in a SELECT should always be considered scalar.	WITHOUT_CLASSIFICATION	0.9996214295935971	WITHOUT_CLASSIFICATION	3.7756222386663255E-4	DESIGN	9.131004695163989E-7	DEFECT	5.317042879781854E-8	IMPLEMENTATION	3.190516150444964E-8	TEST	1.0006476359768455E-8	DOCUMENTATION
// If this is 'elements' then create a new FROM element.	WITHOUT_CLASSIFICATION	0.9999989891982919	WITHOUT_CLASSIFICATION	8.757737375143514E-7	DESIGN	6.082476526227813E-8	DEFECT	5.227453615825925E-8	TEST	1.6272402529136305E-8	IMPLEMENTATION	5.656266666189277E-9	DOCUMENTATION
// Not elements(x)	WITHOUT_CLASSIFICATION	0.9997982952064187	WITHOUT_CLASSIFICATION	1.2219644152915079E-4	IMPLEMENTATION	5.9130199329659235E-5	DESIGN	1.4622758704421197E-5	DEFECT	3.643117186956279E-6	TEST	2.1122768310564065E-6	DOCUMENTATION
// Dialect function	WITHOUT_CLASSIFICATION	0.9999899733168994	WITHOUT_CLASSIFICATION	4.013443963944529E-6	IMPLEMENTATION	2.863111682565493E-6	DESIGN	2.3765902035752387E-6	DEFECT	5.28559896701431E-7	DOCUMENTATION	2.4497735388216093E-7	TEST
// Collection 'property function'	WITHOUT_CLASSIFICATION	0.9999696073080993	WITHOUT_CLASSIFICATION	2.8998897445666076E-5	DEFECT	1.058347651628311E-6	DESIGN	1.8674475713732775E-7	IMPLEMENTATION	1.0639712149240757E-7	DOCUMENTATION	4.230492471214671E-8	TEST
// If the constant is an IDENT, figure out what it means...	WITHOUT_CLASSIFICATION	0.9999688995692924	WITHOUT_CLASSIFICATION	2.463263220684007E-5	DESIGN	2.9178582387092655E-6	TEST	2.8917910863199625E-6	DEFECT	5.863217018202058E-7	IMPLEMENTATION	7.182747394639082E-8	DOCUMENTATION
// IDENT is a class alias in the FROM.	WITHOUT_CLASSIFICATION	0.9999958693527391	WITHOUT_CLASSIFICATION	4.086336046491335E-6	DESIGN	1.7247113035695075E-8	IMPLEMENTATION	1.1473293982464956E-8	TEST	9.79376936254515E-9	DEFECT	5.797037941555385E-9	DOCUMENTATION
// Resolve to an identity column.	WITHOUT_CLASSIFICATION	0.9999041532499446	WITHOUT_CLASSIFICATION	9.320923639280619E-5	DESIGN	1.1650080111623989E-6	IMPLEMENTATION	6.544275313289729E-7	DOCUMENTATION	6.00632541657298E-7	TEST	2.1744557847228432E-7	DEFECT
// Otherwise, it's a literal.	WITHOUT_CLASSIFICATION	0.9999346620018925	WITHOUT_CLASSIFICATION	5.0555960594643826E-5	IMPLEMENTATION	1.4117100988853163E-5	DESIGN	5.156718424209942E-7	TEST	8.332070503428789E-8	DEFECT	6.594397644047273E-8	DOCUMENTATION
// the name of an entity class	WITHOUT_CLASSIFICATION	0.9999984493897541	WITHOUT_CLASSIFICATION	1.4783878599741584E-6	DESIGN	4.736843199387146E-8	DOCUMENTATION	2.1671981565499317E-8	TEST	1.928159238278872E-9	IMPLEMENTATION	1.2538129887329338E-9	DEFECT
//the class discriminator value	WITHOUT_CLASSIFICATION	0.999994988173682	WITHOUT_CLASSIFICATION	4.962204497945079E-6	DESIGN	3.87529467945178E-8	DEFECT	7.292163883914028E-9	DOCUMENTATION	3.0774389209518556E-9	TEST	4.99270336024945E-10	IMPLEMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999830214832723	WITHOUT_CLASSIFICATION	1.086675167375261E-5	TEST	4.6659548524508485E-6	IMPLEMENTATION	8.197662931995186E-7	DESIGN	5.046195604645939E-7	DEFECT	1.2142434774440795E-7	DOCUMENTATION
// Add a space before the display text.	WITHOUT_CLASSIFICATION	0.9999939362959669	WITHOUT_CLASSIFICATION	6.001942128645685E-6	IMPLEMENTATION	2.5000825383580813E-8	DEFECT	1.9345021702758397E-8	DESIGN	1.122695467576902E-8	DOCUMENTATION	6.189102809920033E-9	TEST
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999924962732065	WITHOUT_CLASSIFICATION	7.008513905956966E-6	IMPLEMENTATION	1.6977872522564263E-7	DESIGN	1.4444603060340933E-7	TEST	1.362246151150355E-7	DEFECT	4.4763516478855334E-8	DOCUMENTATION
// child == parent.getFirstChild()	WITHOUT_CLASSIFICATION	0.9999989011970697	WITHOUT_CLASSIFICATION	1.0515333860640177E-6	IMPLEMENTATION	1.768776256262145E-8	DEFECT	1.545209938742536E-8	DESIGN	7.667370341510295E-9	TEST	6.462311738685938E-9	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999924962732065	WITHOUT_CLASSIFICATION	7.008513905956966E-6	IMPLEMENTATION	1.6977872522564263E-7	DESIGN	1.4444603060340933E-7	TEST	1.362246151150355E-7	DEFECT	4.4763516478855334E-8	DOCUMENTATION
// Filter conditions need to be inserted before the HQL where condition and the // theta join node.  This is because org.hibernate.loader.Loader binds the filter parameters first, // then it binds all the HQL query parameters, see org.hibernate.loader.Loader.processFilterParameters().	WITHOUT_CLASSIFICATION	0.9999998338138422	WITHOUT_CLASSIFICATION	1.61473508843512E-7	DESIGN	2.2783597486675013E-9	DEFECT	1.599242424448417E-9	IMPLEMENTATION	4.5425210959893197E-10	DOCUMENTATION	3.8079462783619393E-10	TEST
// Put the FILTERS node before the HQL condition and theta joins	WITHOUT_CLASSIFICATION	0.9999907809752193	WITHOUT_CLASSIFICATION	4.6589648895266264E-6	IMPLEMENTATION	4.407011232092797E-6	DESIGN	9.931931163339405E-8	DEFECT	3.3229149016649005E-8	DOCUMENTATION	2.0500198291723406E-8	TEST
// add the current fragment to the FILTERS node	WITHOUT_CLASSIFICATION	0.9997779049686969	WITHOUT_CLASSIFICATION	2.108740058913215E-4	IMPLEMENTATION	8.008541730790728E-6	DOCUMENTATION	1.8629898007746807E-6	DESIGN	8.222787597284934E-7	TEST	5.272151204641361E-7	DEFECT
// Create a new THETA_JOINS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999626126734197	WITHOUT_CLASSIFICATION	2.21568419622776E-5	DESIGN	1.4949383200871275E-5	IMPLEMENTATION	1.8329492414829013E-7	DEFECT	6.91232103964094E-8	TEST	2.8683282549974406E-8	DOCUMENTATION
// Put the THETA_JOINS node before the HQL condition, after the filters.	WITHOUT_CLASSIFICATION	0.9999755664840919	WITHOUT_CLASSIFICATION	2.106686063127441E-5	DESIGN	3.2177677676237152E-6	IMPLEMENTATION	1.0477029062123998E-7	TEST	2.332470549814598E-8	DEFECT	2.0792513182612614E-8	DOCUMENTATION
// add the current fragment to the THETA_JOINS node	WITHOUT_CLASSIFICATION	0.9999276283900518	WITHOUT_CLASSIFICATION	6.446714773598396E-5	IMPLEMENTATION	5.640594109949145E-6	DOCUMENTATION	1.5394345068267034E-6	DESIGN	5.576198610931164E-7	TEST	1.6681373430172993E-7	DEFECT
// First, try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.9999997058122706	WITHOUT_CLASSIFICATION	1.518760022868093E-7	DESIGN	5.774076098080439E-8	IMPLEMENTATION	3.6759007695596596E-8	TEST	3.012396156344557E-8	DOCUMENTATION	1.768799685008789E-8	DEFECT
// unable to locate it using this name	WITHOUT_CLASSIFICATION	0.999939752366418	WITHOUT_CLASSIFICATION	5.8862709620652875E-5	DESIGN	1.09304554647068E-6	TEST	1.9513984547344447E-7	DEFECT	7.083617889886198E-8	DOCUMENTATION	2.5902390608665943E-8	IMPLEMENTATION
// If that didn't work, try using the 'import' name.	WITHOUT_CLASSIFICATION	0.9997401211489862	WITHOUT_CLASSIFICATION	2.5383395295467976E-4	DEFECT	2.827345232296513E-6	DESIGN	2.4993179764890183E-6	IMPLEMENTATION	4.443752612394659E-7	DOCUMENTATION	2.738595888488299E-7	TEST
// Implicit joins use theta style (WHERE pk = fk), explicit joins use JOIN (after from)	WITHOUT_CLASSIFICATION	0.9999909598036294	WITHOUT_CLASSIFICATION	5.35033270312003E-6	IMPLEMENTATION	3.461981050292761E-6	DESIGN	1.3697110221183012E-7	DEFECT	5.2114809645686336E-8	DOCUMENTATION	3.879670518265169E-8	TEST
// locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.9999991957445459	WITHOUT_CLASSIFICATION	4.1570349765445956E-7	DESIGN	2.6315770346737686E-7	IMPLEMENTATION	7.735800438786544E-8	DEFECT	2.8848383262746147E-8	TEST	1.918786542282583E-8	DOCUMENTATION
// determine the type of the first argument...	WITHOUT_CLASSIFICATION	0.9999905367008552	WITHOUT_CLASSIFICATION	9.323276965100176E-6	DESIGN	8.568289800891305E-8	DOCUMENTATION	4.2221724419014114E-8	TEST	7.348209929045481E-9	DEFECT	4.7693474013735395E-9	IMPLEMENTATION
// Use the DOT node to emit the first column name. // Create the column names, folled by the column aliases.	WITHOUT_CLASSIFICATION	0.9999988478725452	WITHOUT_CLASSIFICATION	5.916921242427308E-7	DESIGN	2.8117928680515896E-7	IMPLEMENTATION	2.424251524646659E-7	TEST	2.8851147110153672E-8	DEFECT	7.979744105834708E-9	DOCUMENTATION
// Note: this simply constructs a "raw" SQL_TOKEN representing the // where fragment and injects this into the tree.  This "works"; // however it is probably not the best long-term solution. // // At some point we probably want to apply an additional grammar to // properly tokenize this where fragment into constituent parts // focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.6979160304399795	WITHOUT_CLASSIFICATION	0.2553115695429693	DESIGN	0.03900424250049087	DEFECT	0.004881010148320254	IMPLEMENTATION	0.002750274561421245	TEST	1.3687280681895538E-4	DOCUMENTATION
// Append the text of the current node.	WITHOUT_CLASSIFICATION	0.9980294827584769	WITHOUT_CLASSIFICATION	0.0012883608996987822	IMPLEMENTATION	6.156645436393222E-4	DEFECT	3.196759809868526E-5	DOCUMENTATION	2.161169946117022E-5	DESIGN	1.291250062530479E-5	TEST
// If the node has a first child, recurse into the first child.	WITHOUT_CLASSIFICATION	0.9999993472274769	WITHOUT_CLASSIFICATION	5.055934299530861E-7	IMPLEMENTATION	1.2973154836308603E-7	DESIGN	8.657560996686154E-9	TEST	5.713766047852133E-9	DEFECT	3.07621783955601E-9	DOCUMENTATION
// If there is a second child (RHS), recurse into that child.	WITHOUT_CLASSIFICATION	0.9999923108813681	WITHOUT_CLASSIFICATION	7.135171372095014E-6	DESIGN	3.5289642209065617E-7	IMPLEMENTATION	1.7160560328510488E-7	DEFECT	2.0753352147259775E-8	TEST	8.691882241626438E-9	DOCUMENTATION
// Iterate through the alias,JoinSequence pairs and generate SQL token nodes.	WITHOUT_CLASSIFICATION	0.999999377156232	WITHOUT_CLASSIFICATION	6.015995602364146E-7	DESIGN	1.0341091901599237E-8	DOCUMENTATION	6.012514962824948E-9	TEST	4.0989599709211146E-9	IMPLEMENTATION	7.916409717516059E-10	DEFECT
// If the from element represents a JOIN_FRAGMENT and it is // a theta-style join, convert its type from JOIN_FRAGMENT // to FROM_FRAGMENT	WITHOUT_CLASSIFICATION	0.9999984895048726	WITHOUT_CLASSIFICATION	1.441716939247701E-6	DESIGN	3.33478885327399E-8	IMPLEMENTATION	2.219008141761574E-8	DEFECT	1.2090446217560668E-8	TEST	1.149771972756125E-9	DOCUMENTATION
// this is used during SqlGenerator processing	WITHOUT_CLASSIFICATION	0.9997711132372752	WITHOUT_CLASSIFICATION	2.2855682119732613E-4	DESIGN	1.464327876133255E-7	TEST	9.481727976423654E-8	DEFECT	6.3290778223894E-8	DOCUMENTATION	2.5400681825825692E-8	IMPLEMENTATION
// If there is a FROM fragment and the FROM element is an explicit, then add the from part.	WITHOUT_CLASSIFICATION	0.9999990099667128	WITHOUT_CLASSIFICATION	4.5565027450919224E-7	DEFECT	4.5008125052460726E-7	DESIGN	6.637200360786698E-8	TEST	9.167141292082987E-9	IMPLEMENTATION	8.762617340459382E-9	DOCUMENTATION
/*&& StringHelper.isNotEmpty( frag )*/	WITHOUT_CLASSIFICATION	0.9993272083878961	WITHOUT_CLASSIFICATION	3.5910180342111383E-4	IMPLEMENTATION	2.834586895816022E-4	DESIGN	2.683008187402658E-5	DEFECT	2.3507868007143838E-6	TEST	1.0502504264494586E-6	DOCUMENTATION
// The FROM fragment will probably begin with ', '.  Remove this if it is present.	WITHOUT_CLASSIFICATION	0.9918044798018777	WITHOUT_CLASSIFICATION	0.007909424083340725	DESIGN	1.4440750763143544E-4	TEST	1.325051811441897E-4	DEFECT	5.416773719372651E-6	DOCUMENTATION	3.766652286658952E-6	IMPLEMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9970599443327604	WITHOUT_CLASSIFICATION	0.0029310642409766164	DESIGN	8.644619483012431E-6	DEFECT	3.1048188227196535E-7	IMPLEMENTATION	2.565792981359169E-8	TEST	1.066696785381203E-8	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person ORDER BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999856908300534	WITHOUT_CLASSIFICATION	8.909156989434919E-6	IMPLEMENTATION	4.4405979038083295E-6	DESIGN	5.510406025453952E-7	DEFECT	3.4054455100465365E-7	TEST	6.782989982660385E-8	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9997938304572659	WITHOUT_CLASSIFICATION	2.0299714931524117E-4	DESIGN	3.1584506937035846E-6	DEFECT	1.3511728744666014E-8	TEST	4.2970024290574245E-10	DOCUMENTATION	1.2961642338781382E-12	IMPLEMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9996673773518895	WITHOUT_CLASSIFICATION	2.722273131033438E-4	DESIGN	2.6094772572323723E-5	IMPLEMENTATION	2.3311227523646775E-5	DEFECT	6.051363507844059E-6	TEST	4.937971403455676E-6	DOCUMENTATION
//default mode	WITHOUT_CLASSIFICATION	0.9999166126230549	WITHOUT_CLASSIFICATION	6.882563833760201E-5	DESIGN	1.075391309401538E-5	IMPLEMENTATION	1.5254137550582054E-6	DEFECT	1.1499436988221477E-6	DOCUMENTATION	1.1324680596390754E-6	TEST
//QueryJoinFragment join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.999993952980701	WITHOUT_CLASSIFICATION	4.181340329958904E-6	IMPLEMENTATION	5.857077132631998E-7	DEFECT	5.595011440905176E-7	DESIGN	3.9951049868724364E-7	DOCUMENTATION	3.2095961285028667E-7	TEST
//reset the dotcount (but not the path) //after reset!	WITHOUT_CLASSIFICATION	0.9999668192709572	WITHOUT_CLASSIFICATION	2.9312928187456982E-5	DEFECT	3.05271789641125E-6	IMPLEMENTATION	5.022709698473347E-7	TEST	1.9813155616901811E-7	DESIGN	1.1468043284061388E-7	DOCUMENTATION
//after reset!	WITHOUT_CLASSIFICATION	0.999974324782928	WITHOUT_CLASSIFICATION	1.3351843441334522E-5	DEFECT	4.845657693928411E-6	DESIGN	4.366739073825938E-6	IMPLEMENTATION	2.6577918536652624E-6	TEST	4.531850092513347E-7	DOCUMENTATION
// we don't need to worry about any condition in the ON clause // here (toFromFragmentString), since anything in the ON condition // is already applied to the whole query	WITHOUT_CLASSIFICATION	0.9997482012938618	WITHOUT_CLASSIFICATION	1.7528407622818723E-4	DESIGN	6.0257430748629476E-5	IMPLEMENTATION	9.41482546726694E-6	DEFECT	4.4499544021833785E-6	TEST	2.3924192919564585E-6	DOCUMENTATION
// bit_length feels a bit broken to me. We have to cast to char in order to // pass when a numeric value is supplied. But of course the answers given will // be wildly different for these two datatypes. 1234.5678 will be 9 bytes as // a char string but will be 8 or 16 bytes as a true numeric. // Jay Nance 2006-09-22	WITHOUT_CLASSIFICATION	0.9999960956270444	WITHOUT_CLASSIFICATION	3.747693721643089E-6	DESIGN	1.3696798464073885E-7	IMPLEMENTATION	9.746824742199287E-9	TEST	8.044647820816232E-9	DOCUMENTATION	1.9197768073717037E-9	DEFECT
// dotcount>=2	WITHOUT_CLASSIFICATION	0.9999899801476438	WITHOUT_CLASSIFICATION	8.313532517163805E-6	DEFECT	1.2123130377363319E-6	DESIGN	2.658593198372765E-7	DOCUMENTATION	1.3076450631244579E-7	IMPLEMENTATION	9.738297513763883E-8	TEST
// Do the corresponding RHS	WITHOUT_CLASSIFICATION	0.9998974958456214	WITHOUT_CLASSIFICATION	9.048259231504829E-5	IMPLEMENTATION	4.1518449465760264E-6	DOCUMENTATION	3.5041070696596186E-6	DESIGN	2.3634210504826267E-6	TEST	2.002188996875985E-6	DEFECT
//if its "id"	WITHOUT_CLASSIFICATION	0.9999730316191674	WITHOUT_CLASSIFICATION	1.9738104592710374E-5	DESIGN	2.7476700121159394E-6	DEFECT	2.2458909372976715E-6	IMPLEMENTATION	1.8604929347749231E-6	TEST	3.762223556787816E-7	DOCUMENTATION
//or its the id property name	WITHOUT_CLASSIFICATION	0.9999962668859392	WITHOUT_CLASSIFICATION	2.512992638974949E-6	DESIGN	4.6880228636348735E-7	IMPLEMENTATION	3.7983640569292634E-7	DEFECT	2.137790186290129E-7	DOCUMENTATION	1.5770371110571392E-7	TEST
//join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999982308824262	WITHOUT_CLASSIFICATION	9.81329393927427E-7	IMPLEMENTATION	2.9557717916935846E-7	DEFECT	2.1010960683118678E-7	DOCUMENTATION	1.8849016471512782E-7	DESIGN	9.361122883958944E-8	TEST
//important!!	WITHOUT_CLASSIFICATION	0.9987200375997324	WITHOUT_CLASSIFICATION	8.103191730952017E-4	DEFECT	3.303144416783481E-4	DESIGN	7.304943405166393E-5	IMPLEMENTATION	5.598289530162381E-5	DOCUMENTATION	1.02964561406218E-5	TEST
//String[] keyCols = collPersister.getKeyColumnNames();	WITHOUT_CLASSIFICATION	0.9999989582418447	WITHOUT_CLASSIFICATION	5.878775935168049E-7	DESIGN	1.5175267421458916E-7	DEFECT	1.442540027061269E-7	TEST	1.359549746135753E-7	IMPLEMENTATION	2.191891020574484E-8	DOCUMENTATION
// an association	WITHOUT_CLASSIFICATION	0.9999973660133953	WITHOUT_CLASSIFICATION	1.2143462761240665E-6	TEST	1.039715044675443E-6	DESIGN	3.094569101286329E-7	DOCUMENTATION	6.07171086518417E-8	DEFECT	9.751265192021573E-9	IMPLEMENTATION
//allow index() function:	WITHOUT_CLASSIFICATION	0.999832851194308	WITHOUT_CLASSIFICATION	1.3510136748237474E-4	DEFECT	2.658744320575813E-5	IMPLEMENTATION	2.7590938830396275E-6	DESIGN	1.9464598356319264E-6	DOCUMENTATION	7.5444128525553E-7	TEST
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9422506128985358	WITHOUT_CLASSIFICATION	0.04803216467908903	DEFECT	0.00901887472569312	DESIGN	6.796719425877981E-4	TEST	1.855096014047396E-5	DOCUMENTATION	1.2479395386929553E-7	IMPLEMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9997938304572659	WITHOUT_CLASSIFICATION	2.0299714931524117E-4	DESIGN	3.1584506937035846E-6	DEFECT	1.3511728744666014E-8	TEST	4.2970024290574245E-10	DOCUMENTATION	1.2961642338781382E-12	IMPLEMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9972992491864476	WITHOUT_CLASSIFICATION	9.884016517584444E-4	DESIGN	8.2021887654966E-4	DEFECT	6.586296866692528E-4	IMPLEMENTATION	1.7664261562891294E-4	DOCUMENTATION	5.685798294611983E-5	TEST
// collections of values	WITHOUT_CLASSIFICATION	0.9999998162140257	WITHOUT_CLASSIFICATION	8.984681589158535E-8	DEFECT	7.537286104971098E-8	DESIGN	8.26866244946272E-9	TEST	6.873507606268084E-9	IMPLEMENTATION	3.4241273794361856E-9	DOCUMENTATION
//opening paren in new Foo ( ... )	WITHOUT_CLASSIFICATION	0.9915850471216799	WITHOUT_CLASSIFICATION	0.00761864231496763	DESIGN	3.0749241170853806E-4	IMPLEMENTATION	2.9594482050977495E-4	DEFECT	1.4060155230021947E-4	DOCUMENTATION	5.2271778833832043E-5	TEST
//if we are inside a new Result(), but not inside a nested function	WITHOUT_CLASSIFICATION	0.9999963042697264	WITHOUT_CLASSIFICATION	2.8527304879117327E-6	DEFECT	5.025063033964915E-7	DESIGN	2.920599108725478E-7	TEST	2.8940027094508934E-8	DOCUMENTATION	1.9493544299247882E-8	IMPLEMENTATION
//special case	WITHOUT_CLASSIFICATION	0.9999382949580237	WITHOUT_CLASSIFICATION	5.606465001063794E-5	IMPLEMENTATION	2.734066598916057E-6	DESIGN	1.3327554126471287E-6	DOCUMENTATION	1.321718824217763E-6	DEFECT	2.5185112995151964E-7	TEST
// the name of an SQL function	WITHOUT_CLASSIFICATION	0.9999995497251972	WITHOUT_CLASSIFICATION	3.4350713245235123E-7	DESIGN	6.710617788549972E-8	DOCUMENTATION	2.0256273517865026E-8	TEST	1.7907781339537392E-8	DEFECT	1.4974376314057065E-9	IMPLEMENTATION
//null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.9999823227518952	WITHOUT_CLASSIFICATION	1.751714402938363E-5	DESIGN	6.228762299539807E-8	IMPLEMENTATION	5.604339947701033E-8	DOCUMENTATION	3.3422101601015783E-8	DEFECT	8.350951227060728E-9	TEST
//this is basically a copy/paste of OrderByParser ... might be worth refactoring	WITHOUT_CLASSIFICATION	0.9986763176964912	DESIGN	0.0013152949163762603	WITHOUT_CLASSIFICATION	6.454363145224766E-6	DEFECT	1.102228024576969E-6	TEST	7.696597411455425E-7	IMPLEMENTATION	6.113622154454668E-8	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person GROUP BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999695399012387	WITHOUT_CLASSIFICATION	1.697897413615024E-5	DESIGN	1.204350502584804E-5	IMPLEMENTATION	9.532400526480368E-7	DEFECT	3.9017875782840247E-7	TEST	9.420078863699747E-8	DOCUMENTATION
// return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.9994479857101033	WITHOUT_CLASSIFICATION	5.508201818851518E-4	DESIGN	1.0992068258096187E-6	DEFECT	5.544836964615926E-8	TEST	2.8293295167399405E-8	DOCUMENTATION	1.1159520952617726E-8	IMPLEMENTATION
//register collection role	WITHOUT_CLASSIFICATION	0.9994423168794406	WITHOUT_CLASSIFICATION	5.09485031347838E-4	DESIGN	3.1208649274833465E-5	IMPLEMENTATION	1.3260738838888128E-5	TEST	2.785255361154007E-6	DEFECT	9.434457368451979E-7	DOCUMENTATION
// The keyword used to specify an identity column, if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.9999920743015432	WITHOUT_CLASSIFICATION	7.733643881838598E-6	DESIGN	9.178024404380152E-8	DOCUMENTATION	6.847973727435612E-8	TEST	2.1257733161882947E-8	DEFECT	1.0536860505301297E-8	IMPLEMENTATION
//.getElementPropertyMapping();	WITHOUT_CLASSIFICATION	0.9996492491896384	WITHOUT_CLASSIFICATION	2.4397294318729467E-4	IMPLEMENTATION	6.743159430874866E-5	DEFECT	2.950285559465088E-5	DESIGN	6.230615929077913E-6	DOCUMENTATION	3.6128013418866017E-6	TEST
//crossJoins.add(name);	WITHOUT_CLASSIFICATION	0.9999140078147777	WITHOUT_CLASSIFICATION	3.4473126022940374E-5	DESIGN	3.075557334788482E-5	IMPLEMENTATION	1.1010808728428512E-5	DOCUMENTATION	6.9743843156305276E-6	DEFECT	2.778292807289217E-6	TEST
//ie no select clause in HQL	WITHOUT_CLASSIFICATION	0.99999946929742	WITHOUT_CLASSIFICATION	4.544484575880694E-7	DESIGN	6.210310576189504E-8	DOCUMENTATION	5.113972929999665E-9	IMPLEMENTATION	4.741487469171825E-9	DEFECT	4.29555624019371E-9	TEST
// initialize the Set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.9999975175745577	WITHOUT_CLASSIFICATION	2.3375612023186766E-6	DESIGN	6.461028708854515E-8	TEST	4.7469097033303245E-8	IMPLEMENTATION	2.4800278339264822E-8	DEFECT	7.984577438838594E-9	DOCUMENTATION
//ie. no select clause	WITHOUT_CLASSIFICATION	0.9999998482071806	WITHOUT_CLASSIFICATION	8.70591100717911E-8	DESIGN	3.3931652258819014E-8	IMPLEMENTATION	1.8506140453509194E-8	DOCUMENTATION	8.973411628282633E-9	TEST	3.322505123815459E-9	DEFECT
//there _was_ a select clause	WITHOUT_CLASSIFICATION	0.9999998444607276	WITHOUT_CLASSIFICATION	8.939336605100925E-8	IMPLEMENTATION	4.235866040651333E-8	DESIGN	1.9559056273528615E-8	TEST	2.34612682113653E-9	DEFECT	1.8820626884514403E-9	DOCUMENTATION
// return the concrete type, or the underlying type if a concrete type // was not specified	WITHOUT_CLASSIFICATION	0.9999351468309349	WITHOUT_CLASSIFICATION	4.325009685320515E-5	DESIGN	2.0226575708833588E-5	IMPLEMENTATION	1.2728886933498982E-6	DEFECT	6.853915315616634E-8	TEST	3.506865664324209E-8	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9972992491864476	WITHOUT_CLASSIFICATION	9.884016517584444E-4	DESIGN	8.2021887654966E-4	DEFECT	6.586296866692528E-4	IMPLEMENTATION	1.7664261562891294E-4	DOCUMENTATION	5.685798294611983E-5	TEST
//q.addCollection(collectionName, collectionRole);	WITHOUT_CLASSIFICATION	0.9998888655329188	WITHOUT_CLASSIFICATION	4.85656749123203E-5	DESIGN	3.9433823193856356E-5	IMPLEMENTATION	1.3328802385077784E-5	DEFECT	6.223432973275608E-6	TEST	3.5827336167510137E-6	DOCUMENTATION
// classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.9997855075431294	WITHOUT_CLASSIFICATION	1.3730253609306963E-4	DEFECT	7.61140626444095E-5	DESIGN	4.3494282274621445E-7	TEST	3.4324873981034264E-7	DOCUMENTATION	2.976665705009093E-7	IMPLEMENTATION
// can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.9999895102683644	WITHOUT_CLASSIFICATION	9.451979051751912E-6	DESIGN	7.85547698432919E-7	DEFECT	1.3130594694368747E-7	TEST	1.1120956732640677E-7	DOCUMENTATION	9.6893710121213E-9	IMPLEMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999899006584991	WITHOUT_CLASSIFICATION	9.770189298507313E-6	DESIGN	2.617004593123424E-7	DEFECT	2.6584855253486937E-8	DOCUMENTATION	2.1699849373401214E-8	IMPLEMENTATION	1.9167038291406334E-8	TEST
// This is the legacy behaviour for HQL queries...	WITHOUT_CLASSIFICATION	0.9990451753318699	WITHOUT_CLASSIFICATION	9.416625212554002E-4	DESIGN	1.301427651180794E-5	DEFECT	1.0746275650455769E-7	TEST	2.2231533847563577E-8	DOCUMENTATION	1.817607268167345E-8	IMPLEMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9441030155042754	WITHOUT_CLASSIFICATION	0.025461601071799955	IMPLEMENTATION	0.02277038218335945	DEFECT	0.006953060917649147	DESIGN	3.6477529770414163E-4	DOCUMENTATION	3.4716502521187125E-4	TEST
// not known!	WITHOUT_CLASSIFICATION	0.9441030155042754	WITHOUT_CLASSIFICATION	0.025461601071799955	IMPLEMENTATION	0.02277038218335945	DEFECT	0.006953060917649147	DESIGN	3.6477529770414163E-4	DOCUMENTATION	3.4716502521187125E-4	TEST
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999450901748193	WITHOUT_CLASSIFICATION	2.558456179937324E-5	IMPLEMENTATION	1.8984575719856296E-5	DEFECT	5.647666012002684E-6	DESIGN	4.0339632909392844E-6	DOCUMENTATION	6.590583587093797E-7	TEST
// not known!	WITHOUT_CLASSIFICATION	0.9441030155042754	WITHOUT_CLASSIFICATION	0.025461601071799955	IMPLEMENTATION	0.02277038218335945	DEFECT	0.006953060917649147	DESIGN	3.6477529770414163E-4	DOCUMENTATION	3.4716502521187125E-4	TEST
// not known!	WITHOUT_CLASSIFICATION	0.9441030155042754	WITHOUT_CLASSIFICATION	0.025461601071799955	IMPLEMENTATION	0.02277038218335945	DEFECT	0.006953060917649147	DESIGN	3.6477529770414163E-4	DOCUMENTATION	3.4716502521187125E-4	TEST
//Need this, since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.9973276885608057	WITHOUT_CLASSIFICATION	0.002431841075737224	DESIGN	9.067639153366329E-5	IMPLEMENTATION	8.281739432075873E-5	DOCUMENTATION	5.134918485994353E-5	TEST	1.5627392742586504E-5	DEFECT
//tokens that close a sub expression //tokens that open a sub expression //tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.9999932153566014	WITHOUT_CLASSIFICATION	4.209301393751568E-6	DEFECT	2.3696040686122207E-6	DESIGN	1.6235562398215872E-7	TEST	2.7331410066841256E-8	DOCUMENTATION	1.6050902358576226E-8	IMPLEMENTATION
//expressionTerminators.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999982786230565	WITHOUT_CLASSIFICATION	1.4608385999951822E-6	DESIGN	2.1238797093935647E-7	DEFECT	2.1953974688768247E-8	IMPLEMENTATION	1.4757708062068563E-8	TEST	1.1438689803664181E-8	DOCUMENTATION
//expressionOpeners.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999950791631266	WITHOUT_CLASSIFICATION	4.353174307454355E-6	DESIGN	3.5092776620388954E-7	IMPLEMENTATION	1.52629394392143E-7	DEFECT	3.238759126926625E-8	DOCUMENTATION	3.171781412551948E-8	TEST
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource) // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9888666048128387	WITHOUT_CLASSIFICATION	0.006788478680461105	DESIGN	0.004149770176224364	DEFECT	1.725483547376341E-4	IMPLEMENTATION	2.1399039155481615E-5	DOCUMENTATION	1.1989365827625645E-6	TEST
// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and "do the right thing" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character (what is to be trimmed off?) // the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.8151588686638094	DESIGN	0.18479756019169688	WITHOUT_CLASSIFICATION	2.6749077877299845E-5	DOCUMENTATION	1.4795252900575375E-5	IMPLEMENTATION	1.996217372934549E-6	TEST	3.059634285773155E-8	DEFECT
//Inside a BETWEEN ... AND ... expression	WITHOUT_CLASSIFICATION	0.996260649986627	WITHOUT_CLASSIFICATION	0.003211395199925844	DESIGN	3.8544545836228784E-4	DEFECT	1.3142220788039407E-4	IMPLEMENTATION	8.530449751338234E-6	DOCUMENTATION	2.556697453151466E-6	TEST
//were an odd or even number of NOTs encountered //the join string built up by compound paths inside this expression //a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.9999991103058609	WITHOUT_CLASSIFICATION	5.486431220503227E-7	DEFECT	2.84784277823131E-7	DESIGN	3.838932445216127E-8	TEST	1.742717499483722E-8	DOCUMENTATION	4.5023985077786823E-10	IMPLEMENTATION
//ie. a many-to-many	WITHOUT_CLASSIFICATION	0.9997123162481346	WITHOUT_CLASSIFICATION	2.1790180835603624E-4	DESIGN	3.1521647473670015E-5	DEFECT	3.089646682251944E-5	IMPLEMENTATION	5.3334571227651655E-6	DOCUMENTATION	2.0303720903996258E-6	TEST
//Cope with [,]	WITHOUT_CLASSIFICATION	0.9998698725665118	WITHOUT_CLASSIFICATION	8.748519914450021E-5	DESIGN	2.212901258041957E-5	IMPLEMENTATION	1.0701192409312388E-5	TEST	6.6356028873026386E-6	DOCUMENTATION	3.176426466571129E-6	DEFECT
//Cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.9997825099937551	WITHOUT_CLASSIFICATION	2.162330025032545E-4	DESIGN	5.897121975082086E-7	DEFECT	2.2970998481407607E-7	IMPLEMENTATION	2.2006485976325802E-7	TEST	2.175166995523282E-7	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9995214269925004	WITHOUT_CLASSIFICATION	3.0577494166385185E-4	DESIGN	1.0743213766228097E-4	DEFECT	6.189681824047782E-5	IMPLEMENTATION	2.591674855386491E-6	DOCUMENTATION	8.774350777265865E-7	TEST
//Cope with a subselect	WITHOUT_CLASSIFICATION	0.9999863741935716	WITHOUT_CLASSIFICATION	1.2744613460191051E-5	DESIGN	3.5810356245944715E-7	IMPLEMENTATION	2.7713303472743045E-7	TEST	1.4333249789316083E-7	DOCUMENTATION	1.0262387307569404E-7	DEFECT
//Cope with special cases of AND, NOT, ()	WITHOUT_CLASSIFICATION	0.999886608537059	WITHOUT_CLASSIFICATION	8.652827165225113E-5	IMPLEMENTATION	1.1441013724813325E-5	DEFECT	5.261004910815517E-6	TEST	5.087523713712059E-6	DOCUMENTATION	5.07364893955336E-6	DESIGN
//Close extra brackets we opened	WITHOUT_CLASSIFICATION	0.9999532615543218	WITHOUT_CLASSIFICATION	4.157580933717819E-5	DESIGN	2.815157624418262E-6	DEFECT	1.2907553344696882E-6	IMPLEMENTATION	6.617284218038575E-7	DOCUMENTATION	3.9499496014997863E-7	TEST
//take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.997713111625974	WITHOUT_CLASSIFICATION	0.0017651594026264574	DESIGN	4.7568351615290364E-4	DEFECT	4.148305660412809E-5	TEST	4.142063825296009E-6	DOCUMENTATION	4.203348171870524E-7	IMPLEMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999948761883142	WITHOUT_CLASSIFICATION	4.554548351422181E-6	DESIGN	1.6623326260435444E-7	DOCUMENTATION	1.626180808939646E-7	IMPLEMENTATION	1.6146825353399426E-7	TEST	7.8943737436917E-8	DEFECT
//process a token, mapping OO path expressions to SQL expressions	WITHOUT_CLASSIFICATION	0.999998945144325	WITHOUT_CLASSIFICATION	6.79706644576297E-7	DESIGN	2.71097553723435E-7	DEFECT	6.244883222342559E-8	DOCUMENTATION	3.355663193279937E-8	IMPLEMENTATION	8.046012543560134E-9	TEST
//Open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.9414994623416247	WITHOUT_CLASSIFICATION	0.057985414298834255	DESIGN	1.6877598411806975E-4	IMPLEMENTATION	1.5452019918195314E-4	TEST	1.3354661390862694E-4	DOCUMENTATION	5.828056233232203E-5	DEFECT
//Cope with special cases of AND, NOT, )	WITHOUT_CLASSIFICATION	0.9998813773418219	WITHOUT_CLASSIFICATION	8.254400667105793E-5	IMPLEMENTATION	1.542676629142349E-5	DEFECT	7.76931221085986E-6	DESIGN	7.1004245502046255E-6	TEST	5.782148454387193E-6	DOCUMENTATION
// the next one up must also be	WITHOUT_CLASSIFICATION	0.9999578070320496	WITHOUT_CLASSIFICATION	2.2490181865474584E-5	IMPLEMENTATION	1.6283553549811125E-5	DESIGN	1.8912744820141E-6	TEST	9.972137404240603E-7	DOCUMENTATION	5.307443125801497E-7	DEFECT
// Add any joins	WITHOUT_CLASSIFICATION	0.9999957180071555	WITHOUT_CLASSIFICATION	2.4242174021577894E-6	IMPLEMENTATION	1.1930412499126757E-6	DEFECT	2.980586539472391E-7	DESIGN	1.9985780332123443E-7	DOCUMENTATION	1.6681773530018024E-7	TEST
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999948761883142	WITHOUT_CLASSIFICATION	4.554548351422181E-6	DESIGN	1.6623326260435444E-7	DOCUMENTATION	1.626180808939646E-7	IMPLEMENTATION	1.6146825353399426E-7	TEST	7.8943737436917E-8	DEFECT
//named query parameter	WITHOUT_CLASSIFICATION	0.9996673773518895	WITHOUT_CLASSIFICATION	2.722273131033438E-4	DESIGN	2.6094772572323723E-5	IMPLEMENTATION	2.3311227523646775E-5	DEFECT	6.051363507844059E-6	TEST	4.937971403455676E-6	DOCUMENTATION
//path expression	WITHOUT_CLASSIFICATION	0.9999830128149685	WITHOUT_CLASSIFICATION	1.0685886094604069E-5	DESIGN	4.247678138749429E-6	DEFECT	9.050055529108454E-7	IMPLEMENTATION	7.062795506104763E-7	DOCUMENTATION	4.423356947000993E-7	TEST
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999986022948252	WITHOUT_CLASSIFICATION	8.976579344258189E-7	IMPLEMENTATION	3.4808317828582356E-7	DEFECT	8.006554061600416E-8	TEST	5.641221858729535E-8	DESIGN	1.5486302823840458E-8	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999982516736642	WITHOUT_CLASSIFICATION	1.3609397220818885E-6	IMPLEMENTATION	1.583375192999993E-7	DESIGN	1.4877365803107542E-7	DEFECT	7.097151581583663E-8	TEST	9.303920612593199E-9	DOCUMENTATION
//anything else	WITHOUT_CLASSIFICATION	0.9998891869344408	WITHOUT_CLASSIFICATION	9.381286334729756E-5	IMPLEMENTATION	8.972513740909956E-6	DESIGN	3.8398947238749316E-6	TEST	2.591584106206858E-6	DEFECT	1.5962096408207886E-6	DOCUMENTATION
// the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.9999995025985455	WITHOUT_CLASSIFICATION	4.444630308637579E-7	DESIGN	4.4607839600357964E-8	DEFECT	3.2020446274594367E-9	DOCUMENTATION	2.630952583441729E-9	IMPLEMENTATION	2.4975866502129192E-9	TEST
// careful with this!	WITHOUT_CLASSIFICATION	0.9999979968536893	WITHOUT_CLASSIFICATION	1.7044347206643736E-6	DESIGN	1.9701539205387591E-7	TEST	5.074179413502522E-8	DEFECT	3.277968552677718E-8	DOCUMENTATION	1.8174718434342615E-8	IMPLEMENTATION
// the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.9999761971150402	WITHOUT_CLASSIFICATION	2.060318837210128E-5	IMPLEMENTATION	1.9461346759764244E-6	DEFECT	9.433756057750216E-7	DESIGN	2.3676366893846028E-7	TEST	7.342263713654126E-8	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999758829245831	WITHOUT_CLASSIFICATION	2.172874504577997E-5	IMPLEMENTATION	8.338040158282317E-7	DOCUMENTATION	6.847304662059438E-7	TEST	4.4530343221623693E-7	DESIGN	4.2449245691387626E-7	DEFECT
//NOTICE: no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.9992059498579006	WITHOUT_CLASSIFICATION	7.686880349985593E-4	DESIGN	2.2557983143747156E-5	IMPLEMENTATION	1.7748287663648913E-6	DOCUMENTATION	6.606861873654731E-7	DEFECT	3.686090033368373E-7	TEST
//cannot instantiate	WITHOUT_CLASSIFICATION	0.9950005770741492	WITHOUT_CLASSIFICATION	0.0044807492401721894	DESIGN	4.255931290516072E-4	DEFECT	5.179843377564452E-5	IMPLEMENTATION	2.1626374603532373E-5	DOCUMENTATION	1.9655748247837172E-5	TEST
// start by looking for HQL keywords...	WITHOUT_CLASSIFICATION	0.9999973948812718	WITHOUT_CLASSIFICATION	2.469199173383872E-6	DEFECT	8.964671574984813E-8	DESIGN	2.6943560882095947E-8	TEST	1.4715044044539974E-8	IMPLEMENTATION	4.614233972478993E-9	DOCUMENTATION
// inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.9999987485810009	WITHOUT_CLASSIFICATION	9.224518753166594E-7	DESIGN	1.3819606614486612E-7	IMPLEMENTATION	1.2379426900748515E-7	DEFECT	5.820431410023806E-8	TEST	8.772474632948147E-9	DOCUMENTATION
// 'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.9999988257923635	WITHOUT_CLASSIFICATION	9.782765523238369E-7	IMPLEMENTATION	1.3771734303519643E-7	DEFECT	4.9923330208433926E-8	DESIGN	5.658471365884198E-9	TEST	2.631939430998857E-9	DOCUMENTATION
// now anything that is not a HQL keyword	WITHOUT_CLASSIFICATION	0.9995863370466455	WITHOUT_CLASSIFICATION	2.970911124541612E-4	DEFECT	7.278871293416194E-5	IMPLEMENTATION	3.39470766036224E-5	DESIGN	9.574401631384577E-6	TEST	2.616497313206457E-7	DOCUMENTATION
// process the "old" HQL style where aliases appear _first_ // ie. using the IN or IN CLASS constructions	WITHOUT_CLASSIFICATION	0.9999967122438495	WITHOUT_CLASSIFICATION	2.591351352913014E-6	DESIGN	5.887185690489806E-7	DEFECT	1.0014475732700131E-7	IMPLEMENTATION	4.7578314228644405E-9	TEST	2.7836399119847954E-9	DOCUMENTATION
// treat it as a classname	WITHOUT_CLASSIFICATION	0.9999992667520643	WITHOUT_CLASSIFICATION	4.290221100643353E-7	DESIGN	1.7423470441921525E-7	TEST	7.546698290736157E-8	DEFECT	4.260914623466605E-8	IMPLEMENTATION	1.191499207993052E-8	DOCUMENTATION
// treat it as a path expression	WITHOUT_CLASSIFICATION	0.9999902450344132	WITHOUT_CLASSIFICATION	7.4313128131549716E-6	DEFECT	1.232021807686379E-6	IMPLEMENTATION	5.528071297332793E-7	DESIGN	4.963583973663962E-7	TEST	4.2465438935624306E-8	DOCUMENTATION
// starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.999997626902145	WITHOUT_CLASSIFICATION	2.344676483640115E-6	DESIGN	1.291504779250642E-8	TEST	7.535685810734041E-9	DEFECT	4.4858850273878245E-9	DOCUMENTATION	3.484752783003168E-9	IMPLEMENTATION
// starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.9999980638589374	WITHOUT_CLASSIFICATION	9.357662617944921E-7	DEFECT	9.166073526488779E-7	DESIGN	4.3772957453332265E-8	TEST	3.2405416670381154E-8	IMPLEMENTATION	7.589074176251735E-9	DOCUMENTATION
//allow ODMG OQL style: from Person p, p.cars c	WITHOUT_CLASSIFICATION	0.9977237810314316	WITHOUT_CLASSIFICATION	0.0020656554607583074	DESIGN	1.654551461556411E-4	DEFECT	4.1090468357037494E-5	IMPLEMENTATION	2.72068926674939E-6	TEST	1.2972040308261716E-6	DOCUMENTATION
//handle quoted strings	WITHOUT_CLASSIFICATION	0.9999805162835363	WITHOUT_CLASSIFICATION	1.1715079383800435E-5	DESIGN	4.25875877387293E-6	IMPLEMENTATION	1.9689154771470157E-6	TEST	9.439468945174194E-7	DEFECT	5.970159341952756E-7	DOCUMENTATION
// Object insertions, updates, and deletions have list semantics because // they must happen in the right order so as to respect referential // integrity	WITHOUT_CLASSIFICATION	0.999998270483313	WITHOUT_CLASSIFICATION	8.64137211222056E-7	DESIGN	8.396646690014807E-7	DEFECT	1.0181739302040555E-8	IMPLEMENTATION	8.956807859204192E-9	DOCUMENTATION	6.576259676077403E-9	TEST
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999758829245831	WITHOUT_CLASSIFICATION	2.172874504577997E-5	IMPLEMENTATION	8.338040158282317E-7	DOCUMENTATION	6.847304662059438E-7	TEST	4.4530343221623693E-7	DESIGN	4.2449245691387626E-7	DEFECT
//ignore whitespace	WITHOUT_CLASSIFICATION	0.9999977214269669	WITHOUT_CLASSIFICATION	1.4264826837464565E-6	DESIGN	3.7616407272778977E-7	DOCUMENTATION	2.796253859522087E-7	IMPLEMENTATION	1.3591429365331745E-7	TEST	6.038659705780201E-8	DEFECT
//do replacements	WITHOUT_CLASSIFICATION	0.9996980325702091	WITHOUT_CLASSIFICATION	2.7008708911664675E-4	DESIGN	2.8401297375886497E-5	IMPLEMENTATION	2.553589166207969E-6	DOCUMENTATION	5.356724569313987E-7	TEST	3.8978167533974605E-7	DEFECT
//handle HQL2 collection syntax	WITHOUT_CLASSIFICATION	0.9994998351701486	WITHOUT_CLASSIFICATION	2.924399976469469E-4	DESIGN	1.0912808738645966E-4	DEFECT	8.60161353069648E-5	IMPLEMENTATION	8.317511812132157E-6	DOCUMENTATION	4.263097698954309E-6	TEST
// uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.9999008302268496	WITHOUT_CLASSIFICATION	9.504247341466892E-5	DESIGN	2.290854814720961E-6	IMPLEMENTATION	1.0597163668772581E-6	TEST	5.833212489299306E-7	DEFECT	1.9340730503795536E-7	DOCUMENTATION
// AbstractSelectingDelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999984808348064	WITHOUT_CLASSIFICATION	1.2374307523234175E-5	DESIGN	2.1148795164434367E-6	IMPLEMENTATION	5.330922341862391E-7	TEST	1.2002584619269252E-7	DOCUMENTATION	4.934681605736278E-8	DEFECT
//hilo params	WITHOUT_CLASSIFICATION	0.9999039975033218	WITHOUT_CLASSIFICATION	8.906794791830528E-5	DESIGN	3.991527787197436E-6	IMPLEMENTATION	1.1416311134550734E-6	TEST	9.907790961184365E-7	DEFECT	8.10610762891611E-7	DOCUMENTATION
//sql = query;	WITHOUT_CLASSIFICATION	0.9998619179449031	WITHOUT_CLASSIFICATION	6.0676137968295974E-5	DESIGN	4.50689316293366E-5	IMPLEMENTATION	2.8067954365958346E-5	DEFECT	2.6393487868370422E-6	TEST	1.629682346520367E-6	DOCUMENTATION
// performance opt	WITHOUT_CLASSIFICATION	0.9999921033842571	WITHOUT_CLASSIFICATION	4.003896726254776E-6	DESIGN	1.963342390450428E-6	IMPLEMENTATION	1.1943600153509821E-6	DOCUMENTATION	6.597071835993803E-7	DEFECT	7.530942732862802E-8	TEST
//sql = update;	WITHOUT_CLASSIFICATION	0.9999888794517395	WITHOUT_CLASSIFICATION	6.976688377382578E-6	IMPLEMENTATION	2.049068771559272E-6	DEFECT	1.6860514404024608E-6	DESIGN	2.1410349489866277E-7	DOCUMENTATION	1.9463617620091426E-7	TEST
//hilo config	WITHOUT_CLASSIFICATION	0.9998166916354116	WITHOUT_CLASSIFICATION	1.526896014746188E-4	DESIGN	1.1650078609252866E-5	DEFECT	9.858479680290828E-6	DOCUMENTATION	4.706912952871246E-6	IMPLEMENTATION	4.4032918713405645E-6	TEST
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999961157927674	WITHOUT_CLASSIFICATION	2.3901887322967696E-6	DESIGN	5.546116383003476E-7	DOCUMENTATION	5.070917777351935E-7	TEST	2.832141336301771E-7	IMPLEMENTATION	1.491009507165408E-7	DEFECT
// don't allow comments on these insert statements as comments totally // blow up the Oracle getGeneratedKeys "support" :(	WITHOUT_CLASSIFICATION	0.9999986942428211	WITHOUT_CLASSIFICATION	1.1790039971400741E-6	DEFECT	1.0631573272207853E-7	DESIGN	1.404860061071997E-8	IMPLEMENTATION	6.096866898556938E-9	TEST	2.919816437004935E-10	DOCUMENTATION
//abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.979588131122959	WITHOUT_CLASSIFICATION	0.014211378726943306	IMPLEMENTATION	0.005345147188226517	DESIGN	7.808590045050728E-4	DEFECT	4.2904071287773774E-5	DOCUMENTATION	3.1579886078250124E-5	TEST
//throw new IdentifierGenerationException("save associated object first, or disable cascade for inverse association");	WITHOUT_CLASSIFICATION	0.9999990547155855	WITHOUT_CLASSIFICATION	8.189989882014107E-7	IMPLEMENTATION	7.773132158474785E-8	TEST	3.893728205856527E-8	DESIGN	9.36083393601223E-9	DOCUMENTATION	2.559886398764957E-10	DEFECT
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999893990420282	WITHOUT_CLASSIFICATION	6.19448247116322E-6	DESIGN	1.7013476633194105E-6	DEFECT	1.3054935329138277E-6	IMPLEMENTATION	1.3054185616261447E-6	DOCUMENTATION	9.42157426849326E-8	TEST
//do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.999998317481916	WITHOUT_CLASSIFICATION	1.3168241035709075E-6	DEFECT	2.4044219920531886E-7	DESIGN	7.742890034468558E-8	DOCUMENTATION	4.404682517359655E-8	TEST	3.776055823220021E-9	IMPLEMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999817411428362	WITHOUT_CLASSIFICATION	1.2491797667060524E-5	DESIGN	3.020884847996974E-6	IMPLEMENTATION	1.4277267790544729E-6	DEFECT	8.846803517384909E-7	TEST	4.337675179610368E-7	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999961157927674	WITHOUT_CLASSIFICATION	2.3901887322967696E-6	DESIGN	5.546116383003476E-7	DOCUMENTATION	5.070917777351935E-7	TEST	2.832141336301771E-7	IMPLEMENTATION	1.491009507165408E-7	DEFECT
// do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.9999996604996133	WITHOUT_CLASSIFICATION	2.1934456248324766E-7	IMPLEMENTATION	6.544796949825718E-8	DESIGN	4.895380937410769E-8	TEST	5.156068372872444E-9	DOCUMENTATION	5.979768605863534E-10	DEFECT
/* COLUMN and TABLE should be renamed but it would break the public API */	WITHOUT_CLASSIFICATION	0.9987458912375612	WITHOUT_CLASSIFICATION	9.778498417377134E-4	DEFECT	1.9669762247852415E-4	DESIGN	6.527085943255102E-5	IMPLEMENTATION	1.0413549675450019E-5	TEST	3.8768891145464915E-6	DOCUMENTATION
// Loaded entity instances, by EntityKey	WITHOUT_CLASSIFICATION	0.9999954244049215	WITHOUT_CLASSIFICATION	2.749980441323636E-6	DEFECT	1.0026593471907819E-6	DESIGN	3.9875970789691096E-7	DOCUMENTATION	3.168161908689143E-7	IMPLEMENTATION	1.0737939119290543E-7	TEST
// if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.9990131758180469	WITHOUT_CLASSIFICATION	8.243259690177846E-4	IMPLEMENTATION	1.0817599457005488E-4	DESIGN	3.2424686950390465E-5	DOCUMENTATION	1.182304861233224E-5	DEFECT	1.007448280245148E-5	TEST
// the default...	WITHOUT_CLASSIFICATION	0.9999918140774631	WITHOUT_CLASSIFICATION	5.539465602530822E-6	IMPLEMENTATION	2.190197671578736E-6	DESIGN	1.7628934373041792E-7	TEST	1.4629982157433852E-7	DOCUMENTATION	1.3367009759602578E-7	DEFECT
// unfortunately not really safe to normalize this // to 1 as an initial value like we do the others // because we would not be able to control this if // we are using a sequence...	WITHOUT_CLASSIFICATION	0.9999996452544846	WITHOUT_CLASSIFICATION	2.2436958937165694E-7	DESIGN	9.613126625660333E-8	IMPLEMENTATION	2.4194894752413622E-8	TEST	7.509044571780868E-9	DEFECT	2.540720437114108E-9	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999893990420282	WITHOUT_CLASSIFICATION	6.19448247116322E-6	DESIGN	1.7013476633194105E-6	DEFECT	1.3054935329138277E-6	IMPLEMENTATION	1.3054185616261447E-6	DOCUMENTATION	9.42157426849326E-8	TEST
// Identity map of CollectionEntry instances, by the collection wrapper	WITHOUT_CLASSIFICATION	0.9999983187996019	WITHOUT_CLASSIFICATION	1.1114418152062604E-6	IMPLEMENTATION	3.421724986516298E-7	DEFECT	1.616721526096404E-7	DESIGN	4.1238356465992604E-8	TEST	2.4675575204871206E-8	DOCUMENTATION
// general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997664026047195	WITHOUT_CLASSIFICATION	2.3137403663060546E-4	DESIGN	8.624477573648104E-7	IMPLEMENTATION	8.432820948442689E-7	DEFECT	4.099251803089194E-7	DOCUMENTATION	1.0770361734382327E-7	TEST
// table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999901513069223	WITHOUT_CLASSIFICATION	9.74413234123544E-6	DESIGN	4.378240365159071E-8	IMPLEMENTATION	2.8050886995476273E-8	TEST	2.3977209539926327E-8	DOCUMENTATION	8.750236315844666E-9	DEFECT
// Configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997423305323807	WITHOUT_CLASSIFICATION	2.2660068771516732E-4	IMPLEMENTATION	2.301437953274248E-5	DESIGN	6.22216251257103E-6	DEFECT	1.160917872327659E-6	DOCUMENTATION	6.713199866513574E-7	TEST
// IdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9873883935805002	WITHOUT_CLASSIFICATION	0.012602083519442777	IMPLEMENTATION	5.6347535188727505E-6	DESIGN	3.218103761931351E-6	DEFECT	4.433031703504434E-7	DOCUMENTATION	2.2673960569264407E-7	TEST
// PersistentIdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9945910130821304	WITHOUT_CLASSIFICATION	0.005404967516083011	IMPLEMENTATION	3.358741354726759E-6	DESIGN	3.1554158391512773E-7	TEST	2.2426610355679222E-7	DEFECT	1.2085274446421032E-7	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999998294215752	WITHOUT_CLASSIFICATION	8.99678906869721E-8	DESIGN	5.152260226908206E-8	DEFECT	1.2080872874275148E-8	IMPLEMENTATION	1.1596576886653497E-8	DOCUMENTATION	5.41048207392028E-9	TEST
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999998294215752	WITHOUT_CLASSIFICATION	8.99678906869721E-8	DESIGN	5.152260226908206E-8	DEFECT	1.2080872874275148E-8	IMPLEMENTATION	1.1596576886653497E-8	DOCUMENTATION	5.41048207392028E-9	TEST
//fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.9995819333147445	WITHOUT_CLASSIFICATION	4.1472182070068553E-4	DESIGN	1.481111038897589E-6	TEST	6.831856449891095E-7	DEFECT	6.557728003251477E-7	IMPLEMENTATION	5.247950705328587E-7	DOCUMENTATION
// we just hit the last position	WITHOUT_CLASSIFICATION	0.9999916817047798	WITHOUT_CLASSIFICATION	4.061921679842342E-6	IMPLEMENTATION	2.2372568178004683E-6	DEFECT	1.1818557902682458E-6	DESIGN	4.964369835935394E-7	DOCUMENTATION	3.4082394877228084E-7	TEST
// scroll ahead	WITHOUT_CLASSIFICATION	0.9999953297650991	WITHOUT_CLASSIFICATION	2.8377413899084323E-6	IMPLEMENTATION	1.4283604137812731E-6	DESIGN	2.4913481596766807E-7	DEFECT	7.82812866792642E-8	DOCUMENTATION	7.671699455972726E-8	TEST
// scroll backward	WITHOUT_CLASSIFICATION	0.9999941863881913	WITHOUT_CLASSIFICATION	3.964147172761357E-6	DEFECT	1.0482868932078866E-6	DESIGN	6.802036688983433E-7	IMPLEMENTATION	6.74299369688132E-8	DOCUMENTATION	5.354413679952431E-8	TEST
// we have not yet hit the last result...	WITHOUT_CLASSIFICATION	0.999920124398771	WITHOUT_CLASSIFICATION	6.815515870840852E-5	DEFECT	6.35412553389974E-6	TEST	2.8853197583954437E-6	IMPLEMENTATION	2.2391022001185937E-6	DESIGN	2.4189502828653206E-7	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999943806171397	WITHOUT_CLASSIFICATION	3.2987445635333612E-6	DESIGN	1.3798669924364634E-6	DEFECT	6.600314023802079E-7	IMPLEMENTATION	2.1054531346660928E-7	TEST	7.01945883573052E-8	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999951002946161	WITHOUT_CLASSIFICATION	2.884942837722941E-6	IMPLEMENTATION	1.071624920650479E-6	DEFECT	4.5152999572131494E-7	DESIGN	2.7640030897612915E-7	DOCUMENTATION	2.152073206970374E-7	TEST
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999968722071131	WITHOUT_CLASSIFICATION	2.387620273865671E-5	IMPLEMENTATION	3.973980556821546E-6	DESIGN	2.494507043125682E-6	DEFECT	8.220714723693742E-7	TEST	1.1116705801345318E-7	DOCUMENTATION
// do this when all the properties are updateable since there is // a certain likelihood that the information will already be // snapshot-cached.	WITHOUT_CLASSIFICATION	0.9999772016837577	WITHOUT_CLASSIFICATION	2.1732653463325363E-5	DESIGN	8.172852963032113E-7	DEFECT	1.1115875851459037E-7	DOCUMENTATION	9.801051721808009E-8	IMPLEMENTATION	3.920820688515964E-8	TEST
// Inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999994619746118	WITHOUT_CLASSIFICATION	3.3058288129779175E-7	DESIGN	7.020635066590575E-8	DEFECT	6.78202605755233E-8	IMPLEMENTATION	5.969670980597844E-8	TEST	9.719185922689383E-9	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999943806171397	WITHOUT_CLASSIFICATION	3.2987445635333612E-6	DESIGN	1.3798669924364634E-6	DEFECT	6.600314023802079E-7	IMPLEMENTATION	2.1054531346660928E-7	TEST	7.01945883573052E-8	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999951002946161	WITHOUT_CLASSIFICATION	2.884942837722941E-6	IMPLEMENTATION	1.071624920650479E-6	DEFECT	4.5152999572131494E-7	DESIGN	2.7640030897612915E-7	DOCUMENTATION	2.152073206970374E-7	TEST
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999968722071131	WITHOUT_CLASSIFICATION	2.387620273865671E-5	IMPLEMENTATION	3.973980556821546E-6	DESIGN	2.494507043125682E-6	DEFECT	8.220714723693742E-7	TEST	1.1116705801345318E-7	DOCUMENTATION
// Caches	WITHOUT_CLASSIFICATION	0.9999967147839752	WITHOUT_CLASSIFICATION	3.1449004793502086E-6	DESIGN	5.835392306339073E-8	TEST	3.0030996724509325E-8	IMPLEMENTATION	2.633296970842262E-8	DOCUMENTATION	2.5597656021643275E-8	DEFECT
//Generators:	WITHOUT_CLASSIFICATION	0.9976147329890864	WITHOUT_CLASSIFICATION	0.0020504432059709025	DESIGN	2.861052261639902E-4	IMPLEMENTATION	2.274053759587747E-5	TEST	1.680155527051613E-5	DOCUMENTATION	9.176485912191148E-6	DEFECT
// cache region is defined by the root-class in the hierarchy...	WITHOUT_CLASSIFICATION	0.9999747604805613	WITHOUT_CLASSIFICATION	2.5220579428407225E-5	DESIGN	1.5062280124452836E-8	DEFECT	3.1818307428715727E-9	TEST	3.8640334618369695E-10	IMPLEMENTATION	3.0949598414874773E-10	DOCUMENTATION
//check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.9997199816096948	WITHOUT_CLASSIFICATION	2.6973969345468025E-4	DESIGN	5.5809259979373796E-6	IMPLEMENTATION	1.968106254675633E-6	DEFECT	1.8588613747799799E-6	TEST	8.708032231767781E-7	DOCUMENTATION
// after *all* persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.9999622897837129	WITHOUT_CLASSIFICATION	3.693277497386538E-5	DESIGN	5.104226766584643E-7	IMPLEMENTATION	1.9465393681641964E-7	DEFECT	6.635055013031792E-8	TEST	6.014149591737872E-9	DOCUMENTATION
// if we get here, it is possible that we have a proxy 'in the way' of the merge map resolution... // 	WITHOUT_CLASSIFICATION	0.9999689611328074	WITHOUT_CLASSIFICATION	1.9162548616016555E-5	DESIGN	1.1131856774452656E-5	DEFECT	7.319417916562066E-7	TEST	9.532293351074285E-9	IMPLEMENTATION	2.9877171171654445E-9	DOCUMENTATION
//JNDI + Serialization:	WITHOUT_CLASSIFICATION	0.9999898780370543	WITHOUT_CLASSIFICATION	5.220912750420916E-6	DEFECT	2.15946921503502E-6	IMPLEMENTATION	1.487120035658169E-6	DESIGN	8.574417104347046E-7	DOCUMENTATION	3.9701923414713467E-7	TEST
//checking for named queries	WITHOUT_CLASSIFICATION	0.9997424749041381	WITHOUT_CLASSIFICATION	1.339302242660371E-4	DESIGN	9.847515494998835E-5	IMPLEMENTATION	1.2870941209103977E-5	TEST	9.525559354622475E-6	DEFECT	2.723216081997923E-6	DOCUMENTATION
//stats	WITHOUT_CLASSIFICATION	0.9998933395328733	WITHOUT_CLASSIFICATION	7.120484020336923E-5	DESIGN	1.479475950447477E-5	IMPLEMENTATION	1.2980157513676142E-5	DEFECT	5.01089084655037E-6	TEST	2.669819058508321E-6	DOCUMENTATION
// EntityNotFoundDelegate	WITHOUT_CLASSIFICATION	0.9999916174253323	WITHOUT_CLASSIFICATION	4.449035719672795E-6	DESIGN	1.617527209853812E-6	IMPLEMENTATION	1.2681722375668543E-6	DEFECT	6.833470498540308E-7	TEST	3.644924506084292E-7	DOCUMENTATION
// Check named HQL queries	WITHOUT_CLASSIFICATION	0.9999833678845885	WITHOUT_CLASSIFICATION	1.3077392351981617E-5	DESIGN	2.8042180424274444E-6	IMPLEMENTATION	4.5178020319741647E-7	TEST	1.741818635413704E-7	DOCUMENTATION	1.2454295045621373E-7	DEFECT
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9986692477861072	WITHOUT_CLASSIFICATION	7.833288939582044E-4	DEFECT	3.2310020882031173E-4	TEST	2.217680367466773E-4	DESIGN	1.6570456609299617E-6	IMPLEMENTATION	8.980287066008954E-7	DOCUMENTATION
//prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.9986488628964652	WITHOUT_CLASSIFICATION	0.0012746157903540938	DESIGN	7.168902682854409E-5	DEFECT	3.7341912669971882E-6	TEST	9.349347106250095E-7	DOCUMENTATION	1.631603745909099E-7	IMPLEMENTATION
// from javax.naming.Referenceable	WITHOUT_CLASSIFICATION	0.9999115889223578	WITHOUT_CLASSIFICATION	8.673543273537775E-5	DESIGN	1.2127985320143329E-6	DEFECT	2.5386743386919894E-7	DOCUMENTATION	1.5848518993870441E-7	TEST	5.0493751154580845E-8	IMPLEMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999649291754644	WITHOUT_CLASSIFICATION	2.6252645979111076E-5	IMPLEMENTATION	7.998080372402849E-6	DESIGN	5.627338951489466E-7	DEFECT	2.0548722249561534E-7	DOCUMENTATION	5.187706646378636E-8	TEST
//for a dynamic-class	WITHOUT_CLASSIFICATION	0.9999601805850918	WITHOUT_CLASSIFICATION	3.951863351658448E-5	DESIGN	1.747730847117443E-7	DEFECT	8.636229416229466E-8	DOCUMENTATION	3.207931477938872E-8	TEST	7.566697811772625E-9	IMPLEMENTATION
//test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.9289410602315192	WITHOUT_CLASSIFICATION	0.04825682931465304	DESIGN	0.022611424021559422	TEST	1.5860017059527064E-4	DOCUMENTATION	2.325641696568934E-5	DEFECT	8.829844707440357E-6	IMPLEMENTATION
//NOTE EARLY EXIT	WITHOUT_CLASSIFICATION	0.9998896046028313	WITHOUT_CLASSIFICATION	5.142589017998089E-5	IMPLEMENTATION	4.486429909306131E-5	DESIGN	8.059522188345204E-6	DEFECT	3.0417405730035437E-6	DOCUMENTATION	3.0039451342631246E-6	TEST
// for backward-compatability	WITHOUT_CLASSIFICATION	0.9999989840421488	WITHOUT_CLASSIFICATION	4.941654805873996E-7	DEFECT	4.641216722476049E-7	IMPLEMENTATION	3.5768780145857416E-8	DESIGN	1.2290571570018202E-8	TEST	9.611346678495215E-9	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999973612734724	WITHOUT_CLASSIFICATION	1.2553531312278265E-6	DEFECT	7.335535598055623E-7	IMPLEMENTATION	3.085317332461033E-7	TEST	2.906745861108997E-7	DESIGN	5.0613517252889456E-8	DOCUMENTATION
//to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.9999955896171463	WITHOUT_CLASSIFICATION	3.7810718604675284E-6	DESIGN	3.8404085277626203E-7	IMPLEMENTATION	1.1317099995193087E-7	DEFECT	7.796977072713561E-8	TEST	5.4129369666407065E-8	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9998478330911945	WITHOUT_CLASSIFICATION	1.3207855234418937E-4	DESIGN	1.8513592790654797E-5	IMPLEMENTATION	6.590813657322926E-7	DOCUMENTATION	4.61449476545164E-7	TEST	4.542328285000501E-7	DEFECT
//must add to JNDI _after_ adding to HashMaps, because some JNDI servers use serialization	WITHOUT_CLASSIFICATION	0.9999991716545332	WITHOUT_CLASSIFICATION	7.010550329485688E-7	DESIGN	5.991853275307699E-8	DOCUMENTATION	3.6342003422206285E-8	IMPLEMENTATION	2.8378208356064293E-8	TEST	2.651689341130057E-9	DEFECT
// Make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.9999963045732627	WITHOUT_CLASSIFICATION	3.558637635998793E-6	DESIGN	1.2807451055199894E-7	IMPLEMENTATION	3.4643262312672458E-9	DOCUMENTATION	3.1147111541348817E-9	DEFECT	2.1355533087777002E-9	TEST
// for each of the defined parameters, make sure its value // has been set	WITHOUT_CLASSIFICATION	0.9999994643109624	WITHOUT_CLASSIFICATION	5.104470995795004E-7	DESIGN	1.8272377135054623E-8	DEFECT	5.920411880023117E-9	TEST	8.053096991069997E-10	IMPLEMENTATION	2.4383918253837475E-10	DOCUMENTATION
//we never need to apply locks to the SQL	WITHOUT_CLASSIFICATION	0.9990842723885962	WITHOUT_CLASSIFICATION	4.699374846398595E-4	IMPLEMENTATION	2.1420458284037138E-4	DESIGN	1.2593390769767308E-4	DOCUMENTATION	9.534964691963297E-5	DEFECT	1.0301989306070826E-5	TEST
// inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999946504743294	WITHOUT_CLASSIFICATION	2.3886537633270316E-6	DESIGN	1.970382187335639E-6	DEFECT	6.722059130560099E-7	TEST	2.3800457318906094E-7	IMPLEMENTATION	8.027923370679419E-8	DOCUMENTATION
// deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999953054399451	WITHOUT_CLASSIFICATION	2.5360959636299757E-6	DESIGN	8.036276941568415E-7	DEFECT	7.003760012115064E-7	TEST	5.947568076477333E-7	IMPLEMENTATION	5.97035883194517E-8	DOCUMENTATION
// during deserialization, we need to reconnect all proxies and // collections to this session, as well as the EntityEntry and // CollectionEntry instances; these associations are transient // because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.9999919335179639	WITHOUT_CLASSIFICATION	7.887051303781879E-6	DESIGN	1.7500716048669372E-7	DOCUMENTATION	3.1927117042098228E-9	TEST	1.1212678551929945E-9	IMPLEMENTATION	1.0959220856130424E-10	DEFECT
// updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999971970468751	WITHOUT_CLASSIFICATION	1.3393636085901081E-6	DEFECT	8.882321501302366E-7	IMPLEMENTATION	3.054970212185312E-7	TEST	2.2035192113821385E-7	DESIGN	4.950842377580696E-8	DOCUMENTATION
// loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999852969047254	WITHOUT_CLASSIFICATION	1.2769115326790057E-5	DEFECT	8.206233236099319E-7	IMPLEMENTATION	5.928701924821251E-7	DESIGN	2.848963821600396E-7	TEST	2.3559004950740108E-7	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999800339370913	WITHOUT_CLASSIFICATION	1.6805782011270466E-5	DESIGN	1.4190229664715085E-6	IMPLEMENTATION	9.045685929437717E-7	DEFECT	6.223837872236132E-7	TEST	2.143055508614907E-7	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999800339370913	WITHOUT_CLASSIFICATION	1.6805782011270466E-5	DESIGN	1.4190229664715085E-6	IMPLEMENTATION	9.045685929437717E-7	DEFECT	6.223837872236132E-7	TEST	2.143055508614907E-7	DOCUMENTATION
// first, try to load it from the temp PC associated to this SS	WITHOUT_CLASSIFICATION	0.9999995769330365	WITHOUT_CLASSIFICATION	3.628969157200175E-7	TEST	4.615062174445457E-8	DESIGN	9.377366393191228E-9	IMPLEMENTATION	4.541530663086446E-9	DOCUMENTATION	1.0052902287590816E-10	DEFECT
// if the metadata allowed proxy creation and caller did not request forceful eager loading, // generate a proxy	WITHOUT_CLASSIFICATION	0.9999995662384539	WITHOUT_CLASSIFICATION	3.4314033442500856E-7	TEST	5.645466775385192E-8	DEFECT	3.165947202152623E-8	IMPLEMENTATION	2.3970072492372825E-9	DESIGN	1.1006489315926669E-10	DOCUMENTATION
// otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.9999802878408453	WITHOUT_CLASSIFICATION	9.990637432454775E-6	DESIGN	8.527273022733351E-6	IMPLEMENTATION	8.122102637511051E-7	DEFECT	2.8221511410440396E-7	TEST	9.98233217138958E-8	DOCUMENTATION
/////////////////////////////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9984535121720532	WITHOUT_CLASSIFICATION	0.0013343024467748793	DESIGN	8.378911869780322E-5	DEFECT	6.247921169673682E-5	IMPLEMENTATION	3.7384276562327543E-5	TEST	2.853277421478978E-5	DOCUMENTATION
// no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.9984886660670035	WITHOUT_CLASSIFICATION	0.0014616128250737055	DESIGN	2.917716340024793E-5	DEFECT	1.716694668799027E-5	IMPLEMENTATION	1.7197186314035546E-6	DOCUMENTATION	1.6572792033465432E-6	TEST
//after setting values to object, entityMode	WITHOUT_CLASSIFICATION	0.9999462231675559	WITHOUT_CLASSIFICATION	5.229020958742421E-5	DESIGN	1.2101591010115718E-6	DEFECT	2.0898179565369242E-7	DOCUMENTATION	6.505646521834151E-8	TEST	2.425494815424817E-9	IMPLEMENTATION
//for EJB3	WITHOUT_CLASSIFICATION	0.9998440312778616	WITHOUT_CLASSIFICATION	1.2765547221752448E-4	DESIGN	1.8722914864318333E-5	DEFECT	4.531178302627953E-6	IMPLEMENTATION	2.8272144211738924E-6	TEST	2.231942332740689E-6	DOCUMENTATION
// just ignore	WITHOUT_CLASSIFICATION	0.9999780693644632	WITHOUT_CLASSIFICATION	1.034788870538969E-5	DESIGN	8.136846150208144E-6	IMPLEMENTATION	2.4352268999390625E-6	DEFECT	6.799466842124871E-7	TEST	3.307270970493844E-7	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9999183932582337	WITHOUT_CLASSIFICATION	6.428266318672059E-5	DESIGN	1.5691857351152765E-5	IMPLEMENTATION	8.870376989963044E-7	DOCUMENTATION	3.9237706071360895E-7	DEFECT	3.5280646868137765E-7	TEST
// saveOrUpdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998706619732	WITHOUT_CLASSIFICATION	5.530351480169927E-8	DEFECT	5.299308004400312E-8	IMPLEMENTATION	1.2740985456566784E-8	DESIGN	5.854725161394588E-9	TEST	2.4457213892114598E-9	DOCUMENTATION
// update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999440938946	WITHOUT_CLASSIFICATION	2.5443497380748844E-7	DEFECT	2.539185862546236E-7	IMPLEMENTATION	3.1307075274652026E-8	DESIGN	1.4585892828143306E-8	TEST	4.814525798639855E-9	DOCUMENTATION
// lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999164779492	WITHOUT_CLASSIFICATION	5.747092215665123E-7	DEFECT	1.5862442446286121E-7	IMPLEMENTATION	7.211684139261067E-8	DESIGN	1.9438866484468028E-8	TEST	1.0331154254972448E-8	DOCUMENTATION
// persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996446394555	WITHOUT_CLASSIFICATION	2.0979240502322243E-7	IMPLEMENTATION	8.096374727049382E-8	DEFECT	3.342933150061406E-8	DESIGN	2.5916939812163086E-8	TEST	5.258120856131889E-9	DOCUMENTATION
// persistOnFlush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998570911098	WITHOUT_CLASSIFICATION	6.019296662389282E-8	IMPLEMENTATION	4.091800549741732E-8	DESIGN	2.986047732054957E-8	DEFECT	9.644698467987195E-9	TEST	2.2927422158561465E-9	DOCUMENTATION
// merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996044440079	WITHOUT_CLASSIFICATION	1.6459349867972126E-7	DESIGN	1.391664160893674E-7	IMPLEMENTATION	5.221560890631757E-8	DEFECT	3.0769707832953367E-8	TEST	8.810760435813956E-9	DOCUMENTATION
// saveOrUpdateCopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995847755773	WITHOUT_CLASSIFICATION	2.4497291676343253E-7	DEFECT	1.2642639039594715E-7	IMPLEMENTATION	2.4136365716274035E-8	DESIGN	1.3636977119191225E-8	TEST	6.051772902882129E-9	DOCUMENTATION
// delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998597956767	WITHOUT_CLASSIFICATION	5.4851845267600565E-8	IMPLEMENTATION	4.425962292957023E-8	DESIGN	3.240462095115171E-8	DEFECT	7.301051624968777E-9	TEST	1.3871824289743856E-9	DOCUMENTATION
// load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993097430578	WITHOUT_CLASSIFICATION	4.0426114152179787E-7	IMPLEMENTATION	2.0387902927512826E-7	DEFECT	6.295227684004753E-8	DESIGN	1.5572069288396426E-8	TEST	3.5924252568998194E-9	DOCUMENTATION
// refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999984254850501	WITHOUT_CLASSIFICATION	9.574657991286527E-7	IMPLEMENTATION	3.3424197733566685E-7	DEFECT	1.702062447496999E-7	DESIGN	1.0373140210402497E-7	TEST	8.869526311966745E-9	DOCUMENTATION
// replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999986511726571	WITHOUT_CLASSIFICATION	1.1547114247877678E-6	DESIGN	1.181809510182309E-7	IMPLEMENTATION	3.374491083094049E-8	DEFECT	3.040480955286903E-8	TEST	1.178524664016118E-8	DOCUMENTATION
// do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.9999992561027927	WITHOUT_CLASSIFICATION	3.74512503184431E-7	DESIGN	1.7347542866464206E-7	IMPLEMENTATION	1.6132563515811019E-7	DEFECT	2.7846743919869696E-8	DOCUMENTATION	6.736896310998474E-9	TEST
// this is an internal error of some sort...	WITHOUT_CLASSIFICATION	0.9998905424361082	WITHOUT_CLASSIFICATION	1.0199367783344073E-4	DESIGN	4.722330351403336E-6	TEST	1.7785548155632361E-6	DEFECT	8.841258915066182E-7	DOCUMENTATION	7.887499996080405E-8	IMPLEMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9981228410780467	WITHOUT_CLASSIFICATION	0.001872565427883071	DESIGN	4.027172624754569E-6	TEST	2.3948157645144947E-7	IMPLEMENTATION	2.3099673711482838E-7	DEFECT	9.584313185533032E-8	DOCUMENTATION
//only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.9999339248128486	WITHOUT_CLASSIFICATION	5.2996764231867926E-5	DESIGN	9.491657076075143E-6	DEFECT	2.9643898959861507E-6	IMPLEMENTATION	3.40311909717743E-7	DOCUMENTATION	2.8206403778669377E-7	TEST
// if it was previously unreferenced, we need to flush in order to // get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.9993716625502995	WITHOUT_CLASSIFICATION	3.8278008929838535E-4	DESIGN	1.3782122721234838E-4	IMPLEMENTATION	4.91240095765021E-5	DOCUMENTATION	4.8474087059289963E-5	DEFECT	1.0138036554000729E-5	TEST
// not for internal use:	WITHOUT_CLASSIFICATION	0.9994650818837358	WITHOUT_CLASSIFICATION	3.049979234687612E-4	DESIGN	1.935934252811849E-4	IMPLEMENTATION	3.0435701724075287E-5	DEFECT	4.24782694836924E-6	TEST	1.6432388417121658E-6	DOCUMENTATION
// otherwise, we only need to flush if there are in-memory changes // to the queried tables	WITHOUT_CLASSIFICATION	0.9998667885442041	WITHOUT_CLASSIFICATION	1.248777707543734E-4	IMPLEMENTATION	5.638768706641536E-6	TEST	2.3964765664420485E-6	DESIGN	1.6535418836039884E-7	DEFECT	1.33085580197379E-7	DOCUMENTATION
// might need to run a different filter entirely after the flush // because the collection role may have changed	WITHOUT_CLASSIFICATION	0.9998057094807488	WITHOUT_CLASSIFICATION	1.2485603917562746E-4	IMPLEMENTATION	6.877143601819309E-5	DESIGN	3.604605266198982E-7	DOCUMENTATION	2.67049365417287E-7	TEST	3.553416542604032E-8	DEFECT
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9981228410780467	WITHOUT_CLASSIFICATION	0.001872565427883071	DESIGN	4.027172624754569E-6	TEST	2.3948157645144947E-7	IMPLEMENTATION	2.3099673711482838E-7	DEFECT	9.584313185533032E-8	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9981228410780467	WITHOUT_CLASSIFICATION	0.001872565427883071	DESIGN	4.027172624754569E-6	TEST	2.3948157645144947E-7	IMPLEMENTATION	2.3099673711482838E-7	DEFECT	9.584313185533032E-8	DOCUMENTATION
//if it is initialized, see if the underlying //instance is contained, since we need to  //account for the fact that it might have been //evicted	WITHOUT_CLASSIFICATION	0.8467309152573125	WITHOUT_CLASSIFICATION	0.1337535288652415	DESIGN	0.017057583641246248	IMPLEMENTATION	0.002314680696584991	TEST	1.372627793968832E-4	DOCUMENTATION	6.028760217921477E-6	DEFECT
// basically just an adapted copy of find(CriteriaImpl)	WITHOUT_CLASSIFICATION	0.9999711032674607	WITHOUT_CLASSIFICATION	2.0531890116894513E-5	IMPLEMENTATION	6.316421139265684E-6	DESIGN	1.173524554645626E-6	TEST	8.470228891027765E-7	DEFECT	2.7873839213427918E-8	DOCUMENTATION
// it is possible for this method to be called during flush processing, // so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999997841865805	WITHOUT_CLASSIFICATION	1.2918048833326082E-7	DESIGN	8.584560173620829E-8	TEST	6.114077320733564E-10	DOCUMENTATION	1.2953014573342304E-10	IMPLEMENTATION	4.639138626575839E-11	DEFECT
// nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.9999529067363152	WITHOUT_CLASSIFICATION	3.779834625371698E-5	DESIGN	4.71370836709183E-6	IMPLEMENTATION	4.035020315254277E-6	DEFECT	2.8222870358708824E-7	TEST	2.6396004507311233E-7	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999963440015754	WITHOUT_CLASSIFICATION	1.6558900873185054E-6	DESIGN	1.1317686996720128E-6	DEFECT	6.600785398107811E-7	IMPLEMENTATION	1.296224918940625E-7	DOCUMENTATION	7.863860571699599E-8	TEST
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999973612734724	WITHOUT_CLASSIFICATION	1.2553531312278265E-6	DEFECT	7.335535598055623E-7	IMPLEMENTATION	3.085317332461033E-7	TEST	2.906745861108997E-7	DESIGN	5.0613517252889456E-8	DOCUMENTATION
// we need to writeObject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.9999964698497743	WITHOUT_CLASSIFICATION	2.64140105322933E-6	DESIGN	3.940631798702397E-7	TEST	3.105491520197239E-7	DOCUMENTATION	1.2794297516180226E-7	IMPLEMENTATION	5.6193865443188893E-8	DEFECT
// the old-time stand-by...	WITHOUT_CLASSIFICATION	0.9999869693800509	WITHOUT_CLASSIFICATION	1.2277673151918041E-5	IMPLEMENTATION	3.798576405815933E-7	DEFECT	1.9650328824647095E-7	DOCUMENTATION	1.1290231211886913E-7	DESIGN	6.368355614723002E-8	TEST
// parameter bind values...	WITHOUT_CLASSIFICATION	0.9999997507462957	WITHOUT_CLASSIFICATION	1.7431288552666308E-7	DESIGN	2.88158263317272E-8	DEFECT	2.2464683407093128E-8	TEST	1.752554776980229E-8	IMPLEMENTATION	6.134761300804406E-9	DOCUMENTATION
// Parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994580418496003	WITHOUT_CLASSIFICATION	5.277247402021462E-4	DESIGN	7.846802411917914E-6	TEST	5.10963530722969E-6	IMPLEMENTATION	6.749193643140847E-7	DOCUMENTATION	6.020531142225818E-7	DEFECT
// prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.9999423935107628	WITHOUT_CLASSIFICATION	5.706629488801298E-5	IMPLEMENTATION	3.4952482170664834E-7	DESIGN	1.584932431230527E-7	DEFECT	2.116254610639319E-8	TEST	1.1013738253278476E-8	DOCUMENTATION
// Execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999425878276658	WITHOUT_CLASSIFICATION	4.712668321699974E-5	DESIGN	3.328311332195259E-6	DEFECT	3.083267059152901E-6	IMPLEMENTATION	2.753234330371601E-6	TEST	1.1206763954436834E-6	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9998104267095128	WITHOUT_CLASSIFICATION	1.6553297233615503E-4	DESIGN	1.4890117139102657E-5	IMPLEMENTATION	5.433976779388333E-6	DOCUMENTATION	3.1407993343344505E-6	DEFECT	5.754248981590887E-7	TEST
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9998104267095128	WITHOUT_CLASSIFICATION	1.6553297233615503E-4	DESIGN	1.4890117139102657E-5	IMPLEMENTATION	5.433976779388333E-6	DOCUMENTATION	3.1407993343344505E-6	DEFECT	5.754248981590887E-7	TEST
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999626236270225	WITHOUT_CLASSIFICATION	2.6618429049166914E-5	DESIGN	5.073191295201296E-6	IMPLEMENTATION	2.9751789848904242E-6	DOCUMENTATION	2.2395737739719853E-6	TEST	4.6999987406999326E-7	DEFECT
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999626236270225	WITHOUT_CLASSIFICATION	2.6618429049166914E-5	DESIGN	5.073191295201296E-6	IMPLEMENTATION	2.9751789848904242E-6	DOCUMENTATION	2.2395737739719853E-6	TEST	4.6999987406999326E-7	DEFECT
// FieldInterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999573228173145	WITHOUT_CLASSIFICATION	3.8826814566195634E-5	IMPLEMENTATION	2.741923504385372E-6	DESIGN	7.740278032132248E-7	DEFECT	2.0937892611082085E-7	TEST	1.250378855281262E-7	DOCUMENTATION
// subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999995069643528	WITHOUT_CLASSIFICATION	4.808498788237171E-6	DESIGN	5.8621699349834646E-8	DEFECT	3.0009833719014557E-8	TEST	2.048669181921418E-8	IMPLEMENTATION	1.2739458979834233E-8	DOCUMENTATION
//let's assume that there is only one lazy fetch group, for now!	WITHOUT_CLASSIFICATION	0.9999864687214024	WITHOUT_CLASSIFICATION	1.322138208911801E-5	DEFECT	2.0780063578029008E-7	TEST	6.879990792129103E-8	DESIGN	2.382258525372337E-8	IMPLEMENTATION	9.473379392309255E-9	DOCUMENTATION
// FieldHandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998763032896111	WITHOUT_CLASSIFICATION	1.0410319368063229E-4	IMPLEMENTATION	1.672290599678339E-5	DESIGN	1.499656599358712E-6	TEST	1.1896094511924405E-6	DEFECT	1.813446609001925E-7	DOCUMENTATION
// should *not* need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.9999795949972969	WITHOUT_CLASSIFICATION	1.5574614373735734E-5	DEFECT	2.638704174407108E-6	DESIGN	2.1434692702477284E-6	IMPLEMENTATION	2.73055159338191E-8	DOCUMENTATION	2.090936879199318E-8	TEST
// should probably no-op commit/rollback here, at least in JTA scenarios	WITHOUT_CLASSIFICATION	0.9943233747639362	WITHOUT_CLASSIFICATION	0.004892061687142335	DESIGN	3.7954694683892863E-4	IMPLEMENTATION	3.690138035929675E-4	DEFECT	2.8578879767425383E-5	TEST	7.4239187220861264E-6	DOCUMENTATION
// Base Expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999313665491877	WITHOUT_CLASSIFICATION	3.914814415142925E-5	DEFECT	2.8491516853575664E-5	IMPLEMENTATION	4.218562873138235E-7	DOCUMENTATION	3.0962033688705625E-7	DESIGN	2.623131832163288E-7	TEST
// Various Expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999456194365748	WITHOUT_CLASSIFICATION	5.196108423612018E-5	DEFECT	1.2714553593523003E-6	DESIGN	6.92265106909999E-7	IMPLEMENTATION	3.5202759088582034E-7	DOCUMENTATION	1.0373113191252357E-7	TEST
// explicitly perform no checking...	WITHOUT_CLASSIFICATION	0.9995957377283597	WITHOUT_CLASSIFICATION	3.862701837607987E-4	DESIGN	9.505151479910654E-6	DEFECT	7.2320624230524935E-6	DOCUMENTATION	6.489069953853769E-7	IMPLEMENTATION	6.05966981054357E-7	TEST
// used from testsuite	WITHOUT_CLASSIFICATION	0.9999917590218286	WITHOUT_CLASSIFICATION	7.648399056830683E-6	TEST	3.061498637581423E-7	DESIGN	1.636295763250785E-7	DEFECT	6.822320561180162E-8	DOCUMENTATION	5.457646863465974E-8	IMPLEMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999999277723505	WITHOUT_CLASSIFICATION	3.397101706169858E-8	TEST	1.2979190101233713E-8	DESIGN	1.2879996163654409E-8	DEFECT	1.2320573539565989E-8	DOCUMENTATION	7.6872707760339E-11	IMPLEMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9954271247081595	WITHOUT_CLASSIFICATION	0.004322989338518281	DESIGN	1.7356294724047073E-4	IMPLEMENTATION	4.7901055112023405E-5	DEFECT	1.831782340941365E-5	DOCUMENTATION	1.0104127560420165E-5	TEST
// register synch; stats.connect()	WITHOUT_CLASSIFICATION	0.9999665772246604	WITHOUT_CLASSIFICATION	1.7348257238411518E-5	IMPLEMENTATION	1.3643405213028113E-5	DESIGN	1.2521289074086567E-6	DEFECT	5.897121753488514E-7	TEST	5.892718053116966E-7	DOCUMENTATION
//noncritical, swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.9992971917327321	WITHOUT_CLASSIFICATION	6.228852428552932E-4	DESIGN	4.722629540626769E-5	IMPLEMENTATION	2.847814205189638E-5	DEFECT	2.170692116789128E-6	TEST	2.047894837627718E-6	DOCUMENTATION
// calls executeBatch()	WITHOUT_CLASSIFICATION	0.9999996303704448	WITHOUT_CLASSIFICATION	1.7803932980822274E-7	DESIGN	8.335100750418137E-8	DEFECT	6.593005850103052E-8	IMPLEMENTATION	3.006715444775188E-8	DOCUMENTATION	1.2242004913485087E-8	TEST
//no big deal	WITHOUT_CLASSIFICATION	0.9999095434571668	WITHOUT_CLASSIFICATION	5.411690710973706E-5	DESIGN	1.4800322921161317E-5	IMPLEMENTATION	1.319032207713169E-5	DEFECT	7.228865554815781E-6	DOCUMENTATION	1.1201251704737408E-6	TEST
// no big deal	WITHOUT_CLASSIFICATION	0.9998551946774059	WITHOUT_CLASSIFICATION	9.466577998385707E-5	DESIGN	3.866077381038267E-5	IMPLEMENTATION	6.823712244486215E-6	DEFECT	3.981553050321162E-6	DOCUMENTATION	6.735035050997777E-7	TEST
// no big deal	WITHOUT_CLASSIFICATION	0.9998551946774059	WITHOUT_CLASSIFICATION	9.466577998385707E-5	DESIGN	3.866077381038267E-5	IMPLEMENTATION	6.823712244486215E-6	DEFECT	3.981553050321162E-6	DOCUMENTATION	6.735035050997777E-7	TEST
// sybase driver (jConnect) throwing NPE here in certain // cases, but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.9999845955712491	WITHOUT_CLASSIFICATION	6.505657351500387E-6	DEFECT	6.456155833586295E-6	IMPLEMENTATION	1.3989568952549776E-6	DESIGN	9.884445888314985E-7	TEST	5.5214081719051335E-8	DOCUMENTATION
// see explanation above...	WITHOUT_CLASSIFICATION	0.9999979304586566	WITHOUT_CLASSIFICATION	1.5254882972686088E-6	DESIGN	2.6071611100975363E-7	DEFECT	1.1792808258841235E-7	DOCUMENTATION	1.0117815812060326E-7	TEST	6.423069437821056E-8	IMPLEMENTATION
// If we are in the process of releasing, no sense // checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.9999999920957724	WITHOUT_CLASSIFICATION	6.356375088277623E-9	DEFECT	9.630662041921632E-10	DOCUMENTATION	4.5737180936175777E-10	IMPLEMENTATION	6.902785035918186E-11	TEST	5.838674208720014E-11	DESIGN
// EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999260581806524	WITHOUT_CLASSIFICATION	3.790274266183408E-5	DEFECT	1.9658453466313846E-5	IMPLEMENTATION	1.2370651950484914E-5	DESIGN	2.254339406781436E-6	DOCUMENTATION	1.7556318621454795E-6	TEST
// ResultSet impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999047039885299	WITHOUT_CLASSIFICATION	4.7997135794612386E-5	DESIGN	3.592869121384947E-5	IMPLEMENTATION	9.454276637021434E-6	DEFECT	1.6214295337263307E-6	TEST	2.944782909867209E-7	DOCUMENTATION
// ResultSet impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999947664627885	WITHOUT_CLASSIFICATION	2.1291804483207793E-5	IMPLEMENTATION	1.9617069294194245E-5	DESIGN	7.115209042475027E-6	DEFECT	4.013536641528582E-6	TEST	2.977526536279972E-7	DOCUMENTATION
// refer to comment in StatefulPersistenceContext.addCollection()	WITHOUT_CLASSIFICATION	0.9999981154183973	WITHOUT_CLASSIFICATION	1.1586077289770158E-6	IMPLEMENTATION	2.4590605067806695E-7	DESIGN	2.35463234961901E-7	DEFECT	1.5328641427854428E-7	DOCUMENTATION	9.131817375305476E-8	TEST
// ConnectionManager.Callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9341915763164077	WITHOUT_CLASSIFICATION	0.06508792295926506	IMPLEMENTATION	5.05549166942819E-4	DEFECT	1.9536300290488452E-4	DESIGN	1.728767682372349E-5	DOCUMENTATION	2.3008776558817315E-6	TEST
// Note : success = false, because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.9997021731635517	WITHOUT_CLASSIFICATION	2.9305559444311335E-4	IMPLEMENTATION	2.6615416655094705E-6	DEFECT	1.178990506626326E-6	DESIGN	7.458328192143025E-7	DOCUMENTATION	1.8487701377376128E-7	TEST
// we already have a callback registered; either a local // (org.hibernate.Transaction) transaction has accepted // callback responsibilities, or we have previously // registered a transaction synch.	WITHOUT_CLASSIFICATION	0.9999988855530529	WITHOUT_CLASSIFICATION	8.180922665600031E-7	DESIGN	1.761967704659227E-7	IMPLEMENTATION	1.0807580580567244E-7	DEFECT	9.33791084821321E-9	DOCUMENTATION	2.744193458864123E-9	TEST
// the configured transaction-factory says it only supports // local callback mode, so no sense attempting to register a // JTA Synchronization	WITHOUT_CLASSIFICATION	0.9999086449298401	WITHOUT_CLASSIFICATION	9.052842480482647E-5	DESIGN	6.233890966942611E-7	IMPLEMENTATION	1.3866645481661598E-7	DOCUMENTATION	3.257080844805072E-8	TEST	3.201899521008024E-8	DEFECT
// transactions marked for rollback-only cause some TM impls to throw exceptions	WITHOUT_CLASSIFICATION	0.9999774901399617	WITHOUT_CLASSIFICATION	1.8950187196176894E-5	IMPLEMENTATION	2.238758812783536E-6	DEFECT	7.880202363355024E-7	DESIGN	4.4015663812119646E-7	DOCUMENTATION	9.273715498306654E-8	TEST
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999976581598943	WITHOUT_CLASSIFICATION	2.0168324840430475E-6	DEFECT	1.537774436325693E-7	IMPLEMENTATION	9.640707348179943E-8	DESIGN	4.2406436075809425E-8	TEST	3.241666857095108E-8	DOCUMENTATION
//postInitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.9999995178954177	WITHOUT_CLASSIFICATION	3.859428327999095E-7	IMPLEMENTATION	3.8203105184808565E-8	DEFECT	3.618180484867435E-8	DESIGN	1.176271430527609E-8	DOCUMENTATION	1.0014125081015669E-8	TEST
// cannot handle single quotes	WITHOUT_CLASSIFICATION	0.9999956414567376	WITHOUT_CLASSIFICATION	1.8634851598882073E-6	DEFECT	1.6431228630811898E-6	IMPLEMENTATION	4.564340172030447E-7	DESIGN	3.426951583187769E-7	TEST	5.2806063869618E-8	DOCUMENTATION
// todo : for 4.0 //	WITHOUT_CLASSIFICATION	0.9978839902050871	WITHOUT_CLASSIFICATION	0.001994751222948261	DESIGN	7.434868675184716E-5	DEFECT	3.1693777804521016E-5	IMPLEMENTATION	1.268646333129015E-5	TEST	2.5296440768896164E-6	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9996662558187656	WITHOUT_CLASSIFICATION	3.2538221766072563E-4	DESIGN	6.645794886856698E-6	TEST	1.1918060457175563E-6	DEFECT	4.6726057726893724E-7	IMPLEMENTATION	5.7102063950432517E-8	DOCUMENTATION
// don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.9999388657511826	WITHOUT_CLASSIFICATION	5.307681764159586E-5	DEFECT	4.2050165562874126E-6	DESIGN	2.990409007988898E-6	IMPLEMENTATION	5.715733086020094E-7	TEST	2.9043230290251564E-7	DOCUMENTATION
// don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.9998675538796105	WITHOUT_CLASSIFICATION	1.1673553509311077E-4	DEFECT	7.692003934640364E-6	DESIGN	6.520438352578013E-6	IMPLEMENTATION	1.0767905075874125E-6	TEST	4.2135250169179655E-7	DOCUMENTATION
// position cursor to the last row	WITHOUT_CLASSIFICATION	0.999997807012818	WITHOUT_CLASSIFICATION	1.2973166106035774E-6	IMPLEMENTATION	6.529987635158631E-7	DEFECT	1.0932281697002458E-7	DOCUMENTATION	8.437213185009309E-8	DESIGN	4.897685902603357E-8	TEST
// sequentially read the result set in reverse until we recognize // a change in the key value.  At that point, we are pointed at // the last physical sequential row for the logical row in which // we are interested in processing	WITHOUT_CLASSIFICATION	0.9999999973155974	WITHOUT_CLASSIFICATION	2.2972696708111894E-9	DEFECT	1.2620507409253647E-10	TEST	1.1583806905657065E-10	IMPLEMENTATION	8.238131607902309E-11	DOCUMENTATION	6.270836653321309E-11	DESIGN
// Read backwards until we read past the first physical sequential // row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.9999748814295216	WITHOUT_CLASSIFICATION	2.3428324031423777E-5	DEFECT	1.2439493765882263E-6	TEST	4.399057226162506E-7	IMPLEMENTATION	5.8908632921933215E-9	DOCUMENTATION	5.004844968196275E-10	DESIGN
// Finally, read ahead one row to position result set cursor // at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.9997621323755979	WITHOUT_CLASSIFICATION	1.5140524400564375E-4	DEFECT	6.241223688144787E-5	DESIGN	1.2892959647719069E-5	IMPLEMENTATION	9.730648948827548E-6	TEST	1.4265349185095295E-6	DOCUMENTATION
// now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.9999719454891263	WITHOUT_CLASSIFICATION	2.760427576801803E-5	DESIGN	3.055614881418403E-7	DEFECT	1.3462909624399076E-7	TEST	6.053215030972881E-9	IMPLEMENTATION	3.991306400420441E-9	DOCUMENTATION
// force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.9999978335516573	WITHOUT_CLASSIFICATION	1.14865808708508E-6	DESIGN	9.73059726973928E-7	IMPLEMENTATION	1.7412629555356592E-8	DEFECT	1.53460834901012E-8	DOCUMENTATION	1.1971815636387039E-8	TEST
// this is equivalent to the old behavior...	WITHOUT_CLASSIFICATION	0.9971863569867888	WITHOUT_CLASSIFICATION	0.002789410489770291	DESIGN	1.91152615075356E-5	DEFECT	3.070018761638173E-6	TEST	1.3507876079609594E-6	DOCUMENTATION	6.964555636673598E-7	IMPLEMENTATION
//if null, owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.9999446192332216	WITHOUT_CLASSIFICATION	3.993527046879297E-5	DESIGN	1.2267323693617059E-5	DEFECT	2.9678180900910204E-6	IMPLEMENTATION	1.225725127430913E-7	TEST	8.778201321103507E-8	DOCUMENTATION
//final String queryString, 	WITHOUT_CLASSIFICATION	0.9998993078796229	WITHOUT_CLASSIFICATION	4.8743990929467534E-5	DESIGN	3.0568755588777224E-5	DEFECT	1.411503289583524E-5	IMPLEMENTATION	4.541307099486072E-6	DOCUMENTATION	2.7230338635183254E-6	TEST
// if it was a reference to self, don't need to nullify // unless we are using native id generation, in which // case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.9999999995794324	WITHOUT_CLASSIFICATION	1.6497222714107004E-10	DESIGN	1.2204613913211616E-10	DOCUMENTATION	9.012694657603499E-11	DEFECT	4.315362648910592E-11	TEST	2.6871230578171277E-13	IMPLEMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9998709063120139	WITHOUT_CLASSIFICATION	9.086017060679194E-5	DESIGN	1.5009975900149501E-5	IMPLEMENTATION	1.4803935852533482E-5	TEST	4.4744443264046005E-6	DEFECT	3.94516130027013E-6	DOCUMENTATION
// in an effort to avoid concurrent-modification-exceptions (from // potential recursive calls back through here as a result of the // eventual call to PersistentCollection#endRead), we scan the // internal loadingCollections map for matches and store those matches // in a temp collection.  the temp collection is then used to "drive" // the #endRead processing.	WITHOUT_CLASSIFICATION	0.9999983095152427	WITHOUT_CLASSIFICATION	1.5974330137024865E-6	DESIGN	9.239150683133524E-8	DEFECT	3.1892272598177903E-10	DOCUMENTATION	2.7992060942699667E-10	TEST	6.139340636458122E-11	IMPLEMENTATION
//we can reuse it for each row	WITHOUT_CLASSIFICATION	0.9999768291604295	WITHOUT_CLASSIFICATION	2.1174138305836697E-5	DESIGN	1.1306024787913989E-6	IMPLEMENTATION	4.3859883863882223E-7	DEFECT	3.008523445483132E-7	TEST	1.2664760261027498E-7	DOCUMENTATION
//can't reuse in this case	WITHOUT_CLASSIFICATION	0.9999189348841658	WITHOUT_CLASSIFICATION	7.851285281808316E-5	DESIGN	1.5601467043851132E-6	DEFECT	5.568406248284714E-7	TEST	2.2824391413342063E-7	DOCUMENTATION	2.0703177260545634E-7	IMPLEMENTATION
// First we need to suspend any current JTA transaction and obtain // a JDBC connection	WITHOUT_CLASSIFICATION	0.9961398573573493	WITHOUT_CLASSIFICATION	0.0021506086072354794	IMPLEMENTATION	0.0010699071944074627	DOCUMENTATION	6.323621048203165E-4	DESIGN	4.27883857887374E-6	TEST	2.9858976085501113E-6	DEFECT
//getResultList(results);	WITHOUT_CLASSIFICATION	0.9999840650659154	WITHOUT_CLASSIFICATION	1.325480518344272E-5	DEFECT	9.497521763463202E-7	TEST	9.264179018113039E-7	DESIGN	6.732120595222942E-7	IMPLEMENTATION	1.307467634613512E-7	DOCUMENTATION
//if we only returned one entity, query by key is more efficient	WITHOUT_CLASSIFICATION	0.9952461147332056	WITHOUT_CLASSIFICATION	0.004700444638447901	DESIGN	2.5444258563862082E-5	DEFECT	2.3086646083874164E-5	IMPLEMENTATION	3.1614919008993237E-6	DOCUMENTATION	1.748231797897855E-6	TEST
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999991122586156	WITHOUT_CLASSIFICATION	7.190642025451711E-7	IMPLEMENTATION	1.660557942165176E-7	DEFECT	1.2041189151926638E-9	DESIGN	7.726146789867234E-10	TEST	6.44654288760791E-10	DOCUMENTATION
// handle empty collection	WITHOUT_CLASSIFICATION	0.9995792266376891	WITHOUT_CLASSIFICATION	2.918793631233831E-4	DESIGN	1.2418708336045373E-4	IMPLEMENTATION	2.5242717216069333E-6	DEFECT	1.186302289505295E-6	DOCUMENTATION	9.963418159687235E-7	TEST
// else no collection element, but also no owner	WITHOUT_CLASSIFICATION	0.9999994398010892	WITHOUT_CLASSIFICATION	3.188815839720052E-7	IMPLEMENTATION	1.5528989881728167E-7	DESIGN	3.8723735646002947E-8	DEFECT	3.196641783601586E-8	DOCUMENTATION	1.5337274624759552E-8	TEST
//handle empty collections	WITHOUT_CLASSIFICATION	0.9999484003236364	WITHOUT_CLASSIFICATION	4.1670949636429327E-5	IMPLEMENTATION	9.510608009050686E-6	DESIGN	1.7143357278900786E-7	TEST	1.5980296476731046E-7	DOCUMENTATION	8.688218058717924E-8	DEFECT
// else this is not a collection initializer (and empty collections will // be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.9999741560474567	WITHOUT_CLASSIFICATION	2.3630868002456948E-5	DESIGN	1.9249972072154533E-6	DEFECT	2.8025876401597987E-7	IMPLEMENTATION	7.675510656607844E-9	TEST	1.5305889631977512E-10	DOCUMENTATION
// validate() instances of Validatable	WITHOUT_CLASSIFICATION	0.999991232260564	WITHOUT_CLASSIFICATION	4.432735215796812E-6	DEFECT	3.891123429417488E-6	DESIGN	3.29135502105095E-7	IMPLEMENTATION	6.048443545696749E-8	DOCUMENTATION	5.426085326338004E-8	TEST
// if we know there is exactly 1 row, we can skip. // it would be great if we could _always_ skip this; // it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.4888437370277301	DEFECT	0.4520562284539107	WITHOUT_CLASSIFICATION	0.05801992916514679	DESIGN	6.738405419564049E-4	TEST	3.978048048728908E-4	IMPLEMENTATION	8.460006383157226E-6	DOCUMENTATION
// remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.9999839086510864	WITHOUT_CLASSIFICATION	1.562783760706765E-5	DESIGN	4.370508724925411E-7	IMPLEMENTATION	1.8956095653469814E-8	DEFECT	5.432689206595338E-9	TEST	2.071649107990937E-9	DOCUMENTATION
//null version means the object is in the process of being loaded somewhere else in the ResultSet	WITHOUT_CLASSIFICATION	0.9999918382176943	WITHOUT_CLASSIFICATION	4.504260305407037E-6	DESIGN	3.573790872600964E-6	DEFECT	4.375476398687539E-8	IMPLEMENTATION	3.317403950042285E-8	DOCUMENTATION	6.802324090741272E-9	TEST
//problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.997768826099379	WITHOUT_CLASSIFICATION	0.002004198717890667	DEFECT	1.8806661090577957E-4	DESIGN	2.2600779629219863E-5	IMPLEMENTATION	1.4478139730657352E-5	DOCUMENTATION	1.8296524646127828E-6	TEST
//use the id passed in	WITHOUT_CLASSIFICATION	0.9999961606579134	WITHOUT_CLASSIFICATION	3.354572197602593E-6	IMPLEMENTATION	1.9580503943292744E-7	TEST	1.6436188440978647E-7	DOCUMENTATION	1.0163847123502226E-7	DESIGN	2.296449405254013E-8	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.999996800664025	WITHOUT_CLASSIFICATION	1.0068024846380766E-6	DEFECT	9.072794162471088E-7	DESIGN	5.761946391645835E-7	DOCUMENTATION	4.4068206705787276E-7	TEST	2.6837736788107007E-7	IMPLEMENTATION
// prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.9999993674682053	WITHOUT_CLASSIFICATION	3.9332206814844534E-7	DEFECT	1.245547941541487E-7	IMPLEMENTATION	8.161216214971446E-8	DESIGN	2.3968823470321265E-8	DOCUMENTATION	9.073946784069402E-9	TEST
//no point doing this if NONE was requested	WITHOUT_CLASSIFICATION	0.9980122963125881	WITHOUT_CLASSIFICATION	0.0018287395769384838	TEST	1.2613506809394312E-4	DESIGN	1.6340226003663808E-5	IMPLEMENTATION	1.0347338707526449E-5	DEFECT	6.141477668280666E-6	DOCUMENTATION
//If the object is already loaded, return the loaded one	WITHOUT_CLASSIFICATION	0.9999734734496712	WITHOUT_CLASSIFICATION	1.578429818504059E-5	IMPLEMENTATION	7.96109749947198E-6	DEFECT	2.616370236698852E-6	DESIGN	9.830317036720879E-8	TEST	6.648123720967521E-8	DOCUMENTATION
//its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.9998329182798649	WITHOUT_CLASSIFICATION	8.325095602800342E-5	DESIGN	3.880698313922989E-5	IMPLEMENTATION	3.155246794557248E-5	DEFECT	8.705171585234182E-6	TEST	4.766141437070996E-6	DOCUMENTATION
// cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.999824747423915	WITHOUT_CLASSIFICATION	1.6834853850178317E-4	IMPLEMENTATION	3.931110106907479E-6	DESIGN	1.6426306781507361E-6	DEFECT	7.546883997377444E-7	TEST	5.756083984555088E-7	DOCUMENTATION
//the load() which takes an entity does not pass an entityName	WITHOUT_CLASSIFICATION	0.9999395672318593	WITHOUT_CLASSIFICATION	2.23833710284581E-5	TEST	1.732986786802346E-5	IMPLEMENTATION	1.4847362074926333E-5	DEFECT	3.0112625284407573E-6	DOCUMENTATION	2.86090464094883E-6	DESIGN
//we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.999969350559371	WITHOUT_CLASSIFICATION	2.4548725269040232E-5	IMPLEMENTATION	3.93282034724374E-6	DEFECT	1.8655653812760132E-6	DOCUMENTATION	2.084910077580867E-7	TEST	9.383862364351223E-8	DESIGN
// look for a proxy	WITHOUT_CLASSIFICATION	0.9999916086604441	WITHOUT_CLASSIFICATION	5.4870531007613285E-6	DEFECT	1.8034634873539558E-6	IMPLEMENTATION	1.0600243554566608E-6	DESIGN	2.4309129215325725E-8	DOCUMENTATION	1.6489483146790937E-8	TEST
//we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.8411782879283173	WITHOUT_CLASSIFICATION	0.156478292133444	IMPLEMENTATION	0.0013188478243135726	TEST	6.502120267308118E-4	DESIGN	3.6030840990310863E-4	DOCUMENTATION	1.4051677291208855E-5	DEFECT
//its the given optional object	WITHOUT_CLASSIFICATION	0.9999674464450444	WITHOUT_CLASSIFICATION	1.5437850895757637E-5	IMPLEMENTATION	6.896887475183887E-6	DOCUMENTATION	5.7216314037785496E-6	DESIGN	4.131062809187219E-6	DEFECT	3.661223715510298E-7	TEST
// instantiate a new instance	WITHOUT_CLASSIFICATION	0.9999846477422072	WITHOUT_CLASSIFICATION	1.5217548364253469E-5	DESIGN	7.45096318190148E-8	DOCUMENTATION	3.420424919705381E-8	DEFECT	1.7909117522627517E-8	TEST	8.086430128634659E-9	IMPLEMENTATION
//need to hydrate it.	WITHOUT_CLASSIFICATION	0.9988378718033181	WITHOUT_CLASSIFICATION	5.85256091623362E-4	IMPLEMENTATION	5.075895537893556E-4	DESIGN	3.450448736701722E-5	TEST	3.37681903862387E-5	DOCUMENTATION	1.009873515836379E-6	DEFECT
// return a newly loaded object	WITHOUT_CLASSIFICATION	0.9999918073503863	WITHOUT_CLASSIFICATION	7.56496998943515E-6	DESIGN	6.104913133703346E-7	DEFECT	1.1026463575517695E-8	DOCUMENTATION	4.153326277634588E-9	IMPLEMENTATION	2.0085212059282835E-9	TEST
//will be ignored, using the existing Entry instead	WITHOUT_CLASSIFICATION	0.9999897720849853	WITHOUT_CLASSIFICATION	4.66001703919284E-6	DESIGN	4.578069798217416E-6	IMPLEMENTATION	6.743771728042534E-7	DEFECT	2.3541981029658583E-7	DOCUMENTATION	8.003119419663743E-8	TEST
// key is an entity involved with the operation performed by the listener; // value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.9999999969093265	WITHOUT_CLASSIFICATION	2.556733296517861E-9	DESIGN	3.3486348888440664E-10	TEST	9.693067998574101E-11	DEFECT	9.582207010009325E-11	IMPLEMENTATION	6.3238227508094556E-12	DOCUMENTATION
//materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.9999921817047495	WITHOUT_CLASSIFICATION	3.6939386062777006E-6	IMPLEMENTATION	1.5999091416971013E-6	DESIGN	1.390332174792518E-6	TEST	1.0579172409752872E-6	DOCUMENTATION	7.619808678695046E-8	DEFECT
// Get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.9999998058900446	WITHOUT_CLASSIFICATION	1.7727800733563046E-7	DESIGN	8.167610490072406E-9	TEST	6.560310702770077E-9	IMPLEMENTATION	1.1539410409034642E-9	DOCUMENTATION	9.500857782529337E-10	DEFECT
// ok in normal Hibernate usage to delete a detached entity; JPA however // forbids it, thus this is a hook for HEM to affect this behavior	WITHOUT_CLASSIFICATION	0.9996657399340103	WITHOUT_CLASSIFICATION	2.7506822962257004E-4	DEFECT	5.8923555407899486E-5	DESIGN	1.4239855852404284E-7	IMPLEMENTATION	7.210781901458378E-8	DOCUMENTATION	5.3774581667830354E-8	TEST
// the entry will be removed after the flush, and will no longer // override the stale snapshot // This is now handled by removeEntity() in EntityDeleteAction //persistenceContext.removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9936555703078459	WITHOUT_CLASSIFICATION	0.006125200508636307	DESIGN	2.0945798576562608E-4	DEFECT	9.634400617175958E-6	IMPLEMENTATION	1.0069553982236617E-7	TEST	3.6101595303732695E-8	DOCUMENTATION
//addInitializedCollection(collection, persister, id);	WITHOUT_CLASSIFICATION	0.9999950818749844	WITHOUT_CLASSIFICATION	2.858767460882146E-6	DESIGN	1.2974760016059823E-6	IMPLEMENTATION	3.0683321035791335E-7	DEFECT	2.7798356427390273E-7	TEST	1.7706477852978578E-7	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9997848562416923	WITHOUT_CLASSIFICATION	8.372299825323778E-5	DESIGN	6.276501348622162E-5	DEFECT	5.3794321227872224E-5	IMPLEMENTATION	9.018015980353736E-6	DOCUMENTATION	5.843409359872022E-6	TEST
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9997848562416923	WITHOUT_CLASSIFICATION	8.372299825323778E-5	DESIGN	6.276501348622162E-5	DEFECT	5.3794321227872224E-5	IMPLEMENTATION	9.018015980353736E-6	DOCUMENTATION	5.843409359872022E-6	TEST
/*|| oj.getJoinable().consumesCollectionAlias() */	WITHOUT_CLASSIFICATION	0.9999973352458589	WITHOUT_CLASSIFICATION	1.007864676796543E-6	DEFECT	8.023081654646361E-7	DESIGN	3.431897074310112E-7	IMPLEMENTATION	2.717513573397939E-7	TEST	2.3964023410954206E-7	DOCUMENTATION
// here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.9999129128618464	WITHOUT_CLASSIFICATION	8.626223316172857E-5	DESIGN	5.271185454097343E-7	TEST	1.9038992148048574E-7	IMPLEMENTATION	7.668564456952868E-8	DEFECT	3.0710880447359813E-8	DOCUMENTATION
// Code to handle subclasses of topClass	WITHOUT_CLASSIFICATION	0.9999356780561673	WITHOUT_CLASSIFICATION	6.372075680314295E-5	DESIGN	4.264780831989034E-7	DEFECT	1.1706985177508468E-7	TEST	3.66741769393986E-8	DOCUMENTATION	2.0964917705542406E-8	IMPLEMENTATION
//woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.9996046740634197	WITHOUT_CLASSIFICATION	3.9267036336061657E-4	DESIGN	1.6460404068629593E-6	DEFECT	6.545904093676061E-7	TEST	2.4310135673595585E-7	DOCUMENTATION	1.1184104651314113E-7	IMPLEMENTATION
// we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.9999118264291071	WITHOUT_CLASSIFICATION	5.210509077780374E-5	DESIGN	2.502789212348509E-5	DEFECT	7.889687575198878E-6	IMPLEMENTATION	2.1835798057822392E-6	TEST	9.673206104783333E-7	DOCUMENTATION
// we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.9993294063652192	WITHOUT_CLASSIFICATION	5.064128402491108E-4	IMPLEMENTATION	1.44598545450254E-4	DESIGN	8.789772356925413E-6	TEST	6.732519895974891E-6	DEFECT	4.059956828660283E-6	DOCUMENTATION
// synchronized to avoid multi-thread access issues; defined as method synch to avoid // potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.9999581426158023	WITHOUT_CLASSIFICATION	4.049152349735182E-5	DESIGN	9.588993894143254E-7	DEFECT	3.3425614141960727E-7	DOCUMENTATION	4.397887400765113E-8	TEST	2.872629562572748E-8	IMPLEMENTATION
// Allows various loaders (ok mainly the QueryLoader :) to check // whether scrolling of their result set should be allowed. // // By default it is allowed.	WITHOUT_CLASSIFICATION	0.9999973372651513	WITHOUT_CLASSIFICATION	1.8253069666532608E-6	DEFECT	7.932008765698626E-7	IMPLEMENTATION	3.7845248829853245E-8	TEST	4.308227870027365E-9	DESIGN	2.0735287018367008E-9	DOCUMENTATION
//before adding to collection!	WITHOUT_CLASSIFICATION	0.9999647451163954	WITHOUT_CLASSIFICATION	2.530399101165323E-5	DEFECT	6.7955561173613025E-6	IMPLEMENTATION	1.925456145535938E-6	DESIGN	7.081266910144108E-7	DOCUMENTATION	5.217536389242908E-7	TEST
// if the current depth is 0, the root thing being loaded is the // many-to-many collection itself.  Here, it is alright to use // an inner join...	WITHOUT_CLASSIFICATION	0.9999963711999302	WITHOUT_CLASSIFICATION	3.3361631843193494E-6	DESIGN	1.8961600691581596E-7	DEFECT	8.023628695544137E-8	TEST	2.10791910708607E-8	IMPLEMENTATION	1.7054004015615446E-9	DOCUMENTATION
//operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.9999993847975304	WITHOUT_CLASSIFICATION	4.2187374800219434E-7	IMPLEMENTATION	9.413972505684366E-8	DESIGN	4.712178245336159E-8	DEFECT	3.851064459472382E-8	DOCUMENTATION	1.3556569582233795E-8	TEST
// simple, because we can't have a one-to-one or a collection  // (or even a property-ref) in a composite-element:	WITHOUT_CLASSIFICATION	0.9999990423272508	WITHOUT_CLASSIFICATION	5.927986288348426E-7	DEFECT	3.294926972599069E-7	DESIGN	3.0284293169400355E-8	IMPLEMENTATION	4.223578233151778E-9	DOCUMENTATION	8.735517629665089E-10	TEST
//a composite key	WITHOUT_CLASSIFICATION	0.9999975462150683	WITHOUT_CLASSIFICATION	1.2886973121957644E-6	DESIGN	7.515423580679807E-7	IMPLEMENTATION	1.7662709264537103E-7	DOCUMENTATION	1.6730966645259362E-7	DEFECT	6.960850232261128E-8	TEST
// if no batch, use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.9999973308921479	WITHOUT_CLASSIFICATION	2.4598254978025567E-6	DESIGN	1.0774790596032245E-7	IMPLEMENTATION	4.9127361900327836E-8	DOCUMENTATION	4.2786327248265534E-8	DEFECT	9.620759302318349E-9	TEST
//it must be a collection fetch	WITHOUT_CLASSIFICATION	0.9998719385374928	WITHOUT_CLASSIFICATION	1.2640503807741596E-4	DESIGN	7.407004721055225E-7	TEST	5.245810387855969E-7	IMPLEMENTATION	3.118887969215867E-7	DEFECT	7.925412198286792E-8	DOCUMENTATION
// needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.932872641322651	WITHOUT_CLASSIFICATION	0.03946352869897057	DESIGN	0.02660976723118055	IMPLEMENTATION	6.857907973474687E-4	DEFECT	2.904264397445117E-4	DOCUMENTATION	7.784551010586985E-5	TEST
/*&& etype.isReferenceToPrimaryKey()*/	WITHOUT_CLASSIFICATION	0.999975344639461	WITHOUT_CLASSIFICATION	1.725990925625971E-5	DESIGN	5.6314835933371245E-6	IMPLEMENTATION	1.1230285988061073E-6	DEFECT	5.261125732711845E-7	DOCUMENTATION	1.1482651723471506E-7	TEST
// it might still need to apply a collection ordering based on a // many-to-many defined order-by...	WITHOUT_CLASSIFICATION	0.6757062249467277	WITHOUT_CLASSIFICATION	0.2659720939134586	IMPLEMENTATION	0.055831700003888145	DESIGN	0.0017931631015891984	DEFECT	5.9821570787056E-4	TEST	9.860232646574737E-5	DOCUMENTATION
// if a composite key, use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching //TODO: unnecessary for databases with ANSI-style joins	WITHOUT_CLASSIFICATION	0.9686354173553411	WITHOUT_CLASSIFICATION	0.031223444322629086	IMPLEMENTATION	1.339735385123009E-4	DESIGN	6.115094674500832E-6	DEFECT	6.351434258256727E-7	TEST	4.1454541727225525E-7	DOCUMENTATION
// belong to other persister // belong to other persister	WITHOUT_CLASSIFICATION	0.9959513664171235	WITHOUT_CLASSIFICATION	0.004026099037620814	DESIGN	8.991912906393677E-6	TEST	7.54009818276796E-6	DEFECT	5.569607340376349E-6	IMPLEMENTATION	4.329268262526133E-7	DOCUMENTATION
// we found it	WITHOUT_CLASSIFICATION	0.999970210870442	WITHOUT_CLASSIFICATION	1.612170179966588E-5	DEFECT	1.1390661578332266E-5	DESIGN	9.830213609544102E-7	IMPLEMENTATION	8.41212642060443E-7	DOCUMENTATION	4.5253217706088637E-7	TEST
//we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.9999763710532622	WITHOUT_CLASSIFICATION	2.2380919469518043E-5	DESIGN	8.420723111212703E-7	IMPLEMENTATION	2.229848559548836E-7	DOCUMENTATION	1.1798398440442059E-7	TEST	6.498611678302095E-8	DEFECT
//disable a join back to this same association	WITHOUT_CLASSIFICATION	0.992442622713172	WITHOUT_CLASSIFICATION	0.006953813853693192	DESIGN	3.3703911840772945E-4	DOCUMENTATION	2.0614072190961087E-4	TEST	4.694320489642822E-5	IMPLEMENTATION	1.3440387921016063E-5	DEFECT
//NOTE: unlike all other Loaders, this one is NOT //      multithreaded, or cacheable!!	WITHOUT_CLASSIFICATION	0.9975042934778274	WITHOUT_CLASSIFICATION	0.002009200283145675	DESIGN	4.0408169502217993E-4	IMPLEMENTATION	4.400948131439793E-5	DEFECT	3.726622822891284E-5	TEST	1.148834461422962E-6	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999977804705543	WITHOUT_CLASSIFICATION	1.7850399445266081E-6	DESIGN	2.3213848507557193E-7	DEFECT	1.911849329257717E-7	DOCUMENTATION	6.665474597181134E-9	IMPLEMENTATION	4.500608663275372E-9	TEST
//root entity comes *last*	WITHOUT_CLASSIFICATION	0.9999444179997774	WITHOUT_CLASSIFICATION	5.0549558136463425E-5	DESIGN	2.047933421602215E-6	IMPLEMENTATION	2.037899127319322E-6	DEFECT	6.837579484883212E-7	TEST	2.6285158872692234E-7	DOCUMENTATION
//deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.9999458712864636	WITHOUT_CLASSIFICATION	4.1433603930359336E-5	DESIGN	6.335472311183375E-6	DEFECT	5.7798078663366775E-6	IMPLEMENTATION	5.311558072436864E-7	DOCUMENTATION	4.8673621357649476E-8	TEST
//alias may be null //EARLY EXIT	WITHOUT_CLASSIFICATION	0.999991228137024	WITHOUT_CLASSIFICATION	5.685572553679328E-6	DESIGN	2.5351070247772046E-6	IMPLEMENTATION	3.929212081760134E-7	DEFECT	1.287138087508413E-7	DOCUMENTATION	2.954838050218863E-8	TEST
// if it is a compound path	WITHOUT_CLASSIFICATION	0.9999989411099048	WITHOUT_CLASSIFICATION	6.938119841287241E-7	DESIGN	1.7015083455088038E-7	IMPLEMENTATION	1.471325728744315E-7	TEST	4.3014324888922414E-8	DEFECT	4.780378534724699E-9	DOCUMENTATION
// otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.9999328005186888	WITHOUT_CLASSIFICATION	5.1288328106486595E-5	IMPLEMENTATION	1.4389020513368782E-5	DESIGN	1.2794930999858249E-6	TEST	1.4668022479085757E-7	DEFECT	9.595936642496115E-8	DOCUMENTATION
// if its the root criteria, we are done	WITHOUT_CLASSIFICATION	0.9999977342836641	WITHOUT_CLASSIFICATION	1.838135412788807E-6	DESIGN	2.8135739855632156E-7	TEST	9.45313121002663E-8	IMPLEMENTATION	4.4307271479813405E-8	DEFECT	7.384940817071598E-9	DOCUMENTATION
// otherwise, recurse	WITHOUT_CLASSIFICATION	0.9998445568395978	WITHOUT_CLASSIFICATION	1.385885221736237E-4	DESIGN	1.4795668470076564E-5	IMPLEMENTATION	9.726883794994993E-7	DEFECT	7.196153997949091E-7	TEST	3.6666597931918315E-7	DOCUMENTATION
//the criteria instance	WITHOUT_CLASSIFICATION	0.9999912549315646	WITHOUT_CLASSIFICATION	7.1933739499309695E-6	DESIGN	1.1708056324847148E-6	IMPLEMENTATION	1.8447283446049396E-7	TEST	1.32559968003274E-7	DOCUMENTATION	6.385605063609356E-8	DEFECT
// the entity name	WITHOUT_CLASSIFICATION	0.9999852576784236	WITHOUT_CLASSIFICATION	8.62027085541413E-6	IMPLEMENTATION	3.912329552931072E-6	DESIGN	1.2163041008478583E-6	DOCUMENTATION	5.133286984605151E-7	TEST	4.800883687641367E-7	DEFECT
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9995153667367186	WITHOUT_CLASSIFICATION	2.3086924408762604E-4	DESIGN	1.3934651929239366E-4	IMPLEMENTATION	9.273541185381609E-5	DEFECT	1.6076413060797026E-5	TEST	5.605674986849947E-6	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9995153667367186	WITHOUT_CLASSIFICATION	2.3086924408762604E-4	DESIGN	1.3934651929239366E-4	IMPLEMENTATION	9.273541185381609E-5	DEFECT	1.6076413060797026E-5	TEST	5.605674986849947E-6	DOCUMENTATION
//it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.9999373954796431	WITHOUT_CLASSIFICATION	4.914033176582608E-5	DESIGN	1.2139063230289331E-5	DEFECT	7.185728586549312E-7	IMPLEMENTATION	3.74123993714053E-7	TEST	2.3242850857153314E-7	DOCUMENTATION
//should never happen, i think	WITHOUT_CLASSIFICATION	0.9991021620499297	WITHOUT_CLASSIFICATION	8.365884263911907E-4	DESIGN	2.9910526395012306E-5	IMPLEMENTATION	1.4548196966177387E-5	TEST	9.002495456846861E-6	DOCUMENTATION	7.78830486099394E-6	DEFECT
// Detect discriminator values...	WITHOUT_CLASSIFICATION	0.9999977528698816	WITHOUT_CLASSIFICATION	1.5093816511799995E-6	DESIGN	4.4536593175109983E-7	DEFECT	1.4704903131541907E-7	IMPLEMENTATION	8.693678343171897E-8	TEST	5.8396720750827455E-8	DOCUMENTATION
// Convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.9999678035954552	WITHOUT_CLASSIFICATION	2.6608773705166426E-5	DESIGN	2.3323956337061617E-6	IMPLEMENTATION	2.165212758486006E-6	DEFECT	6.974816826258925E-7	DOCUMENTATION	3.9254076485982517E-7	TEST
// and the qualifier is not the alias of this criteria //      -> check to see if we belong to some criteria other //          than the one that created us	WITHOUT_CLASSIFICATION	0.9998389561264404	WITHOUT_CLASSIFICATION	1.6010638652796938E-4	DESIGN	7.348795659781764E-7	TEST	1.1059277111141896E-7	IMPLEMENTATION	6.197195796949179E-8	DOCUMENTATION	3.0042736633485474E-8	DEFECT
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9998042028558094	WITHOUT_CLASSIFICATION	1.2307697296126447E-4	DESIGN	6.971642236114581E-5	DEFECT	2.7780223820465114E-6	TEST	1.23624780480758E-7	DOCUMENTATION	1.0210170565360868E-7	IMPLEMENTATION
// Otherwise, this is an ordinary value.	WITHOUT_CLASSIFICATION	0.9999832974429697	WITHOUT_CLASSIFICATION	1.4849046774819388E-5	DESIGN	1.668976247232298E-6	DEFECT	1.2489306412281229E-7	TEST	3.3753219711314094E-8	DOCUMENTATION	2.5887724444715526E-8	IMPLEMENTATION
// Currently *not* cachable if autodiscover types is in effect (e.g. "select * ...")	WITHOUT_CLASSIFICATION	0.9998325727868331	WITHOUT_CLASSIFICATION	1.6739736949257107E-4	DESIGN	1.5196057684459377E-8	TEST	1.1027029209152063E-8	DEFECT	2.5122509950505137E-9	DOCUMENTATION	1.1083363871819336E-9	IMPLEMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// this is only needed (afaict) for ResultTransformer processing...	WITHOUT_CLASSIFICATION	0.9994466953559047	WITHOUT_CLASSIFICATION	5.397539497456181E-4	DESIGN	7.799601100553546E-6	TEST	2.4779570892163397E-6	DEFECT	1.8879828994677598E-6	IMPLEMENTATION	1.3851532604627504E-6	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999979351838082	WITHOUT_CLASSIFICATION	2.0039399919311547E-6	DESIGN	4.352078181198614E-8	TEST	9.816786000016842E-9	DEFECT	6.423527997934571E-9	IMPLEMENTATION	1.1151041678736588E-9	DOCUMENTATION
// build an array with indices equal to the total number // of actual returns in the result Hibernate will return // for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.9998750339267107	WITHOUT_CLASSIFICATION	9.732076044766558E-5	DESIGN	1.802215402858711E-5	IMPLEMENTATION	9.25297017628019E-6	DEFECT	3.3317055699608387E-7	TEST	3.7018079833279345E-8	DOCUMENTATION
// replace {....} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.999339836190912	WITHOUT_CLASSIFICATION	6.256398181783084E-4	DESIGN	2.2607459333528467E-5	IMPLEMENTATION	5.87227847902504E-6	DEFECT	5.058032611401941E-6	TEST	9.862204857343806E-7	DOCUMENTATION
// No additional open braces found in the string, append the // rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.9999942490618653	WITHOUT_CLASSIFICATION	3.588909790615382E-6	DEFECT	1.5265425880727009E-6	TEST	5.134047073606568E-7	DESIGN	9.791978152709136E-8	IMPLEMENTATION	2.416126714268795E-8	DOCUMENTATION
// apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.9999836290878202	WITHOUT_CLASSIFICATION	1.2016768921426554E-5	DESIGN	2.0929505443079633E-6	IMPLEMENTATION	1.738474947334769E-6	DEFECT	3.154582407592457E-7	TEST	2.0725952583971245E-7	DOCUMENTATION
// it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.999998462251966	WITHOUT_CLASSIFICATION	1.4045505822059626E-6	IMPLEMENTATION	4.855086781245066E-8	DESIGN	4.268486241331136E-8	DEFECT	4.0524901804339375E-8	TEST	1.436819903633372E-9	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9930812803325991	WITHOUT_CLASSIFICATION	0.0026877177083092065	DEFECT	0.0026641239775573515	IMPLEMENTATION	0.0015093849233703614	DESIGN	3.038713545752815E-5	DOCUMENTATION	2.7105922706354538E-5	TEST
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9930812803325991	WITHOUT_CLASSIFICATION	0.0026877177083092065	DEFECT	0.0026641239775573515	IMPLEMENTATION	0.0015093849233703614	DESIGN	3.038713545752815E-5	DOCUMENTATION	2.7105922706354538E-5	TEST
// The current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.9999527184174963	WITHOUT_CLASSIFICATION	4.125840985369533E-5	DEFECT	3.3022090513591744E-6	DESIGN	2.502155943503776E-6	IMPLEMENTATION	1.6725670975564058E-7	DOCUMENTATION	5.155094544574203E-8	TEST
// it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.9999983491932057	WITHOUT_CLASSIFICATION	8.286646450230042E-7	DEFECT	7.500123031894101E-7	DESIGN	2.962466241787127E-8	IMPLEMENTATION	2.9012206265449056E-8	TEST	1.3492977375501582E-8	DOCUMENTATION
// Possibly handle :something parameters for the query ?	WITHOUT_CLASSIFICATION	0.9961766133674794	WITHOUT_CLASSIFICATION	0.0035577305994793505	DESIGN	2.470998350104785E-4	IMPLEMENTATION	1.349278017510536E-5	TEST	3.936201883608635E-6	DEFECT	1.127215971996404E-6	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999959586449741	WITHOUT_CLASSIFICATION	3.962615376635636E-6	DESIGN	3.9075467346376274E-8	IMPLEMENTATION	3.318592589206895E-8	DEFECT	5.720593961326889E-9	TEST	7.576620633483929E-10	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9954271247081595	WITHOUT_CLASSIFICATION	0.004322989338518281	DESIGN	1.7356294724047073E-4	IMPLEMENTATION	4.7901055112023405E-5	DEFECT	1.831782340941365E-5	DOCUMENTATION	1.0104127560420165E-5	TEST
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9987859569186616	WITHOUT_CLASSIFICATION	4.7861416563833463E-4	DESIGN	4.121472802462167E-4	DEFECT	2.792438886222275E-4	IMPLEMENTATION	2.5680981753181346E-5	DOCUMENTATION	1.835676507847049E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// Now, process the returns	WITHOUT_CLASSIFICATION	0.999998115850923	WITHOUT_CLASSIFICATION	1.601310382339877E-6	IMPLEMENTATION	1.985529338015541E-7	DESIGN	5.4661481808565674E-8	DEFECT	1.880168536787943E-8	DOCUMENTATION	1.0822593696492441E-8	TEST
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.9999936707327572	WITHOUT_CLASSIFICATION	3.439761064348035E-6	IMPLEMENTATION	2.5479978198077186E-6	DESIGN	2.0916906815673476E-7	DOCUMENTATION	9.589632329764948E-8	TEST	3.644296719597483E-8	DEFECT
// already been processed...	WITHOUT_CLASSIFICATION	0.9999936707327572	WITHOUT_CLASSIFICATION	3.439761064348035E-6	IMPLEMENTATION	2.5479978198077186E-6	DESIGN	2.0916906815673476E-7	DOCUMENTATION	9.589632329764948E-8	TEST	3.644296719597483E-8	DEFECT
// Make sure the owner alias is known...	WITHOUT_CLASSIFICATION	0.9999877294079046	WITHOUT_CLASSIFICATION	1.0541249249907453E-5	IMPLEMENTATION	1.0659447888564495E-6	DEFECT	3.8041587384964893E-7	DESIGN	2.0855666448593976E-7	TEST	7.442551841438658E-8	DOCUMENTATION
// first, break down the returns into maps keyed by alias // so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.9999635231946874	WITHOUT_CLASSIFICATION	2.9728719982946906E-5	IMPLEMENTATION	5.20945620799403E-6	DESIGN	1.4787149596147692E-6	DEFECT	5.05760778194023E-8	TEST	9.338084216641472E-9	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// If this return's alias has not been processed yet, do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.9999897691183195	WITHOUT_CLASSIFICATION	8.19872762823464E-6	DESIGN	1.0084637242218215E-6	IMPLEMENTATION	5.309334638151412E-7	DEFECT	4.5462971518283896E-7	TEST	3.8127149203569995E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// for merging of versioned entities, we consider the version having // been changed only when: // 1) the two version values are different; //      *AND* // 2) The target actually represents database state! // // This second condition is a special case which allows // an entity to be merged during the same transaction // (though during a seperate operation) in which it was // originally persisted/saved	WITHOUT_CLASSIFICATION	0.9999998348274023	WITHOUT_CLASSIFICATION	1.0138838042605049E-7	DESIGN	4.035138115830646E-8	IMPLEMENTATION	1.9618075099486645E-8	DEFECT	2.9132339768341517E-9	DOCUMENTATION	9.015269522225303E-10	TEST
// this is the second pass through on a merge op, so here we limit the // replacement to associations types (value types were already replaced // during the first pass)	WITHOUT_CLASSIFICATION	0.9861270465509326	WITHOUT_CLASSIFICATION	0.013870532897005022	DESIGN	1.1814110170758866E-6	TEST	9.538105786989558E-7	DOCUMENTATION	2.729828144964833E-7	IMPLEMENTATION	1.2347652099652697E-8	DEFECT
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.999775780892406	WITHOUT_CLASSIFICATION	9.399090114120869E-5	IMPLEMENTATION	9.106440363704637E-5	DESIGN	2.718233334482924E-5	DEFECT	6.628891441913464E-6	DOCUMENTATION	5.352578028902095E-6	TEST
// cascade-save to collections AFTER the collection owner was saved	WITHOUT_CLASSIFICATION	0.9998676048987944	WITHOUT_CLASSIFICATION	1.2793429114421533E-4	IMPLEMENTATION	2.301725775368951E-6	DESIGN	1.954873597769898E-6	DEFECT	1.205753832284807E-7	TEST	8.363530506946872E-8	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999928544938745	WITHOUT_CLASSIFICATION	4.805035835559032E-6	DESIGN	1.5781486358907508E-6	IMPLEMENTATION	5.459326436668781E-7	DEFECT	1.4674090381189934E-7	TEST	6.964810654521944E-8	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999986559870773	WITHOUT_CLASSIFICATION	6.824434754920393E-7	IMPLEMENTATION	6.150210705995265E-7	DESIGN	2.3741079765576713E-8	TEST	1.80018779769591E-8	DOCUMENTATION	4.805418902380737E-9	DEFECT
// currently only the Hibernate-supplied DbTimestampType is supported here	WITHOUT_CLASSIFICATION	0.999558236114692	WITHOUT_CLASSIFICATION	3.2948154628358246E-4	DESIGN	5.724084994567916E-5	IMPLEMENTATION	4.112764828627468E-5	TEST	9.924313973545383E-6	DEFECT	3.989526819009174E-6	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9997906843681208	WITHOUT_CLASSIFICATION	1.3750170825916033E-4	DESIGN	5.142577705973942E-5	DEFECT	2.0265411852423273E-5	IMPLEMENTATION	9.40193699548029E-8	DOCUMENTATION	2.8715337920477372E-8	TEST
// make a new one	WITHOUT_CLASSIFICATION	0.9999444758068817	WITHOUT_CLASSIFICATION	4.5456171554311365E-5	DESIGN	3.5568396287873503E-6	DEFECT	2.9576971700599244E-6	IMPLEMENTATION	2.711238180001912E-6	TEST	8.422465851443558E-7	DOCUMENTATION
// not so sure this is even valid subtree.  but if it was, it'd // represent two unrelated table references...	WITHOUT_CLASSIFICATION	0.9998767325263166	WITHOUT_CLASSIFICATION	1.1077028783781024E-4	DESIGN	6.3574198113551045E-6	IMPLEMENTATION	4.469869340468774E-6	TEST	1.435825274236459E-6	DEFECT	2.340714194778782E-7	DOCUMENTATION
// (NOT (GT a b) ) => (LE a b)	WITHOUT_CLASSIFICATION	0.9999993262017369	WITHOUT_CLASSIFICATION	4.179935631644216E-7	IMPLEMENTATION	1.3084373676896936E-7	DESIGN	5.04886617945114E-8	DEFECT	4.561275150543807E-8	TEST	2.8859549813482088E-8	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9999959165904208	WITHOUT_CLASSIFICATION	3.7134413561519352E-6	DESIGN	2.2244677919660143E-7	DEFECT	7.428231697328601E-8	DOCUMENTATION	3.796631186408284E-8	TEST	3.527281504416373E-8	IMPLEMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9999922581055248	WITHOUT_CLASSIFICATION	7.648398431429224E-6	DESIGN	5.3612791481713726E-8	DEFECT	2.2119100197391228E-8	TEST	9.598463248025252E-9	DOCUMENTATION	8.165689071487862E-9	IMPLEMENTATION
//sqlResultTypes = selectClause.getSqlResultTypes();	WITHOUT_CLASSIFICATION	0.9999999694151626	WITHOUT_CLASSIFICATION	2.3411815516259337E-8	DEFECT	4.989210789529085E-9	DESIGN	7.860485400431873E-10	TEST	7.268512411128164E-10	IMPLEMENTATION	6.709114541669151E-10	DOCUMENTATION
//by default	WITHOUT_CLASSIFICATION	0.9999750840563056	WITHOUT_CLASSIFICATION	9.89507135359125E-6	IMPLEMENTATION	8.842553820288567E-6	DESIGN	4.710556395066508E-6	DEFECT	9.90527348115776E-7	DOCUMENTATION	4.772347773615821E-7	TEST
// This is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.9992465043694194	WITHOUT_CLASSIFICATION	7.351382139199552E-4	DESIGN	8.587718923572445E-6	DEFECT	6.343777555112498E-6	TEST	3.1297737263706526E-6	IMPLEMENTATION	2.961464555396729E-7	DOCUMENTATION
// -- Loader implementation --	WITHOUT_CLASSIFICATION	0.9996187367501671	WITHOUT_CLASSIFICATION	3.7568749399516404E-4	IMPLEMENTATION	4.267689906302114E-6	DEFECT	6.992572261709312E-7	DESIGN	4.6210794510857947E-7	DOCUMENTATION	1.4670076003370282E-7	TEST
// -- Loader overrides --	WITHOUT_CLASSIFICATION	0.9999996362638752	WITHOUT_CLASSIFICATION	2.2667602870781364E-7	DESIGN	6.104138083941817E-8	IMPLEMENTATION	3.388061634474476E-8	TEST	2.8783958106982493E-8	DEFECT	1.3354140767696107E-8	DOCUMENTATION
// (NOT (IS_NULL a b) ) => (IS_NOT_NULL a b)	WITHOUT_CLASSIFICATION	0.999996101886479	WITHOUT_CLASSIFICATION	2.3538966584736074E-6	DESIGN	1.112646408516637E-6	IMPLEMENTATION	2.849228481429481E-7	DEFECT	7.725510063418943E-8	DOCUMENTATION	6.93925052424925E-8	TEST
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999827769711609	WITHOUT_CLASSIFICATION	1.2597310345551803E-5	IMPLEMENTATION	2.1594492494787424E-6	DEFECT	1.9321021295021754E-6	TEST	4.3082353445504695E-7	DESIGN	1.0334358014867312E-7	DOCUMENTATION
// meant to handle dynamic instantiation queries...	WITHOUT_CLASSIFICATION	0.9490409813970553	WITHOUT_CLASSIFICATION	0.05001379436374674	DESIGN	7.699631865487273E-4	DEFECT	1.0573947649708918E-4	IMPLEMENTATION	4.424971788958507E-5	TEST	2.527185826251728E-5	DOCUMENTATION
// --- Query translator methods ---	WITHOUT_CLASSIFICATION	0.9999754678635139	WITHOUT_CLASSIFICATION	1.221603865399671E-5	DESIGN	1.1450118733024515E-5	IMPLEMENTATION	4.547088083415325E-7	TEST	2.2710141943492535E-7	DEFECT	1.841688711735948E-7	DOCUMENTATION
// -- Implementation private methods --	WITHOUT_CLASSIFICATION	0.999724151104241	WITHOUT_CLASSIFICATION	1.726896972063587E-4	DESIGN	1.0257977113827968E-4	IMPLEMENTATION	3.3447111841561676E-7	DOCUMENTATION	1.4715863981309606E-7	TEST	9.77976561234232E-8	DEFECT
//deduplicate unique constraints sharing the same columns //this is needed by Hibernate Annotations since it creates automagically // unique constraints for the user	WITHOUT_CLASSIFICATION	0.9900649187376536	WITHOUT_CLASSIFICATION	0.008191891715863965	IMPLEMENTATION	9.322371368688836E-4	DEFECT	4.7549416541012887E-4	DESIGN	3.325319378906096E-4	TEST	2.9263063127967686E-6	DOCUMENTATION
// Try to find out the name of the primary key to create it as identity if the IdentityGenerator is used	WITHOUT_CLASSIFICATION	0.9989927748506539	WITHOUT_CLASSIFICATION	9.562606506803297E-4	DESIGN	4.947197001126241E-5	IMPLEMENTATION	1.2928031701728856E-6	TEST	1.9038161612553634E-7	DOCUMENTATION	9.343868352084925E-9	DEFECT
// to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.9993209893334992	WITHOUT_CLASSIFICATION	6.411986691440577E-4	DESIGN	3.659545887021605E-5	IMPLEMENTATION	6.999167968941791E-7	DEFECT	3.5198083779401067E-7	DOCUMENTATION	1.6464085187694971E-7	TEST
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999992190452197	WITHOUT_CLASSIFICATION	3.7961582493839244E-7	DESIGN	2.5868781984237847E-7	IMPLEMENTATION	1.340636678924173E-7	DEFECT	5.669424998780313E-9	TEST	2.9180424885399262E-9	DOCUMENTATION
//used also for generation of FK names!	WITHOUT_CLASSIFICATION	0.9988133806967513	WITHOUT_CLASSIFICATION	0.0010324971588098393	DESIGN	9.321218904391185E-5	IMPLEMENTATION	3.245633142242868E-5	DEFECT	1.8350664079367284E-5	TEST	1.0102959893142096E-5	DOCUMENTATION
//usually useless	WITHOUT_CLASSIFICATION	0.9998162352787385	WITHOUT_CLASSIFICATION	1.8158556306557832E-4	DESIGN	8.041798339993241E-7	IMPLEMENTATION	7.83019934935409E-7	DEFECT	3.6731785651882064E-7	DOCUMENTATION	2.2464057043446796E-7	TEST
// added this caching as I noticed that getType() is being called multiple times...	WITHOUT_CLASSIFICATION	0.9998782649291431	WITHOUT_CLASSIFICATION	1.1567989050354863E-4	DESIGN	5.660836075480379E-6	IMPLEMENTATION	2.593669754728439E-7	TEST	9.23426076020612E-8	DEFECT	4.2634694694191304E-8	DOCUMENTATION
//do not add unique constraint on DB not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.9999996973071873	WITHOUT_CLASSIFICATION	2.8170869248722867E-7	IMPLEMENTATION	6.501493642190515E-9	DEFECT	6.270098187698471E-9	DESIGN	4.307170421348378E-9	TEST	3.905358106724284E-9	DOCUMENTATION
//for backward compatibility, disable this:	WITHOUT_CLASSIFICATION	0.9999962103638557	WITHOUT_CLASSIFICATION	3.251447694380577E-6	IMPLEMENTATION	2.3836407706615096E-7	TEST	1.1160486505569629E-7	DEFECT	1.0919623781143342E-7	DESIGN	7.90232700486407E-8	DOCUMENTATION
//may be final //may be final //may be final	WITHOUT_CLASSIFICATION	0.999964048349607	WITHOUT_CLASSIFICATION	2.193766360036005E-5	DESIGN	1.0442248853010448E-5	DEFECT	2.1348675421867757E-6	IMPLEMENTATION	1.0265900189624582E-6	DOCUMENTATION	4.102803785801756E-7	TEST
//may be final	WITHOUT_CLASSIFICATION	0.999966512357805	WITHOUT_CLASSIFICATION	2.6984812540539038E-5	DESIGN	3.4275519037814715E-6	DEFECT	1.6894897812778607E-6	IMPLEMENTATION	1.0998899457652088E-6	DOCUMENTATION	2.858980236759133E-7	TEST
// may be final	WITHOUT_CLASSIFICATION	0.9999896186561258	WITHOUT_CLASSIFICATION	8.134334353995686E-6	DESIGN	1.3439069940452681E-6	DEFECT	6.322051564376694E-7	IMPLEMENTATION	2.024253406477719E-7	DOCUMENTATION	6.847202899152766E-8	TEST
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999811166636868	WITHOUT_CLASSIFICATION	1.824733866806148E-5	DESIGN	3.710255131907071E-7	DEFECT	1.3013643892670362E-7	DOCUMENTATION	1.0937148244330144E-7	TEST	2.5464210504262844E-8	IMPLEMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9999997161581082	WITHOUT_CLASSIFICATION	1.6503199383520084E-7	DESIGN	5.6675973463504395E-8	DOCUMENTATION	3.066782361531701E-8	TEST	2.3429432948200084E-8	IMPLEMENTATION	8.03666782492033E-9	DEFECT
// the root of the incoming property path matched one // of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.9999999566842904	WITHOUT_CLASSIFICATION	2.0712006872241868E-8	DEFECT	2.011096596824456E-8	DESIGN	1.3115073411326198E-9	TEST	8.606948510510077E-10	IMPLEMENTATION	3.2053460857610943E-10	DOCUMENTATION
// ignore it...	WITHOUT_CLASSIFICATION	0.9999770028246275	WITHOUT_CLASSIFICATION	1.4930031336798697E-5	DESIGN	3.599304375099927E-6	DEFECT	3.5637127683000818E-6	IMPLEMENTATION	5.77861012483167E-7	DOCUMENTATION	3.2626587972256273E-7	TEST
//flat recursive algorithm	WITHOUT_CLASSIFICATION	0.9999906233924906	WITHOUT_CLASSIFICATION	5.698452716307374E-6	IMPLEMENTATION	1.8577811986196455E-6	DESIGN	1.0886318623533682E-6	DEFECT	5.038498916575923E-7	DOCUMENTATION	2.278918404725026E-7	TEST
//an identifier mapper => getKey will be included in the getNonDuplicatedPropertyIterator() //and checked later, so it needs to be excluded	WITHOUT_CLASSIFICATION	0.9999693702941784	WITHOUT_CLASSIFICATION	2.9266740012454E-5	DESIGN	5.378556614973729E-7	IMPLEMENTATION	4.907030167911862E-7	DOCUMENTATION	2.761977881794958E-7	DEFECT	5.82093425603066E-8	TEST
//if the hibernate-mapping did not specify a schema/catalog, use the defaults //specified by properties - but note that if the schema/catalog were specified //in hibernate-mapping, or as params, they will already be initialized and //will override the values set here (they are in identifierGeneratorProperties)	WITHOUT_CLASSIFICATION	0.9999999156794399	WITHOUT_CLASSIFICATION	5.5025822597727416E-8	DESIGN	2.6148973474735014E-8	IMPLEMENTATION	1.8021737085450077E-9	DOCUMENTATION	8.416162571740397E-10	DEFECT	5.019741906562738E-10	TEST
//pass the entity-name, if not a collection-id	WITHOUT_CLASSIFICATION	0.9997215570856787	WITHOUT_CLASSIFICATION	1.4647822611883756E-4	DESIGN	1.223198073474845E-4	IMPLEMENTATION	6.388652265607447E-6	DEFECT	2.7482773941303698E-6	TEST	5.079511952015526E-7	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999811166636868	WITHOUT_CLASSIFICATION	1.824733866806148E-5	DESIGN	3.710255131907071E-7	DEFECT	1.3013643892670362E-7	DOCUMENTATION	1.0937148244330144E-7	TEST	2.5464210504262844E-8	IMPLEMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9999997161581082	WITHOUT_CLASSIFICATION	1.6503199383520084E-7	DESIGN	5.6675973463504395E-8	DOCUMENTATION	3.066782361531701E-8	TEST	2.3429432948200084E-8	IMPLEMENTATION	8.03666782492033E-9	DEFECT
//pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.9999249063914294	WITHOUT_CLASSIFICATION	3.597017299014169E-5	IMPLEMENTATION	3.3680621012718E-5	DESIGN	2.6437690485252938E-6	TEST	2.5324904662614827E-6	DEFECT	2.6655505291527333E-7	DOCUMENTATION
//needed to satisfy KeyValue	WITHOUT_CLASSIFICATION	0.9980035022709323	WITHOUT_CLASSIFICATION	0.0012110223073793917	IMPLEMENTATION	6.214990417549089E-4	DESIGN	1.288709595333779E-4	DOCUMENTATION	2.3437196650498585E-5	DEFECT	1.1668223749550149E-5	TEST
// empty means no scoping	WITHOUT_CLASSIFICATION	0.999998837314019	WITHOUT_CLASSIFICATION	8.60867063452815E-7	DESIGN	1.8982240615610418E-7	IMPLEMENTATION	6.345283048305231E-8	DOCUMENTATION	2.7995335862326634E-8	DEFECT	2.0548345037359216E-8	TEST
// index should be last column listed	WITHOUT_CLASSIFICATION	0.9990054910813333	WITHOUT_CLASSIFICATION	6.851704760210352E-4	IMPLEMENTATION	1.9706266238353977E-4	DESIGN	6.150021950250706E-5	TEST	4.88368605006533E-5	DEFECT	1.9387002590016428E-6	DOCUMENTATION
//if it is a formula index, use the element columns in the PK	WITHOUT_CLASSIFICATION	0.9999915933131063	WITHOUT_CLASSIFICATION	4.3798184079790315E-6	IMPLEMENTATION	3.636814926375741E-6	DESIGN	2.8940215365013375E-7	DEFECT	5.995490494025154E-8	TEST	4.069650079872427E-8	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns	WITHOUT_CLASSIFICATION	0.9999736147936411	WITHOUT_CLASSIFICATION	1.9151290521850995E-5	DEFECT	5.356417048030332E-6	DESIGN	1.4019587464216576E-6	IMPLEMENTATION	4.3716288052685417E-7	TEST	3.837716210737279E-8	DOCUMENTATION
/*ArrayList list = new ArrayList();	WITHOUT_CLASSIFICATION	0.9964917240107867	WITHOUT_CLASSIFICATION	0.0034512268919332585	IMPLEMENTATION	4.473698685412315E-5	DEFECT	5.308615888012958E-6	TEST	5.236514879923152E-6	DESIGN	1.7669796579282759E-6	DOCUMENTATION
// }	WITHOUT_CLASSIFICATION	0.999990950634834	WITHOUT_CLASSIFICATION	5.342000165165747E-6	DESIGN	2.097688253453112E-6	DEFECT	9.538885119819704E-7	IMPLEMENTATION	3.7240011385993105E-7	TEST	2.833881216152967E-7	DOCUMENTATION
// no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.9998454673190167	WITHOUT_CLASSIFICATION	6.792342724636132E-5	DESIGN	4.6060940636634924E-5	DEFECT	3.830378681801654E-5	IMPLEMENTATION	1.8884499545739173E-6	DOCUMENTATION	3.560763277386708E-7	TEST
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.9964621243026571	WITHOUT_CLASSIFICATION	0.002019871968039301	IMPLEMENTATION	0.0014730222225859508	DESIGN	3.8946029662830714E-5	DEFECT	3.7328749187666865E-6	TEST	2.302602135998635E-6	DOCUMENTATION
// the case of a foreign key to something other than the pk is handled in createPropertyRefConstraints	WITHOUT_CLASSIFICATION	0.9999999836660459	WITHOUT_CLASSIFICATION	1.180606718436145E-8	DESIGN	4.403333857942245E-9	TEST	7.510575887924752E-11	DEFECT	3.589814355170452E-11	DOCUMENTATION	1.3549280255777179E-11	IMPLEMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.9964621243026571	WITHOUT_CLASSIFICATION	0.002019871968039301	IMPLEMENTATION	0.0014730222225859508	DESIGN	3.8946029662830714E-5	DEFECT	3.7328749187666865E-6	TEST	2.302602135998635E-6	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it non-updateable	WITHOUT_CLASSIFICATION	0.9999984146663887	WITHOUT_CLASSIFICATION	7.16767726561064E-7	DEFECT	6.351108909213106E-7	IMPLEMENTATION	2.2927463259819628E-7	TEST	3.196359866598494E-9	DESIGN	9.84001223196458E-10	DOCUMENTATION
//columnUpdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.9999743789542223	WITHOUT_CLASSIFICATION	1.721530631830885E-5	IMPLEMENTATION	3.2207568526733106E-6	DESIGN	2.3524515032734827E-6	DEFECT	1.8231634953559002E-6	DOCUMENTATION	1.0093676081492201E-6	TEST
// if the property mapping consists of all formulas,  // make it insertable	WITHOUT_CLASSIFICATION	0.9999961698905759	WITHOUT_CLASSIFICATION	1.7588974770351246E-6	DEFECT	1.5259898007717376E-6	TEST	4.1506547923622964E-7	IMPLEMENTATION	1.2688635874618985E-7	DESIGN	3.2703082391383488E-9	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999987962489024	WITHOUT_CLASSIFICATION	7.323397591527519E-7	DESIGN	2.1743261526470176E-7	TEST	1.1345898465482308E-7	IMPLEMENTATION	1.0432486307161716E-7	DEFECT	3.619487536635421E-8	DOCUMENTATION
// expected type is intrinsic here...	WITHOUT_CLASSIFICATION	0.9998776635734131	WITHOUT_CLASSIFICATION	1.2037133023861894E-4	DESIGN	9.53325226766916E-7	TEST	7.199490421239383E-7	DEFECT	1.568581839660521E-7	IMPLEMENTATION	1.349638953697702E-7	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9992768196613954	WITHOUT_CLASSIFICATION	5.896677330938031E-4	DESIGN	6.756444387628323E-5	DEFECT	3.40958609117508E-5	IMPLEMENTATION	1.612109506206486E-5	TEST	1.573120566076056E-5	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9992768196613954	WITHOUT_CLASSIFICATION	5.896677330938031E-4	DESIGN	6.756444387628323E-5	DEFECT	3.40958609117508E-5	IMPLEMENTATION	1.612109506206486E-5	TEST	1.573120566076056E-5	DOCUMENTATION
//return memberPersister.getPropertyType(propertyName);	WITHOUT_CLASSIFICATION	0.9998128958074048	WITHOUT_CLASSIFICATION	1.8149818381034985E-4	DESIGN	3.7196053054022873E-6	DEFECT	9.618365686609425E-7	IMPLEMENTATION	7.14174312417704E-7	TEST	2.1039259832691117E-7	DOCUMENTATION
//return memberPersister.toColumns(alias, propertyName);	WITHOUT_CLASSIFICATION	0.9996492614039757	WITHOUT_CLASSIFICATION	3.4833638549878706E-4	DESIGN	1.305967330037897E-6	DEFECT	6.588678784698227E-7	IMPLEMENTATION	2.5687015974908284E-7	TEST	1.8050515735512283E-7	DOCUMENTATION
//return memberPersister.getType();	WITHOUT_CLASSIFICATION	0.9999747994323511	WITHOUT_CLASSIFICATION	1.946560848213233E-5	DESIGN	4.814503366995961E-6	IMPLEMENTATION	5.525433641852755E-7	DEFECT	2.4988721396344516E-7	TEST	1.1802522141590679E-7	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999618053402112	WITHOUT_CLASSIFICATION	1.6722370259638308E-5	DEFECT	1.093286937311614E-5	IMPLEMENTATION	9.051533782893888E-6	DESIGN	1.1202944086909287E-6	DOCUMENTATION	3.6759196451738366E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
//instanceof AssociationType;	WITHOUT_CLASSIFICATION	0.9999542511401212	WITHOUT_CLASSIFICATION	2.5314605732962014E-5	DESIGN	1.2530092773965463E-5	DOCUMENTATION	4.8552168775604485E-6	DEFECT	2.3955756878228383E-6	IMPLEMENTATION	6.533688065672592E-7	TEST
// we need to determine the best way to know that two joinables // represent a single many-to-many...	WITHOUT_CLASSIFICATION	0.9414613050623062	WITHOUT_CLASSIFICATION	0.0490298956359929	DESIGN	0.008884019937526527	IMPLEMENTATION	5.762755680045307E-4	TEST	3.923480119783177E-5	DOCUMENTATION	9.268994972009348E-6	DEFECT
//strip leading ','	WITHOUT_CLASSIFICATION	0.9999979059820928	WITHOUT_CLASSIFICATION	1.1217342829239548E-6	IMPLEMENTATION	3.8858544306408927E-7	DESIGN	2.4123641658028944E-7	DEFECT	2.2486239299007763E-7	TEST	1.175993715615949E-7	DOCUMENTATION
//public boolean isSubselectLoadable();	WITHOUT_CLASSIFICATION	0.9999919973720813	WITHOUT_CLASSIFICATION	7.300969086523314E-6	DESIGN	2.990363343630239E-7	DEFECT	1.880753863571175E-7	TEST	1.1791883584580355E-7	DOCUMENTATION	9.662827558746972E-8	IMPLEMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999866686850835	WITHOUT_CLASSIFICATION	1.0399949927896006E-5	DESIGN	1.6526329556911925E-6	DEFECT	6.30409191645326E-7	IMPLEMENTATION	3.939283116800405E-7	TEST	2.5439452965991237E-7	DOCUMENTATION
//columns	WITHOUT_CLASSIFICATION	0.99929089640249	WITHOUT_CLASSIFICATION	6.773271315106611E-4	DESIGN	1.4883007717738386E-5	DEFECT	8.446083290115998E-6	IMPLEMENTATION	6.096421601481032E-6	DOCUMENTATION	2.3509533898645913E-6	TEST
//SQL statements	WITHOUT_CLASSIFICATION	0.999989532215739	WITHOUT_CLASSIFICATION	6.7742920266243185E-6	DESIGN	1.5816862578223466E-6	IMPLEMENTATION	1.1744224235745383E-6	DOCUMENTATION	4.922910825492584E-7	TEST	4.4509247047920496E-7	DEFECT
//extra information about the element type	WITHOUT_CLASSIFICATION	0.9999679106190846	WITHOUT_CLASSIFICATION	2.1335160876985204E-5	DESIGN	6.902729487084476E-6	IMPLEMENTATION	1.8331800133639422E-6	DOCUMENTATION	1.5334271976853982E-6	DEFECT	4.848833402452307E-7	TEST
//types	WITHOUT_CLASSIFICATION	0.9994804663400558	WITHOUT_CLASSIFICATION	4.446933954009149E-4	DESIGN	5.0837845862134724E-5	IMPLEMENTATION	8.421783779026093E-6	DEFECT	8.162336190285191E-6	TEST	7.418298711819415E-6	DOCUMENTATION
// custom sql	WITHOUT_CLASSIFICATION	0.9999986882621092	WITHOUT_CLASSIFICATION	9.045773012120126E-7	DESIGN	2.797180347124239E-7	DEFECT	4.7094763106916515E-8	DOCUMENTATION	4.487136865192055E-8	TEST	3.547642288187524E-8	IMPLEMENTATION
//private final String unquotedIdentifierColumnName;	WITHOUT_CLASSIFICATION	0.9985904091638322	WITHOUT_CLASSIFICATION	0.001285872572203355	DESIGN	1.0893098031766632E-4	IMPLEMENTATION	7.533781317718012E-6	DOCUMENTATION	6.281346633987595E-6	DEFECT	9.72155695037313E-7	TEST
// dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.9997776327265006	WITHOUT_CLASSIFICATION	2.1975457313350556E-4	DESIGN	1.1407300926627644E-6	IMPLEMENTATION	9.702733223073972E-7	DOCUMENTATION	4.604468664679856E-7	DEFECT	4.125008427563509E-8	TEST
// dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.9999966942476477	WITHOUT_CLASSIFICATION	3.0962034573977114E-6	DESIGN	1.0370870254316326E-7	IMPLEMENTATION	5.9527218655291685E-8	TEST	3.36247283490118E-8	DEFECT	1.2688245332182239E-8	DOCUMENTATION
// NativeSQL: collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999736392382772	WITHOUT_CLASSIFICATION	1.7261845151958843E-5	IMPLEMENTATION	7.509751860097137E-6	DESIGN	8.293406591692381E-7	DEFECT	4.755919258603296E-7	DOCUMENTATION	2.842321257555182E-7	TEST
//unquotedKeyColumnNames = StringHelper.unQuote(keyColumnAliases);	WITHOUT_CLASSIFICATION	0.9999253493092183	WITHOUT_CLASSIFICATION	4.50158180254769E-5	DEFECT	2.6513586941299188E-5	DESIGN	1.427102127496576E-6	IMPLEMENTATION	1.248058384145071E-6	TEST	4.4612530329074225E-7	DOCUMENTATION
//ELEMENT	WITHOUT_CLASSIFICATION	0.9995672383421829	WITHOUT_CLASSIFICATION	3.694459004631876E-4	DESIGN	3.3510586879112625E-5	DEFECT	1.472663980480435E-5	IMPLEMENTATION	8.523584079152471E-6	TEST	6.554946590852506E-6	DOCUMENTATION
// NativeSQL: collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999205014036663	WITHOUT_CLASSIFICATION	6.56487012723171E-5	IMPLEMENTATION	1.1975606845910706E-5	DESIGN	9.307185043771964E-7	DOCUMENTATION	6.886481445234803E-7	DEFECT	2.549215664652253E-7	TEST
// INDEX AND ROW SELECT	WITHOUT_CLASSIFICATION	0.9999739597505309	WITHOUT_CLASSIFICATION	2.2718197526855185E-5	IMPLEMENTATION	1.29246121622674E-6	DEFECT	1.1914048110835184E-6	DESIGN	4.525403683339581E-7	DOCUMENTATION	3.856455465340055E-7	TEST
// NativeSQL: collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.9995222385142316	WITHOUT_CLASSIFICATION	2.9287600483939534E-4	IMPLEMENTATION	1.3484391249497942E-4	DESIGN	4.158425837368588E-5	DEFECT	4.87269997962388E-6	TEST	3.584610080756916E-6	DOCUMENTATION
//unquotedIdentifierColumnName = identifierColumnAlias;	WITHOUT_CLASSIFICATION	0.9997342221821032	WITHOUT_CLASSIFICATION	1.424448577367383E-4	IMPLEMENTATION	1.1170382930853848E-4	DESIGN	5.150314397537962E-6	DEFECT	3.843820610977793E-6	DOCUMENTATION	2.6349958430314135E-6	TEST
//unquotedIdentifierColumnName = null;	WITHOUT_CLASSIFICATION	0.9999632738440496	WITHOUT_CLASSIFICATION	2.573878909491185E-5	IMPLEMENTATION	5.235880322748744E-6	DESIGN	4.390469556334633E-6	DEFECT	1.0969394194888314E-6	DOCUMENTATION	2.640775570124637E-7	TEST
//GENERATE THE SQL:	WITHOUT_CLASSIFICATION	0.9989217725996615	WITHOUT_CLASSIFICATION	0.0010496288123850585	DESIGN	1.4163110499425244E-5	DEFECT	5.1469432841377704E-6	DOCUMENTATION	4.783532488187336E-6	TEST	4.505001681566025E-6	IMPLEMENTATION
// for non-arrays, we don't need to know the element class //elementType.returnedClass();	WITHOUT_CLASSIFICATION	0.9999758666887755	WITHOUT_CLASSIFICATION	1.580297995235044E-5	DESIGN	7.612061795317695E-6	IMPLEMENTATION	6.288429010033484E-7	DEFECT	7.135536180023352E-8	DOCUMENTATION	1.8071214119223374E-8	TEST
//not all classpersisters implement PropertyMapping!	WITHOUT_CLASSIFICATION	0.997656223746521	WITHOUT_CLASSIFICATION	0.0014445327769671396	IMPLEMENTATION	8.650982734718395E-4	DESIGN	2.186066919700907E-5	DEFECT	7.034469218506224E-6	TEST	5.2500646245816596E-6	DOCUMENTATION
// Handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.9987543423278695	WITHOUT_CLASSIFICATION	0.0012200028359758185	DESIGN	1.9995682463797847E-5	IMPLEMENTATION	4.9733157766442346E-6	TEST	5.178697888352168E-7	DOCUMENTATION	1.6796812529605354E-7	DEFECT
// Handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.9944415382385714	WITHOUT_CLASSIFICATION	0.005337096983837217	DESIGN	2.0844995285775788E-4	IMPLEMENTATION	1.1942198005476383E-5	TEST	7.469554109962526E-7	DOCUMENTATION	2.2567131723900493E-7	DEFECT
//if there is a user-specified loader, return that //TODO: filters!?	WITHOUT_CLASSIFICATION	0.988203275811343	WITHOUT_CLASSIFICATION	0.011257549609177431	DESIGN	4.782487319793394E-4	IMPLEMENTATION	5.358891652741096E-5	DEFECT	5.696924266705209E-6	TEST	1.6400067060603076E-6	DOCUMENTATION
// Take care of any entities that might have // been evicted!	WITHOUT_CLASSIFICATION	0.9962289516416265	WITHOUT_CLASSIFICATION	0.003724458384452735	DESIGN	2.201528235654317E-5	TEST	2.195681207532648E-5	DEFECT	1.887444236995637E-6	DOCUMENTATION	7.3043525213236E-7	IMPLEMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9999979059820928	WITHOUT_CLASSIFICATION	1.1217342829239548E-6	IMPLEMENTATION	3.8858544306408927E-7	DESIGN	2.4123641658028944E-7	DEFECT	2.2486239299007763E-7	TEST	1.175993715615949E-7	DOCUMENTATION
// Run a subquery loader	WITHOUT_CLASSIFICATION	0.999982071085	WITHOUT_CLASSIFICATION	1.2569030433862149E-5	DEFECT	4.68392419704344E-6	IMPLEMENTATION	5.603218728831778E-7	DESIGN	6.195776626856061E-8	DOCUMENTATION	5.3680729954349585E-8	TEST
//needed by arrays	WITHOUT_CLASSIFICATION	0.9990636850829112	WITHOUT_CLASSIFICATION	5.542966886736437E-4	IMPLEMENTATION	2.933821049070134E-4	DESIGN	3.7384850050339085E-5	DEFECT	3.1887447953549235E-5	TEST	1.936382550412849E-5	DOCUMENTATION
//TODO: something with formulas...	WITHOUT_CLASSIFICATION	0.9728841819215326	WITHOUT_CLASSIFICATION	0.011865118941347006	IMPLEMENTATION	0.011555666471968354	DESIGN	0.002244829502946269	TEST	9.426127962810961E-4	DEFECT	5.075903659247161E-4	DOCUMENTATION
//an assertion	WITHOUT_CLASSIFICATION	0.9999859051152843	WITHOUT_CLASSIFICATION	1.0929207501236047E-5	TEST	1.2753380580890228E-6	DEFECT	1.1829220754240762E-6	DESIGN	4.998655053820531E-7	DOCUMENTATION	2.0755157543264664E-7	IMPLEMENTATION
// Remove all the old entries	WITHOUT_CLASSIFICATION	0.9999914388750355	WITHOUT_CLASSIFICATION	7.779600930424785E-6	IMPLEMENTATION	6.720875312908377E-7	DESIGN	4.757748902267211E-8	DOCUMENTATION	4.277000758283122E-8	TEST	1.908900619724193E-8	DEFECT
//create all the new entries	WITHOUT_CLASSIFICATION	0.9999879234009452	WITHOUT_CLASSIFICATION	1.0671907884179477E-5	IMPLEMENTATION	9.752779232043146E-7	DESIGN	2.2804946285139566E-7	DOCUMENTATION	1.957988413439585E-7	TEST	5.56494333994903E-9	DEFECT
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999618053402112	WITHOUT_CLASSIFICATION	1.6722370259638308E-5	DEFECT	1.093286937311614E-5	IMPLEMENTATION	9.051533782893888E-6	DESIGN	1.1202944086909287E-6	DOCUMENTATION	3.6759196451738366E-7	TEST
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999618053402112	WITHOUT_CLASSIFICATION	1.6722370259638308E-5	DEFECT	1.093286937311614E-5	IMPLEMENTATION	9.051533782893888E-6	DESIGN	1.1202944086909287E-6	DOCUMENTATION	3.6759196451738366E-7	TEST
//delete all the deleted entries	WITHOUT_CLASSIFICATION	0.9999620981036988	WITHOUT_CLASSIFICATION	2.802541973561891E-5	IMPLEMENTATION	9.310667978793437E-6	DESIGN	2.807885145294233E-7	TEST	2.446811169297132E-7	DOCUMENTATION	4.033895529388245E-8	DEFECT
//insert all the new entries	WITHOUT_CLASSIFICATION	0.9999855850635121	WITHOUT_CLASSIFICATION	1.3314358014418862E-5	IMPLEMENTATION	5.20173159765899E-7	TEST	4.648452950142937E-7	DESIGN	1.1293941800022887E-7	DOCUMENTATION	2.6206006481989445E-9	DEFECT
//==elementType ??	WITHOUT_CLASSIFICATION	0.9989945829330031	WITHOUT_CLASSIFICATION	9.731580397592188E-4	DESIGN	2.1261575071406976E-5	IMPLEMENTATION	8.501633108686633E-6	DOCUMENTATION	1.3605318063953962E-6	DEFECT	1.135287251198488E-6	TEST
//update all the modified entries	WITHOUT_CLASSIFICATION	0.9999506373108585	WITHOUT_CLASSIFICATION	4.831948677009899E-5	IMPLEMENTATION	7.991316517383691E-7	DESIGN	1.0940432481759187E-7	DOCUMENTATION	8.62629722338185E-8	DEFECT	4.840342256726206E-8	TEST
//identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.9990966847108127	WITHOUT_CLASSIFICATION	7.662047783275085E-4	IMPLEMENTATION	7.305626490721217E-5	DESIGN	6.04090088548287E-5	DEFECT	3.0441967989386913E-6	TEST	6.010402988385079E-7	DOCUMENTATION
// update removed rows fks to null	WITHOUT_CLASSIFICATION	0.9995233369117041	WITHOUT_CLASSIFICATION	4.5204948272286493E-4	DEFECT	2.0198513128392206E-5	DESIGN	4.045948607574883E-6	IMPLEMENTATION	2.0951334317904313E-7	TEST	1.5963049390347745E-7	DOCUMENTATION
// will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.9990718164750586	WITHOUT_CLASSIFICATION	6.423827970199098E-4	DEFECT	1.8874795555334493E-4	DESIGN	7.430075545774767E-5	IMPLEMENTATION	1.7966791618181383E-5	DOCUMENTATION	4.7852252923144654E-6	TEST
// now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.9999923949136151	WITHOUT_CLASSIFICATION	3.550591713602528E-6	IMPLEMENTATION	3.168617920446685E-6	DEFECT	8.517779692165607E-7	DESIGN	2.2678328903640184E-8	TEST	1.1420452532291838E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
//use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.999950392176207	WITHOUT_CLASSIFICATION	3.9295359927448417E-5	DESIGN	8.4166376223452E-6	IMPLEMENTATION	9.827424044383626E-7	DOCUMENTATION	7.530876854415927E-7	DEFECT	1.5999615343407934E-7	TEST
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.999999866180083	WITHOUT_CLASSIFICATION	1.1253661150579139E-7	DESIGN	1.4753776298230001E-8	IMPLEMENTATION	5.393131180837301E-9	TEST	6.778929025461804E-10	DEFECT	4.5850510198288546E-10	DOCUMENTATION
//private final String rootTableName;	WITHOUT_CLASSIFICATION	0.9992965530377514	WITHOUT_CLASSIFICATION	6.967379263571727E-4	DESIGN	3.7890712141351693E-6	IMPLEMENTATION	1.2865968008362844E-6	DEFECT	9.612526233582661E-7	DOCUMENTATION	6.721152530024711E-7	TEST
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9988996466495726	WITHOUT_CLASSIFICATION	6.11078604274173E-4	DESIGN	3.4491139642309465E-4	IMPLEMENTATION	9.305669275023604E-5	DEFECT	2.7023865241446913E-5	TEST	2.4282791738371813E-5	DOCUMENTATION
//Custom SQL	WITHOUT_CLASSIFICATION	0.9998459323098737	WITHOUT_CLASSIFICATION	1.4958503533551157E-4	DESIGN	2.085218603157293E-6	DEFECT	1.2932704562275746E-6	DOCUMENTATION	8.096388100211716E-7	TEST	2.9452692119009514E-7	IMPLEMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.999999866180083	WITHOUT_CLASSIFICATION	1.1253661150579139E-7	DESIGN	1.4753776298230001E-8	IMPLEMENTATION	5.393131180837301E-9	TEST	6.778929025461804E-10	DEFECT	4.5850510198288546E-10	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999941842378058	WITHOUT_CLASSIFICATION	3.968188536921002E-6	DESIGN	6.263423688055268E-7	DOCUMENTATION	4.6991137595010814E-7	IMPLEMENTATION	3.872831234050095E-7	TEST	3.6403678906130594E-7	DEFECT
// This could also just be true all the time...	WITHOUT_CLASSIFICATION	0.9990089522775951	WITHOUT_CLASSIFICATION	5.555276858072325E-4	DESIGN	4.347357737375247E-4	IMPLEMENTATION	5.735220899665644E-7	TEST	1.1494440995984645E-7	DOCUMENTATION	9.579636015956476E-8	DEFECT
//chop the last union (all)	WITHOUT_CLASSIFICATION	0.9999808149460004	WITHOUT_CLASSIFICATION	1.460277937289071E-5	IMPLEMENTATION	2.2181949222296287E-6	DEFECT	8.763389563885656E-7	DOCUMENTATION	7.577016402482454E-7	TEST	7.300391077724082E-7	DESIGN
//TODO: check this....	WITHOUT_CLASSIFICATION	0.7930253876666176	WITHOUT_CLASSIFICATION	0.16531394250020714	IMPLEMENTATION	0.0336136927713064	DESIGN	0.005744880677421195	DOCUMENTATION	0.0018380849692984159	TEST	4.6401141514925304E-4	DEFECT
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9988996466495726	WITHOUT_CLASSIFICATION	6.11078604274173E-4	DESIGN	3.4491139642309465E-4	IMPLEMENTATION	9.305669275023604E-5	DEFECT	2.7023865241446913E-5	TEST	2.4282791738371813E-5	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999955975465518	WITHOUT_CLASSIFICATION	3.870969804726141E-6	DESIGN	3.474093596804319E-7	DEFECT	1.7673041820718826E-7	TEST	7.225418634570533E-9	DOCUMENTATION	1.1844698291472087E-10	IMPLEMENTATION
// the closure of all properties in the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999990076967984	WITHOUT_CLASSIFICATION	8.697171265025658E-7	DESIGN	1.1884263279874551E-7	DEFECT	1.397377989069836E-9	IMPLEMENTATION	1.1938101887555432E-9	TEST	1.1522541392375145E-9	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999945007867048	WITHOUT_CLASSIFICATION	5.420705710006843E-6	DESIGN	4.25166271887924E-8	DEFECT	2.6208906508390098E-8	IMPLEMENTATION	7.566703106242938E-9	TEST	2.215348372653947E-9	DOCUMENTATION
// subclass discrimination works by assigning particular // values to certain combinations of null primary key // values in the outer join using an SQL CASE	WITHOUT_CLASSIFICATION	0.9999984967715727	WITHOUT_CLASSIFICATION	1.413052423319912E-6	DEFECT	8.968199943061166E-8	DESIGN	2.954077887148427E-10	DOCUMENTATION	1.978912710647346E-10	TEST	7.053898812304761E-13	IMPLEMENTATION
//MULTITABLES	WITHOUT_CLASSIFICATION	0.9996500827542019	WITHOUT_CLASSIFICATION	2.7885446843063194E-4	DESIGN	2.8780721611734463E-5	DEFECT	2.7693903945756376E-5	IMPLEMENTATION	9.30191974122117E-6	DOCUMENTATION	5.2862320687715E-6	TEST
// Custom sql	WITHOUT_CLASSIFICATION	0.9999949597315139	WITHOUT_CLASSIFICATION	4.085097620806742E-6	DESIGN	5.542606561283672E-7	DEFECT	1.5014708882648036E-7	TEST	1.443624405925329E-7	IMPLEMENTATION	1.0640067987816284E-7	DOCUMENTATION
// subclass closure properties	WITHOUT_CLASSIFICATION	0.9999998350608093	WITHOUT_CLASSIFICATION	1.2828686470892407E-7	DESIGN	3.467120898082943E-8	DEFECT	7.724026838965645E-10	DOCUMENTATION	6.30675241145744E-10	TEST	5.780392529037816E-10	IMPLEMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999866843683625	WITHOUT_CLASSIFICATION	7.936889716319502E-6	DESIGN	2.5331184215558202E-6	DEFECT	1.9543154439691635E-6	IMPLEMENTATION	4.5772803867263854E-7	DOCUMENTATION	4.3358001704831487E-7	TEST
//( (Column) model.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9988798050551095	WITHOUT_CLASSIFICATION	0.0010297785346837975	DESIGN	7.810811496595659E-5	IMPLEMENTATION	6.694585787887813E-6	DEFECT	2.991757040004974E-6	DOCUMENTATION	2.6219524128710953E-6	TEST
//( (Column) sc.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9999213664540182	WITHOUT_CLASSIFICATION	6.315728229400401E-5	DESIGN	1.35532963943038E-5	IMPLEMENTATION	8.218244031900462E-7	DEFECT	5.730924608215401E-7	DOCUMENTATION	5.280504296552591E-7	TEST
// don't need subclass tables, because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.9999674907192482	WITHOUT_CLASSIFICATION	2.5280707346221284E-5	DESIGN	5.789597009793088E-6	DEFECT	1.1038987528349264E-6	IMPLEMENTATION	1.988216002247762E-7	DOCUMENTATION	1.3625604298275179E-7	TEST
// special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.9999515646970707	WITHOUT_CLASSIFICATION	4.547362658511798E-5	IMPLEMENTATION	1.8494154791816822E-6	DESIGN	1.077935643670152E-6	DOCUMENTATION	2.7443248519757624E-8	DEFECT	6.881972859057445E-9	TEST
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.999999866180083	WITHOUT_CLASSIFICATION	1.1253661150579139E-7	DESIGN	1.4753776298230001E-8	IMPLEMENTATION	5.393131180837301E-9	TEST	6.778929025461804E-10	DEFECT	4.5850510198288546E-10	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999955975465518	WITHOUT_CLASSIFICATION	3.870969804726141E-6	DESIGN	3.474093596804319E-7	DEFECT	1.7673041820718826E-7	TEST	7.225418634570533E-9	DOCUMENTATION	1.1844698291472087E-10	IMPLEMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999945007867048	WITHOUT_CLASSIFICATION	5.420705710006843E-6	DESIGN	4.25166271887924E-8	DEFECT	2.6208906508390098E-8	IMPLEMENTATION	7.566703106242938E-9	TEST	2.215348372653947E-9	DOCUMENTATION
//get em on the second pass!	WITHOUT_CLASSIFICATION	0.9999874099109138	WITHOUT_CLASSIFICATION	6.392126192922285E-6	DESIGN	4.001858960429713E-6	IMPLEMENTATION	1.1776408606673082E-6	DEFECT	6.462671247335994E-7	DOCUMENTATION	3.721959473435128E-7	TEST
// now look up the object we are really interested in! // (this lets us correctly handle proxies and multi-row // or multi-column queries)	WITHOUT_CLASSIFICATION	0.9815497966167391	WITHOUT_CLASSIFICATION	0.01566766297986329	DEFECT	0.0026458712110117425	DESIGN	1.0429027687779723E-4	TEST	2.145094697920621E-5	IMPLEMENTATION	1.0927968528858841E-5	DOCUMENTATION
// discriminator column	WITHOUT_CLASSIFICATION	0.9999992106134534	WITHOUT_CLASSIFICATION	3.729923686100489E-7	DEFECT	3.4488945747468987E-7	DESIGN	2.98814372667754E-8	DOCUMENTATION	2.4562589200456492E-8	IMPLEMENTATION	1.706069405487176E-8	TEST
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9988996466495726	WITHOUT_CLASSIFICATION	6.11078604274173E-4	DESIGN	3.4491139642309465E-4	IMPLEMENTATION	9.305669275023604E-5	DEFECT	2.7023865241446913E-5	TEST	2.4282791738371813E-5	DOCUMENTATION
//private final Map propertyTableNumbersByName = new HashMap();	WITHOUT_CLASSIFICATION	0.9966401307684915	WITHOUT_CLASSIFICATION	0.0033385114908620716	DESIGN	1.5156062089014313E-5	IMPLEMENTATION	3.5656234674364425E-6	DOCUMENTATION	1.3641832997339266E-6	DEFECT	1.2718717903801084E-6	TEST
// CLASS + TABLE	WITHOUT_CLASSIFICATION	0.999994354371256	WITHOUT_CLASSIFICATION	3.6213107088829576E-6	DESIGN	8.714750104103385E-7	DEFECT	5.982738541518701E-7	IMPLEMENTATION	2.974348480256783E-7	TEST	2.5713432248349073E-7	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9998045688221382	WITHOUT_CLASSIFICATION	1.2410360546344173E-4	IMPLEMENTATION	5.783372311502133E-5	DESIGN	7.042457258437604E-6	DEFECT	3.800704005116268E-6	DOCUMENTATION	2.6506880197078863E-6	TEST
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999910078771845	WITHOUT_CLASSIFICATION	3.858260371783298E-6	IMPLEMENTATION	3.5911389201648525E-6	DESIGN	7.633689016276436E-7	DEFECT	3.934198804000257E-7	DOCUMENTATION	3.85934741308532E-7	TEST
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999866843683625	WITHOUT_CLASSIFICATION	7.936889716319502E-6	DESIGN	2.5331184215558202E-6	DEFECT	1.9543154439691635E-6	IMPLEMENTATION	4.5772803867263854E-7	DOCUMENTATION	4.3358001704831487E-7	TEST
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999941842378058	WITHOUT_CLASSIFICATION	3.968188536921002E-6	DESIGN	6.263423688055268E-7	DOCUMENTATION	4.6991137595010814E-7	IMPLEMENTATION	3.872831234050095E-7	TEST	3.6403678906130594E-7	DEFECT
// JOINS	WITHOUT_CLASSIFICATION	0.9999881906366835	WITHOUT_CLASSIFICATION	8.802305581168576E-6	DESIGN	1.5583504627528489E-6	IMPLEMENTATION	9.71414973466827E-7	DEFECT	2.5552764928801143E-7	TEST	2.2176464974355824E-7	DOCUMENTATION
//propertyTableNumbersByName.put( prop.getName(), join );	WITHOUT_CLASSIFICATION	0.9999953546731083	WITHOUT_CLASSIFICATION	2.6372735804445263E-6	DESIGN	8.571519446806206E-7	IMPLEMENTATION	6.778291439861945E-7	DEFECT	2.5057483558929397E-7	DOCUMENTATION	2.224973870163785E-7	TEST
//Access cached SQL	WITHOUT_CLASSIFICATION	0.9998011236072281	WITHOUT_CLASSIFICATION	1.9745348671461075E-4	DESIGN	4.5021736755915E-7	TEST	4.2869305623207287E-7	DEFECT	2.852719825397488E-7	IMPLEMENTATION	2.5872365097778814E-7	DOCUMENTATION
//figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.9987389508850463	WITHOUT_CLASSIFICATION	0.001231601029915105	DESIGN	1.4409021358865064E-5	DEFECT	5.476772109317158E-6	IMPLEMENTATION	5.219976354244102E-6	TEST	4.342315216392227E-6	DOCUMENTATION
//figure out which columns are needed	WITHOUT_CLASSIFICATION	0.9197598047816505	WITHOUT_CLASSIFICATION	0.0755427268333709	DESIGN	0.004454988759721675	IMPLEMENTATION	1.5148150234127092E-4	DOCUMENTATION	7.860965175519917E-5	TEST	1.2388471160383609E-5	DEFECT
//figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.9526518881203035	WITHOUT_CLASSIFICATION	0.04689088045768393	DESIGN	3.5949639331632423E-4	IMPLEMENTATION	6.542531252860947E-5	DOCUMENTATION	2.6904967323236823E-5	TEST	5.404748844194533E-6	DEFECT
//render the SQL	WITHOUT_CLASSIFICATION	0.9994421184678446	WITHOUT_CLASSIFICATION	4.592072140364779E-4	DESIGN	7.682492113596212E-5	IMPLEMENTATION	8.010145437005278E-6	DOCUMENTATION	7.70515867897416E-6	TEST	6.13409286696257E-6	DEFECT
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999987962489024	WITHOUT_CLASSIFICATION	7.323397591527519E-7	DESIGN	2.1743261526470176E-7	TEST	1.1345898465482308E-7	IMPLEMENTATION	1.0432486307161716E-7	DEFECT	3.619487536635421E-8	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999394765642797	WITHOUT_CLASSIFICATION	5.96312067595246E-5	DESIGN	4.5764613790022597E-7	IMPLEMENTATION	2.4032305722297136E-7	TEST	1.303496201951863E-7	DEFECT	6.391014553952203E-8	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999831905564419	WITHOUT_CLASSIFICATION	5.903385033156492E-6	DEFECT	5.226779367442625E-6	DESIGN	3.6242148043181298E-6	IMPLEMENTATION	1.1943205364496941E-6	TEST	8.607438168142809E-7	DOCUMENTATION
// The optional SQL string defined in the where attribute	WITHOUT_CLASSIFICATION	0.9999973987737584	WITHOUT_CLASSIFICATION	1.4318172063963421E-6	IMPLEMENTATION	6.286779475589479E-7	DESIGN	4.791319642199369E-7	DEFECT	4.065341281792561E-8	TEST	2.0945710615404603E-8	DOCUMENTATION
//information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.9999704561723105	WITHOUT_CLASSIFICATION	2.068037615861664E-5	DESIGN	7.723169030586046E-6	DEFECT	9.86608776417321E-7	TEST	1.5084632239256176E-7	DOCUMENTATION	2.827401607698957E-9	IMPLEMENTATION
//information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.9999984806293015	WITHOUT_CLASSIFICATION	1.4105246950783916E-6	DESIGN	8.214973736440704E-8	DEFECT	1.1955339855939203E-8	TEST	1.1275586360586025E-8	DOCUMENTATION	3.4653398551072128E-9	IMPLEMENTATION
//information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.9999975622654012	WITHOUT_CLASSIFICATION	2.382820269204763E-6	DESIGN	1.8859354471567935E-8	IMPLEMENTATION	1.738384510332118E-8	DEFECT	9.571007413021385E-9	DOCUMENTATION	9.100122738432915E-9	TEST
// dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9999998493787153	WITHOUT_CLASSIFICATION	1.425908649860641E-7	DESIGN	3.0447406293527064E-9	DEFECT	2.348726526479205E-9	DOCUMENTATION	2.118082484024062E-9	TEST	5.18869933672373E-10	IMPLEMENTATION
// SQL strings	WITHOUT_CLASSIFICATION	0.999998162499398	WITHOUT_CLASSIFICATION	1.3329831352550638E-6	DESIGN	2.89213953858174E-7	DEFECT	8.582140777408875E-8	TEST	6.897533943128102E-8	IMPLEMENTATION	6.050676567200752E-8	DOCUMENTATION
// for objects that came in via update()	WITHOUT_CLASSIFICATION	0.9999891360916434	WITHOUT_CLASSIFICATION	1.0059965216347744E-5	DESIGN	4.7565426794184094E-7	IMPLEMENTATION	2.1353992492160928E-7	DEFECT	5.8245412131698994E-8	DOCUMENTATION	5.6503535186246374E-8	TEST
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999910078771845	WITHOUT_CLASSIFICATION	3.858260371783298E-6	IMPLEMENTATION	3.5911389201648525E-6	DESIGN	7.633689016276436E-7	DEFECT	3.934198804000257E-7	DOCUMENTATION	3.85934741308532E-7	TEST
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999831905564419	WITHOUT_CLASSIFICATION	5.903385033156492E-6	DEFECT	5.226779367442625E-6	DESIGN	3.6242148043181298E-6	IMPLEMENTATION	1.1943205364496941E-6	TEST	8.607438168142809E-7	DOCUMENTATION
// IDENTIFIER	WITHOUT_CLASSIFICATION	0.9999423491607893	WITHOUT_CLASSIFICATION	3.800453437062321E-5	IMPLEMENTATION	1.2904928971410322E-5	DESIGN	4.333958120358256E-6	DEFECT	1.4502631630993606E-6	TEST	9.571545853232676E-7	DOCUMENTATION
// VERSION	WITHOUT_CLASSIFICATION	0.9999934493077919	WITHOUT_CLASSIFICATION	3.856896294554133E-6	DESIGN	1.363613876766096E-6	IMPLEMENTATION	9.783975362992584E-7	DEFECT	2.0493458711656252E-7	TEST	1.4684991338566E-7	DOCUMENTATION
//WHERE STRING	WITHOUT_CLASSIFICATION	0.9998974037168461	WITHOUT_CLASSIFICATION	6.975928570112848E-5	DESIGN	1.9795925497937008E-5	IMPLEMENTATION	7.356576159335247E-6	DEFECT	3.3459369688615535E-6	DOCUMENTATION	2.3385588267674973E-6	TEST
// SUBCLASS PROPERTY CLOSURE	WITHOUT_CLASSIFICATION	0.9999958615372393	WITHOUT_CLASSIFICATION	2.0838236411402606E-6	IMPLEMENTATION	1.2669751476822095E-6	DESIGN	3.254035833588362E-7	DEFECT	2.5446313364737934E-7	DOCUMENTATION	2.0779725503275714E-7	TEST
//before add :-)	WITHOUT_CLASSIFICATION	0.9999783972666358	WITHOUT_CLASSIFICATION	1.569544558106612E-5	IMPLEMENTATION	3.82402170943792E-6	DEFECT	1.2441891921749261E-6	DESIGN	5.613091996257748E-7	DOCUMENTATION	2.777676817373136E-7	TEST
// Handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.9999871369253127	WITHOUT_CLASSIFICATION	1.2657157023558923E-5	DESIGN	1.7838717978482807E-7	IMPLEMENTATION	1.857778577504615E-8	TEST	7.613032045954406E-9	DOCUMENTATION	1.3396661281323983E-9	DEFECT
// only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.9999865233335353	WITHOUT_CLASSIFICATION	1.1339885578520254E-5	DEFECT	1.5488145988615086E-6	IMPLEMENTATION	3.7978717392863806E-7	DESIGN	1.2985295419651605E-7	TEST	7.832615913329534E-8	DOCUMENTATION
//note early exit here:	WITHOUT_CLASSIFICATION	0.9966343810800786	WITHOUT_CLASSIFICATION	0.0015726572414375283	IMPLEMENTATION	0.0012970066874901174	DEFECT	3.001535746777163E-4	DESIGN	1.609914177608642E-4	TEST	3.480999855522633E-5	DOCUMENTATION
// object have been loaded with setReadOnly(true); HHH-2236	WITHOUT_CLASSIFICATION	0.9997626331944856	WITHOUT_CLASSIFICATION	1.1354334166819735E-4	DEFECT	7.74611932593033E-5	IMPLEMENTATION	4.1566922938855144E-5	DESIGN	2.957959599243531E-6	TEST	1.8373880487984537E-6	DOCUMENTATION
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.999700735592663	WITHOUT_CLASSIFICATION	1.7484136434871655E-4	TEST	8.438535496723905E-5	DESIGN	3.807507341758742E-5	DEFECT	9.938879322787968E-7	IMPLEMENTATION	9.68726671221311E-7	DOCUMENTATION
//strip leading ", "	WITHOUT_CLASSIFICATION	0.9999977568544264	WITHOUT_CLASSIFICATION	1.0955543754977995E-6	IMPLEMENTATION	5.844631401016928E-7	DESIGN	2.479257200899497E-7	TEST	1.977483175561092E-7	DEFECT	1.1745402051258721E-7	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9999911256871615	WITHOUT_CLASSIFICATION	6.336833618207347E-6	DEFECT	2.178702191425081E-6	DESIGN	2.656833559487642E-7	TEST	7.04351321055119E-8	IMPLEMENTATION	2.2658540802174966E-8	DOCUMENTATION
//otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.9989969356991888	WITHOUT_CLASSIFICATION	7.950984667387704E-4	DESIGN	1.9943970845812023E-4	IMPLEMENTATION	5.4983650164076396E-6	TEST	2.5497978535341587E-6	DEFECT	4.779627442798331E-7	DOCUMENTATION
//null owner ok??	WITHOUT_CLASSIFICATION	0.9997971622702916	WITHOUT_CLASSIFICATION	1.6144669871584805E-4	DESIGN	2.9380814009371525E-5	IMPLEMENTATION	8.133460664083693E-6	DEFECT	2.9570408969898604E-6	DOCUMENTATION	9.197154220748796E-7	TEST
// null sql means that the only lazy properties // are shared PK one-to-one associations which are // handled differently in the Type#nullSafeGet code...	WITHOUT_CLASSIFICATION	0.9986350798711814	WITHOUT_CLASSIFICATION	0.0013638975635509253	DESIGN	8.452220647991078E-7	DOCUMENTATION	9.5490324786454E-8	TEST	6.434972643149036E-8	IMPLEMENTATION	1.7503151587395713E-8	DEFECT
// Create a new FROM node for the referenced class.	WITHOUT_CLASSIFICATION	0.9999866498578069	WITHOUT_CLASSIFICATION	1.323241524047909E-5	DESIGN	8.225907280390704E-8	IMPLEMENTATION	2.5690195828178655E-8	TEST	8.608955294147851E-9	DOCUMENTATION	1.168728562840956E-9	DEFECT
// the difficulty here is exactly what do we update in order to // force the version to be incremented in the db...	WITHOUT_CLASSIFICATION	0.9992875141344425	WITHOUT_CLASSIFICATION	7.092753964679997E-4	DESIGN	1.8178579232832213E-6	IMPLEMENTATION	6.823384667455549E-7	DEFECT	4.906166923655781E-7	DOCUMENTATION	2.1965600731166465E-7	TEST
// performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.9999950891272918	WITHOUT_CLASSIFICATION	2.216259106402104E-6	DESIGN	1.5637884865557632E-6	DOCUMENTATION	6.802710583737871E-7	IMPLEMENTATION	4.013366672574711E-7	DEFECT	4.921738953165549E-8	TEST
// properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.9999984842834236	WITHOUT_CLASSIFICATION	6.914965785429853E-7	IMPLEMENTATION	6.695396451318187E-7	DESIGN	7.836217903586991E-8	DEFECT	4.606076448444047E-8	TEST	3.025740899385203E-8	DOCUMENTATION
//Enable for HHH-440, which we don't like:	WITHOUT_CLASSIFICATION	0.9984638649218209	WITHOUT_CLASSIFICATION	0.0014739058117365542	DESIGN	4.569419707281503E-5	DEFECT	8.108897029077463E-6	DOCUMENTATION	4.508953755633512E-6	TEST	3.917218585034655E-6	IMPLEMENTATION
// ALIASES	WITHOUT_CLASSIFICATION	0.999987647102549	WITHOUT_CLASSIFICATION	6.111733773460084E-6	DESIGN	4.150161813009098E-6	DEFECT	1.612618299397401E-6	IMPLEMENTATION	2.4656256887521257E-7	TEST	2.3182099635073118E-7	DOCUMENTATION
// aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.9999921624540964	WITHOUT_CLASSIFICATION	5.479376911423563E-6	DESIGN	2.0510792444709027E-6	IMPLEMENTATION	1.5808569793218362E-7	TEST	8.983276046193549E-8	DEFECT	5.917128927441232E-8	DOCUMENTATION
// aliases for composite-id's	WITHOUT_CLASSIFICATION	0.9999995857781251	WITHOUT_CLASSIFICATION	2.553976152637327E-7	IMPLEMENTATION	1.3156082659061537E-7	DESIGN	1.2546695285532504E-8	TEST	1.2372294818555287E-8	DEFECT	2.3444429122122562E-9	DOCUMENTATION
// Fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.9999908505894797	WITHOUT_CLASSIFICATION	9.00755024797241E-6	DESIGN	1.2692752151407517E-7	DEFECT	6.2428907024553954E-9	DOCUMENTATION	5.786438018870083E-9	TEST	2.903422073400769E-9	IMPLEMENTATION
// embedded composite ids ( alias.idname1, alias.idname2 )	WITHOUT_CLASSIFICATION	0.9999976500558476	WITHOUT_CLASSIFICATION	1.3887701743334809E-6	DESIGN	7.470059784933505E-7	IMPLEMENTATION	1.3825133463826546E-7	DEFECT	5.0259845272632246E-8	TEST	2.5656819701464318E-8	DOCUMENTATION
// TODO: skip formulas?	WITHOUT_CLASSIFICATION	0.5344055111191063	IMPLEMENTATION	0.4474356343205156	WITHOUT_CLASSIFICATION	0.013739824149929247	DESIGN	0.0022919780474748444	DOCUMENTATION	0.0019371518291490695	DEFECT	1.8990053382489212E-4	TEST
//don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9998750836346041	WITHOUT_CLASSIFICATION	1.1047189678035361E-4	IMPLEMENTATION	9.745487260151087E-6	DESIGN	3.1166936560718013E-6	DEFECT	1.162273929690489E-6	TEST	4.200137695621839E-7	DOCUMENTATION
//do two passes, for collection property-ref!	WITHOUT_CLASSIFICATION	0.9999589021485237	WITHOUT_CLASSIFICATION	2.548702271395204E-5	IMPLEMENTATION	9.25677841926057E-6	DEFECT	4.408042898540116E-6	TEST	1.6449439229165767E-6	DESIGN	3.0106352183568184E-7	DOCUMENTATION
// select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.9999715420719575	WITHOUT_CLASSIFICATION	1.909500171394288E-5	DEFECT	4.151854194953852E-6	DESIGN	4.073209137675913E-6	IMPLEMENTATION	1.0823204039018622E-6	TEST	5.554259190345111E-8	DOCUMENTATION
//TODO: eventually, rowIdName[j]	WITHOUT_CLASSIFICATION	0.7647664694416293	IMPLEMENTATION	0.11828170469425199	WITHOUT_CLASSIFICATION	0.0720835797137499	DESIGN	0.04291498383946655	DEFECT	0.0017700195400090688	DOCUMENTATION	1.8324277089310607E-4	TEST
// this is a property of the table, which we are updating	WITHOUT_CLASSIFICATION	0.9999717953355491	WITHOUT_CLASSIFICATION	2.4839833990868675E-5	DEFECT	3.192073763245038E-6	DESIGN	8.296865554923456E-8	DOCUMENTATION	6.287108777050088E-8	TEST	2.6916953367994103E-8	IMPLEMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999777912094946	WITHOUT_CLASSIFICATION	1.792853458043176E-5	DEFECT	1.566046862785455E-6	TEST	1.2469409367920738E-6	DESIGN	1.0829203631130256E-6	IMPLEMENTATION	3.8434776203039033E-7	DOCUMENTATION
// we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.9997289061220207	WITHOUT_CLASSIFICATION	2.667145782762397E-4	DEFECT	2.7678415016398335E-6	IMPLEMENTATION	1.0208603541684996E-6	DESIGN	4.2228361540185554E-7	DOCUMENTATION	1.6831423196713338E-7	TEST
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999450726495266	WITHOUT_CLASSIFICATION	5.327927583596757E-5	DESIGN	1.601728540603897E-6	TEST	2.461221427043967E-8	DEFECT	1.4072938690510285E-8	IMPLEMENTATION	7.660943857395823E-9	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9998962032168461	WITHOUT_CLASSIFICATION	1.027253226066765E-4	DESIGN	9.107555985955713E-7	DEFECT	1.4200365116490735E-7	TEST	1.2613189982582042E-8	IMPLEMENTATION	6.088107458922874E-9	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9999986656030752	WITHOUT_CLASSIFICATION	1.2045475295881081E-6	IMPLEMENTATION	8.903131738515406E-8	DEFECT	2.5703927352193444E-8	DOCUMENTATION	8.315228686044401E-9	DESIGN	6.798921823863613E-9	TEST
// add the discriminator	WITHOUT_CLASSIFICATION	0.999999937905635	WITHOUT_CLASSIFICATION	2.3178234765658306E-8	IMPLEMENTATION	2.202799527090499E-8	DESIGN	1.049217035689493E-8	DOCUMENTATION	4.086025430240071E-9	TEST	2.30993904607942E-9	DEFECT
// more specifically : "? [op] datetime" //      1) if the operator is MINUS, the param needs to be of //          some datetime type //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9456281507942689	WITHOUT_CLASSIFICATION	0.05432717882627585	DESIGN	2.5833470105384353E-5	DOCUMENTATION	1.6325084680136577E-5	IMPLEMENTATION	2.07296994098972E-6	DEFECT	4.3885472892938195E-7	TEST
// add normal properties	WITHOUT_CLASSIFICATION	0.9999986656030752	WITHOUT_CLASSIFICATION	1.2045475295881081E-6	IMPLEMENTATION	8.903131738515406E-8	DEFECT	2.5703927352193444E-8	DOCUMENTATION	8.315228686044401E-9	DESIGN	6.798921823863613E-9	TEST
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9998962032168461	WITHOUT_CLASSIFICATION	1.027253226066765E-4	DESIGN	9.107555985955713E-7	DEFECT	1.4200365116490735E-7	TEST	1.2613189982582042E-8	IMPLEMENTATION	6.088107458922874E-9	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.999999937905635	WITHOUT_CLASSIFICATION	2.3178234765658306E-8	IMPLEMENTATION	2.202799527090499E-8	DESIGN	1.049217035689493E-8	DOCUMENTATION	4.086025430240071E-9	TEST	2.30993904607942E-9	DEFECT
// add the primary key	WITHOUT_CLASSIFICATION	0.9999972083534057	WITHOUT_CLASSIFICATION	2.7296710385560742E-6	IMPLEMENTATION	4.303349186872022E-8	DOCUMENTATION	8.958321784861842E-9	TEST	5.974666164846673E-9	DEFECT	4.009076064511102E-9	DESIGN
// delegate already handles PK columns	WITHOUT_CLASSIFICATION	0.9999941218795045	WITHOUT_CLASSIFICATION	5.761982676369576E-6	DESIGN	3.9318242565916105E-8	DEFECT	3.140302488763019E-8	TEST	2.701116443785021E-8	IMPLEMENTATION	1.8405387220210923E-8	DOCUMENTATION
// we can't batch joined inserts, *especially* not if it is an identity insert; // nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.9999487110996261	WITHOUT_CLASSIFICATION	4.8738896579020235E-5	DEFECT	1.2366359666378702E-6	DESIGN	1.120177896136117E-6	TEST	1.8463185885382694E-7	IMPLEMENTATION	8.558073241642935E-9	DOCUMENTATION
// Render the SQL query	WITHOUT_CLASSIFICATION	0.9997996121333552	WITHOUT_CLASSIFICATION	9.850382335132966E-5	IMPLEMENTATION	8.49581912994535E-5	DESIGN	1.0796652543925028E-5	DEFECT	3.420068283578619E-6	DOCUMENTATION	2.709131166419171E-6	TEST
// Write the values of fields onto the prepared statement - we MUST use the state at the time the // insert was issued (cos of foreign key constraints). Not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.9999999789392642	WITHOUT_CLASSIFICATION	1.9540931904337585E-8	DEFECT	1.0570224848610386E-9	DOCUMENTATION	3.2528285145750554E-10	DESIGN	1.0946448833325615E-10	IMPLEMENTATION	2.8034071972488574E-11	TEST
// TODO : shouldnt inserts be Expectations.NONE?	WITHOUT_CLASSIFICATION	0.8195711203856978	IMPLEMENTATION	0.11167426963162339	DESIGN	0.053775149707789204	WITHOUT_CLASSIFICATION	0.012016247760857652	DEFECT	0.0026047971497368495	TEST	3.584153642951784E-4	DOCUMENTATION
//don't bother trying to update, we know there is no row there yet	WITHOUT_CLASSIFICATION	0.9710925432085401	WITHOUT_CLASSIFICATION	0.024928663841652408	DEFECT	0.0025873551580786794	IMPLEMENTATION	0.0012550941798193031	DESIGN	1.26449788403423E-4	TEST	9.893823506015712E-6	DOCUMENTATION
//if all fields are null, we might need to delete existing row	WITHOUT_CLASSIFICATION	0.9728426029620226	WITHOUT_CLASSIFICATION	0.02685117815131724	DESIGN	2.6667256668875806E-4	IMPLEMENTATION	1.74103259276001E-5	DOCUMENTATION	1.6820702022786872E-5	TEST	5.315292020955646E-6	DEFECT
//there is probably a row there, so try to update //if no rows were updated, we will find out	WITHOUT_CLASSIFICATION	0.9997780318022058	WITHOUT_CLASSIFICATION	2.055445268008999E-4	DESIGN	8.096657370891086E-6	DEFECT	7.5168051084051105E-6	IMPLEMENTATION	6.072299130312599E-7	TEST	2.029786009842028E-7	DOCUMENTATION
//note: updates to joined tables can't be batched...	WITHOUT_CLASSIFICATION	0.9997640026452568	WITHOUT_CLASSIFICATION	1.996031004820446E-4	DESIGN	3.00398846960642E-5	DEFECT	4.694597661216793E-6	IMPLEMENTATION	1.3308991005934785E-6	TEST	3.288728031671689E-7	DOCUMENTATION
// starting index	WITHOUT_CLASSIFICATION	0.9999866155773358	WITHOUT_CLASSIFICATION	1.0703978876363023E-5	DEFECT	1.4138439963793476E-6	IMPLEMENTATION	6.760469231895815E-7	DESIGN	3.756386391031258E-7	TEST	2.1491422923605021E-7	DOCUMENTATION
//Now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.9999982553060695	WITHOUT_CLASSIFICATION	7.830470951978705E-7	DEFECT	6.914980079144254E-7	IMPLEMENTATION	1.406688576157441E-7	DESIGN	7.356862402538956E-8	TEST	5.5911345837921504E-8	DOCUMENTATION
// Write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.9998902839008256	WITHOUT_CLASSIFICATION	5.579926242866662E-5	DESIGN	4.526768271076744E-5	IMPLEMENTATION	7.717719787140766E-6	DEFECT	5.736870845829619E-7	DOCUMENTATION	3.5774716326634053E-7	TEST
//Render the SQL query	WITHOUT_CLASSIFICATION	0.9990854179849722	WITHOUT_CLASSIFICATION	5.184709859518096E-4	DESIGN	3.3933236563124286E-4	IMPLEMENTATION	2.223250319273211E-5	DEFECT	2.201813479639109E-5	DOCUMENTATION	1.2528025455582179E-5	TEST
// Do the key. The key is immutable so we can use the _current_ object state - not necessarily // the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.9999163624877732	WITHOUT_CLASSIFICATION	7.794490384799162E-5	IMPLEMENTATION	2.9293891628037713E-6	DEFECT	1.941660770433439E-6	DOCUMENTATION	6.982874352271015E-7	DESIGN	1.2327101041363435E-7	TEST
// We should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.9999994852138462	WITHOUT_CLASSIFICATION	4.786773230594606E-7	DEFECT	1.8138529284575277E-8	IMPLEMENTATION	9.863123707974018E-9	DESIGN	4.775082347198156E-9	TEST	3.3320953166777663E-9	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9998507341635922	WITHOUT_CLASSIFICATION	1.4292078390254161E-4	DESIGN	6.0935041003442836E-6	DEFECT	1.3488658825763613E-7	DOCUMENTATION	1.0091700588673602E-7	TEST	1.57448108071527E-8	IMPLEMENTATION
//note: dirtyFields==null means we had no snapshot, and we couldn't get one using select-before-update //	WITHOUT_CLASSIFICATION	0.9999975445934813	WITHOUT_CLASSIFICATION	2.4180569544904106E-6	DESIGN	2.0306363709059912E-8	IMPLEMENTATION	1.628366040630236E-8	DEFECT	4.6024272325220856E-10	TEST	2.992973749437234E-10	DOCUMENTATION
// more specifically : "datetime [op] ?" //      1) if the operator is MINUS, we really cannot determine //          the expected type as either another datetime or //          numeric would be valid //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9961154588960814	WITHOUT_CLASSIFICATION	0.003870479050428705	DESIGN	1.2335785413589641E-5	DEFECT	1.512223080737722E-6	DOCUMENTATION	1.7577328809964465E-7	TEST	3.827170726511668E-8	IMPLEMENTATION
// For the case of dynamic-update="true", we need to generate the UPDATE SQL	WITHOUT_CLASSIFICATION	0.9999968959614396	WITHOUT_CLASSIFICATION	2.2773529655983178E-6	DESIGN	3.812310594946486E-7	IMPLEMENTATION	3.710624436001403E-7	DOCUMENTATION	6.261711804242334E-8	TEST	1.1774973572903432E-8	DEFECT
// don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.9468582151299969	WITHOUT_CLASSIFICATION	0.05250274994805537	IMPLEMENTATION	3.8799027124626753E-4	DESIGN	1.9968761400394834E-4	DEFECT	3.0469800782654487E-5	DOCUMENTATION	2.0887235914735103E-5	TEST
// For the case of dynamic-update="false", or no snapshot, we use the static SQL	WITHOUT_CLASSIFICATION	0.9999998148594041	WITHOUT_CLASSIFICATION	1.0675133321136461E-7	DEFECT	4.087758033384303E-8	IMPLEMENTATION	2.9793715424692083E-8	DOCUMENTATION	7.357160900124669E-9	DESIGN	3.6080597251931923E-10	TEST
// if not "get", then try "is"	WITHOUT_CLASSIFICATION	0.999946678320694	WITHOUT_CLASSIFICATION	1.892037220744276E-5	DEFECT	1.505478772303027E-5	IMPLEMENTATION	9.314455559095558E-6	TEST	8.95097968695709E-6	DESIGN	1.0810841297204352E-6	DOCUMENTATION
// Now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.9999993315889649	WITHOUT_CLASSIFICATION	4.0714179847970185E-7	IMPLEMENTATION	1.7375508694165453E-7	DESIGN	7.046783203173106E-8	DEFECT	9.845678590739413E-9	TEST	7.200639007187906E-9	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999236626770344	WITHOUT_CLASSIFICATION	7.426681176294199E-5	DESIGN	1.3090868560486788E-6	DOCUMENTATION	4.069834989797406E-7	TEST	3.4505457721598955E-7	IMPLEMENTATION	9.38627039161208E-9	DEFECT
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999236626770344	WITHOUT_CLASSIFICATION	7.426681176294199E-5	DESIGN	1.3090868560486788E-6	DOCUMENTATION	4.069834989797406E-7	TEST	3.4505457721598955E-7	IMPLEMENTATION	9.38627039161208E-9	DEFECT
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999999581307069	WITHOUT_CLASSIFICATION	2.166336078677499E-8	DESIGN	1.1713878255838641E-8	DEFECT	5.234039661462632E-9	DOCUMENTATION	2.7375629465495206E-9	IMPLEMENTATION	5.204516180199655E-10	TEST
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999999581307069	WITHOUT_CLASSIFICATION	2.166336078677499E-8	DESIGN	1.1713878255838641E-8	DEFECT	5.234039661462632E-9	DOCUMENTATION	2.7375629465495206E-9	IMPLEMENTATION	5.204516180199655E-10	TEST
// not supported	WITHOUT_CLASSIFICATION	0.9381852379537249	WITHOUT_CLASSIFICATION	0.03210474818638141	DESIGN	0.02766338371892274	IMPLEMENTATION	0.0018565709232973866	DEFECT	1.262710874222067E-4	TEST	6.378813025138466E-5	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9998507341635922	WITHOUT_CLASSIFICATION	1.4292078390254161E-4	DESIGN	6.0935041003442836E-6	DEFECT	1.3488658825763613E-7	DOCUMENTATION	1.0091700588673602E-7	TEST	1.57448108071527E-8	IMPLEMENTATION
// we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.99998082026294	WITHOUT_CLASSIFICATION	1.1242816507863209E-5	DESIGN	7.058727604644805E-6	DOCUMENTATION	4.3638950437622467E-7	IMPLEMENTATION	3.3584874373247897E-7	DEFECT	1.0595469942661256E-7	TEST
// otherwise, utilize the static delete statements	WITHOUT_CLASSIFICATION	0.9999985467507645	WITHOUT_CLASSIFICATION	9.267218813754103E-7	IMPLEMENTATION	4.53430760510045E-7	DESIGN	4.400581338508679E-8	DEFECT	2.0761558650558208E-8	DOCUMENTATION	8.32922149665146E-9	TEST
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9999609983463321	WITHOUT_CLASSIFICATION	2.987085635458546E-5	DESIGN	4.435173329187186E-6	IMPLEMENTATION	3.288456012040435E-6	DOCUMENTATION	8.736738915107837E-7	DEFECT	5.334940805267398E-7	TEST
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9999609983463321	WITHOUT_CLASSIFICATION	2.987085635458546E-5	DESIGN	4.435173329187186E-6	IMPLEMENTATION	3.288456012040435E-6	DOCUMENTATION	8.736738915107837E-7	DEFECT	5.334940805267398E-7	TEST
//all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.9999854961455324	WITHOUT_CLASSIFICATION	1.066610918209596E-5	IMPLEMENTATION	2.0760720303724885E-6	DESIGN	1.3483761417950353E-6	DEFECT	2.839760968717058E-7	DOCUMENTATION	1.2932101644877484E-7	TEST
//notice that we skip the first table; it is the driving table!	WITHOUT_CLASSIFICATION	0.9999793586964255	WITHOUT_CLASSIFICATION	8.426082482719684E-6	DEFECT	6.293939360071983E-6	IMPLEMENTATION	2.8735327971173166E-6	DESIGN	2.8263755592844368E-6	TEST	2.2137337537392414E-7	DOCUMENTATION
//we can inner join to superclass tables (the row MUST be there) //we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.9947298690100803	WITHOUT_CLASSIFICATION	0.0052691124436270295	DESIGN	9.065293874930977E-7	DEFECT	5.0348101073459466E-8	IMPLEMENTATION	3.222055313671019E-8	DOCUMENTATION	2.9448250968403587E-8	TEST
//skip the driving table	WITHOUT_CLASSIFICATION	0.9999841337618957	WITHOUT_CLASSIFICATION	1.4294673527094554E-5	IMPLEMENTATION	6.35270183491128E-7	TEST	4.870234745810049E-7	DESIGN	2.7488456728072295E-7	DEFECT	1.7438635178748506E-7	DOCUMENTATION
//get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.9369170100887543	WITHOUT_CLASSIFICATION	0.051084361122034884	DESIGN	0.009774013124223158	DEFECT	0.002150373237835545	IMPLEMENTATION	5.423067554023549E-5	TEST	2.001175161197213E-5	DOCUMENTATION
// here, we work under the following assumptions: //      ------------ valid cases -------------------------------------- //      1) datetime + {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      2) datetime - datetime : always results in a DOUBLE //      3) datetime - {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      ------------ invalid cases ------------------------------------ //      4) datetime + datetime //      5) {something other than datetime} - datetime //      6) datetime * {any type} //      7) datetime / {any type} //      8) {any type} / datetime // doing so allows us to properly handle parameters as either the left // or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.6201841611473992	WITHOUT_CLASSIFICATION	0.30661371542625243	DEFECT	0.0731370433044662	DESIGN	5.981888961639927E-5	IMPLEMENTATION	4.040786650799862E-6	DOCUMENTATION	1.2204456150218771E-6	TEST
//render the where and from parts	WITHOUT_CLASSIFICATION	0.9998853097667156	WITHOUT_CLASSIFICATION	9.627471962796232E-5	DESIGN	8.968722543521201E-6	IMPLEMENTATION	6.0001577637342115E-6	DEFECT	2.0429059265304888E-6	TEST	1.403727422574989E-6	DOCUMENTATION
//we *could* regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.9959225924063592	WITHOUT_CLASSIFICATION	0.00407584406615603	DESIGN	7.887141693260047E-7	TEST	3.825652538063406E-7	IMPLEMENTATION	3.054690131545958E-7	DEFECT	8.677904843482377E-8	DOCUMENTATION
//now render the joins	WITHOUT_CLASSIFICATION	0.999850917143583	WITHOUT_CLASSIFICATION	1.2664399710731264E-4	IMPLEMENTATION	1.592610814139957E-5	DESIGN	2.3443943105616293E-6	DEFECT	2.215105931189744E-6	TEST	1.9532509266624836E-6	DOCUMENTATION
// This will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.999991321852344	WITHOUT_CLASSIFICATION	5.127636298641493E-6	IMPLEMENTATION	1.5701663338315962E-6	DEFECT	1.4681467219222467E-6	DESIGN	4.464433024729674E-7	DOCUMENTATION	6.575499916230761E-8	TEST
//now render the select clause	WITHOUT_CLASSIFICATION	0.9999972415881887	WITHOUT_CLASSIFICATION	2.3469844776088274E-6	IMPLEMENTATION	2.3386050575046419E-7	DESIGN	7.366581646496295E-8	DEFECT	6.909431886013105E-8	TEST	3.480669265519584E-8	DOCUMENTATION
//now tie it all together	WITHOUT_CLASSIFICATION	0.9994003910377007	WITHOUT_CLASSIFICATION	5.56317644471162E-4	IMPLEMENTATION	3.881098112321422E-5	DESIGN	2.735767912327775E-6	TEST	9.143467919775364E-7	DOCUMENTATION	8.302220005337631E-7	DEFECT
//insert/update/delete SQL	WITHOUT_CLASSIFICATION	0.9999988180336861	WITHOUT_CLASSIFICATION	1.0611262596732872E-6	DESIGN	7.440958089252337E-8	DEFECT	2.0763206216159312E-8	TEST	1.7437175356709425E-8	DOCUMENTATION	8.230091914578575E-9	IMPLEMENTATION
//select SQL	WITHOUT_CLASSIFICATION	0.9999173523433348	WITHOUT_CLASSIFICATION	7.765814771136732E-5	DESIGN	2.4371602911986883E-6	IMPLEMENTATION	1.2035433196952297E-6	TEST	7.604349988784577E-7	DEFECT	5.883703440601742E-7	DOCUMENTATION
//no need to check laziness, dirty checking handles that	WITHOUT_CLASSIFICATION	0.9999602388592904	WITHOUT_CLASSIFICATION	3.522658209773768E-5	IMPLEMENTATION	2.5940973505471547E-6	DESIGN	1.1141305580406012E-6	DOCUMENTATION	5.381383169770077E-7	TEST	2.881923863169551E-7	DEFECT
// Fully resolve the map reference, create implicit joins.	WITHOUT_CLASSIFICATION	0.9999690040406193	WITHOUT_CLASSIFICATION	2.0159513433668846E-5	DESIGN	1.026628896665788E-5	IMPLEMENTATION	3.961107040346561E-7	TEST	1.3636309186176492E-7	DOCUMENTATION	3.768318448144887E-8	DEFECT
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994746683072723	WITHOUT_CLASSIFICATION	5.138337013223745E-4	DESIGN	5.322202488686636E-6	IMPLEMENTATION	2.9732854316594183E-6	DEFECT	1.7667913113938207E-6	TEST	1.435712173633705E-6	DOCUMENTATION
// The basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.9999851605461693	WITHOUT_CLASSIFICATION	6.990620647474227E-6	DESIGN	6.052324083494761E-6	IMPLEMENTATION	1.52831771419108E-6	DEFECT	2.5197109364672214E-7	DOCUMENTATION	1.6220292113175734E-8	TEST
// for dialects which are known to not support ANSI-SQL row-value-constructor syntax, // we should mutate the tree.	WITHOUT_CLASSIFICATION	0.9992083219752491	WITHOUT_CLASSIFICATION	6.554585116837977E-4	DESIGN	1.1092451586469171E-4	DEFECT	2.4405365326999183E-5	IMPLEMENTATION	6.696015656187782E-7	TEST	2.2003030967501003E-7	DOCUMENTATION
// Due to the complexity in initializing the SelectClause, do not generate one here. // If it is not found; simply return null... // // Also, do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.9999999884378735	WITHOUT_CLASSIFICATION	1.0320517783675141E-8	DESIGN	7.398147869311362E-10	IMPLEMENTATION	4.025077510215729E-10	TEST	6.392631546147627E-11	DEFECT	3.5359724665611214E-11	DOCUMENTATION
// check the version unsaved-value, if appropriate	WITHOUT_CLASSIFICATION	0.9998746402129751	WITHOUT_CLASSIFICATION	1.24120993086036E-4	IMPLEMENTATION	9.442883907160596E-7	DESIGN	2.4164748720062175E-7	DEFECT	4.188728500007073E-8	DOCUMENTATION	1.0970775871094247E-8	TEST
// let this take precedence if defined, since it works for // assigned identifiers	WITHOUT_CLASSIFICATION	0.9999016995915262	WITHOUT_CLASSIFICATION	9.416681910543197E-5	DESIGN	3.7150615668654804E-6	TEST	3.256257428301872E-7	DEFECT	5.8553802077173396E-8	IMPLEMENTATION	3.4348256595543425E-8	DOCUMENTATION
// check the id unsaved-value	WITHOUT_CLASSIFICATION	0.9999945287406518	WITHOUT_CLASSIFICATION	5.356342833724142E-6	IMPLEMENTATION	6.251133457390458E-8	DOCUMENTATION	3.651256610505355E-8	DESIGN	9.941025047414278E-9	DEFECT	5.951588948070565E-9	TEST
// check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.9999439211060311	WITHOUT_CLASSIFICATION	5.475436509951697E-5	DESIGN	5.86840757451407E-7	DEFECT	4.428143588202357E-7	IMPLEMENTATION	1.5773848459556031E-7	DOCUMENTATION	1.371352685359221E-7	TEST
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9984535121720532	WITHOUT_CLASSIFICATION	0.0013343024467748793	DESIGN	8.378911869780322E-5	DEFECT	6.247921169673682E-5	IMPLEMENTATION	3.7384276562327543E-5	TEST	2.853277421478978E-5	DOCUMENTATION
// For property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.999970598076874	WITHOUT_CLASSIFICATION	2.828286065676044E-5	DESIGN	7.190635361852513E-7	IMPLEMENTATION	1.739629685850257E-7	DEFECT	1.6479478036117483E-7	DOCUMENTATION	6.124118406203582E-8	TEST
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999831905564419	WITHOUT_CLASSIFICATION	5.903385033156492E-6	DEFECT	5.226779367442625E-6	DESIGN	3.6242148043181298E-6	IMPLEMENTATION	1.1943205364496941E-6	TEST	8.607438168142809E-7	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9999911256871615	WITHOUT_CLASSIFICATION	6.336833618207347E-6	DEFECT	2.178702191425081E-6	DESIGN	2.656833559487642E-7	TEST	7.04351321055119E-8	IMPLEMENTATION	2.2658540802174966E-8	DOCUMENTATION
//force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.999995394158859	WITHOUT_CLASSIFICATION	2.7605691015188957E-6	DESIGN	1.4182364045939018E-6	DEFECT	2.518776314889109E-7	DOCUMENTATION	1.4650981036565084E-7	TEST	2.8648193062122748E-8	IMPLEMENTATION
// If this from element is a collection and the path is a collection property (maxIndex, etc.) then // generate a sub-query.	WITHOUT_CLASSIFICATION	0.9999819858283704	WITHOUT_CLASSIFICATION	1.1351716226372947E-5	DEFECT	6.065819405929607E-6	DESIGN	4.429961509127316E-7	IMPLEMENTATION	9.85409169803784E-8	TEST	5.5098929446773096E-8	DOCUMENTATION
// entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999715690913665	WITHOUT_CLASSIFICATION	1.8259547533277807E-5	DESIGN	3.898538260407979E-6	DEFECT	3.450801331429886E-6	IMPLEMENTATION	1.849463072922664E-6	TEST	9.725584355564067E-7	DOCUMENTATION
// collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999865706383592	WITHOUT_CLASSIFICATION	5.418866142131015E-6	DESIGN	3.865675110115752E-6	DEFECT	3.616335742019635E-6	IMPLEMENTATION	3.726159302334843E-7	TEST	1.5586871636497528E-7	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.999960023407438	WITHOUT_CLASSIFICATION	2.2419668103492187E-5	DESIGN	1.3075984236039493E-5	DEFECT	2.3207059449863064E-6	DOCUMENTATION	1.4709025592460284E-6	IMPLEMENTATION	6.893317180626049E-7	TEST
//cannot occur	WITHOUT_CLASSIFICATION	0.999960023407438	WITHOUT_CLASSIFICATION	2.2419668103492187E-5	DESIGN	1.3075984236039493E-5	DEFECT	2.3207059449863064E-6	DOCUMENTATION	1.4709025592460284E-6	IMPLEMENTATION	6.893317180626049E-7	TEST
// only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.9995015746676106	WITHOUT_CLASSIFICATION	4.959614759526262E-4	DESIGN	1.5114162947804628E-6	TEST	6.302260892871685E-7	IMPLEMENTATION	2.5208851208965683E-7	DEFECT	7.012554056708037E-8	DOCUMENTATION
// try "get"	WITHOUT_CLASSIFICATION	0.9999944916672161	WITHOUT_CLASSIFICATION	2.52210373356014E-6	IMPLEMENTATION	1.3961162965746207E-6	DESIGN	1.161801765854929E-6	DEFECT	2.211837753079601E-7	TEST	2.0712721249302559E-7	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999976693915482	WITHOUT_CLASSIFICATION	1.6142390988445828E-6	DESIGN	2.5586922673866077E-7	DEFECT	1.9127112239792008E-7	TEST	1.7912295640716E-7	DOCUMENTATION	9.010604741809092E-8	IMPLEMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999976693915482	WITHOUT_CLASSIFICATION	1.6142390988445828E-6	DESIGN	2.5586922673866077E-7	DEFECT	1.9127112239792008E-7	TEST	1.7912295640716E-7	DOCUMENTATION	9.010604741809092E-8	IMPLEMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9997637169993652	WITHOUT_CLASSIFICATION	1.707660930171388E-4	DEFECT	4.673251326786407E-5	DESIGN	8.983030800928214E-6	TEST	8.778887683480688E-6	IMPLEMENTATION	1.0224758652308052E-6	DOCUMENTATION
// this page intentionally left blank :)	WITHOUT_CLASSIFICATION	0.9998679235332163	WITHOUT_CLASSIFICATION	1.1407461918060332E-4	DESIGN	6.543108206417774E-6	IMPLEMENTATION	6.131805283469456E-6	DOCUMENTATION	4.0576510156407194E-6	DEFECT	1.2692830974709567E-6	TEST
// do not do anything	WITHOUT_CLASSIFICATION	0.9999921411862747	WITHOUT_CLASSIFICATION	3.2927536560496083E-6	DEFECT	2.309650975134386E-6	IMPLEMENTATION	1.3275770016075845E-6	TEST	4.776500313764272E-7	DOCUMENTATION	4.5118206116202544E-7	DESIGN
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999963440015754	WITHOUT_CLASSIFICATION	1.6558900873185054E-6	DESIGN	1.1317686996720128E-6	DEFECT	6.600785398107811E-7	IMPLEMENTATION	1.296224918940625E-7	DOCUMENTATION	7.863860571699599E-8	TEST
//cant instantiate	WITHOUT_CLASSIFICATION	0.9977738959754741	WITHOUT_CLASSIFICATION	0.0021544266512355434	DESIGN	2.2207234458435647E-5	IMPLEMENTATION	2.1750450666600294E-5	DEFECT	1.5337334742629434E-5	TEST	1.238235342290301E-5	DOCUMENTATION
//if it is a property of an embedded component, invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.9999818959733192	WITHOUT_CLASSIFICATION	1.7677179208849092E-5	DESIGN	2.781194670828563E-7	TEST	1.310872838219273E-7	DEFECT	1.1851043170753016E-8	DOCUMENTATION	5.789677979725781E-9	IMPLEMENTATION
// otherwise:	WITHOUT_CLASSIFICATION	0.999554028470111	WITHOUT_CLASSIFICATION	2.90649249081605E-4	IMPLEMENTATION	1.3924950324830732E-4	DESIGN	8.438000845146457E-6	DEFECT	6.340068071785994E-6	TEST	1.2947086420684556E-6	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999888477600364	WITHOUT_CLASSIFICATION	9.622154535248627E-6	IMPLEMENTATION	9.624523027183516E-7	DESIGN	2.9122039703534626E-7	DOCUMENTATION	2.458432640586244E-7	TEST	3.056946447346406E-8	DEFECT
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9971294775304439	WITHOUT_CLASSIFICATION	0.0028534556563737114	DESIGN	1.5293675113749258E-5	DEFECT	8.706459583315045E-7	DOCUMENTATION	7.404101380214393E-7	TEST	1.6208197224797653E-7	IMPLEMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9971294775304439	WITHOUT_CLASSIFICATION	0.0028534556563737114	DESIGN	1.5293675113749258E-5	DEFECT	8.706459583315045E-7	DOCUMENTATION	7.404101380214393E-7	TEST	1.6208197224797653E-7	IMPLEMENTATION
// HHH-2481 make sure the callback gets cleared, otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.9937387852721253	WITHOUT_CLASSIFICATION	0.005161685861458745	DESIGN	0.0010815046304387154	DEFECT	1.6611576077935416E-5	IMPLEMENTATION	1.3359551110864383E-6	DOCUMENTATION	7.670478829452146E-8	TEST
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999995712655094	WITHOUT_CLASSIFICATION	1.8370969059626112E-7	IMPLEMENTATION	1.7843422633449728E-7	DEFECT	5.265591821228409E-8	TEST	8.369731589932913E-9	DESIGN	5.564923843577508E-9	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999995712655094	WITHOUT_CLASSIFICATION	1.8370969059626112E-7	IMPLEMENTATION	1.7843422633449728E-7	DEFECT	5.265591821228409E-8	TEST	8.369731589932913E-9	DESIGN	5.564923843577508E-9	DOCUMENTATION
// note: interface is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9988865781021768	WITHOUT_CLASSIFICATION	0.0011101658659926138	DESIGN	2.6478068457119837E-6	DEFECT	3.7101775498173104E-7	DOCUMENTATION	1.7695471790084574E-7	TEST	6.025251178072218E-8	IMPLEMENTATION
// interfaces // arguments	WITHOUT_CLASSIFICATION	0.9999997872610352	WITHOUT_CLASSIFICATION	1.6767712109962769E-7	DESIGN	1.640816179414478E-8	DOCUMENTATION	1.628560824029403E-8	DEFECT	1.2342080663354006E-8	TEST	2.5992946032933624E-11	IMPLEMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9969712784522821	WITHOUT_CLASSIFICATION	0.0016628833795773153	DESIGN	7.032780412791591E-4	DEFECT	3.991222377108115E-4	IMPLEMENTATION	1.6422166187709508E-4	DOCUMENTATION	9.921622727343654E-5	TEST
// Get the caller	WITHOUT_CLASSIFICATION	0.9999974814376908	WITHOUT_CLASSIFICATION	2.3653888867820443E-6	IMPLEMENTATION	9.788684350740136E-8	DESIGN	3.678923127092544E-8	TEST	1.1176217235148668E-8	DEFECT	7.321130210800468E-9	DOCUMENTATION
// Get the caller principals	WITHOUT_CLASSIFICATION	0.9999985685320192	WITHOUT_CLASSIFICATION	1.3966549511339075E-6	IMPLEMENTATION	1.7943292753831177E-8	DESIGN	9.16522210142505E-9	TEST	6.083246727233755E-9	DOCUMENTATION	1.6212682845594701E-9	DEFECT
//private static final Alias DEFAULT_ALIAS = new Alias(10, null);	WITHOUT_CLASSIFICATION	0.9999997112076539	WITHOUT_CLASSIFICATION	2.3205797686091141E-7	DESIGN	4.398803413800417E-8	DEFECT	8.436105225706187E-9	DOCUMENTATION	3.967786841267538E-9	IMPLEMENTATION	3.424429182830719E-10	TEST
// Needed to bump this up to DotNode, because that is the only thing which currently // knows about the property-ref path in the correct format; it is either this, or // recurse over the DotNodes constructing the property path just like DotNode does // internally	WITHOUT_CLASSIFICATION	0.9998900734536035	WITHOUT_CLASSIFICATION	6.746437067645812E-5	TEST	2.729967173706427E-5	IMPLEMENTATION	7.634100525685842E-6	DOCUMENTATION	5.100025137915519E-6	DESIGN	2.4283783192217483E-6	DEFECT
//if the identifier is quoted, remove the quotes	WITHOUT_CLASSIFICATION	0.9998762486462411	WITHOUT_CLASSIFICATION	5.3734115545840654E-5	DESIGN	4.146540748548216E-5	IMPLEMENTATION	2.6169899066083714E-5	TEST	1.9969893481860025E-6	DEFECT	3.849423131054202E-7	DOCUMENTATION
//truncate the identifier to the max alias length, less the suffix length	WITHOUT_CLASSIFICATION	0.9999956283094595	WITHOUT_CLASSIFICATION	3.042833716689152E-6	DESIGN	1.1642311300740085E-6	IMPLEMENTATION	1.4186452380550096E-7	DOCUMENTATION	1.554418940389427E-8	TEST	7.216980582777237E-9	DEFECT
//full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.9980885316673933	WITHOUT_CLASSIFICATION	9.451080019351182E-4	DESIGN	9.051592022349533E-4	DEFECT	4.730801280396668E-5	IMPLEMENTATION	9.447064545379891E-6	TEST	4.446051087181702E-6	DOCUMENTATION
// null is not considered the same type as Integer. //$NON-NLS-1 //$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999855211921052	WITHOUT_CLASSIFICATION	1.2998859270953573E-5	DESIGN	9.455398826106565E-7	DEFECT	5.218592560513194E-7	IMPLEMENTATION	7.826341178587776E-9	TEST	4.723144161942972E-9	DOCUMENTATION
// the outerJoinsAfterWhere needs to come before where clause to properly // handle dynamic filters	WITHOUT_CLASSIFICATION	0.9999961779935546	WITHOUT_CLASSIFICATION	2.1396852067406566E-6	DESIGN	1.5588889457995642E-6	IMPLEMENTATION	8.102069543169353E-8	DEFECT	3.736464961821919E-8	DOCUMENTATION	5.046947755915942E-9	TEST
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9998047110455981	WITHOUT_CLASSIFICATION	1.1276354639063946E-4	DESIGN	7.409737908734308E-5	DEFECT	3.2905114804703085E-6	DOCUMENTATION	2.6265644935545396E-6	TEST	2.510952949711992E-6	IMPLEMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9998047110455981	WITHOUT_CLASSIFICATION	1.1276354639063946E-4	DESIGN	7.409737908734308E-5	DEFECT	3.2905114804703085E-6	DOCUMENTATION	2.6265644935545396E-6	TEST	2.510952949711992E-6	IMPLEMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9998047110455981	WITHOUT_CLASSIFICATION	1.1276354639063946E-4	DESIGN	7.409737908734308E-5	DEFECT	3.2905114804703085E-6	DOCUMENTATION	2.6265644935545396E-6	TEST	2.510952949711992E-6	IMPLEMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9998047110455981	WITHOUT_CLASSIFICATION	1.1276354639063946E-4	DESIGN	7.409737908734308E-5	DEFECT	3.2905114804703085E-6	DOCUMENTATION	2.6265644935545396E-6	TEST	2.510952949711992E-6	IMPLEMENTATION
// strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.9999983223648209	WITHOUT_CLASSIFICATION	1.1718952113614385E-6	DEFECT	4.1825722857206016E-7	IMPLEMENTATION	4.516837252797325E-8	TEST	3.5792277413332536E-8	DOCUMENTATION	6.522089269365635E-9	DESIGN
// if the condition is not already there...	WITHOUT_CLASSIFICATION	0.9999884137616002	WITHOUT_CLASSIFICATION	4.1544890197584255E-6	DEFECT	3.377800449486615E-6	DESIGN	2.5404575372806924E-6	IMPLEMENTATION	1.498482034736705E-6	TEST	1.5009358448303252E-8	DOCUMENTATION
//dontSpace.add("'");	WITHOUT_CLASSIFICATION	0.999954341505292	WITHOUT_CLASSIFICATION	2.967526126275384E-5	IMPLEMENTATION	9.57244986146542E-6	DESIGN	3.4136554137535497E-6	DOCUMENTATION	2.400736473207893E-6	DEFECT	5.963916968351007E-7	TEST
//for MySQL	WITHOUT_CLASSIFICATION	0.9997277708301383	WITHOUT_CLASSIFICATION	2.499796167117377E-4	DESIGN	1.5499355867530507E-5	DEFECT	2.6707823269499415E-6	DOCUMENTATION	2.4278165457536514E-6	IMPLEMENTATION	1.6515984096248787E-6	TEST
//HashMap columnsUnique = new HashMap();	WITHOUT_CLASSIFICATION	0.9999732419718398	WITHOUT_CLASSIFICATION	2.1398617050000198E-5	IMPLEMENTATION	4.4438541712508495E-6	DESIGN	3.85661929219977E-7	DOCUMENTATION	3.5707751929567836E-7	DEFECT	1.7281749054593392E-7	TEST
//null caused some problems	WITHOUT_CLASSIFICATION	0.9998509482824801	WITHOUT_CLASSIFICATION	6.972678173927943E-5	DESIGN	6.658544412793815E-5	IMPLEMENTATION	7.401097308931861E-6	DOCUMENTATION	4.659255744439306E-6	DEFECT	6.791385993274939E-7	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9954271247081595	WITHOUT_CLASSIFICATION	0.004322989338518281	DESIGN	1.7356294724047073E-4	IMPLEMENTATION	4.7901055112023405E-5	DEFECT	1.831782340941365E-5	DOCUMENTATION	1.0104127560420165E-5	TEST
//not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.9998632694620094	WITHOUT_CLASSIFICATION	1.339619955357733E-4	DESIGN	1.4827233958895634E-6	DEFECT	1.1433732599433379E-6	TEST	9.884912822208885E-8	IMPLEMENTATION	4.359667058389295E-8	DOCUMENTATION
//even on inverse="true"	WITHOUT_CLASSIFICATION	0.9997515907645782	WITHOUT_CLASSIFICATION	1.565362400107478E-4	IMPLEMENTATION	6.4264775227429E-5	DESIGN	1.3073489669831792E-5	DEFECT	1.0554675516191198E-5	DOCUMENTATION	3.980054997599137E-6	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9954271247081595	WITHOUT_CLASSIFICATION	0.004322989338518281	DESIGN	1.7356294724047073E-4	IMPLEMENTATION	4.7901055112023405E-5	DEFECT	1.831782340941365E-5	DOCUMENTATION	1.0104127560420165E-5	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9954271247081595	WITHOUT_CLASSIFICATION	0.004322989338518281	DESIGN	1.7356294724047073E-4	IMPLEMENTATION	4.7901055112023405E-5	DEFECT	1.831782340941365E-5	DOCUMENTATION	1.0104127560420165E-5	TEST
// If true then execute db updates, otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.9999917971401229	WITHOUT_CLASSIFICATION	7.449466390651482E-6	IMPLEMENTATION	5.733455291068562E-7	DESIGN	9.660502755234747E-8	DEFECT	5.7045923510238366E-8	TEST	2.6397006212008654E-8	DOCUMENTATION
// we only release the connection	WITHOUT_CLASSIFICATION	0.9999956763615867	WITHOUT_CLASSIFICATION	1.7293337927139457E-6	IMPLEMENTATION	9.821795158967015E-7	DESIGN	9.729814270357758E-7	DOCUMENTATION	4.2203258019802213E-7	DEFECT	2.1711109727552317E-7	TEST
// deprecated option...	WITHOUT_CLASSIFICATION	0.9998978358350349	WITHOUT_CLASSIFICATION	5.691281485848726E-5	DESIGN	4.1929330526457384E-5	IMPLEMENTATION	1.3257754857146415E-6	DOCUMENTATION	1.1229813455266928E-6	DEFECT	8.732627490294554E-7	TEST
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9997347612672152	WITHOUT_CLASSIFICATION	2.428758043102123E-4	DESIGN	1.995778519816133E-5	DEFECT	1.1427568568892184E-6	TEST	1.1026808612269402E-6	IMPLEMENTATION	1.5970555836852762E-7	DOCUMENTATION
//actually, this last test is probably unnecessary, since  //beforeCompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.9562437470246286	WITHOUT_CLASSIFICATION	0.0395135006629001	DESIGN	0.0037095363574315026	TEST	4.987725944595193E-4	DEFECT	1.7456377742574735E-5	DOCUMENTATION	1.6986982837852715E-5	IMPLEMENTATION
// this one only really needed for badly-behaved applications! // (if the TransactionManager has a Sychronization registered, // its a noop) // (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.9999980686057567	WITHOUT_CLASSIFICATION	9.219737544042327E-7	IMPLEMENTATION	5.718847725633965E-7	DESIGN	3.7225547206874065E-7	TEST	3.418900182321155E-8	DOCUMENTATION	3.109124252056212E-8	DEFECT
// Create an DotNode AST for the path and resolve it.	WITHOUT_CLASSIFICATION	0.9999872236137572	WITHOUT_CLASSIFICATION	1.0482684341555734E-5	DESIGN	1.7138119481269634E-6	IMPLEMENTATION	4.660785939576491E-7	TEST	6.363718923082213E-8	DOCUMENTATION	5.017416982327841E-8	DEFECT
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9997347612672152	WITHOUT_CLASSIFICATION	2.428758043102123E-4	DESIGN	1.995778519816133E-5	DEFECT	1.1427568568892184E-6	TEST	1.1026808612269402E-6	IMPLEMENTATION	1.5970555836852762E-7	DOCUMENTATION
//if we could not register a synchronization, //do the before/after completion callbacks //ourself (but we need to let jdbcContext //know that this is what we are going to //do, so it doesn't keep trying to register //synchronizations)	WITHOUT_CLASSIFICATION	0.997992872137552	WITHOUT_CLASSIFICATION	0.0019486544131881785	DESIGN	2.6965003605073705E-5	TEST	2.623181057145366E-5	DEFECT	3.7406218102330166E-6	DOCUMENTATION	1.536013273168723E-6	IMPLEMENTATION
// swallow it, and continue to roll back JTA transaction	WITHOUT_CLASSIFICATION	0.9999037265098695	WITHOUT_CLASSIFICATION	3.6353830234312874E-5	IMPLEMENTATION	3.619241112786185E-5	DESIGN	2.2062662787380643E-5	DEFECT	1.5862186500972166E-6	DOCUMENTATION	7.836733087638737E-8	TEST
// so the transaction is already rolled back, by JTA spec	WITHOUT_CLASSIFICATION	0.9999919356401543	WITHOUT_CLASSIFICATION	7.678980500784694E-6	IMPLEMENTATION	1.6376379674838168E-7	DOCUMENTATION	1.2063545908142236E-7	DEFECT	5.3904062703496654E-8	DESIGN	4.707602633882724E-8	TEST
// this method is a noop if there is a Synchronization!	WITHOUT_CLASSIFICATION	0.9999975350774064	WITHOUT_CLASSIFICATION	1.4164904249071675E-6	DESIGN	5.683958459625735E-7	TEST	4.2889440563081727E-7	DEFECT	4.1566132522327604E-8	DOCUMENTATION	9.575784481084638E-9	IMPLEMENTATION
// two conditions where we need to transform this to a theta-join syntax: //      1) 'elem' is the "root from-element" in correlated subqueries //      2) The DotNode.useThetaStyleImplicitJoins has been set to true //          and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.9787748538851502	WITHOUT_CLASSIFICATION	0.021189871269467375	DESIGN	2.767922295627163E-5	DEFECT	4.054590239233444E-6	DOCUMENTATION	3.4925958992034487E-6	TEST	4.8436287613764606E-8	IMPLEMENTATION
// WebSphere, however, is not a sane JEE/JTA container...	WITHOUT_CLASSIFICATION	0.9998968293808592	WITHOUT_CLASSIFICATION	4.8845464698885936E-5	DESIGN	4.398617536667524E-5	DEFECT	8.573732726097313E-6	IMPLEMENTATION	1.7089090926789941E-6	TEST	5.633725643753702E-8	DOCUMENTATION
// for sane JEE/JTA containers, the transaction itself functions as its identifier...	WITHOUT_CLASSIFICATION	0.9999989888074676	WITHOUT_CLASSIFICATION	7.803243718367884E-7	IMPLEMENTATION	2.2699781622764826E-7	DESIGN	3.0486593582931415E-9	TEST	6.479877442132657E-10	DOCUMENTATION	1.736972027411158E-10	DEFECT
//swallow, the transaction was finished	WITHOUT_CLASSIFICATION	0.9945806031124198	WITHOUT_CLASSIFICATION	0.005337926381223984	IMPLEMENTATION	4.482462734737729E-5	DEFECT	2.028359678425519E-5	DESIGN	1.2090110953318664E-5	TEST	4.2721712712740965E-6	DOCUMENTATION
// all AliasToEntityMapResultTransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999894358140642	WITHOUT_CLASSIFICATION	9.276080751841073E-6	IMPLEMENTATION	1.2181341492820403E-6	DESIGN	4.117237293532971E-8	DEFECT	1.5063217617955544E-8	TEST	1.3735443986774004E-8	DOCUMENTATION
// Create the join element under the from element.	WITHOUT_CLASSIFICATION	0.9999979336758891	WITHOUT_CLASSIFICATION	1.4345738763065017E-6	DESIGN	4.0280922004906086E-7	DEFECT	1.2775488468735138E-7	IMPLEMENTATION	5.8033769106388494E-8	TEST	4.315236078049451E-8	DOCUMENTATION
// all DistinctRootEntityResultTransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999984966938672	WITHOUT_CLASSIFICATION	1.3304482826872616E-6	DESIGN	1.416882266524924E-7	IMPLEMENTATION	1.196024052855118E-8	TEST	1.1382393913341218E-8	DEFECT	7.82698920248415E-9	DOCUMENTATION
// map of EntityMode -> Tuplizer	WITHOUT_CLASSIFICATION	0.9999947836982154	WITHOUT_CLASSIFICATION	3.826105039133092E-6	DESIGN	9.527386225142123E-7	DEFECT	1.9131155319242059E-7	DOCUMENTATION	1.4901695591537123E-7	IMPLEMENTATION	9.712961400130872E-8	TEST
// this is a virtual id property...	WITHOUT_CLASSIFICATION	0.9992157627286009	WITHOUT_CLASSIFICATION	7.807583412727635E-4	DESIGN	2.7105186786595633E-6	DEFECT	3.5655223147266434E-7	TEST	3.044936658150198E-7	IMPLEMENTATION	1.0736555037112929E-7	DOCUMENTATION
//this one needed only for guessEntityMode()	WITHOUT_CLASSIFICATION	0.9888409469195308	WITHOUT_CLASSIFICATION	0.010696118173240654	DESIGN	2.5565593331537207E-4	TEST	1.232127344835921E-4	IMPLEMENTATION	4.660862193176265E-5	DEFECT	3.745761749788002E-5	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999840726981333	WITHOUT_CLASSIFICATION	1.5156781991486502E-5	IMPLEMENTATION	6.315383187159659E-7	DEFECT	7.22323522726601E-8	TEST	4.88926399096429E-8	DESIGN	1.7856564273583253E-8	DOCUMENTATION
// todo : move this to SF per HHH-3517; also see HHH-1907 and ComponentMetamodel	WITHOUT_CLASSIFICATION	0.5784484914784321	WITHOUT_CLASSIFICATION	0.42154609868126824	DESIGN	3.3384487085267213E-6	DEFECT	1.1468713793011344E-6	DOCUMENTATION	8.870535421950639E-7	TEST	3.746666951821841E-8	IMPLEMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999957507653874	WITHOUT_CLASSIFICATION	3.783708668225193E-6	DESIGN	3.467554467732235E-7	DEFECT	1.0468614005043492E-7	TEST	9.011694602743439E-9	DOCUMENTATION	5.072663099091734E-9	IMPLEMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999885538801424	WITHOUT_CLASSIFICATION	6.699618666082904E-6	DESIGN	2.3289950566590983E-6	DEFECT	1.4664332658751425E-6	IMPLEMENTATION	7.294447013036448E-7	DOCUMENTATION	2.2162816770968928E-7	TEST
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.99988501417338	WITHOUT_CLASSIFICATION	1.1281263084433982E-4	DESIGN	1.7728843844624784E-6	TEST	1.9381350420882723E-7	DEFECT	1.7942814382513304E-7	IMPLEMENTATION	2.706974308617856E-8	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999885538801424	WITHOUT_CLASSIFICATION	6.699618666082904E-6	DESIGN	2.3289950566590983E-6	DEFECT	1.4664332658751425E-6	IMPLEMENTATION	7.294447013036448E-7	DOCUMENTATION	2.2162816770968928E-7	TEST
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999997507389928	WITHOUT_CLASSIFICATION	1.0578304385355069E-7	IMPLEMENTATION	7.85133441947543E-8	DESIGN	4.5092389693066563E-8	DEFECT	1.1105319021678677E-8	TEST	8.766910352156985E-9	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999976352811453	WITHOUT_CLASSIFICATION	1.4922169151579254E-6	DESIGN	4.925526655230741E-7	DEFECT	3.520709698521538E-7	TEST	1.7073391130480584E-8	IMPLEMENTATION	1.0804913093058509E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// cached for efficiency...	WITHOUT_CLASSIFICATION	0.9997775251482642	WITHOUT_CLASSIFICATION	2.208700340428977E-4	DESIGN	8.217056508245875E-7	IMPLEMENTATION	4.62622846976482E-7	DOCUMENTATION	2.4056044933327503E-7	TEST	7.99287456706917E-8	DEFECT
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
//it was not embedded, so the argument is just an id	WITHOUT_CLASSIFICATION	0.9999878133237898	WITHOUT_CLASSIFICATION	7.1193262163519405E-6	TEST	2.3697215123458106E-6	DEFECT	1.4913531623202038E-6	DOCUMENTATION	1.1410657294843816E-6	DESIGN	6.520958973725596E-8	IMPLEMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999957507653874	WITHOUT_CLASSIFICATION	3.783708668225193E-6	DESIGN	3.467554467732235E-7	DEFECT	1.0468614005043492E-7	TEST	9.011694602743439E-9	DOCUMENTATION	5.072663099091734E-9	IMPLEMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.99988501417338	WITHOUT_CLASSIFICATION	1.1281263084433982E-4	DESIGN	1.7728843844624784E-6	TEST	1.9381350420882723E-7	DEFECT	1.7942814382513304E-7	IMPLEMENTATION	2.706974308617856E-8	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999997507389928	WITHOUT_CLASSIFICATION	1.0578304385355069E-7	IMPLEMENTATION	7.85133441947543E-8	DESIGN	4.5092389693066563E-8	DEFECT	1.1105319021678677E-8	TEST	8.766910352156985E-9	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9999819320779024	WITHOUT_CLASSIFICATION	9.064369472668741E-6	IMPLEMENTATION	7.781194697612062E-6	DESIGN	9.278945974303311E-7	TEST	1.9145384753984056E-7	DEFECT	1.0300948228685128E-7	DOCUMENTATION
//return currentId;	WITHOUT_CLASSIFICATION	0.9999323849701924	WITHOUT_CLASSIFICATION	5.126369820973219E-5	DESIGN	7.940566556654668E-6	IMPLEMENTATION	5.8587439317296966E-6	DEFECT	2.3433795008421253E-6	DOCUMENTATION	2.0864160851069597E-7	TEST
//reset the id	WITHOUT_CLASSIFICATION	0.9984166122515834	WITHOUT_CLASSIFICATION	0.0014915584227100135	IMPLEMENTATION	6.168524305984314E-5	DESIGN	2.330471046429047E-5	TEST	4.2839002556955965E-6	DEFECT	2.5554719268207554E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
//reset the version	WITHOUT_CLASSIFICATION	0.9998176626665772	WITHOUT_CLASSIFICATION	1.2123943436633309E-4	IMPLEMENTATION	4.8083608714166726E-5	DESIGN	6.572935518813194E-6	DEFECT	4.661445086097352E-6	TEST	1.7799097373555802E-6	DOCUMENTATION
// the default is to simply not lazy fetch properties for now...	WITHOUT_CLASSIFICATION	0.999331927726039	WITHOUT_CLASSIFICATION	5.846071503699058E-4	DEFECT	5.652206193013767E-5	DESIGN	2.6002228513961222E-5	IMPLEMENTATION	6.008231044715245E-7	TEST	3.400100424890631E-7	DOCUMENTATION
// Add the second join, the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.9999948967091847	WITHOUT_CLASSIFICATION	4.758086085881565E-6	IMPLEMENTATION	1.3726936857413232E-7	DESIGN	1.1465272217630625E-7	DEFECT	6.326260319717657E-8	TEST	3.0020035457275615E-8	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994746683072723	WITHOUT_CLASSIFICATION	5.138337013223745E-4	DESIGN	5.322202488686636E-6	IMPLEMENTATION	2.9732854316594183E-6	DEFECT	1.7667913113938207E-6	TEST	1.435712173633705E-6	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999976352811453	WITHOUT_CLASSIFICATION	1.4922169151579254E-6	DESIGN	4.925526655230741E-7	DEFECT	3.520709698521538E-7	TEST	1.7073391130480584E-8	IMPLEMENTATION	1.0804913093058509E-8	DOCUMENTATION
// determine the id getter and setter methods from the proxy interface (if any) // determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.9996386958872162	WITHOUT_CLASSIFICATION	3.5645217005854087E-4	DESIGN	4.795963428989949E-6	DEFECT	2.442854500536578E-8	TEST	2.4109962184967322E-8	DOCUMENTATION	7.4407891385073544E-9	IMPLEMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
//not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.9991923834132931	WITHOUT_CLASSIFICATION	7.6642041527489E-4	DEFECT	3.7539749353387014E-5	DESIGN	2.039285557906204E-6	IMPLEMENTATION	1.0272958142521032E-6	DOCUMENTATION	5.898407065283742E-7	TEST
// superclass entity-name	WITHOUT_CLASSIFICATION	0.9999885206983168	WITHOUT_CLASSIFICATION	1.132674094945605E-5	DESIGN	5.2840586509846327E-8	DOCUMENTATION	5.070080720317832E-8	DEFECT	2.9328900552872187E-8	IMPLEMENTATION	1.9690439417886402E-8	TEST
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994746683072723	WITHOUT_CLASSIFICATION	5.138337013223745E-4	DESIGN	5.322202488686636E-6	IMPLEMENTATION	2.9732854316594183E-6	DEFECT	1.7667913113938207E-6	TEST	1.435712173633705E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999831905564419	WITHOUT_CLASSIFICATION	5.903385033156492E-6	DEFECT	5.226779367442625E-6	DESIGN	3.6242148043181298E-6	IMPLEMENTATION	1.1943205364496941E-6	TEST	8.607438168142809E-7	DOCUMENTATION
//init the aliases, after initing the constructornode	WITHOUT_CLASSIFICATION	0.9999291083904573	WITHOUT_CLASSIFICATION	6.237165430636061E-5	IMPLEMENTATION	5.774703127194478E-6	TEST	2.533737324909753E-6	DESIGN	1.4793630551911553E-7	DOCUMENTATION	6.357847852522757E-8	DEFECT
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994746683072723	WITHOUT_CLASSIFICATION	5.138337013223745E-4	DESIGN	5.322202488686636E-6	IMPLEMENTATION	2.9732854316594183E-6	DEFECT	1.7667913113938207E-6	TEST	1.435712173633705E-6	DOCUMENTATION
// legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.9999895175370631	WITHOUT_CLASSIFICATION	8.695823560071097E-6	DESIGN	1.2516683898067928E-6	IMPLEMENTATION	3.0383924429479585E-7	DOCUMENTATION	2.2002790769774077E-7	TEST	1.1103834951998681E-8	DEFECT
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999994316362213	WITHOUT_CLASSIFICATION	2.9509002801435914E-7	DEFECT	1.194415225556067E-7	IMPLEMENTATION	9.862205766806728E-8	TEST	4.1865639427136355E-8	DOCUMENTATION	1.3344531108720599E-8	DESIGN
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999831905564419	WITHOUT_CLASSIFICATION	5.903385033156492E-6	DEFECT	5.226779367442625E-6	DESIGN	3.6242148043181298E-6	IMPLEMENTATION	1.1943205364496941E-6	TEST	8.607438168142809E-7	DOCUMENTATION
//note: this affects the return value!	WITHOUT_CLASSIFICATION	0.9999307676578739	WITHOUT_CLASSIFICATION	3.818551327507342E-5	DESIGN	2.665541433397726E-5	DEFECT	3.428535603774071E-6	IMPLEMENTATION	5.808389052398823E-7	DOCUMENTATION	3.820400079448653E-7	TEST
// Need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.9999617291608018	WITHOUT_CLASSIFICATION	3.192181456646406E-5	IMPLEMENTATION	3.966123173079496E-6	TEST	1.5907667943914062E-6	DESIGN	7.069973886275832E-7	DEFECT	8.513727537845548E-8	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.999999501829116	WITHOUT_CLASSIFICATION	2.833939733399409E-7	DESIGN	1.745259523854022E-7	IMPLEMENTATION	1.7158505718745486E-8	TEST	1.2015887376526635E-8	DOCUMENTATION	1.1076565089219837E-8	DEFECT
// Collection Types:	WITHOUT_CLASSIFICATION	0.9999797701130642	WITHOUT_CLASSIFICATION	1.3167167994344397E-5	DESIGN	4.394560287649725E-6	DEFECT	1.5312058515944808E-6	IMPLEMENTATION	5.855560578975135E-7	DOCUMENTATION	5.513967443125792E-7	TEST
// convenience methods relating to operations across arrays of types...	WITHOUT_CLASSIFICATION	0.9999888911715352	WITHOUT_CLASSIFICATION	1.0859698651905762E-5	DESIGN	1.4327186346543165E-7	TEST	5.756353207860088E-8	DOCUMENTATION	3.083427937698758E-8	DEFECT	1.7460137999168144E-8	IMPLEMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999562862954741	WITHOUT_CLASSIFICATION	3.584640030091093E-5	DESIGN	7.040448302641047E-6	IMPLEMENTATION	5.571981170580164E-7	DEFECT	2.2930922340878998E-7	TEST	4.034858190778109E-8	DOCUMENTATION
//Blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.9999985467490682	WITHOUT_CLASSIFICATION	1.0937927640928577E-6	DESIGN	2.1765882377066453E-7	IMPLEMENTATION	5.2103744445385884E-8	DOCUMENTATION	4.701450813166764E-8	DEFECT	4.26810913797665E-8	TEST
//value is the entity name	WITHOUT_CLASSIFICATION	0.9999860543443838	WITHOUT_CLASSIFICATION	9.847351709860721E-6	DESIGN	2.044031537746275E-6	IMPLEMENTATION	9.420692330671944E-7	DOCUMENTATION	7.558968719546265E-7	DEFECT	3.563062634894713E-7	TEST
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9997848562416923	WITHOUT_CLASSIFICATION	8.372299825323778E-5	DESIGN	6.276501348622162E-5	DEFECT	5.3794321227872224E-5	IMPLEMENTATION	9.018015980353736E-6	DOCUMENTATION	5.843409359872022E-6	TEST
// generate id select fragment and then property select fragment for // each expression, just like generateSelectFragments().	WITHOUT_CLASSIFICATION	0.999885231333712	WITHOUT_CLASSIFICATION	1.1393937399056781E-4	DESIGN	3.63290411550074E-7	DEFECT	2.871323551264251E-7	TEST	1.6933606137685746E-7	DOCUMENTATION	9.533469296084794E-9	IMPLEMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9969712784522821	WITHOUT_CLASSIFICATION	0.0016628833795773153	DESIGN	7.032780412791591E-4	DEFECT	3.991222377108115E-4	IMPLEMENTATION	1.6422166187709508E-4	DOCUMENTATION	9.921622727343654E-5	TEST
//xml is the entity name	WITHOUT_CLASSIFICATION	0.9999853610654115	WITHOUT_CLASSIFICATION	9.623567648694825E-6	DESIGN	2.212733321823345E-6	IMPLEMENTATION	1.369061064136242E-6	TEST	9.394997330300367E-7	DOCUMENTATION	4.940728207729175E-7	DEFECT
//special case ... this is the leaf of the containment graph, even though not immutable	WITHOUT_CLASSIFICATION	0.9858583685274007	WITHOUT_CLASSIFICATION	0.011066173424509244	DESIGN	0.0026861076446231826	DEFECT	1.6327372953504974E-4	IMPLEMENTATION	1.3884809866351026E-4	DOCUMENTATION	8.722857526831532E-5	TEST
//tolerates nulls	WITHOUT_CLASSIFICATION	0.999992446326013	WITHOUT_CLASSIFICATION	5.487283229781744E-6	DESIGN	7.863999518877658E-7	TEST	6.346670044924728E-7	IMPLEMENTATION	5.582145764750696E-7	DEFECT	8.71092244131244E-8	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999678646384618	WITHOUT_CLASSIFICATION	1.9982900250584494E-5	DEFECT	6.107342563322285E-6	IMPLEMENTATION	4.097101605298194E-6	DESIGN	1.351241176611702E-6	TEST	5.967759422210683E-7	DOCUMENTATION
// metaType is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.9999996124371554	WITHOUT_CLASSIFICATION	3.219737571490371E-7	DESIGN	5.968583460731572E-8	DEFECT	2.8980155914406325E-9	DOCUMENTATION	2.80903918906602E-9	TEST	1.9619810237782427E-10	IMPLEMENTATION
// Get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.9999931646979809	WITHOUT_CLASSIFICATION	6.6434084473878255E-6	DESIGN	1.6447427567612445E-7	IMPLEMENTATION	1.562248204345147E-8	DEFECT	9.707392759195328E-9	TEST	2.0894212504172535E-9	DOCUMENTATION
// Look through the FromElement's children to find any collections of values that should be fetched...	WITHOUT_CLASSIFICATION	0.9998081160761567	WITHOUT_CLASSIFICATION	1.6273251410198336E-4	IMPLEMENTATION	2.8220262755957777E-5	DEFECT	5.891834203111008E-7	DESIGN	3.047101422732996E-7	TEST	3.725342275601982E-8	DOCUMENTATION
//return AssociationType.FOREIGN_KEY_TO_PARENT; //this is better but causes a transient object exception...	WITHOUT_CLASSIFICATION	0.991839700201345	WITHOUT_CLASSIFICATION	0.008056547254849375	DESIGN	7.262578282166122E-5	IMPLEMENTATION	2.474210452443656E-5	TEST	3.885174406048436E-6	DEFECT	2.499482053483037E-6	DOCUMENTATION
// Use the lower case function name. // Remember whether we're in a SELECT clause or not.	WITHOUT_CLASSIFICATION	0.9999999661471639	WITHOUT_CLASSIFICATION	3.222113380436994E-8	DEFECT	1.0643873357809026E-9	DESIGN	4.498189864246458E-10	IMPLEMENTATION	9.046884251640602E-11	DOCUMENTATION	2.702719937293925E-11	TEST
// IDENT might be the name of a class.	WITHOUT_CLASSIFICATION	0.9997322299412899	WITHOUT_CLASSIFICATION	2.676613399105352E-4	DESIGN	3.8179009635936574E-8	TEST	3.7613339995364556E-8	DOCUMENTATION	2.364428688541927E-8	IMPLEMENTATION	9.28216313928477E-9	DEFECT
//TODO!!!	WITHOUT_CLASSIFICATION	0.9948660286272201	WITHOUT_CLASSIFICATION	0.0033137644145152254	DESIGN	9.844488014208342E-4	DEFECT	4.28706499027217E-4	IMPLEMENTATION	2.743157775528508E-4	DOCUMENTATION	1.3273588026370105E-4	TEST
//st.setTimestamp( index,  new Timestamp( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9961449346682587	WITHOUT_CLASSIFICATION	0.0031768921789033892	DEFECT	4.5253081420237537E-4	IMPLEMENTATION	1.5540767883324606E-4	DESIGN	3.814510549636749E-5	TEST	3.208955430577126E-5	DOCUMENTATION
//st.setDate( index,  new Date( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9970051390883669	WITHOUT_CLASSIFICATION	0.0016864624796725392	DEFECT	9.422432220902191E-4	DESIGN	3.0846395398762954E-4	IMPLEMENTATION	3.912242491174821E-5	DOCUMENTATION	1.8568830971029676E-5	TEST
// both are Timestamps	WITHOUT_CLASSIFICATION	0.9999995978923409	WITHOUT_CLASSIFICATION	1.5597946627389784E-7	TEST	1.4830898692087896E-7	IMPLEMENTATION	8.176315717601007E-8	DESIGN	1.2695247135737627E-8	DOCUMENTATION	3.360801589384447E-9	DEFECT
// at least one is a plain old Date	WITHOUT_CLASSIFICATION	0.9998679365002355	WITHOUT_CLASSIFICATION	1.2411478515292554E-4	DESIGN	3.725825936271514E-6	TEST	3.046928105267291E-6	IMPLEMENTATION	7.392961413798888E-7	DEFECT	4.36664428579059E-7	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9994454415472439	WITHOUT_CLASSIFICATION	3.6886517826930656E-4	DESIGN	1.437733379619709E-4	DEFECT	2.0250323724040268E-5	IMPLEMENTATION	1.4894826735613288E-5	DOCUMENTATION	6.774786064948248E-6	TEST
// if the corresponding SQL value is NULL, the reader we got is NULL as well	WITHOUT_CLASSIFICATION	0.9997251205848745	WITHOUT_CLASSIFICATION	2.6754318491428736E-4	DEFECT	3.3870988488824137E-6	TEST	2.6410086769434667E-6	DESIGN	1.235724161234351E-6	IMPLEMENTATION	7.239852413584446E-8	DOCUMENTATION
// Fetch Reader content up to the end - and put characters in a StringBuffer	WITHOUT_CLASSIFICATION	0.9565793913101363	WITHOUT_CLASSIFICATION	0.026613575396129137	IMPLEMENTATION	0.01668522917379316	DESIGN	1.0940307561545047E-4	DOCUMENTATION	7.850761894119261E-6	TEST	4.550282431781629E-6	DEFECT
// Return StringBuffer content as a large String	WITHOUT_CLASSIFICATION	0.9999955748026065	WITHOUT_CLASSIFICATION	3.2891456546049422E-6	IMPLEMENTATION	9.53289432302076E-7	DESIGN	1.4293199260404005E-7	DEFECT	2.502165087313075E-8	DOCUMENTATION	1.4808663272699505E-8	TEST
//or Types.LONGVARCHAR?	WITHOUT_CLASSIFICATION	0.9999131092271824	WITHOUT_CLASSIFICATION	4.7019705781403385E-5	IMPLEMENTATION	3.494244060320419E-5	DESIGN	2.330786095496442E-6	DOCUMENTATION	1.8325622565521716E-6	TEST	7.652780808960054E-7	DEFECT
//Not called at runtime so doesn't matter if its slow :)	WITHOUT_CLASSIFICATION	0.9997324178224851	WITHOUT_CLASSIFICATION	1.5505411636865685E-4	IMPLEMENTATION	6.259644488455245E-5	DESIGN	2.8742777279559256E-5	TEST	2.069775399977209E-5	DEFECT	4.910849824029195E-7	DOCUMENTATION
//TODO	WITHOUT_CLASSIFICATION	0.9996406963798427	WITHOUT_CLASSIFICATION	2.082513889836119E-4	DESIGN	5.759339390295984E-5	IMPLEMENTATION	5.349516779145557E-5	DEFECT	2.2634556861972916E-5	DOCUMENTATION	1.732911261725491E-5	TEST
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999830214832723	WITHOUT_CLASSIFICATION	1.086675167375261E-5	TEST	4.6659548524508485E-6	IMPLEMENTATION	8.197662931995186E-7	DESIGN	5.046195604645939E-7	DEFECT	1.2142434774440795E-7	DOCUMENTATION
//different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.9999766322933236	WITHOUT_CLASSIFICATION	2.180322889955092E-5	DESIGN	5.935006104509961E-7	IMPLEMENTATION	4.974826241858973E-7	DEFECT	2.8151739483217463E-7	TEST	1.9197714744900288E-7	DOCUMENTATION
//cache this	WITHOUT_CLASSIFICATION	0.999680594535607	WITHOUT_CLASSIFICATION	2.859991718686149E-4	DESIGN	1.630130111650167E-5	IMPLEMENTATION	8.618062410990068E-6	DOCUMENTATION	7.502845245970521E-6	TEST	9.840837509797977E-7	DEFECT
//only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.9997447781905756	WITHOUT_CLASSIFICATION	1.266389955796008E-4	DESIGN	6.621226374572644E-5	IMPLEMENTATION	5.075229447747096E-5	DEFECT	6.050908354812027E-6	TEST	5.567347266802273E-6	DOCUMENTATION
// Forcefully remove leading ands from where fragments; the grammar will // handle adding them	WITHOUT_CLASSIFICATION	0.9999836568029539	WITHOUT_CLASSIFICATION	8.837981305366718E-6	DEFECT	7.0387230466519104E-6	DESIGN	2.1957273158033913E-7	TEST	1.979844881381358E-7	IMPLEMENTATION	4.8935474314924044E-8	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9916458515418431	WITHOUT_CLASSIFICATION	0.004439323098974154	DESIGN	0.0014953021369279514	IMPLEMENTATION	0.0014358090274005685	DEFECT	6.661581277781183E-4	DOCUMENTATION	3.175560670761177E-4	TEST
// Create a new FILTERS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999536330934602	WITHOUT_CLASSIFICATION	2.756738462041262E-5	IMPLEMENTATION	1.825000323304101E-5	DESIGN	4.3872788837283105E-7	DEFECT	7.926165150796006E-8	TEST	3.1529146415924184E-8	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999831905564419	WITHOUT_CLASSIFICATION	5.903385033156492E-6	DEFECT	5.226779367442625E-6	DESIGN	3.6242148043181298E-6	IMPLEMENTATION	1.1943205364496941E-6	TEST	8.607438168142809E-7	DOCUMENTATION
//public Object instantiate(Object parent, SessionImplementor session) throws HibernateException;	WITHOUT_CLASSIFICATION	0.8570675366423223	DESIGN	0.14264292168674825	WITHOUT_CLASSIFICATION	2.647271069489081E-4	DEFECT	9.85591343226648E-6	DOCUMENTATION	9.085502830741233E-6	IMPLEMENTATION	5.873147717568539E-6	TEST
//nothing to do	WITHOUT_CLASSIFICATION	0.9998559158372089	WITHOUT_CLASSIFICATION	7.171871169497117E-5	DESIGN	2.714858037696886E-5	IMPLEMENTATION	2.249358335051008E-5	DEFECT	1.4530922889956188E-5	DOCUMENTATION	8.192364478739186E-6	TEST
//nothing to do	WITHOUT_CLASSIFICATION	0.9998559158372089	WITHOUT_CLASSIFICATION	7.171871169497117E-5	DESIGN	2.714858037696886E-5	IMPLEMENTATION	2.249358335051008E-5	DEFECT	1.4530922889956188E-5	DOCUMENTATION	8.192364478739186E-6	TEST
// VersionType impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //      Note : simply returns null for seed() and next() as the only known //      application of binary types for versioning is for use with the //      TIMESTAMP datatype supported by Sybase and SQL Server, which //      are completely db-generated values...	WITHOUT_CLASSIFICATION	0.9999971858205587	WITHOUT_CLASSIFICATION	1.964955585406931E-6	DESIGN	5.229493926186545E-7	IMPLEMENTATION	3.2110008353386493E-7	DEFECT	3.6770285931502704E-9	DOCUMENTATION	1.497351076845728E-9	TEST
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999562862954741	WITHOUT_CLASSIFICATION	3.584640030091093E-5	DESIGN	7.040448302641047E-6	IMPLEMENTATION	5.571981170580164E-7	DEFECT	2.2930922340878998E-7	TEST	4.034858190778109E-8	DOCUMENTATION
//not really necessary, I guess...	WITHOUT_CLASSIFICATION	0.9867286579413828	WITHOUT_CLASSIFICATION	0.011516245968050827	DESIGN	0.0013050901610790755	DEFECT	4.0750030612652396E-4	IMPLEMENTATION	2.98581549720622E-5	DOCUMENTATION	1.2647468388735581E-5	TEST
//Clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.9999997438124633	WITHOUT_CLASSIFICATION	1.9656089361733714E-7	DESIGN	3.123968205356201E-8	DEFECT	1.0693262061755342E-8	TEST	9.194162142378056E-9	IMPLEMENTATION	8.499536682142502E-9	DOCUMENTATION
// we do not have to worry about queued additions to uninitialized // collections, since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.9999978351549805	WITHOUT_CLASSIFICATION	7.201534868811835E-7	IMPLEMENTATION	6.80231696139388E-7	DEFECT	6.004300176028276E-7	DESIGN	1.5157078283915957E-7	TEST	1.2459036016219611E-8	DOCUMENTATION
// collections cannot be compared	WITHOUT_CLASSIFICATION	0.9999839212850866	WITHOUT_CLASSIFICATION	7.75308734284351E-6	IMPLEMENTATION	7.0095042156908216E-6	DESIGN	1.2474421764440911E-6	DEFECT	6.415493061568291E-8	TEST	4.5262478207175035E-9	DOCUMENTATION
//remember the uk value	WITHOUT_CLASSIFICATION	0.9999628791962524	WITHOUT_CLASSIFICATION	3.221797350563841E-5	IMPLEMENTATION	1.9660487372350288E-6	DESIGN	1.2058223886799956E-6	TEST	9.420310911686263E-7	DEFECT	7.889280248942886E-7	DOCUMENTATION
//NOOP	WITHOUT_CLASSIFICATION	0.9996015959970522	WITHOUT_CLASSIFICATION	3.223737735544728E-4	DESIGN	3.127528091329619E-5	IMPLEMENTATION	2.3564748165014896E-5	DEFECT	1.1770244267996639E-5	TEST	9.419956047033567E-6	DOCUMENTATION
//processCollectionProperty(token, q.getCollectionPersister(collectionRole), collectionName);	WITHOUT_CLASSIFICATION	0.9999847095729021	WITHOUT_CLASSIFICATION	1.1374561666080085E-5	DESIGN	2.7746256294611736E-6	DEFECT	9.66646186135995E-7	TEST	1.4882073929437737E-7	DOCUMENTATION	2.5772876894025887E-8	IMPLEMENTATION
//we must use the "remembered" uk value, since it is  //not available from the EntityEntry during assembly	WITHOUT_CLASSIFICATION	0.9998224192690196	WITHOUT_CLASSIFICATION	1.7486037682970006E-4	DESIGN	2.534056109296078E-6	TEST	1.407643908306023E-7	DEFECT	2.401880338808008E-8	IMPLEMENTATION	2.1514847194075093E-8	DOCUMENTATION
// collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.9999973124178593	WITHOUT_CLASSIFICATION	1.9535274033330195E-6	DESIGN	3.741007827405196E-7	IMPLEMENTATION	3.3396978745080813E-7	DEFECT	1.7707257762179738E-8	TEST	8.276909327054262E-9	DOCUMENTATION
// return false;	WITHOUT_CLASSIFICATION	0.999997024071904	WITHOUT_CLASSIFICATION	2.3221851338906824E-6	DESIGN	3.1920208795723845E-7	IMPLEMENTATION	3.091485597879604E-7	DEFECT	1.3526834443638748E-8	TEST	1.1865479780196553E-8	DOCUMENTATION
// This just handles a particular case of component // projection, perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.9958559816987415	WITHOUT_CLASSIFICATION	0.004044732627773871	DESIGN	9.90343851567006E-5	DEFECT	1.8175705035373057E-7	TEST	4.731319633436251E-8	DOCUMENTATION	2.221808133166749E-8	IMPLEMENTATION
//NOTE: we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.9999980444261828	WITHOUT_CLASSIFICATION	1.6231606123523043E-6	DESIGN	1.6203147549628135E-7	TEST	1.4970111132627736E-7	DEFECT	1.5037647827634806E-8	DOCUMENTATION	5.642970133950934E-9	IMPLEMENTATION
// the key is the owning entity itself, so get the ID from the key	WITHOUT_CLASSIFICATION	0.9999917579978738	WITHOUT_CLASSIFICATION	7.267921964790912E-6	DESIGN	5.494897879252783E-7	IMPLEMENTATION	2.986277428006488E-7	TEST	7.038028515194429E-8	DOCUMENTATION	5.558234550668274E-8	DEFECT
// if the original is a PersistentCollection, and that original // was not flagged as dirty, then reset the target's dirty flag // here after the copy operation. // </p> // One thing to be careful of here is a "bare" original collection // in which case we should never ever ever reset the dirty flag // on the target because we simply do not know...	WITHOUT_CLASSIFICATION	0.9999991232648118	WITHOUT_CLASSIFICATION	5.733707339071758E-7	DEFECT	2.9482854455067095E-7	IMPLEMENTATION	5.489947306606805E-9	DESIGN	2.7528376022096015E-9	TEST	2.9312488052451754E-10	DOCUMENTATION
//ignore subselect keywords	WITHOUT_CLASSIFICATION	0.9999998599449247	WITHOUT_CLASSIFICATION	8.728737384926982E-8	IMPLEMENTATION	2.6657973182218685E-8	DEFECT	1.2307640999196965E-8	DOCUMENTATION	1.1419418868923596E-8	DESIGN	2.3826683818313913E-9	TEST
// copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.9999999580021961	WITHOUT_CLASSIFICATION	3.306372698144931E-8	DESIGN	5.353723341629885E-9	DEFECT	1.5752087129931177E-9	IMPLEMENTATION	1.460387340004448E-9	DOCUMENTATION	5.447576510477727E-10	TEST
// for a null target, or a target which is the same as the original, we // need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.9999831562598183	WITHOUT_CLASSIFICATION	1.6784789318199103E-5	DESIGN	3.5681521686154885E-8	DOCUMENTATION	1.7956293895259658E-8	DEFECT	3.1903122401044075E-9	TEST	2.1227357516292566E-9	IMPLEMENTATION
// by default just use an unanticipated capacity since we don't // know how to extract the capacity to use from original here...	WITHOUT_CLASSIFICATION	0.9876583030408671	WITHOUT_CLASSIFICATION	0.011587468908116712	DESIGN	7.280364516846452E-4	IMPLEMENTATION	1.521548530442047E-5	DEFECT	7.651771992685883E-6	TEST	3.3243420343932222E-6	DOCUMENTATION
// get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.9999198782332565	WITHOUT_CLASSIFICATION	4.24252965074034E-5	IMPLEMENTATION	3.50696513228355E-5	DESIGN	2.299786824346475E-6	DEFECT	1.7592400845776605E-7	TEST	1.5110808058649385E-7	DOCUMENTATION
// check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.9993019597388854	WITHOUT_CLASSIFICATION	4.923298500705057E-4	IMPLEMENTATION	1.048275909621723E-4	DESIGN	9.535433554039901E-5	DEFECT	3.0974315305178785E-6	TEST	2.431053011041336E-6	DOCUMENTATION
// check if it is already completely loaded, but unowned	WITHOUT_CLASSIFICATION	0.9988476464011063	WITHOUT_CLASSIFICATION	0.0011447495496721615	IMPLEMENTATION	3.3750574348493386E-6	DEFECT	2.7133265299266557E-6	DESIGN	1.4468664448935311E-6	TEST	6.879881188935197E-8	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999999651426141	WITHOUT_CLASSIFICATION	2.2185377427761244E-8	DEFECT	9.341935335325156E-9	DESIGN	2.1877014845850532E-9	DOCUMENTATION	8.634590520030257E-10	IMPLEMENTATION	2.789125740814998E-10	TEST
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9916458515418431	WITHOUT_CLASSIFICATION	0.004439323098974154	DESIGN	0.0014953021369279514	IMPLEMENTATION	0.0014358090274005685	DEFECT	6.661581277781183E-4	DOCUMENTATION	3.175560670761177E-4	TEST
// create a new collection wrapper, to be initialized later	WITHOUT_CLASSIFICATION	0.9999992229209314	WITHOUT_CLASSIFICATION	3.7807546871784235E-7	DESIGN	2.007664405325776E-7	DEFECT	1.3797060420952808E-7	IMPLEMENTATION	5.390379422786678E-8	TEST	6.362760888984982E-9	DOCUMENTATION
// Some JDBC drivers erroneously return an empty array here for a null DB value :/	WITHOUT_CLASSIFICATION	0.9994303231147307	WITHOUT_CLASSIFICATION	5.695052997480463E-4	DESIGN	1.4484436149645645E-7	DEFECT	2.2908176713756587E-8	IMPLEMENTATION	2.218954821349666E-9	DOCUMENTATION	1.614028033650065E-9	TEST
// our column span is the number of columns in the PK	WITHOUT_CLASSIFICATION	0.9999999774114936	WITHOUT_CLASSIFICATION	1.3506412965297683E-8	DEFECT	6.541670890170245E-9	DESIGN	9.521284456241896E-10	DOCUMENTATION	8.991398230113911E-10	TEST	6.89154155581245E-10	IMPLEMENTATION
//cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.9999699365888417	WITHOUT_CLASSIFICATION	1.5161312768331409E-5	DEFECT	6.999462113787736E-6	DESIGN	4.758707466305102E-6	IMPLEMENTATION	1.952138289926907E-6	TEST	1.191790519930455E-6	DOCUMENTATION
// we already know current is not null...	WITHOUT_CLASSIFICATION	0.997911270333197	WITHOUT_CLASSIFICATION	0.0014092306961257651	DEFECT	6.491880212344595E-4	IMPLEMENTATION	1.6301092890005423E-5	DOCUMENTATION	1.1217188550469071E-5	DESIGN	2.792668002117081E-6	TEST
// the ids are fully resolved, so compare them with isDirty(), not isModified()	WITHOUT_CLASSIFICATION	0.9999904606683369	WITHOUT_CLASSIFICATION	8.090720374488469E-6	IMPLEMENTATION	7.026434976464929E-7	DEFECT	6.192743474838934E-7	DESIGN	1.1969829407381733E-7	TEST	6.995149579313799E-9	DOCUMENTATION
//the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.9999891225188897	WITHOUT_CLASSIFICATION	4.6363696548386715E-6	TEST	2.9729262136874224E-6	DEFECT	2.8796397989343587E-6	IMPLEMENTATION	2.0707306386335666E-7	DESIGN	1.8147237882541065E-7	DOCUMENTATION
// ----------------------------------------------------------- Constructors	WITHOUT_CLASSIFICATION	0.9999947194752923	WITHOUT_CLASSIFICATION	3.2423096028729362E-6	DESIGN	9.483210934140931E-7	DEFECT	7.913959190164104E-7	IMPLEMENTATION	1.7552540443524165E-7	TEST	1.2297268794921742E-7	DOCUMENTATION
// ----------------------------------------------------- Instance Variables	WITHOUT_CLASSIFICATION	0.999995391854711	WITHOUT_CLASSIFICATION	2.0844771807231852E-6	DESIGN	1.6523832770743166E-6	IMPLEMENTATION	7.293161841590751E-7	DEFECT	9.226589529550934E-8	DOCUMENTATION	4.9702751868894995E-8	TEST
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// --------------------------------------------------------- Public Methods	WITHOUT_CLASSIFICATION	0.9999532391580335	WITHOUT_CLASSIFICATION	4.5808741048008336E-5	DESIGN	3.3329376343357227E-7	IMPLEMENTATION	2.708210134139588E-7	DOCUMENTATION	1.992285028597775E-7	TEST	1.487576389398991E-7	DEFECT
// Compare the two maps for equality	WITHOUT_CLASSIFICATION	0.9999953298683258	WITHOUT_CLASSIFICATION	2.931181441113682E-6	DESIGN	1.5284699764844408E-6	IMPLEMENTATION	1.059126982660692E-7	DEFECT	8.612292466422493E-8	TEST	1.844463371921135E-8	DOCUMENTATION
// Simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.9999860113932969	WITHOUT_CLASSIFICATION	8.308095077351244E-6	TEST	4.5160543451160305E-6	DEFECT	1.0289547945456613E-6	DOCUMENTATION	1.0091322138627415E-7	IMPLEMENTATION	3.4589264781162594E-8	DESIGN
//Sybase fail if we don't do that, sigh...	WITHOUT_CLASSIFICATION	0.9992259743287035	WITHOUT_CLASSIFICATION	6.253451157486893E-4	DESIGN	9.903074901567242E-5	DEFECT	3.530243636272173E-5	TEST	1.0982254213120692E-5	DOCUMENTATION	3.365115956369916E-6	IMPLEMENTATION
// Handles things like: // a and b or c // a and ( b or c ) // not a and not b // not ( a and b ) // x between y and z            (overloaded "and") // x in ( a, b, c )             (overloaded brackets) // not not a // a is not null                (overloaded "not") // etc...... // and expressions like // foo = bar                    (maps to: foo.id = bar.id) // foo.Bar = 'foo'              (maps to: foo.bar = 'foo') // foo.Bar.Baz = 1.0            (maps to: foo.bar = bar.id and bar.baz = 1.0) // 1.0 = foo.Bar.Baz            (maps to: bar.baz = 1.0 and foo.Bar = bar.id) // foo.Bar.Baz = a.B.C          (maps to: bar.Baz = b.C and foo.Bar = bar.id and a.B = b.id) // foo.Bar.Baz + a.B.C          (maps to: bar.Baz + b.C and foo.Bar = bar.id and a.B = b.id) // ( foo.Bar.Baz + 1.0 ) < 2.0  (maps to: ( bar.Baz + 1.0 ) < 2.0 and foo.Bar = bar.id)	WITHOUT_CLASSIFICATION	0.8931310578263089	WITHOUT_CLASSIFICATION	0.10574774386724174	DESIGN	0.0011188829262739832	DEFECT	1.8286827103352511E-6	TEST	4.76832154638442E-7	DOCUMENTATION	9.865310414076846E-9	IMPLEMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999084819216753	WITHOUT_CLASSIFICATION	5.3528499444666356E-5	IMPLEMENTATION	3.7039473539528033E-5	DESIGN	7.956317649814811E-7	DOCUMENTATION	1.0011162353626613E-7	TEST	5.436195213340522E-8	DEFECT
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999084819216753	WITHOUT_CLASSIFICATION	5.3528499444666356E-5	IMPLEMENTATION	3.7039473539528033E-5	DESIGN	7.956317649814811E-7	DOCUMENTATION	1.0011162353626613E-7	TEST	5.436195213340522E-8	DEFECT
// try to "pretty print" it	WITHOUT_CLASSIFICATION	0.9999980354520092	WITHOUT_CLASSIFICATION	5.753336894011511E-7	DESIGN	5.580641595681305E-7	DEFECT	4.866475893481373E-7	IMPLEMENTATION	2.656627875292104E-7	DOCUMENTATION	7.883976494463343E-8	TEST
// otherwise, just dump it	WITHOUT_CLASSIFICATION	0.9998780144579409	WITHOUT_CLASSIFICATION	1.0400675101526192E-4	IMPLEMENTATION	1.3765944261769527E-5	DESIGN	3.3959139497547784E-6	TEST	5.513316023317814E-7	DEFECT	2.6560122985629415E-7	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9999868785519089	WITHOUT_CLASSIFICATION	1.264760082870381E-5	DESIGN	2.0348028196847606E-7	DEFECT	2.034264203550653E-7	TEST	6.164829538642916E-8	DOCUMENTATION	5.292264702504772E-9	IMPLEMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9999868785519089	WITHOUT_CLASSIFICATION	1.264760082870381E-5	DESIGN	2.0348028196847606E-7	DEFECT	2.034264203550653E-7	TEST	6.164829538642916E-8	DOCUMENTATION	5.292264702504772E-9	IMPLEMENTATION
// use default behavior	WITHOUT_CLASSIFICATION	0.9999923969894722	WITHOUT_CLASSIFICATION	7.5145540317554024E-6	DESIGN	3.495155958313111E-8	IMPLEMENTATION	2.9740658374998362E-8	DEFECT	1.7426284331884054E-8	DOCUMENTATION	6.337993952053032E-9	TEST
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9995214269925004	WITHOUT_CLASSIFICATION	3.0577494166385185E-4	DESIGN	1.0743213766228097E-4	DEFECT	6.189681824047782E-5	IMPLEMENTATION	2.591674855386491E-6	DOCUMENTATION	8.774350777265865E-7	TEST
// the MRU cache used to keep hard references to the most recently used query plans; // note : LRU here is a bit of a misnomer, it indicates that LRU entries are removed, the // actual kept entries are the MRU entries	WITHOUT_CLASSIFICATION	0.6498289175663304	WITHOUT_CLASSIFICATION	0.28305814184369754	DESIGN	0.06709243104400694	IMPLEMENTATION	8.687281257151668E-6	DEFECT	7.466082105088981E-6	TEST	4.356182602854771E-6	DOCUMENTATION
// we want to be able to just use the defaults, // if JNDI environment properties are not supplied // so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.9998934518768198	WITHOUT_CLASSIFICATION	1.0638541945405715E-4	DESIGN	1.3811632576005442E-7	TEST	1.329507227309068E-8	DOCUMENTATION	6.160885085280681E-9	IMPLEMENTATION	5.13144285849853E-9	DEFECT
// Clone //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999982035219979	WITHOUT_CLASSIFICATION	1.0384288947171219E-6	DESIGN	6.093563659059595E-7	DEFECT	5.257474218529827E-8	DOCUMENTATION	4.9083123962341196E-8	IMPLEMENTATION	4.703487536076507E-8	TEST
// Serialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999997457184225	WITHOUT_CLASSIFICATION	1.1047194180560725E-7	DEFECT	6.35637159847908E-8	IMPLEMENTATION	4.9480799637427455E-8	DESIGN	1.8177564705028895E-8	TEST	1.2587555317733257E-8	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999982548766576	WITHOUT_CLASSIFICATION	8.706364907160936E-7	DESIGN	7.759148033343772E-7	DEFECT	4.550219085386831E-8	IMPLEMENTATION	2.7950648542315922E-8	DOCUMENTATION	2.5119208946371603E-8	TEST
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999982548766576	WITHOUT_CLASSIFICATION	8.706364907160936E-7	DESIGN	7.759148033343772E-7	DEFECT	4.550219085386831E-8	IMPLEMENTATION	2.7950648542315922E-8	DOCUMENTATION	2.5119208946371603E-8	TEST
// Deserialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999994890449592	WITHOUT_CLASSIFICATION	3.5090191775311596E-7	IMPLEMENTATION	6.087547357360704E-8	TEST	5.2582641833324986E-8	DEFECT	3.37314156721093E-8	DESIGN	1.2863591962338228E-8	DOCUMENTATION
/* static methods only - hide constructor */	WITHOUT_CLASSIFICATION	0.9999825180604004	WITHOUT_CLASSIFICATION	1.605723126966171E-5	IMPLEMENTATION	1.0984696712814349E-6	DESIGN	1.368870541942468E-7	DEFECT	1.3526823966395033E-7	TEST	5.408336492467652E-8	DOCUMENTATION
/*&& !('_'==character)*/	WITHOUT_CLASSIFICATION	0.9999978783855823	WITHOUT_CLASSIFICATION	1.0479089216255862E-6	IMPLEMENTATION	6.403620228650569E-7	DESIGN	2.152668935160406E-7	TEST	1.3038703220076144E-7	DOCUMENTATION	8.768954746774856E-8	DEFECT
// returnign null!	WITHOUT_CLASSIFICATION	0.9999957962162881	WITHOUT_CLASSIFICATION	2.4748593720731013E-6	DESIGN	1.4282223382860105E-6	DEFECT	2.186136086323685E-7	IMPLEMENTATION	6.905964132818663E-8	DOCUMENTATION	1.3028751459669832E-8	TEST
// returnign null!	WITHOUT_CLASSIFICATION	0.9999957962162881	WITHOUT_CLASSIFICATION	2.4748593720731013E-6	DESIGN	1.4282223382860105E-6	DEFECT	2.186136086323685E-7	IMPLEMENTATION	6.905964132818663E-8	DOCUMENTATION	1.3028751459669832E-8	TEST
// includes last '.'	WITHOUT_CLASSIFICATION	0.999996210580404	WITHOUT_CLASSIFICATION	2.7455684095587488E-6	DESIGN	5.227083379378781E-7	DEFECT	3.519903537430078E-7	TEST	9.623857793408809E-8	DOCUMENTATION	7.291391680259264E-8	IMPLEMENTATION
// +1 to include the following '.'	WITHOUT_CLASSIFICATION	0.9998511369272823	WITHOUT_CLASSIFICATION	1.1611616414064067E-4	DEFECT	1.8842462935544316E-5	DESIGN	1.11339326515078E-5	IMPLEMENTATION	2.0780418773497844E-6	DOCUMENTATION	6.924711125080287E-7	TEST
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9998835239141677	WITHOUT_CLASSIFICATION	1.158493421184911E-4	DESIGN	5.284841870283754E-7	TEST	5.741752344604922E-8	DEFECT	3.799627221775217E-8	IMPLEMENTATION	2.845731206943062E-9	DOCUMENTATION
// first time we find match!	WITHOUT_CLASSIFICATION	0.9999949934779583	WITHOUT_CLASSIFICATION	3.1598415976458137E-6	IMPLEMENTATION	1.0264209060213434E-6	DESIGN	3.9282143618319455E-7	DOCUMENTATION	3.8937386773494243E-7	TEST	3.8064234080845805E-8	DEFECT
// entityNames may now include slashes for the representations //classname may be an inner class	WITHOUT_CLASSIFICATION	0.999971742207701	WITHOUT_CLASSIFICATION	2.8128156331567E-5	DESIGN	8.189327099821808E-8	IMPLEMENTATION	1.9132000124050548E-8	DEFECT	1.72046173023856E-8	TEST	1.1406078986267325E-8	DOCUMENTATION
// wrapped iterators	WITHOUT_CLASSIFICATION	0.99999903644862	WITHOUT_CLASSIFICATION	6.744546345988134E-7	DESIGN	1.3319507860729304E-7	IMPLEMENTATION	8.410424334555682E-8	TEST	6.003865415219928E-8	DEFECT	1.1758769185381967E-8	DOCUMENTATION
// index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.9999987424572264	WITHOUT_CLASSIFICATION	5.592351609101804E-7	DEFECT	5.082621837204742E-7	DESIGN	1.255865430518089E-7	TEST	3.604722579277789E-8	IMPLEMENTATION	2.8411660087285972E-8	DOCUMENTATION
// the current iterator	WITHOUT_CLASSIFICATION	0.9999981519567827	WITHOUT_CLASSIFICATION	9.601116383525036E-7	DESIGN	5.047762414372897E-7	IMPLEMENTATION	1.9921963506909127E-7	TEST	1.4141115785314904E-7	DOCUMENTATION	4.252454467224013E-8	DEFECT
// the last used iterator	WITHOUT_CLASSIFICATION	0.9999978104439609	WITHOUT_CLASSIFICATION	1.9916176490279297E-6	DESIGN	1.3789764746795913E-7	TEST	4.927713783301806E-8	IMPLEMENTATION	5.443536688382066E-9	DOCUMENTATION	5.320068133095674E-9	DEFECT
//it was a boolean expression	WITHOUT_CLASSIFICATION	0.9999898717720821	WITHOUT_CLASSIFICATION	6.298381811053335E-6	DESIGN	3.5682810614219147E-6	DEFECT	2.1216316019752686E-7	TEST	4.476576148263359E-8	DOCUMENTATION	4.6361239156511025E-9	IMPLEMENTATION
/*public static Object[] clone(Class elementClass, Object[] array) {	WITHOUT_CLASSIFICATION	0.9999687836084605	WITHOUT_CLASSIFICATION	3.072848630567042E-5	DESIGN	4.090380484510987E-7	DEFECT	6.411571210562757E-8	DOCUMENTATION	1.0893690809214453E-8	IMPLEMENTATION	3.857782492139436E-9	TEST
// call this before any Iterator method to make sure that the current Iterator // is not exhausted	WITHOUT_CLASSIFICATION	0.9999409582386286	WITHOUT_CLASSIFICATION	2.8504189447289413E-5	DESIGN	1.2730656670252256E-5	IMPLEMENTATION	9.313011027627506E-6	TEST	8.360187448957365E-6	DEFECT	1.3371677727068226E-7	DOCUMENTATION
//doable if needed	WITHOUT_CLASSIFICATION	0.9490041150570713	WITHOUT_CLASSIFICATION	0.04335110284427127	IMPLEMENTATION	0.007290288079443963	DESIGN	2.53175666197923E-4	TEST	8.109489556554398E-5	DOCUMENTATION	2.022345745003951E-5	DEFECT
// set last used iterator here, in case the user calls remove // before calling hasNext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.9999698887245593	WITHOUT_CLASSIFICATION	2.803815255103722E-5	DESIGN	8.77074940056538E-7	DEFECT	7.246436234051249E-7	TEST	4.6926826291627224E-7	IMPLEMENTATION	2.136063376125536E-9	DOCUMENTATION
// peek ahead	WITHOUT_CLASSIFICATION	0.9999809734454657	WITHOUT_CLASSIFICATION	1.660327773843432E-5	IMPLEMENTATION	1.423398973262854E-6	DESIGN	4.804399625570509E-7	DOCUMENTATION	2.632843514007759E-7	TEST	2.561535087516943E-7	DEFECT
// if we reach the end of the string w/o finding the // matching end, that is an exception	WITHOUT_CLASSIFICATION	0.9999997723053463	WITHOUT_CLASSIFICATION	1.9834008656780336E-7	DEFECT	2.585021867047109E-8	TEST	2.4791154823081674E-9	DESIGN	7.104855704491887E-10	DOCUMENTATION	3.1474741780448813E-10	IMPLEMENTATION
// we have a placeholder, spin forward till we find the end	WITHOUT_CLASSIFICATION	0.9990155608180779	WITHOUT_CLASSIFICATION	7.587484499725466E-4	IMPLEMENTATION	2.1986238182080672E-4	DESIGN	2.7873044466195815E-6	DOCUMENTATION	2.7502050285716227E-6	DEFECT	2.908406536190236E-7	TEST
// make sure spinning forward did not put us past the end of the buffer...	WITHOUT_CLASSIFICATION	0.9999489467809292	WITHOUT_CLASSIFICATION	2.9785170513594282E-5	DESIGN	1.2160518439669045E-5	IMPLEMENTATION	6.713977518127652E-6	DEFECT	2.2752515688848925E-6	TEST	1.1830103069831601E-7	DOCUMENTATION
// First, try to locate this resource through the current // context classloader.	WITHOUT_CLASSIFICATION	0.9999994801090842	WITHOUT_CLASSIFICATION	3.2647577571017145E-7	DESIGN	7.965586725401269E-8	IMPLEMENTATION	7.884023329316842E-8	DOCUMENTATION	3.0602172898922365E-8	TEST	4.316866702479036E-9	DEFECT
// Next, try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.9999987475424355	WITHOUT_CLASSIFICATION	1.1567113474838069E-6	DESIGN	5.762703719758839E-8	TEST	1.6942958645788968E-8	IMPLEMENTATION	1.6827976287455357E-8	DOCUMENTATION	4.348244933056282E-9	DEFECT
// Next, try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.9999997833192512	WITHOUT_CLASSIFICATION	9.495549653233885E-8	DESIGN	4.097521552104408E-8	IMPLEMENTATION	3.7758894534917976E-8	TEST	2.8606963975152157E-8	DEFECT	1.4384178253085463E-8	DOCUMENTATION
// Anywhere else we should look?	WITHOUT_CLASSIFICATION	0.9991696976180039	WITHOUT_CLASSIFICATION	6.984084448437107E-4	DESIGN	1.0996033244925578E-4	DEFECT	1.9866642260889528E-5	IMPLEMENTATION	1.0955330448443277E-6	DOCUMENTATION	9.714293975557444E-7	TEST
// would need an IdentitySet for this!	WITHOUT_CLASSIFICATION	0.9913034628934454	WITHOUT_CLASSIFICATION	0.0083715290530001	DESIGN	2.318208531567104E-4	TEST	6.13467563247742E-5	IMPLEMENTATION	2.261870004895306E-5	DOCUMENTATION	9.221744024094202E-6	DEFECT
//Arrays.asList doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.9999914566170005	WITHOUT_CLASSIFICATION	4.111647394090493E-6	IMPLEMENTATION	2.657540094827442E-6	TEST	9.45066018812781E-7	DESIGN	4.903477296125494E-7	DOCUMENTATION	3.3878176207976393E-7	DEFECT
//faster?	WITHOUT_CLASSIFICATION	0.9984253118608644	WITHOUT_CLASSIFICATION	0.0015447298241224865	DESIGN	1.5206095191778506E-5	IMPLEMENTATION	1.1020982648461764E-5	TEST	2.169226106448521E-6	DOCUMENTATION	1.5620110664301421E-6	DEFECT
// the name of a class	WITHOUT_CLASSIFICATION	0.9999969697324551	WITHOUT_CLASSIFICATION	2.9891697160186635E-6	DESIGN	1.8976129340053115E-8	DOCUMENTATION	1.683037360869596E-8	TEST	3.031520895431094E-9	IMPLEMENTATION	2.2598048515281193E-9	DEFECT
// Its the listener class name	WITHOUT_CLASSIFICATION	0.9999987986186925	WITHOUT_CLASSIFICATION	1.0655659953021424E-6	DESIGN	9.926720759819192E-8	IMPLEMENTATION	2.9084637741951772E-8	TEST	6.152241060790371E-9	DOCUMENTATION	1.3112258815245535E-9	DEFECT
//allow 9,8,7,6,5,4,3,2,1	WITHOUT_CLASSIFICATION	0.9998871248105267	WITHOUT_CLASSIFICATION	6.87720050212446E-5	DEFECT	2.311112931441722E-5	IMPLEMENTATION	1.484658908635546E-5	DESIGN	3.4490179390902817E-6	TEST	2.6964481122131696E-6	DOCUMENTATION
// default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.999984703199359	WITHOUT_CLASSIFICATION	1.1196985422270795E-5	IMPLEMENTATION	2.9349517318491075E-6	DESIGN	1.0555666699113876E-6	DOCUMENTATION	5.551311643547539E-8	DEFECT	5.378370053462748E-8	TEST
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999649291754644	WITHOUT_CLASSIFICATION	2.6252645979111076E-5	IMPLEMENTATION	7.998080372402849E-6	DESIGN	5.627338951489466E-7	DEFECT	2.0548722249561534E-7	DOCUMENTATION	5.187706646378636E-8	TEST
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9998478330911945	WITHOUT_CLASSIFICATION	1.3207855234418937E-4	DESIGN	1.8513592790654797E-5	IMPLEMENTATION	6.590813657322926E-7	DOCUMENTATION	4.61449476545164E-7	TEST	4.542328285000501E-7	DEFECT
// first, lets determine whether to apply cglib or javassist based instrumentation...	WITHOUT_CLASSIFICATION	0.9991497735512224	WITHOUT_CLASSIFICATION	8.45579007600575E-4	DESIGN	1.5926324902937588E-6	DEFECT	1.3524327374784917E-6	TEST	1.1733806712181296E-6	DOCUMENTATION	5.289952781389516E-7	IMPLEMENTATION
// Make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.9999993894877269	WITHOUT_CLASSIFICATION	5.547186639943106E-7	DESIGN	2.983726471063729E-8	IMPLEMENTATION	2.1282951972938426E-8	DEFECT	2.641274545087842E-9	DOCUMENTATION	2.0321178477638028E-9	TEST
//entirely optional!!	WITHOUT_CLASSIFICATION	0.9997834825121692	WITHOUT_CLASSIFICATION	9.292739448506518E-5	DEFECT	6.930907605667967E-5	IMPLEMENTATION	3.4880546391392585E-5	DESIGN	1.7793513507005818E-5	DOCUMENTATION	1.6069573906781158E-6	TEST
// Its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.9998989815057273	WITHOUT_CLASSIFICATION	9.153151119858303E-5	DESIGN	8.926124069188765E-6	IMPLEMENTATION	2.752346536643206E-7	TEST	2.308148354832115E-7	DOCUMENTATION	5.4809515700582274E-8	DEFECT
//context.unbind(boundName);	WITHOUT_CLASSIFICATION	0.9995336503222073	WITHOUT_CLASSIFICATION	2.804496896591044E-4	DESIGN	8.461065507764582E-5	IMPLEMENTATION	4.21281366345772E-5	DEFECT	3.7066060863880024E-5	DOCUMENTATION	2.2095135557501877E-5	TEST
//readResolveObject	WITHOUT_CLASSIFICATION	0.9995026641922705	WITHOUT_CLASSIFICATION	4.807325256176659E-4	DESIGN	5.1126960637163095E-6	IMPLEMENTATION	4.349101688123751E-6	DEFECT	4.190436583464655E-6	DOCUMENTATION	2.95104777655531E-6	TEST
//cfg.setProperty("hibernate.show_sql", "true");	WITHOUT_CLASSIFICATION	0.9999959174352798	WITHOUT_CLASSIFICATION	2.1620980063075015E-6	DEFECT	1.6806764443235828E-6	DESIGN	1.0544915419641487E-7	IMPLEMENTATION	9.94318018304551E-8	TEST	3.490931347358073E-8	DOCUMENTATION
// Defensive, convenience methods	WITHOUT_CLASSIFICATION	0.9999918827574225	WITHOUT_CLASSIFICATION	5.797471186664008E-6	IMPLEMENTATION	1.731639866488726E-6	DESIGN	4.1502847763859467E-7	DOCUMENTATION	1.684113639127637E-7	TEST	4.691683044963782E-9	DEFECT
// Create the SessionFactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.9999942556685237	WITHOUT_CLASSIFICATION	5.583211456168815E-6	DESIGN	6.628565579107596E-8	DEFECT	4.903084425158117E-8	TEST	2.8402651870437507E-8	IMPLEMENTATION	1.740086812767775E-8	DOCUMENTATION
// Make sure you log the exception, as it might be swallowed	WITHOUT_CLASSIFICATION	0.9999983097187951	WITHOUT_CLASSIFICATION	1.4976898361873944E-6	DEFECT	1.0608261294987497E-7	IMPLEMENTATION	7.680451297936632E-8	DESIGN	8.045052352411279E-9	TEST	1.6591903689018242E-9	DOCUMENTATION
// Begin unit of work	WITHOUT_CLASSIFICATION	0.9978006213881006	WITHOUT_CLASSIFICATION	0.0019647859743337015	DEFECT	1.578506325199577E-4	DESIGN	3.117654505566604E-5	DOCUMENTATION	2.4865823542250873E-5	TEST	2.0699636447842348E-5	IMPLEMENTATION
// Write HTML header	WITHOUT_CLASSIFICATION	0.9999462877020271	WITHOUT_CLASSIFICATION	3.1169576407851306E-5	IMPLEMENTATION	1.6198385856361676E-5	DESIGN	4.317018468090464E-6	DEFECT	1.3313766236227751E-6	TEST	6.959406170306687E-7	DOCUMENTATION
// Handle actions	WITHOUT_CLASSIFICATION	0.9999503288131937	WITHOUT_CLASSIFICATION	4.573710567234629E-5	DESIGN	3.5536937416147194E-6	IMPLEMENTATION	1.8521028762568223E-7	DOCUMENTATION	1.2532415273585478E-7	DEFECT	6.985295201959919E-8	TEST
// Print page	WITHOUT_CLASSIFICATION	0.9999870518468292	WITHOUT_CLASSIFICATION	8.876407635129884E-6	IMPLEMENTATION	1.7339609433451464E-6	DESIGN	1.0147237281408373E-6	DEFECT	7.892499402025706E-7	TEST	5.338109241148223E-7	DOCUMENTATION
// Write HTML footer	WITHOUT_CLASSIFICATION	0.9999945638748504	WITHOUT_CLASSIFICATION	2.7995033480624686E-6	DEFECT	2.0282346083595253E-6	DESIGN	4.253207534379153E-7	IMPLEMENTATION	1.213071187767907E-7	TEST	6.17593209439843E-8	DOCUMENTATION
// End unit of work	WITHOUT_CLASSIFICATION	0.9950831394760231	WITHOUT_CLASSIFICATION	0.004686730547936843	DEFECT	1.849768890349551E-4	DESIGN	1.9048742473525046E-5	TEST	1.7248791800832147E-5	IMPLEMENTATION	8.855552730692749E-6	DOCUMENTATION
// Start the session to be used for this request	WITHOUT_CLASSIFICATION	0.9999813670615069	WITHOUT_CLASSIFICATION	1.7245927248886206E-5	DESIGN	7.612995023061414E-7	TEST	4.7619026858760083E-7	DEFECT	1.3154152970681825E-7	IMPLEMENTATION	1.7979943598897035E-8	DOCUMENTATION
// make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.9999963740657721	WITHOUT_CLASSIFICATION	2.9201689317047056E-6	DESIGN	3.3732281672328557E-7	TEST	1.8549784464043915E-7	DEFECT	1.1177789718809827E-7	DOCUMENTATION	7.116673753055692E-8	IMPLEMENTATION
// pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.9999993468995348	WITHOUT_CLASSIFICATION	4.797659116870033E-7	IMPLEMENTATION	9.41847283043688E-8	TEST	4.828089379635488E-8	DEFECT	1.57205192827966E-8	DOCUMENTATION	1.5148412023206814E-8	DESIGN
// remove session from "current context"	WITHOUT_CLASSIFICATION	0.9997572463261593	WITHOUT_CLASSIFICATION	2.022897167435836E-4	DESIGN	3.7626011154717E-5	DEFECT	1.5047606657610715E-6	DOCUMENTATION	9.459296825641688E-7	IMPLEMENTATION	3.8725559419283536E-7	TEST
// Eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.9998904223736826	WITHOUT_CLASSIFICATION	9.242837257790233E-5	IMPLEMENTATION	1.4975098053518762E-5	DESIGN	1.1678518237743322E-6	TEST	6.314892820016925E-7	DEFECT	3.748145801171996E-7	DOCUMENTATION
// If we want to handle it bidirectional and detached, we also need to load this // collection with an eager outer-join fetch, this time with Criteria and not HQL:	WITHOUT_CLASSIFICATION	0.999859562147903	WITHOUT_CLASSIFICATION	9.616022433933517E-5	DESIGN	3.2900270752260727E-5	IMPLEMENTATION	6.481933775384243E-6	TEST	4.673929266028672E-6	DEFECT	2.2149396396580238E-7	DOCUMENTATION
/*        Event anEvent = (Event) session                .createCriteria(Event.class).setFetchMode("participants", FetchMode.JOIN)                .add( Expression.eq("id", eventId) )                .uniqueResult(); // Eager fetch the colleciton so we can use it detached        */	WITHOUT_CLASSIFICATION	0.9999999990583319	WITHOUT_CLASSIFICATION	4.37290730578972E-10	DESIGN	2.554755151730857E-10	IMPLEMENTATION	1.5195481412801796E-10	TEST	8.642941092054157E-11	DEFECT	1.0517572395772248E-11	DOCUMENTATION
// End of first unit of work	WITHOUT_CLASSIFICATION	0.9996408784850873	WITHOUT_CLASSIFICATION	3.0720133011188347E-4	DEFECT	2.1681441361808207E-5	DESIGN	2.0093103174860693E-5	TEST	7.652123827109127E-6	IMPLEMENTATION	2.4935164368522666E-6	DOCUMENTATION
// or bidirectional safety method, setting both sides: aPerson.addToEvent(anEvent);	WITHOUT_CLASSIFICATION	0.9993884162246124	WITHOUT_CLASSIFICATION	5.907285087520635E-4	IMPLEMENTATION	1.771743659405464E-5	DESIGN	1.9711312634690945E-6	DEFECT	8.754683030801109E-7	TEST	2.912304749484127E-7	DOCUMENTATION
// Begin second unit of work	WITHOUT_CLASSIFICATION	0.9972987972922103	WITHOUT_CLASSIFICATION	0.001869121658751732	DEFECT	7.193149807505518E-4	DESIGN	6.089169763637537E-5	DOCUMENTATION	3.511781722481515E-5	IMPLEMENTATION	1.675655342612343E-5	TEST
// Reattachment of aPerson	WITHOUT_CLASSIFICATION	0.9999927360092631	WITHOUT_CLASSIFICATION	4.330669003593917E-6	IMPLEMENTATION	1.4099801046743721E-6	DEFECT	6.017922783235442E-7	DOCUMENTATION	4.680481945979911E-7	DESIGN	4.535011556706411E-7	TEST
// The getEmailAddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.9996107794590798	WITHOUT_CLASSIFICATION	3.8063255746596304E-4	DEFECT	4.716371565688964E-6	DESIGN	2.831719770393482E-6	IMPLEMENTATION	9.445284456868996E-7	TEST	9.536367250689144E-8	DOCUMENTATION
// We need our tm, so get it now and avoid doing other work // if there is a problem	WITHOUT_CLASSIFICATION	0.9999385529506108	WITHOUT_CLASSIFICATION	4.5844058905941116E-5	DEFECT	1.05821555342418E-5	TEST	4.910940493849459E-6	DESIGN	7.947541768238286E-8	IMPLEMENTATION	3.041903741194108E-8	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999967482778765	WITHOUT_CLASSIFICATION	1.951787460842721E-6	IMPLEMENTATION	1.1292280247876364E-6	DEFECT	9.895913448509896E-8	DESIGN	4.9222542006737455E-8	TEST	2.2524961450989387E-8	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999967482778765	WITHOUT_CLASSIFICATION	1.951787460842721E-6	IMPLEMENTATION	1.1292280247876364E-6	DEFECT	9.895913448509896E-8	DESIGN	4.9222542006737455E-8	TEST	2.2524961450989387E-8	DOCUMENTATION
// JBC put a version in the node when it created as part of // some internal operation. We are always newer, but if // the JBC version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.9999978657377179	WITHOUT_CLASSIFICATION	1.6997308418771523E-6	TEST	3.6001680866611166E-7	DESIGN	4.500185090295578E-8	DEFECT	2.366935816673166E-8	IMPLEMENTATION	5.843422402923469E-9	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for properties with //                     hibernate-specific overrides to detect and warn about conflicting //                     declarations	WITHOUT_CLASSIFICATION	0.9868520645579074	WITHOUT_CLASSIFICATION	0.013141817825664618	DESIGN	3.7280702761560545E-6	TEST	1.700124073335328E-6	DOCUMENTATION	5.757904321070952E-7	IMPLEMENTATION	1.1363164624976326E-7	DEFECT
// Not null if the Isolation level has been specified in the configuration file. // Otherwise, it is left to the Driver's default value.	WITHOUT_CLASSIFICATION	0.9999988849474665	WITHOUT_CLASSIFICATION	6.032070286212581E-7	IMPLEMENTATION	4.756307262804947E-7	DESIGN	2.4281282584565132E-8	TEST	9.920804852040214E-9	DOCUMENTATION	2.0126912038425397E-9	DEFECT
// Configured outside of Hibernate (i.e. Servlet container, or Java Bean Container // already has Proxool pools running, and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.8748617747571824	WITHOUT_CLASSIFICATION	0.12513731637126543	DESIGN	5.861241934516987E-7	TEST	2.2331264471282544E-7	DEFECT	9.822955505133818E-8	DOCUMENTATION	1.20515898098563E-9	IMPLEMENTATION
// If you're closing down the ConnectionProvider chances are an // is not a real big deal, just warn	WITHOUT_CLASSIFICATION	0.9999900567983052	WITHOUT_CLASSIFICATION	9.874209018013171E-6	DEFECT	3.272298866871325E-8	TEST	3.254859293736557E-8	IMPLEMENTATION	3.056312633834291E-9	DESIGN	6.647826615407885E-10	DOCUMENTATION
// (AS is always optional, for consistency with SQL/OQL)	WITHOUT_CLASSIFICATION	0.999730137341544	WITHOUT_CLASSIFICATION	1.405066540416981E-4	DESIGN	1.2157662703280929E-4	IMPLEMENTATION	5.45668156360219E-6	TEST	1.4162817901979183E-6	DEFECT	9.064140277403234E-7	DOCUMENTATION
// process the "new" HQL style where aliases are assigned // _after_ the class name or path expression ie. using // the AS construction	WITHOUT_CLASSIFICATION	0.9999969792902613	WITHOUT_CLASSIFICATION	3.0188861139854436E-6	DESIGN	1.1549092091319268E-9	DEFECT	4.973636193227392E-10	DOCUMENTATION	1.683173336011931E-10	TEST	3.0344230243843232E-12	IMPLEMENTATION
// the loaded owner will be set to null after the collection is removed, // so capture its value as the affected owner so it is accessible to // both pre- and post- events	WITHOUT_CLASSIFICATION	0.9999999616139841	WITHOUT_CLASSIFICATION	3.732183282860845E-8	DESIGN	8.579820207074278E-10	IMPLEMENTATION	1.8714383734714395E-10	DEFECT	1.7059580203685268E-11	TEST	1.9976985288461663E-12	DOCUMENTATION
// is a primitive type // invokespecial	WITHOUT_CLASSIFICATION	0.9999999921420587	WITHOUT_CLASSIFICATION	2.022335098413365E-9	DEFECT	1.8908483483258487E-9	DESIGN	1.854835681379848E-9	DOCUMENTATION	1.3007517097236206E-9	TEST	7.891705245261191E-10	IMPLEMENTATION
// array of primitive type // do nothing	WITHOUT_CLASSIFICATION	0.9999999874760777	WITHOUT_CLASSIFICATION	6.5344085803292955E-9	DESIGN	2.394531290612971E-9	DOCUMENTATION	2.0653618380412606E-9	DEFECT	9.883233538368835E-10	TEST	5.412971991788344E-10	IMPLEMENTATION
// handle a path expression or class name that // appears at the start, in the "new" HQL // style or an alias that appears at the start // in the "old" HQL style	WITHOUT_CLASSIFICATION	0.9998198863362959	WITHOUT_CLASSIFICATION	1.7897458193754788E-4	DESIGN	1.1211183139709844E-6	DEFECT	8.76342342700626E-9	TEST	5.122430972615835E-9	DOCUMENTATION	4.077598311829391E-9	IMPLEMENTATION
//handle <=, >=, !=, is not, not between, not in	WITHOUT_CLASSIFICATION	0.9995202698212978	WITHOUT_CLASSIFICATION	3.981266143400346E-4	DESIGN	6.182585822057653E-5	DEFECT	1.4391188809040515E-5	TEST	2.8326865223075526E-6	IMPLEMENTATION	2.5538308099718063E-6	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999991755901713	WITHOUT_CLASSIFICATION	7.761873452074663E-7	DEFECT	4.3222782718952856E-8	IMPLEMENTATION	4.486690374128185E-9	TEST	3.3333933560525105E-10	DOCUMENTATION	1.79671086472724E-10	DESIGN
// transfer an explicitly defined entity name // handle the lazy attribute	WITHOUT_CLASSIFICATION	0.9999995966896917	WITHOUT_CLASSIFICATION	3.2698663827987745E-7	DESIGN	5.772778752081772E-8	IMPLEMENTATION	1.275182541128141E-8	TEST	4.923950633711108E-9	DOCUMENTATION	9.2010645974829E-10	DEFECT
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999817411428362	WITHOUT_CLASSIFICATION	1.2491797667060524E-5	DESIGN	3.020884847996974E-6	IMPLEMENTATION	1.4277267790544729E-6	DEFECT	8.846803517384909E-7	TEST	4.337675179610368E-7	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999817411428362	WITHOUT_CLASSIFICATION	1.2491797667060524E-5	DESIGN	3.020884847996974E-6	IMPLEMENTATION	1.4277267790544729E-6	DEFECT	8.846803517384909E-7	TEST	4.337675179610368E-7	DOCUMENTATION
// get meta's from // <joined-subclass>	WITHOUT_CLASSIFICATION	0.9999959546702099	WITHOUT_CLASSIFICATION	3.98827354396525E-6	DESIGN	5.289954903989983E-8	DEFECT	3.256266629919311E-9	TEST	8.368328242309516E-10	DOCUMENTATION	6.359775211777588E-11	IMPLEMENTATION
// parameters on the property mapping should // override parameters in the typedef	WITHOUT_CLASSIFICATION	0.9996489050014061	WITHOUT_CLASSIFICATION	3.444012103068605E-4	DESIGN	5.916951922976515E-6	DEFECT	5.283102247487214E-7	IMPLEMENTATION	2.145260255654595E-7	TEST	3.4000113705090534E-8	DOCUMENTATION
//fetch="join" overrides default laziness //fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.999999155443379	WITHOUT_CLASSIFICATION	7.492946221053474E-7	DESIGN	3.949645668418478E-8	IMPLEMENTATION	2.5259679628793313E-8	DEFECT	1.889015841840922E-8	TEST	1.1615704265130616E-8	DOCUMENTATION
//NOTE SPECIAL CASE: // default to join and non-lazy for the "second join" // of the many-to-many	WITHOUT_CLASSIFICATION	0.9999973748400415	WITHOUT_CLASSIFICATION	2.2072567154536148E-6	DESIGN	2.7260534077803093E-7	IMPLEMENTATION	8.967634838258176E-8	DEFECT	4.947056862392729E-8	DOCUMENTATION	6.150985252513492E-9	TEST
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999961157927674	WITHOUT_CLASSIFICATION	2.3901887322967696E-6	DESIGN	5.546116383003476E-7	DOCUMENTATION	5.070917777351935E-7	TEST	2.832141336301771E-7	IMPLEMENTATION	1.491009507165408E-7	DEFECT
// state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999943919054608	WITHOUT_CLASSIFICATION	3.197735457979492E-6	IMPLEMENTATION	1.0307938188090943E-6	DEFECT	7.006936362964651E-7	DESIGN	4.2217735780621875E-7	TEST	2.5669426834849225E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
//element //index -> id	WITHOUT_CLASSIFICATION	0.999977866453833	WITHOUT_CLASSIFICATION	1.3899217371149289E-5	IMPLEMENTATION	2.6084403484861987E-6	DEFECT	2.3186385525986835E-6	DOCUMENTATION	2.1310062638491166E-6	DESIGN	1.1762436310118441E-6	TEST
// note that it might be better to iterate the snapshot but this is safe, // assuming the user implements equals() properly, as required by the Set // contract!	WITHOUT_CLASSIFICATION	0.7777203496143605	WITHOUT_CLASSIFICATION	0.128244065128459	DESIGN	0.08460793780543562	DEFECT	0.00843323312787763	IMPLEMENTATION	9.290570763317031E-4	TEST	6.535724753559141E-5	DOCUMENTATION
// collections detect changes made via their public interface and mark // themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.9999980376290539	WITHOUT_CLASSIFICATION	1.6971475616808E-6	DESIGN	2.2761289072457307E-7	IMPLEMENTATION	2.2657918688458977E-8	DOCUMENTATION	1.081881562825695E-8	DEFECT	4.1337593308572334E-9	TEST
// essentially, if the real session is closed allow any // method call to pass through since the real session // will complain by throwing an appropriate exception; // NOTE that allowing close() above has the same basic effect, //   but we capture that there simply to perform the unbind...	WITHOUT_CLASSIFICATION	0.9999956501591016	WITHOUT_CLASSIFICATION	2.944995970198179E-6	DESIGN	9.025027436545517E-7	IMPLEMENTATION	4.1387354580265227E-7	TEST	8.725316732546815E-8	DEFECT	1.2154713638217601E-9	DOCUMENTATION
// The default SQLExceptionConverter for all dialects is based on SQLState // since SQLErrorCode is extremely vendor-specific.  Specific Dialects // may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.9999922241722593	WITHOUT_CLASSIFICATION	7.758082468361656E-6	DESIGN	1.1031743808945255E-8	DEFECT	4.116161149303274E-9	IMPLEMENTATION	1.3843791604073847E-9	TEST	1.2129882047972425E-9	DOCUMENTATION
//only necessary for postgre < 7.4 //http://anoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.999998166157381	WITHOUT_CLASSIFICATION	8.616199285241815E-7	DEFECT	4.206283631773771E-7	IMPLEMENTATION	3.117247133343096E-7	DOCUMENTATION	1.4135274214352457E-7	TEST	9.851687171043557E-8	DESIGN
// select topic, syntax from information_schema.help // where section like 'Function%' order by section, topic // // see also ->  http://www.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.9998801221774063	WITHOUT_CLASSIFICATION	1.1885098812433412E-4	DEFECT	8.241748738455596E-7	DESIGN	1.1206618608094107E-7	DOCUMENTATION	6.206551391696885E-8	IMPLEMENTATION	2.8527895532444876E-8	TEST
// registerColumnType(Types.VARBINARY, "CHARACTER($l)"); // registerColumnType(Types.BLOB, "CHARACTER($l)" );  // For use prior to CP 11.0 // registerColumnType(Types.CLOB, "CHARACTER($l)" );	WITHOUT_CLASSIFICATION	0.9999771063539769	WITHOUT_CLASSIFICATION	1.6852493040084183E-5	IMPLEMENTATION	5.285142491137564E-6	DESIGN	4.0908769315231115E-7	DEFECT	2.0687345512287755E-7	TEST	1.4004934353446404E-7	DOCUMENTATION
//the BLOB type requires a size arguement - this defaults to //bytes - no arg defaults to 1 whole byte! //other argument mods include K - kilobyte, M - megabyte, G - gigabyte. //refer to the PBdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.9859049706552766	WITHOUT_CLASSIFICATION	0.014055563038801025	DESIGN	2.5110376759131917E-5	DEFECT	1.1175213527132364E-5	DOCUMENTATION	2.234383271276613E-6	TEST	9.463323648549761E-7	IMPLEMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9950089631079941	WITHOUT_CLASSIFICATION	0.004980369499778227	DESIGN	9.804386580316501E-6	DEFECT	6.340744192884265E-7	TEST	1.3815034884373984E-7	IMPLEMENTATION	9.078087919751574E-8	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.8708054325050085	WITHOUT_CLASSIFICATION	0.12917543665745043	DESIGN	1.1004041839604057E-5	DEFECT	6.462871342581868E-6	TEST	1.636269675580538E-6	IMPLEMENTATION	2.765468326301463E-8	DOCUMENTATION
// add the comment // nest the main query in an outer select // add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9999149188225794	WITHOUT_CLASSIFICATION	6.144779220252509E-5	DESIGN	2.259318101496605E-5	TEST	6.404903135900884E-7	DOCUMENTATION	3.677462614240442E-7	IMPLEMENTATION	3.196762801346995E-8	DEFECT
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// Note: For object <-> SQL datatype mappings see: //	WITHOUT_CLASSIFICATION	0.9998259899874054	WITHOUT_CLASSIFICATION	1.6432390128305572E-4	DESIGN	8.49666787568936E-6	DEFECT	8.558850054696543E-7	IMPLEMENTATION	2.1864995725728675E-7	TEST	1.149084732049563E-7	DOCUMENTATION
// TRIM(end_keyword string-expression-1 FROM string-expression-2) // use Hibernate implementation "From" is one of the parameters they pass in position ?3 //registerFunction( "trim", new SQLFunctionTemplate(Hibernate.STRING, "trim(?1 ?2 from ?3)") );	WITHOUT_CLASSIFICATION	0.9999832499176362	WITHOUT_CLASSIFICATION	1.652829610183498E-5	DESIGN	1.5783486070135014E-7	IMPLEMENTATION	6.302122589478814E-8	DEFECT	6.772920611598478E-10	DOCUMENTATION	2.528832416208079E-10	TEST
// Whether this dialect has an Identity clause added to the data type or a completely seperate identity // data type	WITHOUT_CLASSIFICATION	0.9999998854748111	WITHOUT_CLASSIFICATION	1.141479855886064E-7	DESIGN	1.9704335289555213E-10	TEST	8.857131234000165E-11	IMPLEMENTATION	6.039349427428533E-11	DOCUMENTATION	3.119515617954672E-11	DEFECT
// According to both the ANSI-SQL and JPA specs, trim takes a variable number of parameters between 1 and 4. // at least one paramer (trimSource) is required.  From the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If <trim specification> is omitted, BOTH is assumed. // If <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.999999915310595	WITHOUT_CLASSIFICATION	4.365393903545279E-8	DEFECT	1.441118523944143E-8	DESIGN	1.3664032175759515E-8	DOCUMENTATION	8.464179046671224E-9	TEST	4.496069443970834E-9	IMPLEMENTATION
/////////////////////////////////////////////////////////////////////// // Prepare persisters and link them up with their cache // region/access-strategy	WITHOUT_CLASSIFICATION	0.9999998684271031	WITHOUT_CLASSIFICATION	1.2105425808797028E-7	DESIGN	4.158154349722508E-9	DEFECT	2.570855924790925E-9	TEST	2.205255559669919E-9	DOCUMENTATION	1.5843729789502592E-9	IMPLEMENTATION
//Named Queries:	WITHOUT_CLASSIFICATION	0.999894647349358	WITHOUT_CLASSIFICATION	7.4142700688944E-5	DESIGN	1.9516648628600538E-5	IMPLEMENTATION	8.865175142943702E-6	TEST	1.8668187386786801E-6	DEFECT	9.613074427532602E-7	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9986692477861072	WITHOUT_CLASSIFICATION	7.833288939582044E-4	DEFECT	3.2310020882031173E-4	TEST	2.217680367466773E-4	DESIGN	1.6570456609299617E-6	IMPLEMENTATION	8.980287066008954E-7	DOCUMENTATION
// does not handle arrays (thats ok, cos they can't be lazy) // or newly instantiated collections, so we can do the cast	WITHOUT_CLASSIFICATION	0.9998275888264242	WITHOUT_CLASSIFICATION	9.588779258921153E-5	DESIGN	7.066420274273803E-5	DEFECT	2.8916397358685465E-6	TEST	2.6967983368947074E-6	IMPLEMENTATION	2.7074017117082006E-7	DOCUMENTATION
// collection deletions are a special case since update() can add // deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.9999956879303504	WITHOUT_CLASSIFICATION	3.713094766172663E-6	DEFECT	5.97571539141735E-7	IMPLEMENTATION	9.807358836254405E-10	TEST	3.909380330026137E-10	DOCUMENTATION	3.167022798000382E-11	DESIGN
// we can do the cast since orphan-delete does not apply to: // 1. newly instantiated collections // 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.9051652544418044	WITHOUT_CLASSIFICATION	0.08715369553250844	DESIGN	0.005426542684427979	DEFECT	0.0022139182987939146	IMPLEMENTATION	3.0786802206092705E-5	TEST	9.802240259251476E-6	DOCUMENTATION
// if the natural-id is marked as non-mutable, it is not retrieved during a // normal database-snapshot operation...	WITHOUT_CLASSIFICATION	0.998708444780166	WITHOUT_CLASSIFICATION	0.0012728523737861482	IMPLEMENTATION	1.1470666633986096E-5	DEFECT	4.473603754287728E-6	TEST	2.749485933956493E-6	DESIGN	9.089725679005877E-9	DOCUMENTATION
// watch out for a case where old is still referenced // somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9999637706754048	WITHOUT_CLASSIFICATION	3.313979536086291E-5	DESIGN	2.7295222227298885E-6	DEFECT	2.3749894234792993E-7	DOCUMENTATION	8.633665851420443E-8	TEST	3.617141079651664E-8	IMPLEMENTATION
//slice, to get the columns for this component //property	WITHOUT_CLASSIFICATION	0.9764379241137099	WITHOUT_CLASSIFICATION	0.023555588781749327	DESIGN	3.497128662601134E-6	TEST	1.2920469293532877E-6	DEFECT	9.120703782376997E-7	DOCUMENTATION	7.858585706161032E-7	IMPLEMENTATION
//int result = 17; //result = 37 * result + type.hashCode(); //result = 37 * result + ( value==null ? 0 : value.hashCode() ); //return result;	WITHOUT_CLASSIFICATION	0.9999992968761222	WITHOUT_CLASSIFICATION	5.882686969080075E-7	DESIGN	6.502865881966634E-8	DEFECT	4.29445335033607E-8	IMPLEMENTATION	5.282155687276984E-9	DOCUMENTATION	1.5998328286395814E-9	TEST
// The CollectionEntry.isReached() stuff is just to detect any silly users   // who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.9999962154625492	WITHOUT_CLASSIFICATION	2.6341888037437303E-6	DESIGN	1.1328254217714498E-6	DEFECT	6.960154369673748E-9	TEST	6.667562929882854E-9	IMPLEMENTATION	3.895507947370104E-9	DOCUMENTATION
// detached collection wrappers that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999864118412772	WITHOUT_CLASSIFICATION	6.455335422423557E-6	DESIGN	5.217269704602066E-6	IMPLEMENTATION	1.8691944524344786E-6	DEFECT	4.4089560195770727E-8	TEST	2.2695830540863095E-9	DOCUMENTATION
// The unique property value represented here may or may not be // serializable, so we do an explicit check here in order to generate // a better error message	WITHOUT_CLASSIFICATION	0.7974688974477712	DESIGN	0.20239583805506856	WITHOUT_CLASSIFICATION	7.702611915334305E-5	DEFECT	3.1199639467761794E-5	TEST	1.5900399180143167E-5	DOCUMENTATION	1.1138339359047025E-5	IMPLEMENTATION
// if the version of a newly instantiated object is not the same // as the version seed value, use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999758476699742	WITHOUT_CLASSIFICATION	1.9128587625485086E-5	DESIGN	4.820081905473503E-6	DEFECT	1.7042540491994798E-7	IMPLEMENTATION	2.037533657419491E-8	TEST	1.2859753482248992E-8	DOCUMENTATION
// ie. we never have to null out a reference to // an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999975019424603	WITHOUT_CLASSIFICATION	2.468530686863444E-6	DESIGN	9.361387053912763E-9	DEFECT	8.437510085070315E-9	DOCUMENTATION	7.086867785772848E-9	IMPLEMENTATION	4.641087910243243E-9	TEST
// ignore this row, the collection is in process of // being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.9999290657002926	WITHOUT_CLASSIFICATION	5.272198279462439E-5	DESIGN	1.7858353871489404E-5	DEFECT	3.1153112106679175E-7	TEST	3.0362081379902E-8	DOCUMENTATION	1.2069838926987963E-8	IMPLEMENTATION
// Entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // 	WITHOUT_CLASSIFICATION	0.9999976889658075	WITHOUT_CLASSIFICATION	1.8765523643908851E-6	DEFECT	1.4695849980735705E-7	DESIGN	1.2691860976385046E-7	TEST	1.0887147652154263E-7	IMPLEMENTATION	5.1733241852606376E-8	DOCUMENTATION
// should be ok performance-wise to generate new delegate instances for each // request since these are locally stack-scoped.  Besides, it makes the code // much easier to read than the old TransactionHelper stuff...	WITHOUT_CLASSIFICATION	0.9438834725448318	WITHOUT_CLASSIFICATION	0.05611628769518627	DESIGN	1.7447035050841167E-7	TEST	4.0827999515533285E-8	DEFECT	1.9762496919709864E-8	DOCUMENTATION	4.699134847301553E-9	IMPLEMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9998962736245862	WITHOUT_CLASSIFICATION	7.614670735027403E-5	DESIGN	1.5651279206960425E-5	IMPLEMENTATION	1.0672351827650012E-5	DEFECT	6.561314827196404E-7	DOCUMENTATION	5.99905546088474E-7	TEST
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9998962736245862	WITHOUT_CLASSIFICATION	7.614670735027403E-5	DESIGN	1.5651279206960425E-5	IMPLEMENTATION	1.0672351827650012E-5	DEFECT	6.561314827196404E-7	DOCUMENTATION	5.99905546088474E-7	TEST
// wrap up any new collections directly referenced by the object // or its components	WITHOUT_CLASSIFICATION	0.9999999024157686	WITHOUT_CLASSIFICATION	7.489786391326914E-8	DESIGN	1.018172007838874E-8	IMPLEMENTATION	8.174098408802126E-9	DEFECT	3.7241026967558572E-9	TEST	6.064461601094571E-10	DOCUMENTATION
// remove any snapshot, not really for memory management purposes, but // rather because it might now be stale, and there is no longer any  // EntityEntry to take precedence // This is now handled by removeEntity() //session.getPersistenceContext().removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9998326376513883	WITHOUT_CLASSIFICATION	1.299680915810433E-4	DESIGN	3.718938496685741E-5	DEFECT	9.159907991368461E-8	DOCUMENTATION	5.666280052988919E-8	IMPLEMENTATION	5.661018333201023E-8	TEST
// skip this check for composite-ids relating to dom4j entity-mode; // alternatively, we could add a check to make sure the incoming id value is // an instance of Element...	WITHOUT_CLASSIFICATION	0.9998520019179891	WITHOUT_CLASSIFICATION	1.3263698612990673E-4	DESIGN	1.3986461426280653E-5	IMPLEMENTATION	1.0962863843641258E-6	DEFECT	1.8345968162165104E-7	DOCUMENTATION	9.488838884638427E-8	TEST
// upgrade the lock if necessary: //lock(result, lockMode);	WITHOUT_CLASSIFICATION	0.9996451577982792	WITHOUT_CLASSIFICATION	1.7471693028289482E-4	DEFECT	1.271678208917116E-4	DESIGN	5.010941198427581E-5	IMPLEMENTATION	1.9085464734452216E-6	DOCUMENTATION	9.394920884237281E-7	TEST
// now, any collections that are initialized // inside this block do not get updated - they // are ignored until the next flush	WITHOUT_CLASSIFICATION	0.9999199041175925	WITHOUT_CLASSIFICATION	6.258979447548968E-5	DESIGN	1.0840572096868632E-5	IMPLEMENTATION	5.342929670178876E-6	DEFECT	1.2461672503454323E-6	TEST	7.641891451765619E-8	DOCUMENTATION
//we must clone embedded composite identifiers, or  //we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.9998333059815364	WITHOUT_CLASSIFICATION	1.6081458482246916E-4	DESIGN	4.997179760311906E-6	IMPLEMENTATION	7.522208135949677E-7	DEFECT	1.0552781422123617E-7	DOCUMENTATION	2.4505253026524087E-8	TEST
// Sub-insertions should occur before containing insertion so // Try to do the callback now	WITHOUT_CLASSIFICATION	0.9998713087461754	WITHOUT_CLASSIFICATION	9.348162964292917E-5	IMPLEMENTATION	2.262608056768907E-5	DEFECT	1.13231645058498E-5	DESIGN	7.767052212127842E-7	DOCUMENTATION	4.836738869821712E-7	TEST
//the entity is not associated with the session, so //try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.9999996392650672	WITHOUT_CLASSIFICATION	1.5877670148101754E-7	DESIGN	6.174677608113059E-8	TEST	6.005862512924034E-8	IMPLEMENTATION	5.640786160993428E-8	DEFECT	2.374496851520328E-8	DOCUMENTATION
//scan the query string for class names appearing in the from clause and replace //with all persistent implementors of the class/interface, returning multiple //query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.5388727016634302	WITHOUT_CLASSIFICATION	0.45859460808884256	DESIGN	0.001785584912611693	DEFECT	7.44576140158538E-4	IMPLEMENTATION	1.3223059533970693E-6	DOCUMENTATION	1.2068890035153366E-6	TEST
// save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997254387278	WITHOUT_CLASSIFICATION	1.2432135282076495E-7	DEFECT	8.554649902870714E-8	IMPLEMENTATION	3.883584186382277E-8	DESIGN	1.771325549971016E-8	TEST	8.144323037768091E-9	DOCUMENTATION
// evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993593031892	WITHOUT_CLASSIFICATION	2.9684656160766645E-7	DESIGN	1.478142060667233E-7	DEFECT	1.343138327046366E-7	IMPLEMENTATION	4.760355393248716E-8	TEST	1.4118656454242786E-8	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9981228410780467	WITHOUT_CLASSIFICATION	0.001872565427883071	DESIGN	4.027172624754569E-6	TEST	2.3948157645144947E-7	IMPLEMENTATION	2.3099673711482838E-7	DEFECT	9.584313185533032E-8	DOCUMENTATION
//if it is an uninitialized proxy, pointing //with this session, then when it is accessed, //the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.9999668893509449	WITHOUT_CLASSIFICATION	9.867212265559163E-6	DEFECT	9.04580835034701E-6	DESIGN	8.842252775400223E-6	IMPLEMENTATION	4.791077215353358E-6	TEST	5.642984484442803E-7	DOCUMENTATION
// Generate an explicit join for the root dot node.   The implied joins will be collected and passed up // to the root dot node.	WITHOUT_CLASSIFICATION	0.9999999703685669	WITHOUT_CLASSIFICATION	2.2804682855321217E-8	DESIGN	5.484869790895276E-9	TEST	1.1805931501234506E-9	IMPLEMENTATION	8.128439186958182E-11	DEFECT	8.000297883514972E-11	DOCUMENTATION
// A session is considered to contain an entity only if the entity has // an entry in the session's persistence context and the entry reports // that the entity has not been removed	WITHOUT_CLASSIFICATION	0.9901641237314296	WITHOUT_CLASSIFICATION	0.009738879563903804	DESIGN	9.124102992340066E-5	IMPLEMENTATION	4.165722513776792E-6	TEST	1.418742185830148E-6	DEFECT	1.7121004364292718E-7	DOCUMENTATION
// Does the collection referenced by this FromElement // specify an order-by attribute?  If so, attach it to // the query's order-by	WITHOUT_CLASSIFICATION	0.9816681855590167	WITHOUT_CLASSIFICATION	0.011841252838514903	IMPLEMENTATION	0.0050277709021347644	DESIGN	6.599036867214854E-4	TEST	5.095833635864101E-4	DOCUMENTATION	2.933036500257162E-4	DEFECT
// ... and the token could be an identifer and the error is // a mismatched token error ...	WITHOUT_CLASSIFICATION	0.9999980460445246	WITHOUT_CLASSIFICATION	1.6895659369730104E-6	DESIGN	2.5100669185315587E-7	DEFECT	7.395110556001213E-9	TEST	3.435797028240162E-9	DOCUMENTATION	2.5519388963674155E-9	IMPLEMENTATION
// If a where clause was specified in the update/delete query, use it to limit the // returned ids here...	WITHOUT_CLASSIFICATION	0.9999986375268737	WITHOUT_CLASSIFICATION	1.156612354136025E-6	DESIGN	1.0109478261707406E-7	IMPLEMENTATION	9.903126304160967E-8	DEFECT	4.238552217000355E-9	DOCUMENTATION	1.4961742580075034E-9	TEST
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// Default implementation: // If this node has a data type, and that data type is not an association, then this is scalar.	WITHOUT_CLASSIFICATION	0.995397053335687	WITHOUT_CLASSIFICATION	0.004483396532495837	DESIGN	5.947768039969702E-5	IMPLEMENTATION	4.716168484967931E-5	DEFECT	1.0578743881358544E-5	TEST	2.33202268644753E-6	DOCUMENTATION
// Resolve the LHS fully, generate implicit joins.  Pass in the property name so that the resolver can // discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.9999877701208559	WITHOUT_CLASSIFICATION	1.2213997786982413E-5	DESIGN	7.591262863677877E-9	IMPLEMENTATION	4.850342488094175E-9	TEST	1.8908470427964673E-9	DEFECT	1.5489047128139053E-9	DOCUMENTATION
// If the propertyType is null and there isn't a parent, just // stop now... there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.9998543347101879	WITHOUT_CLASSIFICATION	1.3219925307896336E-4	DEFECT	1.3337655169288946E-5	DESIGN	7.380056186117737E-8	IMPLEMENTATION	3.566204165294932E-8	TEST	1.8918960335964606E-8	DOCUMENTATION
//We do not look for an existing join on the same path, because //it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.9999995266312104	WITHOUT_CLASSIFICATION	2.4817144483421154E-7	DESIGN	1.4392908373983434E-7	DEFECT	5.927513129126326E-8	IMPLEMENTATION	1.854643992877859E-8	TEST	3.446689791885843E-9	DOCUMENTATION
// our parent is another dot node, meaning we are being further dereferenced. // thus we need to generate a join unless the parent refers to the associated // entity's PK (because 'our' table would know the FK).	WITHOUT_CLASSIFICATION	0.9999767873825484	WITHOUT_CLASSIFICATION	2.0247499664286063E-5	IMPLEMENTATION	1.6906997069415235E-6	DESIGN	1.0547729237240567E-6	TEST	2.1920551356295127E-7	DOCUMENTATION	4.396429894918314E-10	DEFECT
/*public final Currency getCurrency(int col) throws HibernateException {	WITHOUT_CLASSIFICATION	0.7406994259873412	WITHOUT_CLASSIFICATION	0.24602220557167467	DESIGN	0.01294426156648233	DEFECT	1.3530108082434678E-4	DOCUMENTATION	1.2106074887277176E-4	IMPLEMENTATION	7.774504480482537E-5	TEST
// here, we have two possibilities: // 	WITHOUT_CLASSIFICATION	0.9971407013995977	WITHOUT_CLASSIFICATION	0.0013997768334456408	DESIGN	0.00131692609987741	IMPLEMENTATION	7.501924043419829E-5	DEFECT	6.250327430330955E-5	TEST	5.073152341731697E-6	DOCUMENTATION
// Set the unresolved path in this node and the parent. // Set the text for the parent.	WITHOUT_CLASSIFICATION	0.9999912781554312	WITHOUT_CLASSIFICATION	5.8815921319244095E-6	IMPLEMENTATION	1.4721806362273198E-6	TEST	9.912368666413977E-7	DEFECT	3.150148517512356E-7	DESIGN	6.182008223957919E-8	DOCUMENTATION
// Get the first child to be considered.  Sub-classes may do this differently in order to skip nodes that // are not select expressions (e.g. DISTINCT).	WITHOUT_CLASSIFICATION	0.9999728710570762	WITHOUT_CLASSIFICATION	2.7123471610160976E-5	DESIGN	2.840627158354678E-9	DOCUMENTATION	1.4962462449021586E-9	IMPLEMENTATION	1.017765121554256E-9	TEST	1.1667508063318508E-10	DEFECT
// If this is an entity and the property is the identifier property, then use getIdentifierType(). //      Note that the propertyName.equals( propertyPath ) checks whether we have a component //      key reference, where the component class property name is the same as the //      entity id property name; if the two are not equal, this is the case and //      we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.9999997124613402	WITHOUT_CLASSIFICATION	2.820428214499879E-7	DESIGN	3.2351433338852613E-9	IMPLEMENTATION	1.8080059839038178E-9	DOCUMENTATION	3.6616212879806835E-10	DEFECT	8.652690184130939E-11	TEST
// for a subquery, the alias to use depends on a few things (we // already know this is not an overall SELECT): //      1) if this FROM_ELEMENT represents a correlation to the //          outer-most query //              A) if the outer query represents a multi-table //                  persister, we need to use the given alias //                  in anticipation of one of the multi-table //                  executors being used (as this subquery will //                  actually be used in the "id select" phase //                  of that multi-table executor) //              B) otherwise, we need to use the persister's //                  table name as the column qualification //      2) otherwise (not correlated), use the given alias	WITHOUT_CLASSIFICATION	0.9796625746142305	WITHOUT_CLASSIFICATION	0.02032831465021458	DESIGN	7.383205771820708E-6	DEFECT	1.507253987561101E-6	IMPLEMENTATION	1.834489672335742E-7	DOCUMENTATION	3.682682832667264E-8	TEST
// Not a collection? // Return the entity property mapping.	WITHOUT_CLASSIFICATION	0.9997634738816299	WITHOUT_CLASSIFICATION	1.9478156327990375E-4	IMPLEMENTATION	2.4174098633124325E-5	DEFECT	1.7262669364749035E-5	DESIGN	2.3722965070189527E-7	TEST	7.055744168282028E-8	DOCUMENTATION
// collection of <many-to-any/> mappings... // used to circumvent the component-collection check below...	WITHOUT_CLASSIFICATION	0.999484483277606	WITHOUT_CLASSIFICATION	4.6081854068920407E-4	IMPLEMENTATION	4.239385266457642E-5	DESIGN	7.805233040153868E-6	DEFECT	3.1521527729717084E-6	DOCUMENTATION	1.3469432271861609E-6	TEST
// Otherwise, the destination node was implied by the FROM clause and the FROM clause processor // will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.9999059224985252	WITHOUT_CLASSIFICATION	6.266726675445043E-5	DEFECT	1.813870234674462E-5	IMPLEMENTATION	1.261433658858142E-5	DESIGN	5.414846287724867E-7	DOCUMENTATION	1.1571115629112057E-7	TEST
// If the first identifier in the path referrs to the class alias (not the class name), then this // is a correlated subselect.  If it's a correlated sub-select, use the existing table alias.  Otherwise // generate a new one.	WITHOUT_CLASSIFICATION	0.9999985521796969	WITHOUT_CLASSIFICATION	1.431084876717645E-6	DESIGN	1.4515479639106835E-8	DEFECT	1.6890086663639212E-9	TEST	4.732188003192589E-10	IMPLEMENTATION	5.77192726211479E-11	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999686996531073	WITHOUT_CLASSIFICATION	3.118630803246615E-5	DESIGN	1.025812295902313E-7	DEFECT	5.482698007005808E-9	IMPLEMENTATION	4.106438771617853E-9	DOCUMENTATION	1.8684938466176175E-9	TEST
// An ident node can represent an index expression if the ident // represents a naked property ref //      *Note: this makes the assumption (which is currently the case //      in the hql-sql grammar) that the ident is first resolved //      itself (addrExpr -> resolve()).  The other option, if that //      changes, is to call resolve from here; but it is //      currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.9999985352886624	WITHOUT_CLASSIFICATION	1.4292268611456566E-6	DESIGN	3.244472515937087E-8	TEST	2.2453208315739366E-9	DEFECT	4.245048146528332E-10	DOCUMENTATION	3.699256417196479E-10	IMPLEMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9970599443327604	WITHOUT_CLASSIFICATION	0.0029310642409766164	DESIGN	8.644619483012431E-6	DEFECT	3.1048188227196535E-7	IMPLEMENTATION	2.565792981359169E-8	TEST	1.066696785381203E-8	DOCUMENTATION
// If this is an implied join in a FROM clause, then use ANSI-style joining, and set the // flag on the FromElement that indicates that it was implied in the FROM clause itself.	WITHOUT_CLASSIFICATION	0.999999525425276	WITHOUT_CLASSIFICATION	4.142404353683996E-7	DESIGN	3.0337509622079435E-8	TEST	2.3112796740140792E-8	IMPLEMENTATION	5.3985487495212685E-9	DEFECT	1.4854334508355945E-9	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// For an explicit many-to-many relationship, add a second join from the intermediate  // (many-to-many) table to the destination table.  Also, make sure that the from element's  // idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.9999999892796966	WITHOUT_CLASSIFICATION	5.5718822097641614E-9	DEFECT	2.7211799626267444E-9	DESIGN	2.1433629790365418E-9	TEST	2.005054572077555E-10	DOCUMENTATION	8.33727827361667E-11	IMPLEMENTATION
// Reset the node type, because the rest of the system is expecting FROM_FRAGMENT, all we wanted was // for the factory to create the right sub-class.  This might get reset again later on anyway to make the // SQL generation simpler.	WITHOUT_CLASSIFICATION	0.999330122590589	WITHOUT_CLASSIFICATION	6.38166592082137E-4	DESIGN	2.9570601507272647E-5	TEST	1.4468503725664868E-6	IMPLEMENTATION	5.676098758674421E-7	DEFECT	1.2575557328969743E-7	DOCUMENTATION
//explicit = true;	WITHOUT_CLASSIFICATION	0.999909885194527	WITHOUT_CLASSIFICATION	4.31108370278705E-5	DESIGN	3.302828480301108E-5	DEFECT	6.380146237644834E-6	IMPLEMENTATION	4.011900229120667E-6	TEST	3.583637175344204E-6	DOCUMENTATION
//sqlResultTypeList.add( type ); // Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999996048356026	WITHOUT_CLASSIFICATION	2.5305654405409483E-7	DESIGN	1.2490697389365007E-7	IMPLEMENTATION	8.79272216935797E-9	TEST	6.295909249601092E-9	DEFECT	2.1122479487373594E-9	DOCUMENTATION
// If the expression list has exactly one expression, and the type of the expression is a collection // then this might be a collection function, such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.9999697416466041	WITHOUT_CLASSIFICATION	2.9751125781466348E-5	DESIGN	4.944826073425504E-7	DEFECT	7.1710275871359624E-9	DOCUMENTATION	4.439621567824499E-9	TEST	1.1343578915800048E-9	IMPLEMENTATION
// Need to parse off the column qualifiers; this is assuming (which is true as of now) // that this is only used from update and delete HQL statement parsing	WITHOUT_CLASSIFICATION	0.999995596648196	WITHOUT_CLASSIFICATION	2.5623369411615047E-6	DEFECT	1.3324297271626637E-6	IMPLEMENTATION	4.1002507433447976E-7	DESIGN	7.88517835537983E-8	TEST	1.9708277690926763E-8	DOCUMENTATION
// for regression testing against output from the old parser... // found it easiest to simply reorder the FromElements here into ascending order // in terms of injecting them into the resulting sql ast in orders relative to those // expected by the old parser; this is definitely another of those "only needed // for regression purposes".  The SyntheticAndFactory, then, simply injects them as it // encounters them.	WITHOUT_CLASSIFICATION	0.9999445207700224	WITHOUT_CLASSIFICATION	3.563454148383816E-5	DEFECT	1.312924167030853E-5	TEST	6.692764656856595E-6	DESIGN	2.2666981973272783E-8	DOCUMENTATION	1.5184571661473658E-11	IMPLEMENTATION
// The uber-rule here is that we need to include  subclass joins if // the FromElement is in any way dereferenced by a property from // the subclass table; otherwise we end up with column references // qualified by a non-existent table reference in the resulting SQL...	WITHOUT_CLASSIFICATION	0.7104524384516845	WITHOUT_CLASSIFICATION	0.28952917304207787	DESIGN	1.5061723232560334E-5	DEFECT	2.1449643203324075E-6	IMPLEMENTATION	6.013356151589115E-7	DOCUMENTATION	5.804830698101796E-7	TEST
// classic translator does not support collection of ordinal // param metadata	WITHOUT_CLASSIFICATION	0.996682839217332	WITHOUT_CLASSIFICATION	0.0031470763191412624	DESIGN	1.6495669823031892E-4	DEFECT	2.526709745564552E-6	IMPLEMENTATION	2.2191836317843537E-6	TEST	3.8187191926245347E-7	DOCUMENTATION
// The following variables are stacks that keep information about each subexpression // in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.9998947321127379	WITHOUT_CLASSIFICATION	1.0189354293472137E-4	DEFECT	3.1730058917461643E-6	DESIGN	1.5993720815994451E-7	DOCUMENTATION	2.2511332691863667E-8	TEST	1.8889894706909635E-8	IMPLEMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999991755901713	WITHOUT_CLASSIFICATION	7.761873452074663E-7	DEFECT	4.3222782718952856E-8	IMPLEMENTATION	4.486690374128185E-9	TEST	3.3333933560525105E-10	DOCUMENTATION	1.79671086472724E-10	DESIGN
// should not be able to reach last without maxPosition being set // unless there are no results	WITHOUT_CLASSIFICATION	0.9999999177948844	WITHOUT_CLASSIFICATION	4.633265522250655E-8	DESIGN	2.1506251275310786E-8	DEFECT	1.4083820956651158E-8	TEST	2.3768916765721544E-10	IMPLEMENTATION	4.469877232358195E-11	DOCUMENTATION
// we found it in the temp PC.  Should indicate we are in the midst of processing a result set // containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.9999998744042534	WITHOUT_CLASSIFICATION	1.2492225010633436E-7	DESIGN	4.977734711884777E-10	TEST	8.221082959273461E-11	DEFECT	6.100556248754072E-11	IMPLEMENTATION	3.250666336967268E-11	DOCUMENTATION
//do not use proxiesByKey, since not all //proxies that point to this session's //instances are in that collection!	WITHOUT_CLASSIFICATION	0.9947961268192663	WITHOUT_CLASSIFICATION	0.0049715324366569995	DESIGN	1.8528651379230216E-4	DEFECT	3.9311404602165746E-5	IMPLEMENTATION	7.07727615795874E-6	DOCUMENTATION	6.655495242553677E-7	TEST
// if there is no TM configured, we will not be able to access // the javax.transaction.Transaction object in order to // register a synch anyway.	WITHOUT_CLASSIFICATION	0.94064090127346	DESIGN	0.059315312809330265	WITHOUT_CLASSIFICATION	3.128123855990339E-5	IMPLEMENTATION	9.84791946285915E-6	TEST	1.7996148542414203E-6	DOCUMENTATION	8.571443325985918E-7	DEFECT
// Since the result set cursor is always left at the first // physical row after the "last processed", we need to jump // back one position to get the key value we are interested // in skipping	WITHOUT_CLASSIFICATION	0.9999997771563086	WITHOUT_CLASSIFICATION	2.098783621987668E-7	DESIGN	6.608560480231653E-9	DOCUMENTATION	5.66575498544434E-9	DEFECT	6.290819058417623E-10	TEST	6.193178452278471E-11	IMPLEMENTATION
//true if this is a query and we are loading multiple instances of the same collection role //otherwise this is a CollectionInitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.9997780712258851	WITHOUT_CLASSIFICATION	2.1628079316190986E-4	DEFECT	3.615140357084467E-6	DESIGN	1.930039680444651E-6	IMPLEMENTATION	6.115943217788431E-8	DOCUMENTATION	4.164148320865531E-8	TEST
// we don't need to worry about existing version being uninitialized // because this block isn't called by a re-entrant load (re-entrant // loads _always_ have lock mode NONE)	WITHOUT_CLASSIFICATION	0.9945195103951967	WITHOUT_CLASSIFICATION	0.005374050791767337	IMPLEMENTATION	8.155495461394066E-5	DESIGN	2.0504816979926885E-5	DEFECT	3.1163973242790634E-6	TEST	1.262644117749556E-6	DOCUMENTATION
// add temp entry so that the next step is circular-reference // safe - only needed because some types don't take proper // advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.9999974648731108	WITHOUT_CLASSIFICATION	1.005081652378937E-6	DEFECT	8.335419327494909E-7	DOCUMENTATION	5.577949886552373E-7	TEST	1.1280951951543247E-7	DESIGN	2.5898796000659078E-8	IMPLEMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999999277723505	WITHOUT_CLASSIFICATION	3.397101706169858E-8	TEST	1.2979190101233713E-8	DESIGN	1.2879996163654409E-8	DEFECT	1.2320573539565989E-8	DOCUMENTATION	7.6872707760339E-11	IMPLEMENTATION
// log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.9993108926106931	WITHOUT_CLASSIFICATION	5.594554708650165E-4	IMPLEMENTATION	1.1057311149526379E-4	DEFECT	1.4833484708857702E-5	DESIGN	2.5945911633177283E-6	TEST	1.6507310746390093E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// this has been shown to happen occasionally in rare cases // when using a transaction manager + transaction-timeout // where the timeout calls back through Hibernate's // registered transaction synchronization on a separate // "reaping" thread.  In cases where that reaping thread // executes through this block at the same time the main // application thread does we can get into situations where // these CMEs occur.  And though it is not "allowed" per-se, // the end result without handling it specifically is infinite // looping.  So here, we simply break the loop	WITHOUT_CLASSIFICATION	0.9999949294387597	WITHOUT_CLASSIFICATION	3.7348055326601495E-6	DESIGN	1.320576924821913E-6	DEFECT	1.2666722801942317E-8	DOCUMENTATION	2.1337032146303195E-9	IMPLEMENTATION	3.78356775363113E-10	TEST
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999899006584991	WITHOUT_CLASSIFICATION	9.770189298507313E-6	DESIGN	2.617004593123424E-7	DEFECT	2.6584855253486937E-8	DOCUMENTATION	2.1699849373401214E-8	IMPLEMENTATION	1.9167038291406334E-8	TEST
// can't cache this stuff either (per-invocation) // we are given a map of user-alias -> lock mode // create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.9998584260290436	WITHOUT_CLASSIFICATION	1.344467826446473E-4	DESIGN	6.827114968787546E-6	DEFECT	1.640491537884817E-7	DOCUMENTATION	1.346792406780448E-7	TEST	1.3449484171844248E-9	IMPLEMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns //getCollectionTable().createUniqueKey( getIdentifier().getConstraintColumns() );	WITHOUT_CLASSIFICATION	0.9999968823328179	WITHOUT_CLASSIFICATION	2.096993650203029E-6	DEFECT	8.971712134001976E-7	DESIGN	7.081368160287709E-8	TEST	4.845071612673442E-8	IMPLEMENTATION	4.237920705366266E-9	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999980182443031	WITHOUT_CLASSIFICATION	1.0001993614834153E-6	DESIGN	5.180647124246971E-7	IMPLEMENTATION	2.773919478225781E-7	DEFECT	1.400839929310113E-7	TEST	4.601568231324316E-8	DOCUMENTATION
//isSet = collection.isSet(); //isSorted = collection.isSorted();	WITHOUT_CLASSIFICATION	0.9999624332455818	WITHOUT_CLASSIFICATION	2.9357342181618466E-5	IMPLEMENTATION	3.084102359341669E-6	DEFECT	2.674227574127889E-6	TEST	2.145412235237064E-6	DESIGN	3.0567006807436816E-7	DOCUMENTATION
//lists, arrays //sets, maps, bags	WITHOUT_CLASSIFICATION	0.9999981183032066	WITHOUT_CLASSIFICATION	9.198255262930748E-7	DESIGN	3.9358262829533854E-7	DEFECT	2.733689359973626E-7	IMPLEMENTATION	2.651166532355275E-7	TEST	2.9803049496765327E-8	DOCUMENTATION
// we finish all the "removes" first to take care of possible unique // constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.9999955944033913	WITHOUT_CLASSIFICATION	1.758982074145842E-6	DESIGN	1.5233611424154232E-6	TEST	7.137416042010314E-7	IMPLEMENTATION	3.971191905141091E-7	DEFECT	1.2392597439813503E-8	DOCUMENTATION
//use a combination of foreign key columns and pk columns, since //the ordering of removal and addition is not guaranteed when //a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.9997011206649947	WITHOUT_CLASSIFICATION	1.63089279235663E-4	DESIGN	1.3486885418079802E-4	DEFECT	5.268897766063736E-7	DOCUMENTATION	2.279536665645041E-7	IMPLEMENTATION	1.6635814565964928E-7	TEST
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999980182443031	WITHOUT_CLASSIFICATION	1.0001993614834153E-6	DESIGN	5.180647124246971E-7	IMPLEMENTATION	2.773919478225781E-7	DEFECT	1.400839929310113E-7	TEST	4.601568231324316E-8	DOCUMENTATION
//information about properties of this class, //including inherited properties //(only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.9995515889892846	WITHOUT_CLASSIFICATION	3.3594471262113123E-4	DESIGN	8.31713154803176E-5	DEFECT	2.8685342239294972E-5	TEST	4.119336228244382E-7	DOCUMENTATION	1.9770675170162217E-7	IMPLEMENTATION
// all this only really needs to consider properties // of this class, not its subclasses, but since we // are reusing code used for sequential selects, we // use the subclass closure	WITHOUT_CLASSIFICATION	0.999999098680274	WITHOUT_CLASSIFICATION	7.978719672836637E-7	DESIGN	9.1030768662631E-8	DEFECT	1.1380651047143727E-8	TEST	6.441347782063418E-10	DOCUMENTATION	3.922043255712103E-10	IMPLEMENTATION
// Here we render the select column list based on the properties defined as being generated. // For partial component generation, we currently just re-select the whole component // rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.9997126506054013	WITHOUT_CLASSIFICATION	2.8710642104733797E-4	DESIGN	2.2131297182601368E-7	IMPLEMENTATION	1.2059758235080704E-8	DEFECT	8.558807386925686E-9	TEST	1.0420140600210047E-9	DOCUMENTATION
// this is the root (versioned) table, and we are using version-based // optimistic locking;  if we are not updating the version, also don't // check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.9999746539941851	WITHOUT_CLASSIFICATION	2.1484086511766998E-5	DESIGN	3.825924785025814E-6	DEFECT	1.442212688396352E-8	IMPLEMENTATION	1.4244164134391028E-8	TEST	7.328227279253969E-9	DOCUMENTATION
//optimistic-lock="all", include all updatable properties //optimistic-lock="dirty", include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.9999580090834118	WITHOUT_CLASSIFICATION	2.6901302132184755E-5	DESIGN	6.9754784341288454E-6	IMPLEMENTATION	5.649834035389371E-6	DEFECT	1.7035016786844552E-6	DOCUMENTATION	7.608003077945601E-7	TEST
// this property belongs to the table, and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9987628611182569	WITHOUT_CLASSIFICATION	0.0011924307533388375	DESIGN	4.3949747840437724E-5	DEFECT	4.118963523014691E-7	DOCUMENTATION	3.1328190548713594E-7	TEST	3.3202306090237285E-8	IMPLEMENTATION
// check to see if the connection is in auto-commit  // mode (no connection means aggressive connection // release outside a JTA transaction context, so MUST // be autocommit mode)	WITHOUT_CLASSIFICATION	0.9999985776933631	WITHOUT_CLASSIFICATION	1.4177462993633241E-6	DESIGN	2.3386303514835806E-9	DOCUMENTATION	1.5325782490557425E-9	TEST	6.739944378740029E-10	IMPLEMENTATION	1.5134512734030858E-11	DEFECT
// need to treat this as if it where optimistic-lock="all" (dirty does *not* make sense); // first we need to locate the "loaded" state // // Note, it potentially could be a proxy, so perform the location the safe way...	WITHOUT_CLASSIFICATION	0.776868368533262	DESIGN	0.22169426647472082	WITHOUT_CLASSIFICATION	0.001031792064146103	IMPLEMENTATION	2.1309898514754847E-4	TEST	1.804100129552604E-4	DEFECT	1.2063929768227024E-5	DOCUMENTATION
// we *always* assume an instance with a null // identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.9999996893331276	WITHOUT_CLASSIFICATION	1.6681119683000853E-7	DESIGN	1.352754642376703E-7	DEFECT	7.558162194503108E-9	DOCUMENTATION	9.630284794998427E-10	TEST	5.902070846715633E-11	IMPLEMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999996285069287	WITHOUT_CLASSIFICATION	1.6035434044871814E-7	DEFECT	1.2738133065522893E-7	DESIGN	7.101993053718034E-8	IMPLEMENTATION	1.0984899465976946E-8	TEST	1.7525702822296038E-9	DOCUMENTATION
//allow any identifier quoted with backtick //only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.9979804872535136	WITHOUT_CLASSIFICATION	0.001420791585185251	DESIGN	3.5122028267722377E-4	DEFECT	2.0882292813172238E-4	IMPLEMENTATION	3.626513257001482E-5	TEST	2.412817922313702E-6	DOCUMENTATION
//following doesn't handle (null, not null) but unnecessary //since this would mean all rows	WITHOUT_CLASSIFICATION	0.9969767431622644	WITHOUT_CLASSIFICATION	9.175004934623717E-4	TEST	8.681967343371759E-4	IMPLEMENTATION	6.581829919555702E-4	DESIGN	5.739445999876678E-4	DEFECT	5.43201799287792E-6	DOCUMENTATION
// IMPL NOTE : due to the delayed population of setters (setters cached // 	WITHOUT_CLASSIFICATION	0.9999810496992758	WITHOUT_CLASSIFICATION	1.671207927570738E-5	DESIGN	2.1785561770759136E-6	DEFECT	4.140338060326697E-8	IMPLEMENTATION	9.182432448533843E-9	TEST	9.079458320631437E-9	DOCUMENTATION
// we need to dirty check collections, since they can cause an owner // version number increment	WITHOUT_CLASSIFICATION	0.9998055305718767	WITHOUT_CLASSIFICATION	1.8799235512550406E-4	IMPLEMENTATION	4.33092917771881E-6	DOCUMENTATION	1.8828935706227951E-6	DESIGN	1.8575845223465016E-7	TEST	7.749179721773537E-8	DEFECT
//return the id, so we can use it to reset the proxy id //return result;	WITHOUT_CLASSIFICATION	0.9999767430839993	WITHOUT_CLASSIFICATION	1.4832526531330354E-5	IMPLEMENTATION	7.747414673974214E-6	DESIGN	5.305023414750493E-7	DEFECT	1.1218175020025275E-7	DOCUMENTATION	3.429070372086417E-8	TEST
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999999651426141	WITHOUT_CLASSIFICATION	2.2185377427761244E-8	DEFECT	9.341935335325156E-9	DESIGN	2.1877014845850532E-9	DOCUMENTATION	8.634590520030257E-10	IMPLEMENTATION	2.789125740814998E-10	TEST
// We now have the value of the property-ref we reference.  However, // we need to dig a little deeper, as that property might also be // an entity type, in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.9999998268781829	WITHOUT_CLASSIFICATION	1.6892408195078587E-7	DESIGN	2.1807815566891086E-9	DOCUMENTATION	1.915416184978115E-9	DEFECT	9.036321187818141E-11	IMPLEMENTATION	1.1174221993290387E-11	TEST
// Retrieve the value of the designated column in the current row of this // ResultSet object as a java.io.Reader object	WITHOUT_CLASSIFICATION	0.9999986649883552	WITHOUT_CLASSIFICATION	1.1683389043268454E-6	DEFECT	1.3999021057140985E-7	DESIGN	1.6561906712545373E-8	DOCUMENTATION	7.547809655015051E-9	TEST	2.5728136520104003E-9	IMPLEMENTATION
//not absolutely necessary, but helps for some //equals()/hashCode() implementations	WITHOUT_CLASSIFICATION	0.9862071793536614	WITHOUT_CLASSIFICATION	0.012741825508166799	IMPLEMENTATION	0.0010208884559753757	DESIGN	2.3466225087662903E-5	TEST	3.920922456112541E-6	DEFECT	2.7195346526193703E-6	DOCUMENTATION
//this should be a call to resolve(), not resolveIdentifier(),  //'cos it might be a property-ref, and we did not cache the //referenced value	WITHOUT_CLASSIFICATION	0.9999881476918531	WITHOUT_CLASSIFICATION	1.17613938938374E-5	DESIGN	4.3320165239850485E-8	IMPLEMENTATION	4.2844404866324334E-8	DEFECT	4.307994770187495E-9	DOCUMENTATION	4.4168821609356887E-10	TEST
// If we have <tt>not-found="ignore"</tt> association mapped to a // formula, we always need to dirty check it, so we can update the // second-level cache	WITHOUT_CLASSIFICATION	0.9994588651896139	WITHOUT_CLASSIFICATION	5.28432088407647E-4	IMPLEMENTATION	1.1819325192268045E-5	DESIGN	6.678117605602675E-7	DOCUMENTATION	1.7171017974243537E-7	DEFECT	4.387484585727007E-8	TEST
// can't just return null here, since that would // cause an owning component to become null	WITHOUT_CLASSIFICATION	0.9999997378611976	WITHOUT_CLASSIFICATION	1.4516577962024065E-7	IMPLEMENTATION	1.0495384268238553E-7	DESIGN	6.7666980659813635E-9	DEFECT	4.571812749051954E-9	TEST	6.80669327193044E-10	DOCUMENTATION
//for arrays, replaceElements() may return a different reference, since //the array length might not match	WITHOUT_CLASSIFICATION	0.9999998907497542	WITHOUT_CLASSIFICATION	9.038359166602793E-8	DESIGN	1.1003099006616991E-8	DEFECT	4.7951972447284765E-9	IMPLEMENTATION	3.0130239247979405E-9	DOCUMENTATION	5.533409463215012E-11	TEST
// actual cache of the entries.  soft references are used for both the keys and the // values here since the values pertaining to the MRU entries are kept in a // seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.9999999972009703	WITHOUT_CLASSIFICATION	2.7461634666612384E-9	DESIGN	4.0371613309653304E-11	IMPLEMENTATION	5.948936026673865E-12	TEST	4.833761451069087E-12	DOCUMENTATION	1.7118776870733255E-12	DEFECT
// as soon as we encounter our first letter, return the substring // from that position	WITHOUT_CLASSIFICATION	0.9999997652114538	WITHOUT_CLASSIFICATION	2.2540280644619282E-7	DESIGN	5.729326576168625E-9	DEFECT	2.8127449415279937E-9	TEST	4.766146763559395E-10	DOCUMENTATION	3.670536681799245E-10	IMPLEMENTATION
// Note : expected in the syntax: //      type=listenerClass //          ({sep}type=listenerClass)* // where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.9999955167972462	WITHOUT_CLASSIFICATION	3.841051117493975E-6	DEFECT	4.5583111644074904E-7	TEST	1.5707294319298658E-7	DESIGN	1.9132500692697614E-8	IMPLEMENTATION	1.0115076005411392E-8	DOCUMENTATION
// isTransactionCallbackRegistered denotes whether any Hibernate // Transaction has registered as a callback against this // JDBCContext; only one such callback is allowed.  Directly // serializing this value causes problems with JDBCTransaction, // or really any Transaction impl where the callback is local // to the Transaction instance itself, since that Transaction // is not serialized along with the JDBCContext.  Thus we // handle that fact here explicitly...	WITHOUT_CLASSIFICATION	0.9758145473461479	WITHOUT_CLASSIFICATION	0.021102084307703613	DESIGN	0.003070861981986817	DEFECT	1.2353239450541587E-5	TEST	1.22966762487087E-7	DOCUMENTATION	3.015794870154913E-8	IMPLEMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9996662558187656	WITHOUT_CLASSIFICATION	3.2538221766072563E-4	DESIGN	6.645794886856698E-6	TEST	1.1918060457175563E-6	DEFECT	4.6726057726893724E-7	IMPLEMENTATION	5.7102063950432517E-8	DOCUMENTATION
// We call getKeyFromResultSet() here so that we can know the // key value upon which to perform the breaking logic.  However, // it is also then called from getRowFromResultSet() which is certainly // not the most efficient.  But the call here is needed, and there // currently is no other way without refactoring of the doQuery()/getRowFromResultSet() // methods	WITHOUT_CLASSIFICATION	0.6692248232634969	DESIGN	0.32004434482296773	WITHOUT_CLASSIFICATION	0.01034236736487013	IMPLEMENTATION	2.4356535441690848E-4	DEFECT	1.1846723772874571E-4	TEST	2.64319565195769E-5	DOCUMENTATION
// This check is needed since processing leaves the cursor // after the last physical row for the current logical row; // thus if we are after the last physical row, this might be // caused by either: //      1) scrolling to the last logical row //      2) scrolling past the last logical row // In the latter scenario, the previous logical row // really is the last logical row. // // In all other cases, we should process back two // logical records (the current logic row, plus the // previous logical row).	WITHOUT_CLASSIFICATION	0.747564626442081	DESIGN	0.2140817692625211	DEFECT	0.023680838059684524	WITHOUT_CLASSIFICATION	0.01434935022461287	IMPLEMENTATION	3.1619161899790107E-4	DOCUMENTATION	7.224392102823221E-6	TEST
// and perform the load	WITHOUT_CLASSIFICATION	0.9999988898369498	WITHOUT_CLASSIFICATION	8.221578857676592E-7	IMPLEMENTATION	2.2702167419270229E-7	DESIGN	2.9224470980718478E-8	DOCUMENTATION	2.3168556229916176E-8	DEFECT	8.590463093113619E-9	TEST
//important: reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.7331918453052159	WITHOUT_CLASSIFICATION	0.22705557374268104	DESIGN	0.027788334992283576	DEFECT	0.011008114033873834	IMPLEMENTATION	9.04472880232922E-4	DOCUMENTATION	5.165904571270203E-5	TEST
//this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.997632371550745	WITHOUT_CLASSIFICATION	0.0019118750116404845	DEFECT	4.292863081356977E-4	DESIGN	2.4138455260291127E-5	IMPLEMENTATION	1.4311273192313042E-6	DOCUMENTATION	8.975468992896389E-7	TEST
// we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.9999795531852115	WITHOUT_CLASSIFICATION	1.791528252920503E-5	DESIGN	2.3813762244826672E-6	DEFECT	1.100306512449395E-7	IMPLEMENTATION	2.3050714745855395E-8	TEST	1.7074668855130128E-8	DOCUMENTATION
// we did not find a collection element in the result set, so we // ensure that a collection is created with the owner's identifier, // since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.999999987355561	WITHOUT_CLASSIFICATION	1.1736509931561265E-8	DESIGN	3.3281248538984285E-10	IMPLEMENTATION	3.101778743905772E-10	DEFECT	2.5829949404037935E-10	TEST	6.6393402000712025E-12	DOCUMENTATION
// this is a collection initializer, so we must create a collection // for each of the passed-in keys, to account for the possibility // that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.9999995170289449	WITHOUT_CLASSIFICATION	2.405043734140237E-7	TEST	1.2666382669106896E-7	DESIGN	9.912542641526997E-8	DEFECT	1.6365348893803254E-8	IMPLEMENTATION	3.120796919492838E-10	DOCUMENTATION
// grab its state from the ResultSet and keep it in the Session // (but don't yet initialize the object itself) // note that we acquire LockMode.READ even if it was not requested	WITHOUT_CLASSIFICATION	0.9999071932727248	WITHOUT_CLASSIFICATION	8.864536846128632E-5	DESIGN	3.3332336105641047E-6	DEFECT	8.06979546395234E-7	TEST	1.6995447306209532E-8	DOCUMENTATION	4.150209622447913E-9	IMPLEMENTATION
// a many-to-many; // decrement currentDepth here to allow join across the association table // without exceeding MAX_FETCH_DEPTH (i.e. the "currentDepth - 1" bit)	WITHOUT_CLASSIFICATION	0.9978062751177462	WITHOUT_CLASSIFICATION	0.0016600708239798822	DESIGN	5.12670826135426E-4	DEFECT	1.0121439590861711E-5	TEST	8.897362304901183E-6	IMPLEMENTATION	1.964430242628904E-6	DOCUMENTATION
// if not a composite key, use "foo in (?, ?, ?)" for batching // if no batch, and not a composite key, use "foo = ?"	WITHOUT_CLASSIFICATION	0.9999999532582474	WITHOUT_CLASSIFICATION	3.936775099986688E-8	DESIGN	5.388777638746135E-9	DEFECT	1.0236534119931971E-9	IMPLEMENTATION	5.952027236388646E-10	TEST	3.6636774195580286E-10	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999977804705543	WITHOUT_CLASSIFICATION	1.7850399445266081E-6	DESIGN	2.3213848507557193E-7	DEFECT	1.911849329257717E-7	DOCUMENTATION	6.665474597181134E-9	IMPLEMENTATION	4.500608663275372E-9	TEST
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.998251325144119	WITHOUT_CLASSIFICATION	8.975878626091156E-4	IMPLEMENTATION	8.420470388577164E-4	DESIGN	4.619526582373758E-6	DEFECT	3.523664574818994E-6	DOCUMENTATION	8.967632570106348E-7	TEST
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.998251325144119	WITHOUT_CLASSIFICATION	8.975878626091156E-4	IMPLEMENTATION	8.420470388577164E-4	DESIGN	4.619526582373758E-6	DEFECT	3.523664574818994E-6	DOCUMENTATION	8.967632570106348E-7	TEST
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9998042028558094	WITHOUT_CLASSIFICATION	1.2307697296126447E-4	DESIGN	6.971642236114581E-5	DEFECT	2.7780223820465114E-6	TEST	1.23624780480758E-7	DOCUMENTATION	1.0210170565360868E-7	IMPLEMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999979351838082	WITHOUT_CLASSIFICATION	2.0039399919311547E-6	DESIGN	4.352078181198614E-8	TEST	9.816786000016842E-9	DEFECT	6.423527997934571E-9	IMPLEMENTATION	1.1151041678736588E-9	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999959586449741	WITHOUT_CLASSIFICATION	3.962615376635636E-6	DESIGN	3.9075467346376274E-8	IMPLEMENTATION	3.318592589206895E-8	DEFECT	5.720593961326889E-9	TEST	7.576620633483929E-10	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.7443957798226633	DESIGN	0.09115832074099095	WITHOUT_CLASSIFICATION	0.08242936482622316	DEFECT	0.08071796545512981	IMPLEMENTATION	7.387574675117013E-4	DOCUMENTATION	5.59811687481041E-4	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999963440015754	WITHOUT_CLASSIFICATION	1.6558900873185054E-6	DESIGN	1.1317686996720128E-6	DEFECT	6.600785398107811E-7	IMPLEMENTATION	1.296224918940625E-7	DOCUMENTATION	7.863860571699599E-8	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999963440015754	WITHOUT_CLASSIFICATION	1.6558900873185054E-6	DESIGN	1.1317686996720128E-6	DEFECT	6.600785398107811E-7	IMPLEMENTATION	1.296224918940625E-7	DOCUMENTATION	7.863860571699599E-8	TEST
//        }	WITHOUT_CLASSIFICATION	0.9999870868768272	WITHOUT_CLASSIFICATION	5.183251571074792E-6	DEFECT	2.9526475621829607E-6	IMPLEMENTATION	2.444097386667138E-6	DESIGN	1.2835077602642987E-6	TEST	1.04961889251703E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9999922581055248	WITHOUT_CLASSIFICATION	7.648398431429224E-6	DESIGN	5.3612791481713726E-8	DEFECT	2.2119100197391228E-8	TEST	9.598463248025252E-9	DOCUMENTATION	8.165689071487862E-9	IMPLEMENTATION
//	WITHOUT_CLASSIFICATION	0.9940604491930831	WITHOUT_CLASSIFICATION	0.005724785986428532	DESIGN	1.0165459055501143E-4	DEFECT	5.3872293422640794E-5	IMPLEMENTATION	3.300844540377775E-5	TEST	2.6229491106931102E-5	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999827769711609	WITHOUT_CLASSIFICATION	1.2597310345551803E-5	IMPLEMENTATION	2.1594492494787424E-6	DEFECT	1.9321021295021754E-6	TEST	4.3082353445504695E-7	DESIGN	1.0334358014867312E-7	DOCUMENTATION
// at this point we have (drivingSqlAlias) the SQL alias of the driving table // corresponding to the given user alias.  However, the driving table is not // (necessarily) the table against which we want to apply locks.  Mainly, // the exception case here is joined-subclass hierarchies where we instead // want to apply the lock against the root table (for all other strategies, // it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.9999371507975764	WITHOUT_CLASSIFICATION	5.159715693815275E-5	DEFECT	1.117255651284834E-5	DESIGN	3.505432346483253E-8	DOCUMENTATION	2.94925170310591E-8	TEST	1.4942132221665602E-8	IMPLEMENTATION
// the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.9999958561171979	WITHOUT_CLASSIFICATION	1.6440497266472658E-6	TEST	1.6403167629074196E-6	IMPLEMENTATION	4.7205710301615914E-7	DEFECT	2.2819521508499777E-7	DOCUMENTATION	1.5926399428543774E-7	DESIGN
// we have a mapped identifier property and the root of // the incoming property path matched that identifier // property	WITHOUT_CLASSIFICATION	0.9999961134499116	WITHOUT_CLASSIFICATION	2.794988627762117E-6	DESIGN	1.039509931451392E-6	DEFECT	3.09025123885223E-8	DOCUMENTATION	1.1227896848051382E-8	TEST	9.921119986293564E-9	IMPLEMENTATION
// we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9999997621195325	WITHOUT_CLASSIFICATION	1.737850593480298E-7	DESIGN	2.620405656476996E-8	IMPLEMENTATION	1.8549076925766586E-8	TEST	1.3519179312454613E-8	DEFECT	5.823095383098047E-9	DOCUMENTATION
// both many-to-one and one-to-one are represented as a // Property.  EntityPersister is relying on this value to // determine "lazy fetch groups" in terms of field-level // interception.  So we need to make sure that we return // true here for the case of many-to-one and one-to-one // with lazy="no-proxy" // // * impl note - lazy="no-proxy" currently forces both // lazy and unwrap to be set to true.  The other case we // are extremely interested in here is that of lazy="proxy" // where lazy is set to true, but unwrap is set to false. // thus we use both here under the assumption that this // return is really only ever used during persister // construction to determine the lazy property/field fetch // groupings.  If that assertion changes then this check // needs to change as well.  Partially, this is an issue with // the overloading of the term "lazy" here...	WITHOUT_CLASSIFICATION	0.9999864489056091	WITHOUT_CLASSIFICATION	1.111027129026663E-5	DEFECT	2.2966445085618855E-6	DESIGN	1.417779017100624E-7	TEST	2.238154653625444E-9	DOCUMENTATION	1.6253575450146587E-10	IMPLEMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998234662162	WITHOUT_CLASSIFICATION	5.935243330112796E-8	IMPLEMENTATION	5.4448457954333846E-8	TEST	3.562804570667819E-8	DEFECT	2.5755133486404247E-8	DESIGN	1.349713329272373E-9	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998234662162	WITHOUT_CLASSIFICATION	5.935243330112796E-8	IMPLEMENTATION	5.4448457954333846E-8	TEST	3.562804570667819E-8	DEFECT	2.5755133486404247E-8	DESIGN	1.349713329272373E-9	DOCUMENTATION
/*rootTableName = persistentClass.getRootTable().getQualifiedName( 	WITHOUT_CLASSIFICATION	0.9999649642410854	WITHOUT_CLASSIFICATION	2.132500731788935E-5	DESIGN	1.2746764561717036E-5	IMPLEMENTATION	5.595058362621447E-7	DEFECT	2.860253868850997E-7	TEST	1.1845581177852502E-7	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999866843683625	WITHOUT_CLASSIFICATION	7.936889716319502E-6	DESIGN	2.5331184215558202E-6	DEFECT	1.9543154439691635E-6	IMPLEMENTATION	4.5772803867263854E-7	DOCUMENTATION	4.3358001704831487E-7	TEST
// Custom sql	WITHOUT_CLASSIFICATION	0.9999949597315139	WITHOUT_CLASSIFICATION	4.085097620806742E-6	DESIGN	5.542606561283672E-7	DEFECT	1.5014708882648036E-7	TEST	1.443624405925329E-7	IMPLEMENTATION	1.0640067987816284E-7	DOCUMENTATION
/*protected void initPropertyPaths(	WITHOUT_CLASSIFICATION	0.9996528873055985	WITHOUT_CLASSIFICATION	2.583207835125756E-4	DESIGN	3.670659401839171E-5	IMPLEMENTATION	2.6770047242857683E-5	DEFECT	2.087032041732273E-5	TEST	4.444949210356121E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999831905564419	WITHOUT_CLASSIFICATION	5.903385033156492E-6	DEFECT	5.226779367442625E-6	DESIGN	3.6242148043181298E-6	IMPLEMENTATION	1.1943205364496941E-6	TEST	8.607438168142809E-7	DOCUMENTATION
//Custom SQL (would be better if these were private)	WITHOUT_CLASSIFICATION	0.9885992290537023	WITHOUT_CLASSIFICATION	0.01137505555312328	DESIGN	1.7694813462887294E-5	TEST	6.335683306734146E-6	IMPLEMENTATION	1.3235798060304766E-6	DOCUMENTATION	3.613165988560423E-7	DEFECT
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999394765642797	WITHOUT_CLASSIFICATION	5.96312067595246E-5	DESIGN	4.5764613790022597E-7	IMPLEMENTATION	2.4032305722297136E-7	TEST	1.303496201951863E-7	DEFECT	6.391014553952203E-8	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999831905564419	WITHOUT_CLASSIFICATION	5.903385033156492E-6	DEFECT	5.226779367442625E-6	DESIGN	3.6242148043181298E-6	IMPLEMENTATION	1.1943205364496941E-6	TEST	8.607438168142809E-7	DOCUMENTATION
// aliases for identifier ( alias.id ); skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.9999977546756214	WITHOUT_CLASSIFICATION	2.030139381540841E-6	IMPLEMENTATION	1.413039274041072E-7	DESIGN	6.054037999496578E-8	DEFECT	1.0295894629731698E-8	TEST	3.0447948599191004E-9	DOCUMENTATION
//decide which ResultSet to get the property value from:	WITHOUT_CLASSIFICATION	0.9997203296587048	WITHOUT_CLASSIFICATION	2.4812849920565275E-4	DESIGN	2.8906208764149892E-5	DEFECT	2.263030654654108E-6	DOCUMENTATION	2.504397760318073E-7	TEST	1.22162894538133E-7	IMPLEMENTATION
//note: it is conceptually possible that a UserType could map null to //	WITHOUT_CLASSIFICATION	0.9936801309941541	WITHOUT_CLASSIFICATION	0.006261164473363729	DESIGN	5.559287709188842E-5	IMPLEMENTATION	2.7088453984021847E-6	DEFECT	3.450922456636099E-7	TEST	5.771774635153266E-8	DOCUMENTATION
// the contract of EntityTuplizer.determineConcreteSubclassEntityName says that returning null // is an indication that the specified entity-name (this.getEntityName) should be used.	WITHOUT_CLASSIFICATION	0.9993336978446496	WITHOUT_CLASSIFICATION	6.661208333832349E-4	DESIGN	8.786314068352677E-8	DOCUMENTATION	5.842023794552998E-8	IMPLEMENTATION	3.457853531751699E-8	TEST	4.600532161486449E-10	DEFECT
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999996285069287	WITHOUT_CLASSIFICATION	1.6035434044871814E-7	DEFECT	1.2738133065522893E-7	DESIGN	7.101993053718034E-8	IMPLEMENTATION	1.0984899465976946E-8	TEST	1.7525702822296038E-9	DOCUMENTATION
// cache these since they are stateless // this one could even be static...	WITHOUT_CLASSIFICATION	0.9996679413682876	WITHOUT_CLASSIFICATION	3.3180070223153436E-4	DESIGN	1.8829448968746362E-7	DEFECT	4.7782107418095954E-8	TEST	1.768809045539173E-8	DOCUMENTATION	4.164793349362453E-9	IMPLEMENTATION
//"as" is not in KEYWORDS	WITHOUT_CLASSIFICATION	0.9992285978052154	WITHOUT_CLASSIFICATION	4.2715670190909935E-4	DEFECT	2.9893573898563376E-4	DESIGN	2.9548880311525314E-5	TEST	9.257470525242661E-6	IMPLEMENTATION	6.503403053181788E-6	DOCUMENTATION
// --Commented out by Inspection (12/4/04 9:10 AM): public abstract void addCondition(String alias, String[] columns, String condition);	WITHOUT_CLASSIFICATION	0.9999300409883031	WITHOUT_CLASSIFICATION	6.6628012075828E-5	DESIGN	2.1260677831830603E-6	DOCUMENTATION	8.406518227899971E-7	IMPLEMENTATION	2.0447049887563472E-7	TEST	1.5980951614719478E-7	DEFECT
//use the id column alias	WITHOUT_CLASSIFICATION	0.9999890675251584	WITHOUT_CLASSIFICATION	6.790657037787116E-6	IMPLEMENTATION	3.4682761074631243E-6	DESIGN	4.844823874388227E-7	DOCUMENTATION	1.6445352641563091E-7	TEST	2.4605782507990496E-8	DEFECT
//private List aliases = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999990219924699	WITHOUT_CLASSIFICATION	7.428124853127609E-7	IMPLEMENTATION	1.0599612036205917E-7	TEST	6.957703185969857E-8	DESIGN	4.6810838090924205E-8	DEFECT	1.2811054423907886E-8	DOCUMENTATION
//columns.add(columnName); //aliases.add(tableAlias);	WITHOUT_CLASSIFICATION	0.9998621801138013	WITHOUT_CLASSIFICATION	6.646889751606059E-5	IMPLEMENTATION	3.426577831803467E-5	DESIGN	2.9090430515227642E-5	DEFECT	5.630405383255878E-6	TEST	2.3643744659832386E-6	DOCUMENTATION
//where fragment must be empty!	WITHOUT_CLASSIFICATION	0.9989878708728683	WITHOUT_CLASSIFICATION	9.76193202295334E-4	DESIGN	1.4876729875030993E-5	IMPLEMENTATION	1.338332310310029E-5	TEST	5.36278373823301E-6	DEFECT	2.3130881200892134E-6	DOCUMENTATION
// revert to traditional hibernate behavior of setting initialPoolSize to minPoolSize // unless otherwise specified with a c3p0.*-style parameter.	WITHOUT_CLASSIFICATION	0.9641602429683127	WITHOUT_CLASSIFICATION	0.035829032520870684	DESIGN	9.098740310582302E-6	IMPLEMENTATION	1.2934963783636897E-6	TEST	1.9274593005078948E-7	DOCUMENTATION	1.3952819768686416E-7	DEFECT
//arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.9999942842688553	WITHOUT_CLASSIFICATION	3.7844170162746924E-6	DESIGN	1.5685214033984427E-6	DEFECT	2.307058111043855E-7	DOCUMENTATION	1.1536893334739211E-7	IMPLEMENTATION	1.6717980645053065E-8	TEST
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9964967482199681	WITHOUT_CLASSIFICATION	0.003237187952138832	DESIGN	1.1960901739254931E-4	IMPLEMENTATION	6.925647903571694E-5	DEFECT	3.969389889269042E-5	DOCUMENTATION	3.750443257202949E-5	TEST
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9964967482199681	WITHOUT_CLASSIFICATION	0.003237187952138832	DESIGN	1.1960901739254931E-4	IMPLEMENTATION	6.925647903571694E-5	DEFECT	3.969389889269042E-5	DOCUMENTATION	3.750443257202949E-5	TEST
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9997347612672152	WITHOUT_CLASSIFICATION	2.428758043102123E-4	DESIGN	1.995778519816133E-5	DEFECT	1.1427568568892184E-6	TEST	1.1026808612269402E-6	IMPLEMENTATION	1.5970555836852762E-7	DOCUMENTATION
// Essentially: // 1) If we have a local (Hibernate) transaction in progress //      and it already has the UserTransaction cached, use that //      UserTransaction to determine the status. // 2) If a transaction manager has been located, use //      that transaction manager to determine the status. // 3) Finally, as the last resort, try to lookup the //      UserTransaction via JNDI and use that to determine the //      status.	WITHOUT_CLASSIFICATION	0.9999960951103627	WITHOUT_CLASSIFICATION	3.1232304316850734E-6	DESIGN	7.162323160010918E-7	IMPLEMENTATION	6.103232823906625E-8	DEFECT	4.3279710438433524E-9	DOCUMENTATION	6.659034290477115E-11	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.9954271247081595	WITHOUT_CLASSIFICATION	0.004322989338518281	DESIGN	1.7356294724047073E-4	IMPLEMENTATION	4.7901055112023405E-5	DEFECT	1.831782340941365E-5	DOCUMENTATION	1.0104127560420165E-5	TEST
//swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.9994735969663083	WITHOUT_CLASSIFICATION	2.742775242390343E-4	IMPLEMENTATION	2.0602864113917433E-4	DESIGN	4.183069416913977E-5	DEFECT	2.6866593557954797E-6	TEST	1.579514788459744E-6	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.9999963752344354	WITHOUT_CLASSIFICATION	1.6611956224969115E-6	DESIGN	1.3530261178963673E-6	DEFECT	3.858545251477314E-7	IMPLEMENTATION	1.6282559255684688E-7	DOCUMENTATION	6.186370646226146E-8	TEST
// we need to dirty check many-to-ones with not-found="ignore" in order  // to update the cache (not the database), since in this case a null // entity reference can lose information	WITHOUT_CLASSIFICATION	0.9999163136729061	WITHOUT_CLASSIFICATION	4.292305258232499E-5	IMPLEMENTATION	3.07823900268066E-5	DEFECT	7.567276631240524E-6	DESIGN	2.39402136165952E-6	DOCUMENTATION	1.958649198693699E-8	TEST
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999840726981333	WITHOUT_CLASSIFICATION	1.5156781991486502E-5	IMPLEMENTATION	6.315383187159659E-7	DEFECT	7.22323522726601E-8	TEST	4.88926399096429E-8	DESIGN	1.7856564273583253E-8	DOCUMENTATION
// Regions can get instantiated in the course of normal work (e.g. // a named query region will be created the first time the query is // executed), so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.6658356084409578	WITHOUT_CLASSIFICATION	0.2844227751824961	DESIGN	0.04973653500347472	DEFECT	2.5536888109965292E-6	IMPLEMENTATION	1.9434301532252844E-6	TEST	5.842541070745893E-7	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9999819320779024	WITHOUT_CLASSIFICATION	9.064369472668741E-6	IMPLEMENTATION	7.781194697612062E-6	DESIGN	9.278945974303311E-7	TEST	1.9145384753984056E-7	DEFECT	1.0300948228685128E-7	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9997561882190522	WITHOUT_CLASSIFICATION	2.0127558340284014E-4	IMPLEMENTATION	2.0699225870587217E-5	DESIGN	1.9825599966876318E-5	DEFECT	1.85460152767452E-6	TEST	1.5677017981185655E-7	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994746683072723	WITHOUT_CLASSIFICATION	5.138337013223745E-4	DESIGN	5.322202488686636E-6	IMPLEMENTATION	2.9732854316594183E-6	DEFECT	1.7667913113938207E-6	TEST	1.435712173633705E-6	DOCUMENTATION
// NOTE : this is being used from the process of shutting down a // SessionFactory. Specific things to consider: // (1) this clearing of the region should not propagate to // other nodes on the cluster (if any); this is the // cache-mode-local option bit... // (2) really just trying a best effort to cleanup after // ourselves; lock failures, etc are not critical here; // this is the fail-silently option bit...	WITHOUT_CLASSIFICATION	0.9999598467298761	DESIGN	3.842232824222586E-5	WITHOUT_CLASSIFICATION	1.6530251181536566E-6	DEFECT	7.611671475701948E-8	TEST	1.568246729652404E-9	IMPLEMENTATION	2.3180193491100555E-10	DOCUMENTATION
// need to extract the component values and check for subtype replacements...	WITHOUT_CLASSIFICATION	0.49575649020937046	DESIGN	0.30438290127986767	WITHOUT_CLASSIFICATION	0.19981857737535585	IMPLEMENTATION	3.4460534239419324E-5	DOCUMENTATION	6.010761100179572E-6	TEST	1.559840066371767E-6	DEFECT
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999978209935708	WITHOUT_CLASSIFICATION	2.1692481052778482E-6	DESIGN	3.583093831663574E-9	IMPLEMENTATION	3.4881693957969946E-9	DEFECT	2.3405797157066073E-9	TEST	3.464809550809569E-10	DOCUMENTATION
// for now, just "re-flatten" the metamodel since this is temporary stuff anyway (HHH-1907)	WITHOUT_CLASSIFICATION	0.7763287857333254	WITHOUT_CLASSIFICATION	0.22366647780317944	DESIGN	3.7674935938608128E-6	TEST	5.068088511616048E-7	DEFECT	3.2721009746913694E-7	IMPLEMENTATION	1.3495095281250165E-7	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9999001232193456	WITHOUT_CLASSIFICATION	9.957750876045014E-5	DESIGN	1.3922197884045338E-7	DOCUMENTATION	9.14118848500001E-8	IMPLEMENTATION	5.201773936701402E-8	DEFECT	1.662029089694547E-8	TEST
//This solution would allow us to eliminate the owner arg to disassemble(), but //what if the collection was null, and then later had elements added? seems unsafe //session.getPersistenceContext().getCollectionEntry( (PersistentCollection) value ).getKey();	WITHOUT_CLASSIFICATION	0.9584666841904083	WITHOUT_CLASSIFICATION	0.041499159540356906	DESIGN	2.5324203909989825E-5	DEFECT	6.007697655914758E-6	IMPLEMENTATION	2.008337616267145E-6	TEST	8.160300526564463E-7	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999944663237025	WITHOUT_CLASSIFICATION	3.279438378809628E-6	DEFECT	1.1651852008184653E-6	IMPLEMENTATION	7.724736127230789E-7	DESIGN	2.4476109647987056E-7	TEST	7.181800864221337E-8	DOCUMENTATION
// some collections are not lazy:	WITHOUT_CLASSIFICATION	0.9999270799965392	WITHOUT_CLASSIFICATION	4.1014308837709574E-5	DESIGN	2.5578323851804204E-5	IMPLEMENTATION	3.3974120271920863E-6	DEFECT	2.4177054931048932E-6	TEST	5.122532510464212E-7	DOCUMENTATION
// Here we don't want to suspend the tx. If we do: // 1) We might be caching query results that reflect uncommitted // changes. No tx == no WL on cache node, so other threads // can prematurely see those query results // 2) No tx == immediate replication. More overhead, plus we // spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.9991233020371054	WITHOUT_CLASSIFICATION	8.698139792541486E-4	DESIGN	6.8617814363871424E-6	DEFECT	1.2490010554478269E-8	DOCUMENTATION	9.35352249639432E-9	TEST	3.586710533820666E-10	IMPLEMENTATION
// return the (fully resolved) identifier value, but do not resolve // to the actual referenced entity instance // NOTE: the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.9999999973303811	WITHOUT_CLASSIFICATION	1.892771792173492E-9	DEFECT	3.08104833775681E-10	IMPLEMENTATION	3.0313490677849844E-10	DESIGN	9.617295505946142E-11	TEST	6.943444252038839E-11	DOCUMENTATION
// Add a zero (or quite low) timeout option so we don't block. // Ignore any TimeoutException. Basically we forego caching the // query result in order to avoid blocking. // Reads are done with suspended tx, so they should not hold the // lock for long.  Not caching the query result is OK, since // any subsequent read will just see the old result with its // out-of-date timestamp; that result will be discarded and the // db query performed again.	WITHOUT_CLASSIFICATION	0.9996070407281499	WITHOUT_CLASSIFICATION	2.8497512821016555E-4	DEFECT	8.907312923222276E-5	IMPLEMENTATION	1.866014744732778E-5	DESIGN	2.075273767886717E-7	TEST	4.333958365207394E-8	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9998835239141677	WITHOUT_CLASSIFICATION	1.158493421184911E-4	DESIGN	5.284841870283754E-7	TEST	5.741752344604922E-8	DEFECT	3.799627221775217E-8	IMPLEMENTATION	2.845731206943062E-9	DOCUMENTATION
// We have the JBCWriteMutex, so no other *local* thread will  // be trying to write this key.  // It's possible here some remote thread has come in and // changed the values again, but since we are reading the // values to write to JBC right now, we know we are writing // the latest values; i.e. we don't assume that what we cached // in entry.update() above is what we should write to JBC *now*. // Our write could be redundant, i.e. we are writing what // some remote thread just came in an wrote.  There is a chance  // that yet another remote thread will update us, and we'll then // overwrite that later data in JBC.  But, all remote nodes will // ignore that change in their localCache; the only place it  // will live will be in JBC, where it can only effect the  // initial state transfer values on newly joined nodes  // (i.e. populateLocalCache()).	WITHOUT_CLASSIFICATION	0.99999999999771	WITHOUT_CLASSIFICATION	1.0899637627058158E-12	DESIGN	7.03410363872464E-13	DEFECT	4.628374902541608E-13	TEST	1.7015717540633033E-14	DOCUMENTATION	1.6583761913590084E-14	IMPLEMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999738582603711	WITHOUT_CLASSIFICATION	2.0190583519917246E-5	DEFECT	4.458170255442737E-6	DOCUMENTATION	1.3810151109506454E-6	DESIGN	9.96026683042812E-8	IMPLEMENTATION	1.236807422229185E-8	TEST
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999738582603711	WITHOUT_CLASSIFICATION	2.0190583519917246E-5	DEFECT	4.458170255442737E-6	DOCUMENTATION	1.3810151109506454E-6	DESIGN	9.96026683042812E-8	IMPLEMENTATION	1.236807422229185E-8	TEST
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9971676729668284	WITHOUT_CLASSIFICATION	0.0015244838011487373	DESIGN	6.315051070749238E-4	TEST	4.427116011425445E-4	IMPLEMENTATION	1.7944342468951044E-4	DEFECT	5.418309911586879E-5	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.8821734104942146	WITHOUT_CLASSIFICATION	0.11648766582630844	DESIGN	0.0012969283427300903	IMPLEMENTATION	3.1958509143097164E-5	DEFECT	6.230578072380751E-6	TEST	3.8062495315057387E-6	DOCUMENTATION
// we need to obtain the lock before any actions are // executed, since this may be an inverse="true" // bidirectional association and it is one of the // earlier entity actions which actually updates // the database (this action is resposible for // second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.9999963236863711	WITHOUT_CLASSIFICATION	3.116293162908518E-6	IMPLEMENTATION	3.067626507649452E-7	DESIGN	2.055808661458661E-7	DOCUMENTATION	3.775828784217681E-8	TEST	9.918661128271059E-9	DEFECT
//postDelete: // After actually deleting a row, record the fact that the instance no longer  // exists on the database (needed for identity-column key generation), and // remove it from the session cache	WITHOUT_CLASSIFICATION	0.9976892537882832	WITHOUT_CLASSIFICATION	0.0023107192543714624	DESIGN	2.4328468360209957E-8	DEFECT	1.0751960136602428E-9	TEST	7.850970167759098E-10	DOCUMENTATION	7.685838440782292E-10	IMPLEMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999893990420282	WITHOUT_CLASSIFICATION	6.19448247116322E-6	DESIGN	1.7013476633194105E-6	DEFECT	1.3054935329138277E-6	IMPLEMENTATION	1.3054185616261447E-6	DOCUMENTATION	9.42157426849326E-8	TEST
//TODO find a decent name before documenting	DOCUMENTATION	0.929742690688277	WITHOUT_CLASSIFICATION	0.06540464981427958	DOCUMENTATION	0.0023136570532915845	IMPLEMENTATION	0.0015389612083126921	DESIGN	9.492330950263363E-4	DEFECT	5.08081408128037E-5	TEST
//FIXME we don't have the associated entity table name here, has to be done in a second pass	DEFECT	0.9534843979391157	WITHOUT_CLASSIFICATION	0.04619242360012857	DESIGN	3.1016568939109173E-4	IMPLEMENTATION	6.254042125477441E-6	TEST	5.274579839310802E-6	DOCUMENTATION	1.4841493999665464E-6	DEFECT
// For a one-to-many, a <bag> is not really a bag; // it is *really* a set, since it can't contain the // same element twice. It could be considered a bug // in the mapping dtd that <bag> allows <one-to-many>.	DEFECT	0.982567737559641	WITHOUT_CLASSIFICATION	0.010369954804782465	DESIGN	0.004577007156313496	DEFECT	0.0024850360948590285	IMPLEMENTATION	2.2467366049928328E-7	TEST	3.9710743606088044E-8	DOCUMENTATION
// RDMS does not directly support the trim() function, we use rtrim() and ltrim()	DEFECT	0.9998334430561481	WITHOUT_CLASSIFICATION	1.2629489404625318E-4	IMPLEMENTATION	2.2980081969685207E-5	DESIGN	1.6149545267788638E-5	DEFECT	7.708424564999606E-7	DOCUMENTATION	3.615801116642695E-7	TEST
/*         * The following types are not supported in RDMS/JDBC and therefore commented out.         * However, in some cases, mapping them to CHARACTER columns works         * for many applications, but does not work for all cases.         */	DEFECT	0.624132465042518	WITHOUT_CLASSIFICATION	0.3752045309079827	DEFECT	4.883602420997434E-4	DESIGN	9.913307111248773E-5	DOCUMENTATION	7.330471450088405E-5	TEST	2.206021786161583E-6	IMPLEMENTATION
// The preference here would be //   SQLFunctionTemplate( Hibernate.TIMESTAMP, "current_timestamp(?1)", false) // but this appears not to work. // Jay Nance 2006-09-22	DEFECT	0.9696539006071798	DEFECT	0.020632787360456314	WITHOUT_CLASSIFICATION	0.007674564375282662	DESIGN	0.0019006088069357815	IMPLEMENTATION	7.121775056504484E-5	TEST	6.692109958024755E-5	DOCUMENTATION
// note: at least my local SQL Server 2005 Express shows this not working...	DEFECT	0.9820555107084985	DESIGN	0.013090862713473737	DEFECT	0.004599051628133453	WITHOUT_CLASSIFICATION	2.491532667442552E-4	TEST	3.907403754257059E-6	DOCUMENTATION	1.5142793958644962E-6	IMPLEMENTATION
// note: at least my local MySQL 5.1 install shows this not working...	DEFECT	0.9535537318203833	DESIGN	0.03992794072837388	DEFECT	0.006359785407928238	WITHOUT_CLASSIFICATION	8.080262348767764E-5	IMPLEMENTATION	6.631465583748269E-5	TEST	1.1424763989419626E-5	DOCUMENTATION
/*	DEFECT	0.9624352627533524	WITHOUT_CLASSIFICATION	0.02618387964556663	DESIGN	0.007498836067607672	DEFECT	0.003664986289146738	IMPLEMENTATION	1.1191917782725857E-4	DOCUMENTATION	1.0511606649930399E-4	TEST
//Don't need this, because we should never ever be selecting no columns in an insert ... select... //and because it causes a bug on DB2	DEFECT	0.9980904169218462	WITHOUT_CLASSIFICATION	0.0018188375763549776	DESIGN	5.535558431730255E-5	TEST	3.1967929731391275E-5	DEFECT	3.2846764336615565E-6	DOCUMENTATION	1.3731131658502801E-7	IMPLEMENTATION
// TODO : this is broke for subqueries in statements other than selects...	DEFECT	0.9172226204371405	DESIGN	0.03697670721338881	WITHOUT_CLASSIFICATION	0.03669880118455171	DEFECT	0.008126228314225143	TEST	6.870994699566489E-4	IMPLEMENTATION	2.8854338073711213E-4	DOCUMENTATION
// TODO : should this be an error?	DEFECT	0.9895499678512325	DESIGN	0.005094391187535662	WITHOUT_CLASSIFICATION	0.0036030310884403827	IMPLEMENTATION	9.793201462258224E-4	TEST	6.323879105228873E-4	DEFECT	1.4090181604272412E-4	DOCUMENTATION
// TODO : not sure which (either?) is correct, could not find docs on how to do this. // did find various blogs and forums mentioning that select CURRENT_TIMESTAMP // does not work...	DEFECT	0.960588012048649	DESIGN	0.03513662018131257	DEFECT	0.003885642373736332	TEST	2.557887325322741E-4	WITHOUT_CLASSIFICATION	9.523467322042356E-5	DOCUMENTATION	3.870199054945964E-5	IMPLEMENTATION
// TODO: figure out how this should be set. /////////////////////////////////////////////////////////////////////////////// // This was the reason for failures regarding INDEX_OP and subclass joins on // theta-join dialects; not sure what behaviour we were trying to emulate ;) //	DEFECT	0.982887078392105	DESIGN	0.017071960249749978	DEFECT	3.514641584483031E-5	WITHOUT_CLASSIFICATION	5.048854908101893E-6	IMPLEMENTATION	7.290091070285307E-7	TEST	3.707828510555442E-8	DOCUMENTATION
//TODO: would be nice to use false, but issues with MS SQL	DEFECT	0.836058730724576	DESIGN	0.07679186548462401	DEFECT	0.0763519333254921	WITHOUT_CLASSIFICATION	0.008429656748591287	IMPLEMENTATION	0.001840281341994441	TEST	5.275323747222567E-4	DOCUMENTATION
//TODO: would be nice to use false, but issues with MS SQL	DEFECT	0.836058730724576	DESIGN	0.07679186548462401	DEFECT	0.0763519333254921	WITHOUT_CLASSIFICATION	0.008429656748591287	IMPLEMENTATION	0.001840281341994441	TEST	5.275323747222567E-4	DOCUMENTATION
// TODO: cannot use generateSuffixes() - it handles the initial suffix differently.	DEFECT	0.9999675082935157	DESIGN	2.1028794935066973E-5	IMPLEMENTATION	9.750500502077783E-6	WITHOUT_CLASSIFICATION	8.174519065021536E-7	DEFECT	6.050967973645555E-7	DOCUMENTATION	2.898623432530746E-7	TEST
// starts with an alias (old style) // semi-bad thing about this: can't re-alias another alias.....	DEFECT	0.9987257089754731	WITHOUT_CLASSIFICATION	0.00125101141523431	DESIGN	1.761418760873069E-5	DEFECT	5.642221544081072E-6	TEST	2.0461569902548942E-8	DOCUMENTATION	2.7385697683140975E-9	IMPLEMENTATION
//TODO: BUG! this currently fails for named queries for non-POJO entities	DEFECT	0.6589470641358554	DESIGN	0.2034672597744789	DEFECT	0.07736902316887469	IMPLEMENTATION	0.05467718364241285	WITHOUT_CLASSIFICATION	0.0034851910974780325	TEST	0.0020542781809002983	DOCUMENTATION
// this call is side-effecty	DEFECT	0.9999847290479473	WITHOUT_CLASSIFICATION	1.417427153699439E-5	DESIGN	5.236538809575399E-7	IMPLEMENTATION	3.2704505070736933E-7	TEST	1.6923661571067759E-7	DEFECT	7.674496835389486E-8	DOCUMENTATION
//TODO: old version did not require hashmap lookup: //keys[collectionOwner].getIdentifier()	DEFECT	0.9899476259348539	WITHOUT_CLASSIFICATION	0.007924631815401014	DEFECT	0.0015168593836072416	IMPLEMENTATION	6.090014975522987E-4	DESIGN	9.774612296687336E-7	DOCUMENTATION	9.039073560174184E-7	TEST
//TODO: when this is the entry point, we should use an INNER_JOIN for fetching the many-to-many elements!	DEFECT	0.9849142689151241	WITHOUT_CLASSIFICATION	0.008364290457039633	DEFECT	0.006514910861719851	DESIGN	1.5600047813049486E-4	IMPLEMENTATION	4.090529819659938E-5	DOCUMENTATION	9.623989789213717E-6	TEST
// this is only needed (afaict) for processing results from the query cache; // however, this cannot possibly work in the case of discovered types...	DEFECT	0.5140221405651049	DEFECT	0.48239004964835136	WITHOUT_CLASSIFICATION	0.0035729941479796653	DESIGN	1.2235883183501746E-5	TEST	2.192206309123642E-6	DOCUMENTATION	3.875490714635914E-7	IMPLEMENTATION
//TODO: this requires that the collection is defined after the //      referenced property in the mapping file (ok?)	DEFECT	0.9502468536012378	WITHOUT_CLASSIFICATION	0.04940607106876205	DESIGN	1.988992897597514E-4	IMPLEMENTATION	7.314108651038293E-5	DEFECT	6.457940257375776E-5	TEST	1.045555115621605E-5	DOCUMENTATION
//TODO: is this completely correct?	DEFECT	0.5018923856595509	DESIGN	0.4975136728673633	WITHOUT_CLASSIFICATION	2.206405384894977E-4	DEFECT	1.97044160369007E-4	IMPLEMENTATION	1.4118659077403927E-4	TEST	3.507018345336572E-5	DOCUMENTATION
// three general cases we check here as to whether to render a physical SQL join: // 1) is our parent a DotNode as well?  If so, our property reference is // 	DEFECT	0.9850050216220563	WITHOUT_CLASSIFICATION	0.01497092778588604	DESIGN	1.8076246279912758E-5	DEFECT	5.632136980660385E-6	DOCUMENTATION	2.6083492439171733E-7	IMPLEMENTATION	8.137387264970428E-8	TEST
// TODO : currently we really do not handle ValueInclusion.PARTIAL... // ValueInclusion.PARTIAL would indicate parts of a component need to // be included in the select; currently we then just render the entire // component into the select clause in that case.	DEFECT	0.9919688786968146	IMPLEMENTATION	0.006838682302225526	DESIGN	0.0010944210357815966	DEFECT	9.25998043161937E-5	WITHOUT_CLASSIFICATION	4.908357607579564E-6	DOCUMENTATION	5.098032545487976E-7	TEST
//TODO: inexact, what we really need to know is: are any outer joins used?	DEFECT	0.9998703056976864	DESIGN	4.268948204997119E-5	IMPLEMENTATION	4.1085103629886475E-5	WITHOUT_CLASSIFICATION	2.2444794941230393E-5	DOCUMENTATION	2.071530215733557E-5	DEFECT	2.759619535301153E-6	TEST
// todo : this call will not work for anything other than pojos!	DEFECT	0.7904484465149116	DEFECT	0.13493435584710772	DESIGN	0.05788315343215486	WITHOUT_CLASSIFICATION	0.0160827248194909	IMPLEMENTATION	6.375883104224053E-4	TEST	1.3731075912435344E-5	DOCUMENTATION
//TODO: currently we don't know a SessionFactory reference when building the Tuplizer //      THIS IS A BUG (embedded-xml=false on component) // TODO : fix this after HHH-1907 is complete	DEFECT	0.9999415271477232	DESIGN	5.6000917298716795E-5	DEFECT	1.8458992711122357E-6	DOCUMENTATION	5.095068320220062E-7	IMPLEMENTATION	8.553548010439707E-8	TEST	3.099339481667532E-8	WITHOUT_CLASSIFICATION
// TODO: this disables laziness even in non-pojo entity modes:	DEFECT	0.45744477582719517	IMPLEMENTATION	0.36919466987583716	DESIGN	0.15690235386406734	WITHOUT_CLASSIFICATION	0.010926296477591328	DEFECT	0.003919046931791744	DOCUMENTATION	0.0016128570235173034	TEST
//TODO: currently broken for unique-key references (does not detect //      change to unique key property of the associated object) //the owner of the association is not the owner of the id	DEFECT	0.9973198580082057	WITHOUT_CLASSIFICATION	0.0021391772740170885	DEFECT	4.2800714474120724E-4	IMPLEMENTATION	8.136839500728595E-5	DOCUMENTATION	3.0217547754445936E-5	TEST	1.3716302742292046E-6	DESIGN
//TODO: entities CAN be compared, by PK, fix this! -> only if/when we can extract the id values....	DEFECT	0.8965557463817319	DESIGN	0.07579978640157357	WITHOUT_CLASSIFICATION	0.02053912610196945	IMPLEMENTATION	0.004406685586978637	DEFECT	0.0019799660215359272	TEST	7.186895062106165E-4	DOCUMENTATION
//TODO: entities CAN be compared, by PK and entity name, fix this!	DEFECT	0.8716407006726009	DESIGN	0.1223824770589607	WITHOUT_CLASSIFICATION	0.0029717595325275195	IMPLEMENTATION	0.002518244054887816	DEFECT	2.7487007820955887E-4	TEST	2.1194860281344258E-4	DOCUMENTATION
//TODO: this is kinda inconsistent with CollectionType	DEFECT	0.9409746050375092	DESIGN	0.03495281770156837	WITHOUT_CLASSIFICATION	0.011815107182142405	IMPLEMENTATION	0.006817519741790511	TEST	0.004589292056003018	DEFECT	8.506582809866468E-4	DOCUMENTATION
//TODO: would be nice to use false, but issues with MS SQL	DEFECT	0.836058730724576	DESIGN	0.07679186548462401	DEFECT	0.0763519333254921	WITHOUT_CLASSIFICATION	0.008429656748591287	IMPLEMENTATION	0.001840281341994441	TEST	5.275323747222567E-4	DOCUMENTATION
// TODO: does not work for EntityMode.DOM4J yet!	DEFECT	0.9941157671727396	DEFECT	0.003950611828658875	DESIGN	0.0016858675057496767	IMPLEMENTATION	2.0855558719845373E-4	TEST	3.522788850658828E-5	DOCUMENTATION	3.970017146785439E-6	WITHOUT_CLASSIFICATION
//TODO: currently broken for unique-key references (does not detect //      change to unique key property of the associated object)	DEFECT	0.9980921886866315	WITHOUT_CLASSIFICATION	0.001153373611905475	DEFECT	3.799405775184958E-4	IMPLEMENTATION	3.061634435424905E-4	DOCUMENTATION	5.039559832797007E-5	TEST	1.793808207402653E-5	DESIGN
//TODO: not really completely correct, since //      the uoe could occur while resolving //      associations, leaving the PC in an //      inconsistent state	DEFECT	0.9601591794272164	WITHOUT_CLASSIFICATION	0.039352183835365206	DEFECT	3.300706230400989E-4	TEST	9.980871492126237E-5	DESIGN	3.059317931699549E-5	DOCUMENTATION	2.816422013993865E-5	IMPLEMENTATION
// could happen for custom Criteria impls.  Not likely, but... // 	DEFECT	0.9923544728632274	WITHOUT_CLASSIFICATION	0.006604829297754151	DESIGN	7.947575038259894E-4	DEFECT	1.3611442562508789E-4	TEST	1.0895324246792478E-4	IMPLEMENTATION	8.726670995292953E-7	DOCUMENTATION
// This does not support the Cache SQL 'DISTINCT BY (comma-list)' extensions, // but this extension is not supported through Hibernate anyway.	DEFECT	0.9998897100340159	WITHOUT_CLASSIFICATION	1.0634161343386823E-4	DESIGN	3.0291536103063958E-6	DEFECT	8.739291323361268E-7	TEST	3.1802979131541424E-8	DOCUMENTATION	1.3466828235167556E-8	IMPLEMENTATION
// note that this timestamp is not correct if the connection provider // returns an older JDBC connection that was associated with a // transaction that was already begun before openSession() was called // (don't know any possible solution to this!)	DEFECT	0.9731843148396864	WITHOUT_CLASSIFICATION	0.02037895758078416	IMPLEMENTATION	0.006281248694844505	DESIGN	9.777518283281226E-5	TEST	5.560096781695005E-5	DEFECT	2.1027340351444E-6	DOCUMENTATION
//no need to take a snapshot - this is a  //performance optimization, but not really //important, except for entities with huge  //mutable property values	DEFECT	0.9965874777045595	WITHOUT_CLASSIFICATION	0.0028955913328999596	DEFECT	4.77375628319962E-4	DESIGN	2.2446574297707885E-5	TEST	1.4481051191352366E-5	DOCUMENTATION	2.6277087317166054E-6	IMPLEMENTATION
// TODO : this really needs to be delayed unitl after we definitively know the operand node type; // where this is currently a problem is parameters for which where we cannot unequivocally // resolve an expected type	DEFECT	0.9145253803503263	DESIGN	0.05316851201192842	DEFECT	0.028059278355059926	IMPLEMENTATION	0.0024804654680234775	WITHOUT_CLASSIFICATION	0.0015501103750997106	DOCUMENTATION	2.1625343956230102E-4	TEST
// First, validate all the enabled filters... //TODO: this implementation has bad performance	DEFECT	0.8788060832581858	IMPLEMENTATION	0.10865003578882769	WITHOUT_CLASSIFICATION	0.012221698496118889	DESIGN	2.6440934859907697E-4	DEFECT	3.2455298201019955E-5	DOCUMENTATION	2.5317810067599193E-5	TEST
// TODO: what if batchUpdate is a callablestatement ? // calls executeBatch()	DEFECT	0.5167229483378103	WITHOUT_CLASSIFICATION	0.2809111420540777	DESIGN	0.16541637904309617	IMPLEMENTATION	0.03133849840516232	DEFECT	0.004659237541429357	TEST	9.517946184241711E-4	DOCUMENTATION
// assume that the row was not there since it previously had only null // values, so do an INSERT instead //TODO: does not respect dynamic-insert	DEFECT	0.99991971246407	WITHOUT_CLASSIFICATION	6.353039704485234E-5	DESIGN	1.0754457040266314E-5	DEFECT	3.4890217135641026E-6	TEST	1.3742891510184865E-6	DOCUMENTATION	1.1393709802326736E-6	IMPLEMENTATION
//TODO: passing null here, because this method is not really used for DOM4J at the moment //      but it is still a bug, if we don't get rid of this!	DEFECT	0.7507883630053341	DESIGN	0.15510010082773973	DEFECT	0.08238903238745221	WITHOUT_CLASSIFICATION	0.008949684053261199	IMPLEMENTATION	0.0026141230267893744	TEST	1.5869669942327497E-4	DOCUMENTATION
//note that this implementation is kinda broken //for components with many-to-one associations	DEFECT	0.9994132017685218	WITHOUT_CLASSIFICATION	3.5054091757886206E-4	IMPLEMENTATION	1.3176090044505196E-4	DESIGN	6.98392396208708E-5	TEST	3.2413747875409736E-5	DEFECT	2.2434259580024025E-6	DOCUMENTATION
// TODO: at the point where we are resolving collection references, we don't // know if the uk value has been resolved (depends if it was earlier or // later in the mapping document) - now, we could try and use e.getStatus() // to decide to semiResolve(), trouble is that initializeEntity() reuses // the same array for resolved and hydrated values	DEFECT	0.5489290257223473	WITHOUT_CLASSIFICATION	0.2546533890256999	IMPLEMENTATION	0.11805261581784908	DESIGN	0.06183832614814639	DEFECT	0.016483957417758554	DOCUMENTATION	4.268586819906553E-5	TEST
//TODO: This is assertion is disabled because there is a bug that means the //	DEFECT	0.9780819817263924	WITHOUT_CLASSIFICATION	0.018249724120139834	DEFECT	0.0030586309878900373	DESIGN	3.7046709069886473E-4	IMPLEMENTATION	2.3658160246173735E-4	TEST	2.6144724171516764E-6	DOCUMENTATION
// This doesn't actually seem to work but it *might* // work on some dbs. Also it doesn't work if there // are multiple columns of results because it // is not accounting for the suffix: // return new String[] { getDiscriminatorColumnName() };	DEFECT	0.6904987710800946	WITHOUT_CLASSIFICATION	0.3094924676415159	DESIGN	8.705932076625836E-6	DEFECT	5.188041803578352E-8	TEST	3.3836384431512403E-9	DOCUMENTATION	8.225639540976245E-11	IMPLEMENTATION
// TODO: Deal with the "optional" attribute in the <join> mapping; // this code assumes that optional defaults to "true" because it // doesn't actually seem to work in the fetch="join" code // // Note that actual proper handling of optional-ality here is actually // more involved than this patch assumes.  Remember that we might have // multiple <join/> mappings associated with a single entity.  Really // a couple of things need to happen to properly handle optional here: //  1) First and foremost, when handling multiple <join/>s, we really //      should be using the entity root table as the driving table; //      another option here would be to choose some non-optional joined //      table to use as the driving table.  In all likelihood, just using //      the root table is much simplier //  2) Need to add the FK columns corresponding to each joined table //      to the generated select list; these would then be used when //      iterating the result set to determine whether all non-optional //      data is present // My initial thoughts on the best way to deal with this would be // to introduce a new SequentialSelect abstraction that actually gets // generated in the persisters (ok, SingleTable...) and utilized here. // It would encapsulated all this required optional-ality checking...	DEFECT	0.7925387714120286	DESIGN	0.20730815679138992	WITHOUT_CLASSIFICATION	5.193383489298675E-5	IMPLEMENTATION	4.642345386184105E-5	DEFECT	3.893959635795892E-5	TEST	1.5774911468668636E-5	DOCUMENTATION
// todo : what else to do here?	DESIGN	0.9360970067112369	WITHOUT_CLASSIFICATION	0.047945003007682785	IMPLEMENTATION	0.0157947754187496	DESIGN	7.97714272973841E-5	DEFECT	6.965310555314862E-5	TEST	1.3790329480284596E-5	DOCUMENTATION
//put() has nowait semantics, is this really appropriate? //note that it needs to be async replication, never local or sync	DESIGN	0.580422167141959	WITHOUT_CLASSIFICATION	0.3965583982350011	DESIGN	0.0203308732031823	DEFECT	0.002274736252299195	IMPLEMENTATION	2.59507893258071E-4	DOCUMENTATION	1.5431727430015966E-4	TEST
// 'hibernate.temp.use_jdbc_metadata_defaults' is a temporary magic value. // The need for it is intended to be alleviated with future developement, thus it is // not defined as an Environment constant... // // it is used to control whether we should consult the JDBC metadata to determine // certain Settings default values; it is useful to *not* do this when the database // may not be available (mainly in tools usage).	DESIGN	0.998320079763821	WITHOUT_CLASSIFICATION	0.0016799160368341601	DESIGN	2.5154176250865546E-9	TEST	1.3988237977940533E-9	DEFECT	2.849987551883472E-10	DOCUMENTATION	1.0459817051011556E-13	IMPLEMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.8854724414832335	DESIGN	0.11435474102911151	WITHOUT_CLASSIFICATION	1.2766850853538473E-4	DEFECT	2.8122885586250073E-5	TEST	9.311874059779425E-6	DOCUMENTATION	7.71421947361133E-6	IMPLEMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.8854724414832335	DESIGN	0.11435474102911151	WITHOUT_CLASSIFICATION	1.2766850853538473E-4	DEFECT	2.8122885586250073E-5	TEST	9.311874059779425E-6	DOCUMENTATION	7.71421947361133E-6	IMPLEMENTATION
// todo : eventually merge this with TreeCache and just add optional opt-lock support there.	DESIGN	0.9733059180523032	WITHOUT_CLASSIFICATION	0.025045157516168787	IMPLEMENTATION	0.0016115479538484452	DESIGN	1.4831396745382803E-5	TEST	1.2458270100080023E-5	DEFECT	1.0086810834100064E-5	DOCUMENTATION
// can happen because of the multiple ways Cache.remove() // can be invoked :(	DESIGN	0.9999939540012095	WITHOUT_CLASSIFICATION	6.018612417719574E-6	DESIGN	1.8249610655320717E-8	DEFECT	3.861985690860669E-9	DOCUMENTATION	3.3371543131303217E-9	IMPLEMENTATION	1.9376222829172435E-9	TEST
// work around the "feature" where tree cache is validating the // inserted node during the next transaction.  no idea...	DESIGN	0.9933785022129521	WITHOUT_CLASSIFICATION	0.004322449934842881	DESIGN	0.0022846084988574172	DEFECT	5.9553871690933025E-6	IMPLEMENTATION	5.495999520660796E-6	TEST	2.987966657798146E-6	DOCUMENTATION
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.9746348023514263	DESIGN	0.02529948148116446	WITHOUT_CLASSIFICATION	4.371666460167318E-5	DOCUMENTATION	1.0889932093688894E-5	DEFECT	5.798585658831078E-6	TEST	5.3109850549585896E-6	IMPLEMENTATION
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.9746348023514263	DESIGN	0.02529948148116446	WITHOUT_CLASSIFICATION	4.371666460167318E-5	DOCUMENTATION	1.0889932093688894E-5	DEFECT	5.798585658831078E-6	TEST	5.3109850549585896E-6	IMPLEMENTATION
// FIXME Hacky workaround to JBCACHE-1202	DESIGN	0.9975358761141417	DESIGN	0.0024527600123811742	DEFECT	7.91088658098573E-6	IMPLEMENTATION	2.8409583492240957E-6	DOCUMENTATION	5.127308500457675E-7	WITHOUT_CLASSIFICATION	9.92976969770345E-8	TEST
// FIXME Hacky workaround to JBCACHE-1202	DESIGN	0.9975358761141417	DESIGN	0.0024527600123811742	DEFECT	7.91088658098573E-6	IMPLEMENTATION	2.8409583492240957E-6	DOCUMENTATION	5.127308500457675E-7	WITHOUT_CLASSIFICATION	9.92976969770345E-8	TEST
// TODO: I considered validating TS cache config here, // but decided to defer unti getTimestampsCacheInstance() in case the  // cache is never actually used	DESIGN	0.9567185383814771	IMPLEMENTATION	0.03486855539123269	WITHOUT_CLASSIFICATION	0.0061763086734879106	DESIGN	0.002201582239344981	DEFECT	3.2072827643212916E-5	DOCUMENTATION	2.9424868141711875E-6	TEST
// TODO Is this a valid operation on a timestamps cache?	DESIGN	0.9822737912147149	DESIGN	0.01370554147533456	IMPLEMENTATION	0.0037619132480379274	WITHOUT_CLASSIFICATION	2.2020186886548341E-4	TEST	3.2171733255004343E-5	DOCUMENTATION	6.380459792087561E-6	DEFECT
// TODO Is this a valid operation on a timestamps cache?	DESIGN	0.9822737912147149	DESIGN	0.01370554147533456	IMPLEMENTATION	0.0037619132480379274	WITHOUT_CLASSIFICATION	2.2020186886548341E-4	TEST	3.2171733255004343E-5	DOCUMENTATION	6.380459792087561E-6	DEFECT
// TODO Why not use the timestamp in a DataVersion?	DESIGN	0.9832376249649225	IMPLEMENTATION	0.016043284937710883	DESIGN	2.4330268378654695E-4	DEFECT	1.940204846804303E-4	WITHOUT_CLASSIFICATION	1.810498495090815E-4	DOCUMENTATION	1.0071707939047787E-4	TEST
// can happen because of the multiple ways Cache.remove() // can be invoked :(	DESIGN	0.9999939540012095	WITHOUT_CLASSIFICATION	6.018612417719574E-6	DESIGN	1.8249610655320717E-8	DEFECT	3.861985690860669E-9	DOCUMENTATION	3.3371543131303217E-9	IMPLEMENTATION	1.9376222829172435E-9	TEST
// work around the "feature" where tree cache is validating the // inserted node during the next transaction. no idea...	DESIGN	0.9940308295849635	WITHOUT_CLASSIFICATION	0.004044181231891722	DESIGN	0.0019068053990621162	DEFECT	9.358285467453879E-6	IMPLEMENTATION	5.741224050858362E-6	TEST	3.084274564358501E-6	DOCUMENTATION
//swaldman 2004-02-07: modify to allow null values to signify fall through to c3p0 PoolConfig defaults	DESIGN	0.9999663062639125	WITHOUT_CLASSIFICATION	3.094349962300641E-5	DESIGN	2.441644319933603E-6	DEFECT	1.6016588014067989E-7	DOCUMENTATION	8.867312024113222E-8	IMPLEMENTATION	5.975314414280634E-8	TEST
// turn hibernate.c3p0.* into c3p0.*, so c3p0 // gets a chance to see all hibernate.c3p0.*	DESIGN	0.9999890709308499	WITHOUT_CLASSIFICATION	1.0926600184974282E-5	DESIGN	1.1096311417272122E-9	DEFECT	4.989952934275018E-10	TEST	4.62687772784167E-10	DOCUMENTATION	3.976508424103079E-10	IMPLEMENTATION
//TODO: this bit actually has to be called after all cascades! //      but since identity insert is called *synchronously*, //      instead of asynchronously as other actions, it isn't	DESIGN	0.9987078903400465	WITHOUT_CLASSIFICATION	0.0012560686061783312	DESIGN	2.3445035907970055E-5	DEFECT	1.0476875497084076E-5	TEST	1.1769450414756076E-6	DOCUMENTATION	9.421973286877091E-7	IMPLEMENTATION
//TODO: reenable if we also fix the above todo	DESIGN	0.9882714243909314	WITHOUT_CLASSIFICATION	0.008694637659259407	DESIGN	0.0025162866533468913	IMPLEMENTATION	3.4720462438701517E-4	TEST	1.470761298662897E-4	DOCUMENTATION	2.337054220889912E-5	DEFECT
//TODO: inefficient if that cache is just going to ignore the updated state!	DESIGN	0.947674995466288	WITHOUT_CLASSIFICATION	0.04753095009184877	IMPLEMENTATION	0.004492697537439754	DESIGN	1.983910888763606E-4	DEFECT	5.1512312136773145E-5	DOCUMENTATION	5.145350341033372E-5	TEST
// we may be screwed here since the collection action is about to execute // and we do not know the final owner key value	DESIGN	0.99990596764981	WITHOUT_CLASSIFICATION	9.385467267077467E-5	DESIGN	7.999048355647715E-8	IMPLEMENTATION	7.571464427112436E-8	DEFECT	1.93844606571976E-8	TEST	2.5879307028101877E-9	DOCUMENTATION
/** Create an action that will evict collection and entity regions based on queryspaces (table names).	DESIGN	0.5014146541741699	DESIGN	0.38655252454758465	IMPLEMENTATION	0.10712800817181362	WITHOUT_CLASSIFICATION	0.004122383555065353	DEFECT	6.854363429876301E-4	TEST	9.699320837894321E-5	DOCUMENTATION
// todo : what else to do here?	DESIGN	0.9360970067112369	WITHOUT_CLASSIFICATION	0.047945003007682785	IMPLEMENTATION	0.0157947754187496	DESIGN	7.97714272973841E-5	DEFECT	6.965310555314862E-5	TEST	1.3790329480284596E-5	DOCUMENTATION
// todo : modify the class definition if not already transformed...	DESIGN	0.9945580324680523	WITHOUT_CLASSIFICATION	0.005116731469754344	DESIGN	3.170703397571509E-4	IMPLEMENTATION	6.605348975393062E-6	TEST	9.917369275659228E-7	DEFECT	5.68636533263466E-7	DOCUMENTATION
// todo : what else to do here?	DESIGN	0.9360970067112369	WITHOUT_CLASSIFICATION	0.047945003007682785	IMPLEMENTATION	0.0157947754187496	DESIGN	7.97714272973841E-5	DEFECT	6.965310555314862E-5	TEST	1.3790329480284596E-5	DOCUMENTATION
// this is called by SessionFactory irregardless; we just disregard here; // could also add a check to SessionFactory to only conditionally call start	DESIGN	0.9996301777604101	WITHOUT_CLASSIFICATION	3.647003390350687E-4	DESIGN	1.9312606193074145E-6	TEST	1.6084202536646801E-6	IMPLEMENTATION	9.458905276665787E-7	DEFECT	6.36329154276091E-7	DOCUMENTATION
// this is called by SessionFactory irregardless; we just disregard here; // could also add a check to SessionFactory to only conditionally call stop	DESIGN	0.9997237412474608	WITHOUT_CLASSIFICATION	2.6888476052581875E-4	DESIGN	3.671105075969425E-6	IMPLEMENTATION	1.9488782917384643E-6	TEST	1.2163209177072914E-6	DEFECT	5.376877280975533E-7	DOCUMENTATION
//TODO: to handle concurrent writes correctly, this should return a Lock to the client	DESIGN	0.9906103826973846	DESIGN	0.0071529786922165705	WITHOUT_CLASSIFICATION	0.001129391670116241	DEFECT	4.909209409497508E-4	TEST	3.2337713788900633E-4	IMPLEMENTATION	2.92948861444187E-4	DOCUMENTATION
//put() has nowait semantics, is this really appropriate? //note that it needs to be async replication, never local or sync	DESIGN	0.580422167141959	WITHOUT_CLASSIFICATION	0.3965583982350011	DESIGN	0.0203308732031823	DEFECT	0.002274736252299195	IMPLEMENTATION	2.59507893258071E-4	DOCUMENTATION	1.5431727430015966E-4	TEST
//TODO: to handle concurrent writes correctly, the client should pass in a Lock	DESIGN	0.8458513434714695	DESIGN	0.14300486324024295	WITHOUT_CLASSIFICATION	0.00451805481659146	DEFECT	0.004415380101765695	IMPLEMENTATION	0.0014448742238776765	TEST	7.654841460525777E-4	DOCUMENTATION
//TODO: assumes all collections disassemble to an array!	DESIGN	0.9996348031838261	WITHOUT_CLASSIFICATION	2.71480410344837E-4	DEFECT	3.573934242438028E-5	DESIGN	3.052184013717E-5	IMPLEMENTATION	2.2965696821619267E-5	TEST	4.48952644580425E-6	DOCUMENTATION
//TODO: reuse the PreLoadEvent	DESIGN	0.97247905625413	WITHOUT_CLASSIFICATION	0.023781433232926363	IMPLEMENTATION	0.00344153767056453	DESIGN	2.2343587731948718E-4	DOCUMENTATION	4.9498769908558815E-5	DEFECT	2.503819515098963E-5	TEST
// todo: this was added to support initializing an entity's EntityEntry snapshot during reattach; // this should be refactored to instead expose a method to assemble a EntityEntry based on this // state for return.	DESIGN	0.9207180317236697	DESIGN	0.07921467413695432	WITHOUT_CLASSIFICATION	4.481500378923904E-5	TEST	2.2390508097653944E-5	DEFECT	6.714968812085847E-8	DOCUMENTATION	2.1477800989676917E-8	IMPLEMENTATION
// todo : what is the implication of this?	DESIGN	0.996180598546379	WITHOUT_CLASSIFICATION	0.002492166814434092	DESIGN	0.001044847357710071	DOCUMENTATION	1.111481040755828E-4	DEFECT	9.104862355633577E-5	TEST	8.019055384506693E-5	IMPLEMENTATION
// use COUNT as the default.  This mimics the old behavior, although // NONE might be a better option moving forward in the case of callable	DESIGN	0.943476410665547	WITHOUT_CLASSIFICATION	0.05652238397362115	DESIGN	1.0618852676003013E-6	DEFECT	9.585728506162775E-8	TEST	4.569571710727965E-8	IMPLEMENTATION	1.922562064070066E-9	DOCUMENTATION
/* TODO: joinKeyColumnName & foreignKeyColumnName should be called either here or at a	DESIGN	0.5824258853821109	DESIGN	0.26630680549499897	IMPLEMENTATION	0.14374918998165795	WITHOUT_CLASSIFICATION	0.005440225180640266	DEFECT	0.0018391241019528127	TEST	2.3876985863912234E-4	DOCUMENTATION
//TODO: suck this into initLaziness!	DESIGN	0.5685660102712654	DESIGN	0.4078841436166888	WITHOUT_CLASSIFICATION	0.014141904919021609	DEFECT	0.004972737575226134	DOCUMENTATION	0.0024430438781389563	TEST	0.0019921597396590066	IMPLEMENTATION
// we have to set up the table later!! yuck	DESIGN	0.9999389155587923	WITHOUT_CLASSIFICATION	5.174058993203069E-5	DESIGN	5.7081705697457855E-6	DEFECT	3.010170172842361E-6	IMPLEMENTATION	4.277207331089776E-7	TEST	1.9778980002652782E-7	DOCUMENTATION
//TODO: better to degrade to lazy="false" if uninstrumented	DESIGN	0.9323577590245425	IMPLEMENTATION	0.04319631323905375	WITHOUT_CLASSIFICATION	0.019328733828372864	DESIGN	0.0030451122212042485	DOCUMENTATION	0.001152601983227868	TEST	9.194797035987526E-4	DEFECT
// todo : again, how *should* this work for non-pojo entities?	DESIGN	0.8255620406170764	WITHOUT_CLASSIFICATION	0.10759139223894043	IMPLEMENTATION	0.05854569505411961	DESIGN	0.006280268900939849	DEFECT	0.0017947887024676015	TEST	2.2581448645614933E-4	DOCUMENTATION
// TODO: this is a bit of copy/paste from IndexedCollection.createPrimaryKey()	DESIGN	0.4980639162491402	DESIGN	0.49238254154680505	IMPLEMENTATION	0.0085283746380548	DEFECT	7.652848946877071E-4	TEST	2.4711364934700583E-4	WITHOUT_CLASSIFICATION	1.2769021965205678E-5	DOCUMENTATION
// This inner class implements a case statement....perhaps im being a bit over-clever here	DESIGN	0.9638325814255416	WITHOUT_CLASSIFICATION	0.035440422983785295	DESIGN	6.674868432936223E-4	IMPLEMENTATION	4.5164764700960936E-5	DEFECT	1.384002259892246E-5	TEST	5.039600794964999E-7	DOCUMENTATION
//TODO: bad implementation, cos it depends upon ordering of mapping doc //      fixing this requires that Collection/PersistentClass gain access //      to the Mappings reference from Configuration (or the filterDefinitions //      map directly) sometime during Configuration.buildSessionFactory //      (after all the types/filter-defs are known and before building //      persisters).	DESIGN	0.9998942542015672	DESIGN	7.499046819976092E-5	IMPLEMENTATION	1.7796617976296407E-5	WITHOUT_CLASSIFICATION	1.133876150938819E-5	DOCUMENTATION	1.4286941722526439E-6	TEST	1.91256575157363E-7	DEFECT
//use of a stringbuffer to workaround a JDK bug	DESIGN	0.7897160293518662	DESIGN	0.1742426489812909	WITHOUT_CLASSIFICATION	0.03479118542406896	DEFECT	7.681371002824761E-4	IMPLEMENTATION	4.2648093367226073E-4	DOCUMENTATION	5.55182088190384E-5	TEST
// hack/workaround as sqlquery impl depend on having a key.	DESIGN	0.9999839011480435	DESIGN	1.2272974687285007E-5	DEFECT	2.694111728580163E-6	IMPLEMENTATION	1.0783287831985933E-6	WITHOUT_CLASSIFICATION	3.761142620049754E-8	TEST	1.5825331320137258E-8	DOCUMENTATION
//FIXME: get the PersistentClass	DESIGN	0.6319644546731359	WITHOUT_CLASSIFICATION	0.3381166674429558	DESIGN	0.026999837390704613	IMPLEMENTATION	0.0014854624130821313	TEST	0.0012370487202744297	DEFECT	1.9652935984707418E-4	DOCUMENTATION
//FIXME: get the PersistentClass	DESIGN	0.6319644546731359	WITHOUT_CLASSIFICATION	0.3381166674429558	DESIGN	0.026999837390704613	IMPLEMENTATION	0.0014854624130821313	TEST	0.0012370487202744297	DEFECT	1.9652935984707418E-4	DOCUMENTATION
//Icky workaround for MySQL bug:	DESIGN	0.7979479161283399	DESIGN	0.18351561738925673	WITHOUT_CLASSIFICATION	0.018314201470457807	DEFECT	1.0999561723830549E-4	DOCUMENTATION	8.078385511989567E-5	IMPLEMENTATION	3.1485539587330296E-5	TEST
//TODO: Somehow add the newly created foreign keys to the internal collection	DESIGN	0.956592847617197	WITHOUT_CLASSIFICATION	0.0369663859053193	IMPLEMENTATION	0.00482176054673678	DEFECT	8.991268193751248E-4	DOCUMENTATION	6.374678264886645E-4	DESIGN	8.241128488314085E-5	TEST
//TODO possibly relax that	DESIGN	0.9989373125985231	WITHOUT_CLASSIFICATION	0.0010018023415555167	IMPLEMENTATION	2.885066459912432E-5	DESIGN	1.3374415950002776E-5	DOCUMENTATION	9.339915555977942E-6	TEST	9.320063816354376E-6	DEFECT
//TODO possibly relax that	DESIGN	0.9989373125985231	WITHOUT_CLASSIFICATION	0.0010018023415555167	IMPLEMENTATION	2.885066459912432E-5	DESIGN	1.3374415950002776E-5	DOCUMENTATION	9.339915555977942E-6	TEST	9.320063816354376E-6	DEFECT
//TODO possibly relax that	DESIGN	0.9989373125985231	WITHOUT_CLASSIFICATION	0.0010018023415555167	IMPLEMENTATION	2.885066459912432E-5	DESIGN	1.3374415950002776E-5	DOCUMENTATION	9.339915555977942E-6	TEST	9.320063816354376E-6	DEFECT
//use of a stringbuffer to workaround a JDK bug	DESIGN	0.7897160293518662	DESIGN	0.1742426489812909	WITHOUT_CLASSIFICATION	0.03479118542406896	DEFECT	7.681371002824761E-4	IMPLEMENTATION	4.2648093367226073E-4	DOCUMENTATION	5.55182088190384E-5	TEST
//use a degenerated strategy for backward compatibility	DESIGN	0.9999922579255568	WITHOUT_CLASSIFICATION	4.609670451004236E-6	DESIGN	2.8433741329671447E-6	IMPLEMENTATION	1.2328469628226162E-7	DEFECT	1.1852379172375763E-7	TEST	4.7221371112350337E-8	DOCUMENTATION
// Sets can be just a view of a part of another collection. // do we need to copy it to be sure it won't be changing // underneath us? // ie. this.set.addAll(set);	DESIGN	0.9998598372051881	WITHOUT_CLASSIFICATION	8.468482155351436E-5	IMPLEMENTATION	2.9725502814820136E-5	DESIGN	2.2951903876809294E-5	DEFECT	2.7598276561764897E-6	TEST	4.0738910564275836E-8	DOCUMENTATION
//note that i parameter is now unused (delete it?)	DESIGN	0.9971364042661836	WITHOUT_CLASSIFICATION	0.002663284166241775	DESIGN	1.7046216656241495E-4	IMPLEMENTATION	2.3183533270156313E-5	TEST	5.96787400394344E-6	DEFECT	6.979937381552466E-7	DOCUMENTATION
//just to help out during the load (ugly, i know)	DESIGN	0.9525971622190292	WITHOUT_CLASSIFICATION	0.03761380571301727	IMPLEMENTATION	0.007811064505106689	DESIGN	0.0016128866681748236	DEFECT	2.187563744750351E-4	TEST	1.46324520196884E-4	DOCUMENTATION
// TODO : safe to interpret "map.remove(key) == null" as non-dirty?	DESIGN	0.5278487214443641	IMPLEMENTATION	0.41580459677761955	WITHOUT_CLASSIFICATION	0.02873768465256694	DESIGN	0.026751631030979446	DEFECT	6.14466077253868E-4	DOCUMENTATION	2.4290001721608E-4	TEST
// yick!  need this for proper serialization/deserialization handling...	DESIGN	0.9936081731229734	WITHOUT_CLASSIFICATION	0.004350322113985709	DESIGN	0.0018425350451348667	DEFECT	1.3370252458295173E-4	TEST	3.623888745055526E-5	IMPLEMENTATION	2.9028305872450368E-5	DOCUMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.8854724414832335	DESIGN	0.11435474102911151	WITHOUT_CLASSIFICATION	1.2766850853538473E-4	DEFECT	2.8122885586250073E-5	TEST	9.311874059779425E-6	DOCUMENTATION	7.71421947361133E-6	IMPLEMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.8854724414832335	DESIGN	0.11435474102911151	WITHOUT_CLASSIFICATION	1.2766850853538473E-4	DEFECT	2.8122885586250073E-5	TEST	9.311874059779425E-6	DOCUMENTATION	7.71421947361133E-6	IMPLEMENTATION
//yuck!	DESIGN	0.9942176384888353	WITHOUT_CLASSIFICATION	0.005098053862886088	DESIGN	5.945209309373055E-4	DEFECT	5.488066228182782E-5	DOCUMENTATION	1.9530115652698953E-5	TEST	1.5375939406691905E-5	IMPLEMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.8854724414832335	DESIGN	0.11435474102911151	WITHOUT_CLASSIFICATION	1.2766850853538473E-4	DEFECT	2.8122885586250073E-5	TEST	9.311874059779425E-6	DOCUMENTATION	7.71421947361133E-6	IMPLEMENTATION
// TODO : not sure this is correct, could not find docs on how to do this.	DESIGN	0.9955158317183936	DESIGN	0.0042737107619598685	DEFECT	1.357057606029461E-4	IMPLEMENTATION	6.35804084060816E-5	TEST	6.959492459589403E-6	DOCUMENTATION	4.211858177767233E-6	WITHOUT_CLASSIFICATION
//HSQL has no Blob/Clob support .... but just put these here for now!	DESIGN	0.995651934852975	WITHOUT_CLASSIFICATION	0.004189817110528248	DESIGN	1.0147625380807201E-4	IMPLEMENTATION	3.446569146750609E-5	TEST	2.127949607659941E-5	DEFECT	1.026595144716721E-6	DOCUMENTATION
// does this need holdlock also? : return tableName + " with (updlock, rowlock, holdlock)";	DESIGN	0.9811660009616125	WITHOUT_CLASSIFICATION	0.018383646647149667	DESIGN	3.3065117625581355E-4	IMPLEMENTATION	9.86509472886574E-5	TEST	1.2670164198799572E-5	DOCUMENTATION	8.380103494602792E-6	DEFECT
// sql-server, at least needed this dropped after use; strange!	DESIGN	0.9997728919813218	WITHOUT_CLASSIFICATION	2.0425587751401054E-4	DESIGN	1.991517523429674E-5	TEST	1.7135841714814095E-6	IMPLEMENTATION	9.009289828622588E-7	DOCUMENTATION	3.224527755376797E-7	DEFECT
// todo : is there really any reason to kkeep trying if this fails once?	DESIGN	0.9980594590520139	WITHOUT_CLASSIFICATION	9.79617066315076E-4	DESIGN	9.111051863140483E-4	DEFECT	4.843903265930835E-5	TEST	8.063046098949725E-7	DOCUMENTATION	5.733580878047372E-7	IMPLEMENTATION
// TBD should this be varbinary($1)? //	DESIGN	0.9978682612880876	WITHOUT_CLASSIFICATION	0.002116520623142286	DESIGN	5.730404219815956E-6	IMPLEMENTATION	5.49812443893847E-6	DEFECT	3.0267798495667045E-6	TEST	9.62780261885428E-7	DOCUMENTATION
// is it necessary to register %exact since it can only appear in a where clause?	DESIGN	0.9980529668659336	WITHOUT_CLASSIFICATION	0.0018728967304809329	DESIGN	4.9165788195079484E-5	IMPLEMENTATION	1.5065956617838257E-5	DEFECT	7.565115113986762E-6	TEST	2.339543658621712E-6	DOCUMENTATION
// xmlforest requires a new kind of function constructor	DESIGN	0.9999669832730829	WITHOUT_CLASSIFICATION	1.8939849036059767E-5	IMPLEMENTATION	1.0847450133784247E-5	DEFECT	2.6556130897120946E-6	TEST	5.505339988502282E-7	DESIGN	2.3280658641239075E-8	DOCUMENTATION
// Does this dialect support the ALTER TABLE syntax?	DESIGN	0.9999088573966338	WITHOUT_CLASSIFICATION	4.6312673938345444E-5	DESIGN	3.5807309065870306E-5	IMPLEMENTATION	4.083009984153926E-6	DOCUMENTATION	2.8838815472201978E-6	TEST	2.0557288307640227E-6	DEFECT
// Do we need to qualify index names with the schema name?	DESIGN	0.868887029023082	WITHOUT_CLASSIFICATION	0.11742759926352601	IMPLEMENTATION	0.008907565246227826	DESIGN	0.0039194903839309715	DOCUMENTATION	5.607709914985792E-4	DEFECT	2.975450917345192E-4	TEST
// Does this dialect support the UNIQUE column syntax?	DESIGN	0.9994982130035656	WITHOUT_CLASSIFICATION	3.241949481935155E-4	IMPLEMENTATION	1.5704467460985751E-4	DESIGN	1.011670961092246E-5	DOCUMENTATION	8.02730623945875E-6	TEST	2.4033577806788337E-6	DEFECT
// Does this dialect support check constraints?	DESIGN	0.9997208651890024	WITHOUT_CLASSIFICATION	2.2315450487872234E-4	IMPLEMENTATION	3.3376780073538574E-5	DESIGN	1.3680607573344496E-5	DOCUMENTATION	8.817476174941568E-6	TEST	1.05442297124408E-7	DEFECT
// Do we need to drop constraints before dropping tables in this dialect?	DESIGN	0.9999841943283405	WITHOUT_CLASSIFICATION	1.5134096507464732E-5	DESIGN	3.6593891647042695E-7	TEST	1.9288820060333197E-7	DOCUMENTATION	9.671247307087799E-8	IMPLEMENTATION	1.603556180387206E-8	DEFECT
// Does this dialect support the FOR UPDATE syntax?	DESIGN	0.9993996036575795	WITHOUT_CLASSIFICATION	3.027589128170828E-4	IMPLEMENTATION	2.7568142068383803E-4	DESIGN	1.01456047860218E-5	DOCUMENTATION	8.75071531748264E-6	TEST	3.0596888159945093E-6	DEFECT
// Does this dialect support the Oracle-style FOR UPDATE NOWAIT syntax?	DESIGN	0.999636174630125	WITHOUT_CLASSIFICATION	2.6143094945877635E-4	IMPLEMENTATION	9.491750068159425E-5	DESIGN	3.773963998987897E-6	TEST	3.5307078686401355E-6	DOCUMENTATION	1.7224786692991627E-7	DEFECT
// Does this dialect support FOR UPDATE OF, allowing particular rows to be locked?	DESIGN	0.8846648850170659	DESIGN	0.11456529844438625	WITHOUT_CLASSIFICATION	4.781894833450082E-4	DEFECT	1.6239235366156835E-4	IMPLEMENTATION	7.082268915577876E-5	DOCUMENTATION	5.8412012385394796E-5	TEST
//note there is a wierd implementation in the client side	DESIGN	0.9990140431873828	WITHOUT_CLASSIFICATION	6.003163214176966E-4	DESIGN	3.806313197203642E-4	IMPLEMENTATION	3.904280339196037E-6	DEFECT	9.518755877651308E-7	TEST	1.530155520869204E-7	DOCUMENTATION
//TODO: never reached, since getTypeName() actually throws an exception!	DESIGN	0.84043106593336	WITHOUT_CLASSIFICATION	0.14713314862722168	DEFECT	0.011759952941960862	DESIGN	4.633945690340988E-4	IMPLEMENTATION	1.4582895634149295E-4	DOCUMENTATION	6.660897208164781E-5	TEST
// todo : should we additionally check the current isolation mode explicitly?	DESIGN	0.5988437808226891	IMPLEMENTATION	0.3676556312423409	WITHOUT_CLASSIFICATION	0.020793463342749154	DESIGN	0.008088203427355873	DEFECT	0.004556013790772299	DOCUMENTATION	6.290737409277148E-5	TEST
// todo : remove this and just have subclasses use Isolater/IsolatedWork directly...	DESIGN	0.7552538844426475	DESIGN	0.24470092111723182	WITHOUT_CLASSIFICATION	1.6243187521437543E-5	IMPLEMENTATION	1.4964031299932108E-5	DEFECT	1.3297905422297875E-5	TEST	6.893158768651172E-7	DOCUMENTATION
//TODO: should orphans really be deleted during lock???	DESIGN	0.5390125519033342	WITHOUT_CLASSIFICATION	0.4498131569840676	DESIGN	0.010858993960350189	DEFECT	2.7919811423091464E-4	IMPLEMENTATION	2.4691465539563745E-5	DOCUMENTATION	1.1407572477509936E-5	TEST
// orphans should not be deleted during merge??	DESIGN	0.993386658836991	WITHOUT_CLASSIFICATION	0.006611441095087797	DESIGN	7.900271212297448E-7	DEFECT	6.620227644086353E-7	IMPLEMENTATION	4.2511617602259115E-7	TEST	2.2901859548232986E-8	DOCUMENTATION
// orphans should not be deleted during copy??	DESIGN	0.9985933116139853	WITHOUT_CLASSIFICATION	0.0014043667929676536	DESIGN	1.2925853024285931E-6	DEFECT	7.47882211147301E-7	IMPLEMENTATION	2.6027106532777495E-7	TEST	2.085446814472087E-8	DOCUMENTATION
//I suppose?	DESIGN	0.9806865143880887	WITHOUT_CLASSIFICATION	0.01708543907438158	DESIGN	0.002076674642766987	IMPLEMENTATION	7.847574817609513E-5	DOCUMENTATION	5.89444877859483E-5	DEFECT	1.3951658800612756E-5	TEST
//TODO: suck this logic into the collection!	DESIGN	0.7910358789214758	WITHOUT_CLASSIFICATION	0.18891177069734694	DESIGN	0.009745859662207371	DEFECT	0.007495189188488642	IMPLEMENTATION	0.0023800905469506537	DOCUMENTATION	4.3121098353074764E-4	TEST
// TODO: an alternative is to check if the owner has changed; if it hasn't then // get the ID from collection.getOwner()	DESIGN	0.9891843696447687	IMPLEMENTATION	0.008628747069477286	WITHOUT_CLASSIFICATION	0.0011727637214454772	DEFECT	6.963962797126552E-4	DESIGN	3.111388490448416E-4	TEST	6.584435550989075E-6	DOCUMENTATION
//TODO:refactor + make this method private	DESIGN	0.9591556027139756	WITHOUT_CLASSIFICATION	0.04014813037315048	DESIGN	5.061221449395219E-4	TEST	1.563270667357619E-4	IMPLEMENTATION	3.021013714160085E-5	DOCUMENTATION	3.607564057163811E-6	DEFECT
// todo : we can actually just determine this from the incoming EntityEntry-s	DESIGN	0.9985417531801024	WITHOUT_CLASSIFICATION	0.0014579471925642757	DESIGN	1.7964412958819186E-7	TEST	6.285137202284314E-8	IMPLEMENTATION	3.4464504105837374E-8	DOCUMENTATION	2.2667327566306878E-8	DEFECT
//TODO: Should this be an InitializeEntityEventListener??? (watch out for performance!)	DESIGN	0.9672859886360989	DESIGN	0.031417611438352096	WITHOUT_CLASSIFICATION	0.0011667100638053215	IMPLEMENTATION	6.689953837809334E-5	TEST	6.002719247244789E-5	DOCUMENTATION	2.7631308932384495E-6	DEFECT
//TODO: better to pass the id in as an argument?	DESIGN	0.9652081501196289	WITHOUT_CLASSIFICATION	0.03449703548636219	DESIGN	1.564384739270697E-4	DOCUMENTATION	1.263980517932772E-4	TEST	6.920111012688999E-6	IMPLEMENTATION	5.057757275814329E-6	DEFECT
// todo : potentially look at optimizing these two arrays	DESIGN	0.9994805183617592	WITHOUT_CLASSIFICATION	4.5328561981480256E-4	IMPLEMENTATION	3.161014377522739E-5	DEFECT	2.9825294770918866E-5	DESIGN	2.7693520990235184E-6	DOCUMENTATION	1.991227780709574E-6	TEST
/* trim done to workaround stupid oracle bug that cant handle whitespaces before a { in a sp */	DESIGN	0.9638938567964265	WITHOUT_CLASSIFICATION	0.03578065071120616	DESIGN	1.8815838408171132E-4	DEFECT	1.2361779813196115E-4	IMPLEMENTATION	1.2013975118042692E-5	TEST	1.7023350356330228E-6	DOCUMENTATION
/* trim done to workaround stupid oracle bug that cant handle whitespaces before a { in a sp */	DESIGN	0.9638938567964265	WITHOUT_CLASSIFICATION	0.03578065071120616	DESIGN	1.8815838408171132E-4	DEFECT	1.2361779813196115E-4	IMPLEMENTATION	1.2013975118042692E-5	TEST	1.7023350356330228E-6	DOCUMENTATION
//TODO: temporary	DESIGN	0.8799525241490403	DESIGN	0.10598676767709782	WITHOUT_CLASSIFICATION	0.012670024615443703	IMPLEMENTATION	7.62277022840437E-4	DEFECT	3.876600809565468E-4	DOCUMENTATION	2.4074645462106021E-4	TEST
//TODO: not quite sure about the full implications of this!	DESIGN	0.5780625673812553	WITHOUT_CLASSIFICATION	0.23418100911808049	DEFECT	0.18116508964423614	DESIGN	0.0060708742331023954	IMPLEMENTATION	3.2155898978541715E-4	TEST	1.9890063354030774E-4	DOCUMENTATION
//TODO: not quite sure about the full implications of this!	DESIGN	0.5780625673812553	WITHOUT_CLASSIFICATION	0.23418100911808049	DEFECT	0.18116508964423614	DESIGN	0.0060708742331023954	IMPLEMENTATION	3.2155898978541715E-4	TEST	1.9890063354030774E-4	DOCUMENTATION
//TODO: ugly here:	DESIGN	0.6125175162106652	WITHOUT_CLASSIFICATION	0.2706669030185253	DESIGN	0.09145541707558666	IMPLEMENTATION	0.02152149567836372	DEFECT	0.00219756497929957	TEST	0.0016411030375595788	DOCUMENTATION
//this is kinda the best we can do...	DESIGN	0.9824709656262602	WITHOUT_CLASSIFICATION	0.014529796394430411	DESIGN	0.0027409037376350956	TEST	1.0892957979616159E-4	IMPLEMENTATION	9.128154162661776E-5	DEFECT	5.812312025149032E-5	DOCUMENTATION
//TODO: this needn't exclude subclasses...	DESIGN	0.7327671714423133	DESIGN	0.24381752503337853	WITHOUT_CLASSIFICATION	0.011565781816296325	IMPLEMENTATION	0.008046953619176468	DEFECT	0.0025911735175031753	TEST	0.0012113945713322382	DOCUMENTATION
// todo : need map? the prob is a proper key, right?	DESIGN	0.9961579646743346	WITHOUT_CLASSIFICATION	0.0024003442960919916	DESIGN	0.0012386592249461002	IMPLEMENTATION	1.7533739213968988E-4	DEFECT	1.5505928068835444E-5	DOCUMENTATION	1.2188484418681855E-5	TEST
// todo : i'd much rather have this done from #endLoadingCollection(CollectionPersister,LoadingCollectionEntry)...	DESIGN	0.9626982397797499	WITHOUT_CLASSIFICATION	0.03729376828494984	DESIGN	4.430873085734515E-6	TEST	3.4314533782495285E-6	DEFECT	1.112786809994126E-7	DOCUMENTATION	1.833015526926311E-8	IMPLEMENTATION
// todo : hack!!! // NOTE : here we cleanup the load context when we have no more local // LCE entries.  This "works" for the time being because really // only the collection load contexts are implemented.  Long term, // this cleanup should become part of the "close result set" // processing from the (sandbox/jdbc) jdbc-container code.	DESIGN	0.9147245529008552	DESIGN	0.08520254637675914	WITHOUT_CLASSIFICATION	4.155622547667004E-5	IMPLEMENTATION	1.8416291056194907E-5	DEFECT	1.2516631430123825E-5	TEST	4.115744226507455E-7	DOCUMENTATION
// todo : should really move this log statement to CollectionType, where this is used from...	DESIGN	0.8658698748799624	WITHOUT_CLASSIFICATION	0.13263162979770923	DESIGN	0.0014038549261989317	DEFECT	5.809017970478351E-5	IMPLEMENTATION	3.283290059382182E-5	TEST	3.717315830812875E-6	DOCUMENTATION
// TODO : keep seperate notions of QT[] here for shallow/non-shallow queries...	DESIGN	0.649345572015543	DESIGN	0.2827538687052377	IMPLEMENTATION	0.05556950003681019	DEFECT	0.01019208447908104	WITHOUT_CLASSIFICATION	0.0021017721861620476	TEST	3.7202577166099494E-5	DOCUMENTATION
// TODO : add this info to the translator and aggregate it here...	DESIGN	0.9952713964837704	IMPLEMENTATION	0.002413706032173598	DESIGN	0.0013381655997440499	TEST	8.804498496055882E-4	WITHOUT_CLASSIFICATION	7.433741276980892E-5	DOCUMENTATION	2.194462193648108E-5	DEFECT
//TODO: move into collection type, so we can use polymorphism!	DESIGN	0.7913853082741374	DESIGN	0.20779512689792426	WITHOUT_CLASSIFICATION	5.702416218290569E-4	IMPLEMENTATION	1.4221260228591335E-4	DOCUMENTATION	1.0069726412768174E-4	DEFECT	6.413339695600897E-6	TEST
// todo : should we check the current isolation mode explicitly?	DESIGN	0.5335483442157599	WITHOUT_CLASSIFICATION	0.4111475836024044	IMPLEMENTATION	0.03611737870343139	DESIGN	0.01536274435830467	DEFECT	0.0035633321464004575	DOCUMENTATION	2.6061697369920045E-4	TEST
//TODO: suck into event class	DESIGN	0.6617354840047434	WITHOUT_CLASSIFICATION	0.308852712511319	DESIGN	0.020011625100867358	IMPLEMENTATION	0.0061163887526700655	DOCUMENTATION	0.0030452552941811267	DEFECT	2.3853433621919928E-4	TEST
//do we even really need this? the update will fail anyway....	DESIGN	0.8797516939285339	WITHOUT_CLASSIFICATION	0.058756581392057465	IMPLEMENTATION	0.032920517070870986	DESIGN	0.021372077813025192	DOCUMENTATION	0.0058750911626267105	DEFECT	0.0013240386328857462	TEST
//hum ... should we cascade anyway? throw an exception? fine like it is?	DESIGN	0.9491782011798238	DESIGN	0.042688815159765914	WITHOUT_CLASSIFICATION	0.0035372443451539264	DEFECT	0.002156697429111655	IMPLEMENTATION	0.0015325929379384094	DOCUMENTATION	9.06448948206356E-4	TEST
//TODO: would it be better to do a refresh from db?	DESIGN	0.8957562575072457	DESIGN	0.10200504764616117	IMPLEMENTATION	8.214486001659457E-4	TEST	8.192328083885106E-4	WITHOUT_CLASSIFICATION	5.842866908849376E-4	DEFECT	1.3726747153867032E-5	DOCUMENTATION
//TODO: we use two visitors here, inefficient!	DESIGN	0.7476297952624961	DESIGN	0.24825728755102133	WITHOUT_CLASSIFICATION	0.0032990251215583013	IMPLEMENTATION	5.523285209019332E-4	DOCUMENTATION	1.5848909503445824E-4	DEFECT	1.0307444898790034E-4	TEST
// this class has no proxies (so do a shortcut)	DESIGN	0.9996340130815923	WITHOUT_CLASSIFICATION	3.654099656887672E-4	DESIGN	2.1857397441650605E-7	TEST	1.904562224321039E-7	DEFECT	1.267485319868154E-7	DOCUMENTATION	4.117399009546998E-8	IMPLEMENTATION
//PostLoad is needed for EJB3 //TODO: reuse the PostLoadEvent...	DESIGN	0.5896936149081181	IMPLEMENTATION	0.2475546864292126	WITHOUT_CLASSIFICATION	0.159307952571796	DESIGN	0.002051751519544314	TEST	8.580595179022623E-4	DEFECT	5.339350534266422E-4	DOCUMENTATION
//TODO: put this stuff back in to read snapshot from //      the second-level cache (needs some extra work)	DESIGN	0.8595280270112999	DESIGN	0.07384455744736501	IMPLEMENTATION	0.05398802657976466	DEFECT	0.0108870904593214	WITHOUT_CLASSIFICATION	0.0014102431691371035	DOCUMENTATION	3.4205533311192256E-4	TEST
// null or brand new collection // this will also (inefficiently) handle arrays, which have // no snapshot, so we can't do any better	DESIGN	0.9183906428844968	WITHOUT_CLASSIFICATION	0.08157676362396196	DESIGN	2.60199549386035E-5	IMPLEMENTATION	4.452958247948619E-6	DOCUMENTATION	2.080534984189682E-6	TEST	4.004337040062309E-8	DEFECT
//TODO: is this 100% correct?	DESIGN	0.8401679321430208	WITHOUT_CLASSIFICATION	0.15773255486062643	DESIGN	0.001323709496312737	DEFECT	4.743641594736423E-4	TEST	2.0357201990386809E-4	DOCUMENTATION	9.786732066258035E-5	IMPLEMENTATION
// TODO: iteratively get transient entities and retry merge until one of the following conditions: //       1) transientCopyCache.size() == 0 //       2) transientCopyCache.size() is not decreasing and copyCache.size() is not increasing // TODO: find out if retrying can add entities to copyCache (don't think it can...) // For now, just retry once; throw TransientObjectException if there are still any transient entities	DESIGN	0.9253157295119308	DEFECT	0.06382864427599373	WITHOUT_CLASSIFICATION	0.010682863978207778	IMPLEMENTATION	1.2568634047751312E-4	TEST	4.3628742710663414E-5	DESIGN	3.4471506795786062E-6	DOCUMENTATION
// entity name will not be available for non-POJO entities // TODO: cache the entity name somewhere so that it is available to this exception	DESIGN	0.9941724811928792	DESIGN	0.005670852525178327	WITHOUT_CLASSIFICATION	7.742627651729173E-5	TEST	4.8947082607184315E-5	DEFECT	2.434890890298336E-5	IMPLEMENTATION	5.94401391504952E-6	DOCUMENTATION
//TODO: we should throw an exception if we really *know* for sure   //      that this is a detached instance, rather than just assuming //throw new StaleObjectStateException(entityName, id);	DESIGN	0.9596059873610989	WITHOUT_CLASSIFICATION	0.039964610766539274	DESIGN	4.0952542081826104E-4	DEFECT	1.9418383191067763E-5	TEST	2.7885778894221607E-7	DOCUMENTATION	1.7921056348979903E-7	IMPLEMENTATION
// TODO : perhaps we should additionally require that the incoming entity // version be equivalent to the defined unsaved-value?	DESIGN	0.9658544895126211	IMPLEMENTATION	0.03411113054625334	DESIGN	3.078644663240706E-5	WITHOUT_CLASSIFICATION	2.3184592593757824E-6	DOCUMENTATION	1.1641389624528097E-6	DEFECT	1.1089627131041989E-7	TEST
// perhaps this should be an exception since it is only ever used // in the above method?	DESIGN	0.9949464730486379	WITHOUT_CLASSIFICATION	0.00505124861474701	DESIGN	2.089005938741692E-6	TEST	1.814932697992082E-7	DEFECT	7.78106262404355E-9	DOCUMENTATION	5.634388826369844E-11	IMPLEMENTATION
// Put a placeholder in entries, so we don't recurse back and try to save() the // same object again. QUESTION: should this be done before onSave() is called? // likewise, should it be done before onUpdate()?	DESIGN	0.9260353051699687	DESIGN	0.07394033450929897	WITHOUT_CLASSIFICATION	2.3970650393040934E-5	IMPLEMENTATION	2.736814466466822E-7	DOCUMENTATION	1.055294408720926E-7	TEST	1.0459451748059362E-8	DEFECT
//TODO: merge into one method!	DESIGN	0.5503290005621614	DESIGN	0.4465095578662096	WITHOUT_CLASSIFICATION	0.0016886103661593237	IMPLEMENTATION	6.048970259251912E-4	DOCUMENTATION	5.260344642621835E-4	DEFECT	3.4189971528239386E-4	TEST
//TODO: refactor to .sql package	DESIGN	0.791179868650149	DESIGN	0.20555828221500688	WITHOUT_CLASSIFICATION	0.00308944601919385	IMPLEMENTATION	8.914187416849457E-5	DEFECT	5.9208738612627724E-5	DOCUMENTATION	2.4052502868970866E-5	TEST
/** * Provides query splitting methods, which were originally in QueryTranslator. * <br> * TODO: This will need to be refactored at some point. * * @author josh */	DESIGN	0.9751882163601177	DESIGN	0.013443880143593226	IMPLEMENTATION	0.010368508511031634	DOCUMENTATION	7.668427922033423E-4	DEFECT	2.057377295824191E-4	TEST	2.6814463471841846E-5	WITHOUT_CLASSIFICATION
//TODO: this is one of the ugliest and most fragile pieces of code in Hibernate....	DESIGN	0.9770281838418168	DESIGN	0.01800969156906403	WITHOUT_CLASSIFICATION	0.0022228129962684794	TEST	0.0020253367416044584	IMPLEMENTATION	6.710475837506108E-4	DEFECT	4.292726749541404E-5	DOCUMENTATION
// todo : temporary //      needed because currently persister is the one that //      creates and renders the join fragments for inheritence //      hierarchies...	DESIGN	0.9966756531029589	WITHOUT_CLASSIFICATION	0.0032532656918414695	DESIGN	4.507657143179471E-5	IMPLEMENTATION	1.861892006123173E-5	TEST	4.074008302602002E-6	DEFECT	3.3117054039676917E-6	DOCUMENTATION
// TODO : better way?!?	DESIGN	0.6876184986517124	DESIGN	0.30543197835137015	IMPLEMENTATION	0.003848569143819269	TEST	0.001916547257757956	DOCUMENTATION	6.041978779193633E-4	DEFECT	5.80208717420977E-4	WITHOUT_CLASSIFICATION
// Not possible to simply re-use the versionPropertyNode here as it causes // OOM errors due to circularity :(	DESIGN	0.9999941704955565	WITHOUT_CLASSIFICATION	5.570598932903205E-6	IMPLEMENTATION	1.6256824340959537E-7	DEFECT	9.18969672098246E-8	DESIGN	3.5782199562231486E-9	TEST	8.620800215234015E-10	DOCUMENTATION
//TODO:this is only needed during compilation .. can we eliminate the instvar?	DESIGN	0.9985434903081929	DESIGN	0.0013033083167947248	WITHOUT_CLASSIFICATION	1.1095486482662788E-4	IMPLEMENTATION	2.661913373185731E-5	DEFECT	8.241645746090009E-6	DOCUMENTATION	7.385730707868343E-6	TEST
// TODO : this is a bit dodgy, come up with a better way to check this (plus see above comment)	DESIGN	0.9982319124588854	DESIGN	0.001660705080073738	IMPLEMENTATION	9.146086985713975E-5	TEST	1.5500326770904552E-5	DOCUMENTATION	2.609481215701172E-7	WITHOUT_CLASSIFICATION	1.603162911966703E-7	DEFECT
// even here, if only properties mapped to the "base table" are referenced // in the set and where clauses, this could be handled by the BasicDelegate. // TODO : decide if it is better performance-wise to perform that check, or to simply use the MultiTableUpdateDelegate	DESIGN	0.9999932149375284	DESIGN	6.666714308801585E-6	WITHOUT_CLASSIFICATION	4.8420436151119975E-8	TEST	4.732585773347834E-8	DOCUMENTATION	1.2147026005192232E-8	DEFECT	1.0454843049892177E-8	IMPLEMENTATION
//TODO: switch statements are always evil! We already had bugs because  //      of forgotten token types. Use polymorphism for this!	DESIGN	0.7452847082034788	WITHOUT_CLASSIFICATION	0.25249748076939627	DEFECT	0.0012648157492640686	DESIGN	8.509685521875135E-4	DOCUMENTATION	6.486204583971527E-5	TEST	3.716467983358858E-5	IMPLEMENTATION
// TODO : we really need to be able to deal with component paths here also; // this is difficult because the hql-sql grammar expects all those node types // to be FromReferenceNodes.  One potential fix here would be to convert the // IntoClause to just use a FromClause/FromElement combo (as a child of the // InsertStatement) and move all this logic into the InsertStatement.  That's // probably the easiest approach (read: least amount of changes to the grammar // and code), but just doesn't feel right as then an insert would contain // 2 from-clauses	DESIGN	0.8781696535595167	DESIGN	0.12178236311058632	WITHOUT_CLASSIFICATION	2.639577296812532E-5	DOCUMENTATION	1.887782446343626E-5	TEST	2.6500450034211544E-6	IMPLEMENTATION	5.968746204440061E-8	DEFECT
// really there are two situations where it should be ok to allow the insertion // into properties defined on a superclass: //      1) union-subclass with an abstract root entity //      2) discrim-subclass // // #1 is handled already because of the fact that // UnionSubclassPersister alreay always returns 0 // for this call... // // we may want to disallow it for discrim-subclass just for // consistency-sake (currently does not work anyway)...	DESIGN	0.9812335277576663	WITHOUT_CLASSIFICATION	0.01876303882684657	DESIGN	2.1301905455496395E-6	TEST	1.2560173903095909E-6	DEFECT	3.4835425578927584E-8	DOCUMENTATION	1.2372125706247131E-8	IMPLEMENTATION
//yuck!	DESIGN	0.9942176384888353	WITHOUT_CLASSIFICATION	0.005098053862886088	DESIGN	5.945209309373055E-4	DEFECT	5.488066228182782E-5	DOCUMENTATION	1.9530115652698953E-5	TEST	1.5375939406691905E-5	IMPLEMENTATION
// implicit joins are always(?) ok to reuse	DESIGN	0.9990371428753668	WITHOUT_CLASSIFICATION	8.733519721759052E-4	DESIGN	7.840435471644006E-5	IMPLEMENTATION	5.375197700808114E-6	DEFECT	4.174055615616517E-6	DOCUMENTATION	1.5515444244379672E-6	TEST
// TODO : we may also want to check that the types here map to exactly one column/JDBC-type //      can't think of a situation where arithmetic expression between multi-column mappings //      makes any sense.	DESIGN	0.7573887407007734	DESIGN	0.2403406996524404	IMPLEMENTATION	0.001222807803180432	DOCUMENTATION	6.26940583192079E-4	WITHOUT_CLASSIFICATION	3.1363122074817173E-4	DEFECT	1.0718003966538563E-4	TEST
// we do not know either type //BLIND GUESS!	DESIGN	0.9996663385534023	WITHOUT_CLASSIFICATION	2.137370267194483E-4	DESIGN	5.8051977641838893E-5	IMPLEMENTATION	4.9534566939970594E-5	DEFECT	6.616110521135048E-6	TEST	5.721764775298473E-6	DOCUMENTATION
//TODO: used to be exprNoParens! was this needed?	DESIGN	0.9999730993497743	DESIGN	2.0058256664186585E-5	IMPLEMENTATION	3.843724226875046E-6	DOCUMENTATION	1.6418027509861466E-6	DEFECT	1.088776957982444E-6	WITHOUT_CLASSIFICATION	2.6808962564086336E-7	TEST
// TODO: Replace this with a more elegant solution.	DESIGN	0.9980207999373084	DESIGN	0.001972288668842537	IMPLEMENTATION	3.2123830273445475E-6	DEFECT	2.897704391393621E-6	TEST	5.331645549000373E-7	DOCUMENTATION	2.681418754723995E-7	WITHOUT_CLASSIFICATION
// TODO: Should this really return null?  If not, figure out something better to do here.	DESIGN	0.9961886834470485	DESIGN	0.003779408068541662	IMPLEMENTATION	1.66860782705571E-5	WITHOUT_CLASSIFICATION	1.0733096169307197E-5	TEST	2.2959294428354614E-6	DEFECT	2.1933805272754753E-6	DOCUMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.8854724414832335	DESIGN	0.11435474102911151	WITHOUT_CLASSIFICATION	1.2766850853538473E-4	DEFECT	2.8122885586250073E-5	TEST	9.311874059779425E-6	DOCUMENTATION	7.71421947361133E-6	IMPLEMENTATION
// yuck!	DESIGN	0.9999210802020658	WITHOUT_CLASSIFICATION	5.271580538495377E-5	DESIGN	2.388146337801251E-5	DEFECT	1.1937923712938316E-6	DOCUMENTATION	5.704325275827129E-7	TEST	5.583042723553274E-7	IMPLEMENTATION
// ignore it; the incoming property could not be found so we // cannot be sure what to do here.  At the very least, the // safest is to simply not apply any dereference toggling...	DESIGN	0.9999744824360587	WITHOUT_CLASSIFICATION	2.2766384456435927E-5	DESIGN	1.9917047318612434E-6	IMPLEMENTATION	6.333780467316465E-7	DEFECT	9.339007267453014E-8	TEST	3.270663363350425E-8	DOCUMENTATION
// TODO : most of below was taken verbatim from DotNode; should either delegate this logic or super-type it	DESIGN	0.9988183922240468	DESIGN	4.912200359958078E-4	DEFECT	3.727183467094771E-4	WITHOUT_CLASSIFICATION	1.7479015618762102E-4	TEST	1.2810522318986882E-4	IMPLEMENTATION	1.4774013870535208E-5	DOCUMENTATION
// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and "do the right thing" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character // the trim-source	DESIGN	0.7145624037110501	DESIGN	0.28470528868643835	WITHOUT_CLASSIFICATION	6.210314863714048E-4	IMPLEMENTATION	1.0801000675961226E-4	DOCUMENTATION	3.259800642399762E-6	TEST	6.30873824928046E-9	DEFECT
// todo: we should really just collect these from the various SelectExpressions, rather than regenerating here	DESIGN	0.9995645665628381	WITHOUT_CLASSIFICATION	4.3393744779156226E-4	DESIGN	1.0049565390347228E-6	TEST	3.8528527417971137E-7	DEFECT	1.0146520590470961E-7	IMPLEMENTATION	4.282351334150798E-9	DOCUMENTATION
//TODO: is this a bit ugly?	DESIGN	0.9776918375781761	DESIGN	0.019736475369787898	WITHOUT_CLASSIFICATION	0.0017614435187664724	IMPLEMENTATION	3.748189446116388E-4	TEST	2.6362846659959806E-4	DEFECT	1.717961220583108E-4	DOCUMENTATION
// Need a better way to define the suffixes here...	DESIGN	0.7797575887661358	WITHOUT_CLASSIFICATION	0.21681156389370795	DESIGN	0.002538223273614907	IMPLEMENTATION	8.615907817104396E-4	TEST	1.687649349834768E-5	DEFECT	1.4156791332500981E-5	DOCUMENTATION
// TODO: something much better - look at the type of the other expression! // TODO: Have comparisonExpression and/or arithmeticExpression rules complete the resolution of boolean nodes.	DESIGN	0.9999983007073987	DESIGN	6.064163434495188E-7	TEST	5.565287756907543E-7	DEFECT	3.0495431577146413E-7	WITHOUT_CLASSIFICATION	2.0810816932740815E-7	IMPLEMENTATION	2.3284996991073625E-8	DOCUMENTATION
// TODO : what amount of significant digits need to be supported here? //      - from the DecimalFormat docs: //          [significant digits] = [minimum integer digits] + [maximum fraction digits]	DESIGN	0.9914796990003485	DESIGN	0.005496178779559543	DOCUMENTATION	0.0013706701561967344	IMPLEMENTATION	7.961183775913206E-4	DEFECT	4.736480544422878E-4	WITHOUT_CLASSIFICATION	3.8368563186169397E-4	TEST
// Needed the "clazz_" check to work around union-subclasses // TODO : is there a way to tell whether a persister is truly discrim-column based inheritence?	DESIGN	0.9974865856950788	DESIGN	0.0023438789094477283	IMPLEMENTATION	5.9577575459166574E-5	WITHOUT_CLASSIFICATION	4.734937299737478E-5	TEST	3.5477297002261393E-5	DEFECT	2.7131150014881043E-5	DOCUMENTATION
//We should actually rework this class to not implement Parser //and just process path expressions in the most convenient way.	DESIGN	0.9533510854608079	DESIGN	0.02969016207811123	WITHOUT_CLASSIFICATION	0.015911359312993877	DEFECT	0.001023821081401299	IMPLEMENTATION	2.2223014167007618E-5	DOCUMENTATION	1.3490525186122941E-6	TEST
//The class is now way to complex!	DESIGN	0.9999880490644418	WITHOUT_CLASSIFICATION	8.03948622927447E-6	DESIGN	2.798103302137227E-6	DEFECT	5.569510203324936E-7	IMPLEMENTATION	3.436211376531503E-7	DOCUMENTATION	2.1277386874401648E-7	TEST
//TODO: get SQL rendering out of here	DESIGN	0.8891448153325772	DESIGN	0.10530604833981962	WITHOUT_CLASSIFICATION	0.0028541062191205445	DEFECT	0.0020163210783202355	IMPLEMENTATION	6.241205773742486E-4	TEST	5.458845278817835E-5	DOCUMENTATION
//TODO: is there a better way?	DESIGN	0.9764578630942631	DESIGN	0.011636414016634806	IMPLEMENTATION	0.011406962275056713	WITHOUT_CLASSIFICATION	4.1027689543815673E-4	TEST	4.510381793130969E-5	DEFECT	4.3379900676107094E-5	DOCUMENTATION
//Must be done here because of side-effect! yuck...	DESIGN	0.9731295260853026	WITHOUT_CLASSIFICATION	0.02681158956804088	DESIGN	3.5612440849135345E-5	DEFECT	1.1661847401032493E-5	TEST	7.110322654740914E-6	DOCUMENTATION	4.4997357517311166E-6	IMPLEMENTATION
//name from a super query (a bit inelegant that it shows up here)	DESIGN	0.9333329603059518	DESIGN	0.0649443461282323	WITHOUT_CLASSIFICATION	8.695859567215392E-4	DEFECT	5.874725118175856E-4	TEST	2.588608174674955E-4	IMPLEMENTATION	6.774279809318241E-6	DOCUMENTATION
// We should reengineer this class so that, rather than the current ad - // hoc linear approach to processing a stream of tokens, we instead // build up a tree of expressions.	DESIGN	0.8513293186406917	WITHOUT_CLASSIFICATION	0.1484453228661121	DESIGN	2.1353061763537294E-4	DEFECT	7.937775584492136E-6	DOCUMENTATION	3.886557189675086E-6	TEST	3.542786549908348E-9	IMPLEMENTATION
// this is ugly here, but needed because its a subquery	DESIGN	0.9961440904818211	WITHOUT_CLASSIFICATION	0.0029500617861122984	DESIGN	6.87827904628476E-4	IMPLEMENTATION	1.1444130680435961E-4	TEST	9.6772150783351E-5	DEFECT	6.8063698504758575E-6	DOCUMENTATION
// unhappy about this being public ... is there a better way?	DESIGN	0.9964074799211191	DESIGN	0.0035816944373960593	WITHOUT_CLASSIFICATION	8.699718517310612E-6	TEST	1.102208067448599E-6	IMPLEMENTATION	6.980263090594769E-7	DEFECT	3.256885908482912E-7	DOCUMENTATION
// Make sure this is a defined parameter and check the incoming value type // TODO: what should be the actual exception type here?	DESIGN	0.9846458032959383	DESIGN	0.013479385732982218	IMPLEMENTATION	0.001866710127889559	WITHOUT_CLASSIFICATION	5.4538263244710405E-6	DEFECT	1.8723869549553172E-6	TEST	7.746299102864572E-7	DOCUMENTATION
// TODO : this constructor form is *only* used from constructor directly below us; can it go away?	DESIGN	0.9994497026542544	DESIGN	4.3461325016126674E-4	IMPLEMENTATION	5.6897762983257955E-5	TEST	5.29678590245901E-5	WITHOUT_CLASSIFICATION	5.0177545254322915E-6	DEFECT	8.007190510800461E-7	DOCUMENTATION
//TODO: COPY/PASTE FROM SessionImpl, pull up!	DESIGN	0.923100417476105	WITHOUT_CLASSIFICATION	0.06233915628390982	DESIGN	0.013159643140825147	IMPLEMENTATION	0.0010548947702323029	DEFECT	2.9745256444930557E-4	DOCUMENTATION	4.843576447845233E-5	TEST
// TODO : should remove this exposure //  and have all references to the session's batcher use the ConnectionManager.	DESIGN	0.943054783152014	DESIGN	0.03687669224881492	IMPLEMENTATION	0.015280280909049836	WITHOUT_CLASSIFICATION	0.004446786644696989	DEFECT	3.2963622685861226E-4	DOCUMENTATION	1.1820818565735575E-5	TEST
// todo : should this get moved to PersistentContext? // logically, is PersistentContext the "thing" to which an interceptor gets attached?	DESIGN	0.9271842936093692	WITHOUT_CLASSIFICATION	0.07279725531340484	DESIGN	1.0656961400626831E-5	DEFECT	7.519333238426127E-6	TEST	2.5347674941018315E-7	DOCUMENTATION	2.130583745381192E-8	IMPLEMENTATION
// TODO: what type?	DESIGN	0.8944689074407178	IMPLEMENTATION	0.10136356536815493	DESIGN	0.0026644089198486886	WITHOUT_CLASSIFICATION	9.42579461063087E-4	DOCUMENTATION	2.994048609840554E-4	DEFECT	2.6113394923140353E-4	TEST
// todo : should seriously consider not allowing a txn to begin from a child session //      can always route the request to the root session...	DESIGN	0.9381542308665336	WITHOUT_CLASSIFICATION	0.05451331744981745	DEFECT	0.005646336204399603	DESIGN	0.0011132064760260066	IMPLEMENTATION	5.721024441213679E-4	TEST	8.06559101961842E-7	DOCUMENTATION
// short-circuit for performance...	DESIGN	0.9998258337938939	WITHOUT_CLASSIFICATION	1.569576245897874E-4	DESIGN	7.776313419672016E-6	DEFECT	3.743094533845137E-6	DOCUMENTATION	2.965047779604977E-6	IMPLEMENTATION	2.7241257832344913E-6	TEST
// not absolutely necessary, but does help with aggressive release	DESIGN	0.9982499614117298	WITHOUT_CLASSIFICATION	0.0016289079572548689	DESIGN	7.38145722799192E-5	TEST	3.5281834339181263E-5	IMPLEMENTATION	1.0948537682561392E-5	DEFECT	1.0856867138494214E-6	DOCUMENTATION
// TODO : remove these last two as batcher is no longer managing connections	DESIGN	0.3888162323082886	IMPLEMENTATION	0.33015322109488865	DESIGN	0.265496473361319	WITHOUT_CLASSIFICATION	0.014165131613092475	TEST	0.0010234015771195856	DEFECT	3.455400452916021E-4	DOCUMENTATION
//work around a bug in all known connection pools....	DESIGN	0.4791767434361663	IMPLEMENTATION	0.23479422969019187	DESIGN	0.16199864262979305	DEFECT	0.12289406073484237	WITHOUT_CLASSIFICATION	0.0010891821566905143	DOCUMENTATION	4.714135231588877E-5	TEST
// TODO : make this the factory for "entity mode related" sessions; // also means making this the target of transaction-synch and the // thing that knows how to cascade things between related sessions // // At that point, perhaps this thing is a "SessionContext", and // ConnectionManager is a "JDBCContext"?  A "SessionContext" should // live in the impl package...	DESIGN	0.994593299709973	DESIGN	0.005402373576335921	IMPLEMENTATION	2.6446717802611064E-6	TEST	8.047448914303159E-7	DOCUMENTATION	7.702556443330825E-7	WITHOUT_CLASSIFICATION	1.0704137516996894E-7	DEFECT
//TODO: does this really need to be here? //      does the collection already have //      it's own up-to-date snapshot?	DESIGN	0.9305980785926204	WITHOUT_CLASSIFICATION	0.0528671748716227	DESIGN	0.01123902166513037	IMPLEMENTATION	0.004899758381312462	DEFECT	3.3378923284293485E-4	TEST	6.217725647111762E-5	DOCUMENTATION
//TODO: the i==entitySpan-1 bit depends upon subclass implementation (very bad)	DESIGN	0.6334257053011914	IMPLEMENTATION	0.3549901963057913	DESIGN	0.011376958888822977	WITHOUT_CLASSIFICATION	1.366584068191383E-4	DEFECT	6.703965575056738E-5	DOCUMENTATION	3.4414416245518987E-6	TEST
/**	DESIGN	0.7443957798226633	DESIGN	0.09115832074099095	WITHOUT_CLASSIFICATION	0.08242936482622316	DEFECT	0.08071796545512981	IMPLEMENTATION	7.387574675117013E-4	DOCUMENTATION	5.59811687481041E-4	TEST
// todo : add the notion of enabled filters to the CacheKey to differentiate filtered collections from non-filtered; //      but CacheKey is currently used for both collections and entities; would ideally need to define two seperate ones; //      currently this works in conjuction with the check on //      DefaultInitializeCollectionEventHandler.initializeCollectionFromCache() (which makes sure to not read from //      cache with enabled filters). // EARLY EXIT!!!!!	DESIGN	0.9999982713814611	WITHOUT_CLASSIFICATION	1.701720313546493E-6	DESIGN	1.051227054823702E-8	DEFECT	8.340571705329062E-9	TEST	7.55817886299839E-9	DOCUMENTATION	4.8720421129053E-10	IMPLEMENTATION
//for sets, we should end the collection load after resolving //the entities, since we might call hashCode() on the elements //TODO: or we could do this polymorphically, and have two //      different operations implemented differently for arrays	DESIGN	0.5451916995037176	WITHOUT_CLASSIFICATION	0.4534468344349855	DESIGN	0.0013072647663366916	IMPLEMENTATION	3.7423289545732026E-5	DEFECT	8.955150307719057E-6	DOCUMENTATION	7.822855106695141E-6	TEST
//This is not very nice (and quite slow):	DESIGN	0.9872602220845476	WITHOUT_CLASSIFICATION	0.008740075672470937	DEFECT	0.00394249284894276	DESIGN	4.603258165418387E-5	IMPLEMENTATION	6.281410481793309E-6	DOCUMENTATION	4.895401902751147E-6	TEST
//use of trim() here is ugly?	DESIGN	0.9992993841981157	WITHOUT_CLASSIFICATION	6.712617401299377E-4	DESIGN	1.1329928438836597E-5	IMPLEMENTATION	1.0682980400642328E-5	DEFECT	4.819892799380389E-6	TEST	2.521260115311027E-6	DOCUMENTATION
//TODO: this is too conservative; if all preceding joins were  //      also inner joins, we could use an inner join here	DESIGN	0.9926468156390577	WITHOUT_CLASSIFICATION	0.007262771742161046	DESIGN	4.932266258814002E-5	TEST	2.6846393720115467E-5	DEFECT	8.169416603184387E-6	IMPLEMENTATION	6.074145869837555E-6	DOCUMENTATION
//TODO: look at the owning property and check that it  //      isn't lazy (by instrumentation)	DESIGN	0.5374349051726033	WITHOUT_CLASSIFICATION	0.4474299519808211	IMPLEMENTATION	0.014609428576090641	DEFECT	5.104306539721268E-4	DOCUMENTATION	1.2456075688162183E-5	TEST	2.8275408247506896E-6	DESIGN
//TODO: inefficient	DESIGN	0.7413528350630983	DESIGN	0.25190012112938054	WITHOUT_CLASSIFICATION	0.005187849980856048	IMPLEMENTATION	0.0012379926812730476	DOCUMENTATION	2.0942624514294416E-4	DEFECT	1.1177490024910998E-4	TEST
// why does this matter?	DESIGN	0.9990705356755759	WITHOUT_CLASSIFICATION	7.847942166327928E-4	DESIGN	1.211490624884679E-4	TEST	1.1197595920549677E-5	IMPLEMENTATION	1.0868540472030134E-5	DOCUMENTATION	1.4549089101957766E-6	DEFECT
// from the collection of associations, locate OJA for the // ManyToOne corresponding to this persister to fully // define the many-to-many; we need that OJA so that we can // use its alias here // TODO : is there a better way here?	DESIGN	0.9987044721230321	DESIGN	0.0011721621606620282	IMPLEMENTATION	6.860074090894882E-5	TEST	5.1393497471776325E-5	WITHOUT_CLASSIFICATION	3.2894073707432833E-6	DOCUMENTATION	8.20705544463097E-8	DEFECT
//TODO: this class depends directly upon CriteriaImpl,  //      in the impl package ... add a CriteriaImplementor  //      interface	DESIGN	0.9996340569375703	DESIGN	2.650124099955873E-4	WITHOUT_CLASSIFICATION	6.52060357582385E-5	IMPLEMENTATION	3.418377751861289E-5	DEFECT	8.876480719581866E-7	DOCUMENTATION	6.531910850397562E-7	TEST
//TODO: add a CriteriaImplementor interface //      this class depends directly upon CriteriaImpl in the impl package...	DESIGN	0.9934412064259007	DESIGN	0.006416385402370126	WITHOUT_CLASSIFICATION	9.620850079872638E-5	IMPLEMENTATION	4.3166741603625826E-5	DEFECT	2.324250792242193E-6	DOCUMENTATION	7.086785345514228E-7	TEST
// TODO : not so sure this is needed...	DESIGN	0.9093713840959076	DESIGN	0.090351418038215	IMPLEMENTATION	1.3284823277791603E-4	TEST	9.581554695355362E-5	DEFECT	4.830689217632695E-5	DOCUMENTATION	2.2719396951683548E-7	WITHOUT_CLASSIFICATION
// meant to handle dynamic instantiation queries...(Copy from QueryLoader)	DESIGN	0.9283336717423798	WITHOUT_CLASSIFICATION	0.07076812511736731	DESIGN	8.601425812939856E-4	DEFECT	1.5211192822917546E-5	IMPLEMENTATION	1.498832909256149E-5	DOCUMENTATION	7.861037043391812E-6	TEST
// TODO: The order in which entities are saved may matter (e.g., a particular transient entity //       may need to be saved before other transient entities can be saved; //       Keep retrying the batch of transient entities until either: //       1) there are no transient entities left in transientCopyCache //       or 2) no transient entities were saved in the last batch // For now, just run through the transient entities and retry the merge	DESIGN	0.4792004188323006	WITHOUT_CLASSIFICATION	0.29983491004373336	IMPLEMENTATION	0.20316809416485623	DEFECT	0.017237175013476262	DESIGN	3.204588283404724E-4	DOCUMENTATION	2.389431172931986E-4	TEST
// todo: this might really even be moved into the cfg package and used as the basis for all things which are configurable.	DESIGN	0.551236426503859	WITHOUT_CLASSIFICATION	0.4483343993933796	DESIGN	3.7727966293414666E-4	IMPLEMENTATION	4.1902099052719606E-5	DEFECT	6.8206619144603915E-6	DOCUMENTATION	3.1716788600296644E-6	TEST
// todo : currently expects that the individual with expressions apply to the same sql table join. //      This may not be the case for joined-subclass where the property values //      might be coming from different tables in the joined hierarchy.  At some //      point we should expand this to support that capability.  However, that has //      some difficulties: //          1) the biggest is how to handle ORs when the individual comparisons are //              linked to different sql joins. //          2) here we would need to track each comparison individually, along with //              the join alias to which it applies and then pass that information //              back to the FromElement so it can pass it along to the JoinSequence	DESIGN	0.9115589607760304	WITHOUT_CLASSIFICATION	0.08658078428426369	DESIGN	0.001507213893684747	IMPLEMENTATION	1.8652318827477854E-4	DOCUMENTATION	1.659939528000136E-4	DEFECT	5.239049463599259E-7	TEST
// this function has a template -> restore output, apply the template and write the result out // TODO: Downcast to avoid using an interface?  Yuck.	DESIGN	0.9754135533519254	DESIGN	0.022319580385549997	WITHOUT_CLASSIFICATION	0.0010038963407761402	TEST	7.914043794413091E-4	IMPLEMENTATION	3.293184040306772E-4	DEFECT	1.4224713827672072E-4	DOCUMENTATION
// at some point the generate phase needs to be moved out of here, // because a single object-level DML might spawn multiple SQL DML // command executions. // // Possible to just move the sql generation for dml stuff, but for // consistency-sake probably best to just move responsiblity for // the generation phase completely into the delegates // (QueryLoader/StatementExecutor) themselves.  Also, not sure why // QueryLoader currently even has a dependency on this at all; does // it need it?  Ideally like to see the walker itself given to the delegates directly...	DESIGN	0.9040119236042661	DESIGN	0.09598621840093241	WITHOUT_CLASSIFICATION	1.0064707125242942E-6	DOCUMENTATION	8.303165962766004E-7	DEFECT	1.9899572211458078E-8	TEST	1.307920316734468E-9	IMPLEMENTATION
// get the right object from the list ... would it be easier to just call getEntity() ??	DESIGN	0.9281235480405481	WITHOUT_CLASSIFICATION	0.07094864455753397	DESIGN	9.158753458875401E-4	IMPLEMENTATION	7.913845368945526E-6	DEFECT	3.1848829300867975E-6	TEST	8.333277312969288E-7	DOCUMENTATION
// TODO should we just collect these like with the collections above?	DESIGN	0.9891184739655032	IMPLEMENTATION	0.010458002897299274	DESIGN	3.164729542851222E-4	TEST	1.023028856246435E-4	WITHOUT_CLASSIFICATION	4.6296684085275995E-6	DOCUMENTATION	1.1762887917855785E-7	DEFECT
// todo : better to handle dynamic filters through implicit DynamicFilterParameterSpecification // see the discussion there in DynamicFilterParameterSpecification's javadocs as to why // it is currently not done that way.	DESIGN	0.7986510195218862	DESIGN	0.20134351596654035	WITHOUT_CLASSIFICATION	3.772892866673764E-6	DOCUMENTATION	1.2858597936229603E-6	TEST	4.0460149385557175E-7	DEFECT	1.1574191623402173E-9	IMPLEMENTATION
/////////////////////////////////////////////////////////////////////////// // USED ONLY FOR REGRESSION TESTING!!!! // // todo : obviously get rid of all this junk ;) ///////////////////////////////////////////////////////////////////////////	DESIGN	0.9999275945771954	WITHOUT_CLASSIFICATION	6.818329919878927E-5	DESIGN	3.7669418461892325E-6	IMPLEMENTATION	2.1739289357456495E-7	DEFECT	1.4268764269513565E-7	TEST	9.510122336978559E-8	DOCUMENTATION
//create an index on the key columns??	DESIGN	0.9998722128767137	WITHOUT_CLASSIFICATION	1.1103732494834521E-4	DESIGN	8.062938036779952E-6	DEFECT	4.959654326321465E-6	IMPLEMENTATION	2.40794356462055E-6	TEST	1.3192624103039872E-6	DOCUMENTATION
//TODO: deprecated, remove eventually	DESIGN	0.9115284144987155	DESIGN	0.04871251702138826	IMPLEMENTATION	0.03416614323291829	WITHOUT_CLASSIFICATION	0.005219000563542987	DEFECT	3.5023064549194856E-4	DOCUMENTATION	2.369403794315377E-5	TEST
//create an index on the key columns??	DESIGN	0.9998722128767137	WITHOUT_CLASSIFICATION	1.1103732494834521E-4	DESIGN	8.062938036779952E-6	DEFECT	4.959654326321465E-6	IMPLEMENTATION	2.40794356462055E-6	TEST	1.3192624103039872E-6	DOCUMENTATION
//TODO: improve this hack!	DESIGN	0.9743987480138042	DESIGN	0.017648378022754548	WITHOUT_CLASSIFICATION	0.007221466628482635	IMPLEMENTATION	3.078409336663198E-4	TEST	2.801401522448244E-4	DEFECT	1.4342624904734288E-4	DOCUMENTATION
// inheritance cycle detection (paranoid check)	DESIGN	0.999303350413579	WITHOUT_CLASSIFICATION	5.76684231935416E-4	IMPLEMENTATION	1.1609054727644295E-4	DESIGN	1.880482969424918E-6	DEFECT	1.443794571693686E-6	DOCUMENTATION	5.505296680754255E-7	TEST
//TODO: remove use of instanceof!	DESIGN	0.5379752829958966	DESIGN	0.45624564033729437	WITHOUT_CLASSIFICATION	0.005240385822109815	DEFECT	2.735334414877534E-4	DOCUMENTATION	2.5183323645875663E-4	IMPLEMENTATION	1.3324166752756309E-5	TEST
//shortcut	DESIGN	0.9984430431413656	WITHOUT_CLASSIFICATION	0.001516986642745456	DESIGN	2.528854245859968E-5	DEFECT	8.391616010169391E-6	DOCUMENTATION	4.171323751130519E-6	TEST	2.1187336689656556E-6	IMPLEMENTATION
//TODO: handle the case of a foreign key to something other than the pk	DESIGN	0.9855109555746459	WITHOUT_CLASSIFICATION	0.008716067131485063	IMPLEMENTATION	0.00567898765668289	DESIGN	3.987633240405608E-5	DEFECT	3.003030203116772E-5	DOCUMENTATION	2.4083002751079962E-5	TEST
// create an index on the key columns??	DESIGN	0.9999916472847367	WITHOUT_CLASSIFICATION	6.3781907263458976E-6	DESIGN	1.278425841979836E-6	DEFECT	3.3600880238776157E-7	IMPLEMENTATION	2.678363979739118E-7	TEST	9.225349459485843E-8	DOCUMENTATION
// todo : remove	DESIGN	0.9850150298008338	WITHOUT_CLASSIFICATION	0.014873155782718294	DESIGN	6.460357439845636E-5	IMPLEMENTATION	3.029779734221545E-5	DEFECT	1.1675332242914874E-5	TEST	5.2377124642936335E-6	DOCUMENTATION
// todo : remove	DESIGN	0.9850150298008338	WITHOUT_CLASSIFICATION	0.014873155782718294	DESIGN	6.460357439845636E-5	IMPLEMENTATION	3.029779734221545E-5	DEFECT	1.1675332242914874E-5	TEST	5.2377124642936335E-6	DOCUMENTATION
// todo : remove	DESIGN	0.9850150298008338	WITHOUT_CLASSIFICATION	0.014873155782718294	DESIGN	6.460357439845636E-5	IMPLEMENTATION	3.029779734221545E-5	DEFECT	1.1675332242914874E-5	TEST	5.2377124642936335E-6	DOCUMENTATION
// todo : throw exception?	DESIGN	0.9944650611043635	WITHOUT_CLASSIFICATION	0.0049674801899933715	DESIGN	3.5880255565073357E-4	DEFECT	1.4907088385737881E-4	IMPLEMENTATION	3.361996438544767E-5	DOCUMENTATION	2.596530174953487E-5	TEST
// todo : throw exception?  maybe warn if not the same?	DESIGN	0.6110847802512549	DESIGN	0.3410543572987229	WITHOUT_CLASSIFICATION	0.04066894460719004	DEFECT	0.006825346485595638	IMPLEMENTATION	2.1116231240887588E-4	DOCUMENTATION	1.554090448279096E-4	TEST
//TODO: make EntityPersister *not* depend on SessionFactoryImplementor //interface, if possible	DESIGN	0.8779578929819972	DESIGN	0.11563172519585797	WITHOUT_CLASSIFICATION	0.005221420507356019	IMPLEMENTATION	0.0010367799939332342	DEFECT	1.1477595140298668E-4	TEST	3.740536945239773E-5	DOCUMENTATION
//TODO: is there a more elegant way than downcasting?	DESIGN	0.9995003844075104	DESIGN	3.508582101914217E-4	WITHOUT_CLASSIFICATION	1.1843948069854859E-4	IMPLEMENTATION	1.7323427069667767E-5	DEFECT	1.0553559256340487E-5	TEST	2.440915273580266E-6	DOCUMENTATION
// TODO: encapsulate the protected instance variables!	DESIGN	0.9013419895133795	IMPLEMENTATION	0.06534608133952217	DESIGN	0.02464337543734845	WITHOUT_CLASSIFICATION	0.008065616383247083	DEFECT	5.412406565051323E-4	DOCUMENTATION	6.169666999769643E-5	TEST
// should indicate that we are processing an INSERT/UPDATE/DELETE // query with a subquery implied via a collection property // function. Here, we need to use the table name itself as the // qualification alias. // TODO : verify this works for all databases... // TODO : is this also the case in non-"indexed" scenarios?	DESIGN	0.6883017127692764	IMPLEMENTATION	0.31162142250719393	DESIGN	3.694317490177224E-5	WITHOUT_CLASSIFICATION	1.7090232184779535E-5	TEST	1.353776862519511E-5	DOCUMENTATION	9.293547817957424E-6	DEFECT
//TODO: copy/paste from insertRows()	DESIGN	0.9561913839564564	WITHOUT_CLASSIFICATION	0.03324540194796213	DESIGN	0.005865560487987644	DEFECT	0.004164793535256089	IMPLEMENTATION	4.010457150832589E-4	TEST	1.3181435725450152E-4	DOCUMENTATION
//TODO: copy/paste from recreate()	DESIGN	0.9788060410939908	WITHOUT_CLASSIFICATION	0.01434519790742036	DESIGN	0.006064698757346043	IMPLEMENTATION	6.378596874526896E-4	DEFECT	9.334904836128101E-5	TEST	5.285350542885643E-5	DOCUMENTATION
//should this interface extend PropertyMapping?	DESIGN	0.9973473755544026	DESIGN	0.002648963467869122	WITHOUT_CLASSIFICATION	2.412806649057665E-6	TEST	6.587254339430632E-7	DEFECT	5.821936871555712E-7	DOCUMENTATION	7.25195803342226E-9	IMPLEMENTATION
//ie. the subquery! yuck!	DESIGN	0.9998297040550244	WITHOUT_CLASSIFICATION	7.535905206195493E-5	DESIGN	4.9632774925883514E-5	IMPLEMENTATION	3.707153800901474E-5	DEFECT	4.657436733055307E-6	DOCUMENTATION	3.5751432457405096E-6	TEST
//TODO: move to .sql package!!	DESIGN	0.5561476310653084	WITHOUT_CLASSIFICATION	0.43740305412173985	DESIGN	0.005373465668442984	IMPLEMENTATION	6.017191617123718E-4	DOCUMENTATION	3.994856045709481E-4	DEFECT	7.464437822555424E-5	TEST
//TODO: code duplication with SingleTableEntityPersister	DESIGN	0.8529683806587687	DESIGN	0.14559600034243736	WITHOUT_CLASSIFICATION	7.172269242327553E-4	IMPLEMENTATION	3.9958791157486694E-4	TEST	2.28682333468481E-4	DOCUMENTATION	9.01218295178128E-5	DEFECT
// TODO: It would be really, really nice to use this to also model components!	DESIGN	0.9989177703887614	DESIGN	0.001051576817565935	IMPLEMENTATION	2.150329589769287E-5	DEFECT	5.925041853970853E-6	WITHOUT_CLASSIFICATION	2.5033441355163754E-6	DOCUMENTATION	7.211117855883863E-7	TEST
//TODO: *two* hashmap lookups here is one too many...	DESIGN	0.9537594440171923	WITHOUT_CLASSIFICATION	0.026222641083457326	DESIGN	0.01970199270048646	DEFECT	2.630866992542793E-4	IMPLEMENTATION	4.842626413175049E-5	TEST	4.4092354778064625E-6	DOCUMENTATION
//TODO: code duplication with JoinedSubclassEntityPersister	DESIGN	0.9071078803073588	DESIGN	0.09275761156457918	WITHOUT_CLASSIFICATION	5.5738834251270733E-5	TEST	3.750809453836115E-5	DOCUMENTATION	3.270798761352634E-5	IMPLEMENTATION	8.553211658724357E-6	DEFECT
//perhaps not really necessary...	DESIGN	0.9895204108546074	WITHOUT_CLASSIFICATION	0.00824943184448674	DESIGN	0.0012180558047028276	IMPLEMENTATION	9.84461851681051E-4	DEFECT	1.632513852273312E-5	TEST	1.1314505999316778E-5	DOCUMENTATION
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass! // was toUnqotedAliasStrings( getIdentiferColumnNames() ) before - now tried // to remove that unqoting and missing aliases..	DESIGN	0.8145832507662678	WITHOUT_CLASSIFICATION	0.18519532669153063	DESIGN	1.381336531932183E-4	DEFECT	5.3038120489862014E-5	TEST	2.7564316635091528E-5	IMPLEMENTATION	2.6864518832680555E-6	DOCUMENTATION
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass! // was toUnqotedAliasStrings( getdiscriminatorColumnName() ) before - now tried // to remove that unqoting and missing aliases..	DESIGN	0.8494933084929117	WITHOUT_CLASSIFICATION	0.15035477509571107	DESIGN	1.2550482469949513E-4	DEFECT	2.462310378527001E-5	TEST	9.288729222811868E-7	IMPLEMENTATION	8.596099701134577E-7	DOCUMENTATION
//TODO: should we use SELECT .. FOR UPDATE?	DESIGN	0.4743019522899915	DESIGN	0.3837757882700153	WITHOUT_CLASSIFICATION	0.13778416333099813	IMPLEMENTATION	0.00229276486874112	DEFECT	0.0015559700480607898	DOCUMENTATION	2.893611921931494E-4	TEST
//TODO: optimize this better!	DESIGN	0.5167970742353071	IMPLEMENTATION	0.37759665630106104	WITHOUT_CLASSIFICATION	0.09869654493404909	DESIGN	0.005661833160902931	TEST	9.586679389740093E-4	DOCUMENTATION	2.8922342970586883E-4	DEFECT
//TODO: should we allow suffixes on these ?	DESIGN	0.6831454057145336	DESIGN	0.2836406062888449	WITHOUT_CLASSIFICATION	0.020311174631054918	DEFECT	0.012353520454372487	IMPLEMENTATION	2.84560839854491E-4	DOCUMENTATION	2.647320713394131E-4	TEST
//This is really ugly, but necessary:	DESIGN	0.9862965235355405	WITHOUT_CLASSIFICATION	0.012238827712836556	DESIGN	0.0014303078688015678	DEFECT	1.485742325583186E-5	TEST	1.0705444904384916E-5	DOCUMENTATION	8.778014661092022E-6	IMPLEMENTATION
//ugly little workaround for fact that createUniqueKeyLoaders() does not handle component properties	DESIGN	0.9997614265677423	DESIGN	2.2553407560709602E-4	WITHOUT_CLASSIFICATION	6.173995658592864E-6	IMPLEMENTATION	5.6666832753649855E-6	TEST	8.857841138111469E-7	DEFECT	3.1289360280071055E-7	DOCUMENTATION
//TODO: disable batch loading if lockMode > READ?	DESIGN	0.9898176887521193	WITHOUT_CLASSIFICATION	0.005691249349330523	DESIGN	0.0026812934415662354	DEFECT	0.0015094435648492705	IMPLEMENTATION	1.5060642367345059E-4	DOCUMENTATION	1.497184684611528E-4	TEST
// append the SQL to return the generated identifier //TODO: suck into Insert	DESIGN	0.9675333000699912	WITHOUT_CLASSIFICATION	0.03185674457776782	DESIGN	5.908293157002568E-4	IMPLEMENTATION	9.899346783356693E-6	DOCUMENTATION	7.934269087371145E-6	DEFECT	1.2924206701640236E-6	TEST
//TODO: I am not so sure about the exception handling in this bit!	DESIGN	0.8389135871972678	DESIGN	0.14288459713816912	WITHOUT_CLASSIFICATION	0.01761180961197827	DEFECT	4.629969274036418E-4	IMPLEMENTATION	8.435503928607155E-5	TEST	4.265408589493134E-5	DOCUMENTATION
//TODO: is this really necessary????	DESIGN	0.760268645145093	DESIGN	0.2367303608947735	WITHOUT_CLASSIFICATION	0.001440314503111126	IMPLEMENTATION	0.001126880544876183	DEFECT	3.0137280889221E-4	DOCUMENTATION	1.3242610325411662E-4	TEST
//TODO: move to .sql package, and refactor with similar things!	DESIGN	0.9490115391539011	DESIGN	0.05094288664497572	WITHOUT_CLASSIFICATION	1.5831185882881927E-5	DEFECT	1.3821631897331513E-5	IMPLEMENTATION	8.301169850804983E-6	TEST	7.620213492171825E-6	DOCUMENTATION
//TODO: implement functionality //  this might be painful to do here, as the "join post processing" for //  the subquery has already been performed (meaning that for //  theta-join dialects, the join conditions have already been moved //  over to the where clause).  A "simple" solution here might to //  perform "join post processing" once for the entire query (including //  any subqueries) at one fell swoop	DESIGN	0.909567804137742	DESIGN	0.0880531059769595	IMPLEMENTATION	0.0023708399252760823	WITHOUT_CLASSIFICATION	4.5911683833822596E-6	DOCUMENTATION	2.8083324132676404E-6	DEFECT	8.504592259937204E-7	TEST
// todo : this eventually needs to be removed	DESIGN	0.9101951865119035	WITHOUT_CLASSIFICATION	0.07511225136888153	DESIGN	0.012711788732123891	IMPLEMENTATION	0.0018358848004526606	DEFECT	7.473640724165945E-5	TEST	7.015217939683743E-5	DOCUMENTATION
//kinda ugly, but needed for collections with a "." node mapping	DESIGN	0.651990870586786	WITHOUT_CLASSIFICATION	0.31954905596594846	IMPLEMENTATION	0.024302943725201587	DESIGN	0.0023560836506852875	TEST	0.0017349843121244543	DEFECT	6.606175925439292E-5	DOCUMENTATION
//is this ok?	DESIGN	0.9990271472269601	WITHOUT_CLASSIFICATION	9.455886920053659E-4	DESIGN	1.3495342016026676E-5	TEST	6.585359306047522E-6	DOCUMENTATION	4.451593376872511E-6	IMPLEMENTATION	2.7317863357048736E-6	DEFECT
//TODO: perhaps this should be some other RuntimeException...	DESIGN	0.9961533455209103	DESIGN	0.0025250885333429783	WITHOUT_CLASSIFICATION	8.482483169340993E-4	IMPLEMENTATION	3.399433753365799E-4	DEFECT	1.1594835596222901E-4	TEST	1.7425897513814157E-5	DOCUMENTATION
//TODO: make this a bit nicer	DESIGN	0.705205975251832	DESIGN	0.280739096969056	WITHOUT_CLASSIFICATION	0.008219738424676435	TEST	0.005116449365761127	IMPLEMENTATION	3.651524549140723E-4	DEFECT	3.5358753376022443E-4	DOCUMENTATION
//Yuck:	DESIGN	0.9899724947266544	WITHOUT_CLASSIFICATION	0.009421136278663797	DESIGN	4.440212192478397E-4	DEFECT	6.243085502437504E-5	IMPLEMENTATION	6.12147741785906E-5	DOCUMENTATION	3.870214623085707E-5	TEST
//TODO: we should provide some way to get keys of collection of statistics to make it easier to retrieve from a GUI perspective	DESIGN	0.8451705059653277	DESIGN	0.15403070368567526	WITHOUT_CLASSIFICATION	4.0249649867775286E-4	IMPLEMENTATION	3.2857935209187173E-4	DEFECT	3.639917645598823E-5	DOCUMENTATION	3.131532177128672E-5	TEST
/**	DESIGN	0.7443957798226633	DESIGN	0.09115832074099095	WITHOUT_CLASSIFICATION	0.08242936482622316	DEFECT	0.08071796545512981	IMPLEMENTATION	7.387574675117013E-4	DOCUMENTATION	5.59811687481041E-4	TEST
// TODO : will need reference to session factory to fully complete HHH-1907	DESIGN	0.966657081856797	DESIGN	0.023066761826610233	IMPLEMENTATION	0.009395046823084863	WITHOUT_CLASSIFICATION	4.6689334538458965E-4	DEFECT	4.017092492949755E-4	DOCUMENTATION	1.2506898828469861E-5	TEST
//TODO: currently keeps Getters and Setters (instead of PropertyAccessors) because of the way getGetter() and getSetter() are implemented currently; yuck!	DESIGN	0.9995835592548886	DESIGN	3.961382721998973E-4	WITHOUT_CLASSIFICATION	1.7274258334916804E-5	DOCUMENTATION	2.329970273454848E-6	DEFECT	5.116428887052234E-7	IMPLEMENTATION	1.866014142231411E-7	TEST
//TODO: redesign how PropertyAccessors are acquired...	DESIGN	0.98742735068702	DESIGN	0.010267286723015528	WITHOUT_CLASSIFICATION	0.0018902478972656013	DEFECT	2.3629587349343638E-4	IMPLEMENTATION	1.037593280323083E-4	TEST	7.505949117303517E-5	DOCUMENTATION
// todo : YUCK!!!	DESIGN	0.9987338809203261	WITHOUT_CLASSIFICATION	0.0010629434735655759	DESIGN	1.3789650100152267E-4	DEFECT	3.5307205994335805E-5	IMPLEMENTATION	2.0350889391873185E-5	DOCUMENTATION	9.62100972046923E-6	TEST
// TODO : YUCK!!!  fix after HHH-1907 is complete	DESIGN	0.9707870235340836	DESIGN	0.012176895017095065	WITHOUT_CLASSIFICATION	0.00948871307472331	IMPLEMENTATION	0.006522088274563609	DEFECT	9.488496566731487E-4	TEST	7.643044286127739E-5	DOCUMENTATION
//TODO: need to make the majority of this functionality into a top-level support class for custom impl support	DESIGN	0.9599922413449059	DESIGN	0.035637808211578755	IMPLEMENTATION	0.003983057618585408	WITHOUT_CLASSIFICATION	2.530409294240881E-4	TEST	1.0255322168286769E-4	DOCUMENTATION	3.129867382314427E-5	DEFECT
//TODO: design new lifecycle for ProxyFactory	DESIGN	0.9497330901203065	WITHOUT_CLASSIFICATION	0.04637373769645178	DESIGN	0.0019424206977785153	IMPLEMENTATION	0.001589872410009036	DEFECT	2.8803193658101707E-4	DOCUMENTATION	7.284713887340097E-5	TEST
//TODO: would be nice to handle proxy classes elegantly!	DESIGN	0.9443993131736126	DESIGN	0.05450740178795527	WITHOUT_CLASSIFICATION	5.424548177847725E-4	DEFECT	4.2370857894098414E-4	IMPLEMENTATION	9.073495104290598E-5	DOCUMENTATION	3.6386690663242764E-5	TEST
// TODO: copy/paste from ManyToOneType	DESIGN	0.5164321140122425	DESIGN	0.291126050693923	IMPLEMENTATION	0.18605318415259456	WITHOUT_CLASSIFICATION	0.004832443063368556	DEFECT	8.951763773089253E-4	DOCUMENTATION	6.61031700562413E-4	TEST
//TODO: should this be Session.instantiate(Persister, ...)?	DESIGN	0.9105905436105324	DESIGN	0.0884931094660795	WITHOUT_CLASSIFICATION	5.32297522486465E-4	IMPLEMENTATION	2.03291320001785E-4	DEFECT	1.4268564396202125E-4	TEST	3.807243693793176E-5	DOCUMENTATION
//TODO: this is a bit arbitrary, expose a switch to the user?	DESIGN	0.7394470490295699	WITHOUT_CLASSIFICATION	0.25295768678432357	DESIGN	0.0057187864335420235	DEFECT	0.0010305350896488484	IMPLEMENTATION	5.871453688662752E-4	DOCUMENTATION	2.5879729404926395E-4	TEST
//TODO: implement caching?! proxies?!	DESIGN	0.9796848930225902	IMPLEMENTATION	0.015293871200780653	WITHOUT_CLASSIFICATION	0.00381498499965098	DESIGN	8.106130492267222E-4	DEFECT	3.3016672172652713E-4	DOCUMENTATION	6.547100602495234E-5	TEST
//TODO: is this right??	DESIGN	0.7855490959781255	DESIGN	0.21326720736064136	WITHOUT_CLASSIFICATION	5.024464420677506E-4	IMPLEMENTATION	2.6485340022363094E-4	TEST	2.1144854330022215E-4	DEFECT	2.0494827564161133E-4	DOCUMENTATION
// is this really necessary?	DESIGN	0.9998818631178009	WITHOUT_CLASSIFICATION	1.161680543674925E-4	DESIGN	5.626835695841416E-7	TEST	5.44488982414928E-7	DEFECT	4.831716222121116E-7	DOCUMENTATION	3.784836572548269E-7	IMPLEMENTATION
//TODO: move these to a new JoinableType abstract class, //extended by EntityType and PersistentCollectionType:	DESIGN	0.8220779596681715	DESIGN	0.17783347001538463	WITHOUT_CLASSIFICATION	8.400798574175588E-5	TEST	2.8186049620678804E-6	DOCUMENTATION	9.682978108816173E-7	DEFECT	7.754279289548791E-7	IMPLEMENTATION
// TODO: this is very suboptimal for some subclasses (namely components), // since it does not take advantage of two-phase-load	DESIGN	0.6351212444353715	DESIGN	0.34705595108093207	WITHOUT_CLASSIFICATION	0.010798158289233022	DEFECT	0.006671213556168008	TEST	2.569307189943924E-4	DOCUMENTATION	9.650191930097302E-5	IMPLEMENTATION
// worrying about proxies is perhaps a little bit of overkill here...	DESIGN	0.9112717365815617	DESIGN	0.08575193315356244	WITHOUT_CLASSIFICATION	0.002694596389368722	DEFECT	1.5622533084077555E-4	IMPLEMENTATION	1.2448925745847778E-4	TEST	1.0192872079395713E-6	DOCUMENTATION
// NOTE VERY HACKISH WORKAROUND!! // TODO: Fix this so it will work for non-POJO entity mode	DESIGN	0.9235705290482803	DESIGN	0.07228076234384824	IMPLEMENTATION	0.0038514819499595745	DEFECT	2.687560992151578E-4	TEST	2.8347960191537505E-5	DOCUMENTATION	1.2259850522437577E-7	WITHOUT_CLASSIFICATION
// TODO: Fix this so it will work for non-POJO entity mode	DESIGN	0.7941327579049903	IMPLEMENTATION	0.19336513994714064	DESIGN	0.01093109434800211	DEFECT	0.0012861691923800411	TEST	2.801412966692816E-4	DOCUMENTATION	4.697310817666912E-6	WITHOUT_CLASSIFICATION
// We would probably refactor to have LogicParser (builds a tree of simple // expressions connected by and, or, not), ExpressionParser (translates // from OO terms like foo, foo.Bar, foo.Bar.Baz to SQL terms like // FOOS.ID, FOOS.BAR_ID, etc) and PathExpressionParser (which does much // the same thing it does now)	DESIGN	0.8047951508572934	DESIGN	0.1930927326134747	WITHOUT_CLASSIFICATION	0.0011454919770243204	DEFECT	6.594339125426308E-4	IMPLEMENTATION	3.035694203631249E-4	TEST	3.6212193018240633E-6	DOCUMENTATION
//TODO: this is a little inefficient, don't need to do a whole //      deep replaceElements() call	DESIGN	0.9999512254500628	DESIGN	4.188462639900782E-5	IMPLEMENTATION	6.419936656416373E-6	WITHOUT_CLASSIFICATION	1.986592008575247E-7	TEST	1.8313832347267664E-7	DOCUMENTATION	8.818935758207503E-8	DEFECT
//workaround for WebLogic	DESIGN	0.9659375896270176	WITHOUT_CLASSIFICATION	0.033580461744478915	DESIGN	2.609536287240759E-4	DEFECT	1.5713306265853589E-4	IMPLEMENTATION	4.12058870489071E-5	DOCUMENTATION	2.2656050072059754E-5	TEST
//TODO: this dependency is kinda Bad	DESIGN	0.9800366046601569	DESIGN	0.008059804782056017	WITHOUT_CLASSIFICATION	0.007525136797320182	IMPLEMENTATION	0.002772519181010906	DEFECT	0.0012025316060024504	DOCUMENTATION	4.034029734538091E-4	TEST
//ick!	DESIGN	0.998685089710318	WITHOUT_CLASSIFICATION	0.0011053307012098199	DESIGN	1.6182384837857666E-4	DEFECT	2.834972437650912E-5	DOCUMENTATION	1.141075465098847E-5	TEST	7.995261066175079E-6	IMPLEMENTATION
// short cut check...	DESIGN	0.9999489714910711	WITHOUT_CLASSIFICATION	3.765861762979852E-5	IMPLEMENTATION	9.519109324630528E-6	DESIGN	1.7995569621134696E-6	TEST	1.1508589265326388E-6	DOCUMENTATION	9.003660858550387E-7	DEFECT
// todo : move to StringHelper?	DESIGN	0.9682462969389092	WITHOUT_CLASSIFICATION	0.03170957246006352	DESIGN	1.837112706998171E-5	DEFECT	1.783038980615826E-5	IMPLEMENTATION	4.955643628060047E-6	DOCUMENTATION	2.973440523320241E-6	TEST
//yukky! Don't you have subclasses for that! //TODO race conditions can happen here	DESIGN	0.6907291974241732	DESIGN	0.30645572532599424	WITHOUT_CLASSIFICATION	0.0013849675246039696	TEST	9.16670247778958E-4	IMPLEMENTATION	4.695264543425094E-4	DEFECT	4.391302310717907E-5	DOCUMENTATION
//TODO: We probably should have a StatisticsNotPublishedException, to make it clean	DESIGN	0.8470638897166749	DESIGN	0.09689105401115904	WITHOUT_CLASSIFICATION	0.05131485465102525	DEFECT	0.004083107074492303	IMPLEMENTATION	5.296140830552195E-4	TEST	1.1748046359332208E-4	DOCUMENTATION
// FIXME hack to work around fact that calling // Node added = root.addChild( fqn ); doesn't  // properly set the version on the node	DESIGN	0.9925494879486421	DESIGN	0.0060705605087961806	DEFECT	7.608681065816302E-4	IMPLEMENTATION	6.157220562414484E-4	WITHOUT_CLASSIFICATION	1.7858145488105863E-6	TEST	1.5755651898562877E-6	DOCUMENTATION
// TODO: I considered validating the presence of the TS cache here, // but decided to defer unti getQueryCacheInstance() in case the  // cache is never actually used	DESIGN	0.5744250913063099	DESIGN	0.22798952938197886	WITHOUT_CLASSIFICATION	0.15726037828314404	IMPLEMENTATION	0.04012511700929532	DEFECT	1.9746515411097525E-4	DOCUMENTATION	2.4188651609822995E-6	TEST
//need to do that here rather than in the save event listener to let //the post insert events to have a id-filled entity when IDENTITY is used (EJB3)	DESIGN	0.9765894145967456	WITHOUT_CLASSIFICATION	0.021784238851974266	DESIGN	0.0013970881081110849	IMPLEMENTATION	1.4810179659159147E-4	TEST	6.630598488593124E-5	DEFECT	1.4850661691389786E-5	DOCUMENTATION
//TODO: simply remove this override //      if we fix the above todos	DESIGN	0.9996637960433347	WITHOUT_CLASSIFICATION	2.3829887010548277E-4	DESIGN	5.744101480003598E-5	DEFECT	2.072426836800906E-5	TEST	1.9366982592277756E-5	IMPLEMENTATION	3.7282079936409903E-7	DOCUMENTATION
// This, is used by SessionFactoryImpl to hand to the generated SessionImpl; // was the only reason I could see that we cannot just use null as // Settings.cacheProvider	DESIGN	0.9997448462053307	WITHOUT_CLASSIFICATION	2.550894589968921E-4	DESIGN	4.516443036763702E-8	DEFECT	1.442571343628398E-8	TEST	2.8618150511598483E-9	IMPLEMENTATION	1.8837134944284983E-9	DOCUMENTATION
// this is done here 'cos we might only know the type here (ugly!) // TODO: improve this a lot:	DESIGN	0.9984249198575345	DESIGN	0.001189639484919427	IMPLEMENTATION	3.434086143573122E-4	DEFECT	2.7596819401399327E-5	TEST	1.0534145015360827E-5	WITHOUT_CLASSIFICATION	3.9010787719363085E-6	DOCUMENTATION
// todo : would love to have this work on a notification basis //    where the successful binding of an entity/subclass would //    emit a notification which the extendsQueue entries could //    react to...	DESIGN	0.9969172994489205	WITHOUT_CLASSIFICATION	0.002894673379795679	DESIGN	1.8034823195299554E-4	DEFECT	7.520860236186047E-6	TEST	1.3842888706867207E-7	DOCUMENTATION	1.9650207554036E-8	IMPLEMENTATION
// TODO : not sure the best way to handle this. // The non-performant way :	DESIGN	0.8139587299679639	DESIGN	0.16161886554280325	IMPLEMENTATION	0.01220436886884808	TEST	0.00946911785234057	DEFECT	0.0022571212518235333	DOCUMENTATION	4.917965162205838E-4	WITHOUT_CLASSIFICATION
// would be better to use the element-type to determine // whether the old and the new are equal here; the problem being // we do not necessarily have access to the element type in all // cases	DESIGN	0.9995605513967216	WITHOUT_CLASSIFICATION	4.3504996585521445E-4	DESIGN	3.595544147551296E-6	IMPLEMENTATION	5.158557612209398E-7	DEFECT	2.7884866556791395E-7	DOCUMENTATION	8.38884877835051E-9	TEST
// This next bit is to allow for both unsaved-value="negative" // and for "older" behavior where version number did not get // seeded if it was already set in the object // TODO: shift it into unsaved-value strategy	DESIGN	0.9958343320786589	DESIGN	0.004026968029564793	WITHOUT_CLASSIFICATION	1.3841687674949338E-4	DEFECT	1.6484359485066712E-7	TEST	8.856385960393031E-8	IMPLEMENTATION	2.960757217972999E-8	DOCUMENTATION
// merges don't cascade to uninitialized collections //	DESIGN	0.9999620303520799	WITHOUT_CLASSIFICATION	3.1532946994147286E-5	DESIGN	4.767750634620445E-6	IMPLEMENTATION	8.987522116224289E-7	TEST	7.089193329250256E-7	DEFECT	6.12787468816839E-8	DOCUMENTATION
// TODO: an alternative is to check if the owner has changed; if it hasn't then // return collection.getOwner()	DESIGN	0.9500902261039743	IMPLEMENTATION	0.04787725425397481	WITHOUT_CLASSIFICATION	0.0015263091581209883	DESIGN	3.397569806174495E-4	DEFECT	1.6104953510156098E-4	TEST	5.403968210888411E-6	DOCUMENTATION
//it is possible that the tree-walking in OuterJoinLoader can get to //an association defined by a subclass, in which case the property-ref //might refer to a property defined on a subclass of the current class //in this case, the table name is not known - this temporary solution  //assumes that the property-ref refers to a property of the subclass //table that the association belongs to (a reasonable guess) //TODO: fix this, add: OuterJoinLoadable.getSubclassPropertyTableName(String propertyName)	DESIGN	0.9472315324833884	DESIGN	0.052734418261274174	DEFECT	2.308000263538872E-5	IMPLEMENTATION	7.47121546280157E-6	DOCUMENTATION	3.0324718490491877E-6	TEST	4.65565390200765E-7	WITHOUT_CLASSIFICATION
// this only works because collection entries are kept in a sequenced // map by persistence context (maybe we should do like entities and // keep a separate sequences set...) //TODO: calling entrySet on an IdentityMap is SLOW!!	DESIGN	0.9998547955921068	DESIGN	1.3259574226348497E-4	WITHOUT_CLASSIFICATION	7.79426485404203E-6	DEFECT	2.7125207954142114E-6	IMPLEMENTATION	1.6306103999910061E-6	TEST	4.7126958024513655E-7	DOCUMENTATION
// important, to account for newly saved entities in query // todo : some kind of check for new status...	DESIGN	0.927602355114825	WITHOUT_CLASSIFICATION	0.037340082169955206	IMPLEMENTATION	0.018894224179033445	DEFECT	0.015608133542086775	DESIGN	3.6771426661037695E-4	TEST	1.8749072748922433E-4	DOCUMENTATION
// brand new collection //TODO: or an array!! we can't lock objects with arrays now??	DESIGN	0.8837926883809394	WITHOUT_CLASSIFICATION	0.057410207458423124	DEFECT	0.03244529234171868	DESIGN	0.02578988381699651	IMPLEMENTATION	2.864294210034211E-4	TEST	2.7549858091887615E-4	DOCUMENTATION
//TODO: if object was an uninitialized proxy, this is inefficient, //      resulting in two SQL selects	DESIGN	0.9995170089834413	WITHOUT_CLASSIFICATION	4.770388438015574E-4	DESIGN	2.94092611969317E-6	DEFECT	2.64376842805997E-6	TEST	3.607034438707511E-7	DOCUMENTATION	6.774765592714737E-9	IMPLEMENTATION
//before cascade! //TODO: should this be Session.instantiate(Persister, ...)?	DESIGN	0.8064980506624966	DESIGN	0.19126333116131636	WITHOUT_CLASSIFICATION	0.0010576126580235214	IMPLEMENTATION	0.001044411079789326	DEFECT	1.0220228222848834E-4	TEST	3.439215614556968E-5	DOCUMENTATION
// TODO : absolutely no usages of this constructor form; can it go away?	DESIGN	0.6833867469003956	DESIGN	0.3108267980988796	IMPLEMENTATION	0.0036147959990905053	TEST	0.0020559687227771173	WITHOUT_CLASSIFICATION	1.0726944899156354E-4	DOCUMENTATION	8.420829865380025E-6	DEFECT
// todo : need to find a clean way to handle the "event source" role // a seperate classs responsible for generating/dispatching events just duplicates most of the Session methods... // passing around seperate reto interceptor, factory, actionQueue, and persistentContext is not manageable...	DESIGN	0.8197158664244629	DESIGN	0.18028238634870672	WITHOUT_CLASSIFICATION	1.4477776161478975E-6	TEST	2.3605005572709071E-7	IMPLEMENTATION	5.982138518937843E-8	DOCUMENTATION	3.5777732758695976E-9	DEFECT
// todo : remove	DESIGN	0.9850150298008338	WITHOUT_CLASSIFICATION	0.014873155782718294	DESIGN	6.460357439845636E-5	IMPLEMENTATION	3.029779734221545E-5	DEFECT	1.1675332242914874E-5	TEST	5.2377124642936335E-6	DOCUMENTATION
//aliasRefNode.resolve( false, false, aliasRefNode.getText() ); //TODO: is it kosher to do it here? //TODO: is it kosher to do it here?	DESIGN	0.9125596601448288	IMPLEMENTATION	0.07933979611954717	DESIGN	0.006266624143800323	WITHOUT_CLASSIFICATION	0.0017714743300227857	TEST	5.8208740617276195E-5	DEFECT	4.236521183732995E-6	DOCUMENTATION
// No explicit select expression; render the id and properties // projection lists for every persister in the from clause into // a single 'token node'. //TODO: the only reason we need this stuff now is collection filters, //      we should get rid of derived select clause completely!	DESIGN	0.5437143768340588	DESIGN	0.4543883662910404	WITHOUT_CLASSIFICATION	0.0017811539211966796	DEFECT	1.1067712416776442E-4	TEST	5.126625579261789E-6	DOCUMENTATION	2.9920395705602444E-7	IMPLEMENTATION
// TODO : an optimization here would be to consider cascade deletes and not gen those delete statements; //      the difficulty is the ordering of the tables here vs the cascade attributes on the persisters -> //          the table info gotten here should really be self-contained (i.e., a class representation //          defining all the needed attributes), then we could then get an array of those	DESIGN	0.7318006111501216	DESIGN	0.2615588928631225	WITHOUT_CLASSIFICATION	0.006566278218430572	IMPLEMENTATION	5.451443875784428E-5	DEFECT	1.0536034312120193E-5	TEST	9.167295255089592E-6	DOCUMENTATION
// TODO: get SQL rendering out of here, create an AST for the join expressions. // Use the SQL generator grammar to generate the SQL text for the index expression.	DESIGN	0.7737025006525934	WITHOUT_CLASSIFICATION	0.2171131819476409	DESIGN	0.008769005407943686	IMPLEMENTATION	3.9151057849236585E-4	TEST	1.5221896262207768E-5	DEFECT	8.579517067508697E-6	DOCUMENTATION
// TODO : this really needs to be delayed unitl after we definitively know all node types // where this is currently a problem is parameters for which where we cannot unequivocally // resolve an expected type	DESIGN	0.9960471914371891	DESIGN	0.003154676065728057	DEFECT	5.357805395447796E-4	IMPLEMENTATION	2.1065855419566626E-4	DOCUMENTATION	2.6900969836137316E-5	TEST	2.4792433506360525E-5	WITHOUT_CLASSIFICATION
// TODO: Figure out a better way to get the FROM elements in a proper tree structure. // If this is not the destination of a many-to-many, add it as a child of the origin.	DESIGN	0.5312140271226802	WITHOUT_CLASSIFICATION	0.24367148963483562	DEFECT	0.13872327916016292	IMPLEMENTATION	0.08384776584623538	DESIGN	0.0023109290814010653	TEST	2.3250915468485777E-4	DOCUMENTATION
// work around that crazy issue where the tree contains // "empty" FromElements (no text); afaict, this is caused // by FromElementFactory.createCollectionJoin()	DESIGN	0.543751305340913	WITHOUT_CLASSIFICATION	0.4288694380311284	DESIGN	0.01902154958497313	DEFECT	0.006692816905928408	IMPLEMENTATION	0.00151531554775875	TEST	1.4957458929828956E-4	DOCUMENTATION
//TODO: this class does too many things! we need a different //kind of path expression parser for each of the diffferent //ways in which path expressions can occur	DESIGN	0.9566799263910414	DESIGN	0.04148089100499316	WITHOUT_CLASSIFICATION	0.0013113376270206308	DEFECT	5.136808531635338E-4	DOCUMENTATION	1.0871152149461583E-5	TEST	3.292971631880083E-6	IMPLEMENTATION
//real hacky... // used to count the nesting of parentheses	DESIGN	0.9898552342739376	DESIGN	0.009584526434949555	WITHOUT_CLASSIFICATION	4.3041303673443894E-4	IMPLEMENTATION	6.433735196918058E-5	DEFECT	4.485673325123611E-5	TEST	2.063216915801866E-5	DOCUMENTATION
// TODO : would be really nice to cache the spec on the query-def so as to not have to re-calc the hash; // currently not doable though because of the resultset-ref stuff...	DESIGN	0.6791521411727185	WITHOUT_CLASSIFICATION	0.18632078012667086	DESIGN	0.08973708456177619	IMPLEMENTATION	0.04218979962017868	DEFECT	0.0022816632562286557	DOCUMENTATION	3.185312624272114E-4	TEST
//for arrays, we should end the collection load before resolving //the entities, since the actual array instances are not instantiated //during loading //TODO: or we could do this polymorphically, and have two //      different operations implemented differently for arrays	DESIGN	0.5995327355629881	IMPLEMENTATION	0.17263494436639745	DESIGN	0.12080659609217886	WITHOUT_CLASSIFICATION	0.10682200145658446	DEFECT	1.555872110226271E-4	DOCUMENTATION	4.813531082844739E-5	TEST
// polymorphism not really handled completely correctly, // perhaps...well, actually its ok, assuming that the // entity name used in the lookup is the same as the // the one used here, which it will be	DESIGN	0.9987419140720434	WITHOUT_CLASSIFICATION	7.808155587284202E-4	DESIGN	4.765890572459695E-4	DEFECT	3.9272694519661374E-7	IMPLEMENTATION	2.4504342350071787E-7	TEST	4.3541613431131405E-8	DOCUMENTATION
// TODO: should "record" how many properties we have reffered to - and if we  //       don't get'em'all we throw an exception! Way better than trial and error ;)	DESIGN	0.9590422647229364	DEFECT	0.040842213299148465	DESIGN	7.97015468652502E-5	WITHOUT_CLASSIFICATION	1.6516258079772243E-5	TEST	1.592747563802443E-5	IMPLEMENTATION	3.3766973319978776E-6	DOCUMENTATION
// VERY IMPORTANT!!!! - This class needs to be free of any static references // to any CGLIB or Javassist classes.  Otherwise, users will always need both // on their classpaths no matter which (if either) they use. // // Another option here would be to remove the Hibernate.isPropertyInitialized() // method and have the users go through the SessionFactory to get this information.	DESIGN	0.8974998013182515	WITHOUT_CLASSIFICATION	0.10234284975331509	DESIGN	1.2064828397384344E-4	DEFECT	1.689035766605289E-5	DOCUMENTATION	1.5005909704671411E-5	IMPLEMENTATION	4.804377088881111E-6	TEST
// TODO: is it really neceassry to provide Configuration to CollectionPersisters ? Should it not be enough with associated class ? // or why does EntityPersister's not get access to configuration ? // // The only reason I could see that Configuration gets passed to collection persisters // is so that they can look up the dom4j node name of the entity element in case // no explicit node name was applied at the collection element level.  Are you kidding me? // Trivial to fix then.  Just store and expose the node name on the entity persister // (which the collection persister looks up anyway via other means...).	DESIGN	0.9943543332443101	DESIGN	0.0054582133390611446	WITHOUT_CLASSIFICATION	1.3794892337736046E-4	IMPLEMENTATION	2.2212581132788508E-5	TEST	1.4473977375148722E-5	DEFECT	1.2817934743463489E-5	DOCUMENTATION
//for backward compatibility, allow a set with no not-null  //element columns, using all columns in the row locater SQL //TODO: create an implicit not null constraint on all cols?	DESIGN	0.9917124280597113	WITHOUT_CLASSIFICATION	0.006287489370097253	DESIGN	0.001754702836240665	IMPLEMENTATION	1.7702092773631766E-4	DEFECT	5.963978971652069E-5	TEST	8.71901649811478E-6	DOCUMENTATION
//SPACES //TODO: i'm not sure, but perhaps we should exclude //      abstract denormalized tables?	DESIGN	0.9166994039354003	DESIGN	0.0707701232576376	WITHOUT_CLASSIFICATION	0.006297238311771626	IMPLEMENTATION	0.0050937054445116614	DEFECT	6.868645203864926E-4	TEST	4.526645302924906E-4	DOCUMENTATION
//workaround, for backward compatibility of sets with no //not-null columns, assume all columns are used in the //row locator SQL	DESIGN	0.9998515443689625	WITHOUT_CLASSIFICATION	1.429877322717546E-4	DESIGN	5.40833668712893E-6	DEFECT	3.188065157083017E-8	TEST	2.0314765884301366E-8	DOCUMENTATION	7.3666612666935746E-9	IMPLEMENTATION
//note that this method could easily be moved up to BasicEntityPersister, //if we ever needed to reuse it from other subclasses	DESIGN	0.9963566712202402	DESIGN	0.0036342403762843908	WITHOUT_CLASSIFICATION	7.204534300396379E-6	TEST	1.7465811241796083E-6	IMPLEMENTATION	9.40220238687907E-8	DOCUMENTATION	4.3266027080568335E-8	DEFECT
//index += getPropertyColumnSpan( i ); //TODO:  this is kinda slow...	DESIGN	0.7722431655550617	DEFECT	0.21588095460840415	DESIGN	0.009752726411543617	WITHOUT_CLASSIFICATION	0.0013735463643176646	IMPLEMENTATION	5.526504098564297E-4	TEST	1.9695665081639018E-4	DOCUMENTATION
//TODO: need some caching scheme? really comes down to decision  //      regarding amount of state (if any) kept on PropertyAccessors	DESIGN	0.9496543092153142	DESIGN	0.04653621276653673	DEFECT	0.0016945308727603539	IMPLEMENTATION	0.0015838752267007337	WITHOUT_CLASSIFICATION	3.867976915997015E-4	TEST	1.442742270883707E-4	DOCUMENTATION
// TODO: here is why we need to make bytecode provider global :( // TODO : again, fix this after HHH-1907 is complete	DESIGN	0.9922739005685371	DESIGN	0.007145363311565485	IMPLEMENTATION	5.571875389460365E-4	TEST	1.4059908976139746E-5	DOCUMENTATION	9.418124996068556E-6	DEFECT	7.054697911504294E-8	WITHOUT_CLASSIFICATION
//TODO: Yuck! This is not quite good enough, it's a quick //hack around the problem of having a to-one association //that refers to an embedded component:	DESIGN	0.9944336820675724	DESIGN	0.005559942350845067	DEFECT	5.2493855456870755E-6	IMPLEMENTATION	7.994223710770317E-7	TEST	2.1288664577074572E-7	DOCUMENTATION	1.1388701993317637E-7	WITHOUT_CLASSIFICATION
// for DOM4J "collections" only // TODO: it would be better if this was done at the higher level by Printer	DESIGN	0.9073567947514938	DESIGN	0.05308759637978907	TEST	0.022944558840956072	IMPLEMENTATION	0.01527137286917594	WITHOUT_CLASSIFICATION	0.0012316075621478008	DEFECT	1.0806959643756856E-4	DOCUMENTATION
// would be great to move all this below here into another method that could also be used // from the new scrolling stuff. // // Would need to change the way the max-row stuff is handled (i.e. behind an interface) so // that I could do the control breaking at the means to know when to stop	DESIGN	0.9864333848012633	DESIGN	0.013565148861134328	WITHOUT_CLASSIFICATION	1.429313007899658E-6	TEST	1.7077176981166323E-8	DOCUMENTATION	1.1832198825179864E-8	IMPLEMENTATION	8.115218724087796E-9	DEFECT
//TODO: can we *always* use the "null property" approach for everything?	DESIGN	0.959300962699611	DESIGN	0.036819598345657394	WITHOUT_CLASSIFICATION	0.003449973504720083	IMPLEMENTATION	3.7550507613434356E-4	DEFECT	5.2279645601921456E-5	DOCUMENTATION	1.6807282753659485E-6	TEST
//polymorphism comment above	DESIGN	0.9999961176691122	WITHOUT_CLASSIFICATION	2.2414338835008277E-6	DESIGN	5.025101517637597E-7	IMPLEMENTATION	4.908128411502363E-7	TEST	4.5358752254796556E-7	DOCUMENTATION	1.939864888283451E-7	DEFECT
// some messy, complex stuff here, since createCriteria() can take an // aliased path, or a path rooted at the creating criteria instance	DESIGN	0.9999852533414796	WITHOUT_CLASSIFICATION	8.714945431764537E-6	IMPLEMENTATION	4.429337311347436E-6	DESIGN	1.4277618036068237E-6	TEST	1.6014858135880083E-7	DEFECT	1.4465392185410764E-8	DOCUMENTATION
//TODO: really bad, evil hack to fix!!!	DESIGN	0.9989061732490474	DESIGN	8.968813620677952E-4	DEFECT	1.7388321693059862E-4	IMPLEMENTATION	1.3174686255579882E-5	DOCUMENTATION	9.107916397183378E-6	WITHOUT_CLASSIFICATION	7.795693014989179E-7	TEST
// ugly hack for cases like "elements(foo.bar.collection)" // (multi-part path expression ending in elements or indices)	DESIGN	0.9471752263153089	DESIGN	0.049316877494145664	WITHOUT_CLASSIFICATION	0.003494101849750252	DEFECT	7.086087860239097E-6	IMPLEMENTATION	4.654690607343941E-6	TEST	2.0535623278590743E-6	DOCUMENTATION
// try block is a hack around fact that currently tuplizers are not // given the opportunity to resolve a subclass entity name.  this // allows the (we assume custom) interceptor the ability to // influence this decision if we were not able to based on the // given entityName	DESIGN	0.9990431970556365	DESIGN	9.567405276087026E-4	WITHOUT_CLASSIFICATION	3.965870997582285E-8	TEST	2.1560590992335893E-8	DOCUMENTATION	1.0212178525655572E-9	IMPLEMENTATION	1.7623595154747225E-10	DEFECT
/////////////////////////////////////////////////////////////////////// // HACK ALERT !!!!!!!!!!!!!!!!!!!!!!!!!!!! // Attempt to work around "ghost" ImpliedFromElements that occasionally // show up between the actual things being joined.  This consistently // occurs from index nodes (at least against many-to-many).  Not sure // if there are other conditions // // Essentially, look-ahead to the next FromElement that actually // writes something to the SQL	DESIGN	0.9633734410553589	DESIGN	0.036594287044543525	WITHOUT_CLASSIFICATION	2.5623893710044177E-5	TEST	5.4935102648915724E-6	DEFECT	8.398181024111876E-7	DOCUMENTATION	3.1467801992511914E-7	IMPLEMENTATION
//init the table here instead of earlier, so that we can get a quoted table name //TODO: would it be better to simply pass the qualified table name, instead of //      splitting it up into schema/catalog/table names	DESIGN	0.8676433157623691	DESIGN	0.12969186863991347	WITHOUT_CLASSIFICATION	0.0025905890349284897	IMPLEMENTATION	7.347315547670067E-5	TEST	5.703088399452107E-7	DOCUMENTATION	1.830984724544984E-7	DEFECT
// TODO : would be great to have a Mapping#hasNonIdentifierPropertyNamedId method // I don't believe that Mapping#getReferencedPropertyType accounts for the identifier property; so // if it returns for a property named 'id', then we should have a non-id field named id	DESIGN	0.9984619409379307	DESIGN	0.0011903265361899948	IMPLEMENTATION	3.3113882183195435E-4	WITHOUT_CLASSIFICATION	1.2278086191439221E-5	DEFECT	4.141351628625312E-6	TEST	1.7426622751110925E-7	DOCUMENTATION
//TODO: is this really necessary????	DESIGN	0.760268645145093	DESIGN	0.2367303608947735	WITHOUT_CLASSIFICATION	0.001440314503111126	IMPLEMENTATION	0.001126880544876183	DEFECT	3.0137280889221E-4	DOCUMENTATION	1.3242610325411662E-4	TEST
//TODO: ideally we need the construction of PropertyAccessor to take the following: //      1) EntityMode //      2) EntityMode-specific data (i.e., the classname for pojo entities) //      3) Property-specific data based on the EntityMode (i.e., property-name or dom4j-node-name) // The easiest way, with the introduction of the new runtime-metamodel classes, would be the // the following predicates: //      1) PropertyAccessorFactory.getPropertyAccessor() takes references to both a //          org.hibernate.metadata.EntityModeMetadata and org.hibernate.metadata.Property //      2) What is now termed a "PropertyAccessor" stores any values needed from those two //          pieces of information //      3) Code can then simply call PropertyAccess.getGetter() with no parameters; likewise with //          PropertyAccessor.getSetter()	DESIGN	0.9987908637252624	DESIGN	5.23266100668555E-4	DEFECT	4.226521288701476E-4	WITHOUT_CLASSIFICATION	1.427105760514982E-4	IMPLEMENTATION	1.1044450017632567E-4	DOCUMENTATION	1.0062968971034143E-5	TEST
//TODO: this is temporary in that the end result will probably not take a Property reference per-se.	DESIGN	0.9998526662668488	DESIGN	8.208856494370978E-5	DEFECT	6.497227167116582E-5	WITHOUT_CLASSIFICATION	1.558936491854238E-7	DOCUMENTATION	7.131237706842401E-8	TEST	4.5690510296542494E-8	IMPLEMENTATION
// todo : this eventually needs to be removed	DESIGN	0.9101951865119035	WITHOUT_CLASSIFICATION	0.07511225136888153	DESIGN	0.012711788732123891	IMPLEMENTATION	0.0018358848004526606	DEFECT	7.473640724165945E-5	TEST	7.015217939683743E-5	DOCUMENTATION
//TODO: make this a bit nicer	DESIGN	0.705205975251832	DESIGN	0.280739096969056	WITHOUT_CLASSIFICATION	0.008219738424676435	TEST	0.005116449365761127	IMPLEMENTATION	3.651524549140723E-4	DEFECT	3.5358753376022443E-4	DOCUMENTATION
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.768021577567748	WITHOUT_CLASSIFICATION	0.23167969325650933	DESIGN	2.843534805281098E-4	IMPLEMENTATION	1.1953636451566206E-5	TEST	2.067660646754026E-6	DOCUMENTATION	3.543981162784826E-7	DEFECT
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.768021577567748	WITHOUT_CLASSIFICATION	0.23167969325650933	DESIGN	2.843534805281098E-4	IMPLEMENTATION	1.1953636451566206E-5	TEST	2.067660646754026E-6	DOCUMENTATION	3.543981162784826E-7	DEFECT
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.768021577567748	WITHOUT_CLASSIFICATION	0.23167969325650933	DESIGN	2.843534805281098E-4	IMPLEMENTATION	1.1953636451566206E-5	TEST	2.067660646754026E-6	DOCUMENTATION	3.543981162784826E-7	DEFECT
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.768021577567748	WITHOUT_CLASSIFICATION	0.23167969325650933	DESIGN	2.843534805281098E-4	IMPLEMENTATION	1.1953636451566206E-5	TEST	2.067660646754026E-6	DOCUMENTATION	3.543981162784826E-7	DEFECT
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.768021577567748	WITHOUT_CLASSIFICATION	0.23167969325650933	DESIGN	2.843534805281098E-4	IMPLEMENTATION	1.1953636451566206E-5	TEST	2.067660646754026E-6	DOCUMENTATION	3.543981162784826E-7	DEFECT
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.768021577567748	WITHOUT_CLASSIFICATION	0.23167969325650933	DESIGN	2.843534805281098E-4	IMPLEMENTATION	1.1953636451566206E-5	TEST	2.067660646754026E-6	DOCUMENTATION	3.543981162784826E-7	DEFECT
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.768021577567748	WITHOUT_CLASSIFICATION	0.23167969325650933	DESIGN	2.843534805281098E-4	IMPLEMENTATION	1.1953636451566206E-5	TEST	2.067660646754026E-6	DOCUMENTATION	3.543981162784826E-7	DEFECT
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.768021577567748	WITHOUT_CLASSIFICATION	0.23167969325650933	DESIGN	2.843534805281098E-4	IMPLEMENTATION	1.1953636451566206E-5	TEST	2.067660646754026E-6	DOCUMENTATION	3.543981162784826E-7	DEFECT
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.9746348023514263	DESIGN	0.02529948148116446	WITHOUT_CLASSIFICATION	4.371666460167318E-5	DOCUMENTATION	1.0889932093688894E-5	DEFECT	5.798585658831078E-6	TEST	5.3109850549585896E-6	IMPLEMENTATION
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.9746348023514263	DESIGN	0.02529948148116446	WITHOUT_CLASSIFICATION	4.371666460167318E-5	DOCUMENTATION	1.0889932093688894E-5	DEFECT	5.798585658831078E-6	TEST	5.3109850549585896E-6	IMPLEMENTATION
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.9746348023514263	DESIGN	0.02529948148116446	WITHOUT_CLASSIFICATION	4.371666460167318E-5	DOCUMENTATION	1.0889932093688894E-5	DEFECT	5.798585658831078E-6	TEST	5.3109850549585896E-6	IMPLEMENTATION
// TODO : probably better to calculate these and pass them in, as it'll be more performant	DESIGN	0.9958580395165285	DESIGN	0.0040412934045966995	IMPLEMENTATION	4.477305559586516E-5	DEFECT	3.805003225237099E-5	WITHOUT_CLASSIFICATION	1.732020488189293E-5	DOCUMENTATION	5.237861445302859E-7	TEST
