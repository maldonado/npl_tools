// todo : add support for READ_WRITE ( + NONSTRICT_READ_WRITE ??? )	IMPLEMENTATION	0.9598746524968566	WITHOUT_CLASSIFICATION	0.03968478970310685	IMPLEMENTATION	4.324196069122042E-4	DESIGN	4.2492425302712824E-6	DOCUMENTATION	3.686570118713094E-6	TEST	2.0238047553260973E-7	DEFECT
// todo : add support for READ_WRITE ( + NONSTRICT_READ_WRITE ??? )	IMPLEMENTATION	0.9598746524968566	WITHOUT_CLASSIFICATION	0.03968478970310685	IMPLEMENTATION	4.324196069122042E-4	DESIGN	4.2492425302712824E-6	DOCUMENTATION	3.686570118713094E-6	TEST	2.0238047553260973E-7	DEFECT
//TODO: return new Lock(ts);	IMPLEMENTATION	0.8804903879466036	WITHOUT_CLASSIFICATION	0.11808527657581892	DESIGN	8.026093650331E-4	DEFECT	4.576831733962495E-4	IMPLEMENTATION	1.4318216893137968E-4	DOCUMENTATION	2.086077021683706E-5	TEST
//TODO: if lock.getTimestamp().equals(ts)	IMPLEMENTATION	0.5579694903448147	WITHOUT_CLASSIFICATION	0.397565033590478	IMPLEMENTATION	0.02457306172863073	TEST	0.01666562922792489	DEFECT	0.0026460800864415218	DESIGN	5.807050217101032E-4	DOCUMENTATION
//TODO mappings.getLogicalTableName(ownerTable)	IMPLEMENTATION	0.47376136826679244	WITHOUT_CLASSIFICATION	0.4043986204639225	IMPLEMENTATION	0.10676066010145299	DESIGN	0.008930556787848843	TEST	0.005199338746722987	DEFECT	9.494556332602587E-4	DOCUMENTATION
// TODO: handle TypeDefs	IMPLEMENTATION	0.9078883436042793	IMPLEMENTATION	0.049495114765835596	WITHOUT_CLASSIFICATION	0.04167592450523818	DESIGN	5.07102573176628E-4	DEFECT	2.3363615061594643E-4	DOCUMENTATION	1.9987840085435095E-4	TEST
//TODO check there is no actual definition elemnents when a ref is defined	IMPLEMENTATION	0.8851355094521878	WITHOUT_CLASSIFICATION	0.09706068292423865	DESIGN	0.017761083771690993	IMPLEMENTATION	3.3746251045204256E-5	DOCUMENTATION	7.524611544952982E-6	TEST	1.4529892923136764E-6	DEFECT
// TODO: bindpropertyresults(alias, returnElem)	IMPLEMENTATION	0.7379947822516235	WITHOUT_CLASSIFICATION	0.1887806289654014	DESIGN	0.05250935276670701	DEFECT	0.020246438236935622	IMPLEMENTATION	3.167649933864478E-4	TEST	1.5203278594606853E-4	DOCUMENTATION
//TODO: validate existing of property with the chosen name. (secondpass )	IMPLEMENTATION	0.9782624025892845	WITHOUT_CLASSIFICATION	0.01805138847401362	IMPLEMENTATION	0.0025752915287713595	DESIGN	9.512485513433545E-4	DEFECT	1.2848798543407572E-4	TEST	3.1180871153060255E-5	DOCUMENTATION
//TODO: native ids	IMPLEMENTATION	0.5563909900985791	IMPLEMENTATION	0.427112976030373	WITHOUT_CLASSIFICATION	0.008294866359821835	DESIGN	0.0067149594898437215	DEFECT	0.001076930276569652	DOCUMENTATION	4.092777448126022E-4	TEST
//TODO: if we are using identity columns, fetch the identifier	IMPLEMENTATION	0.9992757169483093	WITHOUT_CLASSIFICATION	5.500681867742044E-4	IMPLEMENTATION	1.5356537686294394E-4	DESIGN	9.466498305173377E-6	TEST	6.818827313031975E-6	DOCUMENTATION	4.364162435372273E-6	DEFECT
//TODO: handle property-ref	IMPLEMENTATION	0.6020161515625946	WITHOUT_CLASSIFICATION	0.3155285655810261	IMPLEMENTATION	0.07511686391945933	DESIGN	0.006366630715984321	DEFECT	7.396657322613973E-4	DOCUMENTATION	2.3212248867425986E-4	TEST
//TODO: get all properties, not just the fetched ones!	IMPLEMENTATION	0.9958906243846276	WITHOUT_CLASSIFICATION	0.003696672130719429	IMPLEMENTATION	3.711685605824025E-4	DESIGN	2.419931787468915E-5	DEFECT	1.3682193984615601E-5	TEST	3.6534122111895274E-6	DOCUMENTATION
//TODO: get all properties, not just the fetched ones!	IMPLEMENTATION	0.9958906243846276	WITHOUT_CLASSIFICATION	0.003696672130719429	IMPLEMENTATION	3.711685605824025E-4	DESIGN	2.419931787468915E-5	DEFECT	1.3682193984615601E-5	TEST	3.6534122111895274E-6	DOCUMENTATION
/**	IMPLEMENTATION	0.41139116692226024	DOCUMENTATION	0.38195748800012463	DESIGN	0.10269272777172639	IMPLEMENTATION	0.0376612794413521	WITHOUT_CLASSIFICATION	0.035076360431814946	DEFECT	0.03122097743272162	TEST
// TODO: RESTRICT VIOLATION	IMPLEMENTATION	0.7429990913222979	IMPLEMENTATION	0.14804096287667895	WITHOUT_CLASSIFICATION	0.09411773675080001	DESIGN	0.010181268869668482	DEFECT	0.002422389320436064	DOCUMENTATION	0.0022385508601186163	TEST
// TODO: lowercasing done here. Was done "at random" before; maybe not needed at all ?	IMPLEMENTATION	0.9620885791701825	IMPLEMENTATION	0.03191259565433557	DESIGN	0.005886411601063206	DEFECT	9.418035283836415E-5	TEST	1.4654993092390527E-5	WITHOUT_CLASSIFICATION	3.5782284878250287E-6	DOCUMENTATION
// TODO: toLowerCase was not done before. Only used in Template.	IMPLEMENTATION	0.768083969058636	DESIGN	0.2308874264737196	WITHOUT_CLASSIFICATION	8.377530428186296E-4	DEFECT	1.0094176163583419E-4	IMPLEMENTATION	7.403516979196467E-5	TEST	1.5874493398133975E-5	DOCUMENTATION
// add an entry for this type of entity. // we can be assured that all referenced entities have already // been processed, // so specify that this entity is with the latest batch. // doing the batch number before adding the name to the list is // a faster way to get an accurate number.	IMPLEMENTATION	0.9999982854543181	WITHOUT_CLASSIFICATION	1.7139838761384278E-6	DESIGN	3.349379444277092E-10	TEST	2.261854375824781E-10	DOCUMENTATION	5.577488577926754E-13	IMPLEMENTATION	1.247772873615795E-13	DEFECT
//TODO: avoid this for non-new instances where mightBeDirty==false	IMPLEMENTATION	0.9359973874943538	DESIGN	0.031735513902879875	DEFECT	0.025755453808729938	WITHOUT_CLASSIFICATION	0.00548356232858478	IMPLEMENTATION	6.32372022616629E-4	DOCUMENTATION	3.9571044283488174E-4	TEST
//TODO: optimize away this lookup for entities w/o unsaved-value="undefined"	IMPLEMENTATION	0.6531817701223127	WITHOUT_CLASSIFICATION	0.3403671701206571	IMPLEMENTATION	0.006341225883913166	DESIGN	5.455232491325424E-5	DOCUMENTATION	4.886163958944701E-5	TEST	6.4199086142877975E-6	DEFECT
// we could move this inside if we wanted to // tolerate collection initializations during // collection dirty checking:	IMPLEMENTATION	0.8901877404075519	WITHOUT_CLASSIFICATION	0.1097456580967866	DESIGN	3.5537499274150935E-5	TEST	2.5632267078067708E-5	DEFECT	5.199642837373662E-6	IMPLEMENTATION	2.3208647208167655E-7	DOCUMENTATION
//TODO: assertion only, could be optimized away	IMPLEMENTATION	0.9190102403343559	IMPLEMENTATION	0.07410635524259256	WITHOUT_CLASSIFICATION	0.005032038662210236	DESIGN	8.915466203531118E-4	DEFECT	8.447068846689482E-4	TEST	1.1511225581933023E-4	DOCUMENTATION
//TODO: check that entry.getIdentifier().equals(requestedId)	IMPLEMENTATION	0.9866536781074599	IMPLEMENTATION	0.01297655722554266	WITHOUT_CLASSIFICATION	3.2618750504903235E-4	DESIGN	3.7066929717507354E-5	TEST	5.591617219480035E-6	DOCUMENTATION	9.186150114178632E-7	DEFECT
//TODO: check that entry.getIdentifier().equals(requestedId)	IMPLEMENTATION	0.9866536781074599	IMPLEMENTATION	0.01297655722554266	WITHOUT_CLASSIFICATION	3.2618750504903235E-4	DESIGN	3.7066929717507354E-5	TEST	5.591617219480035E-6	DOCUMENTATION	9.186150114178632E-7	DEFECT
// TODO : why aren't these the same?	IMPLEMENTATION	0.5442049219918557	DESIGN	0.4505450776181093	IMPLEMENTATION	0.00369188089640456	DOCUMENTATION	9.661010641870213E-4	TEST	5.526163777505526E-4	DEFECT	3.940205169292412E-5	WITHOUT_CLASSIFICATION
//TODO: always true for now, but not if we later decide to support elements() in the from clause	IMPLEMENTATION	0.50407221776094	DESIGN	0.4462653221386734	WITHOUT_CLASSIFICATION	0.04606729174073122	DEFECT	0.00350797793748055	IMPLEMENTATION	7.920097012903907E-5	DOCUMENTATION	7.989452045846904E-6	TEST
// TODO : or should we return 'containsTableAlias'??	IMPLEMENTATION	0.998769096311958	DESIGN	0.0011959911476017518	IMPLEMENTATION	1.9856557681574885E-5	WITHOUT_CLASSIFICATION	7.444356864547288E-6	DEFECT	6.536930437862088E-6	DOCUMENTATION	1.0746954564269947E-6	TEST
//TODO: arithmetic expressions, multiple new Foo(...)	IMPLEMENTATION	0.5240106598489925	IMPLEMENTATION	0.337550783002738	WITHOUT_CLASSIFICATION	0.1331307019954494	DESIGN	0.004910696894702236	DEFECT	2.1689527385573604E-4	TEST	1.8026298426204618E-4	DOCUMENTATION
//TODO: for some dialects it would be appropriate to add the renderOrderByPropertiesSelect() to other select strings	IMPLEMENTATION	0.523208274576098	IMPLEMENTATION	0.3917052103489657	DESIGN	0.07222964731435985	WITHOUT_CLASSIFICATION	0.008394354173200487	DEFECT	0.004285676677720893	TEST	1.7683690965520244E-4	DOCUMENTATION
//TODO: cache the persister, this shows up in yourkit	IMPLEMENTATION	0.9882790610994711	DESIGN	0.007380097359497637	WITHOUT_CLASSIFICATION	0.0033317913666435946	DEFECT	8.79820872514539E-4	IMPLEMENTATION	7.51454019764634E-5	TEST	5.408389989652029E-5	DOCUMENTATION
//TODO: theoretically non-threadsafe...	IMPLEMENTATION	0.7421450417930829	DESIGN	0.23274007943632843	IMPLEMENTATION	0.017947926005820767	WITHOUT_CLASSIFICATION	0.00678702463560375	DEFECT	3.5048985329164063E-4	DOCUMENTATION	2.9438275872448E-5	TEST
// todo : look at optimizing these...	IMPLEMENTATION	0.7425191019993514	WITHOUT_CLASSIFICATION	0.22267464831009315	IMPLEMENTATION	0.024882600759872385	DESIGN	0.009241934409214236	DEFECT	5.652923095695699E-4	TEST	1.1642221189926185E-4	DOCUMENTATION
//TODO: maybe call it getRowSelection() ?	IMPLEMENTATION	0.5946932957006931	DESIGN	0.3653770888488512	IMPLEMENTATION	0.02655446827413726	WITHOUT_CLASSIFICATION	0.013174045770708876	DEFECT	1.089310631149297E-4	DOCUMENTATION	9.217034249465747E-5	TEST
//TODO: make this handle multiple collection roles!	IMPLEMENTATION	0.7678373861467889	DESIGN	0.10589303167245345	DEFECT	0.09574325017104227	WITHOUT_CLASSIFICATION	0.02919450229798814	IMPLEMENTATION	0.001216058912431897	TEST	1.1577079929533963E-4	DOCUMENTATION
//TODO: can we limit stored procedures ?!	IMPLEMENTATION	0.5926554030623129	WITHOUT_CLASSIFICATION	0.4051884395183721	DESIGN	0.0018711459073484972	DEFECT	1.2798009188311107E-4	DOCUMENTATION	9.611262776220132E-5	IMPLEMENTATION	6.09187923212221E-5	TEST
// TODO: not visible to the user!	IMPLEMENTATION	0.5792824837296369	WITHOUT_CLASSIFICATION	0.2935449797768307	IMPLEMENTATION	0.12348354502211702	DEFECT	0.003025636677951475	DESIGN	3.3473610405912636E-4	DOCUMENTATION	3.286186894048535E-4	TEST
//TODO: unnecessary for databases with ANSI-style joins	IMPLEMENTATION	0.5886663846796825	IMPLEMENTATION	0.25150836425295425	WITHOUT_CLASSIFICATION	0.158846236143736	DESIGN	6.021487809705552E-4	DEFECT	2.632811811200833E-4	TEST	1.1358496153665473E-4	DOCUMENTATION
//TODO: use these in methods above	IMPLEMENTATION	0.9338491675117861	DESIGN	0.036898226274058456	WITHOUT_CLASSIFICATION	0.028454623203101305	IMPLEMENTATION	5.393077102243627E-4	TEST	2.00197283974257E-4	DOCUMENTATION	5.847801685545312E-5	DEFECT
// TODO: better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.9629179191070195	DESIGN	0.034194529206502455	IMPLEMENTATION	0.0024351437645266593	WITHOUT_CLASSIFICATION	2.95906352249058E-4	DEFECT	1.4068098624769057E-4	TEST	1.582058345466905E-5	DOCUMENTATION
// TODO: better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.9629179191070195	DESIGN	0.034194529206502455	IMPLEMENTATION	0.0024351437645266593	WITHOUT_CLASSIFICATION	2.95906352249058E-4	DEFECT	1.4068098624769057E-4	TEST	1.582058345466905E-5	DOCUMENTATION
// TODO : temporary initial step towards HHH-1907	IMPLEMENTATION	0.9979984404138232	DESIGN	9.850351009147683E-4	WITHOUT_CLASSIFICATION	8.79958328049579E-4	IMPLEMENTATION	7.812959763892726E-5	TEST	5.095113780976363E-5	DEFECT	7.485421763729553E-6	DOCUMENTATION
// todo : remove this once ComponentMetamodel is complete and merged	IMPLEMENTATION	0.9614745414606051	DESIGN	0.03852544281982224	WITHOUT_CLASSIFICATION	1.1241097725734597E-8	TEST	2.357037746248039E-9	DEFECT	1.4630635588100466E-9	IMPLEMENTATION	6.583736716852502E-10	DOCUMENTATION
//TODO handle supportsNotNullUnique=false, but such a case does not exist in the wild so far	IMPLEMENTATION	0.5615508587234351	WITHOUT_CLASSIFICATION	0.2225450731848198	DEFECT	0.20418941139790925	DESIGN	0.00999025840817243	IMPLEMENTATION	0.0013656864128310804	TEST	3.5871187283234574E-4	DOCUMENTATION
// TODO : still need to make CollectionPersisters EntityMode-aware	IMPLEMENTATION	0.9809738150963788	DESIGN	0.01625590502498675	IMPLEMENTATION	0.0011377559077671519	TEST	9.694935167971407E-4	WITHOUT_CLASSIFICATION	4.0337175340990014E-4	DOCUMENTATION	2.5965870066031835E-4	DEFECT
//TODO: add owner argument!!	IMPLEMENTATION	0.5043550158258607	WITHOUT_CLASSIFICATION	0.404424474568111	IMPLEMENTATION	0.04680037452296086	DOCUMENTATION	0.03521887265012061	DESIGN	0.007846895249564575	DEFECT	0.00135436718338215	TEST
//TODO: formulas ?	IMPLEMENTATION	0.8069563684221737	WITHOUT_CLASSIFICATION	0.17496700650138872	DESIGN	0.01714997449674647	IMPLEMENTATION	4.3193603348166856E-4	DEFECT	2.5262281500306686E-4	TEST	2.4209173120625112E-4	DOCUMENTATION
//TODO: include the rowids!!!!	IMPLEMENTATION	0.46340893227077073	WITHOUT_CLASSIFICATION	0.2871217703067934	DESIGN	0.2344111475486637	IMPLEMENTATION	0.010464493762252251	DEFECT	0.0042448017126609635	DOCUMENTATION	3.488543988589163E-4	TEST
// todo : cache this sql...	IMPLEMENTATION	0.7320607705654754	WITHOUT_CLASSIFICATION	0.2666165366683576	DESIGN	0.0011130563720755239	DEFECT	1.549162372641983E-4	IMPLEMENTATION	3.0603171351175326E-5	DOCUMENTATION	2.411698547619043E-5	TEST
//TODO: create uk loaders for component properties	IMPLEMENTATION	0.9719183953255134	WITHOUT_CLASSIFICATION	0.016331605168180805	IMPLEMENTATION	0.011212538577575327	DESIGN	1.9620392780503166E-4	TEST	1.8525607309813393E-4	DEFECT	1.5600092782739198E-4	DOCUMENTATION
//TODO: cache this in an instvar	IMPLEMENTATION	0.9538758393160309	DESIGN	0.04592029152322144	WITHOUT_CLASSIFICATION	6.406765116533492E-5	TEST	6.169413781717867E-5	DEFECT	6.061856355383218E-5	DOCUMENTATION	1.7488808211441903E-5	IMPLEMENTATION
/////////////////////////////////////////////////////////////////////// // TODO : look at perhaps caching this...	IMPLEMENTATION	0.9959975287469989	DESIGN	0.0026084564440575	IMPLEMENTATION	0.0013175398914211012	DEFECT	5.522546748033812E-5	TEST	2.0865463352260478E-5	DOCUMENTATION	3.8398668979120553E-7	WITHOUT_CLASSIFICATION
//TODO: eventually put this back in, once we think all is fixed //Object otherAlias = columnsUnique.put(qualifiedColumn, columnAlias);	IMPLEMENTATION	0.6205840091411934	IMPLEMENTATION	0.2113079853802919	DESIGN	0.16751057135298578	WITHOUT_CLASSIFICATION	2.696600746015621E-4	DOCUMENTATION	2.566683493994197E-4	DEFECT	7.110570152800822E-5	TEST
//TODO: if we support multiple fetch groups, we would need //      to clone the set of lazy properties!	IMPLEMENTATION	0.9985299794593521	WITHOUT_CLASSIFICATION	0.0013102292438208019	IMPLEMENTATION	9.825760780839374E-5	DESIGN	3.775608932220429E-5	DEFECT	2.274432567844215E-5	TEST	1.0332740180524575E-6	DOCUMENTATION
//TODO: proxies!	IMPLEMENTATION	0.5300896020618856	IMPLEMENTATION	0.42529802280622625	WITHOUT_CLASSIFICATION	0.03172998797187164	DESIGN	0.010499426119490948	DEFECT	0.0012926157903682509	DOCUMENTATION	0.0010903452501573167	TEST
//TODO: terrible implementation!	IMPLEMENTATION	0.9924998452581676	IMPLEMENTATION	0.007054243175506852	WITHOUT_CLASSIFICATION	2.4172163060414773E-4	DEFECT	1.0084775854062532E-4	DESIGN	9.223457478638686E-5	TEST	1.1107602394366857E-5	DOCUMENTATION
//TODO: proxies!	IMPLEMENTATION	0.5300896020618856	IMPLEMENTATION	0.42529802280622625	WITHOUT_CLASSIFICATION	0.03172998797187164	DESIGN	0.010499426119490948	DEFECT	0.0012926157903682509	DOCUMENTATION	0.0010903452501573167	TEST
// TODO: I don't really like this implementation; it would be better if // this was handled by searchForDirtyCollections()	IMPLEMENTATION	0.9299604792550586	DESIGN	0.05832066314354753	IMPLEMENTATION	0.011675925367903042	DEFECT	3.975152844488701E-5	TEST	2.9853165356030802E-6	WITHOUT_CLASSIFICATION	1.9538851039869767E-7	DOCUMENTATION
// TODO: check if key contains the owner ID	IMPLEMENTATION	0.9259381637889942	IMPLEMENTATION	0.07283924248016498	WITHOUT_CLASSIFICATION	5.411346025368782E-4	DESIGN	5.303111084002212E-4	DEFECT	1.2933850741699173E-4	DOCUMENTATION	2.180951248669316E-5	TEST
//TODO: proxies!	IMPLEMENTATION	0.5300896020618856	IMPLEMENTATION	0.42529802280622625	WITHOUT_CLASSIFICATION	0.03172998797187164	DESIGN	0.010499426119490948	DEFECT	0.0012926157903682509	DOCUMENTATION	0.0010903452501573167	TEST
// table=null -> an association // - fill it in later //TODO fill in the mappings for table == null	IMPLEMENTATION	0.888856705435998	WITHOUT_CLASSIFICATION	0.10102364265955302	DESIGN	0.005150272393486346	DEFECT	0.004770616242843403	TEST	1.2585630777852417E-4	IMPLEMENTATION	7.290696034066071E-5	DOCUMENTATION
// table=null -> an association - fill // it in later //TODO fill in the mappings for table == null	IMPLEMENTATION	0.8276652609658713	WITHOUT_CLASSIFICATION	0.16622182979810024	DESIGN	0.003838481208821278	TEST	0.002218512565055416	DEFECT	3.450479243786596E-5	DOCUMENTATION	2.1410669713880662E-5	IMPLEMENTATION
// if we are still not resolved, we might represent a constant. //      needed to add this here because the allowance of //      naked-prop-refs in the grammar collides with the //      definition of literals/constants ("nondeterminism"). //      TODO: cleanup the grammar so that "processConstants" is always just handled from here	IMPLEMENTATION	0.999941879992075	DESIGN	5.0451924475033915E-5	WITHOUT_CLASSIFICATION	7.014984075421363E-6	IMPLEMENTATION	5.896354467312556E-7	DOCUMENTATION	6.052607364094099E-8	TEST	2.937854014206356E-9	DEFECT
//TODO: add referencedClass to disambiguate to FKs on the same //      columns, pointing to different tables	IMPLEMENTATION	0.9996225619252509	WITHOUT_CLASSIFICATION	2.65418175692245E-4	DESIGN	6.512010615557345E-5	IMPLEMENTATION	4.057101609282086E-5	DEFECT	5.595565829059907E-6	DOCUMENTATION	7.332109792952749E-7	TEST
//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9996723103924848	WITHOUT_CLASSIFICATION	2.539071527805643E-4	TEST	7.039952262374905E-5	IMPLEMENTATION	2.28943029305928E-6	DESIGN	8.982079404163404E-7	DOCUMENTATION	1.9529387739520679E-7	DEFECT
// aload_0	WITHOUT_CLASSIFICATION	0.999997221474771	WITHOUT_CLASSIFICATION	1.8323290799611968E-6	DESIGN	6.275597227497778E-7	DEFECT	2.480795180180837E-7	IMPLEMENTATION	4.428491864021005E-8	DOCUMENTATION	2.6271989635214507E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.999997221474771	WITHOUT_CLASSIFICATION	1.8323290799611968E-6	DESIGN	6.275597227497778E-7	DEFECT	2.480795180180837E-7	IMPLEMENTATION	4.428491864021005E-8	DOCUMENTATION	2.6271989635214507E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.999997221474771	WITHOUT_CLASSIFICATION	1.8323290799611968E-6	DESIGN	6.275597227497778E-7	DEFECT	2.480795180180837E-7	IMPLEMENTATION	4.428491864021005E-8	DOCUMENTATION	2.6271989635214507E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.999997221474771	WITHOUT_CLASSIFICATION	1.8323290799611968E-6	DESIGN	6.275597227497778E-7	DEFECT	2.480795180180837E-7	IMPLEMENTATION	4.428491864021005E-8	DOCUMENTATION	2.6271989635214507E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.999997221474771	WITHOUT_CLASSIFICATION	1.8323290799611968E-6	DESIGN	6.275597227497778E-7	DEFECT	2.480795180180837E-7	IMPLEMENTATION	4.428491864021005E-8	DOCUMENTATION	2.6271989635214507E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.999997221474771	WITHOUT_CLASSIFICATION	1.8323290799611968E-6	DESIGN	6.275597227497778E-7	DEFECT	2.480795180180837E-7	IMPLEMENTATION	4.428491864021005E-8	DOCUMENTATION	2.6271989635214507E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.999997221474771	WITHOUT_CLASSIFICATION	1.8323290799611968E-6	DESIGN	6.275597227497778E-7	DEFECT	2.480795180180837E-7	IMPLEMENTATION	4.428491864021005E-8	DOCUMENTATION	2.6271989635214507E-8	TEST
// return	WITHOUT_CLASSIFICATION	0.9999892999954679	WITHOUT_CLASSIFICATION	1.0228515449177992E-5	DESIGN	3.7350878818122054E-7	DEFECT	8.054491946398508E-8	IMPLEMENTATION	1.1694393244844462E-8	DOCUMENTATION	5.740981962927287E-9	TEST
// return	WITHOUT_CLASSIFICATION	0.9999892999954679	WITHOUT_CLASSIFICATION	1.0228515449177992E-5	DESIGN	3.7350878818122054E-7	DEFECT	8.054491946398508E-8	IMPLEMENTATION	1.1694393244844462E-8	DOCUMENTATION	5.740981962927287E-9	TEST
/* | this | bean | args | raw bean | */	WITHOUT_CLASSIFICATION	0.9991693751664019	WITHOUT_CLASSIFICATION	8.232531001057098E-4	DESIGN	2.7299138698372753E-6	TEST	2.1216747158274765E-6	IMPLEMENTATION	1.8957540304388753E-6	DEFECT	6.243908762209165E-7	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999960783753795	WITHOUT_CLASSIFICATION	3.543759842032967E-6	DESIGN	3.236638538037815E-7	DEFECT	3.1354460104662824E-8	DOCUMENTATION	2.0323977226720647E-8	TEST	2.5224873232791872E-9	IMPLEMENTATION
// astore 4 // store the raw bean	WITHOUT_CLASSIFICATION	0.9999985730136829	WITHOUT_CLASSIFICATION	1.1103227186898266E-6	DESIGN	2.271856670677022E-7	IMPLEMENTATION	4.13078834938698E-8	TEST	3.8568968537789837E-8	DEFECT	9.60107918432695E-9	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999977473148702	WITHOUT_CLASSIFICATION	1.40403415821814E-6	DESIGN	7.222182779914419E-7	DEFECT	1.0501107988734603E-7	DOCUMENTATION	1.3479767822515306E-8	IMPLEMENTATION	7.941845971924148E-9	TEST
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999977473148702	WITHOUT_CLASSIFICATION	1.40403415821814E-6	DESIGN	7.222182779914419E-7	DEFECT	1.0501107988734603E-7	DOCUMENTATION	1.3479767822515306E-8	IMPLEMENTATION	7.941845971924148E-9	TEST
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999993058129076	WITHOUT_CLASSIFICATION	6.712136860058605E-7	DESIGN	1.4150046366510331E-8	DEFECT	5.456880728889117E-9	IMPLEMENTATION	2.4580684719513265E-9	TEST	9.084108572656441E-10	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.999999737137121	WITHOUT_CLASSIFICATION	2.0502557514230052E-7	DEFECT	4.835627920091321E-8	DESIGN	5.153083780092544E-9	IMPLEMENTATION	3.6134340269807212E-9	TEST	7.145068858223027E-10	DOCUMENTATION
// putfield // new value of the field	WITHOUT_CLASSIFICATION	0.999992356615205	WITHOUT_CLASSIFICATION	6.071763858347088E-6	DESIGN	8.667148708956476E-7	DEFECT	6.399468934383115E-7	IMPLEMENTATION	3.378384884532141E-8	DOCUMENTATION	3.1175323418995786E-8	TEST
// reference type	WITHOUT_CLASSIFICATION	0.9999919065938024	WITHOUT_CLASSIFICATION	5.873543364239999E-6	DESIGN	1.8219386089188278E-6	DEFECT	2.6670982791635194E-7	IMPLEMENTATION	1.2042547304785155E-7	DOCUMENTATION	1.0788923400554057E-8	TEST
// double	WITHOUT_CLASSIFICATION	0.9999925075394822	WITHOUT_CLASSIFICATION	5.396432045399844E-6	DESIGN	2.030054497206763E-6	DEFECT	2.4844552389695177E-8	DOCUMENTATION	2.2188086503428034E-8	TEST	1.8941336199452852E-8	IMPLEMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999925075394822	WITHOUT_CLASSIFICATION	5.396432045399844E-6	DESIGN	2.030054497206763E-6	DEFECT	2.4844552389695177E-8	DOCUMENTATION	2.2188086503428034E-8	TEST	1.8941336199452852E-8	IMPLEMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999538517260991	WITHOUT_CLASSIFICATION	4.126605160050346E-5	DEFECT	4.245600868421959E-6	DESIGN	3.789448234226006E-7	IMPLEMENTATION	1.4164663127004343E-7	TEST	1.1602997736741463E-7	DOCUMENTATION
// just decrement the lock, don't recache // (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.9830126812293408	WITHOUT_CLASSIFICATION	0.01672538463882759	IMPLEMENTATION	1.9442382268636916E-4	DESIGN	5.873469786960076E-5	DOCUMENTATION	7.488082331868942E-6	DEFECT	1.2875289436971634E-6	TEST
// decode row selection...	WITHOUT_CLASSIFICATION	0.9987976568693905	WITHOUT_CLASSIFICATION	8.710323585115056E-4	DEFECT	2.848211957095856E-4	DESIGN	4.421906298813779E-5	IMPLEMENTATION	1.718952326807393E-6	DOCUMENTATION	5.515610736769325E-7	TEST
//disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.9999842057552084	WITHOUT_CLASSIFICATION	1.3072104708004365E-5	DESIGN	2.646399839393132E-6	DEFECT	6.44159418930369E-8	TEST	7.095721125803165E-9	DOCUMENTATION	4.228581294394534E-9	IMPLEMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999995310499137	WITHOUT_CLASSIFICATION	3.971893578176752E-7	DESIGN	6.978758755987938E-8	DEFECT	1.8447693081835503E-9	IMPLEMENTATION	9.434244758150888E-11	TEST	3.4029175281955685E-11	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999551389503019	WITHOUT_CLASSIFICATION	4.338665873399206E-5	DESIGN	1.0458886942144445E-6	DEFECT	1.893855210844202E-7	DOCUMENTATION	1.5499823978392104E-7	TEST	8.411850904105506E-8	IMPLEMENTATION
// ROW ID	WITHOUT_CLASSIFICATION	0.9999647402573056	WITHOUT_CLASSIFICATION	2.3051641738391373E-5	DESIGN	6.03474650809134E-6	IMPLEMENTATION	5.18161461980958E-6	DEFECT	5.558852896355146E-7	DOCUMENTATION	4.3585453845171587E-7	TEST
// COMPOSITE-ID	WITHOUT_CLASSIFICATION	0.9999994514417336	WITHOUT_CLASSIFICATION	3.3826507294760365E-7	DESIGN	7.645734987758956E-8	DEFECT	7.123440743509471E-8	IMPLEMENTATION	4.3510904699228465E-8	DOCUMENTATION	1.9090531436726738E-8	TEST
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999578837153015	WITHOUT_CLASSIFICATION	3.395986869603036E-5	IMPLEMENTATION	5.3863290774209634E-6	DESIGN	1.4186744915570374E-6	DEFECT	9.519813891741177E-7	DOCUMENTATION	3.994310443642203E-7	TEST
/*	WITHOUT_CLASSIFICATION	0.9331219898232908	WITHOUT_CLASSIFICATION	0.057754742574077686	DESIGN	0.005971504224407717	DEFECT	0.0028843765675326	IMPLEMENTATION	1.6082825785869253E-4	DOCUMENTATION	1.0655855283237827E-4	TEST
// DYNAMIC INSERT	WITHOUT_CLASSIFICATION	0.9999479455493065	WITHOUT_CLASSIFICATION	2.8069703063767515E-5	DESIGN	2.234977205865534E-5	IMPLEMENTATION	6.871154667395679E-7	DOCUMENTATION	5.897796177152437E-7	DEFECT	3.580804865863924E-7	TEST
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999946167905672	WITHOUT_CLASSIFICATION	2.2786411572769893E-6	DESIGN	2.2164703923593813E-6	IMPLEMENTATION	4.874354181667327E-7	DEFECT	2.5952814276428305E-7	DOCUMENTATION	1.411343220706225E-7	TEST
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999800908500915	WITHOUT_CLASSIFICATION	1.981304847705463E-5	DESIGN	9.185242348768334E-8	DEFECT	3.079455907973243E-9	TEST	1.0920434175482865E-9	DOCUMENTATION	7.750865752255439E-11	IMPLEMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999942207283196	WITHOUT_CLASSIFICATION	3.343309309091939E-6	DESIGN	1.6962020447332018E-6	IMPLEMENTATION	3.264199405258834E-7	DEFECT	2.724650012072499E-7	DOCUMENTATION	1.4087538482193037E-7	TEST
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999942207283196	WITHOUT_CLASSIFICATION	3.343309309091939E-6	DESIGN	1.6962020447332018E-6	IMPLEMENTATION	3.264199405258834E-7	DEFECT	2.724650012072499E-7	DOCUMENTATION	1.4087538482193037E-7	TEST
// generated properties can *never* be insertable...	WITHOUT_CLASSIFICATION	0.9998515993475989	WITHOUT_CLASSIFICATION	1.39536079832436E-4	DESIGN	8.670927458483675E-6	DEFECT	9.497115087288088E-8	TEST	9.212449925169104E-8	IMPLEMENTATION	6.549459929699275E-9	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9999930169878409	WITHOUT_CLASSIFICATION	4.030584288886701E-6	DESIGN	2.0152177436516164E-6	DEFECT	5.986905097580525E-7	IMPLEMENTATION	1.9052068415983939E-7	DOCUMENTATION	1.4799893251495846E-7	TEST
//by default, natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.9999940125002484	WITHOUT_CLASSIFICATION	5.9623490562377526E-6	DESIGN	1.6531985997171745E-8	IMPLEMENTATION	6.478518288143456E-9	DEFECT	1.5783400057078258E-9	DOCUMENTATION	5.618510250652498E-10	TEST
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999719574225824	WITHOUT_CLASSIFICATION	1.0636988807711363E-5	DEFECT	1.0010847264450609E-5	DESIGN	7.317846416674771E-6	IMPLEMENTATION	6.627963037196626E-8	TEST	1.0615298384904737E-8	DOCUMENTATION
// we found some extends attributes referencing entities which were // not already processed.  here we need to locate all entity-names // and class-names contained in this document itself, making sure // that these get removed from the extendz list such that only // extends names which require us to delay processing (i.e. // external to this document and not yet processed) are contained // in the returned result	WITHOUT_CLASSIFICATION	0.8050994923978727	WITHOUT_CLASSIFICATION	0.19488768518733726	DESIGN	1.1546278900901317E-5	DOCUMENTATION	1.2645215547617352E-6	IMPLEMENTATION	1.1453944151407607E-8	TEST	1.603901210549058E-10	DEFECT
/**	WITHOUT_CLASSIFICATION	0.41139116692226024	DOCUMENTATION	0.38195748800012463	DESIGN	0.10269272777172639	IMPLEMENTATION	0.0376612794413521	WITHOUT_CLASSIFICATION	0.035076360431814946	DEFECT	0.03122097743272162	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
/**	WITHOUT_CLASSIFICATION	0.41139116692226024	DOCUMENTATION	0.38195748800012463	DESIGN	0.10269272777172639	IMPLEMENTATION	0.0376612794413521	WITHOUT_CLASSIFICATION	0.035076360431814946	DEFECT	0.03122097743272162	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// If close() is called, guarantee unbind()	WITHOUT_CLASSIFICATION	0.9999998304696868	WITHOUT_CLASSIFICATION	1.2664370437193536E-7	DEFECT	4.095980628557646E-8	IMPLEMENTATION	9.286229494830356E-10	TEST	7.356799683611045E-10	DESIGN	2.6249967622175225E-10	DOCUMENTATION
// if a ThreadLocalSessionContext-bound session happens to get // serialized, to be completely correct, we need to make sure // that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.9999986116155821	WITHOUT_CLASSIFICATION	1.325848181187414E-6	DESIGN	5.6760090900528195E-8	DEFECT	4.6382548738464955E-9	TEST	6.850360954581055E-10	IMPLEMENTATION	4.52854949923628E-10	DOCUMENTATION
// on the inverse, it makes sense that if a ThreadLocalSessionContext- // bound session then gets deserialized to go ahead and re-bind it to // the ThreadLocalSessionContext session map.	WITHOUT_CLASSIFICATION	0.9999999137703605	WITHOUT_CLASSIFICATION	8.420044785877287E-8	DESIGN	9.87569665646401E-10	DEFECT	8.376070124562533E-10	IMPLEMENTATION	1.4010885387646243E-10	TEST	6.390621714287326E-11	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9996487017343372	WITHOUT_CLASSIFICATION	3.467411864875893E-4	DESIGN	2.347905601200409E-6	IMPLEMENTATION	1.6514918492115121E-6	DEFECT	3.700736390980429E-7	DOCUMENTATION	1.8760808568750722E-7	TEST
// 60 second lock timeout	WITHOUT_CLASSIFICATION	0.9999871103850617	WITHOUT_CLASSIFICATION	8.559829581565413E-6	DEFECT	3.7181699013448557E-6	DESIGN	3.57939140513716E-7	DOCUMENTATION	2.247906355626172E-7	IMPLEMENTATION	2.888567936000169E-8	TEST
// OptimisticCache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999983060232059	WITHOUT_CLASSIFICATION	1.0618835261977478E-6	IMPLEMENTATION	4.944230859666682E-7	DESIGN	6.628791151162377E-8	DEFECT	4.576232968608927E-8	TEST	2.5619940674534874E-8	DOCUMENTATION
// Cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999973389574196	WITHOUT_CLASSIFICATION	1.1736273722507368E-6	DESIGN	8.859354759894207E-7	IMPLEMENTATION	5.10500230700096E-7	DEFECT	5.0288068879653214E-8	TEST	4.069143263489343E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// do the put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999833646467646	WITHOUT_CLASSIFICATION	1.5157080545107626E-5	DESIGN	7.278845493702811E-7	DEFECT	3.714467540984732E-7	DOCUMENTATION	3.6372557145618126E-7	IMPLEMENTATION	1.5215815410172117E-8	TEST
//ignore!	WITHOUT_CLASSIFICATION	0.999975937216055	WITHOUT_CLASSIFICATION	1.4155369716573551E-5	DEFECT	7.192907106908034E-6	DESIGN	1.2377373838933807E-6	IMPLEMENTATION	1.1946063618025962E-6	DOCUMENTATION	2.821633758405624E-7	TEST
// tree cache in optimistic mode seems to have as very difficult // time with remove calls on non-existent nodes (NPEs)...	WITHOUT_CLASSIFICATION	0.9823934533682047	WITHOUT_CLASSIFICATION	0.017253199691940942	DEFECT	3.5040645734551356E-4	DESIGN	2.784348860184526E-6	IMPLEMENTATION	8.231491210069192E-8	TEST	7.381873644111727E-8	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.9998973292569385	WITHOUT_CLASSIFICATION	7.134263682188206E-5	DESIGN	1.4170423451106346E-5	IMPLEMENTATION	1.2402751975863916E-5	DEFECT	4.182559986146421E-6	DOCUMENTATION	5.723708265617563E-7	TEST
//ignore!	WITHOUT_CLASSIFICATION	0.999975937216055	WITHOUT_CLASSIFICATION	1.4155369716573551E-5	DEFECT	7.192907106908034E-6	DESIGN	1.2377373838933807E-6	IMPLEMENTATION	1.1946063618025962E-6	DOCUMENTATION	2.821633758405624E-7	TEST
//60 seconds	WITHOUT_CLASSIFICATION	0.9998973292569385	WITHOUT_CLASSIFICATION	7.134263682188206E-5	DESIGN	1.4170423451106346E-5	IMPLEMENTATION	1.2402751975863916E-5	DEFECT	4.182559986146421E-6	DOCUMENTATION	5.723708265617563E-7	TEST
//do the failfast put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999966477362883	WITHOUT_CLASSIFICATION	2.3942256600752777E-6	DESIGN	4.597604561903625E-7	DEFECT	2.0288132171101147E-7	DOCUMENTATION	1.649499689104136E-7	TEST	1.3044630488488552E-7	IMPLEMENTATION
// NOTE : evict() operates locally only (i.e., does not propogate // to any other nodes in the potential cluster).  This is // exactly what is needed when we destroy() here; destroy() is used // as part of the process of shutting down a SessionFactory; thus // these removals should not be propogated	WITHOUT_CLASSIFICATION	0.5179036070954371	DESIGN	0.48206658450326223	WITHOUT_CLASSIFICATION	1.6948174750940993E-5	DEFECT	1.2772765111193703E-5	TEST	6.914071086524753E-8	DOCUMENTATION	1.8320727660237706E-8	IMPLEMENTATION
//    protected RegionRootListener listener;	WITHOUT_CLASSIFICATION	0.9999971968799176	WITHOUT_CLASSIFICATION	1.8343279617340907E-6	IMPLEMENTATION	6.139720426550326E-7	DEFECT	2.984236352782578E-7	DESIGN	4.908224359587789E-8	TEST	7.314199116010859E-9	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999733888989112	WITHOUT_CLASSIFICATION	1.194197693338765E-5	DESIGN	1.1501866307001452E-5	IMPLEMENTATION	3.1404321395718724E-6	DEFECT	1.6598038140762294E-8	TEST	1.0227670613461638E-8	DOCUMENTATION
// If we've been blocking for the mutex, perhaps another // thread has already reestablished the root. // In case the node was reestablised via replication, confirm it's  // marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.9999998555816397	WITHOUT_CLASSIFICATION	9.170879649251949E-8	DEFECT	4.072743359584099E-8	DESIGN	9.511070589047203E-9	DOCUMENTATION	1.355638234834859E-9	IMPLEMENTATION	1.1154213819067136E-9	TEST
// For pessimistic locking, we just want to toss out our ref // to any old invalid root node and get the latest (may be null)            	WITHOUT_CLASSIFICATION	0.9999986522470193	WITHOUT_CLASSIFICATION	6.35200024304462E-7	TEST	5.136101888825136E-7	DEFECT	1.8272961492380976E-7	DESIGN	8.837694085601435E-9	IMPLEMENTATION	7.375458551522426E-9	DOCUMENTATION
// The rest only matters for optimistic locking, where we // need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.9990768373038089	WITHOUT_CLASSIFICATION	5.729749638044734E-4	DEFECT	2.1335611881849356E-4	DESIGN	1.0756296660281394E-4	IMPLEMENTATION	1.7909269337356225E-5	TEST	1.1359377628075644E-5	DOCUMENTATION
// Don't hold a transactional lock for this 	WITHOUT_CLASSIFICATION	0.9252380523212914	WITHOUT_CLASSIFICATION	0.07146008082442754	DESIGN	0.0023312152579412037	IMPLEMENTATION	8.586081776470723E-4	DEFECT	1.0322405478957453E-4	DOCUMENTATION	8.819363903205185E-6	TEST
// Make sure the root node for the region exists and  // has a DataVersion that never complains	WITHOUT_CLASSIFICATION	0.9999849944695505	WITHOUT_CLASSIFICATION	1.3955718745724385E-5	IMPLEMENTATION	8.004470176611209E-7	DESIGN	2.466633002601662E-7	DEFECT	1.9290984664834355E-9	TEST	7.722874293880534E-10	DOCUMENTATION
// Never evict this node	WITHOUT_CLASSIFICATION	0.9997183422398371	WITHOUT_CLASSIFICATION	2.5206039653761326E-4	DESIGN	2.3279855606555507E-5	IMPLEMENTATION	4.86571571679469E-6	TEST	8.135642844933574E-7	DEFECT	6.382280174029986E-7	DOCUMENTATION
// Fix up the resident flag	WITHOUT_CLASSIFICATION	0.9998016265846731	WITHOUT_CLASSIFICATION	1.8036802604867378E-4	IMPLEMENTATION	9.693101319863939E-6	DESIGN	6.732312886179026E-6	DEFECT	9.829512608464825E-7	TEST	5.970238112790617E-7	DOCUMENTATION
// 60 seconds	WITHOUT_CLASSIFICATION	0.9999822133551913	WITHOUT_CLASSIFICATION	7.457570996073748E-6	DESIGN	5.8191899482308754E-6	DEFECT	3.826260702720648E-6	IMPLEMENTATION	5.821489715454788E-7	DOCUMENTATION	1.014741900279679E-7	TEST
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999999998591462	WITHOUT_CLASSIFICATION	8.098856919384078E-11	DEFECT	5.445301827675318E-11	DESIGN	4.637302382769686E-12	IMPLEMENTATION	5.916989576456789E-13	TEST	1.8314133566253121E-13	DOCUMENTATION
// no-op. We don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.9999096193445379	WITHOUT_CLASSIFICATION	8.5449257458362E-5	DESIGN	3.677834634337227E-6	IMPLEMENTATION	1.1478164144467109E-6	DEFECT	9.054705424517801E-8	DOCUMENTATION	1.519990063391031E-8	TEST
// This should only be possible if the caches are constructor injected 	WITHOUT_CLASSIFICATION	0.9962915067405819	WITHOUT_CLASSIFICATION	0.003697588405080436	DESIGN	7.763423560564569E-6	IMPLEMENTATION	2.068947728087483E-6	DEFECT	1.0624965974060342E-6	TEST	9.986451598483096E-9	DOCUMENTATION
// We only build caches if *none* were passed in.  Passing in // caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.9999378087091574	WITHOUT_CLASSIFICATION	3.839183206000474E-5	DESIGN	2.311603045647248E-5	DEFECT	6.773618111104779E-7	TEST	5.608301821286062E-9	DOCUMENTATION	4.5821312661730423E-10	IMPLEMENTATION
// Set up the cache factory	WITHOUT_CLASSIFICATION	0.9990713678466484	WITHOUT_CLASSIFICATION	9.278858527098565E-4	DESIGN	6.39190832278938E-7	DEFECT	4.975191810171609E-8	DOCUMENTATION	3.6477215685977165E-8	IMPLEMENTATION	2.0880675583392135E-8	TEST
// See if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.9998091133376015	WITHOUT_CLASSIFICATION	1.822834531542351E-4	DESIGN	6.335075453440427E-6	DEFECT	2.056270402123665E-6	IMPLEMENTATION	1.2303758544315808E-7	TEST	8.882580335277186E-8	DOCUMENTATION
// Default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999775667863086	WITHOUT_CLASSIFICATION	2.2237055150603564E-5	DESIGN	9.237516960249607E-8	DEFECT	8.460102409859136E-8	IMPLEMENTATION	1.8224468386672094E-8	TEST	9.57878734598251E-10	DOCUMENTATION
// Default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999994574045868	WITHOUT_CLASSIFICATION	5.203641125912742E-7	DESIGN	2.1271666446288646E-8	DEFECT	6.572210229258782E-10	TEST	1.8746214627571036E-10	IMPLEMENTATION	1.1495096144969566E-10	DOCUMENTATION
// For Timestamps, we default to a separate config	WITHOUT_CLASSIFICATION	0.9999956044056083	WITHOUT_CLASSIFICATION	2.506538951516589E-6	DESIGN	1.0062437404448044E-6	DEFECT	6.987260328030014E-7	TEST	1.4651195278915706E-7	IMPLEMENTATION	3.7573714305404126E-8	DOCUMENTATION
// We can't change the TM on a running cache; just check // if the cache has no TM and we're OK with that	WITHOUT_CLASSIFICATION	0.9999999958584211	WITHOUT_CLASSIFICATION	4.084697016817979E-9	DESIGN	3.873431644195375E-11	IMPLEMENTATION	1.1625988299801556E-11	TEST	4.154553365519518E-12	DOCUMENTATION	2.3669183069474387E-12	DEFECT
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9999599164401485	WITHOUT_CLASSIFICATION	4.002823033558062E-5	DESIGN	3.7315819844736535E-8	IMPLEMENTATION	1.303267910401522E-8	DOCUMENTATION	4.2923334583735205E-9	DEFECT	6.886833720784673E-10	TEST
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999946919260125	WITHOUT_CLASSIFICATION	2.96143074927539E-6	DEFECT	1.9675807360795673E-6	DESIGN	1.7089150401466332E-7	TEST	1.6842833615156128E-7	IMPLEMENTATION	3.974266189842088E-8	DOCUMENTATION
// This method should be implemented assuming it's valid to  // do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.9107710219253711	WITHOUT_CLASSIFICATION	0.06954428158949173	DESIGN	0.0182854456152547	IMPLEMENTATION	0.0010807984350136059	DEFECT	3.171250518605409E-4	TEST	1.3273830085477571E-6	DOCUMENTATION
// Make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.9999996625636064	WITHOUT_CLASSIFICATION	2.868068522528829E-7	DESIGN	3.8393075987152584E-8	DEFECT	5.916288388352671E-9	IMPLEMENTATION	5.513282781424585E-9	DOCUMENTATION	8.068940404747347E-10	TEST
// We use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.9999998327866743	WITHOUT_CLASSIFICATION	1.6708362860279432E-7	DESIGN	8.373791110510794E-11	DOCUMENTATION	2.6489712032260792E-11	DEFECT	9.738727879879442E-12	IMPLEMENTATION	9.730733411301328E-12	TEST
// Following methods we don't delegate since they have so little logic // it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.7469229767010336	WITHOUT_CLASSIFICATION	0.24084400104899895	DESIGN	0.012032765931801553	IMPLEMENTATION	1.9730358590630827E-4	TEST	2.168208592903873E-6	DOCUMENTATION	7.845236666247407E-7	DEFECT
// If JBC is using INVALIDATION, we don't want to propagate changes. // We use the Timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.9999999510665666	WITHOUT_CLASSIFICATION	3.2759092582667385E-8	DESIGN	1.2205679593454507E-8	DEFECT	2.2336451717406385E-9	TEST	1.2607787977786436E-9	DOCUMENTATION	4.742372713554342E-10	IMPLEMENTATION
// We don't want to waste effort setting an option if JBC is // already in LOCAL mode. If JBC is REPL_(A)SYNC then check // if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.9999997136708374	WITHOUT_CLASSIFICATION	2.373388391458572E-7	IMPLEMENTATION	3.730567349057565E-8	DESIGN	7.246567109365662E-9	TEST	3.4797379352797267E-9	DOCUMENTATION	9.583449513934783E-10	DEFECT
// Don't hold the JBC node lock throughout the tx, as that // prevents updates // Add a zero (or low) timeout option so we don't block // waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.9999997291682294	WITHOUT_CLASSIFICATION	2.434314921070277E-7	IMPLEMENTATION	2.223186111071047E-8	DEFECT	4.176711921505328E-9	DOCUMENTATION	9.4815485971027E-10	TEST	4.355068601723192E-11	DESIGN
// Double check the distributed cache	WITHOUT_CLASSIFICATION	0.99999979772103	WITHOUT_CLASSIFICATION	1.877722825107584E-7	IMPLEMENTATION	1.2843174719693173E-8	DESIGN	8.962491116006588E-10	DOCUMENTATION	4.865453135973376E-10	TEST	2.8071857545125354E-10	DEFECT
// Get an exclusive right to update JBC for this key from this node.	WITHOUT_CLASSIFICATION	0.9999942397743439	WITHOUT_CLASSIFICATION	5.221639901624679E-6	DESIGN	5.358942722854544E-7	DEFECT	1.876131142942407E-9	DOCUMENTATION	7.654310936928888E-10	TEST	4.9920111427174234E-11	IMPLEMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9997892298791615	WITHOUT_CLASSIFICATION	1.931333909305882E-4	DESIGN	1.689018278267944E-5	DEFECT	4.773261484832036E-7	IMPLEMENTATION	2.4895067555550546E-7	DOCUMENTATION	2.0270301127218865E-8	TEST
// Initial load from JBC	WITHOUT_CLASSIFICATION	0.9999997124335618	WITHOUT_CLASSIFICATION	2.679287148050543E-7	DEFECT	1.2158548619482603E-8	DESIGN	3.716378012365387E-9	IMPLEMENTATION	1.888791520558781E-9	DOCUMENTATION	1.874005232669875E-9	TEST
// See if we had a 2nd invalidation from the same initial // preinvalidation timestamp. If so, only increment // if the new current value is an increase	WITHOUT_CLASSIFICATION	0.99999999901731	WITHOUT_CLASSIFICATION	9.198586429479296E-10	DEFECT	2.6852721624045617E-11	DESIGN	2.57308498105346E-11	DOCUMENTATION	1.0213183136019623E-11	TEST	3.466691388593478E-14	IMPLEMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9997892298791615	WITHOUT_CLASSIFICATION	1.931333909305882E-4	DESIGN	1.689018278267944E-5	DEFECT	4.773261484832036E-7	IMPLEMENTATION	2.4895067555550546E-7	DOCUMENTATION	2.0270301127218865E-8	TEST
// If the workspace node has null as well, OK; if not we've // been modified in a non-comparable manner, which we have to // treat as us being newer	WITHOUT_CLASSIFICATION	0.9999999536273211	WITHOUT_CLASSIFICATION	3.9949289034541996E-8	DESIGN	6.19190609434117E-9	DEFECT	1.9249843309626992E-10	IMPLEMENTATION	2.759055601733709E-11	TEST	1.1394806874454267E-11	DOCUMENTATION
// The standard comparator types are not Serializable but are singletons	WITHOUT_CLASSIFICATION	0.9999860798920852	WITHOUT_CLASSIFICATION	1.3099205381681844E-5	DESIGN	8.108252069886871E-7	DEFECT	5.241534414198967E-9	IMPLEMENTATION	4.422091264028773E-9	TEST	4.137003024084621E-10	DOCUMENTATION
// ignore!	WITHOUT_CLASSIFICATION	0.9999981523929694	WITHOUT_CLASSIFICATION	1.3421463894144355E-6	DEFECT	3.0714056797563613E-7	DESIGN	1.431121410067968E-7	IMPLEMENTATION	3.903924250971336E-8	DOCUMENTATION	1.6168689805082685E-8	TEST
// ignore it	WITHOUT_CLASSIFICATION	0.9999991187631342	WITHOUT_CLASSIFICATION	4.329554383097046E-7	DESIGN	3.478143681047223E-7	DEFECT	6.926941773587532E-8	IMPLEMENTATION	2.0206073180416303E-8	DOCUMENTATION	1.0991568583153492E-8	TEST
// construct the cache	WITHOUT_CLASSIFICATION	0.9999592293610241	WITHOUT_CLASSIFICATION	3.849159405892681E-5	DESIGN	1.7191095171432558E-6	IMPLEMENTATION	3.0752781779919657E-7	DEFECT	1.397177686357106E-7	TEST	1.1268981345079702E-7	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999963754226545	WITHOUT_CLASSIFICATION	2.8961432485386696E-6	DEFECT	4.56661386249826E-7	DOCUMENTATION	2.676639863248647E-7	DESIGN	3.6303029045717394E-9	IMPLEMENTATION	4.784213786332027E-10	TEST
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999963754226545	WITHOUT_CLASSIFICATION	2.8961432485386696E-6	DEFECT	4.56661386249826E-7	DOCUMENTATION	2.676639863248647E-7	DESIGN	3.6303029045717394E-9	IMPLEMENTATION	4.784213786332027E-10	TEST
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999238726886619	WITHOUT_CLASSIFICATION	5.760300487258274E-5	DESIGN	8.633867939855319E-6	DEFECT	8.301682999309318E-6	IMPLEMENTATION	1.3326102143455206E-6	DOCUMENTATION	2.561453121758368E-7	TEST
//swaldman 2006-08-28: define c3p0-style configuration parameters for initialPoolSize, which //                     hibernate sensibly lets default to minPoolSize, but we'll let users //                     override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.9904378637684721	WITHOUT_CLASSIFICATION	0.009561460058163301	DESIGN	2.8514283895520186E-7	TEST	1.5790428779670573E-7	DEFECT	1.3781346807067637E-7	DOCUMENTATION	9.53127699031225E-8	IMPLEMENTATION
/*DataSource unpooled = DataSources.unpooledDataSource(	WITHOUT_CLASSIFICATION	0.9997883257994613	WITHOUT_CLASSIFICATION	1.5419338444056123E-4	IMPLEMENTATION	4.3870680906204364E-5	DESIGN	1.1194597362467737E-5	DEFECT	1.9549922368180523E-6	DOCUMENTATION	4.60545592615166E-7	TEST
// TRUE if the pool is borrowed from the outside, FALSE if we used to create it	WITHOUT_CLASSIFICATION	0.9999999914891097	WITHOUT_CLASSIFICATION	8.391508294546367E-9	DESIGN	9.794905040835485E-11	DEFECT	1.450432869511401E-11	TEST	5.198054716312966E-12	IMPLEMENTATION	1.7304186521729456E-12	DOCUMENTATION
// get a connection from the pool (thru DriverManager, cfr. Proxool doc)	WITHOUT_CLASSIFICATION	0.999987181023338	WITHOUT_CLASSIFICATION	1.2665278383889444E-5	DESIGN	1.0485150713537104E-7	DEFECT	2.9362076586691527E-8	IMPLEMENTATION	1.83963017077912E-8	DOCUMENTATION	1.0883928221458785E-9	TEST
// set the Transaction Isolation if defined	WITHOUT_CLASSIFICATION	0.9999965626944523	WITHOUT_CLASSIFICATION	2.8016762584375305E-6	DESIGN	6.179569397233733E-7	IMPLEMENTATION	8.831764160223897E-9	DOCUMENTATION	7.595729446893238E-9	TEST	1.24485603499273E-9	DEFECT
// toggle autoCommit to false if set	WITHOUT_CLASSIFICATION	0.9999995224725627	WITHOUT_CLASSIFICATION	3.4796514279236165E-7	IMPLEMENTATION	7.169643089223116E-8	DEFECT	2.854619002921857E-8	DESIGN	2.3927096047406036E-8	TEST	5.392577414340845E-9	DOCUMENTATION
// return the connection	WITHOUT_CLASSIFICATION	0.9999652061988112	WITHOUT_CLASSIFICATION	3.200010923161521E-5	DESIGN	1.944488308821583E-6	DEFECT	7.31503026164673E-7	IMPLEMENTATION	1.1301994318761733E-7	DOCUMENTATION	4.6806791722033765E-9	TEST
// Get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.9999663706601817	WITHOUT_CLASSIFICATION	3.281000069699001E-5	DESIGN	5.922949466419109E-7	TEST	1.264287654236357E-7	IMPLEMENTATION	5.082500211646727E-8	DEFECT	4.979040716083263E-8	DOCUMENTATION
// Default the Proxool alias setting	WITHOUT_CLASSIFICATION	0.9999999878850694	WITHOUT_CLASSIFICATION	5.696260257704646E-9	DESIGN	4.071553631291644E-9	IMPLEMENTATION	1.337936648046551E-9	DEFECT	5.976703376822604E-10	DOCUMENTATION	4.115097480734306E-10	TEST
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999963147766422	WITHOUT_CLASSIFICATION	3.683952631909548E-6	DESIGN	4.0297434906925896E-10	DEFECT	3.989669101116404E-10	DOCUMENTATION	3.2890147510740933E-10	IMPLEMENTATION	1.3988319173696157E-10	TEST
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999963147766422	WITHOUT_CLASSIFICATION	3.683952631909548E-6	DESIGN	4.0297434906925896E-10	DEFECT	3.989669101116404E-10	DOCUMENTATION	3.2890147510740933E-10	IMPLEMENTATION	1.3988319173696157E-10	TEST
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999477552519016	WITHOUT_CLASSIFICATION	4.832887024967543E-5	IMPLEMENTATION	2.1313070967653685E-6	DEFECT	1.52284712803672E-6	DESIGN	2.4742319259883203E-7	DOCUMENTATION	1.4300431369491533E-8	TEST
// Set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.9999994448025225	WITHOUT_CLASSIFICATION	4.103446946040231E-7	IMPLEMENTATION	1.294098390617274E-7	DEFECT	6.121693637310398E-9	DOCUMENTATION	6.047780739162175E-9	DESIGN	3.273469495172302E-9	TEST
// Configured using the JAXP Configurator	WITHOUT_CLASSIFICATION	0.9994128388563243	WITHOUT_CLASSIFICATION	5.862788465092481E-4	DESIGN	4.4104500958840694E-7	DEFECT	3.1174951590523804E-7	TEST	1.052295180445764E-7	DOCUMENTATION	2.4273122898914087E-8	IMPLEMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999963147766422	WITHOUT_CLASSIFICATION	3.683952631909548E-6	DESIGN	4.0297434906925896E-10	DEFECT	3.989669101116404E-10	DOCUMENTATION	3.2890147510740933E-10	IMPLEMENTATION	1.3988319173696157E-10	TEST
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999477552519016	WITHOUT_CLASSIFICATION	4.832887024967543E-5	IMPLEMENTATION	2.1313070967653685E-6	DEFECT	1.52284712803672E-6	DESIGN	2.4742319259883203E-7	DOCUMENTATION	1.4300431369491533E-8	TEST
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999477552519016	WITHOUT_CLASSIFICATION	4.832887024967543E-5	IMPLEMENTATION	2.1313070967653685E-6	DEFECT	1.52284712803672E-6	DESIGN	2.4742319259883203E-7	DOCUMENTATION	1.4300431369491533E-8	TEST
// Configured using the Properties File Configurator	WITHOUT_CLASSIFICATION	0.9997691227003072	WITHOUT_CLASSIFICATION	2.3058633547655145E-4	DESIGN	2.7179440017679955E-7	TEST	1.2467053938711977E-8	DEFECT	4.5008590036729505E-9	DOCUMENTATION	2.2019030991370883E-9	IMPLEMENTATION
// Remember Isolation level	WITHOUT_CLASSIFICATION	0.999542867141358	WITHOUT_CLASSIFICATION	4.269545740968256E-4	DESIGN	1.6319550239901224E-5	DEFECT	1.2505350874809066E-5	IMPLEMENTATION	7.908075445109284E-7	TEST	5.625758859813718E-7	DOCUMENTATION
// If the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.9999999936056637	WITHOUT_CLASSIFICATION	6.210601166929183E-9	DEFECT	1.1605699711034106E-10	DESIGN	3.448719345670117E-11	DOCUMENTATION	1.968039364762839E-11	TEST	1.351067642066862E-11	IMPLEMENTATION
// We have created the pool ourselves, so shut it down	WITHOUT_CLASSIFICATION	0.9999994571702009	WITHOUT_CLASSIFICATION	4.734664958925936E-7	DESIGN	3.537103847389939E-8	IMPLEMENTATION	3.0303861995113236E-8	TEST	1.911933602308635E-9	DOCUMENTATION	1.7764691049366762E-9	DEFECT
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9997782111399435	WITHOUT_CLASSIFICATION	1.3414150682022286E-4	IMPLEMENTATION	4.708368810312121E-5	DESIGN	3.861190108809424E-5	DEFECT	1.8504654594193667E-6	DOCUMENTATION	1.0129858566684073E-7	TEST
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9997782111399435	WITHOUT_CLASSIFICATION	1.3414150682022286E-4	IMPLEMENTATION	4.708368810312121E-5	DESIGN	3.861190108809424E-5	DEFECT	1.8504654594193667E-6	DOCUMENTATION	1.0129858566684073E-7	TEST
//always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.9999959161689672	WITHOUT_CLASSIFICATION	2.395015897795593E-6	DESIGN	1.6118524865916781E-6	IMPLEMENTATION	5.9419526119105227E-8	DEFECT	1.4831747985138124E-8	DOCUMENTATION	2.711374313443924E-9	TEST
//public Currency getCurrency(int col) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9997356455149978	WITHOUT_CLASSIFICATION	2.6393192294891615E-4	DESIGN	2.340722501834786E-7	DEFECT	9.305714886089643E-8	DOCUMENTATION	8.368646720955821E-8	TEST	1.1746187001180226E-8	IMPLEMENTATION
// default is POJO	WITHOUT_CLASSIFICATION	0.9999994927464566	WITHOUT_CLASSIFICATION	3.200537659682594E-7	DEFECT	1.1206621947054753E-7	DESIGN	5.8484646961305444E-8	IMPLEMENTATION	1.0277418641270042E-8	TEST	6.37149223859651E-9	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999736227196109	WITHOUT_CLASSIFICATION	2.4222965990562168E-5	DESIGN	1.699969010368109E-6	DEFECT	3.1867836943851595E-7	IMPLEMENTATION	1.0525040082504025E-7	TEST	3.041661805563894E-8	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999736227196109	WITHOUT_CLASSIFICATION	2.4222965990562168E-5	DESIGN	1.699969010368109E-6	DEFECT	3.1867836943851595E-7	IMPLEMENTATION	1.0525040082504025E-7	TEST	3.041661805563894E-8	DOCUMENTATION
//private CacheEntry cacheEntry;	WITHOUT_CLASSIFICATION	0.999992633460593	WITHOUT_CLASSIFICATION	6.871878083904813E-6	DESIGN	3.351592275509217E-7	DEFECT	1.2687349487588775E-7	DOCUMENTATION	1.6431357757676045E-8	IMPLEMENTATION	1.6197242960451632E-8	TEST
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9979485159636639	WITHOUT_CLASSIFICATION	0.0010353031759329243	DEFECT	5.883914229874079E-4	DESIGN	3.7172680528995805E-4	TEST	4.61058716839354E-5	IMPLEMENTATION	9.956760441791582E-6	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9930593975004696	WITHOUT_CLASSIFICATION	0.006888749451429108	DESIGN	4.325476899903692E-5	DEFECT	7.3760758008677885E-6	IMPLEMENTATION	7.409889006401496E-7	TEST	4.812144008333922E-7	DOCUMENTATION
// get the updated snapshot of the entity state by cloning current state; // it is safe to copy in place, since by this time no-one else (should have) // has a reference  to the array	WITHOUT_CLASSIFICATION	0.999999993192823	WITHOUT_CLASSIFICATION	5.203882540735471E-9	IMPLEMENTATION	9.579151472518784E-10	DEFECT	6.172749264774358E-10	DESIGN	1.9402038046304704E-11	DOCUMENTATION	8.702510452625712E-12	TEST
// this entity defines proeprty generation, so process those generated // values...	WITHOUT_CLASSIFICATION	0.9999971295653635	WITHOUT_CLASSIFICATION	2.8420154013713273E-6	DESIGN	2.1940742749820986E-8	DEFECT	3.876908223112773E-9	DOCUMENTATION	2.580982263942726E-9	TEST	2.0601975703098866E-11	IMPLEMENTATION
// have the entity entry perform post-update processing, passing it the // update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.9999998850559726	WITHOUT_CLASSIFICATION	8.235006933471945E-8	DESIGN	2.185126958278832E-8	IMPLEMENTATION	6.354269019165091E-9	DEFECT	4.1792487095889155E-9	DOCUMENTATION	2.0917075435112796E-10	TEST
/*!persister.isCacheInvalidationRequired()*/	WITHOUT_CLASSIFICATION	0.9999819523107577	WITHOUT_CLASSIFICATION	1.0974161579807252E-5	DESIGN	4.04556268889993E-6	DEFECT	2.8339896662599352E-6	IMPLEMENTATION	1.4936644310143226E-7	DOCUMENTATION	4.460886427609265E-8	TEST
// need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.9994003779732762	WITHOUT_CLASSIFICATION	5.419412714700273E-4	DESIGN	5.595500445992562E-5	IMPLEMENTATION	8.14286008706287E-7	DEFECT	5.808511325506299E-7	DOCUMENTATION	3.306136524786279E-7	TEST
//sort first by role name	WITHOUT_CLASSIFICATION	0.9999228658409983	WITHOUT_CLASSIFICATION	7.419121033915126E-5	DESIGN	1.4405811609953343E-6	TEST	7.742439194722965E-7	DEFECT	6.067092663337144E-7	IMPLEMENTATION	1.2141431565203983E-7	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9930593975004696	WITHOUT_CLASSIFICATION	0.006888749451429108	DESIGN	4.325476899903692E-5	DEFECT	7.3760758008677885E-6	IMPLEMENTATION	7.409889006401496E-7	TEST	4.812144008333922E-7	DOCUMENTATION
//then by fk	WITHOUT_CLASSIFICATION	0.999454026228173	WITHOUT_CLASSIFICATION	2.2187228673240244E-4	IMPLEMENTATION	1.7379372500440023E-4	DESIGN	1.1827494765147892E-4	DEFECT	2.0139204887191257E-5	DOCUMENTATION	1.1893607551638237E-5	TEST
// nothing to do	WITHOUT_CLASSIFICATION	0.9999373475044976	WITHOUT_CLASSIFICATION	4.061279885505898E-5	IMPLEMENTATION	1.5371159122136704E-5	DESIGN	5.179483677907598E-6	DEFECT	1.0685731301195837E-6	DOCUMENTATION	4.2048071729555264E-7	TEST
// nothing to do	WITHOUT_CLASSIFICATION	0.9999373475044976	WITHOUT_CLASSIFICATION	4.061279885505898E-5	IMPLEMENTATION	1.5371159122136704E-5	DESIGN	5.179483677907598E-6	DEFECT	1.0685731301195837E-6	DOCUMENTATION	4.2048071729555264E-7	TEST
// an existing collection that was either non-empty or uninitialized // is replaced by null or a different collection // (if the collection is uninitialized, hibernate has no way of // knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.7305676137439219	WITHOUT_CLASSIFICATION	0.26943021609057555	DESIGN	1.5848570354720976E-6	IMPLEMENTATION	5.269092967288773E-7	DEFECT	5.50415838079442E-8	TEST	3.357586469203116E-9	DOCUMENTATION
// this method is called when a new non-null collection is persisted // or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.9881504329645501	WITHOUT_CLASSIFICATION	0.011829726541282167	DESIGN	1.9395768216712042E-5	IMPLEMENTATION	2.3582061761342443E-7	TEST	1.974090452059828E-7	DEFECT	1.149628819232808E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9753776937759222	WITHOUT_CLASSIFICATION	0.023971904534714556	DESIGN	4.965285027718643E-4	DEFECT	1.5121170176430368E-4	IMPLEMENTATION	2.5162570155953405E-6	TEST	1.45227811236501E-7	DOCUMENTATION
//do nothing - we only need to notify the cache...	WITHOUT_CLASSIFICATION	0.9999149016698891	WITHOUT_CLASSIFICATION	6.296767159303771E-5	DESIGN	1.1133569948759468E-5	DEFECT	9.30461293475046E-6	DOCUMENTATION	9.203854640170762E-7	IMPLEMENTATION	7.720901706220058E-7	TEST
//sort first by entity name	WITHOUT_CLASSIFICATION	0.9996135084099728	WITHOUT_CLASSIFICATION	3.8182790040157383E-4	DESIGN	2.3222854199274684E-6	IMPLEMENTATION	1.7687067226412483E-6	TEST	4.311296201648444E-7	DOCUMENTATION	1.4156786304173402E-7	DEFECT
//then by id	WITHOUT_CLASSIFICATION	0.9981227730145537	WITHOUT_CLASSIFICATION	0.0012023230194418292	IMPLEMENTATION	5.229739887489596E-4	DESIGN	1.1086216771355067E-4	DEFECT	2.6822605492588883E-5	DOCUMENTATION	1.4245204049480514E-5	TEST
// to be safe...	WITHOUT_CLASSIFICATION	0.9923610778308292	WITHOUT_CLASSIFICATION	0.005798889041085664	DEFECT	0.0011150982072765585	DESIGN	7.042355529605507E-4	IMPLEMENTATION	1.674583312954405E-5	DOCUMENTATION	3.953534718590577E-6	TEST
// no transformations took place, so handle it as we would a // non-instrumented class	WITHOUT_CLASSIFICATION	0.9999501013073545	WITHOUT_CLASSIFICATION	3.390271822087174E-5	IMPLEMENTATION	1.5860451642836273E-5	DESIGN	9.555269224823912E-8	DOCUMENTATION	2.073015956001737E-8	TEST	1.9239929972554915E-8	DEFECT
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999999318153678	WITHOUT_CLASSIFICATION	6.293948342390988E-8	DESIGN	4.9899401778124016E-9	DEFECT	1.8498262767114097E-10	TEST	5.034867544989968E-11	DOCUMENTATION	1.9877190878966294E-11	IMPLEMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999999318153678	WITHOUT_CLASSIFICATION	6.293948342390988E-8	DESIGN	4.9899401778124016E-9	DEFECT	1.8498262767114097E-10	TEST	5.034867544989968E-11	DOCUMENTATION	1.9877190878966294E-11	IMPLEMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9998817860704511	WITHOUT_CLASSIFICATION	1.1627407129149978E-4	DESIGN	1.1842794752660787E-6	DEFECT	4.120284539730255E-7	DOCUMENTATION	3.114339994145032E-7	IMPLEMENTATION	3.211632874345017E-8	TEST
//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9996723103924848	WITHOUT_CLASSIFICATION	2.539071527805643E-4	TEST	7.039952262374905E-5	IMPLEMENTATION	2.28943029305928E-6	DESIGN	8.982079404163404E-7	DOCUMENTATION	1.9529387739520679E-7	DEFECT
// set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.9999887697378165	WITHOUT_CLASSIFICATION	1.0959713860109588E-5	DESIGN	1.9613330591205948E-7	DEFECT	4.260967764439495E-8	TEST	2.2979337676796135E-8	DOCUMENTATION	8.826002142824477E-9	IMPLEMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999997221474771	WITHOUT_CLASSIFICATION	1.8323290799611968E-6	DESIGN	6.275597227497778E-7	DEFECT	2.480795180180837E-7	IMPLEMENTATION	4.428491864021005E-8	DOCUMENTATION	2.6271989635214507E-8	TEST
// invokespecial	WITHOUT_CLASSIFICATION	0.999999567871247	WITHOUT_CLASSIFICATION	1.9771445208263375E-7	DEFECT	8.297639365986656E-8	DOCUMENTATION	6.893867255482504E-8	DESIGN	6.525948701632166E-8	IMPLEMENTATION	1.7239747520891242E-8	TEST
// return	WITHOUT_CLASSIFICATION	0.9999892999954679	WITHOUT_CLASSIFICATION	1.0228515449177992E-5	DESIGN	3.7350878818122054E-7	DEFECT	8.054491946398508E-8	IMPLEMENTATION	1.1694393244844462E-8	DOCUMENTATION	5.740981962927287E-9	TEST
// aload_1 // load bean	WITHOUT_CLASSIFICATION	0.9999902185726319	WITHOUT_CLASSIFICATION	4.4336893800367845E-6	DESIGN	4.3318887250341825E-6	DEFECT	8.145833148094299E-7	IMPLEMENTATION	1.029417455042537E-7	TEST	9.832420266238897E-8	DOCUMENTATION
// checkcast // cast bean	WITHOUT_CLASSIFICATION	0.9999241880599156	WITHOUT_CLASSIFICATION	7.244653861698857E-5	DESIGN	1.9347073184270574E-6	IMPLEMENTATION	5.555855053938215E-7	TEST	5.436950997650328E-7	DEFECT	3.314135439156274E-7	DOCUMENTATION
// astore_3 // store bean	WITHOUT_CLASSIFICATION	0.999990080199192	WITHOUT_CLASSIFICATION	9.475113773593972E-6	DESIGN	1.5072412096459697E-7	TEST	1.3195957543291615E-7	DEFECT	1.2472292362875005E-7	IMPLEMENTATION	3.728041442036928E-8	DOCUMENTATION
// aload_2 // args	WITHOUT_CLASSIFICATION	0.9999924607265511	WITHOUT_CLASSIFICATION	3.6358120490682217E-6	IMPLEMENTATION	2.9616624615601467E-6	DESIGN	8.19332889652519E-7	DEFECT	8.244065684967185E-8	TEST	4.002539172027748E-8	DOCUMENTATION
// iconst_i // continue to aastore // growing stack is 1	WITHOUT_CLASSIFICATION	0.9999297089200789	WITHOUT_CLASSIFICATION	5.763703058895118E-5	DEFECT	1.2223682733050694E-5	DESIGN	3.1551434872599733E-7	IMPLEMENTATION	9.057024092404309E-8	TEST	2.4282009340367628E-8	DOCUMENTATION
// new	WITHOUT_CLASSIFICATION	0.999646741646981	WITHOUT_CLASSIFICATION	3.293695625589702E-4	DESIGN	1.3473124376392973E-5	IMPLEMENTATION	7.992597190433119E-6	DEFECT	1.5171499865123265E-6	DOCUMENTATION	9.05918906856912E-7	TEST
// dup	WITHOUT_CLASSIFICATION	0.9999762459057487	WITHOUT_CLASSIFICATION	1.5721079193281128E-5	DESIGN	7.317134622213536E-6	DEFECT	4.25346579945422E-7	IMPLEMENTATION	2.057134961181992E-7	DOCUMENTATION	8.482035963115496E-8	TEST
// aload_3 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999941084520426	WITHOUT_CLASSIFICATION	2.6850583268267467E-6	IMPLEMENTATION	1.6230677445853039E-6	DEFECT	1.4135200746822534E-6	DESIGN	9.830807454147923E-8	TEST	7.159373672544382E-8	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999960783753795	WITHOUT_CLASSIFICATION	3.543759842032967E-6	DESIGN	3.236638538037815E-7	DEFECT	3.1354460104662824E-8	DOCUMENTATION	2.0323977226720647E-8	TEST	2.5224873232791872E-9	IMPLEMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999984099590111	WITHOUT_CLASSIFICATION	9.039280326477466E-7	DEFECT	4.475326712720868E-7	DESIGN	1.7151050807230225E-7	IMPLEMENTATION	3.6387685056042694E-8	DOCUMENTATION	3.068209169825539E-8	TEST
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999984099590111	WITHOUT_CLASSIFICATION	9.039280326477466E-7	DEFECT	4.475326712720868E-7	DESIGN	1.7151050807230225E-7	IMPLEMENTATION	3.6387685056042694E-8	DOCUMENTATION	3.068209169825539E-8	TEST
// aastore // args	WITHOUT_CLASSIFICATION	0.9999956662351108	WITHOUT_CLASSIFICATION	3.573172006936669E-6	DESIGN	4.6620210491277963E-7	IMPLEMENTATION	1.5164924477972974E-7	DEFECT	1.2055983038447324E-7	TEST	2.218170215308067E-8	DOCUMENTATION
/* | this | bean | args | i | raw bean | exception | */	WITHOUT_CLASSIFICATION	0.9957013991333558	WITHOUT_CLASSIFICATION	0.004281024017798646	DESIGN	1.4825957116233299E-5	DEFECT	1.1736235851646884E-6	IMPLEMENTATION	1.098782136182141E-6	TEST	4.784860080858283E-7	DOCUMENTATION
// required to exception table // iconst_0 // i	WITHOUT_CLASSIFICATION	0.9999851837533354	WITHOUT_CLASSIFICATION	1.4350639916892934E-5	DESIGN	4.5647202638298484E-7	DEFECT	5.618687505462106E-9	IMPLEMENTATION	2.7486884120007312E-9	TEST	7.673453442379853E-10	DOCUMENTATION
// istore_3 // store i	WITHOUT_CLASSIFICATION	0.9999977119687055	WITHOUT_CLASSIFICATION	1.8484192299340174E-6	DESIGN	2.6593869879173615E-7	DEFECT	1.279644383292752E-7	TEST	2.9358308485428378E-8	IMPLEMENTATION	1.6350618902175526E-8	DOCUMENTATION
// aload_1 // load the bean	WITHOUT_CLASSIFICATION	0.9999865872719594	WITHOUT_CLASSIFICATION	7.209863713559379E-6	DESIGN	3.911437220439458E-6	IMPLEMENTATION	1.9026386405278821E-6	DEFECT	2.458312196088996E-7	DOCUMENTATION	1.4295724627008045E-7	TEST
// checkcast // cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.9993011081525818	WITHOUT_CLASSIFICATION	6.957417286742357E-4	DESIGN	2.4820362285163223E-6	IMPLEMENTATION	2.815947524801953E-7	DEFECT	2.423204763486101E-7	TEST	1.4416728660886669E-7	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999977473148702	WITHOUT_CLASSIFICATION	1.40403415821814E-6	DESIGN	7.222182779914419E-7	DEFECT	1.0501107988734603E-7	DOCUMENTATION	1.3479767822515306E-8	IMPLEMENTATION	7.941845971924148E-9	TEST
// start region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9185650494885313	WITHOUT_CLASSIFICATION	0.08141183544182813	DESIGN	1.962176313063121E-5	DEFECT	2.5164320325817044E-6	IMPLEMENTATION	4.895243110905973E-7	TEST	4.873501661444742E-7	DOCUMENTATION
// iinc 3, 1	WITHOUT_CLASSIFICATION	0.9999862804956564	WITHOUT_CLASSIFICATION	6.848142198827269E-6	DESIGN	4.103786366812563E-6	DEFECT	1.9381380237868264E-6	IMPLEMENTATION	5.634341437155876E-7	DOCUMENTATION	2.6600361045500936E-7	TEST
// aload 4 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999923965781552	WITHOUT_CLASSIFICATION	2.9906774114658566E-6	DESIGN	2.585793418802095E-6	IMPLEMENTATION	1.8700812916763754E-6	DEFECT	8.144513101079602E-8	DOCUMENTATION	7.542459177989038E-8	TEST
// aload_2 // load the args	WITHOUT_CLASSIFICATION	0.9999978493157853	WITHOUT_CLASSIFICATION	9.425575694667129E-7	IMPLEMENTATION	6.519274732135206E-7	DESIGN	4.173502051236127E-7	DEFECT	7.419058898943485E-8	TEST	6.46583779003708E-8	DOCUMENTATION
// iconst_i	WITHOUT_CLASSIFICATION	0.9999437223163677	WITHOUT_CLASSIFICATION	4.909528171678152E-5	DESIGN	4.573762974704872E-6	DEFECT	1.7190000090703468E-6	IMPLEMENTATION	4.971071612984199E-7	DOCUMENTATION	3.9253177043417103E-7	TEST
// aaload	WITHOUT_CLASSIFICATION	0.9999859062681191	WITHOUT_CLASSIFICATION	9.311814696696947E-6	DESIGN	2.4039644355127493E-6	IMPLEMENTATION	2.140513211474771E-6	DEFECT	1.366163247756772E-7	DOCUMENTATION	1.0082321216637183E-7	TEST
// checkcast	WITHOUT_CLASSIFICATION	0.999996635305905	WITHOUT_CLASSIFICATION	2.0210420676502655E-6	DESIGN	1.0048960913550116E-6	IMPLEMENTATION	1.3099666076308923E-7	DEFECT	1.170293345218948E-7	DOCUMENTATION	9.072994063947697E-8	TEST
// checkcast (case of primitive type) // invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.9999998892215847	WITHOUT_CLASSIFICATION	4.554114495926306E-8	DESIGN	3.067724728389461E-8	DEFECT	2.7008468558339416E-8	IMPLEMENTATION	5.03982474771631E-9	DOCUMENTATION	2.511729700848087E-9	TEST
// checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.9999934190368337	WITHOUT_CLASSIFICATION	4.951654593165369E-6	DESIGN	9.937793880125265E-7	IMPLEMENTATION	3.14951985103745E-7	DEFECT	3.029484428428512E-7	DOCUMENTATION	1.7628757222053145E-8	TEST
/* current stack len = 2 */	WITHOUT_CLASSIFICATION	0.9999920810354529	WITHOUT_CLASSIFICATION	4.017635292715447E-6	DEFECT	3.400561962051402E-6	DESIGN	2.900923733981271E-7	DOCUMENTATION	1.8814347835523316E-7	IMPLEMENTATION	2.2531440495081973E-8	TEST
// end region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.5517124804668473	WITHOUT_CLASSIFICATION	0.4482274412203429	DESIGN	5.286376926056412E-5	DEFECT	5.145279078872282E-6	IMPLEMENTATION	1.6578250549293301E-6	DOCUMENTATION	4.1143941533602843E-7	TEST
// register in exception table	WITHOUT_CLASSIFICATION	0.9999771967847247	WITHOUT_CLASSIFICATION	2.2770067280910532E-5	DESIGN	2.862050457663303E-8	DEFECT	2.9961562095895025E-9	TEST	8.668401565747075E-10	IMPLEMENTATION	6.644934247803193E-10	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999997221474771	WITHOUT_CLASSIFICATION	1.8323290799611968E-6	DESIGN	6.275597227497778E-7	DEFECT	2.480795180180837E-7	IMPLEMENTATION	4.428491864021005E-8	DOCUMENTATION	2.6271989635214507E-8	TEST
// aload_0	WITHOUT_CLASSIFICATION	0.999997221474771	WITHOUT_CLASSIFICATION	1.8323290799611968E-6	DESIGN	6.275597227497778E-7	DEFECT	2.480795180180837E-7	IMPLEMENTATION	4.428491864021005E-8	DOCUMENTATION	2.6271989635214507E-8	TEST
// return	WITHOUT_CLASSIFICATION	0.9999892999954679	WITHOUT_CLASSIFICATION	1.0228515449177992E-5	DESIGN	3.7350878818122054E-7	DEFECT	8.054491946398508E-8	IMPLEMENTATION	1.1694393244844462E-8	DOCUMENTATION	5.740981962927287E-9	TEST
// return	WITHOUT_CLASSIFICATION	0.9999892999954679	WITHOUT_CLASSIFICATION	1.0228515449177992E-5	DESIGN	3.7350878818122054E-7	DEFECT	8.054491946398508E-8	IMPLEMENTATION	1.1694393244844462E-8	DOCUMENTATION	5.740981962927287E-9	TEST
// dup	WITHOUT_CLASSIFICATION	0.9999762459057487	WITHOUT_CLASSIFICATION	1.5721079193281128E-5	DESIGN	7.317134622213536E-6	DEFECT	4.25346579945422E-7	IMPLEMENTATION	2.057134961181992E-7	DOCUMENTATION	8.482035963115496E-8	TEST
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999984099590111	WITHOUT_CLASSIFICATION	9.039280326477466E-7	DEFECT	4.475326712720868E-7	DESIGN	1.7151050807230225E-7	IMPLEMENTATION	3.6387685056042694E-8	DOCUMENTATION	3.068209169825539E-8	TEST
// checkcast	WITHOUT_CLASSIFICATION	0.999996635305905	WITHOUT_CLASSIFICATION	2.0210420676502655E-6	DESIGN	1.0048960913550116E-6	IMPLEMENTATION	1.3099666076308923E-7	DEFECT	1.170293345218948E-7	DOCUMENTATION	9.072994063947697E-8	TEST
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999993058129076	WITHOUT_CLASSIFICATION	6.712136860058605E-7	DESIGN	1.4150046366510331E-8	DEFECT	5.456880728889117E-9	IMPLEMENTATION	2.4580684719513265E-9	TEST	9.084108572656441E-10	DOCUMENTATION
// astore 5 // store exception	WITHOUT_CLASSIFICATION	0.999998280900463	WITHOUT_CLASSIFICATION	1.1866059469028742E-6	DESIGN	5.237262233697384E-7	DEFECT	4.427238815227293E-9	TEST	3.6048201373884078E-9	DOCUMENTATION	7.353076233099197E-10	IMPLEMENTATION
// new // BulkAccessorException	WITHOUT_CLASSIFICATION	0.9986331355729982	WITHOUT_CLASSIFICATION	8.932762926745401E-4	DEFECT	4.6855503051006637E-4	DESIGN	1.7560246355756185E-6	TEST	1.7372889935027944E-6	IMPLEMENTATION	1.5397901881316861E-6	DOCUMENTATION
// aload 5 // load exception	WITHOUT_CLASSIFICATION	0.9999193555348297	WITHOUT_CLASSIFICATION	7.150118691911131E-5	DEFECT	8.973727895896825E-6	DESIGN	9.392255730037376E-8	DOCUMENTATION	4.520359099691837E-8	IMPLEMENTATION	3.042420701900803E-8	TEST
// iload_3 // i	WITHOUT_CLASSIFICATION	0.9999949112291096	WITHOUT_CLASSIFICATION	2.9175235013985278E-6	DEFECT	1.4193976031407119E-6	IMPLEMENTATION	4.612449262247392E-7	DESIGN	2.3241430061999808E-7	TEST	5.8190559078892076E-8	DOCUMENTATION
// invokespecial // BulkAccessorException.<init>	WITHOUT_CLASSIFICATION	0.9999915992511045	WITHOUT_CLASSIFICATION	8.153148036480418E-6	DEFECT	1.0323944005827904E-7	DESIGN	5.736394562763791E-8	DOCUMENTATION	4.953939106318926E-8	TEST	3.745808219020764E-8	IMPLEMENTATION
// athrow	WITHOUT_CLASSIFICATION	0.9999961399536225	WITHOUT_CLASSIFICATION	2.711346628474239E-6	DESIGN	8.180503049564312E-7	DEFECT	2.2291480706485254E-7	IMPLEMENTATION	5.425534029821043E-8	TEST	5.3479296803758544E-8	DOCUMENTATION
// WARNING: classfile only	WITHOUT_CLASSIFICATION	0.9998622657529576	WITHOUT_CLASSIFICATION	9.212145745574007E-5	DEFECT	4.1522074054524645E-5	DESIGN	2.8167334357560954E-6	IMPLEMENTATION	9.428637228332415E-7	DOCUMENTATION	3.311183736247777E-7	TEST
//swallow	WITHOUT_CLASSIFICATION	0.9999372123880076	WITHOUT_CLASSIFICATION	4.319517566920639E-5	DESIGN	9.107016522669766E-6	IMPLEMENTATION	8.813329928028848E-6	DEFECT	1.0035244425054709E-6	DOCUMENTATION	6.685654300153135E-7	TEST
/* local variable | this | */	WITHOUT_CLASSIFICATION	0.9999514166240014	WITHOUT_CLASSIFICATION	4.759476391480954E-5	DESIGN	6.442574546430964E-7	IMPLEMENTATION	2.0528923771637445E-7	TEST	7.39451002306025E-8	DOCUMENTATION	6.512029119815711E-8	DEFECT
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999880688268621	WITHOUT_CLASSIFICATION	8.620156045475585E-6	DESIGN	1.4294347675155723E-6	DEFECT	6.582760111657328E-7	TEST	6.42867196717106E-7	DOCUMENTATION	5.804391172312929E-7	IMPLEMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999880688268621	WITHOUT_CLASSIFICATION	8.620156045475585E-6	DESIGN	1.4294347675155723E-6	DEFECT	6.582760111657328E-7	TEST	6.42867196717106E-7	DOCUMENTATION	5.804391172312929E-7	IMPLEMENTATION
// getfield // get field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999998410286971	WITHOUT_CLASSIFICATION	1.5735310918292533E-7	DESIGN	9.181916438083272E-10	IMPLEMENTATION	3.1352748926583677E-10	TEST	2.5239525695673527E-10	DEFECT	1.3407943321216967E-10	DOCUMENTATION
// areturn // return the value of the field	WITHOUT_CLASSIFICATION	0.9999976259460257	WITHOUT_CLASSIFICATION	2.1550125520968937E-6	DESIGN	1.8867205554420924E-7	DEFECT	2.7823264447677237E-8	IMPLEMENTATION	1.5179385953699235E-9	DOCUMENTATION	1.0281634248178153E-9	TEST
/* local variables | this | callback | */	WITHOUT_CLASSIFICATION	0.999406715734356	WITHOUT_CLASSIFICATION	5.61511258150166E-4	DESIGN	2.0570075142734023E-5	DEFECT	8.88643059135762E-6	IMPLEMENTATION	1.8594646418952515E-6	TEST	4.570371177141446E-7	DOCUMENTATION
// aload_1 // load callback	WITHOUT_CLASSIFICATION	0.9999687221984163	WITHOUT_CLASSIFICATION	2.6339222417086782E-5	DEFECT	3.0292845669655067E-6	DESIGN	1.7829002385177812E-6	IMPLEMENTATION	7.123549755323268E-8	DOCUMENTATION	5.5158863648021316E-8	TEST
// putfield // put field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999999920576708	WITHOUT_CLASSIFICATION	5.918973606175152E-9	DESIGN	1.7150098352628853E-9	IMPLEMENTATION	1.8308461899428823E-10	DEFECT	7.080361705913834E-11	DOCUMENTATION	5.4457565931437625E-11	TEST
// case of non-static field	WITHOUT_CLASSIFICATION	0.9999979080666046	WITHOUT_CLASSIFICATION	1.8435828833331733E-6	DESIGN	1.5107980903745304E-7	IMPLEMENTATION	8.721066693793122E-8	DEFECT	9.293327801179607E-9	DOCUMENTATION	7.667082343186843E-10	TEST
// getfield // get each field	WITHOUT_CLASSIFICATION	0.9999206943672835	WITHOUT_CLASSIFICATION	7.91312567252383E-5	DESIGN	1.0205079987158353E-7	DEFECT	4.097956044662876E-8	TEST	2.106202501022475E-8	IMPLEMENTATION	1.0283605768534392E-8	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.999999737137121	WITHOUT_CLASSIFICATION	2.0502557514230052E-7	DEFECT	4.835627920091321E-8	DESIGN	5.153083780092544E-9	IMPLEMENTATION	3.6134340269807212E-9	TEST	7.145068858223027E-10	DOCUMENTATION
// ifnonnull	WITHOUT_CLASSIFICATION	0.9999871249842619	WITHOUT_CLASSIFICATION	1.0263697001615051E-5	DEFECT	1.7686983223185646E-6	DESIGN	7.264927570436953E-7	IMPLEMENTATION	6.161897655633652E-8	DOCUMENTATION	5.450868047650856E-8	TEST
// *return // each type	WITHOUT_CLASSIFICATION	0.9999994297609722	WITHOUT_CLASSIFICATION	4.936167929135682E-7	DESIGN	7.350602012455212E-8	DEFECT	1.4770504961035073E-9	IMPLEMENTATION	1.2322059936984678E-9	DOCUMENTATION	4.069581776164705E-10	TEST
// *return // each type	WITHOUT_CLASSIFICATION	0.9999994297609722	WITHOUT_CLASSIFICATION	4.936167929135682E-7	DESIGN	7.350602012455212E-8	DEFECT	1.4770504961035073E-9	IMPLEMENTATION	1.2322059936984678E-9	DOCUMENTATION	4.069581776164705E-10	TEST
// *store_1 // each type	WITHOUT_CLASSIFICATION	0.9999999005615293	WITHOUT_CLASSIFICATION	8.830132573966835E-8	DESIGN	8.553376493483226E-9	DEFECT	1.0797587782244836E-9	TEST	9.157192136551019E-10	IMPLEMENTATION	5.882904023833367E-10	DOCUMENTATION
// ldc // name of the field	WITHOUT_CLASSIFICATION	0.9998047140730529	WITHOUT_CLASSIFICATION	1.8967865398403005E-4	DESIGN	3.164252874894526E-6	DEFECT	1.903336868933304E-6	IMPLEMENTATION	2.996564983634485E-7	TEST	2.400267208685594E-7	DOCUMENTATION
// *load_1 // each type	WITHOUT_CLASSIFICATION	0.9999997876252277	WITHOUT_CLASSIFICATION	9.820277821656933E-8	DESIGN	9.68307047511308E-8	DEFECT	1.2530336006190696E-8	IMPLEMENTATION	2.7790983115629555E-9	DOCUMENTATION	2.0318550775488265E-9	TEST
// invokeinterface // invoke Callback.read*() // each type	WITHOUT_CLASSIFICATION	0.999999704903409	WITHOUT_CLASSIFICATION	2.8017635595841865E-7	DEFECT	1.3945206228022983E-8	DESIGN	5.39323755676572E-10	DOCUMENTATION	3.0562835016451237E-10	TEST	1.3007685374174926E-10	IMPLEMENTATION
// int	WITHOUT_CLASSIFICATION	0.9999937045866569	WITHOUT_CLASSIFICATION	2.989690497873553E-6	DEFECT	2.979832838642884E-6	DESIGN	1.556157424174584E-7	DOCUMENTATION	8.675978741034638E-8	TEST	8.351447675739137E-8	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999892999954679	WITHOUT_CLASSIFICATION	1.0228515449177992E-5	DESIGN	3.7350878818122054E-7	DEFECT	8.054491946398508E-8	IMPLEMENTATION	1.1694393244844462E-8	DOCUMENTATION	5.740981962927287E-9	TEST
// dup	WITHOUT_CLASSIFICATION	0.9999762459057487	WITHOUT_CLASSIFICATION	1.5721079193281128E-5	DESIGN	7.317134622213536E-6	DEFECT	4.25346579945422E-7	IMPLEMENTATION	2.057134961181992E-7	DOCUMENTATION	8.482035963115496E-8	TEST
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999960783753795	WITHOUT_CLASSIFICATION	3.543759842032967E-6	DESIGN	3.236638538037815E-7	DEFECT	3.1354460104662824E-8	DOCUMENTATION	2.0323977226720647E-8	TEST	2.5224873232791872E-9	IMPLEMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.999996635305905	WITHOUT_CLASSIFICATION	2.0210420676502655E-6	DESIGN	1.0048960913550116E-6	IMPLEMENTATION	1.3099666076308923E-7	DEFECT	1.170293345218948E-7	DOCUMENTATION	9.072994063947697E-8	TEST
// checkcast	WITHOUT_CLASSIFICATION	0.999996635305905	WITHOUT_CLASSIFICATION	2.0210420676502655E-6	DESIGN	1.0048960913550116E-6	IMPLEMENTATION	1.3099666076308923E-7	DEFECT	1.170293345218948E-7	DOCUMENTATION	9.072994063947697E-8	TEST
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999998072687434	WITHOUT_CLASSIFICATION	1.4298140798053389E-7	DEFECT	4.026558884121863E-8	DESIGN	6.886836040955285E-9	IMPLEMENTATION	2.085999053615724E-9	TEST	5.114247504724427E-10	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999998072687434	WITHOUT_CLASSIFICATION	1.4298140798053389E-7	DEFECT	4.026558884121863E-8	DESIGN	6.886836040955285E-9	IMPLEMENTATION	2.085999053615724E-9	TEST	5.114247504724427E-10	DOCUMENTATION
// ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.9999952789953445	WITHOUT_CLASSIFICATION	3.426804280754904E-6	DESIGN	9.663211218215383E-7	IMPLEMENTATION	2.884520680963837E-7	DEFECT	2.330804191385899E-8	DOCUMENTATION	1.6119143064643708E-8	TEST
// *load_1	WITHOUT_CLASSIFICATION	0.9999966060016356	WITHOUT_CLASSIFICATION	1.728119176450508E-6	DESIGN	1.1558635385458404E-6	DEFECT	4.4118206935124193E-7	IMPLEMENTATION	3.547909177447257E-8	TEST	3.3354488079673976E-8	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.9999966060016356	WITHOUT_CLASSIFICATION	1.728119176450508E-6	DESIGN	1.1558635385458404E-6	DEFECT	4.4118206935124193E-7	IMPLEMENTATION	3.547909177447257E-8	TEST	3.3354488079673976E-8	DOCUMENTATION
// putfield	WITHOUT_CLASSIFICATION	0.9999968811647201	WITHOUT_CLASSIFICATION	1.517540726764703E-6	IMPLEMENTATION	1.2480610632327082E-6	DESIGN	3.225353835829862E-7	DEFECT	1.7680260388958658E-8	DOCUMENTATION	1.3017846028705832E-8	TEST
// return ;	WITHOUT_CLASSIFICATION	0.9999884548141807	WITHOUT_CLASSIFICATION	1.0855751367221239E-5	DESIGN	5.026762073397523E-7	DEFECT	1.625036546572327E-7	IMPLEMENTATION	1.7464788077875425E-8	DOCUMENTATION	6.789802030586058E-9	TEST
// ldc // field name	WITHOUT_CLASSIFICATION	0.9999970310909586	WITHOUT_CLASSIFICATION	2.597177844847635E-6	DESIGN	3.1983538404425516E-7	DEFECT	2.478539877929629E-8	TEST	2.0435547335380746E-8	IMPLEMENTATION	6.674866527063045E-9	DOCUMENTATION
// getfield // old value of the field	WITHOUT_CLASSIFICATION	0.9999879263379743	WITHOUT_CLASSIFICATION	1.0367567704811155E-5	DESIGN	1.5988966116533785E-6	DEFECT	5.119592940335679E-8	TEST	3.874232984401951E-8	IMPLEMENTATION	1.7259450037187685E-8	DOCUMENTATION
// invokeinterface // callback.write*(..)	WITHOUT_CLASSIFICATION	0.999994137291569	WITHOUT_CLASSIFICATION	5.773129811745902E-6	DEFECT	7.640767269665938E-8	DESIGN	5.069373668056494E-9	TEST	4.624396705425767E-9	IMPLEMENTATION	3.4771761846115763E-9	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999919065938024	WITHOUT_CLASSIFICATION	5.873543364239999E-6	DESIGN	1.8219386089188278E-6	DEFECT	2.6670982791635194E-7	IMPLEMENTATION	1.2042547304785155E-7	DOCUMENTATION	1.0788923400554057E-8	TEST
// reference type	WITHOUT_CLASSIFICATION	0.9999919065938024	WITHOUT_CLASSIFICATION	5.873543364239999E-6	DESIGN	1.8219386089188278E-6	DEFECT	2.6670982791635194E-7	IMPLEMENTATION	1.2042547304785155E-7	DOCUMENTATION	1.0788923400554057E-8	TEST
// not array	WITHOUT_CLASSIFICATION	0.9993669105890588	WITHOUT_CLASSIFICATION	3.0451843680980994E-4	IMPLEMENTATION	2.233572924874601E-4	DESIGN	1.0161142635714672E-4	DEFECT	1.9020108198683163E-6	TEST	1.7002444670106166E-6	DOCUMENTATION
// array of reference type	WITHOUT_CLASSIFICATION	0.9999977236673164	WITHOUT_CLASSIFICATION	1.514922127789482E-6	DEFECT	6.382717424842876E-7	DESIGN	6.799360926509662E-8	DOCUMENTATION	5.128612583304332E-8	IMPLEMENTATION	3.859078273850186E-9	TEST
// boolean	WITHOUT_CLASSIFICATION	0.9999931845701951	WITHOUT_CLASSIFICATION	5.720741663296432E-6	DESIGN	8.723004626823778E-7	DEFECT	1.226785729794174E-7	IMPLEMENTATION	5.7579016529440426E-8	TEST	4.21300894873819E-8	DOCUMENTATION
// byte	WITHOUT_CLASSIFICATION	0.9999837933447078	WITHOUT_CLASSIFICATION	6.350413075992773E-6	IMPLEMENTATION	5.784369557691315E-6	DESIGN	3.511293955812042E-6	DEFECT	3.0215830275559556E-7	TEST	2.584204000314046E-7	DOCUMENTATION
// char	WITHOUT_CLASSIFICATION	0.9999998313128443	WITHOUT_CLASSIFICATION	1.4524502610276939E-7	DESIGN	1.66657206233334E-8	DEFECT	2.725691501031509E-9	IMPLEMENTATION	2.05134544654888E-9	TEST	1.999372052318788E-9	DOCUMENTATION
// short	WITHOUT_CLASSIFICATION	0.9998708500392247	WITHOUT_CLASSIFICATION	1.251958964952655E-4	DESIGN	2.4637934124339594E-6	DEFECT	7.976515547516348E-7	TEST	4.0345616769294067E-7	IMPLEMENTATION	2.8916314522612344E-7	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999925075394822	WITHOUT_CLASSIFICATION	5.396432045399844E-6	DESIGN	2.030054497206763E-6	DEFECT	2.4844552389695177E-8	DOCUMENTATION	2.2188086503428034E-8	TEST	1.8941336199452852E-8	IMPLEMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999902262593561	WITHOUT_CLASSIFICATION	8.158462977201107E-6	DEFECT	1.301113585754527E-6	DESIGN	1.506660695738438E-7	IMPLEMENTATION	9.338037520234917E-8	TEST	7.011763615233984E-8	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999902262593561	WITHOUT_CLASSIFICATION	8.158462977201107E-6	DEFECT	1.301113585754527E-6	DESIGN	1.506660695738438E-7	IMPLEMENTATION	9.338037520234917E-8	TEST	7.011763615233984E-8	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999538517260991	WITHOUT_CLASSIFICATION	4.126605160050346E-5	DEFECT	4.245600868421959E-6	DESIGN	3.789448234226006E-7	IMPLEMENTATION	1.4164663127004343E-7	TEST	1.1602997736741463E-7	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999538517260991	WITHOUT_CLASSIFICATION	4.126605160050346E-5	DEFECT	4.245600868421959E-6	DESIGN	3.789448234226006E-7	IMPLEMENTATION	1.4164663127004343E-7	TEST	1.1602997736741463E-7	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999965032450453	WITHOUT_CLASSIFICATION	1.4509834340925487E-6	DEFECT	1.2001575146943678E-6	DESIGN	7.336787443927823E-7	IMPLEMENTATION	7.221380110266837E-8	DOCUMENTATION	3.972146040974922E-8	TEST
// bad type	WITHOUT_CLASSIFICATION	0.9999965032450453	WITHOUT_CLASSIFICATION	1.4509834340925487E-6	DEFECT	1.2001575146943678E-6	DESIGN	7.336787443927823E-7	IMPLEMENTATION	7.221380110266837E-8	DOCUMENTATION	3.972146040974922E-8	TEST
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999999159145937	WITHOUT_CLASSIFICATION	3.573463749754275E-8	DEFECT	2.019898783356738E-8	IMPLEMENTATION	1.8451709529599464E-8	DESIGN	7.765418033068934E-9	TEST	1.9346532547354613E-9	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999999159145937	WITHOUT_CLASSIFICATION	3.573463749754275E-8	DEFECT	2.019898783356738E-8	IMPLEMENTATION	1.8451709529599464E-8	DESIGN	7.765418033068934E-9	TEST	1.9346532547354613E-9	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999919065938024	WITHOUT_CLASSIFICATION	5.873543364239999E-6	DESIGN	1.8219386089188278E-6	DEFECT	2.6670982791635194E-7	IMPLEMENTATION	1.2042547304785155E-7	DOCUMENTATION	1.0788923400554057E-8	TEST
// double	WITHOUT_CLASSIFICATION	0.9999925075394822	WITHOUT_CLASSIFICATION	5.396432045399844E-6	DESIGN	2.030054497206763E-6	DEFECT	2.4844552389695177E-8	DOCUMENTATION	2.2188086503428034E-8	TEST	1.8941336199452852E-8	IMPLEMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999902262593561	WITHOUT_CLASSIFICATION	8.158462977201107E-6	DEFECT	1.301113585754527E-6	DESIGN	1.506660695738438E-7	IMPLEMENTATION	9.338037520234917E-8	TEST	7.011763615233984E-8	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999902262593561	WITHOUT_CLASSIFICATION	8.158462977201107E-6	DEFECT	1.301113585754527E-6	DESIGN	1.506660695738438E-7	IMPLEMENTATION	9.338037520234917E-8	TEST	7.011763615233984E-8	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999538517260991	WITHOUT_CLASSIFICATION	4.126605160050346E-5	DEFECT	4.245600868421959E-6	DESIGN	3.789448234226006E-7	IMPLEMENTATION	1.4164663127004343E-7	TEST	1.1602997736741463E-7	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999965032450453	WITHOUT_CLASSIFICATION	1.4509834340925487E-6	DEFECT	1.2001575146943678E-6	DESIGN	7.336787443927823E-7	IMPLEMENTATION	7.221380110266837E-8	DOCUMENTATION	3.972146040974922E-8	TEST
// bad type	WITHOUT_CLASSIFICATION	0.9999965032450453	WITHOUT_CLASSIFICATION	1.4509834340925487E-6	DEFECT	1.2001575146943678E-6	DESIGN	7.336787443927823E-7	IMPLEMENTATION	7.221380110266837E-8	DOCUMENTATION	3.972146040974922E-8	TEST
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999999159145937	WITHOUT_CLASSIFICATION	3.573463749754275E-8	DEFECT	2.019898783356738E-8	IMPLEMENTATION	1.8451709529599464E-8	DESIGN	7.765418033068934E-9	TEST	1.9346532547354613E-9	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9995770969372273	WITHOUT_CLASSIFICATION	2.6302711721440185E-4	DESIGN	1.5327020516111656E-4	IMPLEMENTATION	3.4982803564029703E-6	DEFECT	1.9159504421176126E-6	DOCUMENTATION	1.1915095986406163E-6	TEST
//Mainly for OSCache	WITHOUT_CLASSIFICATION	0.9997831668791471	WITHOUT_CLASSIFICATION	2.148029296503411E-4	DESIGN	8.750889298908884E-7	DOCUMENTATION	7.219063376961023E-7	DEFECT	2.6224674759564534E-7	IMPLEMENTATION	1.70949187250459E-7	TEST
//decrement the lock	WITHOUT_CLASSIFICATION	0.999436721662916	WITHOUT_CLASSIFICATION	2.8098284990856804E-4	IMPLEMENTATION	1.6308599886814267E-4	DESIGN	8.560658349103288E-5	DEFECT	2.6451302438304548E-5	DOCUMENTATION	7.151602378139946E-6	TEST
// create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.9999960292095642	WITHOUT_CLASSIFICATION	1.9169609957036566E-6	DESIGN	1.8127518181493166E-6	DEFECT	1.340431557515742E-7	TEST	9.744534867502414E-8	IMPLEMENTATION	9.589117353826924E-9	DOCUMENTATION
//recache the updated state	WITHOUT_CLASSIFICATION	0.9999743036045149	WITHOUT_CLASSIFICATION	2.2329023372917096E-5	DESIGN	3.162160422488665E-6	IMPLEMENTATION	9.697604640865793E-8	DOCUMENTATION	6.03457538638898E-8	DEFECT	4.788988947833844E-8	TEST
// noop	WITHOUT_CLASSIFICATION	0.9999577521880588	WITHOUT_CLASSIFICATION	2.229409992976489E-5	DESIGN	1.249490484572035E-5	DEFECT	6.769175931998433E-6	IMPLEMENTATION	5.091979435486391E-7	DOCUMENTATION	1.804332901931873E-7	TEST
//null clientLock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.9992936170410374	WITHOUT_CLASSIFICATION	6.926904001441653E-4	DESIGN	1.3332194753597286E-5	DEFECT	2.2891876592749508E-7	IMPLEMENTATION	1.1774918292801987E-7	DOCUMENTATION	1.3696115979315536E-8	TEST
// we really could refresh the item if it // is not a lock, but it might be slower //return freshTimestamp < txTimestamp	WITHOUT_CLASSIFICATION	0.8761147905327964	DEFECT	0.09788144640667844	WITHOUT_CLASSIFICATION	0.02599937951839065	DESIGN	3.974956364269692E-6	TEST	3.831252685354926E-7	IMPLEMENTATION	2.5460501648032147E-8	DOCUMENTATION
//by requiring <, we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.9981051696525792	WITHOUT_CLASSIFICATION	0.0018401072706947907	DEFECT	4.997288678369875E-5	DESIGN	4.300487290840641E-6	IMPLEMENTATION	3.182649069101272E-7	DOCUMENTATION	1.3143774448032564E-7	TEST
// the user provided resulttransformer, not the one used with "select new". Here to avoid mangling // transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.9999999978211794	WITHOUT_CLASSIFICATION	1.0182168776875928E-9	DEFECT	9.397514181234077E-10	DESIGN	1.4564474594395685E-10	IMPLEMENTATION	7.180207268187731E-11	TEST	3.4054024554749407E-12	DOCUMENTATION
// disassemble positional parameters	WITHOUT_CLASSIFICATION	0.9999991904403317	WITHOUT_CLASSIFICATION	7.236119981208775E-7	IMPLEMENTATION	8.194172021929455E-8	DEFECT	1.9775738180356353E-9	DESIGN	1.4939894792307902E-9	TEST	5.343867435201547E-10	DOCUMENTATION
// disassemble named parameters	WITHOUT_CLASSIFICATION	0.9999999605549943	WITHOUT_CLASSIFICATION	1.7280247411706772E-8	IMPLEMENTATION	1.2407516499831183E-8	DEFECT	5.715993516241871E-9	DESIGN	3.912330807722201E-9	TEST	1.2891737276471246E-10	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999238726886619	WITHOUT_CLASSIFICATION	5.760300487258274E-5	DESIGN	8.633867939855319E-6	DEFECT	8.301682999309318E-6	IMPLEMENTATION	1.3326102143455206E-6	DOCUMENTATION	2.561453121758368E-7	TEST
// noop	WITHOUT_CLASSIFICATION	0.9999577521880588	WITHOUT_CLASSIFICATION	2.229409992976489E-5	DESIGN	1.249490484572035E-5	DEFECT	6.769175931998433E-6	IMPLEMENTATION	5.091979435486391E-7	DOCUMENTATION	1.804332901931873E-7	TEST
//noop	WITHOUT_CLASSIFICATION	0.999819871085312	WITHOUT_CLASSIFICATION	9.125036342331948E-5	DESIGN	7.822637977674507E-5	DEFECT	4.626765201205468E-6	IMPLEMENTATION	4.471037838155364E-6	DOCUMENTATION	1.5543684485975712E-6	TEST
//noop	WITHOUT_CLASSIFICATION	0.999819871085312	WITHOUT_CLASSIFICATION	9.125036342331948E-5	DESIGN	7.822637977674507E-5	DEFECT	4.626765201205468E-6	IMPLEMENTATION	4.471037838155364E-6	DOCUMENTATION	1.5543684485975712E-6	TEST
// this is called from SettingsFactory irregardless; trivial to simply disregard	WITHOUT_CLASSIFICATION	0.999999232876507	WITHOUT_CLASSIFICATION	6.891047486955033E-7	DESIGN	7.745212471438735E-8	DEFECT	4.084955969004429E-10	TEST	9.093061100765716E-11	IMPLEMENTATION	6.719331382457602E-11	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999997463312076	WITHOUT_CLASSIFICATION	2.0064158217492898E-7	DESIGN	2.9793454161943763E-8	IMPLEMENTATION	9.130928011100998E-9	DOCUMENTATION	8.907838426984085E-9	DEFECT	5.194989652934098E-9	TEST
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999997463312076	WITHOUT_CLASSIFICATION	2.0064158217492898E-7	DESIGN	2.9793454161943763E-8	IMPLEMENTATION	9.130928011100998E-9	DOCUMENTATION	8.907838426984085E-9	DEFECT	5.194989652934098E-9	TEST
//throw new UnsupportedOperationException("Can't write to a readonly object");	WITHOUT_CLASSIFICATION	0.9999962851423719	WITHOUT_CLASSIFICATION	3.6792263017233643E-6	DESIGN	3.066149792078449E-8	DEFECT	4.216084744402482E-9	DOCUMENTATION	6.808965736262399E-10	TEST	7.28471794298241E-11	IMPLEMENTATION
//assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9990074454373203	WITHOUT_CLASSIFICATION	9.638325933348884E-4	DESIGN	2.8577358406362353E-5	DEFECT	1.1152751807442445E-7	TEST	2.914290626226473E-8	DOCUMENTATION	3.940514175503938E-9	IMPLEMENTATION
//persister.setIdentifier(result, id); //before calling interceptor, for consistency with normal load	WITHOUT_CLASSIFICATION	0.9999986858678652	WITHOUT_CLASSIFICATION	1.0625692805118071E-6	DEFECT	1.298262076677025E-7	DESIGN	1.0698474571357897E-7	IMPLEMENTATION	1.1087056199445104E-8	TEST	3.6648447678787833E-9	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.999941833449654	WITHOUT_CLASSIFICATION	5.421612534256668E-5	DESIGN	3.013914233686069E-6	DEFECT	8.338541265495517E-7	IMPLEMENTATION	8.783102430368541E-8	DOCUMENTATION	1.482561870071572E-8	TEST
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.999941833449654	WITHOUT_CLASSIFICATION	5.421612534256668E-5	DESIGN	3.013914233686069E-6	DEFECT	8.338541265495517E-7	IMPLEMENTATION	8.783102430368541E-8	DOCUMENTATION	1.482561870071572E-8	TEST
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999995310499137	WITHOUT_CLASSIFICATION	3.971893578176752E-7	DESIGN	6.978758755987938E-8	DEFECT	1.8447693081835503E-9	IMPLEMENTATION	9.434244758150888E-11	TEST	3.4029175281955685E-11	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999742511749262	WITHOUT_CLASSIFICATION	2.2369716290379087E-5	DESIGN	3.3740898554720033E-6	DEFECT	4.2990363849907E-9	IMPLEMENTATION	4.2667408077123323E-10	DOCUMENTATION	2.9321758517804545E-10	TEST
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999742511749262	WITHOUT_CLASSIFICATION	2.2369716290379087E-5	DESIGN	3.3740898554720033E-6	DEFECT	4.2990363849907E-9	IMPLEMENTATION	4.2667408077123323E-10	DOCUMENTATION	2.9321758517804545E-10	TEST
// classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.9999561650000839	WITHOUT_CLASSIFICATION	4.178561298752849E-5	DESIGN	1.2691750713966807E-6	TEST	5.805274484363747E-7	DEFECT	1.853672140318885E-7	DOCUMENTATION	1.4317194873239325E-8	IMPLEMENTATION
// get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.9999985547089633	WITHOUT_CLASSIFICATION	1.3498959150233964E-6	DESIGN	7.823909383438865E-8	DEFECT	1.0393416654387282E-8	TEST	5.575928625205037E-9	IMPLEMENTATION	1.186682750064037E-9	DOCUMENTATION
// get meta's from <class>	WITHOUT_CLASSIFICATION	0.9999934418804712	WITHOUT_CLASSIFICATION	6.470922357458769E-6	DESIGN	8.04313236435878E-8	DEFECT	4.9052027912853926E-9	TEST	1.7295286175520969E-9	DOCUMENTATION	1.3111629551261731E-10	IMPLEMENTATION
// DB-OBJECTNAME	WITHOUT_CLASSIFICATION	0.9999918349594556	WITHOUT_CLASSIFICATION	4.422453759740327E-6	DESIGN	2.7392653242529187E-6	IMPLEMENTATION	4.008905010417674E-7	DEFECT	3.8810916185870657E-7	DOCUMENTATION	2.143217973809604E-7	TEST
// MUTABLE	WITHOUT_CLASSIFICATION	0.9999937752790417	WITHOUT_CLASSIFICATION	5.377416618675393E-6	DESIGN	6.057656185427209E-7	DEFECT	8.994414498812813E-8	IMPLEMENTATION	8.485914212454946E-8	DOCUMENTATION	6.673543389405866E-8	TEST
// WHERE	WITHOUT_CLASSIFICATION	0.9999785264941974	WITHOUT_CLASSIFICATION	1.6833257509935406E-5	DESIGN	3.723452675499465E-6	DEFECT	4.086121330883715E-7	IMPLEMENTATION	2.6795906249235056E-7	TEST	2.402244215842377E-7	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999551389503019	WITHOUT_CLASSIFICATION	4.338665873399206E-5	DESIGN	1.0458886942144445E-6	DEFECT	1.893855210844202E-7	DOCUMENTATION	1.5499823978392104E-7	TEST	8.411850904105506E-8	IMPLEMENTATION
// POLYMORPHISM	WITHOUT_CLASSIFICATION	0.9999955529861488	WITHOUT_CLASSIFICATION	2.0939659578267167E-6	DESIGN	1.058577318938525E-6	DEFECT	1.051137698342457E-6	IMPLEMENTATION	1.5769907775293492E-7	DOCUMENTATION	8.563379820861926E-8	TEST
// TODO:	WITHOUT_CLASSIFICATION	0.9859400490116321	WITHOUT_CLASSIFICATION	0.006808219944731592	IMPLEMENTATION	0.005242319241147446	DESIGN	0.0012518023689812368	DEFECT	3.805970734804776E-4	DOCUMENTATION	3.7701236002700135E-4	TEST
// ID	WITHOUT_CLASSIFICATION	0.9999883725419048	WITHOUT_CLASSIFICATION	6.511059695262761E-6	DESIGN	2.698163737696437E-6	DEFECT	1.8686751229881653E-6	IMPLEMENTATION	2.8770018026480434E-7	DOCUMENTATION	2.618593589292386E-7	TEST
// VERSION / TIMESTAMP	WITHOUT_CLASSIFICATION	0.9999984261749146	WITHOUT_CLASSIFICATION	1.0166409408872545E-6	DESIGN	2.681308210067475E-7	IMPLEMENTATION	1.395113920508158E-7	DEFECT	7.747792324263848E-8	DOCUMENTATION	7.206400828938965E-8	TEST
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999578837153015	WITHOUT_CLASSIFICATION	3.395986869603036E-5	IMPLEMENTATION	5.3863290774209634E-6	DESIGN	1.4186744915570374E-6	DEFECT	9.519813891741177E-7	DOCUMENTATION	3.994310443642203E-7	TEST
// Primary key constraint	WITHOUT_CLASSIFICATION	0.9999999665377172	WITHOUT_CLASSIFICATION	1.013127641155718E-8	DESIGN	9.91291285940908E-9	DEFECT	5.558609840044676E-9	IMPLEMENTATION	4.60114544674885E-9	DOCUMENTATION	3.258338330682335E-9	TEST
// this is either a <version/> tag with no type attribute, // or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.9999998184624143	WITHOUT_CLASSIFICATION	1.2755984560215115E-7	DEFECT	3.5571390990073055E-8	IMPLEMENTATION	1.2439431366900489E-8	TEST	5.774676519579063E-9	DESIGN	1.9224136280193485E-10	DOCUMENTATION
// for version properties marked as being generated, make sure they are "always" // generated; aka, "insert" is invalid; this is dis-allowed by the DTD, // but just to make sure...	WITHOUT_CLASSIFICATION	0.999999997355605	WITHOUT_CLASSIFICATION	1.385774904728041E-9	DEFECT	7.869242207197843E-10	DESIGN	3.7633750182837345E-10	TEST	8.480740775345841E-11	IMPLEMENTATION	1.055092250392142E-11	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999578837153015	WITHOUT_CLASSIFICATION	3.395986869603036E-5	IMPLEMENTATION	5.3863290774209634E-6	DESIGN	1.4186744915570374E-6	DEFECT	9.519813891741177E-7	DOCUMENTATION	3.994310443642203E-7	TEST
// ( (Column) discrim.getColumnIterator().next() ).setType(type);	WITHOUT_CLASSIFICATION	0.9999988736955728	WITHOUT_CLASSIFICATION	6.643705859290006E-7	DESIGN	4.5321257356351936E-7	DEFECT	5.58945243951791E-9	IMPLEMENTATION	2.183848346704405E-9	DOCUMENTATION	9.479668478495478E-10	TEST
// go ahead and set the lazy here, since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.9999989873315784	WITHOUT_CLASSIFICATION	8.722397567671463E-7	IMPLEMENTATION	7.41008499971771E-8	DESIGN	6.232301850040576E-8	DEFECT	3.632007336447526E-9	DOCUMENTATION	3.727888794673901E-10	TEST
// DYNAMIC UPDATE	WITHOUT_CLASSIFICATION	0.999982899626446	WITHOUT_CLASSIFICATION	1.1029594706929961E-5	IMPLEMENTATION	5.2929958243259375E-6	DESIGN	3.3485818739391755E-7	DOCUMENTATION	2.849026842675749E-7	DEFECT	1.580221508452052E-7	TEST
// IMPORT	WITHOUT_CLASSIFICATION	0.9999891724219205	WITHOUT_CLASSIFICATION	6.437805372030692E-6	DESIGN	3.37946037051791E-6	DEFECT	6.314131403116189E-7	IMPLEMENTATION	2.293580860790615E-7	DOCUMENTATION	1.4954111045486932E-7	TEST
// BATCH SIZE	WITHOUT_CLASSIFICATION	0.999958444479627	WITHOUT_CLASSIFICATION	1.8000930352680166E-5	DESIGN	1.4448849608048292E-5	DEFECT	7.36863442815445E-6	IMPLEMENTATION	1.3191690619934228E-6	DOCUMENTATION	4.179369220999529E-7	TEST
// SELECT BEFORE UPDATE	WITHOUT_CLASSIFICATION	0.9999975475177997	WITHOUT_CLASSIFICATION	1.3808029464674439E-6	DESIGN	5.680842883563513E-7	IMPLEMENTATION	2.362978238584785E-7	DOCUMENTATION	2.0662436128439562E-7	DEFECT	6.06727802323162E-8	TEST
// OPTIMISTIC LOCK MODE	WITHOUT_CLASSIFICATION	0.9999973451859784	WITHOUT_CLASSIFICATION	2.337988681046624E-6	DESIGN	1.5409263097850282E-7	DOCUMENTATION	8.205090339369724E-8	IMPLEMENTATION	5.318324291007679E-8	TEST	2.749856329109757E-8	DEFECT
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999946167905672	WITHOUT_CLASSIFICATION	2.2786411572769893E-6	DESIGN	2.2164703923593813E-6	IMPLEMENTATION	4.874354181667327E-7	DEFECT	2.5952814276428305E-7	DOCUMENTATION	1.411343220706225E-7	TEST
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999846158580491	WITHOUT_CLASSIFICATION	1.4887448297877637E-5	DESIGN	2.6207504391073516E-7	DEFECT	1.423325284870922E-7	DOCUMENTATION	4.8256814321509394E-8	TEST	4.4029266300995006E-8	IMPLEMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999800908500915	WITHOUT_CLASSIFICATION	1.981304847705463E-5	DESIGN	9.185242348768334E-8	DEFECT	3.079455907973243E-9	TEST	1.0920434175482865E-9	DOCUMENTATION	7.750865752255439E-11	IMPLEMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999995208748869	WITHOUT_CLASSIFICATION	1.73281256023305E-7	DEFECT	1.712718454557104E-7	IMPLEMENTATION	1.0263491193082429E-7	DESIGN	1.9756665725671435E-8	DOCUMENTATION	1.2180433919621422E-8	TEST
// joined subclasses	WITHOUT_CLASSIFICATION	0.9999995234074788	WITHOUT_CLASSIFICATION	4.458598717394104E-7	DESIGN	1.0208929184391846E-8	DEFECT	9.307768342723214E-9	IMPLEMENTATION	6.06898218893979E-9	DOCUMENTATION	5.146969719553283E-9	TEST
// KEY	WITHOUT_CLASSIFICATION	0.999977379819892	WITHOUT_CLASSIFICATION	2.027907340084538E-5	DESIGN	1.609718159827861E-6	DEFECT	3.1825103836814724E-7	IMPLEMENTATION	2.0921690529583408E-7	TEST	2.0392060355977555E-7	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999551389503019	WITHOUT_CLASSIFICATION	4.338665873399206E-5	DESIGN	1.0458886942144445E-6	DEFECT	1.893855210844202E-7	DOCUMENTATION	1.5499823978392104E-7	TEST	8.411850904105506E-8	IMPLEMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999846158580491	WITHOUT_CLASSIFICATION	1.4887448297877637E-5	DESIGN	2.6207504391073516E-7	DEFECT	1.423325284870922E-7	DOCUMENTATION	4.8256814321509394E-8	TEST	4.4029266300995006E-8	IMPLEMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999995208748869	WITHOUT_CLASSIFICATION	1.73281256023305E-7	DEFECT	1.712718454557104E-7	IMPLEMENTATION	1.0263491193082429E-7	DESIGN	1.9756665725671435E-8	DOCUMENTATION	1.2180433919621422E-8	TEST
// KEY	WITHOUT_CLASSIFICATION	0.999977379819892	WITHOUT_CLASSIFICATION	2.027907340084538E-5	DESIGN	1.609718159827861E-6	DEFECT	3.1825103836814724E-7	IMPLEMENTATION	2.0921690529583408E-7	TEST	2.0392060355977555E-7	DOCUMENTATION
// model.getKey().setType( new Type( model.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999998961369637	WITHOUT_CLASSIFICATION	5.986800082977864E-8	DESIGN	3.3426053317228825E-8	IMPLEMENTATION	9.179537022004705E-9	DEFECT	1.0799126087401155E-9	DOCUMENTATION	3.095325749896999E-10	TEST
// TABLENAME	WITHOUT_CLASSIFICATION	0.9999838621570732	WITHOUT_CLASSIFICATION	9.739760484194316E-6	DESIGN	3.257809016763315E-6	IMPLEMENTATION	2.4838691586937867E-6	DEFECT	3.4338603632552437E-7	TEST	3.130182308235343E-7	DOCUMENTATION
// join.getKey().setType( new Type( lazz.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999999770642934	WITHOUT_CLASSIFICATION	1.3698483223001848E-8	IMPLEMENTATION	5.572474087344155E-9	DESIGN	3.102787887844521E-9	DEFECT	5.02968537293117E-10	DOCUMENTATION	5.899285235666297E-11	TEST
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999942207283196	WITHOUT_CLASSIFICATION	3.343309309091939E-6	DESIGN	1.6962020447332018E-6	IMPLEMENTATION	3.264199405258834E-7	DEFECT	2.724650012072499E-7	DOCUMENTATION	1.4087538482193037E-7	TEST
// COLUMN(S)	WITHOUT_CLASSIFICATION	0.9999958506179987	WITHOUT_CLASSIFICATION	3.3547103286834095E-6	DESIGN	3.4074426492646857E-7	DEFECT	3.101594300981738E-7	IMPLEMENTATION	9.263805214248885E-8	DOCUMENTATION	5.1129925512047895E-8	TEST
// column index	WITHOUT_CLASSIFICATION	0.9999378492963876	WITHOUT_CLASSIFICATION	5.689866864022478E-5	DEFECT	3.740796246546384E-6	DESIGN	1.2210178864620435E-6	IMPLEMENTATION	2.2401764320889425E-7	DOCUMENTATION	6.620319587215293E-8	TEST
//column unique-key	WITHOUT_CLASSIFICATION	0.9999531179179849	WITHOUT_CLASSIFICATION	2.197639668108229E-5	DESIGN	1.397592348096816E-5	DEFECT	8.516843450589899E-6	IMPLEMENTATION	1.8160964868055684E-6	DOCUMENTATION	5.968219156735096E-7	TEST
// automatically makes a column with the default name if none is specifed by XML	WITHOUT_CLASSIFICATION	0.9983287911065566	WITHOUT_CLASSIFICATION	0.0016551718522129966	DESIGN	1.5386476773707772E-5	DEFECT	4.5039031253291535E-7	TEST	1.2854946265292728E-7	IMPLEMENTATION	7.162468163656734E-8	DOCUMENTATION
// for an any	WITHOUT_CLASSIFICATION	0.9999960693605423	WITHOUT_CLASSIFICATION	2.726022376051213E-6	DESIGN	9.533492744602133E-7	DEFECT	9.269154764626993E-8	DOCUMENTATION	8.766674234179233E-8	TEST	7.090951714948235E-8	IMPLEMENTATION
// insertable simply because that is the user did not specify // anything; just override it	WITHOUT_CLASSIFICATION	0.9999999964608902	WITHOUT_CLASSIFICATION	3.3185766046816935E-9	IMPLEMENTATION	1.1203565430468709E-10	DEFECT	5.4964672585366354E-11	DESIGN	2.8406718626356147E-11	DOCUMENTATION	2.5126219012071706E-11	TEST
// the user specifically supplied insert="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999954347590685	WITHOUT_CLASSIFICATION	4.420554781853385E-6	DESIGN	8.926064595430415E-8	TEST	2.745779091976176E-8	DEFECT	1.5501271736807436E-8	DOCUMENTATION	1.2466441116319285E-8	IMPLEMENTATION
// properties generated on update can never be updateable...	WITHOUT_CLASSIFICATION	0.9999626472251683	WITHOUT_CLASSIFICATION	2.3709585737781245E-5	DEFECT	1.3121085057732286E-5	DESIGN	4.779189001366766E-7	IMPLEMENTATION	3.841487113161618E-8	TEST	5.770264719910619E-9	DOCUMENTATION
// updateable only because the user did not specify  // anything; just override it	WITHOUT_CLASSIFICATION	0.9999999782460888	WITHOUT_CLASSIFICATION	2.1643405841960164E-8	IMPLEMENTATION	8.872490187083928E-11	DOCUMENTATION	1.4299626979746612E-11	DEFECT	7.143603240863866E-12	TEST	3.37115249319496E-13	DESIGN
// the user specifically supplied update="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999987951951144	WITHOUT_CLASSIFICATION	9.515811930849587E-7	DESIGN	1.8609316085445224E-7	IMPLEMENTATION	3.367845800595794E-8	DEFECT	2.4043348354112894E-8	TEST	9.408725296095972E-9	DOCUMENTATION
// ROLENAME	WITHOUT_CLASSIFICATION	0.9999743688132171	WITHOUT_CLASSIFICATION	1.57970354913791E-5	DESIGN	5.499105913987034E-6	DEFECT	3.5802621351128166E-6	IMPLEMENTATION	4.4299843273117383E-7	TEST	3.1178480957140073E-7	DOCUMENTATION
// FETCH STRATEGY	WITHOUT_CLASSIFICATION	0.9999711097365069	WITHOUT_CLASSIFICATION	1.65373829416302E-5	DESIGN	1.0438836072851114E-5	IMPLEMENTATION	8.662442411183065E-7	DEFECT	6.486263551819687E-7	DOCUMENTATION	3.9917388212744965E-7	TEST
// TABLE	WITHOUT_CLASSIFICATION	0.9999930169878409	WITHOUT_CLASSIFICATION	4.030584288886701E-6	DESIGN	2.0152177436516164E-6	DEFECT	5.986905097580525E-7	IMPLEMENTATION	1.9052068415983939E-7	DOCUMENTATION	1.4799893251495846E-7	TEST
//tableName = mappings.getNamingStrategy().propertyToTableName( className, path );	WITHOUT_CLASSIFICATION	0.9999973797327141	WITHOUT_CLASSIFICATION	1.4383748370601414E-6	DESIGN	4.462297464972494E-7	DEFECT	4.386673264659954E-7	IMPLEMENTATION	2.7343098706548037E-7	TEST	2.356438888709127E-8	DOCUMENTATION
// SORT	WITHOUT_CLASSIFICATION	0.9999830383143861	WITHOUT_CLASSIFICATION	1.3691845377510472E-5	DESIGN	1.6323474114902173E-6	DEFECT	1.085386195026078E-6	IMPLEMENTATION	3.692324255686203E-7	DOCUMENTATION	1.8287420428879286E-7	TEST
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999846158580491	WITHOUT_CLASSIFICATION	1.4887448297877637E-5	DESIGN	2.6207504391073516E-7	DEFECT	1.423325284870922E-7	DOCUMENTATION	4.8256814321509394E-8	TEST	4.4029266300995006E-8	IMPLEMENTATION
// unsorted, natural, comparator.class.name	WITHOUT_CLASSIFICATION	0.9999981482294191	WITHOUT_CLASSIFICATION	1.8317901315006484E-6	DESIGN	1.0873479108578417E-8	DEFECT	6.056357407756896E-9	IMPLEMENTATION	2.360052258224369E-9	TEST	6.905604938616279E-10	DOCUMENTATION
// ORPHAN DELETE (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.9999990257923015	WITHOUT_CLASSIFICATION	5.082966396515569E-7	DESIGN	4.543947755525622E-7	IMPLEMENTATION	7.4469119598103E-9	DOCUMENTATION	2.596220324477906E-9	DEFECT	1.4731509588014295E-9	TEST
// set up second pass	WITHOUT_CLASSIFICATION	0.9999912949663892	WITHOUT_CLASSIFICATION	8.144537449411185E-6	DESIGN	3.7590407074268375E-7	IMPLEMENTATION	1.0492820797921382E-7	DEFECT	6.429832729254926E-8	DOCUMENTATION	1.5365555484931637E-8	TEST
// an "embedded" component (composite ids and unique) // note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.999681988798928	WITHOUT_CLASSIFICATION	3.0602841012100396E-4	DESIGN	1.0854802353698526E-5	TEST	1.0920916440987766E-6	IMPLEMENTATION	1.9634192134056203E-8	DEFECT	1.6262761029236425E-8	DOCUMENTATION
// a nested composite element	WITHOUT_CLASSIFICATION	0.9999991947288308	WITHOUT_CLASSIFICATION	6.103166129253127E-7	DESIGN	1.208103069402068E-7	IMPLEMENTATION	3.399197811742749E-8	DEFECT	3.358869735776876E-8	TEST	6.5635738264004866E-9	DOCUMENTATION
// for an any // we will have to use reflection	WITHOUT_CLASSIFICATION	0.9999893150604264	WITHOUT_CLASSIFICATION	5.699139450252646E-6	DESIGN	4.829172305572213E-6	DEFECT	1.1482104996129236E-7	IMPLEMENTATION	3.589519410754144E-8	DOCUMENTATION	5.9115737091644374E-9	TEST
//NOTE SPECIAL CASE: // one-to-one constrained=false cannot be proxied, // so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.9999999985108857	WITHOUT_CLASSIFICATION	1.0320464746175174E-9	DESIGN	3.8975500481920126E-10	IMPLEMENTATION	4.8820509576173285E-11	DOCUMENTATION	1.8233405682978603E-11	DEFECT	2.589202240935089E-13	TEST
// use old (HB 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.9999999125208252	WITHOUT_CLASSIFICATION	6.376217785263175E-8	DESIGN	1.8928457205002546E-8	IMPLEMENTATION	3.1664272742524634E-9	DEFECT	1.430881226009023E-9	DOCUMENTATION	1.9123119915141086E-10	TEST
//lazy = !join;	WITHOUT_CLASSIFICATION	0.9999826779595395	WITHOUT_CLASSIFICATION	7.663511775725272E-6	DESIGN	7.252902174458544E-6	DEFECT	1.3740114537596075E-6	IMPLEMENTATION	8.667072273522522E-7	DOCUMENTATION	1.649078291710076E-7	TEST
// GENERATOR	WITHOUT_CLASSIFICATION	0.999992871766775	WITHOUT_CLASSIFICATION	4.922677550543596E-6	DESIGN	1.184445369849246E-6	IMPLEMENTATION	5.872162272993308E-7	DEFECT	2.4626912325924946E-7	DOCUMENTATION	1.876249540362523E-7	TEST
// ID UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999749958423176	WITHOUT_CLASSIFICATION	1.434642152803969E-5	IMPLEMENTATION	8.691551407350697E-6	DESIGN	1.4358482991101626E-6	DEFECT	3.092461965569873E-7	DOCUMENTATION	2.2109025112249352E-7	TEST
// VERSION UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999982425067246	WITHOUT_CLASSIFICATION	1.0493346862835497E-6	DESIGN	5.198330484528791E-7	IMPLEMENTATION	9.104229232898272E-8	DEFECT	6.084464203973167E-8	DOCUMENTATION	3.643860614947424E-8	TEST
// not necessarily a *unique* property reference	WITHOUT_CLASSIFICATION	0.9994633984025522	WITHOUT_CLASSIFICATION	2.6458015339688644E-4	IMPLEMENTATION	1.693463680131022E-4	DESIGN	1.0089114836433836E-4	DEFECT	1.6844394226199294E-6	DOCUMENTATION	9.948825093668567E-8	TEST
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999719574225824	WITHOUT_CLASSIFICATION	1.0636988807711363E-5	DEFECT	1.0010847264450609E-5	DESIGN	7.317846416674771E-6	IMPLEMENTATION	6.627963037196626E-8	TEST	1.0615298384904737E-8	DOCUMENTATION
// contained elements:	WITHOUT_CLASSIFICATION	0.9999919646674331	WITHOUT_CLASSIFICATION	7.887412073218839E-6	DESIGN	6.607793570248551E-8	IMPLEMENTATION	4.479350111718174E-8	DEFECT	2.638674782576559E-8	DOCUMENTATION	1.0662308894630664E-8	TEST
// for non-inverse one-to-many, with a not-null fk, add a backref!	WITHOUT_CLASSIFICATION	0.9999559924560795	WITHOUT_CLASSIFICATION	2.9224196102907103E-5	DESIGN	1.03410848065058E-5	IMPLEMENTATION	4.371100867374951E-6	DEFECT	5.7699049341577416E-8	DOCUMENTATION	1.34630944978779E-8	TEST
// Bind the where	WITHOUT_CLASSIFICATION	0.9999264426173906	WITHOUT_CLASSIFICATION	3.2620566276784507E-5	IMPLEMENTATION	3.0393441391398673E-5	DESIGN	7.538897136341571E-6	DEFECT	1.9654800479707076E-6	DOCUMENTATION	1.0389977567402852E-6	TEST
// Bind the order-by	WITHOUT_CLASSIFICATION	0.9999806261178376	WITHOUT_CLASSIFICATION	1.532146392423915E-5	IMPLEMENTATION	1.977177481115161E-6	DEFECT	1.8018799627057195E-6	DESIGN	2.3327201241763993E-7	DOCUMENTATION	4.008878189758465E-8	TEST
// Bind the filters	WITHOUT_CLASSIFICATION	0.9999808141987125	WITHOUT_CLASSIFICATION	1.5626825855323695E-5	IMPLEMENTATION	2.7539960052761556E-6	DESIGN	6.375967978877929E-7	DEFECT	1.0132979745390923E-7	TEST	6.605283147766526E-8	DOCUMENTATION
// overriding inherited meta attribute. HBX-621 & HBX-793	WITHOUT_CLASSIFICATION	0.9999757388291788	WITHOUT_CLASSIFICATION	1.3437298622511593E-5	DESIGN	7.654723831405965E-6	DEFECT	2.9277531192183194E-6	IMPLEMENTATION	2.2793495606023482E-7	TEST	1.3460292163980192E-8	DOCUMENTATION
// first, iterate over all elements capable of defining an extends attribute // collecting all found extends references if they cannot be resolved // against the already processed mappings.	WITHOUT_CLASSIFICATION	0.9999999988704004	WITHOUT_CLASSIFICATION	1.126867382416793E-9	IMPLEMENTATION	1.355453697259554E-12	DESIGN	1.3350408648769407E-12	TEST	2.67543417519735E-14	DOCUMENTATION	1.503423507755914E-14	DEFECT
// mappings might contain either the "raw" extends name (in the case of // an entity-name mapping) or a FQN (in the case of a POJO mapping).	WITHOUT_CLASSIFICATION	0.9997714394168755	WITHOUT_CLASSIFICATION	2.2560873418008868E-4	DESIGN	1.6235764112189528E-6	IMPLEMENTATION	1.1517393757949062E-6	DEFECT	1.2994610752589413E-7	TEST	4.658704980868834E-8	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9891131695872435	WITHOUT_CLASSIFICATION	0.010885128424313563	DESIGN	8.770800341056209E-7	IMPLEMENTATION	5.370220085913588E-7	DEFECT	2.0338058294834093E-7	DOCUMENTATION	8.450581720816438E-8	TEST
//SessionFactory name:	WITHOUT_CLASSIFICATION	0.9992764157511066	WITHOUT_CLASSIFICATION	7.147131203098487E-4	DESIGN	5.7309701875810555E-6	DEFECT	1.4779007411052389E-6	DOCUMENTATION	9.273637740928155E-7	IMPLEMENTATION	7.34893880630249E-7	TEST
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.999753215281938	WITHOUT_CLASSIFICATION	1.5919811019225372E-4	DESIGN	3.7591879208072306E-5	DEFECT	3.366602309346872E-5	IMPLEMENTATION	1.55891993973901E-5	DOCUMENTATION	7.395061707731542E-7	TEST
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.999753215281938	WITHOUT_CLASSIFICATION	1.5919811019225372E-4	DESIGN	3.7591879208072306E-5	DEFECT	3.366602309346872E-5	IMPLEMENTATION	1.55891993973901E-5	DOCUMENTATION	7.395061707731542E-7	TEST
//Interrogate JDBC metadata	WITHOUT_CLASSIFICATION	0.9999669675765381	WITHOUT_CLASSIFICATION	1.4033962923663282E-5	DESIGN	1.0928430756748016E-5	IMPLEMENTATION	5.637996910014213E-6	DEFECT	1.5039809363225923E-6	DOCUMENTATION	9.280519352449333E-7	TEST
// user supplied JDBC connections	WITHOUT_CLASSIFICATION	0.9998800501526027	WITHOUT_CLASSIFICATION	9.410607959712452E-5	IMPLEMENTATION	2.5504089562549765E-5	DESIGN	2.1307385758531687E-7	DEFECT	1.0241379030159279E-7	DOCUMENTATION	2.4190589847886547E-8	TEST
//use dialect default properties	WITHOUT_CLASSIFICATION	0.9999780583887814	WITHOUT_CLASSIFICATION	2.097747487566777E-5	DESIGN	7.399803898752205E-7	IMPLEMENTATION	1.2045756020187744E-7	DEFECT	8.608001969526013E-8	DOCUMENTATION	1.7618373240920614E-8	TEST
// Transaction settings:	WITHOUT_CLASSIFICATION	0.9999747554351678	WITHOUT_CLASSIFICATION	2.1997238103480952E-5	DESIGN	1.8771015232975319E-6	DEFECT	8.851368614873604E-7	IMPLEMENTATION	4.2439323631431073E-7	DOCUMENTATION	6.06951076303438E-8	TEST
//SQL Generation settings:	WITHOUT_CLASSIFICATION	0.9999294359178591	WITHOUT_CLASSIFICATION	6.944255083851996E-5	DESIGN	7.643734853575081E-7	DEFECT	2.426987508449846E-7	DOCUMENTATION	8.994604693120879E-8	TEST	2.4513019363828307E-8	IMPLEMENTATION
//Query parser settings:	WITHOUT_CLASSIFICATION	0.9997180601161467	WITHOUT_CLASSIFICATION	1.8904054903980837E-4	DEFECT	9.205190029110048E-5	DESIGN	3.526654887613008E-7	DOCUMENTATION	2.6958928674200083E-7	IMPLEMENTATION	2.2517974692911527E-7	TEST
// Second-level / query cache:	WITHOUT_CLASSIFICATION	0.9997307596083653	WITHOUT_CLASSIFICATION	2.5958515536126465E-4	DESIGN	8.189126028173624E-6	DEFECT	1.2627952586820675E-6	IMPLEMENTATION	1.4411246796612807E-7	DOCUMENTATION	5.920251873995709E-8	TEST
// The cache provider is needed when we either have second-level cache enabled // or query cache enabled.  Note that useSecondLevelCache is enabled by default	WITHOUT_CLASSIFICATION	0.9999980361606009	WITHOUT_CLASSIFICATION	1.6374149739491654E-6	DESIGN	3.090947536947084E-7	DEFECT	1.1843040487653484E-8	IMPLEMENTATION	5.1575173081864284E-9	TEST	3.291136416994573E-10	DOCUMENTATION
//SQL Exception converter:	WITHOUT_CLASSIFICATION	0.9998205229027515	WITHOUT_CLASSIFICATION	1.7491419082728616E-4	DESIGN	3.3980230366004346E-6	DEFECT	6.528398926112334E-7	DOCUMENTATION	3.4576386181117267E-7	TEST	1.6627963034173254E-7	IMPLEMENTATION
//Statistics and logging:	WITHOUT_CLASSIFICATION	0.9999820960760778	WITHOUT_CLASSIFICATION	1.4736635013080404E-5	DESIGN	2.5186578986806165E-6	DEFECT	2.897104788088524E-7	IMPLEMENTATION	2.739524342145739E-7	DOCUMENTATION	8.496809754913296E-8	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
//Schema export:	WITHOUT_CLASSIFICATION	0.9998184641088487	WITHOUT_CLASSIFICATION	1.6542973279607927E-4	DESIGN	1.1784471782802262E-5	DEFECT	2.976753681467249E-6	IMPLEMENTATION	8.44026655390368E-7	DOCUMENTATION	5.009062354103796E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// legacy behavior, apply the bridge...	WITHOUT_CLASSIFICATION	0.928393925220843	WITHOUT_CLASSIFICATION	0.0704828034881789	DESIGN	6.396527382257013E-4	IMPLEMENTATION	4.682537025857999E-4	DEFECT	8.099110999803275E-6	TEST	7.26573916677178E-6	DOCUMENTATION
// maybe a concrete SQLpropertyresult type, but Map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.99636697256315	WITHOUT_CLASSIFICATION	0.003079091749027156	DESIGN	5.529304794117333E-4	DEFECT	6.078573332048713E-7	DOCUMENTATION	3.2447508299965167E-7	TEST	7.287599483985409E-8	IMPLEMENTATION
//if dotted and not load-collection nor return-join //regular property	WITHOUT_CLASSIFICATION	0.9999987235133715	WITHOUT_CLASSIFICATION	6.447925108675078E-7	DEFECT	3.2891124261990954E-7	IMPLEMENTATION	2.9281256861277803E-7	DESIGN	7.89097941813597E-9	DOCUMENTATION	2.0793271285094746E-9	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999956070062671	WITHOUT_CLASSIFICATION	4.315865304047824E-6	DESIGN	5.807604626641152E-8	DEFECT	8.688463139143801E-9	IMPLEMENTATION	6.791957209480312E-9	TEST	3.5719621318122637E-9	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999834276614534	WITHOUT_CLASSIFICATION	1.5075135356762008E-5	DESIGN	8.377530508177341E-7	DEFECT	6.287347050237256E-7	IMPLEMENTATION	1.7143181224216085E-8	DOCUMENTATION	1.3572252695807622E-8	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// using local since the inheritedMetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.9999918396321131	WITHOUT_CLASSIFICATION	7.673335091080471E-6	DEFECT	4.7130460161215527E-7	DESIGN	1.4327914246784699E-8	IMPLEMENTATION	1.004768817467104E-9	TEST	3.955112146514184E-10	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// if doc is null, then for whatever reason, the cached file cannot be used...	WITHOUT_CLASSIFICATION	0.9999309409023887	WITHOUT_CLASSIFICATION	4.967307395800262E-5	DESIGN	1.92049072477302E-5	DEFECT	1.4278675146213272E-7	TEST	2.5831335196644442E-8	DOCUMENTATION	1.2498318907384588E-8	IMPLEMENTATION
// drop them in reverse order in case db needs it done that way...	WITHOUT_CLASSIFICATION	0.9259118499124736	WITHOUT_CLASSIFICATION	0.07122483898725433	DESIGN	0.0028008425405162112	DEFECT	5.1381895683030865E-5	IMPLEMENTATION	6.961454607859102E-6	DOCUMENTATION	4.125209465078392E-6	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// This method may be called many times!!	WITHOUT_CLASSIFICATION	0.9989934831992492	WITHOUT_CLASSIFICATION	7.356237525018214E-4	IMPLEMENTATION	1.951277555159794E-4	DESIGN	7.446068153701682E-5	DEFECT	8.869277017017464E-7	TEST	4.1768349433163774E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// found	WITHOUT_CLASSIFICATION	0.999957923411866	WITHOUT_CLASSIFICATION	3.279591724046916E-5	DESIGN	7.44405110705227E-6	DEFECT	1.434722135375591E-6	IMPLEMENTATION	2.7466682956180556E-7	DOCUMENTATION	1.2723082156873892E-7	TEST
// found	WITHOUT_CLASSIFICATION	0.999957923411866	WITHOUT_CLASSIFICATION	3.279591724046916E-5	DESIGN	7.44405110705227E-6	DEFECT	1.434722135375591E-6	IMPLEMENTATION	2.7466682956180556E-7	DOCUMENTATION	1.2723082156873892E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
//<String, String>	WITHOUT_CLASSIFICATION	0.9999477156273906	WITHOUT_CLASSIFICATION	4.352925471488661E-5	DESIGN	6.3228521465867794E-6	DEFECT	1.2488012286516136E-6	DOCUMENTATION	6.230091219201487E-7	TEST	5.604553973738316E-7	IMPLEMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9999477156273906	WITHOUT_CLASSIFICATION	4.352925471488661E-5	DESIGN	6.3228521465867794E-6	DEFECT	1.2488012286516136E-6	DOCUMENTATION	6.230091219201487E-7	TEST	5.604553973738316E-7	IMPLEMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9891131695872435	WITHOUT_CLASSIFICATION	0.010885128424313563	DESIGN	8.770800341056209E-7	IMPLEMENTATION	5.370220085913588E-7	DEFECT	2.0338058294834093E-7	DOCUMENTATION	8.450581720816438E-8	TEST
//Set USE_REFLECTION_OPTIMIZER to false to fix HHH-227	WITHOUT_CLASSIFICATION	0.9999986325922631	WITHOUT_CLASSIFICATION	7.997516991452842E-7	DESIGN	4.2170843707526537E-7	DEFECT	9.792668403526858E-8	IMPLEMENTATION	3.3785114483195203E-8	DOCUMENTATION	1.423580228025328E-8	TEST
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9998517957741426	WITHOUT_CLASSIFICATION	1.4387294000916178E-4	DESIGN	2.7837189657884346E-6	IMPLEMENTATION	8.479716068821366E-7	TEST	3.6260723051216403E-7	DEFECT	3.369880451900105E-7	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999970235204474	WITHOUT_CLASSIFICATION	1.4585017963165778E-6	IMPLEMENTATION	1.132730291625171E-6	DESIGN	2.567072744413197E-7	TEST	1.1433825908157915E-7	DEFECT	1.4201931166334158E-8	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9998817860704511	WITHOUT_CLASSIFICATION	1.1627407129149978E-4	DESIGN	1.1842794752660787E-6	DEFECT	4.120284539730255E-7	DOCUMENTATION	3.114339994145032E-7	IMPLEMENTATION	3.211632874345017E-8	TEST
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9998517957741426	WITHOUT_CLASSIFICATION	1.4387294000916178E-4	DESIGN	2.7837189657884346E-6	IMPLEMENTATION	8.479716068821366E-7	TEST	3.6260723051216403E-7	DEFECT	3.369880451900105E-7	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999970235204474	WITHOUT_CLASSIFICATION	1.4585017963165778E-6	IMPLEMENTATION	1.132730291625171E-6	DESIGN	2.567072744413197E-7	TEST	1.1433825908157915E-7	DEFECT	1.4201931166334158E-8	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999908868851973	WITHOUT_CLASSIFICATION	5.843719346194519E-6	IMPLEMENTATION	1.965475778432027E-6	DESIGN	8.855074622958518E-7	TEST	3.177758487699474E-7	DOCUMENTATION	1.0063636703469496E-7	DEFECT
//maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.9999792549329948	WITHOUT_CLASSIFICATION	2.065952172497448E-5	DESIGN	3.8981831551642046E-8	DEFECT	3.801268864236779E-8	TEST	8.547175691298944E-9	DOCUMENTATION	3.5843780498283873E-12	IMPLEMENTATION
// the element has been removed from the set	WITHOUT_CLASSIFICATION	0.9999909578036947	WITHOUT_CLASSIFICATION	8.357986388853387E-6	DESIGN	4.853107908969986E-7	DEFECT	1.9344927209395857E-7	IMPLEMENTATION	2.73459074736879E-9	TEST	2.715262841673932E-9	DOCUMENTATION
// the element has changed	WITHOUT_CLASSIFICATION	0.9999838210247639	WITHOUT_CLASSIFICATION	1.3763475083806254E-5	IMPLEMENTATION	2.079747968307801E-6	DESIGN	2.658860937985759E-7	DEFECT	4.957933199323606E-8	TEST	2.0286758072591578E-8	DOCUMENTATION
//Careful: these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.9708637276602787	WITHOUT_CLASSIFICATION	0.02851059265623296	DESIGN	5.578075630281098E-4	IMPLEMENTATION	3.475275578684119E-5	DEFECT	3.196172637804383E-5	TEST	1.1576382953805317E-6	DOCUMENTATION
//needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.7889396287719949	DESIGN	0.21105542507328234	WITHOUT_CLASSIFICATION	2.985987306830591E-6	DEFECT	9.52111984988507E-7	DOCUMENTATION	6.267260790311141E-7	TEST	3.813293520973748E-7	IMPLEMENTATION
// override on some subclasses	WITHOUT_CLASSIFICATION	0.9999996899048547	WITHOUT_CLASSIFICATION	2.6793564177147075E-7	DESIGN	2.1452568467636737E-8	IMPLEMENTATION	9.231591960335646E-9	DEFECT	9.098035300506027E-9	DOCUMENTATION	2.377307802781326E-9	TEST
//override on some subclasses	WITHOUT_CLASSIFICATION	0.9999965029280182	WITHOUT_CLASSIFICATION	3.26289908229749E-6	DESIGN	9.645403974450224E-8	IMPLEMENTATION	8.868198577215105E-8	DOCUMENTATION	3.008563519922201E-8	DEFECT	1.8951238894870154E-8	TEST
//do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.999738408710571	WITHOUT_CLASSIFICATION	2.500818223557848E-4	DESIGN	8.504663110554058E-6	IMPLEMENTATION	1.4327824895124564E-6	DEFECT	9.262576487052339E-7	TEST	6.45763824519022E-7	DOCUMENTATION
// short-circuit(s) // no new elements, the old list contains only Orphans // no old elements, so no Orphans neither	WITHOUT_CLASSIFICATION	0.9999999703779792	WITHOUT_CLASSIFICATION	2.9467996562978273E-8	DESIGN	9.806755118725352E-11	TEST	2.340360862117981E-11	DOCUMENTATION	1.797860287040026E-11	DEFECT	1.4574424560271755E-11	IMPLEMENTATION
// create the collection holding the Orphans	WITHOUT_CLASSIFICATION	0.999996966581201	WITHOUT_CLASSIFICATION	2.4217289550465785E-6	DEFECT	3.445006146976323E-7	DESIGN	2.360055532958761E-7	IMPLEMENTATION	2.0558899475042533E-8	TEST	1.0624776422261815E-8	DOCUMENTATION
// collect EntityIdentifier(s) of the *current* elements - add them into a HashSet for fast access	WITHOUT_CLASSIFICATION	0.999862723995931	WITHOUT_CLASSIFICATION	1.3723839724089171E-4	DESIGN	2.3778984099096514E-8	DEFECT	9.329179613793456E-9	TEST	3.173290238664508E-9	DOCUMENTATION	1.3253741009605492E-9	IMPLEMENTATION
// iterate over the *old* list	WITHOUT_CLASSIFICATION	0.9999997846626335	WITHOUT_CLASSIFICATION	2.0022261800539141E-7	DESIGN	7.720048750855797E-9	TEST	6.200451221923483E-9	IMPLEMENTATION	8.695532187083464E-10	DEFECT	3.2469526012524146E-10	DOCUMENTATION
/*(array==null) ? tempList.size() :*/	WITHOUT_CLASSIFICATION	0.9998684297301119	WITHOUT_CLASSIFICATION	9.879495705482137E-5	IMPLEMENTATION	2.4735691969108023E-5	DEFECT	4.581911134596378E-6	TEST	3.20607654408246E-6	DESIGN	2.516331854853879E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9998817860704511	WITHOUT_CLASSIFICATION	1.1627407129149978E-4	DESIGN	1.1842794752660787E-6	DEFECT	4.120284539730255E-7	DOCUMENTATION	3.114339994145032E-7	IMPLEMENTATION	3.211632874345017E-8	TEST
/*(array==null) ? tempList.get(i) :*/	WITHOUT_CLASSIFICATION	0.9999183347242967	WITHOUT_CLASSIFICATION	3.7421433670571885E-5	IMPLEMENTATION	2.163301273270167E-5	DEFECT	1.834824391878761E-5	DESIGN	4.026422699739187E-6	TEST	2.36162681437182E-7	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.999994095835641	WITHOUT_CLASSIFICATION	2.1374223690360715E-6	DEFECT	2.0737148032269635E-6	DESIGN	1.2515524202362324E-6	TEST	4.0891856559460646E-7	DOCUMENTATION	3.25562008568452E-8	IMPLEMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.999994095835641	WITHOUT_CLASSIFICATION	2.1374223690360715E-6	DEFECT	2.0737148032269635E-6	DESIGN	1.2515524202362324E-6	TEST	4.0891856559460646E-7	DOCUMENTATION	3.25562008568452E-8	IMPLEMENTATION
// amazingly, these two will work because AbstractCollection // uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.9994618054755304	WITHOUT_CLASSIFICATION	4.7119783994872957E-4	DESIGN	3.683701169991776E-5	IMPLEMENTATION	2.9053670722086837E-5	DEFECT	6.575388460818831E-7	DOCUMENTATION	4.484632528705529E-7	TEST
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999908868851973	WITHOUT_CLASSIFICATION	5.843719346194519E-6	IMPLEMENTATION	1.965475778432027E-6	DESIGN	8.855074622958518E-7	TEST	3.177758487699474E-7	DOCUMENTATION	1.0063636703469496E-7	DEFECT
// finally, what it's all about...	WITHOUT_CLASSIFICATION	0.9891355007978982	WITHOUT_CLASSIFICATION	0.008829468193743079	DEFECT	0.0010276595528558997	DESIGN	9.915861382499547E-4	IMPLEMENTATION	9.917294220655607E-6	TEST	5.8680230321646065E-6	DOCUMENTATION
// note that if we load this collection from a cartesian product // the multiplicity would be broken ... so use an idbag instead	WITHOUT_CLASSIFICATION	0.9996056876693202	DESIGN	3.9077240022392324E-4	WITHOUT_CLASSIFICATION	3.251548942980305E-6	DEFECT	2.8394022498554317E-7	TEST	2.831655640393072E-9	DOCUMENTATION	1.6096321188013209E-9	IMPLEMENTATION
// Anyway, here we implement <set> semantics for a // <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.9614491277584625	WITHOUT_CLASSIFICATION	0.031354817235489246	DESIGN	0.005304252312021959	DEFECT	0.0018267608935404963	IMPLEMENTATION	4.652519691021623E-5	TEST	1.8516603575703445E-5	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999986308073897	WITHOUT_CLASSIFICATION	1.257196740225653E-6	DEFECT	7.914617330405846E-8	DESIGN	2.354248938788668E-8	TEST	6.21425710085067E-9	DOCUMENTATION	3.092950151827138E-9	IMPLEMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9520107896240528	WITHOUT_CLASSIFICATION	0.047577937519057624	DESIGN	3.0928384171590914E-4	DEFECT	8.72200536267965E-5	TEST	1.2661559145897468E-5	IMPLEMENTATION	2.10740240082077E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999908868851973	WITHOUT_CLASSIFICATION	5.843719346194519E-6	IMPLEMENTATION	1.965475778432027E-6	DESIGN	8.855074622958518E-7	TEST	3.177758487699474E-7	DOCUMENTATION	1.0063636703469496E-7	DEFECT
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999986308073897	WITHOUT_CLASSIFICATION	1.257196740225653E-6	DEFECT	7.914617330405846E-8	DESIGN	2.354248938788668E-8	TEST	6.21425710085067E-9	DOCUMENTATION	3.092950151827138E-9	IMPLEMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9520107896240528	WITHOUT_CLASSIFICATION	0.047577937519057624	DESIGN	3.0928384171590914E-4	DEFECT	8.72200536267965E-5	TEST	1.2661559145897468E-5	IMPLEMENTATION	2.10740240082077E-6	DOCUMENTATION
/*public boolean equals(Object other) {	WITHOUT_CLASSIFICATION	0.5362349336210975	WITHOUT_CLASSIFICATION	0.46330536834032876	DESIGN	4.016447719702843E-4	IMPLEMENTATION	3.428982960150861E-5	DOCUMENTATION	1.805354311644992E-5	TEST	5.7098938854956785E-6	DEFECT
// List OPERATIONS:	WITHOUT_CLASSIFICATION	0.9999988433144209	WITHOUT_CLASSIFICATION	9.11299949154516E-7	IMPLEMENTATION	1.1498387426574276E-7	TEST	7.477059732499036E-8	DESIGN	3.896999588524137E-8	DEFECT	1.6661162492695588E-8	DOCUMENTATION
//pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.9999802541578652	WITHOUT_CLASSIFICATION	1.8635877872598898E-5	DEFECT	9.893479605343098E-7	DESIGN	5.8861865340125545E-8	IMPLEMENTATION	4.6936043070184106E-8	DOCUMENTATION	1.4818393324073378E-8	TEST
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999908868851973	WITHOUT_CLASSIFICATION	5.843719346194519E-6	IMPLEMENTATION	1.965475778432027E-6	DESIGN	8.855074622958518E-7	TEST	3.177758487699474E-7	DOCUMENTATION	1.0063636703469496E-7	DEFECT
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999908868851973	WITHOUT_CLASSIFICATION	5.843719346194519E-6	IMPLEMENTATION	1.965475778432027E-6	DESIGN	8.855074622958518E-7	TEST	3.177758487699474E-7	DOCUMENTATION	1.0063636703469496E-7	DEFECT
// from Map	WITHOUT_CLASSIFICATION	0.9999927317038589	WITHOUT_CLASSIFICATION	5.136165716587304E-6	DESIGN	1.5057401945235546E-6	DEFECT	5.146381439302028E-7	IMPLEMENTATION	6.260567508649526E-8	TEST	4.9146411117285804E-8	DOCUMENTATION
// from SortedMap	WITHOUT_CLASSIFICATION	0.9999822049794066	WITHOUT_CLASSIFICATION	1.2224655601776962E-5	DESIGN	4.375626899968078E-6	DEFECT	9.828416929360893E-7	IMPLEMENTATION	1.2801031398617642E-7	TEST	8.388608476355097E-8	DOCUMENTATION
//inject the data	WITHOUT_CLASSIFICATION	0.9999222792207737	WITHOUT_CLASSIFICATION	5.3373286774851545E-5	DESIGN	2.0129886972804004E-5	IMPLEMENTATION	2.3493879587363965E-6	DEFECT	1.5408452319003363E-6	DOCUMENTATION	3.2737228799115463E-7	TEST
// cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999867337691953	WITHOUT_CLASSIFICATION	1.2293809798062058E-5	DESIGN	8.165845380850179E-7	DEFECT	1.2972976444893816E-7	IMPLEMENTATION	1.5533900669121525E-8	DOCUMENTATION	1.0572803504490022E-8	TEST
//default pool size 20	WITHOUT_CLASSIFICATION	0.9999898563863769	WITHOUT_CLASSIFICATION	4.902036197137566E-6	DESIGN	2.5948604202333943E-6	IMPLEMENTATION	2.342289285741227E-6	DEFECT	2.632429266415479E-7	DOCUMENTATION	4.1184793279724145E-8	TEST
// trying via forName() first to be as close to DriverManager's semantics	WITHOUT_CLASSIFICATION	0.9999999697781544	WITHOUT_CLASSIFICATION	1.9106214460099348E-8	DESIGN	9.502937392493304E-9	DEFECT	8.725838065943609E-10	TEST	4.466675208145474E-10	IMPLEMENTATION	2.934423055368109E-10	DOCUMENTATION
// if debug level is enabled, then log the password, otherwise mask it	WITHOUT_CLASSIFICATION	0.9999976651259456	WITHOUT_CLASSIFICATION	2.1453794526698098E-6	IMPLEMENTATION	1.1409240439554104E-7	DESIGN	4.201200915963005E-8	DEFECT	3.308825986993639E-8	TEST	3.019284438687857E-10	DOCUMENTATION
// register a cleanup synch	WITHOUT_CLASSIFICATION	0.9998527467114354	WITHOUT_CLASSIFICATION	1.4719359875175813E-4	DESIGN	2.3986322638708073E-8	DEFECT	1.596733737699427E-8	IMPLEMENTATION	1.0013288758098825E-8	DOCUMENTATION	9.72286413951858E-9	TEST
// wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.9999547587001729	WITHOUT_CLASSIFICATION	4.405157037403933E-5	DESIGN	6.050832902444825E-7	IMPLEMENTATION	4.956070382979749E-7	DEFECT	8.497331814749154E-8	DOCUMENTATION	4.0658063986658835E-9	TEST
// then bind it	WITHOUT_CLASSIFICATION	0.9999819626951687	WITHOUT_CLASSIFICATION	6.365739744016891E-6	DESIGN	5.352816389598246E-6	IMPLEMENTATION	5.1487019391602915E-6	DEFECT	6.684082231629181E-7	TEST	5.016385354023643E-7	DOCUMENTATION
// try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.9999967441566701	WITHOUT_CLASSIFICATION	1.8257507496625012E-6	DESIGN	1.1399771253218198E-6	DEFECT	2.109288670357898E-7	IMPLEMENTATION	7.537511110336988E-8	DOCUMENTATION	3.811476679914085E-9	TEST
// allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.999987410291124	WITHOUT_CLASSIFICATION	7.661063942663567E-6	DESIGN	4.884184059029276E-6	IMPLEMENTATION	3.432252010029513E-8	DEFECT	9.106904301409171E-9	DOCUMENTATION	1.031449817644952E-9	TEST
// limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.9999983237863859	WITHOUT_CLASSIFICATION	1.6458353171915591E-6	DESIGN	1.3569251535887641E-8	TEST	1.221973781657658E-8	IMPLEMENTATION	3.4623810862718026E-9	DEFECT	1.1269264230601614E-9	DOCUMENTATION
// allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.9932800511965723	WITHOUT_CLASSIFICATION	0.00668616571355892	DESIGN	3.361738618555282E-5	IMPLEMENTATION	6.832864461165732E-8	TEST	5.3206241443080117E-8	DOCUMENTATION	4.4168797175898126E-8	DEFECT
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989674855498	WITHOUT_CLASSIFICATION	5.843591081083063E-7	DEFECT	3.226252560077645E-7	DESIGN	8.7185907984804E-8	IMPLEMENTATION	2.941562314827446E-8	DOCUMENTATION	8.928554759089917E-9	TEST
// We could register the session against the transaction even though it is // not started, but we'd have no guarentee of ever getting the map // entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.9992871082754307	WITHOUT_CLASSIFICATION	7.125705123313949E-4	DESIGN	1.5861783613546313E-7	DEFECT	1.1090179105789227E-7	IMPLEMENTATION	4.9711888291024274E-8	TEST	1.980722516385468E-9	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9996487017343372	WITHOUT_CLASSIFICATION	3.467411864875893E-4	DESIGN	2.347905601200409E-6	IMPLEMENTATION	1.6514918492115121E-6	DEFECT	3.700736390980429E-7	DOCUMENTATION	1.8760808568750722E-7	TEST
//private String propertyName;	WITHOUT_CLASSIFICATION	0.9963091165569894	WITHOUT_CLASSIFICATION	0.003525856589145315	DESIGN	1.327864323734921E-4	DEFECT	2.3822151026725726E-5	DOCUMENTATION	7.615377663743253E-6	TEST	8.028928015075292E-7	IMPLEMENTATION
/*public PropertyProjection project() {	WITHOUT_CLASSIFICATION	0.990072303104825	WITHOUT_CLASSIFICATION	0.008569400740240873	DESIGN	9.645675826138396E-4	DEFECT	2.959475664943858E-4	IMPLEMENTATION	9.585594505382225E-5	DOCUMENTATION	1.92506077217345E-6	TEST
//String[] fk = StringHelper.qualify( "collection_", cp.getKeyColumnNames() );	WITHOUT_CLASSIFICATION	0.9999988742712704	WITHOUT_CLASSIFICATION	6.765510501598395E-7	DESIGN	2.7649889273439305E-7	IMPLEMENTATION	1.4714839541112633E-7	DEFECT	1.7732608952897462E-8	TEST	7.797782297278174E-9	DOCUMENTATION
//" collection_ where " +	WITHOUT_CLASSIFICATION	0.9999826326653005	WITHOUT_CLASSIFICATION	1.2902082205457601E-5	DESIGN	3.0667560246301867E-6	IMPLEMENTATION	1.0488601154255621E-6	DEFECT	1.767790742976911E-7	DOCUMENTATION	1.728572797251627E-7	TEST
//unsupported	WITHOUT_CLASSIFICATION	0.998450138834291	WITHOUT_CLASSIFICATION	8.381516193364554E-4	DESIGN	6.672122725318786E-4	IMPLEMENTATION	3.059190150829249E-5	DEFECT	7.422725091858507E-6	DOCUMENTATION	6.482647240462675E-6	TEST
//unsupported	WITHOUT_CLASSIFICATION	0.998450138834291	WITHOUT_CLASSIFICATION	8.381516193364554E-4	DESIGN	6.672122725318786E-4	IMPLEMENTATION	3.059190150829249E-5	DEFECT	7.422725091858507E-6	DOCUMENTATION	6.482647240462675E-6	TEST
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9996487017343372	WITHOUT_CLASSIFICATION	3.467411864875893E-4	DESIGN	2.347905601200409E-6	IMPLEMENTATION	1.6514918492115121E-6	DEFECT	3.700736390980429E-7	DOCUMENTATION	1.8760808568750722E-7	TEST
//the following two lines were added to ensure that this.params is not null, which //can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.9998362667193851	WITHOUT_CLASSIFICATION	6.523890497928722E-5	DEFECT	5.063869847046602E-5	TEST	3.0171932267380508E-5	IMPLEMENTATION	1.758186346067985E-5	DESIGN	1.0188143702842324E-7	DOCUMENTATION
//with two-deep subqueries, the same alias would get generated for //both using the old method (criteriaQuery.generateSQLAlias()), so //that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.996467016985133	WITHOUT_CLASSIFICATION	0.0035182163709579968	DESIGN	1.1588495793278977E-5	DEFECT	3.161578720818956E-6	TEST	1.3154572074342727E-8	IMPLEMENTATION	3.4148228096360967E-9	DOCUMENTATION
//implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.9602156200509125	WITHOUT_CLASSIFICATION	0.03611465942817321	DESIGN	0.003268551568517882	IMPLEMENTATION	2.4928718528504344E-4	DEFECT	1.373046610385217E-4	TEST	1.45771060728283E-5	DOCUMENTATION
//pull off the last ", "	WITHOUT_CLASSIFICATION	0.9999949214334972	WITHOUT_CLASSIFICATION	3.937990494378716E-6	DESIGN	4.86656494439662E-7	IMPLEMENTATION	2.9546261220035725E-7	TEST	2.3800382030976635E-7	DEFECT	1.204530813394179E-7	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999341175113236	WITHOUT_CLASSIFICATION	5.520840086216037E-5	DESIGN	8.678944147476615E-6	DEFECT	7.577811029905932E-7	DOCUMENTATION	6.486721445089978E-7	IMPLEMENTATION	5.88690419369326E-7	TEST
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.9999997219686938	WITHOUT_CLASSIFICATION	9.813640088320315E-8	IMPLEMENTATION	9.146240365051394E-8	DESIGN	3.798256782236608E-8	DOCUMENTATION	3.550718572517578E-8	DEFECT	1.4942748061781047E-8	TEST
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource)	WITHOUT_CLASSIFICATION	0.9986438995633229	WITHOUT_CLASSIFICATION	0.0013512007788235433	DESIGN	4.423438820948873E-6	DEFECT	2.9415168590695184E-7	IMPLEMENTATION	1.7276581327264073E-7	DOCUMENTATION	9.301533434127316E-9	TEST
// NOT_SUPPORTED_SHOULD_USE_JDBC3_PreparedStatement.getGeneratedKeys_method	WITHOUT_CLASSIFICATION	0.9999251005034074	WITHOUT_CLASSIFICATION	4.626364423583996E-5	DESIGN	2.764064246923641E-5	IMPLEMENTATION	4.918333017175966E-7	TEST	4.2065538623984617E-7	DEFECT	8.272119966234535E-8	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999999999918094	WITHOUT_CLASSIFICATION	3.357036102810952E-12	IMPLEMENTATION	3.1377453956452154E-12	DESIGN	1.579783718515548E-12	DOCUMENTATION	9.022706702879445E-14	DEFECT	2.5762414207207106E-14	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999768868836855	WITHOUT_CLASSIFICATION	1.2893156528002596E-5	IMPLEMENTATION	8.840532747346672E-6	DESIGN	7.184171562595811E-7	DEFECT	6.449443063840171E-7	DOCUMENTATION	1.6065576447373514E-8	TEST
// Oracle did add support for ANSI CASE statements in 9i	WITHOUT_CLASSIFICATION	0.9999984150948458	WITHOUT_CLASSIFICATION	1.3033939346216465E-6	DESIGN	2.414728872491335E-7	IMPLEMENTATION	1.9682201962394505E-8	DOCUMENTATION	1.289535527670141E-8	TEST	7.460775220458992E-9	DEFECT
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9997169842384735	WITHOUT_CLASSIFICATION	2.534510184983555E-4	DEFECT	1.920820306245178E-5	DESIGN	9.714522985697972E-6	IMPLEMENTATION	4.5221197096308345E-7	DOCUMENTATION	1.8980500895206826E-7	TEST
// Informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.999642826358351	WITHOUT_CLASSIFICATION	3.416161055218686E-4	DEFECT	1.272763447931007E-5	DESIGN	1.856399780138983E-6	TEST	5.978968116022357E-7	DOCUMENTATION	3.7560505617394353E-7	IMPLEMENTATION
// or BYTE // or TEXT? // or MONEY	WITHOUT_CLASSIFICATION	0.9999436894934419	WITHOUT_CLASSIFICATION	2.981363864067773E-5	DESIGN	1.7187086537002353E-5	IMPLEMENTATION	5.901298122465788E-6	DEFECT	2.5195552475172957E-6	TEST	8.889280105740215E-7	DOCUMENTATION
// strip table-owner because Informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.9999999964829605	WITHOUT_CLASSIFICATION	2.8092550589050376E-9	DESIGN	6.59461774662037E-10	IMPLEMENTATION	3.325441298419686E-11	DEFECT	8.828690731319745E-12	DOCUMENTATION	6.239643349834466E-12	TEST
// build the map of standard ANSI SQL aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999979664960954	WITHOUT_CLASSIFICATION	1.8248350876961588E-6	IMPLEMENTATION	1.2385174811962636E-7	DEFECT	8.021617072689915E-8	DESIGN	3.816748436239916E-9	DOCUMENTATION	7.841496221642311E-10	TEST
//pre H3.2 behavior: super.getReturnType(ct, m);	WITHOUT_CLASSIFICATION	0.9987432223717629	WITHOUT_CLASSIFICATION	0.0012089574574965405	DESIGN	4.7581469331559325E-5	DEFECT	1.0538190152954526E-7	IMPLEMENTATION	9.063554355508917E-8	DOCUMENTATION	4.268396385617585E-8	TEST
// finally use the sqltype if == on Hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.999996254241482	WITHOUT_CLASSIFICATION	3.720684231740052E-6	DESIGN	2.4875112969425038E-8	DEFECT	9.025074908297941E-11	IMPLEMENTATION	5.6172312847219866E-11	DOCUMENTATION	5.275023981567221E-11	TEST
//because numeric can be anything	WITHOUT_CLASSIFICATION	0.999992942566884	WITHOUT_CLASSIFICATION	2.5281294089288148E-6	DESIGN	1.926392259497687E-6	IMPLEMENTATION	1.6114840820618893E-6	DOCUMENTATION	9.493458625206933E-7	DEFECT	4.208150299927805E-8	TEST
// constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998739338778719	WITHOUT_CLASSIFICATION	1.2457282480854664E-4	DESIGN	9.945314161389867E-7	IMPLEMENTATION	3.657449160796403E-7	DEFECT	1.0252594571000708E-7	TEST	3.0495041623028407E-8	DOCUMENTATION
// standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.9997273829402568	WITHOUT_CLASSIFICATION	2.5263480995574105E-4	DESIGN	1.4816696705820489E-5	IMPLEMENTATION	5.09035019723156E-6	DEFECT	5.836438774413016E-8	DOCUMENTATION	1.6838496699860636E-8	TEST
//map second/minute/hour/day/month/year to ANSI extract(), override on subclasses	WITHOUT_CLASSIFICATION	0.9998823610612867	WITHOUT_CLASSIFICATION	8.477150874618702E-5	DESIGN	3.26048148500714E-5	IMPLEMENTATION	1.8240879372350147E-7	DOCUMENTATION	5.0177783679189115E-8	DEFECT	3.002853975053535E-8	TEST
// register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.9996708030101539	WITHOUT_CLASSIFICATION	3.2895826024163344E-4	DESIGN	2.178264512307935E-7	IMPLEMENTATION	1.4682306465253192E-8	DOCUMENTATION	4.883529505128012E-9	DEFECT	1.3373172289506148E-9	TEST
// database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996694607952525	WITHOUT_CLASSIFICATION	2.419918951958761E-4	IMPLEMENTATION	7.427160537028913E-5	DEFECT	1.3451196638114509E-5	DESIGN	4.3576067013325244E-7	DOCUMENTATION	3.8874687291621803E-7	TEST
// hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9981711795310317	WITHOUT_CLASSIFICATION	0.0010134589213814523	DESIGN	7.944869693430309E-4	IMPLEMENTATION	1.213680104316664E-5	DEFECT	7.049449448148124E-6	TEST	1.6883277523938626E-6	DOCUMENTATION
// keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999836418218543	WITHOUT_CLASSIFICATION	1.4592469062047025E-5	IMPLEMENTATION	8.258518632757462E-7	DEFECT	7.69049725340159E-7	DESIGN	8.655804336217116E-8	TEST	8.424945171312022E-8	DOCUMENTATION
// native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999750863172061	WITHOUT_CLASSIFICATION	1.198136804158927E-5	IMPLEMENTATION	1.0170148224180398E-5	DESIGN	2.516567433877745E-6	DEFECT	1.8069614485863993E-7	DOCUMENTATION	6.490294928706982E-8	TEST
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999309563190932	WITHOUT_CLASSIFICATION	6.486603070017742E-5	IMPLEMENTATION	3.45096197222286E-6	DESIGN	3.141044240031096E-7	DEFECT	2.6942828187629424E-7	TEST	1.4315552842201473E-7	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998546810198465	WITHOUT_CLASSIFICATION	7.268197139504031E-5	IMPLEMENTATION	7.038840782266071E-5	DESIGN	1.1690950349194834E-6	DEFECT	5.400783397498443E-7	DOCUMENTATION	5.394275610503547E-7	TEST
// GUID support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998901626469716	WITHOUT_CLASSIFICATION	6.500914188772592E-5	IMPLEMENTATION	4.3053221101639746E-5	DESIGN	1.0142312461179466E-6	DEFECT	4.3898044174484773E-7	DOCUMENTATION	3.2177835122799534E-7	TEST
// limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999935159004173	WITHOUT_CLASSIFICATION	3.888924887217733E-6	DESIGN	1.8435966207868934E-6	IMPLEMENTATION	6.768915067297118E-7	DEFECT	5.180256252520114E-8	TEST	2.28840053693023E-8	DOCUMENTATION
// by default we report no support	WITHOUT_CLASSIFICATION	0.9999965900018468	WITHOUT_CLASSIFICATION	2.039526752048298E-6	DESIGN	1.0168547975853775E-6	IMPLEMENTATION	3.1946393151896274E-7	DEFECT	3.020017301545802E-8	DOCUMENTATION	3.9524990817130855E-9	TEST
// by default we report no support for NOWAIT lock semantics	WITHOUT_CLASSIFICATION	0.9997523371921346	WITHOUT_CLASSIFICATION	2.3176319905634344E-4	DESIGN	8.72219516861293E-6	DEFECT	6.414387554736265E-6	IMPLEMENTATION	7.27561433300741E-7	DOCUMENTATION	3.546465232258865E-8	TEST
// table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999903471080525	WITHOUT_CLASSIFICATION	8.499797774851854E-6	IMPLEMENTATION	9.253624792454939E-7	DESIGN	1.5795067652521575E-7	DEFECT	5.908955128600787E-8	TEST	1.0691465496435913E-8	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999699201832765	WITHOUT_CLASSIFICATION	2.822827611028092E-5	DESIGN	1.6625605381850318E-6	IMPLEMENTATION	1.591818342832951E-7	TEST	2.3213785211548265E-8	DEFECT	6.584455540565858E-9	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998647469423305	WITHOUT_CLASSIFICATION	7.390038755607808E-5	IMPLEMENTATION	5.947142002235257E-5	DESIGN	1.5959646836024771E-6	DEFECT	1.4749717100460188E-7	DOCUMENTATION	1.3778823641110829E-7	TEST
// current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999882583055612	WITHOUT_CLASSIFICATION	1.050707010166228E-5	IMPLEMENTATION	5.45845502312846E-7	DEFECT	3.5937808788609565E-7	TEST	1.8332703641424579E-7	DOCUMENTATION	1.4607371062765406E-7	DESIGN
// SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998758607506564	WITHOUT_CLASSIFICATION	1.1172256133915747E-4	DESIGN	7.177335025117158E-6	IMPLEMENTATION	4.6265534721614924E-6	DEFECT	4.571279231840043E-7	DOCUMENTATION	1.556715840036893E-7	TEST
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999927356326425	WITHOUT_CLASSIFICATION	4.231590397987374E-6	DESIGN	2.937803591007411E-6	IMPLEMENTATION	4.5298775925952825E-8	DEFECT	2.727114788512926E-8	TEST	2.2403444589009656E-8	DOCUMENTATION
// identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999057033429252	WITHOUT_CLASSIFICATION	8.531787275260469E-5	IMPLEMENTATION	8.193936993929897E-6	DESIGN	4.541903188145784E-7	DEFECT	1.9092596289239118E-7	TEST	1.3973104659889584E-7	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999079322831168	WITHOUT_CLASSIFICATION	7.948959579676542E-5	IMPLEMENTATION	1.0588208588811784E-5	DESIGN	1.1489164707653668E-6	DEFECT	4.3977523025645033E-7	DOCUMENTATION	4.0122079668077014E-7	TEST
// grrr... for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.9999991024654605	WITHOUT_CLASSIFICATION	4.7055157235797177E-7	IMPLEMENTATION	2.135747965482193E-7	DEFECT	1.7646194308897966E-7	DESIGN	1.8784305749770152E-8	TEST	1.8161921766994196E-8	DOCUMENTATION
// Informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999552660690022	WITHOUT_CLASSIFICATION	3.872981574351473E-5	IMPLEMENTATION	4.141990577160238E-6	DEFECT	1.4609709650137042E-6	DESIGN	3.7806032758263347E-7	DOCUMENTATION	2.309338450954789E-8	TEST
// return false here, as most databases do not properly support this construct...	WITHOUT_CLASSIFICATION	0.6926810134647838	WITHOUT_CLASSIFICATION	0.1747656929976251	IMPLEMENTATION	0.1244727587706291	DESIGN	0.008013173567588473	DEFECT	6.241336921338321E-5	TEST	4.947830160144641E-6	DOCUMENTATION
// Mckoi has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999687254101627	WITHOUT_CLASSIFICATION	1.9680916825626375E-5	DESIGN	7.154595246127422E-6	IMPLEMENTATION	4.085037824051083E-6	DEFECT	3.3637854113489974E-7	DOCUMENTATION	1.7661400357211085E-8	TEST
// Oracle8 and previous define only a "DATE" type which //      is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.9999999991076189	WITHOUT_CLASSIFICATION	6.790715093952085E-10	DESIGN	1.1204214241105768E-10	IMPLEMENTATION	9.501700143529478E-11	DOCUMENTATION	4.042498393105168E-12	TEST	2.2078680783612275E-12	DEFECT
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9992870878702198	WITHOUT_CLASSIFICATION	7.072380166740923E-4	DESIGN	5.325933884967763E-6	TEST	1.3885951628020687E-7	DEFECT	1.2576454876356525E-7	IMPLEMENTATION	8.355515606955662E-8	DOCUMENTATION
//" cascade";	WITHOUT_CLASSIFICATION	0.9999765147195983	WITHOUT_CLASSIFICATION	1.7782039339537372E-5	DESIGN	4.500562505952938E-6	IMPLEMENTATION	6.451677499082991E-7	DOCUMENTATION	3.887438599720704E-7	DEFECT	1.6876694649305257E-7	TEST
//trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.9999991412476378	WITHOUT_CLASSIFICATION	5.504268615273446E-7	DESIGN	2.2536782388485297E-7	IMPLEMENTATION	6.140321932788678E-8	DEFECT	1.4976345654361217E-8	DOCUMENTATION	6.578111838158509E-9	TEST
/*public boolean dropTemporaryTableAfterUse() {	WITHOUT_CLASSIFICATION	0.7457729046012491	DESIGN	0.2542102062410347	WITHOUT_CLASSIFICATION	1.2806435834617017E-5	DEFECT	1.6389297723914443E-6	DOCUMENTATION	1.5785787844625826E-6	TEST	8.652133246990356E-7	IMPLEMENTATION
// CHECK VIOLATION	WITHOUT_CLASSIFICATION	0.9999986586151293	WITHOUT_CLASSIFICATION	1.0084835166355941E-6	DESIGN	1.5292589942114301E-7	IMPLEMENTATION	1.0544203445617796E-7	DEFECT	4.338368843537615E-8	DOCUMENTATION	3.114973180535879E-8	TEST
// UNIQUE VIOLATION	WITHOUT_CLASSIFICATION	0.9999951063600577	WITHOUT_CLASSIFICATION	3.5862338260466653E-6	IMPLEMENTATION	6.12219110084531E-7	DEFECT	5.09132113594219E-7	DESIGN	1.1585703554608678E-7	DOCUMENTATION	7.019785701096945E-8	TEST
// FOREIGN KEY VIOLATION	WITHOUT_CLASSIFICATION	0.9999915695337553	WITHOUT_CLASSIFICATION	4.901805370838009E-6	IMPLEMENTATION	2.752377308902371E-6	DESIGN	3.089656380979248E-7	DEFECT	2.508430169070576E-7	TEST	2.1647490985586835E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999768868836855	WITHOUT_CLASSIFICATION	1.2893156528002596E-5	IMPLEMENTATION	8.840532747346672E-6	DESIGN	7.184171562595811E-7	DEFECT	6.449443063840171E-7	DOCUMENTATION	1.6065576447373514E-8	TEST
// NOT NULL VIOLATION	WITHOUT_CLASSIFICATION	0.9999591077015539	WITHOUT_CLASSIFICATION	2.7971141074885437E-5	DESIGN	1.1097206799188672E-5	IMPLEMENTATION	8.200892292510667E-7	DEFECT	5.732480842620974E-7	DOCUMENTATION	4.306132585861428E-7	TEST
// ALL OTHER	WITHOUT_CLASSIFICATION	0.9999960566159418	WITHOUT_CLASSIFICATION	2.071843020320825E-6	DESIGN	8.641370279083343E-7	DEFECT	7.860856219144852E-7	IMPLEMENTATION	1.3806405039062767E-7	DOCUMENTATION	8.325433777610187E-8	TEST
// Register the type of the out param - PostgreSQL uses Types.OTHER	WITHOUT_CLASSIFICATION	0.999881135500928	WITHOUT_CLASSIFICATION	1.1879823093756559E-4	DESIGN	3.4118631379194714E-8	DEFECT	2.6845349921967896E-8	TEST	4.037503581254505E-9	IMPLEMENTATION	1.2666495500956014E-9	DOCUMENTATION
// seems to not really... //	WITHOUT_CLASSIFICATION	0.9856865438886905	WITHOUT_CLASSIFICATION	0.01239911289844403	DEFECT	0.0019119943125566427	DESIGN	1.3058769692854131E-6	IMPLEMENTATION	5.402747715484029E-7	DOCUMENTATION	5.02748567867929E-7	TEST
// seems to have spotty LOB suppport	WITHOUT_CLASSIFICATION	0.9991608119155114	WITHOUT_CLASSIFICATION	8.307609051845967E-4	DESIGN	6.126248305667366E-6	DEFECT	1.8514959732315694E-6	IMPLEMENTATION	3.605902813025774E-7	DOCUMENTATION	8.884474367755418E-8	TEST
// HHH-2300	WITHOUT_CLASSIFICATION	0.9999570581788002	WITHOUT_CLASSIFICATION	3.6403184227341895E-5	DESIGN	5.215215715126889E-6	DEFECT	6.105300222606383E-7	IMPLEMENTATION	3.859892532900892E-7	DOCUMENTATION	3.2690198170790766E-7	TEST
// ignore (probably H2 not in the classpath)	WITHOUT_CLASSIFICATION	0.9980899722944293	WITHOUT_CLASSIFICATION	0.0018528467700238609	DESIGN	5.69086864127152E-5	DEFECT	2.2557808369408505E-7	DOCUMENTATION	3.628612113282485E-8	IMPLEMENTATION	1.0384929305755477E-8	TEST
// Numeric Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999606739565344	WITHOUT_CLASSIFICATION	3.0129405945045244E-5	IMPLEMENTATION	7.731382052235884E-6	DESIGN	9.572412789053473E-7	DEFECT	3.6573441041531565E-7	DOCUMENTATION	1.4227977892471496E-7	TEST
// String Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999655328203555	WITHOUT_CLASSIFICATION	2.4276505251296885E-5	DESIGN	4.983282524742252E-6	IMPLEMENTATION	4.700522808019736E-6	DEFECT	4.094018345161905E-7	DOCUMENTATION	9.74672259254762E-8	TEST
// Time and Date Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999791712191277	WITHOUT_CLASSIFICATION	9.85302343027432E-6	DESIGN	8.812263642708782E-6	IMPLEMENTATION	1.0896495670359538E-6	DEFECT	9.720760499491949E-7	DOCUMENTATION	1.0176818229132062E-7	TEST
// System Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999008572147748	WITHOUT_CLASSIFICATION	5.5679136790821556E-5	DESIGN	3.280818424746507E-5	IMPLEMENTATION	9.046284040583347E-6	DEFECT	1.0444993650098292E-6	DOCUMENTATION	5.646807812721885E-7	TEST
// not null is implicit	WITHOUT_CLASSIFICATION	0.9933837207005899	WITHOUT_CLASSIFICATION	0.006428626070810764	DESIGN	1.339090445475562E-4	DEFECT	4.795047998173888E-5	IMPLEMENTATION	5.06513326722005E-6	TEST	7.285708029202125E-7	DOCUMENTATION
// 23000: Check constraint violation: {0} // 23001: Unique index or primary key violation: {0}	WITHOUT_CLASSIFICATION	0.9999999828869774	WITHOUT_CLASSIFICATION	1.0991523908103674E-8	DEFECT	5.6328827786452825E-9	IMPLEMENTATION	2.661889113023114E-10	DOCUMENTATION	1.1232283485685141E-10	TEST	1.1010403667154634E-10	DESIGN
// Display the dialect version.	WITHOUT_CLASSIFICATION	0.9985567834556509	WITHOUT_CLASSIFICATION	0.0014078140269347986	IMPLEMENTATION	3.369501630598146E-5	DESIGN	1.4922395223326246E-6	DEFECT	1.7341522711757775E-7	DOCUMENTATION	4.1846358869325304E-8	TEST
// The RDMS concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9998717808494039	WITHOUT_CLASSIFICATION	1.2574826728757788E-4	IMPLEMENTATION	2.097670676834065E-6	DEFECT	3.347916671478608E-7	DESIGN	2.8038181296021618E-8	DOCUMENTATION	1.0382783175786435E-8	TEST
// Dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999939698305246	WITHOUT_CLASSIFICATION	4.403252026033018E-6	IMPLEMENTATION	1.4821221092742996E-6	DESIGN	1.2578793745269122E-7	TEST	1.242235850075458E-8	DEFECT	6.585044057194023E-9	DOCUMENTATION
// Original Dialect.java returns " for update";	WITHOUT_CLASSIFICATION	0.9999991215233938	WITHOUT_CLASSIFICATION	8.623544118100308E-7	DESIGN	1.4663895963343817E-8	DEFECT	7.334377784405175E-10	IMPLEMENTATION	5.873908875789878E-10	DOCUMENTATION	1.374698364983187E-10	TEST
// Verify the state of this new method in Hibernate 3.0 Dialect.java	WITHOUT_CLASSIFICATION	0.9671321513829214	WITHOUT_CLASSIFICATION	0.032852840998944415	DESIGN	1.2876967139564997E-5	DEFECT	1.2959148738570673E-6	TEST	8.16100642689101E-7	DOCUMENTATION	1.8635478018360628E-8	IMPLEMENTATION
// Origial Dialect.java returns true;	WITHOUT_CLASSIFICATION	0.9999943536616975	WITHOUT_CLASSIFICATION	5.536455738136365E-6	DESIGN	1.0242257445241716E-7	DEFECT	3.6791716141157175E-9	IMPLEMENTATION	2.84510116370487E-9	DOCUMENTATION	9.357170404648296E-10	TEST
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999999747091514	WITHOUT_CLASSIFICATION	1.4441509860542433E-8	DESIGN	7.417446610557347E-9	IMPLEMENTATION	2.187440157396946E-9	DEFECT	1.2078294455222412E-9	DOCUMENTATION	3.662267433394228E-11	TEST
// *** Sequence methods - start. The RDMS dialect needs these	WITHOUT_CLASSIFICATION	0.9999730208935972	WITHOUT_CLASSIFICATION	2.258914109450316E-5	DESIGN	2.631951560541925E-6	IMPLEMENTATION	7.430754737408915E-7	DEFECT	7.41622792494576E-7	TEST	2.733154816805255E-7	DOCUMENTATION
// methods to make it possible to use the Native Id generator	WITHOUT_CLASSIFICATION	0.999937190970247	WITHOUT_CLASSIFICATION	5.027670421472298E-5	DESIGN	1.235016792914597E-5	IMPLEMENTATION	1.1089949142613935E-7	DEFECT	6.774163936745185E-8	TEST	3.5164782416937117E-9	DOCUMENTATION
// The where clause was added to eliminate this statement from Brute Force Searches.	WITHOUT_CLASSIFICATION	0.9999035977360968	WITHOUT_CLASSIFICATION	9.624857169477257E-5	DESIGN	7.28340225023417E-8	DOCUMENTATION	6.902185592177207E-8	DEFECT	9.760798766738438E-9	TEST	2.07553120873528E-9	IMPLEMENTATION
// *** Sequence methods - end	WITHOUT_CLASSIFICATION	0.9927834625880195	WITHOUT_CLASSIFICATION	0.007189886896121361	DESIGN	1.1524489071904621E-5	DOCUMENTATION	7.430365184834307E-6	IMPLEMENTATION	5.702276291947611E-6	DEFECT	1.993385310451364E-6	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999768868836855	WITHOUT_CLASSIFICATION	1.2893156528002596E-5	IMPLEMENTATION	8.840532747346672E-6	DESIGN	7.184171562595811E-7	DEFECT	6.449443063840171E-7	DOCUMENTATION	1.6065576447373514E-8	TEST
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9992870878702198	WITHOUT_CLASSIFICATION	7.072380166740923E-4	DESIGN	5.325933884967763E-6	TEST	1.3885951628020687E-7	DEFECT	1.2576454876356525E-7	IMPLEMENTATION	8.355515606955662E-8	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999632660061936	WITHOUT_CLASSIFICATION	3.60907994246474E-5	DESIGN	6.355326946907551E-7	DEFECT	4.0133525239316544E-9	TEST	2.2802707835775204E-9	IMPLEMENTATION	1.3680638215872394E-9	DOCUMENTATION
// Used with DROP TABLE to delete all records in the table.	WITHOUT_CLASSIFICATION	0.9999998614841538	WITHOUT_CLASSIFICATION	1.2654960770240166E-7	IMPLEMENTATION	1.0948194635534378E-8	DESIGN	8.017660132441245E-10	DEFECT	1.593336874336807E-10	DOCUMENTATION	5.694421839295366E-11	TEST
// RDMS supports the UNION ALL clause.	WITHOUT_CLASSIFICATION	0.9999981553092211	WITHOUT_CLASSIFICATION	1.5550336526527558E-6	IMPLEMENTATION	1.7871151019560584E-7	DESIGN	1.0506674378952354E-7	DEFECT	4.5906252562992335E-9	DOCUMENTATION	1.288247133168471E-9	TEST
// RDMS has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999616820848619	WITHOUT_CLASSIFICATION	1.7555769123255678E-5	DEFECT	1.5418358136601867E-5	IMPLEMENTATION	5.0238240318712095E-6	DESIGN	2.9806765503361406E-7	DOCUMENTATION	2.189619150139252E-8	TEST
// Multi-param dialect functions...	WITHOUT_CLASSIFICATION	0.9999193015554236	WITHOUT_CLASSIFICATION	5.470403348263346E-5	DESIGN	1.8287973307827577E-5	DEFECT	7.588260956418609E-6	IMPLEMENTATION	6.589731884968465E-8	TEST	5.2279510599779317E-8	DOCUMENTATION
// function templates	WITHOUT_CLASSIFICATION	0.9999933974360483	WITHOUT_CLASSIFICATION	2.649408658981976E-6	DESIGN	2.5509813922779467E-6	IMPLEMENTATION	9.91731608676289E-7	DEFECT	3.1749115690348534E-7	TEST	9.295113476417979E-8	DOCUMENTATION
//not null is implicit	WITHOUT_CLASSIFICATION	0.9908266655465293	WITHOUT_CLASSIFICATION	0.008964588740093453	DESIGN	1.9689108520550426E-4	DEFECT	7.246807913468396E-6	TEST	3.276556827965654E-6	IMPLEMENTATION	1.3312634302641802E-6	DOCUMENTATION
// this assumes schema support, which is present in 1.8.0 and later...	WITHOUT_CLASSIFICATION	0.9465834548960839	WITHOUT_CLASSIFICATION	0.0516454716397183	DESIGN	0.0017155107270762303	DEFECT	2.9899873073711004E-5	DOCUMENTATION	1.7127035911428488E-5	TEST	8.535828136386315E-6	IMPLEMENTATION
// HSQLDB only supports READ_UNCOMMITTED transaction isolation	WITHOUT_CLASSIFICATION	0.999999064938878	WITHOUT_CLASSIFICATION	6.922451914121598E-7	DESIGN	1.7929310116824566E-7	DEFECT	5.637669170372122E-8	IMPLEMENTATION	6.365764960302489E-9	DOCUMENTATION	7.803728014983901E-10	TEST
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.999847011585069	WITHOUT_CLASSIFICATION	9.714250120703186E-5	DESIGN	5.071671044075589E-5	DEFECT	4.886135572120343E-6	IMPLEMENTATION	1.675288196387127E-7	TEST	7.553889150235264E-8	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9994208389672875	WITHOUT_CLASSIFICATION	4.980702646430481E-4	DESIGN	5.471474575867217E-5	DEFECT	2.5907983221444065E-5	IMPLEMENTATION	3.089231626366964E-7	DOCUMENTATION	1.591159265151287E-7	TEST
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999048342730714	WITHOUT_CLASSIFICATION	6.963006824337023E-5	DESIGN	1.978725750378487E-5	DEFECT	5.640221338132188E-6	IMPLEMENTATION	6.291348807444087E-8	TEST	4.5266355243366026E-8	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999998320279563	WITHOUT_CLASSIFICATION	1.3361731565615217E-7	DESIGN	2.107997168887698E-8	IMPLEMENTATION	1.0583284308496401E-8	DEFECT	1.8782929266623487E-9	TEST	8.131791245248572E-10	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999768868836855	WITHOUT_CLASSIFICATION	1.2893156528002596E-5	IMPLEMENTATION	8.840532747346672E-6	DESIGN	7.184171562595811E-7	DEFECT	6.449443063840171E-7	DOCUMENTATION	1.6065576447373514E-8	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999768868836855	WITHOUT_CLASSIFICATION	1.2893156528002596E-5	IMPLEMENTATION	8.840532747346672E-6	DESIGN	7.184171562595811E-7	DEFECT	6.449443063840171E-7	DOCUMENTATION	1.6065576447373514E-8	TEST
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9828158604898392	WITHOUT_CLASSIFICATION	0.017177851215436857	DESIGN	6.215758752501278E-6	DEFECT	4.6113551669097223E-8	IMPLEMENTATION	1.959079819864431E-8	DOCUMENTATION	6.831621700236264E-9	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// TimesTen has no BLOB/CLOB support, but these types may be suitable  // for some applications. The length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.9999659330388196	WITHOUT_CLASSIFICATION	3.2993784640915345E-5	IMPLEMENTATION	3.973868132797986E-7	DESIGN	3.742392377052032E-7	DEFECT	1.8945675319202587E-7	TEST	1.1209373537858314E-7	DOCUMENTATION
// new methods in dialect3	WITHOUT_CLASSIFICATION	0.9992349657956495	WITHOUT_CLASSIFICATION	7.584898925443289E-4	DESIGN	3.372322490052737E-6	DEFECT	2.6133675433533215E-6	IMPLEMENTATION	2.8632637406592576E-7	TEST	2.722953986686815E-7	DOCUMENTATION
/*public boolean supportsForUpdateNowait() {	WITHOUT_CLASSIFICATION	0.9977174566415091	WITHOUT_CLASSIFICATION	0.00224376962912823	DESIGN	2.7904487803104878E-5	IMPLEMENTATION	8.701536238154575E-6	DEFECT	1.221061765876679E-6	DOCUMENTATION	9.466435554420397E-7	TEST
// TimesTen has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999258849932369	WITHOUT_CLASSIFICATION	6.671823158347387E-5	IMPLEMENTATION	6.220267232830848E-6	DEFECT	7.240034432912746E-7	DESIGN	3.6967226034319445E-7	DOCUMENTATION	8.283224312311697E-8	TEST
// iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.9999999874781847	WITHOUT_CLASSIFICATION	9.896364835787043E-9	DESIGN	1.2105619024026462E-9	TEST	1.1867755525951598E-9	IMPLEMENTATION	2.0832595049495287E-10	DEFECT	1.9787271050373252E-11	DOCUMENTATION
// add new ordered map	WITHOUT_CLASSIFICATION	0.9999992811862836	WITHOUT_CLASSIFICATION	5.376408562395805E-7	IMPLEMENTATION	1.213418479873217E-7	DESIGN	3.531218145611859E-8	DEFECT	1.396166881853312E-8	DOCUMENTATION	1.0557161948324216E-8	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999768868836855	WITHOUT_CLASSIFICATION	1.2893156528002596E-5	IMPLEMENTATION	8.840532747346672E-6	DESIGN	7.184171562595811E-7	DEFECT	6.449443063840171E-7	DOCUMENTATION	1.6065576447373514E-8	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999964603815229	WITHOUT_CLASSIFICATION	1.9508543021676904E-6	DESIGN	1.5861818507605784E-6	IMPLEMENTATION	1.7605156511978623E-9	DEFECT	5.134091777150335E-10	DOCUMENTATION	3.083993501635103E-10	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
//registerColumnType data types	WITHOUT_CLASSIFICATION	0.9998621755185556	WITHOUT_CLASSIFICATION	1.374924391348444E-4	DESIGN	1.6291783133304004E-7	DEFECT	9.313930318813482E-8	IMPLEMENTATION	5.991688881983248E-8	TEST	1.6068286081709312E-8	DOCUMENTATION
// hibernate seems to ignore this type...	WITHOUT_CLASSIFICATION	0.9936648643639272	WITHOUT_CLASSIFICATION	0.0062990793851616655	DESIGN	2.9329431400106806E-5	DEFECT	4.943936979174769E-6	IMPLEMENTATION	1.0543484230749878E-6	DOCUMENTATION	7.285341088351254E-7	TEST
// IBID for current_time and current_date	WITHOUT_CLASSIFICATION	0.9999897198119201	WITHOUT_CLASSIFICATION	7.661964736428261E-6	IMPLEMENTATION	1.4582647045739634E-6	DEFECT	6.237506214164826E-7	DESIGN	5.045495227740993E-7	DOCUMENTATION	3.165849463194299E-8	TEST
// Tell hibernate to use getBytes instead of getBinaryStream	WITHOUT_CLASSIFICATION	0.9997967894711857	WITHOUT_CLASSIFICATION	2.0221212120081672E-4	DESIGN	7.409936489070281E-7	DEFECT	1.374710898188402E-7	TEST	9.694873621904019E-8	IMPLEMENTATION	2.2994138638612435E-8	DOCUMENTATION
// No batch statements	WITHOUT_CLASSIFICATION	0.9999989574913876	WITHOUT_CLASSIFICATION	6.723778382346291E-7	DESIGN	1.9088357418900004E-7	IMPLEMENTATION	8.322832199820973E-8	DOCUMENTATION	4.942094297274575E-8	TEST	4.6597935110292326E-8	DEFECT
/*	WITHOUT_CLASSIFICATION	0.9331219898232908	WITHOUT_CLASSIFICATION	0.057754742574077686	DESIGN	0.005971504224407717	DEFECT	0.0028843765675326	IMPLEMENTATION	1.6082825785869253E-4	DOCUMENTATION	1.0655855283237827E-4	TEST
//no pointbase BIT	WITHOUT_CLASSIFICATION	0.9999903598739294	WITHOUT_CLASSIFICATION	3.735635549123871E-6	IMPLEMENTATION	3.5939246506524596E-6	DEFECT	1.4442762820314887E-6	DESIGN	8.30589248817819E-7	DOCUMENTATION	3.570033994188949E-8	TEST
//no pointbase TINYINT	WITHOUT_CLASSIFICATION	0.9999975755125563	WITHOUT_CLASSIFICATION	9.949487174483303E-7	IMPLEMENTATION	8.418569385465283E-7	DESIGN	3.4616678416061573E-7	DOCUMENTATION	2.202499876145899E-7	DEFECT	2.1265016025771445E-8	TEST
// Pointbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999871762367467	WITHOUT_CLASSIFICATION	6.354490036700418E-6	IMPLEMENTATION	3.6192486402077935E-6	DEFECT	2.626919194571374E-6	DESIGN	2.1400098928292568E-7	DOCUMENTATION	9.104392538018714E-9	TEST
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9992870878702198	WITHOUT_CLASSIFICATION	7.072380166740923E-4	DESIGN	5.325933884967763E-6	TEST	1.3885951628020687E-7	DEFECT	1.2576454876356525E-7	IMPLEMENTATION	8.355515606955662E-8	DOCUMENTATION
// The current_timestamp is more accurate, but only known to be supported // in SQL Server 7.0 and later (i.e., Sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.9049769023351091	WITHOUT_CLASSIFICATION	0.0718848340688974	DESIGN	0.023027810860225918	DEFECT	9.142425430479162E-5	IMPLEMENTATION	1.1710119584201785E-5	TEST	7.318361878683375E-6	DOCUMENTATION
// SQL Server (at least up through 2005) does not support defining // cascade delete constraints which can circel back to the mutating // table	WITHOUT_CLASSIFICATION	0.9999986192997904	WITHOUT_CLASSIFICATION	1.3748346796431964E-6	DESIGN	2.5741601565766924E-9	TEST	2.4143043277468343E-9	DEFECT	5.199727817614238E-10	IMPLEMENTATION	3.5709269112074664E-10	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.990906082293557	WITHOUT_CLASSIFICATION	0.008128514080556273	DEFECT	9.232742856673208E-4	DESIGN	3.933763349040623E-5	TEST	2.769023474113928E-6	DOCUMENTATION	2.26832548786487E-8	IMPLEMENTATION
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9992870878702198	WITHOUT_CLASSIFICATION	7.072380166740923E-4	DESIGN	5.325933884967763E-6	TEST	1.3885951628020687E-7	DEFECT	1.2576454876356525E-7	IMPLEMENTATION	8.355515606955662E-8	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999871067426811	WITHOUT_CLASSIFICATION	1.2745280853464567E-5	DESIGN	7.615002366132945E-8	DEFECT	5.4310158137559605E-8	DOCUMENTATION	9.275534529496071E-9	IMPLEMENTATION	8.240749023766833E-9	TEST
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999964603815229	WITHOUT_CLASSIFICATION	1.9508543021676904E-6	DESIGN	1.5861818507605784E-6	IMPLEMENTATION	1.7605156511978623E-9	DEFECT	5.134091777150335E-10	DOCUMENTATION	3.083993501635103E-10	TEST
//Sybase BIT type does not support null values	WITHOUT_CLASSIFICATION	0.9779994872606609	WITHOUT_CLASSIFICATION	0.020804237640213132	DESIGN	0.001184066739127933	DEFECT	6.7195315173100146E-6	IMPLEMENTATION	2.9079078226324866E-6	TEST	2.5809206581469982E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999768868836855	WITHOUT_CLASSIFICATION	1.2893156528002596E-5	IMPLEMENTATION	8.840532747346672E-6	DESIGN	7.184171562595811E-7	DEFECT	6.449443063840171E-7	DOCUMENTATION	1.6065576447373514E-8	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
//not null ... (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.866284388533958	WITHOUT_CLASSIFICATION	0.1315803523712296	DESIGN	0.0017602186759934416	DEFECT	3.3267543158184757E-4	TEST	4.027419638932444E-5	IMPLEMENTATION	2.090790847938912E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999768868836855	WITHOUT_CLASSIFICATION	1.2893156528002596E-5	IMPLEMENTATION	8.840532747346672E-6	DESIGN	7.184171562595811E-7	DEFECT	6.449443063840171E-7	DOCUMENTATION	1.6065576447373514E-8	TEST
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.6549255579506303	WITHOUT_CLASSIFICATION	0.3450585430554648	DESIGN	1.5388999810522227E-5	DEFECT	3.168035131594669E-7	TEST	1.86159417232627E-7	IMPLEMENTATION	7.03116394326516E-9	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.999847011585069	WITHOUT_CLASSIFICATION	9.714250120703186E-5	DESIGN	5.071671044075589E-5	DEFECT	4.886135572120343E-6	IMPLEMENTATION	1.675288196387127E-7	TEST	7.553889150235264E-8	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9994208389672875	WITHOUT_CLASSIFICATION	4.980702646430481E-4	DESIGN	5.471474575867217E-5	DEFECT	2.5907983221444065E-5	IMPLEMENTATION	3.089231626366964E-7	DOCUMENTATION	1.591159265151287E-7	TEST
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999048342730714	WITHOUT_CLASSIFICATION	6.963006824337023E-5	DESIGN	1.978725750378487E-5	DEFECT	5.640221338132188E-6	IMPLEMENTATION	6.291348807444087E-8	TEST	4.5266355243366026E-8	DOCUMENTATION
// add another (inner) nested select // add the main query // close off the inner nested select	WITHOUT_CLASSIFICATION	0.9999999893902048	WITHOUT_CLASSIFICATION	6.622977974165055E-9	TEST	2.564908704963948E-9	DEFECT	8.127593682654571E-10	DOCUMENTATION	4.984502440792582E-10	DESIGN	1.1069897807645422E-10	IMPLEMENTATION
// add the main query	WITHOUT_CLASSIFICATION	0.9999778287928072	WITHOUT_CLASSIFICATION	1.9264095194238818E-5	DESIGN	1.8445399469331452E-6	IMPLEMENTATION	7.304656435752103E-7	DOCUMENTATION	1.990371322841872E-7	DEFECT	1.330692756837315E-7	TEST
//add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.9999978535367902	WITHOUT_CLASSIFICATION	1.8577243768712203E-6	DESIGN	1.0154423657585552E-7	IMPLEMENTATION	7.777580342412653E-8	DOCUMENTATION	7.327356236390507E-8	DEFECT	3.614523054658834E-8	TEST
// This assumes you will want to ignore any update counts 	WITHOUT_CLASSIFICATION	0.9999994997476389	WITHOUT_CLASSIFICATION	4.873134423856355E-7	DEFECT	9.04491332649267E-9	DESIGN	1.7877234138064296E-9	IMPLEMENTATION	1.3253403021185342E-9	TEST	7.809416332744815E-10	DOCUMENTATION
// You may still have other ResultSets or update counts left to process here  // but you can't do it now or the ResultSet you just got will be closed 	WITHOUT_CLASSIFICATION	0.9999998913354415	WITHOUT_CLASSIFICATION	1.0765657024769529E-7	DEFECT	9.532561036577003E-10	DESIGN	4.182388899115329E-11	IMPLEMENTATION	9.682683078045593E-12	TEST	3.22553772170222E-12	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999768868836855	WITHOUT_CLASSIFICATION	1.2893156528002596E-5	IMPLEMENTATION	8.840532747346672E-6	DESIGN	7.184171562595811E-7	DEFECT	6.449443063840171E-7	DOCUMENTATION	1.6065576447373514E-8	TEST
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9992870878702198	WITHOUT_CLASSIFICATION	7.072380166740923E-4	DESIGN	5.325933884967763E-6	TEST	1.3885951628020687E-7	DEFECT	1.2576454876356525E-7	IMPLEMENTATION	8.355515606955662E-8	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999998320279563	WITHOUT_CLASSIFICATION	1.3361731565615217E-7	DESIGN	2.107997168887698E-8	IMPLEMENTATION	1.0583284308496401E-8	DEFECT	1.8782929266623487E-9	TEST	8.131791245248572E-10	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9828158604898392	WITHOUT_CLASSIFICATION	0.017177851215436857	DESIGN	6.215758752501278E-6	DEFECT	4.6113551669097223E-8	IMPLEMENTATION	1.959079819864431E-8	DOCUMENTATION	6.831621700236264E-9	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// features which change between 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998876207531217	WITHOUT_CLASSIFICATION	1.1145554034340661E-4	DESIGN	6.9893375176745E-7	DEFECT	1.1840164589069211E-7	IMPLEMENTATION	7.903379773891035E-8	DOCUMENTATION	2.7337339606663076E-8	TEST
// features which remain constant across 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999977502788887	WITHOUT_CLASSIFICATION	1.2964437493154395E-6	DEFECT	9.391051096658105E-7	DESIGN	1.1505530558213765E-8	DOCUMENTATION	1.814237582326867E-9	TEST	8.52484095795933E-10	IMPLEMENTATION
// binary %Stream // character %Stream	WITHOUT_CLASSIFICATION	0.9999999873192674	WITHOUT_CLASSIFICATION	8.57898537307935E-9	DESIGN	3.2963681367952354E-9	DEFECT	4.696007941531191E-10	TEST	1.722734003888449E-10	DOCUMENTATION	1.635050608859455E-10	IMPLEMENTATION
//getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE, NO_BATCH);	WITHOUT_CLASSIFICATION	0.9999999699135522	WITHOUT_CLASSIFICATION	1.7340733334008077E-8	DESIGN	4.555439274071667E-9	DOCUMENTATION	3.3353813845335834E-9	DEFECT	2.506704415593619E-9	IMPLEMENTATION	2.348189421094909E-9	TEST
// hibernate impelemnts cast in Dialect.java	WITHOUT_CLASSIFICATION	0.9996402411479871	WITHOUT_CLASSIFICATION	3.58528938256551E-4	DESIGN	6.479364966922413E-7	DEFECT	5.374549641465082E-7	TEST	3.258951580760709E-8	DOCUMENTATION	1.1932779780794535E-8	IMPLEMENTATION
// aggregate functions shouldn't be registered, right? //registerFunction( "list", new StandardSQLFunction("list",Hibernate.STRING) ); // stopped on $list	WITHOUT_CLASSIFICATION	0.9967243089743412	WITHOUT_CLASSIFICATION	0.003275597823574836	DESIGN	8.015765011975565E-8	DEFECT	1.1570163816702383E-8	IMPLEMENTATION	1.2146861283032042E-9	TEST	2.595839352935055E-10	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999079322831168	WITHOUT_CLASSIFICATION	7.948959579676542E-5	IMPLEMENTATION	1.0588208588811784E-5	DESIGN	1.1489164707653668E-6	DEFECT	4.3977523025645033E-7	DOCUMENTATION	4.0122079668077014E-7	TEST
// below is for Cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.993882226081823	WITHOUT_CLASSIFICATION	0.006112201648425371	DESIGN	5.232438888408103E-6	DEFECT	1.9491209579718574E-7	TEST	8.34580774969695E-8	IMPLEMENTATION	6.146069008629667E-8	DOCUMENTATION
// note that %string is deprecated	WITHOUT_CLASSIFICATION	0.9953673325016105	WITHOUT_CLASSIFICATION	0.0035633302735941595	DESIGN	0.001057061426437073	IMPLEMENTATION	9.730158213843512E-6	TEST	1.6931252234744817E-6	DEFECT	8.52514921042972E-7	DOCUMENTATION
// %upper is deprecated	WITHOUT_CLASSIFICATION	0.9995097631452875	WITHOUT_CLASSIFICATION	4.889813625921836E-4	DESIGN	5.765441322819251E-7	DEFECT	4.2582617937341845E-7	IMPLEMENTATION	1.7827977170543047E-7	TEST	7.484203702828241E-8	DOCUMENTATION
// The syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.9999999753288454	WITHOUT_CLASSIFICATION	1.73769284275118E-8	DESIGN	3.0189379770519006E-9	DEFECT	2.9456700664741227E-9	IMPLEMENTATION	1.0489190990830813E-9	DOCUMENTATION	2.8069897343985403E-10	TEST
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999999779098987	WITHOUT_CLASSIFICATION	1.4047072039852735E-8	DESIGN	6.754468814118934E-9	IMPLEMENTATION	5.039559860308077E-10	DOCUMENTATION	4.701211580685303E-10	DEFECT	3.1448332290803217E-10	TEST
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999309563190932	WITHOUT_CLASSIFICATION	6.486603070017742E-5	IMPLEMENTATION	3.45096197222286E-6	DESIGN	3.141044240031096E-7	DEFECT	2.6942828187629424E-7	TEST	1.4315552842201473E-7	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998546810198465	WITHOUT_CLASSIFICATION	7.268197139504031E-5	IMPLEMENTATION	7.038840782266071E-5	DESIGN	1.1690950349194834E-6	DEFECT	5.400783397498443E-7	DOCUMENTATION	5.394275610503547E-7	TEST
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999699201832765	WITHOUT_CLASSIFICATION	2.822827611028092E-5	DESIGN	1.6625605381850318E-6	IMPLEMENTATION	1.591818342832951E-7	TEST	2.3213785211548265E-8	DEFECT	6.584455540565858E-9	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999999779098987	WITHOUT_CLASSIFICATION	1.4047072039852735E-8	DESIGN	6.754468814118934E-9	IMPLEMENTATION	5.039559860308077E-10	DOCUMENTATION	4.701211580685303E-10	DEFECT	3.1448332290803217E-10	TEST
// The syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.9999829774022275	WITHOUT_CLASSIFICATION	1.685251308268561E-5	DESIGN	6.765998955732293E-8	DEFECT	6.506997286752854E-8	IMPLEMENTATION	3.415791336543144E-8	DOCUMENTATION	3.1968140259041327E-9	TEST
// Completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.9999970538690739	WITHOUT_CLASSIFICATION	1.5386959283452098E-6	DEFECT	7.141405932873278E-7	DESIGN	6.73312294513791E-7	IMPLEMENTATION	1.5951108789020938E-8	DOCUMENTATION	4.031001275353775E-9	TEST
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998335178037236	WITHOUT_CLASSIFICATION	7.505067852000314E-5	IMPLEMENTATION	5.443537018698135E-5	DEFECT	3.5527119275902124E-5	DESIGN	1.2643961882063652E-6	DOCUMENTATION	2.0463210521136464E-7	TEST
// LIMIT support (ala TOP) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999864362315727	WITHOUT_CLASSIFICATION	9.777422333126571E-6	IMPLEMENTATION	2.9938370522092173E-6	DESIGN	6.428935380113665E-7	DEFECT	9.271568577048416E-8	DOCUMENTATION	5.689981827742671E-8	TEST
// InterSystems Cache' does not current support "SELECT ... FOR UPDATE" syntax... // Set your transaction mode to READ_COMMITTED before using	WITHOUT_CLASSIFICATION	0.9999719903869688	WITHOUT_CLASSIFICATION	1.6480323203838806E-5	DESIGN	9.931893038571407E-6	DEFECT	1.5200025364648698E-6	IMPLEMENTATION	4.042778056023046E-8	DOCUMENTATION	3.696647166278077E-8	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999768868836855	WITHOUT_CLASSIFICATION	1.2893156528002596E-5	IMPLEMENTATION	8.840532747346672E-6	DESIGN	7.184171562595811E-7	DEFECT	6.449443063840171E-7	DOCUMENTATION	1.6065576447373514E-8	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999768868836855	WITHOUT_CLASSIFICATION	1.2893156528002596E-5	IMPLEMENTATION	8.840532747346672E-6	DESIGN	7.184171562595811E-7	DEFECT	6.449443063840171E-7	DOCUMENTATION	1.6065576447373514E-8	TEST
/*<String>*/	WITHOUT_CLASSIFICATION	0.9992123628253985	WITHOUT_CLASSIFICATION	6.335745436126921E-4	DESIGN	1.0762210094541066E-4	DEFECT	2.7653415790318795E-5	IMPLEMENTATION	1.3678057269651424E-5	DOCUMENTATION	5.1090569833763124E-6	TEST
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998647469423305	WITHOUT_CLASSIFICATION	7.390038755607808E-5	IMPLEMENTATION	5.947142002235257E-5	DESIGN	1.5959646836024771E-6	DEFECT	1.4749717100460188E-7	DOCUMENTATION	1.3778823641110829E-7	TEST
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999927356326425	WITHOUT_CLASSIFICATION	4.231590397987374E-6	DESIGN	2.937803591007411E-6	IMPLEMENTATION	4.5298775925952825E-8	DEFECT	2.727114788512926E-8	TEST	2.2403444589009656E-8	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999999747091514	WITHOUT_CLASSIFICATION	1.4441509860542433E-8	DESIGN	7.417446610557347E-9	IMPLEMENTATION	2.187440157396946E-9	DEFECT	1.2078294455222412E-9	DOCUMENTATION	3.662267433394228E-11	TEST
// Does the LIMIT clause come at the start of the SELECT statement, rather than at the end?	WITHOUT_CLASSIFICATION	0.9962841622185151	WITHOUT_CLASSIFICATION	0.0037017231492209117	DESIGN	6.384705778039179E-6	DEFECT	4.785046404822715E-6	DOCUMENTATION	2.463556072919624E-6	TEST	4.813240082860077E-7	IMPLEMENTATION
// Does the LIMIT clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.9999697168731665	WITHOUT_CLASSIFICATION	2.8351336973702445E-5	DESIGN	1.862463292597433E-6	DEFECT	3.185503048830344E-8	IMPLEMENTATION	3.065405344751075E-8	DOCUMENTATION	6.8174833562404385E-9	TEST
// The name of the SQL function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.999998991227929	WITHOUT_CLASSIFICATION	9.096152748630035E-7	DESIGN	7.538956266647563E-8	DEFECT	2.1361192628464566E-8	IMPLEMENTATION	2.0394544926022337E-9	DOCUMENTATION	3.665864050411706E-10	TEST
// Create an OuterJoinGenerator for this dialect.	WITHOUT_CLASSIFICATION	0.9999766342730824	WITHOUT_CLASSIFICATION	2.328038095958213E-5	DESIGN	7.866545855599288E-8	TEST	3.2821779284784666E-9	DEFECT	2.8613064905443918E-9	DOCUMENTATION	5.370149392893335E-10	IMPLEMENTATION
// The keyword used to insert a row without specifying // any column values	WITHOUT_CLASSIFICATION	0.9999993986914149	WITHOUT_CLASSIFICATION	5.491727453349954E-7	DEFECT	2.087503058383242E-8	DESIGN	1.6200491608451087E-8	IMPLEMENTATION	1.0703550240896276E-8	TEST	4.356767371143244E-9	DOCUMENTATION
//registerFunction( "trim", new StandardSQLFunction( "trim", Hibernate.STRING ) );	WITHOUT_CLASSIFICATION	0.9999999391520122	WITHOUT_CLASSIFICATION	3.641687938126148E-8	IMPLEMENTATION	2.3558290119165748E-8	DESIGN	4.782796646185999E-10	DEFECT	2.6085576920483484E-10	DOCUMENTATION	1.3368284380790166E-10	TEST
//skip the FROM keyword in params	WITHOUT_CLASSIFICATION	0.9999907699632742	WITHOUT_CLASSIFICATION	6.579681867693575E-6	IMPLEMENTATION	1.4137201563190305E-6	DEFECT	7.728751108143752E-7	DESIGN	3.0116979794819345E-7	DOCUMENTATION	1.6258979319889664E-7	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.998408487020651	WITHOUT_CLASSIFICATION	0.0015341255124436755	DESIGN	3.866327223773271E-5	IMPLEMENTATION	9.233353585650128E-6	DEFECT	7.327886436100033E-6	DOCUMENTATION	2.1629546457955846E-6	TEST
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999999999918094	WITHOUT_CLASSIFICATION	3.357036102810952E-12	IMPLEMENTATION	3.1377453956452154E-12	DESIGN	1.579783718515548E-12	DOCUMENTATION	9.022706702879445E-14	DEFECT	2.5762414207207106E-14	TEST
// SQLFunction implementation	WITHOUT_CLASSIFICATION	0.9999162801238105	WITHOUT_CLASSIFICATION	7.656601017745375E-5	IMPLEMENTATION	3.865217674040192E-6	DESIGN	2.9329930097243937E-6	DEFECT	3.3243539957175477E-7	DOCUMENTATION	2.321992862464523E-8	TEST
// conceivable that the dialect ctor could throw HibernateExceptions, so don't re-wrap	WITHOUT_CLASSIFICATION	0.9999861831229564	WITHOUT_CLASSIFICATION	1.3802234552370647E-5	DESIGN	7.088325927834601E-9	IMPLEMENTATION	4.907815494667083E-9	DEFECT	2.2766721644322114E-9	TEST	3.6967768081861765E-10	DOCUMENTATION
// register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.9999876736548357	WITHOUT_CLASSIFICATION	7.89003711951315E-6	IMPLEMENTATION	4.118253585828429E-6	DESIGN	2.8862042142355283E-7	DEFECT	2.2951564492707276E-8	TEST	6.4824731238157714E-9	DOCUMENTATION
// register resolvers set via Environment property	WITHOUT_CLASSIFICATION	0.999999009501963	WITHOUT_CLASSIFICATION	9.599843882739237E-7	DESIGN	1.6959542105221686E-8	DEFECT	1.020349279894684E-8	TEST	2.0708480447190696E-9	DOCUMENTATION	1.2797660265296418E-9	IMPLEMENTATION
// kept for backward compatibility until after the 3.1beta5 release of HA	WITHOUT_CLASSIFICATION	0.9999978451548097	WITHOUT_CLASSIFICATION	1.7210587888656994E-6	IMPLEMENTATION	4.166455071946032E-7	DESIGN	1.1557254483207215E-8	DEFECT	4.048730666004213E-9	TEST	1.5349091564756804E-9	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9997675657984075	WITHOUT_CLASSIFICATION	2.0573424906007208E-4	DESIGN	2.405545562095116E-5	IMPLEMENTATION	1.374474395865829E-6	DOCUMENTATION	7.18861959687705E-7	DEFECT	5.511605559197458E-7	TEST
// the CascadingAction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999958475453681	WITHOUT_CLASSIFICATION	3.6413987631999625E-5	IMPLEMENTATION	2.950731420469182E-6	DESIGN	1.581343240739842E-6	DOCUMENTATION	4.4019808235077616E-7	DEFECT	1.3828594353773201E-7	TEST
// the CascadingAction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9972070716832084	WITHOUT_CLASSIFICATION	0.0027733159086410406	IMPLEMENTATION	1.2850871374683244E-5	DEFECT	5.5700520415740565E-6	DESIGN	8.20137133462701E-7	DOCUMENTATION	3.713476008784778E-7	TEST
// delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999999133704489	WITHOUT_CLASSIFICATION	5.991066720176396E-8	IMPLEMENTATION	1.3481395818936185E-8	DESIGN	5.984949163691154E-9	TEST	5.402508972383217E-9	DEFECT	1.850029838918113E-9	DOCUMENTATION
// orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.9999618063569	WITHOUT_CLASSIFICATION	2.814642613325723E-5	DESIGN	8.925920309471771E-6	DEFECT	9.936074690694635E-7	IMPLEMENTATION	1.1543166505635489E-7	TEST	1.2257523280318296E-8	DOCUMENTATION
/*(LockMode) anything*/	WITHOUT_CLASSIFICATION	0.9996863599717181	WITHOUT_CLASSIFICATION	1.381365386553156E-4	DESIGN	8.877843679805361E-5	DEFECT	8.082441207754422E-5	DOCUMENTATION	3.4897463508293084E-6	IMPLEMENTATION	2.4108944000716057E-6	TEST
// lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999560503109685	WITHOUT_CLASSIFICATION	4.252534402076056E-5	IMPLEMENTATION	6.47166667559431E-7	DEFECT	2.8681341119799194E-7	DOCUMENTATION	2.8610201992651356E-7	DESIGN	2.0426291210285683E-7	TEST
// refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999952253430692	WITHOUT_CLASSIFICATION	4.6673470888545435E-6	IMPLEMENTATION	6.942686198305233E-8	DESIGN	1.6157619579788556E-8	TEST	1.3294161800870867E-8	DEFECT	8.431198475586335E-9	DOCUMENTATION
// evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999994347008061	WITHOUT_CLASSIFICATION	2.5429363960163893E-7	IMPLEMENTATION	2.511556341307751E-7	DESIGN	4.24714775209302E-8	DEFECT	1.0434136171756765E-8	DOCUMENTATION	6.944306551348203E-9	TEST
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999993249669498	WITHOUT_CLASSIFICATION	5.87884500463294E-7	IMPLEMENTATION	4.071603039042284E-8	DEFECT	3.290370834460796E-8	DESIGN	9.01681068835994E-9	TEST	4.5120004160923326E-9	DOCUMENTATION
// orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.9999960250233499	WITHOUT_CLASSIFICATION	2.4440691005771604E-6	DESIGN	1.3003099833455604E-6	DEFECT	2.1458863268197228E-7	IMPLEMENTATION	1.342798226666343E-8	TEST	2.5809512129837754E-9	DOCUMENTATION
// for deprecated saveOrUpdateCopy()	WITHOUT_CLASSIFICATION	0.9999977531568526	WITHOUT_CLASSIFICATION	1.5153509351864965E-6	DESIGN	5.715130706691207E-7	IMPLEMENTATION	8.57445380809994E-8	DOCUMENTATION	5.9305023642443446E-8	DEFECT	1.4929579733744604E-8	TEST
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999994344278235	WITHOUT_CLASSIFICATION	3.458058652935925E-7	IMPLEMENTATION	1.7675076000571998E-7	DESIGN	3.6122010833786504E-8	DEFECT	4.6909066583746045E-9	TEST	2.2026337940828903E-9	DOCUMENTATION
//a proxy cannot be transient and it breaks ForeignKeys.isTransient	WITHOUT_CLASSIFICATION	0.9999659791770044	WITHOUT_CLASSIFICATION	1.895870201161842E-5	DEFECT	1.4434397899945444E-5	DESIGN	5.469328574001383E-7	IMPLEMENTATION	6.564838412382581E-8	DOCUMENTATION	1.51418426198132E-8	TEST
// replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999983635482492	WITHOUT_CLASSIFICATION	1.4937848230258342E-6	DESIGN	1.1597319029733055E-7	IMPLEMENTATION	1.79123297257256E-8	TEST	4.691137545905202E-9	DOCUMENTATION	4.090270134343378E-9	DEFECT
// static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999504596742674	WITHOUT_CLASSIFICATION	4.864283124160101E-5	DESIGN	7.05213000298914E-7	IMPLEMENTATION	1.4362273234607053E-7	DEFECT	3.490140794506234E-8	TEST	1.375735033422725E-8	DOCUMENTATION
// handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.9973866861250704	WITHOUT_CLASSIFICATION	0.002608590216301014	DESIGN	4.1828042877048474E-6	DEFECT	3.5829707244971673E-7	IMPLEMENTATION	1.1311843426254723E-7	TEST	6.943883394857848E-8	DOCUMENTATION
// Actually the semantics of the next three are really "Bag" // Note that, unlike objects, collection insertions, updates, // deletions are not really remembered between flushes. We // just re-use the same Lists for convenience.	WITHOUT_CLASSIFICATION	0.9999986404897319	WITHOUT_CLASSIFICATION	1.1413617198971226E-6	IMPLEMENTATION	1.3577587440230357E-7	DEFECT	5.40352840486719E-8	TEST	2.412301141833006E-8	DESIGN	4.21437833209826E-9	DOCUMENTATION
// Add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.9999977725520118	WITHOUT_CLASSIFICATION	1.9422171069523723E-6	DESIGN	1.3044211002590327E-7	DOCUMENTATION	1.0654785441443646E-7	DEFECT	4.304925554883851E-8	IMPLEMENTATION	5.191661378271958E-9	TEST
// continue loop	WITHOUT_CLASSIFICATION	0.999985536675018	WITHOUT_CLASSIFICATION	1.2481993892105057E-5	DEFECT	1.8473517736733884E-6	DESIGN	7.655935849438354E-8	IMPLEMENTATION	5.118308251798414E-8	DOCUMENTATION	6.236875227997977E-9	TEST
//sort the updates by fk	WITHOUT_CLASSIFICATION	0.9996829153541138	WITHOUT_CLASSIFICATION	2.0845574831886683E-4	IMPLEMENTATION	6.61162893698605E-5	DESIGN	2.077789546852858E-5	TEST	2.0102850454364472E-5	DEFECT	1.6318622747041596E-6	DOCUMENTATION
//sort the updates by pk	WITHOUT_CLASSIFICATION	0.9997960579551302	WITHOUT_CLASSIFICATION	1.512884598156677E-4	IMPLEMENTATION	3.781397654040116E-5	DESIGN	9.407450763455106E-6	TEST	4.34725936917349E-6	DEFECT	1.0848983812738482E-6	DOCUMENTATION
// the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.9999971691799325	WITHOUT_CLASSIFICATION	2.091006868518181E-6	TEST	2.9016933783802215E-7	DESIGN	2.869438274246188E-7	IMPLEMENTATION	1.484999745052429E-7	DEFECT	1.4200059226795375E-8	DOCUMENTATION
// the map of batch numbers to EntityInsertAction lists	WITHOUT_CLASSIFICATION	0.999997186563672	WITHOUT_CLASSIFICATION	1.6299793449405055E-6	DESIGN	8.872058853389134E-7	DEFECT	2.7672081068160856E-7	IMPLEMENTATION	1.0307698096233516E-8	DOCUMENTATION	9.222589053597236E-9	TEST
//optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.9998243314094694	WITHOUT_CLASSIFICATION	1.71692141692401E-4	DESIGN	3.7158499834282516E-6	IMPLEMENTATION	1.2766747916539842E-7	DEFECT	8.122541529803784E-8	DOCUMENTATION	5.170596031123855E-8	TEST
// the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.9999635392250985	WITHOUT_CLASSIFICATION	3.534145481314748E-5	DESIGN	9.934447642284376E-7	IMPLEMENTATION	7.64880940880581E-8	TEST	3.054078936250642E-8	DEFECT	1.8846440734888978E-8	DOCUMENTATION
// remove the current element from insertions. It will be added back later.	WITHOUT_CLASSIFICATION	0.9994864540410018	WITHOUT_CLASSIFICATION	4.574851233944055E-4	DESIGN	5.603148268489746E-5	DEFECT	1.7627100329176212E-8	DOCUMENTATION	6.065135505364303E-9	TEST	5.660682963343271E-9	IMPLEMENTATION
// the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.9936070119432356	WITHOUT_CLASSIFICATION	0.0059417767238509386	IMPLEMENTATION	4.0177436467155774E-4	DESIGN	2.3402645199310977E-5	DOCUMENTATION	2.336513019750909E-5	TEST	2.6691928450960603E-6	DEFECT
// There is already an existing batch for this type of entity. // Check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.9999977986756341	WITHOUT_CLASSIFICATION	2.102560643872693E-6	DESIGN	9.769930597960774E-8	TEST	6.246722682649484E-10	DOCUMENTATION	4.2547510868299864E-10	DEFECT	1.4268631100217918E-11	IMPLEMENTATION
// now rebuild the insertions list. There is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.9999716493150506	WITHOUT_CLASSIFICATION	2.824621958588737E-5	DESIGN	7.613139940609638E-8	DEFECT	2.38952297813317E-8	IMPLEMENTATION	2.599545977626643E-9	TEST	1.8391883894365514E-9	DOCUMENTATION
// the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.999981273100436	WITHOUT_CLASSIFICATION	1.266777752676497E-5	DESIGN	5.547759222078463E-6	TEST	4.000889924620002E-7	DEFECT	6.410048846814016E-8	DOCUMENTATION	4.7173334238200874E-8	IMPLEMENTATION
// loop through all the associations of the current entity and make sure that they are processed // before the current batch number	WITHOUT_CLASSIFICATION	0.9999998306789246	WITHOUT_CLASSIFICATION	1.6160795793011836E-7	DESIGN	4.2207451732335265E-9	DEFECT	1.4644537853874244E-9	DOCUMENTATION	1.4315933054243444E-9	IMPLEMENTATION	5.963252813413516E-10	TEST
// find the batch number associated with the current association, if any.	WITHOUT_CLASSIFICATION	0.9999248547080215	WITHOUT_CLASSIFICATION	5.967224446762301E-5	DESIGN	7.990339448605005E-6	TEST	3.5917727316588776E-6	IMPLEMENTATION	3.2539729082857284E-6	DOCUMENTATION	6.369624222451628E-7	DEFECT
// create a new batch for this type. The batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.9999960259075648	WITHOUT_CLASSIFICATION	3.9450846797769805E-6	DESIGN	2.2329954037220445E-8	DEFECT	3.680314775813355E-9	DOCUMENTATION	2.9780317117501606E-9	TEST	1.945470722508747E-11	IMPLEMENTATION
// loop through all the associated entities and make sure they have been // processed before the latest // batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.9999996844810249	WITHOUT_CLASSIFICATION	1.8572611034798324E-7	TEST	1.1601779262970212E-7	DESIGN	1.218861946388471E-8	IMPLEMENTATION	9.72753272024944E-10	DEFECT	6.136994564955024E-10	DOCUMENTATION
// since this entity will now be processed in the latest possible batch, // we can be assured that it will come after all other associations, // there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.9993581826952183	WITHOUT_CLASSIFICATION	3.24327643319254E-4	DESIGN	2.9476336728345915E-4	IMPLEMENTATION	2.1331239024594804E-5	TEST	1.122832332126999E-6	DEFECT	2.7222282223200905E-7	DOCUMENTATION
//cascade to current collection elements	WITHOUT_CLASSIFICATION	0.9999645865623595	WITHOUT_CLASSIFICATION	2.6245696454811652E-5	IMPLEMENTATION	8.401515617719021E-6	DESIGN	4.086974347242474E-7	DOCUMENTATION	3.3989066678850243E-7	DEFECT	1.7637466585746312E-8	TEST
//not really necessary, but good for consistency...	WITHOUT_CLASSIFICATION	0.8287031149967818	WITHOUT_CLASSIFICATION	0.16040952859228472	DESIGN	0.010375182666960565	DEFECT	4.3554060240569845E-4	IMPLEMENTATION	5.2238060155472045E-5	DOCUMENTATION	2.439508141168005E-5	TEST
// we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.9999997304894868	WITHOUT_CLASSIFICATION	2.1544960365087214E-7	DESIGN	4.1553360256298714E-8	DEFECT	6.99328047762689E-9	IMPLEMENTATION	5.103312897032496E-9	DOCUMENTATION	4.1095590123913634E-10	TEST
//a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.9962480357582641	WITHOUT_CLASSIFICATION	0.0035887128100755856	DESIGN	1.5786644201731508E-4	DEFECT	4.255036745013569E-6	IMPLEMENTATION	9.905323967936077E-7	DOCUMENTATION	1.3942050112050368E-7	TEST
// handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.9973347969531903	WITHOUT_CLASSIFICATION	0.002570851725906696	DESIGN	9.228171300525131E-5	IMPLEMENTATION	9.10818035339103E-7	DOCUMENTATION	7.839375206366109E-7	TEST	3.748523418148374E-7	DEFECT
// Loaded entity instances, by EntityUniqueKey	WITHOUT_CLASSIFICATION	0.9999904296163018	WITHOUT_CLASSIFICATION	7.805371994528997E-6	DESIGN	1.5013667076584226E-6	DEFECT	1.5709216102691282E-7	DOCUMENTATION	7.675095454344918E-8	IMPLEMENTATION	2.980188035930553E-8	TEST
// Identity map of EntityEntry instances, by the entity instance	WITHOUT_CLASSIFICATION	0.9999962247313325	WITHOUT_CLASSIFICATION	2.4585990847540077E-6	IMPLEMENTATION	7.423410474822778E-7	DEFECT	5.146489095592333E-7	DESIGN	4.509194452849746E-8	DOCUMENTATION	1.4587681189978542E-8	TEST
// Entity proxies, by EntityKey	WITHOUT_CLASSIFICATION	0.9999988843288768	WITHOUT_CLASSIFICATION	5.417657328671318E-7	DEFECT	3.9548614712358973E-7	IMPLEMENTATION	8.02401082031397E-8	DESIGN	6.490411565858779E-8	TEST	3.327501927273584E-8	DOCUMENTATION
// Snapshots of current database state for entities // that have *not* been loaded	WITHOUT_CLASSIFICATION	0.9984901928723248	WITHOUT_CLASSIFICATION	7.808441714863761E-4	DESIGN	7.149069257541238E-4	IMPLEMENTATION	1.2802317109222523E-5	DEFECT	1.046242855273395E-6	TEST	2.0747047046518512E-7	DOCUMENTATION
// Identity map of array holder ArrayHolder instances, by the array instance	WITHOUT_CLASSIFICATION	0.9999730664443959	WITHOUT_CLASSIFICATION	1.553086288270677E-5	IMPLEMENTATION	9.823538439133338E-6	DEFECT	1.463325979461912E-6	DESIGN	7.891194230464353E-8	DOCUMENTATION	3.691636039292896E-8	TEST
// Collection wrappers, by the CollectionKey //key=CollectionKey, value=PersistentCollection	WITHOUT_CLASSIFICATION	0.9999958993013225	WITHOUT_CLASSIFICATION	2.73033940594491E-6	DESIGN	1.3319268051496216E-6	DEFECT	2.5976127736008906E-8	TEST	7.897180241168896E-9	DOCUMENTATION	4.559158412016146E-9	IMPLEMENTATION
// Set of EntityKeys of deleted objects	WITHOUT_CLASSIFICATION	0.9999966646972309	WITHOUT_CLASSIFICATION	3.0522554617527837E-6	DESIGN	1.744752211585243E-7	DEFECT	4.571201143755569E-8	TEST	3.6364891443649755E-8	IMPLEMENTATION	2.6495183201779297E-8	DOCUMENTATION
// properties that we have tried to load, and not found in the database	WITHOUT_CLASSIFICATION	0.9999999432936667	WITHOUT_CLASSIFICATION	5.1814539709739964E-8	DEFECT	4.660665270133076E-9	DESIGN	1.426643659632303E-10	IMPLEMENTATION	6.669448163374024E-11	DOCUMENTATION	2.1769486881985522E-11	TEST
// A list of collection wrappers that were instantiating during result set // processing, that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9999898829603708	WITHOUT_CLASSIFICATION	8.355291993269606E-6	DEFECT	1.6777082591234451E-6	IMPLEMENTATION	7.480680324569264E-8	DESIGN	4.972631022509813E-9	TEST	4.259942519215273E-9	DOCUMENTATION
// A container for collections we load up when the owning entity is not // yet loaded ... for now, this is purely transient!	WITHOUT_CLASSIFICATION	0.9824158557391665	WITHOUT_CLASSIFICATION	0.009827411986329344	IMPLEMENTATION	0.00485348167511735	DESIGN	0.0028891237828144022	DEFECT	1.0207800927221018E-5	TEST	3.91901564509676E-6	DOCUMENTATION
// Downgrade locks	WITHOUT_CLASSIFICATION	0.9996256886314653	WITHOUT_CLASSIFICATION	1.7414744347309916E-4	IMPLEMENTATION	1.5629106943690306E-4	DESIGN	3.480522441965175E-5	DEFECT	7.53884306818974E-6	DOCUMENTATION	1.5287881368864033E-6	TEST
// any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.9999148199432458	WITHOUT_CLASSIFICATION	8.08682000530606E-5	DESIGN	4.066120370476965E-6	DEFECT	1.1971462574397744E-7	DOCUMENTATION	8.87195869340798E-8	IMPLEMENTATION	3.730211805714266E-8	TEST
//unwrap the object	WITHOUT_CLASSIFICATION	0.9999669028155102	WITHOUT_CLASSIFICATION	2.944400380890487E-5	DESIGN	1.575467970275559E-6	IMPLEMENTATION	1.4789944214912591E-6	DEFECT	5.073947559266147E-7	DOCUMENTATION	9.132353324146112E-8	TEST
//initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.999998527974697	WITHOUT_CLASSIFICATION	7.148556088242963E-7	IMPLEMENTATION	6.157651080806065E-7	DESIGN	7.476477300678991E-8	DOCUMENTATION	4.6161689782239635E-8	DEFECT	2.0478123277932305E-8	TEST
//return the proxied object	WITHOUT_CLASSIFICATION	0.9996038498018325	WITHOUT_CLASSIFICATION	3.9144414870671606E-4	DESIGN	3.644117900759452E-6	DEFECT	6.912918756302151E-7	IMPLEMENTATION	3.5257235765462434E-7	DOCUMENTATION	1.8067326812302284E-8	TEST
//overwrite old proxy	WITHOUT_CLASSIFICATION	0.9999951515140153	WITHOUT_CLASSIFICATION	4.527402204927477E-6	DESIGN	1.8981177172718953E-7	DEFECT	7.535497132493236E-8	IMPLEMENTATION	3.8730756768246965E-8	DOCUMENTATION	1.718627996789946E-8	TEST
// early exit...	WITHOUT_CLASSIFICATION	0.9991076323842927	WITHOUT_CLASSIFICATION	6.189803757802058E-4	DEFECT	2.1359929163816498E-4	DESIGN	5.559109097054974E-5	IMPLEMENTATION	2.561580322452712E-6	DOCUMENTATION	1.635276995793383E-6	TEST
// or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.9813800157254572	WITHOUT_CLASSIFICATION	0.017978088907064902	DESIGN	6.002984126359008E-4	DEFECT	3.614950249197229E-5	IMPLEMENTATION	4.52357097575047E-6	TEST	9.238813741595721E-7	DOCUMENTATION
//treat it just like a new collection	WITHOUT_CLASSIFICATION	0.9996274036200385	WITHOUT_CLASSIFICATION	3.052001057688795E-4	DESIGN	5.66202804850495E-5	IMPLEMENTATION	8.541405188561546E-6	DEFECT	1.6564059323390136E-6	TEST	5.781825866597746E-7	DOCUMENTATION
//do this work only at the very highest level of the load //don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.7717804815613949	DESIGN	0.218542708076313	WITHOUT_CLASSIFICATION	0.009454109978407788	DEFECT	1.4069845069486557E-4	IMPLEMENTATION	7.600843594931255E-5	TEST	5.993497240154996E-6	DOCUMENTATION
//note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.999999027645775	WITHOUT_CLASSIFICATION	9.088618640936508E-7	IMPLEMENTATION	5.610147889665328E-8	DESIGN	3.42544375499502E-9	DEFECT	2.083126893216867E-9	DOCUMENTATION	1.882311327481589E-9	TEST
//it might be an unwrapped collection reference! //try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.9544182141091091	WITHOUT_CLASSIFICATION	0.04505697200276177	DESIGN	4.652745917108199E-4	DEFECT	5.7538629480966217E-5	IMPLEMENTATION	1.4516713383141984E-6	DOCUMENTATION	5.489955988127016E-7	TEST
/*public boolean isNonExistant(EntityKey key) {	WITHOUT_CLASSIFICATION	0.9984731867452773	WITHOUT_CLASSIFICATION	0.0014936583624864084	DESIGN	2.836342670887534E-5	DEFECT	1.9512230098434195E-6	DOCUMENTATION	1.699591521145712E-6	TEST	1.1406509963093231E-6	IMPLEMENTATION
/*public boolean isNonExistant(EntityUniqueKey key) {	WITHOUT_CLASSIFICATION	0.9977069408895042	WITHOUT_CLASSIFICATION	0.0022589722654870535	DESIGN	2.8238111682466656E-5	DEFECT	2.1136123138843795E-6	TEST	1.9766750593088137E-6	DOCUMENTATION	1.7584459530204875E-6	IMPLEMENTATION
// iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.9961547025073972	WITHOUT_CLASSIFICATION	0.0038063141951139106	DESIGN	3.4281687774249505E-5	IMPLEMENTATION	2.615511578704964E-6	TEST	1.7416082975949677E-6	DOCUMENTATION	3.444898382716249E-7	DEFECT
// does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.9999983369405149	WITHOUT_CLASSIFICATION	1.4908832923353638E-6	DESIGN	1.4181772681980147E-7	DOCUMENTATION	2.0677658591593372E-8	TEST	8.193933365836404E-9	DEFECT	1.486874014157577E-9	IMPLEMENTATION
//check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.9997148071431605	WITHOUT_CLASSIFICATION	2.699757009268155E-4	DESIGN	1.2878666730823272E-5	IMPLEMENTATION	1.0795947697629164E-6	DEFECT	8.158534257538707E-7	DOCUMENTATION	4.4304098634682093E-7	TEST
// otherwise, the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.9999975139212618	WITHOUT_CLASSIFICATION	2.102262044797679E-6	DEFECT	3.321796586668426E-7	DESIGN	3.76316901310027E-8	IMPLEMENTATION	1.2319249793316817E-8	DOCUMENTATION	1.6860948495255265E-9	TEST
// adds remove as a sort-of alias for delete...	WITHOUT_CLASSIFICATION	0.9999945116832497	WITHOUT_CLASSIFICATION	4.482315432158964E-6	IMPLEMENTATION	7.960195118903255E-7	DEFECT	1.730320141155408E-7	DESIGN	2.759367064761978E-8	TEST	9.356121528406701E-9	DOCUMENTATION
//bad cast	WITHOUT_CLASSIFICATION	0.9997811087004974	WITHOUT_CLASSIFICATION	2.1287144880791545E-4	DESIGN	3.2767845096501682E-6	DEFECT	1.0124862858559539E-6	TEST	9.534834702122976E-7	DOCUMENTATION	7.770964289763254E-7	IMPLEMENTATION
//return lhsPersister.getSubclassPropertyColumnNames(property);	WITHOUT_CLASSIFICATION	0.9999886842351662	WITHOUT_CLASSIFICATION	1.1122431531778987E-5	DESIGN	1.6539805956990382E-7	DEFECT	2.0769079136241647E-8	TEST	6.227639164856357E-9	DOCUMENTATION	9.385241118761646E-10	IMPLEMENTATION
//property-refs for associations defined on a //component are not supported, so no need to slice	WITHOUT_CLASSIFICATION	0.9999999149009657	WITHOUT_CLASSIFICATION	8.003972374467689E-8	DESIGN	2.564521271233184E-9	TEST	2.4315194632989476E-9	DOCUMENTATION	4.523426234791587E-11	DEFECT	1.8035454777731897E-11	IMPLEMENTATION
//if there is no property-ref, assume the join //is to the subclass table (ie. the table of the //subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.9999999857406002	WITHOUT_CLASSIFICATION	1.3907773630476289E-8	DESIGN	1.744816333853627E-10	DOCUMENTATION	1.0187129550471274E-10	DEFECT	7.375774619087258E-11	TEST	1.51556811900983E-12	IMPLEMENTATION
//handle a property-ref	WITHOUT_CLASSIFICATION	0.9999759497090265	WITHOUT_CLASSIFICATION	2.244118433327335E-5	DESIGN	1.1693617261980552E-6	DEFECT	3.0208675032063007E-7	IMPLEMENTATION	1.1044144586000683E-7	DOCUMENTATION	2.721671777929071E-8	TEST
/*NativeSQLQueryReturn*/	WITHOUT_CLASSIFICATION	0.9994333884420689	WITHOUT_CLASSIFICATION	5.538743161297164E-4	DESIGN	6.922722424270838E-6	DEFECT	4.335777886032907E-6	IMPLEMENTATION	1.2236314222930644E-6	DOCUMENTATION	2.5511006887428834E-7	TEST
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999660109418278	WITHOUT_CLASSIFICATION	3.2533642070575095E-5	DESIGN	6.318781883496243E-7	DEFECT	5.537451026871128E-7	IMPLEMENTATION	1.4110948329778261E-7	TEST	1.286833272524749E-7	DOCUMENTATION
// why is all others non final ?	WITHOUT_CLASSIFICATION	0.9954165903725801	WITHOUT_CLASSIFICATION	0.004573172620750204	DESIGN	7.763889578198144E-6	IMPLEMENTATION	2.134105869980408E-6	DEFECT	2.3764079844870576E-7	DOCUMENTATION	1.0137042304355961E-7	TEST
//this.forceCacheRefresh = forceCacheRefresh;	WITHOUT_CLASSIFICATION	0.9999926092777257	WITHOUT_CLASSIFICATION	6.874958062427974E-6	IMPLEMENTATION	1.5116205957215235E-7	TEST	1.365610293620559E-7	DOCUMENTATION	1.180486337634311E-7	DEFECT	1.099924891415641E-7	DESIGN
// HELLA IMPORTANT OPTIMIZATION!!!	WITHOUT_CLASSIFICATION	0.9999657265152283	WITHOUT_CLASSIFICATION	2.790250298719725E-5	DESIGN	4.825056833737472E-6	DEFECT	7.271492294146612E-7	IMPLEMENTATION	5.267234246212738E-7	DOCUMENTATION	2.920522967920848E-7	TEST
/*return that.type.equals(type) && 	WITHOUT_CLASSIFICATION	0.9995462612621814	WITHOUT_CLASSIFICATION	4.280608261846949E-4	DESIGN	1.7437571012355305E-5	DEFECT	7.534657323929595E-6	IMPLEMENTATION	4.448714172010558E-7	TEST	2.6081188046465666E-7	DOCUMENTATION
//Must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.9999518223664073	WITHOUT_CLASSIFICATION	4.722205772992988E-5	DESIGN	2.9329733893734444E-7	DEFECT	2.555103107498629E-7	TEST	2.3229689279151643E-7	DOCUMENTATION	1.7447132021498127E-7	IMPLEMENTATION
//take a snapshot	WITHOUT_CLASSIFICATION	0.9998141378363018	WITHOUT_CLASSIFICATION	1.165662287078469E-4	DEFECT	4.640888865157167E-5	DESIGN	1.7316937811514997E-5	IMPLEMENTATION	2.9907018334782778E-6	DOCUMENTATION	2.5794066938612693E-6	TEST
// do a check	WITHOUT_CLASSIFICATION	0.9997239562068101	WITHOUT_CLASSIFICATION	2.4900582445147964E-4	DESIGN	2.140153366336879E-5	IMPLEMENTATION	4.468500496238677E-6	DEFECT	1.0084237442037134E-6	DOCUMENTATION	1.5951083453859033E-7	TEST
// the owning entity may have been deleted and its identifier unset due to // identifier-rollback; in which case, try to look up its identifier from // the persistence context	WITHOUT_CLASSIFICATION	0.9999994310109064	WITHOUT_CLASSIFICATION	5.379552022254674E-7	DESIGN	1.8553703165371215E-8	DEFECT	1.2151692631824983E-8	IMPLEMENTATION	2.827513211989396E-10	DOCUMENTATION	4.5744316676317085E-11	TEST
// do the work	WITHOUT_CLASSIFICATION	0.9996233007440355	WITHOUT_CLASSIFICATION	2.2358498455816612E-4	DEFECT	1.177087336206861E-4	DESIGN	3.0239646758675746E-5	IMPLEMENTATION	4.274152645971076E-6	DOCUMENTATION	8.917383810350474E-7	TEST
// We've been here before	WITHOUT_CLASSIFICATION	0.9999204008704052	WITHOUT_CLASSIFICATION	3.985647254949086E-5	DESIGN	2.0925347304334208E-5	IMPLEMENTATION	1.450285282700809E-5	DEFECT	2.615575268309962E-6	DOCUMENTATION	1.6988816456949553E-6	TEST
// it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.9999792632096296	WITHOUT_CLASSIFICATION	2.027380938102496E-5	DESIGN	2.3338915827582828E-7	DEFECT	1.4143687546070532E-7	TEST	4.461130232242998E-8	DOCUMENTATION	4.354365329596325E-8	IMPLEMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9996233007440355	WITHOUT_CLASSIFICATION	2.2358498455816612E-4	DEFECT	1.177087336206861E-4	DESIGN	3.0239646758675746E-5	IMPLEMENTATION	4.274152645971076E-6	DOCUMENTATION	8.917383810350474E-7	TEST
// if either its role changed,	WITHOUT_CLASSIFICATION	0.9999995441781652	WITHOUT_CLASSIFICATION	4.4497589739085864E-7	DESIGN	4.622413300853321E-9	DEFECT	4.161807578119688E-9	TEST	1.8973708112307994E-9	IMPLEMENTATION	1.6434579029569207E-10	DOCUMENTATION
// or its key changed	WITHOUT_CLASSIFICATION	0.9999976308356112	WITHOUT_CLASSIFICATION	9.089785005172572E-7	DEFECT	8.137054138516008E-7	IMPLEMENTATION	5.912983407400758E-7	DESIGN	4.028341746211718E-8	TEST	1.4898716033776028E-8	DOCUMENTATION
// we will need to create new entries	WITHOUT_CLASSIFICATION	0.999974412555325	WITHOUT_CLASSIFICATION	2.3991436540315165E-5	IMPLEMENTATION	1.019772398523887E-6	DESIGN	2.9781841106303165E-7	DOCUMENTATION	2.0725970591046969E-7	TEST	7.115761909735823E-8	DEFECT
// we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.999956684518692	WITHOUT_CLASSIFICATION	4.1962297449604426E-5	IMPLEMENTATION	9.598398376739817E-7	DEFECT	1.9506928893092573E-7	DESIGN	1.1365093824307452E-7	DOCUMENTATION	8.46237935596631E-8	TEST
// force initialize!	WITHOUT_CLASSIFICATION	0.9999994507823536	WITHOUT_CLASSIFICATION	2.908447382926078E-7	IMPLEMENTATION	1.517271384905076E-7	DESIGN	7.526133341058236E-8	DEFECT	1.986039948465955E-8	DOCUMENTATION	1.1524036668607399E-8	TEST
// else if it's elements changed	WITHOUT_CLASSIFICATION	0.999999577206452	WITHOUT_CLASSIFICATION	3.8264638658206815E-7	IMPLEMENTATION	1.8857592357700374E-8	DESIGN	1.663882608026188E-8	DEFECT	4.19777884762135E-9	TEST	4.5296394950019123E-10	DOCUMENTATION
//ATTRIBUTES MAINTAINED BETWEEN FLUSH CYCLES	WITHOUT_CLASSIFICATION	0.9998774949692844	WITHOUT_CLASSIFICATION	8.315113932456716E-5	DESIGN	3.262291709418014E-5	IMPLEMENTATION	2.8431016564522605E-6	DOCUMENTATION	2.4525176251243153E-6	DEFECT	1.4353550151640417E-6	TEST
// session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.999999110606733	WITHOUT_CLASSIFICATION	4.675828373343002E-7	DESIGN	4.014638994115672E-7	IMPLEMENTATION	1.003333609470283E-8	DEFECT	5.616358181523951E-9	TEST	4.69683616380843E-9	DOCUMENTATION
// allow the CollectionSnapshot to be serialized	WITHOUT_CLASSIFICATION	0.9990051109959327	WITHOUT_CLASSIFICATION	6.439623630465543E-4	DESIGN	3.497202075568831E-4	IMPLEMENTATION	1.0932173846083125E-6	DEFECT	6.823853063450412E-8	DOCUMENTATION	4.497754878015218E-8	TEST
// ATTRIBUTES USED ONLY DURING FLUSH CYCLE	WITHOUT_CLASSIFICATION	0.9999430750996192	WITHOUT_CLASSIFICATION	3.2182898695972686E-5	DESIGN	2.183805465234776E-5	IMPLEMENTATION	1.2824251182779925E-6	DEFECT	1.2148235789017487E-6	DOCUMENTATION	4.066983351929677E-7	TEST
// "current" means the reference that was found during flush() 	WITHOUT_CLASSIFICATION	0.9999969897563084	WITHOUT_CLASSIFICATION	2.9026719276099223E-6	DEFECT	8.791351285432663E-8	DESIGN	1.3786572251930705E-8	DOCUMENTATION	5.295081921540743E-9	IMPLEMENTATION	5.765970151410963E-10	TEST
// "loaded" means the reference that is consistent  // with the current database state	WITHOUT_CLASSIFICATION	0.999993431440115	WITHOUT_CLASSIFICATION	2.7459015053661373E-6	DESIGN	2.2474909011792762E-6	IMPLEMENTATION	1.5293007686735915E-6	DEFECT	3.761009814889211E-8	TEST	8.256611755638378E-9	DOCUMENTATION
// during flush, we navigate the object graph to // collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.9998871159437837	WITHOUT_CLASSIFICATION	1.0841033296195141E-4	DESIGN	3.84631227463522E-6	IMPLEMENTATION	3.145700154767772E-7	DEFECT	2.155256086944347E-7	TEST	9.731535553583378E-8	DOCUMENTATION
// if we instantiate a collection during the flush() process, // we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.9999999898299268	WITHOUT_CLASSIFICATION	6.206915414158963E-9	DESIGN	2.7763021898721345E-9	DEFECT	1.1605117718036522E-9	TEST	2.4260209856810655E-11	DOCUMENTATION	2.0834973002571003E-12	IMPLEMENTATION
// new collections that get found + wrapped // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999124453733086	WITHOUT_CLASSIFICATION	8.668865898434276E-5	DESIGN	6.442620546706216E-7	IMPLEMENTATION	2.138488135278931E-7	DEFECT	6.8259685548052635E-9	TEST	1.0308702887426173E-9	DOCUMENTATION
//a newly wrapped collection is NOT dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.9855637911606014	WITHOUT_CLASSIFICATION	0.014433216594291497	DESIGN	1.8102346803236173E-6	DEFECT	1.023024970918047E-6	IMPLEMENTATION	1.0847290092285471E-7	TEST	5.0512554888654764E-8	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9974718120093397	WITHOUT_CLASSIFICATION	0.0015037376980179924	IMPLEMENTATION	8.318402845067066E-4	DESIGN	1.6061563830278342E-4	DEFECT	2.21475329425494E-5	DOCUMENTATION	9.846836890246504E-6	TEST
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9974718120093397	WITHOUT_CLASSIFICATION	0.0015037376980179924	IMPLEMENTATION	8.318402845067066E-4	DESIGN	1.6061563830278342E-4	DEFECT	2.21475329425494E-5	DOCUMENTATION	9.846836890246504E-6	TEST
// detached collections that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999992190732979	WITHOUT_CLASSIFICATION	6.241133768224692E-7	DESIGN	1.1124410436609981E-7	DEFECT	4.515334905614267E-8	IMPLEMENTATION	2.7401262953599665E-10	TEST	1.418592058184266E-10	DOCUMENTATION
//optimization	WITHOUT_CLASSIFICATION	0.9998527834845461	WITHOUT_CLASSIFICATION	1.3077565569115542E-4	DEFECT	5.280163041625595E-6	IMPLEMENTATION	5.276870521951157E-6	DOCUMENTATION	5.113728499892924E-6	DESIGN	7.700976994224243E-7	TEST
//optimization //optimization	WITHOUT_CLASSIFICATION	0.9999495543989215	WITHOUT_CLASSIFICATION	4.8297912783700975E-5	DEFECT	1.281596550282105E-6	DOCUMENTATION	4.842200114741932E-7	DESIGN	2.594463469218055E-7	IMPLEMENTATION	1.224253861670667E-7	TEST
//re-snapshot	WITHOUT_CLASSIFICATION	0.999846797997221	WITHOUT_CLASSIFICATION	1.3815295098474416E-4	DESIGN	8.978683983863008E-6	IMPLEMENTATION	3.577882805594431E-6	DEFECT	1.247693604355929E-6	DOCUMENTATION	1.2447914005619783E-6	TEST
// for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.999997734202009	WITHOUT_CLASSIFICATION	1.004962789881487E-6	DESIGN	8.09614105501184E-7	IMPLEMENTATION	2.444176339068325E-7	DEFECT	1.9102098823756345E-7	DOCUMENTATION	1.578247345884004E-8	TEST
//NOTE: this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.9294606871747516	WITHOUT_CLASSIFICATION	0.045546397359183644	DESIGN	0.024900627873491413	DEFECT	5.4625656319547476E-5	TEST	2.687123608069659E-5	DOCUMENTATION	1.0790700173189398E-5	IMPLEMENTATION
//memory optimization	WITHOUT_CLASSIFICATION	0.999940406976874	WITHOUT_CLASSIFICATION	5.713383644113745E-5	DEFECT	8.586081555569934E-7	DESIGN	7.537823470598073E-7	DOCUMENTATION	7.146935050209854E-7	IMPLEMENTATION	1.3210267729315384E-7	TEST
// use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999977478981131	WITHOUT_CLASSIFICATION	2.1457978534796536E-6	DESIGN	9.816967916839583E-8	DEFECT	5.7450489394228E-9	DOCUMENTATION	2.2373708154861573E-9	IMPLEMENTATION	1.5193451567719112E-10	TEST
// copied from Session:	WITHOUT_CLASSIFICATION	0.999986182769166	WITHOUT_CLASSIFICATION	1.2615939783020801E-5	DESIGN	1.033545550136521E-6	DEFECT	1.0421965443877371E-7	IMPLEMENTATION	3.293689012072768E-8	DOCUMENTATION	3.0588956363026856E-8	TEST
// this should not happen since the DTD prevents it	WITHOUT_CLASSIFICATION	0.9998262338385022	WITHOUT_CLASSIFICATION	7.989296023148695E-5	DEFECT	7.769972478918938E-5	DESIGN	1.4727833597270963E-5	IMPLEMENTATION	8.455565951955321E-7	TEST	6.000862845791377E-7	DOCUMENTATION
// JoinProcessor needs to know if the where clause fragment came from a dynamic filter or not so it // can put the where clause fragment in the right place in the SQL AST.   'hasFilterCondition' keeps track // of that fact.	WITHOUT_CLASSIFICATION	0.999669817620081	WITHOUT_CLASSIFICATION	3.2768914059645515E-4	DESIGN	2.465964007891467E-6	DEFECT	2.3344630711628586E-8	DOCUMENTATION	3.315088371060978E-9	TEST	6.155955781576594E-10	IMPLEMENTATION
// the current join represents the join between a many-to-many association table // and its "target" table.  Here we need to apply any additional filters // defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.9999988503253393	WITHOUT_CLASSIFICATION	1.0919239791465445E-6	DESIGN	3.221939999499439E-8	IMPLEMENTATION	2.5381006757968766E-8	DOCUMENTATION	9.321461946828966E-11	DEFECT	5.706021454942158E-11	TEST
//check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.9998355041850935	WITHOUT_CLASSIFICATION	1.6277914570028538E-4	DESIGN	1.2896330648751254E-6	IMPLEMENTATION	2.0489921725563347E-7	DOCUMENTATION	1.895213348480488E-7	DEFECT	3.2615589151692414E-8	TEST
//values is not null and is checkable, we'll look deeper	WITHOUT_CLASSIFICATION	0.8579462451458759	WITHOUT_CLASSIFICATION	0.141248375730632	DESIGN	7.763159081528567E-4	DEFECT	2.509707773891954E-5	IMPLEMENTATION	2.693436320635085E-6	TEST	1.272701279601577E-6	DOCUMENTATION
//for non null args, check for components and elements containing components	WITHOUT_CLASSIFICATION	0.9999576933178601	WITHOUT_CLASSIFICATION	4.2252135836232014E-5	DESIGN	4.4144766048992367E-8	IMPLEMENTATION	5.342188696106577E-9	DOCUMENTATION	4.410044057048255E-9	DEFECT	6.493048781124362E-10	TEST
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9997675657984075	WITHOUT_CLASSIFICATION	2.0573424906007208E-4	DESIGN	2.405545562095116E-5	IMPLEMENTATION	1.374474395865829E-6	DOCUMENTATION	7.18861959687705E-7	DEFECT	5.511605559197458E-7	TEST
//persistent collections may have components	WITHOUT_CLASSIFICATION	0.9999993576739623	WITHOUT_CLASSIFICATION	5.357438535234718E-7	DESIGN	8.392507529498806E-8	IMPLEMENTATION	1.3094190281170257E-8	DEFECT	8.661921534003625E-9	TEST	9.009970255514425E-10	DOCUMENTATION
//check for all components values in the collection	WITHOUT_CLASSIFICATION	0.9999987189488798	WITHOUT_CLASSIFICATION	1.2615749673487375E-6	DESIGN	1.4262462902686875E-8	DEFECT	2.95765143864632E-9	IMPLEMENTATION	1.8633524915887678E-9	DOCUMENTATION	3.926858943079009E-10	TEST
/* will check current level if some of them are not null	WITHOUT_CLASSIFICATION	0.9982950935763959	WITHOUT_CLASSIFICATION	0.0011878183655215158	DESIGN	2.1864078013064382E-4	IMPLEMENTATION	2.1166359426268586E-4	DEFECT	7.709074222080574E-5	DOCUMENTATION	9.692941468401446E-6	TEST
//do the test	WITHOUT_CLASSIFICATION	0.9991884933792871	WITHOUT_CLASSIFICATION	8.034891383980589E-4	TEST	3.227379449346753E-6	DOCUMENTATION	2.621595925208354E-6	IMPLEMENTATION	1.4256979145938588E-6	DESIGN	7.428090256920726E-7	DEFECT
// if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.9999991883201268	WITHOUT_CLASSIFICATION	7.759971934379942E-7	DESIGN	2.587640221026403E-8	DEFECT	7.047729305750544E-9	IMPLEMENTATION	1.4743300585372186E-9	TEST	1.2842181081467482E-9	DOCUMENTATION
//unwrap it	WITHOUT_CLASSIFICATION	0.9999649027975457	WITHOUT_CLASSIFICATION	2.4195312919798605E-5	DESIGN	5.718760547077353E-6	DEFECT	4.319226908183259E-6	IMPLEMENTATION	5.185169295159497E-7	TEST	3.4538514976273144E-7	DOCUMENTATION
// See if the entity is already bound to this session, if not look at the // entity identifier and assume that the entity is persistent if the // id is not "unsaved" (that is, we rely on foreign keys to keep // database integrity)	WITHOUT_CLASSIFICATION	0.9999925513582114	WITHOUT_CLASSIFICATION	6.905823591556238E-6	DESIGN	5.21775325468893E-7	DEFECT	1.1693504689603797E-8	IMPLEMENTATION	8.681969543108187E-9	DOCUMENTATION	6.673974356421828E-10	TEST
// an unfetched association can only point to // an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.9999997364992554	WITHOUT_CLASSIFICATION	1.2591667780067528E-7	DESIGN	1.1717073023372844E-7	IMPLEMENTATION	8.122432752720471E-9	DEFECT	7.883699365591501E-9	DOCUMENTATION	4.407204235931597E-9	TEST
// let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999995136863111	WITHOUT_CLASSIFICATION	2.260316098998325E-7	IMPLEMENTATION	2.2318863343958505E-7	DESIGN	2.4945626690735053E-8	DEFECT	1.0765483072431194E-8	DOCUMENTATION	1.3823358108644138E-9	TEST
// let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.999989533023104	WITHOUT_CLASSIFICATION	7.922930297462993E-6	DESIGN	2.389593594068186E-6	IMPLEMENTATION	1.0208561760259232E-7	DEFECT	4.855932656224731E-8	DOCUMENTATION	3.808060089305416E-9	TEST
// we use the assumed value, if there is one, to avoid hitting // the database	WITHOUT_CLASSIFICATION	0.999999773649132	WITHOUT_CLASSIFICATION	2.0971986003089137E-7	DESIGN	1.1027400805000605E-8	DEFECT	5.323794485443154E-9	TEST	2.1078849242247649E-10	IMPLEMENTATION	6.902433164900632E-11	DOCUMENTATION
// hit the database, after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.9376696524402081	WITHOUT_CLASSIFICATION	0.06170165423062983	DESIGN	3.455777678063733E-4	DEFECT	2.8008816522855746E-4	IMPLEMENTATION	1.860862402821647E-6	TEST	1.166533724425362E-6	DOCUMENTATION
// context-entity-identifier returns null explicitly if the entity // is not associated with the persistence context; so make some // deeper checks...	WITHOUT_CLASSIFICATION	0.9977480250857672	WITHOUT_CLASSIFICATION	0.0022238149720530723	DESIGN	1.1113107076186478E-5	IMPLEMENTATION	9.680031156014772E-6	TEST	6.61593533035442E-6	DEFECT	7.508686172399972E-7	DOCUMENTATION
//int count = 0;	WITHOUT_CLASSIFICATION	0.9999639480692282	WITHOUT_CLASSIFICATION	2.7129350253351744E-5	DEFECT	7.244249675102634E-6	DESIGN	8.066083691971878E-7	DOCUMENTATION	6.404299473095522E-7	IMPLEMENTATION	2.312925268808221E-7	TEST
//the first key found after the given key	WITHOUT_CLASSIFICATION	0.9999915089321564	WITHOUT_CLASSIFICATION	7.339208293199671E-6	IMPLEMENTATION	4.4173993377498057E-7	DESIGN	3.071086833490994E-7	DOCUMENTATION	2.652779289224076E-7	TEST	1.3773300440459598E-7	DEFECT
//checkForEnd = false;	WITHOUT_CLASSIFICATION	0.9999844354106232	WITHOUT_CLASSIFICATION	1.2402139605583779E-5	DESIGN	2.1113668423662808E-6	IMPLEMENTATION	6.647730827815115E-7	DEFECT	3.089974555759403E-7	DOCUMENTATION	7.731239055428122E-8	TEST
//count++;	WITHOUT_CLASSIFICATION	0.9993919425212469	WITHOUT_CLASSIFICATION	4.448492976324522E-4	DESIGN	1.4844416932224513E-4	DEFECT	8.84513723289308E-6	DOCUMENTATION	3.812553059313852E-6	IMPLEMENTATION	2.106321506140835E-6	TEST
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9995312632569601	WITHOUT_CLASSIFICATION	4.5682707439744657E-4	DESIGN	6.184693724713548E-6	IMPLEMENTATION	3.1344194678368618E-6	TEST	1.4284649570744118E-6	DOCUMENTATION	1.16209049275638E-6	DEFECT
//we ran out of keys to try	WITHOUT_CLASSIFICATION	0.999381243690728	WITHOUT_CLASSIFICATION	5.967710754188983E-4	DESIGN	1.513657271357245E-5	DEFECT	3.917597768263235E-6	IMPLEMENTATION	2.1719230597742963E-6	DOCUMENTATION	7.591403114628209E-7	TEST
//first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.9999991373564605	WITHOUT_CLASSIFICATION	6.740921185627375E-7	IMPLEMENTATION	8.794806638005753E-8	DESIGN	7.131628772875547E-8	DEFECT	1.7079311454589226E-8	TEST	1.2207755272318908E-8	DOCUMENTATION
//the first id found after the given id	WITHOUT_CLASSIFICATION	0.999993527837212	WITHOUT_CLASSIFICATION	5.251492674512767E-6	IMPLEMENTATION	7.092859948097879E-7	DESIGN	2.787384152633074E-7	TEST	1.7595763521691224E-7	DOCUMENTATION	5.668806837803989E-8	DEFECT
//we ran out of ids to try	WITHOUT_CLASSIFICATION	0.9986525908872895	WITHOUT_CLASSIFICATION	0.001316759900388961	DESIGN	2.0561142110785303E-5	DEFECT	8.327940989175824E-6	IMPLEMENTATION	1.3295762953482117E-6	DOCUMENTATION	4.305529261161117E-7	TEST
// look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.9999997817509685	WITHOUT_CLASSIFICATION	1.215508101931984E-7	IMPLEMENTATION	6.867625002507032E-8	DEFECT	2.0394926179023713E-8	DESIGN	5.741943913652956E-9	TEST	1.8851011156819874E-9	DOCUMENTATION
// ignore this row of results! Note the early exit	WITHOUT_CLASSIFICATION	0.9998874672052589	WITHOUT_CLASSIFICATION	1.0814717995528394E-4	DEFECT	4.149188735152674E-6	DESIGN	1.0323489142735992E-7	TEST	9.714274928868981E-8	IMPLEMENTATION	3.604840998187207E-8	DOCUMENTATION
// initialize this collection	WITHOUT_CLASSIFICATION	0.9998207522931868	WITHOUT_CLASSIFICATION	1.7767665756816955E-4	DESIGN	6.50335744000225E-7	IMPLEMENTATION	5.292993187943051E-7	TEST	2.1812616129790877E-7	DEFECT	1.7328802090996583E-7	DOCUMENTATION
// create one	WITHOUT_CLASSIFICATION	0.9999982979913313	WITHOUT_CLASSIFICATION	1.2834569290329684E-6	DESIGN	2.891957309693591E-7	DEFECT	8.046627960826186E-8	IMPLEMENTATION	2.7773940757306888E-8	DOCUMENTATION	2.1115788432598854E-8	TEST
// warning: can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.9968368766619021	WITHOUT_CLASSIFICATION	0.0031274579550047655	DEFECT	3.386449433623515E-5	DESIGN	1.2405267089678672E-6	IMPLEMENTATION	5.422887074203143E-7	DOCUMENTATION	1.807334062041089E-8	TEST
// there were no queued additions // and the role has a cache	WITHOUT_CLASSIFICATION	0.999965043121447	WITHOUT_CLASSIFICATION	3.4793638944103224E-5	DESIGN	1.1732841751621251E-7	DEFECT	3.9406014166311194E-8	IMPLEMENTATION	5.46979453325439E-9	DOCUMENTATION	1.0353826380377214E-9	TEST
// and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.9999996726649292	WITHOUT_CLASSIFICATION	2.0104782803954032E-7	DESIGN	1.2097241892874488E-7	DEFECT	2.5473188524743626E-9	TEST	1.8260730792134953E-9	DOCUMENTATION	9.414318177627715E-10	IMPLEMENTATION
// some filters affecting the collection are enabled on the session, so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.9999032831908536	WITHOUT_CLASSIFICATION	9.669236552913954E-5	DESIGN	1.5139876434217652E-8	DEFECT	5.480784700306696E-9	IMPLEMENTATION	3.3610846620202623E-9	TEST	4.6187138592969967E-10	DOCUMENTATION
// cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996297282263049	WITHOUT_CLASSIFICATION	3.296987546482857E-4	DESIGN	2.222513083912858E-5	DEFECT	1.6100207733490974E-5	IMPLEMENTATION	1.6272873742199419E-6	DOCUMENTATION	6.20393099970329E-7	TEST
// loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999966944231851	WITHOUT_CLASSIFICATION	3.1574331661892643E-6	DEFECT	8.00734076847678E-8	IMPLEMENTATION	5.399496933350843E-8	DESIGN	1.1139919741277583E-8	TEST	2.9353519833428043E-9	DOCUMENTATION
// Collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999982183473655	WITHOUT_CLASSIFICATION	1.164294151822861E-5	DEFECT	5.765537959314423E-6	DESIGN	2.058375662811938E-7	IMPLEMENTATION	1.0288962127424001E-7	DOCUMENTATION	9.931967992701396E-8	TEST
// simple cache of param metadata based on query string.  Ideally, the // original "user-supplied query" string should be used to retreive this // metadata (i.e., not the para-list-expanded query string) to avoid // unnecessary cache entries. // Used solely for caching param metadata for native-sql queries, see // getSQLParameterMetadata() for a discussion as to why...	WITHOUT_CLASSIFICATION	0.7961752034546249	WITHOUT_CLASSIFICATION	0.20260984033225005	DESIGN	0.001214798575033674	DEFECT	1.558600116035592E-7	IMPLEMENTATION	9.879246252761415E-10	DOCUMENTATION	7.901552132483932E-10	TEST
// the cache of the actual plans...	WITHOUT_CLASSIFICATION	0.9999735223927944	WITHOUT_CLASSIFICATION	2.398635173352248E-5	IMPLEMENTATION	1.2295286475341749E-6	DESIGN	1.1361479606110618E-6	DEFECT	1.1776472172801206E-7	DOCUMENTATION	7.814142376257252E-9	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.998408487020651	WITHOUT_CLASSIFICATION	0.0015341255124436755	DESIGN	3.866327223773271E-5	IMPLEMENTATION	9.233353585650128E-6	DEFECT	7.327886436100033E-6	DOCUMENTATION	2.1629546457955846E-6	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.998408487020651	WITHOUT_CLASSIFICATION	0.0015341255124436755	DESIGN	3.866327223773271E-5	IMPLEMENTATION	9.233353585650128E-6	DEFECT	7.327886436100033E-6	DOCUMENTATION	2.1629546457955846E-6	TEST
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999999115606978	WITHOUT_CLASSIFICATION	7.788653112189252E-8	DESIGN	4.6206680923006464E-9	DEFECT	2.4134582157540236E-9	DOCUMENTATION	1.983196713115381E-9	IMPLEMENTATION	1.5354479938469174E-9	TEST
// for native-sql queries, the param metadata is determined outside // any relation to a query plan, because query plan creation and/or // retreival for a native-sql query depends on all of the return // types having been set, which might not be the case up-front when // param metadata would be most useful	WITHOUT_CLASSIFICATION	0.9993843221049359	WITHOUT_CLASSIFICATION	6.134399432130207E-4	DESIGN	2.2374632410607963E-6	DEFECT	4.2059787584257726E-10	IMPLEMENTATION	5.0107981674865804E-11	DOCUMENTATION	1.790406590070666E-11	TEST
// don't care...	WITHOUT_CLASSIFICATION	0.9943126150713343	WITHOUT_CLASSIFICATION	0.0046143546932473495	DEFECT	0.0010358046811201483	DESIGN	3.254290473188977E-5	IMPLEMENTATION	3.1532784328167516E-6	DOCUMENTATION	1.529371133560834E-6	TEST
// Recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997512631369494	WITHOUT_CLASSIFICATION	1.1786706529320468E-4	DEFECT	6.538561717744804E-5	DESIGN	5.9953745952221535E-5	IMPLEMENTATION	4.827164289804805E-6	DOCUMENTATION	7.032703379521295E-7	TEST
// don't care...	WITHOUT_CLASSIFICATION	0.9943126150713343	WITHOUT_CLASSIFICATION	0.0046143546932473495	DEFECT	0.0010358046811201483	DESIGN	3.254290473188977E-5	IMPLEMENTATION	3.1532784328167516E-6	DOCUMENTATION	1.529371133560834E-6	TEST
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9995219310424093	WITHOUT_CLASSIFICATION	3.2057822872663113E-4	DESIGN	1.1341954327470572E-4	IMPLEMENTATION	3.8775433739383854E-5	DEFECT	5.164466452150155E-6	TEST	1.3128539781220622E-7	DOCUMENTATION
// break the outer loop !!!	WITHOUT_CLASSIFICATION	0.999996504411141	WITHOUT_CLASSIFICATION	2.0718263534700063E-6	DESIGN	1.282918681475864E-6	DEFECT	1.0880315803406048E-7	IMPLEMENTATION	1.835749238937564E-8	TEST	1.3683173622436291E-8	DOCUMENTATION
// named parameter	WITHOUT_CLASSIFICATION	0.9991980232110591	WITHOUT_CLASSIFICATION	7.780795723378334E-4	DESIGN	2.1978293590949097E-5	IMPLEMENTATION	1.167646372107406E-6	DEFECT	6.49585973323635E-7	TEST	1.0169066661925063E-7	DOCUMENTATION
// could be either an ordinal or JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999642282793142	WITHOUT_CLASSIFICATION	3.551526099622044E-5	DESIGN	2.198519193191689E-7	DEFECT	3.100030586314207E-8	IMPLEMENTATION	3.3291546214700506E-9	DOCUMENTATION	2.2783097145519194E-9	TEST
// a peek ahead showed this as an JPA-positional parameter	WITHOUT_CLASSIFICATION	0.99999690040139	WITHOUT_CLASSIFICATION	3.0736813757211746E-6	DESIGN	9.247764162703846E-9	IMPLEMENTATION	8.76891850668939E-9	DEFECT	4.538338863951203E-9	DOCUMENTATION	3.3622127645145847E-9	TEST
// make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.9999974410530176	WITHOUT_CLASSIFICATION	2.305602493519096E-6	DESIGN	1.3385504003230816E-7	DEFECT	1.1507032946682788E-7	TEST	4.033618338370691E-9	DOCUMENTATION	3.8550110500262095E-10	IMPLEMENTATION
// pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9999998914791421	WITHOUT_CLASSIFICATION	1.0675616173697235E-7	DESIGN	1.152373958915336E-9	IMPLEMENTATION	3.2613635617458703E-10	DEFECT	2.1173985009596175E-10	DOCUMENTATION	7.444585275955141E-11	TEST
// perform the actual work	WITHOUT_CLASSIFICATION	0.9999993752213743	WITHOUT_CLASSIFICATION	2.4337132339708986E-7	DEFECT	2.3322175100152335E-7	DESIGN	1.256772710073545E-7	IMPLEMENTATION	2.07978083712954E-8	DOCUMENTATION	1.7104720072727562E-9	TEST
// if everything went ok, commit the transaction and close the obtained // connection handle...	WITHOUT_CLASSIFICATION	0.9999913242031059	WITHOUT_CLASSIFICATION	6.5816637405237164E-6	IMPLEMENTATION	1.9995913831322804E-6	DESIGN	4.415014226259689E-8	DOCUMENTATION	2.9528854831777135E-8	DEFECT	2.086277328659104E-8	TEST
// at some point the processing went bad, so we need to: //      1) make sure the connection handle gets released //      2) try to cleanup the JTA context as much as possible	WITHOUT_CLASSIFICATION	0.9995224037361432	WITHOUT_CLASSIFICATION	4.226936384422614E-4	DESIGN	2.2526259788935417E-5	DOCUMENTATION	1.7199671286315915E-5	DEFECT	8.371288117856736E-6	IMPLEMENTATION	6.805406221318973E-6	TEST
// finally handle the exception	WITHOUT_CLASSIFICATION	0.9999725695097368	WITHOUT_CLASSIFICATION	2.3451294983726583E-5	DESIGN	3.741134794711632E-6	DEFECT	1.8936173908629064E-7	IMPLEMENTATION	4.4913821764818454E-8	DOCUMENTATION	3.784923825047166E-9	TEST
// a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.9986879567431917	WITHOUT_CLASSIFICATION	0.0013120139159432723	DESIGN	2.0717789968932807E-8	DEFECT	7.207755470518383E-9	IMPLEMENTATION	8.40850613264188E-10	DOCUMENTATION	5.744689571503721E-10	TEST
//saveOrUpdateCopy() is deprecated!	WITHOUT_CLASSIFICATION	0.9999979426477681	WITHOUT_CLASSIFICATION	1.1026470038429826E-6	DESIGN	8.935213117583287E-7	DEFECT	2.848023610336621E-8	DOCUMENTATION	1.699264266001105E-8	TEST	1.571103746126235E-8	IMPLEMENTATION
// collectionPersister should not be null, but we don't want to throw // an exception if it is null	WITHOUT_CLASSIFICATION	0.999749701689123	WITHOUT_CLASSIFICATION	1.6644115749973241E-4	DESIGN	8.374464373634517E-5	DEFECT	1.1212791866108915E-7	TEST	3.38481367066608E-10	DOCUMENTATION	4.3240909365931544E-11	IMPLEMENTATION
// otherwise a null or brand new collection // this will also (inefficiently) handle arrays, which // have no snapshot, so we can't do any better //processArrayOrNewCollection(collection, type);	WITHOUT_CLASSIFICATION	0.923264735861017	WITHOUT_CLASSIFICATION	0.0767346020522939	DESIGN	4.650403354694144E-7	DOCUMENTATION	1.8326947272418574E-7	DEFECT	9.592180151690927E-9	IMPLEMENTATION	4.184700691939791E-9	TEST
// a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.9998796916955022	WITHOUT_CLASSIFICATION	1.2029007099880228E-4	DESIGN	1.5560241616893655E-8	DEFECT	1.874900678258699E-9	IMPLEMENTATION	7.602431305189713E-10	DOCUMENTATION	3.811363557231955E-11	TEST
//do nothing	WITHOUT_CLASSIFICATION	0.9999967150183862	WITHOUT_CLASSIFICATION	1.7560377964100316E-6	DESIGN	8.997106066850888E-7	DEFECT	3.715755396519551E-7	DOCUMENTATION	1.492455874532613E-7	IMPLEMENTATION	1.0841208358670755E-7	TEST
//do nothing	WITHOUT_CLASSIFICATION	0.9999967150183862	WITHOUT_CLASSIFICATION	1.7560377964100316E-6	DESIGN	8.997106066850888E-7	DEFECT	3.715755396519551E-7	DOCUMENTATION	1.492455874532613E-7	IMPLEMENTATION	1.0841208358670755E-7	TEST
//Force a substitution!	WITHOUT_CLASSIFICATION	0.9995229030177394	WITHOUT_CLASSIFICATION	4.6370442107773724E-4	DESIGN	7.024135720240502E-6	DEFECT	3.34664210562456E-6	IMPLEMENTATION	2.6234506329978773E-6	DOCUMENTATION	3.983327240867777E-7	TEST
// The user requested a "greater" (i.e. more restrictive) form of // pessimistic lock	WITHOUT_CLASSIFICATION	0.999999911656745	WITHOUT_CLASSIFICATION	6.453268102753296E-8	DEFECT	1.2173338288357234E-8	IMPLEMENTATION	6.1227977432373755E-9	DESIGN	5.324169745520025E-9	TEST	1.9026822332020864E-10	DOCUMENTATION
// the database now holds a lock + the object is flushed from the cache, // so release the soft lock	WITHOUT_CLASSIFICATION	0.9999989424148806	WITHOUT_CLASSIFICATION	1.0292511247862914E-6	DEFECT	2.283149670005534E-8	IMPLEMENTATION	5.078032934875317E-9	DESIGN	2.488713424671626E-10	TEST	1.7559365080366902E-10	DOCUMENTATION
// now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.999997415212101	WITHOUT_CLASSIFICATION	2.415130044248168E-6	IMPLEMENTATION	1.6032204331652432E-7	DESIGN	8.340856976126956E-9	DEFECT	7.850642671754176E-10	DOCUMENTATION	2.098903704780913E-10	TEST
// Search for collections by reachability, updating their role. // We don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.9978945185591815	WITHOUT_CLASSIFICATION	0.0021036689168266354	DESIGN	1.7932966561539364E-6	DEFECT	1.7101666059013516E-8	TEST	1.250098648540884E-9	DOCUMENTATION	8.755707949681239E-10	IMPLEMENTATION
// this is a situation where the entity id is assigned by a post-insert generator // and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.9999977545824931	WITHOUT_CLASSIFICATION	1.8500182516199416E-6	DEFECT	2.4985196829238235E-7	IMPLEMENTATION	1.366688291557717E-7	DESIGN	7.424676359622473E-9	TEST	1.4537814445997857E-9	DOCUMENTATION
// NOTE: we need to do the wrap here even if its not "dirty", // because collections need wrapping but changes to _them_ // don't dirty the container. Also, for versioned data, we // need to wrap before calling searchForDirtyCollections	WITHOUT_CLASSIFICATION	0.9793468259954325	WITHOUT_CLASSIFICATION	0.015643457442827993	IMPLEMENTATION	0.005003304882056972	DESIGN	5.17622464546943E-6	DEFECT	1.064106607247233E-6	TEST	1.7134842986261857E-7	DOCUMENTATION
//grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.9999667669880258	WITHOUT_CLASSIFICATION	2.3682321724429098E-5	DESIGN	7.479071802217505E-6	IMPLEMENTATION	1.2679290498137507E-6	DEFECT	5.866390116994721E-7	TEST	2.1705038618289683E-7	DOCUMENTATION
// grab its current state	WITHOUT_CLASSIFICATION	0.9999993076399599	WITHOUT_CLASSIFICATION	6.426840648406627E-7	DESIGN	2.204917625209688E-8	DEFECT	1.1977652376953585E-8	IMPLEMENTATION	1.062698594620218E-8	TEST	5.022160720949655E-9	DOCUMENTATION
// schedule the update // note that we intentionally do _not_ pass in currentPersistentState!	WITHOUT_CLASSIFICATION	0.9999993834486968	WITHOUT_CLASSIFICATION	6.031540366562978E-7	IMPLEMENTATION	1.0512343798165756E-8	DEFECT	1.6715539306935178E-9	DESIGN	1.1793804073404492E-9	DOCUMENTATION	3.398860756450159E-11	TEST
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999966025644654	WITHOUT_CLASSIFICATION	3.238812430893248E-6	DESIGN	1.398967975826177E-7	DEFECT	1.1779905482261495E-8	TEST	6.517216633101652E-9	DOCUMENTATION	4.291839540808348E-10	IMPLEMENTATION
// give the Interceptor a chance to process property values, if the properties // were modified by the Interceptor, we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9999987596793931	WITHOUT_CLASSIFICATION	1.2320590784510965E-6	DESIGN	7.0743662100806105E-9	DEFECT	9.048691673535747E-10	DOCUMENTATION	2.768245231698469E-10	TEST	5.468570125664254E-12	IMPLEMENTATION
// compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.999999953411302	WITHOUT_CLASSIFICATION	3.024338134099395E-8	DESIGN	1.260140674861186E-8	IMPLEMENTATION	3.652689795347983E-9	DEFECT	4.9779494266956394E-11	DOCUMENTATION	4.144064132591515E-11	TEST
// if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.9999902942962692	WITHOUT_CLASSIFICATION	7.449550350881318E-6	DESIGN	2.1567058217897717E-6	DEFECT	5.984845932385491E-8	TEST	3.741072886888146E-8	IMPLEMENTATION	2.188369836045992E-9	DOCUMENTATION
// increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.9939986596066233	WITHOUT_CLASSIFICATION	0.00589602440825076	DESIGN	5.985046104052165E-5	IMPLEMENTATION	2.2438804990338257E-5	DEFECT	2.159492622637671E-5	DOCUMENTATION	1.4317928686474967E-6	TEST
// check nullability but do not perform command execute // we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.9999860796339775	WITHOUT_CLASSIFICATION	1.3871700776934896E-5	DESIGN	4.1329269926183804E-8	DEFECT	2.765282985706699E-9	IMPLEMENTATION	2.547489687589237E-9	DOCUMENTATION	2.023203124155565E-9	TEST
//give the Interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.9999307363625038	WITHOUT_CLASSIFICATION	6.893307365005902E-5	DESIGN	2.896951904884163E-7	DEFECT	2.6222500798567924E-8	DOCUMENTATION	1.1364224889926838E-8	IMPLEMENTATION	3.2819299318002895E-9	TEST
//now we might need to recalculate the dirtyProperties array	WITHOUT_CLASSIFICATION	0.9598636916901431	WITHOUT_CLASSIFICATION	0.03392012344042544	DESIGN	0.006112803528094372	IMPLEMENTATION	4.5268371332534357E-5	DEFECT	3.922874119731346E-5	DOCUMENTATION	1.8884228807321442E-5	TEST
//use the current version	WITHOUT_CLASSIFICATION	0.9999805228712377	WITHOUT_CLASSIFICATION	1.669426898974478E-5	DESIGN	1.7367493538764633E-6	IMPLEMENTATION	5.848518669658782E-7	DOCUMENTATION	4.5404620674569786E-7	DEFECT	7.212344946212561E-9	TEST
// Interceptor returned null, so do the dirtycheck ourself, if possible	WITHOUT_CLASSIFICATION	0.9999999729243527	WITHOUT_CLASSIFICATION	2.207317851305734E-8	DESIGN	4.77983237791986E-9	IMPLEMENTATION	1.9422120324156624E-10	DEFECT	1.8064770390997688E-11	DOCUMENTATION	1.0350307754628152E-11	TEST
// object loaded by update()	WITHOUT_CLASSIFICATION	0.9999973159791931	WITHOUT_CLASSIFICATION	1.4924675316872471E-6	IMPLEMENTATION	1.032439587032799E-6	DEFECT	1.1384092643109057E-7	DESIGN	2.520922924636949E-8	DOCUMENTATION	2.0063532512854084E-8	TEST
// dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.9992002642356075	WITHOUT_CLASSIFICATION	7.986638974551997E-4	IMPLEMENTATION	8.700683447441308E-7	DESIGN	8.882221819940946E-8	DEFECT	8.066302482944306E-8	DOCUMENTATION	3.2313349629739345E-8	TEST
// dirty check against the database snapshot, if possible/necessary	WITHOUT_CLASSIFICATION	0.9934986480537721	WITHOUT_CLASSIFICATION	0.006436591064198105	IMPLEMENTATION	5.2694802778079445E-5	DESIGN	1.0583248884814132E-5	DEFECT	9.65205764756035E-7	TEST	5.176246021025229E-7	DOCUMENTATION
// the Interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.9998958412287173	WITHOUT_CLASSIFICATION	7.963980430736768E-5	IMPLEMENTATION	2.43534159852506E-5	DESIGN	9.26793082046085E-8	DEFECT	4.626322145267159E-8	DOCUMENTATION	2.6608460611254302E-8	TEST
//even process null collections	WITHOUT_CLASSIFICATION	0.9999989815683628	WITHOUT_CLASSIFICATION	6.077426274513057E-7	DESIGN	2.2032434319961198E-7	IMPLEMENTATION	1.6376851113411746E-7	DEFECT	2.3319129766399434E-8	DOCUMENTATION	3.2770257095125445E-9	TEST
// get the id from the object	WITHOUT_CLASSIFICATION	0.9999965366591246	WITHOUT_CLASSIFICATION	3.3648369383509536E-6	DESIGN	7.490211723222075E-8	DEFECT	1.1129739978245324E-8	DOCUMENTATION	1.0358101541580176E-8	TEST	2.1139783589703917E-9	IMPLEMENTATION
//always do an INSERT, and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.9999961078905473	WITHOUT_CLASSIFICATION	3.603324056505611E-6	DESIGN	2.8006092609264E-7	DEFECT	5.017477823359007E-9	TEST	3.6823553774086377E-9	DOCUMENTATION	2.4636907650370815E-11	IMPLEMENTATION
//what is the version on the database?	WITHOUT_CLASSIFICATION	0.8669711864879306	WITHOUT_CLASSIFICATION	0.13191530612055605	DESIGN	8.419324536730654E-4	DEFECT	2.684384944856774E-4	IMPLEMENTATION	2.084979786602933E-6	DOCUMENTATION	1.0514635680539069E-6	TEST
/// HHH-2378	WITHOUT_CLASSIFICATION	0.9999798635631623	WITHOUT_CLASSIFICATION	1.4269991465292262E-5	DESIGN	3.7674620438151565E-6	DEFECT	1.4529278525550462E-6	IMPLEMENTATION	3.588599120527721E-7	DOCUMENTATION	2.871955638866234E-7	TEST
//will result in a SQL UPDATE:	WITHOUT_CLASSIFICATION	0.9999068005266497	WITHOUT_CLASSIFICATION	8.72016744788281E-5	DESIGN	5.805929403623678E-6	DEFECT	1.1240860753137961E-7	DOCUMENTATION	4.788127056566884E-8	TEST	3.157958971242959E-8	IMPLEMENTATION
//else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.9999385073568939	WITHOUT_CLASSIFICATION	5.6844706962729324E-5	DESIGN	3.917887234736709E-6	DOCUMENTATION	5.73700420161348E-7	DEFECT	1.281831024069896E-7	TEST	2.8165385961981345E-8	IMPLEMENTATION
// no existing row - do an insert	WITHOUT_CLASSIFICATION	0.9999564569375137	WITHOUT_CLASSIFICATION	4.146777775908367E-5	DESIGN	1.1984263145508816E-6	DEFECT	4.86480619590184E-7	IMPLEMENTATION	2.4462956523990016E-7	TEST	1.4574822797553387E-7	DOCUMENTATION
//refresh() does not pass an entityName	WITHOUT_CLASSIFICATION	0.9999150410293104	WITHOUT_CLASSIFICATION	5.9976018365436325E-5	DESIGN	1.2579342637912313E-5	IMPLEMENTATION	7.07799993237616E-6	TEST	4.918341545127558E-6	DEFECT	4.072682086944742E-7	DOCUMENTATION
//do not return a proxy! //(this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.9999411362641227	WITHOUT_CLASSIFICATION	5.73562474408129E-5	DESIGN	1.2379573558136158E-6	DEFECT	1.5566740847214433E-7	TEST	5.991142337725642E-8	DOCUMENTATION	5.3952248797776187E-8	IMPLEMENTATION
//return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.9987286945119783	WITHOUT_CLASSIFICATION	0.001253845511372248	DESIGN	1.1809878149307907E-5	DEFECT	4.636279504039401E-6	IMPLEMENTATION	5.837645129645432E-7	DOCUMENTATION	4.3005448312143967E-7	TEST
// return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.9999998204248178	WITHOUT_CLASSIFICATION	1.5666474486863716E-7	IMPLEMENTATION	2.0488671983039297E-8	DESIGN	8.624701822669946E-10	DOCUMENTATION	8.130529838078289E-10	TEST	7.462420683579978E-10	DEFECT
// return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999988888893144	WITHOUT_CLASSIFICATION	1.0158213203498404E-6	DESIGN	8.00516767014801E-8	IMPLEMENTATION	1.0701127258502266E-8	DEFECT	3.768823239014166E-9	DOCUMENTATION	7.677379664651172E-10	TEST
// this object was already loaded	WITHOUT_CLASSIFICATION	0.9996089111684271	WITHOUT_CLASSIFICATION	3.6655136072554384E-4	DESIGN	1.8347815753863696E-5	IMPLEMENTATION	5.18996811062512E-6	DEFECT	5.814933255841819E-7	TEST	4.181936572887937E-7	DOCUMENTATION
// Entity was found in second-level cache...	WITHOUT_CLASSIFICATION	0.9988497815087762	WITHOUT_CLASSIFICATION	0.0011050823944338429	DESIGN	4.365431054064126E-5	DEFECT	1.1186478168298202E-6	DOCUMENTATION	2.4730051051804307E-7	IMPLEMENTATION	1.1583792206616926E-7	TEST
// make it circular-reference safe	WITHOUT_CLASSIFICATION	0.999991387088014	WITHOUT_CLASSIFICATION	5.420202326319178E-6	DEFECT	3.0349897512155385E-6	IMPLEMENTATION	6.091664177934248E-8	DOCUMENTATION	5.02133250543341E-8	DESIGN	4.658994152687146E-8	TEST
// intializes result by side-effect	WITHOUT_CLASSIFICATION	0.9999998742134814	WITHOUT_CLASSIFICATION	6.694855842019692E-8	DEFECT	5.832307084290972E-8	DESIGN	2.691161455310611E-10	TEST	2.3359181147083075E-10	DOCUMENTATION	1.2181467522839537E-11	IMPLEMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Pre-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999995916686107	WITHOUT_CLASSIFICATION	3.4374703662753594E-6	DEFECT	2.8324628288064196E-7	IMPLEMENTATION	1.8841882369203868E-7	DESIGN	1.1348119627709331E-7	DOCUMENTATION	6.069722386994294E-8	TEST
//some statistics	WITHOUT_CLASSIFICATION	0.9995385571402293	WITHOUT_CLASSIFICATION	4.2292750049027317E-4	DESIGN	2.494809676628907E-5	IMPLEMENTATION	8.35489661711645E-6	DOCUMENTATION	3.7830420058078804E-6	DEFECT	1.429323891154427E-6	TEST
//safe from concurrent modification because of how entryList() is implemented on IdentityMap	WITHOUT_CLASSIFICATION	0.999392953137545	WITHOUT_CLASSIFICATION	2.806372205145713E-4	DEFECT	2.2855389085296295E-4	IMPLEMENTATION	9.591919072747255E-5	DESIGN	1.8221550605817589E-6	DOCUMENTATION	1.1440529950812938E-7	TEST
// Initialize dirty flags for arrays + collections with composite elements // and reset reached, doupdate, etc.	WITHOUT_CLASSIFICATION	0.9999944466011349	WITHOUT_CLASSIFICATION	5.489811649306738E-6	IMPLEMENTATION	6.31074260712079E-8	DEFECT	2.542821695288842E-10	DESIGN	1.8647627509177133E-10	TEST	3.9031367918828076E-11	DOCUMENTATION
// Among other things, updateReachables() will recursively load all // collections that are moving roles. This might cause entities to // be loaded.	WITHOUT_CLASSIFICATION	0.9969685429967907	WITHOUT_CLASSIFICATION	0.0027445281024607734	DESIGN	2.4492548351793934E-4	DEFECT	4.197861326945987E-5	IMPLEMENTATION	2.1574865877437122E-8	TEST	3.2290953401296865E-9	DOCUMENTATION
// So this needs to be safe from concurrent modification problems. // It is safe because of how IdentityMap implements entrySet()	WITHOUT_CLASSIFICATION	0.7195487205915164	DESIGN	0.21628700309219123	WITHOUT_CLASSIFICATION	0.04440489877963111	DEFECT	0.0192431757735928	IMPLEMENTATION	5.149020255833698E-4	DOCUMENTATION	1.2997374851705064E-6	TEST
// Update the status of the object and if necessary, schedule an update	WITHOUT_CLASSIFICATION	0.9999997043299117	WITHOUT_CLASSIFICATION	2.895170510939803E-7	DESIGN	3.067685810420197E-9	DEFECT	2.2275455787874504E-9	IMPLEMENTATION	5.252405834122119E-10	DOCUMENTATION	3.3256522504169145E-10	TEST
// Schedule updates to collections:	WITHOUT_CLASSIFICATION	0.9999916603757412	WITHOUT_CLASSIFICATION	7.3657639169787184E-6	IMPLEMENTATION	6.486281369957519E-7	DEFECT	2.896957255718884E-7	DESIGN	2.4492293552292255E-8	TEST	1.1044185834796521E-8	DOCUMENTATION
// we need to lock the collection caches before // executing entity inserts/updates in order to // account for bidi associations	WITHOUT_CLASSIFICATION	0.9999965031927659	WITHOUT_CLASSIFICATION	1.6132311298572658E-6	DEFECT	9.678792178992807E-7	TEST	7.615561279178024E-7	DESIGN	1.124169481405123E-7	IMPLEMENTATION	4.1723810132876946E-8	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Post-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999966745923935	WITHOUT_CLASSIFICATION	2.2449361496484944E-6	DEFECT	6.899484337340005E-7	IMPLEMENTATION	2.043336526910857E-7	DOCUMENTATION	1.0800705895143485E-7	TEST	7.81823115409289E-8	DESIGN
//the database has changed now, so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.9999996539999015	WITHOUT_CLASSIFICATION	3.2248987973503487E-7	IMPLEMENTATION	1.9761627234044625E-8	DESIGN	1.990082807171293E-9	DEFECT	1.3055591459972328E-9	TEST	4.529493986661202E-10	DOCUMENTATION
//if the collection is dereferenced, remove from the session cache //iter.remove(); //does not work, since the entrySet is not backed by the set	WITHOUT_CLASSIFICATION	0.9999912817985568	WITHOUT_CLASSIFICATION	8.379203749404818E-6	DEFECT	3.3797139597680933E-7	DESIGN	1.0040172312813758E-9	TEST	2.2040580391626723E-11	DOCUMENTATION	2.4005275577120394E-13	IMPLEMENTATION
//otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9991048371238439	WITHOUT_CLASSIFICATION	8.525222375127768E-4	DESIGN	4.180381935495957E-5	IMPLEMENTATION	4.1226540821688574E-7	DEFECT	3.352911682019527E-7	TEST	8.926271195172427E-8	DOCUMENTATION
//get a snapshot	WITHOUT_CLASSIFICATION	0.9999056971532848	WITHOUT_CLASSIFICATION	8.408427619274747E-5	DESIGN	5.246298190652171E-6	IMPLEMENTATION	3.6724145285104017E-6	DEFECT	8.180933549555551E-7	TEST	4.81764448320284E-7	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999871067426811	WITHOUT_CLASSIFICATION	1.2745280853464567E-5	DESIGN	7.615002366132945E-8	DEFECT	5.4310158137559605E-8	DOCUMENTATION	9.275534529496071E-9	IMPLEMENTATION	8.240749023766833E-9	TEST
/* package-private */	WITHOUT_CLASSIFICATION	0.9999871067426811	WITHOUT_CLASSIFICATION	1.2745280853464567E-5	DESIGN	7.615002366132945E-8	DEFECT	5.4310158137559605E-8	DOCUMENTATION	9.275534529496071E-9	IMPLEMENTATION	8.240749023766833E-9	TEST
// key is an entity involved with the operation performed by the listener; // value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.999999721302426	WITHOUT_CLASSIFICATION	2.1304796118825226E-7	DEFECT	6.488171681271252E-8	TEST	3.6190476403308184E-10	DESIGN	2.2970449137979536E-10	IMPLEMENTATION	1.76286830486786E-10	DOCUMENTATION
// EARLY EXIT!!!	WITHOUT_CLASSIFICATION	0.9999816890676662	WITHOUT_CLASSIFICATION	9.16916116842719E-6	DEFECT	6.705589983273953E-6	IMPLEMENTATION	1.6372250667954557E-6	DESIGN	4.576490584389277E-7	DOCUMENTATION	3.4130705695565867E-7	TEST
//ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.9999455656356209	WITHOUT_CLASSIFICATION	4.714252399081841E-5	DESIGN	5.015843975360604E-6	DEFECT	2.0239728921667926E-6	IMPLEMENTATION	2.3636110398296647E-7	DOCUMENTATION	1.5662416775037144E-8	TEST
// before any callbacks, etc, so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.999999544286242	WITHOUT_CLASSIFICATION	4.19149517551106E-7	DESIGN	3.550455992946982E-8	DEFECT	6.407181360763408E-10	DOCUMENTATION	2.3814514986826684E-10	TEST	1.808171242371362E-10	IMPLEMENTATION
// Ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.9999999927573173	WITHOUT_CLASSIFICATION	4.575687113856068E-9	IMPLEMENTATION	1.9566204776514224E-9	DEFECT	5.895550869124896E-10	DESIGN	6.652805078923861E-11	DOCUMENTATION	5.4292133329058216E-11	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// cascade-delete to collections BEFORE the collection owner is deleted	WITHOUT_CLASSIFICATION	0.9999501383818662	WITHOUT_CLASSIFICATION	4.9269012086401004E-5	IMPLEMENTATION	4.50026236752756E-7	DEFECT	1.2853229656774868E-7	DESIGN	1.0350379024535653E-8	TEST	3.69713515156046E-9	DOCUMENTATION
// cascade-delete to many-to-one AFTER the parent was deleted	WITHOUT_CLASSIFICATION	0.9999921775989598	WITHOUT_CLASSIFICATION	4.036645222083104E-6	DESIGN	3.386702635644442E-6	IMPLEMENTATION	3.5164791899378857E-7	DEFECT	4.1025394642340763E-8	DOCUMENTATION	6.379868933288911E-9	TEST
// if it is an initialized proxy, let cascade // handle it later on	WITHOUT_CLASSIFICATION	0.9999872062588117	WITHOUT_CLASSIFICATION	1.2227725776135847E-5	DESIGN	2.579354291979525E-7	IMPLEMENTATION	2.3005407817233504E-7	TEST	7.418482904353331E-8	DEFECT	3.84107575626175E-9	DOCUMENTATION
//assign the requested id to the proxy, *before* //reassociating the proxy	WITHOUT_CLASSIFICATION	0.9996828343673061	WITHOUT_CLASSIFICATION	2.8910937497374765E-4	DESIGN	1.6031264694841508E-5	DEFECT	9.087224339751914E-6	TEST	2.840255485066694E-6	DOCUMENTATION	9.751320058262504E-8	IMPLEMENTATION
// an uninitialized proxy, noop, don't even need to // return an id, since it is never a save()	WITHOUT_CLASSIFICATION	0.9999999810628062	WITHOUT_CLASSIFICATION	1.7664167016578416E-8	DESIGN	6.446615570811821E-10	DEFECT	4.0023707386488854E-10	IMPLEMENTATION	1.8041726204660368E-10	DOCUMENTATION	4.7710997006370974E-11	TEST
//initialize properties of the event:	WITHOUT_CLASSIFICATION	0.9999978912067906	WITHOUT_CLASSIFICATION	8.006017723659259E-7	DEFECT	4.766111442049331E-7	IMPLEMENTATION	4.3038724052331784E-7	DESIGN	2.6742027231323874E-7	TEST	1.3377277981936357E-7	DOCUMENTATION
//return the id in the event object	WITHOUT_CLASSIFICATION	0.9999272333004077	WITHOUT_CLASSIFICATION	6.789079008945326E-5	DESIGN	4.3462833118170695E-6	DEFECT	4.516681329871864E-7	DOCUMENTATION	4.669324100616339E-8	IMPLEMENTATION	3.126481699751367E-8	TEST
//TRANSIENT or DELETED	WITHOUT_CLASSIFICATION	0.9999967892829865	WITHOUT_CLASSIFICATION	2.3647449710897793E-6	DESIGN	3.2111120410301453E-7	IMPLEMENTATION	2.2247418223641596E-7	DEFECT	2.1036727738730385E-7	DOCUMENTATION	9.201937872206517E-8	TEST
// use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.999992869185752	WITHOUT_CLASSIFICATION	6.200217744556211E-6	DESIGN	6.777887655988717E-7	IMPLEMENTATION	2.21262131438064E-7	DOCUMENTATION	2.7292120563816555E-8	DEFECT	4.253485767422697E-9	TEST
// assume this is a newly instantiated transient object // which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.6275025576055315	WITHOUT_CLASSIFICATION	0.37247462448222174	DESIGN	2.1362225124599995E-5	DEFECT	7.656548568313212E-7	TEST	4.980872516368633E-7	DOCUMENTATION	1.9194501397491648E-7	IMPLEMENTATION
// this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.9999512762304238	WITHOUT_CLASSIFICATION	2.3950195647817282E-5	DESIGN	1.9985830311738272E-5	DEFECT	4.5842941699694536E-6	IMPLEMENTATION	1.7548915091011788E-7	TEST	2.7960295645350887E-8	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999995182872342	WITHOUT_CLASSIFICATION	3.989175652052709E-7	IMPLEMENTATION	8.110750546171986E-8	DEFECT	1.525556054508164E-9	DESIGN	1.3005456377651338E-10	DOCUMENTATION	3.208446968207471E-11	TEST
//cachedState,	WITHOUT_CLASSIFICATION	0.9999187017094089	WITHOUT_CLASSIFICATION	6.926240177825406E-5	DESIGN	7.54290985199817E-6	IMPLEMENTATION	2.3655995492990456E-6	DEFECT	1.4860613363150628E-6	DOCUMENTATION	6.413180752598309E-7	TEST
//assume true, since we don't really know, and it doesn't matter	WITHOUT_CLASSIFICATION	0.9999818502815426	WITHOUT_CLASSIFICATION	1.0027911222192352E-5	DESIGN	7.638764944977725E-6	DEFECT	3.5299413231927207E-7	DOCUMENTATION	1.215755301504076E-7	TEST	8.472627647593267E-9	IMPLEMENTATION
//a "detached" collection!	WITHOUT_CLASSIFICATION	0.9996955376908708	WITHOUT_CLASSIFICATION	2.72946050872044E-4	DESIGN	2.0095823257964146E-5	DEFECT	1.0541654713351187E-5	IMPLEMENTATION	6.598123137489899E-7	DOCUMENTATION	2.1896797216975603E-7	TEST
// if the collection belonged to a different entity, // clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.999979897583766	WITHOUT_CLASSIFICATION	2.003761057046087E-5	DESIGN	5.7246929649401205E-8	DEFECT	3.4126111669306424E-9	TEST	2.9952903413458826E-9	IMPLEMENTATION	1.150832276288811E-9	DOCUMENTATION
//log.debug( "calling onLoad()" );	WITHOUT_CLASSIFICATION	0.9999981034220259	WITHOUT_CLASSIFICATION	1.370670377140387E-6	DEFECT	2.7234082251411277E-7	DESIGN	2.139922306120948E-7	IMPLEMENTATION	2.8281430125268833E-8	DOCUMENTATION	1.1293113614286609E-8	TEST
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999548614947756	WITHOUT_CLASSIFICATION	1.6147221401992978E-5	IMPLEMENTATION	1.3574388437419566E-5	DESIGN	1.2331304657480556E-5	DEFECT	1.9985021700112266E-6	DOCUMENTATION	1.087088557374768E-6	TEST
// note: performExecutions() clears all collectionXxxxtion  // collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.9848348176896635	WITHOUT_CLASSIFICATION	0.012061604485873383	IMPLEMENTATION	0.001977465669962346	DEFECT	0.0011228744770068538	DESIGN	2.680979795913513E-6	DOCUMENTATION	5.566976979500569E-7	TEST
// if no array holder we found an unwrappered array (this can't occur, // because we now always call wrap() before getting to here) // return (ah==null) ? true : searchForDirtyCollections(ah, type);	WITHOUT_CLASSIFICATION	0.9998990481676935	WITHOUT_CLASSIFICATION	5.7934833476209184E-5	DESIGN	4.300260210567806E-5	DEFECT	1.2090704124699041E-8	IMPLEMENTATION	1.6012068273077153E-9	DOCUMENTATION	7.048135944625264E-10	TEST
// if not wrappered yet, its dirty (this can't occur, because // we now always call wrap() before getting to here) // return ( ! (obj instanceof PersistentCollection) ) ? //true : searchForDirtyCollections( (PersistentCollection) obj, type );	WITHOUT_CLASSIFICATION	0.9863978967619375	DESIGN	0.012323025980607366	WITHOUT_CLASSIFICATION	0.001278620852292677	DEFECT	3.7730816324117187E-7	IMPLEMENTATION	4.501793535314916E-8	DOCUMENTATION	3.407906385132932E-8	TEST
//we need to check even if it was not initialized, because of delayed adds!	WITHOUT_CLASSIFICATION	0.996654615038629	WITHOUT_CLASSIFICATION	0.0032356892095578333	IMPLEMENTATION	7.971707939627307E-5	DOCUMENTATION	2.557332655278716E-5	DESIGN	2.871958238910515E-6	TEST	1.5333876252340732E-6	DEFECT
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9997132520395458	WITHOUT_CLASSIFICATION	1.4971880992674226E-4	IMPLEMENTATION	6.380418144027607E-5	DEFECT	6.197711257505333E-5	DESIGN	6.352392537286611E-6	DOCUMENTATION	4.895463974962895E-6	TEST
// find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.9998373980512058	WITHOUT_CLASSIFICATION	1.5881025056472522E-4	DESIGN	3.467548723216171E-6	IMPLEMENTATION	1.7155254345929756E-7	DEFECT	8.218908425668367E-8	TEST	7.040787865413639E-8	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999548614947756	WITHOUT_CLASSIFICATION	1.6147221401992978E-5	IMPLEMENTATION	1.3574388437419566E-5	DESIGN	1.2331304657480556E-5	DEFECT	1.9985021700112266E-6	DOCUMENTATION	1.087088557374768E-6	TEST
// Check the persistence context for an entry relating to this // entity to be merged...	WITHOUT_CLASSIFICATION	0.999297858865546	WITHOUT_CLASSIFICATION	7.018397046746142E-4	DESIGN	2.1394193647877365E-7	IMPLEMENTATION	3.193830473484973E-8	TEST	3.09257088287313E-8	DOCUMENTATION	2.4623829341958107E-8	DEFECT
// we have specialized case of a detached entity from the // perspective of the merge operation.  Specifically, we // have an incoming entity instance which has a corresponding // entry in the current persistence context, but registered // under a different entity instance	WITHOUT_CLASSIFICATION	0.9999780624112238	WITHOUT_CLASSIFICATION	2.0085725901379064E-5	DESIGN	1.8268221448214552E-6	DEFECT	2.5014829104442234E-8	DOCUMENTATION	1.7778900313787273E-11	IMPLEMENTATION	8.122019444217787E-12	TEST
//DELETED	WITHOUT_CLASSIFICATION	0.999842063561029	WITHOUT_CLASSIFICATION	1.407448003417631E-4	DESIGN	5.803921148757846E-6	DEFECT	4.489079637819102E-6	IMPLEMENTATION	3.8142847979912567E-6	DOCUMENTATION	3.0843530446399927E-6	TEST
//before cascade!	WITHOUT_CLASSIFICATION	0.9999804670697647	WITHOUT_CLASSIFICATION	7.859946275836616E-6	DESIGN	7.062698124645313E-6	IMPLEMENTATION	3.958723877945213E-6	DEFECT	5.404632530290772E-7	DOCUMENTATION	1.1109870398192349E-7	TEST
// cascade first, so that all unsaved objects get their // copy created before we actually copy //cascadeOnMerge(event, persister, entity, copyCache, Cascades.CASCADE_BEFORE_MERGE);	WITHOUT_CLASSIFICATION	0.9999999063362475	WITHOUT_CLASSIFICATION	4.886752934894093E-8	IMPLEMENTATION	4.3900079556058566E-8	DESIGN	6.400318053072936E-10	DOCUMENTATION	2.044434403967214E-10	TEST	5.166832445772069E-11	DEFECT
//this bit is only *really* absolutely necessary for handling //requestedId, but is also good if we merge multiple object //graphs, since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.5578177419272302	WITHOUT_CLASSIFICATION	0.44217120710181795	DESIGN	6.509042376344333E-6	IMPLEMENTATION	4.384440747862495E-6	TEST	9.248975458426931E-8	DEFECT	6.499807304101658E-8	DOCUMENTATION
// continue...; we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.892020769694391	WITHOUT_CLASSIFICATION	0.1075489576753211	DESIGN	4.1071221727065723E-4	DEFECT	1.8061431422105294E-5	IMPLEMENTATION	1.385467863238777E-6	TEST	1.1351373182120934E-7	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999958476994051	WITHOUT_CLASSIFICATION	3.9342502380617604E-6	DESIGN	1.8794745333541206E-7	IMPLEMENTATION	1.0654127997889268E-8	DEFECT	1.0648897615781842E-8	DOCUMENTATION	8.79987802655834E-9	TEST
// check that entity id = requestedId	WITHOUT_CLASSIFICATION	0.9984789747368543	WITHOUT_CLASSIFICATION	0.0015159944040315926	IMPLEMENTATION	2.9772603392129416E-6	DESIGN	1.5848064172211065E-6	TEST	2.387067080566925E-7	DOCUMENTATION	2.3008564963262687E-7	DEFECT
//before cascade!	WITHOUT_CLASSIFICATION	0.9999804670697647	WITHOUT_CLASSIFICATION	7.859946275836616E-6	DESIGN	7.062698124645313E-6	IMPLEMENTATION	3.958723877945213E-6	DEFECT	5.404632530290772E-7	DOCUMENTATION	1.1109870398192349E-7	TEST
// we got here because we assumed that an instance // with an assigned id was detached, when it was // really persistent	WITHOUT_CLASSIFICATION	0.9999996929116123	WITHOUT_CLASSIFICATION	3.0355120849051273E-7	DESIGN	1.2852814983325462E-9	DOCUMENTATION	1.1759532079721836E-9	TEST	1.0648720640228442E-9	DEFECT	1.1072471997000191E-11	IMPLEMENTATION
// cascade first, so that all unsaved objects get their  // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999956678788912	WITHOUT_CLASSIFICATION	3.662984087240808E-6	DESIGN	6.206680719524816E-7	IMPLEMENTATION	2.092606403646325E-8	DOCUMENTATION	1.4220926979896926E-8	DEFECT	1.3321958708238769E-8	TEST
//copyValues works by reflection, so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.9971415807788557	WITHOUT_CLASSIFICATION	0.0018305386458105193	DESIGN	0.001018190520319115	DEFECT	5.038484886537721E-6	DOCUMENTATION	4.403884305869424E-6	IMPLEMENTATION	2.476858221692059E-7	TEST
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999506327904486	WITHOUT_CLASSIFICATION	2.623346862874905E-5	IMPLEMENTATION	1.5348491926971078E-5	DESIGN	5.28831053362673E-6	DEFECT	1.5689233725486474E-6	DOCUMENTATION	9.280150895671198E-7	TEST
//source.getBatcher().executeBatch(); //found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.999998551124227	WITHOUT_CLASSIFICATION	1.444858614231591E-6	DESIGN	2.5690701191198205E-9	IMPLEMENTATION	6.819149527805045E-10	DEFECT	6.12419374136665E-10	DOCUMENTATION	1.5375440974745078E-10	TEST
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999966025644654	WITHOUT_CLASSIFICATION	3.238812430893248E-6	DESIGN	1.398967975826177E-7	DEFECT	1.1779905482261495E-8	TEST	6.517216633101652E-9	DOCUMENTATION	4.291839540808348E-10	IMPLEMENTATION
//now done in EntityIdentityInsertAction //persister.setIdentifier( entity, id, source.getEntityMode() );	WITHOUT_CLASSIFICATION	0.9999999406326893	WITHOUT_CLASSIFICATION	5.7140940345500176E-8	DESIGN	1.0609464242153011E-9	DEFECT	6.59744346168163E-10	DOCUMENTATION	4.03760332695853E-10	IMPLEMENTATION	1.0191930077833383E-10	TEST
//source.getPersistenceContext().removeNonExist( new EntityKey( id, persister, source.getEntityMode() ) );	WITHOUT_CLASSIFICATION	0.9999978798491657	WITHOUT_CLASSIFICATION	2.0856144832077748E-6	DESIGN	1.4278909642199007E-8	IMPLEMENTATION	9.465315395189298E-9	DEFECT	5.7231930875472E-9	DOCUMENTATION	5.068932968642803E-9	TEST
//keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.9998300568494914	WITHOUT_CLASSIFICATION	1.6806762865820694E-4	DESIGN	1.3821758971580835E-6	DEFECT	2.4034405976311E-7	DOCUMENTATION	2.3257109253841296E-7	IMPLEMENTATION	2.0430801002222944E-8	TEST
// cascade-save to many-to-one BEFORE the parent is saved	WITHOUT_CLASSIFICATION	0.999229849590989	WITHOUT_CLASSIFICATION	4.434864429003792E-4	IMPLEMENTATION	2.2371390396884585E-4	DEFECT	1.0000901761778891E-4	DESIGN	2.5744452250765226E-6	DOCUMENTATION	3.6659929883730743E-7	TEST
//pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.9999993270438684	WITHOUT_CLASSIFICATION	6.588304702615889E-7	DESIGN	7.888066266912884E-9	DOCUMENTATION	5.570895951079374E-9	TEST	6.537519574290843E-10	DEFECT	1.294720738474133E-11	IMPLEMENTATION
// the object is persistent	WITHOUT_CLASSIFICATION	0.9999842982726284	WITHOUT_CLASSIFICATION	1.1127678623302987E-5	DESIGN	3.5973074633292162E-6	IMPLEMENTATION	6.309779279080903E-7	DEFECT	2.3108122552839596E-7	TEST	1.1468213152564142E-7	DOCUMENTATION
//the entity is associated with the session, so check its status	WITHOUT_CLASSIFICATION	0.9999764561808415	WITHOUT_CLASSIFICATION	1.338459932088742E-5	DESIGN	9.329130843805415E-6	IMPLEMENTATION	4.984294647559897E-7	TEST	3.2561996715234365E-7	DOCUMENTATION	6.039561965808402E-9	DEFECT
// do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.9999997934361299	WITHOUT_CLASSIFICATION	1.5268350738021793E-7	DESIGN	2.9128152493644366E-8	DEFECT	1.2209802674601078E-8	IMPLEMENTATION	8.11394165030451E-9	DOCUMENTATION	4.4284658816231235E-9	TEST
//ie. e.status==DELETED	WITHOUT_CLASSIFICATION	0.9999797863877223	WITHOUT_CLASSIFICATION	1.965402336778543E-5	DESIGN	3.4418441414250136E-7	IMPLEMENTATION	7.681113832059117E-8	DOCUMENTATION	7.025340084778797E-8	TEST	6.83399566983307E-8	DEFECT
// the object is transient or detached	WITHOUT_CLASSIFICATION	0.9998650355527197	WITHOUT_CLASSIFICATION	1.0912985147944153E-4	IMPLEMENTATION	2.4784568063151706E-5	DESIGN	6.749203837842172E-7	DEFECT	2.953619912736771E-7	DOCUMENTATION	7.974536266407028E-8	TEST
//NOTE EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999574717240705	WITHOUT_CLASSIFICATION	1.8486333213875602E-5	IMPLEMENTATION	1.4792960895212008E-5	DESIGN	6.436719218791493E-6	DEFECT	1.6273373582222645E-6	DOCUMENTATION	1.1849252434038304E-6	TEST
// Private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.9999913028624894	WITHOUT_CLASSIFICATION	8.281630398572227E-6	DESIGN	3.7404834465069576E-7	IMPLEMENTATION	2.148904224474464E-8	TEST	1.1327982631324693E-8	DEFECT	8.641742503656945E-9	DOCUMENTATION
// First, try to find a matching constructor accepting a ViolatedConstraintNameExtracter param...	WITHOUT_CLASSIFICATION	0.9997820823835194	WITHOUT_CLASSIFICATION	2.1468967275118666E-4	IMPLEMENTATION	2.4529264444688836E-6	DESIGN	5.260697968828865E-7	TEST	2.427911287071751E-7	DEFECT	6.156359178291861E-9	DOCUMENTATION
// eat it and try next	WITHOUT_CLASSIFICATION	0.9995607530384005	WITHOUT_CLASSIFICATION	3.389799317248567E-4	DESIGN	9.043094355258967E-5	DEFECT	6.941427291777281E-6	IMPLEMENTATION	1.744691667633777E-6	DOCUMENTATION	1.1499673626013758E-6	TEST
// Otherwise, try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.9999742531496193	WITHOUT_CLASSIFICATION	2.476151739816591E-5	IMPLEMENTATION	9.678475427806393E-7	DESIGN	1.3550604940750148E-8	DOCUMENTATION	2.72356917949942E-9	TEST	1.2112656109676871E-9	DEFECT
// oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.9999436802347287	WITHOUT_CLASSIFICATION	2.869232473760518E-5	DESIGN	2.677679775613578E-5	IMPLEMENTATION	3.3439147234524296E-7	DEFECT	2.7321389904619543E-7	TEST	2.430374062891382E-7	DOCUMENTATION
// CollectionPropertyMapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.9999994116207478	WITHOUT_CLASSIFICATION	2.965955147186654E-7	DESIGN	2.754741764965899E-7	DEFECT	7.005879984407424E-9	TEST	5.1970535178722345E-9	IMPLEMENTATION	4.106627593665846E-9	DOCUMENTATION
// remove initial ", "	WITHOUT_CLASSIFICATION	0.9999975229840329	WITHOUT_CLASSIFICATION	2.2805500302261693E-6	DESIGN	1.4884873904640236E-7	DEFECT	2.804742195433667E-8	IMPLEMENTATION	1.4499044036582597E-8	TEST	5.070731845018604E-9	DOCUMENTATION
// remove initial " and "	WITHOUT_CLASSIFICATION	0.9999974683266768	WITHOUT_CLASSIFICATION	2.3814790762956915E-6	DESIGN	7.77212875690022E-8	DEFECT	6.29666062152711E-8	IMPLEMENTATION	5.116940763927969E-9	DOCUMENTATION	4.389412338196381E-9	TEST
//beforeClassTokens.add("new"); DEFINITELY DON'T HAVE THIS!!	WITHOUT_CLASSIFICATION	0.9991691611325508	WITHOUT_CLASSIFICATION	7.731367058925524E-4	DESIGN	2.5420482639760647E-5	DEFECT	2.180048283437617E-5	IMPLEMENTATION	7.70919862436744E-6	DOCUMENTATION	2.7719974582071192E-6	TEST
//notAfterClassTokens.add(",");	WITHOUT_CLASSIFICATION	0.9999530421558313	WITHOUT_CLASSIFICATION	1.917185419808343E-5	DESIGN	1.802483198008319E-5	IMPLEMENTATION	7.159360753813115E-6	DEFECT	1.3440307922886905E-6	DOCUMENTATION	1.257766444403867E-6	TEST
// just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.9999950804483105	WITHOUT_CLASSIFICATION	4.15118143531137E-6	IMPLEMENTATION	7.486896005320857E-7	DESIGN	7.259294662928321E-9	DOCUMENTATION	6.2440057991331525E-9	TEST	6.177353243098673E-9	DEFECT
//update last non-whitespace token, if necessary	WITHOUT_CLASSIFICATION	0.9999962213632277	WITHOUT_CLASSIFICATION	2.0941758758704856E-6	DEFECT	1.4885377229126666E-6	DESIGN	1.0453990222667767E-7	TEST	6.994789068689049E-8	IMPLEMENTATION	2.143538051800839E-8	DOCUMENTATION
// select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.9999968204737385	WITHOUT_CLASSIFICATION	3.0944460701545437E-6	DESIGN	7.844792330031965E-8	DEFECT	6.290469989467036E-9	TEST	2.564417824760905E-10	DOCUMENTATION	8.535639106816938E-11	IMPLEMENTATION
//scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.9999890808218789	WITHOUT_CLASSIFICATION	7.33695893571567E-6	DEFECT	1.8143065318716524E-6	DESIGN	1.1168563217602785E-6	IMPLEMENTATION	3.6598442371201653E-7	TEST	2.850719079732516E-7	DOCUMENTATION
// Note this!!	WITHOUT_CLASSIFICATION	0.9994463407748295	WITHOUT_CLASSIFICATION	4.5680919299836476E-4	DESIGN	6.911978809664548E-5	IMPLEMENTATION	1.1992970039274702E-5	TEST	7.954789163626257E-6	DEFECT	7.78248487267761E-6	DOCUMENTATION
// Error message constants.	WITHOUT_CLASSIFICATION	0.9999876007446006	WITHOUT_CLASSIFICATION	1.0533817379746243E-5	DEFECT	1.0359974069537248E-6	IMPLEMENTATION	5.347690653649437E-7	DESIGN	1.5110473495488194E-7	DOCUMENTATION	1.435668123427117E-7	TEST
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998461009767936	WITHOUT_CLASSIFICATION	1.4409001384465685E-4	IMPLEMENTATION	6.3558890272146285E-6	DESIGN	3.051594363836626E-6	DEFECT	2.7657492399805883E-7	TEST	1.2495104645026032E-7	DOCUMENTATION
// semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.991440250466831	WITHOUT_CLASSIFICATION	0.008424274473241296	DESIGN	6.450601093570354E-5	DEFECT	5.482910412720874E-5	IMPLEMENTATION	1.4794601089879627E-5	DOCUMENTATION	1.345343774999976E-6	TEST
// Handle collection-fiter compilation. // IMPORTANT NOTE: This is modifying the INPUT (HQL) tree, not the output tree!	WITHOUT_CLASSIFICATION	0.8978052601599784	WITHOUT_CLASSIFICATION	0.05728303153595912	DEFECT	0.04457023159982382	DESIGN	3.3941840329405085E-4	IMPLEMENTATION	2.0197060337260365E-6	TEST	3.859491089777829E-8	DOCUMENTATION
// Show the modified AST.	WITHOUT_CLASSIFICATION	0.999186348326957	WITHOUT_CLASSIFICATION	6.569662372651385E-4	IMPLEMENTATION	1.501610050135956E-4	DESIGN	4.280654209922163E-6	DEFECT	1.3743129150790803E-6	DOCUMENTATION	8.694636392859803E-7	TEST
// Create a parameter specification for the collection filter...	WITHOUT_CLASSIFICATION	0.9991872353417911	WITHOUT_CLASSIFICATION	7.970187716835037E-4	DESIGN	1.044415922481735E-5	IMPLEMENTATION	3.692988366430231E-6	DEFECT	1.1911291432774978E-6	DOCUMENTATION	4.1760979093697225E-7	TEST
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999996385259887	WITHOUT_CLASSIFICATION	2.3735947877596978E-7	DESIGN	1.1340695562374221E-7	IMPLEMENTATION	5.631227951954933E-9	TEST	3.6595303503750133E-9	DOCUMENTATION	1.4168185019314204E-9	DEFECT
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999996385259887	WITHOUT_CLASSIFICATION	2.3735947877596978E-7	DESIGN	1.1340695562374221E-7	IMPLEMENTATION	5.631227951954933E-9	TEST	3.6595303503750133E-9	DOCUMENTATION	1.4168185019314204E-9	DEFECT
// Get the names of the columns used to link between the collection // owner and the collection elements.	WITHOUT_CLASSIFICATION	0.9999851136827744	WITHOUT_CLASSIFICATION	1.4878159958794647E-5	DESIGN	4.722545433719612E-9	DOCUMENTATION	2.0391826659845167E-9	IMPLEMENTATION	1.198515159874209E-9	DEFECT	1.9702348099475665E-10	TEST
// The path AST should be a DotNode, and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.9997548628709327	WITHOUT_CLASSIFICATION	1.4943459049240806E-4	DESIGN	6.83164650130525E-5	IMPLEMENTATION	2.6702496072395628E-5	DEFECT	4.620088922223375E-7	DOCUMENTATION	2.2156859730267543E-7	TEST
// Tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9999989372404429	WITHOUT_CLASSIFICATION	7.483415989160943E-7	DESIGN	2.2741727994324243E-7	IMPLEMENTATION	6.649858133097531E-8	DEFECT	1.3313712543104751E-8	DOCUMENTATION	7.1883843867335E-9	TEST
// Re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.9999805726373024	WITHOUT_CLASSIFICATION	9.170049658620291E-6	DESIGN	7.007211670657931E-6	IMPLEMENTATION	3.242871412521729E-6	DEFECT	5.540404164367758E-9	DOCUMENTATION	1.6895516610621973E-9	TEST
// Don't forget to resolve the argument! // Resolve the collection function now.	WITHOUT_CLASSIFICATION	0.9999758094326773	WITHOUT_CLASSIFICATION	1.9920891142077478E-5	IMPLEMENTATION	2.3821149956355046E-6	DESIGN	1.0990533494970553E-6	DOCUMENTATION	7.450066750320958E-7	DEFECT	4.3501160402587644E-8	TEST
// Resolve everything up to this dot, but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.9821016119095154	WITHOUT_CLASSIFICATION	0.017453673377544932	DESIGN	4.356980609925676E-4	DEFECT	8.02601606983353E-6	IMPLEMENTATION	6.084752841541596E-7	DOCUMENTATION	3.821605930868092E-7	TEST
// Should mean that no such property was found	WITHOUT_CLASSIFICATION	0.9989479385770251	WITHOUT_CLASSIFICATION	0.0010374166469068612	DESIGN	1.3984219062503914E-5	DEFECT	3.2563241373881014E-7	DOCUMENTATION	2.3491674052317154E-7	IMPLEMENTATION	1.0000785120904665E-7	TEST
// Was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.9999857885473815	WITHOUT_CLASSIFICATION	1.07486668303967E-5	DESIGN	3.338419924848047E-6	DEFECT	6.780624111991402E-8	TEST	3.19292493012953E-8	DOCUMENTATION	2.4630372691166172E-8	IMPLEMENTATION
// Attach any mapping-defined "ORDER BY" fragments	WITHOUT_CLASSIFICATION	0.9999997327149232	WITHOUT_CLASSIFICATION	1.077899258730356E-7	IMPLEMENTATION	9.635404442841733E-8	DESIGN	4.333537085262384E-8	DEFECT	1.2337849067024044E-8	DOCUMENTATION	7.467886578396787E-9	TEST
// Use the explicitly declared select expression; determine the // return types indicated by each select token	WITHOUT_CLASSIFICATION	0.9999998449676826	WITHOUT_CLASSIFICATION	1.510750786445938E-7	DESIGN	3.9537615162871245E-9	DEFECT	2.6205550609269382E-12	DOCUMENTATION	8.436165260803624E-13	TEST	1.3114552510707616E-14	IMPLEMENTATION
// After that, process the JOINs. // Invoke a delegate to do the work, as this is farily complex.	WITHOUT_CLASSIFICATION	0.9999940177995947	WITHOUT_CLASSIFICATION	5.964412518814606E-6	DEFECT	1.1132708201293997E-8	DESIGN	3.307392369593493E-9	IMPLEMENTATION	2.342671134716564E-9	TEST	1.0051147464361576E-9	DOCUMENTATION
// Make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.9999868404983168	WITHOUT_CLASSIFICATION	8.513568482895814E-6	IMPLEMENTATION	4.60793275127211E-6	DESIGN	2.871490436660018E-8	TEST	5.213118500249221E-9	DEFECT	4.072426237688837E-9	DOCUMENTATION
// We need to generate ids as part of this bulk insert. // // Note that this is only supported for sequence-style generators and // post-insert-style generators; basically, only in-db generators	WITHOUT_CLASSIFICATION	0.9999993411587251	WITHOUT_CLASSIFICATION	3.433770693047283E-7	DEFECT	1.9436172629977855E-7	IMPLEMENTATION	7.27976410096131E-8	DESIGN	4.7553223384752624E-8	TEST	7.516150006290034E-10	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999996385259887	WITHOUT_CLASSIFICATION	2.3735947877596978E-7	DESIGN	1.1340695562374221E-7	IMPLEMENTATION	5.631227951954933E-9	TEST	3.6595303503750133E-9	DOCUMENTATION	1.4168185019314204E-9	DEFECT
// We need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.9999465900311543	WITHOUT_CLASSIFICATION	3.046816299673641E-5	DEFECT	2.0896560237731817E-5	DESIGN	1.546850777703571E-6	IMPLEMENTATION	3.823963011452527E-7	DOCUMENTATION	1.1599853236524081E-7	TEST
// we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.9991380209755549	WITHOUT_CLASSIFICATION	7.668039495567685E-4	DESIGN	4.4726698609132056E-5	DEFECT	4.02122288351065E-5	IMPLEMENTATION	8.57374042616354E-6	DOCUMENTATION	1.6624070176341495E-6	TEST
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9967628008629756	WITHOUT_CLASSIFICATION	0.002368770383594325	DEFECT	5.08027465910139E-4	IMPLEMENTATION	3.6028082110407507E-4	DESIGN	8.994887799190335E-8	DOCUMENTATION	3.051753784746743E-8	TEST
// Generate implicit joins, only if necessary.	WITHOUT_CLASSIFICATION	0.9999990034633176	WITHOUT_CLASSIFICATION	8.214592013421447E-7	DESIGN	1.3069362143301388E-7	TEST	2.4971928344353992E-8	DEFECT	1.1269672333764931E-8	IMPLEMENTATION	8.142258965724072E-9	DOCUMENTATION
// Notify the FROM element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.9999983782190746	WITHOUT_CLASSIFICATION	7.610606990560804E-7	DESIGN	5.629947087803983E-7	IMPLEMENTATION	2.3533148569953388E-7	DEFECT	6.035462051162371E-8	TEST	2.0394114586867515E-9	DOCUMENTATION
// Turn off includeSubclasses on all FromElements.	WITHOUT_CLASSIFICATION	0.9998667704575974	WITHOUT_CLASSIFICATION	1.3210837337072098E-4	DESIGN	9.047968723852945E-7	DEFECT	1.2615202443938962E-7	IMPLEMENTATION	7.57099912564921E-8	DOCUMENTATION	1.4510143700726473E-8	TEST
// create the node initially with the param name so that it shows // appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.9999299365854436	WITHOUT_CLASSIFICATION	3.732697639163773E-5	DESIGN	2.2145654535168712E-5	IMPLEMENTATION	1.0110639054784122E-5	DEFECT	4.53620738791254E-7	TEST	2.6523835846295754E-8	DOCUMENTATION
// Use the delegate, resolve identifiers as FROM element aliases.	WITHOUT_CLASSIFICATION	0.9999993928990345	WITHOUT_CLASSIFICATION	3.614074805409893E-7	IMPLEMENTATION	2.4467164171834673E-7	DESIGN	6.25450968842262E-10	TEST	2.804074452609566E-10	DOCUMENTATION	1.159848142472429E-10	DEFECT
// select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.9999846665378215	WITHOUT_CLASSIFICATION	1.0249292781129239E-5	DESIGN	4.089916763096731E-6	DEFECT	7.543229910528879E-7	IMPLEMENTATION	2.363022567902463E-7	TEST	3.6273863940454493E-9	DOCUMENTATION
// no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.9998215610347451	WITHOUT_CLASSIFICATION	1.7087162053332783E-4	DESIGN	6.934450933976314E-6	IMPLEMENTATION	5.137229523094479E-7	TEST	8.713210023238446E-8	DOCUMENTATION	3.203873511720453E-8	DEFECT
// Make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.9995142646648364	WITHOUT_CLASSIFICATION	4.361835969635497E-4	DESIGN	4.816937658811328E-5	IMPLEMENTATION	8.152059729634785E-7	TEST	5.182818774081819E-7	DEFECT	4.887376155537694E-8	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998461009767936	WITHOUT_CLASSIFICATION	1.4409001384465685E-4	IMPLEMENTATION	6.3558890272146285E-6	DESIGN	3.051594363836626E-6	DEFECT	2.7657492399805883E-7	TEST	1.2495104645026032E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999996385259887	WITHOUT_CLASSIFICATION	2.3735947877596978E-7	DESIGN	1.1340695562374221E-7	IMPLEMENTATION	5.631227951954933E-9	TEST	3.6595303503750133E-9	DOCUMENTATION	1.4168185019314204E-9	DEFECT
// --Commented out by Inspection (12/11/04 10:56 AM): int getWarningCount();	WITHOUT_CLASSIFICATION	0.9999979335935625	WITHOUT_CLASSIFICATION	2.029522988376137E-6	DEFECT	1.6916046433056442E-8	IMPLEMENTATION	1.0601837563455462E-8	DOCUMENTATION	8.710552839750245E-9	DESIGN	6.550121922832554E-10	TEST
// Alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.9999998208052812	WITHOUT_CLASSIFICATION	1.4066561525511995E-7	DESIGN	2.7739784145160324E-8	IMPLEMENTATION	7.451570075413679E-9	DEFECT	3.316834536594514E-9	DOCUMENTATION	2.0914919648976332E-11	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999802621332076	WITHOUT_CLASSIFICATION	1.905017069558955E-5	DESIGN	3.4069222073100677E-7	DEFECT	1.6544158537667313E-7	IMPLEMENTATION	9.687647744350671E-8	DOCUMENTATION	8.46858133706818E-8	TEST
// make a new one	WITHOUT_CLASSIFICATION	0.999972773751563	WITHOUT_CLASSIFICATION	1.3784785166371641E-5	DESIGN	1.15239481247581E-5	DEFECT	1.2819766176071818E-6	IMPLEMENTATION	4.5883814789634826E-7	TEST	1.7670038018798956E-7	DOCUMENTATION
// just do the regular thing if you can't find the ctor // Your AST must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.9145802494950601	WITHOUT_CLASSIFICATION	0.08228051099821454	DESIGN	0.0031368232881273635	IMPLEMENTATION	1.927886129557392E-6	DOCUMENTATION	4.7287153769996054E-7	TEST	1.5460930726967462E-8	DEFECT
// Initialize SQL nodes here.	WITHOUT_CLASSIFICATION	0.999994922025836	WITHOUT_CLASSIFICATION	4.018355907455833E-6	DESIGN	6.554733627335064E-7	DEFECT	2.2060525786495028E-7	IMPLEMENTATION	1.4098510553258414E-7	TEST	4.25545304275533E-8	DOCUMENTATION
// semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998054778647021	WITHOUT_CLASSIFICATION	1.8950616328461886E-4	DESIGN	3.477811193502106E-6	DEFECT	1.179647556507733E-6	DOCUMENTATION	2.5783689401772146E-7	IMPLEMENTATION	1.0067636921606448E-7	TEST
// if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999927409939987	WITHOUT_CLASSIFICATION	6.5423848578581255E-6	IMPLEMENTATION	4.635435678331665E-7	DEFECT	2.2513815836849663E-7	DESIGN	2.1186798408022413E-8	TEST	6.752619021028401E-9	DOCUMENTATION
// this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.9999999596779876	WITHOUT_CLASSIFICATION	2.3570593778772917E-8	DESIGN	8.35402186913787E-9	IMPLEMENTATION	7.178324610212142E-9	DEFECT	1.105197462121503E-9	DOCUMENTATION	1.1387471414747017E-10	TEST
// --- Inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.9999993748613494	WITHOUT_CLASSIFICATION	5.098648555685668E-7	DESIGN	7.185892871600636E-8	DEFECT	2.290192290919615E-8	IMPLEMENTATION	1.751226518476194E-8	TEST	3.000678060765789E-9	DOCUMENTATION
// check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.9999912186659972	WITHOUT_CLASSIFICATION	8.180038731984438E-6	IMPLEMENTATION	4.26152996095178E-7	DEFECT	1.377953191426909E-7	DESIGN	3.378863449870946E-8	DOCUMENTATION	3.558321215267693E-9	TEST
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997316184170177	WITHOUT_CLASSIFICATION	2.1313449085769666E-4	DESIGN	2.4994425986067226E-5	IMPLEMENTATION	1.334445200800401E-5	DEFECT	8.599242376080556E-6	DOCUMENTATION	8.308971754592307E-6	TEST
// these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.999993813270892	WITHOUT_CLASSIFICATION	4.24907375697661E-6	IMPLEMENTATION	1.8801758396529958E-6	DESIGN	3.990596662121761E-8	TEST	1.696344104658427E-8	DOCUMENTATION	6.101036524577749E-10	DEFECT
// again, both should be FromElements	WITHOUT_CLASSIFICATION	0.9999205214099222	WITHOUT_CLASSIFICATION	7.342461208871136E-5	DESIGN	5.1986788513454034E-6	IMPLEMENTATION	6.311338817897253E-7	TEST	1.742115599293026E-7	DEFECT	4.995369602304642E-8	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9995219310424093	WITHOUT_CLASSIFICATION	3.2057822872663113E-4	DESIGN	1.1341954327470572E-4	IMPLEMENTATION	3.8775433739383854E-5	DEFECT	5.164466452150155E-6	TEST	1.3128539781220622E-7	DOCUMENTATION
// right represents a joins originating from left; or // both right and left reprersent joins originating from the same FromElement	WITHOUT_CLASSIFICATION	0.9999999344030237	WITHOUT_CLASSIFICATION	5.905298420814829E-8	DEFECT	5.146912522412984E-9	DESIGN	1.3347157304001078E-9	IMPLEMENTATION	3.220958832803965E-11	TEST	3.015428056704739E-11	DOCUMENTATION
// check a set of parent/child nodes in the from-clause tree // to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.9999998613351814	WITHOUT_CLASSIFICATION	1.2511353162415998E-7	DESIGN	1.3522239566871354E-8	DEFECT	1.4455774757244583E-11	IMPLEMENTATION	8.353882153009998E-12	DOCUMENTATION	6.237734982668351E-12	TEST
// right represents a joins originating from left...	WITHOUT_CLASSIFICATION	0.9999855284216801	WITHOUT_CLASSIFICATION	1.4205331197836128E-5	DEFECT	1.7199806898613935E-7	DESIGN	8.65319263865425E-8	IMPLEMENTATION	5.569926625388297E-9	TEST	2.1472001275680565E-9	DOCUMENTATION
// all clear	WITHOUT_CLASSIFICATION	0.999997628098699	WITHOUT_CLASSIFICATION	1.7828478740952594E-6	DESIGN	5.273917876421599E-7	IMPLEMENTATION	4.157086230895345E-8	DEFECT	1.2393423850312829E-8	DOCUMENTATION	7.697353019043924E-9	TEST
// Ignore the token class name parameter, and use a specific token class.	WITHOUT_CLASSIFICATION	0.9999956244975646	WITHOUT_CLASSIFICATION	4.347194293536612E-6	DESIGN	2.354611768428031E-8	DEFECT	4.048450277826717E-9	DOCUMENTATION	6.26362503913297E-10	IMPLEMENTATION	8.721143481379496E-11	TEST
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9971199613563878	WITHOUT_CLASSIFICATION	0.0028587858141344144	DESIGN	1.029735299270644E-5	IMPLEMENTATION	3.965483105753431E-6	DEFECT	3.56883954199879E-6	TEST	3.4211538372160007E-6	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9971199613563878	WITHOUT_CLASSIFICATION	0.0028587858141344144	DESIGN	1.029735299270644E-5	IMPLEMENTATION	3.965483105753431E-6	DEFECT	3.56883954199879E-6	TEST	3.4211538372160007E-6	DOCUMENTATION
// remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.9984389615341535	WITHOUT_CLASSIFICATION	0.0015543623853094505	DESIGN	4.299493365073869E-6	DEFECT	2.2028072632890137E-6	IMPLEMENTATION	1.460905244864314E-7	TEST	2.7689384433907037E-8	DOCUMENTATION
// don't care about other param types here, just those explicitly user-defined...	WITHOUT_CLASSIFICATION	0.998376359603585	WITHOUT_CLASSIFICATION	0.0016236154096458937	DESIGN	1.2846315129338483E-8	TEST	1.1519425659639372E-8	DEFECT	5.034420352499847E-10	DOCUMENTATION	1.1758642418406615E-10	IMPLEMENTATION
// If the query is already compiled, skip the compilation.	WITHOUT_CLASSIFICATION	0.9877809363334533	WITHOUT_CLASSIFICATION	0.012202903997557534	IMPLEMENTATION	1.4921434929155182E-5	DEFECT	1.0988316672882275E-6	DESIGN	7.611870042312916E-8	DOCUMENTATION	6.328369217748834E-8	TEST
// Remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.9971916491791977	WITHOUT_CLASSIFICATION	0.001857358632624281	DESIGN	8.686330798158919E-4	IMPLEMENTATION	7.839965120366829E-5	DEFECT	3.6598010713654908E-6	TEST	2.996560870602471E-7	DOCUMENTATION
// PHASE 1 : Parse the HQL into an AST.	WITHOUT_CLASSIFICATION	0.999984429357594	WITHOUT_CLASSIFICATION	1.3305283477232631E-5	DESIGN	1.234923372764067E-6	IMPLEMENTATION	7.498608398701594E-7	DEFECT	2.0670644272419945E-7	DOCUMENTATION	7.386827334174405E-8	TEST
// PHASE 2 : Analyze the HQL AST, and produce an SQL AST.	WITHOUT_CLASSIFICATION	0.9998878800656754	WITHOUT_CLASSIFICATION	1.0446453811574139E-4	DESIGN	6.334720292444892E-6	DEFECT	1.0076322013702107E-6	DOCUMENTATION	2.954994815303122E-7	IMPLEMENTATION	1.7544233549856718E-8	TEST
// PHASE 3 : Generate the SQL.	WITHOUT_CLASSIFICATION	0.9992732696623311	WITHOUT_CLASSIFICATION	6.689659624091283E-4	DESIGN	4.557487933227261E-5	IMPLEMENTATION	6.30102504443203E-6	TEST	3.2796211381008796E-6	DOCUMENTATION	2.60884974487988E-6	DEFECT
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999998617165131	WITHOUT_CLASSIFICATION	1.2442940020130683E-7	DEFECT	1.2010083221040935E-8	DESIGN	1.130771267114887E-9	TEST	5.689705628887257E-10	IMPLEMENTATION	1.4426179121617523E-10	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999998617165131	WITHOUT_CLASSIFICATION	1.2442940020130683E-7	DEFECT	1.2010083221040935E-8	DESIGN	1.130771267114887E-9	TEST	5.689705628887257E-10	IMPLEMENTATION	1.4426179121617523E-10	DOCUMENTATION
//only needed during compilation phase...	WITHOUT_CLASSIFICATION	0.9999548327834039	WITHOUT_CLASSIFICATION	1.898972409905993E-5	DESIGN	1.6242994396766523E-5	DEFECT	8.383777779829336E-6	IMPLEMENTATION	1.2071507236929019E-6	DOCUMENTATION	3.4356959675310304E-7	TEST
// Transform the tree.	WITHOUT_CLASSIFICATION	0.9999902251583939	WITHOUT_CLASSIFICATION	6.522377522537692E-6	DESIGN	2.8108430397294455E-6	IMPLEMENTATION	2.3573425427915605E-7	DOCUMENTATION	1.0455865148240003E-7	TEST	1.0132813814076345E-7	DEFECT
// Parse the query string into an HQL AST.	WITHOUT_CLASSIFICATION	0.9999654266598583	WITHOUT_CLASSIFICATION	3.048034655776779E-5	DESIGN	3.172497190660653E-6	DEFECT	5.200683568322695E-7	IMPLEMENTATION	3.012573111201381E-7	DOCUMENTATION	9.917072527826924E-8	TEST
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9996349476003455	WITHOUT_CLASSIFICATION	3.5992058511978586E-4	DESIGN	2.2352528604750403E-6	DEFECT	1.656101964081759E-6	IMPLEMENTATION	7.220527865390045E-7	DOCUMENTATION	5.184069235289392E-7	TEST
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9996349476003455	WITHOUT_CLASSIFICATION	3.5992058511978586E-4	DESIGN	2.2352528604750403E-6	DEFECT	1.656101964081759E-6	IMPLEMENTATION	7.220527865390045E-7	DOCUMENTATION	5.184069235289392E-7	TEST
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9996349476003455	WITHOUT_CLASSIFICATION	3.5992058511978586E-4	DESIGN	2.2352528604750403E-6	DEFECT	1.656101964081759E-6	IMPLEMENTATION	7.220527865390045E-7	DOCUMENTATION	5.184069235289392E-7	TEST
// NOTE : ( max - 1 ) because first is zero-based while max is not...	WITHOUT_CLASSIFICATION	0.9985520281920277	WITHOUT_CLASSIFICATION	7.976479799113647E-4	IMPLEMENTATION	5.150833249294244E-4	DEFECT	1.241254594418103E-4	DESIGN	1.0422398580487921E-5	TEST	6.926451091978301E-7	DOCUMENTATION
// -- Package local methods for the QueryLoader delegate --	WITHOUT_CLASSIFICATION	0.9998139209556371	WITHOUT_CLASSIFICATION	1.8591264558623716E-4	DESIGN	6.34836771962224E-8	DEFECT	4.200103750056584E-8	IMPLEMENTATION	3.147689213373622E-8	TEST	2.9437169665587017E-8	DOCUMENTATION
// If there are no collection fetches, then no further checks are needed	WITHOUT_CLASSIFICATION	0.9311173813720915	WITHOUT_CLASSIFICATION	0.06885714553207711	IMPLEMENTATION	1.1536492710807222E-5	TEST	9.388382920355111E-6	DESIGN	3.2196932493047314E-6	DOCUMENTATION	1.3285269508984728E-6	DEFECT
// A shallow query is ok (although technically there should be no fetching here...)	WITHOUT_CLASSIFICATION	0.7236878462293171	DEFECT	0.14859168382263416	WITHOUT_CLASSIFICATION	0.08217261240766231	IMPLEMENTATION	0.04513393778690023	DESIGN	4.020864867574364E-4	TEST	1.1833266728740098E-5	DOCUMENTATION
// should be the first, but just to be safe...	WITHOUT_CLASSIFICATION	0.9985306775264408	WITHOUT_CLASSIFICATION	0.001249879050354438	DESIGN	1.7241255461573953E-4	IMPLEMENTATION	4.5417352076876336E-5	DEFECT	1.29521713497657E-6	TEST	3.182993772051404E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999996385259887	WITHOUT_CLASSIFICATION	2.3735947877596978E-7	DESIGN	1.1340695562374221E-7	IMPLEMENTATION	5.631227951954933E-9	TEST	3.6595303503750133E-9	DOCUMENTATION	1.4168185019314204E-9	DEFECT
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999996385259887	WITHOUT_CLASSIFICATION	2.3735947877596978E-7	DESIGN	1.1340695562374221E-7	IMPLEMENTATION	5.631227951954933E-9	TEST	3.6595303503750133E-9	DOCUMENTATION	1.4168185019314204E-9	DEFECT
// Impl Note: allows multiple collection fetches as long as the // entire fecthed graph still "points back" to a single // root entity for return	WITHOUT_CLASSIFICATION	0.9999956558686912	WITHOUT_CLASSIFICATION	3.3726558672869523E-6	DEFECT	7.221797079326256E-7	IMPLEMENTATION	2.4851302624563544E-7	DESIGN	7.634325326953318E-10	TEST	1.927474734247358E-11	DOCUMENTATION
// Otherwise, we have a non-scalar select with defined collection fetch(es). // Make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.99828492761956	WITHOUT_CLASSIFICATION	0.0016820770801660697	DESIGN	3.2676956408494546E-5	IMPLEMENTATION	2.9739131149160843E-7	DEFECT	1.9969365013930706E-8	TEST	9.831889815079678E-10	DOCUMENTATION
// This is not strictly true.  We actually just need to make sure that // it is ordered by root-entity PK and that that order-by comes before // any non-root-entity ordering...	WITHOUT_CLASSIFICATION	0.9999721886826383	WITHOUT_CLASSIFICATION	1.665033366252077E-5	DESIGN	1.0117582508146687E-5	IMPLEMENTATION	9.91899247748143E-7	DEFECT	4.8925200961406477E-8	TEST	2.576742299895806E-9	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.9999994095615616	WITHOUT_CLASSIFICATION	5.548532055708104E-7	DESIGN	1.1924043223616235E-8	IMPLEMENTATION	1.1056694528397388E-8	DEFECT	1.1011039033806674E-8	DOCUMENTATION	1.5934560909508784E-9	TEST
// igndore it...	WITHOUT_CLASSIFICATION	0.9990270884318657	WITHOUT_CLASSIFICATION	7.525221949216537E-4	DEFECT	1.5829425017454716E-4	DESIGN	5.62123125126457E-5	IMPLEMENTATION	3.1394241533396448E-6	DOCUMENTATION	2.743386372072887E-6	TEST
// we are now at a new tree level	WITHOUT_CLASSIFICATION	0.9999978615521296	WITHOUT_CLASSIFICATION	1.4060754101872156E-6	DESIGN	6.695370252620247E-7	DEFECT	2.606032829247745E-8	TEST	1.853917121219743E-8	DOCUMENTATION	1.8235935586096333E-8	IMPLEMENTATION
// [jsd] The fix for HHH-558...	WITHOUT_CLASSIFICATION	0.9954353331876683	WITHOUT_CLASSIFICATION	0.002991931518116377	DESIGN	0.001535109733181503	DEFECT	2.291597400807764E-5	IMPLEMENTATION	7.883828675469489E-6	TEST	6.825758350364073E-6	DOCUMENTATION
// If the token can tell us if it could be an identifier...	WITHOUT_CLASSIFICATION	0.9951479229287457	WITHOUT_CLASSIFICATION	0.00479127361634835	DESIGN	5.614023886292924E-5	DEFECT	3.3052474925401614E-6	IMPLEMENTATION	1.2527609464716454E-6	TEST	1.0520760398688052E-7	DOCUMENTATION
// ... and the expected token type was an identifier, then:	WITHOUT_CLASSIFICATION	0.9999982296322063	WITHOUT_CLASSIFICATION	1.0213929851451109E-6	DEFECT	7.260618620117776E-7	DESIGN	1.2433886511801294E-8	DOCUMENTATION	7.366836191705791E-9	IMPLEMENTATION	3.1122239323347013E-9	TEST
// Use the token as an identifier.	WITHOUT_CLASSIFICATION	0.9999999775845724	WITHOUT_CLASSIFICATION	1.3036904205320616E-8	DESIGN	4.900086691393564E-9	DEFECT	3.2032905279616645E-9	IMPLEMENTATION	8.706127731934029E-10	DOCUMENTATION	4.045333457753032E-10	TEST
// Add the token to the AST.	WITHOUT_CLASSIFICATION	0.9999619520856974	WITHOUT_CLASSIFICATION	1.4001826561768215E-5	DOCUMENTATION	1.3803836847450941E-5	DESIGN	5.3549135241947995E-6	IMPLEMENTATION	4.486161171980095E-6	DEFECT	4.011761972095455E-7	TEST
// (NOT (EQ a b) ) => (NE a b)	WITHOUT_CLASSIFICATION	0.9999813352989494	WITHOUT_CLASSIFICATION	1.6446932243990552E-5	DESIGN	1.766956517159102E-6	IMPLEMENTATION	2.100227145689994E-7	DEFECT	1.2234975099312458E-7	DOCUMENTATION	1.1843982383959945E-7	TEST
// (NOT (NE a b) ) => (EQ a b)	WITHOUT_CLASSIFICATION	0.9999813352989494	WITHOUT_CLASSIFICATION	1.6446932243990552E-5	DESIGN	1.766956517159102E-6	IMPLEMENTATION	2.100227145689994E-7	DEFECT	1.2234975099312458E-7	DOCUMENTATION	1.1843982383959945E-7	TEST
// (NOT (LT a b) ) => (GE a b)	WITHOUT_CLASSIFICATION	0.9999847841583578	WITHOUT_CLASSIFICATION	1.3725462681956977E-5	DESIGN	1.1075238143580533E-6	IMPLEMENTATION	2.0748677804895903E-7	DEFECT	9.028014606211429E-8	DOCUMENTATION	8.508822185442697E-8	TEST
// (NOT (GE a b) ) => (LT a b)	WITHOUT_CLASSIFICATION	0.9999847841583578	WITHOUT_CLASSIFICATION	1.3725462681956977E-5	DESIGN	1.1075238143580533E-6	IMPLEMENTATION	2.0748677804895903E-7	DEFECT	9.028014606211429E-8	DOCUMENTATION	8.508822185442697E-8	TEST
// (NOT (LE a b) ) => (GT a b)	WITHOUT_CLASSIFICATION	0.999989184272054	WITHOUT_CLASSIFICATION	9.124845903201956E-6	DESIGN	1.3620822402957413E-6	IMPLEMENTATION	1.7125780899530488E-7	DEFECT	7.91815521831642E-8	DOCUMENTATION	7.836044128752263E-8	TEST
// (NOT (LIKE a b) ) => (NOT_LIKE a b)	WITHOUT_CLASSIFICATION	0.9999948543047447	WITHOUT_CLASSIFICATION	2.864143120240284E-6	DESIGN	2.0236384297350704E-6	IMPLEMENTATION	1.5646367555710342E-7	DEFECT	5.372071377878081E-8	TEST	4.77293160332321E-8	DOCUMENTATION
// (NOT (NOT_LIKE a b) ) => (LIKE a b)	WITHOUT_CLASSIFICATION	0.9999948543047447	WITHOUT_CLASSIFICATION	2.864143120240283E-6	DESIGN	2.0236384297350704E-6	IMPLEMENTATION	1.5646367555710342E-7	DEFECT	5.372071377878081E-8	TEST	4.77293160332321E-8	DOCUMENTATION
// (NOT (IS_NOT_NULL a b) ) => (IS_NULL a b)	WITHOUT_CLASSIFICATION	0.9999924310034076	WITHOUT_CLASSIFICATION	5.157946705434836E-6	DESIGN	2.1139847468844904E-6	IMPLEMENTATION	1.9930263532033004E-7	DEFECT	6.343668241221445E-8	DOCUMENTATION	3.4325822347892706E-8	TEST
// (NOT (BETWEEN a b) ) => (NOT_BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999864335355477	WITHOUT_CLASSIFICATION	8.704006842326434E-6	DESIGN	4.327349971773795E-6	IMPLEMENTATION	2.7319770480319E-7	DEFECT	1.4061812624592112E-7	TEST	1.2129180707891836E-7	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999985654659033	WITHOUT_CLASSIFICATION	9.453614487259117E-7	DESIGN	4.4392060636869094E-7	IMPLEMENTATION	2.620059572607562E-8	DEFECT	1.3848838431241611E-8	TEST	5.202607479359923E-9	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9971199613563878	WITHOUT_CLASSIFICATION	0.0028587858141344144	DESIGN	1.029735299270644E-5	IMPLEMENTATION	3.965483105753431E-6	DEFECT	3.56883954199879E-6	TEST	3.4211538372160007E-6	DOCUMENTATION
// if // if // Otherwise, handle the error normally.	WITHOUT_CLASSIFICATION	0.9999902881824148	WITHOUT_CLASSIFICATION	8.233464906422002E-6	IMPLEMENTATION	9.429397390755111E-7	DESIGN	5.014652554093577E-7	DEFECT	2.465551063189E-8	TEST	9.292173742823248E-9	DOCUMENTATION
// (NOT (NOT_BETWEEN a b) ) => (BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999864335355477	WITHOUT_CLASSIFICATION	8.704006842326434E-6	DESIGN	4.327349971773795E-6	IMPLEMENTATION	2.7319770480319E-7	DEFECT	1.4061812624592112E-7	TEST	1.2129180707891836E-7	DOCUMENTATION
/* This can never happen because this rule will always eliminate the child NOT.	WITHOUT_CLASSIFICATION	0.9955730457100015	WITHOUT_CLASSIFICATION	0.004415759160626837	DESIGN	1.0909090361401006E-5	IMPLEMENTATION	1.5057120275953E-7	DEFECT	1.222888471950167E-7	DOCUMENTATION	1.317896036158181E-8	TEST
// Just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9996680080375777	WITHOUT_CLASSIFICATION	1.9341821577846806E-4	DESIGN	1.1997722392367642E-4	IMPLEMENTATION	1.6434425024133796E-5	DEFECT	1.1993795532131346E-6	DOCUMENTATION	9.627181427640304E-7	TEST
// (EQ NULL b) => (IS_NULL b)	WITHOUT_CLASSIFICATION	0.9999993473060284	WITHOUT_CLASSIFICATION	3.7458519388496287E-7	DESIGN	1.980328003609971E-7	IMPLEMENTATION	4.4130861913899527E-8	DEFECT	2.225545943297751E-8	DOCUMENTATION	1.3689656067367811E-8	TEST
// (EQ a NULL) => (IS_NULL a)	WITHOUT_CLASSIFICATION	0.9999982861823973	WITHOUT_CLASSIFICATION	1.3827669057750902E-6	DESIGN	2.2501810093994063E-7	IMPLEMENTATION	6.563346089188534E-8	DEFECT	2.6821752742827514E-8	DOCUMENTATION	1.3577382441206615E-8	TEST
// NOTE: Because we're using ASTUtil.createParent(), the tree must be created from the bottom up. // IS EMPTY x => (EXISTS (QUERY (SELECT_FROM (FROM x) ) ) )	WITHOUT_CLASSIFICATION	0.9999976503796854	WITHOUT_CLASSIFICATION	1.7153688428739144E-6	DESIGN	6.238480586736226E-7	IMPLEMENTATION	7.613609925148611E-9	TEST	1.83566027294054E-9	DEFECT	9.541430016808965E-10	DOCUMENTATION
// Add NOT if it's negated.	WITHOUT_CLASSIFICATION	0.9999733972059656	WITHOUT_CLASSIFICATION	1.3291368373716408E-5	IMPLEMENTATION	8.360215276743163E-6	DESIGN	3.633700497293429E-6	TEST	6.716708697113788E-7	DOCUMENTATION	6.458390168661175E-7	DEFECT
// Create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.9999963761374153	WITHOUT_CLASSIFICATION	3.4985035327125886E-6	DESIGN	5.894473578119256E-8	DEFECT	2.2914440632148163E-8	IMPLEMENTATION	2.2439022418968304E-8	TEST	2.1060852966990992E-8	DOCUMENTATION
// Case 1: Multi token keywords GROUP BY and ORDER BY // The next token ( LT(2) ) should be 'by'... otherwise, this is just an ident.	WITHOUT_CLASSIFICATION	0.8528868785928885	WITHOUT_CLASSIFICATION	0.1383536805807438	DESIGN	0.008752680187346484	DEFECT	4.893313209177103E-6	TEST	9.581491781399335E-7	IMPLEMENTATION	9.091766338944784E-7	DOCUMENTATION
// Case 2: The current token is after FROM and before '.'.	WITHOUT_CLASSIFICATION	0.9995161083487254	WITHOUT_CLASSIFICATION	4.799734516188587E-4	DEFECT	3.4265731811278253E-6	DESIGN	3.171676358322556E-7	DOCUMENTATION	9.486487680533114E-8	TEST	7.959396200721963E-8	IMPLEMENTATION
// This handles HHH-354, where there is a strange property name in a where clause. // If the lookahead contains a DOT then something that isn't an IDENT...	WITHOUT_CLASSIFICATION	0.9941959094132744	WITHOUT_CLASSIFICATION	0.005724430220575396	DESIGN	7.878002829831324E-5	DEFECT	6.355796216530868E-7	TEST	2.0997745417045763E-7	DOCUMENTATION	3.478077600904398E-8	IMPLEMENTATION
// See if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.999999799640295	WITHOUT_CLASSIFICATION	1.9172522639849414E-7	DESIGN	7.625940479301955E-9	DEFECT	5.214405053548764E-10	DOCUMENTATION	3.2783682381802725E-10	IMPLEMENTATION	1.5926094786091897E-10	TEST
// Set it!	WITHOUT_CLASSIFICATION	0.9999341070253231	WITHOUT_CLASSIFICATION	3.333933644716063E-5	DEFECT	2.8425422315357387E-5	DESIGN	2.2852895080926235E-6	IMPLEMENTATION	1.1382535660822303E-6	TEST	7.046728400459879E-7	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999992007508399	WITHOUT_CLASSIFICATION	4.30290340356289E-7	DESIGN	2.7954840539106423E-7	DEFECT	5.757936653925719E-8	IMPLEMENTATION	2.1773752705374364E-8	DOCUMENTATION	1.0057295141760182E-8	TEST
// strip the " where "	WITHOUT_CLASSIFICATION	0.9999948536688634	WITHOUT_CLASSIFICATION	4.083646612085486E-6	DESIGN	8.573462188120755E-7	IMPLEMENTATION	9.52413741261942E-8	TEST	5.68735949991624E-8	DEFECT	5.322333666380101E-8	DOCUMENTATION
// Don't really know all the codes required to adequately decipher returned jdbc exceptions here. // simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.9990158016646453	WITHOUT_CLASSIFICATION	9.723726206756787E-4	DEFECT	8.813949785207109E-6	DESIGN	2.749520239124635E-6	IMPLEMENTATION	2.539613076446868E-7	TEST	8.28334702371791E-9	DOCUMENTATION
// at the very least cleanup the data :)	WITHOUT_CLASSIFICATION	0.9810404899824775	WITHOUT_CLASSIFICATION	0.018544099622743532	DESIGN	2.810082922267869E-4	IMPLEMENTATION	1.2787961769837226E-4	DEFECT	3.3139300714719008E-6	DOCUMENTATION	3.20855478234246E-6	TEST
// First, save off the pertinent ids, as the return value	WITHOUT_CLASSIFICATION	0.999999978750035	WITHOUT_CLASSIFICATION	1.4365282757299568E-8	DESIGN	3.835494423637045E-9	DEFECT	2.752356949913595E-9	IMPLEMENTATION	1.8538195517926788E-10	DOCUMENTATION	1.1144885899558157E-10	TEST
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999034196863358	WITHOUT_CLASSIFICATION	9.5292934280343E-5	DESIGN	9.672603035495034E-7	IMPLEMENTATION	1.931882469721165E-7	DEFECT	8.160925660388766E-8	TEST	4.532157666675784E-8	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999034196863358	WITHOUT_CLASSIFICATION	9.5292934280343E-5	DESIGN	9.672603035495034E-7	IMPLEMENTATION	1.931882469721165E-7	DEFECT	8.160925660388766E-8	TEST	4.532157666675784E-8	DOCUMENTATION
// Start performing the updates	WITHOUT_CLASSIFICATION	0.9999831506197019	WITHOUT_CLASSIFICATION	1.137666243630811E-5	IMPLEMENTATION	3.500856704399088E-6	DESIGN	1.3656876344497797E-6	DEFECT	4.5963640531189446E-7	TEST	1.4653711761309575E-7	DOCUMENTATION
// First, save off the pertinent ids, saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.9999999286188532	WITHOUT_CLASSIFICATION	3.666085536860206E-8	DESIGN	1.95555928725131E-8	DEFECT	8.482964679733533E-9	IMPLEMENTATION	5.203978196152603E-9	TEST	1.4777556687178345E-9	DOCUMENTATION
// Start performing the deletes	WITHOUT_CLASSIFICATION	0.9999946504231179	WITHOUT_CLASSIFICATION	3.696329292602654E-6	DESIGN	1.3743802706011777E-6	IMPLEMENTATION	1.9372840674917194E-7	TEST	5.8902738167116084E-8	DEFECT	2.623617391655972E-8	DOCUMENTATION
// otherwise, everything ok.	WITHOUT_CLASSIFICATION	0.9998745896547865	WITHOUT_CLASSIFICATION	6.454491914687519E-5	DESIGN	5.7939460050880395E-5	IMPLEMENTATION	1.2432861660607607E-6	TEST	9.713963144601713E-7	DEFECT	7.112835352118968E-7	DOCUMENTATION
// visit width-first, then depth	WITHOUT_CLASSIFICATION	0.999996817562373	WITHOUT_CLASSIFICATION	1.3270699262433663E-6	IMPLEMENTATION	8.80849439561531E-7	DESIGN	6.392595837027572E-7	DEFECT	2.8057986477020137E-7	TEST	5.467881254910341E-8	DOCUMENTATION
// if the types report logical equivalence, return true...	WITHOUT_CLASSIFICATION	0.999721824665626	WITHOUT_CLASSIFICATION	1.9650140640015368E-4	DESIGN	7.995828965231279E-5	DEFECT	1.5556609127499846E-6	IMPLEMENTATION	1.2789717108075597E-7	TEST	3.208023765567111E-8	DOCUMENTATION
// otherwise, perform a "deep equivalence" check...	WITHOUT_CLASSIFICATION	0.9975786804012722	WITHOUT_CLASSIFICATION	0.002390786208957435	DESIGN	3.013176311472388E-5	IMPLEMENTATION	1.8524049963337068E-7	DOCUMENTATION	1.6965012090571722E-7	DEFECT	4.673603495549133E-8	TEST
// If there is no WHERE node, make one.	WITHOUT_CLASSIFICATION	0.9999991529372625	WITHOUT_CLASSIFICATION	4.2355601304537916E-7	DESIGN	3.170792007865974E-7	DEFECT	9.143220114016654E-8	TEST	1.3356126923799438E-8	IMPLEMENTATION	1.63919548311522E-9	DOCUMENTATION
// inject the WHERE after the parent	WITHOUT_CLASSIFICATION	0.999993514016473	WITHOUT_CLASSIFICATION	3.799253614878651E-6	IMPLEMENTATION	2.044387878736012E-6	DESIGN	4.647425290760955E-7	DEFECT	9.845213872522826E-8	DOCUMENTATION	7.914736576901855E-8	TEST
// Never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9998197405309444	WITHOUT_CLASSIFICATION	1.7977759475651677E-4	DESIGN	3.529587305953822E-7	IMPLEMENTATION	9.456155276574938E-8	TEST	1.977474476397471E-8	DEFECT	1.4579271010021134E-8	DOCUMENTATION
// Moved here from SelectClause [jsd]	WITHOUT_CLASSIFICATION	0.9999261312374865	WITHOUT_CLASSIFICATION	7.351682712750662E-5	DESIGN	2.5426768934073387E-7	IMPLEMENTATION	4.1342177472149645E-8	DEFECT	3.6159559494394076E-8	TEST	2.0165959684775478E-8	DOCUMENTATION
///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997316184170177	WITHOUT_CLASSIFICATION	2.1313449085769666E-4	DESIGN	2.4994425986067226E-5	IMPLEMENTATION	1.334445200800401E-5	DEFECT	8.599242376080556E-6	DOCUMENTATION	8.308971754592307E-6	TEST
// Use the table fromElement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.9999994004525724	WITHOUT_CLASSIFICATION	5.674983367846971E-7	DESIGN	1.6268457498930014E-8	DEFECT	1.1617111854787029E-8	IMPLEMENTATION	3.716279984422855E-9	DOCUMENTATION	4.4724148009334317E-10	TEST
// Set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.9999914745016633	WITHOUT_CLASSIFICATION	8.256218916740593E-6	DEFECT	1.7969746351115874E-7	IMPLEMENTATION	4.5367872579171263E-8	DESIGN	3.7100359807462936E-8	DOCUMENTATION	7.113724130975758E-9	TEST
// If the uresolved property path isn't set yet, just use the property name.	WITHOUT_CLASSIFICATION	0.9999358508746957	WITHOUT_CLASSIFICATION	4.503078244341006E-5	IMPLEMENTATION	1.3647357289490354E-5	DEFECT	4.89460572805556E-6	DESIGN	2.984297456071558E-7	DOCUMENTATION	2.77950097737837E-7	TEST
// The 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.9999860464595159	WITHOUT_CLASSIFICATION	8.455487327930972E-6	DEFECT	3.952377762207249E-6	DESIGN	1.4047709086646604E-6	IMPLEMENTATION	7.394237012414129E-8	TEST	6.696211518999621E-8	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999997402302728	WITHOUT_CLASSIFICATION	1.1914563241887345E-7	DESIGN	8.005712983391097E-8	DEFECT	5.889652591644378E-8	IMPLEMENTATION	9.143776525683992E-10	TEST	7.560613741546873E-10	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999997402302728	WITHOUT_CLASSIFICATION	1.1914563241887345E-7	DESIGN	8.005712983391097E-8	DEFECT	5.889652591644378E-8	IMPLEMENTATION	9.143776525683992E-10	TEST	7.560613741546873E-10	DOCUMENTATION
// If this dot has already been resolved, stop now.	WITHOUT_CLASSIFICATION	0.999821069047062	WITHOUT_CLASSIFICATION	1.3214470575164837E-4	DESIGN	4.531483504879987E-5	IMPLEMENTATION	1.2850239334618933E-6	DEFECT	1.211162953958861E-7	TEST	6.527190856228852E-8	DOCUMENTATION
// If there is no data type for this node, and we're at the end of the path (top most dot node), then // this might be a Java constant.	WITHOUT_CLASSIFICATION	0.983268951868538	WITHOUT_CLASSIFICATION	0.014670062823741115	DESIGN	0.0020422565542015775	DEFECT	1.7121404040585827E-5	IMPLEMENTATION	1.0299271559361296E-6	DOCUMENTATION	5.774223227118261E-7	TEST
// The property is a collection...	WITHOUT_CLASSIFICATION	0.9975877470310157	WITHOUT_CLASSIFICATION	0.0023421877841871743	DEFECT	5.65930983613178E-5	DESIGN	1.2817234351888323E-5	IMPLEMENTATION	3.5166795042277394E-7	DOCUMENTATION	3.0318413350977334E-7	TEST
// The property is a component...	WITHOUT_CLASSIFICATION	0.9993837473931442	WITHOUT_CLASSIFICATION	5.532786099727902E-4	DEFECT	6.177161897587338E-5	DESIGN	8.201559507028785E-7	IMPLEMENTATION	2.4699288833221057E-7	DOCUMENTATION	1.352290682239558E-7	TEST
// The property is another class..	WITHOUT_CLASSIFICATION	0.9999441707980116	WITHOUT_CLASSIFICATION	4.8744065310182914E-5	DEFECT	6.911691855248521E-6	DESIGN	1.1968423181689302E-7	DOCUMENTATION	3.493400244078752E-8	TEST	1.8826588685498912E-8	IMPLEMENTATION
// Otherwise, this is a primitive type.	WITHOUT_CLASSIFICATION	0.9999895746935379	WITHOUT_CLASSIFICATION	1.0151667579875953E-5	DESIGN	1.412443590335248E-7	DEFECT	9.486701911097494E-8	IMPLEMENTATION	3.0385826444200815E-8	TEST	7.1416775260536E-9	DOCUMENTATION
//foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.986929142987249	WITHOUT_CLASSIFICATION	0.012845612429640203	DESIGN	2.0056400060958007E-4	IMPLEMENTATION	1.0142211613942326E-5	TEST	7.519864103378962E-6	DEFECT	7.018506783981882E-6	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999851538282897	WITHOUT_CLASSIFICATION	8.96400392525737E-6	DESIGN	5.783543842384571E-6	DEFECT	9.64544077795624E-8	IMPLEMENTATION	1.9528408942848457E-9	DOCUMENTATION	2.1669396898351017E-10	TEST
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9995984077976009	WITHOUT_CLASSIFICATION	3.652188338993924E-4	IMPLEMENTATION	2.8928020486603877E-5	DESIGN	6.853046088705119E-6	DEFECT	5.254002820290483E-7	DOCUMENTATION	6.690164236095512E-8	TEST
// in non-select queries, the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.9999999947284256	WITHOUT_CLASSIFICATION	4.21641714336848E-9	DEFECT	9.193354047269256E-10	DESIGN	1.1576012346394712E-10	TEST	1.2059782011297673E-11	DOCUMENTATION	8.00201754590124E-12	IMPLEMENTATION
// this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.9998055543543339	WITHOUT_CLASSIFICATION	1.9397140480132837E-4	DESIGN	4.3803895927546777E-7	DEFECT	2.1800520398153895E-8	IMPLEMENTATION	1.248038614498463E-8	DOCUMENTATION	1.9209989242927055E-9	TEST
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999851538282897	WITHOUT_CLASSIFICATION	8.96400392525737E-6	DESIGN	5.783543842384571E-6	DEFECT	9.64544077795624E-8	IMPLEMENTATION	1.9528408942848457E-9	DOCUMENTATION	2.1669396898351017E-10	TEST
// even though we might find a pre-existing element by join path, we may not be able to reuse it...	WITHOUT_CLASSIFICATION	0.9948894500064898	WITHOUT_CLASSIFICATION	0.005106989600645513	DESIGN	3.3641593668355054E-6	DEFECT	1.459999377054105E-7	IMPLEMENTATION	2.5747571639054028E-8	TEST	2.448598860518268E-8	DOCUMENTATION
// NOTE : addDuplicateAlias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.9794368707811725	WITHOUT_CLASSIFICATION	0.017196083189607057	DESIGN	0.0033492701279265163	IMPLEMENTATION	9.611808050496418E-6	DOCUMENTATION	7.402990110770273E-6	DEFECT	7.61103132645096E-7	TEST
// if the from-clauses are the same, we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.9922759127977689	WITHOUT_CLASSIFICATION	0.007719637506783567	DESIGN	4.248415647253064E-6	DEFECT	1.377201875881486E-7	TEST	5.473276388603985E-8	IMPLEMENTATION	8.826848675013555E-9	DOCUMENTATION
// again, null != null here	WITHOUT_CLASSIFICATION	0.9999960993066525	WITHOUT_CLASSIFICATION	3.3249098265554694E-6	DESIGN	2.439777182853759E-7	IMPLEMENTATION	2.0388759692917034E-7	DEFECT	9.247529967938302E-8	TEST	3.544290617715415E-8	DOCUMENTATION
// If this is an implied join in a from element, then use the impled join type which is part of the // tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.9999986970353156	WITHOUT_CLASSIFICATION	1.2910028014764506E-6	DESIGN	1.0841147530676974E-8	DEFECT	8.811881588202223E-10	IMPLEMENTATION	1.6443624722645374E-10	TEST	7.511086334387932E-11	DOCUMENTATION
// otherwise (subquery case) dont reuse the fromElement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.9999998893133007	WITHOUT_CLASSIFICATION	1.029749906594353E-7	DESIGN	5.324117476988168E-9	DEFECT	1.6636264664829244E-9	IMPLEMENTATION	5.850821009152834E-10	DOCUMENTATION	1.3888265914250087E-10	TEST
// we know only the lhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999986708216791	WITHOUT_CLASSIFICATION	8.836364897876191E-7	DESIGN	4.14090271669561E-7	IMPLEMENTATION	2.820072157024406E-8	DOCUMENTATION	2.1021030779159553E-9	DEFECT	1.1487348076540613E-9	TEST
// the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.9999997113972157	WITHOUT_CLASSIFICATION	1.3799885204371795E-7	IMPLEMENTATION	1.3515816271324582E-7	DEFECT	7.94044118076551E-9	DOCUMENTATION	6.357424050340166E-9	DESIGN	1.1479042228250457E-9	TEST
// only the identifier property field name can be a reference to the associated entity's PK...	WITHOUT_CLASSIFICATION	0.9995428955454889	WITHOUT_CLASSIFICATION	4.5683047824562423E-4	DESIGN	2.1336226675150016E-7	DEFECT	4.35505380882919E-8	DOCUMENTATION	1.0755278741220328E-8	IMPLEMENTATION	6.308182008531464E-9	TEST
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999539316871806	WITHOUT_CLASSIFICATION	3.569292027706628E-5	DEFECT	8.169002240931057E-6	IMPLEMENTATION	8.615153685986288E-7	DOCUMENTATION	6.726355556867736E-7	TEST	6.722393773561048E-7	DESIGN
// Append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.9999107566827126	WITHOUT_CLASSIFICATION	6.008631530502476E-5	IMPLEMENTATION	1.5131444796979291E-5	DEFECT	1.261206250203347E-5	DESIGN	1.2798523530709952E-6	DOCUMENTATION	1.33642330563617E-7	TEST
// If the lhs is a collection, use CollectionPropertyMapping	WITHOUT_CLASSIFICATION	0.9999960706689633	WITHOUT_CLASSIFICATION	2.2955913242628906E-6	DEFECT	1.6198178912823029E-6	DESIGN	9.797103720215583E-9	IMPLEMENTATION	2.7630583530317357E-9	TEST	1.3616590397964735E-9	DOCUMENTATION
// Tell the destination fromElement to 'includeSubclasses'.	WITHOUT_CLASSIFICATION	0.999946777839799	WITHOUT_CLASSIFICATION	5.1878124789762976E-5	DESIGN	9.610307496284206E-7	DOCUMENTATION	1.3954566349090927E-7	IMPLEMENTATION	1.3402948253833834E-7	TEST	1.094295155292787E-7	DEFECT
// Use theta style (for regression) // Move the node up, after the origin node.	WITHOUT_CLASSIFICATION	0.9999982905275011	WITHOUT_CLASSIFICATION	8.948338331423238E-7	IMPLEMENTATION	5.007780086392761E-7	DESIGN	3.014707481490493E-7	DEFECT	6.217959937101731E-9	TEST	6.171949007557705E-9	DOCUMENTATION
// Don't resolve the node again.	WITHOUT_CLASSIFICATION	0.999858712954984	WITHOUT_CLASSIFICATION	1.292449285605203E-4	IMPLEMENTATION	7.2723359683289265E-6	DESIGN	2.1598948089209472E-6	DEFECT	1.6188960916286661E-6	DOCUMENTATION	9.909895866809614E-7	TEST
// for expected parameter type injection, we expect that the lhs represents // some form of property ref and that the children of the in-list represent // one-or-more params.	WITHOUT_CLASSIFICATION	0.9999240923280506	WITHOUT_CLASSIFICATION	7.578359194732794E-5	DESIGN	5.388642393724493E-8	TEST	3.608213945467243E-8	IMPLEMENTATION	2.4550817929437517E-8	DOCUMENTATION	9.560620770207486E-9	DEFECT
// we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.9999990115587347	WITHOUT_CLASSIFICATION	9.635334171632944E-7	DESIGN	1.3098439420917788E-8	TEST	5.855859611606653E-9	DOCUMENTATION	5.156473284691924E-9	IMPLEMENTATION	7.970757179506072E-10	DEFECT
// we have something like : "? [op] rhs"	WITHOUT_CLASSIFICATION	0.9962806060670518	WITHOUT_CLASSIFICATION	0.003177610067360033	DESIGN	4.08876269016139E-4	IMPLEMENTATION	6.653746205876693E-5	TEST	4.928478040426834E-5	DEFECT	1.7085354108921923E-5	DOCUMENTATION
// we have something like : "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.9992127981079467	WITHOUT_CLASSIFICATION	6.416137939635657E-4	DESIGN	5.8243823020335075E-5	IMPLEMENTATION	4.2766110549906906E-5	DEFECT	3.726184520230184E-5	TEST	7.316319317230922E-6	DOCUMENTATION
// we know only the rhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999986197205948	WITHOUT_CLASSIFICATION	9.630099546014879E-7	DESIGN	4.0025177787567615E-7	IMPLEMENTATION	1.524263046949918E-8	DOCUMENTATION	1.0745806446241075E-9	DEFECT	7.004617590101467E-10	TEST
// handle the (assumed) valid cases: // #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.9990894517662982	WITHOUT_CLASSIFICATION	8.879850815088358E-4	DESIGN	2.1786742271500613E-5	DEFECT	6.020672830133386E-7	IMPLEMENTATION	1.3101108527694173E-7	TEST	4.333155317950258E-8	DOCUMENTATION
// one or the other needs to be a datetime for us to get into this method in the first place...	WITHOUT_CLASSIFICATION	0.9649000733427497	DESIGN	0.03509935439257722	WITHOUT_CLASSIFICATION	2.9280156062452874E-7	DEFECT	2.1039196419131787E-7	IMPLEMENTATION	5.9014618302111896E-8	TEST	1.0056529711999948E-8	DOCUMENTATION
// #3 - note that this is also true of "datetime - :param"...	WITHOUT_CLASSIFICATION	0.998019788658361	WITHOUT_CLASSIFICATION	0.0014608842523126187	DESIGN	4.260810054035938E-4	DEFECT	8.472774930183742E-5	IMPLEMENTATION	7.4386531313687E-6	TEST	1.0796814895615173E-6	DOCUMENTATION
// #2	WITHOUT_CLASSIFICATION	0.9999918557685767	WITHOUT_CLASSIFICATION	3.762227144021848E-6	DESIGN	3.644248312517143E-6	DEFECT	3.935388410609473E-7	IMPLEMENTATION	1.7994781091398806E-7	DOCUMENTATION	1.642693146505558E-7	TEST
// Generate the inner join -- The elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.999999921533522	WITHOUT_CLASSIFICATION	7.479180800874509E-8	DESIGN	2.545273892651292E-9	IMPLEMENTATION	4.765674334436494E-10	DOCUMENTATION	4.2503035830810797E-10	DEFECT	2.2779830631636362E-10	TEST
// nothing to do	WITHOUT_CLASSIFICATION	0.9999373475044976	WITHOUT_CLASSIFICATION	4.061279885505898E-5	IMPLEMENTATION	1.5371159122136704E-5	DESIGN	5.179483677907598E-6	DEFECT	1.0685731301195837E-6	DOCUMENTATION	4.2048071729555264E-7	TEST
// The 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.9999881059976572	WITHOUT_CLASSIFICATION	7.0086677482269335E-6	DEFECT	3.0428750030107063E-6	IMPLEMENTATION	1.8314230111252964E-6	DESIGN	7.974715406390719E-9	TEST	3.061864938728374E-9	DOCUMENTATION
// Add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.9999941800898328	WITHOUT_CLASSIFICATION	5.303791592062168E-6	IMPLEMENTATION	2.891372072679117E-7	DOCUMENTATION	1.5950770326250441E-7	DESIGN	6.335991288892281E-8	DEFECT	4.1137518427126E-9	TEST
// Sometimes use the element table alias, sometimes use the... umm... collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.999968549850101	WITHOUT_CLASSIFICATION	2.60425849150651E-5	DESIGN	5.12209767674625E-6	IMPLEMENTATION	1.7705986265075561E-7	DEFECT	9.88177947133648E-8	DOCUMENTATION	9.589650009924451E-9	TEST
// Now, set the text for this node.  It should be the element columns.	WITHOUT_CLASSIFICATION	0.9967288931463697	WITHOUT_CLASSIFICATION	0.0032032692966889363	DESIGN	6.489131344975602E-5	IMPLEMENTATION	2.542133569682703E-6	TEST	3.753815251785012E-7	DEFECT	2.872839675330404E-8	DOCUMENTATION
// Get the function return value type, based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.9999999776351337	WITHOUT_CLASSIFICATION	1.14118649573804E-8	IMPLEMENTATION	7.291309989237361E-9	DESIGN	3.054355263464542E-9	DEFECT	5.555440549542398E-10	DOCUMENTATION	5.179213092984971E-11	TEST
// This will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.9999465984203896	WITHOUT_CLASSIFICATION	2.9521676097303506E-5	DEFECT	1.5477572424794435E-5	DESIGN	8.156621992412927E-6	IMPLEMENTATION	1.3234547122005733E-7	DOCUMENTATION	1.1336362466565459E-7	TEST
// mutation depends on the types of nodes invloved...	WITHOUT_CLASSIFICATION	0.9995897419136273	WITHOUT_CLASSIFICATION	3.414625805687776E-4	DEFECT	4.7959172321880445E-5	DESIGN	2.0174369327186442E-5	IMPLEMENTATION	3.7367437237093485E-7	TEST	2.882897825169289E-7	DOCUMENTATION
// "pass along" our initial embedded parameter node(s) to the first generated // sql fragment so that it can be handled later for parameter binding...	WITHOUT_CLASSIFICATION	0.9965331296649108	WITHOUT_CLASSIFICATION	0.0034658170152129927	DESIGN	8.062610348717721E-7	IMPLEMENTATION	2.297069559726756E-7	TEST	1.6445846778526866E-8	DEFECT	9.060385622113034E-10	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999972412726713	WITHOUT_CLASSIFICATION	2.546185926993916E-6	DESIGN	1.4230703192745056E-7	IMPLEMENTATION	6.555717283045705E-8	DEFECT	3.3354285864246057E-9	TEST	1.341768354684835E-9	DOCUMENTATION
// Generated select expressions are already resolved, nothing to do.	WITHOUT_CLASSIFICATION	0.9999997869735023	WITHOUT_CLASSIFICATION	1.702700116132976E-7	DESIGN	3.1681068457811335E-8	IMPLEMENTATION	9.299104996091907E-9	DEFECT	9.035067626042101E-10	DOCUMENTATION	8.728057162851118E-10	TEST
// The path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.9999964798150088	WITHOUT_CLASSIFICATION	3.5057058848508517E-6	DESIGN	1.2587953210483788E-8	DEFECT	1.0563490635755367E-9	DOCUMENTATION	7.63113219661497E-10	IMPLEMENTATION	7.169085949401585E-11	TEST
// The HQL class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.9999999754000077	WITHOUT_CLASSIFICATION	1.669715851837668E-8	DESIGN	7.497629448215284E-9	DEFECT	2.204899637609268E-10	IMPLEMENTATION	1.733666790260547E-10	DOCUMENTATION	1.134755921929152E-11	TEST
// Associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.9999994291526243	WITHOUT_CLASSIFICATION	3.309232877388896E-7	IMPLEMENTATION	1.717940849274439E-7	DESIGN	5.078280498737064E-8	TEST	1.108331090224984E-8	DOCUMENTATION	6.263887045124338E-9	DEFECT
// try the parent FromClause...	WITHOUT_CLASSIFICATION	0.9990015755157865	WITHOUT_CLASSIFICATION	9.101896406337814E-4	IMPLEMENTATION	4.5941644573462936E-5	DESIGN	4.044875268691061E-5	DEFECT	1.2475998922809284E-6	DOCUMENTATION	5.968464270388393E-7	TEST
// Add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.9999995896637763	WITHOUT_CLASSIFICATION	1.8247794311577578E-7	DESIGN	1.3460396879004978E-7	IMPLEMENTATION	7.575492019261101E-8	DOCUMENTATION	1.2883912740857504E-8	TEST	4.615478894348092E-9	DEFECT
// Make sure that all from elements registered with this FROM clause are actually in the AST.	WITHOUT_CLASSIFICATION	0.9999871516418017	WITHOUT_CLASSIFICATION	1.284047875417988E-5	DESIGN	5.951758203830126E-9	IMPLEMENTATION	8.652735082884155E-10	DEFECT	6.830426570648013E-10	TEST	3.793698370260192E-10	DOCUMENTATION
// Invoke setScalarColumnText on each constructor argument.	WITHOUT_CLASSIFICATION	0.9999821328191346	WITHOUT_CLASSIFICATION	1.4688572968863806E-5	DESIGN	2.5822521246889586E-6	IMPLEMENTATION	3.107594168928694E-7	DEFECT	2.6444405873361646E-7	DOCUMENTATION	2.115229613844215E-8	TEST
// Collect the select expressions, skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.9999999709057656	WITHOUT_CLASSIFICATION	2.125013470502394E-8	DESIGN	5.948732429616565E-9	DEFECT	1.7444509293399813E-9	IMPLEMENTATION	1.38480311284708E-10	TEST	1.2435940429343746E-11	DOCUMENTATION
// return an empty Type array	WITHOUT_CLASSIFICATION	0.9999836170255891	WITHOUT_CLASSIFICATION	1.6362852150133623E-5	DESIGN	1.6331921263282442E-8	DEFECT	2.2500392648009656E-9	DOCUMENTATION	7.907751342102199E-10	IMPLEMENTATION	7.495250753649589E-10	TEST
// Constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.9992554431620373	WITHOUT_CLASSIFICATION	7.377815530846707E-4	DESIGN	5.1275125635979514E-6	IMPLEMENTATION	1.4951973170167173E-6	DEFECT	7.911556395092529E-8	TEST	7.345943338996368E-8	DOCUMENTATION
// this is the exception returned by ReflectHelper.getConstructor() if it cannot // locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.9999950826964419	WITHOUT_CLASSIFICATION	3.4990936395503995E-6	DEFECT	1.4173395834466276E-6	DESIGN	7.44497256884121E-10	TEST	1.1808990787040954E-10	IMPLEMENTATION	7.74805522315087E-12	DOCUMENTATION
// if there is no order by, make one	WITHOUT_CLASSIFICATION	0.9999962559123323	WITHOUT_CLASSIFICATION	2.569266632934619E-6	DESIGN	8.261416787657192E-7	TEST	1.789779535431555E-7	IMPLEMENTATION	1.617434455463991E-7	DEFECT	7.957956896210767E-9	DOCUMENTATION
// Find the WHERE; if there is no WHERE, find the FROM...	WITHOUT_CLASSIFICATION	0.9999977274599047	WITHOUT_CLASSIFICATION	1.3873932545311383E-6	DESIGN	4.0152808998583965E-7	DEFECT	3.056212522739557E-7	TEST	1.6294545708594094E-7	IMPLEMENTATION	1.505204144068328E-8	DOCUMENTATION
// Now, inject the newly built ORDER BY into the tree	WITHOUT_CLASSIFICATION	0.9999943816736259	WITHOUT_CLASSIFICATION	4.790320752514466E-6	DESIGN	3.615301296767151E-7	IMPLEMENTATION	3.0075001622137814E-7	DEFECT	1.3300223726993034E-7	DOCUMENTATION	3.272323833581991E-8	TEST
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999968589535321	WITHOUT_CLASSIFICATION	2.1431947831840356E-6	IMPLEMENTATION	7.701423413670167E-7	DESIGN	1.429945661409015E-7	TEST	7.601635579622785E-8	DEFECT	8.698421412958684E-9	DOCUMENTATION
// logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.9999963794280307	WITHOUT_CLASSIFICATION	3.2153247203964633E-6	DESIGN	2.9281777907228186E-7	IMPLEMENTATION	1.0053558865207751E-7	DEFECT	9.385151887633602E-9	TEST	2.5087294152472073E-9	DOCUMENTATION
// Render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.999987046319098	WITHOUT_CLASSIFICATION	1.1954796362787046E-5	DESIGN	9.05168919050688E-7	IMPLEMENTATION	5.1330468642522296E-8	TEST	3.541170024811953E-8	DEFECT	6.9734513916178105E-9	DOCUMENTATION
// Class names in the FROM clause result in a JoinSequence (the old FromParser does this).	WITHOUT_CLASSIFICATION	0.9999990505790167	WITHOUT_CLASSIFICATION	8.083296174007717E-7	DEFECT	1.388478907764722E-7	DESIGN	1.751806581306558E-9	DOCUMENTATION	4.84823630370529E-10	TEST	6.844793556244122E-12	IMPLEMENTATION
// For many-to-many joins, use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.9999980773580721	WITHOUT_CLASSIFICATION	1.8986521919340603E-6	DESIGN	1.8496550271736467E-8	IMPLEMENTATION	3.3049106735422635E-9	DEFECT	1.2457215323498643E-9	TEST	9.42553403543969E-10	DOCUMENTATION
// Otherwise, use the property mapping.	WITHOUT_CLASSIFICATION	0.9999971202223753	WITHOUT_CLASSIFICATION	2.293187751770106E-6	IMPLEMENTATION	2.660912585695328E-7	DESIGN	2.4683376348808726E-7	DEFECT	5.935471964356704E-8	DOCUMENTATION	1.4310131163991307E-8	TEST
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9998978715968381	WITHOUT_CLASSIFICATION	7.422642650367037E-5	DESIGN	2.6553378790278892E-5	DEFECT	9.125212457619966E-7	IMPLEMENTATION	2.951289883696346E-7	TEST	1.4094763382185785E-7	DOCUMENTATION
// If the property is a special collection property name, return a CollectionPropertyMapping.	WITHOUT_CLASSIFICATION	0.999977290574347	WITHOUT_CLASSIFICATION	1.7980550505072707E-5	DEFECT	4.172662186767573E-6	IMPLEMENTATION	5.433545171971801E-7	DESIGN	9.672763573353185E-9	DOCUMENTATION	3.185680282937677E-9	TEST
// Collection of components.	WITHOUT_CLASSIFICATION	0.9998822024700921	WITHOUT_CLASSIFICATION	1.1757229370189677E-4	DESIGN	9.804095983101756E-8	DEFECT	7.455745260627882E-8	IMPLEMENTATION	3.659170774587938E-8	DOCUMENTATION	1.6046085988594355E-8	TEST
// make sure the lhs is "assignable"...	WITHOUT_CLASSIFICATION	0.9999950513073385	WITHOUT_CLASSIFICATION	3.078805991109616E-6	DESIGN	1.6349330870721834E-6	DEFECT	1.96892394579363E-7	TEST	3.125992317149634E-8	IMPLEMENTATION	6.801265678569014E-9	DOCUMENTATION
// false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.9999904056172502	WITHOUT_CLASSIFICATION	7.80397177034929E-6	DESIGN	1.2121674800111495E-6	IMPLEMENTATION	3.8445848651523654E-7	DEFECT	9.861930372430866E-8	DOCUMENTATION	9.516570911792621E-8	TEST
// Register the FromElement with the FROM clause, now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.9999687822143662	WITHOUT_CLASSIFICATION	2.5044608201521585E-5	DESIGN	5.949249343035915E-6	IMPLEMENTATION	1.5239891824077124E-7	TEST	6.644202419221215E-8	DEFECT	5.0871466618843544E-9	DOCUMENTATION
// currently allowed...	WITHOUT_CLASSIFICATION	0.998445791626367	WITHOUT_CLASSIFICATION	5.803352889690658E-4	DEFECT	5.801349711838742E-4	DESIGN	3.833816775520496E-4	IMPLEMENTATION	9.904519671443912E-6	DOCUMENTATION	4.5191625649264385E-7	TEST
// HHH-276 : implied joins in a subselect where clause - The destination needs to be added // to the destination's from clause. // Not sure if this is will fix everything, but it works.	WITHOUT_CLASSIFICATION	0.97757031956136	DEFECT	0.01888187327505659	WITHOUT_CLASSIFICATION	0.003546408630694267	DESIGN	1.2938520306092001E-6	TEST	1.0381412103285112E-7	DOCUMENTATION	8.667375665160158E-10	IMPLEMENTATION
//return classAlias == null ? className : classAlias;	WITHOUT_CLASSIFICATION	0.9798408900304091	WITHOUT_CLASSIFICATION	0.020130650207689532	DESIGN	2.7472096763222818E-5	DEFECT	4.074081639972319E-7	DOCUMENTATION	3.491439197675801E-7	IMPLEMENTATION	2.311130545477756E-7	TEST
// This is an explicit FROM element.	WITHOUT_CLASSIFICATION	0.9997584541372809	WITHOUT_CLASSIFICATION	2.407918601054182E-4	DESIGN	5.770974944384791E-7	DEFECT	1.1512864698185863E-7	TEST	3.433790440462558E-8	DOCUMENTATION	2.7438567691716194E-8	IMPLEMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999968589535321	WITHOUT_CLASSIFICATION	2.1431947831840356E-6	IMPLEMENTATION	7.701423413670167E-7	DESIGN	1.429945661409015E-7	TEST	7.601635579622785E-8	DEFECT	8.698421412958684E-9	DOCUMENTATION
// Fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.9999745658252084	WITHOUT_CLASSIFICATION	1.2471103782221784E-5	IMPLEMENTATION	7.210370010297105E-6	DESIGN	5.506880062111044E-6	DEFECT	1.9947401175885517E-7	TEST	4.6346925242878635E-8	DOCUMENTATION
// If it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.9999985925737946	WITHOUT_CLASSIFICATION	7.958161085849517E-7	DEFECT	6.002798385890269E-7	IMPLEMENTATION	8.70162256005601E-9	DESIGN	1.7050665531246288E-9	TEST	9.235689938445539E-10	DOCUMENTATION
// Since this is an explicit FROM element, it can't be implied in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999908027598801	WITHOUT_CLASSIFICATION	9.175291803610529E-6	DESIGN	1.9386262814619445E-8	DEFECT	1.9745753285728613E-9	DOCUMENTATION	5.034515611534079E-10	TEST	8.40265816500336E-11	IMPLEMENTATION
// Do nothing, eplicit from elements are *always* in the projection list.	WITHOUT_CLASSIFICATION	0.9999927540452813	WITHOUT_CLASSIFICATION	7.1323191325884175E-6	DESIGN	6.726557784819291E-8	DEFECT	2.860292367504612E-8	DOCUMENTATION	1.498177213439549E-8	IMPLEMENTATION	2.785312488928955E-9	TEST
// propertyName refers to something like collection.size...	WITHOUT_CLASSIFICATION	0.9997102353259205	WITHOUT_CLASSIFICATION	2.4385515835118938E-4	DEFECT	2.287016482812543E-5	IMPLEMENTATION	2.126697129838581E-5	DESIGN	8.977780088774364E-7	DOCUMENTATION	8.746015929788345E-7	TEST
// property name is a sub-path of a component...	WITHOUT_CLASSIFICATION	0.9999718824302437	WITHOUT_CLASSIFICATION	1.9721169420744547E-5	DEFECT	8.334626904026085E-6	DESIGN	4.775655096083688E-8	IMPLEMENTATION	8.393344490243248E-9	TEST	5.623535976614605E-9	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9995984077976009	WITHOUT_CLASSIFICATION	3.652188338993924E-4	IMPLEMENTATION	2.8928020486603877E-5	DESIGN	6.853046088705119E-6	DEFECT	5.254002820290483E-7	DOCUMENTATION	6.690164236095512E-8	TEST
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.999805986442894	WITHOUT_CLASSIFICATION	1.929723485755091E-4	DESIGN	6.806498183613982E-7	TEST	2.3181401834900304E-7	DEFECT	1.1732896360389234E-7	IMPLEMENTATION	1.1415730270608876E-8	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999972412726713	WITHOUT_CLASSIFICATION	2.546185926993916E-6	DESIGN	1.4230703192745056E-7	IMPLEMENTATION	6.555717283045705E-8	DEFECT	3.3354285864246057E-9	TEST	1.341768354684835E-9	DOCUMENTATION
// DotNode uses null here...	WITHOUT_CLASSIFICATION	0.817116254261356	WITHOUT_CLASSIFICATION	0.14158468550049302	DESIGN	0.025174004753155694	DEFECT	0.015786808567197195	IMPLEMENTATION	2.229354867707114E-4	TEST	1.153114310274052E-4	DOCUMENTATION
// We represent a from-clause alias	WITHOUT_CLASSIFICATION	0.9999994372164923	WITHOUT_CLASSIFICATION	2.660179887265991E-7	DESIGN	2.2037220680165537E-7	IMPLEMENTATION	6.642580229825356E-8	DEFECT	8.771509799563434E-9	DOCUMENTATION	1.1959998969075298E-9	TEST
// we are the LHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999999848015931	WITHOUT_CLASSIFICATION	1.233916726506381E-8	DESIGN	1.2681346054586993E-9	DEFECT	1.045097630384657E-9	DOCUMENTATION	3.548880274967437E-10	TEST	1.911192385236362E-10	IMPLEMENTATION
// we are the RHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999999620960098	WITHOUT_CLASSIFICATION	3.165133881433804E-8	DESIGN	2.2899471158773694E-9	DOCUMENTATION	2.018194533109421E-9	DEFECT	1.1528412460288884E-9	IMPLEMENTATION	7.91668418674926E-10	TEST
// we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.9999978823972691	WITHOUT_CLASSIFICATION	1.657268506246966E-6	DESIGN	2.5126419355087434E-7	DEFECT	1.894193414566881E-7	IMPLEMENTATION	1.1783456095601782E-8	TEST	7.86723347630979E-9	DOCUMENTATION
// EARLY EXIT!!!  return so the resolve call explicitly coming from DotNode can // resolve this...	WITHOUT_CLASSIFICATION	0.9990876008815954	WITHOUT_CLASSIFICATION	8.878260081789977E-4	DESIGN	2.347273772918321E-5	DEFECT	8.199877513714884E-7	DOCUMENTATION	2.3454085765545794E-7	IMPLEMENTATION	4.5843887345518276E-8	TEST
// assume this ident's text does *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999953043644523	WITHOUT_CLASSIFICATION	4.649314344231361E-6	DESIGN	3.911458308363411E-8	DEFECT	4.190586551178461E-9	DOCUMENTATION	2.9026129885418854E-9	TEST	1.1342079619001585E-10	IMPLEMENTATION
// just ignore it for now, it'll get resolved later...	WITHOUT_CLASSIFICATION	0.9910025191408904	WITHOUT_CLASSIFICATION	0.008917058171470852	DESIGN	5.665448854629798E-5	DEFECT	1.5929431641126046E-5	IMPLEMENTATION	7.620577725397395E-6	TEST	2.1818972593357576E-7	DOCUMENTATION
// This is not actually a constant, but a reference to FROM element.	WITHOUT_CLASSIFICATION	0.9963452679905103	WITHOUT_CLASSIFICATION	0.0036237824640751766	DESIGN	3.047486963344562E-5	DEFECT	4.602347159915222E-7	IMPLEMENTATION	1.2399976546303166E-8	DOCUMENTATION	2.0410884385740524E-9	TEST
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999981880998298	WITHOUT_CLASSIFICATION	1.8076303137587416E-6	DESIGN	4.0659673942106375E-9	DEFECT	1.2386407737245528E-10	DOCUMENTATION	6.444304999327726E-11	IMPLEMENTATION	1.5582089016694227E-11	TEST
// these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9999923206072635	WITHOUT_CLASSIFICATION	4.533351566424431E-6	DESIGN	2.973219121899393E-6	IMPLEMENTATION	1.0954769404334592E-7	DOCUMENTATION	5.112920116939275E-8	TEST	1.2145153004993093E-8	DEFECT
// used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.9977033844832909	WITHOUT_CLASSIFICATION	0.002287534937244176	DESIGN	7.877817576096002E-6	IMPLEMENTATION	7.808625627616327E-7	DOCUMENTATION	3.456427696487529E-7	DEFECT	7.625655640422135E-8	TEST
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999987953063803	WITHOUT_CLASSIFICATION	1.1870581842198033E-6	DESIGN	1.3289727208892176E-8	DEFECT	3.6421301422719123E-9	DOCUMENTATION	5.634105059151438E-10	IMPLEMENTATION	1.4016777752301653E-10	TEST
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999987953063803	WITHOUT_CLASSIFICATION	1.1870581842198033E-6	DESIGN	1.3289727208892176E-8	DEFECT	3.6421301422719123E-9	DOCUMENTATION	5.634105059151438E-10	IMPLEMENTATION	1.4016777752301653E-10	TEST
// naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.9999957806298895	WITHOUT_CLASSIFICATION	4.215813373727478E-6	DESIGN	3.090536735334919E-9	DEFECT	2.1992170517989133E-10	TEST	1.2932684661322563E-10	DOCUMENTATION	1.1695158819420407E-10	IMPLEMENTATION
// this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9999974433809454	WITHOUT_CLASSIFICATION	2.1074540265723982E-6	DESIGN	3.5861334014348473E-7	IMPLEMENTATION	4.251274253970442E-8	DOCUMENTATION	3.1931650713733875E-8	TEST	1.6107294741349157E-8	DEFECT
// do *not* over-write the column text, as that has already been // "rendered" during resolve	WITHOUT_CLASSIFICATION	0.9999999783453699	WITHOUT_CLASSIFICATION	1.768884337691823E-8	DESIGN	2.6407564757248873E-9	IMPLEMENTATION	1.2497822244359485E-9	DEFECT	5.319330688668789E-11	TEST	2.2054707097794537E-11	DOCUMENTATION
// for some reason the antlr.CommonAST initialization routines force // this method to get called twice.  The first time with an empty string	WITHOUT_CLASSIFICATION	0.9999713893403575	WITHOUT_CLASSIFICATION	2.860914022939206E-5	DESIGN	1.4106579069331745E-9	TEST	6.326160839738977E-11	IMPLEMENTATION	2.61420617729461E-11	DEFECT	1.9351479430094747E-11	DOCUMENTATION
// Look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.9999975858321525	WITHOUT_CLASSIFICATION	2.169163703665516E-6	DESIGN	1.5928142549972298E-7	DEFECT	7.84381527800876E-8	IMPLEMENTATION	4.5458254811826465E-9	TEST	2.738740184559013E-9	DOCUMENTATION
// Add to the query spaces.	WITHOUT_CLASSIFICATION	0.9999601408016002	WITHOUT_CLASSIFICATION	3.0602750197393474E-5	DESIGN	7.477670857439369E-6	IMPLEMENTATION	1.400386402262291E-6	DOCUMENTATION	3.109146008607701E-7	DEFECT	6.747634189971621E-8	TEST
// If the from element isn't in the same clause, create a new from element.	WITHOUT_CLASSIFICATION	0.9999887876376794	WITHOUT_CLASSIFICATION	7.359677535705711E-6	DESIGN	3.843860013830925E-6	DEFECT	7.74448917403068E-9	DOCUMENTATION	9.761036705062116E-10	TEST	1.0417820889210206E-10	IMPLEMENTATION
// This is the root level node. // Generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.9999266184766716	WITHOUT_CLASSIFICATION	7.310668360709846E-5	DESIGN	2.669779414086158E-7	DEFECT	6.539843271197607E-9	TEST	1.2199635683974945E-9	DOCUMENTATION	1.0197289594942937E-10	IMPLEMENTATION
// Correlated subqueries create 'special' implied from nodes // because correlated subselects can't use an ANSI-style join	WITHOUT_CLASSIFICATION	0.9999989123066574	WITHOUT_CLASSIFICATION	8.721225956897634E-7	DEFECT	2.024120536985718E-7	DESIGN	5.30137604385815E-9	TEST	4.080086421683002E-9	IMPLEMENTATION	3.777230847831777E-9	DOCUMENTATION
// super-duper-classic-parser-regression-testing-mojo-magic...	WITHOUT_CLASSIFICATION	0.9976747390684166	WITHOUT_CLASSIFICATION	0.002319418168127893	DESIGN	3.1028058661931587E-6	DEFECT	2.486862170261205E-6	TEST	1.5098412577847294E-7	DOCUMENTATION	1.0211129311710668E-7	IMPLEMENTATION
// A collection of entities...	WITHOUT_CLASSIFICATION	0.9995344092193368	WITHOUT_CLASSIFICATION	2.615912232928532E-4	IMPLEMENTATION	1.1442031180998346E-4	DESIGN	8.690248626124574E-5	DEFECT	1.7972832682438818E-6	DOCUMENTATION	8.79476030889175E-7	TEST
// A collection of components...	WITHOUT_CLASSIFICATION	0.999978837765979	WITHOUT_CLASSIFICATION	9.187708591416868E-6	DESIGN	8.006865152337871E-6	IMPLEMENTATION	3.826508165306715E-6	DEFECT	9.069871885088224E-8	DOCUMENTATION	5.045339330029136E-8	TEST
// A collection of scalar elements...	WITHOUT_CLASSIFICATION	0.9997749455560538	WITHOUT_CLASSIFICATION	1.864691335399151E-4	IMPLEMENTATION	2.716285004599586E-5	DEFECT	1.1006008746385554E-5	DESIGN	3.2642562301847606E-7	DOCUMENTATION	9.002599070936328E-8	TEST
// according to both the ANSI-SQL and EJB3 specs, trim can either take // exactly one parameter or a variable number of parameters between 1 and 4. // from the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If only <trim specification> is omitted, BOTH is assumed; // if <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999999999670148	WITHOUT_CLASSIFICATION	2.6159547395467707E-11	DEFECT	4.5115766923375745E-12	IMPLEMENTATION	1.1143577668932247E-12	DOCUMENTATION	7.514117129402774E-13	DESIGN	4.4816166959721216E-13	TEST
// Don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.9978120425517751	WITHOUT_CLASSIFICATION	0.0017153999750996714	DESIGN	3.801814710637404E-4	IMPLEMENTATION	8.750344942527932E-5	DEFECT	3.461168470159304E-6	DOCUMENTATION	1.4113841659602893E-6	TEST
// Treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.999991900151757	WITHOUT_CLASSIFICATION	5.13819543462062E-6	DEFECT	2.89552633354797E-6	DESIGN	5.3717199838040976E-8	DOCUMENTATION	7.457690487165066E-9	TEST	4.95158446380487E-9	IMPLEMENTATION
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.9947432809965228	WITHOUT_CLASSIFICATION	0.0052427562300114946	DESIGN	1.2361967340589117E-5	DEFECT	1.1529834363755135E-6	TEST	4.0609719956461884E-7	DOCUMENTATION	4.1725489280763707E-8	IMPLEMENTATION
// Create the FROM element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.9999999819378101	WITHOUT_CLASSIFICATION	1.481356432034477E-8	DESIGN	2.805283329122217E-9	IMPLEMENTATION	3.6909441664139257E-10	TEST	4.2968738392318184E-11	DEFECT	3.127900750389107E-11	DOCUMENTATION
// If the join is implied, then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.9999982986055661	WITHOUT_CLASSIFICATION	1.129700807134724E-6	DESIGN	5.508994655919757E-7	DEFECT	1.1324391993089831E-8	IMPLEMENTATION	4.930410454198458E-9	DOCUMENTATION	4.539358714030635E-9	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999768868836855	WITHOUT_CLASSIFICATION	1.2893156528002596E-5	IMPLEMENTATION	8.840532747346672E-6	DESIGN	7.184171562595811E-7	DEFECT	6.449443063840171E-7	DOCUMENTATION	1.6065576447373514E-8	TEST
// The associated entity is implied, but it must be included in the FROM. // The collection alias is the role.	WITHOUT_CLASSIFICATION	0.9999785132108042	WITHOUT_CLASSIFICATION	2.1334088404048495E-5	DESIGN	5.568020289834012E-8	TEST	5.017868345897993E-8	DEFECT	4.274975447844764E-8	IMPLEMENTATION	4.092150909859123E-9	DOCUMENTATION
// Tag this node as a JOIN. // Don't include subclasses in the join. // This is a clollection join.	WITHOUT_CLASSIFICATION	0.999954157920418	WITHOUT_CLASSIFICATION	4.424517645718377E-5	DEFECT	1.3904902553396267E-6	DESIGN	1.0200155750001531E-7	IMPLEMENTATION	9.630844973684596E-8	DOCUMENTATION	8.102862312801615E-9	TEST
// Get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.9999921903566106	WITHOUT_CLASSIFICATION	7.549500292265935E-6	DESIGN	1.1466524974152943E-7	TEST	1.1252325610753027E-7	DOCUMENTATION	1.7119391938341572E-8	DEFECT	1.5835199426258905E-8	IMPLEMENTATION
//  origin, path, implied, columns, classAlias,	WITHOUT_CLASSIFICATION	0.9999971676992816	WITHOUT_CLASSIFICATION	1.2143855310992652E-6	DESIGN	9.523983353598136E-7	DEFECT	6.220874718435927E-7	IMPLEMENTATION	2.616996033654181E-8	DOCUMENTATION	1.7259419979546216E-8	TEST
/*implied*/	WITHOUT_CLASSIFICATION	0.9988177035695239	WITHOUT_CLASSIFICATION	5.905779595042818E-4	DESIGN	5.748695374541471E-4	IMPLEMENTATION	7.756990500156055E-6	DEFECT	5.592589273893531E-6	TEST	3.499353743682066E-6	DOCUMENTATION
// For implied many-to-many, just add the end join.	WITHOUT_CLASSIFICATION	0.9914406747039755	WITHOUT_CLASSIFICATION	0.008556080256336793	IMPLEMENTATION	1.463858623409328E-6	DESIGN	1.2744090347471023E-6	TEST	4.31175836335349E-7	DOCUMENTATION	7.559619335219915E-8	DEFECT
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999768868836855	WITHOUT_CLASSIFICATION	1.2893156528002596E-5	IMPLEMENTATION	8.840532747346672E-6	DESIGN	7.184171562595811E-7	DEFECT	6.449443063840171E-7	DOCUMENTATION	1.6065576447373514E-8	TEST
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999768868836855	WITHOUT_CLASSIFICATION	1.2893156528002596E-5	IMPLEMENTATION	8.840532747346672E-6	DESIGN	7.184171562595811E-7	DEFECT	6.449443063840171E-7	DOCUMENTATION	1.6065576447373514E-8	TEST
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9997169842384735	WITHOUT_CLASSIFICATION	2.534510184983555E-4	DEFECT	1.920820306245178E-5	DESIGN	9.714522985697972E-6	IMPLEMENTATION	4.5221197096308345E-7	DOCUMENTATION	1.8980500895206826E-7	TEST
// This causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.9994137699185015	WITHOUT_CLASSIFICATION	5.861649204763494E-4	DESIGN	5.874821252229001E-8	DEFECT	4.363063055015279E-9	DOCUMENTATION	1.7405704490271587E-9	TEST	3.0917605209084137E-10	IMPLEMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9996871607987197	WITHOUT_CLASSIFICATION	3.1028331597786254E-4	DESIGN	1.9763132327606307E-6	DEFECT	2.6911230369346375E-7	DOCUMENTATION	2.64072734511962E-7	TEST	4.638703148393652E-8	IMPLEMENTATION
// Frontbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.999860763284224	WITHOUT_CLASSIFICATION	6.364840739964214E-5	IMPLEMENTATION	6.17314551777259E-5	DEFECT	1.2612861617887847E-5	DESIGN	1.1988853670078846E-6	DOCUMENTATION	4.5106213613228E-8	TEST
/*	WITHOUT_CLASSIFICATION	0.9331219898232908	WITHOUT_CLASSIFICATION	0.057754742574077686	DESIGN	0.005971504224407717	DEFECT	0.0028843765675326	IMPLEMENTATION	1.6082825785869253E-4	DOCUMENTATION	1.0655855283237827E-4	TEST
/*public Type[] getSqlResultTypes() {	WITHOUT_CLASSIFICATION	0.6838008392139417	WITHOUT_CLASSIFICATION	0.31599319037560053	DESIGN	1.6588052664265584E-4	DEFECT	2.3859832089460966E-5	DOCUMENTATION	1.1626185993552648E-5	TEST	4.60386573202664E-6	IMPLEMENTATION
// First, collect all of the select expressions. // NOTE: This must be done *before* invoking setScalarColumnText() because setScalarColumnText() // changes the AST!!!	WITHOUT_CLASSIFICATION	0.9999380431125764	WITHOUT_CLASSIFICATION	6.0197635482180183E-5	IMPLEMENTATION	1.13361606997445E-6	DEFECT	6.181803465750143E-7	DESIGN	7.045183572084877E-9	TEST	4.103411577145699E-10	DOCUMENTATION
// First allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.8411684029481741	WITHOUT_CLASSIFICATION	0.15718630175413434	IMPLEMENTATION	0.001642165355265101	DESIGN	3.035890881898399E-6	DEFECT	8.781388124233537E-8	DOCUMENTATION	6.2376631623144E-9	TEST
//sqlResultTypeList.addAll( constructorArgumentTypeList );	WITHOUT_CLASSIFICATION	0.999933247446187	WITHOUT_CLASSIFICATION	6.013547184334054E-5	IMPLEMENTATION	4.89859595099485E-6	DESIGN	9.357313320670351E-7	DEFECT	4.1299212372774675E-7	DOCUMENTATION	3.6976256312270503E-7	TEST
// If the data type is not an association type, it could not have been in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999640031623332	WITHOUT_CLASSIFICATION	3.580723541666452E-5	DESIGN	1.7203209695129475E-7	DEFECT	1.0236652338515712E-8	TEST	5.3095253226360896E-9	IMPLEMENTATION	2.0239755588028624E-9	DOCUMENTATION
//sqlResultTypeList.add( type );	WITHOUT_CLASSIFICATION	0.9999727356642292	WITHOUT_CLASSIFICATION	2.0716359535012916E-5	DESIGN	3.34581068495896E-6	DEFECT	2.417751800991996E-6	IMPLEMENTATION	6.051741768711918E-7	TEST	1.7923957296218365E-7	DOCUMENTATION
// Always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.9997076863694465	WITHOUT_CLASSIFICATION	2.1500616483303083E-4	DESIGN	7.583205483042946E-5	IMPLEMENTATION	1.1335508278960277E-6	DEFECT	3.305570185627346E-7	DOCUMENTATION	1.1303043702718626E-8	TEST
// add the fetched entities	WITHOUT_CLASSIFICATION	0.9999917988655467	WITHOUT_CLASSIFICATION	5.587318065415513E-6	IMPLEMENTATION	2.236675094515702E-6	DESIGN	3.0819065285865534E-7	DOCUMENTATION	5.020486162050806E-8	TEST	1.8745778813674675E-8	DEFECT
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999998806424469	WITHOUT_CLASSIFICATION	6.304755062964477E-8	DESIGN	1.9126673634209373E-8	IMPLEMENTATION	1.7596208191307603E-8	DEFECT	1.150879748563887E-8	DOCUMENTATION	8.078323133528666E-9	TEST
// function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9990157345858335	WITHOUT_CLASSIFICATION	9.273134631081742E-4	IMPLEMENTATION	4.351166592877872E-5	DESIGN	1.07862186766471E-5	DEFECT	2.304634493437854E-6	DOCUMENTATION	3.49431959272126E-7	TEST
// If there are any scalars (non-entities) selected, render the select column aliases.	WITHOUT_CLASSIFICATION	0.9999992414085106	WITHOUT_CLASSIFICATION	7.028761443551891E-7	IMPLEMENTATION	4.0856943353149706E-8	DESIGN	1.1996500587919194E-8	DEFECT	1.496536586829902E-9	TEST	1.3653646282798739E-9	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.999930783627083	WITHOUT_CLASSIFICATION	3.3530905961551126E-5	DESIGN	2.9951503616740997E-5	DEFECT	2.6471261667318266E-6	IMPLEMENTATION	2.2447117205435584E-6	TEST	8.421254512768169E-7	DOCUMENTATION
/*ArrayList sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999965916547893	WITHOUT_CLASSIFICATION	2.032517746704676E-6	DEFECT	7.730280109785949E-7	IMPLEMENTATION	3.3849563554523417E-7	DESIGN	2.3361308356762494E-7	TEST	3.0690733799176894E-8	DOCUMENTATION
//sqlResultTypes = ( Type[] ) sqlResultTypeList.toArray( new Type[sqlResultTypeList.size()] );	WITHOUT_CLASSIFICATION	0.9999973741975381	WITHOUT_CLASSIFICATION	1.2734476636159873E-6	DESIGN	1.1077510878292935E-6	DEFECT	1.9603720465701084E-7	IMPLEMENTATION	4.0043854294621026E-8	TEST	8.522651620009808E-9	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998335178037236	WITHOUT_CLASSIFICATION	7.505067852000314E-5	IMPLEMENTATION	5.443537018698135E-5	DEFECT	3.5527119275902124E-5	DESIGN	1.2643961882063652E-6	DOCUMENTATION	2.0463210521136464E-7	TEST
//TODO:	WITHOUT_CLASSIFICATION	0.9925097991716426	WITHOUT_CLASSIFICATION	0.004362448165144332	DESIGN	0.0021044507240883044	IMPLEMENTATION	3.934515775197376E-4	DEFECT	3.2377415403655644E-4	DOCUMENTATION	3.060762075684967E-4	TEST
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.999994975343756	WITHOUT_CLASSIFICATION	4.794146675148462E-6	DESIGN	2.1198996412692406E-7	IMPLEMENTATION	9.634554893825223E-9	DOCUMENTATION	4.533302471090829E-9	DEFECT	4.351747272565872E-9	TEST
// Generate an 2d array of column names, the first dimension is parallel with the // return types array.  The second dimension is the list of column names for each // type.	WITHOUT_CLASSIFICATION	0.9999999625172463	WITHOUT_CLASSIFICATION	3.586496306703851E-8	DESIGN	1.5093468924423243E-9	DEFECT	8.823531168562292E-11	IMPLEMENTATION	1.9422159298923895E-11	TEST	7.862446663486973E-13	DOCUMENTATION
// Generate the select expression.	WITHOUT_CLASSIFICATION	0.999999347723697	WITHOUT_CLASSIFICATION	5.299732229658713E-7	IMPLEMENTATION	8.774845912221127E-8	DEFECT	2.4869658214987597E-8	DESIGN	7.859902679015592E-9	TEST	1.8250600570163512E-9	DOCUMENTATION
// union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999838231944478	WITHOUT_CLASSIFICATION	9.816359414747246E-6	DESIGN	4.829162811899191E-6	IMPLEMENTATION	1.4306920485474665E-6	DEFECT	7.302012150091945E-8	DOCUMENTATION	2.7571155424559144E-8	TEST
// Skip 'DISTINCT' and 'ALL', so we return the first expression node.	WITHOUT_CLASSIFICATION	0.9999869551625444	WITHOUT_CLASSIFICATION	7.635714195180498E-6	IMPLEMENTATION	5.295939944615115E-6	DESIGN	8.178164806263948E-8	DEFECT	2.9384031456139316E-8	DOCUMENTATION	2.017636342646906E-9	TEST
// Create SQL_TOKEN nodes for the columns.	WITHOUT_CLASSIFICATION	0.9999876851371783	WITHOUT_CLASSIFICATION	1.2206412588844967E-5	DESIGN	7.299858213377624E-8	TEST	1.3171792919158764E-8	DOCUMENTATION	1.1393008585610395E-8	DEFECT	1.0886849098611725E-8	IMPLEMENTATION
// Generate the property select tokens.	WITHOUT_CLASSIFICATION	0.9999981417869771	WITHOUT_CLASSIFICATION	1.1744166563250703E-6	DESIGN	3.6208618848075104E-7	DEFECT	2.2066816562618654E-7	IMPLEMENTATION	5.302912063018628E-8	DOCUMENTATION	4.801289179312012E-8	TEST
// Get the function name node.	WITHOUT_CLASSIFICATION	0.9999830273948525	WITHOUT_CLASSIFICATION	1.1689992893865592E-5	IMPLEMENTATION	3.814151837648065E-6	DESIGN	8.731199768714779E-7	DEFECT	5.148522167795154E-7	DOCUMENTATION	8.048822243768741E-8	TEST
// Method expressions in a SELECT should always be considered scalar.	WITHOUT_CLASSIFICATION	0.9967357113737529	WITHOUT_CLASSIFICATION	0.0032125651379144343	DESIGN	5.0942946410369244E-5	DEFECT	7.254753661601553E-7	IMPLEMENTATION	4.364661041145142E-8	DOCUMENTATION	1.1419945560347367E-8	TEST
// If this is 'elements' then create a new FROM element.	WITHOUT_CLASSIFICATION	0.9999961354645434	WITHOUT_CLASSIFICATION	3.442494075271982E-6	DESIGN	3.7086274183678344E-7	DEFECT	4.1362590178702385E-8	TEST	5.9730131549571826E-9	DOCUMENTATION	3.843036122424812E-9	IMPLEMENTATION
// Not elements(x)	WITHOUT_CLASSIFICATION	0.9997538989286638	WITHOUT_CLASSIFICATION	1.1827769051668432E-4	IMPLEMENTATION	1.173836012813961E-4	DESIGN	8.42510093230231E-6	DEFECT	1.4683491162193356E-6	TEST	5.463294895343714E-7	DOCUMENTATION
// Dialect function	WITHOUT_CLASSIFICATION	0.9999868590789607	WITHOUT_CLASSIFICATION	6.195970334816352E-6	IMPLEMENTATION	4.332080364477582E-6	DEFECT	2.350185939286794E-6	DESIGN	2.1568629382241875E-7	DOCUMENTATION	4.699810683561621E-8	TEST
// Collection 'property function'	WITHOUT_CLASSIFICATION	0.9999059298433345	WITHOUT_CLASSIFICATION	8.803994165061054E-5	DEFECT	5.55347480164151E-6	DESIGN	2.5921918208843496E-7	IMPLEMENTATION	1.9754458498220145E-7	DOCUMENTATION	1.9976446118797982E-8	TEST
// If the constant is an IDENT, figure out what it means...	WITHOUT_CLASSIFICATION	0.999814336833284	WITHOUT_CLASSIFICATION	1.519261468337106E-4	DESIGN	3.20226629093106E-5	DEFECT	8.87051746391472E-7	TEST	7.577893052673056E-7	IMPLEMENTATION	6.951592129231655E-8	DOCUMENTATION
// IDENT is a class alias in the FROM.	WITHOUT_CLASSIFICATION	0.9999990489608356	WITHOUT_CLASSIFICATION	9.138781361098069E-7	DESIGN	3.080718556394218E-8	DEFECT	2.4985521437612877E-9	DOCUMENTATION	2.432347364259498E-9	IMPLEMENTATION	1.4229434350730745E-9	TEST
// Resolve to an identity column.	WITHOUT_CLASSIFICATION	0.9954287864261321	WITHOUT_CLASSIFICATION	0.004560810765391086	DESIGN	6.142272776504832E-6	IMPLEMENTATION	2.203126546070206E-6	DEFECT	1.2810128052146685E-6	DOCUMENTATION	7.763963489282237E-7	TEST
// Otherwise, it's a literal.	WITHOUT_CLASSIFICATION	0.9999820353169033	WITHOUT_CLASSIFICATION	1.2847205972098017E-5	DESIGN	4.942445428761209E-6	IMPLEMENTATION	1.4231665763658408E-7	TEST	1.7413499305459214E-8	DEFECT	1.5301538953264145E-8	DOCUMENTATION
// the name of an entity class	WITHOUT_CLASSIFICATION	0.9999069796750311	WITHOUT_CLASSIFICATION	9.111243776112933E-5	DESIGN	1.1801183113147566E-6	DEFECT	4.883689379248528E-7	DOCUMENTATION	1.753095630984338E-7	IMPLEMENTATION	6.409039545050685E-8	TEST
//the class discriminator value	WITHOUT_CLASSIFICATION	0.9999990244998522	WITHOUT_CLASSIFICATION	7.926650371822961E-7	DESIGN	1.763235285886638E-7	DEFECT	5.667176105367876E-9	DOCUMENTATION	8.024431610714713E-10	TEST	4.196264855370216E-11	IMPLEMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.999995807799975	WITHOUT_CLASSIFICATION	2.5232175485062135E-6	TEST	8.092211959060847E-7	IMPLEMENTATION	5.401682343328248E-7	DESIGN	2.7306971042645187E-7	DEFECT	4.652333597852604E-8	DOCUMENTATION
// Add a space before the display text.	WITHOUT_CLASSIFICATION	0.9999993209366763	WITHOUT_CLASSIFICATION	6.181722840544976E-7	IMPLEMENTATION	2.849601182868686E-8	DESIGN	2.437153714949882E-8	DEFECT	6.390958030079305E-9	DOCUMENTATION	1.6325326391075159E-9	TEST
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999987130635025	WITHOUT_CLASSIFICATION	1.1908524526737702E-6	IMPLEMENTATION	3.918267271388726E-8	DESIGN	2.9651504278147618E-8	DEFECT	1.5207366907617574E-8	DOCUMENTATION	1.2042500867509765E-8	TEST
// child == parent.getFirstChild()	WITHOUT_CLASSIFICATION	0.999974974358482	WITHOUT_CLASSIFICATION	2.4867784835269458E-5	IMPLEMENTATION	7.269833230847961E-8	DEFECT	7.039172357729119E-8	DESIGN	8.3517804807767E-9	DOCUMENTATION	6.414846337447933E-9	TEST
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999987130635025	WITHOUT_CLASSIFICATION	1.1908524526737702E-6	IMPLEMENTATION	3.918267271388726E-8	DESIGN	2.9651504278147618E-8	DEFECT	1.5207366907617574E-8	DOCUMENTATION	1.2042500867509765E-8	TEST
// Filter conditions need to be inserted before the HQL where condition and the // theta join node.  This is because org.hibernate.loader.Loader binds the filter parameters first, // then it binds all the HQL query parameters, see org.hibernate.loader.Loader.processFilterParameters().	WITHOUT_CLASSIFICATION	0.9999998436057556	WITHOUT_CLASSIFICATION	8.702299895238846E-8	DEFECT	4.9799177249873484E-8	IMPLEMENTATION	1.8798240182358293E-8	DESIGN	5.897727483285229E-10	DOCUMENTATION	1.840553067921902E-10	TEST
// Put the FILTERS node before the HQL condition and theta joins	WITHOUT_CLASSIFICATION	0.9999897508366166	WITHOUT_CLASSIFICATION	9.194669362746781E-6	DESIGN	6.670660009092127E-7	IMPLEMENTATION	3.0011463736415E-7	DEFECT	8.432461160035598E-8	DOCUMENTATION	2.9887710825928147E-9	TEST
// add the current fragment to the FILTERS node	WITHOUT_CLASSIFICATION	0.9998516708366545	WITHOUT_CLASSIFICATION	1.092347049818864E-4	IMPLEMENTATION	2.571500413564346E-5	DESIGN	1.263909181117014E-5	DOCUMENTATION	4.889075892211302E-7	DEFECT	2.5145482764599956E-7	TEST
// Create a new THETA_JOINS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999992059290728	WITHOUT_CLASSIFICATION	6.295820108601653E-7	IMPLEMENTATION	1.537332992092013E-7	DESIGN	9.74193450370762E-9	DEFECT	5.249421843236023E-10	DOCUMENTATION	4.887404903246925E-10	TEST
// Put the THETA_JOINS node before the HQL condition, after the filters.	WITHOUT_CLASSIFICATION	0.9999960257935128	WITHOUT_CLASSIFICATION	3.059231023821252E-6	DESIGN	8.235249311729602E-7	IMPLEMENTATION	7.038597396560135E-8	DEFECT	1.0573415934313642E-8	TEST	1.0491142439694457E-8	DOCUMENTATION
// add the current fragment to the THETA_JOINS node	WITHOUT_CLASSIFICATION	0.9999680730568599	WITHOUT_CLASSIFICATION	2.1277061417482377E-5	IMPLEMENTATION	5.286887585395659E-6	DOCUMENTATION	5.1945050420707055E-6	DESIGN	9.098031769111125E-8	TEST	7.75087775813259E-8	DEFECT
// First, try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.9999995380316609	WITHOUT_CLASSIFICATION	3.040449109627888E-7	DESIGN	6.911438079467124E-8	DEFECT	6.651158869039864E-8	IMPLEMENTATION	1.6536424086369226E-8	TEST	5.761034632880664E-9	DOCUMENTATION
// unable to locate it using this name	WITHOUT_CLASSIFICATION	0.9999925048296815	WITHOUT_CLASSIFICATION	7.151836184402062E-6	DESIGN	2.3915160169159023E-7	TEST	9.584279461563461E-8	DEFECT	4.3373964005258305E-9	IMPLEMENTATION	4.002341521029657E-9	DOCUMENTATION
// If that didn't work, try using the 'import' name.	WITHOUT_CLASSIFICATION	0.9983762432264797	WITHOUT_CLASSIFICATION	0.0013609180084199642	DEFECT	2.6137311393793224E-4	DESIGN	8.06108806363105E-7	TEST	3.3341848225757555E-7	IMPLEMENTATION	3.2612387377811245E-7	DOCUMENTATION
// Implicit joins use theta style (WHERE pk = fk), explicit joins use JOIN (after from)	WITHOUT_CLASSIFICATION	0.9999925572802899	WITHOUT_CLASSIFICATION	4.505555566573749E-6	IMPLEMENTATION	2.8147902894727744E-6	DESIGN	9.723273083409782E-8	DEFECT	1.3359961416523288E-8	DOCUMENTATION	1.178116164444538E-8	TEST
// locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.9999994482716448	WITHOUT_CLASSIFICATION	4.912816360051095E-7	IMPLEMENTATION	2.762326292273229E-8	DESIGN	2.3084085529326804E-8	DEFECT	5.9976544748598E-9	TEST	3.7417163342930465E-9	DOCUMENTATION
// determine the type of the first argument...	WITHOUT_CLASSIFICATION	0.9999822002519583	WITHOUT_CLASSIFICATION	1.7345638944257035E-5	DESIGN	2.2785104005798418E-7	DEFECT	1.1401257346161808E-7	DOCUMENTATION	6.976075010598198E-8	IMPLEMENTATION	4.248473381574972E-8	TEST
// Use the DOT node to emit the first column name. // Create the column names, folled by the column aliases.	WITHOUT_CLASSIFICATION	0.9999999866996835	WITHOUT_CLASSIFICATION	7.3969653334817E-9	IMPLEMENTATION	3.798712090552825E-9	DESIGN	1.6882170367344283E-9	TEST	3.497462575453565E-10	DEFECT	6.667575393201763E-11	DOCUMENTATION
// Note: this simply constructs a "raw" SQL_TOKEN representing the // where fragment and injects this into the tree.  This "works"; // however it is probably not the best long-term solution. // // At some point we probably want to apply an additional grammar to // properly tokenize this where fragment into constituent parts // focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.9997344978770212	DESIGN	2.611637638059499E-4	WITHOUT_CLASSIFICATION	3.5906352038551703E-6	DEFECT	3.9526531259653323E-7	TEST	2.9768465298364114E-7	IMPLEMENTATION	5.4774003442186465E-8	DOCUMENTATION
// Append the text of the current node.	WITHOUT_CLASSIFICATION	0.9999191206904512	WITHOUT_CLASSIFICATION	3.757593223463129E-5	IMPLEMENTATION	3.517992860557623E-5	DEFECT	5.427790426509121E-6	DESIGN	2.1044020247445105E-6	DOCUMENTATION	5.912562573931443E-7	TEST
// If the node has a first child, recurse into the first child.	WITHOUT_CLASSIFICATION	0.999999937779242	WITHOUT_CLASSIFICATION	5.835024444636501E-8	IMPLEMENTATION	2.9529524232828336E-9	DESIGN	7.087434045635639E-10	DEFECT	1.1791297267113353E-10	DOCUMENTATION	9.090486938397776E-11	TEST
// If there is a second child (RHS), recurse into that child.	WITHOUT_CLASSIFICATION	0.999977468228677	WITHOUT_CLASSIFICATION	2.21769487070382E-5	DESIGN	2.515449132855427E-7	IMPLEMENTATION	9.530649778788744E-8	DEFECT	4.6031858588960144E-9	DOCUMENTATION	3.3680189883074937E-9	TEST
// Iterate through the alias,JoinSequence pairs and generate SQL token nodes.	WITHOUT_CLASSIFICATION	0.9999962049423623	WITHOUT_CLASSIFICATION	3.77938850389562E-6	DESIGN	6.4260950835584995E-9	DEFECT	5.09256137299019E-9	DOCUMENTATION	3.2193253204048926E-9	TEST	9.311519402263743E-10	IMPLEMENTATION
// If the from element represents a JOIN_FRAGMENT and it is // a theta-style join, convert its type from JOIN_FRAGMENT // to FROM_FRAGMENT	WITHOUT_CLASSIFICATION	0.9999999359203486	WITHOUT_CLASSIFICATION	6.166069148799571E-8	DESIGN	1.7001798526580992E-9	IMPLEMENTATION	5.156488180185054E-10	DEFECT	1.8683512297342308E-10	TEST	1.6296056875709133E-11	DOCUMENTATION
// this is used during SqlGenerator processing	WITHOUT_CLASSIFICATION	0.9997834588321246	WITHOUT_CLASSIFICATION	2.163902305572667E-4	DESIGN	8.428301959189405E-8	DEFECT	3.860427341751932E-8	TEST	2.1656007243198255E-8	DOCUMENTATION	6.394017916392421E-9	IMPLEMENTATION
// If there is a FROM fragment and the FROM element is an explicit, then add the from part.	WITHOUT_CLASSIFICATION	0.9995989487143536	WITHOUT_CLASSIFICATION	4.0004104883215817E-4	DESIGN	7.531422753132429E-7	DEFECT	1.874714150181762E-7	TEST	3.827358364544714E-8	DOCUMENTATION	3.134954032133935E-8	IMPLEMENTATION
/*&& StringHelper.isNotEmpty( frag )*/	WITHOUT_CLASSIFICATION	0.9998565368017106	WITHOUT_CLASSIFICATION	9.677345191200619E-5	DESIGN	3.772460978182133E-5	IMPLEMENTATION	8.026427225184677E-6	DEFECT	4.94750492529832E-7	TEST	4.439588778500169E-7	DOCUMENTATION
// The FROM fragment will probably begin with ', '.  Remove this if it is present.	WITHOUT_CLASSIFICATION	0.9043602634410465	WITHOUT_CLASSIFICATION	0.09535074092865103	DESIGN	2.463070725678863E-4	DEFECT	4.1249972463453545E-5	TEST	9.528727642649203E-7	DOCUMENTATION	4.857125070947329E-7	IMPLEMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999911040468228	WITHOUT_CLASSIFICATION	8.418287508220239E-6	DESIGN	4.03537797425674E-7	IMPLEMENTATION	7.383904466940449E-8	DEFECT	2.124593077082876E-10	TEST	7.636755008527543E-11	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person ORDER BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999994456360464	WITHOUT_CLASSIFICATION	4.891706350481685E-7	IMPLEMENTATION	2.659432486995156E-8	DESIGN	2.123354640649161E-8	DEFECT	1.1668015857728037E-8	TEST	5.697431405922024E-9	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9981609085150148	WITHOUT_CLASSIFICATION	0.0016867312803424271	DESIGN	1.52258924133005E-4	DEFECT	5.29268264982236E-8	TEST	4.800134446835588E-8	DOCUMENTATION	3.5233866666429343E-10	IMPLEMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9977811051727286	WITHOUT_CLASSIFICATION	0.002158263663964605	DESIGN	3.8104961254197666E-5	DEFECT	1.7949063420432833E-5	IMPLEMENTATION	3.3723080604934876E-6	TEST	1.204830571654662E-6	DOCUMENTATION
//default mode	WITHOUT_CLASSIFICATION	0.9998198700474255	WITHOUT_CLASSIFICATION	1.7224368638262173E-4	DESIGN	3.609684807217137E-6	IMPLEMENTATION	3.2569357701799433E-6	DEFECT	5.755141092844906E-7	DOCUMENTATION	4.4413150532445417E-7	TEST
//QueryJoinFragment join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999980526086992	WITHOUT_CLASSIFICATION	9.308955392966417E-7	DESIGN	8.570238778508206E-7	IMPLEMENTATION	1.1299723875329023E-7	DOCUMENTATION	2.3931861200542062E-8	DEFECT	2.2542783684607837E-8	TEST
//reset the dotcount (but not the path) //after reset!	WITHOUT_CLASSIFICATION	0.9999879866159309	WITHOUT_CLASSIFICATION	1.1355846398347169E-5	DEFECT	3.9196480152894235E-7	IMPLEMENTATION	1.737729024933557E-7	DESIGN	6.566398346191227E-8	TEST	2.6135983313187667E-8	DOCUMENTATION
//after reset!	WITHOUT_CLASSIFICATION	0.9999836075109171	WITHOUT_CLASSIFICATION	8.606928181979559E-6	DEFECT	3.6940016145626178E-6	IMPLEMENTATION	2.9200439307375102E-6	DESIGN	9.201668059212415E-7	TEST	2.513485496914495E-7	DOCUMENTATION
// we don't need to worry about any condition in the ON clause // here (toFromFragmentString), since anything in the ON condition // is already applied to the whole query	WITHOUT_CLASSIFICATION	0.9229877988367134	WITHOUT_CLASSIFICATION	0.07085073569386412	DESIGN	0.005343469969797299	DEFECT	4.575721579533563E-4	DOCUMENTATION	3.5060411205291384E-4	IMPLEMENTATION	9.819229618715796E-6	TEST
// bit_length feels a bit broken to me. We have to cast to char in order to // pass when a numeric value is supplied. But of course the answers given will // be wildly different for these two datatypes. 1234.5678 will be 9 bytes as // a char string but will be 8 or 16 bytes as a true numeric. // Jay Nance 2006-09-22	WITHOUT_CLASSIFICATION	0.9781348381292195	WITHOUT_CLASSIFICATION	0.02182523809172449	DESIGN	3.9039003126154524E-5	DEFECT	7.732578206145732E-7	IMPLEMENTATION	6.909140715372588E-8	TEST	4.24267020723919E-8	DOCUMENTATION
// dotcount>=2	WITHOUT_CLASSIFICATION	0.9999647892352875	WITHOUT_CLASSIFICATION	3.3073924778257E-5	DEFECT	1.5796487811499156E-6	DESIGN	2.9210803879574385E-7	IMPLEMENTATION	2.1374211421392855E-7	DOCUMENTATION	5.134100001126308E-8	TEST
// Do the corresponding RHS	WITHOUT_CLASSIFICATION	0.99996305526394	WITHOUT_CLASSIFICATION	2.7427589662068837E-5	DEFECT	4.769093422018162E-6	IMPLEMENTATION	2.8860201448036735E-6	DESIGN	1.5424747757446497E-6	DOCUMENTATION	3.1955805529385534E-7	TEST
//if its "id"	WITHOUT_CLASSIFICATION	0.9999738578167718	WITHOUT_CLASSIFICATION	2.093594995010778E-5	DESIGN	2.739125074656648E-6	DEFECT	1.4266972527302553E-6	IMPLEMENTATION	8.321208904524275E-7	TEST	2.0829006018333962E-7	DOCUMENTATION
//or its the id property name	WITHOUT_CLASSIFICATION	0.9999612540087478	WITHOUT_CLASSIFICATION	3.4073486164811924E-5	DESIGN	4.054059251205922E-6	DEFECT	3.80269451056679E-7	DOCUMENTATION	1.7953901737021125E-7	TEST	5.8637367875852494E-8	IMPLEMENTATION
//join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999988748413848	WITHOUT_CLASSIFICATION	5.893626446346474E-7	IMPLEMENTATION	4.213789806834E-7	DESIGN	8.11538355363574E-8	DOCUMENTATION	2.0159450014756862E-8	DEFECT	1.310370402250626E-8	TEST
//important!!	WITHOUT_CLASSIFICATION	0.9997043702095866	WITHOUT_CLASSIFICATION	1.587304491392399E-4	DESIGN	1.084016281697889E-4	DEFECT	2.0200641294550015E-5	IMPLEMENTATION	6.20782376398123E-6	DOCUMENTATION	2.089248045790169E-6	TEST
//String[] keyCols = collPersister.getKeyColumnNames();	WITHOUT_CLASSIFICATION	0.9999984209988617	WITHOUT_CLASSIFICATION	1.2476247965207123E-6	DESIGN	1.8117721191094876E-7	DEFECT	8.73566970566288E-8	TEST	5.74309609705555E-8	IMPLEMENTATION	5.411471741716734E-9	DOCUMENTATION
// an association	WITHOUT_CLASSIFICATION	0.999998069486963	WITHOUT_CLASSIFICATION	1.069013567011536E-6	DESIGN	3.965042651955112E-7	DOCUMENTATION	2.4556322570286194E-7	TEST	2.113807849301697E-7	DEFECT	8.051194128383921E-9	IMPLEMENTATION
//allow index() function:	WITHOUT_CLASSIFICATION	0.9997276972484459	WITHOUT_CLASSIFICATION	2.211558744269772E-4	DEFECT	3.722265241176138E-5	IMPLEMENTATION	1.2417848828240526E-5	DESIGN	1.3331245034068833E-6	DOCUMENTATION	1.732513837657473E-7	TEST
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.990906082293557	WITHOUT_CLASSIFICATION	0.008128514080556273	DEFECT	9.232742856673208E-4	DESIGN	3.933763349040623E-5	TEST	2.769023474113928E-6	DOCUMENTATION	2.26832548786487E-8	IMPLEMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9981609085150148	WITHOUT_CLASSIFICATION	0.0016867312803424271	DESIGN	1.52258924133005E-4	DEFECT	5.29268264982236E-8	TEST	4.800134446835588E-8	DOCUMENTATION	3.5233866666429343E-10	IMPLEMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9989452435413201	WITHOUT_CLASSIFICATION	6.623009885670147E-4	DESIGN	2.0036512885480303E-4	DEFECT	1.3399202837105612E-4	IMPLEMENTATION	4.747036688633162E-5	DOCUMENTATION	1.0627946000809233E-5	TEST
// collections of values	WITHOUT_CLASSIFICATION	0.9999903893312581	WITHOUT_CLASSIFICATION	5.403460474730105E-6	DEFECT	4.1480268571583726E-6	DESIGN	2.4414154550348205E-8	IMPLEMENTATION	2.165395746884277E-8	TEST	1.3113298177484412E-8	DOCUMENTATION
//opening paren in new Foo ( ... )	WITHOUT_CLASSIFICATION	0.9966297335442185	WITHOUT_CLASSIFICATION	0.0027445894235890904	DESIGN	5.366361467580618E-4	DEFECT	4.767605883979994E-5	IMPLEMENTATION	3.3689418010871226E-5	DOCUMENTATION	7.67540858369599E-6	TEST
//if we are inside a new Result(), but not inside a nested function	WITHOUT_CLASSIFICATION	0.9999815826739645	WITHOUT_CLASSIFICATION	1.48190894520967E-5	DEFECT	3.4072638934743937E-6	DESIGN	1.5949073777952152E-7	TEST	2.7334681868365516E-8	DOCUMENTATION	4.147270257082756E-9	IMPLEMENTATION
//special case	WITHOUT_CLASSIFICATION	0.9999877100206974	WITHOUT_CLASSIFICATION	1.1245143456867628E-5	IMPLEMENTATION	4.5688798358612366E-7	DEFECT	3.8014222519981516E-7	DESIGN	1.9074005121332511E-7	DOCUMENTATION	1.706558586482985E-8	TEST
// the name of an SQL function	WITHOUT_CLASSIFICATION	0.9999945009708785	WITHOUT_CLASSIFICATION	4.415189513746342E-6	DESIGN	7.530172449179754E-7	DEFECT	2.837714395308335E-7	DOCUMENTATION	3.1719624071338506E-8	IMPLEMENTATION	1.533129916513792E-8	TEST
//null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.997670816731121	WITHOUT_CLASSIFICATION	0.0023269137549834806	DESIGN	8.790119376958606E-7	DEFECT	7.467151014179365E-7	IMPLEMENTATION	6.200250405829375E-7	DOCUMENTATION	2.3761815863126572E-8	TEST
//this is basically a copy/paste of OrderByParser ... might be worth refactoring	WITHOUT_CLASSIFICATION	0.8882868327067731	DESIGN	0.07431913788626901	WITHOUT_CLASSIFICATION	0.037388785850475746	DEFECT	2.544854171814133E-6	TEST	2.3719143101541466E-6	IMPLEMENTATION	3.267880002427994E-7	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person GROUP BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999982279316346	WITHOUT_CLASSIFICATION	1.3019459717913932E-6	IMPLEMENTATION	3.582141612164984E-7	DESIGN	7.484291943119806E-8	DEFECT	2.290035539336661E-8	TEST	1.4164957602445746E-8	DOCUMENTATION
// return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.9994107789054129	WITHOUT_CLASSIFICATION	5.863471589347408E-4	DESIGN	2.8499247824770967E-6	DEFECT	1.1166320433961971E-8	DOCUMENTATION	8.290834398305833E-9	TEST	4.553715112159761E-9	IMPLEMENTATION
//register collection role	WITHOUT_CLASSIFICATION	0.9999660340887578	WITHOUT_CLASSIFICATION	3.160654977818357E-5	DESIGN	1.7333175217279743E-6	IMPLEMENTATION	3.895428464064934E-7	DEFECT	1.7804779216448995E-7	TEST	5.8453303604872615E-8	DOCUMENTATION
// The keyword used to specify an identity column, if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.9999999876680443	WITHOUT_CLASSIFICATION	1.1111981307298116E-8	DESIGN	4.4623988455450726E-10	DOCUMENTATION	4.1497253966022777E-10	DEFECT	1.9359526530295535E-10	TEST	1.6516655361531898E-10	IMPLEMENTATION
//.getElementPropertyMapping();	WITHOUT_CLASSIFICATION	0.9999026227020704	WITHOUT_CLASSIFICATION	7.889585234882635E-5	IMPLEMENTATION	1.4899246633949977E-5	DEFECT	1.5408632606050213E-6	DESIGN	1.1133520813494423E-6	TEST	9.279836048054903E-7	DOCUMENTATION
//crossJoins.add(name);	WITHOUT_CLASSIFICATION	0.9998544523173024	WITHOUT_CLASSIFICATION	1.1771858845547102E-4	DESIGN	1.0628373650540146E-5	DEFECT	8.464273013183177E-6	IMPLEMENTATION	7.213995860913111E-6	DOCUMENTATION	1.5224517175863839E-6	TEST
//ie no select clause in HQL	WITHOUT_CLASSIFICATION	0.999999756986892	WITHOUT_CLASSIFICATION	1.7754955342271589E-7	DESIGN	3.3665898958017106E-8	DEFECT	2.9382881504677458E-8	DOCUMENTATION	1.853689100693344E-9	IMPLEMENTATION	5.610848413300262E-10	TEST
// initialize the Set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.9999934737802837	WITHOUT_CLASSIFICATION	6.5020918901752765E-6	DESIGN	1.9719578378539552E-8	IMPLEMENTATION	2.7050427905220984E-9	TEST	8.779900509538932E-10	DOCUMENTATION	8.252149020485005E-10	DEFECT
//ie. no select clause	WITHOUT_CLASSIFICATION	0.9999999223967673	WITHOUT_CLASSIFICATION	5.49851425076875E-8	DESIGN	9.485743602130069E-9	IMPLEMENTATION	7.451561213329349E-9	DEFECT	4.748702458397941E-9	DOCUMENTATION	9.320827968786859E-10	TEST
//there _was_ a select clause	WITHOUT_CLASSIFICATION	0.9999999452286555	WITHOUT_CLASSIFICATION	3.529159105555595E-8	DESIGN	1.460794616797066E-8	IMPLEMENTATION	2.3039647290327915E-9	DEFECT	1.6768970944478814E-9	TEST	8.909453466931352E-10	DOCUMENTATION
// return the concrete type, or the underlying type if a concrete type // was not specified	WITHOUT_CLASSIFICATION	0.9998381797091164	WITHOUT_CLASSIFICATION	1.5241968923843883E-4	DESIGN	7.274699675021761E-6	DEFECT	2.105966558958427E-6	IMPLEMENTATION	1.0595795133383941E-8	DOCUMENTATION	9.33961598336709E-9	TEST
//many-to-many	WITHOUT_CLASSIFICATION	0.9989452435413201	WITHOUT_CLASSIFICATION	6.623009885670147E-4	DESIGN	2.0036512885480303E-4	DEFECT	1.3399202837105612E-4	IMPLEMENTATION	4.747036688633162E-5	DOCUMENTATION	1.0627946000809233E-5	TEST
//q.addCollection(collectionName, collectionRole);	WITHOUT_CLASSIFICATION	0.9999728969360395	WITHOUT_CLASSIFICATION	1.0864058972148502E-5	IMPLEMENTATION	8.20237444527514E-6	DEFECT	6.790915839895102E-6	DESIGN	8.163168681731898E-7	TEST	4.293978349331462E-7	DOCUMENTATION
// classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.9992779863621818	WITHOUT_CLASSIFICATION	4.2401740174668323E-4	DESIGN	2.971890176215873E-4	DEFECT	3.6194098217832964E-7	DOCUMENTATION	2.607403531051898E-7	IMPLEMENTATION	1.8453711445554723E-7	TEST
// can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.999998702210438	WITHOUT_CLASSIFICATION	8.597660049784163E-7	DESIGN	4.1061028981295944E-7	DEFECT	2.4992860146012832E-8	DOCUMENTATION	2.021465360767023E-9	TEST	3.989417954501435E-10	IMPLEMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9997483271235731	WITHOUT_CLASSIFICATION	2.501131763470649E-4	DESIGN	1.2713675687375625E-6	DEFECT	1.9111337981343814E-7	DOCUMENTATION	8.637411361972648E-8	IMPLEMENTATION	1.0845017652884338E-8	TEST
// This is the legacy behaviour for HQL queries...	WITHOUT_CLASSIFICATION	0.9994034348013617	WITHOUT_CLASSIFICATION	5.821482328370277E-4	DESIGN	1.432443871475574E-5	DEFECT	5.265669445245399E-8	TEST	2.4942962917728784E-8	IMPLEMENTATION	1.492742915297369E-8	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9544606635123333	WITHOUT_CLASSIFICATION	0.03954862347180868	IMPLEMENTATION	0.0031921801593558998	DEFECT	0.0026688009351333543	DESIGN	7.39899495881381E-5	DOCUMENTATION	5.574197178071559E-5	TEST
// not known!	WITHOUT_CLASSIFICATION	0.9544606635123333	WITHOUT_CLASSIFICATION	0.03954862347180868	IMPLEMENTATION	0.0031921801593558998	DEFECT	0.0026688009351333543	DESIGN	7.39899495881381E-5	DOCUMENTATION	5.574197178071559E-5	TEST
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999995271578305	WITHOUT_CLASSIFICATION	2.602023040229338E-7	DEFECT	9.799353130493392E-8	IMPLEMENTATION	5.455691034632402E-8	DESIGN	4.340802383548666E-8	DOCUMENTATION	1.668139992120234E-8	TEST
// not known!	WITHOUT_CLASSIFICATION	0.9544606635123333	WITHOUT_CLASSIFICATION	0.03954862347180868	IMPLEMENTATION	0.0031921801593558998	DEFECT	0.0026688009351333543	DESIGN	7.39899495881381E-5	DOCUMENTATION	5.574197178071559E-5	TEST
// not known!	WITHOUT_CLASSIFICATION	0.9544606635123333	WITHOUT_CLASSIFICATION	0.03954862347180868	IMPLEMENTATION	0.0031921801593558998	DEFECT	0.0026688009351333543	DESIGN	7.39899495881381E-5	DOCUMENTATION	5.574197178071559E-5	TEST
//Need this, since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.7122536818399983	WITHOUT_CLASSIFICATION	0.2672522959905478	DESIGN	0.017104735469905083	DEFECT	0.0028714212621276467	DOCUMENTATION	4.1560076880667654E-4	IMPLEMENTATION	1.0226466861458055E-4	TEST
//tokens that close a sub expression //tokens that open a sub expression //tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.9999195369784263	WITHOUT_CLASSIFICATION	6.83325092702505E-5	DEFECT	1.1974840720626779E-5	DESIGN	8.276307331676615E-8	TEST	5.417749661667147E-8	IMPLEMENTATION	1.8731013004437346E-8	DOCUMENTATION
//expressionTerminators.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999984828129015	WITHOUT_CLASSIFICATION	1.4810305918119819E-6	DESIGN	2.0007527314732794E-8	IMPLEMENTATION	1.1427665515617055E-8	DEFECT	3.2264933990090177E-9	TEST	1.4948206712553761E-9	DOCUMENTATION
//expressionOpeners.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999996869182429	WITHOUT_CLASSIFICATION	2.0123731971993164E-7	DESIGN	7.94378834892134E-8	IMPLEMENTATION	2.8065947829225493E-8	DEFECT	2.316398481745629E-9	TEST	2.0242074582535213E-9	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource) // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9991553899728499	WITHOUT_CLASSIFICATION	7.864695511734956E-4	DESIGN	5.723318157635825E-5	DEFECT	5.992162934722946E-7	IMPLEMENTATION	2.9221026083283417E-7	DOCUMENTATION	1.586784593050886E-8	TEST
// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and "do the right thing" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character (what is to be trimmed off?) // the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.9981099397337745	WITHOUT_CLASSIFICATION	0.0018894828937868614	DESIGN	4.1817459898306077E-7	DOCUMENTATION	1.3347409553565987E-7	IMPLEMENTATION	1.3979320642692368E-8	TEST	1.1744423579465629E-8	DEFECT
//Inside a BETWEEN ... AND ... expression	WITHOUT_CLASSIFICATION	0.9980936548828275	WITHOUT_CLASSIFICATION	0.0013239730644395238	DEFECT	4.2886889467004795E-4	IMPLEMENTATION	1.4846743741703242E-4	DESIGN	4.4308064555389715E-6	DOCUMENTATION	6.049141902784488E-7	TEST
//were an odd or even number of NOTs encountered //the join string built up by compound paths inside this expression //a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.999998597321919	WITHOUT_CLASSIFICATION	1.3869680321072489E-6	DESIGN	8.415341306062762E-9	DEFECT	5.309477531252294E-9	DOCUMENTATION	1.3020708212310385E-9	IMPLEMENTATION	6.831591385700242E-10	TEST
//ie. a many-to-many	WITHOUT_CLASSIFICATION	0.999243923699031	WITHOUT_CLASSIFICATION	6.599386673720661E-4	DESIGN	6.698442567287948E-5	DEFECT	2.5320125019811054E-5	IMPLEMENTATION	2.951448586244061E-6	DOCUMENTATION	8.816343180208504E-7	TEST
//Cope with [,]	WITHOUT_CLASSIFICATION	0.999822005950609	WITHOUT_CLASSIFICATION	1.5155154089431072E-4	DESIGN	1.7613633210669285E-5	IMPLEMENTATION	3.632833511322128E-6	TEST	3.068028045886303E-6	DEFECT	2.1280137290665945E-6	DOCUMENTATION
//Cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.9994980452775085	WITHOUT_CLASSIFICATION	5.001809704766204E-4	DESIGN	1.216860124044611E-6	DEFECT	4.0205330920127855E-7	IMPLEMENTATION	1.2018782431142086E-7	DOCUMENTATION	3.4650757534798645E-8	TEST
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9998445836865253	WITHOUT_CLASSIFICATION	1.4474919419641603E-4	DESIGN	5.261475388794914E-6	IMPLEMENTATION	5.138323295700511E-6	DEFECT	1.968694615342508E-7	DOCUMENTATION	7.045113223408149E-8	TEST
//Cope with a subselect	WITHOUT_CLASSIFICATION	0.9999576693322164	WITHOUT_CLASSIFICATION	4.180576638162991E-5	DESIGN	3.033254615847081E-7	DEFECT	8.831850789296762E-8	TEST	8.819501751725949E-8	IMPLEMENTATION	4.5062414871010666E-8	DOCUMENTATION
//Cope with special cases of AND, NOT, ()	WITHOUT_CLASSIFICATION	0.9999250118811998	WITHOUT_CLASSIFICATION	6.130770242217235E-5	IMPLEMENTATION	5.3104245727039214E-6	DESIGN	5.205006657132812E-6	DEFECT	2.029355126528836E-6	DOCUMENTATION	1.135630021860096E-6	TEST
//Close extra brackets we opened	WITHOUT_CLASSIFICATION	0.999997171343846	WITHOUT_CLASSIFICATION	2.6970723466585214E-6	DESIGN	8.907810133504372E-8	DEFECT	2.3046700940190062E-8	IMPLEMENTATION	1.1835895491979553E-8	DOCUMENTATION	7.623109427402131E-9	TEST
//take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.9974249752992109	WITHOUT_CLASSIFICATION	0.0020728166478046696	DEFECT	4.966824434259508E-4	DESIGN	3.5676098305186995E-6	TEST	1.173810839533767E-6	IMPLEMENTATION	7.84188888439137E-7	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999999115606978	WITHOUT_CLASSIFICATION	7.788653112189252E-8	DESIGN	4.6206680923006464E-9	DEFECT	2.4134582157540236E-9	DOCUMENTATION	1.983196713115381E-9	IMPLEMENTATION	1.5354479938469174E-9	TEST
//process a token, mapping OO path expressions to SQL expressions	WITHOUT_CLASSIFICATION	0.9999976250061883	WITHOUT_CLASSIFICATION	2.2223675833174276E-6	DEFECT	8.316479543625589E-8	DESIGN	4.513389057438653E-8	IMPLEMENTATION	2.1538478270716763E-8	DOCUMENTATION	2.7890641118963217E-9	TEST
//Open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.9353742661505047	WITHOUT_CLASSIFICATION	0.0642189917963829	DESIGN	3.352368672755619E-4	DEFECT	3.477882569207613E-5	DOCUMENTATION	2.8987212143335415E-5	TEST	7.739148001517912E-6	IMPLEMENTATION
//Cope with special cases of AND, NOT, )	WITHOUT_CLASSIFICATION	0.9999225460199911	WITHOUT_CLASSIFICATION	5.283916155393514E-5	IMPLEMENTATION	1.3855648134849153E-5	DESIGN	6.42049153784961E-6	DEFECT	2.5951892510381303E-6	DOCUMENTATION	1.7434895312340142E-6	TEST
// the next one up must also be	WITHOUT_CLASSIFICATION	0.9999623082241462	WITHOUT_CLASSIFICATION	2.251028922323182E-5	IMPLEMENTATION	1.4053458646754159E-5	DESIGN	6.62197782076849E-7	DEFECT	2.737278402520418E-7	TEST	1.9210236146189513E-7	DOCUMENTATION
// Add any joins	WITHOUT_CLASSIFICATION	0.9999872422066247	WITHOUT_CLASSIFICATION	5.2119124895814575E-6	IMPLEMENTATION	4.450552319723482E-6	DEFECT	2.0147677696085297E-6	DOCUMENTATION	9.741003597549599E-7	DESIGN	1.0646043657645113E-7	TEST
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999999115606978	WITHOUT_CLASSIFICATION	7.788653112189252E-8	DESIGN	4.6206680923006464E-9	DEFECT	2.4134582157540236E-9	DOCUMENTATION	1.983196713115381E-9	IMPLEMENTATION	1.5354479938469174E-9	TEST
//named query parameter	WITHOUT_CLASSIFICATION	0.9977811051727286	WITHOUT_CLASSIFICATION	0.002158263663964605	DESIGN	3.8104961254197666E-5	DEFECT	1.7949063420432833E-5	IMPLEMENTATION	3.3723080604934876E-6	TEST	1.204830571654662E-6	DOCUMENTATION
//path expression	WITHOUT_CLASSIFICATION	0.9999754510628196	WITHOUT_CLASSIFICATION	1.3345067469391902E-5	DEFECT	7.329570654498676E-6	IMPLEMENTATION	3.411314139780898E-6	DESIGN	3.2090034720207047E-7	DOCUMENTATION	1.4208456950029156E-7	TEST
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999993249669498	WITHOUT_CLASSIFICATION	5.87884500463294E-7	IMPLEMENTATION	4.071603039042284E-8	DEFECT	3.290370834460796E-8	DESIGN	9.01681068835994E-9	TEST	4.5120004160923326E-9	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999994344278235	WITHOUT_CLASSIFICATION	3.458058652935925E-7	IMPLEMENTATION	1.7675076000571998E-7	DESIGN	3.6122010833786504E-8	DEFECT	4.6909066583746045E-9	TEST	2.2026337940828903E-9	DOCUMENTATION
//anything else	WITHOUT_CLASSIFICATION	0.9999333662945477	WITHOUT_CLASSIFICATION	5.3706995743085415E-5	IMPLEMENTATION	8.29986699506624E-6	DESIGN	2.3260624560291335E-6	DOCUMENTATION	1.461476110349067E-6	DEFECT	8.393041477760542E-7	TEST
// the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.9999952190380486	WITHOUT_CLASSIFICATION	2.4193940950418912E-6	DESIGN	2.22141215923342E-6	DEFECT	1.25844703737783E-7	IMPLEMENTATION	1.2315501152860874E-8	DOCUMENTATION	1.9954922402968228E-9	TEST
// careful with this!	WITHOUT_CLASSIFICATION	0.9999904471693679	WITHOUT_CLASSIFICATION	9.305662889704621E-6	DESIGN	9.639881486031338E-8	DEFECT	8.364674329235892E-8	TEST	4.797682899980826E-8	IMPLEMENTATION	1.914535543275918E-8	DOCUMENTATION
// the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.9919522444431954	WITHOUT_CLASSIFICATION	0.007822701263549052	IMPLEMENTATION	2.0139797447496586E-4	DEFECT	2.203001442232195E-5	DESIGN	1.0048408425179647E-6	DOCUMENTATION	6.214635155462371E-7	TEST
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999909903387514	WITHOUT_CLASSIFICATION	8.406266640615141E-6	IMPLEMENTATION	2.2720064678599412E-7	DOCUMENTATION	1.9675709280584836E-7	DEFECT	1.0438113479042672E-7	DESIGN	7.505573363467087E-8	TEST
//NOTICE: no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.9996553658654168	WITHOUT_CLASSIFICATION	3.408127418037823E-4	DESIGN	3.7345588427466487E-6	IMPLEMENTATION	7.487943947270148E-8	DOCUMENTATION	9.0726588254838E-9	TEST	2.881838308875247E-9	DEFECT
//cannot instantiate	WITHOUT_CLASSIFICATION	0.999578037377946	WITHOUT_CLASSIFICATION	3.761229640390317E-4	DESIGN	4.0305896452937816E-5	DEFECT	2.9071253271588243E-6	IMPLEMENTATION	1.7422436069030487E-6	DOCUMENTATION	8.843926278686177E-7	TEST
// start by looking for HQL keywords...	WITHOUT_CLASSIFICATION	0.9999954293554489	WITHOUT_CLASSIFICATION	3.4509107670244755E-6	DEFECT	1.05609028026049E-6	DESIGN	4.7100491666335725E-8	TEST	1.2125289683279077E-8	IMPLEMENTATION	4.417722472136005E-9	DOCUMENTATION
// inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.9999947043362202	WITHOUT_CLASSIFICATION	4.260899746936189E-6	DESIGN	9.82885203015828E-7	DEFECT	2.0856917407655943E-8	IMPLEMENTATION	2.0185742927557693E-8	TEST	1.083616952972661E-8	DOCUMENTATION
// 'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.9999999565252312	WITHOUT_CLASSIFICATION	3.0364151360384373E-8	IMPLEMENTATION	6.683018923347112E-9	DEFECT	6.092059035394763E-9	DESIGN	1.906087945658545E-10	DOCUMENTATION	1.4493080000147846E-10	TEST
// now anything that is not a HQL keyword	WITHOUT_CLASSIFICATION	0.9995990432832179	WITHOUT_CLASSIFICATION	3.5689784038627897E-4	DEFECT	3.1800137569987114E-5	IMPLEMENTATION	1.0861118612110571E-5	DESIGN	1.2149156514427584E-6	TEST	1.827045621549544E-7	DOCUMENTATION
// process the "old" HQL style where aliases appear _first_ // ie. using the IN or IN CLASS constructions	WITHOUT_CLASSIFICATION	0.9999999805519434	WITHOUT_CLASSIFICATION	1.3674734769252507E-8	DESIGN	3.3017617312667705E-9	DEFECT	2.3960386760256613E-9	IMPLEMENTATION	4.090643921458748E-11	TEST	3.461499373248596E-11	DOCUMENTATION
// treat it as a classname	WITHOUT_CLASSIFICATION	0.9999873138635398	WITHOUT_CLASSIFICATION	7.635079031282348E-6	DEFECT	4.778442781661179E-6	DESIGN	1.3728972207833936E-7	TEST	1.1676095454823869E-7	IMPLEMENTATION	1.856397070765006E-8	DOCUMENTATION
// treat it as a path expression	WITHOUT_CLASSIFICATION	0.9998623995777092	WITHOUT_CLASSIFICATION	1.025739264041273E-4	DEFECT	3.453460309985193E-5	IMPLEMENTATION	2.966503834659845E-7	DESIGN	1.574260729458537E-7	TEST	3.781633035385354E-8	DOCUMENTATION
// starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.9992265482606444	WITHOUT_CLASSIFICATION	7.731220831520444E-4	DESIGN	2.6771985136023634E-7	DEFECT	4.472773096482003E-8	TEST	1.1564416826697247E-8	IMPLEMENTATION	5.644204430630653E-9	DOCUMENTATION
// starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.9999353268337416	WITHOUT_CLASSIFICATION	6.229362968517485E-5	DESIGN	2.1153761759813073E-6	DEFECT	2.150940617348665E-7	IMPLEMENTATION	4.286598012376484E-8	TEST	6.200355231008351E-9	DOCUMENTATION
//allow ODMG OQL style: from Person p, p.cars c	WITHOUT_CLASSIFICATION	0.9973189646340073	WITHOUT_CLASSIFICATION	0.0025795756625274636	DESIGN	9.062553253994013E-5	DEFECT	9.85558163517159E-6	IMPLEMENTATION	5.489115973032877E-7	TEST	4.2967769281822945E-7	DOCUMENTATION
//handle quoted strings	WITHOUT_CLASSIFICATION	0.9999400095091241	WITHOUT_CLASSIFICATION	5.4755046207221914E-5	DESIGN	3.428505212046871E-6	IMPLEMENTATION	9.751606990105842E-7	TEST	5.814213900069922E-7	DEFECT	2.5035736762989134E-7	DOCUMENTATION
// Object insertions, updates, and deletions have list semantics because // they must happen in the right order so as to respect referential // integrity	WITHOUT_CLASSIFICATION	0.9999994516212262	WITHOUT_CLASSIFICATION	3.067214113686899E-7	DEFECT	2.2079349771172805E-7	DESIGN	1.7740406156810676E-8	IMPLEMENTATION	2.8393634192814757E-9	DOCUMENTATION	2.8409518178839257E-10	TEST
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999909903387514	WITHOUT_CLASSIFICATION	8.406266640615141E-6	IMPLEMENTATION	2.2720064678599412E-7	DOCUMENTATION	1.9675709280584836E-7	DEFECT	1.0438113479042672E-7	DESIGN	7.505573363467087E-8	TEST
//ignore whitespace	WITHOUT_CLASSIFICATION	0.9999980983374817	WITHOUT_CLASSIFICATION	1.6887178753270197E-6	DESIGN	9.213098057599858E-8	DOCUMENTATION	5.2479818929828855E-8	IMPLEMENTATION	4.1690207235834574E-8	TEST	2.664363632217053E-8	DEFECT
//do replacements	WITHOUT_CLASSIFICATION	0.9997031995395791	WITHOUT_CLASSIFICATION	2.74615641191656E-4	DESIGN	2.0837487222762627E-5	IMPLEMENTATION	6.629200853633385E-7	DOCUMENTATION	5.001945450073202E-7	DEFECT	1.8421737605503687E-7	TEST
//handle HQL2 collection syntax	WITHOUT_CLASSIFICATION	0.9998441685785958	WITHOUT_CLASSIFICATION	6.844729909517368E-5	IMPLEMENTATION	6.41431696835857E-5	DESIGN	2.1171942942502337E-5	DEFECT	1.9068637831794356E-6	DOCUMENTATION	1.621458998214161E-7	TEST
// uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.9996717834906614	WITHOUT_CLASSIFICATION	3.263857091306108E-4	DESIGN	1.2552604902896568E-6	IMPLEMENTATION	3.0163895751595595E-7	DEFECT	2.049041529841492E-7	TEST	6.899660716429249E-8	DOCUMENTATION
// AbstractSelectingDelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999988461205782	WITHOUT_CLASSIFICATION	7.589194662633284E-7	DESIGN	2.1646001506141833E-7	IMPLEMENTATION	1.6499904225164325E-7	TEST	8.092812859967641E-9	DEFECT	5.408085364807099E-9	DOCUMENTATION
//hilo params	WITHOUT_CLASSIFICATION	0.9999824103190842	WITHOUT_CLASSIFICATION	1.2875181595710026E-5	DESIGN	3.5293736940087652E-6	IMPLEMENTATION	7.762258399811678E-7	DEFECT	2.7843072280427394E-7	TEST	1.304690633791399E-7	DOCUMENTATION
//sql = query;	WITHOUT_CLASSIFICATION	0.9999650635426183	WITHOUT_CLASSIFICATION	2.8479608748934625E-5	DESIGN	4.495216738676299E-6	IMPLEMENTATION	1.5910385946477762E-6	DEFECT	2.044338361072279E-7	TEST	1.661594632736346E-7	DOCUMENTATION
// performance opt	WITHOUT_CLASSIFICATION	0.9999848164164488	WITHOUT_CLASSIFICATION	6.7852630159447656E-6	DESIGN	5.567255429223887E-6	IMPLEMENTATION	1.506082357172833E-6	DOCUMENTATION	1.2845518023967443E-6	DEFECT	4.0430946578008086E-8	TEST
//sql = update;	WITHOUT_CLASSIFICATION	0.9999933770019375	WITHOUT_CLASSIFICATION	3.5888239928019005E-6	IMPLEMENTATION	2.6123617589533637E-6	DESIGN	3.3311525116248965E-7	DEFECT	4.888396257146967E-8	DOCUMENTATION	3.981309708681214E-8	TEST
//hilo config	WITHOUT_CLASSIFICATION	0.9999348968634529	WITHOUT_CLASSIFICATION	2.8918219591109226E-5	DESIGN	1.566109882722576E-5	IMPLEMENTATION	1.539264334445329E-5	DEFECT	4.19213890459762E-6	DOCUMENTATION	9.390358795956225E-7	TEST
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999998229009076	WITHOUT_CLASSIFICATION	1.3294138502104445E-7	DESIGN	2.0989204836750304E-8	DOCUMENTATION	1.0693773583998218E-8	DEFECT	8.542501167498832E-9	IMPLEMENTATION	3.9322278743145166E-9	TEST
// don't allow comments on these insert statements as comments totally // blow up the Oracle getGeneratedKeys "support" :(	WITHOUT_CLASSIFICATION	0.9999967092356982	WITHOUT_CLASSIFICATION	3.0943230023171486E-6	DEFECT	1.9103794110628682E-7	DESIGN	4.0269310014737726E-9	IMPLEMENTATION	1.307288932579421E-9	TEST	6.9138497201921E-11	DOCUMENTATION
//abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.9718577384804223	WITHOUT_CLASSIFICATION	0.02287775905336374	IMPLEMENTATION	0.005184984400912488	DESIGN	6.212974975515388E-5	DEFECT	1.338786860156989E-5	DOCUMENTATION	4.000446944723156E-6	TEST
//throw new IdentifierGenerationException("save associated object first, or disable cascade for inverse association");	WITHOUT_CLASSIFICATION	0.9999999991148919	WITHOUT_CLASSIFICATION	6.687188109526304E-10	IMPLEMENTATION	1.6656307056939677E-10	TEST	2.9425588944682376E-11	DOCUMENTATION	1.984745889060164E-11	DESIGN	5.532160131736184E-13	DEFECT
// intentionally empty	WITHOUT_CLASSIFICATION	0.9998817860704511	WITHOUT_CLASSIFICATION	1.1627407129149978E-4	DESIGN	1.1842794752660787E-6	DEFECT	4.120284539730255E-7	DOCUMENTATION	3.114339994145032E-7	IMPLEMENTATION	3.211632874345017E-8	TEST
//do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.9999988437876922	WITHOUT_CLASSIFICATION	9.428142426910058E-7	DEFECT	1.6917477293059457E-7	DESIGN	3.78386754999751E-8	DOCUMENTATION	5.8763248588248815E-9	TEST	5.082916440451217E-10	IMPLEMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999822525063999	WITHOUT_CLASSIFICATION	1.3050062266490224E-5	DESIGN	4.2806415396182E-6	IMPLEMENTATION	1.507396859735463E-7	TEST	1.487957730366488E-7	DOCUMENTATION	1.1725433487789125E-7	DEFECT
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999998229009076	WITHOUT_CLASSIFICATION	1.3294138502104445E-7	DESIGN	2.0989204836750304E-8	DOCUMENTATION	1.0693773583998218E-8	DEFECT	8.542501167498832E-9	IMPLEMENTATION	3.9322278743145166E-9	TEST
// do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.9999999849705287	WITHOUT_CLASSIFICATION	6.4046853817017465E-9	DESIGN	5.0250490685828385E-9	IMPLEMENTATION	2.0171564338269235E-9	DEFECT	9.44468071887124E-10	TEST	6.381124673835679E-10	DOCUMENTATION
/* COLUMN and TABLE should be renamed but it would break the public API */	WITHOUT_CLASSIFICATION	0.9980955001515068	WITHOUT_CLASSIFICATION	0.0014652268768046224	DESIGN	4.343267645336926E-4	DEFECT	2.999527159773291E-6	IMPLEMENTATION	1.145558343683705E-6	DOCUMENTATION	8.011216513683636E-7	TEST
// Loaded entity instances, by EntityKey	WITHOUT_CLASSIFICATION	0.9999953649793598	WITHOUT_CLASSIFICATION	3.1593378306545203E-6	DESIGN	1.1925284057971726E-6	DEFECT	1.6573738159099683E-7	DOCUMENTATION	8.62040706873375E-8	IMPLEMENTATION	3.121295143824855E-8	TEST
// if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.9996981203377885	WITHOUT_CLASSIFICATION	1.7666638254333562E-4	IMPLEMENTATION	1.2095207693861003E-4	DESIGN	1.5709553113949821E-6	TEST	1.4002247796415537E-6	DOCUMENTATION	1.2900226386938554E-6	DEFECT
// the default...	WITHOUT_CLASSIFICATION	0.999600409316572	WITHOUT_CLASSIFICATION	1.723817094668227E-4	DESIGN	1.3372750993079555E-4	IMPLEMENTATION	9.023334875257179E-5	DEFECT	2.206225032463172E-6	DOCUMENTATION	1.0418902452893587E-6	TEST
// unfortunately not really safe to normalize this // to 1 as an initial value like we do the others // because we would not be able to control this if // we are using a sequence...	WITHOUT_CLASSIFICATION	0.9999998979118778	WITHOUT_CLASSIFICATION	8.3739185261583E-8	IMPLEMENTATION	1.6552200224491768E-8	DESIGN	1.1299298862704715E-9	DEFECT	5.14994254559984E-10	TEST	1.5181263148997035E-10	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9998817860704511	WITHOUT_CLASSIFICATION	1.1627407129149978E-4	DESIGN	1.1842794752660787E-6	DEFECT	4.120284539730255E-7	DOCUMENTATION	3.114339994145032E-7	IMPLEMENTATION	3.211632874345017E-8	TEST
// Identity map of CollectionEntry instances, by the collection wrapper	WITHOUT_CLASSIFICATION	0.9999979551994245	WITHOUT_CLASSIFICATION	1.0158701917796405E-6	IMPLEMENTATION	7.686909354061691E-7	DEFECT	2.4703042004812703E-7	DESIGN	7.612818819924424E-9	DOCUMENTATION	5.596209482153471E-9	TEST
// general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999990867452524	WITHOUT_CLASSIFICATION	5.754550637142426E-7	DESIGN	2.7337520497400043E-7	DEFECT	5.530595634466346E-8	IMPLEMENTATION	4.924465932960869E-9	DOCUMENTATION	4.194056595654748E-9	TEST
// table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999994996482386	WITHOUT_CLASSIFICATION	4.777717837625328E-7	DESIGN	1.8264863701830868E-8	IMPLEMENTATION	2.217617679010794E-9	TEST	1.3064497059262196E-9	DEFECT	7.910465800569389E-10	DOCUMENTATION
// Configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999053694666069	WITHOUT_CLASSIFICATION	7.842511308182726E-5	IMPLEMENTATION	1.4517273267443293E-5	DESIGN	1.3616971143289877E-6	DEFECT	1.801889663474014E-7	TEST	1.4626096306793748E-7	DOCUMENTATION
// IdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9957714172342029	WITHOUT_CLASSIFICATION	0.004221118509442391	IMPLEMENTATION	4.717854182405275E-6	DESIGN	2.442004083261424E-6	DEFECT	1.7634403759130836E-7	TEST	1.2805405144285102E-7	DOCUMENTATION
// PersistentIdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9988404443696289	WITHOUT_CLASSIFICATION	0.0011572389795420758	IMPLEMENTATION	1.9673393623580815E-6	DESIGN	1.6910617122454011E-7	TEST	1.516519015850291E-7	DEFECT	2.855339380892995E-8	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999999723277399	WITHOUT_CLASSIFICATION	2.1473251765421234E-8	DEFECT	3.003783509309125E-9	DESIGN	1.6895075767949951E-9	IMPLEMENTATION	1.1167563589644901E-9	DOCUMENTATION	3.8896075951933966E-10	TEST
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999999723277399	WITHOUT_CLASSIFICATION	2.1473251765421234E-8	DEFECT	3.003783509309125E-9	DESIGN	1.6895075767949951E-9	IMPLEMENTATION	1.1167563589644901E-9	DOCUMENTATION	3.8896075951933966E-10	TEST
//fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.9997186987892698	WITHOUT_CLASSIFICATION	2.672771495787567E-4	DESIGN	1.206920484681677E-5	DEFECT	1.348563741048247E-6	TEST	3.1689974621079947E-7	DOCUMENTATION	2.893928174266245E-7	IMPLEMENTATION
// we just hit the last position	WITHOUT_CLASSIFICATION	0.9999942576540493	WITHOUT_CLASSIFICATION	4.505348338969413E-6	IMPLEMENTATION	6.498662488520105E-7	DESIGN	3.550845879470901E-7	DEFECT	1.9432240791067485E-7	DOCUMENTATION	3.772436718004485E-8	TEST
// scroll ahead	WITHOUT_CLASSIFICATION	0.9999600144473025	WITHOUT_CLASSIFICATION	3.581214029735383E-5	DESIGN	3.299135875912987E-6	IMPLEMENTATION	6.199415232282095E-7	DEFECT	2.0022598937472824E-7	DOCUMENTATION	5.4109011503147476E-8	TEST
// scroll backward	WITHOUT_CLASSIFICATION	0.9999870685877216	WITHOUT_CLASSIFICATION	7.354538283290427E-6	DESIGN	5.110713765922741E-6	DEFECT	3.8893718356201683E-7	IMPLEMENTATION	5.235369791974541E-8	DOCUMENTATION	2.4869347454642123E-8	TEST
// we have not yet hit the last result...	WITHOUT_CLASSIFICATION	0.9674476096301449	WITHOUT_CLASSIFICATION	0.030892749977167344	DEFECT	0.0015474633338776128	IMPLEMENTATION	7.161140062777872E-5	TEST	3.635223454975656E-5	DESIGN	4.213423632676693E-6	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999867085095446	WITHOUT_CLASSIFICATION	1.2056091505028724E-5	DESIGN	5.527852064496287E-7	IMPLEMENTATION	5.48337017679791E-7	DEFECT	9.519207940829491E-8	TEST	3.9084646789531416E-8	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999944151743128	WITHOUT_CLASSIFICATION	2.4177414841212565E-6	IMPLEMENTATION	1.352941100487944E-6	DEFECT	1.3405652739589072E-6	DESIGN	2.9890406710646303E-7	DOCUMENTATION	1.74673761711024E-7	TEST
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999940042700607	WITHOUT_CLASSIFICATION	2.7599430367199207E-6	DESIGN	2.2673822225078684E-6	IMPLEMENTATION	7.622532453640573E-7	DEFECT	1.9416261226255587E-7	TEST	1.1988822581060814E-8	DOCUMENTATION
// do this when all the properties are updateable since there is // a certain likelihood that the information will already be // snapshot-cached.	WITHOUT_CLASSIFICATION	0.9978144542236985	WITHOUT_CLASSIFICATION	0.0021823924329543143	DESIGN	1.5198107776725383E-6	IMPLEMENTATION	1.1665920976475063E-6	DEFECT	4.359379860039609E-7	DOCUMENTATION	3.100248595669021E-8	TEST
// Inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999417296593	WITHOUT_CLASSIFICATION	3.3464230872161975E-8	DEFECT	1.410927536597396E-8	DESIGN	6.3069018223722875E-9	TEST	2.5757795229141986E-9	IMPLEMENTATION	1.8141530725502791E-9	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999867085095446	WITHOUT_CLASSIFICATION	1.2056091505028724E-5	DESIGN	5.527852064496287E-7	IMPLEMENTATION	5.48337017679791E-7	DEFECT	9.519207940829491E-8	TEST	3.9084646789531416E-8	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999944151743128	WITHOUT_CLASSIFICATION	2.4177414841212565E-6	IMPLEMENTATION	1.352941100487944E-6	DEFECT	1.3405652739589072E-6	DESIGN	2.9890406710646303E-7	DOCUMENTATION	1.74673761711024E-7	TEST
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999940042700607	WITHOUT_CLASSIFICATION	2.7599430367199207E-6	DESIGN	2.2673822225078684E-6	IMPLEMENTATION	7.622532453640573E-7	DEFECT	1.9416261226255587E-7	TEST	1.1988822581060814E-8	DOCUMENTATION
// Caches	WITHOUT_CLASSIFICATION	0.9999884589558785	WITHOUT_CLASSIFICATION	1.1336903049137563E-5	DESIGN	7.311975800763581E-8	DEFECT	6.068059924339027E-8	DOCUMENTATION	5.006785165379453E-8	TEST	2.02728633397875E-8	IMPLEMENTATION
//Generators:	WITHOUT_CLASSIFICATION	0.9991839462524649	WITHOUT_CLASSIFICATION	7.376570872028809E-4	DESIGN	6.180451065284934E-5	IMPLEMENTATION	6.7689459583517564E-6	DEFECT	6.031599835151371E-6	TEST	3.7916038859087802E-6	DOCUMENTATION
// cache region is defined by the root-class in the hierarchy...	WITHOUT_CLASSIFICATION	0.9999683243002904	WITHOUT_CLASSIFICATION	3.067940447164951E-5	DESIGN	9.924536865540431E-7	DEFECT	1.5950221280409552E-9	IMPLEMENTATION	1.1751745689714626E-9	TEST	1.0713548232686429E-9	DOCUMENTATION
//check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.9993176977405176	WITHOUT_CLASSIFICATION	6.809277297223511E-4	DESIGN	5.987044875443687E-7	IMPLEMENTATION	5.452909385655504E-7	DEFECT	1.4750512449790412E-7	TEST	8.302920950343178E-8	DOCUMENTATION
// after *all* persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.9999755168881106	WITHOUT_CLASSIFICATION	2.4251268331898343E-5	DESIGN	2.055984342170868E-7	IMPLEMENTATION	2.1045074947269547E-8	DEFECT	4.355728739925352E-9	TEST	8.443195679885897E-10	DOCUMENTATION
// if we get here, it is possible that we have a proxy 'in the way' of the merge map resolution... // 	WITHOUT_CLASSIFICATION	0.9984912246420803	WITHOUT_CLASSIFICATION	0.0013102935768600787	DEFECT	1.969369488665505E-4	DESIGN	1.4777500214959087E-6	TEST	5.99930990908014E-8	IMPLEMENTATION	7.0890726019279154E-9	DOCUMENTATION
//JNDI + Serialization:	WITHOUT_CLASSIFICATION	0.9999922816771489	WITHOUT_CLASSIFICATION	4.137913781874062E-6	DESIGN	2.063678033726508E-6	DEFECT	1.027421536678567E-6	IMPLEMENTATION	4.0158744269170317E-7	DOCUMENTATION	8.772205608707434E-8	TEST
//checking for named queries	WITHOUT_CLASSIFICATION	0.9996908613285047	WITHOUT_CLASSIFICATION	2.6371409298062365E-4	DESIGN	3.411238675633768E-5	IMPLEMENTATION	6.964444903936656E-6	TEST	2.877173217903574E-6	DEFECT	1.4705736367043316E-6	DOCUMENTATION
//stats	WITHOUT_CLASSIFICATION	0.9994184785676345	WITHOUT_CLASSIFICATION	5.485323962725613E-4	DESIGN	1.1890729249058118E-5	DEFECT	9.74128127546458E-6	IMPLEMENTATION	7.1799842289472825E-6	TEST	4.177041339421582E-6	DOCUMENTATION
// EntityNotFoundDelegate	WITHOUT_CLASSIFICATION	0.9999262250816473	WITHOUT_CLASSIFICATION	7.212243711282673E-5	DESIGN	5.573138654900643E-7	IMPLEMENTATION	5.013807320800216E-7	DEFECT	4.66252754116415E-7	TEST	1.2753388813694638E-7	DOCUMENTATION
// Check named HQL queries	WITHOUT_CLASSIFICATION	0.9999976866006931	WITHOUT_CLASSIFICATION	2.255453576027606E-6	DESIGN	3.48785611124544E-8	IMPLEMENTATION	1.2172503485584945E-8	TEST	6.176901630497367E-9	DOCUMENTATION	4.7177647263247615E-9	DEFECT
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9808084764918612	WITHOUT_CLASSIFICATION	0.017882818744165987	DESIGN	0.0011494676764143682	DEFECT	1.4372719779682494E-4	TEST	1.2829839277693084E-5	IMPLEMENTATION	2.6800504839769932E-6	DOCUMENTATION
//prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.9956749806710782	WITHOUT_CLASSIFICATION	0.004131305243892995	DESIGN	1.8960315021499736E-4	DEFECT	2.221934020610498E-6	DOCUMENTATION	9.90946224607431E-7	TEST	8.980545686712448E-7	IMPLEMENTATION
// from javax.naming.Referenceable	WITHOUT_CLASSIFICATION	0.9999608934111864	WITHOUT_CLASSIFICATION	3.8358408842456825E-5	DESIGN	5.228017036488594E-7	DEFECT	1.738942680879603E-7	DOCUMENTATION	3.448611408860256E-8	TEST	1.6997885459624E-8	IMPLEMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9998758266846391	WITHOUT_CLASSIFICATION	9.768946325748411E-5	DESIGN	2.1742557974660175E-5	IMPLEMENTATION	4.305406515069205E-6	DEFECT	3.588288679694908E-7	DOCUMENTATION	7.705874565260785E-8	TEST
//for a dynamic-class	WITHOUT_CLASSIFICATION	0.9999265170135726	WITHOUT_CLASSIFICATION	7.046498542597779E-5	DESIGN	2.7988102680416475E-6	DEFECT	1.6358161520109734E-7	DOCUMENTATION	4.046631981008789E-8	TEST	1.514279840444493E-8	IMPLEMENTATION
//test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.9992852422011022	WITHOUT_CLASSIFICATION	4.95823563726607E-4	DESIGN	2.1797260891468867E-4	TEST	9.037408576357277E-7	DOCUMENTATION	3.711010164098048E-8	DEFECT	2.0775297142814828E-8	IMPLEMENTATION
//NOTE EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999481907672303	WITHOUT_CLASSIFICATION	3.0033538285052083E-5	IMPLEMENTATION	1.6726241094370114E-5	DESIGN	2.7603890268759855E-6	DEFECT	1.277534122717342E-6	DOCUMENTATION	1.011530240640861E-6	TEST
// for backward-compatability	WITHOUT_CLASSIFICATION	0.9999934207424187	WITHOUT_CLASSIFICATION	5.711276850852078E-6	DESIGN	4.4701440636597665E-7	DEFECT	4.015966172351111E-7	IMPLEMENTATION	1.0592479547317034E-8	TEST	8.777227392867645E-9	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999998853699843	WITHOUT_CLASSIFICATION	4.73468296721977E-8	DEFECT	4.57842539248982E-8	DESIGN	1.4374848155627933E-8	IMPLEMENTATION	4.2426627643452155E-9	TEST	2.8814211898017615E-9	DOCUMENTATION
//to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.9999974699077988	WITHOUT_CLASSIFICATION	2.4692799177476016E-6	DESIGN	3.774401784959975E-8	DEFECT	1.233925703657304E-8	IMPLEMENTATION	6.188935779015631E-9	DOCUMENTATION	4.540072688922857E-9	TEST
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.7856213965156355	DESIGN	0.2082670206483129	WITHOUT_CLASSIFICATION	0.00343307340445089	IMPLEMENTATION	0.0026106785296376796	DEFECT	4.209804065670486E-5	DOCUMENTATION	2.573286130647473E-5	TEST
//must add to JNDI _after_ adding to HashMaps, because some JNDI servers use serialization	WITHOUT_CLASSIFICATION	0.9999997314997111	WITHOUT_CLASSIFICATION	1.8919767299857913E-7	DESIGN	6.079108050855738E-8	IMPLEMENTATION	1.4409535396829854E-8	DOCUMENTATION	3.2363751182715248E-9	TEST	8.656248792214268E-10	DEFECT
// Make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.9999984507534918	WITHOUT_CLASSIFICATION	1.1257973496628116E-6	DESIGN	2.6297656600034657E-7	IMPLEMENTATION	1.5760563388796484E-7	DEFECT	1.4934031741715652E-9	TEST	1.3735553801624821E-9	DOCUMENTATION
// for each of the defined parameters, make sure its value // has been set	WITHOUT_CLASSIFICATION	0.9999978215772766	WITHOUT_CLASSIFICATION	2.170130298998118E-6	DESIGN	6.9170857301010694E-9	DEFECT	9.262235791328209E-10	TEST	4.113357141696833E-10	IMPLEMENTATION	3.777952355551554E-11	DOCUMENTATION
//we never need to apply locks to the SQL	WITHOUT_CLASSIFICATION	0.9991208178318537	WITHOUT_CLASSIFICATION	6.059514046457258E-4	DESIGN	1.2865410891950855E-4	DEFECT	8.385187368931728E-5	IMPLEMENTATION	5.649039609418358E-5	DOCUMENTATION	4.234384797425852E-6	TEST
// inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999948122607304	WITHOUT_CLASSIFICATION	2.5763824289795756E-6	DEFECT	2.2838576714990063E-6	DESIGN	2.4142352590698676E-7	TEST	5.294984650038115E-8	IMPLEMENTATION	3.31257968374629E-8	DOCUMENTATION
// deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999164631926	WITHOUT_CLASSIFICATION	2.9125537993356075E-7	IMPLEMENTATION	2.704737604475155E-7	DEFECT	1.9313041405614278E-7	TEST	6.661145085001991E-8	DESIGN	1.3897068786507567E-8	DOCUMENTATION
// during deserialization, we need to reconnect all proxies and // collections to this session, as well as the EntityEntry and // CollectionEntry instances; these associations are transient // because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.9998572306190249	WITHOUT_CLASSIFICATION	1.4197451359937685E-4	DESIGN	7.930934471829218E-7	DOCUMENTATION	6.992645833557024E-10	DEFECT	5.850325472712046E-10	IMPLEMENTATION	4.896313425083755E-10	TEST
// updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998523418184	WITHOUT_CLASSIFICATION	7.694432523519289E-7	IMPLEMENTATION	3.809656098786879E-7	DEFECT	1.6338274467218375E-7	DESIGN	1.4197934153632498E-7	TEST	2.081086743442438E-8	DOCUMENTATION
// loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999840789354153	WITHOUT_CLASSIFICATION	1.5095150132204151E-5	DEFECT	4.98361190989425E-7	IMPLEMENTATION	1.6376787806723453E-7	TEST	8.229899888902489E-8	DOCUMENTATION	8.148638452985614E-8	DESIGN
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999660109418278	WITHOUT_CLASSIFICATION	3.2533642070575095E-5	DESIGN	6.318781883496243E-7	DEFECT	5.537451026871128E-7	IMPLEMENTATION	1.4110948329778261E-7	TEST	1.286833272524749E-7	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999660109418278	WITHOUT_CLASSIFICATION	3.2533642070575095E-5	DESIGN	6.318781883496243E-7	DEFECT	5.537451026871128E-7	IMPLEMENTATION	1.4110948329778261E-7	TEST	1.286833272524749E-7	DOCUMENTATION
// first, try to load it from the temp PC associated to this SS	WITHOUT_CLASSIFICATION	0.9999987140296184	WITHOUT_CLASSIFICATION	9.412923459296342E-7	DESIGN	3.3347366490947054E-7	TEST	6.895437035027779E-9	DOCUMENTATION	2.1919046339939175E-9	IMPLEMENTATION	2.1170291936724366E-9	DEFECT
// if the metadata allowed proxy creation and caller did not request forceful eager loading, // generate a proxy	WITHOUT_CLASSIFICATION	0.9999999943872667	WITHOUT_CLASSIFICATION	3.1912305789419484E-9	TEST	2.345046400464624E-9	DEFECT	6.549454285914083E-11	IMPLEMENTATION	7.832748269710378E-12	DESIGN	3.129123658689349E-12	DOCUMENTATION
// otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.999943365088436	WITHOUT_CLASSIFICATION	3.8402450719327715E-5	DESIGN	1.744294712955147E-5	IMPLEMENTATION	4.817008522590692E-7	DEFECT	2.653983392789506E-7	TEST	4.2414523661488186E-8	DOCUMENTATION
/////////////////////////////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997316184170177	WITHOUT_CLASSIFICATION	2.1313449085769666E-4	DESIGN	2.4994425986067226E-5	IMPLEMENTATION	1.334445200800401E-5	DEFECT	8.599242376080556E-6	DOCUMENTATION	8.308971754592307E-6	TEST
// no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.9999676487524616	WITHOUT_CLASSIFICATION	1.7054956230948993E-5	IMPLEMENTATION	1.5196151999962025E-5	DESIGN	3.556580248474808E-8	DEFECT	3.3607031035472666E-8	DOCUMENTATION	3.096647396848457E-8	TEST
//after setting values to object, entityMode	WITHOUT_CLASSIFICATION	0.9992359897581884	WITHOUT_CLASSIFICATION	7.630920493920446E-4	DESIGN	7.698222554447357E-7	DEFECT	1.0781676027158831E-7	DOCUMENTATION	3.7639233471909784E-8	TEST	2.9141701960726194E-9	IMPLEMENTATION
//for EJB3	WITHOUT_CLASSIFICATION	0.9997173546806327	WITHOUT_CLASSIFICATION	2.54355937816585E-4	DESIGN	1.9712857984987975E-5	DEFECT	3.0079674694047122E-6	IMPLEMENTATION	2.9354620012737045E-6	DOCUMENTATION	2.6330940949281395E-6	TEST
// just ignore	WITHOUT_CLASSIFICATION	0.9999988990858147	WITHOUT_CLASSIFICATION	5.38582825457406E-7	IMPLEMENTATION	4.927734948286753E-7	DESIGN	2.6543684002684755E-8	DEFECT	2.4932000061423406E-8	TEST	1.808218095119855E-8	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9997239562068101	WITHOUT_CLASSIFICATION	2.4900582445147964E-4	DESIGN	2.140153366336879E-5	IMPLEMENTATION	4.468500496238677E-6	DEFECT	1.0084237442037134E-6	DOCUMENTATION	1.5951083453859033E-7	TEST
// saveOrUpdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999354569555	WITHOUT_CLASSIFICATION	2.7677333320090502E-8	DEFECT	1.7011510860026505E-8	IMPLEMENTATION	1.629777274056462E-8	DESIGN	2.1289879178508044E-9	TEST	1.4274396567464483E-9	DOCUMENTATION
// update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997210546565	WITHOUT_CLASSIFICATION	1.796767275812509E-7	IMPLEMENTATION	8.753749998288228E-8	DEFECT	7.267570859021724E-9	DESIGN	2.9399220385322556E-9	TEST	1.5236230462120131E-9	DOCUMENTATION
// lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999983636088736	WITHOUT_CLASSIFICATION	1.5481572354437875E-6	DEFECT	3.9960573762241755E-8	IMPLEMENTATION	3.3750522360411846E-8	DESIGN	8.196556144371208E-9	TEST	6.326238610305547E-9	DOCUMENTATION
// persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99999986280141	WITHOUT_CLASSIFICATION	7.190725897957247E-8	IMPLEMENTATION	4.6377026687881466E-8	DEFECT	1.403025235822892E-8	DESIGN	3.2383209676944533E-9	TEST	1.6457311053561206E-9	DOCUMENTATION
// persistOnFlush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999674458228	WITHOUT_CLASSIFICATION	1.289577694169308E-8	DESIGN	9.297449797194466E-9	IMPLEMENTATION	8.808809873889065E-9	DEFECT	1.1243605191430587E-9	TEST	4.277801334555494E-10	DOCUMENTATION
// merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997794669919	WITHOUT_CLASSIFICATION	7.355501079908646E-8	DESIGN	6.800579707875901E-8	IMPLEMENTATION	6.285270228015108E-8	DEFECT	1.2383885027984003E-8	TEST	3.735613013481371E-9	DOCUMENTATION
// saveOrUpdateCopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999876856293	WITHOUT_CLASSIFICATION	7.26352230403136E-8	DEFECT	2.7540795147312475E-8	DESIGN	1.794879340476533E-8	IMPLEMENTATION	2.7005919622227085E-9	TEST	2.3183033265252792E-9	DOCUMENTATION
// delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999485286049	WITHOUT_CLASSIFICATION	2.8703412956289866E-8	IMPLEMENTATION	1.960220439238934E-8	DEFECT	1.4479220515156347E-9	DESIGN	1.3666372851997566E-9	TEST	3.512186038396652E-10	DOCUMENTATION
// load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998078468513	WITHOUT_CLASSIFICATION	1.3089170004227192E-7	DEFECT	4.718528297649067E-8	IMPLEMENTATION	1.0144527754673481E-8	DESIGN	3.09710043071938E-9	TEST	8.345375780556281E-10	DOCUMENTATION
// refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995060526593	WITHOUT_CLASSIFICATION	2.385798205669869E-7	IMPLEMENTATION	1.8114122426866558E-7	DEFECT	5.616498645682727E-8	DESIGN	1.4446042485974788E-8	TEST	3.6152668806525895E-9	DOCUMENTATION
// replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996048580461	WITHOUT_CLASSIFICATION	3.4590710288107285E-7	DESIGN	2.568129269515479E-8	IMPLEMENTATION	1.466302249643897E-8	DEFECT	5.692127931258414E-9	TEST	3.1984078000260356E-9	DOCUMENTATION
// do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.9999978599001234	WITHOUT_CLASSIFICATION	9.531074267872572E-7	IMPLEMENTATION	8.435965659159871E-7	DEFECT	3.2274065153388097E-7	DESIGN	1.8948181600947076E-8	DOCUMENTATION	1.707050639992397E-9	TEST
// this is an internal error of some sort...	WITHOUT_CLASSIFICATION	0.9994676135173549	WITHOUT_CLASSIFICATION	4.243412692907557E-4	DEFECT	1.0420978825648883E-4	DESIGN	1.854691742924325E-6	TEST	1.2992872641079007E-6	DOCUMENTATION	6.814460907602219E-7	IMPLEMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9956744052317583	WITHOUT_CLASSIFICATION	0.004314599386343172	DESIGN	9.075959935946594E-6	DEFECT	1.662950556822603E-6	TEST	2.2773093716121493E-7	IMPLEMENTATION	2.874046856746467E-8	DOCUMENTATION
//only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.9999915645218749	WITHOUT_CLASSIFICATION	7.52379632521112E-6	DESIGN	7.867863734642859E-7	IMPLEMENTATION	1.168109554875159E-7	DEFECT	7.4008462331961784E-9	DOCUMENTATION	6.83624493762345E-10	TEST
// if it was previously unreferenced, we need to flush in order to // get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.999911654390473	WITHOUT_CLASSIFICATION	7.502485954394308E-5	DESIGN	1.1626910777184687E-5	IMPLEMENTATION	1.017164788770934E-6	DOCUMENTATION	4.2881204357202066E-7	DEFECT	2.4786237360536707E-7	TEST
// not for internal use:	WITHOUT_CLASSIFICATION	0.9945622542804168	WITHOUT_CLASSIFICATION	0.005277730693164815	DESIGN	1.4412688428899154E-4	IMPLEMENTATION	1.289146359100884E-5	DEFECT	1.5673618323423155E-6	TEST	1.4293167060647418E-6	DOCUMENTATION
// otherwise, we only need to flush if there are in-memory changes // to the queried tables	WITHOUT_CLASSIFICATION	0.9999976048833968	WITHOUT_CLASSIFICATION	1.9865090541814094E-6	IMPLEMENTATION	2.7774906864267033E-7	TEST	1.1753631218320171E-7	DESIGN	1.0500494801033076E-8	DEFECT	2.8216732689811928E-9	DOCUMENTATION
// might need to run a different filter entirely after the flush // because the collection role may have changed	WITHOUT_CLASSIFICATION	0.9938854745928866	WITHOUT_CLASSIFICATION	0.00605849156200981	IMPLEMENTATION	4.9048295205937036E-5	DESIGN	6.41635330230922E-6	DEFECT	4.333893336890991E-7	DOCUMENTATION	1.3580726182208932E-7	TEST
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9956744052317583	WITHOUT_CLASSIFICATION	0.004314599386343172	DESIGN	9.075959935946594E-6	DEFECT	1.662950556822603E-6	TEST	2.2773093716121493E-7	IMPLEMENTATION	2.874046856746467E-8	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9956744052317583	WITHOUT_CLASSIFICATION	0.004314599386343172	DESIGN	9.075959935946594E-6	DEFECT	1.662950556822603E-6	TEST	2.2773093716121493E-7	IMPLEMENTATION	2.874046856746467E-8	DOCUMENTATION
//if it is initialized, see if the underlying //instance is contained, since we need to  //account for the fact that it might have been //evicted	WITHOUT_CLASSIFICATION	0.9772977712878914	WITHOUT_CLASSIFICATION	0.018855708256630927	DESIGN	0.003653937447417072	IMPLEMENTATION	1.709040876100339E-4	TEST	1.8470515633588105E-5	DOCUMENTATION	3.2084048168886334E-6	DEFECT
// basically just an adapted copy of find(CriteriaImpl)	WITHOUT_CLASSIFICATION	0.9999709057235557	WITHOUT_CLASSIFICATION	2.4410573877021125E-5	IMPLEMENTATION	3.871510979697716E-6	DESIGN	7.105360494401544E-7	DEFECT	8.995672721134153E-8	TEST	1.1698810905690037E-8	DOCUMENTATION
// it is possible for this method to be called during flush processing, // so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999311823881036	WITHOUT_CLASSIFICATION	6.876708784723594E-5	DESIGN	4.611883290507928E-8	TEST	2.501828211064791E-9	DOCUMENTATION	1.331958813535703E-9	IMPLEMENTATION	5.7142921869601E-10	DEFECT
// nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.9999617223186087	WITHOUT_CLASSIFICATION	1.8320704246716306E-5	DESIGN	1.707066664527482E-5	IMPLEMENTATION	2.641960691313182E-6	DEFECT	1.724262221752879E-7	DOCUMENTATION	7.192358585151404E-8	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999992007508399	WITHOUT_CLASSIFICATION	4.30290340356289E-7	DESIGN	2.7954840539106423E-7	DEFECT	5.757936653925719E-8	IMPLEMENTATION	2.1773752705374364E-8	DOCUMENTATION	1.0057295141760182E-8	TEST
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999998853699843	WITHOUT_CLASSIFICATION	4.73468296721977E-8	DEFECT	4.57842539248982E-8	DESIGN	1.4374848155627933E-8	IMPLEMENTATION	4.2426627643452155E-9	TEST	2.8814211898017615E-9	DOCUMENTATION
// we need to writeObject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.9999997370708489	WITHOUT_CLASSIFICATION	2.4856803959832866E-7	DESIGN	9.778411356387647E-9	DOCUMENTATION	2.398540717893937E-9	TEST	1.1546709620690095E-9	DEFECT	1.02948846079367E-9	IMPLEMENTATION
// the old-time stand-by...	WITHOUT_CLASSIFICATION	0.999759170086224	WITHOUT_CLASSIFICATION	1.6846886805364084E-4	DEFECT	6.570560435984439E-5	IMPLEMENTATION	5.693536918194198E-6	DESIGN	7.739625586407152E-7	DOCUMENTATION	1.879418857655898E-7	TEST
// parameter bind values...	WITHOUT_CLASSIFICATION	0.9999939181854335	WITHOUT_CLASSIFICATION	3.533405933566464E-6	DESIGN	2.319891831870098E-6	DEFECT	1.20572255357853E-7	IMPLEMENTATION	9.828381362658617E-8	TEST	9.660732176135403E-9	DOCUMENTATION
// Parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99989988756714	WITHOUT_CLASSIFICATION	9.274037060196146E-5	DESIGN	5.769850104112097E-6	IMPLEMENTATION	1.019554835906348E-6	TEST	4.634189524565813E-7	DEFECT	1.1923836554905568E-7	DOCUMENTATION
// prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.9999278741608026	WITHOUT_CLASSIFICATION	6.937656561782206E-5	IMPLEMENTATION	1.8673709608520838E-6	DEFECT	8.323701484713672E-7	DESIGN	3.4844712103358904E-8	TEST	1.4687758076253347E-8	DOCUMENTATION
// Execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999621966523389	WITHOUT_CLASSIFICATION	3.148977586314388E-5	DESIGN	3.4745799472360053E-6	IMPLEMENTATION	2.04412807878757E-6	DEFECT	5.088525914792345E-7	DOCUMENTATION	2.860111806156055E-7	TEST
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9992227681898277	WITHOUT_CLASSIFICATION	7.643806971889067E-4	DESIGN	5.294793606645036E-6	IMPLEMENTATION	5.189401409280814E-6	DEFECT	2.2394267746110195E-6	DOCUMENTATION	1.2749119289861375E-7	TEST
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9992227681898277	WITHOUT_CLASSIFICATION	7.643806971889067E-4	DESIGN	5.294793606645036E-6	IMPLEMENTATION	5.189401409280814E-6	DEFECT	2.2394267746110195E-6	DOCUMENTATION	1.2749119289861375E-7	TEST
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9998202690844539	WITHOUT_CLASSIFICATION	1.7685094871142768E-4	DESIGN	1.1512956968459074E-6	IMPLEMENTATION	1.0085784894183332E-6	DOCUMENTATION	4.3515453026850796E-7	TEST	2.849381182620529E-7	DEFECT
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9998202690844539	WITHOUT_CLASSIFICATION	1.7685094871142768E-4	DESIGN	1.1512956968459074E-6	IMPLEMENTATION	1.0085784894183332E-6	DOCUMENTATION	4.3515453026850796E-7	TEST	2.849381182620529E-7	DEFECT
// FieldInterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999473639378216	WITHOUT_CLASSIFICATION	4.8902819655257926E-5	IMPLEMENTATION	2.5490793173741308E-6	DESIGN	9.742656949295577E-7	DEFECT	1.8615941984235407E-7	TEST	2.373809112949241E-8	DOCUMENTATION
// subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999836737839684	WITHOUT_CLASSIFICATION	1.6252814769953677E-5	DESIGN	4.040502366893851E-8	DEFECT	1.640136206157642E-8	TEST	8.318059270170892E-9	DOCUMENTATION	8.276816840020412E-9	IMPLEMENTATION
//let's assume that there is only one lazy fetch group, for now!	WITHOUT_CLASSIFICATION	0.9999953977382867	WITHOUT_CLASSIFICATION	4.108768741314154E-6	DEFECT	3.9281136713986374E-7	DESIGN	8.543084995466287E-8	TEST	1.0961434933134856E-8	IMPLEMENTATION	4.289319877166651E-9	DOCUMENTATION
// FieldHandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998828264573998	WITHOUT_CLASSIFICATION	1.029369197186922E-4	IMPLEMENTATION	1.278301141709526E-5	DESIGN	7.941584858028221E-7	TEST	6.194863168059641E-7	DEFECT	3.996666178914303E-8	DOCUMENTATION
// should *not* need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.9981884838509358	WITHOUT_CLASSIFICATION	0.001756514236293093	DESIGN	4.79876400685502E-5	DEFECT	6.931121955266441E-6	IMPLEMENTATION	5.8522627893751656E-8	DOCUMENTATION	2.4628119569670532E-8	TEST
// should probably no-op commit/rollback here, at least in JTA scenarios	WITHOUT_CLASSIFICATION	0.9765261703887806	DESIGN	0.023268794829832348	WITHOUT_CLASSIFICATION	1.9306132869710592E-4	DEFECT	6.762511289203885E-6	IMPLEMENTATION	2.8007822259805556E-6	DOCUMENTATION	2.410159174747197E-6	TEST
// Base Expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999898763795583	WITHOUT_CLASSIFICATION	9.214801338798285E-5	DEFECT	8.694024286450772E-6	IMPLEMENTATION	1.8866229720550617E-7	DOCUMENTATION	1.2269706157783745E-7	DESIGN	8.280738387588744E-8	TEST
// Various Expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999787478848658	WITHOUT_CLASSIFICATION	1.8425683643045322E-5	DEFECT	2.3396359613242848E-6	DESIGN	2.732324245085915E-7	IMPLEMENTATION	2.0046425904438948E-7	DOCUMENTATION	1.3098846096945412E-8	TEST
// explicitly perform no checking...	WITHOUT_CLASSIFICATION	0.9943503462293919	WITHOUT_CLASSIFICATION	0.005608401193500565	DESIGN	3.353461891452072E-5	DEFECT	5.927210282892529E-6	DOCUMENTATION	1.4481606865448021E-6	IMPLEMENTATION	3.4258722357777476E-7	TEST
// used from testsuite	WITHOUT_CLASSIFICATION	0.9999782418503703	WITHOUT_CLASSIFICATION	1.9449982148091808E-5	TEST	2.2163925189445568E-6	DESIGN	6.720090457214303E-8	DEFECT	2.1549090396510852E-8	DOCUMENTATION	3.0249678061404626E-9	IMPLEMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999999883814185	WITHOUT_CLASSIFICATION	7.979539011921143E-9	DESIGN	1.5884510649791304E-9	DOCUMENTATION	1.037926288366406E-9	TEST	1.006792798851668E-9	DEFECT	5.872383152763636E-12	IMPLEMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.998408487020651	WITHOUT_CLASSIFICATION	0.0015341255124436755	DESIGN	3.866327223773271E-5	IMPLEMENTATION	9.233353585650128E-6	DEFECT	7.327886436100033E-6	DOCUMENTATION	2.1629546457955846E-6	TEST
// register synch; stats.connect()	WITHOUT_CLASSIFICATION	0.9999941599421213	WITHOUT_CLASSIFICATION	3.8015545786310386E-6	DESIGN	1.9332620175686974E-6	IMPLEMENTATION	5.093750473286916E-8	DEFECT	3.9435911570201727E-8	DOCUMENTATION	1.4867866143726681E-8	TEST
//noncritical, swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.9994022621694546	WITHOUT_CLASSIFICATION	5.899375183573213E-4	DESIGN	5.711098798556967E-6	DEFECT	1.380812811695176E-6	IMPLEMENTATION	5.604511137807161E-7	DOCUMENTATION	1.4794946417650537E-7	TEST
// calls executeBatch()	WITHOUT_CLASSIFICATION	0.9999973229329454	WITHOUT_CLASSIFICATION	1.4007257444611105E-6	DESIGN	1.2215660307212268E-6	DEFECT	2.4967314513183512E-8	IMPLEMENTATION	2.301488381015808E-8	DOCUMENTATION	6.793081063501017E-9	TEST
//no big deal	WITHOUT_CLASSIFICATION	0.9999560407470813	WITHOUT_CLASSIFICATION	2.4268174579209347E-5	DESIGN	9.884939980660276E-6	DEFECT	7.808427143732587E-6	IMPLEMENTATION	1.8712013462910958E-6	DOCUMENTATION	1.2650986876825161E-7	TEST
// no big deal	WITHOUT_CLASSIFICATION	0.9999436878092839	WITHOUT_CLASSIFICATION	3.274573384179437E-5	IMPLEMENTATION	1.9368945107917385E-5	DESIGN	3.409497860843265E-6	DEFECT	7.379057294672612E-7	DOCUMENTATION	5.0108176149424325E-8	TEST
// no big deal	WITHOUT_CLASSIFICATION	0.9999436878092839	WITHOUT_CLASSIFICATION	3.274573384179437E-5	IMPLEMENTATION	1.9368945107917385E-5	DESIGN	3.409497860843265E-6	DEFECT	7.379057294672612E-7	DOCUMENTATION	5.0108176149424325E-8	TEST
// sybase driver (jConnect) throwing NPE here in certain // cases, but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.9999988743579226	WITHOUT_CLASSIFICATION	4.831780232268646E-7	IMPLEMENTATION	3.0672791993126716E-7	DESIGN	2.818721330561529E-7	DEFECT	4.548410738717499E-8	TEST	8.37989368058169E-9	DOCUMENTATION
// see explanation above...	WITHOUT_CLASSIFICATION	0.9998560446764985	WITHOUT_CLASSIFICATION	1.1002582750032855E-4	DEFECT	3.063241420593564E-5	DESIGN	1.8588856099736342E-6	DOCUMENTATION	1.2140192329878783E-6	IMPLEMENTATION	2.2417695233010692E-7	TEST
// If we are in the process of releasing, no sense // checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.9999999933692911	WITHOUT_CLASSIFICATION	5.794255962642499E-9	DEFECT	4.388025994902721E-10	DOCUMENTATION	3.6132873879660726E-10	DESIGN	2.2004001362121058E-11	TEST	1.4317542955081156E-11	IMPLEMENTATION
// EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999810297843993	WITHOUT_CLASSIFICATION	9.485552925212992E-6	DEFECT	6.877877227026203E-6	IMPLEMENTATION	1.7793848160015685E-6	DESIGN	4.740611948680795E-7	DOCUMENTATION	3.5333943756824707E-7	TEST
// ResultSet impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997728845430028	WITHOUT_CLASSIFICATION	1.7550577214393E-4	DESIGN	3.715450326225825E-5	IMPLEMENTATION	1.2879048132019912E-5	DEFECT	1.4265226768645455E-6	TEST	1.496107820024496E-7	DOCUMENTATION
// ResultSet impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997542272459983	WITHOUT_CLASSIFICATION	1.9770503136706645E-4	DESIGN	3.038944597159462E-5	IMPLEMENTATION	1.2625137596784478E-5	TEST	4.877148464623956E-6	DEFECT	1.7599060164259086E-7	DOCUMENTATION
// refer to comment in StatefulPersistenceContext.addCollection()	WITHOUT_CLASSIFICATION	0.9999992177212538	WITHOUT_CLASSIFICATION	3.8044981111884846E-7	DESIGN	2.0090531127834596E-7	IMPLEMENTATION	1.6984372980920762E-7	DEFECT	2.8209308910828627E-8	DOCUMENTATION	2.870584934381579E-9	TEST
// ConnectionManager.Callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9879317015779274	WITHOUT_CLASSIFICATION	0.011509251061505537	IMPLEMENTATION	3.045533578443361E-4	DESIGN	2.519668373295029E-4	DEFECT	2.187319233537252E-6	DOCUMENTATION	3.3984615980973386E-7	TEST
// Note : success = false, because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.9995715330398185	WITHOUT_CLASSIFICATION	4.154139159062637E-4	IMPLEMENTATION	1.2445367423768565E-5	DESIGN	3.9344506792627814E-7	DEFECT	1.9810497733306625E-7	DOCUMENTATION	1.6126806257549682E-8	TEST
// we already have a callback registered; either a local // (org.hibernate.Transaction) transaction has accepted // callback responsibilities, or we have previously // registered a transaction synch.	WITHOUT_CLASSIFICATION	0.9999999867392968	WITHOUT_CLASSIFICATION	1.0122115788089618E-8	DESIGN	1.9153507398198467E-9	IMPLEMENTATION	1.169395519276427E-9	DEFECT	4.9932110848658136E-11	DOCUMENTATION	3.909020159247795E-12	TEST
// the configured transaction-factory says it only supports // local callback mode, so no sense attempting to register a // JTA Synchronization	WITHOUT_CLASSIFICATION	0.999871775359255	WITHOUT_CLASSIFICATION	1.2794642061898635E-4	DESIGN	1.8550280010276146E-7	DEFECT	7.008415562874753E-8	IMPLEMENTATION	2.1855441598675546E-8	DOCUMENTATION	7.777286785606653E-10	TEST
// transactions marked for rollback-only cause some TM impls to throw exceptions	WITHOUT_CLASSIFICATION	0.9999968644833506	WITHOUT_CLASSIFICATION	1.757013558987521E-6	DEFECT	1.3568268862057329E-6	IMPLEMENTATION	1.5496632456348554E-8	DESIGN	4.385231761843316E-9	DOCUMENTATION	1.7943399239554086E-9	TEST
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989674855498	WITHOUT_CLASSIFICATION	5.843591081083063E-7	DEFECT	3.226252560077645E-7	DESIGN	8.7185907984804E-8	IMPLEMENTATION	2.941562314827446E-8	DOCUMENTATION	8.928554759089917E-9	TEST
//postInitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.9999996937649217	WITHOUT_CLASSIFICATION	1.6498138237912003E-7	IMPLEMENTATION	1.3213985365791155E-7	DEFECT	5.5600708136906995E-9	DESIGN	2.433616732505662E-9	DOCUMENTATION	1.1201545452903532E-9	TEST
// cannot handle single quotes	WITHOUT_CLASSIFICATION	0.9999702738774628	WITHOUT_CLASSIFICATION	1.4889800866807918E-5	DEFECT	9.397650296662791E-6	IMPLEMENTATION	4.454823251835413E-6	DESIGN	8.735198743944546E-7	TEST	1.1032824760312351E-7	DOCUMENTATION
// todo : for 4.0 //	WITHOUT_CLASSIFICATION	0.9990251554003456	WITHOUT_CLASSIFICATION	6.951526793760713E-4	DESIGN	2.0134683003140047E-4	DEFECT	6.775618535969396E-5	IMPLEMENTATION	8.504951225625862E-6	TEST	2.08395366140684E-6	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999967431274013	WITHOUT_CLASSIFICATION	3.1665000096225976E-6	DESIGN	4.61037140821752E-8	DEFECT	3.73407623358474E-8	TEST	5.73140048967213E-9	IMPLEMENTATION	1.1967123463205098E-9	DOCUMENTATION
// don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.999931134986603	WITHOUT_CLASSIFICATION	3.647475771931898E-5	DESIGN	3.115894153475775E-5	DEFECT	8.605468779050332E-7	IMPLEMENTATION	2.684932813020452E-7	DOCUMENTATION	1.0227398375115984E-7	TEST
// don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.9997814689902745	WITHOUT_CLASSIFICATION	1.2255048258232883E-4	DEFECT	9.329955552944291E-5	DESIGN	1.7079325678470912E-6	IMPLEMENTATION	7.997385711081961E-7	DOCUMENTATION	1.7330047457968057E-7	TEST
// position cursor to the last row	WITHOUT_CLASSIFICATION	0.999999947098143	WITHOUT_CLASSIFICATION	3.0383929395020244E-8	IMPLEMENTATION	1.4318470398132751E-8	DEFECT	4.674723650667964E-9	DESIGN	3.330911456863592E-9	DOCUMENTATION	1.9382206664197175E-10	TEST
// sequentially read the result set in reverse until we recognize // a change in the key value.  At that point, we are pointed at // the last physical sequential row for the logical row in which // we are interested in processing	WITHOUT_CLASSIFICATION	0.9999999979871204	WITHOUT_CLASSIFICATION	1.7397368022631079E-9	DEFECT	1.9237854281944514E-10	DESIGN	3.5632870024621444E-11	DOCUMENTATION	2.8666548552577407E-11	TEST	1.6464931171655723E-11	IMPLEMENTATION
// Read backwards until we read past the first physical sequential // row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.9999966343894772	WITHOUT_CLASSIFICATION	3.320463048515707E-6	DEFECT	3.0692865818920475E-8	TEST	1.4302329931227185E-8	IMPLEMENTATION	1.4419930898579181E-10	DOCUMENTATION	8.079104649780252E-12	DESIGN
// Finally, read ahead one row to position result set cursor // at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.9999857945087454	WITHOUT_CLASSIFICATION	9.100089118494405E-6	DEFECT	3.4330992337494207E-6	DESIGN	1.4767386712861552E-6	IMPLEMENTATION	1.0347008857743435E-7	TEST	9.209414250448759E-8	DOCUMENTATION
// now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.9999689240062215	WITHOUT_CLASSIFICATION	3.1041935437207136E-5	DESIGN	1.645642207338751E-8	TEST	8.604347199876295E-9	IMPLEMENTATION	8.322433737052554E-9	DEFECT	6.751382909476096E-10	DOCUMENTATION
// force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.9999954425652923	WITHOUT_CLASSIFICATION	3.930152423460014E-6	DESIGN	5.974428265889889E-7	IMPLEMENTATION	1.554748172068319E-8	DEFECT	9.014587571030386E-9	DOCUMENTATION	5.277388580124848E-9	TEST
// this is equivalent to the old behavior...	WITHOUT_CLASSIFICATION	0.9994963358087923	WITHOUT_CLASSIFICATION	4.6948117850687893E-4	DESIGN	3.3754122505131354E-5	DEFECT	1.724448803368054E-7	DOCUMENTATION	1.43611235584531E-7	TEST	1.1283407981627457E-7	IMPLEMENTATION
//if null, owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.9999863030949839	WITHOUT_CLASSIFICATION	1.0829560647788973E-5	DEFECT	2.199987736977885E-6	DESIGN	6.502765637189635E-7	IMPLEMENTATION	8.999965137256744E-9	DOCUMENTATION	8.08010246979516E-9	TEST
//final String queryString, 	WITHOUT_CLASSIFICATION	0.9993398811553329	WITHOUT_CLASSIFICATION	6.00670376657041E-4	DESIGN	5.636037005576336E-5	DEFECT	1.641111579961678E-6	DOCUMENTATION	8.472792108848867E-7	IMPLEMENTATION	5.997071634193826E-7	TEST
// if it was a reference to self, don't need to nullify // unless we are using native id generation, in which // case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.9999999998662144	WITHOUT_CLASSIFICATION	1.0611154942827057E-10	DEFECT	1.3563769889123145E-11	DESIGN	9.896173255099042E-12	DOCUMENTATION	4.212257903547908E-12	TEST	1.8367937393639124E-15	IMPLEMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9995312632569601	WITHOUT_CLASSIFICATION	4.5682707439744657E-4	DESIGN	6.184693724713548E-6	IMPLEMENTATION	3.1344194678368618E-6	TEST	1.4284649570744118E-6	DOCUMENTATION	1.16209049275638E-6	DEFECT
// in an effort to avoid concurrent-modification-exceptions (from // potential recursive calls back through here as a result of the // eventual call to PersistentCollection#endRead), we scan the // internal loadingCollections map for matches and store those matches // in a temp collection.  the temp collection is then used to "drive" // the #endRead processing.	WITHOUT_CLASSIFICATION	0.9999999978012584	WITHOUT_CLASSIFICATION	1.7962312893085292E-9	DESIGN	4.021535872960328E-10	DEFECT	1.9024371780092062E-13	TEST	1.6212221435077611E-13	DOCUMENTATION	4.482522577792401E-15	IMPLEMENTATION
//we can reuse it for each row	WITHOUT_CLASSIFICATION	0.9999989807985524	WITHOUT_CLASSIFICATION	8.501787666268948E-7	DESIGN	1.3818389031645195E-7	DEFECT	1.8369367782414433E-8	IMPLEMENTATION	9.169948942563502E-9	DOCUMENTATION	3.2994740278210147E-9	TEST
//can't reuse in this case	WITHOUT_CLASSIFICATION	0.9998539631609051	WITHOUT_CLASSIFICATION	1.3960026852102977E-4	DESIGN	5.926483726886352E-6	DEFECT	4.110292750055818E-7	DOCUMENTATION	5.4318343506423526E-8	TEST	4.473922837199263E-8	IMPLEMENTATION
// First we need to suspend any current JTA transaction and obtain // a JDBC connection	WITHOUT_CLASSIFICATION	0.9988158360497756	WITHOUT_CLASSIFICATION	7.545486229550201E-4	IMPLEMENTATION	2.3524957528729164E-4	DESIGN	1.9289563583289824E-4	DOCUMENTATION	1.3089243310662265E-6	DEFECT	1.6119181809469758E-7	TEST
//getResultList(results);	WITHOUT_CLASSIFICATION	0.999979879393362	WITHOUT_CLASSIFICATION	1.6755142544493737E-5	DEFECT	2.2987252908959294E-6	DESIGN	7.943736883120416E-7	TEST	2.189159158119777E-7	IMPLEMENTATION	5.3449198483537064E-8	DOCUMENTATION
//if we only returned one entity, query by key is more efficient	WITHOUT_CLASSIFICATION	0.9998073089890753	WITHOUT_CLASSIFICATION	1.9109821817139854E-4	DESIGN	9.033498529352597E-7	DEFECT	5.268802317630748E-7	IMPLEMENTATION	1.1887769644004167E-7	TEST	4.368497221688945E-8	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999995182872342	WITHOUT_CLASSIFICATION	3.989175652052709E-7	IMPLEMENTATION	8.110750546171986E-8	DEFECT	1.525556054508164E-9	DESIGN	1.3005456377651338E-10	DOCUMENTATION	3.208446968207471E-11	TEST
// handle empty collection	WITHOUT_CLASSIFICATION	0.9992781053906723	WITHOUT_CLASSIFICATION	5.500745324874958E-4	DESIGN	1.5848712308338443E-4	IMPLEMENTATION	1.2866750973813239E-5	DEFECT	3.389471773226211E-7	DOCUMENTATION	1.2725560560195827E-7	TEST
// else no collection element, but also no owner	WITHOUT_CLASSIFICATION	0.9999997972959759	WITHOUT_CLASSIFICATION	1.6075637898437297E-7	IMPLEMENTATION	3.1160635963316234E-8	DESIGN	7.992826000039395E-9	DEFECT	2.564009899126203E-9	DOCUMENTATION	2.3017324207672122E-10	TEST
//handle empty collections	WITHOUT_CLASSIFICATION	0.999953939068174	WITHOUT_CLASSIFICATION	2.790944545043E-5	IMPLEMENTATION	1.7784556875359632E-5	DESIGN	2.842328848582993E-7	DEFECT	5.376715008977693E-8	DOCUMENTATION	2.892946522021894E-8	TEST
// else this is not a collection initializer (and empty collections will // be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.9999843614070568	WITHOUT_CLASSIFICATION	1.3886742200104983E-5	DESIGN	1.7178592374887684E-6	DEFECT	3.3659672070603015E-8	IMPLEMENTATION	2.9606588938423774E-10	TEST	3.576766027221391E-11	DOCUMENTATION
// validate() instances of Validatable	WITHOUT_CLASSIFICATION	0.9999896927380512	WITHOUT_CLASSIFICATION	7.665121329573035E-6	DEFECT	2.1831544747103895E-6	DESIGN	4.008859186998793E-7	IMPLEMENTATION	2.918632379117907E-8	TEST	2.8913902011056998E-8	DOCUMENTATION
// if we know there is exactly 1 row, we can skip. // it would be great if we could _always_ skip this; // it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.5386335876578081	WITHOUT_CLASSIFICATION	0.4123043609393442	DESIGN	0.04886706204347094	DEFECT	1.734451330952084E-4	IMPLEMENTATION	1.9313930358020773E-5	TEST	2.230295923533568E-6	DOCUMENTATION
// remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.9999784416561405	WITHOUT_CLASSIFICATION	2.1512777025235692E-5	DESIGN	2.457544226466711E-8	IMPLEMENTATION	2.0333939433033007E-8	DEFECT	3.9147565838427853E-10	DOCUMENTATION	2.659767941253677E-10	TEST
//null version means the object is in the process of being loaded somewhere else in the ResultSet	WITHOUT_CLASSIFICATION	0.9998310184287071	WITHOUT_CLASSIFICATION	1.6705042979280597E-4	DESIGN	1.8654216776614355E-6	DEFECT	3.874459206071158E-8	IMPLEMENTATION	2.5437808702880418E-8	DOCUMENTATION	1.5374216196149255E-9	TEST
//problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.9993524845270442	WITHOUT_CLASSIFICATION	4.0260840490144624E-4	DEFECT	2.3236140503159883E-4	DESIGN	6.752978019374952E-6	IMPLEMENTATION	5.14381184884586E-6	DOCUMENTATION	6.488731545782822E-7	TEST
//use the id passed in	WITHOUT_CLASSIFICATION	0.9999997983552389	WITHOUT_CLASSIFICATION	1.1624354560400144E-7	IMPLEMENTATION	4.632500979818993E-8	DESIGN	2.0549990312403306E-8	DOCUMENTATION	1.2513798670898268E-8	TEST	6.012416729610595E-9	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999967150183862	WITHOUT_CLASSIFICATION	1.7560377964100316E-6	DESIGN	8.997106066850888E-7	DEFECT	3.715755396519551E-7	DOCUMENTATION	1.492455874532613E-7	IMPLEMENTATION	1.0841208358670755E-7	TEST
// prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.9999994538254743	WITHOUT_CLASSIFICATION	2.6530076760429374E-7	IMPLEMENTATION	2.5007317255583147E-7	DEFECT	2.318329811454642E-8	DESIGN	6.9355623678222775E-9	DOCUMENTATION	6.817251552023325E-10	TEST
//no point doing this if NONE was requested	WITHOUT_CLASSIFICATION	0.9999746813978783	WITHOUT_CLASSIFICATION	1.634692347663829E-5	TEST	8.671291286239307E-6	DESIGN	1.2730062007697481E-7	DEFECT	1.0167563383653601E-7	IMPLEMENTATION	7.141110497244282E-8	DOCUMENTATION
//If the object is already loaded, return the loaded one	WITHOUT_CLASSIFICATION	0.9999886101579979	WITHOUT_CLASSIFICATION	5.3885943598277536E-6	IMPLEMENTATION	5.368176667394404E-6	DESIGN	6.085215157186236E-7	DEFECT	1.6775983926670676E-8	DOCUMENTATION	7.773475186258893E-9	TEST
//its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.99997652992382	WITHOUT_CLASSIFICATION	1.2744672743132307E-5	DESIGN	5.3869104785704E-6	DEFECT	2.2060588942347244E-6	IMPLEMENTATION	2.132819303509282E-6	TEST	9.996147604125215E-7	DOCUMENTATION
// cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.9996989384315556	WITHOUT_CLASSIFICATION	2.4846408978830765E-4	IMPLEMENTATION	5.09794975226249E-5	DESIGN	9.062849926132135E-7	DEFECT	6.410957742240734E-7	DOCUMENTATION	7.060036676930613E-8	TEST
//the load() which takes an entity does not pass an entityName	WITHOUT_CLASSIFICATION	0.9999910901907841	WITHOUT_CLASSIFICATION	4.994267116048116E-6	DEFECT	1.6662996217793955E-6	TEST	1.0527175865611944E-6	IMPLEMENTATION	9.063098754973961E-7	DESIGN	2.90215015994141E-7	DOCUMENTATION
//we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.9999871991885234	WITHOUT_CLASSIFICATION	1.1037318223000796E-5	IMPLEMENTATION	9.741688725542919E-7	DEFECT	5.22138887041223E-7	DOCUMENTATION	2.414473000277836E-7	DESIGN	2.5738193939374842E-8	TEST
// look for a proxy	WITHOUT_CLASSIFICATION	0.9999623248167522	WITHOUT_CLASSIFICATION	2.405622178467195E-5	DESIGN	1.1208676640245665E-5	DEFECT	2.312083413833704E-6	IMPLEMENTATION	6.315306616738029E-8	DOCUMENTATION	3.5048342948145587E-8	TEST
//we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.9845446264054111	WITHOUT_CLASSIFICATION	0.013664361015312543	IMPLEMENTATION	0.0014192568793521103	DESIGN	3.089269796713171E-4	TEST	5.8378895847740705E-5	DOCUMENTATION	4.449824405368719E-6	DEFECT
//its the given optional object	WITHOUT_CLASSIFICATION	0.9999852554443738	WITHOUT_CLASSIFICATION	6.37944783846846E-6	IMPLEMENTATION	3.3592470101227728E-6	DESIGN	2.6374777087079944E-6	DEFECT	2.320355666803783E-6	DOCUMENTATION	4.802740210156604E-8	TEST
// instantiate a new instance	WITHOUT_CLASSIFICATION	0.9997602046040962	WITHOUT_CLASSIFICATION	2.395188718239442E-4	DESIGN	1.848073413659776E-7	DEFECT	7.811996245544285E-8	DOCUMENTATION	1.1419945966806216E-8	TEST	2.176830010295625E-9	IMPLEMENTATION
//need to hydrate it.	WITHOUT_CLASSIFICATION	0.9951304132540828	WITHOUT_CLASSIFICATION	0.004417807968538621	DESIGN	3.247408460219271E-4	IMPLEMENTATION	8.191727320941171E-5	TEST	3.539214655207962E-5	DOCUMENTATION	9.728511595157145E-6	DEFECT
// return a newly loaded object	WITHOUT_CLASSIFICATION	0.9999945967623834	WITHOUT_CLASSIFICATION	5.335948152694108E-6	DESIGN	6.611029255933658E-8	DEFECT	9.071383680641416E-10	DOCUMENTATION	1.558537967904236E-10	TEST	1.1617925546900065E-10	IMPLEMENTATION
//will be ignored, using the existing Entry instead	WITHOUT_CLASSIFICATION	0.9999996313686224	WITHOUT_CLASSIFICATION	2.5431571901524E-7	DESIGN	6.961823149737002E-8	IMPLEMENTATION	3.92921811555452E-8	DEFECT	3.5549758331318496E-9	DOCUMENTATION	1.8502702924145486E-9	TEST
// key is an entity involved with the operation performed by the listener; // value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.9999999956507456	WITHOUT_CLASSIFICATION	3.635534926754958E-9	DESIGN	4.6151456137364217E-10	DEFECT	1.3036099040836386E-10	TEST	1.196978424380455E-10	IMPLEMENTATION	2.1462352298748722E-12	DOCUMENTATION
//materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.9996682542595595	WITHOUT_CLASSIFICATION	3.110727141936285E-4	DESIGN	1.114770275362512E-5	IMPLEMENTATION	6.208394742859171E-6	DOCUMENTATION	2.660698789278349E-6	TEST	6.562299610457386E-7	DEFECT
// Get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.9999981400232709	WITHOUT_CLASSIFICATION	1.8440595476831034E-6	DESIGN	5.7847307923587665E-9	IMPLEMENTATION	5.3372395130882095E-9	TEST	2.9272535805120273E-9	DEFECT	1.867957717645955E-9	DOCUMENTATION
// ok in normal Hibernate usage to delete a detached entity; JPA however // forbids it, thus this is a hook for HEM to affect this behavior	WITHOUT_CLASSIFICATION	0.9998177100993741	WITHOUT_CLASSIFICATION	1.694115751850145E-4	DESIGN	1.2767972056471828E-5	DEFECT	9.718232896772457E-8	IMPLEMENTATION	1.2192984066203702E-8	DOCUMENTATION	9.780714439376867E-10	TEST
// the entry will be removed after the flush, and will no longer // override the stale snapshot // This is now handled by removeEntity() in EntityDeleteAction //persistenceContext.removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9999848747178328	WITHOUT_CLASSIFICATION	9.743015952300378E-6	DEFECT	5.308628931210646E-6	DESIGN	7.352742828694805E-8	IMPLEMENTATION	8.230069875494871E-11	DOCUMENTATION	2.75547486293265E-11	TEST
//addInitializedCollection(collection, persister, id);	WITHOUT_CLASSIFICATION	0.999997741536756	WITHOUT_CLASSIFICATION	1.4815089600542186E-6	IMPLEMENTATION	5.758261554201005E-7	DESIGN	1.4554055300105968E-7	DEFECT	3.056699635144327E-8	DOCUMENTATION	2.502057897002455E-8	TEST
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999548614947756	WITHOUT_CLASSIFICATION	1.6147221401992978E-5	IMPLEMENTATION	1.3574388437419566E-5	DESIGN	1.2331304657480556E-5	DEFECT	1.9985021700112266E-6	DOCUMENTATION	1.087088557374768E-6	TEST
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999548614947756	WITHOUT_CLASSIFICATION	1.6147221401992978E-5	IMPLEMENTATION	1.3574388437419566E-5	DESIGN	1.2331304657480556E-5	DEFECT	1.9985021700112266E-6	DOCUMENTATION	1.087088557374768E-6	TEST
/*|| oj.getJoinable().consumesCollectionAlias() */	WITHOUT_CLASSIFICATION	0.9999996709263885	WITHOUT_CLASSIFICATION	1.1789209724096411E-7	DESIGN	6.904834795865303E-8	DEFECT	5.8522482329017634E-8	IMPLEMENTATION	5.413146866582843E-8	DOCUMENTATION	2.947921523991773E-8	TEST
// here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.9996967538905621	WITHOUT_CLASSIFICATION	3.0315000602597456E-4	DESIGN	5.214700823812033E-8	TEST	1.7215690508546406E-8	DEFECT	1.403562354468653E-8	DOCUMENTATION	1.2705089636218028E-8	IMPLEMENTATION
// Code to handle subclasses of topClass	WITHOUT_CLASSIFICATION	0.9995390993648964	WITHOUT_CLASSIFICATION	4.579618076507915E-4	DESIGN	2.6603270941245392E-6	DEFECT	1.30636607050566E-7	IMPLEMENTATION	9.618496153351303E-8	TEST	5.1678790070644925E-8	DOCUMENTATION
//woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.9993987688672229	WITHOUT_CLASSIFICATION	5.993833444416015E-4	DESIGN	1.632948744022289E-6	DEFECT	1.5484589729162239E-7	DOCUMENTATION	3.815783124292629E-8	TEST	2.1835863010502216E-8	IMPLEMENTATION
// we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.9999976477790119	WITHOUT_CLASSIFICATION	1.8156626883481922E-6	DEFECT	4.118143649956595E-7	DESIGN	1.0887114726760181E-7	IMPLEMENTATION	1.1994337678009031E-8	DOCUMENTATION	3.878449717804944E-9	TEST
// we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.9987812470004925	WITHOUT_CLASSIFICATION	0.0011282350331575995	DESIGN	8.715289619107835E-5	IMPLEMENTATION	2.0250704270164645E-6	TEST	1.0173433202798002E-6	DEFECT	3.2265641146238836E-7	DOCUMENTATION
// synchronized to avoid multi-thread access issues; defined as method synch to avoid // potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.9999978336063616	WITHOUT_CLASSIFICATION	2.159926124517692E-6	DESIGN	5.2701365673217E-9	DEFECT	1.0413738196626385E-9	DOCUMENTATION	1.2362594918234532E-10	TEST	3.237762526358286E-11	IMPLEMENTATION
// Allows various loaders (ok mainly the QueryLoader :) to check // whether scrolling of their result set should be allowed. // // By default it is allowed.	WITHOUT_CLASSIFICATION	0.9999964020287004	WITHOUT_CLASSIFICATION	2.3025437203441344E-6	IMPLEMENTATION	1.287554716671285E-6	DEFECT	3.778804565687095E-9	TEST	3.0639706694221527E-9	DESIGN	1.0300873462426203E-9	DOCUMENTATION
//before adding to collection!	WITHOUT_CLASSIFICATION	0.9999022670441835	WITHOUT_CLASSIFICATION	5.277037207102653E-5	DEFECT	3.165728547516206E-5	DESIGN	1.2368433083072772E-5	IMPLEMENTATION	6.532964117166339E-7	DOCUMENTATION	2.8356877560875024E-7	TEST
// if the current depth is 0, the root thing being loaded is the // many-to-many collection itself.  Here, it is alright to use // an inner join...	WITHOUT_CLASSIFICATION	0.9999943541978591	WITHOUT_CLASSIFICATION	5.498649788650485E-6	DESIGN	1.245998732945034E-7	DEFECT	1.2231894893331473E-8	IMPLEMENTATION	8.91844267454452E-9	TEST	1.4021413836628129E-9	DOCUMENTATION
//operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.9999998570550284	WITHOUT_CLASSIFICATION	7.190133193029458E-8	IMPLEMENTATION	3.3976338177222726E-8	DEFECT	3.0584639446512174E-8	DESIGN	6.010995376689789E-9	DOCUMENTATION	4.716667255836395E-10	TEST
// simple, because we can't have a one-to-one or a collection  // (or even a property-ref) in a composite-element:	WITHOUT_CLASSIFICATION	0.9999958980806679	WITHOUT_CLASSIFICATION	3.857519297418516E-6	DEFECT	1.397398670808199E-7	DESIGN	9.908811588974165E-8	IMPLEMENTATION	5.335364220043192E-9	DOCUMENTATION	2.3668741290174326E-10	TEST
//a composite key	WITHOUT_CLASSIFICATION	0.9999948904489034	WITHOUT_CLASSIFICATION	4.140543030902194E-6	DESIGN	4.2564549254957537E-7	IMPLEMENTATION	4.0484927818552976E-7	DEFECT	9.158937922425384E-8	DOCUMENTATION	4.6923915626568204E-8	TEST
// if no batch, use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.9999970721796779	WITHOUT_CLASSIFICATION	2.9060118334155915E-6	DESIGN	8.497113170169928E-9	DEFECT	6.263710101981714E-9	DOCUMENTATION	5.949600821770792E-9	IMPLEMENTATION	1.0980646828995174E-9	TEST
//it must be a collection fetch	WITHOUT_CLASSIFICATION	0.9997999215539384	WITHOUT_CLASSIFICATION	1.980120177526756E-4	DESIGN	1.0742787436559894E-6	DEFECT	7.868638415192368E-7	IMPLEMENTATION	1.5458127962924313E-7	TEST	5.070444417055679E-8	DOCUMENTATION
// needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.5287485186755239	DESIGN	0.35348509121799593	WITHOUT_CLASSIFICATION	0.11640916393394768	IMPLEMENTATION	7.170946645747656E-4	DEFECT	5.18538844350224E-4	DOCUMENTATION	1.215926636075961E-4	TEST
/*&& etype.isReferenceToPrimaryKey()*/	WITHOUT_CLASSIFICATION	0.999993964229013	WITHOUT_CLASSIFICATION	2.5739888039381004E-6	DESIGN	2.1903324837468376E-6	IMPLEMENTATION	1.038089953648453E-6	DEFECT	2.1335144776737217E-7	DOCUMENTATION	2.000829794257321E-8	TEST
// it might still need to apply a collection ordering based on a // many-to-many defined order-by...	WITHOUT_CLASSIFICATION	0.8358544981625271	WITHOUT_CLASSIFICATION	0.0930017876081753	IMPLEMENTATION	0.06776675386250351	DEFECT	0.0032715189125209604	DESIGN	7.73008814302773E-5	TEST	2.814057284285951E-5	DOCUMENTATION
// if a composite key, use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching //TODO: unnecessary for databases with ANSI-style joins	WITHOUT_CLASSIFICATION	0.8400143327165647	WITHOUT_CLASSIFICATION	0.14523102846930092	IMPLEMENTATION	0.01471494601521454	DESIGN	2.1824895267387198E-5	DEFECT	1.6074859609537755E-5	TEST	1.793044042947874E-6	DOCUMENTATION
// belong to other persister // belong to other persister	WITHOUT_CLASSIFICATION	0.9999337435224315	WITHOUT_CLASSIFICATION	6.576254136573264E-5	DESIGN	3.5919835213096055E-7	IMPLEMENTATION	7.9463961427093E-8	TEST	5.145968952867706E-8	DEFECT	3.814199492120275E-9	DOCUMENTATION
// we found it	WITHOUT_CLASSIFICATION	0.9999782277065092	WITHOUT_CLASSIFICATION	1.5491825248885688E-5	DESIGN	5.693669540381876E-6	DEFECT	3.011372220638653E-7	IMPLEMENTATION	2.1109335494414232E-7	DOCUMENTATION	7.456812452509953E-8	TEST
//we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.9999542153844687	WITHOUT_CLASSIFICATION	4.53039873617462E-5	DESIGN	2.9722175039704114E-7	DOCUMENTATION	1.2957576334771823E-7	IMPLEMENTATION	3.948118012767284E-8	DEFECT	1.434947560283052E-8	TEST
//disable a join back to this same association	WITHOUT_CLASSIFICATION	0.9998133644839493	WITHOUT_CLASSIFICATION	1.6107648212884424E-4	DESIGN	1.747375279784885E-5	DOCUMENTATION	5.0393501225474074E-6	DEFECT	2.036440954479509E-6	TEST	1.0094900470283108E-6	IMPLEMENTATION
//NOTE: unlike all other Loaders, this one is NOT //      multithreaded, or cacheable!!	WITHOUT_CLASSIFICATION	0.9975669935631014	WITHOUT_CLASSIFICATION	0.0023935437485321613	DESIGN	3.195983700119513E-5	IMPLEMENTATION	4.631378036608598E-6	DEFECT	2.772944031771754E-6	TEST	9.852929675650822E-8	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999999958465482	WITHOUT_CLASSIFICATION	2.7612741751308716E-9	DEFECT	9.694797856167877E-10	DOCUMENTATION	3.437268347635605E-10	DESIGN	6.322689192634669E-11	IMPLEMENTATION	1.574412290594799E-11	TEST
//root entity comes *last*	WITHOUT_CLASSIFICATION	0.9994637294294935	WITHOUT_CLASSIFICATION	5.335003862247492E-4	DESIGN	1.9684650733745814E-6	DEFECT	3.447028289232559E-7	IMPLEMENTATION	2.762296886237047E-7	TEST	1.8078669089356026E-7	DOCUMENTATION
//deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.9999968834284785	WITHOUT_CLASSIFICATION	1.4380803627953726E-6	DEFECT	1.3226599590324204E-6	DESIGN	3.2139807165500173E-7	IMPLEMENTATION	2.8111090180188265E-8	DOCUMENTATION	6.322037766466366E-9	TEST
//alias may be null //EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999866092889548	WITHOUT_CLASSIFICATION	6.9946403770624434E-6	DEFECT	4.7633489258672865E-6	IMPLEMENTATION	1.514544165244983E-6	DESIGN	8.713640421702129E-8	DOCUMENTATION	3.104117278380364E-8	TEST
// if it is a compound path	WITHOUT_CLASSIFICATION	0.9999606674965048	WITHOUT_CLASSIFICATION	3.913372411800366E-5	DESIGN	7.774145539682329E-8	DEFECT	7.51503847605999E-8	IMPLEMENTATION	4.203301517275147E-8	TEST	3.854521809998115E-9	DOCUMENTATION
// otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.9999099799070048	WITHOUT_CLASSIFICATION	8.2287524862087E-5	DESIGN	7.63131585661186E-6	IMPLEMENTATION	6.568932929267241E-8	TEST	2.0586238815242252E-8	DEFECT	1.4976708497146585E-8	DOCUMENTATION
// if its the root criteria, we are done	WITHOUT_CLASSIFICATION	0.999996545829283	WITHOUT_CLASSIFICATION	3.3917446657630757E-6	DESIGN	3.034124830263711E-8	TEST	2.5436886242791537E-8	DEFECT	4.053263698233252E-9	IMPLEMENTATION	2.5946531319600975E-9	DOCUMENTATION
// otherwise, recurse	WITHOUT_CLASSIFICATION	0.9997200010778098	WITHOUT_CLASSIFICATION	2.681151039609769E-4	DESIGN	1.1507186846521101E-5	IMPLEMENTATION	1.6938322048151857E-7	DEFECT	1.220103882223204E-7	DOCUMENTATION	8.523777407525144E-8	TEST
//the criteria instance	WITHOUT_CLASSIFICATION	0.9997335499713639	WITHOUT_CLASSIFICATION	2.655493559368E-4	DESIGN	4.5906513074852207E-7	DEFECT	2.303822379685556E-7	DOCUMENTATION	1.5586273876411784E-7	IMPLEMENTATION	5.536259183891896E-8	TEST
// the entity name	WITHOUT_CLASSIFICATION	0.9999788747625055	WITHOUT_CLASSIFICATION	9.924171228877956E-6	DESIGN	9.281925146525995E-6	IMPLEMENTATION	1.4336166775348265E-6	DEFECT	3.378779397847062E-7	DOCUMENTATION	1.4764650188490174E-7	TEST
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9988164817925217	WITHOUT_CLASSIFICATION	0.0011384226554689385	DESIGN	2.4340871147369093E-5	DEFECT	1.5028619111669318E-5	IMPLEMENTATION	2.9377150356749013E-6	TEST	2.788346714620291E-6	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9988164817925217	WITHOUT_CLASSIFICATION	0.0011384226554689385	DESIGN	2.4340871147369093E-5	DEFECT	1.5028619111669318E-5	IMPLEMENTATION	2.9377150356749013E-6	TEST	2.788346714620291E-6	DOCUMENTATION
//it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.9999991018727653	WITHOUT_CLASSIFICATION	6.373790897707828E-7	DEFECT	1.9801211873714892E-7	DESIGN	5.692172046368263E-8	IMPLEMENTATION	5.114224233693559E-9	DOCUMENTATION	7.000814540089059E-10	TEST
//should never happen, i think	WITHOUT_CLASSIFICATION	0.9998243396501699	WITHOUT_CLASSIFICATION	1.730689518507915E-4	DESIGN	1.6854131418206137E-6	DEFECT	4.4752999871284824E-7	TEST	3.801598193698277E-7	DOCUMENTATION	7.829501938641425E-8	IMPLEMENTATION
// Detect discriminator values...	WITHOUT_CLASSIFICATION	0.9999943099723528	WITHOUT_CLASSIFICATION	3.375641828593945E-6	DESIGN	2.1264706965055163E-6	DEFECT	8.933435072727076E-8	TEST	5.945857891462013E-8	DOCUMENTATION	3.912219237822158E-8	IMPLEMENTATION
// Convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.9999755342670912	WITHOUT_CLASSIFICATION	1.7502982727946863E-5	DESIGN	5.495606879164971E-6	DEFECT	8.798733568378484E-7	IMPLEMENTATION	3.7807463115241544E-7	DOCUMENTATION	2.0919531384574772E-7	TEST
// and the qualifier is not the alias of this criteria //      -> check to see if we belong to some criteria other //          than the one that created us	WITHOUT_CLASSIFICATION	0.9999995811836281	WITHOUT_CLASSIFICATION	4.183989644918439E-7	DESIGN	1.850092340461393E-10	TEST	1.0806518473798466E-10	IMPLEMENTATION	1.0037015204201984E-10	DOCUMENTATION	2.3962818959600453E-11	DEFECT
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999766652728242	WITHOUT_CLASSIFICATION	1.2448062503225997E-5	DESIGN	1.0764048408807488E-5	DEFECT	6.938381903704164E-8	TEST	3.888562182137936E-8	DOCUMENTATION	1.4346822789198556E-8	IMPLEMENTATION
// Otherwise, this is an ordinary value.	WITHOUT_CLASSIFICATION	0.999995521510824	WITHOUT_CLASSIFICATION	3.7605154469937824E-6	DESIGN	6.990987287836913E-7	DEFECT	1.3463475376458743E-8	TEST	3.987489061079326E-9	DOCUMENTATION	1.4240357438804732E-9	IMPLEMENTATION
// Currently *not* cachable if autodiscover types is in effect (e.g. "select * ...")	WITHOUT_CLASSIFICATION	0.9999868495116659	WITHOUT_CLASSIFICATION	1.3046850358206376E-5	DESIGN	1.0316037014515881E-7	DEFECT	3.393801652056594E-10	TEST	8.098016068465132E-11	DOCUMENTATION	5.7245327530072407E-11	IMPLEMENTATION
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// this is only needed (afaict) for ResultTransformer processing...	WITHOUT_CLASSIFICATION	0.8826394812245884	WITHOUT_CLASSIFICATION	0.11672737163883425	DESIGN	5.01594226108417E-4	DEFECT	1.0768515806275316E-4	TEST	1.8187234746382798E-5	DOCUMENTATION	5.680517659788159E-6	IMPLEMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999990216685887	WITHOUT_CLASSIFICATION	9.525407178214112E-7	DESIGN	1.438078338451677E-8	DEFECT	6.891192385859075E-9	IMPLEMENTATION	4.223801120108849E-9	TEST	2.9491666543298033E-10	DOCUMENTATION
// build an array with indices equal to the total number // of actual returns in the result Hibernate will return // for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.9999958014429433	WITHOUT_CLASSIFICATION	1.734370946466318E-6	DEFECT	1.26068166378261E-6	DESIGN	1.202507057042094E-6	IMPLEMENTATION	5.272511157304551E-10	DOCUMENTATION	4.701382412182205E-10	TEST
// replace {....} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.9997231150696975	WITHOUT_CLASSIFICATION	2.430372794020642E-4	DESIGN	1.770574170133564E-5	DEFECT	1.51261849822047E-5	IMPLEMENTATION	8.643314285481006E-7	TEST	1.513927885547004E-7	DOCUMENTATION
// No additional open braces found in the string, append the // rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.9999895150504682	WITHOUT_CLASSIFICATION	6.206039123580375E-6	DESIGN	3.943919330243042E-6	DEFECT	2.610592083195298E-7	TEST	4.3919470203827615E-8	DOCUMENTATION	3.001239950352294E-8	IMPLEMENTATION
// apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.9998003892068031	WITHOUT_CLASSIFICATION	1.9503429854726738E-4	DESIGN	2.252798695788926E-6	DEFECT	2.001221120584831E-6	IMPLEMENTATION	2.5503539938141515E-7	DOCUMENTATION	6.743943394630125E-8	TEST
// it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.9999997874555552	WITHOUT_CLASSIFICATION	1.684835991057065E-7	IMPLEMENTATION	2.1666875416051464E-8	DEFECT	1.5429379870422016E-8	DESIGN	6.845366610172346E-9	TEST	1.1922376873401436E-10	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.999888544828041	WITHOUT_CLASSIFICATION	5.4026084357377163E-5	IMPLEMENTATION	4.7833797252340156E-5	DESIGN	8.036627963759606E-6	DEFECT	1.2985206604216677E-6	DOCUMENTATION	2.601417252118691E-7	TEST
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.999888544828041	WITHOUT_CLASSIFICATION	5.4026084357377163E-5	IMPLEMENTATION	4.7833797252340156E-5	DESIGN	8.036627963759606E-6	DEFECT	1.2985206604216677E-6	DOCUMENTATION	2.601417252118691E-7	TEST
// The current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.9999943003312753	WITHOUT_CLASSIFICATION	3.9060658267459295E-6	DEFECT	1.4919483650572671E-6	DESIGN	2.952434977428499E-7	IMPLEMENTATION	6.1967211083564685E-9	DOCUMENTATION	2.143138530418176E-10	TEST
// it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.9999955497031036	WITHOUT_CLASSIFICATION	3.825274804320455E-6	DEFECT	6.02169716116074E-7	DESIGN	9.26001823223769E-9	DOCUMENTATION	9.047178140499992E-9	IMPLEMENTATION	4.545179644797204E-9	TEST
// Possibly handle :something parameters for the query ?	WITHOUT_CLASSIFICATION	0.9948840095997078	WITHOUT_CLASSIFICATION	0.004664532529866079	DESIGN	4.3880644185241335E-4	IMPLEMENTATION	6.563819263523417E-6	TEST	5.516937973794416E-6	DEFECT	5.706713364362116E-7	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999998093173253	WITHOUT_CLASSIFICATION	1.8498187454977619E-7	DESIGN	3.5089023145284262E-9	IMPLEMENTATION	2.011533095576897E-9	DEFECT	9.994688141204152E-11	TEST	8.041772925027525E-11	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.998408487020651	WITHOUT_CLASSIFICATION	0.0015341255124436755	DESIGN	3.866327223773271E-5	IMPLEMENTATION	9.233353585650128E-6	DEFECT	7.327886436100033E-6	DOCUMENTATION	2.1629546457955846E-6	TEST
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9997132520395458	WITHOUT_CLASSIFICATION	1.4971880992674226E-4	IMPLEMENTATION	6.380418144027607E-5	DEFECT	6.197711257505333E-5	DESIGN	6.352392537286611E-6	DOCUMENTATION	4.895463974962895E-6	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// Now, process the returns	WITHOUT_CLASSIFICATION	0.9999991451116234	WITHOUT_CLASSIFICATION	7.48371741567197E-7	DESIGN	7.473496371475908E-8	IMPLEMENTATION	2.6232512757515138E-8	DEFECT	4.804528672940259E-9	DOCUMENTATION	7.446298942197556E-10	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// already been processed...	WITHOUT_CLASSIFICATION	0.9999369619527717	WITHOUT_CLASSIFICATION	5.440777677809624E-5	DESIGN	7.871900673427912E-6	IMPLEMENTATION	4.6940932923593083E-7	DOCUMENTATION	2.5115031183379524E-7	DEFECT	3.7810135745064076E-8	TEST
// already been processed...	WITHOUT_CLASSIFICATION	0.9999369619527717	WITHOUT_CLASSIFICATION	5.440777677809624E-5	DESIGN	7.871900673427912E-6	IMPLEMENTATION	4.6940932923593083E-7	DOCUMENTATION	2.5115031183379524E-7	DEFECT	3.7810135745064076E-8	TEST
// Make sure the owner alias is known...	WITHOUT_CLASSIFICATION	0.9999865874337555	WITHOUT_CLASSIFICATION	7.261276937340803E-6	IMPLEMENTATION	3.523137232238345E-6	DESIGN	2.462759374666465E-6	DEFECT	1.198499564848595E-7	TEST	4.5542743840743185E-8	DOCUMENTATION
// first, break down the returns into maps keyed by alias // so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.9999863893776375	WITHOUT_CLASSIFICATION	6.5012083607064775E-6	DESIGN	5.066325665737771E-6	IMPLEMENTATION	2.0376537090792705E-6	DEFECT	4.679239388918153E-9	TEST	7.553874953505716E-10	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// If this return's alias has not been processed yet, do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.9999985640424649	WITHOUT_CLASSIFICATION	1.4109881848927673E-6	DESIGN	1.6419376346148458E-8	IMPLEMENTATION	5.2928840924123484E-9	DEFECT	1.8057083042387235E-9	DOCUMENTATION	1.4513814820254158E-9	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// for merging of versioned entities, we consider the version having // been changed only when: // 1) the two version values are different; //      *AND* // 2) The target actually represents database state! // // This second condition is a special case which allows // an entity to be merged during the same transaction // (though during a seperate operation) in which it was // originally persisted/saved	WITHOUT_CLASSIFICATION	0.9999051012241096	WITHOUT_CLASSIFICATION	8.689683214433975E-5	DESIGN	7.92462412905252E-6	DEFECT	7.342486412167023E-8	IMPLEMENTATION	3.74017787788807E-9	DOCUMENTATION	1.54575079126475E-10	TEST
// this is the second pass through on a merge op, so here we limit the // replacement to associations types (value types were already replaced // during the first pass)	WITHOUT_CLASSIFICATION	0.9714436353637973	WITHOUT_CLASSIFICATION	0.02855552225334526	DESIGN	4.298296784448368E-7	DOCUMENTATION	1.7884635075433505E-7	TEST	1.650917644875972E-7	DEFECT	6.861506385660104E-8	IMPLEMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999506327904486	WITHOUT_CLASSIFICATION	2.623346862874905E-5	IMPLEMENTATION	1.5348491926971078E-5	DESIGN	5.28831053362673E-6	DEFECT	1.5689233725486474E-6	DOCUMENTATION	9.280150895671198E-7	TEST
// cascade-save to collections AFTER the collection owner was saved	WITHOUT_CLASSIFICATION	0.9999054147317926	WITHOUT_CLASSIFICATION	6.66345737275776E-5	IMPLEMENTATION	2.676489331031658E-5	DESIGN	1.1129187920528673E-6	DEFECT	6.465383808641339E-8	DOCUMENTATION	8.228539431566867E-9	TEST
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999985654659033	WITHOUT_CLASSIFICATION	9.453614487259117E-7	DESIGN	4.4392060636869094E-7	IMPLEMENTATION	2.620059572607562E-8	DEFECT	1.3848838431241611E-8	TEST	5.202607479359923E-9	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999996385259887	WITHOUT_CLASSIFICATION	2.3735947877596978E-7	DESIGN	1.1340695562374221E-7	IMPLEMENTATION	5.631227951954933E-9	TEST	3.6595303503750133E-9	DOCUMENTATION	1.4168185019314204E-9	DEFECT
// currently only the Hibernate-supplied DbTimestampType is supported here	WITHOUT_CLASSIFICATION	0.9995146802749089	WITHOUT_CLASSIFICATION	4.608009603513375E-4	DESIGN	1.6196686078477906E-5	IMPLEMENTATION	5.671877291220342E-6	TEST	2.0322356695304018E-6	DEFECT	6.179657005292757E-7	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9967628008629756	WITHOUT_CLASSIFICATION	0.002368770383594325	DEFECT	5.08027465910139E-4	IMPLEMENTATION	3.6028082110407507E-4	DESIGN	8.994887799190335E-8	DOCUMENTATION	3.051753784746743E-8	TEST
// make a new one	WITHOUT_CLASSIFICATION	0.999972773751563	WITHOUT_CLASSIFICATION	1.3784785166371641E-5	DESIGN	1.15239481247581E-5	DEFECT	1.2819766176071818E-6	IMPLEMENTATION	4.5883814789634826E-7	TEST	1.7670038018798956E-7	DOCUMENTATION
// not so sure this is even valid subtree.  but if it was, it'd // represent two unrelated table references...	WITHOUT_CLASSIFICATION	0.999856560844361	WITHOUT_CLASSIFICATION	1.195383064170792E-4	DESIGN	1.3976787938711727E-5	IMPLEMENTATION	8.7266602551294E-6	DEFECT	1.1203948673588387E-6	TEST	7.700616068932934E-8	DOCUMENTATION
// (NOT (GT a b) ) => (LE a b)	WITHOUT_CLASSIFICATION	0.999989184272054	WITHOUT_CLASSIFICATION	9.12484590320196E-6	DESIGN	1.3620822402957413E-6	IMPLEMENTATION	1.7125780899530488E-7	DEFECT	7.91815521831642E-8	DOCUMENTATION	7.836044128752263E-8	TEST
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9996871607987197	WITHOUT_CLASSIFICATION	3.1028331597786254E-4	DESIGN	1.9763132327606307E-6	DEFECT	2.6911230369346375E-7	DOCUMENTATION	2.64072734511962E-7	TEST	4.638703148393652E-8	IMPLEMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9999987810363925	WITHOUT_CLASSIFICATION	1.2057418560645987E-6	DESIGN	9.307383751305161E-9	DEFECT	2.4229180873628615E-9	DOCUMENTATION	8.390414888340604E-10	IMPLEMENTATION	6.524080409817846E-10	TEST
//sqlResultTypes = selectClause.getSqlResultTypes();	WITHOUT_CLASSIFICATION	0.9999998500431695	WITHOUT_CLASSIFICATION	9.105668597108141E-8	DESIGN	5.10817694258647E-8	DEFECT	4.218708464320145E-9	IMPLEMENTATION	2.1279573230466057E-9	TEST	1.4717093540308227E-9	DOCUMENTATION
//by default	WITHOUT_CLASSIFICATION	0.9999829461390685	WITHOUT_CLASSIFICATION	1.1667991657552161E-5	DESIGN	2.540921157654255E-6	IMPLEMENTATION	2.3988759035493466E-6	DEFECT	3.362686243504427E-7	DOCUMENTATION	1.0980358855612598E-7	TEST
// This is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.9973502602602546	WITHOUT_CLASSIFICATION	0.002612720167110288	DESIGN	3.1109315112657826E-5	DEFECT	5.09236952632889E-6	IMPLEMENTATION	6.844442316220319E-7	TEST	1.3344376443939618E-7	DOCUMENTATION
// -- Loader implementation --	WITHOUT_CLASSIFICATION	0.9999648758696127	WITHOUT_CLASSIFICATION	3.0490396756734588E-5	IMPLEMENTATION	2.3170572204857074E-6	DEFECT	2.2009255424351328E-6	DESIGN	8.495817299315225E-8	DOCUMENTATION	3.079269484351309E-8	TEST
// -- Loader overrides --	WITHOUT_CLASSIFICATION	0.9999998922011298	WITHOUT_CLASSIFICATION	7.62742718605225E-8	DESIGN	1.6490561523547995E-8	DEFECT	8.003162468841156E-9	IMPLEMENTATION	3.6554423555032813E-9	DOCUMENTATION	3.3754320074811025E-9	TEST
// (NOT (IS_NULL a b) ) => (IS_NOT_NULL a b)	WITHOUT_CLASSIFICATION	0.9999924310034076	WITHOUT_CLASSIFICATION	5.157946705434835E-6	DESIGN	2.1139847468844904E-6	IMPLEMENTATION	1.9930263532033004E-7	DEFECT	6.343668241221445E-8	DOCUMENTATION	3.4325822347892706E-8	TEST
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999143567886812	WITHOUT_CLASSIFICATION	6.638130084916128E-5	DESIGN	7.452198637809262E-6	DEFECT	6.730353782705592E-6	IMPLEMENTATION	4.827660297948151E-6	TEST	2.5169775112301407E-7	DOCUMENTATION
// meant to handle dynamic instantiation queries...	WITHOUT_CLASSIFICATION	0.9995484367552029	WITHOUT_CLASSIFICATION	3.6161606492485666E-4	DESIGN	8.39500318007331E-5	DEFECT	4.7048251108953385E-6	IMPLEMENTATION	7.92765403139029E-7	DOCUMENTATION	4.995575574870213E-7	TEST
// --- Query translator methods ---	WITHOUT_CLASSIFICATION	0.9998748629437928	WITHOUT_CLASSIFICATION	1.2337509251602962E-4	DESIGN	1.3212700623231738E-6	IMPLEMENTATION	3.3454950946874677E-7	DEFECT	6.719372781298516E-8	TEST	3.895039148192304E-8	DOCUMENTATION
// -- Implementation private methods --	WITHOUT_CLASSIFICATION	0.9998542607728506	WITHOUT_CLASSIFICATION	1.1559282452161113E-4	DESIGN	2.9295064737268568E-5	IMPLEMENTATION	6.524206300019822E-7	DEFECT	1.5193975258309907E-7	DOCUMENTATION	4.697750821794714E-8	TEST
//deduplicate unique constraints sharing the same columns //this is needed by Hibernate Annotations since it creates automagically // unique constraints for the user	WITHOUT_CLASSIFICATION	0.9999903897147703	WITHOUT_CLASSIFICATION	7.2728631777858365E-6	IMPLEMENTATION	9.712251810007514E-7	DEFECT	8.98647768649487E-7	TEST	4.585602244335703E-7	DESIGN	8.988878063029612E-9	DOCUMENTATION
// Try to find out the name of the primary key to create it as identity if the IdentityGenerator is used	WITHOUT_CLASSIFICATION	0.9989855213937987	WITHOUT_CLASSIFICATION	0.001011110509657796	DESIGN	3.2833163658380133E-6	IMPLEMENTATION	7.03324756934349E-8	TEST	1.3278736235173769E-8	DOCUMENTATION	1.1689656703650026E-9	DEFECT
// to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.9998648566472842	WITHOUT_CLASSIFICATION	1.282885209540781E-4	DESIGN	6.574989615973074E-6	IMPLEMENTATION	2.7003059322357347E-7	DEFECT	7.485936671038616E-9	DOCUMENTATION	2.3256159751340794E-9	TEST
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999997402302728	WITHOUT_CLASSIFICATION	1.1914563241887345E-7	DESIGN	8.005712983391097E-8	DEFECT	5.889652591644378E-8	IMPLEMENTATION	9.143776525683992E-10	TEST	7.560613741546873E-10	DOCUMENTATION
//used also for generation of FK names!	WITHOUT_CLASSIFICATION	0.999724343278682	WITHOUT_CLASSIFICATION	1.4798469393519426E-4	DESIGN	9.47252637828738E-5	IMPLEMENTATION	2.4427823587174735E-5	DEFECT	5.1785344275081835E-6	TEST	3.340405585235965E-6	DOCUMENTATION
//usually useless	WITHOUT_CLASSIFICATION	0.9996155685131937	WITHOUT_CLASSIFICATION	3.82603470018565E-4	DESIGN	1.070293866778519E-6	IMPLEMENTATION	4.27766747237221E-7	DEFECT	2.0218026840173785E-7	DOCUMENTATION	1.2777590548819265E-7	TEST
// added this caching as I noticed that getType() is being called multiple times...	WITHOUT_CLASSIFICATION	0.9995279288756856	WITHOUT_CLASSIFICATION	3.067014820957588E-4	DESIGN	1.5693322419984128E-4	DEFECT	7.931900229601951E-6	IMPLEMENTATION	4.123928849110083E-7	TEST	9.212490411159557E-8	DOCUMENTATION
//do not add unique constraint on DB not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.999999844180255	WITHOUT_CLASSIFICATION	1.4975660084057836E-7	IMPLEMENTATION	1.915012884491786E-9	DEFECT	1.7748718132651554E-9	DOCUMENTATION	1.5553335752563788E-9	DESIGN	8.179258206767622E-10	TEST
//for backward compatibility, disable this:	WITHOUT_CLASSIFICATION	0.999999474191883	WITHOUT_CLASSIFICATION	2.8825469556283607E-7	IMPLEMENTATION	1.797000324453245E-7	DESIGN	2.7836816331855998E-8	TEST	1.9376275567041263E-8	DEFECT	1.0640297020986566E-8	DOCUMENTATION
//may be final //may be final //may be final	WITHOUT_CLASSIFICATION	0.9999071653003824	WITHOUT_CLASSIFICATION	6.036722548618795E-5	DESIGN	2.9312014445075473E-5	DEFECT	2.318177954086825E-6	IMPLEMENTATION	5.883018761346853E-7	DOCUMENTATION	2.489798561961924E-7	TEST
//may be final	WITHOUT_CLASSIFICATION	0.9997721318455576	WITHOUT_CLASSIFICATION	1.9807147135892747E-4	DESIGN	2.40728977290413E-5	DEFECT	4.4410834990264944E-6	IMPLEMENTATION	1.036155551975712E-6	DOCUMENTATION	2.465463033875818E-7	TEST
// may be final	WITHOUT_CLASSIFICATION	0.9999694466012343	WITHOUT_CLASSIFICATION	1.7854316744457173E-5	DESIGN	1.0848067976350724E-5	DEFECT	1.683457785363158E-6	IMPLEMENTATION	1.247742156762125E-7	DOCUMENTATION	4.278204387522166E-8	TEST
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999531796805108	WITHOUT_CLASSIFICATION	4.662186793078619E-5	DESIGN	1.2030717606871298E-7	DEFECT	4.1222940793350995E-8	DOCUMENTATION	3.186851063110324E-8	TEST	5.052930827362412E-9	IMPLEMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9999998931820059	WITHOUT_CLASSIFICATION	5.619239403819836E-8	DESIGN	1.917213675749873E-8	DEFECT	1.577632638747681E-8	DOCUMENTATION	8.120311790154568E-9	IMPLEMENTATION	7.556825281536295E-9	TEST
// the root of the incoming property path matched one // of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.9999999913003284	WITHOUT_CLASSIFICATION	4.663069963546588E-9	DEFECT	2.90307496624162E-9	DESIGN	8.169665536089176E-10	IMPLEMENTATION	2.2822415014553761E-10	TEST	8.833589880196981E-11	DOCUMENTATION
// ignore it...	WITHOUT_CLASSIFICATION	0.9998937755754281	WITHOUT_CLASSIFICATION	7.355171907127103E-5	DEFECT	2.4039949455771225E-5	DESIGN	7.528499550458715E-6	IMPLEMENTATION	6.32660510254607E-7	DOCUMENTATION	4.7159598412676484E-7	TEST
//flat recursive algorithm	WITHOUT_CLASSIFICATION	0.9999686486182786	WITHOUT_CLASSIFICATION	1.4491977941500058E-5	IMPLEMENTATION	1.3366163230564541E-5	DESIGN	2.806281102506718E-6	DEFECT	5.88705521873898E-7	DOCUMENTATION	9.825392485530717E-8	TEST
//an identifier mapper => getKey will be included in the getNonDuplicatedPropertyIterator() //and checked later, so it needs to be excluded	WITHOUT_CLASSIFICATION	0.9999993617196722	WITHOUT_CLASSIFICATION	6.308220470752832E-7	DESIGN	4.302652703063053E-9	DEFECT	1.7901643207444571E-9	DOCUMENTATION	1.0398606173764604E-9	IMPLEMENTATION	3.2560304772419807E-10	TEST
//if the hibernate-mapping did not specify a schema/catalog, use the defaults //specified by properties - but note that if the schema/catalog were specified //in hibernate-mapping, or as params, they will already be initialized and //will override the values set here (they are in identifierGeneratorProperties)	WITHOUT_CLASSIFICATION	0.9999999993897442	WITHOUT_CLASSIFICATION	5.857237051677821E-10	IMPLEMENTATION	1.502239246581252E-11	DEFECT	7.0319218508371884E-12	DOCUMENTATION	1.6894783286240806E-12	DESIGN	7.88333547980299E-13	TEST
//pass the entity-name, if not a collection-id	WITHOUT_CLASSIFICATION	0.9999903309917407	WITHOUT_CLASSIFICATION	6.669177396093155E-6	IMPLEMENTATION	2.0298209648376354E-6	DESIGN	9.220661150807935E-7	DEFECT	4.072400019742991E-8	TEST	7.219783017086217E-9	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999531796805108	WITHOUT_CLASSIFICATION	4.662186793078619E-5	DESIGN	1.2030717606871298E-7	DEFECT	4.1222940793350995E-8	DOCUMENTATION	3.186851063110324E-8	TEST	5.052930827362412E-9	IMPLEMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9999998931820059	WITHOUT_CLASSIFICATION	5.619239403819836E-8	DESIGN	1.917213675749873E-8	DEFECT	1.577632638747681E-8	DOCUMENTATION	8.120311790154568E-9	IMPLEMENTATION	7.556825281536295E-9	TEST
//pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.999992992481049	WITHOUT_CLASSIFICATION	3.8708645011556986E-6	IMPLEMENTATION	1.9718121169190505E-6	DEFECT	1.0070685024140642E-6	DESIGN	1.5100124343452E-7	TEST	6.7725871776297106E-9	DOCUMENTATION
//needed to satisfy KeyValue	WITHOUT_CLASSIFICATION	0.9994200779760813	WITHOUT_CLASSIFICATION	5.404145839636894E-4	DESIGN	2.081553265946693E-5	IMPLEMENTATION	1.2766649263426242E-5	DOCUMENTATION	4.558794844191216E-6	DEFECT	1.366463187825799E-6	TEST
// empty means no scoping	WITHOUT_CLASSIFICATION	0.9999987989472757	WITHOUT_CLASSIFICATION	1.1203856493387685E-6	DESIGN	6.096152441275577E-8	DEFECT	1.0966523487495294E-8	DOCUMENTATION	6.961850064663569E-9	IMPLEMENTATION	1.777176936385266E-9	TEST
// index should be last column listed	WITHOUT_CLASSIFICATION	0.9998759130319586	WITHOUT_CLASSIFICATION	8.913830267591391E-5	IMPLEMENTATION	2.2225180581942474E-5	DEFECT	9.969981276590482E-6	DESIGN	2.619141480018675E-6	TEST	1.343620267268876E-7	DOCUMENTATION
//if it is a formula index, use the element columns in the PK	WITHOUT_CLASSIFICATION	0.9999927229652112	WITHOUT_CLASSIFICATION	3.7307163135499424E-6	IMPLEMENTATION	2.8994731692289364E-6	DESIGN	6.143254994476713E-7	DEFECT	1.9602730242062634E-8	DOCUMENTATION	1.2917076176628067E-8	TEST
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns	WITHOUT_CLASSIFICATION	0.9975788494550817	WITHOUT_CLASSIFICATION	0.002349904280560976	DEFECT	6.704205791190293E-5	DESIGN	2.135879603857483E-6	TEST	1.8342525868310144E-6	IMPLEMENTATION	2.3407425488333435E-7	DOCUMENTATION
/*ArrayList list = new ArrayList();	WITHOUT_CLASSIFICATION	0.9986796586446021	WITHOUT_CLASSIFICATION	0.001296561306069232	IMPLEMENTATION	1.778172351608842E-5	DEFECT	2.7810887581772624E-6	DESIGN	2.3035450543659265E-6	TEST	9.136920000909806E-7	DOCUMENTATION
// }	WITHOUT_CLASSIFICATION	0.9999848871316249	WITHOUT_CLASSIFICATION	1.0108856782469593E-5	DESIGN	3.7936105473307276E-6	DEFECT	7.475456789915055E-7	IMPLEMENTATION	2.4776847542235247E-7	DOCUMENTATION	2.1508689071240963E-7	TEST
// no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.9999877628877989	WITHOUT_CLASSIFICATION	6.101004139681609E-6	IMPLEMENTATION	3.385311664407216E-6	DESIGN	2.589919202169958E-6	DEFECT	1.402659541446646E-7	DOCUMENTATION	2.0611240767959148E-8	TEST
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.5558876756085139	WITHOUT_CLASSIFICATION	0.25842616924710826	IMPLEMENTATION	0.18237370671834707	DESIGN	0.003096823195221141	DEFECT	1.2217143561023733E-4	DOCUMENTATION	9.345379519922975E-5	TEST
// the case of a foreign key to something other than the pk is handled in createPropertyRefConstraints	WITHOUT_CLASSIFICATION	0.9999999993454185	WITHOUT_CLASSIFICATION	4.4691199241658426E-10	DESIGN	1.301244632951567E-10	TEST	6.626686155348107E-11	DEFECT	9.168367084345549E-12	DOCUMENTATION	2.1098747619516484E-12	IMPLEMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.5558876756085139	WITHOUT_CLASSIFICATION	0.25842616924710826	IMPLEMENTATION	0.18237370671834707	DESIGN	0.003096823195221141	DEFECT	1.2217143561023733E-4	DOCUMENTATION	9.345379519922975E-5	TEST
// if the property mapping consists of all formulas,  // make it non-updateable	WITHOUT_CLASSIFICATION	0.9999979128746783	WITHOUT_CLASSIFICATION	1.8006009775892611E-6	DEFECT	2.1797622299405722E-7	IMPLEMENTATION	6.683006671305375E-8	TEST	1.4583042069872818E-9	DESIGN	2.597501304957929E-10	DOCUMENTATION
//columnUpdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.9999773556256547	WITHOUT_CLASSIFICATION	1.3415485047984933E-5	IMPLEMENTATION	6.503726106589793E-6	DESIGN	1.929408863239145E-6	DEFECT	4.2039573987765523E-7	DOCUMENTATION	3.7535858757544237E-7	TEST
// if the property mapping consists of all formulas,  // make it insertable	WITHOUT_CLASSIFICATION	0.9999781722689782	WITHOUT_CLASSIFICATION	2.0559210827713978E-5	DEFECT	9.774303410524203E-7	TEST	2.616350047035063E-7	IMPLEMENTATION	2.7186508778232586E-8	DESIGN	2.268339515760632E-9	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999958874061785	WITHOUT_CLASSIFICATION	3.996752324237486E-6	DESIGN	6.063117485392461E-8	IMPLEMENTATION	4.400656348761135E-8	TEST	6.767408964434997E-9	DEFECT	4.4363498926566585E-9	DOCUMENTATION
// expected type is intrinsic here...	WITHOUT_CLASSIFICATION	0.9996472446745502	WITHOUT_CLASSIFICATION	2.0207806999355605E-4	DEFECT	1.4745840015240294E-4	DESIGN	1.6688838197984796E-6	IMPLEMENTATION	1.215098574996399E-6	TEST	3.348729090166014E-7	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9998745590936965	WITHOUT_CLASSIFICATION	1.0760058579181629E-4	DESIGN	9.744221568254412E-6	DEFECT	3.7094710422507057E-6	IMPLEMENTATION	2.5453637605790195E-6	DOCUMENTATION	1.8412641405749204E-6	TEST
//}	WITHOUT_CLASSIFICATION	0.9998745590936965	WITHOUT_CLASSIFICATION	1.0760058579181629E-4	DESIGN	9.744221568254412E-6	DEFECT	3.7094710422507057E-6	IMPLEMENTATION	2.5453637605790195E-6	DOCUMENTATION	1.8412641405749204E-6	TEST
//return memberPersister.getPropertyType(propertyName);	WITHOUT_CLASSIFICATION	0.9999826219134959	WITHOUT_CLASSIFICATION	1.6219424071894295E-5	DESIGN	9.817940614100582E-7	DEFECT	1.0735628666386663E-7	TEST	4.928142348504715E-8	IMPLEMENTATION	2.0230660824747833E-8	DOCUMENTATION
//return memberPersister.toColumns(alias, propertyName);	WITHOUT_CLASSIFICATION	0.999959712294445	WITHOUT_CLASSIFICATION	4.005529593821974E-5	DESIGN	1.8495123674683566E-7	DEFECT	2.4743764837277147E-8	TEST	1.2131079918820905E-8	IMPLEMENTATION	1.0583535313496902E-8	DOCUMENTATION
//return memberPersister.getType();	WITHOUT_CLASSIFICATION	0.9999946161642894	WITHOUT_CLASSIFICATION	4.794194549718337E-6	DESIGN	3.999425932528176E-7	IMPLEMENTATION	1.5090124471322172E-7	DEFECT	2.8875220914550135E-8	TEST	9.922101895340798E-9	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999669737555477	WITHOUT_CLASSIFICATION	1.4801207205421016E-5	DEFECT	1.3381195010857642E-5	DESIGN	3.809244579189628E-6	IMPLEMENTATION	8.335578962967106E-7	DOCUMENTATION	2.010397605257214E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
//instanceof AssociationType;	WITHOUT_CLASSIFICATION	0.9997643890039672	WITHOUT_CLASSIFICATION	1.737720793849299E-4	DESIGN	3.788413919880532E-5	DEFECT	2.2673881970252922E-5	DOCUMENTATION	9.141479833178049E-7	IMPLEMENTATION	3.667474954676855E-7	TEST
// we need to determine the best way to know that two joinables // represent a single many-to-many...	WITHOUT_CLASSIFICATION	0.8109960180157206	DESIGN	0.1884801646719778	WITHOUT_CLASSIFICATION	3.596048134580714E-4	IMPLEMENTATION	1.568838646314332E-4	TEST	3.844543998959972E-6	DEFECT	3.484090213274771E-6	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9999942880629804	WITHOUT_CLASSIFICATION	3.118936218190542E-6	DESIGN	1.174048626040489E-6	IMPLEMENTATION	8.70816897078223E-7	DEFECT	3.87596838210012E-7	TEST	1.6053844015053513E-7	DOCUMENTATION
//public boolean isSubselectLoadable();	WITHOUT_CLASSIFICATION	0.9999972802251114	WITHOUT_CLASSIFICATION	2.281415261952509E-6	DESIGN	3.09997572323787E-7	DEFECT	6.894128468477536E-8	IMPLEMENTATION	3.177183880742737E-8	TEST	2.764893081650421E-8	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.999977379819892	WITHOUT_CLASSIFICATION	2.027907340084538E-5	DESIGN	1.609718159827861E-6	DEFECT	3.1825103836814724E-7	IMPLEMENTATION	2.0921690529583408E-7	TEST	2.0392060355977555E-7	DOCUMENTATION
//columns	WITHOUT_CLASSIFICATION	0.9997441065980387	WITHOUT_CLASSIFICATION	2.3379899045617724E-4	DESIGN	1.1335675726586404E-5	DEFECT	6.301219241921436E-6	IMPLEMENTATION	3.249719301535088E-6	DOCUMENTATION	1.2077972350919276E-6	TEST
//SQL statements	WITHOUT_CLASSIFICATION	0.9999518314157068	WITHOUT_CLASSIFICATION	4.5651355550001056E-5	DESIGN	9.531623063971034E-7	IMPLEMENTATION	7.071783493554701E-7	DOCUMENTATION	4.5490058544246273E-7	TEST	4.01987501999738E-7	DEFECT
//extra information about the element type	WITHOUT_CLASSIFICATION	0.9999933041325781	WITHOUT_CLASSIFICATION	3.3762896265466586E-6	DESIGN	2.03662992363231E-6	DEFECT	1.0001149312274241E-6	IMPLEMENTATION	2.3869072418885336E-7	DOCUMENTATION	4.414221618701385E-8	TEST
//types	WITHOUT_CLASSIFICATION	0.9998236016475026	WITHOUT_CLASSIFICATION	1.5511412074660266E-4	DESIGN	9.372074097576744E-6	DEFECT	6.735414352219941E-6	IMPLEMENTATION	2.6472234565519743E-6	TEST	2.5295198444736368E-6	DOCUMENTATION
// custom sql	WITHOUT_CLASSIFICATION	0.9999929262269196	WITHOUT_CLASSIFICATION	6.756177123783751E-6	DESIGN	2.6148530278572147E-7	DEFECT	2.2142852037802966E-8	DOCUMENTATION	2.194425942611935E-8	TEST	1.2023542302179997E-8	IMPLEMENTATION
//private final String unquotedIdentifierColumnName;	WITHOUT_CLASSIFICATION	0.9997715551887616	WITHOUT_CLASSIFICATION	2.0406047336458925E-4	DESIGN	2.1918204185184676E-5	IMPLEMENTATION	1.6235652894297699E-6	DEFECT	6.605302731937167E-7	DOCUMENTATION	1.8203812596544483E-7	TEST
// dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.9999972256173418	WITHOUT_CLASSIFICATION	2.294440663840467E-6	DESIGN	3.8064529185492505E-7	DEFECT	5.245133299796606E-8	DOCUMENTATION	4.629697417578414E-8	IMPLEMENTATION	5.483952558549808E-10	TEST
// dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.9999996777754299	WITHOUT_CLASSIFICATION	1.1537351786972273E-7	DESIGN	1.0567284318134115E-7	DEFECT	9.16378344069762E-8	IMPLEMENTATION	6.741430874014603E-9	TEST	2.7989437838940013E-9	DOCUMENTATION
// NativeSQL: collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.9998467804960174	WITHOUT_CLASSIFICATION	1.4242363495194796E-4	IMPLEMENTATION	8.412456114270929E-6	DESIGN	1.8508434753855817E-6	DEFECT	3.225079190420759E-7	DOCUMENTATION	2.1006152198009444E-7	TEST
//unquotedKeyColumnNames = StringHelper.unQuote(keyColumnAliases);	WITHOUT_CLASSIFICATION	0.9999984116492935	WITHOUT_CLASSIFICATION	1.0727566873435405E-6	DEFECT	4.2122700791699916E-7	DESIGN	5.7385188053938E-8	TEST	2.872337830191052E-8	IMPLEMENTATION	8.258444945440806E-9	DOCUMENTATION
//ELEMENT	WITHOUT_CLASSIFICATION	0.9997814666484489	WITHOUT_CLASSIFICATION	1.9659212096834482E-4	DESIGN	1.019307827725562E-5	DEFECT	4.959897098996964E-6	IMPLEMENTATION	3.4440982551432366E-6	TEST	3.3441569513694926E-6	DOCUMENTATION
// NativeSQL: collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.9995863150056619	WITHOUT_CLASSIFICATION	3.9880161705283396E-4	IMPLEMENTATION	1.4181610083967676E-5	DESIGN	3.209052565841509E-7	DOCUMENTATION	2.9748777162448876E-7	DEFECT	8.33741730973981E-8	TEST
// INDEX AND ROW SELECT	WITHOUT_CLASSIFICATION	0.9999799562884801	WITHOUT_CLASSIFICATION	1.4734750112149874E-5	IMPLEMENTATION	3.871621419866293E-6	DESIGN	6.474780898960445E-7	DOCUMENTATION	5.079745777437642E-7	DEFECT	2.818873203002733E-7	TEST
// NativeSQL: collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.9990789882844173	WITHOUT_CLASSIFICATION	8.040146935227543E-4	IMPLEMENTATION	1.0041257516209512E-4	DESIGN	1.4325007560417328E-5	DEFECT	1.1949665813995971E-6	DOCUMENTATION	1.0644727558922424E-6	TEST
//unquotedIdentifierColumnName = identifierColumnAlias;	WITHOUT_CLASSIFICATION	0.9999856523441261	WITHOUT_CLASSIFICATION	1.0954896270242638E-5	IMPLEMENTATION	3.052809017857971E-6	DESIGN	1.3477596908905697E-7	TEST	1.0671924766619147E-7	DOCUMENTATION	9.845536914832433E-8	DEFECT
//unquotedIdentifierColumnName = null;	WITHOUT_CLASSIFICATION	0.9999299515460303	WITHOUT_CLASSIFICATION	3.674032383137722E-5	IMPLEMENTATION	2.8722557049682532E-5	DESIGN	4.017233885496211E-6	DEFECT	3.400430636291504E-7	DOCUMENTATION	2.2829613949963652E-7	TEST
//GENERATE THE SQL:	WITHOUT_CLASSIFICATION	0.9998368556626638	WITHOUT_CLASSIFICATION	1.5598532017068896E-4	DESIGN	3.0202953219953518E-6	DEFECT	1.8687685730377692E-6	IMPLEMENTATION	1.3006516468232674E-6	DOCUMENTATION	9.693016237331244E-7	TEST
// for non-arrays, we don't need to know the element class //elementType.returnedClass();	WITHOUT_CLASSIFICATION	0.9999730512183838	WITHOUT_CLASSIFICATION	2.6652901365741447E-5	DESIGN	1.5774820729441658E-7	IMPLEMENTATION	1.2566488825026353E-7	DEFECT	1.0258689936811431E-8	DOCUMENTATION	2.208465123887798E-9	TEST
//not all classpersisters implement PropertyMapping!	WITHOUT_CLASSIFICATION	0.9983528871196314	WITHOUT_CLASSIFICATION	7.17694685899196E-4	IMPLEMENTATION	7.011979475840427E-4	DESIGN	2.1516927273816197E-4	DEFECT	1.0345263115550315E-5	TEST	2.705711031726742E-6	DOCUMENTATION
// Handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.823854254536204	WITHOUT_CLASSIFICATION	0.17417618600676157	DESIGN	0.0019624977188150376	IMPLEMENTATION	2.520744205381154E-6	TEST	2.5144846194777867E-6	DOCUMENTATION	2.026509394483732E-6	DEFECT
// Handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.5756573196431368	WITHOUT_CLASSIFICATION	0.41829716150769286	DESIGN	0.006039184877373247	IMPLEMENTATION	2.984103007862252E-6	DOCUMENTATION	2.737671430666726E-6	TEST	6.121973585507011E-7	DEFECT
//if there is a user-specified loader, return that //TODO: filters!?	WITHOUT_CLASSIFICATION	0.5886179541483839	WITHOUT_CLASSIFICATION	0.39969065986903485	DESIGN	0.011340055651492183	IMPLEMENTATION	2.818524830506125E-4	DEFECT	6.304220629430522E-5	TEST	6.435641744064327E-6	DOCUMENTATION
// Take care of any entities that might have // been evicted!	WITHOUT_CLASSIFICATION	0.9996042102513488	WITHOUT_CLASSIFICATION	3.624602612106912E-4	DESIGN	2.9102694826264145E-5	DEFECT	1.999302619685434E-6	IMPLEMENTATION	1.8592297512372522E-6	TEST	3.682602432721127E-7	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9999942880629804	WITHOUT_CLASSIFICATION	3.118936218190542E-6	DESIGN	1.174048626040489E-6	IMPLEMENTATION	8.70816897078223E-7	DEFECT	3.87596838210012E-7	TEST	1.6053844015053513E-7	DOCUMENTATION
// Run a subquery loader	WITHOUT_CLASSIFICATION	0.9998093736642255	WITHOUT_CLASSIFICATION	1.7046431110282647E-4	DEFECT	1.802718806668501E-5	DESIGN	1.945339980384744E-6	IMPLEMENTATION	1.1520969087874852E-7	DOCUMENTATION	7.428693350147128E-8	TEST
//needed by arrays	WITHOUT_CLASSIFICATION	0.9998487886202344	WITHOUT_CLASSIFICATION	9.93986432275706E-5	IMPLEMENTATION	3.449262705818169E-5	DESIGN	7.711896760775593E-6	DEFECT	6.3599922533752956E-6	TEST	3.2482204657767776E-6	DOCUMENTATION
//TODO: something with formulas...	WITHOUT_CLASSIFICATION	0.5445239505311854	IMPLEMENTATION	0.28609257097756213	WITHOUT_CLASSIFICATION	0.14049654416899793	DESIGN	0.023369486065731887	TEST	0.0029088555553057707	DEFECT	0.002608592701216892	DOCUMENTATION
//an assertion	WITHOUT_CLASSIFICATION	0.9999984205988293	WITHOUT_CLASSIFICATION	7.741027886504618E-7	TEST	3.9089709351392875E-7	DEFECT	2.1623127640389405E-7	DESIGN	1.1864171992281399E-7	DOCUMENTATION	7.952829217910092E-8	IMPLEMENTATION
// Remove all the old entries	WITHOUT_CLASSIFICATION	0.999995437777366	WITHOUT_CLASSIFICATION	2.6682365118687815E-6	DESIGN	1.790158038693755E-6	IMPLEMENTATION	7.652406938891996E-8	DEFECT	1.6889421594806006E-8	DOCUMENTATION	1.0414592433786963E-8	TEST
//create all the new entries	WITHOUT_CLASSIFICATION	0.999997883508261	WITHOUT_CLASSIFICATION	1.0980734759441827E-6	IMPLEMENTATION	9.503917965153721E-7	DESIGN	5.351629420395131E-8	DOCUMENTATION	1.2397633871509597E-8	TEST	2.112538519735777E-9	DEFECT
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999669737555477	WITHOUT_CLASSIFICATION	1.4801207205421016E-5	DEFECT	1.3381195010857642E-5	DESIGN	3.809244579189628E-6	IMPLEMENTATION	8.335578962967106E-7	DOCUMENTATION	2.010397605257214E-7	TEST
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999669737555477	WITHOUT_CLASSIFICATION	1.4801207205421016E-5	DEFECT	1.3381195010857642E-5	DESIGN	3.809244579189628E-6	IMPLEMENTATION	8.335578962967106E-7	DOCUMENTATION	2.010397605257214E-7	TEST
//delete all the deleted entries	WITHOUT_CLASSIFICATION	0.9999953942177505	WITHOUT_CLASSIFICATION	4.1918704345390795E-6	IMPLEMENTATION	3.8736303714158685E-7	DESIGN	1.5634926760806175E-8	DOCUMENTATION	9.736031277249104E-9	TEST	1.1778197235214427E-9	DEFECT
//insert all the new entries	WITHOUT_CLASSIFICATION	0.9999980293890378	WITHOUT_CLASSIFICATION	1.6674971711499305E-6	IMPLEMENTATION	2.4468833315871046E-7	DESIGN	3.5150803892365616E-8	TEST	1.8808352744649453E-8	DOCUMENTATION	4.46630114110201E-9	DEFECT
//==elementType ??	WITHOUT_CLASSIFICATION	0.9992753087372842	WITHOUT_CLASSIFICATION	6.970851654567106E-4	DESIGN	2.158691955851037E-5	IMPLEMENTATION	3.4854600467722256E-6	DEFECT	1.9476549059073745E-6	DOCUMENTATION	5.860627477656892E-7	TEST
//update all the modified entries	WITHOUT_CLASSIFICATION	0.9999758698714133	WITHOUT_CLASSIFICATION	2.2500223028590237E-5	IMPLEMENTATION	1.5633821357083246E-6	DESIGN	2.6105910470418346E-8	DOCUMENTATION	2.5778737106332967E-8	DEFECT	1.4638774660352476E-8	TEST
//identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.999887600759579	WITHOUT_CLASSIFICATION	8.184697602624027E-5	IMPLEMENTATION	2.852289074570111E-5	DESIGN	1.810135444997277E-6	DEFECT	1.2825505766412807E-7	TEST	9.098314634517307E-8	DOCUMENTATION
// update removed rows fks to null	WITHOUT_CLASSIFICATION	0.9987605736131313	WITHOUT_CLASSIFICATION	0.0012305625917425924	DEFECT	5.769543061932413E-6	DESIGN	3.0151744155653843E-6	IMPLEMENTATION	4.452607648131361E-8	TEST	3.455157201043157E-8	DOCUMENTATION
// will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.9986214949154861	WITHOUT_CLASSIFICATION	0.0011048307061581981	DEFECT	2.499703675141277E-4	DESIGN	1.974880347108016E-5	IMPLEMENTATION	3.036535375217392E-6	DOCUMENTATION	9.18671995061572E-7	TEST
// now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.9999976282343533	WITHOUT_CLASSIFICATION	1.5526629515146893E-6	IMPLEMENTATION	5.121759857751607E-7	DEFECT	3.0396783951299506E-7	DESIGN	2.025230086189106E-9	DOCUMENTATION	9.33639803138766E-10	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
//use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.9999148236026716	WITHOUT_CLASSIFICATION	7.894581023872973E-5	DESIGN	5.053595999271121E-6	IMPLEMENTATION	6.938368813139278E-7	DEFECT	4.0695373072160394E-7	DOCUMENTATION	7.620047835369196E-8	TEST
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999997404862476	WITHOUT_CLASSIFICATION	2.027621438266479E-7	DESIGN	4.5648965758479464E-8	IMPLEMENTATION	8.08522533983166E-9	DEFECT	2.3190474187200206E-9	TEST	6.98370133677323E-10	DOCUMENTATION
//private final String rootTableName;	WITHOUT_CLASSIFICATION	0.9993560095333831	WITHOUT_CLASSIFICATION	6.368146284193175E-4	DESIGN	4.767993319247813E-6	DEFECT	1.4317780505789843E-6	IMPLEMENTATION	6.262522298730451E-7	TEST	3.498145976868005E-7	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9998626019260687	WITHOUT_CLASSIFICATION	9.364054492085217E-5	IMPLEMENTATION	2.817927411797094E-5	DESIGN	8.351405321172815E-6	DEFECT	3.7587896591464395E-6	DOCUMENTATION	3.4680599122646683E-6	TEST
//Custom SQL	WITHOUT_CLASSIFICATION	0.999593587653567	WITHOUT_CLASSIFICATION	4.0493516168686527E-4	DESIGN	5.959582802359647E-7	DEFECT	4.885372534950918E-7	DOCUMENTATION	3.021811180877194E-7	TEST	9.050809444510818E-8	IMPLEMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999997404862476	WITHOUT_CLASSIFICATION	2.027621438266479E-7	DESIGN	4.5648965758479464E-8	IMPLEMENTATION	8.08522533983166E-9	DEFECT	2.3190474187200206E-9	TEST	6.98370133677323E-10	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999968786662216	WITHOUT_CLASSIFICATION	2.2888453746241765E-6	DESIGN	3.0903896926218633E-7	IMPLEMENTATION	2.1951910131532725E-7	DEFECT	1.9890358476983883E-7	DOCUMENTATION	1.0502674855708407E-7	TEST
// This could also just be true all the time...	WITHOUT_CLASSIFICATION	0.9030286205771693	WITHOUT_CLASSIFICATION	0.09307746987947285	DESIGN	0.0038864406280348773	IMPLEMENTATION	5.259697794748561E-6	DEFECT	1.6831155128589704E-6	TEST	5.261020155107768E-7	DOCUMENTATION
//chop the last union (all)	WITHOUT_CLASSIFICATION	0.9999226484701789	WITHOUT_CLASSIFICATION	3.3648017562839496E-5	DEFECT	2.28347822401428E-5	IMPLEMENTATION	1.8109479045620733E-5	DESIGN	2.256963309043097E-6	DOCUMENTATION	5.022876633520267E-7	TEST
//TODO: check this....	WITHOUT_CLASSIFICATION	0.8175082955336259	IMPLEMENTATION	0.14250634748020657	DESIGN	0.03274513300157013	WITHOUT_CLASSIFICATION	0.005736285132834925	DOCUMENTATION	0.0010265807250291927	TEST	4.7735812673319056E-4	DEFECT
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9998626019260687	WITHOUT_CLASSIFICATION	9.364054492085217E-5	IMPLEMENTATION	2.817927411797094E-5	DESIGN	8.351405321172815E-6	DEFECT	3.7587896591464395E-6	DOCUMENTATION	3.4680599122646683E-6	TEST
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999966946659284	WITHOUT_CLASSIFICATION	2.3628864353261114E-6	DEFECT	8.756739994190317E-7	DESIGN	4.7946627224745094E-8	TEST	1.8705309750530388E-8	DOCUMENTATION	1.2169990925963876E-10	IMPLEMENTATION
// the closure of all properties in the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999995673121825	WITHOUT_CLASSIFICATION	3.3324522876669393E-7	DEFECT	9.45393486607772E-8	DESIGN	3.893191930444354E-9	IMPLEMENTATION	9.109016706251403E-10	DOCUMENTATION	9.914642346866037E-11	TEST
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999999365008793	WITHOUT_CLASSIFICATION	3.273095983859822E-8	IMPLEMENTATION	2.745640212722665E-8	DESIGN	3.1349677533308765E-9	DEFECT	9.23679048917156E-11	TEST	8.442321722118819E-11	DOCUMENTATION
// subclass discrimination works by assigning particular // values to certain combinations of null primary key // values in the outer join using an SQL CASE	WITHOUT_CLASSIFICATION	0.9999843399749205	WITHOUT_CLASSIFICATION	1.5578058395093806E-5	DEFECT	8.128250205595263E-8	DESIGN	6.011430846879725E-10	DOCUMENTATION	8.129041757268045E-11	TEST	1.7488193158968077E-12	IMPLEMENTATION
//MULTITABLES	WITHOUT_CLASSIFICATION	0.9998163237513144	WITHOUT_CLASSIFICATION	1.542880708244837E-4	DESIGN	1.2155071461322609E-5	IMPLEMENTATION	1.0612378178218875E-5	DEFECT	4.801226699149689E-6	DOCUMENTATION	1.8195015222640946E-6	TEST
// Custom sql	WITHOUT_CLASSIFICATION	0.9999847660742757	WITHOUT_CLASSIFICATION	1.498573061831421E-5	DESIGN	1.5666330444786485E-7	DEFECT	4.390333097659666E-8	TEST	2.6429322679198767E-8	DOCUMENTATION	2.1199148076233813E-8	IMPLEMENTATION
// subclass closure properties	WITHOUT_CLASSIFICATION	0.9999974936203654	WITHOUT_CLASSIFICATION	2.449332129026163E-6	DESIGN	5.517068944656822E-8	DEFECT	1.1337357664753466E-9	DOCUMENTATION	4.978224400816151E-10	TEST	2.4525774682627714E-10	IMPLEMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999855271149056	WITHOUT_CLASSIFICATION	8.924966051541244E-6	DESIGN	2.569093556510349E-6	IMPLEMENTATION	2.3854703874732633E-6	DEFECT	4.0880049325788267E-7	DOCUMENTATION	1.8455460567067174E-7	TEST
//( (Column) model.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9994229461976414	WITHOUT_CLASSIFICATION	5.345297544302699E-4	DESIGN	3.396510285165335E-5	IMPLEMENTATION	4.309657349877788E-6	DEFECT	3.7906643062213076E-6	TEST	4.5862342074154683E-7	DOCUMENTATION
//( (Column) sc.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9999251130607184	WITHOUT_CLASSIFICATION	6.132834967160396E-5	DESIGN	1.1150291734478316E-5	IMPLEMENTATION	1.2117602856088727E-6	TEST	9.906201469261927E-7	DEFECT	2.0591744299100173E-7	DOCUMENTATION
// don't need subclass tables, because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.9803960826417085	WITHOUT_CLASSIFICATION	0.011467123149747536	DESIGN	0.008127890852330075	DEFECT	7.101693742120306E-6	DOCUMENTATION	1.0474634616450997E-6	IMPLEMENTATION	7.541990099394333E-7	TEST
// special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.9999779292660881	WITHOUT_CLASSIFICATION	1.0999694214607804E-5	DESIGN	1.00801390743299E-5	IMPLEMENTATION	9.61196109604981E-7	DOCUMENTATION	2.7471509949295763E-8	DEFECT	2.2330033346295994E-9	TEST
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999997404862476	WITHOUT_CLASSIFICATION	2.027621438266479E-7	DESIGN	4.5648965758479464E-8	IMPLEMENTATION	8.08522533983166E-9	DEFECT	2.3190474187200206E-9	TEST	6.98370133677323E-10	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999966946659284	WITHOUT_CLASSIFICATION	2.3628864353261114E-6	DEFECT	8.756739994190317E-7	DESIGN	4.7946627224745094E-8	TEST	1.8705309750530388E-8	DOCUMENTATION	1.2169990925963876E-10	IMPLEMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999999365008793	WITHOUT_CLASSIFICATION	3.273095983859822E-8	IMPLEMENTATION	2.745640212722665E-8	DESIGN	3.1349677533308765E-9	DEFECT	9.23679048917156E-11	TEST	8.442321722118819E-11	DOCUMENTATION
//get em on the second pass!	WITHOUT_CLASSIFICATION	0.9999390927459885	WITHOUT_CLASSIFICATION	5.675972404840425E-5	DESIGN	2.7583926103347345E-6	DEFECT	7.259151269728291E-7	IMPLEMENTATION	5.62549164442273E-7	DOCUMENTATION	1.0067306142843744E-7	TEST
// now look up the object we are really interested in! // (this lets us correctly handle proxies and multi-row // or multi-column queries)	WITHOUT_CLASSIFICATION	0.9907108013967932	WITHOUT_CLASSIFICATION	0.008734219150018692	DESIGN	5.441811379057013E-4	DEFECT	8.19868519532102E-6	IMPLEMENTATION	1.6554910817271623E-6	TEST	9.441390053442288E-7	DOCUMENTATION
// discriminator column	WITHOUT_CLASSIFICATION	0.9999990764649629	WITHOUT_CLASSIFICATION	5.488881591230074E-7	DESIGN	3.5184988986361974E-7	DEFECT	1.6923608410356325E-8	DOCUMENTATION	3.566326409510643E-9	TEST	2.307053311920304E-9	IMPLEMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9998626019260687	WITHOUT_CLASSIFICATION	9.364054492085217E-5	IMPLEMENTATION	2.817927411797094E-5	DESIGN	8.351405321172815E-6	DEFECT	3.7587896591464395E-6	DOCUMENTATION	3.4680599122646683E-6	TEST
//private final Map propertyTableNumbersByName = new HashMap();	WITHOUT_CLASSIFICATION	0.9998232586228083	WITHOUT_CLASSIFICATION	1.7529573851341024E-4	DESIGN	7.484407025403589E-7	DEFECT	2.792605737683489E-7	IMPLEMENTATION	2.3232748471627168E-7	DOCUMENTATION	1.856099171587331E-7	TEST
// CLASS + TABLE	WITHOUT_CLASSIFICATION	0.9999995758524038	WITHOUT_CLASSIFICATION	1.647347664692799E-7	DESIGN	1.0181990355833298E-7	IMPLEMENTATION	1.0122444428993933E-7	DEFECT	3.411539358924697E-8	DOCUMENTATION	2.225308833439403E-8	TEST
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999578837153015	WITHOUT_CLASSIFICATION	3.395986869603036E-5	IMPLEMENTATION	5.3863290774209634E-6	DESIGN	1.4186744915570374E-6	DEFECT	9.519813891741177E-7	DOCUMENTATION	3.994310443642203E-7	TEST
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999942207283196	WITHOUT_CLASSIFICATION	3.343309309091939E-6	DESIGN	1.6962020447332018E-6	IMPLEMENTATION	3.264199405258834E-7	DEFECT	2.724650012072499E-7	DOCUMENTATION	1.4087538482193037E-7	TEST
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999855271149056	WITHOUT_CLASSIFICATION	8.924966051541244E-6	DESIGN	2.569093556510349E-6	IMPLEMENTATION	2.3854703874732633E-6	DEFECT	4.0880049325788267E-7	DOCUMENTATION	1.8455460567067174E-7	TEST
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999968786662216	WITHOUT_CLASSIFICATION	2.2888453746241765E-6	DESIGN	3.0903896926218633E-7	IMPLEMENTATION	2.1951910131532725E-7	DEFECT	1.9890358476983883E-7	DOCUMENTATION	1.0502674855708407E-7	TEST
// JOINS	WITHOUT_CLASSIFICATION	0.9999911975329614	WITHOUT_CLASSIFICATION	5.739216177011604E-6	DESIGN	1.5184029644766713E-6	DEFECT	1.2100240160221348E-6	IMPLEMENTATION	1.8548087274847093E-7	DOCUMENTATION	1.493430083311578E-7	TEST
//propertyTableNumbersByName.put( prop.getName(), join );	WITHOUT_CLASSIFICATION	0.9999980095531121	WITHOUT_CLASSIFICATION	6.732240825601524E-7	DEFECT	5.134925316496968E-7	DESIGN	4.3490238742243554E-7	IMPLEMENTATION	2.180354752613383E-7	TEST	1.5079241116029405E-7	DOCUMENTATION
//Access cached SQL	WITHOUT_CLASSIFICATION	0.999860657789368	WITHOUT_CLASSIFICATION	1.3882019319254592E-4	DESIGN	2.3632078359236285E-7	DEFECT	1.1918935722161464E-7	DOCUMENTATION	9.13199435958529E-8	TEST	7.518735515574143E-8	IMPLEMENTATION
//figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.9973888526896739	WITHOUT_CLASSIFICATION	0.00260816033706623	DESIGN	1.0496765268000716E-6	IMPLEMENTATION	8.900392909436727E-7	TEST	6.018972463972441E-7	DEFECT	4.4536019576364957E-7	DOCUMENTATION
//figure out which columns are needed	WITHOUT_CLASSIFICATION	0.8470726821354682	WITHOUT_CLASSIFICATION	0.15085435804141606	DESIGN	0.002014313215611206	IMPLEMENTATION	3.63428661639017E-5	DOCUMENTATION	2.075518328399872E-5	TEST	1.5485580566607323E-6	DEFECT
//figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.988303289343422	WITHOUT_CLASSIFICATION	0.011577313973533628	DESIGN	1.0217729536440463E-4	IMPLEMENTATION	1.277630895437261E-5	DOCUMENTATION	4.063122668453571E-6	TEST	3.7995605720939783E-7	DEFECT
//render the SQL	WITHOUT_CLASSIFICATION	0.9993523106052772	WITHOUT_CLASSIFICATION	5.731500961116753E-4	DESIGN	3.353773310404778E-5	IMPLEMENTATION	3.33890242653476E-5	DEFECT	5.7811482580868835E-6	DOCUMENTATION	1.8313929837748334E-6	TEST
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999958874061785	WITHOUT_CLASSIFICATION	3.996752324237486E-6	DESIGN	6.063117485392461E-8	IMPLEMENTATION	4.400656348761135E-8	TEST	6.767408964434997E-9	DEFECT	4.4363498926566585E-9	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999306918936381	WITHOUT_CLASSIFICATION	6.91811804085502E-5	DESIGN	8.350627449159331E-8	IMPLEMENTATION	1.9805714675742537E-8	DEFECT	1.6319818307893602E-8	TEST	7.294145817097909E-9	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999918862629346	WITHOUT_CLASSIFICATION	2.71921166333524E-6	DEFECT	2.570350317935534E-6	IMPLEMENTATION	2.058548473821062E-6	DESIGN	3.848799860130386E-7	DOCUMENTATION	3.807466243937829E-7	TEST
// The optional SQL string defined in the where attribute	WITHOUT_CLASSIFICATION	0.9999999871673199	WITHOUT_CLASSIFICATION	7.16555466656581E-9	IMPLEMENTATION	3.8382048982801874E-9	DESIGN	1.2674588226478184E-9	DEFECT	4.4676945811026683E-10	DOCUMENTATION	1.1469203979696898E-10	TEST
//information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.9998198161351631	WITHOUT_CLASSIFICATION	1.2471010923312506E-4	DEFECT	5.3812504552673546E-5	DESIGN	9.74975582174198E-7	DOCUMENTATION	6.701408134080303E-7	TEST	1.613465535385977E-8	IMPLEMENTATION
//information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.9999989566453411	WITHOUT_CLASSIFICATION	8.672644333118296E-7	DEFECT	1.415281641320555E-7	DESIGN	2.8494024862208086E-8	DOCUMENTATION	3.737319810989428E-9	IMPLEMENTATION	2.3307169113514875E-9	TEST
//information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.9999990700449032	WITHOUT_CLASSIFICATION	5.562223223810253E-7	DESIGN	2.954748337766675E-7	DEFECT	5.619644503531604E-8	IMPLEMENTATION	2.0432832729208535E-8	DOCUMENTATION	1.6286628168403589E-9	TEST
// dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9999995325332409	WITHOUT_CLASSIFICATION	3.654230489774691E-7	DESIGN	9.505835330752307E-8	DEFECT	3.9317391510725195E-9	IMPLEMENTATION	1.9273402167987414E-9	DOCUMENTATION	1.1262772832551086E-9	TEST
// SQL strings	WITHOUT_CLASSIFICATION	0.9999975652946009	WITHOUT_CLASSIFICATION	1.7439331786457364E-6	DESIGN	4.941614074233218E-7	DEFECT	1.1349416373690655E-7	IMPLEMENTATION	4.509410196976832E-8	TEST	3.802254714309542E-8	DOCUMENTATION
// for objects that came in via update()	WITHOUT_CLASSIFICATION	0.9999997588980396	WITHOUT_CLASSIFICATION	1.0852845431868994E-7	DESIGN	8.382338507382184E-8	IMPLEMENTATION	4.362986804866539E-8	DEFECT	2.8281584403909243E-9	DOCUMENTATION	2.2920944126271377E-9	TEST
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999942207283196	WITHOUT_CLASSIFICATION	3.343309309091939E-6	DESIGN	1.6962020447332018E-6	IMPLEMENTATION	3.264199405258834E-7	DEFECT	2.724650012072499E-7	DOCUMENTATION	1.4087538482193037E-7	TEST
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999918862629346	WITHOUT_CLASSIFICATION	2.71921166333524E-6	DEFECT	2.570350317935534E-6	IMPLEMENTATION	2.058548473821062E-6	DESIGN	3.848799860130386E-7	DOCUMENTATION	3.807466243937829E-7	TEST
// IDENTIFIER	WITHOUT_CLASSIFICATION	0.9999905974210959	WITHOUT_CLASSIFICATION	6.369848481967406E-6	IMPLEMENTATION	1.800109209720087E-6	DESIGN	8.041717327273367E-7	DEFECT	2.5694247589748154E-7	TEST	1.7150700377413595E-7	DOCUMENTATION
// VERSION	WITHOUT_CLASSIFICATION	0.9999958610284951	WITHOUT_CLASSIFICATION	2.8389456723020665E-6	DESIGN	5.743603663228872E-7	IMPLEMENTATION	5.364008770584049E-7	DEFECT	9.660031398046893E-8	DOCUMENTATION	9.266427527794519E-8	TEST
//WHERE STRING	WITHOUT_CLASSIFICATION	0.9999665817619067	WITHOUT_CLASSIFICATION	1.7195150349859834E-5	DESIGN	1.323746634215842E-5	IMPLEMENTATION	1.2133824946955599E-6	DOCUMENTATION	1.1858827229228123E-6	DEFECT	5.863561836433202E-7	TEST
// SUBCLASS PROPERTY CLOSURE	WITHOUT_CLASSIFICATION	0.9999990309551153	WITHOUT_CLASSIFICATION	5.082062201055445E-7	DESIGN	2.508232870242632E-7	IMPLEMENTATION	1.0674874326625833E-7	DOCUMENTATION	7.343430770056923E-8	DEFECT	2.983232647543073E-8	TEST
//before add :-)	WITHOUT_CLASSIFICATION	0.9998954214538409	WITHOUT_CLASSIFICATION	4.6971253479290896E-5	IMPLEMENTATION	4.2966763324054194E-5	DESIGN	1.0718727630747999E-5	DEFECT	3.224238255179717E-6	DOCUMENTATION	6.975634699992314E-7	TEST
// Handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.9960097329698661	WITHOUT_CLASSIFICATION	0.003963148892672569	DESIGN	2.657263966078755E-5	IMPLEMENTATION	2.0786516316458853E-7	DOCUMENTATION	2.0340630336488266E-7	DEFECT	1.3422633401558895E-7	TEST
// only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.9999936296284377	WITHOUT_CLASSIFICATION	5.543856355142458E-6	DEFECT	4.865839181254533E-7	IMPLEMENTATION	2.8882660016614824E-7	DESIGN	3.058064022218223E-8	TEST	2.0524048691103378E-8	DOCUMENTATION
//note early exit here:	WITHOUT_CLASSIFICATION	0.9926023968994223	WITHOUT_CLASSIFICATION	0.00403471512668234	DESIGN	0.001676399784221915	DEFECT	0.0015855308012605312	IMPLEMENTATION	7.092453804064341E-5	TEST	3.0032850372343898E-5	DOCUMENTATION
// object have been loaded with setReadOnly(true); HHH-2236	WITHOUT_CLASSIFICATION	0.999989516824705	WITHOUT_CLASSIFICATION	5.301419591780099E-6	DESIGN	3.4554692656537955E-6	DEFECT	1.6354362488240106E-6	IMPLEMENTATION	4.6933637888162315E-8	TEST	4.3916550756674984E-8	DOCUMENTATION
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.9988994965978805	WITHOUT_CLASSIFICATION	4.954403475699297E-4	DEFECT	3.001262562161458E-4	TEST	2.996605563741587E-4	DESIGN	4.2249626971492E-6	IMPLEMENTATION	1.051279262040118E-6	DOCUMENTATION
//strip leading ", "	WITHOUT_CLASSIFICATION	0.9999971893069594	WITHOUT_CLASSIFICATION	1.808174086907036E-6	DESIGN	3.757260222191599E-7	IMPLEMENTATION	3.0813696475293654E-7	DEFECT	2.489108380744222E-7	TEST	6.974512863690908E-8	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9999807724529695	WITHOUT_CLASSIFICATION	1.554154603733855E-5	DEFECT	3.5585730567920285E-6	DESIGN	9.843492030984233E-8	TEST	2.002894918775658E-8	IMPLEMENTATION	8.964066915130007E-9	DOCUMENTATION
//otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.9940963360168977	WITHOUT_CLASSIFICATION	0.005712338319803583	DESIGN	1.8786266000458965E-4	IMPLEMENTATION	1.5876916231211927E-6	TEST	1.5322275203319728E-6	DEFECT	3.430841505797317E-7	DOCUMENTATION
//null owner ok??	WITHOUT_CLASSIFICATION	0.9998938679319976	WITHOUT_CLASSIFICATION	8.707995763684242E-5	DESIGN	9.435605885670935E-6	IMPLEMENTATION	8.795509066706244E-6	DEFECT	5.044413965441303E-7	DOCUMENTATION	3.1655401656664315E-7	TEST
// null sql means that the only lazy properties // are shared PK one-to-one associations which are // handled differently in the Type#nullSafeGet code...	WITHOUT_CLASSIFICATION	0.9991666309922606	WITHOUT_CLASSIFICATION	8.274855980844031E-4	DESIGN	3.4514571406529593E-6	DOCUMENTATION	1.9006971538923899E-6	DEFECT	4.3890068074491023E-7	IMPLEMENTATION	9.23546798368374E-8	TEST
// Create a new FROM node for the referenced class.	WITHOUT_CLASSIFICATION	0.9999620454146894	WITHOUT_CLASSIFICATION	3.793523081827491E-5	DESIGN	8.225604283835445E-9	DOCUMENTATION	4.494092585282448E-9	DEFECT	3.814986168266001E-9	IMPLEMENTATION	2.819809181433432E-9	TEST
// the difficulty here is exactly what do we update in order to // force the version to be incremented in the db...	WITHOUT_CLASSIFICATION	0.886314436050967	WITHOUT_CLASSIFICATION	0.11347850245953114	DESIGN	1.387336721290665E-4	IMPLEMENTATION	6.271928390797048E-5	DEFECT	5.35714352307848E-6	DOCUMENTATION	2.513899416531547E-7	TEST
// performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.9999963823994313	WITHOUT_CLASSIFICATION	2.9167383306768732E-6	DESIGN	4.952403681554556E-7	DOCUMENTATION	1.3295659995957794E-7	IMPLEMENTATION	6.962473473141314E-8	DEFECT	3.0405349781059164E-9	TEST
// properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.9999993654759359	WITHOUT_CLASSIFICATION	4.2321260197258504E-7	IMPLEMENTATION	1.2874624621524018E-7	DESIGN	5.176278759722328E-8	DEFECT	2.3309061655123905E-8	DOCUMENTATION	7.493366637498836E-9	TEST
//Enable for HHH-440, which we don't like:	WITHOUT_CLASSIFICATION	0.989211162806945	WITHOUT_CLASSIFICATION	0.01076603083946997	DESIGN	1.1598647415995525E-5	DEFECT	7.029596675006695E-6	DOCUMENTATION	3.6011973265608897E-6	TEST	5.769121674358759E-7	IMPLEMENTATION
// ALIASES	WITHOUT_CLASSIFICATION	0.9999869633413764	WITHOUT_CLASSIFICATION	7.448417827304926E-6	DESIGN	3.7870970962608923E-6	DEFECT	1.3933376381218461E-6	IMPLEMENTATION	2.586315969895897E-7	DOCUMENTATION	1.4917446502713563E-7	TEST
// aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.9999976258332836	WITHOUT_CLASSIFICATION	2.1504651024062364E-6	DESIGN	1.9647566192501883E-7	IMPLEMENTATION	1.5315365001921857E-8	TEST	6.40574435691434E-9	DEFECT	5.504842817058252E-9	DOCUMENTATION
// aliases for composite-id's	WITHOUT_CLASSIFICATION	0.9999998933292324	WITHOUT_CLASSIFICATION	8.773446619849917E-8	DESIGN	1.2991000503281304E-8	IMPLEMENTATION	3.2805290691929784E-9	DEFECT	1.943727949874838E-9	TEST	7.21043757400528E-10	DOCUMENTATION
// Fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.9999999916080989	WITHOUT_CLASSIFICATION	7.344708532909158E-9	DESIGN	9.389748991803151E-10	DEFECT	4.8396054782236354E-11	DOCUMENTATION	3.200050716171213E-11	IMPLEMENTATION	2.7821067423960798E-11	TEST
// embedded composite ids ( alias.idname1, alias.idname2 )	WITHOUT_CLASSIFICATION	0.9999998676248067	WITHOUT_CLASSIFICATION	7.877698743684576E-8	DESIGN	4.142073589265635E-8	IMPLEMENTATION	1.0286387246583688E-8	DEFECT	1.1664443832857653E-9	TEST	7.246383284792885E-10	DOCUMENTATION
// TODO: skip formulas?	WITHOUT_CLASSIFICATION	0.8592141689725876	IMPLEMENTATION	0.08409036818617613	DESIGN	0.05134268122916934	WITHOUT_CLASSIFICATION	0.002579232735411773	DOCUMENTATION	0.002251397731101793	DEFECT	5.221511455534496E-4	TEST
//don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9999604560565741	WITHOUT_CLASSIFICATION	2.086268260114235E-5	IMPLEMENTATION	1.713688699138688E-5	DESIGN	7.192951240943276E-7	TEST	4.624436606677406E-7	DEFECT	3.62635048588661E-7	DOCUMENTATION
//do two passes, for collection property-ref!	WITHOUT_CLASSIFICATION	0.999993840900405	WITHOUT_CLASSIFICATION	4.414616651153799E-6	DEFECT	1.4637497291760587E-6	IMPLEMENTATION	1.698512528905744E-7	TEST	7.608845109947398E-8	DOCUMENTATION	3.479351075543674E-8	DESIGN
// select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.9999566696151769	WITHOUT_CLASSIFICATION	2.9565359288282616E-5	DEFECT	1.2808443329581967E-5	DESIGN	8.430366467073412E-7	IMPLEMENTATION	9.986525206877319E-8	TEST	1.3680306387339781E-8	DOCUMENTATION
//TODO: eventually, rowIdName[j]	WITHOUT_CLASSIFICATION	0.9650639855594096	IMPLEMENTATION	0.023530191579960138	WITHOUT_CLASSIFICATION	0.008616375575156932	DESIGN	0.0024133848363145733	DEFECT	2.4025009634564434E-4	DOCUMENTATION	1.3581235281315388E-4	TEST
// this is a property of the table, which we are updating	WITHOUT_CLASSIFICATION	0.9999873382135265	WITHOUT_CLASSIFICATION	1.1520419654019232E-5	DEFECT	1.1140133586797524E-6	DESIGN	1.3744338889510626E-8	DOCUMENTATION	9.53365431085213E-9	IMPLEMENTATION	4.075467599863788E-9	TEST
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999539316871806	WITHOUT_CLASSIFICATION	3.569292027706628E-5	DEFECT	8.169002240931057E-6	IMPLEMENTATION	8.615153685986288E-7	DOCUMENTATION	6.726355556867736E-7	TEST	6.722393773561048E-7	DESIGN
// we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.9999954772487767	WITHOUT_CLASSIFICATION	4.39053362350202E-6	DEFECT	8.240115424501197E-8	DESIGN	2.484118305332163E-8	IMPLEMENTATION	1.727931026181436E-8	DOCUMENTATION	7.695952210671728E-9	TEST
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.999805986442894	WITHOUT_CLASSIFICATION	1.929723485755091E-4	DESIGN	6.806498183613982E-7	TEST	2.3181401834900304E-7	DEFECT	1.1732896360389234E-7	IMPLEMENTATION	1.1415730270608876E-8	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9998937245947421	WITHOUT_CLASSIFICATION	7.875965687622337E-5	DESIGN	2.7492954453038282E-5	DEFECT	1.5475358536629617E-8	TEST	4.937076689784793E-9	DOCUMENTATION	2.381493219653649E-9	IMPLEMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9999997751372094	WITHOUT_CLASSIFICATION	1.7487468089991844E-7	IMPLEMENTATION	2.0783844840091667E-8	DEFECT	1.771505324698975E-8	DOCUMENTATION	1.0353278046737049E-8	DESIGN	1.1359335475643728E-9	TEST
// add the discriminator	WITHOUT_CLASSIFICATION	0.9999935789593632	WITHOUT_CLASSIFICATION	6.280625935229903E-6	DESIGN	1.0841319913596397E-7	DOCUMENTATION	1.613033699171839E-8	IMPLEMENTATION	9.504985865828494E-9	DEFECT	6.366179620783069E-9	TEST
// more specifically : "? [op] datetime" //      1) if the operator is MINUS, the param needs to be of //          some datetime type //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.5298772055978616	DESIGN	0.4700773390391818	WITHOUT_CLASSIFICATION	3.839547957946986E-5	DEFECT	3.499194368400604E-6	DOCUMENTATION	2.587624279467833E-6	IMPLEMENTATION	9.730647293642044E-7	TEST
// add normal properties	WITHOUT_CLASSIFICATION	0.9999997751372094	WITHOUT_CLASSIFICATION	1.7487468089991844E-7	IMPLEMENTATION	2.0783844840091667E-8	DEFECT	1.771505324698975E-8	DOCUMENTATION	1.0353278046737049E-8	DESIGN	1.1359335475643728E-9	TEST
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9998937245947421	WITHOUT_CLASSIFICATION	7.875965687622337E-5	DESIGN	2.7492954453038282E-5	DEFECT	1.5475358536629617E-8	TEST	4.937076689784793E-9	DOCUMENTATION	2.381493219653649E-9	IMPLEMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.9999935789593632	WITHOUT_CLASSIFICATION	6.280625935229903E-6	DESIGN	1.0841319913596397E-7	DOCUMENTATION	1.613033699171839E-8	IMPLEMENTATION	9.504985865828494E-9	DEFECT	6.366179620783069E-9	TEST
// add the primary key	WITHOUT_CLASSIFICATION	0.9999895600498656	WITHOUT_CLASSIFICATION	7.543225767981642E-6	IMPLEMENTATION	2.432415642220741E-6	DESIGN	3.4603293990422244E-7	DOCUMENTATION	7.30994108186713E-8	DEFECT	4.517637343382169E-8	TEST
// delegate already handles PK columns	WITHOUT_CLASSIFICATION	0.9999987860494245	WITHOUT_CLASSIFICATION	1.0461953096632436E-6	DESIGN	7.227741715671447E-8	IMPLEMENTATION	6.850142590776201E-8	DEFECT	1.3930686169737032E-8	TEST	1.3045736447938669E-8	DOCUMENTATION
// we can't batch joined inserts, *especially* not if it is an identity insert; // nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.9999986578570519	WITHOUT_CLASSIFICATION	1.3398219483798001E-6	DEFECT	1.139228011615553E-9	DESIGN	1.017180272946945E-9	TEST	1.1467292954214585E-10	IMPLEMENTATION	4.991860559197549E-11	DOCUMENTATION
// Render the SQL query	WITHOUT_CLASSIFICATION	0.9964276596972459	WITHOUT_CLASSIFICATION	0.003313097889513007	DESIGN	1.9533786255513595E-4	DEFECT	5.510316521934646E-5	IMPLEMENTATION	6.622504239861535E-6	DOCUMENTATION	2.1788812268298978E-6	TEST
// Write the values of fields onto the prepared statement - we MUST use the state at the time the // insert was issued (cos of foreign key constraints). Not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.9999925361227076	WITHOUT_CLASSIFICATION	6.944600950118821E-6	DEFECT	5.110790569852498E-7	DESIGN	7.341736845316908E-9	DOCUMENTATION	5.155147478171702E-10	IMPLEMENTATION	3.400337390143312E-10	TEST
// TODO : shouldnt inserts be Expectations.NONE?	WITHOUT_CLASSIFICATION	0.9841487194294084	DESIGN	0.008627756632821369	DEFECT	0.006879557043894206	IMPLEMENTATION	1.6431848617197553E-4	WITHOUT_CLASSIFICATION	1.5319817596286814E-4	TEST	2.6450231741183086E-5	DOCUMENTATION
//don't bother trying to update, we know there is no row there yet	WITHOUT_CLASSIFICATION	0.5619845523098961	DESIGN	0.43517169864232946	WITHOUT_CLASSIFICATION	0.002523601023484172	DEFECT	2.960926218948756E-4	IMPLEMENTATION	1.886578252117312E-5	TEST	5.189619874087746E-6	DOCUMENTATION
//if all fields are null, we might need to delete existing row	WITHOUT_CLASSIFICATION	0.999942486934393	WITHOUT_CLASSIFICATION	2.913205742553273E-5	IMPLEMENTATION	1.8810717311551545E-5	DESIGN	8.311362302841833E-6	DEFECT	9.650076964270224E-7	TEST	2.9392087062595894E-7	DOCUMENTATION
//there is probably a row there, so try to update //if no rows were updated, we will find out	WITHOUT_CLASSIFICATION	0.9998881353402277	WITHOUT_CLASSIFICATION	1.1183164477229314E-4	DESIGN	2.3384976600106144E-8	IMPLEMENTATION	6.703998736001127E-9	DEFECT	1.7384817181520436E-9	TEST	1.1875429248126344E-9	DOCUMENTATION
//note: updates to joined tables can't be batched...	WITHOUT_CLASSIFICATION	0.9999299339128499	WITHOUT_CLASSIFICATION	5.619752768008748E-5	DEFECT	1.3340284211603104E-5	DESIGN	3.160663106142649E-7	IMPLEMENTATION	1.4013106425911775E-7	TEST	7.207788340187332E-8	DOCUMENTATION
// starting index	WITHOUT_CLASSIFICATION	0.9998787839135282	WITHOUT_CLASSIFICATION	7.572983914291074E-5	DESIGN	3.933087300120244E-5	DEFECT	4.541602848327981E-6	IMPLEMENTATION	8.598719872123864E-7	TEST	7.538994921462302E-7	DOCUMENTATION
//Now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.9999886577471195	WITHOUT_CLASSIFICATION	5.395793811799623E-6	DESIGN	3.353541241755456E-6	DEFECT	2.43321840834972E-6	IMPLEMENTATION	1.1888025425784441E-7	TEST	4.0819164163312646E-8	DOCUMENTATION
// Write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.9991958179323845	WITHOUT_CLASSIFICATION	4.118405057533057E-4	DESIGN	3.1571153743958365E-4	DEFECT	7.485394141555166E-5	IMPLEMENTATION	1.4348276677465353E-6	DOCUMENTATION	3.412553393041516E-7	TEST
//Render the SQL query	WITHOUT_CLASSIFICATION	0.9961265589535199	WITHOUT_CLASSIFICATION	0.003735868417798369	DESIGN	7.06745012649429E-5	DEFECT	4.932706357097333E-5	IMPLEMENTATION	1.434482513514044E-5	DOCUMENTATION	3.2262387106357564E-6	TEST
// Do the key. The key is immutable so we can use the _current_ object state - not necessarily // the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.9999980848697094	WITHOUT_CLASSIFICATION	1.5594058781065057E-6	IMPLEMENTATION	3.2441411883708125E-7	DEFECT	2.167459913639998E-8	DOCUMENTATION	8.22717850606002E-9	DESIGN	1.4085159738813528E-9	TEST
// We should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.9999996366936906	WITHOUT_CLASSIFICATION	2.682925177680433E-7	DEFECT	5.8489738191106E-8	IMPLEMENTATION	3.2421605754821626E-8	DESIGN	2.776591040200202E-9	DOCUMENTATION	1.325856615881836E-9	TEST
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999957690565898	WITHOUT_CLASSIFICATION	3.4615068843359246E-6	DESIGN	7.649332609098112E-7	DEFECT	3.4071097427420457E-9	DOCUMENTATION	8.030414269545625E-10	TEST	2.9311378890731996E-10	IMPLEMENTATION
//note: dirtyFields==null means we had no snapshot, and we couldn't get one using select-before-update //	WITHOUT_CLASSIFICATION	0.9999916306882793	WITHOUT_CLASSIFICATION	5.1785619394719455E-6	DESIGN	3.167935923583929E-6	DEFECT	2.1341434412105383E-8	IMPLEMENTATION	1.0521386301301725E-9	TEST	4.2028464794918047E-10	DOCUMENTATION
// more specifically : "datetime [op] ?" //      1) if the operator is MINUS, we really cannot determine //          the expected type as either another datetime or //          numeric would be valid //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9999251250966803	WITHOUT_CLASSIFICATION	7.452966203488602E-5	DESIGN	3.407726176609306E-7	DEFECT	3.2707664741326403E-9	DOCUMENTATION	1.1612390569171886E-9	TEST	3.666170592434987E-11	IMPLEMENTATION
// For the case of dynamic-update="true", we need to generate the UPDATE SQL	WITHOUT_CLASSIFICATION	0.9999999183298964	WITHOUT_CLASSIFICATION	4.568190347732537E-8	DESIGN	1.4083936640526831E-8	IMPLEMENTATION	1.176173004425854E-8	DOCUMENTATION	6.608755231373027E-9	TEST	3.533778175334521E-9	DEFECT
// don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.9057162000419758	WITHOUT_CLASSIFICATION	0.08809352336566204	IMPLEMENTATION	0.004168995459253502	DESIGN	0.0019452632122776666	DEFECT	4.889378077421425E-5	DOCUMENTATION	2.7124140056708706E-5	TEST
// For the case of dynamic-update="false", or no snapshot, we use the static SQL	WITHOUT_CLASSIFICATION	0.9999999769506263	WITHOUT_CLASSIFICATION	1.1326944661291833E-8	DESIGN	8.189757716344525E-9	IMPLEMENTATION	2.5289541671314015E-9	DEFECT	9.775734981926133E-10	DOCUMENTATION	2.614370092999711E-11	TEST
// if not "get", then try "is"	WITHOUT_CLASSIFICATION	0.9998887220661038	WITHOUT_CLASSIFICATION	7.707347462013312E-5	DESIGN	2.6115403308153895E-5	DEFECT	4.811511740357178E-6	TEST	2.7799497888835325E-6	IMPLEMENTATION	4.97594438648104E-7	DOCUMENTATION
// Now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.9999993144665439	WITHOUT_CLASSIFICATION	3.501206309726801E-7	IMPLEMENTATION	3.2555593099412167E-7	DESIGN	7.574252047097488E-9	DEFECT	1.477926258007118E-9	DOCUMENTATION	8.047158088626551E-10	TEST
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999989520539095	WITHOUT_CLASSIFICATION	8.857887023036395E-7	DESIGN	9.581601628484806E-8	TEST	4.5307437049825006E-8	DOCUMENTATION	1.2082162486283278E-8	IMPLEMENTATION	8.951772172353698E-9	DEFECT
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999989520539095	WITHOUT_CLASSIFICATION	8.857887023036395E-7	DESIGN	9.581601628484806E-8	TEST	4.5307437049825006E-8	DOCUMENTATION	1.2082162486283278E-8	IMPLEMENTATION	8.951772172353698E-9	DEFECT
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999999550822005	WITHOUT_CLASSIFICATION	3.698758106189142E-8	DESIGN	4.5445167288415795E-9	DEFECT	2.278163930538814E-9	IMPLEMENTATION	9.421335346193741E-10	DOCUMENTATION	1.654041948310026E-10	TEST
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999999550822005	WITHOUT_CLASSIFICATION	3.698758106189142E-8	DESIGN	4.5445167288415795E-9	DEFECT	2.278163930538814E-9	IMPLEMENTATION	9.421335346193741E-10	DOCUMENTATION	1.654041948310026E-10	TEST
// not supported	WITHOUT_CLASSIFICATION	0.9925272848074458	WITHOUT_CLASSIFICATION	0.00623299130599571	IMPLEMENTATION	0.0011742377696958364	DESIGN	5.791883725809291E-5	DEFECT	4.74173997636647E-6	TEST	2.8255396282201473E-6	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999957690565898	WITHOUT_CLASSIFICATION	3.4615068843359246E-6	DESIGN	7.649332609098112E-7	DEFECT	3.4071097427420457E-9	DOCUMENTATION	8.030414269545625E-10	TEST	2.9311378890731996E-10	IMPLEMENTATION
// we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.9999544436071863	WITHOUT_CLASSIFICATION	4.2025623267192724E-5	DESIGN	2.0391851187877643E-6	DOCUMENTATION	1.1751559047717348E-6	IMPLEMENTATION	2.08188280039551E-7	TEST	1.0824024283819915E-7	DEFECT
// otherwise, utilize the static delete statements	WITHOUT_CLASSIFICATION	0.9999890654036402	WITHOUT_CLASSIFICATION	6.360628984764438E-6	DESIGN	4.556722351766516E-6	IMPLEMENTATION	7.26767638355776E-9	DOCUMENTATION	6.769665345031846E-9	TEST	3.207681491623521E-9	DEFECT
//just a performance opt!	WITHOUT_CLASSIFICATION	0.998871727466112	WITHOUT_CLASSIFICATION	0.001099556234934631	DESIGN	1.3978617683315057E-5	IMPLEMENTATION	1.2678882157991371E-5	DOCUMENTATION	1.2453770704457716E-6	DEFECT	8.13422041680866E-7	TEST
//just a performance opt!	WITHOUT_CLASSIFICATION	0.998871727466112	WITHOUT_CLASSIFICATION	0.001099556234934631	DESIGN	1.3978617683315057E-5	IMPLEMENTATION	1.2678882157991371E-5	DOCUMENTATION	1.2453770704457716E-6	DEFECT	8.13422041680866E-7	TEST
//all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.9999981613190952	WITHOUT_CLASSIFICATION	7.177042395153884E-7	DESIGN	5.606671610842709E-7	IMPLEMENTATION	5.163813989956528E-7	DEFECT	3.844463316902102E-8	DOCUMENTATION	5.483471943662553E-9	TEST
//notice that we skip the first table; it is the driving table!	WITHOUT_CLASSIFICATION	0.999995779826093	WITHOUT_CLASSIFICATION	3.3282849106427833E-6	DESIGN	5.84796221185421E-7	DEFECT	1.6545422015785962E-7	IMPLEMENTATION	1.332636554078213E-7	TEST	8.374899730126689E-9	DOCUMENTATION
//we can inner join to superclass tables (the row MUST be there) //we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.9998367642938173	WITHOUT_CLASSIFICATION	1.6323168282428465E-4	DESIGN	3.552997627072536E-9	DEFECT	3.471604062001347E-10	DOCUMENTATION	8.682680513041045E-11	IMPLEMENTATION	3.637361856429578E-11	TEST
//skip the driving table	WITHOUT_CLASSIFICATION	0.9999963289217422	WITHOUT_CLASSIFICATION	2.0866213225692537E-6	DESIGN	1.1300647417845131E-6	IMPLEMENTATION	2.640778932875598E-7	DEFECT	1.3744471508395708E-7	TEST	5.286958508864826E-8	DOCUMENTATION
//get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.9480818586653201	WITHOUT_CLASSIFICATION	0.04532200713049161	DESIGN	0.0055849758942007905	DEFECT	0.0010005506145221805	IMPLEMENTATION	7.609786134438985E-6	DOCUMENTATION	2.997909330859889E-6	TEST
// here, we work under the following assumptions: //      ------------ valid cases -------------------------------------- //      1) datetime + {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      2) datetime - datetime : always results in a DOUBLE //      3) datetime - {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      ------------ invalid cases ------------------------------------ //      4) datetime + datetime //      5) {something other than datetime} - datetime //      6) datetime * {any type} //      7) datetime / {any type} //      8) {any type} / datetime // doing so allows us to properly handle parameters as either the left // or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.8242494158883314	WITHOUT_CLASSIFICATION	0.17420206641539246	DEFECT	0.0014817581196068096	DESIGN	6.634139692530613E-5	IMPLEMENTATION	3.9711818569400573E-7	DOCUMENTATION	2.1061558175900545E-8	TEST
//render the where and from parts	WITHOUT_CLASSIFICATION	0.9997154834762974	WITHOUT_CLASSIFICATION	2.6215776580340133E-4	DESIGN	1.661728974675609E-5	DEFECT	3.1518360621069017E-6	IMPLEMENTATION	1.6868419325077123E-6	DOCUMENTATION	9.027901577870825E-7	TEST
//we *could* regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.9740586841486282	WITHOUT_CLASSIFICATION	0.025932478600135023	DESIGN	8.089934531593504E-6	DEFECT	4.0833010345106464E-7	IMPLEMENTATION	3.0417734981351515E-7	TEST	3.480925188172448E-8	DOCUMENTATION
//now render the joins	WITHOUT_CLASSIFICATION	0.9997242364540115	WITHOUT_CLASSIFICATION	1.8450225459931813E-4	DESIGN	5.154589029517233E-5	IMPLEMENTATION	3.549191616539439E-5	DEFECT	3.637499108173116E-6	DOCUMENTATION	5.859858204142596E-7	TEST
// This will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.9999962961915483	WITHOUT_CLASSIFICATION	1.9526456210264765E-6	IMPLEMENTATION	1.2594609825031061E-6	DESIGN	3.8798762025838493E-7	DEFECT	9.61829476857715E-8	DOCUMENTATION	7.531280139465326E-9	TEST
//now render the select clause	WITHOUT_CLASSIFICATION	0.9999962567080105	WITHOUT_CLASSIFICATION	2.278817611581697E-6	DESIGN	8.033011614304445E-7	DEFECT	6.219597957633735E-7	IMPLEMENTATION	2.9767712730119428E-8	DOCUMENTATION	9.445707980778824E-9	TEST
//now tie it all together	WITHOUT_CLASSIFICATION	0.9998859438213704	WITHOUT_CLASSIFICATION	5.995099233467928E-5	DESIGN	5.37975440179686E-5	IMPLEMENTATION	1.40445928139835E-7	DEFECT	8.766221767491291E-8	TEST	7.953413107886118E-8	DOCUMENTATION
//insert/update/delete SQL	WITHOUT_CLASSIFICATION	0.9999989214544088	WITHOUT_CLASSIFICATION	8.976064635160819E-7	DESIGN	1.570482543359807E-7	DEFECT	8.497774727861994E-9	TEST	7.704471823104704E-9	IMPLEMENTATION	7.688626700811716E-9	DOCUMENTATION
//select SQL	WITHOUT_CLASSIFICATION	0.9999731864260563	WITHOUT_CLASSIFICATION	2.505959535493874E-5	DESIGN	7.979177098956311E-7	IMPLEMENTATION	5.588522683372514E-7	DEFECT	2.2560338187583568E-7	TEST	1.7160522868956112E-7	DOCUMENTATION
//no need to check laziness, dirty checking handles that	WITHOUT_CLASSIFICATION	0.9998836829159746	WITHOUT_CLASSIFICATION	7.391699664524774E-5	IMPLEMENTATION	3.912701957197768E-5	DESIGN	1.2702178039672822E-6	DEFECT	1.009256976536356E-6	TEST	9.9359302773268E-7	DOCUMENTATION
// Fully resolve the map reference, create implicit joins.	WITHOUT_CLASSIFICATION	0.9999577625250642	WITHOUT_CLASSIFICATION	4.0363904676872504E-5	DESIGN	1.3856788043801114E-6	IMPLEMENTATION	2.095926526464999E-7	TEST	1.9530383886359065E-7	DEFECT	8.299496302227525E-8	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998000925350969	WITHOUT_CLASSIFICATION	1.972285636896091E-4	DESIGN	1.3027105154951593E-6	DEFECT	6.647812996063374E-7	TEST	5.501333080756532E-7	IMPLEMENTATION	1.612760903417493E-7	DOCUMENTATION
// The basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.9999970039248771	WITHOUT_CLASSIFICATION	2.7869086114943123E-6	DESIGN	1.8494139340777612E-7	IMPLEMENTATION	1.8053750454499278E-8	DEFECT	5.612401465316634E-9	DOCUMENTATION	5.589659511436347E-10	TEST
// for dialects which are known to not support ANSI-SQL row-value-constructor syntax, // we should mutate the tree.	WITHOUT_CLASSIFICATION	0.9999926188196018	WITHOUT_CLASSIFICATION	6.732525622773698E-6	DESIGN	3.2393819690126227E-7	DEFECT	3.097082246194907E-7	IMPLEMENTATION	1.276184797002649E-8	TEST	2.2465058937576545E-9	DOCUMENTATION
// Due to the complexity in initializing the SelectClause, do not generate one here. // If it is not found; simply return null... // // Also, do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.9999984417120905	WITHOUT_CLASSIFICATION	1.2347160245009494E-6	DESIGN	2.481627218971179E-7	DEFECT	7.150338250921883E-8	IMPLEMENTATION	3.1977558159403397E-9	TEST	7.080248711486244E-10	DOCUMENTATION
// check the version unsaved-value, if appropriate	WITHOUT_CLASSIFICATION	0.9999149911209122	WITHOUT_CLASSIFICATION	7.465694548865349E-5	IMPLEMENTATION	8.801847860233395E-6	DESIGN	1.4822430299484038E-6	DEFECT	6.201032467698369E-8	DOCUMENTATION	5.832384320334392E-9	TEST
// let this take precedence if defined, since it works for // assigned identifiers	WITHOUT_CLASSIFICATION	0.9999997767209807	WITHOUT_CLASSIFICATION	1.0405846012123206E-7	DESIGN	7.579863503423444E-8	DEFECT	4.1007824313046446E-8	TEST	1.4052026309841476E-9	IMPLEMENTATION	1.0088972246562627E-9	DOCUMENTATION
// check the id unsaved-value	WITHOUT_CLASSIFICATION	0.9999972562629221	WITHOUT_CLASSIFICATION	2.330514000638106E-6	IMPLEMENTATION	1.9200084056937084E-7	DESIGN	1.6272272730518955E-7	DEFECT	5.5560692615320095E-8	DOCUMENTATION	2.9388167038821048E-9	TEST
// check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.9999680878837786	WITHOUT_CLASSIFICATION	3.167370154788764E-5	DESIGN	1.811744978084103E-7	DEFECT	2.736583285971132E-8	DOCUMENTATION	2.504275010608137E-8	IMPLEMENTATION	4.831592856348391E-9	TEST
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997316184170177	WITHOUT_CLASSIFICATION	2.1313449085769666E-4	DESIGN	2.4994425986067226E-5	IMPLEMENTATION	1.334445200800401E-5	DEFECT	8.599242376080556E-6	DOCUMENTATION	8.308971754592307E-6	TEST
// For property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.99999915325722	WITHOUT_CLASSIFICATION	3.315264126406838E-7	IMPLEMENTATION	3.292376119504701E-7	DEFECT	1.5828978426557229E-7	DESIGN	1.812542982423505E-8	DOCUMENTATION	9.563541454856952E-9	TEST
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999918862629346	WITHOUT_CLASSIFICATION	2.71921166333524E-6	DEFECT	2.570350317935534E-6	IMPLEMENTATION	2.058548473821062E-6	DESIGN	3.848799860130386E-7	DOCUMENTATION	3.807466243937829E-7	TEST
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9999807724529695	WITHOUT_CLASSIFICATION	1.554154603733855E-5	DEFECT	3.5585730567920285E-6	DESIGN	9.843492030984233E-8	TEST	2.002894918775658E-8	IMPLEMENTATION	8.964066915130007E-9	DOCUMENTATION
//force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.9999972915989631	WITHOUT_CLASSIFICATION	1.7871192099315337E-6	DEFECT	7.594423393768795E-7	DESIGN	9.639888737544332E-8	DOCUMENTATION	4.5216933104045116E-8	TEST	2.022366719527573E-8	IMPLEMENTATION
// If this from element is a collection and the path is a collection property (maxIndex, etc.) then // generate a sub-query.	WITHOUT_CLASSIFICATION	0.999957716286252	WITHOUT_CLASSIFICATION	4.003832296089236E-5	DEFECT	2.1285316829315677E-6	DESIGN	8.424505652570879E-8	IMPLEMENTATION	1.850968599391644E-8	TEST	1.410436174135242E-8	DOCUMENTATION
// entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999906272812278	WITHOUT_CLASSIFICATION	7.0633031702836595E-6	DESIGN	1.523024468812684E-6	IMPLEMENTATION	4.0223521175418456E-7	DEFECT	2.1730705724895685E-7	TEST	1.668488641515212E-7	DOCUMENTATION
// collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999833868021458	WITHOUT_CLASSIFICATION	9.289591358678541E-6	DEFECT	4.013938833211601E-6	DESIGN	3.147245592940881E-6	IMPLEMENTATION	8.656324860297065E-8	TEST	7.585882073454352E-8	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.999861491245449	WITHOUT_CLASSIFICATION	1.3044639893358275E-4	DESIGN	6.046818565619505E-6	DEFECT	1.279890064253561E-6	DOCUMENTATION	5.209143021626955E-7	IMPLEMENTATION	2.1473268545341834E-7	TEST
//cannot occur	WITHOUT_CLASSIFICATION	0.999861491245449	WITHOUT_CLASSIFICATION	1.3044639893358275E-4	DESIGN	6.046818565619505E-6	DEFECT	1.279890064253561E-6	DOCUMENTATION	5.209143021626955E-7	IMPLEMENTATION	2.1473268545341834E-7	TEST
// only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.9999980713757526	WITHOUT_CLASSIFICATION	1.6402561082927884E-6	DESIGN	2.790980249219634E-7	DEFECT	4.790721095809003E-9	TEST	3.958545324705274E-9	IMPLEMENTATION	5.208478826983719E-10	DOCUMENTATION
// try "get"	WITHOUT_CLASSIFICATION	0.9999919138774683	WITHOUT_CLASSIFICATION	3.0541251661654337E-6	DESIGN	2.7506958557605484E-6	DEFECT	2.054051918726366E-6	IMPLEMENTATION	1.3302491362378626E-7	TEST	9.422467748173869E-8	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.999866661040394	WITHOUT_CLASSIFICATION	9.272173322184711E-5	DEFECT	3.683327845508482E-5	DESIGN	1.8709156860681877E-6	DOCUMENTATION	1.2049719626696442E-6	IMPLEMENTATION	7.080602805191195E-7	TEST
// do nothing...	WITHOUT_CLASSIFICATION	0.999866661040394	WITHOUT_CLASSIFICATION	9.272173322184711E-5	DEFECT	3.683327845508482E-5	DESIGN	1.8709156860681877E-6	DOCUMENTATION	1.2049719626696442E-6	IMPLEMENTATION	7.080602805191195E-7	TEST
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9998978715968381	WITHOUT_CLASSIFICATION	7.422642650367037E-5	DESIGN	2.6553378790278892E-5	DEFECT	9.125212457619966E-7	IMPLEMENTATION	2.951289883696346E-7	TEST	1.4094763382185785E-7	DOCUMENTATION
// this page intentionally left blank :)	WITHOUT_CLASSIFICATION	0.9997518191931779	WITHOUT_CLASSIFICATION	2.013089784207099E-4	DESIGN	3.207354579020675E-5	IMPLEMENTATION	1.1052437376713022E-5	DEFECT	3.4417869988976998E-6	DOCUMENTATION	3.0405823540000955E-7	TEST
// do not do anything	WITHOUT_CLASSIFICATION	0.9999747441813289	WITHOUT_CLASSIFICATION	1.9339975062022774E-5	DEFECT	2.3259948188678986E-6	DESIGN	1.9059019460563735E-6	DOCUMENTATION	1.295796384487791E-6	IMPLEMENTATION	3.881504596292928E-7	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999992007508399	WITHOUT_CLASSIFICATION	4.30290340356289E-7	DESIGN	2.7954840539106423E-7	DEFECT	5.757936653925719E-8	IMPLEMENTATION	2.1773752705374364E-8	DOCUMENTATION	1.0057295141760182E-8	TEST
//cant instantiate	WITHOUT_CLASSIFICATION	0.9993253800806782	WITHOUT_CLASSIFICATION	6.632905584989097E-4	DESIGN	5.951713372308287E-6	DEFECT	2.085837496099171E-6	IMPLEMENTATION	2.017309848639328E-6	DOCUMENTATION	1.2745001058163431E-6	TEST
//if it is a property of an embedded component, invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.9999029673443998	WITHOUT_CLASSIFICATION	9.689182325206121E-5	DESIGN	1.1714092983819789E-7	DEFECT	1.5621721000238E-8	TEST	7.35275599902299E-9	DOCUMENTATION	7.169413973840638E-10	IMPLEMENTATION
// otherwise:	WITHOUT_CLASSIFICATION	0.9970277636548674	WITHOUT_CLASSIFICATION	0.002326710866237316	DESIGN	6.359573639884996E-4	IMPLEMENTATION	4.856475938105186E-6	DEFECT	3.4760134627449E-6	TEST	1.2356255058098333E-6	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9995770969372273	WITHOUT_CLASSIFICATION	2.6302711721440185E-4	DESIGN	1.5327020516111656E-4	IMPLEMENTATION	3.4982803564029703E-6	DEFECT	1.9159504421176126E-6	DOCUMENTATION	1.1915095986406163E-6	TEST
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9998803487488972	WITHOUT_CLASSIFICATION	1.1602969849914668E-4	DESIGN	3.4603311875065717E-6	DEFECT	9.729642959890752E-8	IMPLEMENTATION	4.764733179421438E-8	DOCUMENTATION	1.6277654537515376E-8	TEST
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9998803487488972	WITHOUT_CLASSIFICATION	1.1602969849914668E-4	DESIGN	3.4603311875065717E-6	DEFECT	9.729642959890752E-8	IMPLEMENTATION	4.764733179421438E-8	DOCUMENTATION	1.6277654537515376E-8	TEST
// HHH-2481 make sure the callback gets cleared, otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.9117178107115051	WITHOUT_CLASSIFICATION	0.0880704044537368	DESIGN	2.081966955559347E-4	DEFECT	3.3663102240000573E-6	IMPLEMENTATION	2.075313587673739E-7	DOCUMENTATION	1.4297619142832445E-8	TEST
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999981836000331	WITHOUT_CLASSIFICATION	1.4366411828809183E-6	DESIGN	1.7060631621055108E-7	IMPLEMENTATION	1.3991233885266362E-7	DEFECT	6.3533900735115E-8	TEST	5.706228329165665E-9	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999981836000331	WITHOUT_CLASSIFICATION	1.4366411828809183E-6	DESIGN	1.7060631621055108E-7	IMPLEMENTATION	1.3991233885266362E-7	DEFECT	6.3533900735115E-8	TEST	5.706228329165665E-9	DOCUMENTATION
// note: interface is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999174805897507	WITHOUT_CLASSIFICATION	8.201400869403939E-5	DESIGN	4.3082280698236314E-7	DEFECT	4.5776074741088226E-8	IMPLEMENTATION	2.4137714173398473E-8	DOCUMENTATION	4.664959179183293E-9	TEST
// interfaces // arguments	WITHOUT_CLASSIFICATION	0.9999997058187357	WITHOUT_CLASSIFICATION	2.790049234745791E-7	DESIGN	6.10175498852118E-9	DEFECT	4.912751539508123E-9	DOCUMENTATION	4.152472719036913E-9	TEST	9.361537998891796E-12	IMPLEMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9646148427718467	WITHOUT_CLASSIFICATION	0.02927272782514354	DESIGN	0.0026479273182667606	IMPLEMENTATION	0.0014308512008233561	DEFECT	0.0012960591844909948	DOCUMENTATION	7.375916994285473E-4	TEST
// Get the caller	WITHOUT_CLASSIFICATION	0.9999992944194809	WITHOUT_CLASSIFICATION	3.8726485561326104E-7	DESIGN	2.724977892115114E-7	IMPLEMENTATION	3.595408876491421E-8	DEFECT	6.889157631116435E-9	TEST	2.9746277707600833E-9	DOCUMENTATION
// Get the caller principals	WITHOUT_CLASSIFICATION	0.9999993934737219	WITHOUT_CLASSIFICATION	4.5391508332317106E-7	DESIGN	1.2024413182417047E-7	IMPLEMENTATION	2.3085000679092656E-8	DEFECT	6.4702402503043395E-9	DOCUMENTATION	2.8118221371833453E-9	TEST
//private static final Alias DEFAULT_ALIAS = new Alias(10, null);	WITHOUT_CLASSIFICATION	0.9999999342287686	WITHOUT_CLASSIFICATION	5.491862416243005E-8	DESIGN	1.0003701041184393E-8	DEFECT	6.844114724488725E-10	DOCUMENTATION	1.278180310796346E-10	IMPLEMENTATION	3.6676819742910756E-11	TEST
// Needed to bump this up to DotNode, because that is the only thing which currently // knows about the property-ref path in the correct format; it is either this, or // recurse over the DotNodes constructing the property path just like DotNode does // internally	WITHOUT_CLASSIFICATION	0.9999064808738224	WITHOUT_CLASSIFICATION	9.109517615655738E-5	IMPLEMENTATION	1.0827945434192487E-6	DOCUMENTATION	7.935192777805878E-7	DESIGN	5.327533604727368E-7	TEST	1.4882839340352848E-8	DEFECT
//if the identifier is quoted, remove the quotes	WITHOUT_CLASSIFICATION	0.9999155591568858	WITHOUT_CLASSIFICATION	6.208895653677086E-5	DESIGN	1.302139428887511E-5	IMPLEMENTATION	8.113398824156865E-6	TEST	1.105761383101716E-6	DEFECT	1.1133208120127285E-7	DOCUMENTATION
//truncate the identifier to the max alias length, less the suffix length	WITHOUT_CLASSIFICATION	0.9999973747009652	WITHOUT_CLASSIFICATION	2.479815295800977E-6	DESIGN	1.1904195429955484E-7	IMPLEMENTATION	1.7532724707450107E-8	DOCUMENTATION	4.604289848569179E-9	DEFECT	4.304770265728209E-9	TEST
//full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.9936670673870217	WITHOUT_CLASSIFICATION	0.003437089904643425	DEFECT	0.0015696176807289703	IMPLEMENTATION	0.001299341312129022	DESIGN	1.680006952093903E-5	TEST	1.0083645955854503E-5	DOCUMENTATION
// null is not considered the same type as Integer. //$NON-NLS-1 //$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999838209626007	WITHOUT_CLASSIFICATION	1.0698244836347246E-5	DEFECT	5.247346034247754E-6	DESIGN	2.306958276319343E-7	IMPLEMENTATION	1.8145488350723289E-9	TEST	9.36152110039377E-10	DOCUMENTATION
// the outerJoinsAfterWhere needs to come before where clause to properly // handle dynamic filters	WITHOUT_CLASSIFICATION	0.999985536875022	WITHOUT_CLASSIFICATION	1.4153584563360841E-5	IMPLEMENTATION	1.6400393539029856E-7	DEFECT	1.3159883777528897E-7	DESIGN	1.313439055534906E-8	DOCUMENTATION	8.032508348247284E-10	TEST
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999341175113236	WITHOUT_CLASSIFICATION	5.520840086216037E-5	DESIGN	8.678944147476615E-6	DEFECT	7.577811029905932E-7	DOCUMENTATION	6.486721445089978E-7	IMPLEMENTATION	5.88690419369326E-7	TEST
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999341175113236	WITHOUT_CLASSIFICATION	5.520840086216037E-5	DESIGN	8.678944147476615E-6	DEFECT	7.577811029905932E-7	DOCUMENTATION	6.486721445089978E-7	IMPLEMENTATION	5.88690419369326E-7	TEST
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999341175113236	WITHOUT_CLASSIFICATION	5.520840086216037E-5	DESIGN	8.678944147476615E-6	DEFECT	7.577811029905932E-7	DOCUMENTATION	6.486721445089978E-7	IMPLEMENTATION	5.88690419369326E-7	TEST
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999341175113236	WITHOUT_CLASSIFICATION	5.520840086216037E-5	DESIGN	8.678944147476615E-6	DEFECT	7.577811029905932E-7	DOCUMENTATION	6.486721445089978E-7	IMPLEMENTATION	5.88690419369326E-7	TEST
// strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.999959154346496	WITHOUT_CLASSIFICATION	3.4116589436138784E-5	DEFECT	3.6018642445109376E-6	DESIGN	2.209043365042112E-6	IMPLEMENTATION	5.074961128064363E-7	TEST	4.106603454140546E-7	DOCUMENTATION
// if the condition is not already there...	WITHOUT_CLASSIFICATION	0.9924823188420657	WITHOUT_CLASSIFICATION	0.00702194527976786	DEFECT	3.6270683515906855E-4	DESIGN	1.2586610333412078E-4	IMPLEMENTATION	6.382906698916148E-6	TEST	7.800329743919337E-7	DOCUMENTATION
//dontSpace.add("'");	WITHOUT_CLASSIFICATION	0.999980776536527	WITHOUT_CLASSIFICATION	1.4939389689525508E-5	DESIGN	2.573574559293468E-6	IMPLEMENTATION	9.949797031267171E-7	DOCUMENTATION	5.908641879647541E-7	DEFECT	1.2465533319189827E-7	TEST
//for MySQL	WITHOUT_CLASSIFICATION	0.9997999592129558	WITHOUT_CLASSIFICATION	1.8835228703892098E-4	DESIGN	8.08660303771254E-6	DEFECT	1.7186605420241717E-6	DOCUMENTATION	1.1347844159999489E-6	IMPLEMENTATION	7.484520093409303E-7	TEST
//HashMap columnsUnique = new HashMap();	WITHOUT_CLASSIFICATION	0.9999922635600852	WITHOUT_CLASSIFICATION	5.065944173794972E-6	IMPLEMENTATION	2.3735081988091423E-6	DESIGN	1.935535613898712E-7	DEFECT	6.312674263832629E-8	DOCUMENTATION	4.030723815233849E-8	TEST
//null caused some problems	WITHOUT_CLASSIFICATION	0.9941446020520078	WITHOUT_CLASSIFICATION	0.005205606595586796	DESIGN	5.593389244343505E-4	DEFECT	6.381262802808957E-5	IMPLEMENTATION	2.4614497610599466E-5	DOCUMENTATION	2.025302332313905E-6	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.998408487020651	WITHOUT_CLASSIFICATION	0.0015341255124436755	DESIGN	3.866327223773271E-5	IMPLEMENTATION	9.233353585650128E-6	DEFECT	7.327886436100033E-6	DOCUMENTATION	2.1629546457955846E-6	TEST
//not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.9964070558509261	WITHOUT_CLASSIFICATION	0.0035909133791328734	DESIGN	1.6429150890962481E-6	DEFECT	2.465019346388665E-7	TEST	1.1688394195389314E-7	IMPLEMENTATION	2.4468975313003973E-8	DOCUMENTATION
//even on inverse="true"	WITHOUT_CLASSIFICATION	0.9999946025440299	WITHOUT_CLASSIFICATION	3.0494970253914697E-6	DESIGN	1.485401932922851E-6	IMPLEMENTATION	4.860558325200088E-7	DEFECT	3.2078978522604166E-7	DOCUMENTATION	5.571139405835201E-8	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.998408487020651	WITHOUT_CLASSIFICATION	0.0015341255124436755	DESIGN	3.866327223773271E-5	IMPLEMENTATION	9.233353585650128E-6	DEFECT	7.327886436100033E-6	DOCUMENTATION	2.1629546457955846E-6	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.998408487020651	WITHOUT_CLASSIFICATION	0.0015341255124436755	DESIGN	3.866327223773271E-5	IMPLEMENTATION	9.233353585650128E-6	DEFECT	7.327886436100033E-6	DOCUMENTATION	2.1629546457955846E-6	TEST
// If true then execute db updates, otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.9999986201668393	WITHOUT_CLASSIFICATION	1.3278918755294E-6	IMPLEMENTATION	3.001876296086687E-8	DESIGN	1.2936124317236365E-8	DEFECT	7.135079479817366E-9	TEST	1.8513184831740302E-9	DOCUMENTATION
// we only release the connection	WITHOUT_CLASSIFICATION	0.9999996571979943	WITHOUT_CLASSIFICATION	1.4232860071054196E-7	DESIGN	7.966742723781716E-8	DEFECT	5.870142389070827E-8	IMPLEMENTATION	5.856058892262598E-8	DOCUMENTATION	3.5439649506054017E-9	TEST
// deprecated option...	WITHOUT_CLASSIFICATION	0.9992036195261267	WITHOUT_CLASSIFICATION	6.670557463806416E-4	DESIGN	9.76650225030827E-5	IMPLEMENTATION	2.6376245111489458E-5	DEFECT	4.285484622669446E-6	DOCUMENTATION	9.979752554864294E-7	TEST
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999566640098306	WITHOUT_CLASSIFICATION	2.40677712421486E-5	DESIGN	1.881498054640801E-5	DEFECT	3.873480543609828E-7	IMPLEMENTATION	4.4950244248633664E-8	TEST	2.0940082248445008E-8	DOCUMENTATION
//actually, this last test is probably unnecessary, since  //beforeCompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.9927601368706224	WITHOUT_CLASSIFICATION	0.006718105568875366	DESIGN	4.936685879178676E-4	TEST	2.728053825790059E-5	DEFECT	7.529006903660042E-7	DOCUMENTATION	5.5533636040040726E-8	IMPLEMENTATION
// this one only really needed for badly-behaved applications! // (if the TransactionManager has a Sychronization registered, // its a noop) // (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.9999917222110319	WITHOUT_CLASSIFICATION	8.213901549052005E-6	DESIGN	2.9991700234122407E-8	IMPLEMENTATION	1.4165026936085025E-8	DOCUMENTATION	1.008370011081579E-8	DEFECT	9.646991819106321E-9	TEST
// Create an DotNode AST for the path and resolve it.	WITHOUT_CLASSIFICATION	0.9998856891703651	WITHOUT_CLASSIFICATION	1.1149876329756123E-4	DESIGN	1.997021974153178E-6	IMPLEMENTATION	3.523468928061424E-7	DOCUMENTATION	3.1453776174866324E-7	TEST	1.4815970865216423E-7	DEFECT
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999566640098306	WITHOUT_CLASSIFICATION	2.40677712421486E-5	DESIGN	1.881498054640801E-5	DEFECT	3.873480543609828E-7	IMPLEMENTATION	4.4950244248633664E-8	TEST	2.0940082248445008E-8	DOCUMENTATION
//if we could not register a synchronization, //do the before/after completion callbacks //ourself (but we need to let jdbcContext //know that this is what we are going to //do, so it doesn't keep trying to register //synchronizations)	WITHOUT_CLASSIFICATION	0.9999988771648521	WITHOUT_CLASSIFICATION	8.143314528404576E-7	DEFECT	2.8330959752842477E-7	DESIGN	1.2734009633947803E-8	TEST	1.12229641700851E-8	DOCUMENTATION	1.2371236818099208E-9	IMPLEMENTATION
// swallow it, and continue to roll back JTA transaction	WITHOUT_CLASSIFICATION	0.9999841255342542	WITHOUT_CLASSIFICATION	1.1586377046232448E-5	DESIGN	2.780064616799232E-6	DEFECT	1.4678780769649955E-6	IMPLEMENTATION	3.9717692640627906E-8	DOCUMENTATION	4.283131227240633E-10	TEST
// so the transaction is already rolled back, by JTA spec	WITHOUT_CLASSIFICATION	0.9999982430418672	WITHOUT_CLASSIFICATION	1.5539146630050149E-6	IMPLEMENTATION	9.233674827957916E-8	DESIGN	8.087758766523575E-8	DEFECT	2.9171871935365854E-8	DOCUMENTATION	6.572619099978299E-10	TEST
// this method is a noop if there is a Synchronization!	WITHOUT_CLASSIFICATION	0.9998285829725598	WITHOUT_CLASSIFICATION	1.621901580172581E-4	DESIGN	8.304155967761434E-6	DEFECT	5.934805158827611E-7	TEST	2.651807367573937E-7	DOCUMENTATION	6.405220243686659E-8	IMPLEMENTATION
// two conditions where we need to transform this to a theta-join syntax: //      1) 'elem' is the "root from-element" in correlated subqueries //      2) The DotNode.useThetaStyleImplicitJoins has been set to true //          and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.9916266014368922	WITHOUT_CLASSIFICATION	0.008356785790476898	DESIGN	1.6263447353716262E-5	DEFECT	3.0616540375866057E-7	DOCUMENTATION	4.058113983471612E-8	TEST	2.5787335473913562E-9	IMPLEMENTATION
// WebSphere, however, is not a sane JEE/JTA container...	WITHOUT_CLASSIFICATION	0.9988504802191628	WITHOUT_CLASSIFICATION	6.974952896427321E-4	DESIGN	4.449848227126113E-4	DEFECT	6.3410837679942196E-6	IMPLEMENTATION	5.744309478056955E-7	TEST	1.241537662309772E-7	DOCUMENTATION
// for sane JEE/JTA containers, the transaction itself functions as its identifier...	WITHOUT_CLASSIFICATION	0.9999256472930858	WITHOUT_CLASSIFICATION	7.065653006774359E-5	DESIGN	3.659318960640146E-6	IMPLEMENTATION	2.1678573807721336E-8	DEFECT	1.159225794042628E-8	DOCUMENTATION	3.5870540536741427E-9	TEST
//swallow, the transaction was finished	WITHOUT_CLASSIFICATION	0.9970684259279254	WITHOUT_CLASSIFICATION	0.002853090815615047	IMPLEMENTATION	5.3641293894990745E-5	DEFECT	2.258545752621512E-5	DESIGN	1.715003040613608E-6	DOCUMENTATION	5.41501997693942E-7	TEST
// all AliasToEntityMapResultTransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999960101403056	WITHOUT_CLASSIFICATION	3.2089902726793513E-6	IMPLEMENTATION	7.671004293192308E-7	DESIGN	7.962482198794785E-9	DEFECT	4.395172615247153E-9	DOCUMENTATION	1.4113377193156416E-9	TEST
// Create the join element under the from element.	WITHOUT_CLASSIFICATION	0.9999955936282693	WITHOUT_CLASSIFICATION	3.863911217883307E-6	DESIGN	3.87111202556042E-7	DEFECT	1.0133114530287025E-7	IMPLEMENTATION	3.374005990375345E-8	DOCUMENTATION	2.0278104890752696E-8	TEST
// all DistinctRootEntityResultTransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999990583177283	WITHOUT_CLASSIFICATION	9.145325887427749E-7	DESIGN	2.3035872459584865E-8	IMPLEMENTATION	1.7145877380676259E-9	DEFECT	1.6926026530866008E-9	DOCUMENTATION	7.066201157765663E-10	TEST
// map of EntityMode -> Tuplizer	WITHOUT_CLASSIFICATION	0.9999930015990364	WITHOUT_CLASSIFICATION	6.695266043974799E-6	DESIGN	1.9886615186202707E-7	IMPLEMENTATION	6.747694732943791E-8	DEFECT	2.5049294185987537E-8	DOCUMENTATION	1.1742526225818288E-8	TEST
// this is a virtual id property...	WITHOUT_CLASSIFICATION	0.9983003092340642	WITHOUT_CLASSIFICATION	0.0012153423619557296	DEFECT	4.7713283570547293E-4	DESIGN	5.8682471261424125E-6	IMPLEMENTATION	7.191338732080924E-7	DOCUMENTATION	6.281872752176975E-7	TEST
//this one needed only for guessEntityMode()	WITHOUT_CLASSIFICATION	0.9787052005123129	WITHOUT_CLASSIFICATION	0.020777202077329113	DESIGN	2.4405547415379863E-4	IMPLEMENTATION	1.8921796782863398E-4	TEST	4.336901908825013E-5	DOCUMENTATION	4.095494928726543E-5	DEFECT
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999539835117939	WITHOUT_CLASSIFICATION	4.4715895872798974E-5	IMPLEMENTATION	1.0059883039028675E-6	DESIGN	2.3391074458465108E-7	DEFECT	3.586083584550432E-8	TEST	2.4832449029859547E-8	DOCUMENTATION
// todo : move this to SF per HHH-3517; also see HHH-1907 and ComponentMetamodel	WITHOUT_CLASSIFICATION	0.7961112169508389	WITHOUT_CLASSIFICATION	0.2038884035834524	DESIGN	3.0348963137783584E-7	DEFECT	6.633775082285209E-8	DOCUMENTATION	9.276891548223448E-9	TEST	3.6143491260570544E-10	IMPLEMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999521547225473	WITHOUT_CLASSIFICATION	4.735579097068972E-5	DESIGN	4.3940424995735966E-7	DEFECT	2.1998223967044682E-8	IMPLEMENTATION	2.159802554222192E-8	TEST	6.485982478363642E-9	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9993680937054898	WITHOUT_CLASSIFICATION	3.4420055551560435E-4	DESIGN	2.6628575254029576E-4	DEFECT	1.770533679066106E-5	IMPLEMENTATION	2.7708523692222995E-6	DOCUMENTATION	9.437972944119347E-7	TEST
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.999453833183012	WITHOUT_CLASSIFICATION	5.401663701540146E-4	DESIGN	4.977071675207621E-6	IMPLEMENTATION	6.390873157832778E-7	TEST	3.353067384072801E-7	DEFECT	4.8981104625596234E-8	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9993680937054898	WITHOUT_CLASSIFICATION	3.4420055551560435E-4	DESIGN	2.6628575254029576E-4	DEFECT	1.770533679066106E-5	IMPLEMENTATION	2.7708523692222995E-6	DOCUMENTATION	9.437972944119347E-7	TEST
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999999541109518	WITHOUT_CLASSIFICATION	2.232414454831677E-8	DESIGN	1.510112656673537E-8	IMPLEMENTATION	7.361319474930672E-9	DEFECT	5.93421454927363E-10	DOCUMENTATION	5.090362470547045E-10	TEST
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999812314794233	WITHOUT_CLASSIFICATION	1.828771675262498E-5	DESIGN	3.845556786033437E-7	DEFECT	9.169006239804854E-8	TEST	2.382879228475991E-9	DOCUMENTATION	2.175203927156247E-9	IMPLEMENTATION
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// cached for efficiency...	WITHOUT_CLASSIFICATION	0.9724377833262041	WITHOUT_CLASSIFICATION	0.027486545122909236	DESIGN	5.547288233555909E-5	DEFECT	1.0332110903188524E-5	DOCUMENTATION	8.169370602397516E-6	IMPLEMENTATION	1.6971870454619795E-6	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
//it was not embedded, so the argument is just an id	WITHOUT_CLASSIFICATION	0.9996721531432927	WITHOUT_CLASSIFICATION	3.242328809797354E-4	DESIGN	1.8517176759716807E-6	DOCUMENTATION	1.2627740590767853E-6	TEST	4.794869817851979E-7	DEFECT	1.9997010754048195E-8	IMPLEMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999521547225473	WITHOUT_CLASSIFICATION	4.735579097068972E-5	DESIGN	4.3940424995735966E-7	DEFECT	2.1998223967044682E-8	IMPLEMENTATION	2.159802554222192E-8	TEST	6.485982478363642E-9	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.999453833183012	WITHOUT_CLASSIFICATION	5.401663701540146E-4	DESIGN	4.977071675207621E-6	IMPLEMENTATION	6.390873157832778E-7	TEST	3.353067384072801E-7	DEFECT	4.8981104625596234E-8	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999999541109518	WITHOUT_CLASSIFICATION	2.232414454831677E-8	DESIGN	1.510112656673537E-8	IMPLEMENTATION	7.361319474930672E-9	DEFECT	5.93421454927363E-10	DOCUMENTATION	5.090362470547045E-10	TEST
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9991989888156614	WITHOUT_CLASSIFICATION	7.07375429068384E-4	DESIGN	9.103675414332135E-5	IMPLEMENTATION	1.1077648276218819E-6	TEST	8.182413604190069E-7	DEFECT	6.729949388441745E-7	DOCUMENTATION
//return currentId;	WITHOUT_CLASSIFICATION	0.9999770362744443	WITHOUT_CLASSIFICATION	1.7740832091885615E-5	DESIGN	3.71473135817727E-6	DEFECT	1.1013927158714905E-6	IMPLEMENTATION	3.8832067354158025E-7	DOCUMENTATION	1.8448716121677485E-8	TEST
//reset the id	WITHOUT_CLASSIFICATION	0.9998890618561636	WITHOUT_CLASSIFICATION	1.0124277538120338E-4	IMPLEMENTATION	5.5212812614961255E-6	DESIGN	2.04737200246571E-6	DEFECT	1.7815191451315306E-6	TEST	3.451960461478049E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
//reset the version	WITHOUT_CLASSIFICATION	0.9999619013578047	WITHOUT_CLASSIFICATION	2.6114249155990213E-5	IMPLEMENTATION	5.9680662517536266E-6	DEFECT	5.440063711889948E-6	DESIGN	3.1334667801578404E-7	DOCUMENTATION	2.629163976933154E-7	TEST
// the default is to simply not lazy fetch properties for now...	WITHOUT_CLASSIFICATION	0.9884503490852802	WITHOUT_CLASSIFICATION	0.00680751709652521	DESIGN	0.00471297247129208	DEFECT	2.6419430910384952E-5	IMPLEMENTATION	1.591931664270374E-6	DOCUMENTATION	1.1499843280033486E-6	TEST
// Add the second join, the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.9999992024275912	WITHOUT_CLASSIFICATION	5.750851508503777E-7	IMPLEMENTATION	1.305223734098148E-7	DESIGN	6.980310661737696E-8	DOCUMENTATION	1.3654637199058825E-8	DEFECT	8.507140756714926E-9	TEST
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998000925350969	WITHOUT_CLASSIFICATION	1.972285636896091E-4	DESIGN	1.3027105154951593E-6	DEFECT	6.647812996063374E-7	TEST	5.501333080756532E-7	IMPLEMENTATION	1.612760903417493E-7	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999812314794233	WITHOUT_CLASSIFICATION	1.828771675262498E-5	DESIGN	3.845556786033437E-7	DEFECT	9.169006239804854E-8	TEST	2.382879228475991E-9	DOCUMENTATION	2.175203927156247E-9	IMPLEMENTATION
// determine the id getter and setter methods from the proxy interface (if any) // determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.9998461715485011	WITHOUT_CLASSIFICATION	1.5172911837194966E-4	DESIGN	2.0947939318540065E-6	DEFECT	2.277042593671952E-9	DOCUMENTATION	2.125895033939849E-9	TEST	1.3625747457078645E-10	IMPLEMENTATION
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
//not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.9995452576310495	WITHOUT_CLASSIFICATION	2.554102377762575E-4	DEFECT	1.9862083953408756E-4	DESIGN	4.6168354704046837E-7	DOCUMENTATION	2.293752113591144E-7	IMPLEMENTATION	2.0232881785846912E-8	TEST
// superclass entity-name	WITHOUT_CLASSIFICATION	0.9999890832170958	WITHOUT_CLASSIFICATION	1.0907175235188433E-5	DESIGN	4.482644907249128E-9	DEFECT	2.7703299692742122E-9	DOCUMENTATION	1.4858198988477404E-9	IMPLEMENTATION	8.688743064976118E-10	TEST
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998000925350969	WITHOUT_CLASSIFICATION	1.972285636896091E-4	DESIGN	1.3027105154951593E-6	DEFECT	6.647812996063374E-7	TEST	5.501333080756532E-7	IMPLEMENTATION	1.612760903417493E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999918862629346	WITHOUT_CLASSIFICATION	2.71921166333524E-6	DEFECT	2.570350317935534E-6	IMPLEMENTATION	2.058548473821062E-6	DESIGN	3.848799860130386E-7	DOCUMENTATION	3.807466243937829E-7	TEST
//init the aliases, after initing the constructornode	WITHOUT_CLASSIFICATION	0.999984047732686	WITHOUT_CLASSIFICATION	1.3762305032451664E-5	IMPLEMENTATION	1.2451438898448781E-6	DESIGN	8.372982942681212E-7	TEST	5.97273102414024E-8	DEFECT	4.779278721031816E-8	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998000925350969	WITHOUT_CLASSIFICATION	1.972285636896091E-4	DESIGN	1.3027105154951593E-6	DEFECT	6.647812996063374E-7	TEST	5.501333080756532E-7	IMPLEMENTATION	1.612760903417493E-7	DOCUMENTATION
// legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.99999697349041	WITHOUT_CLASSIFICATION	2.607813359828927E-6	DESIGN	3.736752679890161E-7	IMPLEMENTATION	2.3917350011232154E-8	TEST	1.8550826020772212E-8	DOCUMENTATION	2.5527862040391335E-9	DEFECT
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999998806424469	WITHOUT_CLASSIFICATION	6.304755062964477E-8	DESIGN	1.9126673634209373E-8	IMPLEMENTATION	1.7596208191307603E-8	DEFECT	1.150879748563887E-8	DOCUMENTATION	8.078323133528666E-9	TEST
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999918862629346	WITHOUT_CLASSIFICATION	2.71921166333524E-6	DEFECT	2.570350317935534E-6	IMPLEMENTATION	2.058548473821062E-6	DESIGN	3.848799860130386E-7	DOCUMENTATION	3.807466243937829E-7	TEST
//note: this affects the return value!	WITHOUT_CLASSIFICATION	0.9998339061458658	WITHOUT_CLASSIFICATION	1.528925960972294E-4	DEFECT	1.1652697060956212E-5	DESIGN	1.2209776777350893E-6	IMPLEMENTATION	2.5979377341249647E-7	DOCUMENTATION	6.778952480214454E-8	TEST
// Need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.9997756553049505	WITHOUT_CLASSIFICATION	2.069941098439727E-4	IMPLEMENTATION	1.4926964949789312E-5	DESIGN	2.018166827981319E-6	TEST	2.6967361577162625E-7	DEFECT	1.3577981203040962E-7	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.999994975343756	WITHOUT_CLASSIFICATION	4.794146675148462E-6	DESIGN	2.1198996412692406E-7	IMPLEMENTATION	9.634554893825223E-9	DOCUMENTATION	4.533302471090829E-9	DEFECT	4.351747272565872E-9	TEST
// Collection Types:	WITHOUT_CLASSIFICATION	0.9999870366947062	WITHOUT_CLASSIFICATION	7.118992633646966E-6	DESIGN	5.1774865267647975E-6	DEFECT	4.839522235481273E-7	IMPLEMENTATION	1.2753258564544155E-7	DOCUMENTATION	5.5341324288634944E-8	TEST
// convenience methods relating to operations across arrays of types...	WITHOUT_CLASSIFICATION	0.9999796631960386	WITHOUT_CLASSIFICATION	1.4631097310425766E-5	DESIGN	5.321341493383788E-6	DEFECT	2.4535324159974217E-7	IMPLEMENTATION	8.1281391982904E-8	DOCUMENTATION	5.773052393405048E-8	TEST
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.999973294733991	WITHOUT_CLASSIFICATION	2.6136912889694615E-5	DESIGN	5.00191325817323E-7	DEFECT	5.752414306779123E-8	IMPLEMENTATION	7.787312032827373E-9	TEST	2.8503383382942464E-9	DOCUMENTATION
//Blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.999999800416166	WITHOUT_CLASSIFICATION	1.3086538146195642E-7	DESIGN	3.905887482157961E-8	IMPLEMENTATION	1.664533801026099E-8	DEFECT	7.418203707987474E-9	TEST	5.596035915959459E-9	DOCUMENTATION
//value is the entity name	WITHOUT_CLASSIFICATION	0.9998427493580186	WITHOUT_CLASSIFICATION	1.5549768662979376E-4	DESIGN	1.1424872877562696E-6	DEFECT	2.2874068833186386E-7	DOCUMENTATION	2.0343015625056966E-7	IMPLEMENTATION	1.7829721929358337E-7	TEST
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999548614947756	WITHOUT_CLASSIFICATION	1.6147221401992978E-5	IMPLEMENTATION	1.3574388437419566E-5	DESIGN	1.2331304657480556E-5	DEFECT	1.9985021700112266E-6	DOCUMENTATION	1.087088557374768E-6	TEST
// generate id select fragment and then property select fragment for // each expression, just like generateSelectFragments().	WITHOUT_CLASSIFICATION	0.9999807295661188	WITHOUT_CLASSIFICATION	1.3891924466154005E-5	DESIGN	4.471746061020976E-6	DEFECT	6.207916464082031E-7	TEST	2.568988344677952E-7	DOCUMENTATION	2.907287304801023E-8	IMPLEMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9646148427718467	WITHOUT_CLASSIFICATION	0.02927272782514354	DESIGN	0.0026479273182667606	IMPLEMENTATION	0.0014308512008233561	DEFECT	0.0012960591844909948	DOCUMENTATION	7.375916994285473E-4	TEST
//xml is the entity name	WITHOUT_CLASSIFICATION	0.999936027707076	WITHOUT_CLASSIFICATION	6.315672454315264E-5	DESIGN	2.695525013523637E-7	DEFECT	2.316435377480453E-7	IMPLEMENTATION	1.8856661063546112E-7	TEST	1.258057311863389E-7	DOCUMENTATION
//special case ... this is the leaf of the containment graph, even though not immutable	WITHOUT_CLASSIFICATION	0.9866880165692635	WITHOUT_CLASSIFICATION	0.01013261137061948	DESIGN	0.0031640830638016144	DEFECT	7.188928394582072E-6	DOCUMENTATION	4.815340504654976E-6	TEST	3.284727416084535E-6	IMPLEMENTATION
//tolerates nulls	WITHOUT_CLASSIFICATION	0.9999694122347633	WITHOUT_CLASSIFICATION	2.3593478889088848E-5	DESIGN	4.514198595864158E-6	DEFECT	1.910944145272487E-6	TEST	5.12523154568935E-7	IMPLEMENTATION	5.662045197808669E-8	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.999930783627083	WITHOUT_CLASSIFICATION	3.3530905961551126E-5	DESIGN	2.9951503616740997E-5	DEFECT	2.6471261667318266E-6	IMPLEMENTATION	2.2447117205435584E-6	TEST	8.421254512768169E-7	DOCUMENTATION
// metaType is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.9999948992570049	WITHOUT_CLASSIFICATION	4.847157350790463E-6	DESIGN	2.5043391968793425E-7	DEFECT	1.8249453735884462E-9	TEST	1.127017881585366E-9	DOCUMENTATION	1.9976119660114582E-10	IMPLEMENTATION
// Get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.9998996799024418	WITHOUT_CLASSIFICATION	9.777918900241402E-5	DESIGN	1.6013212350605202E-6	IMPLEMENTATION	9.24447515297376E-7	DEFECT	1.0755496336089939E-8	TEST	4.384309075620152E-9	DOCUMENTATION
// Look through the FromElement's children to find any collections of values that should be fetched...	WITHOUT_CLASSIFICATION	0.9971524408908319	WITHOUT_CLASSIFICATION	0.0012114404426278038	DEFECT	0.0010991866480937272	IMPLEMENTATION	5.364329749835558E-4	DESIGN	3.6655673526966473E-7	TEST	1.3248672773518776E-7	DOCUMENTATION
//return AssociationType.FOREIGN_KEY_TO_PARENT; //this is better but causes a transient object exception...	WITHOUT_CLASSIFICATION	0.9977573112725722	WITHOUT_CLASSIFICATION	0.0022278481589285966	DESIGN	1.0835145585386491E-5	DEFECT	3.3024824380413858E-6	IMPLEMENTATION	4.731384478910193E-7	TEST	2.2980202789037922E-7	DOCUMENTATION
// Use the lower case function name. // Remember whether we're in a SELECT clause or not.	WITHOUT_CLASSIFICATION	0.999992304963039	WITHOUT_CLASSIFICATION	4.633181657412435E-6	DESIGN	2.0950308956029073E-6	DEFECT	9.512883654283712E-7	IMPLEMENTATION	1.4556811162071587E-8	DOCUMENTATION	9.792313182594344E-10	TEST
// IDENT might be the name of a class.	WITHOUT_CLASSIFICATION	0.9998971272039805	WITHOUT_CLASSIFICATION	1.0215456467755446E-4	DESIGN	6.268236411964763E-7	DEFECT	3.3815288148025646E-8	IMPLEMENTATION	3.023604972078881E-8	TEST	2.7356362784351695E-8	DOCUMENTATION
//TODO!!!	WITHOUT_CLASSIFICATION	0.8987331457487253	WITHOUT_CLASSIFICATION	0.09130763890399206	DESIGN	0.0035389375046631167	IMPLEMENTATION	0.0025845899995863265	DOCUMENTATION	0.0025279996371937617	DEFECT	0.0013076882058394596	TEST
//st.setTimestamp( index,  new Timestamp( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9999232464453277	WITHOUT_CLASSIFICATION	7.387379037653839E-5	DEFECT	1.6929061991226966E-6	DESIGN	5.538722438855573E-7	TEST	4.946417399726258E-7	IMPLEMENTATION	1.3834411276830814E-7	DOCUMENTATION
//st.setDate( index,  new Date( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9999219707845406	WITHOUT_CLASSIFICATION	6.828566826277156E-5	DEFECT	7.313933087530373E-6	DESIGN	1.630520129463899E-6	IMPLEMENTATION	4.268046476530258E-7	TEST	3.7228933201505275E-7	DOCUMENTATION
// both are Timestamps	WITHOUT_CLASSIFICATION	0.9999996105946479	WITHOUT_CLASSIFICATION	2.840202465588065E-7	DESIGN	6.230109748373625E-8	TEST	3.7153613488683505E-8	IMPLEMENTATION	3.5341241480184966E-9	DOCUMENTATION	2.3962704059518343E-9	DEFECT
// at least one is a plain old Date	WITHOUT_CLASSIFICATION	0.9999771789638289	WITHOUT_CLASSIFICATION	2.0469886973909765E-5	DESIGN	9.473358384199112E-7	IMPLEMENTATION	8.267584666571919E-7	TEST	4.847479840628623E-7	DEFECT	9.230690797248005E-8	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.999819871085312	WITHOUT_CLASSIFICATION	9.125036342331948E-5	DESIGN	7.822637977674507E-5	DEFECT	4.626765201205468E-6	IMPLEMENTATION	4.471037838155364E-6	DOCUMENTATION	1.5543684485975712E-6	TEST
// if the corresponding SQL value is NULL, the reader we got is NULL as well	WITHOUT_CLASSIFICATION	0.9998864565206053	WITHOUT_CLASSIFICATION	1.1333207817544411E-4	DEFECT	1.1184609866355667E-7	DESIGN	7.767461438210804E-8	TEST	1.7737127155104282E-8	IMPLEMENTATION	4.143379149601526E-9	DOCUMENTATION
// Fetch Reader content up to the end - and put characters in a StringBuffer	WITHOUT_CLASSIFICATION	0.9985626197969869	WITHOUT_CLASSIFICATION	0.001282703346402987	DESIGN	1.5181274909162247E-4	IMPLEMENTATION	2.2204231188539377E-6	DOCUMENTATION	6.179188157836048E-7	DEFECT	2.5765583718308437E-8	TEST
// Return StringBuffer content as a large String	WITHOUT_CLASSIFICATION	0.9999981473128482	WITHOUT_CLASSIFICATION	1.2420647130488854E-6	DESIGN	3.456204556620573E-7	DEFECT	2.525092956572826E-7	IMPLEMENTATION	1.0157349772627808E-8	DOCUMENTATION	2.335337554555679E-9	TEST
//or Types.LONGVARCHAR?	WITHOUT_CLASSIFICATION	0.9998010740735602	WITHOUT_CLASSIFICATION	1.889521036207423E-4	DESIGN	6.809627182945991E-6	IMPLEMENTATION	1.293421307595361E-6	DOCUMENTATION	1.0585598441256924E-6	TEST	8.122144845175687E-7	DEFECT
//Not called at runtime so doesn't matter if its slow :)	WITHOUT_CLASSIFICATION	0.9995204739982929	WITHOUT_CLASSIFICATION	3.2376775329651645E-4	DEFECT	8.980672567899614E-5	IMPLEMENTATION	5.418997595776139E-5	DESIGN	1.1400460608244279E-5	TEST	3.6108616546016036E-7	DOCUMENTATION
//TODO	WITHOUT_CLASSIFICATION	0.998518619998836	WITHOUT_CLASSIFICATION	0.0010479699277979088	DESIGN	2.1589748058104382E-4	IMPLEMENTATION	9.821845024363677E-5	DOCUMENTATION	6.271310071847946E-5	TEST	5.6581041822793376E-5	DEFECT
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.999995807799975	WITHOUT_CLASSIFICATION	2.5232175485062135E-6	TEST	8.092211959060847E-7	IMPLEMENTATION	5.401682343328248E-7	DESIGN	2.7306971042645187E-7	DEFECT	4.652333597852604E-8	DOCUMENTATION
//different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.999892331723472	WITHOUT_CLASSIFICATION	1.0206744495991234E-4	DESIGN	4.761096984738987E-6	DEFECT	3.0583494983996137E-7	TEST	2.812336023185666E-7	IMPLEMENTATION	2.5266603115937867E-7	DOCUMENTATION
//cache this	WITHOUT_CLASSIFICATION	0.9990817240205956	WITHOUT_CLASSIFICATION	8.725838293120604E-4	DESIGN	2.7045389298767698E-5	IMPLEMENTATION	1.17979201128889E-5	DOCUMENTATION	3.7525756340638407E-6	DEFECT	3.0962650466719444E-6	TEST
//only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.999954048866438	WITHOUT_CLASSIFICATION	2.3162413963299884E-5	DEFECT	1.535675018388488E-5	DESIGN	5.874430295165725E-6	IMPLEMENTATION	8.717327216572959E-7	DOCUMENTATION	6.85806397960918E-7	TEST
// Forcefully remove leading ands from where fragments; the grammar will // handle adding them	WITHOUT_CLASSIFICATION	0.9998135803008026	WITHOUT_CLASSIFICATION	1.3360493522694824E-4	DESIGN	5.208688800014446E-5	DEFECT	3.660315443636973E-7	IMPLEMENTATION	2.9681152283313566E-7	TEST	6.503290318843104E-8	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9349384849953718	WITHOUT_CLASSIFICATION	0.047540191065571315	DESIGN	0.010896595023701766	IMPLEMENTATION	0.003064450551566892	DOCUMENTATION	0.0019699770447877438	DEFECT	0.0015903013190004462	TEST
// Create a new FILTERS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999972222751506	WITHOUT_CLASSIFICATION	1.9931803621126918E-6	IMPLEMENTATION	7.173006517694148E-7	DESIGN	6.480869156130418E-8	DEFECT	1.2749197807667226E-9	TEST	1.1602241134608948E-9	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999918862629346	WITHOUT_CLASSIFICATION	2.71921166333524E-6	DEFECT	2.570350317935534E-6	IMPLEMENTATION	2.058548473821062E-6	DESIGN	3.848799860130386E-7	DOCUMENTATION	3.807466243937829E-7	TEST
//public Object instantiate(Object parent, SessionImplementor session) throws HibernateException;	WITHOUT_CLASSIFICATION	0.6592466216624271	DESIGN	0.3407114531932178	WITHOUT_CLASSIFICATION	3.204846045042844E-5	DEFECT	4.955100356835313E-6	IMPLEMENTATION	3.581723506311186E-6	TEST	1.3398600415135096E-6	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9999656062826832	WITHOUT_CLASSIFICATION	2.020678863663274E-5	DESIGN	6.465374106296923E-6	DEFECT	4.859672038337253E-6	IMPLEMENTATION	2.125397406906192E-6	DOCUMENTATION	7.364851285308408E-7	TEST
//nothing to do	WITHOUT_CLASSIFICATION	0.9999656062826832	WITHOUT_CLASSIFICATION	2.020678863663274E-5	DESIGN	6.465374106296923E-6	DEFECT	4.859672038337253E-6	IMPLEMENTATION	2.125397406906192E-6	DOCUMENTATION	7.364851285308408E-7	TEST
// VersionType impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //      Note : simply returns null for seed() and next() as the only known //      application of binary types for versioning is for use with the //      TIMESTAMP datatype supported by Sybase and SQL Server, which //      are completely db-generated values...	WITHOUT_CLASSIFICATION	0.9999542742754702	WITHOUT_CLASSIFICATION	3.9793398506308454E-5	DEFECT	5.260985640966952E-6	IMPLEMENTATION	6.666193571470942E-7	DESIGN	2.3797449412756916E-9	DOCUMENTATION	2.3412803052283217E-9	TEST
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.999973294733991	WITHOUT_CLASSIFICATION	2.6136912889694615E-5	DESIGN	5.00191325817323E-7	DEFECT	5.752414306779123E-8	IMPLEMENTATION	7.787312032827373E-9	TEST	2.8503383382942464E-9	DOCUMENTATION
//not really necessary, I guess...	WITHOUT_CLASSIFICATION	0.8395606190432924	WITHOUT_CLASSIFICATION	0.1599958936202516	DESIGN	3.1107934097819606E-4	DEFECT	1.1595210375116387E-4	IMPLEMENTATION	1.3918213683350507E-5	DOCUMENTATION	2.5376780432484364E-6	TEST
//Clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.9999999955260227	WITHOUT_CLASSIFICATION	1.833205318143074E-9	DESIGN	1.199368881541581E-9	DEFECT	5.575036743764883E-10	TEST	5.537977775365766E-10	IMPLEMENTATION	3.301016491988258E-10	DOCUMENTATION
// we do not have to worry about queued additions to uninitialized // collections, since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.9999993964017038	WITHOUT_CLASSIFICATION	5.557030906627404E-7	DEFECT	3.963223753532639E-8	IMPLEMENTATION	7.161131392562685E-9	DESIGN	5.820278901709372E-10	TEST	5.198087265626407E-10	DOCUMENTATION
// collections cannot be compared	WITHOUT_CLASSIFICATION	0.9999962689492352	WITHOUT_CLASSIFICATION	2.3950253500140237E-6	DESIGN	1.14135153901339E-6	DEFECT	1.9285620015868837E-7	IMPLEMENTATION	1.5592871053267348E-9	TEST	2.583884889238595E-10	DOCUMENTATION
//remember the uk value	WITHOUT_CLASSIFICATION	0.9998998929757106	WITHOUT_CLASSIFICATION	7.712291087974832E-5	DESIGN	1.1346642467271784E-5	DEFECT	9.08232411187284E-6	IMPLEMENTATION	1.6118584466286088E-6	TEST	9.432883838025774E-7	DOCUMENTATION
//NOOP	WITHOUT_CLASSIFICATION	0.9998229218627334	WITHOUT_CLASSIFICATION	1.526224771148164E-4	DESIGN	8.42937631005191E-6	IMPLEMENTATION	7.373012945359344E-6	DEFECT	4.809693699498949E-6	DOCUMENTATION	3.843577196872574E-6	TEST
//processCollectionProperty(token, q.getCollectionPersister(collectionRole), collectionName);	WITHOUT_CLASSIFICATION	0.9999978319091314	WITHOUT_CLASSIFICATION	1.5683373491381781E-6	DEFECT	5.201662936007536E-7	DESIGN	7.250261010071615E-8	TEST	6.110219980088758E-9	DOCUMENTATION	9.74395828222776E-10	IMPLEMENTATION
//we must use the "remembered" uk value, since it is  //not available from the EntityEntry during assembly	WITHOUT_CLASSIFICATION	0.9999639998182591	WITHOUT_CLASSIFICATION	3.558871774405889E-5	DESIGN	3.8747939315900126E-7	TEST	2.1086880361841252E-8	DEFECT	1.693216593951636E-9	IMPLEMENTATION	1.204506601913561E-9	DOCUMENTATION
// collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.9985355713679117	WITHOUT_CLASSIFICATION	0.0014588476798159656	DESIGN	3.0979586405227914E-6	DEFECT	2.4073559627174925E-6	IMPLEMENTATION	5.7774603701739204E-8	DOCUMENTATION	1.7863065544213395E-8	TEST
// return false;	WITHOUT_CLASSIFICATION	0.9999930423712097	WITHOUT_CLASSIFICATION	6.546434434257179E-6	DESIGN	3.033401732434119E-7	DEFECT	9.933308436910694E-8	IMPLEMENTATION	5.769309807969252E-9	DOCUMENTATION	2.751788537368913E-9	TEST
// This just handles a particular case of component // projection, perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.673509188693756	WITHOUT_CLASSIFICATION	0.32631645221654726	DESIGN	1.5818497109146312E-4	DEFECT	1.5843852719283622E-5	IMPLEMENTATION	2.2628286038324578E-7	TEST	1.0398302563722148E-7	DOCUMENTATION
//NOTE: we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.9999997686622694	WITHOUT_CLASSIFICATION	1.8296757283042328E-7	DESIGN	3.637474509146084E-8	TEST	9.415432183588838E-9	DEFECT	2.4620745933911923E-9	DOCUMENTATION	1.1790603944042477E-10	IMPLEMENTATION
// the key is the owning entity itself, so get the ID from the key	WITHOUT_CLASSIFICATION	0.9999944657452123	WITHOUT_CLASSIFICATION	5.405974288466127E-6	DESIGN	5.708842993410453E-8	IMPLEMENTATION	5.166522186067158E-8	TEST	1.2994492466289862E-8	DEFECT	6.532354931962283E-9	DOCUMENTATION
// if the original is a PersistentCollection, and that original // was not flagged as dirty, then reset the target's dirty flag // here after the copy operation. // </p> // One thing to be careful of here is a "bare" original collection // in which case we should never ever ever reset the dirty flag // on the target because we simply do not know...	WITHOUT_CLASSIFICATION	0.9999999584099337	WITHOUT_CLASSIFICATION	3.496066312559506E-8	DEFECT	5.86838647782336E-9	IMPLEMENTATION	7.249284587989222E-10	DESIGN	2.7224836542248903E-11	TEST	8.863340728468893E-12	DOCUMENTATION
//ignore subselect keywords	WITHOUT_CLASSIFICATION	0.9999999611437264	WITHOUT_CLASSIFICATION	2.0425338359852777E-8	DEFECT	1.1659650729402879E-8	IMPLEMENTATION	4.613794644871561E-9	DESIGN	1.5761833212350755E-9	DOCUMENTATION	5.81306685652874E-10	TEST
// copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.9999999809092307	WITHOUT_CLASSIFICATION	1.8081141961201782E-8	DESIGN	7.458959489321977E-10	DEFECT	1.97913038449714E-10	IMPLEMENTATION	4.2379548715181266E-11	DOCUMENTATION	2.3438968173798687E-11	TEST
// for a null target, or a target which is the same as the original, we // need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.9999922044839586	WITHOUT_CLASSIFICATION	7.769435883266848E-6	DESIGN	2.42581883305698E-8	DEFECT	1.6305661097948236E-9	DOCUMENTATION	1.1596172596812521E-10	TEST	7.544187569191332E-11	IMPLEMENTATION
// by default just use an unanticipated capacity since we don't // know how to extract the capacity to use from original here...	WITHOUT_CLASSIFICATION	0.9866058324068568	WITHOUT_CLASSIFICATION	0.01315115798172762	DESIGN	2.3960078345794327E-4	IMPLEMENTATION	2.554408403161078E-6	DEFECT	7.398796857386793E-7	DOCUMENTATION	1.1453986871864222E-7	TEST
// get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.9999756048758627	WITHOUT_CLASSIFICATION	2.3129807536916044E-5	IMPLEMENTATION	8.330648049258017E-7	DEFECT	4.212608015066393E-7	DESIGN	6.223131077713216E-9	TEST	4.767862703316368E-9	DOCUMENTATION
// check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.9997674221803434	WITHOUT_CLASSIFICATION	1.1910118847097007E-4	IMPLEMENTATION	9.792716008619299E-5	DESIGN	1.4928078114151898E-5	DEFECT	3.8407363847895916E-7	DOCUMENTATION	2.3731934688093035E-7	TEST
// check if it is already completely loaded, but unowned	WITHOUT_CLASSIFICATION	0.9998752713527124	WITHOUT_CLASSIFICATION	1.243713199688941E-4	IMPLEMENTATION	1.9785474011892361E-7	DEFECT	1.280160384328164E-7	DESIGN	2.9736330317875628E-8	TEST	1.7202097146139998E-9	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999999608152064	WITHOUT_CLASSIFICATION	3.705499514455564E-8	DEFECT	9.773498736461976E-10	IMPLEMENTATION	6.016018483097835E-10	DESIGN	4.635165848938258E-10	DOCUMENTATION	8.733017846554938E-11	TEST
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9349384849953718	WITHOUT_CLASSIFICATION	0.047540191065571315	DESIGN	0.010896595023701766	IMPLEMENTATION	0.003064450551566892	DOCUMENTATION	0.0019699770447877438	DEFECT	0.0015903013190004462	TEST
// create a new collection wrapper, to be initialized later	WITHOUT_CLASSIFICATION	0.9998037904562249	WITHOUT_CLASSIFICATION	1.9223821960317734E-4	DESIGN	3.3844882360908587E-6	DEFECT	5.337880846087058E-7	IMPLEMENTATION	3.503437895327246E-8	TEST	1.8013472217158746E-8	DOCUMENTATION
// Some JDBC drivers erroneously return an empty array here for a null DB value :/	WITHOUT_CLASSIFICATION	0.9999089465782173	WITHOUT_CLASSIFICATION	8.708618842248288E-5	DESIGN	3.908707306425339E-6	DEFECT	5.5415179020032234E-8	IMPLEMENTATION	2.7135140548182594E-9	DOCUMENTATION	3.973606925049136E-10	TEST
// our column span is the number of columns in the PK	WITHOUT_CLASSIFICATION	0.9999998742912033	WITHOUT_CLASSIFICATION	8.13161262724233E-8	DESIGN	4.360300079810336E-8	DEFECT	4.970593832442252E-10	DOCUMENTATION	1.7981293987229499E-10	IMPLEMENTATION	1.1279734535364417E-10	TEST
//cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.9999954848544054	WITHOUT_CLASSIFICATION	3.540638628201658E-6	DEFECT	3.164825369973811E-7	DESIGN	2.9179633121028126E-7	IMPLEMENTATION	1.8997504286430482E-7	DOCUMENTATION	1.76253055488478E-7	TEST
// we already know current is not null...	WITHOUT_CLASSIFICATION	0.9786124314856771	WITHOUT_CLASSIFICATION	0.018494333332644924	DEFECT	0.002113445023790742	IMPLEMENTATION	7.452710560302027E-4	DESIGN	3.2130852782254086E-5	DOCUMENTATION	2.388249074877753E-6	TEST
// the ids are fully resolved, so compare them with isDirty(), not isModified()	WITHOUT_CLASSIFICATION	0.9999839019167623	WITHOUT_CLASSIFICATION	1.0415614654595699E-5	IMPLEMENTATION	3.655429988455321E-6	DESIGN	1.997601557879203E-6	DEFECT	2.7665927811754595E-8	TEST	1.771108924231186E-9	DOCUMENTATION
//the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.999999301303644	WITHOUT_CLASSIFICATION	3.3942539433626947E-7	DEFECT	1.7036266299752703E-7	TEST	6.909052750128566E-8	IMPLEMENTATION	6.775582186996958E-8	DESIGN	5.2061949323270654E-8	DOCUMENTATION
// ----------------------------------------------------------- Constructors	WITHOUT_CLASSIFICATION	0.9999986168206488	WITHOUT_CLASSIFICATION	1.0619859482992957E-6	DESIGN	2.2595349218838222E-7	IMPLEMENTATION	6.116592073223896E-8	DEFECT	1.966803550606453E-8	TEST	1.4405954456488138E-8	DOCUMENTATION
// ----------------------------------------------------- Instance Variables	WITHOUT_CLASSIFICATION	0.9999994972588694	WITHOUT_CLASSIFICATION	2.254131958408379E-7	DESIGN	2.1003388563625655E-7	IMPLEMENTATION	5.64135995784876E-8	DEFECT	6.758357111863804E-9	DOCUMENTATION	4.122092402250581E-9	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// --------------------------------------------------------- Public Methods	WITHOUT_CLASSIFICATION	0.9999256958285184	WITHOUT_CLASSIFICATION	7.40206150259325E-5	DESIGN	1.141348768268639E-7	IMPLEMENTATION	7.560825962848922E-8	DOCUMENTATION	6.80238019686936E-8	DEFECT	2.5789517085567023E-8	TEST
// Compare the two maps for equality	WITHOUT_CLASSIFICATION	0.9999955267329339	WITHOUT_CLASSIFICATION	4.08191431534154E-6	DESIGN	2.772659413606133E-7	IMPLEMENTATION	9.043406586486937E-8	DEFECT	1.817142097582521E-8	TEST	5.481322447129349E-9	DOCUMENTATION
// Simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.9999982306832091	WITHOUT_CLASSIFICATION	1.3177544026472237E-6	TEST	4.164621093462607E-7	DEFECT	3.3038897127115385E-8	DOCUMENTATION	1.2734919765793098E-9	IMPLEMENTATION	7.878898187498917E-10	DESIGN
//Sybase fail if we don't do that, sigh...	WITHOUT_CLASSIFICATION	0.9821144460969273	WITHOUT_CLASSIFICATION	0.01555683873062934	DESIGN	0.002247931961590151	DEFECT	4.390455032005222E-5	TEST	3.307526142047881E-5	DOCUMENTATION	3.8033991127870258E-6	IMPLEMENTATION
// Handles things like: // a and b or c // a and ( b or c ) // not a and not b // not ( a and b ) // x between y and z            (overloaded "and") // x in ( a, b, c )             (overloaded brackets) // not not a // a is not null                (overloaded "not") // etc...... // and expressions like // foo = bar                    (maps to: foo.id = bar.id) // foo.Bar = 'foo'              (maps to: foo.bar = 'foo') // foo.Bar.Baz = 1.0            (maps to: foo.bar = bar.id and bar.baz = 1.0) // 1.0 = foo.Bar.Baz            (maps to: bar.baz = 1.0 and foo.Bar = bar.id) // foo.Bar.Baz = a.B.C          (maps to: bar.Baz = b.C and foo.Bar = bar.id and a.B = b.id) // foo.Bar.Baz + a.B.C          (maps to: bar.Baz + b.C and foo.Bar = bar.id and a.B = b.id) // ( foo.Bar.Baz + 1.0 ) < 2.0  (maps to: ( bar.Baz + 1.0 ) < 2.0 and foo.Bar = bar.id)	WITHOUT_CLASSIFICATION	0.4004161575879194	DEFECT	0.3514407048236	DESIGN	0.24812776688815888	WITHOUT_CLASSIFICATION	1.0326049796786165E-5	TEST	3.3214028192914753E-6	IMPLEMENTATION	1.7232477056595473E-6	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999998202815883	WITHOUT_CLASSIFICATION	1.0092819396065605E-7	IMPLEMENTATION	7.620015113485533E-8	DESIGN	1.5038331217374069E-9	DOCUMENTATION	8.822951170148911E-10	DEFECT	2.03938395602314E-10	TEST
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999998202815883	WITHOUT_CLASSIFICATION	1.0092819396065605E-7	IMPLEMENTATION	7.620015113485533E-8	DESIGN	1.5038331217374069E-9	DOCUMENTATION	8.822951170148911E-10	DEFECT	2.03938395602314E-10	TEST
// try to "pretty print" it	WITHOUT_CLASSIFICATION	0.9999891106372233	WITHOUT_CLASSIFICATION	7.648376472667431E-6	DESIGN	2.802651733628878E-6	DEFECT	3.1007942830634055E-7	IMPLEMENTATION	1.0140144573346994E-7	DOCUMENTATION	2.6853696291493914E-8	TEST
// otherwise, just dump it	WITHOUT_CLASSIFICATION	0.9996885683598122	WITHOUT_CLASSIFICATION	2.7184237969601476E-4	DESIGN	3.842260135371001E-5	IMPLEMENTATION	1.0353949590854994E-6	TEST	9.886336335603484E-8	DOCUMENTATION	3.240081546831139E-8	DEFECT
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9999729296383825	WITHOUT_CLASSIFICATION	1.5467007434830203E-5	DESIGN	1.1022549489942116E-5	DEFECT	5.24815066019542E-7	DOCUMENTATION	5.427055398109477E-8	TEST	1.719072636371652E-9	IMPLEMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9999729296383825	WITHOUT_CLASSIFICATION	1.5467007434830203E-5	DESIGN	1.1022549489942116E-5	DEFECT	5.24815066019542E-7	DOCUMENTATION	5.427055398109477E-8	TEST	1.719072636371652E-9	IMPLEMENTATION
// use default behavior	WITHOUT_CLASSIFICATION	0.9997371242645878	WITHOUT_CLASSIFICATION	2.6281234940840587E-4	DESIGN	2.2847859888905338E-8	IMPLEMENTATION	2.1911547108227503E-8	DEFECT	1.6367685035364092E-8	DOCUMENTATION	2.258911701266098E-9	TEST
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9998445836865253	WITHOUT_CLASSIFICATION	1.4474919419641603E-4	DESIGN	5.261475388794914E-6	IMPLEMENTATION	5.138323295700511E-6	DEFECT	1.968694615342508E-7	DOCUMENTATION	7.045113223408149E-8	TEST
// the MRU cache used to keep hard references to the most recently used query plans; // note : LRU here is a bit of a misnomer, it indicates that LRU entries are removed, the // actual kept entries are the MRU entries	WITHOUT_CLASSIFICATION	0.6580069530220166	IMPLEMENTATION	0.2853411320090785	WITHOUT_CLASSIFICATION	0.05664923170706376	DESIGN	2.316398759981503E-6	DEFECT	2.3307679140135097E-7	TEST	1.3378628979258183E-7	DOCUMENTATION
// we want to be able to just use the defaults, // if JNDI environment properties are not supplied // so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.9999847936159718	WITHOUT_CLASSIFICATION	1.5201329256192325E-5	DESIGN	3.039655399926338E-9	DOCUMENTATION	1.6391488461080558E-9	TEST	3.720508182971555E-10	IMPLEMENTATION	3.916859225673172E-12	DEFECT
// Clone //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999997417705858	WITHOUT_CLASSIFICATION	1.9475526435206067E-7	DEFECT	3.9432768923586116E-8	DESIGN	9.19133197189294E-9	TEST	8.811366754316686E-9	IMPLEMENTATION	6.038682125965297E-9	DOCUMENTATION
// Serialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999991360798262	WITHOUT_CLASSIFICATION	4.21388611879632E-7	IMPLEMENTATION	2.915615700849852E-7	DESIGN	1.1304547804966317E-7	DEFECT	2.0556304500255127E-8	TEST	1.7368209218210634E-8	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999991464861965	WITHOUT_CLASSIFICATION	6.879788215566767E-7	DESIGN	1.595966512905979E-7	DEFECT	3.581623412342518E-9	DOCUMENTATION	1.3765145092542713E-9	IMPLEMENTATION	9.801926709724914E-10	TEST
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999991464861965	WITHOUT_CLASSIFICATION	6.879788215566767E-7	DESIGN	1.595966512905979E-7	DEFECT	3.581623412342518E-9	DOCUMENTATION	1.3765145092542713E-9	IMPLEMENTATION	9.801926709724914E-10	TEST
// Deserialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999999219106005	WITHOUT_CLASSIFICATION	6.84779180787318E-7	IMPLEMENTATION	3.6096473557388E-8	TEST	3.182388707872107E-8	DESIGN	1.9742706027310724E-8	DEFECT	8.451747653801658E-9	DOCUMENTATION
/* static methods only - hide constructor */	WITHOUT_CLASSIFICATION	0.9984030832759194	WITHOUT_CLASSIFICATION	0.0015657218155452457	DESIGN	2.9173187615847344E-5	IMPLEMENTATION	1.582678436119991E-6	DEFECT	2.6288210078923457E-7	DOCUMENTATION	1.761603826282039E-7	TEST
/*&& !('_'==character)*/	WITHOUT_CLASSIFICATION	0.9999983421939086	WITHOUT_CLASSIFICATION	1.2686299375231418E-6	DESIGN	1.5568005130532973E-7	IMPLEMENTATION	8.326708628127595E-8	TEST	8.012206081896475E-8	DEFECT	7.010695542712345E-8	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.9999936159608456	WITHOUT_CLASSIFICATION	3.537909111614187E-6	DESIGN	2.6671536264568864E-6	DEFECT	1.5858414309116428E-7	IMPLEMENTATION	1.757353137054333E-8	DOCUMENTATION	2.818741877360476E-9	TEST
// returnign null!	WITHOUT_CLASSIFICATION	0.9999936159608456	WITHOUT_CLASSIFICATION	3.537909111614187E-6	DESIGN	2.6671536264568864E-6	DEFECT	1.5858414309116428E-7	IMPLEMENTATION	1.757353137054333E-8	DOCUMENTATION	2.818741877360476E-9	TEST
// includes last '.'	WITHOUT_CLASSIFICATION	0.9999972081261276	WITHOUT_CLASSIFICATION	1.6326937591563934E-6	DESIGN	9.76856322423246E-7	DEFECT	1.1193523579895345E-7	TEST	5.831294111231655E-8	DOCUMENTATION	1.2075613775527605E-8	IMPLEMENTATION
// +1 to include the following '.'	WITHOUT_CLASSIFICATION	0.9999654286487478	WITHOUT_CLASSIFICATION	2.2853449290076012E-5	DEFECT	7.265432505893505E-6	IMPLEMENTATION	4.087453493286459E-6	DESIGN	3.178787971001539E-7	DOCUMENTATION	4.713716580272348E-8	TEST
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9992140176772614	WITHOUT_CLASSIFICATION	6.742074799918767E-4	DESIGN	1.0810637792349118E-4	DEFECT	2.677565745249108E-6	IMPLEMENTATION	9.502152269932508E-7	TEST	4.068385087957736E-8	DOCUMENTATION
// first time we find match!	WITHOUT_CLASSIFICATION	0.9999998625280742	WITHOUT_CLASSIFICATION	1.046080950436019E-7	DESIGN	1.2256007058907267E-8	IMPLEMENTATION	9.815919792533341E-9	TEST	7.337438294391307E-9	DOCUMENTATION	3.454465813550619E-9	DEFECT
// entityNames may now include slashes for the representations //classname may be an inner class	WITHOUT_CLASSIFICATION	0.9992150301498535	WITHOUT_CLASSIFICATION	7.829437965510403E-4	DESIGN	1.8464499141947803E-6	DEFECT	1.1160336002639207E-7	IMPLEMENTATION	5.78798741323547E-8	DOCUMENTATION	1.0120447240430324E-8	TEST
// wrapped iterators	WITHOUT_CLASSIFICATION	0.999989396158605	WITHOUT_CLASSIFICATION	1.0467614382777866E-5	DESIGN	4.625123016413629E-8	IMPLEMENTATION	4.3260580732277914E-8	DEFECT	4.224629201371777E-8	TEST	4.468909297884698E-9	DOCUMENTATION
// index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.9999303141114344	WITHOUT_CLASSIFICATION	6.570858978994795E-5	DESIGN	3.7812694768410884E-6	DEFECT	7.895922535353878E-8	TEST	6.38237052565488E-8	DOCUMENTATION	5.324636808002087E-8	IMPLEMENTATION
// the current iterator	WITHOUT_CLASSIFICATION	0.9999713388153733	WITHOUT_CLASSIFICATION	2.759584903153479E-5	DESIGN	5.901601029225585E-7	IMPLEMENTATION	2.2563106189229675E-7	DEFECT	1.3078541449323052E-7	TEST	1.1875901605136718E-7	DOCUMENTATION
// the last used iterator	WITHOUT_CLASSIFICATION	0.9999529445359626	WITHOUT_CLASSIFICATION	4.6962628467189506E-5	DESIGN	7.055519426444374E-8	TEST	1.245755450927124E-8	IMPLEMENTATION	6.982756305535725E-9	DEFECT	2.840064900496495E-9	DOCUMENTATION
//it was a boolean expression	WITHOUT_CLASSIFICATION	0.9997374043846305	WITHOUT_CLASSIFICATION	2.1673342695172648E-4	DESIGN	4.5650212965549816E-5	DEFECT	1.1764128461318547E-7	TEST	6.202100834563886E-8	DOCUMENTATION	3.2313159226069594E-8	IMPLEMENTATION
/*public static Object[] clone(Class elementClass, Object[] array) {	WITHOUT_CLASSIFICATION	0.9947818873859176	WITHOUT_CLASSIFICATION	0.005213799540151019	DESIGN	2.700229331546043E-6	DEFECT	9.267935918029168E-7	IMPLEMENTATION	6.303467069013138E-7	DOCUMENTATION	5.570430128836227E-8	TEST
// call this before any Iterator method to make sure that the current Iterator // is not exhausted	WITHOUT_CLASSIFICATION	0.9986019808859202	WITHOUT_CLASSIFICATION	0.0012713164644944255	DESIGN	1.2142765480140938E-4	DEFECT	3.3926006232291687E-6	IMPLEMENTATION	1.7881960897503475E-6	TEST	9.419807096914591E-8	DOCUMENTATION
//doable if needed	WITHOUT_CLASSIFICATION	0.9925118692859017	WITHOUT_CLASSIFICATION	0.005205952626293578	IMPLEMENTATION	0.0021456398913295566	DESIGN	1.1964471463548518E-4	TEST	1.114413822423698E-5	DOCUMENTATION	5.749343615391829E-6	DEFECT
// set last used iterator here, in case the user calls remove // before calling hasNext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.9915915517009598	WITHOUT_CLASSIFICATION	0.007276977063840693	DESIGN	0.0011257645078167336	DEFECT	4.849669457536423E-6	TEST	8.306615724760803E-7	IMPLEMENTATION	2.6396352780992773E-8	DOCUMENTATION
// peek ahead	WITHOUT_CLASSIFICATION	0.9999635607056755	WITHOUT_CLASSIFICATION	2.642464161248192E-5	IMPLEMENTATION	8.813288572060706E-6	DESIGN	5.684896602105452E-7	DOCUMENTATION	5.264609916323429E-7	DEFECT	1.0641348825624381E-7	TEST
// if we reach the end of the string w/o finding the // matching end, that is an exception	WITHOUT_CLASSIFICATION	0.9999987484560027	WITHOUT_CLASSIFICATION	1.21007830827332E-6	DEFECT	3.633545297929706E-8	DESIGN	4.041390339403519E-9	TEST	7.284892714939244E-10	IMPLEMENTATION	3.6035648189590346E-10	DOCUMENTATION
// we have a placeholder, spin forward till we find the end	WITHOUT_CLASSIFICATION	0.9999613658897898	WITHOUT_CLASSIFICATION	3.552842980547312E-5	IMPLEMENTATION	2.693607525835714E-6	DESIGN	3.3416923210942406E-7	DEFECT	7.494867042335289E-8	DOCUMENTATION	2.9549763464779623E-9	TEST
// make sure spinning forward did not put us past the end of the buffer...	WITHOUT_CLASSIFICATION	0.9999985589431706	WITHOUT_CLASSIFICATION	6.106727469970947E-7	DESIGN	4.158146181527849E-7	DEFECT	3.52208609981548E-7	IMPLEMENTATION	5.925787460175506E-8	TEST	3.1029796738570534E-9	DOCUMENTATION
// First, try to locate this resource through the current // context classloader.	WITHOUT_CLASSIFICATION	0.9999768450872093	WITHOUT_CLASSIFICATION	2.1052231057127036E-5	DESIGN	9.474431156190972E-7	IMPLEMENTATION	7.054033391138341E-7	DEFECT	3.210947941780399E-7	DOCUMENTATION	1.287404846383924E-7	TEST
// Next, try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.9999564845056262	WITHOUT_CLASSIFICATION	4.32702715442776E-5	DESIGN	9.475653724798017E-8	DEFECT	7.016297960037565E-8	TEST	5.0201703880960484E-8	IMPLEMENTATION	3.010160876047104E-8	DOCUMENTATION
// Next, try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.9998658263417486	WITHOUT_CLASSIFICATION	1.314181627729887E-4	DESIGN	2.0522487342541437E-6	DEFECT	3.826304082729191E-7	IMPLEMENTATION	2.1694261869041058E-7	TEST	1.0367371727133413E-7	DOCUMENTATION
// Anywhere else we should look?	WITHOUT_CLASSIFICATION	0.9995968711718536	WITHOUT_CLASSIFICATION	3.853005016408922E-4	DESIGN	1.6575005177636985E-5	DEFECT	9.139498521859706E-7	IMPLEMENTATION	1.7339905221242822E-7	DOCUMENTATION	1.6597242336591074E-7	TEST
// would need an IdentitySet for this!	WITHOUT_CLASSIFICATION	0.9953472694600539	WITHOUT_CLASSIFICATION	0.004630570743931994	DESIGN	1.5539993084213186E-5	TEST	3.7751491421918752E-6	DOCUMENTATION	2.3814884237821282E-6	IMPLEMENTATION	4.6316536371538973E-7	DEFECT
//Arrays.asList doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.9999967516746214	WITHOUT_CLASSIFICATION	8.453110416933599E-7	IMPLEMENTATION	8.398485011839153E-7	TEST	7.098024068468399E-7	DEFECT	5.529335644620439E-7	DESIGN	3.004298644140111E-7	DOCUMENTATION
//faster?	WITHOUT_CLASSIFICATION	0.9720849927639658	WITHOUT_CLASSIFICATION	0.027860446018148525	DESIGN	2.573153364826654E-5	TEST	1.2848193437735878E-5	DEFECT	1.0247026182541414E-5	IMPLEMENTATION	5.734464617180703E-6	DOCUMENTATION
// the name of a class	WITHOUT_CLASSIFICATION	0.9999362553875374	WITHOUT_CLASSIFICATION	5.918411766324164E-5	DESIGN	4.216933405330704E-6	DEFECT	1.699438588472111E-7	DOCUMENTATION	8.943021523075773E-8	TEST	8.418732003030732E-8	IMPLEMENTATION
// Its the listener class name	WITHOUT_CLASSIFICATION	0.99999469422148	WITHOUT_CLASSIFICATION	5.2274249705627965E-6	DESIGN	4.222920234406077E-8	DEFECT	2.2680816979376562E-8	TEST	9.304725309968008E-9	IMPLEMENTATION	4.138804884175907E-9	DOCUMENTATION
//allow 9,8,7,6,5,4,3,2,1	WITHOUT_CLASSIFICATION	0.9999085799609928	WITHOUT_CLASSIFICATION	4.19967818971795E-5	DEFECT	3.755417512336222E-5	DESIGN	9.927968780103803E-6	IMPLEMENTATION	9.94981373029551E-7	DOCUMENTATION	9.461318335431317E-7	TEST
// default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.9999999742825249	WITHOUT_CLASSIFICATION	1.4339210098520752E-8	IMPLEMENTATION	7.896666033814178E-9	DESIGN	2.9135631393469342E-9	DOCUMENTATION	4.2904873023738937E-10	DEFECT	1.389870791065514E-10	TEST
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9998758266846391	WITHOUT_CLASSIFICATION	9.768946325748411E-5	DESIGN	2.1742557974660175E-5	IMPLEMENTATION	4.305406515069205E-6	DEFECT	3.588288679694908E-7	DOCUMENTATION	7.705874565260785E-8	TEST
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.7856213965156355	DESIGN	0.2082670206483129	WITHOUT_CLASSIFICATION	0.00343307340445089	IMPLEMENTATION	0.0026106785296376796	DEFECT	4.209804065670486E-5	DOCUMENTATION	2.573286130647473E-5	TEST
// first, lets determine whether to apply cglib or javassist based instrumentation...	WITHOUT_CLASSIFICATION	0.9999913035086551	WITHOUT_CLASSIFICATION	8.61232241253033E-6	DESIGN	4.118983276436046E-8	DOCUMENTATION	2.8129492626678135E-8	DEFECT	1.0880229580412946E-8	TEST	3.969377408301607E-9	IMPLEMENTATION
// Make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.9999996047297842	WITHOUT_CLASSIFICATION	3.790244598066657E-7	DESIGN	1.049060064178647E-8	DEFECT	4.44280002285082E-9	IMPLEMENTATION	9.485527566658944E-10	DOCUMENTATION	3.6380256781311623E-10	TEST
//entirely optional!!	WITHOUT_CLASSIFICATION	0.9996999111592677	WITHOUT_CLASSIFICATION	2.130396778402247E-4	DESIGN	4.5746934574018786E-5	DEFECT	3.29861746642687E-5	IMPLEMENTATION	7.795618922105596E-6	DOCUMENTATION	5.204347318300354E-7	TEST
// Its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.9998030671124788	WITHOUT_CLASSIFICATION	1.9430015439504718E-4	DESIGN	1.914055868867102E-6	IMPLEMENTATION	5.699029427077991E-7	DEFECT	9.191978370092954E-8	DOCUMENTATION	5.6854530904404895E-8	TEST
//context.unbind(boundName);	WITHOUT_CLASSIFICATION	0.9998491785799029	WITHOUT_CLASSIFICATION	9.897056832352817E-5	DESIGN	2.5875845232893952E-5	DEFECT	1.7061365455685037E-5	IMPLEMENTATION	4.4735812269756245E-6	DOCUMENTATION	4.4400598579764134E-6	TEST
//readResolveObject	WITHOUT_CLASSIFICATION	0.9991505796282201	WITHOUT_CLASSIFICATION	8.43571643618065E-4	DESIGN	1.916003485640501E-6	DOCUMENTATION	1.78374560061848E-6	DEFECT	1.2936357595526348E-6	IMPLEMENTATION	8.55343315827309E-7	TEST
//cfg.setProperty("hibernate.show_sql", "true");	WITHOUT_CLASSIFICATION	0.9999999534305929	WITHOUT_CLASSIFICATION	3.105722057474367E-8	DEFECT	1.255045589503032E-8	DESIGN	1.9327065678813757E-9	TEST	5.476049498190384E-10	IMPLEMENTATION	4.814191037930542E-10	DOCUMENTATION
// Defensive, convenience methods	WITHOUT_CLASSIFICATION	0.9999594978429872	WITHOUT_CLASSIFICATION	3.9332943795436235E-5	IMPLEMENTATION	6.651358200240778E-7	DESIGN	3.7266501695621114E-7	DOCUMENTATION	6.728515716269163E-8	TEST	6.41272232028381E-8	DEFECT
// Create the SessionFactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.9999935376763222	WITHOUT_CLASSIFICATION	6.320993405690252E-6	DESIGN	6.173048178937504E-8	DEFECT	5.697518150844392E-8	IMPLEMENTATION	1.2932192561624954E-8	TEST	9.692416292923808E-9	DOCUMENTATION
// Make sure you log the exception, as it might be swallowed	WITHOUT_CLASSIFICATION	0.9992660547921216	WITHOUT_CLASSIFICATION	7.028871224366532E-4	DEFECT	3.0398331790638115E-5	DESIGN	6.19512346943548E-7	IMPLEMENTATION	3.488211058662381E-8	TEST	5.3591934376649874E-9	DOCUMENTATION
// Begin unit of work	WITHOUT_CLASSIFICATION	0.9984462401442185	WITHOUT_CLASSIFICATION	0.001503598322310866	DEFECT	4.519309161705957E-5	DESIGN	2.430984798786686E-6	DOCUMENTATION	1.490956060073195E-6	IMPLEMENTATION	1.0465009946382864E-6	TEST
// Write HTML header	WITHOUT_CLASSIFICATION	0.9999609540897189	WITHOUT_CLASSIFICATION	3.0218426589801174E-5	DESIGN	7.109879941056893E-6	IMPLEMENTATION	1.341886056312616E-6	DEFECT	2.480541414370232E-7	DOCUMENTATION	1.2766355256902118E-7	TEST
// Handle actions	WITHOUT_CLASSIFICATION	0.9998776321515155	WITHOUT_CLASSIFICATION	1.0474046829102552E-4	DESIGN	1.6822331344520044E-5	IMPLEMENTATION	5.057426659063282E-7	DEFECT	2.6206822968481947E-7	DOCUMENTATION	3.723795328199626E-8	TEST
// Print page	WITHOUT_CLASSIFICATION	0.9999973612552744	WITHOUT_CLASSIFICATION	1.2786861778380884E-6	IMPLEMENTATION	8.48562835298958E-7	DESIGN	3.752956726151127E-7	DEFECT	7.669016479640783E-8	DOCUMENTATION	5.950987497295426E-8	TEST
// Write HTML footer	WITHOUT_CLASSIFICATION	0.9999830757527564	WITHOUT_CLASSIFICATION	1.3132443184686977E-5	DESIGN	3.483126843427183E-6	DEFECT	2.2134982585719256E-7	IMPLEMENTATION	4.4120548462677126E-8	DOCUMENTATION	4.320684128944812E-8	TEST
// End unit of work	WITHOUT_CLASSIFICATION	0.9998441618726732	WITHOUT_CLASSIFICATION	1.4590245999663822E-4	DEFECT	8.910812190535896E-6	DESIGN	5.008589358113467E-7	IMPLEMENTATION	3.1071252090230914E-7	TEST	2.1328368293953313E-7	DOCUMENTATION
// Start the session to be used for this request	WITHOUT_CLASSIFICATION	0.9980245843649791	WITHOUT_CLASSIFICATION	0.001975032299293306	DESIGN	1.7545169954999823E-7	TEST	8.989168628397626E-8	DEFECT	7.994055226758212E-8	IMPLEMENTATION	3.805178953062034E-8	DOCUMENTATION
// make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.9999961910012221	WITHOUT_CLASSIFICATION	2.4550089357553367E-6	DESIGN	9.476109671579774E-7	DEFECT	2.307102936799112E-7	IMPLEMENTATION	1.0502001236028803E-7	DOCUMENTATION	7.064856900168529E-8	TEST
// pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.9999999477464564	WITHOUT_CLASSIFICATION	4.1291431828210794E-8	IMPLEMENTATION	5.266920642159286E-9	DEFECT	2.857529151727332E-9	TEST	2.0329799092050976E-9	DESIGN	8.04681965885139E-10	DOCUMENTATION
// remove session from "current context"	WITHOUT_CLASSIFICATION	0.9998468445232899	WITHOUT_CLASSIFICATION	7.707828884241523E-5	DESIGN	7.517504144063346E-5	DEFECT	6.166807829337029E-7	DOCUMENTATION	2.356593264050589E-7	IMPLEMENTATION	4.9806317624384065E-8	TEST
// Eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.9999556429713814	WITHOUT_CLASSIFICATION	3.170780314203575E-5	IMPLEMENTATION	1.2514354651510557E-5	DESIGN	6.821505813963583E-8	DEFECT	4.976494577872327E-8	DOCUMENTATION	1.689082122062841E-8	TEST
// If we want to handle it bidirectional and detached, we also need to load this // collection with an eager outer-join fetch, this time with Criteria and not HQL:	WITHOUT_CLASSIFICATION	0.9999997487982623	WITHOUT_CLASSIFICATION	2.2582395474242315E-7	DESIGN	2.070462402969218E-8	IMPLEMENTATION	2.2430602562919783E-9	TEST	2.131851215029657E-9	DEFECT	2.982473164092826E-10	DOCUMENTATION
/*        Event anEvent = (Event) session                .createCriteria(Event.class).setFetchMode("participants", FetchMode.JOIN)                .add( Expression.eq("id", eventId) )                .uniqueResult(); // Eager fetch the colleciton so we can use it detached        */	WITHOUT_CLASSIFICATION	0.9999999970108422	WITHOUT_CLASSIFICATION	2.640224596866804E-9	DESIGN	3.2332844036790775E-10	IMPLEMENTATION	1.388591953278186E-11	DEFECT	8.46174413295755E-12	TEST	3.25700790389768E-12	DOCUMENTATION
// End of first unit of work	WITHOUT_CLASSIFICATION	0.9999877753455136	WITHOUT_CLASSIFICATION	1.0160989760143425E-5	DEFECT	1.6161738572815449E-6	DESIGN	2.963990721420521E-7	TEST	9.725690275990924E-8	IMPLEMENTATION	5.383489410745044E-8	DOCUMENTATION
// or bidirectional safety method, setting both sides: aPerson.addToEvent(anEvent);	WITHOUT_CLASSIFICATION	0.999127169107875	WITHOUT_CLASSIFICATION	8.329910104452474E-4	IMPLEMENTATION	3.851527748950868E-5	DESIGN	1.0221771108259623E-6	DEFECT	1.7940758111130074E-7	DOCUMENTATION	1.2301949821862784E-7	TEST
// Begin second unit of work	WITHOUT_CLASSIFICATION	0.99922865515601	WITHOUT_CLASSIFICATION	6.341095323024973E-4	DEFECT	1.315380882566623E-4	DESIGN	4.565184835240154E-6	DOCUMENTATION	7.766753336720489E-7	IMPLEMENTATION	3.5536326193654776E-7	TEST
// Reattachment of aPerson	WITHOUT_CLASSIFICATION	0.999987315548477	WITHOUT_CLASSIFICATION	9.984593995294137E-6	DESIGN	2.092870670507885E-6	DEFECT	2.949381390132565E-7	IMPLEMENTATION	2.5297434765328434E-7	DOCUMENTATION	5.90743705946004E-8	TEST
// The getEmailAddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.9997863943939351	WITHOUT_CLASSIFICATION	2.123838752041148E-4	DEFECT	9.540588483516793E-7	IMPLEMENTATION	1.461074853443995E-7	DESIGN	1.0144383920410348E-7	TEST	2.0120687989604598E-8	DOCUMENTATION
// We need our tm, so get it now and avoid doing other work // if there is a problem	WITHOUT_CLASSIFICATION	0.9999703924316234	WITHOUT_CLASSIFICATION	2.8198658383351052E-5	DESIGN	7.507228001984163E-7	DEFECT	6.550687963041738E-7	TEST	2.135221653617716E-9	DOCUMENTATION	9.831750204491016E-10	IMPLEMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999985059031511	WITHOUT_CLASSIFICATION	9.44552600478391E-7	IMPLEMENTATION	5.090359628892401E-7	DEFECT	3.034102475246281E-8	DESIGN	7.736234006160337E-9	DOCUMENTATION	2.4310267733177957E-9	TEST
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999985059031511	WITHOUT_CLASSIFICATION	9.44552600478391E-7	IMPLEMENTATION	5.090359628892401E-7	DEFECT	3.034102475246281E-8	DESIGN	7.736234006160337E-9	DOCUMENTATION	2.4310267733177957E-9	TEST
// JBC put a version in the node when it created as part of // some internal operation. We are always newer, but if // the JBC version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.9999999807090929	WITHOUT_CLASSIFICATION	1.7006915997508583E-8	DESIGN	9.757276636487963E-10	DEFECT	7.927530182073328E-10	TEST	3.942773325594086E-10	IMPLEMENTATION	1.212330878104374E-10	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for properties with //                     hibernate-specific overrides to detect and warn about conflicting //                     declarations	WITHOUT_CLASSIFICATION	0.9998442185818988	WITHOUT_CLASSIFICATION	1.5507372077092847E-4	DESIGN	2.360218532378041E-7	TEST	1.985373612663501E-7	IMPLEMENTATION	1.466442577625568E-7	DOCUMENTATION	1.2649385805616698E-7	DEFECT
// Not null if the Isolation level has been specified in the configuration file. // Otherwise, it is left to the Driver's default value.	WITHOUT_CLASSIFICATION	0.9999997336315712	WITHOUT_CLASSIFICATION	2.2870529787788718E-7	DESIGN	3.5681399523010676E-8	IMPLEMENTATION	9.51430715799782E-10	DOCUMENTATION	7.882091430969738E-10	DEFECT	2.4209161401982447E-10	TEST
// Configured outside of Hibernate (i.e. Servlet container, or Java Bean Container // already has Proxool pools running, and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.9999822127159904	WITHOUT_CLASSIFICATION	1.778700412595061E-5	DESIGN	1.1533463128241504E-10	DEFECT	1.0209349638905523E-10	DOCUMENTATION	5.8158228751602504E-11	TEST	4.297416792191894E-12	IMPLEMENTATION
// If you're closing down the ConnectionProvider chances are an // is not a real big deal, just warn	WITHOUT_CLASSIFICATION	0.9999938860771684	WITHOUT_CLASSIFICATION	6.048020262152662E-6	DEFECT	5.6662666013288685E-8	DESIGN	5.224813050657194E-9	IMPLEMENTATION	3.3961308253144128E-9	TEST	6.189594499273321E-10	DOCUMENTATION
// (AS is always optional, for consistency with SQL/OQL)	WITHOUT_CLASSIFICATION	0.999968432779798	WITHOUT_CLASSIFICATION	1.9521609935347476E-5	IMPLEMENTATION	1.1345123177143502E-5	DESIGN	3.171471199346182E-7	TEST	1.977988759285083E-7	DOCUMENTATION	1.855410936428515E-7	DEFECT
// process the "new" HQL style where aliases are assigned // _after_ the class name or path expression ie. using // the AS construction	WITHOUT_CLASSIFICATION	0.9999999532272813	WITHOUT_CLASSIFICATION	4.554926656657895E-8	DESIGN	1.0461065905915133E-9	DEFECT	9.388390668698293E-11	DOCUMENTATION	6.622187244297352E-11	IMPLEMENTATION	1.723964167983032E-11	TEST
// the loaded owner will be set to null after the collection is removed, // so capture its value as the affected owner so it is accessible to // both pre- and post- events	WITHOUT_CLASSIFICATION	0.9999999990414682	WITHOUT_CLASSIFICATION	8.091953627091175E-10	DESIGN	1.259917221410343E-10	DEFECT	2.306830873729071E-11	IMPLEMENTATION	2.507426801876138E-13	TEST	2.564736076897445E-14	DOCUMENTATION
// is a primitive type // invokespecial	WITHOUT_CLASSIFICATION	0.9999993673451852	WITHOUT_CLASSIFICATION	3.763818099935214E-7	DEFECT	2.3933447284885093E-7	DESIGN	9.760018984211252E-9	TEST	5.34452785612606E-9	DOCUMENTATION	1.8339850708354424E-9	IMPLEMENTATION
// array of primitive type // do nothing	WITHOUT_CLASSIFICATION	0.9999998843185316	WITHOUT_CLASSIFICATION	9.510360690941539E-8	DEFECT	1.5652569862499047E-8	DESIGN	2.5812881553355918E-9	DOCUMENTATION	1.1929065421635706E-9	TEST	1.151096877448045E-9	IMPLEMENTATION
// handle a path expression or class name that // appears at the start, in the "new" HQL // style or an alias that appears at the start // in the "old" HQL style	WITHOUT_CLASSIFICATION	0.9420560758996019	WITHOUT_CLASSIFICATION	0.05767210376360686	DESIGN	2.7142510237427464E-4	DEFECT	3.178585530886181E-7	IMPLEMENTATION	5.012959795021163E-8	DOCUMENTATION	2.72462658856616E-8	TEST
//handle <=, >=, !=, is not, not between, not in	WITHOUT_CLASSIFICATION	0.9997687668899704	WITHOUT_CLASSIFICATION	2.0762401655335637E-4	DESIGN	2.199987976441861E-5	DEFECT	7.864151869101166E-7	TEST	5.087070574161647E-7	IMPLEMENTATION	3.140914675653502E-7	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999998999851686	WITHOUT_CLASSIFICATION	9.678785097660209E-8	DEFECT	3.0321785220671485E-9	IMPLEMENTATION	1.061951700548169E-10	DESIGN	5.4846083550730594E-11	TEST	3.376061397557042E-11	DOCUMENTATION
// transfer an explicitly defined entity name // handle the lazy attribute	WITHOUT_CLASSIFICATION	0.9999961921016377	WITHOUT_CLASSIFICATION	3.7421530768257372E-6	DESIGN	6.399902789803728E-8	IMPLEMENTATION	8.711854622540426E-10	DOCUMENTATION	7.851608453908311E-10	TEST	8.991118476755361E-11	DEFECT
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999822525063999	WITHOUT_CLASSIFICATION	1.3050062266490224E-5	DESIGN	4.2806415396182E-6	IMPLEMENTATION	1.507396859735463E-7	TEST	1.487957730366488E-7	DOCUMENTATION	1.1725433487789125E-7	DEFECT
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999822525063999	WITHOUT_CLASSIFICATION	1.3050062266490224E-5	DESIGN	4.2806415396182E-6	IMPLEMENTATION	1.507396859735463E-7	TEST	1.487957730366488E-7	DOCUMENTATION	1.1725433487789125E-7	DEFECT
// get meta's from // <joined-subclass>	WITHOUT_CLASSIFICATION	0.9999993563475655	WITHOUT_CLASSIFICATION	6.361576038934292E-7	DESIGN	7.0206790387267755E-9	DEFECT	3.7689905222661456E-10	TEST	8.277098148619908E-11	DOCUMENTATION	1.4481480888878038E-11	IMPLEMENTATION
// parameters on the property mapping should // override parameters in the typedef	WITHOUT_CLASSIFICATION	0.999734636882908	WITHOUT_CLASSIFICATION	2.6186767182157433E-4	DEFECT	1.8939606917527402E-6	IMPLEMENTATION	1.5148095108057906E-6	DESIGN	7.670350007058727E-8	TEST	9.971567920011968E-9	DOCUMENTATION
//fetch="join" overrides default laziness //fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.9999999870756272	WITHOUT_CLASSIFICATION	5.46765180102725E-9	IMPLEMENTATION	4.512045189878698E-9	DESIGN	1.5321558543312717E-9	DEFECT	7.94825134990058E-10	DOCUMENTATION	6.176948282144315E-10	TEST
//NOTE SPECIAL CASE: // default to join and non-lazy for the "second join" // of the many-to-many	WITHOUT_CLASSIFICATION	0.9999999782217022	WITHOUT_CLASSIFICATION	1.1315081204948545E-8	DOCUMENTATION	8.948111773781671E-9	DESIGN	8.163121588636171E-10	IMPLEMENTATION	6.672196097898426E-10	DEFECT	3.1573167148029754E-11	TEST
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999998229009076	WITHOUT_CLASSIFICATION	1.3294138502104445E-7	DESIGN	2.0989204836750304E-8	DOCUMENTATION	1.0693773583998218E-8	DEFECT	8.542501167498832E-9	IMPLEMENTATION	3.9322278743145166E-9	TEST
// state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999821279835828	WITHOUT_CLASSIFICATION	1.2510734295330126E-5	DESIGN	3.3937415499281233E-6	IMPLEMENTATION	9.018430220410107E-7	DEFECT	6.55439840714502E-7	TEST	4.102577091903241E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
//element //index -> id	WITHOUT_CLASSIFICATION	0.9999877001929602	WITHOUT_CLASSIFICATION	4.026799402625592E-6	DEFECT	3.986401750326106E-6	IMPLEMENTATION	3.381898660964855E-6	DESIGN	4.545964487107109E-7	DOCUMENTATION	4.501107771093959E-7	TEST
// note that it might be better to iterate the snapshot but this is safe, // assuming the user implements equals() properly, as required by the Set // contract!	WITHOUT_CLASSIFICATION	0.5859186575513874	DEFECT	0.40292911322673114	WITHOUT_CLASSIFICATION	0.010968350576321886	IMPLEMENTATION	1.3481331606415386E-4	DESIGN	4.6510309622004244E-5	TEST	2.5550198734014484E-6	DOCUMENTATION
// collections detect changes made via their public interface and mark // themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.9999994378062319	WITHOUT_CLASSIFICATION	2.9598017259467777E-7	IMPLEMENTATION	2.4658437975472746E-7	DESIGN	1.1779912549941224E-8	DEFECT	7.342805312676396E-9	DOCUMENTATION	5.064977798999586E-10	TEST
// essentially, if the real session is closed allow any // method call to pass through since the real session // will complain by throwing an appropriate exception; // NOTE that allowing close() above has the same basic effect, //   but we capture that there simply to perform the unbind...	WITHOUT_CLASSIFICATION	0.9999996446570192	WITHOUT_CLASSIFICATION	2.8787387439727605E-7	DESIGN	4.861887829251763E-8	IMPLEMENTATION	1.765757116852641E-8	DEFECT	1.1616285682098942E-9	TEST	3.102824628072244E-11	DOCUMENTATION
// The default SQLExceptionConverter for all dialects is based on SQLState // since SQLErrorCode is extremely vendor-specific.  Specific Dialects // may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.9999998903426005	WITHOUT_CLASSIFICATION	1.0521760567285108E-7	DESIGN	2.5050212313900675E-9	IMPLEMENTATION	1.8870233937541236E-9	DEFECT	3.304392412628697E-11	DOCUMENTATION	1.470532538930633E-11	TEST
//only necessary for postgre < 7.4 //http://anoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.9999994733436243	WITHOUT_CLASSIFICATION	3.239154620755696E-7	DESIGN	8.578851132630749E-8	DOCUMENTATION	6.602276185874453E-8	DEFECT	3.326158488128816E-8	IMPLEMENTATION	1.766805573663666E-8	TEST
// select topic, syntax from information_schema.help // where section like 'Function%' order by section, topic // // see also ->  http://www.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.9999999335359607	WITHOUT_CLASSIFICATION	3.730580232116786E-8	DESIGN	2.6978024479827048E-8	DEFECT	1.771761749052942E-9	DOCUMENTATION	3.28986414452878E-10	IMPLEMENTATION	7.946431852511555E-11	TEST
// registerColumnType(Types.VARBINARY, "CHARACTER($l)"); // registerColumnType(Types.BLOB, "CHARACTER($l)" );  // For use prior to CP 11.0 // registerColumnType(Types.CLOB, "CHARACTER($l)" );	WITHOUT_CLASSIFICATION	0.9999987455097921	WITHOUT_CLASSIFICATION	1.16487604295575E-6	IMPLEMENTATION	7.555499328906626E-8	DESIGN	7.70921335875813E-9	TEST	4.738666970360253E-9	DEFECT	1.6112913321743376E-9	DOCUMENTATION
//the BLOB type requires a size arguement - this defaults to //bytes - no arg defaults to 1 whole byte! //other argument mods include K - kilobyte, M - megabyte, G - gigabyte. //refer to the PBdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.8227885936951589	DESIGN	0.1767537593350622	WITHOUT_CLASSIFICATION	4.4475246905907806E-4	DEFECT	1.0164447312205428E-5	DOCUMENTATION	2.4280169413942293E-6	TEST	3.0203646611528554E-7	IMPLEMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999632660061936	WITHOUT_CLASSIFICATION	3.60907994246474E-5	DESIGN	6.355326946907551E-7	DEFECT	4.0133525239316544E-9	TEST	2.2802707835775204E-9	IMPLEMENTATION	1.3680638215872394E-9	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.6549255579506303	WITHOUT_CLASSIFICATION	0.3450585430554648	DESIGN	1.5388999810522227E-5	DEFECT	3.168035131594669E-7	TEST	1.86159417232627E-7	IMPLEMENTATION	7.03116394326516E-9	DOCUMENTATION
// add the comment // nest the main query in an outer select // add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9999066937146807	WITHOUT_CLASSIFICATION	8.88883723278015E-5	DESIGN	3.89102877482794E-6	TEST	3.457439386496953E-7	DOCUMENTATION	1.2886663280003374E-7	IMPLEMENTATION	5.2273645377879554E-8	DEFECT
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// Note: For object <-> SQL datatype mappings see: //	WITHOUT_CLASSIFICATION	0.9999270435523181	WITHOUT_CLASSIFICATION	5.735076327975385E-5	DESIGN	1.5317177150417822E-5	DEFECT	1.8719195761280637E-7	IMPLEMENTATION	6.985968312320493E-8	TEST	3.1455610926920637E-8	DOCUMENTATION
// TRIM(end_keyword string-expression-1 FROM string-expression-2) // use Hibernate implementation "From" is one of the parameters they pass in position ?3 //registerFunction( "trim", new SQLFunctionTemplate(Hibernate.STRING, "trim(?1 ?2 from ?3)") );	WITHOUT_CLASSIFICATION	0.9999999976866227	WITHOUT_CLASSIFICATION	1.954555810601446E-9	IMPLEMENTATION	2.534176001767287E-10	DESIGN	1.0499677977580165E-10	DEFECT	3.016529588371044E-13	TEST	1.054529455751578E-13	DOCUMENTATION
// Whether this dialect has an Identity clause added to the data type or a completely seperate identity // data type	WITHOUT_CLASSIFICATION	0.9999871962228419	WITHOUT_CLASSIFICATION	1.2784114717362242E-5	DESIGN	1.6880371423740205E-8	DEFECT	2.3091104754945955E-9	IMPLEMENTATION	3.17969390206455E-10	DOCUMENTATION	1.5498948493486483E-10	TEST
// According to both the ANSI-SQL and JPA specs, trim takes a variable number of parameters between 1 and 4. // at least one paramer (trimSource) is required.  From the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If <trim specification> is omitted, BOTH is assumed. // If <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999999924093383	WITHOUT_CLASSIFICATION	6.720098601399966E-9	DEFECT	5.29804571202918E-10	DESIGN	2.1786842612505655E-10	IMPLEMENTATION	6.940899123120152E-11	DOCUMENTATION	5.3481090169781776E-11	TEST
/////////////////////////////////////////////////////////////////////// // Prepare persisters and link them up with their cache // region/access-strategy	WITHOUT_CLASSIFICATION	0.9999580903613507	WITHOUT_CLASSIFICATION	4.1889007991300647E-5	DESIGN	1.0908221668326982E-8	DEFECT	5.014646788666757E-9	TEST	2.9020700158916236E-9	IMPLEMENTATION	1.805719543895953E-9	DOCUMENTATION
//Named Queries:	WITHOUT_CLASSIFICATION	0.9999351911165255	WITHOUT_CLASSIFICATION	5.8859486091654186E-5	DESIGN	3.322168724931655E-6	IMPLEMENTATION	2.024061532132051E-6	TEST	3.994303313623136E-7	DEFECT	2.0373679435940634E-7	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9808084764918612	WITHOUT_CLASSIFICATION	0.017882818744165987	DESIGN	0.0011494676764143682	DEFECT	1.4372719779682494E-4	TEST	1.2829839277693084E-5	IMPLEMENTATION	2.6800504839769932E-6	DOCUMENTATION
// does not handle arrays (thats ok, cos they can't be lazy) // or newly instantiated collections, so we can do the cast	WITHOUT_CLASSIFICATION	0.9804405462256043	WITHOUT_CLASSIFICATION	0.017755588274531255	DEFECT	0.001799376042652346	DESIGN	2.0582855860204477E-6	IMPLEMENTATION	1.4697905458701675E-6	TEST	9.613810802749708E-7	DOCUMENTATION
// collection deletions are a special case since update() can add // deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.9999869972625031	WITHOUT_CLASSIFICATION	9.636347014589031E-6	DEFECT	3.365664792846421E-6	IMPLEMENTATION	4.323703856925076E-10	DOCUMENTATION	2.6442758130104903E-10	TEST	2.889145082034522E-11	DESIGN
// we can do the cast since orphan-delete does not apply to: // 1. newly instantiated collections // 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.9973271051639536	WITHOUT_CLASSIFICATION	0.002168531113458642	DEFECT	2.91151335577701E-4	DESIGN	2.1142447126187985E-4	IMPLEMENTATION	1.2561157782657051E-6	DOCUMENTATION	5.317999699383198E-7	TEST
// if the natural-id is marked as non-mutable, it is not retrieved during a // normal database-snapshot operation...	WITHOUT_CLASSIFICATION	0.9998740215330799	WITHOUT_CLASSIFICATION	1.2187399416804756E-4	IMPLEMENTATION	3.632119275802598E-6	DEFECT	2.8836683907399855E-7	DESIGN	1.8361852166396484E-7	TEST	3.681154548530131E-10	DOCUMENTATION
// watch out for a case where old is still referenced // somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9958724168703988	WITHOUT_CLASSIFICATION	0.004124405233650675	DESIGN	2.728617106354559E-6	DEFECT	2.546591179236018E-7	DOCUMENTATION	1.5538943408139397E-7	IMPLEMENTATION	3.9230292203816166E-8	TEST
//slice, to get the columns for this component //property	WITHOUT_CLASSIFICATION	0.9959208365044673	WITHOUT_CLASSIFICATION	0.004078679630177847	DESIGN	2.6083637800296085E-7	TEST	1.0635721057494452E-7	DOCUMENTATION	9.376175248044618E-8	DEFECT	2.2910013640208282E-8	IMPLEMENTATION
//int result = 17; //result = 37 * result + type.hashCode(); //result = 37 * result + ( value==null ? 0 : value.hashCode() ); //return result;	WITHOUT_CLASSIFICATION	0.9999996812928447	WITHOUT_CLASSIFICATION	3.174675971712424E-7	DEFECT	6.128582701882765E-10	IMPLEMENTATION	4.866208235656566E-10	DESIGN	7.128164636235264E-11	DOCUMENTATION	6.879736313418739E-11	TEST
// The CollectionEntry.isReached() stuff is just to detect any silly users   // who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.9999766414920497	WITHOUT_CLASSIFICATION	2.3332992141664376E-5	DESIGN	2.3695489125523647E-8	DEFECT	1.3960367082065937E-9	IMPLEMENTATION	3.160149739754741E-10	DOCUMENTATION	1.0826773973323107E-10	TEST
// detached collection wrappers that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999958915187169	WITHOUT_CLASSIFICATION	3.2662043199523067E-6	DESIGN	6.736756101669661E-7	DEFECT	1.6774471251637141E-7	IMPLEMENTATION	4.938293950972771E-10	TEST	3.6281112138398146E-10	DOCUMENTATION
// The unique property value represented here may or may not be // serializable, so we do an explicit check here in order to generate // a better error message	WITHOUT_CLASSIFICATION	0.7947566649024735	WITHOUT_CLASSIFICATION	0.20446370890190668	DESIGN	7.547317934788478E-4	DEFECT	9.631431319876899E-6	IMPLEMENTATION	7.900189074273139E-6	DOCUMENTATION	7.362781746779523E-6	TEST
// if the version of a newly instantiated object is not the same // as the version seed value, use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.9981887233474125	WITHOUT_CLASSIFICATION	0.0017967681362289767	DESIGN	1.425655202107261E-5	DEFECT	2.0989867927018124E-7	IMPLEMENTATION	2.2460801737428728E-8	TEST	1.96048564173561E-8	DOCUMENTATION
// ie. we never have to null out a reference to // an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999970362495392	WITHOUT_CLASSIFICATION	2.9617442232222385E-6	DESIGN	8.197399823088568E-10	IMPLEMENTATION	5.783359485477506E-10	DEFECT	4.961320774640726E-10	DOCUMENTATION	1.1202958107777197E-10	TEST
// ignore this row, the collection is in process of // being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.9999995819378282	WITHOUT_CLASSIFICATION	3.909286954837056E-7	DESIGN	2.6053311054515684E-8	DEFECT	7.633576176153019E-10	TEST	2.455308427061195E-10	DOCUMENTATION	7.12767107409215E-11	IMPLEMENTATION
// Entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // 	WITHOUT_CLASSIFICATION	0.9999869014756986	WITHOUT_CLASSIFICATION	1.2107159094175098E-5	DEFECT	7.160333945017966E-7	DESIGN	1.8420100255655317E-7	TEST	5.0260194228980736E-8	DOCUMENTATION	4.087061603217944E-8	IMPLEMENTATION
// should be ok performance-wise to generate new delegate instances for each // request since these are locally stack-scoped.  Besides, it makes the code // much easier to read than the old TransactionHelper stuff...	WITHOUT_CLASSIFICATION	0.9236432276453705	WITHOUT_CLASSIFICATION	0.07635215114777189	DESIGN	4.518405327900879E-6	DEFECT	7.348286004701994E-8	TEST	2.029083850465036E-8	DOCUMENTATION	9.027831079867184E-9	IMPLEMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9987818646478144	WITHOUT_CLASSIFICATION	6.201896101470165E-4	DEFECT	4.268105194213497E-4	IMPLEMENTATION	1.6809775248560649E-4	DESIGN	2.061629679990894E-6	TEST	9.758404516861394E-7	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9987818646478144	WITHOUT_CLASSIFICATION	6.201896101470165E-4	DEFECT	4.268105194213497E-4	IMPLEMENTATION	1.6809775248560649E-4	DESIGN	2.061629679990894E-6	TEST	9.758404516861394E-7	DOCUMENTATION
// wrap up any new collections directly referenced by the object // or its components	WITHOUT_CLASSIFICATION	0.9999983463398509	WITHOUT_CLASSIFICATION	1.651817308180463E-6	DESIGN	9.548008625498826E-10	IMPLEMENTATION	6.571091146133343E-10	DEFECT	1.5133813612083137E-10	TEST	7.9592831441047E-11	DOCUMENTATION
// remove any snapshot, not really for memory management purposes, but // rather because it might now be stale, and there is no longer any  // EntityEntry to take precedence // This is now handled by removeEntity() //session.getPersistenceContext().removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9999151292876509	WITHOUT_CLASSIFICATION	6.277366307668021E-5	DEFECT	2.2080869735958636E-5	DESIGN	1.0126858532709396E-8	DOCUMENTATION	4.2732346884319015E-9	IMPLEMENTATION	1.7794432183872212E-9	TEST
// skip this check for composite-ids relating to dom4j entity-mode; // alternatively, we could add a check to make sure the incoming id value is // an instance of Element...	WITHOUT_CLASSIFICATION	0.6913332761950824	DESIGN	0.30829890186473863	WITHOUT_CLASSIFICATION	1.924499535290528E-4	IMPLEMENTATION	1.7216198577061904E-4	DEFECT	2.8806726579176687E-6	DOCUMENTATION	3.293282211308808E-7	TEST
// upgrade the lock if necessary: //lock(result, lockMode);	WITHOUT_CLASSIFICATION	0.99980917835618	WITHOUT_CLASSIFICATION	1.0419468294079693E-4	DEFECT	6.192629765510166E-5	DESIGN	2.406209212844446E-5	IMPLEMENTATION	3.1954656557996553E-7	TEST	3.1902453011071316E-7	DOCUMENTATION
// now, any collections that are initialized // inside this block do not get updated - they // are ignored until the next flush	WITHOUT_CLASSIFICATION	0.9999727853572167	WITHOUT_CLASSIFICATION	2.1836175208014085E-5	IMPLEMENTATION	4.465011563333551E-6	DESIGN	8.916170475732604E-7	DEFECT	1.5592241488307952E-8	TEST	6.24672302529211E-9	DOCUMENTATION
//we must clone embedded composite identifiers, or  //we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.9999961786765611	WITHOUT_CLASSIFICATION	3.7889500471485503E-6	DESIGN	1.8656824718025452E-8	IMPLEMENTATION	1.3422663326444012E-8	DEFECT	2.0032535665907218E-10	DOCUMENTATION	9.357839751286943E-11	TEST
// Sub-insertions should occur before containing insertion so // Try to do the callback now	WITHOUT_CLASSIFICATION	0.9999736155115395	WITHOUT_CLASSIFICATION	1.3645776935462808E-5	DESIGN	1.048350078549962E-5	DEFECT	2.038879852170715E-6	IMPLEMENTATION	2.0312330694361798E-7	DOCUMENTATION	1.3207580544050906E-8	TEST
//the entity is not associated with the session, so //try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.9999913061133605	WITHOUT_CLASSIFICATION	8.599346172529593E-6	DESIGN	5.846567215945472E-8	DEFECT	2.1354155255012203E-8	TEST	8.119724440517613E-9	DOCUMENTATION	6.600914936025467E-9	IMPLEMENTATION
//scan the query string for class names appearing in the from clause and replace //with all persistent implementors of the class/interface, returning multiple //query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.9773078066357621	DESIGN	0.0191176669074865	WITHOUT_CLASSIFICATION	0.0035386350764729244	DEFECT	3.557721512915083E-5	IMPLEMENTATION	1.7603617947462558E-7	DOCUMENTATION	1.3812896977477982E-7	TEST
// save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996253298521	WITHOUT_CLASSIFICATION	1.7117995896853613E-7	DEFECT	1.1660511755032479E-7	DESIGN	6.564355404865492E-8	IMPLEMENTATION	1.1743585868170316E-8	TEST	9.49793142164009E-9	DOCUMENTATION
// evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999134159517	WITHOUT_CLASSIFICATION	3.688758389311076E-8	DEFECT	3.087553483243764E-8	DESIGN	1.3750635769020835E-8	IMPLEMENTATION	2.894757564900195E-9	TEST	2.175536315174024E-9	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9956744052317583	WITHOUT_CLASSIFICATION	0.004314599386343172	DESIGN	9.075959935946594E-6	DEFECT	1.662950556822603E-6	TEST	2.2773093716121493E-7	IMPLEMENTATION	2.874046856746467E-8	DOCUMENTATION
//if it is an uninitialized proxy, pointing //with this session, then when it is accessed, //the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.9999671199277049	WITHOUT_CLASSIFICATION	1.924954863902928E-5	IMPLEMENTATION	8.445038482214048E-6	DESIGN	4.198811476053149E-6	DEFECT	5.942155531413899E-7	TEST	3.924581445548981E-7	DOCUMENTATION
// Generate an explicit join for the root dot node.   The implied joins will be collected and passed up // to the root dot node.	WITHOUT_CLASSIFICATION	0.9999999992110112	WITHOUT_CLASSIFICATION	6.14794267446552E-10	DESIGN	7.790474242483711E-11	TEST	4.657845468937378E-11	IMPLEMENTATION	4.600160175052643E-11	DEFECT	3.709811946405947E-12	DOCUMENTATION
// A session is considered to contain an entity only if the entity has // an entry in the session's persistence context and the entry reports // that the entity has not been removed	WITHOUT_CLASSIFICATION	0.9995743190314283	WITHOUT_CLASSIFICATION	4.243023802600614E-4	DESIGN	1.2613322929888692E-6	IMPLEMENTATION	1.1148148235888662E-7	DEFECT	3.5667160395690873E-9	DOCUMENTATION	2.2078200454376886E-9	TEST
// Does the collection referenced by this FromElement // specify an order-by attribute?  If so, attach it to // the query's order-by	WITHOUT_CLASSIFICATION	0.999774659844362	WITHOUT_CLASSIFICATION	2.0010403841081519E-4	DESIGN	2.2498500923238477E-5	IMPLEMENTATION	1.7522690826515858E-6	DOCUMENTATION	7.214329992921078E-7	DEFECT	2.639142220866157E-7	TEST
// ... and the token could be an identifer and the error is // a mismatched token error ...	WITHOUT_CLASSIFICATION	0.9993335468499552	WITHOUT_CLASSIFICATION	5.95478641092285E-4	DESIGN	7.08417562126682E-5	DEFECT	6.092194256739967E-8	IMPLEMENTATION	4.149600379226073E-8	DOCUMENTATION	3.033479333567603E-8	TEST
// If a where clause was specified in the update/delete query, use it to limit the // returned ids here...	WITHOUT_CLASSIFICATION	0.9999998346826711	WITHOUT_CLASSIFICATION	7.632584243640386E-8	DESIGN	6.681790678450279E-8	DEFECT	2.1462476006667784E-8	IMPLEMENTATION	6.4524688385845E-10	DOCUMENTATION	6.5856870319097E-11	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// Default implementation: // If this node has a data type, and that data type is not an association, then this is scalar.	WITHOUT_CLASSIFICATION	0.9999120676416203	WITHOUT_CLASSIFICATION	4.461955285908845E-5	DEFECT	4.147965606336466E-5	DESIGN	1.4127659124845715E-6	IMPLEMENTATION	3.283325740395917E-7	TEST	9.205097091558174E-8	DOCUMENTATION
// Resolve the LHS fully, generate implicit joins.  Pass in the property name so that the resolver can // discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.9999941880578811	WITHOUT_CLASSIFICATION	4.072974767341393E-6	DEFECT	1.7097957966931206E-6	DESIGN	2.1846886059497004E-8	TEST	4.352958154371443E-9	DOCUMENTATION	2.9717105587377607E-9	IMPLEMENTATION
// If the propertyType is null and there isn't a parent, just // stop now... there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.7033088195424321	WITHOUT_CLASSIFICATION	0.19029335984142326	DEFECT	0.10638285692702062	DESIGN	6.351550350201645E-6	DOCUMENTATION	4.615579672986494E-6	IMPLEMENTATION	3.996559100787675E-6	TEST
//We do not look for an existing join on the same path, because //it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.9999148740373399	WITHOUT_CLASSIFICATION	8.298796522987783E-5	DESIGN	1.776402041145552E-6	DEFECT	3.3998441415111574E-7	IMPLEMENTATION	1.1265009118518322E-8	DOCUMENTATION	1.0345965796931593E-8	TEST
// our parent is another dot node, meaning we are being further dereferenced. // thus we need to generate a join unless the parent refers to the associated // entity's PK (because 'our' table would know the FK).	WITHOUT_CLASSIFICATION	0.9999680804489043	WITHOUT_CLASSIFICATION	1.7658121845335527E-5	DESIGN	1.401248783851763E-5	IMPLEMENTATION	1.5049407017371586E-7	TEST	9.80713254242204E-8	DOCUMENTATION	3.760161559854231E-10	DEFECT
/*public final Currency getCurrency(int col) throws HibernateException {	WITHOUT_CLASSIFICATION	0.9904138404801481	WITHOUT_CLASSIFICATION	0.009502284278781968	DESIGN	7.686176565579741E-5	DEFECT	4.125592643737378E-6	DOCUMENTATION	1.8886980224833268E-6	IMPLEMENTATION	9.991847478538773E-7	TEST
// here, we have two possibilities: // 	WITHOUT_CLASSIFICATION	0.9982411495053349	WITHOUT_CLASSIFICATION	0.0014546241697415076	DESIGN	1.729409317061966E-4	IMPLEMENTATION	1.0399534973030899E-4	DEFECT	2.599538054061361E-5	TEST	1.294662946539988E-6	DOCUMENTATION
// Set the unresolved path in this node and the parent. // Set the text for the parent.	WITHOUT_CLASSIFICATION	0.999524986041533	WITHOUT_CLASSIFICATION	2.107312319238479E-4	IMPLEMENTATION	1.8759022947448828E-4	DESIGN	6.444868048364178E-5	DEFECT	9.652555842009286E-6	TEST	2.591260743221823E-6	DOCUMENTATION
// Get the first child to be considered.  Sub-classes may do this differently in order to skip nodes that // are not select expressions (e.g. DISTINCT).	WITHOUT_CLASSIFICATION	0.9999984372732411	WITHOUT_CLASSIFICATION	1.2227104537270595E-6	DESIGN	3.195620953355178E-7	IMPLEMENTATION	1.6148538631351756E-8	DEFECT	4.218939963001957E-9	DOCUMENTATION	8.673125815096379E-11	TEST
// If this is an entity and the property is the identifier property, then use getIdentifierType(). //      Note that the propertyName.equals( propertyPath ) checks whether we have a component //      key reference, where the component class property name is the same as the //      entity id property name; if the two are not equal, this is the case and //      we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.9999999884470319	WITHOUT_CLASSIFICATION	9.07856655853257E-9	DESIGN	2.237773656447188E-9	DEFECT	1.237547168699846E-10	DOCUMENTATION	8.061578645793504E-11	IMPLEMENTATION	3.225741462692695E-11	TEST
// for a subquery, the alias to use depends on a few things (we // already know this is not an overall SELECT): //      1) if this FROM_ELEMENT represents a correlation to the //          outer-most query //              A) if the outer query represents a multi-table //                  persister, we need to use the given alias //                  in anticipation of one of the multi-table //                  executors being used (as this subquery will //                  actually be used in the "id select" phase //                  of that multi-table executor) //              B) otherwise, we need to use the persister's //                  table name as the column qualification //      2) otherwise (not correlated), use the given alias	WITHOUT_CLASSIFICATION	0.9945708508334046	WITHOUT_CLASSIFICATION	0.005382766313733576	DESIGN	3.3348507027499236E-5	DEFECT	1.2996307946504138E-5	IMPLEMENTATION	3.4460531305124666E-8	DOCUMENTATION	3.577356579606927E-9	TEST
// Not a collection? // Return the entity property mapping.	WITHOUT_CLASSIFICATION	0.9995717944151213	WITHOUT_CLASSIFICATION	1.8537990390101204E-4	IMPLEMENTATION	1.3896279724083746E-4	DEFECT	1.0368532329155952E-4	DESIGN	1.2920916224409624E-7	TEST	4.835128293092451E-8	DOCUMENTATION
// collection of <many-to-any/> mappings... // used to circumvent the component-collection check below...	WITHOUT_CLASSIFICATION	0.9877896370768151	WITHOUT_CLASSIFICATION	0.010033203776931785	IMPLEMENTATION	0.0021566756804532804	DESIGN	1.5623116929638758E-5	DEFECT	4.212206925146844E-6	DOCUMENTATION	6.481419450252887E-7	TEST
// Otherwise, the destination node was implied by the FROM clause and the FROM clause processor // will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.9983664066645834	WITHOUT_CLASSIFICATION	0.001603285502561285	DESIGN	1.6732353459992176E-5	DEFECT	1.1724417694088698E-5	IMPLEMENTATION	1.773019684180829E-6	DOCUMENTATION	7.804201695051493E-8	TEST
// If the first identifier in the path referrs to the class alias (not the class name), then this // is a correlated subselect.  If it's a correlated sub-select, use the existing table alias.  Otherwise // generate a new one.	WITHOUT_CLASSIFICATION	0.9999568442772607	WITHOUT_CLASSIFICATION	4.311682797672075E-5	DESIGN	2.7780112275065202E-8	DEFECT	1.0548622326720224E-8	IMPLEMENTATION	5.537989131896569E-10	TEST	1.222900288423575E-11	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999981880998298	WITHOUT_CLASSIFICATION	1.8076303137587416E-6	DESIGN	4.0659673942106375E-9	DEFECT	1.2386407737245528E-10	DOCUMENTATION	6.444304999327726E-11	IMPLEMENTATION	1.5582089016694227E-11	TEST
// An ident node can represent an index expression if the ident // represents a naked property ref //      *Note: this makes the assumption (which is currently the case //      in the hql-sql grammar) that the ident is first resolved //      itself (addrExpr -> resolve()).  The other option, if that //      changes, is to call resolve from here; but it is //      currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.9999992523142875	WITHOUT_CLASSIFICATION	7.452661098176686E-7	DESIGN	9.258104403093528E-10	TEST	8.420584235573258E-10	IMPLEMENTATION	5.887837333940228E-10	DEFECT	6.29501342850239E-11	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999911040468228	WITHOUT_CLASSIFICATION	8.418287508220239E-6	DESIGN	4.03537797425674E-7	IMPLEMENTATION	7.383904466940449E-8	DEFECT	2.124593077082876E-10	TEST	7.636755008527543E-11	DOCUMENTATION
// If this is an implied join in a FROM clause, then use ANSI-style joining, and set the // flag on the FromElement that indicates that it was implied in the FROM clause itself.	WITHOUT_CLASSIFICATION	0.9999981195760487	WITHOUT_CLASSIFICATION	1.7157449584034413E-6	DESIGN	8.374394951254085E-8	TEST	7.07584891214431E-8	DEFECT	8.084499481955738E-9	IMPLEMENTATION	2.0920547805437193E-9	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// For an explicit many-to-many relationship, add a second join from the intermediate  // (many-to-many) table to the destination table.  Also, make sure that the from element's  // idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.9999999927135883	WITHOUT_CLASSIFICATION	6.7045383816408665E-9	DESIGN	4.768058034671105E-10	DEFECT	5.316982124347557E-11	DOCUMENTATION	5.081896591045195E-11	TEST	1.0785930780683783E-12	IMPLEMENTATION
// Reset the node type, because the rest of the system is expecting FROM_FRAGMENT, all we wanted was // for the factory to create the right sub-class.  This might get reset again later on anyway to make the // SQL generation simpler.	WITHOUT_CLASSIFICATION	0.9947216572899559	WITHOUT_CLASSIFICATION	0.005096796588811537	DESIGN	1.3279163142129944E-4	DEFECT	3.0643152507907817E-5	IMPLEMENTATION	1.7337625045203763E-5	TEST	7.737122581194123E-7	DOCUMENTATION
//explicit = true;	WITHOUT_CLASSIFICATION	0.9997533697864037	WITHOUT_CLASSIFICATION	2.350751157440485E-4	DESIGN	9.900795804846097E-6	DEFECT	6.389589578051523E-7	TEST	5.835236802506117E-7	IMPLEMENTATION	4.318194093759246E-7	DOCUMENTATION
//sqlResultTypeList.add( type ); // Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999992577823258	WITHOUT_CLASSIFICATION	2.7558740431869133E-7	IMPLEMENTATION	2.510729248881617E-7	DEFECT	2.0129255061755985E-7	DESIGN	1.3298900842204568E-8	TEST	9.658935795011597E-10	DOCUMENTATION
// If the expression list has exactly one expression, and the type of the expression is a collection // then this might be a collection function, such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.998713246681987	WITHOUT_CLASSIFICATION	9.046287336880903E-4	DEFECT	3.820217057078091E-4	DESIGN	6.779094331152106E-8	IMPLEMENTATION	2.8169639441137377E-8	DOCUMENTATION	6.9180342703627106E-9	TEST
// Need to parse off the column qualifiers; this is assuming (which is true as of now) // that this is only used from update and delete HQL statement parsing	WITHOUT_CLASSIFICATION	0.9999993134720894	WITHOUT_CLASSIFICATION	6.745178081920126E-7	IMPLEMENTATION	9.260853494991503E-9	DEFECT	2.388430210593302E-9	DESIGN	2.2773996163963817E-10	TEST	1.3307863294243834E-10	DOCUMENTATION
// for regression testing against output from the old parser... // found it easiest to simply reorder the FromElements here into ascending order // in terms of injecting them into the resulting sql ast in orders relative to those // expected by the old parser; this is definitely another of those "only needed // for regression purposes".  The SyntheticAndFactory, then, simply injects them as it // encounters them.	WITHOUT_CLASSIFICATION	0.9999996918484456	WITHOUT_CLASSIFICATION	1.3398556986450643E-7	DEFECT	1.3099434786203658E-7	TEST	4.285152830723589E-8	DESIGN	3.191069868472166E-10	DOCUMENTATION	1.00141430145932E-12	IMPLEMENTATION
// The uber-rule here is that we need to include  subclass joins if // the FromElement is in any way dereferenced by a property from // the subclass table; otherwise we end up with column references // qualified by a non-existent table reference in the resulting SQL...	WITHOUT_CLASSIFICATION	0.9920877034432511	WITHOUT_CLASSIFICATION	0.007907850105755152	DESIGN	2.3504289399598484E-6	DEFECT	2.0037200709613203E-6	IMPLEMENTATION	6.095821950583359E-8	DOCUMENTATION	3.134376325093899E-8	TEST
// classic translator does not support collection of ordinal // param metadata	WITHOUT_CLASSIFICATION	0.9989996093836856	WITHOUT_CLASSIFICATION	8.810789104829184E-4	DESIGN	1.1737935078285895E-4	DEFECT	1.798661162172051E-6	IMPLEMENTATION	9.881641259295122E-8	TEST	3.487747372953683E-8	DOCUMENTATION
// The following variables are stacks that keep information about each subexpression // in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.9999259275822149	WITHOUT_CLASSIFICATION	6.873112559796024E-5	DESIGN	5.1044474842624105E-6	DEFECT	1.6550422000455487E-7	IMPLEMENTATION	5.616129385295985E-8	DOCUMENTATION	1.5179189111607206E-8	TEST
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999998999851686	WITHOUT_CLASSIFICATION	9.678785097660209E-8	DEFECT	3.0321785220671485E-9	IMPLEMENTATION	1.061951700548169E-10	DESIGN	5.4846083550730594E-11	TEST	3.376061397557042E-11	DOCUMENTATION
// should not be able to reach last without maxPosition being set // unless there are no results	WITHOUT_CLASSIFICATION	0.99999999845763	WITHOUT_CLASSIFICATION	1.3277754793280052E-9	DESIGN	1.125673422480162E-10	DEFECT	1.0014101822093381E-10	TEST	1.525388273963863E-12	IMPLEMENTATION	3.6082282446562935E-13	DOCUMENTATION
// we found it in the temp PC.  Should indicate we are in the midst of processing a result set // containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.9999999755834673	WITHOUT_CLASSIFICATION	2.4357955808023246E-8	DESIGN	4.767208524747823E-11	TEST	4.781466674218074E-12	DOCUMENTATION	4.641218176926123E-12	DEFECT	1.482168240171938E-12	IMPLEMENTATION
//do not use proxiesByKey, since not all //proxies that point to this session's //instances are in that collection!	WITHOUT_CLASSIFICATION	0.9996436236443484	WITHOUT_CLASSIFICATION	3.1001993089655914E-4	DESIGN	3.265585463037701E-5	IMPLEMENTATION	1.3288699145122705E-5	DEFECT	4.0793846818423775E-7	DOCUMENTATION	3.932511378229466E-9	TEST
// if there is no TM configured, we will not be able to access // the javax.transaction.Transaction object in order to // register a synch anyway.	WITHOUT_CLASSIFICATION	0.5484339201041671	DESIGN	0.45152584690114544	WITHOUT_CLASSIFICATION	3.644858630755739E-5	IMPLEMENTATION	2.8189906079239587E-6	DOCUMENTATION	7.363923085930358E-7	TEST	2.290254633180935E-7	DEFECT
// Since the result set cursor is always left at the first // physical row after the "last processed", we need to jump // back one position to get the key value we are interested // in skipping	WITHOUT_CLASSIFICATION	0.9999999609319776	WITHOUT_CLASSIFICATION	2.7557671438970585E-8	DESIGN	7.054670712909467E-9	DEFECT	4.066940057136992E-9	DOCUMENTATION	2.2210063369772244E-10	TEST	1.6663947065877235E-10	IMPLEMENTATION
//true if this is a query and we are loading multiple instances of the same collection role //otherwise this is a CollectionInitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.9992420934858939	WITHOUT_CLASSIFICATION	7.474705478309193E-4	DEFECT	8.826181216973176E-6	DESIGN	1.5787640655644577E-6	IMPLEMENTATION	1.858620008601111E-8	DOCUMENTATION	1.2434792693283527E-8	TEST
// we don't need to worry about existing version being uninitialized // because this block isn't called by a re-entrant load (re-entrant // loads _always_ have lock mode NONE)	WITHOUT_CLASSIFICATION	0.9991961825238601	WITHOUT_CLASSIFICATION	7.97125540406012E-4	IMPLEMENTATION	5.5707744268043165E-6	DESIGN	1.0688008388944038E-6	DEFECT	3.002095268813356E-8	DOCUMENTATION	2.2339515583177096E-8	TEST
// add temp entry so that the next step is circular-reference // safe - only needed because some types don't take proper // advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.9999890684550382	WITHOUT_CLASSIFICATION	1.0391645264949606E-5	DEFECT	3.4877282952678203E-7	DOCUMENTATION	1.2463352826597527E-7	TEST	6.429715086651768E-8	DESIGN	2.196188085973777E-9	IMPLEMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999999883814185	WITHOUT_CLASSIFICATION	7.979539011921143E-9	DESIGN	1.5884510649791304E-9	DOCUMENTATION	1.037926288366406E-9	TEST	1.006792798851668E-9	DEFECT	5.872383152763636E-12	IMPLEMENTATION
// log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.9996160133510654	WITHOUT_CLASSIFICATION	2.6146381001998324E-4	DEFECT	1.2090097387951448E-4	IMPLEMENTATION	1.0618519257622538E-6	DESIGN	3.5443100328711655E-7	TEST	2.0558210603940917E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// this has been shown to happen occasionally in rare cases // when using a transaction manager + transaction-timeout // where the timeout calls back through Hibernate's // registered transaction synchronization on a separate // "reaping" thread.  In cases where that reaping thread // executes through this block at the same time the main // application thread does we can get into situations where // these CMEs occur.  And though it is not "allowed" per-se, // the end result without handling it specifically is infinite // looping.  So here, we simply break the loop	WITHOUT_CLASSIFICATION	0.9999999399907044	WITHOUT_CLASSIFICATION	5.5443786252937254E-8	DESIGN	4.5389039792951806E-9	DEFECT	2.4188438420156914E-11	DOCUMENTATION	2.1538825306560227E-12	IMPLEMENTATION	2.630890098716258E-13	TEST
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9997483271235731	WITHOUT_CLASSIFICATION	2.501131763470649E-4	DESIGN	1.2713675687375625E-6	DEFECT	1.9111337981343814E-7	DOCUMENTATION	8.637411361972648E-8	IMPLEMENTATION	1.0845017652884338E-8	TEST
// can't cache this stuff either (per-invocation) // we are given a map of user-alias -> lock mode // create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.999998745208278	WITHOUT_CLASSIFICATION	9.396406389616868E-7	DESIGN	3.104113150089458E-7	DEFECT	4.397488655602799E-9	DOCUMENTATION	3.371656246560422E-10	TEST	5.113732309003766E-12	IMPLEMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns //getCollectionTable().createUniqueKey( getIdentifier().getConstraintColumns() );	WITHOUT_CLASSIFICATION	0.9999633663718195	WITHOUT_CLASSIFICATION	3.262412522226947E-5	DEFECT	3.883599525088501E-6	DESIGN	8.440146852717697E-8	TEST	3.472867846389575E-8	IMPLEMENTATION	6.773286115862121E-9	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999979834278303	WITHOUT_CLASSIFICATION	1.867721159985848E-6	DESIGN	1.1274846683377347E-7	IMPLEMENTATION	1.636450159440853E-8	DEFECT	1.4648985242391773E-8	TEST	5.089056001807159E-9	DOCUMENTATION
//isSet = collection.isSet(); //isSorted = collection.isSorted();	WITHOUT_CLASSIFICATION	0.9999972717042095	WITHOUT_CLASSIFICATION	2.3372078922056004E-6	IMPLEMENTATION	2.736688461157747E-7	DEFECT	6.501177084286629E-8	TEST	4.109009184728302E-8	DESIGN	1.1317189489458647E-8	DOCUMENTATION
//lists, arrays //sets, maps, bags	WITHOUT_CLASSIFICATION	0.9999983852523059	WITHOUT_CLASSIFICATION	7.154181364575326E-7	DEFECT	6.147249800853136E-7	DESIGN	1.608522439758439E-7	TEST	1.1528889839239869E-7	IMPLEMENTATION	8.463435211451976E-9	DOCUMENTATION
// we finish all the "removes" first to take care of possible unique // constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.9999999717523425	WITHOUT_CLASSIFICATION	1.694126732941224E-8	DESIGN	6.7261421315642435E-9	DEFECT	3.49558208457313E-9	IMPLEMENTATION	1.0607102737202573E-9	TEST	2.3955722773119073E-11	DOCUMENTATION
//use a combination of foreign key columns and pk columns, since //the ordering of removal and addition is not guaranteed when //a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.9998964508956456	WITHOUT_CLASSIFICATION	5.2622680639521495E-5	DEFECT	5.0805526034261505E-5	DESIGN	9.603355421110132E-8	DOCUMENTATION	1.2529064082186927E-8	IMPLEMENTATION	1.2335062261141537E-8	TEST
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999979834278303	WITHOUT_CLASSIFICATION	1.867721159985848E-6	DESIGN	1.1274846683377347E-7	IMPLEMENTATION	1.636450159440853E-8	DEFECT	1.4648985242391773E-8	TEST	5.089056001807159E-9	DOCUMENTATION
//information about properties of this class, //including inherited properties //(only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.9998713046916787	WITHOUT_CLASSIFICATION	1.2240525022150627E-4	DEFECT	4.519786206126051E-6	DESIGN	9.94315414745721E-7	TEST	7.383824755237997E-7	DOCUMENTATION	3.7574003510780806E-8	IMPLEMENTATION
// all this only really needs to consider properties // of this class, not its subclasses, but since we // are reusing code used for sequential selects, we // use the subclass closure	WITHOUT_CLASSIFICATION	0.9999999997310786	WITHOUT_CLASSIFICATION	2.5155188684624644E-10	DESIGN	1.4801080878793258E-11	DEFECT	1.5174173099200908E-12	DOCUMENTATION	8.07843456613467E-13	TEST	2.4313716058977207E-13	IMPLEMENTATION
// Here we render the select column list based on the properties defined as being generated. // For partial component generation, we currently just re-select the whole component // rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.9984723657420316	WITHOUT_CLASSIFICATION	0.0015275179797282152	DESIGN	1.1166397868139139E-7	DEFECT	3.7006523277973366E-9	IMPLEMENTATION	6.429693023955486E-10	TEST	2.7063986330690364E-10	DOCUMENTATION
// this is the root (versioned) table, and we are using version-based // optimistic locking;  if we are not updating the version, also don't // check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.9999966339932558	WITHOUT_CLASSIFICATION	3.3597148875572893E-6	DEFECT	5.573034643843573E-9	DESIGN	5.286912367505489E-10	IMPLEMENTATION	9.599501250516457E-11	DOCUMENTATION	9.413572373720428E-11	TEST
//optimistic-lock="all", include all updatable properties //optimistic-lock="dirty", include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.9999933466274108	WITHOUT_CLASSIFICATION	3.2677223963749527E-6	DESIGN	3.0240657786174994E-6	DEFECT	1.6869791376668551E-7	IMPLEMENTATION	1.4869196856221032E-7	DOCUMENTATION	4.419453183462907E-8	TEST
// this property belongs to the table, and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999397398895064	WITHOUT_CLASSIFICATION	4.102366073567726E-5	DESIGN	1.9219463741539385E-5	DEFECT	1.2716214681079178E-8	DOCUMENTATION	3.5299271750563173E-9	TEST	7.398744937657399E-10	IMPLEMENTATION
// check to see if the connection is in auto-commit  // mode (no connection means aggressive connection // release outside a JTA transaction context, so MUST // be autocommit mode)	WITHOUT_CLASSIFICATION	0.9999993791831083	WITHOUT_CLASSIFICATION	6.205153713026837E-7	DESIGN	1.7198838867297134E-10	DOCUMENTATION	1.0310159779927893E-10	IMPLEMENTATION	1.5740046382700583E-11	TEST	1.0690338873868889E-11	DEFECT
// need to treat this as if it where optimistic-lock="all" (dirty does *not* make sense); // first we need to locate the "loaded" state // // Note, it potentially could be a proxy, so perform the location the safe way...	WITHOUT_CLASSIFICATION	0.9361819866385584	DESIGN	0.06265137739006861	WITHOUT_CLASSIFICATION	0.0010492984111426442	DEFECT	9.954347445304585E-5	IMPLEMENTATION	1.4166712159073813E-5	TEST	3.6273736182625125E-6	DOCUMENTATION
// we *always* assume an instance with a null // identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.999999776561279	WITHOUT_CLASSIFICATION	1.3312896256828994E-7	DEFECT	8.895030957210168E-8	DESIGN	1.2813790743648832E-9	DOCUMENTATION	6.861467430491106E-11	TEST	9.455156789940634E-12	IMPLEMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9975932538579262	WITHOUT_CLASSIFICATION	0.0019575724398753548	DEFECT	4.172329960200911E-4	IMPLEMENTATION	3.0830731767487996E-5	DESIGN	8.391740674934196E-7	TEST	2.708003433884768E-7	DOCUMENTATION
//allow any identifier quoted with backtick //only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.9998635187627244	WITHOUT_CLASSIFICATION	1.1928532324165989E-4	DESIGN	8.785490906053893E-6	DEFECT	8.029456907719496E-6	IMPLEMENTATION	3.183558495597212E-7	TEST	6.261037058096426E-8	DOCUMENTATION
//following doesn't handle (null, not null) but unnecessary //since this would mean all rows	WITHOUT_CLASSIFICATION	0.9768934334985279	WITHOUT_CLASSIFICATION	0.010874503657837703	DESIGN	0.007613972915276993	DEFECT	0.004219841662828162	IMPLEMENTATION	3.887808218672887E-4	TEST	9.467443661962133E-6	DOCUMENTATION
// IMPL NOTE : due to the delayed population of setters (setters cached // 	WITHOUT_CLASSIFICATION	0.9999857076796442	WITHOUT_CLASSIFICATION	1.2942303562077936E-5	DESIGN	1.3357978071168247E-6	DEFECT	1.0475632322087306E-8	IMPLEMENTATION	3.2006338698995414E-9	DOCUMENTATION	5.42720406171945E-10	TEST
// we need to dirty check collections, since they can cause an owner // version number increment	WITHOUT_CLASSIFICATION	0.9994048130337337	WITHOUT_CLASSIFICATION	5.677069208324315E-4	IMPLEMENTATION	2.2469528099219433E-5	DESIGN	4.336956881057211E-6	DOCUMENTATION	6.179499517598617E-7	DEFECT	5.561050171119775E-8	TEST
//return the id, so we can use it to reset the proxy id //return result;	WITHOUT_CLASSIFICATION	0.999997957833261	WITHOUT_CLASSIFICATION	1.8510905440237622E-6	DESIGN	1.0735145723086331E-7	DEFECT	7.961175182891603E-8	IMPLEMENTATION	3.6691157981020475E-9	DOCUMENTATION	4.4387003336395177E-10	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999999608152064	WITHOUT_CLASSIFICATION	3.705499514455564E-8	DEFECT	9.773498736461976E-10	IMPLEMENTATION	6.016018483097835E-10	DESIGN	4.635165848938258E-10	DOCUMENTATION	8.733017846554938E-11	TEST
// We now have the value of the property-ref we reference.  However, // we need to dig a little deeper, as that property might also be // an entity type, in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.99999894938939	WITHOUT_CLASSIFICATION	1.0042570452181961E-6	DESIGN	4.526073352443309E-8	DEFECT	9.957957412290922E-10	DOCUMENTATION	8.658873659537984E-11	IMPLEMENTATION	1.0446708298502905E-11	TEST
// Retrieve the value of the designated column in the current row of this // ResultSet object as a java.io.Reader object	WITHOUT_CLASSIFICATION	0.9999978678703629	WITHOUT_CLASSIFICATION	1.1240384813794618E-6	DESIGN	8.814787172530559E-7	DEFECT	1.0578620560165467E-7	DOCUMENTATION	1.6747545256095276E-8	IMPLEMENTATION	4.078687552217269E-9	TEST
//not absolutely necessary, but helps for some //equals()/hashCode() implementations	WITHOUT_CLASSIFICATION	0.9959797336786838	WITHOUT_CLASSIFICATION	0.0024987953267654513	IMPLEMENTATION	0.0014290407817711868	DESIGN	6.488343104764224E-5	DEFECT	2.543858356205242E-5	TEST	2.1081981699648942E-6	DOCUMENTATION
//this should be a call to resolve(), not resolveIdentifier(),  //'cos it might be a property-ref, and we did not cache the //referenced value	WITHOUT_CLASSIFICATION	0.9995520131211979	WITHOUT_CLASSIFICATION	3.2356570027290097E-4	DESIGN	1.2434098201070826E-4	DEFECT	6.058364423559855E-8	IMPLEMENTATION	1.8689899514278143E-8	DOCUMENTATION	9.229746660374194E-10	TEST
// If we have <tt>not-found="ignore"</tt> association mapped to a // formula, we always need to dirty check it, so we can update the // second-level cache	WITHOUT_CLASSIFICATION	0.9999953682666499	WITHOUT_CLASSIFICATION	4.245041860627186E-6	IMPLEMENTATION	3.7444561374980494E-7	DESIGN	9.879902035089175E-9	DOCUMENTATION	1.6205685213383852E-9	DEFECT	7.454053197303271E-10	TEST
// can't just return null here, since that would // cause an owning component to become null	WITHOUT_CLASSIFICATION	0.9999998929151878	WITHOUT_CLASSIFICATION	7.838355349147286E-8	DESIGN	2.5432419959689534E-8	IMPLEMENTATION	2.755171100117973E-9	DEFECT	2.8387553179767714E-10	TEST	2.2979195794801728E-10	DOCUMENTATION
//for arrays, replaceElements() may return a different reference, since //the array length might not match	WITHOUT_CLASSIFICATION	0.9999959468938928	WITHOUT_CLASSIFICATION	4.03216815690342E-6	DEFECT	1.6840961422286548E-8	DESIGN	2.195309579755647E-9	DOCUMENTATION	1.8172376418123888E-9	IMPLEMENTATION	8.444152916866737E-11	TEST
// actual cache of the entries.  soft references are used for both the keys and the // values here since the values pertaining to the MRU entries are kept in a // seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.9999999992176322	WITHOUT_CLASSIFICATION	4.817275616873056E-10	DESIGN	2.977360904391068E-10	IMPLEMENTATION	1.057974519093082E-12	DEFECT	9.366718375748351E-13	DOCUMENTATION	9.095416188241022E-13	TEST
// as soon as we encounter our first letter, return the substring // from that position	WITHOUT_CLASSIFICATION	0.9999999973587242	WITHOUT_CLASSIFICATION	1.36101029834902E-9	DESIGN	1.2632567988630295E-9	DEFECT	7.185811657419538E-12	TEST	5.184201985574236E-12	IMPLEMENTATION	4.638608802431003E-12	DOCUMENTATION
// Note : expected in the syntax: //      type=listenerClass //          ({sep}type=listenerClass)* // where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.999998866100166	WITHOUT_CLASSIFICATION	1.1150205942659868E-6	DEFECT	9.603382944759332E-9	DESIGN	8.536754032362436E-9	TEST	4.0477897071091555E-10	DOCUMENTATION	3.343237077123016E-10	IMPLEMENTATION
// isTransactionCallbackRegistered denotes whether any Hibernate // Transaction has registered as a callback against this // JDBCContext; only one such callback is allowed.  Directly // serializing this value causes problems with JDBCTransaction, // or really any Transaction impl where the callback is local // to the Transaction instance itself, since that Transaction // is not serialized along with the JDBCContext.  Thus we // handle that fact here explicitly...	WITHOUT_CLASSIFICATION	0.9985062895164073	WITHOUT_CLASSIFICATION	0.0011220115154380813	DEFECT	3.7154375005282937E-4	DESIGN	1.2882975611497433E-7	TEST	1.363634960360352E-8	IMPLEMENTATION	1.27519959964688E-8	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999967431274013	WITHOUT_CLASSIFICATION	3.1665000096225976E-6	DESIGN	4.61037140821752E-8	DEFECT	3.73407623358474E-8	TEST	5.73140048967213E-9	IMPLEMENTATION	1.1967123463205098E-9	DOCUMENTATION
// We call getKeyFromResultSet() here so that we can know the // key value upon which to perform the breaking logic.  However, // it is also then called from getRowFromResultSet() which is certainly // not the most efficient.  But the call here is needed, and there // currently is no other way without refactoring of the doQuery()/getRowFromResultSet() // methods	WITHOUT_CLASSIFICATION	0.9256764120276914	DESIGN	0.07034813922639074	WITHOUT_CLASSIFICATION	0.003943961389514458	IMPLEMENTATION	2.813926326555573E-5	DEFECT	2.723188128750606E-6	TEST	6.249050092756089E-7	DOCUMENTATION
// This check is needed since processing leaves the cursor // after the last physical row for the current logical row; // thus if we are after the last physical row, this might be // caused by either: //      1) scrolling to the last logical row //      2) scrolling past the last logical row // In the latter scenario, the previous logical row // really is the last logical row. // // In all other cases, we should process back two // logical records (the current logic row, plus the // previous logical row).	WITHOUT_CLASSIFICATION	0.559559886651192	WITHOUT_CLASSIFICATION	0.44035277496201014	DEFECT	6.477009173149498E-5	IMPLEMENTATION	1.8365418356936097E-5	DESIGN	4.044116053416897E-6	DOCUMENTATION	1.5876065603243847E-7	TEST
// and perform the load	WITHOUT_CLASSIFICATION	0.9999910590797715	WITHOUT_CLASSIFICATION	8.075862864885914E-6	DESIGN	6.776305427670188E-7	IMPLEMENTATION	1.0115367662020964E-7	DEFECT	7.582163513181637E-8	DOCUMENTATION	1.0451509193113823E-8	TEST
//important: reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.8597107658092401	WITHOUT_CLASSIFICATION	0.1369150775105282	DESIGN	0.002647101859182988	DEFECT	5.3596225477026E-4	IMPLEMENTATION	1.8354464855884888E-4	DOCUMENTATION	7.5479177197517585E-6	TEST
//this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.9904534391152421	WITHOUT_CLASSIFICATION	0.009460714551564282	DEFECT	8.426698743015756E-5	DESIGN	1.342352596022395E-6	IMPLEMENTATION	2.026583965254841E-7	DOCUMENTATION	3.4334770834486545E-8	TEST
// we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.9997322783302426	WITHOUT_CLASSIFICATION	2.65976968496446E-4	DESIGN	1.6797719820318885E-6	DEFECT	4.330695029429181E-8	IMPLEMENTATION	1.7898300003506563E-8	DOCUMENTATION	3.7240287000713315E-9	TEST
// we did not find a collection element in the result set, so we // ensure that a collection is created with the owner's identifier, // since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.9999999990562309	WITHOUT_CLASSIFICATION	9.254797728473484E-10	DESIGN	1.154162581822851E-11	DEFECT	5.385843506446791E-12	IMPLEMENTATION	1.2212348299250501E-12	TEST	1.4064166690661104E-13	DOCUMENTATION
// this is a collection initializer, so we must create a collection // for each of the passed-in keys, to account for the possibility // that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.9999999905934438	WITHOUT_CLASSIFICATION	6.162570906105094E-9	DESIGN	2.410944045345659E-9	DEFECT	5.454986236591797E-10	IMPLEMENTATION	2.818311457983424E-10	TEST	5.711607102775402E-12	DOCUMENTATION
// grab its state from the ResultSet and keep it in the Session // (but don't yet initialize the object itself) // note that we acquire LockMode.READ even if it was not requested	WITHOUT_CLASSIFICATION	0.9996852096992042	WITHOUT_CLASSIFICATION	3.146860249190553E-4	DESIGN	6.488810073095989E-8	TEST	2.5170539614359154E-8	DEFECT	8.974429732761813E-9	IMPLEMENTATION	5.2428067435016234E-9	DOCUMENTATION
// a many-to-many; // decrement currentDepth here to allow join across the association table // without exceeding MAX_FETCH_DEPTH (i.e. the "currentDepth - 1" bit)	WITHOUT_CLASSIFICATION	0.9996584327745046	WITHOUT_CLASSIFICATION	3.3158874656105013E-4	DESIGN	9.399987828540483E-6	DEFECT	3.5916054937386613E-7	IMPLEMENTATION	1.2707345618076628E-7	TEST	9.225710025921951E-8	DOCUMENTATION
// if not a composite key, use "foo in (?, ?, ?)" for batching // if no batch, and not a composite key, use "foo = ?"	WITHOUT_CLASSIFICATION	0.9999997949833429	WITHOUT_CLASSIFICATION	1.9719963330457959E-7	DESIGN	6.869945903523043E-9	DEFECT	3.7490526685480823E-10	TEST	3.3403678883126027E-10	DOCUMENTATION	2.3813585710642593E-10	IMPLEMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999999958465482	WITHOUT_CLASSIFICATION	2.7612741751308716E-9	DEFECT	9.694797856167877E-10	DOCUMENTATION	3.437268347635605E-10	DESIGN	6.322689192634669E-11	IMPLEMENTATION	1.574412290594799E-11	TEST
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9997261168064127	WITHOUT_CLASSIFICATION	2.095495705263459E-4	IMPLEMENTATION	6.324233978686019E-5	DESIGN	5.582297563502887E-7	DEFECT	5.119274859124508E-7	DOCUMENTATION	2.1126032000704113E-8	TEST
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9997261168064127	WITHOUT_CLASSIFICATION	2.095495705263459E-4	IMPLEMENTATION	6.324233978686019E-5	DESIGN	5.582297563502887E-7	DEFECT	5.119274859124508E-7	DOCUMENTATION	2.1126032000704113E-8	TEST
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999766652728242	WITHOUT_CLASSIFICATION	1.2448062503225997E-5	DESIGN	1.0764048408807488E-5	DEFECT	6.938381903704164E-8	TEST	3.888562182137936E-8	DOCUMENTATION	1.4346822789198556E-8	IMPLEMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999990216685887	WITHOUT_CLASSIFICATION	9.525407178214112E-7	DESIGN	1.438078338451677E-8	DEFECT	6.891192385859075E-9	IMPLEMENTATION	4.223801120108849E-9	TEST	2.9491666543298033E-10	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999998093173253	WITHOUT_CLASSIFICATION	1.8498187454977619E-7	DESIGN	3.5089023145284262E-9	IMPLEMENTATION	2.011533095576897E-9	DEFECT	9.994688141204152E-11	TEST	8.041772925027525E-11	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.41139116692226024	DOCUMENTATION	0.38195748800012463	DESIGN	0.10269272777172639	IMPLEMENTATION	0.0376612794413521	WITHOUT_CLASSIFICATION	0.035076360431814946	DEFECT	0.03122097743272162	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999992007508399	WITHOUT_CLASSIFICATION	4.30290340356289E-7	DESIGN	2.7954840539106423E-7	DEFECT	5.757936653925719E-8	IMPLEMENTATION	2.1773752705374364E-8	DOCUMENTATION	1.0057295141760182E-8	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999992007508399	WITHOUT_CLASSIFICATION	4.30290340356289E-7	DESIGN	2.7954840539106423E-7	DEFECT	5.757936653925719E-8	IMPLEMENTATION	2.1773752705374364E-8	DOCUMENTATION	1.0057295141760182E-8	TEST
//        }	WITHOUT_CLASSIFICATION	0.9999871307194609	WITHOUT_CLASSIFICATION	5.602050703178788E-6	DEFECT	4.059634805673348E-6	DESIGN	2.1531189621198875E-6	IMPLEMENTATION	5.481995245457788E-7	TEST	5.062765435482487E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9999987810363925	WITHOUT_CLASSIFICATION	1.2057418560645987E-6	DESIGN	9.307383751305161E-9	DEFECT	2.4229180873628615E-9	DOCUMENTATION	8.390414888340604E-10	IMPLEMENTATION	6.524080409817846E-10	TEST
//	WITHOUT_CLASSIFICATION	0.9964925389540502	WITHOUT_CLASSIFICATION	0.003396165902280446	DESIGN	5.570274844248664E-5	DEFECT	2.5703201205857644E-5	IMPLEMENTATION	1.6062350206812707E-5	DOCUMENTATION	1.3826843814160045E-5	TEST
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999143567886812	WITHOUT_CLASSIFICATION	6.638130084916128E-5	DESIGN	7.452198637809262E-6	DEFECT	6.730353782705592E-6	IMPLEMENTATION	4.827660297948151E-6	TEST	2.5169775112301407E-7	DOCUMENTATION
// at this point we have (drivingSqlAlias) the SQL alias of the driving table // corresponding to the given user alias.  However, the driving table is not // (necessarily) the table against which we want to apply locks.  Mainly, // the exception case here is joined-subclass hierarchies where we instead // want to apply the lock against the root table (for all other strategies, // it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.9999578941992961	WITHOUT_CLASSIFICATION	4.1314330999381574E-5	DESIGN	7.56638548992542E-7	DEFECT	3.13585821110887E-8	IMPLEMENTATION	2.8007710094494002E-9	DOCUMENTATION	6.718022483539754E-10	TEST
// the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.9999516305459671	WITHOUT_CLASSIFICATION	3.570377599484065E-5	IMPLEMENTATION	1.0055228201981757E-5	DEFECT	1.63360166936235E-6	TEST	5.596470844378427E-7	DESIGN	4.172010822523592E-7	DOCUMENTATION
// we have a mapped identifier property and the root of // the incoming property path matched that identifier // property	WITHOUT_CLASSIFICATION	0.9999984450111059	WITHOUT_CLASSIFICATION	1.1988568203758803E-6	DEFECT	3.248882495649165E-7	DESIGN	1.7000270125901075E-8	IMPLEMENTATION	1.2258120814499206E-8	DOCUMENTATION	1.9854333206365206E-9	TEST
// we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9999995594967871	WITHOUT_CLASSIFICATION	4.346865264945207E-7	DESIGN	3.30556939323537E-9	IMPLEMENTATION	9.7860519484615E-10	DEFECT	8.714159578902393E-10	DOCUMENTATION	6.610958326151623E-10	TEST
// both many-to-one and one-to-one are represented as a // Property.  EntityPersister is relying on this value to // determine "lazy fetch groups" in terms of field-level // interception.  So we need to make sure that we return // true here for the case of many-to-one and one-to-one // with lazy="no-proxy" // // * impl note - lazy="no-proxy" currently forces both // lazy and unwrap to be set to true.  The other case we // are extremely interested in here is that of lazy="proxy" // where lazy is set to true, but unwrap is set to false. // thus we use both here under the assumption that this // return is really only ever used during persister // construction to determine the lazy property/field fetch // groupings.  If that assertion changes then this check // needs to change as well.  Partially, this is an issue with // the overloading of the term "lazy" here...	WITHOUT_CLASSIFICATION	0.9995540482491351	WITHOUT_CLASSIFICATION	4.4124672386521734E-4	DEFECT	4.615298622235999E-6	DESIGN	8.630601776793687E-8	TEST	2.6995804816110616E-9	DOCUMENTATION	7.227794501148916E-10	IMPLEMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997871527513	WITHOUT_CLASSIFICATION	1.5372804331602348E-7	DESIGN	4.3376396846210734E-8	IMPLEMENTATION	8.064859639291234E-9	TEST	7.281050740962705E-9	DEFECT	3.9689817598152086E-10	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997871527513	WITHOUT_CLASSIFICATION	1.5372804331602348E-7	DESIGN	4.3376396846210734E-8	IMPLEMENTATION	8.064859639291234E-9	TEST	7.281050740962705E-9	DEFECT	3.9689817598152086E-10	DOCUMENTATION
/*rootTableName = persistentClass.getRootTable().getQualifiedName( 	WITHOUT_CLASSIFICATION	0.9969467132635912	WITHOUT_CLASSIFICATION	0.0016712377265660566	DESIGN	0.0013611476686711853	IMPLEMENTATION	1.3691754611875516E-5	DEFECT	6.023130931451446E-6	TEST	1.186455628117502E-6	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999855271149056	WITHOUT_CLASSIFICATION	8.924966051541244E-6	DESIGN	2.569093556510349E-6	IMPLEMENTATION	2.3854703874732633E-6	DEFECT	4.0880049325788267E-7	DOCUMENTATION	1.8455460567067174E-7	TEST
// Custom sql	WITHOUT_CLASSIFICATION	0.9999847660742757	WITHOUT_CLASSIFICATION	1.498573061831421E-5	DESIGN	1.5666330444786485E-7	DEFECT	4.390333097659666E-8	TEST	2.6429322679198767E-8	DOCUMENTATION	2.1199148076233813E-8	IMPLEMENTATION
/*protected void initPropertyPaths(	WITHOUT_CLASSIFICATION	0.9982934805477175	WITHOUT_CLASSIFICATION	0.0016508074224485226	DESIGN	3.404319762552181E-5	DEFECT	1.047489319454132E-5	TEST	7.199425855335438E-6	DOCUMENTATION	3.994513158547154E-6	IMPLEMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999918862629346	WITHOUT_CLASSIFICATION	2.71921166333524E-6	DEFECT	2.570350317935534E-6	IMPLEMENTATION	2.058548473821062E-6	DESIGN	3.848799860130386E-7	DOCUMENTATION	3.807466243937829E-7	TEST
//Custom SQL (would be better if these were private)	WITHOUT_CLASSIFICATION	0.7013591988072139	WITHOUT_CLASSIFICATION	0.29862963247842633	DESIGN	9.962007552624173E-6	TEST	6.38466490098857E-7	IMPLEMENTATION	4.442654925969711E-7	DOCUMENTATION	1.2397482451791106E-7	DEFECT
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999306918936381	WITHOUT_CLASSIFICATION	6.91811804085502E-5	DESIGN	8.350627449159331E-8	IMPLEMENTATION	1.9805714675742537E-8	DEFECT	1.6319818307893602E-8	TEST	7.294145817097909E-9	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999918862629346	WITHOUT_CLASSIFICATION	2.71921166333524E-6	DEFECT	2.570350317935534E-6	IMPLEMENTATION	2.058548473821062E-6	DESIGN	3.848799860130386E-7	DOCUMENTATION	3.807466243937829E-7	TEST
// aliases for identifier ( alias.id ); skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.9999999641523107	WITHOUT_CLASSIFICATION	1.9860423251754222E-8	IMPLEMENTATION	1.2427856824491798E-8	DESIGN	2.7961532025860746E-9	DEFECT	4.488938026350123E-10	TEST	3.1436212435797166E-10	DOCUMENTATION
//decide which ResultSet to get the property value from:	WITHOUT_CLASSIFICATION	0.9995476052677361	WITHOUT_CLASSIFICATION	4.3078313352665535E-4	DESIGN	2.0464766800289744E-5	DEFECT	9.381614903202938E-7	DOCUMENTATION	1.8189140215286854E-7	TEST	2.6779044391056366E-8	IMPLEMENTATION
//note: it is conceptually possible that a UserType could map null to //	WITHOUT_CLASSIFICATION	0.877655085929358	WITHOUT_CLASSIFICATION	0.12223971277716039	DESIGN	8.358770492849973E-5	DEFECT	2.118055481376617E-5	IMPLEMENTATION	4.140062194978742E-7	TEST	1.902751981724887E-8	DOCUMENTATION
// the contract of EntityTuplizer.determineConcreteSubclassEntityName says that returning null // is an indication that the specified entity-name (this.getEntityName) should be used.	WITHOUT_CLASSIFICATION	0.9609661252434817	WITHOUT_CLASSIFICATION	0.03903350576325882	DESIGN	2.8360394596164533E-7	IMPLEMENTATION	7.754083070371839E-8	DOCUMENTATION	4.512489260430877E-9	DEFECT	3.335993490926758E-9	TEST
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9975932538579262	WITHOUT_CLASSIFICATION	0.0019575724398753548	DEFECT	4.172329960200911E-4	IMPLEMENTATION	3.0830731767487996E-5	DESIGN	8.391740674934196E-7	TEST	2.708003433884768E-7	DOCUMENTATION
// cache these since they are stateless // this one could even be static...	WITHOUT_CLASSIFICATION	0.897249582679692	DESIGN	0.10273393181527221	WITHOUT_CLASSIFICATION	1.5710451461339528E-5	DEFECT	3.6193404821023763E-7	TEST	2.596812568805144E-7	IMPLEMENTATION	1.5343826922029754E-7	DOCUMENTATION
//"as" is not in KEYWORDS	WITHOUT_CLASSIFICATION	0.9992006607417834	WITHOUT_CLASSIFICATION	5.983174984954109E-4	DESIGN	1.9124035144226805E-4	DEFECT	5.1289156143343385E-6	TEST	3.960813497047228E-6	DOCUMENTATION	6.916791675634805E-7	IMPLEMENTATION
// --Commented out by Inspection (12/4/04 9:10 AM): public abstract void addCondition(String alias, String[] columns, String condition);	WITHOUT_CLASSIFICATION	0.9999987116343384	WITHOUT_CLASSIFICATION	9.127123649711094E-7	DESIGN	2.0922966064494718E-7	DEFECT	1.1303002940952336E-7	DOCUMENTATION	5.034260880213283E-8	IMPLEMENTATION	3.050997858927095E-9	TEST
//use the id column alias	WITHOUT_CLASSIFICATION	0.9999941934852163	WITHOUT_CLASSIFICATION	3.1253121325564633E-6	DESIGN	2.411412487745943E-6	IMPLEMENTATION	1.9328028327471448E-7	DOCUMENTATION	5.017302640729879E-8	DEFECT	2.633685375534525E-8	TEST
//private List aliases = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999999318842819	WITHOUT_CLASSIFICATION	3.5256578170983494E-8	IMPLEMENTATION	2.0277351683249948E-8	DEFECT	9.99868400964767E-9	TEST	1.6513026798756121E-9	DESIGN	9.31801434075354E-10	DOCUMENTATION
//columns.add(columnName); //aliases.add(tableAlias);	WITHOUT_CLASSIFICATION	0.9998959958811231	WITHOUT_CLASSIFICATION	5.0896831796096894E-5	DESIGN	3.980250921552982E-5	IMPLEMENTATION	8.587426494496025E-6	DEFECT	3.818311211473241E-6	TEST	8.990401591850156E-7	DOCUMENTATION
//where fragment must be empty!	WITHOUT_CLASSIFICATION	0.9972643526832496	WITHOUT_CLASSIFICATION	0.0027215441386011143	DESIGN	6.413303817228606E-6	IMPLEMENTATION	4.384081469763443E-6	TEST	2.5963478871319065E-6	DEFECT	7.094449752541362E-7	DOCUMENTATION
// revert to traditional hibernate behavior of setting initialPoolSize to minPoolSize // unless otherwise specified with a c3p0.*-style parameter.	WITHOUT_CLASSIFICATION	0.999705870769551	WITHOUT_CLASSIFICATION	2.925842248210494E-4	DESIGN	1.5261561935622112E-6	IMPLEMENTATION	1.657740429427772E-8	TEST	1.316400956311357E-9	DOCUMENTATION	9.556292197524329E-10	DEFECT
//arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.9999989705783062	WITHOUT_CLASSIFICATION	8.325267520696136E-7	DEFECT	1.6301076155246902E-7	DESIGN	2.2686973570546555E-8	DOCUMENTATION	1.0315357736644544E-8	IMPLEMENTATION	8.818489341516632E-10	TEST
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9979308383233605	WITHOUT_CLASSIFICATION	0.0014760854126604581	DESIGN	5.60903981628571E-4	DEFECT	2.228623940705731E-5	IMPLEMENTATION	7.682849606268012E-6	DOCUMENTATION	2.2031933370611035E-6	TEST
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9979308383233605	WITHOUT_CLASSIFICATION	0.0014760854126604581	DESIGN	5.60903981628571E-4	DEFECT	2.228623940705731E-5	IMPLEMENTATION	7.682849606268012E-6	DOCUMENTATION	2.2031933370611035E-6	TEST
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999566640098306	WITHOUT_CLASSIFICATION	2.40677712421486E-5	DESIGN	1.881498054640801E-5	DEFECT	3.873480543609828E-7	IMPLEMENTATION	4.4950244248633664E-8	TEST	2.0940082248445008E-8	DOCUMENTATION
// Essentially: // 1) If we have a local (Hibernate) transaction in progress //      and it already has the UserTransaction cached, use that //      UserTransaction to determine the status. // 2) If a transaction manager has been located, use //      that transaction manager to determine the status. // 3) Finally, as the last resort, try to lookup the //      UserTransaction via JNDI and use that to determine the //      status.	WITHOUT_CLASSIFICATION	0.9999999932276973	WITHOUT_CLASSIFICATION	5.241493108950483E-9	IMPLEMENTATION	1.5054081167521847E-9	DESIGN	2.293548734479504E-11	DEFECT	2.461066744989886E-12	DOCUMENTATION	4.925576862491006E-15	TEST
/*package*/	WITHOUT_CLASSIFICATION	0.998408487020651	WITHOUT_CLASSIFICATION	0.0015341255124436755	DESIGN	3.866327223773271E-5	IMPLEMENTATION	9.233353585650128E-6	DEFECT	7.327886436100033E-6	DOCUMENTATION	2.1629546457955846E-6	TEST
//swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.9998506908454146	WITHOUT_CLASSIFICATION	1.2629651978686906E-4	IMPLEMENTATION	1.4730585943171442E-5	DESIGN	8.104402250828777E-6	DEFECT	1.2297688283296722E-7	DOCUMENTATION	5.466972177264617E-8	TEST
// ignore it	WITHOUT_CLASSIFICATION	0.9999991187631342	WITHOUT_CLASSIFICATION	4.329554383097046E-7	DESIGN	3.478143681047223E-7	DEFECT	6.926941773587532E-8	IMPLEMENTATION	2.0206073180416303E-8	DOCUMENTATION	1.0991568583153492E-8	TEST
// we need to dirty check many-to-ones with not-found="ignore" in order  // to update the cache (not the database), since in this case a null // entity reference can lose information	WITHOUT_CLASSIFICATION	0.9999996489273358	WITHOUT_CLASSIFICATION	1.3776440224940106E-7	IMPLEMENTATION	1.2236676356483446E-7	DEFECT	8.565370850220637E-8	DESIGN	5.232867471706138E-9	DOCUMENTATION	5.492247401132257E-11	TEST
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999539835117939	WITHOUT_CLASSIFICATION	4.4715895872798974E-5	IMPLEMENTATION	1.0059883039028675E-6	DESIGN	2.3391074458465108E-7	DEFECT	3.586083584550432E-8	TEST	2.4832449029859547E-8	DOCUMENTATION
// Regions can get instantiated in the course of normal work (e.g. // a named query region will be created the first time the query is // executed), so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.9975200660576845	WITHOUT_CLASSIFICATION	0.002155758918336293	DESIGN	3.24173733967769E-4	DEFECT	6.319110764904129E-10	DOCUMENTATION	4.524453259467644E-10	IMPLEMENTATION	2.0565501384851115E-10	TEST
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9991989888156614	WITHOUT_CLASSIFICATION	7.07375429068384E-4	DESIGN	9.103675414332135E-5	IMPLEMENTATION	1.1077648276218819E-6	TEST	8.182413604190069E-7	DEFECT	6.729949388441745E-7	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999733888989112	WITHOUT_CLASSIFICATION	1.194197693338765E-5	DESIGN	1.1501866307001452E-5	IMPLEMENTATION	3.1404321395718724E-6	DEFECT	1.6598038140762294E-8	TEST	1.0227670613461638E-8	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998000925350969	WITHOUT_CLASSIFICATION	1.972285636896091E-4	DESIGN	1.3027105154951593E-6	DEFECT	6.647812996063374E-7	TEST	5.501333080756532E-7	IMPLEMENTATION	1.612760903417493E-7	DOCUMENTATION
// NOTE : this is being used from the process of shutting down a // SessionFactory. Specific things to consider: // (1) this clearing of the region should not propagate to // other nodes on the cluster (if any); this is the // cache-mode-local option bit... // (2) really just trying a best effort to cleanup after // ourselves; lock failures, etc are not critical here; // this is the fail-silently option bit...	WITHOUT_CLASSIFICATION	0.9997218461848073	DESIGN	2.352688565070566E-4	DEFECT	4.2853180665632544E-5	WITHOUT_CLASSIFICATION	1.8936151276456205E-8	IMPLEMENTATION	1.1267585426719142E-8	TEST	1.5742833588996677E-9	DOCUMENTATION
// need to extract the component values and check for subtype replacements...	WITHOUT_CLASSIFICATION	0.8254098497136737	DESIGN	0.10679973556101015	WITHOUT_CLASSIFICATION	0.06775624875856669	IMPLEMENTATION	2.2976769477601508E-5	DEFECT	8.647259197708995E-6	DOCUMENTATION	2.5419380741320956E-6	TEST
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999999998591462	WITHOUT_CLASSIFICATION	8.098856919384078E-11	DEFECT	5.445301827675318E-11	DESIGN	4.637302382769686E-12	IMPLEMENTATION	5.916989576456789E-13	TEST	1.8314133566253121E-13	DOCUMENTATION
// for now, just "re-flatten" the metamodel since this is temporary stuff anyway (HHH-1907)	WITHOUT_CLASSIFICATION	0.9172595694439322	WITHOUT_CLASSIFICATION	0.0827401199688052	DESIGN	2.130666698157422E-7	DEFECT	8.462940383491016E-8	TEST	1.0367914691172024E-8	DOCUMENTATION	2.523274333963433E-9	IMPLEMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9999599164401485	WITHOUT_CLASSIFICATION	4.002823033558062E-5	DESIGN	3.7315819844736535E-8	IMPLEMENTATION	1.303267910401522E-8	DOCUMENTATION	4.2923334583735205E-9	DEFECT	6.886833720784673E-10	TEST
//This solution would allow us to eliminate the owner arg to disassemble(), but //what if the collection was null, and then later had elements added? seems unsafe //session.getPersistenceContext().getCollectionEntry( (PersistentCollection) value ).getKey();	WITHOUT_CLASSIFICATION	0.829936311415776	DESIGN	0.16912975505535963	WITHOUT_CLASSIFICATION	8.427070927881407E-4	DEFECT	8.903995411327108E-5	IMPLEMENTATION	1.1667182997128523E-6	TEST	1.0197636633837233E-6	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999946919260125	WITHOUT_CLASSIFICATION	2.96143074927539E-6	DEFECT	1.9675807360795673E-6	DESIGN	1.7089150401466332E-7	TEST	1.6842833615156128E-7	IMPLEMENTATION	3.974266189842088E-8	DOCUMENTATION
// some collections are not lazy:	WITHOUT_CLASSIFICATION	0.9998539195701264	WITHOUT_CLASSIFICATION	6.518899443308172E-5	DESIGN	5.282711445504159E-5	DEFECT	2.6754393064724525E-5	IMPLEMENTATION	9.275134904891135E-7	TEST	3.824144302511426E-7	DOCUMENTATION
// Here we don't want to suspend the tx. If we do: // 1) We might be caching query results that reflect uncommitted // changes. No tx == no WL on cache node, so other threads // can prematurely see those query results // 2) No tx == immediate replication. More overhead, plus we // spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.9588370158644414	WITHOUT_CLASSIFICATION	0.04097577772545262	DESIGN	1.8720032419771958E-4	DEFECT	5.3308136724988156E-9	DOCUMENTATION	7.509182618205693E-10	TEST	4.176320611492164E-12	IMPLEMENTATION
// return the (fully resolved) identifier value, but do not resolve // to the actual referenced entity instance // NOTE: the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.9999999959123479	WITHOUT_CLASSIFICATION	1.9602742886757965E-9	DEFECT	1.927958903798887E-9	DESIGN	1.4761613737883447E-10	IMPLEMENTATION	4.38477918838476E-11	DOCUMENTATION	7.9549780032427E-12	TEST
// Add a zero (or quite low) timeout option so we don't block. // Ignore any TimeoutException. Basically we forego caching the // query result in order to avoid blocking. // Reads are done with suspended tx, so they should not hold the // lock for long.  Not caching the query result is OK, since // any subsequent read will just see the old result with its // out-of-date timestamp; that result will be discarded and the // db query performed again.	WITHOUT_CLASSIFICATION	0.9999965619331125	WITHOUT_CLASSIFICATION	3.159152349925889E-6	DEFECT	1.68893966291047E-7	DESIGN	1.0338342002274957E-7	IMPLEMENTATION	5.724105366536988E-9	DOCUMENTATION	9.130458955868908E-10	TEST
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9992140176772614	WITHOUT_CLASSIFICATION	6.742074799918767E-4	DESIGN	1.0810637792349118E-4	DEFECT	2.677565745249108E-6	IMPLEMENTATION	9.502152269932508E-7	TEST	4.068385087957736E-8	DOCUMENTATION
// We have the JBCWriteMutex, so no other *local* thread will  // be trying to write this key.  // It's possible here some remote thread has come in and // changed the values again, but since we are reading the // values to write to JBC right now, we know we are writing // the latest values; i.e. we don't assume that what we cached // in entry.update() above is what we should write to JBC *now*. // Our write could be redundant, i.e. we are writing what // some remote thread just came in an wrote.  There is a chance  // that yet another remote thread will update us, and we'll then // overwrite that later data in JBC.  But, all remote nodes will // ignore that change in their localCache; the only place it  // will live will be in JBC, where it can only effect the  // initial state transfer values on newly joined nodes  // (i.e. populateLocalCache()).	WITHOUT_CLASSIFICATION	0.9999999996658471	WITHOUT_CLASSIFICATION	2.9485877373135607E-10	DEFECT	3.9206120261762464E-11	DESIGN	6.317772392658311E-14	TEST	1.6048973356540823E-14	DOCUMENTATION	8.679156891422746E-15	IMPLEMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999963754226545	WITHOUT_CLASSIFICATION	2.8961432485386696E-6	DEFECT	4.56661386249826E-7	DOCUMENTATION	2.676639863248647E-7	DESIGN	3.6303029045717394E-9	IMPLEMENTATION	4.784213786332027E-10	TEST
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999963754226545	WITHOUT_CLASSIFICATION	2.8961432485386696E-6	DEFECT	4.56661386249826E-7	DOCUMENTATION	2.676639863248647E-7	DESIGN	3.6303029045717394E-9	IMPLEMENTATION	4.784213786332027E-10	TEST
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9979485159636639	WITHOUT_CLASSIFICATION	0.0010353031759329243	DEFECT	5.883914229874079E-4	DESIGN	3.7172680528995805E-4	TEST	4.61058716839354E-5	IMPLEMENTATION	9.956760441791582E-6	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9753776937759222	WITHOUT_CLASSIFICATION	0.023971904534714556	DESIGN	4.965285027718643E-4	DEFECT	1.5121170176430368E-4	IMPLEMENTATION	2.5162570155953405E-6	TEST	1.45227811236501E-7	DOCUMENTATION
// we need to obtain the lock before any actions are // executed, since this may be an inverse="true" // bidirectional association and it is one of the // earlier entity actions which actually updates // the database (this action is resposible for // second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.9999983716705931	WITHOUT_CLASSIFICATION	1.1805759877287634E-6	DESIGN	4.356230283743229E-7	IMPLEMENTATION	1.146223964517688E-8	DOCUMENTATION	4.879769634594995E-10	TEST	1.801740410797723E-10	DEFECT
//postDelete: // After actually deleting a row, record the fact that the instance no longer  // exists on the database (needed for identity-column key generation), and // remove it from the session cache	WITHOUT_CLASSIFICATION	0.9999969186351851	WITHOUT_CLASSIFICATION	3.0710696556164696E-6	DESIGN	1.0261332405944267E-8	DEFECT	1.6759003448911424E-11	TEST	9.928808472518824E-12	IMPLEMENTATION	7.139134702561378E-12	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9998817860704511	WITHOUT_CLASSIFICATION	1.1627407129149978E-4	DESIGN	1.1842794752660787E-6	DEFECT	4.120284539730255E-7	DOCUMENTATION	3.114339994145032E-7	IMPLEMENTATION	3.211632874345017E-8	TEST
//TODO find a decent name before documenting	DOCUMENTATION	0.4293803179536944	DOCUMENTATION	0.3256007334221475	WITHOUT_CLASSIFICATION	0.24166267479982745	DESIGN	0.001700437090453797	DEFECT	0.001388515177427597	IMPLEMENTATION	2.6732155644919797E-4	TEST
//FIXME we don't have the associated entity table name here, has to be done in a second pass	DEFECT	0.8207850535616553	WITHOUT_CLASSIFICATION	0.1791812318445973	DESIGN	1.7859286131897875E-5	IMPLEMENTATION	1.0156614084120569E-5	DEFECT	3.046512493011522E-6	DOCUMENTATION	2.652181038356947E-6	TEST
// For a one-to-many, a <bag> is not really a bag; // it is *really* a set, since it can't contain the // same element twice. It could be considered a bug // in the mapping dtd that <bag> allows <one-to-many>.	DEFECT	0.9765930203134833	WITHOUT_CLASSIFICATION	0.017356472217627466	DESIGN	0.005993765066251237	DEFECT	5.672552339708323E-5	IMPLEMENTATION	9.942085697160666E-9	DOCUMENTATION	6.93715523213015E-9	TEST
// RDMS does not directly support the trim() function, we use rtrim() and ltrim()	DEFECT	0.9997368488585203	WITHOUT_CLASSIFICATION	1.8807688548207974E-4	IMPLEMENTATION	5.667284110078699E-5	DESIGN	1.7682048182461623E-5	DEFECT	6.271889954938034E-7	DOCUMENTATION	9.217771887301382E-8	TEST
/*         * The following types are not supported in RDMS/JDBC and therefore commented out.         * However, in some cases, mapping them to CHARACTER columns works         * for many applications, but does not work for all cases.         */	DEFECT	0.5437442009260953	DEFECT	0.45620446954924887	WITHOUT_CLASSIFICATION	4.6038366013483826E-5	DESIGN	4.515727952269383E-6	DOCUMENTATION	5.034532678866366E-7	TEST	2.71977422009596E-7	IMPLEMENTATION
// The preference here would be //   SQLFunctionTemplate( Hibernate.TIMESTAMP, "current_timestamp(?1)", false) // but this appears not to work. // Jay Nance 2006-09-22	DEFECT	0.9583213153755578	DEFECT	0.03742106281480632	WITHOUT_CLASSIFICATION	0.00415993648095281	DESIGN	8.971302935724938E-5	IMPLEMENTATION	4.287677006319966E-6	DOCUMENTATION	3.684622319580202E-6	TEST
// note: at least my local SQL Server 2005 Express shows this not working...	DEFECT	0.8786724133099502	DEFECT	0.10689410225924599	DESIGN	0.013966181887767786	WITHOUT_CLASSIFICATION	3.841126672384929E-4	TEST	7.889821133381562E-5	IMPLEMENTATION	4.291664463767454E-6	DOCUMENTATION
// note: at least my local MySQL 5.1 install shows this not working...	DEFECT	0.9027009431756126	DEFECT	0.08711132811339253	DESIGN	0.010124399871420088	WITHOUT_CLASSIFICATION	3.513576957288984E-5	IMPLEMENTATION	2.5628642386761853E-5	TEST	2.564427615179621E-6	DOCUMENTATION
/*	DEFECT	0.9331219898232908	WITHOUT_CLASSIFICATION	0.057754742574077686	DESIGN	0.005971504224407717	DEFECT	0.0028843765675326	IMPLEMENTATION	1.6082825785869253E-4	DOCUMENTATION	1.0655855283237827E-4	TEST
//Don't need this, because we should never ever be selecting no columns in an insert ... select... //and because it causes a bug on DB2	DEFECT	0.9851063556078553	WITHOUT_CLASSIFICATION	0.014376933849682423	DEFECT	4.8041794509800525E-4	DESIGN	2.9836321777796232E-5	TEST	6.310561591870773E-6	DOCUMENTATION	1.4571399463541162E-7	IMPLEMENTATION
// TODO : this is broke for subqueries in statements other than selects...	DEFECT	0.9982610189511224	DESIGN	0.0017113384083262246	DEFECT	2.512728378852558E-5	TEST	1.4980112299338645E-6	DOCUMENTATION	8.018150684151223E-7	IMPLEMENTATION	2.155304643405736E-7	WITHOUT_CLASSIFICATION
// TODO : should this be an error?	DEFECT	0.999992050413805	DESIGN	3.820433621066964E-6	DEFECT	2.8097200996665274E-6	IMPLEMENTATION	7.469248175396216E-7	TEST	4.569131077927455E-7	DOCUMENTATION	1.1559454894293934E-7	WITHOUT_CLASSIFICATION
// TODO : not sure which (either?) is correct, could not find docs on how to do this. // did find various blogs and forums mentioning that select CURRENT_TIMESTAMP // does not work...	DEFECT	0.6414983308063112	DEFECT	0.3583886360132353	DESIGN	5.755561464108422E-5	DOCUMENTATION	5.3580981355509705E-5	TEST	1.7690669241619915E-6	IMPLEMENTATION	1.2751753275814035E-7	WITHOUT_CLASSIFICATION
// TODO: figure out how this should be set. /////////////////////////////////////////////////////////////////////////////// // This was the reason for failures regarding INDEX_OP and subclass joins on // theta-join dialects; not sure what behaviour we were trying to emulate ;) //	DEFECT	0.526278578411453	DESIGN	0.47362151062399543	DEFECT	5.6234826813805874E-5	IMPLEMENTATION	4.3087180207673676E-5	WITHOUT_CLASSIFICATION	4.1729665407182553E-7	TEST	1.7166087603329474E-7	DOCUMENTATION
//TODO: would be nice to use false, but issues with MS SQL	DEFECT	0.8348840110058687	DESIGN	0.08374990742084375	WITHOUT_CLASSIFICATION	0.059835098654215	DEFECT	0.018322653897212066	IMPLEMENTATION	0.002954822893144508	TEST	2.535061287160689E-4	DOCUMENTATION
//TODO: would be nice to use false, but issues with MS SQL	DEFECT	0.8348840110058687	DESIGN	0.08374990742084375	WITHOUT_CLASSIFICATION	0.059835098654215	DEFECT	0.018322653897212066	IMPLEMENTATION	0.002954822893144508	TEST	2.535061287160689E-4	DOCUMENTATION
// TODO: cannot use generateSuffixes() - it handles the initial suffix differently.	DEFECT	0.9993612344980916	DESIGN	3.880212383508289E-4	DEFECT	1.301813029492347E-4	IMPLEMENTATION	1.1530561062967906E-4	WITHOUT_CLASSIFICATION	3.268115187794646E-6	TEST	1.9892347909025366E-6	DOCUMENTATION
// starts with an alias (old style) // semi-bad thing about this: can't re-alias another alias.....	DEFECT	0.9807262502119513	WITHOUT_CLASSIFICATION	0.01910923621194979	DESIGN	1.625386783701476E-4	DEFECT	1.933009949576554E-6	TEST	4.118231322904936E-8	DOCUMENTATION	7.054660225447891E-10	IMPLEMENTATION
//TODO: BUG! this currently fails for named queries for non-POJO entities	DEFECT	0.9243441453566359	DESIGN	0.03662276112455003	DEFECT	0.035516351914745586	IMPLEMENTATION	0.002111891330159724	WITHOUT_CLASSIFICATION	0.0010402937409888728	TEST	3.6455653291978614E-4	DOCUMENTATION
// this call is side-effecty	DEFECT	0.9999424092041412	WITHOUT_CLASSIFICATION	5.441330813277901E-5	DESIGN	2.8994613716246035E-6	DEFECT	1.767339894209167E-7	IMPLEMENTATION	5.387577487982291E-8	TEST	4.74165901068583E-8	DOCUMENTATION
//TODO: old version did not require hashmap lookup: //keys[collectionOwner].getIdentifier()	DEFECT	0.9728739131266442	WITHOUT_CLASSIFICATION	0.024267570888426692	IMPLEMENTATION	0.0027693011762782685	DEFECT	8.836817581446718E-5	DESIGN	5.336618744722826E-7	DOCUMENTATION	3.1297096196802495E-7	TEST
//TODO: when this is the entry point, we should use an INNER_JOIN for fetching the many-to-many elements!	DEFECT	0.7783895711196614	WITHOUT_CLASSIFICATION	0.2183160778315771	DESIGN	0.00308656914529727	DEFECT	1.1708321457885032E-4	IMPLEMENTATION	5.9505181868065645E-5	DOCUMENTATION	3.11935070173151E-5	TEST
// this is only needed (afaict) for processing results from the query cache; // however, this cannot possibly work in the case of discovered types...	DEFECT	0.8258033715689862	DEFECT	0.174066255591942	WITHOUT_CLASSIFICATION	1.3018764684223408E-4	DESIGN	1.1150658722735338E-7	TEST	7.255512655010683E-8	DOCUMENTATION	1.1305157662741936E-9	IMPLEMENTATION
//TODO: this requires that the collection is defined after the //      referenced property in the mapping file (ok?)	DEFECT	0.9840416157003484	WITHOUT_CLASSIFICATION	0.007779863298057028	DESIGN	0.005184784892307275	IMPLEMENTATION	0.002755600960558328	DEFECT	1.471205432014114E-4	TEST	9.101460552758344E-5	DOCUMENTATION
//TODO: is this completely correct?	DEFECT	0.9668373146582034	DESIGN	0.03234885260104724	WITHOUT_CLASSIFICATION	4.89159996900295E-4	IMPLEMENTATION	1.8466027240110337E-4	DEFECT	1.3184695106853903E-4	TEST	8.165520379767084E-6	DOCUMENTATION
// three general cases we check here as to whether to render a physical SQL join: // 1) is our parent a DotNode as well?  If so, our property reference is // 	DEFECT	0.9999510399177354	WITHOUT_CLASSIFICATION	3.09146010229811E-5	DESIGN	1.7712810557920743E-5	DEFECT	3.2213415056135876E-7	DOCUMENTATION	9.310036489823967E-9	IMPLEMENTATION	1.2264966788389769E-9	TEST
// TODO : currently we really do not handle ValueInclusion.PARTIAL... // ValueInclusion.PARTIAL would indicate parts of a component need to // be included in the select; currently we then just render the entire // component into the select clause in that case.	DEFECT	0.9691766794172123	IMPLEMENTATION	0.028334084244046532	DESIGN	0.0024839306067422923	DEFECT	3.169749479946792E-6	WITHOUT_CLASSIFICATION	2.0788666851069513E-6	DOCUMENTATION	5.7115833714651885E-8	TEST
//TODO: inexact, what we really need to know is: are any outer joins used?	DEFECT	0.9999281413024776	DESIGN	4.0013794938403547E-5	WITHOUT_CLASSIFICATION	1.900015798011493E-5	IMPLEMENTATION	1.0448451422500889E-5	DOCUMENTATION	1.884536100687384E-6	DEFECT	5.117570805867023E-7	TEST
// todo : this call will not work for anything other than pojos!	DEFECT	0.6915062533959815	DEFECT	0.30504496156687233	WITHOUT_CLASSIFICATION	0.0020162528445074137	DESIGN	0.0014161179501450069	IMPLEMENTATION	1.041025812582866E-5	TEST	6.003984367887387E-6	DOCUMENTATION
//TODO: currently we don't know a SessionFactory reference when building the Tuplizer //      THIS IS A BUG (embedded-xml=false on component) // TODO : fix this after HHH-1907 is complete	DEFECT	0.9999996645247468	DESIGN	3.0394014893538734E-7	DEFECT	1.898184073584922E-8	IMPLEMENTATION	1.225393422518631E-8	DOCUMENTATION	2.9485555651481643E-10	TEST	4.473957297194809E-12	WITHOUT_CLASSIFICATION
// TODO: this disables laziness even in non-pojo entity modes:	DEFECT	0.9044457378037559	WITHOUT_CLASSIFICATION	0.06846790142116545	DESIGN	0.025969342275912605	IMPLEMENTATION	3.9683471283203097E-4	DOCUMENTATION	3.746720173237103E-4	TEST	3.455117690102038E-4	DEFECT
//TODO: currently broken for unique-key references (does not detect //      change to unique key property of the associated object) //the owner of the association is not the owner of the id	DEFECT	0.9102618394077739	WITHOUT_CLASSIFICATION	0.0621705169718343	DEFECT	0.01310129751610875	IMPLEMENTATION	0.007549846852863684	DOCUMENTATION	0.005857387828365337	DESIGN	0.0010591114230538953	TEST
//TODO: entities CAN be compared, by PK, fix this! -> only if/when we can extract the id values....	DEFECT	0.9943008753857185	DESIGN	0.003966574397953864	DEFECT	0.0012473879750493	IMPLEMENTATION	3.7555560781247333E-4	WITHOUT_CLASSIFICATION	8.801264444273469E-5	TEST	2.1593989023050633E-5	DOCUMENTATION
//TODO: entities CAN be compared, by PK and entity name, fix this!	DEFECT	0.9984198470654175	DESIGN	5.952292253861703E-4	DEFECT	5.003488917486443E-4	WITHOUT_CLASSIFICATION	4.53708068426361E-4	IMPLEMENTATION	2.2144696434126402E-5	TEST	8.722052587150282E-6	DOCUMENTATION
//TODO: this is kinda inconsistent with CollectionType	DEFECT	0.9798507713678306	DESIGN	0.008956020880841804	IMPLEMENTATION	0.004122744818030831	DEFECT	0.0038573499260578592	WITHOUT_CLASSIFICATION	0.0030888764300950958	TEST	1.242365771436905E-4	DOCUMENTATION
//TODO: would be nice to use false, but issues with MS SQL	DEFECT	0.8348840110058687	DESIGN	0.08374990742084375	WITHOUT_CLASSIFICATION	0.059835098654215	DEFECT	0.018322653897212066	IMPLEMENTATION	0.002954822893144508	TEST	2.535061287160689E-4	DOCUMENTATION
// TODO: does not work for EntityMode.DOM4J yet!	DEFECT	0.8978189708648475	DEFECT	0.09100806675985913	DESIGN	0.009097181357044515	IMPLEMENTATION	0.001837302032420993	TEST	2.1041487804426706E-4	DOCUMENTATION	2.806410778353194E-5	WITHOUT_CLASSIFICATION
//TODO: currently broken for unique-key references (does not detect //      change to unique key property of the associated object)	DEFECT	0.36427316605846816	WITHOUT_CLASSIFICATION	0.31079237127845943	DESIGN	0.13672567063479474	DEFECT	0.1255622346423499	IMPLEMENTATION	0.05706023000583965	DOCUMENTATION	0.005586327380088089	TEST
//TODO: not really completely correct, since //      the uoe could occur while resolving //      associations, leaving the PC in an //      inconsistent state	DEFECT	0.8140435673015566	DEFECT	0.16810474355484828	WITHOUT_CLASSIFICATION	0.012997539042998227	DESIGN	0.0036096026370464264	TEST	9.032472527464316E-4	IMPLEMENTATION	3.4130021080406453E-4	DOCUMENTATION
// could happen for custom Criteria impls.  Not likely, but... // 	DEFECT	0.8233772396587109	DESIGN	0.1657794264796117	DEFECT	0.01062453953308055	WITHOUT_CLASSIFICATION	1.6960112624032417E-4	TEST	4.7950286298805626E-5	IMPLEMENTATION	1.2429160577135451E-6	DOCUMENTATION
// This does not support the Cache SQL 'DISTINCT BY (comma-list)' extensions, // but this extension is not supported through Hibernate anyway.	DEFECT	0.999694475623708	WITHOUT_CLASSIFICATION	3.035082518587574E-4	DESIGN	1.7989946167743425E-6	DEFECT	1.5649385078707194E-7	TEST	3.5428566272644586E-8	DOCUMENTATION	2.520739957800956E-8	IMPLEMENTATION
// note that this timestamp is not correct if the connection provider // returns an older JDBC connection that was associated with a // transaction that was already begun before openSession() was called // (don't know any possible solution to this!)	DEFECT	0.977384406292264	WITHOUT_CLASSIFICATION	0.017183898384054937	DESIGN	0.004249356511095214	IMPLEMENTATION	0.0011772270404936116	DEFECT	4.06737867581978E-6	TEST	1.0443934164600602E-6	DOCUMENTATION
//no need to take a snapshot - this is a  //performance optimization, but not really //important, except for entities with huge  //mutable property values	DEFECT	0.9958594661615673	WITHOUT_CLASSIFICATION	0.0035970369366599385	DEFECT	5.386993016049078E-4	DESIGN	2.3127366033639296E-6	TEST	2.128148018553788E-6	DOCUMENTATION	3.5671554579362383E-7	IMPLEMENTATION
// TODO : this really needs to be delayed unitl after we definitively know the operand node type; // where this is currently a problem is parameters for which where we cannot unequivocally // resolve an expected type	DEFECT	0.9510457627289737	DESIGN	0.025006259359004746	DEFECT	0.019150409675056386	WITHOUT_CLASSIFICATION	0.004177292941610764	IMPLEMENTATION	6.149218507382784E-4	DOCUMENTATION	5.353444616108494E-6	TEST
// First, validate all the enabled filters... //TODO: this implementation has bad performance	DEFECT	0.9996462050395494	IMPLEMENTATION	1.931231831324616E-4	DESIGN	1.241164101530418E-4	DEFECT	3.4703359797843154E-5	WITHOUT_CLASSIFICATION	1.2199753940815096E-6	DOCUMENTATION	6.320319731787393E-7	TEST
// TODO: what if batchUpdate is a callablestatement ? // calls executeBatch()	DEFECT	0.38737277743292026	DESIGN	0.31860460511451766	WITHOUT_CLASSIFICATION	0.192920575600561	DEFECT	0.08683843450525451	IMPLEMENTATION	0.014105400173340358	TEST	1.5820717340632567E-4	DOCUMENTATION
// assume that the row was not there since it previously had only null // values, so do an INSERT instead //TODO: does not respect dynamic-insert	DEFECT	0.9999766997792199	WITHOUT_CLASSIFICATION	1.9352617594430905E-5	DEFECT	2.7093474194222982E-6	DESIGN	8.936453136885143E-7	TEST	2.1209364429647384E-7	DOCUMENTATION	1.3251680842216727E-7	IMPLEMENTATION
//TODO: passing null here, because this method is not really used for DOM4J at the moment //      but it is still a bug, if we don't get rid of this!	DEFECT	0.9732941384099795	DESIGN	0.013895029470892566	DEFECT	0.006804707514942494	IMPLEMENTATION	0.0054382736435603	WITHOUT_CLASSIFICATION	5.041885808838573E-4	TEST	6.366237974126754E-5	DOCUMENTATION
//note that this implementation is kinda broken //for components with many-to-one associations	DEFECT	0.9968897965462157	WITHOUT_CLASSIFICATION	0.0027442454044774383	DESIGN	2.8783577226655746E-4	DEFECT	6.671873215721275E-5	TEST	1.0034129796734247E-5	IMPLEMENTATION	1.3694150863218186E-6	DOCUMENTATION
// TODO: at the point where we are resolving collection references, we don't // know if the uk value has been resolved (depends if it was earlier or // later in the mapping document) - now, we could try and use e.getStatus() // to decide to semiResolve(), trouble is that initializeEntity() reuses // the same array for resolved and hydrated values	DEFECT	0.9941391707282589	DESIGN	0.0038916596875805966	DEFECT	0.0018282799774989947	IMPLEMENTATION	1.3282461764812516E-4	DOCUMENTATION	8.0161299893559E-6	WITHOUT_CLASSIFICATION	4.885902386162073E-8	TEST
//TODO: This is assertion is disabled because there is a bug that means the //	DEFECT	0.9720041191967858	WITHOUT_CLASSIFICATION	0.025536333310953417	DEFECT	0.001252941614289291	IMPLEMENTATION	0.0010700604245410068	DESIGN	1.3468931286143024E-4	TEST	1.856140569107637E-6	DOCUMENTATION
// This doesn't actually seem to work but it *might* // work on some dbs. Also it doesn't work if there // are multiple columns of results because it // is not accounting for the suffix: // return new String[] { getDiscriminatorColumnName() };	DEFECT	0.9201109159601515	DESIGN	0.07977499623231137	WITHOUT_CLASSIFICATION	1.1407429959627236E-4	DEFECT	1.1467286665697028E-8	TEST	2.033955869688667E-9	DOCUMENTATION	6.69833630209926E-12	IMPLEMENTATION
// TODO: Deal with the "optional" attribute in the <join> mapping; // this code assumes that optional defaults to "true" because it // doesn't actually seem to work in the fetch="join" code // // Note that actual proper handling of optional-ality here is actually // more involved than this patch assumes.  Remember that we might have // multiple <join/> mappings associated with a single entity.  Really // a couple of things need to happen to properly handle optional here: //  1) First and foremost, when handling multiple <join/>s, we really //      should be using the entity root table as the driving table; //      another option here would be to choose some non-optional joined //      table to use as the driving table.  In all likelihood, just using //      the root table is much simplier //  2) Need to add the FK columns corresponding to each joined table //      to the generated select list; these would then be used when //      iterating the result set to determine whether all non-optional //      data is present // My initial thoughts on the best way to deal with this would be // to introduce a new SequentialSelect abstraction that actually gets // generated in the persisters (ok, SingleTable...) and utilized here. // It would encapsulated all this required optional-ality checking...	DEFECT	0.9995183153742137	DESIGN	4.247104447010377E-4	DEFECT	3.735527518371386E-5	WITHOUT_CLASSIFICATION	1.6596936724060564E-5	IMPLEMENTATION	1.5176763556460663E-6	DOCUMENTATION	1.5042928219258289E-6	TEST
// todo : what else to do here?	DESIGN	0.936031938310651	WITHOUT_CLASSIFICATION	0.06028412676645227	IMPLEMENTATION	0.0035586351943905337	DESIGN	1.1249102212584295E-4	DEFECT	9.120482597958121E-6	TEST	3.6882237823451166E-6	DOCUMENTATION
//put() has nowait semantics, is this really appropriate? //note that it needs to be async replication, never local or sync	DESIGN	0.9595943585785318	WITHOUT_CLASSIFICATION	0.039694386620597995	DESIGN	6.846393356662716E-4	DEFECT	1.783312148409934E-5	IMPLEMENTATION	8.546273409645795E-6	DOCUMENTATION	2.3607031001690589E-7	TEST
// 'hibernate.temp.use_jdbc_metadata_defaults' is a temporary magic value. // The need for it is intended to be alleviated with future developement, thus it is // not defined as an Environment constant... // // it is used to control whether we should consult the JDBC metadata to determine // certain Settings default values; it is useful to *not* do this when the database // may not be available (mainly in tools usage).	DESIGN	0.8096212596990401	WITHOUT_CLASSIFICATION	0.19037873530693353	DESIGN	2.4663045376770556E-9	DEFECT	2.3395556026320262E-9	TEST	1.881263094372625E-10	DOCUMENTATION	3.990912932057465E-14	IMPLEMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.9829307983171532	DESIGN	0.017016013008992876	WITHOUT_CLASSIFICATION	2.9511947642352463E-5	IMPLEMENTATION	1.3115625838993285E-5	DEFECT	6.848133862244692E-6	TEST	3.7129665103348577E-6	DOCUMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.9829307983171532	DESIGN	0.017016013008992876	WITHOUT_CLASSIFICATION	2.9511947642352463E-5	IMPLEMENTATION	1.3115625838993285E-5	DEFECT	6.848133862244692E-6	TEST	3.7129665103348577E-6	DOCUMENTATION
// todo : eventually merge this with TreeCache and just add optional opt-lock support there.	DESIGN	0.9746249008556916	WITHOUT_CLASSIFICATION	0.025170823575812556	IMPLEMENTATION	2.0210116720562884E-4	DESIGN	1.7033550176355816E-6	DOCUMENTATION	4.1214388534719446E-7	TEST	5.890238717912525E-8	DEFECT
// can happen because of the multiple ways Cache.remove() // can be invoked :(	DESIGN	0.999997493776221	WITHOUT_CLASSIFICATION	2.2184541464801672E-6	DESIGN	2.8504936457702277E-7	DEFECT	1.3571029022636018E-9	DOCUMENTATION	1.0338567814751769E-9	IMPLEMENTATION	3.2930815441223743E-10	TEST
// work around the "feature" where tree cache is validating the // inserted node during the next transaction.  no idea...	DESIGN	0.7122712483486411	DESIGN	0.2765383727962106	WITHOUT_CLASSIFICATION	0.011183525718740962	DEFECT	2.8982793302011577E-6	IMPLEMENTATION	2.065720980339731E-6	DOCUMENTATION	1.8891360969533495E-6	TEST
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.9998775688216921	DESIGN	7.150160571681219E-5	WITHOUT_CLASSIFICATION	2.99959611899448E-5	DOCUMENTATION	2.052012853454902E-5	DEFECT	3.448934195492264E-7	TEST	6.858944692912986E-8	IMPLEMENTATION
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.9998775688216921	DESIGN	7.150160571681219E-5	WITHOUT_CLASSIFICATION	2.99959611899448E-5	DOCUMENTATION	2.052012853454902E-5	DEFECT	3.448934195492264E-7	TEST	6.858944692912986E-8	IMPLEMENTATION
// FIXME Hacky workaround to JBCACHE-1202	DESIGN	0.99993458025036	DESIGN	6.484877645485274E-5	DEFECT	5.119127301492843E-7	IMPLEMENTATION	4.934065380246773E-8	DOCUMENTATION	6.3012354499080525E-9	TEST	3.4185657455268806E-9	WITHOUT_CLASSIFICATION
// FIXME Hacky workaround to JBCACHE-1202	DESIGN	0.99993458025036	DESIGN	6.484877645485274E-5	DEFECT	5.119127301492843E-7	IMPLEMENTATION	4.934065380246773E-8	DOCUMENTATION	6.3012354499080525E-9	TEST	3.4185657455268806E-9	WITHOUT_CLASSIFICATION
// TODO: I considered validating TS cache config here, // but decided to defer unti getTimestampsCacheInstance() in case the  // cache is never actually used	DESIGN	0.9408430848229995	IMPLEMENTATION	0.042172590356361464	DESIGN	0.01691858377378804	WITHOUT_CLASSIFICATION	5.081505242565844E-5	DEFECT	1.3349112679505409E-5	DOCUMENTATION	1.576881745841043E-6	TEST
// TODO Is this a valid operation on a timestamps cache?	DESIGN	0.9954972525716567	DESIGN	0.0021521187989863542	WITHOUT_CLASSIFICATION	0.0021303047549975545	IMPLEMENTATION	1.2481780549377085E-4	TEST	6.199023866232502E-5	DEFECT	3.351583020327512E-5	DOCUMENTATION
// TODO Is this a valid operation on a timestamps cache?	DESIGN	0.9954972525716567	DESIGN	0.0021521187989863542	WITHOUT_CLASSIFICATION	0.0021303047549975545	IMPLEMENTATION	1.2481780549377085E-4	TEST	6.199023866232502E-5	DEFECT	3.351583020327512E-5	DOCUMENTATION
// TODO Why not use the timestamp in a DataVersion?	DESIGN	0.9972740144442404	DESIGN	0.002648852399889246	IMPLEMENTATION	5.231349319435709E-5	DEFECT	1.9461039381610964E-5	DOCUMENTATION	5.029804411949862E-6	TEST	3.2881888234156267E-7	WITHOUT_CLASSIFICATION
// can happen because of the multiple ways Cache.remove() // can be invoked :(	DESIGN	0.999997493776221	WITHOUT_CLASSIFICATION	2.2184541464801672E-6	DESIGN	2.8504936457702277E-7	DEFECT	1.3571029022636018E-9	DOCUMENTATION	1.0338567814751769E-9	IMPLEMENTATION	3.2930815441223743E-10	TEST
// work around the "feature" where tree cache is validating the // inserted node during the next transaction. no idea...	DESIGN	0.6145274016822481	DESIGN	0.3788491749610997	WITHOUT_CLASSIFICATION	0.006616866340322098	DEFECT	2.8606855874096403E-6	IMPLEMENTATION	2.0586000164664125E-6	DOCUMENTATION	1.6377307262936308E-6	TEST
//swaldman 2004-02-07: modify to allow null values to signify fall through to c3p0 PoolConfig defaults	DESIGN	0.9987491068128058	WITHOUT_CLASSIFICATION	0.0011401870630331381	DESIGN	1.1045983653371863E-4	DEFECT	1.3096386310754466E-7	DOCUMENTATION	6.092528100254325E-8	TEST	5.439848299736984E-8	IMPLEMENTATION
// turn hibernate.c3p0.* into c3p0.*, so c3p0 // gets a chance to see all hibernate.c3p0.*	DESIGN	0.9999940449365903	WITHOUT_CLASSIFICATION	5.954634070349999E-6	DESIGN	3.034897053215594E-10	DEFECT	6.483978190972355E-11	DOCUMENTATION	3.309337416096181E-11	TEST	2.7916609066115716E-11	IMPLEMENTATION
//TODO: this bit actually has to be called after all cascades! //      but since identity insert is called *synchronously*, //      instead of asynchronously as other actions, it isn't	DESIGN	0.9980418212796639	WITHOUT_CLASSIFICATION	0.0015463156275123948	DESIGN	3.092316927213575E-4	DEFECT	8.789908922542439E-5	IMPLEMENTATION	7.982002537884078E-6	DOCUMENTATION	6.750308338994187E-6	TEST
//TODO: reenable if we also fix the above todo	DESIGN	0.8582056383454937	DESIGN	0.1382688223647982	WITHOUT_CLASSIFICATION	0.0015144498650136807	IMPLEMENTATION	0.0014115183842422414	TEST	4.053482952035332E-4	DEFECT	1.9422274524873452E-4	DOCUMENTATION
//TODO: inefficient if that cache is just going to ignore the updated state!	DESIGN	0.916675920754894	WITHOUT_CLASSIFICATION	0.07097210606438732	IMPLEMENTATION	0.012318043039966215	DESIGN	2.71380519343416E-5	TEST	6.369596611814719E-6	DOCUMENTATION	4.2249220639312417E-7	DEFECT
// we may be screwed here since the collection action is about to execute // and we do not know the final owner key value	DESIGN	0.9999614861074049	WITHOUT_CLASSIFICATION	3.84436081006339E-5	DESIGN	6.326995825338158E-8	DEFECT	6.160165137420073E-9	IMPLEMENTATION	5.464020812573213E-10	TEST	3.079689341698811E-10	DOCUMENTATION
/** Create an action that will evict collection and entity regions based on queryspaces (table names).	DESIGN	0.5960859189945116	WITHOUT_CLASSIFICATION	0.34401237236922794	DESIGN	0.05592833619311124	IMPLEMENTATION	0.0034540641641498527	DEFECT	3.0426104972771945E-4	TEST	2.1504722927179597E-4	DOCUMENTATION
// todo : what else to do here?	DESIGN	0.936031938310651	WITHOUT_CLASSIFICATION	0.06028412676645227	IMPLEMENTATION	0.0035586351943905337	DESIGN	1.1249102212584295E-4	DEFECT	9.120482597958121E-6	TEST	3.6882237823451166E-6	DOCUMENTATION
// todo : modify the class definition if not already transformed...	DESIGN	0.9966470943310386	WITHOUT_CLASSIFICATION	0.0027171856823245536	DESIGN	6.191887002564876E-4	IMPLEMENTATION	1.4703748141746474E-5	DEFECT	1.007617744414665E-6	DOCUMENTATION	8.199204942995519E-7	TEST
// todo : what else to do here?	DESIGN	0.936031938310651	WITHOUT_CLASSIFICATION	0.06028412676645227	IMPLEMENTATION	0.0035586351943905337	DESIGN	1.1249102212584295E-4	DEFECT	9.120482597958121E-6	TEST	3.6882237823451166E-6	DOCUMENTATION
// this is called by SessionFactory irregardless; we just disregard here; // could also add a check to SessionFactory to only conditionally call start	DESIGN	0.8804683963228481	WITHOUT_CLASSIFICATION	0.11950566132358174	DESIGN	1.8983595041299828E-5	IMPLEMENTATION	3.7312038054479306E-6	DEFECT	2.061967498348436E-6	DOCUMENTATION	1.165587225099579E-6	TEST
// this is called by SessionFactory irregardless; we just disregard here; // could also add a check to SessionFactory to only conditionally call stop	DESIGN	0.983417190803584	WITHOUT_CLASSIFICATION	0.016570301423738255	DESIGN	7.92514288373652E-6	IMPLEMENTATION	3.407969253542676E-6	DEFECT	6.755758674744266E-7	DOCUMENTATION	4.990846728275407E-7	TEST
//TODO: to handle concurrent writes correctly, this should return a Lock to the client	DESIGN	0.998974066037741	DESIGN	9.163836298545068E-4	DEFECT	4.767304050384172E-5	IMPLEMENTATION	2.357442615718208E-5	DOCUMENTATION	2.237555532097591E-5	WITHOUT_CLASSIFICATION	1.592731042240846E-5	TEST
//put() has nowait semantics, is this really appropriate? //note that it needs to be async replication, never local or sync	DESIGN	0.9595943585785318	WITHOUT_CLASSIFICATION	0.039694386620597995	DESIGN	6.846393356662716E-4	DEFECT	1.783312148409934E-5	IMPLEMENTATION	8.546273409645795E-6	DOCUMENTATION	2.3607031001690589E-7	TEST
//TODO: to handle concurrent writes correctly, the client should pass in a Lock	DESIGN	0.9857250813388672	DESIGN	0.010145869081459237	DEFECT	0.0031410083969488456	WITHOUT_CLASSIFICATION	5.312896988469702E-4	IMPLEMENTATION	2.405831201595141E-4	TEST	2.1616836371827783E-4	DOCUMENTATION
//TODO: assumes all collections disassemble to an array!	DESIGN	0.999870228304111	WITHOUT_CLASSIFICATION	8.642952074634474E-5	DEFECT	3.1996101996658817E-5	IMPLEMENTATION	6.143929929996755E-6	DESIGN	4.429599718824235E-6	TEST	7.725434972043263E-7	DOCUMENTATION
//TODO: reuse the PreLoadEvent	DESIGN	0.6118657394578334	WITHOUT_CLASSIFICATION	0.2940536314121034	IMPLEMENTATION	0.0926730605755193	DESIGN	0.0011709731713023274	DOCUMENTATION	1.558433138773947E-4	TEST	8.075206936408993E-5	DEFECT
// todo: this was added to support initializing an entity's EntityEntry snapshot during reattach; // this should be refactored to instead expose a method to assemble a EntityEntry based on this // state for return.	DESIGN	0.9977953491387624	DESIGN	0.0022043884422526484	WITHOUT_CLASSIFICATION	1.5928142858591683E-7	DEFECT	1.0021021971231605E-7	TEST	2.340817521721864E-9	IMPLEMENTATION	5.865191276357169E-10	DOCUMENTATION
// todo : what is the implication of this?	DESIGN	0.9972351673863449	WITHOUT_CLASSIFICATION	0.001626628141776008	DESIGN	6.130234990491042E-4	DOCUMENTATION	3.085083729584239E-4	DEFECT	1.9931822962687183E-4	IMPLEMENTATION	1.7354370244775123E-5	TEST
// use COUNT as the default.  This mimics the old behavior, although // NONE might be a better option moving forward in the case of callable	DESIGN	0.6435272579005769	WITHOUT_CLASSIFICATION	0.3564644748839949	DESIGN	8.193911630292572E-6	DEFECT	3.4861270136414944E-8	TEST	3.457932619968671E-8	IMPLEMENTATION	3.863201393667206E-9	DOCUMENTATION
/* TODO: joinKeyColumnName & foreignKeyColumnName should be called either here or at a	DESIGN	0.6338608468505109	DESIGN	0.35606390361009965	IMPLEMENTATION	0.004646263566176237	DEFECT	0.004182898544603836	WITHOUT_CLASSIFICATION	0.0010494380014749074	TEST	1.966494271346537E-4	DOCUMENTATION
//TODO: suck this into initLaziness!	DESIGN	0.9847973959609003	DESIGN	0.0067356287819576085	IMPLEMENTATION	0.005656571458768521	WITHOUT_CLASSIFICATION	0.0014183576261973885	DEFECT	8.010328267254098E-4	DOCUMENTATION	5.910133454506812E-4	TEST
// we have to set up the table later!! yuck	DESIGN	0.9982521120236254	WITHOUT_CLASSIFICATION	0.00173964108518296	DESIGN	7.140508289221511E-6	DEFECT	9.219406006615818E-7	IMPLEMENTATION	1.2585932095820434E-7	TEST	5.858298068436118E-8	DOCUMENTATION
//TODO: better to degrade to lazy="false" if uninstrumented	DESIGN	0.9606374524399964	IMPLEMENTATION	0.03166721399226929	WITHOUT_CLASSIFICATION	0.006368981226672925	DESIGN	6.00799394657301E-4	TEST	4.930308025319681E-4	DOCUMENTATION	2.3252214387220908E-4	DEFECT
// todo : again, how *should* this work for non-pojo entities?	DESIGN	0.9365471273622703	DESIGN	0.05509099263030378	WITHOUT_CLASSIFICATION	0.006518835606484307	IMPLEMENTATION	0.0018039712936283828	DEFECT	2.7107777370617767E-5	TEST	1.1965329942713652E-5	DOCUMENTATION
// TODO: this is a bit of copy/paste from IndexedCollection.createPrimaryKey()	DESIGN	0.8048101743637729	IMPLEMENTATION	0.18114834802283686	DESIGN	0.01304731822128239	DEFECT	8.052257529322864E-4	WITHOUT_CLASSIFICATION	1.8266348656345105E-4	TEST	6.270152612076628E-6	DOCUMENTATION
// This inner class implements a case statement....perhaps im being a bit over-clever here	DESIGN	0.9963834033543504	DESIGN	0.003113475468030639	WITHOUT_CLASSIFICATION	4.7748708175774973E-4	IMPLEMENTATION	2.4118847456529473E-5	DEFECT	1.4230898467631818E-6	TEST	9.215855797966675E-8	DOCUMENTATION
//TODO: bad implementation, cos it depends upon ordering of mapping doc //      fixing this requires that Collection/PersistentClass gain access //      to the Mappings reference from Configuration (or the filterDefinitions //      map directly) sometime during Configuration.buildSessionFactory //      (after all the types/filter-defs are known and before building //      persisters).	DESIGN	0.9993648621150935	DESIGN	6.237616569224696E-4	IMPLEMENTATION	1.0024126003432082E-5	DEFECT	7.523123266912006E-7	DOCUMENTATION	5.453465292294709E-7	WITHOUT_CLASSIFICATION	5.44431247626919E-8	TEST
//use of a stringbuffer to workaround a JDK bug	DESIGN	0.9986895006422195	DESIGN	0.0011738385986373942	WITHOUT_CLASSIFICATION	1.2412141910659612E-4	DEFECT	1.011270282929725E-5	IMPLEMENTATION	2.182079036366066E-6	DOCUMENTATION	2.4455817093959067E-7	TEST
// hack/workaround as sqlquery impl depend on having a key.	DESIGN	0.9999963075347477	DESIGN	3.3441953461087293E-6	DEFECT	2.930047519127482E-7	IMPLEMENTATION	4.9274737156084655E-8	WITHOUT_CLASSIFICATION	4.001972161877572E-9	TEST	1.9884450531546826E-9	DOCUMENTATION
//FIXME: get the PersistentClass	DESIGN	0.7332435551337529	WITHOUT_CLASSIFICATION	0.1571750629994056	DESIGN	0.10573587714791077	IMPLEMENTATION	0.002355156665680482	TEST	0.0013527066261271898	DEFECT	1.37641427122963E-4	DOCUMENTATION
//FIXME: get the PersistentClass	DESIGN	0.7332435551337529	WITHOUT_CLASSIFICATION	0.1571750629994056	DESIGN	0.10573587714791077	IMPLEMENTATION	0.002355156665680482	TEST	0.0013527066261271898	DEFECT	1.37641427122963E-4	DOCUMENTATION
//Icky workaround for MySQL bug:	DESIGN	0.9975642324286261	DESIGN	0.0017845396322556464	WITHOUT_CLASSIFICATION	6.342262715949859E-4	DEFECT	7.978705069001056E-6	IMPLEMENTATION	7.589502957866746E-6	DOCUMENTATION	1.4334594963000345E-6	TEST
//TODO: Somehow add the newly created foreign keys to the internal collection	DESIGN	0.7881741077793107	WITHOUT_CLASSIFICATION	0.20815442954152705	IMPLEMENTATION	0.0018278260218247196	DEFECT	0.001271467936039768	DOCUMENTATION	5.470525855792407E-4	DESIGN	2.511613571844317E-5	TEST
//TODO possibly relax that	DESIGN	0.6488873201591506	WITHOUT_CLASSIFICATION	0.3495152520240342	DESIGN	0.0012922155107361764	IMPLEMENTATION	1.6200987861151017E-4	DOCUMENTATION	9.154575808969482E-5	TEST	5.165666937776939E-5	DEFECT
//TODO possibly relax that	DESIGN	0.6488873201591506	WITHOUT_CLASSIFICATION	0.3495152520240342	DESIGN	0.0012922155107361764	IMPLEMENTATION	1.6200987861151017E-4	DOCUMENTATION	9.154575808969482E-5	TEST	5.165666937776939E-5	DEFECT
//TODO possibly relax that	DESIGN	0.6488873201591506	WITHOUT_CLASSIFICATION	0.3495152520240342	DESIGN	0.0012922155107361764	IMPLEMENTATION	1.6200987861151017E-4	DOCUMENTATION	9.154575808969482E-5	TEST	5.165666937776939E-5	DEFECT
//use of a stringbuffer to workaround a JDK bug	DESIGN	0.9986895006422195	DESIGN	0.0011738385986373942	WITHOUT_CLASSIFICATION	1.2412141910659612E-4	DEFECT	1.011270282929725E-5	IMPLEMENTATION	2.182079036366066E-6	DOCUMENTATION	2.4455817093959067E-7	TEST
//use a degenerated strategy for backward compatibility	DESIGN	0.9997836280434603	WITHOUT_CLASSIFICATION	2.1200136004572977E-4	DESIGN	4.014896175969348E-6	IMPLEMENTATION	1.7662915988451575E-7	DEFECT	1.3712129980444117E-7	TEST	4.194985822128682E-8	DOCUMENTATION
// Sets can be just a view of a part of another collection. // do we need to copy it to be sure it won't be changing // underneath us? // ie. this.set.addAll(set);	DESIGN	0.9853581010232647	WITHOUT_CLASSIFICATION	0.012645030999361703	DESIGN	0.0011743100168236456	DEFECT	8.185561840228604E-4	IMPLEMENTATION	3.555304048520265E-6	TEST	4.4647247848397233E-7	DOCUMENTATION
//note that i parameter is now unused (delete it?)	DESIGN	0.9921820296962357	WITHOUT_CLASSIFICATION	0.007650982541685701	DESIGN	1.593752325908758E-4	IMPLEMENTATION	4.879875646214498E-6	TEST	2.6688859907606625E-6	DEFECT	6.37678507201425E-8	DOCUMENTATION
//just to help out during the load (ugly, i know)	DESIGN	0.9935868083911772	WITHOUT_CLASSIFICATION	0.0042534341953318604	DESIGN	0.0020224439341443978	IMPLEMENTATION	1.135193176630288E-4	DEFECT	1.5768382982367054E-5	TEST	8.02577870125138E-6	DOCUMENTATION
// TODO : safe to interpret "map.remove(key) == null" as non-dirty?	DESIGN	0.5175304106097066	DESIGN	0.39347623688667416	DEFECT	0.07588044786167014	IMPLEMENTATION	0.0128749606932902	WITHOUT_CLASSIFICATION	1.4296635996709656E-4	DOCUMENTATION	9.497758869187667E-5	TEST
// yick!  need this for proper serialization/deserialization handling...	DESIGN	0.6530478246104252	WITHOUT_CLASSIFICATION	0.2542036957267317	DEFECT	0.08846865452573531	DESIGN	0.0030679117608795464	DOCUMENTATION	0.0010470185054527613	TEST	1.648948707755745E-4	IMPLEMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.9829307983171532	DESIGN	0.017016013008992876	WITHOUT_CLASSIFICATION	2.9511947642352463E-5	IMPLEMENTATION	1.3115625838993285E-5	DEFECT	6.848133862244692E-6	TEST	3.7129665103348577E-6	DOCUMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.9829307983171532	DESIGN	0.017016013008992876	WITHOUT_CLASSIFICATION	2.9511947642352463E-5	IMPLEMENTATION	1.3115625838993285E-5	DEFECT	6.848133862244692E-6	TEST	3.7129665103348577E-6	DOCUMENTATION
//yuck!	DESIGN	0.975819247398043	WITHOUT_CLASSIFICATION	0.0235872538573771	DESIGN	5.206124219492597E-4	DEFECT	5.1581407382818404E-5	DOCUMENTATION	1.5069056525786272E-5	TEST	6.235858721922454E-6	IMPLEMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.9829307983171532	DESIGN	0.017016013008992876	WITHOUT_CLASSIFICATION	2.9511947642352463E-5	IMPLEMENTATION	1.3115625838993285E-5	DEFECT	6.848133862244692E-6	TEST	3.7129665103348577E-6	DOCUMENTATION
// TODO : not sure this is correct, could not find docs on how to do this.	DESIGN	0.9968208233289693	DESIGN	0.003174061079058196	DEFECT	3.116247168916803E-6	DOCUMENTATION	9.630356155050182E-7	TEST	9.614410983367303E-7	IMPLEMENTATION	7.486808969409647E-8	WITHOUT_CLASSIFICATION
//HSQL has no Blob/Clob support .... but just put these here for now!	DESIGN	0.9997103382774967	WITHOUT_CLASSIFICATION	2.5372312216023334E-4	DESIGN	3.274361070557904E-5	IMPLEMENTATION	1.9458791317478925E-6	TEST	9.991210411704894E-7	DEFECT	2.499894645078383E-7	DOCUMENTATION
// does this need holdlock also? : return tableName + " with (updlock, rowlock, holdlock)";	DESIGN	0.7841594314809427	WITHOUT_CLASSIFICATION	0.21546909637758532	DESIGN	1.9003695089458847E-4	DEFECT	1.0703306090787379E-4	TEST	7.08422022331578E-5	IMPLEMENTATION	3.559927436436354E-6	DOCUMENTATION
// sql-server, at least needed this dropped after use; strange!	DESIGN	0.9922191265133675	WITHOUT_CLASSIFICATION	0.007715942155086942	DESIGN	4.472770132230194E-5	TEST	1.753596325148225E-5	IMPLEMENTATION	1.8495827101759251E-6	DOCUMENTATION	8.180842615441022E-7	DEFECT
// todo : is there really any reason to kkeep trying if this fails once?	DESIGN	0.7082651972323025	WITHOUT_CLASSIFICATION	0.20603046080096268	DESIGN	0.08566117596912923	DEFECT	2.3561122144198666E-5	TEST	1.603623275019401E-5	DOCUMENTATION	3.568642711301746E-6	IMPLEMENTATION
// TBD should this be varbinary($1)? //	DESIGN	0.9831755369503542	WITHOUT_CLASSIFICATION	0.01673191140341025	DESIGN	4.6296351826303624E-5	DEFECT	3.75555489386561E-5	IMPLEMENTATION	7.474368239232011E-6	TEST	1.2253772313637202E-6	DOCUMENTATION
// is it necessary to register %exact since it can only appear in a where clause?	DESIGN	0.9814070586180148	WITHOUT_CLASSIFICATION	0.018510721376661866	DESIGN	6.491540593664125E-5	DEFECT	1.6177941453670313E-5	IMPLEMENTATION	6.327269349849739E-7	DOCUMENTATION	4.939309980627585E-7	TEST
// xmlforest requires a new kind of function constructor	DESIGN	0.9999436611375941	WITHOUT_CLASSIFICATION	3.937352814864857E-5	IMPLEMENTATION	9.095667904097992E-6	DESIGN	6.924451119664683E-6	DEFECT	9.163954684474812E-7	TEST	2.881976494406619E-8	DOCUMENTATION
// Does this dialect support the ALTER TABLE syntax?	DESIGN	0.9997924948117546	WITHOUT_CLASSIFICATION	1.689590472632844E-4	DESIGN	3.4062522483625646E-5	IMPLEMENTATION	2.1154849868694262E-6	DEFECT	1.7160251057100187E-6	DOCUMENTATION	6.521084060000542E-7	TEST
// Do we need to qualify index names with the schema name?	DESIGN	0.9890401893107895	WITHOUT_CLASSIFICATION	0.009743139461580624	IMPLEMENTATION	9.235132263946832E-4	DESIGN	1.516838546311765E-4	DOCUMENTATION	9.261535109096898E-5	DEFECT	4.8858795512965274E-5	TEST
// Does this dialect support the UNIQUE column syntax?	DESIGN	0.9992612970000502	WITHOUT_CLASSIFICATION	4.592366479761202E-4	IMPLEMENTATION	2.7061274546552984E-4	DESIGN	3.7429615802223897E-6	DOCUMENTATION	3.735965622455824E-6	DEFECT	1.3746793055534936E-6	TEST
// Does this dialect support check constraints?	DESIGN	0.9996137804767125	WITHOUT_CLASSIFICATION	3.032187504562692E-4	IMPLEMENTATION	7.693514159397866E-5	DESIGN	3.88418148150954E-6	DOCUMENTATION	2.0266563476679682E-6	TEST	1.547934082332028E-7	DEFECT
// Do we need to drop constraints before dropping tables in this dialect?	DESIGN	0.9987570573817968	WITHOUT_CLASSIFICATION	0.0012412813158943106	DESIGN	7.410748659896475E-7	DEFECT	4.610892683138108E-7	TEST	3.496254346974727E-7	DOCUMENTATION	1.0951273983671312E-7	IMPLEMENTATION
// Does this dialect support the FOR UPDATE syntax?	DESIGN	0.9991693687109867	WITHOUT_CLASSIFICATION	6.862632034506493E-4	DESIGN	1.379101580495278E-4	IMPLEMENTATION	3.4121601903082924E-6	DOCUMENTATION	1.8313956428518736E-6	DEFECT	1.2143716799492248E-6	TEST
// Does this dialect support the Oracle-style FOR UPDATE NOWAIT syntax?	DESIGN	0.9994038125339086	WITHOUT_CLASSIFICATION	4.4928747095801226E-4	DESIGN	1.450060990400019E-4	IMPLEMENTATION	1.010708865610453E-6	DOCUMENTATION	7.877313059900181E-7	TEST	9.545592170208098E-8	DEFECT
// Does this dialect support FOR UPDATE OF, allowing particular rows to be locked?	DESIGN	0.9928646325295102	DESIGN	0.006920928243494047	WITHOUT_CLASSIFICATION	1.2616019114161282E-4	DEFECT	8.403133644282044E-5	IMPLEMENTATION	2.934017481257292E-6	DOCUMENTATION	1.3136819301874263E-6	TEST
//note there is a wierd implementation in the client side	DESIGN	0.9995343996904843	WITHOUT_CLASSIFICATION	4.629554404785701E-4	DESIGN	1.7433630940575392E-6	IMPLEMENTATION	8.27205683468107E-7	DEFECT	5.587503903702942E-8	TEST	1.8425220661647378E-8	DOCUMENTATION
//TODO: never reached, since getTypeName() actually throws an exception!	DESIGN	0.7455519146041785	WITHOUT_CLASSIFICATION	0.18891621742883602	DESIGN	0.05009429029834963	DEFECT	0.014939659677984142	IMPLEMENTATION	3.1381650713099813E-4	TEST	1.8410148352079308E-4	DOCUMENTATION
// todo : should we additionally check the current isolation mode explicitly?	DESIGN	0.7820095138424751	DESIGN	0.12849429789319458	IMPLEMENTATION	0.07757275590444505	WITHOUT_CLASSIFICATION	0.010739001010605596	DEFECT	0.0011811198900783379	DOCUMENTATION	3.3114592011386022E-6	TEST
// todo : remove this and just have subclasses use Isolater/IsolatedWork directly...	DESIGN	0.99101560940731	DESIGN	0.00891390423154969	WITHOUT_CLASSIFICATION	5.779591596185003E-5	DEFECT	1.1946756622248586E-5	IMPLEMENTATION	6.229173955931717E-7	TEST	1.2077116054923034E-7	DOCUMENTATION
//TODO: should orphans really be deleted during lock???	DESIGN	0.8380588796742052	DESIGN	0.14189057439181163	WITHOUT_CLASSIFICATION	0.016569835521235032	DEFECT	0.0034369560485357623	IMPLEMENTATION	2.613287079927527E-5	DOCUMENTATION	1.762149341321285E-5	TEST
// orphans should not be deleted during merge??	DESIGN	0.9997380035694312	WITHOUT_CLASSIFICATION	2.6131014028898643E-4	DESIGN	4.771174455314323E-7	DEFECT	1.710236515194713E-7	IMPLEMENTATION	3.681723795887206E-8	TEST	1.331944788172659E-9	DOCUMENTATION
// orphans should not be deleted during copy??	DESIGN	0.9999081284084536	WITHOUT_CLASSIFICATION	8.765700802997767E-5	DESIGN	3.969705796494098E-6	DEFECT	2.1557672786321373E-7	IMPLEMENTATION	2.618450433000936E-8	TEST	3.116487784008822E-9	DOCUMENTATION
//I suppose?	DESIGN	0.9897604680527563	WITHOUT_CLASSIFICATION	0.007630118481066415	DESIGN	0.0025603085272062702	IMPLEMENTATION	2.344580907915155E-5	DOCUMENTATION	2.1878125513626584E-5	DEFECT	3.7810043780894804E-6	TEST
//TODO: suck this logic into the collection!	DESIGN	0.8488048187373137	DESIGN	0.12926745584874802	IMPLEMENTATION	0.018764304221911454	WITHOUT_CLASSIFICATION	0.0023225215558951647	DEFECT	7.057412749218478E-4	DOCUMENTATION	1.3515836120979655E-4	TEST
// TODO: an alternative is to check if the owner has changed; if it hasn't then // get the ID from collection.getOwner()	DESIGN	0.9894518676776516	IMPLEMENTATION	0.008283328172189672	WITHOUT_CLASSIFICATION	0.001840304371518262	DEFECT	3.718521003633529E-4	DESIGN	5.077550950720042E-5	TEST	1.8721687699880999E-6	DOCUMENTATION
//TODO:refactor + make this method private	DESIGN	0.9853308492440643	DESIGN	0.014083624324456161	WITHOUT_CLASSIFICATION	3.3107386844785755E-4	IMPLEMENTATION	2.2318452077676917E-4	TEST	2.8102004713390888E-5	DOCUMENTATION	3.1660375414976335E-6	DEFECT
// todo : we can actually just determine this from the incoming EntityEntry-s	DESIGN	0.9994982743981287	WITHOUT_CLASSIFICATION	5.017062817431173E-4	DESIGN	7.617889448481172E-9	IMPLEMENTATION	4.594753615867815E-9	DEFECT	4.005060675141543E-9	DOCUMENTATION	3.102424413314121E-9	TEST
//TODO: Should this be an InitializeEntityEventListener??? (watch out for performance!)	DESIGN	0.9993174999601019	DESIGN	6.6222597010817E-4	IMPLEMENTATION	1.5420431404187934E-5	WITHOUT_CLASSIFICATION	2.4456430241595125E-6	DOCUMENTATION	2.3680152684022495E-6	TEST	3.99800931206695E-8	DEFECT
//TODO: better to pass the id in as an argument?	DESIGN	0.9593201166638698	DESIGN	0.04037690329635783	WITHOUT_CLASSIFICATION	1.845846929818128E-4	DOCUMENTATION	4.895641103443531E-5	TEST	4.1602341769136896E-5	IMPLEMENTATION	2.783659398679261E-5	DEFECT
// todo : potentially look at optimizing these two arrays	DESIGN	0.9976019217750293	WITHOUT_CLASSIFICATION	0.001473998307935397	IMPLEMENTATION	6.894124368697263E-4	DESIGN	2.256987496209738E-4	DEFECT	5.421270384683426E-6	TEST	3.5474601598417525E-6	DOCUMENTATION
/* trim done to workaround stupid oracle bug that cant handle whitespaces before a { in a sp */	DESIGN	0.9998721117945839	DESIGN	1.0763770444834044E-4	WITHOUT_CLASSIFICATION	1.63555168856259E-5	DEFECT	3.811967453431371E-6	IMPLEMENTATION	6.575258730844943E-8	TEST	1.726404131516418E-8	DOCUMENTATION
/* trim done to workaround stupid oracle bug that cant handle whitespaces before a { in a sp */	DESIGN	0.9998721117945839	DESIGN	1.0763770444834044E-4	WITHOUT_CLASSIFICATION	1.63555168856259E-5	DEFECT	3.811967453431371E-6	IMPLEMENTATION	6.575258730844943E-8	TEST	1.726404131516418E-8	DOCUMENTATION
//TODO: temporary	DESIGN	0.9913037154688352	DESIGN	0.0064260333802751675	WITHOUT_CLASSIFICATION	0.0019743601227829497	IMPLEMENTATION	2.1852994488470173E-4	TEST	4.2452424148176006E-5	DEFECT	3.490865907388343E-5	DOCUMENTATION
//TODO: not quite sure about the full implications of this!	DESIGN	0.6374035362300537	WITHOUT_CLASSIFICATION	0.20714235685833257	DESIGN	0.10892368762789542	IMPLEMENTATION	0.04390584886782029	DEFECT	0.0022533516356586136	TEST	3.7121878023933547E-4	DOCUMENTATION
//TODO: not quite sure about the full implications of this!	DESIGN	0.6374035362300537	WITHOUT_CLASSIFICATION	0.20714235685833257	DESIGN	0.10892368762789542	IMPLEMENTATION	0.04390584886782029	DEFECT	0.0022533516356586136	TEST	3.7121878023933547E-4	DOCUMENTATION
//TODO: ugly here:	DESIGN	0.9156211138641092	DESIGN	0.07873753320245057	IMPLEMENTATION	0.004275580075720087	WITHOUT_CLASSIFICATION	6.295771894768942E-4	DEFECT	4.767154893531635E-4	TEST	2.594801788900985E-4	DOCUMENTATION
//this is kinda the best we can do...	DESIGN	0.937154084784021	WITHOUT_CLASSIFICATION	0.05534710843455199	DESIGN	0.00611041016493923	DEFECT	0.0012422506050360658	TEST	8.06989482368424E-5	IMPLEMENTATION	6.54470632149108E-5	DOCUMENTATION
//TODO: this needn't exclude subclasses...	DESIGN	0.9478423042153541	DESIGN	0.02066594311470518	IMPLEMENTATION	0.0151848851284502	WITHOUT_CLASSIFICATION	0.012422738129937725	DEFECT	0.0027437454369836282	TEST	0.0011403839745691778	DOCUMENTATION
// todo : need map? the prob is a proper key, right?	DESIGN	0.8464326053412684	DESIGN	0.07571716813310549	WITHOUT_CLASSIFICATION	0.06682597292027306	DEFECT	0.01065331607485751	IMPLEMENTATION	2.0212914485998078E-4	DOCUMENTATION	1.6880838563560594E-4	TEST
// todo : i'd much rather have this done from #endLoadingCollection(CollectionPersister,LoadingCollectionEntry)...	DESIGN	0.9533457454515568	WITHOUT_CLASSIFICATION	0.046615522754657426	DESIGN	3.736537347462617E-5	DEFECT	1.3246652789774396E-6	TEST	3.183230473108491E-8	DOCUMENTATION	9.922727421003378E-9	IMPLEMENTATION
// todo : hack!!! // NOTE : here we cleanup the load context when we have no more local // LCE entries.  This "works" for the time being because really // only the collection load contexts are implemented.  Long term, // this cleanup should become part of the "close result set" // processing from the (sandbox/jdbc) jdbc-container code.	DESIGN	0.9735060520737995	DESIGN	0.02649164863447751	WITHOUT_CLASSIFICATION	1.7392677172584949E-6	DEFECT	3.0697196680652136E-7	IMPLEMENTATION	2.4037797948886857E-7	TEST	1.2674059307253405E-8	DOCUMENTATION
// todo : should really move this log statement to CollectionType, where this is used from...	DESIGN	0.7856440191957268	DESIGN	0.21376797758085397	WITHOUT_CLASSIFICATION	5.75112868050903E-4	DEFECT	9.12474269433307E-6	IMPLEMENTATION	3.440680832121446E-6	TEST	3.2493184181220025E-7	DOCUMENTATION
// TODO : keep seperate notions of QT[] here for shallow/non-shallow queries...	DESIGN	0.5480893529583193	DESIGN	0.42643161451920186	IMPLEMENTATION	0.024326176947273608	DEFECT	9.279572017598243E-4	TEST	1.8423768757847017E-4	WITHOUT_CLASSIFICATION	4.0660685866980486E-5	DOCUMENTATION
// TODO : add this info to the translator and aggregate it here...	DESIGN	0.9451512995350942	IMPLEMENTATION	0.05401192684511847	DESIGN	3.8368605578767727E-4	DEFECT	2.9615204785807156E-4	TEST	1.5642795136052072E-4	DOCUMENTATION	5.075647810713038E-7	WITHOUT_CLASSIFICATION
//TODO: move into collection type, so we can use polymorphism!	DESIGN	0.9629183996873412	DESIGN	0.03684964846696785	WITHOUT_CLASSIFICATION	1.4857162682725076E-4	IMPLEMENTATION	6.704164382104002E-5	DEFECT	1.4909012698830693E-5	DOCUMENTATION	1.4295623438201557E-6	TEST
// todo : should we check the current isolation mode explicitly?	DESIGN	0.6197190291201455	WITHOUT_CLASSIFICATION	0.1780318537150135	DESIGN	0.16996762972808013	IMPLEMENTATION	0.03129129911125543	DEFECT	9.685595702317313E-4	DOCUMENTATION	2.1628755273713786E-5	TEST
//TODO: suck into event class	DESIGN	0.9916605231882105	DESIGN	0.005487778514815848	IMPLEMENTATION	0.0015596630582123449	WITHOUT_CLASSIFICATION	6.839378332679653E-4	DEFECT	5.769864129396841E-4	DOCUMENTATION	3.1110992553678216E-5	TEST
//do we even really need this? the update will fail anyway....	DESIGN	0.464353620675721	WITHOUT_CLASSIFICATION	0.4026231451847835	DEFECT	0.05347016684258592	IMPLEMENTATION	0.04338917956088616	DOCUMENTATION	0.03582564832357234	DESIGN	3.382394124510926E-4	TEST
//hum ... should we cascade anyway? throw an exception? fine like it is?	DESIGN	0.9989559903867745	DESIGN	7.691027216751589E-4	DEFECT	1.8493524687019419E-4	WITHOUT_CLASSIFICATION	4.9379548775935063E-5	DOCUMENTATION	3.218003703443954E-5	IMPLEMENTATION	8.41205886972589E-6	TEST
//TODO: would it be better to do a refresh from db?	DESIGN	0.9611643535707775	DESIGN	0.03839253327084683	IMPLEMENTATION	2.3027673255534545E-4	DEFECT	1.0781003699576782E-4	TEST	1.0343798357797519E-4	WITHOUT_CLASSIFICATION	1.5884052464878144E-6	DOCUMENTATION
//TODO: we use two visitors here, inefficient!	DESIGN	0.9287305307041157	DESIGN	0.054746441783670205	WITHOUT_CLASSIFICATION	0.01562974261074576	IMPLEMENTATION	5.950286400926663E-4	DOCUMENTATION	1.6445376293703506E-4	DEFECT	1.3380249843856332E-4	TEST
// this class has no proxies (so do a shortcut)	DESIGN	0.9999650645087789	WITHOUT_CLASSIFICATION	3.4666783488875005E-5	DESIGN	2.328846717319642E-7	DEFECT	1.3896489982721765E-8	DOCUMENTATION	1.201710691738472E-8	IMPLEMENTATION	9.909463655143392E-9	TEST
//PostLoad is needed for EJB3 //TODO: reuse the PostLoadEvent...	DESIGN	0.8762628758848814	IMPLEMENTATION	0.11018523113667622	DESIGN	0.006428546991194711	TEST	0.0046045664658980155	WITHOUT_CLASSIFICATION	0.00194267317526532	DEFECT	5.76106346084287E-4	DOCUMENTATION
//TODO: put this stuff back in to read snapshot from //      the second-level cache (needs some extra work)	DESIGN	0.9514609299099088	DESIGN	0.035964081809511377	WITHOUT_CLASSIFICATION	0.0075406583147057055	IMPLEMENTATION	0.004919249840936169	DEFECT	8.799110046052655E-5	DOCUMENTATION	2.7089024477361457E-5	TEST
// null or brand new collection // this will also (inefficiently) handle arrays, which have // no snapshot, so we can't do any better	DESIGN	0.8403936056192732	WITHOUT_CLASSIFICATION	0.15959721536841287	DESIGN	7.682461704757489E-6	IMPLEMENTATION	1.2761498927293012E-6	DOCUMENTATION	1.7932337473942618E-7	DEFECT	4.1077341726465157E-8	TEST
//TODO: is this 100% correct?	DESIGN	0.9850942070030394	DESIGN	0.012048753346367437	WITHOUT_CLASSIFICATION	0.002581182802519876	DEFECT	1.5599401442673345E-4	TEST	7.038459937403208E-5	DOCUMENTATION	4.9478234272594606E-5	IMPLEMENTATION
// TODO: iteratively get transient entities and retry merge until one of the following conditions: //       1) transientCopyCache.size() == 0 //       2) transientCopyCache.size() is not decreasing and copyCache.size() is not increasing // TODO: find out if retrying can add entities to copyCache (don't think it can...) // For now, just retry once; throw TransientObjectException if there are still any transient entities	DESIGN	0.8900482597330144	DEFECT	0.060991992637253654	DESIGN	0.04625845480424027	IMPLEMENTATION	0.002456437332118679	WITHOUT_CLASSIFICATION	2.1630307030155092E-4	TEST	2.855242307138349E-5	DOCUMENTATION
// entity name will not be available for non-POJO entities // TODO: cache the entity name somewhere so that it is available to this exception	DESIGN	0.9981077465049483	DESIGN	0.0018501261852863484	WITHOUT_CLASSIFICATION	1.8860218288723606E-5	IMPLEMENTATION	1.6960987351860532E-5	DEFECT	5.90337193303178E-6	TEST	4.0273219168080195E-7	DOCUMENTATION
//TODO: we should throw an exception if we really *know* for sure   //      that this is a detached instance, rather than just assuming //throw new StaleObjectStateException(entityName, id);	DESIGN	0.7093388163013478	DESIGN	0.290549289196215	WITHOUT_CLASSIFICATION	9.958512780233457E-5	DEFECT	1.2038330309346522E-5	TEST	1.7732120718605776E-7	DOCUMENTATION	9.372311848485735E-8	IMPLEMENTATION
// TODO : perhaps we should additionally require that the incoming entity // version be equivalent to the defined unsaved-value?	DESIGN	0.9967874906788363	DESIGN	0.003211189432424285	IMPLEMENTATION	9.724622812539357E-7	DEFECT	2.2485094534906955E-7	DOCUMENTATION	1.211046567369397E-7	WITHOUT_CLASSIFICATION	1.470856234153451E-9	TEST
// perhaps this should be an exception since it is only ever used // in the above method?	DESIGN	0.9079523530329318	DESIGN	0.09198734460112155	WITHOUT_CLASSIFICATION	5.986544725624517E-5	DEFECT	4.146570465274912E-7	TEST	2.1771908956016996E-8	DOCUMENTATION	4.89735047482144E-10	IMPLEMENTATION
// Put a placeholder in entries, so we don't recurse back and try to save() the // same object again. QUESTION: should this be done before onSave() is called? // likewise, should it be done before onUpdate()?	DESIGN	0.6937067157873844	WITHOUT_CLASSIFICATION	0.3062464156494967	DESIGN	4.662310467356801E-5	IMPLEMENTATION	1.5165838798467762E-7	DOCUMENTATION	5.152602601710397E-8	DEFECT	4.227403129178139E-8	TEST
//TODO: merge into one method!	DESIGN	0.670738217187933	DESIGN	0.3248495221347928	WITHOUT_CLASSIFICATION	0.0029908308361460845	IMPLEMENTATION	9.179083300511294E-4	DEFECT	2.8138699343773415E-4	TEST	2.2213451763918574E-4	DOCUMENTATION
//TODO: refactor to .sql package	DESIGN	0.9951989512749346	DESIGN	0.004167827347449018	WITHOUT_CLASSIFICATION	6.274647102889769E-4	IMPLEMENTATION	3.2079787008477625E-6	DOCUMENTATION	1.9224600696611784E-6	TEST	6.262285569275467E-7	DEFECT
/** * Provides query splitting methods, which were originally in QueryTranslator. * <br> * TODO: This will need to be refactored at some point. * * @author josh */	DESIGN	0.9986232773145864	DESIGN	0.0012554622389111972	DOCUMENTATION	6.87130106880847E-5	IMPLEMENTATION	4.2867296291143165E-5	DEFECT	7.805266702841212E-6	TEST	1.8748728204333994E-6	WITHOUT_CLASSIFICATION
//TODO: this is one of the ugliest and most fragile pieces of code in Hibernate....	DESIGN	0.9989350810340132	DESIGN	6.843319469106673E-4	IMPLEMENTATION	2.517173886950794E-4	TEST	8.803996913584979E-5	DEFECT	3.819147725086732E-5	WITHOUT_CLASSIFICATION	2.63818399428931E-6	DOCUMENTATION
// todo : temporary //      needed because currently persister is the one that //      creates and renders the join fragments for inheritence //      hierarchies...	DESIGN	0.5056026755604773	WITHOUT_CLASSIFICATION	0.4941125396881479	DESIGN	1.8263930721043953E-4	IMPLEMENTATION	5.094759235624332E-5	DEFECT	2.867979847180821E-5	TEST	2.2518053336214718E-5	DOCUMENTATION
// TODO : better way?!?	DESIGN	0.9997613154092627	DESIGN	2.0707599693036119E-4	IMPLEMENTATION	1.134901056230343E-5	DEFECT	1.1115147038257683E-5	TEST	9.078242230289885E-6	DOCUMENTATION	6.619397583990292E-8	WITHOUT_CLASSIFICATION
// Not possible to simply re-use the versionPropertyNode here as it causes // OOM errors due to circularity :(	DESIGN	0.9999983287018575	WITHOUT_CLASSIFICATION	1.610270246943595E-6	IMPLEMENTATION	4.335864994572978E-8	DESIGN	1.7366267627172182E-8	DEFECT	1.6532687244324906E-10	DOCUMENTATION	1.376511219849496E-10	TEST
//TODO:this is only needed during compilation .. can we eliminate the instvar?	DESIGN	0.9997325850190233	DESIGN	2.549736075324441E-4	WITHOUT_CLASSIFICATION	8.232370750019739E-6	DEFECT	1.8585887847417153E-6	IMPLEMENTATION	1.2786572201092276E-6	TEST	1.071756689321604E-6	DOCUMENTATION
// TODO : this is a bit dodgy, come up with a better way to check this (plus see above comment)	DESIGN	0.9996702723863444	DESIGN	3.2412621543754497E-4	IMPLEMENTATION	2.7761491501764926E-6	TEST	1.696939501365352E-6	DOCUMENTATION	1.1156697031181375E-6	DEFECT	1.263986340179326E-8	WITHOUT_CLASSIFICATION
// even here, if only properties mapped to the "base table" are referenced // in the set and where clauses, this could be handled by the BasicDelegate. // TODO : decide if it is better performance-wise to perform that check, or to simply use the MultiTableUpdateDelegate	DESIGN	0.9999999922810104	DESIGN	5.67168359942038E-9	WITHOUT_CLASSIFICATION	1.3103302239627993E-9	DOCUMENTATION	3.7238907624954354E-10	DEFECT	2.2528889186864324E-10	TEST	1.392975496086211E-10	IMPLEMENTATION
//TODO: switch statements are always evil! We already had bugs because  //      of forgotten token types. Use polymorphism for this!	DESIGN	0.7137585329445769	DESIGN	0.21411110513727716	WITHOUT_CLASSIFICATION	0.07150274867884235	DEFECT	4.307685695155058E-4	DOCUMENTATION	1.318827289859644E-4	IMPLEMENTATION	6.496194080208298E-5	TEST
// TODO : we really need to be able to deal with component paths here also; // this is difficult because the hql-sql grammar expects all those node types // to be FromReferenceNodes.  One potential fix here would be to convert the // IntoClause to just use a FromClause/FromElement combo (as a child of the // InsertStatement) and move all this logic into the InsertStatement.  That's // probably the easiest approach (read: least amount of changes to the grammar // and code), but just doesn't feel right as then an insert would contain // 2 from-clauses	DESIGN	0.9925146566123764	DESIGN	0.00748489740636589	WITHOUT_CLASSIFICATION	2.2302620942168473E-7	DOCUMENTATION	2.0804465546111463E-7	TEST	1.0817837108815594E-8	IMPLEMENTATION	4.092555445147239E-9	DEFECT
// really there are two situations where it should be ok to allow the insertion // into properties defined on a superclass: //      1) union-subclass with an abstract root entity //      2) discrim-subclass // // #1 is handled already because of the fact that // UnionSubclassPersister alreay always returns 0 // for this call... // // we may want to disallow it for discrim-subclass just for // consistency-sake (currently does not work anyway)...	DESIGN	0.9999481346688037	WITHOUT_CLASSIFICATION	5.182788932075767E-5	DESIGN	2.5102602947046434E-8	DEFECT	7.105691401335172E-9	IMPLEMENTATION	3.8289330844129254E-9	DOCUMENTATION	1.4046480553760099E-9	TEST
//yuck!	DESIGN	0.975819247398043	WITHOUT_CLASSIFICATION	0.0235872538573771	DESIGN	5.206124219492597E-4	DEFECT	5.1581407382818404E-5	DOCUMENTATION	1.5069056525786272E-5	TEST	6.235858721922454E-6	IMPLEMENTATION
// implicit joins are always(?) ok to reuse	DESIGN	0.9989047801987023	WITHOUT_CLASSIFICATION	0.0010893384333483256	DESIGN	5.008345393532928E-6	IMPLEMENTATION	4.5183398341315635E-7	DEFECT	3.2933050226349254E-7	DOCUMENTATION	9.18580700654534E-8	TEST
// TODO : we may also want to check that the types here map to exactly one column/JDBC-type //      can't think of a situation where arithmetic expression between multi-column mappings //      makes any sense.	DESIGN	0.5177612307113328	IMPLEMENTATION	0.43057852212044756	DESIGN	0.04976171403309092	DEFECT	0.00185341470599185	DOCUMENTATION	2.8399433016208966E-5	WITHOUT_CLASSIFICATION	1.6718996120671176E-5	TEST
// we do not know either type //BLIND GUESS!	DESIGN	0.9992248614879873	WITHOUT_CLASSIFICATION	7.36250328506084E-4	DESIGN	2.410147717557602E-5	DEFECT	1.2987674441691126E-5	IMPLEMENTATION	9.203856749430067E-7	TEST	8.78646214529409E-7	DOCUMENTATION
//TODO: used to be exprNoParens! was this needed?	DESIGN	0.9999945113846638	DESIGN	4.976238059137548E-6	IMPLEMENTATION	2.3236247336634797E-7	DEFECT	2.2844893786064817E-7	DOCUMENTATION	2.7940903618536013E-8	WITHOUT_CLASSIFICATION	2.36249622564742E-8	TEST
// TODO: Replace this with a more elegant solution.	DESIGN	0.9980404902175114	DESIGN	0.0019381007104801295	IMPLEMENTATION	1.6391127079585552E-5	TEST	3.4775128534086948E-6	DEFECT	1.3226066769470175E-6	WITHOUT_CLASSIFICATION	2.1782539855430661E-7	DOCUMENTATION
// TODO: Should this really return null?  If not, figure out something better to do here.	DESIGN	0.9941379622993128	DESIGN	0.005849697761286144	IMPLEMENTATION	8.040710620575878E-6	DEFECT	1.7626093732857896E-6	WITHOUT_CLASSIFICATION	1.4815819491324196E-6	TEST	1.0550374579415223E-6	DOCUMENTATION
//TODO: get SQL rendering out of this package!	DESIGN	0.9829307983171532	DESIGN	0.017016013008992876	WITHOUT_CLASSIFICATION	2.9511947642352463E-5	IMPLEMENTATION	1.3115625838993285E-5	DEFECT	6.848133862244692E-6	TEST	3.7129665103348577E-6	DOCUMENTATION
// yuck!	DESIGN	0.9990205125066339	WITHOUT_CLASSIFICATION	9.061205578489102E-4	DESIGN	6.974146943984001E-5	DEFECT	2.1729269590380026E-6	DOCUMENTATION	8.25052484486664E-7	TEST	6.274866337463665E-7	IMPLEMENTATION
// ignore it; the incoming property could not be found so we // cannot be sure what to do here.  At the very least, the // safest is to simply not apply any dereference toggling...	DESIGN	0.991703019864113	WITHOUT_CLASSIFICATION	0.006774927943812044	DESIGN	0.001499219231065562	DEFECT	1.8462382719920138E-5	IMPLEMENTATION	2.533196980833271E-6	TEST	1.8373813086455936E-6	DOCUMENTATION
// TODO : most of below was taken verbatim from DotNode; should either delegate this logic or super-type it	DESIGN	0.9998421110613728	DESIGN	7.17753815192698E-5	DEFECT	5.375724352813726E-5	WITHOUT_CLASSIFICATION	2.756161889193922E-5	TEST	3.297800322118588E-6	IMPLEMENTATION	1.4968943656750063E-6	DOCUMENTATION
// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and "do the right thing" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character // the trim-source	DESIGN	0.9978234193864144	WITHOUT_CLASSIFICATION	0.00217109427208901	DESIGN	3.875283163003796E-6	IMPLEMENTATION	1.5854322723150728E-6	DOCUMENTATION	2.4873874121580675E-8	TEST	7.521872203673023E-10	DEFECT
// todo: we should really just collect these from the various SelectExpressions, rather than regenerating here	DESIGN	0.9684998423527091	WITHOUT_CLASSIFICATION	0.03144345577594113	DESIGN	3.423746777292739E-5	DEFECT	1.8168621016963605E-5	IMPLEMENTATION	4.189366899547989E-6	TEST	1.0641566025664658E-7	DOCUMENTATION
//TODO: is this a bit ugly?	DESIGN	0.9996815299448837	DESIGN	2.521599724368396E-4	IMPLEMENTATION	2.599278244446002E-5	DEFECT	2.192675262367173E-5	WITHOUT_CLASSIFICATION	1.3045353598909133E-5	TEST	5.3451940122924804E-6	DOCUMENTATION
// Need a better way to define the suffixes here...	DESIGN	0.9396330898786869	DESIGN	0.058155782697723465	WITHOUT_CLASSIFICATION	0.0020348676358717646	IMPLEMENTATION	1.1430015502193562E-4	TEST	5.579904513132584E-5	DEFECT	6.1605875644372E-6	DOCUMENTATION
// TODO: something much better - look at the type of the other expression! // TODO: Have comparisonExpression and/or arithmeticExpression rules complete the resolution of boolean nodes.	DESIGN	0.9999948108760396	DESIGN	4.60795033533439E-6	DEFECT	4.5694702308695754E-7	IMPLEMENTATION	1.0372841479419098E-7	TEST	1.5769995501283422E-8	WITHOUT_CLASSIFICATION	4.728191565165217E-9	DOCUMENTATION
// TODO : what amount of significant digits need to be supported here? //      - from the DecimalFormat docs: //          [significant digits] = [minimum integer digits] + [maximum fraction digits]	DESIGN	0.9813103415320122	DESIGN	0.012828193773086317	DOCUMENTATION	0.004163984136185686	WITHOUT_CLASSIFICATION	0.0010947790064815717	IMPLEMENTATION	3.594644751275178E-4	DEFECT	2.4323707710671879E-4	TEST
// Needed the "clazz_" check to work around union-subclasses // TODO : is there a way to tell whether a persister is truly discrim-column based inheritence?	DESIGN	0.999906371600949	DESIGN	6.298226108098578E-5	IMPLEMENTATION	2.8218670704727007E-5	WITHOUT_CLASSIFICATION	1.5673000929227007E-6	DOCUMENTATION	7.9154988865892E-7	TEST	6.861728371643817E-8	DEFECT
//We should actually rework this class to not implement Parser //and just process path expressions in the most convenient way.	DESIGN	0.4645069701533468	DEFECT	0.39094866566594344	DESIGN	0.14058173685567757	IMPLEMENTATION	0.003937289906138239	WITHOUT_CLASSIFICATION	2.4715126186241967E-5	DOCUMENTATION	6.222927077340283E-7	TEST
//The class is now way to complex!	DESIGN	0.9998005580356241	WITHOUT_CLASSIFICATION	1.1282714562038745E-4	DEFECT	8.278973187048243E-5	DESIGN	3.254841852301388E-6	IMPLEMENTATION	3.895036869237039E-7	DOCUMENTATION	1.8074134577933638E-7	TEST
//TODO: get SQL rendering out of here	DESIGN	0.9630978841936277	DESIGN	0.025383612656714988	WITHOUT_CLASSIFICATION	0.010804467721573936	IMPLEMENTATION	3.1997276572713254E-4	TEST	3.0229835804015503E-4	DEFECT	9.176430431604327E-5	DOCUMENTATION
//TODO: is there a better way?	DESIGN	0.9997108138786218	DESIGN	2.7200378298428303E-4	IMPLEMENTATION	9.477604524355004E-6	WITHOUT_CLASSIFICATION	5.766645714791357E-6	TEST	1.048615544391006E-6	DEFECT	8.894726104230762E-7	DOCUMENTATION
//Must be done here because of side-effect! yuck...	DESIGN	0.831376087202732	WITHOUT_CLASSIFICATION	0.1684661787699822	DESIGN	1.1520984959950091E-4	DEFECT	1.589670139028854E-5	TEST	1.4674730071176388E-5	DOCUMENTATION	1.195274622474957E-5	IMPLEMENTATION
//name from a super query (a bit inelegant that it shows up here)	DESIGN	0.580182999669425	WITHOUT_CLASSIFICATION	0.4185976790229594	DESIGN	5.31480465497058E-4	IMPLEMENTATION	4.564369554277316E-4	DEFECT	2.2762185545524243E-4	TEST	3.7820312356728625E-6	DOCUMENTATION
// We should reengineer this class so that, rather than the current ad - // hoc linear approach to processing a stream of tokens, we instead // build up a tree of expressions.	DESIGN	0.9852406878650637	DESIGN	0.011678199791243451	WITHOUT_CLASSIFICATION	0.0030805042817627316	DEFECT	5.053836345984496E-7	DOCUMENTATION	1.0149574181670911E-7	TEST	1.1825538587816106E-9	IMPLEMENTATION
// this is ugly here, but needed because its a subquery	DESIGN	0.9712795336307946	WITHOUT_CLASSIFICATION	0.0278413775451325	DESIGN	7.194875558737757E-4	IMPLEMENTATION	1.1687778467401614E-4	DEFECT	3.7411511488082843E-5	TEST	5.311972036889785E-6	DOCUMENTATION
// unhappy about this being public ... is there a better way?	DESIGN	0.9996406287015954	DESIGN	3.5426358617021063E-4	WITHOUT_CLASSIFICATION	4.314036722771625E-6	DEFECT	3.852019403413603E-7	TEST	3.5054970010413656E-7	IMPLEMENTATION	5.7923871050087995E-8	DOCUMENTATION
// Make sure this is a defined parameter and check the incoming value type // TODO: what should be the actual exception type here?	DESIGN	0.5449479762294863	DESIGN	0.4486532353893552	IMPLEMENTATION	0.005427419968147998	WITHOUT_CLASSIFICATION	9.55615477022051E-4	DEFECT	1.4673719548653743E-5	TEST	1.0792164396662348E-6	DOCUMENTATION
// TODO : this constructor form is *only* used from constructor directly below us; can it go away?	DESIGN	0.9999947462908035	DESIGN	4.876406840435055E-6	IMPLEMENTATION	2.251091875024358E-7	WITHOUT_CLASSIFICATION	1.2626938779307566E-7	TEST	1.4097898628839497E-8	DOCUMENTATION	1.1825882262467153E-8	DEFECT
//TODO: COPY/PASTE FROM SessionImpl, pull up!	DESIGN	0.5027701060708811	IMPLEMENTATION	0.47237609090063876	WITHOUT_CLASSIFICATION	0.02328976301919519	DESIGN	8.091422133212441E-4	DEFECT	4.7419401558224133E-4	DOCUMENTATION	2.8070378038153E-4	TEST
// TODO : should remove this exposure //  and have all references to the session's batcher use the ConnectionManager.	DESIGN	0.9986051267860019	DESIGN	6.294378623123477E-4	WITHOUT_CLASSIFICATION	5.78424884835104E-4	IMPLEMENTATION	1.775465665616628E-4	DEFECT	9.362159810782225E-6	DOCUMENTATION	1.017404782510082E-7	TEST
// todo : should this get moved to PersistentContext? // logically, is PersistentContext the "thing" to which an interceptor gets attached?	DESIGN	0.9970616886183058	DESIGN	0.002932370002636219	WITHOUT_CLASSIFICATION	5.74532908147359E-6	DEFECT	1.9264013158423828E-7	TEST	3.135654784424266E-9	DOCUMENTATION	2.741902574718608E-10	IMPLEMENTATION
// TODO: what type?	DESIGN	0.8193787379954647	IMPLEMENTATION	0.1657153147576228	DESIGN	0.008671999321044368	WITHOUT_CLASSIFICATION	0.004341355481903655	DEFECT	0.001027962993375877	TEST	8.646294505885852E-4	DOCUMENTATION
// todo : should seriously consider not allowing a txn to begin from a child session //      can always route the request to the root session...	DESIGN	0.9289809829718452	WITHOUT_CLASSIFICATION	0.047349589472978196	DEFECT	0.02245074264373632	DESIGN	0.0011796627797397302	IMPLEMENTATION	3.850103294788346E-5	TEST	5.210987527308019E-7	DOCUMENTATION
// short-circuit for performance...	DESIGN	0.969925855177463	WITHOUT_CLASSIFICATION	0.029838455841340945	DESIGN	1.247391438832972E-4	DEFECT	4.9520601765731084E-5	DOCUMENTATION	4.3449525673603696E-5	IMPLEMENTATION	1.7979709873413207E-5	TEST
// not absolutely necessary, but does help with aggressive release	DESIGN	0.9958765706355033	WITHOUT_CLASSIFICATION	0.0040939140457568295	DESIGN	1.7065311818201376E-5	IMPLEMENTATION	7.382662374568864E-6	TEST	4.899148280813166E-6	DEFECT	1.6819626644580132E-7	DOCUMENTATION
// TODO : remove these last two as batcher is no longer managing connections	DESIGN	0.9905954001223528	DESIGN	0.008861870539241385	WITHOUT_CLASSIFICATION	2.7649724784068597E-4	DEFECT	2.3341892203353946E-4	TEST	2.2008717683475877E-5	IMPLEMENTATION	1.0804450847991546E-5	DOCUMENTATION
//work around a bug in all known connection pools....	DESIGN	0.9669707195483074	DESIGN	0.024485907249556745	DEFECT	0.007981909004732952	IMPLEMENTATION	5.195819532702777E-4	WITHOUT_CLASSIFICATION	4.170028107814124E-5	DOCUMENTATION	1.8196305458750233E-7	TEST
// TODO : make this the factory for "entity mode related" sessions; // also means making this the target of transaction-synch and the // thing that knows how to cascade things between related sessions // // At that point, perhaps this thing is a "SessionContext", and // ConnectionManager is a "JDBCContext"?  A "SessionContext" should // live in the impl package...	DESIGN	0.9999950773669053	DESIGN	4.921823449834055E-6	IMPLEMENTATION	5.440532459328331E-10	DEFECT	2.1389730279910942E-10	DOCUMENTATION	5.153539801578221E-11	TEST	1.5876906372338943E-13	WITHOUT_CLASSIFICATION
//TODO: does this really need to be here? //      does the collection already have //      it's own up-to-date snapshot?	DESIGN	0.6381651163983082	DESIGN	0.33817773836793397	IMPLEMENTATION	0.018220702243511234	WITHOUT_CLASSIFICATION	0.005264187170509745	DEFECT	1.3025134907819393E-4	TEST	4.200447065874964E-5	DOCUMENTATION
//TODO: the i==entitySpan-1 bit depends upon subclass implementation (very bad)	DESIGN	0.8956802326359615	DESIGN	0.10415642880830887	IMPLEMENTATION	1.5741077592933302E-4	WITHOUT_CLASSIFICATION	3.5598228942576607E-6	DOCUMENTATION	2.151936398615495E-6	DEFECT	2.1602050743682215E-7	TEST
/**	DESIGN	0.41139116692226024	DOCUMENTATION	0.38195748800012463	DESIGN	0.10269272777172639	IMPLEMENTATION	0.0376612794413521	WITHOUT_CLASSIFICATION	0.035076360431814946	DEFECT	0.03122097743272162	TEST
// todo : add the notion of enabled filters to the CacheKey to differentiate filtered collections from non-filtered; //      but CacheKey is currently used for both collections and entities; would ideally need to define two seperate ones; //      currently this works in conjuction with the check on //      DefaultInitializeCollectionEventHandler.initializeCollectionFromCache() (which makes sure to not read from //      cache with enabled filters). // EARLY EXIT!!!!!	DESIGN	0.9336193377221945	WITHOUT_CLASSIFICATION	0.06637888875079798	DESIGN	6.99975031623189E-7	DEFECT	5.234436341767442E-7	IMPLEMENTATION	4.6889606132171796E-7	DOCUMENTATION	8.121228037948557E-8	TEST
//for sets, we should end the collection load after resolving //the entities, since we might call hashCode() on the elements //TODO: or we could do this polymorphically, and have two //      different operations implemented differently for arrays	DESIGN	0.48691517189891687	DESIGN	0.47945853672054395	DEFECT	0.033012743100068166	WITHOUT_CLASSIFICATION	5.599514621056937E-4	IMPLEMENTATION	3.5527558798156754E-5	TEST	1.806925956720069E-5	DOCUMENTATION
//This is not very nice (and quite slow):	DESIGN	0.8871349770025219	WITHOUT_CLASSIFICATION	0.07527910948076078	DEFECT	0.03748371660823153	DESIGN	8.937925799580679E-5	IMPLEMENTATION	8.495661528146773E-6	DOCUMENTATION	4.321988961910498E-6	TEST
//use of trim() here is ugly?	DESIGN	0.9949055403736017	WITHOUT_CLASSIFICATION	0.004997236503386023	DESIGN	6.715831605485337E-5	DEFECT	2.2128128343403656E-5	IMPLEMENTATION	4.657437330121818E-6	TEST	3.2792412840758574E-6	DOCUMENTATION
//TODO: this is too conservative; if all preceding joins were  //      also inner joins, we could use an inner join here	DESIGN	0.9611390290721713	DESIGN	0.03818680739013203	WITHOUT_CLASSIFICATION	4.574558881372059E-4	DEFECT	9.558040216970526E-5	TEST	7.5165522178128E-5	DOCUMENTATION	4.596172521153815E-5	IMPLEMENTATION
//TODO: look at the owning property and check that it  //      isn't lazy (by instrumentation)	DESIGN	0.968921737795982	IMPLEMENTATION	0.028144237445885914	WITHOUT_CLASSIFICATION	0.0024624531359694634	DEFECT	4.589581226651954E-4	DOCUMENTATION	7.36592184979861E-6	TEST	5.247577647571447E-6	DESIGN
//TODO: inefficient	DESIGN	0.8168193316672173	DESIGN	0.11708999891318324	WITHOUT_CLASSIFICATION	0.0640788424277288	IMPLEMENTATION	0.0015578895524904653	DOCUMENTATION	3.1077691555230814E-4	TEST	1.4316052382790461E-4	DEFECT
// why does this matter?	DESIGN	0.9602043167926666	WITHOUT_CLASSIFICATION	0.0394399020831062	DESIGN	1.7520271822252836E-4	TEST	1.4438166027400744E-4	DEFECT	2.263215145208279E-5	DOCUMENTATION	1.3564594278497136E-5	IMPLEMENTATION
// from the collection of associations, locate OJA for the // ManyToOne corresponding to this persister to fully // define the many-to-many; we need that OJA so that we can // use its alias here // TODO : is there a better way here?	DESIGN	0.9999980839540257	DESIGN	1.1068103355321303E-6	IMPLEMENTATION	3.991073987838939E-7	TEST	3.2517142097599256E-7	WITHOUT_CLASSIFICATION	6.651754613984349E-8	DOCUMENTATION	1.8439273017278104E-8	DEFECT
//TODO: this class depends directly upon CriteriaImpl,  //      in the impl package ... add a CriteriaImplementor  //      interface	DESIGN	0.9982438538996656	DESIGN	0.001140364720497919	IMPLEMENTATION	5.798804750757502E-4	DEFECT	3.258857125635975E-5	WITHOUT_CLASSIFICATION	1.9995557920423652E-6	DOCUMENTATION	1.3127777123078986E-6	TEST
//TODO: add a CriteriaImplementor interface //      this class depends directly upon CriteriaImpl in the impl package...	DESIGN	0.9831831296533154	DESIGN	0.014674219353921738	IMPLEMENTATION	0.0020194471330460717	DEFECT	1.1332493951352328E-4	WITHOUT_CLASSIFICATION	7.276339380442837E-6	DOCUMENTATION	2.6025808229299803E-6	TEST
// TODO : not so sure this is needed...	DESIGN	0.9840402514997754	DESIGN	0.015385573485093442	IMPLEMENTATION	2.8763269699846064E-4	DEFECT	2.2241458077262974E-4	TEST	6.38701710963328E-5	DOCUMENTATION	2.5756626379887107E-7	WITHOUT_CLASSIFICATION
// meant to handle dynamic instantiation queries...(Copy from QueryLoader)	DESIGN	0.9998901671674411	WITHOUT_CLASSIFICATION	8.752015588870939E-5	DESIGN	2.1912351975880604E-5	DEFECT	2.257719736128781E-7	IMPLEMENTATION	1.5526697181817542E-7	DOCUMENTATION	1.9285748860125162E-8	TEST
// TODO: The order in which entities are saved may matter (e.g., a particular transient entity //       may need to be saved before other transient entities can be saved; //       Keep retrying the batch of transient entities until either: //       1) there are no transient entities left in transientCopyCache //       or 2) no transient entities were saved in the last batch // For now, just run through the transient entities and retry the merge	DESIGN	0.9540769295244766	DESIGN	0.0337094646922946	WITHOUT_CLASSIFICATION	0.008557102577775647	DEFECT	0.0036009618803601417	IMPLEMENTATION	4.428666145726787E-5	TEST	1.1254663635713199E-5	DOCUMENTATION
// todo: this might really even be moved into the cfg package and used as the basis for all things which are configurable.	DESIGN	0.6391505674896019	WITHOUT_CLASSIFICATION	0.36079641014890607	DESIGN	3.160439865715326E-5	DEFECT	1.9953627094458362E-5	IMPLEMENTATION	1.4168021458302816E-6	DOCUMENTATION	4.753359462436862E-8	TEST
// todo : currently expects that the individual with expressions apply to the same sql table join. //      This may not be the case for joined-subclass where the property values //      might be coming from different tables in the joined hierarchy.  At some //      point we should expand this to support that capability.  However, that has //      some difficulties: //          1) the biggest is how to handle ORs when the individual comparisons are //              linked to different sql joins. //          2) here we would need to track each comparison individually, along with //              the join alias to which it applies and then pass that information //              back to the FromElement so it can pass it along to the JoinSequence	DESIGN	0.7000542570646652	WITHOUT_CLASSIFICATION	0.2467675580927977	DEFECT	0.03623553627509238	IMPLEMENTATION	0.01680361774959681	DESIGN	1.3883109303505182E-4	DOCUMENTATION	1.9972481291567626E-7	TEST
// this function has a template -> restore output, apply the template and write the result out // TODO: Downcast to avoid using an interface?  Yuck.	DESIGN	0.9996904120872331	DESIGN	1.7025428623068623E-4	WITHOUT_CLASSIFICATION	6.96488635952736E-5	IMPLEMENTATION	5.2445015951565925E-5	TEST	9.809919929956639E-6	DEFECT	7.42982705946922E-6	DOCUMENTATION
// at some point the generate phase needs to be moved out of here, // because a single object-level DML might spawn multiple SQL DML // command executions. // // Possible to just move the sql generation for dml stuff, but for // consistency-sake probably best to just move responsiblity for // the generation phase completely into the delegates // (QueryLoader/StatementExecutor) themselves.  Also, not sure why // QueryLoader currently even has a dependency on this at all; does // it need it?  Ideally like to see the walker itself given to the delegates directly...	DESIGN	0.9999999919606211	DESIGN	7.936368739433562E-9	DEFECT	6.155056847225345E-11	WITHOUT_CLASSIFICATION	4.1395214577645086E-11	DOCUMENTATION	6.420939138703647E-14	TEST	1.967968088019615E-16	IMPLEMENTATION
// get the right object from the list ... would it be easier to just call getEntity() ??	DESIGN	0.9249589785062224	WITHOUT_CLASSIFICATION	0.0750018383223733	DESIGN	3.8234997733825334E-5	IMPLEMENTATION	8.933572638201981E-7	DEFECT	3.035115873804162E-8	TEST	2.446524796056955E-8	DOCUMENTATION
// TODO should we just collect these like with the collections above?	DESIGN	0.8446071526387886	IMPLEMENTATION	0.1551371708472086	DESIGN	2.5158972016558047E-4	TEST	2.829877087729973E-6	DOCUMENTATION	8.308800189106636E-7	WITHOUT_CLASSIFICATION	4.260367306417984E-7	DEFECT
// todo : better to handle dynamic filters through implicit DynamicFilterParameterSpecification // see the discussion there in DynamicFilterParameterSpecification's javadocs as to why // it is currently not done that way.	DESIGN	0.8842317530784832	DESIGN	0.11547517156520105	WITHOUT_CLASSIFICATION	2.8748892212002305E-4	DOCUMENTATION	4.606444470120362E-6	DEFECT	8.884978118704084E-7	TEST	9.149191384414121E-8	IMPLEMENTATION
/////////////////////////////////////////////////////////////////////////// // USED ONLY FOR REGRESSION TESTING!!!! // // todo : obviously get rid of all this junk ;) ///////////////////////////////////////////////////////////////////////////	DESIGN	0.9629253261169101	WITHOUT_CLASSIFICATION	0.03639463634979065	DESIGN	6.77619839478268E-4	IMPLEMENTATION	1.069011529779166E-6	DOCUMENTATION	7.099436701935611E-7	DEFECT	6.387386210183817E-7	TEST
//create an index on the key columns??	DESIGN	0.9999674108429829	WITHOUT_CLASSIFICATION	1.8310052991468024E-5	DESIGN	1.2916879554250794E-5	DEFECT	7.327169215965046E-7	IMPLEMENTATION	4.337131891292691E-7	DOCUMENTATION	1.9579436063314156E-7	TEST
//TODO: deprecated, remove eventually	DESIGN	0.711825016197631	DESIGN	0.1817051471959245	IMPLEMENTATION	0.10177689489681059	WITHOUT_CLASSIFICATION	0.004264248889586766	DEFECT	3.531544211172274E-4	DOCUMENTATION	7.553839892983853E-5	TEST
//create an index on the key columns??	DESIGN	0.9999674108429829	WITHOUT_CLASSIFICATION	1.8310052991468024E-5	DESIGN	1.2916879554250794E-5	DEFECT	7.327169215965046E-7	IMPLEMENTATION	4.337131891292691E-7	DOCUMENTATION	1.9579436063314156E-7	TEST
//TODO: improve this hack!	DESIGN	0.9999744374440126	DESIGN	8.809307737975151E-6	WITHOUT_CLASSIFICATION	8.630435958633938E-6	IMPLEMENTATION	5.737619427080376E-6	TEST	1.7282746091312458E-6	DEFECT	6.569182544688822E-7	DOCUMENTATION
// inheritance cycle detection (paranoid check)	DESIGN	0.9998386453180313	WITHOUT_CLASSIFICATION	1.0420961471930397E-4	DESIGN	5.593710389283487E-5	IMPLEMENTATION	8.868978850480065E-7	DEFECT	2.9997125667311973E-7	DOCUMENTATION	2.1094214875285E-8	TEST
//TODO: remove use of instanceof!	DESIGN	0.9440867539573918	DESIGN	0.051122835203455216	WITHOUT_CLASSIFICATION	0.0030620164771229526	DEFECT	0.0014938838733998846	IMPLEMENTATION	2.2108246889469057E-4	DOCUMENTATION	1.3428019735380592E-5	TEST
//shortcut	DESIGN	0.999558717233362	WITHOUT_CLASSIFICATION	4.3121223451043813E-4	DESIGN	4.220775381130407E-6	DEFECT	2.7946753656002906E-6	DOCUMENTATION	2.6434954905889197E-6	TEST	4.115858902560107E-7	IMPLEMENTATION
//TODO: handle the case of a foreign key to something other than the pk	DESIGN	0.9143906893192724	WITHOUT_CLASSIFICATION	0.08047660409979443	IMPLEMENTATION	0.0049738728711379646	DESIGN	6.0379770571185445E-5	DEFECT	5.645300017546573E-5	DOCUMENTATION	4.20009390488039E-5	TEST
// create an index on the key columns??	DESIGN	0.999993973703575	WITHOUT_CLASSIFICATION	4.112495191629249E-6	DEFECT	1.7932128783062646E-6	DESIGN	5.4070406334695875E-8	IMPLEMENTATION	4.149844223051676E-8	DOCUMENTATION	2.501950658082206E-8	TEST
// todo : remove	DESIGN	0.9750713427357223	WITHOUT_CLASSIFICATION	0.024783711975528557	DESIGN	8.726767337014877E-5	DEFECT	5.2366746350899364E-5	IMPLEMENTATION	3.325130336219159E-6	TEST	1.985738691973124E-6	DOCUMENTATION
// todo : remove	DESIGN	0.9750713427357223	WITHOUT_CLASSIFICATION	0.024783711975528557	DESIGN	8.726767337014877E-5	DEFECT	5.2366746350899364E-5	IMPLEMENTATION	3.325130336219159E-6	TEST	1.985738691973124E-6	DOCUMENTATION
// todo : remove	DESIGN	0.9750713427357223	WITHOUT_CLASSIFICATION	0.024783711975528557	DESIGN	8.726767337014877E-5	DEFECT	5.2366746350899364E-5	IMPLEMENTATION	3.325130336219159E-6	TEST	1.985738691973124E-6	DOCUMENTATION
// todo : throw exception?	DESIGN	0.9541519649009285	WITHOUT_CLASSIFICATION	0.045253518996176224	DESIGN	4.701412847344501E-4	DEFECT	1.1380087056416106E-4	IMPLEMENTATION	6.32910596862483E-6	DOCUMENTATION	4.244841628015791E-6	TEST
// todo : throw exception?  maybe warn if not the same?	DESIGN	0.6892275772762688	WITHOUT_CLASSIFICATION	0.2433992592080813	DESIGN	0.0626444439914688	DEFECT	0.004675457440438776	IMPLEMENTATION	2.9037867027611026E-5	TEST	2.4224216714589173E-5	DOCUMENTATION
//TODO: make EntityPersister *not* depend on SessionFactoryImplementor //interface, if possible	DESIGN	0.9946016180044313	DESIGN	0.0024518802486314046	WITHOUT_CLASSIFICATION	0.002335509521541356	IMPLEMENTATION	5.466381515156028E-4	DEFECT	5.741456810862015E-5	TEST	6.939505771693487E-6	DOCUMENTATION
//TODO: is there a more elegant way than downcasting?	DESIGN	0.9999866205967324	DESIGN	8.416990715234252E-6	WITHOUT_CLASSIFICATION	2.5957947827542076E-6	IMPLEMENTATION	2.2150321944380953E-6	TEST	7.604052356662076E-8	DOCUMENTATION	7.554505163806467E-8	DEFECT
// TODO: encapsulate the protected instance variables!	DESIGN	0.9608732373680322	IMPLEMENTATION	0.023166194121537944	WITHOUT_CLASSIFICATION	0.014354810297861665	DESIGN	0.0014312615905126501	DEFECT	8.960433401568933E-5	DOCUMENTATION	8.489228803985628E-5	TEST
// should indicate that we are processing an INSERT/UPDATE/DELETE // query with a subquery implied via a collection property // function. Here, we need to use the table name itself as the // qualification alias. // TODO : verify this works for all databases... // TODO : is this also the case in non-"indexed" scenarios?	DESIGN	0.9999204019109088	DESIGN	7.558396846219856E-5	IMPLEMENTATION	3.1677042257307647E-6	DEFECT	7.080203998719768E-7	TEST	1.0940893065069481E-7	DOCUMENTATION	2.898707282391632E-8	WITHOUT_CLASSIFICATION
//TODO: copy/paste from insertRows()	DESIGN	0.7793685271745926	WITHOUT_CLASSIFICATION	0.09819656401422687	DESIGN	0.08227361143755939	DEFECT	0.03662478619597631	IMPLEMENTATION	0.0030443298722335004	TEST	4.921813054113759E-4	DOCUMENTATION
//TODO: copy/paste from recreate()	DESIGN	0.5698466127192716	WITHOUT_CLASSIFICATION	0.221555502039251	DESIGN	0.20057100588519736	IMPLEMENTATION	0.006229587999936483	DEFECT	0.0010729440086774972	TEST	7.243473476662408E-4	DOCUMENTATION
//should this interface extend PropertyMapping?	DESIGN	0.9615291986606284	DESIGN	0.03845566455372744	WITHOUT_CLASSIFICATION	1.0033565204406683E-5	DEFECT	4.111729223703553E-6	TEST	9.722051051933236E-7	DOCUMENTATION	1.9286110902117376E-8	IMPLEMENTATION
//ie. the subquery! yuck!	DESIGN	0.9829145898447582	WITHOUT_CLASSIFICATION	0.01693886849090367	DESIGN	1.1282142114636783E-4	DEFECT	2.3489191184781455E-5	IMPLEMENTATION	6.57758458246617E-6	DOCUMENTATION	3.6534674244726544E-6	TEST
//TODO: move to .sql package!!	DESIGN	0.950683305741111	DESIGN	0.04733032692496041	WITHOUT_CLASSIFICATION	0.0015456124504880035	IMPLEMENTATION	2.827483570884114E-4	DEFECT	9.971494905015219E-5	DOCUMENTATION	5.829157730179311E-5	TEST
//TODO: code duplication with SingleTableEntityPersister	DESIGN	0.9951657619099881	DESIGN	0.004659139806275	WITHOUT_CLASSIFICATION	1.500213737809013E-4	IMPLEMENTATION	1.425437782926215E-5	TEST	1.0631518239066978E-5	DOCUMENTATION	1.9101388762214287E-7	DEFECT
// TODO: It would be really, really nice to use this to also model components!	DESIGN	0.9999952612691526	DESIGN	4.1767924732202486E-6	IMPLEMENTATION	4.897985961647527E-7	WITHOUT_CLASSIFICATION	5.910753159744313E-8	DEFECT	9.972658308147161E-9	DOCUMENTATION	3.05958798705686E-9	TEST
//TODO: *two* hashmap lookups here is one too many...	DESIGN	0.8142829244164668	DEFECT	0.12914120950505328	DESIGN	0.054904124409149595	WITHOUT_CLASSIFICATION	0.0014872060641960166	IMPLEMENTATION	1.7617153600787952E-4	TEST	8.364069126487635E-6	DOCUMENTATION
//TODO: code duplication with JoinedSubclassEntityPersister	DESIGN	0.9830919055033086	DESIGN	0.01688448150865889	WITHOUT_CLASSIFICATION	1.6162522340050142E-5	IMPLEMENTATION	4.240052510824146E-6	DOCUMENTATION	3.091416543310585E-6	TEST	1.1899663842249755E-7	DEFECT
//perhaps not really necessary...	DESIGN	0.49614727613765913	WITHOUT_CLASSIFICATION	0.47301076198692976	DESIGN	0.02847371729330768	DEFECT	0.0023229834562058186	IMPLEMENTATION	3.513222178750665E-5	DOCUMENTATION	1.0128904110177465E-5	TEST
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass! // was toUnqotedAliasStrings( getIdentiferColumnNames() ) before - now tried // to remove that unqoting and missing aliases..	DESIGN	0.6693063275126144	WITHOUT_CLASSIFICATION	0.328710365820617	DESIGN	0.0019357905390821738	DEFECT	4.24310860634378E-5	TEST	4.677182841351277E-6	IMPLEMENTATION	4.078587815713802E-7	DOCUMENTATION
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass! // was toUnqotedAliasStrings( getdiscriminatorColumnName() ) before - now tried // to remove that unqoting and missing aliases..	DESIGN	0.6047945984451879	DESIGN	0.3896629474958016	WITHOUT_CLASSIFICATION	0.005486805171185717	DEFECT	5.5021757243593155E-5	TEST	4.0493276914504063E-7	DOCUMENTATION	2.221978119794729E-7	IMPLEMENTATION
//TODO: should we use SELECT .. FOR UPDATE?	DESIGN	0.9496678637159707	DESIGN	0.046490661089945984	IMPLEMENTATION	0.0031391181399380405	WITHOUT_CLASSIFICATION	3.621924110718498E-4	DOCUMENTATION	2.524893252268696E-4	DEFECT	8.767531784656004E-5	TEST
//TODO: optimize this better!	DESIGN	0.7374002924084657	IMPLEMENTATION	0.2473215322006386	DESIGN	0.013024261969672058	WITHOUT_CLASSIFICATION	0.0017597126384306782	TEST	2.5853308212239176E-4	DOCUMENTATION	2.3566770067046816E-4	DEFECT
//TODO: should we allow suffixes on these ?	DESIGN	0.9988719736176404	DESIGN	6.939537480502748E-4	WITHOUT_CLASSIFICATION	2.1697758747162702E-4	DEFECT	1.9780260847979128E-4	IMPLEMENTATION	1.1783722299198714E-5	TEST	7.508716058739854E-6	DOCUMENTATION
//This is really ugly, but necessary:	DESIGN	0.5387672946700078	WITHOUT_CLASSIFICATION	0.46016442256611867	DESIGN	0.0010498864189932232	DEFECT	1.0606502890931586E-5	IMPLEMENTATION	5.498738663778228E-6	DOCUMENTATION	2.291103325575358E-6	TEST
//ugly little workaround for fact that createUniqueKeyLoaders() does not handle component properties	DESIGN	0.9999922708544956	DESIGN	7.654704547930386E-6	WITHOUT_CLASSIFICATION	3.568138861679538E-8	IMPLEMENTATION	3.306135555730045E-8	TEST	5.103822856371231E-9	DOCUMENTATION	5.943894039913778E-10	DEFECT
//TODO: disable batch loading if lockMode > READ?	DESIGN	0.9835198181415994	WITHOUT_CLASSIFICATION	0.008226800020216828	IMPLEMENTATION	0.005989059514315191	DEFECT	0.0010176912254855847	TEST	9.803920990287126E-4	DESIGN	2.6623899935418076E-4	DOCUMENTATION
// append the SQL to return the generated identifier //TODO: suck into Insert	DESIGN	0.6760059873849669	WITHOUT_CLASSIFICATION	0.3227648777408707	DESIGN	0.0012008916545790433	IMPLEMENTATION	1.3447595200414363E-5	DOCUMENTATION	1.2662744241347041E-5	DEFECT	2.1328801417590883E-6	TEST
//TODO: I am not so sure about the exception handling in this bit!	DESIGN	0.9814259954506153	DESIGN	0.009768723554838142	DEFECT	0.008597996171880774	WITHOUT_CLASSIFICATION	1.7399383521295037E-4	IMPLEMENTATION	2.291499467425565E-5	DOCUMENTATION	1.0375992778502281E-5	TEST
//TODO: is this really necessary????	DESIGN	0.9855688795093758	DESIGN	0.01374731863887311	WITHOUT_CLASSIFICATION	5.635762999862104E-4	IMPLEMENTATION	6.961411380861707E-5	DEFECT	3.875097350326231E-5	DOCUMENTATION	1.1860464452891326E-5	TEST
//TODO: move to .sql package, and refactor with similar things!	DESIGN	0.9997237382572889	DESIGN	2.7184959726951055E-4	WITHOUT_CLASSIFICATION	2.0215648837143364E-6	DEFECT	1.0986630944057473E-6	TEST	1.0111169120611324E-6	IMPLEMENTATION	2.8080055150159635E-7	DOCUMENTATION
//TODO: implement functionality //  this might be painful to do here, as the "join post processing" for //  the subquery has already been performed (meaning that for //  theta-join dialects, the join conditions have already been moved //  over to the where clause).  A "simple" solution here might to //  perform "join post processing" once for the entire query (including //  any subqueries) at one fell swoop	DESIGN	0.9029908928050938	DESIGN	0.0970001396489806	IMPLEMENTATION	5.226463950300552E-6	WITHOUT_CLASSIFICATION	2.545225061870117E-6	DEFECT	1.1680045838175897E-6	DOCUMENTATION	2.785232949135795E-8	TEST
// todo : this eventually needs to be removed	DESIGN	0.9861701101999687	WITHOUT_CLASSIFICATION	0.013153007724853383	DESIGN	5.507990999919663E-4	IMPLEMENTATION	1.23828542335194E-4	DEFECT	1.6004797082184153E-6	DOCUMENTATION	6.539531425838967E-7	TEST
//kinda ugly, but needed for collections with a "." node mapping	DESIGN	0.9951310251793889	WITHOUT_CLASSIFICATION	0.0029104581350627313	IMPLEMENTATION	0.0016734033857038547	DESIGN	1.9347203587926146E-4	DEFECT	8.948211248972348E-5	TEST	2.159151475533575E-6	DOCUMENTATION
//is this ok?	DESIGN	0.981856794533546	WITHOUT_CLASSIFICATION	0.018039027085026593	DESIGN	4.61453567837763E-5	DEFECT	2.0592795479050786E-5	TEST	2.026462506241755E-5	IMPLEMENTATION	1.717560410221885E-5	DOCUMENTATION
//TODO: perhaps this should be some other RuntimeException...	DESIGN	0.9996757588246626	DESIGN	1.7526865340360478E-4	DEFECT	1.4589778193088425E-4	IMPLEMENTATION	2.6403840894533603E-6	TEST	3.175810002081108E-7	DOCUMENTATION	1.1677491356919434E-7	WITHOUT_CLASSIFICATION
//TODO: make this a bit nicer	DESIGN	0.9978020613378489	DESIGN	0.0014332203068973066	WITHOUT_CLASSIFICATION	4.8305203930041165E-4	IMPLEMENTATION	2.2038466781123137E-4	TEST	4.706674393230448E-5	DEFECT	1.4214904209729912E-5	DOCUMENTATION
//Yuck:	DESIGN	0.7574918181219069	WITHOUT_CLASSIFICATION	0.24091439563157122	DESIGN	0.0012177395232193231	DEFECT	1.680886978477813E-4	DOCUMENTATION	1.22860392684766E-4	IMPLEMENTATION	8.509763277007045E-5	TEST
//TODO: we should provide some way to get keys of collection of statistics to make it easier to retrieve from a GUI perspective	DESIGN	0.9999815177458349	DESIGN	1.4018351467554301E-5	WITHOUT_CLASSIFICATION	2.68647919128782E-6	DEFECT	1.6366541337302482E-6	IMPLEMENTATION	1.1810674957840102E-7	DOCUMENTATION	2.2662622949223414E-8	TEST
/**	DESIGN	0.41139116692226024	DOCUMENTATION	0.38195748800012463	DESIGN	0.10269272777172639	IMPLEMENTATION	0.0376612794413521	WITHOUT_CLASSIFICATION	0.035076360431814946	DEFECT	0.03122097743272162	TEST
// TODO : will need reference to session factory to fully complete HHH-1907	DESIGN	0.9965409144387417	DESIGN	0.0027775854499460296	IMPLEMENTATION	4.675336459852845E-4	WITHOUT_CLASSIFICATION	1.5946480523675738E-4	DEFECT	4.9935893788626703E-5	DOCUMENTATION	4.565766301655572E-6	TEST
//TODO: currently keeps Getters and Setters (instead of PropertyAccessors) because of the way getGetter() and getSetter() are implemented currently; yuck!	DESIGN	0.9999979184002249	DESIGN	1.0609007023778069E-6	WITHOUT_CLASSIFICATION	5.707783743376263E-7	DOCUMENTATION	3.416520516181753E-7	IMPLEMENTATION	8.182429343490606E-8	DEFECT	2.6444353304137756E-8	TEST
//TODO: redesign how PropertyAccessors are acquired...	DESIGN	0.9863340659164077	DESIGN	0.010365093704530199	DEFECT	0.002609852758967019	IMPLEMENTATION	3.607944057691536E-4	WITHOUT_CLASSIFICATION	2.3409466658718832E-4	DOCUMENTATION	9.609854773880471E-5	TEST
// todo : YUCK!!!	DESIGN	0.9957279763652032	WITHOUT_CLASSIFICATION	0.00360362962536183	DESIGN	5.54288519662822E-4	DEFECT	9.067531784677811E-5	IMPLEMENTATION	1.5878385533391266E-5	DOCUMENTATION	7.5517863920468045E-6	TEST
// TODO : YUCK!!!  fix after HHH-1907 is complete	DESIGN	0.9976276862586971	DESIGN	0.001972184050021868	DEFECT	2.521304919157649E-4	IMPLEMENTATION	8.187474653709327E-5	TEST	6.275854365820396E-5	WITHOUT_CLASSIFICATION	3.3659091700764573E-6	DOCUMENTATION
//TODO: need to make the majority of this functionality into a top-level support class for custom impl support	DESIGN	0.9780751722414128	DESIGN	0.021030232305814817	IMPLEMENTATION	7.828918341675141E-4	WITHOUT_CLASSIFICATION	8.609518250753444E-5	TEST	2.500602801818921E-5	DOCUMENTATION	6.02408079163841E-7	DEFECT
//TODO: design new lifecycle for ProxyFactory	DESIGN	0.481020320242238	WITHOUT_CLASSIFICATION	0.46254979824345865	DESIGN	0.05175936506737633	IMPLEMENTATION	0.002715614029802744	DOCUMENTATION	0.001200388169847882	DEFECT	7.545142472765719E-4	TEST
//TODO: would be nice to handle proxy classes elegantly!	DESIGN	0.9669518197617045	DESIGN	0.025388724872638088	WITHOUT_CLASSIFICATION	0.0064869110668051505	IMPLEMENTATION	0.0010550468741973612	DEFECT	6.724766950494115E-5	TEST	5.0249755150042655E-5	DOCUMENTATION
// TODO: copy/paste from ManyToOneType	DESIGN	0.5195605638676986	DESIGN	0.22781535062834884	IMPLEMENTATION	0.1814510675194437	WITHOUT_CLASSIFICATION	0.06650699888724997	DEFECT	0.0027975220456539747	TEST	0.0018684970516050397	DOCUMENTATION
//TODO: should this be Session.instantiate(Persister, ...)?	DESIGN	0.9821664157303915	DESIGN	0.014994216293816401	WITHOUT_CLASSIFICATION	0.0015276625048262597	IMPLEMENTATION	0.0011783572659573294	DEFECT	1.1139121481760903E-4	TEST	2.195699019073309E-5	DOCUMENTATION
//TODO: this is a bit arbitrary, expose a switch to the user?	DESIGN	0.9943931613532823	DESIGN	0.004928811507652438	WITHOUT_CLASSIFICATION	4.217251757296614E-4	IMPLEMENTATION	2.3001847348091294E-4	DEFECT	1.8488487522344553E-5	DOCUMENTATION	7.795002332356409E-6	TEST
//TODO: implement caching?! proxies?!	DESIGN	0.9988061050265363	IMPLEMENTATION	5.193848955074977E-4	WITHOUT_CLASSIFICATION	3.8201310573451604E-4	DESIGN	1.4451960914231896E-4	DEFECT	1.1196835513517468E-4	TEST	3.6009007944191095E-5	DOCUMENTATION
//TODO: is this right??	DESIGN	0.9997383717511951	DESIGN	1.2202688354470174E-4	WITHOUT_CLASSIFICATION	1.0972095963311311E-4	IMPLEMENTATION	1.2418039074919074E-5	TEST	8.780169366497644E-6	DOCUMENTATION	8.682197185648002E-6	DEFECT
// is this really necessary?	DESIGN	0.921049363119092	WITHOUT_CLASSIFICATION	0.07894441497194189	DESIGN	5.023646725588398E-6	DEFECT	8.440011773519748E-7	DOCUMENTATION	2.113035623077037E-7	TEST	1.4295750086896574E-7	IMPLEMENTATION
//TODO: move these to a new JoinableType abstract class, //extended by EntityType and PersistentCollectionType:	DESIGN	0.9912487133411125	DESIGN	0.00874526795214459	WITHOUT_CLASSIFICATION	5.727998951753167E-6	TEST	2.0992885741649363E-7	DEFECT	5.691232107988676E-8	DOCUMENTATION	2.3866612573621607E-8	IMPLEMENTATION
// TODO: this is very suboptimal for some subclasses (namely components), // since it does not take advantage of two-phase-load	DESIGN	0.8256376972351579	DESIGN	0.15760538470201405	WITHOUT_CLASSIFICATION	0.014787430036649401	DEFECT	0.0019236710554865546	TEST	2.9392542729701742E-5	DOCUMENTATION	1.6424427962271297E-5	IMPLEMENTATION
// worrying about proxies is perhaps a little bit of overkill here...	DESIGN	0.9890460150310443	DESIGN	0.010745858804035354	DEFECT	1.546480127097548E-4	IMPLEMENTATION	4.915252488654787E-5	WITHOUT_CLASSIFICATION	4.255256114948078E-6	TEST	7.037120930333647E-8	DOCUMENTATION
// NOTE VERY HACKISH WORKAROUND!! // TODO: Fix this so it will work for non-POJO entity mode	DESIGN	0.9999639934619547	DESIGN	3.494393000447136E-5	IMPLEMENTATION	9.135738338470049E-7	DEFECT	1.3706384305182264E-7	TEST	1.1968994191472068E-8	DOCUMENTATION	1.3697889911283748E-12	WITHOUT_CLASSIFICATION
// TODO: Fix this so it will work for non-POJO entity mode	DESIGN	0.6691234264596075	DESIGN	0.32446196844482283	IMPLEMENTATION	0.005839784814360757	DEFECT	4.8175085489721305E-4	TEST	8.825711584659759E-5	DOCUMENTATION	4.812310465159737E-6	WITHOUT_CLASSIFICATION
// We would probably refactor to have LogicParser (builds a tree of simple // expressions connected by and, or, not), ExpressionParser (translates // from OO terms like foo, foo.Bar, foo.Bar.Baz to SQL terms like // FOOS.ID, FOOS.BAR_ID, etc) and PathExpressionParser (which does much // the same thing it does now)	DESIGN	0.8816728263908788	WITHOUT_CLASSIFICATION	0.1182735871327462	DESIGN	4.377956919527777E-5	IMPLEMENTATION	6.307719513950951E-6	DEFECT	3.399091521795159E-6	TEST	1.0009614388651354E-7	DOCUMENTATION
//TODO: this is a little inefficient, don't need to do a whole //      deep replaceElements() call	DESIGN	0.9999977680733684	DESIGN	2.1455209796644732E-6	IMPLEMENTATION	5.196842601120121E-8	WITHOUT_CLASSIFICATION	2.462265054036908E-8	TEST	5.7200003500091215E-9	DOCUMENTATION	4.094575019064753E-9	DEFECT
//workaround for WebLogic	DESIGN	0.9783595523106473	DESIGN	0.02159323293725672	WITHOUT_CLASSIFICATION	2.5586009877849036E-5	IMPLEMENTATION	1.3292725459701397E-5	DEFECT	6.414852299720862E-6	DOCUMENTATION	1.921164458805157E-6	TEST
//TODO: this dependency is kinda Bad	DESIGN	0.9974413614062887	DESIGN	0.002099688317655975	IMPLEMENTATION	2.2118146226764388E-4	DEFECT	1.5540880462313974E-4	DOCUMENTATION	4.5983151569078127E-5	TEST	3.637685759538155E-5	WITHOUT_CLASSIFICATION
//ick!	DESIGN	0.9996462288936082	WITHOUT_CLASSIFICATION	2.857111597846328E-4	DESIGN	5.6186097523505446E-5	DEFECT	7.926230806939643E-6	DOCUMENTATION	2.5169353005034253E-6	TEST	1.4306829761736079E-6	IMPLEMENTATION
// short cut check...	DESIGN	0.9978778204623987	WITHOUT_CLASSIFICATION	0.0020414519437468343	DESIGN	6.11872879878593E-5	IMPLEMENTATION	8.214630675040185E-6	TEST	6.9602607329359625E-6	DEFECT	4.365414458781092E-6	DOCUMENTATION
// todo : move to StringHelper?	DESIGN	0.9264502217671896	WITHOUT_CLASSIFICATION	0.07333725134055097	DESIGN	2.0762093985115718E-4	DEFECT	2.891214557003858E-6	IMPLEMENTATION	1.0811915051890481E-6	DOCUMENTATION	9.335463460325316E-7	TEST
//yukky! Don't you have subclasses for that! //TODO race conditions can happen here	DESIGN	0.9774254885989176	DESIGN	0.022429047092179855	DEFECT	6.249630136912618E-5	TEST	4.755534668990098E-5	DOCUMENTATION	3.053611462541266E-5	WITHOUT_CLASSIFICATION	4.876546218102099E-6	IMPLEMENTATION
//TODO: We probably should have a StatisticsNotPublishedException, to make it clean	DESIGN	0.9990661081731705	DESIGN	7.717218456624375E-4	WITHOUT_CLASSIFICATION	1.291345936618439E-4	DEFECT	2.7507276914817797E-5	IMPLEMENTATION	4.683102247867349E-6	TEST	8.450083425359056E-7	DOCUMENTATION
// FIXME hack to work around fact that calling // Node added = root.addChild( fqn ); doesn't  // properly set the version on the node	DESIGN	0.99988172572725	DESIGN	1.1160888853417151E-4	DEFECT	6.589042694836197E-6	IMPLEMENTATION	4.618659952354712E-8	WITHOUT_CLASSIFICATION	2.8298447248225705E-8	DOCUMENTATION	1.8564743354090233E-9	TEST
// TODO: I considered validating the presence of the TS cache here, // but decided to defer unti getQueryCacheInstance() in case the  // cache is never actually used	DESIGN	0.46039094469404684	IMPLEMENTATION	0.45272449493576844	DESIGN	0.08637955299919425	WITHOUT_CLASSIFICATION	4.6332469357939404E-4	DEFECT	4.1267526263077234E-5	DOCUMENTATION	4.151511479109108E-7	TEST
//need to do that here rather than in the save event listener to let //the post insert events to have a id-filled entity when IDENTITY is used (EJB3)	DESIGN	0.9087834819810873	DESIGN	0.09082375265998895	WITHOUT_CLASSIFICATION	2.0394723805634583E-4	DEFECT	1.5470457020741612E-4	IMPLEMENTATION	3.1399810495635235E-5	TEST	2.71374016449228E-6	DOCUMENTATION
//TODO: simply remove this override //      if we fix the above todos	DESIGN	0.9703678110529759	WITHOUT_CLASSIFICATION	0.022044251217846554	DESIGN	0.006021848665029919	DEFECT	0.001137015913797577	IMPLEMENTATION	4.2565365953834913E-4	TEST	3.419490811725677E-6	DOCUMENTATION
// This, is used by SessionFactoryImpl to hand to the generated SessionImpl; // was the only reason I could see that we cannot just use null as // Settings.cacheProvider	DESIGN	0.9957088804640997	WITHOUT_CLASSIFICATION	0.004290892007418457	DESIGN	2.106211195378009E-7	DEFECT	1.0472941536480364E-8	IMPLEMENTATION	3.6933006817934055E-9	TEST	2.741120118304345E-9	DOCUMENTATION
// this is done here 'cos we might only know the type here (ugly!) // TODO: improve this a lot:	DESIGN	0.9891845256396491	DESIGN	0.01048291453331543	DEFECT	2.6675079432015013E-4	IMPLEMENTATION	6.47056060714699E-5	TEST	8.532438342640295E-7	DOCUMENTATION	2.5018280953898205E-7	WITHOUT_CLASSIFICATION
// todo : would love to have this work on a notification basis //    where the successful binding of an entity/subclass would //    emit a notification which the extendsQueue entries could //    react to...	DESIGN	0.9852450525490632	WITHOUT_CLASSIFICATION	0.01437165224508844	DESIGN	3.830089054196713E-4	DEFECT	2.5690329519338267E-7	TEST	2.1948781192832827E-8	DOCUMENTATION	7.4483520799580305E-9	IMPLEMENTATION
// TODO : not sure the best way to handle this. // The non-performant way :	DESIGN	0.9914923296366547	DESIGN	0.008253057488559616	IMPLEMENTATION	1.7029075237310113E-4	TEST	6.123791308891201E-5	DOCUMENTATION	1.3445205696726705E-5	DEFECT	9.639003626848927E-6	WITHOUT_CLASSIFICATION
// would be better to use the element-type to determine // whether the old and the new are equal here; the problem being // we do not necessarily have access to the element type in all // cases	DESIGN	0.999984260803909	WITHOUT_CLASSIFICATION	1.5658477815407447E-5	DESIGN	3.9499861802156693E-8	IMPLEMENTATION	3.747971641330716E-8	DEFECT	3.6979482328282573E-9	DOCUMENTATION	4.074912450423417E-11	TEST
// This next bit is to allow for both unsaved-value="negative" // and for "older" behavior where version number did not get // seeded if it was already set in the object // TODO: shift it into unsaved-value strategy	DESIGN	0.9492861658818602	DESIGN	0.05071172699582705	WITHOUT_CLASSIFICATION	1.2841198385869397E-6	DEFECT	7.055035089147827E-7	IMPLEMENTATION	9.43629315833552E-8	TEST	2.3136033566260117E-8	DOCUMENTATION
// merges don't cascade to uninitialized collections //	DESIGN	0.9999779145432864	WITHOUT_CLASSIFICATION	2.0306883713149744E-5	DESIGN	1.4458291888388491E-6	IMPLEMENTATION	2.130732886486944E-7	DEFECT	1.0441042686550613E-7	TEST	1.5260095962235794E-8	DOCUMENTATION
// TODO: an alternative is to check if the owner has changed; if it hasn't then // return collection.getOwner()	DESIGN	0.9537992162527309	IMPLEMENTATION	0.04384668834756589	WITHOUT_CLASSIFICATION	0.0016971902446631408	DESIGN	6.359354459680873E-4	DEFECT	1.9052910293693037E-5	TEST	1.9167987782848725E-6	DOCUMENTATION
//it is possible that the tree-walking in OuterJoinLoader can get to //an association defined by a subclass, in which case the property-ref //might refer to a property defined on a subclass of the current class //in this case, the table name is not known - this temporary solution  //assumes that the property-ref refers to a property of the subclass //table that the association belongs to (a reasonable guess) //TODO: fix this, add: OuterJoinLoadable.getSubclassPropertyTableName(String propertyName)	DESIGN	0.9880353580667661	DESIGN	0.011963466885106949	DEFECT	7.054385401220564E-7	DOCUMENTATION	2.2962911192125045E-7	WITHOUT_CLASSIFICATION	1.8604916635732746E-7	TEST	5.393130859115407E-8	IMPLEMENTATION
// this only works because collection entries are kept in a sequenced // map by persistence context (maybe we should do like entities and // keep a separate sequences set...) //TODO: calling entrySet on an IdentityMap is SLOW!!	DESIGN	0.9996086121430817	DESIGN	3.729970837274417E-4	DEFECT	1.7420725394281042E-5	IMPLEMENTATION	5.27416789979313E-7	WITHOUT_CLASSIFICATION	3.814787824196882E-7	TEST	6.115222418622977E-8	DOCUMENTATION
// important, to account for newly saved entities in query // todo : some kind of check for new status...	DESIGN	0.5067910984678358	WITHOUT_CLASSIFICATION	0.48683821334009847	DESIGN	0.0040352472959094485	IMPLEMENTATION	0.0022858531426725786	DEFECT	2.9491717340153996E-5	TEST	2.009603614358521E-5	DOCUMENTATION
// brand new collection //TODO: or an array!! we can't lock objects with arrays now??	DESIGN	0.8234509161520254	WITHOUT_CLASSIFICATION	0.131250454712953	DEFECT	0.02834379575248793	DESIGN	0.016549968434464102	IMPLEMENTATION	3.1243627015738076E-4	DOCUMENTATION	9.242867791207767E-5	TEST
//TODO: if object was an uninitialized proxy, this is inefficient, //      resulting in two SQL selects	DESIGN	0.7004852166911446	WITHOUT_CLASSIFICATION	0.299190393926725	DESIGN	1.718156190925392E-4	TEST	1.2816738838038015E-4	DEFECT	2.26421422849495E-5	DOCUMENTATION	1.7642323724879362E-6	IMPLEMENTATION
//before cascade! //TODO: should this be Session.instantiate(Persister, ...)?	DESIGN	0.9203689709184467	DESIGN	0.04183709572663402	DEFECT	0.03204132694853916	WITHOUT_CLASSIFICATION	0.005419544203674527	IMPLEMENTATION	2.475437943628441E-4	TEST	8.55184083426997E-5	DOCUMENTATION
// TODO : absolutely no usages of this constructor form; can it go away?	DESIGN	0.9971494744448971	DESIGN	0.00279960435981073	IMPLEMENTATION	4.165791982525024E-5	TEST	6.2259665273403315E-6	WITHOUT_CLASSIFICATION	2.7656698788000356E-6	DOCUMENTATION	2.7163906065523917E-7	DEFECT
// todo : need to find a clean way to handle the "event source" role // a seperate classs responsible for generating/dispatching events just duplicates most of the Session methods... // passing around seperate reto interceptor, factory, actionQueue, and persistentContext is not manageable...	DESIGN	0.9999941230792193	DESIGN	5.774597575216687E-6	WITHOUT_CLASSIFICATION	8.345965818728683E-8	IMPLEMENTATION	1.6001430057165006E-8	TEST	2.2052054940102684E-9	DEFECT	6.569117205357446E-10	DOCUMENTATION
// todo : remove	DESIGN	0.9750713427357223	WITHOUT_CLASSIFICATION	0.024783711975528557	DESIGN	8.726767337014877E-5	DEFECT	5.2366746350899364E-5	IMPLEMENTATION	3.325130336219159E-6	TEST	1.985738691973124E-6	DOCUMENTATION
//aliasRefNode.resolve( false, false, aliasRefNode.getText() ); //TODO: is it kosher to do it here? //TODO: is it kosher to do it here?	DESIGN	0.9869383686261046	IMPLEMENTATION	0.012428803869265445	DESIGN	3.5362025364792603E-4	TEST	1.8132275727553222E-4	WITHOUT_CLASSIFICATION	9.710147362064153E-5	DEFECT	7.830200859463007E-7	DOCUMENTATION
// No explicit select expression; render the id and properties // projection lists for every persister in the from clause into // a single 'token node'. //TODO: the only reason we need this stuff now is collection filters, //      we should get rid of derived select clause completely!	DESIGN	0.999644513218814	DESIGN	3.0952048911020436E-4	DEFECT	4.234042891536557E-5	WITHOUT_CLASSIFICATION	2.63864366926722E-6	TEST	7.733836998677689E-7	DOCUMENTATION	2.1383579133699867E-7	IMPLEMENTATION
// TODO : an optimization here would be to consider cascade deletes and not gen those delete statements; //      the difficulty is the ordering of the tables here vs the cascade attributes on the persisters -> //          the table info gotten here should really be self-contained (i.e., a class representation //          defining all the needed attributes), then we could then get an array of those	DESIGN	0.9998407287148537	DESIGN	9.871035401968128E-5	IMPLEMENTATION	5.8607945428370706E-5	WITHOUT_CLASSIFICATION	1.6410006607573636E-6	DEFECT	2.4379880181447326E-7	DOCUMENTATION	6.818623545044896E-8	TEST
// TODO: get SQL rendering out of here, create an AST for the join expressions. // Use the SQL generator grammar to generate the SQL text for the index expression.	DESIGN	0.8349654371834047	WITHOUT_CLASSIFICATION	0.13186712199889256	DESIGN	0.03273043226302695	IMPLEMENTATION	3.665865227080594E-4	TEST	3.936105299627701E-5	DOCUMENTATION	3.106097897151009E-5	DEFECT
// TODO : this really needs to be delayed unitl after we definitively know all node types // where this is currently a problem is parameters for which where we cannot unequivocally // resolve an expected type	DESIGN	0.9974961312558643	DESIGN	0.0021433048050369346	DEFECT	2.4887004389574337E-4	WITHOUT_CLASSIFICATION	6.058322485911598E-5	DOCUMENTATION	5.030035525869932E-5	IMPLEMENTATION	8.103150850809567E-7	TEST
// TODO: Figure out a better way to get the FROM elements in a proper tree structure. // If this is not the destination of a many-to-many, add it as a child of the origin.	DESIGN	0.8461100204825301	DESIGN	0.1218541406344425	DEFECT	0.023598589369422183	IMPLEMENTATION	0.00804917426164899	WITHOUT_CLASSIFICATION	2.057873588362208E-4	TEST	1.8228789312000165E-4	DOCUMENTATION
// work around that crazy issue where the tree contains // "empty" FromElements (no text); afaict, this is caused // by FromElementFactory.createCollectionJoin()	DESIGN	0.9291567275566743	DESIGN	0.07034864922123726	WITHOUT_CLASSIFICATION	2.465059018165126E-4	IMPLEMENTATION	2.390810890048967E-4	DEFECT	7.006553794080492E-6	TEST	2.0296774730016222E-6	DOCUMENTATION
//TODO: this class does too many things! we need a different //kind of path expression parser for each of the diffferent //ways in which path expressions can occur	DESIGN	0.9374047901846404	DESIGN	0.05985812330325985	DEFECT	0.0015345076744109616	WITHOUT_CLASSIFICATION	0.001164302076925073	DOCUMENTATION	2.363808951887603E-5	IMPLEMENTATION	1.4638671244906495E-5	TEST
//real hacky... // used to count the nesting of parentheses	DESIGN	0.9995273697682662	DESIGN	2.594510069155731E-4	IMPLEMENTATION	1.7323262043724837E-4	WITHOUT_CLASSIFICATION	3.5813535291190724E-5	DEFECT	2.631757633838752E-6	TEST	1.5013114560179442E-6	DOCUMENTATION
// TODO : would be really nice to cache the spec on the query-def so as to not have to re-calc the hash; // currently not doable though because of the resultset-ref stuff...	DESIGN	0.9710230100502092	DESIGN	0.02549713522933618	WITHOUT_CLASSIFICATION	0.0018429618495217365	DEFECT	0.0015643106404498708	IMPLEMENTATION	6.99343718512698E-5	DOCUMENTATION	2.647858631722884E-6	TEST
//for arrays, we should end the collection load before resolving //the entities, since the actual array instances are not instantiated //during loading //TODO: or we could do this polymorphically, and have two //      different operations implemented differently for arrays	DESIGN	0.8860187306150866	DEFECT	0.059387070724431265	IMPLEMENTATION	0.054521676682113454	DESIGN	5.989864773062105E-5	WITHOUT_CLASSIFICATION	7.374007541287435E-6	DOCUMENTATION	5.249323096816034E-6	TEST
// polymorphism not really handled completely correctly, // perhaps...well, actually its ok, assuming that the // entity name used in the lookup is the same as the // the one used here, which it will be	DESIGN	0.6793383763954076	WITHOUT_CLASSIFICATION	0.314057171246811	DESIGN	0.0065901436645605825	DEFECT	1.4092937806148176E-5	IMPLEMENTATION	1.6266916418908727E-7	TEST	5.308625058788006E-8	DOCUMENTATION
// TODO: should "record" how many properties we have reffered to - and if we  //       don't get'em'all we throw an exception! Way better than trial and error ;)	DESIGN	0.9696577216589817	DEFECT	0.029698316205952903	DESIGN	6.403578802916923E-4	WITHOUT_CLASSIFICATION	2.534298919142967E-6	TEST	6.962571226191911E-7	DOCUMENTATION	3.7369873193572796E-7	IMPLEMENTATION
// VERY IMPORTANT!!!! - This class needs to be free of any static references // to any CGLIB or Javassist classes.  Otherwise, users will always need both // on their classpaths no matter which (if either) they use. // // Another option here would be to remove the Hibernate.isPropertyInitialized() // method and have the users go through the SessionFactory to get this information.	DESIGN	0.9999991101500864	WITHOUT_CLASSIFICATION	8.789155049765514E-7	DESIGN	7.72831666737693E-9	DEFECT	2.251851645969484E-9	DOCUMENTATION	9.283732737898824E-10	IMPLEMENTATION	2.5867224889492432E-11	TEST
// TODO: is it really neceassry to provide Configuration to CollectionPersisters ? Should it not be enough with associated class ? // or why does EntityPersister's not get access to configuration ? // // The only reason I could see that Configuration gets passed to collection persisters // is so that they can look up the dom4j node name of the entity element in case // no explicit node name was applied at the collection element level.  Are you kidding me? // Trivial to fix then.  Just store and expose the node name on the entity persister // (which the collection persister looks up anyway via other means...).	DESIGN	0.9999523346011443	DESIGN	4.6335612271181884E-5	WITHOUT_CLASSIFICATION	8.951569094149689E-7	DEFECT	2.1015088040573275E-7	IMPLEMENTATION	1.1901518044042504E-7	DOCUMENTATION	1.0546361420889978E-7	TEST
//for backward compatibility, allow a set with no not-null  //element columns, using all columns in the row locater SQL //TODO: create an implicit not null constraint on all cols?	DESIGN	0.9201524273042333	WITHOUT_CLASSIFICATION	0.07307020402261324	DESIGN	0.005626446135671651	IMPLEMENTATION	7.747266058385736E-4	DEFECT	3.581626380024391E-4	TEST	1.803329364088475E-5	DOCUMENTATION
//SPACES //TODO: i'm not sure, but perhaps we should exclude //      abstract denormalized tables?	DESIGN	0.9968234538641964	DESIGN	0.002001772568377705	IMPLEMENTATION	8.503322378827536E-4	DEFECT	1.520439320889896E-4	WITHOUT_CLASSIFICATION	1.377081336496867E-4	TEST	3.468926380445159E-5	DOCUMENTATION
//workaround, for backward compatibility of sets with no //not-null columns, assume all columns are used in the //row locator SQL	DESIGN	0.9992373789676616	WITHOUT_CLASSIFICATION	7.625227265070805E-4	DESIGN	9.227072084775667E-8	DEFECT	2.1369751905997457E-9	IMPLEMENTATION	2.0049834987069013E-9	TEST	1.893151629510179E-9	DOCUMENTATION
//note that this method could easily be moved up to BasicEntityPersister, //if we ever needed to reuse it from other subclasses	DESIGN	0.9983779607570575	DESIGN	0.0016219473439778493	WITHOUT_CLASSIFICATION	6.246115927944995E-8	TEST	2.7193215218067457E-8	IMPLEMENTATION	1.3626668954990829E-9	DEFECT	8.819231194875083E-10	DOCUMENTATION
//index += getPropertyColumnSpan( i ); //TODO:  this is kinda slow...	DESIGN	0.9819895476858298	DEFECT	0.009854727809306085	DESIGN	0.0070983825588890334	IMPLEMENTATION	6.477571112298844E-4	WITHOUT_CLASSIFICATION	3.696011453762934E-4	TEST	3.998368936891236E-5	DOCUMENTATION
//TODO: need some caching scheme? really comes down to decision  //      regarding amount of state (if any) kept on PropertyAccessors	DESIGN	0.8996685980376976	DESIGN	0.09008904807448144	DEFECT	0.006426005203879614	WITHOUT_CLASSIFICATION	0.0017791806424664902	IMPLEMENTATION	0.0016562566342853088	TEST	3.809114071897114E-4	DOCUMENTATION
// TODO: here is why we need to make bytecode provider global :( // TODO : again, fix this after HHH-1907 is complete	DESIGN	0.9987586823913104	DESIGN	0.0011476808447179224	IMPLEMENTATION	8.303745438467367E-5	TEST	9.465072824266969E-6	DEFECT	1.1337857864769233E-6	DOCUMENTATION	4.5097636514604915E-10	WITHOUT_CLASSIFICATION
//TODO: Yuck! This is not quite good enough, it's a quick //hack around the problem of having a to-one association //that refers to an embedded component:	DESIGN	0.9999983176350783	DESIGN	1.0294545468399258E-6	DEFECT	6.403767484878031E-7	IMPLEMENTATION	5.98107509728705E-9	WITHOUT_CLASSIFICATION	3.343926673885897E-9	DOCUMENTATION	3.208624828661635E-9	TEST
// for DOM4J "collections" only // TODO: it would be better if this was done at the higher level by Printer	DESIGN	0.6642141079169268	DESIGN	0.1748918616300719	TEST	0.09679927495181334	IMPLEMENTATION	0.05742412261279237	WITHOUT_CLASSIFICATION	0.006434352177090049	DEFECT	2.3628071130550254E-4	DOCUMENTATION
// would be great to move all this below here into another method that could also be used // from the new scrolling stuff. // // Would need to change the way the max-row stuff is handled (i.e. behind an interface) so // that I could do the control breaking at the means to know when to stop	DESIGN	0.999959728613802	DESIGN	4.0271132239980753E-5	WITHOUT_CLASSIFICATION	1.7744928627346866E-10	TEST	5.65291023282432E-11	DEFECT	1.2104941866754393E-11	DOCUMENTATION	7.87469747337617E-12	IMPLEMENTATION
//TODO: can we *always* use the "null property" approach for everything?	DESIGN	0.9872485984158408	DESIGN	0.007154188526363914	IMPLEMENTATION	0.005005802792438225	WITHOUT_CLASSIFICATION	4.7141865796522156E-4	DEFECT	1.1855402778683237E-4	DOCUMENTATION	1.4375796050494903E-6	TEST
//polymorphism comment above	DESIGN	0.999991268671047	WITHOUT_CLASSIFICATION	6.743274891621794E-6	DESIGN	1.631201203472828E-6	DEFECT	1.6553029048235638E-7	DOCUMENTATION	1.237536570266143E-7	TEST	6.756891019607187E-8	IMPLEMENTATION
// some messy, complex stuff here, since createCriteria() can take an // aliased path, or a path rooted at the creating criteria instance	DESIGN	0.9999929526968354	WITHOUT_CLASSIFICATION	5.113253251932538E-6	DEFECT	9.300343034206326E-7	DESIGN	8.878058032989071E-7	IMPLEMENTATION	1.0795346794307268E-7	TEST	8.256337982219005E-9	DOCUMENTATION
//TODO: really bad, evil hack to fix!!!	DESIGN	0.999997225841816	DESIGN	1.4712978196298309E-6	IMPLEMENTATION	1.2635908991445932E-6	DEFECT	3.4987048638129645E-8	DOCUMENTATION	2.2652976949398245E-9	TEST	2.0171188277840453E-9	WITHOUT_CLASSIFICATION
// ugly hack for cases like "elements(foo.bar.collection)" // (multi-part path expression ending in elements or indices)	DESIGN	0.9987934059679446	DESIGN	6.979286672587015E-4	DEFECT	4.914250184958027E-4	WITHOUT_CLASSIFICATION	1.6833790117852394E-5	IMPLEMENTATION	2.651251488962204E-7	TEST	1.414310341367843E-7	DOCUMENTATION
// try block is a hack around fact that currently tuplizers are not // given the opportunity to resolve a subclass entity name.  this // allows the (we assume custom) interceptor the ability to // influence this decision if we were not able to based on the // given entityName	DESIGN	0.999998727223981	DESIGN	1.2727171562187186E-6	WITHOUT_CLASSIFICATION	2.734904844396677E-11	IMPLEMENTATION	1.6987180750176387E-11	TEST	1.4294270990974258E-11	DOCUMENTATION	2.321656424902924E-13	DEFECT
/////////////////////////////////////////////////////////////////////// // HACK ALERT !!!!!!!!!!!!!!!!!!!!!!!!!!!! // Attempt to work around "ghost" ImpliedFromElements that occasionally // show up between the actual things being joined.  This consistently // occurs from index nodes (at least against many-to-many).  Not sure // if there are other conditions // // Essentially, look-ahead to the next FromElement that actually // writes something to the SQL	DESIGN	0.9999999339070708	DESIGN	6.316438560434026E-8	WITHOUT_CLASSIFICATION	1.898212009552542E-9	DEFECT	8.058700321628339E-10	TEST	1.4917308014539597E-10	DOCUMENTATION	7.528850975174849E-11	IMPLEMENTATION
//init the table here instead of earlier, so that we can get a quoted table name //TODO: would it be better to simply pass the qualified table name, instead of //      splitting it up into schema/catalog/table names	DESIGN	0.9255545998443722	DESIGN	0.04927421486404929	WITHOUT_CLASSIFICATION	0.0251190516793538	IMPLEMENTATION	5.128315443268163E-5	TEST	7.00078368015105E-7	DEFECT	1.5037942399922785E-7	DOCUMENTATION
// TODO : would be great to have a Mapping#hasNonIdentifierPropertyNamedId method // I don't believe that Mapping#getReferencedPropertyType accounts for the identifier property; so // if it returns for a property named 'id', then we should have a non-id field named id	DESIGN	0.9651589457119232	DESIGN	0.03478387651162175	WITHOUT_CLASSIFICATION	5.223383377414023E-5	DEFECT	3.7089693125952817E-6	TEST	1.0769399440807763E-6	IMPLEMENTATION	1.5803342418863977E-7	DOCUMENTATION
//TODO: is this really necessary????	DESIGN	0.9855688795093758	DESIGN	0.01374731863887311	WITHOUT_CLASSIFICATION	5.635762999862104E-4	IMPLEMENTATION	6.961411380861707E-5	DEFECT	3.875097350326231E-5	DOCUMENTATION	1.1860464452891326E-5	TEST
//TODO: ideally we need the construction of PropertyAccessor to take the following: //      1) EntityMode //      2) EntityMode-specific data (i.e., the classname for pojo entities) //      3) Property-specific data based on the EntityMode (i.e., property-name or dom4j-node-name) // The easiest way, with the introduction of the new runtime-metamodel classes, would be the // the following predicates: //      1) PropertyAccessorFactory.getPropertyAccessor() takes references to both a //          org.hibernate.metadata.EntityModeMetadata and org.hibernate.metadata.Property //      2) What is now termed a "PropertyAccessor" stores any values needed from those two //          pieces of information //      3) Code can then simply call PropertyAccess.getGetter() with no parameters; likewise with //          PropertyAccessor.getSetter()	DESIGN	0.8836029790787215	DESIGN	0.11625264858043974	WITHOUT_CLASSIFICATION	9.269361677817668E-5	IMPLEMENTATION	3.1683788903556496E-5	DEFECT	1.4211393322577295E-5	DOCUMENTATION	5.7835418344955165E-6	TEST
//TODO: this is temporary in that the end result will probably not take a Property reference per-se.	DESIGN	0.9999623715506987	DESIGN	3.5284910063124486E-5	DEFECT	2.33008059146271E-6	WITHOUT_CLASSIFICATION	9.915325624224017E-9	DOCUMENTATION	3.4193808620315563E-9	TEST	1.239400751426211E-10	IMPLEMENTATION
// todo : this eventually needs to be removed	DESIGN	0.9861701101999687	WITHOUT_CLASSIFICATION	0.013153007724853383	DESIGN	5.507990999919663E-4	IMPLEMENTATION	1.23828542335194E-4	DEFECT	1.6004797082184153E-6	DOCUMENTATION	6.539531425838967E-7	TEST
//TODO: make this a bit nicer	DESIGN	0.9978020613378489	DESIGN	0.0014332203068973066	WITHOUT_CLASSIFICATION	4.8305203930041165E-4	IMPLEMENTATION	2.2038466781123137E-4	TEST	4.706674393230448E-5	DEFECT	1.4214904209729912E-5	DOCUMENTATION
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9966035279007404	DESIGN	0.0033740308886710583	WITHOUT_CLASSIFICATION	1.6706857390333897E-5	IMPLEMENTATION	5.400941017579401E-6	DEFECT	2.1093104458223809E-7	DOCUMENTATION	1.2248113620643592E-7	TEST
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9966035279007404	DESIGN	0.0033740308886710583	WITHOUT_CLASSIFICATION	1.6706857390333897E-5	IMPLEMENTATION	5.400941017579401E-6	DEFECT	2.1093104458223809E-7	DOCUMENTATION	1.2248113620643592E-7	TEST
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9966035279007404	DESIGN	0.0033740308886710583	WITHOUT_CLASSIFICATION	1.6706857390333897E-5	IMPLEMENTATION	5.400941017579401E-6	DEFECT	2.1093104458223809E-7	DOCUMENTATION	1.2248113620643592E-7	TEST
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9966035279007404	DESIGN	0.0033740308886710583	WITHOUT_CLASSIFICATION	1.6706857390333897E-5	IMPLEMENTATION	5.400941017579401E-6	DEFECT	2.1093104458223809E-7	DOCUMENTATION	1.2248113620643592E-7	TEST
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9966035279007404	DESIGN	0.0033740308886710583	WITHOUT_CLASSIFICATION	1.6706857390333897E-5	IMPLEMENTATION	5.400941017579401E-6	DEFECT	2.1093104458223809E-7	DOCUMENTATION	1.2248113620643592E-7	TEST
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9966035279007404	DESIGN	0.0033740308886710583	WITHOUT_CLASSIFICATION	1.6706857390333897E-5	IMPLEMENTATION	5.400941017579401E-6	DEFECT	2.1093104458223809E-7	DOCUMENTATION	1.2248113620643592E-7	TEST
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9966035279007404	DESIGN	0.0033740308886710583	WITHOUT_CLASSIFICATION	1.6706857390333897E-5	IMPLEMENTATION	5.400941017579401E-6	DEFECT	2.1093104458223809E-7	DOCUMENTATION	1.2248113620643592E-7	TEST
// todo : we can remove this once the deprecated ctor can be made private...	DESIGN	0.9966035279007404	DESIGN	0.0033740308886710583	WITHOUT_CLASSIFICATION	1.6706857390333897E-5	IMPLEMENTATION	5.400941017579401E-6	DEFECT	2.1093104458223809E-7	DOCUMENTATION	1.2248113620643592E-7	TEST
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.9998775688216921	DESIGN	7.150160571681219E-5	WITHOUT_CLASSIFICATION	2.99959611899448E-5	DOCUMENTATION	2.052012853454902E-5	DEFECT	3.448934195492264E-7	TEST	6.858944692912986E-8	IMPLEMENTATION
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.9998775688216921	DESIGN	7.150160571681219E-5	WITHOUT_CLASSIFICATION	2.99959611899448E-5	DOCUMENTATION	2.052012853454902E-5	DEFECT	3.448934195492264E-7	TEST	6.858944692912986E-8	IMPLEMENTATION
/**     * FIXME Per the RegionFactory class Javadoc, this constructor version     * should not be necessary.     *      * @param props The configuration properties     */	DESIGN	0.9998775688216921	DESIGN	7.150160571681219E-5	WITHOUT_CLASSIFICATION	2.99959611899448E-5	DOCUMENTATION	2.052012853454902E-5	DEFECT	3.448934195492264E-7	TEST	6.858944692912986E-8	IMPLEMENTATION
// TODO : probably better to calculate these and pass them in, as it'll be more performant	DESIGN	0.9999961742901424	DESIGN	2.7357919320557175E-6	IMPLEMENTATION	5.977481613720186E-7	DEFECT	4.4693493293539896E-7	DOCUMENTATION	3.6299715886488906E-8	WITHOUT_CLASSIFICATION	8.935115335725868E-9	TEST
