/*     * @see java.lang.Object#hashCode()     */	WITHOUT_CLASSIFICATION	0.9999937095428904	WITHOUT_CLASSIFICATION	6.290457109648908E-6	DEFECT
/*     * Is this item a copy?     *     * @see java.lang.Object#equals(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999847428690186	WITHOUT_CLASSIFICATION	1.5257130981395722E-5	DEFECT
// once one criticism is found, exit	WITHOUT_CLASSIFICATION	0.9999957706198174	WITHOUT_CLASSIFICATION	4.229380182639795E-6	DEFECT
//////////////////////////////////////////////////////////////// // constructor	WITHOUT_CLASSIFICATION	0.999999528930968	WITHOUT_CLASSIFICATION	4.7106903193685653E-7	DEFECT
//////////////////////////////////////////////////////////////// // instance variables	WITHOUT_CLASSIFICATION	0.9999997804293774	WITHOUT_CLASSIFICATION	2.195706224349368E-7	DEFECT
//////////////////////////////////////////////////////////////// // user interface	WITHOUT_CLASSIFICATION	0.999999936426021	WITHOUT_CLASSIFICATION	6.35739790461971E-8	DEFECT
//////////////////////////////////////////////////////////////// // criticism control	WITHOUT_CLASSIFICATION	0.9999991543246208	WITHOUT_CLASSIFICATION	8.456753791612114E-7	DEFECT
//////////////////////////////////////////////////////////////// // issue resolutions	WITHOUT_CLASSIFICATION	0.9999927288767749	WITHOUT_CLASSIFICATION	7.271123225163643E-6	DEFECT
//////////////////////////////////////////////////////////////// // criticism control	WITHOUT_CLASSIFICATION	0.9999991543246208	WITHOUT_CLASSIFICATION	8.456753791612114E-7	DEFECT
//////////////////////////////////////////////////////////////// // critiquing	WITHOUT_CLASSIFICATION	0.999997363133941	WITHOUT_CLASSIFICATION	2.636866059058712E-6	DEFECT
//////////////////////////////////////////////////////////////// // design feedback	WITHOUT_CLASSIFICATION	0.9999994288852115	WITHOUT_CLASSIFICATION	5.711147884613349E-7	DEFECT
// the critiquing thread should wait if disabled.	WITHOUT_CLASSIFICATION	0.9999916808636524	WITHOUT_CLASSIFICATION	8.319136347545385E-6	DEFECT
// why?	WITHOUT_CLASSIFICATION	0.9999473994873793	WITHOUT_CLASSIFICATION	5.2600512620600364E-5	DEFECT
/*     * Performs critique asap.     *     * @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999997704038955	WITHOUT_CLASSIFICATION	2.2959610444105156E-7	DEFECT
/*     * @see java.lang.Object#hashCode()     */	WITHOUT_CLASSIFICATION	0.9999937095428904	WITHOUT_CLASSIFICATION	6.290457109648908E-6	DEFECT
//////////////////////////////////////////////////////////////// // instance variables	WITHOUT_CLASSIFICATION	0.9999997804293774	WITHOUT_CLASSIFICATION	2.195706224349368E-7	DEFECT
//////////////////////////////////////////////////////////////// // critiquing	WITHOUT_CLASSIFICATION	0.999997363133941	WITHOUT_CLASSIFICATION	2.636866059058712E-6	DEFECT
//////////////////////////////////////////////////////////////// // constructor and singeton methods	WITHOUT_CLASSIFICATION	0.9999998965770619	WITHOUT_CLASSIFICATION	1.0342293809549149E-7	DEFECT
// why?	WITHOUT_CLASSIFICATION	0.9999473994873793	WITHOUT_CLASSIFICATION	5.2600512620600364E-5	DEFECT
//                      && getAutoCritique()	WITHOUT_CLASSIFICATION	0.9999987572238316	WITHOUT_CLASSIFICATION	1.2427761684357107E-6	DEFECT
/* Don't clear everything here, breaks loading! */	WITHOUT_CLASSIFICATION	0.9525304633497128	WITHOUT_CLASSIFICATION	0.047469536650287164	DEFECT
//v71	WITHOUT_CLASSIFICATION	0.9999343744309167	WITHOUT_CLASSIFICATION	6.562556908321229E-5	DEFECT
// Don't let a transient error kill the thread	WITHOUT_CLASSIFICATION	0.9999794032510311	WITHOUT_CLASSIFICATION	2.059674896890357E-5	DEFECT
/* do nothing */	WITHOUT_CLASSIFICATION	0.9999729298088619	WITHOUT_CLASSIFICATION	2.7070191138062365E-5	DEFECT
//clear out queues! @@@	WITHOUT_CLASSIFICATION	0.9999939234960953	WITHOUT_CLASSIFICATION	6.076503904718102E-6	DEFECT
//decision model listener	WITHOUT_CLASSIFICATION	0.9999970638761239	WITHOUT_CLASSIFICATION	2.936123876149537E-6	DEFECT
/* do nothing */	WITHOUT_CLASSIFICATION	0.9999729298088619	WITHOUT_CLASSIFICATION	2.7070191138062365E-5	DEFECT
/* end class ChildGenDMElements */	WITHOUT_CLASSIFICATION	0.9996807667308093	WITHOUT_CLASSIFICATION	3.192332691906932E-4	DEFECT
//////////////////////////////////////////////////////////////// // accessors	WITHOUT_CLASSIFICATION	0.99999900930865	WITHOUT_CLASSIFICATION	9.906913499891305E-7	DEFECT
//////////////////////////////////////////////////////////////// // constants	WITHOUT_CLASSIFICATION	0.9999985290529746	WITHOUT_CLASSIFICATION	1.4709470253565026E-6	DEFECT
//////////////////////////////////////////////////////////////// // instance variables	WITHOUT_CLASSIFICATION	0.9999997804293774	WITHOUT_CLASSIFICATION	2.195706224349368E-7	DEFECT
//////////////////////////////////////////////////////////////// // user interface	WITHOUT_CLASSIFICATION	0.999999936426021	WITHOUT_CLASSIFICATION	6.35739790461971E-8	DEFECT
//////////////////////////////////////////////////////////////// // issue resolution	WITHOUT_CLASSIFICATION	0.9999929535580133	WITHOUT_CLASSIFICATION	7.046441986643987E-6	DEFECT
//TODO: This should be the name of the designer that created //      the todoitem, not the current username!	WITHOUT_CLASSIFICATION	0.9929183845920146	WITHOUT_CLASSIFICATION	0.007081615407985386	DEFECT
// LOG.log(Level.FINE, "predicate() returned true, creating ToDoItem");	WITHOUT_CLASSIFICATION	0.9999999319969446	WITHOUT_CLASSIFICATION	6.800305537800189E-8	DEFECT
//////////////////////////////////////////////////////////////// // corrective automations, wizards	WITHOUT_CLASSIFICATION	0.999963040642701	WITHOUT_CLASSIFICATION	3.695935729907229E-5	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
//////////////////////////////////////////////////////////////// // constructor	WITHOUT_CLASSIFICATION	0.999999528930968	WITHOUT_CLASSIFICATION	4.7106903193685653E-7	DEFECT
//////////////////////////////////////////////////////////////// // instance variables	WITHOUT_CLASSIFICATION	0.9999997804293774	WITHOUT_CLASSIFICATION	2.195706224349368E-7	DEFECT
//////////////////////////////////////////////////////////////// // critiquing	WITHOUT_CLASSIFICATION	0.999997363133941	WITHOUT_CLASSIFICATION	2.636866059058712E-6	DEFECT
//////////////////////////////////////////////////////////////// // criticism control	WITHOUT_CLASSIFICATION	0.9999991543246208	WITHOUT_CLASSIFICATION	8.456753791612114E-7	DEFECT
/* TODO: Make use of the constants defined in the ToDoItem class! */	WITHOUT_CLASSIFICATION	0.6524406755063498	DEFECT	0.3475593244936502	WITHOUT_CLASSIFICATION
// if wizClass is not a subclass of Wizard, print a warning	WITHOUT_CLASSIFICATION	0.9999943113776201	WITHOUT_CLASSIFICATION	5.688622379983101E-6	DEFECT
//return getCriticName();	WITHOUT_CLASSIFICATION	0.9999977710633874	WITHOUT_CLASSIFICATION	2.2289366125473936E-6	DEFECT
//////////////////////////////////////////////////////////////// // criticism control	WITHOUT_CLASSIFICATION	0.9999991543246208	WITHOUT_CLASSIFICATION	8.456753791612114E-7	DEFECT
//////////////////////////////////////////////////////////////// // design feedback	WITHOUT_CLASSIFICATION	0.9999994288852115	WITHOUT_CLASSIFICATION	5.711147884613349E-7	DEFECT
//////////////////////////////////////////////////////////////// // issue resolution	WITHOUT_CLASSIFICATION	0.9999929535580133	WITHOUT_CLASSIFICATION	7.046441986643987E-6	DEFECT
/* end interface Poster */	WITHOUT_CLASSIFICATION	0.9999960484863887	WITHOUT_CLASSIFICATION	3.9515136113117044E-6	DEFECT
//////////////////////////////////////////////////////////////// // constants	WITHOUT_CLASSIFICATION	0.9999985290529746	WITHOUT_CLASSIFICATION	1.4709470253565026E-6	DEFECT
//////////////////////////////////////////////////////////////// // instance variables	WITHOUT_CLASSIFICATION	0.9999997804293774	WITHOUT_CLASSIFICATION	2.195706224349368E-7	DEFECT
// LOG.log(Level.FINE, //         "Adding resolution for: " + c.getClass() + " " + canCreate);	WITHOUT_CLASSIFICATION	0.9999998531584691	WITHOUT_CLASSIFICATION	1.4684153081536257E-7	DEFECT
// Use this for fast fail instead. // Sacrificed for complete fail. d00mst //throw new UnresolvableException( //	WITHOUT_CLASSIFICATION	0.9999961914279034	WITHOUT_CLASSIFICATION	3.8085720965500385E-6	DEFECT
// TODO: values	WITHOUT_CLASSIFICATION	0.7610125752422006	WITHOUT_CLASSIFICATION	0.23898742475779952	DEFECT
/* end class Goal */	WITHOUT_CLASSIFICATION	0.9999613748174965	WITHOUT_CLASSIFICATION	3.862518250340333E-5	DEFECT
// check if we are using a supported java version	WITHOUT_CLASSIFICATION	0.9999999736670094	WITHOUT_CLASSIFICATION	2.6332990599648248E-8	DEFECT
//implements java.io.Serialization	WITHOUT_CLASSIFICATION	0.9998628502679925	WITHOUT_CLASSIFICATION	1.3714973200741558E-4	DEFECT
// end class CurDecisionCM	WITHOUT_CLASSIFICATION	0.9999958507347437	WITHOUT_CLASSIFICATION	4.149265256269104E-6	DEFECT
/* end class StandardCM */	WITHOUT_CLASSIFICATION	0.9999023847476589	WITHOUT_CLASSIFICATION	9.761525234102155E-5	DEFECT
// end class CompositeCM	WITHOUT_CLASSIFICATION	0.9999957102817444	WITHOUT_CLASSIFICATION	4.289718255652732E-6	DEFECT
// end class EnabledCM	WITHOUT_CLASSIFICATION	0.9999920446022925	WITHOUT_CLASSIFICATION	7.955397707474396E-6	DEFECT
// end class NotSnoozedCM	WITHOUT_CLASSIFICATION	0.9999892394797415	WITHOUT_CLASSIFICATION	1.0760520258472E-5	DEFECT
// end class AndCM	WITHOUT_CLASSIFICATION	0.9999914702582956	WITHOUT_CLASSIFICATION	8.529741704357421E-6	DEFECT
// end class DesignGoalsCM	WITHOUT_CLASSIFICATION	0.999990171420833	WITHOUT_CLASSIFICATION	9.828579166894766E-6	DEFECT
// end class OrCM	WITHOUT_CLASSIFICATION	0.999992737199631	WITHOUT_CLASSIFICATION	7.26280036907061E-6	DEFECT
// Register our last chance exception handler	WITHOUT_CLASSIFICATION	0.9999998623006225	WITHOUT_CLASSIFICATION	1.3769937745991344E-7	DEFECT
// Get the splash screen up as early as possible	WITHOUT_CLASSIFICATION	0.9999997919476054	WITHOUT_CLASSIFICATION	2.0805239466405968E-7	DEFECT
// We have to do this to set the LAF for the splash screen	WITHOUT_CLASSIFICATION	0.9999961365820906	WITHOUT_CLASSIFICATION	3.8634179094027995E-6	DEFECT
// main initialization happens here	WITHOUT_CLASSIFICATION	0.9999798896624983	WITHOUT_CLASSIFICATION	2.0110337501712947E-5	DEFECT
//ToolTipManager.sharedInstance().setInitialDelay(500);	WITHOUT_CLASSIFICATION	0.9999999423891774	WITHOUT_CLASSIFICATION	5.761082253978881E-8	DEFECT
// Force the configuration to load	WITHOUT_CLASSIFICATION	0.9999998067740428	WITHOUT_CLASSIFICATION	1.9322595718340454E-7	DEFECT
// Synchronize the startup directory	WITHOUT_CLASSIFICATION	0.9999999058447976	WITHOUT_CLASSIFICATION	9.415520239219501E-8	DEFECT
// then, print out some version info for debuggers...	WITHOUT_CLASSIFICATION	0.9999974051347453	WITHOUT_CLASSIFICATION	2.5948652545729524E-6	DEFECT
// Set the i18n locale	WITHOUT_CLASSIFICATION	0.9999958105454828	WITHOUT_CLASSIFICATION	4.1894545172620275E-6	DEFECT
/* set properties for application behaviour */	WITHOUT_CLASSIFICATION	0.9999991144520117	WITHOUT_CLASSIFICATION	8.855479882688557E-7	DEFECT
// now, let's print it	WITHOUT_CLASSIFICATION	0.9999993191939467	WITHOUT_CLASSIFICATION	6.808060534277505E-7	DEFECT
// nothing else to do (?)	WITHOUT_CLASSIFICATION	0.9999975674127211	WITHOUT_CLASSIFICATION	2.432587278906944E-6	DEFECT
// We MUST have a project open before continuing. Create if necessary	WITHOUT_CLASSIFICATION	0.9999999903421387	WITHOUT_CLASSIFICATION	9.657861366392679E-9	DEFECT
//        initPreinitialize(); //        initializeSubsystems(new SimpleTimer(), null); //        ArgoFrame.getInstance().setVisible(true);	WITHOUT_CLASSIFICATION	0.9999889669192046	WITHOUT_CLASSIFICATION	1.1033080795354908E-5	DEFECT
// Perform one command.	WITHOUT_CLASSIFICATION	0.9999972120587327	WITHOUT_CLASSIFICATION	2.7879412671824063E-6	DEFECT
// Now create a new object.	WITHOUT_CLASSIFICATION	0.9999997701573952	WITHOUT_CLASSIFICATION	2.298426049270354E-7	DEFECT
// initLogging();	WITHOUT_CLASSIFICATION	0.9999961525433834	WITHOUT_CLASSIFICATION	3.847456616637738E-6	DEFECT
// On uniprocessors wait until we're sure the splash screen // has been painted so that we aren't competing for resources	WITHOUT_CLASSIFICATION	0.9999999506347175	WITHOUT_CLASSIFICATION	4.936528252684575E-8	DEFECT
// make the projectbrowser	WITHOUT_CLASSIFICATION	0.9999994043399509	WITHOUT_CLASSIFICATION	5.956600490725344E-7	DEFECT
/* end Class Main */	WITHOUT_CLASSIFICATION	0.9999777503138525	WITHOUT_CLASSIFICATION	2.2249686147562355E-5	DEFECT
/* end class PostLoad */	WITHOUT_CLASSIFICATION	0.999928681606331	WITHOUT_CLASSIFICATION	7.131839366904444E-5	DEFECT
/* We don't care if optional modules aren't found. */	WITHOUT_CLASSIFICATION	0.9999970411813953	WITHOUT_CLASSIFICATION	2.958818604633878E-6	DEFECT
/* We don't care if optional modules aren't found. */	WITHOUT_CLASSIFICATION	0.9999970411813953	WITHOUT_CLASSIFICATION	2.958818604633878E-6	DEFECT
/* end class LoadModules */	WITHOUT_CLASSIFICATION	0.9999404702449699	WITHOUT_CLASSIFICATION	5.952975502994592E-5	DEFECT
/* All tabs are added at the end, except a TabToDoTarget: */	WITHOUT_CLASSIFICATION	0.99970436024326	WITHOUT_CLASSIFICATION	2.9563975673992457E-4	DEFECT
/* End interface GUISettingsTabInterface */	WITHOUT_CLASSIFICATION	0.9999994370195601	WITHOUT_CLASSIFICATION	5.629804398579073E-7	DEFECT
// skip pos, we know it's not a valid char from above	WITHOUT_CLASSIFICATION	0.9999985975368704	WITHOUT_CLASSIFICATION	1.4024631297138765E-6	DEFECT
//////////////////////////////////////////////////////////////// // accessors	WITHOUT_CLASSIFICATION	0.99999900930865	WITHOUT_CLASSIFICATION	9.906913499891305E-7	DEFECT
// Store in the user configuration, and // let gef know also.	WITHOUT_CLASSIFICATION	0.9999999324075269	WITHOUT_CLASSIFICATION	6.759247309812792E-8	DEFECT
// Use the configuration if it exists, otherwise // use what gef thinks.	WITHOUT_CLASSIFICATION	0.9999983619902693	WITHOUT_CLASSIFICATION	1.6380097308043888E-6	DEFECT
//////////////////////////////////////////////////////////////// // constructor	WITHOUT_CLASSIFICATION	0.999999528930968	WITHOUT_CLASSIFICATION	4.7106903193685653E-7	DEFECT
//////////////////////////////////////////////////////////////// // actions	WITHOUT_CLASSIFICATION	0.9999930701905677	WITHOUT_CLASSIFICATION	6.9298094323343566E-6	DEFECT
//failed to clone	WITHOUT_CLASSIFICATION	0.9999991528179615	WITHOUT_CLASSIFICATION	8.471820384274959E-7	DEFECT
/* Remark: The code in             * ProjectSettings.init() currently presumes             * that nobody is using this event. */	WITHOUT_CLASSIFICATION	0.9896831160386923	WITHOUT_CLASSIFICATION	0.010316883961307678	DEFECT
// NOTE: This is package scope to force callers to use ResourceLoaderWrapper	WITHOUT_CLASSIFICATION	0.9999985258358344	WITHOUT_CLASSIFICATION	1.4741641655354918E-6	DEFECT
/*     * Strip all characters out of <var>s</var> that could not be part of a     * valid Java identifier. Return either the given string (if all characters     * were valid), or a new string with all invalid characters stripped out.     * This allows automatic conversion of strings containing punctuation and     * spaces to a resource name that can be looked up.     */	WITHOUT_CLASSIFICATION	0.9999999977085354	WITHOUT_CLASSIFICATION	2.2914644979937967E-9	DEFECT
/* end class ResourceLoader */	WITHOUT_CLASSIFICATION	0.9999747495197399	WITHOUT_CLASSIFICATION	2.525048026007898E-5	DEFECT
// the validity checking thread should wait if disabled.	WITHOUT_CLASSIFICATION	0.9999808656858933	WITHOUT_CLASSIFICATION	1.913431410670322E-5	DEFECT
// If element has been deleted, it's no longer valid	WITHOUT_CLASSIFICATION	0.9999999785820338	WITHOUT_CLASSIFICATION	2.141796616689558E-8	DEFECT
// History.TheHistory.addItemResolution(item, // "no longer valid"); // ((ToDoItem)item).resolve("no longer valid"); // notifyObservers("removeElement", item);	WITHOUT_CLASSIFICATION	0.9999999983111405	WITHOUT_CLASSIFICATION	1.6888595288322214E-9	DEFECT
// ////////////////////////////////////////////////////////////// // Notifications and Updates	WITHOUT_CLASSIFICATION	0.9999997030956773	WITHOUT_CLASSIFICATION	2.969043226390423E-7	DEFECT
/* skip any identical items already on the list */	WITHOUT_CLASSIFICATION	0.9999995807037931	WITHOUT_CLASSIFICATION	4.192962069522957E-7	DEFECT
// cat.debug("Checking for inhibitors " + rc);	WITHOUT_CLASSIFICATION	0.9999991493251339	WITHOUT_CLASSIFICATION	8.50674866085385E-7	DEFECT
// History.TheHistory.addItemResolution(item, reason);	WITHOUT_CLASSIFICATION	0.9999998802860673	WITHOUT_CLASSIFICATION	1.197139326557523E-7	DEFECT
// Lazily create the event:	WITHOUT_CLASSIFICATION	0.9999995009738529	WITHOUT_CLASSIFICATION	4.99026147136317E-7	DEFECT
// Lazily create the event:	WITHOUT_CLASSIFICATION	0.9999995009738529	WITHOUT_CLASSIFICATION	4.99026147136317E-7	DEFECT
// Lazily create the event:	WITHOUT_CLASSIFICATION	0.9999995009738529	WITHOUT_CLASSIFICATION	4.99026147136317E-7	DEFECT
// Guaranteed to return a non-null array	WITHOUT_CLASSIFICATION	0.9999999594285716	WITHOUT_CLASSIFICATION	4.05714284274186E-8	DEFECT
// Guaranteed to return a non-null array	WITHOUT_CLASSIFICATION	0.9999999594285716	WITHOUT_CLASSIFICATION	4.05714284274186E-8	DEFECT
//////////////////////////////////////////////////////////////// // accessors	WITHOUT_CLASSIFICATION	0.99999900930865	WITHOUT_CLASSIFICATION	9.906913499891305E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999996210616915	WITHOUT_CLASSIFICATION	3.7893830849916885E-6	DEFECT
/* end class ArgoJMenu */	WITHOUT_CLASSIFICATION	0.9999169483464568	WITHOUT_CLASSIFICATION	8.305165354312652E-5	DEFECT
// Block added by BobTarling 8-Jan-2002 Set the checkbox on or // off according to the SELECTED value of the action.  If no // SELECTED value is found then this defaults to true in order // to remain compatible with previous versions of this code.	WITHOUT_CLASSIFICATION	0.9999934387742511	WITHOUT_CLASSIFICATION	6.561225748909251E-6	DEFECT
// EventListenerList.add() is synchronized, so we don't need to // synchronize ourselves	WITHOUT_CLASSIFICATION	0.9999998073885238	WITHOUT_CLASSIFICATION	1.926114761492399E-7	DEFECT
// End of block	WITHOUT_CLASSIFICATION	0.9999982502167015	WITHOUT_CLASSIFICATION	1.7497832984623173E-6	DEFECT
/* end interface Clarifier */	WITHOUT_CLASSIFICATION	0.9999962528281113	WITHOUT_CLASSIFICATION	3.7471718886840363E-6	DEFECT
// Set the checkbox on or // off according to the SELECTED value of the action.  If no // SELECTED value is found then this defaults to true.	WITHOUT_CLASSIFICATION	0.9999978703268002	WITHOUT_CLASSIFICATION	2.1296731998700964E-6	DEFECT
// Extra care to be taken since allOffenders can be reset while // this method is running.	WITHOUT_CLASSIFICATION	0.9999424133839387	WITHOUT_CLASSIFICATION	5.758661606119077E-5	DEFECT
// these are blue in Metal Default Theme	WITHOUT_CLASSIFICATION	0.999998094716092	WITHOUT_CLASSIFICATION	1.9052839080308742E-6	DEFECT
// Cached expansions	WITHOUT_CLASSIFICATION	0.9999992655866341	WITHOUT_CLASSIFICATION	7.34413365844882E-7	DEFECT
// these are gray in Metal Default Theme	WITHOUT_CLASSIFICATION	0.9999987592502854	WITHOUT_CLASSIFICATION	1.240749714676858E-6	DEFECT
// Extra care to be taken since allPosters can be reset while // this method is running.	WITHOUT_CLASSIFICATION	0.9999899205678872	WITHOUT_CLASSIFICATION	1.0079432112720019E-5	DEFECT
// set the icon for this poster	WITHOUT_CLASSIFICATION	0.9999952647323952	WITHOUT_CLASSIFICATION	4.735267604703002E-6	DEFECT
// EventListenerList.remove() is synchronized, so we don't need to // synchronize ourselves	WITHOUT_CLASSIFICATION	0.9999997258788772	WITHOUT_CLASSIFICATION	2.7412112285318375E-7	DEFECT
//MVW	WITHOUT_CLASSIFICATION	0.9998936207741502	WITHOUT_CLASSIFICATION	1.0637922584981962E-4	DEFECT
// ////////////////////////////////////////////////////////////// // event related stuff	WITHOUT_CLASSIFICATION	0.9999999927770533	WITHOUT_CLASSIFICATION	7.222946671410859E-9	DEFECT
//////////////////////////////////////////////////////////////// // instance variables	WITHOUT_CLASSIFICATION	0.9999997804293774	WITHOUT_CLASSIFICATION	2.195706224349368E-7	DEFECT
// Process the listeners last to first, notifying // those that are interested in this event	WITHOUT_CLASSIFICATION	0.9999999594702297	WITHOUT_CLASSIFICATION	4.052977032330427E-8	DEFECT
// Process the listeners last to first, notifying // those that are interested in this event	WITHOUT_CLASSIFICATION	0.9999999594702297	WITHOUT_CLASSIFICATION	4.052977032330427E-8	DEFECT
// Process the listeners last to first, notifying // those that are interested in this event	WITHOUT_CLASSIFICATION	0.9999999594702297	WITHOUT_CLASSIFICATION	4.052977032330427E-8	DEFECT
//////////////////////////////////////////////////////////////// // static variables	WITHOUT_CLASSIFICATION	0.9999998818060729	WITHOUT_CLASSIFICATION	1.1819392707333433E-7	DEFECT
/*     * @see java.lang.Object#hashCode()     */	WITHOUT_CLASSIFICATION	0.9999937095428904	WITHOUT_CLASSIFICATION	6.290457109648908E-6	DEFECT
/*     * @see java.lang.Object#equals(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999990412357495	WITHOUT_CLASSIFICATION	9.587642505993175E-7	DEFECT
/*     * Enable buttons when selection made.     *     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.9999999215600947	WITHOUT_CLASSIFICATION	7.843990533524931E-8	DEFECT
/*     * @see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)     */	WITHOUT_CLASSIFICATION	0.9999999040973686	WITHOUT_CLASSIFICATION	9.590263132237114E-8	DEFECT
/*     * @see java.awt.event.ComponentListener#componentShown(java.awt.event.ComponentEvent)     */	WITHOUT_CLASSIFICATION	0.9999994542146569	WITHOUT_CLASSIFICATION	5.457853430875161E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999996210616915	WITHOUT_CLASSIFICATION	3.7893830849916885E-6	DEFECT
//////////////////////////////////////////////////////////////// // accessors	WITHOUT_CLASSIFICATION	0.99999900930865	WITHOUT_CLASSIFICATION	9.906913499891305E-7	DEFECT
/* end class CheckManager */	WITHOUT_CLASSIFICATION	0.9999531581486185	WITHOUT_CLASSIFICATION	4.6841851381498336E-5	DEFECT
// Now lets search	WITHOUT_CLASSIFICATION	0.9999997402034039	WITHOUT_CLASSIFICATION	2.597965961494049E-7	DEFECT
/* end class TabChecklist */	WITHOUT_CLASSIFICATION	0.9999776665404408	WITHOUT_CLASSIFICATION	2.233345955925202E-5	DEFECT
// We found it!	WITHOUT_CLASSIFICATION	0.9999981491093168	WITHOUT_CLASSIFICATION	1.850890683121867E-6	DEFECT
//////////////////////////////////////////////////////////////// // event handling	WITHOUT_CLASSIFICATION	0.9999992496856168	WITHOUT_CLASSIFICATION	7.503143832143935E-7	DEFECT
// Enter the class to speed up the next search.	WITHOUT_CLASSIFICATION	0.9999999147370299	WITHOUT_CLASSIFICATION	8.526297012231931E-8	DEFECT
// Stop updating model when we're not visible	WITHOUT_CLASSIFICATION	0.9999998958308698	WITHOUT_CLASSIFICATION	1.041691302087701E-7	DEFECT
// Update our model with our saved target	WITHOUT_CLASSIFICATION	0.9999999440907767	WITHOUT_CLASSIFICATION	5.590922318364402E-8	DEFECT
//////////////// // accessors	WITHOUT_CLASSIFICATION	0.999998706492043	WITHOUT_CLASSIFICATION	1.2935079569353031E-6	DEFECT
//////////////// // instance varables	WITHOUT_CLASSIFICATION	0.9999998381278028	WITHOUT_CLASSIFICATION	1.6187219713363491E-7	DEFECT
//////////////// // constructor	WITHOUT_CLASSIFICATION	0.999999528930968	WITHOUT_CLASSIFICATION	4.7106903193685653E-7	DEFECT
//////////////// // TableModel implemetation	WITHOUT_CLASSIFICATION	0.9999785316680688	WITHOUT_CLASSIFICATION	2.1468331931162445E-5	DEFECT
//////////////////////////////////////////////////////////////// // accessors	WITHOUT_CLASSIFICATION	0.99999900930865	WITHOUT_CLASSIFICATION	9.906913499891305E-7	DEFECT
//////////////////////////////////////////////////////////////// // constants	WITHOUT_CLASSIFICATION	0.9999985290529746	WITHOUT_CLASSIFICATION	1.4709470253565026E-6	DEFECT
//////////////////////////////////////////////////////////////// // instance variables	WITHOUT_CLASSIFICATION	0.9999997804293774	WITHOUT_CLASSIFICATION	2.195706224349368E-7	DEFECT
//////////////////////////////////////////////////////////////// // criticism control	WITHOUT_CLASSIFICATION	0.9999991543246208	WITHOUT_CLASSIFICATION	8.456753791612114E-7	DEFECT
//////////////// // event handlers	WITHOUT_CLASSIFICATION	0.99999993178587	WITHOUT_CLASSIFICATION	6.821413007364854E-8	DEFECT
//////////////////////////////////////////////////////////////// // static accessors	WITHOUT_CLASSIFICATION	0.99999971657178	WITHOUT_CLASSIFICATION	2.8342822008712596E-7	DEFECT
//////////////// // instance varables	WITHOUT_CLASSIFICATION	0.9999998381278028	WITHOUT_CLASSIFICATION	1.6187219713363491E-7	DEFECT
//////////////// // constructor	WITHOUT_CLASSIFICATION	0.999999528930968	WITHOUT_CLASSIFICATION	4.7106903193685653E-7	DEFECT
//////////////// // accessors	WITHOUT_CLASSIFICATION	0.999998706492043	WITHOUT_CLASSIFICATION	1.2935079569353031E-6	DEFECT
//////////////// // TableModel implemetation	WITHOUT_CLASSIFICATION	0.9999785316680688	WITHOUT_CLASSIFICATION	2.1468331931162445E-5	DEFECT
/* in the past, 0 milliseconds after January 1, 1970, 00:00:00 GMT. */	WITHOUT_CLASSIFICATION	0.9976912425465033	WITHOUT_CLASSIFICATION	0.0023087574534965826	DEFECT
/* in the past, 0 milliseconds after January 1, 1970, 00:00:00 GMT. */	WITHOUT_CLASSIFICATION	0.9976912425465033	WITHOUT_CLASSIFICATION	0.0023087574534965826	DEFECT
/* by default, double the snooze interval each time */	WITHOUT_CLASSIFICATION	0.9999998538115413	WITHOUT_CLASSIFICATION	1.4618845868306318E-7	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
/* end class SnoozeOrder */	WITHOUT_CLASSIFICATION	0.9999229930507415	WITHOUT_CLASSIFICATION	7.700694925860479E-5	DEFECT
//////////////////////////////////////////////////////////////// // instance variables	WITHOUT_CLASSIFICATION	0.9999997804293774	WITHOUT_CLASSIFICATION	2.195706224349368E-7	DEFECT
//////////////////////////////////////////////////////////////// // wizard actions	WITHOUT_CLASSIFICATION	0.9999967221506009	WITHOUT_CLASSIFICATION	3.2778493990708686E-6	DEFECT
/* This changes the complete structure of the table,          * so we need to set the column widths again. */	WITHOUT_CLASSIFICATION	0.9999999997769812	WITHOUT_CLASSIFICATION	2.230188476712445E-10	DEFECT
// TODO: do all following steps // TODO: resolve item from ToDoList	WITHOUT_CLASSIFICATION	0.9542175902284378	WITHOUT_CLASSIFICATION	0.04578240977156228	DEFECT
/* end class ActionOpenCritics */	WITHOUT_CLASSIFICATION	0.9999652286853107	WITHOUT_CLASSIFICATION	3.4771314689409686E-5	DEFECT
/** * Dialog box to list all critics and allow editing of some of their * properties. <p> * * TODO: supported goals, critic network. */	WITHOUT_CLASSIFICATION	0.9473224684773173	WITHOUT_CLASSIFICATION	0.05267753152268262	DEFECT
// Set initial sorting on Critic Headline	WITHOUT_CLASSIFICATION	0.9999996259982056	WITHOUT_CLASSIFICATION	3.740017944293351E-7	DEFECT
// Critics Table	WITHOUT_CLASSIFICATION	0.9999995835178971	WITHOUT_CLASSIFICATION	4.1648210293965064E-7	DEFECT
// instead of making a new list, decrement index, return when // found and index == 0	WITHOUT_CLASSIFICATION	0.9999998888685284	WITHOUT_CLASSIFICATION	1.1113147149173686E-7	DEFECT
// Critic Details panel	WITHOUT_CLASSIFICATION	0.9999961014334705	WITHOUT_CLASSIFICATION	3.898566529538775E-6	DEFECT
// case 2	WITHOUT_CLASSIFICATION	0.9999955593274086	WITHOUT_CLASSIFICATION	4.440672591463185E-6	DEFECT
//  TableModel implemetation	WITHOUT_CLASSIFICATION	0.9999760693241383	WITHOUT_CLASSIFICATION	2.3930675861815796E-5	DEFECT
//TODO:	WITHOUT_CLASSIFICATION	0.9962533887760961	WITHOUT_CLASSIFICATION	0.0037466112239039214	DEFECT
// no maximum set, so it will stretch...	WITHOUT_CLASSIFICATION	0.9999999559413936	WITHOUT_CLASSIFICATION	4.405860637822043E-8	DEFECT
/* and for advanced mode: */	WITHOUT_CLASSIFICATION	0.9995679616809041	WITHOUT_CLASSIFICATION	4.320383190959021E-4	DEFECT
/*     * @see javax.swing.tree.TreeModel#valueForPathChanged(     * javax.swing.tree.TreePath, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997361815245	WITHOUT_CLASSIFICATION	2.6381847545163025E-7	DEFECT
/*     * @see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)     */	WITHOUT_CLASSIFICATION	0.9999998084713436	WITHOUT_CLASSIFICATION	1.915286562817191E-7	DEFECT
/*     * @see javax.swing.event.ChangeListener#stateChanged(javax.swing.event.ChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999999241097872	WITHOUT_CLASSIFICATION	7.589021277964021E-8	DEFECT
//////////////////////////////////////////////////////////////// // instance variables	WITHOUT_CLASSIFICATION	0.9999997804293774	WITHOUT_CLASSIFICATION	2.195706224349368E-7	DEFECT
//////////////////////////////////////////////////////////////// // event handlers	WITHOUT_CLASSIFICATION	0.99999993178587	WITHOUT_CLASSIFICATION	6.821413007364854E-8	DEFECT
// Set tableSP's preferred height to 0 so that details height // is used in pack()	WITHOUT_CLASSIFICATION	0.9999988241077392	WITHOUT_CLASSIFICATION	1.1758922608545871E-6	DEFECT
/*     * @see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999994289580846	WITHOUT_CLASSIFICATION	5.710419155044498E-7	DEFECT
//     c.gridy = 0; //     c.gridx = 0; //     JLabel priLabel = new JLabel("Priority:"); //     gb.setConstraints(priLabel, c); //     _mainPanel.add(priLabel);	WITHOUT_CLASSIFICATION	0.999999989145947	WITHOUT_CLASSIFICATION	1.085405302729917E-8	DEFECT
//fireTreeNodesChanged(this, path, childIndices, children);	WITHOUT_CLASSIFICATION	0.9999994196405533	WITHOUT_CLASSIFICATION	5.80359446698245E-7	DEFECT
//     c.gridy = 0; //     c.gridx = 1; //     JLabel offLabel = new JLabel("Off"); //     gb.setConstraints(offLabel, c); //     _mainPanel.add(offLabel);	WITHOUT_CLASSIFICATION	0.9999999976095963	WITHOUT_CLASSIFICATION	2.390403610348657E-9	DEFECT
//     c.gridy = 0; //     c.gridx = 2; //     JLabel lowLabel = new JLabel("Low"); //     gb.setConstraints(lowLabel, c); //     _mainPanel.add(lowLabel);	WITHOUT_CLASSIFICATION	0.9999999975092005	WITHOUT_CLASSIFICATION	2.4907994863205903E-9	DEFECT
//     c.gridy = 0; //     c.gridx = 3; //     JLabel twoLabel = new JLabel("ad"); //     gb.setConstraints(twoLabel, c); //     _mainPanel.add(twoLabel);	WITHOUT_CLASSIFICATION	0.9999999908970972	WITHOUT_CLASSIFICATION	9.102902798381076E-9	DEFECT
//     c.gridy = 0; //     c.gridx = 4; //     JLabel threeLabel = new JLabel("asd"); //     gb.setConstraints(threeLabel, c); //     _mainPanel.add(threeLabel);	WITHOUT_CLASSIFICATION	0.9999999915777027	WITHOUT_CLASSIFICATION	8.422297334783181E-9	DEFECT
//     c.gridy = 0; //     c.gridx = 5; //     JLabel fourLabel = new JLabel("asd"); //     gb.setConstraints(fourLabel, c); //     _mainPanel.add(fourLabel);	WITHOUT_CLASSIFICATION	0.9999999990988797	WITHOUT_CLASSIFICATION	9.011203837178113E-10	DEFECT
//     c.gridy = 0; //     c.gridx = 6; //     JLabel highLabel = new JLabel("High"); //     gb.setConstraints(highLabel, c); //     _mainPanel.add(highLabel);	WITHOUT_CLASSIFICATION	0.9999999912370265	WITHOUT_CLASSIFICATION	8.762973466629968E-9	DEFECT
// ------------ other methods ------------	WITHOUT_CLASSIFICATION	0.9999993896667633	WITHOUT_CLASSIFICATION	6.103332366531207E-7	DEFECT
/*     * @see javax.swing.tree.TreeCellRenderer#getTreeCellRendererComponent(     * javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int,     * boolean)     */	WITHOUT_CLASSIFICATION	0.999999901748487	WITHOUT_CLASSIFICATION	9.825151307748103E-8	DEFECT
/*     * @see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)     */	WITHOUT_CLASSIFICATION	0.9999989380117544	WITHOUT_CLASSIFICATION	1.061988245546457E-6	DEFECT
/*     * @see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997065652897	WITHOUT_CLASSIFICATION	2.934347102064507E-7	DEFECT
//////////////////////////////////////////////////////////////// // ToDoListListener implementation	WITHOUT_CLASSIFICATION	0.9999249721338268	WITHOUT_CLASSIFICATION	7.502786617314627E-5	DEFECT
//fireTreeNodesChanged(this, path, childIndices, children);	WITHOUT_CLASSIFICATION	0.9999994196405533	WITHOUT_CLASSIFICATION	5.80359446698245E-7	DEFECT
//////////////////////////////////////////////////////////////// // TreeModel implementation - todo specific stuff	WITHOUT_CLASSIFICATION	0.9999966857771957	WITHOUT_CLASSIFICATION	3.314222804268805E-6	DEFECT
//////////////////////////////////////////////////////////////// // class variables	WITHOUT_CLASSIFICATION	0.9999969280046673	WITHOUT_CLASSIFICATION	3.0719953327721497E-6	DEFECT
// general icons for poster	WITHOUT_CLASSIFICATION	0.999995178019402	WITHOUT_CLASSIFICATION	4.8219805981187615E-6	DEFECT
// specialised icons for designer	WITHOUT_CLASSIFICATION	0.9999999193571383	WITHOUT_CLASSIFICATION	8.064286170146515E-8	DEFECT
//////////////////////////////////////////////////////////////// // TreeCellRenderer implementation	WITHOUT_CLASSIFICATION	0.9999092643529875	WITHOUT_CLASSIFICATION	9.073564701234811E-5	DEFECT
/* end class ToDoTreeRenderer */	WITHOUT_CLASSIFICATION	0.9998286435264712	WITHOUT_CLASSIFICATION	1.713564735289114E-4	DEFECT
//   public static Decision decisionUNCATEGORIZED = //   new Decision("Uncategorized", 1);	WITHOUT_CLASSIFICATION	0.9999999912066924	WITHOUT_CLASSIFICATION	8.79330771421723E-9	DEFECT
/* end class ToDoByDecision */	WITHOUT_CLASSIFICATION	0.9994939779618437	WITHOUT_CLASSIFICATION	5.060220381563108E-4	DEFECT
//////////////////////////////////////////////////////////////// // instance variables	WITHOUT_CLASSIFICATION	0.9999997804293774	WITHOUT_CLASSIFICATION	2.195706224349368E-7	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
//////////////////////////////////////////////////////////////// // TreeModel implementation	WITHOUT_CLASSIFICATION	0.9999648266834822	WITHOUT_CLASSIFICATION	3.517331651787446E-5	DEFECT
// instead of making a new list, decrement index, return when // found and index == 0	WITHOUT_CLASSIFICATION	0.9999998888685284	WITHOUT_CLASSIFICATION	1.1113147149173686E-7	DEFECT
// store wizard?	WITHOUT_CLASSIFICATION	0.9999981455151927	WITHOUT_CLASSIFICATION	1.8544848072331135E-6	DEFECT
//     c.gridx = 1; //     c.gridy = 3; //     c.gridheight = GridBagConstraints.REMAINDER; //     SpacerPanel spacer2 = new SpacerPanel(); //     gb.setConstraints(spacer2, c); //     _mainPanel.add(spacer2);	WITHOUT_CLASSIFICATION	0.9999999929058864	WITHOUT_CLASSIFICATION	7.094113599510473E-9	DEFECT
//image.setMargin(new Insets(0, 0, 0, 0));	WITHOUT_CLASSIFICATION	0.9999998992390678	WITHOUT_CLASSIFICATION	1.0076093213046532E-7	DEFECT
//image.setMargin(new Insets(0, 0, 0, 0));	WITHOUT_CLASSIFICATION	0.9999998992390678	WITHOUT_CLASSIFICATION	1.0076093213046532E-7	DEFECT
//image.setMargin(new Insets(0, 0, 0, 0));	WITHOUT_CLASSIFICATION	0.9999998992390678	WITHOUT_CLASSIFICATION	1.0076093213046532E-7	DEFECT
/* end class WizStepTextField */	WITHOUT_CLASSIFICATION	0.9999465720734516	WITHOUT_CLASSIFICATION	5.34279265483438E-5	DEFECT
// store wizard?	WITHOUT_CLASSIFICATION	0.9999981455151927	WITHOUT_CLASSIFICATION	1.8544848072331135E-6	DEFECT
// store wizard?	WITHOUT_CLASSIFICATION	0.9999981455151927	WITHOUT_CLASSIFICATION	1.8544848072331135E-6	DEFECT
/* end class WizDescription */	WITHOUT_CLASSIFICATION	0.9999420756979908	WITHOUT_CLASSIFICATION	5.7924302009278164E-5	DEFECT
/* end class WizStepCue */	WITHOUT_CLASSIFICATION	0.9999616549583495	WITHOUT_CLASSIFICATION	3.834504165037944E-5	DEFECT
// stop/start creating more critics	WITHOUT_CLASSIFICATION	0.9999999882398547	WITHOUT_CLASSIFICATION	1.1760145238748401E-8	DEFECT
/* end class ActionGoToCritique */	WITHOUT_CLASSIFICATION	0.9999844807200138	WITHOUT_CLASSIFICATION	1.5519279986200045E-5	DEFECT
/* Correct lazy initialization of static field              * without further updates: */	WITHOUT_CLASSIFICATION	0.9999486194575675	WITHOUT_CLASSIFICATION	5.138054243244978E-5	DEFECT
// does nothing	WITHOUT_CLASSIFICATION	0.9999711846795364	WITHOUT_CLASSIFICATION	2.881532046370032E-5	DEFECT
/* end class ActionAutoCritique */	WITHOUT_CLASSIFICATION	0.9999867994609791	WITHOUT_CLASSIFICATION	1.320053902075837E-5	DEFECT
// stop/start cleaning up invalid TodoItems.	WITHOUT_CLASSIFICATION	0.9999999579116766	WITHOUT_CLASSIFICATION	4.208832347523886E-8	DEFECT
/*     * @see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999994289580846	WITHOUT_CLASSIFICATION	5.710419155044498E-7	DEFECT
/*     * @see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997065652897	WITHOUT_CLASSIFICATION	2.934347102064507E-7	DEFECT
/*     * @see javax.swing.tree.TreeModel#getIndexOfChild(     * java.lang.Object, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999977402575898	WITHOUT_CLASSIFICATION	2.2597424101337936E-6	DEFECT
//////////////////////////////////////////////////////////////// // constants	WITHOUT_CLASSIFICATION	0.9999985290529746	WITHOUT_CLASSIFICATION	1.4709470253565026E-6	DEFECT
//////////////////////////////////////////////////////////////// // instance variables	WITHOUT_CLASSIFICATION	0.9999997804293774	WITHOUT_CLASSIFICATION	2.195706224349368E-7	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
//////////////////////////////////////////////////////////////// // TreeModel implementation	WITHOUT_CLASSIFICATION	0.9999648266834822	WITHOUT_CLASSIFICATION	3.517331651787446E-5	DEFECT
//////////////////////////////////////////////////////////////// // ToDoListListener implementation	WITHOUT_CLASSIFICATION	0.9999249721338268	WITHOUT_CLASSIFICATION	7.502786617314627E-5	DEFECT
//fireTreeNodesChanged(this, path, childIndices, children);	WITHOUT_CLASSIFICATION	0.9999994196405533	WITHOUT_CLASSIFICATION	5.80359446698245E-7	DEFECT
//otherwise parent must be an offending design material	WITHOUT_CLASSIFICATION	0.9999935928448607	WITHOUT_CLASSIFICATION	6.407155139236572E-6	DEFECT
/* end class ActionOpenGoals */	WITHOUT_CLASSIFICATION	0.9999288444794234	WITHOUT_CLASSIFICATION	7.115552057666232E-5	DEFECT
/*     * @see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999994289580846	WITHOUT_CLASSIFICATION	5.710419155044498E-7	DEFECT
/*     * @see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999994289580846	WITHOUT_CLASSIFICATION	5.710419155044498E-7	DEFECT
//? inform()	WITHOUT_CLASSIFICATION	0.999968826643879	WITHOUT_CLASSIFICATION	3.11733561210964E-5	DEFECT
/*     * @see java.awt.event.ComponentListener#componentShown(java.awt.event.ComponentEvent)     */	WITHOUT_CLASSIFICATION	0.9999994542146569	WITHOUT_CLASSIFICATION	5.457853430875161E-7	DEFECT
/*     * @see java.awt.event.ComponentListener#componentHidden(java.awt.event.ComponentEvent)     */	WITHOUT_CLASSIFICATION	0.9999997197708684	WITHOUT_CLASSIFICATION	2.802291314915078E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999996210616915	WITHOUT_CLASSIFICATION	3.7893830849916885E-6	DEFECT
// Update our model with our saved target	WITHOUT_CLASSIFICATION	0.9999999440907767	WITHOUT_CLASSIFICATION	5.590922318364402E-8	DEFECT
// Stop updating model when we're not visible	WITHOUT_CLASSIFICATION	0.9999998958308698	WITHOUT_CLASSIFICATION	1.041691302087701E-7	DEFECT
//////////////////////////////////////////////////////////////// // TreeModel implementation	WITHOUT_CLASSIFICATION	0.9999648266834822	WITHOUT_CLASSIFICATION	3.517331651787446E-5	DEFECT
// instead of making a new list, decrement index, return when // found and index == 0	WITHOUT_CLASSIFICATION	0.9999998888685284	WITHOUT_CLASSIFICATION	1.1113147149173686E-7	DEFECT
//image.setMargin(new Insets(0, 0, 0, 0));	WITHOUT_CLASSIFICATION	0.9999998992390678	WITHOUT_CLASSIFICATION	1.0076093213046532E-7	DEFECT
// store wizard?	WITHOUT_CLASSIFICATION	0.9999981455151927	WITHOUT_CLASSIFICATION	1.8544848072331135E-6	DEFECT
// the target of description will always be set directly by tabtodo	WITHOUT_CLASSIFICATION	0.999993456446278	WITHOUT_CLASSIFICATION	6.543553721983303E-6	DEFECT
// Request that we be made visible if we're not? // topLevelTabbedPane.setSelectedComponent(t);	WITHOUT_CLASSIFICATION	0.9999998633850254	WITHOUT_CLASSIFICATION	1.3661497449552028E-7	DEFECT
// ------------- MouseListener implementation ---------------	WITHOUT_CLASSIFICATION	0.9999969231852806	WITHOUT_CLASSIFICATION	3.076814719388451E-6	DEFECT
/* end class WizStepConfirm */	WITHOUT_CLASSIFICATION	0.9999822801427278	WITHOUT_CLASSIFICATION	1.771985727224786E-5	DEFECT
// next line coming from projectbrowser	WITHOUT_CLASSIFICATION	0.9999997450804093	WITHOUT_CLASSIFICATION	2.549195905955751E-7	DEFECT
// ------------ ItemListener implementation ----------------------	WITHOUT_CLASSIFICATION	0.9999950921973113	WITHOUT_CLASSIFICATION	4.907802688672229E-6	DEFECT
// -------------TreeSelectionListener implementation -----------	WITHOUT_CLASSIFICATION	0.9999947388622525	WITHOUT_CLASSIFICATION	5.261137747504567E-6	DEFECT
/*     * @see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999994289580846	WITHOUT_CLASSIFICATION	5.710419155044498E-7	DEFECT
// not needed in UML 1.x	WITHOUT_CLASSIFICATION	0.9999910883364607	WITHOUT_CLASSIFICATION	8.9116635394451E-6	DEFECT
////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999980927080177	WITHOUT_CLASSIFICATION	1.9072919822931333E-5	DEFECT
//////////////////////////////////////////////////////////////// // constructors	WITHOUT_CLASSIFICATION	0.9999996493752797	WITHOUT_CLASSIFICATION	3.5062472022456624E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see javax.swing.event.ChangeListener#stateChanged(javax.swing.event.ChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999999241097872	WITHOUT_CLASSIFICATION	7.589021277964021E-8	DEFECT
/*     * Prepare for typing in rationale field when window is opened.     *     * @see java.awt.Component#setVisible(boolean)     */	WITHOUT_CLASSIFICATION	0.999999654820945	WITHOUT_CLASSIFICATION	3.4517905505778875E-7	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
//////////////////////////////////////////////////////////////// // event handlers	WITHOUT_CLASSIFICATION	0.99999993178587	WITHOUT_CLASSIFICATION	6.821413007364854E-8	DEFECT
//////////////////////////////////////////////////////////////// // ToDoListListener implementation	WITHOUT_CLASSIFICATION	0.9999249721338268	WITHOUT_CLASSIFICATION	7.502786617314627E-5	DEFECT
//////////////////////////////////////////////////////////////// // ToDoListListener implementation	WITHOUT_CLASSIFICATION	0.9999249721338268	WITHOUT_CLASSIFICATION	7.502786617314627E-5	DEFECT
// keep nagging until the user solves the problem: // This seems a nice way to nag:	WITHOUT_CLASSIFICATION	0.9999790419794602	WITHOUT_CLASSIFICATION	2.0958020539866278E-5	DEFECT
// Only interrupt for one todoitem	WITHOUT_CLASSIFICATION	0.9999978989284203	WITHOUT_CLASSIFICATION	2.1010715796898342E-6	DEFECT
/* end class ActionOpenDecisions */	WITHOUT_CLASSIFICATION	0.9999334573662886	WITHOUT_CLASSIFICATION	6.654263371142904E-5	DEFECT
// blinks?	WITHOUT_CLASSIFICATION	0.9999668553158032	WITHOUT_CLASSIFICATION	3.314468419669419E-5	DEFECT
/* end class ToDoByOffender */	WITHOUT_CLASSIFICATION	0.9986458059337431	WITHOUT_CLASSIFICATION	0.0013541940662569678	DEFECT
// add the perspectives to a list for the combobox	WITHOUT_CLASSIFICATION	0.9999999662789685	WITHOUT_CLASSIFICATION	3.372103159495278E-8	DEFECT
// decSlide.setPaintLabels(true);	WITHOUT_CLASSIFICATION	0.999999910947444	WITHOUT_CLASSIFICATION	8.905255599079752E-8	DEFECT
//////////////////////////////////////////////////////////////// // constants //////////////////////////////////////////////////////////////// // instance variables	WITHOUT_CLASSIFICATION	0.999999734016597	WITHOUT_CLASSIFICATION	2.6598340294006476E-7	DEFECT
// fireTreeNodesChanged(this, path, childIndices, children);	WITHOUT_CLASSIFICATION	0.9999997930824174	WITHOUT_CLASSIFICATION	2.0691758249741459E-7	DEFECT
// TODO: This looks O(n^2)	WITHOUT_CLASSIFICATION	0.9152522035312396	DEFECT	0.08474779646876042	WITHOUT_CLASSIFICATION
//TODO: make a new history item	WITHOUT_CLASSIFICATION	0.8873245554949342	WITHOUT_CLASSIFICATION	0.11267544450506588	DEFECT
//cat.debug("bad decision");	WITHOUT_CLASSIFICATION	0.9999955969332789	WITHOUT_CLASSIFICATION	4.403066721131329E-6	DEFECT
//cat.debug("bad goal");	WITHOUT_CLASSIFICATION	0.999986846603558	WITHOUT_CLASSIFICATION	1.3153396442013153E-5	DEFECT
/* end class DismissToDoItemDialog */	WITHOUT_CLASSIFICATION	0.9998261086613245	WITHOUT_CLASSIFICATION	1.7389133867545088E-4	DEFECT
//////////////////////////////////////////////////////////////// // constructors	WITHOUT_CLASSIFICATION	0.9999996493752797	WITHOUT_CLASSIFICATION	3.5062472022456624E-7	DEFECT
/*     * @see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)     */	WITHOUT_CLASSIFICATION	0.9999989380117544	WITHOUT_CLASSIFICATION	1.061988245546457E-6	DEFECT
/*     * @see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997065652897	WITHOUT_CLASSIFICATION	2.934347102064507E-7	DEFECT
/*     * @see javax.swing.tree.TreeModel#getIndexOfChild(     * java.lang.Object, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999977402575898	WITHOUT_CLASSIFICATION	2.2597424101337936E-6	DEFECT
// finally, apply profile configuration to the model	WITHOUT_CLASSIFICATION	0.9999994676722819	WITHOUT_CLASSIFICATION	5.323277181496086E-7	DEFECT
/*     * @see javax.swing.tree.TreeModel#valueForPathChanged(     * javax.swing.tree.TreePath, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997361815245	WITHOUT_CLASSIFICATION	2.6381847545163025E-7	DEFECT
/*     * @see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)     */	WITHOUT_CLASSIFICATION	0.9999998084713436	WITHOUT_CLASSIFICATION	1.915286562817191E-7	DEFECT
/*     * @see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)     */	WITHOUT_CLASSIFICATION	0.9999997588904089	WITHOUT_CLASSIFICATION	2.41109591128538E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999994446406183	WITHOUT_CLASSIFICATION	5.553593817324716E-7	DEFECT
//////////////////////////////////////////////////////////////// // instance variables	WITHOUT_CLASSIFICATION	0.9999997804293774	WITHOUT_CLASSIFICATION	2.195706224349368E-7	DEFECT
//////////////////////////////////////////////////////////////// // event handlers	WITHOUT_CLASSIFICATION	0.99999993178587	WITHOUT_CLASSIFICATION	6.821413007364854E-8	DEFECT
// store wizard?	WITHOUT_CLASSIFICATION	0.9999981455151927	WITHOUT_CLASSIFICATION	1.8544848072331135E-6	DEFECT
//////////////////////////////////////////////////////////////// // TreeModel implementation	WITHOUT_CLASSIFICATION	0.9999648266834822	WITHOUT_CLASSIFICATION	3.517331651787446E-5	DEFECT
//////////////////////////////////////////////////////////////// // ToDoListListener implementation	WITHOUT_CLASSIFICATION	0.9999249721338268	WITHOUT_CLASSIFICATION	7.502786617314627E-5	DEFECT
//////////////////////////////////////////////////////////////// // ToDoListListener implementation	WITHOUT_CLASSIFICATION	0.9999249721338268	WITHOUT_CLASSIFICATION	7.502786617314627E-5	DEFECT
//fireTreeNodesChanged(this, path, childIndices, children);	WITHOUT_CLASSIFICATION	0.9999994196405533	WITHOUT_CLASSIFICATION	5.80359446698245E-7	DEFECT
//image.setMargin(new Insets(0, 0, 0, 0));	WITHOUT_CLASSIFICATION	0.9999998992390678	WITHOUT_CLASSIFICATION	1.0076093213046532E-7	DEFECT
//otherwise parent must be an offending design material	WITHOUT_CLASSIFICATION	0.9999935928448607	WITHOUT_CLASSIFICATION	6.407155139236572E-6	DEFECT
/*     * @see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999994289580846	WITHOUT_CLASSIFICATION	5.710419155044498E-7	DEFECT
/* end class WizStep */	WITHOUT_CLASSIFICATION	0.9999463027768682	WITHOUT_CLASSIFICATION	5.369722313176715E-5	DEFECT
//////////////////////////////////////////////////////////////// // accessors	WITHOUT_CLASSIFICATION	0.99999900930865	WITHOUT_CLASSIFICATION	9.906913499891305E-7	DEFECT
//////////////////////////////////////////////////////////////// // actions	WITHOUT_CLASSIFICATION	0.9999930701905677	WITHOUT_CLASSIFICATION	6.9298094323343566E-6	DEFECT
// This is done for compatibility with previous version: // Move the argo.user.properties // written before 0.25.4 to the new location, if it exists.	WITHOUT_CLASSIFICATION	0.9999942257122678	WITHOUT_CLASSIFICATION	5.774287732249559E-6	DEFECT
// Don't allow instantiation	WITHOUT_CLASSIFICATION	0.9999876263500891	WITHOUT_CLASSIFICATION	1.2373649910810348E-5	DEFECT
//////////////////////////////////////////////////////////////// // ActionListener implementation	WITHOUT_CLASSIFICATION	0.9999907523212065	WITHOUT_CLASSIFICATION	9.247678793560217E-6	DEFECT
//////////////////////////////////////////////////////////////// // DocumentListener implementation	WITHOUT_CLASSIFICATION	0.9999897541151528	WITHOUT_CLASSIFICATION	1.0245884847259363E-5	DEFECT
//////////////////////////////////////////////////////////////// // TargetListener implementation	WITHOUT_CLASSIFICATION	0.9999768239734356	WITHOUT_CLASSIFICATION	2.3176026564379937E-5	DEFECT
// copy to new file and let the regular load code // do the actual load	WITHOUT_CLASSIFICATION	0.9999996401205788	WITHOUT_CLASSIFICATION	3.598794212077987E-7	DEFECT
//////////////////////////////////////////////////////////////// // Instance variables	WITHOUT_CLASSIFICATION	0.9999998989355574	WITHOUT_CLASSIFICATION	1.010644426042044E-7	DEFECT
/* end class ConfigurationFactory */	WITHOUT_CLASSIFICATION	0.9999923299070099	WITHOUT_CLASSIFICATION	7.670092990022677E-6	DEFECT
// LOG.log(Level.INFO, "Configuration saved to {0}\n", url);	WITHOUT_CLASSIFICATION	0.9999999988594612	WITHOUT_CLASSIFICATION	1.1405387323983907E-9	DEFECT
// check for the older properties file and // copy it over if possible	WITHOUT_CLASSIFICATION	0.9999994629773501	WITHOUT_CLASSIFICATION	5.370226500112749E-7	DEFECT
// Only allow one load	WITHOUT_CLASSIFICATION	0.9999987417981723	WITHOUT_CLASSIFICATION	1.2582018277466403E-6	DEFECT
// add the first point twice	WITHOUT_CLASSIFICATION	0.9999998542948009	WITHOUT_CLASSIFICATION	1.4570519918525286E-7	DEFECT
// add the first point twice	WITHOUT_CLASSIFICATION	0.9999998542948009	WITHOUT_CLASSIFICATION	1.4570519918525286E-7	DEFECT
// Scale everything up	WITHOUT_CLASSIFICATION	0.9999981329960588	WITHOUT_CLASSIFICATION	1.867003941205756E-6	DEFECT
// Initialize band buffer bounds	WITHOUT_CLASSIFICATION	0.9999985152299294	WITHOUT_CLASSIFICATION	1.4847700705749573E-6	DEFECT
//        LOG.log(Level.FINE, "getData Rectangle = " + clip);	WITHOUT_CLASSIFICATION	0.999999983707397	WITHOUT_CLASSIFICATION	1.629260308138372E-8	DEFECT
//        LOG.log(Level.FINE, "getData returning raster = " + translatedRaster);	WITHOUT_CLASSIFICATION	0.9999999972581706	WITHOUT_CLASSIFICATION	2.7418295011430334E-9	DEFECT
// Create a new graphics context so we start with fresh transforms	WITHOUT_CLASSIFICATION	0.9999999800793916	WITHOUT_CLASSIFICATION	1.9920608362047618E-8	DEFECT
// Fill with our background color	WITHOUT_CLASSIFICATION	0.9999988828066386	WITHOUT_CLASSIFICATION	1.1171933613252842E-6	DEFECT
// Translate & clip graphic to match region of interest	WITHOUT_CLASSIFICATION	0.9999999437208527	WITHOUT_CLASSIFICATION	5.627914726716997E-8	DEFECT
// Ask GEF to print a band of the diagram (translated & clipped)	WITHOUT_CLASSIFICATION	0.9999999931484209	WITHOUT_CLASSIFICATION	6.8515791648159196E-9	DEFECT
// Make sure it isn't caching anything that should be written	WITHOUT_CLASSIFICATION	0.9995277380272312	WITHOUT_CLASSIFICATION	4.7226197276882873E-4	DEFECT
//        assert !initialized; // GUITestActionOpenProject fails over this...	WITHOUT_CLASSIFICATION	0.999779870181316	WITHOUT_CLASSIFICATION	2.2012981868388084E-4	DEFECT
// Retain the original one:	WITHOUT_CLASSIFICATION	0.99999938848757	WITHOUT_CLASSIFICATION	6.115124300489242E-7	DEFECT
// Retain the original one:	WITHOUT_CLASSIFICATION	0.99999938848757	WITHOUT_CLASSIFICATION	6.115124300489242E-7	DEFECT
/*     * Internal initialization method.  Handles initialization which     * is common to both public methods.     */	WITHOUT_CLASSIFICATION	0.9999999535250671	WITHOUT_CLASSIFICATION	4.6474932955522213E-8	DEFECT
/* This is needed for the JUnit tests.         * Otherwise a "assert initialized" would suffice. */	WITHOUT_CLASSIFICATION	0.9999993527460116	WITHOUT_CLASSIFICATION	6.472539883716813E-7	DEFECT
/* This is needed for the JUnit tests.         * Otherwise a "assert initialized" would suffice. */	WITHOUT_CLASSIFICATION	0.9999993527460116	WITHOUT_CLASSIFICATION	6.472539883716813E-7	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
// Guaranteed to return a non-null array	WITHOUT_CLASSIFICATION	0.9999999594285716	WITHOUT_CLASSIFICATION	4.05714284274186E-8	DEFECT
// Flag the command as to whether it is first in a chain	WITHOUT_CLASSIFICATION	0.9999992128903142	WITHOUT_CLASSIFICATION	7.871096856574774E-7	DEFECT
/* end class DelayedChangeNotify */	WITHOUT_CLASSIFICATION	0.999988753934845	WITHOUT_CLASSIFICATION	1.1246065155030622E-5	DEFECT
// Default diagram settings	WITHOUT_CLASSIFICATION	0.9999999583689668	WITHOUT_CLASSIFICATION	4.163103305342406E-8	DEFECT
// Default notation settings	WITHOUT_CLASSIFICATION	0.9999997967928828	WITHOUT_CLASSIFICATION	2.032071171699221E-7	DEFECT
/* Generation preferences: */	WITHOUT_CLASSIFICATION	0.9998179143176417	WITHOUT_CLASSIFICATION	1.8208568235831524E-4	DEFECT
/*         * The next one defaults to TRUE, to stay compatible with older         * ArgoUML versions that did not have this setting:         */	WITHOUT_CLASSIFICATION	0.9999857338861604	WITHOUT_CLASSIFICATION	1.4266113839503247E-5	DEFECT
/*         * The next ones defaults to TRUE, to stay compatible with older         * ArgoUML versions that did not have this setting:         */	WITHOUT_CLASSIFICATION	0.999979836108297	WITHOUT_CLASSIFICATION	2.016389170309937E-5	DEFECT
/* This Notation is not available! */	WITHOUT_CLASSIFICATION	0.9989316200554964	WITHOUT_CLASSIFICATION	0.0010683799445035983	DEFECT
// Always put the model at the top	WITHOUT_CLASSIFICATION	0.9999980191239827	WITHOUT_CLASSIFICATION	1.980876017308645E-6	DEFECT
// otherwise add the diagram at the start	WITHOUT_CLASSIFICATION	0.9999975153397249	WITHOUT_CLASSIFICATION	2.4846602750363027E-6	DEFECT
// otherwise add the diagram at the start	WITHOUT_CLASSIFICATION	0.9999975153397249	WITHOUT_CLASSIFICATION	2.4846602750363027E-6	DEFECT
// finally, apply profile configuration to the model	WITHOUT_CLASSIFICATION	0.9999994676722819	WITHOUT_CLASSIFICATION	5.323277181496086E-7	DEFECT
//        uri = PersistenceManager.getInstance().fixUriExtension(theProjectUri);	WITHOUT_CLASSIFICATION	0.9999999835665183	WITHOUT_CLASSIFICATION	1.6433481661982573E-8	DEFECT
// Register with the save action with other subsystems so that // any changes in those subsystems will enable the // save button/menu item etc.	WITHOUT_CLASSIFICATION	0.9999999343871616	WITHOUT_CLASSIFICATION	6.561283838258305E-8	DEFECT
// not needed in UML 1.x	WITHOUT_CLASSIFICATION	0.9999910883364607	WITHOUT_CLASSIFICATION	8.9116635394451E-6	DEFECT
/* end interface DelayedVChangeListener */	WITHOUT_CLASSIFICATION	0.9999906837764838	WITHOUT_CLASSIFICATION	9.316223516107241E-6	DEFECT
// a profile initially has no applied profiles, we go bottom-up	WITHOUT_CLASSIFICATION	0.9999999807546088	WITHOUT_CLASSIFICATION	1.924539118640472E-8	DEFECT
/* Skip leading underscores: */	WITHOUT_CLASSIFICATION	0.9991867523078132	WITHOUT_CLASSIFICATION	8.132476921868369E-4	DEFECT
/**     * TODO: should just be the directory to write.     */	WITHOUT_CLASSIFICATION	0.9817407201532198	WITHOUT_CLASSIFICATION	0.01825927984678022	DEFECT
/* The preferences with project-scope: */	WITHOUT_CLASSIFICATION	0.9996178233936582	WITHOUT_CLASSIFICATION	3.821766063418267E-4	DEFECT
/* The ArgoUML version with which this project was last saved: */	WITHOUT_CLASSIFICATION	0.9998280385900921	WITHOUT_CLASSIFICATION	1.7196140990798303E-4	DEFECT
// if diagram added successfully, add the member too	WITHOUT_CLASSIFICATION	0.9999996374262959	WITHOUT_CLASSIFICATION	3.625737040167384E-7	DEFECT
// Adding a todo member removes any existing one.	WITHOUT_CLASSIFICATION	0.999998147682459	WITHOUT_CLASSIFICATION	1.8523175409582161E-6	DEFECT
// got past the veto, add the member	WITHOUT_CLASSIFICATION	0.99999583589543	WITHOUT_CLASSIFICATION	4.164104570043235E-6	DEFECT
// send indeterminate new value instead of making copy of vector	WITHOUT_CLASSIFICATION	0.9999997393031916	WITHOUT_CLASSIFICATION	2.606968084144083E-7	DEFECT
/* Remove the dependent         * modelelements, such as the statemachine         * for a statechartdiagram:         */	WITHOUT_CLASSIFICATION	0.9999965095157808	WITHOUT_CLASSIFICATION	3.4904842192100853E-6	DEFECT
/* Hence, a diagram name was saved in the project             * that we are loading. So, we use this name             * to retrieve any matching diagram. */	WITHOUT_CLASSIFICATION	0.9999979439683457	WITHOUT_CLASSIFICATION	2.0560316542960644E-6	DEFECT
/* Use the first diagram. */	WITHOUT_CLASSIFICATION	0.9999987863715705	WITHOUT_CLASSIFICATION	1.2136284294704025E-6	DEFECT
/* If there was no diagram at all,             * then use the (first) UML model. */	WITHOUT_CLASSIFICATION	0.9999994826014061	WITHOUT_CLASSIFICATION	5.173985938363318E-7	DEFECT
// we don't need this HashMap anymore so free up the memory	WITHOUT_CLASSIFICATION	0.9999865586142997	WITHOUT_CLASSIFICATION	1.3441385700377883E-5	DEFECT
//Can not delete the model	WITHOUT_CLASSIFICATION	0.9999771832661168	WITHOUT_CLASSIFICATION	2.2816733883149068E-5	DEFECT
//Can not delete the profile	WITHOUT_CLASSIFICATION	0.9999950738669932	WITHOUT_CLASSIFICATION	4.926133006773605E-6	DEFECT
/*     * @see java.lang.Object#finalize()     */	WITHOUT_CLASSIFICATION	0.9999975961873063	WITHOUT_CLASSIFICATION	2.4038126935816223E-6	DEFECT
/*	WITHOUT_CLASSIFICATION	0.9917225237718192	WITHOUT_CLASSIFICATION	0.008277476228180789	DEFECT
/*	WITHOUT_CLASSIFICATION	0.9917225237718192	WITHOUT_CLASSIFICATION	0.008277476228180789	DEFECT
/*	WITHOUT_CLASSIFICATION	0.9917225237718192	WITHOUT_CLASSIFICATION	0.008277476228180789	DEFECT
// Make the topmost diagram (that is not the one being deleted) // current.	WITHOUT_CLASSIFICATION	0.9999990323482778	WITHOUT_CLASSIFICATION	9.676517221231633E-7	DEFECT
//////////////////////////////////////////////////////////////// // trash related methods	WITHOUT_CLASSIFICATION	0.9999994442466564	WITHOUT_CLASSIFICATION	5.557533435534112E-7	DEFECT
// Fire an event some anyone who cares about diagrams being // removed can listen for it	WITHOUT_CLASSIFICATION	0.9999912094396939	WITHOUT_CLASSIFICATION	8.790560305990917E-6	DEFECT
// If we delete a FigEdge // or FigNode we actually call this method with the owner not // the Fig itself. However, this method // is called by ActionDeleteModelElements // for primitive Figs (without owner).	WITHOUT_CLASSIFICATION	0.9977935076147172	WITHOUT_CLASSIFICATION	0.002206492385282751	DEFECT
// there's just one ProfileConfiguration in a project // and there's no other way to add another one	WITHOUT_CLASSIFICATION	0.9999999899036306	WITHOUT_CLASSIFICATION	1.0096369314540872E-8	DEFECT
/** * Tab for the settings dialog that makes it possible to * select the modules that are to be enabled. * * TODO: Header for the table. * * @author Linus Tolke */	WITHOUT_CLASSIFICATION	0.8564013597702317	DEFECT	0.1435986402297683	WITHOUT_CLASSIFICATION
// Do nothing - these buttons are not shown.	WITHOUT_CLASSIFICATION	0.9999805317987238	WITHOUT_CLASSIFICATION	1.946820127624744E-5	DEFECT
// Access methods for program infrastructure.	WITHOUT_CLASSIFICATION	0.9999999563392973	WITHOUT_CLASSIFICATION	4.3660702673975514E-8	DEFECT
/*	WITHOUT_CLASSIFICATION	0.9917225237718192	WITHOUT_CLASSIFICATION	0.008277476228180789	DEFECT
// The creation of the actual GUI elements is deferred until // they are actually needed. Otherwize we have problems // with the initialization.	WITHOUT_CLASSIFICATION	0.9999987497990961	WITHOUT_CLASSIFICATION	1.2502009038961834E-6	DEFECT
// Do nothing! // The next time we refresh, we will fetch the values again.	WITHOUT_CLASSIFICATION	0.9999995452849413	WITHOUT_CLASSIFICATION	4.547150587859063E-7	DEFECT
// Access methods for modules that need to query about the status of // other modules.	WITHOUT_CLASSIFICATION	0.999999892113311	WITHOUT_CLASSIFICATION	1.0788668908093759E-7	DEFECT
// Access methods for the GUI that the user uses to enable and disable // modules.	WITHOUT_CLASSIFICATION	0.9999999349755844	WITHOUT_CLASSIFICATION	6.502441560626214E-8	DEFECT
// Access methods for the program infrastructure	WITHOUT_CLASSIFICATION	0.9999999699267015	WITHOUT_CLASSIFICATION	3.0073298552129966E-8	DEFECT
// Catch all exceptions and errors, however severe	WITHOUT_CLASSIFICATION	0.9999564416238907	WITHOUT_CLASSIFICATION	4.3558376109296456E-5	DEFECT
// TODO: huntForModulesFromJavaWebStart();	WITHOUT_CLASSIFICATION	0.9347846465037238	WITHOUT_CLASSIFICATION	0.06521535349627604	DEFECT
// Load modules specified by a System property. // Modules specified by a system property is for // running modules from within Eclipse and running // from Java Web Start.	WITHOUT_CLASSIFICATION	0.9999994297939648	WITHOUT_CLASSIFICATION	5.702060352495814E-7	DEFECT
// Try-catch only the JarFile instantiation so we // don't accidentally mask anything in ArgoJarClassLoader // or processJarFile.	WITHOUT_CLASSIFICATION	0.9999222021607133	WITHOUT_CLASSIFICATION	7.77978392866584E-5	DEFECT
// We expect all extensions to have a manifest even though we // can operate without one if necessary.	WITHOUT_CLASSIFICATION	0.9999998702459254	WITHOUT_CLASSIFICATION	1.297540746860002E-7	DEFECT
// Look for our specification	WITHOUT_CLASSIFICATION	0.9999999316758432	WITHOUT_CLASSIFICATION	6.832415679505202E-8	DEFECT
// Add this to search list for I18N properties // (Done for both modules & localized property file sets)	WITHOUT_CLASSIFICATION	0.999999597914246	WITHOUT_CLASSIFICATION	4.0208575396648547E-7	DEFECT
// We havn't found it. Add it.	WITHOUT_CLASSIFICATION	0.9999918653912523	WITHOUT_CLASSIFICATION	8.134608747642127E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
/*     * Utility function to unregister all listeners     * registered through addElementListener.     *     * @see #addElementListener(Object, String)     */	WITHOUT_CLASSIFICATION	0.9999475079347135	WITHOUT_CLASSIFICATION	5.2492065286358566E-5	DEFECT
/*     * Called after the notation default property gets changed.     *     * @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999996921442436	WITHOUT_CLASSIFICATION	3.0785575638505675E-7	DEFECT
// e.g. for an operation: // if pce.getSource() == modelElement // && event.propertyName = "parameter" //     if event instanceof AddAssociationEvent //         Get the parameter instance from event.newValue //         Call model to add listener on parameter on change //             of "name", "type" //     else if event instanceof RemoveAssociationEvent //         Get the parameter instance from event.oldValue //         Call model to remove listener on parameter on change //             of "name", "type" //     end if // end if	WITHOUT_CLASSIFICATION	0.9999999986014645	WITHOUT_CLASSIFICATION	1.3985355064323852E-9	DEFECT
// The following check should have been satisfied before we // instantiated the module, but double check again	WITHOUT_CLASSIFICATION	0.9999991767197485	WITHOUT_CLASSIFICATION	8.23280251529112E-7	DEFECT
// If it didn't have a loadable module class and it doesn't look like // a localized property set, warn the user that something funny is in // their extension directory	WITHOUT_CLASSIFICATION	0.988722787470901	WITHOUT_CLASSIFICATION	0.011277212529099084	DEFECT
// Since there is no way to compare the objects as equal, // we have to search through the list at this point.	WITHOUT_CLASSIFICATION	0.9999999036421924	WITHOUT_CLASSIFICATION	9.635780753059478E-8	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
/*     * Remark:     * There is also a java-like notation, which is also     * part of ArgoUML core distribution.     */	WITHOUT_CLASSIFICATION	0.9999813972660982	WITHOUT_CLASSIFICATION	1.860273390177655E-5	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
/* This Notation is not available! */	WITHOUT_CLASSIFICATION	0.9989316200554964	WITHOUT_CLASSIFICATION	0.0010683799445035983	DEFECT
// This is needed for the case when the default notation is // not loaded at this point.	WITHOUT_CLASSIFICATION	0.9999989621480604	WITHOUT_CLASSIFICATION	1.03785193963656E-6	DEFECT
//////////////////////////////////////////////////////////////// // class accessors	WITHOUT_CLASSIFICATION	0.9999926921401575	WITHOUT_CLASSIFICATION	7.307859842553289E-6	DEFECT
//////////////////////////////////////////////////////////////// // Static workers for dealing with notation names.	WITHOUT_CLASSIFICATION	0.999957569995498	WITHOUT_CLASSIFICATION	4.243000450196001E-5	DEFECT
// No valid field for above notationLanguage.  It's valid if not null.	WITHOUT_CLASSIFICATION	0.999990838370329	WITHOUT_CLASSIFICATION	9.1616296711183E-6	DEFECT
// We also show stereotypes	WITHOUT_CLASSIFICATION	0.9999944987392416	WITHOUT_CLASSIFICATION	5.501260758409736E-6	DEFECT
// We also show stereotypes	WITHOUT_CLASSIFICATION	0.9999944987392416	WITHOUT_CLASSIFICATION	5.501260758409736E-6	DEFECT
// We also show the type (of which e.g. the name may change)	WITHOUT_CLASSIFICATION	0.9999977046808208	WITHOUT_CLASSIFICATION	2.2953191791445293E-6	DEFECT
// We also show the type (of which e.g. the name may change)	WITHOUT_CLASSIFICATION	0.9999977046808208	WITHOUT_CLASSIFICATION	2.2953191791445293E-6	DEFECT
// We also show tagged values (the / for derived)	WITHOUT_CLASSIFICATION	0.9999995714979152	WITHOUT_CLASSIFICATION	4.285020848617655E-7	DEFECT
// We also show tagged values (the / for derived)	WITHOUT_CLASSIFICATION	0.9999995714979152	WITHOUT_CLASSIFICATION	4.285020848617655E-7	DEFECT
// and when the Operation is replaced:	WITHOUT_CLASSIFICATION	0.9999985950353386	WITHOUT_CLASSIFICATION	1.404964661373579E-6	DEFECT
// and when the class changes name:	WITHOUT_CLASSIFICATION	0.9999977119709865	WITHOUT_CLASSIFICATION	2.2880290134416807E-6	DEFECT
/* mvw: Indeed. The intention of the constructor parameter is to prove         * that there is a valid UML object to bind the notation to.          * So, the next statement should fail on a null parameter,          * and on anything that is not an object of which          * we can retrieve the multiplicity. */	WITHOUT_CLASSIFICATION	0.9981867840383222	WITHOUT_CLASSIFICATION	0.0018132159616778254	DEFECT
/* We are not interested in the name. */	WITHOUT_CLASSIFICATION	0.9999971874052082	WITHOUT_CLASSIFICATION	2.8125947917211226E-6	DEFECT
/* And the parameter names and values: */	WITHOUT_CLASSIFICATION	0.9997135512678665	WITHOUT_CLASSIFICATION	2.8644873213347404E-4	DEFECT
/* And the arguments: */	WITHOUT_CLASSIFICATION	0.9999784092012741	WITHOUT_CLASSIFICATION	2.1590798725833244E-5	DEFECT
// We also show parameters	WITHOUT_CLASSIFICATION	0.9999973987125511	WITHOUT_CLASSIFICATION	2.6012874487988586E-6	DEFECT
//  We also show types of parameters	WITHOUT_CLASSIFICATION	0.9999938692685318	WITHOUT_CLASSIFICATION	6.130731468219411E-6	DEFECT
/* Listen to the modelelement itself: */	WITHOUT_CLASSIFICATION	0.999854073188507	WITHOUT_CLASSIFICATION	1.4592681149298812E-4	DEFECT
// We also show tagged values (the / for derived)	WITHOUT_CLASSIFICATION	0.9999995714979152	WITHOUT_CLASSIFICATION	4.285020848617655E-7	DEFECT
// If this fails, then there is a problem... // dthompson 29/12/2008: It seems that the returned value is  // irrelevant here, so I assume that the purpose of this call // is just to throw an exception in case of a problem.	WITHOUT_CLASSIFICATION	0.9931191044696446	WITHOUT_CLASSIFICATION	0.006880895530355412	DEFECT
// register for events from all modelelements // that change the name and body text // i.e. when the CallAction is replaced:	WITHOUT_CLASSIFICATION	0.9999999876743406	WITHOUT_CLASSIFICATION	1.2325659401291495E-8	DEFECT
// and when the owner is replaced (unlikely for operations), // and when the operation changes name:	WITHOUT_CLASSIFICATION	0.9999995455858687	WITHOUT_CLASSIFICATION	4.544141312827534E-7	DEFECT
/* Listen to the modelelement itself: */	WITHOUT_CLASSIFICATION	0.999854073188507	WITHOUT_CLASSIFICATION	1.4592681149298812E-4	DEFECT
// removed stereotype	WITHOUT_CLASSIFICATION	0.999997285136192	WITHOUT_CLASSIFICATION	2.714863808046855E-6	DEFECT
// register for events from all modelelements // that change the text // i.e. when the Transition is replaced:	WITHOUT_CLASSIFICATION	0.9999999913067921	WITHOUT_CLASSIFICATION	8.693207927599692E-9	DEFECT
// new stereotype	WITHOUT_CLASSIFICATION	0.9999973419780346	WITHOUT_CLASSIFICATION	2.658021965433941E-6	DEFECT
/* Listen to name changes in the path (useful for e.g. Package): */	WITHOUT_CLASSIFICATION	0.999998778307331	WITHOUT_CLASSIFICATION	1.2216926691328485E-6	DEFECT
// register for the doActivity etc.	WITHOUT_CLASSIFICATION	0.9999997990498326	WITHOUT_CLASSIFICATION	2.009501673785656E-7	DEFECT
// register for internal transitions:	WITHOUT_CLASSIFICATION	0.9999998552404646	WITHOUT_CLASSIFICATION	1.447595352591784E-7	DEFECT
//        return "parsing.java.help.attribute";	WITHOUT_CLASSIFICATION	0.9999999244708664	WITHOUT_CLASSIFICATION	7.55291336652122E-8	DEFECT
// TODO: The src_visibility tag doesn't appear to be created // anywhere by ArgoUML currently	WITHOUT_CLASSIFICATION	0.7546257798976054	DEFECT	0.24537422010239462	WITHOUT_CLASSIFICATION
//        return "parsing.help.fig-association-end-name";	WITHOUT_CLASSIFICATION	0.9999995918120589	WITHOUT_CLASSIFICATION	4.081879412215145E-7	DEFECT
//TODO: initial value	WITHOUT_CLASSIFICATION	0.9732968645416841	WITHOUT_CLASSIFICATION	0.02670313545831587	DEFECT
/* skip spaces */	WITHOUT_CLASSIFICATION	0.9999937197950051	WITHOUT_CLASSIFICATION	6.280204994914466E-6	DEFECT
// the name itself	WITHOUT_CLASSIFICATION	0.9999964869167841	WITHOUT_CLASSIFICATION	3.5130832159929306E-6	DEFECT
/* Check the name for validity: */	WITHOUT_CLASSIFICATION	0.9991657325201541	WITHOUT_CLASSIFICATION	8.342674798460535E-4	DEFECT
/* TODO: Check the name for validity. */	WITHOUT_CLASSIFICATION	0.7963794684314743	DEFECT	0.20362053156852564	WITHOUT_CLASSIFICATION
/*     * @see java.awt.event.ActionListener#actionPerformed(     *         java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.9999999066328071	WITHOUT_CLASSIFICATION	9.336719285167458E-8	DEFECT
// pick out return type	WITHOUT_CLASSIFICATION	0.9999928739204221	WITHOUT_CLASSIFICATION	7.1260795777913754E-6	DEFECT
// handle multiplicity here since we need the type // actually the API of generator is buggy since to generate // multiplicity correctly we need the attribute too	WITHOUT_CLASSIFICATION	0.9976678158579703	WITHOUT_CLASSIFICATION	0.002332184142029792	DEFECT
// Build the final string	WITHOUT_CLASSIFICATION	0.9999838582944586	WITHOUT_CLASSIFICATION	1.6141705541486295E-5	DEFECT
//TODO: qualifiers (e.g., const) //TODO: stereotypes...	WITHOUT_CLASSIFICATION	0.9819189353476194	WITHOUT_CLASSIFICATION	0.018081064652380602	DEFECT
// name and params	WITHOUT_CLASSIFICATION	0.9999975020831866	WITHOUT_CLASSIFICATION	2.497916813418509E-6	DEFECT
/* Do nothing. */	WITHOUT_CLASSIFICATION	0.9999762593166146	WITHOUT_CLASSIFICATION	2.3740683385349116E-5	DEFECT
// constructor	WITHOUT_CLASSIFICATION	0.999999748642818	WITHOUT_CLASSIFICATION	2.513571820193868E-7	DEFECT
// check for more attributes (';' separated):	WITHOUT_CLASSIFICATION	0.9999999624334419	WITHOUT_CLASSIFICATION	3.756655820524947E-8	DEFECT
/*     * For Java notation, we also need to listen to "leaf" changes,      * since they are shown as "final" on the diagram.     */	WITHOUT_CLASSIFICATION	0.9999998757067864	WITHOUT_CLASSIFICATION	1.242932136440691E-7	DEFECT
// Remove bases that aren't there anymore	WITHOUT_CLASSIFICATION	0.9981644738543732	WITHOUT_CLASSIFICATION	0.0018355261456268076	DEFECT
/*Notation.findNotation("Java");*/	WITHOUT_CLASSIFICATION	0.9999872362093597	WITHOUT_CLASSIFICATION	1.2763790640299255E-5	DEFECT
/* Initialize the NotationUtilityUml: */	WITHOUT_CLASSIFICATION	0.9997580895276642	WITHOUT_CLASSIFICATION	2.4191047233575403E-4	DEFECT
// copy - can't iterate modify live collection while iterating it	WITHOUT_CLASSIFICATION	0.9994880122866775	WITHOUT_CLASSIFICATION	5.11987713322489E-4	DEFECT
/* When nothing is generated: omit the space. */	WITHOUT_CLASSIFICATION	0.9938969214111075	WITHOUT_CLASSIFICATION	0.006103078588892518	DEFECT
// Loop through all base classes, building a comma separated list	WITHOUT_CLASSIFICATION	0.9999933710895874	WITHOUT_CLASSIFICATION	6.628910412644924E-6	DEFECT
// yes, there are more:	WITHOUT_CLASSIFICATION	0.9999699500915161	WITHOUT_CLASSIFICATION	3.004990848386166E-5	DEFECT
//no text? remove attr!	WITHOUT_CLASSIFICATION	0.9999319201146365	WITHOUT_CLASSIFICATION	6.80798853635421E-5	DEFECT
//no non-whitechars in text? remove attr!	WITHOUT_CLASSIFICATION	0.9999950020247151	WITHOUT_CLASSIFICATION	4.997975284805053E-6	DEFECT
/* We need to set the namespace/owner                     * of the new attribute before parsing: */	WITHOUT_CLASSIFICATION	0.9999998873586387	WITHOUT_CLASSIFICATION	1.1264136131874409E-7	DEFECT
/* If the 1st attribute is static,                         * then the new ones, too. */	WITHOUT_CLASSIFICATION	0.9999998662836646	WITHOUT_CLASSIFICATION	1.3371633547270003E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999996210616915	WITHOUT_CLASSIFICATION	3.7893830849916885E-6	DEFECT
// yes, there are more:	WITHOUT_CLASSIFICATION	0.9999699500915161	WITHOUT_CLASSIFICATION	3.004990848386166E-5	DEFECT
/*     * Generates a string representation for the provided     * attribute. The string representation will be of the form:     *          visibility name [multiplicity] : type-expression =     *                          initial-value {property-string}     * Depending on settings in Notation, visibility, multiplicity,     * type-expression, initial value and properties are shown/not shown.     */	WITHOUT_CLASSIFICATION	0.9999987791458058	WITHOUT_CLASSIFICATION	1.2208541941225054E-6	DEFECT
/* Handle Derived: */	WITHOUT_CLASSIFICATION	0.9997322760217062	WITHOUT_CLASSIFICATION	2.677239782937899E-4	DEFECT
/* Handle Derived: */	WITHOUT_CLASSIFICATION	0.9997322760217062	WITHOUT_CLASSIFICATION	2.677239782937899E-4	DEFECT
/* Handle Visibility: */	WITHOUT_CLASSIFICATION	0.9999011400206744	WITHOUT_CLASSIFICATION	9.885997932554294E-5	DEFECT
// fix for loading bad projects	WITHOUT_CLASSIFICATION	0.9997961310317283	WITHOUT_CLASSIFICATION	2.0386896827176274E-4	DEFECT
/*                     * The "show types" defaults to TRUE, to stay compatible                     * with older ArgoUML versions that did not have this                     * setting:                     */	WITHOUT_CLASSIFICATION	0.9999447966339403	WITHOUT_CLASSIFICATION	5.520336605965102E-5	DEFECT
// The element was deleted while we were processing it	WITHOUT_CLASSIFICATION	0.9999996623973832	WITHOUT_CLASSIFICATION	3.3760261673701053E-7	DEFECT
// strip any trailing semi-colons	WITHOUT_CLASSIFICATION	0.9999992392736853	WITHOUT_CLASSIFICATION	7.607263147948111E-7	DEFECT
// construct bases string (comma separated)	WITHOUT_CLASSIFICATION	0.9999973674963797	WITHOUT_CLASSIFICATION	2.6325036202008864E-6	DEFECT
//no text? remove op!	WITHOUT_CLASSIFICATION	0.9999702357687676	WITHOUT_CLASSIFICATION	2.9764231232449263E-5	DEFECT
//no non-whitechars in text? remove op!	WITHOUT_CLASSIFICATION	0.9999982205338341	WITHOUT_CLASSIFICATION	1.7794661658748627E-6	DEFECT
// check for more operations (';' separated):	WITHOUT_CLASSIFICATION	0.9999999582799214	WITHOUT_CLASSIFICATION	4.172007865400028E-8	DEFECT
// end while loop	WITHOUT_CLASSIFICATION	0.9999972326658718	WITHOUT_CLASSIFICATION	2.767334128129906E-6	DEFECT
// parameterlist is guaranteed to contain at least "("	WITHOUT_CLASSIFICATION	0.9999994663914255	WITHOUT_CLASSIFICATION	5.336085745011157E-7	DEFECT
// Don't create a stereotype for <<signal>> on a Reception // but create any other parsed stereotypes as needed	WITHOUT_CLASSIFICATION	0.9999980507727511	WITHOUT_CLASSIFICATION	1.949227248961767E-6	DEFECT
// lets concatenate it to the resulting string (genStr)	WITHOUT_CLASSIFICATION	0.9999991652367628	WITHOUT_CLASSIFICATION	8.347632371046946E-7	DEFECT
/* The "show types" defaults to TRUE, to stay compatible with older             * ArgoUML versions that did not have this setting: */	WITHOUT_CLASSIFICATION	0.9996650186318098	WITHOUT_CLASSIFICATION	3.3498136819030527E-4	DEFECT
// the parameters	WITHOUT_CLASSIFICATION	0.9999987263836323	WITHOUT_CLASSIFICATION	1.2736163677527092E-6	DEFECT
// the returnparameters	WITHOUT_CLASSIFICATION	0.9999996543352483	WITHOUT_CLASSIFICATION	3.4566475163268016E-7	DEFECT
// The model element was deleted while we were working on it	WITHOUT_CLASSIFICATION	0.9999767737588036	WITHOUT_CLASSIFICATION	2.32262411964346E-5	DEFECT
// else: we remove only the extra ","	WITHOUT_CLASSIFICATION	0.9999942035316637	WITHOUT_CLASSIFICATION	5.796468336312153E-6	DEFECT
// the query state	WITHOUT_CLASSIFICATION	0.9999971876271775	WITHOUT_CLASSIFICATION	2.8123728224957915E-6	DEFECT
/*         * Although Operation and Signal are peers in the UML type          * hierarchy they share the attributes isRoot, isLeaf,          * isAbstract, and  specification. Concurrency is *not*          * shared and is specific to Operation.         */	WITHOUT_CLASSIFICATION	0.9999999776029024	WITHOUT_CLASSIFICATION	2.2397097584233775E-8	DEFECT
// remove last ,	WITHOUT_CLASSIFICATION	0.9999970130405115	WITHOUT_CLASSIFICATION	2.986959488649965E-6	DEFECT
// end of block	WITHOUT_CLASSIFICATION	0.9999984042455593	WITHOUT_CLASSIFICATION	1.5957544406901003E-6	DEFECT
// A string of the form "name:"	WITHOUT_CLASSIFICATION	0.9999999087721724	WITHOUT_CLASSIFICATION	9.12278275743244E-8	DEFECT
// this is a Message UML object	WITHOUT_CLASSIFICATION	0.999924765485327	WITHOUT_CLASSIFICATION	7.52345146729349E-5	DEFECT
/* Supported format:         *     predecessors number ":" action         * The 3 parts of the string to generate: */	WITHOUT_CLASSIFICATION	0.9999996393537065	WITHOUT_CLASSIFICATION	3.6064629352754566E-7	DEFECT
/*(MMessage)*/	WITHOUT_CLASSIFICATION	0.9999428904492316	WITHOUT_CLASSIFICATION	5.710955076845125E-5	DEFECT
// This may return null:	WITHOUT_CLASSIFICATION	0.9999914379653508	WITHOUT_CLASSIFICATION	8.562034649141263E-6	DEFECT
// activatorIntNo is now guaranteed not null	WITHOUT_CLASSIFICATION	0.9999992594542045	WITHOUT_CLASSIFICATION	7.405457955221116E-7	DEFECT
//        List<String> args = null;	WITHOUT_CLASSIFICATION	0.9999984400809132	WITHOUT_CLASSIFICATION	1.5599190869129928E-6	DEFECT
// get the ordered list of immediate successors:	WITHOUT_CLASSIFICATION	0.9999999730924637	WITHOUT_CLASSIFICATION	2.6907536193387352E-8	DEFECT
// the condition or iteration expression (recurrence):	WITHOUT_CLASSIFICATION	0.9999559148082249	WITHOUT_CLASSIFICATION	4.408519177506852E-5	DEFECT
/* (MMessage) */	WITHOUT_CLASSIFICATION	0.9999891807843372	WITHOUT_CLASSIFICATION	1.0819215662700295E-5	DEFECT
/* Now apply the changes to the model: */	WITHOUT_CLASSIFICATION	0.9999894602075818	WITHOUT_CLASSIFICATION	1.0539792418155648E-5	DEFECT
/* MMessage */	WITHOUT_CLASSIFICATION	0.9999900987950188	WITHOUT_CLASSIFICATION	9.901204981207481E-6	DEFECT
// If there are more than one suitable operation, // then we pick the first one.	WITHOUT_CLASSIFICATION	0.9999999918273985	WITHOUT_CLASSIFICATION	8.172601477895815E-9	DEFECT
/* Disconnect the message from the call graph                 * Make copies of returned live collections                 * since we're modifying                 */	WITHOUT_CLASSIFICATION	0.9999912661062427	WITHOUT_CLASSIFICATION	8.733893757379828E-6	DEFECT
// Find the preceding message, if any, on either end of the // association.	WITHOUT_CLASSIFICATION	0.999896493732676	WITHOUT_CLASSIFICATION	1.0350626732390866E-4	DEFECT
/* MClassifierRole */	WITHOUT_CLASSIFICATION	0.9999936331963122	WITHOUT_CLASSIFICATION	6.36680368785644E-6	DEFECT
// Connect the message at a new spot	WITHOUT_CLASSIFICATION	0.9999855524340232	WITHOUT_CLASSIFICATION	1.4447565976683516E-5	DEFECT
// case 3 & 4	WITHOUT_CLASSIFICATION	0.9999970846991376	WITHOUT_CLASSIFICATION	2.915300862439673E-6	DEFECT
/* MMessage */	WITHOUT_CLASSIFICATION	0.9999900987950188	WITHOUT_CLASSIFICATION	9.901204981207481E-6	DEFECT
/* (MMessage) */	WITHOUT_CLASSIFICATION	0.9999891807843372	WITHOUT_CLASSIFICATION	1.0819215662700295E-5	DEFECT
/* (MMessage) */	WITHOUT_CLASSIFICATION	0.9999891807843372	WITHOUT_CLASSIFICATION	1.0819215662700295E-5	DEFECT
/* (MMessage) */	WITHOUT_CLASSIFICATION	0.9999891807843372	WITHOUT_CLASSIFICATION	1.0819215662700295E-5	DEFECT
/* (MMessage) */	WITHOUT_CLASSIFICATION	0.9999891807843372	WITHOUT_CLASSIFICATION	1.0819215662700295E-5	DEFECT
/* MClassifierRole */	WITHOUT_CLASSIFICATION	0.9999936331963122	WITHOUT_CLASSIFICATION	6.36680368785644E-6	DEFECT
/* If no variable name was given, then retain the one in the model. */	WITHOUT_CLASSIFICATION	0.9999996531977304	WITHOUT_CLASSIFICATION	3.468022695658244E-7	DEFECT
/* If no function-name was given, then retain the one in the model. */	WITHOUT_CLASSIFICATION	0.9999993411998744	WITHOUT_CLASSIFICATION	6.588001255389015E-7	DEFECT
/* Store the guard, i.e. condition or iteration expression,         * in the recurrence field of the Action: */	WITHOUT_CLASSIFICATION	0.9999977311339282	WITHOUT_CLASSIFICATION	2.2688660718027275E-6	DEFECT
/* If there was no Action yet, create a CallAction: */	WITHOUT_CLASSIFICATION	0.9998845937465246	WITHOUT_CLASSIFICATION	1.1540625347542248E-4	DEFECT
// Things are strange if there are more than one candidate root, // it has no obvious interpretation in terms of a call tree.	WITHOUT_CLASSIFICATION	0.9999999819648081	WITHOUT_CLASSIFICATION	1.8035191930010304E-8	DEFECT
/*MMessage*/	WITHOUT_CLASSIFICATION	0.999956356235913	WITHOUT_CLASSIFICATION	4.364376408697949E-5	DEFECT
/*MMessage*/	WITHOUT_CLASSIFICATION	0.999956356235913	WITHOUT_CLASSIFICATION	4.364376408697949E-5	DEFECT
// Jaap Branderhorst 2002-23-09 added next lines to link // parameters and operations to the figs that represent // them	WITHOUT_CLASSIFICATION	0.999926085031433	WITHOUT_CLASSIFICATION	7.391496856700082E-5	DEFECT
// We can do nothing if we don't have both the use case and extension // point.	WITHOUT_CLASSIFICATION	0.9999973675383113	WITHOUT_CLASSIFICATION	2.6324616887915435E-6	DEFECT
// Parse the string to creat a new extension point.	WITHOUT_CLASSIFICATION	0.9999999490541501	WITHOUT_CLASSIFICATION	5.094584985647496E-8	DEFECT
// If we got back null we interpret this as meaning delete the // reference to the extension point from the use case, otherwise we set // the fields of the extension point to the values in newEp.	WITHOUT_CLASSIFICATION	0.9999997206797908	WITHOUT_CLASSIFICATION	2.7932020919076046E-7	DEFECT
// Build a new extension point	WITHOUT_CLASSIFICATION	0.9999778182480478	WITHOUT_CLASSIFICATION	2.2181751952159617E-5	DEFECT
// The empty string. Return null	WITHOUT_CLASSIFICATION	0.9999972788531863	WITHOUT_CLASSIFICATION	2.721146813695249E-6	DEFECT
/* Handle Derived: */	WITHOUT_CLASSIFICATION	0.9997322760217062	WITHOUT_CLASSIFICATION	2.677239782937899E-4	DEFECT
// If we are given the null string, return immediately,  // so that the extensionpoint is removed.	WITHOUT_CLASSIFICATION	0.9999984298308261	WITHOUT_CLASSIFICATION	1.5701691738891367E-6	DEFECT
// A string of the form "location". This will be confused by the // string ":", so we pick this out as an instruction to clear both // name and location.	WITHOUT_CLASSIFICATION	0.9999999657360638	WITHOUT_CLASSIFICATION	3.426393636399024E-8	DEFECT
// A string of the form "name:location". Discard the middle token // (":")	WITHOUT_CLASSIFICATION	0.999999598667588	WITHOUT_CLASSIFICATION	4.013324120056011E-7	DEFECT
// Read past the colon.	WITHOUT_CLASSIFICATION	0.99999533272237	WITHOUT_CLASSIFICATION	4.66727763004072E-6	DEFECT
// The string to build	WITHOUT_CLASSIFICATION	0.999998146576136	WITHOUT_CLASSIFICATION	1.8534238640577582E-6	DEFECT
// Get the fields we want	WITHOUT_CLASSIFICATION	0.9999965912558835	WITHOUT_CLASSIFICATION	3.4087441166179546E-6	DEFECT
// Put in the name field if it's there	WITHOUT_CLASSIFICATION	0.9999994085063774	WITHOUT_CLASSIFICATION	5.914936225621609E-7	DEFECT
// Put in the location field if it's there	WITHOUT_CLASSIFICATION	0.9999998293876142	WITHOUT_CLASSIFICATION	1.7061238569668996E-7	DEFECT
/* First we decode the string: */	WITHOUT_CLASSIFICATION	0.9999358812070945	WITHOUT_CLASSIFICATION	6.411879290544474E-5	DEFECT
/* Secondly we check the previous model structure: */	WITHOUT_CLASSIFICATION	0.9999667170346264	WITHOUT_CLASSIFICATION	3.3282965373595906E-5	DEFECT
/* And 3rd, we adapt the model: */	WITHOUT_CLASSIFICATION	0.9993336809850519	WITHOUT_CLASSIFICATION	6.663190149479767E-4	DEFECT
// Same class, other operation	WITHOUT_CLASSIFICATION	0.9999975271836834	WITHOUT_CLASSIFICATION	2.4728163166065304E-6	DEFECT
// Other class	WITHOUT_CLASSIFICATION	0.9999953868788953	WITHOUT_CLASSIFICATION	4.613121104655079E-6	DEFECT
// We found the classifier, now go find the operation:	WITHOUT_CLASSIFICATION	0.9999999834809835	WITHOUT_CLASSIFICATION	1.651901642628387E-8	DEFECT
/* Here we located the new classifier                          * with its operation. */	WITHOUT_CLASSIFICATION	0.9999992771083135	WITHOUT_CLASSIFICATION	7.228916864330706E-7	DEFECT
/* the text was: {frozen} */	WITHOUT_CLASSIFICATION	0.9999033849926084	WITHOUT_CLASSIFICATION	9.661500739150936E-5	DEFECT
/* the text was: {frozen = false} */	WITHOUT_CLASSIFICATION	0.9998057840691832	WITHOUT_CLASSIFICATION	1.9421593081668038E-4	DEFECT
/* the text was: {frozen = true} */	WITHOUT_CLASSIFICATION	0.9998598932782307	WITHOUT_CLASSIFICATION	1.4010672176941534E-4	DEFECT
// Copy returned parameters because it will be a live collection for MDR	WITHOUT_CLASSIFICATION	0.9999877571355793	WITHOUT_CLASSIFICATION	1.2242864420552945E-5	DEFECT
// Should we be getting this from the GUI? BT 11 aug 2002	WITHOUT_CLASSIFICATION	0.9949294524825816	WITHOUT_CLASSIFICATION	0.005070547517418374	DEFECT
// no type defined yet	WITHOUT_CLASSIFICATION	0.9999757656716547	WITHOUT_CLASSIFICATION	2.423432834527439E-5	DEFECT
/* If the current property occurs a second time             * in the given list of properties, then skip it: */	WITHOUT_CLASSIFICATION	0.9999997585304894	WITHOUT_CLASSIFICATION	2.414695105984149E-7	DEFECT
/* This automatically pulls in a TagDefinition from the profile: */	WITHOUT_CLASSIFICATION	0.9996832367052999	WITHOUT_CLASSIFICATION	3.167632947001492E-4	DEFECT
/* The TV existed, but maybe it was not "true": */	WITHOUT_CLASSIFICATION	0.9978117621406211	WITHOUT_CLASSIFICATION	0.0021882378593788714	DEFECT
/* TODO: For UML2: Check if the type of the TV is String. */	WITHOUT_CLASSIFICATION	0.740085253460065	DEFECT	0.259914746539935	WITHOUT_CLASSIFICATION
/* Generate all the existing internal transitions,         * so that we can compare them as text with the newly entered ones.         */	WITHOUT_CLASSIFICATION	0.9999978858506152	WITHOUT_CLASSIFICATION	2.1141493847473077E-6	DEFECT
// strip any trailing semi-colons	WITHOUT_CLASSIFICATION	0.9999992392736853	WITHOUT_CLASSIFICATION	7.607263147948111E-7	DEFECT
/* This would be solution (1):                  * Model.getExtensionMechanismsHelper().setDataValues(                 *      taggedValue, new String[] {"false"});                 */	WITHOUT_CLASSIFICATION	0.9999934097245715	WITHOUT_CLASSIFICATION	6.590275428536693E-6	DEFECT
/* There are 2 possibilities: either (1) we follow the traditional notation                  * philosophy, and set the tagged value to false, or (2) we restore to                  * the pristine situation and delete the taggedValue (whatever the                  * value was). I chose the latter (mvw).*/	WITHOUT_CLASSIFICATION	0.999999938344743	WITHOUT_CLASSIFICATION	6.165525696876772E-8	DEFECT
// Allow concatenation order and separator to be localized	WITHOUT_CLASSIFICATION	0.9999999575182111	WITHOUT_CLASSIFICATION	4.248178883336908E-8	DEFECT
/*Parameter etc.*/	WITHOUT_CLASSIFICATION	0.9999877499594252	WITHOUT_CLASSIFICATION	1.2250040574792893E-5	DEFECT
/* "in" is the default */	WITHOUT_CLASSIFICATION	0.9999904016062889	WITHOUT_CLASSIFICATION	9.598393711004769E-6	DEFECT
/*"in"*/	WITHOUT_CLASSIFICATION	0.9997751709085082	WITHOUT_CLASSIFICATION	2.2482909149168617E-4	DEFECT
// return nothing	WITHOUT_CLASSIFICATION	0.9999986274344417	WITHOUT_CLASSIFICATION	1.3725655582438472E-6	DEFECT
// it can still be null if the UML element  // did not have a multiplicity defined.	WITHOUT_CLASSIFICATION	0.9999760134659559	WITHOUT_CLASSIFICATION	2.398653404413038E-5	DEFECT
/* Let's not be picky about the brackets - just remove them: */	WITHOUT_CLASSIFICATION	0.9998461456492818	WITHOUT_CLASSIFICATION	1.5385435071819966E-4	DEFECT
// get the // classifier	WITHOUT_CLASSIFICATION	0.9999988751875925	WITHOUT_CLASSIFICATION	1.1248124075036733E-6	DEFECT
// the State of a ClassifierInState is removed, // so let's reduce it to a Classifier.	WITHOUT_CLASSIFICATION	0.9999999821812872	WITHOUT_CLASSIFICATION	1.781871287558145E-8	DEFECT
// the model is changed - job done	WITHOUT_CLASSIFICATION	0.9999986183150558	WITHOUT_CLASSIFICATION	1.3816849442098326E-6	DEFECT
// Strings	WITHOUT_CLASSIFICATION	0.999996020764157	WITHOUT_CLASSIFICATION	3.979235843108839E-6	DEFECT
/* Remove the states that did not match. */	WITHOUT_CLASSIFICATION	0.9999784444340641	WITHOUT_CLASSIFICATION	2.1555565935807975E-5	DEFECT
/*                     * Now we have to see if any state in any statemachine of                     * classifier is named [name]. If so, then we only have to                     * link the state to c.                     */	WITHOUT_CLASSIFICATION	0.999999624027362	WITHOUT_CLASSIFICATION	3.759726379810373E-7	DEFECT
// the model is changed - our job is done	WITHOUT_CLASSIFICATION	0.999999460185873	WITHOUT_CLASSIFICATION	5.398141269084086E-7	DEFECT
// the model is changed - our job is done	WITHOUT_CLASSIFICATION	0.999999460185873	WITHOUT_CLASSIFICATION	5.398141269084086E-7	DEFECT
// no state named s is found, so we have to // reject the user's input	WITHOUT_CLASSIFICATION	0.999999979945971	WITHOUT_CLASSIFICATION	2.0054028969896838E-8	DEFECT
/* Finally, do the adaptations: */	WITHOUT_CLASSIFICATION	0.9995913098488941	WITHOUT_CLASSIFICATION	4.086901511059445E-4	DEFECT
// then c is a "normal" Classifier // UML states	WITHOUT_CLASSIFICATION	0.9999973865066538	WITHOUT_CLASSIFICATION	2.6134933461131067E-6	DEFECT
// let's create a new ClassifierInState with the correct links	WITHOUT_CLASSIFICATION	0.9999689018213561	WITHOUT_CLASSIFICATION	3.109817864395408E-5	DEFECT
/* This updates the diagram - hence as last statement: */	WITHOUT_CLASSIFICATION	0.9999415623294027	WITHOUT_CLASSIFICATION	5.843767059737475E-5	DEFECT
// case 2	WITHOUT_CLASSIFICATION	0.9999955593274086	WITHOUT_CLASSIFICATION	4.440672591463185E-6	DEFECT
// case 3	WITHOUT_CLASSIFICATION	0.9999945326392242	WITHOUT_CLASSIFICATION	5.467360775865778E-6	DEFECT
/*         * We can distinguish between 4 cases:         * 1. A trigger is given. None exists yet.         * 2. The trigger was present, and it is the same type,         * or a different type, and its text is changed, or the same.         * 3. A trigger is not given. None exists yet.         * 4. The name of the trigger was present, but is removed.         * The reaction in these cases should be:         * 1. Find the referred trigger (issue 5988) or create a new one, and hook it to the transition.         * 2. Rename the trigger.         * 3. Nop.         * 4. Unhook and erase the existing trigger.         */	WITHOUT_CLASSIFICATION	0.9999964433347892	WITHOUT_CLASSIFICATION	3.5566652109086054E-6	DEFECT
// if no classifier has been set, then entering a state is // not useful, so the user's input has to be rejected.	WITHOUT_CLASSIFICATION	0.999999995779171	WITHOUT_CLASSIFICATION	4.2208289590660015E-9	DEFECT
/* TODO: If the next line trows an exception, then what                     * do we do with the remainder of the                     * parsed/to be parsed lines?                     */	WITHOUT_CLASSIFICATION	0.8591395387730364	WITHOUT_CLASSIFICATION	0.14086046122696363	DEFECT
/* Add this new one, and mark it to be retained: */	WITHOUT_CLASSIFICATION	0.9998412844244665	WITHOUT_CLASSIFICATION	1.5871557553338942E-4	DEFECT
/* Process the final list of internal transitions,         * and hook it to the state:         */	WITHOUT_CLASSIFICATION	0.9999986802582402	WITHOUT_CLASSIFICATION	1.319741759862224E-6	DEFECT
// don't forget to remove old internals!	WITHOUT_CLASSIFICATION	0.9999949348773681	WITHOUT_CLASSIFICATION	5.065122631860544E-6	DEFECT
// Make next accesses to this instance predictable:	WITHOUT_CLASSIFICATION	0.9999763235299453	WITHOUT_CLASSIFICATION	2.367647005479106E-5	DEFECT
// and hook in the new ones:	WITHOUT_CLASSIFICATION	0.99997761628065	WITHOUT_CLASSIFICATION	2.238371935007322E-5	DEFECT
// the ActionExpression	WITHOUT_CLASSIFICATION	0.999996677903973	WITHOUT_CLASSIFICATION	3.3220960271105683E-6	DEFECT
// let's look for a TimeEvent, ChangeEvent, CallEvent or SignalEvent	WITHOUT_CLASSIFICATION	0.9999998263019745	WITHOUT_CLASSIFICATION	1.7369802562241573E-7	DEFECT
// operation(paramlist)	WITHOUT_CLASSIFICATION	0.9999979610448647	WITHOUT_CLASSIFICATION	2.0389551353756704E-6	DEFECT
// the part after the || is for when there's nothing between the ()	WITHOUT_CLASSIFICATION	0.9999525440103798	WITHOUT_CLASSIFICATION	4.7455989620140635E-5	DEFECT
/* It is safe to give a null to the next function,         * since a statemachine is always composed by a model anyhow. */	WITHOUT_CLASSIFICATION	0.999985518350086	WITHOUT_CLASSIFICATION	1.4481649913968014E-5	DEFECT
// else the empty s will do	WITHOUT_CLASSIFICATION	0.9999884353422701	WITHOUT_CLASSIFICATION	1.156465772989112E-5	DEFECT
// case 1 and 2	WITHOUT_CLASSIFICATION	0.9999972126972236	WITHOUT_CLASSIFICATION	2.7873027763072158E-6	DEFECT
/*language*/	WITHOUT_CLASSIFICATION	0.9999729193895861	WITHOUT_CLASSIFICATION	2.70806104139271E-5	DEFECT
/* Do not set the name. */	WITHOUT_CLASSIFICATION	0.999913700883159	WITHOUT_CLASSIFICATION	8.629911684094821E-5	DEFECT
/* Do not set the name. */	WITHOUT_CLASSIFICATION	0.999913700883159	WITHOUT_CLASSIFICATION	8.629911684094821E-5	DEFECT
/* This case is a bit different, because of the parameters.                      * If the event already exists, the parameters are ignored. */	WITHOUT_CLASSIFICATION	0.9999993975623427	WITHOUT_CLASSIFICATION	6.024376573662942E-7	DEFECT
// when(...)	WITHOUT_CLASSIFICATION	0.999997649770464	WITHOUT_CLASSIFICATION	2.350229535988448E-6	DEFECT
// signalname	WITHOUT_CLASSIFICATION	0.9999993864749486	WITHOUT_CLASSIFICATION	6.135250514400536E-7	DEFECT
// and parse the parameter list	WITHOUT_CLASSIFICATION	0.999999228258054	WITHOUT_CLASSIFICATION	7.717419459168597E-7	DEFECT
/* And hook it to the transition immediately,                 * so that an exception can not cause it to remain dangling: */	WITHOUT_CLASSIFICATION	0.9995224664844222	WITHOUT_CLASSIFICATION	4.7753351557774926E-4	DEFECT
/* Do nothing. */	WITHOUT_CLASSIFICATION	0.9999762593166146	WITHOUT_CLASSIFICATION	2.3740683385349116E-5	DEFECT
// yes, there are more:	WITHOUT_CLASSIFICATION	0.9999699500915161	WITHOUT_CLASSIFICATION	3.004990848386166E-5	DEFECT
// strip any trailing semi-colons	WITHOUT_CLASSIFICATION	0.9999992392736853	WITHOUT_CLASSIFICATION	7.607263147948111E-7	DEFECT
/*Parameter etc.*/	WITHOUT_CLASSIFICATION	0.9999877499594252	WITHOUT_CLASSIFICATION	1.2250040574792893E-5	DEFECT
/* "in" is the default */	WITHOUT_CLASSIFICATION	0.9999904016062889	WITHOUT_CLASSIFICATION	9.598393711004769E-6	DEFECT
/*"in"*/	WITHOUT_CLASSIFICATION	0.9997751709085082	WITHOUT_CLASSIFICATION	2.2482909149168617E-4	DEFECT
// return nothing	WITHOUT_CLASSIFICATION	0.9999986274344417	WITHOUT_CLASSIFICATION	1.3725655582438472E-6	DEFECT
// and parse the parameter list	WITHOUT_CLASSIFICATION	0.999999228258054	WITHOUT_CLASSIFICATION	7.717419459168597E-7	DEFECT
// case 2	WITHOUT_CLASSIFICATION	0.9999955593274086	WITHOUT_CLASSIFICATION	4.440672591463185E-6	DEFECT
/* Just change the time expression */	WITHOUT_CLASSIFICATION	0.9999979869500095	WITHOUT_CLASSIFICATION	2.013049990498211E-6	DEFECT
// we have an event without expression	WITHOUT_CLASSIFICATION	0.9999997366766035	WITHOUT_CLASSIFICATION	2.633233966046078E-7	DEFECT
/* It's a time-event now,                         * but was of another type before! */	WITHOUT_CLASSIFICATION	0.9999938066130089	WITHOUT_CLASSIFICATION	6.193386991068656E-6	DEFECT
/* Just change the ChangeExpression */	WITHOUT_CLASSIFICATION	0.9999985302836882	WITHOUT_CLASSIFICATION	1.469716311659683E-6	DEFECT
/* Create a new expression: */	WITHOUT_CLASSIFICATION	0.9999543820137168	WITHOUT_CLASSIFICATION	4.561798628319331E-5	DEFECT
/* The parsed text describes a change-event,                         * but the model contains another type! */	WITHOUT_CLASSIFICATION	0.9999620382019426	WITHOUT_CLASSIFICATION	3.7961798057357345E-5	DEFECT
/* Just change the Name and linked operation */	WITHOUT_CLASSIFICATION	0.9999979089545952	WITHOUT_CLASSIFICATION	2.0910454048391644E-6	DEFECT
/* TODO: Change the linked operation. */	WITHOUT_CLASSIFICATION	0.8908248346136501	WITHOUT_CLASSIFICATION	0.10917516538634994	DEFECT
/* Just change the Name and linked signal */	WITHOUT_CLASSIFICATION	0.9999992730022673	WITHOUT_CLASSIFICATION	7.269977326427705E-7	DEFECT
// case 3 and 4	WITHOUT_CLASSIFICATION	0.9999971319307682	WITHOUT_CLASSIFICATION	2.868069231816635E-6	DEFECT
/* case 3 */	WITHOUT_CLASSIFICATION	0.9999884209895571	WITHOUT_CLASSIFICATION	1.1579010442926231E-5	DEFECT
/* case 3 */	WITHOUT_CLASSIFICATION	0.9999884209895571	WITHOUT_CLASSIFICATION	1.1579010442926231E-5	DEFECT
// case 4 // erase it	WITHOUT_CLASSIFICATION	0.9999953612062292	WITHOUT_CLASSIFICATION	4.63879377079805E-6	DEFECT
// case 4 // erase it	WITHOUT_CLASSIFICATION	0.9999953612062292	WITHOUT_CLASSIFICATION	4.63879377079805E-6	DEFECT
/* Do not check if the parameters match. */	WITHOUT_CLASSIFICATION	0.9999946891667356	WITHOUT_CLASSIFICATION	5.310833264317569E-6	DEFECT
// case 1	WITHOUT_CLASSIFICATION	0.9999949789778233	WITHOUT_CLASSIFICATION	5.021022176743016E-6	DEFECT
// NSUML does this (?) // Model.getFacade().setGuard(trans, g);	WITHOUT_CLASSIFICATION	0.999976210861693	WITHOUT_CLASSIFICATION	2.3789138306978465E-5	DEFECT
/* No text. We may remove the literal. */	WITHOUT_CLASSIFICATION	0.9999768448556051	WITHOUT_CLASSIFICATION	2.3155144394843492E-5	DEFECT
/* No non-white chars in text? remove literal! */	WITHOUT_CLASSIFICATION	0.9999351899185105	WITHOUT_CLASSIFICATION	6.48100814895772E-5	DEFECT
/* Heuristic algorithm: do not show stereotypes if there is no name. */	WITHOUT_CLASSIFICATION	0.9997454459321682	WITHOUT_CLASSIFICATION	2.5455406783186414E-4	DEFECT
/*     * @see javax.swing.JComponent#setVisible(boolean)     */	WITHOUT_CLASSIFICATION	0.9999999628748599	WITHOUT_CLASSIFICATION	3.7125140136217365E-8	DEFECT
// strip any trailing semi-colons	WITHOUT_CLASSIFICATION	0.9999992392736853	WITHOUT_CLASSIFICATION	7.607263147948111E-7	DEFECT
// construct bases string (comma separated)	WITHOUT_CLASSIFICATION	0.9999973674963797	WITHOUT_CLASSIFICATION	2.6325036202008864E-6	DEFECT
/* Great! The class already existed - just use it. */	WITHOUT_CLASSIFICATION	0.9999999215070816	WITHOUT_CLASSIFICATION	7.84929184435987E-8	DEFECT
/* If no base was typed, then only set the name: */	WITHOUT_CLASSIFICATION	0.9999487740739175	WITHOUT_CLASSIFICATION	5.12259260825962E-5	DEFECT
/* Only set the name if the base was found: */	WITHOUT_CLASSIFICATION	0.9999244321352782	WITHOUT_CLASSIFICATION	7.556786472185371E-5	DEFECT
/* If the base was not changed, then only set the name: */	WITHOUT_CLASSIFICATION	0.9999887669706716	WITHOUT_CLASSIFICATION	1.1233029328304106E-5	DEFECT
//get the associationRole name	WITHOUT_CLASSIFICATION	0.9999794749968335	WITHOUT_CLASSIFICATION	2.05250031666013E-5	DEFECT
/* Let's create a class with the given name, otherwise         * the user will not understand why we refuse his input! */	WITHOUT_CLASSIFICATION	0.9999754830398981	WITHOUT_CLASSIFICATION	2.451696010188883E-5	DEFECT
// Only instantiate when we need it.	WITHOUT_CLASSIFICATION	0.9999992877975791	WITHOUT_CLASSIFICATION	7.122024208442153E-7	DEFECT
/* If the base is already set to this assoc,                      * then do not set it again.                     * This check is needed, otherwise the setbase()                     *  below gives an exception.*/	WITHOUT_CLASSIFICATION	0.9999999242352035	WITHOUT_CLASSIFICATION	7.576479655995673E-8	DEFECT
// 2002-07-31 // Jaap Branderhorst // from here made visibility etc. configurable	WITHOUT_CLASSIFICATION	0.9999864402195209	WITHOUT_CLASSIFICATION	1.3559780479039784E-5	DEFECT
//get the base association name	WITHOUT_CLASSIFICATION	0.999987781206639	WITHOUT_CLASSIFICATION	1.2218793360975535E-5	DEFECT
// no instantiations	WITHOUT_CLASSIFICATION	0.9999995275537085	WITHOUT_CLASSIFICATION	4.7244629153473626E-7	DEFECT
/*             * The next one defaults to TRUE, to stay compatible with older             * ArgoUML versions that did not have this setting:             */	WITHOUT_CLASSIFICATION	0.9999857338861604	WITHOUT_CLASSIFICATION	1.4266113839503247E-5	DEFECT
// end of OCLEvaluator	WITHOUT_CLASSIFICATION	0.9999997701453042	WITHOUT_CLASSIFICATION	2.2985469575986658E-7	DEFECT
// look for associations	WITHOUT_CLASSIFICATION	0.9999845717112575	WITHOUT_CLASSIFICATION	1.5428288742503796E-5	DEFECT
// look for associations	WITHOUT_CLASSIFICATION	0.9999845717112575	WITHOUT_CLASSIFICATION	1.5428288742503796E-5	DEFECT
//MAssociationEnd	WITHOUT_CLASSIFICATION	0.9999734307270208	WITHOUT_CLASSIFICATION	2.656927297921401E-5	DEFECT
//MParameter	WITHOUT_CLASSIFICATION	0.9999939286351579	WITHOUT_CLASSIFICATION	6.0713648421893756E-6	DEFECT
//MAssociationEnd	WITHOUT_CLASSIFICATION	0.9999734307270208	WITHOUT_CLASSIFICATION	2.656927297921401E-5	DEFECT
// The ocl toolkit does not like void return types	WITHOUT_CLASSIFICATION	0.9999775565984211	WITHOUT_CLASSIFICATION	2.2443401578868827E-5	DEFECT
// MClassifiers // cannot be Bag	WITHOUT_CLASSIFICATION	0.9999841717829024	WITHOUT_CLASSIFICATION	1.5828217097610544E-5	DEFECT
//MClassifier	WITHOUT_CLASSIFICATION	0.9999964927549424	WITHOUT_CLASSIFICATION	3.507245057744654E-6	DEFECT
// first search for appropriate attributes	WITHOUT_CLASSIFICATION	0.9999999308935624	WITHOUT_CLASSIFICATION	6.910643753256083E-8	DEFECT
// first search for appropriate attributes	WITHOUT_CLASSIFICATION	0.9999999308935624	WITHOUT_CLASSIFICATION	6.910643753256083E-8	DEFECT
//MClassifier	WITHOUT_CLASSIFICATION	0.9999964927549424	WITHOUT_CLASSIFICATION	3.507245057744654E-6	DEFECT
//MOperation	WITHOUT_CLASSIFICATION	0.9999788505338962	WITHOUT_CLASSIFICATION	2.1149466103724014E-5	DEFECT
//MOperation	WITHOUT_CLASSIFICATION	0.9999788505338962	WITHOUT_CLASSIFICATION	2.1149466103724014E-5	DEFECT
// ... and not incompletely imported	WITHOUT_CLASSIFICATION	0.9999792196017714	WITHOUT_CLASSIFICATION	2.0780398228591417E-5	DEFECT
/* Query checking added 05/21/01, sz9 */	WITHOUT_CLASSIFICATION	0.9999907214260072	WITHOUT_CLASSIFICATION	9.278573992760469E-6	DEFECT
/* Query checking added 05/21/01, sz9 */	WITHOUT_CLASSIFICATION	0.9999907214260072	WITHOUT_CLASSIFICATION	9.278573992760469E-6	DEFECT
/* end class OCLExpander */	WITHOUT_CLASSIFICATION	0.9998799274439314	WITHOUT_CLASSIFICATION	1.2007255606860655E-4	DEFECT
// skip first parameter == return type	WITHOUT_CLASSIFICATION	0.999999951886374	WITHOUT_CLASSIFICATION	4.811362602332511E-8	DEFECT
// skip first parameter == return type	WITHOUT_CLASSIFICATION	0.999999951886374	WITHOUT_CLASSIFICATION	4.811362602332511E-8	DEFECT
// Only look at classes...	WITHOUT_CLASSIFICATION	0.9999467327081191	WITHOUT_CLASSIFICATION	5.32672918808744E-5	DEFECT
// abstract classes are hardly ever singletons	WITHOUT_CLASSIFICATION	0.9999995499065699	WITHOUT_CLASSIFICATION	4.5009343016782283E-7	DEFECT
// and not association classes	WITHOUT_CLASSIFICATION	0.9999034732385143	WITHOUT_CLASSIFICATION	9.652676148574621E-5	DEFECT
// with a name...	WITHOUT_CLASSIFICATION	0.9999869240175079	WITHOUT_CLASSIFICATION	1.3075982492111256E-5	DEFECT
// If there is an attribute which is not static => no problem	WITHOUT_CLASSIFICATION	0.9999948564634312	WITHOUT_CLASSIFICATION	5.143536568707034E-6	DEFECT
// If there is an outgoing association => no problem	WITHOUT_CLASSIFICATION	0.9999933734926544	WITHOUT_CLASSIFICATION	6.626507345531941E-6	DEFECT
/* do nothing */	WITHOUT_CLASSIFICATION	0.9999729298088619	WITHOUT_CLASSIFICATION	2.7070191138062365E-5	DEFECT
/* do nothing */	WITHOUT_CLASSIFICATION	0.9999729298088619	WITHOUT_CLASSIFICATION	2.7070191138062365E-5	DEFECT
/* do nothing */	WITHOUT_CLASSIFICATION	0.9999729298088619	WITHOUT_CLASSIFICATION	2.7070191138062365E-5	DEFECT
// Only look at classes	WITHOUT_CLASSIFICATION	0.9999799236884684	WITHOUT_CLASSIFICATION	2.0076311531578843E-5	DEFECT
// Only look at classes	WITHOUT_CLASSIFICATION	0.9999799236884684	WITHOUT_CLASSIFICATION	2.0076311531578843E-5	DEFECT
// Check for Singleton stereotype, uninitialised instance variables and // outgoing associations, as per JavaDoc above.	WITHOUT_CLASSIFICATION	0.9999987001085298	WITHOUT_CLASSIFICATION	1.299891470259552E-6	DEFECT
// Found no such attribute	WITHOUT_CLASSIFICATION	0.9999998613317967	WITHOUT_CLASSIFICATION	1.3866820326192162E-7	DEFECT
// We only look at singletons	WITHOUT_CLASSIFICATION	0.9999977880224649	WITHOUT_CLASSIFICATION	2.211977535002985E-6	DEFECT
// We only look at singletons	WITHOUT_CLASSIFICATION	0.9999977880224649	WITHOUT_CLASSIFICATION	2.211977535002985E-6	DEFECT
/* end class CrSingletonViolatedOnlyPrivateConstructors */	WITHOUT_CLASSIFICATION	0.9999973871866549	WITHOUT_CLASSIFICATION	2.6128133450963197E-6	DEFECT
// NOTE: For historical reasons true == hide, so we need to invert // the sense of this	WITHOUT_CLASSIFICATION	0.999999858807629	WITHOUT_CLASSIFICATION	1.4119237104213664E-7	DEFECT
/* end class CrEmptyPackage */	WITHOUT_CLASSIFICATION	0.9999460545212862	WITHOUT_CLASSIFICATION	5.394547871389224E-5	DEFECT
/* At this stage during loading, the diagrams are         * not created yet - so we have to store this name for later use. */	WITHOUT_CLASSIFICATION	0.9999983747482487	WITHOUT_CLASSIFICATION	1.6252517512947975E-6	DEFECT
//            pw.close();	WITHOUT_CLASSIFICATION	0.9999997024258096	WITHOUT_CLASSIFICATION	2.9757419046580204E-7	DEFECT
/* Retain the previous project file even when the save operation         * crashes in the middle. Also create a backup file after saving. */	WITHOUT_CLASSIFICATION	0.9999995768569246	WITHOUT_CLASSIFICATION	4.231430754281474E-7	DEFECT
//project.setFile(file);	WITHOUT_CLASSIFICATION	0.9999898324297269	WITHOUT_CLASSIFICATION	1.0167570272961551E-5	DEFECT
// for AndroMDA profiles	WITHOUT_CLASSIFICATION	0.9999991748996736	WITHOUT_CLASSIFICATION	8.251003264635136E-7	DEFECT
/* Retain the previous project file even when the save operation         * crashes in the middle. Also create a backup file after saving. */	WITHOUT_CLASSIFICATION	0.9999995768569246	WITHOUT_CLASSIFICATION	4.231430754281474E-7	DEFECT
// Give the parser a map of model elements // keyed by their UUID. This is used to allocate // figs to their owner using the "href" attribute // in PGML.	WITHOUT_CLASSIFICATION	0.9999999675905568	WITHOUT_CLASSIFICATION	3.2409443171897444E-8	DEFECT
// if save did not raise an exception // and name+"#" exists move name+"#" to name+"~" // this is the correct backup file	WITHOUT_CLASSIFICATION	0.9993330940406863	WITHOUT_CLASSIFICATION	6.669059593138234E-4	DEFECT
// If we get a 2nd error, just ignore it	WITHOUT_CLASSIFICATION	0.9999999620063363	WITHOUT_CLASSIFICATION	3.799366379542922E-8	DEFECT
// frank: in case of exception // delete name and mv name+"#" back to name if name+"#" exists // this is the "rollback" to old file	WITHOUT_CLASSIFICATION	0.9999412561463764	WITHOUT_CLASSIFICATION	5.874385362371969E-5	DEFECT
// we have to give a message to user and set the system to unsaved!	WITHOUT_CLASSIFICATION	0.9999997336036812	WITHOUT_CLASSIFICATION	2.663963187748223E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999959030536316	WITHOUT_CLASSIFICATION	4.096946368362294E-6	DEFECT
// Should never happen - something's really wrong	WITHOUT_CLASSIFICATION	0.9999881806401	WITHOUT_CLASSIFICATION	1.181935989996485E-5	DEFECT
//////////////////////////////////////////////////////////////// // main parsing methods	WITHOUT_CLASSIFICATION	0.9999989297403863	WITHOUT_CLASSIFICATION	1.070259613739755E-6	DEFECT
/*         * @see java.io.InputStream#close()         */	WITHOUT_CLASSIFICATION	0.9999998095459236	WITHOUT_CLASSIFICATION	1.9045407634895373E-7	DEFECT
/*     * @see java.io.InputStream#read()     */	WITHOUT_CLASSIFICATION	0.9999994498751743	WITHOUT_CLASSIFICATION	5.501248257485678E-7	DEFECT
/*     * @see java.io.InputStream#read(byte[], int, int)     */	WITHOUT_CLASSIFICATION	0.9999996700545367	WITHOUT_CLASSIFICATION	3.2994546331974283E-7	DEFECT
// if save did not raise an exception // and name+"#" exists move name+"#" to name+"~" // this is the correct backup file	WITHOUT_CLASSIFICATION	0.9993330940406863	WITHOUT_CLASSIFICATION	6.669059593138234E-4	DEFECT
// frank: in case of exception // delete name and mv name+"#" back to name if name+"#" exists // this is the "rollback" to old file	WITHOUT_CLASSIFICATION	0.9999412561463764	WITHOUT_CLASSIFICATION	5.874385362371969E-5	DEFECT
// we have to give a message to user and set the system to unsaved!	WITHOUT_CLASSIFICATION	0.9999997336036812	WITHOUT_CLASSIFICATION	2.663963187748223E-7	DEFECT
//boolean upgradeRequired = !checkVersion(fileVersion, releaseVersion)	WITHOUT_CLASSIFICATION	0.9999999951419732	WITHOUT_CLASSIFICATION	4.8580268159282005E-9	DEFECT
// Upgrade is in the way for UML2 projects, so we turn it off in that case:	WITHOUT_CLASSIFICATION	0.9999995309847195	WITHOUT_CLASSIFICATION	4.6901528052346353E-7	DEFECT
// Load .argo project descriptor	WITHOUT_CLASSIFICATION	0.999999977744017	WITHOUT_CLASSIFICATION	2.225598292721037E-8	DEFECT
// Load the rest	WITHOUT_CLASSIFICATION	0.9999994769641417	WITHOUT_CLASSIFICATION	5.230358583506049E-7	DEFECT
// Copy the todo items after the model and diagrams so that // any model elements or figs that the todo items refer to // will exist before creating critics.	WITHOUT_CLASSIFICATION	0.9999999768698759	WITHOUT_CLASSIFICATION	2.313012424007885E-8	DEFECT
// first read the .argo file from Zip	WITHOUT_CLASSIFICATION	0.9999999935620585	WITHOUT_CLASSIFICATION	6.437941484108965E-9	DEFECT
// Keep reading till we hit the <argo> tag	WITHOUT_CLASSIFICATION	0.9999973282557497	WITHOUT_CLASSIFICATION	2.6717442503935815E-6	DEFECT
// Get the version from the tag.	WITHOUT_CLASSIFICATION	0.9999998161695531	WITHOUT_CLASSIFICATION	1.838304469417514E-7	DEFECT
// Skip 1 lines	WITHOUT_CLASSIFICATION	0.9999987119622729	WITHOUT_CLASSIFICATION	1.2880377271809664E-6	DEFECT
// Loop round loading the diagrams	WITHOUT_CLASSIFICATION	0.9999998882041212	WITHOUT_CLASSIFICATION	1.1179587876173703E-7	DEFECT
//private EventListenerList listenerList = new EventListenerList();	WITHOUT_CLASSIFICATION	0.9999968936666644	WITHOUT_CLASSIFICATION	3.106333335563178E-6	DEFECT
// Skip the 2 lines //<?xml version="1.0" encoding="UTF-8" ?> //<!DOCTYPE todo SYSTEM "todo.dtd" >	WITHOUT_CLASSIFICATION	0.9999975285617447	WITHOUT_CLASSIFICATION	2.471438255317316E-6	DEFECT
// Keep reading till we get the left bracket of an opening tag	WITHOUT_CLASSIFICATION	0.9999997808293957	WITHOUT_CLASSIFICATION	2.1917060426873985E-7	DEFECT
// Compare each following character to see // that it matches the tag we want	WITHOUT_CLASSIFICATION	0.9999999807627181	WITHOUT_CLASSIFICATION	1.9237281891374813E-8	DEFECT
// We also want to match with the right bracket of the tag or // some other terminator	WITHOUT_CLASSIFICATION	0.999999999375611	WITHOUT_CLASSIFICATION	6.243890114331889E-10	DEFECT
// We've found the matching tag but do we have // the correct instance with matching attributes?	WITHOUT_CLASSIFICATION	0.9999126784718638	WITHOUT_CLASSIFICATION	8.73215281360966E-5	DEFECT
// Read the name of the child tag // and then reset read position // back to that child tag.	WITHOUT_CLASSIFICATION	0.9999999496742279	WITHOUT_CLASSIFICATION	5.032577195646656E-8	DEFECT
// Skip any whitespace till we should be on an equals sign.	WITHOUT_CLASSIFICATION	0.9999217750395168	WITHOUT_CLASSIFICATION	7.82249604831845E-5	DEFECT
// Skip any whitespace till we should be on a quote symbol.	WITHOUT_CLASSIFICATION	0.9999512924372501	WITHOUT_CLASSIFICATION	4.870756274980234E-5	DEFECT
// No other uses of string in PGMLHandler	WITHOUT_CLASSIFICATION	0.9999998607621597	WITHOUT_CLASSIFICATION	1.39237840251041E-7	DEFECT
// Handle other uses of <private> contents	WITHOUT_CLASSIFICATION	0.9999999861725497	WITHOUT_CLASSIFICATION	1.3827450346118443E-8	DEFECT
// Sanity check - the returned path item placement // strategy should match the one in the UML. // If it doesn't, it could be that the UML was // created with an older argo version, and the new // argo version use a different placement strategy. // If they don't match, just use the default.	WITHOUT_CLASSIFICATION	0.9999998426623296	WITHOUT_CLASSIFICATION	1.5733767033800391E-7	DEFECT
// If any of the values are null, ignore the element.	WITHOUT_CLASSIFICATION	0.9999978050988054	WITHOUT_CLASSIFICATION	2.194901194455631E-6	DEFECT
// If the PathItemPlacement was unknown, leave the // diagram with the default settings.	WITHOUT_CLASSIFICATION	0.9999989470221108	WITHOUT_CLASSIFICATION	1.0529778891419598E-6	DEFECT
// For a match to be found, it has to have the same // owner, and the same long class name.	WITHOUT_CLASSIFICATION	0.999999192816261	WITHOUT_CLASSIFICATION	8.071837389665714E-7	DEFECT
///** // * A list of the path item attributes for this container. // * The list is populated during parsing, them processed at endElement() // */ //private List<Hashtable<String, String>> pathItemAttrs = //    new ArrayList<Hashtable<String, String>>();	WITHOUT_CLASSIFICATION	0.9999999391705657	WITHOUT_CLASSIFICATION	6.08294342265844E-8	DEFECT
// This code has to go within the startElement block after the strings // have been matched.	WITHOUT_CLASSIFICATION	0.9999995653614546	WITHOUT_CLASSIFICATION	4.346385453706242E-7	DEFECT
//// Method 1: //// (collect data and assign later in endElement() method). //Hashtable<String, String> ht = //    new Hashtable<String, String>(); //ht.put("classname", classname); //ht.put("figclassname", figclassname); //ht.put("ownerhref", ownerhref); //ht.put("angle", angle); //ht.put("offset", offset); //pathItemAttrs.add(ht);	WITHOUT_CLASSIFICATION	0.9998687747230375	WITHOUT_CLASSIFICATION	1.312252769624159E-4	DEFECT
// Create a new diagram wide settings block which is backed by // the project-wide defaults that we were passed	WITHOUT_CLASSIFICATION	0.9999998387296648	WITHOUT_CLASSIFICATION	1.6127033518430888E-7	DEFECT
// Ignore non-private elements within FigNode groups	WITHOUT_CLASSIFICATION	0.9999989378192276	WITHOUT_CLASSIFICATION	1.0621807724701483E-6	DEFECT
// Handle ItemUID in container contents	WITHOUT_CLASSIFICATION	0.9999993652240469	WITHOUT_CLASSIFICATION	6.347759530868708E-7	DEFECT
// Discard class name, x y w h	WITHOUT_CLASSIFICATION	0.9999748566980254	WITHOUT_CLASSIFICATION	2.514330197457161E-5	DEFECT
// The owner should always have already been set in the constructor	WITHOUT_CLASSIFICATION	0.9999997282960187	WITHOUT_CLASSIFICATION	2.7170398131553573E-7	DEFECT
// happens when 'is' comes from a zip file	WITHOUT_CLASSIFICATION	0.9999967988833781	WITHOUT_CLASSIFICATION	3.201116621835896E-6	DEFECT
// continue with null stream, readDiagram(...) will take care of // it	WITHOUT_CLASSIFICATION	0.9999969287774222	WITHOUT_CLASSIFICATION	3.0712225778440243E-6	DEFECT
// TODO: Localize these	WITHOUT_CLASSIFICATION	0.6996377136560044	WITHOUT_CLASSIFICATION	0.3003622863439956	DEFECT
// If the id does not look like a top-level Fig then we can assume // that this is an id of a FigEdgePort inside some FigEdge. // So extract the FigEdgePort from the FigEdge and return that as // the FigNode.	WITHOUT_CLASSIFICATION	0.9999537293129781	WITHOUT_CLASSIFICATION	4.627068702197149E-5	DEFECT
// If there is no dot then this must be a top level Fig and can be // assumed to be a FigNode.	WITHOUT_CLASSIFICATION	0.9999996957881236	WITHOUT_CLASSIFICATION	3.0421187639497657E-7	DEFECT
// We are looking first to match with 3 different constructor // types. We would not expect a Fig to have any mix of these. // Any constructor other than these should be deprecated so we // look for these first. // Fig(DiagramEdgeSettings, DiagramSettings) // Fig(Object, Rectangle, DiagramSettings) // Fig(Rectangle, DiagramSettings)	WITHOUT_CLASSIFICATION	0.9999999362647118	WITHOUT_CLASSIFICATION	6.373528813402637E-8	DEFECT
// FigNodeModelElements should match here	WITHOUT_CLASSIFICATION	0.9999597421380593	WITHOUT_CLASSIFICATION	4.025786194076834E-5	DEFECT
// FigEdgeModelElements should match here (they have no // bounds)	WITHOUT_CLASSIFICATION	0.9999809111631809	WITHOUT_CLASSIFICATION	1.9088836819171802E-5	DEFECT
/* Retain the previous project file even when the save operation         * crashes in the middle. Also create a backup file after saving. */	WITHOUT_CLASSIFICATION	0.9999995768569246	WITHOUT_CLASSIFICATION	4.231430754281474E-7	DEFECT
// frank: in case of exception // delete name and mv name+"#" back to name if name+"#" exists // this is the "rollback" to old file	WITHOUT_CLASSIFICATION	0.9999412561463764	WITHOUT_CLASSIFICATION	5.874385362371969E-5	DEFECT
// Fall back to GEF's handling if we couldn't find an appropriate // constructor	WITHOUT_CLASSIFICATION	0.9998072286602171	WITHOUT_CLASSIFICATION	1.927713397829164E-4	DEFECT
//myWriter,	WITHOUT_CLASSIFICATION	0.9999790834406593	WITHOUT_CLASSIFICATION	2.091655934068996E-5	DEFECT
// Empty constructor	WITHOUT_CLASSIFICATION	0.9999993362574239	WITHOUT_CLASSIFICATION	6.637425761721931E-7	DEFECT
// Empty constructor	WITHOUT_CLASSIFICATION	0.9999993362574239	WITHOUT_CLASSIFICATION	6.637425761721931E-7	DEFECT
// for compatibility with older format	WITHOUT_CLASSIFICATION	0.9999974210037753	WITHOUT_CLASSIFICATION	2.578996224592815E-6	DEFECT
// <model> is not used in current implementation	WITHOUT_CLASSIFICATION	0.9999918196013085	WITHOUT_CLASSIFICATION	8.180398691600753E-6	DEFECT
// <model> is not used in current implementation	WITHOUT_CLASSIFICATION	0.9999918196013085	WITHOUT_CLASSIFICATION	8.180398691600753E-6	DEFECT
/* || model == null */	WITHOUT_CLASSIFICATION	0.9999750848035379	WITHOUT_CLASSIFICATION	2.491519646204053E-5	DEFECT
/* || model == null */	WITHOUT_CLASSIFICATION	0.9999750848035379	WITHOUT_CLASSIFICATION	2.491519646204053E-5	DEFECT
// we have to give a message to user and set the system // to unsaved!	WITHOUT_CLASSIFICATION	0.9999997449563581	WITHOUT_CLASSIFICATION	2.5504364188496447E-7	DEFECT
// Write out header section	WITHOUT_CLASSIFICATION	0.9999980574762896	WITHOUT_CLASSIFICATION	1.942523710346993E-6	DEFECT
// Note we assume members are ordered correctly already	WITHOUT_CLASSIFICATION	0.9999955876481982	WITHOUT_CLASSIFICATION	4.412351801823681E-6	DEFECT
// let's initialize the progressMgr	WITHOUT_CLASSIFICATION	0.9999991119453507	WITHOUT_CLASSIFICATION	8.880546493039011E-7	DEFECT
// Run through any stylesheet upgrades	WITHOUT_CLASSIFICATION	0.9999944536046191	WITHOUT_CLASSIFICATION	5.546395380874009E-6	DEFECT
// Don't use systemId here or it will get opened in preference // to inputStream.	WITHOUT_CLASSIFICATION	0.9999943806012058	WITHOUT_CLASSIFICATION	5.619398794236597E-6	DEFECT
// UML 2.x files could also contain a profile model. // Try again with uml:Profile as main tag.	WITHOUT_CLASSIFICATION	0.9999988980743877	WITHOUT_CLASSIFICATION	1.1019256123272373E-6	DEFECT
// let's update the progress	WITHOUT_CLASSIFICATION	0.9999997573798799	WITHOUT_CLASSIFICATION	2.426201201660138E-7	DEFECT
// If we're trying to load a file from a future version // complain and refuse.	WITHOUT_CLASSIFICATION	0.9999999980534338	WITHOUT_CLASSIFICATION	1.9465661902881616E-9	DEFECT
// Empty constructor	WITHOUT_CLASSIFICATION	0.9999993362574239	WITHOUT_CLASSIFICATION	6.637425761721931E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999978976823717	WITHOUT_CLASSIFICATION	2.1023176282337656E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999978976823717	WITHOUT_CLASSIFICATION	2.1023176282337656E-6	DEFECT
// No more we can do here on failure	WITHOUT_CLASSIFICATION	0.9999805570969147	WITHOUT_CLASSIFICATION	1.944290308531407E-5	DEFECT
// Buffer containing characters which have been decoded from the bytes // in inBB.	WITHOUT_CLASSIFICATION	0.9999998045410442	WITHOUT_CLASSIFICATION	1.954589559090108E-7	DEFECT
// RegEx pattern for XML declaration and, optionally, DOCTYPE // Backslashes are doubled up - one for Java, one for Regex	WITHOUT_CLASSIFICATION	0.9997666196946978	WITHOUT_CLASSIFICATION	2.333803053023281E-4	DEFECT
// Convert from bytes back to characters	WITHOUT_CLASSIFICATION	0.9999999817301125	WITHOUT_CLASSIFICATION	1.8269887441681063E-8	DEFECT
// rewind our character buffer	WITHOUT_CLASSIFICATION	0.9999999023867814	WITHOUT_CLASSIFICATION	9.761321853340432E-8	DEFECT
// Remove anything that matches our pattern	WITHOUT_CLASSIFICATION	0.9993984685046515	WITHOUT_CLASSIFICATION	6.01531495348453E-4	DEFECT
// Remove null characters at the end	WITHOUT_CLASSIFICATION	0.999972962511862	WITHOUT_CLASSIFICATION	2.7037488138060855E-5	DEFECT
// Reencode the remaining characters as bytes again	WITHOUT_CLASSIFICATION	0.9999998067968108	WITHOUT_CLASSIFICATION	1.9320318925860266E-7	DEFECT
// and write them to our output stream	WITHOUT_CLASSIFICATION	0.9999999698195449	WITHOUT_CLASSIFICATION	3.018045517864936E-8	DEFECT
// Skip the <?xml... first line	WITHOUT_CLASSIFICATION	0.9999971418793946	WITHOUT_CLASSIFICATION	2.8581206052913165E-6	DEFECT
//cat.debug("NOTE: TodoParser handleStartTag:" + e.getName());	WITHOUT_CLASSIFICATION	0.9999990865579755	WITHOUT_CLASSIFICATION	9.134420244182889E-7	DEFECT
// NOP	WITHOUT_CLASSIFICATION	0.9999962575377356	WITHOUT_CLASSIFICATION	3.7424622643916867E-6	DEFECT
/* This is expected to be safe, don't add a try block here */	WITHOUT_CLASSIFICATION	0.9997421402916187	WITHOUT_CLASSIFICATION	2.578597083812963E-4	DEFECT
//cat.debug("Added ToDoItem: " + _headline);	WITHOUT_CLASSIFICATION	0.9999905510943868	WITHOUT_CLASSIFICATION	9.448905613183023E-6	DEFECT
//////////////////////////////////////////////////////////////// // static variables	WITHOUT_CLASSIFICATION	0.9999998818060729	WITHOUT_CLASSIFICATION	1.1819392707333433E-7	DEFECT
/*     * @see org.xml.sax.ContentHandler#startElement(java.lang.String,     *         java.lang.String, java.lang.String, org.xml.sax.Attributes)     */	WITHOUT_CLASSIFICATION	0.9999998338730007	WITHOUT_CLASSIFICATION	1.6612699931063947E-7	DEFECT
/*     * @see org.xml.sax.ContentHandler#endElement(java.lang.String,     *         java.lang.String, java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999996806641706	WITHOUT_CLASSIFICATION	3.1933582936184274E-7	DEFECT
/*     * @see org.xml.sax.ContentHandler#characters(char[], int, int)     */	WITHOUT_CLASSIFICATION	0.9999999921713436	WITHOUT_CLASSIFICATION	7.828656456897574E-9	DEFECT
//////////////////////////////////////////////////////////////// // accessors	WITHOUT_CLASSIFICATION	0.99999900930865	WITHOUT_CLASSIFICATION	9.906913499891305E-7	DEFECT
//////////////////////////////////////////////////////////////// // constants	WITHOUT_CLASSIFICATION	0.9999985290529746	WITHOUT_CLASSIFICATION	1.4709470253565026E-6	DEFECT
/* Retain the previous project file even when the save operation         * crashes in the middle. Also create a backup file after saving. */	WITHOUT_CLASSIFICATION	0.9999995768569246	WITHOUT_CLASSIFICATION	4.231430754281474E-7	DEFECT
/* These strings match the XML element names in the argo.tee exactly. */	WITHOUT_CLASSIFICATION	0.9998020048846029	WITHOUT_CLASSIFICATION	1.9799511539719136E-4	DEFECT
// The following is deprecated, but can never be removed to preserve  // backward compatibility with old project files	WITHOUT_CLASSIFICATION	0.9999952734513368	WITHOUT_CLASSIFICATION	4.726548663229983E-6	DEFECT
//////////////////////////////////////////////////////////////// // protected methods	WITHOUT_CLASSIFICATION	0.9999978788010252	WITHOUT_CLASSIFICATION	2.121198974790733E-6	DEFECT
// empty constructor	WITHOUT_CLASSIFICATION	0.999999867550556	WITHOUT_CLASSIFICATION	1.324494439617776E-7	DEFECT
//////////////////////////////////////////////////////////////// // abstract methods	WITHOUT_CLASSIFICATION	0.9999990691086339	WITHOUT_CLASSIFICATION	9.308913661890096E-7	DEFECT
//////////////////////////////////////////////////////////////// // non-abstract methods	WITHOUT_CLASSIFICATION	0.999999660624449	WITHOUT_CLASSIFICATION	3.393755510510802E-7	DEFECT
//e.g:org.argouml.uml.generator.ui.ClassGenerationDialog -> poseidon.jar	WITHOUT_CLASSIFICATION	0.9999998904531466	WITHOUT_CLASSIFICATION	1.0954685341375281E-7	DEFECT
//////////////////////////////////////////////////////////////// // convenience methods	WITHOUT_CLASSIFICATION	0.9999949964207323	WITHOUT_CLASSIFICATION	5.0035792676867795E-6	DEFECT
/* end class SAXParserBase */	WITHOUT_CLASSIFICATION	0.9998273232180157	WITHOUT_CLASSIFICATION	1.7267678198429906E-4	DEFECT
// Stop UI interception	WITHOUT_CLASSIFICATION	0.9999993843377754	WITHOUT_CLASSIFICATION	6.156622246283248E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999959030536316	WITHOUT_CLASSIFICATION	4.096946368362294E-6	DEFECT
//////////////////////////////////////////////////////////////// // constructors	WITHOUT_CLASSIFICATION	0.9999996493752797	WITHOUT_CLASSIFICATION	3.5062472022456624E-7	DEFECT
/*     * @see javax.swing.filechooser.FileFilter#getDescription()     */	WITHOUT_CLASSIFICATION	0.999999976438973	WITHOUT_CLASSIFICATION	2.3561027056754622E-8	DEFECT
//////////////////////////////////////////////////////////////// // accessors	WITHOUT_CLASSIFICATION	0.99999900930865	WITHOUT_CLASSIFICATION	9.906913499891305E-7	DEFECT
//////////////////////////////////////////////////////////////// // instance variables	WITHOUT_CLASSIFICATION	0.9999997804293774	WITHOUT_CLASSIFICATION	2.195706224349368E-7	DEFECT
/* Retain the previous project file even when the save operation         * crashes in the middle. Also create a backup file after saving. */	WITHOUT_CLASSIFICATION	0.9999995768569246	WITHOUT_CLASSIFICATION	4.231430754281474E-7	DEFECT
// if save did not raise an exception // and name+"#" exists move name+"#" to name+"~" // this is the correct backup file	WITHOUT_CLASSIFICATION	0.9993330940406863	WITHOUT_CLASSIFICATION	6.669059593138234E-4	DEFECT
// frank: in case of exception // delete name and mv name+"#" back to name if name+"#" exists // this is the "rollback" to old file	WITHOUT_CLASSIFICATION	0.9999412561463764	WITHOUT_CLASSIFICATION	5.874385362371969E-5	DEFECT
// we have to give a message to user and set the system to unsaved!	WITHOUT_CLASSIFICATION	0.9999997336036812	WITHOUT_CLASSIFICATION	2.663963187748223E-7	DEFECT
// we have to give a message to user and set the system to unsaved!	WITHOUT_CLASSIFICATION	0.9999997336036812	WITHOUT_CLASSIFICATION	2.663963187748223E-7	DEFECT
// Make sure the file doesn't exist so the user will // get prompted to choose a new name	WITHOUT_CLASSIFICATION	0.9999999988589399	WITHOUT_CLASSIFICATION	1.1410601101904367E-9	DEFECT
// possibly use the following instead //            MemberFilePersister persister = new DiagramMemberFilePersister();	WITHOUT_CLASSIFICATION	0.9999992534036373	WITHOUT_CLASSIFICATION	7.465963627141699E-7	DEFECT
//////////////////////////////////////////////////////////////// // class methods	WITHOUT_CLASSIFICATION	0.9999881745726132	WITHOUT_CLASSIFICATION	1.1825427386807718E-5	DEFECT
/* end class XMLTokenTableBase */	WITHOUT_CLASSIFICATION	0.9967266518125178	WITHOUT_CLASSIFICATION	0.003273348187482264	DEFECT
// These are the file formats I know about:	WITHOUT_CLASSIFICATION	0.9999970939469559	WITHOUT_CLASSIFICATION	2.9060530440156383E-6	DEFECT
// If anything goes wrong return the stack // trace as a string so that we get some // useful feedback.	WITHOUT_CLASSIFICATION	0.9999994297655008	WITHOUT_CLASSIFICATION	5.702344991602304E-7	DEFECT
/**     * Return just the comment edges for a specific layer.     * TODO: Document: Diagram / layer?     *     * @param diagram The diagram.     * @return a {@link List} with the edges.     */	WITHOUT_CLASSIFICATION	0.8307646107134252	WITHOUT_CLASSIFICATION	0.1692353892865748	DEFECT
/* make sure this setting exists in the configuration file         * to facilitate changing: */	WITHOUT_CLASSIFICATION	0.9999962259654251	WITHOUT_CLASSIFICATION	3.7740345747442735E-6	DEFECT
// Is row at top of screen?	WITHOUT_CLASSIFICATION	0.999998725554061	WITHOUT_CLASSIFICATION	1.27444593899868E-6	DEFECT
/*     * @see javax.swing.filechooser.FileFilter#getDescription()     */	WITHOUT_CLASSIFICATION	0.999999976438973	WITHOUT_CLASSIFICATION	2.3561027056754622E-8	DEFECT
//////////////////////////////////////////////////////////////// // accessors	WITHOUT_CLASSIFICATION	0.99999900930865	WITHOUT_CLASSIFICATION	9.906913499891305E-7	DEFECT
// Process the listeners last to first, notifying // those that are interested in this event	WITHOUT_CLASSIFICATION	0.9999999594702297	WITHOUT_CLASSIFICATION	4.052977032330427E-8	DEFECT
// Lazily create the event:	WITHOUT_CLASSIFICATION	0.9999995009738529	WITHOUT_CLASSIFICATION	4.99026147136317E-7	DEFECT
// Guaranteed to return a non-null array	WITHOUT_CLASSIFICATION	0.9999999594285716	WITHOUT_CLASSIFICATION	4.05714284274186E-8	DEFECT
//////////////////////////////////////////////////////////////// // instance variables	WITHOUT_CLASSIFICATION	0.9999997804293774	WITHOUT_CLASSIFICATION	2.195706224349368E-7	DEFECT
//////////////////////////////////////////////////////////////// // FileFilter API	WITHOUT_CLASSIFICATION	0.9999965898030483	WITHOUT_CLASSIFICATION	3.4101969517112155E-6	DEFECT
// this check for files without extension...	WITHOUT_CLASSIFICATION	0.999980429236542	WITHOUT_CLASSIFICATION	1.957076345806511E-5	DEFECT
//        }	WITHOUT_CLASSIFICATION	0.9999959719156256	WITHOUT_CLASSIFICATION	4.028084374430973E-6	DEFECT
/* end class XMLElement */	WITHOUT_CLASSIFICATION	0.9997207290612102	WITHOUT_CLASSIFICATION	2.7927093878974123E-4	DEFECT
// for AndroMDA	WITHOUT_CLASSIFICATION	0.9999958125383275	WITHOUT_CLASSIFICATION	4.187461672529611E-6	DEFECT
// For some reason, this alleged directory is a single file // This could be that there is some confusion or just // the normal, that a single file was selected and is // supposed to be imported.	WITHOUT_CLASSIFICATION	0.9999990077677137	WITHOUT_CLASSIFICATION	9.92232286292846E-7	DEFECT
// Get the contents of the directory	WITHOUT_CLASSIFICATION	0.9999998737039671	WITHOUT_CLASSIFICATION	1.262960328176448E-7	DEFECT
// The following test can cause trouble with // links, because links are accepted as // directories, even if they link files. Links // could also result in infinite loops. For this // reason we don't do this traversing recursively.	WITHOUT_CLASSIFICATION	0.9999999610818401	WITHOUT_CLASSIFICATION	3.8918159884871245E-8	DEFECT
// If this file is a directory	WITHOUT_CLASSIFICATION	0.9998351282769151	WITHOUT_CLASSIFICATION	1.6487172308486987E-4	DEFECT
// load profile name	WITHOUT_CLASSIFICATION	0.9999975816893795	WITHOUT_CLASSIFICATION	2.418310620616848E-6	DEFECT
// Yes, scroll up one row	WITHOUT_CLASSIFICATION	0.9999991856404283	WITHOUT_CLASSIFICATION	8.143595716214384E-7	DEFECT
/* Testing: Works Ok. */	WITHOUT_CLASSIFICATION	0.9991948027097977	WITHOUT_CLASSIFICATION	8.05197290202306E-4	DEFECT
// if there is only one package in the model, // we should suppose it's the profile model, // if there is more than one, we take the ones // marked as <<profile>>	WITHOUT_CLASSIFICATION	0.9999999977652956	WITHOUT_CLASSIFICATION	2.234704506212929E-9	DEFECT
// load profile dependencies	WITHOUT_CLASSIFICATION	0.9999998983757993	WITHOUT_CLASSIFICATION	1.0162420066984954E-7	DEFECT
/* Set up the property panels for critics: */	WITHOUT_CLASSIFICATION	0.9995058656685054	WITHOUT_CLASSIFICATION	4.941343314946037E-4	DEFECT
/* init profiles defined in jar files */	WITHOUT_CLASSIFICATION	0.9999891562961242	WITHOUT_CLASSIFICATION	1.0843703875913475E-5	DEFECT
// We have our own UML2 profile, but it is not used. Instead, // by the following line the build-in eclipse UML2 standard // profile and primitive types implementation are used.	WITHOUT_CLASSIFICATION	0.9999489928988688	WITHOUT_CLASSIFICATION	5.1007101131236464E-5	DEFECT
// Missing WFRs	WITHOUT_CLASSIFICATION	0.9999975681768717	WITHOUT_CLASSIFICATION	2.4318231283222602E-6	DEFECT
// Association Class // 4.5.3.2 [1]	WITHOUT_CLASSIFICATION	0.9999983652275192	WITHOUT_CLASSIFICATION	1.6347724809095358E-6	DEFECT
/* Testing: does not fire. */	WITHOUT_CLASSIFICATION	0.9960665151966149	WITHOUT_CLASSIFICATION	0.003933484803385127	DEFECT
/* Testing: does not fire. */	WITHOUT_CLASSIFICATION	0.9960665151966149	WITHOUT_CLASSIFICATION	0.003933484803385127	DEFECT
// 4.5.3.2 [2]	WITHOUT_CLASSIFICATION	0.9999970074063981	WITHOUT_CLASSIFICATION	2.9925936018715346E-6	DEFECT
// Behavioral Feature // 4.5.3.5 [2]	WITHOUT_CLASSIFICATION	0.9999991457471109	WITHOUT_CLASSIFICATION	8.542528891833068E-7	DEFECT
/* TODO: Partly overlaps CrOppEndVsAttr. */	WITHOUT_CLASSIFICATION	0.6925386042683473	DEFECT	0.30746139573165265	WITHOUT_CLASSIFICATION
/* Tested with fabricated XMI - OK. */	WITHOUT_CLASSIFICATION	0.9999888449751825	WITHOUT_CLASSIFICATION	1.1155024817559516E-5	DEFECT
/* Tested with fabricated XMI - OK. */	WITHOUT_CLASSIFICATION	0.9999888449751825	WITHOUT_CLASSIFICATION	1.1155024817559516E-5	DEFECT
/* Tested with fabricated XMI - OK. */	WITHOUT_CLASSIFICATION	0.9999888449751825	WITHOUT_CLASSIFICATION	1.1155024817559516E-5	DEFECT
// 4.5.3.20 [4]	WITHOUT_CLASSIFICATION	0.9999942287242526	WITHOUT_CLASSIFICATION	5.771275747425197E-6	DEFECT
//                    + "a.allConnections->exists(r | r.type.oclIsKindOf(Actor)) and "	WITHOUT_CLASSIFICATION	0.9999993651236609	WITHOUT_CLASSIFICATION	6.348763390504801E-7	DEFECT
/*     * @see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAIfExpression(tudresden.ocl.parser.node.AIfExpression)     */	WITHOUT_CLASSIFICATION	0.9999998494121387	WITHOUT_CLASSIFICATION	1.505878613214997E-7	DEFECT
/*     * @see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseALogicalExpressionTail(tudresden.ocl.parser.node.ALogicalExpressionTail)     */	WITHOUT_CLASSIFICATION	0.9999997574005437	WITHOUT_CLASSIFICATION	2.425994562683101E-7	DEFECT
/*     * @see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseARelationalExpressionTail(tudresden.ocl.parser.node.ARelationalExpressionTail)     */	WITHOUT_CLASSIFICATION	0.9999998673529531	WITHOUT_CLASSIFICATION	1.32647046977092E-7	DEFECT
// UseCase // 4.11.3.5 [2]	WITHOUT_CLASSIFICATION	0.9999972669939821	WITHOUT_CLASSIFICATION	2.733006018003057E-6	DEFECT
// Classifier // 4.5.3.8 [5]	WITHOUT_CLASSIFICATION	0.999999820397044	WITHOUT_CLASSIFICATION	1.7960295607121696E-7	DEFECT
// GeneralizableElement // 4.5.3.20 [1]	WITHOUT_CLASSIFICATION	0.9999938104926724	WITHOUT_CLASSIFICATION	6.189507327541074E-6	DEFECT
// DataType // 4.5.3.12 [1]	WITHOUT_CLASSIFICATION	0.999996376809555	WITHOUT_CLASSIFICATION	3.623190445088489E-6	DEFECT
// Actor // 4.11.3.1 [1]	WITHOUT_CLASSIFICATION	0.9999996702206885	WITHOUT_CLASSIFICATION	3.2977931154882893E-7	DEFECT
// Namespace // 4.5.3.26 [2]	WITHOUT_CLASSIFICATION	0.9999953911129779	WITHOUT_CLASSIFICATION	4.608887022099889E-6	DEFECT
// UseCase // 4.11.3.5 [1]	WITHOUT_CLASSIFICATION	0.9999973262630025	WITHOUT_CLASSIFICATION	2.6737369974318286E-6	DEFECT
// Actor // 4.11.3.1 [2]	WITHOUT_CLASSIFICATION	0.9999996629104169	WITHOUT_CLASSIFICATION	3.370895831458152E-7	DEFECT
/* Tested OK, except in some cases, depending on the         * sequence of the EPs. Probably the implementation of         * "forAll (x, y | ..." does not cover all combinations. */	WITHOUT_CLASSIFICATION	0.9999834897536771	WITHOUT_CLASSIFICATION	1.6510246322886665E-5	DEFECT
// UseCase // 4.11.3.5 [4]	WITHOUT_CLASSIFICATION	0.999997332184609	WITHOUT_CLASSIFICATION	2.6678153910878497E-6	DEFECT
// UseCase // 4.11.3.5 [3]	WITHOUT_CLASSIFICATION	0.9999973221638428	WITHOUT_CLASSIFICATION	2.677836157017243E-6	DEFECT
// ActionState // 4.13.3.2 [3] // Issue 715	WITHOUT_CLASSIFICATION	0.9999999128039985	WITHOUT_CLASSIFICATION	8.719600161445885E-8	DEFECT
// no default type for UML2	WITHOUT_CLASSIFICATION	0.9999990516764878	WITHOUT_CLASSIFICATION	9.483235120488106E-7	DEFECT
// the UML Profile is always present and default	WITHOUT_CLASSIFICATION	0.9999904154154599	WITHOUT_CLASSIFICATION	9.584584540142396E-6	DEFECT
// register the built-in profiles	WITHOUT_CLASSIFICATION	0.9999997842051754	WITHOUT_CLASSIFICATION	2.1579482446631332E-7	DEFECT
// if an exception is raised file is unusable	WITHOUT_CLASSIFICATION	0.9999996985485431	WITHOUT_CLASSIFICATION	3.014514568466254E-7	DEFECT
// if the list does not exist add the code generation and // good practices profiles as default	WITHOUT_CLASSIFICATION	0.9999963587080493	WITHOUT_CLASSIFICATION	3.6412919507373896E-6	DEFECT
// this profile could have not been loaded when // the default profile configuration // was loaded at first, so we need to do it again	WITHOUT_CLASSIFICATION	0.9999996599729225	WITHOUT_CLASSIFICATION	3.4002707749404906E-7	DEFECT
// We assume profile is contained in a single extent	WITHOUT_CLASSIFICATION	0.9999995624691936	WITHOUT_CLASSIFICATION	4.375308063685612E-7	DEFECT
// Nothing to delete if we couldn't get the packages	WITHOUT_CLASSIFICATION	0.9999998358153865	WITHOUT_CLASSIFICATION	1.6418461347032792E-7	DEFECT
// If we found an old-style name, update it to the new package name	WITHOUT_CLASSIFICATION	0.9999988022025282	WITHOUT_CLASSIFICATION	1.1977974717936316E-6	DEFECT
// Make sure the names didn't change again	WITHOUT_CLASSIFICATION	0.9999997017850647	WITHOUT_CLASSIFICATION	2.9821493530164895E-7	DEFECT
// simply use name as it is	WITHOUT_CLASSIFICATION	0.9999980811351187	WITHOUT_CLASSIFICATION	1.9188648812651996E-6	DEFECT
// //   if element is an AssociationEnd use //      the namespace of containing association //	WITHOUT_CLASSIFICATION	0.9999993370905088	WITHOUT_CLASSIFICATION	6.629094911210244E-7	DEFECT
// if one side is null, compare with the equality operator	WITHOUT_CLASSIFICATION	0.9999993595671451	WITHOUT_CLASSIFICATION	6.404328549447698E-7	DEFECT
// XXX: hypotheses for AFeatureCall: fwd = op, val = head	WITHOUT_CLASSIFICATION	0.9997411838368333	WITHOUT_CLASSIFICATION	2.588161631667313E-4	DEFECT
// hypotheses no time expression (only invariants)	WITHOUT_CLASSIFICATION	0.9999980311683823	WITHOUT_CLASSIFICATION	1.968831617791042E-6	DEFECT
/*                 * For a iterator call we should provide: (a) the variables (b)                 * the expression to be evaluated on each step (c) the                 * lambda-evaluator to evaluate it                 */	WITHOUT_CLASSIFICATION	0.9992337332109154	WITHOUT_CLASSIFICATION	7.662667890846374E-4	DEFECT
// XXX hypothesis: no time expression (inv)	WITHOUT_CLASSIFICATION	0.9993852592387229	WITHOUT_CLASSIFICATION	6.147407612771213E-4	DEFECT
/*     * @see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAConstraint(tudresden.ocl.parser.node.AConstraint)     */	WITHOUT_CLASSIFICATION	0.9999999586732321	WITHOUT_CLASSIFICATION	4.1326767835978524E-8	DEFECT
/*     * @see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAClassifierContext(tudresden.ocl.parser.node.AClassifierContext)     */	WITHOUT_CLASSIFICATION	0.9999999099206914	WITHOUT_CLASSIFICATION	9.007930866065938E-8	DEFECT
// these operations are ok for lists too	WITHOUT_CLASSIFICATION	0.9999965404642472	WITHOUT_CLASSIFICATION	3.459535752715272E-6	DEFECT
// LOG.log(Level.FINE, "OCL FEATURE CALL: " + subject + ""+ type +""+ feature + "" // + parameters);	WITHOUT_CLASSIFICATION	0.9999995727046298	WITHOUT_CLASSIFICATION	4.2729537018784296E-7	DEFECT
// XXX this should be done in CollectionsModelInterpreter // but it can't trigger another invokeFeature...	WITHOUT_CLASSIFICATION	0.8719211208498936	WITHOUT_CLASSIFICATION	0.12807887915010635	DEFECT
// /** //  * Logger. //  */ // private static final Logger LOG = //     Logger.getLogger(DefaultOclEvaluator.class.getName());	WITHOUT_CLASSIFICATION	0.9999999338161402	WITHOUT_CLASSIFICATION	6.618385981239733E-8	DEFECT
//LOG.log(Level.FINE, "OCL: " + ocl);	WITHOUT_CLASSIFICATION	0.999994722995856	WITHOUT_CLASSIFICATION	5.2770041440108745E-6	DEFECT
// propagate	WITHOUT_CLASSIFICATION	0.999998936392596	WITHOUT_CLASSIFICATION	1.063607404055886E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999928616651008	WITHOUT_CLASSIFICATION	7.138334899211065E-6	DEFECT
// if test fails this element should not // be in the result set	WITHOUT_CLASSIFICATION	0.999688191314277	WITHOUT_CLASSIFICATION	3.118086857229953E-4	DEFECT
// if test is ok this element should not // be in the result set	WITHOUT_CLASSIFICATION	0.9999753011518798	WITHOUT_CLASSIFICATION	2.469884812017531E-5	DEFECT
// these operations are ok for bags too	WITHOUT_CLASSIFICATION	0.9999987445075873	WITHOUT_CLASSIFICATION	1.2554924127200054E-6	DEFECT
/* 4.5.2.1 Abstraction */	WITHOUT_CLASSIFICATION	0.9999950204669057	WITHOUT_CLASSIFICATION	4.979533094323305E-6	DEFECT
/* 4.5.2.3 Association */	WITHOUT_CLASSIFICATION	0.9999262648037878	WITHOUT_CLASSIFICATION	7.373519621212997E-5	DEFECT
// Additional Operation 4.5.3.1 [1]	WITHOUT_CLASSIFICATION	0.9999994209201107	WITHOUT_CLASSIFICATION	5.790798892270983E-7	DEFECT
/* 4.5.2.5 AssociationEnd */	WITHOUT_CLASSIFICATION	0.9999681315066021	WITHOUT_CLASSIFICATION	3.1868493397849196E-5	DEFECT
// Additional Operation 4.5.3.3 [1]	WITHOUT_CLASSIFICATION	0.9999994042192518	WITHOUT_CLASSIFICATION	5.95780748154285E-7	DEFECT
/* 4.5.2.6 Attribute */	WITHOUT_CLASSIFICATION	0.9999817241021849	WITHOUT_CLASSIFICATION	1.8275897815056312E-5	DEFECT
/* 4.5.2.7 BehavioralFeature */	WITHOUT_CLASSIFICATION	0.9999954317798484	WITHOUT_CLASSIFICATION	4.568220151533412E-6	DEFECT
/* 4.5.2.8 Binding */	WITHOUT_CLASSIFICATION	0.9993499116444299	WITHOUT_CLASSIFICATION	6.500883555700135E-4	DEFECT
/* 4.5.2.9 Class */	WITHOUT_CLASSIFICATION	0.9999719175207727	WITHOUT_CLASSIFICATION	2.8082479227195894E-5	DEFECT
/* 4.5.2.10 Classifier */	WITHOUT_CLASSIFICATION	0.9999921675023822	WITHOUT_CLASSIFICATION	7.832497617867421E-6	DEFECT
// TODO specifiedEnd??	WITHOUT_CLASSIFICATION	0.9936522873878108	WITHOUT_CLASSIFICATION	0.006347712612189258	DEFECT
/* 4.5.2.11 Comment */	WITHOUT_CLASSIFICATION	0.9999573932644221	WITHOUT_CLASSIFICATION	4.26067355778879E-5	DEFECT
/* 4.5.2.12 Component */	WITHOUT_CLASSIFICATION	0.9999928485930736	WITHOUT_CLASSIFICATION	7.151406926376637E-6	DEFECT
// Additional Operation in 4.5.3.9	WITHOUT_CLASSIFICATION	0.9999982484358785	WITHOUT_CLASSIFICATION	1.751564121439947E-6	DEFECT
// No, scroll down one row	WITHOUT_CLASSIFICATION	0.9999978020288208	WITHOUT_CLASSIFICATION	2.197971179201049E-6	DEFECT
/* 4.5.2.14 Dependency */	WITHOUT_CLASSIFICATION	0.9999408644896258	WITHOUT_CLASSIFICATION	5.913551037426544E-5	DEFECT
/* 4.5.2.18 ElementOwnership */	WITHOUT_CLASSIFICATION	0.9999892978784213	WITHOUT_CLASSIFICATION	1.0702121578633002E-5	DEFECT
/* 4.5.2.19 Enumeration */	WITHOUT_CLASSIFICATION	0.9999896813324837	WITHOUT_CLASSIFICATION	1.0318667516256327E-5	DEFECT
/* 4.5.2.20 EnumerationLiteral */	WITHOUT_CLASSIFICATION	0.9999915753970451	WITHOUT_CLASSIFICATION	8.424602954816378E-6	DEFECT
/* 4.5.2.21 Feature */	WITHOUT_CLASSIFICATION	0.9999966477159383	WITHOUT_CLASSIFICATION	3.352284061690705E-6	DEFECT
/* 4.5.2.23 Generalizable Element */	WITHOUT_CLASSIFICATION	0.9999269447656134	WITHOUT_CLASSIFICATION	7.305523438660058E-5	DEFECT
// Additional Operation in 4.5.3.20	WITHOUT_CLASSIFICATION	0.9999981897237458	WITHOUT_CLASSIFICATION	1.810276254171735E-6	DEFECT
/* 4.5.2.26 Method */	WITHOUT_CLASSIFICATION	0.9999128063744883	WITHOUT_CLASSIFICATION	8.719362551164497E-5	DEFECT
/* 4.5.2.27 ModelElement */	WITHOUT_CLASSIFICATION	0.9999498736511993	WITHOUT_CLASSIFICATION	5.012634880074225E-5	DEFECT
// avoiding null names	WITHOUT_CLASSIFICATION	0.999995429124928	WITHOUT_CLASSIFICATION	4.570875071990314E-6	DEFECT
// As extended by 4.6.2.2	WITHOUT_CLASSIFICATION	0.9999986006596934	WITHOUT_CLASSIFICATION	1.399340306531019E-6	DEFECT
// Additional Operations in 4.5.3.25	WITHOUT_CLASSIFICATION	0.9999973324767639	WITHOUT_CLASSIFICATION	2.6675232361015494E-6	DEFECT
// Additional Operations in 4.5.3.26	WITHOUT_CLASSIFICATION	0.9999969220381874	WITHOUT_CLASSIFICATION	3.077961812743938E-6	DEFECT
/* 4.5.2.29 Node */	WITHOUT_CLASSIFICATION	0.9999433436181001	WITHOUT_CLASSIFICATION	5.6656381899987357E-5	DEFECT
/* 4.5.2.30 Operation */	WITHOUT_CLASSIFICATION	0.9999450616769436	WITHOUT_CLASSIFICATION	5.493832305630736E-5	DEFECT
/* 4.5.2.31 Parameter */	WITHOUT_CLASSIFICATION	0.999987407348693	WITHOUT_CLASSIFICATION	1.2592651307084582E-5	DEFECT
/* 4.5.2.35 ProgrammingLanguageDataType */	WITHOUT_CLASSIFICATION	0.9999963386739273	WITHOUT_CLASSIFICATION	3.6613260725796807E-6	DEFECT
// Set the icon:	WITHOUT_CLASSIFICATION	0.9999750453690748	WITHOUT_CLASSIFICATION	2.495463092522523E-5	DEFECT
/*     * @see java.lang.Object#equals(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999990412357495	WITHOUT_CLASSIFICATION	9.587642505993175E-7	DEFECT
/*     * @see java.lang.Object#hashCode()     */	WITHOUT_CLASSIFICATION	0.9999937095428904	WITHOUT_CLASSIFICATION	6.290457109648908E-6	DEFECT
/*     * @see java.awt.Component#getMinimumSize()     */	WITHOUT_CLASSIFICATION	0.999999808153058	WITHOUT_CLASSIFICATION	1.9184694193655748E-7	DEFECT
// ignored - we only care about open/closing	WITHOUT_CLASSIFICATION	0.999999977865599	WITHOUT_CLASSIFICATION	2.21344009688714E-8	DEFECT
/* 4.5.2.37 StructuralFeature */	WITHOUT_CLASSIFICATION	0.9999974039487602	WITHOUT_CLASSIFICATION	2.5960512397411905E-6	DEFECT
/* 4.5.2.38 TemplateArgument */	WITHOUT_CLASSIFICATION	0.9999980871249863	WITHOUT_CLASSIFICATION	1.912875013787907E-6	DEFECT
/* 4.5.2.39 TemplateParameter */	WITHOUT_CLASSIFICATION	0.9999856271016612	WITHOUT_CLASSIFICATION	1.4372898338776215E-5	DEFECT
/* 4.11.3.5 UseCase */	WITHOUT_CLASSIFICATION	0.9999705165504233	WITHOUT_CLASSIFICATION	2.9483449576714095E-5	DEFECT
/*  The operation specificationPath results in a set containing                     * all surrounding Namespaces that are not instances of                     *  Package.                     *  specificationPath : Set(Namespace)                     * specificationPath = self.allSurroundingNamespaces->select(n |                     *    n.oclIsKindOf(Subsystem) or n.oclIsKindOf(Class))                     **/	WITHOUT_CLASSIFICATION	0.9999262172610689	WITHOUT_CLASSIFICATION	7.378273893105365E-5	DEFECT
/* 4.5.3.2 AssociationClass */	WITHOUT_CLASSIFICATION	0.9999632884622365	WITHOUT_CLASSIFICATION	3.671153776345376E-5	DEFECT
/* The operation allConnections results in the set of all                     * AssociationEnds of the AssociationClass, including all                     * connections defined by its parent (transitive closure).                     */	WITHOUT_CLASSIFICATION	0.9999994657467075	WITHOUT_CLASSIFICATION	5.342532925388011E-7	DEFECT
/* 4.6.2.3 Stereotype */	WITHOUT_CLASSIFICATION	0.9998823266624552	WITHOUT_CLASSIFICATION	1.1767333754482327E-4	DEFECT
// stereotypeConstraint ?	WITHOUT_CLASSIFICATION	0.9999987606981852	WITHOUT_CLASSIFICATION	1.2393018148437058E-6	DEFECT
/* 4.6.2.4 TagDefinition */	WITHOUT_CLASSIFICATION	0.9999703767406785	WITHOUT_CLASSIFICATION	2.962325932165927E-5	DEFECT
/* 4.6.2.5 TaggedValue */	WITHOUT_CLASSIFICATION	0.9999811212834745	WITHOUT_CLASSIFICATION	1.8878716525415337E-5	DEFECT
// add adapters that do nothing for keyboard and mouse actions	WITHOUT_CLASSIFICATION	0.9999967058599829	WITHOUT_CLASSIFICATION	3.2941400170616777E-6	DEFECT
// discard the event if its source is not from the correct type	WITHOUT_CLASSIFICATION	0.9999740839758082	WITHOUT_CLASSIFICATION	2.5916024191764755E-5	DEFECT
// Guard against error conditions if climb search wasn't successful	WITHOUT_CLASSIFICATION	0.9999968399117537	WITHOUT_CLASSIFICATION	3.1600882463660884E-6	DEFECT
// Sets the mouse cursor to hourglass mode	WITHOUT_CLASSIFICATION	0.9999992420335534	WITHOUT_CLASSIFICATION	7.579664466367882E-7	DEFECT
// Start receiving all events and consume them if necessary	WITHOUT_CLASSIFICATION	0.999999984151558	WITHOUT_CLASSIFICATION	1.5848442002836246E-8	DEFECT
// Activate the glass pane capabilities	WITHOUT_CLASSIFICATION	0.9999997710705484	WITHOUT_CLASSIFICATION	2.2892945160360046E-7	DEFECT
// Stop receiving all events	WITHOUT_CLASSIFICATION	0.9999998853213637	WITHOUT_CLASSIFICATION	1.146786362017416E-7	DEFECT
// Deactivate the glass pane capabilities	WITHOUT_CLASSIFICATION	0.9999994103256096	WITHOUT_CLASSIFICATION	5.896743903772956E-7	DEFECT
// Sets the mouse cursor back to the regular pointer	WITHOUT_CLASSIFICATION	0.9999999902561598	WITHOUT_CLASSIFICATION	9.743840121688958E-9	DEFECT
// no initialization required	WITHOUT_CLASSIFICATION	0.999997774206434	WITHOUT_CLASSIFICATION	2.2257935660515243E-6	DEFECT
/* end class SpacerPanel */	WITHOUT_CLASSIFICATION	0.9998732906509636	WITHOUT_CLASSIFICATION	1.2670934903637022E-4	DEFECT
/*     * @see org.argouml.ui.TabTarget#setTarget(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999998702422882	WITHOUT_CLASSIFICATION	1.297577117281041E-7	DEFECT
/*     * @see java.awt.datatransfer.Transferable#getTransferData(java.awt.datatransfer.DataFlavor)     */	WITHOUT_CLASSIFICATION	0.9999998280056656	WITHOUT_CLASSIFICATION	1.7199433432470885E-7	DEFECT
/*     * @see java.awt.datatransfer.Transferable#getTransferDataFlavors()     */	WITHOUT_CLASSIFICATION	0.9999998882366155	WITHOUT_CLASSIFICATION	1.1176338451344653E-7	DEFECT
/*     * @see java.awt.datatransfer.Transferable#isDataFlavorSupported(java.awt.datatransfer.DataFlavor)     */	WITHOUT_CLASSIFICATION	0.9999999400324503	WITHOUT_CLASSIFICATION	5.996754967421447E-8	DEFECT
/*     * @see java.lang.Runnable#run()     */	WITHOUT_CLASSIFICATION	0.9999977807464051	WITHOUT_CLASSIFICATION	2.2192535948478568E-6	DEFECT
/*     * @see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999994446406183	WITHOUT_CLASSIFICATION	5.553593817324716E-7	DEFECT
/*     * @see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999997746694292	WITHOUT_CLASSIFICATION	2.2533057064832407E-7	DEFECT
/*     * Called when the user has pressed Save. Performs "Save" in all Tabs.     */	WITHOUT_CLASSIFICATION	0.9999999067086882	WITHOUT_CLASSIFICATION	9.329131180230618E-8	DEFECT
// Climb the component hierarchy until a RootPaneContainer is found or  // until the very top	WITHOUT_CLASSIFICATION	0.9999991491678968	WITHOUT_CLASSIFICATION	8.508321031820079E-7	DEFECT
/* end class SplashPanel */	WITHOUT_CLASSIFICATION	0.999935279155709	WITHOUT_CLASSIFICATION	6.472084429098815E-5	DEFECT
// Retrieve an existing GlassPane if old one already exist or  // create a new one, otherwise return null	WITHOUT_CLASSIFICATION	0.999999925782544	WITHOUT_CLASSIFICATION	7.421745596724014E-8	DEFECT
// Add settings from the settings registry.	WITHOUT_CLASSIFICATION	0.9999998894612392	WITHOUT_CLASSIFICATION	1.1053876090054291E-7	DEFECT
// keep track of the visible window associated w/the component // useful during event filtering	WITHOUT_CLASSIFICATION	0.9999999935881616	WITHOUT_CLASSIFICATION	6.411838330591265E-9	DEFECT
// show a chooser dialog for the file name, only xmi is allowed	WITHOUT_CLASSIFICATION	0.9999994017124507	WITHOUT_CLASSIFICATION	5.982875493227485E-7	DEFECT
// If a toolbar was requested, create an empty one.	WITHOUT_CLASSIFICATION	0.9999999349468218	WITHOUT_CLASSIFICATION	6.505317810271695E-8	DEFECT
// Increase width to accommodate all tabs on one row.	WITHOUT_CLASSIFICATION	0.9999993564646508	WITHOUT_CLASSIFICATION	6.435353492256876E-7	DEFECT
// TODO: Localize	WITHOUT_CLASSIFICATION	0.6474842779592924	DEFECT	0.3525157220407075	WITHOUT_CLASSIFICATION
// TODO: Localize	WITHOUT_CLASSIFICATION	0.6474842779592924	DEFECT	0.3525157220407075	WITHOUT_CLASSIFICATION
/*     * Called when the user has pressed Cancel. Performs "Cancel" in all Tabs.     */	WITHOUT_CLASSIFICATION	0.9999999507132751	WITHOUT_CLASSIFICATION	4.928672495170405E-8	DEFECT
/* end class TabText */	WITHOUT_CLASSIFICATION	0.9999486520692396	WITHOUT_CLASSIFICATION	5.1347930760459714E-5	DEFECT
// If a recursive call from setVisible(), just return	WITHOUT_CLASSIFICATION	0.9999998587457968	WITHOUT_CLASSIFICATION	1.4125420314526668E-7	DEFECT
// ignored - we only care about open/closing	WITHOUT_CLASSIFICATION	0.999999977865599	WITHOUT_CLASSIFICATION	2.21344009688714E-8	DEFECT
// windowOpen state will be changed when window is activated	WITHOUT_CLASSIFICATION	0.9999994028975691	WITHOUT_CLASSIFICATION	5.971024309465709E-7	DEFECT
// ignored - we only care about open/closing	WITHOUT_CLASSIFICATION	0.999999977865599	WITHOUT_CLASSIFICATION	2.21344009688714E-8	DEFECT
/* We have to tell the settings tab in which project                     * the settings reside: */	WITHOUT_CLASSIFICATION	0.999996996878017	WITHOUT_CLASSIFICATION	3.00312198291712E-6	DEFECT
// ignored - we only care about open/closing	WITHOUT_CLASSIFICATION	0.999999977865599	WITHOUT_CLASSIFICATION	2.21344009688714E-8	DEFECT
// We only request focus the first time we become visible	WITHOUT_CLASSIFICATION	0.9999999022924086	WITHOUT_CLASSIFICATION	9.770759124457556E-8	DEFECT
// Use Case	WITHOUT_CLASSIFICATION	0.999996750164595	WITHOUT_CLASSIFICATION	3.2498354050694315E-6	DEFECT
/*     * @see java.awt.event.WindowListener#windowOpened(java.awt.event.WindowEvent)     */	WITHOUT_CLASSIFICATION	0.9999996443566925	WITHOUT_CLASSIFICATION	3.556433074848073E-7	DEFECT
// Do nothing - these buttons are not shown.	WITHOUT_CLASSIFICATION	0.9999805317987238	WITHOUT_CLASSIFICATION	1.946820127624744E-5	DEFECT
// Handle the same as an explicit cancel	WITHOUT_CLASSIFICATION	0.9999997593338258	WITHOUT_CLASSIFICATION	2.406661742017728E-7	DEFECT
//        savePosition(prpTodo, TabToDo.class); //        savePosition(prpProperties, TabProps.class); //        savePosition(prpDocumentation, TabDocumentation.class); //        savePosition(prpStyle, TabStyle.class); //        savePosition(prpSource, TabSrc.class); //        savePosition(prpConstraints, TabConstraints.class); //        savePosition(prpTaggedValues, TabTaggedValues.class);	WITHOUT_CLASSIFICATION	0.9999990814857395	WITHOUT_CLASSIFICATION	9.1851426064793E-7	DEFECT
// defer work until fetched/visible	WITHOUT_CLASSIFICATION	0.9999942180121802	WITHOUT_CLASSIFICATION	5.78198781982278E-6	DEFECT
// Actor	WITHOUT_CLASSIFICATION	0.9999993877852972	WITHOUT_CLASSIFICATION	6.122147027857701E-7	DEFECT
/*     * @see GUISettingsTabInterface#getTabKey()     */	WITHOUT_CLASSIFICATION	0.9999999102292702	WITHOUT_CLASSIFICATION	8.977072975530897E-8	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Do nothing - these buttons are not shown.	WITHOUT_CLASSIFICATION	0.9999805317987238	WITHOUT_CLASSIFICATION	1.946820127624744E-5	DEFECT
//        loadPosition(prpTodo, TabToDo.class); //        loadPosition(prpProperties, TabProps.class); //        loadPosition(prpDocumentation, TabDocumentation.class); //        loadPosition(prpStyle, TabStyle.class); //        loadPosition(prpSource, TabSrc.class); //        loadPosition(prpConstraints, TabConstraints.class); //        loadPosition(prpTaggedValues, TabTaggedValues.class);	WITHOUT_CLASSIFICATION	0.9999990829610605	WITHOUT_CLASSIFICATION	9.170389394389716E-7	DEFECT
// ------------- Rule management --------------	WITHOUT_CLASSIFICATION	0.9999984537156316	WITHOUT_CLASSIFICATION	1.5462843683156805E-6	DEFECT
// ----------- name -------------------------	WITHOUT_CLASSIFICATION	0.9999970179624967	WITHOUT_CLASSIFICATION	2.982037503291781E-6	DEFECT
// ------ all rules ----------	WITHOUT_CLASSIFICATION	0.9999994535492581	WITHOUT_CLASSIFICATION	5.464507419156612E-7	DEFECT
/** TODO: factor out     *     * @param rule the rule to be added     */	WITHOUT_CLASSIFICATION	0.931571140963437	WITHOUT_CLASSIFICATION	0.0684288590365631	DEFECT
// Put the current pane in a scroll pane.	WITHOUT_CLASSIFICATION	0.9999845167553477	WITHOUT_CLASSIFICATION	1.5483244652372485E-5	DEFECT
/* end class StylePanelFigText */	WITHOUT_CLASSIFICATION	0.9999106062678946	WITHOUT_CLASSIFICATION	8.939373210536304E-5	DEFECT
// NOTE: These must stay in this order to match rendering styles	WITHOUT_CLASSIFICATION	0.9998302628080847	WITHOUT_CLASSIFICATION	1.6973719191525348E-4	DEFECT
// The boundary box as held in the target fig, and as listed in // the // boundary box style field (null if we don't have anything // valid)	WITHOUT_CLASSIFICATION	0.9999877378867104	WITHOUT_CLASSIFICATION	1.2262113289570496E-5	DEFECT
// Only reset the text if the two are not the same (i.e the fig // has // moved, rather than we've just edited the text, when // setTargetBBox() // will have made them the same). Note that styleBounds could // be null, // so we do the test this way round.	WITHOUT_CLASSIFICATION	0.9998657839457656	WITHOUT_CLASSIFICATION	1.342160542343083E-4	DEFECT
// Change the fill colour	WITHOUT_CLASSIFICATION	0.9999998919402127	WITHOUT_CLASSIFICATION	1.0805978728925975E-7	DEFECT
// Change the line colour	WITHOUT_CLASSIFICATION	0.9999998251048549	WITHOUT_CLASSIFICATION	1.7489514506642165E-7	DEFECT
// Can't do anything if we don't have a fig.	WITHOUT_CLASSIFICATION	0.9998246554674204	WITHOUT_CLASSIFICATION	1.7534453257969746E-4	DEFECT
// Parse the boundary box text. Null is // returned if it is empty or // invalid, which causes no change. Otherwise we tell // GEF we are making // a change, make the change and tell GEF we've // finished.	WITHOUT_CLASSIFICATION	0.9999999973114966	WITHOUT_CLASSIFICATION	2.688503414204938E-9	DEFECT
// Get the text in the field, and don't do anything if the // field is // empty.	WITHOUT_CLASSIFICATION	0.9999963144650683	WITHOUT_CLASSIFICATION	3.685534931683756E-6	DEFECT
// Parse the string as if // possible	WITHOUT_CLASSIFICATION	0.99999965961097	WITHOUT_CLASSIFICATION	3.4038902994778653E-7	DEFECT
// Empty implementation - we only care about keyTyped	WITHOUT_CLASSIFICATION	0.9999073961683064	WITHOUT_CLASSIFICATION	9.26038316935987E-5	DEFECT
// Empty implementation - we only care about keyTyped	WITHOUT_CLASSIFICATION	0.9999073961683064	WITHOUT_CLASSIFICATION	9.26038316935987E-5	DEFECT
// ignored - will never be called	WITHOUT_CLASSIFICATION	0.999998197526175	WITHOUT_CLASSIFICATION	1.8024738248930891E-6	DEFECT
// add preloading progress bar?	WITHOUT_CLASSIFICATION	0.9999783376655828	WITHOUT_CLASSIFICATION	2.1662334417232113E-5	DEFECT
// JasonsThemes	WITHOUT_CLASSIFICATION	0.9999966146277436	WITHOUT_CLASSIFICATION	3.3853722563272647E-6	DEFECT
// TODO - lets pass in Project as a constructor argument	WITHOUT_CLASSIFICATION	0.9958882789555161	WITHOUT_CLASSIFICATION	0.004111721044483912	DEFECT
/* Make up a default */	WITHOUT_CLASSIFICATION	0.9999847492387326	WITHOUT_CLASSIFICATION	1.5250761267380097E-5	DEFECT
/*lafClass == null ||*/	WITHOUT_CLASSIFICATION	0.9999797618447466	WITHOUT_CLASSIFICATION	2.023815525340596E-5	DEFECT
// Set to the default LAF	WITHOUT_CLASSIFICATION	0.9999985439415056	WITHOUT_CLASSIFICATION	1.4560584944690287E-6	DEFECT
/* top, left, bottom, right */	WITHOUT_CLASSIFICATION	0.9999707078642107	WITHOUT_CLASSIFICATION	2.9292135789276636E-5	DEFECT
// If LAF is Metal (either set explicitly, or as the default)	WITHOUT_CLASSIFICATION	0.9999997736581782	WITHOUT_CLASSIFICATION	2.2634182183186363E-7	DEFECT
// Set a custom LAF	WITHOUT_CLASSIFICATION	0.9999959408870488	WITHOUT_CLASSIFICATION	4.0591129511588245E-6	DEFECT
/*     * @see javax.swing.JTree#fireTreeCollapsed(javax.swing.tree.TreePath)     */	WITHOUT_CLASSIFICATION	0.9999995850185808	WITHOUT_CLASSIFICATION	4.149814192640846E-7	DEFECT
/*     * @see javax.swing.JTree#setModel(javax.swing.tree.TreeModel)     */	WITHOUT_CLASSIFICATION	0.9999998264504416	WITHOUT_CLASSIFICATION	1.7354955846838545E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getName()     */	WITHOUT_CLASSIFICATION	0.9999996588905772	WITHOUT_CLASSIFICATION	3.4110942280528437E-7	DEFECT
// TODO: Localize	WITHOUT_CLASSIFICATION	0.6474842779592924	DEFECT	0.3525157220407075	WITHOUT_CLASSIFICATION
// TODO: Localize	WITHOUT_CLASSIFICATION	0.6474842779592924	DEFECT	0.3525157220407075	WITHOUT_CLASSIFICATION
/* It looks better if the height increases, too */	WITHOUT_CLASSIFICATION	0.9999788741274896	WITHOUT_CLASSIFICATION	2.11258725103162E-5	DEFECT
// TODO: 10 and 120 were found by trial and error.  Calculate them.	WITHOUT_CLASSIFICATION	0.5831904565895981	DEFECT	0.41680954341040194	WITHOUT_CLASSIFICATION
//pack();	WITHOUT_CLASSIFICATION	0.9999336058011948	WITHOUT_CLASSIFICATION	6.639419880525388E-5	DEFECT
// Not localized:	WITHOUT_CLASSIFICATION	0.9999899821508987	WITHOUT_CLASSIFICATION	1.0017849101296734E-5	DEFECT
// Alphabetic order!	WITHOUT_CLASSIFICATION	0.9999998400296004	WITHOUT_CLASSIFICATION	1.599703995468543E-7	DEFECT
// Alphabetic order!	WITHOUT_CLASSIFICATION	0.9999998400296004	WITHOUT_CLASSIFICATION	1.599703995468543E-7	DEFECT
/* end class AboutBox */	WITHOUT_CLASSIFICATION	0.999960564487844	WITHOUT_CLASSIFICATION	3.943551215608146E-5	DEFECT
// Save project at slightly lower priority to keep UI responsive	WITHOUT_CLASSIFICATION	0.9999904244821581	WITHOUT_CLASSIFICATION	9.575517841962527E-6	DEFECT
// saves the project	WITHOUT_CLASSIFICATION	0.9999987062132298	WITHOUT_CLASSIFICATION	1.2937867701210756E-6	DEFECT
/* MVW: We should use default font sizes as much as possible.         * BTW, this impacts only the width, and reduces readibility:         */	WITHOUT_CLASSIFICATION	0.9980471604377902	WITHOUT_CLASSIFICATION	0.0019528395622097547	DEFECT
//        setFont(LookAndFeelMgr.getInstance().getSmallFont());	WITHOUT_CLASSIFICATION	0.9999997047472806	WITHOUT_CLASSIFICATION	2.9525271944689073E-7	DEFECT
// This enables tooltips for tree; this one won't be shown:	WITHOUT_CLASSIFICATION	0.9996239830781196	WITHOUT_CLASSIFICATION	3.7601692188042027E-4	DEFECT
/* The default (16) puts the icons too close together: */	WITHOUT_CLASSIFICATION	0.9999973394540276	WITHOUT_CLASSIFICATION	2.6605459723286717E-6	DEFECT
// ------------ methods that override JTree methods ---------	WITHOUT_CLASSIFICATION	0.9999965779749677	WITHOUT_CLASSIFICATION	3.4220250324309998E-6	DEFECT
/*                 * If the name is too long or multi-line (e.g. for comments)                 * then we reduce to the first line or 80 chars.                 */	WITHOUT_CLASSIFICATION	0.9999999596870125	WITHOUT_CLASSIFICATION	4.0312987467328436E-8	DEFECT
// Look for stereotype	WITHOUT_CLASSIFICATION	0.9999945329820421	WITHOUT_CLASSIFICATION	5.467017957868389E-6	DEFECT
// Use default formatting for any other type of UML element	WITHOUT_CLASSIFICATION	0.9999997548546827	WITHOUT_CLASSIFICATION	2.451453172649142E-7	DEFECT
// ------------- other methods ------------------	WITHOUT_CLASSIFICATION	0.9999993896667633	WITHOUT_CLASSIFICATION	6.103332366531207E-7	DEFECT
/* Labels at the left ... */	WITHOUT_CLASSIFICATION	0.9997751968418082	WITHOUT_CLASSIFICATION	2.2480315819185603E-4	DEFECT
/* ... and fields at the right. */	WITHOUT_CLASSIFICATION	0.9992946806705024	WITHOUT_CLASSIFICATION	7.053193294976326E-4	DEFECT
/* The user's full name: */	WITHOUT_CLASSIFICATION	0.9999339948246414	WITHOUT_CLASSIFICATION	6.600517535863355E-5	DEFECT
/* The user's email: */	WITHOUT_CLASSIFICATION	0.999974553312047	WITHOUT_CLASSIFICATION	2.544668795303298E-5	DEFECT
/* The project description: */	WITHOUT_CLASSIFICATION	0.9999825323313966	WITHOUT_CLASSIFICATION	1.7467668603417565E-5	DEFECT
/* This non-editable field shows          * the version of the ArgoUML          * that last saved this project: */	WITHOUT_CLASSIFICATION	0.9997376833854266	WITHOUT_CLASSIFICATION	2.6231661457350424E-4	DEFECT
/* We need to fill the whole pane,          * so that the description field can          * take all available space: */	WITHOUT_CLASSIFICATION	0.999996756624752	WITHOUT_CLASSIFICATION	3.2433752479727333E-6	DEFECT
// There is no default description.	WITHOUT_CLASSIFICATION	0.999999722455326	WITHOUT_CLASSIFICATION	2.775446739871931E-7	DEFECT
// //////	WITHOUT_CLASSIFICATION	0.9999958158809992	WITHOUT_CLASSIFICATION	4.184119000818988E-6	DEFECT
// Defer all work until we're actually needed	WITHOUT_CLASSIFICATION	0.9999548689524151	WITHOUT_CLASSIFICATION	4.513104758482433E-5	DEFECT
// ////////////	WITHOUT_CLASSIFICATION	0.9999974615316712	WITHOUT_CLASSIFICATION	2.5384683288212368E-6	DEFECT
// //////////	WITHOUT_CLASSIFICATION	0.9999974615316712	WITHOUT_CLASSIFICATION	2.5384683288212368E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
// these are blue in Metal Default Theme	WITHOUT_CLASSIFICATION	0.999998094716092	WITHOUT_CLASSIFICATION	1.9052839080308742E-6	DEFECT
// these are gray in Metal Default Theme	WITHOUT_CLASSIFICATION	0.9999987592502854	WITHOUT_CLASSIFICATION	1.240749714676858E-6	DEFECT
//////////////////////////////////////////////////////////////// // ActionListener implementation	WITHOUT_CLASSIFICATION	0.9999907523212065	WITHOUT_CLASSIFICATION	9.247678793560217E-6	DEFECT
// //////	WITHOUT_CLASSIFICATION	0.9999958158809992	WITHOUT_CLASSIFICATION	4.184119000818988E-6	DEFECT
// /////	WITHOUT_CLASSIFICATION	0.9999958158809992	WITHOUT_CLASSIFICATION	4.184119000818988E-6	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getPrimary1()     */	WITHOUT_CLASSIFICATION	0.9999998605538225	WITHOUT_CLASSIFICATION	1.3944617753017568E-7	DEFECT
//    private JCheckBox jchbBold = null;	WITHOUT_CLASSIFICATION	0.9999971620369982	WITHOUT_CLASSIFICATION	2.8379630018161367E-6	DEFECT
// find and add all subdirectories	WITHOUT_CLASSIFICATION	0.9999999021677083	WITHOUT_CLASSIFICATION	9.783229173725682E-8	DEFECT
//    private JCheckBox jchbItalic = null;	WITHOUT_CLASSIFICATION	0.9999988228958618	WITHOUT_CLASSIFICATION	1.1771041381609298E-6	DEFECT
// Initialize font faces list	WITHOUT_CLASSIFICATION	0.9999944834542491	WITHOUT_CLASSIFICATION	5.516545750939369E-6	DEFECT
// Most of this code originates from ActionOpenProject.	WITHOUT_CLASSIFICATION	0.9999996981394722	WITHOUT_CLASSIFICATION	3.0186052774750105E-7	DEFECT
// Initialize font sizes list	WITHOUT_CLASSIFICATION	0.9999961763529295	WITHOUT_CLASSIFICATION	3.823647070494112E-6	DEFECT
//            jContentPane.add(getJchbBold(), gridBagConstraints2); //            jContentPane.add(getJchbItalic(), gridBagConstraints3);	WITHOUT_CLASSIFICATION	0.9999999480700463	WITHOUT_CLASSIFICATION	5.1929953702111166E-8	DEFECT
/* Try adding the extension from the chosen filter. */	WITHOUT_CLASSIFICATION	0.9999878662087154	WITHOUT_CLASSIFICATION	1.2133791284666555E-5	DEFECT
//////////////////////////////////////////////////////////////// // MouseListener implementation	WITHOUT_CLASSIFICATION	0.9999889475117217	WITHOUT_CLASSIFICATION	1.1052488278232078E-5	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
/*     * @see java.lang.Runnable#run()     */	WITHOUT_CLASSIFICATION	0.9999977807464051	WITHOUT_CLASSIFICATION	2.2192535948478568E-6	DEFECT
// these are blue in Metal Default Theme	WITHOUT_CLASSIFICATION	0.999998094716092	WITHOUT_CLASSIFICATION	1.9052839080308742E-6	DEFECT
// these are gray in Metal Default Theme	WITHOUT_CLASSIFICATION	0.9999987592502854	WITHOUT_CLASSIFICATION	1.240749714676858E-6	DEFECT
//////////////////////////////////////////////////////////////// // KeyListener implementation	WITHOUT_CLASSIFICATION	0.9999557737564363	WITHOUT_CLASSIFICATION	4.422624356364693E-5	DEFECT
//////////////////////////////////////////////////////////////// // ListSelectionListener implementation	WITHOUT_CLASSIFICATION	0.999973022937609	WITHOUT_CLASSIFICATION	2.6977062390955943E-5	DEFECT
// diagrams are not placed in search results	WITHOUT_CLASSIFICATION	0.9999846929375352	WITHOUT_CLASSIFICATION	1.5307062464801687E-5	DEFECT
// Only return once per diagram so we don't, for example, find // a class as a diagram element and also as a child of a package // which is on the diagram	WITHOUT_CLASSIFICATION	0.9999999540153771	WITHOUT_CLASSIFICATION	4.598462291915431E-8	DEFECT
// no related	WITHOUT_CLASSIFICATION	0.9999999217181139	WITHOUT_CLASSIFICATION	7.828188613038875E-8	DEFECT
//TODO: tabs for class, state, usecase, help	WITHOUT_CLASSIFICATION	0.9356283495016097	WITHOUT_CLASSIFICATION	0.06437165049839035	DEFECT
// empty implementation - we only handle mouseClicked	WITHOUT_CLASSIFICATION	0.9999980538554535	WITHOUT_CLASSIFICATION	1.946144546482959E-6	DEFECT
// TabResults has really large preferred height, so divide in // half to reduce size of dialog which will be sized based on // this preferred size.	WITHOUT_CLASSIFICATION	0.9998182477209357	WITHOUT_CLASSIFICATION	1.8175227906417802E-4	DEFECT
// Load project at slightly lower priority to keep UI responsive	WITHOUT_CLASSIFICATION	0.9999974154946396	WITHOUT_CLASSIFICATION	2.5845053604640643E-6	DEFECT
//JTabbedPane tabs = new JTabbedPane(); //mainPanel.add(tabs, BorderLayout.CENTER); //tabs.addTab("All Diagrams", allDiagrams);	WITHOUT_CLASSIFICATION	0.9999997463708896	WITHOUT_CLASSIFICATION	2.5362911046731986E-7	DEFECT
/* The south panel always has tabs - but they are             * added (later) elsewhere.             */	WITHOUT_CLASSIFICATION	0.9999550837169012	WITHOUT_CLASSIFICATION	4.491628309880822E-5	DEFECT
// loads the project	WITHOUT_CLASSIFICATION	0.9999984580106193	WITHOUT_CLASSIFICATION	1.5419893808109437E-6	DEFECT
// default tab todo	WITHOUT_CLASSIFICATION	0.9999957571695335	WITHOUT_CLASSIFICATION	4.242830466578024E-6	DEFECT
// Special case for backward compatibility	WITHOUT_CLASSIFICATION	0.9999995297337223	WITHOUT_CLASSIFICATION	4.702662776937324E-7	DEFECT
// default tab todo	WITHOUT_CLASSIFICATION	0.9999957571695335	WITHOUT_CLASSIFICATION	4.242830466578024E-6	DEFECT
// Select prop panel if current panel is not appropriate // for selected target	WITHOUT_CLASSIFICATION	0.999992808993175	WITHOUT_CLASSIFICATION	7.19100682508478E-6	DEFECT
// not visible any more - so remove as listener	WITHOUT_CLASSIFICATION	0.999995951309949	WITHOUT_CLASSIFICATION	4.048690050964047E-6	DEFECT
// Newly selected tab may have stale target info, so generate // a new set target event for it to refresh it	WITHOUT_CLASSIFICATION	0.9999999999271569	WITHOUT_CLASSIFICATION	7.284310523381872E-11	DEFECT
// update the previously selected tab	WITHOUT_CLASSIFICATION	0.9999998912744371	WITHOUT_CLASSIFICATION	1.0872556289873724E-7	DEFECT
// The other tabs need to be updated depending on the selection.	WITHOUT_CLASSIFICATION	0.9999999648932726	WITHOUT_CLASSIFICATION	3.510672735508732E-8	DEFECT
// empty implementation - we only handle mouseClicked	WITHOUT_CLASSIFICATION	0.9999980538554535	WITHOUT_CLASSIFICATION	1.946144546482959E-6	DEFECT
// empty implementation - we only handle mouseClicked	WITHOUT_CLASSIFICATION	0.9999980538554535	WITHOUT_CLASSIFICATION	1.946144546482959E-6	DEFECT
// empty implementation - we only handle mouseClicked	WITHOUT_CLASSIFICATION	0.9999980538554535	WITHOUT_CLASSIFICATION	1.946144546482959E-6	DEFECT
// TODO: Quick return here for target == null? - tfm	WITHOUT_CLASSIFICATION	0.6068047909201694	WITHOUT_CLASSIFICATION	0.3931952090798306	DEFECT
/*     * @see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999994446406183	WITHOUT_CLASSIFICATION	5.553593817324716E-7	DEFECT
/*     * @see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999997746694292	WITHOUT_CLASSIFICATION	2.2533057064832407E-7	DEFECT
// Process the listeners last to first, notifying // those that are interested in this event	WITHOUT_CLASSIFICATION	0.9999999594702297	WITHOUT_CLASSIFICATION	4.052977032330427E-8	DEFECT
// Process the listeners last to first, notifying // those that are interested in this event	WITHOUT_CLASSIFICATION	0.9999999594702297	WITHOUT_CLASSIFICATION	4.052977032330427E-8	DEFECT
// Lazily create the event:	WITHOUT_CLASSIFICATION	0.9999995009738529	WITHOUT_CLASSIFICATION	4.99026147136317E-7	DEFECT
// Lazily create the event:	WITHOUT_CLASSIFICATION	0.9999995009738529	WITHOUT_CLASSIFICATION	4.99026147136317E-7	DEFECT
// Lazily create the event:	WITHOUT_CLASSIFICATION	0.9999995009738529	WITHOUT_CLASSIFICATION	4.99026147136317E-7	DEFECT
// Lazily create the event:	WITHOUT_CLASSIFICATION	0.9999995009738529	WITHOUT_CLASSIFICATION	4.99026147136317E-7	DEFECT
// Lazily create the event:	WITHOUT_CLASSIFICATION	0.9999995009738529	WITHOUT_CLASSIFICATION	4.99026147136317E-7	DEFECT
// Guaranteed to return a non-null array	WITHOUT_CLASSIFICATION	0.9999999594285716	WITHOUT_CLASSIFICATION	4.05714284274186E-8	DEFECT
// Guaranteed to return a non-null array	WITHOUT_CLASSIFICATION	0.9999999594285716	WITHOUT_CLASSIFICATION	4.05714284274186E-8	DEFECT
// Guaranteed to return a non-null array	WITHOUT_CLASSIFICATION	0.9999999594285716	WITHOUT_CLASSIFICATION	4.05714284274186E-8	DEFECT
// Guaranteed to return a non-null array	WITHOUT_CLASSIFICATION	0.9999999594285716	WITHOUT_CLASSIFICATION	4.05714284274186E-8	DEFECT
// Guaranteed to return a non-null array	WITHOUT_CLASSIFICATION	0.9999999594285716	WITHOUT_CLASSIFICATION	4.05714284274186E-8	DEFECT
// Guaranteed to return a non-null array	WITHOUT_CLASSIFICATION	0.9999999594285716	WITHOUT_CLASSIFICATION	4.05714284274186E-8	DEFECT
//          Guaranteed to return a non-null array	WITHOUT_CLASSIFICATION	0.9999999684450888	WITHOUT_CLASSIFICATION	3.1554911236122916E-8	DEFECT
// ---------------- listener management ----------------	WITHOUT_CLASSIFICATION	0.9999994756439157	WITHOUT_CLASSIFICATION	5.243560842911941E-7	DEFECT
// --------------- tree nodes -------------------------	WITHOUT_CLASSIFICATION	0.9999971106080594	WITHOUT_CLASSIFICATION	2.8893919405153863E-6	DEFECT
// ------------- tree structure -----------------	WITHOUT_CLASSIFICATION	0.999999893115536	WITHOUT_CLASSIFICATION	1.0688446392373876E-7	DEFECT
// see getValue(), setValue()	WITHOUT_CLASSIFICATION	0.9999992240700054	WITHOUT_CLASSIFICATION	7.759299946024407E-7	DEFECT
//Create a timer.	WITHOUT_CLASSIFICATION	0.9999972220226238	WITHOUT_CLASSIFICATION	2.777977376323975E-6	DEFECT
// Mount the glasspane on the component window	WITHOUT_CLASSIFICATION	0.9999996690902229	WITHOUT_CLASSIFICATION	3.309097771443469E-7	DEFECT
// keep track of the glasspane as an instance variable	WITHOUT_CLASSIFICATION	0.9999999562200554	WITHOUT_CLASSIFICATION	4.377994455391571E-8	DEFECT
// Start interception UI interactions	WITHOUT_CLASSIFICATION	0.9999997490126521	WITHOUT_CLASSIFICATION	2.509873479106836E-7	DEFECT
/*     * @see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999999678751464	WITHOUT_CLASSIFICATION	3.2124853621143575E-8	DEFECT
/*     * @see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)     */	WITHOUT_CLASSIFICATION	0.9999998903089655	WITHOUT_CLASSIFICATION	1.0969103444235637E-7	DEFECT
/* If action comes in with *no* modifiers, it is a pure                 * keyboard event (e.g. spacebar), so do it.  Anything else                 * is probably a mouse event, so ignore it. Mouse events are                 * dealt with by mousePressed() instead (see bottom of page).                 */	WITHOUT_CLASSIFICATION	0.9999999979515404	WITHOUT_CLASSIFICATION	2.048459628558951E-9	DEFECT
/* end class StylePanel */	WITHOUT_CLASSIFICATION	0.9998585642798145	WITHOUT_CLASSIFICATION	1.4143572018551713E-4	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999742573550743	WITHOUT_CLASSIFICATION	2.5742644925637842E-5	DEFECT
// Make sure the correspondence that we depend on doesn't change	WITHOUT_CLASSIFICATION	0.9999983314287441	WITHOUT_CLASSIFICATION	1.6685712560106429E-6	DEFECT
//getContentPane().add(_menuBar, BorderLayout.NORTH);	WITHOUT_CLASSIFICATION	0.9999980705496727	WITHOUT_CLASSIFICATION	1.9294503273911757E-6	DEFECT
// allows me to ask "Do you want to save first?"	WITHOUT_CLASSIFICATION	0.9999998883417217	WITHOUT_CLASSIFICATION	1.1165827825627626E-7	DEFECT
// Add listener for project changes	WITHOUT_CLASSIFICATION	0.9999999065593154	WITHOUT_CLASSIFICATION	9.344068466292218E-8	DEFECT
// add listener to get notified when active diagram changes	WITHOUT_CLASSIFICATION	0.9999999560124299	WITHOUT_CLASSIFICATION	4.398757002516398E-8	DEFECT
// Add a listener to focus changes. // Rationale: reset the undo manager to start a new chain.	WITHOUT_CLASSIFICATION	0.9999993123205217	WITHOUT_CLASSIFICATION	6.87679478333659E-7	DEFECT
/* We get many many events (why?), so let's filter: */	WITHOUT_CLASSIFICATION	0.9999736413787984	WITHOUT_CLASSIFICATION	2.6358621201578523E-5	DEFECT
// create the todopane	WITHOUT_CLASSIFICATION	0.9999977027771115	WITHOUT_CLASSIFICATION	2.2972228883918106E-6	DEFECT
/*         * @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)         */	WITHOUT_CLASSIFICATION	0.9999994577075367	WITHOUT_CLASSIFICATION	5.422924631974628E-7	DEFECT
/*     * @see javax.swing.JFrame#getJMenuBar()     */	WITHOUT_CLASSIFICATION	0.9999990272597914	WITHOUT_CLASSIFICATION	9.727402086653477E-7	DEFECT
/*     * @see java.awt.Component#setVisible(boolean)     */	WITHOUT_CLASSIFICATION	0.9999999436084731	WITHOUT_CLASSIFICATION	5.639152679469383E-8	DEFECT
// There are various details panes all of which could hold // different tabs pages according to users settings. // Place each pane in the required border area.	WITHOUT_CLASSIFICATION	0.9999999718579013	WITHOUT_CLASSIFICATION	2.8142098599876022E-8	DEFECT
// Toolbar boundary is the area between the menu and the status // bar. It contains the workarea at centre and the toolbar // position north, south, east or west.	WITHOUT_CLASSIFICATION	0.9999069205006422	WITHOUT_CLASSIFICATION	9.307949935769988E-5	DEFECT
// Add target listeners for details panes	WITHOUT_CLASSIFICATION	0.9999994756891415	WITHOUT_CLASSIFICATION	5.243108584157406E-7	DEFECT
// Convenience methods to return saved width and height values	WITHOUT_CLASSIFICATION	0.9999994901981996	WITHOUT_CLASSIFICATION	5.098018003916596E-7	DEFECT
// In theory there can be multiple details pane (work in // progress). It must first be determined which details // page contains the properties tab. Bob Tarling 7 Dec 2002	WITHOUT_CLASSIFICATION	0.9994088447683953	WITHOUT_CLASSIFICATION	5.91155231604636E-4	DEFECT
// The trySave method results in the save taking place in another thread. // If that completes without error the ProjectBrowser.exit() method will // be called which will actually exist the system.	WITHOUT_CLASSIFICATION	0.9994214922745317	WITHOUT_CLASSIFICATION	5.785077254684117E-4	DEFECT
/* end class WindowCloser */	WITHOUT_CLASSIFICATION	0.999981197779065	WITHOUT_CLASSIFICATION	1.8802220935054137E-5	DEFECT
// the project changed	WITHOUT_CLASSIFICATION	0.9999986418346039	WITHOUT_CLASSIFICATION	1.358165396118527E-6	DEFECT
//Designer.TheDesigner.getToDoList().removeAllElements();	WITHOUT_CLASSIFICATION	0.99999491525694	WITHOUT_CLASSIFICATION	5.084743060115673E-6	DEFECT
// update all panes	WITHOUT_CLASSIFICATION	0.9999995501187031	WITHOUT_CLASSIFICATION	4.4988129693346196E-7	DEFECT
///////////////////////////////////////////////////////////////////////// // TargetListener methods implemented so notified when selected // diagram changes. Used to update the window title.	WITHOUT_CLASSIFICATION	0.9999997502119393	WITHOUT_CLASSIFICATION	2.497880606518903E-7	DEFECT
// this method is invoked from several places, so we have to check // whether if the project uri is set or not	WITHOUT_CLASSIFICATION	0.9999999969908066	WITHOUT_CLASSIFICATION	3.0091935057334526E-9	DEFECT
// does the file really exists?	WITHOUT_CLASSIFICATION	0.9998694375815578	WITHOUT_CLASSIFICATION	1.3056241844210933E-4	DEFECT
// project file doesn't exist. let's pop up a message dialog..	WITHOUT_CLASSIFICATION	0.9999749622737082	WITHOUT_CLASSIFICATION	2.5037726291766604E-5	DEFECT
// ..and let's ask the user whether he wants to save the actual // project into a new file or not	WITHOUT_CLASSIFICATION	0.9999997605397397	WITHOUT_CLASSIFICATION	2.394602602219253E-7	DEFECT
// save action has been cancelled	WITHOUT_CLASSIFICATION	0.999956593024847	WITHOUT_CLASSIFICATION	4.340697515301866E-5	DEFECT
// Attempt to save this project under a new name.	WITHOUT_CLASSIFICATION	0.9999826270223917	WITHOUT_CLASSIFICATION	1.7372977608255232E-5	DEFECT
// Prompt the user for the new name.	WITHOUT_CLASSIFICATION	0.9999999268740548	WITHOUT_CLASSIFICATION	7.312594521844087E-8	DEFECT
// let's call the real save method	WITHOUT_CLASSIFICATION	0.9999117811325184	WITHOUT_CLASSIFICATION	8.82188674815575E-5	DEFECT
// Repair any errors in the project	WITHOUT_CLASSIFICATION	0.9999662145033392	WITHOUT_CLASSIFICATION	3.378549666081241E-5	DEFECT
/*             * notification of menu bar             */	WITHOUT_CLASSIFICATION	0.9999938513034614	WITHOUT_CLASSIFICATION	6.148696538622304E-6	DEFECT
/*     * Simulate some errors to repair.     * Replace with junits - Bob     */	WITHOUT_CLASSIFICATION	0.9999908017541245	WITHOUT_CLASSIFICATION	9.198245875562693E-6	DEFECT
// Change to true to enable testing	WITHOUT_CLASSIFICATION	0.9999999706204187	WITHOUT_CLASSIFICATION	2.9379581392313005E-8	DEFECT
// A Fig with a null owner	WITHOUT_CLASSIFICATION	0.9999951105519709	WITHOUT_CLASSIFICATION	4.889448029109023E-6	DEFECT
// A Fig with a null layer	WITHOUT_CLASSIFICATION	0.9999764900885924	WITHOUT_CLASSIFICATION	2.350991140767736E-5	DEFECT
// A Fig with a removed model element	WITHOUT_CLASSIFICATION	0.9999988529592945	WITHOUT_CLASSIFICATION	1.1470407055856968E-6	DEFECT
// Remove the old project first.  It's wasteful to create a temp // empty project, but too much of ArgoUML depends on having a // current project	WITHOUT_CLASSIFICATION	0.9999989948877921	WITHOUT_CLASSIFICATION	1.00511220798035E-6	DEFECT
// Let's save this project in the mru list	WITHOUT_CLASSIFICATION	0.9999935853471278	WITHOUT_CLASSIFICATION	6.414652872231256E-6	DEFECT
// Do nothing - these buttons are not shown.	WITHOUT_CLASSIFICATION	0.9999805317987238	WITHOUT_CLASSIFICATION	1.946820127624744E-5	DEFECT
// ignored - we only care about open/closing	WITHOUT_CLASSIFICATION	0.999999977865599	WITHOUT_CLASSIFICATION	2.21344009688714E-8	DEFECT
// Let's save this project as the last used one // in the configuration file	WITHOUT_CLASSIFICATION	0.9999998764056754	WITHOUT_CLASSIFICATION	1.2359432457314418E-7	DEFECT
// an error that can be corrected by the user, so no stack // trace, but instead an explanation and a hint how to fix	WITHOUT_CLASSIFICATION	0.9999697381378251	WITHOUT_CLASSIFICATION	3.026186217498084E-5	DEFECT
// an error that can be corrected by the user, so no stack // trace, but instead an explanation and a hint how to fix	WITHOUT_CLASSIFICATION	0.9999697381378251	WITHOUT_CLASSIFICATION	3.026186217498084E-5	DEFECT
// This is temporary. Load project // should create a new project // with its own UndoManager and so // there should be no Command	WITHOUT_CLASSIFICATION	0.9999979891881066	WITHOUT_CLASSIFICATION	2.010811893503415E-6	DEFECT
// Make sure save action is always reinstated	WITHOUT_CLASSIFICATION	0.9999959608431569	WITHOUT_CLASSIFICATION	4.039156843171902E-6	DEFECT
// We clear the save-required flag on the Swing event thread // in the hopes that it gets done after any other background // work (listener updates) that is being done there	WITHOUT_CLASSIFICATION	0.9999893266115571	WITHOUT_CLASSIFICATION	1.0673388442814516E-5	DEFECT
// adding project files icon	WITHOUT_CLASSIFICATION	0.999982800842206	WITHOUT_CLASSIFICATION	1.719915779397199E-5	DEFECT
/* end class ProjectBrowser */	WITHOUT_CLASSIFICATION	0.9998728313196055	WITHOUT_CLASSIFICATION	1.271686803945647E-4	DEFECT
// Defer initialization until we're visible	WITHOUT_CLASSIFICATION	0.999999816623214	WITHOUT_CLASSIFICATION	1.8337678596330728E-7	DEFECT
// Make the result inmediately visible in case of apply:	WITHOUT_CLASSIFICATION	0.9999949554823672	WITHOUT_CLASSIFICATION	5.044517632776158E-6	DEFECT
/* Disabled since it gives various problems: e.g. the toolbar icons         * get too wide. Also the default does not give the new java 5.0 looks.        SwingUtilities.updateComponentTreeUI(SwingUtilities.getRootPane(this));        */	WITHOUT_CLASSIFICATION	0.9999673566874501	WITHOUT_CLASSIFICATION	3.264331254998528E-5	DEFECT
//filled in later	WITHOUT_CLASSIFICATION	0.9999926489308474	WITHOUT_CLASSIFICATION	7.351069152555036E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
/*     * @see GUISettingsTabInterface#handleSettingsTabSave()     */	WITHOUT_CLASSIFICATION	0.999999985605382	WITHOUT_CLASSIFICATION	1.439461799369977E-8	DEFECT
/*     * @see GUISettingsTabInterface#handleSettingsTabCancel()     */	WITHOUT_CLASSIFICATION	0.9999999853745846	WITHOUT_CLASSIFICATION	1.4625415351249307E-8	DEFECT
/*     * @see GUISettingsTabInterface#getTabKey()     */	WITHOUT_CLASSIFICATION	0.9999999102292702	WITHOUT_CLASSIFICATION	8.977072975530897E-8	DEFECT
/*     * @see GUISettingsTabInterface#getTabPanel()     */	WITHOUT_CLASSIFICATION	0.999999934355492	WITHOUT_CLASSIFICATION	6.564450802978031E-8	DEFECT
/*     * @see javax.swing.table.TableModel#getColumnCount()     */	WITHOUT_CLASSIFICATION	0.9999999771675131	WITHOUT_CLASSIFICATION	2.2832486896250596E-8	DEFECT
/*     * @see javax.swing.table.TableModel#getColumnName(int)     */	WITHOUT_CLASSIFICATION	0.9999999598532113	WITHOUT_CLASSIFICATION	4.014678861954184E-8	DEFECT
/*     * @see javax.swing.table.TableModel#getRowCount()     */	WITHOUT_CLASSIFICATION	0.9999999315402422	WITHOUT_CLASSIFICATION	6.845975775898109E-8	DEFECT
/*     * @see javax.swing.table.TableModel#getValueAt(int, int)     */	WITHOUT_CLASSIFICATION	0.999999478015774	WITHOUT_CLASSIFICATION	5.21984226056784E-7	DEFECT
// Do nothing - these buttons are not shown.	WITHOUT_CLASSIFICATION	0.9999805317987238	WITHOUT_CLASSIFICATION	1.946820127624744E-5	DEFECT
// ignored - we only care about open/closing	WITHOUT_CLASSIFICATION	0.999999977865599	WITHOUT_CLASSIFICATION	2.21344009688714E-8	DEFECT
// Create new menu item if it doesn't exist for this class.	WITHOUT_CLASSIFICATION	0.999934769040486	WITHOUT_CLASSIFICATION	6.523095951400648E-5	DEFECT
// Make this change persistant	WITHOUT_CLASSIFICATION	0.9999980405425017	WITHOUT_CLASSIFICATION	1.9594574983151194E-6	DEFECT
// If menus don't containt menu item necessary for this class, create it	WITHOUT_CLASSIFICATION	0.9999191099463469	WITHOUT_CLASSIFICATION	8.089005365305836E-5	DEFECT
// If visibility is already changed for this class, respect it.	WITHOUT_CLASSIFICATION	0.9999670207552033	WITHOUT_CLASSIFICATION	3.297924479683023E-5	DEFECT
// If there is persistant state for this toolbar, respect it, // or add it to persistance data	WITHOUT_CLASSIFICATION	0.9999996165189352	WITHOUT_CLASSIFICATION	3.8348106479808195E-7	DEFECT
// Queue to event thread to prevent race during close	WITHOUT_CLASSIFICATION	0.9999999506317017	WITHOUT_CLASSIFICATION	4.936829824652863E-8	DEFECT
// Add toolbar.	WITHOUT_CLASSIFICATION	0.9999996095848371	WITHOUT_CLASSIFICATION	3.9041516296308334E-7	DEFECT
// Register popup menu with toolbar.	WITHOUT_CLASSIFICATION	0.9999995822033122	WITHOUT_CLASSIFICATION	4.177966878947057E-7	DEFECT
// these settings are needed to make the ProgressMonitor pop up early	WITHOUT_CLASSIFICATION	0.9999999635446116	WITHOUT_CLASSIFICATION	3.645538839615277E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(     *      java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.9999999066328071	WITHOUT_CLASSIFICATION	9.336719285167458E-8	DEFECT
/*     * @see java.awt.event.WindowListener#windowActivated(java.awt.event.WindowEvent)     */	WITHOUT_CLASSIFICATION	0.999999802871634	WITHOUT_CLASSIFICATION	1.971283659322738E-7	DEFECT
/*     * @see java.awt.event.WindowListener#windowDeiconified(java.awt.event.WindowEvent)     */	WITHOUT_CLASSIFICATION	0.9999999366544163	WITHOUT_CLASSIFICATION	6.334558358060908E-8	DEFECT
/*     * @see java.awt.event.WindowListener#windowIconified(java.awt.event.WindowEvent)     */	WITHOUT_CLASSIFICATION	0.9999999400433517	WITHOUT_CLASSIFICATION	5.995664830890346E-8	DEFECT
// Add settings from the settings registry.	WITHOUT_CLASSIFICATION	0.9999998894612392	WITHOUT_CLASSIFICATION	1.1053876090054291E-7	DEFECT
// Increase width to accommodate all tabs on one row.	WITHOUT_CLASSIFICATION	0.9999993564646508	WITHOUT_CLASSIFICATION	6.435353492256876E-7	DEFECT
// windowOpen state will be changed when window is activated	WITHOUT_CLASSIFICATION	0.9999994028975691	WITHOUT_CLASSIFICATION	5.971024309465709E-7	DEFECT
/*     * Called when the user has pressed Save. Performs "Save" in all Tabs.     */	WITHOUT_CLASSIFICATION	0.9999999067086882	WITHOUT_CLASSIFICATION	9.329131180230618E-8	DEFECT
/*     * Called when the user has pressed Cancel. Performs "Cancel" in all Tabs.     */	WITHOUT_CLASSIFICATION	0.9999999507132751	WITHOUT_CLASSIFICATION	4.928672495170405E-8	DEFECT
// We only request focus the first time we become visible	WITHOUT_CLASSIFICATION	0.9999999022924086	WITHOUT_CLASSIFICATION	9.770759124457556E-8	DEFECT
// ignored - we only care about open/closing	WITHOUT_CLASSIFICATION	0.999999977865599	WITHOUT_CLASSIFICATION	2.21344009688714E-8	DEFECT
// ignored - we only care about open/closing	WITHOUT_CLASSIFICATION	0.999999977865599	WITHOUT_CLASSIFICATION	2.21344009688714E-8	DEFECT
// Handle the same as an explicit cancel	WITHOUT_CLASSIFICATION	0.9999997593338258	WITHOUT_CLASSIFICATION	2.406661742017728E-7	DEFECT
// File load/save gets done on a background thread, so we'll  // probably have to queue this to the Swing event thread	WITHOUT_CLASSIFICATION	0.999998532234071	WITHOUT_CLASSIFICATION	1.4677659290794463E-6	DEFECT
// TODO: concatenate? - tfm // overwrite for now	WITHOUT_CLASSIFICATION	0.8884359215215226	WITHOUT_CLASSIFICATION	0.11156407847847746	DEFECT
/* end class StylePanelFigRRect */	WITHOUT_CLASSIFICATION	0.999724916703713	WITHOUT_CLASSIFICATION	2.750832962869452E-4	DEFECT
// Let the parent do its refresh.	WITHOUT_CLASSIFICATION	0.9999986857875437	WITHOUT_CLASSIFICATION	1.314212456228939E-6	DEFECT
// lets redraw the box	WITHOUT_CLASSIFICATION	0.9999991330027684	WITHOUT_CLASSIFICATION	8.669972316274865E-7	DEFECT
/*     * @see java.awt.Component#getPreferredSize()     */	WITHOUT_CLASSIFICATION	0.9999996002044008	WITHOUT_CLASSIFICATION	3.997955991593481E-7	DEFECT
/*     * @see java.awt.Component#getMinimumSize()     */	WITHOUT_CLASSIFICATION	0.999999808153058	WITHOUT_CLASSIFICATION	1.9184694193655748E-7	DEFECT
/*     * Called when the user selects a tab, by clicking or otherwise.     *     * @see javax.swing.event.ChangeListener#stateChanged(javax.swing.event.ChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999999554490521	WITHOUT_CLASSIFICATION	4.455094796328353E-8	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// empty implementation - we only handle mouseClicked	WITHOUT_CLASSIFICATION	0.9999980538554535	WITHOUT_CLASSIFICATION	1.946144546482959E-6	DEFECT
// empty implementation - we only handle mouseClicked	WITHOUT_CLASSIFICATION	0.9999980538554535	WITHOUT_CLASSIFICATION	1.946144546482959E-6	DEFECT
// empty implementation - we only handle mouseClicked	WITHOUT_CLASSIFICATION	0.9999980538554535	WITHOUT_CLASSIFICATION	1.946144546482959E-6	DEFECT
// empty implementation - we only handle mouseClicked	WITHOUT_CLASSIFICATION	0.9999980538554535	WITHOUT_CLASSIFICATION	1.946144546482959E-6	DEFECT
// We don't know what thread events will be delivered on, so make sure // we run Swing methods on the Swing thread	WITHOUT_CLASSIFICATION	0.999994442107083	WITHOUT_CLASSIFICATION	5.557892917072435E-6	DEFECT
//This instead of the label ??? //displayPane.setBorder(new TitledBorder( //    Translator.localize("Display: ")));	WITHOUT_CLASSIFICATION	0.9999995432771402	WITHOUT_CLASSIFICATION	4.567228596992534E-7	DEFECT
// add in front of the others // add the label in front of the "pane"	WITHOUT_CLASSIFICATION	0.9999999570276884	WITHOUT_CLASSIFICATION	4.297231156539477E-8	DEFECT
// and finally, adjust the scrollbars to show the Fig	WITHOUT_CLASSIFICATION	0.9999927231881526	WITHOUT_CLASSIFICATION	7.276811847350633E-6	DEFECT
// % thresholds for bar color changes	WITHOUT_CLASSIFICATION	0.9999931622278904	WITHOUT_CLASSIFICATION	6.837772109716594E-6	DEFECT
// making it possible to jump to the modelroots	WITHOUT_CLASSIFICATION	0.9999993136439567	WITHOUT_CLASSIFICATION	6.863560432974228E-7	DEFECT
// org.argouml.ui.TabTable // TabMetrics // TabJavaSrc | TabSrc // TabUMLDisplay // TabHash	WITHOUT_CLASSIFICATION	0.9999998741309537	WITHOUT_CLASSIFICATION	1.2586904633424554E-7	DEFECT
/*     * Timer action method.  Periodically update our stats and force a repaint.     */	WITHOUT_CLASSIFICATION	0.9999980530520483	WITHOUT_CLASSIFICATION	1.946947951731985E-6	DEFECT
// Virtual memory (heap) stats	WITHOUT_CLASSIFICATION	0.9999960467016065	WITHOUT_CLASSIFICATION	3.953298393528661E-6	DEFECT
// Thin bar to show current allocated heap size	WITHOUT_CLASSIFICATION	0.999995040669724	WITHOUT_CLASSIFICATION	4.959330276093383E-6	DEFECT
// Thin bar to show current used	WITHOUT_CLASSIFICATION	0.9999984397475629	WITHOUT_CLASSIFICATION	1.560252437228165E-6	DEFECT
/*     * @see GUISettingsTabInterface#getTabPanel()     */	WITHOUT_CLASSIFICATION	0.999999934355492	WITHOUT_CLASSIFICATION	6.564450802978031E-8	DEFECT
// Do nothing - these buttons are not shown.	WITHOUT_CLASSIFICATION	0.9999805317987238	WITHOUT_CLASSIFICATION	1.946820127624744E-5	DEFECT
// the introducing label	WITHOUT_CLASSIFICATION	0.999996071565257	WITHOUT_CLASSIFICATION	3.928434742876785E-6	DEFECT
// how to handle empty target lists?  probably the // MultiEditorPane should only show an empty pane in that case	WITHOUT_CLASSIFICATION	0.9999754581113142	WITHOUT_CLASSIFICATION	2.4541888685730634E-5	DEFECT
//    private JPanel constraintsTab = new JPanel();	WITHOUT_CLASSIFICATION	0.9999999172349378	WITHOUT_CLASSIFICATION	8.276506215816896E-8	DEFECT
//The child is sometimes not found when the tree is being updated	WITHOUT_CLASSIFICATION	0.9999995351559373	WITHOUT_CLASSIFICATION	4.648440627491354E-7	DEFECT
//    private JTabbedPane tabs = new JTabbedPane();	WITHOUT_CLASSIFICATION	0.9999997255568097	WITHOUT_CLASSIFICATION	2.7444319027668976E-7	DEFECT
//        tabs.setMinimumSize(new Dimension(300, 250));	WITHOUT_CLASSIFICATION	0.9999987057438888	WITHOUT_CLASSIFICATION	1.2942561111481878E-6	DEFECT
//    private JPanel modifiedTab = new JPanel();	WITHOUT_CLASSIFICATION	0.9999997108536403	WITHOUT_CLASSIFICATION	2.8914635976987576E-7	DEFECT
/* The ActivityGraph. */	WITHOUT_CLASSIFICATION	0.9999956229769295	WITHOUT_CLASSIFICATION	4.377023070572755E-6	DEFECT
//    private JPanel tagValsTab = new JPanel();	WITHOUT_CLASSIFICATION	0.9999995330935636	WITHOUT_CLASSIFICATION	4.669064363509606E-7	DEFECT
// open space at gridy = 2;	WITHOUT_CLASSIFICATION	0.9999980897809955	WITHOUT_CLASSIFICATION	1.910219004481769E-6	DEFECT
//        mainPanel.add(north, BorderLayout.NORTH);	WITHOUT_CLASSIFICATION	0.9999997292847713	WITHOUT_CLASSIFICATION	2.7071522873351114E-7	DEFECT
// Any type	WITHOUT_CLASSIFICATION	0.9999943358726753	WITHOUT_CLASSIFICATION	5.664127324695986E-6	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(     * java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.9999999141788886	WITHOUT_CLASSIFICATION	8.582111147932973E-8	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// TODO: Localize	WITHOUT_CLASSIFICATION	0.6474842779592924	DEFECT	0.3525157220407075	WITHOUT_CLASSIFICATION
//////////////////////////////////////////////////////////////// // MouseListener implementation	WITHOUT_CLASSIFICATION	0.9999889475117217	WITHOUT_CLASSIFICATION	1.1052488278232078E-5	DEFECT
// empty implementation - we only handle mouseClicked	WITHOUT_CLASSIFICATION	0.9999980538554535	WITHOUT_CLASSIFICATION	1.946144546482959E-6	DEFECT
// empty implementation - we only handle mouseClicked	WITHOUT_CLASSIFICATION	0.9999980538554535	WITHOUT_CLASSIFICATION	1.946144546482959E-6	DEFECT
// empty implementation - we only handle mouseClicked	WITHOUT_CLASSIFICATION	0.9999980538554535	WITHOUT_CLASSIFICATION	1.946144546482959E-6	DEFECT
// empty implementation - we only handle mouseClicked	WITHOUT_CLASSIFICATION	0.9999980538554535	WITHOUT_CLASSIFICATION	1.946144546482959E-6	DEFECT
// This text is for the developers. // It doesn't need to be localized.	WITHOUT_CLASSIFICATION	0.9999986740292938	WITHOUT_CLASSIFICATION	1.3259707063092267E-6	DEFECT
// These shouldn't really be <br> instead of <p> elements, but // the lines all get run together when pasted into a browser window.	WITHOUT_CLASSIFICATION	0.9891368670699612	WITHOUT_CLASSIFICATION	0.010863132930038799	DEFECT
//        JPanel north = new JPanel(); //        north.setLayout(new BorderLayout()); //        north.add(tabs, BorderLayout.CENTER);	WITHOUT_CLASSIFICATION	0.9999997802775777	WITHOUT_CLASSIFICATION	2.1972242238839124E-7	DEFECT
//        initConstraintsTab(); //        tabs.addTab(Translator.localize("tab.constraints"), //	WITHOUT_CLASSIFICATION	0.9999999784086018	WITHOUT_CLASSIFICATION	2.1591398224794086E-8	DEFECT
//        initTagValsTab(); //        tabs.addTab(Translator.localize("dialog.find.tab.tagged-values"), //                tagValsTab); //        tabs.setEnabledAt(2, false);	WITHOUT_CLASSIFICATION	0.9999997797011742	WITHOUT_CLASSIFICATION	2.2029882594537523E-7	DEFECT
/* end class FindDialog */	WITHOUT_CLASSIFICATION	0.9996677161111015	WITHOUT_CLASSIFICATION	3.322838888985643E-4	DEFECT
//name += " in " + dName;	WITHOUT_CLASSIFICATION	0.9999914584305819	WITHOUT_CLASSIFICATION	8.541569418054095E-6	DEFECT
// Not in UML 2.x (or metatypes) //        type.addItem(PredicateMType.create( //                Model.getMetaTypes().getActivityGraph()));	WITHOUT_CLASSIFICATION	0.9999986305903699	WITHOUT_CLASSIFICATION	1.3694096301668805E-6	DEFECT
// Set the name and icon:	WITHOUT_CLASSIFICATION	0.9999399051993948	WITHOUT_CLASSIFICATION	6.009480060530374E-5	DEFECT
//help tab is 0	WITHOUT_CLASSIFICATION	0.9999940259621152	WITHOUT_CLASSIFICATION	5.97403788476257E-6	DEFECT
// end runGC_actionPerformed()	WITHOUT_CLASSIFICATION	0.9999989245054951	WITHOUT_CLASSIFICATION	1.0754945049118681E-6	DEFECT
/* end class PredicateMType */	WITHOUT_CLASSIFICATION	0.9998792973422364	WITHOUT_CLASSIFICATION	1.2070265776361304E-4	DEFECT
//end updateInfo()	WITHOUT_CLASSIFICATION	0.9999983230168122	WITHOUT_CLASSIFICATION	1.676983187786964E-6	DEFECT
/* end class NavigatorPane */	WITHOUT_CLASSIFICATION	0.9999851662279157	WITHOUT_CLASSIFICATION	1.4833772084246666E-5	DEFECT
// end copy_actionPerformed()	WITHOUT_CLASSIFICATION	0.9999987551530164	WITHOUT_CLASSIFICATION	1.2448469835471312E-6	DEFECT
/* end class ActionGotoDiagram */	WITHOUT_CLASSIFICATION	0.9999872625355811	WITHOUT_CLASSIFICATION	1.2737464418788593E-5	DEFECT
/* end class SystemInfoDialog */	WITHOUT_CLASSIFICATION	0.9998470901085207	WITHOUT_CLASSIFICATION	1.5290989147944813E-4	DEFECT
// clean the history	WITHOUT_CLASSIFICATION	0.9999976479072308	WITHOUT_CLASSIFICATION	2.352092769141625E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
//////////////////////////////////////////////////////////////// // main methods	WITHOUT_CLASSIFICATION	0.9999979898465433	WITHOUT_CLASSIFICATION	2.01015345670554E-6	DEFECT
/* But exclude elements that enclose others,                      * since their algorithms to calculate the minimum size                      * does not take enclosed objects into account: */	WITHOUT_CLASSIFICATION	0.9998925444880158	WITHOUT_CLASSIFICATION	1.0745551198414403E-4	DEFECT
//        super(Translator.localize("action.size-to-fit-contents"));	WITHOUT_CLASSIFICATION	0.9999999516142329	WITHOUT_CLASSIFICATION	4.838576701103457E-8	DEFECT
// unsupported. 	WITHOUT_CLASSIFICATION	0.999998754946795	WITHOUT_CLASSIFICATION	1.2450532049454165E-6	DEFECT
/* Only resize elements which the user would also be able             * to resize: */	WITHOUT_CLASSIFICATION	0.9999904666742245	WITHOUT_CLASSIFICATION	9.533325775483187E-6	DEFECT
// if a default action was voided then we have to save it	WITHOUT_CLASSIFICATION	0.9999995818294237	WITHOUT_CLASSIFICATION	4.1817057627080873E-7	DEFECT
// Set the name:	WITHOUT_CLASSIFICATION	0.9999848285153117	WITHOUT_CLASSIFICATION	1.5171484688285371E-5	DEFECT
// let's load the default shortcut for every action	WITHOUT_CLASSIFICATION	0.9999993826863737	WITHOUT_CLASSIFICATION	6.173136263115391E-7	DEFECT
/* end class ActionFind */	WITHOUT_CLASSIFICATION	0.9999493810587022	WITHOUT_CLASSIFICATION	5.0618941297709865E-5	DEFECT
// let's load the current shortcut from the configuration (as a string)	WITHOUT_CLASSIFICATION	0.9999994569960211	WITHOUT_CLASSIFICATION	5.430039789851019E-7	DEFECT
// generate menu	WITHOUT_CLASSIFICATION	0.9999882354471674	WITHOUT_CLASSIFICATION	1.176455283262075E-5	DEFECT
// it should never go here!	WITHOUT_CLASSIFICATION	0.999994325840485	WITHOUT_CLASSIFICATION	5.6741595149704415E-6	DEFECT
// view menu	WITHOUT_CLASSIFICATION	0.9999871087379554	WITHOUT_CLASSIFICATION	1.2891262044640558E-5	DEFECT
// file menu	WITHOUT_CLASSIFICATION	0.9999906473067066	WITHOUT_CLASSIFICATION	9.352693293344271E-6	DEFECT
// align submenu	WITHOUT_CLASSIFICATION	0.9999992886394606	WITHOUT_CLASSIFICATION	7.11360539312719E-7	DEFECT
// edit menu	WITHOUT_CLASSIFICATION	0.9999664449143378	WITHOUT_CLASSIFICATION	3.35550856622168E-5	DEFECT
// create menu	WITHOUT_CLASSIFICATION	0.9999981506675144	WITHOUT_CLASSIFICATION	1.849332485564567E-6	DEFECT
// arrange menu	WITHOUT_CLASSIFICATION	0.9999947899644568	WITHOUT_CLASSIFICATION	5.210035543220254E-6	DEFECT
// help menu	WITHOUT_CLASSIFICATION	0.9999740214869766	WITHOUT_CLASSIFICATION	2.5978513023484237E-5	DEFECT
// help menu	WITHOUT_CLASSIFICATION	0.9999740214869766	WITHOUT_CLASSIFICATION	2.5978513023484237E-5	DEFECT
/* This ID is used as DEFAULT_ID ! */	WITHOUT_CLASSIFICATION	0.9999411091714792	WITHOUT_CLASSIFICATION	5.8890828520797515E-5	DEFECT
/* end class ActionAboutArgoUML */	WITHOUT_CLASSIFICATION	0.9999910555151111	WITHOUT_CLASSIFICATION	8.944484888850603E-6	DEFECT
// distribute submenu	WITHOUT_CLASSIFICATION	0.999998079139061	WITHOUT_CLASSIFICATION	1.920860938962579E-6	DEFECT
/* end class ActionPageSetup */	WITHOUT_CLASSIFICATION	0.9999893972445839	WITHOUT_CLASSIFICATION	1.060275541606024E-5	DEFECT
// trap focus traversal keys also 	WITHOUT_CLASSIFICATION	0.9999963500327467	WITHOUT_CLASSIFICATION	3.649967253243682E-6	DEFECT
// let's add the key printing logic	WITHOUT_CLASSIFICATION	0.9999960164945728	WITHOUT_CLASSIFICATION	3.983505427227116E-6	DEFECT
// Lazily create the event:	WITHOUT_CLASSIFICATION	0.9999995009738529	WITHOUT_CLASSIFICATION	4.99026147136317E-7	DEFECT
// Guaranteed to return a non-null array	WITHOUT_CLASSIFICATION	0.9999999594285716	WITHOUT_CLASSIFICATION	4.05714284274186E-8	DEFECT
/* The "Close window" shortcut (ALT+F4) actually can't             * be registered as a shortcut,             * because it closes the configuration dialog! */	WITHOUT_CLASSIFICATION	0.9998253390168423	WITHOUT_CLASSIFICATION	1.7466098315753768E-4	DEFECT
// if a not-default current shortcut was added, then we have to // save it	WITHOUT_CLASSIFICATION	0.9999990543317996	WITHOUT_CLASSIFICATION	9.456682002812546E-7	DEFECT
// if the actual is not going to be saved, then try to remove it // (as it could have been cancelled)	WITHOUT_CLASSIFICATION	0.9999989522064094	WITHOUT_CLASSIFICATION	1.0477935904691444E-6	DEFECT
// no modifiers - let's check if the key is valid	WITHOUT_CLASSIFICATION	0.9999996577417797	WITHOUT_CLASSIFICATION	3.422582202841933E-7	DEFECT
// middle of shortcut 	WITHOUT_CLASSIFICATION	0.999999273069603	WITHOUT_CLASSIFICATION	7.269303970608497E-7	DEFECT
// Only show actions for associations not already on diagram	WITHOUT_CLASSIFICATION	0.9998562397589243	WITHOUT_CLASSIFICATION	1.4376024107568285E-4	DEFECT
// add last recently used list _before_ exit menu	WITHOUT_CLASSIFICATION	0.9999992788570702	WITHOUT_CLASSIFICATION	7.211429298024005E-7	DEFECT
// KeyStroke f7 = KeyStroke.getKeyStroke(KeyEvent.VK_F7, 0);	WITHOUT_CLASSIFICATION	0.9999825177790573	WITHOUT_CLASSIFICATION	1.748222094265984E-5	DEFECT
// and exit menu entry starting with separator.	WITHOUT_CLASSIFICATION	0.9999998930992501	WITHOUT_CLASSIFICATION	1.0690074981011827E-7	DEFECT
// This used to be deferred, but it's only 30-40 msec of work.	WITHOUT_CLASSIFICATION	0.9999795196788088	WITHOUT_CLASSIFICATION	2.04803211911402E-5	DEFECT
// now, let's set up the "selected action" container	WITHOUT_CLASSIFICATION	0.9999999919039807	WITHOUT_CLASSIFICATION	8.096019419817593E-9	DEFECT
// generate.add(Actions.GenerateWeb);	WITHOUT_CLASSIFICATION	0.9999996842138726	WITHOUT_CLASSIFICATION	3.1578612734892535E-7	DEFECT
// Add the help menu item.	WITHOUT_CLASSIFICATION	0.9999805036670271	WITHOUT_CLASSIFICATION	1.9496332972994403E-5	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the name and icon:	WITHOUT_CLASSIFICATION	0.9999399051993948	WITHOUT_CLASSIFICATION	6.009480060530374E-5	DEFECT
// clean the history	WITHOUT_CLASSIFICATION	0.9999976479072308	WITHOUT_CLASSIFICATION	2.352092769141625E-6	DEFECT
// Comment out when we are ready to release undo/redo //        JMenuItem undoItem = edit.add( //                ProjectActions.getInstance().getUndoAction()); //        setMnemonic(undoItem, "Undo"); //        ShortcutMgr.assignAccelerator(undoItem, ShortcutMgr.ACTION_UNDO); // //        JMenuItem redoItem = edit.add( //                ProjectActions.getInstance().getRedoAction()); //        setMnemonic(redoItem, "Redo"); //        ShortcutMgr.assignAccelerator(redoItem, ShortcutMgr.ACTION_REDO); // //        edit.addSeparator();	WITHOUT_CLASSIFICATION	0.9999999972523153	WITHOUT_CLASSIFICATION	2.747684735807463E-9	DEFECT
// JMenuItem cutItem = edit.add(ActionCut.getInstance()); // setMnemonic(cutItem, "Cut"); // setAccelerator(cutItem, ctrlX); // // JMenuItem copyItem = edit.add(ActionCopy.getInstance()); // setMnemonic(copyItem, "Copy"); // setAccelerator(copyItem, ctrlC); // // JMenuItem pasteItem = edit.add(ActionPaste.getInstance()); // setMnemonic(pasteItem, "Paste"); // setAccelerator(pasteItem, ctrlV); // // edit.addSeparator();	WITHOUT_CLASSIFICATION	0.9999995618678066	WITHOUT_CLASSIFICATION	4.38132193457456E-7	DEFECT
/* Create the edit toolbar based on the Menu.             * All menuItems that have an Icon are presumed to             * be based upon an Action,             * and these Actions are used in the toolbar.  */	WITHOUT_CLASSIFICATION	0.9999908587767518	WITHOUT_CLASSIFICATION	9.141223248287284E-6	DEFECT
// setHelpMenu(help);	WITHOUT_CLASSIFICATION	0.9999990934875413	WITHOUT_CLASSIFICATION	9.065124586538203E-7	DEFECT
//Component or Action	WITHOUT_CLASSIFICATION	0.9999982763668225	WITHOUT_CLASSIFICATION	1.723633177503571E-6	DEFECT
// set maximum length of menu entry	WITHOUT_CLASSIFICATION	0.9999999668193155	WITHOUT_CLASSIFICATION	3.318068453301881E-8	DEFECT
//JMenuItem item = _fileMenu.add(new ActionReopenProject(filename));	WITHOUT_CLASSIFICATION	0.9999998180883521	WITHOUT_CLASSIFICATION	1.8191164783933128E-7	DEFECT
// the text is used by the event handler for opening the project	WITHOUT_CLASSIFICATION	0.9999999938398618	WITHOUT_CLASSIFICATION	6.160138143539471E-9	DEFECT
// create all nessessary configuration keys for lru	WITHOUT_CLASSIFICATION	0.9999994174501441	WITHOUT_CLASSIFICATION	5.825498559302142E-7	DEFECT
// holds file menu	WITHOUT_CLASSIFICATION	0.999853224505477	WITHOUT_CLASSIFICATION	1.4677549452313322E-4	DEFECT
// text is short, tooltip is long	WITHOUT_CLASSIFICATION	0.9999996726259498	WITHOUT_CLASSIFICATION	3.2737405019383393E-7	DEFECT
// read existing file names from configuration	WITHOUT_CLASSIFICATION	0.999999814148952	WITHOUT_CLASSIFICATION	1.858510480382004E-7	DEFECT
// empty entry stops reading --> last line!	WITHOUT_CLASSIFICATION	0.9999995544817009	WITHOUT_CLASSIFICATION	4.4551829917600816E-7	DEFECT
// this is the recent count	WITHOUT_CLASSIFICATION	0.9998538186250499	WITHOUT_CLASSIFICATION	1.461813749500832E-4	DEFECT
// delete all existing entries	WITHOUT_CLASSIFICATION	0.9999999683850402	WITHOUT_CLASSIFICATION	3.1614959751837607E-8	DEFECT
// add new entry as first entry	WITHOUT_CLASSIFICATION	0.999999847390873	WITHOUT_CLASSIFICATION	1.526091270167298E-7	DEFECT
// add other existing entries, but filter the just added one	WITHOUT_CLASSIFICATION	0.9999999340532896	WITHOUT_CLASSIFICATION	6.594671032755084E-8	DEFECT
// save count	WITHOUT_CLASSIFICATION	0.9999991435941727	WITHOUT_CLASSIFICATION	8.564058272870396E-7	DEFECT
// and store configuration props	WITHOUT_CLASSIFICATION	0.9999999670367318	WITHOUT_CLASSIFICATION	3.296326827939398E-8	DEFECT
/* end class ActionExit */	WITHOUT_CLASSIFICATION	0.99995355945002	WITHOUT_CLASSIFICATION	4.6440549980129455E-5	DEFECT
// box.setLocationRelativeTo(jframe);	WITHOUT_CLASSIFICATION	0.999999938790792	WITHOUT_CLASSIFICATION	6.120920805668674E-8	DEFECT
/* end class ActionHelp */	WITHOUT_CLASSIFICATION	0.9999690748551555	WITHOUT_CLASSIFICATION	3.0925144844449646E-5	DEFECT
// instantiation not allowed	WITHOUT_CLASSIFICATION	0.9999991169798422	WITHOUT_CLASSIFICATION	8.830201578078504E-7	DEFECT
/* end class ActionPrint */	WITHOUT_CLASSIFICATION	0.999987490872159	WITHOUT_CLASSIFICATION	1.250912784105719E-5	DEFECT
// let's add the table, inside a JScrollPane	WITHOUT_CLASSIFICATION	0.999938038430434	WITHOUT_CLASSIFICATION	6.196156956600387E-5	DEFECT
/*         * @see javax.swing.table.TableModel#getColumnCount()         */	WITHOUT_CLASSIFICATION	0.9999999771675131	WITHOUT_CLASSIFICATION	2.2832486896250596E-8	DEFECT
/*         * @see javax.swing.table.TableModel#getColumnName(int)         */	WITHOUT_CLASSIFICATION	0.9999999598532113	WITHOUT_CLASSIFICATION	4.014678861954184E-8	DEFECT
/*         * @see javax.swing.table.TableModel#getRowCount()         */	WITHOUT_CLASSIFICATION	0.9999999315402422	WITHOUT_CLASSIFICATION	6.845975775898109E-8	DEFECT
/*         * @see javax.swing.table.TableModel#getValueAt(int, int)         */	WITHOUT_CLASSIFICATION	0.999999478015774	WITHOUT_CLASSIFICATION	5.21984226056784E-7	DEFECT
// Do nothing! // The next time we refresh, we will fetch the values again.	WITHOUT_CLASSIFICATION	0.9999995452849413	WITHOUT_CLASSIFICATION	4.547150587859063E-7	DEFECT
// Do nothing - these buttons are not shown.	WITHOUT_CLASSIFICATION	0.9999805317987238	WITHOUT_CLASSIFICATION	1.946820127624744E-5	DEFECT
//////////////////////////////////////////////////////////////// // main methods	WITHOUT_CLASSIFICATION	0.9999979898465433	WITHOUT_CLASSIFICATION	2.01015345670554E-6	DEFECT
// init from config // read number, write result as new default and prepare keys	WITHOUT_CLASSIFICATION	0.9999999461706564	WITHOUT_CLASSIFICATION	5.38293436865107E-8	DEFECT
// get already existing names from menu actions // real file names, not action names !	WITHOUT_CLASSIFICATION	0.9999982408712633	WITHOUT_CLASSIFICATION	1.7591287366657534E-6	DEFECT
// let's enable the radiobuttons container	WITHOUT_CLASSIFICATION	0.9999999267608382	WITHOUT_CLASSIFICATION	7.32391618546693E-8	DEFECT
// updating the radiobuttons container's title	WITHOUT_CLASSIFICATION	0.9999997062898301	WITHOUT_CLASSIFICATION	2.937101697992086E-7	DEFECT
// let's select the correct radio button	WITHOUT_CLASSIFICATION	0.9999580235838967	WITHOUT_CLASSIFICATION	4.1976416103251436E-5	DEFECT
// no shortcuts --> NONE	WITHOUT_CLASSIFICATION	0.9999999237951053	WITHOUT_CLASSIFICATION	7.620489466960768E-8	DEFECT
// current shortcut == default --> DEFAULT	WITHOUT_CLASSIFICATION	0.9999998943861781	WITHOUT_CLASSIFICATION	1.0561382185713786E-7	DEFECT
// customized shortcut --> CUSTOM	WITHOUT_CLASSIFICATION	0.9999990295474485	WITHOUT_CLASSIFICATION	9.704525515125907E-7	DEFECT
// let's reload the shortcuts	WITHOUT_CLASSIFICATION	0.9999991781572727	WITHOUT_CLASSIFICATION	8.218427272551998E-7	DEFECT
// conflict detected: showing a warning to the user, instead of // saving shortcuts	WITHOUT_CLASSIFICATION	0.9999962841772067	WITHOUT_CLASSIFICATION	3.7158227933151196E-6	DEFECT
// saving shortcuts	WITHOUT_CLASSIFICATION	0.9999995886825994	WITHOUT_CLASSIFICATION	4.1131740048666077E-7	DEFECT
// if a shortcut has been select then we have to check if the actual // action is in conflict with other ones	WITHOUT_CLASSIFICATION	0.9999999107878913	WITHOUT_CLASSIFICATION	8.921210876276632E-8	DEFECT
// this shortcut was already been assigned to another action; // let's pop-up a message for the user	WITHOUT_CLASSIFICATION	0.999999769501968	WITHOUT_CLASSIFICATION	2.3049803197124695E-7	DEFECT
// blanking the old action's shortcut.. // and now refreshing the table.	WITHOUT_CLASSIFICATION	0.9999837396244478	WITHOUT_CLASSIFICATION	1.6260375552194845E-5	DEFECT
// re-selecting the old row, without changing the target - // and without throwing another ListSelectionEvent!	WITHOUT_CLASSIFICATION	0.9999999009079776	WITHOUT_CLASSIFICATION	9.90920223082651E-8	DEFECT
// let's change the target	WITHOUT_CLASSIFICATION	0.9999997372850972	WITHOUT_CLASSIFICATION	2.6271490284712776E-7	DEFECT
// duplicate shortcut not found; let's check for duplicates	WITHOUT_CLASSIFICATION	0.9999999465884262	WITHOUT_CLASSIFICATION	5.341157376889158E-8	DEFECT
// there's a duplicate: let's recheck if there is a conflict	WITHOUT_CLASSIFICATION	0.999994806270722	WITHOUT_CLASSIFICATION	5.193729277974064E-6	DEFECT
// updating the shortcut field	WITHOUT_CLASSIFICATION	0.9999990820087191	WITHOUT_CLASSIFICATION	9.179912808922831E-7	DEFECT
// updating the table data	WITHOUT_CLASSIFICATION	0.9999998195718329	WITHOUT_CLASSIFICATION	1.8042816710696454E-7	DEFECT
// updating the actions	WITHOUT_CLASSIFICATION	0.9999981788241796	WITHOUT_CLASSIFICATION	1.8211758203326252E-6	DEFECT
// the shortcut has already been assigned to another action!	WITHOUT_CLASSIFICATION	0.9999978461600962	WITHOUT_CLASSIFICATION	2.153839903734086E-6	DEFECT
// if the given object is a KeyStroke instance, then we ca	WITHOUT_CLASSIFICATION	0.9999956964128619	WITHOUT_CLASSIFICATION	4.303587138135291E-6	DEFECT
// let's update also the actions array	WITHOUT_CLASSIFICATION	0.9999991533722397	WITHOUT_CLASSIFICATION	8.466277602719186E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// show a chooser dialog for the file name, only xmi is allowed	WITHOUT_CLASSIFICATION	0.9999994017124507	WITHOUT_CLASSIFICATION	5.982875493227485E-7	DEFECT
/* The default nr of rows is 8,          * but since we have 9 perspectives by default now,          * setting to 9 is nicer. */	WITHOUT_CLASSIFICATION	0.9999994397962635	WITHOUT_CLASSIFICATION	5.602037366223827E-7	DEFECT
/* Check if multiple items are selected. */	WITHOUT_CLASSIFICATION	0.9999977632538094	WITHOUT_CLASSIFICATION	2.2367461905900226E-6	DEFECT
// profile section: dealing with profiles in different states	WITHOUT_CLASSIFICATION	0.9998592665030942	WITHOUT_CLASSIFICATION	1.4073349690581249E-4	DEFECT
// 1. a noneditable applied profile	WITHOUT_CLASSIFICATION	0.9999987483090177	WITHOUT_CLASSIFICATION	1.251690982317843E-6	DEFECT
// just no item added in this case	WITHOUT_CLASSIFICATION	0.9999985186932282	WITHOUT_CLASSIFICATION	1.4813067719183798E-6	DEFECT
// 3. the editable unapplied profile	WITHOUT_CLASSIFICATION	0.9999995408450353	WITHOUT_CLASSIFICATION	4.5915496476850234E-7	DEFECT
// end of profile section	WITHOUT_CLASSIFICATION	0.9999955106624012	WITHOUT_CLASSIFICATION	4.489337598716193E-6	DEFECT
// Can't delete last top level model	WITHOUT_CLASSIFICATION	0.9999995961031459	WITHOUT_CLASSIFICATION	4.038968540272513E-7	DEFECT
// Determine if only diagrams are in the target list.	WITHOUT_CLASSIFICATION	0.999999721140221	WITHOUT_CLASSIFICATION	2.7885977907317903E-7	DEFECT
// "x nodes and x edges"	WITHOUT_CLASSIFICATION	0.9999961064745244	WITHOUT_CLASSIFICATION	3.89352547558032E-6	DEFECT
// Check to see if all targets are classifiers // before adding an option to create an association between // them all	WITHOUT_CLASSIFICATION	0.999999989857233	WITHOUT_CLASSIFICATION	1.014276692377325E-8	DEFECT
// test if this element can be contained by the target	WITHOUT_CLASSIFICATION	0.9999989816754089	WITHOUT_CLASSIFICATION	1.0183245910394806E-6	DEFECT
// iterate through all possible model elements to determine which // are valid to be contained by the selected target	WITHOUT_CLASSIFICATION	0.999999954680265	WITHOUT_CLASSIFICATION	4.531973493687126E-8	DEFECT
/* end class ActionAddExistingRelatedNode */	WITHOUT_CLASSIFICATION	0.9999965421200322	WITHOUT_CLASSIFICATION	3.4578799677683646E-6	DEFECT
// this element can be contained add a menu item // that allows the user to take that action	WITHOUT_CLASSIFICATION	0.9998141680598133	WITHOUT_CLASSIFICATION	1.8583194018676193E-4	DEFECT
/* ... otherwise we select the item below the mousepointer. */	WITHOUT_CLASSIFICATION	0.9999943811104933	WITHOUT_CLASSIFICATION	5.618889506672277E-6	DEFECT
/*             * We preserve the current (multiple) selection, if we are over part             * of it ...             */	WITHOUT_CLASSIFICATION	0.9999946708639924	WITHOUT_CLASSIFICATION	5.3291360075364795E-6	DEFECT
// unimplemented - we only care about expanding	WITHOUT_CLASSIFICATION	0.999982524592573	WITHOUT_CLASSIFICATION	1.7475407427048894E-5	DEFECT
/* end class ExplorerMouseListener */	WITHOUT_CLASSIFICATION	0.9999932668931261	WITHOUT_CLASSIFICATION	6.733106873943829E-6	DEFECT
// does nothing.	WITHOUT_CLASSIFICATION	0.9999688459625	WITHOUT_CLASSIFICATION	3.115403749996509E-5	DEFECT
// need to update the selection state.	WITHOUT_CLASSIFICATION	0.9999999631926327	WITHOUT_CLASSIFICATION	3.680736731225555E-8	DEFECT
/*     * Perform recursive search of subtree rooted at 'node', selecting all nodes     * which have a userObject matching one of our targets.     */	WITHOUT_CLASSIFICATION	0.999999997529936	WITHOUT_CLASSIFICATION	2.4700640385046054E-9	DEFECT
// get the elements	WITHOUT_CLASSIFICATION	0.9999989221010804	WITHOUT_CLASSIFICATION	1.077898919607407E-6	DEFECT
//////////////////////////////////////////////////////////////// // instance variables	WITHOUT_CLASSIFICATION	0.9999997804293774	WITHOUT_CLASSIFICATION	2.195706224349368E-7	DEFECT
// target may appear multiple places in the tree, so // we don't stop here (but it's expensive to search // the whole tree) - tfm - 20070904 // targets.remove(t); // break;	WITHOUT_CLASSIFICATION	0.9999340740546858	WITHOUT_CLASSIFICATION	6.592594531423919E-5	DEFECT
// scan the visible rows for duplicates of // this elem and select them	WITHOUT_CLASSIFICATION	0.9999996415876584	WITHOUT_CLASSIFICATION	3.58412341544307E-7	DEFECT
// check which targetmanager method to call	WITHOUT_CLASSIFICATION	0.9999998728919809	WITHOUT_CLASSIFICATION	1.2710801905702971E-7	DEFECT
// we must call the correct method on targetmanager // for each added or removed target	WITHOUT_CLASSIFICATION	0.9999953107987368	WITHOUT_CLASSIFICATION	4.689201263216541E-6	DEFECT
// we can't remove the targets in one go, we have to // do it one by one.	WITHOUT_CLASSIFICATION	0.9999993349729818	WITHOUT_CLASSIFICATION	6.650270181444075E-7	DEFECT
// setTargets(e.getNewTargets());	WITHOUT_CLASSIFICATION	0.9999999512968152	WITHOUT_CLASSIFICATION	4.87031848736462E-8	DEFECT
// setTargets(e.getNewTargets());	WITHOUT_CLASSIFICATION	0.9999999512968152	WITHOUT_CLASSIFICATION	4.87031848736462E-8	DEFECT
// at the top // right bottom // left bottom	WITHOUT_CLASSIFICATION	0.9999988449418094	WITHOUT_CLASSIFICATION	1.155058190613715E-6	DEFECT
// the dialog is modal	WITHOUT_CLASSIFICATION	0.9997852617677004	WITHOUT_CLASSIFICATION	2.1473823229954504E-4	DEFECT
//sortJListModel(ruleLibraryList);	WITHOUT_CLASSIFICATION	0.9999973730468218	WITHOUT_CLASSIFICATION	2.6269531782616567E-6	DEFECT
//disable the buttons for now, since no selection has been made yet	WITHOUT_CLASSIFICATION	0.9999794875332909	WITHOUT_CLASSIFICATION	2.0512466709081744E-5	DEFECT
// the text will be set later	WITHOUT_CLASSIFICATION	0.9999950122154342	WITHOUT_CLASSIFICATION	4.987784565733865E-6	DEFECT
// the text will be set later	WITHOUT_CLASSIFICATION	0.9999950122154342	WITHOUT_CLASSIFICATION	4.987784565733865E-6	DEFECT
// remove the ones already selected (if a perspective is selected)	WITHOUT_CLASSIFICATION	0.9999998560737751	WITHOUT_CLASSIFICATION	1.439262249971998E-7	DEFECT
// add them	WITHOUT_CLASSIFICATION	0.9999963861346859	WITHOUT_CLASSIFICATION	3.6138653141545526E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// update the label (which shows the number of rules)	WITHOUT_CLASSIFICATION	0.9999999913385682	WITHOUT_CLASSIFICATION	8.661431770818503E-9	DEFECT
// must add an editable list of new ExplorerPerspective's // to the list model so that the original ones are not changed // in the case of a cancel action by the user.	WITHOUT_CLASSIFICATION	0.9999999990501097	WITHOUT_CLASSIFICATION	9.498902457293335E-10	DEFECT
// set the newly selected item in the library list	WITHOUT_CLASSIFICATION	0.9999996015126115	WITHOUT_CLASSIFICATION	3.9848738853328757E-7	DEFECT
// update the label (which shows the number of rules)	WITHOUT_CLASSIFICATION	0.9999999913385682	WITHOUT_CLASSIFICATION	8.661431770818503E-9	DEFECT
// set the newly selected item in the library list	WITHOUT_CLASSIFICATION	0.9999996015126115	WITHOUT_CLASSIFICATION	3.9848738853328757E-7	DEFECT
// remove the rule from the library list	WITHOUT_CLASSIFICATION	0.9999993410828268	WITHOUT_CLASSIFICATION	6.589171731093474E-7	DEFECT
/* The name of the UMLDiagram                  * represented by this node has changed. */	WITHOUT_CLASSIFICATION	0.999999895469605	WITHOUT_CLASSIFICATION	1.0453039502744052E-7	DEFECT
// uml model events	WITHOUT_CLASSIFICATION	0.9999999217047411	WITHOUT_CLASSIFICATION	7.829525885405536E-8	DEFECT
// notation events	WITHOUT_CLASSIFICATION	0.9999996398516755	WITHOUT_CLASSIFICATION	3.601483245228173E-7	DEFECT
// Handle remove for non-UML elements (e.g. diagrams)	WITHOUT_CLASSIFICATION	0.9999997904441322	WITHOUT_CLASSIFICATION	2.095558678117249E-7	DEFECT
/*         * Get the selected targets (UML ModelElements)         * from the TargetManager.         */	WITHOUT_CLASSIFICATION	0.9999999082351413	WITHOUT_CLASSIFICATION	9.176485878867769E-8	DEFECT
// project events	WITHOUT_CLASSIFICATION	0.9999993909844415	WITHOUT_CLASSIFICATION	6.090155584427686E-7	DEFECT
// show a chooser dialog for the file name, only xmi is allowed	WITHOUT_CLASSIFICATION	0.9999994017124507	WITHOUT_CLASSIFICATION	5.982875493227485E-7	DEFECT
// get one of the default profile dirs, if available // (as a default value for the following save dialog)	WITHOUT_CLASSIFICATION	0.9999999951647066	WITHOUT_CLASSIFICATION	4.8352934790690185E-9	DEFECT
// save profile	WITHOUT_CLASSIFICATION	0.9999992541164711	WITHOUT_CLASSIFICATION	7.458835290037318E-7	DEFECT
// register it as a user profile	WITHOUT_CLASSIFICATION	0.9999999247291966	WITHOUT_CLASSIFICATION	7.527080326310214E-8	DEFECT
// this is safe because getName always returns a string of some type	WITHOUT_CLASSIFICATION	0.9997639615268374	WITHOUT_CLASSIFICATION	2.3603847316246962E-4	DEFECT
// load user perspectives	WITHOUT_CLASSIFICATION	0.9999999315012438	WITHOUT_CLASSIFICATION	6.84987561653536E-8	DEFECT
// get the perspective name	WITHOUT_CLASSIFICATION	0.9999993609485065	WITHOUT_CLASSIFICATION	6.390514934989427E-7	DEFECT
// make sure there are some rules...	WITHOUT_CLASSIFICATION	0.9999988453449802	WITHOUT_CLASSIFICATION	1.1546550197372026E-6	DEFECT
// get the rules	WITHOUT_CLASSIFICATION	0.9999998871866838	WITHOUT_CLASSIFICATION	1.1281331631903577E-7	DEFECT
// get the rule name	WITHOUT_CLASSIFICATION	0.9999994501151301	WITHOUT_CLASSIFICATION	5.498848697980216E-7	DEFECT
// create the rule	WITHOUT_CLASSIFICATION	0.9999999133883536	WITHOUT_CLASSIFICATION	8.661164638939762E-8	DEFECT
// rule name but no rules	WITHOUT_CLASSIFICATION	0.9999987558108231	WITHOUT_CLASSIFICATION	1.2441891769480063E-6	DEFECT
// add the perspective	WITHOUT_CLASSIFICATION	0.9999994866642286	WITHOUT_CLASSIFICATION	5.133357714385664E-7	DEFECT
// no user defined perspectives	WITHOUT_CLASSIFICATION	0.9999999947568047	WITHOUT_CLASSIFICATION	5.24319540567666E-9	DEFECT
// one last check that some loaded.	WITHOUT_CLASSIFICATION	0.9999989962500175	WITHOUT_CLASSIFICATION	1.0037499824613959E-6	DEFECT
// works for both statediagram as activitygraph	WITHOUT_CLASSIFICATION	0.999978707087494	WITHOUT_CLASSIFICATION	2.1292912505985472E-5	DEFECT
// Enter here go rules only relevant for UML 2 // empty for now	WITHOUT_CLASSIFICATION	0.9999999755323301	WITHOUT_CLASSIFICATION	2.446766988777874E-8	DEFECT
/*         * The drag gesture recognizer fires events         * in response to drag gestures in a component.         */	WITHOUT_CLASSIFICATION	0.999999995458441	WITHOUT_CLASSIFICATION	4.541558968561977E-9	DEFECT
//specifies valid actions	WITHOUT_CLASSIFICATION	0.9999978352789288	WITHOUT_CLASSIFICATION	2.16472107124231E-6	DEFECT
// Eliminates right mouse clicks as valid actions	WITHOUT_CLASSIFICATION	0.9999983936114689	WITHOUT_CLASSIFICATION	1.606388531086223E-6	DEFECT
// First argument:  Component to associate the target with // Second argument: DropTargetListener	WITHOUT_CLASSIFICATION	0.9999977923264629	WITHOUT_CLASSIFICATION	2.207673537048064E-6	DEFECT
/*         * Get the cell renderer (which is a JLabel)         * for the path being dragged.         */	WITHOUT_CLASSIFICATION	0.9999998983359435	WITHOUT_CLASSIFICATION	1.0166405646727514E-7	DEFECT
/* The layout manager would normally do this: */	WITHOUT_CLASSIFICATION	0.9985757508765019	WITHOUT_CLASSIFICATION	0.001424249123498057	DEFECT
// Get a buffered image of the selection for dragging a ghost image	WITHOUT_CLASSIFICATION	0.9999999867996533	WITHOUT_CLASSIFICATION	1.3200346716129453E-8	DEFECT
/*         * Ask the cell renderer to paint itself into the BufferedImage.         * Make the image ghostlike.         */	WITHOUT_CLASSIFICATION	0.9999995700374587	WITHOUT_CLASSIFICATION	4.2996254138640195E-7	DEFECT
/*         * Now paint a gradient UNDER the ghosted JLabel text         * (but not under the icon if any).         */	WITHOUT_CLASSIFICATION	0.9999995524923749	WITHOUT_CLASSIFICATION	4.4750762500504067E-7	DEFECT
/* Make the gradient ghostlike: */	WITHOUT_CLASSIFICATION	0.9998986741637771	WITHOUT_CLASSIFICATION	1.0132583622284013E-4	DEFECT
/*         * Remember the path being dragged (because if it is being moved,         * we will have to delete it later).         */	WITHOUT_CLASSIFICATION	0.9999999496822405	WITHOUT_CLASSIFICATION	5.031775946218397E-8	DEFECT
/*         * We pass our drag image just in case         * it IS supported by the platform.         */	WITHOUT_CLASSIFICATION	0.9999999980727975	WITHOUT_CLASSIFICATION	1.9272025146242986E-9	DEFECT
/* If the destination is not a NameSpace, then abort: */	WITHOUT_CLASSIFICATION	0.9999656778891683	WITHOUT_CLASSIFICATION	3.432211083155755E-5	DEFECT
/* If the destination is a DataType, then abort: */	WITHOUT_CLASSIFICATION	0.9999802727130603	WITHOUT_CLASSIFICATION	1.9727286939643313E-5	DEFECT
/* We are sure "dest" is a Namespace now. */	WITHOUT_CLASSIFICATION	0.9999979700019624	WITHOUT_CLASSIFICATION	2.0299980375853523E-6	DEFECT
/*         * MVW: These are the WFRs for DataType:         * [1] A DataType can only contain Operations,         * which all must be queries.         * self.allFeatures->forAll(f |         *  f.oclIsKindOf(Operation) and f.oclAsType(Operation).isQuery)         * [2] A DataType cannot contain any other ModelElements.         *  self.allContents->isEmpty         *  IMHO we should enforce these WFRs here.         *  ... so it is still possible to copy or move query operations,         *  hence we should allow this.         */	WITHOUT_CLASSIFICATION	0.9868743284762446	WITHOUT_CLASSIFICATION	0.013125671523755378	DEFECT
/*         * Let's check all dragged elements - if one of these         * may be dropped, then the drag is valid.         * The others will be ignored when dropping.         */	WITHOUT_CLASSIFICATION	0.9999999980591112	WITHOUT_CLASSIFICATION	1.940888809756826E-9	DEFECT
// empty implementation - not used.	WITHOUT_CLASSIFICATION	0.9999934350139018	WITHOUT_CLASSIFICATION	6.564986098274295E-6	DEFECT
// empty implementation - not used.	WITHOUT_CLASSIFICATION	0.9999934350139018	WITHOUT_CLASSIFICATION	6.564986098274295E-6	DEFECT
// empty implementation - not used.	WITHOUT_CLASSIFICATION	0.9999934350139018	WITHOUT_CLASSIFICATION	6.564986098274295E-6	DEFECT
// Figure out which row we're on.	WITHOUT_CLASSIFICATION	0.9999998327776893	WITHOUT_CLASSIFICATION	1.6722231071416487E-7	DEFECT
// If we are not on a row then ignore this autoscroll request	WITHOUT_CLASSIFICATION	0.9999837248337373	WITHOUT_CLASSIFICATION	1.6275166262774503E-5	DEFECT
/* We are sure "dest" is a Namespace now. */	WITHOUT_CLASSIFICATION	0.9999979700019624	WITHOUT_CLASSIFICATION	2.0299980375853523E-6	DEFECT
//  Autoscroll Interface... //  The following code was borrowed from the book: // 	WITHOUT_CLASSIFICATION	0.9996500930990962	WITHOUT_CLASSIFICATION	3.499069009038322E-4	DEFECT
// Now decide if the row is at the top of the screen or at the // bottom. We do this to make the previous row (or the next // row) visible as appropriate. If were at the absolute top or // bottom, just return the first or last row respectively.	WITHOUT_CLASSIFICATION	0.9999999944767226	WITHOUT_CLASSIFICATION	5.523277494369429E-9	DEFECT
/* Set up a hover timer, so that a node will be             * automatically expanded or collapsed             * if the user lingers on it for more than a short time.             */	WITHOUT_CLASSIFICATION	0.9999996686901738	WITHOUT_CLASSIFICATION	3.3130982620353807E-7	DEFECT
/*isRootPath*/	WITHOUT_CLASSIFICATION	0.9999552993998755	WITHOUT_CLASSIFICATION	4.470060012453149E-5	DEFECT
// Set timer to one-shot mode	WITHOUT_CLASSIFICATION	0.9999854740230589	WITHOUT_CLASSIFICATION	1.4525976941136717E-5	DEFECT
//            LOG.log(Level.FINE, "dragOver");	WITHOUT_CLASSIFICATION	0.999999860478971	WITHOUT_CLASSIFICATION	1.3952102885663279E-7	DEFECT
/*             * The next condition becomes false when dragging in             * something from another application.             */	WITHOUT_CLASSIFICATION	0.9998743071072629	WITHOUT_CLASSIFICATION	1.2569289273718032E-4	DEFECT
/*                 * If a drag image is not supported by the platform,                 * then draw my own drag image.                 */	WITHOUT_CLASSIFICATION	0.9999995691616516	WITHOUT_CLASSIFICATION	4.308383484237036E-7	DEFECT
/* Rub out the last ghost image and cue line: */	WITHOUT_CLASSIFICATION	0.9999752704205207	WITHOUT_CLASSIFICATION	2.4729579479372415E-5	DEFECT
/* And remember where we are about to draw                     * the new ghost image:                     */	WITHOUT_CLASSIFICATION	0.9999996560990588	WITHOUT_CLASSIFICATION	3.4390094116516875E-7	DEFECT
// Just rub out the last cue line	WITHOUT_CLASSIFICATION	0.9999983574981323	WITHOUT_CLASSIFICATION	1.6425018678389582E-6	DEFECT
/*             * In any case draw (over the ghost image if necessary)             * a cue line indicating where a drop will occur.             */	WITHOUT_CLASSIFICATION	0.9999999973346498	WITHOUT_CLASSIFICATION	2.665350099460368E-9	DEFECT
// And include the cue line in the area to be rubbed out next time	WITHOUT_CLASSIFICATION	0.9999999361150853	WITHOUT_CLASSIFICATION	6.388491466323868E-8	DEFECT
/* Testcase: drag something from another             * application into ArgoUML,             * and the explorer shows the drop icon, instead of the noDrop.             */	WITHOUT_CLASSIFICATION	0.999999900694138	WITHOUT_CLASSIFICATION	9.930586196152034E-8	DEFECT
// to prohibit dropping onto the drag source:	WITHOUT_CLASSIFICATION	0.9999999664683726	WITHOUT_CLASSIFICATION	3.353162728793934E-8	DEFECT
/* If the destination is not a NameSpace, then reject: */	WITHOUT_CLASSIFICATION	0.9999863171517841	WITHOUT_CLASSIFICATION	1.368284821595024E-5	DEFECT
/* If the destination is a DataType, then reject: */	WITHOUT_CLASSIFICATION	0.9999932861259677	WITHOUT_CLASSIFICATION	6.713874032361792E-6	DEFECT
/* Prevent hover timer from doing an unwanted             * expandPath or collapsePath:             */	WITHOUT_CLASSIFICATION	0.9999953447904536	WITHOUT_CLASSIFICATION	4.655209546442493E-6	DEFECT
/* Clear the ghost image: */	WITHOUT_CLASSIFICATION	0.9999525150163698	WITHOUT_CLASSIFICATION	4.748498363021673E-5	DEFECT
//get new parent node	WITHOUT_CLASSIFICATION	0.9999917806009171	WITHOUT_CLASSIFICATION	8.21939908292833E-6	DEFECT
//get the model elements that are being transfered.	WITHOUT_CLASSIFICATION	0.9999966867074345	WITHOUT_CLASSIFICATION	3.3132925655897714E-6	DEFECT
/* The user-DropActions are:                 * Ctrl + Shift -> ACTION_LINK                 * Ctrl         -> ACTION_COPY                 * Shift        -> ACTION_MOVE                 * (none)       -> ACTION_MOVE                 */	WITHOUT_CLASSIFICATION	0.9999996692748104	WITHOUT_CLASSIFICATION	3.307251895560668E-7	DEFECT
// Only accept COPY or MOVE gestures (ie LINK is not supported)	WITHOUT_CLASSIFICATION	0.999997830489112	WITHOUT_CLASSIFICATION	2.1695108880716677E-6	DEFECT
// Only accept COPY or MOVE gestures (ie LINK is not supported)	WITHOUT_CLASSIFICATION	0.999997830489112	WITHOUT_CLASSIFICATION	2.1695108880716677E-6	DEFECT
// Do this if you want to prohibit dropping onto the drag source...	WITHOUT_CLASSIFICATION	0.9999998522248839	WITHOUT_CLASSIFICATION	1.4777511612242682E-7	DEFECT
// Do this if you want to prohibit dropping onto the drag source...	WITHOUT_CLASSIFICATION	0.9999998522248839	WITHOUT_CLASSIFICATION	1.4777511612242682E-7	DEFECT
/* end class */	WITHOUT_CLASSIFICATION	0.9999251181853477	WITHOUT_CLASSIFICATION	7.488181465234571E-5	DEFECT
// remove references for gc	WITHOUT_CLASSIFICATION	0.999959658609973	WITHOUT_CLASSIFICATION	4.034139002695672E-5	DEFECT
// This should only be helpful for old garbage collectors.	WITHOUT_CLASSIFICATION	0.999989114532282	WITHOUT_CLASSIFICATION	1.088546771800979E-5	DEFECT
// Avoid doing this too early in the initialization process	WITHOUT_CLASSIFICATION	0.9999816598269885	WITHOUT_CLASSIFICATION	1.8340173011496396E-5	DEFECT
// Avoid recursively updating the same child	WITHOUT_CLASSIFICATION	0.9999999161951298	WITHOUT_CLASSIFICATION	8.380487015716483E-8	DEFECT
/*     * @see javax.swing.tree.DefaultTreeModel#insertNodeInto(javax.swing.tree.MutableTreeNode, javax.swing.tree.MutableTreeNode, int)     */	WITHOUT_CLASSIFICATION	0.9999998840979295	WITHOUT_CLASSIFICATION	1.1590207039953251E-7	DEFECT
/*     * @see javax.swing.tree.DefaultTreeModel#removeNodeFromParent(javax.swing.tree.MutableTreeNode)     */	WITHOUT_CLASSIFICATION	0.9999999492961619	WITHOUT_CLASSIFICATION	5.0703838176834145E-8	DEFECT
// This is somewhat inconsistent with the design of the constructor // that receives the root object by argument. If this is okay // then there may be no need for a constructor with that argument.	WITHOUT_CLASSIFICATION	0.9999998762194834	WITHOUT_CLASSIFICATION	1.237805165303412E-7	DEFECT
// Enumerate the current children of node to find out which now sorts // in different order, since these must be moved	WITHOUT_CLASSIFICATION	0.9999999943024279	WITHOUT_CLASSIFICATION	5.697572087329366E-9	DEFECT
// Avoid our deinitialization here // The node will be added back to the tree again	WITHOUT_CLASSIFICATION	0.9999913989991455	WITHOUT_CLASSIFICATION	8.601000854496398E-6	DEFECT
// For each reordered node, find it's new position among the current // children and move it there	WITHOUT_CLASSIFICATION	0.9999989229373165	WITHOUT_CLASSIFICATION	1.0770626835479984E-6	DEFECT
// Avoid our initialization here	WITHOUT_CLASSIFICATION	0.9999877227135638	WITHOUT_CLASSIFICATION	1.2277286436169311E-5	DEFECT
// Collect the current set of objects that should be children to // this node	WITHOUT_CLASSIFICATION	0.9999946908037894	WITHOUT_CLASSIFICATION	5.309196210537856E-6	DEFECT
// Handle WeakExplorerNodes	WITHOUT_CLASSIFICATION	0.9999997629995805	WITHOUT_CLASSIFICATION	2.3700041963119024E-7	DEFECT
// Remove the node from removeSet	WITHOUT_CLASSIFICATION	0.9999832104514494	WITHOUT_CLASSIFICATION	1.678954855054063E-5	DEFECT
// Remove obj3 from weakNodes and newChildren	WITHOUT_CLASSIFICATION	0.9999821169122898	WITHOUT_CLASSIFICATION	1.7883087710207263E-5	DEFECT
// Remember that children are not TreeNodes but UserObjects	WITHOUT_CLASSIFICATION	0.9992208166804286	WITHOUT_CLASSIFICATION	7.791833195713906E-4	DEFECT
// Add any remaining nodes	WITHOUT_CLASSIFICATION	0.9999992848795601	WITHOUT_CLASSIFICATION	7.15120439781406E-7	DEFECT
// it is the combo for "order"	WITHOUT_CLASSIFICATION	0.9999987730892113	WITHOUT_CLASSIFICATION	1.226910788798426E-6	DEFECT
// Lazily create the event:	WITHOUT_CLASSIFICATION	0.9999995009738529	WITHOUT_CLASSIFICATION	4.99026147136317E-7	DEFECT
// Order the new children, the dependencies cannot and // need not be ordered	WITHOUT_CLASSIFICATION	0.9999989154300132	WITHOUT_CLASSIFICATION	1.084569986909864E-6	DEFECT
// TODO: What?	WITHOUT_CLASSIFICATION	0.6190028654834615	DEFECT	0.3809971345165385	WITHOUT_CLASSIFICATION
// TODO: What?	WITHOUT_CLASSIFICATION	0.6190028654834615	DEFECT	0.3809971345165385	WITHOUT_CLASSIFICATION
// Sequence diagrams are not shown as children of the // collaboration that they show but as children of the // classifier/operation the collaboration represents. // Statediagrams and activitydiagrams are shown as children // of the statemachine or activitygraph they belong to.	WITHOUT_CLASSIFICATION	0.9999814591944253	WITHOUT_CLASSIFICATION	1.8540805574748193E-5	DEFECT
//was ""	WITHOUT_CLASSIFICATION	0.9999944739619726	WITHOUT_CLASSIFICATION	5.526038027430408E-6	DEFECT
// TODO: What?	WITHOUT_CLASSIFICATION	0.6190028654834615	DEFECT	0.3809971345165385	WITHOUT_CLASSIFICATION
// abstractions are represented in the Inheritance Node.	WITHOUT_CLASSIFICATION	0.9999999548348176	WITHOUT_CLASSIFICATION	4.516518235810946E-8	DEFECT
// abstractions are represented in the Inheritance Node.	WITHOUT_CLASSIFICATION	0.9999999548348176	WITHOUT_CLASSIFICATION	4.516518235810946E-8	DEFECT
// abstractions are represented in the Inheritance Node.	WITHOUT_CLASSIFICATION	0.9999999548348176	WITHOUT_CLASSIFICATION	4.516518235810946E-8	DEFECT
// abstractions are represented in the Inheritance Node.	WITHOUT_CLASSIFICATION	0.9999999548348176	WITHOUT_CLASSIFICATION	4.516518235810946E-8	DEFECT
// the name of this instance of diagram	WITHOUT_CLASSIFICATION	0.9999977977988899	WITHOUT_CLASSIFICATION	2.2022011102154897E-6	DEFECT
// TODO: What?	WITHOUT_CLASSIFICATION	0.6190028654834615	DEFECT	0.3809971345165385	WITHOUT_CLASSIFICATION
// TODO: What?	WITHOUT_CLASSIFICATION	0.6190028654834615	DEFECT	0.3809971345165385	WITHOUT_CLASSIFICATION
// TODO: What?	WITHOUT_CLASSIFICATION	0.6190028654834615	DEFECT	0.3809971345165385	WITHOUT_CLASSIFICATION
// TODO: What?	WITHOUT_CLASSIFICATION	0.6190028654834615	DEFECT	0.3809971345165385	WITHOUT_CLASSIFICATION
// TODO: What?	WITHOUT_CLASSIFICATION	0.6190028654834615	DEFECT	0.3809971345165385	WITHOUT_CLASSIFICATION
// TODO: What?	WITHOUT_CLASSIFICATION	0.6190028654834615	DEFECT	0.3809971345165385	WITHOUT_CLASSIFICATION
/* Also show unattached sequence diagrams: */	WITHOUT_CLASSIFICATION	0.9999906939078888	WITHOUT_CLASSIFICATION	9.30609211129025E-6	DEFECT
// TODO: What?	WITHOUT_CLASSIFICATION	0.6190028654834615	DEFECT	0.3809971345165385	WITHOUT_CLASSIFICATION
// in UML2, we don't want to see element imports in profiles	WITHOUT_CLASSIFICATION	0.9999994827050114	WITHOUT_CLASSIFICATION	5.172949887453868E-7	DEFECT
/*(MAssociationEnd)*/	WITHOUT_CLASSIFICATION	0.9996940980751577	WITHOUT_CLASSIFICATION	3.0590192484221255E-4	DEFECT
/*(MAssociationEnd)*/	WITHOUT_CLASSIFICATION	0.9996940980751577	WITHOUT_CLASSIFICATION	3.0590192484221255E-4	DEFECT
/*(MAssociationEnd)*/	WITHOUT_CLASSIFICATION	0.9996940980751577	WITHOUT_CLASSIFICATION	3.0590192484221255E-4	DEFECT
/** * Rule for Project->Root (Top level) Elements. *  * TODO: As currently implemented it returns all top level elements in  * the model repository, not just those in a given project.  Since we * only support a single project at a time currently, these are equivalent * but this will need to be enhanced with additional bookkeeping in  * Project when we support multiple open projects - tfm. * * TODO: I changed it to get the roots from the project. It was showing * the profiles that were loaded but were not applied to the current project * - maurelio1234. *  * @author Tom Morris <tfmorris@gmail.com> */	WITHOUT_CLASSIFICATION	0.7924451627042902	WITHOUT_CLASSIFICATION	0.2075548372957097	DEFECT
// in UML2, some elements are not to be shown	WITHOUT_CLASSIFICATION	0.9999176809475886	WITHOUT_CLASSIFICATION	8.231905241135792E-5	DEFECT
// don't show a profile application	WITHOUT_CLASSIFICATION	0.9999762442508933	WITHOUT_CLASSIFICATION	2.3755749106778865E-5	DEFECT
// don't show element imports in profiles	WITHOUT_CLASSIFICATION	0.9999732538945586	WITHOUT_CLASSIFICATION	2.6746105441346285E-5	DEFECT
// don't show extensions in profiles	WITHOUT_CLASSIFICATION	0.9999184558732587	WITHOUT_CLASSIFICATION	8.154412674130536E-5	DEFECT
//&& Model.getFacade().isAProperty(o)	WITHOUT_CLASSIFICATION	0.9999771967773231	WITHOUT_CLASSIFICATION	2.280322267697131E-5	DEFECT
// don't show base_... properties in stereotypes	WITHOUT_CLASSIFICATION	0.9994012456304391	WITHOUT_CLASSIFICATION	5.987543695610157E-4	DEFECT
// "N/A" or "x nodes and x edges"	WITHOUT_CLASSIFICATION	0.9999985792217536	WITHOUT_CLASSIFICATION	1.4207782463930903E-6	DEFECT
// TODO: What?	WITHOUT_CLASSIFICATION	0.6190028654834615	DEFECT	0.3809971345165385	WITHOUT_CLASSIFICATION
// TODO: What?	WITHOUT_CLASSIFICATION	0.6190028654834615	DEFECT	0.3809971345165385	WITHOUT_CLASSIFICATION
// TODO: What?	WITHOUT_CLASSIFICATION	0.6190028654834615	DEFECT	0.3809971345165385	WITHOUT_CLASSIFICATION
// Transition	WITHOUT_CLASSIFICATION	0.9999954598743791	WITHOUT_CLASSIFICATION	4.5401256208894356E-6	DEFECT
// TODO: What?	WITHOUT_CLASSIFICATION	0.6190028654834615	DEFECT	0.3809971345165385	WITHOUT_CLASSIFICATION
// TODO: what?	WITHOUT_CLASSIFICATION	0.8927071658886931	DEFECT	0.1072928341113069	WITHOUT_CLASSIFICATION
// Todo: What?	WITHOUT_CLASSIFICATION	0.9949497143274512	WITHOUT_CLASSIFICATION	0.005050285672548848	DEFECT
// First get the collection of ElementResidence	WITHOUT_CLASSIFICATION	0.9999985901688465	WITHOUT_CLASSIFICATION	1.409831153436159E-6	DEFECT
// Lazily create the event:	WITHOUT_CLASSIFICATION	0.9999995009738529	WITHOUT_CLASSIFICATION	4.99026147136317E-7	DEFECT
// Guaranteed to return a non-null array	WITHOUT_CLASSIFICATION	0.9999999594285716	WITHOUT_CLASSIFICATION	4.05714284274186E-8	DEFECT
// Guaranteed to return a non-null array	WITHOUT_CLASSIFICATION	0.9999999594285716	WITHOUT_CLASSIFICATION	4.05714284274186E-8	DEFECT
// TODO: What?	WITHOUT_CLASSIFICATION	0.6190028654834615	DEFECT	0.3809971345165385	WITHOUT_CLASSIFICATION
// TODO: what?	WITHOUT_CLASSIFICATION	0.8927071658886931	DEFECT	0.1072928341113069	WITHOUT_CLASSIFICATION
// only targets we didn't have allready count	WITHOUT_CLASSIFICATION	0.9999938378036592	WITHOUT_CLASSIFICATION	6.162196340722145E-6	DEFECT
// If nothing selected, go to last selected target	WITHOUT_CLASSIFICATION	0.9999999439122547	WITHOUT_CLASSIFICATION	5.6087745423221085E-8	DEFECT
// Needed for Argo startup :-(	WITHOUT_CLASSIFICATION	0.9999999881793076	WITHOUT_CLASSIFICATION	1.1820692574720394E-8	DEFECT
/* Remove duplicates and take care of getOwner()         * and remove nulls: */	WITHOUT_CLASSIFICATION	0.999945182932235	WITHOUT_CLASSIFICATION	5.481706776501204E-5	DEFECT
/*|| !targets.contains(target)*/	WITHOUT_CLASSIFICATION	0.9999948183540117	WITHOUT_CLASSIFICATION	5.181645988177777E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999748478784519	WITHOUT_CLASSIFICATION	2.5152121548066763E-5	DEFECT
// Lazily create the event:	WITHOUT_CLASSIFICATION	0.9999995009738529	WITHOUT_CLASSIFICATION	4.99026147136317E-7	DEFECT
// Guaranteed to return a non-null array	WITHOUT_CLASSIFICATION	0.9999999594285716	WITHOUT_CLASSIFICATION	4.05714284274186E-8	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// implement set-like behaviour. The same element // may not be added more then once.	WITHOUT_CLASSIFICATION	0.9999949447437413	WITHOUT_CLASSIFICATION	5.055256258708644E-6	DEFECT
// we put the targets 'backwards' in the history // since the first target in the addedTargets array is // the first one selected.	WITHOUT_CLASSIFICATION	0.9999999979601288	WITHOUT_CLASSIFICATION	2.039871176645815E-9	DEFECT
// cannot break here since an object can be multiple // times in history	WITHOUT_CLASSIFICATION	0.9993231358952557	WITHOUT_CLASSIFICATION	6.768641047442571E-4	DEFECT
// CommentEdge - the owner of a FigEdgeNote	WITHOUT_CLASSIFICATION	0.9999987502191944	WITHOUT_CLASSIFICATION	1.2497808055898147E-6	DEFECT
// check if there are new elements in the list // if the old and new list are of the same size // set the oldTargets to the correct selection	WITHOUT_CLASSIFICATION	0.9999938889532514	WITHOUT_CLASSIFICATION	6.111046748587588E-6	DEFECT
// If not found, try the parent namespace	WITHOUT_CLASSIFICATION	0.9999980316659989	WITHOUT_CLASSIFICATION	1.9683340010236647E-6	DEFECT
// Listen for the removal of diagrams from project	WITHOUT_CLASSIFICATION	0.9999992900273441	WITHOUT_CLASSIFICATION	7.09972655825357E-7	DEFECT
// give priority to standard documentation tag	WITHOUT_CLASSIFICATION	0.999999877770204	WITHOUT_CLASSIFICATION	1.22229795984697E-7	DEFECT
// Figs on a diagram without an owning model element	WITHOUT_CLASSIFICATION	0.999992680412942	WITHOUT_CLASSIFICATION	7.319587058070619E-6	DEFECT
/* end class DocumentationManager */	WITHOUT_CLASSIFICATION	0.9999885727855965	WITHOUT_CLASSIFICATION	1.1427214403547799E-5	DEFECT
// TODO: Needs localization	WITHOUT_CLASSIFICATION	0.704462482999327	WITHOUT_CLASSIFICATION	0.2955375170006731	DEFECT
/* end class ChildGenRelated */	WITHOUT_CLASSIFICATION	0.999977343274346	WITHOUT_CLASSIFICATION	2.2656725654088113E-5	DEFECT
/*         * Convert the string (e.g. "aaa,bbb,ccc") into separate         * stereotype-names (e.g. "aaa", "bbb", "ccc").         */	WITHOUT_CLASSIFICATION	0.9999990181895574	WITHOUT_CLASSIFICATION	9.818104426261425E-7	DEFECT
// adds all stereotypes defined at the top level namespaces	WITHOUT_CLASSIFICATION	0.9999986940437435	WITHOUT_CLASSIFICATION	1.3059562565597638E-6	DEFECT
// and now remove them	WITHOUT_CLASSIFICATION	0.9999980111953389	WITHOUT_CLASSIFICATION	1.988804661107409E-6	DEFECT
// collect the to be removed stereotypes	WITHOUT_CLASSIFICATION	0.999997767945398	WITHOUT_CLASSIFICATION	2.232054601952183E-6	DEFECT
// the name of this type of diagram	WITHOUT_CLASSIFICATION	0.9999872634101719	WITHOUT_CLASSIFICATION	1.2736589828171767E-5	DEFECT
// add stereotypes	WITHOUT_CLASSIFICATION	0.9999990228658541	WITHOUT_CLASSIFICATION	9.771341458901232E-7	DEFECT
// Loop through each element in the namespace, recursing.	WITHOUT_CLASSIFICATION	0.9999999708790381	WITHOUT_CLASSIFICATION	2.9120961942097454E-8	DEFECT
/* end class UUIDManager */	WITHOUT_CLASSIFICATION	0.9999257538585358	WITHOUT_CLASSIFICATION	7.424614146418156E-5	DEFECT
/*     * @see javax.swing.table.TableModel#setValueAt(java.lang.Object, int, int)     */	WITHOUT_CLASSIFICATION	0.9999988680115955	WITHOUT_CLASSIFICATION	1.1319884044294357E-6	DEFECT
/*     * @see org.tigris.gef.util.ChildGenerator#gen(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999998438743908	WITHOUT_CLASSIFICATION	1.5612560923026134E-7	DEFECT
// Instance	WITHOUT_CLASSIFICATION	0.9999995892490866	WITHOUT_CLASSIFICATION	4.10750913437169E-7	DEFECT
//////////////////////////////////////////////////////////////// // comments	WITHOUT_CLASSIFICATION	0.9999851062143726	WITHOUT_CLASSIFICATION	1.4893785627401424E-5	DEFECT
// For all other model elements, return any elements // associated in any way	WITHOUT_CLASSIFICATION	0.999985389004786	WITHOUT_CLASSIFICATION	1.4610995214139686E-5	DEFECT
// adds all stereotypes defined at the profiles applied to the // current namespace	WITHOUT_CLASSIFICATION	0.9999992109721865	WITHOUT_CLASSIFICATION	7.890278134484632E-7	DEFECT
// adds all stereotypes defined at the profiles applied // to the current project	WITHOUT_CLASSIFICATION	0.9999996267009559	WITHOUT_CLASSIFICATION	3.7329904412134675E-7	DEFECT
//////////////// // TableModel implementation	WITHOUT_CLASSIFICATION	0.9999483593719618	WITHOUT_CLASSIFICATION	5.164062803814908E-5	DEFECT
// the name of this type of ModelElement	WITHOUT_CLASSIFICATION	0.9999791224505016	WITHOUT_CLASSIFICATION	2.0877549498397885E-5	DEFECT
// the name of this instance of ModelElement	WITHOUT_CLASSIFICATION	0.9999963901740664	WITHOUT_CLASSIFICATION	3.609825933547147E-6	DEFECT
// the name of the parent diagram instance	WITHOUT_CLASSIFICATION	0.9999997911617561	WITHOUT_CLASSIFICATION	2.088382439134313E-7	DEFECT
// the name of this type of Object	WITHOUT_CLASSIFICATION	0.9999713010876266	WITHOUT_CLASSIFICATION	2.869891237343224E-5	DEFECT
// not safe to presume the destination is the comment	WITHOUT_CLASSIFICATION	0.9999993230596945	WITHOUT_CLASSIFICATION	6.769403054270062E-7	DEFECT
// this also sets the target as a convenient side effect	WITHOUT_CLASSIFICATION	0.9999956999266857	WITHOUT_CLASSIFICATION	4.300073314331909E-6	DEFECT
// This is the tooltip of a comment link	WITHOUT_CLASSIFICATION	0.9999820938132743	WITHOUT_CLASSIFICATION	1.7906186725617852E-5	DEFECT
// Class	WITHOUT_CLASSIFICATION	0.9999928839561806	WITHOUT_CLASSIFICATION	7.1160438194823395E-6	DEFECT
/* end class ProjectMemberModel */	WITHOUT_CLASSIFICATION	0.9999815742466754	WITHOUT_CLASSIFICATION	1.8425753324522253E-5	DEFECT
//??	WITHOUT_CLASSIFICATION	0.99953592455561	WITHOUT_CLASSIFICATION	4.6407544439002623E-4	DEFECT
//??	WITHOUT_CLASSIFICATION	0.99953592455561	WITHOUT_CLASSIFICATION	4.6407544439002623E-4	DEFECT
//??	WITHOUT_CLASSIFICATION	0.99953592455561	WITHOUT_CLASSIFICATION	4.6407544439002623E-4	DEFECT
// Association	WITHOUT_CLASSIFICATION	0.999997025140201	WITHOUT_CLASSIFICATION	2.9748597989858093E-6	DEFECT
// Attribute	WITHOUT_CLASSIFICATION	0.9999994681635849	WITHOUT_CLASSIFICATION	5.318364151185916E-7	DEFECT
// State	WITHOUT_CLASSIFICATION	0.9999971310379062	WITHOUT_CLASSIFICATION	2.8689620939237966E-6	DEFECT
// Operation	WITHOUT_CLASSIFICATION	0.9999979743617085	WITHOUT_CLASSIFICATION	2.025638291521276E-6	DEFECT
// Interface	WITHOUT_CLASSIFICATION	0.9999995465695632	WITHOUT_CLASSIFICATION	4.5343043666790263E-7	DEFECT
// Link	WITHOUT_CLASSIFICATION	0.9999858529733103	WITHOUT_CLASSIFICATION	1.4147026689650209E-5	DEFECT
// // This function will, by design, contain long lists of i18n keys. // It might be tempting to shorten these by constructing them from // the parts but please then consider that we might loose the // possibility to build tools to statically check the property files // against this file. //	WITHOUT_CLASSIFICATION	0.9999904715626998	WITHOUT_CLASSIFICATION	9.528437300179823E-6	DEFECT
//umlReserved.add("document");	WITHOUT_CLASSIFICATION	0.9999991652614585	WITHOUT_CLASSIFICATION	8.347385414873863E-7	DEFECT
// replace all occurances of OFFENDER with the name of the // first offender	WITHOUT_CLASSIFICATION	0.9999999851498115	WITHOUT_CLASSIFICATION	1.4850188576677065E-8	DEFECT
// check for all uppercase and/or mixed with underscores	WITHOUT_CLASSIFICATION	0.9999993484798613	WITHOUT_CLASSIFICATION	6.515201387319628E-7	DEFECT
//umlReserved.add("file");	WITHOUT_CLASSIFICATION	0.999999552668597	WITHOUT_CLASSIFICATION	4.4733140306979597E-7	DEFECT
//umlReserved.add("node");	WITHOUT_CLASSIFICATION	0.9999988397278597	WITHOUT_CLASSIFICATION	1.1602721403020264E-6	DEFECT
//umlReserved.add("send");	WITHOUT_CLASSIFICATION	0.9999991489036293	WITHOUT_CLASSIFICATION	8.510963707822875E-7	DEFECT
/* The modelelement must have been                 * deleted - ignore this - it will pass. */	WITHOUT_CLASSIFICATION	0.9999974742827566	WITHOUT_CLASSIFICATION	2.5257172432810898E-6	DEFECT
// TODO: This could just work off the names in the UML profile // TODO: It doesn't look like it matches what's in the UML 1.4 spec	WITHOUT_CLASSIFICATION	0.937841705197252	DEFECT	0.062158294802748155	WITHOUT_CLASSIFICATION
//umlReserved.add("destroy");	WITHOUT_CLASSIFICATION	0.9999992623665523	WITHOUT_CLASSIFICATION	7.376334475466683E-7	DEFECT
// self.allConnections->forAll(ar|ar.participant <> self)	WITHOUT_CLASSIFICATION	0.9999998812711569	WITHOUT_CLASSIFICATION	1.1872884299412551E-7	DEFECT
/* end class CrCircularAssocClass */	WITHOUT_CLASSIFICATION	0.9999606813930809	WITHOUT_CLASSIFICATION	3.931860691898305E-5	DEFECT
/*(MAttribute)*/	WITHOUT_CLASSIFICATION	0.9999243335107655	WITHOUT_CLASSIFICATION	7.566648923451906E-5	DEFECT
// If the name is only underscores	WITHOUT_CLASSIFICATION	0.9999971111627701	WITHOUT_CLASSIFICATION	2.888837229825727E-6	DEFECT
/*     * @see javax.swing.Icon#paintIcon(java.awt.Component, java.awt.Graphics,     * int, int)     */	WITHOUT_CLASSIFICATION	0.9999997041405188	WITHOUT_CLASSIFICATION	2.9585948131936295E-7	DEFECT
/*     * @see javax.swing.Icon#getIconWidth()     */	WITHOUT_CLASSIFICATION	0.9999991963952016	WITHOUT_CLASSIFICATION	8.036047982524357E-7	DEFECT
/*     * @see javax.swing.Icon#getIconHeight()     */	WITHOUT_CLASSIFICATION	0.9999992397393432	WITHOUT_CLASSIFICATION	7.602606568016869E-7	DEFECT
/*     * @see javax.swing.Icon#paintIcon(java.awt.Component, java.awt.Graphics,     *      int, int)     */	WITHOUT_CLASSIFICATION	0.9999996829005435	WITHOUT_CLASSIFICATION	3.1709945649569267E-7	DEFECT
/*     * @see javax.swing.Icon#getIconWidth()     */	WITHOUT_CLASSIFICATION	0.9999991963952016	WITHOUT_CLASSIFICATION	8.036047982524357E-7	DEFECT
/*     * @see javax.swing.Icon#getIconHeight()     */	WITHOUT_CLASSIFICATION	0.9999992397393432	WITHOUT_CLASSIFICATION	7.602606568016869E-7	DEFECT
//     umlReserved.add("initial"); //     umlReserved.add("final"); //     umlReserved.add("fork"); //     umlReserved.add("join"); //     umlReserved.add("history");	WITHOUT_CLASSIFICATION	0.9999999429113867	WITHOUT_CLASSIFICATION	5.7088613258642604E-8	DEFECT
//umlReserved.add("copy"); //umlReserved.add("create");	WITHOUT_CLASSIFICATION	0.9999998847680003	WITHOUT_CLASSIFICATION	1.1523199975815676E-7	DEFECT
// Types can probably have associations, but we should not nag at them // not having any. // utility is a namespace collection - also not strictly required // to have associations.	WITHOUT_CLASSIFICATION	0.9917018071656142	DEFECT	0.008298192834385754	WITHOUT_CLASSIFICATION
/* end class ClAttributeCompartment */	WITHOUT_CLASSIFICATION	0.999978420736818	WITHOUT_CLASSIFICATION	2.1579263182064295E-5	DEFECT
// check whether constant, constants are often weird and thus not a // problem	WITHOUT_CLASSIFICATION	0.9999996236663837	WITHOUT_CLASSIFICATION	3.7633361631756115E-7	DEFECT
// why are we here?	WITHOUT_CLASSIFICATION	0.9998565203483744	WITHOUT_CLASSIFICATION	1.4347965162560486E-4	DEFECT
// If the classifier does not have a name, // then no problem - the model is not finished anyhow.	WITHOUT_CLASSIFICATION	0.9985104946964893	WITHOUT_CLASSIFICATION	0.001489505303510637	DEFECT
// added by Eric Lefevre 13 Mar 1999: we must check if the // FigText for attributes is drawn before drawing things // over it	WITHOUT_CLASSIFICATION	0.9999906086443885	WITHOUT_CLASSIFICATION	9.391355611529319E-6	DEFECT
// Abstract elements do not necessarily require associations	WITHOUT_CLASSIFICATION	0.9999985225182987	WITHOUT_CLASSIFICATION	1.4774817013728398E-6	DEFECT
//TODO: different critic or special message for classes //that inherit all ops but define none of their own.	WITHOUT_CLASSIFICATION	0.998174599622223	WITHOUT_CLASSIFICATION	0.0018254003777769512	DEFECT
//////////////////////////////////////////////////////////////// // instance variables	WITHOUT_CLASSIFICATION	0.9999997804293774	WITHOUT_CLASSIFICATION	2.195706224349368E-7	DEFECT
// added by Eric Lefevre 13 Mar 1999: we must check if the // FigText for operations is drawn before drawing things // over it	WITHOUT_CLASSIFICATION	0.9999956584425665	WITHOUT_CLASSIFICATION	4.3415574333888145E-6	DEFECT
// special cases for use cases // Extending use cases and use case that are being included are // not required to have associations.	WITHOUT_CLASSIFICATION	0.9996903681138003	WITHOUT_CLASSIFICATION	3.09631886199699E-4	DEFECT
// for use cases we need to check for extend/includes // actors cannot have them, so no need to check	WITHOUT_CLASSIFICATION	0.9999999933775876	WITHOUT_CLASSIFICATION	6.622412490027986E-9	DEFECT
// Get the ends from the association (we know there are two), and the // types associated with them.	WITHOUT_CLASSIFICATION	0.9996347701455793	WITHOUT_CLASSIFICATION	3.6522985442065755E-4	DEFECT
// The association that triggered the critic. Its just possible the // association is no longer there, in which case we return null	WITHOUT_CLASSIFICATION	0.9999999815753776	WITHOUT_CLASSIFICATION	1.842462237663097E-8	DEFECT
/* end class ClOperationCompartment */	WITHOUT_CLASSIFICATION	0.9999846967252077	WITHOUT_CLASSIFICATION	1.5303274792219496E-5	DEFECT
// First step. Create the panel if not already done and options are // available. Otherwise it retains its default value of null.	WITHOUT_CLASSIFICATION	0.9999999845487957	WITHOUT_CLASSIFICATION	1.545120431153278E-8	DEFECT
// Now create the five options	WITHOUT_CLASSIFICATION	0.9999998989697457	WITHOUT_CLASSIFICATION	1.0103025429426608E-7	DEFECT
// Get the names of the two ends. If there are none (i.e they are // currently anonymous), use the ArgoUML convention of "(anon)" for the // names	WITHOUT_CLASSIFICATION	0.9999991851465306	WITHOUT_CLASSIFICATION	8.148534693892381E-7	DEFECT
// Default (any other step) is to return nothing	WITHOUT_CLASSIFICATION	0.999999428122843	WITHOUT_CLASSIFICATION	5.71877157025297E-7	DEFECT
// Just completed the first step where we make our choices. First // see if we have a choice. We always should, so print a rude // message if we don't	WITHOUT_CLASSIFICATION	0.9999992618651858	WITHOUT_CLASSIFICATION	7.381348141580344E-7	DEFECT
// Set the appropriate aggregation on each end	WITHOUT_CLASSIFICATION	0.9999944214562534	WITHOUT_CLASSIFICATION	5.578543746710165E-6	DEFECT
// It is quite possible that the cause of the problem has by now // been deleted, in which case we will throw an exception if we try // to change things. Catch this tidily.	WITHOUT_CLASSIFICATION	0.9999993836014351	WITHOUT_CLASSIFICATION	6.163985648589059E-7	DEFECT
// Start is a composite aggregation of end	WITHOUT_CLASSIFICATION	0.9999998307421339	WITHOUT_CLASSIFICATION	1.6925786600709547E-7	DEFECT
// Start is a shared aggregation of end	WITHOUT_CLASSIFICATION	0.9999996381814932	WITHOUT_CLASSIFICATION	3.6181850680758273E-7	DEFECT
// End is a composite aggregation of start	WITHOUT_CLASSIFICATION	0.9999998219639467	WITHOUT_CLASSIFICATION	1.7803605333958366E-7	DEFECT
// End is a shared aggregation of start	WITHOUT_CLASSIFICATION	0.9999994369849816	WITHOUT_CLASSIFICATION	5.630150183578149E-7	DEFECT
// No aggregation	WITHOUT_CLASSIFICATION	0.9999995618972654	WITHOUT_CLASSIFICATION	4.381027346041083E-7	DEFECT
// Someone took our association away.	WITHOUT_CLASSIFICATION	0.9999442216765402	WITHOUT_CLASSIFICATION	5.577832345975942E-5	DEFECT
// Can't finish if our parent can't	WITHOUT_CLASSIFICATION	0.999983071073373	WITHOUT_CLASSIFICATION	1.692892662697385E-5	DEFECT
// Can finish if it's step 0	WITHOUT_CLASSIFICATION	0.9999990454104797	WITHOUT_CLASSIFICATION	9.545895203860383E-7	DEFECT
// Can finish if we're on step1 and have actually made a choice	WITHOUT_CLASSIFICATION	0.9999998049387899	WITHOUT_CLASSIFICATION	1.9506121007811544E-7	DEFECT
// Otherwise we can't finish	WITHOUT_CLASSIFICATION	0.9999904192468532	WITHOUT_CLASSIFICATION	9.58075314685674E-6	DEFECT
// TODO: The WFR doesn't restrict this to Classifiers - tfm	WITHOUT_CLASSIFICATION	0.8732917787089318	DEFECT	0.1267082212910682	WITHOUT_CLASSIFICATION
// TODO: The WFR doesn't restrict this to Classifiers - tfm	WITHOUT_CLASSIFICATION	0.8732917787089318	DEFECT	0.1267082212910682	WITHOUT_CLASSIFICATION
/*Model.getFacade().getModelElement(*/	WITHOUT_CLASSIFICATION	0.9990420129572697	WITHOUT_CLASSIFICATION	9.579870427304144E-4	DEFECT
/*)*/	WITHOUT_CLASSIFICATION	0.9996352371063981	WITHOUT_CLASSIFICATION	3.647628936019217E-4	DEFECT
// replace all occurances of OFFENDER with the name of the // first offender	WITHOUT_CLASSIFICATION	0.9999999851498115	WITHOUT_CLASSIFICATION	1.4850188576677065E-8	DEFECT
// check if there is no OCL_END; if so, the critic expression // is not correct and can not be expanded	WITHOUT_CLASSIFICATION	0.9999518535724976	WITHOUT_CLASSIFICATION	4.814642750245612E-5	DEFECT
// Get the Association and its connections. // Iterate over all the AssociationEnds and check that each connected // classifier is in the same sub-system or model	WITHOUT_CLASSIFICATION	0.9999992907953366	WITHOUT_CLASSIFICATION	7.092046633463534E-7	DEFECT
//////////////////////////////////////////////////////////////// // display related methods	WITHOUT_CLASSIFICATION	0.9999986345586911	WITHOUT_CLASSIFICATION	1.3654413088267194E-6	DEFECT
/* end class CrInterfaceAllPublic */	WITHOUT_CLASSIFICATION	0.9999877935633489	WITHOUT_CLASSIFICATION	1.2206436651227398E-5	DEFECT
// return original string if no replacements made	WITHOUT_CLASSIFICATION	0.9999999731736847	WITHOUT_CLASSIFICATION	2.6826315220905173E-8	DEFECT
// If we drop out there is no problem	WITHOUT_CLASSIFICATION	0.9999967016149072	WITHOUT_CLASSIFICATION	3.2983850928386115E-6	DEFECT
// Only look at associations	WITHOUT_CLASSIFICATION	0.9998795589189402	WITHOUT_CLASSIFICATION	1.2044108105974886E-4	DEFECT
/* end class CrCrossNamespaceAssoc */	WITHOUT_CLASSIFICATION	0.9997019158656151	WITHOUT_CLASSIFICATION	2.9808413438499836E-4	DEFECT
//TODO: different critic for packages consisting only //of references to elements of other packages?	WITHOUT_CLASSIFICATION	0.9966880502328987	WITHOUT_CLASSIFICATION	0.0033119497671012144	DEFECT
// The next AssociationEnd, and its classifier. Check the // classifier is in the namespace of the association. If not we // have a problem.	WITHOUT_CLASSIFICATION	0.9999450690208531	WITHOUT_CLASSIFICATION	5.49309791470141E-5	DEFECT
// original class was not abstract	WITHOUT_CLASSIFICATION	0.9999927795773038	WITHOUT_CLASSIFICATION	7.220422696110354E-6	DEFECT
// theStereotype.setStereotype(???);	WITHOUT_CLASSIFICATION	0.9999894053106508	WITHOUT_CLASSIFICATION	1.0594689349237163E-5	DEFECT
// found a concrete subclass	WITHOUT_CLASSIFICATION	0.9999997910117031	WITHOUT_CLASSIFICATION	2.089882968623639E-7	DEFECT
// Nothing to do.	WITHOUT_CLASSIFICATION	0.9999986985597896	WITHOUT_CLASSIFICATION	1.3014402104374594E-6	DEFECT
// no concrete subclasses defined, this class is "useless"	WITHOUT_CLASSIFICATION	0.999999754809434	WITHOUT_CLASSIFICATION	2.451905659200929E-7	DEFECT
// //   see if there is already an element with the same name //	WITHOUT_CLASSIFICATION	0.999999159177544	WITHOUT_CLASSIFICATION	8.408224560277425E-7	DEFECT
/* end class CrClassMustBeAbstract */	WITHOUT_CLASSIFICATION	0.9999778802619108	WITHOUT_CLASSIFICATION	2.211973808920328E-5	DEFECT
/* end class CrUselessAbstract */	WITHOUT_CLASSIFICATION	0.9999940888412011	WITHOUT_CLASSIFICATION	5.911158798789153E-6	DEFECT
/*(MClassifier)*/	WITHOUT_CLASSIFICATION	0.999970319103525	WITHOUT_CLASSIFICATION	2.9680896475029953E-5	DEFECT
// Only look at classes	WITHOUT_CLASSIFICATION	0.9999799236884684	WITHOUT_CLASSIFICATION	2.0076311531578843E-5	DEFECT
//TODO: different critic or special message for classes //that inherit all ops but define none of their own.	WITHOUT_CLASSIFICATION	0.998174599622223	WITHOUT_CLASSIFICATION	0.0018254003777769512	DEFECT
// utility is a namespace collection - also not strictly // required to have operations.	WITHOUT_CLASSIFICATION	0.9992081077598707	WITHOUT_CLASSIFICATION	7.918922401292048E-4	DEFECT
/* end class CrTooManyAssoc */	WITHOUT_CLASSIFICATION	0.9995934213518898	WITHOUT_CLASSIFICATION	4.06578648110239E-4	DEFECT
/* end class CrUselessInterface */	WITHOUT_CLASSIFICATION	0.9999930325705715	WITHOUT_CLASSIFICATION	6.967429428484984E-6	DEFECT
/* end class CrComponentInstanceWithoutClassifier */	WITHOUT_CLASSIFICATION	0.9999994671030313	WITHOUT_CLASSIFICATION	5.328969686621167E-7	DEFECT
/* end class CrTooManyClasses */	WITHOUT_CLASSIFICATION	0.9998712344876671	WITHOUT_CLASSIFICATION	1.2876551233288174E-4	DEFECT
// We don't consider secondary stuff.	WITHOUT_CLASSIFICATION	0.9999940895727294	WITHOUT_CLASSIFICATION	5.910427270611182E-6	DEFECT
// if the object does not have a name, // than no problem	WITHOUT_CLASSIFICATION	0.9999386244448092	WITHOUT_CLASSIFICATION	6.137555519085069E-5	DEFECT
// types can probably contain operations, but we should not nag at them // not having any.	WITHOUT_CLASSIFICATION	0.9972243559060626	WITHOUT_CLASSIFICATION	0.002775644093937339	DEFECT
// Types don't need a constructor.	WITHOUT_CLASSIFICATION	0.9999957067846013	WITHOUT_CLASSIFICATION	4.2932153987844796E-6	DEFECT
// Utilities usually do not require a constructor either	WITHOUT_CLASSIFICATION	0.9999998290021795	WITHOUT_CLASSIFICATION	1.7099782048043234E-7	DEFECT
// Check for uninitialised instance variables and // constructor.	WITHOUT_CLASSIFICATION	0.9999999896908203	WITHOUT_CLASSIFICATION	1.0309179733685528E-8	DEFECT
// Get all the features (giving up if there are none). Then loop // through finding all operations. Each time we find one, we compare // its signature with all previous (held in collection operSeen),  // and then if it doesn't match add it to the collection.	WITHOUT_CLASSIFICATION	0.9999999571306661	WITHOUT_CLASSIFICATION	4.2869333850568637E-8	DEFECT
// There is a constructor.	WITHOUT_CLASSIFICATION	0.9999987280524307	WITHOUT_CLASSIFICATION	1.2719475692482826E-6	DEFECT
/* end class CrTooManyStates */	WITHOUT_CLASSIFICATION	0.9999442935439382	WITHOUT_CLASSIFICATION	5.570645606188647E-5	DEFECT
// We have found a non-static one that is not initialized.	WITHOUT_CLASSIFICATION	0.9999985286950781	WITHOUT_CLASSIFICATION	1.471304921822452E-6	DEFECT
// Compare against all earlier operations. If there's a match we've // found the problem	WITHOUT_CLASSIFICATION	0.999999986193157	WITHOUT_CLASSIFICATION	1.3806842860505225E-8	DEFECT
// Check that the parameter lists match.	WITHOUT_CLASSIFICATION	0.9999969656787503	WITHOUT_CLASSIFICATION	3.034321249665482E-6	DEFECT
// Add to the collection and round to look at the next one	WITHOUT_CLASSIFICATION	0.999999246547852	WITHOUT_CLASSIFICATION	7.534521480902789E-7	DEFECT
// yeah right...we don't have an operation (and thus no	WITHOUT_CLASSIFICATION	0.9998054217770084	WITHOUT_CLASSIFICATION	1.9457822299169962E-4	DEFECT
// This pair of params where the same. Lets check the next pair.	WITHOUT_CLASSIFICATION	0.9999994534192831	WITHOUT_CLASSIFICATION	5.465807168938621E-7	DEFECT
// Only do this for classifiers	WITHOUT_CLASSIFICATION	0.9999531422799783	WITHOUT_CLASSIFICATION	4.685772002167663E-5	DEFECT
// Get the next non-return parameter. Null if non left.	WITHOUT_CLASSIFICATION	0.9999993441619635	WITHOUT_CLASSIFICATION	6.558380366757238E-7	DEFECT
// If we drop out here, there was no match and we have no problem	WITHOUT_CLASSIFICATION	0.9999991256765555	WITHOUT_CLASSIFICATION	8.743234446756872E-7	DEFECT
// Check that the names match.	WITHOUT_CLASSIFICATION	0.9999967007221529	WITHOUT_CLASSIFICATION	3.2992778471904233E-6	DEFECT
// Both lists have the same length	WITHOUT_CLASSIFICATION	0.9999086791237715	WITHOUT_CLASSIFICATION	9.132087622843329E-5	DEFECT
// Both lists have the same length.	WITHOUT_CLASSIFICATION	0.9999451889049236	WITHOUT_CLASSIFICATION	5.481109507645558E-5	DEFECT
// Different lengths:	WITHOUT_CLASSIFICATION	0.9999960149837542	WITHOUT_CLASSIFICATION	3.985016245762527E-6	DEFECT
/* end class CrMultiComposite */	WITHOUT_CLASSIFICATION	0.9999879964120686	WITHOUT_CLASSIFICATION	1.2003587931499053E-5	DEFECT
// Compare the type of the parameters. If any of the types is // null, then we have a match.	WITHOUT_CLASSIFICATION	0.9999987888270234	WITHOUT_CLASSIFICATION	1.2111729765503194E-6	DEFECT
// normal model elements are not allowed to have spaces, // but for States we make an exception	WITHOUT_CLASSIFICATION	0.99997770416358	WITHOUT_CLASSIFICATION	2.229583642008127E-5	DEFECT
// initialize test data	WITHOUT_CLASSIFICATION	0.9999997294321407	WITHOUT_CLASSIFICATION	2.705678593092569E-7	DEFECT
/* end class CrIllegalName */	WITHOUT_CLASSIFICATION	0.9998593552410694	WITHOUT_CLASSIFICATION	1.4064475893063304E-4	DEFECT
/* dm is a transition */	WITHOUT_CLASSIFICATION	0.9998299977431033	WITHOUT_CLASSIFICATION	1.7000225689665707E-4	DEFECT
// initialize new ToDoItem	WITHOUT_CLASSIFICATION	0.9999912216671458	WITHOUT_CLASSIFICATION	8.778332854174937E-6	DEFECT
/* the source of the transition is a pseudostate */	WITHOUT_CLASSIFICATION	0.9999982310325689	WITHOUT_CLASSIFICATION	1.768967431129774E-6	DEFECT
/* the source of the transition is a choice */	WITHOUT_CLASSIFICATION	0.9999986285234193	WITHOUT_CLASSIFICATION	1.3714765807548864E-6	DEFECT
/* end class CrTooManyAttr */	WITHOUT_CLASSIFICATION	0.9997863773959286	WITHOUT_CLASSIFICATION	2.1362260407153038E-4	DEFECT
//////////////////////////////////////////////////////////////// // critiquing API	WITHOUT_CLASSIFICATION	0.999998545883252	WITHOUT_CLASSIFICATION	1.4541167480062568E-6	DEFECT
/* end class CrZeroLengthEdge */	WITHOUT_CLASSIFICATION	0.9999188093947778	WITHOUT_CLASSIFICATION	8.119060522214679E-5	DEFECT
/*(MStateVertex)*/	WITHOUT_CLASSIFICATION	0.9998972070174361	WITHOUT_CLASSIFICATION	1.0279298256383683E-4	DEFECT
/*(MAssociationEnd)*/	WITHOUT_CLASSIFICATION	0.9996940980751577	WITHOUT_CLASSIFICATION	3.0590192484221255E-4	DEFECT
// only classes with name need a constructor	WITHOUT_CLASSIFICATION	0.9999947025749545	WITHOUT_CLASSIFICATION	5.297425045554918E-6	DEFECT
//Forks have their own outgoing transitions critic	WITHOUT_CLASSIFICATION	0.9999924113097699	WITHOUT_CLASSIFICATION	7.588690230058195E-6	DEFECT
// types can probably have variables, but we should not nag at them // not having any.	WITHOUT_CLASSIFICATION	0.9934263811858214	WITHOUT_CLASSIFICATION	0.006573618814178552	DEFECT
// code generation	WITHOUT_CLASSIFICATION	0.9999853673857098	WITHOUT_CLASSIFICATION	1.4632614290149687E-5	DEFECT
// utility is a namespace collection - also not strictly // required to have variables.	WITHOUT_CLASSIFICATION	0.9992159109089744	WITHOUT_CLASSIFICATION	7.840890910255985E-4	DEFECT
// If we find an instance variable that is not a constant // we have succeeded	WITHOUT_CLASSIFICATION	0.9999999695172085	WITHOUT_CLASSIFICATION	3.048279146628422E-8	DEFECT
// I am only prepared to go this far.	WITHOUT_CLASSIFICATION	0.9999566820351582	WITHOUT_CLASSIFICATION	4.3317964841874235E-5	DEFECT
/*(Classifier)*/	WITHOUT_CLASSIFICATION	0.9999809778760966	WITHOUT_CLASSIFICATION	1.9022123903402822E-5	DEFECT
// first element is e.g. the class, but we need to have its namespace // to recompute the offenders.	WITHOUT_CLASSIFICATION	0.999998329104459	WITHOUT_CLASSIFICATION	1.6708955409538384E-6	DEFECT
// Compound critics	WITHOUT_CLASSIFICATION	0.9999999229764612	WITHOUT_CLASSIFICATION	7.702353874095788E-8	DEFECT
// warn about inherited name conflicts, different critic?	WITHOUT_CLASSIFICATION	0.999995558428258	WITHOUT_CLASSIFICATION	4.441571741898459E-6	DEFECT
// warn about inherited name conflicts, different critic?	WITHOUT_CLASSIFICATION	0.999995558428258	WITHOUT_CLASSIFICATION	4.441571741898459E-6	DEFECT
/*(MAssociation)*/	WITHOUT_CLASSIFICATION	0.9998153494427139	WITHOUT_CLASSIFICATION	1.8465055728622155E-4	DEFECT
// Only look at Associations	WITHOUT_CLASSIFICATION	0.9999525076208332	WITHOUT_CLASSIFICATION	4.749237916675641E-5	DEFECT
// container state / composite state	WITHOUT_CLASSIFICATION	0.9999997424924133	WITHOUT_CLASSIFICATION	2.575075867897966E-7	DEFECT
// Iterate over all the AssociationEnds. We only have a problem if 1) // there is an end connected to an Interface and 2) an end other than // that end is navigable.	WITHOUT_CLASSIFICATION	0.9999797528418213	WITHOUT_CLASSIFICATION	2.0247158178777335E-5	DEFECT
// both ends must be classes, otherwise there is nothing to merge	WITHOUT_CLASSIFICATION	0.9999973969836926	WITHOUT_CLASSIFICATION	2.6030163074947056E-6	DEFECT
// We can give up looking if we've hit both criteria	WITHOUT_CLASSIFICATION	0.9999830119893438	WITHOUT_CLASSIFICATION	1.698801065617093E-5	DEFECT
// both ends must be navigable, otherwise there is nothing to merge	WITHOUT_CLASSIFICATION	0.9999986393407441	WITHOUT_CLASSIFICATION	1.3606592559273652E-6	DEFECT
// End at an Interface? // Navigable other end?	WITHOUT_CLASSIFICATION	0.9999960722380271	WITHOUT_CLASSIFICATION	3.92776197289382E-6	DEFECT
/* end class CrMergeClasses */	WITHOUT_CLASSIFICATION	0.9998995169772036	WITHOUT_CLASSIFICATION	1.0048302279629826E-4	DEFECT
// Specify design issue category and knowledge type	WITHOUT_CLASSIFICATION	0.9999996898219418	WITHOUT_CLASSIFICATION	3.101780583309796E-7	DEFECT
// If we drop out we didn't meet both criteria, and all is well.	WITHOUT_CLASSIFICATION	0.9999681076747754	WITHOUT_CLASSIFICATION	3.189232522455145E-5	DEFECT
// The next AssociationEnd	WITHOUT_CLASSIFICATION	0.9999984267723323	WITHOUT_CLASSIFICATION	1.5732276676476822E-6	DEFECT
// If its an interface we have an interface end, otherwise its // something else and we should see if it is navigable. We don't // check that the end is a Classifier, rather than its child // ClassifierRole, since we have effectively eliminated that // possiblity in rejecting AssociationRoles above.	WITHOUT_CLASSIFICATION	0.9999632197178788	WITHOUT_CLASSIFICATION	3.678028212114305E-5	DEFECT
/* end class CrNavFromInterface */	WITHOUT_CLASSIFICATION	0.999971992118607	WITHOUT_CLASSIFICATION	2.800788139303211E-5	DEFECT
/*(MCompositeState)*/	WITHOUT_CLASSIFICATION	0.9999714094436574	WITHOUT_CLASSIFICATION	2.859055634269025E-5	DEFECT
/* end class CrNoInitialState */	WITHOUT_CLASSIFICATION	0.99998064445624	WITHOUT_CLASSIFICATION	1.9355543759985776E-5	DEFECT
//////////////////////////////////////////////////////////////// // critiquing API	WITHOUT_CLASSIFICATION	0.999998545883252	WITHOUT_CLASSIFICATION	1.4541167480062568E-6	DEFECT
/* end class CrInstanceWithoutClassifier */	WITHOUT_CLASSIFICATION	0.9999981112861944	WITHOUT_CLASSIFICATION	1.888713805583299E-6	DEFECT
/* Now we are sure dm is a Composite State. */	WITHOUT_CLASSIFICATION	0.9999994430648653	WITHOUT_CLASSIFICATION	5.569351345783684E-7	DEFECT
// In DeploymentDiagrams the situation is not the // same as in other diagrams only classes, // interfaces and objects can intersect each other // while they are not the EnclosingFig, so you // have to prouve only these elements.	WITHOUT_CLASSIFICATION	0.9999999706461814	WITHOUT_CLASSIFICATION	2.9353818630004E-8	DEFECT
/* Now we are sure dm is a StateVertex. */	WITHOUT_CLASSIFICATION	0.9999975724804719	WITHOUT_CLASSIFICATION	2.4275195280210595E-6	DEFECT
/* Now we are sure dm is a State. */	WITHOUT_CLASSIFICATION	0.9999980029428158	WITHOUT_CLASSIFICATION	1.997057184165205E-6	DEFECT
/* If dm is the top state of the statemachine, then it is              * not supposed to have incoming transitions. */	WITHOUT_CLASSIFICATION	0.9999999376751328	WITHOUT_CLASSIFICATION	6.232486724778124E-8	DEFECT
/*(MAssociationEnd)*/	WITHOUT_CLASSIFICATION	0.9996940980751577	WITHOUT_CLASSIFICATION	3.0590192484221255E-4	DEFECT
/*(MAssociation)*/	WITHOUT_CLASSIFICATION	0.9998153494427139	WITHOUT_CLASSIFICATION	1.8465055728622155E-4	DEFECT
// container state / composite state	WITHOUT_CLASSIFICATION	0.9999997424924133	WITHOUT_CLASSIFICATION	2.575075867897966E-7	DEFECT
/* end class CrInvalidSynch */	WITHOUT_CLASSIFICATION	0.9999678353264734	WITHOUT_CLASSIFICATION	3.216467352674012E-5	DEFECT
// no good trigger	WITHOUT_CLASSIFICATION	0.9999996268781336	WITHOUT_CLASSIFICATION	3.7312186635224716E-7	DEFECT
/* end class CrConflictingComposites */	WITHOUT_CLASSIFICATION	0.999989700338838	WITHOUT_CLASSIFICATION	1.0299661161990114E-5	DEFECT
/* end class CrAlreadyRealizes */	WITHOUT_CLASSIFICATION	0.9997123522407623	WITHOUT_CLASSIFICATION	2.8764775923777804E-4	DEFECT
/* end class CrUnnavigableAssoc */	WITHOUT_CLASSIFICATION	0.9999565809691179	WITHOUT_CLASSIFICATION	4.3419030882121966E-5	DEFECT
//TODO: GenNavigableClasses?	WITHOUT_CLASSIFICATION	0.9698351476483895	WITHOUT_CLASSIFICATION	0.03016485235161039	DEFECT
/* end class CrDisambigStateName */	WITHOUT_CLASSIFICATION	0.999944425049539	WITHOUT_CLASSIFICATION	5.557495046107746E-5	DEFECT
/*(MAssociationEnd)*/	WITHOUT_CLASSIFICATION	0.9996940980751577	WITHOUT_CLASSIFICATION	3.0590192484221255E-4	DEFECT
/*(MAssociation)*/	WITHOUT_CLASSIFICATION	0.9998153494427139	WITHOUT_CLASSIFICATION	1.8465055728622155E-4	DEFECT
/* end class WizMEName */	WITHOUT_CLASSIFICATION	0.9995012352244639	WITHOUT_CLASSIFICATION	4.98764775536148E-4	DEFECT
// Only for associations	WITHOUT_CLASSIFICATION	0.9999854068575766	WITHOUT_CLASSIFICATION	1.4593142423376538E-5	DEFECT
// Get the assocations and connections. No problem (there is a separate // critic) if this is not a binary association or is an association // role.	WITHOUT_CLASSIFICATION	0.9997924073792498	WITHOUT_CLASSIFICATION	2.075926207501483E-4	DEFECT
// Loop through the associations, counting the ends with aggregations	WITHOUT_CLASSIFICATION	0.9999948394487674	WITHOUT_CLASSIFICATION	5.160551232538956E-6	DEFECT
// A problem if we found more than 1 aggregation	WITHOUT_CLASSIFICATION	0.9999990390417053	WITHOUT_CLASSIFICATION	9.609582946770784E-7	DEFECT
/* end class CrMultipleAgg */	WITHOUT_CLASSIFICATION	0.9999342910598202	WITHOUT_CLASSIFICATION	6.57089401797291E-5	DEFECT
/* end class CrNameConflictAC */	WITHOUT_CLASSIFICATION	0.9998595666557714	WITHOUT_CLASSIFICATION	1.40433344228763E-4	DEFECT
/* end class WizNavigable */	WITHOUT_CLASSIFICATION	0.9999561201002256	WITHOUT_CLASSIFICATION	4.387989977432733E-5	DEFECT
/* end class CrFinalSubclassed */	WITHOUT_CLASSIFICATION	0.9999887857043152	WITHOUT_CLASSIFICATION	1.1214295684717506E-5	DEFECT
// no good trigger	WITHOUT_CLASSIFICATION	0.9999996268781336	WITHOUT_CLASSIFICATION	3.7312186635224716E-7	DEFECT
//TODO: AssociationRole	WITHOUT_CLASSIFICATION	0.9701427570358516	WITHOUT_CLASSIFICATION	0.02985724296414832	DEFECT
//                LOG.log(Level.FINE, "Finding children for " + o.getClass());	WITHOUT_CLASSIFICATION	0.9999998715691041	WITHOUT_CLASSIFICATION	1.284308958360001E-7	DEFECT
// argument can be an instanceof a Fig which we ignore	WITHOUT_CLASSIFICATION	0.9999999942440732	WITHOUT_CLASSIFICATION	5.755926892380296E-9	DEFECT
// no need for trigger on "specialization"	WITHOUT_CLASSIFICATION	0.9999998179833368	WITHOUT_CLASSIFICATION	1.820166632939498E-7	DEFECT
/* end class CrCircularInheritance */	WITHOUT_CLASSIFICATION	0.9999902968898674	WITHOUT_CLASSIFICATION	9.703110132687209E-6	DEFECT
/* end class CrNonAggDataType */	WITHOUT_CLASSIFICATION	0.999906457919712	WITHOUT_CLASSIFICATION	9.354208028801492E-5	DEFECT
////////////////	WITHOUT_CLASSIFICATION	0.999986703801834	WITHOUT_CLASSIFICATION	1.3296198166041837E-5	DEFECT
////////////////	WITHOUT_CLASSIFICATION	0.999986703801834	WITHOUT_CLASSIFICATION	1.3296198166041837E-5	DEFECT
// test an unknown file	WITHOUT_CLASSIFICATION	0.9999928764629424	WITHOUT_CLASSIFICATION	7.123537057536812E-6	DEFECT
// container state / composite state	WITHOUT_CLASSIFICATION	0.9999997424924133	WITHOUT_CLASSIFICATION	2.575075867897966E-7	DEFECT
// no good trigger	WITHOUT_CLASSIFICATION	0.9999996268781336	WITHOUT_CLASSIFICATION	3.7312186635224716E-7	DEFECT
/*(MTransition)*/	WITHOUT_CLASSIFICATION	0.9999565348014675	WITHOUT_CLASSIFICATION	4.3465198532566185E-5	DEFECT
// WFR Transitions, OMG UML 1.3	WITHOUT_CLASSIFICATION	0.9999950712509841	WITHOUT_CLASSIFICATION	4.92874901586338E-6	DEFECT
// Only work for associations	WITHOUT_CLASSIFICATION	0.9990532328961274	WITHOUT_CLASSIFICATION	9.467671038727288E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999748478784519	WITHOUT_CLASSIFICATION	2.5152121548066763E-5	DEFECT
// No problem if this is an association role.	WITHOUT_CLASSIFICATION	0.9998739650484487	WITHOUT_CLASSIFICATION	1.2603495155126933E-4	DEFECT
// Loop through all the ends, comparing the name against those already // seen (ignoring any with no name). // No problem if there are no connections defined, we will fall // through immediately.	WITHOUT_CLASSIFICATION	0.9999964177232091	WITHOUT_CLASSIFICATION	3.5822767909200746E-6	DEFECT
/* end class CrInterfaceOperOnly */	WITHOUT_CLASSIFICATION	0.9999848339808649	WITHOUT_CLASSIFICATION	1.5166019135212456E-5	DEFECT
// Ignore non-existent and empty names	WITHOUT_CLASSIFICATION	0.9999998118098716	WITHOUT_CLASSIFICATION	1.8819012837153317E-7	DEFECT
// Is the name already in the list of those seen, if not add it // and go on round.	WITHOUT_CLASSIFICATION	0.9999998521780104	WITHOUT_CLASSIFICATION	1.4782198975163708E-7	DEFECT
// Only work for associatins	WITHOUT_CLASSIFICATION	0.9987107150020236	WITHOUT_CLASSIFICATION	0.0012892849979764432	DEFECT
// If we drop out there were no clashes	WITHOUT_CLASSIFICATION	0.9999996321508869	WITHOUT_CLASSIFICATION	3.67849113109575E-7	DEFECT
/*     * @see javax.swing.Icon#paintIcon(java.awt.Component, java.awt.Graphics,     * int, int)     */	WITHOUT_CLASSIFICATION	0.9999997041405188	WITHOUT_CLASSIFICATION	2.9585948131936295E-7	DEFECT
/*     * @see javax.swing.Icon#getIconWidth()     */	WITHOUT_CLASSIFICATION	0.9999991963952016	WITHOUT_CLASSIFICATION	8.036047982524357E-7	DEFECT
/*     * @see javax.swing.Icon#getIconHeight()     */	WITHOUT_CLASSIFICATION	0.9999992397393432	WITHOUT_CLASSIFICATION	7.602606568016869E-7	DEFECT
/*(MAssociationEnd)*/	WITHOUT_CLASSIFICATION	0.9996940980751577	WITHOUT_CLASSIFICATION	3.0590192484221255E-4	DEFECT
/*(MAssociation)*/	WITHOUT_CLASSIFICATION	0.9998153494427139	WITHOUT_CLASSIFICATION	1.8465055728622155E-4	DEFECT
/* Now we are sure dm is a StateVertex. */	WITHOUT_CLASSIFICATION	0.9999975724804719	WITHOUT_CLASSIFICATION	2.4275195280210595E-6	DEFECT
/* Now we are sure dm is a State. */	WITHOUT_CLASSIFICATION	0.9999980029428158	WITHOUT_CLASSIFICATION	1.997057184165205E-6	DEFECT
/* Now we are sure dm is a Composite State. */	WITHOUT_CLASSIFICATION	0.9999994430648653	WITHOUT_CLASSIFICATION	5.569351345783684E-7	DEFECT
/* end class ClClassName */	WITHOUT_CLASSIFICATION	0.9998968059875295	WITHOUT_CLASSIFICATION	1.031940124704946E-4	DEFECT
/* If dm is the top state of the statemachine, then it is              * not supposed to have outgoing transitions. */	WITHOUT_CLASSIFICATION	0.9999999819058311	WITHOUT_CLASSIFICATION	1.8094168978887486E-8	DEFECT
/* end class CrTooManyOper */	WITHOUT_CLASSIFICATION	0.9997781446423215	WITHOUT_CLASSIFICATION	2.2185535767850665E-4	DEFECT
/* end class CrTooManyTransitions */	WITHOUT_CLASSIFICATION	0.9998870735452191	WITHOUT_CLASSIFICATION	1.1292645478087966E-4	DEFECT
// general	WITHOUT_CLASSIFICATION	0.9999894654907789	WITHOUT_CLASSIFICATION	1.0534509221022563E-5	DEFECT
// Loop through the associations, looking for one with aggregation	WITHOUT_CLASSIFICATION	0.9999947837668902	WITHOUT_CLASSIFICATION	5.216233109720002E-6	DEFECT
// If drop out, we're OK	WITHOUT_CLASSIFICATION	0.9999996172104798	WITHOUT_CLASSIFICATION	3.8278952026910036E-7	DEFECT
/* end class CrNWayAgg.java */	WITHOUT_CLASSIFICATION	0.999869652822649	WITHOUT_CLASSIFICATION	1.3034717735105575E-4	DEFECT
/* end class CrOppEndConflict */	WITHOUT_CLASSIFICATION	0.9999575898148505	WITHOUT_CLASSIFICATION	4.241018514947341E-5	DEFECT
// we could check for base class of the stereotype but the // condition normally covers it all.	WITHOUT_CLASSIFICATION	0.9999648850055499	WITHOUT_CLASSIFICATION	3.511499445009924E-5	DEFECT
// intentional: if there is nonsense in the field, // we return false	WITHOUT_CLASSIFICATION	0.9999988339943954	WITHOUT_CLASSIFICATION	1.1660056045919434E-6	DEFECT
// intentional: if there is nonsense in the field, // we do not set the value	WITHOUT_CLASSIFICATION	0.9999942267585132	WITHOUT_CLASSIFICATION	5.773241486706487E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999748478784519	WITHOUT_CLASSIFICATION	2.5152121548066763E-5	DEFECT
/*     * @see org.tigris.gef.base.Diagram#setName(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999999080448428	WITHOUT_CLASSIFICATION	9.195515722283618E-8	DEFECT
/*     * @see org.tigris.gef.graph.MutableGraphModel#containsNode(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999737013266	WITHOUT_CLASSIFICATION	2.62986732367132E-8	DEFECT
//        newEdge.setDiElement( //            GraphChangeAdapter.getInstance().createElement(gm, edge));	WITHOUT_CLASSIFICATION	0.9999999872004284	WITHOUT_CLASSIFICATION	1.2799571567983143E-8	DEFECT
/////////////////// End GEF methods ////////////////////////	WITHOUT_CLASSIFICATION	0.9999988804427146	WITHOUT_CLASSIFICATION	1.1195572855043562E-6	DEFECT
// not allowed	WITHOUT_CLASSIFICATION	0.9999990182454256	WITHOUT_CLASSIFICATION	9.81754574357249E-7	DEFECT
// return;	WITHOUT_CLASSIFICATION	0.9999992861169462	WITHOUT_CLASSIFICATION	7.138830538664189E-7	DEFECT
// TODO: Comments are on Element in UML 2.x	WITHOUT_CLASSIFICATION	0.5042015632005921	DEFECT	0.49579843679940805	WITHOUT_CLASSIFICATION
/*     * Create a diagram.  This 4-arg version is only for internal use.  The     * 'namespace' argument is deprecated and not used in the new APIs.     */	WITHOUT_CLASSIFICATION	0.9999999912992232	WITHOUT_CLASSIFICATION	8.700776899998799E-9	DEFECT
// This shouldn't be possible, but just in case	WITHOUT_CLASSIFICATION	0.9958643332056146	WITHOUT_CLASSIFICATION	0.0041356667943854035	DEFECT
// fail silently as we expect users to accidentally drop // on to wrong component	WITHOUT_CLASSIFICATION	0.999992438883805	WITHOUT_CLASSIFICATION	7.561116195105648E-6	DEFECT
// Create the UML connection of the given type between the // given model elements. // default aggregation (none)	WITHOUT_CLASSIFICATION	0.9999999978133167	WITHOUT_CLASSIFICATION	2.1866832218693397E-9	DEFECT
// Commentlinks for comments. Iterate over all the comment links // to find the comment and annotated elements.	WITHOUT_CLASSIFICATION	0.9999770408395701	WITHOUT_CLASSIFICATION	2.2959160429958856E-5	DEFECT
// The connection is not valid unless both nodes are // in this graph model.	WITHOUT_CLASSIFICATION	0.9999505241525127	WITHOUT_CLASSIFICATION	4.947584748723115E-5	DEFECT
/*             * The diagram are always owned by the model             * in this first implementation.             */	WITHOUT_CLASSIFICATION	0.9999743130654876	WITHOUT_CLASSIFICATION	2.568693451250866E-5	DEFECT
// *IMPORTANT* - These MUST remain in order!	WITHOUT_CLASSIFICATION	0.9999993748346163	WITHOUT_CLASSIFICATION	6.251653838156251E-7	DEFECT
// singleton, no instantiation	WITHOUT_CLASSIFICATION	0.9999996593144947	WITHOUT_CLASSIFICATION	3.4068550534076095E-7	DEFECT
/*     * The special value <code>null</code> is used internally to indicate that     * the default value should be inherited from the next level of settings.     */	WITHOUT_CLASSIFICATION	0.9999999981454878	WITHOUT_CLASSIFICATION	1.8545122512017761E-9	DEFECT
// Repeat until no faults are fixed	WITHOUT_CLASSIFICATION	0.9999891106002433	WITHOUT_CLASSIFICATION	1.0889399756567738E-5	DEFECT
/* Diagram appearance settings with project scope: */	WITHOUT_CLASSIFICATION	0.9992932010818906	WITHOUT_CLASSIFICATION	7.067989181094807E-4	DEFECT
// We can not remove this and have the application manage things directly // based on the font, since only the names should be bold.	WITHOUT_CLASSIFICATION	0.9999376416407287	WITHOUT_CLASSIFICATION	6.2358359271201E-5	DEFECT
/* Some cached fonts based on the above settings */	WITHOUT_CLASSIFICATION	0.9995883676062329	WITHOUT_CLASSIFICATION	4.116323937671103E-4	DEFECT
/*         * Since body ever looks         * at the type of the diagram appearance event, we can simplify from         * sending every existing event to one event only. But since there is no         * catch-all event defined, we just use one. Rationale: reduce the         * number of total refreshes of the drawing.         */	WITHOUT_CLASSIFICATION	0.9999999915930137	WITHOUT_CLASSIFICATION	8.406986326050542E-9	DEFECT
// If we've got a local (uninherited) font name or size or if we've got // no parent to inherit from recompute our cached fonts	WITHOUT_CLASSIFICATION	0.9999999416919223	WITHOUT_CLASSIFICATION	5.830807778194951E-8	DEFECT
/** * This class is a temporary wrapper around the GEF UndoManager. * This will be changed when GEF is modified to create commands and * provide an observer interface for ArgoUML to receive them. * <p> * TODO: How does this relate to {@link org.argouml.kernel.DefaultUndoManager}? * * @author Bob Tarling */	WITHOUT_CLASSIFICATION	0.9716316672430532	DEFECT	0.028368332756946803	WITHOUT_CLASSIFICATION
// Listen for name changes so we can veto them if we don't like them	WITHOUT_CLASSIFICATION	0.9999950432550936	WITHOUT_CLASSIFICATION	4.956744906431021E-6	DEFECT
// get all the classes from the diagram	WITHOUT_CLASSIFICATION	0.9999991317526823	WITHOUT_CLASSIFICATION	8.682473177173354E-7	DEFECT
// The fix	WITHOUT_CLASSIFICATION	0.9999528406647229	WITHOUT_CLASSIFICATION	4.715933527699211E-5	DEFECT
// The report	WITHOUT_CLASSIFICATION	0.9999991354647654	WITHOUT_CLASSIFICATION	8.645352345190676E-7	DEFECT
// The report	WITHOUT_CLASSIFICATION	0.9999991354647654	WITHOUT_CLASSIFICATION	8.645352345190676E-7	DEFECT
// The fix	WITHOUT_CLASSIFICATION	0.9999528406647229	WITHOUT_CLASSIFICATION	4.715933527699211E-5	DEFECT
// The fix	WITHOUT_CLASSIFICATION	0.9999528406647229	WITHOUT_CLASSIFICATION	4.715933527699211E-5	DEFECT
// The fix	WITHOUT_CLASSIFICATION	0.9999528406647229	WITHOUT_CLASSIFICATION	4.715933527699211E-5	DEFECT
// 2. Make sure that all Figs are visible	WITHOUT_CLASSIFICATION	0.9999987750048581	WITHOUT_CLASSIFICATION	1.2249951418875298E-6	DEFECT
/*     * @see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999798760241	WITHOUT_CLASSIFICATION	2.0123975991057457E-8	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999996210616915	WITHOUT_CLASSIFICATION	3.7893830849916885E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999996210616915	WITHOUT_CLASSIFICATION	3.7893830849916885E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999996210616915	WITHOUT_CLASSIFICATION	3.7893830849916885E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999996210616915	WITHOUT_CLASSIFICATION	3.7893830849916885E-6	DEFECT
// TODO: These should get replaced immediately by the creating // initialization code, but make sure we've got a default just in case.	WITHOUT_CLASSIFICATION	0.9748346989523183	WITHOUT_CLASSIFICATION	0.025165301047681745	DEFECT
// 1. Make sure all Figs in the Diagrams layer refer back to // that layer.	WITHOUT_CLASSIFICATION	0.9999986689284456	WITHOUT_CLASSIFICATION	1.3310715544375275E-6	DEFECT
// maybe we have a modelelement that is part of some other // fig	WITHOUT_CLASSIFICATION	0.9999938452147564	WITHOUT_CLASSIFICATION	6.1547852435063E-6	DEFECT
// Register for notification of any global changes that would affect // our rendering	WITHOUT_CLASSIFICATION	0.9999928592852013	WITHOUT_CLASSIFICATION	7.140714798727934E-6	DEFECT
// Add the diagram as a listener to the namespace so // that when the namespace is removed the diagram is deleted also.	WITHOUT_CLASSIFICATION	0.9999998170865666	WITHOUT_CLASSIFICATION	1.8291343345488446E-7	DEFECT
// 4. Make sure all FigNodes and FigEdges have an owner // The report	WITHOUT_CLASSIFICATION	0.9999998136684509	WITHOUT_CLASSIFICATION	1.8633154901825963E-7	DEFECT
// 3. Make sure all FigEdges are attached to a valid FigNode // The report	WITHOUT_CLASSIFICATION	0.9999999821093875	WITHOUT_CLASSIFICATION	1.789061249598965E-8	DEFECT
// 5. Make sure all FigNodes and FigEdges have a valid owner // The report	WITHOUT_CLASSIFICATION	0.9999997881182354	WITHOUT_CLASSIFICATION	2.118817647155591E-7	DEFECT
// 4. Make sure the only FigGroups on a diagram are also //    FigNodes // The report	WITHOUT_CLASSIFICATION	0.9999999105887665	WITHOUT_CLASSIFICATION	8.941123349754267E-8	DEFECT
// Do nothing, override in subclass.	WITHOUT_CLASSIFICATION	0.9999988127389672	WITHOUT_CLASSIFICATION	1.187261032857047E-6	DEFECT
// If we haven't succeeded in getting a namespace then abort	WITHOUT_CLASSIFICATION	0.9999938621752011	WITHOUT_CLASSIFICATION	6.137824798925696E-6	DEFECT
// This should always be true, but just in case...	WITHOUT_CLASSIFICATION	0.9941036393579576	WITHOUT_CLASSIFICATION	0.005896360642042371	DEFECT
/*     * The diagram to be laid out.     */	WITHOUT_CLASSIFICATION	0.9999991415988064	WITHOUT_CLASSIFICATION	8.584011936373198E-7	DEFECT
/*     * List of objects.     *      * NOTE: This methods which read/write this don't appear to be used.     */	WITHOUT_CLASSIFICATION	0.9999973211216405	WITHOUT_CLASSIFICATION	2.6788783593887113E-6	DEFECT
/*     * Point at which to start layout (initial state goes here). The X     * coordinate must be greater than half the width of the widest figure to     * be placed (because figures are centered on this location).     */	WITHOUT_CLASSIFICATION	0.9999999882901787	WITHOUT_CLASSIFICATION	1.1709821439698058E-8	DEFECT
/*     * Amount to increment Y position by for each node placed. We pack them     * densely on the assumption that the user is going to split them into at     * least two swimlanes.     */	WITHOUT_CLASSIFICATION	0.9999999858539506	WITHOUT_CLASSIFICATION	1.4146049404744518E-8	DEFECT
/*     * FinalState element for ActivityDiagram     */	WITHOUT_CLASSIFICATION	0.9999992622281988	WITHOUT_CLASSIFICATION	7.377718012374711E-7	DEFECT
// Find our Initial State	WITHOUT_CLASSIFICATION	0.9999994102882256	WITHOUT_CLASSIFICATION	5.897117744439077E-7	DEFECT
// Place all the nodes	WITHOUT_CLASSIFICATION	0.9999945537764007	WITHOUT_CLASSIFICATION	5.446223599396663E-6	DEFECT
// Place the final state last with a little separation	WITHOUT_CLASSIFICATION	0.9999994941905647	WITHOUT_CLASSIFICATION	5.058094353898178E-7	DEFECT
/*     * @see java.lang.Object#clone()     */	WITHOUT_CLASSIFICATION	0.9999990042201411	WITHOUT_CLASSIFICATION	9.957798589067173E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999455836559	WITHOUT_CLASSIFICATION	5.44163440595605E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineColor()     */	WITHOUT_CLASSIFICATION	0.9999998290030105	WITHOUT_CLASSIFICATION	1.7099698950311398E-7	DEFECT
//_x = x; _y = y; _w = w; _h = h;	WITHOUT_CLASSIFICATION	0.9999586164578153	WITHOUT_CLASSIFICATION	4.138354218468641E-5	DEFECT
// If we're trying to set the namespace to the existing value // then don't do any more work.	WITHOUT_CLASSIFICATION	0.9999905509037865	WITHOUT_CLASSIFICATION	9.449096213351797E-6	DEFECT
/*     * Recursively place all nodes pointed to by outgoing transitions.     *      * Because of the recursive algorithm multiple outgoing transitions     * will end up very lopsided because one entire subgraph will be done     * before dealing with the other transition(s).     *      * @param seen set of nodes seen so far     * @param node the node to collect neighbors for     */	WITHOUT_CLASSIFICATION	0.9999999927185403	WITHOUT_CLASSIFICATION	7.281459638253781E-9	DEFECT
//        figClone.seperator = (FigLine) it.next();	WITHOUT_CLASSIFICATION	0.9999998991081904	WITHOUT_CLASSIFICATION	1.0089180949782236E-7	DEFECT
//Needed for project deletion	WITHOUT_CLASSIFICATION	0.9999995904701264	WITHOUT_CLASSIFICATION	4.095298735375982E-7	DEFECT
// we want to maintain a minimum size for the partition	WITHOUT_CLASSIFICATION	0.9999999315048078	WITHOUT_CLASSIFICATION	6.849519219983835E-8	DEFECT
// TODO: midpoints for side handles	WITHOUT_CLASSIFICATION	0.8945094295193231	WITHOUT_CLASSIFICATION	0.10549057048067689	DEFECT
/* We removed the last partition, so now remove the pool, too: */	WITHOUT_CLASSIFICATION	0.9999795632763084	WITHOUT_CLASSIFICATION	2.0436723691494144E-5	DEFECT
// no action required in case of veto on setName	WITHOUT_CLASSIFICATION	0.9999998513617205	WITHOUT_CLASSIFICATION	1.4863827939118032E-7	DEFECT
// This test needed for project deletion	WITHOUT_CLASSIFICATION	0.9999996474859417	WITHOUT_CLASSIFICATION	3.525140583241602E-7	DEFECT
// TODO: side handles	WITHOUT_CLASSIFICATION	0.834173297027447	WITHOUT_CLASSIFICATION	0.16582670297255295	DEFECT
/* Listen to activitygraph deletion,         * delete this diagram. */	WITHOUT_CLASSIFICATION	0.9999776928470693	WITHOUT_CLASSIFICATION	2.230715293070583E-5	DEFECT
//////////////////////// // actions for toolbar	WITHOUT_CLASSIFICATION	0.9999965021089471	WITHOUT_CLASSIFICATION	3.497891052959422E-6	DEFECT
// no action required	WITHOUT_CLASSIFICATION	0.9999980608841045	WITHOUT_CLASSIFICATION	1.939115895512729E-6	DEFECT
/* The namespace of the activitygraph is changed! */	WITHOUT_CLASSIFICATION	0.9999764358857306	WITHOUT_CLASSIFICATION	2.3564114269432258E-5	DEFECT
/*getActionSubactivityState()*/	WITHOUT_CLASSIFICATION	0.999955547542371	WITHOUT_CLASSIFICATION	4.4452457628992E-5	DEFECT
/*     * @see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor(     *      org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer,     *      java.lang.Object, java.util.Map)     */	WITHOUT_CLASSIFICATION	0.9999997180737816	WITHOUT_CLASSIFICATION	2.819262182920371E-7	DEFECT
/*     * @see java.lang.Object#clone()     */	WITHOUT_CLASSIFICATION	0.9999990042201411	WITHOUT_CLASSIFICATION	9.957798589067173E-7	DEFECT
/*     * The space between the 2 text figs is: PADDING.     * @see org.tigris.gef.presentation.Fig#getMinimumSize()     */	WITHOUT_CLASSIFICATION	0.9999970944664494	WITHOUT_CLASSIFICATION	2.9055335506721942E-6	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999455836559	WITHOUT_CLASSIFICATION	5.44163440595605E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineColor()     */	WITHOUT_CLASSIFICATION	0.9999998290030105	WITHOUT_CLASSIFICATION	1.7099698950311398E-7	DEFECT
// we want to maintain a minimum size for the partition	WITHOUT_CLASSIFICATION	0.9999999315048078	WITHOUT_CLASSIFICATION	6.849519219983835E-8	DEFECT
/** * Class to display graphics for a UML ObjectFlowState in a diagram.<p> * * The Fig of this modelElement may either represent the following UMLelements: * <p> * (1) an ObjectFlowState with a Classifier as type, or <p> * (2) an ObjectFlowState with a ClassifierInState as type. <p> * * In both cases (1) and (2), the Fig shows * the underlined name of the Classifier, * and in the latter case (2), it shows also the names of the states * of the ClassifierInState. <p> * * In the examples in the UML standard, this is written like<pre> *      PurchaseOrder *       [approved] * </pre> * i.e. in 2 lines. The first line is underlined, * to indicate that it is an instance (object).<p> * * The fact that the first line is underlined, and the 2nd not, is the * reason to implement them in 2 separate Figs.<p> * * TODO: Allow stereotypes to be shown. * * @author mvw */	WITHOUT_CLASSIFICATION	0.6830558951943834	WITHOUT_CLASSIFICATION	0.3169441048056165	DEFECT
//      Model.getActivityGraphsHelper() //      .isAddingActivityGraphAllowed(base);	WITHOUT_CLASSIFICATION	0.9999996484505658	WITHOUT_CLASSIFICATION	3.515494341390673E-7	DEFECT
/* TODO: We may return the following when the         * relocate() has been implemented.         */	WITHOUT_CLASSIFICATION	0.8737640176478355	WITHOUT_CLASSIFICATION	0.12623598235216452	DEFECT
/* TODO: We may return something useful when the         * relocate() has been implemented. */	WITHOUT_CLASSIFICATION	0.9833242911017812	WITHOUT_CLASSIFICATION	0.016675708898218844	DEFECT
// register for events from the type	WITHOUT_CLASSIFICATION	0.9999992079690285	WITHOUT_CLASSIFICATION	7.920309713820136E-7	DEFECT
// Create a map of partitions keyed by x coordinate	WITHOUT_CLASSIFICATION	0.9999992039247811	WITHOUT_CLASSIFICATION	7.960752188399507E-7	DEFECT
// add Figs to the FigNode in back-to-front order	WITHOUT_CLASSIFICATION	0.9999995836685673	WITHOUT_CLASSIFICATION	4.163314326709753E-7	DEFECT
// Sort the x coordinates into order	WITHOUT_CLASSIFICATION	0.9999996884780186	WITHOUT_CLASSIFICATION	3.115219814001671E-7	DEFECT
// the state name	WITHOUT_CLASSIFICATION	0.9999984514525841	WITHOUT_CLASSIFICATION	1.5485474158725985E-6	DEFECT
/* Set the drop location in the case of D&D: */	WITHOUT_CLASSIFICATION	0.9999898136465005	WITHOUT_CLASSIFICATION	1.0186353499536679E-5	DEFECT
// If the layer is null, then most likely we are being deleted.	WITHOUT_CLASSIFICATION	0.9999576441872047	WITHOUT_CLASSIFICATION	4.235581279532825E-5	DEFECT
/* Don't listen to all property names             * We only need to listen to its "type", and "remove". */	WITHOUT_CLASSIFICATION	0.9998177058985027	WITHOUT_CLASSIFICATION	1.8229410149727353E-4	DEFECT
/* the height of the blank space above and below the text figs: */	WITHOUT_CLASSIFICATION	0.9962663740909287	WITHOUT_CLASSIFICATION	0.003733625909071402	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineWidth(int)     */	WITHOUT_CLASSIFICATION	0.9999999204487886	WITHOUT_CLASSIFICATION	7.955121132515802E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineWidth()     */	WITHOUT_CLASSIFICATION	0.9999998405845854	WITHOUT_CLASSIFICATION	1.5941541474846165E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#makeSelection()     */	WITHOUT_CLASSIFICATION	0.9999995782178864	WITHOUT_CLASSIFICATION	4.2178211349919347E-7	DEFECT
/*     * @see java.lang.Object#clone()     */	WITHOUT_CLASSIFICATION	0.9999990042201411	WITHOUT_CLASSIFICATION	9.957798589067173E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getMinimumSize()     */	WITHOUT_CLASSIFICATION	0.9999999327190773	WITHOUT_CLASSIFICATION	6.728092273203155E-8	DEFECT
/*     * Override setBounds to keep shapes looking right.     *     * @see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)     */	WITHOUT_CLASSIFICATION	0.9999998960254015	WITHOUT_CLASSIFICATION	1.0397459842043191E-7	DEFECT
// Although not generally true for GEF, for Argo we know that the layer // is a LayerPerspective which knows the associated diagram	WITHOUT_CLASSIFICATION	0.9952751636767379	WITHOUT_CLASSIFICATION	0.004724836323262116	DEFECT
// add Figs to the FigNode in back-to-front order	WITHOUT_CLASSIFICATION	0.9999995836685673	WITHOUT_CLASSIFICATION	4.163314326709753E-7	DEFECT
// and listen to name changes of the submachine	WITHOUT_CLASSIFICATION	0.9999999883210143	WITHOUT_CLASSIFICATION	1.1678985703734082E-8	DEFECT
// both have the same settings	WITHOUT_CLASSIFICATION	0.9999992828770305	WITHOUT_CLASSIFICATION	7.171229694629872E-7	DEFECT
// both have the same owner	WITHOUT_CLASSIFICATION	0.9999977652800531	WITHOUT_CLASSIFICATION	2.2347199468890078E-6	DEFECT
// add them back to front	WITHOUT_CLASSIFICATION	0.9999989959731079	WITHOUT_CLASSIFICATION	1.0040268920651955E-6	DEFECT
// Let our superclass sort itself out first	WITHOUT_CLASSIFICATION	0.9999999428354408	WITHOUT_CLASSIFICATION	5.716455926499748E-8	DEFECT
// add the listeners to the newOwner	WITHOUT_CLASSIFICATION	0.999999292065994	WITHOUT_CLASSIFICATION	7.07934006076151E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)     */	WITHOUT_CLASSIFICATION	0.9999999384135748	WITHOUT_CLASSIFICATION	6.158642516569318E-8	DEFECT
/*     * @see org.tigris.gef.base.SelectionButtons#getNewNode(int)     */	WITHOUT_CLASSIFICATION	0.9999999849985551	WITHOUT_CLASSIFICATION	1.5001444870450082E-8	DEFECT
//_x = x; _y = y; _w = w; _h = h;	WITHOUT_CLASSIFICATION	0.9999586164578153	WITHOUT_CLASSIFICATION	4.138354218468641E-5	DEFECT
// add Figs to the FigNode in back-to-front order	WITHOUT_CLASSIFICATION	0.9999995836685673	WITHOUT_CLASSIFICATION	4.163314326709753E-7	DEFECT
//////////////////////////////////////////////////////////////// // MutableGraphModel implementation	WITHOUT_CLASSIFICATION	0.9999949049197683	WITHOUT_CLASSIFICATION	5.0950802317837466E-6	DEFECT
/* Set up the property panels for activity diagrams: */	WITHOUT_CLASSIFICATION	0.9989871837942127	WITHOUT_CLASSIFICATION	0.0010128162057872474	DEFECT
// overrule the single-line name-fig created by the parent	WITHOUT_CLASSIFICATION	0.9999999149135618	WITHOUT_CLASSIFICATION	8.508643815690592E-8	DEFECT
// A binary association is not a node so reject.	WITHOUT_CLASSIFICATION	0.9999799786257468	WITHOUT_CLASSIFICATION	2.0021374253163714E-5	DEFECT
//setBlinkPorts(false); //make port invisible unless mouse enters	WITHOUT_CLASSIFICATION	0.9999986920920713	WITHOUT_CLASSIFICATION	1.3079079288471744E-6	DEFECT
/* TODO: Do we need to clone the stereotype(s)? */	WITHOUT_CLASSIFICATION	0.8568291518631507	WITHOUT_CLASSIFICATION	0.1431708481368493	DEFECT
/*(MGeneralization)*/	WITHOUT_CLASSIFICATION	0.9994097636150286	WITHOUT_CLASSIFICATION	5.902363849714415E-4	DEFECT
/* The stereoDim has height=2, even if it is empty,          * hence the -2 below: */	WITHOUT_CLASSIFICATION	0.999996143821612	WITHOUT_CLASSIFICATION	3.856178387953572E-6	DEFECT
// the width needs to be > the height	WITHOUT_CLASSIFICATION	0.9999833499715429	WITHOUT_CLASSIFICATION	1.6650028457091794E-5	DEFECT
// Both ends must be defined and nodes that are on the graph already.	WITHOUT_CLASSIFICATION	0.9999980942688366	WITHOUT_CLASSIFICATION	1.9057311633904912E-6	DEFECT
//////////////////////////////////////////////////////////////// // GraphModel implementation	WITHOUT_CLASSIFICATION	0.9999877302153688	WITHOUT_CLASSIFICATION	1.2269784631187463E-5	DEFECT
// TODO:?	WITHOUT_CLASSIFICATION	0.8215006322649508	WITHOUT_CLASSIFICATION	0.17849936773504907	DEFECT
// ((MClassifier)node).setNamespace(_collab.getNamespace());	WITHOUT_CLASSIFICATION	0.9999997644210689	WITHOUT_CLASSIFICATION	2.355789310726972E-7	DEFECT
// TODO: assumes public, user pref for default visibility?	WITHOUT_CLASSIFICATION	0.915166383259474	WITHOUT_CLASSIFICATION	0.08483361674052602	DEFECT
/*     * Add the given edge to the graph, if valid.     *     * @see org.tigris.gef.graph.MutableGraphModel#addEdge(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999938364222	WITHOUT_CLASSIFICATION	6.1635777835464926E-9	DEFECT
/* TODO: We may return the following when the         * relocate() has been implemented.         */	WITHOUT_CLASSIFICATION	0.8737640176478355	WITHOUT_CLASSIFICATION	0.12623598235216452	DEFECT
// add Figs to the FigNode in back-to-front order	WITHOUT_CLASSIFICATION	0.9999995836685673	WITHOUT_CLASSIFICATION	4.163314326709753E-7	DEFECT
/*     * The NotationProvider for the ClassifierRole. <p>     *      * The syntax is for UML is:     * <pre>     * baselist := [base] [, base]*     * classifierRole := [name] [/ role] [: baselist]     * </pre></p>     *      * The <code>name</code> is the Instance name, not used currently.     * See ClassifierRoleNotationUml for details.<p>     *     * This syntax is compatible with the UML 1.4 specification.     */	WITHOUT_CLASSIFICATION	0.9995327842603274	WITHOUT_CLASSIFICATION	4.6721573967255437E-4	DEFECT
// TODO: assumes public	WITHOUT_CLASSIFICATION	0.7587005755705583	WITHOUT_CLASSIFICATION	0.24129942442944174	DEFECT
// The stereotype. Width is the same as the cover, height is its default // (since the font is not yet set). The text should be centered.	WITHOUT_CLASSIFICATION	0.9999155337927959	WITHOUT_CLASSIFICATION	8.446620720413388E-5	DEFECT
//throws PropertyVetoException	WITHOUT_CLASSIFICATION	0.9999957311618989	WITHOUT_CLASSIFICATION	4.268838101134893E-6	DEFECT
/*(MElementImport)*/	WITHOUT_CLASSIFICATION	0.9997123316875507	WITHOUT_CLASSIFICATION	2.8766831244927716E-4	DEFECT
//getStereotypeFig().setFilled(false);	WITHOUT_CLASSIFICATION	0.9999815340887122	WITHOUT_CLASSIFICATION	1.846591128793947E-5	DEFECT
/* end class CollabDiagramGraphModel */	WITHOUT_CLASSIFICATION	0.999973387451115	WITHOUT_CLASSIFICATION	2.6612548885096918E-5	DEFECT
// In the rather unlikely case that we have no name, we give up.	WITHOUT_CLASSIFICATION	0.9999931883741092	WITHOUT_CLASSIFICATION	6.81162589084188E-6	DEFECT
// The big port. Color of the big port is irrelevant	WITHOUT_CLASSIFICATION	0.9999999600736025	WITHOUT_CLASSIFICATION	3.992639758637217E-8	DEFECT
// The name. Width is the same as the cover, height is the default. // The text of the name will be centered by // default. In the same place as the stereotype, since at this stage // the stereotype is not displayed. Being a classifier role it is // underlined	WITHOUT_CLASSIFICATION	0.9994325756741367	WITHOUT_CLASSIFICATION	5.674243258632845E-4	DEFECT
// The cover. 	WITHOUT_CLASSIFICATION	0.9999869416018305	WITHOUT_CLASSIFICATION	1.3058398169498633E-5	DEFECT
/* At least one stereotype is visible */	WITHOUT_CLASSIFICATION	0.9998649791338883	WITHOUT_CLASSIFICATION	1.350208661117042E-4	DEFECT
// Remember where we are at present, so we can tell GEF later. Then // check we are as big as the minimum size	WITHOUT_CLASSIFICATION	0.9999991370940174	WITHOUT_CLASSIFICATION	8.629059825250466E-7	DEFECT
// Set the bounds of the bigPort and cover	WITHOUT_CLASSIFICATION	0.9999999007407919	WITHOUT_CLASSIFICATION	9.925920812048472E-8	DEFECT
// Work out the padding each side, depending on whether the stereotype // is displayed and set bounds accordingly	WITHOUT_CLASSIFICATION	0.999995672246299	WITHOUT_CLASSIFICATION	4.327753700889678E-6	DEFECT
// Record the changes in the instance variables of our parent, tell GEF // and trigger the edges to reconsider themselves.	WITHOUT_CLASSIFICATION	0.9999999932493641	WITHOUT_CLASSIFICATION	6.7506359884008145E-9	DEFECT
// singleton	WITHOUT_CLASSIFICATION	0.9999997731645656	WITHOUT_CLASSIFICATION	2.2683543429803828E-7	DEFECT
//this one behaves differently, hence seperated:	WITHOUT_CLASSIFICATION	0.9999861981380461	WITHOUT_CLASSIFICATION	1.3801861953812674E-5	DEFECT
//this one behaves differently, hence seperated:	WITHOUT_CLASSIFICATION	0.9999861981380461	WITHOUT_CLASSIFICATION	1.3801861953812674E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999959030536316	WITHOUT_CLASSIFICATION	4.096946368362294E-6	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#calcBounds()     */	WITHOUT_CLASSIFICATION	0.9999998746238706	WITHOUT_CLASSIFICATION	1.2537612944219055E-7	DEFECT
// Although not generally true for GEF, for Argo we know that the layer // is a LayerPerspective which knows the associated diagram	WITHOUT_CLASSIFICATION	0.9952751636767379	WITHOUT_CLASSIFICATION	0.004724836323262116	DEFECT
/* TODO: We may return something useful when the         * relocate() has been implemented. */	WITHOUT_CLASSIFICATION	0.9833242911017812	WITHOUT_CLASSIFICATION	0.016675708898218844	DEFECT
//////////////////////////////////////////////////////////////// // GraphModel implementation	WITHOUT_CLASSIFICATION	0.9999877302153688	WITHOUT_CLASSIFICATION	1.2269784631187463E-5	DEFECT
// TODO:?	WITHOUT_CLASSIFICATION	0.8215006322649508	WITHOUT_CLASSIFICATION	0.17849936773504907	DEFECT
// A binary association is not a node so reject.	WITHOUT_CLASSIFICATION	0.9999799786257468	WITHOUT_CLASSIFICATION	2.0021374253163714E-5	DEFECT
// Both ends must be defined and nodes that are on the graph already.	WITHOUT_CLASSIFICATION	0.9999980942688366	WITHOUT_CLASSIFICATION	1.9057311633904912E-6	DEFECT
/* end class FigAssociationRole */	WITHOUT_CLASSIFICATION	0.9998851482209059	WITHOUT_CLASSIFICATION	1.1485177909406039E-4	DEFECT
// If location is non-null, convert to a rectangle that we can use	WITHOUT_CLASSIFICATION	0.9999998159331467	WITHOUT_CLASSIFICATION	1.8406685327799523E-7	DEFECT
// TODO -> settings	WITHOUT_CLASSIFICATION	0.9996634488813402	WITHOUT_CLASSIFICATION	3.3655111865982186E-4	DEFECT
// the figs that make up this group	WITHOUT_CLASSIFICATION	0.9999700716647417	WITHOUT_CLASSIFICATION	2.99283352582744E-5	DEFECT
// the figs that make up this group	WITHOUT_CLASSIFICATION	0.9999700716647417	WITHOUT_CLASSIFICATION	2.99283352582744E-5	DEFECT
// _x = first.getX(); // _y = first.getY();	WITHOUT_CLASSIFICATION	0.9999916225151453	WITHOUT_CLASSIFICATION	8.377484854638192E-6	DEFECT
// _x = first.getX(); // _y = first.getY();	WITHOUT_CLASSIFICATION	0.9999916225151453	WITHOUT_CLASSIFICATION	8.377484854638192E-6	DEFECT
/* Set up the property panels for collaboration diagrams: */	WITHOUT_CLASSIFICATION	0.9984811841093423	WITHOUT_CLASSIFICATION	0.001518815890657699	DEFECT
// this is neat...	WITHOUT_CLASSIFICATION	0.9977008836629363	WITHOUT_CLASSIFICATION	0.0022991163370637115	DEFECT
/*     * @see org.tigris.gef.graph.MutableGraphModel#addEdge(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999660203298	WITHOUT_CLASSIFICATION	3.397967016996562E-8	DEFECT
/*     * @see org.tigris.gef.graph.MutableGraphModel#addNodeRelatedEdges(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999926717447	WITHOUT_CLASSIFICATION	7.32825531493572E-9	DEFECT
/*     * @see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994374054892	WITHOUT_CLASSIFICATION	5.625945107321554E-7	DEFECT
/*     * @see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor(     *         org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer,     *         java.lang.Object, java.util.Map)     */	WITHOUT_CLASSIFICATION	0.9999997180737816	WITHOUT_CLASSIFICATION	2.819262182920371E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)     */	WITHOUT_CLASSIFICATION	0.9999999892981944	WITHOUT_CLASSIFICATION	1.0701805498007897E-8	DEFECT
/*     * @see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999999980370717	WITHOUT_CLASSIFICATION	1.962928268087383E-9	DEFECT
// Although not generally true for GEF, for Argo we know that the layer // is a LayerPerspective which knows the associated diagram	WITHOUT_CLASSIFICATION	0.9952751636767379	WITHOUT_CLASSIFICATION	0.004724836323262116	DEFECT
// add Figs to the FigNode in back-to-front order	WITHOUT_CLASSIFICATION	0.9999995836685673	WITHOUT_CLASSIFICATION	4.163314326709753E-7	DEFECT
// TODO: assumes public	WITHOUT_CLASSIFICATION	0.7587005755705583	WITHOUT_CLASSIFICATION	0.24129942442944174	DEFECT
// Modifiers ...	WITHOUT_CLASSIFICATION	0.9999959023982763	WITHOUT_CLASSIFICATION	4.097601723717121E-6	DEFECT
// TODO: assumes public, user pref for default visibility? //do I have to check the namespace here? (Toby)	WITHOUT_CLASSIFICATION	0.8712677035558026	WITHOUT_CLASSIFICATION	0.12873229644419748	DEFECT
// elementOrdering(figures);	WITHOUT_CLASSIFICATION	0.9999993489133088	WITHOUT_CLASSIFICATION	6.510866913130653E-7	DEFECT
// elementOrdering(figures);	WITHOUT_CLASSIFICATION	0.9999993489133088	WITHOUT_CLASSIFICATION	6.510866913130653E-7	DEFECT
/* Set up the property panels for deployment diagrams: */	WITHOUT_CLASSIFICATION	0.9999039942208382	WITHOUT_CLASSIFICATION	9.600577916175907E-5	DEFECT
//////////////// // actions for toolbar	WITHOUT_CLASSIFICATION	0.9999965021089471	WITHOUT_CLASSIFICATION	3.497891052959422E-6	DEFECT
////////////////////////////// // Getters for plugin modules: //////////////////////////////	WITHOUT_CLASSIFICATION	0.9997999209256981	WITHOUT_CLASSIFICATION	2.0007907430186285E-4	DEFECT
// so it still looks like a cube	WITHOUT_CLASSIFICATION	0.9999888964075171	WITHOUT_CLASSIFICATION	1.1103592482907071E-5	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getMinimumSize()     */	WITHOUT_CLASSIFICATION	0.9999999327190773	WITHOUT_CLASSIFICATION	6.728092273203155E-8	DEFECT
/*     * @see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999999980370717	WITHOUT_CLASSIFICATION	1.962928268087383E-9	DEFECT
//_x = x; _y = y; _w = w; _h = h;	WITHOUT_CLASSIFICATION	0.9999586164578153	WITHOUT_CLASSIFICATION	4.138354218468641E-5	DEFECT
// add the listeners to the newOwner	WITHOUT_CLASSIFICATION	0.999999292065994	WITHOUT_CLASSIFICATION	7.07934006076151E-7	DEFECT
// elementOrdering(figures);	WITHOUT_CLASSIFICATION	0.9999993489133088	WITHOUT_CLASSIFICATION	6.510866913130653E-7	DEFECT
// elementOrdering(figures);	WITHOUT_CLASSIFICATION	0.9999993489133088	WITHOUT_CLASSIFICATION	6.510866913130653E-7	DEFECT
// Modifiers ...	WITHOUT_CLASSIFICATION	0.9999959023982763	WITHOUT_CLASSIFICATION	4.097601723717121E-6	DEFECT
//_bigPort.setBounds(x+1, y+1, w-2, h-2);	WITHOUT_CLASSIFICATION	0.9999994637534512	WITHOUT_CLASSIFICATION	5.362465488516915E-7	DEFECT
// nothing extra to do currently	WITHOUT_CLASSIFICATION	0.9999914871615755	WITHOUT_CLASSIFICATION	8.512838424457229E-6	DEFECT
/*     * North, South, West, East, South-West     */	WITHOUT_CLASSIFICATION	0.9999998306002198	WITHOUT_CLASSIFICATION	1.6939978016730313E-7	DEFECT
/* end class PredIsStartpackage */	WITHOUT_CLASSIFICATION	0.9999915774250261	WITHOUT_CLASSIFICATION	8.422574973958388E-6	DEFECT
/*     * @see org.tigris.gef.graph.MutableGraphModel#addNode(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999752592347	WITHOUT_CLASSIFICATION	2.474076534757138E-8	DEFECT
//////////////////////////////////////////////////////////////// // accessors	WITHOUT_CLASSIFICATION	0.99999900930865	WITHOUT_CLASSIFICATION	9.906913499891305E-7	DEFECT
// If the layer is null, then most likely we are being deleted.	WITHOUT_CLASSIFICATION	0.9999576441872047	WITHOUT_CLASSIFICATION	4.235581279532825E-5	DEFECT
//////////////////////////////////////////////////////////////// // GraphModel implementation	WITHOUT_CLASSIFICATION	0.9999877302153688	WITHOUT_CLASSIFICATION	1.2269784631187463E-5	DEFECT
//////////////////////////////////////////////////////////////// // MutableGraphModel implementation	WITHOUT_CLASSIFICATION	0.9999949049197683	WITHOUT_CLASSIFICATION	5.0950802317837466E-6	DEFECT
// Both ends must be defined and nodes that are on the graph already.	WITHOUT_CLASSIFICATION	0.9999980942688366	WITHOUT_CLASSIFICATION	1.9057311633904912E-6	DEFECT
//////////////////////////////////////////////////////////////// // VetoableChangeListener implementation	WITHOUT_CLASSIFICATION	0.9999825620679107	WITHOUT_CLASSIFICATION	1.7437932089304444E-5	DEFECT
//throws PropertyVetoException	WITHOUT_CLASSIFICATION	0.9999957311618989	WITHOUT_CLASSIFICATION	4.268838101134893E-6	DEFECT
// singleton	WITHOUT_CLASSIFICATION	0.9999997731645656	WITHOUT_CLASSIFICATION	2.2683543429803828E-7	DEFECT
/* end class StateDiagramGraphModel */	WITHOUT_CLASSIFICATION	0.999993664709195	WITHOUT_CLASSIFICATION	6.335290804970322E-6	DEFECT
// Don't do it for comment.	WITHOUT_CLASSIFICATION	0.9999404006920442	WITHOUT_CLASSIFICATION	5.9599307955791804E-5	DEFECT
/* (MElementImport) */	WITHOUT_CLASSIFICATION	0.9999002313773298	WITHOUT_CLASSIFICATION	9.976862267018776E-5	DEFECT
/* (MTransition) */	WITHOUT_CLASSIFICATION	0.9999928042695518	WITHOUT_CLASSIFICATION	7.195730448187216E-6	DEFECT
// prevent no changes...	WITHOUT_CLASSIFICATION	0.9999999079299795	WITHOUT_CLASSIFICATION	9.207002048555308E-8	DEFECT
/* If a UML object is found, you can not remove selected elms. */	WITHOUT_CLASSIFICATION	0.999962179471044	WITHOUT_CLASSIFICATION	3.7820528955990385E-5	DEFECT
// check parameter types:	WITHOUT_CLASSIFICATION	0.9999955466126439	WITHOUT_CLASSIFICATION	4.453387356191368E-6	DEFECT
/* If nothing is selected, then not allowed to remove it. */	WITHOUT_CLASSIFICATION	0.999993587873395	WITHOUT_CLASSIFICATION	6.412126605025502E-6	DEFECT
/* If only Figs without owner are selected, then you can remove them! */	WITHOUT_CLASSIFICATION	0.9999774224136557	WITHOUT_CLASSIFICATION	2.257758634421965E-5	DEFECT
/* end class PredIsFinalState */	WITHOUT_CLASSIFICATION	0.9999924608327129	WITHOUT_CLASSIFICATION	7.539167287066715E-6	DEFECT
/* This presumes that the layer is set after the owner: */	WITHOUT_CLASSIFICATION	0.9986016842020891	WITHOUT_CLASSIFICATION	0.0013983157979109628	DEFECT
/* If it is concurrent and contains concurrent regions,        the bottom region has a minimum height*/	WITHOUT_CLASSIFICATION	0.9999178634899152	WITHOUT_CLASSIFICATION	8.213651008482909E-5	DEFECT
/*     * @see org.tigris.gef.presentation.FigEdge#setFig(org.tigris.gef.presentation.Fig)     */	WITHOUT_CLASSIFICATION	0.9999998880153327	WITHOUT_CLASSIFICATION	1.1198466739329893E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#paint(java.awt.Graphics)     */	WITHOUT_CLASSIFICATION	0.9999999775150291	WITHOUT_CLASSIFICATION	2.2484970833289784E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getMinimumSize()     */	WITHOUT_CLASSIFICATION	0.9999999327190773	WITHOUT_CLASSIFICATION	6.728092273203155E-8	DEFECT
/*     * @see java.lang.Object#clone()     */	WITHOUT_CLASSIFICATION	0.9999990042201411	WITHOUT_CLASSIFICATION	9.957798589067173E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getMinimumSize()     */	WITHOUT_CLASSIFICATION	0.9999999327190773	WITHOUT_CLASSIFICATION	6.728092273203155E-8	DEFECT
/*     * @see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999999980370717	WITHOUT_CLASSIFICATION	1.962928268087383E-9	DEFECT
//////////////////////////////////////////////////////////////// // accessors	WITHOUT_CLASSIFICATION	0.99999900930865	WITHOUT_CLASSIFICATION	9.906913499891305E-7	DEFECT
//_x = x; _y = y; _w = w; _h = h;	WITHOUT_CLASSIFICATION	0.9999586164578153	WITHOUT_CLASSIFICATION	4.138354218468641E-5	DEFECT
//_x = x; _y = y; _w = w; _h = h;	WITHOUT_CLASSIFICATION	0.9999586164578153	WITHOUT_CLASSIFICATION	4.138354218468641E-5	DEFECT
// add Figs to the FigNode in back-to-front order	WITHOUT_CLASSIFICATION	0.9999995836685673	WITHOUT_CLASSIFICATION	4.163314326709753E-7	DEFECT
// The purpose of this method is not explained and it give give // NPE depending on z order of figs as they are read. For now // ignore if null but for future lets delete this.	WITHOUT_CLASSIFICATION	0.9999999550025255	WITHOUT_CLASSIFICATION	4.499747454213325E-8	DEFECT
/* We only handle the case where a region has been removed: */	WITHOUT_CLASSIFICATION	0.999945179791648	WITHOUT_CLASSIFICATION	5.48202083521338E-5	DEFECT
/* Check if multiple items are selected: */	WITHOUT_CLASSIFICATION	0.999959234413234	WITHOUT_CLASSIFICATION	4.076558676603228E-5	DEFECT
/* Check if multiple items are selected: */	WITHOUT_CLASSIFICATION	0.999959234413234	WITHOUT_CLASSIFICATION	4.076558676603228E-5	DEFECT
/*If it is concurrent and contains concurrent regions,        the regions are resized*/	WITHOUT_CLASSIFICATION	0.9999284771951349	WITHOUT_CLASSIFICATION	7.152280486503397E-5	DEFECT
/* None of the menu-items below apply         * when multiple modelelements are selected:*/	WITHOUT_CLASSIFICATION	0.9999974583943524	WITHOUT_CLASSIFICATION	2.5416056475543663E-6	DEFECT
// do we need to 	WITHOUT_CLASSIFICATION	0.9999860589128848	WITHOUT_CLASSIFICATION	1.3941087115210418E-5	DEFECT
/*     * The returned list of Figs is sorted according layout: from top to bottom.     */	WITHOUT_CLASSIFICATION	0.999999630354251	WITHOUT_CLASSIFICATION	3.696457490751009E-7	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
/*     * This makes dragging connected edges very smooth.     *     * @see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)     */	WITHOUT_CLASSIFICATION	0.9999999399283906	WITHOUT_CLASSIFICATION	6.007160934190234E-8	DEFECT
/*     * @see java.lang.Object#clone()     */	WITHOUT_CLASSIFICATION	0.9999990042201411	WITHOUT_CLASSIFICATION	9.957798589067173E-7	DEFECT
//_x = x; _y = y; _w = w; _h = h;	WITHOUT_CLASSIFICATION	0.9999586164578153	WITHOUT_CLASSIFICATION	4.138354218468641E-5	DEFECT
//_x = x; _y = y; _w = w; _h = h;	WITHOUT_CLASSIFICATION	0.9999586164578153	WITHOUT_CLASSIFICATION	4.138354218468641E-5	DEFECT
// add Figs to the FigNode in back-to-front order	WITHOUT_CLASSIFICATION	0.9999995836685673	WITHOUT_CLASSIFICATION	4.163314326709753E-7	DEFECT
//The event source is the owner stub state	WITHOUT_CLASSIFICATION	0.9999997628030765	WITHOUT_CLASSIFICATION	2.3719692350136072E-7	DEFECT
//////////////////////////////////////////////////////////////// // event processing	WITHOUT_CLASSIFICATION	0.9999999201795804	WITHOUT_CLASSIFICATION	7.982041966186467E-8	DEFECT
/* end class FigCompositeState */	WITHOUT_CLASSIFICATION	0.999980813664334	WITHOUT_CLASSIFICATION	1.9186335666051116E-5	DEFECT
/*The event source is the submachine state*/	WITHOUT_CLASSIFICATION	0.9999989676102468	WITHOUT_CLASSIFICATION	1.0323897533029935E-6	DEFECT
//        TargetManager.getInstance().addTargetListener(this);	WITHOUT_CLASSIFICATION	0.9999993909862748	WITHOUT_CLASSIFICATION	6.090137252734553E-7	DEFECT
// ignored - fixed rendering	WITHOUT_CLASSIFICATION	0.9998935535634997	WITHOUT_CLASSIFICATION	1.0644643650030933E-4	DEFECT
//make port invisible unless mouse enters	WITHOUT_CLASSIFICATION	0.9999996726198497	WITHOUT_CLASSIFICATION	3.273801503934516E-7	DEFECT
//make port invisible unless mouse enters	WITHOUT_CLASSIFICATION	0.9999996726198497	WITHOUT_CLASSIFICATION	3.273801503934516E-7	DEFECT
//////////////////////////////////////////////////////////////// // Event handlers	WITHOUT_CLASSIFICATION	0.9999998036506469	WITHOUT_CLASSIFICATION	1.9634935316560263E-7	DEFECT
//////////////////////////////////////////////////////////////// // Cmd API	WITHOUT_CLASSIFICATION	0.9999954656938187	WITHOUT_CLASSIFICATION	4.534306181280155E-6	DEFECT
/* end class ActionCreatePseudostate */	WITHOUT_CLASSIFICATION	0.9999950649517065	WITHOUT_CLASSIFICATION	4.935048293497651E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
/*     * @see java.lang.Object#clone()     */	WITHOUT_CLASSIFICATION	0.9999990042201411	WITHOUT_CLASSIFICATION	9.957798589067173E-7	DEFECT
//_x = x; _y = y; _w = w; _h = h;	WITHOUT_CLASSIFICATION	0.9999586164578153	WITHOUT_CLASSIFICATION	4.138354218468641E-5	DEFECT
// add Figs to the FigNode in back-to-front order	WITHOUT_CLASSIFICATION	0.9999995836685673	WITHOUT_CLASSIFICATION	4.163314326709753E-7	DEFECT
/* Set the drop location in the case of D&D: */	WITHOUT_CLASSIFICATION	0.9999898136465005	WITHOUT_CLASSIFICATION	1.0186353499536679E-5	DEFECT
//////////////////////////////////////////////////////////////// // event processing	WITHOUT_CLASSIFICATION	0.9999999201795804	WITHOUT_CLASSIFICATION	7.982041966186467E-8	DEFECT
//make port invisible unless mouse enters	WITHOUT_CLASSIFICATION	0.9999996726198497	WITHOUT_CLASSIFICATION	3.273801503934516E-7	DEFECT
//make port invisible unless mouse enters	WITHOUT_CLASSIFICATION	0.9999996726198497	WITHOUT_CLASSIFICATION	3.273801503934516E-7	DEFECT
/* The submachine has got a new name*/	WITHOUT_CLASSIFICATION	0.9999945456722421	WITHOUT_CLASSIFICATION	5.454327757884564E-6	DEFECT
// The event source is the stub state's referenced state // or one of the referenced state's path.	WITHOUT_CLASSIFICATION	0.9999999903334372	WITHOUT_CLASSIFICATION	9.666562837972106E-9	DEFECT
// This indicates a change in association, not name - tfm	WITHOUT_CLASSIFICATION	0.9999147548513274	WITHOUT_CLASSIFICATION	8.524514867259916E-5	DEFECT
//All states in the new reference state's path are added // as listeners	WITHOUT_CLASSIFICATION	0.9999992201469252	WITHOUT_CLASSIFICATION	7.798530747568935E-7	DEFECT
// The source was the referenced state that has got // a new name.	WITHOUT_CLASSIFICATION	0.9999998705772265	WITHOUT_CLASSIFICATION	1.2942277354746924E-7	DEFECT
// ignored - rendering is fixed	WITHOUT_CLASSIFICATION	0.9995178781283781	WITHOUT_CLASSIFICATION	4.8212187162189425E-4	DEFECT
//The source was one of the referenced state's path which // has got a new name.	WITHOUT_CLASSIFICATION	0.999999997722796	WITHOUT_CLASSIFICATION	2.2772039185601797E-9	DEFECT
//The old submachine container is deleted as listener	WITHOUT_CLASSIFICATION	0.9999999129264844	WITHOUT_CLASSIFICATION	8.707351563940314E-8	DEFECT
// The Referenced State or one of his path's states has got // a new name	WITHOUT_CLASSIFICATION	0.99999994416387	WITHOUT_CLASSIFICATION	5.583612995651992E-8	DEFECT
//The new submachine container is added as listener	WITHOUT_CLASSIFICATION	0.9999994814876915	WITHOUT_CLASSIFICATION	5.185123085157944E-7	DEFECT
//All states in the old reference state's path are deleted // as listeners	WITHOUT_CLASSIFICATION	0.9999998454038987	WITHOUT_CLASSIFICATION	1.5459610130125406E-7	DEFECT
// Translate any old style sequence diagrams	WITHOUT_CLASSIFICATION	0.9999951745189042	WITHOUT_CLASSIFICATION	4.8254810957681135E-6	DEFECT
// Just swap order of arguments to get to new form	WITHOUT_CLASSIFICATION	0.9999999812846271	WITHOUT_CLASSIFICATION	1.8715373016068482E-8	DEFECT
// Translate any sequence diagrams create with any previous svn // work in progress	WITHOUT_CLASSIFICATION	0.999774765317918	WITHOUT_CLASSIFICATION	2.252346820819849E-4	DEFECT
// Get the first existing FigNode and if it exists set the // y position and height of _pers to be the same as it.	WITHOUT_CLASSIFICATION	0.999998757559001	WITHOUT_CLASSIFICATION	1.2424409988742827E-6	DEFECT
/*     * @see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998353954294	WITHOUT_CLASSIFICATION	1.6460457068653385E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#makeSelection()     */	WITHOUT_CLASSIFICATION	0.9999995782178864	WITHOUT_CLASSIFICATION	4.2178211349919347E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999455836559	WITHOUT_CLASSIFICATION	5.44163440595605E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineColor()     */	WITHOUT_CLASSIFICATION	0.9999998290030105	WITHOUT_CLASSIFICATION	1.7099698950311398E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999340694784	WITHOUT_CLASSIFICATION	6.593052162592007E-8	DEFECT
/*     * @see java.lang.Object#clone()     */	WITHOUT_CLASSIFICATION	0.9999990042201411	WITHOUT_CLASSIFICATION	9.957798589067173E-7	DEFECT
//_x = x; _y = y; _w = w; _h = h;	WITHOUT_CLASSIFICATION	0.9999586164578153	WITHOUT_CLASSIFICATION	4.138354218468641E-5	DEFECT
//_x = x; _y = y; _w = w; _h = h;	WITHOUT_CLASSIFICATION	0.9999586164578153	WITHOUT_CLASSIFICATION	4.138354218468641E-5	DEFECT
//_x = x; _y = y; _w = w; _h = h;	WITHOUT_CLASSIFICATION	0.9999586164578153	WITHOUT_CLASSIFICATION	4.138354218468641E-5	DEFECT
// add Figs to the FigNode in back-to-front order	WITHOUT_CLASSIFICATION	0.9999995836685673	WITHOUT_CLASSIFICATION	4.163314326709753E-7	DEFECT
//make port invisible unless mouse enters	WITHOUT_CLASSIFICATION	0.9999996726198497	WITHOUT_CLASSIFICATION	3.273801503934516E-7	DEFECT
// ignored - rendering is fixed	WITHOUT_CLASSIFICATION	0.9995178781283781	WITHOUT_CLASSIFICATION	4.8212187162189425E-4	DEFECT
// ignore mouse clicks	WITHOUT_CLASSIFICATION	0.9999985899869736	WITHOUT_CLASSIFICATION	1.410013026440189E-6	DEFECT
// ignore mouse clicks	WITHOUT_CLASSIFICATION	0.9999985899869736	WITHOUT_CLASSIFICATION	1.410013026440189E-6	DEFECT
// The Machine State has got a new name	WITHOUT_CLASSIFICATION	0.9999963264046822	WITHOUT_CLASSIFICATION	3.6735953177064523E-6	DEFECT
/* This assert fails for the TestPropertyPanels,          * file GUITestPropertyPanels.zargo: */	WITHOUT_CLASSIFICATION	0.997414868505481	WITHOUT_CLASSIFICATION	0.002585131494518979	DEFECT
//assert  w == h;	WITHOUT_CLASSIFICATION	0.9999977726112658	WITHOUT_CLASSIFICATION	2.227388734179722E-6	DEFECT
// The Machine State has been deleted from model	WITHOUT_CLASSIFICATION	0.9999994735751334	WITHOUT_CLASSIFICATION	5.264248666096279E-7	DEFECT
/* Ignore w and h from here on. */	WITHOUT_CLASSIFICATION	0.999993995402716	WITHOUT_CLASSIFICATION	6.00459728390632E-6	DEFECT
// keep d even or odd, just like the line width:	WITHOUT_CLASSIFICATION	0.99999961486287	WITHOUT_CLASSIFICATION	3.85137129934092E-7	DEFECT
// leave some space below the "include"	WITHOUT_CLASSIFICATION	0.9999973503247712	WITHOUT_CLASSIFICATION	2.6496752289040083E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
/*     * @see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor(     *      org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer,     *      java.lang.Object, java.util.Map)     */	WITHOUT_CLASSIFICATION	0.9999997180737816	WITHOUT_CLASSIFICATION	2.819262182920371E-7	DEFECT
/*     * @see org.tigris.gef.graph.GraphEdgeRenderer#getFigEdgeFor(     *      org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer,     *      java.lang.Object, java.util.Map)     */	WITHOUT_CLASSIFICATION	0.9999996356788252	WITHOUT_CLASSIFICATION	3.643211747636361E-7	DEFECT
/*     * @see java.lang.Object#clone()     */	WITHOUT_CLASSIFICATION	0.9999990042201411	WITHOUT_CLASSIFICATION	9.957798589067173E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999455836559	WITHOUT_CLASSIFICATION	5.44163440595605E-8	DEFECT
// Although not generally true for GEF, for Argo we know that the layer // is a LayerPerspective which knows the associated diagram	WITHOUT_CLASSIFICATION	0.9952751636767379	WITHOUT_CLASSIFICATION	0.004724836323262116	DEFECT
// add Figs to the FigNode in back-to-front order	WITHOUT_CLASSIFICATION	0.9999995836685673	WITHOUT_CLASSIFICATION	4.163314326709753E-7	DEFECT
// both have the same settings	WITHOUT_CLASSIFICATION	0.9999992828770305	WITHOUT_CLASSIFICATION	7.171229694629872E-7	DEFECT
// both have the same owner	WITHOUT_CLASSIFICATION	0.9999977652800531	WITHOUT_CLASSIFICATION	2.2347199468890078E-6	DEFECT
// TODO -> settings	WITHOUT_CLASSIFICATION	0.9996634488813402	WITHOUT_CLASSIFICATION	3.3655111865982186E-4	DEFECT
//make port invisible unless mouse enters	WITHOUT_CLASSIFICATION	0.9999996726198497	WITHOUT_CLASSIFICATION	3.273801503934516E-7	DEFECT
//make port invisible unless mouse enters	WITHOUT_CLASSIFICATION	0.9999996726198497	WITHOUT_CLASSIFICATION	3.273801503934516E-7	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
// There are one or more regions so find the one that the //vertex was dropped in	WITHOUT_CLASSIFICATION	0.9999995644159201	WITHOUT_CLASSIFICATION	4.355840800019447E-7	DEFECT
// The vertex was dropped onto the diagram. // Get the region as the first Region in the StateMachine. // If there is no region in the StateMachine then create one.	WITHOUT_CLASSIFICATION	0.999999989044674	WITHOUT_CLASSIFICATION	1.09553259901627E-8	DEFECT
/*     * @see     * org.argouml.uml.diagram.state.ui.FigStateVertex#initNotationProviders     * (java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999998467691237	WITHOUT_CLASSIFICATION	1.532308762548827E-7	DEFECT
/*     * @see     * org.argouml.uml.diagram.ui.FigNodeModelElement#removeFromDiagramImpl()     */	WITHOUT_CLASSIFICATION	0.9999998152951135	WITHOUT_CLASSIFICATION	1.8470488642024435E-7	DEFECT
// _x = x; _y = y; _w = w; _h = h;	WITHOUT_CLASSIFICATION	0.9999800926810427	WITHOUT_CLASSIFICATION	1.9907318957228126E-5	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999340694784	WITHOUT_CLASSIFICATION	6.593052162592007E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getFillColor()     */	WITHOUT_CLASSIFICATION	0.9999997773950514	WITHOUT_CLASSIFICATION	2.2260494867696943E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineWidth()     */	WITHOUT_CLASSIFICATION	0.9999998405845854	WITHOUT_CLASSIFICATION	1.5941541474846165E-7	DEFECT
/*     * @see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999999980370717	WITHOUT_CLASSIFICATION	1.962928268087383E-9	DEFECT
//_x = x; _y = y; _w = w; _h = h;	WITHOUT_CLASSIFICATION	0.9999586164578153	WITHOUT_CLASSIFICATION	4.138354218468641E-5	DEFECT
// add Figs to the FigNode in back-to-front order	WITHOUT_CLASSIFICATION	0.9999995836685673	WITHOUT_CLASSIFICATION	4.163314326709753E-7	DEFECT
// noop - fixed rendering	WITHOUT_CLASSIFICATION	0.9999486959561092	WITHOUT_CLASSIFICATION	5.130404389071583E-5	DEFECT
// There are no regions so create one and // place the vertex there.	WITHOUT_CLASSIFICATION	0.9999993006898714	WITHOUT_CLASSIFICATION	6.993101286192803E-7	DEFECT
// Temporary start //    private static final Color[] COLOR_ARRAY = { //        Color.RED, Color.BLUE, Color.CYAN, Color.YELLOW, Color.GREEN}; //    private int nextColor = 0; // Temporary end	WITHOUT_CLASSIFICATION	0.9999999903995742	WITHOUT_CLASSIFICATION	9.600425843168707E-9	DEFECT
//setBlinkPorts(false); //make port invisble unless mouse enters	WITHOUT_CLASSIFICATION	0.9999991742125672	WITHOUT_CLASSIFICATION	8.257874329126295E-7	DEFECT
// there can only be one	WITHOUT_CLASSIFICATION	0.9999922001746452	WITHOUT_CLASSIFICATION	7.799825354740398E-6	DEFECT
/*     * @see java.lang.Object#clone()     */	WITHOUT_CLASSIFICATION	0.9999990042201411	WITHOUT_CLASSIFICATION	9.957798589067173E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getMinimumSize()     */	WITHOUT_CLASSIFICATION	0.9999999327190773	WITHOUT_CLASSIFICATION	6.728092273203155E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getUseTrapRect()     */	WITHOUT_CLASSIFICATION	0.9999999097408558	WITHOUT_CLASSIFICATION	9.025914415553368E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineColor()     */	WITHOUT_CLASSIFICATION	0.9999998290030105	WITHOUT_CLASSIFICATION	1.7099698950311398E-7	DEFECT
/*     * @see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999999980370717	WITHOUT_CLASSIFICATION	1.962928268087383E-9	DEFECT
//_x = x; _y = y; _w = w; _h = h;	WITHOUT_CLASSIFICATION	0.9999586164578153	WITHOUT_CLASSIFICATION	4.138354218468641E-5	DEFECT
//_x = x; _y = y; _w = w; _h = h;	WITHOUT_CLASSIFICATION	0.9999586164578153	WITHOUT_CLASSIFICATION	4.138354218468641E-5	DEFECT
//_x = x; _y = y; _w = w; _h = h;	WITHOUT_CLASSIFICATION	0.9999586164578153	WITHOUT_CLASSIFICATION	4.138354218468641E-5	DEFECT
//_x = x; _y = y; _w = w; _h = h;	WITHOUT_CLASSIFICATION	0.9999586164578153	WITHOUT_CLASSIFICATION	4.138354218468641E-5	DEFECT
// add Figs to the FigNode in back-to-front order	WITHOUT_CLASSIFICATION	0.9999995836685673	WITHOUT_CLASSIFICATION	4.163314326709753E-7	DEFECT
/* We aren't able to resize neither the top bound             * from the first region nor             * the bottom bound from the last region.             */	WITHOUT_CLASSIFICATION	0.999999733060085	WITHOUT_CLASSIFICATION	2.669399149796782E-7	DEFECT
/*The group must be resized if a text field exceed the bounds*/	WITHOUT_CLASSIFICATION	0.9999984223695435	WITHOUT_CLASSIFICATION	1.5776304564865093E-6	DEFECT
/* if curHandle.index is 0 or 2,             * the adjacent region is the previous region             * but if it is 5 or 7, the adjacent region is the next region.             * curHandle.index show which corner of the bound we are dragging.             */	WITHOUT_CLASSIFICATION	0.9999997139872405	WITHOUT_CLASSIFICATION	2.860127595310317E-7	DEFECT
/*         * A Concurrent region cannot have incoming or outgoing transitions so         * incoming or outgoing transitions are redirected to its concurrent         * composite state container.         */	WITHOUT_CLASSIFICATION	0.9999981570562372	WITHOUT_CLASSIFICATION	1.8429437628348739E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999959030536316	WITHOUT_CLASSIFICATION	4.096946368362294E-6	DEFECT
/*     * @see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998995536239	WITHOUT_CLASSIFICATION	1.0044637608451965E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999999368964285	WITHOUT_CLASSIFICATION	6.310357143005751E-8	DEFECT
/*     * @see java.awt.event.MouseMotionListener#mouseDragged(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999999559546878	WITHOUT_CLASSIFICATION	4.404531212118874E-8	DEFECT
/*     * @see java.awt.event.MouseMotionListener#mouseMoved(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998315455914	WITHOUT_CLASSIFICATION	1.6845440864553086E-7	DEFECT
// nothing we can do about veto, so just ignore it	WITHOUT_CLASSIFICATION	0.9999999924248507	WITHOUT_CLASSIFICATION	7.575149305920542E-9	DEFECT
// nothing we can do about veto, so just ignore it	WITHOUT_CLASSIFICATION	0.9999999924248507	WITHOUT_CLASSIFICATION	7.575149305920542E-9	DEFECT
// add Figs to the FigNode in back-to-front order	WITHOUT_CLASSIFICATION	0.9999995836685673	WITHOUT_CLASSIFICATION	4.163314326709753E-7	DEFECT
// singleton	WITHOUT_CLASSIFICATION	0.9999997731645656	WITHOUT_CLASSIFICATION	2.2683543429803828E-7	DEFECT
//////////////////////////////////////////////////////////////// // event processing	WITHOUT_CLASSIFICATION	0.9999999201795804	WITHOUT_CLASSIFICATION	7.982041966186467E-8	DEFECT
//make port invisible unless mouse enters	WITHOUT_CLASSIFICATION	0.9999996726198497	WITHOUT_CLASSIFICATION	3.273801503934516E-7	DEFECT
///////////////////////////////////////////////////////////////////////// // event handlers - MouseListener and MouseMotionListener implementation	WITHOUT_CLASSIFICATION	0.9999987370346229	WITHOUT_CLASSIFICATION	1.262965377054078E-6	DEFECT
// or just the owner?	WITHOUT_CLASSIFICATION	0.9999869098899345	WITHOUT_CLASSIFICATION	1.3090110065425832E-5	DEFECT
/* Listen to machine deletion,         * to delete the diagram. */	WITHOUT_CLASSIFICATION	0.9999996794719331	WITHOUT_CLASSIFICATION	3.205280668733031E-7	DEFECT
// this in case we are being deleted	WITHOUT_CLASSIFICATION	0.9999911677759686	WITHOUT_CLASSIFICATION	8.832224031240775E-6	DEFECT
/* The namespace of the statemachine is changed! */	WITHOUT_CLASSIFICATION	0.9999775528844518	WITHOUT_CLASSIFICATION	2.2447115548175083E-5	DEFECT
// return;	WITHOUT_CLASSIFICATION	0.9999992861169462	WITHOUT_CLASSIFICATION	7.138830538664189E-7	DEFECT
// return;	WITHOUT_CLASSIFICATION	0.9999992861169462	WITHOUT_CLASSIFICATION	7.138830538664189E-7	DEFECT
//_x = x; _y = y; _w = w; _h = h;	WITHOUT_CLASSIFICATION	0.9999586164578153	WITHOUT_CLASSIFICATION	4.138354218468641E-5	DEFECT
// A binary association is not a node so reject.	WITHOUT_CLASSIFICATION	0.9999799786257468	WITHOUT_CLASSIFICATION	2.0021374253163714E-5	DEFECT
//throws PropertyVetoException	WITHOUT_CLASSIFICATION	0.9999957311618989	WITHOUT_CLASSIFICATION	4.268838101134893E-6	DEFECT
// If location is non-null, convert to a rectangle that we can use	WITHOUT_CLASSIFICATION	0.9999998159331467	WITHOUT_CLASSIFICATION	1.8406685327799523E-7	DEFECT
// prevent no changes...	WITHOUT_CLASSIFICATION	0.9999999079299795	WITHOUT_CLASSIFICATION	9.207002048555308E-8	DEFECT
// check parameter types:	WITHOUT_CLASSIFICATION	0.9999955466126439	WITHOUT_CLASSIFICATION	4.453387356191368E-6	DEFECT
//make port invisible unless mouse enters	WITHOUT_CLASSIFICATION	0.9999996726198497	WITHOUT_CLASSIFICATION	3.273801503934516E-7	DEFECT
//      Model.getStateMachinesHelper() //              .isAddingStatemachineAllowed(base);	WITHOUT_CLASSIFICATION	0.9999995133578018	WITHOUT_CLASSIFICATION	4.866421981408689E-7	DEFECT
/* Set up the property panels for statechart diagrams: */	WITHOUT_CLASSIFICATION	0.9998812945198443	WITHOUT_CLASSIFICATION	1.1870548015564602E-4	DEFECT
// if location is null here the position of the new figNode is set // after in org.tigris.gef.base.ModePlace.mousePressed(MouseEvent e)	WITHOUT_CLASSIFICATION	0.9999999990567944	WITHOUT_CLASSIFICATION	9.432055521998423E-10	DEFECT
//MModelElement modelElement = elementImport.getModelElement();	WITHOUT_CLASSIFICATION	0.9999967600146231	WITHOUT_CLASSIFICATION	3.2399853767580295E-6	DEFECT
// top of the hierarchy is ME:	WITHOUT_CLASSIFICATION	0.9999986312837352	WITHOUT_CLASSIFICATION	1.3687162647101872E-6	DEFECT
// top of the hierarchy is ME:	WITHOUT_CLASSIFICATION	0.9999986312837352	WITHOUT_CLASSIFICATION	1.3687162647101872E-6	DEFECT
// then Generalizable Element	WITHOUT_CLASSIFICATION	0.9999313181114251	WITHOUT_CLASSIFICATION	6.868188857490874E-5	DEFECT
// then Generalizable Element	WITHOUT_CLASSIFICATION	0.9999313181114251	WITHOUT_CLASSIFICATION	6.868188857490874E-5	DEFECT
// then Classifier & Package	WITHOUT_CLASSIFICATION	0.9999992246680737	WITHOUT_CLASSIFICATION	7.7533192638042E-7	DEFECT
// navigable.... only want incoming	WITHOUT_CLASSIFICATION	0.999997879079539	WITHOUT_CLASSIFICATION	2.1209204611095484E-6	DEFECT
// then Classifier	WITHOUT_CLASSIFICATION	0.9999990164570749	WITHOUT_CLASSIFICATION	9.835429251305373E-7	DEFECT
//////////////////////////////////////////////////////////////// // MutableGraphModel implementation	WITHOUT_CLASSIFICATION	0.9999949049197683	WITHOUT_CLASSIFICATION	5.0950802317837466E-6	DEFECT
//////////////////////////////////////////////////////////////// // VetoableChangeListener implementation	WITHOUT_CLASSIFICATION	0.9999825620679107	WITHOUT_CLASSIFICATION	1.7437932089304444E-5	DEFECT
// cast the params	WITHOUT_CLASSIFICATION	0.9999965669767957	WITHOUT_CLASSIFICATION	3.4330232042992215E-6	DEFECT
// N.B. A node which is an Association is either a n-ary association // or the Class part of an AssociationClass	WITHOUT_CLASSIFICATION	0.9999937305602595	WITHOUT_CLASSIFICATION	6.26943974047693E-6	DEFECT
// check param types: only some connections are legal uml connections:	WITHOUT_CLASSIFICATION	0.9996141590633378	WITHOUT_CLASSIFICATION	3.8584093666208153E-4	DEFECT
//set the new end type!	WITHOUT_CLASSIFICATION	0.9999919044546935	WITHOUT_CLASSIFICATION	8.09554530647553E-6	DEFECT
// rerouting the destination:	WITHOUT_CLASSIFICATION	0.9999999475646214	WITHOUT_CLASSIFICATION	5.243537861388457E-8	DEFECT
// rerouting the source:	WITHOUT_CLASSIFICATION	0.9999994103631231	WITHOUT_CLASSIFICATION	5.896368769698034E-7	DEFECT
// empty at the moment	WITHOUT_CLASSIFICATION	0.9999643547642507	WITHOUT_CLASSIFICATION	3.564523574937527E-5	DEFECT
// move down	WITHOUT_CLASSIFICATION	0.9999929716238193	WITHOUT_CLASSIFICATION	7.028376180774417E-6	DEFECT
// empty at the moment	WITHOUT_CLASSIFICATION	0.9999643547642507	WITHOUT_CLASSIFICATION	3.564523574937527E-5	DEFECT
// empty at the moment	WITHOUT_CLASSIFICATION	0.9999643547642507	WITHOUT_CLASSIFICATION	3.564523574937527E-5	DEFECT
// move more right	WITHOUT_CLASSIFICATION	0.999991625088098	WITHOUT_CLASSIFICATION	8.374911901957262E-6	DEFECT
// move left	WITHOUT_CLASSIFICATION	0.9999857915105124	WITHOUT_CLASSIFICATION	1.420848948766555E-5	DEFECT
// use left and right, up and down	WITHOUT_CLASSIFICATION	0.9999994694572673	WITHOUT_CLASSIFICATION	5.305427327408823E-7	DEFECT
// calculate the higher and lower Figs	WITHOUT_CLASSIFICATION	0.9999983929778606	WITHOUT_CLASSIFICATION	1.6070221393635486E-6	DEFECT
// the amount of the "sidestep"	WITHOUT_CLASSIFICATION	0.999999975478735	WITHOUT_CLASSIFICATION	2.4521265073818918E-8	DEFECT
/*         * If center points are "close enough" we just adjust the endpoints         * of the line a little bit.  Otherwise we add a jog in the middle to         * deal with the offset.         *         * TODO: Epsilon is currently fixed, but could probably be computed         * dynamically as 10% of the width of the narrowest figure or some         * other value which is visually not noticeable.         */	WITHOUT_CLASSIFICATION	0.6786046735420107	DEFECT	0.3213953264579892	WITHOUT_CLASSIFICATION
// currentEdge.setBetweenNearestPoints(false);	WITHOUT_CLASSIFICATION	0.9999997560771471	WITHOUT_CLASSIFICATION	2.43922852979058E-7	DEFECT
//LOG.debug(result + " node1: " + this + ", node2 " + node);	WITHOUT_CLASSIFICATION	0.9995268223156673	WITHOUT_CLASSIFICATION	4.7317768433273856E-4	DEFECT
// split = //     (split == null || split.isStandalone()) ? node : split;	WITHOUT_CLASSIFICATION	0.9999996118306727	WITHOUT_CLASSIFICATION	3.881693274008502E-7	DEFECT
// (xOffset - curW) / 2;	WITHOUT_CLASSIFICATION	0.9999996515663823	WITHOUT_CLASSIFICATION	3.4843361772062217E-7	DEFECT
// Element is allowed, but only NamedElement can return nonempty list	WITHOUT_CLASSIFICATION	0.9999968721544676	WITHOUT_CLASSIFICATION	3.127845532324124E-6	DEFECT
/* Do nothing. */	WITHOUT_CLASSIFICATION	0.9999762593166146	WITHOUT_CLASSIFICATION	2.3740683385349116E-5	DEFECT
/* Set the drop location in the case of D&D: */	WITHOUT_CLASSIFICATION	0.9999898136465005	WITHOUT_CLASSIFICATION	1.0186353499536679E-5	DEFECT
// self associations are special cases. No need to let the maze // runner find the way.	WITHOUT_CLASSIFICATION	0.9999925533556843	WITHOUT_CLASSIFICATION	7.446644315630193E-6	DEFECT
// Link does not exist in UML2	WITHOUT_CLASSIFICATION	0.9998498130325851	WITHOUT_CLASSIFICATION	1.501869674148083E-4	DEFECT
// now we construct the zig zag inheritance line //getUnderlyingFig()	WITHOUT_CLASSIFICATION	0.9999418027730655	WITHOUT_CLASSIFICATION	5.8197226934490675E-5	DEFECT
/** * Class to display graphics for a UML Link in a diagram. <p> *  * The underlined association name is shown next to the middle of the path. *  * TODO: Show more notation as described in the standard: * "A rolename may be shown at each end of the link. An association  * name may be shown near the path. If present, it is underlined * to indicate an instance. Links do not have instance names,  * they take their identity from the instances that they relate. * Multiplicity is not shown for links because they are instances.  * Other association adornments (aggregation, composition,  * navigation) may be shown on the link ends." */	WITHOUT_CLASSIFICATION	0.7384213511970218	DEFECT	0.26157864880297826	WITHOUT_CLASSIFICATION
/*     * Text group to contain name & stereotype     */	WITHOUT_CLASSIFICATION	0.9999996957155781	WITHOUT_CLASSIFICATION	3.042844219469406E-7	DEFECT
/* end class FigLink */	WITHOUT_CLASSIFICATION	0.9997145826253867	WITHOUT_CLASSIFICATION	2.8541737461328727E-4	DEFECT
/* The next line is needed so that we have the right dimension          * when drawing this Fig on the diagram by pressing down          * the mouse button, even before releasing the mouse button: */	WITHOUT_CLASSIFICATION	0.9999948122475213	WITHOUT_CLASSIFICATION	5.187752478605783E-6	DEFECT
/* Stereotype covers NameFig: */	WITHOUT_CLASSIFICATION	0.9986315411378954	WITHOUT_CLASSIFICATION	0.0013684588621046324	DEFECT
/* Compartments from top to bottom: */	WITHOUT_CLASSIFICATION	0.9999711069800438	WITHOUT_CLASSIFICATION	2.889301995633594E-5	DEFECT
// Make all the parts match the main fig	WITHOUT_CLASSIFICATION	0.9999842643692382	WITHOUT_CLASSIFICATION	1.5735630761798286E-5	DEFECT
// by default, do not show operations nor attributes:	WITHOUT_CLASSIFICATION	0.9999958913127941	WITHOUT_CLASSIFICATION	4.108687205852899E-6	DEFECT
// We're going to change the name immediately, so just use ""	WITHOUT_CLASSIFICATION	0.9999999998489986	WITHOUT_CLASSIFICATION	1.5100154814753724E-10	DEFECT
/*     * @see java.lang.Object#clone()     */	WITHOUT_CLASSIFICATION	0.9999990042201411	WITHOUT_CLASSIFICATION	9.957798589067173E-7	DEFECT
//////////////// // actions for toolbar	WITHOUT_CLASSIFICATION	0.9999965021089471	WITHOUT_CLASSIFICATION	3.497891052959422E-6	DEFECT
// TODO: place comments near connected classes // TODO: place from middle towards outer edges? (or place largest // groups first)	WITHOUT_CLASSIFICATION	0.7898199704614539	WITHOUT_CLASSIFICATION	0.21018002953854617	DEFECT
//        boolean hasPackages = false; // TODO: move "package in row" to NodeRow	WITHOUT_CLASSIFICATION	0.9439496389127409	WITHOUT_CLASSIFICATION	0.05605036108725905	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999959030536316	WITHOUT_CLASSIFICATION	4.096946368362294E-6	DEFECT
// This calls the getters to fetch actions even though the // action variables are defined is instances of this class. // This is because any number of action getters could have // been overridden in a descendant and it is the action from // that overridden method that should be returned in the array.	WITHOUT_CLASSIFICATION	0.9999992415506801	WITHOUT_CLASSIFICATION	7.584493200229017E-7	DEFECT
// since UML2, this must appear before the isAClass clause	WITHOUT_CLASSIFICATION	0.9999949370052483	WITHOUT_CLASSIFICATION	5.062994751701947E-6	DEFECT
// this rectangle marks the operation section; all operations // are inside it	WITHOUT_CLASSIFICATION	0.9999410615041096	WITHOUT_CLASSIFICATION	5.8938495890462174E-5	DEFECT
// 2nd compartment, so adjust Y appropriately	WITHOUT_CLASSIFICATION	0.999999910278386	WITHOUT_CLASSIFICATION	8.972161403184884E-8	DEFECT
// TODO: We should be able to just call renderingChanged on the child // figs here instead of doing an updateOperations...	WITHOUT_CLASSIFICATION	0.5334521108125716	DEFECT	0.4665478891874283	WITHOUT_CLASSIFICATION
// TODO: We just need to get someone to re-render a single // line of text which represents the element here, but I'm // not sure how to do that. - tfm // TODO: Bob replies - we shouldn't be interested in this // event here. The FigFeature (or its notation) should be // listen for change and the FigFeature should be update // from that.	WITHOUT_CLASSIFICATION	0.9380870746191279	WITHOUT_CLASSIFICATION	0.06191292538087201	DEFECT
// Collect the set of model elements that we want to listen to	WITHOUT_CLASSIFICATION	0.9999998379305208	WITHOUT_CLASSIFICATION	1.620694791748433E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#translate(int, int)     */	WITHOUT_CLASSIFICATION	0.9999999277549894	WITHOUT_CLASSIFICATION	7.224501070247917E-8	DEFECT
/*     * @see java.lang.Object#clone()     */	WITHOUT_CLASSIFICATION	0.9999990042201411	WITHOUT_CLASSIFICATION	9.957798589067173E-7	DEFECT
// add Figs to the FigNode in back-to-front order	WITHOUT_CLASSIFICATION	0.9999995836685673	WITHOUT_CLASSIFICATION	4.163314326709753E-7	DEFECT
// add the listeners to the newOwner	WITHOUT_CLASSIFICATION	0.999999292065994	WITHOUT_CLASSIFICATION	7.07934006076151E-7	DEFECT
//make port invisible unless mouse enters	WITHOUT_CLASSIFICATION	0.9999996726198497	WITHOUT_CLASSIFICATION	3.273801503934516E-7	DEFECT
// Make all the parts match the main fig	WITHOUT_CLASSIFICATION	0.9999842643692382	WITHOUT_CLASSIFICATION	1.5735630761798286E-5	DEFECT
/* check if any stereotype is defined */	WITHOUT_CLASSIFICATION	0.999995586068958	WITHOUT_CLASSIFICATION	4.41393104200628E-6	DEFECT
// and the stereotypes of its features	WITHOUT_CLASSIFICATION	0.9999989744641353	WITHOUT_CLASSIFICATION	1.0255358646640554E-6	DEFECT
// and its features	WITHOUT_CLASSIFICATION	0.9999996079280332	WITHOUT_CLASSIFICATION	3.9207196679851165E-7	DEFECT
// and the parameter of its operations	WITHOUT_CLASSIFICATION	0.9999992591988177	WITHOUT_CLASSIFICATION	7.4080118239615E-7	DEFECT
// Update the listeners to match the desired set using the minimal // update facility	WITHOUT_CLASSIFICATION	0.9999999984308479	WITHOUT_CLASSIFICATION	1.5691520440659938E-9	DEFECT
// Modifier ...	WITHOUT_CLASSIFICATION	0.9999921309606183	WITHOUT_CLASSIFICATION	7.86903938168609E-6	DEFECT
// Create a Body that reacts to double-clicks and jumps to a diagram.	WITHOUT_CLASSIFICATION	0.9999988471482512	WITHOUT_CLASSIFICATION	1.1528517488541496E-6	DEFECT
// Add ...	WITHOUT_CLASSIFICATION	0.9999886228890473	WITHOUT_CLASSIFICATION	1.137711095274034E-5	DEFECT
// Visibility ...	WITHOUT_CLASSIFICATION	0.9999856686973897	WITHOUT_CLASSIFICATION	1.4331302610279254E-5	DEFECT
// Set properties of the stereotype box. // Initially not set to be displayed, but this will be changed // when we try to render it, if we find we have a stereotype.	WITHOUT_CLASSIFICATION	0.9999892692007917	WITHOUT_CLASSIFICATION	1.0730799208316721E-5	DEFECT
// There are 2 boxes showing lines: the tab and the body.	WITHOUT_CLASSIFICATION	0.9995290934935787	WITHOUT_CLASSIFICATION	4.7090650642128365E-4	DEFECT
/* This populates the stereotypes area: */	WITHOUT_CLASSIFICATION	0.9998568670382803	WITHOUT_CLASSIFICATION	1.4313296171978538E-4	DEFECT
// else nothing changed	WITHOUT_CLASSIFICATION	0.9999997758643437	WITHOUT_CLASSIFICATION	2.2413565630542972E-7	DEFECT
// else nothing changed	WITHOUT_CLASSIFICATION	0.9999997758643437	WITHOUT_CLASSIFICATION	2.2413565630542972E-7	DEFECT
/* we got at least one stereotype */	WITHOUT_CLASSIFICATION	0.9999635218189392	WITHOUT_CLASSIFICATION	3.647818106073553E-5	DEFECT
// the user wants to hide them	WITHOUT_CLASSIFICATION	0.999999624131909	WITHOUT_CLASSIFICATION	3.7586809099417135E-7	DEFECT
// Modifier ...	WITHOUT_CLASSIFICATION	0.9999921309606183	WITHOUT_CLASSIFICATION	7.86903938168609E-6	DEFECT
// Visibility ...	WITHOUT_CLASSIFICATION	0.9999856686973897	WITHOUT_CLASSIFICATION	1.4331302610279254E-5	DEFECT
/* The figPoly is located at the right of the name text.             * The nameFig size is increased, so that it fits its text,             * and the figPoly next to the text, all within the boundaries             * of the nameFig. */	WITHOUT_CLASSIFICATION	0.9999999991354813	WITHOUT_CLASSIFICATION	8.645187200614715E-10	DEFECT
// If we have any number of stereotypes displayed, then allow // some space for that (only width, height is included in nameFig):	WITHOUT_CLASSIFICATION	0.9999991432174222	WITHOUT_CLASSIFICATION	8.567825777510105E-7	DEFECT
// take into account the tab is not as wide as the body:	WITHOUT_CLASSIFICATION	0.9997496787763734	WITHOUT_CLASSIFICATION	2.503212236266643E-4	DEFECT
// we want at least some of the package body to be displayed	WITHOUT_CLASSIFICATION	0.9999999739843565	WITHOUT_CLASSIFICATION	2.6015643555583996E-8	DEFECT
// And now aSize has the answer	WITHOUT_CLASSIFICATION	0.9999983406419536	WITHOUT_CLASSIFICATION	1.659358046324046E-6	DEFECT
// Save our old boundaries (needed later), and get minimum size // info. "aSize" will be used to maintain a running calculation of our // size at various points.	WITHOUT_CLASSIFICATION	0.9999999789358223	WITHOUT_CLASSIFICATION	2.1064177775259163E-8	DEFECT
// The new size can not be smaller than the minimum.	WITHOUT_CLASSIFICATION	0.9999847886709973	WITHOUT_CLASSIFICATION	1.521132900274393E-5	DEFECT
// Now resize all sub-figs, including not displayed figs. Start by the // name. We override the getMinimumSize if it is less than our view (21 // pixels hardcoded!). Add in the shared extra, plus in this case the // correction.	WITHOUT_CLASSIFICATION	0.9999536392148367	WITHOUT_CLASSIFICATION	4.6360785163292086E-5	DEFECT
// Now sort out the stereotype display. If the stereotype is displayed, // move the upper boundary of the name compartment up and set new // bounds for the name and the stereotype compartments and the // stereoLineBlinder that blanks out the line between the two	WITHOUT_CLASSIFICATION	0.9999999773602888	WITHOUT_CLASSIFICATION	2.2639711143874277E-8	DEFECT
// Advance currentY to where the start of the body box is, // remembering that it overlaps the next box by 1 pixel. Calculate the // size of the body box, and update the Y pointer past it if it is // displayed.	WITHOUT_CLASSIFICATION	0.9999999902135163	WITHOUT_CLASSIFICATION	9.786483626471205E-9	DEFECT
// -1 for 1 pixel overlap	WITHOUT_CLASSIFICATION	0.9999989443184928	WITHOUT_CLASSIFICATION	1.0556815072473066E-6	DEFECT
// set bounds of big box	WITHOUT_CLASSIFICATION	0.9999998028541238	WITHOUT_CLASSIFICATION	1.971458761886802E-7	DEFECT
/* The figPoly is located at the right edge of the nameFig.             * The nameFig size is such that it at least fits its text,             * and the figPoly next to the text.             * Making the package bigger, causes the figPoly to stick to             * the right edge.*/	WITHOUT_CLASSIFICATION	0.9999999603631697	WITHOUT_CLASSIFICATION	3.9636830206699185E-8	DEFECT
// Now force calculation of the bounds of the figure, update the edges // and trigger anyone who's listening to see if the "bounds" property // has changed.	WITHOUT_CLASSIFICATION	0.9999999997230181	WITHOUT_CLASSIFICATION	2.769819277177169E-10	DEFECT
/* Only show the menuitems if they make sense: */	WITHOUT_CLASSIFICATION	0.9933802856692797	WITHOUT_CLASSIFICATION	0.006619714330720276	DEFECT
/* save first */	WITHOUT_CLASSIFICATION	0.9999983695266237	WITHOUT_CLASSIFICATION	1.6304733763059577E-6	DEFECT
/*while*/	WITHOUT_CLASSIFICATION	0.9997100876290224	WITHOUT_CLASSIFICATION	2.899123709775969E-4	DEFECT
/* If we get here then we didn't get the	WITHOUT_CLASSIFICATION	0.9952892581627324	WITHOUT_CLASSIFICATION	0.0047107418372675436	DEFECT
/* Try to create a new class diagram.                     */	WITHOUT_CLASSIFICATION	0.9999976969676193	WITHOUT_CLASSIFICATION	2.3030323806955834E-6	DEFECT
/*if package */	WITHOUT_CLASSIFICATION	0.9999957749818745	WITHOUT_CLASSIFICATION	4.225018125447701E-6	DEFECT
/* if doubleclicks */	WITHOUT_CLASSIFICATION	0.9999395335606146	WITHOUT_CLASSIFICATION	6.046643938534054E-5	DEFECT
/* change prefix */	WITHOUT_CLASSIFICATION	0.9999580990992356	WITHOUT_CLASSIFICATION	4.190090076450346E-5	DEFECT
/*         * @see java.awt.event.ActionListener#actionPerformed(         *         java.awt.event.ActionEvent)         */	WITHOUT_CLASSIFICATION	0.9999999066328071	WITHOUT_CLASSIFICATION	9.336719285167458E-8	DEFECT
// add the listeners to the newOwner	WITHOUT_CLASSIFICATION	0.999999292065994	WITHOUT_CLASSIFICATION	7.07934006076151E-7	DEFECT
// and its features	WITHOUT_CLASSIFICATION	0.9999996079280332	WITHOUT_CLASSIFICATION	3.9207196679851165E-7	DEFECT
/* end class FigPackage */	WITHOUT_CLASSIFICATION	0.9999249188988316	WITHOUT_CLASSIFICATION	7.508110116835968E-5	DEFECT
// Readonly class: no generalization, no association to self	WITHOUT_CLASSIFICATION	0.9973216523734948	WITHOUT_CLASSIFICATION	0.002678347626505313	DEFECT
/* end class StylePanelFigPackage */	WITHOUT_CLASSIFICATION	0.9999390528085844	WITHOUT_CLASSIFICATION	6.0947191415527605E-5	DEFECT
// In the DeploymentDiagram there are no Generalizations	WITHOUT_CLASSIFICATION	0.9999944769348409	WITHOUT_CLASSIFICATION	5.5230651591255346E-6	DEFECT
// Self-association isn't draggable	WITHOUT_CLASSIFICATION	0.999995124605121	WITHOUT_CLASSIFICATION	4.875394879130874E-6	DEFECT
/* end class StylePanelFigInterface */	WITHOUT_CLASSIFICATION	0.9999498888739257	WITHOUT_CLASSIFICATION	5.011112607439657E-5	DEFECT
// No Generalizations on Deployment Diagram	WITHOUT_CLASSIFICATION	0.9999972540470257	WITHOUT_CLASSIFICATION	2.745952974301015E-6	DEFECT
// and its stereotypes	WITHOUT_CLASSIFICATION	0.999991109416406	WITHOUT_CLASSIFICATION	8.890583594049708E-6	DEFECT
//////////////////////////////////////////////////////////////// // event handling	WITHOUT_CLASSIFICATION	0.9999992496856168	WITHOUT_CLASSIFICATION	7.503143832143935E-7	DEFECT
//////////////////////////////////////////////////////////////// // event handling	WITHOUT_CLASSIFICATION	0.9999992496856168	WITHOUT_CLASSIFICATION	7.503143832143935E-7	DEFECT
// add Figs to the FigNode in back-to-front order	WITHOUT_CLASSIFICATION	0.9999995836685673	WITHOUT_CLASSIFICATION	4.163314326709753E-7	DEFECT
/* Set the drop location in the case of D&D: */	WITHOUT_CLASSIFICATION	0.9999898136465005	WITHOUT_CLASSIFICATION	1.0186353499536679E-5	DEFECT
/* Set the drop location in the case of D&D: */	WITHOUT_CLASSIFICATION	0.9999898136465005	WITHOUT_CLASSIFICATION	1.0186353499536679E-5	DEFECT
// add the listeners to the newOwner	WITHOUT_CLASSIFICATION	0.999999292065994	WITHOUT_CLASSIFICATION	7.07934006076151E-7	DEFECT
//make port invisible unless mouse enters	WITHOUT_CLASSIFICATION	0.9999996726198497	WITHOUT_CLASSIFICATION	3.273801503934516E-7	DEFECT
/* Stereotype covers NameFig: */	WITHOUT_CLASSIFICATION	0.9986315411378954	WITHOUT_CLASSIFICATION	0.0013684588621046324	DEFECT
/* Compartments from top to bottom: */	WITHOUT_CLASSIFICATION	0.9999711069800438	WITHOUT_CLASSIFICATION	2.889301995633594E-5	DEFECT
// Make all the parts match the main fig	WITHOUT_CLASSIFICATION	0.9999842643692382	WITHOUT_CLASSIFICATION	1.5735630761798286E-5	DEFECT
// Collect the set of model elements that we want to listen to	WITHOUT_CLASSIFICATION	0.9999998379305208	WITHOUT_CLASSIFICATION	1.620694791748433E-7	DEFECT
// and its features	WITHOUT_CLASSIFICATION	0.9999996079280332	WITHOUT_CLASSIFICATION	3.9207196679851165E-7	DEFECT
// and the stereotypes of its features	WITHOUT_CLASSIFICATION	0.9999989744641353	WITHOUT_CLASSIFICATION	1.0255358646640554E-6	DEFECT
// and the parameter of its operations	WITHOUT_CLASSIFICATION	0.9999992591988177	WITHOUT_CLASSIFICATION	7.4080118239615E-7	DEFECT
// Use super because not fully init'd	WITHOUT_CLASSIFICATION	0.9999990554181557	WITHOUT_CLASSIFICATION	9.445818442704308E-7	DEFECT
// and its enumerationLiterals	WITHOUT_CLASSIFICATION	0.9999986120106759	WITHOUT_CLASSIFICATION	1.3879893241619757E-6	DEFECT
// And now add listeners to them all:	WITHOUT_CLASSIFICATION	0.9999995574604303	WITHOUT_CLASSIFICATION	4.425395697072409E-7	DEFECT
// Put all the bits together, suppressing bounds calculations until // we're all done for efficiency.	WITHOUT_CLASSIFICATION	0.9999999343773089	WITHOUT_CLASSIFICATION	6.562269107597108E-8	DEFECT
/* The next line is needed so that we have the right dimension         * when drawing this Fig on the diagram by pressing down         * the mouse button, even before releasing the mouse button: */	WITHOUT_CLASSIFICATION	0.9999948122475213	WITHOUT_CLASSIFICATION	5.187752478605783E-6	DEFECT
// stereotype fig covers the name fig:	WITHOUT_CLASSIFICATION	0.9999892848680502	WITHOUT_CLASSIFICATION	1.0715131949794886E-5	DEFECT
// Set the bounds of the figure to the total of the above	WITHOUT_CLASSIFICATION	0.9999998869383608	WITHOUT_CLASSIFICATION	1.1306163918260713E-7	DEFECT
// If moved into an Package	WITHOUT_CLASSIFICATION	0.9999991976266062	WITHOUT_CLASSIFICATION	8.023733937815875E-7	DEFECT
// If default Namespace is not already set	WITHOUT_CLASSIFICATION	0.9999866685441824	WITHOUT_CLASSIFICATION	1.3331455817626E-5	DEFECT
// The next if-clause is important for the Deployment-diagram // it detects if the enclosing fig is a component, in this case // the container will be set for the owning Interface	WITHOUT_CLASSIFICATION	0.999999865579961	WITHOUT_CLASSIFICATION	1.3442003897762384E-7	DEFECT
/* Testing: Add a parameter to an operation on an Interface.                         * Does the Interface Fig adapt its width? */	WITHOUT_CLASSIFICATION	0.9998435077493907	WITHOUT_CLASSIFICATION	1.5649225060928524E-4	DEFECT
/* Set up the property panels for class diagrams: */	WITHOUT_CLASSIFICATION	0.9976202590996514	WITHOUT_CLASSIFICATION	0.0023797409003485925	DEFECT
// The figure that holds the text of the note.	WITHOUT_CLASSIFICATION	0.999999843428335	WITHOUT_CLASSIFICATION	1.565716649694831E-7	DEFECT
/* Do nothing by default. */	WITHOUT_CLASSIFICATION	0.9999919340977799	WITHOUT_CLASSIFICATION	8.06590222026835E-6	DEFECT
/*     * @see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994374054892	WITHOUT_CLASSIFICATION	5.625945107321554E-7	DEFECT
/*     * @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994577075367	WITHOUT_CLASSIFICATION	5.422924631974628E-7	DEFECT
/*     * @see java.awt.event.KeyListener#keyPressed(java.awt.event.KeyEvent)     */	WITHOUT_CLASSIFICATION	0.9999994261205447	WITHOUT_CLASSIFICATION	5.738794552686744E-7	DEFECT
//////////////////////////////////////////////////////////////// // constants	WITHOUT_CLASSIFICATION	0.9999985290529746	WITHOUT_CLASSIFICATION	1.4709470253565026E-6	DEFECT
// Update the listeners to match the desired set using the minimal // update facility	WITHOUT_CLASSIFICATION	0.9999999984308479	WITHOUT_CLASSIFICATION	1.5691520440659938E-9	DEFECT
// Get the size of the text field.	WITHOUT_CLASSIFICATION	0.9999994205266602	WITHOUT_CLASSIFICATION	5.794733397039492E-7	DEFECT
// Mark this as newly created. This is to get round the problem with // creating figs for loaded comments that had stereotypes. They are // saved with their dimensions INCLUDING the stereotype, but since we // pretend the stereotype is not visible, we add height the first time // we render such a comment. This is a complete fudge, and really we // ought to address how comment objects with stereotypes are saved. But // that will be hard work.	WITHOUT_CLASSIFICATION	0.5131988336285972	DEFECT	0.48680116637140297	WITHOUT_CLASSIFICATION
// update the relative sizes and positions of internel Figs	WITHOUT_CLASSIFICATION	0.9999995310710628	WITHOUT_CLASSIFICATION	4.6892893723839394E-7	DEFECT
// update any text, colors, fonts, etc.	WITHOUT_CLASSIFICATION	0.9999995281470883	WITHOUT_CLASSIFICATION	4.718529118257938E-7	DEFECT
//parse the text that was edited	WITHOUT_CLASSIFICATION	0.9999980525104614	WITHOUT_CLASSIFICATION	1.9474895386501558E-6	DEFECT
// Resize the text figure	WITHOUT_CLASSIFICATION	0.9999988514741991	WITHOUT_CLASSIFICATION	1.1485258009515495E-6	DEFECT
// resize the FigNode to accomodate the new text	WITHOUT_CLASSIFICATION	0.9999990330253037	WITHOUT_CLASSIFICATION	9.669746963083333E-7	DEFECT
// Not used, do nothing.	WITHOUT_CLASSIFICATION	0.999999822309545	WITHOUT_CLASSIFICATION	1.7769045505497681E-7	DEFECT
// Not used, do nothing.	WITHOUT_CLASSIFICATION	0.999999822309545	WITHOUT_CLASSIFICATION	1.7769045505497681E-7	DEFECT
// Resize the big port around the figure	WITHOUT_CLASSIFICATION	0.9999991551424927	WITHOUT_CLASSIFICATION	8.448575074210288E-7	DEFECT
// The text element has no border, so the line color doesn't matter.	WITHOUT_CLASSIFICATION	0.9999975566301063	WITHOUT_CLASSIFICATION	2.443369893800462E-6	DEFECT
// The text is always opaque.	WITHOUT_CLASSIFICATION	0.9999947873352358	WITHOUT_CLASSIFICATION	5.2126647642050325E-6	DEFECT
/*? 2*LINE_WIDTH? */	WITHOUT_CLASSIFICATION	0.9999550645083899	WITHOUT_CLASSIFICATION	4.4935491610062205E-5	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)     */	WITHOUT_CLASSIFICATION	0.9999999892981944	WITHOUT_CLASSIFICATION	1.0701805498007897E-8	DEFECT
/*     * @see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor(     *         org.tigris.gef.graph.GraphModel,     *         org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)     */	WITHOUT_CLASSIFICATION	0.9999997151779434	WITHOUT_CLASSIFICATION	2.8482205651003223E-7	DEFECT
/*     * @see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)     */	WITHOUT_CLASSIFICATION	0.9999998903089655	WITHOUT_CLASSIFICATION	1.0969103444235637E-7	DEFECT
/*     * @see org.tigris.gef.presentation.FigEdge#setFig(org.tigris.gef.presentation.Fig)     */	WITHOUT_CLASSIFICATION	0.9999998880153327	WITHOUT_CLASSIFICATION	1.1198466739329893E-7	DEFECT
//_x = x; _y = y; _w = w; _h = h;	WITHOUT_CLASSIFICATION	0.9999586164578153	WITHOUT_CLASSIFICATION	4.138354218468641E-5	DEFECT
// Make a seamless integration of the text // in the note figure.	WITHOUT_CLASSIFICATION	0.9999999800945192	WITHOUT_CLASSIFICATION	1.9905480851034042E-8	DEFECT
//////////////////////////////////////////////////////////////// // user interaction methods	WITHOUT_CLASSIFICATION	0.9999997757599649	WITHOUT_CLASSIFICATION	2.2424003510018861E-7	DEFECT
//////////////////////////////////////////////////////////////// // accessor methods	WITHOUT_CLASSIFICATION	0.9999986620544274	WITHOUT_CLASSIFICATION	1.3379455725953018E-6	DEFECT
// If we have a stereotype displayed, then allow some space for that // (width and height)	WITHOUT_CLASSIFICATION	0.9999885839390107	WITHOUT_CLASSIFICATION	1.1416060989429856E-5	DEFECT
// And add the gaps around the textfield to get the minimum // size of the note.	WITHOUT_CLASSIFICATION	0.9999999499765019	WITHOUT_CLASSIFICATION	5.0023498034698146E-8	DEFECT
// Since this is a complex polygon, there's no easy way to resize it.	WITHOUT_CLASSIFICATION	0.9999756628698804	WITHOUT_CLASSIFICATION	2.4337130119639216E-5	DEFECT
// Just move the corner to it's new position.	WITHOUT_CLASSIFICATION	0.9999797924205095	WITHOUT_CLASSIFICATION	2.0207579490488176E-5	DEFECT
/////////////////////////////////////////////////////////////////// // Internal methods	WITHOUT_CLASSIFICATION	0.9999994148975755	WITHOUT_CLASSIFICATION	5.851024245869772E-7	DEFECT
/* Remove the commentedge.             * If there are more then one comment-edges between             * the 2 objects, then delete them all. */	WITHOUT_CLASSIFICATION	0.9999984373339517	WITHOUT_CLASSIFICATION	1.5626660483488261E-6	DEFECT
// all connected edges	WITHOUT_CLASSIFICATION	0.9999992743084257	WITHOUT_CLASSIFICATION	7.256915743508725E-7	DEFECT
// Only adjust the stereotype height if we are not newly // created. This gets round the problem of loading classes with // stereotypes defined, which have the height already including // the stereotype.	WITHOUT_CLASSIFICATION	0.9999997883141784	WITHOUT_CLASSIFICATION	2.1168582170489803E-7	DEFECT
// Whatever happened we are no longer newly created, so clear the // flag. Then set the bounds for the rectangle we have defined.	WITHOUT_CLASSIFICATION	0.9999999996790343	WITHOUT_CLASSIFICATION	3.209657273819019E-10	DEFECT
/* end class StylePanelFigClass */	WITHOUT_CLASSIFICATION	0.9998846339377132	WITHOUT_CLASSIFICATION	1.1536606228676218E-4	DEFECT
// TODO: get tip string from comment	WITHOUT_CLASSIFICATION	0.9489316388477331	WITHOUT_CLASSIFICATION	0.05106836115226683	DEFECT
/* This one is still usable, so let's retain it, */	WITHOUT_CLASSIFICATION	0.9999936210919221	WITHOUT_CLASSIFICATION	6.37890807795541E-6	DEFECT
// the last one needs extra space below it	WITHOUT_CLASSIFICATION	0.9999996792325635	WITHOUT_CLASSIFICATION	3.2076743646552925E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#removeFromDiagram()     */	WITHOUT_CLASSIFICATION	0.9999997970000318	WITHOUT_CLASSIFICATION	2.0299996811709505E-7	DEFECT
/*     * @see org.tigris.gef.presentation.FigEdge#setDestFigNode(org.tigris.gef.presentation.FigNode)     */	WITHOUT_CLASSIFICATION	0.9999999126444952	WITHOUT_CLASSIFICATION	8.735550475307279E-8	DEFECT
/*     * @see org.tigris.gef.presentation.FigEdge#setSourceFigNode(org.tigris.gef.presentation.FigNode)     */	WITHOUT_CLASSIFICATION	0.9999999750297339	WITHOUT_CLASSIFICATION	2.497026605556141E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFilled(boolean)     */	WITHOUT_CLASSIFICATION	0.9999999938877093	WITHOUT_CLASSIFICATION	6.112290659976866E-9	DEFECT
// Although not generally true for GEF, for Argo we know that the layer // is a LayerPerspective which knows the associated diagram	WITHOUT_CLASSIFICATION	0.9952751636767379	WITHOUT_CLASSIFICATION	0.004724836323262116	DEFECT
// Although not generally true for GEF, for Argo we know that the layer // is a LayerPerspective which knows the associated diagram	WITHOUT_CLASSIFICATION	0.9952751636767379	WITHOUT_CLASSIFICATION	0.004724836323262116	DEFECT
//////////////////////////////////////////////////////////////// // accessors	WITHOUT_CLASSIFICATION	0.99999900930865	WITHOUT_CLASSIFICATION	9.906913499891305E-7	DEFECT
//////////////////////////////////////////////////////////////// // event handling	WITHOUT_CLASSIFICATION	0.9999992496856168	WITHOUT_CLASSIFICATION	7.503143832143935E-7	DEFECT
/* Set the drop location in the case of D&D: */	WITHOUT_CLASSIFICATION	0.9999898136465005	WITHOUT_CLASSIFICATION	1.0186353499536679E-5	DEFECT
//////////////////////////////////////////////////////////////// // contructors	WITHOUT_CLASSIFICATION	0.9999996548624205	WITHOUT_CLASSIFICATION	3.451375794757301E-7	DEFECT
// Modifiers ...	WITHOUT_CLASSIFICATION	0.9999959023982763	WITHOUT_CLASSIFICATION	4.097601723717121E-6	DEFECT
/* The next line is needed so that we have the right dimension          * when drawing this Fig on the diagram by pressing down          * the mouse button, even before releasing the mouse button: */	WITHOUT_CLASSIFICATION	0.9999948122475213	WITHOUT_CLASSIFICATION	5.187752478605783E-6	DEFECT
// Make all the parts match the main fig	WITHOUT_CLASSIFICATION	0.9999842643692382	WITHOUT_CLASSIFICATION	1.5735630761798286E-5	DEFECT
// Visibility ...	WITHOUT_CLASSIFICATION	0.9999856686973897	WITHOUT_CLASSIFICATION	1.4331302610279254E-5	DEFECT
// stereotype fig covers the name fig:	WITHOUT_CLASSIFICATION	0.9999892848680502	WITHOUT_CLASSIFICATION	1.0715131949794886E-5	DEFECT
// element will normally be null when called from PGML parser // It will get it's source & destination set later in attachEdges	WITHOUT_CLASSIFICATION	0.9999998243659155	WITHOUT_CLASSIFICATION	1.7563408455085492E-7	DEFECT
// Unfortunately the Fig and it's associated CommentEdge will not be // fully initialized yet here if we're being loaded from a PGML file. // The remainder of the initialization will happen when // set{Dest|Source}FigNode are called from PGMLStackParser.attachEdges()	WITHOUT_CLASSIFICATION	0.9999986563665786	WITHOUT_CLASSIFICATION	1.3436334214819348E-6	DEFECT
// unimplemented	WITHOUT_CLASSIFICATION	0.9999910724302435	WITHOUT_CLASSIFICATION	8.927569756446662E-6	DEFECT
/* Alternatively, we could just return null here,          * so that you can not create a comment just          * linked to a comment this way - which is a bit uncommon,         * but not illegal, so for consistency, we better allow it.          */	WITHOUT_CLASSIFICATION	0.9999637013901229	WITHOUT_CLASSIFICATION	3.6298609877079594E-5	DEFECT
//        return null;	WITHOUT_CLASSIFICATION	0.9999973923957196	WITHOUT_CLASSIFICATION	2.6076042804733293E-6	DEFECT
/** * Class to display a Stereotype declaration figure using * Classifier box notation.<p> * * TODO: This is just a place-holder right now! - tfm * This needs to show tags and constraints. */	WITHOUT_CLASSIFICATION	0.8743426617262988	WITHOUT_CLASSIFICATION	0.12565733827370118	DEFECT
// Add...	WITHOUT_CLASSIFICATION	0.999984269986629	WITHOUT_CLASSIFICATION	1.5730013370983926E-5	DEFECT
// Show ...	WITHOUT_CLASSIFICATION	0.9999437086180686	WITHOUT_CLASSIFICATION	5.6291381931480176E-5	DEFECT
// register for tagDefinitions:	WITHOUT_CLASSIFICATION	0.999999890093464	WITHOUT_CLASSIFICATION	1.0990653588537061E-7	DEFECT
/* TODO: constraints, ... */	WITHOUT_CLASSIFICATION	0.6397712172178547	WITHOUT_CLASSIFICATION	0.3602287827821454	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see javax.swing.AbstractAction#isEnabled()     */	WITHOUT_CLASSIFICATION	0.9999999575641382	WITHOUT_CLASSIFICATION	4.243586178080481E-8	DEFECT
/* Set the drop location in the case of D&D: */	WITHOUT_CLASSIFICATION	0.9999898136465005	WITHOUT_CLASSIFICATION	1.0186353499536679E-5	DEFECT
// Make all the parts match the main fig	WITHOUT_CLASSIFICATION	0.9999842643692382	WITHOUT_CLASSIFICATION	1.5735630761798286E-5	DEFECT
// Put all the bits together, suppressing bounds calculations until // we're all done for efficiency.	WITHOUT_CLASSIFICATION	0.9999999343773089	WITHOUT_CLASSIFICATION	6.562269107597108E-8	DEFECT
/* The next line is needed so that we have the right dimension         * when drawing this Fig on the diagram by pressing down         * the mouse button, even before releasing the mouse button: */	WITHOUT_CLASSIFICATION	0.9999948122475213	WITHOUT_CLASSIFICATION	5.187752478605783E-6	DEFECT
// TODO: Need named Tags and Constraints compartments here //        addFig(tagsFig); //        addFig(constraintsFig);	WITHOUT_CLASSIFICATION	0.8954091602323688	WITHOUT_CLASSIFICATION	0.10459083976763116	DEFECT
// If moved into an Package	WITHOUT_CLASSIFICATION	0.9999991976266062	WITHOUT_CLASSIFICATION	8.023733937815875E-7	DEFECT
// If default Namespace is not already set	WITHOUT_CLASSIFICATION	0.9999866685441824	WITHOUT_CLASSIFICATION	1.3331455817626E-5	DEFECT
// When this is called from PGMLStackParser.attachEdges, we finished // the initialization of owning pseudo element (CommentEdge)	WITHOUT_CLASSIFICATION	0.9999875473504647	WITHOUT_CLASSIFICATION	1.245264953535229E-5	DEFECT
/*     * If the Operation/Reception is abstract,      * then the text will be set to italics.     */	WITHOUT_CLASSIFICATION	0.9999998205234204	WITHOUT_CLASSIFICATION	1.7947657965691176E-7	DEFECT
// avoid GEF calcDrawingArea bug when nothing in a diagram.	WITHOUT_CLASSIFICATION	0.9868779032048125	WITHOUT_CLASSIFICATION	0.013122096795187563	DEFECT
// TODO: Add Tags & Constraints //        addMenu.add(TargetManager.getInstance().getAddAttributeAction()); //        addMenu.add(TargetManager.getInstance().getAddOperationAction());	WITHOUT_CLASSIFICATION	0.9985271840168278	WITHOUT_CLASSIFICATION	0.0014728159831721597	DEFECT
// avoid GEF calcDrawingArea bug when nothing in a diagram.	WITHOUT_CLASSIFICATION	0.9868779032048125	WITHOUT_CLASSIFICATION	0.013122096795187563	DEFECT
// No generalizations in Deployment Diagrams	WITHOUT_CLASSIFICATION	0.9999915242402445	WITHOUT_CLASSIFICATION	8.475759755476115E-6	DEFECT
// the diagram image data	WITHOUT_CLASSIFICATION	0.9999989722601549	WITHOUT_CLASSIFICATION	1.0277398451470885E-6	DEFECT
// copy the gif image to the clipboard	WITHOUT_CLASSIFICATION	0.999999957898631	WITHOUT_CLASSIFICATION	4.2101368922330655E-8	DEFECT
// the diagram image data	WITHOUT_CLASSIFICATION	0.9999989722601549	WITHOUT_CLASSIFICATION	1.0277398451470885E-6	DEFECT
// hide grid, otherwise can't see anything	WITHOUT_CLASSIFICATION	0.9999648688298644	WITHOUT_CLASSIFICATION	3.513117013563481E-5	DEFECT
//        bigPort.setFilled(f);	WITHOUT_CLASSIFICATION	0.9999995675876917	WITHOUT_CLASSIFICATION	4.3241230832464915E-7	DEFECT
// background color.	WITHOUT_CLASSIFICATION	0.9999995058069081	WITHOUT_CLASSIFICATION	4.941930919773302E-7	DEFECT
// 2 Pixel padding after compartment	WITHOUT_CLASSIFICATION	0.9999966389069902	WITHOUT_CLASSIFICATION	3.361093009652114E-6	DEFECT
// Set up hide all / show all	WITHOUT_CLASSIFICATION	0.9999962996900917	WITHOUT_CLASSIFICATION	3.7003099082718268E-6	DEFECT
// Perform the action	WITHOUT_CLASSIFICATION	0.9999931263815647	WITHOUT_CLASSIFICATION	6.873618435408314E-6	DEFECT
// Only the bigPort may be filled	WITHOUT_CLASSIFICATION	0.9999991138185537	WITHOUT_CLASSIFICATION	8.86181446226066E-7	DEFECT
/*?LINE_WIDTH?*/	WITHOUT_CLASSIFICATION	0.9997720401105618	WITHOUT_CLASSIFICATION	2.2795988943822258E-4	DEFECT
//see parent	WITHOUT_CLASSIFICATION	0.9999974113138143	WITHOUT_CLASSIFICATION	2.5886861857030167E-6	DEFECT
/*?LINE_WIDTH?*/	WITHOUT_CLASSIFICATION	0.9997720401105618	WITHOUT_CLASSIFICATION	2.2795988943822258E-4	DEFECT
// We remove all of them:	WITHOUT_CLASSIFICATION	0.9999985908185115	WITHOUT_CLASSIFICATION	1.409181488535646E-6	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see org.tigris.gef.undo.UndoableAction#isEnabled()     */	WITHOUT_CLASSIFICATION	0.9999999604868992	WITHOUT_CLASSIFICATION	3.951310075401476E-8	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
/*?LINE_WIDTH?*/	WITHOUT_CLASSIFICATION	0.9997720401105618	WITHOUT_CLASSIFICATION	2.2795988943822258E-4	DEFECT
// If we don't have a fig for this UML object, we'll need to add // one. We set the bounds, but they will be reset later.	WITHOUT_CLASSIFICATION	0.9994992023723794	WITHOUT_CLASSIFICATION	5.007976276205857E-4	DEFECT
/* but its position may have been changed: */	WITHOUT_CLASSIFICATION	0.9993656572567297	WITHOUT_CLASSIFICATION	6.343427432703448E-4	DEFECT
// bounds not relevant here, but I am perfectionist...	WITHOUT_CLASSIFICATION	0.9976427930193679	WITHOUT_CLASSIFICATION	0.0023572069806321884	DEFECT
/* We need to set a new notationprovider, since                 * the Notation language may have been changed:  */	WITHOUT_CLASSIFICATION	0.9999933812115871	WITHOUT_CLASSIFICATION	6.618788412958844E-6	DEFECT
// add it again (but now in the right sequence)	WITHOUT_CLASSIFICATION	0.9999985716066132	WITHOUT_CLASSIFICATION	1.4283933868597049E-6	DEFECT
// Now put the text in // We must handle the case where the text is null	WITHOUT_CLASSIFICATION	0.9999992499711393	WITHOUT_CLASSIFICATION	7.500288606759119E-7	DEFECT
// No longer abstract to allow subclasses to remove, so we provide a // null default implementation	WITHOUT_CLASSIFICATION	0.9999999784489968	WITHOUT_CLASSIFICATION	2.1551003162609686E-8	DEFECT
// If this is not overridden it will revert to the old behavior // All internal subclasses have been updated, but this if for // compatibility of non-ArgoUML extensions.	WITHOUT_CLASSIFICATION	0.9999998298894606	WITHOUT_CLASSIFICATION	1.7011053940789862E-7	DEFECT
/* Find the compartment fig for this umlObject: */	WITHOUT_CLASSIFICATION	0.9998101924758723	WITHOUT_CLASSIFICATION	1.8980752412756566E-4	DEFECT
// Override superclass to do nothing. // Fill property cannot be changed.	WITHOUT_CLASSIFICATION	0.9999910985552158	WITHOUT_CLASSIFICATION	8.90144478419554E-6	DEFECT
// Override superclass to do nothing. // Line width cannot be changed.	WITHOUT_CLASSIFICATION	0.9999990118802872	WITHOUT_CLASSIFICATION	9.881197128024238E-7	DEFECT
// Override superclass to do nothing. // Line width property cannot be changed.	WITHOUT_CLASSIFICATION	0.9999938204812969	WITHOUT_CLASSIFICATION	6.179518702994027E-6	DEFECT
// aggregation	WITHOUT_CLASSIFICATION	0.9999992591847593	WITHOUT_CLASSIFICATION	7.408152405948548E-7	DEFECT
/* end class ActionSrcMultOneToMany */	WITHOUT_CLASSIFICATION	0.9999535000857851	WITHOUT_CLASSIFICATION	4.649991421485936E-5	DEFECT
// TODO: set font?	WITHOUT_CLASSIFICATION	0.8608775502604111	WITHOUT_CLASSIFICATION	0.1391224497395888	DEFECT
// to circumvent too many registered listeners	WITHOUT_CLASSIFICATION	0.9999999655870381	WITHOUT_CLASSIFICATION	3.441296188145092E-8	DEFECT
//////////////////////////////////////////////////////////////// // static variables	WITHOUT_CLASSIFICATION	0.9999998818060729	WITHOUT_CLASSIFICATION	1.1819392707333433E-7	DEFECT
//////////////////////////////////////////////////////////////// // constructors	WITHOUT_CLASSIFICATION	0.9999996493752797	WITHOUT_CLASSIFICATION	3.5062472022456624E-7	DEFECT
/*     * @see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999994446406183	WITHOUT_CLASSIFICATION	5.553593817324716E-7	DEFECT
/*     * @see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999997746694292	WITHOUT_CLASSIFICATION	2.2533057064832407E-7	DEFECT
/*     * @see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999999678751464	WITHOUT_CLASSIFICATION	3.2124853621143575E-8	DEFECT
/*     * @see java.beans.PropertyChangeListener#propertyChange(PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994325992789	WITHOUT_CLASSIFICATION	5.674007211447814E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#hit(java.awt.Rectangle)     */	WITHOUT_CLASSIFICATION	0.9999998792807766	WITHOUT_CLASSIFICATION	1.207192233078285E-7	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Calling connect() will add the edge to the GraphModel and // any LayerPersectives on that GraphModel will get a // edgeAdded event and will add an appropriate FigEdge // (determined by the GraphEdgeRenderer).	WITHOUT_CLASSIFICATION	0.9999970819699707	WITHOUT_CLASSIFICATION	2.9180300292009923E-6	DEFECT
// ending editing	WITHOUT_CLASSIFICATION	0.9999821580509956	WITHOUT_CLASSIFICATION	1.7841949004481814E-5	DEFECT
// USED BY PGML.tee	WITHOUT_CLASSIFICATION	0.9999940602672659	WITHOUT_CLASSIFICATION	5.9397327341458426E-6	DEFECT
// Actually return the FigEdge that the FigEdgePort is part of.	WITHOUT_CLASSIFICATION	0.9999993929347729	WITHOUT_CLASSIFICATION	6.070652271540059E-7	DEFECT
//            throw new IllegalArgumentException();	WITHOUT_CLASSIFICATION	0.9999996199969627	WITHOUT_CLASSIFICATION	3.8000303723801093E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999959030536316	WITHOUT_CLASSIFICATION	4.096946368362294E-6	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999994446406183	WITHOUT_CLASSIFICATION	5.553593817324716E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999996210616915	WITHOUT_CLASSIFICATION	3.7893830849916885E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999996210616915	WITHOUT_CLASSIFICATION	3.7893830849916885E-6	DEFECT
//////////////////////////////////////////////////////////////// // event handling	WITHOUT_CLASSIFICATION	0.9999992496856168	WITHOUT_CLASSIFICATION	7.503143832143935E-7	DEFECT
//////////////////////////////////////////////////////////////// // main methods	WITHOUT_CLASSIFICATION	0.9999979898465433	WITHOUT_CLASSIFICATION	2.01015345670554E-6	DEFECT
// If the user selects an Action that is already selected in sticky // mode (double clicked) then we turn off sticky mode and make sure // no action is selected.	WITHOUT_CLASSIFICATION	0.9999999907991275	WITHOUT_CLASSIFICATION	9.200872532810516E-9	DEFECT
/*Here the actions to divide a region*/	WITHOUT_CLASSIFICATION	0.9999909402834949	WITHOUT_CLASSIFICATION	9.059716505090467E-6	DEFECT
/* The 1st region has an invisible divider line                 * (the box is always invisible): */	WITHOUT_CLASSIFICATION	0.9982980600981722	WITHOUT_CLASSIFICATION	0.0017019399018277767	DEFECT
/* Throw out any previous elements that were                 * enclosed but are not a concurrent region;                 * let's move them onto the first region: */	WITHOUT_CLASSIFICATION	0.9998228377350992	WITHOUT_CLASSIFICATION	1.7716226490090684E-4	DEFECT
//linewidth?	WITHOUT_CLASSIFICATION	0.9999478878198216	WITHOUT_CLASSIFICATION	5.211218017849928E-5	DEFECT
/* The divider line should be visible, so no need to change its color. */	WITHOUT_CLASSIFICATION	0.9999993376011559	WITHOUT_CLASSIFICATION	6.623988440554648E-7	DEFECT
/* Make the composite state 1 region higher: */	WITHOUT_CLASSIFICATION	0.9997759133416689	WITHOUT_CLASSIFICATION	2.2408665833100012E-4	DEFECT
/* TODO: Verify this.             * IIUC, then this triggers the CompountStateFig             * to draw itself correctly.             * Hence, there was a reason to wait this long             * to make the state concurrent. */	WITHOUT_CLASSIFICATION	0.8452181406390402	WITHOUT_CLASSIFICATION	0.1547818593609597	DEFECT
// Look for the dashed edge	WITHOUT_CLASSIFICATION	0.9999998214984429	WITHOUT_CLASSIFICATION	1.7850155706062048E-7	DEFECT
// We have the dashed edge now find the opposite FigNode	WITHOUT_CLASSIFICATION	0.9999999717454572	WITHOUT_CLASSIFICATION	2.8254542814180622E-8	DEFECT
/* Prevent triggering too many events by setName(). */	WITHOUT_CLASSIFICATION	0.9999959586657989	WITHOUT_CLASSIFICATION	4.041334201079216E-6	DEFECT
// not???	WITHOUT_CLASSIFICATION	0.9996761951216492	WITHOUT_CLASSIFICATION	3.238048783507944E-4	DEFECT
// Do nothing    	WITHOUT_CLASSIFICATION	0.9999952588272247	WITHOUT_CLASSIFICATION	4.741172775361909E-6	DEFECT
// Do nothing        	WITHOUT_CLASSIFICATION	0.9999911201207067	WITHOUT_CLASSIFICATION	8.879879293358749E-6	DEFECT
// Consume to stop other modes from trying to take over	WITHOUT_CLASSIFICATION	0.9999999399227932	WITHOUT_CLASSIFICATION	6.00772068138422E-8	DEFECT
// marker interface only	WITHOUT_CLASSIFICATION	0.9999991001793698	WITHOUT_CLASSIFICATION	8.998206303446929E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#removeFromDiagram()     */	WITHOUT_CLASSIFICATION	0.9999997970000318	WITHOUT_CLASSIFICATION	2.0299996811709505E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)     */	WITHOUT_CLASSIFICATION	0.9999999384135748	WITHOUT_CLASSIFICATION	6.158642516569318E-8	DEFECT
// Only reset the text if the two are not the same (i.e the fig // has // moved, rather than we've just edited the text, when // setTargetBBox() // will have made them the same). Note that styleBounds could // be null, // so we do the test this way round.	WITHOUT_CLASSIFICATION	0.9998657839457656	WITHOUT_CLASSIFICATION	1.342160542343083E-4	DEFECT
// Can't do anything if we don't have a fig.	WITHOUT_CLASSIFICATION	0.9998246554674204	WITHOUT_CLASSIFICATION	1.7534453257969746E-4	DEFECT
// 2 Pixel padding after compartment	WITHOUT_CLASSIFICATION	0.9999966389069902	WITHOUT_CLASSIFICATION	3.361093009652114E-6	DEFECT
// or vice versa?	WITHOUT_CLASSIFICATION	0.9999903444150846	WITHOUT_CLASSIFICATION	9.655584915310875E-6	DEFECT
// Provide feedback to the user that their name was // not accepted	WITHOUT_CLASSIFICATION	0.9999995386779069	WITHOUT_CLASSIFICATION	4.613220931018483E-7	DEFECT
// Subtract the the offset of the click, to take account of user // having not initially clicked in the centre.	WITHOUT_CLASSIFICATION	0.9999999924305402	WITHOUT_CLASSIFICATION	7.56945973098006E-9	DEFECT
// super returns -1 if any of GEFs buttons was hit // (but maybe one of the not-GEF-buttons)	WITHOUT_CLASSIFICATION	0.9999998844586154	WITHOUT_CLASSIFICATION	1.1554138447897627E-7	DEFECT
/* Do not show border line, make transparent: */	WITHOUT_CLASSIFICATION	0.9955966298525589	WITHOUT_CLASSIFICATION	0.0044033701474410405	DEFECT
//cleanup of unused FigText's	WITHOUT_CLASSIFICATION	0.9999999120454173	WITHOUT_CLASSIFICATION	8.795458271773156E-8	DEFECT
// TODO: This doesn't do anything special with keywords. // They should probably go first.	WITHOUT_CLASSIFICATION	0.8583769603042306	DEFECT	0.14162303969576936	WITHOUT_CLASSIFICATION
//There is one fig more in the group than (stereotypes + keyword):	WITHOUT_CLASSIFICATION	0.9999967579916652	WITHOUT_CLASSIFICATION	3.242008334780993E-6	DEFECT
// The keyword fig already exists.	WITHOUT_CLASSIFICATION	0.9999961155123995	WITHOUT_CLASSIFICATION	3.884487600421077E-6	DEFECT
/* This will contain the Figs that we do not need anymore: */	WITHOUT_CLASSIFICATION	0.9991215414490394	WITHOUT_CLASSIFICATION	8.784585509606016E-4	DEFECT
// bounds not relevant here	WITHOUT_CLASSIFICATION	0.9999961561380815	WITHOUT_CLASSIFICATION	3.843861918603586E-6	DEFECT
// bounds not relevant here	WITHOUT_CLASSIFICATION	0.9999961561380815	WITHOUT_CLASSIFICATION	3.843861918603586E-6	DEFECT
// The stereotype fig already exists.	WITHOUT_CLASSIFICATION	0.9999966098860953	WITHOUT_CLASSIFICATION	3.390113904557209E-6	DEFECT
// The boundary box as held in the target fig, and as listed // in the boundary box style field (null if we don't have  // anything valid)	WITHOUT_CLASSIFICATION	0.9999875682162002	WITHOUT_CLASSIFICATION	1.2431783799846716E-5	DEFECT
// remove all stereotypes that have a graphical icon	WITHOUT_CLASSIFICATION	0.9999502955068457	WITHOUT_CLASSIFICATION	4.970449315426721E-5	DEFECT
//TODO: check!	WITHOUT_CLASSIFICATION	0.9918329249216518	WITHOUT_CLASSIFICATION	0.008167075078348256	DEFECT
//set new bounds for all included figs	WITHOUT_CLASSIFICATION	0.9999995913788216	WITHOUT_CLASSIFICATION	4.0862117839717544E-7	DEFECT
// StylePanelFigClass relies on getPanelTarget() to return a  // FigCompartmentBox	WITHOUT_CLASSIFICATION	0.999999715631668	WITHOUT_CLASSIFICATION	2.843683320430619E-7	DEFECT
// Get class box, because we will set it's bounding box	WITHOUT_CLASSIFICATION	0.9999995343218671	WITHOUT_CLASSIFICATION	4.656781330104831E-7	DEFECT
// Get class box, because we will set it's bounding box in text field	WITHOUT_CLASSIFICATION	0.9999979564510469	WITHOUT_CLASSIFICATION	2.043548953061424E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Calling connect() will add the edge to the GraphModel and // any LayerPersectives on that GraphModel will get a // edgeAdded event and will add an appropriate FigEdge // (determined by the GraphEdgeRenderer).	WITHOUT_CLASSIFICATION	0.9999970819699707	WITHOUT_CLASSIFICATION	2.9180300292009923E-6	DEFECT
// The keyword fig does not exist yet. // Let's create one:	WITHOUT_CLASSIFICATION	0.9999859605665763	WITHOUT_CLASSIFICATION	1.4039433423823017E-5	DEFECT
// keywords which look like a stereotype (e.g. <<interface>>) have // no owner	WITHOUT_CLASSIFICATION	0.9999999418895397	WITHOUT_CLASSIFICATION	5.811046048340189E-8	DEFECT
// if there are no stereotypes, we return (0,0), preventing // double lines in the class (see issue 4939)	WITHOUT_CLASSIFICATION	0.9999990358423249	WITHOUT_CLASSIFICATION	9.64157675122542E-7	DEFECT
/* end class StylePanelFigAssociationClass */	WITHOUT_CLASSIFICATION	0.9997702208896455	WITHOUT_CLASSIFICATION	2.2977911035463398E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Constructors // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999445442351	WITHOUT_CLASSIFICATION	5.545576494677333E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Main methods // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999982665039097	WITHOUT_CLASSIFICATION	1.7334960903416658E-6	DEFECT
// Create the singleton if it does not exist, and then return it	WITHOUT_CLASSIFICATION	0.9999998960425271	WITHOUT_CLASSIFICATION	1.0395747278177831E-7	DEFECT
// When a new target is selected, we have to check if it 's a use case. //Then, the icone "add extension point" have to become enabled.	WITHOUT_CLASSIFICATION	0.9999999956480925	WITHOUT_CLASSIFICATION	4.35190751156002E-9	DEFECT
// Find the target in the project browser. We can only do anything if // its a use case.	WITHOUT_CLASSIFICATION	0.9999998157246075	WITHOUT_CLASSIFICATION	1.8427539245846483E-7	DEFECT
// Create a new extension point and make it the browser target. Then // invoke the superclass action method.	WITHOUT_CLASSIFICATION	0.9999993965845249	WITHOUT_CLASSIFICATION	6.034154751333018E-7	DEFECT
/* end class ActionAddExtensionPoint */	WITHOUT_CLASSIFICATION	0.9999942498919648	WITHOUT_CLASSIFICATION	5.750108035123438E-6	DEFECT
// We have already confirmed the connection is valid	WITHOUT_CLASSIFICATION	0.9999967859780721	WITHOUT_CLASSIFICATION	3.2140219278195887E-6	DEFECT
// Detach any edges (such as comment edges) already attached // to the FigAssociation before the FigAssociation is removed. // They'll later be re-attached to the new FigNodeAssociation	WITHOUT_CLASSIFICATION	0.9999989116155807	WITHOUT_CLASSIFICATION	1.0883844193263454E-6	DEFECT
// If there are bits of an association class then // remember their location and path.	WITHOUT_CLASSIFICATION	0.9999464620985704	WITHOUT_CLASSIFICATION	5.353790142956129E-5	DEFECT
// Create the new FigNodeAssociation and locate it.	WITHOUT_CLASSIFICATION	0.9999980787092023	WITHOUT_CLASSIFICATION	1.9212907976690054E-6	DEFECT
// Add the association ends to the graph model	WITHOUT_CLASSIFICATION	0.9999993374078724	WITHOUT_CLASSIFICATION	6.62592127575031E-7	DEFECT
// Add the edges (such as comment edges) that were on the old // FigAssociation to our new FigNodeAssociation and make sure they are // positioned correctly.	WITHOUT_CLASSIFICATION	0.9999142081248072	WITHOUT_CLASSIFICATION	8.579187519277179E-5	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.dnd.DropTargetListener#dragEnter(     *         java.awt.dnd.DropTargetDragEvent)     */	WITHOUT_CLASSIFICATION	0.9999998055647886	WITHOUT_CLASSIFICATION	1.9443521126080635E-7	DEFECT
/*     * @see java.awt.dnd.DropTargetListener#dragOver(     *         java.awt.dnd.DropTargetDragEvent)     */	WITHOUT_CLASSIFICATION	0.9999997761789454	WITHOUT_CLASSIFICATION	2.2382105446580532E-7	DEFECT
/*     * @see java.awt.dnd.DropTargetListener#dropActionChanged(     *         java.awt.dnd.DropTargetDragEvent)     */	WITHOUT_CLASSIFICATION	0.9999999410785504	WITHOUT_CLASSIFICATION	5.892144971434387E-8	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
//get the model elements that are being transfered.	WITHOUT_CLASSIFICATION	0.9999966867074345	WITHOUT_CLASSIFICATION	3.3132925655897714E-6	DEFECT
// multiplicity	WITHOUT_CLASSIFICATION	0.999998263186012	WITHOUT_CLASSIFICATION	1.7368139880395702E-6	DEFECT
/* end class ModeCreateAssociation */	WITHOUT_CLASSIFICATION	0.9998719846644998	WITHOUT_CLASSIFICATION	1.2801533550028875E-4	DEFECT
/*&& ((UMLDiagram) dia).doesAccept(dtde.getSource())*/	WITHOUT_CLASSIFICATION	0.9999965061867253	WITHOUT_CLASSIFICATION	3.4938132747655416E-6	DEFECT
/*     * Create a new FigText instance based on the given mouse down     * event and the state of the parent Editor.      */	WITHOUT_CLASSIFICATION	0.9999999975464694	WITHOUT_CLASSIFICATION	2.4535306325806666E-9	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999748478784519	WITHOUT_CLASSIFICATION	2.5152121548066763E-5	DEFECT
/* end class SPFigEdgeModelElement */	WITHOUT_CLASSIFICATION	0.9999487393747327	WITHOUT_CLASSIFICATION	5.126062526724976E-5	DEFECT
//    	WITHOUT_CLASSIFICATION	0.999981629397	WITHOUT_CLASSIFICATION	1.8370603000091905E-5	DEFECT
// Get all our sub Figs and hit them with the big stick too	WITHOUT_CLASSIFICATION	0.9999996982396832	WITHOUT_CLASSIFICATION	3.0176031691359915E-7	DEFECT
/* Only show the path item when there is                          * an owning namespace. */	WITHOUT_CLASSIFICATION	0.9998886657225124	WITHOUT_CLASSIFICATION	1.1133427748763525E-4	DEFECT
/* Only show the path item when there is                          * an owning namespace. */	WITHOUT_CLASSIFICATION	0.9998886657225124	WITHOUT_CLASSIFICATION	1.1133427748763525E-4	DEFECT
// enumerate all selected figures and update their path accordingly  	WITHOUT_CLASSIFICATION	0.9999979636529371	WITHOUT_CLASSIFICATION	2.036347062779208E-6	DEFECT
/* Force the line-width to 0, since the FigGroup that contains the      * stereotype may want to show a border, but we don't. */	WITHOUT_CLASSIFICATION	0.9999401078665626	WITHOUT_CLASSIFICATION	5.9892133437506916E-5	DEFECT
// compartments	WITHOUT_CLASSIFICATION	0.9999982935842854	WITHOUT_CLASSIFICATION	1.7064157145844736E-6	DEFECT
/*     * TODO: Support commentEdges.     * TODO: Support associations to self.     *     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.9746183342721628	WITHOUT_CLASSIFICATION	0.025381665727837194	DEFECT
// add	WITHOUT_CLASSIFICATION	0.9999926282002797	WITHOUT_CLASSIFICATION	7.371799720227093E-6	DEFECT
/* 20 = height of name fig ?*/	WITHOUT_CLASSIFICATION	0.9996795442224968	WITHOUT_CLASSIFICATION	3.2045577750308826E-4	DEFECT
// Now force calculation of the bounds of the figure, update the edges // and trigger anyone who's listening to see if the "bounds" property // has changed.	WITHOUT_CLASSIFICATION	0.9999999997230181	WITHOUT_CLASSIFICATION	2.769819277177169E-10	DEFECT
/* 2*LINE_WIDTH?  or extra padding? */	WITHOUT_CLASSIFICATION	0.9999635956840773	WITHOUT_CLASSIFICATION	3.640431592275732E-5	DEFECT
// Set properties of the stereotype box.	WITHOUT_CLASSIFICATION	0.9999997674204129	WITHOUT_CLASSIFICATION	2.3257958716723318E-7	DEFECT
/*         * The nameFig is transparent, since this is a box and the fill color is         * drawn by the bigPort.         */	WITHOUT_CLASSIFICATION	0.9999948593050425	WITHOUT_CLASSIFICATION	5.140694957463297E-6	DEFECT
// Use "aSize" to build up the minimum size. Start with the size of the // name compartment and build up.	WITHOUT_CLASSIFICATION	0.9999999219573715	WITHOUT_CLASSIFICATION	7.804262843339909E-8	DEFECT
/*         * Only take into account the stereotype width, not the height, since         * the height is included in the name fig:         */	WITHOUT_CLASSIFICATION	0.9995481112488749	WITHOUT_CLASSIFICATION	4.5188875112514164E-4	DEFECT
/* Add the height of all the compartments (if there are any),         * and check their minimum width: */	WITHOUT_CLASSIFICATION	0.9999925052556198	WITHOUT_CLASSIFICATION	7.4947443801955715E-6	DEFECT
// Save our old boundaries so it can be used in property message later	WITHOUT_CLASSIFICATION	0.9999995187814354	WITHOUT_CLASSIFICATION	4.812185645147009E-7	DEFECT
// Make sure we don't try to set things smaller than the minimum	WITHOUT_CLASSIFICATION	0.999996390960628	WITHOUT_CLASSIFICATION	3.609039371982309E-6	DEFECT
/* The box for the compartments is somewhere         * inside the outside bounds: */	WITHOUT_CLASSIFICATION	0.9999710122792993	WITHOUT_CLASSIFICATION	2.89877207007681E-5	DEFECT
/* Now the new nameFig height will include the stereotype height: */	WITHOUT_CLASSIFICATION	0.9974719166476285	WITHOUT_CLASSIFICATION	0.0025280833523715933	DEFECT
/* The new height can not be less than the name height: */	WITHOUT_CLASSIFICATION	0.9885239571797575	WITHOUT_CLASSIFICATION	0.011476042820242414	DEFECT
/* Calculate the minimum needed height for all the compartments:*/	WITHOUT_CLASSIFICATION	0.9999914539861421	WITHOUT_CLASSIFICATION	8.546013857847533E-6	DEFECT
/*                     * Distribute the extra height over the visible                     * compartments:                     */	WITHOUT_CLASSIFICATION	0.9999854955659425	WITHOUT_CLASSIFICATION	1.4504434057549039E-5	DEFECT
/* Increase the height of the fig: */	WITHOUT_CLASSIFICATION	0.9999775829376505	WITHOUT_CLASSIFICATION	2.2417062349525627E-5	DEFECT
/* Finally set the bounds of the big box and the border fig: */	WITHOUT_CLASSIFICATION	0.9999789564602116	WITHOUT_CLASSIFICATION	2.1043539788457982E-5	DEFECT
// hide compartment	WITHOUT_CLASSIFICATION	0.9999937277102111	WITHOUT_CLASSIFICATION	6.272289788859703E-6	DEFECT
/*                 * Hiding one compartment means that the Fig returns to minimal                 * dimensions:                 */	WITHOUT_CLASSIFICATION	0.9999490447173083	WITHOUT_CLASSIFICATION	5.095528269171385E-5	DEFECT
/*     * @see javax.swing.JComponent#setVisible(boolean)     */	WITHOUT_CLASSIFICATION	0.9999999628748599	WITHOUT_CLASSIFICATION	3.7125140136217365E-8	DEFECT
/*     * @see javax.swing.Action#isEnabled()     */	WITHOUT_CLASSIFICATION	0.9999997926618378	WITHOUT_CLASSIFICATION	2.0733816223854664E-7	DEFECT
/*     * @see org.tigris.gef.base.PathConv#stuffPoint(java.awt.Point)     */	WITHOUT_CLASSIFICATION	0.9999999923812137	WITHOUT_CLASSIFICATION	7.618786266719187E-9	DEFECT
/*     * @see org.tigris.gef.base.PathConv#setClosestPoint(java.awt.Point)     */	WITHOUT_CLASSIFICATION	0.9999999975932389	WITHOUT_CLASSIFICATION	2.4067611434467166E-9	DEFECT
/*     * @see org.tigris.gef.base.PathConv#applyOffsetAmount(java.awt.Point, java.awt.Point, int, java.awt.Point)     */	WITHOUT_CLASSIFICATION	0.9999999530574456	WITHOUT_CLASSIFICATION	4.6942554347307016E-8	DEFECT
/*                 * Alternatively, we could reduce the height of the Fig by the                 * height of this one hidden compartment. But that would not be                 * possible for the width - so we better return to minimal                 * dimensions overall.                 */	WITHOUT_CLASSIFICATION	0.9999448672912544	WITHOUT_CLASSIFICATION	5.513270874560668E-5	DEFECT
// show compartment	WITHOUT_CLASSIFICATION	0.999998202157553	WITHOUT_CLASSIFICATION	1.7978424469722608E-6	DEFECT
/* This sets the lineWidth of all in the group: */	WITHOUT_CLASSIFICATION	0.999909599809497	WITHOUT_CLASSIFICATION	9.040019050299015E-5	DEFECT
/* NameFig and StereotypeFig are handled by parent. */	WITHOUT_CLASSIFICATION	0.9998803342033614	WITHOUT_CLASSIFICATION	1.1966579663856336E-4	DEFECT
// forceRepaintShadow();	WITHOUT_CLASSIFICATION	0.9999998434985141	WITHOUT_CLASSIFICATION	1.5650148589324028E-7	DEFECT
/* Update the diagram, and other users of these settings: */	WITHOUT_CLASSIFICATION	0.9999998697750407	WITHOUT_CLASSIFICATION	1.3022495928349536E-7	DEFECT
// @jve:decl-index=0:visual-constraint="10,10"	WITHOUT_CLASSIFICATION	0.9999999547446454	WITHOUT_CLASSIFICATION	4.52553545912986E-8	DEFECT
// find the point offset on the line that gives a // correct offset	WITHOUT_CLASSIFICATION	0.9999982457453143	WITHOUT_CLASSIFICATION	1.754254685757619E-6	DEFECT
// default angle is 90 deg.	WITHOUT_CLASSIFICATION	0.9999947129837953	WITHOUT_CLASSIFICATION	5.287016204776177E-6	DEFECT
// Boundary condition in GEF, make sure this is LESS THAN, not equal	WITHOUT_CLASSIFICATION	0.9984218512561968	WITHOUT_CLASSIFICATION	0.0015781487438033296	DEFECT
// If we're using a fixed offset, just add it and return // No collision detection is done in this case	WITHOUT_CLASSIFICATION	0.9999976780858947	WITHOUT_CLASSIFICATION	2.321914105329833E-6	DEFECT
// Check for a collision between our computed position and the edge	WITHOUT_CLASSIFICATION	0.9999999882087389	WITHOUT_CLASSIFICATION	1.1791261212322726E-8	DEFECT
// increase offset by 2px at a time	WITHOUT_CLASSIFICATION	0.9999992989832355	WITHOUT_CLASSIFICATION	7.0101676453779E-7	DEFECT
// Get the points representing the poly line for our edge	WITHOUT_CLASSIFICATION	0.9999999495364256	WITHOUT_CLASSIFICATION	5.046357436974871E-8	DEFECT
// increase offset by increments until we're clear	WITHOUT_CLASSIFICATION	0.9999999131758509	WITHOUT_CLASSIFICATION	8.682414908192938E-8	DEFECT
// limit our retries in case its too hard to get free	WITHOUT_CLASSIFICATION	0.9999999414484427	WITHOUT_CLASSIFICATION	5.8551557213016274E-8	DEFECT
// If we timed out, give it one more try on the other side	WITHOUT_CLASSIFICATION	0.9999993886525246	WITHOUT_CLASSIFICATION	6.113474754985448E-7	DEFECT
/* count >= limit */	WITHOUT_CLASSIFICATION	0.9999917085338546	WITHOUT_CLASSIFICATION	8.291466145436376E-6	DEFECT
/* Force the line-width to 0, since the FigGroup that contains the      * stereotype may want to show a border, but we don't. */	WITHOUT_CLASSIFICATION	0.9999401078665626	WITHOUT_CLASSIFICATION	5.9892133437506916E-5	DEFECT
//                LOG.log(Level.FINE, "Final point #" + count + " " + result //                        + " offset of " + scaledOffset);	WITHOUT_CLASSIFICATION	0.9999999997505384	WITHOUT_CLASSIFICATION	2.494615517584264E-10	DEFECT
// segment size for computing slope	WITHOUT_CLASSIFICATION	0.9999999243308991	WITHOUT_CLASSIFICATION	7.566910086086226E-8	DEFECT
// Two points for line segment used to compute slope of path here // NOTE that this is the average slope, not instantaneous, so it will // give screwy results near bends in the path	WITHOUT_CLASSIFICATION	0.9999978448953533	WITHOUT_CLASSIFICATION	2.1551046467838143E-6	DEFECT
// If our position was clamped, try to make it up on the other end	WITHOUT_CLASSIFICATION	0.9999998057402643	WITHOUT_CLASSIFICATION	1.942597357872931E-7	DEFECT
// Can't get the slope of a point.  Just return an arbitrary point.	WITHOUT_CLASSIFICATION	0.9999996752313328	WITHOUT_CLASSIFICATION	3.247686671990806E-7	DEFECT
// Our angle theta is arctan(opposite/adjacent) // Because y increases going down the screen, positive angles are // clockwise rather than counterclockwise	WITHOUT_CLASSIFICATION	0.9999916007977118	WITHOUT_CLASSIFICATION	8.399202288161116E-6	DEFECT
// This shouldn't happen, because of our line segment size check	WITHOUT_CLASSIFICATION	0.9997030520891301	WITHOUT_CLASSIFICATION	2.9694791086982324E-4	DEFECT
// "We're going vertical!" - Goose in "Top Gun"	WITHOUT_CLASSIFICATION	0.9999999055219903	WITHOUT_CLASSIFICATION	9.447800969384047E-8	DEFECT
// Arctan only returns -PI/2 to PI/2 // Handle the other two quadrants and normalize to 0 - 2PI	WITHOUT_CLASSIFICATION	0.999999990949068	WITHOUT_CLASSIFICATION	9.050931964545756E-9	DEFECT
// Quadrant II & III	WITHOUT_CLASSIFICATION	0.9999997441848555	WITHOUT_CLASSIFICATION	2.558151445780525E-7	DEFECT
// Quadrant IV	WITHOUT_CLASSIFICATION	0.9999997688913693	WITHOUT_CLASSIFICATION	2.31108630756657E-7	DEFECT
// Set the following for some backward compatibility with old algorithm	WITHOUT_CLASSIFICATION	0.9999979295206713	WITHOUT_CLASSIFICATION	2.0704793286482914E-6	DEFECT
// Add displacement angle to slope	WITHOUT_CLASSIFICATION	0.9999998729050052	WITHOUT_CLASSIFICATION	1.2709499476896064E-7	DEFECT
// Transform to 0 - 2PI range if we've gone all the way around circle	WITHOUT_CLASSIFICATION	0.9999997567888921	WITHOUT_CLASSIFICATION	2.4321110783330986E-7	DEFECT
// Compute our deltas	WITHOUT_CLASSIFICATION	0.999999974190876	WITHOUT_CLASSIFICATION	2.5809123890741312E-8	DEFECT
//        LOG.log(Level.FINE,result.x + ", " + result.y //                + " theta = " + theta * 180 / Math.PI //                + " dx = " + dx + " dy = " + dy);	WITHOUT_CLASSIFICATION	0.9999998823511025	WITHOUT_CLASSIFICATION	1.1764889744353756E-7	DEFECT
// Load the standard colour, just add an alpha channel.	WITHOUT_CLASSIFICATION	0.9999999979862928	WITHOUT_CLASSIFICATION	2.0137072814961538E-9	DEFECT
// Should never get here.  If we do, return the inner point.	WITHOUT_CLASSIFICATION	0.9999972477322233	WITHOUT_CLASSIFICATION	2.752267776675292E-6	DEFECT
// Called by propertyChange	WITHOUT_CLASSIFICATION	0.9999907240800864	WITHOUT_CLASSIFICATION	9.27591991353639E-6	DEFECT
// this does a calcBounds()	WITHOUT_CLASSIFICATION	0.999187362769301	WITHOUT_CLASSIFICATION	8.126372306989209E-4	DEFECT
// NOTE: This listener needs to always be active // even if this tab isn't visible	WITHOUT_CLASSIFICATION	0.9996743221795852	WITHOUT_CLASSIFICATION	3.2567782041485E-4	DEFECT
/*     * @see org.tigris.gef.base.Diagram#getClassAndModelID()     */	WITHOUT_CLASSIFICATION	0.9999998512634741	WITHOUT_CLASSIFICATION	1.4873652588034084E-7	DEFECT
/*     * @see javax.swing.Action#isEnabled()     */	WITHOUT_CLASSIFICATION	0.9999997926618378	WITHOUT_CLASSIFICATION	2.0733816223854664E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see javax.swing.Action#isEnabled()     */	WITHOUT_CLASSIFICATION	0.9999997926618378	WITHOUT_CLASSIFICATION	2.0733816223854664E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * The clone method that should clone the JGraph with it's contents and     * the toolbar with it's contents. Since both JGraph as the toolbar are     * coming from the GEF framework, cloning them will be hard work and should     * actually not be placed here but in a clone method of the JGraph and the     * Toolbar.     * @see java.lang.Object#clone()     */	WITHOUT_CLASSIFICATION	0.9983329625417634	WITHOUT_CLASSIFICATION	0.0016670374582364832	DEFECT
/*     * @see java.awt.Component#setVisible(boolean)     */	WITHOUT_CLASSIFICATION	0.9999999436084731	WITHOUT_CLASSIFICATION	5.639152679469383E-8	DEFECT
// If location is non-null, convert to a rectangle that we can use	WITHOUT_CLASSIFICATION	0.9999998159331467	WITHOUT_CLASSIFICATION	1.8406685327799523E-7	DEFECT
/* The following is the default implementation         * for diagrams of which the owner is a namespace.         */	WITHOUT_CLASSIFICATION	0.9999957015341808	WITHOUT_CLASSIFICATION	4.298465819153407E-6	DEFECT
// source // source position // destination // destination position // number of objects to be copied	WITHOUT_CLASSIFICATION	0.9999999998326529	WITHOUT_CLASSIFICATION	1.6734708882197002E-10	DEFECT
/*"unnamed " + */	WITHOUT_CLASSIFICATION	0.9999967324221936	WITHOUT_CLASSIFICATION	3.2675778064252982E-6	DEFECT
// TODO: should update to size of diagram contents	WITHOUT_CLASSIFICATION	0.9781749922247241	WITHOUT_CLASSIFICATION	0.02182500777527576	DEFECT
/* This should not be needed if the above is correct,          * but let's be sure: */	WITHOUT_CLASSIFICATION	0.634592333192399	WITHOUT_CLASSIFICATION	0.365407666807601	DEFECT
/* This should not be needed if the above is correct,          * but let's be sure: */	WITHOUT_CLASSIFICATION	0.634592333192399	WITHOUT_CLASSIFICATION	0.365407666807601	DEFECT
/*             * ActionPaste.getInstance().setEnabled( Globals.clipBoard             * != null && !Globals.clipBoard.isEmpty());             */	WITHOUT_CLASSIFICATION	0.9999999858812295	WITHOUT_CLASSIFICATION	1.4118770385358242E-8	DEFECT
// next statement gives us a clone JGraph but not a cloned Toolbar	WITHOUT_CLASSIFICATION	0.9999997315308192	WITHOUT_CLASSIFICATION	2.6846918083756E-7	DEFECT
/*     * @see org.tigris.gef.event.ModeChangeListener#modeChange(org.tigris.gef.event.ModeChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999998594278009	WITHOUT_CLASSIFICATION	1.4057219914824017E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998951464171	WITHOUT_CLASSIFICATION	1.0485358285635044E-7	DEFECT
/*     * @see java.awt.event.MouseMotionListener#mouseMoved(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998315455914	WITHOUT_CLASSIFICATION	1.6845440864553086E-7	DEFECT
// remains selected	WITHOUT_CLASSIFICATION	0.9999995017251434	WITHOUT_CLASSIFICATION	4.982748565053239E-7	DEFECT
// the old selection	WITHOUT_CLASSIFICATION	0.9999935365503	WITHOUT_CLASSIFICATION	6.463449700012165E-6	DEFECT
// Target might not have been initialised yet.	WITHOUT_CLASSIFICATION	0.9999178455569417	WITHOUT_CLASSIFICATION	8.215444305830295E-5	DEFECT
// add to selection	WITHOUT_CLASSIFICATION	0.9999989561393051	WITHOUT_CLASSIFICATION	1.0438606948167996E-6	DEFECT
// Optimize for the normal case to minimize target changes	WITHOUT_CLASSIFICATION	0.9999999862447767	WITHOUT_CLASSIFICATION	1.3755223206033783E-8	DEFECT
//            }	WITHOUT_CLASSIFICATION	0.9999959719156256	WITHOUT_CLASSIFICATION	4.028084374430973E-6	DEFECT
// Assuming the target is some model element.	WITHOUT_CLASSIFICATION	0.9999997601911836	WITHOUT_CLASSIFICATION	2.3980881633527805E-7	DEFECT
// how to handle empty target lists? // probably the TabDiagram should only show an empty pane in that case	WITHOUT_CLASSIFICATION	0.9999950487500793	WITHOUT_CLASSIFICATION	4.9512499207387186E-6	DEFECT
// Assuming the target is some model element.	WITHOUT_CLASSIFICATION	0.9999997601911836	WITHOUT_CLASSIFICATION	2.3980881633527805E-7	DEFECT
//was ""	WITHOUT_CLASSIFICATION	0.9999944739619726	WITHOUT_CLASSIFICATION	5.526038027430408E-6	DEFECT
// Although we register for notification of diagrams being // deleted, we currently depend on the TargetManager to assign // a new target when this happens // When we implement MDI and have our own list of open diagrams // we can ressurect the use of this	WITHOUT_CLASSIFICATION	0.9999999523513585	WITHOUT_CLASSIFICATION	4.764864147980676E-8	DEFECT
// Any Swing work done here needs to be queued to the AWT thread // since we don't know what thread our event will arrive on	WITHOUT_CLASSIFICATION	0.9765915371915667	WITHOUT_CLASSIFICATION	0.023408462808433356	DEFECT
//- RedrawManager.lock();	WITHOUT_CLASSIFICATION	0.9999982468258525	WITHOUT_CLASSIFICATION	1.7531741475416449E-6	DEFECT
//- RedrawManager.lock();	WITHOUT_CLASSIFICATION	0.9999982468258525	WITHOUT_CLASSIFICATION	1.7531741475416449E-6	DEFECT
//getLayerManager().getActiveLayer().paint(g);	WITHOUT_CLASSIFICATION	0.9999891045359215	WITHOUT_CLASSIFICATION	1.0895464078426238E-5	DEFECT
//- RedrawManager.unlock(); //- _redrawer.repairDamage();	WITHOUT_CLASSIFICATION	0.9999990944233405	WITHOUT_CLASSIFICATION	9.055766595166144E-7	DEFECT
//getLayerManager().getActiveLayer().paint(g);	WITHOUT_CLASSIFICATION	0.9999891045359215	WITHOUT_CLASSIFICATION	1.0895464078426238E-5	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#deleteFromModel()     */	WITHOUT_CLASSIFICATION	0.9999999542809248	WITHOUT_CLASSIFICATION	4.571907522494501E-8	DEFECT
/*     * @see javax.swing.Action#getValue(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999992589712164	WITHOUT_CLASSIFICATION	7.410287834775816E-7	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
/* This makes the text not touch the text-border line: */	WITHOUT_CLASSIFICATION	0.999954663266846	WITHOUT_CLASSIFICATION	4.533673315402236E-5	DEFECT
// TODO: We don't currently have any settings that can change on a // per-fig basis, so we can just use the project/diagram defaults //        settings = new DiagramSettings(renderSettings);	WITHOUT_CLASSIFICATION	0.7596208321043507	WITHOUT_CLASSIFICATION	0.2403791678956493	DEFECT
// Certain types of fixed text (e.g. a FigStereotype with a keyword) // may not have an owner	WITHOUT_CLASSIFICATION	0.9999018499571278	WITHOUT_CLASSIFICATION	9.815004287218702E-5	DEFECT
//Now, we link it to the modelelements which are represented by FigNode	WITHOUT_CLASSIFICATION	0.999999397187868	WITHOUT_CLASSIFICATION	6.028121318796162E-7	DEFECT
//update all tools' enabled status	WITHOUT_CLASSIFICATION	0.999999837954507	WITHOUT_CLASSIFICATION	1.6204549293530125E-7	DEFECT
// remember the fig for later	WITHOUT_CLASSIFICATION	0.9999942447948946	WITHOUT_CLASSIFICATION	5.755205105286608E-6	DEFECT
//Let's build the comment first, unlinked.	WITHOUT_CLASSIFICATION	0.9999835151042762	WITHOUT_CLASSIFICATION	1.6484895723778708E-5	DEFECT
/* Prevent e.g. AssociationClasses from being added trice: */	WITHOUT_CLASSIFICATION	0.9999863050252911	WITHOUT_CLASSIFICATION	1.369497470890283E-5	DEFECT
//Select the new comment as target	WITHOUT_CLASSIFICATION	0.9999907468928013	WITHOUT_CLASSIFICATION	9.253107198625183E-6	DEFECT
//Create the Node Fig for the comment itself and draw it	WITHOUT_CLASSIFICATION	0.99999959156779	WITHOUT_CLASSIFICATION	4.0843221009760004E-7	DEFECT
//Create the comment links and draw them	WITHOUT_CLASSIFICATION	0.9999847709833112	WITHOUT_CLASSIFICATION	1.5229016688958334E-5	DEFECT
//Place the comment Fig on the nicest spot on the diagram	WITHOUT_CLASSIFICATION	0.999996555149635	WITHOUT_CLASSIFICATION	3.4448503649494017E-6	DEFECT
// If we're drawing from an edge	WITHOUT_CLASSIFICATION	0.999999537903833	WITHOUT_CLASSIFICATION	4.6209616694664726E-7	DEFECT
//$NON-NLS-<n>$	WITHOUT_CLASSIFICATION	0.9999951702361857	WITHOUT_CLASSIFICATION	4.829763814304144E-6	DEFECT
//$NON-NLS-<n>$	WITHOUT_CLASSIFICATION	0.9999951702361857	WITHOUT_CLASSIFICATION	4.829763814304144E-6	DEFECT
//$NON-NLS-<n>$	WITHOUT_CLASSIFICATION	0.9999951702361857	WITHOUT_CLASSIFICATION	4.829763814304144E-6	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see org.tigris.gef.undo.UndoableAction#isEnabled()     */	WITHOUT_CLASSIFICATION	0.9999999604868992	WITHOUT_CLASSIFICATION	3.951310075401476E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#paint(java.awt.Graphics)     */	WITHOUT_CLASSIFICATION	0.9999999775150291	WITHOUT_CLASSIFICATION	2.2484970833289784E-8	DEFECT
/*     * @see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999999980370717	WITHOUT_CLASSIFICATION	1.962928268087383E-9	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Calling connect() will add the edge to the GraphModel and // any LayerPersectives on that GraphModel will get a // edgeAdded event and will add an appropriate FigEdge // (determined by the GraphEdgeRenderer).	WITHOUT_CLASSIFICATION	0.9999970819699707	WITHOUT_CLASSIFICATION	2.9180300292009923E-6	DEFECT
// user made a false start	WITHOUT_CLASSIFICATION	0.9999992324636877	WITHOUT_CLASSIFICATION	7.675363122928918E-7	DEFECT
// So, the target is a MAssociationRole	WITHOUT_CLASSIFICATION	0.9999980459820063	WITHOUT_CLASSIFICATION	1.95401799363605E-6	DEFECT
/*MVW This is not the correct way,        * but it allows connecting a CommentEdge to it!        * See e.g. ActionAddNote for the correct way.        * Testcase:        * 1. Select the message.        * 2. Click the Comment tool.        * */	WITHOUT_CLASSIFICATION	0.9642970644405681	WITHOUT_CLASSIFICATION	0.03570293555943185	DEFECT
/* end class ActionAddMessage */	WITHOUT_CLASSIFICATION	0.9999776911509349	WITHOUT_CLASSIFICATION	2.2308849065103823E-5	DEFECT
// let's use groups to construct the different text sections at // the association	WITHOUT_CLASSIFICATION	0.9999992744773396	WITHOUT_CLASSIFICATION	7.255226603716378E-7	DEFECT
/* No further listeners required in this case - the rest is handled         * by the notationProvider and sub-Figs. */	WITHOUT_CLASSIFICATION	0.9999641900389974	WITHOUT_CLASSIFICATION	3.5809961002633626E-5	DEFECT
/* This only happens if model-change events arrive             * before we are completely constructed. */	WITHOUT_CLASSIFICATION	0.9999993842960271	WITHOUT_CLASSIFICATION	6.157039729240714E-7	DEFECT
// x^2 + y^2 = r^2  (equation of a circle)	WITHOUT_CLASSIFICATION	0.9999999165145962	WITHOUT_CLASSIFICATION	8.348540379076733E-8	DEFECT
// max distance is set at 100 pixels, (rSquared = 100^2)	WITHOUT_CLASSIFICATION	0.9999983768653512	WITHOUT_CLASSIFICATION	1.6231346487976478E-6	DEFECT
// east	WITHOUT_CLASSIFICATION	0.9999985366793527	WITHOUT_CLASSIFICATION	1.4633206473005358E-6	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#removeFromDiagram()     */	WITHOUT_CLASSIFICATION	0.9999997970000318	WITHOUT_CLASSIFICATION	2.0299996811709505E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#propertyChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999999325895141	WITHOUT_CLASSIFICATION	6.741048585293002E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(     *         java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.9999999066328071	WITHOUT_CLASSIFICATION	9.336719285167458E-8	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
/* end class FigAssociation */	WITHOUT_CLASSIFICATION	0.9995353955537976	WITHOUT_CLASSIFICATION	4.646044462024931E-4	DEFECT
// Note that "multiplicity" is what is the notation is listening // for in UML1.4 "uppervalue" are listened to in UML2. It is not // currently why it is not required to register for "lowerValue" // also.	WITHOUT_CLASSIFICATION	0.9999967060879901	WITHOUT_CLASSIFICATION	3.293912009879047E-6	DEFECT
// no need to listen to these property changes - the // notationProvider takes care of this.	WITHOUT_CLASSIFICATION	0.9999962222897574	WITHOUT_CLASSIFICATION	3.77771024268414E-6	DEFECT
// no need to listen to these property changes - the // notationProvider takes care of this.	WITHOUT_CLASSIFICATION	0.9999962222897574	WITHOUT_CLASSIFICATION	3.77771024268414E-6	DEFECT
/*, new String[] {"name", "visibility", "stereotype"}*/	WITHOUT_CLASSIFICATION	0.9999900987927308	WITHOUT_CLASSIFICATION	9.90120726907324E-6	DEFECT
/*, new String[] {"name", "visibility", "stereotype"}*/	WITHOUT_CLASSIFICATION	0.9999900987927308	WITHOUT_CLASSIFICATION	9.90120726907324E-6	DEFECT
// These are a list of arrow types.	WITHOUT_CLASSIFICATION	0.9999988951937125	WITHOUT_CLASSIFICATION	1.1048062873587126E-6	DEFECT
// Added to the arrow type for navigable	WITHOUT_CLASSIFICATION	0.9999998983313799	WITHOUT_CLASSIFICATION	1.0166862012011158E-7	DEFECT
// Finished editing. // Parse the text that was edited. // Only the role is editable, hence:	WITHOUT_CLASSIFICATION	0.9999959825330345	WITHOUT_CLASSIFICATION	4.017466965460102E-6	DEFECT
//            figEdge.showHelp(role.getParsingHelp()); //            role.setText();	WITHOUT_CLASSIFICATION	0.9999997125916598	WITHOUT_CLASSIFICATION	2.874083402428352E-7	DEFECT
// Pass everything else to superclass	WITHOUT_CLASSIFICATION	0.9999991136916216	WITHOUT_CLASSIFICATION	8.86308378334828E-7	DEFECT
/* end class ActionNavigability */	WITHOUT_CLASSIFICATION	0.9999743265662887	WITHOUT_CLASSIFICATION	2.5673433711296074E-5	DEFECT
/* Nothing yet. Later maybe something like: */	WITHOUT_CLASSIFICATION	0.998050200897957	WITHOUT_CLASSIFICATION	0.001949799102042909	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
//        putNotationArgument("showAssociationName",  //                getSettings().isShowAssociationNames());	WITHOUT_CLASSIFICATION	0.9999999121086248	WITHOUT_CLASSIFICATION	8.789137523622114E-8	DEFECT
/* The text the user has filled in the textfield is first checked             * to see if it's a valid multiplicity. If so then that is the              * multiplicity to be set. If not the input is rejected. */	WITHOUT_CLASSIFICATION	0.9999999986809925	WITHOUT_CLASSIFICATION	1.3190075224787936E-9	DEFECT
// Fonts and colors should get updated automatically for contained figs	WITHOUT_CLASSIFICATION	0.9999998163325401	WITHOUT_CLASSIFICATION	1.8366745986197495E-7	DEFECT
/* There is none... */	WITHOUT_CLASSIFICATION	0.9996922682224783	WITHOUT_CLASSIFICATION	3.0773177752168674E-4	DEFECT
// only initialized to prevent warning	WITHOUT_CLASSIFICATION	0.9999955178900957	WITHOUT_CLASSIFICATION	4.482109904322716E-6	DEFECT
//not supported for this target	WITHOUT_CLASSIFICATION	0.9999907992692935	WITHOUT_CLASSIFICATION	9.200730706517832E-6	DEFECT
// make space for the clarifier // margin between text and border	WITHOUT_CLASSIFICATION	0.9999999773787569	WITHOUT_CLASSIFICATION	2.2621243092561576E-8	DEFECT
/* This next line presumes that the 1st fig with this owner             * is the previous port - and consequently nullifies the owner             * of this 1st fig. */	WITHOUT_CLASSIFICATION	0.9995220192585033	WITHOUT_CLASSIFICATION	4.779807414968372E-4	DEFECT
// Add a listener for changes to any property	WITHOUT_CLASSIFICATION	0.9999996445516234	WITHOUT_CLASSIFICATION	3.5544837673227857E-7	DEFECT
/* Check if multiple items are selected: */	WITHOUT_CLASSIFICATION	0.999959234413234	WITHOUT_CLASSIFICATION	4.076558676603228E-5	DEFECT
// Show ...	WITHOUT_CLASSIFICATION	0.9999437086180686	WITHOUT_CLASSIFICATION	5.6291381931480176E-5	DEFECT
// popupAddOffset should be equal to the number of items added here:	WITHOUT_CLASSIFICATION	0.9999998133132907	WITHOUT_CLASSIFICATION	1.8668670930007152E-7	DEFECT
// TODO: The following is carried over from setOwner, but probably // isn't needed //        renderingChanged(); // It does the following (add as needed): //        updateNameText(); //        updateStereotypeText(); //        updateStereotypeIcon(); //        updateBounds(); //        damage();	WITHOUT_CLASSIFICATION	0.9899395014154134	DEFECT	0.010060498584586667	WITHOUT_CLASSIFICATION
// Be careful here since subclasses could have overridden this with // the assumption that it wouldn't be called before the constructors // finished	WITHOUT_CLASSIFICATION	0.999934317654492	WITHOUT_CLASSIFICATION	6.568234550798838E-5	DEFECT
/* TODO: MVW: I think this has to be:                 * clone.nameFig = (FigSingleLineText) cloneFig;                 * but have not the means to investigate,                 * since this code is not yet used.                 * Enable the menu-items for Copy/Paste to test...                 * BTW: In some other FigNodeModelElement                 * classes I see the same mistake. */	WITHOUT_CLASSIFICATION	0.999168609883353	DEFECT	8.313901166470158E-4	WITHOUT_CLASSIFICATION
// this rectangle marks the whole modelelement figure; everything // is inside it:	WITHOUT_CLASSIFICATION	0.9960816414405084	WITHOUT_CLASSIFICATION	0.003918358559491572	DEFECT
/**     * Clone this figure. After the base clone method has been called determine     * which child figs of the clone represent the name, stereotype and port.     * <p>     * TODO: enclosedFigs, encloser and eventSenders may also need to be cloned.     *     * @see java.lang.Object#clone()     * @return the cloned figure     */	WITHOUT_CLASSIFICATION	0.9839707768822925	WITHOUT_CLASSIFICATION	0.016029223117707467	DEFECT
/* Idem here:                 * clone.stereotypeFig = (FigStereotypesGroup) cloneFig; */	WITHOUT_CLASSIFICATION	0.9999622950498932	WITHOUT_CLASSIFICATION	3.7704950106752507E-5	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getEnclosingFig()     */	WITHOUT_CLASSIFICATION	0.9999999829471851	WITHOUT_CLASSIFICATION	1.705281493163288E-8	DEFECT
// update any text, colors, fonts, etc.	WITHOUT_CLASSIFICATION	0.9999995281470883	WITHOUT_CLASSIFICATION	4.718529118257938E-7	DEFECT
//parse the text that was edited	WITHOUT_CLASSIFICATION	0.9999980525104614	WITHOUT_CLASSIFICATION	1.9474895386501558E-6	DEFECT
// add stereotype view submenu	WITHOUT_CLASSIFICATION	0.9999980714575709	WITHOUT_CLASSIFICATION	1.9285424290902165E-6	DEFECT
// The node's been placed on the diagram	WITHOUT_CLASSIFICATION	0.9999994513396773	WITHOUT_CLASSIFICATION	5.486603227164538E-7	DEFECT
// Add stereotypes submenu	WITHOUT_CLASSIFICATION	0.9999987247179042	WITHOUT_CLASSIFICATION	1.2752820957477508E-6	DEFECT
// Set the namespace of the enclosed model element to the // namespace of the encloser.	WITHOUT_CLASSIFICATION	0.9999999809669764	WITHOUT_CLASSIFICATION	1.903302362605858E-8	DEFECT
// Find all ElementResidences between the class and the component:	WITHOUT_CLASSIFICATION	0.9999814761590226	WITHOUT_CLASSIFICATION	1.8523840977409763E-5	DEFECT
// There was no ElementResidence yet, so let's create one:	WITHOUT_CLASSIFICATION	0.9999990870920067	WITHOUT_CLASSIFICATION	9.129079933678142E-7	DEFECT
// The node's been placed within some Fig	WITHOUT_CLASSIFICATION	0.9999950688915281	WITHOUT_CLASSIFICATION	4.931108471871294E-6	DEFECT
// There were 2 ElementResidences .. strange case.	WITHOUT_CLASSIFICATION	0.9999963502065925	WITHOUT_CLASSIFICATION	3.6497934075447113E-6	DEFECT
// There is already a correct ElementResidence	WITHOUT_CLASSIFICATION	0.9998144160080314	WITHOUT_CLASSIFICATION	1.855839919684146E-4	DEFECT
// The owner is already linked to the component	WITHOUT_CLASSIFICATION	0.9999991561310085	WITHOUT_CLASSIFICATION	8.438689914878027E-7	DEFECT
// We are getting events we don't want. Filter them out.	WITHOUT_CLASSIFICATION	0.9999996153872724	WITHOUT_CLASSIFICATION	3.8461272754940335E-7	DEFECT
/* Only update the bounds if they change:  */	WITHOUT_CLASSIFICATION	0.9999990228875077	WITHOUT_CLASSIFICATION	9.771124922633268E-7	DEFECT
// We handle and consume editing events	WITHOUT_CLASSIFICATION	0.9999997991358773	WITHOUT_CLASSIFICATION	2.0086412277297388E-7	DEFECT
// resize the FigNode to accommodate the new text	WITHOUT_CLASSIFICATION	0.999998704925669	WITHOUT_CLASSIFICATION	1.2950743310830986E-6	DEFECT
/* If the source of the event is an UML object,             * e.g. the owner of this Fig (but not always only the owner             * is shown, e.g. for a class, also its attributes are shown),             * then the UML model has been changed.             */	WITHOUT_CLASSIFICATION	0.9999913930962261	WITHOUT_CLASSIFICATION	8.606903773905344E-6	DEFECT
// TODO: Should this not be an assert?	WITHOUT_CLASSIFICATION	0.9996140178734929	DEFECT	3.8598212650718314E-4	WITHOUT_CLASSIFICATION
// west	WITHOUT_CLASSIFICATION	0.9999993664507021	WITHOUT_CLASSIFICATION	6.335492977893871E-7	DEFECT
/*     * If the user double clicks on any part of this FigNode, pass it     * down to one of the internal Figs. This allows the user to     * initiate direct text editing.     *     * @see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999999389898571	WITHOUT_CLASSIFICATION	6.101014286776465E-8	DEFECT
// south	WITHOUT_CLASSIFICATION	0.999999303073016	WITHOUT_CLASSIFICATION	6.969269839494913E-7	DEFECT
//////////////////////////////////////////////////////////////// // event handlers - MouseListener implementation	WITHOUT_CLASSIFICATION	0.9999984245970472	WITHOUT_CLASSIFICATION	1.5754029527684407E-6	DEFECT
// Convert null to empty string and clear help message	WITHOUT_CLASSIFICATION	0.9999995991517479	WITHOUT_CLASSIFICATION	4.0084825221684806E-7	DEFECT
// it is done	WITHOUT_CLASSIFICATION	0.9999979920821818	WITHOUT_CLASSIFICATION	2.007917818188499E-6	DEFECT
//this enables direct text editing for sub figs of a //FigGroup object:	WITHOUT_CLASSIFICATION	0.9999992922255238	WITHOUT_CLASSIFICATION	7.077744763358923E-7	DEFECT
// either layer or owner was null	WITHOUT_CLASSIFICATION	0.999996357972095	WITHOUT_CLASSIFICATION	3.6420279050787986E-6	DEFECT
// Default is to do nothing	WITHOUT_CLASSIFICATION	0.9999980589130822	WITHOUT_CLASSIFICATION	1.941086917803199E-6	DEFECT
// Default is to do nothing	WITHOUT_CLASSIFICATION	0.9999980589130822	WITHOUT_CLASSIFICATION	1.941086917803199E-6	DEFECT
// Default is to do nothing	WITHOUT_CLASSIFICATION	0.9999980589130822	WITHOUT_CLASSIFICATION	1.941086917803199E-6	DEFECT
// Default is to do nothing	WITHOUT_CLASSIFICATION	0.9999980589130822	WITHOUT_CLASSIFICATION	1.941086917803199E-6	DEFECT
//This test needed for a FigPool	WITHOUT_CLASSIFICATION	0.9999997953609292	WITHOUT_CLASSIFICATION	2.046390709491757E-7	DEFECT
// Get model listeners removed:	WITHOUT_CLASSIFICATION	0.999998911917935	WITHOUT_CLASSIFICATION	1.0880820649477068E-6	DEFECT
// is used as InstanceSpecification, see UMLDeploymentDiagram	WITHOUT_CLASSIFICATION	0.9999999913507788	WITHOUT_CLASSIFICATION	8.649221147502661E-9	DEFECT
// TODO: what about ObjectNode? //        return org.eclipse.uml2.uml.ObjectNode.class;        	WITHOUT_CLASSIFICATION	0.5939519308012745	DEFECT	0.4060480691987256	WITHOUT_CLASSIFICATION
/*     * @see javax.swing.Action#isEnabled()     */	WITHOUT_CLASSIFICATION	0.9999997926618378	WITHOUT_CLASSIFICATION	2.0733816223854664E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(ActionEvent)     */	WITHOUT_CLASSIFICATION	0.99999990289454	WITHOUT_CLASSIFICATION	9.710546005135863E-8	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// TODO: State & Vertex are independent classes in UML 2.1	WITHOUT_CLASSIFICATION	0.626780332687693	DEFECT	0.37321966731230705	WITHOUT_CLASSIFICATION
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
// only initialized to prevent warning	WITHOUT_CLASSIFICATION	0.9999955178900957	WITHOUT_CLASSIFICATION	4.482109904322716E-6	DEFECT
//not supported for this target	WITHOUT_CLASSIFICATION	0.9999907992692935	WITHOUT_CLASSIFICATION	9.200730706517832E-6	DEFECT
//////////////////////////////////////////////////////////////// // internal methods	WITHOUT_CLASSIFICATION	0.999999378946584	WITHOUT_CLASSIFICATION	6.210534160396126E-7	DEFECT
// TODO assert modelElement != null???	WITHOUT_CLASSIFICATION	0.6432443419303099	WITHOUT_CLASSIFICATION	0.3567556580696902	DEFECT
// Default for name and stereotype is no border	WITHOUT_CLASSIFICATION	0.9999996098648359	WITHOUT_CLASSIFICATION	3.9013516406969086E-7	DEFECT
/*     * Override FigNode implementation to keep setOwner from getting called.     */	WITHOUT_CLASSIFICATION	0.999997726500087	WITHOUT_CLASSIFICATION	2.2734999129422573E-6	DEFECT
// TODO: Use per-project undo manager, not global	WITHOUT_CLASSIFICATION	0.9086410844598017	WITHOUT_CLASSIFICATION	0.09135891554019827	DEFECT
// TODO: Use per-project undo manager, not global	WITHOUT_CLASSIFICATION	0.9086410844598017	WITHOUT_CLASSIFICATION	0.09135891554019827	DEFECT
// TODO: Use per-project undo manager, not global	WITHOUT_CLASSIFICATION	0.9086410844598017	WITHOUT_CLASSIFICATION	0.09135891554019827	DEFECT
// TODO: Use per-project undo manager, not global	WITHOUT_CLASSIFICATION	0.9086410844598017	WITHOUT_CLASSIFICATION	0.09135891554019827	DEFECT
// Use DiagramInterface to add classes to diagram	WITHOUT_CLASSIFICATION	0.9999946045972179	WITHOUT_CLASSIFICATION	5.395402782093584E-6	DEFECT
// ActionAddAllClassesFromModel	WITHOUT_CLASSIFICATION	0.9999996692486836	WITHOUT_CLASSIFICATION	3.307513164718229E-7	DEFECT
// we have an edge (the UML modelelement!)	WITHOUT_CLASSIFICATION	0.9999897670103071	WITHOUT_CLASSIFICATION	1.0232989692899946E-5	DEFECT
// situation 1	WITHOUT_CLASSIFICATION	0.9999992719218757	WITHOUT_CLASSIFICATION	7.280781243688882E-7	DEFECT
/*     * @see javax.swing.Action#isEnabled()     */	WITHOUT_CLASSIFICATION	0.9999997926618378	WITHOUT_CLASSIFICATION	2.0733816223854664E-7	DEFECT
/*     * @see org.tigris.gef.presentation.FigEdge#setFig(org.tigris.gef.presentation.Fig)     */	WITHOUT_CLASSIFICATION	0.9999998880153327	WITHOUT_CLASSIFICATION	1.1198466739329893E-7	DEFECT
/*     * Text group to contain name & stereotype     */	WITHOUT_CLASSIFICATION	0.9999996957155781	WITHOUT_CLASSIFICATION	3.042844219469406E-7	DEFECT
// computeRoute(); // this recomputes the route if you reload the diagram.	WITHOUT_CLASSIFICATION	0.9999980839355339	WITHOUT_CLASSIFICATION	1.9160644661450864E-6	DEFECT
// in case someone turns it on	WITHOUT_CLASSIFICATION	0.9999923084395786	WITHOUT_CLASSIFICATION	7.691560421318455E-6	DEFECT
// Do not allow fill to change. We should see through // the text to the color of the main FIg background.	WITHOUT_CLASSIFICATION	0.9999999909590971	WITHOUT_CLASSIFICATION	9.04090287981674E-9	DEFECT
/* Now force minimum dimensions for the text: */	WITHOUT_CLASSIFICATION	0.999881460794404	WITHOUT_CLASSIFICATION	1.1853920559608638E-4	DEFECT
/* Now add the areas around the text to return the complete size: */	WITHOUT_CLASSIFICATION	0.9999958693855753	WITHOUT_CLASSIFICATION	4.1306144246708684E-6	DEFECT
// calculate the source and dest figs for to self assoc	WITHOUT_CLASSIFICATION	0.9999995986550981	WITHOUT_CLASSIFICATION	4.0134490189491E-7	DEFECT
//reset the pointIndex	WITHOUT_CLASSIFICATION	0.9999986563239989	WITHOUT_CLASSIFICATION	1.3436760010693839E-6	DEFECT
// check pre-conds	WITHOUT_CLASSIFICATION	0.9999983656129522	WITHOUT_CLASSIFICATION	1.6343870477688292E-6	DEFECT
//Set-up:	WITHOUT_CLASSIFICATION	0.9999723045127641	WITHOUT_CLASSIFICATION	2.769548723591105E-5	DEFECT
// the fig that was under the mouse when it was released	WITHOUT_CLASSIFICATION	0.9999938441709282	WITHOUT_CLASSIFICATION	6.155829071847007E-6	DEFECT
//make a nice little target area:	WITHOUT_CLASSIFICATION	0.999976458884948	WITHOUT_CLASSIFICATION	2.3541115051934177E-5	DEFECT
// and find the Fig:	WITHOUT_CLASSIFICATION	0.9999972182615127	WITHOUT_CLASSIFICATION	2.781738487425409E-6	DEFECT
// last is the top fig.	WITHOUT_CLASSIFICATION	0.9999955253442364	WITHOUT_CLASSIFICATION	4.474655763634994E-6	DEFECT
// check intermediate post-condition.	WITHOUT_CLASSIFICATION	0.9999930141781311	WITHOUT_CLASSIFICATION	6.985821868830653E-6	DEFECT
// delegate the re-routing to graphmodels.	WITHOUT_CLASSIFICATION	0.999999972136326	WITHOUT_CLASSIFICATION	2.786367394144087E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999455836559	WITHOUT_CLASSIFICATION	5.44163440595605E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineColor()     */	WITHOUT_CLASSIFICATION	0.9999998290030105	WITHOUT_CLASSIFICATION	1.7099698950311398E-7	DEFECT
//_x = x; _y = y; _w = w; _h = h;	WITHOUT_CLASSIFICATION	0.9999586164578153	WITHOUT_CLASSIFICATION	4.138354218468641E-5	DEFECT
// add Figs to the FigNode in back-to-front order	WITHOUT_CLASSIFICATION	0.9999995836685673	WITHOUT_CLASSIFICATION	4.163314326709753E-7	DEFECT
// set it to an invalid number by default // to make sure it is set correctly.	WITHOUT_CLASSIFICATION	0.9999993522054755	WITHOUT_CLASSIFICATION	6.477945244119613E-7	DEFECT
//figPoly.setFillColor(col);	WITHOUT_CLASSIFICATION	0.9999866952889676	WITHOUT_CLASSIFICATION	1.3304711032393035E-5	DEFECT
//figClone._polygon = (Polygon) _polygon.clone();	WITHOUT_CLASSIFICATION	0.9999989782833903	WITHOUT_CLASSIFICATION	1.0217166097081235E-6	DEFECT
// north	WITHOUT_CLASSIFICATION	0.9999979147610653	WITHOUT_CLASSIFICATION	2.085238934820559E-6	DEFECT
// Do nothing until code is reviewed	WITHOUT_CLASSIFICATION	0.9999983695068421	WITHOUT_CLASSIFICATION	1.630493158054285E-6	DEFECT
// Do nothing until code is reviewed	WITHOUT_CLASSIFICATION	0.9999983695068421	WITHOUT_CLASSIFICATION	1.630493158054285E-6	DEFECT
// TODO: Do nothing until code is reviewed	WITHOUT_CLASSIFICATION	0.7901390303222683	WITHOUT_CLASSIFICATION	0.20986096967773168	DEFECT
// Message	WITHOUT_CLASSIFICATION	0.9999988184242251	WITHOUT_CLASSIFICATION	1.1815757748104899E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
/*     * @see javax.swing.Action#isEnabled()     */	WITHOUT_CLASSIFICATION	0.9999997926618378	WITHOUT_CLASSIFICATION	2.0733816223854664E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*         * Crazy numbering scheme at work here.  Here's how the handle numbers         * are laid out.  Values 0-7 are defined by GEF and go left to         * right, top to bottom (ie not clockwise or counterclockwise).         * Values 10-14 zigzag North, South, West, East, Southwest.         * If you can correctly guess where 15 will go, you should buy         * a lottery ticket immediately.         *  <pre>         *            10         *     0-------1-------2         *     |               |         *  12 3               4 13         *     |               |         *  14 5-------6-------7         *            11         * </pre>         */	WITHOUT_CLASSIFICATION	0.9891257219919588	WITHOUT_CLASSIFICATION	0.010874278008041081	DEFECT
// ClassifierRole // ClassifierRole	WITHOUT_CLASSIFICATION	0.9999997935451017	WITHOUT_CLASSIFICATION	2.0645489831079347E-7	DEFECT
/* Simulate a press of the mouse above the calculated point: */	WITHOUT_CLASSIFICATION	0.9999909199803414	WITHOUT_CLASSIFICATION	9.080019658643834E-6	DEFECT
/* Calculate the drop location, and place every n-th element             * at an offset proportional to n.             */	WITHOUT_CLASSIFICATION	0.9999998806314746	WITHOUT_CLASSIFICATION	1.1936852538525963E-7	DEFECT
// super implementation found a hit	WITHOUT_CLASSIFICATION	0.9999957888844762	WITHOUT_CLASSIFICATION	4.211115523864062E-6	DEFECT
/* Take canvas scrolling into account.             * The implementation below does place the element correctly             * when the canvas has been scrolled.             */	WITHOUT_CLASSIFICATION	0.960954318520939	WITHOUT_CLASSIFICATION	0.03904568147906103	DEFECT
/* Simulate a release of the mouse: */	WITHOUT_CLASSIFICATION	0.9999987554247804	WITHOUT_CLASSIFICATION	1.2445752195164884E-6	DEFECT
/*     * Overridden in order to implement PathCompartmentContainer.     */	WITHOUT_CLASSIFICATION	0.9999909105695137	WITHOUT_CLASSIFICATION	9.089430486370015E-6	DEFECT
// do nothing by default	WITHOUT_CLASSIFICATION	0.9999976801657522	WITHOUT_CLASSIFICATION	2.319834247782202E-6	DEFECT
// Don't allow drag outside of bounds of diagram	WITHOUT_CLASSIFICATION	0.9999993747796667	WITHOUT_CLASSIFICATION	6.252203333416635E-7	DEFECT
/*     * Overridden in order to implement PathCompartmentContainer.     */	WITHOUT_CLASSIFICATION	0.9999909105695137	WITHOUT_CLASSIFICATION	9.089430486370015E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#paint(java.awt.Graphics)     */	WITHOUT_CLASSIFICATION	0.9999999775150291	WITHOUT_CLASSIFICATION	2.2484970833289784E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#calcBounds()     */	WITHOUT_CLASSIFICATION	0.9999998746238706	WITHOUT_CLASSIFICATION	1.2537612944219055E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#removeFromDiagram()     */	WITHOUT_CLASSIFICATION	0.9999997970000318	WITHOUT_CLASSIFICATION	2.0299996811709505E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#deleteFromModel()     */	WITHOUT_CLASSIFICATION	0.9999999542809248	WITHOUT_CLASSIFICATION	4.571907522494501E-8	DEFECT
/*     * @see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998995536239	WITHOUT_CLASSIFICATION	1.0044637608451965E-7	DEFECT
// If the user has selected ModePlace either by a diagram // tool or AddToDiagram then we don't want to show the // clarifiers.	WITHOUT_CLASSIFICATION	0.9999999792877758	WITHOUT_CLASSIFICATION	2.0712224070830433E-8	DEFECT
// If the user has selected ModePlace either by a diagram // tool or AddToDiagram then we don't want to show the // toolbelt items.	WITHOUT_CLASSIFICATION	0.99999997358688	WITHOUT_CLASSIFICATION	2.6413119989966886E-8	DEFECT
// Remember what handle was clicked for the case where the drag // is released over empty space	WITHOUT_CLASSIFICATION	0.9999993648986572	WITHOUT_CLASSIFICATION	6.351013429487648E-7	DEFECT
// transparent cyan	WITHOUT_CLASSIFICATION	0.9999976784319435	WITHOUT_CLASSIFICATION	2.3215680565409687E-6	DEFECT
// 	WITHOUT_CLASSIFICATION	0.9999461183916941	WITHOUT_CLASSIFICATION	5.388160830592758E-5	DEFECT
// yellow	WITHOUT_CLASSIFICATION	0.9999882477468137	WITHOUT_CLASSIFICATION	1.175225318632134E-5	DEFECT
// translucent green	WITHOUT_CLASSIFICATION	0.9999997898068808	WITHOUT_CLASSIFICATION	2.101931192764108E-7	DEFECT
//        super(ModeCreatePolyEdge.class, "edgeClass", //	WITHOUT_CLASSIFICATION	0.9999999473781676	WITHOUT_CLASSIFICATION	5.262183248718099E-8	DEFECT
// set this to true on to enable debugging figs	WITHOUT_CLASSIFICATION	0.9999835230085311	WITHOUT_CLASSIFICATION	1.6476991468920896E-5	DEFECT
// anchor position	WITHOUT_CLASSIFICATION	0.9999993208779081	WITHOUT_CLASSIFICATION	6.791220919224038E-7	DEFECT
/* The EnumerationLiteral uses a dedicated notation that supports          * parsing "name1;name2;name3" and stereotypes.          * Also supports deleting a literal by erasing text. */	WITHOUT_CLASSIFICATION	0.9999999726282419	WITHOUT_CLASSIFICATION	2.7371758007097055E-8	DEFECT
/* TODO: The UML does not seem to define this name. Or is it? */	WITHOUT_CLASSIFICATION	0.9953458771714428	DEFECT	0.004654122828557195	WITHOUT_CLASSIFICATION
/*     * The serialVersionUID (generated by Eclipse)     */	WITHOUT_CLASSIFICATION	0.9999982368141411	WITHOUT_CLASSIFICATION	1.7631858588829688E-6	DEFECT
// UML spec for Generalizations doesn't call for name	WITHOUT_CLASSIFICATION	0.9999531013521854	WITHOUT_CLASSIFICATION	4.68986478145872E-5	DEFECT
// Name & stereotypes get updated by superclass	WITHOUT_CLASSIFICATION	0.9999994713494623	WITHOUT_CLASSIFICATION	5.286505376271807E-7	DEFECT
// Update the discriminator if it changed	WITHOUT_CLASSIFICATION	0.9999999873874833	WITHOUT_CLASSIFICATION	1.2612516739435583E-8	DEFECT
// show it	WITHOUT_CLASSIFICATION	0.9999875382465748	WITHOUT_CLASSIFICATION	1.2461753425198814E-5	DEFECT
//                fig.calcBounds();	WITHOUT_CLASSIFICATION	0.9999974488485832	WITHOUT_CLASSIFICATION	2.551151416730145E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
/*     * @see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998951464171	WITHOUT_CLASSIFICATION	1.0485358285635044E-7	DEFECT
// we only take the filename, not the whole system path	WITHOUT_CLASSIFICATION	0.9999937921879709	WITHOUT_CLASSIFICATION	6.207812029050372E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999748478784519	WITHOUT_CLASSIFICATION	2.5152121548066763E-5	DEFECT
//_x = x; _y = y; _w = w; _h = h;	WITHOUT_CLASSIFICATION	0.9999586164578153	WITHOUT_CLASSIFICATION	4.138354218468641E-5	DEFECT
// add Figs to the FigNode in back-to-front order	WITHOUT_CLASSIFICATION	0.9999995836685673	WITHOUT_CLASSIFICATION	4.163314326709753E-7	DEFECT
//make port invisible unless mouse enters	WITHOUT_CLASSIFICATION	0.9999996726198497	WITHOUT_CLASSIFICATION	3.273801503934516E-7	DEFECT
//////////////////////////////////////////////////////////////// // event handlers - MouseListener implementation	WITHOUT_CLASSIFICATION	0.9999984245970472	WITHOUT_CLASSIFICATION	1.5754029527684407E-6	DEFECT
//      The following does not seem to work - centered the Fig instead. //        getNameFig().setJustificationByName("center");	WITHOUT_CLASSIFICATION	0.9967688325935422	WITHOUT_CLASSIFICATION	0.0032311674064578427	DEFECT
// get the widest of all textfigs // calculate the total height	WITHOUT_CLASSIFICATION	0.9999995878289833	WITHOUT_CLASSIFICATION	4.1217101668506426E-7	DEFECT
// Create the new FigAssociation edge to replace the node	WITHOUT_CLASSIFICATION	0.9999998808219831	WITHOUT_CLASSIFICATION	1.1917801680903415E-7	DEFECT
/* Center the NameFig, since center justification          * does not seem to work. */	WITHOUT_CLASSIFICATION	0.9996106715066984	WITHOUT_CLASSIFICATION	3.8932849330161205E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
// Do nothing, this rect will always be transparent	WITHOUT_CLASSIFICATION	0.9994316254441963	WITHOUT_CLASSIFICATION	5.683745558036966E-4	DEFECT
// Do nothing, this rect will always be transparent	WITHOUT_CLASSIFICATION	0.9994316254441963	WITHOUT_CLASSIFICATION	5.683745558036966E-4	DEFECT
/*     * @see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994374054892	WITHOUT_CLASSIFICATION	5.625945107321554E-7	DEFECT
// update any text, colors, fonts, etc.	WITHOUT_CLASSIFICATION	0.9999995281470883	WITHOUT_CLASSIFICATION	4.718529118257938E-7	DEFECT
// update the relative sizes and positions of internel Figs	WITHOUT_CLASSIFICATION	0.9999995310710628	WITHOUT_CLASSIFICATION	4.6892893723839394E-7	DEFECT
// popupAddOffset should be equal to the number of items added here:	WITHOUT_CLASSIFICATION	0.9999998133132907	WITHOUT_CLASSIFICATION	1.8668670930007152E-7	DEFECT
// Add stereotypes submenu	WITHOUT_CLASSIFICATION	0.9999987247179042	WITHOUT_CLASSIFICATION	1.2752820957477508E-6	DEFECT
// We handle and consume editing events	WITHOUT_CLASSIFICATION	0.9999997991358773	WITHOUT_CLASSIFICATION	2.0086412277297388E-7	DEFECT
// Detach any non-associationend edges (such as comment edges) already // attached before this association node is removed. // They'll later be re-attached to the new FigAssociation	WITHOUT_CLASSIFICATION	0.999986182937217	WITHOUT_CLASSIFICATION	1.381706278316993E-5	DEFECT
// Now we can remove ourself (which will also remove the // attached association ends edges)	WITHOUT_CLASSIFICATION	0.9999998923107789	WITHOUT_CLASSIFICATION	1.0768922115892352E-7	DEFECT
// Add the non-associationend edges (such as comment edges) that were // originally attached to this and attach them to the new // FigAssociation and make sure they are positioned correctly.	WITHOUT_CLASSIFICATION	0.9996031610289089	WITHOUT_CLASSIFICATION	3.9683897109111106E-4	DEFECT
/*     * List of model element listeners we've registered.     */	WITHOUT_CLASSIFICATION	0.999999347152096	WITHOUT_CLASSIFICATION	6.528479039049131E-7	DEFECT
// Added this part to load the extra menu content	WITHOUT_CLASSIFICATION	0.9999988852875448	WITHOUT_CLASSIFICATION	1.1147124552155977E-6	DEFECT
/* Owner related todo items: */	WITHOUT_CLASSIFICATION	0.9994210181543142	WITHOUT_CLASSIFICATION	5.789818456857677E-4	DEFECT
/* Fig related todo items: */	WITHOUT_CLASSIFICATION	0.9992281053316983	WITHOUT_CLASSIFICATION	7.718946683017362E-4	DEFECT
// parse the text that was edited	WITHOUT_CLASSIFICATION	0.999998050668223	WITHOUT_CLASSIFICATION	1.949331776995213E-6	DEFECT
// Pass everything except editing events to superclass	WITHOUT_CLASSIFICATION	0.9999986314618892	WITHOUT_CLASSIFICATION	1.3685381108081496E-6	DEFECT
/* If the source of the event is an UML object,             * then the UML model has been changed.*/	WITHOUT_CLASSIFICATION	0.9999999574550527	WITHOUT_CLASSIFICATION	4.254494734386475E-8	DEFECT
/* The following is a possible future improvement         * of the modelChanged() function.         * Michiel: Propose not to do this to keep architecture stable. */	WITHOUT_CLASSIFICATION	0.9999806749111937	WITHOUT_CLASSIFICATION	1.932508880633587E-5	DEFECT
// Default implementation is to do nothing	WITHOUT_CLASSIFICATION	0.9999942817585185	WITHOUT_CLASSIFICATION	5.718241481580311E-6	DEFECT
// Default implementation is to do nothing	WITHOUT_CLASSIFICATION	0.9999942817585185	WITHOUT_CLASSIFICATION	5.718241481580311E-6	DEFECT
// TODO: Update setting	WITHOUT_CLASSIFICATION	0.9549098945232755	WITHOUT_CLASSIFICATION	0.0450901054767245	DEFECT
//////////////////////////////////////////////////////////////// // accessors	WITHOUT_CLASSIFICATION	0.99999900930865	WITHOUT_CLASSIFICATION	9.906913499891305E-7	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// We moused over an object just as it was deleted // transient condition - doesn't require I18N	WITHOUT_CLASSIFICATION	0.9999997501330088	WITHOUT_CLASSIFICATION	2.498669911755376E-7	DEFECT
// TODO: We don't have any settings that can change per-fig currently // so we can just use the default settings; //        settings = new DiagramSettings(renderSettings);	WITHOUT_CLASSIFICATION	0.7703899922325037	WITHOUT_CLASSIFICATION	0.22961000776749638	DEFECT
// Default implementation is to do nothing	WITHOUT_CLASSIFICATION	0.9999942817585185	WITHOUT_CLASSIFICATION	5.718241481580311E-6	DEFECT
// Default implementation is to do nothing	WITHOUT_CLASSIFICATION	0.9999942817585185	WITHOUT_CLASSIFICATION	5.718241481580311E-6	DEFECT
// Default implementation is to do nothing	WITHOUT_CLASSIFICATION	0.9999942817585185	WITHOUT_CLASSIFICATION	5.718241481580311E-6	DEFECT
// Default implementation is to do nothing	WITHOUT_CLASSIFICATION	0.9999942817585185	WITHOUT_CLASSIFICATION	5.718241481580311E-6	DEFECT
// Required for MouseListener interface, but we only care about clicks	WITHOUT_CLASSIFICATION	0.999979120620415	WITHOUT_CLASSIFICATION	2.087937958495027E-5	DEFECT
// Required for MouseListener interface, but we only care about clicks	WITHOUT_CLASSIFICATION	0.999979120620415	WITHOUT_CLASSIFICATION	2.087937958495027E-5	DEFECT
// Required for MouseListener interface, but we only care about clicks	WITHOUT_CLASSIFICATION	0.999979120620415	WITHOUT_CLASSIFICATION	2.087937958495027E-5	DEFECT
// Required for MouseListener interface, but we only care about clicks	WITHOUT_CLASSIFICATION	0.999979120620415	WITHOUT_CLASSIFICATION	2.087937958495027E-5	DEFECT
// No need to update if model element went away	WITHOUT_CLASSIFICATION	0.9999997753223733	WITHOUT_CLASSIFICATION	2.2467762675963242E-7	DEFECT
// Required for KeyListener interface, but not used	WITHOUT_CLASSIFICATION	0.9999938489097605	WITHOUT_CLASSIFICATION	6.151090239491316E-6	DEFECT
// Required for KeyListener interface, but not used	WITHOUT_CLASSIFICATION	0.9999938489097605	WITHOUT_CLASSIFICATION	6.151090239491316E-6	DEFECT
// Both ends must be defined and nodes that are on the graph already.	WITHOUT_CLASSIFICATION	0.9999980942688366	WITHOUT_CLASSIFICATION	1.9057311633904912E-6	DEFECT
//////////////////////////////////////////////////////////////// // internal methods	WITHOUT_CLASSIFICATION	0.999999378946584	WITHOUT_CLASSIFICATION	6.210534160396126E-7	DEFECT
// If the edge is from a circle to a circle (e.g. between use // cases) we have our own implementation overriding GEF. Which // attempts to keep the edges perpendicular if the edge is already // close to perpendicular.	WITHOUT_CLASSIFICATION	0.9999999924258176	WITHOUT_CLASSIFICATION	7.574182494462235E-9	DEFECT
//newFC = _content;	WITHOUT_CLASSIFICATION	0.9999968052878504	WITHOUT_CLASSIFICATION	3.194712149562269E-6	DEFECT
// GEF sets a different Fig than the one that we had at construction // time, so we need to set its color and width	WITHOUT_CLASSIFICATION	0.9999999583351155	WITHOUT_CLASSIFICATION	4.1664884589549224E-8	DEFECT
// place the edge on the layer and update the diagram	WITHOUT_CLASSIFICATION	0.9999989041944505	WITHOUT_CLASSIFICATION	1.0958055495677982E-6	DEFECT
/* end computeRoute */	WITHOUT_CLASSIFICATION	0.9999943398942381	WITHOUT_CLASSIFICATION	5.6601057618514E-6	DEFECT
//TODO: Does this help?	WITHOUT_CLASSIFICATION	0.9323909116642557	DEFECT	0.06760908833574437	WITHOUT_CLASSIFICATION
// If this is not a circle to circle edge we default to let GEF // calculate edge route.	WITHOUT_CLASSIFICATION	0.9999948859521605	WITHOUT_CLASSIFICATION	5.114047839554267E-6	DEFECT
// ? two iterations of refinement, maybe should be a for-loop	WITHOUT_CLASSIFICATION	0.9999966231930615	WITHOUT_CLASSIFICATION	3.3768069384606732E-6	DEFECT
// Give up if the assocation ends don't have a type defined	WITHOUT_CLASSIFICATION	0.9999985788367763	WITHOUT_CLASSIFICATION	1.4211632236753823E-6	DEFECT
// Get the two ends of any valid edge	WITHOUT_CLASSIFICATION	0.9999979372401887	WITHOUT_CLASSIFICATION	2.0627598112558615E-6	DEFECT
// Only allow binary associations	WITHOUT_CLASSIFICATION	0.999998796867761	WITHOUT_CLASSIFICATION	1.2031322390133468E-6	DEFECT
/* Set the drop location in the case of D&D: */	WITHOUT_CLASSIFICATION	0.9999898136465005	WITHOUT_CLASSIFICATION	1.0186353499536679E-5	DEFECT
// TODO: assumes public	WITHOUT_CLASSIFICATION	0.7587005755705583	WITHOUT_CLASSIFICATION	0.24129942442944174	DEFECT
/*(MElementImport)*/	WITHOUT_CLASSIFICATION	0.9997123316875507	WITHOUT_CLASSIFICATION	2.8766831244927716E-4	DEFECT
// Modifiers ...	WITHOUT_CLASSIFICATION	0.9999959023982763	WITHOUT_CLASSIFICATION	4.097601723717121E-6	DEFECT
/* This sets the lineWidth of all in the group: */	WITHOUT_CLASSIFICATION	0.999909599809497	WITHOUT_CLASSIFICATION	9.040019050299015E-5	DEFECT
/* NameFig and StereotypeFig are handled by parent. */	WITHOUT_CLASSIFICATION	0.9998803342033614	WITHOUT_CLASSIFICATION	1.1966579663856336E-4	DEFECT
// If the line angle is less than 3 degrees then snap the line // straight	WITHOUT_CLASSIFICATION	0.9999998388143281	WITHOUT_CLASSIFICATION	1.6118567183193125E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Methods that implement the MutableGraphModel interface // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997582499995	WITHOUT_CLASSIFICATION	2.417500004802942E-7	DEFECT
// A dependency potentially has many clients and suppliers. We only // consider the first of each (not clear that we should really // accept the case where there is more than one of either)	WITHOUT_CLASSIFICATION	0.9999998182885964	WITHOUT_CLASSIFICATION	1.8171140368169154E-7	DEFECT
// Add the node, check that it is an actor or use case and add it to // the model namespace.	WITHOUT_CLASSIFICATION	0.9999997841748051	WITHOUT_CLASSIFICATION	2.1582519490096105E-7	DEFECT
// Tell GEF its changed	WITHOUT_CLASSIFICATION	0.9999991245097349	WITHOUT_CLASSIFICATION	8.754902651023831E-7	DEFECT
// Add the element and place it in the namespace of the model	WITHOUT_CLASSIFICATION	0.9999998233321008	WITHOUT_CLASSIFICATION	1.7666789926704438E-7	DEFECT
// Tell GEF	WITHOUT_CLASSIFICATION	0.9999920405334698	WITHOUT_CLASSIFICATION	7.95946653019218E-6	DEFECT
// Suggest that actors may not connect (see JavaDoc comment about // this).	WITHOUT_CLASSIFICATION	0.9993023309824497	WITHOUT_CLASSIFICATION	6.976690175502639E-4	DEFECT
// Everything else is OK	WITHOUT_CLASSIFICATION	0.9999837268792385	WITHOUT_CLASSIFICATION	1.6273120761493326E-5	DEFECT
// Remove a node	WITHOUT_CLASSIFICATION	0.9999498863878553	WITHOUT_CLASSIFICATION	5.011361214458053E-5	DEFECT
// Remove an edge	WITHOUT_CLASSIFICATION	0.9999340596757287	WITHOUT_CLASSIFICATION	6.594032427128262E-5	DEFECT
// Something was added - nothing for us to worry about	WITHOUT_CLASSIFICATION	0.999997197932984	WITHOUT_CLASSIFICATION	2.8020670159020847E-6	DEFECT
// Invoke the parent constructor first	WITHOUT_CLASSIFICATION	0.9999991565614561	WITHOUT_CLASSIFICATION	8.434385439567732E-7	DEFECT
// Invoke the parent refresh first	WITHOUT_CLASSIFICATION	0.9999977995474476	WITHOUT_CLASSIFICATION	2.200452552338123E-6	DEFECT
/* end class StylePanelFigUseCase */	WITHOUT_CLASSIFICATION	0.9998285962369188	WITHOUT_CLASSIFICATION	1.714037630812416E-4	DEFECT
// initialize any other Figs here	WITHOUT_CLASSIFICATION	0.9999844817276102	WITHOUT_CLASSIFICATION	1.551827238967322E-5	DEFECT
// Only the head should be filled (not the text)	WITHOUT_CLASSIFICATION	0.9999737184562731	WITHOUT_CLASSIFICATION	2.6281543726786307E-5	DEFECT
//Accumulate a bounding box for all the Figs in the group.	WITHOUT_CLASSIFICATION	0.9999975643120484	WITHOUT_CLASSIFICATION	2.4356879515396483E-6	DEFECT
//      name updating	WITHOUT_CLASSIFICATION	0.9999993899782571	WITHOUT_CLASSIFICATION	6.100217429151058E-7	DEFECT
/*     * Text fig to hold the <<include>> label     */	WITHOUT_CLASSIFICATION	0.9999976438497801	WITHOUT_CLASSIFICATION	2.3561502200340963E-6	DEFECT
// The <<include>> label. // It's not a true stereotype, so don't use the stereotype support	WITHOUT_CLASSIFICATION	0.9999998675993421	WITHOUT_CLASSIFICATION	1.3240065785276905E-7	DEFECT
/* TRY SOME ACTION ERRORS */	WITHOUT_CLASSIFICATION	0.9997230888847816	WITHOUT_CLASSIFICATION	2.7691111521838954E-4	DEFECT
// add Figs to the FigNode in back-to-front order	WITHOUT_CLASSIFICATION	0.9999995836685673	WITHOUT_CLASSIFICATION	4.163314326709753E-7	DEFECT
/* Set the drop location in the case of D&D: */	WITHOUT_CLASSIFICATION	0.9999898136465005	WITHOUT_CLASSIFICATION	1.0186353499536679E-5	DEFECT
/* Check if multiple items are selected: */	WITHOUT_CLASSIFICATION	0.999959234413234	WITHOUT_CLASSIFICATION	4.076558676603228E-5	DEFECT
// Make all the parts match the main fig	WITHOUT_CLASSIFICATION	0.9999842643692382	WITHOUT_CLASSIFICATION	1.5735630761798286E-5	DEFECT
// If the element import is in the old owned, it means it must have // been removed. Make sure the associated model element is removed.	WITHOUT_CLASSIFICATION	0.9999995555610269	WITHOUT_CLASSIFICATION	4.444389730373646E-7	DEFECT
// By default we don't show the attribute check box. Mark this object // as a listener for the check box.	WITHOUT_CLASSIFICATION	0.9999559011011306	WITHOUT_CLASSIFICATION	4.40988988693322E-5	DEFECT
//These are the positions of child figs inside this fig //They must be added in the constructor in this order. //For now the name must not be last as this would force //zero width lines (until GEF is fixed)	WITHOUT_CLASSIFICATION	0.9966653726229837	WITHOUT_CLASSIFICATION	0.0033346273770162777	DEFECT
// add Figs to the FigNode in back-to-front order // Put this rectangle behind the rest, so it goes first	WITHOUT_CLASSIFICATION	0.9999992473726639	WITHOUT_CLASSIFICATION	7.52627336002537E-7	DEFECT
// Make the line dashed	WITHOUT_CLASSIFICATION	0.9999984294394677	WITHOUT_CLASSIFICATION	1.5705605322931943E-6	DEFECT
// Add an arrow with an open arrow head	WITHOUT_CLASSIFICATION	0.9999958734498509	WITHOUT_CLASSIFICATION	4.1265501491175105E-6	DEFECT
// Make the edge go between nearest points	WITHOUT_CLASSIFICATION	0.999999909962228	WITHOUT_CLASSIFICATION	9.003777203287215E-8	DEFECT
// Create a new version of the relevant fig	WITHOUT_CLASSIFICATION	0.9999999414776928	WITHOUT_CLASSIFICATION	5.8522307177351753E-8	DEFECT
// The nodes at the two ends	WITHOUT_CLASSIFICATION	0.9999214985583021	WITHOUT_CLASSIFICATION	7.85014416978749E-5	DEFECT
// The figs for the two end nodes	WITHOUT_CLASSIFICATION	0.9999934381739501	WITHOUT_CLASSIFICATION	6.561826049820837E-6	DEFECT
// Link the new include relationship in to the ends	WITHOUT_CLASSIFICATION	0.9999994951224429	WITHOUT_CLASSIFICATION	5.048775571050372E-7	DEFECT
// Link the new dependency in to the ends	WITHOUT_CLASSIFICATION	0.9999986699685605	WITHOUT_CLASSIFICATION	1.3300314394993301E-6	DEFECT
/* Side effect: This creates the fig: */	WITHOUT_CLASSIFICATION	0.9996173266086046	WITHOUT_CLASSIFICATION	3.826733913954107E-4	DEFECT
/*         * A use case has an external separator.         * External means external to the compartment box.          * This horizontal line sticks out of the box,          * and touches the ellipse edge.         */	WITHOUT_CLASSIFICATION	0.9999999940603822	WITHOUT_CLASSIFICATION	5.939617748557363E-9	DEFECT
// by default, do not show extension points:	WITHOUT_CLASSIFICATION	0.9999947351594317	WITHOUT_CLASSIFICATION	5.264840568188456E-6	DEFECT
/* Use arbitrary dimensions for now. */	WITHOUT_CLASSIFICATION	0.9999621321834334	WITHOUT_CLASSIFICATION	3.786781656651937E-5	DEFECT
// Get the parent vector first	WITHOUT_CLASSIFICATION	0.9999990973385968	WITHOUT_CLASSIFICATION	9.026614032547359E-7	DEFECT
// Formula for a is described in the overall class description.	WITHOUT_CLASSIFICATION	0.9999997753046965	WITHOUT_CLASSIFICATION	2.246953034664533E-7	DEFECT
/* For an ellipse, we can put the box in the middle:  */	WITHOUT_CLASSIFICATION	0.9999110420769268	WITHOUT_CLASSIFICATION	8.895792307314885E-5	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#paint(java.awt.Graphics)     */	WITHOUT_CLASSIFICATION	0.9999999775150291	WITHOUT_CLASSIFICATION	2.2484970833289784E-8	DEFECT
// Make the edge go between nearest points	WITHOUT_CLASSIFICATION	0.999999909962228	WITHOUT_CLASSIFICATION	9.003777203287215E-8	DEFECT
// Add menu to add an extension point or note. Placed one before last, // so the "Properties" entry is always last.	WITHOUT_CLASSIFICATION	0.9999998786756733	WITHOUT_CLASSIFICATION	1.2132432668281316E-7	DEFECT
// Where there is more than one supplier or client, take the first // element in each case. There really ought to be a check that // there are some here for safety.	WITHOUT_CLASSIFICATION	0.9999998241989102	WITHOUT_CLASSIFICATION	1.7580108972108688E-7	DEFECT
// Modifier menu. Placed one before last, so the "Properties" entry is // always last.	WITHOUT_CLASSIFICATION	0.9999999702769918	WITHOUT_CLASSIFICATION	2.972300817857552E-8	DEFECT
// Work out the radii of the ellipse, a and b. The top right corner of // the ellipse (Cartesian coordinates, centered on the origin) will be // at (x,y)	WITHOUT_CLASSIFICATION	0.9999998293083782	WITHOUT_CLASSIFICATION	1.7069162175081086E-7	DEFECT
// Result as integers, rounded up. We ensure that the radii are // integers for convenience.	WITHOUT_CLASSIFICATION	0.9999998991262196	WITHOUT_CLASSIFICATION	1.0087378048514164E-7	DEFECT
/*     * Use the code from the FigCircle, not the one from Fig.     */	WITHOUT_CLASSIFICATION	0.9999958214026674	WITHOUT_CLASSIFICATION	4.178597332534167E-6	DEFECT
/* Let's register for events from all modelelements         * that change the name or body text:          */	WITHOUT_CLASSIFICATION	0.9999998116391339	WITHOUT_CLASSIFICATION	1.8836086608357755E-7	DEFECT
/* Register for name changes, added extensionPoints             * and abstract makes the text italic.             * All Figs need to listen to "remove", too: */	WITHOUT_CLASSIFICATION	0.9999985045155252	WITHOUT_CLASSIFICATION	1.495484474814381E-6	DEFECT
// register for extension points:	WITHOUT_CLASSIFICATION	0.9999995441941604	WITHOUT_CLASSIFICATION	4.5580583955168886E-7	DEFECT
// Set bounds will be called from our superclass constructor before // our constructor has run, so make sure this gets set up if needed.	WITHOUT_CLASSIFICATION	0.9999999635751511	WITHOUT_CLASSIFICATION	3.642484892018242E-8	DEFECT
// Set up FigText to hold the condition.	WITHOUT_CLASSIFICATION	0.9999317683092884	WITHOUT_CLASSIFICATION	6.823169071158696E-5	DEFECT
// Join all into a group	WITHOUT_CLASSIFICATION	0.999997742176441	WITHOUT_CLASSIFICATION	2.2578235590164682E-6	DEFECT
// UML spec for Extend doesn't call for name nor stereotype	WITHOUT_CLASSIFICATION	0.999916035137957	WITHOUT_CLASSIFICATION	8.396486204302374E-5	DEFECT
// Make sure the line is dashed	WITHOUT_CLASSIFICATION	0.9999997021093484	WITHOUT_CLASSIFICATION	2.978906516247949E-7	DEFECT
/* Set up the property panels for use case diagrams: */	WITHOUT_CLASSIFICATION	0.9993945996072493	WITHOUT_CLASSIFICATION	6.054003927507116E-4	DEFECT
// Actions specific to the use case diagram toolbar	WITHOUT_CLASSIFICATION	0.9999999926070455	WITHOUT_CLASSIFICATION	7.39295438267992E-9	DEFECT
// The renderer should be a singleton	WITHOUT_CLASSIFICATION	0.9999968973804452	WITHOUT_CLASSIFICATION	3.102619554777395E-6	DEFECT
/*     * Allow all Packages and Classifiers..     */	WITHOUT_CLASSIFICATION	0.9999998544006226	WITHOUT_CLASSIFICATION	1.4559937753298182E-7	DEFECT
/* TRY THE PREDECESSORS */	WITHOUT_CLASSIFICATION	0.9998644285426622	WITHOUT_CLASSIFICATION	1.3557145733771568E-4	DEFECT
// If location is non-null, convert to a rectangle that we can use	WITHOUT_CLASSIFICATION	0.9999998159331467	WITHOUT_CLASSIFICATION	1.8406685327799523E-7	DEFECT
// TODO: This is using the default platform character encoding // specifying an encoding will produce more predictable results	WITHOUT_CLASSIFICATION	0.9975663179830484	WITHOUT_CLASSIFICATION	0.00243368201695171	DEFECT
// The <<extend>> label. // It's not a true stereotype, so don't use the stereotype support //int y = getNameFig().getBounds().height;	WITHOUT_CLASSIFICATION	0.9999999491564836	WITHOUT_CLASSIFICATION	5.084351640394101E-8	DEFECT
// Place in the middle of the line and ensure the line is dashed.  Add // an arrow with an open arrow head. Remember that for an extends // relationship, the arrow points to the base use case, but because of // the way we draw it, that is still the destination end.	WITHOUT_CLASSIFICATION	0.9999999976463296	WITHOUT_CLASSIFICATION	2.3536703832333608E-9	DEFECT
// Let the group recalculate its bounds and then tell GEF we've // finished.	WITHOUT_CLASSIFICATION	0.9999997053614388	WITHOUT_CLASSIFICATION	2.946385612496006E-7	DEFECT
/* We accept a Package, but not a Model or a Subsystem. */	WITHOUT_CLASSIFICATION	0.9999780253235434	WITHOUT_CLASSIFICATION	2.1974676456517513E-5	DEFECT
/* If we do not exclude a Model here, then dropping the                 * Model on a UseCase diagram causes a package                 * to be drawn. */	WITHOUT_CLASSIFICATION	0.9999948499384271	WITHOUT_CLASSIFICATION	5.15006157286615E-6	DEFECT
// empty list	WITHOUT_CLASSIFICATION	0.9999979815966545	WITHOUT_CLASSIFICATION	2.0184033455653002E-6	DEFECT
// private constructor to enforce singleton	WITHOUT_CLASSIFICATION	0.9999999120108367	WITHOUT_CLASSIFICATION	8.798916332389655E-8	DEFECT
// some convenience methods	WITHOUT_CLASSIFICATION	0.9999905611269161	WITHOUT_CLASSIFICATION	9.438873083906486E-6	DEFECT
// read until the end section is found, discard // generated content	WITHOUT_CLASSIFICATION	0.9999782498597447	WITHOUT_CLASSIFICATION	2.1750140255385228E-5	DEFECT
/**     * Constructor.     * <p>     * TODO: Correct?     *     * @param nodes The UML elements, typically classifiers, to generate.     * @param inModel <code>true</code> if the path is in the model.     */	WITHOUT_CLASSIFICATION	0.9411551487394979	DEFECT	0.0588448512605021	WITHOUT_CLASSIFICATION
// Class Table	WITHOUT_CLASSIFICATION	0.9999993516219541	WITHOUT_CLASSIFICATION	6.483780458420666E-7	DEFECT
// Select Buttons	WITHOUT_CLASSIFICATION	0.9999952302209622	WITHOUT_CLASSIFICATION	4.7697790378997605E-6	DEFECT
// Output Directory	WITHOUT_CLASSIFICATION	0.9999994698296325	WITHOUT_CLASSIFICATION	5.301703675386385E-7	DEFECT
// Compile Checkbox	WITHOUT_CLASSIFICATION	0.9999981769840804	WITHOUT_CLASSIFICATION	1.8230159195455957E-6	DEFECT
// TODO: the last argument (recursive flag) should be a // selectable option	WITHOUT_CLASSIFICATION	0.9734046427643096	WITHOUT_CLASSIFICATION	0.02659535723569034	DEFECT
// skip backup files. This is actually a workaround for the // cpp generator, which always creates backup files (it's a // bug).	WITHOUT_CLASSIFICATION	0.9999337834650085	WITHOUT_CLASSIFICATION	6.62165349915093E-5	DEFECT
// TODO: Should be improved so that it's recognized whether there is something selected that can actually be generated // Nothing selected in the diagram	WITHOUT_CLASSIFICATION	0.5240727515166312	WITHOUT_CLASSIFICATION	0.4759272484833687	DEFECT
// TODO: This is using the default platform character // encoding.  Specifying an encoding will produce more // predictable results	WITHOUT_CLASSIFICATION	0.9980457720982028	WITHOUT_CLASSIFICATION	0.001954227901797284	DEFECT
// TODO: Get saved default directory // outputDirectoryComboBox.getModel().setSelectedItem(savedDir);	WITHOUT_CLASSIFICATION	0.9997337481050709	WITHOUT_CLASSIFICATION	2.6625189492911086E-4	DEFECT
// TODO: Get default output directory from user settings // Project p = ProjectManager.getManager().getCurrentProject(); // p.getProjectSettings().setGenerationOutputDir(path);	WITHOUT_CLASSIFICATION	0.9991854880886771	WITHOUT_CLASSIFICATION	8.145119113229369E-4	DEFECT
// Generate Button --------------------------------------	WITHOUT_CLASSIFICATION	0.9999980176309478	WITHOUT_CLASSIFICATION	1.9823690522351205E-6	DEFECT
// remove trailing /	WITHOUT_CLASSIFICATION	0.9999968419027883	WITHOUT_CLASSIFICATION	3.158097211802238E-6	DEFECT
// classify nodes by base path	WITHOUT_CLASSIFICATION	0.9999898449054752	WITHOUT_CLASSIFICATION	1.0155094524867482E-5	DEFECT
// else ignore	WITHOUT_CLASSIFICATION	0.9999997651462995	WITHOUT_CLASSIFICATION	2.348537004593034E-7	DEFECT
// generate the files	WITHOUT_CLASSIFICATION	0.999999506244223	WITHOUT_CLASSIFICATION	4.937557770693707E-7	DEFECT
// Doesn't really matter what set we use.	WITHOUT_CLASSIFICATION	0.999949970154139	WITHOUT_CLASSIFICATION	5.002984586105157E-5	DEFECT
// Show Filechooser to select OutputDirectory	WITHOUT_CLASSIFICATION	0.999999598605839	WITHOUT_CLASSIFICATION	4.013941610250995E-7	DEFECT
/* end class ClassGenerationDialog */	WITHOUT_CLASSIFICATION	0.9999156681086634	WITHOUT_CLASSIFICATION	8.433189133655311E-5	DEFECT
/* end class TableModelClassChecks */	WITHOUT_CLASSIFICATION	0.9999456894075145	WITHOUT_CLASSIFICATION	5.4310592485546586E-5	DEFECT
/* Try Changing the direction of m7 */	WITHOUT_CLASSIFICATION	0.9999682953238257	WITHOUT_CLASSIFICATION	3.170467617434054E-5	DEFECT
// private constructor to enforce singleton	WITHOUT_CLASSIFICATION	0.9999999120108367	WITHOUT_CLASSIFICATION	8.798916332389655E-8	DEFECT
// The diagram already exists in this project. Select it // as the current target.	WITHOUT_CLASSIFICATION	0.9999995827523089	WITHOUT_CLASSIFICATION	4.1724769110993646E-7	DEFECT
// ////////////// // TableModel implementation	WITHOUT_CLASSIFICATION	0.9999531139847346	WITHOUT_CLASSIFICATION	4.6886015265392443E-5	DEFECT
//        ArgoEventPump.fireEvent( //                new ArgoImporterEvent(ArgoEventTypes.IMPORTER_ADDED, gen));	WITHOUT_CLASSIFICATION	0.9999999779298857	WITHOUT_CLASSIFICATION	2.207011420206197E-8	DEFECT
// Check if this diagram already exists in the project	WITHOUT_CLASSIFICATION	0.9999932561339702	WITHOUT_CLASSIFICATION	6.74386602979506E-6	DEFECT
// Otherwise create a new classdiagram for the package.	WITHOUT_CLASSIFICATION	0.9999998497363313	WITHOUT_CLASSIFICATION	1.5026366865776049E-7	DEFECT
// if the classifier is not in the current diagram, add it:	WITHOUT_CLASSIFICATION	0.9999969298934194	WITHOUT_CLASSIFICATION	3.0701065806661285E-6	DEFECT
/*             * The following calls are ORDER DEPENDENT. Not sure why, but the             * layer add must come before the model add or we'll end up with             * duplicate figures in the diagram. - tfm             */	WITHOUT_CLASSIFICATION	0.9999651271463597	WITHOUT_CLASSIFICATION	3.487285364038516E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
// the class is in the diagram // so we are on a second pass, // find the fig for this class can update its visible state.	WITHOUT_CLASSIFICATION	0.9999966562189441	WITHOUT_CLASSIFICATION	3.3437810559112004E-6	DEFECT
// add edges // for a 2-pass r.e. process we might have already added the // class but not its edges	WITHOUT_CLASSIFICATION	0.9997527852898717	WITHOUT_CLASSIFICATION	2.4721471012830137E-4	DEFECT
// "Java" is the default module for historical reasons, // but it's not required to be there	WITHOUT_CLASSIFICATION	0.9999983472320102	WITHOUT_CLASSIFICATION	1.652767989759394E-6	DEFECT
// the previous line helps, but we better check again:	WITHOUT_CLASSIFICATION	0.9999801236296921	WITHOUT_CLASSIFICATION	1.9876370307914934E-5	DEFECT
// not a SuffixFilter selected, so we take all	WITHOUT_CLASSIFICATION	0.9999979789849961	WITHOUT_CLASSIFICATION	2.021015003967143E-6	DEFECT
// filter out all unchanged files	WITHOUT_CLASSIFICATION	0.9999999906540961	WITHOUT_CLASSIFICATION	9.345903938146023E-9	DEFECT
// set the lastModified value	WITHOUT_CLASSIFICATION	0.9999996989335388	WITHOUT_CLASSIFICATION	3.0106646124338095E-7	DEFECT
//return Arrays.copyOf(selectedFiles, selectedFiles.length);	WITHOUT_CLASSIFICATION	0.9999999617516389	WITHOUT_CLASSIFICATION	3.82483612332374E-8	DEFECT
//          iss.setValue(countFiles + (i + 1) / 10);	WITHOUT_CLASSIFICATION	0.9999984341226813	WITHOUT_CLASSIFICATION	1.5658773188101961E-6	DEFECT
// Roughly equivalent to and derived from old Import.doFile()	WITHOUT_CLASSIFICATION	0.9999971927806401	WITHOUT_CLASSIFICATION	2.8072193599592818E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
/*         * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)         */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*         * @see javax.swing.JFileChooser#approveSelection()         */	WITHOUT_CLASSIFICATION	0.9999953776106256	WITHOUT_CLASSIFICATION	4.6223893744267485E-6	DEFECT
/*         * @see javax.swing.JFileChooser#cancelSelection()         */	WITHOUT_CLASSIFICATION	0.9999989206796135	WITHOUT_CLASSIFICATION	1.0793203864958241E-6	DEFECT
// New style importers don't create diagrams, so we'll do it // based on the list of newElements that they created	WITHOUT_CLASSIFICATION	0.9999999595822735	WITHOUT_CLASSIFICATION	4.041772642014153E-8	DEFECT
// Do layout even if problems occurred during import	WITHOUT_CLASSIFICATION	0.9999981177209414	WITHOUT_CLASSIFICATION	1.8822790586319489E-6	DEFECT
// Add messages from caught exceptions	WITHOUT_CLASSIFICATION	0.9999945365649198	WITHOUT_CLASSIFICATION	5.463435080157724E-6	DEFECT
// Select the correct diagram (implicitly creates it)	WITHOUT_CLASSIFICATION	0.9999780875698251	WITHOUT_CLASSIFICATION	2.1912430174840186E-5	DEFECT
// Add the element to the diagram	WITHOUT_CLASSIFICATION	0.9999998578133802	WITHOUT_CLASSIFICATION	1.4218661981130856E-7	DEFECT
/*     * Print an exception trace to a string buffer     */	WITHOUT_CLASSIFICATION	0.9999978693950881	WITHOUT_CLASSIFICATION	2.1306049119904277E-6	DEFECT
// TODO: Get the list of extended settings from the current // language importer and add those too	WITHOUT_CLASSIFICATION	0.999104960081358	WITHOUT_CLASSIFICATION	8.950399186419932E-4	DEFECT
// level 0 import detail	WITHOUT_CLASSIFICATION	0.9999988000790343	WITHOUT_CLASSIFICATION	1.199920965660211E-6	DEFECT
// level 1 import detail	WITHOUT_CLASSIFICATION	0.9999989554292609	WITHOUT_CLASSIFICATION	1.0445707390318181E-6	DEFECT
// level 2 import detail	WITHOUT_CLASSIFICATION	0.9999990201415222	WITHOUT_CLASSIFICATION	9.798584777443554E-7	DEFECT
// build the configPanel:	WITHOUT_CLASSIFICATION	0.9999894329382198	WITHOUT_CLASSIFICATION	1.0567061780127149E-5	DEFECT
// de-selects the fig minimising & layout // if we are not creating diagrams	WITHOUT_CLASSIFICATION	0.9999985286240015	WITHOUT_CLASSIFICATION	1.4713759984643218E-6	DEFECT
// select the level of import // 0 - classifiers only // 1 - classifiers plus feature specifications // 2 - full import, feature detail	WITHOUT_CLASSIFICATION	0.9999998232513798	WITHOUT_CLASSIFICATION	1.767486201952931E-7	DEFECT
// cp1252 is often the default, but windows-1252 is the name listed // by Charset.availableCharsets	WITHOUT_CLASSIFICATION	0.9999988555504952	WITHOUT_CLASSIFICATION	1.1444495047756452E-6	DEFECT
/*     * Get the extension panel for the configuration settings.     */	WITHOUT_CLASSIFICATION	0.9999999862216901	WITHOUT_CLASSIFICATION	1.3778309899490532E-8	DEFECT
// ExplorerEventAdaptor.getInstance().structureChanged(); // ProjectBrowser.getInstance().getStatusBar().showProgress(0);	WITHOUT_CLASSIFICATION	0.999999997364149	WITHOUT_CLASSIFICATION	2.6358509491603216E-9	DEFECT
/*     * Create chooser for objects we are to import. Old style modules get to     * provide their own (although I don't believe any of them do), while new     * style modules get the a chooser provided by us (which matches what the     * abstract class FileImportSupport used to provide).     */	WITHOUT_CLASSIFICATION	0.9999998859997862	WITHOUT_CLASSIFICATION	1.1400021371719869E-7	DEFECT
// this is because of the (senseless?) "All files" FileFilter	WITHOUT_CLASSIFICATION	0.9999987035558956	WITHOUT_CLASSIFICATION	1.2964441043460723E-6	DEFECT
// Parsing file x of z.	WITHOUT_CLASSIFICATION	0.9999997174903478	WITHOUT_CLASSIFICATION	2.8250965226870147E-7	DEFECT
// progress bar	WITHOUT_CLASSIFICATION	0.9999972446739619	WITHOUT_CLASSIFICATION	2.7553260381800186E-6	DEFECT
// For some reason, this alleged directory is a single file // This could be that there is some confusion or just // the normal, that a single file was selected and is // supposed to be imported.	WITHOUT_CLASSIFICATION	0.9999990077677137	WITHOUT_CLASSIFICATION	9.92232286292846E-7	DEFECT
// Get the contents of the directory	WITHOUT_CLASSIFICATION	0.9999998737039671	WITHOUT_CLASSIFICATION	1.262960328176448E-7	DEFECT
// The following test can cause trouble with // links, because links are accepted as // directories, even if they link files. Links // could also result in infinite loops. For this // reason we don't do this traversing recursively.	WITHOUT_CLASSIFICATION	0.9999999610818401	WITHOUT_CLASSIFICATION	3.8918159884871245E-8	DEFECT
// If this file is a directory	WITHOUT_CLASSIFICATION	0.9998351282769151	WITHOUT_CLASSIFICATION	1.6487172308486987E-4	DEFECT
// TODO: Add filename ?	WITHOUT_CLASSIFICATION	0.5951118559446179	DEFECT	0.40488814405538215	WITHOUT_CLASSIFICATION
// can't remove the last file	WITHOUT_CLASSIFICATION	0.9999638219679291	WITHOUT_CLASSIFICATION	3.617803207087486E-5	DEFECT
// can't remove from existing one so create new one.	WITHOUT_CLASSIFICATION	0.9999998360354067	WITHOUT_CLASSIFICATION	1.6396459337634315E-7	DEFECT
// Error/warning messageArea	WITHOUT_CLASSIFICATION	0.9999584658990504	WITHOUT_CLASSIFICATION	4.1534100949716555E-5	DEFECT
//        gbc.gridheight = 10;	WITHOUT_CLASSIFICATION	0.9999995107822343	WITHOUT_CLASSIFICATION	4.892177656971615E-7	DEFECT
// cancel/close button	WITHOUT_CLASSIFICATION	0.9999996362144894	WITHOUT_CLASSIFICATION	3.6378551056814727E-7	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
//////////////////////////////////////////////////////////////// // constructors	WITHOUT_CLASSIFICATION	0.9999996493752797	WITHOUT_CLASSIFICATION	3.5062472022456624E-7	DEFECT
/*         * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)         */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*         * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)         */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// the introducing label	WITHOUT_CLASSIFICATION	0.999996071565257	WITHOUT_CLASSIFICATION	3.928434742876785E-6	DEFECT
// User closing the progress window is interpreted as cancel request	WITHOUT_CLASSIFICATION	0.9999999586729472	WITHOUT_CLASSIFICATION	4.132705268198943E-8	DEFECT
// panel for controls	WITHOUT_CLASSIFICATION	0.999998742391903	WITHOUT_CLASSIFICATION	1.2576080970119778E-6	DEFECT
//This method can be called only if //there's a valid selection //so go ahead and remove whatever's selected.	WITHOUT_CLASSIFICATION	0.9999978422032468	WITHOUT_CLASSIFICATION	2.157796753154002E-6	DEFECT
//nothings left, disable firing.	WITHOUT_CLASSIFICATION	0.9999772387661334	WITHOUT_CLASSIFICATION	2.2761233866578394E-5	DEFECT
//Select an index.	WITHOUT_CLASSIFICATION	0.9999466369690627	WITHOUT_CLASSIFICATION	5.336303093733398E-5	DEFECT
//removed item in last position	WITHOUT_CLASSIFICATION	0.9999967810882973	WITHOUT_CLASSIFICATION	3.2189117028116732E-6	DEFECT
// Just quit	WITHOUT_CLASSIFICATION	0.9999952803825682	WITHOUT_CLASSIFICATION	4.719617431742758E-6	DEFECT
// the text box containing the problem messages	WITHOUT_CLASSIFICATION	0.9999987225565755	WITHOUT_CLASSIFICATION	1.2774434245306454E-6	DEFECT
// continue and abort buttons	WITHOUT_CLASSIFICATION	0.9999960555970901	WITHOUT_CLASSIFICATION	3.944402909899503E-6	DEFECT
// listeners	WITHOUT_CLASSIFICATION	0.9999989612276636	WITHOUT_CLASSIFICATION	1.0387723363628945E-6	DEFECT
//stores the action command into the UMLPlainTextDocument //class which is also used //for setProperty and getProperty	WITHOUT_CLASSIFICATION	0.9999999137429	WITHOUT_CLASSIFICATION	8.625709994171918E-8	DEFECT
// TODO: this seems to be called at startup only so no check so far	WITHOUT_CLASSIFICATION	0.611056205082574	WITHOUT_CLASSIFICATION	0.3889437949174262	DEFECT
// Add an invisible button to be used when everything is off	WITHOUT_CLASSIFICATION	0.9999995424114257	WITHOUT_CLASSIFICATION	4.575885742417653E-7	DEFECT
/*|  //removed to workaround problems with autosplit                     OCLEditor.OPTIONMASK_AUTOSPLIT*/	WITHOUT_CLASSIFICATION	0.9999678497174618	WITHOUT_CLASSIFICATION	3.215028253819313E-5	DEFECT
//TabModelTarget interface methods	WITHOUT_CLASSIFICATION	0.9999997438725857	WITHOUT_CLASSIFICATION	2.5612741433928015E-7	DEFECT
/*     * @see java.awt.event.ComponentListener#componentShown(java.awt.event.ComponentEvent)     */	WITHOUT_CLASSIFICATION	0.9999994542146569	WITHOUT_CLASSIFICATION	5.457853430875161E-7	DEFECT
// Process the listeners last to first, notifying // those that are interested in this event	WITHOUT_CLASSIFICATION	0.9999999594702297	WITHOUT_CLASSIFICATION	4.052977032330427E-8	DEFECT
// Lazily create the event:	WITHOUT_CLASSIFICATION	0.9999995009738529	WITHOUT_CLASSIFICATION	4.99026147136317E-7	DEFECT
// Lazily create the event:	WITHOUT_CLASSIFICATION	0.9999995009738529	WITHOUT_CLASSIFICATION	4.99026147136317E-7	DEFECT
// Lazily create the event:	WITHOUT_CLASSIFICATION	0.9999995009738529	WITHOUT_CLASSIFICATION	4.99026147136317E-7	DEFECT
// Lazily create the event:	WITHOUT_CLASSIFICATION	0.9999995009738529	WITHOUT_CLASSIFICATION	4.99026147136317E-7	DEFECT
// Guaranteed to return a non-null array	WITHOUT_CLASSIFICATION	0.9999999594285716	WITHOUT_CLASSIFICATION	4.05714284274186E-8	DEFECT
// Guaranteed to return a non-null array	WITHOUT_CLASSIFICATION	0.9999999594285716	WITHOUT_CLASSIFICATION	4.05714284274186E-8	DEFECT
// Guaranteed to return a non-null array	WITHOUT_CLASSIFICATION	0.9999999594285716	WITHOUT_CLASSIFICATION	4.05714284274186E-8	DEFECT
// Guaranteed to return a non-null array	WITHOUT_CLASSIFICATION	0.9999999594285716	WITHOUT_CLASSIFICATION	4.05714284274186E-8	DEFECT
// Update our model with our saved target	WITHOUT_CLASSIFICATION	0.9999999440907767	WITHOUT_CLASSIFICATION	5.590922318364402E-8	DEFECT
// There is no need to test if classes is empty because // the shouldBeEnabled mechanism blanks out the possibility to // choose this alternative in this case.	WITHOUT_CLASSIFICATION	0.9999772883718793	WITHOUT_CLASSIFICATION	2.271162812073569E-5	DEFECT
//List classes = getCandidates(); //return classes.size() > 0;	WITHOUT_CLASSIFICATION	0.9999841419176858	WITHOUT_CLASSIFICATION	1.5858082314136243E-5	DEFECT
// Our first button is invisible.   // Selecting it deselects all visible buttons.	WITHOUT_CLASSIFICATION	0.999999802265686	WITHOUT_CLASSIFICATION	1.9773431392645953E-7	DEFECT
// Set editor's model	WITHOUT_CLASSIFICATION	0.9999954943563221	WITHOUT_CLASSIFICATION	4.505643677979432E-6	DEFECT
// check ocl parsing constraints	WITHOUT_CLASSIFICATION	0.9999998185549344	WITHOUT_CLASSIFICATION	1.8144506572137936E-7	DEFECT
// do not create a constraint:	WITHOUT_CLASSIFICATION	0.9999996680182036	WITHOUT_CLASSIFICATION	3.319817963144135E-7	DEFECT
// Parse and check specified constraint.	WITHOUT_CLASSIFICATION	0.9999999987177682	WITHOUT_CLASSIFICATION	1.2822317501226618E-9	DEFECT
// Ignored: Highly unlikely, and what would we // do anyway?  log it	WITHOUT_CLASSIFICATION	0.9872498722287242	WITHOUT_CLASSIFICATION	0.012750127771275828	DEFECT
// Split constraint body, if user wants us to	WITHOUT_CLASSIFICATION	0.9999999592846245	WITHOUT_CLASSIFICATION	4.0715375545980386E-8	DEFECT
// the constraint _must_ be owned by a namespace	WITHOUT_CLASSIFICATION	0.999999728636385	WITHOUT_CLASSIFICATION	2.7136361497613093E-7	DEFECT
// the constraint _must_ be owned by a namespace	WITHOUT_CLASSIFICATION	0.999999728636385	WITHOUT_CLASSIFICATION	2.7136361497613093E-7	DEFECT
// Store constraint body	WITHOUT_CLASSIFICATION	0.9999998174121111	WITHOUT_CLASSIFICATION	1.8258788891450125E-7	DEFECT
// New constraint, first time setData is called	WITHOUT_CLASSIFICATION	0.9999993855341534	WITHOUT_CLASSIFICATION	6.144658465963769E-7	DEFECT
// a runtime exception that occurs when some // internal test fails	WITHOUT_CLASSIFICATION	0.9999996115368904	WITHOUT_CLASSIFICATION	3.884631095301592E-7	DEFECT
// Check name for consistency with spec	WITHOUT_CLASSIFICATION	0.9999994771201365	WITHOUT_CLASSIFICATION	5.228798634557073E-7	DEFECT
// Set name	WITHOUT_CLASSIFICATION	0.9999966295519117	WITHOUT_CLASSIFICATION	3.370448088328997E-6	DEFECT
// Also set name in constraint body -- Added 03/14/2001	WITHOUT_CLASSIFICATION	0.9999999536569788	WITHOUT_CLASSIFICATION	4.6343021128815365E-8	DEFECT
// replace name	WITHOUT_CLASSIFICATION	0.9999983206417065	WITHOUT_CLASSIFICATION	1.6793582935650633E-6	DEFECT
// OK, so that didn't work out... Just ignore // any problems and don't set the name in the // constraint body better had log it.	WITHOUT_CLASSIFICATION	0.986811921131137	WITHOUT_CLASSIFICATION	0.013188078868862998	DEFECT
// TODO: Why is this ignored? - tfm - 20070110	WITHOUT_CLASSIFICATION	0.9851117406424366	DEFECT	0.014888259357563563	WITHOUT_CLASSIFICATION
/* TRY PREDECESSORS */	WITHOUT_CLASSIFICATION	0.9999123989206192	WITHOUT_CLASSIFICATION	8.760107938079983E-5	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
//        cmd.setObjects(run.getParams().get(0));	WITHOUT_CLASSIFICATION	0.9999997572496231	WITHOUT_CLASSIFICATION	2.42750376917229E-7	DEFECT
/*     * @see java.awt.event.ComponentListener#componentHidden(java.awt.event.ComponentEvent)     */	WITHOUT_CLASSIFICATION	0.9999997197708684	WITHOUT_CLASSIFICATION	2.802291314915078E-7	DEFECT
// Process the listeners last to first, notifying // those that are interested in this event	WITHOUT_CLASSIFICATION	0.9999999594702297	WITHOUT_CLASSIFICATION	4.052977032330427E-8	DEFECT
// Process the listeners last to first, notifying // those that are interested in this event	WITHOUT_CLASSIFICATION	0.9999999594702297	WITHOUT_CLASSIFICATION	4.052977032330427E-8	DEFECT
// Process the listeners last to first, notifying // those that are interested in this event	WITHOUT_CLASSIFICATION	0.9999999594702297	WITHOUT_CLASSIFICATION	4.052977032330427E-8	DEFECT
// We have no model event listeners, so no need to do anything	WITHOUT_CLASSIFICATION	0.99999984590787	WITHOUT_CLASSIFICATION	1.540921299571319E-7	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
/* Do nothing by default. */	WITHOUT_CLASSIFICATION	0.9999919340977799	WITHOUT_CLASSIFICATION	8.06590222026835E-6	DEFECT
/* Do nothing by default. */	WITHOUT_CLASSIFICATION	0.9999919340977799	WITHOUT_CLASSIFICATION	8.06590222026835E-6	DEFECT
// TODO: I18N // Don't use the empty string for this or it won't show in the list	WITHOUT_CLASSIFICATION	0.9604300204255202	DEFECT	0.03956997957447991	WITHOUT_CLASSIFICATION
// It would be better if we didn't need the container to get // the target. This constructor can have zero parameters as // soon as we improve targetChanged.	WITHOUT_CLASSIFICATION	0.9999990297888984	WITHOUT_CLASSIFICATION	9.702111016492897E-7	DEFECT
/* TODO: Here too? */	WITHOUT_CLASSIFICATION	0.6842972271221248	DEFECT	0.3157027728778751	WITHOUT_CLASSIFICATION
/* TODO: Here too? */	WITHOUT_CLASSIFICATION	0.6842972271221248	DEFECT	0.3157027728778751	WITHOUT_CLASSIFICATION
/* This should not be necessary, but let's be sure: */	WITHOUT_CLASSIFICATION	0.9980707276670322	WITHOUT_CLASSIFICATION	0.0019292723329678008	DEFECT
// end of interval	WITHOUT_CLASSIFICATION	0.9999994730888787	WITHOUT_CLASSIFICATION	5.269111213021547E-7	DEFECT
// start of interval	WITHOUT_CLASSIFICATION	0.9999999518043472	WITHOUT_CLASSIFICATION	4.819565283491335E-8	DEFECT
/* Remove old listeners: */	WITHOUT_CLASSIFICATION	0.9988051364285555	WITHOUT_CLASSIFICATION	0.0011948635714444605	DEFECT
// in middle of interval	WITHOUT_CLASSIFICATION	0.9999989265564628	WITHOUT_CLASSIFICATION	1.0734435371108133E-6	DEFECT
// Allow listening to other elements:	WITHOUT_CLASSIFICATION	0.9999999287375095	WITHOUT_CLASSIFICATION	7.12624904509216E-8	DEFECT
// Allow listening to other elements:	WITHOUT_CLASSIFICATION	0.9999999287375095	WITHOUT_CLASSIFICATION	7.12624904509216E-8	DEFECT
/* Add new listeners: */	WITHOUT_CLASSIFICATION	0.9999288768090001	WITHOUT_CLASSIFICATION	7.112319099995616E-5	DEFECT
/*  MVW: This can never happen, isn't it? */	WITHOUT_CLASSIFICATION	0.9861860964204411	WITHOUT_CLASSIFICATION	0.013813903579558974	DEFECT
// makes sure we can select 'none'	WITHOUT_CLASSIFICATION	0.999999472552788	WITHOUT_CLASSIFICATION	5.274472120945075E-7	DEFECT
// TODO: For large lists, this is doing a linear search of literally thousands of elements	WITHOUT_CLASSIFICATION	0.8296561292187464	DEFECT	0.17034387078125357	WITHOUT_CLASSIFICATION
// Don't try to test this if we're removing the element	WITHOUT_CLASSIFICATION	0.9999968109895122	WITHOUT_CLASSIFICATION	3.189010487666494E-6	DEFECT
// we tried to remove a value	WITHOUT_CLASSIFICATION	0.9999990543152152	WITHOUT_CLASSIFICATION	9.456847848465782E-7	DEFECT
// Object[] args = { newValue };	WITHOUT_CLASSIFICATION	0.9999996347726945	WITHOUT_CLASSIFICATION	3.652273055269292E-7	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
/*     * @see javax.swing.AbstractListModel#fireIntervalRemoved(     *          Object, int, int)     */	WITHOUT_CLASSIFICATION	0.9999998252345678	WITHOUT_CLASSIFICATION	1.7476543225158493E-7	DEFECT
/*     * @see TargetListener#targetAdded(TargetEvent)     */	WITHOUT_CLASSIFICATION	0.999999654492659	WITHOUT_CLASSIFICATION	3.455073409936275E-7	DEFECT
/*     * @see TargetListener#targetRemoved(TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999990515888479	WITHOUT_CLASSIFICATION	9.484111520202286E-7	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// //  if one or the other is null or they are not equal	WITHOUT_CLASSIFICATION	0.9999987235966731	WITHOUT_CLASSIFICATION	1.2764033269183906E-6	DEFECT
// Do not set buildingModel = false here, // otherwise the action for selection is performed.	WITHOUT_CLASSIFICATION	0.9999454942457638	WITHOUT_CLASSIFICATION	5.4505754236096E-5	DEFECT
// catch callers attempting to use one without other	WITHOUT_CLASSIFICATION	0.9999995824534456	WITHOUT_CLASSIFICATION	4.175465544166374E-7	DEFECT
// //  as long as they aren't both null //   (or a really rare identical string pointer)	WITHOUT_CLASSIFICATION	0.9999961779296358	WITHOUT_CLASSIFICATION	3.822070364154708E-6	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// TODO: this seems to be called at startup only so no check so far	WITHOUT_CLASSIFICATION	0.611056205082574	WITHOUT_CLASSIFICATION	0.3889437949174262	DEFECT
// may only occur as child of the model or in a package	WITHOUT_CLASSIFICATION	0.9999999737612549	WITHOUT_CLASSIFICATION	2.6238745049209817E-8	DEFECT
// to rupdate the diagram set the stimulus name again // TODO: Explain that this really works also in the // MDR case. Linus is a sceptic.	WITHOUT_CLASSIFICATION	0.9886234114504044	DEFECT	0.011376588549595605	WITHOUT_CLASSIFICATION
// //    if event source is unknown or //       the event source is the container's target //          then update the field	WITHOUT_CLASSIFICATION	0.9999999675049943	WITHOUT_CLASSIFICATION	3.2495005727602935E-8	DEFECT
// //   check the possibility that this is a promiscuous event	WITHOUT_CLASSIFICATION	0.9999958857929856	WITHOUT_CLASSIFICATION	4.114207014388685E-6	DEFECT
// a deployment diagram shows something about the whole model // according to the UML spec, but we rely on the caller to enforce // that if desired.	WITHOUT_CLASSIFICATION	0.9999741328254571	WITHOUT_CLASSIFICATION	2.586717454297021E-5	DEFECT
// a deployment diagram shows something about the whole model // according to the uml spec	WITHOUT_CLASSIFICATION	0.9999997639847469	WITHOUT_CLASSIFICATION	2.36015253168727E-7	DEFECT
/*     * For a deployment diagram, not just any     * namespace will do - we need a package.     */	WITHOUT_CLASSIFICATION	0.999998262403158	WITHOUT_CLASSIFICATION	1.7375968420097539E-6	DEFECT
// ns is a namespace, but not a package	WITHOUT_CLASSIFICATION	0.9998061808693103	WITHOUT_CLASSIFICATION	1.9381913068973176E-4	DEFECT
// ommit root package name; it's the model's root	WITHOUT_CLASSIFICATION	0.9999929212231969	WITHOUT_CLASSIFICATION	7.078776803023525E-6	DEFECT
// there is a selection	WITHOUT_CLASSIFICATION	0.9999439319114857	WITHOUT_CLASSIFICATION	5.6068088514459135E-5	DEFECT
/* end class ActionCopy */	WITHOUT_CLASSIFICATION	0.9999589382975591	WITHOUT_CLASSIFICATION	4.1061702440882586E-5	DEFECT
/* Add a predicate for ArgoUML's default capabilities: */	WITHOUT_CLASSIFICATION	0.9999944681771316	WITHOUT_CLASSIFICATION	5.531822868526843E-6	DEFECT
//Parser.ParseAndUpdate(modelObject, s);	WITHOUT_CLASSIFICATION	0.9999995734661657	WITHOUT_CLASSIFICATION	4.265338341776969E-7	DEFECT
// remove from the model	WITHOUT_CLASSIFICATION	0.99999027883534	WITHOUT_CLASSIFICATION	9.721164660072555E-6	DEFECT
// It is a UML element that is not a ModelElement	WITHOUT_CLASSIFICATION	0.9999614282973202	WITHOUT_CLASSIFICATION	3.85717026797645E-5	DEFECT
// lets see if this diagram has some figs on it	WITHOUT_CLASSIFICATION	0.9999589866156842	WITHOUT_CLASSIFICATION	4.1013384315858687E-5	DEFECT
// no content of diagram	WITHOUT_CLASSIFICATION	0.9999998906310928	WITHOUT_CLASSIFICATION	1.0936890706699018E-7	DEFECT
// we can delete figs like figrects now too	WITHOUT_CLASSIFICATION	0.9999971146455822	WITHOUT_CLASSIFICATION	2.8853544177932494E-6	DEFECT
/* TODO: If a namespace with sub-classdiagrams is deleted, then {            confirmStr +=                Translator.localize(                    "optionpane.remove-from-model-will-remove-subdiagram");            doAsk = true;        }*/	WITHOUT_CLASSIFICATION	0.7473506909678238	WITHOUT_CLASSIFICATION	0.25264930903217625	DEFECT
// we cannot delete the last diagram	WITHOUT_CLASSIFICATION	0.9999998742535882	WITHOUT_CLASSIFICATION	1.25746411790995E-7	DEFECT
// we cannot delete the model itself	WITHOUT_CLASSIFICATION	0.9999995876995087	WITHOUT_CLASSIFICATION	4.123004912853259E-7	DEFECT
//////////////////////////////////////////////////////////////// // static variables	WITHOUT_CLASSIFICATION	0.9999998818060729	WITHOUT_CLASSIFICATION	1.1819392707333433E-7	DEFECT
//////////////////////////////////////////////////////////////// // constructors	WITHOUT_CLASSIFICATION	0.9999996493752797	WITHOUT_CLASSIFICATION	3.5062472022456624E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994577075367	WITHOUT_CLASSIFICATION	5.422924631974628E-7	DEFECT
/*     * @see javax.swing.text.Document#remove(int, int)     */	WITHOUT_CLASSIFICATION	0.9999995360967645	WITHOUT_CLASSIFICATION	4.6390323546114464E-7	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
//ArgoDiagram activeDiagram = DiagramUtils.getActiveDiagram(); //return (activeDiagram instanceof UMLClassDiagram);	WITHOUT_CLASSIFICATION	0.9999991766731547	WITHOUT_CLASSIFICATION	8.233268452046128E-7	DEFECT
// TODO: Probably really want to cancel editing //((FigTextEditor) focusOwner).cancelEditing();	WITHOUT_CLASSIFICATION	0.8107138411976952	WITHOUT_CLASSIFICATION	0.1892861588023047	DEFECT
// usage of other sureRemove method is legacy. They should be // integrated.	WITHOUT_CLASSIFICATION	0.999999687334477	WITHOUT_CLASSIFICATION	3.126655230647278E-7	DEFECT
// the diagram contains figs so lets ask the user if // he/she is sure	WITHOUT_CLASSIFICATION	0.9999995584363454	WITHOUT_CLASSIFICATION	4.415636546060786E-7	DEFECT
// TODO: This catch block needs to be narrower and do something // with the caught exception - tfm 20071120 // Ignore	WITHOUT_CLASSIFICATION	0.7483794813894665	WITHOUT_CLASSIFICATION	0.2516205186105335	DEFECT
// TODO: All of the following can be broken if we have multiple // targets selected	WITHOUT_CLASSIFICATION	0.668520939814089	DEFECT	0.331479060185911	WITHOUT_CLASSIFICATION
// OK Button ------------------------------------------	WITHOUT_CLASSIFICATION	0.9999966898072196	WITHOUT_CLASSIFICATION	3.3101927804294476E-6	DEFECT
// Delete Button	WITHOUT_CLASSIFICATION	0.9999991241641651	WITHOUT_CLASSIFICATION	8.758358347188129E-7	DEFECT
// confirm with the user that he wants to delete, presenting the // list of settings to delete	WITHOUT_CLASSIFICATION	0.9999999950107668	WITHOUT_CLASSIFICATION	4.989233277058344E-9	DEFECT
// procede with the deletion in the model	WITHOUT_CLASSIFICATION	0.9999972812857159	WITHOUT_CLASSIFICATION	2.718714284213262E-6	DEFECT
// disable the button since no row will be selected now	WITHOUT_CLASSIFICATION	0.9999998470398981	WITHOUT_CLASSIFICATION	1.5296010200282818E-7	DEFECT
/* end class SourcePathDialog */	WITHOUT_CLASSIFICATION	0.9999316083268761	WITHOUT_CLASSIFICATION	6.839167312388762E-5	DEFECT
// Mutators hold write lock & will deadlock if use is not thread safe	WITHOUT_CLASSIFICATION	0.9999886151167381	WITHOUT_CLASSIFICATION	1.1384883261922635E-5	DEFECT
// Mutators hold write lock & will deadlock // if use is not thread-safe	WITHOUT_CLASSIFICATION	0.9999724675901531	WITHOUT_CLASSIFICATION	2.7532409846980027E-5	DEFECT
/* The user cancelled! */	WITHOUT_CLASSIFICATION	0.9999881551226951	WITHOUT_CLASSIFICATION	1.1844877304840367E-5	DEFECT
//Custom button text:	WITHOUT_CLASSIFICATION	0.9999911432796674	WITHOUT_CLASSIFICATION	8.856720332548893E-6	DEFECT
// 0	WITHOUT_CLASSIFICATION	0.9999907596016367	WITHOUT_CLASSIFICATION	9.240398363280449E-6	DEFECT
// 1	WITHOUT_CLASSIFICATION	0.9999796318755377	WITHOUT_CLASSIFICATION	2.0368124462182445E-5	DEFECT
// 2	WITHOUT_CLASSIFICATION	0.9999855271376196	WITHOUT_CLASSIFICATION	1.447286238040149E-5	DEFECT
// 3	WITHOUT_CLASSIFICATION	0.9999858119544588	WITHOUT_CLASSIFICATION	1.4188045541172672E-5	DEFECT
/* TRY SOME PREDECESSOR ERRORS */	WITHOUT_CLASSIFICATION	0.9996288106356588	WITHOUT_CLASSIFICATION	3.71189364341252E-4	DEFECT
//////////////////////////////////////////////////////////////// // constructors	WITHOUT_CLASSIFICATION	0.9999996493752797	WITHOUT_CLASSIFICATION	3.5062472022456624E-7	DEFECT
//////////////////////////////////////////////////////////////// // constructors	WITHOUT_CLASSIFICATION	0.9999996493752797	WITHOUT_CLASSIFICATION	3.5062472022456624E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994577075367	WITHOUT_CLASSIFICATION	5.422924631974628E-7	DEFECT
/*     * @see javax.swing.text.Document#remove(int, int)     */	WITHOUT_CLASSIFICATION	0.9999995360967645	WITHOUT_CLASSIFICATION	4.6390323546114464E-7	DEFECT
/* Try adding the extension from the chosen filter. */	WITHOUT_CLASSIFICATION	0.9999878662087154	WITHOUT_CLASSIFICATION	1.2133791284666555E-5	DEFECT
// adding project files icon	WITHOUT_CLASSIFICATION	0.999982800842206	WITHOUT_CLASSIFICATION	1.719915779397199E-5	DEFECT
//////////////////////////////////////////////////////////////// // main methods	WITHOUT_CLASSIFICATION	0.9999979898465433	WITHOUT_CLASSIFICATION	2.01015345670554E-6	DEFECT
//do not use a custom Icon //the titles of buttons //default button title	WITHOUT_CLASSIFICATION	0.999997524979092	WITHOUT_CLASSIFICATION	2.4750209080408207E-6	DEFECT
// NOTE: This may be called from a different thread, so we need to be // careful of the threading restrictions imposed by AbstractDocument // for mutators to be sure we don't deadlock.	WITHOUT_CLASSIFICATION	0.9999999994627642	WITHOUT_CLASSIFICATION	5.372358651036389E-10	DEFECT
/* end class ActionOpenProject */	WITHOUT_CLASSIFICATION	0.9999590649261135	WITHOUT_CLASSIFICATION	4.0935073886393016E-5	DEFECT
// TODO: see if the new target has a TV that we can proxy	WITHOUT_CLASSIFICATION	0.9267355908205196	WITHOUT_CLASSIFICATION	0.07326440917948045	DEFECT
/* Try adding the default extension. */	WITHOUT_CLASSIFICATION	0.9999968030898838	WITHOUT_CLASSIFICATION	3.1969101162256865E-6	DEFECT
//            LOG.debug("is a Base or Multiplicity");	WITHOUT_CLASSIFICATION	0.9999987711642822	WITHOUT_CLASSIFICATION	1.2288357178512358E-6	DEFECT
/* end class ActionSaveProjectAs */	WITHOUT_CLASSIFICATION	0.9999635007884436	WITHOUT_CLASSIFICATION	3.649921155635874E-5	DEFECT
// only need to this from super()	WITHOUT_CLASSIFICATION	0.9999696856433588	WITHOUT_CLASSIFICATION	3.031435664118496E-5	DEFECT
// --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999961640124067	WITHOUT_CLASSIFICATION	3.8359875933372855E-6	DEFECT
// ----- setup similar to the super() implementation -----	WITHOUT_CLASSIFICATION	0.9999995029976918	WITHOUT_CLASSIFICATION	4.970023081151674E-7	DEFECT
/*     * This action performs the layout and triggers a redraw of the editor pane.     *      * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.9999999402314245	WITHOUT_CLASSIFICATION	5.976857549398221E-8	DEFECT
// Lazily create the event:	WITHOUT_CLASSIFICATION	0.9999995009738529	WITHOUT_CLASSIFICATION	4.99026147136317E-7	DEFECT
// Lazily create the event:	WITHOUT_CLASSIFICATION	0.9999995009738529	WITHOUT_CLASSIFICATION	4.99026147136317E-7	DEFECT
// Lazily create the event:	WITHOUT_CLASSIFICATION	0.9999995009738529	WITHOUT_CLASSIFICATION	4.99026147136317E-7	DEFECT
// Guaranteed to return a non-null array	WITHOUT_CLASSIFICATION	0.9999999594285716	WITHOUT_CLASSIFICATION	4.05714284274186E-8	DEFECT
// Guaranteed to return a non-null array	WITHOUT_CLASSIFICATION	0.9999999594285716	WITHOUT_CLASSIFICATION	4.05714284274186E-8	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
//////////////////////////////////////////////////////////////// // main methods	WITHOUT_CLASSIFICATION	0.9999979898465433	WITHOUT_CLASSIFICATION	2.01015345670554E-6	DEFECT
//////////////////////////////////////////////////////////////// // main methods	WITHOUT_CLASSIFICATION	0.9999979898465433	WITHOUT_CLASSIFICATION	2.01015345670554E-6	DEFECT
/////////////////////////////////////////////////////////////////////// // Proxy methods for real UMLModelElementTaggedValue ///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999893544609	WITHOUT_CLASSIFICATION	1.0645539096831615E-7	DEFECT
// load of the new project // just reuse of the ActionOpen object	WITHOUT_CLASSIFICATION	0.9999999872095819	WITHOUT_CLASSIFICATION	1.2790418068552039E-8	DEFECT
// Rearrange the diagram layout	WITHOUT_CLASSIFICATION	0.9999963698033021	WITHOUT_CLASSIFICATION	3.6301966979610395E-6	DEFECT
// Leave logging commented out by default for efficiency //        LOG.debug("determine rendering for: " + value); //        LOG.debug("show icon: " + showIcon);	WITHOUT_CLASSIFICATION	0.9999249134931644	WITHOUT_CLASSIFICATION	7.508650683570808E-5	DEFECT
// targets ought to be UML objects or diagrams	WITHOUT_CLASSIFICATION	0.9999995779373172	WITHOUT_CLASSIFICATION	4.2206268274854953E-7	DEFECT
// TODO: We shouldn't need this as well as the above.	WITHOUT_CLASSIFICATION	0.9989038329285996	DEFECT	0.0010961670714003115	WITHOUT_CLASSIFICATION
//      Guaranteed to return a non-null array	WITHOUT_CLASSIFICATION	0.9999999684450888	WITHOUT_CLASSIFICATION	3.1554911236122916E-8	DEFECT
/* end class TabProps */	WITHOUT_CLASSIFICATION	0.999942138367024	WITHOUT_CLASSIFICATION	5.7861632976109245E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999748478784519	WITHOUT_CLASSIFICATION	2.5152121548066763E-5	DEFECT
// If our map has any entries for this type, it's a connection type	WITHOUT_CLASSIFICATION	0.9999744188228743	WITHOUT_CLASSIFICATION	2.5581177125702338E-5	DEFECT
// Get the list of valid model item pairs for the given connection type	WITHOUT_CLASSIFICATION	0.9999987051470877	WITHOUT_CLASSIFICATION	1.294852912304494E-6	DEFECT
// See if there's a pair in this list that match the given // model elements	WITHOUT_CLASSIFICATION	0.9999982446467783	WITHOUT_CLASSIFICATION	1.7553532216109316E-6	DEFECT
/*     * @see TargettableModelView#getTargettableModel()     */	WITHOUT_CLASSIFICATION	0.9999997784195424	WITHOUT_CLASSIFICATION	2.2158045770134653E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999999678751464	WITHOUT_CLASSIFICATION	3.2124853621143575E-8	DEFECT
/*     * @see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999997746694292	WITHOUT_CLASSIFICATION	2.2533057064832407E-7	DEFECT
/*     * @see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999994446406183	WITHOUT_CLASSIFICATION	5.553593817324716E-7	DEFECT
//////////////////////////////////////////////////////////////// // accessors	WITHOUT_CLASSIFICATION	0.99999900930865	WITHOUT_CLASSIFICATION	9.906913499891305E-7	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// we tried to remove a value	WITHOUT_CLASSIFICATION	0.9999990543152152	WITHOUT_CLASSIFICATION	9.456847848465782E-7	DEFECT
// put everything together	WITHOUT_CLASSIFICATION	0.999999043720298	WITHOUT_CLASSIFICATION	9.562797019439183E-7	DEFECT
// no title looks better	WITHOUT_CLASSIFICATION	0.9999838468714773	WITHOUT_CLASSIFICATION	1.6153128522664146E-5	DEFECT
// now remove the ones already applied.	WITHOUT_CLASSIFICATION	0.9999998557183102	WITHOUT_CLASSIFICATION	1.442816897740672E-7	DEFECT
// make lists	WITHOUT_CLASSIFICATION	0.9999950900830007	WITHOUT_CLASSIFICATION	4.909916999287267E-6	DEFECT
// make buttons	WITHOUT_CLASSIFICATION	0.9999974160235191	WITHOUT_CLASSIFICATION	2.5839764809343133E-6	DEFECT
// ignored this event	WITHOUT_CLASSIFICATION	0.9999979358989884	WITHOUT_CLASSIFICATION	2.064101011490906E-6	DEFECT
// make buttons layout	WITHOUT_CLASSIFICATION	0.9999882597449333	WITHOUT_CLASSIFICATION	1.174025506662829E-5	DEFECT
// make listeners	WITHOUT_CLASSIFICATION	0.9999984449867536	WITHOUT_CLASSIFICATION	1.5550132464138128E-6	DEFECT
//Remove the element from Available List	WITHOUT_CLASSIFICATION	0.9999985548040994	WITHOUT_CLASSIFICATION	1.4451959006023748E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
/*     * @see javax.swing.Action#isEnabled()     */	WITHOUT_CLASSIFICATION	0.9999997926618378	WITHOUT_CLASSIFICATION	2.0733816223854664E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*         * @see javax.swing.ComboBoxEditor#setItem(java.lang.Object)         */	WITHOUT_CLASSIFICATION	0.9999986305252113	WITHOUT_CLASSIFICATION	1.3694747886392066E-6	DEFECT
/*         * @see javax.swing.ComboBoxEditor#getEditorComponent()         */	WITHOUT_CLASSIFICATION	0.9999998717985091	WITHOUT_CLASSIFICATION	1.2820149083286505E-7	DEFECT
/*         * @see javax.swing.ComboBoxEditor#addActionListener(java.awt.event.ActionListener)         */	WITHOUT_CLASSIFICATION	0.9999997848480922	WITHOUT_CLASSIFICATION	2.1515190780888462E-7	DEFECT
/*         * @see javax.swing.ComboBoxEditor#removeActionListener(java.awt.event.ActionListener)         */	WITHOUT_CLASSIFICATION	0.9999997390040163	WITHOUT_CLASSIFICATION	2.609959837689289E-7	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
/** * Implements the source path controller. * NOTE: If requested in the future this could be returned from the language * modules. * * TODO: Update this to use the UML 1.4 TagDefinition mechanism instead of * UML 1.3 String type tag types. The TagDefinition can be made more specific * so that it just applies to Components with a <<sourceModule>> stereotype * or something similar. - tfm *  * @author euluis * @since 0.17.1 */	WITHOUT_CLASSIFICATION	0.9992475931303487	WITHOUT_CLASSIFICATION	7.52406869651244E-4	DEFECT
/* end of SourcePathControllerImpl class definition */	WITHOUT_CLASSIFICATION	0.9999951483425543	WITHOUT_CLASSIFICATION	4.8516574456929705E-6	DEFECT
//sb.append(Model.getFacade().getName(c));	WITHOUT_CLASSIFICATION	0.9999619009312023	WITHOUT_CLASSIFICATION	3.809906879765526E-5	DEFECT
//sb.append((String) Model.getFacade().getBody(c));	WITHOUT_CLASSIFICATION	0.9999864961223522	WITHOUT_CLASSIFICATION	1.3503877647683514E-5	DEFECT
/*MModelElement*/	WITHOUT_CLASSIFICATION	0.9997866036536379	WITHOUT_CLASSIFICATION	2.1339634636203863E-4	DEFECT
// next statement is necessary to update the textfield // if the selection is equal to what was allready // selected	WITHOUT_CLASSIFICATION	0.9999999998346808	WITHOUT_CLASSIFICATION	1.6531924122714977E-10	DEFECT
//ok	WITHOUT_CLASSIFICATION	0.9998139396659814	WITHOUT_CLASSIFICATION	1.8606033401853475E-4	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
/*         * @see javax.swing.ComboBoxEditor#selectAll()         */	WITHOUT_CLASSIFICATION	0.9999990761618796	WITHOUT_CLASSIFICATION	9.238381205664407E-7	DEFECT
/*         * @see javax.swing.ComboBoxEditor#getItem()         */	WITHOUT_CLASSIFICATION	0.9999992025121932	WITHOUT_CLASSIFICATION	7.974878067151366E-7	DEFECT
/*     * @see java.awt.event.FocusListener#focusGained(java.awt.event.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999999269504332	WITHOUT_CLASSIFICATION	7.30495668081183E-8	DEFECT
/*     * @see javax.swing.Action#isEnabled()     */	WITHOUT_CLASSIFICATION	0.9999997926618378	WITHOUT_CLASSIFICATION	2.0733816223854664E-7	DEFECT
//ok	WITHOUT_CLASSIFICATION	0.9998139396659814	WITHOUT_CLASSIFICATION	1.8606033401853475E-4	DEFECT
// necessary to create distance between // the textfield and the icon.	WITHOUT_CLASSIFICATION	0.9999999978872368	WITHOUT_CLASSIFICATION	2.1127631114440316E-9	DEFECT
//make new column with LabelledLayout	WITHOUT_CLASSIFICATION	0.9999980491387908	WITHOUT_CLASSIFICATION	1.9508612091404525E-6	DEFECT
// Comment.name text field - editing disabled	WITHOUT_CLASSIFICATION	0.9999938226883529	WITHOUT_CLASSIFICATION	6.177311647152336E-6	DEFECT
// Comment.body text field - editing disabled	WITHOUT_CLASSIFICATION	0.9999919748893749	WITHOUT_CLASSIFICATION	8.025110625122607E-6	DEFECT
/* Since there are no buttons on this panel, we have to set         * the size of the buttonpanel, otherwise the          * title would not be aligned right. */	WITHOUT_CLASSIFICATION	0.9999942331254493	WITHOUT_CLASSIFICATION	5.766874550668445E-6	DEFECT
// Only change the background colour if it is supplied by the LAF. // Otherwise leave look and feel to handle this itself.	WITHOUT_CLASSIFICATION	0.9999999532125332	WITHOUT_CLASSIFICATION	4.6787466703205804E-8	DEFECT
// In this case, the bounds are determined by the FigEdge	WITHOUT_CLASSIFICATION	0.9999990427589085	WITHOUT_CLASSIFICATION	9.57241091426903E-7	DEFECT
// In this case, the bounds are determined by the FigEdge	WITHOUT_CLASSIFICATION	0.9999990427589085	WITHOUT_CLASSIFICATION	9.57241091426903E-7	DEFECT
// In this case, the bounds (of the box) are determined // by the FigClassAssociationClass	WITHOUT_CLASSIFICATION	0.9999948662643321	WITHOUT_CLASSIFICATION	5.133735667957135E-6	DEFECT
// In this case, the bounds (of the box) are determined // by the FigClassAssociationClass	WITHOUT_CLASSIFICATION	0.9999948662643321	WITHOUT_CLASSIFICATION	5.133735667957135E-6	DEFECT
// A newly created AssociationClass may not have all its parts // created by the time we are called	WITHOUT_CLASSIFICATION	0.9999766890320585	WITHOUT_CLASSIFICATION	2.33109679414698E-5	DEFECT
// A newly created AssociationClass may not have all its parts // created by the time we are called	WITHOUT_CLASSIFICATION	0.9999766890320585	WITHOUT_CLASSIFICATION	2.33109679414698E-5	DEFECT
// TODO: Defer most of this work if the panel isn't visible - tfm	WITHOUT_CLASSIFICATION	0.9977351458243734	DEFECT	0.002264854175626637	WITHOUT_CLASSIFICATION
/*     * @see TargetListener#targetAdded(TargetEvent)     */	WITHOUT_CLASSIFICATION	0.999999654492659	WITHOUT_CLASSIFICATION	3.455073409936275E-7	DEFECT
/*     * @see TargetListener#targetRemoved(TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999990515888479	WITHOUT_CLASSIFICATION	9.484111520202286E-7	DEFECT
/*     * @see TargetListener#targetSet(TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999989783248618	WITHOUT_CLASSIFICATION	1.0216751381457237E-6	DEFECT
// Lazily create the event:	WITHOUT_CLASSIFICATION	0.9999995009738529	WITHOUT_CLASSIFICATION	4.99026147136317E-7	DEFECT
// Lazily create the event:	WITHOUT_CLASSIFICATION	0.9999995009738529	WITHOUT_CLASSIFICATION	4.99026147136317E-7	DEFECT
// Lazily create the event:	WITHOUT_CLASSIFICATION	0.9999995009738529	WITHOUT_CLASSIFICATION	4.99026147136317E-7	DEFECT
// Guaranteed to return a non-null array	WITHOUT_CLASSIFICATION	0.9999999594285716	WITHOUT_CLASSIFICATION	4.05714284274186E-8	DEFECT
// Guaranteed to return a non-null array	WITHOUT_CLASSIFICATION	0.9999999594285716	WITHOUT_CLASSIFICATION	4.05714284274186E-8	DEFECT
//          Guaranteed to return a non-null array	WITHOUT_CLASSIFICATION	0.9999999684450888	WITHOUT_CLASSIFICATION	3.1554911236122916E-8	DEFECT
// how to handle empty target lists? // probably the TabProps should only show an empty pane in that // case	WITHOUT_CLASSIFICATION	0.9999929850014675	WITHOUT_CLASSIFICATION	7.014998532547595E-6	DEFECT
// chooser.setSelectedFile(new File(fileName));	WITHOUT_CLASSIFICATION	0.9999999730751302	WITHOUT_CLASSIFICATION	2.692486983130291E-8	DEFECT
/* So, let's do it the hard way: */	WITHOUT_CLASSIFICATION	0.9991343331620554	WITHOUT_CLASSIFICATION	8.656668379447116E-4	DEFECT
// TODO: The following can be used when we drop Java 5 support or // when an ImageIO GIF writer plugin is bundled //            cmd = new SaveGIFAction2(Translator.localize("action.save-gif"));	WITHOUT_CLASSIFICATION	0.9824344004111705	WITHOUT_CLASSIFICATION	0.017565599588829542	DEFECT
// If the diagram is empty, GEF won't write anything, leaving us with // an empty (and invalid) file.  Handle this case ourselves to prevent // this from happening.	WITHOUT_CLASSIFICATION	0.9999955261219786	WITHOUT_CLASSIFICATION	4.473878021414975E-6	DEFECT
// Anything else is handled the normal way	WITHOUT_CLASSIFICATION	0.9999987897316783	WITHOUT_CLASSIFICATION	1.2102683217326387E-6	DEFECT
// Create an image which will do deferred rendering of the GEF // diagram on demand as data is pulled from it	WITHOUT_CLASSIFICATION	0.9999998782152018	WITHOUT_CLASSIFICATION	1.2178479830535547E-7	DEFECT
/** * Action to save a diagram as a GIF image in a supplied OutputStream. * * TODO: This requires Java 6 in its current state, so don't use. * * @author Tom Morris <tfmorris@gmail.com> */	WITHOUT_CLASSIFICATION	0.9491527750774974	WITHOUT_CLASSIFICATION	0.05084722492250264	DEFECT
// NOTE: GEF's GIF writer uses Jeff Poskanzer's GIF encoder, but that // saves a copy of the entire image in an internal buffer before // starting work, defeating the whole purpose of our incremental // rendering.	WITHOUT_CLASSIFICATION	0.9999990417068649	WITHOUT_CLASSIFICATION	9.582931350093624E-7	DEFECT
// Java SE 6 has a native GIF writer, but it's not in Java 5.  One // is available in the JAI-ImageIO library, but we don't currently // bundle that and at 6+ MB it seems like a heavyweight solution, but // I don't have time to produce a stripped down version right now - tfm // https://jai-imageio.dev.java.net/	WITHOUT_CLASSIFICATION	0.6279613662343532	WITHOUT_CLASSIFICATION	0.37203863376564683	DEFECT
//        LayerPerspective layer = DiagramUtils.getActiveDiagram().getLayer();	WITHOUT_CLASSIFICATION	0.9999975766957703	WITHOUT_CLASSIFICATION	2.423304229766052E-6	DEFECT
// Anything else is handled the normal way	WITHOUT_CLASSIFICATION	0.9999987897316783	WITHOUT_CLASSIFICATION	1.2102683217326387E-6	DEFECT
// Create an image which will do deferred rendering of the GEF // diagram on demand as data is pulled from it	WITHOUT_CLASSIFICATION	0.9999998782152018	WITHOUT_CLASSIFICATION	1.2178479830535547E-7	DEFECT
/** * Action to save a diagram as a GIF image in a supplied OutputStream. * * TODO: This requires Java 6 in its current state, so don't use. * * @author Tom Morris <tfmorris@gmail.com> */	WITHOUT_CLASSIFICATION	0.9491527750774974	WITHOUT_CLASSIFICATION	0.05084722492250264	DEFECT
// we actually are computing max x & max y, not width & height	WITHOUT_CLASSIFICATION	0.9999788301348886	WITHOUT_CLASSIFICATION	2.1169865111442156E-5	DEFECT
// Convert max x/y to width/height	WITHOUT_CLASSIFICATION	0.9999992085566151	WITHOUT_CLASSIFICATION	7.91443384966422E-7	DEFECT
// Get a DOMImplementation	WITHOUT_CLASSIFICATION	0.9999753281871606	WITHOUT_CLASSIFICATION	2.46718128394133E-5	DEFECT
// Create an instance of org.w3c.dom.Document	WITHOUT_CLASSIFICATION	0.9999999401600287	WITHOUT_CLASSIFICATION	5.983997138627887E-8	DEFECT
// Create an instance of the SVG Generator	WITHOUT_CLASSIFICATION	0.9999999603282217	WITHOUT_CLASSIFICATION	3.9671778253319544E-8	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
/*     * @see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999999678751464	WITHOUT_CLASSIFICATION	3.2124853621143575E-8	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
//        LayerPerspective layer = DiagramUtils.getActiveDiagram().getLayer();	WITHOUT_CLASSIFICATION	0.9999975766957703	WITHOUT_CLASSIFICATION	2.423304229766052E-6	DEFECT
// we actually are computing max x & max y, not width & height	WITHOUT_CLASSIFICATION	0.9999788301348886	WITHOUT_CLASSIFICATION	2.1169865111442156E-5	DEFECT
// Convert max x/y to width/height	WITHOUT_CLASSIFICATION	0.9999992085566151	WITHOUT_CLASSIFICATION	7.91443384966422E-7	DEFECT
// Get a DOMImplementation	WITHOUT_CLASSIFICATION	0.9999753281871606	WITHOUT_CLASSIFICATION	2.46718128394133E-5	DEFECT
// Create an instance of org.w3c.dom.Document	WITHOUT_CLASSIFICATION	0.9999999401600287	WITHOUT_CLASSIFICATION	5.983997138627887E-8	DEFECT
// Create an instance of the SVG Generator	WITHOUT_CLASSIFICATION	0.9999999603282217	WITHOUT_CLASSIFICATION	3.9671778253319544E-8	DEFECT
// make it stretch vertically	WITHOUT_CLASSIFICATION	0.9999841925088959	WITHOUT_CLASSIFICATION	1.580749110401849E-5	DEFECT
//"org.argouml.cognitive.critics",	WITHOUT_CLASSIFICATION	0.9999998390711947	WITHOUT_CLASSIFICATION	1.6092880523152407E-7	DEFECT
/*     * @see javax.swing.table.TableModel#getColumnCount()     */	WITHOUT_CLASSIFICATION	0.9999999771675131	WITHOUT_CLASSIFICATION	2.2832486896250596E-8	DEFECT
/*     * @see javax.swing.table.TableModel#getColumnName(int)     */	WITHOUT_CLASSIFICATION	0.9999999598532113	WITHOUT_CLASSIFICATION	4.014678861954184E-8	DEFECT
/*     * @see javax.swing.table.TableModel#getColumnClass(int)     */	WITHOUT_CLASSIFICATION	0.999999978242514	WITHOUT_CLASSIFICATION	2.1757486121843807E-8	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// handle multivalued tagged value	WITHOUT_CLASSIFICATION	0.9999990403305463	WITHOUT_CLASSIFICATION	9.596694536831265E-7	DEFECT
// handle multivalued tagged value	WITHOUT_CLASSIFICATION	0.9999990403305463	WITHOUT_CLASSIFICATION	9.596694536831265E-7	DEFECT
// Target has been deleted	WITHOUT_CLASSIFICATION	0.9999994590085101	WITHOUT_CLASSIFICATION	5.409914899966622E-7	DEFECT
// If the row is past the end of our current collection, // return an empty string so they can add a new value	WITHOUT_CLASSIFICATION	0.9999778388421375	WITHOUT_CLASSIFICATION	2.216115786242235E-5	DEFECT
// tagValue = true;	WITHOUT_CLASSIFICATION	0.9999979631082617	WITHOUT_CLASSIFICATION	2.0368917383837765E-6	DEFECT
// for debugging	WITHOUT_CLASSIFICATION	0.999998378376219	WITHOUT_CLASSIFICATION	1.6216237811350571E-6	DEFECT
/*     * Return the ith element from a Collection.     *     * @param collection collection to get element from     *     * @param index index of the element to be returned     *     * @return the object     */	WITHOUT_CLASSIFICATION	0.9999999811328458	WITHOUT_CLASSIFICATION	1.8867154196142594E-8	DEFECT
// We really shouldn't add it until after it is set up, but we // need it to have an owner for the following method calls	WITHOUT_CLASSIFICATION	0.997815944905892	WITHOUT_CLASSIFICATION	0.002184055094107994	DEFECT
// Since we aren't sure of ordering, fire event for whole table	WITHOUT_CLASSIFICATION	0.9999998611801485	WITHOUT_CLASSIFICATION	1.3881985147708272E-7	DEFECT
// no way, we have to give up	WITHOUT_CLASSIFICATION	0.9999994028139748	WITHOUT_CLASSIFICATION	5.971860252179353E-7	DEFECT
// Do nothing during the deprecation period, then it can be removed.	WITHOUT_CLASSIFICATION	0.9999997910859756	WITHOUT_CLASSIFICATION	2.089140244199141E-7	DEFECT
/*     * @see javax.swing.DefaultListModel#contains(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999991176515372	WITHOUT_CLASSIFICATION	8.823484628265479E-7	DEFECT
/*     * @see javax.swing.DefaultListModel#addElement(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999986947564112	WITHOUT_CLASSIFICATION	1.3052435888098304E-6	DEFECT
/*     * @see TargetListener#targetAdded(TargetEvent)     */	WITHOUT_CLASSIFICATION	0.999999654492659	WITHOUT_CLASSIFICATION	3.455073409936275E-7	DEFECT
/*     * @see TargetListener#targetRemoved(TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999990515888479	WITHOUT_CLASSIFICATION	9.484111520202286E-7	DEFECT
/*     * @see TargetListener#targetSet(TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999989783248618	WITHOUT_CLASSIFICATION	1.0216751381457237E-6	DEFECT
/*     * @see javax.swing.AbstractListModel#fireContentsChanged(     *          Object, int, int)     */	WITHOUT_CLASSIFICATION	0.9999998861949377	WITHOUT_CLASSIFICATION	1.1380506222868319E-7	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
/* Do nothing by default. */	WITHOUT_CLASSIFICATION	0.9999919340977799	WITHOUT_CLASSIFICATION	8.06590222026835E-6	DEFECT
/* Do nothing by default. */	WITHOUT_CLASSIFICATION	0.9999919340977799	WITHOUT_CLASSIFICATION	8.06590222026835E-6	DEFECT
// Allow listening to other elements:	WITHOUT_CLASSIFICATION	0.9999999287375095	WITHOUT_CLASSIFICATION	7.12624904509216E-8	DEFECT
// Allow listening to other elements:	WITHOUT_CLASSIFICATION	0.9999999287375095	WITHOUT_CLASSIFICATION	7.12624904509216E-8	DEFECT
// we tried to remove a value	WITHOUT_CLASSIFICATION	0.9999990543152152	WITHOUT_CLASSIFICATION	9.456847848465782E-7	DEFECT
// get the first editable extent (which is OK unless there is more // than one editable extent)	WITHOUT_CLASSIFICATION	0.9999999932547273	WITHOUT_CLASSIFICATION	6.74527263497845E-9	DEFECT
/*             * This can throw an exception if the target has been             * deleted. We don't want to try locking the repository             * because this is called from the event delivery thread and             * could cause a deadlock. Instead catch the exception and             * leave the model empty.             */	WITHOUT_CLASSIFICATION	0.9999999827702967	WITHOUT_CLASSIFICATION	1.722970328591745E-8	DEFECT
/* end class ActionImportFromSources */	WITHOUT_CLASSIFICATION	0.9999851729564938	WITHOUT_CLASSIFICATION	1.4827043506290652E-5	DEFECT
// Don't test changed element if it was deleted	WITHOUT_CLASSIFICATION	0.9999999712636276	WITHOUT_CLASSIFICATION	2.8736372402825103E-8	DEFECT
// this is never downlighted...	WITHOUT_CLASSIFICATION	0.9999301575312409	WITHOUT_CLASSIFICATION	6.984246875907467E-5	DEFECT
// Only specified format are allowed.	WITHOUT_CLASSIFICATION	0.9999999564290944	WITHOUT_CLASSIFICATION	4.357090563270625E-8	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
/*     * @see TargetListener#targetAdded(TargetEvent)     */	WITHOUT_CLASSIFICATION	0.999999654492659	WITHOUT_CLASSIFICATION	3.455073409936275E-7	DEFECT
/*     * @see TargetListener#targetRemoved(TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999990515888479	WITHOUT_CLASSIFICATION	9.484111520202286E-7	DEFECT
/*     * @see TargetListener#targetSet(TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999989783248618	WITHOUT_CLASSIFICATION	1.0216751381457237E-6	DEFECT
/*     * @see java.awt.event.ComponentListener#componentHidden(java.awt.event.ComponentEvent)     */	WITHOUT_CLASSIFICATION	0.9999997197708684	WITHOUT_CLASSIFICATION	2.802291314915078E-7	DEFECT
/*     * @see java.awt.event.ComponentListener#componentShown(java.awt.event.ComponentEvent)     */	WITHOUT_CLASSIFICATION	0.9999994542146569	WITHOUT_CLASSIFICATION	5.457853430875161E-7	DEFECT
/*     * @see java.awt.event.ComponentListener#componentMoved(java.awt.event.ComponentEvent)     */	WITHOUT_CLASSIFICATION	0.9999995705901128	WITHOUT_CLASSIFICATION	4.2940988713915014E-7	DEFECT
/*     * @see java.awt.event.ComponentListener#componentResized(java.awt.event.ComponentEvent)     */	WITHOUT_CLASSIFICATION	0.9999993238340767	WITHOUT_CLASSIFICATION	6.761659233267411E-7	DEFECT
// Guaranteed to return a non-null array	WITHOUT_CLASSIFICATION	0.9999999594285716	WITHOUT_CLASSIFICATION	4.05714284274186E-8	DEFECT
// Guaranteed to return a non-null array	WITHOUT_CLASSIFICATION	0.9999999594285716	WITHOUT_CLASSIFICATION	4.05714284274186E-8	DEFECT
// Guaranteed to return a non-null array	WITHOUT_CLASSIFICATION	0.9999999594285716	WITHOUT_CLASSIFICATION	4.05714284274186E-8	DEFECT
// Add stereotypes submenu	WITHOUT_CLASSIFICATION	0.9999987247179042	WITHOUT_CLASSIFICATION	1.2752820957477508E-6	DEFECT
// Set up the target and its model element variant.	WITHOUT_CLASSIFICATION	0.9999995080408375	WITHOUT_CLASSIFICATION	4.919591625332938E-7	DEFECT
// Set the tooltip of the arrow to open combined tools:	WITHOUT_CLASSIFICATION	0.9999998054953011	WITHOUT_CLASSIFICATION	1.9450469880621808E-7	DEFECT
// If the target has changed notify the third party listener if it // exists and dispatch a new element event listener to // ourself. Otherwise dispatch a target reasserted to ourself.	WITHOUT_CLASSIFICATION	0.9999999850796187	WITHOUT_CLASSIFICATION	1.492038127630609E-8	DEFECT
/* Set the minimum and preferred equal,         * so that the size is fixed for the labelledlayout.         */	WITHOUT_CLASSIFICATION	0.9999619894128756	WITHOUT_CLASSIFICATION	3.801058712436194E-5	DEFECT
// This will add a new ModelElement event listener // after update is complete	WITHOUT_CLASSIFICATION	0.999995325020306	WITHOUT_CLASSIFICATION	4.674979693936545E-6	DEFECT
/* We presume that the container equals this PropPanel. */	WITHOUT_CLASSIFICATION	0.9999875879829465	WITHOUT_CLASSIFICATION	1.241201705354566E-5	DEFECT
// Refresh the target for all our children which weren't getting // while not visible	WITHOUT_CLASSIFICATION	0.9999990819766075	WITHOUT_CLASSIFICATION	9.180233924230996E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(ActionEvent)     */	WITHOUT_CLASSIFICATION	0.99999990289454	WITHOUT_CLASSIFICATION	9.710546005135863E-8	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
/* This works - we do get an event - and now              * refresh the UI: */	WITHOUT_CLASSIFICATION	0.9997019515989567	WITHOUT_CLASSIFICATION	2.980484010433206E-4	DEFECT
// to manage the case there are no label/component // pairs but just one component	WITHOUT_CLASSIFICATION	0.9999999064860725	WITHOUT_CLASSIFICATION	9.35139275282364E-8	DEFECT
// If the component is a JLabel which has another // component assigned then position/size the label and // calculate the size of the registered component	WITHOUT_CLASSIFICATION	0.9999999839948455	WITHOUT_CLASSIFICATION	1.600515452806237E-8	DEFECT
// Assumes the next child is the labelled component	WITHOUT_CLASSIFICATION	0.9999999248511786	WITHOUT_CLASSIFICATION	7.514882145784512E-8	DEFECT
// Make sure the component width isn't any greater // than its maximum allowed width	WITHOUT_CLASSIFICATION	0.9999999719621565	WITHOUT_CLASSIFICATION	2.8037843415310864E-8	DEFECT
// If the child component is resizable then // we don't know it's actual size yet. // It will be calculated later as a // proportion of the available left over // space.  For now this is flagged as zero.	WITHOUT_CLASSIFICATION	0.9999888758989925	WITHOUT_CLASSIFICATION	1.112410100737782E-5	DEFECT
// If a preferred height is not given or is // the same as the minimum height then fix the // height of this row.	WITHOUT_CLASSIFICATION	0.9892536343766634	WITHOUT_CLASSIFICATION	0.010746365623336756	DEFECT
//Project p = ProjectManager.getManager().getCurrentProject(); //Collection elems = //ModelManagementHelper.getHelper() //    .getAllModelElementsOfKind(MClassifier.class);	WITHOUT_CLASSIFICATION	0.9999923611545902	WITHOUT_CLASSIFICATION	7.638845409754137E-6	DEFECT
// Expressions are DataTypes, not independent model elements // be careful not to reuse them	WITHOUT_CLASSIFICATION	0.9999994932979885	WITHOUT_CLASSIFICATION	5.06702011511924E-7	DEFECT
// Allow listening to other elements: //                removeOtherModelEventListeners(listTarget);	WITHOUT_CLASSIFICATION	0.9999998123102317	WITHOUT_CLASSIFICATION	1.8768976824415022E-7	DEFECT
// setDoubleBuffered(true);	WITHOUT_CLASSIFICATION	0.9999947328368171	WITHOUT_CLASSIFICATION	5.2671631828874235E-6	DEFECT
/* TRY SOME MORE COMPLEX MOVING */	WITHOUT_CLASSIFICATION	0.9998338110212085	WITHOUT_CLASSIFICATION	1.6618897879144034E-4	DEFECT
// Implements backspace functionality	WITHOUT_CLASSIFICATION	0.9999165187899622	WITHOUT_CLASSIFICATION	8.348121003772789E-5	DEFECT
//////////////////////////////////////////////////////////////// // constructors	WITHOUT_CLASSIFICATION	0.9999996493752797	WITHOUT_CLASSIFICATION	3.5062472022456624E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see javax.swing.Action#isEnabled()     */	WITHOUT_CLASSIFICATION	0.9999997926618378	WITHOUT_CLASSIFICATION	2.0733816223854664E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see javax.swing.event.CaretListener#caretUpdate(javax.swing.event.CaretEvent)     */	WITHOUT_CLASSIFICATION	0.9999997504671473	WITHOUT_CLASSIFICATION	2.495328527092827E-7	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
/* Do nothing by default. */	WITHOUT_CLASSIFICATION	0.9999919340977799	WITHOUT_CLASSIFICATION	8.06590222026835E-6	DEFECT
/* Do nothing by default. */	WITHOUT_CLASSIFICATION	0.9999919340977799	WITHOUT_CLASSIFICATION	8.06590222026835E-6	DEFECT
// Allow listening to other elements:	WITHOUT_CLASSIFICATION	0.9999999287375095	WITHOUT_CLASSIFICATION	7.12624904509216E-8	DEFECT
// Allow listening to other elements:	WITHOUT_CLASSIFICATION	0.9999999287375095	WITHOUT_CLASSIFICATION	7.12624904509216E-8	DEFECT
// we tried to remove a value	WITHOUT_CLASSIFICATION	0.9999990543152152	WITHOUT_CLASSIFICATION	9.456847848465782E-7	DEFECT
// there is a selection	WITHOUT_CLASSIFICATION	0.9999439319114857	WITHOUT_CLASSIFICATION	5.6068088514459135E-5	DEFECT
/*             * This can throw an exception if the target has been             * deleted. We don't want to try locking the repository             * because this is called from the event delivery thread and             * could cause a deadlock. Instead catch the exception and             * leave the model empty.             */	WITHOUT_CLASSIFICATION	0.9999999827702967	WITHOUT_CLASSIFICATION	1.722970328591745E-8	DEFECT
// Don't test changed element if it was deleted	WITHOUT_CLASSIFICATION	0.9999999712636276	WITHOUT_CLASSIFICATION	2.8736372402825103E-8	DEFECT
/* end class ActionCut */	WITHOUT_CLASSIFICATION	0.9999776820114122	WITHOUT_CLASSIFICATION	2.231798858769405E-5	DEFECT
// Allow listening to other elements: //                addOtherModelEventListeners(listTarget);	WITHOUT_CLASSIFICATION	0.9999996179968079	WITHOUT_CLASSIFICATION	3.820031920267804E-7	DEFECT
//      if there is a selection on the clipboard	WITHOUT_CLASSIFICATION	0.9999996426847496	WITHOUT_CLASSIFICATION	3.5731525040082107E-7	DEFECT
// get localised strings once only	WITHOUT_CLASSIFICATION	0.9999997935615307	WITHOUT_CLASSIFICATION	2.06438469271575E-7	DEFECT
// setting the icon	WITHOUT_CLASSIFICATION	0.9999994827027562	WITHOUT_CLASSIFICATION	5.172972439058349E-7	DEFECT
// setting the tooltip to type and name	WITHOUT_CLASSIFICATION	0.999999937942619	WITHOUT_CLASSIFICATION	6.205738109234215E-8	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
//////////////////////////////////////////////////////////////// // static variables	WITHOUT_CLASSIFICATION	0.9999998818060729	WITHOUT_CLASSIFICATION	1.1819392707333433E-7	DEFECT
/*     * @see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)     */	WITHOUT_CLASSIFICATION	0.9999999040973686	WITHOUT_CLASSIFICATION	9.590263132237114E-8	DEFECT
/*     * @see java.awt.event.ComponentListener#componentShown(java.awt.event.ComponentEvent)     */	WITHOUT_CLASSIFICATION	0.9999994542146569	WITHOUT_CLASSIFICATION	5.457853430875161E-7	DEFECT
/*     * @see java.awt.event.ComponentListener#componentHidden(java.awt.event.ComponentEvent)     */	WITHOUT_CLASSIFICATION	0.9999997197708684	WITHOUT_CLASSIFICATION	2.802291314915078E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
// Update our model with our saved target	WITHOUT_CLASSIFICATION	0.9999999440907767	WITHOUT_CLASSIFICATION	5.590922318364402E-8	DEFECT
// Stop updating model when we're not visible	WITHOUT_CLASSIFICATION	0.9999998958308698	WITHOUT_CLASSIFICATION	1.041691302087701E-7	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// in UML2, a td is a property of a stereotype in a profile	WITHOUT_CLASSIFICATION	0.9999878990794855	WITHOUT_CLASSIFICATION	1.2100920514456771E-5	DEFECT
// Only update our model if we're visible	WITHOUT_CLASSIFICATION	0.9999999750743117	WITHOUT_CLASSIFICATION	2.4925688328524542E-8	DEFECT
// Most likely cause of this is that someone deleted our // target with the event pump turned off so we didn't // get notification.  Nothing we can do about it now and // we are changing targets anyway, so just log it.	WITHOUT_CLASSIFICATION	0.999999971026113	WITHOUT_CLASSIFICATION	2.8973887000856882E-8	DEFECT
/* This target is a statemachine,              * for which no diagram exists yet,              * so, let's use it. */	WITHOUT_CLASSIFICATION	0.9999973089177889	WITHOUT_CLASSIFICATION	2.691082211057059E-6	DEFECT
/* end class TabTaggedValues */	WITHOUT_CLASSIFICATION	0.9999498102935828	WITHOUT_CLASSIFICATION	5.018970641722221E-5	DEFECT
// setEnabled((Globals.clipBoard != null && // !Globals.clipBoard.isEmpty()) || // !isSystemClipBoardEmpty());	WITHOUT_CLASSIFICATION	0.9999999696438764	WITHOUT_CLASSIFICATION	3.035612349312908E-8	DEFECT
/* end class ActionPaste */	WITHOUT_CLASSIFICATION	0.99995827292424	WITHOUT_CLASSIFICATION	4.172707575996068E-5	DEFECT
/* The target is a valid context. */	WITHOUT_CLASSIFICATION	0.9999979690069869	WITHOUT_CLASSIFICATION	2.0309930130934744E-6	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(ActionEvent)     */	WITHOUT_CLASSIFICATION	0.99999990289454	WITHOUT_CLASSIFICATION	9.710546005135863E-8	DEFECT
/*     * @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994577075367	WITHOUT_CLASSIFICATION	5.422924631974628E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(     *      java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.9999999066328071	WITHOUT_CLASSIFICATION	9.336719285167458E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see javax.swing.Action#isEnabled()     */	WITHOUT_CLASSIFICATION	0.9999997926618378	WITHOUT_CLASSIFICATION	2.0733816223854664E-7	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
/* Let's just build a Statemachine,              * and put it in a suitable namespace. */	WITHOUT_CLASSIFICATION	0.9999986676827924	WITHOUT_CLASSIFICATION	1.3323172076635309E-6	DEFECT
/* Follow well-formedness rule for a Class [2].                 * Determine the owning namespace for the statemachine: */	WITHOUT_CLASSIFICATION	0.9999989293136603	WITHOUT_CLASSIFICATION	1.0706863397169798E-6	DEFECT
// upperPanel.setBorder(BorderFactory.createEtchedBorder());	WITHOUT_CLASSIFICATION	0.999999975968111	WITHOUT_CLASSIFICATION	2.4031888966422652E-8	DEFECT
// buttonBox.add(Box.createRigidArea(new Dimension(0, 20)));	WITHOUT_CLASSIFICATION	0.9999986708633376	WITHOUT_CLASSIFICATION	1.32913666244957E-6	DEFECT
// String title = getUI().getDialogTitle(this);	WITHOUT_CLASSIFICATION	0.9999858605080267	WITHOUT_CLASSIFICATION	1.4139491973265493E-5	DEFECT
/**     * Test if the given namespace is a valid namespace to add the diagram to.     * TODO: This method was created to facilitate the merge     * of this class with ActionAddDiagram.     *     * @param ns the namespace to check     * @return Returns <code>true</code> if valid.     */	WITHOUT_CLASSIFICATION	0.9732017521186476	WITHOUT_CLASSIFICATION	0.026798247881352485	DEFECT
// TODO: Since there may be multiple top level elements in // a project, this should be using the default Namespace (currently // undefined) or something similar	WITHOUT_CLASSIFICATION	0.9948707235506106	DEFECT	0.005129276449389331	WITHOUT_CLASSIFICATION
// button action:	WITHOUT_CLASSIFICATION	0.9999821888303042	WITHOUT_CLASSIFICATION	1.781116969579013E-5	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
// Make sure it's parseable as an number	WITHOUT_CLASSIFICATION	0.9999998971088438	WITHOUT_CLASSIFICATION	1.0289115619772968E-7	DEFECT
// ignored - we just skipped inserting it in our document	WITHOUT_CLASSIFICATION	0.9999999716841552	WITHOUT_CLASSIFICATION	2.8315844893751754E-8	DEFECT
//            select.setText(Translator.localize("action.select"));	WITHOUT_CLASSIFICATION	0.9999998717085248	WITHOUT_CLASSIFICATION	1.2829147532217517E-7	DEFECT
//                select.add(ActionAddEventAsDeferrableEvent.SINGLETON);	WITHOUT_CLASSIFICATION	0.9999999491793897	WITHOUT_CLASSIFICATION	5.0820610282161124E-8	DEFECT
//        newMenu.setText(Translator.localize("action.new"));	WITHOUT_CLASSIFICATION	0.9999999497143045	WITHOUT_CLASSIFICATION	5.0285695461353035E-8	DEFECT
/*(MExtend)*/	WITHOUT_CLASSIFICATION	0.9998308061078283	WITHOUT_CLASSIFICATION	1.6919389217176568E-4	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
//////////////////////////////////////////////////////////////// // main methods	WITHOUT_CLASSIFICATION	0.9999979898465433	WITHOUT_CLASSIFICATION	2.01015345670554E-6	DEFECT
// repair action for possible NP after load	WITHOUT_CLASSIFICATION	0.9999993439669248	WITHOUT_CLASSIFICATION	6.56033075087342E-7	DEFECT
/* (MClassifier) */	WITHOUT_CLASSIFICATION	0.9999950397240299	WITHOUT_CLASSIFICATION	4.960275970074058E-6	DEFECT
/* TRY SOME MORE ERRORS */	WITHOUT_CLASSIFICATION	0.9995421909185622	WITHOUT_CLASSIFICATION	4.5780908143774543E-4	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
/* (MModelElement) */	WITHOUT_CLASSIFICATION	0.9999193959463784	WITHOUT_CLASSIFICATION	8.060405362167068E-5	DEFECT
//to be able to remove dep's later	WITHOUT_CLASSIFICATION	0.9999994247327739	WITHOUT_CLASSIFICATION	5.752672260511004E-7	DEFECT
//to be able to remove dependencies later	WITHOUT_CLASSIFICATION	0.9999996348513638	WITHOUT_CLASSIFICATION	3.6514863617871007E-7	DEFECT
/**     * ADDONLY_COMMAND determines a changeability kind.     * TODO: Removed from UML 2.x.  Phase out of UI - tfm - 20070529     */	WITHOUT_CLASSIFICATION	0.9889493293407917	WITHOUT_CLASSIFICATION	0.011050670659208265	DEFECT
// TODO: Removed from UML 2.x - phase out usage - tfm 20070530	WITHOUT_CLASSIFICATION	0.9233793738357213	WITHOUT_CLASSIFICATION	0.07662062616427869	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// because we're listening for stereotypes being added and removed // but we're really interested in their owned tag definitions, // the default implementation won't work for us	WITHOUT_CLASSIFICATION	0.9996191011783057	WITHOUT_CLASSIFICATION	3.8089882169435254E-4	DEFECT
/* end class ActionAddAttribute */	WITHOUT_CLASSIFICATION	0.9999911211561063	WITHOUT_CLASSIFICATION	8.8788438937002E-6	DEFECT
// Ask to be notified of any changes to TagDefinitions so that we // can track new ones, name changes, etc	WITHOUT_CLASSIFICATION	0.9999999622284091	WITHOUT_CLASSIFICATION	3.777159084191546E-8	DEFECT
// since UML2 it's easier: TDs only via stereotypes	WITHOUT_CLASSIFICATION	0.9999972803302098	WITHOUT_CLASSIFICATION	2.71966979013361E-6	DEFECT
// Just mark for rebuild next time since we use lazy loading	WITHOUT_CLASSIFICATION	0.9999986014227138	WITHOUT_CLASSIFICATION	1.398577286166558E-6	DEFECT
// A stereotype got applied or removed // Just mark for rebuild next time since we use lazy loading	WITHOUT_CLASSIFICATION	0.9999994211435996	WITHOUT_CLASSIFICATION	5.788564002832418E-7	DEFECT
/*     * @see Namespace#pushNamespaceElement(NamespaceElement)     */	WITHOUT_CLASSIFICATION	0.9999978730294213	WITHOUT_CLASSIFICATION	2.1269705786788803E-6	DEFECT
/*     * @see java.lang.Object#hashCode()     */	WITHOUT_CLASSIFICATION	0.9999937095428904	WITHOUT_CLASSIFICATION	6.290457109648908E-6	DEFECT
/*     * @see org.tigris.swidgets.Dialog#nameButtons()     */	WITHOUT_CLASSIFICATION	0.9999998545402142	WITHOUT_CLASSIFICATION	1.4545978567876214E-7	DEFECT
// All strings collate before all UML elements	WITHOUT_CLASSIFICATION	0.9999998710605619	WITHOUT_CLASSIFICATION	1.2893943819651608E-7	DEFECT
// All strings collate before all UML elements	WITHOUT_CLASSIFICATION	0.9999998710605619	WITHOUT_CLASSIFICATION	1.2893943819651608E-7	DEFECT
/*     * Compare path of two elements in reverse order (inner to outer)     * using a primary strength text collator.      * This will collate e, E, �, � together, but not eliminate non-identical     * strings which collate in the same place.     *      * @return equivalent of list1.compareTo(list2)     */	WITHOUT_CLASSIFICATION	0.9999999908263397	WITHOUT_CLASSIFICATION	9.173660241322179E-9	DEFECT
// and then by their enclosing path to fully distinguish them	WITHOUT_CLASSIFICATION	0.9999999870334997	WITHOUT_CLASSIFICATION	1.2966500246395096E-8	DEFECT
// Elements are collated first by name hoping for a quick solution	WITHOUT_CLASSIFICATION	0.9999992087398012	WITHOUT_CLASSIFICATION	7.91260198937443E-7	DEFECT
// Keep track of first non-equal comparison to use in case the // case-insensitive comparisons all end up equal	WITHOUT_CLASSIFICATION	0.9999986707487434	WITHOUT_CLASSIFICATION	1.3292512566695973E-6	DEFECT
// Add the action to the component	WITHOUT_CLASSIFICATION	0.9999994601778247	WITHOUT_CLASSIFICATION	5.398221752838506E-7	DEFECT
// It's illegal in UML to have multiple elements in a namespace with // the same name, but if it happens, keep them distinct so the user // has a chance of catching the error.  Pick an arbitrary, but stable, // collating order. // We don't call them equal because otherwise one will get eliminated // from the TreeSet where this comparator is used.	WITHOUT_CLASSIFICATION	0.9999867966198049	WITHOUT_CLASSIFICATION	1.3203380195035838E-5	DEFECT
// If the strings differed only in non-primary characteristics at // some point (case, accent, etc) pick an arbitrary, but stable,  // collating order.	WITHOUT_CLASSIFICATION	0.9999960151488753	WITHOUT_CLASSIFICATION	3.984851124680498E-6	DEFECT
/* {transient=false, volatile=false} */	WITHOUT_CLASSIFICATION	0.999998764571369	WITHOUT_CLASSIFICATION	1.235428630949672E-6	DEFECT
// Argo customization	WITHOUT_CLASSIFICATION	0.9999990661394436	WITHOUT_CLASSIFICATION	9.338605565580661E-7	DEFECT
// prohibit instantiation	WITHOUT_CLASSIFICATION	0.9999977003155842	WITHOUT_CLASSIFICATION	2.299684415737295E-6	DEFECT
// KeyEvent.isActionKey() method	WITHOUT_CLASSIFICATION	0.9999990000519968	WITHOUT_CLASSIFICATION	9.999480031256522E-7	DEFECT
// Apparently this object had no getItemUID	WITHOUT_CLASSIFICATION	0.9998805462381823	WITHOUT_CLASSIFICATION	1.1945376181764956E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999978976823717	WITHOUT_CLASSIFICATION	2.1023176282337656E-6	DEFECT
// Apparently this object had no getUUID	WITHOUT_CLASSIFICATION	0.9998403468759032	WITHOUT_CLASSIFICATION	1.5965312409692243E-4	DEFECT
// Apparently it had a getItemUID, // but we're not allowed to call it	WITHOUT_CLASSIFICATION	0.9995870542599308	WITHOUT_CLASSIFICATION	4.129457400692604E-4	DEFECT
// Apparently it had a getItemUID, // but we're not allowed to call it	WITHOUT_CLASSIFICATION	0.9995870542599308	WITHOUT_CLASSIFICATION	4.129457400692604E-4	DEFECT
// Apparently it had a getItemUID, // but we're not allowed to call it	WITHOUT_CLASSIFICATION	0.9995870542599308	WITHOUT_CLASSIFICATION	4.129457400692604E-4	DEFECT
// Apparently this object had no setItemUID	WITHOUT_CLASSIFICATION	0.9999283437751968	WITHOUT_CLASSIFICATION	7.165622480316966E-5	DEFECT
// Apparently it had a setItemUID, // but we're not allowed to call it	WITHOUT_CLASSIFICATION	0.9997697737773742	WITHOUT_CLASSIFICATION	2.3022622262582081E-4	DEFECT
// Apparently it had a setItemUID, // but we're not allowed to call it	WITHOUT_CLASSIFICATION	0.9997697737773742	WITHOUT_CLASSIFICATION	2.3022622262582081E-4	DEFECT
// class preloading, so packages are there...	WITHOUT_CLASSIFICATION	0.999984835802456	WITHOUT_CLASSIFICATION	1.5164197544078977E-5	DEFECT
// ...getPackage() can return null's, so we have to // cater for this:	WITHOUT_CLASSIFICATION	0.9999961968339026	WITHOUT_CLASSIFICATION	3.803166097491609E-6	DEFECT
// make this thread interruptible, if called from SwingWorker	WITHOUT_CLASSIFICATION	0.9999448716250083	WITHOUT_CLASSIFICATION	5.5128374991613165E-5	DEFECT
/* Switch the value back off, so that we will                     * get notified again next time.                     */	WITHOUT_CLASSIFICATION	0.9999999615794017	WITHOUT_CLASSIFICATION	3.8420598322065665E-8	DEFECT
// Ignore any nested exceptions. We don't want infinite loop.	WITHOUT_CLASSIFICATION	0.9999999945200636	WITHOUT_CLASSIFICATION	5.479936370650301E-9	DEFECT
// Didn't work.	WITHOUT_CLASSIFICATION	0.9990857644547978	WITHOUT_CLASSIFICATION	9.142355452021402E-4	DEFECT
// Create a proxy object around this handler that can be reflectively added as an Apple ApplicationListener	WITHOUT_CLASSIFICATION	0.9999995832835453	WITHOUT_CLASSIFICATION	4.1671645471440357E-7	DEFECT
// Likely a NoSuchMethodException or an IllegalAccessException loading/invoking eawt.Application methods	WITHOUT_CLASSIFICATION	0.9999992859166142	WITHOUT_CLASSIFICATION	7.140833857464448E-7	DEFECT
// All of the ApplicationListener methods are void; return null regardless of what happens	WITHOUT_CLASSIFICATION	0.9999998448191522	WITHOUT_CLASSIFICATION	1.5518084782273779E-7	DEFECT
// If the target method returns a boolean, use that as a hint	WITHOUT_CLASSIFICATION	0.9999999944287281	WITHOUT_CLASSIFICATION	5.5712720011258455E-9	DEFECT
// For eclipse setup	WITHOUT_CLASSIFICATION	0.9999997589263392	WITHOUT_CLASSIFICATION	2.4107366073882223E-7	DEFECT
// For ant setup	WITHOUT_CLASSIFICATION	0.9999995802062935	WITHOUT_CLASSIFICATION	4.197937065087345E-7	DEFECT
// When running from maven	WITHOUT_CLASSIFICATION	0.9999994393094116	WITHOUT_CLASSIFICATION	5.606905883661003E-7	DEFECT
// If we're setting a handler, enable the About menu item by calling // com.apple.eawt.Application reflectively	WITHOUT_CLASSIFICATION	0.9999992697126172	WITHOUT_CLASSIFICATION	7.302873828373122E-7	DEFECT
// If we're setting a handler, enable the Preferences menu item by calling // com.apple.eawt.Application reflectively	WITHOUT_CLASSIFICATION	0.9999974807456904	WITHOUT_CLASSIFICATION	2.519254309559989E-6	DEFECT
// Override OSXAdapter.callTarget to send information on the // file to be opened	WITHOUT_CLASSIFICATION	0.9999999628866847	WITHOUT_CLASSIFICATION	3.711331538506043E-8	DEFECT
// Ignore if the directory does not exist. // This error will throw when running from the ant setup.	WITHOUT_CLASSIFICATION	0.9999968918740886	WITHOUT_CLASSIFICATION	3.1081259115027268E-6	DEFECT
// Ignore if the directory does not exist. // This error will throw when running from the Eclipse setup.	WITHOUT_CLASSIFICATION	0.9999976323108856	WITHOUT_CLASSIFICATION	2.367689114349591E-6	DEFECT
// Ignore if the directory does not exist. // This error will throw when running from the Eclipse setup.	WITHOUT_CLASSIFICATION	0.9999976323108856	WITHOUT_CLASSIFICATION	2.367689114349591E-6	DEFECT
//"org.argouml.notation.providers",//fails because sub-packages fail (?) //"org.argouml.notation.providers.java", //"org.argouml.notation.providers.uml", //"org.argouml.notation",//fails because sub-packages fail (?) //"org.argouml.notation.ui",	WITHOUT_CLASSIFICATION	0.9999899420834545	WITHOUT_CLASSIFICATION	1.0057916545517956E-5	DEFECT
// There was a comment saying that the below has no cycles, but // Classycle thinks there's a cycle here too, so I believe there // really is one - tfm 20070702 //            "org.argouml.uml.cognitive.critics",	WITHOUT_CLASSIFICATION	0.9999987957338754	WITHOUT_CLASSIFICATION	1.2042661246524822E-6	DEFECT
//TODO:{"org.argouml.ui", "org.argouml.cognitive.ui"},//fails due to subpackages //TODO:{"org.argouml.cognitive", "org.argouml.cognitive.critics"},	WITHOUT_CLASSIFICATION	0.9999944973377145	WITHOUT_CLASSIFICATION	5.502662285503323E-6	DEFECT
//{"org.argouml.kernel", "org.argouml.uml.diagram.ui"},//why does this fail?	WITHOUT_CLASSIFICATION	0.9965951762845909	WITHOUT_CLASSIFICATION	0.0034048237154091737	DEFECT
// do nothing by design	WITHOUT_CLASSIFICATION	0.9999994019598418	WITHOUT_CLASSIFICATION	5.980401581156096E-7	DEFECT
/* These 3 steps are only needed for          * the 2 cases indicated with a X below. */	WITHOUT_CLASSIFICATION	0.9999993871565875	WITHOUT_CLASSIFICATION	6.128434124259797E-7	DEFECT
// Obey the contract ourselves!	WITHOUT_CLASSIFICATION	0.9999999257147053	WITHOUT_CLASSIFICATION	7.428529478062588E-8	DEFECT
// register all of the event listener trackers	WITHOUT_CLASSIFICATION	0.9999999847844532	WITHOUT_CLASSIFICATION	1.5215546756234688E-8	DEFECT
// remove all of the listeners	WITHOUT_CLASSIFICATION	0.9999995077031589	WITHOUT_CLASSIFICATION	4.922968410687361E-7	DEFECT
// fire all of the diagram events	WITHOUT_CLASSIFICATION	0.9999999874572225	WITHOUT_CLASSIFICATION	1.2542777430955891E-8	DEFECT
// fire all of the generator events	WITHOUT_CLASSIFICATION	0.9999999693018808	WITHOUT_CLASSIFICATION	3.0698119150771504E-8	DEFECT
// fire all of the help events	WITHOUT_CLASSIFICATION	0.9999998402336319	WITHOUT_CLASSIFICATION	1.5976636804932303E-7	DEFECT
// fire all of the notation events	WITHOUT_CLASSIFICATION	0.9999999406365438	WITHOUT_CLASSIFICATION	5.936345620665692E-8	DEFECT
// verify all events were fired correctly	WITHOUT_CLASSIFICATION	0.9999882380528172	WITHOUT_CLASSIFICATION	1.1761947182771098E-5	DEFECT
// keep track of total events fired	WITHOUT_CLASSIFICATION	0.9999999321760302	WITHOUT_CLASSIFICATION	6.782396983556745E-8	DEFECT
// keep track of which events fired	WITHOUT_CLASSIFICATION	0.9999999309937804	WITHOUT_CLASSIFICATION	6.900621960696722E-8	DEFECT
// X // X	WITHOUT_CLASSIFICATION	0.9999195943530289	WITHOUT_CLASSIFICATION	8.040564697117722E-5	DEFECT
// initialize the event listener trackers which // verify that all of the proper events were fired	WITHOUT_CLASSIFICATION	0.999999992410472	WITHOUT_CLASSIFICATION	7.589527974383274E-9	DEFECT
// Display events are fired on the Swing event thread. // We need to wait for them to be dispatched // NOTE: if more display events are added to this test, this one // needs to be last	WITHOUT_CLASSIFICATION	0.9999979252536303	WITHOUT_CLASSIFICATION	2.0747463696600858E-6	DEFECT
// Notation events are fired on the Swing event thread. // We assume that serializing on the final call is sufficient	WITHOUT_CLASSIFICATION	0.9999769148672255	WITHOUT_CLASSIFICATION	2.308513277449082E-5	DEFECT
// counts each bit that has been fired	WITHOUT_CLASSIFICATION	0.9999880203523112	WITHOUT_CLASSIFICATION	1.1979647688720321E-5	DEFECT
/* ResolvedCritic(String, List) */	WITHOUT_CLASSIFICATION	0.9999889245034984	WITHOUT_CLASSIFICATION	1.1075496501545333E-5	DEFECT
/* ResolvedCritic(Critic, ListSet) */	WITHOUT_CLASSIFICATION	0.9999879775716316	WITHOUT_CLASSIFICATION	1.2022428368328818E-5	DEFECT
/* ResolvedCritic(Critic, ListSet, boolean) */	WITHOUT_CLASSIFICATION	0.9999991255172345	WITHOUT_CLASSIFICATION	8.744827655470045E-7	DEFECT
/* testmc should now have an ItemUID so we should be able to         * create without adding a new ItemUID */	WITHOUT_CLASSIFICATION	0.9999978806237604	WITHOUT_CLASSIFICATION	2.1193762395607022E-6	DEFECT
// EnabledCM isRelevant checks if the critic is enabled // initialize this to true to verify isRelevant returns true	WITHOUT_CLASSIFICATION	0.9999996619493149	WITHOUT_CLASSIFICATION	3.3805068519282317E-7	DEFECT
// verify isRelevant returns true	WITHOUT_CLASSIFICATION	0.9999971105314134	WITHOUT_CLASSIFICATION	2.8894685865326992E-6	DEFECT
// set enabled to false and check the opposite condition	WITHOUT_CLASSIFICATION	0.9999992062509069	WITHOUT_CLASSIFICATION	7.937490930918563E-7	DEFECT
// verify isRelevant not is false	WITHOUT_CLASSIFICATION	0.9999783646564675	WITHOUT_CLASSIFICATION	2.1635343532471403E-5	DEFECT
// NotSnoozedCM isRelevant checks if the critic is snoozed // snooze the critic to verify isRelevant returns false	WITHOUT_CLASSIFICATION	0.9999999456349782	WITHOUT_CLASSIFICATION	5.4365021751594444E-8	DEFECT
// unsnooze the critic to verify the critic is not relevant	WITHOUT_CLASSIFICATION	0.9999991255807993	WITHOUT_CLASSIFICATION	8.744192007562995E-7	DEFECT
// verify isRelevant is true	WITHOUT_CLASSIFICATION	0.9999961832044351	WITHOUT_CLASSIFICATION	3.816795564910065E-6	DEFECT
// CurDecisionCM isRelevant checks to see if the critic has // any decisions that have a priority > 0 and less than the // priority of the critic.  By default the critic has no // decisions so isRelevant should return false.	WITHOUT_CLASSIFICATION	0.9999999399496199	WITHOUT_CLASSIFICATION	6.0050380168946E-8	DEFECT
// verify isRelevant is still false	WITHOUT_CLASSIFICATION	0.999998801603282	WITHOUT_CLASSIFICATION	1.198396718047446E-6	DEFECT
// isRelevant should now be true	WITHOUT_CLASSIFICATION	0.9999877857130415	WITHOUT_CLASSIFICATION	1.2214286958428797E-5	DEFECT
// isRelevant should still be true	WITHOUT_CLASSIFICATION	0.9999466832613347	WITHOUT_CLASSIFICATION	5.331673866533275E-5	DEFECT
// initialize test data	WITHOUT_CLASSIFICATION	0.9999997294321407	WITHOUT_CLASSIFICATION	2.705678593092569E-7	DEFECT
// initialize the ToDoList	WITHOUT_CLASSIFICATION	0.999994396377179	WITHOUT_CLASSIFICATION	5.603622821014768E-6	DEFECT
// add a ToDoItem	WITHOUT_CLASSIFICATION	0.999997428523239	WITHOUT_CLASSIFICATION	2.5714767609680768E-6	DEFECT
// redundantly add item again which should be ignored	WITHOUT_CLASSIFICATION	0.9999994262668395	WITHOUT_CLASSIFICATION	5.737331605717832E-7	DEFECT
// size should be 1 since addition of second item would have been ignored	WITHOUT_CLASSIFICATION	0.9999977516086548	WITHOUT_CLASSIFICATION	2.2483913451658683E-6	DEFECT
// retrieve item	WITHOUT_CLASSIFICATION	0.9999987766075569	WITHOUT_CLASSIFICATION	1.2233924430784024E-6	DEFECT
// remove item	WITHOUT_CLASSIFICATION	0.9999948359612949	WITHOUT_CLASSIFICATION	5.164038705178066E-6	DEFECT
// size should be 0 since item was removed	WITHOUT_CLASSIFICATION	0.9999987247089627	WITHOUT_CLASSIFICATION	1.2752910373465208E-6	DEFECT
// initialize the GoalModel	WITHOUT_CLASSIFICATION	0.9999975586053966	WITHOUT_CLASSIFICATION	2.441394603290496E-6	DEFECT
// check that the model was initialized with the unspecified goal	WITHOUT_CLASSIFICATION	0.9999999224580784	WITHOUT_CLASSIFICATION	7.75419215455283E-8	DEFECT
// change priority of unspecified goal so we can verify it was updated	WITHOUT_CLASSIFICATION	0.9999999986443024	WITHOUT_CLASSIFICATION	1.3556975443585768E-9	DEFECT
// first verify that the set goal priority did not add an extra goal	WITHOUT_CLASSIFICATION	0.9999975177457526	WITHOUT_CLASSIFICATION	2.4822542473558873E-6	DEFECT
// check that the model correctly updates a goal's priority	WITHOUT_CLASSIFICATION	0.9999815801392563	WITHOUT_CLASSIFICATION	1.8419860743740173E-5	DEFECT
// test the removal of a goal	WITHOUT_CLASSIFICATION	0.9999998840605476	WITHOUT_CLASSIFICATION	1.1593945239477195E-7	DEFECT
// number of goals should now be 0	WITHOUT_CLASSIFICATION	0.9999997666489241	WITHOUT_CLASSIFICATION	2.3335107601633897E-7	DEFECT
// start desiring a goal which should add a goal and bump the size to 1	WITHOUT_CLASSIFICATION	0.9999998562396883	WITHOUT_CLASSIFICATION	1.4376031161389428E-7	DEFECT
// number of goals should now be 1	WITHOUT_CLASSIFICATION	0.9999996638497743	WITHOUT_CLASSIFICATION	3.3615022576026043E-7	DEFECT
// stop desiring the goal which should remove it from the model	WITHOUT_CLASSIFICATION	0.9999998738280383	WITHOUT_CLASSIFICATION	1.2617196165470302E-7	DEFECT
//        UMLSequenceDiagram seqdiag = new UMLSequenceDiagram();	WITHOUT_CLASSIFICATION	0.9999997118575294	WITHOUT_CLASSIFICATION	2.881424705825189E-7	DEFECT
// initialize test data	WITHOUT_CLASSIFICATION	0.9999997294321407	WITHOUT_CLASSIFICATION	2.705678593092569E-7	DEFECT
// This test calls ToDoList.addElement which requires the // Model.  We are able to get away with using the Mock model.	WITHOUT_CLASSIFICATION	0.9999904754035688	WITHOUT_CLASSIFICATION	9.524596431217483E-6	DEFECT
//        checkAssignIDToObject(seqdiag, true, true);	WITHOUT_CLASSIFICATION	0.9999992475847289	WITHOUT_CLASSIFICATION	7.524152711295195E-7	DEFECT
// FigEdgeNote has no UUID	WITHOUT_CLASSIFICATION	0.9999927489054675	WITHOUT_CLASSIFICATION	7.251094532392081E-6	DEFECT
//checkAssignIDToObject(figassociationrole, true, true);	WITHOUT_CLASSIFICATION	0.9999883033182639	WITHOUT_CLASSIFICATION	1.1696681735966915E-5	DEFECT
//checkAssignIDToObject(fighistorystate, true, true);	WITHOUT_CLASSIFICATION	0.999998086449033	WITHOUT_CLASSIFICATION	1.913550966948546E-6	DEFECT
//checkAssignIDToObject(figstate, true, true);	WITHOUT_CLASSIFICATION	0.9999988736947463	WITHOUT_CLASSIFICATION	1.1263052538103867E-6	DEFECT
// initialize basic parameters that are // different from Decision.UNSPEC	WITHOUT_CLASSIFICATION	0.9999982102553833	WITHOUT_CLASSIFICATION	1.7897446167023062E-6	DEFECT
// initialize a decision object with parameters	WITHOUT_CLASSIFICATION	0.9999989846097069	WITHOUT_CLASSIFICATION	1.0153902930989742E-6	DEFECT
// initialize a decision object with parameters	WITHOUT_CLASSIFICATION	0.9999989846097069	WITHOUT_CLASSIFICATION	1.0153902930989742E-6	DEFECT
// verify parameters were initialized correctly by the constructor	WITHOUT_CLASSIFICATION	0.9999940085001768	WITHOUT_CLASSIFICATION	5.9914998232050904E-6	DEFECT
// set the priority to a different value	WITHOUT_CLASSIFICATION	0.9999996623064414	WITHOUT_CLASSIFICATION	3.376935585913783E-7	DEFECT
// set the priority to a different value	WITHOUT_CLASSIFICATION	0.9999996623064414	WITHOUT_CLASSIFICATION	3.376935585913783E-7	DEFECT
// verify the priority was correctly updated	WITHOUT_CLASSIFICATION	0.9999890776151542	WITHOUT_CLASSIFICATION	1.092238484577957E-5	DEFECT
// verify the priority was correctly updated	WITHOUT_CLASSIFICATION	0.9999890776151542	WITHOUT_CLASSIFICATION	1.092238484577957E-5	DEFECT
// set the name to a different value	WITHOUT_CLASSIFICATION	0.9999995371803402	WITHOUT_CLASSIFICATION	4.628196597973588E-7	DEFECT
// set the name to a different value	WITHOUT_CLASSIFICATION	0.9999995371803402	WITHOUT_CLASSIFICATION	4.628196597973588E-7	DEFECT
// verify the name property was correctly updated	WITHOUT_CLASSIFICATION	0.9999588910215381	WITHOUT_CLASSIFICATION	4.110897846189388E-5	DEFECT
// following the update the priority should be // equivalent to Decision.UNSPEC	WITHOUT_CLASSIFICATION	0.9999999943932416	WITHOUT_CLASSIFICATION	5.606758348749503E-9	DEFECT
// test that properties were correctly initialized by the constructor	WITHOUT_CLASSIFICATION	0.9999914139342645	WITHOUT_CLASSIFICATION	8.586065735539127E-6	DEFECT
// initialize the Checklist	WITHOUT_CLASSIFICATION	0.9999971553476584	WITHOUT_CLASSIFICATION	2.84465234146953E-6	DEFECT
// add some test data	WITHOUT_CLASSIFICATION	0.9999997406234745	WITHOUT_CLASSIFICATION	2.5937652553580136E-7	DEFECT
// add some test data	WITHOUT_CLASSIFICATION	0.9999997406234745	WITHOUT_CLASSIFICATION	2.5937652553580136E-7	DEFECT
// verify the size of the list	WITHOUT_CLASSIFICATION	0.9999994463177154	WITHOUT_CLASSIFICATION	5.536822845024856E-7	DEFECT
// verify the size of the list	WITHOUT_CLASSIFICATION	0.9999994463177154	WITHOUT_CLASSIFICATION	5.536822845024856E-7	DEFECT
// verify the items were correctly added	WITHOUT_CLASSIFICATION	0.9999009199811382	WITHOUT_CLASSIFICATION	9.908001886193572E-5	DEFECT
// verify the items were correctly added	WITHOUT_CLASSIFICATION	0.9999009199811382	WITHOUT_CLASSIFICATION	9.908001886193572E-5	DEFECT
// test that the category and description are correct	WITHOUT_CLASSIFICATION	0.9999923450414799	WITHOUT_CLASSIFICATION	7.654958520106906E-6	DEFECT
// create a new list to test the addAll	WITHOUT_CLASSIFICATION	0.9999998560986862	WITHOUT_CLASSIFICATION	1.4390131378008808E-7	DEFECT
// create a new list to test the addAll	WITHOUT_CLASSIFICATION	0.9999998560986862	WITHOUT_CLASSIFICATION	1.4390131378008808E-7	DEFECT
// add all of the test items from the first list	WITHOUT_CLASSIFICATION	0.9999999593018548	WITHOUT_CLASSIFICATION	4.069814512626576E-8	DEFECT
// add all of the test items from the first list	WITHOUT_CLASSIFICATION	0.9999999593018548	WITHOUT_CLASSIFICATION	4.069814512626576E-8	DEFECT
// verify the size of the new list	WITHOUT_CLASSIFICATION	0.9999996043158621	WITHOUT_CLASSIFICATION	3.956841378420842E-7	DEFECT
// verify the size of the new list	WITHOUT_CLASSIFICATION	0.9999996043158621	WITHOUT_CLASSIFICATION	3.956841378420842E-7	DEFECT
// initialize the ChecklistStatus	WITHOUT_CLASSIFICATION	0.9999993353856717	WITHOUT_CLASSIFICATION	6.646143282308977E-7	DEFECT
// Construct a CheckItem 	WITHOUT_CLASSIFICATION	0.9999985394225531	WITHOUT_CLASSIFICATION	1.4605774468565193E-6	DEFECT
// (1) test that the properties were correctly initialized	WITHOUT_CLASSIFICATION	0.9999168372403368	WITHOUT_CLASSIFICATION	8.316275966330253E-5	DEFECT
// reset the values to something different	WITHOUT_CLASSIFICATION	0.9999985767034246	WITHOUT_CLASSIFICATION	1.4232965753559598E-6	DEFECT
// (2) Construct another CheckItem	WITHOUT_CLASSIFICATION	0.9999992845129319	WITHOUT_CLASSIFICATION	7.154870680855105E-7	DEFECT
// test that the properties were correctly initialized	WITHOUT_CLASSIFICATION	0.9998266591547916	WITHOUT_CLASSIFICATION	1.733408452084251E-4	DEFECT
// verify that the equivalence test works	WITHOUT_CLASSIFICATION	0.9999824105367457	WITHOUT_CLASSIFICATION	1.7589463254266626E-5	DEFECT
// initialize SnoozeOrder	WITHOUT_CLASSIFICATION	0.9999973836895318	WITHOUT_CLASSIFICATION	2.6163104681867578E-6	DEFECT
// snooze and verify its been enabled	WITHOUT_CLASSIFICATION	0.9999975348702648	WITHOUT_CLASSIFICATION	2.465129735189792E-6	DEFECT
// unsnooze and verify its been disabled	WITHOUT_CLASSIFICATION	0.9999794944840624	WITHOUT_CLASSIFICATION	2.050551593754198E-5	DEFECT
// maybe next test is going to change in future	WITHOUT_CLASSIFICATION	0.9999999959806007	WITHOUT_CLASSIFICATION	4.019399245764986E-9	DEFECT
// test with a class in a package	WITHOUT_CLASSIFICATION	0.9999921181926867	WITHOUT_CLASSIFICATION	7.881807313168035E-6	DEFECT
// Let's make it a bit more difficult by setting the target:	WITHOUT_CLASSIFICATION	0.9999997455807473	WITHOUT_CLASSIFICATION	2.544192527100824E-7	DEFECT
// test with a class and an inner class	WITHOUT_CLASSIFICATION	0.9999827528492373	WITHOUT_CLASSIFICATION	1.7247150762724014E-5	DEFECT
// test with a class and an inner class	WITHOUT_CLASSIFICATION	0.9999827528492373	WITHOUT_CLASSIFICATION	1.7247150762724014E-5	DEFECT
// test with a class and class diagram	WITHOUT_CLASSIFICATION	0.9999976225029598	WITHOUT_CLASSIFICATION	2.377497040171222E-6	DEFECT
// test with a class and class diagram	WITHOUT_CLASSIFICATION	0.9999976225029598	WITHOUT_CLASSIFICATION	2.377497040171222E-6	DEFECT
// try with Statediagram	WITHOUT_CLASSIFICATION	0.9999921364436576	WITHOUT_CLASSIFICATION	7.863556342406635E-6	DEFECT
// try with Statediagram	WITHOUT_CLASSIFICATION	0.9999921364436576	WITHOUT_CLASSIFICATION	7.863556342406635E-6	DEFECT
// try with Statediagram	WITHOUT_CLASSIFICATION	0.9999921364436576	WITHOUT_CLASSIFICATION	7.863556342406635E-6	DEFECT
// try with Statediagram	WITHOUT_CLASSIFICATION	0.9999921364436576	WITHOUT_CLASSIFICATION	7.863556342406635E-6	DEFECT
/* Put the statemachine in the namespace of the class: */	WITHOUT_CLASSIFICATION	0.9996086537233174	WITHOUT_CLASSIFICATION	3.913462766825902E-4	DEFECT
// test with a package and a class and activity diagram	WITHOUT_CLASSIFICATION	0.9999944154068677	WITHOUT_CLASSIFICATION	5.584593132371948E-6	DEFECT
// test with a package and a class and activity diagram	WITHOUT_CLASSIFICATION	0.9999944154068677	WITHOUT_CLASSIFICATION	5.584593132371948E-6	DEFECT
// build the Activity Diagram	WITHOUT_CLASSIFICATION	0.9999939399852596	WITHOUT_CLASSIFICATION	6.060014740418572E-6	DEFECT
// build the Activity Diagram	WITHOUT_CLASSIFICATION	0.9999939399852596	WITHOUT_CLASSIFICATION	6.060014740418572E-6	DEFECT
/* In the next line, replacing makeEmptyProject         * by getCurrentProject fails the test,         * except when run in Eclipse.         * MVW: I have no idea why.*/	WITHOUT_CLASSIFICATION	0.995924792502403	WITHOUT_CLASSIFICATION	0.0040752074975969705	DEFECT
/* We no longer send individual events,             *  so next code is obsolete: */	WITHOUT_CLASSIFICATION	0.9999998552130109	WITHOUT_CLASSIFICATION	1.4478698905754562E-7	DEFECT
/* We initialised Java Notation, so let's activate it: */	WITHOUT_CLASSIFICATION	0.9999884207790597	WITHOUT_CLASSIFICATION	1.1579220940230467E-5	DEFECT
/* Needed for initialisations: */	WITHOUT_CLASSIFICATION	0.999992601416191	WITHOUT_CLASSIFICATION	7.398583809043364E-6	DEFECT
// set MetaProfile as a default profile	WITHOUT_CLASSIFICATION	0.9999999324186306	WITHOUT_CLASSIFICATION	6.758136932682204E-8	DEFECT
// create a dependency from the project's model to the MetaProfile	WITHOUT_CLASSIFICATION	0.9999999932153939	WITHOUT_CLASSIFICATION	6.784606126654602E-9	DEFECT
// remove the MetaProfile from the project's profile configuration	WITHOUT_CLASSIFICATION	0.9999998353597945	WITHOUT_CLASSIFICATION	1.6464020544672983E-7	DEFECT
// save the project into a new file	WITHOUT_CLASSIFICATION	0.9999998795839574	WITHOUT_CLASSIFICATION	1.2041604258282133E-7	DEFECT
// setup a user defined profile	WITHOUT_CLASSIFICATION	0.9999999932751434	WITHOUT_CLASSIFICATION	6.724856531147514E-9	DEFECT
/* TRY GUARD/ITERATOR SYNTAX */	WITHOUT_CLASSIFICATION	0.9999326610806097	WITHOUT_CLASSIFICATION	6.73389193902743E-5	DEFECT
// create a new project and assert that it has the MetaProfile  // as part of the project's profile configuration	WITHOUT_CLASSIFICATION	0.9999979352122006	WITHOUT_CLASSIFICATION	2.064787799352451E-6	DEFECT
// assert that the project's model element that had a dependency to  // the MetaProfile doesn't get inconsistent	WITHOUT_CLASSIFICATION	0.9999992273139805	WITHOUT_CLASSIFICATION	7.726860195324228E-7	DEFECT
// reopen the project and assert that the MetaProfile isn't part of  // the profile configuration, including the fact that the stereotype  // <<Critic>> isn't found	WITHOUT_CLASSIFICATION	0.999917380195411	WITHOUT_CLASSIFICATION	8.261980458892384E-5	DEFECT
// assert that the project's model elements that had a dependency to  // the UML profile for Java are consistent	WITHOUT_CLASSIFICATION	0.9999945501856998	WITHOUT_CLASSIFICATION	5.44981430022156E-6	DEFECT
// add it to the project configuration	WITHOUT_CLASSIFICATION	0.9999992546587577	WITHOUT_CLASSIFICATION	7.453412423371894E-7	DEFECT
// add it to the project configuration	WITHOUT_CLASSIFICATION	0.9999992546587577	WITHOUT_CLASSIFICATION	7.453412423371894E-7	DEFECT
// create a dependency between the project's model and the user defined  // profile	WITHOUT_CLASSIFICATION	0.9999999990723194	WITHOUT_CLASSIFICATION	9.2768051436169E-10	DEFECT
// create a dependency between the project's model and the user defined  // profile	WITHOUT_CLASSIFICATION	0.9999999990723194	WITHOUT_CLASSIFICATION	9.2768051436169E-10	DEFECT
// save the project	WITHOUT_CLASSIFICATION	0.9999992894647008	WITHOUT_CLASSIFICATION	7.105352990951987E-7	DEFECT
// save the project	WITHOUT_CLASSIFICATION	0.9999992894647008	WITHOUT_CLASSIFICATION	7.105352990951987E-7	DEFECT
// load the project	WITHOUT_CLASSIFICATION	0.9999978550873865	WITHOUT_CLASSIFICATION	2.144912613414335E-6	DEFECT
// assert that the model element that depends on the profile is  // consistent	WITHOUT_CLASSIFICATION	0.9999951774233481	WITHOUT_CLASSIFICATION	4.822576651977697E-6	DEFECT
// remove the user defined profile and the directory where it is	WITHOUT_CLASSIFICATION	0.9999998663520778	WITHOUT_CLASSIFICATION	1.3364792228552675E-7	DEFECT
// Success - expected exception	WITHOUT_CLASSIFICATION	0.9999996914106476	WITHOUT_CLASSIFICATION	3.085893523703225E-7	DEFECT
// Clean up after ourselves by deleting profile model	WITHOUT_CLASSIFICATION	0.999999936760522	WITHOUT_CLASSIFICATION	6.323947800740269E-8	DEFECT
// Test both forms of addBaseClass	WITHOUT_CLASSIFICATION	0.9999993927798615	WITHOUT_CLASSIFICATION	6.072201385242441E-7	DEFECT
// Test remaining form of removeBaseClass	WITHOUT_CLASSIFICATION	0.9999997340125925	WITHOUT_CLASSIFICATION	2.659874076030921E-7	DEFECT
// by default the build already builds one default EP	WITHOUT_CLASSIFICATION	0.9999997729943394	WITHOUT_CLASSIFICATION	2.270056606920253E-7	DEFECT
//$JUnit-BEGIN$	WITHOUT_CLASSIFICATION	0.9999885981214169	WITHOUT_CLASSIFICATION	1.1401878583034883E-5	DEFECT
//$JUnit-END$	WITHOUT_CLASSIFICATION	0.9999878507896676	WITHOUT_CLASSIFICATION	1.2149210332500933E-5	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#tearDown()     */	WITHOUT_CLASSIFICATION	0.999996129660319	WITHOUT_CLASSIFICATION	3.8703396809925125E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
// Flag to enable performance testing - off by default	WITHOUT_CLASSIFICATION	0.9999999666387628	WITHOUT_CLASSIFICATION	3.336123713942791E-8	DEFECT
// initialize the model and profile subsystems to simulate a fresh  // ArgoUML session	WITHOUT_CLASSIFICATION	0.9999999736593975	WITHOUT_CLASSIFICATION	2.634060249927053E-8	DEFECT
// 20 sec.	WITHOUT_CLASSIFICATION	0.9999926855430044	WITHOUT_CLASSIFICATION	7.314456995566135E-6	DEFECT
// Add one child.	WITHOUT_CLASSIFICATION	0.9999991131695214	WITHOUT_CLASSIFICATION	8.868304786936885E-7	DEFECT
// Performance testing parameters	WITHOUT_CLASSIFICATION	0.9999997974963462	WITHOUT_CLASSIFICATION	2.0250365392160333E-7	DEFECT
// Add grandchild.	WITHOUT_CLASSIFICATION	0.9999996796291902	WITHOUT_CLASSIFICATION	3.203708098276791E-7	DEFECT
// Create a generalizable element with an element without children.	WITHOUT_CLASSIFICATION	0.9999928678601937	WITHOUT_CLASSIFICATION	7.132139806353044E-6	DEFECT
// Check periodically to see if we've exceeded time limit	WITHOUT_CLASSIFICATION	0.9999971314088479	WITHOUT_CLASSIFICATION	2.86859115202817E-6	DEFECT
// Add another child.	WITHOUT_CLASSIFICATION	0.9999988711688317	WITHOUT_CLASSIFICATION	1.1288311683578832E-6	DEFECT
// Tree is created depth first, so this should be at the bottom	WITHOUT_CLASSIFICATION	0.9999956736707978	WITHOUT_CLASSIFICATION	4.326329202273243E-6	DEFECT
// Try changing namespace of element and make sure results track	WITHOUT_CLASSIFICATION	0.9999991583138667	WITHOUT_CLASSIFICATION	8.416861334016873E-7	DEFECT
/*     * Populate our namespace hierarchy to the requested depth.  Total number     * of created elements is children^maxLevel, so be careful not to increase     * parameters too much.     */	WITHOUT_CLASSIFICATION	0.9999999990911203	WITHOUT_CLASSIFICATION	9.0887985940052E-10	DEFECT
/* TRY SOME GUARD/ITERATOR ERRORS */	WITHOUT_CLASSIFICATION	0.9993848539729548	WITHOUT_CLASSIFICATION	6.151460270451658E-4	DEFECT
/*     * @see junit.framework.TestCase#TestCase(String)     */	WITHOUT_CLASSIFICATION	0.9999982039448355	WITHOUT_CLASSIFICATION	1.7960551644748164E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
// Make sure we have a root model for TagDefinitions to get put in.	WITHOUT_CLASSIFICATION	0.9999999743085402	WITHOUT_CLASSIFICATION	2.569145988719698E-8	DEFECT
// create the tree of objects	WITHOUT_CLASSIFICATION	0.9999999408514778	WITHOUT_CLASSIFICATION	5.9148522110511385E-8	DEFECT
// copy package p1 into p2 package	WITHOUT_CLASSIFICATION	0.9999992747737635	WITHOUT_CLASSIFICATION	7.252262364474967E-7	DEFECT
// change the structure in p1 package	WITHOUT_CLASSIFICATION	0.9999999874013087	WITHOUT_CLASSIFICATION	1.2598691269965805E-8	DEFECT
// verify the copied package	WITHOUT_CLASSIFICATION	0.9999998538540591	WITHOUT_CLASSIFICATION	1.4614594088427853E-7	DEFECT
// verify the copied class	WITHOUT_CLASSIFICATION	0.9999981981261937	WITHOUT_CLASSIFICATION	1.8018738062655536E-6	DEFECT
// verify the copied nested package and the copied interface	WITHOUT_CLASSIFICATION	0.999999995321921	WITHOUT_CLASSIFICATION	4.678078936779472E-9	DEFECT
// verify the copied attribute	WITHOUT_CLASSIFICATION	0.9999997848895191	WITHOUT_CLASSIFICATION	2.1511048087363547E-7	DEFECT
// See if we can copy a class right off	WITHOUT_CLASSIFICATION	0.9999958667026156	WITHOUT_CLASSIFICATION	4.133297384397881E-6	DEFECT
// Change things	WITHOUT_CLASSIFICATION	0.9999985647007341	WITHOUT_CLASSIFICATION	1.435299265946498E-6	DEFECT
// Change things	WITHOUT_CLASSIFICATION	0.9999985647007341	WITHOUT_CLASSIFICATION	1.435299265946498E-6	DEFECT
// Change things	WITHOUT_CLASSIFICATION	0.9999985647007341	WITHOUT_CLASSIFICATION	1.435299265946498E-6	DEFECT
// Change things	WITHOUT_CLASSIFICATION	0.9999985647007341	WITHOUT_CLASSIFICATION	1.435299265946498E-6	DEFECT
// Assert that the copy isn't modified when the source changes	WITHOUT_CLASSIFICATION	0.9999993690273643	WITHOUT_CLASSIFICATION	6.309726356599609E-7	DEFECT
// Assert that the copy isn't modified when the source changes	WITHOUT_CLASSIFICATION	0.9999993690273643	WITHOUT_CLASSIFICATION	6.309726356599609E-7	DEFECT
// See if the other copy was just a lucky shot	WITHOUT_CLASSIFICATION	0.9999998248157618	WITHOUT_CLASSIFICATION	1.7518423817173572E-7	DEFECT
// See if the other copy was just a lucky shot	WITHOUT_CLASSIFICATION	0.9999998248157618	WITHOUT_CLASSIFICATION	1.7518423817173572E-7	DEFECT
// See if the other copy was just a lucky shot	WITHOUT_CLASSIFICATION	0.9999998248157618	WITHOUT_CLASSIFICATION	1.7518423817173572E-7	DEFECT
// See if the other copy was just a lucky shot	WITHOUT_CLASSIFICATION	0.9999998248157618	WITHOUT_CLASSIFICATION	1.7518423817173572E-7	DEFECT
// See if the other copy was just a lucky shot	WITHOUT_CLASSIFICATION	0.9999998248157618	WITHOUT_CLASSIFICATION	1.7518423817173572E-7	DEFECT
// See if two copies look like copies of eachother	WITHOUT_CLASSIFICATION	0.9999996538438333	WITHOUT_CLASSIFICATION	3.4615616669296346E-7	DEFECT
// See if two copies look like copies of eachother	WITHOUT_CLASSIFICATION	0.9999996538438333	WITHOUT_CLASSIFICATION	3.4615616669296346E-7	DEFECT
// See if two copies look like copies of eachother	WITHOUT_CLASSIFICATION	0.9999996538438333	WITHOUT_CLASSIFICATION	3.4615616669296346E-7	DEFECT
// See if we can copy a datatype right off	WITHOUT_CLASSIFICATION	0.999997867469448	WITHOUT_CLASSIFICATION	2.1325305519353906E-6	DEFECT
// See if two copies look like copies of each other	WITHOUT_CLASSIFICATION	0.9999998321085575	WITHOUT_CLASSIFICATION	1.6789144248091134E-7	DEFECT
// See if two copies look like copies of each other	WITHOUT_CLASSIFICATION	0.9999998321085575	WITHOUT_CLASSIFICATION	1.6789144248091134E-7	DEFECT
// See if we can copy an interface right off	WITHOUT_CLASSIFICATION	0.9999994235216897	WITHOUT_CLASSIFICATION	5.764783103720748E-7	DEFECT
/*     * Create a new tagged value with the given type and value     * and add it to a ModelElement.     */	WITHOUT_CLASSIFICATION	0.9999990342227866	WITHOUT_CLASSIFICATION	9.657772133638152E-7	DEFECT
/*     * Update an existing tagged value on a model element.     */	WITHOUT_CLASSIFICATION	0.9999998143571844	WITHOUT_CLASSIFICATION	1.856428156021489E-7	DEFECT
// See if we can copy a package right off	WITHOUT_CLASSIFICATION	0.9999988416559692	WITHOUT_CLASSIFICATION	1.1583440308062268E-6	DEFECT
// See if we can copy a stereotype right off	WITHOUT_CLASSIFICATION	0.9999981263302855	WITHOUT_CLASSIFICATION	1.8736697145620464E-6	DEFECT
// Expected	WITHOUT_CLASSIFICATION	0.9999995622068986	WITHOUT_CLASSIFICATION	4.3779310146199917E-7	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999748478784519	WITHOUT_CLASSIFICATION	2.5152121548066763E-5	DEFECT
// Check to see if association still exists	WITHOUT_CLASSIFICATION	0.9999977657022449	WITHOUT_CLASSIFICATION	2.2342977551976805E-6	DEFECT
// Expected IllegalArgumentException seen	WITHOUT_CLASSIFICATION	0.9999999498624452	WITHOUT_CLASSIFICATION	5.013755478735272E-8	DEFECT
// A parameterized class can only be the client of a single binding	WITHOUT_CLASSIFICATION	0.9999996497777003	WITHOUT_CLASSIFICATION	3.5022229968657907E-7	DEFECT
// exception expected - test success	WITHOUT_CLASSIFICATION	0.9999999140833765	WITHOUT_CLASSIFICATION	8.591662347748737E-8	DEFECT
// expected - test success	WITHOUT_CLASSIFICATION	0.9999999231176492	WITHOUT_CLASSIFICATION	7.688235076726886E-8	DEFECT
// expected - test success	WITHOUT_CLASSIFICATION	0.9999999231176492	WITHOUT_CLASSIFICATION	7.688235076726886E-8	DEFECT
// Create a new arg list with a different set of args (but same types)	WITHOUT_CLASSIFICATION	0.9999948914714671	WITHOUT_CLASSIFICATION	5.108528532780282E-6	DEFECT
// success	WITHOUT_CLASSIFICATION	0.9999988988612902	WITHOUT_CLASSIFICATION	1.1011387097225628E-6	DEFECT
// not static	WITHOUT_CLASSIFICATION	0.9999979920751185	WITHOUT_CLASSIFICATION	2.0079248814655922E-6	DEFECT
// Test passed	WITHOUT_CLASSIFICATION	0.9999993215485377	WITHOUT_CLASSIFICATION	6.784514623905759E-7	DEFECT
// Test passed	WITHOUT_CLASSIFICATION	0.9999993215485377	WITHOUT_CLASSIFICATION	6.784514623905759E-7	DEFECT
// NOT UML1.4	WITHOUT_CLASSIFICATION	0.9999966018489442	WITHOUT_CLASSIFICATION	3.398151055670501E-6	DEFECT
// non existent in UML1	WITHOUT_CLASSIFICATION	0.9999995588484546	WITHOUT_CLASSIFICATION	4.4115154536811125E-7	DEFECT
// Not in UML1.4	WITHOUT_CLASSIFICATION	0.9999913620639427	WITHOUT_CLASSIFICATION	8.637936057408028E-6	DEFECT
// Not in UML1.4	WITHOUT_CLASSIFICATION	0.9999913620639427	WITHOUT_CLASSIFICATION	8.637936057408028E-6	DEFECT
// Not in UML1.4	WITHOUT_CLASSIFICATION	0.9999913620639427	WITHOUT_CLASSIFICATION	8.637936057408028E-6	DEFECT
// Not in UML1.4	WITHOUT_CLASSIFICATION	0.9999913620639427	WITHOUT_CLASSIFICATION	8.637936057408028E-6	DEFECT
// not in UML1.4	WITHOUT_CLASSIFICATION	0.9999778866453354	WITHOUT_CLASSIFICATION	2.2113354664719332E-5	DEFECT
// This is not a well formed model in a strict sense. // See the multiplicity in UML 1.3 Figure 2-5.	WITHOUT_CLASSIFICATION	0.999918434068857	WITHOUT_CLASSIFICATION	8.156593114296735E-5	DEFECT
// returns List	WITHOUT_CLASSIFICATION	0.9999991469507028	WITHOUT_CLASSIFICATION	8.530492971882345E-7	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
// Deleting the stereotype should cascade to the TagDefinition, // then the TaggedValue	WITHOUT_CLASSIFICATION	0.9999996820104744	WITHOUT_CLASSIFICATION	3.1798952565205547E-7	DEFECT
// TODO: constraints // TODO: required tags	WITHOUT_CLASSIFICATION	0.9899433500474351	WITHOUT_CLASSIFICATION	0.010056649952564887	DEFECT
// Enumerate declaring class	WITHOUT_CLASSIFICATION	0.9999977726802061	WITHOUT_CLASSIFICATION	2.227319793994558E-6	DEFECT
// NOTE: Although it's not shown in the UML 1.4 spec, a TemplateArgument // appears to be a datavalue (like MultiplicityRange) and can not be // reused in multiple instances.  The UML diagrams don't show it as a // composition, but it effectively is.	WITHOUT_CLASSIFICATION	0.9990603814427639	WITHOUT_CLASSIFICATION	9.396185572361844E-4	DEFECT
// Must be called after setImplementation.	WITHOUT_CLASSIFICATION	0.999997722735477	WITHOUT_CLASSIFICATION	2.277264523004936E-6	DEFECT
// Enumerate fields	WITHOUT_CLASSIFICATION	0.9999992274739828	WITHOUT_CLASSIFICATION	7.72526017159289E-7	DEFECT
// Enumerate constructors	WITHOUT_CLASSIFICATION	0.9999997879217707	WITHOUT_CLASSIFICATION	2.120782292833076E-7	DEFECT
// Indicate that the test was validated	WITHOUT_CLASSIFICATION	0.9999995285389006	WITHOUT_CLASSIFICATION	4.714610994101665E-7	DEFECT
// TODO: Look up class in truth table	WITHOUT_CLASSIFICATION	0.7113961473001192	WITHOUT_CLASSIFICATION	0.28860385269988076	DEFECT
// Check superclass. //Make sure this class does not extend or reference non-ArgoUML classes	WITHOUT_CLASSIFICATION	0.9999874639761654	WITHOUT_CLASSIFICATION	1.2536023834547407E-5	DEFECT
// Enumerate methods // Enumerate method arguments	WITHOUT_CLASSIFICATION	0.9999994147000854	WITHOUT_CLASSIFICATION	5.852999146423457E-7	DEFECT
// Not currently present as token in Model.getFacade(). // NIF: runTruthTest(Model.getFacade().isAElement(o), //                   Model.getFacade().ELEMENT); // NIF: runTruthTest(Model.getFacade().isAExpression(o), //           Model.getFacade().EXPRESSION); // NIF: runTruthTest(Model.getFacade().isAExtensionPoint(o), //           Model.getFacade().EXTENSION_POINT); // NIF: runTruthTest(Model.getFacade().isAFeature(o), //                   Model.getFacade().FEATURE);	WITHOUT_CLASSIFICATION	0.9652912095668428	WITHOUT_CLASSIFICATION	0.03470879043315724	DEFECT
// NIF: runTruthTest(Model.getFacade().isAInteraction(o), //           Model.getFacade().INTERACTION);	WITHOUT_CLASSIFICATION	0.9999992080923832	WITHOUT_CLASSIFICATION	7.919076169255131E-7	DEFECT
// NIF: unTruthTest(Model.getFacade().isAMethod(o), //	WITHOUT_CLASSIFICATION	0.9999962454199056	WITHOUT_CLASSIFICATION	3.754580094460457E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999748478784519	WITHOUT_CLASSIFICATION	2.5152121548066763E-5	DEFECT
// NIF: runTruthTest(Model.getFacade().isAStructuralFeature(o), //          Model.getMetaTypes().getStructuralFeature()); // NIF: runTruthTest(Model.getFacade().isATaggedValue(o), //          Model.getMetaTypes().getTaggedValue());	WITHOUT_CLASSIFICATION	0.9999975504656343	WITHOUT_CLASSIFICATION	2.449534365540126E-6	DEFECT
// Call methods that exists for all objects and that always return // something meaningful	WITHOUT_CLASSIFICATION	0.9999955782807851	WITHOUT_CLASSIFICATION	4.421719214887761E-6	DEFECT
// Call methods that exists for all objects and that always return // something meaningful	WITHOUT_CLASSIFICATION	0.9999955782807851	WITHOUT_CLASSIFICATION	4.421719214887761E-6	DEFECT
// Multiplicity, MultiplicityRange, and all Expression subtypes // don't have 0-argument create methods, so we special case them.	WITHOUT_CLASSIFICATION	0.9999996505029833	WITHOUT_CLASSIFICATION	3.4949701659663193E-7	DEFECT
// Find the create method in the offical API	WITHOUT_CLASSIFICATION	0.9999992418993575	WITHOUT_CLASSIFICATION	7.581006425390132E-7	DEFECT
// Now get the factory implementation method to be invoked	WITHOUT_CLASSIFICATION	0.9999988593250831	WITHOUT_CLASSIFICATION	1.1406749168899684E-6	DEFECT
// Here it is another object sent to the test.	WITHOUT_CLASSIFICATION	0.9999997347717885	WITHOUT_CLASSIFICATION	2.6522821143393865E-7	DEFECT
// Here it is another object sent to the test.	WITHOUT_CLASSIFICATION	0.9999997347717885	WITHOUT_CLASSIFICATION	2.6522821143393865E-7	DEFECT
// abstract	WITHOUT_CLASSIFICATION	0.9999996175381931	WITHOUT_CLASSIFICATION	3.824618068368274E-7	DEFECT
// abstract	WITHOUT_CLASSIFICATION	0.9999996175381931	WITHOUT_CLASSIFICATION	3.824618068368274E-7	DEFECT
// abstract	WITHOUT_CLASSIFICATION	0.9999996175381931	WITHOUT_CLASSIFICATION	3.824618068368274E-7	DEFECT
// Make sure we start off clean	WITHOUT_CLASSIFICATION	0.99999993283801	WITHOUT_CLASSIFICATION	6.716198996824712E-8	DEFECT
// Delete the model and make sure everything inside goes with it	WITHOUT_CLASSIFICATION	0.9999967762128523	WITHOUT_CLASSIFICATION	3.2237871475999073E-6	DEFECT
// The association should have same namespace as from class	WITHOUT_CLASSIFICATION	0.9987217006109321	WITHOUT_CLASSIFICATION	0.0012782993890678696	DEFECT
// Only one end should be navigable	WITHOUT_CLASSIFICATION	0.9999956723855371	WITHOUT_CLASSIFICATION	4.327614462829564E-6	DEFECT
//        "UseCaseInstance",  // Gone in UML 2.x & unused by ArgoUML	WITHOUT_CLASSIFICATION	0.9999997404733073	WITHOUT_CLASSIFICATION	2.595266926950606E-7	DEFECT
// Set namespace so buildAssocationRole works	WITHOUT_CLASSIFICATION	0.999831711833504	WITHOUT_CLASSIFICATION	1.6828816649585118E-4	DEFECT
// Correct Exception was thrown.	WITHOUT_CLASSIFICATION	0.9999714274094585	WITHOUT_CLASSIFICATION	2.8572590541551624E-5	DEFECT
// Correct Exception was thrown.	WITHOUT_CLASSIFICATION	0.9999714274094585	WITHOUT_CLASSIFICATION	2.8572590541551624E-5	DEFECT
// Correct Exception was thrown.	WITHOUT_CLASSIFICATION	0.9999714274094585	WITHOUT_CLASSIFICATION	2.8572590541551624E-5	DEFECT
// Correct Exception was thrown.	WITHOUT_CLASSIFICATION	0.9999714274094585	WITHOUT_CLASSIFICATION	2.8572590541551624E-5	DEFECT
// Build an activity graph with a single action state // the way the GUI would	WITHOUT_CLASSIFICATION	0.9999894829974063	WITHOUT_CLASSIFICATION	1.0517002593662877E-5	DEFECT
// This is a private method in Model.	WITHOUT_CLASSIFICATION	0.9999646824240895	WITHOUT_CLASSIFICATION	3.5317575910463755E-5	DEFECT
// Handling methods that doesn't return	WITHOUT_CLASSIFICATION	0.9999981054682705	WITHOUT_CLASSIFICATION	1.8945317294788777E-6	DEFECT
// Handling the isInitiated method	WITHOUT_CLASSIFICATION	0.9999985981525951	WITHOUT_CLASSIFICATION	1.4018474048211259E-6	DEFECT
// Handling the initialise method	WITHOUT_CLASSIFICATION	0.9999975628883464	WITHOUT_CLASSIFICATION	2.4371116536649392E-6	DEFECT
// Handle methods which return opaque objects	WITHOUT_CLASSIFICATION	0.9999999609417415	WITHOUT_CLASSIFICATION	3.9058258525141985E-8	DEFECT
// one of the expected errors, just ignore	WITHOUT_CLASSIFICATION	0.9999999967896226	WITHOUT_CLASSIFICATION	3.21037736173015E-9	DEFECT
// Could not find model.	WITHOUT_CLASSIFICATION	0.9999965221999408	WITHOUT_CLASSIFICATION	3.477800059140992E-6	DEFECT
// Could not find model.	WITHOUT_CLASSIFICATION	0.9999965221999408	WITHOUT_CLASSIFICATION	3.477800059140992E-6	DEFECT
// Handle UML 1.4 metamodel which is a MOF 1.3 model	WITHOUT_CLASSIFICATION	0.9999987534126917	WITHOUT_CLASSIFICATION	1.2465873083288493E-6	DEFECT
/*     * Get a node's name along with the name of its parent (which we'll use to     * find the factory to create it with.     */	WITHOUT_CLASSIFICATION	0.9999999993530647	WITHOUT_CLASSIFICATION	6.469353743319635E-10	DEFECT
// UML 1.4	WITHOUT_CLASSIFICATION	0.9999723681909142	WITHOUT_CLASSIFICATION	2.7631809085833247E-5	DEFECT
// UML 2.x	WITHOUT_CLASSIFICATION	0.9999885296938321	WITHOUT_CLASSIFICATION	1.1470306167754115E-5	DEFECT
// XMI 2.1	WITHOUT_CLASSIFICATION	0.9999089783114845	WITHOUT_CLASSIFICATION	9.102168851558859E-5	DEFECT
// XMI 1.1	WITHOUT_CLASSIFICATION	0.9998880859743127	WITHOUT_CLASSIFICATION	1.1191402568722637E-4	DEFECT
// Remap specific classes	WITHOUT_CLASSIFICATION	0.9999971618799753	WITHOUT_CLASSIFICATION	2.838120024704082E-6	DEFECT
// Only remap package if we didn't remap specific class	WITHOUT_CLASSIFICATION	0.9999913270674144	WITHOUT_CLASSIFICATION	8.672932585599429E-6	DEFECT
/*         * The following UML 1.4 elements have been removed from UML 2.x, so we         * don't bother testing them.         */	WITHOUT_CLASSIFICATION	0.9999999236980758	WITHOUT_CLASSIFICATION	7.630192417794155E-8	DEFECT
/*         * A few of our factories are slightly different than as declared in the         * UML 1.4 metamodel, so we remap them here.  <metamodel, argouml>         */	WITHOUT_CLASSIFICATION	0.9999989150131764	WITHOUT_CLASSIFICATION	1.0849868236816247E-6	DEFECT
// Packages to be remapped	WITHOUT_CLASSIFICATION	0.9999994929713518	WITHOUT_CLASSIFICATION	5.070286482450596E-7	DEFECT
/*         * For those things which we've already migrated to UML 2.x syntax         * we need to map them back to their UML 1.4 equivalents during the         * migration period.         */	WITHOUT_CLASSIFICATION	0.99999929477104	WITHOUT_CLASSIFICATION	7.052289600017355E-7	DEFECT
// Subsystem has been removed from UML 2.x	WITHOUT_CLASSIFICATION	0.9999989830395841	WITHOUT_CLASSIFICATION	1.0169604158604036E-6	DEFECT
/* TRY THE ACTIONS */	WITHOUT_CLASSIFICATION	0.9999075609733837	WITHOUT_CLASSIFICATION	9.2439026616247E-5	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
// abstract	WITHOUT_CLASSIFICATION	0.9999996175381931	WITHOUT_CLASSIFICATION	3.824618068368274E-7	DEFECT
// abstract	WITHOUT_CLASSIFICATION	0.9999996175381931	WITHOUT_CLASSIFICATION	3.824618068368274E-7	DEFECT
// This is the XMI version used to encode the metamodel.  We could // parse deeper to pull out the actual UML version.  The UML 1.4 // version is at XMI/XMI.header/XMI.model[@xmi.version].  The UML 2.1.1 // metamodel doesn't actually seem to contain its version.	WITHOUT_CLASSIFICATION	0.9957639603926726	WITHOUT_CLASSIFICATION	0.004236039607327388	DEFECT
// Because UML 1.4 & 2.1 metamodels are organized differently we need // to traverse the hierarchy looking for our owning Package.	WITHOUT_CLASSIFICATION	0.999884595427217	WITHOUT_CLASSIFICATION	1.1540457278297607E-4	DEFECT
// Specific classes to be remapped //      remap.put("", "");	WITHOUT_CLASSIFICATION	0.9999997154954272	WITHOUT_CLASSIFICATION	2.8450457282570265E-7	DEFECT
// Go the other way to lookup an element by path 	WITHOUT_CLASSIFICATION	0.9999973858678216	WITHOUT_CLASSIFICATION	2.614132178373224E-6	DEFECT
// ...	WITHOUT_CLASSIFICATION	0.9999474585266428	WITHOUT_CLASSIFICATION	5.2541473357254975E-5	DEFECT
// ...	WITHOUT_CLASSIFICATION	0.9999474585266428	WITHOUT_CLASSIFICATION	5.2541473357254975E-5	DEFECT
// ...	WITHOUT_CLASSIFICATION	0.9999474585266428	WITHOUT_CLASSIFICATION	5.2541473357254975E-5	DEFECT
// ActivityGraphs	WITHOUT_CLASSIFICATION	0.999999760370167	WITHOUT_CLASSIFICATION	2.396298330251552E-7	DEFECT
// Instance (in UML 1.4) and Classifier are abstract and not tested	WITHOUT_CLASSIFICATION	0.9999996832506489	WITHOUT_CLASSIFICATION	3.1674935102932375E-7	DEFECT
/*         *  Extend, Include, UseCaseInstance & ExtensionPoint not implemented         */	WITHOUT_CLASSIFICATION	0.9999971135515361	WITHOUT_CLASSIFICATION	2.886448463912285E-6	DEFECT
//        assertNotNull(Model.getUmlFactory().buildNode( //                Model.getMetaTypes().getExtend())); //        assertNotNull(Model.getUmlFactory().buildNode( //                Model.getMetaTypes().getInclude())); //        assertNotNull(Model.getUmlFactory().buildNode( //                Model.getMetaTypes().getUseCaseInstance())); //        assertNotNull(Model.getUmlFactory().buildNode( //                Model.getMetaTypes().getExtensionPoint())); // ...	WITHOUT_CLASSIFICATION	0.9999967296358799	WITHOUT_CLASSIFICATION	3.2703641201954985E-6	DEFECT
/*         * State is concrete in UML 1.3, but becomes abstract in UML 1.4, so we         * never allow it to be created (and don't test creation)         */	WITHOUT_CLASSIFICATION	0.9999998842288599	WITHOUT_CLASSIFICATION	1.1577114001346718E-7	DEFECT
//        new InitProfileSubsystem().init();   	WITHOUT_CLASSIFICATION	0.9999996952196719	WITHOUT_CLASSIFICATION	3.0478032801768825E-7	DEFECT
// This should work now that they both have names	WITHOUT_CLASSIFICATION	0.9922223329590019	WITHOUT_CLASSIFICATION	0.007777667040998108	DEFECT
/*                     * this call could easily fall if there is e.g. no public                     * default constructor. If it fails tweak the if/else tree                     * above to accommodate the parameter or check if we need to                     * test the particular method at all.                     */	WITHOUT_CLASSIFICATION	0.9995821370195781	WITHOUT_CLASSIFICATION	4.178629804218484E-4	DEFECT
// If method not supported ignore failure	WITHOUT_CLASSIFICATION	0.9999997522273144	WITHOUT_CLASSIFICATION	2.477726855332582E-7	DEFECT
// Fine!	WITHOUT_CLASSIFICATION	0.9999751163210496	WITHOUT_CLASSIFICATION	2.488367895035343E-5	DEFECT
// Fine!	WITHOUT_CLASSIFICATION	0.9999751163210496	WITHOUT_CLASSIFICATION	2.488367895035343E-5	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
//        assertNotNull(Model.getUmlFactory().buildNode( //                Model.getMetaTypes().getState()));	WITHOUT_CLASSIFICATION	0.9999992416394562	WITHOUT_CLASSIFICATION	7.583605438716411E-7	DEFECT
// CommonBehaviorFactory // DataTypesFactory // ExtensionMechanismsFactory // ModelManagementFactory	WITHOUT_CLASSIFICATION	0.999999755818636	WITHOUT_CLASSIFICATION	2.441813639736459E-7	DEFECT
// set up all parameters. Some methods are invoked with // primitives or collections, so we need to create them // accordingly	WITHOUT_CLASSIFICATION	0.9999984402313231	WITHOUT_CLASSIFICATION	1.5597686768652026E-6	DEFECT
// The following should fail	WITHOUT_CLASSIFICATION	0.9999853832167115	WITHOUT_CLASSIFICATION	1.4616783288618363E-5	DEFECT
// and leave things unchanged	WITHOUT_CLASSIFICATION	0.999995983395234	WITHOUT_CLASSIFICATION	4.016604765953554E-6	DEFECT
// This one should work except Java is not registered by default //        assertTrue(settings.setNotationLanguage("Java")); //        assertEquals("Java", settings.getNotationLanguage());	WITHOUT_CLASSIFICATION	0.9997331947952601	WITHOUT_CLASSIFICATION	2.668052047398041E-4	DEFECT
//        NotationProviderFactory2.getInstance().addNotationProvider(1234,  //                name, MyNP.class); //        NotationProvider notationProvider = //            NotationProviderFactory2.getInstance().getNotationProvider( //                    1234, new Object()); //        assertTrue("Test notation provider for 1234 not found",  //                notationProvider != null);	WITHOUT_CLASSIFICATION	0.9999791965467216	WITHOUT_CLASSIFICATION	2.0803453278390578E-5	DEFECT
/*         * Constructor.         */	WITHOUT_CLASSIFICATION	0.9999998122539601	WITHOUT_CLASSIFICATION	1.8774603992156965E-7	DEFECT
/*         * Constructor.         *           * @param me an Object         */	WITHOUT_CLASSIFICATION	0.9999984957026938	WITHOUT_CLASSIFICATION	1.5042973062289372E-6	DEFECT
/* Everything fine... */	WITHOUT_CLASSIFICATION	0.9994675841018342	WITHOUT_CLASSIFICATION	5.324158981657818E-4	DEFECT
/* Everything fine... */	WITHOUT_CLASSIFICATION	0.9994675841018342	WITHOUT_CLASSIFICATION	5.324158981657818E-4	DEFECT
/* Everything fine... */	WITHOUT_CLASSIFICATION	0.9994675841018342	WITHOUT_CLASSIFICATION	5.324158981657818E-4	DEFECT
// reuse signal event:	WITHOUT_CLASSIFICATION	0.9999999242243348	WITHOUT_CLASSIFICATION	7.577566525557082E-8	DEFECT
// reuse call event:	WITHOUT_CLASSIFICATION	0.9999993805707597	WITHOUT_CLASSIFICATION	6.194292403606443E-7	DEFECT
// reuse time event:	WITHOUT_CLASSIFICATION	0.9999995705655238	WITHOUT_CLASSIFICATION	4.294344762248086E-7	DEFECT
// reuse change event:	WITHOUT_CLASSIFICATION	0.9999999441808304	WITHOUT_CLASSIFICATION	5.581916957799071E-8	DEFECT
// try creating a string from the generated modelelements:	WITHOUT_CLASSIFICATION	0.9999980867305436	WITHOUT_CLASSIFICATION	1.913269456435876E-6	DEFECT
//try creating a TimeEvent	WITHOUT_CLASSIFICATION	0.999999559118963	WITHOUT_CLASSIFICATION	4.4088103701752534E-7	DEFECT
//try changing the triggertype to ChangeEvent	WITHOUT_CLASSIFICATION	0.9999996338909681	WITHOUT_CLASSIFICATION	3.6610903190767036E-7	DEFECT
// nested class:	WITHOUT_CLASSIFICATION	0.9999991981769768	WITHOUT_CLASSIFICATION	8.018230232573249E-7	DEFECT
// nested class:	WITHOUT_CLASSIFICATION	0.9999991981769768	WITHOUT_CLASSIFICATION	8.018230232573249E-7	DEFECT
/* No need to check any further if we fail the 1st part. */	WITHOUT_CLASSIFICATION	0.9999964596362003	WITHOUT_CLASSIFICATION	3.5403637997494332E-6	DEFECT
/* START TESTING STUFF */	WITHOUT_CLASSIFICATION	0.9999464127496541	WITHOUT_CLASSIFICATION	5.3587250345889256E-5	DEFECT
/* TRY MOVING IN A SIMPLE MANER */	WITHOUT_CLASSIFICATION	0.9999694711386938	WITHOUT_CLASSIFICATION	3.052886130613517E-5	DEFECT
/* TRY SOME ERRORS */	WITHOUT_CLASSIFICATION	0.999257255190525	WITHOUT_CLASSIFICATION	7.427448094751172E-4	DEFECT
// For a Transition use indirection through source StateVertex	WITHOUT_CLASSIFICATION	0.9999965203186023	WITHOUT_CLASSIFICATION	3.47968139755015E-6	DEFECT
// If we can't find a model, return the outermost // containing model element	WITHOUT_CLASSIFICATION	0.9999977934483012	WITHOUT_CLASSIFICATION	2.2065516987454865E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/* Everything fine... */	WITHOUT_CLASSIFICATION	0.9994675841018342	WITHOUT_CLASSIFICATION	5.324158981657818E-4	DEFECT
/* Everything fine... */	WITHOUT_CLASSIFICATION	0.9994675841018342	WITHOUT_CLASSIFICATION	5.324158981657818E-4	DEFECT
/* Everything fine... */	WITHOUT_CLASSIFICATION	0.9994675841018342	WITHOUT_CLASSIFICATION	5.324158981657818E-4	DEFECT
/* Everything fine... */	WITHOUT_CLASSIFICATION	0.9994675841018342	WITHOUT_CLASSIFICATION	5.324158981657818E-4	DEFECT
// This swaps the direction of m3:	WITHOUT_CLASSIFICATION	0.9999843402726669	WITHOUT_CLASSIFICATION	1.565972733304533E-5	DEFECT
// This swaps the direction of m3 back: // the colon is obliged, but the / not and the 2nd dot also not	WITHOUT_CLASSIFICATION	0.9975836374181524	WITHOUT_CLASSIFICATION	0.002416362581847679	DEFECT
// Notation allows to add or modify things, not remove. // Hence, this does nothing:	WITHOUT_CLASSIFICATION	0.9999728588633282	WITHOUT_CLASSIFICATION	2.7141136671797716E-5	DEFECT
// The expected exception is thrown.	WITHOUT_CLASSIFICATION	0.9999975020449346	WITHOUT_CLASSIFICATION	2.497955065372133E-6	DEFECT
/* Both diagram types shall show sequence numbers when requested: */	WITHOUT_CLASSIFICATION	0.9997421707991581	WITHOUT_CLASSIFICATION	2.578292008420028E-4	DEFECT
/* But the collaboration diagram refuses to leave them out: */	WITHOUT_CLASSIFICATION	0.9996484920070459	WITHOUT_CLASSIFICATION	3.515079929540939E-4	DEFECT
/* If the message has a name, but no action, then show the name: */	WITHOUT_CLASSIFICATION	0.9908566346828588	WITHOUT_CLASSIFICATION	0.00914336531714122	DEFECT
/* If a message has a name and a named operation,         * then show the operation: */	WITHOUT_CLASSIFICATION	0.9996483974430411	WITHOUT_CLASSIFICATION	3.516025569588125E-4	DEFECT
/* If a message has a name and a named operation and a script,         * then show the script: */	WITHOUT_CLASSIFICATION	0.9997927060782	WITHOUT_CLASSIFICATION	2.0729392179991244E-4	DEFECT
/* TODO: Should there really be () here? */	WITHOUT_CLASSIFICATION	0.9963535911964164	DEFECT	0.0036464088035836313	WITHOUT_CLASSIFICATION
/* If a message has a name and a named operation and an empty script,         * then show the operation: */	WITHOUT_CLASSIFICATION	0.9996529546055034	WITHOUT_CLASSIFICATION	3.470453944965709E-4	DEFECT
/* If a message has a name and a named operation          * and an expression with no script,         * then show the operation: */	WITHOUT_CLASSIFICATION	0.9998936945215275	WITHOUT_CLASSIFICATION	1.063054784724683E-4	DEFECT
/* If a message has a name and a named operation          * and a named script with parameters,         * then show the script: */	WITHOUT_CLASSIFICATION	0.9998181268144382	WITHOUT_CLASSIFICATION	1.8187318556186962E-4	DEFECT
/* TODO: Why is there a space before the ( here,          * and not in case of the operation name? */	WITHOUT_CLASSIFICATION	0.5400187606218758	WITHOUT_CLASSIFICATION	0.45998123937812413	DEFECT
/* The action still has the argument from above. */	WITHOUT_CLASSIFICATION	0.9999840468343034	WITHOUT_CLASSIFICATION	1.59531656966581E-5	DEFECT
/* If a message has a name and a named operation          * and a script with parameters but without name,         * then show the operation name: */	WITHOUT_CLASSIFICATION	0.9994177607327541	WITHOUT_CLASSIFICATION	5.822392672459219E-4	DEFECT
//this is not a very useful transition	WITHOUT_CLASSIFICATION	0.9997902584652805	WITHOUT_CLASSIFICATION	2.097415347194799E-4	DEFECT
/* One of everything */	WITHOUT_CLASSIFICATION	0.9999821925904752	WITHOUT_CLASSIFICATION	1.780740952482534E-5	DEFECT
/* Upper / Lower case */	WITHOUT_CLASSIFICATION	0.9999925297505007	WITHOUT_CLASSIFICATION	7.470249499301806E-6	DEFECT
/* Mixed case */	WITHOUT_CLASSIFICATION	0.9999898989455295	WITHOUT_CLASSIFICATION	1.0101054470541739E-5	DEFECT
/* A complex internal transition */	WITHOUT_CLASSIFICATION	0.9999892776230339	WITHOUT_CLASSIFICATION	1.0722376965989458E-5	DEFECT
/* These are NOT entry/exit/do activities! */	WITHOUT_CLASSIFICATION	0.9999815932072608	WITHOUT_CLASSIFICATION	1.8406792739200435E-5	DEFECT
/* Long list of internals */	WITHOUT_CLASSIFICATION	0.9999967519162009	WITHOUT_CLASSIFICATION	3.2480837991735427E-6	DEFECT
// or should the 1 be 0 ?	WITHOUT_CLASSIFICATION	0.9999657190819554	WITHOUT_CLASSIFICATION	3.428091804454309E-5	DEFECT
// deleting it all	WITHOUT_CLASSIFICATION	0.9999956828816621	WITHOUT_CLASSIFICATION	4.317118337959934E-6	DEFECT
// we want the b: Foo attribute, that is the second in the list	WITHOUT_CLASSIFICATION	0.9999938301229313	WITHOUT_CLASSIFICATION	6.1698770686733525E-6	DEFECT
/* If there is no script, then the language should not be maintained. */	WITHOUT_CLASSIFICATION	0.9999973712938264	WITHOUT_CLASSIFICATION	2.628706173651511E-6	DEFECT
//ok	WITHOUT_CLASSIFICATION	0.9998139396659814	WITHOUT_CLASSIFICATION	1.8606033401853475E-4	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986218423988	WITHOUT_CLASSIFICATION	1.3781576011547458E-6	DEFECT
// Success - expected exception	WITHOUT_CLASSIFICATION	0.9999996914106476	WITHOUT_CLASSIFICATION	3.085893523703225E-7	DEFECT
/* Everything fine... */	WITHOUT_CLASSIFICATION	0.9994675841018342	WITHOUT_CLASSIFICATION	5.324158981657818E-4	DEFECT
// Create file	WITHOUT_CLASSIFICATION	0.9999997421929554	WITHOUT_CLASSIFICATION	2.5780704454450123E-7	DEFECT
// This is the normal case.	WITHOUT_CLASSIFICATION	0.9999552165222743	WITHOUT_CLASSIFICATION	4.4783477725653796E-5	DEFECT
// Load a project which contains links to it	WITHOUT_CLASSIFICATION	0.9999964815514629	WITHOUT_CLASSIFICATION	3.5184485370326072E-6	DEFECT
// test project readable files	WITHOUT_CLASSIFICATION	0.9999996675390228	WITHOUT_CLASSIFICATION	3.324609772445486E-7	DEFECT
// Standard UML 1.4 profile	WITHOUT_CLASSIFICATION	0.9999967007000609	WITHOUT_CLASSIFICATION	3.2992999391932288E-6	DEFECT
// Create a default profile and record its contents	WITHOUT_CLASSIFICATION	0.9999998165352736	WITHOUT_CLASSIFICATION	1.834647263919823E-7	DEFECT
// Write the profile out to a temp file	WITHOUT_CLASSIFICATION	0.9999999580066339	WITHOUT_CLASSIFICATION	4.1993366206014945E-8	DEFECT
// Read it back in to a new empty project	WITHOUT_CLASSIFICATION	0.999926061070575	WITHOUT_CLASSIFICATION	7.393892942502808E-5	DEFECT
// Clean up our two models and the extent that we read profile in to	WITHOUT_CLASSIFICATION	0.9999997096579655	WITHOUT_CLASSIFICATION	2.9034203457265056E-7	DEFECT
// setting up the dependent profile creation	WITHOUT_CLASSIFICATION	0.9999999971194473	WITHOUT_CLASSIFICATION	2.8805525858872445E-9	DEFECT
// actual call that executes everything	WITHOUT_CLASSIFICATION	0.9999834350615897	WITHOUT_CLASSIFICATION	1.656493841028829E-5	DEFECT
// verifications	WITHOUT_CLASSIFICATION	0.9999989283210642	WITHOUT_CLASSIFICATION	1.0716789358416068E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999998033355179	WITHOUT_CLASSIFICATION	1.9666448221963214E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999998033355179	WITHOUT_CLASSIFICATION	1.9666448221963214E-7	DEFECT
// TODO: the following cleans up left overs from previous tests, but, // preferably we shouldn't have to do this...	WITHOUT_CLASSIFICATION	0.9993550975947558	DEFECT	6.449024052441876E-4	WITHOUT_CLASSIFICATION
// create profile model	WITHOUT_CLASSIFICATION	0.9999988264080735	WITHOUT_CLASSIFICATION	1.173591926530834E-6	DEFECT
// create profile model	WITHOUT_CLASSIFICATION	0.9999988264080735	WITHOUT_CLASSIFICATION	1.173591926530834E-6	DEFECT
// save the profile into a xmi file	WITHOUT_CLASSIFICATION	0.9999998717386185	WITHOUT_CLASSIFICATION	1.2826138148779412E-7	DEFECT
// save the profile into a xmi file	WITHOUT_CLASSIFICATION	0.9999998717386185	WITHOUT_CLASSIFICATION	1.2826138148779412E-7	DEFECT
// Called during teardown	WITHOUT_CLASSIFICATION	0.9999988831690387	WITHOUT_CLASSIFICATION	1.1168309612075568E-6	DEFECT
// Called during teardown	WITHOUT_CLASSIFICATION	0.9999988831690387	WITHOUT_CLASSIFICATION	1.1168309612075568E-6	DEFECT
// remove leftovers from other tests	WITHOUT_CLASSIFICATION	0.9999989456253744	WITHOUT_CLASSIFICATION	1.0543746255661208E-6	DEFECT
// TODO: User defined profile support untested currently //        + "\t\t<userDefined>\n" //        + "\t\t\t<filename>\n" //        + "foo.profile\n" //        + "</filename>\n" //        + "\t\t\t<model>\n" //        + "foo.profile.package\n" //        + "\t\t\t</model>\n" //        + "\t\t</userDefined>\n"	WITHOUT_CLASSIFICATION	0.9994799038826675	WITHOUT_CLASSIFICATION	5.200961173324467E-4	DEFECT
// There seems to be cases where we don't erase the profile. // Let's make sure it is deleted.        	WITHOUT_CLASSIFICATION	0.9999999239251701	WITHOUT_CLASSIFICATION	7.607482985691564E-8	DEFECT
// [euluis] Using Windows style initial path, don't know if this fails  // in *nixes.	WITHOUT_CLASSIFICATION	0.9957325479178387	WITHOUT_CLASSIFICATION	0.0042674520821612705	DEFECT
// ensure that model subsystem implementation doesn't remember the // profiles by changing their names and directories	WITHOUT_CLASSIFICATION	0.9999985467984998	WITHOUT_CLASSIFICATION	1.4532015002636833E-6	DEFECT
// but, lookout, it doesn't work both ways	WITHOUT_CLASSIFICATION	0.9971495902988182	WITHOUT_CLASSIFICATION	0.0028504097011817697	DEFECT
//        assertEquals(DefaultOclEvaluator.getInstance().evaluate(vt, mi, //                "x.oclIsKindOf(Classifier)"), true);               	WITHOUT_CLASSIFICATION	0.9999995055904553	WITHOUT_CLASSIFICATION	4.944095447733263E-7	DEFECT
// on a headless system (without display) this will crash	WITHOUT_CLASSIFICATION	0.9999822094522828	WITHOUT_CLASSIFICATION	1.7790547717237837E-5	DEFECT
// private JPanel propertyPane;	WITHOUT_CLASSIFICATION	0.9999716548348923	WITHOUT_CLASSIFICATION	2.8345165107713817E-5	DEFECT
// contains instances of each modelelement // used for testing so that we only use each modelelement // once	WITHOUT_CLASSIFICATION	0.999999985669305	WITHOUT_CLASSIFICATION	1.4330695021357213E-8	DEFECT
// propertyPane = /*TabProps */	WITHOUT_CLASSIFICATION	0.9999998253497702	WITHOUT_CLASSIFICATION	1.7465022996853546E-7	DEFECT
//            theDetailsPane.getNamedTab(Translator.localize("tab.properties"));	WITHOUT_CLASSIFICATION	0.9999999354132347	WITHOUT_CLASSIFICATION	6.458676533580772E-8	DEFECT
// currently this is in this try block as it does not work // _propertyPanel always has size 0,0	WITHOUT_CLASSIFICATION	0.7640347586510198	WITHOUT_CLASSIFICATION	0.23596524134898017	DEFECT
// ProjectBrowser exposes functionality, not components. //	WITHOUT_CLASSIFICATION	0.9999942455788293	WITHOUT_CLASSIFICATION	5.754421170640623E-6	DEFECT
// Make sure this test happens on the AWT event thread	WITHOUT_CLASSIFICATION	0.9999945766159072	WITHOUT_CLASSIFICATION	5.42338409280408E-6	DEFECT
//        JPanel docPane = pane.getTab(TabDocumentation.class);	WITHOUT_CLASSIFICATION	0.9999993789481049	WITHOUT_CLASSIFICATION	6.21051895091935E-7	DEFECT
// The target list is empty, re-emptying it again  // should not generate any events:	WITHOUT_CLASSIFICATION	0.9999375488914617	WITHOUT_CLASSIFICATION	6.245110853825052E-5	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
// new target is of type object, refresh should not be called	WITHOUT_CLASSIFICATION	0.9999989446487838	WITHOUT_CLASSIFICATION	1.055351216157264E-6	DEFECT
/*         * commented out next piece to remove failure of testcase. The testcase         * is probably correct but the implementation of DetailsPane is not        pane.getTabs().setSelectedComponent(docPane);        pane.targetSet(e);        assertEquals(docPane, pane.getTabs().getSelectedComponent());        */	WITHOUT_CLASSIFICATION	0.9946357156263479	WITHOUT_CLASSIFICATION	0.0053642843736521175	DEFECT
// new target is a fig, refresh should be called	WITHOUT_CLASSIFICATION	0.9999977009191563	WITHOUT_CLASSIFICATION	2.2990808437689228E-6	DEFECT
// Setting one target should generate one event:	WITHOUT_CLASSIFICATION	0.9999995115031108	WITHOUT_CLASSIFICATION	4.884968891663665E-7	DEFECT
// new target is of type UMLClassDiagram, refresh should not be called	WITHOUT_CLASSIFICATION	0.9999990452575012	WITHOUT_CLASSIFICATION	9.547424988337086E-7	DEFECT
// TODO: We could check that the contents of the files differ.	WITHOUT_CLASSIFICATION	0.9962741941827031	WITHOUT_CLASSIFICATION	0.003725805817296791	DEFECT
// new target is a modelelement, refresh should not be called	WITHOUT_CLASSIFICATION	0.9999886537530969	WITHOUT_CLASSIFICATION	1.1346246903233787E-5	DEFECT
//testing with subset of targets	WITHOUT_CLASSIFICATION	0.9999999982735706	WITHOUT_CLASSIFICATION	1.7264294937410097E-9	DEFECT
// set same target again should not generate new events:	WITHOUT_CLASSIFICATION	0.999997973837989	WITHOUT_CLASSIFICATION	2.026162010889717E-6	DEFECT
//TabProps gets selected! //So, 2nd time right	WITHOUT_CLASSIFICATION	0.9999985402912841	WITHOUT_CLASSIFICATION	1.4597087158565072E-6	DEFECT
// adding same targets list again should not generate new events:	WITHOUT_CLASSIFICATION	0.9999974171630233	WITHOUT_CLASSIFICATION	2.582836976767917E-6	DEFECT
// adding same target again should not generate new events:	WITHOUT_CLASSIFICATION	0.9999962107913729	WITHOUT_CLASSIFICATION	3.789208627203231E-6	DEFECT
//reverse order	WITHOUT_CLASSIFICATION	0.9999995908198211	WITHOUT_CLASSIFICATION	4.09180178793104E-7	DEFECT
// now remove one target by setting subset:	WITHOUT_CLASSIFICATION	0.9999999817092959	WITHOUT_CLASSIFICATION	1.8290704088689925E-8	DEFECT
// TODO: the following fails due to the XMI writing saving all top level // model elements and because even if there was no empty project, by // creating a class, the undo mechanism in the project manager will // force the creation of an empty project. //        assertEquals(1, profileModels.size());	WITHOUT_CLASSIFICATION	0.9967184389998347	WITHOUT_CLASSIFICATION	0.003281561000165381	DEFECT
// NOTE: we have to do this due to leftovers from other tests // being causing strange errors when running in Eclipse.	WITHOUT_CLASSIFICATION	0.9999976144853385	WITHOUT_CLASSIFICATION	2.3855146613817594E-6	DEFECT
// all tests should consider the threshold as inclusive value	WITHOUT_CLASSIFICATION	0.9999921809640593	WITHOUT_CLASSIFICATION	7.81903594081654E-6	DEFECT
// this test is a bit stupid, but nevertheless...	WITHOUT_CLASSIFICATION	0.9998469220842391	WITHOUT_CLASSIFICATION	1.5307791576097042E-4	DEFECT
// {A, A} are offenders	WITHOUT_CLASSIFICATION	0.9999972052777254	WITHOUT_CLASSIFICATION	2.7947222745487764E-6	DEFECT
// everything ok	WITHOUT_CLASSIFICATION	0.9999927337357449	WITHOUT_CLASSIFICATION	7.266264254974889E-6	DEFECT
// everything ok	WITHOUT_CLASSIFICATION	0.9999927337357449	WITHOUT_CLASSIFICATION	7.266264254974889E-6	DEFECT
// same name, same participants, two offenders	WITHOUT_CLASSIFICATION	0.9999959386136871	WITHOUT_CLASSIFICATION	4.061386312863063E-6	DEFECT
// same name, different classes, everything ok	WITHOUT_CLASSIFICATION	0.9999640675911954	WITHOUT_CLASSIFICATION	3.593240880460288E-5	DEFECT
// same name, different classes, everything ok	WITHOUT_CLASSIFICATION	0.9999640675911954	WITHOUT_CLASSIFICATION	3.593240880460288E-5	DEFECT
// same name, same participants, two offenders	WITHOUT_CLASSIFICATION	0.9999959386136871	WITHOUT_CLASSIFICATION	4.061386312863063E-6	DEFECT
// {A,A,B,B} are offenders	WITHOUT_CLASSIFICATION	0.9999940907084706	WITHOUT_CLASSIFICATION	5.909291529433744E-6	DEFECT
// {} no offenders	WITHOUT_CLASSIFICATION	0.9999986975848746	WITHOUT_CLASSIFICATION	1.3024151254765434E-6	DEFECT
// simply create 3 usecases and an actor in a package with individual names	WITHOUT_CLASSIFICATION	0.9999998029048105	WITHOUT_CLASSIFICATION	1.97095189476957E-7	DEFECT
// generalizations are not required to have unique names within a // namespace	WITHOUT_CLASSIFICATION	0.9997003545587673	WITHOUT_CLASSIFICATION	2.9964544123273006E-4	DEFECT
// All use cases and actors require associations // hence all predicates evalulate to true	WITHOUT_CLASSIFICATION	0.9999916383669272	WITHOUT_CLASSIFICATION	8.361633072834298E-6	DEFECT
// build association // build association between actor and top use case.	WITHOUT_CLASSIFICATION	0.9999994498166312	WITHOUT_CLASSIFICATION	5.501833688016666E-7	DEFECT
// test for return parameters. they can ALSO fail!	WITHOUT_CLASSIFICATION	0.9999979496985013	WITHOUT_CLASSIFICATION	2.0503014986591032E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#tearDown()     */	WITHOUT_CLASSIFICATION	0.999996129660319	WITHOUT_CLASSIFICATION	3.8703396809925125E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
// Arbitrary settings - not used used for testing	WITHOUT_CLASSIFICATION	0.9999999619026555	WITHOUT_CLASSIFICATION	3.80973445484682E-8	DEFECT
// Arbitrary settings - not used used for testing	WITHOUT_CLASSIFICATION	0.9999999619026555	WITHOUT_CLASSIFICATION	3.80973445484682E-8	DEFECT
// the graph should stay the same.	WITHOUT_CLASSIFICATION	0.9999975423704132	WITHOUT_CLASSIFICATION	2.457629586818046E-6	DEFECT
// build extend // these parameters seem to be in correct order // add an extend. We do not need an assoc on the extending use case	WITHOUT_CLASSIFICATION	0.9998436675429389	WITHOUT_CLASSIFICATION	1.563324570611646E-4	DEFECT
// build include // it seems that the parameters for build include are just the other way // round // add an include: we do not need to have associtions on one	WITHOUT_CLASSIFICATION	0.9996613788750207	WITHOUT_CLASSIFICATION	3.3862112497926706E-4	DEFECT
// setup	WITHOUT_CLASSIFICATION	0.999999704149476	WITHOUT_CLASSIFICATION	2.9585052402208976E-7	DEFECT
// Handle the simple cases // Anything very exotic will fail, but that will be our clue // that the test needs to be extended	WITHOUT_CLASSIFICATION	0.9999969225861681	WITHOUT_CLASSIFICATION	3.077413831832721E-6	DEFECT
// real test	WITHOUT_CLASSIFICATION	0.9999995214315592	WITHOUT_CLASSIFICATION	4.785684408537312E-7	DEFECT
// Some arbitrary bounds and settings - unused in test	WITHOUT_CLASSIFICATION	0.9999991050903106	WITHOUT_CLASSIFICATION	8.949096894152828E-7	DEFECT
// Make sure everything created gets deleted	WITHOUT_CLASSIFICATION	0.9999999928446875	WITHOUT_CLASSIFICATION	7.155312449716345E-9	DEFECT
/*         * This needs to be a concrete metatype, so we can't use         * the general, but abstract, Classifier.  Replace with its         * concrete subtypes.         */	WITHOUT_CLASSIFICATION	0.9999869657455015	WITHOUT_CLASSIFICATION	1.3034254498633438E-5	DEFECT
/*         * This needs to be a concrete metatype, so we can't use         * the general, but abstract, Classifier.  Replace with its         * concrete subtypes.         */	WITHOUT_CLASSIFICATION	0.9999869657455015	WITHOUT_CLASSIFICATION	1.3034254498633438E-5	DEFECT
// setup the Project due to its use in SourcePathTableModel ctor	WITHOUT_CLASSIFICATION	0.9999999625461669	WITHOUT_CLASSIFICATION	3.74538331397038E-8	DEFECT
// create a class model element	WITHOUT_CLASSIFICATION	0.9999988422988171	WITHOUT_CLASSIFICATION	1.1577011828745353E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#tearDown()     */	WITHOUT_CLASSIFICATION	0.999996129660319	WITHOUT_CLASSIFICATION	3.8703396809925125E-6	DEFECT
/*     * @see AbstractTestActionAddDiagram#getValidNamespaceClasses()     */	WITHOUT_CLASSIFICATION	0.9999999320826731	WITHOUT_CLASSIFICATION	6.791732680891246E-8	DEFECT
/*     * @see TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999991481830371	WITHOUT_CLASSIFICATION	8.518169627757275E-7	DEFECT
/*     * @see TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999991481830371	WITHOUT_CLASSIFICATION	8.518169627757275E-7	DEFECT
// save the project	WITHOUT_CLASSIFICATION	0.9999992894647008	WITHOUT_CLASSIFICATION	7.105352990951987E-7	DEFECT
// Tests used to be coded to assume immediate event delivery. // They've been modified to use flush() where needed. - tfm //oldEventPolicy = MFactoryImpl.getEventPolicy(); //MFactoryImpl.setEventPolicy(MFactoryImpl.EVENT_POLICY_IMMEDIATE);	WITHOUT_CLASSIFICATION	0.9999998536057535	WITHOUT_CLASSIFICATION	1.4639424656823965E-7	DEFECT
// Return a package to use as the Namespace.	WITHOUT_CLASSIFICATION	0.9999994698174061	WITHOUT_CLASSIFICATION	5.301825939270606E-7	DEFECT
// restore original event policy - not supported by MDR - tfm //MFactoryImpl.setEventPolicy(oldEventPolicy);	WITHOUT_CLASSIFICATION	0.9999999953838982	WITHOUT_CLASSIFICATION	4.616101866998302E-9	DEFECT
//        assertNotNull(actionSupplier.getValue(Action.SMALL_ICON));	WITHOUT_CLASSIFICATION	0.9999992439700605	WITHOUT_CLASSIFICATION	7.560299396342998E-7	DEFECT
//cont.setTarget(elem);	WITHOUT_CLASSIFICATION	0.9999992662399217	WITHOUT_CLASSIFICATION	7.337600782844654E-7	DEFECT
// Testing with more than one, since it failed with a manual test I  // made.	WITHOUT_CLASSIFICATION	0.9999999333152896	WITHOUT_CLASSIFICATION	6.668471034419058E-8	DEFECT
//        assertNotNull(actionClient.getValue(Action.SMALL_ICON));	WITHOUT_CLASSIFICATION	0.9999990461506478	WITHOUT_CLASSIFICATION	9.53849352209425E-7	DEFECT
// The following will bring up a dialog box, so can't be run headless //        actionSupplier.actionPerformed(new ActionEvent(this, 0, "foo"));	WITHOUT_CLASSIFICATION	0.9999999487357477	WITHOUT_CLASSIFICATION	5.1264252384413194E-8	DEFECT
// The following will bring up a dialog box, so can't be run headless //        actionClient.actionPerformed(new ActionEvent(this, 0, "foo"));	WITHOUT_CLASSIFICATION	0.9999999309822688	WITHOUT_CLASSIFICATION	6.901773119168305E-8	DEFECT
// create a new empty project	WITHOUT_CLASSIFICATION	0.9999951407672906	WITHOUT_CLASSIFICATION	4.85923270949588E-6	DEFECT
// Inconclusive	WITHOUT_CLASSIFICATION	0.9999986980929267	WITHOUT_CLASSIFICATION	1.3019070732823359E-6	DEFECT
// Inconclusive	WITHOUT_CLASSIFICATION	0.9999986980929267	WITHOUT_CLASSIFICATION	1.3019070732823359E-6	DEFECT
// setup a user defined profile which isn't loaded by the model // subsystem and contains a stereotype and this contains a // tag definition	WITHOUT_CLASSIFICATION	0.9999990426265266	WITHOUT_CLASSIFICATION	9.573734733556051E-7	DEFECT
// add the profile stereotype to the class	WITHOUT_CLASSIFICATION	0.9999893244167106	WITHOUT_CLASSIFICATION	1.0675583289336279E-5	DEFECT
// add the profile to the project configuration	WITHOUT_CLASSIFICATION	0.9999997078090267	WITHOUT_CLASSIFICATION	2.9219097330458607E-7	DEFECT
// This works when running the test from within Eclipse. // Apparently Eclipse runs the tests using a class-loader that // has the tests Folder among the URL:s.	WITHOUT_CLASSIFICATION	0.9555531252089956	WITHOUT_CLASSIFICATION	0.04444687479100439	DEFECT
// create a class in the project model	WITHOUT_CLASSIFICATION	0.9999924954683247	WITHOUT_CLASSIFICATION	7.504531675293154E-6	DEFECT
// check that the tag definition is returned by // {@link UMLTagDefinitionComboBoxModel#getApplicableTagDefinitions(Object)}	WITHOUT_CLASSIFICATION	0.999999968541891	WITHOUT_CLASSIFICATION	3.1458109081232724E-8	DEFECT
//////////////////////////////////////////////////////////////// // accessors	WITHOUT_CLASSIFICATION	0.99999900930865	WITHOUT_CLASSIFICATION	9.906913499891305E-7	DEFECT
// If no project was entered on the command line, // try to reload the most recent project if that option is true	WITHOUT_CLASSIFICATION	0.9999999319837586	WITHOUT_CLASSIFICATION	6.801624147199777E-8	DEFECT
// Set the screen layout to what the user left it before, or // to reasonable defaults.	WITHOUT_CLASSIFICATION	0.9999998472826309	WITHOUT_CLASSIFICATION	1.527173691361086E-7	DEFECT
//////////////////////////////////////////////////////////////// // instance variables	WITHOUT_CLASSIFICATION	0.9999997804293774	WITHOUT_CLASSIFICATION	2.195706224349368E-7	DEFECT
//////////////////////////////////////////////////////////////// // constants	WITHOUT_CLASSIFICATION	0.9999985290529746	WITHOUT_CLASSIFICATION	1.4709470253565026E-6	DEFECT
//////////////////////////////////////////////////////////////// // instance variables	WITHOUT_CLASSIFICATION	0.9999997804293774	WITHOUT_CLASSIFICATION	2.195706224349368E-7	DEFECT
// case 4 // erase it	WITHOUT_CLASSIFICATION	0.9999953612062292	WITHOUT_CLASSIFICATION	4.63879377079805E-6	DEFECT
//////////////// // event handlers	WITHOUT_CLASSIFICATION	0.99999993178587	WITHOUT_CLASSIFICATION	6.821413007364854E-8	DEFECT
//////////////////////////////////////////////////////////////// // TreeModel implementation	WITHOUT_CLASSIFICATION	0.9999648266834822	WITHOUT_CLASSIFICATION	3.517331651787446E-5	DEFECT
//////////////////////////////////////////////////////////////// // TreeModel implementation	WITHOUT_CLASSIFICATION	0.9999648266834822	WITHOUT_CLASSIFICATION	3.517331651787446E-5	DEFECT
//////////////////////////////////////////////////////////////// // ToDoListListener implementation	WITHOUT_CLASSIFICATION	0.9999249721338268	WITHOUT_CLASSIFICATION	7.502786617314627E-5	DEFECT
// case 1 // after(...)	WITHOUT_CLASSIFICATION	0.9999983413965255	WITHOUT_CLASSIFICATION	1.6586034744684266E-6	DEFECT
// initialize the model and profile subsystems to simulate a fresh  // ArgoUML session	WITHOUT_CLASSIFICATION	0.9999999736593975	WITHOUT_CLASSIFICATION	2.634060249927053E-8	DEFECT
// We have the path provided from the build script.	WITHOUT_CLASSIFICATION	0.9999997446052113	WITHOUT_CLASSIFICATION	2.5539478875048614E-7	DEFECT
// Check the localized parts.	WITHOUT_CLASSIFICATION	0.9999907477745996	WITHOUT_CLASSIFICATION	9.252225400437073E-6	DEFECT
// Wait for all Model subsystem events to be delivered	WITHOUT_CLASSIFICATION	0.9999999773623884	WITHOUT_CLASSIFICATION	2.2637611501397582E-8	DEFECT
// Wait for all AWT events to be dispatched and processed	WITHOUT_CLASSIFICATION	0.9999999313374944	WITHOUT_CLASSIFICATION	6.866250558440231E-8	DEFECT
// Check here if there are no incoming call actions // if not then create an activation at the top of the lifeline	WITHOUT_CLASSIFICATION	0.9998942674944024	WITHOUT_CLASSIFICATION	1.0573250559761061E-4	DEFECT
/*     * @see org.tigris.gef.graph.GraphModel#getPorts(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.999999946103554	WITHOUT_CLASSIFICATION	5.3896446105358985E-8	DEFECT
// if save did not raise an exception // and name+"#" exists move name+"#" to name+"~" // this is the correct backup file	WITHOUT_CLASSIFICATION	0.9993330940406863	WITHOUT_CLASSIFICATION	6.669059593138234E-4	DEFECT
//      calcBounds();	WITHOUT_CLASSIFICATION	0.9999936556940111	WITHOUT_CLASSIFICATION	6.344305988978861E-6	DEFECT
// For classifiers	WITHOUT_CLASSIFICATION	0.9999975182054031	WITHOUT_CLASSIFICATION	2.481794596944772E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999748478784519	WITHOUT_CLASSIFICATION	2.5152121548066763E-5	DEFECT
// This is null as until // the first stereotype declaration is seen. // After that it is non-null.	WITHOUT_CLASSIFICATION	0.9999987610153841	WITHOUT_CLASSIFICATION	1.2389846160009144E-6	DEFECT
//newOp.setOwnerScope(op.getOwnerScope()); // //not needed in case of operation	WITHOUT_CLASSIFICATION	0.9999975013987977	WITHOUT_CLASSIFICATION	2.4986012022164606E-6	DEFECT
// includes the "/" // the "seq_expr" from the header javadoc // the ":" is not included in "number" - it is always present	WITHOUT_CLASSIFICATION	0.9999955865028741	WITHOUT_CLASSIFICATION	4.413497125840655E-6	DEFECT
//                Model.getExtensionMechanismsFactory().buildTaggedValue( //                        tagName, new String[] {"true"}, Model.getFacade().getRoot(umlObject));	WITHOUT_CLASSIFICATION	0.9999998556590325	WITHOUT_CLASSIFICATION	1.4434096745838574E-7	DEFECT
// MClassifiers // cannot be Bag	WITHOUT_CLASSIFICATION	0.9999841717829024	WITHOUT_CLASSIFICATION	1.5828217097610544E-5	DEFECT
// If the model repository doesn't manage a DI model // then we must generate our Figs by inspecting PGML	WITHOUT_CLASSIFICATION	0.9999822647335298	WITHOUT_CLASSIFICATION	1.7735266470212756E-5	DEFECT
// Read xsltStream into a temporary file // Get url for temp file. // openStream from url and wrap in StreamSource	WITHOUT_CLASSIFICATION	0.9999999507954501	WITHOUT_CLASSIFICATION	4.9204549877530846E-8	DEFECT
//////////////////////////////////////////////////////////////// // constants	WITHOUT_CLASSIFICATION	0.9999985290529746	WITHOUT_CLASSIFICATION	1.4709470253565026E-6	DEFECT
//////////////////////////////////////////////////////////////// // instance variables	WITHOUT_CLASSIFICATION	0.9999997804293774	WITHOUT_CLASSIFICATION	2.195706224349368E-7	DEFECT
//////////////////////////////////////////////////////////////// // event handlers	WITHOUT_CLASSIFICATION	0.99999993178587	WITHOUT_CLASSIFICATION	6.821413007364854E-8	DEFECT
//////////////////////////////////////////////////////////////// // main methods	WITHOUT_CLASSIFICATION	0.9999979898465433	WITHOUT_CLASSIFICATION	2.01015345670554E-6	DEFECT
// if the object does not have a name, // than no problem	WITHOUT_CLASSIFICATION	0.9999386244448092	WITHOUT_CLASSIFICATION	6.137555519085069E-5	DEFECT
// tree // value // isSelected	WITHOUT_CLASSIFICATION	0.9999902403075349	WITHOUT_CLASSIFICATION	9.759692464974822E-6	DEFECT
// If we don't have it, find the trigger. If this fails it will keep // its default value of null	WITHOUT_CLASSIFICATION	0.9996001054856035	WITHOUT_CLASSIFICATION	3.9989451439642165E-4	DEFECT
//@Override //public final void setHeadline(String s) { //setupHeadAndDesc(); //}	WITHOUT_CLASSIFICATION	0.99999976562708	WITHOUT_CLASSIFICATION	2.343729198626353E-7	DEFECT
// We need to find the stereotype with the name // "create" and the base class BehavioralFeature in // the model. If there is none then we create one and // put it there.	WITHOUT_CLASSIFICATION	0.9999999009426624	WITHOUT_CLASSIFICATION	9.905733757635169E-8	DEFECT
// first element is e.g. the class, but we need to have its namespace // to recompute the offenders.	WITHOUT_CLASSIFICATION	0.999998329104459	WITHOUT_CLASSIFICATION	1.6708955409538384E-6	DEFECT
//- RedrawManager.unlock(); //- _redrawer.repairDamage();	WITHOUT_CLASSIFICATION	0.9999990944233405	WITHOUT_CLASSIFICATION	9.055766595166144E-7	DEFECT
// if this composite state is not attached to a statemachine // it is not the toplevel composite state.	WITHOUT_CLASSIFICATION	0.99999967099123	WITHOUT_CLASSIFICATION	3.2900876994236406E-7	DEFECT
// Get the assocations and connections. No problem (there is a separate // critic) if this is a binary association or is an association role.	WITHOUT_CLASSIFICATION	0.9999697785631357	WITHOUT_CLASSIFICATION	3.0221436864233825E-5	DEFECT
// If this was an association then there will be relevant // information to fetch out of the mode arguments.  If it // not an association then these will be passed forward // harmlessly as null.	WITHOUT_CLASSIFICATION	0.9999991923936355	WITHOUT_CLASSIFICATION	8.076063644425862E-7	DEFECT
// find selected rows and make a list of the model elements // that are selected	WITHOUT_CLASSIFICATION	0.9999999531483807	WITHOUT_CLASSIFICATION	4.6851619186885064E-8	DEFECT
//////////////////////////////////////////////////////////////// // TreeCellRenderer implementation	WITHOUT_CLASSIFICATION	0.9999092643529875	WITHOUT_CLASSIFICATION	9.073564701234811E-5	DEFECT
// Build namespace hierarchy like this: //   g     a //         /\ //        b  c //           /\ //          d  e f	WITHOUT_CLASSIFICATION	0.9810629019341516	WITHOUT_CLASSIFICATION	0.018937098065848458	DEFECT
//    private Property	WITHOUT_CLASSIFICATION	0.9999862248464342	WITHOUT_CLASSIFICATION	1.3775153565722472E-5	DEFECT
// always fire changes in the case something has changed in the // composition of the taggedValues collection.	WITHOUT_CLASSIFICATION	0.9999993655383617	WITHOUT_CLASSIFICATION	6.344616383762606E-7	DEFECT
// Build up an array list of the heights of each label/component pair. // Heights of zero indicate a proportional height.	WITHOUT_CLASSIFICATION	0.9999986510380647	WITHOUT_CLASSIFICATION	1.348961935325292E-6	DEFECT
//            CmdPaste cmd = new CmdPaste(); //            cmd.doIt();	WITHOUT_CLASSIFICATION	0.9999996167993701	WITHOUT_CLASSIFICATION	3.83200629943811E-7	DEFECT
// stereotypes applied to the target mostly control which TDs // (but see below for other listeners too)	WITHOUT_CLASSIFICATION	0.9999999791880952	WITHOUT_CLASSIFICATION	2.0811904801679872E-8	DEFECT
// TODO: Add referenceValue for tagged values  // which have a non-primitive type	WITHOUT_CLASSIFICATION	0.9470455826003517	WITHOUT_CLASSIFICATION	0.052954417399648235	DEFECT
// add a decision but set the critic priority to 0 so isRelevant // should still be false	WITHOUT_CLASSIFICATION	0.9999972240593271	WITHOUT_CLASSIFICATION	2.7759406728232636E-6	DEFECT
//TODO: We should also test that the object //have been removed from their namespace. //Collection c = Model.getFacade().getOwnedElements(p.getRoot());	WITHOUT_CLASSIFICATION	0.9952841503336336	WITHOUT_CLASSIFICATION	0.0047158496663664414	DEFECT
// Because the notation events get dispatched on the Swing // event thread, we need to use invokeAndWait to make sure that we // don't return until they've been delivered	WITHOUT_CLASSIFICATION	0.9999993548344486	WITHOUT_CLASSIFICATION	6.451655514794039E-7	DEFECT
// Parent is Element, but it has no attributes or associations to check // checkElementCopy(e1, e2);	WITHOUT_CLASSIFICATION	0.9999895639944337	WITHOUT_CLASSIFICATION	1.0436005566165878E-5	DEFECT
// Extra careful now, not to keep any references to the // second argument.	WITHOUT_CLASSIFICATION	0.9999988895507781	WITHOUT_CLASSIFICATION	1.1104492219381762E-6	DEFECT
// Auto-create a return message for a call message	WITHOUT_CLASSIFICATION	0.9999999409227031	WITHOUT_CLASSIFICATION	5.90772970145369E-8	DEFECT
// get the source of the return message	WITHOUT_CLASSIFICATION	0.9999999894055369	WITHOUT_CLASSIFICATION	1.0594463074167645E-8	DEFECT
// get the dest of the return message	WITHOUT_CLASSIFICATION	0.9999999985111984	WITHOUT_CLASSIFICATION	1.4888015685086008E-9	DEFECT
//            GridBagConstraints gridBagConstraints3 = new GridBagConstraints(); //            gridBagConstraints3.gridx = 2; //            gridBagConstraints3.anchor = GridBagConstraints.NORTHWEST; //            gridBagConstraints3.insets = new Insets(5, 5, 0, 0); //            gridBagConstraints3.gridy = 3; //            GridBagConstraints gridBagConstraints2 = new GridBagConstraints(); //            gridBagConstraints2.gridx = 0; //            gridBagConstraints2.anchor = GridBagConstraints.NORTHWEST; //            gridBagConstraints2.insets = new Insets(5, 5, 0, 0); //            gridBagConstraints2.gridy = 3;	WITHOUT_CLASSIFICATION	0.9999999940846512	WITHOUT_CLASSIFICATION	5.915348781942888E-9	DEFECT
//            Fig spf = null; //            Fig dpf = null; //            FigNode sfn = null; //            FigNode dfn = null;	WITHOUT_CLASSIFICATION	0.9999945710082703	WITHOUT_CLASSIFICATION	5.428991729715472E-6	DEFECT
// If the event originated from the window w/glass pane, consume  // the event	WITHOUT_CLASSIFICATION	0.9999999831645999	WITHOUT_CLASSIFICATION	1.6835400087730786E-8	DEFECT
// Add GUI-internal stuff. // GUI-internal stuff is panes, tabs, menu items that are // part of the GUI subsystem i.e. a class in the // org.argouml.ui-package. // Things that are not part of the GUI, like everything that // has any knowledge about UML, Diagrams, Code Generation,  // Reverse Engineering, creates and registers itself // when that subsystem or module is loaded.	WITHOUT_CLASSIFICATION	0.9999999784622826	WITHOUT_CLASSIFICATION	2.1537717313969454E-8	DEFECT
// The workarea is all the visible space except the menu, // toolbar and status bar.  Workarea is laid out as a // BorderSplitPane where the various components that make up // the argo application can be positioned.	WITHOUT_CLASSIFICATION	0.9987671518707025	WITHOUT_CLASSIFICATION	0.0012328481292974227	DEFECT
// iterate through the tabbed panels to determine whether they // should be enabled.	WITHOUT_CLASSIFICATION	0.999999269965419	WITHOUT_CLASSIFICATION	7.300345810204667E-7	DEFECT
// Always select properties panel if defaultToProperties is true, // and if properties panel is appropriate for selected perspective	WITHOUT_CLASSIFICATION	0.9999985292182981	WITHOUT_CLASSIFICATION	1.4707817018201837E-6	DEFECT
//        tabs.addTab(Translator.localize("dialog.find.tab.name-and-location"), //                nameLocTab);	WITHOUT_CLASSIFICATION	0.999999889550554	WITHOUT_CLASSIFICATION	1.1044944605518102E-7	DEFECT
//_tableModel.setTarget(_target); //_table.setModel(_tableModel);	WITHOUT_CLASSIFICATION	0.9999996268649933	WITHOUT_CLASSIFICATION	3.731350065523245E-7	DEFECT
// if the current shortcut has not been set, then the actual // shortcut value is the default one	WITHOUT_CLASSIFICATION	0.9999998286494722	WITHOUT_CLASSIFICATION	1.7135052774207367E-7	DEFECT
// if the user cancelled the operation, // we don't have to save anything	WITHOUT_CLASSIFICATION	0.9999998839344046	WITHOUT_CLASSIFICATION	1.1606559545994928E-7	DEFECT
// create the return message modelelement with the interaction // and the collaboration	WITHOUT_CLASSIFICATION	0.999999935184465	WITHOUT_CLASSIFICATION	6.481553511526247E-8	DEFECT
// Generate and register the OSXAdapter, passing the methods // we wish to use as delegates for various // com.apple.eawt.ApplicationListener methods	WITHOUT_CLASSIFICATION	0.9999999455196728	WITHOUT_CLASSIFICATION	5.448032719498628E-8	DEFECT
// TODO: no Links in UML 2	WITHOUT_CLASSIFICATION	0.9639096508638818	DEFECT	0.036090349136118215	WITHOUT_CLASSIFICATION
// nothing we can do about veto, so just ignore it	WITHOUT_CLASSIFICATION	0.9999999924248507	WITHOUT_CLASSIFICATION	7.575149305920542E-9	DEFECT
//////////////////////////////////////////////////////////////// // event handling	WITHOUT_CLASSIFICATION	0.9999992496856168	WITHOUT_CLASSIFICATION	7.503143832143935E-7	DEFECT
//////////////////////////////////////////////////////////////// // event handlers	WITHOUT_CLASSIFICATION	0.99999993178587	WITHOUT_CLASSIFICATION	6.821413007364854E-8	DEFECT
//////////////////////////////////////////////////////////////// // Fig accessors	WITHOUT_CLASSIFICATION	0.9999963537855596	WITHOUT_CLASSIFICATION	3.6462144404329387E-6	DEFECT
//////////////////////////////////////////////////////////////// // event handlers - MouseListener implementation	WITHOUT_CLASSIFICATION	0.9999984245970472	WITHOUT_CLASSIFICATION	1.5754029527684407E-6	DEFECT
// the UML object // wrong end of the edge	WITHOUT_CLASSIFICATION	0.9999993985164253	WITHOUT_CLASSIFICATION	6.014835747198335E-7	DEFECT
// We are going to add the ones still valid & new ones // in the right sequence:	WITHOUT_CLASSIFICATION	0.9999994299580034	WITHOUT_CLASSIFICATION	5.700419965728243E-7	DEFECT
// This is perfectly normal and happens among other things // within the call to setDiagram (below).	WITHOUT_CLASSIFICATION	0.9999834424524776	WITHOUT_CLASSIFICATION	1.6557547522460256E-5	DEFECT
//////////////////////////////////////////////////////////////// // events	WITHOUT_CLASSIFICATION	0.9999994434678665	WITHOUT_CLASSIFICATION	5.565321334163449E-7	DEFECT
// if the new edge implements the MouseListener // interface it has to receive the mouseReleased() event	WITHOUT_CLASSIFICATION	0.999999918035966	WITHOUT_CLASSIFICATION	8.196403404926899E-8	DEFECT
//////////////////////////////////////////////////////////////// // user feedback	WITHOUT_CLASSIFICATION	0.9999996794067321	WITHOUT_CLASSIFICATION	3.205932678888679E-7	DEFECT
// needs to be updated for changes in Notation subsystem - tfm //            String nameStr = Notation.generate(this, getOwner()).trim(); //            getNameFig().setText(nameStr);	WITHOUT_CLASSIFICATION	0.9999996868060088	WITHOUT_CLASSIFICATION	3.1319399119906363E-7	DEFECT
//////////////////////////////////////////////////////////////// // GraphFactory implementation	WITHOUT_CLASSIFICATION	0.9999766991284917	WITHOUT_CLASSIFICATION	2.3300871508274985E-5	DEFECT
// adapted from SelectionWButtons from line 280 // calls a helper method to avoid this edge disappearing // if the new source and dest are the same node.	WITHOUT_CLASSIFICATION	0.9999910794063895	WITHOUT_CLASSIFICATION	8.920593610421798E-6	DEFECT
// Give up if we are already on the graph. This is a bit inconistent // with canAddNode above.	WITHOUT_CLASSIFICATION	0.9999989577553852	WITHOUT_CLASSIFICATION	1.0422446147606104E-6	DEFECT
// Link the new extend relationship in to the ends. Remember we // draw from the extension use case to the base use case.	WITHOUT_CLASSIFICATION	0.9999999837343363	WITHOUT_CLASSIFICATION	1.6265663739574344E-8	DEFECT
// TODO: This is using the default platform character encoding // specifying an encoding will produce more predictable results	WITHOUT_CLASSIFICATION	0.9975663179830484	WITHOUT_CLASSIFICATION	0.00243368201695171	DEFECT
// Check against "" is needed for backward // compatibility.  Don't remove without // checking subclasses and warning downstream // developers - tfm - 20081211	WITHOUT_CLASSIFICATION	0.9999982111180645	WITHOUT_CLASSIFICATION	1.7888819354609504E-6	DEFECT
// next line does give user.home back but this is not // compliant with how the project.uri works and therefore // open and save project as give different starting // directories.  String directory = // Globals.getLastDirectory();	WITHOUT_CLASSIFICATION	0.9733712096495296	WITHOUT_CLASSIFICATION	0.026628790350470447	DEFECT
// Correct the activator value	WITHOUT_CLASSIFICATION	0.9999806188595518	WITHOUT_CLASSIFICATION	1.9381140448211546E-5	DEFECT
// We know this is a return action now. It must be pointing the // opposite way to the activator.	WITHOUT_CLASSIFICATION	0.9999965420349737	WITHOUT_CLASSIFICATION	3.4579650264257375E-6	DEFECT
// Java SE 6 has a native GIF writer, but it's not in Java 5.  One // is available in the JAI-ImageIO library, but we don't currently // bundle that and at 6+ MB it seems like a heavyweight solution, but // I don't have time to produce a stripped down version right now - tfm // https://jai-imageio.dev.java.net/	WITHOUT_CLASSIFICATION	0.6279613662343532	WITHOUT_CLASSIFICATION	0.37203863376564683	DEFECT
// we don't want to show some nasty gray background // color, now do we?	WITHOUT_CLASSIFICATION	0.9999972160012949	WITHOUT_CLASSIFICATION	2.783998705004455E-6	DEFECT
// Although we've historically written out the DOCTYPE, the DTD doesn't // actually exist and this line will get stripped by the .uml file // persister //        + "<!DOCTYPE profile SYSTEM \"profile.dtd\" >\n"	WITHOUT_CLASSIFICATION	0.9999940994509756	WITHOUT_CLASSIFICATION	5.900549024355161E-6	DEFECT
// check that the tag definition is returned by // {@link UMLTagDefinitionComboBoxModel#getApplicableTagDefinitions(Object)}	WITHOUT_CLASSIFICATION	0.999999968541891	WITHOUT_CLASSIFICATION	3.1458109081232724E-8	DEFECT
// TODO real numbers not yet supported //assertEquals(DefaultOclEvaluator.getInstance() //.evaluate(null, null, "1.5"), 1.5);	WITHOUT_CLASSIFICATION	0.9988040501752519	WITHOUT_CLASSIFICATION	0.0011959498247481255	DEFECT
// REMEMBER to change this if you change the number of MEs with source // path settings	WITHOUT_CLASSIFICATION	0.9999999557592003	WITHOUT_CLASSIFICATION	4.424079968253342E-8	DEFECT
// put the x at the right side of the activation if needed	WITHOUT_CLASSIFICATION	0.9999998136464365	WITHOUT_CLASSIFICATION	1.8635356340219147E-7	DEFECT
// Make sure there is the minimum gap above the message being drawn	WITHOUT_CLASSIFICATION	0.9999963830241422	WITHOUT_CLASSIFICATION	3.6169758578811894E-6	DEFECT
// Make sure there is the minimum gap below the message being drawn	WITHOUT_CLASSIFICATION	0.9999999245673905	WITHOUT_CLASSIFICATION	7.543260950491361E-8	DEFECT
// The FigMessage that triggered this FigActivation into existence	WITHOUT_CLASSIFICATION	0.9999979223928332	WITHOUT_CLASSIFICATION	2.0776071667664324E-6	DEFECT
//////////////////////////////////////////////////////////////// // constructors	WITHOUT_CLASSIFICATION	0.9999996493752797	WITHOUT_CLASSIFICATION	3.5062472022456624E-7	DEFECT
// This module will still register as enabled for UML1.4 but it won't // actually do anything.	WITHOUT_CLASSIFICATION	0.9993855300372556	WITHOUT_CLASSIFICATION	6.144699627443898E-4	DEFECT
// Get the region as the first Region in the State. // If there is no region in the StateMachine then create one.	WITHOUT_CLASSIFICATION	0.9999999772904475	WITHOUT_CLASSIFICATION	2.270955250467591E-8	DEFECT
/*     * @see org.tigris.gef.graph.MutableGraphModel#addEdge(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999660203298	WITHOUT_CLASSIFICATION	3.397967016996562E-8	DEFECT
// Create the layer	WITHOUT_CLASSIFICATION	0.9999989619371308	WITHOUT_CLASSIFICATION	1.0380628692057366E-6	DEFECT
// Create the renderer	WITHOUT_CLASSIFICATION	0.9999983129732893	WITHOUT_CLASSIFICATION	1.6870267106111821E-6	DEFECT
// If we're not provided a namespace then get it from the diagram or // the root	WITHOUT_CLASSIFICATION	0.9999983560474961	WITHOUT_CLASSIFICATION	1.6439525039017276E-6	DEFECT
// Link the previous/next reference of the swimlanes // according to the x order.	WITHOUT_CLASSIFICATION	0.9999997055840881	WITHOUT_CLASSIFICATION	2.944159118070332E-7	DEFECT
//////////////////////////////////////////////////////////////// // GraphModel implementation	WITHOUT_CLASSIFICATION	0.9999877302153688	WITHOUT_CLASSIFICATION	1.2269784631187463E-5	DEFECT
// make space for the clarifier // for vertical symmetry // margin between text and border	WITHOUT_CLASSIFICATION	0.9999999861934181	WITHOUT_CLASSIFICATION	1.3806581950027359E-8	DEFECT
//////////////////////////////////////////////////////////////// // MutableGraphModel implementation	WITHOUT_CLASSIFICATION	0.9999949049197683	WITHOUT_CLASSIFICATION	5.0950802317837466E-6	DEFECT
//////////////// // actions for toolbar	WITHOUT_CLASSIFICATION	0.9999965021089471	WITHOUT_CLASSIFICATION	3.497891052959422E-6	DEFECT
//////////////////////////////////////////////////////////////// // VetoableChangeListener implementation	WITHOUT_CLASSIFICATION	0.9999825620679107	WITHOUT_CLASSIFICATION	1.7437932089304444E-5	DEFECT
//////////////////////////////////////////////////////////////// // contructors	WITHOUT_CLASSIFICATION	0.9999996548624205	WITHOUT_CLASSIFICATION	3.451375794757301E-7	DEFECT
//////////////////////////////////////////////////////////////// // event processing	WITHOUT_CLASSIFICATION	0.9999999201795804	WITHOUT_CLASSIFICATION	7.982041966186467E-8	DEFECT
// The purpose of this method is not explained and it give give // NPE depending on z order of figs as they are read. For now // ignore if null but for future lets delete this.	WITHOUT_CLASSIFICATION	0.9999999550025255	WITHOUT_CLASSIFICATION	4.499747454213325E-8	DEFECT
//////////////////////////////////////////////////////////////// // Fig accessors	WITHOUT_CLASSIFICATION	0.9999963537855596	WITHOUT_CLASSIFICATION	3.6462144404329387E-6	DEFECT
//////////////////////////////////////////////////////////////// // fig accessors	WITHOUT_CLASSIFICATION	0.9999986930254342	WITHOUT_CLASSIFICATION	1.3069745657723055E-6	DEFECT
// can't have a connection between 2 interfaces: // get the 'other' end type	WITHOUT_CLASSIFICATION	0.9997985509496035	WITHOUT_CLASSIFICATION	2.0144905039661042E-4	DEFECT
// If there's only a single child (and we're it's only parent), // set a hint for where to place it when we get to its row	WITHOUT_CLASSIFICATION	0.9999997997030644	WITHOUT_CLASSIFICATION	2.0029693558128527E-7	DEFECT
// Use "aSize" to build up the minimum size. Start with the size of the // name fig and build up.	WITHOUT_CLASSIFICATION	0.9999999358437642	WITHOUT_CLASSIFICATION	6.415623584333368E-8	DEFECT
/*     * @see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999798760241	WITHOUT_CLASSIFICATION	2.0123975991057457E-8	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999748478784519	WITHOUT_CLASSIFICATION	2.5152121548066763E-5	DEFECT
// Both ends must be defined and nodes that are on the graph already.	WITHOUT_CLASSIFICATION	0.9999980942688366	WITHOUT_CLASSIFICATION	1.9057311633904912E-6	DEFECT
// if we are the dest and is a call action, create the  // activation, but don't add it until the height is set.	WITHOUT_CLASSIFICATION	0.9999266570314673	WITHOUT_CLASSIFICATION	7.33429685326865E-5	DEFECT
// if we are the dest and is a call action, create the  // activation, but don't add it until the height is set.	WITHOUT_CLASSIFICATION	0.9999266570314673	WITHOUT_CLASSIFICATION	7.33429685326865E-5	DEFECT
// if we are the destination of a create action, // create the entire activation	WITHOUT_CLASSIFICATION	0.9999999863234172	WITHOUT_CLASSIFICATION	1.3676582841693013E-8	DEFECT
// if we are the target of a destroy action // the figlifeline ends here and we add the activation	WITHOUT_CLASSIFICATION	0.9999980162844027	WITHOUT_CLASSIFICATION	1.9837155973540563E-6	DEFECT
// if we are the source of a return action // the activation ends here.	WITHOUT_CLASSIFICATION	0.9999990820722453	WITHOUT_CLASSIFICATION	9.179277547466115E-7	DEFECT
// If we have a currentAct object that means have reached the end // of the lifeline with a call or a create not returned. // Add the activation to the list after setting its height to end // at the end of the lifeline.	WITHOUT_CLASSIFICATION	0.9999854357800501	WITHOUT_CLASSIFICATION	1.4564219950041963E-5	DEFECT
// we do nothing. No call to the parent	WITHOUT_CLASSIFICATION	0.9999973878825013	WITHOUT_CLASSIFICATION	2.612117498688563E-6	DEFECT
// we don't recalculate activations, just move them	WITHOUT_CLASSIFICATION	0.9999980615581242	WITHOUT_CLASSIFICATION	1.9384418758323703E-6	DEFECT
// if is a classifier role, it must return all the related messages.	WITHOUT_CLASSIFICATION	0.9999995862953072	WITHOUT_CLASSIFICATION	4.1370469281961283E-7	DEFECT
// if is a message, it must return the sender // and the receiver of the message.	WITHOUT_CLASSIFICATION	0.999999810387549	WITHOUT_CLASSIFICATION	1.896124509075615E-7	DEFECT
// Comments from anywhere in the model are allowed	WITHOUT_CLASSIFICATION	0.9999974147358655	WITHOUT_CLASSIFICATION	2.5852641346420346E-6	DEFECT
// All other types of elements must be in this namespace	WITHOUT_CLASSIFICATION	0.9999934408497543	WITHOUT_CLASSIFICATION	6.559150245650021E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999748478784519	WITHOUT_CLASSIFICATION	2.5152121548066763E-5	DEFECT
// we initialize the coordinates.	WITHOUT_CLASSIFICATION	0.9999998807641451	WITHOUT_CLASSIFICATION	1.192358548880578E-7	DEFECT
// we do nothing	WITHOUT_CLASSIFICATION	0.9999990967627234	WITHOUT_CLASSIFICATION	9.032372766086027E-7	DEFECT
// manage if cursor x is less than lastX1 	WITHOUT_CLASSIFICATION	0.9999987702414013	WITHOUT_CLASSIFICATION	1.2297585987113008E-6	DEFECT
// manage if cursor x is more than lastX2 	WITHOUT_CLASSIFICATION	0.9999988563890124	WITHOUT_CLASSIFICATION	1.143610987513862E-6	DEFECT
// manage changes of direction...	WITHOUT_CLASSIFICATION	0.9999991378659621	WITHOUT_CLASSIFICATION	8.621340379996727E-7	DEFECT
// I have no direction yet	WITHOUT_CLASSIFICATION	0.9993118778616813	WITHOUT_CLASSIFICATION	6.88122138318695E-4	DEFECT
// we move down or up the messages that are downward the broom	WITHOUT_CLASSIFICATION	0.9999987220159725	WITHOUT_CLASSIFICATION	1.2779840275098544E-6	DEFECT
// we recalculate all the activations	WITHOUT_CLASSIFICATION	0.9999993500519166	WITHOUT_CLASSIFICATION	6.49948083351607E-7	DEFECT
// we draw a cross	WITHOUT_CLASSIFICATION	0.9999998177439053	WITHOUT_CLASSIFICATION	1.8225609455132738E-7	DEFECT
// we don't let the user move the messages horizontally.	WITHOUT_CLASSIFICATION	0.9999679627301523	WITHOUT_CLASSIFICATION	3.20372698477873E-5	DEFECT
// if the edge is near the bottom of the classifier roles, // we enlarge all the FigClassifierRoles in the diagram.	WITHOUT_CLASSIFICATION	0.9999999781433255	WITHOUT_CLASSIFICATION	2.1856674392372932E-8	DEFECT
//super(Model.getFacade().getName(op), null);	WITHOUT_CLASSIFICATION	0.9999937405729059	WITHOUT_CLASSIFICATION	6.259427094037581E-6	DEFECT
// we need the edge to be complete	WITHOUT_CLASSIFICATION	0.9999990668806487	WITHOUT_CLASSIFICATION	9.33119351421229E-7	DEFECT
// if the added edge is a Create Message it will affect the position // of the ClassifierRole so it should be repositioned	WITHOUT_CLASSIFICATION	0.9999977011300564	WITHOUT_CLASSIFICATION	2.2988699436325892E-6	DEFECT
// the initial x is the left side of the activation	WITHOUT_CLASSIFICATION	0.9999893375463614	WITHOUT_CLASSIFICATION	1.066245363861159E-5	DEFECT
// the initial x is the left side of the activation	WITHOUT_CLASSIFICATION	0.9999893375463614	WITHOUT_CLASSIFICATION	1.066245363861159E-5	DEFECT
// put the x at the right side of the activation if needed	WITHOUT_CLASSIFICATION	0.9999998136464365	WITHOUT_CLASSIFICATION	1.8635356340219147E-7	DEFECT
// if the y coordinate is before the classifier role y, // we place the start in the corner of the fighead.	WITHOUT_CLASSIFICATION	0.9999999264329156	WITHOUT_CLASSIFICATION	7.356708438314776E-8	DEFECT
// if the y coordinate is inside the head, // the x must be in the border of the headFig.	WITHOUT_CLASSIFICATION	0.9999997095852404	WITHOUT_CLASSIFICATION	2.9041475954538834E-7	DEFECT
/*     * @see org.tigris.gef.presentation.FigEdge#setFig(org.tigris.gef.presentation.Fig)     */	WITHOUT_CLASSIFICATION	0.9999998880153327	WITHOUT_CLASSIFICATION	1.1198466739329893E-7	DEFECT
/*     * @see     * org.argouml.uml.diagram.state.ui.FigStateVertex#initNotationProviders     * (java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999998467691237	WITHOUT_CLASSIFICATION	1.532308762548827E-7	DEFECT
// if the y coordinate is before the classifier role y, // we place the start in the corner of the fighead.	WITHOUT_CLASSIFICATION	0.9999999264329156	WITHOUT_CLASSIFICATION	7.356708438314776E-8	DEFECT
// if the y coordinate is inside the head, // the x must be in the border of the headFig.	WITHOUT_CLASSIFICATION	0.9999997095852404	WITHOUT_CLASSIFICATION	2.9041475954538834E-7	DEFECT
/* Use a different notation as Messages on a collaboration diagram: */	WITHOUT_CLASSIFICATION	0.9997262519260119	WITHOUT_CLASSIFICATION	2.7374807398804836E-4	DEFECT
/* This next argument may be used to switch off     * the generation of sequence numbers - this is     * still to be implemented.     * They are less desired in sequence diagrams,     * since they do not add any information.     * In collaboration diagrams they are needed,     * and they are still optional in sequence diagrams. */	WITHOUT_CLASSIFICATION	0.999999994978359	WITHOUT_CLASSIFICATION	5.021640981645965E-9	DEFECT
// Operations ...	WITHOUT_CLASSIFICATION	0.9999952370682829	WITHOUT_CLASSIFICATION	4.762931717210925E-6	DEFECT
//TODO: add logging, but this will never happen and is handled	WITHOUT_CLASSIFICATION	0.6786403320193898	DEFECT	0.32135966798061033	WITHOUT_CLASSIFICATION
// If possible we determine this by checking the destination // and source Figs are the same. If this is not possible // because the edge is not yet connected then we check the // model.	WITHOUT_CLASSIFICATION	0.9999984867521822	WITHOUT_CLASSIFICATION	1.5132478177620661E-6	DEFECT
// we update the activations...	WITHOUT_CLASSIFICATION	0.9999995819884314	WITHOUT_CLASSIFICATION	4.180115686243776E-7	DEFECT
// for performance, we check if this is a selfmessage // if it is, we have just updated the activations	WITHOUT_CLASSIFICATION	0.9999999310708104	WITHOUT_CLASSIFICATION	6.892918956400317E-8	DEFECT
// This call seems not very robust. Yet to determine cause.	WITHOUT_CLASSIFICATION	0.999237439585706	WITHOUT_CLASSIFICATION	7.625604142939419E-4	DEFECT
// this constructor is needed for PGMLStackParser to load // saved diagrams. It does nothing, because  // PGMLStackParser will call setPoints later.	WITHOUT_CLASSIFICATION	0.999997173803785	WITHOUT_CLASSIFICATION	2.8261962148862766E-6	DEFECT
// vertical resizing	WITHOUT_CLASSIFICATION	0.9999979431763513	WITHOUT_CLASSIFICATION	2.0568236487132455E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999959030536316	WITHOUT_CLASSIFICATION	4.096946368362294E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
// This module will still register as enabled for UML1.4 but it won't // actually do anything.	WITHOUT_CLASSIFICATION	0.9993855300372556	WITHOUT_CLASSIFICATION	6.144699627443898E-4	DEFECT
// Get the region as the first Region in the State. // If there is no region in the StateMachine then create one.	WITHOUT_CLASSIFICATION	0.9999999772904475	WITHOUT_CLASSIFICATION	2.270955250467591E-8	DEFECT
// There are no regions so create one and place the vertex //there.	WITHOUT_CLASSIFICATION	0.9999997422597677	WITHOUT_CLASSIFICATION	2.577402323040167E-7	DEFECT
// There are one or more regions so find the one that the //vertex was dropped in	WITHOUT_CLASSIFICATION	0.9999995644159201	WITHOUT_CLASSIFICATION	4.355840800019447E-7	DEFECT
// The vertex was dropped onto the diagram. // Get the region as the first Region in the StateMachine. // If there is no region in the StateMachine then create one.	WITHOUT_CLASSIFICATION	0.999999989044674	WITHOUT_CLASSIFICATION	1.09553259901627E-8	DEFECT
/*     * @see     * org.argouml.uml.diagram.ui.FigNodeModelElement#removeFromDiagramImpl()     */	WITHOUT_CLASSIFICATION	0.9999998152951135	WITHOUT_CLASSIFICATION	1.8470488642024435E-7	DEFECT
// _x = x; _y = y; _w = w; _h = h;	WITHOUT_CLASSIFICATION	0.9999800926810427	WITHOUT_CLASSIFICATION	1.9907318957228126E-5	DEFECT
/*     * @see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999999980370717	WITHOUT_CLASSIFICATION	1.962928268087383E-9	DEFECT
// Create the layer	WITHOUT_CLASSIFICATION	0.9999989619371308	WITHOUT_CLASSIFICATION	1.0380628692057366E-6	DEFECT
// nothing we can do about veto, so just ignore it	WITHOUT_CLASSIFICATION	0.9999999924248507	WITHOUT_CLASSIFICATION	7.575149305920542E-9	DEFECT
// Create the renderer	WITHOUT_CLASSIFICATION	0.9999983129732893	WITHOUT_CLASSIFICATION	1.6870267106111821E-6	DEFECT
// Although not generally true for GEF, for Argo we know that the layer // is a LayerPerspective which knows the associated diagram	WITHOUT_CLASSIFICATION	0.9952751636767379	WITHOUT_CLASSIFICATION	0.004724836323262116	DEFECT
// in this event we do nothing, // only stop drawing the broom.	WITHOUT_CLASSIFICATION	0.9999995222610637	WITHOUT_CLASSIFICATION	4.777389362733277E-7	DEFECT
// There is a bug in GEF where positioning nodes can affect // edge positions. We need to do 3 iterations to protect // against that.	WITHOUT_CLASSIFICATION	0.9948928412194573	WITHOUT_CLASSIFICATION	0.005107158780542751	DEFECT
// 1. Remember current message paths	WITHOUT_CLASSIFICATION	0.9999990604420381	WITHOUT_CLASSIFICATION	9.395579619810178E-7	DEFECT
// 2. Reposition and resize nodes	WITHOUT_CLASSIFICATION	0.9999964961038372	WITHOUT_CLASSIFICATION	3.5038961628485067E-6	DEFECT
// 3. Now reposition messages based on their original position	WITHOUT_CLASSIFICATION	0.9999999134918068	WITHOUT_CLASSIFICATION	8.650819318497902E-8	DEFECT
// Compute the initial center position of the CR	WITHOUT_CLASSIFICATION	0.9999999888436737	WITHOUT_CLASSIFICATION	1.1156326422206402E-8	DEFECT
// horizontal resizing	WITHOUT_CLASSIFICATION	0.9999982869520293	WITHOUT_CLASSIFICATION	1.7130479706291474E-6	DEFECT
// Compute the final center position of the CR	WITHOUT_CLASSIFICATION	0.9999999912716891	WITHOUT_CLASSIFICATION	8.728310929799597E-9	DEFECT
// Self messages act differently so it is needed to move them separetly. // Only self messages of selected CR should be horizontally translated.	WITHOUT_CLASSIFICATION	0.999887087624741	WITHOUT_CLASSIFICATION	1.1291237525894221E-4	DEFECT
// Create the graph model	WITHOUT_CLASSIFICATION	0.9999997348305597	WITHOUT_CLASSIFICATION	2.651694404018283E-7	DEFECT
// Y position of the new CR should match existing CRs Y position	WITHOUT_CLASSIFICATION	0.9999992943040009	WITHOUT_CLASSIFICATION	7.056959990531822E-7	DEFECT
// Init the sequence diagrams from the module	WITHOUT_CLASSIFICATION	0.9999991933205477	WITHOUT_CLASSIFICATION	8.066794523929206E-7	DEFECT
// debugging and looking at fig.headFig.figs[1]._currText  // I can see that it's working, but how to test it?       	WITHOUT_CLASSIFICATION	0.9986428642381013	WITHOUT_CLASSIFICATION	0.0013571357618987023	DEFECT
// Operations that work on elements:	WITHOUT_CLASSIFICATION	0.9985609357644796	WITHOUT_CLASSIFICATION	0.0014390642355204325	DEFECT
// Operations that work on classes of objects:	WITHOUT_CLASSIFICATION	0.9978488217090167	WITHOUT_CLASSIFICATION	0.0021511782909833053	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getMinimumSize()     */	WITHOUT_CLASSIFICATION	0.9999999327190773	WITHOUT_CLASSIFICATION	6.728092273203155E-8	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//    Object getImportedPackage(Object element);	WITHOUT_CLASSIFICATION	0.9999995745977734	WITHOUT_CLASSIFICATION	4.254022265067765E-7	DEFECT
////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999980927080177	WITHOUT_CLASSIFICATION	1.9072919822931333E-5	DEFECT
////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999980927080177	WITHOUT_CLASSIFICATION	1.9072919822931333E-5	DEFECT
////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999980927080177	WITHOUT_CLASSIFICATION	1.9072919822931333E-5	DEFECT
//    Object getIncludingCase(Object handle);	WITHOUT_CLASSIFICATION	0.9999981947449994	WITHOUT_CLASSIFICATION	1.8052550005727636E-6	DEFECT
//////// Javadoc reviewed above this point - tfm /////////////	WITHOUT_CLASSIFICATION	0.999992870907039	WITHOUT_CLASSIFICATION	7.129092960999965E-6	DEFECT
//    Object getImportingNamespace(Object element);	WITHOUT_CLASSIFICATION	0.9999995124968704	WITHOUT_CLASSIFICATION	4.875031297015348E-7	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//Object createStereotype();	WITHOUT_CLASSIFICATION	0.9999956917272435	WITHOUT_CLASSIFICATION	4.30827275659303E-6	DEFECT
/* Implementation Note:    * Unlike many of the interfaces to the model there is no control to force    * a single instance of an XmiReader. This is to allow work objects generated    * by the implementation to be garbage collected when an XmiReader instance    * falls out of scope.    */	WITHOUT_CLASSIFICATION	0.9999222900870532	WITHOUT_CLASSIFICATION	7.770991294680062E-5	DEFECT
// ADiagramElementProperty delegate methods	WITHOUT_CLASSIFICATION	0.9999992465769134	WITHOUT_CLASSIFICATION	7.534230867100467E-7	DEFECT
/*     * @see org.omg.uml.diagraminterchange.ADiagramElementProperty#add(     *         org.omg.uml.diagraminterchange.DiagramElement,     *         org.omg.uml.diagraminterchange.Property)     */	WITHOUT_CLASSIFICATION	0.9999999314842447	WITHOUT_CLASSIFICATION	6.851575527006796E-8	DEFECT
/*     * @see org.omg.uml.diagraminterchange.ADiagramElementProperty#exists(     *         org.omg.uml.diagraminterchange.DiagramElement,     *         org.omg.uml.diagraminterchange.Property)     */	WITHOUT_CLASSIFICATION	0.999999871303299	WITHOUT_CLASSIFICATION	1.2869670087366448E-7	DEFECT
/*     * @see org.omg.uml.diagraminterchange.ADiagramElementProperty#getProperty(     *         org.omg.uml.diagraminterchange.DiagramElement)     */	WITHOUT_CLASSIFICATION	0.9999999444943899	WITHOUT_CLASSIFICATION	5.550561024474788E-8	DEFECT
//easy interface to properties	WITHOUT_CLASSIFICATION	0.9999996965915662	WITHOUT_CLASSIFICATION	3.0340843377470414E-7	DEFECT
// Here follows the interfaces that contain the enums of different // kinds in the UML meta-model.	WITHOUT_CLASSIFICATION	0.9999994760920835	WITHOUT_CLASSIFICATION	5.239079164945035E-7	DEFECT
// Flow is not in UML 2.x - don't implement	WITHOUT_CLASSIFICATION	0.998121073047865	WITHOUT_CLASSIFICATION	0.001878926952134947	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999959030536316	WITHOUT_CLASSIFICATION	4.096946368362294E-6	DEFECT
//additional support for tagged values	WITHOUT_CLASSIFICATION	0.999999879861633	WITHOUT_CLASSIFICATION	1.201383669925393E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999959030536316	WITHOUT_CLASSIFICATION	4.096946368362294E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999959030536316	WITHOUT_CLASSIFICATION	4.096946368362294E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999959030536316	WITHOUT_CLASSIFICATION	4.096946368362294E-6	DEFECT
// Here follows the interfaces that contain the enums of different // kinds in the UML meta-model.	WITHOUT_CLASSIFICATION	0.9999994760920835	WITHOUT_CLASSIFICATION	5.239079164945035E-7	DEFECT
//////////////////////////////////////////////////////////////// // static variables	WITHOUT_CLASSIFICATION	0.9999998818060729	WITHOUT_CLASSIFICATION	1.1819392707333433E-7	DEFECT
//////////////////////////////////////////////////////////////// // constructors	WITHOUT_CLASSIFICATION	0.9999996493752797	WITHOUT_CLASSIFICATION	3.5062472022456624E-7	DEFECT
//////////////////////////////////////////////////////////////// // public methods	WITHOUT_CLASSIFICATION	0.9999978598101081	WITHOUT_CLASSIFICATION	2.1401898918094536E-6	DEFECT
/* end class UUIDManager */	WITHOUT_CLASSIFICATION	0.9999257538585358	WITHOUT_CLASSIFICATION	7.424614146418156E-5	DEFECT
// Write out something for us to read back in	WITHOUT_CLASSIFICATION	0.9999998834059293	WITHOUT_CLASSIFICATION	1.1659407070388597E-7	DEFECT
// Now read it and check the results.	WITHOUT_CLASSIFICATION	0.9999993304186257	WITHOUT_CLASSIFICATION	6.695813742948754E-7	DEFECT
// Create an empty file and try to read it	WITHOUT_CLASSIFICATION	0.9999987306929626	WITHOUT_CLASSIFICATION	1.2693070372998264E-6	DEFECT
// Depends on implementation: 	WITHOUT_CLASSIFICATION	0.9994498724281685	WITHOUT_CLASSIFICATION	5.501275718314906E-4	DEFECT
// TODO: 	WITHOUT_CLASSIFICATION	0.8486690365694233	DEFECT	0.1513309634305768	WITHOUT_CLASSIFICATION
//    /** //     * Construct an exception with a message and a causing exception. //     * //     * @param message the message //     * @param c the cause of the exception //     */ //    public XmiReferenceException(String message, Throwable c) { //        super(message, c); //    }	WITHOUT_CLASSIFICATION	0.9999967135385851	WITHOUT_CLASSIFICATION	3.286461414937489E-6	DEFECT
// The netbeans SAXParser sets line number // and column number to -1.	WITHOUT_CLASSIFICATION	0.9999999731177054	WITHOUT_CLASSIFICATION	2.6882294737407677E-8	DEFECT
// The xerces SAXParser sets line number // and column number to 1.	WITHOUT_CLASSIFICATION	0.9999999576144835	WITHOUT_CLASSIFICATION	4.2385516611642654E-8	DEFECT
// Not true in general, but should be true for our test models	WITHOUT_CLASSIFICATION	0.9998725342995901	WITHOUT_CLASSIFICATION	1.2746570040986693E-4	DEFECT
// This throws  // org.argouml.model.XmiException: Unknown element in XMI file : Model // because the UML 1.3->1.4 converter can only handle XMI 1.0, not 1.1	WITHOUT_CLASSIFICATION	0.9999193016630217	WITHOUT_CLASSIFICATION	8.069833697823218E-5	DEFECT
// TODO:	WITHOUT_CLASSIFICATION	0.9881398392491844	WITHOUT_CLASSIFICATION	0.01186016075081572	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
// If the region is changed to another region then // we make sure that a delete event is not fired // as a result. //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999999996587773	WITHOUT_CLASSIFICATION	3.4122266611672647E-10	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
/* In this case, either the container was not set,         * or it was not contained in a statemachine.         */	WITHOUT_CLASSIFICATION	0.9986046271506542	WITHOUT_CLASSIFICATION	0.0013953728493457437	DEFECT
// The only way a region is set to null is if we're deleting // the vertex in which case we do nothing special so that // the removal of the state triggers a delete event.	WITHOUT_CLASSIFICATION	0.9999999998184844	WITHOUT_CLASSIFICATION	1.8151554683152932E-10	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
// TODO:	WITHOUT_CLASSIFICATION	0.9881398392491844	WITHOUT_CLASSIFICATION	0.01186016075081572	DEFECT
// In UML a message could have an Action. In UML2 it never does.	WITHOUT_CLASSIFICATION	0.999996521122088	WITHOUT_CLASSIFICATION	3.478877912113577E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
// No body found.	WITHOUT_CLASSIFICATION	0.9999982881653783	WITHOUT_CLASSIFICATION	1.7118346216448968E-6	DEFECT
// oops we already have the body	WITHOUT_CLASSIFICATION	0.9999989045768353	WITHOUT_CLASSIFICATION	1.0954231647091522E-6	DEFECT
//        return handle.stringValue();	WITHOUT_CLASSIFICATION	0.9999998368671362	WITHOUT_CLASSIFICATION	1.6313286374308873E-7	DEFECT
//        public Collection<Element> getExtendedElements(Object handle) {	WITHOUT_CLASSIFICATION	0.9999994919012706	WITHOUT_CLASSIFICATION	5.08098729414983E-7	DEFECT
// For a Transition use indirection through source StateVertex	WITHOUT_CLASSIFICATION	0.9999965203186023	WITHOUT_CLASSIFICATION	3.47968139755015E-6	DEFECT
// Gone from UML 2.x //        throw new NotImplementedException();	WITHOUT_CLASSIFICATION	0.9999984121070564	WITHOUT_CLASSIFICATION	1.5878929435894326E-6	DEFECT
// Get all the relationships, that this model element has. // and filter everything, that is not an import.	WITHOUT_CLASSIFICATION	0.9996637310790203	WITHOUT_CLASSIFICATION	3.362689209796162E-4	DEFECT
// Can't be done in the general case of federated repositories, // but at least get what we can find for the current resource set	WITHOUT_CLASSIFICATION	0.9999836019090875	WITHOUT_CLASSIFICATION	1.6398090912367096E-5	DEFECT
// MultiplicityElement is now an interface implemented // by element types that support multiplicities - tfm	WITHOUT_CLASSIFICATION	0.9999987804943713	WITHOUT_CLASSIFICATION	1.2195056287114954E-6	DEFECT
// should be Element not EObject really	WITHOUT_CLASSIFICATION	0.9999291633429236	WITHOUT_CLASSIFICATION	7.083665707641156E-5	DEFECT
/* Classifier powerType = */	WITHOUT_CLASSIFICATION	0.9999953950795392	WITHOUT_CLASSIFICATION	4.604920460844956E-6	DEFECT
// TODO: Signal -> Receptions association not navigable in this // direction	WITHOUT_CLASSIFICATION	0.9510417897606841	DEFECT	0.04895821023931593	WITHOUT_CLASSIFICATION
// in UML2, the tag definition is the attribute itself	WITHOUT_CLASSIFICATION	0.9999996218084131	WITHOUT_CLASSIFICATION	3.7819158701518716E-7	DEFECT
// usage differs from UML1	WITHOUT_CLASSIFICATION	0.9999989819701807	WITHOUT_CLASSIFICATION	1.0180298193399631E-6	DEFECT
// usage differs from UML1	WITHOUT_CLASSIFICATION	0.9999989819701807	WITHOUT_CLASSIFICATION	1.0180298193399631E-6	DEFECT
// Transitions can have multiple Triggers now	WITHOUT_CLASSIFICATION	0.9999871782892858	WITHOUT_CLASSIFICATION	1.2821710714192877E-5	DEFECT
// Gone in UML 2.x	WITHOUT_CLASSIFICATION	0.9999927463514224	WITHOUT_CLASSIFICATION	7.253648577544763E-6	DEFECT
// ActionState, CallState, and SubactivityState have been replaced // in UML 2.0 by explicitly modeled Actions	WITHOUT_CLASSIFICATION	0.9999997453566235	WITHOUT_CLASSIFICATION	2.546433764664519E-7	DEFECT
// TODO: Double check - tfm	WITHOUT_CLASSIFICATION	0.8431114636610804	WITHOUT_CLASSIFICATION	0.15688853633891958	DEFECT
// TODO: gone in UML 2	WITHOUT_CLASSIFICATION	0.7525278339128951	DEFECT	0.2474721660871048	WITHOUT_CLASSIFICATION
// TODO: Gone in UML 2	WITHOUT_CLASSIFICATION	0.7474759929029497	DEFECT	0.2525240070970502	WITHOUT_CLASSIFICATION
// TODO: Double check - tfm	WITHOUT_CLASSIFICATION	0.8431114636610804	WITHOUT_CLASSIFICATION	0.15688853633891958	DEFECT
// TODO: double check - tfm	WITHOUT_CLASSIFICATION	0.759096161877005	WITHOUT_CLASSIFICATION	0.24090383812299493	DEFECT
// below for UML 1.4 compatibility	WITHOUT_CLASSIFICATION	0.9999994239369059	WITHOUT_CLASSIFICATION	5.760630941129284E-7	DEFECT
// TODO: double check - tfm	WITHOUT_CLASSIFICATION	0.759096161877005	WITHOUT_CLASSIFICATION	0.24090383812299493	DEFECT
// TODO: Changed from UML 1.4	WITHOUT_CLASSIFICATION	0.7706912046386717	WITHOUT_CLASSIFICATION	0.22930879536132837	DEFECT
// TODO: gone in UML 2	WITHOUT_CLASSIFICATION	0.7525278339128951	DEFECT	0.2474721660871048	WITHOUT_CLASSIFICATION
// TODO: changed for UML 2.x	WITHOUT_CLASSIFICATION	0.9848032528631409	WITHOUT_CLASSIFICATION	0.015196747136859099	DEFECT
// TODO: gone from UML 2	WITHOUT_CLASSIFICATION	0.7750603063284218	WITHOUT_CLASSIFICATION	0.22493969367157812	DEFECT
// has <<subsystem>> stereotype	WITHOUT_CLASSIFICATION	0.9999979664022522	WITHOUT_CLASSIFICATION	2.0335977476775555E-6	DEFECT
// TODO: Not exact, but close	WITHOUT_CLASSIFICATION	0.5395320240343334	DEFECT	0.46046797596566663	WITHOUT_CLASSIFICATION
// && ((Action) handle).get	WITHOUT_CLASSIFICATION	0.9999943217433137	WITHOUT_CLASSIFICATION	5.678256686312552E-6	DEFECT
// Not in UML2	WITHOUT_CLASSIFICATION	0.9999920913887436	WITHOUT_CLASSIFICATION	7.908611256412829E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
// Even though this is not relevant for UML2 we have // code calling this that expects it for UML1.4 // and we must handle it gracefully.	WITHOUT_CLASSIFICATION	0.9914047337933451	WITHOUT_CLASSIFICATION	0.008595266206654848	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//        return ((RedefinableElement) handle).isRoot(); // TODO: One part of UML 2.1.1 spec says that this is as above, // but it appears to be gone - tfm	WITHOUT_CLASSIFICATION	0.9686294892008073	DEFECT	0.03137051079919272	WITHOUT_CLASSIFICATION
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//        lifeline.setRepresents(prop);	WITHOUT_CLASSIFICATION	0.9999998889209669	WITHOUT_CLASSIFICATION	1.1107903297744612E-7	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
// A composite state contains at least one region	WITHOUT_CLASSIFICATION	0.9999975569408774	WITHOUT_CLASSIFICATION	2.4430591224967904E-6	DEFECT
// an AssociationEnd is now a Property owned by an Association	WITHOUT_CLASSIFICATION	0.9999741816846104	WITHOUT_CLASSIFICATION	2.5818315389577182E-5	DEFECT
//        throw new NotImplementedException( //            "This is not a UML2 element"); //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999941775604883	WITHOUT_CLASSIFICATION	5.822439511772922E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
// TODO: Exception has been removed for UML 2.x // just return Signal for now - tfm	WITHOUT_CLASSIFICATION	0.9884337049805072	WITHOUT_CLASSIFICATION	0.011566295019492712	DEFECT
// Gone in UML 2.x - just Classifier now	WITHOUT_CLASSIFICATION	0.9999999587438313	WITHOUT_CLASSIFICATION	4.125616870195455E-8	DEFECT
// TODO: Not really the same thing, but close	WITHOUT_CLASSIFICATION	0.8955585786458362	DEFECT	0.10444142135416373	WITHOUT_CLASSIFICATION
// The name of the meta type is the class name (after the last .) // and before the "Impl" or end of class name.	WITHOUT_CLASSIFICATION	0.9999983488752996	WITHOUT_CLASSIFICATION	1.6511247004333365E-6	DEFECT
// TODO: Gone in UML 2.x // Return place holder for now	WITHOUT_CLASSIFICATION	0.5558443397456233	DEFECT	0.4441556602543767	WITHOUT_CLASSIFICATION
// TODO: no separate SyncState in UML 2.1 - tfm	WITHOUT_CLASSIFICATION	0.8102995606349522	WITHOUT_CLASSIFICATION	0.18970043936504777	DEFECT
/*ActionSequence.class*/	WITHOUT_CLASSIFICATION	0.9999339807508592	WITHOUT_CLASSIFICATION	6.60192491408163E-5	DEFECT
/*ClassifierInState.class*/	WITHOUT_CLASSIFICATION	0.9999880519335008	WITHOUT_CLASSIFICATION	1.1948066499207015E-5	DEFECT
/*Argument.class*/	WITHOUT_CLASSIFICATION	0.9999885625683522	WITHOUT_CLASSIFICATION	1.1437431647705058E-5	DEFECT
/*AttributeLink.class*/	WITHOUT_CLASSIFICATION	0.9999359655209292	WITHOUT_CLASSIFICATION	6.403447907079638E-5	DEFECT
/*UninterpretedAction.class*/	WITHOUT_CLASSIFICATION	0.9999956299433053	WITHOUT_CLASSIFICATION	4.370056694756664E-6	DEFECT
// Access should be fast	WITHOUT_CLASSIFICATION	0.9999877563971726	WITHOUT_CLASSIFICATION	1.2243602827352582E-5	DEFECT
// Iteration should be fast	WITHOUT_CLASSIFICATION	0.9999836305173685	WITHOUT_CLASSIFICATION	1.6369482631440335E-5	DEFECT
// LiteralSpecification  	WITHOUT_CLASSIFICATION	0.9999970568307033	WITHOUT_CLASSIFICATION	2.943169296843373E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999748478784519	WITHOUT_CLASSIFICATION	2.5152121548066763E-5	DEFECT
// i.e. eventType == Notification.REMOVE	WITHOUT_CLASSIFICATION	0.9999998802527781	WITHOUT_CLASSIFICATION	1.1974722186670704E-7	DEFECT
/*implements CommandStack*/	WITHOUT_CLASSIFICATION	0.9998977652804378	WITHOUT_CLASSIFICATION	1.0223471956217145E-4	DEFECT
//list.add("OpaqueExpression");	WITHOUT_CLASSIFICATION	0.999998507342283	WITHOUT_CLASSIFICATION	1.4926577169759332E-6	DEFECT
//LiteralSpecification //list.add("LiteralNull");//When other ok	WITHOUT_CLASSIFICATION	0.9999998550022364	WITHOUT_CLASSIFICATION	1.449977635322881E-7	DEFECT
//list.add("LiteralInteger");//When other ok	WITHOUT_CLASSIFICATION	0.9999995471123864	WITHOUT_CLASSIFICATION	4.5288761367275173E-7	DEFECT
//list.add("LiteralUnlimitedNatural");//When other ok	WITHOUT_CLASSIFICATION	0.9999999389271192	WITHOUT_CLASSIFICATION	6.107288075899557E-8	DEFECT
//list.add("InstanceValue");	WITHOUT_CLASSIFICATION	0.9999977363664216	WITHOUT_CLASSIFICATION	2.263633578393232E-6	DEFECT
// TODO else => Exception !	WITHOUT_CLASSIFICATION	0.99521548697075	WITHOUT_CLASSIFICATION	0.004784513029249992	DEFECT
// Can't be changed	WITHOUT_CLASSIFICATION	0.9999973735800846	WITHOUT_CLASSIFICATION	2.6264199154673723E-6	DEFECT
//rewrite it after change setExpression ?	WITHOUT_CLASSIFICATION	0.9999995042041835	WITHOUT_CLASSIFICATION	4.957958166020975E-7	DEFECT
// as write in UML specification, we have size(bodies)==size(langs) // we must have tabValues.length%2==0 	WITHOUT_CLASSIFICATION	0.9999965599754023	WITHOUT_CLASSIFICATION	3.4400245977647584E-6	DEFECT
// LiteralSpecification  	WITHOUT_CLASSIFICATION	0.9999970568307033	WITHOUT_CLASSIFICATION	2.943169296843373E-6	DEFECT
// Can't be set	WITHOUT_CLASSIFICATION	0.9999821682015945	WITHOUT_CLASSIFICATION	1.7831798405521657E-5	DEFECT
//rewrite it after change setExpression ?	WITHOUT_CLASSIFICATION	0.9999995042041835	WITHOUT_CLASSIFICATION	4.957958166020975E-7	DEFECT
// as write in UML specification, we have size(bodies)==size(langs) // we must have tabValues.length%2==0	WITHOUT_CLASSIFICATION	0.9999993020488814	WITHOUT_CLASSIFICATION	6.979511185749602E-7	DEFECT
// A Link is an Assocation in UML2.x	WITHOUT_CLASSIFICATION	0.9999496207132291	WITHOUT_CLASSIFICATION	5.037928677092227E-5	DEFECT
// Link does not exist in UML2, a link is represented just as an // association	WITHOUT_CLASSIFICATION	0.9999731721327217	WITHOUT_CLASSIFICATION	2.682786727818766E-5	DEFECT
// must not be used in UML2; we model a method as a // OpaqueBehavior object that already has a body, so there is no need // to have an intermediate expression object	WITHOUT_CLASSIFICATION	0.9999993417398679	WITHOUT_CLASSIFICATION	6.582601320534737E-7	DEFECT
// We need a method (operation implementation) // to store the method body.	WITHOUT_CLASSIFICATION	0.999997848356821	WITHOUT_CLASSIFICATION	2.1516431788654364E-6	DEFECT
// Maybe this operation already has a method, that fits our purpose? // In this case, try to reuse it, instead of creating a new // implementation.	WITHOUT_CLASSIFICATION	0.9999780840899033	WITHOUT_CLASSIFICATION	2.1915910096675037E-5	DEFECT
// Check, if we have to create a new implementation.	WITHOUT_CLASSIFICATION	0.9999982463477471	WITHOUT_CLASSIFICATION	1.7536522528363568E-6	DEFECT
// Create a new implementation.	WITHOUT_CLASSIFICATION	0.9999851065849966	WITHOUT_CLASSIFICATION	1.4893415003371176E-5	DEFECT
// And set the specification to the current operation.	WITHOUT_CLASSIFICATION	0.9999999989348969	WITHOUT_CLASSIFICATION	1.0651030786579915E-9	DEFECT
// Add it to the operation's methods.	WITHOUT_CLASSIFICATION	0.9999998997896122	WITHOUT_CLASSIFICATION	1.0021038774090489E-7	DEFECT
// Look, if there's already a java implementation	WITHOUT_CLASSIFICATION	0.9999916300976162	WITHOUT_CLASSIFICATION	8.369902383933809E-6	DEFECT
// Try to get the corresponding body and set it // to the current body // This _should_ work, if all the bodies // were stored with their corresponding languages.	WITHOUT_CLASSIFICATION	0.9999994909247935	WITHOUT_CLASSIFICATION	5.090752065538199E-7	DEFECT
// Job done.	WITHOUT_CLASSIFICATION	0.9999953230497662	WITHOUT_CLASSIFICATION	4.676950233807079E-6	DEFECT
// It seems, there was no implementation of // our current target language, so we just add one.	WITHOUT_CLASSIFICATION	0.9999996590492024	WITHOUT_CLASSIFICATION	3.4095079754886795E-7	DEFECT
// We cannot set the body of this model element type.	WITHOUT_CLASSIFICATION	0.9999984247596789	WITHOUT_CLASSIFICATION	1.575240321115766E-6	DEFECT
// Removed from UML 2.x	WITHOUT_CLASSIFICATION	0.9999960801579767	WITHOUT_CLASSIFICATION	3.9198420232247E-6	DEFECT
// also parse 1_* or 0_N etc.	WITHOUT_CLASSIFICATION	0.9999985672824624	WITHOUT_CLASSIFICATION	1.4327175375779522E-6	DEFECT
// WARNING - This has containment side effects! // Eclipse UML2 will move the Property from the Classifier to // the Association when the navigability is changed.	WITHOUT_CLASSIFICATION	0.9999645205526176	WITHOUT_CLASSIFICATION	3.5479447382428626E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999748478784519	WITHOUT_CLASSIFICATION	2.5152121548066763E-5	DEFECT
//$NON-NLS-1$//$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999928968642325	WITHOUT_CLASSIFICATION	7.103135767446778E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
// for other xmi files with further namespaces:	WITHOUT_CLASSIFICATION	0.9999997514598067	WITHOUT_CLASSIFICATION	2.485401933564923E-7	DEFECT
// eclipse namespaces:	WITHOUT_CLASSIFICATION	0.9999962009899522	WITHOUT_CLASSIFICATION	3.799010047719851E-6	DEFECT
// For the .uml files in the eclipse jar files, we need this:	WITHOUT_CLASSIFICATION	0.9999978992428454	WITHOUT_CLASSIFICATION	2.1007571545513076E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
// Not needed currently for UML 2	WITHOUT_CLASSIFICATION	0.9999906089344648	WITHOUT_CLASSIFICATION	9.39106553521966E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999973196437272	WITHOUT_CLASSIFICATION	2.6803562728170175E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
// final Object scope,	WITHOUT_CLASSIFICATION	0.9999994125793705	WITHOUT_CLASSIFICATION	5.874206294556976E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
// The attribute 'targetScope' of an AssociationEnd in UML1.x is no // longer supported in UML2.x	WITHOUT_CLASSIFICATION	0.9999998555227335	WITHOUT_CLASSIFICATION	1.4447726640926524E-7	DEFECT
// Nothing to do	WITHOUT_CLASSIFICATION	0.9999985382057341	WITHOUT_CLASSIFICATION	1.4617942658756535E-6	DEFECT
/*     * @see org.argouml.model.UmlHelper#getSource(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999374940712	WITHOUT_CLASSIFICATION	6.250592883099662E-8	DEFECT
/*     * @see org.argouml.model.UmlHelper#getDestination(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999876607851	WITHOUT_CLASSIFICATION	1.2339214910104332E-8	DEFECT
/*     * @see org.argouml.model.UmlHelper#move(java.lang.Object, org.argouml.model.UmlHelper.Direction)     */	WITHOUT_CLASSIFICATION	0.9999996859680891	WITHOUT_CLASSIFICATION	3.140319109603096E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
// in UML2, we model a method as a Behavior (initially OpaqueBehavior)	WITHOUT_CLASSIFICATION	0.9999945867786334	WITHOUT_CLASSIFICATION	5.413221366607258E-6	DEFECT
// The interface realization will be created in the client namespace // (client is a namespace)	WITHOUT_CLASSIFICATION	0.9999993104321238	WITHOUT_CLASSIFICATION	6.895678761553236E-7	DEFECT
// Extent ignored for eUML2 implementation (required for NetBeans MDR)	WITHOUT_CLASSIFICATION	0.999998084858237	WITHOUT_CLASSIFICATION	1.91514176297556E-6	DEFECT
/*     * @see org.argouml.model.UmlHelper#move(java.lang.Object, org.argouml.model.UmlHelper.Direction)     */	WITHOUT_CLASSIFICATION	0.9999996859680891	WITHOUT_CLASSIFICATION	3.140319109603096E-7	DEFECT
/*     * @see org.argouml.model.ExtensionMechanismsHelper#getCommonTaggedValueTypes()     */	WITHOUT_CLASSIFICATION	0.9999999553662265	WITHOUT_CLASSIFICATION	4.463377355230772E-8	DEFECT
//        cmd.setObjects(run.getParams().get(0));	WITHOUT_CLASSIFICATION	0.9999997572496231	WITHOUT_CLASSIFICATION	2.42750376917229E-7	DEFECT
// maybe UML2 has these as constants somewhere	WITHOUT_CLASSIFICATION	0.9999988742811426	WITHOUT_CLASSIFICATION	1.1257188573762944E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
// also apply subprofiles:	WITHOUT_CLASSIFICATION	0.9999990924576021	WITHOUT_CLASSIFICATION	9.075423979177558E-7	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
/*     * Sets the value of an element#s property (tagged value). This method     * makes sure that a Collection of values is set if and only if the     * property is multivalued (upper multiplicity value greater 1), so passing     * a collection is safe.     *      * @see org.argouml.model.ExtensionMechanismsHelper#setValueOfTag(java.lang.Object, java.lang.Object, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999981758255	WITHOUT_CLASSIFICATION	1.8241744733854333E-9	DEFECT
//commonTaggedValueTypes.add(org.eclipse.uml2.uml.resource.UMLResource.)	WITHOUT_CLASSIFICATION	0.9999997146093884	WITHOUT_CLASSIFICATION	2.8539061150849207E-7	DEFECT
// remove base class by destroying the extension	WITHOUT_CLASSIFICATION	0.9999931381079398	WITHOUT_CLASSIFICATION	6.861892060201529E-6	DEFECT
// consider the property multiplicity	WITHOUT_CLASSIFICATION	0.9999892370213835	WITHOUT_CLASSIFICATION	1.076297861637106E-5	DEFECT
// or getDefaultValueFor(prop)?	WITHOUT_CLASSIFICATION	0.999991083782145	WITHOUT_CLASSIFICATION	8.916217855017525E-6	DEFECT
// too bad, we choose to take the first value	WITHOUT_CLASSIFICATION	0.9999994618771701	WITHOUT_CLASSIFICATION	5.381228298049065E-7	DEFECT
// ready to set the value finally	WITHOUT_CLASSIFICATION	0.9999999706789526	WITHOUT_CLASSIFICATION	2.9321047403437392E-8	DEFECT
// in case of a tagged value, the type shouldn't be set here	WITHOUT_CLASSIFICATION	0.9999204509439601	WITHOUT_CLASSIFICATION	7.954905603989655E-5	DEFECT
// not implementable in UML2, because property is missing	WITHOUT_CLASSIFICATION	0.9999549431130147	WITHOUT_CLASSIFICATION	4.505688698543026E-5	DEFECT
// also unapply subprofiles:	WITHOUT_CLASSIFICATION	0.9999989071256744	WITHOUT_CLASSIFICATION	1.0928743256443268E-6	DEFECT
// also define subprofiles:	WITHOUT_CLASSIFICATION	0.999999840137137	WITHOUT_CLASSIFICATION	1.5986286301372584E-7	DEFECT
//        {AssociationRole.class,  ClassifierRole.class, },	WITHOUT_CLASSIFICATION	0.9999994655740485	WITHOUT_CLASSIFICATION	5.344259515277749E-7	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//        {Link.class, Instance.class, }, //        {Transition.class,       StateVertex.class, },	WITHOUT_CLASSIFICATION	0.9999996004213932	WITHOUT_CLASSIFICATION	3.995786067721494E-7	DEFECT
//        {Message.class, ClassifierRole.class },	WITHOUT_CLASSIFICATION	0.9999997649936353	WITHOUT_CLASSIFICATION	2.3500636477134447E-7	DEFECT
// Note for UML2 the aggregation ends are swapped	WITHOUT_CLASSIFICATION	0.9999997686029333	WITHOUT_CLASSIFICATION	2.3139706662946038E-7	DEFECT
// Extend, but only between two use cases. Remember we draw from the // extension port to the base port.	WITHOUT_CLASSIFICATION	0.9999998142696827	WITHOUT_CLASSIFICATION	1.857303173926312E-7	DEFECT
// in UML2 subsystem is a Component with <<subsystem>> stereotype // so this must occur after the metaTypes.getComponent() case	WITHOUT_CLASSIFICATION	0.9999985385082204	WITHOUT_CLASSIFICATION	1.4614917796369462E-6	DEFECT
// find the passed in container in validContainmentMap	WITHOUT_CLASSIFICATION	0.9999992996910207	WITHOUT_CLASSIFICATION	7.003089791597624E-7	DEFECT
// determine if metaType is a valid element for container	WITHOUT_CLASSIFICATION	0.9999990440074848	WITHOUT_CLASSIFICATION	9.559925151748595E-7	DEFECT
/*             * UML 1.4.2 Spec section 4.5.3.20 [5]             * A GeneralizableElement may only be a child of             * GeneralizableElement of the same kind.             */	WITHOUT_CLASSIFICATION	0.9999759356256588	WITHOUT_CLASSIFICATION	2.4064374341317637E-5	DEFECT
// specifies valid elements for a Region to contain	WITHOUT_CLASSIFICATION	0.9999998856580242	WITHOUT_CLASSIFICATION	1.1434197577984428E-7	DEFECT
// specifies valid elements for a Region to contain	WITHOUT_CLASSIFICATION	0.9999998856580242	WITHOUT_CLASSIFICATION	1.1434197577984428E-7	DEFECT
// specifies valid elements for a Region to contain	WITHOUT_CLASSIFICATION	0.9999998856580242	WITHOUT_CLASSIFICATION	1.1434197577984428E-7	DEFECT
// specifies valid elements for a Package to contain	WITHOUT_CLASSIFICATION	0.9999999646612514	WITHOUT_CLASSIFICATION	3.5338748674476006E-8	DEFECT
// specifies valid elements for a Package to contain	WITHOUT_CLASSIFICATION	0.9999999646612514	WITHOUT_CLASSIFICATION	3.5338748674476006E-8	DEFECT
// specifies valid elements for a Package to contain	WITHOUT_CLASSIFICATION	0.9999999646612514	WITHOUT_CLASSIFICATION	3.5338748674476006E-8	DEFECT
// valid elements for a Profile to contain	WITHOUT_CLASSIFICATION	0.9999994639744391	WITHOUT_CLASSIFICATION	5.360255609337041E-7	DEFECT
// specifies valid elements for a class to contain	WITHOUT_CLASSIFICATION	0.9999998683851955	WITHOUT_CLASSIFICATION	1.3161480451315321E-7	DEFECT
// specifies valid elements for a classifier to contain	WITHOUT_CLASSIFICATION	0.9999997283772257	WITHOUT_CLASSIFICATION	2.71622774249182E-7	DEFECT
// specifies valid elements for an Interface to contain	WITHOUT_CLASSIFICATION	0.999999818640299	WITHOUT_CLASSIFICATION	1.8135970096148812E-7	DEFECT
// specifies valid elements for a Signal to contain	WITHOUT_CLASSIFICATION	0.9999999828881903	WITHOUT_CLASSIFICATION	1.711180975241962E-8	DEFECT
// specifies valid elements for an Actor to contain	WITHOUT_CLASSIFICATION	0.9999999440489816	WITHOUT_CLASSIFICATION	5.595101828293279E-8	DEFECT
// specifies valid elements for a Use Case to contain	WITHOUT_CLASSIFICATION	0.9999998626454533	WITHOUT_CLASSIFICATION	1.3735454672426227E-7	DEFECT
// specifies valid elements for a Use Case to contain	WITHOUT_CLASSIFICATION	0.9999998626454533	WITHOUT_CLASSIFICATION	1.3735454672426227E-7	DEFECT
// specifies valid elements for a Component to contain	WITHOUT_CLASSIFICATION	0.9999999813400017	WITHOUT_CLASSIFICATION	1.8659998278761927E-8	DEFECT
// specifies valid elements for a Node to contain	WITHOUT_CLASSIFICATION	0.999999921638842	WITHOUT_CLASSIFICATION	7.836115800253336E-8	DEFECT
//$NON-NLS-1$//$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999928968642325	WITHOUT_CLASSIFICATION	7.103135767446778E-6	DEFECT
// A list of valid connections between elements, the // connection type first and then the elements to be connected	WITHOUT_CLASSIFICATION	0.9999999160442539	WITHOUT_CLASSIFICATION	8.395574608314557E-8	DEFECT
// If there isn't a 3rd column then this represents a connection // of elements of the same type.	WITHOUT_CLASSIFICATION	0.9999888097783365	WITHOUT_CLASSIFICATION	1.1190221663547609E-5	DEFECT
// If there is a 3rd column then this represents a connection // of between 2 different types of element.	WITHOUT_CLASSIFICATION	0.9999993091129034	WITHOUT_CLASSIFICATION	6.908870966423205E-7	DEFECT
// If the array hasn't been flagged to indicate otherwise // swap elements the elemnts and add again.	WITHOUT_CLASSIFICATION	0.9999982026577116	WITHOUT_CLASSIFICATION	1.7973422884689918E-6	DEFECT
// specifies valid elements for a DataType to contain	WITHOUT_CLASSIFICATION	0.9999997136242554	WITHOUT_CLASSIFICATION	2.8637574450113076E-7	DEFECT
// specifies valid elements for an Operation to contain	WITHOUT_CLASSIFICATION	0.9999998976821917	WITHOUT_CLASSIFICATION	1.0231780831682043E-7	DEFECT
// valid elements for a Stereotype to contain	WITHOUT_CLASSIFICATION	0.9999978985493104	WITHOUT_CLASSIFICATION	2.1014506896031386E-6	DEFECT
// valid elements for an Action to contain	WITHOUT_CLASSIFICATION	0.9999992040155008	WITHOUT_CLASSIFICATION	7.959844992488262E-7	DEFECT
// trying to get a built-in standard profile from eclipse UML2	WITHOUT_CLASSIFICATION	0.999999935858587	WITHOUT_CLASSIFICATION	6.414141301439279E-8	DEFECT
// Removed from UML 2	WITHOUT_CLASSIFICATION	0.9999943651177579	WITHOUT_CLASSIFICATION	5.634882242152585E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
// Roll back transaction to remove any partial results read	WITHOUT_CLASSIFICATION	0.9998260371796206	WITHOUT_CLASSIFICATION	1.7396282037941308E-4	DEFECT
// We shouldn't get here, but just in case... // We want a wide exception catcher to make sure our // transaction always gets ended	WITHOUT_CLASSIFICATION	0.9996973696889974	WITHOUT_CLASSIFICATION	3.026303110025644E-4	DEFECT
// If we can find a nested SAX exception, it will have information // on the line number, etc.	WITHOUT_CLASSIFICATION	0.999995512193741	WITHOUT_CLASSIFICATION	4.487806259002929E-6	DEFECT
// Ignore if the extent never got created or has been deleted	WITHOUT_CLASSIFICATION	0.9999999995555702	WITHOUT_CLASSIFICATION	4.444299031766492E-10	DEFECT
// InputSource xformedInput = chainedTransform(transformFiles, pIs);	WITHOUT_CLASSIFICATION	0.9999999981860278	WITHOUT_CLASSIFICATION	1.8139721124004355E-9	DEFECT
// InputSource xformedInput = chainedTransform(transformFiles, pIs);	WITHOUT_CLASSIFICATION	0.9999999981860278	WITHOUT_CLASSIFICATION	1.8139721124004355E-9	DEFECT
/*     * @see org.argouml.model.XmiReader#getXMIUUIDToObjectMap()     */	WITHOUT_CLASSIFICATION	0.9999990902488007	WITHOUT_CLASSIFICATION	9.097511992711347E-7	DEFECT
// Set up reader to be first filter in chain	WITHOUT_CLASSIFICATION	0.9999998644527724	WITHOUT_CLASSIFICATION	1.3554722750846225E-7	DEFECT
// Set up source for style sheet	WITHOUT_CLASSIFICATION	0.9999991300956247	WITHOUT_CLASSIFICATION	8.699043752805886E-7	DEFECT
// Create & set up temporary output file	WITHOUT_CLASSIFICATION	0.9999999639333571	WITHOUT_CLASSIFICATION	3.6066642847897245E-8	DEFECT
// In UML2.x there is no metaclass named Method, but we use the // 'method' association of BehavioralFeature	WITHOUT_CLASSIFICATION	0.9999865047851506	WITHOUT_CLASSIFICATION	1.3495214849473316E-5	DEFECT
//        ret.setIsLeaf(false); //        ret.setIsRoot(false);	WITHOUT_CLASSIFICATION	0.9999979039338903	WITHOUT_CLASSIFICATION	2.0960661096337775E-6	DEFECT
// Create filter for each style sheet and chain to previous // filter/reader	WITHOUT_CLASSIFICATION	0.9999999842350249	WITHOUT_CLASSIFICATION	1.576497518014422E-8	DEFECT
// Create transformer and do transformation	WITHOUT_CLASSIFICATION	0.9999993485495386	WITHOUT_CLASSIFICATION	6.51450461319282E-7	DEFECT
// Set up for next iteration	WITHOUT_CLASSIFICATION	0.9999997510716795	WITHOUT_CLASSIFICATION	2.489283205183663E-7	DEFECT
// Create & set up temporary output file	WITHOUT_CLASSIFICATION	0.9999999639333571	WITHOUT_CLASSIFICATION	3.6066642847897245E-8	DEFECT
// Silently ignore anything specified by caller attempt to continue	WITHOUT_CLASSIFICATION	0.9999982336481537	WITHOUT_CLASSIFICATION	1.7663518463058036E-6	DEFECT
// we presume the stream is encoded using the default char encoding	WITHOUT_CLASSIFICATION	0.9999999886193485	WITHOUT_CLASSIFICATION	1.1380651480409108E-8	DEFECT
// Delete the old extent first	WITHOUT_CLASSIFICATION	0.9999997703332144	WITHOUT_CLASSIFICATION	2.2966678548212205E-7	DEFECT
//                LOG.log(Level.WARNING, "Unable to find extent " + extent);	WITHOUT_CLASSIFICATION	0.9999999978560372	WITHOUT_CLASSIFICATION	2.1439627030519525E-9	DEFECT
/*         * Set the storage id for our repository so that MofIds will be unique         * (they are composed as "storageId":"serialNumber"). NOTE: The storage         * manager only looks for a few property names such as the         * StorageFactoryClassName. Everything else needs to be prefixed with         * "MDRStorageProperty." which gets deleted from the property name         * before it and its associated value are copied to an *internal*         * property table separate from the system property table.         */	WITHOUT_CLASSIFICATION	0.999999842680496	WITHOUT_CLASSIFICATION	1.573195040105679E-7	DEFECT
// Connect to the repository	WITHOUT_CLASSIFICATION	0.9999998227899443	WITHOUT_CLASSIFICATION	1.7721005563126157E-7	DEFECT
// Create an extent and read in our metamodel (M2 model)	WITHOUT_CLASSIFICATION	0.9999993719383024	WITHOUT_CLASSIFICATION	6.280616976115818E-7	DEFECT
// Create and start event pump first so it's available for all others	WITHOUT_CLASSIFICATION	0.9999999999377529	WITHOUT_CLASSIFICATION	6.224700899149183E-11	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getDiagramInterchangeModel()     */	WITHOUT_CLASSIFICATION	0.9999999668454326	WITHOUT_CLASSIFICATION	3.31545674317785E-8	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getFacade()     */	WITHOUT_CLASSIFICATION	0.9999993268406561	WITHOUT_CLASSIFICATION	6.731593440143228E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getModelEventPump()     */	WITHOUT_CLASSIFICATION	0.9999998521873936	WITHOUT_CLASSIFICATION	1.4781260632385807E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getActivityGraphsFactory()     */	WITHOUT_CLASSIFICATION	0.9999999107780045	WITHOUT_CLASSIFICATION	8.92219954807278E-8	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getActivityGraphsHelper()     */	WITHOUT_CLASSIFICATION	0.9999997454486146	WITHOUT_CLASSIFICATION	2.545513854189466E-7	DEFECT
// handles all children of relationship including extend and // include which are not members of core	WITHOUT_CLASSIFICATION	0.9999992849313898	WITHOUT_CLASSIFICATION	7.150686102754515E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
// Disable event delivery during model load	WITHOUT_CLASSIFICATION	0.9999999640753654	WITHOUT_CLASSIFICATION	3.592463467618378E-8	DEFECT
// If we've got a streaming input, copy it to make sure we'll // be able to rewind it if necessary	WITHOUT_CLASSIFICATION	0.9999999637482283	WITHOUT_CLASSIFICATION	3.6251771660305853E-8	DEFECT
// Use a transaction to avoid the performance penalty (3x) of // MDR's autocommit mode	WITHOUT_CLASSIFICATION	0.9999969984777737	WITHOUT_CLASSIFICATION	3.00152222627532E-6	DEFECT
// If a UML 1.3 file, attempt to upgrade it to UML 1.4	WITHOUT_CLASSIFICATION	0.9999961539251444	WITHOUT_CLASSIFICATION	3.846074855569584E-6	DEFECT
// Roll back transaction from first attempt & start new one	WITHOUT_CLASSIFICATION	0.9999963860207026	WITHOUT_CLASSIFICATION	3.613979297415041E-6	DEFECT
// Clear the associated ID maps & reset starting collection	WITHOUT_CLASSIFICATION	0.9999917977890579	WITHOUT_CLASSIFICATION	8.202210942158276E-6	DEFECT
// Make sure we always have a default extent. // The old extent will get deleted as part of creating the // new extent.	WITHOUT_CLASSIFICATION	0.9999999974362106	WITHOUT_CLASSIFICATION	2.56378925984159E-9	DEFECT
// DataTypes is next so it's available for Kinds, ModelManagement, // & Extensions	WITHOUT_CLASSIFICATION	0.9999996915893912	WITHOUT_CLASSIFICATION	3.0841060887689756E-7	DEFECT
// Initialize remaining factories and helpers // (but defer heavyweight ones until needed)	WITHOUT_CLASSIFICATION	0.9999999493870788	WITHOUT_CLASSIFICATION	5.061292127812937E-8	DEFECT
// Create a default extent for the user UML model. This will get // replaced if a new model is read in from an XMI file.	WITHOUT_CLASSIFICATION	0.999999988102678	WITHOUT_CLASSIFICATION	1.1897322060147342E-8	DEFECT
// NOTE: If we switch to a persistent repository like the b-tree // repository we'll want to keep the old extent(s) around	WITHOUT_CLASSIFICATION	0.999999856293206	WITHOUT_CLASSIFICATION	1.4370679409480308E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getCollaborationsFactory()     */	WITHOUT_CLASSIFICATION	0.9999996410983164	WITHOUT_CLASSIFICATION	3.589016835835141E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getCommonBehaviorHelper()     */	WITHOUT_CLASSIFICATION	0.9999997233099284	WITHOUT_CLASSIFICATION	2.7669007154237517E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getCopyHelper()     */	WITHOUT_CLASSIFICATION	0.9999995731267224	WITHOUT_CLASSIFICATION	4.268732776225602E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getCoreFactory()     */	WITHOUT_CLASSIFICATION	0.9999998250135664	WITHOUT_CLASSIFICATION	1.7498643348679323E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getCoreHelper()     */	WITHOUT_CLASSIFICATION	0.999999694287496	WITHOUT_CLASSIFICATION	3.0571250400162E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getDataTypesFactory()     */	WITHOUT_CLASSIFICATION	0.9999995734958762	WITHOUT_CLASSIFICATION	4.265041238707684E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getDataTypesHelper()     */	WITHOUT_CLASSIFICATION	0.9999988709724716	WITHOUT_CLASSIFICATION	1.1290275284358637E-6	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getExtensionMechanismsFactory()     */	WITHOUT_CLASSIFICATION	0.9999999400055256	WITHOUT_CLASSIFICATION	5.999447439806868E-8	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getModelManagementFactory()     */	WITHOUT_CLASSIFICATION	0.9999998862351649	WITHOUT_CLASSIFICATION	1.137648350667222E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getModelManagementHelper()     */	WITHOUT_CLASSIFICATION	0.9999998332790028	WITHOUT_CLASSIFICATION	1.6672099722385738E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getStateMachinesFactory()     */	WITHOUT_CLASSIFICATION	0.9999999035834428	WITHOUT_CLASSIFICATION	9.641655713453488E-8	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getStateMachinesHelper()     */	WITHOUT_CLASSIFICATION	0.9999998498963031	WITHOUT_CLASSIFICATION	1.501036970090456E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getUmlFactory()     */	WITHOUT_CLASSIFICATION	0.9999997342106018	WITHOUT_CLASSIFICATION	2.657893981633129E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getUmlHelper()     */	WITHOUT_CLASSIFICATION	0.9999995628175816	WITHOUT_CLASSIFICATION	4.371824184146795E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getUseCasesFactory()     */	WITHOUT_CLASSIFICATION	0.9999996453281369	WITHOUT_CLASSIFICATION	3.546718631531267E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getUseCasesHelper()     */	WITHOUT_CLASSIFICATION	0.9999994248166078	WITHOUT_CLASSIFICATION	5.751833922369084E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getChangeableKind()     */	WITHOUT_CLASSIFICATION	0.9999998794576984	WITHOUT_CLASSIFICATION	1.2054230149262147E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getAggregationKind()     */	WITHOUT_CLASSIFICATION	0.9999998907511481	WITHOUT_CLASSIFICATION	1.0924885182863547E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getPseudostateKind()     */	WITHOUT_CLASSIFICATION	0.9999998977397268	WITHOUT_CLASSIFICATION	1.0226027334357831E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getScopeKind()     */	WITHOUT_CLASSIFICATION	0.9999999162179295	WITHOUT_CLASSIFICATION	8.378207053033193E-8	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getConcurrencyKind()     */	WITHOUT_CLASSIFICATION	0.9999996030588294	WITHOUT_CLASSIFICATION	3.969411706062507E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getDirectionKind()     */	WITHOUT_CLASSIFICATION	0.9999996681393298	WITHOUT_CLASSIFICATION	3.3186067011574404E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getOrderingKind()     */	WITHOUT_CLASSIFICATION	0.9999995845634432	WITHOUT_CLASSIFICATION	4.154365567623796E-7	DEFECT
/*     * @see org.argouml.model.CommonBehaviorHelper#setNodeInstance(java.lang.Object,     *      java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999486490506	WITHOUT_CLASSIFICATION	5.135094937296031E-8	DEFECT
// Elements created after file load won't have index entries	WITHOUT_CLASSIFICATION	0.9999870129539934	WITHOUT_CLASSIFICATION	1.2987046006507544E-5	DEFECT
// Normally the extent should exist already, but in the case of // making an empty project, we may not have an extent yet, so // create a default extent	WITHOUT_CLASSIFICATION	0.9999856143777495	WITHOUT_CLASSIFICATION	1.4385622250485237E-5	DEFECT
/*     * Private constructor for common work needed by both public     * constructors.     */	WITHOUT_CLASSIFICATION	0.999998171751824	WITHOUT_CLASSIFICATION	1.8282481759049627E-6	DEFECT
// end our transaction	WITHOUT_CLASSIFICATION	0.9999975550301062	WITHOUT_CLASSIFICATION	2.444969893710571E-6	DEFECT
/*     * @see org.argouml.model.ExtensionMechanismsHelper#getAllPossibleStereotypes(java.util.Collection, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999994267510626	WITHOUT_CLASSIFICATION	5.732489374395742E-7	DEFECT
/*     * @see org.argouml.model.ExtensionMechanismsHelper#getCommonTaggedValueTypes()     */	WITHOUT_CLASSIFICATION	0.9999999553662265	WITHOUT_CLASSIFICATION	4.463377355230772E-8	DEFECT
// there is nothing to do in UML1.4	WITHOUT_CLASSIFICATION	0.9999345841086664	WITHOUT_CLASSIFICATION	6.541589133356133E-5	DEFECT
// forbid instantiation	WITHOUT_CLASSIFICATION	0.9999994674181688	WITHOUT_CLASSIFICATION	5.32581831143853E-7	DEFECT
// MDR classes may have a UML or Uml prefix which should be removed.	WITHOUT_CLASSIFICATION	0.9998505558636815	WITHOUT_CLASSIFICATION	1.4944413631841797E-4	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999928616651008	WITHOUT_CLASSIFICATION	7.138334899211065E-6	DEFECT
/*     * @see org.argouml.model.MetaTypes#getAbstraction()     */	WITHOUT_CLASSIFICATION	0.999999857537381	WITHOUT_CLASSIFICATION	1.4246261895131325E-7	DEFECT
// Delete Stimulii which have this as their dispatchAction	WITHOUT_CLASSIFICATION	0.9999992965369249	WITHOUT_CLASSIFICATION	7.03463075021251E-7	DEFECT
// Delete Messages which have this as their action	WITHOUT_CLASSIFICATION	0.9999979486803491	WITHOUT_CLASSIFICATION	2.0513196508568887E-6	DEFECT
// Delete LinkEnds	WITHOUT_CLASSIFICATION	0.999999356247623	WITHOUT_CLASSIFICATION	6.437523770001924E-7	DEFECT
// Delete AttributeLinks where this is the value	WITHOUT_CLASSIFICATION	0.9999765212766027	WITHOUT_CLASSIFICATION	2.3478723397210116E-5	DEFECT
// Delete Stimuli which have this as a Sender or Receiver	WITHOUT_CLASSIFICATION	0.9999994384531934	WITHOUT_CLASSIFICATION	5.615468066644539E-7	DEFECT
// binary link	WITHOUT_CLASSIFICATION	0.9999889081678092	WITHOUT_CLASSIFICATION	1.1091832190862773E-5	DEFECT
// Delete all SendActions which have this as signal	WITHOUT_CLASSIFICATION	0.9999981381377628	WITHOUT_CLASSIFICATION	1.8618622372119192E-6	DEFECT
// Delete all SignalEvents which have this as the signal	WITHOUT_CLASSIFICATION	0.9999995340377489	WITHOUT_CLASSIFICATION	4.6596225107771097E-7	DEFECT
/*     * @see org.argouml.model.UmlHelper#deleteCollection(java.util.Collection)     */	WITHOUT_CLASSIFICATION	0.9999999297955497	WITHOUT_CLASSIFICATION	7.020445026060224E-8	DEFECT
/*     * @see org.argouml.model.UmlHelper#getSource(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999374940712	WITHOUT_CLASSIFICATION	6.250592883099662E-8	DEFECT
/*     * @see org.argouml.model.UmlHelper#getDestination(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999876607851	WITHOUT_CLASSIFICATION	1.2339214910104332E-8	DEFECT
/*     * @see org.argouml.model.UmlHelper#move(java.lang.Object, org.argouml.model.UmlHelper.Direction)     */	WITHOUT_CLASSIFICATION	0.9999996859680891	WITHOUT_CLASSIFICATION	3.140319109603096E-7	DEFECT
// Text was stored in name in UML 1.3	WITHOUT_CLASSIFICATION	0.9999973164214627	WITHOUT_CLASSIFICATION	2.6835785372435995E-6	DEFECT
// The name of the meta type is the class name (after the last .) // and before the next $ or end of class name.	WITHOUT_CLASSIFICATION	0.9999981480962072	WITHOUT_CLASSIFICATION	1.8519037927988586E-6	DEFECT
// Delete CollaborationInstanceSets where // this is the last participatingInstance	WITHOUT_CLASSIFICATION	0.9999882502452928	WITHOUT_CLASSIFICATION	1.1749754707138344E-5	DEFECT
// Delete InteractionInstanceSets where // this is the last participatingStimulus	WITHOUT_CLASSIFICATION	0.999998236438078	WITHOUT_CLASSIFICATION	1.7635619220052743E-6	DEFECT
// handles all children of relationship including extend and // include which are not members of core	WITHOUT_CLASSIFICATION	0.9999992849313898	WITHOUT_CLASSIFICATION	7.150686102754515E-7	DEFECT
// this doesn't support I18N or multiple states,  // but it's just a default	WITHOUT_CLASSIFICATION	0.9999842807973174	WITHOUT_CLASSIFICATION	1.5719202682647802E-5	DEFECT
// Partitions are composite elements and will get deleted implicitly // Partition contents don't need to be deleted or checked	WITHOUT_CLASSIFICATION	0.99999809896009	WITHOUT_CLASSIFICATION	1.9010399100243008E-6	DEFECT
/*     * @see org.netbeans.api.xmi.XMIReferenceProvider#getReference(javax.jmi.reflect.RefObject)     */	WITHOUT_CLASSIFICATION	0.9999931123015265	WITHOUT_CLASSIFICATION	6.887698473432121E-6	DEFECT
// Look for an existing reference matching our MofID	WITHOUT_CLASSIFICATION	0.9999989315700687	WITHOUT_CLASSIFICATION	1.0684299313288799E-6	DEFECT
// probably redundant - just in case	WITHOUT_CLASSIFICATION	0.9999998353424087	WITHOUT_CLASSIFICATION	1.6465759133044803E-7	DEFECT
// delete Messages which have this as sender or receiver	WITHOUT_CLASSIFICATION	0.999998942015338	WITHOUT_CLASSIFICATION	1.0579846620010411E-6	DEFECT
// Helper interfaces and methods.	WITHOUT_CLASSIFICATION	0.9999993425306282	WITHOUT_CLASSIFICATION	6.574693718917755E-7	DEFECT
// CHECKSTYLE:OFF - ignore too many parameters since API is fixed by MDR	WITHOUT_CLASSIFICATION	0.9999840186786703	WITHOUT_CLASSIFICATION	1.5981321329740836E-5	DEFECT
// CHECKSTYLE:ON	WITHOUT_CLASSIFICATION	0.9999966406060036	WITHOUT_CLASSIFICATION	3.3593939964192307E-6	DEFECT
// Shorthand notation for convenience	WITHOUT_CLASSIFICATION	0.9999992288389382	WITHOUT_CLASSIFICATION	7.711610618087038E-7	DEFECT
// Quick exit if it's a transaction event // (we get a lot of them and they are all ignored)	WITHOUT_CLASSIFICATION	0.9999999996445916	WITHOUT_CLASSIFICATION	3.554083775146683E-10	DEFECT
// The 4-arg version of this method depends on this ordering. // Don't change it!	WITHOUT_CLASSIFICATION	0.9999958779045242	WITHOUT_CLASSIFICATION	4.122095475860699E-6	DEFECT
// InteractionInstanceSets will get deleted automatically // because they are associated by composition	WITHOUT_CLASSIFICATION	0.9999999326583349	WITHOUT_CLASSIFICATION	6.734166516904812E-8	DEFECT
// If this is the only message contained in the Interaction // we delete the Interaction	WITHOUT_CLASSIFICATION	0.9999990589310954	WITHOUT_CLASSIFICATION	9.41068904669332E-7	DEFECT
// Object from a different file, register with superclass so it // can resolve all references	WITHOUT_CLASSIFICATION	0.9999996036122626	WITHOUT_CLASSIFICATION	3.963877373244428E-7	DEFECT
/*     * @see org.netbeans.lib.jmi.xmi.XmiContext#getReference(java.lang.String, java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999994264153081	WITHOUT_CLASSIFICATION	5.735846918600568E-7	DEFECT
///////////////////////////////////////////////////// ////////// Begin AndroMDA Code ////////////////////// /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999339786312699	WITHOUT_CLASSIFICATION	6.602136873018818E-5	DEFECT
// if the model URL has a suffix of '.zip' or '.jar', get // the suffix without it and store it in the urlMap	WITHOUT_CLASSIFICATION	0.9999999678721357	WITHOUT_CLASSIFICATION	3.212786429364341E-8	DEFECT
// Several tries to construct a URL that really exists.	WITHOUT_CLASSIFICATION	0.9999877466689807	WITHOUT_CLASSIFICATION	1.225333101924462E-5	DEFECT
// If systemId is publicId previously mapped from a systemId, // try to use the systemId.	WITHOUT_CLASSIFICATION	0.999999728616379	WITHOUT_CLASSIFICATION	2.713836210070338E-7	DEFECT
// Try to find suffix in module list.	WITHOUT_CLASSIFICATION	0.999946896489129	WITHOUT_CLASSIFICATION	5.310351087108123E-5	DEFECT
// search the classpath	WITHOUT_CLASSIFICATION	0.9999995242276787	WITHOUT_CLASSIFICATION	4.757723212929434E-7	DEFECT
// Give up and let superclass deal with it.	WITHOUT_CLASSIFICATION	0.9999991473861544	WITHOUT_CLASSIFICATION	8.526138455134512E-7	DEFECT
// remove the first prefix because it may be an archive // (like magicdraw)	WITHOUT_CLASSIFICATION	0.9999870635744762	WITHOUT_CLASSIFICATION	1.2936425523903468E-5	DEFECT
// We've got a profile read pending - handle it ourselves now	WITHOUT_CLASSIFICATION	0.99999981673739	WITHOUT_CLASSIFICATION	1.8326261005932482E-7	DEFECT
// shouldn't happen	WITHOUT_CLASSIFICATION	0.9999086380882831	WITHOUT_CLASSIFICATION	9.136191171681068E-5	DEFECT
// Otherwise if it's not something we've already read, just // punt to the super class.	WITHOUT_CLASSIFICATION	0.9999999121080405	WITHOUT_CLASSIFICATION	8.789195950011737E-8	DEFECT
// Unfortunately the MDR super implementation throws // DebugException with just the message from the causing // exception rather than nesting the exception itself, so // we don't have all the information we'd like	WITHOUT_CLASSIFICATION	0.9999998873785293	WITHOUT_CLASSIFICATION	1.1262147076298308E-7	DEFECT
// Only add MOF elements, not primitive datatypes	WITHOUT_CLASSIFICATION	0.9999544366447348	WITHOUT_CLASSIFICATION	4.5563355265287685E-5	DEFECT
// Only add MOF elements, not primitive datatypes	WITHOUT_CLASSIFICATION	0.9999544366447348	WITHOUT_CLASSIFICATION	4.5563355265287685E-5	DEFECT
// For Transition use indirection through target StateVertex	WITHOUT_CLASSIFICATION	0.999998488039911	WITHOUT_CLASSIFICATION	1.5119600890467406E-6	DEFECT
// Look for an existing reference matching our MofID	WITHOUT_CLASSIFICATION	0.9999989315700687	WITHOUT_CLASSIFICATION	1.0684299313288799E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
// Get all (UML) metaclasses	WITHOUT_CLASSIFICATION	0.9999990838545034	WITHOUT_CLASSIFICATION	9.161454966460049E-7	DEFECT
//                    Object[] args = { typeName, elemName }; //                  misc.name.element-import = Imported {0}: {1} //                    return Translator //                            .localize("misc.name.element-import", args);	WITHOUT_CLASSIFICATION	0.9999990832873333	WITHOUT_CLASSIFICATION	9.167126666190622E-7	DEFECT
// Although this only handles one level of package, it is // OK for UML 1.4 because of clustering // Get the right UML package in the extent	WITHOUT_CLASSIFICATION	0.9999998412111537	WITHOUT_CLASSIFICATION	1.5878884618434307E-7	DEFECT
// Return the metatype proxy	WITHOUT_CLASSIFICATION	0.9999827171099761	WITHOUT_CLASSIFICATION	1.7282890023848368E-5	DEFECT
// we must find out if the activator itself does not have // message as it's activator	WITHOUT_CLASSIFICATION	0.9999995002175488	WITHOUT_CLASSIFICATION	4.997824512091618E-7	DEFECT
// An activator can't also be a predecessor of a message	WITHOUT_CLASSIFICATION	0.9999987093918703	WITHOUT_CLASSIFICATION	1.2906081296839305E-6	DEFECT
/* This double 'for' loop may be optimised as follows:             * - Use arrays in stead of a Set for bases             * - Have the second loop start from the element after base1             * ... but I chose not to do this, since the gain is small,             * and this is only used for a lazily filled combo.             * BTW: This is also used by Notation.*/	WITHOUT_CLASSIFICATION	0.9988460410598906	WITHOUT_CLASSIFICATION	0.001153958940109455	DEFECT
// An Association can only have a single unnamed ClassifierRole, so	WITHOUT_CLASSIFICATION	0.9999999164517196	WITHOUT_CLASSIFICATION	8.354828039514483E-8	DEFECT
// if we are unnamed eliminate all classifiers which are already // the base of some role	WITHOUT_CLASSIFICATION	0.9999999840919973	WITHOUT_CLASSIFICATION	1.590800271435046E-8	DEFECT
// eliminate Classifiers which already have an unnamed role	WITHOUT_CLASSIFICATION	0.9999999910168493	WITHOUT_CLASSIFICATION	8.983150545563884E-9	DEFECT
// WFR 2.10.3.3 #4	WITHOUT_CLASSIFICATION	0.9999926475890074	WITHOUT_CLASSIFICATION	7.352410992588283E-6	DEFECT
// eliminate Classifiers which already have an unnamed role	WITHOUT_CLASSIFICATION	0.9999999910168493	WITHOUT_CLASSIFICATION	8.983150545563884E-9	DEFECT
/* We need to verify that ns is a Package,         * if not - find its parent package!         * Otherwise this causes an exception when creating         * a sequence diagram for a ClassifierRole.*/	WITHOUT_CLASSIFICATION	0.9997253743101328	WITHOUT_CLASSIFICATION	2.746256898673061E-4	DEFECT
// No initialization currently	WITHOUT_CLASSIFICATION	0.999929491481941	WITHOUT_CLASSIFICATION	7.05085180590781E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999928616651008	WITHOUT_CLASSIFICATION	7.138334899211065E-6	DEFECT
// if we are unnamed eliminate all classifiers which are already // the base of some role	WITHOUT_CLASSIFICATION	0.9999999840919973	WITHOUT_CLASSIFICATION	1.590800271435046E-8	DEFECT
//|| context instanceof Collaboration //|| context instanceof Model	WITHOUT_CLASSIFICATION	0.9999997151100228	WITHOUT_CLASSIFICATION	2.848899771581536E-7	DEFECT
/*     * @see org.netbeans.lib.jmi.xmi.XMIHeaderProvider#writeHeader(java.io.Writer)     */	WITHOUT_CLASSIFICATION	0.9999970881552864	WITHOUT_CLASSIFICATION	2.9118447136221543E-6	DEFECT
// NOTE: The <XMI.header></XMI.header> is provided for us	WITHOUT_CLASSIFICATION	0.9999768954520963	WITHOUT_CLASSIFICATION	2.3104547903635887E-5	DEFECT
// Not implemented in MDR 	WITHOUT_CLASSIFICATION	0.9998814617514667	WITHOUT_CLASSIFICATION	1.1853824853334378E-4	DEFECT
/*     * @see org.argouml.model.AbstractModelEventPump#addModelEventListener(java.beans.PropertyChangeListener,     *      java.lang.Object, java.lang.String[])     */	WITHOUT_CLASSIFICATION	0.9999998094076354	WITHOUT_CLASSIFICATION	1.9059236463467502E-7	DEFECT
/*     * @see org.argouml.model.AbstractModelEventPump#addModelEventListener(java.beans.PropertyChangeListener,     *      java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999998360421665	WITHOUT_CLASSIFICATION	1.6395783353821423E-7	DEFECT
/*     * @see org.argouml.model.AbstractModelEventPump#removeModelEventListener(java.beans.PropertyChangeListener,     *      java.lang.Object, java.lang.String[])     */	WITHOUT_CLASSIFICATION	0.9999997058414555	WITHOUT_CLASSIFICATION	2.9415854446433334E-7	DEFECT
/*     * @see org.argouml.model.AbstractModelEventPump#removeModelEventListener(java.beans.PropertyChangeListener,     *      java.lang.Object, java.lang.String[])     */	WITHOUT_CLASSIFICATION	0.9999997058414555	WITHOUT_CLASSIFICATION	2.9415854446433334E-7	DEFECT
/*     * @see org.argouml.model.AbstractModelEventPump#removeModelEventListener(java.beans.PropertyChangeListener,     *      java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997469489481	WITHOUT_CLASSIFICATION	2.5305105195372274E-7	DEFECT
/*     * @see org.argouml.model.AbstractModelEventPump#addClassModelEventListener(java.beans.PropertyChangeListener,     *      java.lang.Object, java.lang.String[])     */	WITHOUT_CLASSIFICATION	0.9999997318935443	WITHOUT_CLASSIFICATION	2.6810645568343874E-7	DEFECT
// Clean up index entries	WITHOUT_CLASSIFICATION	0.9999997459982555	WITHOUT_CLASSIFICATION	2.540017445698083E-7	DEFECT
// will always be null	WITHOUT_CLASSIFICATION	0.999914249630873	WITHOUT_CLASSIFICATION	8.575036912704498E-5	DEFECT
// Create a change event for the corresponding property	WITHOUT_CLASSIFICATION	0.9999994778910869	WITHOUT_CLASSIFICATION	5.221089130653664E-7	DEFECT
// will always be null	WITHOUT_CLASSIFICATION	0.999914249630873	WITHOUT_CLASSIFICATION	8.575036912704498E-5	DEFECT
// Create an event for the other end of the association	WITHOUT_CLASSIFICATION	0.9999998061592927	WITHOUT_CLASSIFICATION	1.9384070725693634E-7	DEFECT
// will always be null	WITHOUT_CLASSIFICATION	0.999914249630873	WITHOUT_CLASSIFICATION	8.575036912704498E-5	DEFECT
// and a change event for that end	WITHOUT_CLASSIFICATION	0.9999999324243578	WITHOUT_CLASSIFICATION	6.75756421863478E-8	DEFECT
// will always be null	WITHOUT_CLASSIFICATION	0.999914249630873	WITHOUT_CLASSIFICATION	8.575036912704498E-5	DEFECT
// will always be null	WITHOUT_CLASSIFICATION	0.999914249630873	WITHOUT_CLASSIFICATION	8.575036912704498E-5	DEFECT
// Create a change event for the associated property	WITHOUT_CLASSIFICATION	0.9999999192600546	WITHOUT_CLASSIFICATION	8.073994548933672E-8	DEFECT
// will always be null	WITHOUT_CLASSIFICATION	0.999914249630873	WITHOUT_CLASSIFICATION	8.575036912704498E-5	DEFECT
// Create an event for the other end of the association	WITHOUT_CLASSIFICATION	0.9999998061592927	WITHOUT_CLASSIFICATION	1.9384070725693634E-7	DEFECT
// will always be null	WITHOUT_CLASSIFICATION	0.999914249630873	WITHOUT_CLASSIFICATION	8.575036912704498E-5	DEFECT
// Create a change event for the associated property	WITHOUT_CLASSIFICATION	0.9999999192600546	WITHOUT_CLASSIFICATION	8.073994548933672E-8	DEFECT
// will always be null	WITHOUT_CLASSIFICATION	0.999914249630873	WITHOUT_CLASSIFICATION	8.575036912704498E-5	DEFECT
// Cut down on debugging noise	WITHOUT_CLASSIFICATION	0.999998970742725	WITHOUT_CLASSIFICATION	1.0292572749970095E-6	DEFECT
// Unregister deleted instances after all events have been delivered	WITHOUT_CLASSIFICATION	0.999999997443678	WITHOUT_CLASSIFICATION	2.556321981929286E-9	DEFECT
// Any given listener is only called once even if it is // registered for multiple relevant matches	WITHOUT_CLASSIFICATION	0.9999999518720557	WITHOUT_CLASSIFICATION	4.8127944220620724E-8	DEFECT
// This will include all subtypes registered	WITHOUT_CLASSIFICATION	0.9999938068861186	WITHOUT_CLASSIFICATION	6.1931138814174686E-6	DEFECT
/*(LOG.isDebugEnabled()*/	WITHOUT_CLASSIFICATION	0.9999225387340988	WITHOUT_CLASSIFICATION	7.746126590126318E-5	DEFECT
// For debugging you probably want either this // OR the logging for every event which is fired - not both	WITHOUT_CLASSIFICATION	0.9999452784665364	WITHOUT_CLASSIFICATION	5.472153346362692E-5	DEFECT
/*LOG.isDebugEnabled()*/	WITHOUT_CLASSIFICATION	0.9999119328390619	WITHOUT_CLASSIFICATION	8.806716093819078E-5	DEFECT
// Fetch the key before going in synchronized mode	WITHOUT_CLASSIFICATION	0.9999902083883134	WITHOUT_CLASSIFICATION	9.791611686673726E-6	DEFECT
// LOG.log(Level.FINE, " Class " + name + " has subtypes : " // + names.get(name));	WITHOUT_CLASSIFICATION	0.9999982908598253	WITHOUT_CLASSIFICATION	1.709140174729038E-6	DEFECT
// convert classname to RefObject	WITHOUT_CLASSIFICATION	0.9999940497720579	WITHOUT_CLASSIFICATION	5.950227942142443E-6	DEFECT
// If we don't have a MofClass, see if we can get one from the // instance	WITHOUT_CLASSIFICATION	0.9999996676756009	WITHOUT_CLASSIFICATION	3.3232439913069657E-7	DEFECT
// If we still don't have a MofClass, something's wrong	WITHOUT_CLASSIFICATION	0.999935443173364	WITHOUT_CLASSIFICATION	6.455682663597713E-5	DEFECT
//                    throw new IllegalArgumentException("Property '" //                            + attribute + "' doesn't exist in metamodel");	WITHOUT_CLASSIFICATION	0.9999998908035308	WITHOUT_CLASSIFICATION	1.0919646926990563E-7	DEFECT
// If there isn't a 3rd column then this represents a connection // of elements of the same type.	WITHOUT_CLASSIFICATION	0.9999888097783365	WITHOUT_CLASSIFICATION	1.1190221663547609E-5	DEFECT
// Save the model (current)	WITHOUT_CLASSIFICATION	0.9999949299612411	WITHOUT_CLASSIFICATION	5.070038758952808E-6	DEFECT
/*     * @see org.argouml.model.ChangeableKind#getAddOnly()     */	WITHOUT_CLASSIFICATION	0.999999948617687	WITHOUT_CLASSIFICATION	5.1382313071108926E-8	DEFECT
// Lookup primary key, creating new entry if needed	WITHOUT_CLASSIFICATION	0.9999999923525074	WITHOUT_CLASSIFICATION	7.647492613145058E-9	DEFECT
// Lookup primary key, creating new entry if needed	WITHOUT_CLASSIFICATION	0.9999999923525074	WITHOUT_CLASSIFICATION	7.647492613145058E-9	DEFECT
// If there are no subkeys, register using our special value // to indicate that this is a primary key only registration	WITHOUT_CLASSIFICATION	0.999997558218237	WITHOUT_CLASSIFICATION	2.4417817629909483E-6	DEFECT
// UML 2.x only	WITHOUT_CLASSIFICATION	0.9999904064803649	WITHOUT_CLASSIFICATION	9.593519635062799E-6	DEFECT
// UML 2.x only	WITHOUT_CLASSIFICATION	0.9999904064803649	WITHOUT_CLASSIFICATION	9.593519635062799E-6	DEFECT
// UML 2.x only	WITHOUT_CLASSIFICATION	0.9999904064803649	WITHOUT_CLASSIFICATION	9.593519635062799E-6	DEFECT
// Look for a TagDefinition matching the given name	WITHOUT_CLASSIFICATION	0.9999992382050088	WITHOUT_CLASSIFICATION	7.617949911608039E-7	DEFECT
// Create a new TagDefinition if none found	WITHOUT_CLASSIFICATION	0.999999892844628	WITHOUT_CLASSIFICATION	1.0715537198331395E-7	DEFECT
// only add all if there are some to add.	WITHOUT_CLASSIFICATION	0.9999950205849365	WITHOUT_CLASSIFICATION	4.979415063484632E-6	DEFECT
// Clear target so that multiple copies have no effect  // (other than inefficiency)	WITHOUT_CLASSIFICATION	0.9999965344054075	WITHOUT_CLASSIFICATION	3.465594592396143E-6	DEFECT
// Delete all TaggedValues with this type	WITHOUT_CLASSIFICATION	0.9999546754624695	WITHOUT_CLASSIFICATION	4.532453753051889E-5	DEFECT
/*     * Used by the copy functions. Do not call this function directly.     *      * @param source     *            The stereotype to copy from.     * @param target     *            The object becoming a copy.     */	WITHOUT_CLASSIFICATION	0.9999621330202237	WITHOUT_CLASSIFICATION	3.786697977632621E-5	DEFECT
// "Element");	WITHOUT_CLASSIFICATION	0.9999967994830545	WITHOUT_CLASSIFICATION	3.200516945469284E-6	DEFECT
// Well formedness rule 4.12.3.1 CompositeState // [4] There have to be at least two composite substates in a // concurrent composite state. // If this is broken by deletion of substate then we delete the other // remaining substates.	WITHOUT_CLASSIFICATION	0.9999967454731332	WITHOUT_CLASSIFICATION	3.2545268667569275E-6	DEFECT
// The effect will get deleted automatically by MDR, unlike the Guard.	WITHOUT_CLASSIFICATION	0.9999994075697198	WITHOUT_CLASSIFICATION	5.924302802268753E-7	DEFECT
// Although Usage & Permission are Dependencies, they need to // be include separately because of the way lookup works	WITHOUT_CLASSIFICATION	0.9999984255145292	WITHOUT_CLASSIFICATION	1.5744854707929841E-6	DEFECT
// The following is specifically for Realizations	WITHOUT_CLASSIFICATION	0.9999427337004375	WITHOUT_CLASSIFICATION	5.7266299562406934E-5	DEFECT
// The next 3 restrictions for Abstraction seem to be Argo specific // not something the UML spec requires - tfm - 20070215	WITHOUT_CLASSIFICATION	0.9999852814532929	WITHOUT_CLASSIFICATION	1.4718546707053533E-5	DEFECT
// A list of valid connections between elements, the // connection type first and then the elements to be connected	WITHOUT_CLASSIFICATION	0.9999999160442539	WITHOUT_CLASSIFICATION	8.395574608314557E-8	DEFECT
// TODO: constraints // TODO: required tags	WITHOUT_CLASSIFICATION	0.9899433500474351	WITHOUT_CLASSIFICATION	0.010056649952564887	DEFECT
// specifies valid elements for a Model to contain	WITHOUT_CLASSIFICATION	0.9999999626897911	WITHOUT_CLASSIFICATION	3.73102088006841E-8	DEFECT
// specifies valid elements for a Model to contain	WITHOUT_CLASSIFICATION	0.9999999626897911	WITHOUT_CLASSIFICATION	3.73102088006841E-8	DEFECT
// specifies valid elements for a Package to contain	WITHOUT_CLASSIFICATION	0.9999999646612514	WITHOUT_CLASSIFICATION	3.5338748674476006E-8	DEFECT
// specifies valid elements for a classifier to contain	WITHOUT_CLASSIFICATION	0.9999997283772257	WITHOUT_CLASSIFICATION	2.71622774249182E-7	DEFECT
// specifies valid elements for an Interface to contain	WITHOUT_CLASSIFICATION	0.999999818640299	WITHOUT_CLASSIFICATION	1.8135970096148812E-7	DEFECT
// specifies valid elements for a Signal to contain	WITHOUT_CLASSIFICATION	0.9999999828881903	WITHOUT_CLASSIFICATION	1.711180975241962E-8	DEFECT
// specifies valid elements for an Actor to contain	WITHOUT_CLASSIFICATION	0.9999999440489816	WITHOUT_CLASSIFICATION	5.595101828293279E-8	DEFECT
// specifies valid elements for a Use Case to contain	WITHOUT_CLASSIFICATION	0.9999998626454533	WITHOUT_CLASSIFICATION	1.3735454672426227E-7	DEFECT
// specifies valid elements for a Use Case to contain	WITHOUT_CLASSIFICATION	0.9999998626454533	WITHOUT_CLASSIFICATION	1.3735454672426227E-7	DEFECT
// specifies valid elements for a Node to contain	WITHOUT_CLASSIFICATION	0.999999921638842	WITHOUT_CLASSIFICATION	7.836115800253336E-8	DEFECT
// specifies valid elements for a Enumeration to contain	WITHOUT_CLASSIFICATION	0.9999999857037637	WITHOUT_CLASSIFICATION	1.4296236338729563E-8	DEFECT
// specifies valid elements for a DataType to contain	WITHOUT_CLASSIFICATION	0.9999997136242554	WITHOUT_CLASSIFICATION	2.8637574450113076E-7	DEFECT
// specifies valid elements for a Operation to contain	WITHOUT_CLASSIFICATION	0.9999999319031248	WITHOUT_CLASSIFICATION	6.809687517906022E-8	DEFECT
// specifies valid elements for an Event to contain	WITHOUT_CLASSIFICATION	0.9999999466881333	WITHOUT_CLASSIFICATION	5.331186668016744E-8	DEFECT
// specifies valid elements for an AssociationRole to contain	WITHOUT_CLASSIFICATION	0.9999997834213827	WITHOUT_CLASSIFICATION	2.1657861738884618E-7	DEFECT
// specifies valid elements for an AssociationRole to contain	WITHOUT_CLASSIFICATION	0.9999997834213827	WITHOUT_CLASSIFICATION	2.1657861738884618E-7	DEFECT
// specifies valid elements for an AssociationRole to contain	WITHOUT_CLASSIFICATION	0.9999997834213827	WITHOUT_CLASSIFICATION	2.1657861738884618E-7	DEFECT
// specifies valid elements for an AssociationRole to contain	WITHOUT_CLASSIFICATION	0.9999997834213827	WITHOUT_CLASSIFICATION	2.1657861738884618E-7	DEFECT
// specifies valid elements for an AssociationRole to contain	WITHOUT_CLASSIFICATION	0.9999997834213827	WITHOUT_CLASSIFICATION	2.1657861738884618E-7	DEFECT
// specifies valid elements for an AssociationRole to contain	WITHOUT_CLASSIFICATION	0.9999997834213827	WITHOUT_CLASSIFICATION	2.1657861738884618E-7	DEFECT
// specifies valid elements for an AssociationRole to contain	WITHOUT_CLASSIFICATION	0.9999997834213827	WITHOUT_CLASSIFICATION	2.1657861738884618E-7	DEFECT
// specifies valid elements for an AssociationRole to contain	WITHOUT_CLASSIFICATION	0.9999997834213827	WITHOUT_CLASSIFICATION	2.1657861738884618E-7	DEFECT
// specifies valid elements for an AssociationRole to contain	WITHOUT_CLASSIFICATION	0.9999997834213827	WITHOUT_CLASSIFICATION	2.1657861738884618E-7	DEFECT
// specifies valid elements for an AssociationRole to contain	WITHOUT_CLASSIFICATION	0.9999997834213827	WITHOUT_CLASSIFICATION	2.1657861738884618E-7	DEFECT
// specifies valid elements for an State to contain	WITHOUT_CLASSIFICATION	0.9999997588038277	WITHOUT_CLASSIFICATION	2.4119617231838857E-7	DEFECT
// specifies valid elements for an CallState to contain	WITHOUT_CLASSIFICATION	0.9999995997175126	WITHOUT_CLASSIFICATION	4.002824873254113E-7	DEFECT
// specifies valid elements for an SimpleState to contain	WITHOUT_CLASSIFICATION	0.9999998388860438	WITHOUT_CLASSIFICATION	1.6111395610583507E-7	DEFECT
// specifies valid elements for an SubactivityState to contain	WITHOUT_CLASSIFICATION	0.999999833905336	WITHOUT_CLASSIFICATION	1.6609466391055613E-7	DEFECT
// specifies valid elements for an ActionState to contain	WITHOUT_CLASSIFICATION	0.9999998681946208	WITHOUT_CLASSIFICATION	1.3180537913192393E-7	DEFECT
// specifies valid elements for an ActionState to contain	WITHOUT_CLASSIFICATION	0.9999998681946208	WITHOUT_CLASSIFICATION	1.3180537913192393E-7	DEFECT
// supports implementation of some special elements not // supported by buildNode	WITHOUT_CLASSIFICATION	0.9999959404072611	WITHOUT_CLASSIFICATION	4.059592738946983E-6	DEFECT
// the list of namespaces to return	WITHOUT_CLASSIFICATION	0.9999999678789014	WITHOUT_CLASSIFICATION	3.212109856935946E-8	DEFECT
// If our map has any entries for this type, it's a connection type	WITHOUT_CLASSIFICATION	0.9999744188228743	WITHOUT_CLASSIFICATION	2.5581177125702338E-5	DEFECT
// Get the list of valid model item pairs for the given connection type	WITHOUT_CLASSIFICATION	0.9999987051470877	WITHOUT_CLASSIFICATION	1.294852912304494E-6	DEFECT
// See if there's a pair in this list that match the given // model elements	WITHOUT_CLASSIFICATION	0.9999982446467783	WITHOUT_CLASSIFICATION	1.7553532216109316E-6	DEFECT
// find the passed in container in validContainmentMap	WITHOUT_CLASSIFICATION	0.9999992996910207	WITHOUT_CLASSIFICATION	7.003089791597624E-7	DEFECT
// determine if metaType is a valid element for container	WITHOUT_CLASSIFICATION	0.9999990440074848	WITHOUT_CLASSIFICATION	9.559925151748595E-7	DEFECT
/*             * UML 1.4.2 Spec section 4.5.3.20 [5]             * A GeneralizableElement may only be a child of             * GeneralizableElement of the same kind.             */	WITHOUT_CLASSIFICATION	0.9999759356256588	WITHOUT_CLASSIFICATION	2.4064374341317637E-5	DEFECT
// Begin a transaction - we'll do a bunch of reads first // to collect a set of elements to delete - then delete them all	WITHOUT_CLASSIFICATION	0.9999991867253897	WITHOUT_CLASSIFICATION	8.132746102461223E-7	DEFECT
// no else here to make sure Classifier with // its double inheritance goes ok	WITHOUT_CLASSIFICATION	0.9999999105240008	WITHOUT_CLASSIFICATION	8.947599923132943E-8	DEFECT
// no else here to make sure AssociationClass goes ok	WITHOUT_CLASSIFICATION	0.9999993560864334	WITHOUT_CLASSIFICATION	6.439135666942668E-7	DEFECT
// no else to handle multiple inheritance of linkobject	WITHOUT_CLASSIFICATION	0.9999999609550628	WITHOUT_CLASSIFICATION	3.90449372010624E-8	DEFECT
// If we get this with the repository locked, it means our root // model element was already deleted.  Nothing to do...	WITHOUT_CLASSIFICATION	0.9999997306649032	WITHOUT_CLASSIFICATION	2.6933509677972453E-7	DEFECT
// Our wrapped version of the same error	WITHOUT_CLASSIFICATION	0.9999992442876786	WITHOUT_CLASSIFICATION	7.557123214138525E-7	DEFECT
// end our transaction	WITHOUT_CLASSIFICATION	0.9999975550301062	WITHOUT_CLASSIFICATION	2.444969893710571E-6	DEFECT
// if there are no owned elements then return empty list	WITHOUT_CLASSIFICATION	0.9999995591767413	WITHOUT_CLASSIFICATION	4.408232586890776E-7	DEFECT
// This enforces the following well-formedness rule. // <p>Well formedness rule 4.12.3.1 CompositeState // [4] There have to be at least two composite // substates in a concurrent composite state.<p> // If this is broken by deletion of substate then we // change the parent composite substate to be not // concurrent.	WITHOUT_CLASSIFICATION	0.9999547681360659	WITHOUT_CLASSIFICATION	4.523186393411905E-5	DEFECT
// We don't care about the value - just want to see if it throws	WITHOUT_CLASSIFICATION	0.9999999914740131	WITHOUT_CLASSIFICATION	8.525986923357606E-9	DEFECT
// Recurse into ourself for each parent	WITHOUT_CLASSIFICATION	0.9999998962639361	WITHOUT_CLASSIFICATION	1.0373606383957104E-7	DEFECT
// the following should always be true	WITHOUT_CLASSIFICATION	0.9998804100279985	WITHOUT_CLASSIFICATION	1.1958997200150534E-4	DEFECT
// If we were handed a Classifier to start, // this must be a Classifier	WITHOUT_CLASSIFICATION	0.999995898395333	WITHOUT_CLASSIFICATION	4.101604667048109E-6	DEFECT
// we have to follow the // arrows..	WITHOUT_CLASSIFICATION	0.9999995488319509	WITHOUT_CLASSIFICATION	4.5116804903183965E-7	DEFECT
// || ns instanceof UseCase // see comment below	WITHOUT_CLASSIFICATION	0.9999995792745089	WITHOUT_CLASSIFICATION	4.2072549121128023E-7	DEFECT
/*                 * NOTE: Although WFR #3 in section 2.11.3.5 UseCase of the                 * UML 1.4 spec says "A UseCase cannot contain any                 * Classifiers," the OCL is actually self.contents->isEmpty                 * which would seem to imply it can't contain any elements                 * - tfm - 20060416                 */	WITHOUT_CLASSIFICATION	0.9767602484165091	WITHOUT_CLASSIFICATION	0.023239751583490897	DEFECT
// Made following changes from OCL in UML 1.4 section 2.9.3.16: //   CollaborationInstance -> CollaborationInstanceSet //   Stimuli -> Stimulus	WITHOUT_CLASSIFICATION	0.999997429523512	WITHOUT_CLASSIFICATION	2.5704764880871703E-6	DEFECT
// A Profile is a special package having the <<profile>> // stereotype which can only contain the following types	WITHOUT_CLASSIFICATION	0.999999943109846	WITHOUT_CLASSIFICATION	5.689015398699778E-8	DEFECT
/* || modelElement instanceof StateMachine */	WITHOUT_CLASSIFICATION	0.9999967459640466	WITHOUT_CLASSIFICATION	3.254035953334414E-6	DEFECT
// A Profile is a special package having the <<profile>> stereotype	WITHOUT_CLASSIFICATION	0.9999984494128236	WITHOUT_CLASSIFICATION	1.5505871763476756E-6	DEFECT
// There actually don't appear to be any restrictions on the // namespace for a Generalization.  The UML 1.4 WFR 2.5.3.20 #3 // refers to GeneralizableElements, not Generalizations - tfm	WITHOUT_CLASSIFICATION	0.5005962796469955	DEFECT	0.4994037203530046	WITHOUT_CLASSIFICATION
// only build a namepace if needed, with	WITHOUT_CLASSIFICATION	0.9999960426530345	WITHOUT_CLASSIFICATION	3.957346965430093E-6	DEFECT
//        return struc.getOwner().getNamespace().getOwnedElement().contains( //                struc.getType());	WITHOUT_CLASSIFICATION	0.9999995337961646	WITHOUT_CLASSIFICATION	4.662038354645383E-7	DEFECT
//  self.allConnections->forAll(r // | self.namespace.allContents->includes(r.participant) )	WITHOUT_CLASSIFICATION	0.9999998793835255	WITHOUT_CLASSIFICATION	1.2061647445841846E-7	DEFECT
//  d.supplier.oclAsType(GeneralizableElement). //  allParents.oclAsType(Namespace).ownedElement->select (e | //              e. elementOwnership.visibility = //                      #public)->includes (r.participant) or	WITHOUT_CLASSIFICATION	0.9999996473923476	WITHOUT_CLASSIFICATION	3.5260765241852876E-7	DEFECT
//  d.supplier.oclAsType(Namespace).ownedElement->select (e | //  e.elementOwnership.visibility = //  #public)->includes (r.participant) or	WITHOUT_CLASSIFICATION	0.9999999681199097	WITHOUT_CLASSIFICATION	3.188009031343153E-8	DEFECT
//  d.supplier.oclAsType(Package).allImportedElements->select ( //                  e | e. elementImport.visibility = //                      #public) ->includes (r.participant) ) )	WITHOUT_CLASSIFICATION	0.9999999871771834	WITHOUT_CLASSIFICATION	1.2822816665896466E-8	DEFECT
// Get the namespace hierarchy for each element	WITHOUT_CLASSIFICATION	0.9999981599057272	WITHOUT_CLASSIFICATION	1.8400942728064422E-6	DEFECT
// Traverse the lists looking for the last (innermost) match	WITHOUT_CLASSIFICATION	0.9999996899370661	WITHOUT_CLASSIFICATION	3.1006293390867583E-7	DEFECT
// This is an expensive method that we should ensure is called // rarely. Hence info level to track easily.	WITHOUT_CLASSIFICATION	0.9973575692709484	WITHOUT_CLASSIFICATION	0.00264243072905159	DEFECT
// UML 1.4 WFR 2.5.3.1 #3	WITHOUT_CLASSIFICATION	0.9999079657642955	WITHOUT_CLASSIFICATION	9.203423570452523E-5	DEFECT
// UML 1.4 WFR 2.5.3.1 #3 - no aggregation for N-ary associations	WITHOUT_CLASSIFICATION	0.99998662196103	WITHOUT_CLASSIFICATION	1.3378038970014732E-5	DEFECT
// We silently ignore requests which conflict with // UML 1.4 WFR 2.5.3.1 #3 - no aggregation for n-ary associations	WITHOUT_CLASSIFICATION	0.9999915844126912	WITHOUT_CLASSIFICATION	8.415587308835093E-6	DEFECT
// If we made something aggregate, make sure the other ends conform // to UML 1.4 WFR 2.5.3.1 #2 - no more than one aggregate end	WITHOUT_CLASSIFICATION	0.9999998802882282	WITHOUT_CLASSIFICATION	1.1971177187854974E-7	DEFECT
// UML 1.4 WFR 2.5.3.1 #3 - no aggregation for N-ary associations	WITHOUT_CLASSIFICATION	0.99998662196103	WITHOUT_CLASSIFICATION	1.3378038970014732E-5	DEFECT
/*         * <em>Warning: when changing the implementation of this method be         * warned that the sequence of the if then else tree DOES matter.</em>         * Most notably, do not move the setNamespace method any level up in         * the tree.<p>         */	WITHOUT_CLASSIFICATION	0.8906469035200866	WITHOUT_CLASSIFICATION	0.10935309647991338	DEFECT
// All text was stored in name field in UML 1.3	WITHOUT_CLASSIFICATION	0.9999992835660293	WITHOUT_CLASSIFICATION	7.164339707762573E-7	DEFECT
// Returns nothing	WITHOUT_CLASSIFICATION	0.9999949980481735	WITHOUT_CLASSIFICATION	5.001951826501515E-6	DEFECT
// Boolean, String, Integer, Long, Float, Double, etc	WITHOUT_CLASSIFICATION	0.9999892995798824	WITHOUT_CLASSIFICATION	1.0700420117544603E-5	DEFECT
/*     * This method is CPU intensive and therefore needs to be as efficient as     * possible.     */	WITHOUT_CLASSIFICATION	0.9999995547995468	WITHOUT_CLASSIFICATION	4.452004532337872E-7	DEFECT
/*         * Because we get the metatype class stripped of its reflective         * proxies, we need to jump through a hoop or two to find it         * in the metamodel, then work from there to get its proxy.         */	WITHOUT_CLASSIFICATION	0.9999466011103797	WITHOUT_CLASSIFICATION	5.339888962041417E-5	DEFECT
// Remove any elements not in requested namespace	WITHOUT_CLASSIFICATION	0.9999691179066516	WITHOUT_CLASSIFICATION	3.088209334854447E-5	DEFECT
/*     * Check whether model element is contained in given namespace/container.     */	WITHOUT_CLASSIFICATION	0.9999989219552159	WITHOUT_CLASSIFICATION	1.0780447841289753E-6	DEFECT
// Get Classifiers in Namespace	WITHOUT_CLASSIFICATION	0.9999994457118775	WITHOUT_CLASSIFICATION	5.542881225556555E-7	DEFECT
// Get Features owned by those Classifiers	WITHOUT_CLASSIFICATION	0.9999999805890888	WITHOUT_CLASSIFICATION	1.9410911119471905E-8	DEFECT
// Select those Features which are BehavioralFeatures	WITHOUT_CLASSIFICATION	0.999999404888081	WITHOUT_CLASSIFICATION	5.951119189821226E-7	DEFECT
// Should these also be deleted?	WITHOUT_CLASSIFICATION	0.999997345898314	WITHOUT_CLASSIFICATION	2.654101685906621E-6	DEFECT
// This is silly, but for backward compatibility	WITHOUT_CLASSIFICATION	0.9999537960264822	WITHOUT_CLASSIFICATION	4.6203973517905386E-5	DEFECT
/* TODO: This is the 2nd part of this method: */	WITHOUT_CLASSIFICATION	0.77745992801266	DEFECT	0.22254007198734008	WITHOUT_CLASSIFICATION
/*             * For a Classifier:             * <pre>             * [10] The operation allContents returns a Set containing             * all ModelElements contained in the Classifier together             * with the contents inherited from its parents.             *   allContents : Set(ModelElement);             *   allContents = self.contents->union(             *       self.parent.allContents->select(e |             *            e.elementOwnership.visibility = #public or             *            e.elementOwnership.visibility = #protected))             * where parent is defined for GeneralizableElement as:             * [1] The operation parent returns a Set containing all direct             * parents             *   parent : Set(GeneralizableElement);             *   parent = self.generalization.parent             * </pre><p>             */	WITHOUT_CLASSIFICATION	0.9999997813716284	WITHOUT_CLASSIFICATION	2.186283716668514E-7	DEFECT
/*             * For a Collaboration:             * <pre>             * [1 ] The operation allContents results in the set of             * all ModelElements contained in the Collaboration             * together with those contained in the parents             * except those that have been specialized.             *   allContents : Set(ModelElement);             *   allContents = self.contents->union (             *                       self.parent.allContents->reject ( e |             *                       self.contents.name->include (e.name) ))             *             *  parent here is the GeneralizableElement definition             * </pre>             */	WITHOUT_CLASSIFICATION	0.9999986912744601	WITHOUT_CLASSIFICATION	1.308725539890017E-6	DEFECT
// wellformednessrules and preconditions	WITHOUT_CLASSIFICATION	0.9999890943943586	WITHOUT_CLASSIFICATION	1.0905605641371999E-5	DEFECT
// UML 1.4 WFR 2.5.3.1 #3 - no aggregation for N-ary associations	WITHOUT_CLASSIFICATION	0.99998662196103	WITHOUT_CLASSIFICATION	1.3378038970014732E-5	DEFECT
// equal	WITHOUT_CLASSIFICATION	0.999999005571774	WITHOUT_CLASSIFICATION	9.94428225901993E-7	DEFECT
// greater	WITHOUT_CLASSIFICATION	0.9999995921629075	WITHOUT_CLASSIFICATION	4.0783709260770444E-7	DEFECT
// less than	WITHOUT_CLASSIFICATION	0.9999979734576816	WITHOUT_CLASSIFICATION	2.026542318391494E-6	DEFECT
// binary association	WITHOUT_CLASSIFICATION	0.9999918488412609	WITHOUT_CLASSIFICATION	8.151158739096532E-6	DEFECT
// delete LinkEnds which have this as their associationEnd	WITHOUT_CLASSIFICATION	0.9999970596319794	WITHOUT_CLASSIFICATION	2.9403680206034266E-6	DEFECT
// delete AttributeLinks where this is the Attribute	WITHOUT_CLASSIFICATION	0.99997177613249	WITHOUT_CLASSIFICATION	2.822386750992148E-5	DEFECT
// delete CreateActions which have this as their instantiation	WITHOUT_CLASSIFICATION	0.9999996676675471	WITHOUT_CLASSIFICATION	3.323324528795325E-7	DEFECT
/*     * @see org.argouml.model.ActivityGraphsHelper#findClassifierByName(     *         java.lang.Object, java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999999068838177	WITHOUT_CLASSIFICATION	9.311618229566366E-8	DEFECT
// Delete dependencies where this is the only client	WITHOUT_CLASSIFICATION	0.999999178916217	WITHOUT_CLASSIFICATION	8.210837829520969E-7	DEFECT
// Delete dependencies where this is the only supplier	WITHOUT_CLASSIFICATION	0.9999998388189688	WITHOUT_CLASSIFICATION	1.6118103111329537E-7	DEFECT
// delete CallActions which have this as their operation	WITHOUT_CLASSIFICATION	0.9999985596866667	WITHOUT_CLASSIFICATION	1.4403133331504506E-6	DEFECT
// delete CallEvents which have this as their operation	WITHOUT_CLASSIFICATION	0.999999257756159	WITHOUT_CLASSIFICATION	7.422438409780364E-7	DEFECT
/*     * TODO: All the ToDos in the doCopyFoo methods below are inherited from the     * NSUML implementation and do not reflect new issues. One additional thing     * which does need to be dealt with is the copying of any attributes which     * have been added since this code was implemented for UML 1.3.     */	WITHOUT_CLASSIFICATION	0.8831886383608577	WITHOUT_CLASSIFICATION	0.11681136163914226	DEFECT
// Nothing more to do.	WITHOUT_CLASSIFICATION	0.9999994088426507	WITHOUT_CLASSIFICATION	5.911573492244396E-7	DEFECT
/**     * Used by the copy functions. Do not call this function directly.     * TODO: actions? instances? collaborations etc?     *     * @param source     *            the source classifier     * @param target     *            the target classifier     */	WITHOUT_CLASSIFICATION	0.9996335005679038	DEFECT	3.664994320962055E-4	WITHOUT_CLASSIFICATION
// Copy all the Features	WITHOUT_CLASSIFICATION	0.9999998804895818	WITHOUT_CLASSIFICATION	1.1951041829951278E-7	DEFECT
/**     * Used by the copy functions. Do not call this function directly.     * TODO: generalizations, specializations?     *     * @param source     *            the source generalizable element     * @param target     *            the target generalizable element     */	WITHOUT_CLASSIFICATION	0.9998121493549272	DEFECT	1.8785064507283826E-4	WITHOUT_CLASSIFICATION
/**     * Used by the copy functions. Do not call this function directly.     * TODO: template parameters, default type     * TODO: constraining elements     * TODO: flows, dependencies, comments, bindings, contexts ???     * TODO: contents, residences ???     *     * @param source     *            the source me     * @param target     *            the target me     */	WITHOUT_CLASSIFICATION	0.9996383567225602	DEFECT	3.6164327743981947E-4	WITHOUT_CLASSIFICATION
// Nothing more to do, don't copy owned elements.	WITHOUT_CLASSIFICATION	0.9999989433447043	WITHOUT_CLASSIFICATION	1.0566552957938957E-6	DEFECT
// copy raised signals:	WITHOUT_CLASSIFICATION	0.9999996727498978	WITHOUT_CLASSIFICATION	3.2725010229936995E-7	DEFECT
// Set the name so that superclasses can find the newly // created element in the model, if necessary.	WITHOUT_CLASSIFICATION	0.9999997612845151	WITHOUT_CLASSIFICATION	2.387154848564471E-7	DEFECT
// Note that if we're copying this element then we // must also be allowed to copy other necessary // objects.	WITHOUT_CLASSIFICATION	0.9999999921795149	WITHOUT_CLASSIFICATION	7.820485101628312E-9	DEFECT
// Don't explicitly check if element is null	WITHOUT_CLASSIFICATION	0.9999959901495904	WITHOUT_CLASSIFICATION	4.009850409691987E-6	DEFECT
// Return 1..1 multiplicity for empty string	WITHOUT_CLASSIFICATION	0.9999989728556061	WITHOUT_CLASSIFICATION	1.0271443938437696E-6	DEFECT
// Convert "*" to "0..*" instead of "*..*"	WITHOUT_CLASSIFICATION	0.9999998973913575	WITHOUT_CLASSIFICATION	1.0260864250883213E-7	DEFECT
/* In this case, either the container was not set,             * or it was not contained in a statemachine.             */	WITHOUT_CLASSIFICATION	0.9986046271506542	WITHOUT_CLASSIFICATION	0.0013953728493457437	DEFECT
/* according WFR: in case of ActivityGraph only. */	WITHOUT_CLASSIFICATION	0.9996824019973414	WITHOUT_CLASSIFICATION	3.175980026586509E-4	DEFECT
// For consistency with attribute and operation, give it a default // name and location	WITHOUT_CLASSIFICATION	0.9999984921635349	WITHOUT_CLASSIFICATION	1.5078364651256643E-6	DEFECT
// Delete Extends which have this as their only ExtensionPoint	WITHOUT_CLASSIFICATION	0.9999997156306188	WITHOUT_CLASSIFICATION	2.8436938120039987E-7	DEFECT
// delete Extends where this is the base	WITHOUT_CLASSIFICATION	0.9999954504890322	WITHOUT_CLASSIFICATION	4.549510967850294E-6	DEFECT
// delete Includes where this is the addition	WITHOUT_CLASSIFICATION	0.9999530313658257	WITHOUT_CLASSIFICATION	4.6968634174226806E-5	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
// Test multipe items registered for single key set	WITHOUT_CLASSIFICATION	0.9999996575251787	WITHOUT_CLASSIFICATION	3.424748213626691E-7	DEFECT
// Remove with null item should remove all entries for key	WITHOUT_CLASSIFICATION	0.999827826325948	WITHOUT_CLASSIFICATION	1.7217367405199672E-4	DEFECT
// success	WITHOUT_CLASSIFICATION	0.9999988988612902	WITHOUT_CLASSIFICATION	1.1011387097225628E-6	DEFECT
// success	WITHOUT_CLASSIFICATION	0.9999988988612902	WITHOUT_CLASSIFICATION	1.1011387097225628E-6	DEFECT
/* Need to copy the lists since we will be moving the elements              * one by one: */	WITHOUT_CLASSIFICATION	0.9999888203920942	WITHOUT_CLASSIFICATION	1.1179607905838797E-5	DEFECT
// Deleting "source" here would probably delete the parameters...	WITHOUT_CLASSIFICATION	0.9999994282610706	WITHOUT_CLASSIFICATION	5.717389294023948E-7	DEFECT
/*         * Only set the name if it differs from the text.         */	WITHOUT_CLASSIFICATION	0.9999972649002993	WITHOUT_CLASSIFICATION	2.7350997007986886E-6	DEFECT
/* Need to copy the lists since we will be moving the elements: */	WITHOUT_CLASSIFICATION	0.9998613323603646	WITHOUT_CLASSIFICATION	1.3866763963540102E-4	DEFECT
// This is not necessarily the current diagram!	WITHOUT_CLASSIFICATION	0.9999931258787947	WITHOUT_CLASSIFICATION	6.874121205293066E-6	DEFECT
/* Remove the old fig from the diagram, so we can draw the                 * new one in its place: */	WITHOUT_CLASSIFICATION	0.9999845929140061	WITHOUT_CLASSIFICATION	1.5407085993860633E-5	DEFECT
//            p.moveToTrash(source);	WITHOUT_CLASSIFICATION	0.9999997985382811	WITHOUT_CLASSIFICATION	2.0146171872715244E-7	DEFECT
// As soon as we've created a notation and have registered it listener // force an event to go to the listener so it draws for the first time.	WITHOUT_CLASSIFICATION	0.9999999996293815	WITHOUT_CLASSIFICATION	3.7061849359666154E-10	DEFECT
// If there are no subkeys, register using our special value // to indicate that this is a primary key only registration	WITHOUT_CLASSIFICATION	0.999997558218237	WITHOUT_CLASSIFICATION	2.4417817629909483E-6	DEFECT
// Made following change from OCL in UML 1.4 section 2.9.3.22: //   CollaborationInstance -> CollaborationInstanceSet	WITHOUT_CLASSIFICATION	0.9999942389408801	WITHOUT_CLASSIFICATION	5.761059119874575E-6	DEFECT
// If there is a 3rd column then this represents a connection // of between 2 different types of element.	WITHOUT_CLASSIFICATION	0.9999993091129034	WITHOUT_CLASSIFICATION	6.908870966423205E-7	DEFECT
// Elements which will be deleted when their container is deleted // don't get added to the list of elements to be deleted // (but we still want to traverse them looking for other elements //  to be deleted)	WITHOUT_CLASSIFICATION	0.9999999921146797	WITHOUT_CLASSIFICATION	7.885320348559484E-9	DEFECT
// Technically this is legal, but a StructuralFeature should probably // only ever have an owner instead of a namespace. - tfm	WITHOUT_CLASSIFICATION	0.995879942366453	WITHOUT_CLASSIFICATION	0.004120057633546881	DEFECT
// We'll put the association in the namespace of whichever end // is not navigable and is writeable.  If they both are, we'll use the // namepace of c1.	WITHOUT_CLASSIFICATION	0.9999994811152013	WITHOUT_CLASSIFICATION	5.188847986179608E-7	DEFECT
// EnumerationLiterals should get deleted implicitly // since they are associated by composition	WITHOUT_CLASSIFICATION	0.9999996179327596	WITHOUT_CLASSIFICATION	3.820672403761875E-7	DEFECT
// Set the namespace to that of the base as first choice, or that of // the addition as second choice.	WITHOUT_CLASSIFICATION	0.9999987460468438	WITHOUT_CLASSIFICATION	1.2539531563013293E-6	DEFECT
// UML2 only	WITHOUT_CLASSIFICATION	0.9999933929750335	WITHOUT_CLASSIFICATION	6.607024966433793E-6	DEFECT
//            Editor editor = Globals.curEditor(); //            GraphModel gm = editor.getGraphModel(); //            LayerDiagram lay = //                ((LayerDiagram) editor.getLayerManager().getActiveLayer());	WITHOUT_CLASSIFICATION	0.9999998829228405	WITHOUT_CLASSIFICATION	1.170771594624308E-7	DEFECT
// Have we handled UML2 here?	WITHOUT_CLASSIFICATION	0.9999497136671435	WITHOUT_CLASSIFICATION	5.028633285654921E-5	DEFECT
/*    	WITHOUT_CLASSIFICATION	0.9987173075988797	WITHOUT_CLASSIFICATION	0.0012826924011203281	DEFECT
/*    	WITHOUT_CLASSIFICATION	0.9987173075988797	WITHOUT_CLASSIFICATION	0.0012826924011203281	DEFECT
/*    	WITHOUT_CLASSIFICATION	0.9987173075988797	WITHOUT_CLASSIFICATION	0.0012826924011203281	DEFECT
/*    	WITHOUT_CLASSIFICATION	0.9987173075988797	WITHOUT_CLASSIFICATION	0.0012826924011203281	DEFECT
/*         * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)         */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
// Get all classifiers in all top level packages of all profiles	WITHOUT_CLASSIFICATION	0.999999894268876	WITHOUT_CLASSIFICATION	1.0573112395267125E-7	DEFECT
/*	WITHOUT_CLASSIFICATION	0.9917225237718192	WITHOUT_CLASSIFICATION	0.008277476228180789	DEFECT
// We got passed an unmodifiable List.  Copy it and sort the result	WITHOUT_CLASSIFICATION	0.9999987998519383	WITHOUT_CLASSIFICATION	1.2001480617432773E-6	DEFECT
/*	WITHOUT_CLASSIFICATION	0.9917225237718192	WITHOUT_CLASSIFICATION	0.008277476228180789	DEFECT
/*	WITHOUT_CLASSIFICATION	0.9917225237718192	WITHOUT_CLASSIFICATION	0.008277476228180789	DEFECT
/*     * @see java.awt.event.MouseListener#mouseReleased(     *      java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999999359141847	WITHOUT_CLASSIFICATION	6.408581536444846E-8	DEFECT
/*     * @see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998995536239	WITHOUT_CLASSIFICATION	1.0044637608451965E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998353954294	WITHOUT_CLASSIFICATION	1.6460457068653385E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998951464171	WITHOUT_CLASSIFICATION	1.0485358285635044E-7	DEFECT
/* Set up the property panels for UML elements: */	WITHOUT_CLASSIFICATION	0.998015914983201	WITHOUT_CLASSIFICATION	0.0019840850167990253	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.999999934273208	WITHOUT_CLASSIFICATION	6.572679199456743E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#newExpression()     */	WITHOUT_CLASSIFICATION	0.9999998518618105	WITHOUT_CLASSIFICATION	1.4813818942978777E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
// Build up an array list of the heights of each label/component pair. // Heights of zero indicate a proportional height.	WITHOUT_CLASSIFICATION	0.9999986510380647	WITHOUT_CLASSIFICATION	1.348961935325292E-6	DEFECT
// Make sure the component width isn't any greater // than its maximum allowed width	WITHOUT_CLASSIFICATION	0.9999999719621565	WITHOUT_CLASSIFICATION	2.8037843415310864E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see javax.swing.Action#isEnabled()     */	WITHOUT_CLASSIFICATION	0.9999997926618378	WITHOUT_CLASSIFICATION	2.0733816223854664E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999998652327944	WITHOUT_CLASSIFICATION	1.3476720556370483E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999998877828706	WITHOUT_CLASSIFICATION	1.1221712944461038E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()     */	WITHOUT_CLASSIFICATION	0.999999969271671	WITHOUT_CLASSIFICATION	3.072832900518761E-8	DEFECT
/*         * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)         */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#getExpression()     */	WITHOUT_CLASSIFICATION	0.9999999356696541	WITHOUT_CLASSIFICATION	6.433034591694181E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.999999934273208	WITHOUT_CLASSIFICATION	6.572679199456743E-8	DEFECT
/* If we do not set it to null first, then we get a MDR DebugException: */	WITHOUT_CLASSIFICATION	0.9998517036045811	WITHOUT_CLASSIFICATION	1.4829639541880723E-4	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#newExpression()     */	WITHOUT_CLASSIFICATION	0.9999998518618105	WITHOUT_CLASSIFICATION	1.4813818942978777E-7	DEFECT
/*         * @see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)         */	WITHOUT_CLASSIFICATION	0.9999998652327944	WITHOUT_CLASSIFICATION	1.3476720556370483E-7	DEFECT
/*         * @see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()         */	WITHOUT_CLASSIFICATION	0.9999998877828706	WITHOUT_CLASSIFICATION	1.1221712944461038E-7	DEFECT
/*         * @see org.argouml.uml.ui.UMLComboBoxModel#addElement(java.lang.Object)         */	WITHOUT_CLASSIFICATION	0.9999997754554825	WITHOUT_CLASSIFICATION	2.2454451751987176E-7	DEFECT
/*         * @see javax.swing.ComboBoxModel#setSelectedItem(java.lang.Object)         */	WITHOUT_CLASSIFICATION	0.9999997056466392	WITHOUT_CLASSIFICATION	2.9435336084268396E-7	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
/*             * This can throw an exception if the target has been             * deleted. We don't want to try locking the repository             * because this is called from the event delivery thread and             * could cause a deadlock. Instead catch the exception and             * leave the model empty.             */	WITHOUT_CLASSIFICATION	0.9999999827702967	WITHOUT_CLASSIFICATION	1.722970328591745E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999995389565826	WITHOUT_CLASSIFICATION	4.610434174397081E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see javax.swing.DefaultListModel#contains(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999991176515372	WITHOUT_CLASSIFICATION	8.823484628265479E-7	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// we tried to remove a value	WITHOUT_CLASSIFICATION	0.9999990543152152	WITHOUT_CLASSIFICATION	9.456847848465782E-7	DEFECT
// Allow listening to other elements:	WITHOUT_CLASSIFICATION	0.9999999287375095	WITHOUT_CLASSIFICATION	7.12624904509216E-8	DEFECT
// Don't test changed element if it was deleted	WITHOUT_CLASSIFICATION	0.9999999712636276	WITHOUT_CLASSIFICATION	2.8736372402825103E-8	DEFECT
/*     * @see javax.swing.AbstractListModel#fireContentsChanged(     *          Object, int, int)     */	WITHOUT_CLASSIFICATION	0.9999998861949377	WITHOUT_CLASSIFICATION	1.1380506222868319E-7	DEFECT
/*     * @see javax.swing.AbstractListModel#fireIntervalAdded(     *          Object, int, int)     */	WITHOUT_CLASSIFICATION	0.9999998911315762	WITHOUT_CLASSIFICATION	1.0886842377495895E-7	DEFECT
/*     * @see javax.swing.AbstractListModel#fireIntervalRemoved(     *          Object, int, int)     */	WITHOUT_CLASSIFICATION	0.9999998252345678	WITHOUT_CLASSIFICATION	1.7476543225158493E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999998476810591	WITHOUT_CLASSIFICATION	1.52318940811834E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel2#getSelectedModelElement()     */	WITHOUT_CLASSIFICATION	0.9999999652482693	WITHOUT_CLASSIFICATION	3.4751730654317625E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel2#propertyChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999999772097817	WITHOUT_CLASSIFICATION	2.2790218261686462E-8	DEFECT
/* Do nothing by design. */	WITHOUT_CLASSIFICATION	0.9999982048744624	WITHOUT_CLASSIFICATION	1.79512553743969E-6	DEFECT
/* Do nothing by default. */	WITHOUT_CLASSIFICATION	0.9999919340977799	WITHOUT_CLASSIFICATION	8.06590222026835E-6	DEFECT
// Allow null	WITHOUT_CLASSIFICATION	0.9999984607030457	WITHOUT_CLASSIFICATION	1.5392969544449303E-6	DEFECT
/*     * This is explained by WFR 2 of a StructuralFeature: The type of a     * StructuralFeature must be a Class, DataType, or Interface.     *      * @see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999992466499088	WITHOUT_CLASSIFICATION	7.533500911697148E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999998877828706	WITHOUT_CLASSIFICATION	1.1221712944461038E-7	DEFECT
// restricting types for tagged values	WITHOUT_CLASSIFICATION	0.9999980112272351	WITHOUT_CLASSIFICATION	1.9887727649410847E-6	DEFECT
// classifier is way too much in UML 2.x	WITHOUT_CLASSIFICATION	0.999995353563246	WITHOUT_CLASSIFICATION	4.646436753967397E-6	DEFECT
// the minimum set of standard types	WITHOUT_CLASSIFICATION	0.9999999768212489	WITHOUT_CLASSIFICATION	2.3178751075874295E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()     */	WITHOUT_CLASSIFICATION	0.999999969271671	WITHOUT_CLASSIFICATION	3.072832900518761E-8	DEFECT
/* Do nothing by default. */	WITHOUT_CLASSIFICATION	0.9999919340977799	WITHOUT_CLASSIFICATION	8.06590222026835E-6	DEFECT
/*     * @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994577075367	WITHOUT_CLASSIFICATION	5.422924631974628E-7	DEFECT
// keep them sorted	WITHOUT_CLASSIFICATION	0.9999998336127698	WITHOUT_CLASSIFICATION	1.6638723010756668E-7	DEFECT
// We got passed an unmodifiable List.  Copy it and sort the result	WITHOUT_CLASSIFICATION	0.9999987998519383	WITHOUT_CLASSIFICATION	1.2001480617432773E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#getExpression()     */	WITHOUT_CLASSIFICATION	0.9999999356696541	WITHOUT_CLASSIFICATION	6.433034591694181E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.999999934273208	WITHOUT_CLASSIFICATION	6.572679199456743E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#newExpression()     */	WITHOUT_CLASSIFICATION	0.9999998518618105	WITHOUT_CLASSIFICATION	1.4813818942978777E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999998731715852	WITHOUT_CLASSIFICATION	1.2682841484445137E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999998476810591	WITHOUT_CLASSIFICATION	1.52318940811834E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel2#getSelectedModelElement()     */	WITHOUT_CLASSIFICATION	0.9999999652482693	WITHOUT_CLASSIFICATION	3.4751730654317625E-8	DEFECT
/*         * @see java.awt.event.ActionListener#actionPerformed(         * java.awt.event.ActionEvent)         */	WITHOUT_CLASSIFICATION	0.9999999141788886	WITHOUT_CLASSIFICATION	8.582111147932973E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#addOtherModelEventListeners(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997319969215	WITHOUT_CLASSIFICATION	2.6800307848029565E-7	DEFECT
/* Make a copy of the modelelements: */	WITHOUT_CLASSIFICATION	0.9998174310501393	WITHOUT_CLASSIFICATION	1.8256894986062037E-4	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.99999980383871	WITHOUT_CLASSIFICATION	1.961612899416786E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()     */	WITHOUT_CLASSIFICATION	0.9999999245990254	WITHOUT_CLASSIFICATION	7.540097458287163E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.99999980383871	WITHOUT_CLASSIFICATION	1.961612899416786E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()     */	WITHOUT_CLASSIFICATION	0.9999999245990254	WITHOUT_CLASSIFICATION	7.540097458287163E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel2#isValidElement(     *         java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997422192739	WITHOUT_CLASSIFICATION	2.577807260292853E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999998731715852	WITHOUT_CLASSIFICATION	1.2682841484445137E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel2#getSelectedModelElement()     */	WITHOUT_CLASSIFICATION	0.9999999652482693	WITHOUT_CLASSIFICATION	3.4751730654317625E-8	DEFECT
// Add stereotypes submenu	WITHOUT_CLASSIFICATION	0.9999987247179042	WITHOUT_CLASSIFICATION	1.2752820957477508E-6	DEFECT
// the method	WITHOUT_CLASSIFICATION	0.9999700880718261	WITHOUT_CLASSIFICATION	2.9911928173886866E-5	DEFECT
// the selected operation	WITHOUT_CLASSIFICATION	0.9999994824517177	WITHOUT_CLASSIFICATION	5.175482824260214E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildPopup(javax.swing.JPopupMenu, int)     */	WITHOUT_CLASSIFICATION	0.9999998117037388	WITHOUT_CLASSIFICATION	1.882962612082895E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999993273772846	WITHOUT_CLASSIFICATION	6.726227153541044E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994577075367	WITHOUT_CLASSIFICATION	5.422924631974628E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#setTarget(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997240808167	WITHOUT_CLASSIFICATION	2.759191832427048E-7	DEFECT
// make sure we know it when a classifier is added as a base	WITHOUT_CLASSIFICATION	0.9999980469396237	WITHOUT_CLASSIFICATION	1.9530603764004406E-6	DEFECT
// make sure we know it when a classifier is added as a base	WITHOUT_CLASSIFICATION	0.9999980469396237	WITHOUT_CLASSIFICATION	1.9530603764004406E-6	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()     */	WITHOUT_CLASSIFICATION	0.999999969271671	WITHOUT_CLASSIFICATION	3.072832900518761E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999998877828706	WITHOUT_CLASSIFICATION	1.1221712944461038E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999998652327944	WITHOUT_CLASSIFICATION	1.3476720556370483E-7	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994577075367	WITHOUT_CLASSIFICATION	5.422924631974628E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999998652327944	WITHOUT_CLASSIFICATION	1.3476720556370483E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999998877828706	WITHOUT_CLASSIFICATION	1.1221712944461038E-7	DEFECT
/*         * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)         */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999998877828706	WITHOUT_CLASSIFICATION	1.1221712944461038E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()     */	WITHOUT_CLASSIFICATION	0.999999969271671	WITHOUT_CLASSIFICATION	3.072832900518761E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999998652327944	WITHOUT_CLASSIFICATION	1.3476720556370483E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#removeOtherModelEventListeners(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999081195621	WITHOUT_CLASSIFICATION	9.1880437822228E-8	DEFECT
/*         * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)         */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
// base is already set to this assoc...	WITHOUT_CLASSIFICATION	0.9999414125381533	WITHOUT_CLASSIFICATION	5.858746184681887E-5	DEFECT
/* This check is needed, otherwise the setbase()                 *  below gives an exception.*/	WITHOUT_CLASSIFICATION	0.9999997283531086	WITHOUT_CLASSIFICATION	2.7164689142286217E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
// Just in case the existing selected element is from elsewhere // make sure it is in the list	WITHOUT_CLASSIFICATION	0.9999998408436251	WITHOUT_CLASSIFICATION	1.591563747762577E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999995389565826	WITHOUT_CLASSIFICATION	4.610434174397081E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999998652327944	WITHOUT_CLASSIFICATION	1.3476720556370483E-7	DEFECT
/*         * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)         */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/* The selected value may be "" to              * clear the represented classifier. */	WITHOUT_CLASSIFICATION	0.9999999395184682	WITHOUT_CLASSIFICATION	6.048153172226885E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
//    private boolean mustRefresh;	WITHOUT_CLASSIFICATION	0.9999999054814662	WITHOUT_CLASSIFICATION	9.451853370574853E-8	DEFECT
//        mustRefresh = true;	WITHOUT_CLASSIFICATION	0.9999982159633498	WITHOUT_CLASSIFICATION	1.7840366502207003E-6	DEFECT
/* This should not happen. */	WITHOUT_CLASSIFICATION	0.9994834927094564	WITHOUT_CLASSIFICATION	5.165072905436592E-4	DEFECT
// if it has no language, then we assume it is not an instance of // OpaqueExpression, so we leave it null and handle elsewhere	WITHOUT_CLASSIFICATION	0.9999999581227467	WITHOUT_CLASSIFICATION	4.1877253428502476E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()     */	WITHOUT_CLASSIFICATION	0.9999999245990254	WITHOUT_CLASSIFICATION	7.540097458287163E-8	DEFECT
// /////////////////////////////////////// // Build the field // ///////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999750492805624	WITHOUT_CLASSIFICATION	2.495071943770058E-5	DEFECT
// /////////////////////////////////////// // Add field(s) to panel // ///////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999994538631861	WITHOUT_CLASSIFICATION	5.46136813866484E-7	DEFECT
// click on the already selected value must not call setValue	WITHOUT_CLASSIFICATION	0.9999928408488187	WITHOUT_CLASSIFICATION	7.159151181340522E-6	DEFECT
// The 2 Radios have only one information.	WITHOUT_CLASSIFICATION	0.9999966082123511	WITHOUT_CLASSIFICATION	3.3917876488390996E-6	DEFECT
// Update the model, and then notify	WITHOUT_CLASSIFICATION	0.9999968212754226	WITHOUT_CLASSIFICATION	3.178724577458109E-6	DEFECT
// When call by contructor : no one is selected	WITHOUT_CLASSIFICATION	0.9999625038415016	WITHOUT_CLASSIFICATION	3.749615849841053E-5	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
//    private boolean mustRefresh;	WITHOUT_CLASSIFICATION	0.9999999054814662	WITHOUT_CLASSIFICATION	9.451853370574853E-8	DEFECT
//        mustRefresh = true;	WITHOUT_CLASSIFICATION	0.9999982159633498	WITHOUT_CLASSIFICATION	1.7840366502207003E-6	DEFECT
/* This should not happen. */	WITHOUT_CLASSIFICATION	0.9994834927094564	WITHOUT_CLASSIFICATION	5.165072905436592E-4	DEFECT
/* If we do not set it to null first, then we get a MDR DebugException: */	WITHOUT_CLASSIFICATION	0.9998517036045811	WITHOUT_CLASSIFICATION	1.4829639541880723E-4	DEFECT
// Expressions are DataTypes, not independent model elements // be careful not to reuse them	WITHOUT_CLASSIFICATION	0.9999994932979885	WITHOUT_CLASSIFICATION	5.06702011511924E-7	DEFECT
// We need to to this otherwise there is no notification // and diagram isn't change	WITHOUT_CLASSIFICATION	0.9999978064297881	WITHOUT_CLASSIFICATION	2.193570211995626E-6	DEFECT
// needed for notification	WITHOUT_CLASSIFICATION	0.9999996224642124	WITHOUT_CLASSIFICATION	3.775357876241596E-7	DEFECT
// if the control is a panel, add it	WITHOUT_CLASSIFICATION	0.9999950099534143	WITHOUT_CLASSIFICATION	4.990046585609074E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999748478784519	WITHOUT_CLASSIFICATION	2.5152121548066763E-5	DEFECT
/* To be really sure, let's add the operation             * that is linked to the action in the model,             * too - if it is not listed yet.             * We need this, incase an operation is moved             * out of the package,             * or maybe with imported XMI...             */	WITHOUT_CLASSIFICATION	0.9999377313508184	WITHOUT_CLASSIFICATION	6.226864918161204E-5	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()     */	WITHOUT_CLASSIFICATION	0.999999969271671	WITHOUT_CLASSIFICATION	3.072832900518761E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.999999783150487	WITHOUT_CLASSIFICATION	2.1684951293738504E-7	DEFECT
/*         * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)         */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#getExpression()     */	WITHOUT_CLASSIFICATION	0.9999999356696541	WITHOUT_CLASSIFICATION	6.433034591694181E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.999999934273208	WITHOUT_CLASSIFICATION	6.572679199456743E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#newExpression()     */	WITHOUT_CLASSIFICATION	0.9999998518618105	WITHOUT_CLASSIFICATION	1.4813818942978777E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#getExpression()     */	WITHOUT_CLASSIFICATION	0.9999999356696541	WITHOUT_CLASSIFICATION	6.433034591694181E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.999999934273208	WITHOUT_CLASSIFICATION	6.572679199456743E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#newExpression()     */	WITHOUT_CLASSIFICATION	0.9999998518618105	WITHOUT_CLASSIFICATION	1.4813818942978777E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999998877828706	WITHOUT_CLASSIFICATION	1.1221712944461038E-7	DEFECT
// fill the list with items	WITHOUT_CLASSIFICATION	0.9999990961770222	WITHOUT_CLASSIFICATION	9.038229778139728E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999998652327944	WITHOUT_CLASSIFICATION	1.3476720556370483E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()     */	WITHOUT_CLASSIFICATION	0.999999969271671	WITHOUT_CLASSIFICATION	3.072832900518761E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
// in UML2, the target is already the "expression" (Opaque...)	WITHOUT_CLASSIFICATION	0.9999998464428325	WITHOUT_CLASSIFICATION	1.535571674803291E-7	DEFECT
// reuse Opaque..., just set it's attributes	WITHOUT_CLASSIFICATION	0.9999999096717456	WITHOUT_CLASSIFICATION	9.032825440125256E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
// Expressions are DataTypes, not independent model elements // be careful not to reuse them	WITHOUT_CLASSIFICATION	0.9999994932979885	WITHOUT_CLASSIFICATION	5.06702011511924E-7	DEFECT
// make it stretch vertically	WITHOUT_CLASSIFICATION	0.9999841925088959	WITHOUT_CLASSIFICATION	1.580749110401849E-5	DEFECT
/*     * @see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.     * DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999995398056197	WITHOUT_CLASSIFICATION	4.601943803412429E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#getExpression()     */	WITHOUT_CLASSIFICATION	0.9999999356696541	WITHOUT_CLASSIFICATION	6.433034591694181E-8	DEFECT
/* If we do not set it to null first, then we get a MDR DebugException: */	WITHOUT_CLASSIFICATION	0.9998517036045811	WITHOUT_CLASSIFICATION	1.4829639541880723E-4	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#newExpression()     */	WITHOUT_CLASSIFICATION	0.9999998518618105	WITHOUT_CLASSIFICATION	1.4813818942978777E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(     *         java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999992925531314	WITHOUT_CLASSIFICATION	7.074468686532797E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999999678751464	WITHOUT_CLASSIFICATION	3.2124853621143575E-8	DEFECT
/*     * @see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999997746694292	WITHOUT_CLASSIFICATION	2.2533057064832407E-7	DEFECT
/*     * @see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999994446406183	WITHOUT_CLASSIFICATION	5.553593817324716E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999999678751464	WITHOUT_CLASSIFICATION	3.2124853621143575E-8	DEFECT
/*     * @see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999997746694292	WITHOUT_CLASSIFICATION	2.2533057064832407E-7	DEFECT
/*     * @see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999994446406183	WITHOUT_CLASSIFICATION	5.553593817324716E-7	DEFECT
// make it stretch vertically	WITHOUT_CLASSIFICATION	0.9999841925088959	WITHOUT_CLASSIFICATION	1.580749110401849E-5	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBox#doIt(ActionEvent)     */	WITHOUT_CLASSIFICATION	0.9999999501676685	WITHOUT_CLASSIFICATION	4.983233140338289E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
//p  = new UMLValueSpecificationPanel(model, propertyName);	WITHOUT_CLASSIFICATION	0.9999987297899801	WITHOUT_CLASSIFICATION	1.270210020003417E-6	DEFECT
/*MModelElement*/	WITHOUT_CLASSIFICATION	0.9997866036536379	WITHOUT_CLASSIFICATION	2.1339634636203863E-4	DEFECT
// if not, it is a control and must be labeled...	WITHOUT_CLASSIFICATION	0.999998093357565	WITHOUT_CLASSIFICATION	1.906642435089052E-6	DEFECT
// only association end has an aggregation option box	WITHOUT_CLASSIFICATION	0.9999924647400888	WITHOUT_CLASSIFICATION	7.535259911193401E-6	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
// Create it [Here, OpaqueExpression which is the first // choice] // Note that if we edit the Initial value in the diagram // (double clic) // it was replaced by an OpaqueExpression	WITHOUT_CLASSIFICATION	0.9999999983029487	WITHOUT_CLASSIFICATION	1.697051159301614E-9	DEFECT
// Destroy it	WITHOUT_CLASSIFICATION	0.9999986857953912	WITHOUT_CLASSIFICATION	1.3142046087577352E-6	DEFECT
// title = "" because already done for Optional	WITHOUT_CLASSIFICATION	0.9999999212558518	WITHOUT_CLASSIFICATION	7.8744148215907E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()     */	WITHOUT_CLASSIFICATION	0.999999969271671	WITHOUT_CLASSIFICATION	3.072832900518761E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999998877828706	WITHOUT_CLASSIFICATION	1.1221712944461038E-7	DEFECT
// We got passed an unmodifiable List.  Copy it and sort the result	WITHOUT_CLASSIFICATION	0.9999987998519383	WITHOUT_CLASSIFICATION	1.2001480617432773E-6	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999998652327944	WITHOUT_CLASSIFICATION	1.3476720556370483E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
// Force the parent to redraw	WITHOUT_CLASSIFICATION	0.9999995280914519	WITHOUT_CLASSIFICATION	4.719085480468747E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999748478784519	WITHOUT_CLASSIFICATION	2.5152121548066763E-5	DEFECT
// Do not set buildingModel = false here, // otherwise the action for selection is performed.	WITHOUT_CLASSIFICATION	0.9999454942457638	WITHOUT_CLASSIFICATION	5.4505754236096E-5	DEFECT
/* Add new listeners: */	WITHOUT_CLASSIFICATION	0.9999288768090001	WITHOUT_CLASSIFICATION	7.112319099995616E-5	DEFECT
// makes sure we can select 'none'	WITHOUT_CLASSIFICATION	0.999999472552788	WITHOUT_CLASSIFICATION	5.274472120945075E-7	DEFECT
// TODO: For large lists, this is doing a linear search of literally thousands of elements	WITHOUT_CLASSIFICATION	0.8296561292187464	DEFECT	0.17034387078125357	WITHOUT_CLASSIFICATION
/* TODO: Here too? */	WITHOUT_CLASSIFICATION	0.6842972271221248	DEFECT	0.3157027728778751	WITHOUT_CLASSIFICATION
// Check against "" is needed for backward // compatibility.  Don't remove without // checking subclasses and warning downstream // developers - tfm - 20081211	WITHOUT_CLASSIFICATION	0.9999982111180645	WITHOUT_CLASSIFICATION	1.7888819354609504E-6	DEFECT
// start of interval	WITHOUT_CLASSIFICATION	0.9999999518043472	WITHOUT_CLASSIFICATION	4.819565283491335E-8	DEFECT
// end of interval	WITHOUT_CLASSIFICATION	0.9999994730888787	WITHOUT_CLASSIFICATION	5.269111213021547E-7	DEFECT
// in middle of interval	WITHOUT_CLASSIFICATION	0.9999989265564628	WITHOUT_CLASSIFICATION	1.0734435371108133E-6	DEFECT
// Allow listening to other elements:	WITHOUT_CLASSIFICATION	0.9999999287375095	WITHOUT_CLASSIFICATION	7.12624904509216E-8	DEFECT
// makes sure we can select 'none'	WITHOUT_CLASSIFICATION	0.999999472552788	WITHOUT_CLASSIFICATION	5.274472120945075E-7	DEFECT
/* Add new listeners: */	WITHOUT_CLASSIFICATION	0.9999288768090001	WITHOUT_CLASSIFICATION	7.112319099995616E-5	DEFECT
// Don't try to test this if we're removing the element	WITHOUT_CLASSIFICATION	0.9999968109895122	WITHOUT_CLASSIFICATION	3.189010487666494E-6	DEFECT
// we tried to remove a value	WITHOUT_CLASSIFICATION	0.9999990543152152	WITHOUT_CLASSIFICATION	9.456847848465782E-7	DEFECT
// It would be better if we didn't need the container to get // the target. This constructor can have zero parameters as // soon as we improve targetChanged.	WITHOUT_CLASSIFICATION	0.9999990297888984	WITHOUT_CLASSIFICATION	9.702111016492897E-7	DEFECT
// Allow listening to other elements:	WITHOUT_CLASSIFICATION	0.9999999287375095	WITHOUT_CLASSIFICATION	7.12624904509216E-8	DEFECT
/*     * @see javax.swing.ListModel#getElementAt(int)     */	WITHOUT_CLASSIFICATION	0.9999984246911686	WITHOUT_CLASSIFICATION	1.575308831359761E-6	DEFECT
/*     * @see javax.swing.ListModel#getSize()     */	WITHOUT_CLASSIFICATION	0.9999988090519235	WITHOUT_CLASSIFICATION	1.1909480765454268E-6	DEFECT
// catch callers attempting to use one without other	WITHOUT_CLASSIFICATION	0.9999995824534456	WITHOUT_CLASSIFICATION	4.175465544166374E-7	DEFECT
/*     * @see javax.swing.ComboBoxModel#setSelectedItem(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997056466392	WITHOUT_CLASSIFICATION	2.9435336084268396E-7	DEFECT
/*     * @see javax.swing.ComboBoxModel#getSelectedItem()     */	WITHOUT_CLASSIFICATION	0.9999997918748412	WITHOUT_CLASSIFICATION	2.081251587840593E-7	DEFECT
/*     * @see javax.swing.AbstractListModel#fireContentsChanged(     *          Object, int, int)     */	WITHOUT_CLASSIFICATION	0.9999998861949377	WITHOUT_CLASSIFICATION	1.1380506222868319E-7	DEFECT
/*     * @see javax.swing.AbstractListModel#fireIntervalAdded(     *          Object, int, int)     */	WITHOUT_CLASSIFICATION	0.9999998911315762	WITHOUT_CLASSIFICATION	1.0886842377495895E-7	DEFECT
/*     * @see javax.swing.AbstractListModel#fireIntervalRemoved(     *          Object, int, int)     */	WITHOUT_CLASSIFICATION	0.9999998252345678	WITHOUT_CLASSIFICATION	1.7476543225158493E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/* Do nothing by default. */	WITHOUT_CLASSIFICATION	0.9999919340977799	WITHOUT_CLASSIFICATION	8.06590222026835E-6	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.99999980383871	WITHOUT_CLASSIFICATION	1.961612899416786E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()     */	WITHOUT_CLASSIFICATION	0.9999999245990254	WITHOUT_CLASSIFICATION	7.540097458287163E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994577075367	WITHOUT_CLASSIFICATION	5.422924631974628E-7	DEFECT
// Mutators hold write lock & will deadlock if use is not thread safe	WITHOUT_CLASSIFICATION	0.9999886151167381	WITHOUT_CLASSIFICATION	1.1384883261922635E-5	DEFECT
/*     * @see javax.swing.text.Document#remove(int, int)     */	WITHOUT_CLASSIFICATION	0.9999995360967645	WITHOUT_CLASSIFICATION	4.6390323546114464E-7	DEFECT
// Mutators hold write lock & will deadlock // if use is not thread-safe	WITHOUT_CLASSIFICATION	0.9999724675901531	WITHOUT_CLASSIFICATION	2.7532409846980027E-5	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999998652327944	WITHOUT_CLASSIFICATION	1.3476720556370483E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()     */	WITHOUT_CLASSIFICATION	0.999999969271671	WITHOUT_CLASSIFICATION	3.072832900518761E-8	DEFECT
/* Do nothing by design. */	WITHOUT_CLASSIFICATION	0.9999982048744624	WITHOUT_CLASSIFICATION	1.79512553743969E-6	DEFECT
// NOTE: This may be called from a different thread, so we need to be // careful of the threading restrictions imposed by AbstractDocument // for mutators to be sure we don't deadlock.	WITHOUT_CLASSIFICATION	0.9999999994627642	WITHOUT_CLASSIFICATION	5.372358651036389E-10	DEFECT
/*         * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)         */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999998877828706	WITHOUT_CLASSIFICATION	1.1221712944461038E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999998652327944	WITHOUT_CLASSIFICATION	1.3476720556370483E-7	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// Mutators hold write lock & will deadlock if use is not thread safe	WITHOUT_CLASSIFICATION	0.9999886151167381	WITHOUT_CLASSIFICATION	1.1384883261922635E-5	DEFECT
/*         * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)         */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLCheckBox#buildModel()     */	WITHOUT_CLASSIFICATION	0.9999998648572124	WITHOUT_CLASSIFICATION	1.351427875735206E-7	DEFECT
/*         * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)         */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
//super(new LabelledLayout());	WITHOUT_CLASSIFICATION	0.9999996917690087	WITHOUT_CLASSIFICATION	3.082309912442391E-7	DEFECT
// c.insets = new Insets(1, 1, 1, 1);	WITHOUT_CLASSIFICATION	0.9999995921557809	WITHOUT_CLASSIFICATION	4.078442191358161E-7	DEFECT
// Get the list: OpaqueExpression, LiteralString,...	WITHOUT_CLASSIFICATION	0.9999732532636733	WITHOUT_CLASSIFICATION	2.674673632664203E-5	DEFECT
// By default, the first value of the combobox is selected.	WITHOUT_CLASSIFICATION	0.9999991415088795	WITHOUT_CLASSIFICATION	8.584911205252003E-7	DEFECT
// Get current InitialValue	WITHOUT_CLASSIFICATION	0.9999993926053315	WITHOUT_CLASSIFICATION	6.073946684274816E-7	DEFECT
// Select the Current type in the combobox	WITHOUT_CLASSIFICATION	0.9999950173438114	WITHOUT_CLASSIFICATION	4.982656188682595E-6	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#getExpression()     */	WITHOUT_CLASSIFICATION	0.9999999356696541	WITHOUT_CLASSIFICATION	6.433034591694181E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.999999934273208	WITHOUT_CLASSIFICATION	6.572679199456743E-8	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
// default : 0 => OpaqueExpression // set to 1 for test	WITHOUT_CLASSIFICATION	0.99999987713637	WITHOUT_CLASSIFICATION	1.228636301460833E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#newExpression()     */	WITHOUT_CLASSIFICATION	0.9999998518618105	WITHOUT_CLASSIFICATION	1.4813818942978777E-7	DEFECT
/* If we do not set it to null first, then we get a MDR DebugException: */	WITHOUT_CLASSIFICATION	0.9998517036045811	WITHOUT_CLASSIFICATION	1.4829639541880723E-4	DEFECT
/*     * @see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999997746694292	WITHOUT_CLASSIFICATION	2.2533057064832407E-7	DEFECT
/*     * @see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999994446406183	WITHOUT_CLASSIFICATION	5.553593817324716E-7	DEFECT
// Create the body and language Field	WITHOUT_CLASSIFICATION	0.9999998289705752	WITHOUT_CLASSIFICATION	1.710294248465261E-7	DEFECT
// Create other panel element	WITHOUT_CLASSIFICATION	0.9999995551326611	WITHOUT_CLASSIFICATION	4.4486733888961204E-7	DEFECT
// create Panel containing the previous field	WITHOUT_CLASSIFICATION	0.9999996548588642	WITHOUT_CLASSIFICATION	3.451411358032248E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999998877828706	WITHOUT_CLASSIFICATION	1.1221712944461038E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999998877828706	WITHOUT_CLASSIFICATION	1.1221712944461038E-7	DEFECT
// Our comparator will throw an InvalidElementException if the old // list contains deleted elements (eg after a new project is loaded) // so remove all the old contents first	WITHOUT_CLASSIFICATION	0.999999973099451	WITHOUT_CLASSIFICATION	2.6900549008411784E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()     */	WITHOUT_CLASSIFICATION	0.999999969271671	WITHOUT_CLASSIFICATION	3.072832900518761E-8	DEFECT
/*         * @see java.awt.event.ActionListener#actionPerformed(         * java.awt.event.ActionEvent)         */	WITHOUT_CLASSIFICATION	0.9999999141788886	WITHOUT_CLASSIFICATION	8.582111147932973E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999998652327944	WITHOUT_CLASSIFICATION	1.3476720556370483E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()     */	WITHOUT_CLASSIFICATION	0.999999969271671	WITHOUT_CLASSIFICATION	3.072832900518761E-8	DEFECT
// make it stretch vertically	WITHOUT_CLASSIFICATION	0.9999841925088959	WITHOUT_CLASSIFICATION	1.580749110401849E-5	DEFECT
/*        * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)        */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/* There are no composite states, so this will work: */	WITHOUT_CLASSIFICATION	0.98971065659426	WITHOUT_CLASSIFICATION	0.010289343405739861	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()     */	WITHOUT_CLASSIFICATION	0.9999999245990254	WITHOUT_CLASSIFICATION	7.540097458287163E-8	DEFECT
/*     * @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994577075367	WITHOUT_CLASSIFICATION	5.422924631974628E-7	DEFECT
// Allow null	WITHOUT_CLASSIFICATION	0.9999984607030457	WITHOUT_CLASSIFICATION	1.5392969544449303E-6	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999998652327944	WITHOUT_CLASSIFICATION	1.3476720556370483E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999998877828706	WITHOUT_CLASSIFICATION	1.1221712944461038E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()     */	WITHOUT_CLASSIFICATION	0.999999969271671	WITHOUT_CLASSIFICATION	3.072832900518761E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999995389565826	WITHOUT_CLASSIFICATION	4.610434174397081E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.99999980383871	WITHOUT_CLASSIFICATION	1.961612899416786E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()     */	WITHOUT_CLASSIFICATION	0.9999999245990254	WITHOUT_CLASSIFICATION	7.540097458287163E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999993273772846	WITHOUT_CLASSIFICATION	6.726227153541044E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994577075367	WITHOUT_CLASSIFICATION	5.422924631974628E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#setTarget(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997240808167	WITHOUT_CLASSIFICATION	2.759191832427048E-7	DEFECT
// make sure we know it when a classifier is added as a base	WITHOUT_CLASSIFICATION	0.9999980469396237	WITHOUT_CLASSIFICATION	1.9530603764004406E-6	DEFECT
// make sure we know it when a classifier is added as a base	WITHOUT_CLASSIFICATION	0.9999980469396237	WITHOUT_CLASSIFICATION	1.9530603764004406E-6	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()     */	WITHOUT_CLASSIFICATION	0.999999969271671	WITHOUT_CLASSIFICATION	3.072832900518761E-8	DEFECT
// make it stretch vertically	WITHOUT_CLASSIFICATION	0.9999841925088959	WITHOUT_CLASSIFICATION	1.580749110401849E-5	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999995389565826	WITHOUT_CLASSIFICATION	4.610434174397081E-7	DEFECT
// Get all classifiers in our model // TODO: We need the property panels to have some reference to the // project they belong to instead of using deprecated functionality	WITHOUT_CLASSIFICATION	0.8488825853898264	WITHOUT_CLASSIFICATION	0.15111741461017356	DEFECT
// Get all classifiers in all top level packages of all profiles	WITHOUT_CLASSIFICATION	0.999999894268876	WITHOUT_CLASSIFICATION	1.0573112395267125E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999998652327944	WITHOUT_CLASSIFICATION	1.3476720556370483E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()     */	WITHOUT_CLASSIFICATION	0.999999969271671	WITHOUT_CLASSIFICATION	3.072832900518761E-8	DEFECT
/*     * @see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999999678751464	WITHOUT_CLASSIFICATION	3.2124853621143575E-8	DEFECT
/*     * @see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999997746694292	WITHOUT_CLASSIFICATION	2.2533057064832407E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999993273772846	WITHOUT_CLASSIFICATION	6.726227153541044E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999998877828706	WITHOUT_CLASSIFICATION	1.1221712944461038E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()     */	WITHOUT_CLASSIFICATION	0.999999969271671	WITHOUT_CLASSIFICATION	3.072832900518761E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.999999783150487	WITHOUT_CLASSIFICATION	2.1684951293738504E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999995389565826	WITHOUT_CLASSIFICATION	4.610434174397081E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999998652327944	WITHOUT_CLASSIFICATION	1.3476720556370483E-7	DEFECT
/* The selected value may be "" to              * clear the represented operation. */	WITHOUT_CLASSIFICATION	0.9999999743314992	WITHOUT_CLASSIFICATION	2.5668500777828816E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.99999980383871	WITHOUT_CLASSIFICATION	1.961612899416786E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()     */	WITHOUT_CLASSIFICATION	0.9999999245990254	WITHOUT_CLASSIFICATION	7.540097458287163E-8	DEFECT
// ignored - we just skipped inserting it in our document	WITHOUT_CLASSIFICATION	0.9999999716841552	WITHOUT_CLASSIFICATION	2.8315844893751754E-8	DEFECT
// Allow null	WITHOUT_CLASSIFICATION	0.9999984607030457	WITHOUT_CLASSIFICATION	1.5392969544449303E-6	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999998652327944	WITHOUT_CLASSIFICATION	1.3476720556370483E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999998877828706	WITHOUT_CLASSIFICATION	1.1221712944461038E-7	DEFECT
// Make sure it's parseable as an number	WITHOUT_CLASSIFICATION	0.9999998971088438	WITHOUT_CLASSIFICATION	1.0289115619772968E-7	DEFECT
/*         * @see javax.swing.ComboBoxEditor#setItem(java.lang.Object)         */	WITHOUT_CLASSIFICATION	0.9999986305252113	WITHOUT_CLASSIFICATION	1.3694747886392066E-6	DEFECT
// we don't want to show some nasty gray background // color, now do we?	WITHOUT_CLASSIFICATION	0.9999972160012949	WITHOUT_CLASSIFICATION	2.783998705004455E-6	DEFECT
/*         * @see javax.swing.ComboBoxEditor#getEditorComponent()         */	WITHOUT_CLASSIFICATION	0.9999998717985091	WITHOUT_CLASSIFICATION	1.2820149083286505E-7	DEFECT
/*         * @see javax.swing.ComboBoxEditor#addActionListener(java.awt.event.ActionListener)         */	WITHOUT_CLASSIFICATION	0.9999997848480922	WITHOUT_CLASSIFICATION	2.1515190780888462E-7	DEFECT
/*         * @see javax.swing.ComboBoxEditor#removeActionListener(java.awt.event.ActionListener)         */	WITHOUT_CLASSIFICATION	0.9999997390040163	WITHOUT_CLASSIFICATION	2.609959837689289E-7	DEFECT
/*         * @see javax.swing.ComboBoxEditor#selectAll()         */	WITHOUT_CLASSIFICATION	0.9999990761618796	WITHOUT_CLASSIFICATION	9.238381205664407E-7	DEFECT
/*         * @see javax.swing.ComboBoxEditor#getItem()         */	WITHOUT_CLASSIFICATION	0.9999992025121932	WITHOUT_CLASSIFICATION	7.974878067151366E-7	DEFECT
// we don't want to show some nasty gray background // color, now do we?	WITHOUT_CLASSIFICATION	0.9999972160012949	WITHOUT_CLASSIFICATION	2.783998705004455E-6	DEFECT
// we don't want to show some nasty gray background // color, now do we?	WITHOUT_CLASSIFICATION	0.9999972160012949	WITHOUT_CLASSIFICATION	2.783998705004455E-6	DEFECT
// necessary to create distance between // the textfield and the icon.	WITHOUT_CLASSIFICATION	0.9999999978872368	WITHOUT_CLASSIFICATION	2.1127631114440316E-9	DEFECT
// necessary to create distance between // the textfield and the icon.	WITHOUT_CLASSIFICATION	0.9999999978872368	WITHOUT_CLASSIFICATION	2.1127631114440316E-9	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBox2#UMLComboBox2( UMLComboBoxModel,     *      Action)     */	WITHOUT_CLASSIFICATION	0.9999999639012811	WITHOUT_CLASSIFICATION	3.6098718870301446E-8	DEFECT
// next statement is necessary to update the textfield // if the selection is equal to what was allready // selected	WITHOUT_CLASSIFICATION	0.9999999998346808	WITHOUT_CLASSIFICATION	1.6531924122714977E-10	DEFECT
/*     * @see java.awt.event.FocusListener#focusGained(java.awt.event.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999999269504332	WITHOUT_CLASSIFICATION	7.30495668081183E-8	DEFECT
/*         * @see javax.swing.ComboBoxEditor#setItem(java.lang.Object)         */	WITHOUT_CLASSIFICATION	0.9999986305252113	WITHOUT_CLASSIFICATION	1.3694747886392066E-6	DEFECT
/*         * @see javax.swing.ComboBoxEditor#getEditorComponent()         */	WITHOUT_CLASSIFICATION	0.9999998717985091	WITHOUT_CLASSIFICATION	1.2820149083286505E-7	DEFECT
/*         * @see javax.swing.ComboBoxEditor#addActionListener(java.awt.event.ActionListener)         */	WITHOUT_CLASSIFICATION	0.9999997848480922	WITHOUT_CLASSIFICATION	2.1515190780888462E-7	DEFECT
/*         * @see javax.swing.ComboBoxEditor#removeActionListener(java.awt.event.ActionListener)         */	WITHOUT_CLASSIFICATION	0.9999997390040163	WITHOUT_CLASSIFICATION	2.609959837689289E-7	DEFECT
/*         * @see javax.swing.ComboBoxEditor#selectAll()         */	WITHOUT_CLASSIFICATION	0.9999990761618796	WITHOUT_CLASSIFICATION	9.238381205664407E-7	DEFECT
/*         * @see javax.swing.ComboBoxEditor#getItem()         */	WITHOUT_CLASSIFICATION	0.9999992025121932	WITHOUT_CLASSIFICATION	7.974878067151366E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
// Temporary until SimpleListModel is used for all	WITHOUT_CLASSIFICATION	0.9999962244153007	WITHOUT_CLASSIFICATION	3.775584699439529E-6	DEFECT
// Temporary until SimpleListModel is used for all	WITHOUT_CLASSIFICATION	0.9999962244153007	WITHOUT_CLASSIFICATION	3.775584699439529E-6	DEFECT
// Create popup tool if we have a single row	WITHOUT_CLASSIFICATION	0.9999999794295601	WITHOUT_CLASSIFICATION	2.057043988778563E-8	DEFECT
// Create add and remove buttons if needed first	WITHOUT_CLASSIFICATION	0.9999994136156201	WITHOUT_CLASSIFICATION	5.863843799478911E-7	DEFECT
// then any new buttons	WITHOUT_CLASSIFICATION	0.9999699777469054	WITHOUT_CLASSIFICATION	3.002225309461649E-5	DEFECT
// Pushing this to the end of the AWT thread seems to be the only // way to get this to update correctly	WITHOUT_CLASSIFICATION	0.9998514388362345	WITHOUT_CLASSIFICATION	1.4856116376555948E-4	DEFECT
// button action:	WITHOUT_CLASSIFICATION	0.9999821888303042	WITHOUT_CLASSIFICATION	1.781116969579013E-5	DEFECT
/*     * @see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998353954294	WITHOUT_CLASSIFICATION	1.6460457068653385E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998951464171	WITHOUT_CLASSIFICATION	1.0485358285635044E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.999999926677169	WITHOUT_CLASSIFICATION	7.332283094417994E-8	DEFECT
/*     * @see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998995536239	WITHOUT_CLASSIFICATION	1.0044637608451965E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999995389565826	WITHOUT_CLASSIFICATION	4.610434174397081E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
// TODO: Probably really want to cancel editing //((FigTextEditor) focusOwner).cancelEditing();	WITHOUT_CLASSIFICATION	0.8107138411976952	WITHOUT_CLASSIFICATION	0.1892861588023047	DEFECT
// The 5 main component : 2 label, a panel for langage , a panel with // button, a textarea	WITHOUT_CLASSIFICATION	0.9999980225897297	WITHOUT_CLASSIFICATION	1.9774102702843774E-6	DEFECT
// Translator.localize("button.delete")	WITHOUT_CLASSIFICATION	0.999999929811138	WITHOUT_CLASSIFICATION	7.018886190870779E-8	DEFECT
// Copy previous element	WITHOUT_CLASSIFICATION	0.9999989475590332	WITHOUT_CLASSIFICATION	1.0524409668369169E-6	DEFECT
// Copy next element	WITHOUT_CLASSIFICATION	0.9999991535400801	WITHOUT_CLASSIFICATION	8.464599199009998E-7	DEFECT
// Translator.localize("button.move-up")	WITHOUT_CLASSIFICATION	0.999999788793569	WITHOUT_CLASSIFICATION	2.1120643095632126E-7	DEFECT
// Copy in memory the current	WITHOUT_CLASSIFICATION	0.9999817246252616	WITHOUT_CLASSIFICATION	1.827537473842434E-5	DEFECT
// Copy the previous value in the current	WITHOUT_CLASSIFICATION	0.9999995726860679	WITHOUT_CLASSIFICATION	4.2731393208126757E-7	DEFECT
// Copy the current in the previous	WITHOUT_CLASSIFICATION	0.9999998578390942	WITHOUT_CLASSIFICATION	1.421609058487319E-7	DEFECT
// Copy in memory the current	WITHOUT_CLASSIFICATION	0.9999817246252616	WITHOUT_CLASSIFICATION	1.827537473842434E-5	DEFECT
// Copy the next value in the current	WITHOUT_CLASSIFICATION	0.9999995562503131	WITHOUT_CLASSIFICATION	4.437496869221927E-7	DEFECT
// Copy the current in the next	WITHOUT_CLASSIFICATION	0.999999749719697	WITHOUT_CLASSIFICATION	2.502803030467483E-7	DEFECT
// Layout	WITHOUT_CLASSIFICATION	0.9999961146328664	WITHOUT_CLASSIFICATION	3.885367133557626E-6	DEFECT
// The 2 component: a textField and a list	WITHOUT_CLASSIFICATION	0.9999969460091528	WITHOUT_CLASSIFICATION	3.0539908472214286E-6	DEFECT
// Layout	WITHOUT_CLASSIFICATION	0.9999961146328664	WITHOUT_CLASSIFICATION	3.885367133557626E-6	DEFECT
// Extract the icon that is used by the tree control // for the current look and feel	WITHOUT_CLASSIFICATION	0.9999994198103171	WITHOUT_CLASSIFICATION	5.801896828383576E-7	DEFECT
// Add a new entry in the list and select it. // Translator.localize("button.add") // +	WITHOUT_CLASSIFICATION	0.999999966350452	WITHOUT_CLASSIFICATION	3.3649548101453664E-8	DEFECT
// necessary to create distance between // the textfield and the icon.	WITHOUT_CLASSIFICATION	0.9999999978872368	WITHOUT_CLASSIFICATION	2.1127631114440316E-9	DEFECT
// Eclipse UML2 implementation classes often start with "UML" //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999979138327488	WITHOUT_CLASSIFICATION	2.086167251189731E-6	DEFECT
// Eclipse UML2 implementation classes end with "Impl" //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999815634346808	WITHOUT_CLASSIFICATION	1.8436565319158047E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ // Make sure we have a recognized file extension //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999998238799326	WITHOUT_CLASSIFICATION	1.7612006740402124E-7	DEFECT
// If the eUML.resources system property is defined then we are in a // stand alone application, else we're in an Eclipse plug in. // The eUML.resource should contain the path to the // org.eclipse.uml2.uml.resource jar plugin. //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999993009088324	WITHOUT_CLASSIFICATION	6.990911676081439E-7	DEFECT
// slope of the line we're finding the normal to // is slope, and the normal is the negative reciprocal // slope is (p1.y - p2.y) / (p1.x - p2.x) // so recip is - (p1.x - p2.x) / (p1.y - p2.y)	WITHOUT_CLASSIFICATION	0.9999997444410677	WITHOUT_CLASSIFICATION	2.555589323491185E-7	DEFECT
// UML1.4 only	WITHOUT_CLASSIFICATION	0.9999881317728233	WITHOUT_CLASSIFICATION	1.1868227176728049E-5	DEFECT
/*     * @see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.999999926677169	WITHOUT_CLASSIFICATION	7.332283094417994E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#getExpression()     */	WITHOUT_CLASSIFICATION	0.9999999356696541	WITHOUT_CLASSIFICATION	6.433034591694181E-8	DEFECT
// Set the child components to the heights in the array list // calculating the height of any proportional component on the // fly.	WITHOUT_CLASSIFICATION	0.9999985137638568	WITHOUT_CLASSIFICATION	1.4862361430876228E-6	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*             * @see org.argouml.uml.ui.ActionSetMultiplicity#setSelectedItem(             *      java.lang.Object, java.lang.Object)             */	WITHOUT_CLASSIFICATION	0.99999994081596	WITHOUT_CLASSIFICATION	5.9184040131618744E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
// If we have a model but no list then build the list with // preferred constructor. Eventually all lists should be built // this way.	WITHOUT_CLASSIFICATION	0.9998753581053613	WITHOUT_CLASSIFICATION	1.2464189463879663E-4	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see javax.swing.DefaultListModel#addElement(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999986947564112	WITHOUT_CLASSIFICATION	1.3052435888098304E-6	DEFECT
/*         * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)         */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*	WITHOUT_CLASSIFICATION	0.9917225237718192	WITHOUT_CLASSIFICATION	0.008277476228180789	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#removeOtherModelEventListeners(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997359219678	WITHOUT_CLASSIFICATION	2.640780322663188E-7	DEFECT
/*     * @see java.beans.PropertyChangeListener#propertyChange(     *         java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994550718594	WITHOUT_CLASSIFICATION	5.44928140591602E-7	DEFECT
/*         * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)         */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
// If the component is a JLabel which has another // component assigned then position/size the label and // calculate the size of the registered component	WITHOUT_CLASSIFICATION	0.9999999839948455	WITHOUT_CLASSIFICATION	1.600515452806237E-8	DEFECT
// If the child component is resizable then // we don't know it's actual size yet. // It will be calculated later as a // proportion of the available left over // space.  For now this is flagged as zero.	WITHOUT_CLASSIFICATION	0.9999888758989925	WITHOUT_CLASSIFICATION	1.112410100737782E-5	DEFECT
// If a preferred height is not given or is // the same as the minimum height then fix the // height of this row.	WITHOUT_CLASSIFICATION	0.9892536343766634	WITHOUT_CLASSIFICATION	0.010746365623336756	DEFECT
/*         * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)         */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()     */	WITHOUT_CLASSIFICATION	0.999999969271671	WITHOUT_CLASSIFICATION	3.072832900518761E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()     */	WITHOUT_CLASSIFICATION	0.999999969271671	WITHOUT_CLASSIFICATION	3.072832900518761E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.99999980383871	WITHOUT_CLASSIFICATION	1.961612899416786E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.     * DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999998132815257	WITHOUT_CLASSIFICATION	1.8671847433936152E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.999999934273208	WITHOUT_CLASSIFICATION	6.572679199456743E-8	DEFECT
// We only have this here until we have stereotypes // list on property panel	WITHOUT_CLASSIFICATION	0.9999480371974407	WITHOUT_CLASSIFICATION	5.1962802559301603E-5	DEFECT
/*         * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)         */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999993273772846	WITHOUT_CLASSIFICATION	6.726227153541044E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994577075367	WITHOUT_CLASSIFICATION	5.422924631974628E-7	DEFECT
/*     * The property value has changed so rebuild our view.     * @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999999822531742	WITHOUT_CLASSIFICATION	1.7746825841891124E-8	DEFECT
/*     * @see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999999678751464	WITHOUT_CLASSIFICATION	3.2124853621143575E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999998652327944	WITHOUT_CLASSIFICATION	1.3476720556370483E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.99999980383871	WITHOUT_CLASSIFICATION	1.961612899416786E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel#isValidElement(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999994048836691	WITHOUT_CLASSIFICATION	5.951163308945722E-7	DEFECT
/* So, we found a Classifier                     * that is not a ClassifierInState.                     * And at least one state has been selected.                     * Well, let's correct that:                     */	WITHOUT_CLASSIFICATION	0.9979120952898004	WITHOUT_CLASSIFICATION	0.002087904710199565	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*         * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)         */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999994446406183	WITHOUT_CLASSIFICATION	5.553593817324716E-7	DEFECT
/*         * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)         */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*         * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)         */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()     */	WITHOUT_CLASSIFICATION	0.999999969271671	WITHOUT_CLASSIFICATION	3.072832900518761E-8	DEFECT
// Not in UML1.4	WITHOUT_CLASSIFICATION	0.9999913620639427	WITHOUT_CLASSIFICATION	8.637936057408028E-6	DEFECT
// Not in UML1.4	WITHOUT_CLASSIFICATION	0.9999913620639427	WITHOUT_CLASSIFICATION	8.637936057408028E-6	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBox#UMLComboBox( UMLComboBoxModel,     *      Action, boolean)     */	WITHOUT_CLASSIFICATION	0.9999999933029367	WITHOUT_CLASSIFICATION	6.69706339644988E-9	DEFECT
/*     * @see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999999368964285	WITHOUT_CLASSIFICATION	6.310357143005751E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
// Layout	WITHOUT_CLASSIFICATION	0.9999961146328664	WITHOUT_CLASSIFICATION	3.885367133557626E-6	DEFECT
// Language has changed	WITHOUT_CLASSIFICATION	0.9999997439999315	WITHOUT_CLASSIFICATION	2.560000685437103E-7	DEFECT
// Translator.localize("button.move-down")	WITHOUT_CLASSIFICATION	0.9999997169972357	WITHOUT_CLASSIFICATION	2.8300276437682357E-7	DEFECT
//        Object icon = ResourceLoaderWrapper.lookupIcon(s); //        putValue(Action.NAME, Translator.localize(s)); //        putValue(Action.SMALL_ICON, icon); //        // Set the tooltip string: //        putValue(Action.SHORT_DESCRIPTION, Translator.localize(s));	WITHOUT_CLASSIFICATION	0.9999821960271303	WITHOUT_CLASSIFICATION	1.780397286959838E-5	DEFECT
/*             * MDR has a hardcoded printStackTrace on all exceptions,             * even if they're caught, which is unsightly, so we handle             * unknown elements ourselves rather than letting MDR throw             * an exception for us to catch.             *             * org/netbeans/lib/jmi/util/Logger.java             *             * This can be uses to disable logging.  Default output is             * System.err             * setProperty("org.netbeans.lib.jmi.Logger.fileName", "")             *              org.netbeans.mdr.Logger             *             * The property org.netbeans.lib.jmi.Logger controls the minimum             * severity level for logging             */	WITHOUT_CLASSIFICATION	0.9999999995907389	WITHOUT_CLASSIFICATION	4.0926108322279513E-10	DEFECT
// Commit our transaction	WITHOUT_CLASSIFICATION	0.9999985474329168	WITHOUT_CLASSIFICATION	1.4525670831603675E-6	DEFECT
// not in UML1.4	WITHOUT_CLASSIFICATION	0.9999778866453354	WITHOUT_CLASSIFICATION	2.2113354664719332E-5	DEFECT
// Ignore any error.  The transaction may already have // been unwound as part of exception processing by MDR	WITHOUT_CLASSIFICATION	0.9999999481459375	WITHOUT_CLASSIFICATION	5.1854062481643913E-8	DEFECT
// Give the resolver.getIdToObjectMap() entries // priority over entries with the same UUID from // resolver.getIdToObjectMaps() because entries // in resolver.getIdToObjectMaps() are historic.	WITHOUT_CLASSIFICATION	0.999991710074231	WITHOUT_CLASSIFICATION	8.289925768946823E-6	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getCollaborationsHelper()     */	WITHOUT_CLASSIFICATION	0.9999994185462978	WITHOUT_CLASSIFICATION	5.814537022524824E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getCommonBehaviorFactory()     */	WITHOUT_CLASSIFICATION	0.999999785069114	WITHOUT_CLASSIFICATION	2.1493088599292875E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getExtensionMechanismsHelper()     */	WITHOUT_CLASSIFICATION	0.9999999170273143	WITHOUT_CLASSIFICATION	8.297268573651752E-8	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getMetaTypes()     */	WITHOUT_CLASSIFICATION	0.9999992571836105	WITHOUT_CLASSIFICATION	7.428163893948436E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getMessageSort()     */	WITHOUT_CLASSIFICATION	0.9999998525147151	WITHOUT_CLASSIFICATION	1.4748528488714533E-7	DEFECT
/*     * @see org.argouml.model.CommonBehaviorHelper#setReceiver(java.lang.Object,     *      java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999996763237814	WITHOUT_CLASSIFICATION	3.236762186399632E-7	DEFECT
// Nothing to do - we get all events automatically	WITHOUT_CLASSIFICATION	0.9999999247354187	WITHOUT_CLASSIFICATION	7.52645813669666E-8	DEFECT
// handles all children of relationship including extend and // include which are not members of core	WITHOUT_CLASSIFICATION	0.9999992849313898	WITHOUT_CLASSIFICATION	7.150686102754515E-7	DEFECT
/*     * @see org.argouml.model.UmlHelper#move(java.lang.Object, org.argouml.model.UmlHelper.Direction)     */	WITHOUT_CLASSIFICATION	0.9999996859680891	WITHOUT_CLASSIFICATION	3.140319109603096E-7	DEFECT
// Remember the system id of our root document so that we can write // out profiles and linked models to a different file if requested	WITHOUT_CLASSIFICATION	0.9999993597321357	WITHOUT_CLASSIFICATION	6.402678642237336E-7	DEFECT
// For now just skip registering this and ignore the request, // but the real issue is that MagicDraw serializes the same // object in two different composition associations, first in // the referencing file and second in the referenced file	WITHOUT_CLASSIFICATION	0.9999515217305672	WITHOUT_CLASSIFICATION	4.847826943289238E-5	DEFECT
// if we've found the module model, log it // and place it in the map so we don't have to // find it if we need it again.	WITHOUT_CLASSIFICATION	0.9999999103844845	WITHOUT_CLASSIFICATION	8.961551549702906E-8	DEFECT
///////////////////////////////////////////////////// ////////// End AndroMDA Code ////////////////////// /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999959415267526	WITHOUT_CLASSIFICATION	4.058473247289714E-6	DEFECT
// returns a List	WITHOUT_CLASSIFICATION	0.9999991868519107	WITHOUT_CLASSIFICATION	8.131480893258662E-7	DEFECT
// Simulates UML2 getting the aggregation from the opposite end	WITHOUT_CLASSIFICATION	0.9999999828332734	WITHOUT_CLASSIFICATION	1.716672663684111E-8	DEFECT
// find the bases of the connected classifierroles so that we can see // what associations are between them. If there are bases then the // associations between those bases form the possible bases. Otherwise // the bases are formed by all associations in the namespace of the // collaboration	WITHOUT_CLASSIFICATION	0.9999992920453142	WITHOUT_CLASSIFICATION	7.079546857908247E-7	DEFECT
/*     * @see org.argouml.model.AbstractModelEventPump#addModelEventListener(java.beans.PropertyChangeListener,     *      java.lang.Object, java.lang.String[])     */	WITHOUT_CLASSIFICATION	0.9999998094076354	WITHOUT_CLASSIFICATION	1.9059236463467502E-7	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#critique(java.lang.Object,     * org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999318866843	WITHOUT_CLASSIFICATION	6.811331565067253E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Decision)     */	WITHOUT_CLASSIFICATION	0.9999999790894262	WITHOUT_CLASSIFICATION	2.0910573815266794E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#getSupportedDecisions()     */	WITHOUT_CLASSIFICATION	0.999999985356162	WITHOUT_CLASSIFICATION	1.4643838070635955E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#addSupportedDecision(org.argouml.cognitive.Decision)     */	WITHOUT_CLASSIFICATION	0.9999999872698886	WITHOUT_CLASSIFICATION	1.2730111403564038E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Goal)     */	WITHOUT_CLASSIFICATION	0.999999977026827	WITHOUT_CLASSIFICATION	2.2973172998819887E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#getSupportedGoals()     */	WITHOUT_CLASSIFICATION	0.9999999849935396	WITHOUT_CLASSIFICATION	1.50064604899897E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#addSupportedGoal(org.argouml.cognitive.Goal)     */	WITHOUT_CLASSIFICATION	0.9999999879273491	WITHOUT_CLASSIFICATION	1.2072650768845878E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#containsKnowledgeType(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999999442324123	WITHOUT_CLASSIFICATION	5.5767587757934555E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#addKnowledgeType(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999999470079806	WITHOUT_CLASSIFICATION	5.299201954752207E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#expand(java.lang.String, ListSet)     */	WITHOUT_CLASSIFICATION	0.999999926321448	WITHOUT_CLASSIFICATION	7.367855205020465E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#getClarifier()     */	WITHOUT_CLASSIFICATION	0.9999999891791838	WITHOUT_CLASSIFICATION	1.0820816238281597E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#isActive()     */	WITHOUT_CLASSIFICATION	0.9999999549596988	WITHOUT_CLASSIFICATION	4.504030121468654E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#isEnabled()     */	WITHOUT_CLASSIFICATION	0.9999999864157574	WITHOUT_CLASSIFICATION	1.3584242635750391E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object,     * org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999513204385	WITHOUT_CLASSIFICATION	4.867956158911513E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedMetatypes()     */	WITHOUT_CLASSIFICATION	0.9999999364627218	WITHOUT_CLASSIFICATION	6.35372781740049E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Decision)     */	WITHOUT_CLASSIFICATION	0.9999999790894262	WITHOUT_CLASSIFICATION	2.0910573815266794E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#getSupportedDecisions()     */	WITHOUT_CLASSIFICATION	0.999999985356162	WITHOUT_CLASSIFICATION	1.4643838070635955E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Goal)     */	WITHOUT_CLASSIFICATION	0.999999977026827	WITHOUT_CLASSIFICATION	2.2973172998819887E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#getSupportedGoals()     */	WITHOUT_CLASSIFICATION	0.9999999849935396	WITHOUT_CLASSIFICATION	1.50064604899897E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#containsKnowledgeType(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999999442324123	WITHOUT_CLASSIFICATION	5.5767587757934555E-8	DEFECT
/*     * Just returns the descr param.     *     * @see org.argouml.cognitive.Poster#expand(java.lang.String, ListSet)     */	WITHOUT_CLASSIFICATION	0.9999999016519515	WITHOUT_CLASSIFICATION	9.834804856672581E-8	DEFECT
/*     * Get the generic clarifier for this designer/poster.     *     * @see org.argouml.cognitive.Poster#getClarifier()     */	WITHOUT_CLASSIFICATION	0.9999999482397083	WITHOUT_CLASSIFICATION	5.176029172487805E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#snooze()     */	WITHOUT_CLASSIFICATION	0.9999999581440291	WITHOUT_CLASSIFICATION	4.185597082056886E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#unsnooze()     */	WITHOUT_CLASSIFICATION	0.9999999269929064	WITHOUT_CLASSIFICATION	7.300709360594733E-8	DEFECT
/*     * Does not do anything.     *     * @see org.argouml.cognitive.Poster#fixIt(org.argouml.cognitive.ToDoItem,     * java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999851012130683	WITHOUT_CLASSIFICATION	1.4898786931803251E-5	DEFECT
/*     * Just returns false.     *     * @see org.argouml.cognitive.Poster#canFixIt(org.argouml.cognitive.ToDoItem)     */	WITHOUT_CLASSIFICATION	0.9999990030454176	WITHOUT_CLASSIFICATION	9.969545824085567E-7	DEFECT
/*     * @see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Decision)     */	WITHOUT_CLASSIFICATION	0.9999999790894262	WITHOUT_CLASSIFICATION	2.0910573815266794E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Goal)     */	WITHOUT_CLASSIFICATION	0.999999977026827	WITHOUT_CLASSIFICATION	2.2973172998819887E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#containsKnowledgeType(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999999442324123	WITHOUT_CLASSIFICATION	5.5767587757934555E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#expand(java.lang.String, org.argouml.cognitive.ListSet)     */	WITHOUT_CLASSIFICATION	0.9999999397250329	WITHOUT_CLASSIFICATION	6.027496705199877E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#getClarifier()     */	WITHOUT_CLASSIFICATION	0.9999999891791838	WITHOUT_CLASSIFICATION	1.0820816238281597E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#fixIt(org.argouml.cognitive.ToDoItem, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999995728119268	WITHOUT_CLASSIFICATION	4.271880731449403E-7	DEFECT
/*     * @see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999936605403	WITHOUT_CLASSIFICATION	6.339459759071501E-9	DEFECT
/*     * @see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999936605403	WITHOUT_CLASSIFICATION	6.339459759071501E-9	DEFECT
/*     * @see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999936605403	WITHOUT_CLASSIFICATION	6.339459759071501E-9	DEFECT
/*     * @see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999936605403	WITHOUT_CLASSIFICATION	6.339459759071501E-9	DEFECT
/*     * @see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999936605403	WITHOUT_CLASSIFICATION	6.339459759071501E-9	DEFECT
/*     * @see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999936605403	WITHOUT_CLASSIFICATION	6.339459759071501E-9	DEFECT
/*     * @see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999936605403	WITHOUT_CLASSIFICATION	6.339459759071501E-9	DEFECT
/*     * @see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999936605403	WITHOUT_CLASSIFICATION	6.339459759071501E-9	DEFECT
/*     * @see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999936605403	WITHOUT_CLASSIFICATION	6.339459759071501E-9	DEFECT
/*     * @see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999936605403	WITHOUT_CLASSIFICATION	6.339459759071501E-9	DEFECT
/*     * @see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999936605403	WITHOUT_CLASSIFICATION	6.339459759071501E-9	DEFECT
/*     * @see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999936605403	WITHOUT_CLASSIFICATION	6.339459759071501E-9	DEFECT
/*     * @see org.argouml.ui.TabTarget#getTarget()     */	WITHOUT_CLASSIFICATION	0.9999999286843934	WITHOUT_CLASSIFICATION	7.131560670765812E-8	DEFECT
/*     * @see org.argouml.ui.TabTarget#refresh()     */	WITHOUT_CLASSIFICATION	0.9999999663005853	WITHOUT_CLASSIFICATION	3.3699414818509625E-8	DEFECT
/*     * @see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999996046340461	WITHOUT_CLASSIFICATION	3.9536595384504534E-7	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999870801335	WITHOUT_CLASSIFICATION	1.2919866357902841E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999645238781	WITHOUT_CLASSIFICATION	3.547612200386753E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999616635316	WITHOUT_CLASSIFICATION	3.833646843055407E-8	DEFECT
/*     * @see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)     */	WITHOUT_CLASSIFICATION	0.9999999706015694	WITHOUT_CLASSIFICATION	2.9398430607050015E-8	DEFECT
/*     * @see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)     */	WITHOUT_CLASSIFICATION	0.9999999468190619	WITHOUT_CLASSIFICATION	5.318093809008103E-8	DEFECT
/*     * @see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)     */	WITHOUT_CLASSIFICATION	0.9999999436773684	WITHOUT_CLASSIFICATION	5.632263152507655E-8	DEFECT
/*     * @see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)     */	WITHOUT_CLASSIFICATION	0.9999999707339869	WITHOUT_CLASSIFICATION	2.9266013092273916E-8	DEFECT
/*     * @see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)     */	WITHOUT_CLASSIFICATION	0.9999999706015694	WITHOUT_CLASSIFICATION	2.9398430607050015E-8	DEFECT
/*     * @see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)     */	WITHOUT_CLASSIFICATION	0.9999999468190619	WITHOUT_CLASSIFICATION	5.318093809008103E-8	DEFECT
/*     * @see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)     */	WITHOUT_CLASSIFICATION	0.9999999436773684	WITHOUT_CLASSIFICATION	5.632263152507655E-8	DEFECT
/*     * @see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)     */	WITHOUT_CLASSIFICATION	0.9999999707339869	WITHOUT_CLASSIFICATION	2.9266013092273916E-8	DEFECT
/*     * @see org.argouml.cognitive.ui.WizStep#setTarget(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999568640039	WITHOUT_CLASSIFICATION	4.313599611205055E-8	DEFECT
/*     * @see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)     */	WITHOUT_CLASSIFICATION	0.9999999706015694	WITHOUT_CLASSIFICATION	2.9398430607050015E-8	DEFECT
/*     * @see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)     */	WITHOUT_CLASSIFICATION	0.9999999468190619	WITHOUT_CLASSIFICATION	5.318093809008103E-8	DEFECT
/*     * @see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)     */	WITHOUT_CLASSIFICATION	0.9999999436773684	WITHOUT_CLASSIFICATION	5.632263152507655E-8	DEFECT
/*     * @see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)     */	WITHOUT_CLASSIFICATION	0.9999999707339869	WITHOUT_CLASSIFICATION	2.9266013092273916E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetAdded(     *          TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999861586804	WITHOUT_CLASSIFICATION	1.3841319703486445E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetRemoved(     *          TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999619936977	WITHOUT_CLASSIFICATION	3.80063022405119E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetSet(TargetEvent)     */	WITHOUT_CLASSIFICATION	0.999999965592672	WITHOUT_CLASSIFICATION	3.4407327900063854E-8	DEFECT
/*     * @see org.argouml.persistence.ProjectFilePersister#doLoad(java.io.File)     */	WITHOUT_CLASSIFICATION	0.9999999606173963	WITHOUT_CLASSIFICATION	3.93826036826251E-8	DEFECT
/*     * @see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)     */	WITHOUT_CLASSIFICATION	0.9999999706015694	WITHOUT_CLASSIFICATION	2.9398430607050015E-8	DEFECT
/*     * @see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)     */	WITHOUT_CLASSIFICATION	0.9999999468190619	WITHOUT_CLASSIFICATION	5.318093809008103E-8	DEFECT
/*     * @see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)     */	WITHOUT_CLASSIFICATION	0.9999999436773684	WITHOUT_CLASSIFICATION	5.632263152507655E-8	DEFECT
/*     * @see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)     */	WITHOUT_CLASSIFICATION	0.9999999707339869	WITHOUT_CLASSIFICATION	2.9266013092273916E-8	DEFECT
/*     * @see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)     */	WITHOUT_CLASSIFICATION	0.9999999706015694	WITHOUT_CLASSIFICATION	2.9398430607050015E-8	DEFECT
/*     * @see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)     */	WITHOUT_CLASSIFICATION	0.9999999468190619	WITHOUT_CLASSIFICATION	5.318093809008103E-8	DEFECT
/*     * @see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)     */	WITHOUT_CLASSIFICATION	0.9999999436773684	WITHOUT_CLASSIFICATION	5.632263152507655E-8	DEFECT
/*     * @see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)     */	WITHOUT_CLASSIFICATION	0.9999999707339869	WITHOUT_CLASSIFICATION	2.9266013092273916E-8	DEFECT
/*     * @see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)     */	WITHOUT_CLASSIFICATION	0.9999999706015694	WITHOUT_CLASSIFICATION	2.9398430607050015E-8	DEFECT
/*     * @see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)     */	WITHOUT_CLASSIFICATION	0.9999999468190619	WITHOUT_CLASSIFICATION	5.318093809008103E-8	DEFECT
/*     * @see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)     */	WITHOUT_CLASSIFICATION	0.9999999436773684	WITHOUT_CLASSIFICATION	5.632263152507655E-8	DEFECT
/*     * @see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)     */	WITHOUT_CLASSIFICATION	0.9999999707339869	WITHOUT_CLASSIFICATION	2.9266013092273916E-8	DEFECT
/*     * @see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)     */	WITHOUT_CLASSIFICATION	0.9999999706015694	WITHOUT_CLASSIFICATION	2.9398430607050015E-8	DEFECT
/*     * @see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)     */	WITHOUT_CLASSIFICATION	0.9999999468190619	WITHOUT_CLASSIFICATION	5.318093809008103E-8	DEFECT
/*     * @see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)     */	WITHOUT_CLASSIFICATION	0.9999999436773684	WITHOUT_CLASSIFICATION	5.632263152507655E-8	DEFECT
/*     * @see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)     */	WITHOUT_CLASSIFICATION	0.9999999707339869	WITHOUT_CLASSIFICATION	2.9266013092273916E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999870801335	WITHOUT_CLASSIFICATION	1.2919866357902841E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999645238781	WITHOUT_CLASSIFICATION	3.547612200386753E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999616635316	WITHOUT_CLASSIFICATION	3.833646843055407E-8	DEFECT
/*     * @see org.argouml.application.events.ArgoGeneratorEventListener#generatorChanged(org.argouml.application.events.ArgoGeneratorEvent)     */	WITHOUT_CLASSIFICATION	0.999999989982075	WITHOUT_CLASSIFICATION	1.001792499399412E-8	DEFECT
/*     * @see org.argouml.application.events.ArgoGeneratorEventListener#generatorAdded(org.argouml.application.events.ArgoGeneratorEvent)     */	WITHOUT_CLASSIFICATION	0.9999999893514162	WITHOUT_CLASSIFICATION	1.0648583665624476E-8	DEFECT
/*     * @see org.argouml.application.events.ArgoGeneratorEventListener#generatorRemoved(org.argouml.application.events.ArgoGeneratorEvent)     */	WITHOUT_CLASSIFICATION	0.9999999818881931	WITHOUT_CLASSIFICATION	1.811180696641672E-8	DEFECT
/*     * @see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()     */	WITHOUT_CLASSIFICATION	0.9999999989548571	WITHOUT_CLASSIFICATION	1.0451428431711714E-9	DEFECT
/*     * @see org.argouml.notation.NotationName#getConfigurationValue()     */	WITHOUT_CLASSIFICATION	0.9999999394390059	WITHOUT_CLASSIFICATION	6.0560994186207E-8	DEFECT
/*     * @see org.argouml.notation.NotationName#sameNotationAs(org.argouml.notation.NotationName)     */	WITHOUT_CLASSIFICATION	0.9999995805419606	WITHOUT_CLASSIFICATION	4.194580393874129E-7	DEFECT
/*     * Add an element listener and remember the registration.     *     * @param element     *            element to listen for changes on     * @see org.argouml.model.ModelEventPump#addModelEventListener(PropertyChangeListener, Object, String)     */	WITHOUT_CLASSIFICATION	0.9999998071497765	WITHOUT_CLASSIFICATION	1.9285022347357307E-7	DEFECT
/*     * Utility function to add a listener for a given property name     * and remember the registration.     *     * @param element     *            element to listen for changes on     * @param property     *            name of property to listen for changes of     * @see org.argouml.model.ModelEventPump#addModelEventListener(PropertyChangeListener,     *      Object, String)     */	WITHOUT_CLASSIFICATION	0.9999999826160562	WITHOUT_CLASSIFICATION	1.7383943813728178E-8	DEFECT
/*     * Utility function to add a listener for an array of property names     * and remember the registration.     *     * @param element     *            element to listen for changes on     * @param property     *            array of property names (Strings) to listen for changes of     * @see org.argouml.model.ModelEventPump#addModelEventListener(PropertyChangeListener,     *      Object, String)     */	WITHOUT_CLASSIFICATION	0.9999999602973484	WITHOUT_CLASSIFICATION	3.970265163514716E-8	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#getParsingHelp()     */	WITHOUT_CLASSIFICATION	0.9999999587875007	WITHOUT_CLASSIFICATION	4.1212499361276495E-8	DEFECT
/*     * Utility function to remove an element listener     * and adapt the remembered list of registration.     *     * @param element     *            element to listen for changes on     * @see org.argouml.model.ModelEventPump#addModelEventListener(PropertyChangeListener, Object, String)     */	WITHOUT_CLASSIFICATION	0.9999996088675382	WITHOUT_CLASSIFICATION	3.9113246178917574E-7	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#updateListener(java.beans.PropertyChangeListener, java.lang.Object, java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.999999756651827	WITHOUT_CLASSIFICATION	2.433481729367149E-7	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#getParsingHelp()     */	WITHOUT_CLASSIFICATION	0.9999999587875007	WITHOUT_CLASSIFICATION	4.1212499361276495E-8	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999984869000592	WITHOUT_CLASSIFICATION	1.513099940683146E-6	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#getParsingHelp()     */	WITHOUT_CLASSIFICATION	0.9999999587875007	WITHOUT_CLASSIFICATION	4.1212499361276495E-8	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999984869000592	WITHOUT_CLASSIFICATION	1.513099940683146E-6	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#parse(     * java.lang.Object, java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999986024989732	WITHOUT_CLASSIFICATION	1.3975010267928543E-6	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#getParsingHelp()     */	WITHOUT_CLASSIFICATION	0.9999999587875007	WITHOUT_CLASSIFICATION	4.1212499361276495E-8	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999984869000592	WITHOUT_CLASSIFICATION	1.513099940683146E-6	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#getParsingHelp()     */	WITHOUT_CLASSIFICATION	0.9999999587875007	WITHOUT_CLASSIFICATION	4.1212499361276495E-8	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#getParsingHelp()     */	WITHOUT_CLASSIFICATION	0.9999999587875007	WITHOUT_CLASSIFICATION	4.1212499361276495E-8	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999984869000592	WITHOUT_CLASSIFICATION	1.513099940683146E-6	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999984869000592	WITHOUT_CLASSIFICATION	1.513099940683146E-6	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#getParsingHelp()     */	WITHOUT_CLASSIFICATION	0.9999999587875007	WITHOUT_CLASSIFICATION	4.1212499361276495E-8	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999984869000592	WITHOUT_CLASSIFICATION	1.513099940683146E-6	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#getParsingHelp()     */	WITHOUT_CLASSIFICATION	0.9999999587875007	WITHOUT_CLASSIFICATION	4.1212499361276495E-8	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#getParsingHelp()     */	WITHOUT_CLASSIFICATION	0.9999999587875007	WITHOUT_CLASSIFICATION	4.1212499361276495E-8	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999984869000592	WITHOUT_CLASSIFICATION	1.513099940683146E-6	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999984869000592	WITHOUT_CLASSIFICATION	1.513099940683146E-6	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#getParsingHelp()     */	WITHOUT_CLASSIFICATION	0.9999999587875007	WITHOUT_CLASSIFICATION	4.1212499361276495E-8	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#getParsingHelp()     */	WITHOUT_CLASSIFICATION	0.9999999587875007	WITHOUT_CLASSIFICATION	4.1212499361276495E-8	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999984869000592	WITHOUT_CLASSIFICATION	1.513099940683146E-6	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#getParsingHelp()     */	WITHOUT_CLASSIFICATION	0.9999999587875007	WITHOUT_CLASSIFICATION	4.1212499361276495E-8	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#getParsingHelp()     */	WITHOUT_CLASSIFICATION	0.9999999587875007	WITHOUT_CLASSIFICATION	4.1212499361276495E-8	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999984869000592	WITHOUT_CLASSIFICATION	1.513099940683146E-6	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999984869000592	WITHOUT_CLASSIFICATION	1.513099940683146E-6	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#getParsingHelp()     */	WITHOUT_CLASSIFICATION	0.9999999587875007	WITHOUT_CLASSIFICATION	4.1212499361276495E-8	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#getParsingHelp()     */	WITHOUT_CLASSIFICATION	0.9999999587875007	WITHOUT_CLASSIFICATION	4.1212499361276495E-8	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999984869000592	WITHOUT_CLASSIFICATION	1.513099940683146E-6	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999984869000592	WITHOUT_CLASSIFICATION	1.513099940683146E-6	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#getParsingHelp()     */	WITHOUT_CLASSIFICATION	0.9999999587875007	WITHOUT_CLASSIFICATION	4.1212499361276495E-8	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999984869000592	WITHOUT_CLASSIFICATION	1.513099940683146E-6	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#getParsingHelp()     */	WITHOUT_CLASSIFICATION	0.9999999587875007	WITHOUT_CLASSIFICATION	4.1212499361276495E-8	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999984869000592	WITHOUT_CLASSIFICATION	1.513099940683146E-6	DEFECT
/*     * @see org.argouml.uml.notation.NotationProvider#parse(java.lang.Object, java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999978447941874	WITHOUT_CLASSIFICATION	2.155205812589607E-6	DEFECT
/*     * @see org.argouml.uml.notation.NotationProvider#getParsingHelp()     */	WITHOUT_CLASSIFICATION	0.999999941298343	WITHOUT_CLASSIFICATION	5.87016569534271E-8	DEFECT
/*     * @see org.argouml.uml.notation.NotationProvider#parse(java.lang.Object, java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999978447941874	WITHOUT_CLASSIFICATION	2.155205812589607E-6	DEFECT
/*     * @see org.argouml.uml.notation.NotationProvider#getParsingHelp()     */	WITHOUT_CLASSIFICATION	0.999999941298343	WITHOUT_CLASSIFICATION	5.87016569534271E-8	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#getParsingHelp()     */	WITHOUT_CLASSIFICATION	0.9999999587875007	WITHOUT_CLASSIFICATION	4.1212499361276495E-8	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999984869000592	WITHOUT_CLASSIFICATION	1.513099940683146E-6	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999984869000592	WITHOUT_CLASSIFICATION	1.513099940683146E-6	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#getParsingHelp()     */	WITHOUT_CLASSIFICATION	0.9999999587875007	WITHOUT_CLASSIFICATION	4.1212499361276495E-8	DEFECT
/*     * @see org.argouml.notation.providers.NotationProvider#getParsingHelp()     */	WITHOUT_CLASSIFICATION	0.9999999587875007	WITHOUT_CLASSIFICATION	4.1212499361276495E-8	DEFECT
/*     * @see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabRefresh()     */	WITHOUT_CLASSIFICATION	0.9999999985199679	WITHOUT_CLASSIFICATION	1.480032080751794E-9	DEFECT
/*     * @see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabSave()     */	WITHOUT_CLASSIFICATION	0.9999999984696031	WITHOUT_CLASSIFICATION	1.530396815268063E-9	DEFECT
/*     * @see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabCancel()     */	WITHOUT_CLASSIFICATION	0.9999999984450654	WITHOUT_CLASSIFICATION	1.5549345658174264E-9	DEFECT
/*     * @see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()     */	WITHOUT_CLASSIFICATION	0.9999999989548571	WITHOUT_CLASSIFICATION	1.0451428431711714E-9	DEFECT
/*     * @see org.argouml.ui.GUISettingsTabInterface#getTabKey()     */	WITHOUT_CLASSIFICATION	0.9999999893638518	WITHOUT_CLASSIFICATION	1.0636148231391547E-8	DEFECT
/*     * @see org.argouml.ui.GUISettingsTabInterface#getTabPanel()     */	WITHOUT_CLASSIFICATION	0.9999999930208533	WITHOUT_CLASSIFICATION	6.979146697318752E-9	DEFECT
/*     * @see org.argouml.application.events.ArgoNotationEventListener#notationChanged(org.argouml.application.events.ArgoNotationEvent)     */	WITHOUT_CLASSIFICATION	0.999999982356277	WITHOUT_CLASSIFICATION	1.764372297430088E-8	DEFECT
/*     * @see org.argouml.application.events.ArgoNotationEventListener#notationAdded(org.argouml.application.events.ArgoNotationEvent)     */	WITHOUT_CLASSIFICATION	0.9999999751987141	WITHOUT_CLASSIFICATION	2.480128587622851E-8	DEFECT
/*     * @see org.argouml.application.events.ArgoNotationEventListener#notationRemoved(org.argouml.application.events.ArgoNotationEvent)     */	WITHOUT_CLASSIFICATION	0.9999999496821764	WITHOUT_CLASSIFICATION	5.031782355650094E-8	DEFECT
/*     * @see org.argouml.application.events.ArgoNotationEventListener#notationProviderAdded(org.argouml.application.events.ArgoNotationEvent)     */	WITHOUT_CLASSIFICATION	0.9999998695962677	WITHOUT_CLASSIFICATION	1.3040373230724626E-7	DEFECT
/*     * @see org.argouml.application.events.ArgoNotationEventListener#notationProviderRemoved(org.argouml.application.events.ArgoNotationEvent)     */	WITHOUT_CLASSIFICATION	0.9999998432461717	WITHOUT_CLASSIFICATION	1.5675382822074744E-7	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.persistence.SAXParserBase#handleStartElement(     *         org.argouml.persistence.XMLElement)     */	WITHOUT_CLASSIFICATION	0.9999999579588197	WITHOUT_CLASSIFICATION	4.204118033797715E-8	DEFECT
/*     * @see org.argouml.persistence.SAXParserBase#handleEndElement(     *         org.argouml.persistence.XMLElement)     */	WITHOUT_CLASSIFICATION	0.9999999551774635	WITHOUT_CLASSIFICATION	4.482253659448518E-8	DEFECT
/*     * @see org.argouml.persistence.SAXParserBase#isElementOfInterest(String)     */	WITHOUT_CLASSIFICATION	0.9999999038702589	WITHOUT_CLASSIFICATION	9.612974108056E-8	DEFECT
/*     * @see org.argouml.persistence.MemberFilePersister#getMainTag()     */	WITHOUT_CLASSIFICATION	0.9999999950473879	WITHOUT_CLASSIFICATION	4.952612144017341E-9	DEFECT
/*     * @see org.argouml.persistence.AbstractFilePersister#getExtension()     */	WITHOUT_CLASSIFICATION	0.9999999843829693	WITHOUT_CLASSIFICATION	1.5617030609297182E-8	DEFECT
/*     * @see org.argouml.persistence.AbstractFilePersister#getDesc()     */	WITHOUT_CLASSIFICATION	0.9999999936687365	WITHOUT_CLASSIFICATION	6.331263444188242E-9	DEFECT
/*     * @see org.argouml.persistence.XmiFilePersister#isSaveEnabled()     */	WITHOUT_CLASSIFICATION	0.9999999770460015	WITHOUT_CLASSIFICATION	2.2953998470622452E-8	DEFECT
/*     * @see org.argouml.persistence.MemberFilePersister#getMainTag()     */	WITHOUT_CLASSIFICATION	0.9999999950473879	WITHOUT_CLASSIFICATION	4.952612144017341E-9	DEFECT
/*     * @see org.argouml.persistence.AbstractFilePersister#getExtension()     */	WITHOUT_CLASSIFICATION	0.9999999843829693	WITHOUT_CLASSIFICATION	1.5617030609297182E-8	DEFECT
/*     * @see org.argouml.persistence.AbstractFilePersister#getDesc()     */	WITHOUT_CLASSIFICATION	0.9999999936687365	WITHOUT_CLASSIFICATION	6.331263444188242E-9	DEFECT
/*     * @see org.argouml.persistence.AbstractFilePersister#isSaveEnabled()     */	WITHOUT_CLASSIFICATION	0.9999999947176419	WITHOUT_CLASSIFICATION	5.282358067429806E-9	DEFECT
/*     * @see org.argouml.persistence.ProjectFilePersister#doLoad(java.io.File)     */	WITHOUT_CLASSIFICATION	0.9999999606173963	WITHOUT_CLASSIFICATION	3.93826036826251E-8	DEFECT
/*     * @see org.argouml.persistence.XMLTokenTableBase#setupTokens()     */	WITHOUT_CLASSIFICATION	0.999999565972239	WITHOUT_CLASSIFICATION	4.340277609249917E-7	DEFECT
/*     * @see org.argouml.persistence.MemberFilePersister#getMainTag()     */	WITHOUT_CLASSIFICATION	0.9999999950473879	WITHOUT_CLASSIFICATION	4.952612144017341E-9	DEFECT
/*     * @see org.argouml.persistence.MemberFilePersister#load(org.argouml.kernel.Project, java.io.InputStream)     */	WITHOUT_CLASSIFICATION	0.9999999461615379	WITHOUT_CLASSIFICATION	5.3838462089368074E-8	DEFECT
/*     * @see org.argouml.persistence.MemberFilePersister#save(org.argouml.kernel.ProjectMember, java.io.OutputStream)     */	WITHOUT_CLASSIFICATION	0.9999999573961846	WITHOUT_CLASSIFICATION	4.2603815374275106E-8	DEFECT
/*     * @see org.argouml.persistence.AbstractFilePersister#getExtension()     */	WITHOUT_CLASSIFICATION	0.9999999843829693	WITHOUT_CLASSIFICATION	1.5617030609297182E-8	DEFECT
/*     * @see org.argouml.persistence.AbstractFilePersister#getDesc()     */	WITHOUT_CLASSIFICATION	0.9999999936687365	WITHOUT_CLASSIFICATION	6.331263444188242E-9	DEFECT
/*     * @see org.argouml.persistence.ProjectFilePersister#doLoad(java.io.File)     */	WITHOUT_CLASSIFICATION	0.9999999606173963	WITHOUT_CLASSIFICATION	3.93826036826251E-8	DEFECT
/*     * @see org.argouml.persistence.AbstractFilePersister#getExtension()     */	WITHOUT_CLASSIFICATION	0.9999999843829693	WITHOUT_CLASSIFICATION	1.5617030609297182E-8	DEFECT
/*     * @see org.argouml.persistence.XMLTokenTableBase#setupTokens()     */	WITHOUT_CLASSIFICATION	0.999999565972239	WITHOUT_CLASSIFICATION	4.340277609249917E-7	DEFECT
/*     * @see org.argouml.persistence.AbstractFilePersister#getExtension()     */	WITHOUT_CLASSIFICATION	0.9999999843829693	WITHOUT_CLASSIFICATION	1.5617030609297182E-8	DEFECT
/*     * @see org.argouml.persistence.AbstractFilePersister#getDesc()     */	WITHOUT_CLASSIFICATION	0.9999999936687365	WITHOUT_CLASSIFICATION	6.331263444188242E-9	DEFECT
/*     * @see org.argouml.persistence.AbstractFilePersister#isSaveEnabled()     */	WITHOUT_CLASSIFICATION	0.9999999947176419	WITHOUT_CLASSIFICATION	5.282358067429806E-9	DEFECT
/*     * @see org.argouml.persistence.AbstractFilePersister#getDesc()     */	WITHOUT_CLASSIFICATION	0.9999999936687365	WITHOUT_CLASSIFICATION	6.331263444188242E-9	DEFECT
/*     * @see org.argouml.persistence.AbstractFilePersister#isSaveEnabled()     */	WITHOUT_CLASSIFICATION	0.9999999947176419	WITHOUT_CLASSIFICATION	5.282358067429806E-9	DEFECT
/*     * @see org.argouml.persistence.ProjectFilePersister#doLoad(java.io.File)     */	WITHOUT_CLASSIFICATION	0.9999999606173963	WITHOUT_CLASSIFICATION	3.93826036826251E-8	DEFECT
/*     * @see org.argouml.profile.ProfileManager#lookForRegisteredProfile(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999999501071773	WITHOUT_CLASSIFICATION	4.989282268861524E-8	DEFECT
/*     * @param pc     * @see org.argouml.profile.ProfileManager#applyConfiguration(org.argouml.kernel.ProfileConfiguration)     */	WITHOUT_CLASSIFICATION	0.9999999155491351	WITHOUT_CLASSIFICATION	8.445086487715302E-8	DEFECT
/*     * @see org.argouml.profile.internal.ocl.ModelInterpreter#invokeFeature(java.util.HashMap,     *      java.lang.Object, java.lang.String, java.lang.String,     *      java.lang.Object[])     */	WITHOUT_CLASSIFICATION	0.9999999924827998	WITHOUT_CLASSIFICATION	7.517200139109026E-9	DEFECT
/*     * @see org.argouml.profile.internal.ocl.ModelInterpreter#getBuiltInSymbol(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999999812707632	WITHOUT_CLASSIFICATION	1.8729236918160786E-8	DEFECT
/*     * @see org.argouml.cognitive.Critic#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999998143071802	WITHOUT_CLASSIFICATION	1.856928197115551E-7	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999169128823	WITHOUT_CLASSIFICATION	8.308711775415647E-8	DEFECT
/*     * @see org.argouml.profile.internal.ocl.OclExpressionEvaluator#evaluate(java.util.HashMap, org.argouml.profile.internal.ocl.ModelInterpreter, java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999999986036401	WITHOUT_CLASSIFICATION	1.3963598517516878E-9	DEFECT
/*     * @see org.argouml.profile.internal.ocl.ModelInterpreter#invokeFeature(java.util.HashMap,     *      java.lang.Object, java.lang.String, java.lang.String,     *      java.lang.Object[])     */	WITHOUT_CLASSIFICATION	0.9999999924827998	WITHOUT_CLASSIFICATION	7.517200139109026E-9	DEFECT
/*     * @see org.argouml.profile.internal.ocl.ModelInterpreter#getBuiltInSymbol(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999999812707632	WITHOUT_CLASSIFICATION	1.8729236918160786E-8	DEFECT
/*     * @see org.argouml.profile.internal.ocl.uml14.Bag#count(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999344346611	WITHOUT_CLASSIFICATION	6.556533894735795E-8	DEFECT
/*     * @see org.argouml.application.api.ProgressMonitor#setMaximumProgress(int)     */	WITHOUT_CLASSIFICATION	0.9999999990574137	WITHOUT_CLASSIFICATION	9.425863765880737E-10	DEFECT
/*     * @see org.argouml.profile.internal.ocl.ModelInterpreter#getBuiltInSymbol(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999999812707632	WITHOUT_CLASSIFICATION	1.8729236918160786E-8	DEFECT
/*     * Returns the target of this tab.     *     * @see org.argouml.ui.TabTarget#getTarget()     */	WITHOUT_CLASSIFICATION	0.9999999303040192	WITHOUT_CLASSIFICATION	6.969598078694824E-8	DEFECT
/*     * Refresh the text of the tab.     *     * @see org.argouml.ui.TabTarget#refresh()     */	WITHOUT_CLASSIFICATION	0.9999999989080646	WITHOUT_CLASSIFICATION	1.0919354235031435E-9	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999870801335	WITHOUT_CLASSIFICATION	1.2919866357902841E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999645238781	WITHOUT_CLASSIFICATION	3.547612200386753E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999616635316	WITHOUT_CLASSIFICATION	3.833646843055407E-8	DEFECT
/*     * @see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()     */	WITHOUT_CLASSIFICATION	0.9999999989548571	WITHOUT_CLASSIFICATION	1.0451428431711714E-9	DEFECT
/*     * @see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()     */	WITHOUT_CLASSIFICATION	0.9999999989548571	WITHOUT_CLASSIFICATION	1.0451428431711714E-9	DEFECT
/*     * @see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabRefresh()     */	WITHOUT_CLASSIFICATION	0.9999999985199679	WITHOUT_CLASSIFICATION	1.480032080751794E-9	DEFECT
/*     * @see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabSave()     */	WITHOUT_CLASSIFICATION	0.9999999984696031	WITHOUT_CLASSIFICATION	1.530396815268063E-9	DEFECT
/*     * @see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabCancel()     */	WITHOUT_CLASSIFICATION	0.9999999984450654	WITHOUT_CLASSIFICATION	1.5549345658174264E-9	DEFECT
/*     * @see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()     */	WITHOUT_CLASSIFICATION	0.9999999989548571	WITHOUT_CLASSIFICATION	1.0451428431711714E-9	DEFECT
/*     * @see org.argouml.ui.GUISettingsTabInterface#getTabKey()     */	WITHOUT_CLASSIFICATION	0.9999999893638518	WITHOUT_CLASSIFICATION	1.0636148231391547E-8	DEFECT
/*     * @see org.argouml.ui.GUISettingsTabInterface#getTabPanel()     */	WITHOUT_CLASSIFICATION	0.9999999930208533	WITHOUT_CLASSIFICATION	6.979146697318752E-9	DEFECT
/*     * @see org.argouml.ui.AbstractArgoJPanel#spawn()     */	WITHOUT_CLASSIFICATION	0.9999999223561974	WITHOUT_CLASSIFICATION	7.764380268697934E-8	DEFECT
/*     * @see org.argouml.ui.TabTarget#setTarget(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999998702422882	WITHOUT_CLASSIFICATION	1.297577117281041E-7	DEFECT
/*     * @see org.argouml.ui.TabTarget#getTarget()     */	WITHOUT_CLASSIFICATION	0.9999999286843934	WITHOUT_CLASSIFICATION	7.131560670765812E-8	DEFECT
/*     * @see org.argouml.ui.TabTarget#refresh()     */	WITHOUT_CLASSIFICATION	0.9999999663005853	WITHOUT_CLASSIFICATION	3.3699414818509625E-8	DEFECT
/*     * Style panels only apply when a Fig is selected.     *     * @see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999760130703474	WITHOUT_CLASSIFICATION	2.3986929652498256E-5	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetAdded(     *      TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999861586804	WITHOUT_CLASSIFICATION	1.3841319703486445E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetRemoved(     *      TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999619936977	WITHOUT_CLASSIFICATION	3.80063022405119E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetSet(TargetEvent)     */	WITHOUT_CLASSIFICATION	0.999999965592672	WITHOUT_CLASSIFICATION	3.4407327900063854E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999870801335	WITHOUT_CLASSIFICATION	1.2919866357902841E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999645238781	WITHOUT_CLASSIFICATION	3.547612200386753E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999616635316	WITHOUT_CLASSIFICATION	3.833646843055407E-8	DEFECT
/*     * @see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()     */	WITHOUT_CLASSIFICATION	0.9999999989548571	WITHOUT_CLASSIFICATION	1.0451428431711714E-9	DEFECT
/*     * @see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()     */	WITHOUT_CLASSIFICATION	0.9999999989548571	WITHOUT_CLASSIFICATION	1.0451428431711714E-9	DEFECT
/*     * Report a progress to the ProgressMonitor window.     * @see org.argouml.persistence.ProgressListener#progress(org.argouml.persistence.ProgressEvent)     */	WITHOUT_CLASSIFICATION	0.9999999986818118	WITHOUT_CLASSIFICATION	1.3181882696460866E-9	DEFECT
/*     * Report a progress to the ProgressMonitor window.     * @see org.argouml.application.api.ProgressMonitor#updateProgress(int)     */	WITHOUT_CLASSIFICATION	0.999999999160372	WITHOUT_CLASSIFICATION	8.396280920536252E-10	DEFECT
/*     * @see org.argouml.application.api.ProgressMonitor#isCanceled()     */	WITHOUT_CLASSIFICATION	0.9999999942924339	WITHOUT_CLASSIFICATION	5.707566077434903E-9	DEFECT
/*     * @see org.argouml.application.api.ProgressMonitor#close()     */	WITHOUT_CLASSIFICATION	0.999999996309693	WITHOUT_CLASSIFICATION	3.6903068557513985E-9	DEFECT
/*     * @see org.argouml.application.api.ProgressMonitor#notifyMessage(java.lang.String, java.lang.String, java.lang.String)     */	WITHOUT_CLASSIFICATION	0.999999988352133	WITHOUT_CLASSIFICATION	1.1647867137147459E-8	DEFECT
/*     * @see org.argouml.application.api.ProgressMonitor#notifyNullAction()     */	WITHOUT_CLASSIFICATION	0.9999999831273394	WITHOUT_CLASSIFICATION	1.6872660608057152E-8	DEFECT
/*     * @see org.argouml.ui.TabTarget#refresh()     */	WITHOUT_CLASSIFICATION	0.9999999663005853	WITHOUT_CLASSIFICATION	3.3699414818509625E-8	DEFECT
/*     * @see org.argouml.ui.TabTarget#refresh()     */	WITHOUT_CLASSIFICATION	0.9999999663005853	WITHOUT_CLASSIFICATION	3.3699414818509625E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999870801335	WITHOUT_CLASSIFICATION	1.2919866357902841E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999645238781	WITHOUT_CLASSIFICATION	3.547612200386753E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999616635316	WITHOUT_CLASSIFICATION	3.833646843055407E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetAdded(     *         org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999875552499	WITHOUT_CLASSIFICATION	1.2444750176889685E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetRemoved(     *         org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999658284796	WITHOUT_CLASSIFICATION	3.417152033303728E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetSet(     *         org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999631130807	WITHOUT_CLASSIFICATION	3.688691925487164E-8	DEFECT
/*     * @see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()     */	WITHOUT_CLASSIFICATION	0.9999999989548571	WITHOUT_CLASSIFICATION	1.0451428431711714E-9	DEFECT
/*     * @see org.argouml.application.api.CommandLineInterface#doCommand(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999999754395387	WITHOUT_CLASSIFICATION	2.456046133463196E-8	DEFECT
/*     * @see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()     */	WITHOUT_CLASSIFICATION	0.9999999989548571	WITHOUT_CLASSIFICATION	1.0451428431711714E-9	DEFECT
/*     * @see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabCancel()     */	WITHOUT_CLASSIFICATION	0.9999999984450654	WITHOUT_CLASSIFICATION	1.5549345658174264E-9	DEFECT
/*     * @see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabRefresh()     */	WITHOUT_CLASSIFICATION	0.9999999985199679	WITHOUT_CLASSIFICATION	1.480032080751794E-9	DEFECT
/*     * @see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabSave()     */	WITHOUT_CLASSIFICATION	0.9999999984696031	WITHOUT_CLASSIFICATION	1.530396815268063E-9	DEFECT
/*     * @see org.argouml.ui.explorer.PerspectiveManagerListener#addPerspective(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999903597164	WITHOUT_CLASSIFICATION	9.640283633274169E-9	DEFECT
/*     * @see org.argouml.ui.explorer.PerspectiveManagerListener#removePerspective(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.999999985384269	WITHOUT_CLASSIFICATION	1.4615730986431298E-8	DEFECT
/*         * @see org.argouml.ui.targetmanager.TargetListener#targetAdded(         * org.argouml.ui.targetmanager.TargetEvent)         */	WITHOUT_CLASSIFICATION	0.9999999912060858	WITHOUT_CLASSIFICATION	8.793914090379908E-9	DEFECT
/*         * @see org.argouml.ui.targetmanager.TargetListener#targetRemoved(         * org.argouml.ui.targetmanager.TargetEvent)         */	WITHOUT_CLASSIFICATION	0.999999975853158	WITHOUT_CLASSIFICATION	2.4146841984806608E-8	DEFECT
/*         * @see org.argouml.ui.targetmanager.TargetListener#targetSet(         * org.argouml.ui.targetmanager.TargetEvent)         */	WITHOUT_CLASSIFICATION	0.999999973934358	WITHOUT_CLASSIFICATION	2.6065641873185862E-8	DEFECT
/*     * @see org.argouml.ui.explorer.TreeModelUMLEventListener#modelElementChanged(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999862799607	WITHOUT_CLASSIFICATION	1.372003924910218E-8	DEFECT
/*     * @see org.argouml.ui.explorer.TreeModelUMLEventListener#modelElementAdded(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999727137494	WITHOUT_CLASSIFICATION	2.7286250485153546E-8	DEFECT
/*     * @see org.argouml.ui.explorer.TreeModelUMLEventListener#modelElementRemoved(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.99999995536369	WITHOUT_CLASSIFICATION	4.463630994388471E-8	DEFECT
/*     * the model structure has changed significantly, eg a new project.     * @see org.argouml.ui.explorer.TreeModelUMLEventListener#structureChanged()     */	WITHOUT_CLASSIFICATION	0.9999999989652599	WITHOUT_CLASSIFICATION	1.0347401057727797E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999992119132	WITHOUT_CLASSIFICATION	7.880868082603854E-10	DEFECT
/*     * @see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999981087605	WITHOUT_CLASSIFICATION	1.8912395015960405E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999981087605	WITHOUT_CLASSIFICATION	1.8912395015960405E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999992119132	WITHOUT_CLASSIFICATION	7.880868082603854E-10	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(     *         java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999919951361	WITHOUT_CLASSIFICATION	8.004863882955104E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(     *         java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999988823579	WITHOUT_CLASSIFICATION	1.117642106955101E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(     *         java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999919951361	WITHOUT_CLASSIFICATION	8.004863882955104E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(     *         java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999988823579	WITHOUT_CLASSIFICATION	1.117642106955101E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999992119132	WITHOUT_CLASSIFICATION	7.880868082603854E-10	DEFECT
/*     * @see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999981087605	WITHOUT_CLASSIFICATION	1.8912395015960405E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
// NOTE: No longer a separate type in UML 2.1	WITHOUT_CLASSIFICATION	0.9999944568781947	WITHOUT_CLASSIFICATION	5.543121805377083E-6	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999501700978	WITHOUT_CLASSIFICATION	4.982990232353502E-8	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999501700978	WITHOUT_CLASSIFICATION	4.982990232353502E-8	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(     *         java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999919951361	WITHOUT_CLASSIFICATION	8.004863882955104E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(     *         java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999988823579	WITHOUT_CLASSIFICATION	1.117642106955101E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999981087605	WITHOUT_CLASSIFICATION	1.8912395015960405E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999992119132	WITHOUT_CLASSIFICATION	7.880868082603854E-10	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999501700978	WITHOUT_CLASSIFICATION	4.982990232353502E-8	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(     *         java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999919951361	WITHOUT_CLASSIFICATION	8.004863882955104E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(     *         java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999988823579	WITHOUT_CLASSIFICATION	1.117642106955101E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(     *         java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999919951361	WITHOUT_CLASSIFICATION	8.004863882955104E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(     *         java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999988823579	WITHOUT_CLASSIFICATION	1.117642106955101E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(     *         java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999919951361	WITHOUT_CLASSIFICATION	8.004863882955104E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(     *         java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999988823579	WITHOUT_CLASSIFICATION	1.117642106955101E-9	DEFECT
/*     * @see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999501700978	WITHOUT_CLASSIFICATION	4.982990232353502E-8	DEFECT
/*     * @see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren(     *         java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999979651484	WITHOUT_CLASSIFICATION	2.034851641288585E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999992119132	WITHOUT_CLASSIFICATION	7.880868082603854E-10	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(     *         java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999988823579	WITHOUT_CLASSIFICATION	1.117642106955101E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(     *         java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999919951361	WITHOUT_CLASSIFICATION	8.004863882955104E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(     *         java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999988823579	WITHOUT_CLASSIFICATION	1.117642106955101E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(     *         java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999919951361	WITHOUT_CLASSIFICATION	8.004863882955104E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(     *         java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999988823579	WITHOUT_CLASSIFICATION	1.117642106955101E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999501700978	WITHOUT_CLASSIFICATION	4.982990232353502E-8	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999501700978	WITHOUT_CLASSIFICATION	4.982990232353502E-8	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(     *         java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999919951361	WITHOUT_CLASSIFICATION	8.004863882955104E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(     *         java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999988823579	WITHOUT_CLASSIFICATION	1.117642106955101E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999992119132	WITHOUT_CLASSIFICATION	7.880868082603854E-10	DEFECT
/*     * @see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999981087605	WITHOUT_CLASSIFICATION	1.8912395015960405E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()     */	WITHOUT_CLASSIFICATION	0.9999999961633711	WITHOUT_CLASSIFICATION	3.836628838988286E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999925600891	WITHOUT_CLASSIFICATION	7.4399108414291446E-9	DEFECT
/*     * @see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999989325796	WITHOUT_CLASSIFICATION	1.0674203167797877E-9	DEFECT
/*     * @see org.argouml.kernel.AbstractProjectMember#getType()     */	WITHOUT_CLASSIFICATION	0.999999914582226	WITHOUT_CLASSIFICATION	8.541777398870599E-8	DEFECT
/*     * @see org.argouml.kernel.AbstractProjectMember#getZipFileExtension()     */	WITHOUT_CLASSIFICATION	0.9999999483740533	WITHOUT_CLASSIFICATION	5.162594668663252E-8	DEFECT
/*     * @see org.argouml.cognitive.ToDoItem#deselect()     */	WITHOUT_CLASSIFICATION	0.9999999509411734	WITHOUT_CLASSIFICATION	4.905882657458341E-8	DEFECT
/*     * @see org.argouml.cognitive.ToDoItem#select()     */	WITHOUT_CLASSIFICATION	0.9999999231794603	WITHOUT_CLASSIFICATION	7.682053965564693E-8	DEFECT
/*     * @see org.argouml.kernel.AbstractProjectMember#getType()     */	WITHOUT_CLASSIFICATION	0.999999914582226	WITHOUT_CLASSIFICATION	8.541777398870599E-8	DEFECT
/*     * @see org.argouml.kernel.AbstractProjectMember#getZipFileExtension()     */	WITHOUT_CLASSIFICATION	0.9999999483740533	WITHOUT_CLASSIFICATION	5.162594668663252E-8	DEFECT
/*     * @see org.argouml.cognitive.checklist.CheckItem#expand(java.lang.String,     *      java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999550952476	WITHOUT_CLASSIFICATION	4.4904752409137465E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#getClarifier()     */	WITHOUT_CLASSIFICATION	0.9999999891791838	WITHOUT_CLASSIFICATION	1.0820816238281597E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#initWizard(     *         org.argouml.cognitive.ui.Wizard)     */	WITHOUT_CLASSIFICATION	0.9999999784979523	WITHOUT_CLASSIFICATION	2.1502047719047213E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)     */	WITHOUT_CLASSIFICATION	0.9999999691260181	WITHOUT_CLASSIFICATION	3.0873981995631093E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999169128823	WITHOUT_CLASSIFICATION	8.308711775415647E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999314440232	WITHOUT_CLASSIFICATION	6.855597679494315E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.AbstractCrUnconventionalName#computeSuggestion(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999999945381267	WITHOUT_CLASSIFICATION	5.4618732012488745E-9	DEFECT
/*     * @see org.argouml.cognitive.Poster#getClarifier()     */	WITHOUT_CLASSIFICATION	0.9999999891791838	WITHOUT_CLASSIFICATION	1.0820816238281597E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#stillValid(     *      org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999702531731	WITHOUT_CLASSIFICATION	2.9746826921203036E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#initWizard(     *         org.argouml.cognitive.ui.Wizard)     */	WITHOUT_CLASSIFICATION	0.9999999784979523	WITHOUT_CLASSIFICATION	2.1502047719047213E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)     */	WITHOUT_CLASSIFICATION	0.9999999691260181	WITHOUT_CLASSIFICATION	3.0873981995631093E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999314440232	WITHOUT_CLASSIFICATION	6.855597679494315E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#stillValid(     *      org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999702531731	WITHOUT_CLASSIFICATION	2.9746826921203036E-8	DEFECT
/*     * @see org.argouml.ui.Clarifier#setFig(org.tigris.gef.presentation.Fig)     */	WITHOUT_CLASSIFICATION	0.9999999930587116	WITHOUT_CLASSIFICATION	6.9412884313779245E-9	DEFECT
/*     * @see org.argouml.ui.Clarifier#setToDoItem(org.argouml.cognitive.ToDoItem)     */	WITHOUT_CLASSIFICATION	0.9999999896225047	WITHOUT_CLASSIFICATION	1.037749524987612E-8	DEFECT
/*     * @see org.argouml.ui.Clarifier#hit(int, int)     */	WITHOUT_CLASSIFICATION	0.9999999474788788	WITHOUT_CLASSIFICATION	5.252112133432971E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.ui.Clarifier#setFig(org.tigris.gef.presentation.Fig)     */	WITHOUT_CLASSIFICATION	0.9999999930587116	WITHOUT_CLASSIFICATION	6.9412884313779245E-9	DEFECT
/*     * @see org.argouml.ui.Clarifier#setToDoItem(org.argouml.cognitive.ToDoItem)     */	WITHOUT_CLASSIFICATION	0.9999999896225047	WITHOUT_CLASSIFICATION	1.037749524987612E-8	DEFECT
/*     * @see org.argouml.ui.Clarifier#hit(int, int)     */	WITHOUT_CLASSIFICATION	0.9999999474788788	WITHOUT_CLASSIFICATION	5.252112133432971E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999314440232	WITHOUT_CLASSIFICATION	6.855597679494315E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#stillValid(     *      org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999702531731	WITHOUT_CLASSIFICATION	2.9746826921203036E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#getClarifier()     */	WITHOUT_CLASSIFICATION	0.9999999891791838	WITHOUT_CLASSIFICATION	1.0820816238281597E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#initWizard(     *         org.argouml.cognitive.ui.Wizard)     */	WITHOUT_CLASSIFICATION	0.9999999784979523	WITHOUT_CLASSIFICATION	2.1502047719047213E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)     */	WITHOUT_CLASSIFICATION	0.9999999691260181	WITHOUT_CLASSIFICATION	3.0873981995631093E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#predicate( java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999292758024	WITHOUT_CLASSIFICATION	7.07241976690823E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#toDoItem(Object, Designer)     */	WITHOUT_CLASSIFICATION	0.9999999702406379	WITHOUT_CLASSIFICATION	2.975936211476152E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999314440232	WITHOUT_CLASSIFICATION	6.855597679494315E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#stillValid(     *      org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999702531731	WITHOUT_CLASSIFICATION	2.9746826921203036E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.UMLWizard#getNumSteps()     */	WITHOUT_CLASSIFICATION	0.9999999895753233	WITHOUT_CLASSIFICATION	1.0424676702384664E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.WizMEName#makePanel(int)     */	WITHOUT_CLASSIFICATION	0.9999999187889587	WITHOUT_CLASSIFICATION	8.121104131242662E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.WizMEName#doAction(int)     */	WITHOUT_CLASSIFICATION	0.99999992493096	WITHOUT_CLASSIFICATION	7.50690399623494E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999314440232	WITHOUT_CLASSIFICATION	6.855597679494315E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#stillValid(     *      org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999702531731	WITHOUT_CLASSIFICATION	2.9746826921203036E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#getClarifier()     */	WITHOUT_CLASSIFICATION	0.9999999891791838	WITHOUT_CLASSIFICATION	1.0820816238281597E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#initWizard(     *         org.argouml.cognitive.ui.Wizard)     */	WITHOUT_CLASSIFICATION	0.9999999784979523	WITHOUT_CLASSIFICATION	2.1502047719047213E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.AbstractCrUnconventionalName#computeSuggestion(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999999945381267	WITHOUT_CLASSIFICATION	5.4618732012488745E-9	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)     */	WITHOUT_CLASSIFICATION	0.9999999691260181	WITHOUT_CLASSIFICATION	3.0873981995631093E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999169128823	WITHOUT_CLASSIFICATION	8.308711775415647E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999314440232	WITHOUT_CLASSIFICATION	6.855597679494315E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#stillValid(     *      org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999702531731	WITHOUT_CLASSIFICATION	2.9746826921203036E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     * java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999405620756	WITHOUT_CLASSIFICATION	5.9437924234508895E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#getClarifier()     */	WITHOUT_CLASSIFICATION	0.9999999891791838	WITHOUT_CLASSIFICATION	1.0820816238281597E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#initWizard(     *         org.argouml.cognitive.ui.Wizard)     */	WITHOUT_CLASSIFICATION	0.9999999784979523	WITHOUT_CLASSIFICATION	2.1502047719047213E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)     */	WITHOUT_CLASSIFICATION	0.9999999691260181	WITHOUT_CLASSIFICATION	3.0873981995631093E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#toDoItem(     * java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999507178794	WITHOUT_CLASSIFICATION	4.928212062170349E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#stillValid(     *      org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999702531731	WITHOUT_CLASSIFICATION	2.9746826921203036E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#initWizard(     *      org.argouml.cognitive.ui.Wizard)     */	WITHOUT_CLASSIFICATION	0.9999999784979523	WITHOUT_CLASSIFICATION	2.1502047719047213E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)     */	WITHOUT_CLASSIFICATION	0.9999999691260181	WITHOUT_CLASSIFICATION	3.0873981995631093E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.cognitive.ui.Wizard#doAction(int)     */	WITHOUT_CLASSIFICATION	0.9999999370319025	WITHOUT_CLASSIFICATION	6.296809752091902E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#getClarifier()     */	WITHOUT_CLASSIFICATION	0.9999999891791838	WITHOUT_CLASSIFICATION	1.0820816238281597E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)     */	WITHOUT_CLASSIFICATION	0.9999999691260181	WITHOUT_CLASSIFICATION	3.0873981995631093E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#initWizard(     *         org.argouml.cognitive.ui.Wizard)     */	WITHOUT_CLASSIFICATION	0.9999999784979523	WITHOUT_CLASSIFICATION	2.1502047719047213E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)     */	WITHOUT_CLASSIFICATION	0.9999999691260181	WITHOUT_CLASSIFICATION	3.0873981995631093E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#getClarifier()     */	WITHOUT_CLASSIFICATION	0.9999999891791838	WITHOUT_CLASSIFICATION	1.0820816238281597E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#initWizard(     *         org.argouml.cognitive.ui.Wizard)     */	WITHOUT_CLASSIFICATION	0.9999999784979523	WITHOUT_CLASSIFICATION	2.1502047719047213E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.AbstractCrUnconventionalName#computeSuggestion(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999999945381267	WITHOUT_CLASSIFICATION	5.4618732012488745E-9	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)     */	WITHOUT_CLASSIFICATION	0.9999999691260181	WITHOUT_CLASSIFICATION	3.0873981995631093E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#getClarifier()     */	WITHOUT_CLASSIFICATION	0.9999999891791838	WITHOUT_CLASSIFICATION	1.0820816238281597E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999385898607	WITHOUT_CLASSIFICATION	6.141013935247869E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedMetatypes()     */	WITHOUT_CLASSIFICATION	0.9999999364627218	WITHOUT_CLASSIFICATION	6.35372781740049E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999311108835	WITHOUT_CLASSIFICATION	6.888911654577312E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#stillValid(     *      org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999702531731	WITHOUT_CLASSIFICATION	2.9746826921203036E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999169128823	WITHOUT_CLASSIFICATION	8.308711775415647E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#getClarifier()     */	WITHOUT_CLASSIFICATION	0.9999999891791838	WITHOUT_CLASSIFICATION	1.0820816238281597E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#initWizard(     *         org.argouml.cognitive.ui.Wizard)     */	WITHOUT_CLASSIFICATION	0.9999999784979523	WITHOUT_CLASSIFICATION	2.1502047719047213E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)     */	WITHOUT_CLASSIFICATION	0.9999999691260181	WITHOUT_CLASSIFICATION	3.0873981995631093E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999314440232	WITHOUT_CLASSIFICATION	6.855597679494315E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#stillValid(     *      org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999702531731	WITHOUT_CLASSIFICATION	2.9746826921203036E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*    * @see org.argouml.profile.Profile#getProfileIdentifier()    */	WITHOUT_CLASSIFICATION	0.9999999780968535	WITHOUT_CLASSIFICATION	2.1903146518626105E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#getClarifier()     */	WITHOUT_CLASSIFICATION	0.9999999891791838	WITHOUT_CLASSIFICATION	1.0820816238281597E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#initWizard(     *         org.argouml.cognitive.ui.Wizard)     */	WITHOUT_CLASSIFICATION	0.9999999784979523	WITHOUT_CLASSIFICATION	2.1502047719047213E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)     */	WITHOUT_CLASSIFICATION	0.9999999691260181	WITHOUT_CLASSIFICATION	3.0873981995631093E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *         java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999314440232	WITHOUT_CLASSIFICATION	6.855597679494315E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#stillValid(     *      org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999702531731	WITHOUT_CLASSIFICATION	2.9746826921203036E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999314440232	WITHOUT_CLASSIFICATION	6.855597679494315E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#stillValid(     *      org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999702531731	WITHOUT_CLASSIFICATION	2.9746826921203036E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999314440232	WITHOUT_CLASSIFICATION	6.855597679494315E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#stillValid(     *      org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999702531731	WITHOUT_CLASSIFICATION	2.9746826921203036E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999314440232	WITHOUT_CLASSIFICATION	6.855597679494315E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#stillValid(     *      org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999702531731	WITHOUT_CLASSIFICATION	2.9746826921203036E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#initWizard(     *         org.argouml.cognitive.ui.Wizard)     */	WITHOUT_CLASSIFICATION	0.9999999784979523	WITHOUT_CLASSIFICATION	2.1502047719047213E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.AbstractCrUnconventionalName#computeSuggestion(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999999945381267	WITHOUT_CLASSIFICATION	5.4618732012488745E-9	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)     */	WITHOUT_CLASSIFICATION	0.9999999691260181	WITHOUT_CLASSIFICATION	3.0873981995631093E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999311108835	WITHOUT_CLASSIFICATION	6.888911654577312E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#stillValid(     *      org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999702531731	WITHOUT_CLASSIFICATION	2.9746826921203036E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999169128823	WITHOUT_CLASSIFICATION	8.308711775415647E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999169128823	WITHOUT_CLASSIFICATION	8.308711775415647E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedMetatypes()     */	WITHOUT_CLASSIFICATION	0.9999999364627218	WITHOUT_CLASSIFICATION	6.35372781740049E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)     */	WITHOUT_CLASSIFICATION	0.9999999691260181	WITHOUT_CLASSIFICATION	3.0873981995631093E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999314440232	WITHOUT_CLASSIFICATION	6.855597679494315E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#stillValid(     *      org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999702531731	WITHOUT_CLASSIFICATION	2.9746826921203036E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.cognitive.ui.Wizard#doAction(int)     */	WITHOUT_CLASSIFICATION	0.9999999370319025	WITHOUT_CLASSIFICATION	6.296809752091902E-8	DEFECT
/*     * @see org.argouml.cognitive.ui.Wizard#makePanel(int)     */	WITHOUT_CLASSIFICATION	0.9999999293183675	WITHOUT_CLASSIFICATION	7.068163255462074E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999311108835	WITHOUT_CLASSIFICATION	6.888911654577312E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#stillValid(     *      org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999702531731	WITHOUT_CLASSIFICATION	2.9746826921203036E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#getClarifier()     */	WITHOUT_CLASSIFICATION	0.9999999891791838	WITHOUT_CLASSIFICATION	1.0820816238281597E-8	DEFECT
/*     * @see org.argouml.cognitive.ui.Wizard#canFinish()     */	WITHOUT_CLASSIFICATION	0.9999999184262245	WITHOUT_CLASSIFICATION	8.157377550417209E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999314440232	WITHOUT_CLASSIFICATION	6.855597679494315E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#stillValid(     *      org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999702531731	WITHOUT_CLASSIFICATION	2.9746826921203036E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.UMLWizard#setSuggestion(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999999141689477	WITHOUT_CLASSIFICATION	8.583105227703708E-8	DEFECT
/*     * @see org.argouml.cognitive.ui.Wizard#doAction(int)     */	WITHOUT_CLASSIFICATION	0.9999999370319025	WITHOUT_CLASSIFICATION	6.296809752091902E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.cognitive.ui.Wizard#getNumSteps()     */	WITHOUT_CLASSIFICATION	0.99999997986803	WITHOUT_CLASSIFICATION	2.0131969875731586E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#getClarifier()     */	WITHOUT_CLASSIFICATION	0.9999999891791838	WITHOUT_CLASSIFICATION	1.0820816238281597E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#initWizard(     *         org.argouml.cognitive.ui.Wizard)     */	WITHOUT_CLASSIFICATION	0.9999999784979523	WITHOUT_CLASSIFICATION	2.1502047719047213E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)     */	WITHOUT_CLASSIFICATION	0.9999999691260181	WITHOUT_CLASSIFICATION	3.0873981995631093E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999314440232	WITHOUT_CLASSIFICATION	6.855597679494315E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#stillValid(     *      org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999702531731	WITHOUT_CLASSIFICATION	2.9746826921203036E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.cognitive.ui.Wizard#makePanel(int)     */	WITHOUT_CLASSIFICATION	0.9999999293183675	WITHOUT_CLASSIFICATION	7.068163255462074E-8	DEFECT
/*     * @see org.argouml.cognitive.ui.Wizard#doAction(int)     */	WITHOUT_CLASSIFICATION	0.9999999370319025	WITHOUT_CLASSIFICATION	6.296809752091902E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999311108835	WITHOUT_CLASSIFICATION	6.888911654577312E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#stillValid(     *      org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999702531731	WITHOUT_CLASSIFICATION	2.9746826921203036E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.cognitive.ui.Wizard#getNumSteps()     */	WITHOUT_CLASSIFICATION	0.99999997986803	WITHOUT_CLASSIFICATION	2.0131969875731586E-8	DEFECT
/*     * @see org.argouml.cognitive.ui.Wizard#makePanel(int)     */	WITHOUT_CLASSIFICATION	0.9999999293183675	WITHOUT_CLASSIFICATION	7.068163255462074E-8	DEFECT
/*     * @see org.argouml.cognitive.ui.Wizard#doAction(int)     */	WITHOUT_CLASSIFICATION	0.9999999370319025	WITHOUT_CLASSIFICATION	6.296809752091902E-8	DEFECT
/*     * @see org.argouml.cognitive.ui.Wizard#canGoNext()     */	WITHOUT_CLASSIFICATION	0.9999999396733376	WITHOUT_CLASSIFICATION	6.032666250975539E-8	DEFECT
/*     * @see org.argouml.cognitive.ui.Wizard#canFinish()     */	WITHOUT_CLASSIFICATION	0.9999999184262245	WITHOUT_CLASSIFICATION	8.157377550417209E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999314440232	WITHOUT_CLASSIFICATION	6.855597679494315E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#stillValid(     *      org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999702531731	WITHOUT_CLASSIFICATION	2.9746826921203036E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999169128823	WITHOUT_CLASSIFICATION	8.308711775415647E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999169128823	WITHOUT_CLASSIFICATION	8.308711775415647E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.cognitive.ui.Wizard#makePanel(int)     */	WITHOUT_CLASSIFICATION	0.9999999293183675	WITHOUT_CLASSIFICATION	7.068163255462074E-8	DEFECT
/*     * @see org.argouml.cognitive.ui.Wizard#doAction(int)     */	WITHOUT_CLASSIFICATION	0.9999999370319025	WITHOUT_CLASSIFICATION	6.296809752091902E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999169128823	WITHOUT_CLASSIFICATION	8.308711775415647E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999311108835	WITHOUT_CLASSIFICATION	6.888911654577312E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#stillValid(     *      org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999702531731	WITHOUT_CLASSIFICATION	2.9746826921203036E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#getClarifier()     */	WITHOUT_CLASSIFICATION	0.9999999891791838	WITHOUT_CLASSIFICATION	1.0820816238281597E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#initWizard(     *         org.argouml.cognitive.ui.Wizard)     */	WITHOUT_CLASSIFICATION	0.9999999784979523	WITHOUT_CLASSIFICATION	2.1502047719047213E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)     */	WITHOUT_CLASSIFICATION	0.9999999691260181	WITHOUT_CLASSIFICATION	3.0873981995631093E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999311108835	WITHOUT_CLASSIFICATION	6.888911654577312E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#stillValid(     *      org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999702531731	WITHOUT_CLASSIFICATION	2.9746826921203036E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)     */	WITHOUT_CLASSIFICATION	0.9999999691260181	WITHOUT_CLASSIFICATION	3.0873981995631093E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.ui.Clarifier#setFig(org.tigris.gef.presentation.Fig)     */	WITHOUT_CLASSIFICATION	0.9999999930587116	WITHOUT_CLASSIFICATION	6.9412884313779245E-9	DEFECT
/*     * @see org.argouml.ui.Clarifier#setToDoItem(org.argouml.cognitive.ToDoItem)     */	WITHOUT_CLASSIFICATION	0.9999999896225047	WITHOUT_CLASSIFICATION	1.037749524987612E-8	DEFECT
/*     * @see org.argouml.ui.Clarifier#hit(int, int)     */	WITHOUT_CLASSIFICATION	0.9999999474788788	WITHOUT_CLASSIFICATION	5.252112133432971E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999314440232	WITHOUT_CLASSIFICATION	6.855597679494315E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#stillValid(     *      org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999702531731	WITHOUT_CLASSIFICATION	2.9746826921203036E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *         java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999385898607	WITHOUT_CLASSIFICATION	6.141013935247869E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.cognitive.ui.Wizard#doAction(int)     */	WITHOUT_CLASSIFICATION	0.9999999370319025	WITHOUT_CLASSIFICATION	6.296809752091902E-8	DEFECT
/*     * @see org.argouml.cognitive.ui.Wizard#makePanel(int)     */	WITHOUT_CLASSIFICATION	0.9999999293183675	WITHOUT_CLASSIFICATION	7.068163255462074E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999385898607	WITHOUT_CLASSIFICATION	6.141013935247869E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999314440232	WITHOUT_CLASSIFICATION	6.855597679494315E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#stillValid(     *      org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999702531731	WITHOUT_CLASSIFICATION	2.9746826921203036E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.cognitive.ui.Wizard#getNumSteps()     */	WITHOUT_CLASSIFICATION	0.99999997986803	WITHOUT_CLASSIFICATION	2.0131969875731586E-8	DEFECT
/*     * @see org.argouml.cognitive.ui.Wizard#makePanel(int)     */	WITHOUT_CLASSIFICATION	0.9999999293183675	WITHOUT_CLASSIFICATION	7.068163255462074E-8	DEFECT
/*     * @see org.argouml.cognitive.ui.Wizard#canFinish()     */	WITHOUT_CLASSIFICATION	0.9999999184262245	WITHOUT_CLASSIFICATION	8.157377550417209E-8	DEFECT
/*     * @see org.argouml.cognitive.ui.Wizard#doAction(int)     */	WITHOUT_CLASSIFICATION	0.9999999370319025	WITHOUT_CLASSIFICATION	6.296809752091902E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#predicate2(     *      java.lang.Object, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999353358159	WITHOUT_CLASSIFICATION	6.466418404423968E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object,     *      org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999314440232	WITHOUT_CLASSIFICATION	6.855597679494315E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#stillValid(     *      org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)     */	WITHOUT_CLASSIFICATION	0.9999999702531731	WITHOUT_CLASSIFICATION	2.9746826921203036E-8	DEFECT
/*     * @see org.argouml.cognitive.Poster#getClarifier()     */	WITHOUT_CLASSIFICATION	0.9999999891791838	WITHOUT_CLASSIFICATION	1.0820816238281597E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#initWizard(     *      org.argouml.cognitive.ui.Wizard)     */	WITHOUT_CLASSIFICATION	0.9999999784979523	WITHOUT_CLASSIFICATION	2.1502047719047213E-8	DEFECT
/*     * @see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)     */	WITHOUT_CLASSIFICATION	0.9999999691260181	WITHOUT_CLASSIFICATION	3.0873981995631093E-8	DEFECT
/*     * @see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()     */	WITHOUT_CLASSIFICATION	0.9999999072518093	WITHOUT_CLASSIFICATION	9.274819065722904E-8	DEFECT
/*     * @see org.argouml.kernel.AbstractProjectMember#getType()     */	WITHOUT_CLASSIFICATION	0.999999914582226	WITHOUT_CLASSIFICATION	8.541777398870599E-8	DEFECT
/*     * @see org.argouml.kernel.AbstractProjectMember#getZipFileExtension()     */	WITHOUT_CLASSIFICATION	0.9999999483740533	WITHOUT_CLASSIFICATION	5.162594668663252E-8	DEFECT
/*     * @see org.argouml.kernel.ProjectMember#repair()     */	WITHOUT_CLASSIFICATION	0.9999996565367015	WITHOUT_CLASSIFICATION	3.434632984357747E-7	DEFECT
/*     * @see org.argouml.uml.diagram.layout.Layouter#add(org.argouml.uml.diagram.layout.LayoutedObject)     */	WITHOUT_CLASSIFICATION	0.9999997921520479	WITHOUT_CLASSIFICATION	2.0784795202240136E-7	DEFECT
/*     * @see org.argouml.uml.diagram.layout.Layouter#remove(org.argouml.uml.diagram.layout.LayoutedObject)     */	WITHOUT_CLASSIFICATION	0.9999997266070967	WITHOUT_CLASSIFICATION	2.7339290333446206E-7	DEFECT
/*     * @see org.argouml.uml.diagram.layout.Layouter#getObjects()     */	WITHOUT_CLASSIFICATION	0.9999997637953923	WITHOUT_CLASSIFICATION	2.3620460759398492E-7	DEFECT
/*     * @see org.argouml.uml.diagram.layout.Layouter#getObject(int)     */	WITHOUT_CLASSIFICATION	0.9999998933766459	WITHOUT_CLASSIFICATION	1.0662335416469011E-7	DEFECT
/*     * @see org.argouml.uml.diagram.layout.Layouter#layout()     */	WITHOUT_CLASSIFICATION	0.9999996770062738	WITHOUT_CLASSIFICATION	3.229937261552186E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#getLabelName()     */	WITHOUT_CLASSIFICATION	0.9999999118256613	WITHOUT_CLASSIFICATION	8.817433873554592E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#getDependentElement()     */	WITHOUT_CLASSIFICATION	0.9999999198235201	WITHOUT_CLASSIFICATION	8.017647991239172E-8	DEFECT
/*     * @see org.argouml.uml.diagram.layout.Layouter#getMinimumDiagramSize()     */	WITHOUT_CLASSIFICATION	0.9999994483066575	WITHOUT_CLASSIFICATION	5.516933424602658E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#propertyChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999999490206914	WITHOUT_CLASSIFICATION	5.0979308449328004E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#getOwner()     */	WITHOUT_CLASSIFICATION	0.9999995114623422	WITHOUT_CLASSIFICATION	4.885376577723762E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999541209197	WITHOUT_CLASSIFICATION	4.58790803210974E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999324513832	WITHOUT_CLASSIFICATION	6.754861684087216E-8	DEFECT
/*     * @see org.argouml.uml.diagram.activity.ui.FigActionState#getNotationProviderType()     */	WITHOUT_CLASSIFICATION	0.9999992649068333	WITHOUT_CLASSIFICATION	7.350931666768707E-7	DEFECT
/*     * @see org.argouml.uml.diagram.state.ui.FigStateVertex#makeSelection()     */	WITHOUT_CLASSIFICATION	0.9999997189110744	WITHOUT_CLASSIFICATION	2.8108892560174825E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#initNotationProviders(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.999999752457469	WITHOUT_CLASSIFICATION	2.4754253106559193E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()     */	WITHOUT_CLASSIFICATION	0.9999994664419952	WITHOUT_CLASSIFICATION	5.335580048003605E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#textEdited(org.tigris.gef.presentation.FigText)     */	WITHOUT_CLASSIFICATION	0.9999999712303411	WITHOUT_CLASSIFICATION	2.8769658911360887E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)     */	WITHOUT_CLASSIFICATION	0.999999956129067	WITHOUT_CLASSIFICATION	4.387093294162991E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#modelChanged(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999999694893208	WITHOUT_CLASSIFICATION	3.051067919287087E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#updateListeners(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.999999846870314	WITHOUT_CLASSIFICATION	1.531296859873956E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#updateNameText()     */	WITHOUT_CLASSIFICATION	0.9999999335976515	WITHOUT_CLASSIFICATION	6.640234848786101E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#clone()     */	WITHOUT_CLASSIFICATION	0.9999999507576267	WITHOUT_CLASSIFICATION	4.9242373304623675E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#addEnclosedFig(org.tigris.gef.presentation.Fig)     */	WITHOUT_CLASSIFICATION	0.9999999946407525	WITHOUT_CLASSIFICATION	5.359247444635139E-9	DEFECT
/*     * @see org.argouml.uml.diagram.activity.ui.SelectionActionState#getNewNodeType(int)     */	WITHOUT_CLASSIFICATION	0.9999999762924754	WITHOUT_CLASSIFICATION	2.3707524613348505E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#modelChanged(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999999694893208	WITHOUT_CLASSIFICATION	3.051067919287087E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#getLabelName()     */	WITHOUT_CLASSIFICATION	0.9999999118256613	WITHOUT_CLASSIFICATION	8.817433873554592E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999541209197	WITHOUT_CLASSIFICATION	4.58790803210974E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999324513832	WITHOUT_CLASSIFICATION	6.754861684087216E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNotationProviderType()     */	WITHOUT_CLASSIFICATION	0.9999990653194448	WITHOUT_CLASSIFICATION	9.346805552708876E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#getUmlActions()     */	WITHOUT_CLASSIFICATION	0.9999998295669976	WITHOUT_CLASSIFICATION	1.704330023501436E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#getLabelName()     */	WITHOUT_CLASSIFICATION	0.9999999118256613	WITHOUT_CLASSIFICATION	8.817433873554592E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999541209197	WITHOUT_CLASSIFICATION	4.58790803210974E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999324513832	WITHOUT_CLASSIFICATION	6.754861684087216E-8	DEFECT
/*     * If the new encloser is null, and the old one is a Component,     * then the "enclosed" Fig has been moved on the diagram.     * This causes the model to be adapted as follows:     * remove the elementResidence     * between the "enclosed" and the oldEncloser.     *     * @see org.argouml.ui.ArgoDiagram#changeFigEncloser(org.tigris.gef.presentation.FigNode, org.tigris.gef.presentation.FigNode, org.tigris.gef.presentation.FigNode)     */	WITHOUT_CLASSIFICATION	0.9999982397853163	WITHOUT_CLASSIFICATION	1.7602146836102007E-6	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#getNotationProviderType()     */	WITHOUT_CLASSIFICATION	0.9999991338127796	WITHOUT_CLASSIFICATION	8.661872203282069E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#updateListeners(java.lang.Object, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997555120942	WITHOUT_CLASSIFICATION	2.44487905831927E-7	DEFECT
/*     * @see org.argouml.uml.diagram.UMLMutableGraphSupport#isRemoveFromDiagramAllowed(Collection)     */	WITHOUT_CLASSIFICATION	0.9999999747320026	WITHOUT_CLASSIFICATION	2.526799730379379E-8	DEFECT
/*     * @see org.argouml.uml.diagram.state.ui.FigHistoryState#getH()     */	WITHOUT_CLASSIFICATION	0.9999999586920029	WITHOUT_CLASSIFICATION	4.13079970901442E-8	DEFECT
/*     * The Transition has a name text box. It contains:     * <ul>     * <li>The event-signature     * <li>The guard condition between []     * <li>The action expression     * </ul><p>     *     * The content of the text box is generated by its own notationProvider.     *      * @see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNotationProviderType()     */	WITHOUT_CLASSIFICATION	0.9999996822534846	WITHOUT_CLASSIFICATION	3.1774651537879176E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigEdgeModelElement#getDestination()     */	WITHOUT_CLASSIFICATION	0.9999999742143089	WITHOUT_CLASSIFICATION	2.578569113348661E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigEdgeModelElement#getSource()     */	WITHOUT_CLASSIFICATION	0.9999999219711749	WITHOUT_CLASSIFICATION	7.802882513572973E-8	DEFECT
/*     * @see org.argouml.uml.diagram.state.ui.FigState#getInitialHeight()     */	WITHOUT_CLASSIFICATION	0.9999999647163719	WITHOUT_CLASSIFICATION	3.528362817735703E-8	DEFECT
/*     * @see org.argouml.uml.diagram.state.ui.FigState#getInitialWidth()     */	WITHOUT_CLASSIFICATION	0.9999999682680726	WITHOUT_CLASSIFICATION	3.173192734101052E-8	DEFECT
/*     * @see org.argouml.uml.diagram.state.ui.FigState#getInitialX()     */	WITHOUT_CLASSIFICATION	0.9999999460455551	WITHOUT_CLASSIFICATION	5.3954444936249773E-8	DEFECT
/*     * @see org.argouml.uml.diagram.state.ui.FigState#getInitialY()     */	WITHOUT_CLASSIFICATION	0.9999999720148097	WITHOUT_CLASSIFICATION	2.7985190269480193E-8	DEFECT
/*     * Update the text labels.     *     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#modelChanged(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999999818787833	WITHOUT_CLASSIFICATION	1.812121680781773E-8	DEFECT
/*     * Update the text labels and listeners.     *     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#modelChanged(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999999771261103	WITHOUT_CLASSIFICATION	2.287388966137784E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#updateListeners(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.999999846870314	WITHOUT_CLASSIFICATION	1.531296859873956E-7	DEFECT
/*     * @see org.argouml.uml.diagram.state.ui.FigState#getInitialHeight()     */	WITHOUT_CLASSIFICATION	0.9999999647163719	WITHOUT_CLASSIFICATION	3.528362817735703E-8	DEFECT
/*     * @see org.argouml.uml.diagram.state.ui.FigState#getInitialWidth()     */	WITHOUT_CLASSIFICATION	0.9999999682680726	WITHOUT_CLASSIFICATION	3.173192734101052E-8	DEFECT
/*     * @see org.argouml.uml.diagram.state.ui.FigState#getInitialX()     */	WITHOUT_CLASSIFICATION	0.9999999460455551	WITHOUT_CLASSIFICATION	5.3954444936249773E-8	DEFECT
/*     * @see org.argouml.uml.diagram.state.ui.FigState#getInitialY()     */	WITHOUT_CLASSIFICATION	0.9999999720148097	WITHOUT_CLASSIFICATION	2.7985190269480193E-8	DEFECT
/*     * @see org.argouml.uml.diagram.state.ui.FigStateVertex#initNotationProviders(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999998809425982	WITHOUT_CLASSIFICATION	1.1905740189819312E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#removeFromDiagramImpl()     */	WITHOUT_CLASSIFICATION	0.9999998213052307	WITHOUT_CLASSIFICATION	1.7869476936100214E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()     */	WITHOUT_CLASSIFICATION	0.9999994664419952	WITHOUT_CLASSIFICATION	5.335580048003605E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)     */	WITHOUT_CLASSIFICATION	0.999999956129067	WITHOUT_CLASSIFICATION	4.387093294162991E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#textEdited(org.tigris.gef.presentation.FigText)     */	WITHOUT_CLASSIFICATION	0.9999999712303411	WITHOUT_CLASSIFICATION	2.8769658911360887E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#modelChanged(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999999694893208	WITHOUT_CLASSIFICATION	3.051067919287087E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()     */	WITHOUT_CLASSIFICATION	0.9999994664419952	WITHOUT_CLASSIFICATION	5.335580048003605E-7	DEFECT
/*     * @see org.argouml.uml.diagram.state.ui.FigState#getInitialHeight()     */	WITHOUT_CLASSIFICATION	0.9999999647163719	WITHOUT_CLASSIFICATION	3.528362817735703E-8	DEFECT
/*     * @see org.argouml.uml.diagram.state.ui.FigState#getInitialWidth()     */	WITHOUT_CLASSIFICATION	0.9999999682680726	WITHOUT_CLASSIFICATION	3.173192734101052E-8	DEFECT
/*     * @see org.argouml.uml.diagram.state.ui.FigState#getInitialX()     */	WITHOUT_CLASSIFICATION	0.9999999460455551	WITHOUT_CLASSIFICATION	5.3954444936249773E-8	DEFECT
/*     * @see org.argouml.uml.diagram.state.ui.FigState#getInitialY()     */	WITHOUT_CLASSIFICATION	0.9999999720148097	WITHOUT_CLASSIFICATION	2.7985190269480193E-8	DEFECT
/*     * @see org.argouml.uml.diagram.state.ui.FigState#getInitialHeight()     */	WITHOUT_CLASSIFICATION	0.9999999647163719	WITHOUT_CLASSIFICATION	3.528362817735703E-8	DEFECT
/*     * @see org.argouml.uml.diagram.state.ui.FigState#getInitialWidth()     */	WITHOUT_CLASSIFICATION	0.9999999682680726	WITHOUT_CLASSIFICATION	3.173192734101052E-8	DEFECT
/*     * @see org.argouml.uml.diagram.state.ui.FigState#getInitialX()     */	WITHOUT_CLASSIFICATION	0.9999999460455551	WITHOUT_CLASSIFICATION	5.3954444936249773E-8	DEFECT
/*     * @see org.argouml.uml.diagram.state.ui.FigState#getInitialY()     */	WITHOUT_CLASSIFICATION	0.9999999720148097	WITHOUT_CLASSIFICATION	2.7985190269480193E-8	DEFECT
/*     * @see org.argouml.uml.diagram.state.ui.FigHistoryState#getH()     */	WITHOUT_CLASSIFICATION	0.9999999586920029	WITHOUT_CLASSIFICATION	4.13079970901442E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#propertyChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999999490206914	WITHOUT_CLASSIFICATION	5.0979308449328004E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#getLabelName()     */	WITHOUT_CLASSIFICATION	0.9999999118256613	WITHOUT_CLASSIFICATION	8.817433873554592E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#getDependentElement()     */	WITHOUT_CLASSIFICATION	0.9999999198235201	WITHOUT_CLASSIFICATION	8.017647991239172E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999541209197	WITHOUT_CLASSIFICATION	4.58790803210974E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999324513832	WITHOUT_CLASSIFICATION	6.754861684087216E-8	DEFECT
/*     * @see org.argouml.uml.diagram.layout.LayoutedEdge#layout()     */	WITHOUT_CLASSIFICATION	0.9999998919712078	WITHOUT_CLASSIFICATION	1.0802879224660125E-7	DEFECT
/*     * @see org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode#getTypeOrderNumer()     */	WITHOUT_CLASSIFICATION	0.9999999629776354	WITHOUT_CLASSIFICATION	3.702236464908959E-8	DEFECT
/*     * @see org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode#calculateWeight()     */	WITHOUT_CLASSIFICATION	0.9999999664842464	WITHOUT_CLASSIFICATION	3.351575362362381E-8	DEFECT
/*     * @see org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode#getRank()     */	WITHOUT_CLASSIFICATION	0.999999858120603	WITHOUT_CLASSIFICATION	1.4187939708097122E-7	DEFECT
/*     * @see org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode#getWeight()     */	WITHOUT_CLASSIFICATION	0.999999977799578	WITHOUT_CLASSIFICATION	2.2200421907734096E-8	DEFECT
/*     * @see org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode#isStandalone()     */	WITHOUT_CLASSIFICATION	0.9999999800637782	WITHOUT_CLASSIFICATION	1.993622179200422E-8	DEFECT
/*     * Nothing is editable, since a Link takes its identity      * from the Association.     *      * @see org.argouml.uml.diagram.ui.FigEdgeModelElement#canEdit(     * org.tigris.gef.presentation.Fig)     */	WITHOUT_CLASSIFICATION	0.9999681336180809	WITHOUT_CLASSIFICATION	3.1866381919108267E-5	DEFECT
/*     * Listen also to the association, of which the link is an instantiation,      * since we want to update the rendering when      * the association name changes.     *      * @see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners(     * java.lang.Object, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999998190421917	WITHOUT_CLASSIFICATION	1.8095780819780627E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigEdgeModelElement#getDestination()     */	WITHOUT_CLASSIFICATION	0.9999999742143089	WITHOUT_CLASSIFICATION	2.578569113348661E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigEdgeModelElement#getSource()     */	WITHOUT_CLASSIFICATION	0.9999999219711749	WITHOUT_CLASSIFICATION	7.802882513572973E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#setNamespace(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.99999971049223	WITHOUT_CLASSIFICATION	2.8950777002309924E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#getUmlActions()     */	WITHOUT_CLASSIFICATION	0.9999998295669976	WITHOUT_CLASSIFICATION	1.704330023501436E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#getLabelName()     */	WITHOUT_CLASSIFICATION	0.9999999118256613	WITHOUT_CLASSIFICATION	8.817433873554592E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999541209197	WITHOUT_CLASSIFICATION	4.58790803210974E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999324513832	WITHOUT_CLASSIFICATION	6.754861684087216E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()     */	WITHOUT_CLASSIFICATION	0.9999994664419952	WITHOUT_CLASSIFICATION	5.335580048003605E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#updateStereotypeText()     */	WITHOUT_CLASSIFICATION	0.9999996807336055	WITHOUT_CLASSIFICATION	3.1926639451795617E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)     */	WITHOUT_CLASSIFICATION	0.999999956129067	WITHOUT_CLASSIFICATION	4.387093294162991E-8	DEFECT
/*     * @see org.argouml.uml.reveng.ImportSettings#getImportLevel()     */	WITHOUT_CLASSIFICATION	0.9999999597396834	WITHOUT_CLASSIFICATION	4.02603166501696E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.StereotypeContainer#isStereotypeVisible()     */	WITHOUT_CLASSIFICATION	0.9999992134238078	WITHOUT_CLASSIFICATION	7.865761921310441E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.StereotypeContainer#setStereotypeVisible(boolean)     */	WITHOUT_CLASSIFICATION	0.9999999771873431	WITHOUT_CLASSIFICATION	2.2812656873372208E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.VisibilityContainer#isVisibilityVisible()     */	WITHOUT_CLASSIFICATION	0.9999997699853846	WITHOUT_CLASSIFICATION	2.300146153764859E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.VisibilityContainer#setVisibilityVisible(boolean)     */	WITHOUT_CLASSIFICATION	0.9999999918102194	WITHOUT_CLASSIFICATION	8.189780620447634E-9	DEFECT
/*     * @see org.argouml.ui.TabTarget#refresh()     */	WITHOUT_CLASSIFICATION	0.9999999663005853	WITHOUT_CLASSIFICATION	3.3699414818509625E-8	DEFECT
/*     * @see org.argouml.ui.TabTarget#refresh()     */	WITHOUT_CLASSIFICATION	0.9999999663005853	WITHOUT_CLASSIFICATION	3.3699414818509625E-8	DEFECT
/*     * @see org.argouml.kernel.DelayedVChangeListener#delayedVetoableChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999998619203508	WITHOUT_CLASSIFICATION	1.3807964915943132E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#textEdited(org.tigris.gef.presentation.FigText)     */	WITHOUT_CLASSIFICATION	0.9999999712303411	WITHOUT_CLASSIFICATION	2.8769658911360887E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)     */	WITHOUT_CLASSIFICATION	0.999999956129067	WITHOUT_CLASSIFICATION	4.387093294162991E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#updateStereotypeText()     */	WITHOUT_CLASSIFICATION	0.9999996807336055	WITHOUT_CLASSIFICATION	3.1926639451795617E-7	DEFECT
/*     * Only refresh the tab if the bounds propertyChange event arrives.     *     * @see org.argouml.ui.StylePanel#refresh(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999999960958881	WITHOUT_CLASSIFICATION	3.904111956404636E-9	DEFECT
/*     * @see org.argouml.ui.TabTarget#refresh()     */	WITHOUT_CLASSIFICATION	0.9999999663005853	WITHOUT_CLASSIFICATION	3.3699414818509625E-8	DEFECT
/*     * Listen for a RemoveAssociationEvent between the comment     * and the annotated element. When recieved delete the CommentEdge     * and this FigEdgeNote.     * @see org.argouml.uml.diagram.ui.FigEdgeModelElement#modelChanged(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.999999911160798	WITHOUT_CLASSIFICATION	8.883920188224996E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigSingleLineText#removeFromDiagram()     */	WITHOUT_CLASSIFICATION	0.9999997091188546	WITHOUT_CLASSIFICATION	2.9088114540435356E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigSingleLineText#propertyChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999999773319161	WITHOUT_CLASSIFICATION	2.2668083835624097E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigSingleLineText#removeFromDiagram()     */	WITHOUT_CLASSIFICATION	0.9999997091188546	WITHOUT_CLASSIFICATION	2.9088114540435356E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigSingleLineText#propertyChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999999773319161	WITHOUT_CLASSIFICATION	2.2668083835624097E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#toggleValueOfTarget(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999624842324	WITHOUT_CLASSIFICATION	3.751576766685549E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#valueOfTarget(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999256152239	WITHOUT_CLASSIFICATION	7.438477611934781E-8	DEFECT
/*     * If we're drawing to an edge then only allow if the start is a comment     * @see org.argouml.uml.diagram.ui.ModeCreateGraphEdge#isConnectionValid(org.tigris.gef.presentation.Fig, org.tigris.gef.presentation.Fig)     */	WITHOUT_CLASSIFICATION	0.999999999221669	WITHOUT_CLASSIFICATION	7.783310785949842E-10	DEFECT
/*     * @see org.argouml.ui.TabTarget#setTarget(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999998702422882	WITHOUT_CLASSIFICATION	1.297577117281041E-7	DEFECT
/*     * @see org.argouml.ui.TabTarget#getTarget()     */	WITHOUT_CLASSIFICATION	0.9999999286843934	WITHOUT_CLASSIFICATION	7.131560670765812E-8	DEFECT
/*     * @see org.argouml.ui.TabTarget#refresh()     */	WITHOUT_CLASSIFICATION	0.9999999663005853	WITHOUT_CLASSIFICATION	3.3699414818509625E-8	DEFECT
/*     * @see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999996046340461	WITHOUT_CLASSIFICATION	3.9536595384504534E-7	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999870801335	WITHOUT_CLASSIFICATION	1.2919866357902841E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999645238781	WITHOUT_CLASSIFICATION	3.547612200386753E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999616635316	WITHOUT_CLASSIFICATION	3.833646843055407E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigEdgeModelElement#canEdit(org.tigris.gef.presentation.Fig)     */	WITHOUT_CLASSIFICATION	0.9999998833852722	WITHOUT_CLASSIFICATION	1.1661472782854708E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigEdgeModelElement#modelChanged(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999999576171381	WITHOUT_CLASSIFICATION	4.238286185762567E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999870801335	WITHOUT_CLASSIFICATION	1.2919866357902841E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999645238781	WITHOUT_CLASSIFICATION	3.547612200386753E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999616635316	WITHOUT_CLASSIFICATION	3.833646843055407E-8	DEFECT
/*     * @see org.argouml.ui.StylePanelFig#setTargetBBox()     */	WITHOUT_CLASSIFICATION	0.9999998607208186	WITHOUT_CLASSIFICATION	1.3927918137868435E-7	DEFECT
/*     * Only refresh the tab if the bounds propertyChange event arrives.     *     * @see org.argouml.ui.StylePanel#refresh(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999999960958881	WITHOUT_CLASSIFICATION	3.904111956404636E-9	DEFECT
/*     * @see org.argouml.ui.StylePanelFig#refresh()     */	WITHOUT_CLASSIFICATION	0.9999998148718617	WITHOUT_CLASSIFICATION	1.8512813822602925E-7	DEFECT
/*     * @see org.argouml.ui.TabTarget#refresh()     */	WITHOUT_CLASSIFICATION	0.9999999663005853	WITHOUT_CLASSIFICATION	3.3699414818509625E-8	DEFECT
/*     * If we're drawing to an edge then only allow if the start is a comment     * @see org.argouml.uml.diagram.ui.ModeCreateGraphEdge#isConnectionValid(org.tigris.gef.presentation.Fig, org.tigris.gef.presentation.Fig)     */	WITHOUT_CLASSIFICATION	0.999999999221669	WITHOUT_CLASSIFICATION	7.783310785949842E-10	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigEditableCompartment#getUmlCollection()     */	WITHOUT_CLASSIFICATION	0.9999982840014625	WITHOUT_CLASSIFICATION	1.7159985374932953E-6	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigEditableCompartment#getNotationType()     */	WITHOUT_CLASSIFICATION	0.9999992878236749	WITHOUT_CLASSIFICATION	7.121763251178667E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#toggleValueOfTarget(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999314535972	WITHOUT_CLASSIFICATION	6.854640282642683E-8	DEFECT
/*     * @see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabRefresh()     */	WITHOUT_CLASSIFICATION	0.9999999985199679	WITHOUT_CLASSIFICATION	1.480032080751794E-9	DEFECT
/*     * @see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabSave()     */	WITHOUT_CLASSIFICATION	0.9999999984696031	WITHOUT_CLASSIFICATION	1.530396815268063E-9	DEFECT
/*     * @see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabCancel()     */	WITHOUT_CLASSIFICATION	0.9999999984450654	WITHOUT_CLASSIFICATION	1.5549345658174264E-9	DEFECT
/*     * @see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()     */	WITHOUT_CLASSIFICATION	0.9999999989548571	WITHOUT_CLASSIFICATION	1.0451428431711714E-9	DEFECT
/*     * @see org.argouml.ui.GUISettingsTabInterface#getTabKey()     */	WITHOUT_CLASSIFICATION	0.9999999893638518	WITHOUT_CLASSIFICATION	1.0636148231391547E-8	DEFECT
/*     * @see org.argouml.ui.GUISettingsTabInterface#getTabPanel()     */	WITHOUT_CLASSIFICATION	0.9999999930208533	WITHOUT_CLASSIFICATION	6.979146697318752E-9	DEFECT
/*     * @see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#toggleValueOfTarget(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999314535972	WITHOUT_CLASSIFICATION	6.854640282642683E-8	DEFECT
/*     * @see org.argouml.ui.explorer.Relocatable#isRelocationAllowed(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999939127245	WITHOUT_CLASSIFICATION	6.087275503938926E-9	DEFECT
/*     * @see org.argouml.ui.explorer.Relocatable#relocate(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999903024319	WITHOUT_CLASSIFICATION	9.697568009229875E-9	DEFECT
/*     * @see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#toggleValueOfTarget(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999624842324	WITHOUT_CLASSIFICATION	3.751576766685549E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#valueOfTarget(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999256152239	WITHOUT_CLASSIFICATION	7.438477611934781E-8	DEFECT
/*     * @see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999877264897	WITHOUT_CLASSIFICATION	1.2273510402131217E-8	DEFECT
/*     * @see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999877264897	WITHOUT_CLASSIFICATION	1.2273510402131217E-8	DEFECT
/*     * @see org.argouml.ui.TabTarget#getTarget()     */	WITHOUT_CLASSIFICATION	0.9999999286843934	WITHOUT_CLASSIFICATION	7.131560670765812E-8	DEFECT
/*     * @see org.argouml.ui.TabTarget#refresh()     */	WITHOUT_CLASSIFICATION	0.9999999663005853	WITHOUT_CLASSIFICATION	3.3699414818509625E-8	DEFECT
/*     * @see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999996046340461	WITHOUT_CLASSIFICATION	3.9536595384504534E-7	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetAdded(     *          TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999861586804	WITHOUT_CLASSIFICATION	1.3841319703486445E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetRemoved(     *          TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999619936977	WITHOUT_CLASSIFICATION	3.80063022405119E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetSet(     *          org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999631130807	WITHOUT_CLASSIFICATION	3.688691925487164E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigEditableCompartment#getUmlCollection()     */	WITHOUT_CLASSIFICATION	0.9999982840014625	WITHOUT_CLASSIFICATION	1.7159985374932953E-6	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigEditableCompartment#getNotationType()     */	WITHOUT_CLASSIFICATION	0.9999992878236749	WITHOUT_CLASSIFICATION	7.121763251178667E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners(java.lang.Object, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997289700165	WITHOUT_CLASSIFICATION	2.71029983418545E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNotationProviderType()     */	WITHOUT_CLASSIFICATION	0.9999990653194448	WITHOUT_CLASSIFICATION	9.346805552708876E-7	DEFECT
/*     * @see org.argouml.uml.reveng.ImportSettings#getInputSourceEncoding()     */	WITHOUT_CLASSIFICATION	0.999999976627581	WITHOUT_CLASSIFICATION	2.337241901201319E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigEdgeModelElement#textEdited(org.tigris.gef.presentation.FigText)     */	WITHOUT_CLASSIFICATION	0.9999999646648908	WITHOUT_CLASSIFICATION	3.53351091444744E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigEdgeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)     */	WITHOUT_CLASSIFICATION	0.9999999461173938	WITHOUT_CLASSIFICATION	5.388260608845688E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#toggleValueOfTarget(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999624842324	WITHOUT_CLASSIFICATION	3.751576766685549E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#valueOfTarget(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999256152239	WITHOUT_CLASSIFICATION	7.438477611934781E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#toggleValueOfTarget(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999314535972	WITHOUT_CLASSIFICATION	6.854640282642683E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNotationProviderType()     */	WITHOUT_CLASSIFICATION	0.9999990653194448	WITHOUT_CLASSIFICATION	9.346805552708876E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999998302462588	WITHOUT_CLASSIFICATION	1.6975374108773746E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigEdgeModelElement#textEdited(org.tigris.gef.presentation.FigText)     */	WITHOUT_CLASSIFICATION	0.9999999646648908	WITHOUT_CLASSIFICATION	3.53351091444744E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigEdgeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)     */	WITHOUT_CLASSIFICATION	0.9999999461173938	WITHOUT_CLASSIFICATION	5.388260608845688E-8	DEFECT
/*     * @see org.argouml.kernel.DelayedVChangeListener#delayedVetoableChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999998619203508	WITHOUT_CLASSIFICATION	1.3807964915943132E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.PathContainer#isPathVisible()     */	WITHOUT_CLASSIFICATION	0.9999997216615927	WITHOUT_CLASSIFICATION	2.7833840732685914E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.PathContainer#setPathVisible(boolean)     */	WITHOUT_CLASSIFICATION	0.9999999916309225	WITHOUT_CLASSIFICATION	8.369077420157522E-9	DEFECT
/*     * @see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#toggleValueOfTarget(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999314535972	WITHOUT_CLASSIFICATION	6.854640282642683E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigEdgeModelElement#canEdit(org.tigris.gef.presentation.Fig)     */	WITHOUT_CLASSIFICATION	0.9999998833852722	WITHOUT_CLASSIFICATION	1.1661472782854708E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigSingleLineText#removeFromDiagram()     */	WITHOUT_CLASSIFICATION	0.9999997091188546	WITHOUT_CLASSIFICATION	2.9088114540435356E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#getNotationProviderType()     */	WITHOUT_CLASSIFICATION	0.9999991338127796	WITHOUT_CLASSIFICATION	8.661872203282069E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#updateListeners(     * java.lang.Object, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997757847259	WITHOUT_CLASSIFICATION	2.2421527415777578E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()     */	WITHOUT_CLASSIFICATION	0.9999994664419952	WITHOUT_CLASSIFICATION	5.335580048003605E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNameFig()     */	WITHOUT_CLASSIFICATION	0.9999998622451413	WITHOUT_CLASSIFICATION	1.377548587780732E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNameBounds()     */	WITHOUT_CLASSIFICATION	0.9999998511373849	WITHOUT_CLASSIFICATION	1.4886261518212525E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigEditableCompartment#getUmlCollection()     */	WITHOUT_CLASSIFICATION	0.9999982840014625	WITHOUT_CLASSIFICATION	1.7159985374932953E-6	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigEditableCompartment#getNotationType()     */	WITHOUT_CLASSIFICATION	0.9999992878236749	WITHOUT_CLASSIFICATION	7.121763251178667E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigEdgeModelElement#canEdit(org.tigris.gef.presentation.Fig)     */	WITHOUT_CLASSIFICATION	0.9999998833852722	WITHOUT_CLASSIFICATION	1.1661472782854708E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigEdgeModelElement#modelChanged(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999999576171381	WITHOUT_CLASSIFICATION	4.238286185762567E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners(java.lang.Object, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997289700165	WITHOUT_CLASSIFICATION	2.71029983418545E-7	DEFECT
/*     * @see org.argouml.kernel.DelayedVChangeListener#delayedVetoableChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999998619203508	WITHOUT_CLASSIFICATION	1.3807964915943132E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners(java.lang.Object, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997289700165	WITHOUT_CLASSIFICATION	2.71029983418545E-7	DEFECT
/*     * The only thing we need to deal with is updating is the condition text.     *      * @see org.argouml.uml.diagram.ui.FigEdgeModelElement#modelChanged(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994947558639	WITHOUT_CLASSIFICATION	5.052441361082826E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#getUmlActions()     */	WITHOUT_CLASSIFICATION	0.9999998295669976	WITHOUT_CLASSIFICATION	1.704330023501436E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#getLabelName()     */	WITHOUT_CLASSIFICATION	0.9999999118256613	WITHOUT_CLASSIFICATION	8.817433873554592E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999541209197	WITHOUT_CLASSIFICATION	4.58790803210974E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999324513832	WITHOUT_CLASSIFICATION	6.754861684087216E-8	DEFECT
/*     * @see org.argouml.uml.reveng.ImportSettings#isCreateDiagramsSelected()     */	WITHOUT_CLASSIFICATION	0.9999999935738201	WITHOUT_CLASSIFICATION	6.426179847468687E-9	DEFECT
/*     * @see org.argouml.uml.reveng.ImportSettings#isMinimiseFigsSelected()     */	WITHOUT_CLASSIFICATION	0.9999999793246673	WITHOUT_CLASSIFICATION	2.0675332729260707E-8	DEFECT
/*     * @see org.argouml.uml.reveng.ImportSettingsInternal#isDiagramLayoutSelected()     */	WITHOUT_CLASSIFICATION	0.9999999956819283	WITHOUT_CLASSIFICATION	4.31807172588519E-9	DEFECT
/*     * @see org.argouml.uml.reveng.ImportSettingsInternal#isDescendSelected()     */	WITHOUT_CLASSIFICATION	0.9999999938054175	WITHOUT_CLASSIFICATION	6.1945826259198355E-9	DEFECT
/*     * @see org.argouml.uml.reveng.ImportSettingsInternal#isChangedOnlySelected()     */	WITHOUT_CLASSIFICATION	0.9999999959701443	WITHOUT_CLASSIFICATION	4.029855659667239E-9	DEFECT
/*     * @see org.argouml.uml.reveng.ImportSettings#getInputSourceEncoding()     */	WITHOUT_CLASSIFICATION	0.999999976627581	WITHOUT_CLASSIFICATION	2.337241901201319E-8	DEFECT
/*     * @see org.argouml.uml.reveng.ImportCommon#getImportLevel()     */	WITHOUT_CLASSIFICATION	0.9999999608793668	WITHOUT_CLASSIFICATION	3.912063320311379E-8	DEFECT
/*     * @see org.argouml.uml.reveng.ImportCommon#isCreateDiagramsChecked()     */	WITHOUT_CLASSIFICATION	0.9999999940308762	WITHOUT_CLASSIFICATION	5.9691236824418095E-9	DEFECT
/*     * @see org.argouml.uml.reveng.ImportCommon#isMinimiseFigsChecked()     */	WITHOUT_CLASSIFICATION	0.9999999829220906	WITHOUT_CLASSIFICATION	1.7077909500618306E-8	DEFECT
/*     * @see org.argouml.uml.reveng.ImportCommon#isDiagramLayoutSelected()     */	WITHOUT_CLASSIFICATION	0.9999999906211764	WITHOUT_CLASSIFICATION	9.378823656131043E-9	DEFECT
/*     * @see org.argouml.uml.reveng.ImportCommon#isDescendSelected()     */	WITHOUT_CLASSIFICATION	0.9999999846644559	WITHOUT_CLASSIFICATION	1.5335544111314214E-8	DEFECT
/*     * @see org.argouml.uml.reveng.ImportCommon#isChangedOnlySelected()     */	WITHOUT_CLASSIFICATION	0.9999999901561225	WITHOUT_CLASSIFICATION	9.843877504490257E-9	DEFECT
/*         * @see org.argouml.uml.reveng.SettingsTypes.BooleanSelection#isSelected()         */	WITHOUT_CLASSIFICATION	0.9999999632364703	WITHOUT_CLASSIFICATION	3.6763529669618974E-8	DEFECT
/*         * @see org.argouml.uml.reveng.SettingsTypes.BooleanSelection#getDefaultValue()         */	WITHOUT_CLASSIFICATION	0.9999999647141391	WITHOUT_CLASSIFICATION	3.528586086015569E-8	DEFECT
/*         * @see org.argouml.uml.reveng.ImportSettingTypes.UniqueSelection#getDefaultSelection()         */	WITHOUT_CLASSIFICATION	0.9999999540004828	WITHOUT_CLASSIFICATION	4.599951711591165E-8	DEFECT
/*         * We return a new List with the options instead of the options themself         * because we don't want the user to be able to change the options.         *          * @see org.argouml.uml.reveng.SettingsTypes.UniqueSelection#getOptions()         */	WITHOUT_CLASSIFICATION	0.9999999995080028	WITHOUT_CLASSIFICATION	4.919971873723474E-10	DEFECT
/*         * @see org.argouml.uml.reveng.ImportSettingTypes.UniqueSelection#setSelection(int)         */	WITHOUT_CLASSIFICATION	0.9999999754597226	WITHOUT_CLASSIFICATION	2.454027747809973E-8	DEFECT
/*     * @see org.argouml.application.api.ProgressMonitor#close()     */	WITHOUT_CLASSIFICATION	0.999999996309693	WITHOUT_CLASSIFICATION	3.6903068557513985E-9	DEFECT
/*     * @see org.argouml.application.api.ProgressMonitor#isCanceled()     */	WITHOUT_CLASSIFICATION	0.9999999942924339	WITHOUT_CLASSIFICATION	5.707566077434903E-9	DEFECT
/*     * @see org.argouml.application.api.ProgressMonitor#notifyMessage(java.lang.String, java.lang.String, java.lang.String)     */	WITHOUT_CLASSIFICATION	0.999999988352133	WITHOUT_CLASSIFICATION	1.1647867137147459E-8	DEFECT
/*     * @see org.argouml.application.api.ProgressMonitor#notifyNullAction()     */	WITHOUT_CLASSIFICATION	0.9999999831273394	WITHOUT_CLASSIFICATION	1.6872660608057152E-8	DEFECT
/*     * @see org.argouml.application.api.ProgressMonitor#updateMainTask(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999999926356694	WITHOUT_CLASSIFICATION	7.364330568814376E-9	DEFECT
/*     * @see org.argouml.application.api.ProgressMonitor#updateSubTask(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999999907158363	WITHOUT_CLASSIFICATION	9.284163623007678E-9	DEFECT
/*     * @see org.argouml.persistence.ProgressListener#progress(org.argouml.persistence.ProgressEvent)     */	WITHOUT_CLASSIFICATION	0.9999999888698458	WITHOUT_CLASSIFICATION	1.1130154297514793E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999870801335	WITHOUT_CLASSIFICATION	1.2919866357902841E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999645238781	WITHOUT_CLASSIFICATION	3.547612200386753E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999616635316	WITHOUT_CLASSIFICATION	3.833646843055407E-8	DEFECT
/*     * @see org.argouml.ui.TabTarget#getTarget()     */	WITHOUT_CLASSIFICATION	0.9999999286843934	WITHOUT_CLASSIFICATION	7.131560670765812E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetAdded(     *         org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999875552499	WITHOUT_CLASSIFICATION	1.2444750176889685E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetRemoved(     *         org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999658284796	WITHOUT_CLASSIFICATION	3.417152033303728E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetSet(     *         org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999631130807	WITHOUT_CLASSIFICATION	3.688691925487164E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLUserInterfaceComponent#targetChanged()     */	WITHOUT_CLASSIFICATION	0.9999999947683378	WITHOUT_CLASSIFICATION	5.231662141313264E-9	DEFECT
/*     * @see org.argouml.uml.ui.UMLUserInterfaceComponent#targetReasserted()     */	WITHOUT_CLASSIFICATION	0.9999999688564363	WITHOUT_CLASSIFICATION	3.114356368753778E-8	DEFECT
/*     * @see org.argouml.uml.ui.ActionAddDiagram#createDiagram(Object)     */	WITHOUT_CLASSIFICATION	0.9999999826048435	WITHOUT_CLASSIFICATION	1.7395156604312256E-8	DEFECT
/*     * @see org.argouml.uml.ui.ActionAddDiagram#isValidNamespace(Object)     */	WITHOUT_CLASSIFICATION	0.9999999410692516	WITHOUT_CLASSIFICATION	5.893074841440678E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999870801335	WITHOUT_CLASSIFICATION	1.2919866357902841E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999645238781	WITHOUT_CLASSIFICATION	3.547612200386753E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999616635316	WITHOUT_CLASSIFICATION	3.833646843055407E-8	DEFECT
/*     * @see org.argouml.uml.ui.ActionNewDiagram#createDiagram()     */	WITHOUT_CLASSIFICATION	0.9999999784058138	WITHOUT_CLASSIFICATION	2.159418614957098E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999870801335	WITHOUT_CLASSIFICATION	1.2919866357902841E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999645238781	WITHOUT_CLASSIFICATION	3.547612200386753E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999616635316	WITHOUT_CLASSIFICATION	3.833646843055407E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLUserInterfaceComponent#targetChanged()     */	WITHOUT_CLASSIFICATION	0.9999999947683378	WITHOUT_CLASSIFICATION	5.231662141313264E-9	DEFECT
/*     * @see org.argouml.uml.ui.UMLUserInterfaceComponent#targetReasserted()     */	WITHOUT_CLASSIFICATION	0.9999999688564363	WITHOUT_CLASSIFICATION	3.114356368753778E-8	DEFECT
/*     * @see org.argouml.uml.ui.ActionAddDiagram#createDiagram(Object)     */	WITHOUT_CLASSIFICATION	0.9999999826048435	WITHOUT_CLASSIFICATION	1.7395156604312256E-8	DEFECT
/*     * @see org.argouml.uml.ui.ActionAddDiagram#createDiagram(Object)     */	WITHOUT_CLASSIFICATION	0.9999999826048435	WITHOUT_CLASSIFICATION	1.7395156604312256E-8	DEFECT
/*     * @see org.argouml.uml.ui.ActionAddDiagram#isValidNamespace(Object)     */	WITHOUT_CLASSIFICATION	0.9999999410692516	WITHOUT_CLASSIFICATION	5.893074841440678E-8	DEFECT
/*     * @see org.argouml.ui.TabTarget#refresh()     */	WITHOUT_CLASSIFICATION	0.9999999663005853	WITHOUT_CLASSIFICATION	3.3699414818509625E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999870801335	WITHOUT_CLASSIFICATION	1.2919866357902841E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999645238781	WITHOUT_CLASSIFICATION	3.547612200386753E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999616635316	WITHOUT_CLASSIFICATION	3.833646843055407E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#getExpression()     */	WITHOUT_CLASSIFICATION	0.9999999356696541	WITHOUT_CLASSIFICATION	6.433034591694181E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.999999934273208	WITHOUT_CLASSIFICATION	6.572679199456743E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#newExpression()     */	WITHOUT_CLASSIFICATION	0.9999998518618105	WITHOUT_CLASSIFICATION	1.4813818942978777E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLUserInterfaceComponent#targetChanged()     */	WITHOUT_CLASSIFICATION	0.9999999947683378	WITHOUT_CLASSIFICATION	5.231662141313264E-9	DEFECT
/*     * @see org.argouml.uml.ui.UMLUserInterfaceComponent#targetReasserted()     */	WITHOUT_CLASSIFICATION	0.9999999688564363	WITHOUT_CLASSIFICATION	3.114356368753778E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#getExpression()     */	WITHOUT_CLASSIFICATION	0.9999999356696541	WITHOUT_CLASSIFICATION	6.433034591694181E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.999999934273208	WITHOUT_CLASSIFICATION	6.572679199456743E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#newExpression()     */	WITHOUT_CLASSIFICATION	0.9999998518618105	WITHOUT_CLASSIFICATION	1.4813818942978777E-7	DEFECT
/*     * @see org.argouml.uml.ui.PropPanel#shouldBeEnabled(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999994140691825	WITHOUT_CLASSIFICATION	5.859308176411512E-7	DEFECT
/*     * @see org.argouml.ui.TabTarget#setTarget(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999998702422882	WITHOUT_CLASSIFICATION	1.297577117281041E-7	DEFECT
/*         * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()         */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*         * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)         */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999877264897	WITHOUT_CLASSIFICATION	1.2273510402131217E-8	DEFECT
/*     * @see org.argouml.uml.ui.SourcePathController#getSourcePath(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999996761937838	WITHOUT_CLASSIFICATION	3.238062161497407E-7	DEFECT
/*     * @see org.argouml.uml.ui.SourcePathController#getSourcePathSettings()     */	WITHOUT_CLASSIFICATION	0.9999999360539975	WITHOUT_CLASSIFICATION	6.39460025799427E-8	DEFECT
/*     * @see org.argouml.uml.ui.SourcePathController#setSourcePath(org.argouml.uml.ui.SourcePathTableModel)     */	WITHOUT_CLASSIFICATION	0.9999999058977291	WITHOUT_CLASSIFICATION	9.410227082176456E-8	DEFECT
/*     * @see org.argouml.uml.ui.SourcePathController#setSourcePath(     * java.lang.Object, java.io.File)     */	WITHOUT_CLASSIFICATION	0.9999993714075567	WITHOUT_CLASSIFICATION	6.28592443332872E-7	DEFECT
/*     * @see org.argouml.uml.ui.SourcePathController#deleteSourcePath(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999998340013969	WITHOUT_CLASSIFICATION	1.6599860310739331E-7	DEFECT
/*     * @see org.argouml.uml.ui.SourcePathController#getAllModelElementsWithSourcePath()     */	WITHOUT_CLASSIFICATION	0.9999988942040196	WITHOUT_CLASSIFICATION	1.1057959804950892E-6	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999870801335	WITHOUT_CLASSIFICATION	1.2919866357902841E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999645238781	WITHOUT_CLASSIFICATION	3.547612200386753E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999616635316	WITHOUT_CLASSIFICATION	3.833646843055407E-8	DEFECT
/*     * @see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(     *         java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999870743754	WITHOUT_CLASSIFICATION	1.2925624663766714E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBox2#UMLComboBox2( UMLComboBoxModel2,     *      Action, boolean)     */	WITHOUT_CLASSIFICATION	0.9999999942061434	WITHOUT_CLASSIFICATION	5.79385665754584E-9	DEFECT
/*     * @see org.argouml.uml.ui.PropPanel#shouldBeEnabled(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999994140691825	WITHOUT_CLASSIFICATION	5.859308176411512E-7	DEFECT
/*     * @see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999877264897	WITHOUT_CLASSIFICATION	1.2273510402131217E-8	DEFECT
/*     * @see org.argouml.ui.TabTarget#refresh()     */	WITHOUT_CLASSIFICATION	0.9999999663005853	WITHOUT_CLASSIFICATION	3.3699414818509625E-8	DEFECT
/*     * @see org.argouml.ui.TabTarget#getTarget()     */	WITHOUT_CLASSIFICATION	0.9999999286843934	WITHOUT_CLASSIFICATION	7.131560670765812E-8	DEFECT
/*     * @see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999996046340461	WITHOUT_CLASSIFICATION	3.9536595384504534E-7	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999870801335	WITHOUT_CLASSIFICATION	1.2919866357902841E-8	DEFECT
/*     * @see org.argouml.kernel.DelayedVChangeListener#delayedVetoableChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999998619203508	WITHOUT_CLASSIFICATION	1.3807964915943132E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLUserInterfaceComponent#targetChanged()     */	WITHOUT_CLASSIFICATION	0.9999999947683378	WITHOUT_CLASSIFICATION	5.231662141313264E-9	DEFECT
/*     * @see org.argouml.uml.ui.UMLUserInterfaceComponent#targetReasserted()     */	WITHOUT_CLASSIFICATION	0.9999999688564363	WITHOUT_CLASSIFICATION	3.114356368753778E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#getExpression()     */	WITHOUT_CLASSIFICATION	0.9999999356696541	WITHOUT_CLASSIFICATION	6.433034591694181E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.999999934273208	WITHOUT_CLASSIFICATION	6.572679199456743E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#newExpression()     */	WITHOUT_CLASSIFICATION	0.9999998518618105	WITHOUT_CLASSIFICATION	1.4813818942978777E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#getExpression()     */	WITHOUT_CLASSIFICATION	0.9999999356696541	WITHOUT_CLASSIFICATION	6.433034591694181E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.999999934273208	WITHOUT_CLASSIFICATION	6.572679199456743E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#newExpression()     */	WITHOUT_CLASSIFICATION	0.9999998518618105	WITHOUT_CLASSIFICATION	1.4813818942978777E-7	DEFECT
/*     * @see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999877264897	WITHOUT_CLASSIFICATION	1.2273510402131217E-8	DEFECT
/*     * @see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999877264897	WITHOUT_CLASSIFICATION	1.2273510402131217E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargettableModelView#getTargettableModel()     */	WITHOUT_CLASSIFICATION	0.999999991780681	WITHOUT_CLASSIFICATION	8.21931903559763E-9	DEFECT
/*     * @see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999877264897	WITHOUT_CLASSIFICATION	1.2273510402131217E-8	DEFECT
/*     * @see org.argouml.ui.TabTarget#getTarget()     */	WITHOUT_CLASSIFICATION	0.9999999286843934	WITHOUT_CLASSIFICATION	7.131560670765812E-8	DEFECT
/*     * @see org.argouml.ui.TabTarget#refresh()     */	WITHOUT_CLASSIFICATION	0.9999999663005853	WITHOUT_CLASSIFICATION	3.3699414818509625E-8	DEFECT
/*     * @see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999996046340461	WITHOUT_CLASSIFICATION	3.9536595384504534E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLUserInterfaceContainer#getProfile()     */	WITHOUT_CLASSIFICATION	0.9999999835098817	WITHOUT_CLASSIFICATION	1.6490118210517845E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLUserInterfaceContainer#getModelElement()     */	WITHOUT_CLASSIFICATION	0.9999999610560767	WITHOUT_CLASSIFICATION	3.8943923195599336E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLUserInterfaceContainer#formatElement(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999998422491108	WITHOUT_CLASSIFICATION	1.5775088914737014E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLUserInterfaceContainer#formatNamespace(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999520718932	WITHOUT_CLASSIFICATION	4.792810693291859E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLUserInterfaceContainer#formatCollection(java.util.Iterator)     */	WITHOUT_CLASSIFICATION	0.9999999850314321	WITHOUT_CLASSIFICATION	1.4968567872477775E-8	DEFECT
/*     * @see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999877264897	WITHOUT_CLASSIFICATION	1.2273510402131217E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildPopup(javax.swing.JPopupMenu, int)     */	WITHOUT_CLASSIFICATION	0.9999998117037388	WITHOUT_CLASSIFICATION	1.882962612082895E-7	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargettableModelView#getTargettableModel()     */	WITHOUT_CLASSIFICATION	0.999999991780681	WITHOUT_CLASSIFICATION	8.21931903559763E-9	DEFECT
/*     * @see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999877264897	WITHOUT_CLASSIFICATION	1.2273510402131217E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999870801335	WITHOUT_CLASSIFICATION	1.2919866357902841E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999645238781	WITHOUT_CLASSIFICATION	3.547612200386753E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999616635316	WITHOUT_CLASSIFICATION	3.833646843055407E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#getExpression()     */	WITHOUT_CLASSIFICATION	0.9999999356696541	WITHOUT_CLASSIFICATION	6.433034591694181E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.999999934273208	WITHOUT_CLASSIFICATION	6.572679199456743E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#newExpression()     */	WITHOUT_CLASSIFICATION	0.9999998518618105	WITHOUT_CLASSIFICATION	1.4813818942978777E-7	DEFECT
/*     * @see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999877264897	WITHOUT_CLASSIFICATION	1.2273510402131217E-8	DEFECT
/*     * @see org.argouml.ui.TabTarget#setTarget(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999998702422882	WITHOUT_CLASSIFICATION	1.297577117281041E-7	DEFECT
/*     * @see org.argouml.ui.TabTarget#getTarget()     */	WITHOUT_CLASSIFICATION	0.9999999286843934	WITHOUT_CLASSIFICATION	7.131560670765812E-8	DEFECT
/*     * @see org.argouml.ui.TabTarget#refresh()     */	WITHOUT_CLASSIFICATION	0.9999999663005853	WITHOUT_CLASSIFICATION	3.3699414818509625E-8	DEFECT
/*     * @see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999996046340461	WITHOUT_CLASSIFICATION	3.9536595384504534E-7	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetAdded(     *         org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999875552499	WITHOUT_CLASSIFICATION	1.2444750176889685E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetRemoved(     *         org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999658284796	WITHOUT_CLASSIFICATION	3.417152033303728E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargetListener#targetSet(     *         org.argouml.ui.targetmanager.TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999999631130807	WITHOUT_CLASSIFICATION	3.688691925487164E-8	DEFECT
/*     * @see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999877264897	WITHOUT_CLASSIFICATION	1.2273510402131217E-8	DEFECT
/*     * @see org.argouml.ui.targetmanager.TargettableModelView#getTargettableModel()     */	WITHOUT_CLASSIFICATION	0.999999991780681	WITHOUT_CLASSIFICATION	8.21931903559763E-9	DEFECT
/*     * @see org.argouml.uml.ui.ActionAddDiagram#createDiagram(Object)     */	WITHOUT_CLASSIFICATION	0.9999999826048435	WITHOUT_CLASSIFICATION	1.7395156604312256E-8	DEFECT
/*     * @see org.argouml.uml.ui.ActionAddDiagram#createDiagram(Object)     */	WITHOUT_CLASSIFICATION	0.9999999826048435	WITHOUT_CLASSIFICATION	1.7395156604312256E-8	DEFECT
/*     * @see org.argouml.uml.ui.ActionAddDiagram#isValidNamespace(Object)     */	WITHOUT_CLASSIFICATION	0.9999999410692516	WITHOUT_CLASSIFICATION	5.893074841440678E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLCheckBox2#buildModel()     */	WITHOUT_CLASSIFICATION	0.9999998629811206	WITHOUT_CLASSIFICATION	1.3701887943278553E-7	DEFECT
/*     * @see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()     */	WITHOUT_CLASSIFICATION	0.9999999940711978	WITHOUT_CLASSIFICATION	5.928802274372581E-9	DEFECT
/*     * @see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()     */	WITHOUT_CLASSIFICATION	0.9999999940711978	WITHOUT_CLASSIFICATION	5.928802274372581E-9	DEFECT
/*     * @see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()     */	WITHOUT_CLASSIFICATION	0.9999999940711978	WITHOUT_CLASSIFICATION	5.928802274372581E-9	DEFECT
/*     * @see org.argouml.uml.ui.UMLCheckBox2#buildModel()     */	WITHOUT_CLASSIFICATION	0.9999998629811206	WITHOUT_CLASSIFICATION	1.3701887943278553E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.99999980383871	WITHOUT_CLASSIFICATION	1.961612899416786E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()     */	WITHOUT_CLASSIFICATION	0.9999999245990254	WITHOUT_CLASSIFICATION	7.540097458287163E-8	DEFECT
/*     * @see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()     */	WITHOUT_CLASSIFICATION	0.9999999940711978	WITHOUT_CLASSIFICATION	5.928802274372581E-9	DEFECT
/*     * @see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()     */	WITHOUT_CLASSIFICATION	0.9999999940711978	WITHOUT_CLASSIFICATION	5.928802274372581E-9	DEFECT
/*     * @see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()     */	WITHOUT_CLASSIFICATION	0.9999999940711978	WITHOUT_CLASSIFICATION	5.928802274372581E-9	DEFECT
/*     * @see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()     */	WITHOUT_CLASSIFICATION	0.9999999940711978	WITHOUT_CLASSIFICATION	5.928802274372581E-9	DEFECT
/*     * @see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()     */	WITHOUT_CLASSIFICATION	0.9999999940711978	WITHOUT_CLASSIFICATION	5.928802274372581E-9	DEFECT
/*     * @see org.argouml.uml.ui.behavior.state_machines.ActionNewEvent#createEvent(     *         java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999990308581	WITHOUT_CLASSIFICATION	9.691419300020054E-10	DEFECT
/*     * @see org.argouml.uml.ui.behavior.state_machines.ActionNewEvent#createEvent(     *         java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999990308581	WITHOUT_CLASSIFICATION	9.691419300020054E-10	DEFECT
/*     * @see org.argouml.uml.ui.behavior.state_machines.ActionNewEvent#createEvent(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999990785641	WITHOUT_CLASSIFICATION	9.21435775230378E-10	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#getExpression()     */	WITHOUT_CLASSIFICATION	0.9999999356696541	WITHOUT_CLASSIFICATION	6.433034591694181E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.999999934273208	WITHOUT_CLASSIFICATION	6.572679199456743E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLExpressionModel2#newExpression()     */	WITHOUT_CLASSIFICATION	0.9999998518618105	WITHOUT_CLASSIFICATION	1.4813818942978777E-7	DEFECT
/*     * @see org.argouml.uml.ui.behavior.state_machines.ActionNewEvent#createEvent(     *         java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999990308581	WITHOUT_CLASSIFICATION	9.691419300020054E-10	DEFECT
/*     * @see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.99999980383871	WITHOUT_CLASSIFICATION	1.961612899416786E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()     */	WITHOUT_CLASSIFICATION	0.9999999245990254	WITHOUT_CLASSIFICATION	7.540097458287163E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.99999980383871	WITHOUT_CLASSIFICATION	1.961612899416786E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()     */	WITHOUT_CLASSIFICATION	0.9999999245990254	WITHOUT_CLASSIFICATION	7.540097458287163E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLRadioButtonPanel#buildModel()     */	WITHOUT_CLASSIFICATION	0.9999998569356823	WITHOUT_CLASSIFICATION	1.4306431776484982E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLCheckBox2#buildModel()     */	WITHOUT_CLASSIFICATION	0.9999998629811206	WITHOUT_CLASSIFICATION	1.3701887943278553E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLCheckBox2#buildModel()     */	WITHOUT_CLASSIFICATION	0.9999998629811206	WITHOUT_CLASSIFICATION	1.3701887943278553E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLRadioButtonPanel#buildModel()     */	WITHOUT_CLASSIFICATION	0.9999998569356823	WITHOUT_CLASSIFICATION	1.4306431776484982E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLRadioButtonPanel#buildModel()     */	WITHOUT_CLASSIFICATION	0.9999998569356823	WITHOUT_CLASSIFICATION	1.4306431776484982E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLCheckBox2#buildModel()     */	WITHOUT_CLASSIFICATION	0.9999998629811206	WITHOUT_CLASSIFICATION	1.3701887943278553E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLCheckBox2#buildModel()     */	WITHOUT_CLASSIFICATION	0.9999998629811206	WITHOUT_CLASSIFICATION	1.3701887943278553E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.99999980383871	WITHOUT_CLASSIFICATION	1.961612899416786E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()     */	WITHOUT_CLASSIFICATION	0.9999999245990254	WITHOUT_CLASSIFICATION	7.540097458287163E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.99999980383871	WITHOUT_CLASSIFICATION	1.961612899416786E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()     */	WITHOUT_CLASSIFICATION	0.9999999245990254	WITHOUT_CLASSIFICATION	7.540097458287163E-8	DEFECT
/*     * @see org.argouml.uml.ui.AbstractActionAddModelElement#getChoices()     */	WITHOUT_CLASSIFICATION	0.9999999831115488	WITHOUT_CLASSIFICATION	1.688845126869768E-8	DEFECT
/*     * @see org.argouml.uml.ui.AbstractActionAddModelElement#getDialogTitle()     */	WITHOUT_CLASSIFICATION	0.9999999323218395	WITHOUT_CLASSIFICATION	6.767816059465717E-8	DEFECT
/*     * @see org.argouml.uml.ui.AbstractActionAddModelElement#getSelected()     */	WITHOUT_CLASSIFICATION	0.9999999930545157	WITHOUT_CLASSIFICATION	6.945484283169199E-9	DEFECT
/*     * @see org.argouml.uml.ui.AbstractActionAddModelElement#getChoices()     */	WITHOUT_CLASSIFICATION	0.9999999831115488	WITHOUT_CLASSIFICATION	1.688845126869768E-8	DEFECT
/*     * @see org.argouml.uml.ui.AbstractActionAddModelElement#getDialogTitle()     */	WITHOUT_CLASSIFICATION	0.9999999323218395	WITHOUT_CLASSIFICATION	6.767816059465717E-8	DEFECT
/*     * @see org.argouml.uml.ui.AbstractActionAddModelElement#getSelected()     */	WITHOUT_CLASSIFICATION	0.9999999930545157	WITHOUT_CLASSIFICATION	6.945484283169199E-9	DEFECT
/*     * @see org.argouml.uml.ui.UMLCheckBox2#buildModel()     */	WITHOUT_CLASSIFICATION	0.9999998629811206	WITHOUT_CLASSIFICATION	1.3701887943278553E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLCheckBox2#buildModel()     */	WITHOUT_CLASSIFICATION	0.9999998629811206	WITHOUT_CLASSIFICATION	1.3701887943278553E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.99999980383871	WITHOUT_CLASSIFICATION	1.961612899416786E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()     */	WITHOUT_CLASSIFICATION	0.9999999245990254	WITHOUT_CLASSIFICATION	7.540097458287163E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLCheckBox2#buildModel()     */	WITHOUT_CLASSIFICATION	0.9999998629811206	WITHOUT_CLASSIFICATION	1.3701887943278553E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLRadioButtonPanel#buildModel()     */	WITHOUT_CLASSIFICATION	0.9999998569356823	WITHOUT_CLASSIFICATION	1.4306431776484982E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLCheckBox2#buildModel()     */	WITHOUT_CLASSIFICATION	0.9999998629811206	WITHOUT_CLASSIFICATION	1.3701887943278553E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLCheckBox2#buildModel()     */	WITHOUT_CLASSIFICATION	0.9999998629811206	WITHOUT_CLASSIFICATION	1.3701887943278553E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLCheckBox2#buildModel()     */	WITHOUT_CLASSIFICATION	0.9999998629811206	WITHOUT_CLASSIFICATION	1.3701887943278553E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLRadioButtonPanel#buildModel()     */	WITHOUT_CLASSIFICATION	0.9999998569356823	WITHOUT_CLASSIFICATION	1.4306431776484982E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999998476810591	WITHOUT_CLASSIFICATION	1.52318940811834E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel2#setSelectedItem(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999548575499	WITHOUT_CLASSIFICATION	4.5142450085683894E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999998731715852	WITHOUT_CLASSIFICATION	1.2682841484445137E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLComboBoxModel2#getSelectedModelElement()     */	WITHOUT_CLASSIFICATION	0.9999999652482693	WITHOUT_CLASSIFICATION	3.4751730654317625E-8	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()     */	WITHOUT_CLASSIFICATION	0.9999994789262259	WITHOUT_CLASSIFICATION	5.210737740480127E-7	DEFECT
/*     * @see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)     */	WITHOUT_CLASSIFICATION	0.9999995819796957	WITHOUT_CLASSIFICATION	4.18020304300355E-7	DEFECT
/*     * @see org.argouml.uml.util.namespace.Namespace#peekNamespaceElement()     */	WITHOUT_CLASSIFICATION	0.9999998285857657	WITHOUT_CLASSIFICATION	1.7141423415046196E-7	DEFECT
/*     * @see org.argouml.uml.util.namespace.Namespace#popNamespaceElement()     */	WITHOUT_CLASSIFICATION	0.9999999438764007	WITHOUT_CLASSIFICATION	5.612359938872445E-8	DEFECT
/*     * @see org.argouml.uml.util.namespace.Namespace#getBaseNamespace()     */	WITHOUT_CLASSIFICATION	0.9999999657320474	WITHOUT_CLASSIFICATION	3.426795258494129E-8	DEFECT
/*     * @see org.argouml.uml.util.namespace.Namespace#getCommonNamespace(     *         org.argouml.uml.util.namespace.Namespace)     */	WITHOUT_CLASSIFICATION	0.9999999475395812	WITHOUT_CLASSIFICATION	5.246041866948927E-8	DEFECT
/*     * @see org.argouml.uml.util.namespace.Namespace#iterator()     */	WITHOUT_CLASSIFICATION	0.9999999419065139	WITHOUT_CLASSIFICATION	5.809348605127457E-8	DEFECT
/*     * @see org.argouml.uml.util.namespace.Namespace#isEmpty()     */	WITHOUT_CLASSIFICATION	0.9999998341308355	WITHOUT_CLASSIFICATION	1.658691645969616E-7	DEFECT
/*     * @see org.argouml.uml.util.namespace.Namespace#setDefaultScopeToken(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999997112476972	WITHOUT_CLASSIFICATION	2.887523028501244E-7	DEFECT
/*     * @see org.argouml.uml.util.namespace.NamespaceElement#getNamespaceElement()     */	WITHOUT_CLASSIFICATION	0.9999999411243347	WITHOUT_CLASSIFICATION	5.887566535908289E-8	DEFECT
/*     * @see org.argouml.application.api.CommandLineInterface#doCommand(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999999754395387	WITHOUT_CLASSIFICATION	2.456046133463196E-8	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getFacade()     */	WITHOUT_CLASSIFICATION	0.9999993268406561	WITHOUT_CLASSIFICATION	6.731593440143228E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getDiagramInterchangeModel()     */	WITHOUT_CLASSIFICATION	0.9999999668454326	WITHOUT_CLASSIFICATION	3.31545674317785E-8	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getModelEventPump()     */	WITHOUT_CLASSIFICATION	0.9999998521873936	WITHOUT_CLASSIFICATION	1.4781260632385807E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getActivityGraphsFactory()     */	WITHOUT_CLASSIFICATION	0.9999999107780045	WITHOUT_CLASSIFICATION	8.92219954807278E-8	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getActivityGraphsHelper()     */	WITHOUT_CLASSIFICATION	0.9999997454486146	WITHOUT_CLASSIFICATION	2.545513854189466E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getCollaborationsFactory()     */	WITHOUT_CLASSIFICATION	0.9999996410983164	WITHOUT_CLASSIFICATION	3.589016835835141E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getCollaborationsHelper()     */	WITHOUT_CLASSIFICATION	0.9999994185462978	WITHOUT_CLASSIFICATION	5.814537022524824E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getCommonBehaviorFactory()     */	WITHOUT_CLASSIFICATION	0.999999785069114	WITHOUT_CLASSIFICATION	2.1493088599292875E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getCommonBehaviorHelper()     */	WITHOUT_CLASSIFICATION	0.9999997233099284	WITHOUT_CLASSIFICATION	2.7669007154237517E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getCoreFactory()     */	WITHOUT_CLASSIFICATION	0.9999998250135664	WITHOUT_CLASSIFICATION	1.7498643348679323E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getCoreHelper()     */	WITHOUT_CLASSIFICATION	0.999999694287496	WITHOUT_CLASSIFICATION	3.0571250400162E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getDataTypesFactory()     */	WITHOUT_CLASSIFICATION	0.9999995734958762	WITHOUT_CLASSIFICATION	4.265041238707684E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getDataTypesHelper()     */	WITHOUT_CLASSIFICATION	0.9999988709724716	WITHOUT_CLASSIFICATION	1.1290275284358637E-6	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getExtensionMechanismsFactory()     */	WITHOUT_CLASSIFICATION	0.9999999400055256	WITHOUT_CLASSIFICATION	5.999447439806868E-8	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getExtensionMechanismsHelper()     */	WITHOUT_CLASSIFICATION	0.9999999170273143	WITHOUT_CLASSIFICATION	8.297268573651752E-8	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getModelManagementFactory()     */	WITHOUT_CLASSIFICATION	0.9999998862351649	WITHOUT_CLASSIFICATION	1.137648350667222E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getModelManagementHelper()     */	WITHOUT_CLASSIFICATION	0.9999998332790028	WITHOUT_CLASSIFICATION	1.6672099722385738E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getStateMachinesFactory()     */	WITHOUT_CLASSIFICATION	0.9999999035834428	WITHOUT_CLASSIFICATION	9.641655713453488E-8	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getStateMachinesHelper()     */	WITHOUT_CLASSIFICATION	0.9999998498963031	WITHOUT_CLASSIFICATION	1.501036970090456E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getUmlFactory()     */	WITHOUT_CLASSIFICATION	0.9999997342106018	WITHOUT_CLASSIFICATION	2.657893981633129E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getUmlHelper()     */	WITHOUT_CLASSIFICATION	0.9999995628175816	WITHOUT_CLASSIFICATION	4.371824184146795E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getUseCasesFactory()     */	WITHOUT_CLASSIFICATION	0.9999996453281369	WITHOUT_CLASSIFICATION	3.546718631531267E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getUseCasesHelper()     */	WITHOUT_CLASSIFICATION	0.9999994248166078	WITHOUT_CLASSIFICATION	5.751833922369084E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getMessageSort()     */	WITHOUT_CLASSIFICATION	0.9999998525147151	WITHOUT_CLASSIFICATION	1.4748528488714533E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getMetaTypes()     */	WITHOUT_CLASSIFICATION	0.9999992571836105	WITHOUT_CLASSIFICATION	7.428163893948436E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getChangeableKind()     */	WITHOUT_CLASSIFICATION	0.9999998794576984	WITHOUT_CLASSIFICATION	1.2054230149262147E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getAggregationKind()     */	WITHOUT_CLASSIFICATION	0.9999998907511481	WITHOUT_CLASSIFICATION	1.0924885182863547E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getPseudostateKind()     */	WITHOUT_CLASSIFICATION	0.9999998977397268	WITHOUT_CLASSIFICATION	1.0226027334357831E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getScopeKind()     */	WITHOUT_CLASSIFICATION	0.9999999162179295	WITHOUT_CLASSIFICATION	8.378207053033193E-8	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getConcurrencyKind()     */	WITHOUT_CLASSIFICATION	0.9999996030588294	WITHOUT_CLASSIFICATION	3.969411706062507E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getDirectionKind()     */	WITHOUT_CLASSIFICATION	0.9999996681393298	WITHOUT_CLASSIFICATION	3.3186067011574404E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getOrderingKind()     */	WITHOUT_CLASSIFICATION	0.9999995845634432	WITHOUT_CLASSIFICATION	4.154365567623796E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getVisibilityKind()     */	WITHOUT_CLASSIFICATION	0.9999997845142149	WITHOUT_CLASSIFICATION	2.1548578515065557E-7	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getXmiReader()     */	WITHOUT_CLASSIFICATION	0.999997933448083	WITHOUT_CLASSIFICATION	2.06655191709141E-6	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getXmiWriter(java.lang.Object, java.io.Writer, java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999984551414934	WITHOUT_CLASSIFICATION	1.5448585065726354E-6	DEFECT
/*     * @see org.argouml.model.ModelImplementation#getCopyHelper()     */	WITHOUT_CLASSIFICATION	0.9999995731267224	WITHOUT_CLASSIFICATION	4.268732776225602E-7	DEFECT
/*         * @see org.argouml.notation.providers.NotationProvider#getParsingHelp()         */	WITHOUT_CLASSIFICATION	0.9999999587875007	WITHOUT_CLASSIFICATION	4.1212499361276495E-8	DEFECT
/*         * @see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)         */	WITHOUT_CLASSIFICATION	0.9999984869000592	WITHOUT_CLASSIFICATION	1.513099940683146E-6	DEFECT
/*         * @see org.argouml.notation.providers.NotationProvider#getParsingHelp()         */	WITHOUT_CLASSIFICATION	0.9999999587875007	WITHOUT_CLASSIFICATION	4.1212499361276495E-8	DEFECT
/*         * @see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)         */	WITHOUT_CLASSIFICATION	0.9999984869000592	WITHOUT_CLASSIFICATION	1.513099940683146E-6	DEFECT
/*         * @see org.argouml.ui.TabTarget#refresh()         */	WITHOUT_CLASSIFICATION	0.9999999663005853	WITHOUT_CLASSIFICATION	3.3699414818509625E-8	DEFECT
/*     * @see org.argouml.uml.ui.AbstractTestActionAddDiagram#getAction()     */	WITHOUT_CLASSIFICATION	0.9999999879866671	WITHOUT_CLASSIFICATION	1.2013332887297674E-8	DEFECT
/*     * @see org.argouml.uml.ui.AbstractTestActionAddDiagram#getNamespace()     */	WITHOUT_CLASSIFICATION	0.999999991689376	WITHOUT_CLASSIFICATION	8.310623907861783E-9	DEFECT
/*     * @see org.argouml.uml.ui.AbstractTestActionAddDiagram#getAction()     */	WITHOUT_CLASSIFICATION	0.9999999879866671	WITHOUT_CLASSIFICATION	1.2013332887297674E-8	DEFECT
/*     * @see org.argouml.uml.ui.AbstractTestActionAddDiagram#getNamespace()     */	WITHOUT_CLASSIFICATION	0.999999991689376	WITHOUT_CLASSIFICATION	8.310623907861783E-9	DEFECT
/*     * @see org.argouml.uml.ui.AbstractTestActionAddDiagram#getAction()     */	WITHOUT_CLASSIFICATION	0.9999999879866671	WITHOUT_CLASSIFICATION	1.2013332887297674E-8	DEFECT
/*     * @see org.argouml.uml.ui.AbstractTestActionAddDiagram#getNamespace()     */	WITHOUT_CLASSIFICATION	0.999999991689376	WITHOUT_CLASSIFICATION	8.310623907861783E-9	DEFECT
/*     * @see org.argouml.uml.ui.AbstractTestActionAddDiagram#getAction()     */	WITHOUT_CLASSIFICATION	0.9999999879866671	WITHOUT_CLASSIFICATION	1.2013332887297674E-8	DEFECT
/*     * @see org.argouml.uml.ui.AbstractTestActionAddDiagram#getNamespace()     */	WITHOUT_CLASSIFICATION	0.999999991689376	WITHOUT_CLASSIFICATION	8.310623907861783E-9	DEFECT
/*     * @see org.argouml.uml.ui.     *      AbstractTestActionAddDiagram#getValidNamespaceClasses()     */	WITHOUT_CLASSIFICATION	0.9999999930849849	WITHOUT_CLASSIFICATION	6.915015096295953E-9	DEFECT
/*     * @see org.argouml.uml.ui.AbstractTestActionAddDiagram#getAction()     */	WITHOUT_CLASSIFICATION	0.9999999879866671	WITHOUT_CLASSIFICATION	1.2013332887297674E-8	DEFECT
/*     * @see org.argouml.uml.ui.AbstractTestActionAddDiagram#getNamespace()     */	WITHOUT_CLASSIFICATION	0.999999991689376	WITHOUT_CLASSIFICATION	8.310623907861783E-9	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#propertyChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999999490206914	WITHOUT_CLASSIFICATION	5.0979308449328004E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999324513832	WITHOUT_CLASSIFICATION	6.754861684087216E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999541209197	WITHOUT_CLASSIFICATION	4.58790803210974E-8	DEFECT
/*     * Overridden purely to keep our superclass from removing the listener     * that we just added.     *     * @see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners(java.lang.Object, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999876738771	WITHOUT_CLASSIFICATION	1.2326122929601724E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()     */	WITHOUT_CLASSIFICATION	0.9999994664419952	WITHOUT_CLASSIFICATION	5.335580048003605E-7	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#propertyChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999999490206914	WITHOUT_CLASSIFICATION	5.0979308449328004E-8	DEFECT
/*     * @see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999324513832	WITHOUT_CLASSIFICATION	6.754861684087216E-8	DEFECT
/*     * @see org.argouml.model.StateMachinesHelper#getSource(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999653890624	WITHOUT_CLASSIFICATION	3.461093753587321E-8	DEFECT
/*     * @see org.argouml.model.UseCasesHelper#getAllUseCases(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997396970355	WITHOUT_CLASSIFICATION	2.603029645250401E-7	DEFECT
/*     * @see org.argouml.model.UmlHelper#addListenersToModel(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999998512531322	WITHOUT_CLASSIFICATION	1.4874686778709406E-7	DEFECT
/*     * @see org.argouml.model.UmlHelper#move(java.lang.Object, org.argouml.model.UmlHelper.Direction)     */	WITHOUT_CLASSIFICATION	0.9999996859680891	WITHOUT_CLASSIFICATION	3.140319109603096E-7	DEFECT
/*     * @see org.argouml.model.UmlHelper#move(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997576505787	WITHOUT_CLASSIFICATION	2.423494212863437E-7	DEFECT
/*     * @see org.argouml.model.ModelEventPump#removeClassModelEventListener(     * 	WITHOUT_CLASSIFICATION	0.9999316757139727	WITHOUT_CLASSIFICATION	6.832428602729219E-5	DEFECT
/*     * @see org.argouml.model.ModelEventPump#addModelEventListener(     *          java.beans.PropertyChangeListener, java.lang.Object,     *          java.lang.String[])     */	WITHOUT_CLASSIFICATION	0.999999491567767	WITHOUT_CLASSIFICATION	5.084322330359282E-7	DEFECT
/*     * @see org.argouml.model.ModelEventPump#addModelEventListener(     *          java.beans.PropertyChangeListener, java.lang.Object,     *          java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999992747442525	WITHOUT_CLASSIFICATION	7.252557474302837E-7	DEFECT
/*     * @see org.argouml.model.ModelEventPump#addModelEventListener(     *          java.beans.PropertyChangeListener, java.lang.Object,     *          java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999992747442525	WITHOUT_CLASSIFICATION	7.252557474302837E-7	DEFECT
/*     * @see org.argouml.model.ModelEventPump#addModelEventListener(     *          java.beans.PropertyChangeListener, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999995692752695	WITHOUT_CLASSIFICATION	4.307247305340258E-7	DEFECT
/*     * @see org.argouml.model.ModelEventPump#removeModelEventListener(     *          java.beans.PropertyChangeListener, java.lang.Object,     *          java.lang.String[])     */	WITHOUT_CLASSIFICATION	0.9999992152903916	WITHOUT_CLASSIFICATION	7.847096083026258E-7	DEFECT
/*     * @see org.argouml.model.ModelEventPump#removeModelEventListener(     *          java.beans.PropertyChangeListener, java.lang.Object,     *          java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999988806471158	WITHOUT_CLASSIFICATION	1.119352884127462E-6	DEFECT
/*     * @see org.argouml.model.ModelEventPump#removeModelEventListener(     *          java.beans.PropertyChangeListener, java.lang.Object,     *          java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999988806471158	WITHOUT_CLASSIFICATION	1.119352884127462E-6	DEFECT
/*     * @see org.argouml.model.ModelEventPump#removeModelEventListener(     * 	WITHOUT_CLASSIFICATION	0.9999350247495824	WITHOUT_CLASSIFICATION	6.497525041749648E-5	DEFECT
/*     * @see org.argouml.model.ModelEventPump#addClassModelEventListener(     * 	WITHOUT_CLASSIFICATION	0.9999497275929271	WITHOUT_CLASSIFICATION	5.027240707303729E-5	DEFECT
/*     * @see org.argouml.model.ModelEventPump#addClassModelEventListener(     * 	WITHOUT_CLASSIFICATION	0.9999497275929271	WITHOUT_CLASSIFICATION	5.027240707303729E-5	DEFECT
/*     * @see org.argouml.model.ModelEventPump#removeClassModelEventListener(     * 	WITHOUT_CLASSIFICATION	0.9999316757139727	WITHOUT_CLASSIFICATION	6.832428602729219E-5	DEFECT
/*     * @see org.argouml.model.ExtensionMechanismsHelper#getStereotypes(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997906470274	WITHOUT_CLASSIFICATION	2.0935297252337887E-7	DEFECT
/*     * @see org.argouml.model.CoreHelper#clearStereotypes(java.lang.Object)     *      * All methods below similarly override methods in CoreHelper.     */	WITHOUT_CLASSIFICATION	0.999999308199822	WITHOUT_CLASSIFICATION	6.918001780728554E-7	DEFECT
/*     * @see org.argouml.model.CollaborationsHelper#getAllClassifierRoles(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999645513921	WITHOUT_CLASSIFICATION	3.544860792922729E-8	DEFECT
/*     * @see org.argouml.model.CommonBehaviorHelper#getSource(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999479767124	WITHOUT_CLASSIFICATION	5.202328764219287E-8	DEFECT
/*     * @see org.argouml.model.ActivityGraphsHelper#findClassifierByName(java.lang.Object, java.lang.String)     *     * all methods below similarly implement methods from ActivityGraphsHelper      */	WITHOUT_CLASSIFICATION	0.9999999107237731	WITHOUT_CLASSIFICATION	8.927622689797668E-8	DEFECT
/*     * Returns the value of an element's property (tagged value). This method     * makes sure that a Collection of values is returned if and only if the     * property is multivalued (upper multiplicity value greater 1).     *     * @see org.argouml.model.Facade#getValueOfTag(java.lang.Object, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999805356226	WITHOUT_CLASSIFICATION	1.9464377388121808E-8	DEFECT
/*     * @see org.argouml.model.AbstractModelEventPump#removeClassModelEventListener(java.beans.PropertyChangeListener,     *      java.lang.Object, java.lang.String[])     */	WITHOUT_CLASSIFICATION	0.9999996356149989	WITHOUT_CLASSIFICATION	3.643850009765151E-7	DEFECT
/*     * @see org.argouml.model.ModelEventPump#startPumpingEvents()     */	WITHOUT_CLASSIFICATION	0.9999999654787604	WITHOUT_CLASSIFICATION	3.4521239634097714E-8	DEFECT
/*     * @see org.argouml.model.ModelEventPump#stopPumpingEvents()     */	WITHOUT_CLASSIFICATION	0.9999999776783479	WITHOUT_CLASSIFICATION	2.232165211596673E-8	DEFECT
/*     * @see org.argouml.model.ModelEventPump#flushModelEvents()     */	WITHOUT_CLASSIFICATION	0.9999999702447456	WITHOUT_CLASSIFICATION	2.9755254393137206E-8	DEFECT
/*     * @see org.argouml.model.AggregationKind#getAggregate()     */	WITHOUT_CLASSIFICATION	0.9999999787608645	WITHOUT_CLASSIFICATION	2.1239135426428043E-8	DEFECT
/*     * @see org.argouml.model.PseudostateKind#getChoice()     */	WITHOUT_CLASSIFICATION	0.999999956796983	WITHOUT_CLASSIFICATION	4.3203017090204676E-8	DEFECT
/*     * @see org.argouml.model.ChangeableKind#getChangeable()     */	WITHOUT_CLASSIFICATION	0.9999999275880055	WITHOUT_CLASSIFICATION	7.241199445820769E-8	DEFECT
/*     * @see org.argouml.model.ScopeKind#getClassifier()     */	WITHOUT_CLASSIFICATION	0.9999999750762557	WITHOUT_CLASSIFICATION	2.492374432239808E-8	DEFECT
/*     * @see org.argouml.model.AggregationKind#getComposite()     */	WITHOUT_CLASSIFICATION	0.9999999918156467	WITHOUT_CLASSIFICATION	8.184353301421097E-9	DEFECT
/*     * @see org.argouml.model.ConcurrencyKind#getConcurrent()     */	WITHOUT_CLASSIFICATION	0.9999998937009441	WITHOUT_CLASSIFICATION	1.062990559290197E-7	DEFECT
/*     * @see org.argouml.model.PseudostateKind#getDeepHistory()     */	WITHOUT_CLASSIFICATION	0.9999999804397821	WITHOUT_CLASSIFICATION	1.9560217860484834E-8	DEFECT
/*     * @see org.argouml.model.PseudostateKind#getFork()     */	WITHOUT_CLASSIFICATION	0.9999993053588467	WITHOUT_CLASSIFICATION	6.946411532052324E-7	DEFECT
/*     * @see org.argouml.model.ChangeableKind#getFrozen()     */	WITHOUT_CLASSIFICATION	0.9999997584132111	WITHOUT_CLASSIFICATION	2.4158678888390056E-7	DEFECT
/*     * @see org.argouml.model.ConcurrencyKind#getGuarded()     */	WITHOUT_CLASSIFICATION	0.9999999741261595	WITHOUT_CLASSIFICATION	2.5873840531203193E-8	DEFECT
/*     * @see org.argouml.model.DirectionKind#getInParameter()     */	WITHOUT_CLASSIFICATION	0.9999998109648318	WITHOUT_CLASSIFICATION	1.8903516810998903E-7	DEFECT
/*     * @see org.argouml.model.PseudostateKind#getInitial()     */	WITHOUT_CLASSIFICATION	0.9999999705707672	WITHOUT_CLASSIFICATION	2.9429232848910412E-8	DEFECT
/*     * @see org.argouml.model.DirectionKind#getInOutParameter()     */	WITHOUT_CLASSIFICATION	0.999999841505559	WITHOUT_CLASSIFICATION	1.5849444100405237E-7	DEFECT
/*     * @see org.argouml.model.ScopeKind#getInstance()     */	WITHOUT_CLASSIFICATION	0.9999999856524739	WITHOUT_CLASSIFICATION	1.4347526149698728E-8	DEFECT
/*     * @see org.argouml.model.PseudostateKind#getJoin()     */	WITHOUT_CLASSIFICATION	0.9999998852812614	WITHOUT_CLASSIFICATION	1.1471873858039114E-7	DEFECT
/*     * @see org.argouml.model.PseudostateKind#getJunction()     */	WITHOUT_CLASSIFICATION	0.9999997836045666	WITHOUT_CLASSIFICATION	2.1639543346712529E-7	DEFECT
/*     * @see org.argouml.model.AggregationKind#getNone()     */	WITHOUT_CLASSIFICATION	0.9999999790901369	WITHOUT_CLASSIFICATION	2.09098630861281E-8	DEFECT
/*     * @see org.argouml.model.OrderingKind#getOrdered()     */	WITHOUT_CLASSIFICATION	0.9999998795199758	WITHOUT_CLASSIFICATION	1.2048002417153297E-7	DEFECT
/*     * @see org.argouml.model.DirectionKind#getOutParameter()     */	WITHOUT_CLASSIFICATION	0.9999998647186608	WITHOUT_CLASSIFICATION	1.3528133928788174E-7	DEFECT
/*     * @see org.argouml.model.VisibilityKind#getPackage()     */	WITHOUT_CLASSIFICATION	0.9999999575817429	WITHOUT_CLASSIFICATION	4.2418257065904784E-8	DEFECT
/*     * @see org.argouml.model.VisibilityKind#getPrivate()     */	WITHOUT_CLASSIFICATION	0.9999999509384486	WITHOUT_CLASSIFICATION	4.906155141548422E-8	DEFECT
/*     * @see org.argouml.model.VisibilityKind#getProtected()     */	WITHOUT_CLASSIFICATION	0.9999999749612625	WITHOUT_CLASSIFICATION	2.5038737517594807E-8	DEFECT
/*     * @see org.argouml.model.VisibilityKind#getPublic()     */	WITHOUT_CLASSIFICATION	0.9999999182611297	WITHOUT_CLASSIFICATION	8.173887032718213E-8	DEFECT
/*     * @see org.argouml.model.DirectionKind#getReturnParameter()     */	WITHOUT_CLASSIFICATION	0.9999998340908964	WITHOUT_CLASSIFICATION	1.6590910361592767E-7	DEFECT
/*     * @see org.argouml.model.ConcurrencyKind#getSequential()     */	WITHOUT_CLASSIFICATION	0.999999926001072	WITHOUT_CLASSIFICATION	7.399892787829049E-8	DEFECT
/*     * @see org.argouml.model.PseudostateKind#getShallowHistory()     */	WITHOUT_CLASSIFICATION	0.9999999857353112	WITHOUT_CLASSIFICATION	1.4264688762443976E-8	DEFECT
/*     * @see org.argouml.model.OrderingKind#getUnordered()     */	WITHOUT_CLASSIFICATION	0.9999999212854509	WITHOUT_CLASSIFICATION	7.871454904493395E-8	DEFECT
/*     * @see org.argouml.model.ExtensionMechanismsFactory#createTaggedValue()     */	WITHOUT_CLASSIFICATION	0.9999999865445047	WITHOUT_CLASSIFICATION	1.345549521141179E-8	DEFECT
/*     * @see org.argouml.model.CoreHelper#clearStereotypes(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999996452260964	WITHOUT_CLASSIFICATION	3.5477390354822526E-7	DEFECT
/**     * @see org.argouml.model.CopyHelper#copy(java.lang.Object, java.lang.Object)     *     * Make a copy of element in the given namespace.<p>     *     * This function is a dispatcher that calls the     * copyElement(Element,Namespace) function from XXXFactory.<p>     *     * This function may fail and return null for any of the following reasons:     * <ol>     * <li>No copy function is known for element's type.     * <li>The copy function fails or throws.     * </ol>     *     * @param anelement     *            is the element to copy.     * @param ans     *            the namespace     * @return a copy of element, or null.     *     * @throws IllegalArgumentException     *             if element is null.     */	WITHOUT_CLASSIFICATION	0.9996699387480845	WITHOUT_CLASSIFICATION	3.300612519154396E-4	DEFECT
// Because we map both ends of an association we'll see many // names twice //                LOG.log(Level.FINE, "Duplicate property name found - {0}:{1}", new Object[]{typeName, propertyName});	WITHOUT_CLASSIFICATION	0.9999887547097437	WITHOUT_CLASSIFICATION	1.1245290256420778E-5	DEFECT
/*     * Builds an initialized stereotype with no namespace. A stereotype must     * have a namespace so this method is unsafe. Use buildStereotype(String,     * Object).     *      * @param text     *            is the name of the stereotype     * @return an initialized stereotype.     */	WITHOUT_CLASSIFICATION	0.9982109233980903	WITHOUT_CLASSIFICATION	0.0017890766019096804	DEFECT
/*     * Used by the copy functions. Do not call this function directly.     *      * @param source     *            The stereotype to copy from.     * @param target     *            The object becoming a copy.     */	WITHOUT_CLASSIFICATION	0.9999621330202237	WITHOUT_CLASSIFICATION	3.786697977632621E-5	DEFECT
// If the array hasn't been flagged to indicate otherwise // swap elements the elements and add again.	WITHOUT_CLASSIFICATION	0.9999980164937705	WITHOUT_CLASSIFICATION	1.9835062293899013E-6	DEFECT
// specifies valid elements for a class to contain	WITHOUT_CLASSIFICATION	0.9999998683851955	WITHOUT_CLASSIFICATION	1.3161480451315321E-7	DEFECT
// specifies valid elements for a Component to contain	WITHOUT_CLASSIFICATION	0.9999999813400017	WITHOUT_CLASSIFICATION	1.8659998278761927E-8	DEFECT
// specifies valid elements for an ObjectFlowState to contain	WITHOUT_CLASSIFICATION	0.9999998679559251	WITHOUT_CLASSIFICATION	1.3204407491551216E-7	DEFECT
// specifies valid elements for an AssociationRole to contain	WITHOUT_CLASSIFICATION	0.9999997834213827	WITHOUT_CLASSIFICATION	2.1657861738884618E-7	DEFECT
// specifies valid elements for an SimpleState to contain	WITHOUT_CLASSIFICATION	0.9999998388860438	WITHOUT_CLASSIFICATION	1.6111395610583507E-7	DEFECT
// Extend, but only between two use cases. Remember we draw from the // extension port to the base port.	WITHOUT_CLASSIFICATION	0.9999998142696827	WITHOUT_CLASSIFICATION	1.857303173926312E-7	DEFECT
// default parameter name	WITHOUT_CLASSIFICATION	0.9999992079173919	WITHOUT_CLASSIFICATION	7.920826080691867E-7	DEFECT
// build all other elements using existing buildNode	WITHOUT_CLASSIFICATION	0.9999999270335568	WITHOUT_CLASSIFICATION	7.296644326702997E-8	DEFECT
// There is a bug in the version of MDR (20050711) that // we use  that causes it to fail to delete aggregate // elements which are single valued and where the // aggregate end is listed second in the association // defined in the metamodel. For the UML 1.4 metamodel, // this affects a StateMachine's top StateVertex and // a Transition's Guard.  See issue 4948 & 5227 - tfm // 20080713	WITHOUT_CLASSIFICATION	0.8774706710662079	WITHOUT_CLASSIFICATION	0.12252932893379206	DEFECT
/*             * In UML 1.3, the name is the only place to store text.             * In UML 1.4, there is a body as well, but some tools             * still seem to use name.             */	WITHOUT_CLASSIFICATION	0.9997346669694259	WITHOUT_CLASSIFICATION	2.6533303057414546E-4	DEFECT
/*                 * Although not represented in the OCL (or our Java), the                 * English text of WFR #4 of Section 2.10.3.4 in the UML 1.4                 * spec is more restrictive - "[4] A Collaboration may only                 * contain ClassifierRoles and AssociationRoles, the                 * Generalizations and the Constraints between them, and                 * Actions used in the Collaboration's Interactions."                 */	WITHOUT_CLASSIFICATION	0.9999998508006821	WITHOUT_CLASSIFICATION	1.4919931789557937E-7	DEFECT
/*         * The following from the original NSUML implemenetation was attempting         * to implement WFR #1 from section 2.5.3.32 of the UML 1.4 spec, but if         * there is an owner set, no namespace is valid. The checks for this         * WFR, if desired, need to go in setOwner() and setType() - tfm         */	WITHOUT_CLASSIFICATION	0.9999927529300261	WITHOUT_CLASSIFICATION	7.247069973929807E-6	DEFECT
// or //      self.allConnections->forAll( //              r | self.namespace.allContents->excludes //      (r.participant) implies //      self.namespace.clientDependency->exists (d | //      d.oclIsTypeOf(Permission) and //      d.stereotype.name = 'access' and	WITHOUT_CLASSIFICATION	0.9999998572827427	WITHOUT_CLASSIFICATION	1.4271725736248828E-7	DEFECT
/*     * Return a list of namespaces enclosing this element.     * The list is ordered outer to inner. i.e. it starts at the root model.     */	WITHOUT_CLASSIFICATION	0.9999998604510144	WITHOUT_CLASSIFICATION	1.395489855077901E-7	DEFECT
// ScopeKind, VisibilityKind, PseudostateKind, etc // Doesn't include Boolean though, despite what UML 1.4 spec says	WITHOUT_CLASSIFICATION	0.9999920265762542	WITHOUT_CLASSIFICATION	7.973423745892021E-6	DEFECT
/*             * For a Namespace:             * <pre>             * [2] The operation allContents results in a Set containing             * all ModelElements contained by the Namespace.             *   allContents : Set(ModelElement);             *   allContents = self.contents             * where             *   contents = self.ownedElement -> union(self.namespace, contents)             * </pre><p>             */	WITHOUT_CLASSIFICATION	0.9999837417861059	WITHOUT_CLASSIFICATION	1.6258213894048807E-5	DEFECT
/*             * For a Package:             * <pre>             * [3]  The operation allContents results in a Set containing             * the ModelElements owned by or imported             * by the Package or one of its ancestors.             *   allContents : Set(ModelElement);             *   allContents = self.contents->union(             *     self.parent.allContents->select(e |             *          e.elementOwnership.visibility = #public or             *          e.elementOwnership.visibility = #protected))             *             * where the required operations are defined as :             *             * [1] The operation contents results in a Set containing the             * ModelElements owned by or imported by the Package.             *   contents : Set(ModelElement)             *   contents = self.ownedElement->union(self.importedElement)             * [2] The operation allImportedElements results in a Set containing             * the ModelElements imported by the Package or one of its parents.             *   allImportedElements : Set(ModelElement)             *   allImportedElements = self.importedElement->union(             *     self.parent.oclAsType(Package).allImportedElements->select(             *                   re | re.elementImport.visibility = #public or             *                        re.elementImport.visibility = #protected))             * </pre>             */	WITHOUT_CLASSIFICATION	0.9999762062424881	WITHOUT_CLASSIFICATION	2.379375751193207E-5	DEFECT
// Get the implementations of this operations and // look for an OpaqueBehavior.	WITHOUT_CLASSIFICATION	0.9999872068235884	WITHOUT_CLASSIFICATION	1.2793176411562703E-5	DEFECT
// TODO: In UML 2.0, ClassifierRole, AssociationRole, and // AssociationEndRole have been replaced by the internal // structure of the Collaboration	WITHOUT_CLASSIFICATION	0.9997379034627123	WITHOUT_CLASSIFICATION	2.620965372877583E-4	DEFECT
// For a Transition use indirection through source StateVertex	WITHOUT_CLASSIFICATION	0.9999965203186023	WITHOUT_CLASSIFICATION	3.47968139755015E-6	DEFECT
// TODO: unimplemented //          return ((Property) handle).gets	WITHOUT_CLASSIFICATION	0.6236656592895068	WITHOUT_CLASSIFICATION	0.37633434071049315	DEFECT
// Removed from UML 2.x and deprecated in Model API // so we won't implement it //        throw new NotImplementedException(); // we do not throw an exception because ArgoUML still uses this	WITHOUT_CLASSIFICATION	0.9999932154747058	WITHOUT_CLASSIFICATION	6.784525294306417E-6	DEFECT
// This doesn't work in UML2: both owner and property needed!	WITHOUT_CLASSIFICATION	0.8408147155330165	WITHOUT_CLASSIFICATION	0.15918528446698352	DEFECT
// TODO: Restructured in UML 2	WITHOUT_CLASSIFICATION	0.9428674450268869	WITHOUT_CLASSIFICATION	0.05713255497311319	DEFECT
// TODO: Gone in UML 2.1 // It is now an InstanceSpecification with an  // Association as its classifier	WITHOUT_CLASSIFICATION	0.9617607781097595	WITHOUT_CLASSIFICATION	0.03823922189024056	DEFECT
//list.add("LiteralReal");//UML 2.4 //End LiteralSpecification     	WITHOUT_CLASSIFICATION	0.9999991304824212	WITHOUT_CLASSIFICATION	8.695175789203316E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
// Link does not exist in UML2, a link is represented just as an // association	WITHOUT_CLASSIFICATION	0.9999731721327217	WITHOUT_CLASSIFICATION	2.682786727818766E-5	DEFECT
// Search for our current target language.	WITHOUT_CLASSIFICATION	0.999999876297737	WITHOUT_CLASSIFICATION	1.2370226296811565E-7	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999928616651008	WITHOUT_CLASSIFICATION	7.138334899211065E-6	DEFECT
// The attribute 'targetScope' of an AssociationEnd in UML1.x is no // longer supported in UML2.x	WITHOUT_CLASSIFICATION	0.9999998555227335	WITHOUT_CLASSIFICATION	1.4447726640926524E-7	DEFECT
//        cmd.setObjects(run.getParams().get(0));	WITHOUT_CLASSIFICATION	0.9999997572496231	WITHOUT_CLASSIFICATION	2.42750376917229E-7	DEFECT
// handles all children of relationship including extend and // include which are not members of core	WITHOUT_CLASSIFICATION	0.9999992849313898	WITHOUT_CLASSIFICATION	7.150686102754515E-7	DEFECT
// Although Usage & Permission are Dependencies, they need to // be include separately because of the way lookup works	WITHOUT_CLASSIFICATION	0.9999984255145292	WITHOUT_CLASSIFICATION	1.5744854707929841E-6	DEFECT
// The next 3 restrictions for Abstraction seem to be Argo specific // not something the UML spec requires - tfm - 20070215 // There is no need for these because they arn't used by buildConnection() - b00__1 //        {Abstraction.class, org.eclipse.uml2.uml.Class.class, org.eclipse.uml2.uml.Class.class, null, }, //        {Abstraction.class, org.eclipse.uml2.uml.Package.class,org.eclipse.uml2.uml.Package.class, null, }, //        {Abstraction.class, Component.class, Interface.class, null, },	WITHOUT_CLASSIFICATION	0.9999972402669979	WITHOUT_CLASSIFICATION	2.759733002026036E-6	DEFECT
// specifies valid elements for a Enumeration to contain	WITHOUT_CLASSIFICATION	0.9999999857037637	WITHOUT_CLASSIFICATION	1.4296236338729563E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999959030536316	WITHOUT_CLASSIFICATION	4.096946368362294E-6	DEFECT
/*     * @see java.lang.Object#equals(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999990412357495	WITHOUT_CLASSIFICATION	9.587642505993175E-7	DEFECT
// This module will still register as enabled for UML1.4 but it won't // actually do anything.	WITHOUT_CLASSIFICATION	0.9993855300372556	WITHOUT_CLASSIFICATION	6.144699627443898E-4	DEFECT
/*     * @see java.util.Collection#remove(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999980642629485	WITHOUT_CLASSIFICATION	1.935737051504832E-6	DEFECT
/*     * @see java.util.Collection#contains(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999982746343754	WITHOUT_CLASSIFICATION	1.7253656245251279E-6	DEFECT
/*     * @see java.lang.Object#hashCode()     *     * This will result in rather bad performance but at least we will     * not violate the contract together with {@link #equals(Object)}.     */	WITHOUT_CLASSIFICATION	0.998186167658406	WITHOUT_CLASSIFICATION	0.0018138323415939953	DEFECT
/*     * @see java.util.Collection#size()     */	WITHOUT_CLASSIFICATION	0.9999982280221434	WITHOUT_CLASSIFICATION	1.7719778565356211E-6	DEFECT
/*     * @see java.util.Collection#isEmpty()     */	WITHOUT_CLASSIFICATION	0.9999984193130981	WITHOUT_CLASSIFICATION	1.5806869020202762E-6	DEFECT
/*     * @see java.util.Collection#iterator()     */	WITHOUT_CLASSIFICATION	0.9999995185447826	WITHOUT_CLASSIFICATION	4.814552173638997E-7	DEFECT
/*     * @see java.util.Collection#toArray()     */	WITHOUT_CLASSIFICATION	0.999999142328018	WITHOUT_CLASSIFICATION	8.576719819795622E-7	DEFECT
/*     * @see java.util.Collection#toArray(java.lang.Object[])     */	WITHOUT_CLASSIFICATION	0.9999991096030554	WITHOUT_CLASSIFICATION	8.903969444849972E-7	DEFECT
/*     * @see java.util.Collection#add(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999980174617249	WITHOUT_CLASSIFICATION	1.9825382751824544E-6	DEFECT
/*     * @see java.util.Collection#containsAll(java.util.Collection)     */	WITHOUT_CLASSIFICATION	0.9999991297215223	WITHOUT_CLASSIFICATION	8.702784777050816E-7	DEFECT
/*     * @see java.util.Collection#addAll(java.util.Collection)     */	WITHOUT_CLASSIFICATION	0.9999992200396172	WITHOUT_CLASSIFICATION	7.799603827467605E-7	DEFECT
/*     * @see java.util.Collection#retainAll(java.util.Collection)     */	WITHOUT_CLASSIFICATION	0.9999998350774617	WITHOUT_CLASSIFICATION	1.649225381817326E-7	DEFECT
/*     * @see java.util.Collection#removeAll(java.util.Collection)     */	WITHOUT_CLASSIFICATION	0.999999333674354	WITHOUT_CLASSIFICATION	6.663256459540365E-7	DEFECT
/*     * @see java.util.Collection#clear()     */	WITHOUT_CLASSIFICATION	0.9999988920878572	WITHOUT_CLASSIFICATION	1.1079121428431332E-6	DEFECT
/*     * @see java.util.List#addAll(int, java.util.Collection)     */	WITHOUT_CLASSIFICATION	0.9999996736907361	WITHOUT_CLASSIFICATION	3.263092638953731E-7	DEFECT
/*     * @see java.util.List#get(int)     */	WITHOUT_CLASSIFICATION	0.9999998188339805	WITHOUT_CLASSIFICATION	1.8116601938887858E-7	DEFECT
/*     * @see java.util.List#set(int, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999995346397277	WITHOUT_CLASSIFICATION	4.653602723605095E-7	DEFECT
/*     * @see java.util.List#add(int, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.999999598689196	WITHOUT_CLASSIFICATION	4.013108040481471E-7	DEFECT
/*     * @see java.util.List#remove(int)     */	WITHOUT_CLASSIFICATION	0.9999998475823294	WITHOUT_CLASSIFICATION	1.5241767055032964E-7	DEFECT
/*     * @see java.util.List#indexOf(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999978208531759	WITHOUT_CLASSIFICATION	2.179146824119949E-6	DEFECT
/*     * @see java.util.List#lastIndexOf(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999972371597108	WITHOUT_CLASSIFICATION	2.7628402891758834E-6	DEFECT
/*     * @see java.util.List#listIterator()     */	WITHOUT_CLASSIFICATION	0.999999865194209	WITHOUT_CLASSIFICATION	1.348057909505202E-7	DEFECT
/*     * @see java.util.List#listIterator(int)     */	WITHOUT_CLASSIFICATION	0.9999999614078503	WITHOUT_CLASSIFICATION	3.859214961560771E-8	DEFECT
/*     * @see java.util.List#subList(int, int)     */	WITHOUT_CLASSIFICATION	0.9999996698518651	WITHOUT_CLASSIFICATION	3.3014813493888105E-7	DEFECT
/*     * @see java.lang.Object#hashCode()     *     * This is a rather bad hash solution but with the {@link #equals(Object)}     * defined as below, it is not possible to do better.     */	WITHOUT_CLASSIFICATION	0.9999449542193615	WITHOUT_CLASSIFICATION	5.504578063866361E-5	DEFECT
/*     * @see java.lang.Object#hashCode()     */	WITHOUT_CLASSIFICATION	0.9999937095428904	WITHOUT_CLASSIFICATION	6.290457109648908E-6	DEFECT
/*     * @see java.lang.Runnable#run()     */	WITHOUT_CLASSIFICATION	0.9999977807464051	WITHOUT_CLASSIFICATION	2.2192535948478568E-6	DEFECT
/*     * @see java.lang.Runnable#run()     */	WITHOUT_CLASSIFICATION	0.9999977807464051	WITHOUT_CLASSIFICATION	2.2192535948478568E-6	DEFECT
/*     * @see java.lang.Runnable#run()     */	WITHOUT_CLASSIFICATION	0.9999977807464051	WITHOUT_CLASSIFICATION	2.2192535948478568E-6	DEFECT
/*     * @see java.lang.Runnable#run()     */	WITHOUT_CLASSIFICATION	0.9999977807464051	WITHOUT_CLASSIFICATION	2.2192535948478568E-6	DEFECT
/*     * @see org.tigris.swidgets.Orientable#setOrientation(Orientation)     */	WITHOUT_CLASSIFICATION	0.9999999368829607	WITHOUT_CLASSIFICATION	6.311703936640061E-8	DEFECT
/*     * @see java.util.Observable#notifyObservers(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997954048817	WITHOUT_CLASSIFICATION	2.045951184141764E-7	DEFECT
/*     * @see Observable#notifyObservers()     */	WITHOUT_CLASSIFICATION	0.999999590789553	WITHOUT_CLASSIFICATION	4.092104470041509E-7	DEFECT
/*     * @see javax.swing.table.TableModel#getColumnClass(int)     */	WITHOUT_CLASSIFICATION	0.999999978242514	WITHOUT_CLASSIFICATION	2.1757486121843807E-8	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getName()     */	WITHOUT_CLASSIFICATION	0.9999996588905772	WITHOUT_CLASSIFICATION	3.4110942280528437E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getPrimary2()     */	WITHOUT_CLASSIFICATION	0.9999998478707368	WITHOUT_CLASSIFICATION	1.5212926307361958E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getPrimary3()     */	WITHOUT_CLASSIFICATION	0.9999998329989345	WITHOUT_CLASSIFICATION	1.6700106555678146E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getSecondary1()     */	WITHOUT_CLASSIFICATION	0.9999995253116849	WITHOUT_CLASSIFICATION	4.746883150993589E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getSecondary2()     */	WITHOUT_CLASSIFICATION	0.9999994821372472	WITHOUT_CLASSIFICATION	5.178627528043458E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getSecondary3()     */	WITHOUT_CLASSIFICATION	0.9999994315122108	WITHOUT_CLASSIFICATION	5.684877892070666E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getControlTextFont()     */	WITHOUT_CLASSIFICATION	0.9999997165007326	WITHOUT_CLASSIFICATION	2.834992673448961E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getSystemTextFont()     */	WITHOUT_CLASSIFICATION	0.9999996606127969	WITHOUT_CLASSIFICATION	3.393872030587868E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getUserTextFont()     */	WITHOUT_CLASSIFICATION	0.999999609323483	WITHOUT_CLASSIFICATION	3.9067651692478455E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getMenuTextFont()     */	WITHOUT_CLASSIFICATION	0.9999997939415493	WITHOUT_CLASSIFICATION	2.0605845073211087E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getSubTextFont()     */	WITHOUT_CLASSIFICATION	0.9999998511397278	WITHOUT_CLASSIFICATION	1.4886027222982614E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getWindowTitleFont()     */	WITHOUT_CLASSIFICATION	0.9999996405523366	WITHOUT_CLASSIFICATION	3.594476634854222E-7	DEFECT
/*     * @see java.lang.Runnable#run()     */	WITHOUT_CLASSIFICATION	0.9999977807464051	WITHOUT_CLASSIFICATION	2.2192535948478568E-6	DEFECT
/*     * @see java.awt.event.ComponentListener#componentHidden(java.awt.event.ComponentEvent)     */	WITHOUT_CLASSIFICATION	0.9999997197708684	WITHOUT_CLASSIFICATION	2.802291314915078E-7	DEFECT
/*     * @see javax.swing.table.TableModel#getColumnCount()     */	WITHOUT_CLASSIFICATION	0.9999999771675131	WITHOUT_CLASSIFICATION	2.2832486896250596E-8	DEFECT
/*     * @see javax.swing.table.TableModel#getColumnName(int)     */	WITHOUT_CLASSIFICATION	0.9999999598532113	WITHOUT_CLASSIFICATION	4.014678861954184E-8	DEFECT
/*     * @see javax.swing.table.TableModel#isCellEditable(int, int)     */	WITHOUT_CLASSIFICATION	0.9999977924878141	WITHOUT_CLASSIFICATION	2.2075121858776927E-6	DEFECT
/*     * @see javax.swing.table.TableModel#getRowCount()     */	WITHOUT_CLASSIFICATION	0.9999999315402422	WITHOUT_CLASSIFICATION	6.845975775898109E-8	DEFECT
/*     * @see javax.swing.table.TableModel#getValueAt(int, int)     */	WITHOUT_CLASSIFICATION	0.999999478015774	WITHOUT_CLASSIFICATION	5.21984226056784E-7	DEFECT
/*     * @see javax.swing.table.TableModel#setValueAt(java.lang.Object, int, int)     */	WITHOUT_CLASSIFICATION	0.9999988680115955	WITHOUT_CLASSIFICATION	1.1319884044294357E-6	DEFECT
/*     * @see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994374054892	WITHOUT_CLASSIFICATION	5.625945107321554E-7	DEFECT
/*     * @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994577075367	WITHOUT_CLASSIFICATION	5.422924631974628E-7	DEFECT
/*     * @see javax.swing.table.TableModel#getColumnCount()     */	WITHOUT_CLASSIFICATION	0.9999999771675131	WITHOUT_CLASSIFICATION	2.2832486896250596E-8	DEFECT
/*     * @see javax.swing.table.TableModel#getColumnName(int)     */	WITHOUT_CLASSIFICATION	0.9999999598532113	WITHOUT_CLASSIFICATION	4.014678861954184E-8	DEFECT
/*     * @see javax.swing.table.TableModel#getColumnClass(int)     */	WITHOUT_CLASSIFICATION	0.999999978242514	WITHOUT_CLASSIFICATION	2.1757486121843807E-8	DEFECT
/*     * @see javax.swing.table.TableModel#isCellEditable(int, int)     */	WITHOUT_CLASSIFICATION	0.9999977924878141	WITHOUT_CLASSIFICATION	2.2075121858776927E-6	DEFECT
/*     * @see javax.swing.table.TableModel#getRowCount()     */	WITHOUT_CLASSIFICATION	0.9999999315402422	WITHOUT_CLASSIFICATION	6.845975775898109E-8	DEFECT
/*     * @see javax.swing.table.TableModel#getValueAt(int, int)     */	WITHOUT_CLASSIFICATION	0.999999478015774	WITHOUT_CLASSIFICATION	5.21984226056784E-7	DEFECT
/*     * @see javax.swing.table.TableModel#setValueAt(java.lang.Object, int, int)     */	WITHOUT_CLASSIFICATION	0.9999988680115955	WITHOUT_CLASSIFICATION	1.1319884044294357E-6	DEFECT
/*     * @see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994374054892	WITHOUT_CLASSIFICATION	5.625945107321554E-7	DEFECT
/*     * @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994577075367	WITHOUT_CLASSIFICATION	5.422924631974628E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)     */	WITHOUT_CLASSIFICATION	0.9999999040973686	WITHOUT_CLASSIFICATION	9.590263132237114E-8	DEFECT
/*     * Updates the button if the current row changes     *     * @see javax.swing.event.TableModelListener#tableChanged(javax.swing.event.TableModelEvent)     */	WITHOUT_CLASSIFICATION	0.9999999950901577	WITHOUT_CLASSIFICATION	4.90984231633469E-9	DEFECT
/*     * @see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999994446406183	WITHOUT_CLASSIFICATION	5.553593817324716E-7	DEFECT
/*     * @see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999997746694292	WITHOUT_CLASSIFICATION	2.2533057064832407E-7	DEFECT
/*     * @see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999999678751464	WITHOUT_CLASSIFICATION	3.2124853621143575E-8	DEFECT
/*     * @see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)     */	WITHOUT_CLASSIFICATION	0.9999998903089655	WITHOUT_CLASSIFICATION	1.0969103444235637E-7	DEFECT
/*     * Refresh the table when a critique is enabled/disabled     *     * @see java.util.Observer#update(java.util.Observable, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997887013804	WITHOUT_CLASSIFICATION	2.1129861969561666E-7	DEFECT
/*     * @see javax.swing.table.TableModel#getColumnCount()     */	WITHOUT_CLASSIFICATION	0.9999999771675131	WITHOUT_CLASSIFICATION	2.2832486896250596E-8	DEFECT
/*     * @see javax.swing.table.TableModel#getColumnName(int)     */	WITHOUT_CLASSIFICATION	0.9999999598532113	WITHOUT_CLASSIFICATION	4.014678861954184E-8	DEFECT
/*     * @see javax.swing.table.TableModel#getColumnClass(int)     */	WITHOUT_CLASSIFICATION	0.999999978242514	WITHOUT_CLASSIFICATION	2.1757486121843807E-8	DEFECT
/*     * @see javax.swing.table.TableModel#isCellEditable(int, int)     */	WITHOUT_CLASSIFICATION	0.9999977924878141	WITHOUT_CLASSIFICATION	2.2075121858776927E-6	DEFECT
/*     * @see javax.swing.table.TableModel#getRowCount()     */	WITHOUT_CLASSIFICATION	0.9999999315402422	WITHOUT_CLASSIFICATION	6.845975775898109E-8	DEFECT
/*     * @see javax.swing.table.TableModel#getValueAt(int, int)     */	WITHOUT_CLASSIFICATION	0.999999478015774	WITHOUT_CLASSIFICATION	5.21984226056784E-7	DEFECT
/*     * @see javax.swing.table.TableModel#setValueAt(java.lang.Object, int, int)     */	WITHOUT_CLASSIFICATION	0.9999988680115955	WITHOUT_CLASSIFICATION	1.1319884044294357E-6	DEFECT
/*     * @see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)     */	WITHOUT_CLASSIFICATION	0.9999989380117544	WITHOUT_CLASSIFICATION	1.061988245546457E-6	DEFECT
/*     * @see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997065652897	WITHOUT_CLASSIFICATION	2.934347102064507E-7	DEFECT
/*     * @see javax.swing.tree.TreeModel#getIndexOfChild(     * java.lang.Object, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999977402575898	WITHOUT_CLASSIFICATION	2.2597424101337936E-6	DEFECT
/*     * @see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)     */	WITHOUT_CLASSIFICATION	0.9999997588904089	WITHOUT_CLASSIFICATION	2.41109591128538E-7	DEFECT
/*     * @see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997065652897	WITHOUT_CLASSIFICATION	2.934347102064507E-7	DEFECT
/*     * @see javax.swing.tree.TreeModel#getIndexOfChild(java.lang.Object,     *      java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.999997187496138	WITHOUT_CLASSIFICATION	2.812503862006215E-6	DEFECT
/*     * @see javax.swing.tree.TreeModel#getIndexOfChild(java.lang.Object,     * java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999974148064952	WITHOUT_CLASSIFICATION	2.5851935048092574E-6	DEFECT
/*     * @see javax.swing.tree.TreeModel#valueForPathChanged(     * javax.swing.tree.TreePath, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997361815245	WITHOUT_CLASSIFICATION	2.6381847545163025E-7	DEFECT
/*     * @see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)     */	WITHOUT_CLASSIFICATION	0.9999998084713436	WITHOUT_CLASSIFICATION	1.915286562817191E-7	DEFECT
/*     * @see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)     */	WITHOUT_CLASSIFICATION	0.9999997588904089	WITHOUT_CLASSIFICATION	2.41109591128538E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see javax.swing.tree.TreeModel#getRoot()     */	WITHOUT_CLASSIFICATION	0.9999997833691958	WITHOUT_CLASSIFICATION	2.166308042085323E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)     */	WITHOUT_CLASSIFICATION	0.9999989380117544	WITHOUT_CLASSIFICATION	1.061988245546457E-6	DEFECT
/*     * @see javax.swing.tree.TreeModel#valueForPathChanged(     * javax.swing.tree.TreePath, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997361815245	WITHOUT_CLASSIFICATION	2.6381847545163025E-7	DEFECT
/*     * @see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)     */	WITHOUT_CLASSIFICATION	0.9999998084713436	WITHOUT_CLASSIFICATION	1.915286562817191E-7	DEFECT
/*     * @see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)     */	WITHOUT_CLASSIFICATION	0.9999997588904089	WITHOUT_CLASSIFICATION	2.41109591128538E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)     */	WITHOUT_CLASSIFICATION	0.9999989380117544	WITHOUT_CLASSIFICATION	1.061988245546457E-6	DEFECT
/*     * @see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997065652897	WITHOUT_CLASSIFICATION	2.934347102064507E-7	DEFECT
/*     * @see javax.swing.tree.TreeModel#getIndexOfChild(java.lang.Object, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999976036034602	WITHOUT_CLASSIFICATION	2.3963965397747885E-6	DEFECT
/*     * @see javax.swing.tree.TreeModel#valueForPathChanged(     * javax.swing.tree.TreePath, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997361815245	WITHOUT_CLASSIFICATION	2.6381847545163025E-7	DEFECT
/*     * @see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)     */	WITHOUT_CLASSIFICATION	0.9999998084713436	WITHOUT_CLASSIFICATION	1.915286562817191E-7	DEFECT
/*     * @see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)     */	WITHOUT_CLASSIFICATION	0.9999997588904089	WITHOUT_CLASSIFICATION	2.41109591128538E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)     */	WITHOUT_CLASSIFICATION	0.9999989380117544	WITHOUT_CLASSIFICATION	1.061988245546457E-6	DEFECT
/*     * @see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997065652897	WITHOUT_CLASSIFICATION	2.934347102064507E-7	DEFECT
/*     * @see javax.swing.tree.TreeModel#getIndexOfChild(     * java.lang.Object, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999977402575898	WITHOUT_CLASSIFICATION	2.2597424101337936E-6	DEFECT
/*     * @see javax.swing.tree.TreeModel#valueForPathChanged(     * javax.swing.tree.TreePath, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997361815245	WITHOUT_CLASSIFICATION	2.6381847545163025E-7	DEFECT
/*     * @see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)     */	WITHOUT_CLASSIFICATION	0.9999998084713436	WITHOUT_CLASSIFICATION	1.915286562817191E-7	DEFECT
/*     * @see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)     */	WITHOUT_CLASSIFICATION	0.9999997588904089	WITHOUT_CLASSIFICATION	2.41109591128538E-7	DEFECT
/*     * @see javax.swing.event.TreeSelectionListener#valueChanged(javax.swing.event.TreeSelectionEvent)     */	WITHOUT_CLASSIFICATION	0.9999999254911055	WITHOUT_CLASSIFICATION	7.450889448681048E-8	DEFECT
/*     * @see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998995536239	WITHOUT_CLASSIFICATION	1.0044637608451965E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999999368964285	WITHOUT_CLASSIFICATION	6.310357143005751E-8	DEFECT
/*     * @see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998951464171	WITHOUT_CLASSIFICATION	1.0485358285635044E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.999999926677169	WITHOUT_CLASSIFICATION	7.332283094417994E-8	DEFECT
/*     * @see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998353954294	WITHOUT_CLASSIFICATION	1.6460457068653385E-7	DEFECT
/*     * @see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999997746694292	WITHOUT_CLASSIFICATION	2.2533057064832407E-7	DEFECT
/*     * @see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999999678751464	WITHOUT_CLASSIFICATION	3.2124853621143575E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#deleteFromModel()     */	WITHOUT_CLASSIFICATION	0.9999999542809248	WITHOUT_CLASSIFICATION	4.571907522494501E-8	DEFECT
/*     * @see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999984895965959	WITHOUT_CLASSIFICATION	1.5104034040718005E-6	DEFECT
/*     * @see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999938824751164	WITHOUT_CLASSIFICATION	6.1175248835847086E-6	DEFECT
/*     * @see javax.management.NotificationBroadcaster#getNotificationInfo()     */	WITHOUT_CLASSIFICATION	0.9999994281005993	WITHOUT_CLASSIFICATION	5.718994006387657E-7	DEFECT
/*     * @see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)     */	WITHOUT_CLASSIFICATION	0.9999988794926344	WITHOUT_CLASSIFICATION	1.1205073655272003E-6	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#deleteFromModel()     */	WITHOUT_CLASSIFICATION	0.9999999542809248	WITHOUT_CLASSIFICATION	4.571907522494501E-8	DEFECT
/*     * @see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999984895965959	WITHOUT_CLASSIFICATION	1.5104034040718005E-6	DEFECT
/*     * @see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999938824751164	WITHOUT_CLASSIFICATION	6.1175248835847086E-6	DEFECT
/*     * @see javax.management.NotificationBroadcaster#getNotificationInfo()     */	WITHOUT_CLASSIFICATION	0.9999994281005993	WITHOUT_CLASSIFICATION	5.718994006387657E-7	DEFECT
/*     * @see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)     */	WITHOUT_CLASSIFICATION	0.9999988794926344	WITHOUT_CLASSIFICATION	1.1205073655272003E-6	DEFECT
/*     * @see org.tigris.gef.base.ModeCreateFigPoly#createNewItem(java.awt.event.MouseEvent, int, int)     */	WITHOUT_CLASSIFICATION	0.9999999954122897	WITHOUT_CLASSIFICATION	4.587710395429996E-9	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#deleteFromModel()     */	WITHOUT_CLASSIFICATION	0.9999999542809248	WITHOUT_CLASSIFICATION	4.571907522494501E-8	DEFECT
/*     * @see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999984895965959	WITHOUT_CLASSIFICATION	1.5104034040718005E-6	DEFECT
/*     * @see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999938824751164	WITHOUT_CLASSIFICATION	6.1175248835847086E-6	DEFECT
/*     * @see javax.management.NotificationBroadcaster#getNotificationInfo()     */	WITHOUT_CLASSIFICATION	0.9999994281005993	WITHOUT_CLASSIFICATION	5.718994006387657E-7	DEFECT
/*     * @see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)     */	WITHOUT_CLASSIFICATION	0.9999988794926344	WITHOUT_CLASSIFICATION	1.1205073655272003E-6	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#deleteFromModel()     */	WITHOUT_CLASSIFICATION	0.9999999542809248	WITHOUT_CLASSIFICATION	4.571907522494501E-8	DEFECT
/*     * @see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999984895965959	WITHOUT_CLASSIFICATION	1.5104034040718005E-6	DEFECT
/*     * @see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999938824751164	WITHOUT_CLASSIFICATION	6.1175248835847086E-6	DEFECT
/*     * @see javax.management.NotificationBroadcaster#getNotificationInfo()     */	WITHOUT_CLASSIFICATION	0.9999994281005993	WITHOUT_CLASSIFICATION	5.718994006387657E-7	DEFECT
/*     * @see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)     */	WITHOUT_CLASSIFICATION	0.9999988794926344	WITHOUT_CLASSIFICATION	1.1205073655272003E-6	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#deleteFromModel()     */	WITHOUT_CLASSIFICATION	0.9999999542809248	WITHOUT_CLASSIFICATION	4.571907522494501E-8	DEFECT
/*     * @see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999984895965959	WITHOUT_CLASSIFICATION	1.5104034040718005E-6	DEFECT
/*     * @see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999938824751164	WITHOUT_CLASSIFICATION	6.1175248835847086E-6	DEFECT
/*     * @see javax.management.NotificationBroadcaster#getNotificationInfo()     */	WITHOUT_CLASSIFICATION	0.9999994281005993	WITHOUT_CLASSIFICATION	5.718994006387657E-7	DEFECT
/*     * @see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)     */	WITHOUT_CLASSIFICATION	0.9999988794926344	WITHOUT_CLASSIFICATION	1.1205073655272003E-6	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#deleteFromModel()     */	WITHOUT_CLASSIFICATION	0.9999999542809248	WITHOUT_CLASSIFICATION	4.571907522494501E-8	DEFECT
/*     * @see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999984895965959	WITHOUT_CLASSIFICATION	1.5104034040718005E-6	DEFECT
/*     * @see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999938824751164	WITHOUT_CLASSIFICATION	6.1175248835847086E-6	DEFECT
/*     * @see javax.management.NotificationBroadcaster#getNotificationInfo()     */	WITHOUT_CLASSIFICATION	0.9999994281005993	WITHOUT_CLASSIFICATION	5.718994006387657E-7	DEFECT
/*     * @see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)     */	WITHOUT_CLASSIFICATION	0.9999988794926344	WITHOUT_CLASSIFICATION	1.1205073655272003E-6	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#deleteFromModel()     */	WITHOUT_CLASSIFICATION	0.9999999542809248	WITHOUT_CLASSIFICATION	4.571907522494501E-8	DEFECT
/*     * @see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999984895965959	WITHOUT_CLASSIFICATION	1.5104034040718005E-6	DEFECT
/*     * @see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999938824751164	WITHOUT_CLASSIFICATION	6.1175248835847086E-6	DEFECT
/*     * @see javax.management.NotificationBroadcaster#getNotificationInfo()     */	WITHOUT_CLASSIFICATION	0.9999994281005993	WITHOUT_CLASSIFICATION	5.718994006387657E-7	DEFECT
/*     * @see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)     */	WITHOUT_CLASSIFICATION	0.9999988794926344	WITHOUT_CLASSIFICATION	1.1205073655272003E-6	DEFECT
/*     * @see java.lang.Runnable#run()     */	WITHOUT_CLASSIFICATION	0.9999977807464051	WITHOUT_CLASSIFICATION	2.2192535948478568E-6	DEFECT
/*	WITHOUT_CLASSIFICATION	0.9917225237718192	WITHOUT_CLASSIFICATION	0.008277476228180789	DEFECT
/*	WITHOUT_CLASSIFICATION	0.9917225237718192	WITHOUT_CLASSIFICATION	0.008277476228180789	DEFECT
/*	WITHOUT_CLASSIFICATION	0.9917225237718192	WITHOUT_CLASSIFICATION	0.008277476228180789	DEFECT
/*	WITHOUT_CLASSIFICATION	0.9917225237718192	WITHOUT_CLASSIFICATION	0.008277476228180789	DEFECT
/*     * @see GUISettingsTabInterface#handleSettingsTabRefresh()     */	WITHOUT_CLASSIFICATION	0.999999986079103	WITHOUT_CLASSIFICATION	1.3920896996985922E-8	DEFECT
/*     * @see GUISettingsTabInterface#handleSettingsTabSave()     */	WITHOUT_CLASSIFICATION	0.999999985605382	WITHOUT_CLASSIFICATION	1.439461799369977E-8	DEFECT
/*     * @see GUISettingsTabInterface#handleSettingsTabCancel()     */	WITHOUT_CLASSIFICATION	0.9999999853745846	WITHOUT_CLASSIFICATION	1.4625415351249307E-8	DEFECT
/*     * @see GUISettingsTabInterface#getTabKey()     */	WITHOUT_CLASSIFICATION	0.9999999102292702	WITHOUT_CLASSIFICATION	8.977072975530897E-8	DEFECT
/*     * @see GUISettingsTabInterface#getTabPanel()     */	WITHOUT_CLASSIFICATION	0.999999934355492	WITHOUT_CLASSIFICATION	6.564450802978031E-8	DEFECT
/*     * @see tudresden.ocl.check.types.ModelFacade#getClassifier(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999995285590481	WITHOUT_CLASSIFICATION	4.7144095190092304E-7	DEFECT
/*     * @see tudresden.ocl.check.types.Type#navigateQualified(     *         java.lang.String, tudresden.ocl.check.types.Type[])     */	WITHOUT_CLASSIFICATION	0.9999999857508706	WITHOUT_CLASSIFICATION	1.4249129335359181E-8	DEFECT
/*     * @see tudresden.ocl.check.types.Type2#navigateParameterizedQuery(     *         java.lang.String, tudresden.ocl.check.types.Type[])     */	WITHOUT_CLASSIFICATION	0.9999996887281425	WITHOUT_CLASSIFICATION	3.1127185752339475E-7	DEFECT
/*     * @see tudresden.ocl.check.types.Type#navigateParameterized(     *         java.lang.String, tudresden.ocl.check.types.Type[])     */	WITHOUT_CLASSIFICATION	0.9999998231773649	WITHOUT_CLASSIFICATION	1.768226350524086E-7	DEFECT
/*     * @see tudresden.ocl.check.types.Type#conformsTo(tudresden.ocl.check.types.Type)     */	WITHOUT_CLASSIFICATION	0.9999998799075668	WITHOUT_CLASSIFICATION	1.200924332295422E-7	DEFECT
/*     * @see java.lang.Object#equals(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999990412357495	WITHOUT_CLASSIFICATION	9.587642505993175E-7	DEFECT
/*     * @see java.lang.Object#hashCode()     */	WITHOUT_CLASSIFICATION	0.9999937095428904	WITHOUT_CLASSIFICATION	6.290457109648908E-6	DEFECT
/*     * @see tudresden.ocl.check.types.Type#navigateQualified(     *         java.lang.String, tudresden.ocl.check.types.Type[])     */	WITHOUT_CLASSIFICATION	0.9999999857508706	WITHOUT_CLASSIFICATION	1.4249129335359181E-8	DEFECT
/*     * @see tudresden.ocl.check.types.Type2#navigateParameterizedQuery(     *         java.lang.String, tudresden.ocl.check.types.Type[])     */	WITHOUT_CLASSIFICATION	0.9999996887281425	WITHOUT_CLASSIFICATION	3.1127185752339475E-7	DEFECT
/*     * @see tudresden.ocl.check.types.Type#navigateParameterized(     *         java.lang.String, tudresden.ocl.check.types.Type[])     */	WITHOUT_CLASSIFICATION	0.9999998231773649	WITHOUT_CLASSIFICATION	1.768226350524086E-7	DEFECT
/*     * @see tudresden.ocl.check.types.Type#conformsTo(tudresden.ocl.check.types.Type)     */	WITHOUT_CLASSIFICATION	0.9999998799075668	WITHOUT_CLASSIFICATION	1.200924332295422E-7	DEFECT
/*     * @see java.lang.Object#equals(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999990412357495	WITHOUT_CLASSIFICATION	9.587642505993175E-7	DEFECT
/*     * @see java.lang.Object#hashCode()     */	WITHOUT_CLASSIFICATION	0.9999937095428904	WITHOUT_CLASSIFICATION	6.290457109648908E-6	DEFECT
/*     * @see org.tigris.gef.persistence.pgml.HandlerFactory#getHandler(     * HandlerStack, Object, String, String, String, Attributes)     */	WITHOUT_CLASSIFICATION	0.9999999795022385	WITHOUT_CLASSIFICATION	2.0497761478052792E-8	DEFECT
/*     * @see org.tigris.gef.persistence.pgml.PGMLStackParser#setAttrs(     * org.tigris.gef.presentation.Fig, org.xml.sax.Attributes)     */	WITHOUT_CLASSIFICATION	0.9999999931764141	WITHOUT_CLASSIFICATION	6.823585791795407E-9	DEFECT
/*     * @see org.xml.sax.EntityResolver#resolveEntity(java.lang.String,     *         java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999993016944251	WITHOUT_CLASSIFICATION	6.983055750232024E-7	DEFECT
/*     * @see javax.swing.filechooser.FileFilter#getDescription()     */	WITHOUT_CLASSIFICATION	0.999999976438973	WITHOUT_CLASSIFICATION	2.3561027056754622E-8	DEFECT
/*     * @see javax.swing.filechooser.FileFilter#accept(java.io.File)     */	WITHOUT_CLASSIFICATION	0.9999998581995245	WITHOUT_CLASSIFICATION	1.4180047546717418E-7	DEFECT
/*     * @see java.io.InputStream#read()     */	WITHOUT_CLASSIFICATION	0.9999994498751743	WITHOUT_CLASSIFICATION	5.501248257485678E-7	DEFECT
/*     * @see java.io.InputStream#read(byte[], int, int)     */	WITHOUT_CLASSIFICATION	0.9999996700545367	WITHOUT_CLASSIFICATION	3.2994546331974283E-7	DEFECT
/*     * @see java.lang.Throwable#printStackTrace()     */	WITHOUT_CLASSIFICATION	0.999999294792744	WITHOUT_CLASSIFICATION	7.05207256058011E-7	DEFECT
/*     * @see tudresden.ocl.check.types.Type#hasState(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999997267346918	WITHOUT_CLASSIFICATION	2.732653082405577E-7	DEFECT
/*     * @see java.lang.Throwable#printStackTrace(java.io.PrintStream)     */	WITHOUT_CLASSIFICATION	0.9999993175503995	WITHOUT_CLASSIFICATION	6.824496004830607E-7	DEFECT
/*     * @see java.lang.Throwable#printStackTrace(java.io.PrintWriter)     */	WITHOUT_CLASSIFICATION	0.9999995898428048	WITHOUT_CLASSIFICATION	4.1015719519577303E-7	DEFECT
/*     * @see ProfileModelLoader#loadModel(ProfileReference)     */	WITHOUT_CLASSIFICATION	0.9999984459439357	WITHOUT_CLASSIFICATION	1.554056064350058E-6	DEFECT
/*         * @see java.io.FileFilter#accept(java.io.File)         */	WITHOUT_CLASSIFICATION	0.999998680221082	WITHOUT_CLASSIFICATION	1.3197789180399573E-6	DEFECT
/*     * @see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAAdditiveExpressionTail(tudresden.ocl.parser.node.AAdditiveExpressionTail)     */	WITHOUT_CLASSIFICATION	0.9999995974328219	WITHOUT_CLASSIFICATION	4.0256717815271206E-7	DEFECT
/*     * @see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAMultiplicativeExpressionTail(tudresden.ocl.parser.node.AMultiplicativeExpressionTail)     */	WITHOUT_CLASSIFICATION	0.9999999430720653	WITHOUT_CLASSIFICATION	5.6927934784152216E-8	DEFECT
/*     * @see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAUnaryUnaryExpression(tudresden.ocl.parser.node.AUnaryUnaryExpression)     */	WITHOUT_CLASSIFICATION	0.999999870885484	WITHOUT_CLASSIFICATION	1.2911451593738824E-7	DEFECT
/*     * @see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAPostfixExpressionTail(tudresden.ocl.parser.node.APostfixExpressionTail)     */	WITHOUT_CLASSIFICATION	0.9999996283234376	WITHOUT_CLASSIFICATION	3.716765623776277E-7	DEFECT
/*     * @see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAFeaturePrimaryExpression(tudresden.ocl.parser.node.AFeaturePrimaryExpression)     */	WITHOUT_CLASSIFICATION	0.9999999399070892	WITHOUT_CLASSIFICATION	6.009291068227642E-8	DEFECT
/*     * @see tudresden.ocl.parser.analysis.DepthFirstAdapter#outAEmptyFeatureCallParameters(tudresden.ocl.parser.node.AEmptyFeatureCallParameters)     */	WITHOUT_CLASSIFICATION	0.9999998392153367	WITHOUT_CLASSIFICATION	1.6078466323069817E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAFeatureCallParameters(tudresden.ocl.parser.node.AFeatureCallParameters)     */	WITHOUT_CLASSIFICATION	0.9999998171518053	WITHOUT_CLASSIFICATION	1.8284819471720219E-7	DEFECT
/*     * @param node     * @see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAStandardDeclarator(tudresden.ocl.parser.node.AStandardDeclarator)     */	WITHOUT_CLASSIFICATION	0.9999999673556771	WITHOUT_CLASSIFICATION	3.264432289529343E-8	DEFECT
/*     * @see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseALetExpression(tudresden.ocl.parser.node.ALetExpression)     */	WITHOUT_CLASSIFICATION	0.9999998278970881	WITHOUT_CLASSIFICATION	1.7210291202041904E-7	DEFECT
/*     * @see tudresden.ocl.parser.analysis.DepthFirstAdapter#outAStringLiteral(tudresden.ocl.parser.node.AStringLiteral)     */	WITHOUT_CLASSIFICATION	0.999999798614908	WITHOUT_CLASSIFICATION	2.013850920109916E-7	DEFECT
/*     * @see tudresden.ocl.parser.analysis.DepthFirstAdapter#outARealLiteral(tudresden.ocl.parser.node.ARealLiteral)     */	WITHOUT_CLASSIFICATION	0.9999997648938221	WITHOUT_CLASSIFICATION	2.3510617798082868E-7	DEFECT
/*     * @see tudresden.ocl.parser.analysis.DepthFirstAdapter#outAIntegerLiteral(tudresden.ocl.parser.node.AIntegerLiteral)     */	WITHOUT_CLASSIFICATION	0.9999999485385451	WITHOUT_CLASSIFICATION	5.146145478160214E-8	DEFECT
/*     * @see tudresden.ocl.parser.analysis.DepthFirstAdapter#outABooleanLiteral(tudresden.ocl.parser.node.ABooleanLiteral)     */	WITHOUT_CLASSIFICATION	0.9999999627347705	WITHOUT_CLASSIFICATION	3.72652294122307E-8	DEFECT
/*     * @see tudresden.ocl.parser.analysis.DepthFirstAdapter#outAEnumLiteral(tudresden.ocl.parser.node.AEnumLiteral)     */	WITHOUT_CLASSIFICATION	0.9999999249681757	WITHOUT_CLASSIFICATION	7.503182439068515E-8	DEFECT
/*     * @see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseALiteralCollection(tudresden.ocl.parser.node.ALiteralCollection)     */	WITHOUT_CLASSIFICATION	0.9999994795196897	WITHOUT_CLASSIFICATION	5.20480310346494E-7	DEFECT
/*     * @see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAExpressionListOrRange(tudresden.ocl.parser.node.AExpressionListOrRange)     */	WITHOUT_CLASSIFICATION	0.9999995399556078	WITHOUT_CLASSIFICATION	4.6004439229340616E-7	DEFECT
/*     * @see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAListExpressionListOrRangeTail(tudresden.ocl.parser.node.AListExpressionListOrRangeTail)     */	WITHOUT_CLASSIFICATION	0.9999997641998776	WITHOUT_CLASSIFICATION	2.358001224826125E-7	DEFECT
/*     * @see java.awt.Component#getPreferredSize()     */	WITHOUT_CLASSIFICATION	0.9999996002044008	WITHOUT_CLASSIFICATION	3.997955991593481E-7	DEFECT
/*     * @see java.awt.Component#getSize()     */	WITHOUT_CLASSIFICATION	0.9999993341139783	WITHOUT_CLASSIFICATION	6.658860216679339E-7	DEFECT
/*     * @see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999999678751464	WITHOUT_CLASSIFICATION	3.2124853621143575E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(     *      java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.9999999066328071	WITHOUT_CLASSIFICATION	9.336719285167458E-8	DEFECT
/*     * @see java.awt.event.WindowListener#windowActivated(java.awt.event.WindowEvent)     */	WITHOUT_CLASSIFICATION	0.999999802871634	WITHOUT_CLASSIFICATION	1.971283659322738E-7	DEFECT
/*     * @see java.awt.event.WindowListener#windowClosed(java.awt.event.WindowEvent)     */	WITHOUT_CLASSIFICATION	0.9999999156754881	WITHOUT_CLASSIFICATION	8.432451197618277E-8	DEFECT
/*     * @see java.awt.event.WindowListener#windowDeactivated(java.awt.event.WindowEvent)     */	WITHOUT_CLASSIFICATION	0.9999996711270376	WITHOUT_CLASSIFICATION	3.2887296250901694E-7	DEFECT
/*     * @see java.awt.event.WindowListener#windowDeiconified(java.awt.event.WindowEvent)     */	WITHOUT_CLASSIFICATION	0.9999999366544163	WITHOUT_CLASSIFICATION	6.334558358060908E-8	DEFECT
/*     * @see java.awt.event.WindowListener#windowIconified(java.awt.event.WindowEvent)     */	WITHOUT_CLASSIFICATION	0.9999999400433517	WITHOUT_CLASSIFICATION	5.995664830890346E-8	DEFECT
/*     * @see java.awt.event.WindowListener#windowClosing(java.awt.event.WindowEvent)     */	WITHOUT_CLASSIFICATION	0.9999998566604739	WITHOUT_CLASSIFICATION	1.433395261074286E-7	DEFECT
/*     * @see GUISettingsTabInterface#handleSettingsTabCancel()     */	WITHOUT_CLASSIFICATION	0.9999999853745846	WITHOUT_CLASSIFICATION	1.4625415351249307E-8	DEFECT
/*     * @see GUISettingsTabInterface#getTabKey()     */	WITHOUT_CLASSIFICATION	0.9999999102292702	WITHOUT_CLASSIFICATION	8.977072975530897E-8	DEFECT
/*     * @see GUISettingsTabInterface#getTabPanel()     */	WITHOUT_CLASSIFICATION	0.999999934355492	WITHOUT_CLASSIFICATION	6.564450802978031E-8	DEFECT
/*     * @see GUISettingsTabInterface#handleSettingsTabRefresh()     */	WITHOUT_CLASSIFICATION	0.999999986079103	WITHOUT_CLASSIFICATION	1.3920896996985922E-8	DEFECT
/*     * @see GUISettingsTabInterface#handleSettingsTabSave()     */	WITHOUT_CLASSIFICATION	0.999999985605382	WITHOUT_CLASSIFICATION	1.439461799369977E-8	DEFECT
/*     * @see GUISettingsTabInterface#handleSettingsTabCancel()     */	WITHOUT_CLASSIFICATION	0.9999999853745846	WITHOUT_CLASSIFICATION	1.4625415351249307E-8	DEFECT
/*     * @see GUISettingsTabInterface#getTabPanel()     */	WITHOUT_CLASSIFICATION	0.999999934355492	WITHOUT_CLASSIFICATION	6.564450802978031E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)     */	WITHOUT_CLASSIFICATION	0.9999998903089655	WITHOUT_CLASSIFICATION	1.0969103444235637E-7	DEFECT
/*     * @see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)     */	WITHOUT_CLASSIFICATION	0.9999998903089655	WITHOUT_CLASSIFICATION	1.0969103444235637E-7	DEFECT
/*     * @see java.awt.event.FocusListener#focusGained(java.awt.event.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999999269504332	WITHOUT_CLASSIFICATION	7.30495668081183E-8	DEFECT
/*     * @see java.awt.event.KeyListener#keyPressed(java.awt.event.KeyEvent)     */	WITHOUT_CLASSIFICATION	0.9999994261205447	WITHOUT_CLASSIFICATION	5.738794552686744E-7	DEFECT
/*     * @see java.awt.event.KeyListener#keyReleased(java.awt.event.KeyEvent)     */	WITHOUT_CLASSIFICATION	0.9999994804730685	WITHOUT_CLASSIFICATION	5.195269314467668E-7	DEFECT
/*     * Tests if enter is pressed in the _bbodField so we need to set the target     * bounds.     *     * @see java.awt.event.KeyListener#keyTyped(java.awt.event.KeyEvent)     */	WITHOUT_CLASSIFICATION	0.999999977862067	WITHOUT_CLASSIFICATION	2.2137933055328312E-8	DEFECT
/*     * @see org.tigris.gef.ui.IStatusBar#showStatus(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999998278911324	WITHOUT_CLASSIFICATION	1.7210886768243286E-7	DEFECT
/*     * Override paint so we can set a flag the first time we're called     * and notify any waiting threads that the splash screen has been     * painted.     * @see java.awt.Component#paint(java.awt.Graphics)     */	WITHOUT_CLASSIFICATION	0.9999999636100799	WITHOUT_CLASSIFICATION	3.638992001219452E-8	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getPrimary2()     */	WITHOUT_CLASSIFICATION	0.9999998478707368	WITHOUT_CLASSIFICATION	1.5212926307361958E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getPrimary3()     */	WITHOUT_CLASSIFICATION	0.9999998329989345	WITHOUT_CLASSIFICATION	1.6700106555678146E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getSecondary1()     */	WITHOUT_CLASSIFICATION	0.9999995253116849	WITHOUT_CLASSIFICATION	4.746883150993589E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getSecondary2()     */	WITHOUT_CLASSIFICATION	0.9999994821372472	WITHOUT_CLASSIFICATION	5.178627528043458E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getSecondary3()     */	WITHOUT_CLASSIFICATION	0.9999994315122108	WITHOUT_CLASSIFICATION	5.684877892070666E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getControlTextFont()     */	WITHOUT_CLASSIFICATION	0.9999997165007326	WITHOUT_CLASSIFICATION	2.834992673448961E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getSystemTextFont()     */	WITHOUT_CLASSIFICATION	0.9999996606127969	WITHOUT_CLASSIFICATION	3.393872030587868E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getUserTextFont()     */	WITHOUT_CLASSIFICATION	0.999999609323483	WITHOUT_CLASSIFICATION	3.9067651692478455E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getMenuTextFont()     */	WITHOUT_CLASSIFICATION	0.9999997939415493	WITHOUT_CLASSIFICATION	2.0605845073211087E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getSubTextFont()     */	WITHOUT_CLASSIFICATION	0.9999998511397278	WITHOUT_CLASSIFICATION	1.4886027222982614E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getWindowTitleFont()     */	WITHOUT_CLASSIFICATION	0.9999996405523366	WITHOUT_CLASSIFICATION	3.594476634854222E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see javax.swing.AbstractAction.AbstractAction()     */	WITHOUT_CLASSIFICATION	0.9999998408598302	WITHOUT_CLASSIFICATION	1.5914016989570657E-7	DEFECT
/*     * @see javax.swing.AbstractAction.AbstractAction(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999997163210423	WITHOUT_CLASSIFICATION	2.83678957666336E-7	DEFECT
/*     * @see javax.swing.AbstractAction.AbstractAction(     *       java.lang.String, javax.swing.Icon)     */	WITHOUT_CLASSIFICATION	0.999999709187443	WITHOUT_CLASSIFICATION	2.908125570980375E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998995536239	WITHOUT_CLASSIFICATION	1.0044637608451965E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999999368964285	WITHOUT_CLASSIFICATION	6.310357143005751E-8	DEFECT
/*     * @see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998353954294	WITHOUT_CLASSIFICATION	1.6460457068653385E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998951464171	WITHOUT_CLASSIFICATION	1.0485358285635044E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.999999926677169	WITHOUT_CLASSIFICATION	7.332283094417994E-8	DEFECT
/*     * @see java.awt.event.KeyListener#keyPressed(java.awt.event.KeyEvent)     */	WITHOUT_CLASSIFICATION	0.9999994261205447	WITHOUT_CLASSIFICATION	5.738794552686744E-7	DEFECT
/*     * @see java.awt.event.KeyListener#keyReleased(java.awt.event.KeyEvent)     */	WITHOUT_CLASSIFICATION	0.9999994804730685	WITHOUT_CLASSIFICATION	5.195269314467668E-7	DEFECT
/*     * @see java.awt.event.KeyListener#keyTyped(java.awt.event.KeyEvent)     */	WITHOUT_CLASSIFICATION	0.9999985352913213	WITHOUT_CLASSIFICATION	1.4647086786958279E-6	DEFECT
/*     * @see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)     */	WITHOUT_CLASSIFICATION	0.9999999040973686	WITHOUT_CLASSIFICATION	9.590263132237114E-8	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getName()     */	WITHOUT_CLASSIFICATION	0.9999996588905772	WITHOUT_CLASSIFICATION	3.4110942280528437E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getPrimary2()     */	WITHOUT_CLASSIFICATION	0.9999998478707368	WITHOUT_CLASSIFICATION	1.5212926307361958E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getPrimary3()     */	WITHOUT_CLASSIFICATION	0.9999998329989345	WITHOUT_CLASSIFICATION	1.6700106555678146E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getSecondary1()     */	WITHOUT_CLASSIFICATION	0.9999995253116849	WITHOUT_CLASSIFICATION	4.746883150993589E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getSecondary2()     */	WITHOUT_CLASSIFICATION	0.9999994821372472	WITHOUT_CLASSIFICATION	5.178627528043458E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getSecondary3()     */	WITHOUT_CLASSIFICATION	0.9999994315122108	WITHOUT_CLASSIFICATION	5.684877892070666E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getControlTextFont()     */	WITHOUT_CLASSIFICATION	0.9999997165007326	WITHOUT_CLASSIFICATION	2.834992673448961E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getSystemTextFont()     */	WITHOUT_CLASSIFICATION	0.9999996606127969	WITHOUT_CLASSIFICATION	3.393872030587868E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getUserTextFont()     */	WITHOUT_CLASSIFICATION	0.999999609323483	WITHOUT_CLASSIFICATION	3.9067651692478455E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getMenuTextFont()     */	WITHOUT_CLASSIFICATION	0.9999997939415493	WITHOUT_CLASSIFICATION	2.0605845073211087E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getSubTextFont()     */	WITHOUT_CLASSIFICATION	0.9999998511397278	WITHOUT_CLASSIFICATION	1.4886027222982614E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getWindowTitleFont()     */	WITHOUT_CLASSIFICATION	0.9999996405523366	WITHOUT_CLASSIFICATION	3.594476634854222E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.999999926677169	WITHOUT_CLASSIFICATION	7.332283094417994E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see org.tigris.swidgets.Dialog#nameButtons()     */	WITHOUT_CLASSIFICATION	0.9999998545402142	WITHOUT_CLASSIFICATION	1.4545978567876214E-7	DEFECT
/*     * @see java.awt.Component#getMinimumSize()     */	WITHOUT_CLASSIFICATION	0.999999808153058	WITHOUT_CLASSIFICATION	1.9184694193655748E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998995536239	WITHOUT_CLASSIFICATION	1.0044637608451965E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999999368964285	WITHOUT_CLASSIFICATION	6.310357143005751E-8	DEFECT
/*     * @see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998951464171	WITHOUT_CLASSIFICATION	1.0485358285635044E-7	DEFECT
/*     * @see org.tigris.swidgets.Orientable#setOrientation(org.tigris.swidgets.Orientation)     */	WITHOUT_CLASSIFICATION	0.9999999278012821	WITHOUT_CLASSIFICATION	7.219871796395384E-8	DEFECT
/*     * @see TargetListener#targetAdded(TargetEvent)     */	WITHOUT_CLASSIFICATION	0.999999654492659	WITHOUT_CLASSIFICATION	3.455073409936275E-7	DEFECT
/*     * @see TargetListener#targetRemoved(TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999990515888479	WITHOUT_CLASSIFICATION	9.484111520202286E-7	DEFECT
/*     * @see TargetListener#targetSet(TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999989783248618	WITHOUT_CLASSIFICATION	1.0216751381457237E-6	DEFECT
/*     * @see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)     */	WITHOUT_CLASSIFICATION	0.9999999040973686	WITHOUT_CLASSIFICATION	9.590263132237114E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*             * @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)             */	WITHOUT_CLASSIFICATION	0.9999994577075367	WITHOUT_CLASSIFICATION	5.422924631974628E-7	DEFECT
/*     * @see java.awt.Component#getLocale()     */	WITHOUT_CLASSIFICATION	0.9999996053256155	WITHOUT_CLASSIFICATION	3.946743846067074E-7	DEFECT
/*     * @see java.awt.Window#dispose()     */	WITHOUT_CLASSIFICATION	0.9999992037833567	WITHOUT_CLASSIFICATION	7.962166433167903E-7	DEFECT
/*         * @see java.awt.event.WindowListener#windowClosing(java.awt.event.WindowEvent)         */	WITHOUT_CLASSIFICATION	0.9999998566604739	WITHOUT_CLASSIFICATION	1.433395261074286E-7	DEFECT
/*     * @see java.beans.PropertyChangeListener#propertyChange(     *         java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994550718594	WITHOUT_CLASSIFICATION	5.44928140591602E-7	DEFECT
/*     * @see java.awt.event.WindowListener#windowClosed(java.awt.event.WindowEvent)     */	WITHOUT_CLASSIFICATION	0.9999999156754881	WITHOUT_CLASSIFICATION	8.432451197618277E-8	DEFECT
/*     * @see GUISettingsTabInterface#handleSettingsTabRefresh()     */	WITHOUT_CLASSIFICATION	0.999999986079103	WITHOUT_CLASSIFICATION	1.3920896996985922E-8	DEFECT
/*     * @see GUISettingsTabInterface#handleSettingsTabRefresh()     */	WITHOUT_CLASSIFICATION	0.999999986079103	WITHOUT_CLASSIFICATION	1.3920896996985922E-8	DEFECT
/*     * @see GUISettingsTabInterface#handleSettingsTabSave()     */	WITHOUT_CLASSIFICATION	0.999999985605382	WITHOUT_CLASSIFICATION	1.439461799369977E-8	DEFECT
/*     * @see GUISettingsTabInterface#handleSettingsTabCancel()     */	WITHOUT_CLASSIFICATION	0.9999999853745846	WITHOUT_CLASSIFICATION	1.4625415351249307E-8	DEFECT
/*     * @see GUISettingsTabInterface#getTabKey()     */	WITHOUT_CLASSIFICATION	0.9999999102292702	WITHOUT_CLASSIFICATION	8.977072975530897E-8	DEFECT
/*     * @see GUISettingsTabInterface#getTabPanel()     */	WITHOUT_CLASSIFICATION	0.999999934355492	WITHOUT_CLASSIFICATION	6.564450802978031E-8	DEFECT
/*     * @see javax.swing.table.TableModel#setValueAt(     *         java.lang.Object, int, int)     */	WITHOUT_CLASSIFICATION	0.999998865083782	WITHOUT_CLASSIFICATION	1.134916218080684E-6	DEFECT
/*     * @see javax.swing.table.TableModel#getColumnClass(int)     */	WITHOUT_CLASSIFICATION	0.999999978242514	WITHOUT_CLASSIFICATION	2.1757486121843807E-8	DEFECT
/*     * @see javax.swing.table.TableModel#isCellEditable(int, int)     */	WITHOUT_CLASSIFICATION	0.9999977924878141	WITHOUT_CLASSIFICATION	2.2075121858776927E-6	DEFECT
/*     * @see java.awt.event.WindowListener#windowDeactivated(java.awt.event.WindowEvent)     */	WITHOUT_CLASSIFICATION	0.9999996711270376	WITHOUT_CLASSIFICATION	3.2887296250901694E-7	DEFECT
/*         * @see javax.swing.ListCellRenderer#getListCellRendererComponent(         *         javax.swing.JList, java.lang.Object, int, boolean, boolean)         */	WITHOUT_CLASSIFICATION	0.9999996602317711	WITHOUT_CLASSIFICATION	3.3976822893798735E-7	DEFECT
/*         * @see javax.swing.JComponent#paintComponent(java.awt.Graphics)         */	WITHOUT_CLASSIFICATION	0.9999999166463371	WITHOUT_CLASSIFICATION	8.335366292747601E-8	DEFECT
/*     * @see java.awt.event.WindowListener#windowOpened(java.awt.event.WindowEvent)     */	WITHOUT_CLASSIFICATION	0.9999996443566925	WITHOUT_CLASSIFICATION	3.556433074848073E-7	DEFECT
/*     * @see java.awt.event.WindowListener#windowClosing(java.awt.event.WindowEvent)     */	WITHOUT_CLASSIFICATION	0.9999998566604739	WITHOUT_CLASSIFICATION	1.433395261074286E-7	DEFECT
/*     * @see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)     */	WITHOUT_CLASSIFICATION	0.9999998903089655	WITHOUT_CLASSIFICATION	1.0969103444235637E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998995536239	WITHOUT_CLASSIFICATION	1.0044637608451965E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999999368964285	WITHOUT_CLASSIFICATION	6.310357143005751E-8	DEFECT
/*     * @see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998951464171	WITHOUT_CLASSIFICATION	1.0485358285635044E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.999999926677169	WITHOUT_CLASSIFICATION	7.332283094417994E-8	DEFECT
/*     * Catches a mouseevent and calls mySingleClick and myDoubleClick if a tab     * is clicked which is selected.     * @see java.awt.event.MouseListener#mouseClicked(MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999894657886705	WITHOUT_CLASSIFICATION	1.0534211329572365E-5	DEFECT
/*     * @see GUISettingsTabInterface#handleSettingsTabRefresh()     */	WITHOUT_CLASSIFICATION	0.999999986079103	WITHOUT_CLASSIFICATION	1.3920896996985922E-8	DEFECT
/*     * @see GUISettingsTabInterface#handleSettingsTabSave()     */	WITHOUT_CLASSIFICATION	0.999999985605382	WITHOUT_CLASSIFICATION	1.439461799369977E-8	DEFECT
/*     * @see GUISettingsTabInterface#handleSettingsTabCancel()     */	WITHOUT_CLASSIFICATION	0.9999999853745846	WITHOUT_CLASSIFICATION	1.4625415351249307E-8	DEFECT
/*     * @see GUISettingsTabInterface#getTabKey()     */	WITHOUT_CLASSIFICATION	0.9999999102292702	WITHOUT_CLASSIFICATION	8.977072975530897E-8	DEFECT
/*     * @see javax.swing.tree.TreeModel#getRoot()     */	WITHOUT_CLASSIFICATION	0.9999997833691958	WITHOUT_CLASSIFICATION	2.166308042085323E-7	DEFECT
/*     * @see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)     */	WITHOUT_CLASSIFICATION	0.9999989380117544	WITHOUT_CLASSIFICATION	1.061988245546457E-6	DEFECT
/*     * @see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997065652897	WITHOUT_CLASSIFICATION	2.934347102064507E-7	DEFECT
/*     * @see javax.swing.tree.TreeModel#getIndexOfChild(java.lang.Object,     * java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999974148064952	WITHOUT_CLASSIFICATION	2.5851935048092574E-6	DEFECT
/*     * @see javax.swing.tree.TreeModel#valueForPathChanged(javax.swing.tree.TreePath, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997173835786	WITHOUT_CLASSIFICATION	2.8261642147978584E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see org.tigris.swidgets.Dialog#nameButtons()     */	WITHOUT_CLASSIFICATION	0.9999998545402142	WITHOUT_CLASSIFICATION	1.4545978567876214E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998995536239	WITHOUT_CLASSIFICATION	1.0044637608451965E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999999368964285	WITHOUT_CLASSIFICATION	6.310357143005751E-8	DEFECT
/*     * @see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998951464171	WITHOUT_CLASSIFICATION	1.0485358285635044E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.999999926677169	WITHOUT_CLASSIFICATION	7.332283094417994E-8	DEFECT
/*     * @see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998353954294	WITHOUT_CLASSIFICATION	1.6460457068653385E-7	DEFECT
/*     * @see java.awt.Component#getMinimumSize()     *     * sets minimum size to 120,100     */	WITHOUT_CLASSIFICATION	0.9999995081499484	WITHOUT_CLASSIFICATION	4.918500514987744E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see javax.swing.event.MenuListener#menuSelected(javax.swing.event.MenuEvent)     */	WITHOUT_CLASSIFICATION	0.9999997588864659	WITHOUT_CLASSIFICATION	2.411135341796278E-7	DEFECT
/*     * @see javax.swing.event.MenuListener#menuDeselected(javax.swing.event.MenuEvent)     */	WITHOUT_CLASSIFICATION	0.9999998286956182	WITHOUT_CLASSIFICATION	1.7130438187274542E-7	DEFECT
/*     * @see javax.swing.event.MenuListener#menuCanceled(javax.swing.event.MenuEvent)     */	WITHOUT_CLASSIFICATION	0.9999997265749409	WITHOUT_CLASSIFICATION	2.7342505918925893E-7	DEFECT
/*     * @see org.tigris.gef.base.Cmd#undoIt()     */	WITHOUT_CLASSIFICATION	0.9999999304145324	WITHOUT_CLASSIFICATION	6.958546765750002E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(     *         java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.9999999066328071	WITHOUT_CLASSIFICATION	9.336719285167458E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(     *         java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.9999999066328071	WITHOUT_CLASSIFICATION	9.336719285167458E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see GUISettingsTabInterface#getTabKey()     */	WITHOUT_CLASSIFICATION	0.9999999102292702	WITHOUT_CLASSIFICATION	8.977072975530897E-8	DEFECT
/*     * @see GUISettingsTabInterface#getTabPanel()     */	WITHOUT_CLASSIFICATION	0.999999934355492	WITHOUT_CLASSIFICATION	6.564450802978031E-8	DEFECT
/*         * @see javax.swing.table.TableModel#getColumnClass(int)         */	WITHOUT_CLASSIFICATION	0.999999978242514	WITHOUT_CLASSIFICATION	2.1757486121843807E-8	DEFECT
/*         * @see javax.swing.table.TableModel#isCellEditable(int, int)         */	WITHOUT_CLASSIFICATION	0.9999977924878141	WITHOUT_CLASSIFICATION	2.2075121858776927E-6	DEFECT
/*     * Compares obj1 and obj2 sorting by user object type, then name. Diagrams     * are sorted first, then packages, then other types. sorts by name within     * type groups. Nulls are sorted first for names.     *      * @see java.util.Comparator#compare(java.lang.Object, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999758947089	WITHOUT_CLASSIFICATION	2.4105291088106137E-8	DEFECT
/*         * @see         * javax.swing.event.TreeWillExpandListener#treeWillCollapse(javax.swing         * .event.TreeExpansionEvent)         */	WITHOUT_CLASSIFICATION	0.9999995037808012	WITHOUT_CLASSIFICATION	4.962191988549139E-7	DEFECT
/*         * Updates stereotype setting, adds all children per treemodel 'build on         * demand' design.         *          * @see         * javax.swing.event.TreeWillExpandListener#treeWillExpand(javax.swing         * .event.TreeExpansionEvent)         */	WITHOUT_CLASSIFICATION	0.9999999526442442	WITHOUT_CLASSIFICATION	4.735575587921226E-8	DEFECT
/*         * @see javax.swing.event.TreeExpansionListener#treeCollapsed(         * javax.swing.event.TreeExpansionEvent)         */	WITHOUT_CLASSIFICATION	0.9999997532840251	WITHOUT_CLASSIFICATION	2.467159749573832E-7	DEFECT
/*         * @see javax.swing.event.TreeExpansionListener#treeExpanded(         * javax.swing.event.TreeExpansionEvent) Updates the selection state.         */	WITHOUT_CLASSIFICATION	0.9999998298323146	WITHOUT_CLASSIFICATION	1.70167685373205E-7	DEFECT
/*         * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)         */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*         * @see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)         */	WITHOUT_CLASSIFICATION	0.9999999040973686	WITHOUT_CLASSIFICATION	9.590263132237114E-8	DEFECT
/*         * @see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)         */	WITHOUT_CLASSIFICATION	0.9999999040973686	WITHOUT_CLASSIFICATION	9.590263132237114E-8	DEFECT
/*         * @see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)         */	WITHOUT_CLASSIFICATION	0.9999999040973686	WITHOUT_CLASSIFICATION	9.590263132237114E-8	DEFECT
/*     * @see javax.swing.tree.TreeNode#isLeaf()     */	WITHOUT_CLASSIFICATION	0.9999997002765953	WITHOUT_CLASSIFICATION	2.9972340465760753E-7	DEFECT
/*     * @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994577075367	WITHOUT_CLASSIFICATION	5.422924631974628E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * Do string compare of names of UML objects.  Comparison is     * case insensitive using a primary strength collator in the user's     * locale.     *      * @see java.util.Comparator#compare(java.lang.Object, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999998560463582	WITHOUT_CLASSIFICATION	1.4395364183183026E-7	DEFECT
/*     * @see java.awt.dnd.DragSourceListener#dragDropEnd(java.awt.dnd.DragSourceDropEvent)     */	WITHOUT_CLASSIFICATION	0.9999999085488347	WITHOUT_CLASSIFICATION	9.145116529042975E-8	DEFECT
/*     * @see java.awt.dnd.DragSourceListener#dragEnter(java.awt.dnd.DragSourceDragEvent)     */	WITHOUT_CLASSIFICATION	0.9999998749744357	WITHOUT_CLASSIFICATION	1.2502556441643332E-7	DEFECT
/*     * @see java.awt.dnd.DragSourceListener#dragExit(java.awt.dnd.DragSourceEvent)     */	WITHOUT_CLASSIFICATION	0.9999998702741695	WITHOUT_CLASSIFICATION	1.2972583043574186E-7	DEFECT
/*     * This is not the correct location to set the cursor.     * The commented out code illustrates the calculation     * of coordinates.     *     * @see java.awt.dnd.DragSourceListener#dragOver(java.awt.dnd.DragSourceDragEvent)     */	WITHOUT_CLASSIFICATION	0.9999909568173616	WITHOUT_CLASSIFICATION	9.043182638485286E-6	DEFECT
/*     * @see java.awt.dnd.DragSourceListener#dropActionChanged(java.awt.dnd.DragSourceDragEvent)     */	WITHOUT_CLASSIFICATION	0.9999999690194574	WITHOUT_CLASSIFICATION	3.098054255262732E-8	DEFECT
/*     * Ok, we've been told to scroll because the mouse cursor is in our     * scroll zone.     * @see java.awt.dnd.Autoscroll#autoscroll(java.awt.Point)     */	WITHOUT_CLASSIFICATION	0.999999166771721	WITHOUT_CLASSIFICATION	8.332282790141454E-7	DEFECT
/*     * Calculate the insets for the *JTREE*, not the viewport the tree is in.     * This makes it a bit messy.     *     * @see java.awt.dnd.Autoscroll#getAutoscrollInsets()     */	WITHOUT_CLASSIFICATION	0.9997831316871958	WITHOUT_CLASSIFICATION	2.168683128041236E-4	DEFECT
/*                     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)                     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*         * @see java.awt.dnd.DropTargetListener#dragEnter(java.awt.dnd.DropTargetDragEvent)         */	WITHOUT_CLASSIFICATION	0.9999998055319692	WITHOUT_CLASSIFICATION	1.944680308236757E-7	DEFECT
/*         * @see java.awt.dnd.DropTargetListener#dragExit(java.awt.dnd.DropTargetEvent)         */	WITHOUT_CLASSIFICATION	0.9999997819293831	WITHOUT_CLASSIFICATION	2.1807061681779488E-7	DEFECT
/*         * @see java.awt.dnd.DropTargetListener#dropActionChanged(java.awt.dnd.DropTargetDragEvent)         */	WITHOUT_CLASSIFICATION	0.99999994198164	WITHOUT_CLASSIFICATION	5.8018360059439524E-8	DEFECT
/*         * @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)         */	WITHOUT_CLASSIFICATION	0.9999994577075367	WITHOUT_CLASSIFICATION	5.422924631974628E-7	DEFECT
/*         * @see javax.management.NotificationListener#handleNotification(javax.management.Notification, java.lang.Object)         */	WITHOUT_CLASSIFICATION	0.9999998540093088	WITHOUT_CLASSIFICATION	1.4599069117317678E-7	DEFECT
/*     * @see     * java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.9999998793492648	WITHOUT_CLASSIFICATION	1.2065073512805985E-7	DEFECT
/*     * @see javax.swing.Action#getValue(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999992589712164	WITHOUT_CLASSIFICATION	7.410287834775816E-7	DEFECT
/*     * @see org.tigris.gef.util.ChildGenerator#gen(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999998438743908	WITHOUT_CLASSIFICATION	1.5612560923026134E-7	DEFECT
/*     * @see javax.swing.table.TableModel#getColumnCount()     */	WITHOUT_CLASSIFICATION	0.9999999771675131	WITHOUT_CLASSIFICATION	2.2832486896250596E-8	DEFECT
/*     * @see javax.swing.table.TableModel#getRowCount()     */	WITHOUT_CLASSIFICATION	0.9999999315402422	WITHOUT_CLASSIFICATION	6.845975775898109E-8	DEFECT
/*     * @see javax.swing.table.TableModel#getColumnName(int)     */	WITHOUT_CLASSIFICATION	0.9999999598532113	WITHOUT_CLASSIFICATION	4.014678861954184E-8	DEFECT
/*     * @see javax.swing.table.TableModel#getColumnClass(int)     */	WITHOUT_CLASSIFICATION	0.999999978242514	WITHOUT_CLASSIFICATION	2.1757486121843807E-8	DEFECT
/*     * @see javax.swing.table.TableModel#isCellEditable(int, int)     */	WITHOUT_CLASSIFICATION	0.9999977924878141	WITHOUT_CLASSIFICATION	2.2075121858776927E-6	DEFECT
/*     * @see javax.swing.table.TableModel#getValueAt(int, int)     */	WITHOUT_CLASSIFICATION	0.999999478015774	WITHOUT_CLASSIFICATION	5.21984226056784E-7	DEFECT
/*     * @see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999798760241	WITHOUT_CLASSIFICATION	2.0123975991057457E-8	DEFECT
/*     * @see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999723115442	WITHOUT_CLASSIFICATION	2.7688455745238535E-8	DEFECT
/*     * @see org.tigris.gef.graph.MutableGraphModel#addNodeRelatedEdges(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999926717447	WITHOUT_CLASSIFICATION	7.32825531493572E-9	DEFECT
/*     * @see org.tigris.gef.graph.GraphListener#nodeAdded(org.tigris.gef.graph.GraphEvent)     */	WITHOUT_CLASSIFICATION	0.9999999683287933	WITHOUT_CLASSIFICATION	3.1671206564970306E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineColor()     */	WITHOUT_CLASSIFICATION	0.9999998290030105	WITHOUT_CLASSIFICATION	1.7099698950311398E-7	DEFECT
/*     * @see org.tigris.gef.graph.GraphListener#edgeAdded(org.tigris.gef.graph.GraphEvent)     */	WITHOUT_CLASSIFICATION	0.999999972592521	WITHOUT_CLASSIFICATION	2.740747894785055E-8	DEFECT
/*     * @see org.tigris.gef.graph.GraphListener#nodeRemoved(org.tigris.gef.graph.GraphEvent)     */	WITHOUT_CLASSIFICATION	0.9999999548629895	WITHOUT_CLASSIFICATION	4.5137010486986676E-8	DEFECT
/*     * @see org.tigris.gef.graph.GraphListener#edgeRemoved(org.tigris.gef.graph.GraphEvent)     */	WITHOUT_CLASSIFICATION	0.9999999586738256	WITHOUT_CLASSIFICATION	4.1326174446417424E-8	DEFECT
/*     * @see org.tigris.gef.graph.GraphListener#graphChanged(org.tigris.gef.graph.GraphEvent)     */	WITHOUT_CLASSIFICATION	0.9999999717829265	WITHOUT_CLASSIFICATION	2.8217073378906875E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999340694784	WITHOUT_CLASSIFICATION	6.593052162592007E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getFillColor()     */	WITHOUT_CLASSIFICATION	0.9999997773950514	WITHOUT_CLASSIFICATION	2.2260494867696943E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFilled(boolean)     */	WITHOUT_CLASSIFICATION	0.9999999938877093	WITHOUT_CLASSIFICATION	6.112290659976866E-9	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineWidth(int)     */	WITHOUT_CLASSIFICATION	0.9999999204487886	WITHOUT_CLASSIFICATION	7.955121132515802E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineWidth()     */	WITHOUT_CLASSIFICATION	0.9999998405845854	WITHOUT_CLASSIFICATION	1.5941541474846165E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getMinimumSize()     */	WITHOUT_CLASSIFICATION	0.9999999327190773	WITHOUT_CLASSIFICATION	6.728092273203155E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)     */	WITHOUT_CLASSIFICATION	0.9999999384135748	WITHOUT_CLASSIFICATION	6.158642516569318E-8	DEFECT
/*     * @see org.tigris.gef.base.Diagram#initialize(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999998459251129	WITHOUT_CLASSIFICATION	1.5407488711594038E-7	DEFECT
/*     * Override setBounds to keep shapes looking right.     * The classifier and state Figs are nicely centered vertically,     * and stretched out over the full width,     * to allow easy selection with the mouse.     * The Fig can only be shrunk to half its original size - so that     * it is not reducible to a few pixels only.     *     * @see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)     */	WITHOUT_CLASSIFICATION	0.999999923637935	WITHOUT_CLASSIFICATION	7.636206498528496E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999340694784	WITHOUT_CLASSIFICATION	6.593052162592007E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getFillColor()     */	WITHOUT_CLASSIFICATION	0.9999997773950514	WITHOUT_CLASSIFICATION	2.2260494867696943E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFilled(boolean)     */	WITHOUT_CLASSIFICATION	0.9999999938877093	WITHOUT_CLASSIFICATION	6.112290659976866E-9	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999455836559	WITHOUT_CLASSIFICATION	5.44163440595605E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineColor()     */	WITHOUT_CLASSIFICATION	0.9999998290030105	WITHOUT_CLASSIFICATION	1.7099698950311398E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999340694784	WITHOUT_CLASSIFICATION	6.593052162592007E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getFillColor()     */	WITHOUT_CLASSIFICATION	0.9999997773950514	WITHOUT_CLASSIFICATION	2.2260494867696943E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFilled(boolean)     */	WITHOUT_CLASSIFICATION	0.9999999938877093	WITHOUT_CLASSIFICATION	6.112290659976866E-9	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineWidth(int)     */	WITHOUT_CLASSIFICATION	0.9999999204487886	WITHOUT_CLASSIFICATION	7.955121132515802E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineWidth()     */	WITHOUT_CLASSIFICATION	0.9999998405845854	WITHOUT_CLASSIFICATION	1.5941541474846165E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999340694784	WITHOUT_CLASSIFICATION	6.593052162592007E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getFillColor()     */	WITHOUT_CLASSIFICATION	0.9999997773950514	WITHOUT_CLASSIFICATION	2.2260494867696943E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFilled(boolean)     */	WITHOUT_CLASSIFICATION	0.9999999938877093	WITHOUT_CLASSIFICATION	6.112290659976866E-9	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getMinimumSize()     */	WITHOUT_CLASSIFICATION	0.9999999327190773	WITHOUT_CLASSIFICATION	6.728092273203155E-8	DEFECT
/*     * @see java.lang.Object#clone()     */	WITHOUT_CLASSIFICATION	0.9999990042201411	WITHOUT_CLASSIFICATION	9.957798589067173E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getMinimumSize()     */	WITHOUT_CLASSIFICATION	0.9999999327190773	WITHOUT_CLASSIFICATION	6.728092273203155E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)     *     * Override setBounds to keep shapes looking right.     */	WITHOUT_CLASSIFICATION	0.9999998960254015	WITHOUT_CLASSIFICATION	1.0397459842043208E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999455836559	WITHOUT_CLASSIFICATION	5.44163440595605E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineColor()     */	WITHOUT_CLASSIFICATION	0.9999998290030105	WITHOUT_CLASSIFICATION	1.7099698950311398E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999340694784	WITHOUT_CLASSIFICATION	6.593052162592007E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getFillColor()     */	WITHOUT_CLASSIFICATION	0.9999997773950514	WITHOUT_CLASSIFICATION	2.2260494867696943E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFilled(boolean)     */	WITHOUT_CLASSIFICATION	0.9999999938877093	WITHOUT_CLASSIFICATION	6.112290659976866E-9	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineWidth(int)     */	WITHOUT_CLASSIFICATION	0.9999999204487886	WITHOUT_CLASSIFICATION	7.955121132515802E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineWidth()     */	WITHOUT_CLASSIFICATION	0.9999998405845854	WITHOUT_CLASSIFICATION	1.5941541474846165E-7	DEFECT
/*     * Return all ports on node or edge.     *     * @see org.tigris.gef.graph.GraphModel#getPorts(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999450788382	WITHOUT_CLASSIFICATION	5.4921161797049845E-8	DEFECT
/*     * Return the node or edge that owns the given port.     *     * @see org.tigris.gef.graph.BaseGraphModel#getOwner(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999577370045	WITHOUT_CLASSIFICATION	4.226299554952278E-8	DEFECT
/*     * Return all edges going to given port.     *     * @see org.tigris.gef.graph.GraphModel#getInEdges(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999931862378	WITHOUT_CLASSIFICATION	6.81376221429603E-9	DEFECT
/*     * Return all edges going from given port.     *     * @see org.tigris.gef.graph.GraphModel#getOutEdges(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999947669904	WITHOUT_CLASSIFICATION	5.2330095459556304E-9	DEFECT
/*     * Return true if the given object is a valid node in this graph.     *     * @see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999610840944	WITHOUT_CLASSIFICATION	3.891590567468921E-8	DEFECT
/*     * Return true if the given object is a valid edge in this graph.     *     * @see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999183846443	WITHOUT_CLASSIFICATION	8.161535572304607E-8	DEFECT
/*     * Add the given node to the graph, if valid.     *     * @see org.tigris.gef.graph.MutableGraphModel#addNode(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999952556811	WITHOUT_CLASSIFICATION	4.744318881100902E-9	DEFECT
/*     * @see org.tigris.gef.graph.MutableGraphModel#addNodeRelatedEdges(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999926717447	WITHOUT_CLASSIFICATION	7.32825531493572E-9	DEFECT
/*     * Return true if the two given ports can be connected by a     * kind of edge to be determined by the ports.     *     * @see org.tigris.gef.graph.MutableGraphModel#canConnect(java.lang.Object,     * java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999716649763	WITHOUT_CLASSIFICATION	2.83350236484928E-8	DEFECT
/*     * @see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994374054892	WITHOUT_CLASSIFICATION	5.625945107321554E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999455836559	WITHOUT_CLASSIFICATION	5.44163440595605E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineColor()     */	WITHOUT_CLASSIFICATION	0.9999998290030105	WITHOUT_CLASSIFICATION	1.7099698950311398E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999340694784	WITHOUT_CLASSIFICATION	6.593052162592007E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getFillColor()     */	WITHOUT_CLASSIFICATION	0.9999997773950514	WITHOUT_CLASSIFICATION	2.2260494867696943E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFilled(boolean)     */	WITHOUT_CLASSIFICATION	0.9999999938877093	WITHOUT_CLASSIFICATION	6.112290659976866E-9	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineWidth(int)     */	WITHOUT_CLASSIFICATION	0.9999999204487886	WITHOUT_CLASSIFICATION	7.955121132515802E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineWidth()     */	WITHOUT_CLASSIFICATION	0.9999998405845854	WITHOUT_CLASSIFICATION	1.5941541474846165E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#makeSelection()     */	WITHOUT_CLASSIFICATION	0.9999995782178864	WITHOUT_CLASSIFICATION	4.2178211349919347E-7	DEFECT
/*     * @see org.tigris.gef.graph.GraphFactory#makeNode()     */	WITHOUT_CLASSIFICATION	0.9999998303655369	WITHOUT_CLASSIFICATION	1.6963446317684725E-7	DEFECT
/*     * @see org.tigris.gef.presentation.FigGroup#addFig(Fig)     */	WITHOUT_CLASSIFICATION	0.9999999507240278	WITHOUT_CLASSIFICATION	4.927597220910076E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#calcBounds()     */	WITHOUT_CLASSIFICATION	0.9999998746238706	WITHOUT_CLASSIFICATION	1.2537612944219055E-7	DEFECT
/*     * @see org.tigris.gef.presentation.FigGroup#addFig(Fig)     */	WITHOUT_CLASSIFICATION	0.9999999507240278	WITHOUT_CLASSIFICATION	4.927597220910076E-8	DEFECT
/*     * @see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor(     *         org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer,     *         java.lang.Object, java.util.Map)     */	WITHOUT_CLASSIFICATION	0.9999997180737816	WITHOUT_CLASSIFICATION	2.819262182920371E-7	DEFECT
/*     * @see org.tigris.gef.graph.GraphModel#getPorts(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.999999946103554	WITHOUT_CLASSIFICATION	5.3896446105358985E-8	DEFECT
/*     * @see org.tigris.gef.graph.BaseGraphModel#getOwner(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997912529818	WITHOUT_CLASSIFICATION	2.0874701828719335E-7	DEFECT
/*     * @see org.tigris.gef.graph.GraphModel#getInEdges(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999292356637	WITHOUT_CLASSIFICATION	7.076433632550727E-8	DEFECT
/*     * @see org.tigris.gef.graph.GraphModel#getOutEdges(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.999999966569096	WITHOUT_CLASSIFICATION	3.3430903982391455E-8	DEFECT
/*     * @see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999798760241	WITHOUT_CLASSIFICATION	2.0123975991057457E-8	DEFECT
/*     * @see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999723115442	WITHOUT_CLASSIFICATION	2.7688455745238535E-8	DEFECT
/*     * @see org.tigris.gef.graph.MutableGraphModel#addNode(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999752592347	WITHOUT_CLASSIFICATION	2.474076534757138E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#makeSelection()     */	WITHOUT_CLASSIFICATION	0.9999995782178864	WITHOUT_CLASSIFICATION	4.2178211349919347E-7	DEFECT
/*     * @see org.tigris.gef.graph.GraphEdgeRenderer#getFigEdgeFor(     *         org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer,     *         java.lang.Object, java.util.Map)     */	WITHOUT_CLASSIFICATION	0.9999996356788252	WITHOUT_CLASSIFICATION	3.643211747636361E-7	DEFECT
/*     * @see java.lang.Object#clone()     */	WITHOUT_CLASSIFICATION	0.9999990042201411	WITHOUT_CLASSIFICATION	9.957798589067173E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999455836559	WITHOUT_CLASSIFICATION	5.44163440595605E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineColor()     */	WITHOUT_CLASSIFICATION	0.9999998290030105	WITHOUT_CLASSIFICATION	1.7099698950311398E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999340694784	WITHOUT_CLASSIFICATION	6.593052162592007E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getFillColor()     */	WITHOUT_CLASSIFICATION	0.9999997773950514	WITHOUT_CLASSIFICATION	2.2260494867696943E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFilled(boolean)     */	WITHOUT_CLASSIFICATION	0.9999999938877093	WITHOUT_CLASSIFICATION	6.112290659976866E-9	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineWidth(int)     */	WITHOUT_CLASSIFICATION	0.9999999204487886	WITHOUT_CLASSIFICATION	7.955121132515802E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineWidth()     */	WITHOUT_CLASSIFICATION	0.9999998405845854	WITHOUT_CLASSIFICATION	1.5941541474846165E-7	DEFECT
/*     * Override setBounds to keep shapes looking right.     *     * @see org.tigris.gef.presentation.Fig#setBounds(int, int, int, int)     */	WITHOUT_CLASSIFICATION	0.9999998922034607	WITHOUT_CLASSIFICATION	1.0779653933689378E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setEnclosingFig(org.tigris.gef.presentation.Fig)     */	WITHOUT_CLASSIFICATION	0.9999999875791752	WITHOUT_CLASSIFICATION	1.2420824809318719E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#makeSelection()     */	WITHOUT_CLASSIFICATION	0.9999995782178864	WITHOUT_CLASSIFICATION	4.2178211349919347E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setEnclosingFig(org.tigris.gef.presentation.Fig)     */	WITHOUT_CLASSIFICATION	0.9999999875791752	WITHOUT_CLASSIFICATION	1.2420824809318719E-8	DEFECT
/*     * @see java.lang.Object#clone()     */	WITHOUT_CLASSIFICATION	0.9999990042201411	WITHOUT_CLASSIFICATION	9.957798589067173E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#makeSelection()     */	WITHOUT_CLASSIFICATION	0.9999995782178864	WITHOUT_CLASSIFICATION	4.2178211349919347E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998353954294	WITHOUT_CLASSIFICATION	1.6460457068653385E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998995536239	WITHOUT_CLASSIFICATION	1.0044637608451965E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setEnclosingFig(org.tigris.gef.presentation.Fig)     */	WITHOUT_CLASSIFICATION	0.9999999875791752	WITHOUT_CLASSIFICATION	1.2420824809318719E-8	DEFECT
/*     * @see org.tigris.gef.util.Predicate#predicate(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999998859257692	WITHOUT_CLASSIFICATION	1.1407423080939835E-7	DEFECT
/*     * @see org.tigris.gef.graph.GraphModel#getPorts(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.999999946103554	WITHOUT_CLASSIFICATION	5.3896446105358985E-8	DEFECT
/*     * @see org.tigris.gef.graph.BaseGraphModel#getOwner(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997912529818	WITHOUT_CLASSIFICATION	2.0874701828719335E-7	DEFECT
/*     * @see org.tigris.gef.graph.GraphModel#getInEdges(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999292356637	WITHOUT_CLASSIFICATION	7.076433632550727E-8	DEFECT
/*     * @see org.tigris.gef.graph.GraphModel#getOutEdges(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.999999966569096	WITHOUT_CLASSIFICATION	3.3430903982391455E-8	DEFECT
/*     * @see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999798760241	WITHOUT_CLASSIFICATION	2.0123975991057457E-8	DEFECT
/*     * @see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999723115442	WITHOUT_CLASSIFICATION	2.7688455745238535E-8	DEFECT
/*     * @see org.tigris.gef.graph.MutableGraphModel#addEdge(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999660203298	WITHOUT_CLASSIFICATION	3.397967016996562E-8	DEFECT
/*     * @see org.tigris.gef.graph.MutableGraphModel#addNodeRelatedEdges(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999926717447	WITHOUT_CLASSIFICATION	7.32825531493572E-9	DEFECT
/*     * @see org.tigris.gef.graph.MutableGraphModel#canConnect(java.lang.Object,     *      java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999422248521	WITHOUT_CLASSIFICATION	5.777514785980176E-8	DEFECT
/*     * @see org.tigris.gef.graph.MutableGraphModel#connect(java.lang.Object,     *      java.lang.Object, java.lang.Class)     */	WITHOUT_CLASSIFICATION	0.9999998932398368	WITHOUT_CLASSIFICATION	1.0676016323011226E-7	DEFECT
/*     * @see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994374054892	WITHOUT_CLASSIFICATION	5.625945107321554E-7	DEFECT
/*     * @see org.tigris.gef.util.Predicate#predicate(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999998859257692	WITHOUT_CLASSIFICATION	1.1407423080939835E-7	DEFECT
/*     * Overridden to make it possible to include a stateVertex in a composite     * state.     * @see org.tigris.gef.presentation.Fig#setEnclosingFig(org.tigris.gef.presentation.Fig)     */	WITHOUT_CLASSIFICATION	0.9999998477454517	WITHOUT_CLASSIFICATION	1.5225454832153173E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getUseTrapRect()     */	WITHOUT_CLASSIFICATION	0.9999999097408558	WITHOUT_CLASSIFICATION	9.025914415553368E-8	DEFECT
/*     * Override setBounds to keep shapes looking right.     *     * @see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)     */	WITHOUT_CLASSIFICATION	0.9999998960254015	WITHOUT_CLASSIFICATION	1.0397459842043191E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999455836559	WITHOUT_CLASSIFICATION	5.44163440595605E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineColor()     */	WITHOUT_CLASSIFICATION	0.9999998290030105	WITHOUT_CLASSIFICATION	1.7099698950311398E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999340694784	WITHOUT_CLASSIFICATION	6.593052162592007E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getFillColor()     */	WITHOUT_CLASSIFICATION	0.9999997773950514	WITHOUT_CLASSIFICATION	2.2260494867696943E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFilled(boolean)     */	WITHOUT_CLASSIFICATION	0.9999999938877093	WITHOUT_CLASSIFICATION	6.112290659976866E-9	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineWidth(int)     */	WITHOUT_CLASSIFICATION	0.9999999204487886	WITHOUT_CLASSIFICATION	7.955121132515802E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineWidth()     */	WITHOUT_CLASSIFICATION	0.9999998405845854	WITHOUT_CLASSIFICATION	1.5941541474846165E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999455836559	WITHOUT_CLASSIFICATION	5.44163440595605E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineColor()     */	WITHOUT_CLASSIFICATION	0.9999998290030105	WITHOUT_CLASSIFICATION	1.7099698950311398E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999340694784	WITHOUT_CLASSIFICATION	6.593052162592007E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getFillColor()     */	WITHOUT_CLASSIFICATION	0.9999997773950514	WITHOUT_CLASSIFICATION	2.2260494867696943E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineWidth(int)     */	WITHOUT_CLASSIFICATION	0.9999999204487886	WITHOUT_CLASSIFICATION	7.955121132515802E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineWidth()     */	WITHOUT_CLASSIFICATION	0.9999998405845854	WITHOUT_CLASSIFICATION	1.5941541474846165E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998353954294	WITHOUT_CLASSIFICATION	1.6460457068653385E-7	DEFECT
/*     * @see java.lang.Object#clone()     */	WITHOUT_CLASSIFICATION	0.9999990042201411	WITHOUT_CLASSIFICATION	9.957798589067173E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#makeSelection()     */	WITHOUT_CLASSIFICATION	0.9999995782178864	WITHOUT_CLASSIFICATION	4.2178211349919347E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999455836559	WITHOUT_CLASSIFICATION	5.44163440595605E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineColor()     */	WITHOUT_CLASSIFICATION	0.9999998290030105	WITHOUT_CLASSIFICATION	1.7099698950311398E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999340694784	WITHOUT_CLASSIFICATION	6.593052162592007E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getFillColor()     */	WITHOUT_CLASSIFICATION	0.9999997773950514	WITHOUT_CLASSIFICATION	2.2260494867696943E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFilled(boolean)     */	WITHOUT_CLASSIFICATION	0.9999999938877093	WITHOUT_CLASSIFICATION	6.112290659976866E-9	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineWidth(int)     */	WITHOUT_CLASSIFICATION	0.9999999204487886	WITHOUT_CLASSIFICATION	7.955121132515802E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineWidth()     */	WITHOUT_CLASSIFICATION	0.9999998405845854	WITHOUT_CLASSIFICATION	1.5941541474846165E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)     */	WITHOUT_CLASSIFICATION	0.9999999384135748	WITHOUT_CLASSIFICATION	6.158642516569318E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999455836559	WITHOUT_CLASSIFICATION	5.44163440595605E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999340694784	WITHOUT_CLASSIFICATION	6.593052162592007E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getFillColor()     */	WITHOUT_CLASSIFICATION	0.9999997773950514	WITHOUT_CLASSIFICATION	2.2260494867696943E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineWidth(int)     */	WITHOUT_CLASSIFICATION	0.9999999204487886	WITHOUT_CLASSIFICATION	7.955121132515802E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineWidth()     */	WITHOUT_CLASSIFICATION	0.9999998405845854	WITHOUT_CLASSIFICATION	1.5941541474846165E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998353954294	WITHOUT_CLASSIFICATION	1.6460457068653385E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#makeSelection()     */	WITHOUT_CLASSIFICATION	0.9999995782178864	WITHOUT_CLASSIFICATION	4.2178211349919347E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999455836559	WITHOUT_CLASSIFICATION	5.44163440595605E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineColor()     */	WITHOUT_CLASSIFICATION	0.9999998290030105	WITHOUT_CLASSIFICATION	1.7099698950311398E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999340694784	WITHOUT_CLASSIFICATION	6.593052162592007E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getFillColor()     */	WITHOUT_CLASSIFICATION	0.9999997773950514	WITHOUT_CLASSIFICATION	2.2260494867696943E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFilled(boolean)     */	WITHOUT_CLASSIFICATION	0.9999999938877093	WITHOUT_CLASSIFICATION	6.112290659976866E-9	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineWidth(int)     */	WITHOUT_CLASSIFICATION	0.9999999204487886	WITHOUT_CLASSIFICATION	7.955121132515802E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineWidth()     */	WITHOUT_CLASSIFICATION	0.9999998405845854	WITHOUT_CLASSIFICATION	1.5941541474846165E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getFillColor()     */	WITHOUT_CLASSIFICATION	0.9999997773950514	WITHOUT_CLASSIFICATION	2.2260494867696943E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineWidth(int)     */	WITHOUT_CLASSIFICATION	0.9999999204487886	WITHOUT_CLASSIFICATION	7.955121132515802E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineWidth()     */	WITHOUT_CLASSIFICATION	0.9999998405845854	WITHOUT_CLASSIFICATION	1.5941541474846165E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998353954294	WITHOUT_CLASSIFICATION	1.6460457068653385E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getMinimumSize()     */	WITHOUT_CLASSIFICATION	0.9999999327190773	WITHOUT_CLASSIFICATION	6.728092273203155E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getUseTrapRect()     */	WITHOUT_CLASSIFICATION	0.9999999097408558	WITHOUT_CLASSIFICATION	9.025914415553368E-8	DEFECT
/*     * Override setBounds to keep shapes looking right.     *     * @see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)     */	WITHOUT_CLASSIFICATION	0.9999998960254015	WITHOUT_CLASSIFICATION	1.0397459842043191E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999455836559	WITHOUT_CLASSIFICATION	5.44163440595605E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineColor()     */	WITHOUT_CLASSIFICATION	0.9999998290030105	WITHOUT_CLASSIFICATION	1.7099698950311398E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999340694784	WITHOUT_CLASSIFICATION	6.593052162592007E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getFillColor()     */	WITHOUT_CLASSIFICATION	0.9999997773950514	WITHOUT_CLASSIFICATION	2.2260494867696943E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFilled(boolean)     */	WITHOUT_CLASSIFICATION	0.9999999938877093	WITHOUT_CLASSIFICATION	6.112290659976866E-9	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineWidth(int)     */	WITHOUT_CLASSIFICATION	0.9999999204487886	WITHOUT_CLASSIFICATION	7.955121132515802E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineWidth()     */	WITHOUT_CLASSIFICATION	0.9999998405845854	WITHOUT_CLASSIFICATION	1.5941541474846165E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineColor()     */	WITHOUT_CLASSIFICATION	0.9999998290030105	WITHOUT_CLASSIFICATION	1.7099698950311398E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999340694784	WITHOUT_CLASSIFICATION	6.593052162592007E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getFillColor()     */	WITHOUT_CLASSIFICATION	0.9999997773950514	WITHOUT_CLASSIFICATION	2.2260494867696943E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFilled(boolean)     */	WITHOUT_CLASSIFICATION	0.9999999938877093	WITHOUT_CLASSIFICATION	6.112290659976866E-9	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineWidth(int)     */	WITHOUT_CLASSIFICATION	0.9999999204487886	WITHOUT_CLASSIFICATION	7.955121132515802E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineWidth()     */	WITHOUT_CLASSIFICATION	0.9999998405845854	WITHOUT_CLASSIFICATION	1.5941541474846165E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998353954294	WITHOUT_CLASSIFICATION	1.6460457068653385E-7	DEFECT
/*     * @see java.lang.Object#clone()     */	WITHOUT_CLASSIFICATION	0.9999990042201411	WITHOUT_CLASSIFICATION	9.957798589067173E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setBounds(int, int, int, int)     */	WITHOUT_CLASSIFICATION	0.9999999427049796	WITHOUT_CLASSIFICATION	5.729502044240107E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999455836559	WITHOUT_CLASSIFICATION	5.44163440595605E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineColor()     */	WITHOUT_CLASSIFICATION	0.9999998290030105	WITHOUT_CLASSIFICATION	1.7099698950311398E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFilled(boolean)     */	WITHOUT_CLASSIFICATION	0.9999999938877093	WITHOUT_CLASSIFICATION	6.112290659976866E-9	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineWidth(int)     */	WITHOUT_CLASSIFICATION	0.9999999204487886	WITHOUT_CLASSIFICATION	7.955121132515802E-8	DEFECT
/*     * @see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998353954294	WITHOUT_CLASSIFICATION	1.6460457068653385E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getMinimumSize()     */	WITHOUT_CLASSIFICATION	0.9999999327190773	WITHOUT_CLASSIFICATION	6.728092273203155E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999455836559	WITHOUT_CLASSIFICATION	5.44163440595605E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineColor()     */	WITHOUT_CLASSIFICATION	0.9999998290030105	WITHOUT_CLASSIFICATION	1.7099698950311398E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999340694784	WITHOUT_CLASSIFICATION	6.593052162592007E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getFillColor()     */	WITHOUT_CLASSIFICATION	0.9999997773950514	WITHOUT_CLASSIFICATION	2.2260494867696943E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFilled(boolean)     */	WITHOUT_CLASSIFICATION	0.9999999938877093	WITHOUT_CLASSIFICATION	6.112290659976866E-9	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineWidth(int)     */	WITHOUT_CLASSIFICATION	0.9999999204487886	WITHOUT_CLASSIFICATION	7.955121132515802E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineWidth()     */	WITHOUT_CLASSIFICATION	0.9999998405845854	WITHOUT_CLASSIFICATION	1.5941541474846165E-7	DEFECT
/*     * This function only sets the color of the divider line      * (since that is the only visible part), and can be used to make      * the divider line invisible for the top region in a composite state.     *      * @see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999593880802	WITHOUT_CLASSIFICATION	4.061191972505593E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999340694784	WITHOUT_CLASSIFICATION	6.593052162592007E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getFillColor()     */	WITHOUT_CLASSIFICATION	0.9999997773950514	WITHOUT_CLASSIFICATION	2.2260494867696943E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFilled(boolean)     */	WITHOUT_CLASSIFICATION	0.9999999938877093	WITHOUT_CLASSIFICATION	6.112290659976866E-9	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineWidth(int)     */	WITHOUT_CLASSIFICATION	0.9999999204487886	WITHOUT_CLASSIFICATION	7.955121132515802E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineWidth()     */	WITHOUT_CLASSIFICATION	0.9999998405845854	WITHOUT_CLASSIFICATION	1.5941541474846165E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#makeSelection()     */	WITHOUT_CLASSIFICATION	0.9999995782178864	WITHOUT_CLASSIFICATION	4.2178211349919347E-7	DEFECT
/*     * @see java.lang.Object#clone()     */	WITHOUT_CLASSIFICATION	0.9999990042201411	WITHOUT_CLASSIFICATION	9.957798589067173E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setBounds(int, int, int, int)     */	WITHOUT_CLASSIFICATION	0.9999999427049796	WITHOUT_CLASSIFICATION	5.729502044240107E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999455836559	WITHOUT_CLASSIFICATION	5.44163440595605E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineColor()     */	WITHOUT_CLASSIFICATION	0.9999998290030105	WITHOUT_CLASSIFICATION	1.7099698950311398E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999340694784	WITHOUT_CLASSIFICATION	6.593052162592007E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getFillColor()     */	WITHOUT_CLASSIFICATION	0.9999997773950514	WITHOUT_CLASSIFICATION	2.2260494867696943E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineWidth(int)     */	WITHOUT_CLASSIFICATION	0.9999999204487886	WITHOUT_CLASSIFICATION	7.955121132515802E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineWidth()     */	WITHOUT_CLASSIFICATION	0.9999998405845854	WITHOUT_CLASSIFICATION	1.5941541474846165E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998353954294	WITHOUT_CLASSIFICATION	1.6460457068653385E-7	DEFECT
/*     * @see java.lang.Object#clone()     */	WITHOUT_CLASSIFICATION	0.9999990042201411	WITHOUT_CLASSIFICATION	9.957798589067173E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999455836559	WITHOUT_CLASSIFICATION	5.44163440595605E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineColor()     */	WITHOUT_CLASSIFICATION	0.9999998290030105	WITHOUT_CLASSIFICATION	1.7099698950311398E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999340694784	WITHOUT_CLASSIFICATION	6.593052162592007E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getFillColor()     */	WITHOUT_CLASSIFICATION	0.9999997773950514	WITHOUT_CLASSIFICATION	2.2260494867696943E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFilled(boolean)     */	WITHOUT_CLASSIFICATION	0.9999999938877093	WITHOUT_CLASSIFICATION	6.112290659976866E-9	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineWidth(int)     */	WITHOUT_CLASSIFICATION	0.9999999204487886	WITHOUT_CLASSIFICATION	7.955121132515802E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineWidth()     */	WITHOUT_CLASSIFICATION	0.9999998405845854	WITHOUT_CLASSIFICATION	1.5941541474846165E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998353954294	WITHOUT_CLASSIFICATION	1.6460457068653385E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)     */	WITHOUT_CLASSIFICATION	0.9999999892981944	WITHOUT_CLASSIFICATION	1.0701805498007897E-8	DEFECT
/*     * @see org.tigris.gef.graph.GraphModel#getPorts(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.999999946103554	WITHOUT_CLASSIFICATION	5.3896446105358985E-8	DEFECT
/*     * @see org.tigris.gef.graph.BaseGraphModel#getOwner(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997912529818	WITHOUT_CLASSIFICATION	2.0874701828719335E-7	DEFECT
/*     * @see org.tigris.gef.graph.GraphModel#getOutEdges(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.999999966569096	WITHOUT_CLASSIFICATION	3.3430903982391455E-8	DEFECT
/*     * @see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999798760241	WITHOUT_CLASSIFICATION	2.0123975991057457E-8	DEFECT
/*     * @see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999723115442	WITHOUT_CLASSIFICATION	2.7688455745238535E-8	DEFECT
/*     * @see org.tigris.gef.graph.MutableGraphModel#addNode(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999752592347	WITHOUT_CLASSIFICATION	2.474076534757138E-8	DEFECT
/*     * @see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994374054892	WITHOUT_CLASSIFICATION	5.625945107321554E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999455836559	WITHOUT_CLASSIFICATION	5.44163440595605E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineColor()     */	WITHOUT_CLASSIFICATION	0.9999998290030105	WITHOUT_CLASSIFICATION	1.7099698950311398E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getFillColor()     */	WITHOUT_CLASSIFICATION	0.9999997773950514	WITHOUT_CLASSIFICATION	2.2260494867696943E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineWidth(int)     */	WITHOUT_CLASSIFICATION	0.9999999204487886	WITHOUT_CLASSIFICATION	7.955121132515802E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineWidth()     */	WITHOUT_CLASSIFICATION	0.9999998405845854	WITHOUT_CLASSIFICATION	1.5941541474846165E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getUseTrapRect()     */	WITHOUT_CLASSIFICATION	0.9999999097408558	WITHOUT_CLASSIFICATION	9.025914415553368E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getMinimumSize()     */	WITHOUT_CLASSIFICATION	0.9999999327190773	WITHOUT_CLASSIFICATION	6.728092273203155E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)     */	WITHOUT_CLASSIFICATION	0.9999999892981944	WITHOUT_CLASSIFICATION	1.0701805498007897E-8	DEFECT
/*         * @see java.awt.event.ActionListener#actionPerformed(         *         java.awt.event.ActionEvent)         */	WITHOUT_CLASSIFICATION	0.9999999066328071	WITHOUT_CLASSIFICATION	9.336719285167458E-8	DEFECT
/*         * @see java.awt.event.ActionListener#actionPerformed(         *         java.awt.event.ActionEvent)         */	WITHOUT_CLASSIFICATION	0.9999999066328071	WITHOUT_CLASSIFICATION	9.336719285167458E-8	DEFECT
/*         * @see java.awt.event.ActionListener#actionPerformed(         *         java.awt.event.ActionEvent)         */	WITHOUT_CLASSIFICATION	0.9999999066328071	WITHOUT_CLASSIFICATION	9.336719285167458E-8	DEFECT
/*         * @see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)         */	WITHOUT_CLASSIFICATION	0.9999999892981944	WITHOUT_CLASSIFICATION	1.0701805498007897E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)     */	WITHOUT_CLASSIFICATION	0.9999999892981944	WITHOUT_CLASSIFICATION	1.0701805498007897E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)     */	WITHOUT_CLASSIFICATION	0.9999999892981944	WITHOUT_CLASSIFICATION	1.0701805498007897E-8	DEFECT
/*     * @see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)     */	WITHOUT_CLASSIFICATION	0.9999998903089655	WITHOUT_CLASSIFICATION	1.0969103444235637E-7	DEFECT
/*     * @see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)     */	WITHOUT_CLASSIFICATION	0.9999998903089655	WITHOUT_CLASSIFICATION	1.0969103444235637E-7	DEFECT
/*     * @see java.awt.event.KeyListener#keyReleased(java.awt.event.KeyEvent)     */	WITHOUT_CLASSIFICATION	0.9999994804730685	WITHOUT_CLASSIFICATION	5.195269314467668E-7	DEFECT
/*     * @see java.awt.event.KeyListener#keyTyped(java.awt.event.KeyEvent)     */	WITHOUT_CLASSIFICATION	0.9999985352913213	WITHOUT_CLASSIFICATION	1.4647086786958279E-6	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#makeSelection()     */	WITHOUT_CLASSIFICATION	0.9999995782178864	WITHOUT_CLASSIFICATION	4.2178211349919347E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999455836559	WITHOUT_CLASSIFICATION	5.44163440595605E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineColor()     */	WITHOUT_CLASSIFICATION	0.9999998290030105	WITHOUT_CLASSIFICATION	1.7099698950311398E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999340694784	WITHOUT_CLASSIFICATION	6.593052162592007E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getFillColor()     */	WITHOUT_CLASSIFICATION	0.9999997773950514	WITHOUT_CLASSIFICATION	2.2260494867696943E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFilled(boolean)     */	WITHOUT_CLASSIFICATION	0.9999999938877093	WITHOUT_CLASSIFICATION	6.112290659976866E-9	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineWidth(int)     */	WITHOUT_CLASSIFICATION	0.9999999204487886	WITHOUT_CLASSIFICATION	7.955121132515802E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineWidth()     */	WITHOUT_CLASSIFICATION	0.9999998405845854	WITHOUT_CLASSIFICATION	1.5941541474846165E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setEnclosingFig(org.tigris.gef.presentation.Fig)     */	WITHOUT_CLASSIFICATION	0.9999999875791752	WITHOUT_CLASSIFICATION	1.2420824809318719E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getUseTrapRect()     */	WITHOUT_CLASSIFICATION	0.9999999097408558	WITHOUT_CLASSIFICATION	9.025914415553368E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setBounds(int, int, int, int)     */	WITHOUT_CLASSIFICATION	0.9999999427049796	WITHOUT_CLASSIFICATION	5.729502044240107E-8	DEFECT
/*     * @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994577075367	WITHOUT_CLASSIFICATION	5.422924631974628E-7	DEFECT
/*     * @see org.tigris.gef.presentation.FigText#setTextFilled(boolean)     */	WITHOUT_CLASSIFICATION	0.9999999967431651	WITHOUT_CLASSIFICATION	3.256835011162046E-9	DEFECT
/*     * @see java.awt.datatransfer.ClipboardOwner#lostOwnership(     *      java.awt.datatransfer.Clipboard, java.awt.datatransfer.Transferable)     */	WITHOUT_CLASSIFICATION	0.9999999630349184	WITHOUT_CLASSIFICATION	3.6965081585729705E-8	DEFECT
/*     * @see java.awt.datatransfer.Transferable#getTransferDataFlavors()     */	WITHOUT_CLASSIFICATION	0.9999998882366155	WITHOUT_CLASSIFICATION	1.1176338451344653E-7	DEFECT
/*     * @see java.awt.datatransfer.Transferable#isDataFlavorSupported(     *         java.awt.datatransfer.DataFlavor)     */	WITHOUT_CLASSIFICATION	0.9999999390990204	WITHOUT_CLASSIFICATION	6.090097960187988E-8	DEFECT
/*     * @see java.awt.datatransfer.Transferable#getTransferData(     *         java.awt.datatransfer.DataFlavor)     */	WITHOUT_CLASSIFICATION	0.9999998274189908	WITHOUT_CLASSIFICATION	1.7258100916629537E-7	DEFECT
/*     * @see java.awt.datatransfer.Transferable#getTransferDataFlavors()     */	WITHOUT_CLASSIFICATION	0.9999998882366155	WITHOUT_CLASSIFICATION	1.1176338451344653E-7	DEFECT
/*     * @see java.awt.datatransfer.Transferable#isDataFlavorSupported(     *         java.awt.datatransfer.DataFlavor)     */	WITHOUT_CLASSIFICATION	0.9999999390990204	WITHOUT_CLASSIFICATION	6.090097960187988E-8	DEFECT
/*     * @see java.awt.datatransfer.Transferable#getTransferData(     *         java.awt.datatransfer.DataFlavor)     */	WITHOUT_CLASSIFICATION	0.9999998274189908	WITHOUT_CLASSIFICATION	1.7258100916629537E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#classNameAndBounds()     */	WITHOUT_CLASSIFICATION	0.9999997794631291	WITHOUT_CLASSIFICATION	2.2053687085527872E-7	DEFECT
/*     * @see org.tigris.gef.presentation.FigNode#hitPort(int, int)     */	WITHOUT_CLASSIFICATION	0.9999998754498524	WITHOUT_CLASSIFICATION	1.2455014755089916E-7	DEFECT
/*     * @see org.tigris.gef.presentation.FigGroup#hitFig(java.awt.Rectangle)     */	WITHOUT_CLASSIFICATION	0.9999999416177354	WITHOUT_CLASSIFICATION	5.83822645375358E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#isSelectable()     */	WITHOUT_CLASSIFICATION	0.9999995003025081	WITHOUT_CLASSIFICATION	4.996974920475259E-7	DEFECT
/*     * @see org.tigris.gef.presentation.FigNode#getPortFig(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999998860616383	WITHOUT_CLASSIFICATION	1.1393836176599808E-7	DEFECT
/*     * @see org.tigris.gef.presentation.FigEdge#setFig(org.tigris.gef.presentation.Fig)     */	WITHOUT_CLASSIFICATION	0.9999998880153327	WITHOUT_CLASSIFICATION	1.1198466739329893E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see javax.swing.Action#isEnabled()     */	WITHOUT_CLASSIFICATION	0.9999997926618378	WITHOUT_CLASSIFICATION	2.0733816223854664E-7	DEFECT
/*     * @see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999997746694292	WITHOUT_CLASSIFICATION	2.2533057064832407E-7	DEFECT
/*     * @see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999999678751464	WITHOUT_CLASSIFICATION	3.2124853621143575E-8	DEFECT
/*     * @see org.tigris.gef.base.SelectionButtons#paintButtons(Graphics)     */	WITHOUT_CLASSIFICATION	0.9999999942272726	WITHOUT_CLASSIFICATION	5.772727384731376E-9	DEFECT
/*     * @see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)     */	WITHOUT_CLASSIFICATION	0.9999998903089655	WITHOUT_CLASSIFICATION	1.0969103444235637E-7	DEFECT
/*     * @see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)     */	WITHOUT_CLASSIFICATION	0.9999998903089655	WITHOUT_CLASSIFICATION	1.0969103444235637E-7	DEFECT
/*     * @see java.awt.dnd.DropTargetListener#dragExit(     *         java.awt.dnd.DropTargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999997813658142	WITHOUT_CLASSIFICATION	2.186341857783113E-7	DEFECT
/*     * @see java.awt.dnd.DropTargetListener#drop(     *         java.awt.dnd.DropTargetDropEvent)     */	WITHOUT_CLASSIFICATION	0.9999994790903234	WITHOUT_CLASSIFICATION	5.209096765761932E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#translate(int, int)     */	WITHOUT_CLASSIFICATION	0.9999999277549894	WITHOUT_CLASSIFICATION	7.224501070247917E-8	DEFECT
/*     * @see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998353954294	WITHOUT_CLASSIFICATION	1.6460457068653385E-7	DEFECT
/*     * Overridden to set Argo-specific RenderingHints to determine whether     * or not antialiasing should be turned on.     *     * @see org.tigris.gef.base.Editor#paint(java.awt.Graphics)     */	WITHOUT_CLASSIFICATION	0.9999999806367682	WITHOUT_CLASSIFICATION	1.9363231760854492E-8	DEFECT
/*     * @see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998951464171	WITHOUT_CLASSIFICATION	1.0485358285635044E-7	DEFECT
/*     * @see java.awt.event.MouseMotionListener#mouseMoved(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998315455914	WITHOUT_CLASSIFICATION	1.6845440864553086E-7	DEFECT
/*     * Overridden to set Argo-specific RenderingHints to determine whether     * or not antialiasing should be turned on.     *     * @see org.tigris.gef.base.Editor#paint(java.awt.Graphics)     */	WITHOUT_CLASSIFICATION	0.9999999806367682	WITHOUT_CLASSIFICATION	1.9363231760854492E-8	DEFECT
/*     * @see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999984895965959	WITHOUT_CLASSIFICATION	1.5104034040718005E-6	DEFECT
/*     * @see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999938824751164	WITHOUT_CLASSIFICATION	6.1175248835847086E-6	DEFECT
/*     * @see javax.management.NotificationBroadcaster#getNotificationInfo()     */	WITHOUT_CLASSIFICATION	0.9999994281005993	WITHOUT_CLASSIFICATION	5.718994006387657E-7	DEFECT
/*     * @see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)     */	WITHOUT_CLASSIFICATION	0.9999988794926344	WITHOUT_CLASSIFICATION	1.1205073655272003E-6	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998995536239	WITHOUT_CLASSIFICATION	1.0044637608451965E-7	DEFECT
/*     * @see org.tigris.gef.base.ModeCreatePolyEdge#mouseReleased(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999999980006214	WITHOUT_CLASSIFICATION	1.999378503659386E-9	DEFECT
/*     * Updates the modelelement container if the fig is moved in or     * out another fig. If this fig doesn't have an enclosing fig     * anymore, the namespace of the diagram will be the owning     * modelelement. If this fig is moved inside another     * FigNodeModelElement the owner of that fignodemodelelement will     * be the owning modelelement.     *     * @see org.tigris.gef.presentation.FigNode#setEnclosingFig(org.tigris.gef.presentation.Fig)     */	WITHOUT_CLASSIFICATION	0.9999729965448015	WITHOUT_CLASSIFICATION	2.700345519850323E-5	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getEnclosedFigs()     */	WITHOUT_CLASSIFICATION	0.9999999860469856	WITHOUT_CLASSIFICATION	1.3953014380051681E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#makeSelection()     */	WITHOUT_CLASSIFICATION	0.9999995782178864	WITHOUT_CLASSIFICATION	4.2178211349919347E-7	DEFECT
/*     * @see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994374054892	WITHOUT_CLASSIFICATION	5.625945107321554E-7	DEFECT
/*     * @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994577075367	WITHOUT_CLASSIFICATION	5.422924631974628E-7	DEFECT
/*     * @see java.awt.event.KeyListener#keyPressed(java.awt.event.KeyEvent)     */	WITHOUT_CLASSIFICATION	0.9999994261205447	WITHOUT_CLASSIFICATION	5.738794552686744E-7	DEFECT
/*     * @see java.awt.event.KeyListener#keyReleased(java.awt.event.KeyEvent)     */	WITHOUT_CLASSIFICATION	0.9999994804730685	WITHOUT_CLASSIFICATION	5.195269314467668E-7	DEFECT
/*     * @see java.awt.event.KeyListener#keyTyped(java.awt.event.KeyEvent)     */	WITHOUT_CLASSIFICATION	0.9999985352913213	WITHOUT_CLASSIFICATION	1.4647086786958279E-6	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#deleteFromModel()     */	WITHOUT_CLASSIFICATION	0.9999999542809248	WITHOUT_CLASSIFICATION	4.571907522494501E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#classNameAndBounds()     */	WITHOUT_CLASSIFICATION	0.9999997794631291	WITHOUT_CLASSIFICATION	2.2053687085527872E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#calcBounds()     */	WITHOUT_CLASSIFICATION	0.9999998746238706	WITHOUT_CLASSIFICATION	1.2537612944219055E-7	DEFECT
/*     * Necessary since GEF contains some errors regarding the hit subject.     *     * @see org.tigris.gef.presentation.Fig#hit(Rectangle)     */	WITHOUT_CLASSIFICATION	0.9999990094480649	WITHOUT_CLASSIFICATION	9.90551935181113E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#removeFromDiagram()     */	WITHOUT_CLASSIFICATION	0.9999997970000318	WITHOUT_CLASSIFICATION	2.0299996811709505E-7	DEFECT
/*     * @see org.tigris.gef.presentation.FigNode#isDragConnectable()     */	WITHOUT_CLASSIFICATION	0.9999998811951684	WITHOUT_CLASSIFICATION	1.1880483170536107E-7	DEFECT
/*     * Need to 'arm' the rerouting capability with mouseDragged().     * <p>     * Don't arm if the edtior's current mode is a figedge create mode,     * because once a new edge has been created it is not deselected,     * therefore on the next create an unwanted reroute is performed.     *     * @see java.awt.event.MouseMotionListener#mouseDragged(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998081864874	WITHOUT_CLASSIFICATION	1.9181351272045002E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999340694784	WITHOUT_CLASSIFICATION	6.593052162592007E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getFillColor()     */	WITHOUT_CLASSIFICATION	0.9999997773950514	WITHOUT_CLASSIFICATION	2.2260494867696943E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFilled(boolean)     */	WITHOUT_CLASSIFICATION	0.9999999938877093	WITHOUT_CLASSIFICATION	6.112290659976866E-9	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineWidth(int)     */	WITHOUT_CLASSIFICATION	0.9999999204487886	WITHOUT_CLASSIFICATION	7.955121132515802E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineWidth()     */	WITHOUT_CLASSIFICATION	0.9999998405845854	WITHOUT_CLASSIFICATION	1.5941541474846165E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getMinimumSize()     */	WITHOUT_CLASSIFICATION	0.9999999327190773	WITHOUT_CLASSIFICATION	6.728092273203155E-8	DEFECT
/*     * Override setBounds to keep shapes looking right.     * @see org.tigris.gef.presentation.Fig#setBounds(int, int, int, int)     */	WITHOUT_CLASSIFICATION	0.9999998954492202	WITHOUT_CLASSIFICATION	1.0455077973527419E-7	DEFECT
/*     * @see org.tigris.gef.base.Command#execute()     */	WITHOUT_CLASSIFICATION	0.999999986213231	WITHOUT_CLASSIFICATION	1.3786768912701408E-8	DEFECT
/*     * @see org.tigris.gef.graph.GraphFactory#makeGraphModel()     */	WITHOUT_CLASSIFICATION	0.9999998730367856	WITHOUT_CLASSIFICATION	1.2696321439952692E-7	DEFECT
/*     * @see org.tigris.gef.graph.GraphFactory#makeEdge()     */	WITHOUT_CLASSIFICATION	0.9999998165938354	WITHOUT_CLASSIFICATION	1.8340616445307118E-7	DEFECT
/*     * @see org.tigris.gef.graph.GraphFactory#makeNode()     */	WITHOUT_CLASSIFICATION	0.9999998303655369	WITHOUT_CLASSIFICATION	1.6963446317684725E-7	DEFECT
/*     * @see org.tigris.gef.base.SelectionButtons#paint(java.awt.Graphics)     */	WITHOUT_CLASSIFICATION	0.9999999942664107	WITHOUT_CLASSIFICATION	5.733589285858448E-9	DEFECT
/*     * @see org.tigris.gef.base.SelectionButtons#paintButtons(Graphics)     */	WITHOUT_CLASSIFICATION	0.9999999942272726	WITHOUT_CLASSIFICATION	5.772727384731376E-9	DEFECT
/*     * @see org.tigris.gef.base.SelectionButtons#getNewNode(int)     */	WITHOUT_CLASSIFICATION	0.9999999849985551	WITHOUT_CLASSIFICATION	1.5001444870450082E-8	DEFECT
/*     * @see org.tigris.gef.base.Selection#dragHandle(int, int, int, int,     * org.tigris.gef.presentation.Handle)     */	WITHOUT_CLASSIFICATION	0.9999999861661686	WITHOUT_CLASSIFICATION	1.3833831412872174E-8	DEFECT
/*     * @see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999999368964285	WITHOUT_CLASSIFICATION	6.310357143005751E-8	DEFECT
/*     * @see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.999999926677169	WITHOUT_CLASSIFICATION	7.332283094417994E-8	DEFECT
/*     * @see java.lang.Object#clone()     */	WITHOUT_CLASSIFICATION	0.9999990042201411	WITHOUT_CLASSIFICATION	9.957798589067173E-7	DEFECT
/*     * Makes sure that the edges stick to the outline of the fig.     * @see org.tigris.gef.presentation.Fig#getGravityPoints()     */	WITHOUT_CLASSIFICATION	0.9999999994717333	WITHOUT_CLASSIFICATION	5.282666144983313E-10	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999455836559	WITHOUT_CLASSIFICATION	5.44163440595605E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineColor()     */	WITHOUT_CLASSIFICATION	0.9999998290030105	WITHOUT_CLASSIFICATION	1.7099698950311398E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)     */	WITHOUT_CLASSIFICATION	0.9999999340694784	WITHOUT_CLASSIFICATION	6.593052162592007E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getFillColor()     */	WITHOUT_CLASSIFICATION	0.9999997773950514	WITHOUT_CLASSIFICATION	2.2260494867696943E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setFilled(boolean)     */	WITHOUT_CLASSIFICATION	0.9999999938877093	WITHOUT_CLASSIFICATION	6.112290659976866E-9	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLineWidth(int)     */	WITHOUT_CLASSIFICATION	0.9999999204487886	WITHOUT_CLASSIFICATION	7.955121132515802E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#getLineWidth()     */	WITHOUT_CLASSIFICATION	0.9999998405845854	WITHOUT_CLASSIFICATION	1.5941541474846165E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#damage()     */	WITHOUT_CLASSIFICATION	0.9999999187244005	WITHOUT_CLASSIFICATION	8.127559954349703E-8	DEFECT
/*     * @see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998995536239	WITHOUT_CLASSIFICATION	1.0044637608451965E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999999368964285	WITHOUT_CLASSIFICATION	6.310357143005751E-8	DEFECT
/*     * @see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998951464171	WITHOUT_CLASSIFICATION	1.0485358285635044E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.999999926677169	WITHOUT_CLASSIFICATION	7.332283094417994E-8	DEFECT
/*     * If the user double clicks on any part of this FigNode, pass it     * down to one of the internal Figs.  This allows the user to     * initiate direct text editing.     *     * @see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998897494554	WITHOUT_CLASSIFICATION	1.1025054451988145E-7	DEFECT
/*     * @see java.awt.event.KeyListener#keyPressed(java.awt.event.KeyEvent)     */	WITHOUT_CLASSIFICATION	0.9999994261205447	WITHOUT_CLASSIFICATION	5.738794552686744E-7	DEFECT
/*     * @see java.awt.event.KeyListener#keyReleased(java.awt.event.KeyEvent)     */	WITHOUT_CLASSIFICATION	0.9999994804730685	WITHOUT_CLASSIFICATION	5.195269314467668E-7	DEFECT
/*     * @see java.awt.event.KeyListener#keyTyped(java.awt.event.KeyEvent)     */	WITHOUT_CLASSIFICATION	0.9999985352913213	WITHOUT_CLASSIFICATION	1.4647086786958279E-6	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#setLayer(org.tigris.gef.base.Layer)     */	WITHOUT_CLASSIFICATION	0.9999998856676492	WITHOUT_CLASSIFICATION	1.1433235089156081E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#deleteFromModel()     */	WITHOUT_CLASSIFICATION	0.9999999542809248	WITHOUT_CLASSIFICATION	4.571907522494501E-8	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#hit(java.awt.Rectangle)     */	WITHOUT_CLASSIFICATION	0.9999998792807766	WITHOUT_CLASSIFICATION	1.207192233078285E-7	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#removeFromDiagram()     */	WITHOUT_CLASSIFICATION	0.9999997970000318	WITHOUT_CLASSIFICATION	2.0299996811709505E-7	DEFECT
/*     * Makes sure that the edges stick to the outline of the fig.     * @see org.tigris.gef.presentation.Fig#getGravityPoints()     */	WITHOUT_CLASSIFICATION	0.9999999994717333	WITHOUT_CLASSIFICATION	5.282666144983313E-10	DEFECT
/*     * @see org.tigris.gef.presentation.Fig#paint(java.awt.Graphics)     */	WITHOUT_CLASSIFICATION	0.9999999775150291	WITHOUT_CLASSIFICATION	2.2484970833289784E-8	DEFECT
/*             * @see             * java.awt.event.ActionListener#actionPerformed(java.awt.event.             * ActionEvent)             */	WITHOUT_CLASSIFICATION	0.9999999089389446	WITHOUT_CLASSIFICATION	9.106105546277961E-8	DEFECT
/*             * @see             * java.awt.event.ActionListener#actionPerformed(java.awt.event.             * ActionEvent)             */	WITHOUT_CLASSIFICATION	0.9999999089389446	WITHOUT_CLASSIFICATION	9.106105546277961E-8	DEFECT
/*             * @see             * java.awt.event.ActionListener#actionPerformed(java.awt.event.             * ActionEvent)             */	WITHOUT_CLASSIFICATION	0.9999999089389446	WITHOUT_CLASSIFICATION	9.106105546277961E-8	DEFECT
/*     * @see org.tigris.swidgets.Dialog#nameButtons()     */	WITHOUT_CLASSIFICATION	0.9999998545402142	WITHOUT_CLASSIFICATION	1.4545978567876214E-7	DEFECT
/*     * @see     * java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.9999998793492648	WITHOUT_CLASSIFICATION	1.2065073512805985E-7	DEFECT
/*         * @see javax.swing.table.TableModel#getColumnCount()         */	WITHOUT_CLASSIFICATION	0.9999999771675131	WITHOUT_CLASSIFICATION	2.2832486896250596E-8	DEFECT
/*         * @see javax.swing.table.TableModel#getColumnName(int)         */	WITHOUT_CLASSIFICATION	0.9999999598532113	WITHOUT_CLASSIFICATION	4.014678861954184E-8	DEFECT
/*         * @see javax.swing.table.TableModel#getColumnClass(int)         */	WITHOUT_CLASSIFICATION	0.999999978242514	WITHOUT_CLASSIFICATION	2.1757486121843807E-8	DEFECT
/*         * @see javax.swing.table.TableModel#isCellEditable(int, int)         */	WITHOUT_CLASSIFICATION	0.9999977924878141	WITHOUT_CLASSIFICATION	2.2075121858776927E-6	DEFECT
/*         * @see javax.swing.table.TableModel#getRowCount()         */	WITHOUT_CLASSIFICATION	0.9999999315402422	WITHOUT_CLASSIFICATION	6.845975775898109E-8	DEFECT
/*         * @see javax.swing.table.TableModel#getValueAt(int, int)         */	WITHOUT_CLASSIFICATION	0.999999478015774	WITHOUT_CLASSIFICATION	5.21984226056784E-7	DEFECT
/*         * @see javax.swing.table.TableModel#setValueAt( java.lang.Object, int,         * int)         */	WITHOUT_CLASSIFICATION	0.9999988893998996	WITHOUT_CLASSIFICATION	1.1106001004988505E-6	DEFECT
/*     * @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994577075367	WITHOUT_CLASSIFICATION	5.422924631974628E-7	DEFECT
/*     * @see javax.swing.Action#isEnabled()     */	WITHOUT_CLASSIFICATION	0.9999997926618378	WITHOUT_CLASSIFICATION	2.0733816223854664E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see javax.swing.ListModel#getElementAt(int)     */	WITHOUT_CLASSIFICATION	0.9999984246911686	WITHOUT_CLASSIFICATION	1.575308831359761E-6	DEFECT
/*     * @see javax.swing.ListModel#getSize()     */	WITHOUT_CLASSIFICATION	0.9999988090519235	WITHOUT_CLASSIFICATION	1.1909480765454268E-6	DEFECT
/*     * @see javax.swing.ComboBoxModel#setSelectedItem(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999997056466392	WITHOUT_CLASSIFICATION	2.9435336084268396E-7	DEFECT
/*     * @see javax.swing.ComboBoxModel#getSelectedItem()     */	WITHOUT_CLASSIFICATION	0.9999997918748412	WITHOUT_CLASSIFICATION	2.081251587840593E-7	DEFECT
/*     * @see javax.swing.AbstractListModel#fireContentsChanged(     *          Object, int, int)     */	WITHOUT_CLASSIFICATION	0.9999998861949377	WITHOUT_CLASSIFICATION	1.1380506222868319E-7	DEFECT
/*     * @see javax.swing.AbstractListModel#fireIntervalAdded(     *          Object, int, int)     */	WITHOUT_CLASSIFICATION	0.9999998911315762	WITHOUT_CLASSIFICATION	1.0886842377495895E-7	DEFECT
/*     * @see TargetListener#targetSet(TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999989783248618	WITHOUT_CLASSIFICATION	1.0216751381457237E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999998033355179	WITHOUT_CLASSIFICATION	1.9666448221963214E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * The property value has changed so rebuild our view.     * @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999999822531742	WITHOUT_CLASSIFICATION	1.7746825841891124E-8	DEFECT
/*     * @see TargetListener#targetAdded(TargetEvent)     */	WITHOUT_CLASSIFICATION	0.999999654492659	WITHOUT_CLASSIFICATION	3.455073409936275E-7	DEFECT
/*     * @see TargetListener#targetRemoved(TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999990515888479	WITHOUT_CLASSIFICATION	9.484111520202286E-7	DEFECT
/*     * @see TargetListener#targetSet(TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999989783248618	WITHOUT_CLASSIFICATION	1.0216751381457237E-6	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see javax.swing.Action#isEnabled()     */	WITHOUT_CLASSIFICATION	0.9999997926618378	WITHOUT_CLASSIFICATION	2.0733816223854664E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mouseClicked(     *          java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998328332633	WITHOUT_CLASSIFICATION	1.6716673667491564E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998951464171	WITHOUT_CLASSIFICATION	1.0485358285635044E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.999999926677169	WITHOUT_CLASSIFICATION	7.332283094417994E-8	DEFECT
/*     * @see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999998995536239	WITHOUT_CLASSIFICATION	1.0044637608451965E-7	DEFECT
/*     * @see java.awt.event.MouseListener#mouseReleased(     *          java.awt.event.MouseEvent)     */	WITHOUT_CLASSIFICATION	0.9999999359141847	WITHOUT_CLASSIFICATION	6.408581536444846E-8	DEFECT
/*     * @see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999999678751464	WITHOUT_CLASSIFICATION	3.2124853621143575E-8	DEFECT
/*     * @see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999997746694292	WITHOUT_CLASSIFICATION	2.2533057064832407E-7	DEFECT
/*     * @see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999994446406183	WITHOUT_CLASSIFICATION	5.553593817324716E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see javax.swing.event.CaretListener#caretUpdate(javax.swing.event.CaretEvent)     */	WITHOUT_CLASSIFICATION	0.9999997504671473	WITHOUT_CLASSIFICATION	2.495328527092827E-7	DEFECT
/*     * @see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)     */	WITHOUT_CLASSIFICATION	0.9999998903089655	WITHOUT_CLASSIFICATION	1.0969103444235637E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(ActionEvent)     */	WITHOUT_CLASSIFICATION	0.99999990289454	WITHOUT_CLASSIFICATION	9.710546005135863E-8	DEFECT
/*     * @see javax.swing.ListCellRenderer#getListCellRendererComponent(     * javax.swing.JList, java.lang.Object, int, boolean, boolean)     */	WITHOUT_CLASSIFICATION	0.9999996876923601	WITHOUT_CLASSIFICATION	3.1230763979203767E-7	DEFECT
/*     * @see javax.swing.text.Document#getDefaultRootElement()     */	WITHOUT_CLASSIFICATION	0.9999999307823412	WITHOUT_CLASSIFICATION	6.92176588737583E-8	DEFECT
/*     * @see javax.swing.text.Document#getLength()     */	WITHOUT_CLASSIFICATION	0.9999995845706621	WITHOUT_CLASSIFICATION	4.154293379328432E-7	DEFECT
/*     * @see javax.swing.text.Document#render(Runnable r)     */	WITHOUT_CLASSIFICATION	0.9999994342877626	WITHOUT_CLASSIFICATION	5.657122372586865E-7	DEFECT
/*     * @see javax.swing.text.Document#getText(int, int)     */	WITHOUT_CLASSIFICATION	0.9999995767818181	WITHOUT_CLASSIFICATION	4.232181819639855E-7	DEFECT
/*     * @see javax.swing.ListCellRenderer#getListCellRendererComponent(javax.swing.JList,     *      java.lang.Object, int, boolean, boolean)     */	WITHOUT_CLASSIFICATION	0.9999996021414018	WITHOUT_CLASSIFICATION	3.978585981272459E-7	DEFECT
/*         * @see java.awt.event.ActionListener#actionPerformed(         *         java.awt.event.ActionEvent)         */	WITHOUT_CLASSIFICATION	0.9999999066328071	WITHOUT_CLASSIFICATION	9.336719285167458E-8	DEFECT
/*         * @see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)         */	WITHOUT_CLASSIFICATION	0.9999999040973686	WITHOUT_CLASSIFICATION	9.590263132237114E-8	DEFECT
/*         * @see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)         */	WITHOUT_CLASSIFICATION	0.9999999040973686	WITHOUT_CLASSIFICATION	9.590263132237114E-8	DEFECT
/*         * @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)         */	WITHOUT_CLASSIFICATION	0.9999994577075367	WITHOUT_CLASSIFICATION	5.422924631974628E-7	DEFECT
/*             * @see java.lang.Runnable#run()             */	WITHOUT_CLASSIFICATION	0.9999977807464051	WITHOUT_CLASSIFICATION	2.2192535948478568E-6	DEFECT
/*     * @see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999997746694292	WITHOUT_CLASSIFICATION	2.2533057064832407E-7	DEFECT
/*     * @see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)     */	WITHOUT_CLASSIFICATION	0.9999994446406183	WITHOUT_CLASSIFICATION	5.553593817324716E-7	DEFECT
/*     * @see javax.swing.table.TableModel#isCellEditable(int, int)     */	WITHOUT_CLASSIFICATION	0.9999977924878141	WITHOUT_CLASSIFICATION	2.2075121858776927E-6	DEFECT
/*     * @see javax.swing.table.TableModel#getRowCount()     */	WITHOUT_CLASSIFICATION	0.9999999315402422	WITHOUT_CLASSIFICATION	6.845975775898109E-8	DEFECT
/*     * @see javax.swing.table.TableModel#getValueAt(int, int)     */	WITHOUT_CLASSIFICATION	0.999999478015774	WITHOUT_CLASSIFICATION	5.21984226056784E-7	DEFECT
/*     * @see javax.swing.table.TableModel#setValueAt(java.lang.Object, int, int)     */	WITHOUT_CLASSIFICATION	0.9999988680115955	WITHOUT_CLASSIFICATION	1.1319884044294357E-6	DEFECT
/*     * @see java.beans.PropertyChangeListener#propertyChange(java.beans.     * PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999993008704798	WITHOUT_CLASSIFICATION	6.991295200892231E-7	DEFECT
/*     * @see java.beans.VetoableChangeListener#vetoableChange(java.beans.     * PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999993726718613	WITHOUT_CLASSIFICATION	6.273281387227155E-7	DEFECT
/*     * @see     * org.argouml.kernel.DelayedVChangeListener#delayedVetoableChange(java.     * beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999998069082069	WITHOUT_CLASSIFICATION	1.9309179306551642E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(ActionEvent)     */	WITHOUT_CLASSIFICATION	0.99999990289454	WITHOUT_CLASSIFICATION	9.710546005135863E-8	DEFECT
/*     * @see javax.swing.AbstractListModel#fireIntervalAdded(     *          Object, int, int)     */	WITHOUT_CLASSIFICATION	0.9999998911315762	WITHOUT_CLASSIFICATION	1.0886842377495895E-7	DEFECT
/*     * @see javax.swing.AbstractListModel#fireIntervalRemoved(     *          Object, int, int)     */	WITHOUT_CLASSIFICATION	0.9999998252345678	WITHOUT_CLASSIFICATION	1.7476543225158493E-7	DEFECT
/*     * @see AbstractAction#actionPerformed(ActionEvent)     */	WITHOUT_CLASSIFICATION	0.9999999670273163	WITHOUT_CLASSIFICATION	3.2972683721522055E-8	DEFECT
/*     * @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)     */	WITHOUT_CLASSIFICATION	0.9999994577075367	WITHOUT_CLASSIFICATION	5.422924631974628E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see org.tigris.swidgets.Orientable#setOrientation(org.tigris.swidgets.Orientation)     */	WITHOUT_CLASSIFICATION	0.9999999278012821	WITHOUT_CLASSIFICATION	7.219871796395384E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see javax.swing.DefaultListModel#contains(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999991176515372	WITHOUT_CLASSIFICATION	8.823484628265479E-7	DEFECT
/*     * @see javax.swing.DefaultListModel#addElement(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999986947564112	WITHOUT_CLASSIFICATION	1.3052435888098304E-6	DEFECT
/*     * @see TargetListener#targetAdded(TargetEvent)     */	WITHOUT_CLASSIFICATION	0.999999654492659	WITHOUT_CLASSIFICATION	3.455073409936275E-7	DEFECT
/*     * @see TargetListener#targetRemoved(TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999990515888479	WITHOUT_CLASSIFICATION	9.484111520202286E-7	DEFECT
/*     * @see TargetListener#targetSet(TargetEvent)     */	WITHOUT_CLASSIFICATION	0.9999989783248618	WITHOUT_CLASSIFICATION	1.0216751381457237E-6	DEFECT
/*     * @see javax.swing.AbstractListModel#fireContentsChanged(     *          Object, int, int)     */	WITHOUT_CLASSIFICATION	0.9999998861949377	WITHOUT_CLASSIFICATION	1.1380506222868319E-7	DEFECT
/*     * @see javax.swing.AbstractListModel#fireIntervalAdded(     *          Object, int, int)     */	WITHOUT_CLASSIFICATION	0.9999998911315762	WITHOUT_CLASSIFICATION	1.0886842377495895E-7	DEFECT
/*     * @see javax.swing.AbstractListModel#fireIntervalRemoved(     *          Object, int, int)     */	WITHOUT_CLASSIFICATION	0.9999998252345678	WITHOUT_CLASSIFICATION	1.7476543225158493E-7	DEFECT
/*     * @see javax.swing.tree.TreeCellRenderer#getTreeCellRendererComponent(     *      javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int,     *      boolean)     */	WITHOUT_CLASSIFICATION	0.999999891130374	WITHOUT_CLASSIFICATION	1.0886962610166299E-7	DEFECT
/*     * @see java.awt.event.FocusListener#focusLost(java.awt.event.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999997976323846	WITHOUT_CLASSIFICATION	2.023676154773576E-7	DEFECT
/*     * @see javax.swing.event.CaretListener#caretUpdate(javax.swing.event.CaretEvent)     */	WITHOUT_CLASSIFICATION	0.9999997504671473	WITHOUT_CLASSIFICATION	2.495328527092827E-7	DEFECT
/*     * @see java.awt.event.FocusListener#focusGained(java.awt.event.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999999269504332	WITHOUT_CLASSIFICATION	7.30495668081183E-8	DEFECT
/*     * @see     * java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.9999998793492648	WITHOUT_CLASSIFICATION	1.2065073512805985E-7	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(     *      java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.9999999066328071	WITHOUT_CLASSIFICATION	9.336719285167458E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999998033355179	WITHOUT_CLASSIFICATION	1.9666448221963214E-7	DEFECT
/*     * @see javax.swing.filechooser.FileFilter#accept(java.io.File)     */	WITHOUT_CLASSIFICATION	0.9999998581995245	WITHOUT_CLASSIFICATION	1.4180047546717418E-7	DEFECT
/*     * @see javax.swing.filechooser.FileFilter#getDescription()     */	WITHOUT_CLASSIFICATION	0.999999976438973	WITHOUT_CLASSIFICATION	2.3561027056754622E-8	DEFECT
/*         * @see java.beans.PropertyChangeListener#propertyChange(         *         java.beans.PropertyChangeEvent)         */	WITHOUT_CLASSIFICATION	0.9999994550718594	WITHOUT_CLASSIFICATION	5.44928140591602E-7	DEFECT
/*         * @see java.util.Enumeration#hasMoreElements()         */	WITHOUT_CLASSIFICATION	0.9999999048617111	WITHOUT_CLASSIFICATION	9.513828890920785E-8	DEFECT
/*         * @see java.util.Enumeration#nextElement()         */	WITHOUT_CLASSIFICATION	0.9999998612692034	WITHOUT_CLASSIFICATION	1.387307967013632E-7	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*         * @see PropertyChangeListener#propertyChange(PropertyChangeEvent)         */	WITHOUT_CLASSIFICATION	0.9999981075232655	WITHOUT_CLASSIFICATION	1.8924767344632342E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#tearDown()     */	WITHOUT_CLASSIFICATION	0.999996129660319	WITHOUT_CLASSIFICATION	3.8703396809925125E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see TestCase#tearDown()     */	WITHOUT_CLASSIFICATION	0.9999980006292013	WITHOUT_CLASSIFICATION	1.9993707985886032E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*      * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * Here we are actually violating the test independance since we keep     * the DetailsPane from test to test. The reason to do this is to make     * it possible to run the tests with less memory requirements.     *     * Hopefully someone might eventually fix the DetailsPane so that it is     * garbage collected properly and this is no longer needed.     *     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999829640176567	WITHOUT_CLASSIFICATION	1.7035982343281232E-5	DEFECT
/*     * @see junit.framework.TestCase#runTest()     */	WITHOUT_CLASSIFICATION	0.9999978234512277	WITHOUT_CLASSIFICATION	2.176548772298195E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*	WITHOUT_CLASSIFICATION	0.9917225237718192	WITHOUT_CLASSIFICATION	0.008277476228180789	DEFECT
/*	WITHOUT_CLASSIFICATION	0.9917225237718192	WITHOUT_CLASSIFICATION	0.008277476228180789	DEFECT
/*	WITHOUT_CLASSIFICATION	0.9917225237718192	WITHOUT_CLASSIFICATION	0.008277476228180789	DEFECT
/*	WITHOUT_CLASSIFICATION	0.9917225237718192	WITHOUT_CLASSIFICATION	0.008277476228180789	DEFECT
/*	WITHOUT_CLASSIFICATION	0.9917225237718192	WITHOUT_CLASSIFICATION	0.008277476228180789	DEFECT
/*	WITHOUT_CLASSIFICATION	0.9917225237718192	WITHOUT_CLASSIFICATION	0.008277476228180789	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#tearDown()     */	WITHOUT_CLASSIFICATION	0.999996129660319	WITHOUT_CLASSIFICATION	3.8703396809925125E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see AbstractTestActionAddDiagram#getValidNamespaceClasses()     */	WITHOUT_CLASSIFICATION	0.9999999320826731	WITHOUT_CLASSIFICATION	6.791732680891246E-8	DEFECT
/*     * @see AbstractTestActionAddDiagram#getValidNamespaceClasses()     */	WITHOUT_CLASSIFICATION	0.9999999320826731	WITHOUT_CLASSIFICATION	6.791732680891246E-8	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see AbstractTestActionAddDiagram#getValidNamespaceClasses()     */	WITHOUT_CLASSIFICATION	0.9999999320826731	WITHOUT_CLASSIFICATION	6.791732680891246E-8	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#tearDown()     */	WITHOUT_CLASSIFICATION	0.999996129660319	WITHOUT_CLASSIFICATION	3.8703396809925125E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#tearDown()     */	WITHOUT_CLASSIFICATION	0.999996129660319	WITHOUT_CLASSIFICATION	3.8703396809925125E-6	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
/*     * @see junit.framework.TestCase#tearDown()     */	WITHOUT_CLASSIFICATION	0.999996129660319	WITHOUT_CLASSIFICATION	3.8703396809925125E-6	DEFECT
/*     * @see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999723115442	WITHOUT_CLASSIFICATION	2.7688455745238535E-8	DEFECT
/*     * @see org.tigris.gef.graph.MutableGraphModel#addNode(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999752592347	WITHOUT_CLASSIFICATION	2.474076534757138E-8	DEFECT
/*     * @see org.tigris.gef.graph.MutableGraphModel#addEdge(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999999660203298	WITHOUT_CLASSIFICATION	3.397967016996562E-8	DEFECT
/*     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */	WITHOUT_CLASSIFICATION	0.999999908063847	WITHOUT_CLASSIFICATION	9.193615299232474E-8	DEFECT
/*     * This method is overridden in order to ignore change of the y coordinate     * during dragging.     *     * @see org.tigris.gef.presentation.FigNode#superTranslate(int, int)     */	WITHOUT_CLASSIFICATION	0.9999999997312137	WITHOUT_CLASSIFICATION	2.687863862534738E-10	DEFECT
/*     * @see org.tigris.gef.graph.GraphFactory#makeNode()     */	WITHOUT_CLASSIFICATION	0.9999998303655369	WITHOUT_CLASSIFICATION	1.6963446317684725E-7	DEFECT
/*     * @see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor(     *         org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer,     *         java.lang.Object, java.util.Map)     */	WITHOUT_CLASSIFICATION	0.9999997180737816	WITHOUT_CLASSIFICATION	2.819262182920371E-7	DEFECT
/*     * @see org.tigris.gef.graph.GraphEdgeRenderer#getFigEdgeFor(     *         org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer,     *         java.lang.Object, java.util.Map)     */	WITHOUT_CLASSIFICATION	0.9999996356788252	WITHOUT_CLASSIFICATION	3.643211747636361E-7	DEFECT
/*     * @see junit.framework.TestCase#setUp()     */	WITHOUT_CLASSIFICATION	0.9999987529435724	WITHOUT_CLASSIFICATION	1.247056427655494E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999998033355179	WITHOUT_CLASSIFICATION	1.9666448221963214E-7	DEFECT
//////////////////////////////////////////////////////////////// // accessors	WITHOUT_CLASSIFICATION	0.99999900930865	WITHOUT_CLASSIFICATION	9.906913499891305E-7	DEFECT
/* do nothing */	WITHOUT_CLASSIFICATION	0.9999729298088619	WITHOUT_CLASSIFICATION	2.7070191138062365E-5	DEFECT
/* do nothing */	WITHOUT_CLASSIFICATION	0.9999729298088619	WITHOUT_CLASSIFICATION	2.7070191138062365E-5	DEFECT
// Although not generally true for GEF, for Argo we know that the layer // is a LayerPerspective which knows the associated diagram	WITHOUT_CLASSIFICATION	0.9952751636767379	WITHOUT_CLASSIFICATION	0.004724836323262116	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999748478784519	WITHOUT_CLASSIFICATION	2.5152121548066763E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999996210616915	WITHOUT_CLASSIFICATION	3.7893830849916885E-6	DEFECT
/* end class StartCritics */	WITHOUT_CLASSIFICATION	0.9999589813318623	WITHOUT_CLASSIFICATION	4.101866813776499E-5	DEFECT
// initialized in static initializer block below	WITHOUT_CLASSIFICATION	0.9999998774397906	WITHOUT_CLASSIFICATION	1.2256020932283673E-7	DEFECT
// Needs to happen after initialization is done & modules loaded	WITHOUT_CLASSIFICATION	0.9999998743526457	WITHOUT_CLASSIFICATION	1.2564735421697435E-7	DEFECT
// create an anonymous class as a kind of adaptor for the cognitive // System to provide proper translation/i18n.	WITHOUT_CLASSIFICATION	0.999999240574144	WITHOUT_CLASSIFICATION	7.594258558891952E-7	DEFECT
// The reason the gui is initialized before the commands are run // is that some of the commands will use the projectbrowser.	WITHOUT_CLASSIFICATION	0.9999991388969665	WITHOUT_CLASSIFICATION	8.611030335362995E-7	DEFECT
/*         * Initialize the module loader. At least the plug-ins that provide         * profiles need to be initialized before the project is loaded,         * because some of these profile may have been set as default         * profiles and need to be applied to the project as soon as it has         * been created or loaded. The first instance of a Project is needed         * during the GUI initialization.         */	WITHOUT_CLASSIFICATION	0.9999998439121207	WITHOUT_CLASSIFICATION	1.5608787935123277E-7	DEFECT
/*         *  The string <code>log4j.configuration</code> is the         *  same string found in         *  {@link org.apache.log4j.Configuration.DEFAULT_CONFIGURATION_FILE}         *  but if we use the reference, then log4j configures itself         *  and clears the system property and we never know if it was         *  set.         *         *  If it is set, then we let the static initializer in         * {@link Argo} perform the initialization.         */	WITHOUT_CLASSIFICATION	0.9999996671471113	WITHOUT_CLASSIFICATION	3.3285288871991354E-7	DEFECT
/** * A subclass of JPanel that can act as a tab in the DetailsPane or * MultiEditorPane. Added functionality:<p> * * Spawning: When the tab is double-clicked, this JPanel will generate a * separate window of the same size and with the same contents. This is almost * like "tearing off" a tab.<p> * * TODO: Spawning of windows disabled in spawn()<p> * * Title: This JPanel keeps track of its own title.<p> * * Icon: This JPanel keeps track of its own icon; i.e. an arrow pointing to * the panel that it gives details of.<p> * * Orientation: This JPanel is Orientable.<p> * * Cloning: This JPanel may be cloned.<p> * * This class used to be named TabSpawnable. * Renamed since it is not a Tab, but a Panel, and being spawnable is * not any more its main purpose. */	WITHOUT_CLASSIFICATION	0.9800579657343648	DEFECT	0.01994203426563529	WITHOUT_CLASSIFICATION
//////////////////////////////////////////////////////////////// // accessors	WITHOUT_CLASSIFICATION	0.99999900930865	WITHOUT_CLASSIFICATION	9.906913499891305E-7	DEFECT
//////////////////////////////////////////////////////////////// // accessors	WITHOUT_CLASSIFICATION	0.99999900930865	WITHOUT_CLASSIFICATION	9.906913499891305E-7	DEFECT
//////////////////////////////////////////////////////////////// // accessors	WITHOUT_CLASSIFICATION	0.99999900930865	WITHOUT_CLASSIFICATION	9.906913499891305E-7	DEFECT
//////////////////////////////////////////////////////////////// // accessors	WITHOUT_CLASSIFICATION	0.99999900930865	WITHOUT_CLASSIFICATION	9.906913499891305E-7	DEFECT
/* do nothing */	WITHOUT_CLASSIFICATION	0.9999729298088619	WITHOUT_CLASSIFICATION	2.7070191138062365E-5	DEFECT
/* do nothing */	WITHOUT_CLASSIFICATION	0.9999729298088619	WITHOUT_CLASSIFICATION	2.7070191138062365E-5	DEFECT
// Notation events are likely to cause GEF/Swing operations, so we // dispatch them on the Swing event thread as a convenience so that // the receiving notationChanged() methods don't need to deal with it	WITHOUT_CLASSIFICATION	0.9999999585623807	WITHOUT_CLASSIFICATION	4.143761937160408E-8	DEFECT
/**     * @param item the todo item     * @param reason the reason TODO: Use it!     * @return <code>true</code> if the argument was a component of this list;     *         <code>false</code> otherwise     * @throws UnresolvableException unable to resolve     */	WITHOUT_CLASSIFICATION	0.9876406281643684	WITHOUT_CLASSIFICATION	0.012359371835631705	DEFECT
// Process the listeners last to first, notifying // those that are interested in this event	WITHOUT_CLASSIFICATION	0.9999999594702297	WITHOUT_CLASSIFICATION	4.052977032330427E-8	DEFECT
// Process the listeners last to first, notifying // those that are interested in this event	WITHOUT_CLASSIFICATION	0.9999999594702297	WITHOUT_CLASSIFICATION	4.052977032330427E-8	DEFECT
// Process the listeners last to first, notifying // those that are interested in this event	WITHOUT_CLASSIFICATION	0.9999999594702297	WITHOUT_CLASSIFICATION	4.052977032330427E-8	DEFECT
// Process the listeners last to first, notifying // those that are interested in this event	WITHOUT_CLASSIFICATION	0.9999999594702297	WITHOUT_CLASSIFICATION	4.052977032330427E-8	DEFECT
//////////////////////////////////////////////////////////////// // issue resolution	WITHOUT_CLASSIFICATION	0.9999929535580133	WITHOUT_CLASSIFICATION	7.046441986643987E-6	DEFECT
// Lazily create the event:	WITHOUT_CLASSIFICATION	0.9999995009738529	WITHOUT_CLASSIFICATION	4.99026147136317E-7	DEFECT
// Lazily create the event:	WITHOUT_CLASSIFICATION	0.9999995009738529	WITHOUT_CLASSIFICATION	4.99026147136317E-7	DEFECT
// Lazily create the event:	WITHOUT_CLASSIFICATION	0.9999995009738529	WITHOUT_CLASSIFICATION	4.99026147136317E-7	DEFECT
//////////////////////////////////////////////////////////////// // constants	WITHOUT_CLASSIFICATION	0.9999985290529746	WITHOUT_CLASSIFICATION	1.4709470253565026E-6	DEFECT
//////////////////////////////////////////////////////////////// // constants	WITHOUT_CLASSIFICATION	0.9999985290529746	WITHOUT_CLASSIFICATION	1.4709470253565026E-6	DEFECT
//////////////////////////////////////////////////////////////// // static accessors	WITHOUT_CLASSIFICATION	0.99999971657178	WITHOUT_CLASSIFICATION	2.8342822008712596E-7	DEFECT
// Set the tooltip string:	WITHOUT_CLASSIFICATION	0.9999975428806999	WITHOUT_CLASSIFICATION	2.457119300140555E-6	DEFECT
/*     * @see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)     */	WITHOUT_CLASSIFICATION	0.9999994289580846	WITHOUT_CLASSIFICATION	5.710419155044498E-7	DEFECT
// This needs to iterate to fill entire output raster if implemented //        return image.copyData(outRaster);	WITHOUT_CLASSIFICATION	0.9999998876982735	WITHOUT_CLASSIFICATION	1.1230172635994876E-7	DEFECT
// Catch all exceptions and errors, however severe	WITHOUT_CLASSIFICATION	0.9999564416238907	WITHOUT_CLASSIFICATION	4.3558376109296456E-5	DEFECT
// Notify the user that the modules in the list that are selected // but not enabled were not possible to enable and that are not // selected that we cannot disable. // // Currently we just log this. // // TODO: We could eventually pop up some warning window. //	WITHOUT_CLASSIFICATION	0.6337900389796656	DEFECT	0.36620996102033443	WITHOUT_CLASSIFICATION
// if we have only one return value and without type, // the return param string is ": ,", we remove it	WITHOUT_CLASSIFICATION	0.9999659822104655	WITHOUT_CLASSIFICATION	3.401778953441859E-5	DEFECT
/* If the script of the Action is empty,             * (or only specifies arguments and no method name)             * then we generate a string based on             * a different model element: */	WITHOUT_CLASSIFICATION	0.9999998757736971	WITHOUT_CLASSIFICATION	1.242263028293329E-7	DEFECT
/* MMessage */	WITHOUT_CLASSIFICATION	0.9999900987950188	WITHOUT_CLASSIFICATION	9.901204981207481E-6	DEFECT
/* MMessage */	WITHOUT_CLASSIFICATION	0.9999900987950188	WITHOUT_CLASSIFICATION	9.901204981207481E-6	DEFECT
/* MMessage */	WITHOUT_CLASSIFICATION	0.9999900987950188	WITHOUT_CLASSIFICATION	9.901204981207481E-6	DEFECT
/* MMessage */	WITHOUT_CLASSIFICATION	0.9999900987950188	WITHOUT_CLASSIFICATION	9.901204981207481E-6	DEFECT
/* (MMessage) */	WITHOUT_CLASSIFICATION	0.9999891807843372	WITHOUT_CLASSIFICATION	1.0819215662700295E-5	DEFECT
/* (MMessage) */	WITHOUT_CLASSIFICATION	0.9999891807843372	WITHOUT_CLASSIFICATION	1.0819215662700295E-5	DEFECT
/* (MMessage) */	WITHOUT_CLASSIFICATION	0.9999891807843372	WITHOUT_CLASSIFICATION	1.0819215662700295E-5	DEFECT
// no state with the given name is found, so we have to // reject the complete user's input	WITHOUT_CLASSIFICATION	0.9999999556912782	WITHOUT_CLASSIFICATION	4.43087217163885E-8	DEFECT
/* Now let's check if the new line is already present in             * the old list of internal transitions; if it is, then             * mark the old one to be retained (i.e. do not create a new one),             * if it isn't, continue with parsing:             */	WITHOUT_CLASSIFICATION	0.9999997043820544	WITHOUT_CLASSIFICATION	2.956179455151794E-7	DEFECT
// case 1	WITHOUT_CLASSIFICATION	0.9999949789778233	WITHOUT_CLASSIFICATION	5.021022176743016E-6	DEFECT
// check for more literals (';' separated):	WITHOUT_CLASSIFICATION	0.9999997841675106	WITHOUT_CLASSIFICATION	2.1583248943453227E-7	DEFECT
/*     * @see tudresden.ocl.check.types.Type#hasState(java.lang.String)     */	WITHOUT_CLASSIFICATION	0.9999997267346918	WITHOUT_CLASSIFICATION	2.732653082405577E-7	DEFECT
// if save did not raise an exception // and name+"#" exists move name+"#" to name+"~" // this is the correct backup file	WITHOUT_CLASSIFICATION	0.9993330940406863	WITHOUT_CLASSIFICATION	6.669059593138234E-4	DEFECT
// frank: in case of exception // delete name and mv name+"#" back to name if name+"#" exists // this is the "rollback" to old file	WITHOUT_CLASSIFICATION	0.9999412561463764	WITHOUT_CLASSIFICATION	5.874385362371969E-5	DEFECT
// Skip the 2 lines //<?xml version="1.0" encoding="UTF-8" ?> //<!DOCTYPE pgml SYSTEM "pgml.dtd">	WITHOUT_CLASSIFICATION	0.9999991512386842	WITHOUT_CLASSIFICATION	8.487613157833804E-7	DEFECT
// Search all attributes found to those expected. // If any don't match then turn off the found flag // so that we search for the next matching tag.	WITHOUT_CLASSIFICATION	0.9999999933818383	WITHOUT_CLASSIFICATION	6.618161608588401E-9	DEFECT
// Now we're into processing each specific path // item strategy. // At the moment, we only know PathItemPlacement	WITHOUT_CLASSIFICATION	0.9999999867601045	WITHOUT_CLASSIFICATION	1.3239895485156688E-8	DEFECT
// for compatibility with older format	WITHOUT_CLASSIFICATION	0.9999974210037753	WITHOUT_CLASSIFICATION	2.578996224592815E-6	DEFECT
// If we're about to upgrade the file lets take an archive // of it first.	WITHOUT_CLASSIFICATION	0.9999993761084568	WITHOUT_CLASSIFICATION	6.238915432448449E-7	DEFECT
// No more we can do here on failure	WITHOUT_CLASSIFICATION	0.9999805570969147	WITHOUT_CLASSIFICATION	1.944290308531407E-5	DEFECT
// Write any left over bytes in the input buffer // (perhaps from a partially decoded character)	WITHOUT_CLASSIFICATION	0.9999999101151482	WITHOUT_CLASSIFICATION	8.988485177804062E-8	DEFECT
// NOP	WITHOUT_CLASSIFICATION	0.9999962575377356	WITHOUT_CLASSIFICATION	3.7424622643916867E-6	DEFECT
/** * To persist to and from zargo (zipped file) storage containing seperate * xmi, argo, plgml and todo zip entries. * @author Bob Tarling * TODO: Review use of this against ZargoFilePersister - Bob */	WITHOUT_CLASSIFICATION	0.9935406749425643	WITHOUT_CLASSIFICATION	0.0064593250574356605	DEFECT
// Add the path of the model to the search path, so we can // read dependent models	WITHOUT_CLASSIFICATION	0.9999999992539654	WITHOUT_CLASSIFICATION	7.460346053026125E-10	DEFECT
// we only need to add the classloader once // and if and only if there is at least a profile // in the JAR	WITHOUT_CLASSIFICATION	0.9999911532892047	WITHOUT_CLASSIFICATION	8.846710795254318E-6	DEFECT
/* Testing: does not fire. */	WITHOUT_CLASSIFICATION	0.9960665151966149	WITHOUT_CLASSIFICATION	0.003933484803385127	DEFECT
/* Testing: does not fire. */	WITHOUT_CLASSIFICATION	0.9960665151966149	WITHOUT_CLASSIFICATION	0.003933484803385127	DEFECT
/* Testing: does not fire. */	WITHOUT_CLASSIFICATION	0.9960665151966149	WITHOUT_CLASSIFICATION	0.003933484803385127	DEFECT
/* Testing: does not fire. */	WITHOUT_CLASSIFICATION	0.9960665151966149	WITHOUT_CLASSIFICATION	0.003933484803385127	DEFECT
/* Testing: does not fire. */	WITHOUT_CLASSIFICATION	0.9960665151966149	WITHOUT_CLASSIFICATION	0.003933484803385127	DEFECT
/* Testing: does not fire. */	WITHOUT_CLASSIFICATION	0.9960665151966149	WITHOUT_CLASSIFICATION	0.003933484803385127	DEFECT
/*     * @see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAFeatureCall(tudresden.ocl.parser.node.AFeatureCall)     */	WITHOUT_CLASSIFICATION	0.9999998028564947	WITHOUT_CLASSIFICATION	1.971435053098495E-7	DEFECT
/*     * @see org.argouml.profile.internal.ocl.ModelInterpreter#invokeFeature(java.util.Map,     *      java.lang.Object, java.lang.String, java.lang.String,     *      java.lang.Object[])     */	WITHOUT_CLASSIFICATION	0.9999999895131317	WITHOUT_CLASSIFICATION	1.0486868230758733E-8	DEFECT
/*     * @see org.argouml.profile.internal.ocl.ModelInterpreter#invokeFeature(java.util.Map,     *      java.lang.Object, java.lang.String, java.lang.String,     *      java.lang.Object[])     */	WITHOUT_CLASSIFICATION	0.9999999895131317	WITHOUT_CLASSIFICATION	1.0486868230758733E-8	DEFECT
// TODO: isStatic in UML 2.x	WITHOUT_CLASSIFICATION	0.7101509700129218	DEFECT	0.2898490299870781	WITHOUT_CLASSIFICATION
// Additional Operations in 4.5.3.8	WITHOUT_CLASSIFICATION	0.9999979022570138	WITHOUT_CLASSIFICATION	2.0977429861004913E-6	DEFECT
/* 4.5.2.13 Constraint */	WITHOUT_CLASSIFICATION	0.9999986473474821	WITHOUT_CLASSIFICATION	1.3526525178582818E-6	DEFECT
/* 4.5.2.24 Generalization */	WITHOUT_CLASSIFICATION	0.9998116888070718	WITHOUT_CLASSIFICATION	1.8831119292820188E-4	DEFECT
/* 4.5.2.28 Namespace */	WITHOUT_CLASSIFICATION	0.9999185957859521	WITHOUT_CLASSIFICATION	8.140421404782445E-5	DEFECT
// Do not set buildingModel = false here, // otherwise the action for selection is performed.	WITHOUT_CLASSIFICATION	0.9999454942457638	WITHOUT_CLASSIFICATION	5.4505754236096E-5	DEFECT
//        prpTodo = createProperty("label.todo-pane", positions, TabToDo.class); //        prpProperties = //            createProperty("label.properties-pane", //                    positions, TabProps.class); //        prpDocumentation = //            createProperty("label.documentation-pane", //                    positions, TabDocumentation.class); //        prpStyle = //            createProperty("label.style-pane", //                    positions, TabStyle.class); //        prpSource = //            createProperty("label.source-pane", //                    positions, TabSrc.class); //        prpConstraints = //            createProperty("label.constraints-pane", //                    positions, TabConstraints.class); //        prpTaggedValues = //            createProperty("label.tagged-values-pane", //                    positions, TabTaggedValues.class); // //        Property[] propertyList = new Property[] { //            prpTodo, prpProperties, prpDocumentation, prpStyle, //	WITHOUT_CLASSIFICATION	0.9999999885190233	WITHOUT_CLASSIFICATION	1.1480976780806033E-8	DEFECT
// Parse the boundary box text. Null is // returned if it is empty or // invalid, which causes no change. Otherwise we tell // GEF we are making // a change, make the change and tell GEF we've // finished.	WITHOUT_CLASSIFICATION	0.9999999973114966	WITHOUT_CLASSIFICATION	2.688503414204938E-9	DEFECT
// TODO: Add double click listener 	WITHOUT_CLASSIFICATION	0.5047604793354631	WITHOUT_CLASSIFICATION	0.4952395206645369	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getPrimary1()     */	WITHOUT_CLASSIFICATION	0.9999998605538225	WITHOUT_CLASSIFICATION	1.3944617753017568E-7	DEFECT
/*     * @see javax.swing.plaf.metal.MetalTheme#getPrimary1()     */	WITHOUT_CLASSIFICATION	0.9999998605538225	WITHOUT_CLASSIFICATION	1.3944617753017568E-7	DEFECT
// if the current shortcut has been set but is void, then the // current shortcut is not set --> then the default value does not // change	WITHOUT_CLASSIFICATION	0.9999993013930618	WITHOUT_CLASSIFICATION	6.986069381556495E-7	DEFECT
// Only show actions for associations not already on diagram	WITHOUT_CLASSIFICATION	0.9998562397589243	WITHOUT_CLASSIFICATION	1.4376024107568285E-4	DEFECT
// Only show actions for associations not already on diagram	WITHOUT_CLASSIFICATION	0.9998562397589243	WITHOUT_CLASSIFICATION	1.4376024107568285E-4	DEFECT
// Only show actions for associations not already on diagram	WITHOUT_CLASSIFICATION	0.9998562397589243	WITHOUT_CLASSIFICATION	1.4376024107568285E-4	DEFECT
// Only show actions for associations not already on diagram	WITHOUT_CLASSIFICATION	0.9998562397589243	WITHOUT_CLASSIFICATION	1.4376024107568285E-4	DEFECT
// Only show actions for associations not already on diagram	WITHOUT_CLASSIFICATION	0.9998562397589243	WITHOUT_CLASSIFICATION	1.4376024107568285E-4	DEFECT
// Only show actions for associations not already on diagram	WITHOUT_CLASSIFICATION	0.9998562397589243	WITHOUT_CLASSIFICATION	1.4376024107568285E-4	DEFECT
// 2. the profile configuration, holding noneditable applied profiles	WITHOUT_CLASSIFICATION	0.9999995338266455	WITHOUT_CLASSIFICATION	4.6617335449979824E-7	DEFECT
// the text will be set later	WITHOUT_CLASSIFICATION	0.9999950122154342	WITHOUT_CLASSIFICATION	4.987784565733865E-6	DEFECT
//    private static final StereotypeView[] stereotypeViewMap; //     //    static { //        stereotypeViewMap = new StereotypeView[3]; //        StereotypeView. //        stereotypeViewMap[DiagramAppearance.STEREOTYPE_VIEW_TEXTUAL] =  //            StereotypeView.TEXTUAL; //        stereotypeViewMap[DiagramAppearance.STEREOTYPE_VIEW_BIG_ICON] =  //            StereotypeView.BIG_ICON; //        stereotypeViewMap[DiagramAppearance.STEREOTYPE_VIEW_SMALL_ICON] =  //            StereotypeView.SMALL_ICON; //    }	WITHOUT_CLASSIFICATION	0.9999999063432752	WITHOUT_CLASSIFICATION	9.365672482917251E-8	DEFECT
/** * This class represents all Diagrams within ArgoUML. * It is based upon the GEF Diagram.<p> * * It adds a namespace, and the capability * to delete itself when its namespace is deleted. <p> * * TODO: MVW: I am not sure of the following:<p> * The "namespace" of the diagram is e.g. used when creating new elements * that are shown on the diagram; they will have their namespace set * according this. It is NOT necessarily equal to the "owner". <p> * * MVW: I doubt all following: * The "namespace" of the diagram is e.g. used to register a listener * to the UML model, to be notified if this element is removed; * which will imply that this diagram has to be deleted, too. <p> * * Hence the namespace of e.g. a collaboration diagram should be the * represented classifier or, in case of a represented operation, the * classifier that owns this operation. * And the namespace of the statechart diagram should be * the namespace of its statemachine. */	WITHOUT_CLASSIFICATION	0.9999675018727259	WITHOUT_CLASSIFICATION	3.2498127274151965E-5	DEFECT
// The fix	WITHOUT_CLASSIFICATION	0.9999528406647229	WITHOUT_CLASSIFICATION	4.715933527699211E-5	DEFECT
// A binary association is not a node so reject.	WITHOUT_CLASSIFICATION	0.9999799786257468	WITHOUT_CLASSIFICATION	2.0021374253163714E-5	DEFECT
// Make all the parts match the main fig	WITHOUT_CLASSIFICATION	0.9999842643692382	WITHOUT_CLASSIFICATION	1.5735630761798286E-5	DEFECT
// and the stereotypes of its features	WITHOUT_CLASSIFICATION	0.9999989744641353	WITHOUT_CLASSIFICATION	1.0255358646640554E-6	DEFECT
// stereotype fig covers the name fig:	WITHOUT_CLASSIFICATION	0.9999892848680502	WITHOUT_CLASSIFICATION	1.0715131949794886E-5	DEFECT
/*         * Notation settings are different since, we know that, at a minimum,         * the isShowPath() setting can change because with implement         * PathContainer, so we make sure that we have a private copy of the         * notation settings.         */	WITHOUT_CLASSIFICATION	0.9999829696195871	WITHOUT_CLASSIFICATION	1.703038041285875E-5	DEFECT
// null elements represent new constraints, which will be // added to the target the first time any actual editing // takes place.  This is done to ensure syntactical // correctness of constraints stored with the target.	WITHOUT_CLASSIFICATION	0.9999989756138544	WITHOUT_CLASSIFICATION	1.024386145482109E-6	DEFECT
// Mutators hold write lock & will deadlock if use is not thread safe	WITHOUT_CLASSIFICATION	0.9999886151167381	WITHOUT_CLASSIFICATION	1.1384883261922635E-5	DEFECT
// test with a class and class diagram	WITHOUT_CLASSIFICATION	0.9999976225029598	WITHOUT_CLASSIFICATION	2.377497040171222E-6	DEFECT
/**     * Constructor for a {@link FigClass} during file load.<p>     *     * Parent {@link org.argouml.uml.diagram.ui.FigNodeModelElement}     * will have created the main box {@link #getBigPort()} and its     * name {@link #getNameFig()} and stereotype     * (@link #getStereotypeFig()}. This constructor     * creates a box for the attributes and operations.<p>     *     * The properties of all these graphic elements are adjusted     * appropriately. The main boxes are all filled and have     * outlines.      * TODO: which is wrong, since the bigPort is filled, too.     *      * @param element model element to be represented by this fig.     * @param bounds rectangle describing bounds     * @param settings rendering settings     */	WITHOUT_CLASSIFICATION	0.9999824965992856	WITHOUT_CLASSIFICATION	1.750340071442582E-5	DEFECT
// When this is called from PGMLStackParser.attachEdges, we finished // the initialization of owning pseudo element (CommentEdge)	WITHOUT_CLASSIFICATION	0.9999875473504647	WITHOUT_CLASSIFICATION	1.245264953535229E-5	DEFECT
/* Do nothing by default. */	WITHOUT_CLASSIFICATION	0.9999919340977799	WITHOUT_CLASSIFICATION	8.06590222026835E-6	DEFECT
// Override superclass to do nothing. // Fill property cannot be changed.	WITHOUT_CLASSIFICATION	0.9999910985552158	WITHOUT_CLASSIFICATION	8.90144478419554E-6	DEFECT
// Override superclass to do nothing. // Fill property cannot be changed.	WITHOUT_CLASSIFICATION	0.9999910985552158	WITHOUT_CLASSIFICATION	8.90144478419554E-6	DEFECT
/** * A Fig designed to be the child of some FigNode or FigEdge to display the * stereotypes of the model element represented by the parent Fig. * Currently, multiple stereotypes are shown stacked one on top of the other, * each enclosed by guillemets.<p> * * The minimum width of this fig is the largest minimum width of its child * figs. The minimum height of this fig is the total minimum height of its child * figs.<p> * * The owner of this Fig is the UML element that is extended * with the stereotypes. We are listening to changes to the model: * addition and removal of stereotypes. <p> * * This fig supports showing one keyword * as the first "stereotype" in the list. <p> * * There is no way to remove a keyword fig, once added. <p> * * TODO: Allow for UML2 style display where all stereotypes are displayed in * the same guillemet pair and are delimited by commas. The style should be * changeable by calling getOrientation(Orientation). The swidget Orientation * class can be used for this. * @author Bob Tarling */	WITHOUT_CLASSIFICATION	0.9722975327998071	WITHOUT_CLASSIFICATION	0.027702467200192846	DEFECT
// The source of an association end should not // be the classifier. If it is the user has drawn the wrong way // round so we swap here.	WITHOUT_CLASSIFICATION	0.9999903153850742	WITHOUT_CLASSIFICATION	9.684614925714607E-6	DEFECT
/* We want to maintain a minimum width for the fig. Also, add the border         * dimensions to the minimum space required for its contents:         */	WITHOUT_CLASSIFICATION	0.9999876161767955	WITHOUT_CLASSIFICATION	1.23838232044661E-5	DEFECT
// Make sure we don't try to set things smaller than the minimum	WITHOUT_CLASSIFICATION	0.999996390960628	WITHOUT_CLASSIFICATION	3.609039371982309E-6	DEFECT
/*         * If requested height equals needed height then do nothing; it fits         * exactly.         */	WITHOUT_CLASSIFICATION	0.9999380223321681	WITHOUT_CLASSIFICATION	6.197766783183361E-5	DEFECT
//        LOG.log(Level.FINE, "Slope = " + theta / Math.PI + "PI " //                + theta / Math.PI * 180.0);	WITHOUT_CLASSIFICATION	0.9999999673032348	WITHOUT_CLASSIFICATION	3.2696765190081995E-8	DEFECT
/* Test-case for the above code:          * Draw a class.          * Create a stereotype for it by clicking on the prop-panel tool, and          * name it.         * Remove the class from the diagram.         * Drag the class from the explorer on the diagram.         * Select the stereotype in the explorer, and change         * its name in the prop-panel to something longer.         * The longer name does not make the class Fig wider          * unless the above code is added.*/	WITHOUT_CLASSIFICATION	0.9999913230116856	WITHOUT_CLASSIFICATION	8.67698831435761E-6	DEFECT
// If we have no source and dest connector then we assume this is // load of an old UML1.4 diagram from before this data was saved // in PGML. For UML1.4 we can assume the source is first connection // and destination is last connection stored in repository for this // association.	WITHOUT_CLASSIFICATION	0.9999999542045858	WITHOUT_CLASSIFICATION	4.5795414275043715E-8	DEFECT
// Note that "multiplicity" is what is the notation is listening // for in UML1.4 "uppervalue" are listened to in UML2. It is not // currently why it is not required to register for "lowerValue" // also.	WITHOUT_CLASSIFICATION	0.9999967060879901	WITHOUT_CLASSIFICATION	3.293912009879047E-6	DEFECT
// Some subclasses will try to use this	WITHOUT_CLASSIFICATION	0.9999506898713296	WITHOUT_CLASSIFICATION	4.931012867050632E-5	DEFECT
// FigClass calls setBoundsImpl before we set // the stereotypeFigProfileIcon	WITHOUT_CLASSIFICATION	0.9999880590361427	WITHOUT_CLASSIFICATION	1.1940963857222911E-5	DEFECT
// TODO: Use per-project undo manager, not global	WITHOUT_CLASSIFICATION	0.9086410844598017	WITHOUT_CLASSIFICATION	0.09135891554019827	DEFECT
// TODO: Use per-project undo manager, not global	WITHOUT_CLASSIFICATION	0.9086410844598017	WITHOUT_CLASSIFICATION	0.09135891554019827	DEFECT
// TODO: Use per-project undo manager, not global	WITHOUT_CLASSIFICATION	0.9086410844598017	WITHOUT_CLASSIFICATION	0.09135891554019827	DEFECT
// Perhaps something like the following would workd.  If not, then // traverse up the component hierarchy to a MultEditorPane //        Rectangle drawingArea = //            Globals.curEditor().getJComponent().getVisibleRect();	WITHOUT_CLASSIFICATION	0.9999992708232046	WITHOUT_CLASSIFICATION	7.291767953927184E-7	DEFECT
// Default implementation is to do nothing	WITHOUT_CLASSIFICATION	0.9999942817585185	WITHOUT_CLASSIFICATION	5.718241481580311E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Methods that implement the GraphModel itself // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999991153353787	WITHOUT_CLASSIFICATION	8.846646213105159E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Methods that implement the VetoableChangeListener interface // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999941395128179	WITHOUT_CLASSIFICATION	5.860487182152757E-6	DEFECT
// Only interested in the "ownedElement" property. Either something has // been added to the namespace for this model, or removed. In the // latter case the "something" will be in the old value of the // property, which is the collection of owned elements, and the new value // will be the element import describing the model element and the // model from which it was removed	WITHOUT_CLASSIFICATION	0.9999999581275285	WITHOUT_CLASSIFICATION	4.187247144935984E-8	DEFECT
// The figs for the two end nodes	WITHOUT_CLASSIFICATION	0.9999934381739501	WITHOUT_CLASSIFICATION	6.561826049820837E-6	DEFECT
// The figs for the two end nodes	WITHOUT_CLASSIFICATION	0.9999934381739501	WITHOUT_CLASSIFICATION	6.561826049820837E-6	DEFECT
/**     * Private utility routine to work out the (positive) x coordinate of a     * point on an oval, given the radii and y coordinate.<p>     * TODO: Use this to calculate the separator lines!     *     * @param a  radius in X direction     * @param b  radius in Y direction     * @param y  Y coordinate     * @return   Positive X coordinate for the given Y coordinate     */	WITHOUT_CLASSIFICATION	0.9981183961312606	DEFECT	0.001881603868739364	WITHOUT_CLASSIFICATION
// the responsibility of determining if the given target is a // correct one for this tab has been moved from the // DetailsPane to the member tabs of the details pane. Reason for // this is that the details pane is configurable and cannot // know what's the correct target for some tab.	WITHOUT_CLASSIFICATION	0.9999026377354769	WITHOUT_CLASSIFICATION	9.736226452310881E-5	DEFECT
// If the diagram is empty, GEF won't write anything, leaving us with // an empty (and invalid) file.  Handle this case ourselves to prevent // this from happening.	WITHOUT_CLASSIFICATION	0.9999955261219786	WITHOUT_CLASSIFICATION	4.473878021414975E-6	DEFECT
// NOTE: GEF's GIF writer uses Jeff Poskanzer's GIF encoder, but that // saves a copy of the entire image in an internal buffer before // starting work, defeating the whole purpose of our incremental // rendering.	WITHOUT_CLASSIFICATION	0.9999990417068649	WITHOUT_CLASSIFICATION	9.582931350093624E-7	DEFECT
// Expressions are DataTypes, not independent model elements // be careful not to reuse them	WITHOUT_CLASSIFICATION	0.9999994932979885	WITHOUT_CLASSIFICATION	5.06702011511924E-7	DEFECT
/**     * TODO: The next text was copied - to adapt.     *      * Sets the target. If the old target is an UML Element, it also removes     * the model from the element listener list of the target. If the new target     * is an UML Element, the model is added as element listener to the     * new target. <p>     *     * This function is called when the user changes the target.      * Hence, this shall not result in any UML model changes.<p>     *      * This function looks a lot like the one in UMLComboBoxModel2.     * <p>     * As a possible future extension, we could allow listening to      * other model elements.     *      * @param theNewTarget the new target     */	WITHOUT_CLASSIFICATION	0.689734751684325	WITHOUT_CLASSIFICATION	0.3102652483156751	DEFECT
// fire all of the status events	WITHOUT_CLASSIFICATION	0.999999990943545	WITHOUT_CLASSIFICATION	9.056455127277986E-9	DEFECT
// fire all of the profile events	WITHOUT_CLASSIFICATION	0.9999999654670514	WITHOUT_CLASSIFICATION	3.453294850280696E-8	DEFECT
// verify isRelevant returns true	WITHOUT_CLASSIFICATION	0.9999971105314134	WITHOUT_CLASSIFICATION	2.8894685865326992E-6	DEFECT
// DesignGoalsCM checks if the critic isRelevantToGoals of the Designer // this value is always true for the Critic base class so  // DesignerGoal should always return true in this condition	WITHOUT_CLASSIFICATION	0.9999823563928709	WITHOUT_CLASSIFICATION	1.7643607129041957E-5	DEFECT
// update the priority of the critic to be the same priority as the // decision	WITHOUT_CLASSIFICATION	0.9999999735386176	WITHOUT_CLASSIFICATION	2.6461382356068835E-8	DEFECT
// check that the model was initialized with one goal	WITHOUT_CLASSIFICATION	0.9999995166855462	WITHOUT_CLASSIFICATION	4.833144538883795E-7	DEFECT
// number of goals should now be 0	WITHOUT_CLASSIFICATION	0.9999997666489241	WITHOUT_CLASSIFICATION	2.3335107601633897E-7	DEFECT
// Arbitrary settings - not used used for testing	WITHOUT_CLASSIFICATION	0.9999999619026555	WITHOUT_CLASSIFICATION	3.80973445484682E-8	DEFECT
// FigAssociationRole figassociationrole = new FigAssociationRole();	WITHOUT_CLASSIFICATION	0.9999953628831788	WITHOUT_CLASSIFICATION	4.6371168211828515E-6	DEFECT
// initialize basic parameters that are // different from Decision.UNSPEC	WITHOUT_CLASSIFICATION	0.9999982102553833	WITHOUT_CLASSIFICATION	1.7897446167023062E-6	DEFECT
// verify parameters were initialized correctly by the constructor	WITHOUT_CLASSIFICATION	0.9999940085001768	WITHOUT_CLASSIFICATION	5.9914998232050904E-6	DEFECT
// verify the name property was correctly updated	WITHOUT_CLASSIFICATION	0.9999588910215381	WITHOUT_CLASSIFICATION	4.110897846189388E-5	DEFECT
// following the update the priority should be // equivalent to Decision.UNSPEC	WITHOUT_CLASSIFICATION	0.9999999943932416	WITHOUT_CLASSIFICATION	5.606758348749503E-9	DEFECT
// test that the category and description are correct	WITHOUT_CLASSIFICATION	0.9999923450414799	WITHOUT_CLASSIFICATION	7.654958520106906E-6	DEFECT
// update the values	WITHOUT_CLASSIFICATION	0.9999997399324573	WITHOUT_CLASSIFICATION	2.600675427407906E-7	DEFECT
// verify SnoozeOrder starts off not snoozed	WITHOUT_CLASSIFICATION	0.9999952631734003	WITHOUT_CLASSIFICATION	4.736826599698743E-6	DEFECT
// snooze and verify its been enabled	WITHOUT_CLASSIFICATION	0.9999975348702648	WITHOUT_CLASSIFICATION	2.465129735189792E-6	DEFECT
// snooze and verify its been enabled	WITHOUT_CLASSIFICATION	0.9999975348702648	WITHOUT_CLASSIFICATION	2.465129735189792E-6	DEFECT
// test with a class and class diagram	WITHOUT_CLASSIFICATION	0.9999976225029598	WITHOUT_CLASSIFICATION	2.377497040171222E-6	DEFECT
// test with a class and class diagram	WITHOUT_CLASSIFICATION	0.9999976225029598	WITHOUT_CLASSIFICATION	2.377497040171222E-6	DEFECT
// test with a class and class diagram	WITHOUT_CLASSIFICATION	0.9999976225029598	WITHOUT_CLASSIFICATION	2.377497040171222E-6	DEFECT
//            pce = (PropertyChangeEvent) rxdEvent.getSource(); //            assertTrue("Wrong event name", //                    pce.getPropertyName().equals( //                            DiagramAppearance.KEY_DEFAULT_SHADOW_WIDTH.getKey())); //            String value = (String) pce.getOldValue(); //            int i = Integer.parseInt(value); //            assertTrue("Wrong old event value", i == 4); //            assertTrue("Wrong new event value", //                    ((String) pce.getNewValue()).equals("2"));	WITHOUT_CLASSIFICATION	0.9999999938972561	WITHOUT_CLASSIFICATION	6.102743816117466E-9	DEFECT
// Change things	WITHOUT_CLASSIFICATION	0.9999985647007341	WITHOUT_CLASSIFICATION	1.435299265946498E-6	DEFECT
// Assert that the copy isn't modified when the source changes	WITHOUT_CLASSIFICATION	0.9999993690273643	WITHOUT_CLASSIFICATION	6.309726356599609E-7	DEFECT
// Assert that the copy isn't modified when the source changes	WITHOUT_CLASSIFICATION	0.9999993690273643	WITHOUT_CLASSIFICATION	6.309726356599609E-7	DEFECT
// Assert that the copy isn't modified when the source changes	WITHOUT_CLASSIFICATION	0.9999993690273643	WITHOUT_CLASSIFICATION	6.309726356599609E-7	DEFECT
// Create a different client to bind to the same supplier	WITHOUT_CLASSIFICATION	0.9999999839921642	WITHOUT_CLASSIFICATION	1.6007835824528887E-8	DEFECT
// success	WITHOUT_CLASSIFICATION	0.9999988988612902	WITHOUT_CLASSIFICATION	1.1011387097225628E-6	DEFECT
// success	WITHOUT_CLASSIFICATION	0.9999988988612902	WITHOUT_CLASSIFICATION	1.1011387097225628E-6	DEFECT
// success	WITHOUT_CLASSIFICATION	0.9999988988612902	WITHOUT_CLASSIFICATION	1.1011387097225628E-6	DEFECT
// success	WITHOUT_CLASSIFICATION	0.9999988988612902	WITHOUT_CLASSIFICATION	1.1011387097225628E-6	DEFECT
/*         * This comment was included in a previous version (before 1/2005)         * of the test which had this assertion commented out:         * ------         * Interaction should not be removed when removing ClassifierRole...         * maybe if the last message is removed from the interaction but even         * then it's doubtfull since it will probably lead to backward         * compatibility problems in save formats.         * ------         * but my reading of the UML 1.4 specification is that an Interaction         * without at least one message is definitely illegal, so MDR is         * doing the right thing by removing it in this case where we only         * have a single message, which then gets deleted. - tfm         */	WITHOUT_CLASSIFICATION	0.9999983564870555	WITHOUT_CLASSIFICATION	1.6435129444531346E-6	DEFECT
/*    * Get a list of UML metaclass names from the XMI document.    * <p>    * Though some of the DOM methods such as getAttributes    * may return null values under other conditions,    * in the context of this test    * and assuming a valid XMI file    * none should occur.    * <p>    * Hence there is no special checking for those abnormal    * cases, allowing the test to fail simply with a    * NullPointerException, with this comment indicating that    * either the input data is incorrect or the test needs    * to be improved.    */	WITHOUT_CLASSIFICATION	0.9997850273640636	WITHOUT_CLASSIFICATION	2.1497263593641723E-4	DEFECT
/**     * Test creating modelelements from a given notation, and then      * re-generate the notation-string again, and check if they are equal.     * Some of these tests are not very usefulll,      * since they may fail on white space differences.      * TODO: White space should best be ignored.      */	WITHOUT_CLASSIFICATION	0.8176517893375366	WITHOUT_CLASSIFICATION	0.1823482106624635	DEFECT
// changing the sequence only	WITHOUT_CLASSIFICATION	0.9999997389184925	WITHOUT_CLASSIFICATION	2.610815075686919E-7	DEFECT
//ok	WITHOUT_CLASSIFICATION	0.9998139396659814	WITHOUT_CLASSIFICATION	1.8606033401853475E-4	DEFECT
//ok	WITHOUT_CLASSIFICATION	0.9998139396659814	WITHOUT_CLASSIFICATION	1.8606033401853475E-4	DEFECT
//ok	WITHOUT_CLASSIFICATION	0.9998139396659814	WITHOUT_CLASSIFICATION	1.8606033401853475E-4	DEFECT
//ok	WITHOUT_CLASSIFICATION	0.9998139396659814	WITHOUT_CLASSIFICATION	1.8606033401853475E-4	DEFECT
// Make sure the contents match what we expect	WITHOUT_CLASSIFICATION	0.9999996608704512	WITHOUT_CLASSIFICATION	3.391295487805648E-7	DEFECT
// Make sure we got what we started with	WITHOUT_CLASSIFICATION	0.9999995724529812	WITHOUT_CLASSIFICATION	4.2754701869592293E-7	DEFECT
// Clean up our model and the extent that we read profile in to	WITHOUT_CLASSIFICATION	0.9999999257071724	WITHOUT_CLASSIFICATION	7.429282751139986E-8	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999998033355179	WITHOUT_CLASSIFICATION	1.9666448221963214E-7	DEFECT
// TODO: the following fails due to the XMI writing saving all top level // model elements and because even if there was no empty project, by // creating a class, the undo mechanism in the project manager will // force the creation of an empty project. //        assertEquals(1, profileModels.size());	WITHOUT_CLASSIFICATION	0.9967184389998347	WITHOUT_CLASSIFICATION	0.003281561000165381	DEFECT
// we recalculate all the activations	WITHOUT_CLASSIFICATION	0.9999993500519166	WITHOUT_CLASSIFICATION	6.49948083351607E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999973196437272	WITHOUT_CLASSIFICATION	2.6803562728170175E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999973196437272	WITHOUT_CLASSIFICATION	2.6803562728170175E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999928616651008	WITHOUT_CLASSIFICATION	7.138334899211065E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999928616651008	WITHOUT_CLASSIFICATION	7.138334899211065E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999928616651008	WITHOUT_CLASSIFICATION	7.138334899211065E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965003627258	WITHOUT_CLASSIFICATION	3.4996372742398757E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999969301159733	WITHOUT_CLASSIFICATION	3.0698840266890324E-6	DEFECT
// TODO: Huge side effect.  Hoist out of parse - tfm // let's load the project	DEFECT	0.7628258845598855	WITHOUT_CLASSIFICATION	0.2371741154401144	DEFECT
// TODO: This should only be building list up to 'index'	DEFECT	0.7196544456350322	DEFECT	0.2803455543649678	WITHOUT_CLASSIFICATION
// FIXME: Boundary condition at end of image for non-integral // multiples of BUFFER_HEIGHT	DEFECT	0.9587216738465154	WITHOUT_CLASSIFICATION	0.04127832615348465	DEFECT
// TODO: We don't really want to do the following, but I'm not sure // what depends on it - tfm - 20070725	DEFECT	0.5278403589190118	DEFECT	0.4721596410809881	WITHOUT_CLASSIFICATION
// TODO: We can't have a global "current" language // NotationProviderFactory2.setCurrentLanguage(oldLanguage);	DEFECT	0.5404428563273929	WITHOUT_CLASSIFICATION	0.45955714367260725	DEFECT
// TODO: Use Model.getModelManagementHelper().getPathList(modelElement); // TODO: This will fail with nested Models	DEFECT	0.8765701466658556	DEFECT	0.12342985333414436	WITHOUT_CLASSIFICATION
/* TODO: We should have all the information that is required in the         * NotationSettings object */	DEFECT	0.504542047640314	DEFECT	0.49545795235968615	WITHOUT_CLASSIFICATION
// TODO: This whole block can be deleted when issue 6266 is resolved	DEFECT	0.9716934906106897	WITHOUT_CLASSIFICATION	0.028306509389310345	DEFECT
/* Dirty fix for issue 1758 (Needs to be amended             * when we start supporting parameters):             */	DEFECT	0.9942171592170554	WITHOUT_CLASSIFICATION	0.005782840782944547	DEFECT
/* TODO: This does not work! (MVW)                 Model.getFacade().setBody(expr,guard);                 Model.getFacade().setExpression(g,expr); */	DEFECT	0.997517371021213	DEFECT	0.0024826289787871487	WITHOUT_CLASSIFICATION
/* TODO: In this case, the properties panel                 is not updated with the changed expression! */	DEFECT	0.7738175115609403	DEFECT	0.22618248843905986	WITHOUT_CLASSIFICATION
// WARNING: the OutputStream version of this doesn't work! - tfm	DEFECT	0.9892663673738759	WITHOUT_CLASSIFICATION	0.01073363262612413	DEFECT
// WARNING: The GEF implementation of the OutputStream version of  // this method doesn't work - tfm - 20070531	DEFECT	0.8440657863186738	WITHOUT_CLASSIFICATION	0.15593421368132618	DEFECT
// TODO: Not implemented by eUML	DEFECT	0.8021090009958691	DEFECT	0.19789099900413085	WITHOUT_CLASSIFICATION
// TODO: The below is not strictly correct, but should // cover the case we deal with.  Using a real XML parser // would be better. // Look for XML document has just a single root element	DEFECT	0.9993169257903928	DEFECT	6.830742096072372E-4	WITHOUT_CLASSIFICATION
// This will have problems if the smallest possible // data segment is smaller than the size of the buffer // needed for regex matching	DEFECT	0.9999993880697746	WITHOUT_CLASSIFICATION	6.119302254860563E-7	DEFECT
// TODO: Why is this throwing a generic runtime exception?!?!	DEFECT	0.9919301329249041	DEFECT	0.008069867075095886	WITHOUT_CLASSIFICATION
// TODO: This exception will be thrown during autoscrolling // when the edge of the canvas is reached causing either // the width or height to be "adjusted" to a negative value	DEFECT	0.9998063848913312	WITHOUT_CLASSIFICATION	1.9361510866871176E-4	DEFECT
// TODO: This exception will be thrown during autoscrolling // when the edge of the canvas is reached causing either // the width or height to be "adjusted" to a negative value	DEFECT	0.9998063848913312	WITHOUT_CLASSIFICATION	1.9361510866871176E-4	DEFECT
/* Disabled since it gives various problems: e.g. the toolbar icons         * get too wide. Also the default does not give the new java 5.0 looks.        Component tree = ProjectBrowser.getInstance();        SwingUtilities.updateComponentTreeUI(SwingUtilities.getRootPane(tree));        */	DEFECT	0.9999978966628897	WITHOUT_CLASSIFICATION	2.103337110255894E-6	DEFECT
// TODO: This error needs to be reported!	DEFECT	0.8617179010928105	WITHOUT_CLASSIFICATION	0.13828209890718954	DEFECT
// TODO: - should save and restore the last positions of the toolbars	DEFECT	0.9898838463504669	WITHOUT_CLASSIFICATION	0.010116153649533135	DEFECT
// TODO:  Does anyone use command line? // If so, localization is needed - tfm	DEFECT	0.9019986804355228	DEFECT	0.09800131956447715	WITHOUT_CLASSIFICATION
// TODO: We should be giving the user more direct feedback	DEFECT	0.9178240980000248	WITHOUT_CLASSIFICATION	0.08217590199997518	DEFECT
// TODO: Allow adding models to a diagram - issue 4172.	DEFECT	0.870692181319762	WITHOUT_CLASSIFICATION	0.12930781868023802	DEFECT
// TODO: The following can be removed if selectAll gets fixed	DEFECT	0.7044531036492979	WITHOUT_CLASSIFICATION	0.29554689635070214	DEFECT
/* TODO: Update the old and new node above this!                 * This is issue 5079.                 * The old and new UML namespaces are in the event, but                 * how do we know which nodes to refresh?                 * And how to refresh?                  * Not necessarily the namespaces,                  * depending on the perspective. */	DEFECT	0.9987925120434971	DEFECT	0.0012074879565029605	WITHOUT_CLASSIFICATION
/* Many many of these events .. this slows things down: */	DEFECT	0.9995496354987436	WITHOUT_CLASSIFICATION	4.503645012563994E-4	DEFECT
// TODO: The following rather than the above is probably the correct // way to search // stereo = findStereotype(obj, null, name);	DEFECT	0.9411215862379995	DEFECT	0.05887841376200067	WITHOUT_CLASSIFICATION
// Really ought to have a CriticException to throw here.	DEFECT	0.9994442587571923	WITHOUT_CLASSIFICATION	5.557412428077018E-4	DEFECT
// Really ought to have a CriticException to throw here.	DEFECT	0.9994442587571923	WITHOUT_CLASSIFICATION	5.557412428077018E-4	DEFECT
// TODO: This is only checking immediate siblings when it needs // to be checking all imported elements both here and by our // parents and also taking into account visibility	DEFECT	0.9974251819555666	DEFECT	0.0025748180444334252	WITHOUT_CLASSIFICATION
/**     * There is a possibility that the next step forward takes another path in     * this wizard. To allow for this we must destroy the path already traveled     * by.     * <p>     * TODO: I (Linus) would say that this is really a problem with the Wizard     * implementation since I believe it should be possible to explore a path in     * the wizard and then go back. {@inheritDoc}     */	DEFECT	0.6961375354211629	WITHOUT_CLASSIFICATION	0.3038624645788371	DEFECT
// TODO: {name} is not expanded for diagram objects	DEFECT	0.8561733837845585	WITHOUT_CLASSIFICATION	0.14382661621544157	DEFECT
// TODO: {name} is not expanded for diagram objects	DEFECT	0.8561733837845585	WITHOUT_CLASSIFICATION	0.14382661621544157	DEFECT
//TODO: algorithm is n^2 in number of nodes	DEFECT	0.9970041882914352	WITHOUT_CLASSIFICATION	0.002995811708564797	DEFECT
/** * A critic to detect when a classifier has to many operations). <p> * * TODO: exclude getter and setter operations from count */	DEFECT	0.9351594568968661	WITHOUT_CLASSIFICATION	0.06484054310313389	DEFECT
// TODO: This is never executed as Ludos DI work was never // finished.	DEFECT	0.6117132929413116	DEFECT	0.3882867070586883	WITHOUT_CLASSIFICATION
/**     * Offset in x & y for depth perspective lines of cube.     * TODO: This is the same value as the member 'D'in      * {@link org.tigris.gef.presentation.FigCube}, but there is     * nothing enforcing that correspondence.  Things will probably     * break if they don't match.     */	DEFECT	0.9999334685438436	DEFECT	6.65314561565146E-5	WITHOUT_CLASSIFICATION
/** * Class to display graphics for a UML SynchState in a diagram. <p> *  * TODO: If the font increases, the circle should grow, too. * * @author pepargouml@yahoo.es */	DEFECT	0.9986283783747312	WITHOUT_CLASSIFICATION	0.0013716216252687844	DEFECT
// TODO: This is probably an undesirable side effect unless the user // confirms it.  Placing an element on a second diagram is going to // potentially change its namespace. - tfm 20061208	DEFECT	0.543663228077236	DEFECT	0.45633677192276406	WITHOUT_CLASSIFICATION
// TODO: assumes public // TODO: This is probably an undesirable side effect unless the user // confirms it.  Placing an element on a second diagram is going to // potentially change its namespace. - tfm 20061208	DEFECT	0.6305212962979357	WITHOUT_CLASSIFICATION	0.3694787037020641	DEFECT
/**     * Rank the nodes depending on their level (position in hierarchy) and set     * their weight to achieve a proper node-sequence for the layout. Rows     * exceeding the maximum row width are split, if standalone nodes are     * available.     * <p>     * Weight the other nodes to determine their columns.     * <p>     * TODO: Weighting doesn't appear to be working as intended because multiple     * groups of children/specializations get intermixed in name order rather     * than being grouped by their parent/generalization. - tfm - 20070314     */	DEFECT	0.8269040565749245	DEFECT	0.1730959434250754	WITHOUT_CLASSIFICATION
// Status as of Nov. 2008 - Figs created, property panels exist, more // work required on explorer and assumptions about models not being // nested - tfm	DEFECT	0.9999787688981131	WITHOUT_CLASSIFICATION	2.1231101886812874E-5	DEFECT
// TODO: This code doesn't look like it will get reached because // any abstraction/realization is going to take the // isAAbstraction leg of the if before it gets to this more // general case. - tfm 20080508	DEFECT	0.606882561070564	DEFECT	0.39311743892943585	WITHOUT_CLASSIFICATION
// TODO: make setBounds, calcBounds and updateBounds consistent	DEFECT	0.6412443285445547	WITHOUT_CLASSIFICATION	0.35875567145544524	DEFECT
/** * A Mode to interpret user input while creating a permission edge. * The permission can connect any model elements including those represented * by edges as well as nodes. * <p> * TODO: In UML 2.x, Permission becomes PackageImport and the class hierarchy * has changed so that it is no longer a subtype of Dependency, so this may * need to be refactored to work correctly. */	DEFECT	0.9338356405165606	WITHOUT_CLASSIFICATION	0.06616435948343935	DEFECT
// TODO: The size of text figs, which is what we care about most, // isn't computed correctly by GEF. If we got ambitious, we could // recompute a proper size ourselves.	DEFECT	0.9563767003744028	DEFECT	0.04362329962559709	WITHOUT_CLASSIFICATION
// TODO: Why isn't this calculation for location working?	DEFECT	0.9999903114425955	DEFECT	9.688557404384969E-6	WITHOUT_CLASSIFICATION
// TODO: This should probably only update the project when the user // presses Return or focus is lost	DEFECT	0.9257323786265388	WITHOUT_CLASSIFICATION	0.07426762137346123	DEFECT
// TODO: If ActionCopy is no longer a singleton, how shall //       this work?	DEFECT	0.9921515024052856	DEFECT	0.007848497594714475	WITHOUT_CLASSIFICATION
/* TODO: Support navigability.      * The code below causes and exception in FigAssociationEndAnnotation. */	DEFECT	0.8620943768089139	WITHOUT_CLASSIFICATION	0.13790562319108607	DEFECT
// TODO: We currently don't support per-fig settings for most stuff, so // we can just use the defaults that we were given. //        settings = new DiagramSettings(renderSettings);	DEFECT	0.9834066242916037	WITHOUT_CLASSIFICATION	0.016593375708396255	DEFECT
/**     * Utility function to localize the given string with help text, and show it     * in the status bar of the ArgoUML window. This function is used in favour     * of the inline call to enable later improvements; e.g. it would be     * possible to show a help-balloon.     * <p>     * TODO: Work this out. One matter to possibly improve: show multiple lines.     *     * @param s the given string to be localized and shown     */	DEFECT	0.9999589480760883	DEFECT	4.105192391169526E-5	WITHOUT_CLASSIFICATION
// TODO: Why is this clearing the name?!?! - tfm	DEFECT	0.9975987806446397	DEFECT	0.0024012193553603458	WITHOUT_CLASSIFICATION
/*     * TODO: The code implementing this method is from 2003 (see issue 2171) -     * mechanically integrated by tfmorris in May 2007. Needs to be     * reviewed/updated.     *      * @author Decki,Endi,Yayan, Politechnic of Bandung. Computer Departement     * method for changing text of Message     */	DEFECT	0.9590839107981802	WITHOUT_CLASSIFICATION	0.040916089201819834	DEFECT
/**     * TODO: The code implementing this method is from 2003 (see issue 2171) -     * mechanically integrated by tfmorris in May 2007. Needs to be     * reviewed/updated.     *      * @author Decki,Endi,Yayan, Politechnic of Bandung. Computer Departement     * method for changing text of Message     * @param newOwner     * @param parameter     */	DEFECT	0.5257601718387781	WITHOUT_CLASSIFICATION	0.4742398281612219	DEFECT
// TODO: We should warn the user we have removed something - tfm	DEFECT	0.7995920409238788	WITHOUT_CLASSIFICATION	0.20040795907612127	DEFECT
// TODO: We don't really want this to be filled, but if it's not then // the user can't double click in the compartment to add a new literal // Apparently GEF thinks unfilled figs are only selectable by border //        setFilled(false);	DEFECT	0.9955623328381367	DEFECT	0.004437667161863378	WITHOUT_CLASSIFICATION
// Update attached node figures // TODO: Presumably this should only happen on a add or remove event	DEFECT	0.625685184977279	WITHOUT_CLASSIFICATION	0.37431481502272096	DEFECT
// TODO: Shouldn't we throw an exception here?!?!	DEFECT	0.999598223013925	DEFECT	4.0177698607504617E-4	WITHOUT_CLASSIFICATION
// TODO: Not yet working for UML2	DEFECT	0.9938876278842266	DEFECT	0.00611237211577336	WITHOUT_CLASSIFICATION
// TODO: Monitor is getting dismissed before layout is complete	DEFECT	0.9973622251800857	WITHOUT_CLASSIFICATION	0.0026377748199144053	DEFECT
// TODO: This appears to expect that the UML 1.3 tag name // will appear as a property name in an event, but with the // UML 1.4 switch to TagDefinitions, this won't work	DEFECT	0.9999349789025656	DEFECT	6.502109743444429E-5	WITHOUT_CLASSIFICATION
/* This does not work (anymore/yet?),	DEFECT	0.7933809675427755	DEFECT	0.2066190324572244	WITHOUT_CLASSIFICATION
/* The next line does not work: */	DEFECT	0.8682844173890024	WITHOUT_CLASSIFICATION	0.13171558261099758	DEFECT
/* TODO: This does not work - no event arrives. */	DEFECT	0.9940408098162293	DEFECT	0.005959190183770631	WITHOUT_CLASSIFICATION
/* TODO: If this is an ordered list, then you have to                        add in the right location! */	DEFECT	0.7451296745849395	DEFECT	0.25487032541506044	WITHOUT_CLASSIFICATION
// TODO: Considering all delete events to be valid like below // is going to cause lots of unecessary work and some problems	DEFECT	0.6462343950773247	DEFECT	0.3537656049226752	WITHOUT_CLASSIFICATION
// Set the child components to the heights in the array list // calculating the height of any proportional component on the // fly.  FIXME - This assumes that the JLabel and the // component it labels have been added to the parent component // consecutively.	DEFECT	0.9796990856098117	WITHOUT_CLASSIFICATION	0.02030091439018837	DEFECT
/* TODO: The above statement also refreshes when                          * we are not shown (to be verified) - hence                          * not entirely correct. */	DEFECT	0.9983256198684742	DEFECT	0.00167438013152574	WITHOUT_CLASSIFICATION
/* TODO: If this is an ordered list, then you have to                        add in the right location! */	DEFECT	0.7451296745849395	DEFECT	0.25487032541506044	WITHOUT_CLASSIFICATION
// TODO: Considering all delete events to be valid like below // is going to cause lots of unecessary work and some problems	DEFECT	0.6462343950773247	DEFECT	0.3537656049226752	WITHOUT_CLASSIFICATION
// TODO: This is a tagged value name which will never trigger an event	DEFECT	0.9471061707755003	WITHOUT_CLASSIFICATION	0.05289382922449966	DEFECT
/* TODO: correctly implement next function          * in the model subsystem for          * issue 1942: */	DEFECT	0.9376123837158271	DEFECT	0.062387616284173	WITHOUT_CLASSIFICATION
/**     * Tests CopyHelper without using stereotypes.     * <p>     * The test is using the tree of objects:     *      * <pre>     *              model     *              /   \     *            p1     p2     *           /  \     *      class_  nestedPackage     *                \     *                interface_     *                  \     *                  attribute     * </pre>     *      * TODO: This test doesn't match the MDR implementation because it expects     * the contents of a namespace to be copied.  It is disabled until it can     * be fixed to run with both MDR and eUML. - tfm 20070820     *      * @author Bogdan     */	DEFECT	0.6141495601750014	WITHOUT_CLASSIFICATION	0.38585043982499867	DEFECT
// TODO: This doesn't work, but should //        Collection elements = Model.getFacade().getRootElements(); //        Model.getUmlHelper().deleteCollection(elements); //        elements = Model.getFacade().getRootElements(); //        assertTrue("Failed to create clean environment", elements.isEmpty());	DEFECT	0.9999623826908287	DEFECT	3.7617309171275565E-5	WITHOUT_CLASSIFICATION
// TODO: Except this won't work because the names are different which // will cause a test in CheckUMLModelHelper to fail //        remap.put("Core:Permission", "Core:PackageImport");	DEFECT	0.7029315167960476	DEFECT	0.29706848320395235	WITHOUT_CLASSIFICATION
/* TODO: Why does the next part not work? */	DEFECT	0.9995928758822212	DEFECT	4.07124117778765E-4	WITHOUT_CLASSIFICATION
// FIXME: fails here. // The current behavior appears intentional (ie the test is wrong) - tfm //        assertNull("The profile stereotype named \"" //            + ProfileMother.STEREOTYPE_NAME_ST + "\" shouldn't be found.", //            findModelElementFromNamespace( //                StereotypeUtility.getAvailableStereotypes(aClass), //                ProfileMother.STEREOTYPE_NAME_ST, profileModel));	DEFECT	0.5570171674624875	WITHOUT_CLASSIFICATION	0.44298283253751247	DEFECT
// FIXME: the following throws: // org.argouml.model.InvalidElementException:  // javax.jmi.reflect.InvalidObjectException: Object with  // MOFID 127-0-1-1-(...)000E75 no longer exists. //        applicableTagDefs = tagDefCBModel.getApplicableTagDefinitions(aClass); //        assertNotNull("Tag Definition wasn't found in return value of " //            + "tagDefCBModel.getApplicableTagDefinitions(aClass), " //            + "after loading the project.", //            TestStereotypeUtility.findModelElementNamed( //                ProfileMother.TAG_DEFINITION_NAME_TD, applicableTagDefs));	DEFECT	0.9998914473680571	WITHOUT_CLASSIFICATION	1.0855263194283423E-4	DEFECT
// TODO: Something might go wrong during processing. We don't really // want to create the model element until the user releases the mouse // in the place expected.	DEFECT	0.9926503412544919	WITHOUT_CLASSIFICATION	0.0073496587455080305	DEFECT
// TODO: We can't have a global "current" language // NotationProviderFactory2.setCurrentLanguage(newLanguage);	DEFECT	0.742013186337057	WITHOUT_CLASSIFICATION	0.25798681366294307	DEFECT
// TODO: This works for 90 degree angles, but is suboptimal // for other angles. It should reflect the angle, rather // than just using a negative offset along the same vector	DEFECT	0.593014402522152	WITHOUT_CLASSIFICATION	0.40698559747784796	DEFECT
// If we are not visible most likely we're being deleted. // TODO: This indicates a more fundamental problem that  // should be investigated - tfm - 20061230	DEFECT	0.9994545916249263	DEFECT	5.454083750736792E-4	WITHOUT_CLASSIFICATION
//TODO i18n: GEF needs to pass us back the description // of what is being done.	DEFECT	0.9999810917073978	WITHOUT_CLASSIFICATION	1.8908292602143055E-5	DEFECT
// TODO: synchronized is required here as there can be some  // concurrent modification problems when drawing a call message and // having that automatically draw the reply. Maybe fixing the TODO // below will resolve this and the synch can go.	DEFECT	0.9979602387683107	DEFECT	0.0020397612316891845	WITHOUT_CLASSIFICATION
// TODO: Is this next line safe? What happens if there is just one // comment edge or a comment edge and a single message?	DEFECT	0.8995653543270311	DEFECT	0.10043464567296888	WITHOUT_CLASSIFICATION
// else if the y coordinate is outside of the classifier role, // we fix the y in the max y of the classifier role. // FIXME: We should increase the height of the classifier role,  // don't???	DEFECT	0.8545340859189872	DEFECT	0.14546591408101275	WITHOUT_CLASSIFICATION
// TODO: not in UML 2	DEFECT	0.9589565860327586	DEFECT	0.04104341396724137	WITHOUT_CLASSIFICATION
// TODO: Only occurrence of isConcurrent in UML 2.1.1 is in index // it's not on the page that is indexed	DEFECT	0.9902136070577653	WITHOUT_CLASSIFICATION	0.00978639294223478	DEFECT
// TODO: map UML2 names to UML1.x names //$NON-NLS-1$ //$NON-NLS-1$	DEFECT	0.951163598115497	WITHOUT_CLASSIFICATION	0.048836401884502965	DEFECT
// TODO: In UML2.x Event has no parameters. // TODO: Treat ObjectFlowState (this doesn't exist anymore in UML2) // and Classifier	DEFECT	0.7197963427443049	WITHOUT_CLASSIFICATION	0.28020365725569507	DEFECT
// Appears to be gone from UML 2.x	DEFECT	0.9999998214437507	WITHOUT_CLASSIFICATION	1.7855624930726978E-7	DEFECT
// This doesn't work in UML2: both owner and property needed!	DEFECT	0.8408147155330165	WITHOUT_CLASSIFICATION	0.15918528446698352	DEFECT
// This triggers some warnings (in logs) because some elements are // created without an owner (and eResource is null) // TODO: fix this // The warning log (if we would not add the EObject to a resource) would // looks like this: "...WARN [AWT-EventQueue-0] Encountered deleted // object during delete of..."	DEFECT	0.9997083533568099	DEFECT	2.9164664319022954E-4	WITHOUT_CLASSIFICATION
// FIXME: depends on internal behavior of XmiReaderImpl. // Needed for solving issue 5017.	DEFECT	0.999604846782239	WITHOUT_CLASSIFICATION	3.9515321776090905E-4	DEFECT
// TODO: This looks backwards. Left over from issue 2034?	DEFECT	0.6695973577684049	DEFECT	0.3304026422315951	WITHOUT_CLASSIFICATION
// if this is a feature get the owner of that feature // TODO: Does anything actually make use of this? It can // cause unexpected behaviour.	DEFECT	0.8372840674984378	WITHOUT_CLASSIFICATION	0.1627159325015622	DEFECT
// TODO: This should be using internalGetAllRealizedInterfaces()	DEFECT	0.7915606416092137	DEFECT	0.2084393583907863	WITHOUT_CLASSIFICATION
// TODO: Issue 6144. It is proposed to allow any paclage to return as a potential // namespace. Commenting out until this is reviewed and clearly accepted by all.	DEFECT	0.9948985015920021	WITHOUT_CLASSIFICATION	0.005101498407997827	DEFECT
/* Strange, but the Link.getConnection()         * returns a Collection, not a List!         * This is a bug, compared to the UML standard (IMHO, mvw).         * Hence, the LinkEnd is added to the end instead... */	DEFECT	0.8402091200434724	WITHOUT_CLASSIFICATION	0.15979087995652763	DEFECT
// TODO: uncomment the following to get the failure. //        assertLoadModel(ISSUE5946_BASE_DIR + "zipped-uml14" //            + "/andromda-profile-datatype/3.3/andromda-profile-datatype-3.3.xml.zip", //            null, "testReadCompressedAndroMDAProfileFileIssue5946");	DEFECT	0.9639906811272803	WITHOUT_CLASSIFICATION	0.0360093188727197	DEFECT
// if we have anything or multiple elements selected, // we don't do anything // TODO: We need to support multiple selection. // See issue 2552: http://argouml.tigris.org/issues/show_bug.cgi?id=2552	DEFECT	0.8259322994478413	WITHOUT_CLASSIFICATION	0.1740677005521586	DEFECT
/* These next lines for the case that the current namespace         * is not a valid one... Which of course should not happen,         * but it does - see the project attached to issue 3772.         */	DEFECT	0.9903223860251539	WITHOUT_CLASSIFICATION	0.009677613974846209	DEFECT
// make it stretch vertically // TODO: The curBody must notify modification	DEFECT	0.7877802290668996	WITHOUT_CLASSIFICATION	0.21221977093310054	DEFECT
// TODO: Removed from UML2 //$NON-NLS-1$	DEFECT	0.9828796678278637	WITHOUT_CLASSIFICATION	0.01712033217213624	DEFECT
// TODO: Considering all delete events to be valid like below // is going to cause lots of unecessary work and some problems	DEFECT	0.6462343950773247	DEFECT	0.3537656049226752	WITHOUT_CLASSIFICATION
// TODO: When the attribute isn't in the diagram // , for exemple: select attribut by Explorer // Then, the refresh isn't auto: we had to click !!	DEFECT	0.9641083986994843	WITHOUT_CLASSIFICATION	0.03589160130051576	DEFECT
/**     * Builds a message within some interaction related to some assocationrole.     * The message is added as the last in the interaction sequence.     * Furthermore, the message is added as the last to the list of messages     * already attached to the role. Effectively, the already attached messages     * become predecessors of this message.     * TODO: This sets the activator as a side effect. However it is impossible     * to determine the activator at this stage as we don't yet know what the     * action will be of the message we're creating. See issue 5692.     *     * @param inter     *            The Interaction.     * @param role     *            The Association Role.     * @return The newly created Message.     */	DEFECT	0.9170993397001919	DEFECT	0.08290066029980808	WITHOUT_CLASSIFICATION
// XXX this seems to be a bug of the parser, // it always requires a context	DEFECT	0.9197314351012438	WITHOUT_CLASSIFICATION	0.08026856489875622	DEFECT
// If we are not visible most likely // we're being deleted. // TODO: This indicates a more fundamental problem that // should be investigated - tfm - 20061230	DEFECT	0.9950338788446166	DEFECT	0.004966121155383431	WITHOUT_CLASSIFICATION
// TODO: This brute force approach of updating listeners on each // and every event, without checking the event type or any other // information is going to cause lots of InvalidElementExceptions // in subclasses implementations of updateListeners (and they // won't have the event information to make their own decisions)	DEFECT	0.9638901959371092	WITHOUT_CLASSIFICATION	0.036109804062890764	DEFECT
// else if the y coordinate is outside of the classifier role, // we fix the y in the max y of the classifier role. // FIXME: We should increase the height of the classifier role,  // don't???	DEFECT	0.8545340859189872	DEFECT	0.14546591408101275	WITHOUT_CLASSIFICATION
// TODO: This doesn't perform well enough with large models to have // it enabled by default. If the performance can't be improved, // perhaps we can introduce a manual "find in explorer tree" action. // selectAll(targets);	DEFECT	0.7505453779325678	WITHOUT_CLASSIFICATION	0.24945462206743216	DEFECT
// TODO: This only works if the item is visible // (all its parents are expanded) // getExpandedDescendants, makeVisible	DEFECT	0.9826324963309837	DEFECT	0.01736750366901635	WITHOUT_CLASSIFICATION
/*TODO: Make the tree refresh and expand                                     * really work in all cases!                                     */	DEFECT	0.995130834301862	DEFECT	0.004869165698138048	WITHOUT_CLASSIFICATION
/**     * TODO: The code implementing this method is from 2003 (see issue 2171) -     * mechanically integrated by tfmorris in May 2007. Needs to be     * reviewed/updated.     *      * @author Decki,Endi,Yayan, Politechnic of Bandung. Computer Departement     * method for changing text of Message     * @param newOwner model element which should now be listened to     */	DEFECT	0.7335419880404556	WITHOUT_CLASSIFICATION	0.26645801195954444	DEFECT
// TODO do tests for allInstances (8.5.11), // even though it is not yet supported	DEFECT	0.9937126475364557	WITHOUT_CLASSIFICATION	0.00628735246354419	DEFECT
// TODO: not in UML 2	DEFECT	0.9589565860327586	DEFECT	0.04104341396724137	WITHOUT_CLASSIFICATION
// TODO: not in UML 2	DEFECT	0.9589565860327586	DEFECT	0.04104341396724137	WITHOUT_CLASSIFICATION
// TODO: not in UML 2	DEFECT	0.9589565860327586	DEFECT	0.04104341396724137	WITHOUT_CLASSIFICATION
// TODO: not in UML 2	DEFECT	0.9589565860327586	DEFECT	0.04104341396724137	WITHOUT_CLASSIFICATION
// TODO: not in UML 2	DEFECT	0.9589565860327586	DEFECT	0.04104341396724137	WITHOUT_CLASSIFICATION
// TODO: not in UML 2	DEFECT	0.9589565860327586	DEFECT	0.04104341396724137	WITHOUT_CLASSIFICATION
// TODO: not in UML 2	DEFECT	0.9589565860327586	DEFECT	0.04104341396724137	WITHOUT_CLASSIFICATION
/**     * Parse a transition description line of the form:<pre>     *    "event-signature [guard-condition] / action-expression".     * </pre>     *     * A ";" is not interpreted as having any special meaning. <p>     *     * The "event-signature" may be one of the 4     * formats:<ul>     * <li> ChangeEvent: "when(condition)"     * <li> TimeEvent: "after(duration)"     * <li> CallEvent: "a(parameter-list)".     * <li> SignalEvent: any string without ().     * </ul>     *     * Remark: The UML standard does not make a distinction between     * the syntax of a CallEvent and SignalEvent:     * both may have parameters between ().     * For simplicity and user-friendliness, we chose for this distinction.     * If a user wants parameters for a SignalEvent,     * then he may add them in the properties panels, but not on the diagram.     * <p>     *     * An alternative solution would be to create a CallEvent by default,     * and when editing an existing event, do not change the type.<p>     *     * TODO: This function fails when the event-signature contains a "["     * or a "/". See issue 5983 for other cases that were      * a problem in the past.     *     * @param trans the transition object to which this string applies     * @param s     the string to be parsed     * @return      the transition object     * @throws ParseException when no matching [] are found     */	DEFECT	0.978158091153126	WITHOUT_CLASSIFICATION	0.021841908846874016	DEFECT
