// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.9999995902181726	WITHOUT_CLASSIFICATION	4.0978182742269466E-7	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999992910941846	WITHOUT_CLASSIFICATION	7.089058152719186E-7	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.9999999475773225	WITHOUT_CLASSIFICATION	5.242267739791001E-8	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.9999986651352222	WITHOUT_CLASSIFICATION	1.3348647778827478E-6	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.9999991244399833	WITHOUT_CLASSIFICATION	8.755600166901371E-7	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9999929578308692	WITHOUT_CLASSIFICATION	7.04216913089093E-6	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.9999993528307868	WITHOUT_CLASSIFICATION	6.471692132056618E-7	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.9999827854357989	WITHOUT_CLASSIFICATION	1.7214564201099717E-5	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9999975972205211	WITHOUT_CLASSIFICATION	2.402779478949881E-6	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.9999967976182553	WITHOUT_CLASSIFICATION	3.2023817447617493E-6	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999994908630715	WITHOUT_CLASSIFICATION	5.091369284865388E-7	DEFECT
// units	WITHOUT_CLASSIFICATION	0.9999978657714204	WITHOUT_CLASSIFICATION	2.134228579709553E-6	DEFECT
// interval	WITHOUT_CLASSIFICATION	0.9999997088990643	WITHOUT_CLASSIFICATION	2.911009357526031E-7	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999991697573393	WITHOUT_CLASSIFICATION	8.30242660727204E-7	DEFECT
// dial shape	WITHOUT_CLASSIFICATION	0.9999992373776021	WITHOUT_CLASSIFICATION	7.626223978910158E-7	DEFECT
// dial background paint	WITHOUT_CLASSIFICATION	0.9999982256584171	WITHOUT_CLASSIFICATION	1.7743415829348982E-6	DEFECT
// seriesPaint	WITHOUT_CLASSIFICATION	0.9999999341121949	WITHOUT_CLASSIFICATION	6.588780512812815E-8	DEFECT
// seriesPaintList	WITHOUT_CLASSIFICATION	0.9999999518492879	WITHOUT_CLASSIFICATION	4.8150712015462096E-8	DEFECT
// baseSeriesPaint	WITHOUT_CLASSIFICATION	0.9999999614721876	WITHOUT_CLASSIFICATION	3.852781243577161E-8	DEFECT
// seriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999621468846	WITHOUT_CLASSIFICATION	3.7853115468447034E-8	DEFECT
// seriesOutlinePaintList	WITHOUT_CLASSIFICATION	0.9999999723369986	WITHOUT_CLASSIFICATION	2.7663001438722708E-8	DEFECT
// baseSeriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999778654378	WITHOUT_CLASSIFICATION	2.2134562125176602E-8	DEFECT
// seriesOutlineStroke	WITHOUT_CLASSIFICATION	0.9999913771598632	WITHOUT_CLASSIFICATION	8.622840136849908E-6	DEFECT
// seriesOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999939833728163	WITHOUT_CLASSIFICATION	6.0166271837784285E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.999999710793699	WITHOUT_CLASSIFICATION	2.8920630103601686E-7	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999408617547788	WITHOUT_CLASSIFICATION	5.913824522110661E-5	DEFECT
// high	WITHOUT_CLASSIFICATION	0.9999935168320697	WITHOUT_CLASSIFICATION	6.4831679303148866E-6	DEFECT
// low	WITHOUT_CLASSIFICATION	0.9999826539296726	WITHOUT_CLASSIFICATION	1.7346070327441742E-5	DEFECT
// close	WITHOUT_CLASSIFICATION	0.9999997845096653	WITHOUT_CLASSIFICATION	2.154903346725978E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999910054919332	WITHOUT_CLASSIFICATION	8.994508066879857E-6	DEFECT
// there should be no change event when clearing an empty series	WITHOUT_CLASSIFICATION	0.9999983390041169	WITHOUT_CLASSIFICATION	1.6609958829736425E-6	DEFECT
// clean up	WITHOUT_CLASSIFICATION	0.9999997805149476	WITHOUT_CLASSIFICATION	2.1948505242545288E-7	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999996826915163	WITHOUT_CLASSIFICATION	3.173084836278689E-7	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999715636844497	WITHOUT_CLASSIFICATION	2.8436315550338392E-5	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999986321886333	WITHOUT_CLASSIFICATION	1.3678113667628158E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999995619430513	WITHOUT_CLASSIFICATION	4.3805694868471003E-7	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.999995830099615	WITHOUT_CLASSIFICATION	4.1699003849269134E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999985751251291	WITHOUT_CLASSIFICATION	1.4248748707762862E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632867385	WITHOUT_CLASSIFICATION	1.633671326149796E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632867385	WITHOUT_CLASSIFICATION	1.633671326149796E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632867385	WITHOUT_CLASSIFICATION	1.633671326149796E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632867385	WITHOUT_CLASSIFICATION	1.633671326149796E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632867385	WITHOUT_CLASSIFICATION	1.633671326149796E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632867385	WITHOUT_CLASSIFICATION	1.633671326149796E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632867385	WITHOUT_CLASSIFICATION	1.633671326149796E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632867385	WITHOUT_CLASSIFICATION	1.633671326149796E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632867385	WITHOUT_CLASSIFICATION	1.633671326149796E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632867385	WITHOUT_CLASSIFICATION	1.633671326149796E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632867385	WITHOUT_CLASSIFICATION	1.633671326149796E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632867385	WITHOUT_CLASSIFICATION	1.633671326149796E-5	DEFECT
// super.drawSecondaryPass(g2, plot, dataset, pass, series, item, // domainAxis, dataArea, rangeAxis, crosshairState, entities);	WITHOUT_CLASSIFICATION	0.9999996776051145	WITHOUT_CLASSIFICATION	3.2239488542035694E-7	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999999529945774	WITHOUT_CLASSIFICATION	4.700542260792081E-8	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999999529945774	WITHOUT_CLASSIFICATION	4.700542260792081E-8	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999999529945774	WITHOUT_CLASSIFICATION	4.700542260792081E-8	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.999995594954941	WITHOUT_CLASSIFICATION	4.405045059057714E-6	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999994631587	WITHOUT_CLASSIFICATION	5.368414114140661E-10	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999997735093926	WITHOUT_CLASSIFICATION	2.2649060736010424E-7	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999996378841204	WITHOUT_CLASSIFICATION	3.621158796457894E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.999999638516816	WITHOUT_CLASSIFICATION	3.6148318406290394E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.999999638516816	WITHOUT_CLASSIFICATION	3.6148318406290394E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.999999638516816	WITHOUT_CLASSIFICATION	3.6148318406290394E-7	DEFECT
// we clone the chart because presumably there can be some delay // between putting this instance on the system clipboard and // actually having the getTransferData() method called...	WITHOUT_CLASSIFICATION	0.9999999999808267	WITHOUT_CLASSIFICATION	1.9173295987626754E-11	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999999748063271	WITHOUT_CLASSIFICATION	2.5193672932124658E-8	DEFECT
// create a legend, if requested...	WITHOUT_CLASSIFICATION	0.9999970925513063	WITHOUT_CLASSIFICATION	2.9074486937752514E-6	DEFECT
// pass the click on to the plot... // rely on the plot to post a plot change event and redraw the chart...	WITHOUT_CLASSIFICATION	0.9996983899773059	WITHOUT_CLASSIFICATION	3.016100226941413E-4	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9999964570262634	WITHOUT_CLASSIFICATION	3.5429737365971936E-6	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999996277436398	WITHOUT_CLASSIFICATION	3.7225636010393243E-7	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999964277741401	WITHOUT_CLASSIFICATION	3.5722258598433625E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999996136270507	WITHOUT_CLASSIFICATION	3.8637294928792766E-7	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999996136270507	WITHOUT_CLASSIFICATION	3.8637294928792766E-7	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.9999717438835921	WITHOUT_CLASSIFICATION	2.825611640790236E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9991816955061913	WITHOUT_CLASSIFICATION	8.183044938087556E-4	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9991816955061913	WITHOUT_CLASSIFICATION	8.183044938087556E-4	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9991816955061913	WITHOUT_CLASSIFICATION	8.183044938087556E-4	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9991816955061913	WITHOUT_CLASSIFICATION	8.183044938087556E-4	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999998231976522	WITHOUT_CLASSIFICATION	1.7680234773050507E-7	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9999905277473403	WITHOUT_CLASSIFICATION	9.472252659699481E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999915411992173	WITHOUT_CLASSIFICATION	8.458800782670193E-6	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.9991086951576087	WITHOUT_CLASSIFICATION	8.913048423911982E-4	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999992559955534	WITHOUT_CLASSIFICATION	7.440044466849801E-7	DEFECT
// work out the number of periods to skip for labelling	WITHOUT_CLASSIFICATION	0.9999693192346423	WITHOUT_CLASSIFICATION	3.068076535759708E-5	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999791586192778	WITHOUT_CLASSIFICATION	2.0841380722214835E-5	DEFECT
// set flag true if negative values not allowed and the // lower bound is between 0 and 10:	WITHOUT_CLASSIFICATION	0.9999969493760835	WITHOUT_CLASSIFICATION	3.0506239164319013E-6	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9999982198335098	WITHOUT_CLASSIFICATION	1.7801664902222698E-6	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.9999996606364789	WITHOUT_CLASSIFICATION	3.3936352106988853E-7	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.999999202785727	WITHOUT_CLASSIFICATION	7.972142731939945E-7	DEFECT
//if less than 1.0 then make it 1.0 //subtract out margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9999997827798549	WITHOUT_CLASSIFICATION	2.1722014501613418E-7	DEFECT
//negatives not allowed and lower range bound is zero //use data range bound instead	WITHOUT_CLASSIFICATION	0.9999961160328886	WITHOUT_CLASSIFICATION	3.88396711140337E-6	DEFECT
//get positive exponent //create multiplier value //multiply, round up, and divide for bound value:	WITHOUT_CLASSIFICATION	0.9999995940334855	WITHOUT_CLASSIFICATION	4.0596651447690563E-7	DEFECT
//negatives allowed or upper bound not between 0 & 1 //if flag then change to log version of highest value to // make range begin at a 10^n value; else use nearest int	WITHOUT_CLASSIFICATION	0.9999984597589382	WITHOUT_CLASSIFICATION	1.5402410617038559E-6	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999996501635335	WITHOUT_CLASSIFICATION	3.498364663730527E-7	DEFECT
//first tick of series, or not too small a value and // one of first 3 ticks, or last tick to be displayed // set exact number of fractional digits to be shown // (no effect if showing "1e#"-style ticks):	WITHOUT_CLASSIFICATION	0.9999547684729175	WITHOUT_CLASSIFICATION	4.523152708252327E-5	DEFECT
//did zero tick last iteration //clear flag //create tick label string: //show tick label if "1e#"-style and it's one // of the first two, if it's the first or last // in the set, or if it's 1-5; beyond that // show fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999999954382535	WITHOUT_CLASSIFICATION	4.5617464465887105E-9	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.9999961668075908	WITHOUT_CLASSIFICATION	3.833192409146697E-6	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.9999961668075908	WITHOUT_CLASSIFICATION	3.833192409146697E-6	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999898938094146	WITHOUT_CLASSIFICATION	1.0106190585348668E-5	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.9999895440626777	WITHOUT_CLASSIFICATION	1.0455937322242437E-5	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999890455127575	WITHOUT_CLASSIFICATION	1.0954487242446282E-5	DEFECT
// we call refresh ticks just to get the maximum width or height	WITHOUT_CLASSIFICATION	0.9999991995888039	WITHOUT_CLASSIFICATION	8.004111960304482E-7	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.9999989096181158	WITHOUT_CLASSIFICATION	1.0903818842657497E-6	DEFECT
// cycle through all the segments contained in the BaseTimeline // exception segment	WITHOUT_CLASSIFICATION	0.9999998843373851	WITHOUT_CLASSIFICATION	1.1566261499730708E-7	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.9999938975229722	WITHOUT_CLASSIFICATION	6.102477027837636E-6	DEFECT
// first test for equality (contains or contained)	WITHOUT_CLASSIFICATION	0.9999999684387707	WITHOUT_CLASSIFICATION	3.156122933113915E-8	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.9999183377510257	WITHOUT_CLASSIFICATION	8.166224897441538E-5	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9999999558465795	WITHOUT_CLASSIFICATION	4.4153420614863334E-8	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999743373657688	WITHOUT_CLASSIFICATION	2.566263423117773E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999855440351092	WITHOUT_CLASSIFICATION	1.4455964890822643E-5	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999915725323	WITHOUT_CLASSIFICATION	8.427467749849676E-9	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9997902616955401	WITHOUT_CLASSIFICATION	2.0973830445992705E-4	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999963939981141	WITHOUT_CLASSIFICATION	3.606001885940214E-6	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999963939981141	WITHOUT_CLASSIFICATION	3.606001885940214E-6	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999999979221349	WITHOUT_CLASSIFICATION	2.0778651021830923E-9	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999986911097706	WITHOUT_CLASSIFICATION	1.3088902294000686E-6	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9999859855702627	WITHOUT_CLASSIFICATION	1.4014429737249485E-5	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.999843377987876	WITHOUT_CLASSIFICATION	1.5662201212404038E-4	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.999995580212436	WITHOUT_CLASSIFICATION	4.419787564067809E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999821788591	WITHOUT_CLASSIFICATION	1.782114085571408E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999821788591	WITHOUT_CLASSIFICATION	1.782114085571408E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999821788591	WITHOUT_CLASSIFICATION	1.782114085571408E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999821788591	WITHOUT_CLASSIFICATION	1.782114085571408E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999821788591	WITHOUT_CLASSIFICATION	1.782114085571408E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999821788591	WITHOUT_CLASSIFICATION	1.782114085571408E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999821788591	WITHOUT_CLASSIFICATION	1.782114085571408E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999821788591	WITHOUT_CLASSIFICATION	1.782114085571408E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999821788591	WITHOUT_CLASSIFICATION	1.782114085571408E-8	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.999999356637462	WITHOUT_CLASSIFICATION	6.433625381021043E-7	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.999999356637462	WITHOUT_CLASSIFICATION	6.433625381021043E-7	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999997073636852	WITHOUT_CLASSIFICATION	2.926363148083885E-7	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999997073636852	WITHOUT_CLASSIFICATION	2.926363148083885E-7	DEFECT
//no initial zoom rectangle exists but the handler is set //as life handler unregister	WITHOUT_CLASSIFICATION	0.9999999859638197	WITHOUT_CLASSIFICATION	1.4036180286360108E-8	DEFECT
//float midX = (float) (minX + (plotArea.getWidth() * getRotateX())); //float midY = (float) (minY + (plotArea.getHeight() * getRotateY()));	WITHOUT_CLASSIFICATION	0.9999745470246401	WITHOUT_CLASSIFICATION	2.5452975359914582E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.999981314528517	WITHOUT_CLASSIFICATION	1.8685471483066762E-5	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.999999052769354	WITHOUT_CLASSIFICATION	9.472306460601766E-7	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.999999052769354	WITHOUT_CLASSIFICATION	9.472306460601766E-7	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9998766294128537	WITHOUT_CLASSIFICATION	1.2337058714632828E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999043243943664	WITHOUT_CLASSIFICATION	9.567560563367919E-5	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.9999974823161465	WITHOUT_CLASSIFICATION	2.517683853399914E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999992119973977	WITHOUT_CLASSIFICATION	7.880026023594222E-7	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999992119973977	WITHOUT_CLASSIFICATION	7.880026023594222E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999967820146742	WITHOUT_CLASSIFICATION	3.217985325889264E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999967820146742	WITHOUT_CLASSIFICATION	3.217985325889264E-6	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999999939250497	WITHOUT_CLASSIFICATION	6.07495034945467E-9	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999999828250322	WITHOUT_CLASSIFICATION	1.717496768084195E-8	DEFECT
// if we are drawing a perfect circle, we need to readjust the top left // coordinates of the drawing area for the arcs to arrive at this // effect.	WITHOUT_CLASSIFICATION	0.9999999924714145	WITHOUT_CLASSIFICATION	7.52858556551304E-9	DEFECT
// establish the coordinates of the top left corner of the drawing area	WITHOUT_CLASSIFICATION	0.9999999993168132	WITHOUT_CLASSIFICATION	6.831867732286857E-10	DEFECT
// draw the sections at the top of the pie (and set up tooltips)...	WITHOUT_CLASSIFICATION	0.9999996885467659	WITHOUT_CLASSIFICATION	3.114532340891352E-7	DEFECT
// the pie sections are arranged ANTICLOCKWISE	WITHOUT_CLASSIFICATION	0.9999997523029497	WITHOUT_CLASSIFICATION	2.476970502492216E-7	DEFECT
// starts at the back and finishes at the front // (wrapping the left side)	WITHOUT_CLASSIFICATION	0.9999894369626909	WITHOUT_CLASSIFICATION	1.0563037309130088E-5	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.999999031648423	WITHOUT_CLASSIFICATION	9.6835157710411E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989325001374	WITHOUT_CLASSIFICATION	1.067499862707964E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989325001374	WITHOUT_CLASSIFICATION	1.067499862707964E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989325001374	WITHOUT_CLASSIFICATION	1.067499862707964E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989325001374	WITHOUT_CLASSIFICATION	1.067499862707964E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989325001374	WITHOUT_CLASSIFICATION	1.067499862707964E-6	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.999999823295781	WITHOUT_CLASSIFICATION	1.7670421909466024E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999957180524236	WITHOUT_CLASSIFICATION	4.281947576408739E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999957180524236	WITHOUT_CLASSIFICATION	4.281947576408739E-5	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999988070915	WITHOUT_CLASSIFICATION	1.1929086191605705E-9	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999989188104632	WITHOUT_CLASSIFICATION	1.0811895368657408E-6	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999989188104632	WITHOUT_CLASSIFICATION	1.0811895368657408E-6	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9999640535309513	WITHOUT_CLASSIFICATION	3.5946469048623595E-5	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9999640535309513	WITHOUT_CLASSIFICATION	3.5946469048623595E-5	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999999874894028	WITHOUT_CLASSIFICATION	1.251059714829531E-8	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999961628087	WITHOUT_CLASSIFICATION	3.837191410588407E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999961628087	WITHOUT_CLASSIFICATION	3.837191410588407E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999961628087	WITHOUT_CLASSIFICATION	3.837191410588407E-9	DEFECT
// the explode area defines the max circle/ellipse for the exploded // pie sections.  it is defined by shrinking the linkArea by the // linkMargin factor.	WITHOUT_CLASSIFICATION	0.9999998618949557	WITHOUT_CLASSIFICATION	1.3810504430522298E-7	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9999759462018849	WITHOUT_CLASSIFICATION	2.4053798115008464E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999970760783851	WITHOUT_CLASSIFICATION	2.923921615004492E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999970760783851	WITHOUT_CLASSIFICATION	2.923921615004492E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999970760783851	WITHOUT_CLASSIFICATION	2.923921615004492E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999970760783851	WITHOUT_CLASSIFICATION	2.923921615004492E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999970760783851	WITHOUT_CLASSIFICATION	2.923921615004492E-6	DEFECT
// no axis, no gridlines...	WITHOUT_CLASSIFICATION	0.9999998665049437	WITHOUT_CLASSIFICATION	1.334950562567144E-7	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999759132395707	WITHOUT_CLASSIFICATION	2.408676042933453E-5	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999759132395707	WITHOUT_CLASSIFICATION	2.408676042933453E-5	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9999948503680104	WITHOUT_CLASSIFICATION	5.149631989610684E-6	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999950968141322	WITHOUT_CLASSIFICATION	4.903185867706255E-6	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999950968141322	WITHOUT_CLASSIFICATION	4.903185867706255E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999995476321901	WITHOUT_CLASSIFICATION	4.523678098187787E-7	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999991698111387	WITHOUT_CLASSIFICATION	8.301888613490488E-7	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999991698111387	WITHOUT_CLASSIFICATION	8.301888613490488E-7	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999991698111387	WITHOUT_CLASSIFICATION	8.301888613490488E-7	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999995873539774	WITHOUT_CLASSIFICATION	4.1264602255690294E-7	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999995873539774	WITHOUT_CLASSIFICATION	4.1264602255690294E-7	DEFECT
// the indicator bounds is calculated from the templateValue (which // determines the minimum size), the maxTemplateValue (which, if // specified, provides a maximum size) and the actual value	WITHOUT_CLASSIFICATION	0.9999999925676749	WITHOUT_CLASSIFICATION	7.4323251128057446E-9	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999998898499337	WITHOUT_CLASSIFICATION	1.1015006629734186E-7	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999998898499337	WITHOUT_CLASSIFICATION	1.1015006629734186E-7	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999965764457487	WITHOUT_CLASSIFICATION	3.423554251409287E-6	DEFECT
// majorTickIncrement // majorTickLength // majorTickPaint // majorTickStroke // minorTickCount // minorTickLength // minorTickPaint // minorTickStroke // tickLabelOffset // tickLabelFont // tickLabelsVisible // tickLabelFormatter // firstTickLabelsVisible	WITHOUT_CLASSIFICATION	0.999999655540403	WITHOUT_CLASSIFICATION	3.4445959694584603E-7	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999885085596817	WITHOUT_CLASSIFICATION	1.1491440318248819E-5	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9999970260726773	WITHOUT_CLASSIFICATION	2.973927322670809E-6	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.999998616841281	WITHOUT_CLASSIFICATION	1.3831587190544558E-6	DEFECT
// itemLabelFontList // baseItemLabelFont // itemLabelPaintList // baseItemLabelPaint // positiveItemLabelPositionList // basePositiveItemLabelPosition // negativeItemLabelPositionList // baseNegativeItemLabelPosition // itemLabelAnchorOffset // createEntityList // baseCreateEntities	WITHOUT_CLASSIFICATION	0.9999999970507572	WITHOUT_CLASSIFICATION	2.9492428748655523E-9	DEFECT
// for value in bounds, do the lookup...	WITHOUT_CLASSIFICATION	0.9999954176506313	WITHOUT_CLASSIFICATION	4.582349368764368E-6	DEFECT
// for data in ascending order by x-value, we are (broadly) looking // for the index of the highest x-value that is less than xLow	WITHOUT_CLASSIFICATION	0.9999999251861521	WITHOUT_CLASSIFICATION	7.48138479071432E-8	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any trailing values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.9999133515098393	WITHOUT_CLASSIFICATION	8.664849016070712E-5	DEFECT
// leave the y values (y1, y0) untranslated as it is going to be be // stacked up later by previous series values, after this it will be // translated.	WITHOUT_CLASSIFICATION	0.999992191055832	WITHOUT_CLASSIFICATION	7.808944167989836E-6	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999923270725	WITHOUT_CLASSIFICATION	7.67292745207607E-9	DEFECT
// FIXME: calculate xx0	WITHOUT_CLASSIFICATION	0.6151738250369356	DEFECT	0.38482617496306437	WITHOUT_CLASSIFICATION
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999997929976909	WITHOUT_CLASSIFICATION	2.070023091082377E-7	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999976306395307	WITHOUT_CLASSIFICATION	2.369360469301187E-6	DEFECT
// wait till we are at the last item for the row then draw the // whole stack at once	WITHOUT_CLASSIFICATION	0.9999935634901362	WITHOUT_CLASSIFICATION	6.436509863810704E-6	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9999953231288633	WITHOUT_CLASSIFICATION	4.676871136679625E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999993351822021	WITHOUT_CLASSIFICATION	6.648177980222687E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999993351822021	WITHOUT_CLASSIFICATION	6.648177980222687E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999993351822021	WITHOUT_CLASSIFICATION	6.648177980222687E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999993351822021	WITHOUT_CLASSIFICATION	6.648177980222687E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999993351822021	WITHOUT_CLASSIFICATION	6.648177980222687E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999993351822021	WITHOUT_CLASSIFICATION	6.648177980222687E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999993351822021	WITHOUT_CLASSIFICATION	6.648177980222687E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999993351822021	WITHOUT_CLASSIFICATION	6.648177980222687E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999993351822021	WITHOUT_CLASSIFICATION	6.648177980222687E-7	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999869559581777	WITHOUT_CLASSIFICATION	1.3044041822304304E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999560665588388	WITHOUT_CLASSIFICATION	4.393344116114735E-5	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999992431720478	WITHOUT_CLASSIFICATION	7.568279521341936E-7	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999992431720478	WITHOUT_CLASSIFICATION	7.568279521341936E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999993717191491	WITHOUT_CLASSIFICATION	6.282808508989739E-7	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999776329509634	WITHOUT_CLASSIFICATION	2.236704903650718E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999776329509634	WITHOUT_CLASSIFICATION	2.236704903650718E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999776329509634	WITHOUT_CLASSIFICATION	2.236704903650718E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999932104504348	WITHOUT_CLASSIFICATION	6.789549565150983E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999575184564599	WITHOUT_CLASSIFICATION	4.2481543540175896E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999575184564599	WITHOUT_CLASSIFICATION	4.2481543540175896E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999575184564599	WITHOUT_CLASSIFICATION	4.2481543540175896E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999575184564599	WITHOUT_CLASSIFICATION	4.2481543540175896E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999575184564599	WITHOUT_CLASSIFICATION	4.2481543540175896E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999575184564599	WITHOUT_CLASSIFICATION	4.2481543540175896E-5	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999747705813038	WITHOUT_CLASSIFICATION	2.5229418696111292E-5	DEFECT
// FIXME: add setBaseItemLabelGenerator(CategoryItemLabelGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.9928627447003094	WITHOUT_CLASSIFICATION	0.007137255299690581	DEFECT
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999996213852732	WITHOUT_CLASSIFICATION	3.786147268099867E-6	DEFECT
// last series, so we are ready to draw the min and max	WITHOUT_CLASSIFICATION	0.9999999487378943	WITHOUT_CLASSIFICATION	5.126210561162248E-8	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.999989064817145	WITHOUT_CLASSIFICATION	1.0935182855018443E-5	DEFECT
// From outlier array sort out which are outliers and put these into a // list If there are any farouts, set the flag on the // OutlierListCollection	WITHOUT_CLASSIFICATION	0.999999961669126	WITHOUT_CLASSIFICATION	3.8330873960408185E-8	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999686804188483	WITHOUT_CLASSIFICATION	3.1319581151666025E-5	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999686804188483	WITHOUT_CLASSIFICATION	3.1319581151666025E-5	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999997354357556	WITHOUT_CLASSIFICATION	2.645642444504054E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999997354357556	WITHOUT_CLASSIFICATION	2.645642444504054E-7	DEFECT
// check if initial polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.9999957468229278	WITHOUT_CLASSIFICATION	4.253177072186225E-6	DEFECT
// never updated the subtrahend if it is implied to be zero	WITHOUT_CLASSIFICATION	0.999999987479505	WITHOUT_CLASSIFICATION	1.2520494983188478E-8	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999998236849009	WITHOUT_CLASSIFICATION	1.7631509902791322E-7	DEFECT
// clear the point vectors	WITHOUT_CLASSIFICATION	0.9999999453159515	WITHOUT_CLASSIFICATION	5.468404856057715E-8	DEFECT
//// ITEM LABELS VISIBLE //////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999942004787232	WITHOUT_CLASSIFICATION	5.799521276824435E-6	DEFECT
// we don't need the sign	WITHOUT_CLASSIFICATION	0.9999473366714158	WITHOUT_CLASSIFICATION	5.2663328584098956E-5	DEFECT
// fillType == TO_UPPER_BOUND	WITHOUT_CLASSIFICATION	0.9999953744262106	WITHOUT_CLASSIFICATION	4.625573789346942E-6	DEFECT
/*      solve linear system with tridiagonal n by n matrix a        using Gaussian elimination *without* pivoting        where   a(i,i-1) = sub[i]  for 2<=i<=n        a(i,i)   = diag[i] for 1<=i<=n        a(i,i+1) = sup[i]  for 1<=i<=n-1        (the values sub[1], sup[n] are ignored)        right hand side vector b[1:n] is overwritten with solution        NOTE: 1...n is used in all arrays, 0 is unused */	WITHOUT_CLASSIFICATION	0.9999999945750226	WITHOUT_CLASSIFICATION	5.424977376885895E-9	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9999918491266164	WITHOUT_CLASSIFICATION	8.150873383540747E-6	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.9999995984421834	WITHOUT_CLASSIFICATION	4.0155781660510157E-7	DEFECT
//  Check that the graph being served was created by the current user //  or that it begins with "public"	WITHOUT_CLASSIFICATION	0.9999998434925852	WITHOUT_CLASSIFICATION	1.5650741476963796E-7	DEFECT
// the textAlignment and the horizontalAlignment are separate things, // but it makes sense for the default textAlignment to match the // title's horizontal alignment...	WITHOUT_CLASSIFICATION	0.9999996114380874	WITHOUT_CLASSIFICATION	3.8856191257665773E-7	DEFECT
// we don't use the calendar or numberFormat fields, but equals(Object) // is failing without them being non-null	WITHOUT_CLASSIFICATION	0.9956909744880658	WITHOUT_CLASSIFICATION	0.004309025511934254	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9984810005421644	WITHOUT_CLASSIFICATION	0.0015189994578355941	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9984810005421644	WITHOUT_CLASSIFICATION	0.0015189994578355941	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.9999999224453258	WITHOUT_CLASSIFICATION	7.755467422115508E-8	DEFECT
// now fetch the row data - need to bear in mind that the row // structure may not have an entry for the column key, but that we // have already checked that the key is valid for the 2D structure	WITHOUT_CLASSIFICATION	0.9999997435542258	WITHOUT_CLASSIFICATION	2.564457741580246E-7	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999952246053	WITHOUT_CLASSIFICATION	4.775394814779565E-9	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999952246053	WITHOUT_CLASSIFICATION	4.775394814779565E-9	DEFECT
// set up the series names...	WITHOUT_CLASSIFICATION	0.9999995303839927	WITHOUT_CLASSIFICATION	4.696160073168172E-7	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.9999807679155925	WITHOUT_CLASSIFICATION	1.9232084407365447E-5	DEFECT
//create a temporary vector // set x to some arbitary value (used below)	WITHOUT_CLASSIFICATION	0.9999999936806591	WITHOUT_CLASSIFICATION	6.319340972470372E-9	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.9899129469911847	WITHOUT_CLASSIFICATION	0.010087053008815355	DEFECT
//  Iterate and find all keys below threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9999894505309036	WITHOUT_CLASSIFICATION	1.0549469096336663E-5	DEFECT
// handle special case of BoxAndWhiskerDataset	WITHOUT_CLASSIFICATION	0.9999995719978598	WITHOUT_CLASSIFICATION	4.2800214012416026E-7	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999998316376352	WITHOUT_CLASSIFICATION	1.6836236485833348E-7	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999687418157257	WITHOUT_CLASSIFICATION	3.12581842744103E-5	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999687418157257	WITHOUT_CLASSIFICATION	3.12581842744103E-5	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999895989982671	WITHOUT_CLASSIFICATION	1.0401001732884699E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999983597558658	WITHOUT_CLASSIFICATION	1.6402441342745956E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999983597558658	WITHOUT_CLASSIFICATION	1.6402441342745956E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999983597558658	WITHOUT_CLASSIFICATION	1.6402441342745956E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999983597558658	WITHOUT_CLASSIFICATION	1.6402441342745956E-6	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.982354595048642	WITHOUT_CLASSIFICATION	0.017645404951358044	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999973207438976	WITHOUT_CLASSIFICATION	2.6792561024340245E-6	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999973207438976	WITHOUT_CLASSIFICATION	2.6792561024340245E-6	DEFECT
// The next 3 functions override the base-class implementation of // the DomainInfo interface.  Using saved limits (updated by // each updateTime() call), improves performance. //	WITHOUT_CLASSIFICATION	0.9999881460983627	WITHOUT_CLASSIFICATION	1.1853901637172882E-5	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999999457928535	WITHOUT_CLASSIFICATION	5.420714652579493E-8	DEFECT
// alternatively, sometimes the first few days of the year are // considered to fall in the *last* week of the previous year...	WITHOUT_CLASSIFICATION	0.9999986132498572	WITHOUT_CLASSIFICATION	1.3867501428541995E-6	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999854746057	WITHOUT_CLASSIFICATION	1.4525394412561202E-8	DEFECT
// if the series is sorted, the negative index is a result from // Collections.binarySearch() and tells us where to insert the // new item...otherwise it will be just -1 and we should just // append the value to the list...	WITHOUT_CLASSIFICATION	0.9999992106248138	WITHOUT_CLASSIFICATION	7.893751861177905E-7	DEFECT
// pass mouse move event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.999999930528212	WITHOUT_CLASSIFICATION	6.947178793883219E-8	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999429999692734	WITHOUT_CLASSIFICATION	5.7000030726676794E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999429999692734	WITHOUT_CLASSIFICATION	5.7000030726676794E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999429999692734	WITHOUT_CLASSIFICATION	5.7000030726676794E-5	DEFECT
// chart title // domain axis label // range axis label // data // orientation // include legend // tooltips? // URLs?	WITHOUT_CLASSIFICATION	0.9999999859594927	WITHOUT_CLASSIFICATION	1.4040507184558899E-8	DEFECT
// the SWTGraphics2D class doesn't handle GradientPaint well, so // replace the gradient painter from the default theme with a // standard painter...	WITHOUT_CLASSIFICATION	0.9999999949593997	WITHOUT_CLASSIFICATION	5.040600286740801E-9	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999999381312333	WITHOUT_CLASSIFICATION	6.186876665041095E-8	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999999109681977	WITHOUT_CLASSIFICATION	8.90318023042428E-8	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.9999999977808989	WITHOUT_CLASSIFICATION	2.219101078024301E-9	DEFECT
// row 2: outline color	WITHOUT_CLASSIFICATION	0.9999709634141839	WITHOUT_CLASSIFICATION	2.9036585816152113E-5	DEFECT
// Use a SwtPaintCanvas to show the color, note that we must set the // heightHint.	WITHOUT_CLASSIFICATION	0.9999997415454983	WITHOUT_CLASSIFICATION	2.584545016134189E-7	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999991130733075	WITHOUT_CLASSIFICATION	8.869266924822745E-7	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999991130733075	WITHOUT_CLASSIFICATION	8.869266924822745E-7	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999991130733075	WITHOUT_CLASSIFICATION	8.869266924822745E-7	DEFECT
// now create a new title and replace the existing title, several // things should happen: // (1) Adding the new title should trigger an immediate //     ChartChangeEvent; // (2) Modifying the new title should trigger a ChartChangeEvent; // (3) Modifying the old title should NOT trigger a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.9999958749907444	WITHOUT_CLASSIFICATION	4.12500925561256E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999996627359561	WITHOUT_CLASSIFICATION	3.372640439017323E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999996627359561	WITHOUT_CLASSIFICATION	3.372640439017323E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999996627359561	WITHOUT_CLASSIFICATION	3.372640439017323E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999996627359561	WITHOUT_CLASSIFICATION	3.372640439017323E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999996627359561	WITHOUT_CLASSIFICATION	3.372640439017323E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999996627359561	WITHOUT_CLASSIFICATION	3.372640439017323E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999996627359561	WITHOUT_CLASSIFICATION	3.372640439017323E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999996627359561	WITHOUT_CLASSIFICATION	3.372640439017323E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999996627359561	WITHOUT_CLASSIFICATION	3.372640439017323E-6	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999986321886333	WITHOUT_CLASSIFICATION	1.3678113667628158E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999994088845096	WITHOUT_CLASSIFICATION	5.911154905087713E-7	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999994088845096	WITHOUT_CLASSIFICATION	5.911154905087713E-7	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999994088845096	WITHOUT_CLASSIFICATION	5.911154905087713E-7	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999994381759865	WITHOUT_CLASSIFICATION	5.618240135164826E-7	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999854387360324	WITHOUT_CLASSIFICATION	1.4561263967606654E-5	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999854387360324	WITHOUT_CLASSIFICATION	1.4561263967606654E-5	DEFECT
//gridBandPaint	WITHOUT_CLASSIFICATION	0.999988728363873	WITHOUT_CLASSIFICATION	1.127163612700819E-5	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.9999995433825131	WITHOUT_CLASSIFICATION	4.566174869550879E-7	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.9999999312655261	WITHOUT_CLASSIFICATION	6.873447384136693E-8	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.9999996972887006	WITHOUT_CLASSIFICATION	3.027112993443262E-7	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.9999999366094645	WITHOUT_CLASSIFICATION	6.339053545487634E-8	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999959635658641	WITHOUT_CLASSIFICATION	4.036434135856703E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999985751251291	WITHOUT_CLASSIFICATION	1.4248748707762862E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999985751251291	WITHOUT_CLASSIFICATION	1.4248748707762862E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999985751251291	WITHOUT_CLASSIFICATION	1.4248748707762862E-6	DEFECT
// ok, exception is expected	WITHOUT_CLASSIFICATION	0.9999960001570805	WITHOUT_CLASSIFICATION	3.999842919560319E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999715636844497	WITHOUT_CLASSIFICATION	2.8436315550338392E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662895915	WITHOUT_CLASSIFICATION	3.5033710408440565E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662895915	WITHOUT_CLASSIFICATION	3.5033710408440565E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662895915	WITHOUT_CLASSIFICATION	3.5033710408440565E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662895915	WITHOUT_CLASSIFICATION	3.5033710408440565E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662895915	WITHOUT_CLASSIFICATION	3.5033710408440565E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662895915	WITHOUT_CLASSIFICATION	3.5033710408440565E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662895915	WITHOUT_CLASSIFICATION	3.5033710408440565E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662895915	WITHOUT_CLASSIFICATION	3.5033710408440565E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662895915	WITHOUT_CLASSIFICATION	3.5033710408440565E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662895915	WITHOUT_CLASSIFICATION	3.5033710408440565E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662895915	WITHOUT_CLASSIFICATION	3.5033710408440565E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662895915	WITHOUT_CLASSIFICATION	3.5033710408440565E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662895915	WITHOUT_CLASSIFICATION	3.5033710408440565E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662895915	WITHOUT_CLASSIFICATION	3.5033710408440565E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662895915	WITHOUT_CLASSIFICATION	3.5033710408440565E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662895915	WITHOUT_CLASSIFICATION	3.5033710408440565E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662895915	WITHOUT_CLASSIFICATION	3.5033710408440565E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662895915	WITHOUT_CLASSIFICATION	3.5033710408440565E-5	DEFECT
// dateFormatOverride	WITHOUT_CLASSIFICATION	0.9999985199369639	WITHOUT_CLASSIFICATION	1.480063036137232E-6	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999994908630715	WITHOUT_CLASSIFICATION	5.091369284865388E-7	DEFECT
// check that setting the max date to something on or before the // current min date works...	WITHOUT_CLASSIFICATION	0.9998676956753499	WITHOUT_CLASSIFICATION	1.3230432465007104E-4	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999984027762142	WITHOUT_CLASSIFICATION	1.5972237858213584E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999984027762142	WITHOUT_CLASSIFICATION	1.5972237858213584E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999984027762142	WITHOUT_CLASSIFICATION	1.5972237858213584E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999984027762142	WITHOUT_CLASSIFICATION	1.5972237858213584E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999984027762142	WITHOUT_CLASSIFICATION	1.5972237858213584E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999984027762142	WITHOUT_CLASSIFICATION	1.5972237858213584E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999984027762142	WITHOUT_CLASSIFICATION	1.5972237858213584E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999984027762142	WITHOUT_CLASSIFICATION	1.5972237858213584E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999984027762142	WITHOUT_CLASSIFICATION	1.5972237858213584E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999983746913298	WITHOUT_CLASSIFICATION	1.6253086702429577E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999983746913298	WITHOUT_CLASSIFICATION	1.6253086702429577E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999976177279501	WITHOUT_CLASSIFICATION	2.382272049869478E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999976177279501	WITHOUT_CLASSIFICATION	2.382272049869478E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999974486926528	WITHOUT_CLASSIFICATION	2.551307347167356E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999974486926528	WITHOUT_CLASSIFICATION	2.551307347167356E-6	DEFECT
//private boolean autoRangeStickyZero;	WITHOUT_CLASSIFICATION	0.9999989595634091	WITHOUT_CLASSIFICATION	1.0404365908081886E-6	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999996998648987	WITHOUT_CLASSIFICATION	3.0013510136564777E-7	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999996998648987	WITHOUT_CLASSIFICATION	3.0013510136564777E-7	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.9999995002479437	WITHOUT_CLASSIFICATION	4.997520563855552E-7	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999999356106155	WITHOUT_CLASSIFICATION	6.438938449404047E-8	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999999356106155	WITHOUT_CLASSIFICATION	6.438938449404047E-8	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.9999991081286542	WITHOUT_CLASSIFICATION	8.918713456835322E-7	DEFECT
// advance line Paint	WITHOUT_CLASSIFICATION	0.9999998450178379	WITHOUT_CLASSIFICATION	1.5498216205540721E-7	DEFECT
// Add exception in included segments	WITHOUT_CLASSIFICATION	0.999999497454638	WITHOUT_CLASSIFICATION	5.025453618812575E-7	DEFECT
// Saturday and Sundays are non business hours	WITHOUT_CLASSIFICATION	0.999999636461469	WITHOUT_CLASSIFICATION	3.6353853090393154E-7	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9998305855049077	WITHOUT_CLASSIFICATION	1.6941449509238736E-4	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9998305855049077	WITHOUT_CLASSIFICATION	1.6941449509238736E-4	DEFECT
// 1-ms test timeline using 5 included and 2 excluded segments. // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 .. // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. // |  |  |  |  |  |EE|EE|  |  |  |  |  |EE|EE|  |  |  |  |  |  |EE|EE|    <-- msTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. //  \_________  ________/            \_/ //            \/                      | //       segment group         segment size = 1 ms //	WITHOUT_CLASSIFICATION	0.999999951976438	WITHOUT_CLASSIFICATION	4.802356199413924E-8	DEFECT
// 1-ms test timeline (with a baseTimeline) using 2 included and 2 // excluded segments centered inside each base segment // // The ms2Timeline without a base would look like this: // //    timeline start time = 1 //      | //      v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //    \____  _____/            \_/ //         \/                   | //    segment group      segment size = 1 ms // // With the base timeline some originally included segments are now // removed (see "xx" below): // //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //	WITHOUT_CLASSIFICATION	0.9997568939736431	WITHOUT_CLASSIFICATION	2.4310602635694095E-4	DEFECT
// test monday though friday timeline	WITHOUT_CLASSIFICATION	0.9999996400923222	WITHOUT_CLASSIFICATION	3.5990767779176907E-7	DEFECT
// find first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.9999976991684202	WITHOUT_CLASSIFICATION	2.3008315798117247E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test construction process //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999979562766	WITHOUT_CLASSIFICATION	2.043723410995395E-9	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999998555832786	WITHOUT_CLASSIFICATION	1.4441672143567847E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // main include and excluded segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996863492494	WITHOUT_CLASSIFICATION	3.136507505819031E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // test timeline translations //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999882700584	WITHOUT_CLASSIFICATION	1.1729941599031593E-8	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.9999999832786399	WITHOUT_CLASSIFICATION	1.67213599978388E-8	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.999995024220664	WITHOUT_CLASSIFICATION	4.97577933594702E-6	DEFECT
// tick label insets...	WITHOUT_CLASSIFICATION	0.9999888303958845	WITHOUT_CLASSIFICATION	1.1169604115616878E-5	DEFECT
// tick mark paint...	WITHOUT_CLASSIFICATION	0.9999736787644162	WITHOUT_CLASSIFICATION	2.632123558383635E-5	DEFECT
// negativeArrowVisible;	WITHOUT_CLASSIFICATION	0.9999982811297079	WITHOUT_CLASSIFICATION	1.7188702921470112E-6	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.9999999643069265	WITHOUT_CLASSIFICATION	3.569307358840003E-8	DEFECT
// autoRange	WITHOUT_CLASSIFICATION	0.9999994945426752	WITHOUT_CLASSIFICATION	5.054573247857879E-7	DEFECT
// autoRangeMinimumSize	WITHOUT_CLASSIFICATION	0.9999997808206974	WITHOUT_CLASSIFICATION	2.1917930247367611E-7	DEFECT
//private double fixedAutoRange;	WITHOUT_CLASSIFICATION	0.9999962850867437	WITHOUT_CLASSIFICATION	3.714913256347631E-6	DEFECT
//private boolean autoTickUnitSelection;	WITHOUT_CLASSIFICATION	0.9999999338584197	WITHOUT_CLASSIFICATION	6.61415803337468E-8	DEFECT
//private int autoTickIndex; //protected double reservedForTickLabels; //protected double reservedForAxisLabel;	WITHOUT_CLASSIFICATION	0.999998555806066	WITHOUT_CLASSIFICATION	1.4441939339428247E-6	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.9999992418930438	WITHOUT_CLASSIFICATION	7.581069562225865E-7	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.9999992418930438	WITHOUT_CLASSIFICATION	7.581069562225865E-7	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.9999887604783511	WITHOUT_CLASSIFICATION	1.1239521649012752E-5	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9999996572997122	WITHOUT_CLASSIFICATION	3.427002878172913E-7	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.9999937477888519	WITHOUT_CLASSIFICATION	6.2522111480812764E-6	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9999970312706697	WITHOUT_CLASSIFICATION	2.9687293302134078E-6	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.9999985799702952	WITHOUT_CLASSIFICATION	1.420029704893608E-6	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9999959463452645	WITHOUT_CLASSIFICATION	4.053654735606666E-6	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.9999998428783782	WITHOUT_CLASSIFICATION	1.5712162188741818E-7	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.9999994653610345	WITHOUT_CLASSIFICATION	5.346389655311558E-7	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999945150510996	WITHOUT_CLASSIFICATION	5.484948900394499E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999945150510996	WITHOUT_CLASSIFICATION	5.484948900394499E-6	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9996398227990357	WITHOUT_CLASSIFICATION	3.601772009642792E-4	DEFECT
// innerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999982282998426	WITHOUT_CLASSIFICATION	1.7717001574065461E-6	DEFECT
// domainAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9996976370544126	WITHOUT_CLASSIFICATION	3.0236294558733573E-4	DEFECT
// rangeAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9996745864221408	WITHOUT_CLASSIFICATION	3.254135778591821E-4	DEFECT
// renderer - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9991301663452467	WITHOUT_CLASSIFICATION	8.698336547532462E-4	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.999999885699468	WITHOUT_CLASSIFICATION	1.1430053209091655E-7	DEFECT
// domainGridlinePosition	WITHOUT_CLASSIFICATION	0.9999997016738668	WITHOUT_CLASSIFICATION	2.98326133234673E-7	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.999999919534411	WITHOUT_CLASSIFICATION	8.046558889446867E-8	DEFECT
// anchorValue	WITHOUT_CLASSIFICATION	0.9999998625248961	WITHOUT_CLASSIFICATION	1.3747510391728793E-7	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999998168624308	WITHOUT_CLASSIFICATION	1.8313756919127283E-7	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999998168624308	WITHOUT_CLASSIFICATION	1.8313756919127283E-7	DEFECT
// range markers - no longer separate fields but test anyway...	WITHOUT_CLASSIFICATION	0.9995978879165245	WITHOUT_CLASSIFICATION	4.021120834754494E-4	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.9999974141186473	WITHOUT_CLASSIFICATION	2.5858813527393206E-6	DEFECT
// domainCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999994367380514	WITHOUT_CLASSIFICATION	5.632619486115005E-7	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999996680953415	WITHOUT_CLASSIFICATION	3.319046585220453E-7	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999996680953415	WITHOUT_CLASSIFICATION	3.319046585220453E-7	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9999997690897113	WITHOUT_CLASSIFICATION	2.309102885396952E-7	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9999997690897113	WITHOUT_CLASSIFICATION	2.309102885396952E-7	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.9999903372014487	WITHOUT_CLASSIFICATION	9.662798551227464E-6	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999952708932416	WITHOUT_CLASSIFICATION	4.729106758445338E-6	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999922087564372	WITHOUT_CLASSIFICATION	7.791243562741392E-6	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999922087564372	WITHOUT_CLASSIFICATION	7.791243562741392E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999980600715568	WITHOUT_CLASSIFICATION	1.939928443313718E-6	DEFECT
// units	WITHOUT_CLASSIFICATION	0.9999978657714204	WITHOUT_CLASSIFICATION	2.134228579709553E-6	DEFECT
// tick labels visible	WITHOUT_CLASSIFICATION	0.9999988682578441	WITHOUT_CLASSIFICATION	1.1317421558775442E-6	DEFECT
// tick size	WITHOUT_CLASSIFICATION	0.9999982787575269	WITHOUT_CLASSIFICATION	1.7212424731095283E-6	DEFECT
// the clone and the original share a reference to the SAME dataset	WITHOUT_CLASSIFICATION	0.9999996636214935	WITHOUT_CLASSIFICATION	3.3637850646930287E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999993332777465	WITHOUT_CLASSIFICATION	6.667222534893024E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999993332777465	WITHOUT_CLASSIFICATION	6.667222534893024E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999993332777465	WITHOUT_CLASSIFICATION	6.667222534893024E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999993332777465	WITHOUT_CLASSIFICATION	6.667222534893024E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999993332777465	WITHOUT_CLASSIFICATION	6.667222534893024E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999993332777465	WITHOUT_CLASSIFICATION	6.667222534893024E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999993332777465	WITHOUT_CLASSIFICATION	6.667222534893024E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999993332777465	WITHOUT_CLASSIFICATION	6.667222534893024E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999993332777465	WITHOUT_CLASSIFICATION	6.667222534893024E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999993332777465	WITHOUT_CLASSIFICATION	6.667222534893024E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999993332777465	WITHOUT_CLASSIFICATION	6.667222534893024E-7	DEFECT
// labelType...	WITHOUT_CLASSIFICATION	0.9999871684502024	WITHOUT_CLASSIFICATION	1.28315497975039E-5	DEFECT
// pieIndex...	WITHOUT_CLASSIFICATION	0.9999306747100726	WITHOUT_CLASSIFICATION	6.932528992739529E-5	DEFECT
// ignoreZeroValues	WITHOUT_CLASSIFICATION	0.9999998896392468	WITHOUT_CLASSIFICATION	1.1036075328086504E-7	DEFECT
// sectionOutlinesVisible	WITHOUT_CLASSIFICATION	0.9999990151760607	WITHOUT_CLASSIFICATION	9.848239393319562E-7	DEFECT
// sectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999834469816389	WITHOUT_CLASSIFICATION	1.6553018361094135E-5	DEFECT
// labelBackgroundPaint	WITHOUT_CLASSIFICATION	0.9999982389063387	WITHOUT_CLASSIFICATION	1.7610936613410285E-6	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.9999998699212086	WITHOUT_CLASSIFICATION	1.3007879145139473E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999992275035561	WITHOUT_CLASSIFICATION	7.724964439165413E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999992275035561	WITHOUT_CLASSIFICATION	7.724964439165413E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999992275035561	WITHOUT_CLASSIFICATION	7.724964439165413E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999992275035561	WITHOUT_CLASSIFICATION	7.724964439165413E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999992275035561	WITHOUT_CLASSIFICATION	7.724964439165413E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999992275035561	WITHOUT_CLASSIFICATION	7.724964439165413E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999992275035561	WITHOUT_CLASSIFICATION	7.724964439165413E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999992275035561	WITHOUT_CLASSIFICATION	7.724964439165413E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999992275035561	WITHOUT_CLASSIFICATION	7.724964439165413E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999992275035561	WITHOUT_CLASSIFICATION	7.724964439165413E-7	DEFECT
// verify independence of fixed legend item collection	WITHOUT_CLASSIFICATION	0.999971414354042	WITHOUT_CLASSIFICATION	2.858564595801364E-5	DEFECT
// stroke sequence	WITHOUT_CLASSIFICATION	0.9999870107788712	WITHOUT_CLASSIFICATION	1.2989221128729885E-5	DEFECT
// stroke index	WITHOUT_CLASSIFICATION	0.9996907944048238	WITHOUT_CLASSIFICATION	3.092055951762729E-4	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998412252641	WITHOUT_CLASSIFICATION	1.5877473592863765E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998412252641	WITHOUT_CLASSIFICATION	1.5877473592863765E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998412252641	WITHOUT_CLASSIFICATION	1.5877473592863765E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998412252641	WITHOUT_CLASSIFICATION	1.5877473592863765E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998412252641	WITHOUT_CLASSIFICATION	1.5877473592863765E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998412252641	WITHOUT_CLASSIFICATION	1.5877473592863765E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998412252641	WITHOUT_CLASSIFICATION	1.5877473592863765E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999756208013	WITHOUT_CLASSIFICATION	2.4379198747154597E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999756208013	WITHOUT_CLASSIFICATION	2.4379198747154597E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999756208013	WITHOUT_CLASSIFICATION	2.4379198747154597E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999756208013	WITHOUT_CLASSIFICATION	2.4379198747154597E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999756208013	WITHOUT_CLASSIFICATION	2.4379198747154597E-8	DEFECT
// minorTickCount	WITHOUT_CLASSIFICATION	0.9999997693794054	WITHOUT_CLASSIFICATION	2.3062059452657917E-7	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.9999996246975997	WITHOUT_CLASSIFICATION	3.7530240027006873E-7	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999998399805398	WITHOUT_CLASSIFICATION	1.600194603137105E-7	DEFECT
// seriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.9999980437794551	WITHOUT_CLASSIFICATION	1.9562205449794708E-6	DEFECT
//upper bound and margin OK; get log10 of upper bound	WITHOUT_CLASSIFICATION	0.9999998558977391	WITHOUT_CLASSIFICATION	1.441022609537575E-7	DEFECT
// fillPaintList	WITHOUT_CLASSIFICATION	0.9999998492353013	WITHOUT_CLASSIFICATION	1.5076469874743207E-7	DEFECT
//apply upper margin by increasing upper bound:	WITHOUT_CLASSIFICATION	0.999999751941523	WITHOUT_CLASSIFICATION	2.480584770434511E-7	DEFECT
// baseStroke	WITHOUT_CLASSIFICATION	0.9999961897408988	WITHOUT_CLASSIFICATION	3.8102591012534593E-6	DEFECT
// Reference: http://www.antigrain.com/research/bezier_interpolation/	WITHOUT_CLASSIFICATION	0.9999996452540318	WITHOUT_CLASSIFICATION	3.5474596814770937E-7	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632867385	WITHOUT_CLASSIFICATION	1.633671326149796E-5	DEFECT
// initialize ChartPanel-specific tool tip delays with // values the from ToolTipManager.sharedInstance()	WITHOUT_CLASSIFICATION	0.999999999883144	WITHOUT_CLASSIFICATION	1.1685590450661068E-10	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999983134662453	WITHOUT_CLASSIFICATION	1.6865337546547646E-6	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999999529945774	WITHOUT_CLASSIFICATION	4.700542260792081E-8	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999999529945774	WITHOUT_CLASSIFICATION	4.700542260792081E-8	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9999999994504614	WITHOUT_CLASSIFICATION	5.495386097971722E-10	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999981520423523	WITHOUT_CLASSIFICATION	1.8479576476860134E-6	DEFECT
// itemLabelsVisible	WITHOUT_CLASSIFICATION	0.9999998663287074	WITHOUT_CLASSIFICATION	1.3367129264059197E-7	DEFECT
// make the background of the buffer clear and transparent	WITHOUT_CLASSIFICATION	0.999999409678515	WITHOUT_CLASSIFICATION	5.90321485040408E-7	DEFECT
// for MacOSX we can't use the CTRL key for mouse drags, see: // http://developer.apple.com/qa/qa2004/qa1362.html	WITHOUT_CLASSIFICATION	0.99999433510227	WITHOUT_CLASSIFICATION	5.664897730015648E-6	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.9999999853003669	WITHOUT_CLASSIFICATION	1.4699633025101765E-8	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9672841647701568	WITHOUT_CLASSIFICATION	0.032715835229843206	DEFECT
// first determine the size of the chart rendering area...	WITHOUT_CLASSIFICATION	0.9999999722711357	WITHOUT_CLASSIFICATION	2.772886426126985E-8	DEFECT
// do we need to resize the buffer?	WITHOUT_CLASSIFICATION	0.9999924982359921	WITHOUT_CLASSIFICATION	7.501764007953375E-6	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999999457391415	WITHOUT_CLASSIFICATION	5.42608585094623E-8	DEFECT
// clear the flag	WITHOUT_CLASSIFICATION	0.9999988089532497	WITHOUT_CLASSIFICATION	1.191046750401363E-6	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.999995594954941	WITHOUT_CLASSIFICATION	4.405045059057714E-6	DEFECT
// redraw the zoom rectangle (if present) - if useBuffer is false, // we use XOR so we can XOR the rectangle away again without redrawing // the chart	WITHOUT_CLASSIFICATION	0.9999999424746714	WITHOUT_CLASSIFICATION	5.7525328537305006E-8	DEFECT
// redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.9999998280853181	WITHOUT_CLASSIFICATION	1.7191468189170366E-7	DEFECT
// zap the buffer onto the panel...	WITHOUT_CLASSIFICATION	0.9999978720178777	WITHOUT_CLASSIFICATION	2.127982122254318E-6	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.9999997866261668	WITHOUT_CLASSIFICATION	2.133738332238931E-7	DEFECT
// many of the zoom methods need a screen location - all we have is // the zoomPoint, but it might be null.  Here we grab the x and y // coordinates, or use defaults...	WITHOUT_CLASSIFICATION	0.9990956684285927	WITHOUT_CLASSIFICATION	9.04331571407307E-4	DEFECT
// itemLabelFontList	WITHOUT_CLASSIFICATION	0.999999931800978	WITHOUT_CLASSIFICATION	6.819902187865855E-8	DEFECT
// restore original tooltip dealys	WITHOUT_CLASSIFICATION	0.9999995081714615	WITHOUT_CLASSIFICATION	4.918285384463588E-7	DEFECT
// can we pan this plot?	WITHOUT_CLASSIFICATION	0.9999788987031719	WITHOUT_CLASSIFICATION	2.1101296828100815E-5	DEFECT
// the actual panning occurs later in the mouseDragged()  // method	WITHOUT_CLASSIFICATION	0.9999995236430841	WITHOUT_CLASSIFICATION	4.7635691585704783E-7	DEFECT
// if the popup menu has already been triggered, then ignore dragging...	WITHOUT_CLASSIFICATION	0.9999999848711086	WITHOUT_CLASSIFICATION	1.5128891310554308E-8	DEFECT
// handle panning if we have a start point	WITHOUT_CLASSIFICATION	0.9999999701666702	WITHOUT_CLASSIFICATION	2.983332982302002E-8	DEFECT
// if no initial zoom point was set, ignore dragging...	WITHOUT_CLASSIFICATION	0.9999999994079626	WITHOUT_CLASSIFICATION	5.92037413723016E-10	DEFECT
// erase the previous zoom rectangle (if any).  We only need to do // this is we are using XOR mode, which we do when we're not using // the buffer (if there is a buffer, then at the end of this method we // just trigger a repaint)	WITHOUT_CLASSIFICATION	0.999999997807972	WITHOUT_CLASSIFICATION	2.1920278983709225E-9	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999908463909323	WITHOUT_CLASSIFICATION	9.15360906776071E-6	DEFECT
// Draw the new zoom rectangle...	WITHOUT_CLASSIFICATION	0.9999920705062761	WITHOUT_CLASSIFICATION	7.929493723900484E-6	DEFECT
// with no buffer, we use XOR to draw the rectangle "over" the // chart...	WITHOUT_CLASSIFICATION	0.9999991128296032	WITHOUT_CLASSIFICATION	8.871703967121693E-7	DEFECT
// if we've been panning, we need to reset now that the mouse is  // released...	WITHOUT_CLASSIFICATION	0.9999999383179796	WITHOUT_CLASSIFICATION	6.168202028547688E-8	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999999999297198	WITHOUT_CLASSIFICATION	7.028021305335894E-11	DEFECT
// erase the zoom rectangle	WITHOUT_CLASSIFICATION	0.9999999694858099	WITHOUT_CLASSIFICATION	3.0514190048887796E-8	DEFECT
// force a redraw // new entity code...	WITHOUT_CLASSIFICATION	0.9999943806681515	WITHOUT_CLASSIFICATION	5.6193318484941235E-6	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999799092263	WITHOUT_CLASSIFICATION	2.0090773704228852E-8	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999799092263	WITHOUT_CLASSIFICATION	2.0090773704228852E-8	DEFECT
// Set XOR mode to draw the zoom rectangle	WITHOUT_CLASSIFICATION	0.999991076030531	WITHOUT_CLASSIFICATION	8.923969469004452E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999969616908574	WITHOUT_CLASSIFICATION	3.038309142566205E-6	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999994631587	WITHOUT_CLASSIFICATION	5.368414114140661E-10	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999994631587	WITHOUT_CLASSIFICATION	5.368414114140661E-10	DEFECT
// use reflection to get the SVG string	WITHOUT_CLASSIFICATION	0.9999997245863854	WITHOUT_CLASSIFICATION	2.7541361467618665E-7	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999906176882	WITHOUT_CLASSIFICATION	9.382311827536935E-9	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999906176882	WITHOUT_CLASSIFICATION	9.382311827536935E-9	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999906176882	WITHOUT_CLASSIFICATION	9.382311827536935E-9	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999969616908574	WITHOUT_CLASSIFICATION	3.038309142566205E-6	DEFECT
// we suppress shadow generation, because SVG is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.9999967834220448	WITHOUT_CLASSIFICATION	3.2165779552964967E-6	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999996450517143	WITHOUT_CLASSIFICATION	3.5494828570600123E-7	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999969616908574	WITHOUT_CLASSIFICATION	3.038309142566205E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999969616908574	WITHOUT_CLASSIFICATION	3.038309142566205E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999969616908574	WITHOUT_CLASSIFICATION	3.038309142566205E-6	DEFECT
// fetch listeners from local storage	WITHOUT_CLASSIFICATION	0.9999999954788455	WITHOUT_CLASSIFICATION	4.521154380428021E-9	DEFECT
// here we need to update the UI for the popup menu, if the panel // has one...	WITHOUT_CLASSIFICATION	0.9999972094422085	WITHOUT_CLASSIFICATION	2.790557791506505E-6	DEFECT
// we suppress shadow generation, because PDF is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.9999921894235116	WITHOUT_CLASSIFICATION	7.810576488339985E-6	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.9999999417032097	WITHOUT_CLASSIFICATION	5.829679013081506E-8	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9999950874281054	WITHOUT_CLASSIFICATION	4.912571894631242E-6	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999997735093926	WITHOUT_CLASSIFICATION	2.2649060736010424E-7	DEFECT
// we create a new but empty chartMouseListeners list	WITHOUT_CLASSIFICATION	0.9999999993836031	WITHOUT_CLASSIFICATION	6.163970325399757E-10	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999997735093926	WITHOUT_CLASSIFICATION	2.2649060736010424E-7	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ----------------- * ChartFactory.java * ----------------- * (C) Copyright 2001-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Serge V. Grachov; *                   Joao Guilherme Del Valle; *                   Bill Kelemen; *                   Jon Iles; *                   Jelai Wang; *                   Richard Atkinson; *                   David Browning (for Australian Institute of Marine *                       Science); *                   Benoit Xhenseval; * * Changes * ------- * 19-Oct-2001 : Version 1, most methods transferred from JFreeChart.java (DG); * 22-Oct-2001 : Added methods to create stacked bar charts (DG); *               Renamed DataSource.java --> Dataset.java etc. (DG); * 31-Oct-2001 : Added 3D-effect vertical bar and stacked-bar charts, *               contributed by Serge V. Grachov (DG); * 07-Nov-2001 : Added a flag to control whether or not a legend is added to *               the chart (DG); * 17-Nov-2001 : For pie chart, changed dataset from CategoryDataset to *               PieDataset (DG); * 30-Nov-2001 : Removed try/catch handlers from chart creation, as the *               exception are now RuntimeExceptions, as suggested by Joao *               Guilherme Del Valle (DG); * 06-Dec-2001 : Added createCombinableXXXXXCharts methods (BK); * 12-Dec-2001 : Added createCandlestickChart() method (DG); * 13-Dec-2001 : Updated methods for charts with new renderers (DG); * 08-Jan-2002 : Added import for *               com.jrefinery.chart.combination.CombinedChart (DG); * 31-Jan-2002 : Changed the createCombinableVerticalXYBarChart() method to use *               renderer (DG); * 06-Feb-2002 : Added new method createWindPlot() (DG); * 23-Apr-2002 : Updates to the chart and plot constructor API (DG); * 21-May-2002 : Added new method createAreaChart() (JI); * 06-Jun-2002 : Added new method createGanttChart() (DG); * 11-Jun-2002 : Renamed createHorizontalStackedBarChart() *               --> createStackedHorizontalBarChart() for consistency (DG); * 06-Aug-2002 : Updated Javadoc comments (DG); * 21-Aug-2002 : Added createPieChart(CategoryDataset) method (DG); * 02-Oct-2002 : Fixed errors reported by Checkstyle (DG); * 09-Oct-2002 : Added methods including tooltips and URL flags (DG); * 06-Nov-2002 : Moved renderers into a separate package (DG); * 18-Nov-2002 : Changed CategoryDataset to TableDataset (DG); * 21-Mar-2003 : Incorporated HorizontalCategoryAxis3D, see bug id 685501 (DG); * 13-May-2003 : Merged some horizontal and vertical methods (DG); * 24-May-2003 : Added support for timeline in createHighLowChart (BK); * 07-Jul-2003 : Added createHistogram() method contributed by Jelai Wang (DG); * 27-Jul-2003 : Added createStackedAreaXYChart() method (RA); * 05-Aug-2003 : added new method createBoxAndWhiskerChart (DB); * 08-Sep-2003 : Changed ValueAxis API (DG); * 07-Oct-2003 : Added stepped area XY chart contributed by Matthias Rose (DG); * 06-Nov-2003 : Added createWaterfallChart() method (DG); * 20-Nov-2003 : Set rendering order for 3D bar charts to fix overlapping *               problems (DG); * 25-Nov-2003 : Added createWaferMapChart() method (DG); * 23-Dec-2003 : Renamed createPie3DChart() --> createPieChart3D for *               consistency (DG); * 20-Jan-2004 : Added createPolarChart() method (DG); * 28-Jan-2004 : Fixed bug (882890) with axis range in *               createStackedXYAreaChart() method (DG); * 25-Feb-2004 : Renamed XYToolTipGenerator --> XYItemLabelGenerator (DG); * 11-Mar-2004 : Updated for pie chart changes (DG); * 27-Apr-2004 : Added new createPieChart() method contributed by Benoit *               Xhenseval (see RFE 942195) (DG); * 11-May-2004 : Split StandardCategoryItemLabelGenerator *               --> StandardCategoryToolTipGenerator and *               StandardCategoryLabelGenerator (DG); * 06-Jan-2005 : Removed deprecated methods (DG); * 27-Jan-2005 : Added new constructor to LineAndShapeRenderer (DG); * 28-Feb-2005 : Added docs to createBubbleChart() method (DG); * 17-Mar-2005 : Added createRingPlot() method (DG); * 21-Apr-2005 : Replaced Insets with RectangleInsets (DG); * 29-Nov-2005 : Removed signal chart (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 26-Jan-2006 : Corrected API docs for createScatterPlot() (DG); * 23-Aug-2006 : Modified createStackedXYAreaChart() to use *               StackedXYAreaRenderer2, because StackedXYAreaRenderer doesn't *               handle negative values (DG); * 27-Sep-2006 : Update createPieChart() method for deprecated code (DG); * 29-Nov-2006 : Update createXYBarChart() to use a time based tool tip *               generator is a DateAxis is requested (DG); * 17-Jan-2007 : Added createBoxAndWhiskerChart() method from patch 1603937 *               submitted by Darren Jung (DG); * 10-Jul-2007 : Added new methods to create pie charts with locale for *               section label and tool tip formatting (DG); * 14-Aug-2008 : Added ChartTheme facility (DG); * 23-Oct-2008 : Check for legacy theme in setChartTheme() and reset default *               bar painters (DG); * 20-Dec-2008 : In createStackedAreaChart(), set category margin to 0.0 (DG); * 02-Jul-2013 : Use ParamChecks class (DG); *  */	WITHOUT_CLASSIFICATION	0.9448252328881214	WITHOUT_CLASSIFICATION	0.05517476711187855	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.9999999336690297	WITHOUT_CLASSIFICATION	6.633097030833472E-8	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999997735093926	WITHOUT_CLASSIFICATION	2.2649060736010424E-7	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999997735093926	WITHOUT_CLASSIFICATION	2.2649060736010424E-7	DEFECT
// create the renderer...	WITHOUT_CLASSIFICATION	0.9999857431123438	WITHOUT_CLASSIFICATION	1.4256887656218634E-5	DEFECT
// create the plot...	WITHOUT_CLASSIFICATION	0.9999907308143101	WITHOUT_CLASSIFICATION	9.269185689892936E-6	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999996378841204	WITHOUT_CLASSIFICATION	3.621158796457894E-7	DEFECT
// forces recalculation of the axis range	WITHOUT_CLASSIFICATION	0.9999999643657034	WITHOUT_CLASSIFICATION	3.5634296589194293E-8	DEFECT
// reduce the default margins	WITHOUT_CLASSIFICATION	0.9999999967456921	WITHOUT_CLASSIFICATION	3.25430786625529E-9	DEFECT
// override default	WITHOUT_CLASSIFICATION	0.9999999726752248	WITHOUT_CLASSIFICATION	2.7324775273903065E-8	DEFECT
// get desired width and height from somewhere then...	WITHOUT_CLASSIFICATION	0.9999991502711718	WITHOUT_CLASSIFICATION	8.497288282600176E-7	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.9999876257256617	WITHOUT_CLASSIFICATION	1.2374274338311434E-5	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.9999876257256617	WITHOUT_CLASSIFICATION	1.2374274338311434E-5	DEFECT
// no need to instantiate this    	WITHOUT_CLASSIFICATION	0.9999995646283867	WITHOUT_CLASSIFICATION	4.3537161330433024E-7	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999666536687072	WITHOUT_CLASSIFICATION	3.3346331292798976E-5	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------- * ChartUtilities.java * ------------------- * (C) Copyright 2001-2013, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Wolfgang Irler; *                   Richard Atkinson; *                   Xavier Poinsard; * * Changes * ------- * 11-Dec-2001 : Version 1.  The JPEG method comes from Wolfgang Irler's *               JFreeChartServletDemo class (DG); * 23-Jan-2002 : Changed saveChartAsXXX() methods to pass IOExceptions back to *               caller (DG); * 26-Jun-2002 : Added image map methods (DG); * 05-Aug-2002 : Added writeBufferedImage methods *               Modified writeImageMap method to support flexible image *               maps (RA); * 26-Aug-2002 : Added saveChartAsJPEG and writeChartAsJPEG methods with info *               objects (RA); * 05-Sep-2002 : Added writeImageMap() method to support OverLIB *               - http://www.bosrup.com/web/overlib (RA); * 26-Sep-2002 : Fixed errors reported by Checkstyle (DG); * 17-Oct-2002 : Exposed JPEG quality setting and PNG compression level as *               parameters (DG); * 25-Oct-2002 : Fixed writeChartAsJPEG() empty method bug (DG); * 13-Mar-2003 : Updated writeImageMap method as suggested by Xavier Poinsard *               (see Feature Request 688079) (DG); * 12-Aug-2003 : Added support for custom image maps using *               ToolTipTagFragmentGenerator and URLTagFragmentGenerator (RA); * 02-Sep-2003 : Separated PNG encoding from writing chart to an *               OutputStream (RA); * 04-Dec-2003 : Chart draw() method modified to include anchor point (DG); * 20-Feb-2004 : Edited Javadocs and added argument checking (DG); * 05-Apr-2004 : Fixed problem with buffered image type (DG); * 01-Aug-2004 : Modified to use EncoderUtil for all image encoding (RA); * 02-Aug-2004 : Delegated image map related functionality to ImageMapUtil (RA); * 13-Jan-2005 : Renamed ImageMapUtil --> ImageMapUtilities, removed method *               writeImageMap(PrintWriter, String, ChartRenderingInfo) which *               exists in ImageMapUtilities (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 06-Feb-2006 : API doc update (DG); * 19-Mar-2007 : Use try-finally to close output stream in saveChartAsXXX() *               methods (DG); * 10-Jan-2008 : Fix bug 1868251 - don't create image with transparency when *               saving to JPEG format (DG); * 02-Jul-2013 : Use ParamChecks class (DG); * */	WITHOUT_CLASSIFICATION	0.9980718903051679	WITHOUT_CLASSIFICATION	0.0019281096948321466	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999998011679774	WITHOUT_CLASSIFICATION	1.9883202264874702E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.999999638516816	WITHOUT_CLASSIFICATION	3.6148318406290394E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.999999638516816	WITHOUT_CLASSIFICATION	3.6148318406290394E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.999999638516816	WITHOUT_CLASSIFICATION	3.6148318406290394E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999998011679774	WITHOUT_CLASSIFICATION	1.9883202264874702E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999998011679774	WITHOUT_CLASSIFICATION	1.9883202264874702E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999998011679774	WITHOUT_CLASSIFICATION	1.9883202264874702E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999998011679774	WITHOUT_CLASSIFICATION	1.9883202264874702E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999998011679774	WITHOUT_CLASSIFICATION	1.9883202264874702E-7	DEFECT
/* shape outlined */	WITHOUT_CLASSIFICATION	0.9999997309925835	WITHOUT_CLASSIFICATION	2.690074165299826E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999997443534306	WITHOUT_CLASSIFICATION	2.5564656943426854E-7	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999993277404527	WITHOUT_CLASSIFICATION	6.722595471929878E-7	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999993277404527	WITHOUT_CLASSIFICATION	6.722595471929878E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999997443534306	WITHOUT_CLASSIFICATION	2.5564656943426854E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999997443534306	WITHOUT_CLASSIFICATION	2.5564656943426854E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999997443534306	WITHOUT_CLASSIFICATION	2.5564656943426854E-7	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999991281353479	WITHOUT_CLASSIFICATION	8.718646522129283E-7	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999991281353479	WITHOUT_CLASSIFICATION	8.718646522129283E-7	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999991281353479	WITHOUT_CLASSIFICATION	8.718646522129283E-7	DEFECT
// positiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999999239250492	WITHOUT_CLASSIFICATION	7.607495073080382E-8	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9672841647701568	WITHOUT_CLASSIFICATION	0.032715835229843206	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999997443534306	WITHOUT_CLASSIFICATION	2.5564656943426854E-7	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999991281353479	WITHOUT_CLASSIFICATION	8.718646522129283E-7	DEFECT
// negativeItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9999999491216057	WITHOUT_CLASSIFICATION	5.08783941841642E-8	DEFECT
// ----------------- // --- Constants --- // -----------------	WITHOUT_CLASSIFICATION	0.9999990651330716	WITHOUT_CLASSIFICATION	9.348669283522583E-7	DEFECT
// ------------------------ // --- Member Variables --- // ------------------------	WITHOUT_CLASSIFICATION	0.9999998095441972	WITHOUT_CLASSIFICATION	1.9045580285495217E-7	DEFECT
// -------------------- // --- Constructors --- // --------------------	WITHOUT_CLASSIFICATION	0.9999999789601489	WITHOUT_CLASSIFICATION	2.1039851074979595E-8	DEFECT
// -------------------------- // --- ChartPanel Methods --- // --------------------------	WITHOUT_CLASSIFICATION	0.9999999780328398	WITHOUT_CLASSIFICATION	2.196716022346718E-8	DEFECT
// ---------------------- // --- Public Methods --- // ----------------------	WITHOUT_CLASSIFICATION	0.9999994404740018	WITHOUT_CLASSIFICATION	5.595259982991781E-7	DEFECT
// ----------------------- // --- Private Methods --- // -----------------------	WITHOUT_CLASSIFICATION	0.9999986321345626	WITHOUT_CLASSIFICATION	1.3678654373388963E-6	DEFECT
// do nothing at all	WITHOUT_CLASSIFICATION	0.9999896300235737	WITHOUT_CLASSIFICATION	1.0369976426411475E-5	DEFECT
// now process the plot if there is one	WITHOUT_CLASSIFICATION	0.9999998958820364	WITHOUT_CLASSIFICATION	1.0411796364388212E-7	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.9999999450129972	WITHOUT_CLASSIFICATION	5.49870029254325E-8	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.9999999450129972	WITHOUT_CLASSIFICATION	5.49870029254325E-8	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.9999999665327922	WITHOUT_CLASSIFICATION	3.3467207767261205E-8	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.9999999665327922	WITHOUT_CLASSIFICATION	3.3467207767261205E-8	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999998356635975	WITHOUT_CLASSIFICATION	1.6433640248093864E-7	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999998356635975	WITHOUT_CLASSIFICATION	1.6433640248093864E-7	DEFECT
// process all annotations	WITHOUT_CLASSIFICATION	0.9999999604879813	WITHOUT_CLASSIFICATION	3.9512018552635796E-8	DEFECT
// BarRenderer	WITHOUT_CLASSIFICATION	0.9999719297162167	WITHOUT_CLASSIFICATION	2.807028378323483E-5	DEFECT
// BarRenderer3D	WITHOUT_CLASSIFICATION	0.9999428875079314	WITHOUT_CLASSIFICATION	5.711249206854649E-5	DEFECT
// LineRenderer3D	WITHOUT_CLASSIFICATION	0.9999985570575949	WITHOUT_CLASSIFICATION	1.442942405105653E-6	DEFECT
//  StatisticalBarRenderer	WITHOUT_CLASSIFICATION	0.999999161009025	WITHOUT_CLASSIFICATION	8.389909750385547E-7	DEFECT
// MinMaxCategoryRenderer	WITHOUT_CLASSIFICATION	0.9999963697009475	WITHOUT_CLASSIFICATION	3.630299052518787E-6	DEFECT
// handle GradientPaint as a special case	WITHOUT_CLASSIFICATION	0.9999999982348904	WITHOUT_CLASSIFICATION	1.7651096057954834E-9	DEFECT
// create storage for listeners...	WITHOUT_CLASSIFICATION	0.9999994889521016	WITHOUT_CLASSIFICATION	5.110478984705385E-7	DEFECT
// add the chart title, if one has been specified...	WITHOUT_CLASSIFICATION	0.9999999701382736	WITHOUT_CLASSIFICATION	2.986172639185627E-8	DEFECT
// this fires a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.9999967590365759	WITHOUT_CLASSIFICATION	3.240963424206694E-6	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.9999996652716456	WITHOUT_CLASSIFICATION	3.347283544366915E-7	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.9999999417032097	WITHOUT_CLASSIFICATION	5.829679013081506E-8	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999928813406261	WITHOUT_CLASSIFICATION	7.11865937394213E-6	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999996277436398	WITHOUT_CLASSIFICATION	3.7225636010393243E-7	DEFECT
// clear the section attributes so that the theme's DrawingSupplier // will be used	WITHOUT_CLASSIFICATION	0.9999999740326072	WITHOUT_CLASSIFICATION	2.5967392821535826E-8	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999999748063271	WITHOUT_CLASSIFICATION	2.5193672932124658E-8	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999999748063271	WITHOUT_CLASSIFICATION	2.5193672932124658E-8	DEFECT
// default is to notify listeners when the // chart changes	WITHOUT_CLASSIFICATION	0.9999999193493411	WITHOUT_CLASSIFICATION	8.065065900205057E-8	DEFECT
// added the following hint because of  // http://stackoverflow.com/questions/7785082/	WITHOUT_CLASSIFICATION	0.9999998234126912	WITHOUT_CLASSIFICATION	1.7658730869162998E-7	DEFECT
// record the chart area, if info is requested...	WITHOUT_CLASSIFICATION	0.999999773387135	WITHOUT_CLASSIFICATION	2.2661286513062466E-7	DEFECT
// ensure no drawing occurs outside chart area...	WITHOUT_CLASSIFICATION	0.9999999957135263	WITHOUT_CLASSIFICATION	4.286473777630181E-9	DEFECT
// draw the chart background...	WITHOUT_CLASSIFICATION	0.9999978054403456	WITHOUT_CLASSIFICATION	2.194559654502592E-6	DEFECT
// draw the title and subtitles...	WITHOUT_CLASSIFICATION	0.9999916379372031	WITHOUT_CLASSIFICATION	8.362062796800953E-6	DEFECT
// draw the plot (axes and data visualisation)	WITHOUT_CLASSIFICATION	0.9999993032655333	WITHOUT_CLASSIFICATION	6.967344666770211E-7	DEFECT
// private boolean borderVisible; // private transient Stroke borderStroke; // private transient Paint borderPaint;	WITHOUT_CLASSIFICATION	0.9999958886832205	WITHOUT_CLASSIFICATION	4.1113167794476255E-6	DEFECT
// get a locale-specific resource bundle...	WITHOUT_CLASSIFICATION	0.9999999518019324	WITHOUT_CLASSIFICATION	4.819806769525301E-8	DEFECT
// load only when required	WITHOUT_CLASSIFICATION	0.9999245586329274	WITHOUT_CLASSIFICATION	7.544136707258615E-5	DEFECT
// use ImageIcon because it waits for the image to load...	WITHOUT_CLASSIFICATION	0.9999820476655877	WITHOUT_CLASSIFICATION	1.7952334412206897E-5	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9999964570262634	WITHOUT_CLASSIFICATION	3.5429737365971936E-6	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.9999961796734165	WITHOUT_CLASSIFICATION	3.82032658349604E-6	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.9999998433053566	WITHOUT_CLASSIFICATION	1.5669464335628531E-7	DEFECT
// if we don't have at least 2 (x, y) coordinates, just return	WITHOUT_CLASSIFICATION	0.9999997494745922	WITHOUT_CLASSIFICATION	2.505254077458609E-7	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999999072875743	WITHOUT_CLASSIFICATION	9.271242578263008E-8	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999999072875743	WITHOUT_CLASSIFICATION	9.271242578263008E-8	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.999999425820965	WITHOUT_CLASSIFICATION	5.741790348944468E-7	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.999999425820965	WITHOUT_CLASSIFICATION	5.741790348944468E-7	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999964277741401	WITHOUT_CLASSIFICATION	3.5722258598433625E-6	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999964277741401	WITHOUT_CLASSIFICATION	3.5722258598433625E-6	DEFECT
/* Rectangle2D hotspot = */	WITHOUT_CLASSIFICATION	0.9999891767394562	WITHOUT_CLASSIFICATION	1.082326054383014E-5	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999666536687072	WITHOUT_CLASSIFICATION	3.3346331292798976E-5	DEFECT
// FIXME //SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.99946238352426	WITHOUT_CLASSIFICATION	5.37616475740078E-4	DEFECT
// FIXME //this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.9981618725615518	WITHOUT_CLASSIFICATION	0.0018381274384482419	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.999999944158939	WITHOUT_CLASSIFICATION	5.584106091213509E-8	DEFECT
// by default the outline and background won't be visible	WITHOUT_CLASSIFICATION	0.9999981786285645	WITHOUT_CLASSIFICATION	1.8213714354733835E-6	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999999072875743	WITHOUT_CLASSIFICATION	9.271242578263008E-8	DEFECT
// create plot ...	WITHOUT_CLASSIFICATION	0.9999933125321925	WITHOUT_CLASSIFICATION	6.687467807537817E-6	DEFECT
// add a second dataset and renderer...	WITHOUT_CLASSIFICATION	0.9997789881878943	WITHOUT_CLASSIFICATION	2.2101181210573118E-4	DEFECT
// return a new chart containing the overlaid plot...	WITHOUT_CLASSIFICATION	0.9999999898254303	WITHOUT_CLASSIFICATION	1.0174569729542867E-8	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999997335362324	WITHOUT_CLASSIFICATION	2.6646376763256545E-7	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.999999425820965	WITHOUT_CLASSIFICATION	5.741790348944468E-7	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999964277741401	WITHOUT_CLASSIFICATION	3.5722258598433625E-6	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999666536687072	WITHOUT_CLASSIFICATION	3.3346331292798976E-5	DEFECT
// baseNegativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.999999972380889	WITHOUT_CLASSIFICATION	2.7619110953999973E-8	DEFECT
// here we change the AffineTransform so we can draw the annotation // to a larger area and scale it down into the display area // afterwards, the original transform is restored	WITHOUT_CLASSIFICATION	0.9999999994781172	WITHOUT_CLASSIFICATION	5.218827194580567E-10	DEFECT
// compute transform matrix elements via sample points. Assume no // rotation or shear.	WITHOUT_CLASSIFICATION	0.9999995135872375	WITHOUT_CLASSIFICATION	4.864127624681468E-7	DEFECT
//  create transform & transform shape	WITHOUT_CLASSIFICATION	0.9999999063523888	WITHOUT_CLASSIFICATION	9.36476113164102E-8	DEFECT
//SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9999999919132705	WITHOUT_CLASSIFICATION	8.086729584301025E-9	DEFECT
//this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.9999999767574336	WITHOUT_CLASSIFICATION	2.3242566372017432E-8	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9991816955061913	WITHOUT_CLASSIFICATION	8.183044938087556E-4	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999972981746	WITHOUT_CLASSIFICATION	2.701825400010669E-6	DEFECT
// apply the margins - these should apply to the exponent range	WITHOUT_CLASSIFICATION	0.9999976413187842	WITHOUT_CLASSIFICATION	2.3586812158650516E-6	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9995739982414191	WITHOUT_CLASSIFICATION	4.260017585808526E-4	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999998231976522	WITHOUT_CLASSIFICATION	1.7680234773050507E-7	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9999905277473403	WITHOUT_CLASSIFICATION	9.472252659699481E-6	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.9999996816351416	WITHOUT_CLASSIFICATION	3.1836485832739903E-7	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.9999996816351416	WITHOUT_CLASSIFICATION	3.1836485832739903E-7	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.999998611351302	WITHOUT_CLASSIFICATION	1.388648698002766E-6	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.999998611351302	WITHOUT_CLASSIFICATION	1.388648698002766E-6	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.9999991861719923	WITHOUT_CLASSIFICATION	8.138280075909181E-7	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.9999991861719923	WITHOUT_CLASSIFICATION	8.138280075909181E-7	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.9999971804549407	WITHOUT_CLASSIFICATION	2.8195450591899687E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999915411992173	WITHOUT_CLASSIFICATION	8.458800782670193E-6	DEFECT
// no need to create entity if we can't save it anyways...	WITHOUT_CLASSIFICATION	0.9999127883318237	WITHOUT_CLASSIFICATION	8.721166817621666E-5	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.9991086951576087	WITHOUT_CLASSIFICATION	8.913048423911982E-4	DEFECT
// It's up to the plot which clones up to restore the correct references	WITHOUT_CLASSIFICATION	0.9999975178307462	WITHOUT_CLASSIFICATION	2.482169253805721E-6	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999987630503244	WITHOUT_CLASSIFICATION	1.2369496755777727E-6	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9999997483681763	WITHOUT_CLASSIFICATION	2.516318236877453E-7	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9999997483681763	WITHOUT_CLASSIFICATION	2.516318236877453E-7	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.9999999361002155	WITHOUT_CLASSIFICATION	6.389978444638785E-8	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.9999999361002155	WITHOUT_CLASSIFICATION	6.389978444638785E-8	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999992559955534	WITHOUT_CLASSIFICATION	7.440044466849801E-7	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9996003468732577	WITHOUT_CLASSIFICATION	3.9965312674229757E-4	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9999540420601981	WITHOUT_CLASSIFICATION	4.5957939801947826E-5	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999940168942583	WITHOUT_CLASSIFICATION	5.983105741756439E-6	DEFECT
//negative values not allowed	WITHOUT_CLASSIFICATION	0.9999376143421519	WITHOUT_CLASSIFICATION	6.238565784811166E-5	DEFECT
// no plot, no data.	WITHOUT_CLASSIFICATION	0.9999995656955705	WITHOUT_CLASSIFICATION	4.343044295279915E-7	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999996136270507	WITHOUT_CLASSIFICATION	3.8637294928792766E-7	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9996003468732577	WITHOUT_CLASSIFICATION	3.9965312674229757E-4	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9999540420601981	WITHOUT_CLASSIFICATION	4.5957939801947826E-5	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999940168942583	WITHOUT_CLASSIFICATION	5.983105741756439E-6	DEFECT
// baseCreateEntities;	WITHOUT_CLASSIFICATION	0.999999977009127	WITHOUT_CLASSIFICATION	2.2990873000644718E-8	DEFECT
// add space for the outer tick labels, if any...	WITHOUT_CLASSIFICATION	0.99999405795797	WITHOUT_CLASSIFICATION	5.942042029938187E-6	DEFECT
// draw minor tick marks	WITHOUT_CLASSIFICATION	0.9999998821644043	WITHOUT_CLASSIFICATION	1.1783559566844093E-7	DEFECT
// work out the initial gap	WITHOUT_CLASSIFICATION	0.9999875184141023	WITHOUT_CLASSIFICATION	1.2481585897730452E-5	DEFECT
// this is the last period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.9647678034391116	WITHOUT_CLASSIFICATION	0.03523219656088837	DEFECT
// this is the first period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.9931999716233944	WITHOUT_CLASSIFICATION	0.006800028376605627	DEFECT
// work out the trailing gap	WITHOUT_CLASSIFICATION	0.9999444192565289	WITHOUT_CLASSIFICATION	5.5580743471180324E-5	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999791586192778	WITHOUT_CLASSIFICATION	2.0841380722214835E-5	DEFECT
// need to work out the space used by the tick labels... // so we can update the cursor...	WITHOUT_CLASSIFICATION	0.9999942090682773	WITHOUT_CLASSIFICATION	5.7909317226751E-6	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9999847508432945	WITHOUT_CLASSIFICATION	1.524915670549692E-5	DEFECT
// if autoRange is true, then the current range is irrelevant	WITHOUT_CLASSIFICATION	0.9999998287793396	WITHOUT_CLASSIFICATION	1.7122066038136383E-7	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.9999998723828181	WITHOUT_CLASSIFICATION	1.2761718191850256E-7	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.9999998723828181	WITHOUT_CLASSIFICATION	1.2761718191850256E-7	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.9999969541827629	WITHOUT_CLASSIFICATION	3.0458172372041064E-6	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.9999969541827629	WITHOUT_CLASSIFICATION	3.0458172372041064E-6	DEFECT
//return value; negate if original value was negative:	WITHOUT_CLASSIFICATION	0.9999997743059017	WITHOUT_CLASSIFICATION	2.256940982903179E-7	DEFECT
//invert adjustLog10	WITHOUT_CLASSIFICATION	0.9999999501394453	WITHOUT_CLASSIFICATION	4.9860554572156855E-8	DEFECT
//calculate floor using negative value:	WITHOUT_CLASSIFICATION	0.999999162490924	WITHOUT_CLASSIFICATION	8.375090760258327E-7	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.9999996606364789	WITHOUT_CLASSIFICATION	3.3936352106988853E-7	DEFECT
//negative values are allowed	WITHOUT_CLASSIFICATION	0.9999934481444892	WITHOUT_CLASSIFICATION	6.551855510889535E-6	DEFECT
//calculate ceil using negative value:	WITHOUT_CLASSIFICATION	0.9999993899744386	WITHOUT_CLASSIFICATION	6.100255613754281E-7	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999972981746	WITHOUT_CLASSIFICATION	2.701825400010669E-6	DEFECT
// legendTextPaint	WITHOUT_CLASSIFICATION	0.9999984528290023	WITHOUT_CLASSIFICATION	1.547170997657722E-6	DEFECT
//setup for "1e#"-style tick labels or regular // numeric tick labels, depending on flag:	WITHOUT_CLASSIFICATION	0.999998468021271	WITHOUT_CLASSIFICATION	1.5319787289096198E-6	DEFECT
// if < 10 then //increase so 0 translates to 0	WITHOUT_CLASSIFICATION	0.9999997004510902	WITHOUT_CLASSIFICATION	2.9954890977145253E-7	DEFECT
//negative values are allowed //parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999315400667825	WITHOUT_CLASSIFICATION	6.845993321750198E-5	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9999982198335098	WITHOUT_CLASSIFICATION	1.7801664902222698E-6	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9999994101193338	WITHOUT_CLASSIFICATION	5.898806661929359E-7	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9999994101193338	WITHOUT_CLASSIFICATION	5.898806661929359E-7	DEFECT
//negative values not allowed //parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999637532785124	WITHOUT_CLASSIFICATION	3.62467214876124E-5	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.999999202785727	WITHOUT_CLASSIFICATION	7.972142731939945E-7	DEFECT
//parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999843900147758	WITHOUT_CLASSIFICATION	1.5609985224175086E-5	DEFECT
//parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999892248454547	WITHOUT_CLASSIFICATION	1.0775154545326482E-5	DEFECT
//no real data present	WITHOUT_CLASSIFICATION	0.9999998478861876	WITHOUT_CLASSIFICATION	1.521138123469518E-7	DEFECT
//get lower bound value	WITHOUT_CLASSIFICATION	0.9999996931954502	WITHOUT_CLASSIFICATION	3.0680454974998516E-7	DEFECT
//actual data is present //get lower bound value	WITHOUT_CLASSIFICATION	0.9999994174199769	WITHOUT_CLASSIFICATION	5.825800230827329E-7	DEFECT
//strict flag set, allow-negatives not set and values <= 0	WITHOUT_CLASSIFICATION	0.9999972702512874	WITHOUT_CLASSIFICATION	2.7297487125881115E-6	DEFECT
//apply lower margin by decreasing lower bound:	WITHOUT_CLASSIFICATION	0.9999999293933449	WITHOUT_CLASSIFICATION	7.060665507966747E-8	DEFECT
//lower bound and margin OK; get log10 of lower bound	WITHOUT_CLASSIFICATION	0.9999999646270604	WITHOUT_CLASSIFICATION	3.5372939564683036E-8	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.9999999336690297	WITHOUT_CLASSIFICATION	6.633097030833472E-8	DEFECT
//need to account for case where upper==0.0	WITHOUT_CLASSIFICATION	0.9999978644237544	WITHOUT_CLASSIFICATION	2.135576245628281E-6	DEFECT
//setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9999987149454448	WITHOUT_CLASSIFICATION	1.285054555201627E-6	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.9999993179804313	WITHOUT_CLASSIFICATION	6.820195686633845E-7	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.999999680565065	WITHOUT_CLASSIFICATION	3.1943493496195705E-7	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999990068552614	WITHOUT_CLASSIFICATION	9.931447385088158E-7	DEFECT
//for each power of 10 value; create ten ticks	WITHOUT_CLASSIFICATION	0.9999998049738555	WITHOUT_CLASSIFICATION	1.950261444223524E-7	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.9999988135001858	WITHOUT_CLASSIFICATION	1.1864998142486827E-6	DEFECT
//small log values in use; create numeric value for tick	WITHOUT_CLASSIFICATION	0.9999971738828588	WITHOUT_CLASSIFICATION	2.8261171413111306E-6	DEFECT
//create tick label (force use of fmt obj):	WITHOUT_CLASSIFICATION	0.9999998952610589	WITHOUT_CLASSIFICATION	1.0473894107963119E-7	DEFECT
//no tick label to be shown	WITHOUT_CLASSIFICATION	0.9999933604024432	WITHOUT_CLASSIFICATION	6.639597556790081E-6	DEFECT
//create tick label:	WITHOUT_CLASSIFICATION	0.9999987209771571	WITHOUT_CLASSIFICATION	1.2790228427674866E-6	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.9999993179804313	WITHOUT_CLASSIFICATION	6.820195686633845E-7	DEFECT
//if autorange still below minimum then adjust by 1% // (can be needed when minRange is very small):	WITHOUT_CLASSIFICATION	0.9999991107210449	WITHOUT_CLASSIFICATION	8.892789550917523E-7	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.999999680565065	WITHOUT_CLASSIFICATION	3.1943493496195705E-7	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999941833575391	WITHOUT_CLASSIFICATION	5.816642460909616E-6	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999996501635335	WITHOUT_CLASSIFICATION	3.498364663730527E-7	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999990068552614	WITHOUT_CLASSIFICATION	9.931447385088158E-7	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.9999988135001858	WITHOUT_CLASSIFICATION	1.1864998142486827E-6	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.9999994812794067	WITHOUT_CLASSIFICATION	5.187205932386475E-7	DEFECT
//showing "1e#"-style ticks or negative exponent // generating tick value between 0 & 1; show fewer	WITHOUT_CLASSIFICATION	0.9999985865346588	WITHOUT_CLASSIFICATION	1.4134653412041587E-6	DEFECT
//tick value not between 0 & 1 //show tick label if it's the first or last in // the set, or if it's 1-5; beyond that show // fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999999670537647	WITHOUT_CLASSIFICATION	3.2946235365999245E-8	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then //decrement to do 1.0 tick now //calculate power-of-ten value for tick:	WITHOUT_CLASSIFICATION	0.9999995967372535	WITHOUT_CLASSIFICATION	4.032627465647083E-7	DEFECT
// did not do zero tick last iteration	WITHOUT_CLASSIFICATION	0.999998242569295	WITHOUT_CLASSIFICATION	1.7574307049823675E-6	DEFECT
//tick value is 1.0 and 0.0 is within data range //set tick value to zero //indicate zero tick	WITHOUT_CLASSIFICATION	0.9999990630583058	WITHOUT_CLASSIFICATION	9.369416941400204E-7	DEFECT
// if past highest data value then exit // method	WITHOUT_CLASSIFICATION	0.999992308000602	WITHOUT_CLASSIFICATION	7.691999397956454E-6	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.9999991374890118	WITHOUT_CLASSIFICATION	8.625109882068633E-7	DEFECT
//for each tick with a label to be displayed	WITHOUT_CLASSIFICATION	0.9999985884852727	WITHOUT_CLASSIFICATION	1.411514727397297E-6	DEFECT
//small log values in use	WITHOUT_CLASSIFICATION	0.9999909028748352	WITHOUT_CLASSIFICATION	9.09712516484428E-6	DEFECT
//first tick of group; create label text	WITHOUT_CLASSIFICATION	0.9999999393078494	WITHOUT_CLASSIFICATION	6.069215063855913E-8	DEFECT
//not "log10"-type label	WITHOUT_CLASSIFICATION	0.9999776280544042	WITHOUT_CLASSIFICATION	2.2371945595774604E-5	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999941833575391	WITHOUT_CLASSIFICATION	5.816642460909616E-6	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.9999994812794067	WITHOUT_CLASSIFICATION	5.187205932386475E-7	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.9999991374890118	WITHOUT_CLASSIFICATION	8.625109882068633E-7	DEFECT
// ITEM_LABEL_PAINT	WITHOUT_CLASSIFICATION	0.9999983212395707	WITHOUT_CLASSIFICATION	1.6787604293101498E-6	DEFECT
//if flag then //create "log10"-type label	WITHOUT_CLASSIFICATION	0.9999818211108212	WITHOUT_CLASSIFICATION	1.817888917878044E-5	DEFECT
//if flag then //create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9999839184626582	WITHOUT_CLASSIFICATION	1.6081537341739562E-5	DEFECT
//not "1e#"-type label // if positive exponent then // make integer	WITHOUT_CLASSIFICATION	0.9999948602817189	WITHOUT_CLASSIFICATION	5.139718281075327E-6	DEFECT
//negative exponent; create fractional value //set exact number of fractional digits to // be shown:	WITHOUT_CLASSIFICATION	0.999998442273781	WITHOUT_CLASSIFICATION	1.5577262190880947E-6	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then	WITHOUT_CLASSIFICATION	0.9999976228035062	WITHOUT_CLASSIFICATION	2.377196493750157E-6	DEFECT
//decrement to do 1.0 tick now	WITHOUT_CLASSIFICATION	0.9999966102371484	WITHOUT_CLASSIFICATION	3.3897628516740364E-6	DEFECT
//first tick of group // did not do zero tick last // iteration	WITHOUT_CLASSIFICATION	0.9999999661733777	WITHOUT_CLASSIFICATION	3.3826622277876267E-8	DEFECT
// not first or last tick on graph and value // is 1.0 //change value to 0.0 //indicate zero tick //create label for tick	WITHOUT_CLASSIFICATION	0.9999998595351223	WITHOUT_CLASSIFICATION	1.4046487767952814E-7	DEFECT
//first or last tick on graph or value is 1.0 //create label for tick:	WITHOUT_CLASSIFICATION	0.999999032899385	WITHOUT_CLASSIFICATION	9.671006150641734E-7	DEFECT
//create "log10"-type label	WITHOUT_CLASSIFICATION	0.9999991693084763	WITHOUT_CLASSIFICATION	8.306915235811173E-7	DEFECT
//create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9999994784359483	WITHOUT_CLASSIFICATION	5.21564051660997E-7	DEFECT
// did zero tick last iteration //no label //clear flag	WITHOUT_CLASSIFICATION	0.999998928322536	WITHOUT_CLASSIFICATION	1.0716774639167583E-6	DEFECT
// not first tick of group //no label //make sure flag cleared	WITHOUT_CLASSIFICATION	0.9999998791444215	WITHOUT_CLASSIFICATION	1.208555785688021E-7	DEFECT
//if past highest data value then exit method	WITHOUT_CLASSIFICATION	0.9999802768138282	WITHOUT_CLASSIFICATION	1.9723186171825417E-5	DEFECT
//create tick object and add to list:	WITHOUT_CLASSIFICATION	0.9999926050366648	WITHOUT_CLASSIFICATION	7.3949633353378256E-6	DEFECT
//using exponents or force-formatter flag is set // (convert 'E' to lower-case 'e'):	WITHOUT_CLASSIFICATION	0.9999998614885388	WITHOUT_CLASSIFICATION	1.385114611822316E-7	DEFECT
// populate deprecated fields	WITHOUT_CLASSIFICATION	0.9999999883017207	WITHOUT_CLASSIFICATION	1.169827932203123E-8	DEFECT
// usually the range will be a DateRange, but if it isn't do a // conversion...	WITHOUT_CLASSIFICATION	0.9998870370085016	WITHOUT_CLASSIFICATION	1.1296299149839179E-4	DEFECT
// check the new minimum date relative to the current maximum date	WITHOUT_CLASSIFICATION	0.9999999556178077	WITHOUT_CLASSIFICATION	4.438219235202175E-8	DEFECT
// check the new maximum date relative to the current minimum date	WITHOUT_CLASSIFICATION	0.9999999575844318	WITHOUT_CLASSIFICATION	4.241556809683842E-8	DEFECT
// long result = calendar.getTimeInMillis(); // won't work with JDK 1.3	WITHOUT_CLASSIFICATION	0.9099078310848434	WITHOUT_CLASSIFICATION	0.09009216891515658	DEFECT
// date formatters	WITHOUT_CLASSIFICATION	0.9999930216008555	WITHOUT_CLASSIFICATION	6.978399144546445E-6	DEFECT
// milliseconds	WITHOUT_CLASSIFICATION	0.9999972526007979	WITHOUT_CLASSIFICATION	2.7473992021392154E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999915411992173	WITHOUT_CLASSIFICATION	8.458800782670193E-6	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999992559955534	WITHOUT_CLASSIFICATION	7.440044466849801E-7	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9996003468732577	WITHOUT_CLASSIFICATION	3.9965312674229757E-4	DEFECT
// seconds	WITHOUT_CLASSIFICATION	0.9999925849134707	WITHOUT_CLASSIFICATION	7.415086529284402E-6	DEFECT
// minutes	WITHOUT_CLASSIFICATION	0.9999996825165296	WITHOUT_CLASSIFICATION	3.174834703550468E-7	DEFECT
// hours	WITHOUT_CLASSIFICATION	0.9999994216677643	WITHOUT_CLASSIFICATION	5.78332235625094E-7	DEFECT
// days	WITHOUT_CLASSIFICATION	0.999990500844537	WITHOUT_CLASSIFICATION	9.499155462903147E-6	DEFECT
// months	WITHOUT_CLASSIFICATION	0.999998984068969	WITHOUT_CLASSIFICATION	1.015931030962251E-6	DEFECT
// years	WITHOUT_CLASSIFICATION	0.999994212608616	WITHOUT_CLASSIFICATION	5.787391384004617E-6	DEFECT
//Timeline hasn't method getStartTime()	WITHOUT_CLASSIFICATION	0.9999997133122087	WITHOUT_CLASSIFICATION	2.8668779138994656E-7	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999898938094146	WITHOUT_CLASSIFICATION	1.0106190585348668E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999707162755692	WITHOUT_CLASSIFICATION	2.9283724430766037E-5	DEFECT
// start with a unit that is at least 1/10th of the axis length	WITHOUT_CLASSIFICATION	0.999995850894749	WITHOUT_CLASSIFICATION	4.1491052510431134E-6	DEFECT
// now extrapolate based on label height and unit height...	WITHOUT_CLASSIFICATION	0.9999611887962018	WITHOUT_CLASSIFICATION	3.881120379814854E-5	DEFECT
// make final selection...	WITHOUT_CLASSIFICATION	0.9999758531263109	WITHOUT_CLASSIFICATION	2.41468736891108E-5	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.9999895440626777	WITHOUT_CLASSIFICATION	1.0455937322242437E-5	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9996025267256076	WITHOUT_CLASSIFICATION	3.974732743923616E-4	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9996025267256076	WITHOUT_CLASSIFICATION	3.974732743923616E-4	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.9999807657755295	WITHOUT_CLASSIFICATION	1.923422447050605E-5	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.9999807657755295	WITHOUT_CLASSIFICATION	1.923422447050605E-5	DEFECT
// even though the axis is not visible, we need to refresh ticks in // case the grid is being drawn...	WITHOUT_CLASSIFICATION	0.9968161639839348	WITHOUT_CLASSIFICATION	0.003183836016065244	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999890455127575	WITHOUT_CLASSIFICATION	1.0954487242446282E-5	DEFECT
// draw the axis label (note that 'state' is passed in *and* // returned)...	WITHOUT_CLASSIFICATION	0.9999999326927026	WITHOUT_CLASSIFICATION	6.73072974165064E-8	DEFECT
// when zooming to sub-millisecond ranges, it can be the case that // adjEnd == adjStart...and we can't have an axis with zero length // so we apply this instead:	WITHOUT_CLASSIFICATION	0.9999994278080648	WITHOUT_CLASSIFICATION	5.721919351265381E-7	DEFECT
// 'dateTickUnit' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.9999984181389497	WITHOUT_CLASSIFICATION	1.5818610502020809E-6	DEFECT
// 'tickMarkPosition' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.999993620868769	WITHOUT_CLASSIFICATION	6.379131230992936E-6	DEFECT
// if there is no specific font, use the general one...	WITHOUT_CLASSIFICATION	0.9999999883529362	WITHOUT_CLASSIFICATION	1.164706373004631E-8	DEFECT
// if there is no specific paint, use the general one...	WITHOUT_CLASSIFICATION	0.9999999909394502	WITHOUT_CLASSIFICATION	9.060549843294984E-9	DEFECT
// find first excluded base segment starting fromDomainValue	WITHOUT_CLASSIFICATION	0.999999994070313	WITHOUT_CLASSIFICATION	5.92968696912887E-9	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999987630503244	WITHOUT_CLASSIFICATION	1.2369496755777727E-6	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999940168942583	WITHOUT_CLASSIFICATION	5.983105741756439E-6	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9999847508432945	WITHOUT_CLASSIFICATION	1.524915670549692E-5	DEFECT
// nothing required	WITHOUT_CLASSIFICATION	0.9999954771638773	WITHOUT_CLASSIFICATION	4.522836122741948E-6	DEFECT
// sanity check for data area...	WITHOUT_CLASSIFICATION	0.9999975179892593	WITHOUT_CLASSIFICATION	2.4820107407119847E-6	DEFECT
// step down in size until the current size is too small or there are  // no more units	WITHOUT_CLASSIFICATION	0.9999987807893738	WITHOUT_CLASSIFICATION	1.2192106262488332E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // predetermined segments sizes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999460411769	WITHOUT_CLASSIFICATION	5.3958823063148854E-8	DEFECT
//////////////////////////////////////////////////////////////////////////// // other constants ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999472765236	WITHOUT_CLASSIFICATION	5.2723476365973225E-8	DEFECT
//////////////////////////////////////////////////////////////////////////// // private attributes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999075964422	WITHOUT_CLASSIFICATION	9.240355786146673E-8	DEFECT
//////////////////////////////////////////////////////////////////////////// // static block ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999537346175	WITHOUT_CLASSIFICATION	4.626538245654911E-8	DEFECT
// make a time zone with no DST for our Calendar calculations	WITHOUT_CLASSIFICATION	0.9999999454388452	WITHOUT_CLASSIFICATION	5.456115489629978E-8	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.9999989096181158	WITHOUT_CLASSIFICATION	1.0903818842657497E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // constructors and factory methods ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999422282105	WITHOUT_CLASSIFICATION	5.7771789550593496E-8	DEFECT
//////////////////////////////////////////////////////////////////////////// // operations ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999288692769	WITHOUT_CLASSIFICATION	7.11307230634996E-8	DEFECT
// verify that baseTimeline is compatible with us	WITHOUT_CLASSIFICATION	0.9999999576032692	WITHOUT_CLASSIFICATION	4.239673073927208E-8	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.9999993285047037	WITHOUT_CLASSIFICATION	6.714952962412299E-7	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.9999993285047037	WITHOUT_CLASSIFICATION	6.714952962412299E-7	DEFECT
//return toTimelineValue(dateDomainValue.getTime());	WITHOUT_CLASSIFICATION	0.999999893388106	WITHOUT_CLASSIFICATION	1.0661189406612601E-7	DEFECT
// calculate the result as if no exceptions	WITHOUT_CLASSIFICATION	0.9999999415964534	WITHOUT_CLASSIFICATION	5.840354654093433E-8	DEFECT
// adjust result for any exceptions in the result calculated	WITHOUT_CLASSIFICATION	0.9999988174333946	WITHOUT_CLASSIFICATION	1.1825666054182448E-6	DEFECT
// skip all whole exception segments in the range	WITHOUT_CLASSIFICATION	0.999999913942164	WITHOUT_CLASSIFICATION	8.605783598207667E-8	DEFECT
// skip exception or excluded segments we may fall on	WITHOUT_CLASSIFICATION	0.999996884668043	WITHOUT_CLASSIFICATION	3.115331956939946E-6	DEFECT
//addException(exceptionDate.getTime());	WITHOUT_CLASSIFICATION	0.9999968982343372	WITHOUT_CLASSIFICATION	3.1017656626212536E-6	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.9999995901149844	WITHOUT_CLASSIFICATION	4.0988501548326586E-7	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.9999999699863982	WITHOUT_CLASSIFICATION	3.001360187692979E-8	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.9999995901149844	WITHOUT_CLASSIFICATION	4.0988501548326586E-7	DEFECT
// move forward exceptionSegmentCount segments skipping // excluded segments	WITHOUT_CLASSIFICATION	0.9999995992274531	WITHOUT_CLASSIFICATION	4.0077254703042763E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999974445620377	WITHOUT_CLASSIFICATION	2.555437962230797E-6	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.9999999699863982	WITHOUT_CLASSIFICATION	3.001360187692979E-8	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.9999938975229722	WITHOUT_CLASSIFICATION	6.102477027837636E-6	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.999999978268216	WITHOUT_CLASSIFICATION	2.1731783965188845E-8	DEFECT
// cycle over all the base segments groups in the range	WITHOUT_CLASSIFICATION	0.9999999473666704	WITHOUT_CLASSIFICATION	5.2633329551850046E-8	DEFECT
// cycle through all the segments contained in the base exclusion // area	WITHOUT_CLASSIFICATION	0.9999989508164226	WITHOUT_CLASSIFICATION	1.0491835773128094E-6	DEFECT
// go to next base segment group	WITHOUT_CLASSIFICATION	0.9999994030852404	WITHOUT_CLASSIFICATION	5.969147595833399E-7	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.9999183377510257	WITHOUT_CLASSIFICATION	8.166224897441538E-5	DEFECT
// Segment fromSegment = getSegment(from); // fromSegment.inc(); // Segment toSegment = getSegment(to); // toSegment.dec();	WITHOUT_CLASSIFICATION	0.9999983035334424	WITHOUT_CLASSIFICATION	1.6964665575295382E-6	DEFECT
// long start = Math.max( //     fromSegment.getSegmentStart(), this.segmentStart // ); // long end = Math.min(toSegment.getSegmentEnd(), this.segmentEnd);	WITHOUT_CLASSIFICATION	0.9999995315304485	WITHOUT_CLASSIFICATION	4.684695515612843E-7	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9999999558465795	WITHOUT_CLASSIFICATION	4.4153420614863334E-8	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999999895055056	WITHOUT_CLASSIFICATION	1.049449439834532E-8	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999999895055056	WITHOUT_CLASSIFICATION	1.049449439834532E-8	DEFECT
// If tick overlap when cycling, update last tick too	WITHOUT_CLASSIFICATION	0.9999999290781872	WITHOUT_CLASSIFICATION	7.092181274441222E-8	DEFECT
// continue and separate the labels only if necessary	WITHOUT_CLASSIFICATION	0.9999999734088842	WITHOUT_CLASSIFICATION	2.659111565591617E-8	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999743373657688	WITHOUT_CLASSIFICATION	2.566263423117773E-5	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999743373657688	WITHOUT_CLASSIFICATION	2.566263423117773E-5	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999743373657688	WITHOUT_CLASSIFICATION	2.566263423117773E-5	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998677664139796	WITHOUT_CLASSIFICATION	1.3223358602035322E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998677664139796	WITHOUT_CLASSIFICATION	1.3223358602035322E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998677664139796	WITHOUT_CLASSIFICATION	1.3223358602035322E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999984489297556	WITHOUT_CLASSIFICATION	1.5510702443565356E-6	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999984489297556	WITHOUT_CLASSIFICATION	1.5510702443565356E-6	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999984489297556	WITHOUT_CLASSIFICATION	1.5510702443565356E-6	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999855440351092	WITHOUT_CLASSIFICATION	1.4455964890822643E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999855440351092	WITHOUT_CLASSIFICATION	1.4455964890822643E-5	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999996136270507	WITHOUT_CLASSIFICATION	3.8637294928792766E-7	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999996136270507	WITHOUT_CLASSIFICATION	3.8637294928792766E-7	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.9999717438835921	WITHOUT_CLASSIFICATION	2.825611640790236E-5	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999972981746	WITHOUT_CLASSIFICATION	2.701825400010669E-6	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999972981746	WITHOUT_CLASSIFICATION	2.701825400010669E-6	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9991816955061913	WITHOUT_CLASSIFICATION	8.183044938087556E-4	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9995739982414191	WITHOUT_CLASSIFICATION	4.260017585808526E-4	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999915411992173	WITHOUT_CLASSIFICATION	8.458800782670193E-6	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999890455127575	WITHOUT_CLASSIFICATION	1.0954487242446282E-5	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999743373657688	WITHOUT_CLASSIFICATION	2.566263423117773E-5	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998677664139796	WITHOUT_CLASSIFICATION	1.3223358602035322E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998677664139796	WITHOUT_CLASSIFICATION	1.3223358602035322E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999984489297556	WITHOUT_CLASSIFICATION	1.5510702443565356E-6	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999984489297556	WITHOUT_CLASSIFICATION	1.5510702443565356E-6	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999855440351092	WITHOUT_CLASSIFICATION	1.4455964890822643E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999855440351092	WITHOUT_CLASSIFICATION	1.4455964890822643E-5	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.999999978268216	WITHOUT_CLASSIFICATION	2.1731783965188845E-8	DEFECT
// default make height of plotArea	WITHOUT_CLASSIFICATION	0.9999962813914044	WITHOUT_CLASSIFICATION	3.718608595578232E-6	DEFECT
// allow fixed thickness	WITHOUT_CLASSIFICATION	0.9999944966786548	WITHOUT_CLASSIFICATION	5.50332134514E-6	DEFECT
// update, but dont draw tick marks (needed for stepped colors)	WITHOUT_CLASSIFICATION	0.9999999460057378	WITHOUT_CLASSIFICATION	5.399426227560445E-8	DEFECT
// suppresses compiler warnings	WITHOUT_CLASSIFICATION	0.9999994729638869	WITHOUT_CLASSIFICATION	5.270361130670118E-7	DEFECT
// setTickValues was missing from ColorPalette v. 0.96 //colorPalette.setTickValues(this.axis.getTicks());	WITHOUT_CLASSIFICATION	0.9999999155425021	WITHOUT_CLASSIFICATION	8.445749796282552E-8	DEFECT
// calculate the adjusted data area taking into account the 3D effect...	WITHOUT_CLASSIFICATION	0.992131007399307	WITHOUT_CLASSIFICATION	0.00786899260069286	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999915725323	WITHOUT_CLASSIFICATION	8.427467749849676E-9	DEFECT
// transparent	WITHOUT_CLASSIFICATION	0.9999993962365776	WITHOUT_CLASSIFICATION	6.037634224970001E-7	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9997902616955401	WITHOUT_CLASSIFICATION	2.0973830445992705E-4	DEFECT
// ensure that all the symbols are displayed	WITHOUT_CLASSIFICATION	0.9999997523901291	WITHOUT_CLASSIFICATION	2.476098709756708E-7	DEFECT
// this ensure that the grid bands will be displayed correctly.	WITHOUT_CLASSIFICATION	0.9967638547108659	WITHOUT_CLASSIFICATION	0.0032361452891341395	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.9999999682428157	WITHOUT_CLASSIFICATION	3.1757184362559864E-8	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.9999999682428157	WITHOUT_CLASSIFICATION	3.1757184362559864E-8	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.9999819275998546	WITHOUT_CLASSIFICATION	1.8072400145425992E-5	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.9999819275998546	WITHOUT_CLASSIFICATION	1.8072400145425992E-5	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.999971370629172	WITHOUT_CLASSIFICATION	2.8629370827998642E-5	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.999971370629172	WITHOUT_CLASSIFICATION	2.8629370827998642E-5	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.999999978268216	WITHOUT_CLASSIFICATION	2.1731783965188845E-8	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9991816955061913	WITHOUT_CLASSIFICATION	8.183044938087556E-4	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9995739982414191	WITHOUT_CLASSIFICATION	4.260017585808526E-4	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.9999971804549407	WITHOUT_CLASSIFICATION	2.8195450591899687E-6	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999987630503244	WITHOUT_CLASSIFICATION	1.2369496755777727E-6	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999992559955534	WITHOUT_CLASSIFICATION	7.440044466849801E-7	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9996003468732577	WITHOUT_CLASSIFICATION	3.9965312674229757E-4	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999898938094146	WITHOUT_CLASSIFICATION	1.0106190585348668E-5	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999898938094146	WITHOUT_CLASSIFICATION	1.0106190585348668E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999707162755692	WITHOUT_CLASSIFICATION	2.9283724430766037E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999707162755692	WITHOUT_CLASSIFICATION	2.9283724430766037E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999999395542059	WITHOUT_CLASSIFICATION	6.044579419454469E-8	DEFECT
// must be top or bottom	WITHOUT_CLASSIFICATION	0.9999999604303214	WITHOUT_CLASSIFICATION	3.956967869263164E-8	DEFECT
// catches null also	WITHOUT_CLASSIFICATION	0.9999996042052288	WITHOUT_CLASSIFICATION	3.9579477126834477E-7	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999936381127336	WITHOUT_CLASSIFICATION	6.361887266524287E-6	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999936381127336	WITHOUT_CLASSIFICATION	6.361887266524287E-6	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9999998741648299	WITHOUT_CLASSIFICATION	1.258351700665348E-7	DEFECT
// place in this row (truncated) anyway	WITHOUT_CLASSIFICATION	0.9999971634725507	WITHOUT_CLASSIFICATION	2.836527449302036E-6	DEFECT
// start new row	WITHOUT_CLASSIFICATION	0.9999998847128287	WITHOUT_CLASSIFICATION	1.1528717124652816E-7	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9999948774164947	WITHOUT_CLASSIFICATION	5.122583505255581E-6	DEFECT
// can safely ignore	WITHOUT_CLASSIFICATION	0.9999992755460252	WITHOUT_CLASSIFICATION	7.244539748604639E-7	DEFECT
// find optimum height, then map to range	WITHOUT_CLASSIFICATION	0.9999998689923143	WITHOUT_CLASSIFICATION	1.310076856279518E-7	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9999997798267145	WITHOUT_CLASSIFICATION	2.2017328556294405E-7	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9999997798267145	WITHOUT_CLASSIFICATION	2.2017328556294405E-7	DEFECT
// find optimum height and map to range	WITHOUT_CLASSIFICATION	0.999999865860789	WITHOUT_CLASSIFICATION	1.341392109269035E-7	DEFECT
// find optimum width and map to range	WITHOUT_CLASSIFICATION	0.9999999693588676	WITHOUT_CLASSIFICATION	3.064113238870882E-8	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999999395542059	WITHOUT_CLASSIFICATION	6.044579419454469E-8	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999999395542059	WITHOUT_CLASSIFICATION	6.044579419454469E-8	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999996524388979	WITHOUT_CLASSIFICATION	3.475611021050268E-7	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999936381127336	WITHOUT_CLASSIFICATION	6.361887266524287E-6	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999963939981141	WITHOUT_CLASSIFICATION	3.606001885940214E-6	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.9999997238594837	WITHOUT_CLASSIFICATION	2.7614051633040956E-7	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.9999997238594837	WITHOUT_CLASSIFICATION	2.7614051633040956E-7	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9999998741648299	WITHOUT_CLASSIFICATION	1.258351700665348E-7	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9999948774164947	WITHOUT_CLASSIFICATION	5.122583505255581E-6	DEFECT
// this default implementation will just fill the available // border space with a single color	WITHOUT_CLASSIFICATION	0.9999989874560506	WITHOUT_CLASSIFICATION	1.01254394928955E-6	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999994860727632	WITHOUT_CLASSIFICATION	5.13927236793679E-7	DEFECT
// fixed width	WITHOUT_CLASSIFICATION	0.9999892946797885	WITHOUT_CLASSIFICATION	1.0705320211492782E-5	DEFECT
// width is OK, but height must be constrained	WITHOUT_CLASSIFICATION	0.9999989949364811	WITHOUT_CLASSIFICATION	1.005063518894491E-6	DEFECT
// height is OK, but width must be constrained	WITHOUT_CLASSIFICATION	0.9999961165575302	WITHOUT_CLASSIFICATION	3.883442469780354E-6	DEFECT
// nothing to clear	WITHOUT_CLASSIFICATION	0.9999997916408345	WITHOUT_CLASSIFICATION	2.0835916545529517E-7	DEFECT
// if the area has zero height or width, we shouldn't draw anything	WITHOUT_CLASSIFICATION	0.9999301842424512	WITHOUT_CLASSIFICATION	6.981575754886894E-5	DEFECT
// since the flow layout is relatively straightforward, no information // needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999986584073915	WITHOUT_CLASSIFICATION	1.3415926084823172E-6	DEFECT
// place in this column (truncated) anyway	WITHOUT_CLASSIFICATION	0.999999406640994	WITHOUT_CLASSIFICATION	5.933590060095421E-7	DEFECT
// start new column	WITHOUT_CLASSIFICATION	0.9999999797132213	WITHOUT_CLASSIFICATION	2.0286778758029564E-8	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999999979221349	WITHOUT_CLASSIFICATION	2.0778651021830923E-9	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9999980244555708	WITHOUT_CLASSIFICATION	1.975544429078887E-6	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.9999992243710188	WITHOUT_CLASSIFICATION	7.756289812254318E-7	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999999770618758	WITHOUT_CLASSIFICATION	2.2938124181896567E-8	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999999442347814	WITHOUT_CLASSIFICATION	5.576521845896267E-8	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999986911097706	WITHOUT_CLASSIFICATION	1.3088902294000686E-6	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9999994411874176	WITHOUT_CLASSIFICATION	5.588125825029681E-7	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.999999995120857	WITHOUT_CLASSIFICATION	4.879142990540846E-9	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9999982028741592	WITHOUT_CLASSIFICATION	1.7971258408719228E-6	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9999999986462896	WITHOUT_CLASSIFICATION	1.3537103102441765E-9	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.9999993740828148	WITHOUT_CLASSIFICATION	6.25917185076224E-7	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9999996854650802	WITHOUT_CLASSIFICATION	3.145349197824141E-7	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999988619268757	WITHOUT_CLASSIFICATION	1.1380731242685332E-6	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999988619268757	WITHOUT_CLASSIFICATION	1.1380731242685332E-6	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999988619268757	WITHOUT_CLASSIFICATION	1.1380731242685332E-6	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9998014180400427	WITHOUT_CLASSIFICATION	1.9858195995718287E-4	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9998014180400427	WITHOUT_CLASSIFICATION	1.9858195995718287E-4	DEFECT
//    /** Insets text field. */ //    private InsetsTextField tickLabelInsetsTextField; // //    /** Label insets text field. */ //    private InsetsTextField labelInsetsTextField;	WITHOUT_CLASSIFICATION	0.9999997271846989	WITHOUT_CLASSIFICATION	2.728153010537297E-7	DEFECT
// figure out what type of axis we have and instantiate the // appropriate panel	WITHOUT_CLASSIFICATION	0.9999996307765863	WITHOUT_CLASSIFICATION	3.692234136691171E-7	DEFECT
// Insets values	WITHOUT_CLASSIFICATION	0.9999991391979015	WITHOUT_CLASSIFICATION	8.608020984752488E-7	DEFECT
// axis.setTickMarkStroke(getTickMarkStroke());	WITHOUT_CLASSIFICATION	0.9999988843059466	WITHOUT_CLASSIFICATION	1.1156940533898114E-6	DEFECT
// create a panel for the settings...	WITHOUT_CLASSIFICATION	0.9999999446937928	WITHOUT_CLASSIFICATION	5.5306207161828995E-8	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9999859855702627	WITHOUT_CLASSIFICATION	1.4014429737249485E-5	DEFECT
//      end fix by rfuller	WITHOUT_CLASSIFICATION	0.999785025775405	WITHOUT_CLASSIFICATION	2.1497422459516985E-4	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.999843377987876	WITHOUT_CLASSIFICATION	1.5662201212404038E-4	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.9999933246458302	WITHOUT_CLASSIFICATION	6.675354169837318E-6	DEFECT
// then the axis properties...	WITHOUT_CLASSIFICATION	0.9999746469278311	WITHOUT_CLASSIFICATION	2.5353072168777525E-5	DEFECT
// pass to super-class for handling	WITHOUT_CLASSIFICATION	0.9999990473714535	WITHOUT_CLASSIFICATION	9.526285464871413E-7	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.999995580212436	WITHOUT_CLASSIFICATION	4.419787564067809E-6	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.999995580212436	WITHOUT_CLASSIFICATION	4.419787564067809E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999821788591	WITHOUT_CLASSIFICATION	1.782114085571408E-8	DEFECT
//      fix by rfuller	WITHOUT_CLASSIFICATION	0.9998714546766798	WITHOUT_CLASSIFICATION	1.285453233202818E-4	DEFECT
// populate the deprecated fields	WITHOUT_CLASSIFICATION	0.9999999942314644	WITHOUT_CLASSIFICATION	5.76853566205911E-9	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.999999293399865	WITHOUT_CLASSIFICATION	7.066001350740136E-7	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.999999293399865	WITHOUT_CLASSIFICATION	7.066001350740136E-7	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.999999293399865	WITHOUT_CLASSIFICATION	7.066001350740136E-7	DEFECT
// update the deprecated field	WITHOUT_CLASSIFICATION	0.9999999966931875	WITHOUT_CLASSIFICATION	3.306812617956784E-9	DEFECT
// update the deprecated fields	WITHOUT_CLASSIFICATION	0.9999999978680146	WITHOUT_CLASSIFICATION	2.131985364387168E-9	DEFECT
// check the deprecated fields	WITHOUT_CLASSIFICATION	0.9999999987009679	WITHOUT_CLASSIFICATION	1.2990320784046157E-9	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999965254522406	WITHOUT_CLASSIFICATION	3.47454775947276E-6	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.9999961796734165	WITHOUT_CLASSIFICATION	3.82032658349604E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999996017501482	WITHOUT_CLASSIFICATION	3.9824985179223825E-6	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.9999998433053566	WITHOUT_CLASSIFICATION	1.5669464335628531E-7	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9999980244555708	WITHOUT_CLASSIFICATION	1.975544429078887E-6	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.9999992243710188	WITHOUT_CLASSIFICATION	7.756289812254318E-7	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.999999995120857	WITHOUT_CLASSIFICATION	4.879142990540846E-9	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9999982028741592	WITHOUT_CLASSIFICATION	1.7971258408719228E-6	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9999999986462896	WITHOUT_CLASSIFICATION	1.3537103102441765E-9	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.9999993740828148	WITHOUT_CLASSIFICATION	6.25917185076224E-7	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9999996854650802	WITHOUT_CLASSIFICATION	3.145349197824141E-7	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.999999293399865	WITHOUT_CLASSIFICATION	7.066001350740136E-7	DEFECT
//dmo added //dmo added	WITHOUT_CLASSIFICATION	0.9999982743889595	WITHOUT_CLASSIFICATION	1.7256110404872213E-6	DEFECT
// if there is a tool tip, we expect it to generate the title and // alt values, so we only add an empty alt if there is no tooltip	WITHOUT_CLASSIFICATION	0.9999999871715168	WITHOUT_CLASSIFICATION	1.2828483118574284E-8	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999994997846446	WITHOUT_CLASSIFICATION	5.002153552939725E-7	DEFECT
// FIXME	WITHOUT_CLASSIFICATION	0.9221557581462658	WITHOUT_CLASSIFICATION	0.07784424185373415	DEFECT
// this is a paint we don't recognise	WITHOUT_CLASSIFICATION	0.9999344482405659	WITHOUT_CLASSIFICATION	6.555175943408893E-5	DEFECT
// null is handled fine here...	WITHOUT_CLASSIFICATION	0.9999711664407545	WITHOUT_CLASSIFICATION	2.8833559245474643E-5	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9999337699263718	WITHOUT_CLASSIFICATION	6.623007362817465E-5	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.9999999580593011	WITHOUT_CLASSIFICATION	4.194069888699148E-8	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.999999356637462	WITHOUT_CLASSIFICATION	6.433625381021043E-7	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.999999356637462	WITHOUT_CLASSIFICATION	6.433625381021043E-7	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.9999999906632624	WITHOUT_CLASSIFICATION	9.33673753572889E-9	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.9999999906632624	WITHOUT_CLASSIFICATION	9.33673753572889E-9	DEFECT
// set the default stroke for all series	WITHOUT_CLASSIFICATION	0.9999994813554701	WITHOUT_CLASSIFICATION	5.186445298024087E-7	DEFECT
//this.chartPanel.isDomainZoomable()) {	WITHOUT_CLASSIFICATION	0.9999999992603632	WITHOUT_CLASSIFICATION	7.3963688645886E-10	DEFECT
//this.chartPanel.isRangeZoomable()) {	WITHOUT_CLASSIFICATION	0.9999999976923747	WITHOUT_CLASSIFICATION	2.307625346646361E-9	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999997073636852	WITHOUT_CLASSIFICATION	2.926363148083885E-7	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999997073636852	WITHOUT_CLASSIFICATION	2.926363148083885E-7	DEFECT
// does nothing unless overridden        	WITHOUT_CLASSIFICATION	0.9999988742972922	WITHOUT_CLASSIFICATION	1.1257027078416546E-6	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999908463909323	WITHOUT_CLASSIFICATION	9.15360906776071E-6	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999999999297198	WITHOUT_CLASSIFICATION	7.028021305335894E-11	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999999770618758	WITHOUT_CLASSIFICATION	2.2938124181896567E-8	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999997073636852	WITHOUT_CLASSIFICATION	2.926363148083885E-7	DEFECT
// special case - if the underlying rectangle uses ints we // need to create one that uses doubles	WITHOUT_CLASSIFICATION	0.999999982148759	WITHOUT_CLASSIFICATION	1.785124102288773E-8	DEFECT
// title // x-axis label // y-axis label	WITHOUT_CLASSIFICATION	0.9999972086646935	WITHOUT_CLASSIFICATION	2.791335306447045E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999996017501482	WITHOUT_CLASSIFICATION	3.9824985179223825E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999996017501482	WITHOUT_CLASSIFICATION	3.9824985179223825E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999999396276079	WITHOUT_CLASSIFICATION	6.037239208622945E-8	DEFECT
// the actual panning occurs later in the mouseDragged() method	WITHOUT_CLASSIFICATION	0.9999998815632833	WITHOUT_CLASSIFICATION	1.1843671667924224E-7	DEFECT
//handle panning if we have a start point else unregister	WITHOUT_CLASSIFICATION	0.9999999962718363	WITHOUT_CLASSIFICATION	3.728163603194479E-9	DEFECT
//if we have been panning reset the cursor //unregister in any case	WITHOUT_CLASSIFICATION	0.9999997956754242	WITHOUT_CLASSIFICATION	2.04324575866075E-7	DEFECT
// the URL text should already have been escaped by the URL generator	WITHOUT_CLASSIFICATION	0.99999918691446	WITHOUT_CLASSIFICATION	8.130855399384076E-7	DEFECT
// no fields to test	WITHOUT_CLASSIFICATION	0.9999994441139983	WITHOUT_CLASSIFICATION	5.558860017079951E-7	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9999983099567009	WITHOUT_CLASSIFICATION	1.690043299111844E-6	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9999983099567009	WITHOUT_CLASSIFICATION	1.690043299111844E-6	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.999981314528517	WITHOUT_CLASSIFICATION	1.8685471483066762E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.999981314528517	WITHOUT_CLASSIFICATION	1.8685471483066762E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.999981314528517	WITHOUT_CLASSIFICATION	1.8685471483066762E-5	DEFECT
// isArrowAtTop	WITHOUT_CLASSIFICATION	0.9999726492412327	WITHOUT_CLASSIFICATION	2.7350758767342235E-5	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.9999928337824638	WITHOUT_CLASSIFICATION	7.166217536104238E-6	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.9999928337824638	WITHOUT_CLASSIFICATION	7.166217536104238E-6	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.999998090059386	WITHOUT_CLASSIFICATION	1.9099406140309233E-6	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.999998090059386	WITHOUT_CLASSIFICATION	1.9099406140309233E-6	DEFECT
/// we have rotation houston, please spin me	WITHOUT_CLASSIFICATION	0.9999973194303913	WITHOUT_CLASSIFICATION	2.680569608656624E-6	DEFECT
// horizontal	WITHOUT_CLASSIFICATION	0.999998055054334	WITHOUT_CLASSIFICATION	1.944945666006393E-6	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.999999052769354	WITHOUT_CLASSIFICATION	9.472306460601766E-7	DEFECT
// configure the range axis...	WITHOUT_CLASSIFICATION	0.9999989274171919	WITHOUT_CLASSIFICATION	1.0725828080594111E-6	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9998766294128537	WITHOUT_CLASSIFICATION	1.2337058714632828E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999043243943664	WITHOUT_CLASSIFICATION	9.567560563367919E-5	DEFECT
// we expect the line to be vertical or horizontal // vertical	WITHOUT_CLASSIFICATION	0.9999981362734783	WITHOUT_CLASSIFICATION	1.8637265216901563E-6	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.9999974823161465	WITHOUT_CLASSIFICATION	2.517683853399914E-6	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.999999661959715	WITHOUT_CLASSIFICATION	3.380402848758316E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999967820146742	WITHOUT_CLASSIFICATION	3.217985325889264E-6	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999971888770429	WITHOUT_CLASSIFICATION	2.8111229570935394E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999997852535375	WITHOUT_CLASSIFICATION	2.1474646240106567E-7	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999998250872745	WITHOUT_CLASSIFICATION	1.7491272551628877E-7	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.9999999886950418	WITHOUT_CLASSIFICATION	1.1304958082062301E-8	DEFECT
// the range axis is deserialized before the subplots, so its value // range is likely to be incorrect...	WITHOUT_CLASSIFICATION	0.9995750826962153	WITHOUT_CLASSIFICATION	4.249173037847528E-4	DEFECT
// default preserves previous // behaviour	WITHOUT_CLASSIFICATION	0.9999999902478469	WITHOUT_CLASSIFICATION	9.752152969229476E-9	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.999997993530926	WITHOUT_CLASSIFICATION	2.006469074120054E-6	DEFECT
// make the link area a square if the pie chart is to be circular... // is circular?	WITHOUT_CLASSIFICATION	0.9999982721998217	WITHOUT_CLASSIFICATION	1.7278001783193515E-6	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999999659378913	WITHOUT_CLASSIFICATION	3.40621086758866E-8	DEFECT
// the explode area defines the max circle/ellipse for the exploded pie // sections. // it is defined by shrinking the linkArea by the linkMargin factor.	WITHOUT_CLASSIFICATION	0.9999999232149808	WITHOUT_CLASSIFICATION	7.678501922839927E-8	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.999999939208882	WITHOUT_CLASSIFICATION	6.079111800093398E-8	DEFECT
// the link area defines the dog-leg point for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999999820789154	WITHOUT_CLASSIFICATION	1.792108456776043E-8	DEFECT
// get the data source - return if null;	WITHOUT_CLASSIFICATION	0.9999998739020471	WITHOUT_CLASSIFICATION	1.2609795291617797E-7	DEFECT
// if too any elements	WITHOUT_CLASSIFICATION	0.9999999022621272	WITHOUT_CLASSIFICATION	9.773787270361032E-8	DEFECT
// get a list of keys...	WITHOUT_CLASSIFICATION	0.9999983067783865	WITHOUT_CLASSIFICATION	1.6932216135612266E-6	DEFECT
// do nothing by default.	WITHOUT_CLASSIFICATION	0.9999997921664623	WITHOUT_CLASSIFICATION	2.0783353763687787E-7	DEFECT
//g2.clip(clipArea);	WITHOUT_CLASSIFICATION	0.9999989712662279	WITHOUT_CLASSIFICATION	1.028733771996151E-6	DEFECT
// if depth is negative don't draw anything	WITHOUT_CLASSIFICATION	0.9999988125850052	WITHOUT_CLASSIFICATION	1.1874149947188858E-6	DEFECT
// draw the bottom circle	WITHOUT_CLASSIFICATION	0.9999998944974199	WITHOUT_CLASSIFICATION	1.0550258014008063E-7	DEFECT
// draw the height	WITHOUT_CLASSIFICATION	0.9999970645181264	WITHOUT_CLASSIFICATION	2.935481873534106E-6	DEFECT
// cycle through once drawing only the sides at the back...	WITHOUT_CLASSIFICATION	0.9999817227808497	WITHOUT_CLASSIFICATION	1.827721915019041E-5	DEFECT
// cycle through again drawing only the sides at the front...	WITHOUT_CLASSIFICATION	0.9999460509261171	WITHOUT_CLASSIFICATION	5.394907388299144E-5	DEFECT
// add a tooltip for the section...	WITHOUT_CLASSIFICATION	0.9999996105580525	WITHOUT_CLASSIFICATION	3.8944194747166166E-7	DEFECT
// @mgs: using the method's return value was missing	WITHOUT_CLASSIFICATION	0.9999903329703393	WITHOUT_CLASSIFICATION	9.667029660714071E-6	DEFECT
// for CLOCKWISE charts, the extent will be negative...	WITHOUT_CLASSIFICATION	0.9999982872114708	WITHOUT_CLASSIFICATION	1.7127885292559434E-6	DEFECT
// start at front	WITHOUT_CLASSIFICATION	0.9999991837048253	WITHOUT_CLASSIFICATION	8.162951745791166E-7	DEFECT
// the segment starts at the front, and wraps all // the way around // the back and finishes at the front again	WITHOUT_CLASSIFICATION	0.9999981763767998	WITHOUT_CLASSIFICATION	1.8236232001720935E-6	DEFECT
// starts at the front, finishes at the back (going // around the left side)	WITHOUT_CLASSIFICATION	0.9999994479936627	WITHOUT_CLASSIFICATION	5.520063373167819E-7	DEFECT
// the segment starts at the back (still extending // CLOCKWISE)	WITHOUT_CLASSIFICATION	0.9999992512443505	WITHOUT_CLASSIFICATION	7.487556494969835E-7	DEFECT
// whole segment stays at the back	WITHOUT_CLASSIFICATION	0.9999499728983812	WITHOUT_CLASSIFICATION	5.002710161884051E-5	DEFECT
// starts at the back, wraps around front, and // finishes at back again	WITHOUT_CLASSIFICATION	0.9999999200149556	WITHOUT_CLASSIFICATION	7.998504436623042E-8	DEFECT
// starts at back, finishes at front (CLOCKWISE)	WITHOUT_CLASSIFICATION	0.9999995608726454	WITHOUT_CLASSIFICATION	4.39127354598379E-7	DEFECT
// segment starts at the front	WITHOUT_CLASSIFICATION	0.9999974026959892	WITHOUT_CLASSIFICATION	2.5973040108107673E-6	DEFECT
// and finishes at the front	WITHOUT_CLASSIFICATION	0.9999981342280277	WITHOUT_CLASSIFICATION	1.8657719722581608E-6	DEFECT
// segment only occupies the front	WITHOUT_CLASSIFICATION	0.9999777826989226	WITHOUT_CLASSIFICATION	2.22173010773553E-5	DEFECT
// segments wraps right around the back...	WITHOUT_CLASSIFICATION	0.999987886270295	WITHOUT_CLASSIFICATION	1.2113729705104762E-5	DEFECT
// segments starts at front and finishes at back...	WITHOUT_CLASSIFICATION	0.9999585887001181	WITHOUT_CLASSIFICATION	4.1411299882006604E-5	DEFECT
// segment starts at back	WITHOUT_CLASSIFICATION	0.9999993496502266	WITHOUT_CLASSIFICATION	6.503497733005828E-7	DEFECT
// and finishes at back	WITHOUT_CLASSIFICATION	0.9999980486640327	WITHOUT_CLASSIFICATION	1.951335967295077E-6	DEFECT
//dmo //zero when the parameter is not set	WITHOUT_CLASSIFICATION	0.9999082191598416	WITHOUT_CLASSIFICATION	9.1780840158311E-5	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999997459854588	WITHOUT_CLASSIFICATION	2.540145411036474E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999955671958	WITHOUT_CLASSIFICATION	4.43280419565981E-9	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999175292589	WITHOUT_CLASSIFICATION	8.24707412247789E-8	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999927959233187	WITHOUT_CLASSIFICATION	7.204076681215983E-6	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999927959233187	WITHOUT_CLASSIFICATION	7.204076681215983E-6	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.999999031648423	WITHOUT_CLASSIFICATION	9.6835157710411E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999964683584321	WITHOUT_CLASSIFICATION	3.5316415678638405E-6	DEFECT
// additional dataArea modifications //check whether modification is	WITHOUT_CLASSIFICATION	0.9999979826704352	WITHOUT_CLASSIFICATION	2.017329564799078E-6	DEFECT
// ratio represents pixels	WITHOUT_CLASSIFICATION	0.9999999724700693	WITHOUT_CLASSIFICATION	2.7529930663666093E-8	DEFECT
// ratio represents axis units	WITHOUT_CLASSIFICATION	0.9999999961186686	WITHOUT_CLASSIFICATION	3.881331404213887E-9	DEFECT
// draw the plot background...	WITHOUT_CLASSIFICATION	0.9999538830771636	WITHOUT_CLASSIFICATION	4.611692283636769E-5	DEFECT
// draw vertical crosshair if required...	WITHOUT_CLASSIFICATION	0.9999735808551952	WITHOUT_CLASSIFICATION	2.641914480490549E-5	DEFECT
// draw horizontal crosshair if required...	WITHOUT_CLASSIFICATION	0.9999382275203086	WITHOUT_CLASSIFICATION	6.1772479691399E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989325001374	WITHOUT_CLASSIFICATION	1.067499862707964E-6	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999988070915	WITHOUT_CLASSIFICATION	1.1929086191605705E-9	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9998766294128537	WITHOUT_CLASSIFICATION	1.2337058714632828E-4	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999988070915	WITHOUT_CLASSIFICATION	1.1929086191605705E-9	DEFECT
// now get the data and plot it (the visual representation will depend // on the renderer that has been set)...	WITHOUT_CLASSIFICATION	0.9998737437992958	WITHOUT_CLASSIFICATION	1.2625620070407865E-4	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999999431629089	WITHOUT_CLASSIFICATION	5.683709114690842E-8	DEFECT
// this is a new column	WITHOUT_CLASSIFICATION	0.9999680651834479	WITHOUT_CLASSIFICATION	3.193481655202078E-5	DEFECT
// end of column	WITHOUT_CLASSIFICATION	0.9999990130478253	WITHOUT_CLASSIFICATION	9.869521746345825E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999957180524236	WITHOUT_CLASSIFICATION	4.281947576408739E-5	DEFECT
//              }	WITHOUT_CLASSIFICATION	0.9999967123380872	WITHOUT_CLASSIFICATION	3.287661912718676E-6	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999999343351581	WITHOUT_CLASSIFICATION	6.56648418372587E-8	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999999221042519	WITHOUT_CLASSIFICATION	7.789574814091057E-8	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.9999999776556654	WITHOUT_CLASSIFICATION	2.2344334605862274E-8	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999997921413561	WITHOUT_CLASSIFICATION	2.078586439439396E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.999997993530926	WITHOUT_CLASSIFICATION	2.006469074120054E-6	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999999828250322	WITHOUT_CLASSIFICATION	1.717496768084195E-8	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999955671958	WITHOUT_CLASSIFICATION	4.43280419565981E-9	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999175292589	WITHOUT_CLASSIFICATION	8.24707412247789E-8	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989325001374	WITHOUT_CLASSIFICATION	1.067499862707964E-6	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.999999823295781	WITHOUT_CLASSIFICATION	1.7670421909466024E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999957180524236	WITHOUT_CLASSIFICATION	4.281947576408739E-5	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999999343351581	WITHOUT_CLASSIFICATION	6.56648418372587E-8	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999999221042519	WITHOUT_CLASSIFICATION	7.789574814091057E-8	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.9999999776556654	WITHOUT_CLASSIFICATION	2.2344334605862274E-8	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.999997800764926	WITHOUT_CLASSIFICATION	2.1992350740418384E-6	DEFECT
//Object oldValue = this.toolTipGenerator;	WITHOUT_CLASSIFICATION	0.9999999351415283	WITHOUT_CLASSIFICATION	6.485847179251158E-8	DEFECT
//Object oldValue = this.urlGenerator;	WITHOUT_CLASSIFICATION	0.9999998194790007	WITHOUT_CLASSIFICATION	1.8052099926747577E-7	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999699436402434	WITHOUT_CLASSIFICATION	3.0056359756624737E-5	DEFECT
// the following relies on the fact that the intervals are immutable	WITHOUT_CLASSIFICATION	0.9999998965377147	WITHOUT_CLASSIFICATION	1.034622853650759E-7	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.999988389198339	WITHOUT_CLASSIFICATION	1.1610801661076474E-5	DEFECT
// can't find any difference	WITHOUT_CLASSIFICATION	0.9996509478093766	WITHOUT_CLASSIFICATION	3.490521906234531E-4	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.9999999348170072	WITHOUT_CLASSIFICATION	6.518299275077209E-8	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999043243943664	WITHOUT_CLASSIFICATION	9.567560563367919E-5	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.999999661959715	WITHOUT_CLASSIFICATION	3.380402848758316E-7	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.999999661959715	WITHOUT_CLASSIFICATION	3.380402848758316E-7	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999992119973977	WITHOUT_CLASSIFICATION	7.880026023594222E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999967820146742	WITHOUT_CLASSIFICATION	3.217985325889264E-6	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999971888770429	WITHOUT_CLASSIFICATION	2.8111229570935394E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999997852535375	WITHOUT_CLASSIFICATION	2.1474646240106567E-7	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999998250872745	WITHOUT_CLASSIFICATION	1.7491272551628877E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999997459854588	WITHOUT_CLASSIFICATION	2.540145411036474E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999955671958	WITHOUT_CLASSIFICATION	4.43280419565981E-9	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999964683584321	WITHOUT_CLASSIFICATION	3.5316415678638405E-6	DEFECT
//  range = this.rangeAxis.getRange().getLength(); //  scaledRange = range * percent; //   rangeAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999984773814328	WITHOUT_CLASSIFICATION	1.522618567156689E-6	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999989188104632	WITHOUT_CLASSIFICATION	1.0811895368657408E-6	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.9999998374495547	WITHOUT_CLASSIFICATION	1.6255044539723017E-7	DEFECT
// override is only for documentation purposes	WITHOUT_CLASSIFICATION	0.9999998068936932	WITHOUT_CLASSIFICATION	1.9310630676425044E-7	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999999942598942	WITHOUT_CLASSIFICATION	5.74010590083407E-9	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999982223463395	WITHOUT_CLASSIFICATION	1.7776536604954935E-6	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9999972420021669	WITHOUT_CLASSIFICATION	2.757997833018985E-6	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9999972420021669	WITHOUT_CLASSIFICATION	2.757997833018985E-6	DEFECT
//get major dimension	WITHOUT_CLASSIFICATION	0.999989988203148	WITHOUT_CLASSIFICATION	1.0011796851985795E-5	DEFECT
//ellipse diameter is the minor dimension	WITHOUT_CLASSIFICATION	0.9999956151605385	WITHOUT_CLASSIFICATION	4.384839461486999E-6	DEFECT
// draw the wafer	WITHOUT_CLASSIFICATION	0.9999993078959442	WITHOUT_CLASSIFICATION	6.921040557472264E-7	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.9999947749746336	WITHOUT_CLASSIFICATION	5.225025366379764E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999992119973977	WITHOUT_CLASSIFICATION	7.880026023594222E-7	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999997852535375	WITHOUT_CLASSIFICATION	2.1474646240106567E-7	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999998250872745	WITHOUT_CLASSIFICATION	1.7491272551628877E-7	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.9999999886950418	WITHOUT_CLASSIFICATION	1.1304958082062301E-8	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.999997993530926	WITHOUT_CLASSIFICATION	2.006469074120054E-6	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999997459854588	WITHOUT_CLASSIFICATION	2.540145411036474E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999955671958	WITHOUT_CLASSIFICATION	4.43280419565981E-9	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999175292589	WITHOUT_CLASSIFICATION	8.24707412247789E-8	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999988070915	WITHOUT_CLASSIFICATION	1.1929086191605705E-9	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999989188104632	WITHOUT_CLASSIFICATION	1.0811895368657408E-6	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.9999987139168612	WITHOUT_CLASSIFICATION	1.286083138690812E-6	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.9999987139168612	WITHOUT_CLASSIFICATION	1.286083138690812E-6	DEFECT
// calculate and draw the notch // horizontal orientation is considered notch right // vertical orientation is considered notch down	WITHOUT_CLASSIFICATION	0.9999601500239353	WITHOUT_CLASSIFICATION	3.9849976064625355E-5	DEFECT
//this.axisOffset.trim(dataArea);	WITHOUT_CLASSIFICATION	0.9999995921362045	WITHOUT_CLASSIFICATION	4.0786379541543615E-7	DEFECT
//// SECTION PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997457344427	WITHOUT_CLASSIFICATION	2.542655571860737E-7	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9999640535309513	WITHOUT_CLASSIFICATION	3.5946469048623595E-5	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999999988666195	WITHOUT_CLASSIFICATION	1.1333804911406421E-9	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999999988666195	WITHOUT_CLASSIFICATION	1.1333804911406421E-9	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999999874894028	WITHOUT_CLASSIFICATION	1.251059714829531E-8	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999999874894028	WITHOUT_CLASSIFICATION	1.251059714829531E-8	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999961628087	WITHOUT_CLASSIFICATION	3.837191410588407E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999961628087	WITHOUT_CLASSIFICATION	3.837191410588407E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999961628087	WITHOUT_CLASSIFICATION	3.837191410588407E-9	DEFECT
//// SECTION OUTLINE PAINT ////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998691262607	WITHOUT_CLASSIFICATION	1.308737391623944E-7	DEFECT
//// SECTION OUTLINE STROKE ///////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999409501381	WITHOUT_CLASSIFICATION	5.904986175673608E-8	DEFECT
// if not, check if there is a stroke defined for the specified key	WITHOUT_CLASSIFICATION	0.9999999552348487	WITHOUT_CLASSIFICATION	4.4765151213122214E-8	DEFECT
// adjust the plot area for interior spacing and labels...	WITHOUT_CLASSIFICATION	0.99999984932334	WITHOUT_CLASSIFICATION	1.5067666008423838E-7	DEFECT
// make the link area a square if the pie chart is to be circular...	WITHOUT_CLASSIFICATION	0.999999941179883	WITHOUT_CLASSIFICATION	5.882011708789866E-8	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9998766294128537	WITHOUT_CLASSIFICATION	1.2337058714632828E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999043243943664	WITHOUT_CLASSIFICATION	9.567560563367919E-5	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.999999661959715	WITHOUT_CLASSIFICATION	3.380402848758316E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999967820146742	WITHOUT_CLASSIFICATION	3.217985325889264E-6	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.999999939208882	WITHOUT_CLASSIFICATION	6.079111800093398E-8	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999997459854588	WITHOUT_CLASSIFICATION	2.540145411036474E-7	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999699436402434	WITHOUT_CLASSIFICATION	3.0056359756624737E-5	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.9999947749746336	WITHOUT_CLASSIFICATION	5.225025366379764E-6	DEFECT
// update the linking line target for later // add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9999982824763719	WITHOUT_CLASSIFICATION	1.7175236280631544E-6	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9999759462018849	WITHOUT_CLASSIFICATION	2.4053798115008464E-5	DEFECT
// classify the keys according to which side the label will appear...	WITHOUT_CLASSIFICATION	0.9996483358530062	WITHOUT_CLASSIFICATION	3.5166414699381524E-4	DEFECT
// calculate the max label width from the plot dimensions, because // a circular pie can leave a lot more room for labels...	WITHOUT_CLASSIFICATION	0.9999463940363954	WITHOUT_CLASSIFICATION	5.360596360458574E-5	DEFECT
// draw the labels...	WITHOUT_CLASSIFICATION	0.9999977923251884	WITHOUT_CLASSIFICATION	2.2076748116368776E-6	DEFECT
// draw the right labels...	WITHOUT_CLASSIFICATION	0.9999623042369232	WITHOUT_CLASSIFICATION	3.76957630767423E-5	DEFECT
//hh * getInteriorGap();	WITHOUT_CLASSIFICATION	0.9999991618550409	WITHOUT_CLASSIFICATION	8.38144959145848E-7	DEFECT
// line not visible	WITHOUT_CLASSIFICATION	0.9999949210466681	WITHOUT_CLASSIFICATION	5.078953331953731E-6	DEFECT
// for a RadialGradientPaint we adjust the center and radius to match // the current pie segment...	WITHOUT_CLASSIFICATION	0.9999936601949526	WITHOUT_CLASSIFICATION	6.339805047352493E-6	DEFECT
// can't find any difference...	WITHOUT_CLASSIFICATION	0.9906361313561532	WITHOUT_CLASSIFICATION	0.00936386864384664	DEFECT
// DEPRECATED FIELDS AND METHODS...	WITHOUT_CLASSIFICATION	0.9999538044993072	WITHOUT_CLASSIFICATION	4.619550069281617E-5	DEFECT
// no range axis // no renderer	WITHOUT_CLASSIFICATION	0.999999687123924	WITHOUT_CLASSIFICATION	3.128760760351106E-7	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999994860727632	WITHOUT_CLASSIFICATION	5.13927236793679E-7	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999997852535375	WITHOUT_CLASSIFICATION	2.1474646240106567E-7	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999998250872745	WITHOUT_CLASSIFICATION	1.7491272551628877E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999997459854588	WITHOUT_CLASSIFICATION	2.540145411036474E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999955671958	WITHOUT_CLASSIFICATION	4.43280419565981E-9	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999988070915	WITHOUT_CLASSIFICATION	1.1929086191605705E-9	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999989188104632	WITHOUT_CLASSIFICATION	1.0811895368657408E-6	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.9999998374495547	WITHOUT_CLASSIFICATION	1.6255044539723017E-7	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999999942598942	WITHOUT_CLASSIFICATION	5.74010590083407E-9	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999982223463395	WITHOUT_CLASSIFICATION	1.7776536604954935E-6	DEFECT
// delegate 'state' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999988434782	WITHOUT_CLASSIFICATION	1.156521821653806E-9	DEFECT
// after setting up all the subplots, the shared domain axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999999886569397	WITHOUT_CLASSIFICATION	1.1343060253867309E-8	DEFECT
// 20% // 20% // 20%	WITHOUT_CLASSIFICATION	0.9999911881891972	WITHOUT_CLASSIFICATION	8.811810802903139E-6	DEFECT
// create the bounds for the inner arc	WITHOUT_CLASSIFICATION	0.9999999509120133	WITHOUT_CLASSIFICATION	4.9087986699930884E-8	DEFECT
// calculate inner arc in reverse direction, for later // GeneralPath construction	WITHOUT_CLASSIFICATION	0.9999998940736244	WITHOUT_CLASSIFICATION	1.059263754832358E-7	DEFECT
// add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9999873387138778	WITHOUT_CLASSIFICATION	1.2661286122238059E-5	DEFECT
// check that there is some data to display...	WITHOUT_CLASSIFICATION	0.9997123416405908	WITHOUT_CLASSIFICATION	2.8765835940921977E-4	DEFECT
// the columns variable is always >= rows	WITHOUT_CLASSIFICATION	0.9999995269087428	WITHOUT_CLASSIFICATION	4.73091257217512E-7	DEFECT
// swap rows and columns to match plotArea shape	WITHOUT_CLASSIFICATION	0.9999989894402229	WITHOUT_CLASSIFICATION	1.0105597770093286E-6	DEFECT
// update the section colors to match the global colors...	WITHOUT_CLASSIFICATION	0.9999951625191823	WITHOUT_CLASSIFICATION	4.837480817722217E-6	DEFECT
// pre-fetch the colors for each key...this is because the subplots // may not display every key, but we need the coloring to be // consistent...	WITHOUT_CLASSIFICATION	0.9194802809135774	WITHOUT_CLASSIFICATION	0.0805197190864226	DEFECT
// column keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9998977309821548	WITHOUT_CLASSIFICATION	1.0226901784518104E-4	DEFECT
// row keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9998994442187182	WITHOUT_CLASSIFICATION	1.0055578128169105E-4	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. * Other names may be trademarks of their respective owners.] * * ----------------- * CategoryPlot.java * ----------------- * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Jeremy Bowman; *                   Arnaud Lelievre; *                   Richard West, Advanced Micro Devices, Inc.; *                   Ulrich Voigt - patch 2686040; *                   Peter Kolb - patches 2603321 and 2809117; * * Changes * ------- * 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG); * 21-Aug-2001 : Added standard header. Fixed DOS encoding problem (DG); * 18-Sep-2001 : Updated header (DG); * 15-Oct-2001 : Data source classes moved to com.jrefinery.data.* (DG); * 22-Oct-2001 : Renamed DataSource.java --> Dataset.java etc. (DG); * 23-Oct-2001 : Changed intro and trail gaps on bar plots to use percentage of *               available space rather than a fixed number of units (DG); * 12-Dec-2001 : Changed constructors to protected (DG); * 13-Dec-2001 : Added tooltips (DG); * 16-Jan-2002 : Increased maximum intro and trail gap percents, plus added *               some argument checking code.  Thanks to Taoufik Romdhane for *               suggesting this (DG); * 05-Feb-2002 : Added accessor methods for the tooltip generator, incorporated *               alpha-transparency for Plot and subclasses (DG); * 06-Mar-2002 : Updated import statements (DG); * 14-Mar-2002 : Renamed BarPlot.java --> CategoryPlot.java, and changed code *               to use the CategoryItemRenderer interface (DG); * 22-Mar-2002 : Dropped the getCategories() method (DG); * 23-Apr-2002 : Moved the dataset from the JFreeChart class to the Plot *               class (DG); * 29-Apr-2002 : New methods to support printing values at the end of bars, *               contributed by Jeremy Bowman (DG); * 11-May-2002 : New methods for label visibility and overlaid plot support, *               contributed by Jeremy Bowman (DG); * 06-Jun-2002 : Removed the tooltip generator, this is now stored with the *               renderer.  Moved constants into the CategoryPlotConstants *               interface.  Updated Javadoc comments (DG); * 10-Jun-2002 : Overridden datasetChanged() method to update the upper and *               lower bound on the range axis (if necessary), updated *               Javadocs (DG); * 25-Jun-2002 : Removed redundant imports (DG); * 20-Aug-2002 : Changed the constructor for Marker (DG); * 28-Aug-2002 : Added listener notification to setDomainAxis() and *               setRangeAxis() (DG); * 23-Sep-2002 : Added getLegendItems() method and fixed errors reported by *               Checkstyle (DG); * 28-Oct-2002 : Changes to the CategoryDataset interface (DG); * 05-Nov-2002 : Base dataset is now TableDataset not CategoryDataset (DG); * 07-Nov-2002 : Renamed labelXXX as valueLabelXXX (DG); * 18-Nov-2002 : Added grid settings for both domain and range axis (previously *               these were set in the axes) (DG); * 19-Nov-2002 : Added axis location parameters to constructor (DG); * 17-Jan-2003 : Moved to com.jrefinery.chart.plot package (DG); * 14-Feb-2003 : Fixed bug in auto-range calculation for secondary axis (DG); * 26-Mar-2003 : Implemented Serializable (DG); * 02-May-2003 : Moved render() method up from subclasses. Added secondary *               range markers. Added an attribute to control the dataset *               rendering order.  Added a drawAnnotations() method.  Changed *               the axis location from an int to an AxisLocation (DG); * 07-May-2003 : Merged HorizontalCategoryPlot and VerticalCategoryPlot into *               this class (DG); * 02-Jun-2003 : Removed check for range axis compatibility (DG); * 04-Jul-2003 : Added a domain gridline position attribute (DG); * 21-Jul-2003 : Moved DrawingSupplier to Plot superclass (DG); * 19-Aug-2003 : Added equals() method and implemented Cloneable (DG); * 01-Sep-2003 : Fixed bug 797466 (no change event when secondary dataset *               changes) (DG); * 02-Sep-2003 : Fixed bug 795209 (wrong dataset checked in render2 method) and *               790407 (initialise method) (DG); * 08-Sep-2003 : Added internationalization via use of properties *               resourceBundle (RFE 690236) (AL); * 08-Sep-2003 : Fixed bug (wrong secondary range axis being used).  Changed *               ValueAxis API (DG); * 10-Sep-2003 : Fixed bug in setRangeAxis() method (DG); * 15-Sep-2003 : Fixed two bugs in serialization, implemented *               PublicCloneable (DG); * 23-Oct-2003 : Added event notification for changes to renderer (DG); * 26-Nov-2003 : Fixed bug (849645) in clearRangeMarkers() method (DG); * 03-Dec-2003 : Modified draw method to accept anchor (DG); * 21-Jan-2004 : Update for renamed method in ValueAxis (DG); * 10-Mar-2004 : Fixed bug in axis range calculation when secondary renderer is *               stacked (DG); * 12-May-2004 : Added fixed legend items (DG); * 19-May-2004 : Added check for null legend item from renderer (DG); * 02-Jun-2004 : Updated the DatasetRenderingOrder class (DG); * 05-Nov-2004 : Renamed getDatasetsMappedToRangeAxis() *               --> datasetsMappedToRangeAxis(), and ensured that returned *               list doesn't contain null datasets (DG); * 12-Nov-2004 : Implemented new Zoomable interface (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds() in *               CategoryItemRenderer (DG); * 04-May-2005 : Fixed serialization of range markers (DG); * 05-May-2005 : Updated draw() method parameters (DG); * 20-May-2005 : Added setDomainAxes() and setRangeAxes() methods, as per *               RFE 1183100 (DG); * 01-Jun-2005 : Upon deserialization, register plot as a listener with its *               axes, dataset(s) and renderer(s) - see patch 1209475 (DG); * 02-Jun-2005 : Added support for domain markers (DG); * 06-Jun-2005 : Fixed equals() method for use with GradientPaint (DG); * 09-Jun-2005 : Added setRenderers(), as per RFE 1183100 (DG); * 16-Jun-2005 : Added getDomainAxisCount() and getRangeAxisCount() methods, to *               match XYPlot (see RFE 1220495) (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 11-Jan-2006 : Added configureRangeAxes() to rendererChanged(), since the *               renderer might influence the axis range (DG); * 27-Jan-2006 : Added various null argument checks (DG); * 18-Aug-2006 : Added getDatasetCount() method, plus a fix for bug drawing *               category labels, thanks to Adriaan Joubert (1277726) (DG); * 05-Sep-2006 : Added MarkerChangeEvent support (DG); * 30-Oct-2006 : Added getDomainAxisIndex(), datasetsMappedToDomainAxis() and *               getCategoriesForAxis() methods (DG); * 22-Nov-2006 : Fire PlotChangeEvent from setColumnRenderingOrder() and *               setRowRenderingOrder() (DG); * 29-Nov-2006 : Fix for bug 1605207 (IntervalMarker exceeds bounds of data *               area) (DG); * 26-Feb-2007 : Fix for bug 1669218 (setDomainAxisLocation() notify argument *               ignored) (DG); * 13-Mar-2007 : Added null argument checks for setRangeCrosshairPaint() and *               setRangeCrosshairStroke(), fixed clipping for *               annotations (DG); * 07-Jun-2007 : Override drawBackground() for new GradientPaint handling (DG); * 10-Jul-2007 : Added getRangeAxisIndex(ValueAxis) method (DG); * 24-Sep-2007 : Implemented new zoom methods (DG); * 25-Oct-2007 : Added some argument checks (DG); * 05-Nov-2007 : Applied patch 1823697, by Richard West, for removal of domain *               and range markers (DG); * 14-Nov-2007 : Added missing event notifications (DG); * 25-Mar-2008 : Added new methods with optional notification - see patch *               1913751 (DG); * 07-Apr-2008 : Fixed NPE in removeDomainMarker() and *               removeRangeMarker() (DG); * 23-Apr-2008 : Fixed equals() and clone() methods (DG); * 26-Jun-2008 : Fixed crosshair support (DG); * 10-Jul-2008 : Fixed outline visibility for 3D renderers (DG); * 12-Aug-2008 : Added rendererCount() method (DG); * 25-Nov-2008 : Added facility to map datasets to multiples axes (DG); * 15-Dec-2008 : Cleaned up grid drawing methods (DG); * 18-Dec-2008 : Use ResourceBundleWrapper - see patch 1607918 by *               Jess Thrysoee (DG); * 21-Jan-2009 : Added rangeMinorGridlinesVisible flag (DG); * 18-Mar-2009 : Modified anchored zoom behaviour (DG); * 19-Mar-2009 : Implemented Pannable interface - see patch 2686040 (DG); * 19-Mar-2009 : Added entity support - see patch 2603321 by Peter Kolb (DG); * 24-Jun-2009 : Implemented AnnotationChangeListener (see patch 2809117 by *               PK) (DG); * 06-Jul-2009 : Fix for cloning of renderers - see bug 2817504 (DG) * 10-Jul-2009 : Added optional drop shadow generator (DG); * 27-Sep-2011 : Fixed annotation import (DG); * 18-Oct-2011 : Fixed tooltip offset with shadow generator (DG); * 20-Nov-2011 : Initialise shadow generator as null (DG); * 02-Jul-2013 : Use ParamChecks (DG); * 12-Sep-2013 : Check for KEY_SUPPRESS_SHADOW_GENERATION rendering hint (DG); * 10-Mar-2014 : Updated Javadocs for issue #1123 (DG); * 09-Apr-2014 : Remove use of ObjectList (DG); *  */	WITHOUT_CLASSIFICATION	0.9991840517230806	WITHOUT_CLASSIFICATION	8.159482769193424E-4	DEFECT
// allocate storage for dataset, axes and renderers	WITHOUT_CLASSIFICATION	0.9999996977605694	WITHOUT_CLASSIFICATION	3.0223943053964526E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999970760783851	WITHOUT_CLASSIFICATION	2.923921615004492E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999970760783851	WITHOUT_CLASSIFICATION	2.923921615004492E-6	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999971888770429	WITHOUT_CLASSIFICATION	2.8111229570935394E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999175292589	WITHOUT_CLASSIFICATION	8.24707412247789E-8	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.999999031648423	WITHOUT_CLASSIFICATION	9.6835157710411E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999964683584321	WITHOUT_CLASSIFICATION	3.5316415678638405E-6	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999982223463395	WITHOUT_CLASSIFICATION	1.7776536604954935E-6	DEFECT
// set the anchor value for the range axis...	WITHOUT_CLASSIFICATION	0.9999996727407933	WITHOUT_CLASSIFICATION	3.2725920678128626E-7	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999980283148201	WITHOUT_CLASSIFICATION	1.971685179908956E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999990816325209	WITHOUT_CLASSIFICATION	9.18367479145217E-7	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999990816325209	WITHOUT_CLASSIFICATION	9.18367479145217E-7	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999939985544	WITHOUT_CLASSIFICATION	6.001445644081366E-9	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999939985544	WITHOUT_CLASSIFICATION	6.001445644081366E-9	DEFECT
// get the legend items for the datasets...	WITHOUT_CLASSIFICATION	0.9999985842269186	WITHOUT_CLASSIFICATION	1.4157730814777117E-6	DEFECT
// this should never happen with the existing code, but throw // an exception in case future changes make it possible...	WITHOUT_CLASSIFICATION	0.9897157076815039	WITHOUT_CLASSIFICATION	0.010284292318496188	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999884865823329	WITHOUT_CLASSIFICATION	1.1513417667203059E-5	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999991283921306	WITHOUT_CLASSIFICATION	8.716078694099922E-7	DEFECT
// reserve space for the primary domain axis...	WITHOUT_CLASSIFICATION	0.999995938587101	WITHOUT_CLASSIFICATION	4.061412899037545E-6	DEFECT
// reserve space for any domain axes...	WITHOUT_CLASSIFICATION	0.9999489472626262	WITHOUT_CLASSIFICATION	5.10527373737695E-5	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999973011508678	WITHOUT_CLASSIFICATION	2.698849132077006E-6	DEFECT
// reserve space for the range axes (if any)...	WITHOUT_CLASSIFICATION	0.9999845870478571	WITHOUT_CLASSIFICATION	1.541295214290247E-5	DEFECT
// if the incoming state is null, no information will be passed // back to the caller - but we create a temporary state to record // the plot area, since that is used later by the axes	WITHOUT_CLASSIFICATION	0.9999999840340666	WITHOUT_CLASSIFICATION	1.5965933442283998E-8	DEFECT
// if there is a renderer, it draws the background, otherwise use the // default background...	WITHOUT_CLASSIFICATION	0.9999996783379382	WITHOUT_CLASSIFICATION	3.216620617464368E-7	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.9992835677601646	WITHOUT_CLASSIFICATION	7.164322398353346E-4	DEFECT
// specify the anchor X and Y coordinates in Java2D space, for the // cases where these are not updated during rendering (i.e. no lock // on data)	WITHOUT_CLASSIFICATION	0.9999997371227963	WITHOUT_CLASSIFICATION	2.6287720365710947E-7	DEFECT
// don't let anyone draw outside the data area	WITHOUT_CLASSIFICATION	0.9999933362972298	WITHOUT_CLASSIFICATION	6.6637027702204614E-6	DEFECT
// draw the markers...	WITHOUT_CLASSIFICATION	0.999995666568894	WITHOUT_CLASSIFICATION	4.333431105945461E-6	DEFECT
// now render data items...	WITHOUT_CLASSIFICATION	0.9999915817640255	WITHOUT_CLASSIFICATION	8.418235974541651E-6	DEFECT
// set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999987184641544	WITHOUT_CLASSIFICATION	1.281535845548186E-6	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.9999996652716456	WITHOUT_CLASSIFICATION	3.347283544366915E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999096287008	WITHOUT_CLASSIFICATION	9.0371299144323E-8	DEFECT
// draw the foreground markers...	WITHOUT_CLASSIFICATION	0.9999970961124163	WITHOUT_CLASSIFICATION	2.9038875836714966E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999996017501482	WITHOUT_CLASSIFICATION	3.9824985179223825E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999996017501482	WITHOUT_CLASSIFICATION	3.9824985179223825E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999996017501482	WITHOUT_CLASSIFICATION	3.9824985179223825E-6	DEFECT
// draw the annotations (if any)...	WITHOUT_CLASSIFICATION	0.9999477679779244	WITHOUT_CLASSIFICATION	5.223202207555054E-5	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.9999924860867888	WITHOUT_CLASSIFICATION	7.5139132111349196E-6	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9999743927139048	WITHOUT_CLASSIFICATION	2.5607286095177436E-5	DEFECT
// draw an outline around the plot area...	WITHOUT_CLASSIFICATION	0.999996049691158	WITHOUT_CLASSIFICATION	3.950308842110708E-6	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9999852682392723	WITHOUT_CLASSIFICATION	1.4731760727673561E-5	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9999899020430901	WITHOUT_CLASSIFICATION	1.0097956909976813E-5	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.9999999336546687	WITHOUT_CLASSIFICATION	6.634533139754542E-8	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.9999999083582614	WITHOUT_CLASSIFICATION	9.16417386896778E-8	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.9999998209822116	WITHOUT_CLASSIFICATION	1.7901778829198985E-7	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.9999974368427391	WITHOUT_CLASSIFICATION	2.563157260839955E-6	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999542398410796	WITHOUT_CLASSIFICATION	4.576015892044126E-5	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999989119817246	WITHOUT_CLASSIFICATION	1.0880182753353362E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.999998769450115	WITHOUT_CLASSIFICATION	1.2305498849857708E-6	DEFECT
// add the unique categories from this dataset	WITHOUT_CLASSIFICATION	0.9999988757348027	WITHOUT_CLASSIFICATION	1.1242651973079027E-6	DEFECT
// do nothing, because the plot is not pannable along the domain axes	WITHOUT_CLASSIFICATION	0.9999970127935222	WITHOUT_CLASSIFICATION	2.987206477866698E-6	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999759132395707	WITHOUT_CLASSIFICATION	2.408676042933453E-5	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999998685575844	WITHOUT_CLASSIFICATION	1.314424155856125E-7	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9999998205458807	WITHOUT_CLASSIFICATION	1.794541194091845E-7	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999997306096196	WITHOUT_CLASSIFICATION	2.693903804461645E-7	DEFECT
// AxisLocation is immutable, so we can just copy the maps	WITHOUT_CLASSIFICATION	0.9999996675397544	WITHOUT_CLASSIFICATION	3.324602454898114E-7	DEFECT
// not currently serialized	WITHOUT_CLASSIFICATION	0.999994201483845	WITHOUT_CLASSIFICATION	5.798516154908658E-6	DEFECT
// some subclasses override this method completely, so don't put // anything here that *must* be done	WITHOUT_CLASSIFICATION	0.9999997736584773	WITHOUT_CLASSIFICATION	2.2634152278277993E-7	DEFECT
// provides a 'no action' default	WITHOUT_CLASSIFICATION	0.9999990798069679	WITHOUT_CLASSIFICATION	9.201930321289503E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999096287008	WITHOUT_CLASSIFICATION	9.0371299144323E-8	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999175292589	WITHOUT_CLASSIFICATION	8.24707412247789E-8	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.999999031648423	WITHOUT_CLASSIFICATION	9.6835157710411E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999964683584321	WITHOUT_CLASSIFICATION	3.5316415678638405E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999980283148201	WITHOUT_CLASSIFICATION	1.971685179908956E-6	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999982223463395	WITHOUT_CLASSIFICATION	1.7776536604954935E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999970760783851	WITHOUT_CLASSIFICATION	2.923921615004492E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999970760783851	WITHOUT_CLASSIFICATION	2.923921615004492E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999965254522406	WITHOUT_CLASSIFICATION	3.47454775947276E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999990816325209	WITHOUT_CLASSIFICATION	9.18367479145217E-7	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.999939757981788	WITHOUT_CLASSIFICATION	6.0242018211867544E-5	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999939985544	WITHOUT_CLASSIFICATION	6.001445644081366E-9	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999989119817246	WITHOUT_CLASSIFICATION	1.0880182753353362E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.999998769450115	WITHOUT_CLASSIFICATION	1.2305498849857708E-6	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999994087752669	WITHOUT_CLASSIFICATION	5.912247330389444E-7	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9999948503680104	WITHOUT_CLASSIFICATION	5.149631989610684E-6	DEFECT
// define the default locations for up to 8 axes...	WITHOUT_CLASSIFICATION	0.99999987762761	WITHOUT_CLASSIFICATION	1.2237239002443268E-7	DEFECT
// normalize angle	WITHOUT_CLASSIFICATION	0.999999894751296	WITHOUT_CLASSIFICATION	1.0524870402928929E-7	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9999827674114982	WITHOUT_CLASSIFICATION	1.7232588501892265E-5	DEFECT
// now for each dataset, get the renderer and the appropriate axis // and render the dataset...	WITHOUT_CLASSIFICATION	0.9999807307363151	WITHOUT_CLASSIFICATION	1.9269263684942667E-5	DEFECT
// now get the data and plot it (the visual representation will depend // on the m_Renderer that has been set)...	WITHOUT_CLASSIFICATION	0.9999186047427437	WITHOUT_CLASSIFICATION	8.139525725623779E-5	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999906571101336	WITHOUT_CLASSIFICATION	9.342889866337285E-6	DEFECT
// draw the radius grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999658970999968	WITHOUT_CLASSIFICATION	3.410290000328815E-5	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9999979179685584	WITHOUT_CLASSIFICATION	2.0820314416543005E-6	DEFECT
// square	WITHOUT_CLASSIFICATION	0.999999899298009	WITHOUT_CLASSIFICATION	1.0070199089002838E-7	DEFECT
// circle	WITHOUT_CLASSIFICATION	0.9999990870286669	WITHOUT_CLASSIFICATION	9.129713330346107E-7	DEFECT
// up-pointing triangle	WITHOUT_CLASSIFICATION	0.9999998961192643	WITHOUT_CLASSIFICATION	1.0388073569015781E-7	DEFECT
// diamond	WITHOUT_CLASSIFICATION	0.999960673932628	WITHOUT_CLASSIFICATION	3.932606737194282E-5	DEFECT
// horizontal rectangle	WITHOUT_CLASSIFICATION	0.9999983639555724	WITHOUT_CLASSIFICATION	1.6360444275316826E-6	DEFECT
// down-pointing triangle	WITHOUT_CLASSIFICATION	0.9999980783001984	WITHOUT_CLASSIFICATION	1.9216998016567294E-6	DEFECT
// horizontal ellipse	WITHOUT_CLASSIFICATION	0.9999999870228483	WITHOUT_CLASSIFICATION	1.2977151650700854E-8	DEFECT
// right-pointing triangle	WITHOUT_CLASSIFICATION	0.9999996759606626	WITHOUT_CLASSIFICATION	3.2403933735089543E-7	DEFECT
// vertical rectangle	WITHOUT_CLASSIFICATION	0.9999988500218093	WITHOUT_CLASSIFICATION	1.1499781906497527E-6	DEFECT
// left-pointing triangle	WITHOUT_CLASSIFICATION	0.9999995618394912	WITHOUT_CLASSIFICATION	4.3816050865574193E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999096287008	WITHOUT_CLASSIFICATION	9.0371299144323E-8	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.999997993530926	WITHOUT_CLASSIFICATION	2.006469074120054E-6	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999999828250322	WITHOUT_CLASSIFICATION	1.717496768084195E-8	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999955671958	WITHOUT_CLASSIFICATION	4.43280419565981E-9	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999999942598942	WITHOUT_CLASSIFICATION	5.74010590083407E-9	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999995476321901	WITHOUT_CLASSIFICATION	4.523678098187787E-7	DEFECT
//// SERIES PAINT /////////////////////////	WITHOUT_CLASSIFICATION	0.999997834509777	WITHOUT_CLASSIFICATION	2.1654902229235964E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999999850895571	WITHOUT_CLASSIFICATION	1.4910442882469078E-8	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999995476321901	WITHOUT_CLASSIFICATION	4.523678098187787E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999995476321901	WITHOUT_CLASSIFICATION	4.523678098187787E-7	DEFECT
//// SERIES OUTLINE PAINT ////////////////////////////	WITHOUT_CLASSIFICATION	0.9999989661481502	WITHOUT_CLASSIFICATION	1.0338518497607918E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999999850895571	WITHOUT_CLASSIFICATION	1.4910442882469078E-8	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999999850895571	WITHOUT_CLASSIFICATION	1.4910442882469078E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999096287008	WITHOUT_CLASSIFICATION	9.0371299144323E-8	DEFECT
// ensure we have a maximum value to use on the axes	WITHOUT_CLASSIFICATION	0.9999999002295638	WITHOUT_CLASSIFICATION	9.977043621983022E-8	DEFECT
//// SERIES OUTLINE STROKE /////////////////////	WITHOUT_CLASSIFICATION	0.9999995332521311	WITHOUT_CLASSIFICATION	4.6674786895816956E-7	DEFECT
// Next, setup the plot area	WITHOUT_CLASSIFICATION	0.9999999569689719	WITHOUT_CLASSIFICATION	4.303102818468625E-8	DEFECT
// make the chart area a square	WITHOUT_CLASSIFICATION	0.9999999851334752	WITHOUT_CLASSIFICATION	1.4866524799226522E-8	DEFECT
// draw the axis and category label	WITHOUT_CLASSIFICATION	0.9999982083754069	WITHOUT_CLASSIFICATION	1.791624593153922E-6	DEFECT
// 1 = end of axis	WITHOUT_CLASSIFICATION	0.9999985842618632	WITHOUT_CLASSIFICATION	1.4157381367602713E-6	DEFECT
// Now actually plot each of the series polygons..	WITHOUT_CLASSIFICATION	0.999994844990541	WITHOUT_CLASSIFICATION	5.155009458965115E-6	DEFECT
// plot the data...	WITHOUT_CLASSIFICATION	0.9999914258094553	WITHOUT_CLASSIFICATION	8.574190544671312E-6	DEFECT
// draw the polygon series...	WITHOUT_CLASSIFICATION	0.9999585641606396	WITHOUT_CLASSIFICATION	4.143583936044454E-5	DEFECT
// Finds our starting angle from the centre for this axis	WITHOUT_CLASSIFICATION	0.9999999244131849	WITHOUT_CLASSIFICATION	7.558681507819875E-8	DEFECT
// The following angle calc will ensure there isn't a top // vertical axis - this may be useful if you don't want any // given criteria to 'appear' move important than the // others.. //  + (getDirection().getFactor() //        * (cat + 0.5) * 360 / catCount);	WITHOUT_CLASSIFICATION	0.9984370156438216	WITHOUT_CLASSIFICATION	0.0015629843561783677	DEFECT
// find the point at the appropriate distance end point // along the axis/angle identified above and add it to the // polygon	WITHOUT_CLASSIFICATION	0.9999953782449773	WITHOUT_CLASSIFICATION	4.621755022656284E-6	DEFECT
// put an elipse at the point being plotted..	WITHOUT_CLASSIFICATION	0.9999992069822605	WITHOUT_CLASSIFICATION	7.930177394573182E-7	DEFECT
// Plot the polygon	WITHOUT_CLASSIFICATION	0.9999544866323757	WITHOUT_CLASSIFICATION	4.551336762420086E-5	DEFECT
// set the anchor value for the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999998146569234	WITHOUT_CLASSIFICATION	1.8534307654030173E-7	DEFECT
/* shapeFilled=*/	WITHOUT_CLASSIFICATION	0.9999988102313341	WITHOUT_CLASSIFICATION	1.1897686660174083E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999096287008	WITHOUT_CLASSIFICATION	9.0371299144323E-8	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.999997993530926	WITHOUT_CLASSIFICATION	2.006469074120054E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999175292589	WITHOUT_CLASSIFICATION	8.24707412247789E-8	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999927959233187	WITHOUT_CLASSIFICATION	7.204076681215983E-6	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.999999031648423	WITHOUT_CLASSIFICATION	9.6835157710411E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999964683584321	WITHOUT_CLASSIFICATION	3.5316415678638405E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999980283148201	WITHOUT_CLASSIFICATION	1.971685179908956E-6	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.999997800764926	WITHOUT_CLASSIFICATION	2.1992350740418384E-6	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999699436402434	WITHOUT_CLASSIFICATION	3.0056359756624737E-5	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999982223463395	WITHOUT_CLASSIFICATION	1.7776536604954935E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999970760783851	WITHOUT_CLASSIFICATION	2.923921615004492E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999970760783851	WITHOUT_CLASSIFICATION	2.923921615004492E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999970760783851	WITHOUT_CLASSIFICATION	2.923921615004492E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999990816325209	WITHOUT_CLASSIFICATION	9.18367479145217E-7	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999990816325209	WITHOUT_CLASSIFICATION	9.18367479145217E-7	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.999939757981788	WITHOUT_CLASSIFICATION	6.0242018211867544E-5	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999991283921306	WITHOUT_CLASSIFICATION	8.716078694099922E-7	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999973011508678	WITHOUT_CLASSIFICATION	2.698849132077006E-6	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9999827674114982	WITHOUT_CLASSIFICATION	1.7232588501892265E-5	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999999313273911	WITHOUT_CLASSIFICATION	6.867260894815934E-8	DEFECT
// Lastly, fill the web polygon if this is required	WITHOUT_CLASSIFICATION	0.9998131043652096	WITHOUT_CLASSIFICATION	1.868956347903712E-4	DEFECT
// if series are in rows, then the categories are the column keys	WITHOUT_CLASSIFICATION	0.9999991659134045	WITHOUT_CLASSIFICATION	8.340865955622066E-7	DEFECT
// if series are in columns, then the categories are the row keys	WITHOUT_CLASSIFICATION	0.9999988506432409	WITHOUT_CLASSIFICATION	1.1493567592001542E-6	DEFECT
//          negatives = true;	WITHOUT_CLASSIFICATION	0.9999984550743163	WITHOUT_CLASSIFICATION	1.544925683699838E-6	DEFECT
//  value = Math.pow(10,value);	WITHOUT_CLASSIFICATION	0.9999907603141321	WITHOUT_CLASSIFICATION	9.239685867756697E-6	DEFECT
//  izV = steps*numSteps*(int)((value/minZ)/(maxZlog-minZlog)) + 2;	WITHOUT_CLASSIFICATION	0.9999998069890603	WITHOUT_CLASSIFICATION	1.930109396953573E-7	DEFECT
// super.setSeriesPaint(series, paint);	WITHOUT_CLASSIFICATION	0.9999999522442414	WITHOUT_CLASSIFICATION	4.775575857977941E-8	DEFECT
/// Squares	WITHOUT_CLASSIFICATION	0.9999999071757701	WITHOUT_CLASSIFICATION	9.282422986504184E-8	DEFECT
/// Draw N, S, E, W	WITHOUT_CLASSIFICATION	0.9999999099803065	WITHOUT_CLASSIFICATION	9.001969353296881E-8	DEFECT
// no zooming possible	WITHOUT_CLASSIFICATION	0.999999820981248	WITHOUT_CLASSIFICATION	1.7901875214834E-7	DEFECT
// clone share data sets => add the clone as listener to the dataset	WITHOUT_CLASSIFICATION	0.999999995757461	WITHOUT_CLASSIFICATION	4.242538992450115E-9	DEFECT
// only relevant when this is a subplot	WITHOUT_CLASSIFICATION	0.9999526304781191	WITHOUT_CLASSIFICATION	4.7369521880849815E-5	DEFECT
// allocate storage for datasets, axes and renderers (all optional)	WITHOUT_CLASSIFICATION	0.9999999876924183	WITHOUT_CLASSIFICATION	1.2307581680840829E-8	DEFECT
// reserve space for the domain axes...	WITHOUT_CLASSIFICATION	0.9999983837490148	WITHOUT_CLASSIFICATION	1.6162509851813496E-6	DEFECT
// reserve space for the range axes...	WITHOUT_CLASSIFICATION	0.9999955260515951	WITHOUT_CLASSIFICATION	4.47394840482006E-6	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999939985544	WITHOUT_CLASSIFICATION	6.001445644081366E-9	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999939985544	WITHOUT_CLASSIFICATION	6.001445644081366E-9	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.9999924860867888	WITHOUT_CLASSIFICATION	7.5139132111349196E-6	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9999743927139048	WITHOUT_CLASSIFICATION	2.5607286095177436E-5	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9999852682392723	WITHOUT_CLASSIFICATION	1.4731760727673561E-5	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9999899020430901	WITHOUT_CLASSIFICATION	1.0097956909976813E-5	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.9999999336546687	WITHOUT_CLASSIFICATION	6.634533139754542E-8	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.9999999083582614	WITHOUT_CLASSIFICATION	9.16417386896778E-8	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.9999998209822116	WITHOUT_CLASSIFICATION	1.7901778829198985E-7	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.9999974368427391	WITHOUT_CLASSIFICATION	2.563157260839955E-6	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999542398410796	WITHOUT_CLASSIFICATION	4.576015892044126E-5	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999989119817246	WITHOUT_CLASSIFICATION	1.0880182753353362E-6	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999989119817246	WITHOUT_CLASSIFICATION	1.0880182753353362E-6	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999906571101336	WITHOUT_CLASSIFICATION	9.342889866337285E-6	DEFECT
// draw the markers that are associated with a specific dataset...	WITHOUT_CLASSIFICATION	0.9999779752852723	WITHOUT_CLASSIFICATION	2.2024714727710814E-5	DEFECT
// now draw annotations and render data items...	WITHOUT_CLASSIFICATION	0.999977467963005	WITHOUT_CLASSIFICATION	2.2532036995038384E-5	DEFECT
// draw background annotations	WITHOUT_CLASSIFICATION	0.9999991744111327	WITHOUT_CLASSIFICATION	8.255888672810859E-7	DEFECT
// render data items...	WITHOUT_CLASSIFICATION	0.9999926664873243	WITHOUT_CLASSIFICATION	7.333512675609975E-6	DEFECT
// draw foreground annotations	WITHOUT_CLASSIFICATION	0.9999995133015246	WITHOUT_CLASSIFICATION	4.866984753681502E-7	DEFECT
//  0 | 1 //  --+-- //  2 | 3	WITHOUT_CLASSIFICATION	0.9999969546030776	WITHOUT_CLASSIFICATION	3.0453969225011154E-6	DEFECT
// we can't draw quadrants without a valid x-axis	WITHOUT_CLASSIFICATION	0.9999994897936614	WITHOUT_CLASSIFICATION	5.10206338532643E-7	DEFECT
// we can't draw quadrants without a valid y-axis	WITHOUT_CLASSIFICATION	0.9999988247261905	WITHOUT_CLASSIFICATION	1.1752738094504927E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999991698111387	WITHOUT_CLASSIFICATION	8.301888613490488E-7	DEFECT
// can't render anything without axes	WITHOUT_CLASSIFICATION	0.9991064155967543	WITHOUT_CLASSIFICATION	8.935844032456494E-4	DEFECT
// no default renderer available	WITHOUT_CLASSIFICATION	0.9999999014513331	WITHOUT_CLASSIFICATION	9.854866689162184E-8	DEFECT
//render series in reverse order	WITHOUT_CLASSIFICATION	0.9999974520913447	WITHOUT_CLASSIFICATION	2.547908655225288E-6	DEFECT
//render series in forward order	WITHOUT_CLASSIFICATION	0.9999935528337659	WITHOUT_CLASSIFICATION	6.447166234082366E-6	DEFECT
// use the TextTitle class because it is a concrete subclass	WITHOUT_CLASSIFICATION	0.9999991275242295	WITHOUT_CLASSIFICATION	8.72475770440188E-7	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999992119973977	WITHOUT_CLASSIFICATION	7.880026023594222E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999967820146742	WITHOUT_CLASSIFICATION	3.217985325889264E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999965254522406	WITHOUT_CLASSIFICATION	3.47454775947276E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999965254522406	WITHOUT_CLASSIFICATION	3.47454775947276E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.999998769450115	WITHOUT_CLASSIFICATION	1.2305498849857708E-6	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999998685575844	WITHOUT_CLASSIFICATION	1.314424155856125E-7	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999998685575844	WITHOUT_CLASSIFICATION	1.314424155856125E-7	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9999998205458807	WITHOUT_CLASSIFICATION	1.794541194091845E-7	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999997306096196	WITHOUT_CLASSIFICATION	2.693903804461645E-7	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999997306096196	WITHOUT_CLASSIFICATION	2.693903804461645E-7	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9999827674114982	WITHOUT_CLASSIFICATION	1.7232588501892265E-5	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9999979179685584	WITHOUT_CLASSIFICATION	2.0820314416543005E-6	DEFECT
// if the event was caused by a change to series visibility, then // the axis ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999989768652505	WITHOUT_CLASSIFICATION	1.023134749420127E-6	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.9993313476400986	WITHOUT_CLASSIFICATION	6.686523599013446E-4	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.9993313476400986	WITHOUT_CLASSIFICATION	6.686523599013446E-4	DEFECT
// set the anchor value for the vertical axis...	WITHOUT_CLASSIFICATION	0.9999998755156603	WITHOUT_CLASSIFICATION	1.244843397421724E-7	DEFECT
// grab the plot's annotations	WITHOUT_CLASSIFICATION	0.9999999181158425	WITHOUT_CLASSIFICATION	8.188415749019235E-8	DEFECT
// is it a domain axis?	WITHOUT_CLASSIFICATION	0.9999600159664188	WITHOUT_CLASSIFICATION	3.9984033581200885E-5	DEFECT
// or is it a range axis?	WITHOUT_CLASSIFICATION	0.9999931939525657	WITHOUT_CLASSIFICATION	6.806047434237984E-6	DEFECT
// if the axes use a linear scale, you can uncomment the code below and // switch to the alternative transX/transY calculation inside the loop // that follows - it is a little bit faster then. // // int xx = (int) dataArea.getMinX(); // int ww = (int) dataArea.getWidth(); // int yy = (int) dataArea.getMaxY(); // int hh = (int) dataArea.getHeight(); // double domainMin = this.domainAxis.getLowerBound(); // double domainLength = this.domainAxis.getUpperBound() - domainMin; // double rangeMin = this.rangeAxis.getLowerBound(); // double rangeLength = this.rangeAxis.getUpperBound() - rangeMin;	WITHOUT_CLASSIFICATION	0.9999975643319552	WITHOUT_CLASSIFICATION	2.435668044801371E-6	DEFECT
// register the plot as a listener with its axes, datasets, and // renderers...	WITHOUT_CLASSIFICATION	0.9999979703268026	WITHOUT_CLASSIFICATION	2.029673197352064E-6	DEFECT
// perform the zoom on each domain axis	WITHOUT_CLASSIFICATION	0.9999999081658727	WITHOUT_CLASSIFICATION	9.183412718721322E-8	DEFECT
// lineVisible	WITHOUT_CLASSIFICATION	0.9999991513104497	WITHOUT_CLASSIFICATION	8.486895504033027E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.999997993530926	WITHOUT_CLASSIFICATION	2.006469074120054E-6	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999955671958	WITHOUT_CLASSIFICATION	4.43280419565981E-9	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999175292589	WITHOUT_CLASSIFICATION	8.24707412247789E-8	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.999997800764926	WITHOUT_CLASSIFICATION	2.1992350740418384E-6	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.999988389198339	WITHOUT_CLASSIFICATION	1.1610801661076474E-5	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999950968141322	WITHOUT_CLASSIFICATION	4.903185867706255E-6	DEFECT
// images considered equal only if they're the SAME object // TODO: is there a way to do a better test?	WITHOUT_CLASSIFICATION	0.9917144466458111	WITHOUT_CLASSIFICATION	0.00828555335418883	DEFECT
//int transX = (int) (xx + ww * (x - domainMin) / domainLength); //int transY = (int) (yy - hh * (y - rangeMin) / rangeLength);	WITHOUT_CLASSIFICATION	0.9999838612143486	WITHOUT_CLASSIFICATION	1.613878565139071E-5	DEFECT
// if there is an existing dataset, remove the plot from the list // of change listeners...	WITHOUT_CLASSIFICATION	0.9999995774002823	WITHOUT_CLASSIFICATION	4.2259971763234E-7	DEFECT
// plot is registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999955143233343	WITHOUT_CLASSIFICATION	4.485676665670412E-6	DEFECT
// adjust for padding...	WITHOUT_CLASSIFICATION	0.9999962978779146	WITHOUT_CLASSIFICATION	3.7021220854282294E-6	DEFECT
// already calculated // already calculated	WITHOUT_CLASSIFICATION	0.9999999423774363	WITHOUT_CLASSIFICATION	5.762256371321983E-8	DEFECT
// draw range indicators...	WITHOUT_CLASSIFICATION	0.9999957851712219	WITHOUT_CLASSIFICATION	4.214828778193046E-6	DEFECT
// draw start of normal range	WITHOUT_CLASSIFICATION	0.9999999819436111	WITHOUT_CLASSIFICATION	1.805638894993941E-8	DEFECT
// draw start of warning range	WITHOUT_CLASSIFICATION	0.9999999788372809	WITHOUT_CLASSIFICATION	2.116271912769367E-8	DEFECT
// draw start of critical range	WITHOUT_CLASSIFICATION	0.9999999370417267	WITHOUT_CLASSIFICATION	6.295827317525052E-8	DEFECT
// draw the axis...	WITHOUT_CLASSIFICATION	0.9999988407015642	WITHOUT_CLASSIFICATION	1.1592984357474636E-6	DEFECT
//cursor = midX - COLUMN_RADIUS - AXIS_GAP;	WITHOUT_CLASSIFICATION	0.9999992896556196	WITHOUT_CLASSIFICATION	7.103443802848329E-7	DEFECT
// draw text value on screen	WITHOUT_CLASSIFICATION	0.9999993268071471	WITHOUT_CLASSIFICATION	6.731928528718421E-7	DEFECT
//  draw units indicator	WITHOUT_CLASSIFICATION	0.999999515853371	WITHOUT_CLASSIFICATION	4.841466289417359E-7	DEFECT
// draw thermometer outline	WITHOUT_CLASSIFICATION	0.9999998186599462	WITHOUT_CLASSIFICATION	1.8134005376243287E-7	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999995873539774	WITHOUT_CLASSIFICATION	4.1264602255690294E-7	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9999950277158056	WITHOUT_CLASSIFICATION	4.9722841944180614E-6	DEFECT
// calculate the bounds of the template value	WITHOUT_CLASSIFICATION	0.999999895413885	WITHOUT_CLASSIFICATION	1.0458611496212783E-7	DEFECT
// align this rectangle to the frameAnchor	WITHOUT_CLASSIFICATION	0.999999542377369	WITHOUT_CLASSIFICATION	4.5762263094060346E-7	DEFECT
// add the insets	WITHOUT_CLASSIFICATION	0.9999998157474319	WITHOUT_CLASSIFICATION	1.8425256801224325E-7	DEFECT
// draw the border	WITHOUT_CLASSIFICATION	0.999999841302939	WITHOUT_CLASSIFICATION	1.5869706106006124E-7	DEFECT
// now find the text anchor point	WITHOUT_CLASSIFICATION	0.9999999082013541	WITHOUT_CLASSIFICATION	9.179864587340239E-8	DEFECT
/* lineVisible= */	WITHOUT_CLASSIFICATION	0.9999974939612183	WITHOUT_CLASSIFICATION	2.50603878168106E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999175292589	WITHOUT_CLASSIFICATION	8.24707412247789E-8	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989325001374	WITHOUT_CLASSIFICATION	1.067499862707964E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999995476321901	WITHOUT_CLASSIFICATION	4.523678098187787E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999995476321901	WITHOUT_CLASSIFICATION	4.523678098187787E-7	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999999850895571	WITHOUT_CLASSIFICATION	1.4910442882469078E-8	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9999950277158056	WITHOUT_CLASSIFICATION	4.9722841944180614E-6	DEFECT
// urlText	WITHOUT_CLASSIFICATION	0.9999993445513883	WITHOUT_CLASSIFICATION	6.554486117523907E-7	DEFECT
// first, expand the viewing area into a drawing frame	WITHOUT_CLASSIFICATION	0.9999999127380905	WITHOUT_CLASSIFICATION	8.72619095173863E-8	DEFECT
// draw the background if there is one...	WITHOUT_CLASSIFICATION	0.9999966942714781	WITHOUT_CLASSIFICATION	3.30572852187678E-6	DEFECT
// draw the pointers	WITHOUT_CLASSIFICATION	0.9999999277121722	WITHOUT_CLASSIFICATION	7.228782784576441E-8	DEFECT
// draw the cap if there is one...	WITHOUT_CLASSIFICATION	0.9999976408648195	WITHOUT_CLASSIFICATION	2.359135180555116E-6	DEFECT
// now do the minor tick marks	WITHOUT_CLASSIFICATION	0.9999999486861777	WITHOUT_CLASSIFICATION	5.131382235951365E-8	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999940093566276	WITHOUT_CLASSIFICATION	5.990643372379309E-6	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.999995830099615	WITHOUT_CLASSIFICATION	4.1699003849269134E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999998898499337	WITHOUT_CLASSIFICATION	1.1015006629734186E-7	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999965764457487	WITHOUT_CLASSIFICATION	3.423554251409287E-6	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.9999983405742983	WITHOUT_CLASSIFICATION	1.6594257017436855E-6	DEFECT
// we don't clone the listeners	WITHOUT_CLASSIFICATION	0.9999999577091337	WITHOUT_CLASSIFICATION	4.2290866241251145E-8	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.999999910335201	WITHOUT_CLASSIFICATION	8.966479896940651E-8	DEFECT
// draw the outline of the filled polygon	WITHOUT_CLASSIFICATION	0.99999975237185	WITHOUT_CLASSIFICATION	2.4762814992402576E-7	DEFECT
// just the lines, no filling	WITHOUT_CLASSIFICATION	0.9999999816717702	WITHOUT_CLASSIFICATION	1.8328229852978285E-8	DEFECT
// draw the item shapes	WITHOUT_CLASSIFICATION	0.9999998990468264	WITHOUT_CLASSIFICATION	1.0095317361201074E-7	DEFECT
// SERIES VISIBLE (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999770951343766	WITHOUT_CLASSIFICATION	2.2904865623368052E-5	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999885085596817	WITHOUT_CLASSIFICATION	1.1491440318248819E-5	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9999970260726773	WITHOUT_CLASSIFICATION	2.973927322670809E-6	DEFECT
//// FILL PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999925629843652	WITHOUT_CLASSIFICATION	7.437015634788707E-6	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999956011082	WITHOUT_CLASSIFICATION	4.398891825549099E-9	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999995476321901	WITHOUT_CLASSIFICATION	4.523678098187787E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999995476321901	WITHOUT_CLASSIFICATION	4.523678098187787E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999995476321901	WITHOUT_CLASSIFICATION	4.523678098187787E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999995476321901	WITHOUT_CLASSIFICATION	4.523678098187787E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999995476321901	WITHOUT_CLASSIFICATION	4.523678098187787E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999995476321901	WITHOUT_CLASSIFICATION	4.523678098187787E-7	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999983942249648	WITHOUT_CLASSIFICATION	1.6057750352191699E-6	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999956011082	WITHOUT_CLASSIFICATION	4.398891825549099E-9	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999956011082	WITHOUT_CLASSIFICATION	4.398891825549099E-9	DEFECT
// OUTLINE PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996105269903	WITHOUT_CLASSIFICATION	3.8947300969200984E-7	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.999998616841281	WITHOUT_CLASSIFICATION	1.3831587190544558E-6	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.9999998249266161	WITHOUT_CLASSIFICATION	1.7507338387734403E-7	DEFECT
// otherwise look up the stroke table	WITHOUT_CLASSIFICATION	0.9999998093724668	WITHOUT_CLASSIFICATION	1.9062753315719135E-7	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.9999950713366368	WITHOUT_CLASSIFICATION	4.9286633632267195E-6	DEFECT
// otherwise look up the shape list	WITHOUT_CLASSIFICATION	0.999999981833279	WITHOUT_CLASSIFICATION	1.8166721074338173E-8	DEFECT
// ITEM LABEL VISIBILITY...	WITHOUT_CLASSIFICATION	0.9999239735220502	WITHOUT_CLASSIFICATION	7.602647794972595E-5	DEFECT
// otherwise look up the boolean table	WITHOUT_CLASSIFICATION	0.9999999908788187	WITHOUT_CLASSIFICATION	9.121181252591112E-9	DEFECT
// this should have been defined as a boolean primitive, because // allowing null values is a nuisance...but it is part of the final // API now, so we'll have to support it.	WITHOUT_CLASSIFICATION	0.9999995825282012	WITHOUT_CLASSIFICATION	4.1747179873894043E-7	DEFECT
//// ITEM LABEL FONT //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999983519646816	WITHOUT_CLASSIFICATION	1.6480353183864833E-6	DEFECT
//// ITEM LABEL PAINT  ////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999996213852732	WITHOUT_CLASSIFICATION	3.786147268099867E-6	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999388422579814	WITHOUT_CLASSIFICATION	6.1157742018699E-5	DEFECT
// otherwise look up the position table	WITHOUT_CLASSIFICATION	0.9999999118823094	WITHOUT_CLASSIFICATION	8.811769057404905E-8	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999705174614334	WITHOUT_CLASSIFICATION	2.9482538566690607E-5	DEFECT
// otherwise look up the position list	WITHOUT_CLASSIFICATION	0.999999828105901	WITHOUT_CLASSIFICATION	1.7189409895316067E-7	DEFECT
// the commented out code would be better, but only if // RendererChangeEvent is immutable, which it isn't.  See if there is // a way to fix this...	WITHOUT_CLASSIFICATION	0.989150562783655	WITHOUT_CLASSIFICATION	0.010849437216344987	DEFECT
// 'paint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999996677898764	WITHOUT_CLASSIFICATION	3.322101235576445E-7	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998910142754	WITHOUT_CLASSIFICATION	1.0898572445629166E-7	DEFECT
// 'outlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999993175081568	WITHOUT_CLASSIFICATION	6.824918431220995E-7	DEFECT
// 'baseOutlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998484432343	WITHOUT_CLASSIFICATION	1.5155676565911192E-7	DEFECT
// 'stroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999934379606902	WITHOUT_CLASSIFICATION	6.562039309830891E-6	DEFECT
// 'baseStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999885357972564	WITHOUT_CLASSIFICATION	1.1464202743624416E-5	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999983942249648	WITHOUT_CLASSIFICATION	1.6057750352191699E-6	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998910142754	WITHOUT_CLASSIFICATION	1.0898572445629166E-7	DEFECT
// shapeList // baseShape	WITHOUT_CLASSIFICATION	0.9999999740312019	WITHOUT_CLASSIFICATION	2.5968798190023802E-8	DEFECT
// 'outlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999417322517627	WITHOUT_CLASSIFICATION	5.826774823724115E-5	DEFECT
// 'baseOutlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.999987060259878	WITHOUT_CLASSIFICATION	1.2939740121995335E-5	DEFECT
// 'itemLabelsVisible' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999996846030705	WITHOUT_CLASSIFICATION	3.1539692943543635E-7	DEFECT
// 'itemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998609605772	WITHOUT_CLASSIFICATION	1.3903942275257223E-7	DEFECT
// 'baseItemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999695620496	WITHOUT_CLASSIFICATION	3.0437950312512166E-8	DEFECT
// 'itemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999179403797	WITHOUT_CLASSIFICATION	8.20596203021775E-8	DEFECT
// 'baseItemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999820358394	WITHOUT_CLASSIFICATION	1.7964160702121643E-8	DEFECT
// 'postiveItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999677793804	WITHOUT_CLASSIFICATION	3.2220619623129676E-8	DEFECT
// 'baseItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.999999941393563	WITHOUT_CLASSIFICATION	5.860643701035908E-8	DEFECT
// 'negativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998524363751	WITHOUT_CLASSIFICATION	1.475636249030594E-7	DEFECT
// 'baseNegativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999808515873	WITHOUT_CLASSIFICATION	1.91484127530997E-8	DEFECT
// listeners are not restored automatically, but storage must be // provided...	WITHOUT_CLASSIFICATION	0.9997474235431416	WITHOUT_CLASSIFICATION	2.5257645685834967E-4	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999994204435897	WITHOUT_CLASSIFICATION	5.795564102333711E-7	DEFECT
// The following alternative is only supported in JDK 1.4 - we support // JDK 1.3.1 onwards // setItemLabelsVisible(Boolean.valueOf(visible));	WITHOUT_CLASSIFICATION	0.9998942475234558	WITHOUT_CLASSIFICATION	1.0575247654421402E-4	DEFECT
//System.err.print(" creating new outlier list ");	WITHOUT_CLASSIFICATION	0.9999999967194827	WITHOUT_CLASSIFICATION	3.280517331875328E-9	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999942473615171	WITHOUT_CLASSIFICATION	5.752638482841711E-6	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999973268954861	WITHOUT_CLASSIFICATION	2.673104513764309E-6	DEFECT
// handle value outside bounds...	WITHOUT_CLASSIFICATION	0.999999835368095	WITHOUT_CLASSIFICATION	1.6463190489127113E-7	DEFECT
// handle special case where value is less that item zero	WITHOUT_CLASSIFICATION	0.99999994062062	WITHOUT_CLASSIFICATION	5.9379379972688866E-8	DEFECT
// special case where the lowest x-value is >= xLow	WITHOUT_CLASSIFICATION	0.9999999447081076	WITHOUT_CLASSIFICATION	5.529189240969703E-8	DEFECT
// special case where the highest x-value is < xLow	WITHOUT_CLASSIFICATION	0.9999997452290155	WITHOUT_CLASSIFICATION	2.5477098453372866E-7	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.9999606140307372	WITHOUT_CLASSIFICATION	3.938596926285741E-5	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.9999606140307372	WITHOUT_CLASSIFICATION	3.938596926285741E-5	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.999999985774417	WITHOUT_CLASSIFICATION	1.4225583100405789E-8	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.999999985774417	WITHOUT_CLASSIFICATION	1.4225583100405789E-8	DEFECT
// in this case, every color has a unique value	WITHOUT_CLASSIFICATION	0.9999400250119662	WITHOUT_CLASSIFICATION	5.997498803376188E-5	DEFECT
// in this case, every color has a range of values	WITHOUT_CLASSIFICATION	0.9999684195546164	WITHOUT_CLASSIFICATION	3.1580445383644705E-5	DEFECT
// end class wafermaprenderer	WITHOUT_CLASSIFICATION	0.999997803212025	WITHOUT_CLASSIFICATION	2.1967879749484326E-6	DEFECT
// if there is no plot, there is no dataset to access...	WITHOUT_CLASSIFICATION	0.999999544788907	WITHOUT_CLASSIFICATION	4.5521109305293623E-7	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any initial values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.9999252031578224	WITHOUT_CLASSIFICATION	7.479684217757282E-5	DEFECT
// when the x-values are descending, the upper bound is found by // comparing against xLow	WITHOUT_CLASSIFICATION	0.9999847125893476	WITHOUT_CLASSIFICATION	1.5287410652348753E-5	DEFECT
// more values than paints so map // multiple values to the same color	WITHOUT_CLASSIFICATION	0.9999996807163128	WITHOUT_CLASSIFICATION	3.192836871125415E-7	DEFECT
// end foreach map entry // end else	WITHOUT_CLASSIFICATION	0.9999999480847579	WITHOUT_CLASSIFICATION	5.1915242071472153E-8	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999923270725	WITHOUT_CLASSIFICATION	7.67292745207607E-9	DEFECT
// FIXME: calculate xxLeft and xxRight	WITHOUT_CLASSIFICATION	0.9118268241002501	DEFECT	0.08817317589974986	WITHOUT_CLASSIFICATION
// handle positive value	WITHOUT_CLASSIFICATION	0.9999997717951096	WITHOUT_CLASSIFICATION	2.2820489038305635E-7	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999997929976909	WITHOUT_CLASSIFICATION	2.070023091082377E-7	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999997929976909	WITHOUT_CLASSIFICATION	2.070023091082377E-7	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999974593388591	WITHOUT_CLASSIFICATION	2.5406611409111615E-6	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999974593388591	WITHOUT_CLASSIFICATION	2.5406611409111615E-6	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999997606676652	WITHOUT_CLASSIFICATION	2.3933233485921514E-7	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999976306395307	WITHOUT_CLASSIFICATION	2.369360469301187E-6	DEFECT
// '+' because v is negative	WITHOUT_CLASSIFICATION	0.9999997972295702	WITHOUT_CLASSIFICATION	2.0277042983908405E-7	DEFECT
// handle rendering separately for the two plot orientations...	WITHOUT_CLASSIFICATION	0.9999953633347534	WITHOUT_CLASSIFICATION	4.636665246675648E-6	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.9999997171870245	WITHOUT_CLASSIFICATION	2.8281297550851255E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999993351822021	WITHOUT_CLASSIFICATION	6.648177980222687E-7	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.9999930377381097	WITHOUT_CLASSIFICATION	6.962261890246943E-6	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.999980278100997	WITHOUT_CLASSIFICATION	1.9721899003063477E-5	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999956011082	WITHOUT_CLASSIFICATION	4.398891825549099E-9	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9999953231288633	WITHOUT_CLASSIFICATION	4.676871136679625E-6	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.9999997171870245	WITHOUT_CLASSIFICATION	2.8281297550851255E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999993351822021	WITHOUT_CLASSIFICATION	6.648177980222687E-7	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.9999967515443544	WITHOUT_CLASSIFICATION	3.2484556456482096E-6	DEFECT
// preserves old behaviour	WITHOUT_CLASSIFICATION	0.999999903086619	WITHOUT_CLASSIFICATION	9.691338107714229E-8	DEFECT
// contained titles	WITHOUT_CLASSIFICATION	0.9999996185119602	WITHOUT_CLASSIFICATION	3.8148803975057367E-7	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.999980278100997	WITHOUT_CLASSIFICATION	1.9721899003063477E-5	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9999999658270983	WITHOUT_CLASSIFICATION	3.417290165512569E-8	DEFECT
// delegate	WITHOUT_CLASSIFICATION	0.9999998140813603	WITHOUT_CLASSIFICATION	1.8591863971372264E-7	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999869559581777	WITHOUT_CLASSIFICATION	1.3044041822304304E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999869559581777	WITHOUT_CLASSIFICATION	1.3044041822304304E-5	DEFECT
// do nothing if both the line and shape are not visible	WITHOUT_CLASSIFICATION	0.9999995471676499	WITHOUT_CLASSIFICATION	4.528323500205878E-7	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.9997197829063584	WITHOUT_CLASSIFICATION	2.802170936415248E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999560665588388	WITHOUT_CLASSIFICATION	4.393344116114735E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999560665588388	WITHOUT_CLASSIFICATION	4.393344116114735E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999978163597422	WITHOUT_CLASSIFICATION	2.1836402577443403E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999995136108759	WITHOUT_CLASSIFICATION	4.86389124124746E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999982828730777	WITHOUT_CLASSIFICATION	1.7171269223037258E-6	DEFECT
// set the default item label positions	WITHOUT_CLASSIFICATION	0.9999999935872405	WITHOUT_CLASSIFICATION	6.412759616255344E-9	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.9999362671182452	WITHOUT_CLASSIFICATION	6.373288175477982E-5	DEFECT
// highlight the background corners...	WITHOUT_CLASSIFICATION	0.9999354009198604	WITHOUT_CLASSIFICATION	6.459908013951794E-5	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.9999990951114192	WITHOUT_CLASSIFICATION	9.048885808488283E-7	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999999343351581	WITHOUT_CLASSIFICATION	6.56648418372587E-8	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999994204435897	WITHOUT_CLASSIFICATION	5.795564102333711E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999993351822021	WITHOUT_CLASSIFICATION	6.648177980222687E-7	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999921229253624	WITHOUT_CLASSIFICATION	7.877074637640087E-6	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.9999977489322266	WITHOUT_CLASSIFICATION	2.25106777347466E-6	DEFECT
// check the value we are plotting...	WITHOUT_CLASSIFICATION	0.9999946058011964	WITHOUT_CLASSIFICATION	5.394198803711339E-6	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.999947503128146	WITHOUT_CLASSIFICATION	5.2496871854126987E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999899539872891	WITHOUT_CLASSIFICATION	1.0046012711059724E-5	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999904913094316	WITHOUT_CLASSIFICATION	9.508690568417551E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999988022162875	WITHOUT_CLASSIFICATION	1.1977837125930448E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999988022162875	WITHOUT_CLASSIFICATION	1.1977837125930448E-6	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999999956099768	WITHOUT_CLASSIFICATION	4.390023216166321E-9	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999999956099768	WITHOUT_CLASSIFICATION	4.390023216166321E-9	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9999802062504718	WITHOUT_CLASSIFICATION	1.9793749528274165E-5	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999954899338744	WITHOUT_CLASSIFICATION	4.510066125588921E-6	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999992431720478	WITHOUT_CLASSIFICATION	7.568279521341936E-7	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999999020795598	WITHOUT_CLASSIFICATION	9.792044028742844E-8	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999998443308242	WITHOUT_CLASSIFICATION	1.5566917572576532E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999993717191491	WITHOUT_CLASSIFICATION	6.282808508989739E-7	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999816458722288	WITHOUT_CLASSIFICATION	1.8354127771127474E-5	DEFECT
// defensive check	WITHOUT_CLASSIFICATION	0.9999998558791682	WITHOUT_CLASSIFICATION	1.4412083180601413E-7	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999283224645845	WITHOUT_CLASSIFICATION	7.167753541554638E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9996011026169872	WITHOUT_CLASSIFICATION	3.9889738301280165E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999985819078456	WITHOUT_CLASSIFICATION	1.4180921543978865E-6	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9993026064596859	WITHOUT_CLASSIFICATION	6.973935403139804E-4	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999283224645845	WITHOUT_CLASSIFICATION	7.167753541554638E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9996011026169872	WITHOUT_CLASSIFICATION	3.9889738301280165E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999985819078456	WITHOUT_CLASSIFICATION	1.4180921543978865E-6	DEFECT
// let the superclass handle it...	WITHOUT_CLASSIFICATION	0.999995533153926	WITHOUT_CLASSIFICATION	4.466846073931449E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999776329509634	WITHOUT_CLASSIFICATION	2.236704903650718E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999776329509634	WITHOUT_CLASSIFICATION	2.236704903650718E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999921229253624	WITHOUT_CLASSIFICATION	7.877074637640087E-6	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999921229253624	WITHOUT_CLASSIFICATION	7.877074637640087E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999977640603841	WITHOUT_CLASSIFICATION	2.235939615888048E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999977640603841	WITHOUT_CLASSIFICATION	2.235939615888048E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999932104504348	WITHOUT_CLASSIFICATION	6.789549565150983E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999932104504348	WITHOUT_CLASSIFICATION	6.789549565150983E-6	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.9999998487065531	WITHOUT_CLASSIFICATION	1.5129344690204216E-7	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.9999998487065531	WITHOUT_CLASSIFICATION	1.5129344690204216E-7	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999595988727	WITHOUT_CLASSIFICATION	4.040112741692382E-8	DEFECT
// value 0	WITHOUT_CLASSIFICATION	0.9999985692165141	WITHOUT_CLASSIFICATION	1.4307834859260783E-6	DEFECT
// get the clipping values...	WITHOUT_CLASSIFICATION	0.9999984661481941	WITHOUT_CLASSIFICATION	1.533851805853533E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999982828730777	WITHOUT_CLASSIFICATION	1.7171269223037258E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999982828730777	WITHOUT_CLASSIFICATION	1.7171269223037258E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999899539872891	WITHOUT_CLASSIFICATION	1.0046012711059724E-5	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999985819078456	WITHOUT_CLASSIFICATION	1.4180921543978865E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999776329509634	WITHOUT_CLASSIFICATION	2.236704903650718E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999776329509634	WITHOUT_CLASSIFICATION	2.236704903650718E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999921229253624	WITHOUT_CLASSIFICATION	7.877074637640087E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999977640603841	WITHOUT_CLASSIFICATION	2.235939615888048E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999932104504348	WITHOUT_CLASSIFICATION	6.789549565150983E-6	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9999998799333543	WITHOUT_CLASSIFICATION	1.20066645737289E-7	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.9999970561802833	WITHOUT_CLASSIFICATION	2.943819716588394E-6	DEFECT
// DRAW THE BARS...	WITHOUT_CLASSIFICATION	0.9999306307631891	WITHOUT_CLASSIFICATION	6.93692368108519E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999575184564599	WITHOUT_CLASSIFICATION	4.2481543540175896E-5	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999970134492333	WITHOUT_CLASSIFICATION	2.9865507666813493E-6	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999968924835173	WITHOUT_CLASSIFICATION	3.1075164827426757E-6	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997554517008195	WITHOUT_CLASSIFICATION	2.4454829918052457E-4	DEFECT
// X	WITHOUT_CLASSIFICATION	0.9999089107525179	WITHOUT_CLASSIFICATION	9.108924748218753E-5	DEFECT
// Y	WITHOUT_CLASSIFICATION	0.999996265566899	WITHOUT_CLASSIFICATION	3.734433100909844E-6	DEFECT
// subtitle 1 is the legend	WITHOUT_CLASSIFICATION	0.9999287352184397	WITHOUT_CLASSIFICATION	7.126478156031432E-5	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999976306395307	WITHOUT_CLASSIFICATION	2.369360469301187E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999899539872891	WITHOUT_CLASSIFICATION	1.0046012711059724E-5	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999283224645845	WITHOUT_CLASSIFICATION	7.167753541554638E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9996011026169872	WITHOUT_CLASSIFICATION	3.9889738301280165E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999985819078456	WITHOUT_CLASSIFICATION	1.4180921543978865E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999776329509634	WITHOUT_CLASSIFICATION	2.236704903650718E-5	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999977640603841	WITHOUT_CLASSIFICATION	2.235939615888048E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999932104504348	WITHOUT_CLASSIFICATION	6.789549565150983E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999932104504348	WITHOUT_CLASSIFICATION	6.789549565150983E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999575184564599	WITHOUT_CLASSIFICATION	4.2481543540175896E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999575184564599	WITHOUT_CLASSIFICATION	4.2481543540175896E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997554517008195	WITHOUT_CLASSIFICATION	2.4454829918052457E-4	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997554517008195	WITHOUT_CLASSIFICATION	2.4454829918052457E-4	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.9999993893029008	WITHOUT_CLASSIFICATION	6.10697099319698E-7	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999908319325765	WITHOUT_CLASSIFICATION	9.168067423462139E-6	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999747705813038	WITHOUT_CLASSIFICATION	2.5229418696111292E-5	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.999999812985516	WITHOUT_CLASSIFICATION	1.8701448394437007E-7	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.99999276012903	WITHOUT_CLASSIFICATION	7.239870969899061E-6	DEFECT
//plotBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999815970677713	WITHOUT_CLASSIFICATION	1.840293222864554E-5	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999991698111387	WITHOUT_CLASSIFICATION	8.301888613490488E-7	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999976306395307	WITHOUT_CLASSIFICATION	2.369360469301187E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999993351822021	WITHOUT_CLASSIFICATION	6.648177980222687E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999993351822021	WITHOUT_CLASSIFICATION	6.648177980222687E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999982828730777	WITHOUT_CLASSIFICATION	1.7171269223037258E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999982828730777	WITHOUT_CLASSIFICATION	1.7171269223037258E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999996017501482	WITHOUT_CLASSIFICATION	3.9824985179223825E-6	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.999947503128146	WITHOUT_CLASSIFICATION	5.2496871854126987E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999899539872891	WITHOUT_CLASSIFICATION	1.0046012711059724E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999816458722288	WITHOUT_CLASSIFICATION	1.8354127771127474E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999816458722288	WITHOUT_CLASSIFICATION	1.8354127771127474E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999816458722288	WITHOUT_CLASSIFICATION	1.8354127771127474E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999776329509634	WITHOUT_CLASSIFICATION	2.236704903650718E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999776329509634	WITHOUT_CLASSIFICATION	2.236704903650718E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997554517008195	WITHOUT_CLASSIFICATION	2.4454829918052457E-4	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999908319325765	WITHOUT_CLASSIFICATION	9.168067423462139E-6	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999747705813038	WITHOUT_CLASSIFICATION	2.5229418696111292E-5	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999920252008	WITHOUT_CLASSIFICATION	7.974799104048999E-9	DEFECT
// do nothing if item is not visible or null	WITHOUT_CLASSIFICATION	0.9999735129636595	WITHOUT_CLASSIFICATION	2.6487036340337517E-5	DEFECT
// 100 percent, so it will not apply unless changed	WITHOUT_CLASSIFICATION	0.9999991034554965	WITHOUT_CLASSIFICATION	8.965445036124409E-7	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9998860540886483	WITHOUT_CLASSIFICATION	1.1394591135170619E-4	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9019435220189772	WITHOUT_CLASSIFICATION	0.09805647798102274	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999993351822021	WITHOUT_CLASSIFICATION	6.648177980222687E-7	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999869559581777	WITHOUT_CLASSIFICATION	1.3044041822304304E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999560665588388	WITHOUT_CLASSIFICATION	4.393344116114735E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999560665588388	WITHOUT_CLASSIFICATION	4.393344116114735E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999978163597422	WITHOUT_CLASSIFICATION	2.1836402577443403E-6	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999908319325765	WITHOUT_CLASSIFICATION	9.168067423462139E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999995373415826	WITHOUT_CLASSIFICATION	4.626584173623276E-7	DEFECT
// in the following code, barL0 is (in Java2D coordinates) the LEFT // end of the bar for a horizontal bar chart, and the TOP end of the // bar for a vertical bar chart.  Whether this is the BASE of the bar // or not depends also on (a) whether the data value is 'negative' // relative to the base value and (b) whether or not the range axis is // inverted.  This only matters if/when we apply the minimumBarLength // attribute, because we should extend the non-base end of the bar	WITHOUT_CLASSIFICATION	0.9999842745942111	WITHOUT_CLASSIFICATION	1.572540578878127E-5	DEFECT
// switch x and y	WITHOUT_CLASSIFICATION	0.9999993423282819	WITHOUT_CLASSIFICATION	6.576717181777724E-7	DEFECT
// or: x1s + 2*(x1-x1s)	WITHOUT_CLASSIFICATION	0.9999694989389418	WITHOUT_CLASSIFICATION	3.0501061058128326E-5	DEFECT
// or: x0s + 2*(x0-x0s)	WITHOUT_CLASSIFICATION	0.9999626136105983	WITHOUT_CLASSIFICATION	3.73863894016799E-5	DEFECT
// extend x0's flat bar	WITHOUT_CLASSIFICATION	0.9999980766109693	WITHOUT_CLASSIFICATION	1.923389030743839E-6	DEFECT
// upright bar	WITHOUT_CLASSIFICATION	0.9999991884878878	WITHOUT_CLASSIFICATION	8.115121122597211E-7	DEFECT
// x1's flat bar	WITHOUT_CLASSIFICATION	0.9999968237103691	WITHOUT_CLASSIFICATION	3.176289630832975E-6	DEFECT
//standard deviation lines	WITHOUT_CLASSIFICATION	0.9999997478622756	WITHOUT_CLASSIFICATION	2.5213772433889665E-7	DEFECT
//// OUTLINE PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999995613298828	WITHOUT_CLASSIFICATION	4.3867011721952844E-7	DEFECT
//plotOutlinePaint;	WITHOUT_CLASSIFICATION	0.999996919724295	WITHOUT_CLASSIFICATION	3.0802757049395687E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999995373415826	WITHOUT_CLASSIFICATION	4.626584173623276E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999995373415826	WITHOUT_CLASSIFICATION	4.626584173623276E-7	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999978163597422	WITHOUT_CLASSIFICATION	2.1836402577443403E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999995136108759	WITHOUT_CLASSIFICATION	4.86389124124746E-7	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999283224645845	WITHOUT_CLASSIFICATION	7.167753541554638E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9996011026169872	WITHOUT_CLASSIFICATION	3.9889738301280165E-4	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999970134492333	WITHOUT_CLASSIFICATION	2.9865507666813493E-6	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999968924835173	WITHOUT_CLASSIFICATION	3.1075164827426757E-6	DEFECT
// draw the standard deviation lines *before* the shapes (if they're // visible) - it looks better if the shape fill colour is different to // the line colour	WITHOUT_CLASSIFICATION	0.9999967208554102	WITHOUT_CLASSIFICATION	3.2791445897582033E-6	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.9999550604954085	WITHOUT_CLASSIFICATION	4.493950459154552E-5	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.9999695708549889	WITHOUT_CLASSIFICATION	3.042914501113284E-5	DEFECT
// there are no fields to check	WITHOUT_CLASSIFICATION	0.9999997450763507	WITHOUT_CLASSIFICATION	2.549236492773366E-7	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------------- * CategoryItemRenderer.java * ------------------------- * * (C) Copyright 2001-2011, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Mark Watson (www.markwatson.com); * * Changes * ------- * 23-Oct-2001 : Version 1 (DG); * 16-Jan-2002 : Renamed HorizontalCategoryItemRenderer.java *               --> CategoryItemRenderer.java (DG); * 05-Feb-2002 : Changed return type of the drawCategoryItem method from void *               to Shape, as part of the tooltips implementation (DG) * *               NOTE (30-May-2002) : this has subsequently been changed back *               to void, tooltips are now collected along with entities in *               ChartRenderingInfo (DG); * * 14-Mar-2002 : Added the initialise method, and changed all bar plots to use *               this renderer (DG); * 23-May-2002 : Added ChartRenderingInfo to the initialise method (DG); * 29-May-2002 : Added the getAxisArea(Rectangle2D) method (DG); * 06-Jun-2002 : Updated Javadoc comments (DG); * 26-Jun-2002 : Added range axis to the initialise method (DG); * 24-Sep-2002 : Added getLegendItem() method (DG); * 23-Oct-2002 : Added methods to get/setToolTipGenerator (DG); * 05-Nov-2002 : Replaced references to CategoryDataset with TableDataset (DG); * 06-Nov-2002 : Added the domain axis to the drawCategoryItem method.  Renamed *               drawCategoryItem() --> drawItem() (DG); * 20-Nov-2002 : Changed signature of drawItem() method to reflect use of *               TableDataset (DG); * 26-Nov-2002 : Replaced the isStacked() method with the getRangeType() *               method (DG); * 08-Jan-2003 : Changed getSeriesCount() --> getRowCount() and *               getCategoryCount() --> getColumnCount() (DG); * 09-Jan-2003 : Changed name of grid-line methods (DG); * 21-Jan-2003 : Merged TableDataset with CategoryDataset (DG); * 10-Apr-2003 : Changed CategoryDataset to KeyedValues2DDataset in *               drawItem() method (DG); * 29-Apr-2003 : Eliminated Renderer interface (DG); * 02-Sep-2003 : Fix for bug 790407 (DG); * 16-Sep-2003 : Changed ChartRenderingInfo --> PlotRenderingInfo (DG); * 20-Oct-2003 : Added setOutlinePaint() method (DG); * 06-Feb-2004 : Added missing methods, and moved deprecated methods (DG); * 19-Feb-2004 : Added extra setXXXLabelsVisible() methods (DG); * 29-Apr-2004 : Changed Integer --> int in initialise() method (DG); * 18-May-2004 : Added methods for item label paint (DG); * 05-Nov-2004 : Added getPassCount() method and 'pass' parameter to drawItem() *               method (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds (DG); * 11-Jan-2005 : Removed deprecated code in preparation for 1.0.0 release (DG); * 23-Feb-2005 : Now extends LegendItemSource (DG); * 20-Apr-2005 : Renamed CategoryLabelGenerator *               --> CategoryItemLabelGenerator (DG); * 20-May-2005 : Added drawDomainMarker() method (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 20-Feb-2007 : Updated API docs (DG); * 19-Apr-2007 : Deprecated seriesVisible and seriesVisibleInLegend flags (DG); * 20-Apr-2007 : Deprecated paint, fillPaint, outlinePaint, stroke, *               outlineStroke, shape, itemLabelsVisible, itemLabelFont, *               itemLabelPaint, positiveItemLabelPosition, *               negativeItemLabelPosition and createEntities override *               fields (DG); * 26-Jun-2008 : Added new method required for crosshair support - THIS CHANGES *               THE API as of version 1.0.11 (DG); * */	WITHOUT_CLASSIFICATION	0.9999967018990691	WITHOUT_CLASSIFICATION	3.2981009310323913E-6	DEFECT
//// PAINT /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999989496895936	WITHOUT_CLASSIFICATION	1.0503104064598239E-6	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.8153170837907096	WITHOUT_CLASSIFICATION	0.1846829162092905	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.5140894307956958	WITHOUT_CLASSIFICATION	0.48591056920430414	DEFECT
//// FILL PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999925629843652	WITHOUT_CLASSIFICATION	7.437015634788707E-6	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999388422579814	WITHOUT_CLASSIFICATION	6.1157742018699E-5	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999705174614334	WITHOUT_CLASSIFICATION	2.9482538566690607E-5	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999904913094316	WITHOUT_CLASSIFICATION	9.508690568417551E-6	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9999802062504718	WITHOUT_CLASSIFICATION	1.9793749528274165E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999932104504348	WITHOUT_CLASSIFICATION	6.789549565150983E-6	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.8153170837907096	WITHOUT_CLASSIFICATION	0.1846829162092905	DEFECT
// ITEM LABELS VISIBLE	WITHOUT_CLASSIFICATION	0.9999920782785734	WITHOUT_CLASSIFICATION	7.92172142660834E-6	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7579477709104321	WITHOUT_CLASSIFICATION	0.24205222908956783	DEFECT
//// STROKE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999992568325106	WITHOUT_CLASSIFICATION	7.431674894601654E-7	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.8426145646218388	DEFECT	0.1573854353781612	WITHOUT_CLASSIFICATION
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9462574131155947	DEFECT	0.05374258688440525	WITHOUT_CLASSIFICATION
//// OUTLINE STROKE ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998248692692	WITHOUT_CLASSIFICATION	1.7513073079307373E-7	DEFECT
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.753472938036705	DEFECT	0.246527061963295	WITHOUT_CLASSIFICATION
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.8957366938196997	DEFECT	0.10426330618030029	WITHOUT_CLASSIFICATION
//// SHAPE /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999974258348933	WITHOUT_CLASSIFICATION	2.5741651067474012E-6	DEFECT
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.9497505173573794	WITHOUT_CLASSIFICATION	0.050249482642620615	DEFECT
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.7093688150705032	WITHOUT_CLASSIFICATION	0.29063118492949674	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999485097596	WITHOUT_CLASSIFICATION	5.1490240417310955E-8	DEFECT
// FIXME: add setSeriesItemLabelGenerator(int, CategoryItemLabelGenerator, //            boolean)	WITHOUT_CLASSIFICATION	0.9988132003744531	WITHOUT_CLASSIFICATION	0.0011867996255468837	DEFECT
// FIXME: add setBaseToolTipGenerator(CategoryToolTipGenerator, boolean) ?	WITHOUT_CLASSIFICATION	0.987436508912969	WITHOUT_CLASSIFICATION	0.01256349108703098	DEFECT
//// ITEM LABEL FONT  //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999972053324522	WITHOUT_CLASSIFICATION	2.7946675479385644E-6	DEFECT
// FIXME: add setSeriesItemLabelFont(int, Font, boolean) ?	WITHOUT_CLASSIFICATION	0.9877362930148005	WITHOUT_CLASSIFICATION	0.012263706985199407	DEFECT
// FIXME: add setBaseItemLabelFont(Font, boolean) ?	WITHOUT_CLASSIFICATION	0.9445022572169619	WITHOUT_CLASSIFICATION	0.05549774278303816	DEFECT
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999996213852732	WITHOUT_CLASSIFICATION	3.786147268099867E-6	DEFECT
// FIXME: add setSeriesItemLabelPaint(int, Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.9894764861579008	WITHOUT_CLASSIFICATION	0.010523513842099042	DEFECT
// FIXME: add setBaseItemLabelPaint(Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.9656678099019372	WITHOUT_CLASSIFICATION	0.03433219009806266	DEFECT
// ITEM URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999916512337579	WITHOUT_CLASSIFICATION	8.348766242178421E-6	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999999987110285	WITHOUT_CLASSIFICATION	1.2889714637455036E-9	DEFECT
/*&& state.getBarWidth() > renderer.BAR_OUTLINE_WIDTH_THRESHOLD*/	WITHOUT_CLASSIFICATION	0.9999938759682929	WITHOUT_CLASSIFICATION	6.1240317070447836E-6	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9999999700704278	WITHOUT_CLASSIFICATION	2.9929572168262724E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999485097596	WITHOUT_CLASSIFICATION	5.1490240417310955E-8	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.9997197829063584	WITHOUT_CLASSIFICATION	2.802170936415248E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999560665588388	WITHOUT_CLASSIFICATION	4.393344116114735E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999978163597422	WITHOUT_CLASSIFICATION	2.1836402577443403E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999978163597422	WITHOUT_CLASSIFICATION	2.1836402577443403E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999995136108759	WITHOUT_CLASSIFICATION	4.86389124124746E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999982828730777	WITHOUT_CLASSIFICATION	1.7171269223037258E-6	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.9999362671182452	WITHOUT_CLASSIFICATION	6.373288175477982E-5	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.9999990951114192	WITHOUT_CLASSIFICATION	9.048885808488283E-7	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.9999977489322266	WITHOUT_CLASSIFICATION	2.25106777347466E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999899539872891	WITHOUT_CLASSIFICATION	1.0046012711059724E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999575184564599	WITHOUT_CLASSIFICATION	4.2481543540175896E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997554517008195	WITHOUT_CLASSIFICATION	2.4454829918052457E-4	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999999913520298	WITHOUT_CLASSIFICATION	8.6479703316213E-9	DEFECT
// 100 percent, so it will not apply unless // changed	WITHOUT_CLASSIFICATION	0.9999993071454693	WITHOUT_CLASSIFICATION	6.928545306726195E-7	DEFECT
// set the outline paint to fully transparent, then the legend shape // will just have the same colour as the lines drawn by the renderer	WITHOUT_CLASSIFICATION	0.9999999689100414	WITHOUT_CLASSIFICATION	3.1089958578957113E-8	DEFECT
// first check the number we are plotting...	WITHOUT_CLASSIFICATION	0.999999887608206	WITHOUT_CLASSIFICATION	1.1239179388477733E-7	DEFECT
// reset the min and max	WITHOUT_CLASSIFICATION	0.9999991940133784	WITHOUT_CLASSIFICATION	8.059866216253162E-7	DEFECT
// connect to the previous point	WITHOUT_CLASSIFICATION	0.999999631012637	WITHOUT_CLASSIFICATION	3.6898736298239017E-7	DEFECT
// create a line renderer only	WITHOUT_CLASSIFICATION	0.9999925467032831	WITHOUT_CLASSIFICATION	7.453296716933749E-6	DEFECT
// higlight the background corners...	WITHOUT_CLASSIFICATION	0.9999476766664753	WITHOUT_CLASSIFICATION	5.2323333524710264E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999869559581777	WITHOUT_CLASSIFICATION	1.3044041822304304E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999816458722288	WITHOUT_CLASSIFICATION	1.8354127771127474E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999932104504348	WITHOUT_CLASSIFICATION	6.789549565150983E-6	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999970134492333	WITHOUT_CLASSIFICATION	2.9865507666813493E-6	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999968924835173	WITHOUT_CLASSIFICATION	3.1075164827426757E-6	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997554517008195	WITHOUT_CLASSIFICATION	2.4454829918052457E-4	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.9999550604954085	WITHOUT_CLASSIFICATION	4.493950459154552E-5	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.9999695708549889	WITHOUT_CLASSIFICATION	3.042914501113284E-5	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9999998172494767	WITHOUT_CLASSIFICATION	1.8275052322221892E-7	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999999689315658	WITHOUT_CLASSIFICATION	3.106843405615299E-8	DEFECT
// treat the last column value as an absolute	WITHOUT_CLASSIFICATION	0.9999997547631848	WITHOUT_CLASSIFICATION	2.452368151782971E-7	DEFECT
// only needed if calculating percentages	WITHOUT_CLASSIFICATION	0.9999999560225518	WITHOUT_CLASSIFICATION	4.3977448189105864E-8	DEFECT
// calculate the box width	WITHOUT_CLASSIFICATION	0.9999983592807504	WITHOUT_CLASSIFICATION	1.6407192496555542E-6	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9999998193829286	WITHOUT_CLASSIFICATION	1.806170713470838E-7	DEFECT
// offset the start of the box if the box width is smaller than // the category width	WITHOUT_CLASSIFICATION	0.9999898187509499	WITHOUT_CLASSIFICATION	1.0181249050188543E-5	DEFECT
// draw the box...	WITHOUT_CLASSIFICATION	0.9999964821497012	WITHOUT_CLASSIFICATION	3.5178502988141966E-6	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.9999751239999871	WITHOUT_CLASSIFICATION	2.4876000012883314E-5	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999956326155492	WITHOUT_CLASSIFICATION	4.367384450805672E-6	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.5140894307956958	WITHOUT_CLASSIFICATION	0.48591056920430414	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9999998193829286	WITHOUT_CLASSIFICATION	1.806170713470838E-7	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.9999751239999871	WITHOUT_CLASSIFICATION	2.4876000012883314E-5	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999956326155492	WITHOUT_CLASSIFICATION	4.367384450805672E-6	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.9998928333277332	WITHOUT_CLASSIFICATION	1.0716667226687891E-4	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.999989064817145	WITHOUT_CLASSIFICATION	1.0935182855018443E-5	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999999828544424	WITHOUT_CLASSIFICATION	1.7145557565099167E-8	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999999828544424	WITHOUT_CLASSIFICATION	1.7145557565099167E-8	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999976640253065	WITHOUT_CLASSIFICATION	2.3359746934901506E-6	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.9999967562507203	WITHOUT_CLASSIFICATION	3.2437492798624766E-6	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.9999967562507203	WITHOUT_CLASSIFICATION	3.2437492798624766E-6	DEFECT
// offset the start of the box if the box width is smaller than the // category width	WITHOUT_CLASSIFICATION	0.9999869011103578	WITHOUT_CLASSIFICATION	1.309888964217881E-5	DEFECT
// draw the body...	WITHOUT_CLASSIFICATION	0.9999452395638695	WITHOUT_CLASSIFICATION	5.476043613046676E-5	DEFECT
// draw yOutliers...	WITHOUT_CLASSIFICATION	0.9999991428545274	WITHOUT_CLASSIFICATION	8.571454725210331E-7	DEFECT
// draw farout indicators	WITHOUT_CLASSIFICATION	0.9999967991683417	WITHOUT_CLASSIFICATION	3.200831658346889E-6	DEFECT
// start from Y = rangeBase	WITHOUT_CLASSIFICATION	0.9999999179402083	WITHOUT_CLASSIFICATION	8.205979169509913E-8	DEFECT
// Process outliers. Each outlier is either added to the // appropriate outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999999994926722	WITHOUT_CLASSIFICATION	5.073278254279533E-10	DEFECT
// disable visible items optimisation - it doesn't work for this // renderer...	WITHOUT_CLASSIFICATION	0.9698452370034518	WITHOUT_CLASSIFICATION	0.030154762996548123	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.9999999833489128	WITHOUT_CLASSIFICATION	1.6651087148478995E-8	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999686804188483	WITHOUT_CLASSIFICATION	3.1319581151666025E-5	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999999684020953	WITHOUT_CLASSIFICATION	3.159790480988371E-8	DEFECT
// The first point is (x, this.baseYValue)	WITHOUT_CLASSIFICATION	0.9999993023822114	WITHOUT_CLASSIFICATION	6.976177885703024E-7	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999947189655295	WITHOUT_CLASSIFICATION	5.281034470603576E-6	DEFECT
// not just a horizontal bar but need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9999999893576301	WITHOUT_CLASSIFICATION	1.0642369918566258E-8	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999957180524236	WITHOUT_CLASSIFICATION	4.281947576408739E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999575184564599	WITHOUT_CLASSIFICATION	4.2481543540175896E-5	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999686804188483	WITHOUT_CLASSIFICATION	3.1319581151666025E-5	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999998759701801	WITHOUT_CLASSIFICATION	1.2402981989442043E-7	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999998372666437	WITHOUT_CLASSIFICATION	1.6273335639398253E-7	DEFECT
// Check if the item is the last item for the series or if it // is a NULL value and number of items > 0.  We can't draw an area for // a single point.	WITHOUT_CLASSIFICATION	0.999999992116321	WITHOUT_CLASSIFICATION	7.883679108280432E-9	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999997354357556	WITHOUT_CLASSIFICATION	2.645642444504054E-7	DEFECT
// fill the polygon	WITHOUT_CLASSIFICATION	0.9999442685716274	WITHOUT_CLASSIFICATION	5.5731428372485E-5	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999996751695855	WITHOUT_CLASSIFICATION	3.24830414419211E-7	DEFECT
// start new area when needed (see above)	WITHOUT_CLASSIFICATION	0.9999999626467491	WITHOUT_CLASSIFICATION	3.7353250906495134E-8	DEFECT
// do nothing...this is just a hook for subclasses	WITHOUT_CLASSIFICATION	0.9999980406869671	WITHOUT_CLASSIFICATION	1.9593130329284623E-6	DEFECT
// TODO getSeriesShape(n).getBounds().width / 2;	WITHOUT_CLASSIFICATION	0.9935810200143658	WITHOUT_CLASSIFICATION	0.006418979985634296	DEFECT
// TODO getSeriesShape(n).getBounds().height / 2;	WITHOUT_CLASSIFICATION	0.9871453176256909	WITHOUT_CLASSIFICATION	0.012854682374309126	DEFECT
// can't draw anything	WITHOUT_CLASSIFICATION	0.9999746824884175	WITHOUT_CLASSIFICATION	2.531751158257948E-5	DEFECT
// draw optional guide lines	WITHOUT_CLASSIFICATION	0.9999999855868118	WITHOUT_CLASSIFICATION	1.4413188236162408E-8	DEFECT
// calculate the arrow head and draw it...	WITHOUT_CLASSIFICATION	0.999772798058092	WITHOUT_CLASSIFICATION	2.2720194190799432E-4	DEFECT
// orientation is HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999877370271193	WITHOUT_CLASSIFICATION	1.2262972880748581E-5	DEFECT
//labelLinkStyle;	WITHOUT_CLASSIFICATION	0.9999975491532942	WITHOUT_CLASSIFICATION	2.4508467059154125E-6	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.9999991308772136	WITHOUT_CLASSIFICATION	8.691227863855204E-7	DEFECT
// check if either series is a degenerate case (i.e. less than 2 points)	WITHOUT_CLASSIFICATION	0.9999996211751793	WITHOUT_CLASSIFICATION	3.7882482074039045E-7	DEFECT
// check if series are disjoint (i.e. domain-spans do not overlap)	WITHOUT_CLASSIFICATION	0.9999999900498031	WITHOUT_CLASSIFICATION	9.95019684542951E-9	DEFECT
// polygon definitions	WITHOUT_CLASSIFICATION	0.9999986200395317	WITHOUT_CLASSIFICATION	1.379960468409875E-6	DEFECT
// state	WITHOUT_CLASSIFICATION	0.9999997203280234	WITHOUT_CLASSIFICATION	2.796719765050226E-7	DEFECT
// actual value set below	WITHOUT_CLASSIFICATION	0.9999999139353086	WITHOUT_CLASSIFICATION	8.60646913354747E-8	DEFECT
// if a subtrahend is not specified, assume it is zero	WITHOUT_CLASSIFICATION	0.9999999712227996	WITHOUT_CLASSIFICATION	2.8777200392216066E-8	DEFECT
// fast-forward through leading tails	WITHOUT_CLASSIFICATION	0.9999935289458806	WITHOUT_CLASSIFICATION	6.471054119396348E-6	DEFECT
// get the x and y coordinates	WITHOUT_CLASSIFICATION	0.9999997738990547	WITHOUT_CLASSIFICATION	2.2610094530622796E-7	DEFECT
// minuend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9999972520187467	WITHOUT_CLASSIFICATION	2.7479812533505017E-6	DEFECT
// subtrahend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9999982188316268	WITHOUT_CLASSIFICATION	1.7811683732927347E-6	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.999999941321632	WITHOUT_CLASSIFICATION	5.8678368122467176E-8	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9999991298057326	WITHOUT_CLASSIFICATION	8.701942673763579E-7	DEFECT
// start of algorithm	WITHOUT_CLASSIFICATION	0.9999995955805109	WITHOUT_CLASSIFICATION	4.044194890320079E-7	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9807385649444718	WITHOUT_CLASSIFICATION	0.019261435055528218	DEFECT
// deassert b_*FastForward (only matters for 1st time through loop)	WITHOUT_CLASSIFICATION	0.9999968675833367	WITHOUT_CLASSIFICATION	3.1324166634312413E-6	DEFECT
// check for intersect	WITHOUT_CLASSIFICATION	0.9999998865903075	WITHOUT_CLASSIFICATION	1.1340969252667E-7	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999998236849009	WITHOUT_CLASSIFICATION	1.7631509902791322E-7	DEFECT
// compute common denominator	WITHOUT_CLASSIFICATION	0.9999995015978543	WITHOUT_CLASSIFICATION	4.984021456658547E-7	DEFECT
// compute common deltas	WITHOUT_CLASSIFICATION	0.9999996206325505	WITHOUT_CLASSIFICATION	3.793674493698226E-7	DEFECT
// compute numerators	WITHOUT_CLASSIFICATION	0.9999999728658239	WITHOUT_CLASSIFICATION	2.7134176196871596E-8	DEFECT
// check if previously colinear	WITHOUT_CLASSIFICATION	0.9999999785687942	WITHOUT_CLASSIFICATION	2.1431205805208063E-8	DEFECT
// clear colinear points and flag	WITHOUT_CLASSIFICATION	0.999999578325207	WITHOUT_CLASSIFICATION	4.2167479294988854E-7	DEFECT
// set new starting point for the polygon	WITHOUT_CLASSIFICATION	0.9999999712807007	WITHOUT_CLASSIFICATION	2.8719299341008066E-8	DEFECT
// compute slope components	WITHOUT_CLASSIFICATION	0.9999996124995657	WITHOUT_CLASSIFICATION	3.875004342741359E-7	DEFECT
// test if both grahphs have a vertical rise at the same x-value	WITHOUT_CLASSIFICATION	0.9999999522144236	WITHOUT_CLASSIFICATION	4.778557644481109E-8	DEFECT
// check if the line segments intersect	WITHOUT_CLASSIFICATION	0.9999998922043947	WITHOUT_CLASSIFICATION	1.0779560532208588E-7	DEFECT
// compute the point of intersection	WITHOUT_CLASSIFICATION	0.9999996926053616	WITHOUT_CLASSIFICATION	3.073946383722076E-7	DEFECT
// advance minuend and subtrahend to intesect	WITHOUT_CLASSIFICATION	0.9999998201335194	WITHOUT_CLASSIFICATION	1.798664806751719E-7	DEFECT
// add intersection point to the polygon	WITHOUT_CLASSIFICATION	0.9999992205178391	WITHOUT_CLASSIFICATION	7.79482160957441E-7	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9999998498072965	WITHOUT_CLASSIFICATION	1.5019270351678463E-7	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.9999911280052772	WITHOUT_CLASSIFICATION	8.871994722789946E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999957180524236	WITHOUT_CLASSIFICATION	4.281947576408739E-5	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999885085596817	WITHOUT_CLASSIFICATION	1.1491440318248819E-5	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999995136108759	WITHOUT_CLASSIFICATION	4.86389124124746E-7	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999996751695855	WITHOUT_CLASSIFICATION	3.24830414419211E-7	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.999999941321632	WITHOUT_CLASSIFICATION	5.8678368122467176E-8	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9999991298057326	WITHOUT_CLASSIFICATION	8.701942673763579E-7	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9999998498072965	WITHOUT_CLASSIFICATION	1.5019270351678463E-7	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.9999911280052772	WITHOUT_CLASSIFICATION	8.871994722789946E-6	DEFECT
// set the maxY and minY values to intersect y-value	WITHOUT_CLASSIFICATION	0.9999984724687402	WITHOUT_CLASSIFICATION	1.5275312597958997E-6	DEFECT
// add interection point to new polygon	WITHOUT_CLASSIFICATION	0.9999955346188762	WITHOUT_CLASSIFICATION	4.465381123761367E-6	DEFECT
// advance the minuend if needed	WITHOUT_CLASSIFICATION	0.9999999678198974	WITHOUT_CLASSIFICATION	3.2180102631935144E-8	DEFECT
// advance the subtrahend if needed	WITHOUT_CLASSIFICATION	0.999999996157876	WITHOUT_CLASSIFICATION	3.8421239167442536E-9	DEFECT
// check if the final polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.9999952408439463	WITHOUT_CLASSIFICATION	4.759156053699709E-6	DEFECT
// consider last point of minuend and subtrahend for determining // positivity	WITHOUT_CLASSIFICATION	0.9999996646245779	WITHOUT_CLASSIFICATION	3.3537542211287285E-7	DEFECT
// add the last point of the minuned and subtrahend	WITHOUT_CLASSIFICATION	0.999999973125468	WITHOUT_CLASSIFICATION	2.687453206266476E-8	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999968119361351	WITHOUT_CLASSIFICATION	3.1880638648586104E-6	DEFECT
//// VISIBLE //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999958611824153	WITHOUT_CLASSIFICATION	4.138817584749826E-6	DEFECT
//// PAINT ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999989496895936	WITHOUT_CLASSIFICATION	1.0503104064598239E-6	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999923270725	WITHOUT_CLASSIFICATION	7.67292745207607E-9	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9019435220189772	WITHOUT_CLASSIFICATION	0.09805647798102274	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7579477709104321	WITHOUT_CLASSIFICATION	0.24205222908956783	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.9999993182400309	WITHOUT_CLASSIFICATION	6.817599692212334E-7	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999999926543912	WITHOUT_CLASSIFICATION	7.345608763188067E-9	DEFECT
//// OUTLINE PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999995613298828	WITHOUT_CLASSIFICATION	4.3867011721952844E-7	DEFECT
// bad axisNumber	WITHOUT_CLASSIFICATION	0.9999998969761702	WITHOUT_CLASSIFICATION	1.030238298208667E-7	DEFECT
// a Range object cannot be equal to a different object type	WITHOUT_CLASSIFICATION	0.9999958555066613	WITHOUT_CLASSIFICATION	4.1444933387888325E-6	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999388422579814	WITHOUT_CLASSIFICATION	6.1157742018699E-5	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999705174614334	WITHOUT_CLASSIFICATION	2.9482538566690607E-5	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999942473615171	WITHOUT_CLASSIFICATION	5.752638482841711E-6	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999973268954861	WITHOUT_CLASSIFICATION	2.673104513764309E-6	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.8426145646218388	DEFECT	0.1573854353781612	WITHOUT_CLASSIFICATION
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9462574131155947	DEFECT	0.05374258688440525	WITHOUT_CLASSIFICATION
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.753472938036705	DEFECT	0.246527061963295	WITHOUT_CLASSIFICATION
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.8957366938196997	DEFECT	0.10426330618030029	WITHOUT_CLASSIFICATION
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.9497505173573794	WITHOUT_CLASSIFICATION	0.050249482642620615	DEFECT
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.7093688150705032	WITHOUT_CLASSIFICATION	0.29063118492949674	DEFECT
// allowDuplicateXValues	WITHOUT_CLASSIFICATION	0.9999999362177987	WITHOUT_CLASSIFICATION	6.378220128964111E-8	DEFECT
//// STROKE ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999992568325106	WITHOUT_CLASSIFICATION	7.431674894601654E-7	DEFECT
//// OUTLINE STROKE ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998248692692	WITHOUT_CLASSIFICATION	1.7513073079307373E-7	DEFECT
//// SHAPE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999974258348933	WITHOUT_CLASSIFICATION	2.5741651067474012E-6	DEFECT
//// LEGEND ITEMS /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999995124705603	WITHOUT_CLASSIFICATION	4.875294397510027E-7	DEFECT
//// LEGEND ITEM LABEL GENERATOR //////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999976343009712	WITHOUT_CLASSIFICATION	2.365699028751746E-6	DEFECT
//// ITEM LABEL GENERATOR /////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999968184141612	WITHOUT_CLASSIFICATION	3.1815858389244884E-6	DEFECT
// FIXME:	WITHOUT_CLASSIFICATION	0.7073383929856442	WITHOUT_CLASSIFICATION	0.29266160701435573	DEFECT
//// ITEM LABEL FONT ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999983519646816	WITHOUT_CLASSIFICATION	1.6480353183864833E-6	DEFECT
//// ANNOTATIONS //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999992847279597	WITHOUT_CLASSIFICATION	7.152720403221933E-7	DEFECT
//// DRAWING //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999989486709399	WITHOUT_CLASSIFICATION	1.0513290602124189E-6	DEFECT
// DEPRECATED METHODS	WITHOUT_CLASSIFICATION	0.9999988339211934	WITHOUT_CLASSIFICATION	1.1660788067092532E-6	DEFECT
// need to handle cluster centering as a special case	WITHOUT_CLASSIFICATION	0.9999999786246957	WITHOUT_CLASSIFICATION	2.1375304210260645E-8	DEFECT
// may be negative	WITHOUT_CLASSIFICATION	0.9999991194051968	WITHOUT_CLASSIFICATION	8.805948032575196E-7	DEFECT
/*             * Legacy? Just return the original Paint.             * (this corresponds EXACTLY to how Paints used to be darkened)             */	WITHOUT_CLASSIFICATION	0.9999983886483462	WITHOUT_CLASSIFICATION	1.6113516537779576E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632867385	WITHOUT_CLASSIFICATION	1.633671326149796E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989325001374	WITHOUT_CLASSIFICATION	1.067499862707964E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999957180524236	WITHOUT_CLASSIFICATION	4.281947576408739E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999869559581777	WITHOUT_CLASSIFICATION	1.3044041822304304E-5	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999999684020953	WITHOUT_CLASSIFICATION	3.159790480988371E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999996014304935	WITHOUT_CLASSIFICATION	3.9856950646390947E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999994362561355	WITHOUT_CLASSIFICATION	5.63743864458519E-7	DEFECT
// first pass draws the shading	WITHOUT_CLASSIFICATION	0.9999994499199817	WITHOUT_CLASSIFICATION	5.500800182091701E-7	DEFECT
// last item in series, draw the lot... // set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999739759547965	WITHOUT_CLASSIFICATION	2.602404520344214E-5	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.9999945071008154	WITHOUT_CLASSIFICATION	5.49289918466302E-6	DEFECT
// return straight away if the item is not visible	WITHOUT_CLASSIFICATION	0.9999997731394169	WITHOUT_CLASSIFICATION	2.2686058304465923E-7	DEFECT
// add an entity if this info is being collected	WITHOUT_CLASSIFICATION	0.9999911851567644	WITHOUT_CLASSIFICATION	8.814843235509942E-6	DEFECT
//  Get height adjustment based on stack and translate to Java2D values	WITHOUT_CLASSIFICATION	0.9999996770966597	WITHOUT_CLASSIFICATION	3.229033403872922E-7	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.999977861493603	WITHOUT_CLASSIFICATION	2.21385063969065E-5	DEFECT
//  On first pass render the areas, line and outlines	WITHOUT_CLASSIFICATION	0.9999927085821921	WITHOUT_CLASSIFICATION	7.291417807940488E-6	DEFECT
// start from previous height (ph1)	WITHOUT_CLASSIFICATION	0.9999999062663192	WITHOUT_CLASSIFICATION	9.373368090610098E-8	DEFECT
// should not get here	WITHOUT_CLASSIFICATION	0.999988789577864	WITHOUT_CLASSIFICATION	1.121042213598581E-5	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.999999910335201	WITHOUT_CLASSIFICATION	8.966479896940651E-8	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999994204435897	WITHOUT_CLASSIFICATION	5.795564102333711E-7	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.9999967515443544	WITHOUT_CLASSIFICATION	3.2484556456482096E-6	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.9999930377381097	WITHOUT_CLASSIFICATION	6.962261890246943E-6	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.999980278100997	WITHOUT_CLASSIFICATION	1.9721899003063477E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999869559581777	WITHOUT_CLASSIFICATION	1.3044041822304304E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999575184564599	WITHOUT_CLASSIFICATION	4.2481543540175896E-5	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.9999999833489128	WITHOUT_CLASSIFICATION	1.6651087148478995E-8	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999947189655295	WITHOUT_CLASSIFICATION	5.281034470603576E-6	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999998372666437	WITHOUT_CLASSIFICATION	1.6273335639398253E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999997354357556	WITHOUT_CLASSIFICATION	2.645642444504054E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999997354357556	WITHOUT_CLASSIFICATION	2.645642444504054E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999998160195993	WITHOUT_CLASSIFICATION	1.83980400612404E-7	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9999998373276399	WITHOUT_CLASSIFICATION	1.626723602171892E-7	DEFECT
// The first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999990566035892	WITHOUT_CLASSIFICATION	9.433964107485156E-7	DEFECT
//  Fill the polygon	WITHOUT_CLASSIFICATION	0.9997896143277372	WITHOUT_CLASSIFICATION	2.1038567226284156E-4	DEFECT
//  Draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999993670429523	WITHOUT_CLASSIFICATION	6.32957047691391E-7	DEFECT
// first pass draws the background (lines, for instance)	WITHOUT_CLASSIFICATION	0.9999995616550044	WITHOUT_CLASSIFICATION	4.383449955456399E-7	DEFECT
//labelLinkPaint;	WITHOUT_CLASSIFICATION	0.9999994917128983	WITHOUT_CLASSIFICATION	5.082871017366155E-7	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999983134662453	WITHOUT_CLASSIFICATION	1.6865337546547646E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989325001374	WITHOUT_CLASSIFICATION	1.067499862707964E-6	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999999431629089	WITHOUT_CLASSIFICATION	5.683709114690842E-8	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999995136108759	WITHOUT_CLASSIFICATION	4.86389124124746E-7	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.9999945071008154	WITHOUT_CLASSIFICATION	5.49289918466302E-6	DEFECT
// Add points from last series to complete the base of the // polygon	WITHOUT_CLASSIFICATION	0.9999998897253234	WITHOUT_CLASSIFICATION	1.1027467665408416E-7	DEFECT
// On second pass render shapes and collect entity and tooltip // information	WITHOUT_CLASSIFICATION	0.9999204169913911	WITHOUT_CLASSIFICATION	7.958300860881384E-5	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999991836125558	WITHOUT_CLASSIFICATION	8.163874442816197E-7	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.9999964690450371	WITHOUT_CLASSIFICATION	3.5309549629513807E-6	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999997326403535	WITHOUT_CLASSIFICATION	2.673596464967602E-7	DEFECT
// Collect points	WITHOUT_CLASSIFICATION	0.9999997218853433	WITHOUT_CLASSIFICATION	2.781146567578275E-7	DEFECT
// construct path	WITHOUT_CLASSIFICATION	0.9999999305720477	WITHOUT_CLASSIFICATION	6.942795223507197E-8	DEFECT
// we need at least two points to draw something	WITHOUT_CLASSIFICATION	0.9999994836903956	WITHOUT_CLASSIFICATION	5.163096044238563E-7	DEFECT
// we need at least 3 points to spline. Draw simple line // for two points	WITHOUT_CLASSIFICATION	0.9999999021891669	WITHOUT_CLASSIFICATION	9.781083312875603E-8	DEFECT
// construct spline // number of points // Newton form coefficients // x-coordinates of nodes	WITHOUT_CLASSIFICATION	0.9999999996395978	WITHOUT_CLASSIFICATION	3.60402202922957E-10	DEFECT
// note that a[0]=a[np-1]=0	WITHOUT_CLASSIFICATION	0.9999997629877174	WITHOUT_CLASSIFICATION	2.370122825906253E-7	DEFECT
// loop over intervals between nodes	WITHOUT_CLASSIFICATION	0.9999999510253499	WITHOUT_CLASSIFICATION	4.8974650126442763E-8	DEFECT
// we're running on JRE 1.3.1 so this is the best we have...	WITHOUT_CLASSIFICATION	0.999987671923501	WITHOUT_CLASSIFICATION	1.2328076499023641E-5	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999999343351581	WITHOUT_CLASSIFICATION	6.56648418372587E-8	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999904913094316	WITHOUT_CLASSIFICATION	9.508690568417551E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999988022162875	WITHOUT_CLASSIFICATION	1.1977837125930448E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999988022162875	WITHOUT_CLASSIFICATION	1.1977837125930448E-6	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999999956099768	WITHOUT_CLASSIFICATION	4.390023216166321E-9	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999999956099768	WITHOUT_CLASSIFICATION	4.390023216166321E-9	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9999802062504718	WITHOUT_CLASSIFICATION	1.9793749528274165E-5	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999954899338744	WITHOUT_CLASSIFICATION	4.510066125588921E-6	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999999020795598	WITHOUT_CLASSIFICATION	9.792044028742844E-8	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999999020795598	WITHOUT_CLASSIFICATION	9.792044028742844E-8	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999998443308242	WITHOUT_CLASSIFICATION	1.5566917572576532E-7	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999998443308242	WITHOUT_CLASSIFICATION	1.5566917572576532E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999993717191491	WITHOUT_CLASSIFICATION	6.282808508989739E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999993717191491	WITHOUT_CLASSIFICATION	6.282808508989739E-7	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9998860540886483	WITHOUT_CLASSIFICATION	1.1394591135170619E-4	DEFECT
// map a key to the default group	WITHOUT_CLASSIFICATION	0.9999997666310875	WITHOUT_CLASSIFICATION	2.3336891263549658E-7	DEFECT
// Add last point @ y=0 for fillPath and close path	WITHOUT_CLASSIFICATION	0.9999998603768928	WITHOUT_CLASSIFICATION	1.3962310729947858E-7	DEFECT
// fill under the curve...	WITHOUT_CLASSIFICATION	0.9999835399282881	WITHOUT_CLASSIFICATION	1.6460071711882866E-5	DEFECT
// then draw the line...	WITHOUT_CLASSIFICATION	0.999974524569318	WITHOUT_CLASSIFICATION	2.5475430681965727E-5	DEFECT
// reset points vector	WITHOUT_CLASSIFICATION	0.9999998600084771	WITHOUT_CLASSIFICATION	1.399915229500431E-7	DEFECT
/*      factorization and forward substitution */	WITHOUT_CLASSIFICATION	0.9999998495987115	WITHOUT_CLASSIFICATION	1.5040128859814815E-7	DEFECT
// now draw the real shape	WITHOUT_CLASSIFICATION	0.9999999288608336	WITHOUT_CLASSIFICATION	7.113916638906258E-8	DEFECT
// should never get here	WITHOUT_CLASSIFICATION	0.9999989485900942	WITHOUT_CLASSIFICATION	1.0514099058371246E-6	DEFECT
// 'plot' : just retain reference, not a deep copy	WITHOUT_CLASSIFICATION	0.9999998476023237	WITHOUT_CLASSIFICATION	1.5239767625231293E-7	DEFECT
// just the domain axis...	WITHOUT_CLASSIFICATION	0.9999999344682562	WITHOUT_CLASSIFICATION	6.55317438335719E-8	DEFECT
// just the range axis...	WITHOUT_CLASSIFICATION	0.9999999196957007	WITHOUT_CLASSIFICATION	8.030429938674496E-8	DEFECT
// get the label position..	WITHOUT_CLASSIFICATION	0.9999974853985402	WITHOUT_CLASSIFICATION	2.514601459728965E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999869559581777	WITHOUT_CLASSIFICATION	1.3044041822304304E-5	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999995136108759	WITHOUT_CLASSIFICATION	4.86389124124746E-7	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999575184564599	WITHOUT_CLASSIFICATION	4.2481543540175896E-5	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999947189655295	WITHOUT_CLASSIFICATION	5.281034470603576E-6	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999998372666437	WITHOUT_CLASSIFICATION	1.6273335639398253E-7	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999968119361351	WITHOUT_CLASSIFICATION	3.1880638648586104E-6	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9999998373276399	WITHOUT_CLASSIFICATION	1.626723602171892E-7	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9999918491266164	WITHOUT_CLASSIFICATION	8.150873383540747E-6	DEFECT
//this handles the need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9999999904638704	WITHOUT_CLASSIFICATION	9.5361296162897E-9	DEFECT
// calculate the step point	WITHOUT_CLASSIFICATION	0.999999943016366	WITHOUT_CLASSIFICATION	5.698363407780278E-8	DEFECT
//this handles the need to perform a 'step'. // calculate the step point	WITHOUT_CLASSIFICATION	0.9999999981623386	WITHOUT_CLASSIFICATION	1.8376613937246574E-9	DEFECT
// submit this data item as a candidate for the crosshair point	WITHOUT_CLASSIFICATION	0.999999090936103	WITHOUT_CLASSIFICATION	9.090638970555521E-7	DEFECT
// create a new area polygon for the series	WITHOUT_CLASSIFICATION	0.9999995469541857	WITHOUT_CLASSIFICATION	4.530458142794237E-7	DEFECT
// the first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999980631573224	WITHOUT_CLASSIFICATION	1.936842677637563E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989325001374	WITHOUT_CLASSIFICATION	1.067499862707964E-6	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999956011082	WITHOUT_CLASSIFICATION	4.398891825549099E-9	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.999980278100997	WITHOUT_CLASSIFICATION	1.9721899003063477E-5	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9999999658270983	WITHOUT_CLASSIFICATION	3.417290165512569E-8	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999932104504348	WITHOUT_CLASSIFICATION	6.789549565150983E-6	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.999999812985516	WITHOUT_CLASSIFICATION	1.8701448394437007E-7	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.99999276012903	WITHOUT_CLASSIFICATION	7.239870969899061E-6	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999997354357556	WITHOUT_CLASSIFICATION	2.645642444504054E-7	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999996751695855	WITHOUT_CLASSIFICATION	3.24830414419211E-7	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999999926543912	WITHOUT_CLASSIFICATION	7.345608763188067E-9	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.9999999935307918	WITHOUT_CLASSIFICATION	6.4692081900702444E-9	DEFECT
// we make the clip region slightly larger than the // dataArea so that the clipped edges don't show lines // on the chart	WITHOUT_CLASSIFICATION	0.9997958034547062	WITHOUT_CLASSIFICATION	2.0419654529384393E-4	DEFECT
// no change	WITHOUT_CLASSIFICATION	0.9999999904746223	WITHOUT_CLASSIFICATION	9.525377770324284E-9	DEFECT
// here we use BooleanUtilities to remain compatible with JDKs < 1.4	WITHOUT_CLASSIFICATION	0.9999994899205704	WITHOUT_CLASSIFICATION	5.100794295085416E-7	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.9999999423126641	WITHOUT_CLASSIFICATION	5.768733577812193E-8	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999988646582395	WITHOUT_CLASSIFICATION	1.135341760472743E-6	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999983134662453	WITHOUT_CLASSIFICATION	1.6865337546547646E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989325001374	WITHOUT_CLASSIFICATION	1.067499862707964E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999995136108759	WITHOUT_CLASSIFICATION	4.86389124124746E-7	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999999913520298	WITHOUT_CLASSIFICATION	8.6479703316213E-9	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999947189655295	WITHOUT_CLASSIFICATION	5.281034470603576E-6	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999991836125558	WITHOUT_CLASSIFICATION	8.163874442816197E-7	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999997326403535	WITHOUT_CLASSIFICATION	2.673596464967602E-7	DEFECT
// we are starting a new series path	WITHOUT_CLASSIFICATION	0.9999999318904557	WITHOUT_CLASSIFICATION	6.810954427402299E-8	DEFECT
// only draw a line if the gap between the current and // previous data point is within the threshold	WITHOUT_CLASSIFICATION	0.9999999458052736	WITHOUT_CLASSIFICATION	5.419472632901351E-8	DEFECT
// we needed to get this far even for invisible items, to ensure that // seriesPath updates happened, but now there is nothing more we need // to do for non-visible items...	WITHOUT_CLASSIFICATION	0.9999669468040638	WITHOUT_CLASSIFICATION	3.3053195936098404E-5	DEFECT
// this method must be overridden if you want to display images	WITHOUT_CLASSIFICATION	0.9999998476494728	WITHOUT_CLASSIFICATION	1.5235052725095963E-7	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999981564660215	WITHOUT_CLASSIFICATION	1.843533978541314E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999996763439162	WITHOUT_CLASSIFICATION	3.236560838141447E-7	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999979782299917	WITHOUT_CLASSIFICATION	2.0217700083126876E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999957180524236	WITHOUT_CLASSIFICATION	4.281947576408739E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999957180524236	WITHOUT_CLASSIFICATION	4.281947576408739E-5	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999981564660215	WITHOUT_CLASSIFICATION	1.843533978541314E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // PROTECTED METHODS // These provide the opportunity to subclass the standard renderer and // create custom effects. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999978719840915	WITHOUT_CLASSIFICATION	2.128015908471433E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999996763439162	WITHOUT_CLASSIFICATION	3.236560838141447E-7	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999979782299917	WITHOUT_CLASSIFICATION	2.0217700083126876E-6	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.9999995984421834	WITHOUT_CLASSIFICATION	4.0155781660510157E-7	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.9999998658824234	WITHOUT_CLASSIFICATION	1.341175766583261E-7	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.9999998658824234	WITHOUT_CLASSIFICATION	1.341175766583261E-7	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9999314815485524	WITHOUT_CLASSIFICATION	6.851845144762143E-5	DEFECT
// yOutliers can be null, but we'd prefer it to be an empty list in // that case...	WITHOUT_CLASSIFICATION	0.9999848643970141	WITHOUT_CLASSIFICATION	1.513560298598042E-5	DEFECT
/* From outlier array sort out which are outliers and put these into         * an arraylist. If there are any farouts, set the flag on the         * OutlierListCollection         */	WITHOUT_CLASSIFICATION	0.9999999908628492	WITHOUT_CLASSIFICATION	9.137150848447301E-9	DEFECT
// draw yOutliers	WITHOUT_CLASSIFICATION	0.9999999389981429	WITHOUT_CLASSIFICATION	6.100185707479997E-8	DEFECT
// draw outliers	WITHOUT_CLASSIFICATION	0.9999999580841857	WITHOUT_CLASSIFICATION	4.191581418860466E-8	DEFECT
// draw farout	WITHOUT_CLASSIFICATION	0.9999979273660684	WITHOUT_CLASSIFICATION	2.072633931582182E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632867385	WITHOUT_CLASSIFICATION	1.633671326149796E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632867385	WITHOUT_CLASSIFICATION	1.633671326149796E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999957180524236	WITHOUT_CLASSIFICATION	4.281947576408739E-5	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999947189655295	WITHOUT_CLASSIFICATION	5.281034470603576E-6	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9999314815485524	WITHOUT_CLASSIFICATION	6.851845144762143E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999982086905772	WITHOUT_CLASSIFICATION	1.7913094228368105E-6	DEFECT
// Process outliers. Each outlier is either added to the appropriate // outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999999986543899	WITHOUT_CLASSIFICATION	1.345609988355902E-9	DEFECT
// for item labels, we have a special case because there is the // possibility to draw (a) the regular item label near to just the // upper y-value, or (b) the regular item label near the upper y-value // PLUS an additional item label near the lower y-value.	WITHOUT_CLASSIFICATION	0.9999999996254513	WITHOUT_CLASSIFICATION	3.745486361335532E-10	DEFECT
// If null, don't draw line => then delegate to parent	WITHOUT_CLASSIFICATION	0.9999941886281745	WITHOUT_CLASSIFICATION	5.8113718254770165E-6	DEFECT
// If null, don't draw line at all	WITHOUT_CLASSIFICATION	0.9999379363513027	WITHOUT_CLASSIFICATION	6.206364869738997E-5	DEFECT
// Now split the segment as needed	WITHOUT_CLASSIFICATION	0.9999999594337685	WITHOUT_CLASSIFICATION	4.056623155104873E-8	DEFECT
// If the segment must be splitted, insert a new point // Strict test forces to have real segments (not 2 equal points) // and avoids division by 0	WITHOUT_CLASSIFICATION	0.9999999663401176	WITHOUT_CLASSIFICATION	3.36598824932516E-8	DEFECT
// If the line is not wrapping, then parent is OK	WITHOUT_CLASSIFICATION	0.9999146660869487	WITHOUT_CLASSIFICATION	8.533391305130673E-5	DEFECT
// calculate the highest volume in the dataset...	WITHOUT_CLASSIFICATION	0.9999944594849353	WITHOUT_CLASSIFICATION	5.540515064778028E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999982086905772	WITHOUT_CLASSIFICATION	1.7913094228368105E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999982086905772	WITHOUT_CLASSIFICATION	1.7913094228368105E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999982086905772	WITHOUT_CLASSIFICATION	1.7913094228368105E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999982086905772	WITHOUT_CLASSIFICATION	1.7913094228368105E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999869559581777	WITHOUT_CLASSIFICATION	1.3044041822304304E-5	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999993717191491	WITHOUT_CLASSIFICATION	6.282808508989739E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999932104504348	WITHOUT_CLASSIFICATION	6.789549565150983E-6	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999999987110285	WITHOUT_CLASSIFICATION	1.2889714637455036E-9	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999991836125558	WITHOUT_CLASSIFICATION	8.163874442816197E-7	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.9999964690450371	WITHOUT_CLASSIFICATION	3.5309549629513807E-6	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999997326403535	WITHOUT_CLASSIFICATION	2.673596464967602E-7	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.9999995486400095	WITHOUT_CLASSIFICATION	4.5135999048318434E-7	DEFECT
// The split may occur in either x splitted segments, if any, but // not in both	WITHOUT_CLASSIFICATION	0.9999942424185734	WITHOUT_CLASSIFICATION	5.757581426659284E-6	DEFECT
// the x value is not within the axis range	WITHOUT_CLASSIFICATION	0.9998554040131343	WITHOUT_CLASSIFICATION	1.4459598686570156E-4	DEFECT
// not a HighLowDataset, so just draw a line connecting this point // with the previous point...	WITHOUT_CLASSIFICATION	0.9999998978066029	WITHOUT_CLASSIFICATION	1.0219339715821765E-7	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.9999999984391583	WITHOUT_CLASSIFICATION	1.560841578193691E-9	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.9999999984391583	WITHOUT_CLASSIFICATION	1.560841578193691E-9	DEFECT
// draw the error bar for the x-interval	WITHOUT_CLASSIFICATION	0.9999983794830107	WITHOUT_CLASSIFICATION	1.6205169892108704E-6	DEFECT
// draw the error bar for the y-interval	WITHOUT_CLASSIFICATION	0.9999972865519878	WITHOUT_CLASSIFICATION	2.7134480122653655E-6	DEFECT
//domainGridlinePaint;	WITHOUT_CLASSIFICATION	0.9999991811627761	WITHOUT_CLASSIFICATION	8.188372239758877E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989325001374	WITHOUT_CLASSIFICATION	1.067499862707964E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999957180524236	WITHOUT_CLASSIFICATION	4.281947576408739E-5	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999923270725	WITHOUT_CLASSIFICATION	7.67292745207607E-9	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999869559581777	WITHOUT_CLASSIFICATION	1.3044041822304304E-5	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999595988727	WITHOUT_CLASSIFICATION	4.040112741692382E-8	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999999689315658	WITHOUT_CLASSIFICATION	3.106843405615299E-8	DEFECT
// handle item label drawing, now that we know all the bars have // been drawn...	WITHOUT_CLASSIFICATION	0.9999963496000903	WITHOUT_CLASSIFICATION	3.6503999096301707E-6	DEFECT
// if the renderer isn't assigned to a plot, then we don't have a // dataset...	WITHOUT_CLASSIFICATION	0.9999220371206384	WITHOUT_CLASSIFICATION	7.79628793614968E-5	DEFECT
//initalize xValues, yValues, and zValues arrays.	WITHOUT_CLASSIFICATION	0.999995213617942	WITHOUT_CLASSIFICATION	4.78638205799835E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989325001374	WITHOUT_CLASSIFICATION	1.067499862707964E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999957180524236	WITHOUT_CLASSIFICATION	4.281947576408739E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999996017501482	WITHOUT_CLASSIFICATION	3.9824985179223825E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999996017501482	WITHOUT_CLASSIFICATION	3.9824985179223825E-6	DEFECT
// handle positive value	WITHOUT_CLASSIFICATION	0.9999997717951096	WITHOUT_CLASSIFICATION	2.2820489038305635E-7	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999997929976909	WITHOUT_CLASSIFICATION	2.070023091082377E-7	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999974593388591	WITHOUT_CLASSIFICATION	2.5406611409111615E-6	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999974593388591	WITHOUT_CLASSIFICATION	2.5406611409111615E-6	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999997606676652	WITHOUT_CLASSIFICATION	2.3933233485921514E-7	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999992431720478	WITHOUT_CLASSIFICATION	7.568279521341936E-7	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999999020795598	WITHOUT_CLASSIFICATION	9.792044028742844E-8	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9998860540886483	WITHOUT_CLASSIFICATION	1.1394591135170619E-4	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.999977861493603	WITHOUT_CLASSIFICATION	2.21385063969065E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999982086905772	WITHOUT_CLASSIFICATION	1.7913094228368105E-6	DEFECT
// is there an alignment adjustment to be made?	WITHOUT_CLASSIFICATION	0.9999716204106799	WITHOUT_CLASSIFICATION	2.8379589320192246E-5	DEFECT
// update the crosshair point	WITHOUT_CLASSIFICATION	0.9999999495174776	WITHOUT_CLASSIFICATION	5.0482522368545514E-8	DEFECT
// calculate the maximum allowed candle width from the axis...	WITHOUT_CLASSIFICATION	0.9999997538548053	WITHOUT_CLASSIFICATION	2.461451946994552E-7	DEFECT
// Absolute value, since the relative x // positions are reversed for horizontal orientation	WITHOUT_CLASSIFICATION	0.9999999936472783	WITHOUT_CLASSIFICATION	6.352721799283616E-9	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999982086905772	WITHOUT_CLASSIFICATION	1.7913094228368105E-6	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999996450517143	WITHOUT_CLASSIFICATION	3.5494828570600123E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999957180524236	WITHOUT_CLASSIFICATION	4.281947576408739E-5	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999981564660215	WITHOUT_CLASSIFICATION	1.843533978541314E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999996763439162	WITHOUT_CLASSIFICATION	3.236560838141447E-7	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999996017501482	WITHOUT_CLASSIFICATION	3.9824985179223825E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999996017501482	WITHOUT_CLASSIFICATION	3.9824985179223825E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999996017501482	WITHOUT_CLASSIFICATION	3.9824985179223825E-6	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999979782299917	WITHOUT_CLASSIFICATION	2.0217700083126876E-6	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9807385649444718	WITHOUT_CLASSIFICATION	0.019261435055528218	DEFECT
// --- DEPRECATED CODE ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999990242700373	WITHOUT_CLASSIFICATION	9.75729962766149E-7	DEFECT
// create the temporary directory if it doesn't exist	WITHOUT_CLASSIFICATION	0.9999999452469167	WITHOUT_CLASSIFICATION	5.4753083216424016E-8	DEFECT
//  Add chart to deletion list in session	WITHOUT_CLASSIFICATION	0.9999999905360824	WITHOUT_CLASSIFICATION	9.463917730688675E-9	DEFECT
//  Set HTTP headers	WITHOUT_CLASSIFICATION	0.9999994101794573	WITHOUT_CLASSIFICATION	5.898205428431142E-7	DEFECT
//  Replace ".." with "" //  This is to prevent access to the rest of the file system	WITHOUT_CLASSIFICATION	0.99999484094485	WITHOUT_CLASSIFICATION	5.159055149964684E-6	DEFECT
//  Check the file exists	WITHOUT_CLASSIFICATION	0.9999996747594652	WITHOUT_CLASSIFICATION	3.2524053486175194E-7	DEFECT
//  Serve it up	WITHOUT_CLASSIFICATION	0.9999984856180674	WITHOUT_CLASSIFICATION	1.5143819326074793E-6	DEFECT
// draw the block without collecting entities	WITHOUT_CLASSIFICATION	0.9999994981090373	WITHOUT_CLASSIFICATION	5.018909626357186E-7	DEFECT
// RectangleInsets is immutable => same reference in clone OK	WITHOUT_CLASSIFICATION	0.9999916494866395	WITHOUT_CLASSIFICATION	8.350513360477376E-6	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.9999998574123157	WITHOUT_CLASSIFICATION	1.425876843766398E-7	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.9999998574123157	WITHOUT_CLASSIFICATION	1.425876843766398E-7	DEFECT
// determine the space required for the axis	WITHOUT_CLASSIFICATION	0.9999997234222883	WITHOUT_CLASSIFICATION	2.765777117186286E-7	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.9999995486400095	WITHOUT_CLASSIFICATION	4.5135999048318434E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999888228144	WITHOUT_CLASSIFICATION	1.1177185716031072E-8	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.999979852601156	WITHOUT_CLASSIFICATION	2.0147398843993455E-5	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.999979852601156	WITHOUT_CLASSIFICATION	2.0147398843993455E-5	DEFECT
// no need to instantiate this class   	WITHOUT_CLASSIFICATION	0.9999978326048703	WITHOUT_CLASSIFICATION	2.1673951296503657E-6	DEFECT
//yAdj = -descent - leading + (float) bounds.getHeight();	WITHOUT_CLASSIFICATION	0.9999991903222911	WITHOUT_CLASSIFICATION	8.096777087974804E-7	DEFECT
// svgClass will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999993845771714	WITHOUT_CLASSIFICATION	6.154228285224157E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999888228144	WITHOUT_CLASSIFICATION	1.1177185716031072E-8	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999888228144	WITHOUT_CLASSIFICATION	1.1177185716031072E-8	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999888228144	WITHOUT_CLASSIFICATION	1.1177185716031072E-8	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999915725323	WITHOUT_CLASSIFICATION	8.427467749849676E-9	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.999979852601156	WITHOUT_CLASSIFICATION	2.0147398843993455E-5	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9999999700704278	WITHOUT_CLASSIFICATION	2.9929572168262724E-8	DEFECT
// update (x1, y1), (x2, y2) and f1 and f2 using intersections // then recheck	WITHOUT_CLASSIFICATION	0.999938660800719	WITHOUT_CLASSIFICATION	6.133919928104235E-5	DEFECT
// first point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999999854617987	WITHOUT_CLASSIFICATION	1.4538201227687627E-8	DEFECT
// second point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999999811715437	WITHOUT_CLASSIFICATION	1.88284563750959E-8	DEFECT
// the line is visible - if it wasn't, we'd have // returned false from within the while loop above	WITHOUT_CLASSIFICATION	0.9999999058343972	WITHOUT_CLASSIFICATION	9.416560279551276E-8	DEFECT
/*                 * Lots can go wrong while fiddling with Images, Color Models                 * & such!  If anything at all goes awry, just return the original                 * TexturePaint.  (TexturePaint's are immutable anyway, so no harm                 * done)                 */	WITHOUT_CLASSIFICATION	0.9999999980180011	WITHOUT_CLASSIFICATION	1.981999007472435E-9	DEFECT
/* Placeholder */	WITHOUT_CLASSIFICATION	0.9999973875354415	WITHOUT_CLASSIFICATION	2.612464558479062E-6	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9984810005421644	WITHOUT_CLASSIFICATION	0.0015189994578355941	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9984810005421644	WITHOUT_CLASSIFICATION	0.0015189994578355941	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9984810005421644	WITHOUT_CLASSIFICATION	0.0015189994578355941	DEFECT
/* (pix-buffer is large enough for all pixels of one row) */	WITHOUT_CLASSIFICATION	0.9999821396210541	WITHOUT_CLASSIFICATION	1.786037894595729E-5	DEFECT
// RGB (+ optional Alpha which we leave // unchanged)	WITHOUT_CLASSIFICATION	0.9999998263841683	WITHOUT_CLASSIFICATION	1.7361583160630042E-7	DEFECT
// Red // Green // Blue. Now map computed colour to // nearest in Palette...	WITHOUT_CLASSIFICATION	0.9998814585538833	WITHOUT_CLASSIFICATION	1.1854144611674544E-4	DEFECT
// Red // Green // Blue	WITHOUT_CLASSIFICATION	0.9999834857318889	WITHOUT_CLASSIFICATION	1.651426811113935E-5	DEFECT
/* Ignore alpha-channel -> */	WITHOUT_CLASSIFICATION	0.9999999984413215	WITHOUT_CLASSIFICATION	1.558678490725814E-9	DEFECT
// <- this is the code that actually COPIES the pixels	WITHOUT_CLASSIFICATION	0.9985112658994645	WITHOUT_CLASSIFICATION	0.0014887341005356053	DEFECT
/*         * Buffered Images may have properties, but NEVER disclose them!         * Nevertheless, just in case someone implements getPropertyNames()         * one day...         */	WITHOUT_CLASSIFICATION	0.9999970720100781	WITHOUT_CLASSIFICATION	2.927989921932941E-6	DEFECT
// ALWAYS null	WITHOUT_CLASSIFICATION	0.9999850512604719	WITHOUT_CLASSIFICATION	1.4948739528200005E-5	DEFECT
// all methods are static, no need to instantiate	WITHOUT_CLASSIFICATION	0.9999999776019014	WITHOUT_CLASSIFICATION	2.2398098592377046E-8	DEFECT
// substitute the filtered URL list	WITHOUT_CLASSIFICATION	0.9999999917547245	WITHOUT_CLASSIFICATION	8.245275509245089E-9	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.9999999224453258	WITHOUT_CLASSIFICATION	7.755467422115508E-8	DEFECT
// horizontal pass	WITHOUT_CLASSIFICATION	0.9999961460185475	WITHOUT_CLASSIFICATION	3.853981452520884E-6	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9999999898929063	WITHOUT_CLASSIFICATION	1.0107093618669605E-8	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9999999898929063	WITHOUT_CLASSIFICATION	1.0107093618669605E-8	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999997044515918	WITHOUT_CLASSIFICATION	2.955484081557429E-7	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999997044515918	WITHOUT_CLASSIFICATION	2.955484081557429E-7	DEFECT
// vertical pass	WITHOUT_CLASSIFICATION	0.9999984031720344	WITHOUT_CLASSIFICATION	1.5968279657032646E-6	DEFECT
//get the coordinates of the original GradientPaint	WITHOUT_CLASSIFICATION	0.9999999858585963	WITHOUT_CLASSIFICATION	1.4141403760724801E-8	DEFECT
//get the coordinates of the shape that is to be filled	WITHOUT_CLASSIFICATION	0.9999993617242966	WITHOUT_CLASSIFICATION	6.382757034218896E-7	DEFECT
//reserve variables to store the coordinates of the resulting GradientPaint	WITHOUT_CLASSIFICATION	0.999999999471718	WITHOUT_CLASSIFICATION	5.282820266501692E-10	DEFECT
//start point is upper left corner	WITHOUT_CLASSIFICATION	0.9999968901950421	WITHOUT_CLASSIFICATION	3.1098049579394175E-6	DEFECT
//end point is lower right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9999994950124096	WITHOUT_CLASSIFICATION	5.049875904948541E-7	DEFECT
//start point is lower left right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9999998283335538	WITHOUT_CLASSIFICATION	1.7166644621219276E-7	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.9999998377941586	WITHOUT_CLASSIFICATION	1.6220584131574733E-7	DEFECT
//end point is either lower left corner --> vertical gradient //or end point is upper right corner --> horizontal gradient	WITHOUT_CLASSIFICATION	0.9999993504970501	WITHOUT_CLASSIFICATION	6.495029498797944E-7	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.999999870123631	WITHOUT_CLASSIFICATION	1.2987636898254837E-7	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999997640898183	WITHOUT_CLASSIFICATION	2.3591018168407256E-7	DEFECT
// CASE 1 : Comparing to another ComparableObjectItem object // ---------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999995379625746	WITHOUT_CLASSIFICATION	4.620374253982874E-7	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.999988488229933	WITHOUT_CLASSIFICATION	1.1511770066992188E-5	DEFECT
// consider these to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999985179828511	WITHOUT_CLASSIFICATION	1.4820171488970173E-6	DEFECT
// the row may not have an entry for this key, in which case the // return value is null	WITHOUT_CLASSIFICATION	0.9994365644080594	WITHOUT_CLASSIFICATION	5.634355919406139E-4	DEFECT
// check that the column key is defined in the 2D structure	WITHOUT_CLASSIFICATION	0.9999999953728821	WITHOUT_CLASSIFICATION	4.627118006591805E-9	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9999968178233076	WITHOUT_CLASSIFICATION	3.1821766924347002E-6	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9999968178233076	WITHOUT_CLASSIFICATION	3.1821766924347002E-6	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.9999991867946662	WITHOUT_CLASSIFICATION	8.132053337507328E-7	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.9999991867946662	WITHOUT_CLASSIFICATION	8.132053337507328E-7	DEFECT
//int columnIndex = getColumnIndex(columnKey);	WITHOUT_CLASSIFICATION	0.9999475206813353	WITHOUT_CLASSIFICATION	5.2479318664576785E-5	DEFECT
// for the keys, a shallow copy should be fine because keys // should be immutable...	WITHOUT_CLASSIFICATION	0.9999787451574855	WITHOUT_CLASSIFICATION	2.1254842514489327E-5	DEFECT
// but the row data requires a deep copy	WITHOUT_CLASSIFICATION	0.9999785798358727	WITHOUT_CLASSIFICATION	2.1420164127283523E-5	DEFECT
// already know 'a' isn't null	WITHOUT_CLASSIFICATION	0.999985481690833	WITHOUT_CLASSIFICATION	1.451830916705035E-5	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999952246053	WITHOUT_CLASSIFICATION	4.775394814779565E-9	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999952246053	WITHOUT_CLASSIFICATION	4.775394814779565E-9	DEFECT
// this will include the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.9996705305769022	WITHOUT_CLASSIFICATION	3.294694230977396E-4	DEFECT
// this includes the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.9998829983975116	WITHOUT_CLASSIFICATION	1.1700160248835643E-4	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.999995946213465	WITHOUT_CLASSIFICATION	4.0537865350417155E-6	DEFECT
// set up the category names...	WITHOUT_CLASSIFICATION	0.9999996444762095	WITHOUT_CLASSIFICATION	3.555237904515655E-7	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999536049763	WITHOUT_CLASSIFICATION	4.639502364563498E-8	DEFECT
// fetch the value...	WITHOUT_CLASSIFICATION	0.9999949792863579	WITHOUT_CLASSIFICATION	5.020713642066739E-6	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9999835220005687	WITHOUT_CLASSIFICATION	1.6477999431232128E-5	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9999835220005687	WITHOUT_CLASSIFICATION	1.6477999431232128E-5	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.9999807679155925	WITHOUT_CLASSIFICATION	1.9232084407365447E-5	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.9999987392906386	WITHOUT_CLASSIFICATION	1.2607093613571813E-6	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.9999987392906386	WITHOUT_CLASSIFICATION	1.2607093613571813E-6	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999989581330476	WITHOUT_CLASSIFICATION	1.0418669524373446E-6	DEFECT
// Find min, max for the x and y axes	WITHOUT_CLASSIFICATION	0.9999977990092828	WITHOUT_CLASSIFICATION	2.2009907171859503E-6	DEFECT
// Determine the cell size	WITHOUT_CLASSIFICATION	0.9999999976473609	WITHOUT_CLASSIFICATION	2.3526390302277235E-9	DEFECT
// Generate the grid	WITHOUT_CLASSIFICATION	0.9999998925645798	WITHOUT_CLASSIFICATION	1.0743542028007192E-7	DEFECT
// Map the nongrid data into the new regular grid	WITHOUT_CLASSIFICATION	0.9999998226247699	WITHOUT_CLASSIFICATION	1.773752300244353E-7	DEFECT
// scale by the inverse of distance^power	WITHOUT_CLASSIFICATION	0.9999999979476424	WITHOUT_CLASSIFICATION	2.0523576828404743E-9	DEFECT
//remove distance of the sum	WITHOUT_CLASSIFICATION	0.9999998866157362	WITHOUT_CLASSIFICATION	1.1338426373736289E-7	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999952246053	WITHOUT_CLASSIFICATION	4.775394814779565E-9	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.999995946213465	WITHOUT_CLASSIFICATION	4.0537865350417155E-6	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999998180696	WITHOUT_CLASSIFICATION	1.8193042044504036E-10	DEFECT
// the CategoryDataset interface expects a list of categories, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999995793643827	WITHOUT_CLASSIFICATION	4.206356173089173E-7	DEFECT
// the CategoryDataset interface expects a list of series, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999994631201495	WITHOUT_CLASSIFICATION	5.368798505600185E-7	DEFECT
// if d is real small set the inverse to a large number // to avoid INF	WITHOUT_CLASSIFICATION	0.9999999879400782	WITHOUT_CLASSIFICATION	1.205992177219438E-8	DEFECT
//store data as Long	WITHOUT_CLASSIFICATION	0.9999993524111692	WITHOUT_CLASSIFICATION	6.475888307255446E-7	DEFECT
// store Number as Double	WITHOUT_CLASSIFICATION	0.9999999739935349	WITHOUT_CLASSIFICATION	2.60064651275948E-8	DEFECT
// check if starting new column	WITHOUT_CLASSIFICATION	0.9999999806824186	WITHOUT_CLASSIFICATION	1.931758148274855E-8	DEFECT
//store index where new //column starts	WITHOUT_CLASSIFICATION	0.9999995081256636	WITHOUT_CLASSIFICATION	4.918743363966222E-7	DEFECT
// set x to most recent value	WITHOUT_CLASSIFICATION	0.9999999292731865	WITHOUT_CLASSIFICATION	7.072681353296191E-8	DEFECT
// create array xIndex to hold // new column indices	WITHOUT_CLASSIFICATION	0.9999912734368543	WITHOUT_CLASSIFICATION	8.726563145636574E-6	DEFECT
// store y and z axes // as Doubles	WITHOUT_CLASSIFICATION	0.9999999062871963	WITHOUT_CLASSIFICATION	9.371280371727962E-8	DEFECT
// calculate constant values	WITHOUT_CLASSIFICATION	0.9999978609359321	WITHOUT_CLASSIFICATION	2.1390640679285524E-6	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.9899129469911847	WITHOUT_CLASSIFICATION	0.010087053008815355	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999999579204664	WITHOUT_CLASSIFICATION	4.2079533671611455E-8	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999926523706565	WITHOUT_CLASSIFICATION	7.347629343553247E-6	DEFECT
//step through all the values and add them to the hash	WITHOUT_CLASSIFICATION	0.9999856261159099	WITHOUT_CLASSIFICATION	1.4373884090079278E-5	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999996816884067	WITHOUT_CLASSIFICATION	3.1831159328234166E-7	DEFECT
// can't find any differences	WITHOUT_CLASSIFICATION	0.9998680895707767	WITHOUT_CLASSIFICATION	1.319104292233946E-4	DEFECT
// now try to instantiate this ;-)	WITHOUT_CLASSIFICATION	0.9999993786132921	WITHOUT_CLASSIFICATION	6.213867078579557E-7	DEFECT
//  Create new dataset with keys above threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9999933613392215	WITHOUT_CLASSIFICATION	6.6386607784950496E-6	DEFECT
//  Do not add key to dataset	WITHOUT_CLASSIFICATION	0.9999919537061733	WITHOUT_CLASSIFICATION	8.046293826733381E-6	DEFECT
//  Add key to dataset	WITHOUT_CLASSIFICATION	0.999999255993911	WITHOUT_CLASSIFICATION	7.440060889718346E-7	DEFECT
//  Add other category if applicable	WITHOUT_CLASSIFICATION	0.9999999879908944	WITHOUT_CLASSIFICATION	1.2009105496774557E-8	DEFECT
// now do the work...	WITHOUT_CLASSIFICATION	0.9996310931015561	WITHOUT_CLASSIFICATION	3.689068984439246E-4	DEFECT
// if the dataset implements DomainInfo, life is easier	WITHOUT_CLASSIFICATION	0.999999987520419	WITHOUT_CLASSIFICATION	1.2479580957986466E-8	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.9999999965141241	WITHOUT_CLASSIFICATION	3.485875919335959E-9	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.9999992373315241	WITHOUT_CLASSIFICATION	7.626684758525388E-7	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.9999999965141241	WITHOUT_CLASSIFICATION	3.485875919335959E-9	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999567013892	WITHOUT_CLASSIFICATION	4.32986108262363E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998723225741	WITHOUT_CLASSIFICATION	1.2767742578416626E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999247168904	WITHOUT_CLASSIFICATION	7.52831096941057E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999810728079	WITHOUT_CLASSIFICATION	1.8927192090316042E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999525310957	WITHOUT_CLASSIFICATION	4.746890433028991E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // New Methods ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.99999961319603	WITHOUT_CLASSIFICATION	3.868039699256049E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // Private ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997328584765	WITHOUT_CLASSIFICATION	2.671415234528705E-7	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999998180696	WITHOUT_CLASSIFICATION	1.8193042044504036E-10	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9999996478080639	WITHOUT_CLASSIFICATION	3.5219193603782035E-7	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9999996478080639	WITHOUT_CLASSIFICATION	3.5219193603782035E-7	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999999904690637	WITHOUT_CLASSIFICATION	9.530936255098953E-9	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999999904690637	WITHOUT_CLASSIFICATION	9.530936255098953E-9	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999999904690637	WITHOUT_CLASSIFICATION	9.530936255098953E-9	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.9999999845902684	WITHOUT_CLASSIFICATION	1.5409731581276053E-8	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.9999999845902684	WITHOUT_CLASSIFICATION	1.5409731581276053E-8	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999998316376352	WITHOUT_CLASSIFICATION	1.6836236485833348E-7	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999998316376352	WITHOUT_CLASSIFICATION	1.6836236485833348E-7	DEFECT
// handle special case of BoxAndWhiskerXYDataset	WITHOUT_CLASSIFICATION	0.9999992793585117	WITHOUT_CLASSIFICATION	7.206414883236621E-7	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.9999998997363495	WITHOUT_CLASSIFICATION	1.0026365060476729E-7	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.9999998997363495	WITHOUT_CLASSIFICATION	1.0026365060476729E-7	DEFECT
// hasn't implemented DomainInfo, so iterate...	WITHOUT_CLASSIFICATION	0.9999981624210783	WITHOUT_CLASSIFICATION	1.8375789216282582E-6	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999687418157257	WITHOUT_CLASSIFICATION	3.12581842744103E-5	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999687418157257	WITHOUT_CLASSIFICATION	3.12581842744103E-5	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9995977758795296	WITHOUT_CLASSIFICATION	4.0222412047038423E-4	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9995977758795296	WITHOUT_CLASSIFICATION	4.0222412047038423E-4	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9995977758795296	WITHOUT_CLASSIFICATION	4.0222412047038423E-4	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.999998995376164	WITHOUT_CLASSIFICATION	1.0046238360625489E-6	DEFECT
// create an array holding the group indices for each series...	WITHOUT_CLASSIFICATION	0.9997525906783165	WITHOUT_CLASSIFICATION	2.4740932168351764E-4	DEFECT
// minimum and maximum for each group...	WITHOUT_CLASSIFICATION	0.9999981957356704	WITHOUT_CLASSIFICATION	1.8042643295892301E-6	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999595988727	WITHOUT_CLASSIFICATION	4.040112741692382E-8	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999595988727	WITHOUT_CLASSIFICATION	4.040112741692382E-8	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9999998172494767	WITHOUT_CLASSIFICATION	1.8275052322221892E-7	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999989581330476	WITHOUT_CLASSIFICATION	1.0418669524373446E-6	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999996816884067	WITHOUT_CLASSIFICATION	3.1831159328234166E-7	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999996816884067	WITHOUT_CLASSIFICATION	3.1831159328234166E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998723225741	WITHOUT_CLASSIFICATION	1.2767742578416626E-7	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999998180696	WITHOUT_CLASSIFICATION	1.8193042044504036E-10	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.999998995376164	WITHOUT_CLASSIFICATION	1.0046238360625489E-6	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.999998995376164	WITHOUT_CLASSIFICATION	1.0046238360625489E-6	DEFECT
// we don't know anything about the ordering of the x-values, // so we iterate until we find the first crossing of x (if any) // we know there are at least 2 items in the series at this point	WITHOUT_CLASSIFICATION	0.9999988410788386	WITHOUT_CLASSIFICATION	1.158921161302077E-6	DEFECT
// delegate null check on dataset	WITHOUT_CLASSIFICATION	0.9999998814651007	WITHOUT_CLASSIFICATION	1.1853489922915891E-7	DEFECT
// exact match on first item	WITHOUT_CLASSIFICATION	0.9999999578328643	WITHOUT_CLASSIFICATION	4.216713557784784E-8	DEFECT
// no crossing of x	WITHOUT_CLASSIFICATION	0.9999997475554383	WITHOUT_CLASSIFICATION	2.5244456168540384E-7	DEFECT
// spanning match	WITHOUT_CLASSIFICATION	0.9999999679022326	WITHOUT_CLASSIFICATION	3.209776753361321E-8	DEFECT
// exact match	WITHOUT_CLASSIFICATION	0.9999994867272339	WITHOUT_CLASSIFICATION	5.132727660575804E-7	DEFECT
// maps our series into our parent's	WITHOUT_CLASSIFICATION	0.9999980175055929	WITHOUT_CLASSIFICATION	1.982494407088459E-6	DEFECT
// prior to 1.0.14, we just fired a PropertyChange - so we need to // keep doing this	WITHOUT_CLASSIFICATION	0.9999999958819125	WITHOUT_CLASSIFICATION	4.118087462187433E-9	DEFECT
// no new methods added.	WITHOUT_CLASSIFICATION	0.9999999230753266	WITHOUT_CLASSIFICATION	7.692467340919724E-8	DEFECT
// first line contains column keys	WITHOUT_CLASSIFICATION	0.9999884434287122	WITHOUT_CLASSIFICATION	1.1556571287697144E-5	DEFECT
// remaining lines contain a row key and data values	WITHOUT_CLASSIFICATION	0.9999920812077601	WITHOUT_CLASSIFICATION	7.918792239918658E-6	DEFECT
// first field contains the row key	WITHOUT_CLASSIFICATION	0.9999949949060176	WITHOUT_CLASSIFICATION	5.005093982398546E-6	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999988646582395	WITHOUT_CLASSIFICATION	1.135341760472743E-6	DEFECT
// remaining fields contain values	WITHOUT_CLASSIFICATION	0.999999309882954	WITHOUT_CLASSIFICATION	6.901170459992608E-7	DEFECT
// Remove any previous old data	WITHOUT_CLASSIFICATION	0.9999806520147183	WITHOUT_CLASSIFICATION	1.9347985281647888E-5	DEFECT
// first column contains the row key...	WITHOUT_CLASSIFICATION	0.9999333972198795	WITHOUT_CLASSIFICATION	6.660278012050678E-5	DEFECT
// suppress (value defaults to null)	WITHOUT_CLASSIFICATION	0.9999992711303236	WITHOUT_CLASSIFICATION	7.288696763240278E-7	DEFECT
// not a value, can't use it (defaults to null)	WITHOUT_CLASSIFICATION	0.9996055517507143	WITHOUT_CLASSIFICATION	3.944482492856915E-4	DEFECT
/// First column is X data	WITHOUT_CLASSIFICATION	0.9999955922549578	WITHOUT_CLASSIFICATION	4.407745042210149E-6	DEFECT
/// Get the column names and cache them.	WITHOUT_CLASSIFICATION	0.999999757148978	WITHOUT_CLASSIFICATION	2.4285102199923225E-7	DEFECT
// Might need to add, to free memory from any previous result sets	WITHOUT_CLASSIFICATION	0.9998913339312302	WITHOUT_CLASSIFICATION	1.0866606876983712E-4	DEFECT
// Are we working with a time series.	WITHOUT_CLASSIFICATION	0.9999836193899885	WITHOUT_CLASSIFICATION	1.6380610011604407E-5	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999952246053	WITHOUT_CLASSIFICATION	4.775394814779565E-9	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999952246053	WITHOUT_CLASSIFICATION	4.775394814779565E-9	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999536049763	WITHOUT_CLASSIFICATION	4.639502364563498E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999567013892	WITHOUT_CLASSIFICATION	4.32986108262363E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999810728079	WITHOUT_CLASSIFICATION	1.8927192090316042E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999525310957	WITHOUT_CLASSIFICATION	4.746890433028991E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999525310957	WITHOUT_CLASSIFICATION	4.746890433028991E-8	DEFECT
// if this series belongs to a dataset, the dataset might veto the // change if it results in two series within the dataset having the // same key	WITHOUT_CLASSIFICATION	0.9999597370424953	WITHOUT_CLASSIFICATION	4.0262957504743165E-5	DEFECT
// see comments about priority of // 10 in validateObject()	WITHOUT_CLASSIFICATION	0.9999897810708172	WITHOUT_CLASSIFICATION	1.0218929182821073E-5	DEFECT
// first field is ignored, since // column 0 is for row keys	WITHOUT_CLASSIFICATION	0.9999999078273258	WITHOUT_CLASSIFICATION	9.217267421368686E-8	DEFECT
// Get all rows. // rows = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999998709571887	WITHOUT_CLASSIFICATION	1.2904281128827925E-7	DEFECT
/// Determine max and min values.	WITHOUT_CLASSIFICATION	0.999999502127547	WITHOUT_CLASSIFICATION	4.978724529651695E-7	DEFECT
// Tell the listeners a new table has arrived.	WITHOUT_CLASSIFICATION	0.9999999896944407	WITHOUT_CLASSIFICATION	1.0305559318917166E-8	DEFECT
// fill the bins	WITHOUT_CLASSIFICATION	0.999998146606016	WITHOUT_CLASSIFICATION	1.8533939839045507E-6	DEFECT
// generic map for each series	WITHOUT_CLASSIFICATION	0.9999998577915371	WITHOUT_CLASSIFICATION	1.4220846284906525E-7	DEFECT
// pretty sure this shouldn't ever happen	WITHOUT_CLASSIFICATION	0.9999800378836733	WITHOUT_CLASSIFICATION	1.996211632681323E-5	DEFECT
// lower bounds are the same	WITHOUT_CLASSIFICATION	0.9999996332229889	WITHOUT_CLASSIFICATION	3.6677701104987755E-7	DEFECT
// overridden to make public	WITHOUT_CLASSIFICATION	0.9999996478195096	WITHOUT_CLASSIFICATION	3.521804904299528E-7	DEFECT
// update the cached range values...	WITHOUT_CLASSIFICATION	0.999999653133071	WITHOUT_CLASSIFICATION	3.468669289496411E-7	DEFECT
// check that the new bin doesn't overlap with any existing bin	WITHOUT_CLASSIFICATION	0.9999996971661426	WITHOUT_CLASSIFICATION	3.0283385742483285E-7	DEFECT
// pass values to other constructor	WITHOUT_CLASSIFICATION	0.999999954235882	WITHOUT_CLASSIFICATION	4.576411806596817E-8	DEFECT
// update cached min and max values	WITHOUT_CLASSIFICATION	0.9999996536717046	WITHOUT_CLASSIFICATION	3.463282953752457E-7	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999999983874674	WITHOUT_CLASSIFICATION	1.6125325003799892E-9	DEFECT
// check for zero pivot element	WITHOUT_CLASSIFICATION	0.9999999129558033	WITHOUT_CLASSIFICATION	8.704419674009688E-8	DEFECT
// treat nulls the same as NaNs	WITHOUT_CLASSIFICATION	0.9999981355757016	WITHOUT_CLASSIFICATION	1.8644242984443469E-6	DEFECT
// calculate the sum and count	WITHOUT_CLASSIFICATION	0.9999998975304699	WITHOUT_CLASSIFICATION	1.0246953013487215E-7	DEFECT
// intercept	WITHOUT_CLASSIFICATION	0.9999998035442563	WITHOUT_CLASSIFICATION	1.9645574365301607E-7	DEFECT
// sum of x, x^2, x * y, y	WITHOUT_CLASSIFICATION	0.9999990181415427	WITHOUT_CLASSIFICATION	9.818584573435484E-7	DEFECT
// holds the moving average sum	WITHOUT_CLASSIFICATION	0.9999989977843949	WITHOUT_CLASSIFICATION	1.0022156049908966E-6	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999999983874674	WITHOUT_CLASSIFICATION	1.6125325003799892E-9	DEFECT
// make sure bins[bins.length]'s upper boundary ends at maximum // to avoid the rounding issue. the bins[0] lower boundary is // guaranteed start from min	WITHOUT_CLASSIFICATION	0.9999996857190845	WITHOUT_CLASSIFICATION	3.142809155468575E-7	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.999999148405489	WITHOUT_CLASSIFICATION	8.515945110661977E-7	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999999163240308	WITHOUT_CLASSIFICATION	8.3675969114094E-8	DEFECT
// ********* stat function for linear slope ******** // y = a + bx // a = ybar - b * xbar //     sum(x * y) - (sum (x) * sum(y)) / n // b = ------------------------------------ //     sum (x^2) - (sum(x)^2 / n // *************************************************	WITHOUT_CLASSIFICATION	0.999967610628421	WITHOUT_CLASSIFICATION	3.238937157896696E-5	DEFECT
// update cached range values	WITHOUT_CLASSIFICATION	0.9999999577682354	WITHOUT_CLASSIFICATION	4.2231764709288914E-8	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999996017501482	WITHOUT_CLASSIFICATION	3.9824985179223825E-6	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.9999992373315241	WITHOUT_CLASSIFICATION	7.626684758525388E-7	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.999999148405489	WITHOUT_CLASSIFICATION	8.515945110661977E-7	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999983597558658	WITHOUT_CLASSIFICATION	1.6402441342745956E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999982481007043	WITHOUT_CLASSIFICATION	1.7518992958197655E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999899166707404	WITHOUT_CLASSIFICATION	1.0083329259608222E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999899166707404	WITHOUT_CLASSIFICATION	1.0083329259608222E-5	DEFECT
// we are at the last minute in the hour...	WITHOUT_CLASSIFICATION	0.999993105844865	WITHOUT_CLASSIFICATION	6.894155135054697E-6	DEFECT
// CASE 1 : Comparing to another Minute object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999991947643938	WITHOUT_CLASSIFICATION	8.052356062912185E-7	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999965558523426	WITHOUT_CLASSIFICATION	3.444147657381795E-6	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9842642476295353	WITHOUT_CLASSIFICATION	0.015735752370464637	DEFECT
// remove old items and notify if necessary	WITHOUT_CLASSIFICATION	0.9999997269425429	WITHOUT_CLASSIFICATION	2.73057457102414E-7	DEFECT
// make the change (if it's not a duplicate time period)...	WITHOUT_CLASSIFICATION	0.9999988603490919	WITHOUT_CLASSIFICATION	1.1396509080886048E-6	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9998894621064852	WITHOUT_CLASSIFICATION	1.105378935148166E-4	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9998894621064852	WITHOUT_CLASSIFICATION	1.105378935148166E-4	DEFECT
// find the serial index of the period specified by 'latest'	WITHOUT_CLASSIFICATION	0.9999999942379889	WITHOUT_CLASSIFICATION	5.762011176239928E-9	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999997640898183	WITHOUT_CLASSIFICATION	2.3591018168407256E-7	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999983597558658	WITHOUT_CLASSIFICATION	1.6402441342745956E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999983597558658	WITHOUT_CLASSIFICATION	1.6402441342745956E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999982481007043	WITHOUT_CLASSIFICATION	1.7518992958197655E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999899166707404	WITHOUT_CLASSIFICATION	1.0083329259608222E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999899166707404	WITHOUT_CLASSIFICATION	1.0083329259608222E-5	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999965558523426	WITHOUT_CLASSIFICATION	3.444147657381795E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999965558523426	WITHOUT_CLASSIFICATION	3.444147657381795E-6	DEFECT
// since the items are ordered, we could be more clever here and avoid // iterating over all the data	WITHOUT_CLASSIFICATION	0.9999999991957157	WITHOUT_CLASSIFICATION	8.042842434043577E-10	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.982354595048642	WITHOUT_CLASSIFICATION	0.017645404951358044	DEFECT
// figure out if we need to iterate through all the y-values // to find the revised minY / maxY	WITHOUT_CLASSIFICATION	0.9999999933324194	WITHOUT_CLASSIFICATION	6.667580673627407E-9	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.9999992931457304	WITHOUT_CLASSIFICATION	7.068542694952229E-7	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.9999992931457304	WITHOUT_CLASSIFICATION	7.068542694952229E-7	DEFECT
// start is after last data item	WITHOUT_CLASSIFICATION	0.9999998307492437	WITHOUT_CLASSIFICATION	1.6925075629106956E-7	DEFECT
// update the time series appropriately	WITHOUT_CLASSIFICATION	0.9999988034786839	WITHOUT_CLASSIFICATION	1.1965213160567204E-6	DEFECT
// we are at the first hour in the day...	WITHOUT_CLASSIFICATION	0.9999686427135819	WITHOUT_CLASSIFICATION	3.135728641817244E-5	DEFECT
// we are at the last hour in the day...	WITHOUT_CLASSIFICATION	0.9998145300248983	WITHOUT_CLASSIFICATION	1.8546997510166945E-4	DEFECT
// CASE 1 : Comparing to another Hour object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999973581803285	WITHOUT_CLASSIFICATION	2.6418196713926E-6	DEFECT
// if the hour is 0 - 23 then create an hour	WITHOUT_CLASSIFICATION	0.9999990284192998	WITHOUT_CLASSIFICATION	9.715807001880854E-7	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9999787679542268	WITHOUT_CLASSIFICATION	2.1232045773169427E-5	DEFECT
// create the year...	WITHOUT_CLASSIFICATION	0.9999950495186751	WITHOUT_CLASSIFICATION	4.950481324875394E-6	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999973207438976	WITHOUT_CLASSIFICATION	2.6792561024340245E-6	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.9999885975406542	WITHOUT_CLASSIFICATION	1.1402459345763422E-5	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.9999885975406542	WITHOUT_CLASSIFICATION	1.1402459345763422E-5	DEFECT
// remove the point i-periodCount out of the rolling sum.	WITHOUT_CLASSIFICATION	0.9999988101650789	WITHOUT_CLASSIFICATION	1.1898349212010663E-6	DEFECT
// an arbitrary safe default value	WITHOUT_CLASSIFICATION	0.9999998297522125	WITHOUT_CLASSIFICATION	1.7024778758755343E-7	DEFECT
// default value;	WITHOUT_CLASSIFICATION	0.9999996663643139	WITHOUT_CLASSIFICATION	3.336356860026069E-7	DEFECT
// as a class variable, initializes == 0	WITHOUT_CLASSIFICATION	0.9999999961418745	WITHOUT_CLASSIFICATION	3.858125540214349E-9	DEFECT
// cached values used for interface DomainInfo:	WITHOUT_CLASSIFICATION	0.9999998255622944	WITHOUT_CLASSIFICATION	1.74437705660244E-7	DEFECT
//rangeGridlinePaint;	WITHOUT_CLASSIFICATION	0.9999995276793205	WITHOUT_CLASSIFICATION	4.723206793920212E-7	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999983597558658	WITHOUT_CLASSIFICATION	1.6402441342745956E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999982481007043	WITHOUT_CLASSIFICATION	1.7518992958197655E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999982481007043	WITHOUT_CLASSIFICATION	1.7518992958197655E-6	DEFECT
// autoinit's to null.	WITHOUT_CLASSIFICATION	0.9999990237656703	WITHOUT_CLASSIFICATION	9.762343297307544E-7	DEFECT
// CASE 1 : Comparing to another Year object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999968387917928	WITHOUT_CLASSIFICATION	3.161208207247279E-6	DEFECT
// if the initial averaging period is to be excluded, then // calculate the lowest x-value to have an average calculated...	WITHOUT_CLASSIFICATION	0.9999995802487722	WITHOUT_CLASSIFICATION	4.1975122781882594E-7	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999830986115095	WITHOUT_CLASSIFICATION	1.690138849053903E-5	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999830986115095	WITHOUT_CLASSIFICATION	1.690138849053903E-5	DEFECT
// if the initial averaging period is to be excluded, then // calculate the index of the // first data item to have an average calculated...	WITHOUT_CLASSIFICATION	0.9999999092169004	WITHOUT_CLASSIFICATION	9.078309959211654E-8	DEFECT
// Cached values used for interface RangeInfo: (note minValue pinned at 0) //   A single set of extrema covers the entire SeriesCollection	WITHOUT_CLASSIFICATION	0.9999775563831786	WITHOUT_CLASSIFICATION	2.2443616821298426E-5	DEFECT
///  .. etc....	WITHOUT_CLASSIFICATION	0.9998834447474082	WITHOUT_CLASSIFICATION	1.1655525259181575E-4	DEFECT
/// Expand the following for all defined TimePeriods:	WITHOUT_CLASSIFICATION	0.9999999401771508	WITHOUT_CLASSIFICATION	5.982284928022939E-8	DEFECT
// initialize the members of "seriesNames" array so they won't be null:	WITHOUT_CLASSIFICATION	0.9999977422737176	WITHOUT_CLASSIFICATION	2.257726282350892E-6	DEFECT
//{ // deep copy from values[], caller // can safely discard that array	WITHOUT_CLASSIFICATION	0.9999396645820999	WITHOUT_CLASSIFICATION	6.033541790010692E-5	DEFECT
// Avoid IndexOutOfBoundsException:	WITHOUT_CLASSIFICATION	0.999966533971779	WITHOUT_CLASSIFICATION	3.346602822101407E-5	DEFECT
// But if that series array already exists, just overwrite its contents	WITHOUT_CLASSIFICATION	0.9999999627891916	WITHOUT_CLASSIFICATION	3.7210808380092284E-8	DEFECT
// But if that series array already exists, just overwrite its contents //synchronized(this) //{	WITHOUT_CLASSIFICATION	0.9999999360593526	WITHOUT_CLASSIFICATION	6.394064740549716E-8	DEFECT
// all arrays equal length, // so ignore argument:	WITHOUT_CLASSIFICATION	0.9999999981739153	WITHOUT_CLASSIFICATION	1.8260847254942446E-9	DEFECT
// Methods for managing the FIFO's:	WITHOUT_CLASSIFICATION	0.9999592051912162	WITHOUT_CLASSIFICATION	4.0794808783905574E-5	DEFECT
// no translation needed	WITHOUT_CLASSIFICATION	0.9999999733094017	WITHOUT_CLASSIFICATION	2.6690598338856376E-8	DEFECT
// else  [implicit here]	WITHOUT_CLASSIFICATION	0.9999999229965211	WITHOUT_CLASSIFICATION	7.700347881806206E-8	DEFECT
// newestAt takes value previously held // by oldestAT	WITHOUT_CLASSIFICATION	0.9999950239982863	WITHOUT_CLASSIFICATION	4.97600171364558E-6	DEFECT
// if the oldest data contained a maximum Y-value, invalidate the stored //   Y-max and Y-range data:	WITHOUT_CLASSIFICATION	0.9999999997357437	WITHOUT_CLASSIFICATION	2.642562954367977E-10	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999999457928535	WITHOUT_CLASSIFICATION	5.420714652579493E-8	DEFECT
//  wipe the next (about to be used) set of data slots	WITHOUT_CLASSIFICATION	0.999999389492501	WITHOUT_CLASSIFICATION	6.105074990099935E-7	DEFECT
// Update the array of TimePeriods:	WITHOUT_CLASSIFICATION	0.9999977842938743	WITHOUT_CLASSIFICATION	2.2157061257027734E-6	DEFECT
// Now advance "oldestAt", wrapping at end of the array	WITHOUT_CLASSIFICATION	0.999998320680804	WITHOUT_CLASSIFICATION	1.6793191960643287E-6	DEFECT
// Update the domain limits: //(time is kept in msec)	WITHOUT_CLASSIFICATION	0.9999779061994849	WITHOUT_CLASSIFICATION	2.2093800515190116E-5	DEFECT
//  If data can be < 0, the next 2 methods should be modified	WITHOUT_CLASSIFICATION	0.9999589456233484	WITHOUT_CLASSIFICATION	4.105437665163369E-5	DEFECT
// index to select the "series"	WITHOUT_CLASSIFICATION	0.9999975649595378	WITHOUT_CLASSIFICATION	2.435040462157307E-6	DEFECT
/* // "Extras" found useful when analyzing/verifying class behavior:    public Number getUntranslatedXValue(int series, int item)    {      return super.getXValue(series, item);    }    public float getUntranslatedY(int series, int item)    {      return super.getY(series, item);    }  */	WITHOUT_CLASSIFICATION	0.9999999981265981	WITHOUT_CLASSIFICATION	1.8734019483528393E-9	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9999995908613282	WITHOUT_CLASSIFICATION	4.0913867185273456E-7	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9999995908613282	WITHOUT_CLASSIFICATION	4.0913867185273456E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998677108446153	WITHOUT_CLASSIFICATION	1.3228915538469478E-4	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999996717371131	WITHOUT_CLASSIFICATION	3.282628869606291E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998677108446153	WITHOUT_CLASSIFICATION	1.3228915538469478E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998677108446153	WITHOUT_CLASSIFICATION	1.3228915538469478E-4	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999926523706565	WITHOUT_CLASSIFICATION	7.347629343553247E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999983597558658	WITHOUT_CLASSIFICATION	1.6402441342745956E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999982481007043	WITHOUT_CLASSIFICATION	1.7518992958197655E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999996014304935	WITHOUT_CLASSIFICATION	3.9856950646390947E-7	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999982481007043	WITHOUT_CLASSIFICATION	1.7518992958197655E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999899166707404	WITHOUT_CLASSIFICATION	1.0083329259608222E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999899166707404	WITHOUT_CLASSIFICATION	1.0083329259608222E-5	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999965558523426	WITHOUT_CLASSIFICATION	3.444147657381795E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999965558523426	WITHOUT_CLASSIFICATION	3.444147657381795E-6	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9999787679542268	WITHOUT_CLASSIFICATION	2.1232045773169427E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999205788247	WITHOUT_CLASSIFICATION	7.942117532426975E-8	DEFECT
// appendData() writes new data at the index position given by newestAt/ // When adding new data dynamically, use advanceTime(), followed by this:	WITHOUT_CLASSIFICATION	0.999569456094867	WITHOUT_CLASSIFICATION	4.30543905133034E-4	DEFECT
// check whether the "valueHistory" array member exists; if not, // create them:	WITHOUT_CLASSIFICATION	0.9999998587163792	WITHOUT_CLASSIFICATION	1.4128362088701826E-7	DEFECT
// getXxx() ftns can ignore the "series" argument: // Don't synchronize this!! Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9982302739118711	WITHOUT_CLASSIFICATION	0.001769726088128764	DEFECT
// Don't synchronize this!! // Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9962866529057619	WITHOUT_CLASSIFICATION	0.003713347094238124	DEFECT
// The next 3 functions implement the RangeInfo interface. // Using saved limits (updated by each updateTime() call) significantly // improves performance.  WARNING: this code makes the simplifying // assumption that data is never negative.  Expand as needed for the // general case.	WITHOUT_CLASSIFICATION	0.7203278485804498	DEFECT	0.27967215141955015	WITHOUT_CLASSIFICATION
// CASE 1 : Comparing to another Quarter object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999995277859182	WITHOUT_CLASSIFICATION	4.722140818743776E-7	DEFECT
// find the Q and the integer following it (remove both from the // string)...	WITHOUT_CLASSIFICATION	0.9999992661248754	WITHOUT_CLASSIFICATION	7.338751246417695E-7	DEFECT
// replace any / , or - with a space	WITHOUT_CLASSIFICATION	0.9999984086492243	WITHOUT_CLASSIFICATION	1.5913507756946904E-6	DEFECT
// do nothing, so null is returned	WITHOUT_CLASSIFICATION	0.9999995485030859	WITHOUT_CLASSIFICATION	4.51496914118921E-7	DEFECT
//////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999934409610616	WITHOUT_CLASSIFICATION	6.559038938321115E-6	DEFECT
// CASE 1 : Comparing to another Day object // ----------------------------------------	WITHOUT_CLASSIFICATION	0.9999850611568787	WITHOUT_CLASSIFICATION	1.4938843121194122E-5	DEFECT
// check arguments...delegated // fetch the series name...	WITHOUT_CLASSIFICATION	0.9999999945532408	WITHOUT_CLASSIFICATION	5.446759196149411E-9	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999999457928535	WITHOUT_CLASSIFICATION	5.420714652579493E-8	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.999995469876575	WITHOUT_CLASSIFICATION	4.5301234250465205E-6	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.9999995989948524	WITHOUT_CLASSIFICATION	4.0100514758146005E-7	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.9999993260297426	WITHOUT_CLASSIFICATION	6.739702573455064E-7	DEFECT
// we need to work out if the previous year has 52 or 53 weeks...	WITHOUT_CLASSIFICATION	0.9998424362341283	WITHOUT_CLASSIFICATION	1.5756376587177173E-4	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999205788247	WITHOUT_CLASSIFICATION	7.942117532426975E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999205788247	WITHOUT_CLASSIFICATION	7.942117532426975E-8	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.999988488229933	WITHOUT_CLASSIFICATION	1.1511770066992188E-5	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999926523706565	WITHOUT_CLASSIFICATION	7.347629343553247E-6	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999895989982671	WITHOUT_CLASSIFICATION	1.0401001732884699E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999996017501482	WITHOUT_CLASSIFICATION	3.9824985179223825E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999996017501482	WITHOUT_CLASSIFICATION	3.9824985179223825E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999983597558658	WITHOUT_CLASSIFICATION	1.6402441342745956E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999982481007043	WITHOUT_CLASSIFICATION	1.7518992958197655E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999982481007043	WITHOUT_CLASSIFICATION	1.7518992958197655E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999982481007043	WITHOUT_CLASSIFICATION	1.7518992958197655E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999899166707404	WITHOUT_CLASSIFICATION	1.0083329259608222E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999899166707404	WITHOUT_CLASSIFICATION	1.0083329259608222E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999899166707404	WITHOUT_CLASSIFICATION	1.0083329259608222E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999899166707404	WITHOUT_CLASSIFICATION	1.0083329259608222E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999899166707404	WITHOUT_CLASSIFICATION	1.0083329259608222E-5	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999965558523426	WITHOUT_CLASSIFICATION	3.444147657381795E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999965558523426	WITHOUT_CLASSIFICATION	3.444147657381795E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999965558523426	WITHOUT_CLASSIFICATION	3.444147657381795E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999965558523426	WITHOUT_CLASSIFICATION	3.444147657381795E-6	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9842642476295353	WITHOUT_CLASSIFICATION	0.015735752370464637	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999205788247	WITHOUT_CLASSIFICATION	7.942117532426975E-8	DEFECT
// sometimes the last few days of the year are considered to fall in // the *first* week of the following year.  Refer to the Javadocs for // GregorianCalendar.	WITHOUT_CLASSIFICATION	0.9999954939844768	WITHOUT_CLASSIFICATION	4.50601552322719E-6	DEFECT
// CASE 1 : Comparing to another Week object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999972808789759	WITHOUT_CLASSIFICATION	2.719121024095758E-6	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9999994749371852	WITHOUT_CLASSIFICATION	5.250628147891772E-7	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9999994749371852	WITHOUT_CLASSIFICATION	5.250628147891772E-7	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999997197010756	WITHOUT_CLASSIFICATION	2.802989244064811E-7	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999997197010756	WITHOUT_CLASSIFICATION	2.802989244064811E-7	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999997197010756	WITHOUT_CLASSIFICATION	2.802989244064811E-7	DEFECT
// CASE 1 : Comparing to another Month object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.999996216190935	WITHOUT_CLASSIFICATION	3.7838090648752687E-6	DEFECT
// if there is no separator, we assume the first four characters // are YYYY	WITHOUT_CLASSIFICATION	0.9999999999988055	WITHOUT_CLASSIFICATION	1.1944731994814701E-12	DEFECT
// now it is trickier to determine if the month or year is first	WITHOUT_CLASSIFICATION	0.9999997880243219	WITHOUT_CLASSIFICATION	2.1197567802380908E-7	DEFECT
// --- DEPRECATED METHODS -------------------------------------------------	WITHOUT_CLASSIFICATION	0.999997690253435	WITHOUT_CLASSIFICATION	2.3097465650233713E-6	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataItem object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.99999986546794	WITHOUT_CLASSIFICATION	1.345320600751884E-7	DEFECT
//private Comparable key;	WITHOUT_CLASSIFICATION	0.9999994140627474	WITHOUT_CLASSIFICATION	5.859372527064447E-7	DEFECT
//this.key = null;	WITHOUT_CLASSIFICATION	0.9999989726795718	WITHOUT_CLASSIFICATION	1.0273204282475652E-6	DEFECT
// no attributes to read	WITHOUT_CLASSIFICATION	0.9999999002379474	WITHOUT_CLASSIFICATION	9.9762052612672E-8	DEFECT
//axisOffset;	WITHOUT_CLASSIFICATION	0.9999977508791906	WITHOUT_CLASSIFICATION	2.2491208094474005E-6	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999536049763	WITHOUT_CLASSIFICATION	4.639502364563498E-8	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999999579204664	WITHOUT_CLASSIFICATION	4.2079533671611455E-8	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999926523706565	WITHOUT_CLASSIFICATION	7.347629343553247E-6	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.999995469876575	WITHOUT_CLASSIFICATION	4.5301234250465205E-6	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.9999993260297426	WITHOUT_CLASSIFICATION	6.739702573455064E-7	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999766320552554	WITHOUT_CLASSIFICATION	2.3367944744586576E-5	DEFECT
// XYDataset only provides methods for reading a dataset...	WITHOUT_CLASSIFICATION	0.9908761190651445	WITHOUT_CLASSIFICATION	0.009123880934855595	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.9999999991255802	WITHOUT_CLASSIFICATION	8.744196473620183E-10	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.9999999991255802	WITHOUT_CLASSIFICATION	8.744196473620183E-10	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999766320552554	WITHOUT_CLASSIFICATION	2.3367944744586576E-5	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999854746057	WITHOUT_CLASSIFICATION	1.4525394412561202E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999205788247	WITHOUT_CLASSIFICATION	7.942117532426975E-8	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999999270608391	WITHOUT_CLASSIFICATION	7.293916095057396E-8	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9999999961593115	WITHOUT_CLASSIFICATION	3.840688436996409E-9	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999205788247	WITHOUT_CLASSIFICATION	7.942117532426975E-8	DEFECT
// we can't be sure of the order	WITHOUT_CLASSIFICATION	0.9999998372949881	WITHOUT_CLASSIFICATION	1.6270501197257354E-7	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999999664890592	WITHOUT_CLASSIFICATION	3.3510940903642696E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999205788247	WITHOUT_CLASSIFICATION	7.942117532426975E-8	DEFECT
// either autoWidth is off or autoIntervalWidth was not set.	WITHOUT_CLASSIFICATION	0.9999996178794279	WITHOUT_CLASSIFICATION	3.8212057198375443E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999205788247	WITHOUT_CLASSIFICATION	7.942117532426975E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999205788247	WITHOUT_CLASSIFICATION	7.942117532426975E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999205788247	WITHOUT_CLASSIFICATION	7.942117532426975E-8	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999915725323	WITHOUT_CLASSIFICATION	8.427467749849676E-9	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999915725323	WITHOUT_CLASSIFICATION	8.427467749849676E-9	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.9999998377941586	WITHOUT_CLASSIFICATION	1.6220584131574733E-7	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.9999999423126641	WITHOUT_CLASSIFICATION	5.768733577812193E-8	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.999999870123631	WITHOUT_CLASSIFICATION	1.2987636898254837E-7	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.999988488229933	WITHOUT_CLASSIFICATION	1.1511770066992188E-5	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999536049763	WITHOUT_CLASSIFICATION	4.639502364563498E-8	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999899166707404	WITHOUT_CLASSIFICATION	1.0083329259608222E-5	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9842642476295353	WITHOUT_CLASSIFICATION	0.015735752370464637	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9998894621064852	WITHOUT_CLASSIFICATION	1.105378935148166E-4	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.9999995989948524	WITHOUT_CLASSIFICATION	4.0100514758146005E-7	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999854746057	WITHOUT_CLASSIFICATION	1.4525394412561202E-8	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999854746057	WITHOUT_CLASSIFICATION	1.4525394412561202E-8	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999766320552554	WITHOUT_CLASSIFICATION	2.3367944744586576E-5	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9999999961593115	WITHOUT_CLASSIFICATION	3.840688436996409E-9	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999999270608391	WITHOUT_CLASSIFICATION	7.293916095057396E-8	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999999270608391	WITHOUT_CLASSIFICATION	7.293916095057396E-8	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999999664890592	WITHOUT_CLASSIFICATION	3.3510940903642696E-8	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999999664890592	WITHOUT_CLASSIFICATION	3.3510940903642696E-8	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.9999998366695642	WITHOUT_CLASSIFICATION	1.6333043580148268E-7	DEFECT
// everything is fine: autoWidth is on, and an autoIntervalWidth // was set.	WITHOUT_CLASSIFICATION	0.9999822967559113	WITHOUT_CLASSIFICATION	1.7703244088666823E-5	DEFECT
// first get the range without the interval, then expand it for the // interval width	WITHOUT_CLASSIFICATION	0.9999999918774553	WITHOUT_CLASSIFICATION	8.122544706502647E-9	DEFECT
// all series have the same number of items in // this dataset	WITHOUT_CLASSIFICATION	0.9999980572082031	WITHOUT_CLASSIFICATION	1.9427917969050227E-6	DEFECT
// this.x is not allowed to be null...	WITHOUT_CLASSIFICATION	0.9933986979081435	WITHOUT_CLASSIFICATION	0.006601302091856479	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataPair object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998485006837	WITHOUT_CLASSIFICATION	1.514993163282764E-7	DEFECT
// In version 0.9.12, in response to several developer requests, I changed // the 'data' attribute from 'private' to 'protected', so that others can // make subclasses that work directly with the underlying data structure.	WITHOUT_CLASSIFICATION	0.9998862629594568	WITHOUT_CLASSIFICATION	1.1373704054315564E-4	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999999336166463	WITHOUT_CLASSIFICATION	6.638335378820838E-8	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999999336166463	WITHOUT_CLASSIFICATION	6.638335378820838E-8	DEFECT
// if we get to here, we know that duplicate X values are not permitted	WITHOUT_CLASSIFICATION	0.9999160273134831	WITHOUT_CLASSIFICATION	8.397268651687208E-5	DEFECT
/*         * we assum super is always initialized to all-zero matrix, so the         * total sum should be 0 upon initialization. However, we set it to         * Double.MIN_VALUE to get the same effect and yet avoid division by 0         * upon initialization.         */	WITHOUT_CLASSIFICATION	0.9999941635793881	WITHOUT_CLASSIFICATION	5.8364206119687686E-6	DEFECT
// add the series...	WITHOUT_CLASSIFICATION	0.999999374561485	WITHOUT_CLASSIFICATION	6.254385149529225E-7	DEFECT
// try a class that isn't a listener	WITHOUT_CLASSIFICATION	0.9999825383676477	WITHOUT_CLASSIFICATION	1.7461632352334108E-5	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999981520423523	WITHOUT_CLASSIFICATION	1.8479576476860134E-6	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9999999994504614	WITHOUT_CLASSIFICATION	5.495386097971722E-10	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.9999999853003669	WITHOUT_CLASSIFICATION	1.4699633025101765E-8	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9672841647701568	WITHOUT_CLASSIFICATION	0.032715835229843206	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999999457391415	WITHOUT_CLASSIFICATION	5.42608585094623E-8	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.9999997866261668	WITHOUT_CLASSIFICATION	2.133738332238931E-7	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999908463909323	WITHOUT_CLASSIFICATION	9.15360906776071E-6	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999799092263	WITHOUT_CLASSIFICATION	2.0090773704228852E-8	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999799092263	WITHOUT_CLASSIFICATION	2.0090773704228852E-8	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.9999999580593011	WITHOUT_CLASSIFICATION	4.194069888699148E-8	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999997640898183	WITHOUT_CLASSIFICATION	2.3591018168407256E-7	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999999579204664	WITHOUT_CLASSIFICATION	4.2079533671611455E-8	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999854746057	WITHOUT_CLASSIFICATION	1.4525394412561202E-8	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999854746057	WITHOUT_CLASSIFICATION	1.4525394412561202E-8	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.9999998285930954	WITHOUT_CLASSIFICATION	1.7140690442900095E-7	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.9999999054419099	WITHOUT_CLASSIFICATION	9.45580901903629E-8	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.9999999054419099	WITHOUT_CLASSIFICATION	9.45580901903629E-8	DEFECT
//TODO private boolean fillZoomRectangle = true;	WITHOUT_CLASSIFICATION	0.9992463134213512	WITHOUT_CLASSIFICATION	7.536865786487752E-4	DEFECT
// create the canvas and add the required listeners	WITHOUT_CLASSIFICATION	0.9999996390818646	WITHOUT_CLASSIFICATION	3.609181353787027E-7	DEFECT
//ChartEditorManager.getChartEditor(canvas.getDisplay(), this.chart);	WITHOUT_CLASSIFICATION	0.999999487979831	WITHOUT_CLASSIFICATION	5.120201690267093E-7	DEFECT
/* in the next zoomPoint.x and y replace by e.x and y for now.         * this helps to handle the mouse events and besides,         * those values are unused AFAIK. */	WITHOUT_CLASSIFICATION	0.9999999417670103	WITHOUT_CLASSIFICATION	5.823298963979177E-8	DEFECT
// do nothing, override if necessary	WITHOUT_CLASSIFICATION	0.9999999958412789	WITHOUT_CLASSIFICATION	4.158721145031389E-9	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999842232123104	WITHOUT_CLASSIFICATION	1.5776787689573502E-5	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999842232123104	WITHOUT_CLASSIFICATION	1.5776787689573502E-5	DEFECT
// pass mouse down event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999999603124357	WITHOUT_CLASSIFICATION	3.9687564334114215E-8	DEFECT
// if the box has been drawn backwards, restore the auto bounds	WITHOUT_CLASSIFICATION	0.9999992287496491	WITHOUT_CLASSIFICATION	7.712503509412579E-7	DEFECT
// handle axis trace	WITHOUT_CLASSIFICATION	0.9999999668362671	WITHOUT_CLASSIFICATION	3.3163732750041076E-8	DEFECT
// handle tool tips in a simple way	WITHOUT_CLASSIFICATION	0.9999996221902087	WITHOUT_CLASSIFICATION	3.7780979136081004E-7	DEFECT
// handle zoom box	WITHOUT_CLASSIFICATION	0.9999999540501414	WITHOUT_CLASSIFICATION	4.594985861989238E-8	DEFECT
// skip if chart is null	WITHOUT_CLASSIFICATION	0.9999999644174467	WITHOUT_CLASSIFICATION	3.558255338466469E-8	DEFECT
//axisLabelPaint;	WITHOUT_CLASSIFICATION	0.9999997050773148	WITHOUT_CLASSIFICATION	2.949226851491607E-7	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999994631587	WITHOUT_CLASSIFICATION	5.368414114140661E-10	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9999950874281054	WITHOUT_CLASSIFICATION	4.912571894631242E-6	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999996378841204	WITHOUT_CLASSIFICATION	3.621158796457894E-7	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9999994411874176	WITHOUT_CLASSIFICATION	5.588125825029681E-7	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.9999998285930954	WITHOUT_CLASSIFICATION	1.7140690442900095E-7	DEFECT
//SwtGraphics2D sg2 = new SwtGraphics2D(e.gc);	WITHOUT_CLASSIFICATION	0.9999998260712676	WITHOUT_CLASSIFICATION	1.739287323366339E-7	DEFECT
// do we need to fill the buffer?	WITHOUT_CLASSIFICATION	0.9999566611308958	WITHOUT_CLASSIFICATION	4.333886910423548E-5	DEFECT
// Performs the actual drawing here ...	WITHOUT_CLASSIFICATION	0.9999372627577234	WITHOUT_CLASSIFICATION	6.273724227656592E-5	DEFECT
// anti-aliasing	WITHOUT_CLASSIFICATION	0.9999999475257395	WITHOUT_CLASSIFICATION	5.247426043579676E-8	DEFECT
// zap the buffer onto the canvas...	WITHOUT_CLASSIFICATION	0.9999984058634214	WITHOUT_CLASSIFICATION	1.5941365786999967E-6	DEFECT
// or redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.9999989007182538	WITHOUT_CLASSIFICATION	1.0992817461465444E-6	DEFECT
// de-register the composite as a listener for the chart.	WITHOUT_CLASSIFICATION	0.9999999972751895	WITHOUT_CLASSIFICATION	2.724810492521777E-9	DEFECT
// AXIS 2	WITHOUT_CLASSIFICATION	0.9999742102407635	WITHOUT_CLASSIFICATION	2.5789759236466895E-5	DEFECT
// AXIS 3	WITHOUT_CLASSIFICATION	0.9999722958999921	WITHOUT_CLASSIFICATION	2.7704100007746294E-5	DEFECT
//axis3.setPositiveArrowVisible(true);	WITHOUT_CLASSIFICATION	0.9999464041439594	WITHOUT_CLASSIFICATION	5.359585604053759E-5	DEFECT
// AXIS 4	WITHOUT_CLASSIFICATION	0.9999760923808133	WITHOUT_CLASSIFICATION	2.3907619186695115E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.999965798069896	WITHOUT_CLASSIFICATION	3.4201930103982656E-5	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999994087752669	WITHOUT_CLASSIFICATION	5.912247330389444E-7	DEFECT
// NOW DO SOME OPTIONAL CUSTOMISATION OF THE CHART...	WITHOUT_CLASSIFICATION	0.9999632188774537	WITHOUT_CLASSIFICATION	3.678112254642519E-5	DEFECT
// get a reference to the plot for further customisation...	WITHOUT_CLASSIFICATION	0.9999988889318955	WITHOUT_CLASSIFICATION	1.1110681045746697E-6	DEFECT
// set the range axis to display integers only...	WITHOUT_CLASSIFICATION	0.999924818265793	WITHOUT_CLASSIFICATION	7.51817342069738E-5	DEFECT
// disable bar outlines...	WITHOUT_CLASSIFICATION	0.9999884290243183	WITHOUT_CLASSIFICATION	1.1570975681744171E-5	DEFECT
// OPTIONAL CUSTOMISATION COMPLETED.	WITHOUT_CLASSIFICATION	0.9999997516542853	WITHOUT_CLASSIFICATION	2.483457147437232E-7	DEFECT
// chart title // data // include legend	WITHOUT_CLASSIFICATION	0.9999993456444646	WITHOUT_CLASSIFICATION	6.543555353984088E-7	DEFECT
//frame.setDisplayToolTips(false);	WITHOUT_CLASSIFICATION	0.9999991889433242	WITHOUT_CLASSIFICATION	8.11056675948643E-7	DEFECT
// row 1: antialiasing	WITHOUT_CLASSIFICATION	0.9999967948752867	WITHOUT_CLASSIFICATION	3.2051247133566638E-6	DEFECT
//row 2: background paint for the chart	WITHOUT_CLASSIFICATION	0.999999497802125	WITHOUT_CLASSIFICATION	5.02197874971365E-7	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.999991661736276	WITHOUT_CLASSIFICATION	8.338263724157898E-6	DEFECT
//empty cell // row 2	WITHOUT_CLASSIFICATION	0.9999978610448433	WITHOUT_CLASSIFICATION	2.138955156785257E-6	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999999505181445	WITHOUT_CLASSIFICATION	4.9481855566113474E-8	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999999381312333	WITHOUT_CLASSIFICATION	6.186876665041095E-8	DEFECT
// build second tab	WITHOUT_CLASSIFICATION	0.9999987350401334	WITHOUT_CLASSIFICATION	1.2649598666877555E-6	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9998014180400427	WITHOUT_CLASSIFICATION	1.9858195995718287E-4	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.9999933246458302	WITHOUT_CLASSIFICATION	6.675354169837318E-6	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.999991661736276	WITHOUT_CLASSIFICATION	8.338263724157898E-6	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999999505181445	WITHOUT_CLASSIFICATION	4.9481855566113474E-8	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999999505181445	WITHOUT_CLASSIFICATION	4.9481855566113474E-8	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999999381312333	WITHOUT_CLASSIFICATION	6.186876665041095E-8	DEFECT
// check a regular value	WITHOUT_CLASSIFICATION	0.9999999468077381	WITHOUT_CLASSIFICATION	5.319226200635563E-8	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999999109681977	WITHOUT_CLASSIFICATION	8.90318023042428E-8	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999999109681977	WITHOUT_CLASSIFICATION	8.90318023042428E-8	DEFECT
//label.setFont(font);	WITHOUT_CLASSIFICATION	0.9999992602543735	WITHOUT_CLASSIFICATION	7.397456266424366E-7	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9999909059328633	WITHOUT_CLASSIFICATION	9.094067136656158E-6	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9999909059328633	WITHOUT_CLASSIFICATION	9.094067136656158E-6	DEFECT
// Use a colored text field to show the color	WITHOUT_CLASSIFICATION	0.9999998931875879	WITHOUT_CLASSIFICATION	1.0681241222704143E-7	DEFECT
//tickLabelFontField.setFont(SwtUtils.toSwtFontData(getDisplay(), // axis.getTickLabelFont()));	WITHOUT_CLASSIFICATION	0.9999999732421774	WITHOUT_CLASSIFICATION	2.675782265226051E-8	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999999768547561	WITHOUT_CLASSIFICATION	2.3145243985472563E-8	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999999768547561	WITHOUT_CLASSIFICATION	2.3145243985472563E-8	DEFECT
//tickLabelFontField.setFont(font);	WITHOUT_CLASSIFICATION	0.9999994495864483	WITHOUT_CLASSIFICATION	5.50413551679378E-7	DEFECT
// return the appropriate axis editor	WITHOUT_CLASSIFICATION	0.9999994840892326	WITHOUT_CLASSIFICATION	5.15910767375863E-7	DEFECT
//this.minimumRangeValue.addModifyListener(this); //this.minimumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.9999997013658717	WITHOUT_CLASSIFICATION	2.9863412828247655E-7	DEFECT
//this.maximumRangeValue.addModifyListener(this); //this.maximumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.9999990402279026	WITHOUT_CLASSIFICATION	9.597720973957251E-7	DEFECT
// verify min value	WITHOUT_CLASSIFICATION	0.9999976981334924	WITHOUT_CLASSIFICATION	2.3018665076511177E-6	DEFECT
// verify max value	WITHOUT_CLASSIFICATION	0.9999964079845028	WITHOUT_CLASSIFICATION	3.5920154971818875E-6	DEFECT
//deal with domain axis	WITHOUT_CLASSIFICATION	0.9999984142546696	WITHOUT_CLASSIFICATION	1.5857453303465002E-6	DEFECT
//deal with range axis	WITHOUT_CLASSIFICATION	0.9999993384452677	WITHOUT_CLASSIFICATION	6.615547323656794E-7	DEFECT
//deal with plot appearance	WITHOUT_CLASSIFICATION	0.999990700130993	WITHOUT_CLASSIFICATION	9.299869007059497E-6	DEFECT
// set the axis properties	WITHOUT_CLASSIFICATION	0.9999998157651172	WITHOUT_CLASSIFICATION	1.8423488269028453E-7	DEFECT
// row 1: stroke	WITHOUT_CLASSIFICATION	0.9998591190497192	WITHOUT_CLASSIFICATION	1.4088095028079773E-4	DEFECT
// row 3: background paint	WITHOUT_CLASSIFICATION	0.9999924880391212	WITHOUT_CLASSIFICATION	7.511960878775617E-6	DEFECT
// row 4: orientation	WITHOUT_CLASSIFICATION	0.9999024324943688	WITHOUT_CLASSIFICATION	9.756750563122116E-5	DEFECT
// row 2	WITHOUT_CLASSIFICATION	0.9999915335852485	WITHOUT_CLASSIFICATION	8.466414751601146E-6	DEFECT
//titleField.setFont(font);	WITHOUT_CLASSIFICATION	0.9999974397726566	WITHOUT_CLASSIFICATION	2.5602273433895075E-6	DEFECT
// row 4	WITHOUT_CLASSIFICATION	0.9999921370375778	WITHOUT_CLASSIFICATION	7.862962422169222E-6	DEFECT
// build first tab	WITHOUT_CLASSIFICATION	0.999999964552316	WITHOUT_CLASSIFICATION	3.544768397925257E-8	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9999337699263718	WITHOUT_CLASSIFICATION	6.623007362817465E-5	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999994860727632	WITHOUT_CLASSIFICATION	5.13927236793679E-7	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999429999692734	WITHOUT_CLASSIFICATION	5.7000030726676794E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.999965798069896	WITHOUT_CLASSIFICATION	3.4201930103982656E-5	DEFECT
// since this is only used by clearRect(), we don't update the GC yet	WITHOUT_CLASSIFICATION	0.9999995416560953	WITHOUT_CLASSIFICATION	4.5834390469978303E-7	DEFECT
// build the third tab	WITHOUT_CLASSIFICATION	0.9999999300068222	WITHOUT_CLASSIFICATION	6.999317778881243E-8	DEFECT
// ok and cancel buttons	WITHOUT_CLASSIFICATION	0.9999999297420124	WITHOUT_CLASSIFICATION	7.025798768369785E-8	DEFECT
// to be consistent with other Graphics2D implementations	WITHOUT_CLASSIFICATION	0.999998862834789	WITHOUT_CLASSIFICATION	1.137165210958372E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999941155494353	WITHOUT_CLASSIFICATION	5.884450564787066E-6	DEFECT
// apply dash style if any	WITHOUT_CLASSIFICATION	0.9999998448532591	WITHOUT_CLASSIFICATION	1.5514674088619527E-7	DEFECT
// handle transparency and compositing.	WITHOUT_CLASSIFICATION	0.9999999742326067	WITHOUT_CLASSIFICATION	2.5767393358583045E-8	DEFECT
// we can't use the following valueOf() method, because it // won't compile with JDK1.4 // this.colorsPool.get(Integer.valueOf(awtColor.getRGB()));	WITHOUT_CLASSIFICATION	0.9999980764109606	WITHOUT_CLASSIFICATION	1.9235890393974154E-6	DEFECT
// set the line style to solid by default	WITHOUT_CLASSIFICATION	0.9999999815955432	WITHOUT_CLASSIFICATION	1.8404456861568572E-8	DEFECT
// retrieve the swt font description in an os indept way	WITHOUT_CLASSIFICATION	0.9999963474630756	WITHOUT_CLASSIFICATION	3.6525369245142403E-6	DEFECT
// Note that for consistency with the AWT implementation, it is // necessary to switch temporarily the foreground and background // colours	WITHOUT_CLASSIFICATION	0.9999999573796533	WITHOUT_CLASSIFICATION	4.262034664895158E-8	DEFECT
// for now we simply want to extract the chars from the iterator // and call an unstyled text renderer	WITHOUT_CLASSIFICATION	0.9999999327420277	WITHOUT_CLASSIFICATION	6.72579722827075E-8	DEFECT
// create a new awt font with the appropiate data	WITHOUT_CLASSIFICATION	0.9999984751704287	WITHOUT_CLASSIFICATION	1.524829571278709E-6	DEFECT
// we dispose resources we own but user must dispose gc	WITHOUT_CLASSIFICATION	0.9999970081814371	WITHOUT_CLASSIFICATION	2.991818562820713E-6	DEFECT
// see comment above //this.colorsPool.put(Integer.valueOf(awtColor.getRGB()), swtColor);	WITHOUT_CLASSIFICATION	0.999999952456504	WITHOUT_CLASSIFICATION	4.7543496002624396E-8	DEFECT
// SWT and AWT share the same style constants.	WITHOUT_CLASSIFICATION	0.9999982953391909	WITHOUT_CLASSIFICATION	1.7046608090778732E-6	DEFECT
// convert the font size (in pt for awt) to height in pixels for swt	WITHOUT_CLASSIFICATION	0.999972878584144	WITHOUT_CLASSIFICATION	2.712141585609901E-5	DEFECT
//this.myColor = new Color(getDisplay(), color.getRGB());	WITHOUT_CLASSIFICATION	0.9999998769277271	WITHOUT_CLASSIFICATION	1.2307227290454824E-7	DEFECT
// renderingHints	WITHOUT_CLASSIFICATION	0.9999987126001233	WITHOUT_CLASSIFICATION	1.287399876707588E-6	DEFECT
// borderStroke	WITHOUT_CLASSIFICATION	0.9999793253085908	WITHOUT_CLASSIFICATION	2.0674691409209016E-5	DEFECT
// borderVisible	WITHOUT_CLASSIFICATION	0.9999998493831808	WITHOUT_CLASSIFICATION	1.5061681912975535E-7	DEFECT
// borderPaint	WITHOUT_CLASSIFICATION	0.9999999111549388	WITHOUT_CLASSIFICATION	8.884506118746647E-8	DEFECT
// title	WITHOUT_CLASSIFICATION	0.9999852944093915	WITHOUT_CLASSIFICATION	1.4705590608422725E-5	DEFECT
// subtitles	WITHOUT_CLASSIFICATION	0.9999992007694212	WITHOUT_CLASSIFICATION	7.992305788871706E-7	DEFECT
// plot	WITHOUT_CLASSIFICATION	0.9999950703445611	WITHOUT_CLASSIFICATION	4.929655438951294E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999991130733075	WITHOUT_CLASSIFICATION	8.869266924822745E-7	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999994280569565	WITHOUT_CLASSIFICATION	5.719430435158071E-7	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.9999993687141803	WITHOUT_CLASSIFICATION	6.312858197026755E-7	DEFECT
// no event is generated if the dataset is already empty	WITHOUT_CLASSIFICATION	0.9999999989637507	WITHOUT_CLASSIFICATION	1.03624938798055E-9	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999996378841204	WITHOUT_CLASSIFICATION	3.621158796457894E-7	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999996378841204	WITHOUT_CLASSIFICATION	3.621158796457894E-7	DEFECT
// try a Double.POSITIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999988513719679	WITHOUT_CLASSIFICATION	1.1486280321317246E-6	DEFECT
// adding something to the returned list should NOT change the chart	WITHOUT_CLASSIFICATION	0.9999999999047878	WITHOUT_CLASSIFICATION	9.521216283712455E-11	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999996627359561	WITHOUT_CLASSIFICATION	3.372640439017323E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999996627359561	WITHOUT_CLASSIFICATION	3.372640439017323E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999996627359561	WITHOUT_CLASSIFICATION	3.372640439017323E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999996627359561	WITHOUT_CLASSIFICATION	3.372640439017323E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999996627359561	WITHOUT_CLASSIFICATION	3.372640439017323E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999996627359561	WITHOUT_CLASSIFICATION	3.372640439017323E-6	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.9999999800478996	WITHOUT_CLASSIFICATION	1.9952100476318854E-8	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999994381759865	WITHOUT_CLASSIFICATION	5.618240135164826E-7	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999986321886333	WITHOUT_CLASSIFICATION	1.3678113667628158E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999999166607167	WITHOUT_CLASSIFICATION	8.333928326799094E-8	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999995619430513	WITHOUT_CLASSIFICATION	4.3805694868471003E-7	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.9999991043646675	WITHOUT_CLASSIFICATION	8.956353325577266E-7	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999994088845096	WITHOUT_CLASSIFICATION	5.911154905087713E-7	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999999166607167	WITHOUT_CLASSIFICATION	8.333928326799094E-8	DEFECT
// the clone references the same dataset as the original	WITHOUT_CLASSIFICATION	0.9999993036430479	WITHOUT_CLASSIFICATION	6.963569521859195E-7	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999999166607167	WITHOUT_CLASSIFICATION	8.333928326799094E-8	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999999166607167	WITHOUT_CLASSIFICATION	8.333928326799094E-8	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999999166607167	WITHOUT_CLASSIFICATION	8.333928326799094E-8	DEFECT
// data // include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.9999999197302832	WITHOUT_CLASSIFICATION	8.026971675646335E-8	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999960099231333	WITHOUT_CLASSIFICATION	3.99007686661801E-6	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999854387360324	WITHOUT_CLASSIFICATION	1.4561263967606654E-5	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999854387360324	WITHOUT_CLASSIFICATION	1.4561263967606654E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999960099231333	WITHOUT_CLASSIFICATION	3.99007686661801E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999960099231333	WITHOUT_CLASSIFICATION	3.99007686661801E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999960099231333	WITHOUT_CLASSIFICATION	3.99007686661801E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999960099231333	WITHOUT_CLASSIFICATION	3.99007686661801E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999960099231333	WITHOUT_CLASSIFICATION	3.99007686661801E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999925638190775	WITHOUT_CLASSIFICATION	7.43618092244919E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999925638190775	WITHOUT_CLASSIFICATION	7.43618092244919E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999925638190775	WITHOUT_CLASSIFICATION	7.43618092244919E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999925638190775	WITHOUT_CLASSIFICATION	7.43618092244919E-6	DEFECT
/* BufferedImage img =*/	WITHOUT_CLASSIFICATION	0.9998245680949375	WITHOUT_CLASSIFICATION	1.75431905062406E-4	DEFECT
// try a listener type that isn't registered	WITHOUT_CLASSIFICATION	0.9999976596310125	WITHOUT_CLASSIFICATION	2.3403689873832273E-6	DEFECT
// name	WITHOUT_CLASSIFICATION	0.9999984678024377	WITHOUT_CLASSIFICATION	1.5321975622837312E-6	DEFECT
//extraLargeFont	WITHOUT_CLASSIFICATION	0.9999987202860866	WITHOUT_CLASSIFICATION	1.2797139133859605E-6	DEFECT
//largeFont	WITHOUT_CLASSIFICATION	0.9999989776533825	WITHOUT_CLASSIFICATION	1.0223466175588166E-6	DEFECT
//regularFont;	WITHOUT_CLASSIFICATION	0.9999973026362368	WITHOUT_CLASSIFICATION	2.6973637632138645E-6	DEFECT
//titlePaint;	WITHOUT_CLASSIFICATION	0.9999973145623348	WITHOUT_CLASSIFICATION	2.6854376651865348E-6	DEFECT
//subtitlePaint;	WITHOUT_CLASSIFICATION	0.9999985247716494	WITHOUT_CLASSIFICATION	1.4752283505471583E-6	DEFECT
//chartBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999974009997662	WITHOUT_CLASSIFICATION	2.5990002337033502E-6	DEFECT
//legendBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999909757363442	WITHOUT_CLASSIFICATION	9.024263655823896E-6	DEFECT
//legendItemPaint;	WITHOUT_CLASSIFICATION	0.9999983081304448	WITHOUT_CLASSIFICATION	1.6918695552589766E-6	DEFECT
//drawingSupplier;	WITHOUT_CLASSIFICATION	0.9999995249767191	WITHOUT_CLASSIFICATION	4.7502328096452956E-7	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.9999970561802833	WITHOUT_CLASSIFICATION	2.943819716588394E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999996627359561	WITHOUT_CLASSIFICATION	3.372640439017323E-6	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999991734592091	WITHOUT_CLASSIFICATION	8.265407909470131E-7	DEFECT
//tickLabelPaint;	WITHOUT_CLASSIFICATION	0.9999996551054601	WITHOUT_CLASSIFICATION	3.448945400224248E-7	DEFECT
//itemLabelPaint;	WITHOUT_CLASSIFICATION	0.9999997566275791	WITHOUT_CLASSIFICATION	2.4337242093875654E-7	DEFECT
//shadowVisible;	WITHOUT_CLASSIFICATION	0.9999947283524928	WITHOUT_CLASSIFICATION	5.271647507109099E-6	DEFECT
//shadowPaint;	WITHOUT_CLASSIFICATION	0.9999978854701319	WITHOUT_CLASSIFICATION	2.1145298681165265E-6	DEFECT
//barPainter;	WITHOUT_CLASSIFICATION	0.9999985768591628	WITHOUT_CLASSIFICATION	1.4231408372626092E-6	DEFECT
//xyBarPainter;	WITHOUT_CLASSIFICATION	0.9999948506175093	WITHOUT_CLASSIFICATION	5.149382490809882E-6	DEFECT
//thermometerPaint;	WITHOUT_CLASSIFICATION	0.9999997301188802	WITHOUT_CLASSIFICATION	2.6988111979518083E-7	DEFECT
//wallPaint;	WITHOUT_CLASSIFICATION	0.9999889744275768	WITHOUT_CLASSIFICATION	1.102557242310934E-5	DEFECT
//errorIndicatorPaint;	WITHOUT_CLASSIFICATION	0.9999757635883636	WITHOUT_CLASSIFICATION	2.423641163642483E-5	DEFECT
//gridBandAlternatePaint	WITHOUT_CLASSIFICATION	0.9999515346299447	WITHOUT_CLASSIFICATION	4.846537005541854E-5	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.9999995433825131	WITHOUT_CLASSIFICATION	4.566174869550879E-7	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.9999999233113843	WITHOUT_CLASSIFICATION	7.668861569867908E-8	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.9999999233113843	WITHOUT_CLASSIFICATION	7.668861569867908E-8	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.9999999312655261	WITHOUT_CLASSIFICATION	6.873447384136693E-8	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.9999990887710936	WITHOUT_CLASSIFICATION	9.112289064299991E-7	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.9999990887710936	WITHOUT_CLASSIFICATION	9.112289064299991E-7	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.9999996972887006	WITHOUT_CLASSIFICATION	3.027112993443262E-7	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9995774932934591	WITHOUT_CLASSIFICATION	4.2250670654091514E-4	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9995774932934591	WITHOUT_CLASSIFICATION	4.2250670654091514E-4	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9999938669730135	WITHOUT_CLASSIFICATION	6.133026986433732E-6	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9999938669730135	WITHOUT_CLASSIFICATION	6.133026986433732E-6	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.9999999366094645	WITHOUT_CLASSIFICATION	6.339053545487634E-8	DEFECT
// text	WITHOUT_CLASSIFICATION	0.9999905099589065	WITHOUT_CLASSIFICATION	9.490041093457536E-6	DEFECT
// text	WITHOUT_CLASSIFICATION	0.9999905099589065	WITHOUT_CLASSIFICATION	9.490041093457536E-6	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999909476045062	WITHOUT_CLASSIFICATION	9.052395493759259E-6	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999902493905981	WITHOUT_CLASSIFICATION	9.750609401940848E-6	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999959635658641	WITHOUT_CLASSIFICATION	4.036434135856703E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999985751251291	WITHOUT_CLASSIFICATION	1.4248748707762862E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999985751251291	WITHOUT_CLASSIFICATION	1.4248748707762862E-6	DEFECT
// rotation anchor	WITHOUT_CLASSIFICATION	0.9999988373081137	WITHOUT_CLASSIFICATION	1.1626918863389105E-6	DEFECT
// rotation angle	WITHOUT_CLASSIFICATION	0.999997805759705	WITHOUT_CLASSIFICATION	2.1942402950244706E-6	DEFECT
// text anchor	WITHOUT_CLASSIFICATION	0.9999987008387333	WITHOUT_CLASSIFICATION	1.2991612666136757E-6	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.9999975173712291	WITHOUT_CLASSIFICATION	2.4826287709041307E-6	DEFECT
// rotationAnchor	WITHOUT_CLASSIFICATION	0.9999986286548832	WITHOUT_CLASSIFICATION	1.3713451168617257E-6	DEFECT
// rotationAngle	WITHOUT_CLASSIFICATION	0.9999976868908896	WITHOUT_CLASSIFICATION	2.3131091104660254E-6	DEFECT
// category 1	WITHOUT_CLASSIFICATION	0.9999980141459542	WITHOUT_CLASSIFICATION	1.985854045852408E-6	DEFECT
// category 2	WITHOUT_CLASSIFICATION	0.9999981314959416	WITHOUT_CLASSIFICATION	1.868504058433657E-6	DEFECT
// value 2	WITHOUT_CLASSIFICATION	0.9999973509802391	WITHOUT_CLASSIFICATION	2.649019760873826E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999715636844497	WITHOUT_CLASSIFICATION	2.8436315550338392E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662895915	WITHOUT_CLASSIFICATION	3.5033710408440565E-5	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999994381759865	WITHOUT_CLASSIFICATION	5.618240135164826E-7	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999715636844497	WITHOUT_CLASSIFICATION	2.8436315550338392E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662895915	WITHOUT_CLASSIFICATION	3.5033710408440565E-5	DEFECT
// category	WITHOUT_CLASSIFICATION	0.9999988735731942	WITHOUT_CLASSIFICATION	1.126426805862973E-6	DEFECT
// categoryAnchor	WITHOUT_CLASSIFICATION	0.9999991707062014	WITHOUT_CLASSIFICATION	8.292937987083429E-7	DEFECT
// value	WITHOUT_CLASSIFICATION	0.9999982678121448	WITHOUT_CLASSIFICATION	1.7321878551365495E-6	DEFECT
// x0	WITHOUT_CLASSIFICATION	0.9999949449084723	WITHOUT_CLASSIFICATION	5.055091527672561E-6	DEFECT
// tickUnit	WITHOUT_CLASSIFICATION	0.9999960924303687	WITHOUT_CLASSIFICATION	3.9075696312664394E-6	DEFECT
// tickMarkPosition	WITHOUT_CLASSIFICATION	0.9999957335946372	WITHOUT_CLASSIFICATION	4.266405362779044E-6	DEFECT
// timeline	WITHOUT_CLASSIFICATION	0.9999993994930361	WITHOUT_CLASSIFICATION	6.00506963937884E-7	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999994908630715	WITHOUT_CLASSIFICATION	5.091369284865388E-7	DEFECT
// check that setting the min date to something on or after the // current min date works...	WITHOUT_CLASSIFICATION	0.9998128361148475	WITHOUT_CLASSIFICATION	1.8716388515261937E-4	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999984027762142	WITHOUT_CLASSIFICATION	1.5972237858213584E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999983746913298	WITHOUT_CLASSIFICATION	1.6253086702429577E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999983746913298	WITHOUT_CLASSIFICATION	1.6253086702429577E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999983746913298	WITHOUT_CLASSIFICATION	1.6253086702429577E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999983746913298	WITHOUT_CLASSIFICATION	1.6253086702429577E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999983746913298	WITHOUT_CLASSIFICATION	1.6253086702429577E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999983746913298	WITHOUT_CLASSIFICATION	1.6253086702429577E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999983746913298	WITHOUT_CLASSIFICATION	1.6253086702429577E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999983746913298	WITHOUT_CLASSIFICATION	1.6253086702429577E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999976177279501	WITHOUT_CLASSIFICATION	2.382272049869478E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999976177279501	WITHOUT_CLASSIFICATION	2.382272049869478E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999976177279501	WITHOUT_CLASSIFICATION	2.382272049869478E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999976177279501	WITHOUT_CLASSIFICATION	2.382272049869478E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999976177279501	WITHOUT_CLASSIFICATION	2.382272049869478E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999976177279501	WITHOUT_CLASSIFICATION	2.382272049869478E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999976177279501	WITHOUT_CLASSIFICATION	2.382272049869478E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999976177279501	WITHOUT_CLASSIFICATION	2.382272049869478E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999974486926528	WITHOUT_CLASSIFICATION	2.551307347167356E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999974486926528	WITHOUT_CLASSIFICATION	2.551307347167356E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999974486926528	WITHOUT_CLASSIFICATION	2.551307347167356E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999974486926528	WITHOUT_CLASSIFICATION	2.551307347167356E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999974486926528	WITHOUT_CLASSIFICATION	2.551307347167356E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999974486926528	WITHOUT_CLASSIFICATION	2.551307347167356E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999974486926528	WITHOUT_CLASSIFICATION	2.551307347167356E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999974486926528	WITHOUT_CLASSIFICATION	2.551307347167356E-6	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999976594004865	WITHOUT_CLASSIFICATION	2.3405995135730257E-6	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999976594004865	WITHOUT_CLASSIFICATION	2.3405995135730257E-6	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.9999957934614935	WITHOUT_CLASSIFICATION	4.20653850657576E-6	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.9999978749982592	WITHOUT_CLASSIFICATION	2.1250017407216424E-6	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.9999978749982592	WITHOUT_CLASSIFICATION	2.1250017407216424E-6	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.9999957934614935	WITHOUT_CLASSIFICATION	4.20653850657576E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999991734592091	WITHOUT_CLASSIFICATION	8.265407909470131E-7	DEFECT
// now repeat for a vertical axis	WITHOUT_CLASSIFICATION	0.9999991778132641	WITHOUT_CLASSIFICATION	8.221867359867804E-7	DEFECT
// set start and end date	WITHOUT_CLASSIFICATION	0.9999998749616511	WITHOUT_CLASSIFICATION	1.250383488608721E-7	DEFECT
// if the bug is still present, this leads to an endless loop	WITHOUT_CLASSIFICATION	0.9989219475656472	WITHOUT_CLASSIFICATION	0.0010780524343528134	DEFECT
//private boolean autoRangeIncludesZero;	WITHOUT_CLASSIFICATION	0.9999997033916075	WITHOUT_CLASSIFICATION	2.9660839253548576E-7	DEFECT
//private NumberTickUnit tickUnit;	WITHOUT_CLASSIFICATION	0.9999995984527632	WITHOUT_CLASSIFICATION	4.0154723678636503E-7	DEFECT
//private NumberFormat numberFormatOverride;	WITHOUT_CLASSIFICATION	0.9999984296871413	WITHOUT_CLASSIFICATION	1.5703128587229908E-6	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999996998648987	WITHOUT_CLASSIFICATION	3.0013510136564777E-7	DEFECT
//axis.setRangeType(RangeType.POSITIVE); //axis.setLowerBound(-5.0); //assertEquals(0.0, axis.getLowerBound(), EPSILON);	WITHOUT_CLASSIFICATION	0.9999992610922913	WITHOUT_CLASSIFICATION	7.38907708603542E-7	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999992042720893	WITHOUT_CLASSIFICATION	7.95727910663333E-7	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999996015410153	WITHOUT_CLASSIFICATION	3.984589847137998E-7	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999998729049565	WITHOUT_CLASSIFICATION	1.2709504356206993E-7	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.9999995002479437	WITHOUT_CLASSIFICATION	4.997520563855552E-7	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999999356106155	WITHOUT_CLASSIFICATION	6.438938449404047E-8	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999999356106155	WITHOUT_CLASSIFICATION	6.438938449404047E-8	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9999984996186918	WITHOUT_CLASSIFICATION	1.5003813082535532E-6	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9999984996186918	WITHOUT_CLASSIFICATION	1.5003813082535532E-6	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.9999986834655791	WITHOUT_CLASSIFICATION	1.3165344208155593E-6	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.9999996216413595	WITHOUT_CLASSIFICATION	3.7835864055216066E-7	DEFECT
// categoryMargin	WITHOUT_CLASSIFICATION	0.9999991186682319	WITHOUT_CLASSIFICATION	8.813317681627248E-7	DEFECT
// maxCategoryLabelWidthRatio	WITHOUT_CLASSIFICATION	0.9999998483839664	WITHOUT_CLASSIFICATION	1.5161603367127357E-7	DEFECT
// categoryLabelPositionOffset	WITHOUT_CLASSIFICATION	0.9999998888389535	WITHOUT_CLASSIFICATION	1.1116104646485283E-7	DEFECT
// categoryLabelPositions	WITHOUT_CLASSIFICATION	0.9999999266179633	WITHOUT_CLASSIFICATION	7.338203662092298E-8	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999992042720893	WITHOUT_CLASSIFICATION	7.95727910663333E-7	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999996015410153	WITHOUT_CLASSIFICATION	3.984589847137998E-7	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999998729049565	WITHOUT_CLASSIFICATION	1.2709504356206993E-7	DEFECT
// 4-ms test base timeline for ms2Timeline using 1 included and 1 // excluded segments // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //  \__________  _________/            \____  _____/ //             \/                           \/ //        segment group              segment size = 4 ms //	WITHOUT_CLASSIFICATION	0.9999999105722878	WITHOUT_CLASSIFICATION	8.942771223685249E-8	DEFECT
// categoryLabelToolTips	WITHOUT_CLASSIFICATION	0.9999999798964082	WITHOUT_CLASSIFICATION	2.0103591797383093E-8	DEFECT
// categoryLabelURLs	WITHOUT_CLASSIFICATION	0.9999998962153507	WITHOUT_CLASSIFICATION	1.0378464927809153E-7	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999997566781205	WITHOUT_CLASSIFICATION	2.433218794725955E-7	DEFECT
// tickLabelPaint2	WITHOUT_CLASSIFICATION	0.9999996849644115	WITHOUT_CLASSIFICATION	3.1503558851351354E-7	DEFECT
// period	WITHOUT_CLASSIFICATION	0.9999926742205273	WITHOUT_CLASSIFICATION	7.325779472646884E-6	DEFECT
// offset	WITHOUT_CLASSIFICATION	0.9999971245576725	WITHOUT_CLASSIFICATION	2.875442327537906E-6	DEFECT
// advance line Stroke	WITHOUT_CLASSIFICATION	0.9999863794355746	WITHOUT_CLASSIFICATION	1.3620564425461276E-5	DEFECT
// advance line Visible	WITHOUT_CLASSIFICATION	0.999999886519376	WITHOUT_CLASSIFICATION	1.1348062391953107E-7	DEFECT
// cycle bound mapping	WITHOUT_CLASSIFICATION	0.9999990885112975	WITHOUT_CLASSIFICATION	9.114887025015867E-7	DEFECT
// Create a segmented time line (segment size : 15 minutes)	WITHOUT_CLASSIFICATION	0.9999979198048768	WITHOUT_CLASSIFICATION	2.080195123221469E-6	DEFECT
// Set start time	WITHOUT_CLASSIFICATION	0.9999996320961475	WITHOUT_CLASSIFICATION	3.679038524633082E-7	DEFECT
/* PUT exclusions in test */	WITHOUT_CLASSIFICATION	0.9999851344594011	WITHOUT_CLASSIFICATION	1.4865540598993165E-5	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9998305855049077	WITHOUT_CLASSIFICATION	1.6941449509238736E-4	DEFECT
// test 9am-4pm Monday through Friday timeline	WITHOUT_CLASSIFICATION	0.9999989596941862	WITHOUT_CLASSIFICATION	1.0403058137640324E-6	DEFECT
// calculate 9am on the first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.9999454848938176	WITHOUT_CLASSIFICATION	5.451510618229502E-5	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999998555832786	WITHOUT_CLASSIFICATION	1.4441672143567847E-7	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999998555832786	WITHOUT_CLASSIFICATION	1.4441672143567847E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // test one-segment and adjacent segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998017432367	WITHOUT_CLASSIFICATION	1.9825676339253147E-7	DEFECT
// get two consecutive segments for various tests	WITHOUT_CLASSIFICATION	0.9999992141414804	WITHOUT_CLASSIFICATION	7.85858519488331E-7	DEFECT
// verify segments are consecutive and correct	WITHOUT_CLASSIFICATION	0.9994828156029615	WITHOUT_CLASSIFICATION	5.171843970384786E-4	DEFECT
// verify various indices inside a segment are the same segment	WITHOUT_CLASSIFICATION	0.9999817738026462	WITHOUT_CLASSIFICATION	1.8226197353815505E-5	DEFECT
// try next segment	WITHOUT_CLASSIFICATION	0.9999912154635157	WITHOUT_CLASSIFICATION	8.784536484364228E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test inc methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996044491114	WITHOUT_CLASSIFICATION	3.955508886773249E-7	DEFECT
// test inc() method	WITHOUT_CLASSIFICATION	0.9999987324255103	WITHOUT_CLASSIFICATION	1.2675744897421242E-6	DEFECT
// logically consecutive segments non-physically consecutive // (with non-contained time in between)	WITHOUT_CLASSIFICATION	0.9999987488197525	WITHOUT_CLASSIFICATION	1.2511802475812122E-6	DEFECT
// physically consecutive	WITHOUT_CLASSIFICATION	0.9999954543599056	WITHOUT_CLASSIFICATION	4.545640094469599E-6	DEFECT
// test inc(n) method	WITHOUT_CLASSIFICATION	0.9999982576301647	WITHOUT_CLASSIFICATION	1.742369835307738E-6	DEFECT
// go to another segment to continue test	WITHOUT_CLASSIFICATION	0.9999999652564747	WITHOUT_CLASSIFICATION	3.474352518719136E-8	DEFECT
// clear any exceptions in this timeline	WITHOUT_CLASSIFICATION	0.9999921877621513	WITHOUT_CLASSIFICATION	7.812237848758191E-6	DEFECT
// test some included and excluded segments	WITHOUT_CLASSIFICATION	0.999999536847619	WITHOUT_CLASSIFICATION	4.631523809902735E-7	DEFECT
// should be an included segment	WITHOUT_CLASSIFICATION	0.9999953329971963	WITHOUT_CLASSIFICATION	4.667002803657624E-6	DEFECT
// should be an excluded segment	WITHOUT_CLASSIFICATION	0.999993642239152	WITHOUT_CLASSIFICATION	6.357760848006233E-6	DEFECT
// fill in the exceptions	WITHOUT_CLASSIFICATION	0.9999989137788491	WITHOUT_CLASSIFICATION	1.0862211510053486E-6	DEFECT
// verify list of exceptions	WITHOUT_CLASSIFICATION	0.9999998865967463	WITHOUT_CLASSIFICATION	1.1340325371274538E-7	DEFECT
// include current exception and last one	WITHOUT_CLASSIFICATION	0.999999908629552	WITHOUT_CLASSIFICATION	9.137044801477685E-8	DEFECT
// exclude current exception and last one	WITHOUT_CLASSIFICATION	0.9999999522454602	WITHOUT_CLASSIFICATION	4.7754539721113084E-8	DEFECT
// make sure there are no exceptions	WITHOUT_CLASSIFICATION	0.9999999874950394	WITHOUT_CLASSIFICATION	1.2504960588130876E-8	DEFECT
// add our exceptions and store locally in ArrayList of Longs	WITHOUT_CLASSIFICATION	0.9999977184957196	WITHOUT_CLASSIFICATION	2.281504280312482E-6	DEFECT
// only add an exception if it is currently an included segment	WITHOUT_CLASSIFICATION	0.9999105167141474	WITHOUT_CLASSIFICATION	8.948328585253438E-5	DEFECT
// make array of exceptions	WITHOUT_CLASSIFICATION	0.999997980066278	WITHOUT_CLASSIFICATION	2.019933721829154E-6	DEFECT
// add the base timeline exclusions as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999999952282927	WITHOUT_CLASSIFICATION	4.771707302701769E-9	DEFECT
// validate base timeline exclusions added as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999999457687692	WITHOUT_CLASSIFICATION	5.4231230887472555E-8	DEFECT
// start time...	WITHOUT_CLASSIFICATION	0.9999988338073161	WITHOUT_CLASSIFICATION	1.1661926838065903E-6	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.999995024220664	WITHOUT_CLASSIFICATION	4.97577933594702E-6	DEFECT
//long v = stl.toTimelineValue(946684800020L);	WITHOUT_CLASSIFICATION	0.9999987113250036	WITHOUT_CLASSIFICATION	1.2886749963101777E-6	DEFECT
// tick labels visible flag...	WITHOUT_CLASSIFICATION	0.9999555834754261	WITHOUT_CLASSIFICATION	4.441652457388122E-5	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.9999986834655791	WITHOUT_CLASSIFICATION	1.3165344208155593E-6	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.9999996216413595	WITHOUT_CLASSIFICATION	3.7835864055216066E-7	DEFECT
// the reverse transformed value will be in the start of the // next non-excluded and non-exception segment	WITHOUT_CLASSIFICATION	0.9999999944032774	WITHOUT_CLASSIFICATION	5.596722690232514E-9	DEFECT
////////////////////////////////////////////////////////////////////////// // test serialization //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998221069063	WITHOUT_CLASSIFICATION	1.778930936930944E-7	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.9999999832786399	WITHOUT_CLASSIFICATION	1.67213599978388E-8	DEFECT
////////////////////////////////////////////////////////////////////////// // utility methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998441198116	WITHOUT_CLASSIFICATION	1.5588018839116663E-7	DEFECT
// subcategories	WITHOUT_CLASSIFICATION	0.9999999562415727	WITHOUT_CLASSIFICATION	4.375842729344036E-8	DEFECT
// subLabelFont	WITHOUT_CLASSIFICATION	0.9999999244584659	WITHOUT_CLASSIFICATION	7.554153415386774E-8	DEFECT
// subLabelPaint	WITHOUT_CLASSIFICATION	0.9999999758069967	WITHOUT_CLASSIFICATION	2.4193003280082625E-8	DEFECT
// some checks that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999290546973	WITHOUT_CLASSIFICATION	7.094530267197703E-8	DEFECT
// visible flag...	WITHOUT_CLASSIFICATION	0.9999946489290925	WITHOUT_CLASSIFICATION	5.351070907512802E-6	DEFECT
// label...	WITHOUT_CLASSIFICATION	0.999992063569255	WITHOUT_CLASSIFICATION	7.936430744984E-6	DEFECT
// label font...	WITHOUT_CLASSIFICATION	0.9999399048347996	WITHOUT_CLASSIFICATION	6.0095165200370954E-5	DEFECT
// label paint...	WITHOUT_CLASSIFICATION	0.9999833635587996	WITHOUT_CLASSIFICATION	1.6636441200410737E-5	DEFECT
// attributed label...	WITHOUT_CLASSIFICATION	0.9999988377442293	WITHOUT_CLASSIFICATION	1.162255770752929E-6	DEFECT
// label insets...	WITHOUT_CLASSIFICATION	0.9999924672846243	WITHOUT_CLASSIFICATION	7.532715375661612E-6	DEFECT
// label angle...	WITHOUT_CLASSIFICATION	0.9999888463390435	WITHOUT_CLASSIFICATION	1.115366095647408E-5	DEFECT
// label location...	WITHOUT_CLASSIFICATION	0.9999905504533818	WITHOUT_CLASSIFICATION	9.449546618143412E-6	DEFECT
// axis line visible...	WITHOUT_CLASSIFICATION	0.999998448806945	WITHOUT_CLASSIFICATION	1.551193054967321E-6	DEFECT
// axis line stroke...	WITHOUT_CLASSIFICATION	0.9999205357808748	WITHOUT_CLASSIFICATION	7.946421912517441E-5	DEFECT
// axis line paint...	WITHOUT_CLASSIFICATION	0.9999973454887033	WITHOUT_CLASSIFICATION	2.654511296636946E-6	DEFECT
// tick label font...	WITHOUT_CLASSIFICATION	0.9998953996115288	WITHOUT_CLASSIFICATION	1.0460038847112069E-4	DEFECT
// tick label paint...	WITHOUT_CLASSIFICATION	0.9999753313863503	WITHOUT_CLASSIFICATION	2.4668613649809327E-5	DEFECT
// tick marks visible flag...	WITHOUT_CLASSIFICATION	0.9999799941790531	WITHOUT_CLASSIFICATION	2.0005820946912557E-5	DEFECT
// tick mark inside length...	WITHOUT_CLASSIFICATION	0.9999664841580894	WITHOUT_CLASSIFICATION	3.3515841910608226E-5	DEFECT
// tick mark outside length...	WITHOUT_CLASSIFICATION	0.9999944505108505	WITHOUT_CLASSIFICATION	5.5494891495723405E-6	DEFECT
// tick mark stroke...	WITHOUT_CLASSIFICATION	0.9997283241990642	WITHOUT_CLASSIFICATION	2.71675800935817E-4	DEFECT
// fixed dimension...	WITHOUT_CLASSIFICATION	0.9997560780311477	WITHOUT_CLASSIFICATION	2.4392196885237541E-4	DEFECT
// axis line visible flag...	WITHOUT_CLASSIFICATION	0.999998002685188	WITHOUT_CLASSIFICATION	1.997314811967704E-6	DEFECT
// positiveArrowVisible;	WITHOUT_CLASSIFICATION	0.999996433848231	WITHOUT_CLASSIFICATION	3.566151769096793E-6	DEFECT
//private Shape upArrow;	WITHOUT_CLASSIFICATION	0.9999971025989137	WITHOUT_CLASSIFICATION	2.8974010863442756E-6	DEFECT
//private Shape downArrow;	WITHOUT_CLASSIFICATION	0.999992649555499	WITHOUT_CLASSIFICATION	7.350444501034232E-6	DEFECT
//private Shape leftArrow;	WITHOUT_CLASSIFICATION	0.9999938419190035	WITHOUT_CLASSIFICATION	6.158080996377806E-6	DEFECT
//private Shape rightArrow;	WITHOUT_CLASSIFICATION	0.9999566946364611	WITHOUT_CLASSIFICATION	4.330536353891611E-5	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.9999978015937546	WITHOUT_CLASSIFICATION	2.1984062453439747E-6	DEFECT
// inverted	WITHOUT_CLASSIFICATION	0.999999669164874	WITHOUT_CLASSIFICATION	3.3083512598044536E-7	DEFECT
//private TickUnits standardTickUnits;	WITHOUT_CLASSIFICATION	0.9999983585821454	WITHOUT_CLASSIFICATION	1.6414178546566378E-6	DEFECT
// verticalTickLabels	WITHOUT_CLASSIFICATION	0.9999998693246092	WITHOUT_CLASSIFICATION	1.3067539095853473E-7	DEFECT
// time zone	WITHOUT_CLASSIFICATION	0.9999973300526259	WITHOUT_CLASSIFICATION	2.6699473740709053E-6	DEFECT
// locale	WITHOUT_CLASSIFICATION	0.9999982785486466	WITHOUT_CLASSIFICATION	1.7214513533171494E-6	DEFECT
// chars	WITHOUT_CLASSIFICATION	0.9999998965422175	WITHOUT_CLASSIFICATION	1.034577825275544E-7	DEFECT
// showYear[]	WITHOUT_CLASSIFICATION	0.9999997222653482	WITHOUT_CLASSIFICATION	2.777346518338457E-7	DEFECT
// yearFormatter	WITHOUT_CLASSIFICATION	0.9999834030705953	WITHOUT_CLASSIFICATION	1.6596929404701435E-5	DEFECT
// NONE / NONE	WITHOUT_CLASSIFICATION	0.999999594711238	WITHOUT_CLASSIFICATION	4.0528876202219084E-7	DEFECT
// NONE / RANGE	WITHOUT_CLASSIFICATION	0.9999989760289836	WITHOUT_CLASSIFICATION	1.0239710164052648E-6	DEFECT
// NONE / FIXED	WITHOUT_CLASSIFICATION	0.9999441271504119	WITHOUT_CLASSIFICATION	5.5872849587963406E-5	DEFECT
// RANGE / NONE	WITHOUT_CLASSIFICATION	0.999996029179796	WITHOUT_CLASSIFICATION	3.970820203919504E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999985751251291	WITHOUT_CLASSIFICATION	1.4248748707762862E-6	DEFECT
// RANGE / RANGE	WITHOUT_CLASSIFICATION	0.9999873315751312	WITHOUT_CLASSIFICATION	1.2668424868911867E-5	DEFECT
// RANGE / FIXED	WITHOUT_CLASSIFICATION	0.9982556587231883	WITHOUT_CLASSIFICATION	0.0017443412768117267	DEFECT
// FIXED / NONE	WITHOUT_CLASSIFICATION	0.9999309949662529	WITHOUT_CLASSIFICATION	6.900503374703004E-5	DEFECT
// FIXED / RANGE	WITHOUT_CLASSIFICATION	0.9994437886250302	WITHOUT_CLASSIFICATION	5.562113749697826E-4	DEFECT
// FIXED / FIXED	WITHOUT_CLASSIFICATION	0.9996475697626926	WITHOUT_CLASSIFICATION	3.5243023730732785E-4	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.9999709328247047	WITHOUT_CLASSIFICATION	2.9067175295190518E-5	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.9999709328247047	WITHOUT_CLASSIFICATION	2.9067175295190518E-5	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.9999996974449644	WITHOUT_CLASSIFICATION	3.0255503564157687E-7	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.9999996974449644	WITHOUT_CLASSIFICATION	3.0255503564157687E-7	DEFECT
// try case where right item is shorter than center item	WITHOUT_CLASSIFICATION	0.9998063692947287	WITHOUT_CLASSIFICATION	1.9363070527129265E-4	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.9999887604783511	WITHOUT_CLASSIFICATION	1.1239521649012752E-5	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9999999406255017	WITHOUT_CLASSIFICATION	5.937449825302307E-8	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9999999406255017	WITHOUT_CLASSIFICATION	5.937449825302307E-8	DEFECT
// try case where left item is shorter than center item	WITHOUT_CLASSIFICATION	0.9999761199482043	WITHOUT_CLASSIFICATION	2.388005179567333E-5	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9999989058680625	WITHOUT_CLASSIFICATION	1.0941319374666613E-6	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.9999997692850048	WITHOUT_CLASSIFICATION	2.3071499525386596E-7	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.9999935024150417	WITHOUT_CLASSIFICATION	6.497584958348479E-6	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9999997859030516	WITHOUT_CLASSIFICATION	2.140969483036379E-7	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.9999965841943228	WITHOUT_CLASSIFICATION	3.4158056771624907E-6	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.9999937477888519	WITHOUT_CLASSIFICATION	6.2522111480812764E-6	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.9999982993155666	WITHOUT_CLASSIFICATION	1.7006844333716764E-6	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9999970312706697	WITHOUT_CLASSIFICATION	2.9687293302134078E-6	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.9999974055577693	WITHOUT_CLASSIFICATION	2.5944422307023527E-6	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9999967013474804	WITHOUT_CLASSIFICATION	3.2986525196382526E-6	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.9999977014085387	WITHOUT_CLASSIFICATION	2.2985914612052926E-6	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.999998347092456	WITHOUT_CLASSIFICATION	1.6529075438937466E-6	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.9999988757074352	WITHOUT_CLASSIFICATION	1.1242925648358761E-6	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9999959463452645	WITHOUT_CLASSIFICATION	4.053654735606666E-6	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999997335362324	WITHOUT_CLASSIFICATION	2.6646376763256545E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9999989058680625	WITHOUT_CLASSIFICATION	1.0941319374666613E-6	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.9999997692850048	WITHOUT_CLASSIFICATION	2.3071499525386596E-7	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.9999935024150417	WITHOUT_CLASSIFICATION	6.497584958348479E-6	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9999997859030516	WITHOUT_CLASSIFICATION	2.140969483036379E-7	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.9999965841943228	WITHOUT_CLASSIFICATION	3.4158056771624907E-6	DEFECT
// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.9999995902181726	WITHOUT_CLASSIFICATION	4.0978182742269466E-7	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999992910941846	WITHOUT_CLASSIFICATION	7.089058152719186E-7	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.9999999475773225	WITHOUT_CLASSIFICATION	5.242267739791001E-8	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.9999986651352222	WITHOUT_CLASSIFICATION	1.3348647778827478E-6	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.9999991244399833	WITHOUT_CLASSIFICATION	8.755600166901371E-7	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9999929578308692	WITHOUT_CLASSIFICATION	7.04216913089093E-6	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.9999993528307868	WITHOUT_CLASSIFICATION	6.471692132056618E-7	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.9999827854357989	WITHOUT_CLASSIFICATION	1.7214564201099717E-5	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9999975972205211	WITHOUT_CLASSIFICATION	2.402779478949881E-6	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.9999967976182553	WITHOUT_CLASSIFICATION	3.2023817447617493E-6	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9999996572997122	WITHOUT_CLASSIFICATION	3.427002878172913E-7	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.9999982993155666	WITHOUT_CLASSIFICATION	1.7006844333716764E-6	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.9999998428783782	WITHOUT_CLASSIFICATION	1.5712162188741818E-7	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.9999998919501975	WITHOUT_CLASSIFICATION	1.0804980263327571E-7	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.9999998919501975	WITHOUT_CLASSIFICATION	1.0804980263327571E-7	DEFECT
// date format	WITHOUT_CLASSIFICATION	0.9999971903055074	WITHOUT_CLASSIFICATION	2.8096944926522534E-6	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.9999994653610345	WITHOUT_CLASSIFICATION	5.346389655311558E-7	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999945150510996	WITHOUT_CLASSIFICATION	5.484948900394499E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999945150510996	WITHOUT_CLASSIFICATION	5.484948900394499E-6	DEFECT
// another test...	WITHOUT_CLASSIFICATION	0.9999969950235709	WITHOUT_CLASSIFICATION	3.0049764291264565E-6	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999975171479517	WITHOUT_CLASSIFICATION	2.4828520483384008E-6	DEFECT
// format string...	WITHOUT_CLASSIFICATION	0.9999970955789365	WITHOUT_CLASSIFICATION	2.904421063529108E-6	DEFECT
// x number format	WITHOUT_CLASSIFICATION	0.9999993855063791	WITHOUT_CLASSIFICATION	6.144936208784815E-7	DEFECT
// y number format	WITHOUT_CLASSIFICATION	0.9999992644377201	WITHOUT_CLASSIFICATION	7.355622798429115E-7	DEFECT
// z number format	WITHOUT_CLASSIFICATION	0.9999997679429407	WITHOUT_CLASSIFICATION	2.3205705929758078E-7	DEFECT
// x date format	WITHOUT_CLASSIFICATION	0.9999962711564424	WITHOUT_CLASSIFICATION	3.728843557666926E-6	DEFECT
// y date format	WITHOUT_CLASSIFICATION	0.9999969768631863	WITHOUT_CLASSIFICATION	3.0231368137817597E-6	DEFECT
// z date format	WITHOUT_CLASSIFICATION	0.999998846918936	WITHOUT_CLASSIFICATION	1.1530810639379378E-6	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9998945780405626	WITHOUT_CLASSIFICATION	1.0542195943741803E-4	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.999998953970956	WITHOUT_CLASSIFICATION	1.0460290440478401E-6	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.9999986210241663	WITHOUT_CLASSIFICATION	1.3789758336705364E-6	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9999982486401503	WITHOUT_CLASSIFICATION	1.7513598496186591E-6	DEFECT
// separatorsVisible	WITHOUT_CLASSIFICATION	0.9999999619646368	WITHOUT_CLASSIFICATION	3.803536321047038E-8	DEFECT
// separatorStroke	WITHOUT_CLASSIFICATION	0.9999984474957051	WITHOUT_CLASSIFICATION	1.5525042949585663E-6	DEFECT
// separatorPaint	WITHOUT_CLASSIFICATION	0.999999985145143	WITHOUT_CLASSIFICATION	1.4854856980462413E-8	DEFECT
// outerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999989562380852	WITHOUT_CLASSIFICATION	1.043761914805578E-6	DEFECT
// sectionDepth	WITHOUT_CLASSIFICATION	0.9999995025488033	WITHOUT_CLASSIFICATION	4.974511966518334E-7	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.9999714501566155	WITHOUT_CLASSIFICATION	2.8549843384405313E-5	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.9999941509660121	WITHOUT_CLASSIFICATION	5.8490339879356216E-6	DEFECT
// domainAxes...	WITHOUT_CLASSIFICATION	0.9999840995010669	WITHOUT_CLASSIFICATION	1.5900498933141364E-5	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.9999994976689109	WITHOUT_CLASSIFICATION	5.02331089116955E-7	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.9999974055577693	WITHOUT_CLASSIFICATION	2.5944422307023527E-6	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9999967013474804	WITHOUT_CLASSIFICATION	3.2986525196382526E-6	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.9999985799702952	WITHOUT_CLASSIFICATION	1.420029704893608E-6	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.9999977014085387	WITHOUT_CLASSIFICATION	2.2985914612052926E-6	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.999998347092456	WITHOUT_CLASSIFICATION	1.6529075438937466E-6	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.9999988757074352	WITHOUT_CLASSIFICATION	1.1242925648358761E-6	DEFECT
// check handling when the dataset is a regular XYDataset, not an // XYZDataset...	WITHOUT_CLASSIFICATION	0.999454154938647	WITHOUT_CLASSIFICATION	5.458450613530555E-4	DEFECT
// domainAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999405377755123	WITHOUT_CLASSIFICATION	5.946222448773937E-5	DEFECT
// domainAxisLocations...	WITHOUT_CLASSIFICATION	0.9999961693273085	WITHOUT_CLASSIFICATION	3.830672691535075E-6	DEFECT
// draw shared domain axis...	WITHOUT_CLASSIFICATION	0.9999997371239936	WITHOUT_CLASSIFICATION	2.6287600633199366E-7	DEFECT
// rangeAxes...	WITHOUT_CLASSIFICATION	0.9999973842011597	WITHOUT_CLASSIFICATION	2.615798840355994E-6	DEFECT
// rangeAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999360034887665	WITHOUT_CLASSIFICATION	6.399651123337073E-5	DEFECT
// rangeAxisLocations...	WITHOUT_CLASSIFICATION	0.9999989315990268	WITHOUT_CLASSIFICATION	1.0684009732961262E-6	DEFECT
// datasetToDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999948034577543	WITHOUT_CLASSIFICATION	5.196542245711895E-6	DEFECT
// datasetToRangeAxisMap...	WITHOUT_CLASSIFICATION	0.9999667796412943	WITHOUT_CLASSIFICATION	3.322035870561672E-5	DEFECT
// renderers...	WITHOUT_CLASSIFICATION	0.9999810166699041	WITHOUT_CLASSIFICATION	1.8983330095961285E-5	DEFECT
// rendering order...	WITHOUT_CLASSIFICATION	0.9999165654974577	WITHOUT_CLASSIFICATION	8.343450254225786E-5	DEFECT
// columnRenderingOrder...	WITHOUT_CLASSIFICATION	0.999974057150958	WITHOUT_CLASSIFICATION	2.5942849042042446E-5	DEFECT
// rowRenderingOrder...	WITHOUT_CLASSIFICATION	0.9998627414546887	WITHOUT_CLASSIFICATION	1.3725854531130755E-4	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.999999885699468	WITHOUT_CLASSIFICATION	1.1430053209091655E-7	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.9999862474723763	WITHOUT_CLASSIFICATION	1.375252762379204E-5	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.9999996708499153	WITHOUT_CLASSIFICATION	3.2915008471232574E-7	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999999546366709	WITHOUT_CLASSIFICATION	4.536332909205068E-8	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.999990534788692	WITHOUT_CLASSIFICATION	9.465211308015627E-6	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.999999919534411	WITHOUT_CLASSIFICATION	8.046558889446867E-8	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999996415503187	WITHOUT_CLASSIFICATION	3.584496813073369E-7	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.9999996162396441	WITHOUT_CLASSIFICATION	3.837603559727662E-7	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999910402114568	WITHOUT_CLASSIFICATION	8.959788543135026E-6	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999997537647092	WITHOUT_CLASSIFICATION	2.462352908384769E-7	DEFECT
// foreground domain markers	WITHOUT_CLASSIFICATION	0.9999999160101497	WITHOUT_CLASSIFICATION	8.398985029141443E-8	DEFECT
// background domain markers	WITHOUT_CLASSIFICATION	0.999999883979139	WITHOUT_CLASSIFICATION	1.1602086100220347E-7	DEFECT
// foreground range markers...	WITHOUT_CLASSIFICATION	0.9999977843746756	WITHOUT_CLASSIFICATION	2.215625324416924E-6	DEFECT
// background range markers...	WITHOUT_CLASSIFICATION	0.99999693940937	WITHOUT_CLASSIFICATION	3.060590630092442E-6	DEFECT
// annotations	WITHOUT_CLASSIFICATION	0.999999507515162	WITHOUT_CLASSIFICATION	4.924848380783709E-7	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.9999952572054782	WITHOUT_CLASSIFICATION	4.742794521794159E-6	DEFECT
// fixed domain axis space...	WITHOUT_CLASSIFICATION	0.9999710526145749	WITHOUT_CLASSIFICATION	2.894738542517528E-5	DEFECT
// fixed range axis space...	WITHOUT_CLASSIFICATION	0.9999868942247988	WITHOUT_CLASSIFICATION	1.3105775201223225E-5	DEFECT
// crosshairDatasetIndex	WITHOUT_CLASSIFICATION	0.9999922863203043	WITHOUT_CLASSIFICATION	7.713679695624554E-6	DEFECT
// domainCrosshairColumnKey	WITHOUT_CLASSIFICATION	0.9999994518479576	WITHOUT_CLASSIFICATION	5.481520423457982E-7	DEFECT
// domainCrosshairRowKey	WITHOUT_CLASSIFICATION	0.9999990068692748	WITHOUT_CLASSIFICATION	9.931307252409898E-7	DEFECT
// domainCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999995025012236	WITHOUT_CLASSIFICATION	4.974987763020713E-7	DEFECT
// domainCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999875645894089	WITHOUT_CLASSIFICATION	1.2435410591012587E-5	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999999528304847	WITHOUT_CLASSIFICATION	4.7169515388233494E-8	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999996680953415	WITHOUT_CLASSIFICATION	3.319046585220453E-7	DEFECT
// we didn't get an exception so all is good	WITHOUT_CLASSIFICATION	0.9999917312134626	WITHOUT_CLASSIFICATION	8.268786537457306E-6	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999952708932416	WITHOUT_CLASSIFICATION	4.729106758445338E-6	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999952708932416	WITHOUT_CLASSIFICATION	4.729106758445338E-6	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.9999882578540507	WITHOUT_CLASSIFICATION	1.1742145949261219E-5	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999986321886333	WITHOUT_CLASSIFICATION	1.3678113667628158E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999995619430513	WITHOUT_CLASSIFICATION	4.3805694868471003E-7	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999991697573393	WITHOUT_CLASSIFICATION	8.30242660727204E-7	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999922087564372	WITHOUT_CLASSIFICATION	7.791243562741392E-6	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9998579606467078	WITHOUT_CLASSIFICATION	1.4203935329216218E-4	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999980600715568	WITHOUT_CLASSIFICATION	1.939928443313718E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999980600715568	WITHOUT_CLASSIFICATION	1.939928443313718E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999980600715568	WITHOUT_CLASSIFICATION	1.939928443313718E-6	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999970226749292	WITHOUT_CLASSIFICATION	2.9773250707542557E-6	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.9999842540536085	WITHOUT_CLASSIFICATION	1.57459463914933E-5	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999996768570664	WITHOUT_CLASSIFICATION	3.231429335302232E-7	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999996768570664	WITHOUT_CLASSIFICATION	3.231429335302232E-7	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9999978702320809	WITHOUT_CLASSIFICATION	2.1297679190396235E-6	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.9999979674809389	WITHOUT_CLASSIFICATION	2.0325190610540983E-6	DEFECT
// needle paint	WITHOUT_CLASSIFICATION	0.999999906525868	WITHOUT_CLASSIFICATION	9.34741319700381E-8	DEFECT
// value font	WITHOUT_CLASSIFICATION	0.999998035758834	WITHOUT_CLASSIFICATION	1.9642411660929638E-6	DEFECT
// value paint	WITHOUT_CLASSIFICATION	0.9999993645037788	WITHOUT_CLASSIFICATION	6.35496221232478E-7	DEFECT
// tick label font	WITHOUT_CLASSIFICATION	0.9999982917720786	WITHOUT_CLASSIFICATION	1.7082279214004308E-6	DEFECT
// tick label paint	WITHOUT_CLASSIFICATION	0.9999996022838294	WITHOUT_CLASSIFICATION	3.9771617053953084E-7	DEFECT
// tick label format	WITHOUT_CLASSIFICATION	0.9999995045697071	WITHOUT_CLASSIFICATION	4.954302929180761E-7	DEFECT
// tick paint	WITHOUT_CLASSIFICATION	0.9999989645530898	WITHOUT_CLASSIFICATION	1.0354469102046143E-6	DEFECT
// draw border	WITHOUT_CLASSIFICATION	0.9999998997596171	WITHOUT_CLASSIFICATION	1.0024038289314117E-7	DEFECT
// meter angle	WITHOUT_CLASSIFICATION	0.9999996066871897	WITHOUT_CLASSIFICATION	3.933128102684965E-7	DEFECT
//key	WITHOUT_CLASSIFICATION	0.9998536147099627	WITHOUT_CLASSIFICATION	1.46385290037239E-4	DEFECT
//paint	WITHOUT_CLASSIFICATION	0.9999931352271413	WITHOUT_CLASSIFICATION	6.864772858652292E-6	DEFECT
//stroke	WITHOUT_CLASSIFICATION	0.9998692271879036	WITHOUT_CLASSIFICATION	1.3077281209638707E-4	DEFECT
//outlinePaint	WITHOUT_CLASSIFICATION	0.9999969763516773	WITHOUT_CLASSIFICATION	3.023648322676561E-6	DEFECT
//outlineStroke	WITHOUT_CLASSIFICATION	0.9997920752584917	WITHOUT_CLASSIFICATION	2.0792474150834855E-4	DEFECT
//alpha	WITHOUT_CLASSIFICATION	0.9999927996381343	WITHOUT_CLASSIFICATION	7.20036186574891E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999993332777465	WITHOUT_CLASSIFICATION	6.667222534893024E-7	DEFECT
// drawBorder	WITHOUT_CLASSIFICATION	0.9999994616509261	WITHOUT_CLASSIFICATION	5.383490738252004E-7	DEFECT
// rosePaint	WITHOUT_CLASSIFICATION	0.9999998031228219	WITHOUT_CLASSIFICATION	1.9687717805233256E-7	DEFECT
// roseCenterPaint	WITHOUT_CLASSIFICATION	0.9999998874919788	WITHOUT_CLASSIFICATION	1.1250802129247258E-7	DEFECT
// roseHighlightPaint	WITHOUT_CLASSIFICATION	0.9999997841173288	WITHOUT_CLASSIFICATION	2.1588267125948463E-7	DEFECT
// interiorGap...	WITHOUT_CLASSIFICATION	0.999987785698791	WITHOUT_CLASSIFICATION	1.221430120900777E-5	DEFECT
// circular	WITHOUT_CLASSIFICATION	0.9999998731375502	WITHOUT_CLASSIFICATION	1.2686244974306408E-7	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.9999840743063702	WITHOUT_CLASSIFICATION	1.5925693629898348E-5	DEFECT
// ignoreNullValues	WITHOUT_CLASSIFICATION	0.9999999397768167	WITHOUT_CLASSIFICATION	6.022318340358837E-8	DEFECT
// sectionPaint	WITHOUT_CLASSIFICATION	0.9999997875099537	WITHOUT_CLASSIFICATION	2.1249004635951866E-7	DEFECT
// sectionPaintMap	WITHOUT_CLASSIFICATION	0.9999997788471764	WITHOUT_CLASSIFICATION	2.211528235130325E-7	DEFECT
// baseSectionPaint	WITHOUT_CLASSIFICATION	0.9999998953888012	WITHOUT_CLASSIFICATION	1.0461119879959967E-7	DEFECT
// sectionOutlinePaint	WITHOUT_CLASSIFICATION	0.999999759330868	WITHOUT_CLASSIFICATION	2.406691319794734E-7	DEFECT
// sectionOutlinePaintList	WITHOUT_CLASSIFICATION	0.9999998241193406	WITHOUT_CLASSIFICATION	1.7588065936738166E-7	DEFECT
// baseSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999998815159241	WITHOUT_CLASSIFICATION	1.1848407585180521E-7	DEFECT
// sectionOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999884500260495	WITHOUT_CLASSIFICATION	1.1549973950365353E-5	DEFECT
// baseSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999953737140923	WITHOUT_CLASSIFICATION	4.626285907787792E-6	DEFECT
// shadowPaint	WITHOUT_CLASSIFICATION	0.999999663434443	WITHOUT_CLASSIFICATION	3.365655569745281E-7	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999988519061463	WITHOUT_CLASSIFICATION	1.1480938536116064E-6	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999996300427787	WITHOUT_CLASSIFICATION	3.699572212710362E-7	DEFECT
// labelOutlinePaint	WITHOUT_CLASSIFICATION	0.9999997389364016	WITHOUT_CLASSIFICATION	2.610635983896278E-7	DEFECT
// labelOutlineStroke	WITHOUT_CLASSIFICATION	0.9999794427563866	WITHOUT_CLASSIFICATION	2.0557243613359083E-5	DEFECT
// labelShadowPaint	WITHOUT_CLASSIFICATION	0.9999992567137926	WITHOUT_CLASSIFICATION	7.432862072660562E-7	DEFECT
// explodePercentages	WITHOUT_CLASSIFICATION	0.9999998082258553	WITHOUT_CLASSIFICATION	1.9177414468975955E-7	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999994860727632	WITHOUT_CLASSIFICATION	5.13927236793679E-7	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999998898499337	WITHOUT_CLASSIFICATION	1.1015006629734186E-7	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999994280569565	WITHOUT_CLASSIFICATION	5.719430435158071E-7	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.9999993687141803	WITHOUT_CLASSIFICATION	6.312858197026755E-7	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999994381759865	WITHOUT_CLASSIFICATION	5.618240135164826E-7	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999999528304847	WITHOUT_CLASSIFICATION	4.7169515388233494E-8	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.9999840743063702	WITHOUT_CLASSIFICATION	1.5925693629898348E-5	DEFECT
// labelLinkPaint	WITHOUT_CLASSIFICATION	0.9999997049068764	WITHOUT_CLASSIFICATION	2.95093123524509E-7	DEFECT
// maximumLabelWidth	WITHOUT_CLASSIFICATION	0.9999998954682768	WITHOUT_CLASSIFICATION	1.0453172314740242E-7	DEFECT
// links visible	WITHOUT_CLASSIFICATION	0.9999995849230234	WITHOUT_CLASSIFICATION	4.1507697658999976E-7	DEFECT
// labelGap	WITHOUT_CLASSIFICATION	0.9999994407740407	WITHOUT_CLASSIFICATION	5.592259593871185E-7	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999441421725	WITHOUT_CLASSIFICATION	5.585782742809065E-8	DEFECT
// linkMargin	WITHOUT_CLASSIFICATION	0.9999989033427474	WITHOUT_CLASSIFICATION	1.096657252485399E-6	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999989343240555	WITHOUT_CLASSIFICATION	1.0656759444908433E-6	DEFECT
// labelLinkStroke	WITHOUT_CLASSIFICATION	0.9999865995482804	WITHOUT_CLASSIFICATION	1.3400451719522063E-5	DEFECT
// minimumArcAngleToDraw	WITHOUT_CLASSIFICATION	0.999999959486591	WITHOUT_CLASSIFICATION	4.0513408951024795E-8	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999999601873452	WITHOUT_CLASSIFICATION	3.981265497772886E-8	DEFECT
// legendLabelGenerator	WITHOUT_CLASSIFICATION	0.9999998123682878	WITHOUT_CLASSIFICATION	1.876317122518551E-7	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999989343240555	WITHOUT_CLASSIFICATION	1.0656759444908433E-6	DEFECT
// legendLabelToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999673762296	WITHOUT_CLASSIFICATION	3.262377034057402E-8	DEFECT
// legendLabelURLGenerator	WITHOUT_CLASSIFICATION	0.9999998553274508	WITHOUT_CLASSIFICATION	1.4467254925601168E-7	DEFECT
// autoPopulateSectionPaint	WITHOUT_CLASSIFICATION	0.9999999627334504	WITHOUT_CLASSIFICATION	3.726654954069558E-8	DEFECT
// autoPopulateSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999013732758	WITHOUT_CLASSIFICATION	9.862672433763786E-8	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999992275035561	WITHOUT_CLASSIFICATION	7.724964439165413E-7	DEFECT
// autoPopulateSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999966009588589	WITHOUT_CLASSIFICATION	3.399041141210836E-6	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.9999983336795789	WITHOUT_CLASSIFICATION	1.6663204211052859E-6	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.9999983336795789	WITHOUT_CLASSIFICATION	1.6663204211052859E-6	DEFECT
// change the shape and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999994777819684	WITHOUT_CLASSIFICATION	5.22218031615969E-7	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999996532712786	WITHOUT_CLASSIFICATION	3.4672872133522324E-7	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999996532712786	WITHOUT_CLASSIFICATION	3.4672872133522324E-7	DEFECT
// check that null items are ignored if requested	WITHOUT_CLASSIFICATION	0.9999999989063677	WITHOUT_CLASSIFICATION	1.0936323155498662E-9	DEFECT
// check that zero items are ignored if requested	WITHOUT_CLASSIFICATION	0.9999999995786929	WITHOUT_CLASSIFICATION	4.2130710496655977E-10	DEFECT
// check that negative items are always ignored	WITHOUT_CLASSIFICATION	0.9999999936625789	WITHOUT_CLASSIFICATION	6.337421103252031E-9	DEFECT
// noDataMessage	WITHOUT_CLASSIFICATION	0.9999998411093806	WITHOUT_CLASSIFICATION	1.5889061956327771E-7	DEFECT
// noDataMessageFont	WITHOUT_CLASSIFICATION	0.9999998698668768	WITHOUT_CLASSIFICATION	1.3013312320532077E-7	DEFECT
// noDataMessagePaint	WITHOUT_CLASSIFICATION	0.9999998801913396	WITHOUT_CLASSIFICATION	1.1980866042085094E-7	DEFECT
// outlineVisible	WITHOUT_CLASSIFICATION	0.9999993035933582	WITHOUT_CLASSIFICATION	6.964066417820028E-7	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999613590629463	WITHOUT_CLASSIFICATION	3.864093705381899E-5	DEFECT
// foregroundAlpha	WITHOUT_CLASSIFICATION	0.9999993542535027	WITHOUT_CLASSIFICATION	6.457464972489379E-7	DEFECT
// backgroundAlpha	WITHOUT_CLASSIFICATION	0.9999982688235043	WITHOUT_CLASSIFICATION	1.731176495608014E-6	DEFECT
// drawingSupplier	WITHOUT_CLASSIFICATION	0.9999999068861599	WITHOUT_CLASSIFICATION	9.311384010345864E-8	DEFECT
// try a null collection	WITHOUT_CLASSIFICATION	0.9999936813001336	WITHOUT_CLASSIFICATION	6.318699866327574E-6	DEFECT
// dataExtractOrder	WITHOUT_CLASSIFICATION	0.9999997066473089	WITHOUT_CLASSIFICATION	2.9335269120102737E-7	DEFECT
// headPercent	WITHOUT_CLASSIFICATION	0.999999648301301	WITHOUT_CLASSIFICATION	3.51698699061584E-7	DEFECT
// interiorGap	WITHOUT_CLASSIFICATION	0.9999993056695757	WITHOUT_CLASSIFICATION	6.943304242018846E-7	DEFECT
// maxValue	WITHOUT_CLASSIFICATION	0.9999991291754148	WITHOUT_CLASSIFICATION	8.708245852101442E-7	DEFECT
// secondary renderers	WITHOUT_CLASSIFICATION	0.9999837065859577	WITHOUT_CLASSIFICATION	1.629341404231707E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999429999692734	WITHOUT_CLASSIFICATION	5.7000030726676794E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999429999692734	WITHOUT_CLASSIFICATION	5.7000030726676794E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.999965798069896	WITHOUT_CLASSIFICATION	3.4201930103982656E-5	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999941155494353	WITHOUT_CLASSIFICATION	5.884450564787066E-6	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.999965798069896	WITHOUT_CLASSIFICATION	3.4201930103982656E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.999965798069896	WITHOUT_CLASSIFICATION	3.4201930103982656E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.999965798069896	WITHOUT_CLASSIFICATION	3.4201930103982656E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999986321886333	WITHOUT_CLASSIFICATION	1.3678113667628158E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999995619430513	WITHOUT_CLASSIFICATION	4.3805694868471003E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662895915	WITHOUT_CLASSIFICATION	3.5033710408440565E-5	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.9999999643069265	WITHOUT_CLASSIFICATION	3.569307358840003E-8	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.9999978015937546	WITHOUT_CLASSIFICATION	2.1984062453439747E-6	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9998945780405626	WITHOUT_CLASSIFICATION	1.0542195943741803E-4	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.9999714501566155	WITHOUT_CLASSIFICATION	2.8549843384405313E-5	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.9999941509660121	WITHOUT_CLASSIFICATION	5.8490339879356216E-6	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.9999998699212086	WITHOUT_CLASSIFICATION	1.3007879145139473E-7	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999441421725	WITHOUT_CLASSIFICATION	5.585782742809065E-8	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999999601873452	WITHOUT_CLASSIFICATION	3.981265497772886E-8	DEFECT
// change a series paint	WITHOUT_CLASSIFICATION	0.9999999566117279	WITHOUT_CLASSIFICATION	4.3388272044362125E-8	DEFECT
// baseSeriesOutlineStroke	WITHOUT_CLASSIFICATION	0.9999971375844237	WITHOUT_CLASSIFICATION	2.862415576441385E-6	DEFECT
// valueFont	WITHOUT_CLASSIFICATION	0.9999983982525394	WITHOUT_CLASSIFICATION	1.6017474606440394E-6	DEFECT
// webFilled	WITHOUT_CLASSIFICATION	0.9999997789739251	WITHOUT_CLASSIFICATION	2.210260749373751E-7	DEFECT
// change a series outline paint	WITHOUT_CLASSIFICATION	0.9999999608268496	WITHOUT_CLASSIFICATION	3.9173150290162165E-8	DEFECT
// axisLabelGap	WITHOUT_CLASSIFICATION	0.9999999748124834	WITHOUT_CLASSIFICATION	2.5187516595277045E-8	DEFECT
// thermometerPaint	WITHOUT_CLASSIFICATION	0.9999996328450593	WITHOUT_CLASSIFICATION	3.6715494061845796E-7	DEFECT
// change the legendItemShape	WITHOUT_CLASSIFICATION	0.9999998979908998	WITHOUT_CLASSIFICATION	1.0200910015001499E-7	DEFECT
// secondary DomainAxisLocations...	WITHOUT_CLASSIFICATION	0.9999932311592945	WITHOUT_CLASSIFICATION	6.768840705430201E-6	DEFECT
// change a series outline stroke	WITHOUT_CLASSIFICATION	0.9999975563201277	WITHOUT_CLASSIFICATION	2.4436798723597546E-6	DEFECT
// valueLocation	WITHOUT_CLASSIFICATION	0.9999985573959843	WITHOUT_CLASSIFICATION	1.4426040157705006E-6	DEFECT
// thermometerStroke	WITHOUT_CLASSIFICATION	0.9999131026821273	WITHOUT_CLASSIFICATION	8.689731787271974E-5	DEFECT
// valuePaint	WITHOUT_CLASSIFICATION	0.9999993668216136	WITHOUT_CLASSIFICATION	6.331783864024986E-7	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999997777629145	WITHOUT_CLASSIFICATION	2.2223708557062352E-7	DEFECT
// showValueLines	WITHOUT_CLASSIFICATION	0.9999996882985791	WITHOUT_CLASSIFICATION	3.1170142090418394E-7	DEFECT
// domainAxisLocation...	WITHOUT_CLASSIFICATION	0.9999923304015976	WITHOUT_CLASSIFICATION	7.669598402328175E-6	DEFECT
// valueFormat	WITHOUT_CLASSIFICATION	0.9999992312056112	WITHOUT_CLASSIFICATION	7.687943888410279E-7	DEFECT
// this doesn't work	WITHOUT_CLASSIFICATION	0.9672342276007724	WITHOUT_CLASSIFICATION	0.03276577239922767	DEFECT
// mercuryPaint	WITHOUT_CLASSIFICATION	0.9999999151249105	WITHOUT_CLASSIFICATION	8.487508949234559E-8	DEFECT
// rangeAxisLocation...	WITHOUT_CLASSIFICATION	0.9999978608903081	WITHOUT_CLASSIFICATION	2.1391096920091437E-6	DEFECT
// domainAxis...	WITHOUT_CLASSIFICATION	0.9999902097843538	WITHOUT_CLASSIFICATION	9.790215646121949E-6	DEFECT
// secondary DomainAxes...	WITHOUT_CLASSIFICATION	0.9999685079267535	WITHOUT_CLASSIFICATION	3.1492073246393416E-5	DEFECT
// secondary RangeAxisLocations...	WITHOUT_CLASSIFICATION	0.9999189434080828	WITHOUT_CLASSIFICATION	8.105659191713613E-5	DEFECT
// rangeAxis...	WITHOUT_CLASSIFICATION	0.999998425420596	WITHOUT_CLASSIFICATION	1.57457940395032E-6	DEFECT
// renderer	WITHOUT_CLASSIFICATION	0.9999951711894298	WITHOUT_CLASSIFICATION	4.82881057017062E-6	DEFECT
// secondary RangeAxes...	WITHOUT_CLASSIFICATION	0.9996788141259162	WITHOUT_CLASSIFICATION	3.2118587408374195E-4	DEFECT
// secondaryDatasetRangeAxisMap...	WITHOUT_CLASSIFICATION	0.9997663997601784	WITHOUT_CLASSIFICATION	2.3360023982163392E-4	DEFECT
// secondary DatasetDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999600723486887	WITHOUT_CLASSIFICATION	3.9927651311274084E-5	DEFECT
// try a collection with a single number plus a null	WITHOUT_CLASSIFICATION	0.9999883935943045	WITHOUT_CLASSIFICATION	1.1606405695557103E-5	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999997335362324	WITHOUT_CLASSIFICATION	2.6646376763256545E-7	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999997335362324	WITHOUT_CLASSIFICATION	2.6646376763256545E-7	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999940093566276	WITHOUT_CLASSIFICATION	5.990643372379309E-6	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9998945780405626	WITHOUT_CLASSIFICATION	1.0542195943741803E-4	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.999998953970956	WITHOUT_CLASSIFICATION	1.0460290440478401E-6	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.9999986210241663	WITHOUT_CLASSIFICATION	1.3789758336705364E-6	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9996398227990357	WITHOUT_CLASSIFICATION	3.601772009642792E-4	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9999982486401503	WITHOUT_CLASSIFICATION	1.7513598496186591E-6	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.9999862474723763	WITHOUT_CLASSIFICATION	1.375252762379204E-5	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.9999996708499153	WITHOUT_CLASSIFICATION	3.2915008471232574E-7	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999999546366709	WITHOUT_CLASSIFICATION	4.536332909205068E-8	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.999990534788692	WITHOUT_CLASSIFICATION	9.465211308015627E-6	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999996415503187	WITHOUT_CLASSIFICATION	3.584496813073369E-7	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.9999996162396441	WITHOUT_CLASSIFICATION	3.837603559727662E-7	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999910402114568	WITHOUT_CLASSIFICATION	8.959788543135026E-6	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999997537647092	WITHOUT_CLASSIFICATION	2.462352908384769E-7	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.9999952572054782	WITHOUT_CLASSIFICATION	4.742794521794159E-6	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.9999974141186473	WITHOUT_CLASSIFICATION	2.5858813527393206E-6	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999999528304847	WITHOUT_CLASSIFICATION	4.7169515388233494E-8	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999952708932416	WITHOUT_CLASSIFICATION	4.729106758445338E-6	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.9999882578540507	WITHOUT_CLASSIFICATION	1.1742145949261219E-5	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9998579606467078	WITHOUT_CLASSIFICATION	1.4203935329216218E-4	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999980600715568	WITHOUT_CLASSIFICATION	1.939928443313718E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999980600715568	WITHOUT_CLASSIFICATION	1.939928443313718E-6	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999970226749292	WITHOUT_CLASSIFICATION	2.9773250707542557E-6	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999996768570664	WITHOUT_CLASSIFICATION	3.231429335302232E-7	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999996768570664	WITHOUT_CLASSIFICATION	3.231429335302232E-7	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9999978702320809	WITHOUT_CLASSIFICATION	2.1297679190396235E-6	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.9999979674809389	WITHOUT_CLASSIFICATION	2.0325190610540983E-6	DEFECT
// rangeZeroBaselineVisible	WITHOUT_CLASSIFICATION	0.9999998347900467	WITHOUT_CLASSIFICATION	1.6520995332468657E-7	DEFECT
// rangeZeroBaselineStroke	WITHOUT_CLASSIFICATION	0.9999968281081694	WITHOUT_CLASSIFICATION	3.1718918305884023E-6	DEFECT
// rangeZeroBaselinePaint	WITHOUT_CLASSIFICATION	0.9999998821644543	WITHOUT_CLASSIFICATION	1.1783554577778962E-7	DEFECT
// range markers	WITHOUT_CLASSIFICATION	0.9999998277400388	WITHOUT_CLASSIFICATION	1.7225996112101896E-7	DEFECT
// secondary range markers	WITHOUT_CLASSIFICATION	0.9999939018728591	WITHOUT_CLASSIFICATION	6.098127140826216E-6	DEFECT
// quadrant origin	WITHOUT_CLASSIFICATION	0.9999995664890525	WITHOUT_CLASSIFICATION	4.33510947486994E-7	DEFECT
// quadrant paint	WITHOUT_CLASSIFICATION	0.9999998702307457	WITHOUT_CLASSIFICATION	1.2976925441602783E-7	DEFECT
// verify that the plot is listening to the cloned renderer	WITHOUT_CLASSIFICATION	0.9999989567645232	WITHOUT_CLASSIFICATION	1.0432354767746448E-6	DEFECT
// no renderer 1	WITHOUT_CLASSIFICATION	0.9999984628261543	WITHOUT_CLASSIFICATION	1.5371738456619628E-6	DEFECT
// actually removes a1	WITHOUT_CLASSIFICATION	0.9999888253191552	WITHOUT_CLASSIFICATION	1.1174680844689538E-5	DEFECT
// set up some objects...	WITHOUT_CLASSIFICATION	0.9999997265552742	WITHOUT_CLASSIFICATION	2.734447258215511E-7	DEFECT
// paint sequence	WITHOUT_CLASSIFICATION	0.9999999298194456	WITHOUT_CLASSIFICATION	7.018055436759204E-8	DEFECT
// outline paint sequence	WITHOUT_CLASSIFICATION	0.9999998870254977	WITHOUT_CLASSIFICATION	1.1297450240556767E-7	DEFECT
// outline stroke sequence	WITHOUT_CLASSIFICATION	0.9999854500436124	WITHOUT_CLASSIFICATION	1.4549956387673301E-5	DEFECT
// shape sequence	WITHOUT_CLASSIFICATION	0.9999999467547662	WITHOUT_CLASSIFICATION	5.324523381264916E-8	DEFECT
// paint index	WITHOUT_CLASSIFICATION	0.9999713589021236	WITHOUT_CLASSIFICATION	2.8641097876410243E-5	DEFECT
// outline paint index	WITHOUT_CLASSIFICATION	0.9999669888752526	WITHOUT_CLASSIFICATION	3.301112474739222E-5	DEFECT
// outline stroke index	WITHOUT_CLASSIFICATION	0.9996457114973234	WITHOUT_CLASSIFICATION	3.5428850267657584E-4	DEFECT
// shape index	WITHOUT_CLASSIFICATION	0.999998044575206	WITHOUT_CLASSIFICATION	1.955424793870653E-6	DEFECT
// create dataset 2...	WITHOUT_CLASSIFICATION	0.9999996536200656	WITHOUT_CLASSIFICATION	3.463799343737784E-7	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999940093566276	WITHOUT_CLASSIFICATION	5.990643372379309E-6	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.999995830099615	WITHOUT_CLASSIFICATION	4.1699003849269134E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999998898499337	WITHOUT_CLASSIFICATION	1.1015006629734186E-7	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999965764457487	WITHOUT_CLASSIFICATION	3.423554251409287E-6	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.9999983405742983	WITHOUT_CLASSIFICATION	1.6594257017436855E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999991130733075	WITHOUT_CLASSIFICATION	8.869266924822745E-7	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999994381759865	WITHOUT_CLASSIFICATION	5.618240135164826E-7	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999959635658641	WITHOUT_CLASSIFICATION	4.036434135856703E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999985751251291	WITHOUT_CLASSIFICATION	1.4248748707762862E-6	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.9999975173712291	WITHOUT_CLASSIFICATION	2.4826287709041307E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999715636844497	WITHOUT_CLASSIFICATION	2.8436315550338392E-5	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.9999903372014487	WITHOUT_CLASSIFICATION	9.662798551227464E-6	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999922087564372	WITHOUT_CLASSIFICATION	7.791243562741392E-6	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.9999842540536085	WITHOUT_CLASSIFICATION	1.57459463914933E-5	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999613590629463	WITHOUT_CLASSIFICATION	3.864093705381899E-5	DEFECT
// check the case where there is a secondary dataset that doesn't // have a renderer (i.e. falls back to renderer 0)	WITHOUT_CLASSIFICATION	0.9985194380163727	WITHOUT_CLASSIFICATION	0.001480561983627441	DEFECT
// now remove a3, but since a3.equals(a1), this will in fact remove // a1...	WITHOUT_CLASSIFICATION	0.9906235084115904	WITHOUT_CLASSIFICATION	0.009376491588409645	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998412252641	WITHOUT_CLASSIFICATION	1.5877473592863765E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999756208013	WITHOUT_CLASSIFICATION	2.4379198747154597E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999756208013	WITHOUT_CLASSIFICATION	2.4379198747154597E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999756208013	WITHOUT_CLASSIFICATION	2.4379198747154597E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999756208013	WITHOUT_CLASSIFICATION	2.4379198747154597E-8	DEFECT
// visible	WITHOUT_CLASSIFICATION	0.9999994035002724	WITHOUT_CLASSIFICATION	5.964997275628853E-7	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999997826194682	WITHOUT_CLASSIFICATION	2.1738053171827208E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999998828421927	WITHOUT_CLASSIFICATION	1.1715780726967435E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999998828421927	WITHOUT_CLASSIFICATION	1.1715780726967435E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999998828421927	WITHOUT_CLASSIFICATION	1.1715780726967435E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999998828421927	WITHOUT_CLASSIFICATION	1.1715780726967435E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999998828421927	WITHOUT_CLASSIFICATION	1.1715780726967435E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999998828421927	WITHOUT_CLASSIFICATION	1.1715780726967435E-7	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999997826194682	WITHOUT_CLASSIFICATION	2.1738053171827208E-7	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999997826194682	WITHOUT_CLASSIFICATION	2.1738053171827208E-7	DEFECT
// foregroundPaint	WITHOUT_CLASSIFICATION	0.999999669167469	WITHOUT_CLASSIFICATION	3.308325310984473E-7	DEFECT
// background paint	WITHOUT_CLASSIFICATION	0.9999996987802708	WITHOUT_CLASSIFICATION	3.012197291113057E-7	DEFECT
// foreground paint	WITHOUT_CLASSIFICATION	0.9999998876420683	WITHOUT_CLASSIFICATION	1.1235793177432079E-7	DEFECT
// inner radius	WITHOUT_CLASSIFICATION	0.999999713188351	WITHOUT_CLASSIFICATION	2.8681164899057635E-7	DEFECT
// outer radius	WITHOUT_CLASSIFICATION	0.9999996414740651	WITHOUT_CLASSIFICATION	3.5852593495388593E-7	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.999987335015291	WITHOUT_CLASSIFICATION	1.2664984708913367E-5	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.999987335015291	WITHOUT_CLASSIFICATION	1.2664984708913367E-5	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.9999993414369672	WITHOUT_CLASSIFICATION	6.585630327187559E-7	DEFECT
// frameAnchor	WITHOUT_CLASSIFICATION	0.9999998524658965	WITHOUT_CLASSIFICATION	1.4753410353630143E-7	DEFECT
// templateValue	WITHOUT_CLASSIFICATION	0.9999995982256491	WITHOUT_CLASSIFICATION	4.0177435097516117E-7	DEFECT
// valueAnchor	WITHOUT_CLASSIFICATION	0.9999994534576182	WITHOUT_CLASSIFICATION	5.465423817654774E-7	DEFECT
// fill paint	WITHOUT_CLASSIFICATION	0.9999994939594827	WITHOUT_CLASSIFICATION	5.060405173568501E-7	DEFECT
// outline paint	WITHOUT_CLASSIFICATION	0.9999994950868454	WITHOUT_CLASSIFICATION	5.049131546785512E-7	DEFECT
// outline stroke	WITHOUT_CLASSIFICATION	0.9999867224487045	WITHOUT_CLASSIFICATION	1.3277551295577774E-5	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.999999944084445	WITHOUT_CLASSIFICATION	5.591555501394474E-8	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.9999995591066104	WITHOUT_CLASSIFICATION	4.408933896179981E-7	DEFECT
// background	WITHOUT_CLASSIFICATION	0.9999981223976557	WITHOUT_CLASSIFICATION	1.8776023443597413E-6	DEFECT
// dial cap	WITHOUT_CLASSIFICATION	0.9999852260917854	WITHOUT_CLASSIFICATION	1.4773908214547424E-5	DEFECT
// frame	WITHOUT_CLASSIFICATION	0.9999997122074835	WITHOUT_CLASSIFICATION	2.877925164779329E-7	DEFECT
// view	WITHOUT_CLASSIFICATION	0.9999937352813696	WITHOUT_CLASSIFICATION	6.264718630379149E-6	DEFECT
// layer	WITHOUT_CLASSIFICATION	0.9999947524743217	WITHOUT_CLASSIFICATION	5.2475256783447444E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999994381759865	WITHOUT_CLASSIFICATION	5.618240135164826E-7	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999959635658641	WITHOUT_CLASSIFICATION	4.036434135856703E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999985751251291	WITHOUT_CLASSIFICATION	1.4248748707762862E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999715636844497	WITHOUT_CLASSIFICATION	2.8436315550338392E-5	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999996826915163	WITHOUT_CLASSIFICATION	3.173084836278689E-7	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.9999991081286542	WITHOUT_CLASSIFICATION	8.918713456835322E-7	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999997566781205	WITHOUT_CLASSIFICATION	2.433218794725955E-7	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999613590629463	WITHOUT_CLASSIFICATION	3.864093705381899E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998412252641	WITHOUT_CLASSIFICATION	1.5877473592863765E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999756208013	WITHOUT_CLASSIFICATION	2.4379198747154597E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999756208013	WITHOUT_CLASSIFICATION	2.4379198747154597E-8	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999998828421927	WITHOUT_CLASSIFICATION	1.1715780726967435E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999998828421927	WITHOUT_CLASSIFICATION	1.1715780726967435E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999998828421927	WITHOUT_CLASSIFICATION	1.1715780726967435E-7	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999997826194682	WITHOUT_CLASSIFICATION	2.1738053171827208E-7	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.9999993414369672	WITHOUT_CLASSIFICATION	6.585630327187559E-7	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.999999944084445	WITHOUT_CLASSIFICATION	5.591555501394474E-8	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.999999944084445	WITHOUT_CLASSIFICATION	5.591555501394474E-8	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.9999995591066104	WITHOUT_CLASSIFICATION	4.408933896179981E-7	DEFECT
// majorTickIncrement	WITHOUT_CLASSIFICATION	0.9999977169190104	WITHOUT_CLASSIFICATION	2.2830809895776157E-6	DEFECT
// majorTickLength	WITHOUT_CLASSIFICATION	0.9999984113383644	WITHOUT_CLASSIFICATION	1.5886616356036575E-6	DEFECT
// majorTickPaint	WITHOUT_CLASSIFICATION	0.9999995609646296	WITHOUT_CLASSIFICATION	4.390353703996277E-7	DEFECT
// majorTickStroke	WITHOUT_CLASSIFICATION	0.9999789440688919	WITHOUT_CLASSIFICATION	2.1055931108074988E-5	DEFECT
// minorTickLength	WITHOUT_CLASSIFICATION	0.9999989888750943	WITHOUT_CLASSIFICATION	1.0111249057520142E-6	DEFECT
// tickLabelOffset	WITHOUT_CLASSIFICATION	0.9999998472128294	WITHOUT_CLASSIFICATION	1.5278717047670147E-7	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.9999996246975997	WITHOUT_CLASSIFICATION	3.7530240027006873E-7	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999998399805398	WITHOUT_CLASSIFICATION	1.600194603137105E-7	DEFECT
// label	WITHOUT_CLASSIFICATION	0.9999980771657887	WITHOUT_CLASSIFICATION	1.922834211350812E-6	DEFECT
// gradient paint transformer	WITHOUT_CLASSIFICATION	0.999999914350558	WITHOUT_CLASSIFICATION	8.564944202991886E-8	DEFECT
// test default instance	WITHOUT_CLASSIFICATION	0.9999999001341584	WITHOUT_CLASSIFICATION	9.986584163152546E-8	DEFECT
// have to use a concrete subclass...	WITHOUT_CLASSIFICATION	0.9999986759218618	WITHOUT_CLASSIFICATION	1.3240781382728817E-6	DEFECT
// seriesVisible	WITHOUT_CLASSIFICATION	0.9999997695005378	WITHOUT_CLASSIFICATION	2.3049946223310258E-7	DEFECT
// seriesVisibleList	WITHOUT_CLASSIFICATION	0.9999997041526633	WITHOUT_CLASSIFICATION	2.958473368237633E-7	DEFECT
// baseSeriesVisible	WITHOUT_CLASSIFICATION	0.9999999089647851	WITHOUT_CLASSIFICATION	9.103521495738394E-8	DEFECT
// seriesVisibleInLegendList	WITHOUT_CLASSIFICATION	0.9999983884207325	WITHOUT_CLASSIFICATION	1.6115792675178273E-6	DEFECT
// baseSeriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.999999227394537	WITHOUT_CLASSIFICATION	7.726054631055866E-7	DEFECT
// paintList	WITHOUT_CLASSIFICATION	0.9999998284786392	WITHOUT_CLASSIFICATION	1.7152136083688602E-7	DEFECT
// basePaint	WITHOUT_CLASSIFICATION	0.9999999315541799	WITHOUT_CLASSIFICATION	6.844582014925135E-8	DEFECT
// baseFillPaint	WITHOUT_CLASSIFICATION	0.9999999249173511	WITHOUT_CLASSIFICATION	7.508264882481002E-8	DEFECT
// outlinePaintList	WITHOUT_CLASSIFICATION	0.99999985670613	WITHOUT_CLASSIFICATION	1.4329387007892716E-7	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.999999967182872	WITHOUT_CLASSIFICATION	3.281712800707233E-8	DEFECT
// strokeList	WITHOUT_CLASSIFICATION	0.9999860620351787	WITHOUT_CLASSIFICATION	1.3937964821370989E-5	DEFECT
// outlineStrokeList	WITHOUT_CLASSIFICATION	0.9999905899604857	WITHOUT_CLASSIFICATION	9.410039514282171E-6	DEFECT
// baseOutlineStroke	WITHOUT_CLASSIFICATION	0.9999979787285184	WITHOUT_CLASSIFICATION	2.021271481659219E-6	DEFECT
// shapeList	WITHOUT_CLASSIFICATION	0.9999998693439474	WITHOUT_CLASSIFICATION	1.3065605267395442E-7	DEFECT
// baseShape	WITHOUT_CLASSIFICATION	0.999999946973696	WITHOUT_CLASSIFICATION	5.3026303891995417E-8	DEFECT
// itemLabelsVisibleList	WITHOUT_CLASSIFICATION	0.9999998241426569	WITHOUT_CLASSIFICATION	1.75857343107125E-7	DEFECT
// baseItemLabelsVisible	WITHOUT_CLASSIFICATION	0.9999999482051815	WITHOUT_CLASSIFICATION	5.179481857844566E-8	DEFECT
// itemLabelFont	WITHOUT_CLASSIFICATION	0.9999997418083421	WITHOUT_CLASSIFICATION	2.5819165800448196E-7	DEFECT
// baseItemLabelFont	WITHOUT_CLASSIFICATION	0.9999999767355827	WITHOUT_CLASSIFICATION	2.3264417364052726E-8	DEFECT
// itemLabelPaint	WITHOUT_CLASSIFICATION	0.9999999295597388	WITHOUT_CLASSIFICATION	7.04402611932815E-8	DEFECT
// itemLabelPaintList	WITHOUT_CLASSIFICATION	0.999999975911056	WITHOUT_CLASSIFICATION	2.408894393066081E-8	DEFECT
// baseItemLabelPaint	WITHOUT_CLASSIFICATION	0.999999990474263	WITHOUT_CLASSIFICATION	9.525736943918044E-9	DEFECT
// positiveItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9999999394194891	WITHOUT_CLASSIFICATION	6.058051089173558E-8	DEFECT
// basePositiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999999447283863	WITHOUT_CLASSIFICATION	5.527161375730344E-8	DEFECT
// negativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999999361086382	WITHOUT_CLASSIFICATION	6.389136181675005E-8	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.9999998249266161	WITHOUT_CLASSIFICATION	1.7507338387734403E-7	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.9999950713366368	WITHOUT_CLASSIFICATION	4.9286633632267195E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662895915	WITHOUT_CLASSIFICATION	3.5033710408440565E-5	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.999999967182872	WITHOUT_CLASSIFICATION	3.281712800707233E-8	DEFECT
// itemLabelAnchorOffset	WITHOUT_CLASSIFICATION	0.9999999633995074	WITHOUT_CLASSIFICATION	3.660049270027871E-8	DEFECT
// createEntities;	WITHOUT_CLASSIFICATION	0.9999999539101893	WITHOUT_CLASSIFICATION	4.608981069154758E-8	DEFECT
// createEntitiesList;	WITHOUT_CLASSIFICATION	0.9999999587933551	WITHOUT_CLASSIFICATION	4.1206644902745724E-8	DEFECT
// legendShape	WITHOUT_CLASSIFICATION	0.9999975868086813	WITHOUT_CLASSIFICATION	2.413191318741025E-6	DEFECT
// baseLegendShape	WITHOUT_CLASSIFICATION	0.9999998310511256	WITHOUT_CLASSIFICATION	1.6894887437069648E-7	DEFECT
// legendTextFont	WITHOUT_CLASSIFICATION	0.9999842725962963	WITHOUT_CLASSIFICATION	1.5727403703714413E-5	DEFECT
// baseLegendTextFont	WITHOUT_CLASSIFICATION	0.9999992730570626	WITHOUT_CLASSIFICATION	7.26942937294384E-7	DEFECT
// OUTLINE PAINT	WITHOUT_CLASSIFICATION	0.9999993940311064	WITHOUT_CLASSIFICATION	6.059688937163395E-7	DEFECT
// ITEM_LABELS_VISIBLE	WITHOUT_CLASSIFICATION	0.9999983499174445	WITHOUT_CLASSIFICATION	1.650082555484626E-6	DEFECT
// ITEM_LABEL_FONT	WITHOUT_CLASSIFICATION	0.9999986793451683	WITHOUT_CLASSIFICATION	1.3206548317005107E-6	DEFECT
// POSITIVE ITEM LABEL POSITION	WITHOUT_CLASSIFICATION	0.999994549952988	WITHOUT_CLASSIFICATION	5.450047012093003E-6	DEFECT
// NEGATIVE ITEM LABEL ANCHOR	WITHOUT_CLASSIFICATION	0.9999988947676529	WITHOUT_CLASSIFICATION	1.1052323470503408E-6	DEFECT
// failed	WITHOUT_CLASSIFICATION	0.9999963982998535	WITHOUT_CLASSIFICATION	3.601700146583845E-6	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999999937642797	WITHOUT_CLASSIFICATION	6.2357202566262284E-9	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999999937642797	WITHOUT_CLASSIFICATION	6.2357202566262284E-9	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999999937642797	WITHOUT_CLASSIFICATION	6.2357202566262284E-9	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999871499552958	WITHOUT_CLASSIFICATION	1.2850044704129376E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999871499552958	WITHOUT_CLASSIFICATION	1.2850044704129376E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999871499552958	WITHOUT_CLASSIFICATION	1.2850044704129376E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999999395542059	WITHOUT_CLASSIFICATION	6.044579419454469E-8	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999999395542059	WITHOUT_CLASSIFICATION	6.044579419454469E-8	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999999442347814	WITHOUT_CLASSIFICATION	5.576521845896267E-8	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999999442347814	WITHOUT_CLASSIFICATION	5.576521845896267E-8	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999999442347814	WITHOUT_CLASSIFICATION	5.576521845896267E-8	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999999442347814	WITHOUT_CLASSIFICATION	5.576521845896267E-8	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999994997846446	WITHOUT_CLASSIFICATION	5.002153552939725E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999994997846446	WITHOUT_CLASSIFICATION	5.002153552939725E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999994997846446	WITHOUT_CLASSIFICATION	5.002153552939725E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999994997846446	WITHOUT_CLASSIFICATION	5.002153552939725E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999991116828337	WITHOUT_CLASSIFICATION	8.883171663017166E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999991116828337	WITHOUT_CLASSIFICATION	8.883171663017166E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999991116828337	WITHOUT_CLASSIFICATION	8.883171663017166E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999991116828337	WITHOUT_CLASSIFICATION	8.883171663017166E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999991116828337	WITHOUT_CLASSIFICATION	8.883171663017166E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999999396276079	WITHOUT_CLASSIFICATION	6.037239208622945E-8	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999999396276079	WITHOUT_CLASSIFICATION	6.037239208622945E-8	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999999396276079	WITHOUT_CLASSIFICATION	6.037239208622945E-8	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999999396276079	WITHOUT_CLASSIFICATION	6.037239208622945E-8	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999997921413561	WITHOUT_CLASSIFICATION	2.078586439439396E-7	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999997921413561	WITHOUT_CLASSIFICATION	2.078586439439396E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662895915	WITHOUT_CLASSIFICATION	3.5033710408440565E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999999395542059	WITHOUT_CLASSIFICATION	6.044579419454469E-8	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999999442347814	WITHOUT_CLASSIFICATION	5.576521845896267E-8	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999994997846446	WITHOUT_CLASSIFICATION	5.002153552939725E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999991116828337	WITHOUT_CLASSIFICATION	8.883171663017166E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999999396276079	WITHOUT_CLASSIFICATION	6.037239208622945E-8	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999997921413561	WITHOUT_CLASSIFICATION	2.078586439439396E-7	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9999999642419266	WITHOUT_CLASSIFICATION	3.575807332590375E-8	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.9999999348170072	WITHOUT_CLASSIFICATION	6.518299275077209E-8	DEFECT
// try with gradient paint	WITHOUT_CLASSIFICATION	0.999998972189563	WITHOUT_CLASSIFICATION	1.0278104369772536E-6	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999884865823329	WITHOUT_CLASSIFICATION	1.1513417667203059E-5	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999884865823329	WITHOUT_CLASSIFICATION	1.1513417667203059E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.999979076154299	WITHOUT_CLASSIFICATION	2.0923845700934056E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.999979076154299	WITHOUT_CLASSIFICATION	2.0923845700934056E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.999979076154299	WITHOUT_CLASSIFICATION	2.0923845700934056E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999096287008	WITHOUT_CLASSIFICATION	9.0371299144323E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999096287008	WITHOUT_CLASSIFICATION	9.0371299144323E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481337	WITHOUT_CLASSIFICATION	1.0895186632298171E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481337	WITHOUT_CLASSIFICATION	1.0895186632298171E-7	DEFECT
// the renderer should not be equal to a BarRenderer	WITHOUT_CLASSIFICATION	0.9999119615808142	WITHOUT_CLASSIFICATION	8.803841918576515E-5	DEFECT
// firstBarPaint;	WITHOUT_CLASSIFICATION	0.9999999530198692	WITHOUT_CLASSIFICATION	4.698013086853501E-8	DEFECT
// lastBarPaint;	WITHOUT_CLASSIFICATION	0.999999420795193	WITHOUT_CLASSIFICATION	5.792048070566647E-7	DEFECT
// positiveBarPaint;	WITHOUT_CLASSIFICATION	0.999999795484623	WITHOUT_CLASSIFICATION	2.0451537695921186E-7	DEFECT
//private Paint negativeBarPaint;	WITHOUT_CLASSIFICATION	0.9999986465452146	WITHOUT_CLASSIFICATION	1.35345478542368E-6	DEFECT
// quick check for independence	WITHOUT_CLASSIFICATION	0.9999996285611784	WITHOUT_CLASSIFICATION	3.7143882163964165E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662895915	WITHOUT_CLASSIFICATION	3.5033710408440565E-5	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999988519061463	WITHOUT_CLASSIFICATION	1.1480938536116064E-6	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999996300427787	WITHOUT_CLASSIFICATION	3.699572212710362E-7	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999441421725	WITHOUT_CLASSIFICATION	5.585782742809065E-8	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999999601873452	WITHOUT_CLASSIFICATION	3.981265497772886E-8	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999884865823329	WITHOUT_CLASSIFICATION	1.1513417667203059E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.999979076154299	WITHOUT_CLASSIFICATION	2.0923845700934056E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999096287008	WITHOUT_CLASSIFICATION	9.0371299144323E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999096287008	WITHOUT_CLASSIFICATION	9.0371299144323E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999096287008	WITHOUT_CLASSIFICATION	9.0371299144323E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999096287008	WITHOUT_CLASSIFICATION	9.0371299144323E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481337	WITHOUT_CLASSIFICATION	1.0895186632298171E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481337	WITHOUT_CLASSIFICATION	1.0895186632298171E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481337	WITHOUT_CLASSIFICATION	1.0895186632298171E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481337	WITHOUT_CLASSIFICATION	1.0895186632298171E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481337	WITHOUT_CLASSIFICATION	1.0895186632298171E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481337	WITHOUT_CLASSIFICATION	1.0895186632298171E-7	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.9999991224489531	WITHOUT_CLASSIFICATION	8.775510469905582E-7	DEFECT
// map	WITHOUT_CLASSIFICATION	0.9999961552597837	WITHOUT_CLASSIFICATION	3.844740216317207E-6	DEFECT
// toolTipGeneratorList	WITHOUT_CLASSIFICATION	0.9999999850654281	WITHOUT_CLASSIFICATION	1.4934571891795052E-8	DEFECT
// baseToolTipGenerator	WITHOUT_CLASSIFICATION	0.99999999629908	WITHOUT_CLASSIFICATION	3.700919963546456E-9	DEFECT
// itemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999999686076022	WITHOUT_CLASSIFICATION	3.139239775307404E-8	DEFECT
// itemLabelGeneratorList	WITHOUT_CLASSIFICATION	0.9999999931150944	WITHOUT_CLASSIFICATION	6.884905712237533E-9	DEFECT
// baseItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999999971713815	WITHOUT_CLASSIFICATION	2.828618470162234E-9	DEFECT
// urlGeneratorList	WITHOUT_CLASSIFICATION	0.9999999902264411	WITHOUT_CLASSIFICATION	9.773558771948769E-9	DEFECT
// baseItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999999943395089	WITHOUT_CLASSIFICATION	5.660491078881856E-9	DEFECT
// legendItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999999284326618	WITHOUT_CLASSIFICATION	7.156733819949414E-8	DEFECT
// legendItemToolTipGenerator	WITHOUT_CLASSIFICATION	0.999999949143712	WITHOUT_CLASSIFICATION	5.085628795511039E-8	DEFECT
// legendItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999998246158598	WITHOUT_CLASSIFICATION	1.7538414018155273E-7	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999976521521305	WITHOUT_CLASSIFICATION	2.3478478694009957E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999976521521305	WITHOUT_CLASSIFICATION	2.3478478694009957E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999976521521305	WITHOUT_CLASSIFICATION	2.3478478694009957E-6	DEFECT
// base value	WITHOUT_CLASSIFICATION	0.9999999296199377	WITHOUT_CLASSIFICATION	7.038006230434735E-8	DEFECT
// itemMargin	WITHOUT_CLASSIFICATION	0.999999637817995	WITHOUT_CLASSIFICATION	3.621820049516781E-7	DEFECT
// drawBarOutline	WITHOUT_CLASSIFICATION	0.9999996404346098	WITHOUT_CLASSIFICATION	3.595653902048073E-7	DEFECT
// maximumBarWidth	WITHOUT_CLASSIFICATION	0.9999994723020118	WITHOUT_CLASSIFICATION	5.276979882426125E-7	DEFECT
// minimumBarLength	WITHOUT_CLASSIFICATION	0.999999648652757	WITHOUT_CLASSIFICATION	3.5134724293077955E-7	DEFECT
// gradientPaintTransformer	WITHOUT_CLASSIFICATION	0.9999999853709464	WITHOUT_CLASSIFICATION	1.4629053518028595E-8	DEFECT
// positiveItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.9999983981028867	WITHOUT_CLASSIFICATION	1.601897113278376E-6	DEFECT
// negativeItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.9999986546502878	WITHOUT_CLASSIFICATION	1.3453497121526707E-6	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.9999998776455956	WITHOUT_CLASSIFICATION	1.2235440439292466E-7	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.999999131825187	WITHOUT_CLASSIFICATION	8.681748129212809E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662895915	WITHOUT_CLASSIFICATION	3.5033710408440565E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662895915	WITHOUT_CLASSIFICATION	3.5033710408440565E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662895915	WITHOUT_CLASSIFICATION	3.5033710408440565E-5	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999988519061463	WITHOUT_CLASSIFICATION	1.1480938536116064E-6	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999996300427787	WITHOUT_CLASSIFICATION	3.699572212710362E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999096287008	WITHOUT_CLASSIFICATION	9.0371299144323E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481337	WITHOUT_CLASSIFICATION	1.0895186632298171E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481337	WITHOUT_CLASSIFICATION	1.0895186632298171E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481337	WITHOUT_CLASSIFICATION	1.0895186632298171E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481337	WITHOUT_CLASSIFICATION	1.0895186632298171E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481337	WITHOUT_CLASSIFICATION	1.0895186632298171E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481337	WITHOUT_CLASSIFICATION	1.0895186632298171E-7	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.9999991224489531	WITHOUT_CLASSIFICATION	8.775510469905582E-7	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.9999998776455956	WITHOUT_CLASSIFICATION	1.2235440439292466E-7	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.999999131825187	WITHOUT_CLASSIFICATION	8.681748129212809E-7	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999996548669687	WITHOUT_CLASSIFICATION	3.451330312280914E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997069521441	WITHOUT_CLASSIFICATION	2.930478558369902E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997069521441	WITHOUT_CLASSIFICATION	2.930478558369902E-7	DEFECT
// check that super class fields are being looked at...	WITHOUT_CLASSIFICATION	0.9996698967354597	WITHOUT_CLASSIFICATION	3.301032645404001E-4	DEFECT
// setUseYInterval	WITHOUT_CLASSIFICATION	0.9999999887309537	WITHOUT_CLASSIFICATION	1.1269046266463624E-8	DEFECT
// setBase()	WITHOUT_CLASSIFICATION	0.999999376510123	WITHOUT_CLASSIFICATION	6.234898770690227E-7	DEFECT
// try empty dataset	WITHOUT_CLASSIFICATION	0.9999998950388556	WITHOUT_CLASSIFICATION	1.0496114436836148E-7	DEFECT
// setGradientPaintTransformer()	WITHOUT_CLASSIFICATION	0.9999999680301472	WITHOUT_CLASSIFICATION	3.1969852791401405E-8	DEFECT
// setDrawBarOutline()	WITHOUT_CLASSIFICATION	0.9999999133992542	WITHOUT_CLASSIFICATION	8.66007457978813E-8	DEFECT
// setMargin()	WITHOUT_CLASSIFICATION	0.9999998604364118	WITHOUT_CLASSIFICATION	1.3956358826609377E-7	DEFECT
// legendBar	WITHOUT_CLASSIFICATION	0.9999971199198844	WITHOUT_CLASSIFICATION	2.880080115638359E-6	DEFECT
// positiveItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9999971214814559	WITHOUT_CLASSIFICATION	2.8785185441372727E-6	DEFECT
// negativeItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9999975824821365	WITHOUT_CLASSIFICATION	2.417517863321244E-6	DEFECT
// check a list containing a non-Number object	WITHOUT_CLASSIFICATION	0.9999999992538781	WITHOUT_CLASSIFICATION	7.4612203532329E-10	DEFECT
// try something from the base class	WITHOUT_CLASSIFICATION	0.9999956975236852	WITHOUT_CLASSIFICATION	4.302476314823413E-6	DEFECT
// positive paint	WITHOUT_CLASSIFICATION	0.9999993337189828	WITHOUT_CLASSIFICATION	6.662810172027705E-7	DEFECT
// negative paint	WITHOUT_CLASSIFICATION	0.9999994606148661	WITHOUT_CLASSIFICATION	5.393851339640033E-7	DEFECT
// shapesVisible	WITHOUT_CLASSIFICATION	0.9999998149985266	WITHOUT_CLASSIFICATION	1.8500147335523267E-7	DEFECT
// legendLine	WITHOUT_CLASSIFICATION	0.9999975254853877	WITHOUT_CLASSIFICATION	2.4745146123203113E-6	DEFECT
// roundXCoordinates	WITHOUT_CLASSIFICATION	0.9999998928809889	WITHOUT_CLASSIFICATION	1.0711901110009682E-7	DEFECT
// drawOpenTicks	WITHOUT_CLASSIFICATION	0.9999998317522025	WITHOUT_CLASSIFICATION	1.6824779735484017E-7	DEFECT
// drawCloseTicks	WITHOUT_CLASSIFICATION	0.9999999665010127	WITHOUT_CLASSIFICATION	3.349898719552118E-8	DEFECT
// openTickPaint	WITHOUT_CLASSIFICATION	0.9999996124151236	WITHOUT_CLASSIFICATION	3.8758487645574813E-7	DEFECT
// closeTickPaint	WITHOUT_CLASSIFICATION	0.9999999471167067	WITHOUT_CLASSIFICATION	5.2883293311032426E-8	DEFECT
// tickLength	WITHOUT_CLASSIFICATION	0.9999915188370789	WITHOUT_CLASSIFICATION	8.48116292102046E-6	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999990578199208	WITHOUT_CLASSIFICATION	9.421800792811259E-7	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999975207646703	WITHOUT_CLASSIFICATION	2.4792353296707896E-6	DEFECT
// drawXError	WITHOUT_CLASSIFICATION	0.999992113947986	WITHOUT_CLASSIFICATION	7.886052013953188E-6	DEFECT
// drawYError	WITHOUT_CLASSIFICATION	0.999997246865042	WITHOUT_CLASSIFICATION	2.753134958031798E-6	DEFECT
// capLength	WITHOUT_CLASSIFICATION	0.9999977122849681	WITHOUT_CLASSIFICATION	2.2877150317929064E-6	DEFECT
// errorPaint	WITHOUT_CLASSIFICATION	0.9999979069940438	WITHOUT_CLASSIFICATION	2.0930059562303935E-6	DEFECT
// errorStroke	WITHOUT_CLASSIFICATION	0.9998338199395227	WITHOUT_CLASSIFICATION	1.6618006047727896E-4	DEFECT
// check boxPaint null also	WITHOUT_CLASSIFICATION	0.9999999865897619	WITHOUT_CLASSIFICATION	1.341023806568882E-8	DEFECT
// upPaint	WITHOUT_CLASSIFICATION	0.9999997270716695	WITHOUT_CLASSIFICATION	2.729283304752474E-7	DEFECT
// downPaint	WITHOUT_CLASSIFICATION	0.9999950033968393	WITHOUT_CLASSIFICATION	4.9966031606658E-6	DEFECT
// drawVolume	WITHOUT_CLASSIFICATION	0.9999997881242849	WITHOUT_CLASSIFICATION	2.1187571503927132E-7	DEFECT
// candleWidth	WITHOUT_CLASSIFICATION	0.999999589657791	WITHOUT_CLASSIFICATION	4.1034220907032356E-7	DEFECT
// maxCandleWidthInMilliseconds	WITHOUT_CLASSIFICATION	0.9999996994469702	WITHOUT_CLASSIFICATION	3.0055302976721524E-7	DEFECT
// autoWidthMethod	WITHOUT_CLASSIFICATION	0.9999984920625806	WITHOUT_CLASSIFICATION	1.5079374193352826E-6	DEFECT
// autoWidthFactor	WITHOUT_CLASSIFICATION	0.9999998944194253	WITHOUT_CLASSIFICATION	1.055805747384075E-7	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999991130733075	WITHOUT_CLASSIFICATION	8.869266924822745E-7	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999941155494353	WITHOUT_CLASSIFICATION	5.884450564787066E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.9999999800478996	WITHOUT_CLASSIFICATION	1.9952100476318854E-8	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999994088845096	WITHOUT_CLASSIFICATION	5.911154905087713E-7	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999994381759865	WITHOUT_CLASSIFICATION	5.618240135164826E-7	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.9999991043646675	WITHOUT_CLASSIFICATION	8.956353325577266E-7	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999985751251291	WITHOUT_CLASSIFICATION	1.4248748707762862E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662895915	WITHOUT_CLASSIFICATION	3.5033710408440565E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662895915	WITHOUT_CLASSIFICATION	3.5033710408440565E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662895915	WITHOUT_CLASSIFICATION	3.5033710408440565E-5	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999996826915163	WITHOUT_CLASSIFICATION	3.173084836278689E-7	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999613590629463	WITHOUT_CLASSIFICATION	3.864093705381899E-5	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999997777629145	WITHOUT_CLASSIFICATION	2.2223708557062352E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481337	WITHOUT_CLASSIFICATION	1.0895186632298171E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481337	WITHOUT_CLASSIFICATION	1.0895186632298171E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481337	WITHOUT_CLASSIFICATION	1.0895186632298171E-7	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999976521521305	WITHOUT_CLASSIFICATION	2.3478478694009957E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999976521521305	WITHOUT_CLASSIFICATION	2.3478478694009957E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999976521521305	WITHOUT_CLASSIFICATION	2.3478478694009957E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997069521441	WITHOUT_CLASSIFICATION	2.930478558369902E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997069521441	WITHOUT_CLASSIFICATION	2.930478558369902E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997069521441	WITHOUT_CLASSIFICATION	2.930478558369902E-7	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999990578199208	WITHOUT_CLASSIFICATION	9.421800792811259E-7	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999975207646703	WITHOUT_CLASSIFICATION	2.4792353296707896E-6	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9996877372152218	WITHOUT_CLASSIFICATION	3.1226278477826576E-4	DEFECT
// autoWidthGap	WITHOUT_CLASSIFICATION	0.999999802609612	WITHOUT_CLASSIFICATION	1.9739038798839411E-7	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999999313273911	WITHOUT_CLASSIFICATION	6.867260894815934E-8	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999999313273911	WITHOUT_CLASSIFICATION	6.867260894815934E-8	DEFECT
// check the bounds of a simple dataset	WITHOUT_CLASSIFICATION	0.9999999585804188	WITHOUT_CLASSIFICATION	4.141958118279064E-8	DEFECT
// test findDomainBounds as well	WITHOUT_CLASSIFICATION	0.9999994778307988	WITHOUT_CLASSIFICATION	5.221692012148966E-7	DEFECT
// blockHeight	WITHOUT_CLASSIFICATION	0.9999977441772789	WITHOUT_CLASSIFICATION	2.2558227211094924E-6	DEFECT
// blockWidth	WITHOUT_CLASSIFICATION	0.9999987992286581	WITHOUT_CLASSIFICATION	1.2007713419794379E-6	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.9999998238646296	WITHOUT_CLASSIFICATION	1.7613537032376537E-7	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.9999998238646296	WITHOUT_CLASSIFICATION	1.7613537032376537E-7	DEFECT
// the following fields are inherited from the AbstractXYItemRenderer	WITHOUT_CLASSIFICATION	0.9999997293250231	WITHOUT_CLASSIFICATION	2.7067497680764435E-7	DEFECT
// axis	WITHOUT_CLASSIFICATION	0.9999993894672289	WITHOUT_CLASSIFICATION	6.105327711801653E-7	DEFECT
// axisOffset	WITHOUT_CLASSIFICATION	0.9999998749710782	WITHOUT_CLASSIFICATION	1.25028921840634E-7	DEFECT
// stripWidth	WITHOUT_CLASSIFICATION	0.999999906526431	WITHOUT_CLASSIFICATION	9.347356896569143E-8	DEFECT
// stripOutlineVisible	WITHOUT_CLASSIFICATION	0.9999999375579963	WITHOUT_CLASSIFICATION	6.244200372029596E-8	DEFECT
// stripOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999862487804	WITHOUT_CLASSIFICATION	1.375121961240789E-8	DEFECT
// stripOutlineStroke	WITHOUT_CLASSIFICATION	0.9999951576220818	WITHOUT_CLASSIFICATION	4.842377918243089E-6	DEFECT
// shapeVisible	WITHOUT_CLASSIFICATION	0.9999998491757055	WITHOUT_CLASSIFICATION	1.508242944611289E-7	DEFECT
// shapeFilled	WITHOUT_CLASSIFICATION	0.9999999490588836	WITHOUT_CLASSIFICATION	5.094111648034971E-8	DEFECT
// shapeOutlineVisible	WITHOUT_CLASSIFICATION	0.9999998789446446	WITHOUT_CLASSIFICATION	1.2105535542009712E-7	DEFECT
// shapeAnchor	WITHOUT_CLASSIFICATION	0.9999998583345286	WITHOUT_CLASSIFICATION	1.416654713880252E-7	DEFECT
// shapeLocation	WITHOUT_CLASSIFICATION	0.9999997599926439	WITHOUT_CLASSIFICATION	2.400073561064561E-7	DEFECT
// line	WITHOUT_CLASSIFICATION	0.9999953657981457	WITHOUT_CLASSIFICATION	4.6342018542428534E-6	DEFECT
// lineStroke	WITHOUT_CLASSIFICATION	0.9998931834876975	WITHOUT_CLASSIFICATION	1.0681651230255724E-4	DEFECT
// maximumLinesToDisplay	WITHOUT_CLASSIFICATION	0.9999999039222628	WITHOUT_CLASSIFICATION	9.607773725269668E-8	DEFECT
// toolTipText	WITHOUT_CLASSIFICATION	0.9999981910448391	WITHOUT_CLASSIFICATION	1.808955160918699E-6	DEFECT
// expandToFitSpace	WITHOUT_CLASSIFICATION	0.9999977509344364	WITHOUT_CLASSIFICATION	2.2490655635152627E-6	DEFECT
// margin	WITHOUT_CLASSIFICATION	0.9999992634960269	WITHOUT_CLASSIFICATION	7.365039732140181E-7	DEFECT
// border	WITHOUT_CLASSIFICATION	0.9999994887279415	WITHOUT_CLASSIFICATION	5.11272058437947E-7	DEFECT
// is the clone independent	WITHOUT_CLASSIFICATION	0.9999971664287831	WITHOUT_CLASSIFICATION	2.8335712168563673E-6	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9999968218481059	WITHOUT_CLASSIFICATION	3.178151894076013E-6	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.999999944158939	WITHOUT_CLASSIFICATION	5.584106091213509E-8	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999975171479517	WITHOUT_CLASSIFICATION	2.4828520483384008E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999996548669687	WITHOUT_CLASSIFICATION	3.451330312280914E-7	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9993026064596859	WITHOUT_CLASSIFICATION	6.973935403139804E-4	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9999968218481059	WITHOUT_CLASSIFICATION	3.178151894076013E-6	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9999998799333543	WITHOUT_CLASSIFICATION	1.20066645737289E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.999996307259208	WITHOUT_CLASSIFICATION	3.692740792098557E-6	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.999996307259208	WITHOUT_CLASSIFICATION	3.692740792098557E-6	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.9999996169957557	WITHOUT_CLASSIFICATION	3.8300424437602537E-7	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.9999996169957557	WITHOUT_CLASSIFICATION	3.8300424437602537E-7	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.9999993893029008	WITHOUT_CLASSIFICATION	6.10697099319698E-7	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999920252008	WITHOUT_CLASSIFICATION	7.974799104048999E-9	DEFECT
// check sorted rows	WITHOUT_CLASSIFICATION	0.99999994025284	WITHOUT_CLASSIFICATION	5.974716003858376E-8	DEFECT
// check for unknown column	WITHOUT_CLASSIFICATION	0.9999994508777875	WITHOUT_CLASSIFICATION	5.491222123568435E-7	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.9999912390806157	WITHOUT_CLASSIFICATION	8.760919384366699E-6	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.9999912390806157	WITHOUT_CLASSIFICATION	8.760919384366699E-6	DEFECT
/*v =*/	WITHOUT_CLASSIFICATION	0.9999592813503255	WITHOUT_CLASSIFICATION	4.0718649674433885E-5	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999416711894	WITHOUT_CLASSIFICATION	5.8328810651599164E-8	DEFECT
// check null argument 1	WITHOUT_CLASSIFICATION	0.9999999893506072	WITHOUT_CLASSIFICATION	1.0649392905073417E-8	DEFECT
/* ComparableObjectItem item1 = */	WITHOUT_CLASSIFICATION	0.9999997245117063	WITHOUT_CLASSIFICATION	2.754882937741855E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999995373415826	WITHOUT_CLASSIFICATION	4.626584173623276E-7	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999976640253065	WITHOUT_CLASSIFICATION	2.3359746934901506E-6	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999998759701801	WITHOUT_CLASSIFICATION	1.2402981989442043E-7	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9999881641983582	WITHOUT_CLASSIFICATION	1.1835801641845942E-5	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9999881641983582	WITHOUT_CLASSIFICATION	1.1835801641845942E-5	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.9999991308772136	WITHOUT_CLASSIFICATION	8.691227863855204E-7	DEFECT
// check null argument	WITHOUT_CLASSIFICATION	0.999999986758528	WITHOUT_CLASSIFICATION	1.3241472003349176E-8	DEFECT
// replace an existing value	WITHOUT_CLASSIFICATION	0.9999999199653391	WITHOUT_CLASSIFICATION	8.003466089737243E-8	DEFECT
// try a null key - should throw an exception	WITHOUT_CLASSIFICATION	0.999641065454402	WITHOUT_CLASSIFICATION	3.5893454559801717E-4	DEFECT
// try unknown key	WITHOUT_CLASSIFICATION	0.9999725533240883	WITHOUT_CLASSIFICATION	2.7446675911714512E-5	DEFECT
// try negative key index	WITHOUT_CLASSIFICATION	0.999838011492636	WITHOUT_CLASSIFICATION	1.6198850736401144E-4	DEFECT
// try key index == itemCount	WITHOUT_CLASSIFICATION	0.9999945284125683	WITHOUT_CLASSIFICATION	5.471587431755315E-6	DEFECT
/*Range r2 =*/	WITHOUT_CLASSIFICATION	0.9999726616505406	WITHOUT_CLASSIFICATION	2.733834945938257E-5	DEFECT
// Expand by 0% does not change the range	WITHOUT_CLASSIFICATION	0.9999938398305032	WITHOUT_CLASSIFICATION	6.160169496854566E-6	DEFECT
// Lower > upper: mid point is used	WITHOUT_CLASSIFICATION	0.9999993454264969	WITHOUT_CLASSIFICATION	6.545735030096615E-7	DEFECT
// Shifting with a delta of 0 does not change the range	WITHOUT_CLASSIFICATION	0.99999995673121	WITHOUT_CLASSIFICATION	4.326878990371728E-8	DEFECT
// Scaling with a factor of 1 does not change the range	WITHOUT_CLASSIFICATION	0.9999997400150097	WITHOUT_CLASSIFICATION	2.599849903720987E-7	DEFECT
/*s1 = */	WITHOUT_CLASSIFICATION	0.9999972622373722	WITHOUT_CLASSIFICATION	2.737762627751844E-6	DEFECT
// key	WITHOUT_CLASSIFICATION	0.9999887223500674	WITHOUT_CLASSIFICATION	1.1277649932515491E-5	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999998298630169	WITHOUT_CLASSIFICATION	1.701369831308953E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999994362561355	WITHOUT_CLASSIFICATION	5.63743864458519E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999998160195993	WITHOUT_CLASSIFICATION	1.83980400612404E-7	DEFECT
// remove an item	WITHOUT_CLASSIFICATION	0.999997784547187	WITHOUT_CLASSIFICATION	2.2154528129990658E-6	DEFECT
// map a key to a new group	WITHOUT_CLASSIFICATION	0.9999972906152378	WITHOUT_CLASSIFICATION	2.709384762220506E-6	DEFECT
// clear a mapping	WITHOUT_CLASSIFICATION	0.9999971203054827	WITHOUT_CLASSIFICATION	2.8796945172274136E-6	DEFECT
// check handling of null key	WITHOUT_CLASSIFICATION	0.9999993209021494	WITHOUT_CLASSIFICATION	6.790978505487108E-7	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.9999999935307918	WITHOUT_CLASSIFICATION	6.4692081900702444E-9	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999995202111467	WITHOUT_CLASSIFICATION	4.797888532465566E-7	DEFECT
// if there is an explicit mapping to the default group, it is counted	WITHOUT_CLASSIFICATION	0.9999999419708253	WITHOUT_CLASSIFICATION	5.802917462899663E-8	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999416711894	WITHOUT_CLASSIFICATION	5.8328810651599164E-8	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999995373415826	WITHOUT_CLASSIFICATION	4.626584173623276E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999995373415826	WITHOUT_CLASSIFICATION	4.626584173623276E-7	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999485097596	WITHOUT_CLASSIFICATION	5.1490240417310955E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999485097596	WITHOUT_CLASSIFICATION	5.1490240417310955E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999485097596	WITHOUT_CLASSIFICATION	5.1490240417310955E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999485097596	WITHOUT_CLASSIFICATION	5.1490240417310955E-8	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999976640253065	WITHOUT_CLASSIFICATION	2.3359746934901506E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999976640253065	WITHOUT_CLASSIFICATION	2.3359746934901506E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999976640253065	WITHOUT_CLASSIFICATION	2.3359746934901506E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999976640253065	WITHOUT_CLASSIFICATION	2.3359746934901506E-6	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999995202111467	WITHOUT_CLASSIFICATION	4.797888532465566E-7	DEFECT
// if the default group is not mapped to, it should still count towards // the group count...	WITHOUT_CLASSIFICATION	0.9998088268095089	WITHOUT_CLASSIFICATION	1.9117319049110368E-4	DEFECT
// now when the default group is mapped to, it shouldn't increase the // group count...	WITHOUT_CLASSIFICATION	0.9999297085815876	WITHOUT_CLASSIFICATION	7.029141841243994E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// the default group is always at index 0	WITHOUT_CLASSIFICATION	0.9999914910691342	WITHOUT_CLASSIFICATION	8.5089308659023E-6	DEFECT
// a non-existent group should return -1	WITHOUT_CLASSIFICATION	0.9999999006147772	WITHOUT_CLASSIFICATION	9.938522275249042E-8	DEFECT
// indices are assigned in the order that groups are originally mapped	WITHOUT_CLASSIFICATION	0.999986960516509	WITHOUT_CLASSIFICATION	1.3039483490995275E-5	DEFECT
// a key that hasn't been mapped should return the default group	WITHOUT_CLASSIFICATION	0.9999918129669447	WITHOUT_CLASSIFICATION	8.187033055233765E-6	DEFECT
// a null argument should throw an exception	WITHOUT_CLASSIFICATION	0.999998154195069	WITHOUT_CLASSIFICATION	1.8458049311041691E-6	DEFECT
// a small check for independence	WITHOUT_CLASSIFICATION	0.99999983068032	WITHOUT_CLASSIFICATION	1.693196801623682E-7	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.999999934282459	WITHOUT_CLASSIFICATION	6.571754105950243E-8	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.999999934282459	WITHOUT_CLASSIFICATION	6.571754105950243E-8	DEFECT
// confirm overwriting an existing value	WITHOUT_CLASSIFICATION	0.9999997679847299	WITHOUT_CLASSIFICATION	2.3201527004496716E-7	DEFECT
// try null keys	WITHOUT_CLASSIFICATION	0.9999946827510088	WITHOUT_CLASSIFICATION	5.317248991233878E-6	DEFECT
// try negative row index	WITHOUT_CLASSIFICATION	0.9994050409732312	WITHOUT_CLASSIFICATION	5.94959026768721E-4	DEFECT
// try row index too high	WITHOUT_CLASSIFICATION	0.9997954508017405	WITHOUT_CLASSIFICATION	2.0454919825958903E-4	DEFECT
// try negative column index	WITHOUT_CLASSIFICATION	0.9999173338739098	WITHOUT_CLASSIFICATION	8.266612609023957E-5	DEFECT
// try column index too high	WITHOUT_CLASSIFICATION	0.9999671135103226	WITHOUT_CLASSIFICATION	3.288648967739277E-5	DEFECT
// try unknown row key	WITHOUT_CLASSIFICATION	0.9999394819349054	WITHOUT_CLASSIFICATION	6.05180650945597E-5	DEFECT
// try null row key	WITHOUT_CLASSIFICATION	0.9999664989228432	WITHOUT_CLASSIFICATION	3.350107715689294E-5	DEFECT
// try unknown column key	WITHOUT_CLASSIFICATION	0.9999919377206096	WITHOUT_CLASSIFICATION	8.062279390499446E-6	DEFECT
// try null column key	WITHOUT_CLASSIFICATION	0.9999894567641283	WITHOUT_CLASSIFICATION	1.0543235871726135E-5	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999998584982465	WITHOUT_CLASSIFICATION	1.415017535702652E-7	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999998584982465	WITHOUT_CLASSIFICATION	1.415017535702652E-7	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999775472350158	WITHOUT_CLASSIFICATION	2.2452764984267045E-5	DEFECT
// it's OK to use an index equal to the size of the list	WITHOUT_CLASSIFICATION	0.9999999018991449	WITHOUT_CLASSIFICATION	9.810085505699845E-8	DEFECT
// try replacing an existing value	WITHOUT_CLASSIFICATION	0.9999995726534857	WITHOUT_CLASSIFICATION	4.273465142362798E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999888228144	WITHOUT_CLASSIFICATION	1.1177185716031072E-8	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999888228144	WITHOUT_CLASSIFICATION	1.1177185716031072E-8	DEFECT
// try a null source	WITHOUT_CLASSIFICATION	0.9999997293306417	WITHOUT_CLASSIFICATION	2.7066935825444317E-7	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.9999930011449666	WITHOUT_CLASSIFICATION	6.998855033349153E-6	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.9999930011449666	WITHOUT_CLASSIFICATION	6.998855033349153E-6	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999870516472302	WITHOUT_CLASSIFICATION	1.2948352769758504E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999870516472302	WITHOUT_CLASSIFICATION	1.2948352769758504E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999870516472302	WITHOUT_CLASSIFICATION	1.2948352769758504E-5	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9999989180996051	WITHOUT_CLASSIFICATION	1.0819003949509492E-6	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.9999999156405829	WITHOUT_CLASSIFICATION	8.435941716706966E-8	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999096287008	WITHOUT_CLASSIFICATION	9.0371299144323E-8	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999982086905772	WITHOUT_CLASSIFICATION	1.7913094228368105E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999982086905772	WITHOUT_CLASSIFICATION	1.7913094228368105E-6	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999775472350158	WITHOUT_CLASSIFICATION	2.2452764984267045E-5	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999888228144	WITHOUT_CLASSIFICATION	1.1177185716031072E-8	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999888228144	WITHOUT_CLASSIFICATION	1.1177185716031072E-8	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999870516472302	WITHOUT_CLASSIFICATION	1.2948352769758504E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999870516472302	WITHOUT_CLASSIFICATION	1.2948352769758504E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999870516472302	WITHOUT_CLASSIFICATION	1.2948352769758504E-5	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9999989180996051	WITHOUT_CLASSIFICATION	1.0819003949509492E-6	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.9999999156405829	WITHOUT_CLASSIFICATION	8.435941716706966E-8	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.9999999761487913	WITHOUT_CLASSIFICATION	2.3851208677411443E-8	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9999926581778834	WITHOUT_CLASSIFICATION	7.341822116670804E-6	DEFECT
// increment a null value	WITHOUT_CLASSIFICATION	0.9999975035184641	WITHOUT_CLASSIFICATION	2.496481535933001E-6	DEFECT
// increment an unknown row	WITHOUT_CLASSIFICATION	0.9999635966713316	WITHOUT_CLASSIFICATION	3.6403328668318286E-5	DEFECT
// increment an unknown column	WITHOUT_CLASSIFICATION	0.9999821806304898	WITHOUT_CLASSIFICATION	1.7819369510149902E-5	DEFECT
// a row of all null values is still counted...	WITHOUT_CLASSIFICATION	0.9995738274723517	WITHOUT_CLASSIFICATION	4.261725276483044E-4	DEFECT
// a column of all null values is still counted...	WITHOUT_CLASSIFICATION	0.999834321033841	WITHOUT_CLASSIFICATION	1.6567896615899335E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998677108446153	WITHOUT_CLASSIFICATION	1.3228915538469478E-4	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999969296282311	WITHOUT_CLASSIFICATION	3.0703717688995553E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999969296282311	WITHOUT_CLASSIFICATION	3.0703717688995553E-6	DEFECT
// check that two empty datasets are equal	WITHOUT_CLASSIFICATION	0.9999999276631054	WITHOUT_CLASSIFICATION	7.233689456190712E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999205788247	WITHOUT_CLASSIFICATION	7.942117532426975E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999205788247	WITHOUT_CLASSIFICATION	7.942117532426975E-8	DEFECT
// make sure that modifying the returned array doesn't change the // function	WITHOUT_CLASSIFICATION	0.9999996569927383	WITHOUT_CLASSIFICATION	3.430072616741201E-7	DEFECT
// note that we don't define taskB1	WITHOUT_CLASSIFICATION	0.9999997679213474	WITHOUT_CLASSIFICATION	2.3207865263643047E-7	DEFECT
// define subtasks	WITHOUT_CLASSIFICATION	0.9999998840315164	WITHOUT_CLASSIFICATION	1.1596848364174193E-7	DEFECT
/* Number start = */	WITHOUT_CLASSIFICATION	0.9999998812277406	WITHOUT_CLASSIFICATION	1.1877225925935441E-7	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999999396299688	WITHOUT_CLASSIFICATION	6.037003121513479E-8	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999999396299688	WITHOUT_CLASSIFICATION	6.037003121513479E-8	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999999396299688	WITHOUT_CLASSIFICATION	6.037003121513479E-8	DEFECT
/* int count = */	WITHOUT_CLASSIFICATION	0.9999853525634312	WITHOUT_CLASSIFICATION	1.4647436568743893E-5	DEFECT
/* Number end = */	WITHOUT_CLASSIFICATION	0.999998181967423	WITHOUT_CLASSIFICATION	1.818032576964921E-6	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999999040047033	WITHOUT_CLASSIFICATION	9.599529668466079E-8	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999999571704248	WITHOUT_CLASSIFICATION	4.28295751723116E-8	DEFECT
// what if we don't want the interval?	WITHOUT_CLASSIFICATION	0.9999986283013171	WITHOUT_CLASSIFICATION	1.3716986828656313E-6	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9999998832461726	WITHOUT_CLASSIFICATION	1.167538273768355E-7	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.9999999590469197	WITHOUT_CLASSIFICATION	4.095308019783158E-8	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999998105390445	WITHOUT_CLASSIFICATION	1.8946095543550517E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999998105390445	WITHOUT_CLASSIFICATION	1.8946095543550517E-7	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.9999998366695642	WITHOUT_CLASSIFICATION	1.6333043580148268E-7	DEFECT
// a Double.NaN should be ignored	WITHOUT_CLASSIFICATION	0.9999999853762115	WITHOUT_CLASSIFICATION	1.4623788423506072E-8	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999996548669687	WITHOUT_CLASSIFICATION	3.451330312280914E-7	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999996548669687	WITHOUT_CLASSIFICATION	3.451330312280914E-7	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999920252008	WITHOUT_CLASSIFICATION	7.974799104048999E-9	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9999926581778834	WITHOUT_CLASSIFICATION	7.341822116670804E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998677108446153	WITHOUT_CLASSIFICATION	1.3228915538469478E-4	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999969296282311	WITHOUT_CLASSIFICATION	3.0703717688995553E-6	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999999571704248	WITHOUT_CLASSIFICATION	4.28295751723116E-8	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999999571704248	WITHOUT_CLASSIFICATION	4.28295751723116E-8	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999999040047033	WITHOUT_CLASSIFICATION	9.599529668466079E-8	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.9999999761487913	WITHOUT_CLASSIFICATION	2.3851208677411443E-8	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.9999999590469197	WITHOUT_CLASSIFICATION	4.095308019783158E-8	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9999998832461726	WITHOUT_CLASSIFICATION	1.167538273768355E-7	DEFECT
// Double.NaN DOESN'T mess things up	WITHOUT_CLASSIFICATION	0.9999996388804308	WITHOUT_CLASSIFICATION	3.6111956921397573E-7	DEFECT
// got it!	WITHOUT_CLASSIFICATION	0.9997123648546633	WITHOUT_CLASSIFICATION	2.8763514533676417E-4	DEFECT
// check that empty dataset is handled OK	WITHOUT_CLASSIFICATION	0.9999999947290098	WITHOUT_CLASSIFICATION	5.270990177279294E-9	DEFECT
// and that simple aggregation works	WITHOUT_CLASSIFICATION	0.9999907642919057	WITHOUT_CLASSIFICATION	9.23570809428193E-6	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999994317307916	WITHOUT_CLASSIFICATION	5.682692083183956E-7	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999994317307916	WITHOUT_CLASSIFICATION	5.682692083183956E-7	DEFECT
// null dataset throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999994474171009	WITHOUT_CLASSIFICATION	5.525828990748364E-7	DEFECT
// null list throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.99999947778338	WITHOUT_CLASSIFICATION	5.222166199540389E-7	DEFECT
// null range throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999996855898595	WITHOUT_CLASSIFICATION	3.144101404275315E-7	DEFECT
// empty dataset returns null	WITHOUT_CLASSIFICATION	0.9999997776946656	WITHOUT_CLASSIFICATION	2.223053342096251E-7	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.999999710793699	WITHOUT_CLASSIFICATION	2.8920630103601686E-7	DEFECT
// check a null value	WITHOUT_CLASSIFICATION	0.999999816074133	WITHOUT_CLASSIFICATION	1.8392586692942394E-7	DEFECT
// check a NaN	WITHOUT_CLASSIFICATION	0.9999999278707435	WITHOUT_CLASSIFICATION	7.212925640758352E-8	DEFECT
// check another regular value	WITHOUT_CLASSIFICATION	0.9999998861070956	WITHOUT_CLASSIFICATION	1.138929044537696E-7	DEFECT
// add a second series	WITHOUT_CLASSIFICATION	0.9999985924676205	WITHOUT_CLASSIFICATION	1.407532379513314E-6	DEFECT
// add a value to the second series	WITHOUT_CLASSIFICATION	0.9999990191697734	WITHOUT_CLASSIFICATION	9.8083022656531E-7	DEFECT
// add a value that isn't in the xRange	WITHOUT_CLASSIFICATION	0.9999846594726152	WITHOUT_CLASSIFICATION	1.534052738491395E-5	DEFECT
// try some nulls	WITHOUT_CLASSIFICATION	0.9999875252442096	WITHOUT_CLASSIFICATION	1.2474755790346304E-5	DEFECT
// an empty dataset should return null for bounds	WITHOUT_CLASSIFICATION	0.9999998862108884	WITHOUT_CLASSIFICATION	1.1378911163930412E-7	DEFECT
// try a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999993611580982	WITHOUT_CLASSIFICATION	6.388419018876543E-7	DEFECT
// try a dataset with two values	WITHOUT_CLASSIFICATION	0.9999985153142559	WITHOUT_CLASSIFICATION	1.4846857441039647E-6	DEFECT
// try a Double.NaN	WITHOUT_CLASSIFICATION	0.99999928147164	WITHOUT_CLASSIFICATION	7.185283601075363E-7	DEFECT
// try a Double.NEGATIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999984821523344	WITHOUT_CLASSIFICATION	1.5178476654874907E-6	DEFECT
// overwrite the value	WITHOUT_CLASSIFICATION	0.9999999193668261	WITHOUT_CLASSIFICATION	8.063317386418524E-8	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999991734592091	WITHOUT_CLASSIFICATION	8.265407909470131E-7	DEFECT
// now overwrite this item with another	WITHOUT_CLASSIFICATION	0.9999999527319868	WITHOUT_CLASSIFICATION	4.7268013167936045E-8	DEFECT
// try null list	WITHOUT_CLASSIFICATION	0.9999985476827797	WITHOUT_CLASSIFICATION	1.4523172202368904E-6	DEFECT
// try a list containing a single value	WITHOUT_CLASSIFICATION	0.9999999700608546	WITHOUT_CLASSIFICATION	2.993914539517293E-8	DEFECT
// try null array	WITHOUT_CLASSIFICATION	0.999998184281126	WITHOUT_CLASSIFICATION	1.8157188740795121E-6	DEFECT
// try an array containing no items	WITHOUT_CLASSIFICATION	0.9999999075786843	WITHOUT_CLASSIFICATION	9.24213157242102E-8	DEFECT
// try an array containing a single Number	WITHOUT_CLASSIFICATION	0.9999999137078622	WITHOUT_CLASSIFICATION	8.629213780574021E-8	DEFECT
// try an array containing a single Number and a null	WITHOUT_CLASSIFICATION	0.9999991592744232	WITHOUT_CLASSIFICATION	8.407255767645945E-7	DEFECT
// try an array containing a single Number and a NaN	WITHOUT_CLASSIFICATION	0.9999998057010042	WITHOUT_CLASSIFICATION	1.9429899572539078E-7	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999996717371131	WITHOUT_CLASSIFICATION	3.282628869606291E-7	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999980283148201	WITHOUT_CLASSIFICATION	1.971685179908956E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999996548669687	WITHOUT_CLASSIFICATION	3.451330312280914E-7	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999991734592091	WITHOUT_CLASSIFICATION	8.265407909470131E-7	DEFECT
// try an empty collection	WITHOUT_CLASSIFICATION	0.999992793722709	WITHOUT_CLASSIFICATION	7.2062772909939495E-6	DEFECT
// try a collection with a single number	WITHOUT_CLASSIFICATION	0.9999979604591798	WITHOUT_CLASSIFICATION	2.039540820240713E-6	DEFECT
// try a collection with a single number plus a NaN	WITHOUT_CLASSIFICATION	0.9999967111802637	WITHOUT_CLASSIFICATION	3.2888197361833235E-6	DEFECT
// try a collection with several numbers	WITHOUT_CLASSIFICATION	0.9999999134778671	WITHOUT_CLASSIFICATION	8.652213293210094E-8	DEFECT
// a Collection containing a NaN will return Double.NaN for the result	WITHOUT_CLASSIFICATION	0.9999999817095062	WITHOUT_CLASSIFICATION	1.8290493804899436E-8	DEFECT
// check null list	WITHOUT_CLASSIFICATION	0.9999999306791101	WITHOUT_CLASSIFICATION	6.932088999000091E-8	DEFECT
// check empty list	WITHOUT_CLASSIFICATION	0.9999999717851031	WITHOUT_CLASSIFICATION	2.821489689575525E-8	DEFECT
// check list containing null	WITHOUT_CLASSIFICATION	0.9999999672460766	WITHOUT_CLASSIFICATION	3.275392335991998E-8	DEFECT
// try zero length array	WITHOUT_CLASSIFICATION	0.9999971999901982	WITHOUT_CLASSIFICATION	2.800009801773537E-6	DEFECT
// try single value	WITHOUT_CLASSIFICATION	0.9999997510264368	WITHOUT_CLASSIFICATION	2.489735632407476E-7	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9996877372152218	WITHOUT_CLASSIFICATION	3.1226278477826576E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// try deleting a time period that doesn't exist...	WITHOUT_CLASSIFICATION	0.9999443101172257	WITHOUT_CLASSIFICATION	5.568988277426844E-5	DEFECT
// try deleting null	WITHOUT_CLASSIFICATION	0.9999962837088929	WITHOUT_CLASSIFICATION	3.71629110705117E-6	DEFECT
// copy a range before the start of the series data...	WITHOUT_CLASSIFICATION	0.9999994428820604	WITHOUT_CLASSIFICATION	5.571179395599002E-7	DEFECT
// copy a range that includes only the first item in the series...	WITHOUT_CLASSIFICATION	0.9999992383225924	WITHOUT_CLASSIFICATION	7.616774076463455E-7	DEFECT
// copy a range that begins before and ends in the middle of the // series...	WITHOUT_CLASSIFICATION	0.9999539150162841	WITHOUT_CLASSIFICATION	4.608498371584441E-5	DEFECT
// copy just the first item...	WITHOUT_CLASSIFICATION	0.9999998630677767	WITHOUT_CLASSIFICATION	1.369322233453913E-7	DEFECT
// copy the first two items...	WITHOUT_CLASSIFICATION	0.9999983954405338	WITHOUT_CLASSIFICATION	1.6045594662210868E-6	DEFECT
// copy the middle three items...	WITHOUT_CLASSIFICATION	0.9999975641996204	WITHOUT_CLASSIFICATION	2.4358003795254423E-6	DEFECT
// copy the last two items...	WITHOUT_CLASSIFICATION	0.9999906389289082	WITHOUT_CLASSIFICATION	9.361071091827895E-6	DEFECT
// copy the last item...	WITHOUT_CLASSIFICATION	0.9999950161121185	WITHOUT_CLASSIFICATION	4.983887881492461E-6	DEFECT
// check negative first argument	WITHOUT_CLASSIFICATION	0.9999999981379178	WITHOUT_CLASSIFICATION	1.8620821792861355E-9	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999987297918183	WITHOUT_CLASSIFICATION	1.2702081818194634E-6	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999987297918183	WITHOUT_CLASSIFICATION	1.2702081818194634E-6	DEFECT
// check second argument less than first argument	WITHOUT_CLASSIFICATION	0.9999996203902917	WITHOUT_CLASSIFICATION	3.7960970829185933E-7	DEFECT
// changing the overwritten record shouldn't affect the series	WITHOUT_CLASSIFICATION	0.999997461048241	WITHOUT_CLASSIFICATION	2.538951758887801E-6	DEFECT
// changing the item that was added should not change the series	WITHOUT_CLASSIFICATION	0.9999997822597434	WITHOUT_CLASSIFICATION	2.1774025671162416E-7	DEFECT
// can't get anything yet...just an exception	WITHOUT_CLASSIFICATION	0.9995555970360922	WITHOUT_CLASSIFICATION	4.444029639078495E-4	DEFECT
/*TimeSeriesDataItem item =*/	WITHOUT_CLASSIFICATION	0.9999995325218846	WITHOUT_CLASSIFICATION	4.674781155203636E-7	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.9999976103230184	WITHOUT_CLASSIFICATION	2.3896769815906077E-6	DEFECT
/* TimeSeriesDataItem item = */	WITHOUT_CLASSIFICATION	0.9999999350542176	WITHOUT_CLASSIFICATION	6.494578237596102E-8	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999999191390182	WITHOUT_CLASSIFICATION	8.086098181039715E-8	DEFECT
// test series with one item	WITHOUT_CLASSIFICATION	0.9999998152840165	WITHOUT_CLASSIFICATION	1.8471598345980738E-7	DEFECT
// test series with two items	WITHOUT_CLASSIFICATION	0.9999990639263602	WITHOUT_CLASSIFICATION	9.360736398316001E-7	DEFECT
// milliseconds somewhere in 2006	WITHOUT_CLASSIFICATION	0.9999729473565463	WITHOUT_CLASSIFICATION	2.7052643453742414E-5	DEFECT
// test a series with 1 item	WITHOUT_CLASSIFICATION	0.9999998490556691	WITHOUT_CLASSIFICATION	1.5094433092924073E-7	DEFECT
// test a series with two items	WITHOUT_CLASSIFICATION	0.9999989791688492	WITHOUT_CLASSIFICATION	1.0208311508066775E-6	DEFECT
// this line triggers the defect	WITHOUT_CLASSIFICATION	0.9999974724757726	WITHOUT_CLASSIFICATION	2.5275242274483217E-6	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9993812181666213	WITHOUT_CLASSIFICATION	6.187818333787303E-4	DEFECT
// null items are ignored	WITHOUT_CLASSIFICATION	0.9999999914622144	WITHOUT_CLASSIFICATION	8.537785535864235E-9	DEFECT
// if there are only null items, we get a NaNRange	WITHOUT_CLASSIFICATION	0.9999998937752037	WITHOUT_CLASSIFICATION	1.0622479634515984E-7	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9998922266117733	WITHOUT_CLASSIFICATION	1.0777338822667631E-4	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9998922266117733	WITHOUT_CLASSIFICATION	1.0777338822667631E-4	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9998922266117733	WITHOUT_CLASSIFICATION	1.0777338822667631E-4	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999953970541862	WITHOUT_CLASSIFICATION	4.602945813827411E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999962825470339	WITHOUT_CLASSIFICATION	3.7174529659647078E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999962825470339	WITHOUT_CLASSIFICATION	3.7174529659647078E-6	DEFECT
// domain description - null	WITHOUT_CLASSIFICATION	0.9999959381045995	WITHOUT_CLASSIFICATION	4.061895400523733E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999951816302106	WITHOUT_CLASSIFICATION	4.8183697893401175E-6	DEFECT
// a null item should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999974583397299	WITHOUT_CLASSIFICATION	2.5416602701124994E-6	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.9999988012375791	WITHOUT_CLASSIFICATION	1.1987624208331964E-6	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.9999988012375791	WITHOUT_CLASSIFICATION	1.1987624208331964E-6	DEFECT
// range description	WITHOUT_CLASSIFICATION	0.9999994196263404	WITHOUT_CLASSIFICATION	5.80373659609449E-7	DEFECT
// domain description	WITHOUT_CLASSIFICATION	0.9999974461556046	WITHOUT_CLASSIFICATION	2.5538443953342814E-6	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.9999998540849867	WITHOUT_CLASSIFICATION	1.4591501341738188E-7	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999999792304085	WITHOUT_CLASSIFICATION	2.076959140670654E-8	DEFECT
// range description - null	WITHOUT_CLASSIFICATION	0.9999978109728404	WITHOUT_CLASSIFICATION	2.1890271596195327E-6	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.9999998540849867	WITHOUT_CLASSIFICATION	1.4591501341738188E-7	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999999792304085	WITHOUT_CLASSIFICATION	2.076959140670654E-8	DEFECT
// add a fourth time period	WITHOUT_CLASSIFICATION	0.9999998570520606	WITHOUT_CLASSIFICATION	1.4294793946676895E-7	DEFECT
// add a third time period	WITHOUT_CLASSIFICATION	0.9999992958299203	WITHOUT_CLASSIFICATION	7.041700796126106E-7	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.9999998533848168	WITHOUT_CLASSIFICATION	1.4661518313740817E-7	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.9999998533848168	WITHOUT_CLASSIFICATION	1.4661518313740817E-7	DEFECT
// first day of week is Sunday	WITHOUT_CLASSIFICATION	0.9999957289098156	WITHOUT_CLASSIFICATION	4.2710901844122616E-6	DEFECT
// first day of week is monday	WITHOUT_CLASSIFICATION	0.9999920081114076	WITHOUT_CLASSIFICATION	7.991888592290319E-6	DEFECT
// try null zone	WITHOUT_CLASSIFICATION	0.9999947733244415	WITHOUT_CLASSIFICATION	5.226675558515071E-6	DEFECT
// add series to collection 1, should be not equal	WITHOUT_CLASSIFICATION	0.9999924221463856	WITHOUT_CLASSIFICATION	7.577853614294032E-6	DEFECT
// newly created collections should be equal	WITHOUT_CLASSIFICATION	0.9999984719819563	WITHOUT_CLASSIFICATION	1.5280180436151782E-6	DEFECT
// now add the same series to collection 2 to make them equal again...	WITHOUT_CLASSIFICATION	0.9999991864830042	WITHOUT_CLASSIFICATION	8.135169957456461E-7	DEFECT
// now remove series 2 from collection 2	WITHOUT_CLASSIFICATION	0.9999864835234749	WITHOUT_CLASSIFICATION	1.3516476525148643E-5	DEFECT
// now remove series 2 from collection 1 to make them equal again	WITHOUT_CLASSIFICATION	0.9999997240638172	WITHOUT_CLASSIFICATION	2.759361829009288E-7	DEFECT
// for a series with no data, we expect {-1, -1}...	WITHOUT_CLASSIFICATION	0.9999870521466911	WITHOUT_CLASSIFICATION	1.2947853308895924E-5	DEFECT
// now test with a single value in the series...	WITHOUT_CLASSIFICATION	0.9999989377187528	WITHOUT_CLASSIFICATION	1.0622812472372853E-6	DEFECT
// now add a second value to the series...	WITHOUT_CLASSIFICATION	0.9999833675714987	WITHOUT_CLASSIFICATION	1.6632428501244415E-5	DEFECT
// now add a third value to the series...	WITHOUT_CLASSIFICATION	0.9999984356444636	WITHOUT_CLASSIFICATION	1.5643555365492762E-6	DEFECT
/* TimeSeries s = */	WITHOUT_CLASSIFICATION	0.9999995625914955	WITHOUT_CLASSIFICATION	4.3740850446870004E-7	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999408617547788	WITHOUT_CLASSIFICATION	5.913824522110661E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999017776613313	WITHOUT_CLASSIFICATION	9.822233866869152E-5	DEFECT
// store the current time zone	WITHOUT_CLASSIFICATION	0.9999999631671511	WITHOUT_CLASSIFICATION	3.68328487578974E-8	DEFECT
// restore the default time zone	WITHOUT_CLASSIFICATION	0.9999999922684485	WITHOUT_CLASSIFICATION	7.731551416443191E-9	DEFECT
// when the dataset contains no series, we expect the range to be null	WITHOUT_CLASSIFICATION	0.9999991156342503	WITHOUT_CLASSIFICATION	8.843657497325429E-7	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999992729515229	WITHOUT_CLASSIFICATION	7.27048477198469E-7	DEFECT
// adding a second series	WITHOUT_CLASSIFICATION	0.9999979048738536	WITHOUT_CLASSIFICATION	2.0951261463944898E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999909476045062	WITHOUT_CLASSIFICATION	9.052395493759259E-6	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999902493905981	WITHOUT_CLASSIFICATION	9.750609401940848E-6	DEFECT
// period	WITHOUT_CLASSIFICATION	0.9999926742205273	WITHOUT_CLASSIFICATION	7.325779472646884E-6	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999998298630169	WITHOUT_CLASSIFICATION	1.701369831308953E-7	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999998298630169	WITHOUT_CLASSIFICATION	1.701369831308953E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999994362561355	WITHOUT_CLASSIFICATION	5.63743864458519E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999994362561355	WITHOUT_CLASSIFICATION	5.63743864458519E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999998160195993	WITHOUT_CLASSIFICATION	1.83980400612404E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999998160195993	WITHOUT_CLASSIFICATION	1.83980400612404E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998677108446153	WITHOUT_CLASSIFICATION	1.3228915538469478E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998677108446153	WITHOUT_CLASSIFICATION	1.3228915538469478E-4	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.999999710793699	WITHOUT_CLASSIFICATION	2.8920630103601686E-7	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9996877372152218	WITHOUT_CLASSIFICATION	3.1226278477826576E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9998922266117733	WITHOUT_CLASSIFICATION	1.0777338822667631E-4	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9998922266117733	WITHOUT_CLASSIFICATION	1.0777338822667631E-4	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999962825470339	WITHOUT_CLASSIFICATION	3.7174529659647078E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999962825470339	WITHOUT_CLASSIFICATION	3.7174529659647078E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999962825470339	WITHOUT_CLASSIFICATION	3.7174529659647078E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999951816302106	WITHOUT_CLASSIFICATION	4.8183697893401175E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999951816302106	WITHOUT_CLASSIFICATION	4.8183697893401175E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999951816302106	WITHOUT_CLASSIFICATION	4.8183697893401175E-6	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999953970541862	WITHOUT_CLASSIFICATION	4.602945813827411E-6	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999953970541862	WITHOUT_CLASSIFICATION	4.602945813827411E-6	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999408617547788	WITHOUT_CLASSIFICATION	5.913824522110661E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999017776613313	WITHOUT_CLASSIFICATION	9.822233866869152E-5	DEFECT
// now test that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999934760893	WITHOUT_CLASSIFICATION	6.523910755735393E-9	DEFECT
// Make sure there's nothing left	WITHOUT_CLASSIFICATION	0.9999998730678377	WITHOUT_CLASSIFICATION	1.26932162311656E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999996839739204	WITHOUT_CLASSIFICATION	3.1602607969455105E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999996839739204	WITHOUT_CLASSIFICATION	3.1602607969455105E-7	DEFECT
// the moving average series has 7 items, the first three // days (11, 12, 13 August are skipped)	WITHOUT_CLASSIFICATION	0.9999974291888928	WITHOUT_CLASSIFICATION	2.570811107287291E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999998403673164	WITHOUT_CLASSIFICATION	1.5963268356293047E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999996839739204	WITHOUT_CLASSIFICATION	3.1602607969455105E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999910054919332	WITHOUT_CLASSIFICATION	8.994508066879857E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999965573438161	WITHOUT_CLASSIFICATION	3.44265618397104E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999965573438161	WITHOUT_CLASSIFICATION	3.44265618397104E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999965573438161	WITHOUT_CLASSIFICATION	3.44265618397104E-6	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.9999998278563528	WITHOUT_CLASSIFICATION	1.721436472835092E-7	DEFECT
// now add another series	WITHOUT_CLASSIFICATION	0.9999998283144135	WITHOUT_CLASSIFICATION	1.716855865059527E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999993322557951	WITHOUT_CLASSIFICATION	6.677442049172321E-7	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.9999843003132105	WITHOUT_CLASSIFICATION	1.5699686789523178E-5	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999999783632372	WITHOUT_CLASSIFICATION	2.1636762828550494E-8	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999999783632372	WITHOUT_CLASSIFICATION	2.1636762828550494E-8	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999995802629332	WITHOUT_CLASSIFICATION	4.197370667540998E-7	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.9999879152589248	WITHOUT_CLASSIFICATION	1.2084741075195067E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999909476045062	WITHOUT_CLASSIFICATION	9.052395493759259E-6	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999902493905981	WITHOUT_CLASSIFICATION	9.750609401940848E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997069521441	WITHOUT_CLASSIFICATION	2.930478558369902E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997069521441	WITHOUT_CLASSIFICATION	2.930478558369902E-7	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999998298630169	WITHOUT_CLASSIFICATION	1.701369831308953E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999994362561355	WITHOUT_CLASSIFICATION	5.63743864458519E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999998160195993	WITHOUT_CLASSIFICATION	1.83980400612404E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998677108446153	WITHOUT_CLASSIFICATION	1.3228915538469478E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998677108446153	WITHOUT_CLASSIFICATION	1.3228915538469478E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998677108446153	WITHOUT_CLASSIFICATION	1.3228915538469478E-4	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999969296282311	WITHOUT_CLASSIFICATION	3.0703717688995553E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999969296282311	WITHOUT_CLASSIFICATION	3.0703717688995553E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.999999710793699	WITHOUT_CLASSIFICATION	2.8920630103601686E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999017776613313	WITHOUT_CLASSIFICATION	9.822233866869152E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999017776613313	WITHOUT_CLASSIFICATION	9.822233866869152E-5	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999992729515229	WITHOUT_CLASSIFICATION	7.27048477198469E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999996839739204	WITHOUT_CLASSIFICATION	3.1602607969455105E-7	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999965573438161	WITHOUT_CLASSIFICATION	3.44265618397104E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999998403673164	WITHOUT_CLASSIFICATION	1.5963268356293047E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999910054919332	WITHOUT_CLASSIFICATION	8.994508066879857E-6	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999910054919332	WITHOUT_CLASSIFICATION	8.994508066879857E-6	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.9999998278563528	WITHOUT_CLASSIFICATION	1.721436472835092E-7	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999999783632372	WITHOUT_CLASSIFICATION	2.1636762828550494E-8	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999995802629332	WITHOUT_CLASSIFICATION	4.197370667540998E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999993322557951	WITHOUT_CLASSIFICATION	6.677442049172321E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999993322557951	WITHOUT_CLASSIFICATION	6.677442049172321E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999993322557951	WITHOUT_CLASSIFICATION	6.677442049172321E-7	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999996014950487	WITHOUT_CLASSIFICATION	3.9850495123113363E-7	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999996014950487	WITHOUT_CLASSIFICATION	3.9850495123113363E-7	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999996014950487	WITHOUT_CLASSIFICATION	3.9850495123113363E-7	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999995027793505	WITHOUT_CLASSIFICATION	4.972206495043907E-7	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999995027793505	WITHOUT_CLASSIFICATION	4.972206495043907E-7	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999995027793505	WITHOUT_CLASSIFICATION	4.972206495043907E-7	DEFECT
// try an index out of bounds	WITHOUT_CLASSIFICATION	0.9999954205961088	WITHOUT_CLASSIFICATION	4.579403891166444E-6	DEFECT
// now add some more data	WITHOUT_CLASSIFICATION	0.9999991884562919	WITHOUT_CLASSIFICATION	8.11543708077235E-7	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9999907831389133	WITHOUT_CLASSIFICATION	9.216861086693078E-6	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9999931056759778	WITHOUT_CLASSIFICATION	6.894324022203349E-6	DEFECT
// first check that a valid renaming works	WITHOUT_CLASSIFICATION	0.9999995458626804	WITHOUT_CLASSIFICATION	4.5413731965992366E-7	DEFECT
// next, check that setting a duplicate key fails	WITHOUT_CLASSIFICATION	0.9999969990406086	WITHOUT_CLASSIFICATION	3.000959391396822E-6	DEFECT
// create an array of items in reverse order	WITHOUT_CLASSIFICATION	0.9999997668434686	WITHOUT_CLASSIFICATION	2.331565314396986E-7	DEFECT
// got the required exception	WITHOUT_CLASSIFICATION	0.9999656954303279	WITHOUT_CLASSIFICATION	3.430456967209489E-5	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999999979221349	WITHOUT_CLASSIFICATION	2.0778651021830923E-9	DEFECT
// call parent method // setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9999986318781119	WITHOUT_CLASSIFICATION	1.3681218880227952E-6	DEFECT
//if flag then change to log version of lowest value // to make range begin at a 10^n value:	WITHOUT_CLASSIFICATION	0.9999987708178988	WITHOUT_CLASSIFICATION	1.2291821011669364E-6	DEFECT
//if less than 1.0 then make it 1.0 //add in margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9999986633837283	WITHOUT_CLASSIFICATION	1.336616271766705E-6	DEFECT
//negatives not allowed and upper bound between 0 & 1 //round up to nearest significant digit for bound: //get negative exponent:	WITHOUT_CLASSIFICATION	0.9998133791092578	WITHOUT_CLASSIFICATION	1.866208907422066E-4	DEFECT
//not first tick to be displayed //no tick label	WITHOUT_CLASSIFICATION	0.9999983349742181	WITHOUT_CLASSIFICATION	1.6650257820122177E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054446095	WITHOUT_CLASSIFICATION	8.945553906110446E-7	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999909476045062	WITHOUT_CLASSIFICATION	9.052395493759259E-6	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999902493905981	WITHOUT_CLASSIFICATION	9.750609401940848E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997069521441	WITHOUT_CLASSIFICATION	2.930478558369902E-7	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.9999994976689109	WITHOUT_CLASSIFICATION	5.02331089116955E-7	DEFECT
// try a few checks to ensure that the clone is independent of the // original	WITHOUT_CLASSIFICATION	0.9999999671944074	WITHOUT_CLASSIFICATION	3.280559265351421E-8	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999998298630169	WITHOUT_CLASSIFICATION	1.701369831308953E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999994362561355	WITHOUT_CLASSIFICATION	5.63743864458519E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999998160195993	WITHOUT_CLASSIFICATION	1.83980400612404E-7	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.999999710793699	WITHOUT_CLASSIFICATION	2.8920630103601686E-7	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.999998451341342	WITHOUT_CLASSIFICATION	1.548658658053268E-6	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9997919492969767	WITHOUT_CLASSIFICATION	2.0805070302344538E-4	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9993812181666213	WITHOUT_CLASSIFICATION	6.187818333787303E-4	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999408617547788	WITHOUT_CLASSIFICATION	5.913824522110661E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999017776613313	WITHOUT_CLASSIFICATION	9.822233866869152E-5	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999965573438161	WITHOUT_CLASSIFICATION	3.44265618397104E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999998403673164	WITHOUT_CLASSIFICATION	1.5963268356293047E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999910054919332	WITHOUT_CLASSIFICATION	8.994508066879857E-6	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.9999843003132105	WITHOUT_CLASSIFICATION	1.5699686789523178E-5	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.9999879152589248	WITHOUT_CLASSIFICATION	1.2084741075195067E-5	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9999907831389133	WITHOUT_CLASSIFICATION	9.216861086693078E-6	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9999931056759778	WITHOUT_CLASSIFICATION	6.894324022203349E-6	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999991852724435	WITHOUT_CLASSIFICATION	8.147275564387153E-7	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999900931701754	WITHOUT_CLASSIFICATION	9.906829824629179E-6	DEFECT
// the series name should not  // change because "C" is already the key for the other series in the // collection	WITHOUT_CLASSIFICATION	0.999999721541811	WITHOUT_CLASSIFICATION	2.784581889691679E-7	DEFECT
//  Test that there are 6 X points and some specific values	WITHOUT_CLASSIFICATION	0.9999999298951876	WITHOUT_CLASSIFICATION	7.010481248004562E-8	DEFECT
// after adding a point to a series, check that there are now 7 // items in each series	WITHOUT_CLASSIFICATION	0.999999931415564	WITHOUT_CLASSIFICATION	6.858443604246002E-8	DEFECT
//  Remove series 1	WITHOUT_CLASSIFICATION	0.9999909796055473	WITHOUT_CLASSIFICATION	9.020394452795605E-6	DEFECT
//  Test that there are still 7 X points	WITHOUT_CLASSIFICATION	0.9999996357931183	WITHOUT_CLASSIFICATION	3.6420688165799416E-7	DEFECT
//  Remove series 2 and add new series	WITHOUT_CLASSIFICATION	0.9999739927560906	WITHOUT_CLASSIFICATION	2.6007243909478356E-5	DEFECT
//  Test that there are now 4 X points	WITHOUT_CLASSIFICATION	0.9999998368500637	WITHOUT_CLASSIFICATION	1.631499363498369E-7	DEFECT
// WITH AUTOPRUNING	WITHOUT_CLASSIFICATION	0.9999975081889642	WITHOUT_CLASSIFICATION	2.491811035848557E-6	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.999997716498499	WITHOUT_CLASSIFICATION	2.2835015008928364E-6	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.999997716498499	WITHOUT_CLASSIFICATION	2.2835015008928364E-6	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9999978519373248	WITHOUT_CLASSIFICATION	2.14806267516587E-6	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9999978519373248	WITHOUT_CLASSIFICATION	2.14806267516587E-6	DEFECT
// 1 value pruned.	WITHOUT_CLASSIFICATION	0.9999992927909921	WITHOUT_CLASSIFICATION	7.072090078973606E-7	DEFECT
// WITHOUT AUTOPRUNING	WITHOUT_CLASSIFICATION	0.9999970263177429	WITHOUT_CLASSIFICATION	2.973682257155919E-6	DEFECT
// still 2.	WITHOUT_CLASSIFICATION	0.9999984976930251	WITHOUT_CLASSIFICATION	1.502306974916465E-6	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999986911097706	WITHOUT_CLASSIFICATION	1.3088902294000686E-6	DEFECT
// here we do a check to see if the user is installing the "Legacy" // theme, and reset the bar painters in that case...	WITHOUT_CLASSIFICATION	0.9999996706818745	WITHOUT_CLASSIFICATION	3.2931812557002714E-7	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999996524388979	WITHOUT_CLASSIFICATION	3.475611021050268E-7	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9999087598218378	WITHOUT_CLASSIFICATION	9.124017816221689E-5	DEFECT
// calculate the bar width - this calculation differs from the // BarRenderer calculation because the bars are layered on top of one // another, so there is effectively only one bar per category for // the purpose of the bar width calculation	WITHOUT_CLASSIFICATION	0.9993913740684534	WITHOUT_CLASSIFICATION	6.086259315465582E-4	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999999659378913	WITHOUT_CLASSIFICATION	3.40621086758866E-8	DEFECT
// if the current stroke is not a BasicStroke then it is handled as // a special case	WITHOUT_CLASSIFICATION	0.999999086386752	WITHOUT_CLASSIFICATION	9.136132480189513E-7	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999999939250497	WITHOUT_CLASSIFICATION	6.07495034945467E-9	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999997459854588	WITHOUT_CLASSIFICATION	2.540145411036474E-7	DEFECT
// the segment is entirely at the // front of the chart	WITHOUT_CLASSIFICATION	0.9999994565496476	WITHOUT_CLASSIFICATION	5.434503523467616E-7	DEFECT
// starts at back and wraps right around to the // back again	WITHOUT_CLASSIFICATION	0.9999996876384659	WITHOUT_CLASSIFICATION	3.1236153415993695E-7	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999989188104632	WITHOUT_CLASSIFICATION	1.0811895368657408E-6	DEFECT
//  double range = this.domainAxis.getRange().getLength(); //  double scaledRange = range * percent; //  domainAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999995196292504	WITHOUT_CLASSIFICATION	4.803707496340083E-7	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.9992835677601646	WITHOUT_CLASSIFICATION	7.164322398353346E-4	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.999939757981788	WITHOUT_CLASSIFICATION	6.0242018211867544E-5	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999999163240308	WITHOUT_CLASSIFICATION	8.3675969114094E-8	DEFECT
// if the 'notify' flag has been switched to false, we don't notify // the listeners	WITHOUT_CLASSIFICATION	0.9999987983291249	WITHOUT_CLASSIFICATION	1.2016708751694682E-6	DEFECT
// private Plot parent <-- don't clone the parent plot, but take care // childs in combined plots instead	WITHOUT_CLASSIFICATION	0.9995297225341775	WITHOUT_CLASSIFICATION	4.70277465822557E-4	DEFECT
// For the case were the first tick is greater // than minZ	WITHOUT_CLASSIFICATION	0.9999998180877278	WITHOUT_CLASSIFICATION	1.819122721819569E-7	DEFECT
// add an entity for the item, but only if it falls within the // data area...	WITHOUT_CLASSIFICATION	0.9997606531986922	WITHOUT_CLASSIFICATION	2.3934680130781202E-4	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999983942249648	WITHOUT_CLASSIFICATION	1.6057750352191699E-6	DEFECT
// when the x-values are sorted in descending order, the lower // bound is found by calculating relative to the xHigh value	WITHOUT_CLASSIFICATION	0.9999999035862547	WITHOUT_CLASSIFICATION	9.641374530458685E-8	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9999087598218378	WITHOUT_CLASSIFICATION	9.124017816221689E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9999087598218378	WITHOUT_CLASSIFICATION	9.124017816221689E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999247168904	WITHOUT_CLASSIFICATION	7.52831096941057E-8	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999999913520298	WITHOUT_CLASSIFICATION	8.6479703316213E-9	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999999913520298	WITHOUT_CLASSIFICATION	8.6479703316213E-9	DEFECT
// if the dataset is not a StatisticalCategoryDataset then just revert // to the superclass (LineAndShapeRenderer) behaviour...	WITHOUT_CLASSIFICATION	0.9999999816038674	WITHOUT_CLASSIFICATION	1.839613256858429E-8	DEFECT
// FIXME: add setSeriesToolTipGenerator(int, CategoryToolTipGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.9975584871835332	WITHOUT_CLASSIFICATION	0.0024415128164666866	DEFECT
// average radius // outlier radius	WITHOUT_CLASSIFICATION	0.9999999340211232	WITHOUT_CLASSIFICATION	6.59788767938012E-8	DEFECT
// false preserves the old behaviour // prior to introducing this flag	WITHOUT_CLASSIFICATION	0.9999861941009203	WITHOUT_CLASSIFICATION	1.3805899079752609E-5	DEFECT
// These are deliberately not bounded to minimums/maxCandleWidth to //  retain old behaviour.	WITHOUT_CLASSIFICATION	0.9999999948739977	WITHOUT_CLASSIFICATION	5.126002320804735E-9	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.9999738743214543	WITHOUT_CLASSIFICATION	2.612567854565789E-5	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.9999738743214543	WITHOUT_CLASSIFICATION	2.612567854565789E-5	DEFECT
// deregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999534043137	WITHOUT_CLASSIFICATION	4.659568628794358E-8	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999998180696	WITHOUT_CLASSIFICATION	1.8193042044504036E-10	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999982481007043	WITHOUT_CLASSIFICATION	1.7518992958197655E-6	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999895989982671	WITHOUT_CLASSIFICATION	1.0401001732884699E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// end period is not in original series // this is first item AFTER end period // so this is last item BEFORE end	WITHOUT_CLASSIFICATION	0.9999345263071221	WITHOUT_CLASSIFICATION	6.547369287789967E-5	DEFECT
// the first initialization must precede creation of the ValueSet array: // establishes length of each array	WITHOUT_CLASSIFICATION	0.9999978083712223	WITHOUT_CLASSIFICATION	2.1916287777136553E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.9998928333277332	WITHOUT_CLASSIFICATION	1.0716667226687891E-4	DEFECT
// draw outliers // outlier radius	WITHOUT_CLASSIFICATION	0.9999998173558473	WITHOUT_CLASSIFICATION	1.8264415280127977E-7	DEFECT
// NULL value -> insert point on base line // instead of 'step point'	WITHOUT_CLASSIFICATION	0.9999999590039255	WITHOUT_CLASSIFICATION	4.0996074530514055E-8	DEFECT
// coordinate pairs // current minuend point // next minuend point // current subtrahend point // next subtrahend point	WITHOUT_CLASSIFICATION	0.9999988923962481	WITHOUT_CLASSIFICATION	1.1076037519587974E-6	DEFECT
// the intersect is at the next point for both the minuend // and subtrahend	WITHOUT_CLASSIFICATION	0.9999994226818887	WITHOUT_CLASSIFICATION	5.773181114151249E-7	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.9999993182400309	WITHOUT_CLASSIFICATION	6.817599692212334E-7	DEFECT
// the following code handles the line for the y-values...it's // all done by code in the super class	WITHOUT_CLASSIFICATION	0.999994936616547	WITHOUT_CLASSIFICATION	5.063383453015318E-6	DEFECT
// Check if the item is the last item for the series and number of // items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999999814925823	WITHOUT_CLASSIFICATION	1.8507417709053264E-8	DEFECT
// use item paint for outlines by // default, not outline paint	WITHOUT_CLASSIFICATION	0.9999999138814686	WITHOUT_CLASSIFICATION	8.611853137809392E-8	DEFECT
// add an entity for the item, but only if it falls within the data // area...	WITHOUT_CLASSIFICATION	0.9999545650481457	WITHOUT_CLASSIFICATION	4.543495185424262E-5	DEFECT
// the bounds should be calculated using just the items within // the current range of the x-axis...if there is one	WITHOUT_CLASSIFICATION	0.9999999703305218	WITHOUT_CLASSIFICATION	2.966947813433039E-8	DEFECT
// We organise the data with the following assumption: // 1) the data are sorted by x then y // 2) that the data will be represented by a rectangle formed by //    using x[i+1], x, y[j+1], and y. // 3) we march along the y-axis at the same value of x until a new //    value x is found at which point we will flag the index //    where x[i+1]<>x[i]	WITHOUT_CLASSIFICATION	0.9999925734822692	WITHOUT_CLASSIFICATION	7.426517730817763E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.9999999977808989	WITHOUT_CLASSIFICATION	2.219101078024301E-9	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9999999642419266	WITHOUT_CLASSIFICATION	3.575807332590375E-8	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998606484353	WITHOUT_CLASSIFICATION	1.3935156470004066E-5	DEFECT
// have to use a subclass of // AbstractRenderer	WITHOUT_CLASSIFICATION	0.9999994062638475	WITHOUT_CLASSIFICATION	5.937361524377104E-7	DEFECT
// include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.999999886689777	WITHOUT_CLASSIFICATION	1.1331022288531205E-7	DEFECT
// setup our test timelines // // Legend for comments below: // <spaces> = Segments included in the final timeline // EE       = Excluded segments via timeline rules // xx       = Exception segments inherited from base timeline exclusions	WITHOUT_CLASSIFICATION	0.9999999802742284	WITHOUT_CLASSIFICATION	1.972577154909785E-8	DEFECT
////////////////////////////////////////////////////////////////////////// // test exception segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998813809858	WITHOUT_CLASSIFICATION	1.1861901417389136E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999992275035561	WITHOUT_CLASSIFICATION	7.724964439165413E-7	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9999961462480547	WITHOUT_CLASSIFICATION	3.853751945339964E-6	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9999961462480547	WITHOUT_CLASSIFICATION	3.853751945339964E-6	DEFECT
// after clearing, reverts to // default group	WITHOUT_CLASSIFICATION	0.9999999651230962	WITHOUT_CLASSIFICATION	3.4876903749926676E-8	DEFECT
// regular equality for the datasets doesn't check the fields, just // the data values...so let's check some more things...	WITHOUT_CLASSIFICATION	0.9999999909891396	WITHOUT_CLASSIFICATION	9.010860415925396E-9	DEFECT
// these methods should throw an IndexOutOfBoundsException since the // column is too high...	WITHOUT_CLASSIFICATION	0.9923621537053973	WITHOUT_CLASSIFICATION	0.0076378462946027435	DEFECT
// this replaces the entry with the current minimum value, but the new // minimum value is now in a different item	WITHOUT_CLASSIFICATION	0.9999942619436202	WITHOUT_CLASSIFICATION	5.7380563798253925E-6	DEFECT
// the dataset should prevent the addition of a series with the // same name as an existing series in the dataset	WITHOUT_CLASSIFICATION	0.9999905145983985	WITHOUT_CLASSIFICATION	9.485401601485211E-6	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.9999976103230184	WITHOUT_CLASSIFICATION	2.3896769815906077E-6	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999999191390182	WITHOUT_CLASSIFICATION	8.086098181039715E-8	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.999998451341342	WITHOUT_CLASSIFICATION	1.548658658053268E-6	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9997919492969767	WITHOUT_CLASSIFICATION	2.0805070302344538E-4	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9998922266117733	WITHOUT_CLASSIFICATION	1.0777338822667631E-4	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999408617547788	WITHOUT_CLASSIFICATION	5.913824522110661E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999408617547788	WITHOUT_CLASSIFICATION	5.913824522110661E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999017776613313	WITHOUT_CLASSIFICATION	9.822233866869152E-5	DEFECT
// when the dataset contains one or more series, but those series // contain no items, we still expect the range to be null	WITHOUT_CLASSIFICATION	0.9999958928993796	WITHOUT_CLASSIFICATION	4.107100620461367E-6	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999992729515229	WITHOUT_CLASSIFICATION	7.27048477198469E-7	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999992729515229	WITHOUT_CLASSIFICATION	7.27048477198469E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999996839739204	WITHOUT_CLASSIFICATION	3.1602607969455105E-7	DEFECT
// open	WITHOUT_CLASSIFICATION	0.9999958202374166	WITHOUT_CLASSIFICATION	4.179762583331495E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999998403673164	WITHOUT_CLASSIFICATION	1.5963268356293047E-7	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999999783632372	WITHOUT_CLASSIFICATION	2.1636762828550494E-8	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999995802629332	WITHOUT_CLASSIFICATION	4.197370667540998E-7	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999995802629332	WITHOUT_CLASSIFICATION	4.197370667540998E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999993322557951	WITHOUT_CLASSIFICATION	6.677442049172321E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999993322557951	WITHOUT_CLASSIFICATION	6.677442049172321E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999993322557951	WITHOUT_CLASSIFICATION	6.677442049172321E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999993322557951	WITHOUT_CLASSIFICATION	6.677442049172321E-7	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999991852724435	WITHOUT_CLASSIFICATION	8.147275564387153E-7	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999991852724435	WITHOUT_CLASSIFICATION	8.147275564387153E-7	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999900931701754	WITHOUT_CLASSIFICATION	9.906829824629179E-6	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999900931701754	WITHOUT_CLASSIFICATION	9.906829824629179E-6	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9999462080671115	WITHOUT_CLASSIFICATION	5.37919328885582E-5	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999928813406261	WITHOUT_CLASSIFICATION	7.11865937394213E-6	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.999999655354581	WITHOUT_CLASSIFICATION	3.446454189885014E-7	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.999999655354581	WITHOUT_CLASSIFICATION	3.446454189885014E-7	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999928813406261	WITHOUT_CLASSIFICATION	7.11865937394213E-6	DEFECT
// slope	WITHOUT_CLASSIFICATION	0.9999986419196154	WITHOUT_CLASSIFICATION	1.3580803846705057E-6	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9999462080671115	WITHOUT_CLASSIFICATION	5.37919328885582E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995774200064	WITHOUT_CLASSIFICATION	4.2257999362443104E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995774200064	WITHOUT_CLASSIFICATION	4.2257999362443104E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995774200064	WITHOUT_CLASSIFICATION	4.2257999362443104E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995774200064	WITHOUT_CLASSIFICATION	4.2257999362443104E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995774200064	WITHOUT_CLASSIFICATION	4.2257999362443104E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995774200064	WITHOUT_CLASSIFICATION	4.2257999362443104E-7	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusGained(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.999999999997828	WITHOUT_CLASSIFICATION	2.171969429290275E-12	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusLost(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999999999869054	WITHOUT_CLASSIFICATION	1.3094707492196863E-11	DEFECT
/* (non-Javadoc)         * @see org.jfree.chart.axis.LogarithmicAxis#switchedLog10(double)         */	WITHOUT_CLASSIFICATION	0.99999999986929	WITHOUT_CLASSIFICATION	1.3071000077184397E-10	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995774200064	WITHOUT_CLASSIFICATION	4.2257999362443104E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995774200064	WITHOUT_CLASSIFICATION	4.2257999362443104E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995774200064	WITHOUT_CLASSIFICATION	4.2257999362443104E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995774200064	WITHOUT_CLASSIFICATION	4.2257999362443104E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995774200064	WITHOUT_CLASSIFICATION	4.2257999362443104E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999996014304935	WITHOUT_CLASSIFICATION	3.9856950646390947E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999996014304935	WITHOUT_CLASSIFICATION	3.9856950646390947E-7	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999971243557433	WITHOUT_CLASSIFICATION	2.8756442567676957E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999971243557433	WITHOUT_CLASSIFICATION	2.8756442567676957E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999971243557433	WITHOUT_CLASSIFICATION	2.8756442567676957E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999971243557433	WITHOUT_CLASSIFICATION	2.8756442567676957E-6	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999830986115095	WITHOUT_CLASSIFICATION	1.690138849053903E-5	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999993382423684	WITHOUT_CLASSIFICATION	6.617576316317963E-7	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999993382423684	WITHOUT_CLASSIFICATION	6.617576316317963E-7	DEFECT
// Anwender hat abgebrochen.	WITHOUT_CLASSIFICATION	0.9999940992163963	WITHOUT_CLASSIFICATION	5.900783603791469E-6	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999948588754067	WITHOUT_CLASSIFICATION	5.141124593275225E-6	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999948588754067	WITHOUT_CLASSIFICATION	5.141124593275225E-6	DEFECT
// ...but this does!	WITHOUT_CLASSIFICATION	0.9998406218266813	WITHOUT_CLASSIFICATION	1.593781733187506E-4	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999948588754067	WITHOUT_CLASSIFICATION	5.141124593275225E-6	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999999904339447	WITHOUT_CLASSIFICATION	9.56605524857299E-9	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999971243557433	WITHOUT_CLASSIFICATION	2.8756442567676957E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999971243557433	WITHOUT_CLASSIFICATION	2.8756442567676957E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999996017501482	WITHOUT_CLASSIFICATION	3.9824985179223825E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999996017501482	WITHOUT_CLASSIFICATION	3.9824985179223825E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999980283148201	WITHOUT_CLASSIFICATION	1.971685179908956E-6	DEFECT
// FIXME: we've cloned the chart, but the dataset(s) aren't cloned // and we should do that	DEFECT	0.9959453606301245	WITHOUT_CLASSIFICATION	0.004054639369875507	DEFECT
// todo: not serialized yet	DEFECT	0.999770411783394	WITHOUT_CLASSIFICATION	2.2958821660598242E-4	DEFECT
// FIRST_MONDAY_AFTER_1900 = cal.getTime().getTime(); // preceding code won't work with JDK 1.3	DEFECT	0.9361460442001038	WITHOUT_CLASSIFICATION	0.0638539557998961	DEFECT
// TODO: we didn't check the height yet	DEFECT	0.5552793537510312	WITHOUT_CLASSIFICATION	0.4447206462489688	DEFECT
// TODO: we didn't check the height yet	DEFECT	0.5552793537510312	WITHOUT_CLASSIFICATION	0.4447206462489688	DEFECT
// TODO: Check this result...	DEFECT	0.6424358946544555	WITHOUT_CLASSIFICATION	0.3575641053455445	DEFECT
// TODO: Check this result...	DEFECT	0.6424358946544555	WITHOUT_CLASSIFICATION	0.3575641053455445	DEFECT
//return cal.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9992766820299305	WITHOUT_CLASSIFICATION	7.233179700695604E-4	DEFECT
// result = this.workingCalendar.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9993139560532365	WITHOUT_CLASSIFICATION	6.860439467634601E-4	DEFECT
