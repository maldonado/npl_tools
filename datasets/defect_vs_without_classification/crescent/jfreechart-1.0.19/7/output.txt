// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.9999967902088648	WITHOUT_CLASSIFICATION	3.2097911352078203E-6	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999638491527951	WITHOUT_CLASSIFICATION	3.6150847204931946E-5	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.9999970957713432	WITHOUT_CLASSIFICATION	2.904228656900317E-6	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.9999926813604711	WITHOUT_CLASSIFICATION	7.318639528847071E-6	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.9999689067716875	WITHOUT_CLASSIFICATION	3.109322831249031E-5	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9999521095949144	WITHOUT_CLASSIFICATION	4.78904050856793E-5	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.9999963308684949	WITHOUT_CLASSIFICATION	3.669131504999595E-6	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.999985079116897	WITHOUT_CLASSIFICATION	1.4920883102981984E-5	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9999924988700464	WITHOUT_CLASSIFICATION	7.50112995363E-6	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.9999827004238648	WITHOUT_CLASSIFICATION	1.7299576135243373E-5	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999958117552397	WITHOUT_CLASSIFICATION	4.188244760289778E-6	DEFECT
// units	WITHOUT_CLASSIFICATION	0.9999893672836915	WITHOUT_CLASSIFICATION	1.0632716308632019E-5	DEFECT
// interval	WITHOUT_CLASSIFICATION	0.9999988344568249	WITHOUT_CLASSIFICATION	1.1655431751229313E-6	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999964665481116	WITHOUT_CLASSIFICATION	3.533451888342324E-6	DEFECT
// dial shape	WITHOUT_CLASSIFICATION	0.9999944589171813	WITHOUT_CLASSIFICATION	5.5410828187420385E-6	DEFECT
// dial background paint	WITHOUT_CLASSIFICATION	0.99999641263221	WITHOUT_CLASSIFICATION	3.587367790080248E-6	DEFECT
// seriesPaint	WITHOUT_CLASSIFICATION	0.9999997933990357	WITHOUT_CLASSIFICATION	2.0660096427946286E-7	DEFECT
// seriesPaintList	WITHOUT_CLASSIFICATION	0.9999996229408774	WITHOUT_CLASSIFICATION	3.770591226344317E-7	DEFECT
// baseSeriesPaint	WITHOUT_CLASSIFICATION	0.9999995481217063	WITHOUT_CLASSIFICATION	4.518782936952307E-7	DEFECT
// seriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999997899253495	WITHOUT_CLASSIFICATION	2.1007465050109925E-7	DEFECT
// seriesOutlinePaintList	WITHOUT_CLASSIFICATION	0.9999996166011933	WITHOUT_CLASSIFICATION	3.833988067524995E-7	DEFECT
// baseSeriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999995405240505	WITHOUT_CLASSIFICATION	4.5947594947897183E-7	DEFECT
// seriesOutlineStroke	WITHOUT_CLASSIFICATION	0.9999771564396799	WITHOUT_CLASSIFICATION	2.2843560320145186E-5	DEFECT
// seriesOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999737600921963	WITHOUT_CLASSIFICATION	2.6239907803652275E-5	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999938948528067	WITHOUT_CLASSIFICATION	6.105147193387759E-6	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999456231601398	WITHOUT_CLASSIFICATION	5.4376839860124124E-5	DEFECT
// high	WITHOUT_CLASSIFICATION	0.9999677131750612	WITHOUT_CLASSIFICATION	3.228682493880799E-5	DEFECT
// low	WITHOUT_CLASSIFICATION	0.9999828324005421	WITHOUT_CLASSIFICATION	1.7167599457931736E-5	DEFECT
// close	WITHOUT_CLASSIFICATION	0.999998712056032	WITHOUT_CLASSIFICATION	1.2879439680439987E-6	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999530093695971	WITHOUT_CLASSIFICATION	4.6990630402906684E-5	DEFECT
// there should be no change event when clearing an empty series	WITHOUT_CLASSIFICATION	0.9999909228564446	WITHOUT_CLASSIFICATION	9.077143555464809E-6	DEFECT
// clean up	WITHOUT_CLASSIFICATION	0.9999969216921862	WITHOUT_CLASSIFICATION	3.0783078137833853E-6	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999971069392226	WITHOUT_CLASSIFICATION	2.893060777421339E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.999926460307576	WITHOUT_CLASSIFICATION	7.35396924238667E-5	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999974396970321	WITHOUT_CLASSIFICATION	2.5603029679730174E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999982907507954	WITHOUT_CLASSIFICATION	1.7092492046575083E-6	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999954608089529	WITHOUT_CLASSIFICATION	4.539191047096632E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.999996165712016	WITHOUT_CLASSIFICATION	3.8342879840438275E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999929380011021	WITHOUT_CLASSIFICATION	7.061998897867044E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999929380011021	WITHOUT_CLASSIFICATION	7.061998897867044E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999929380011021	WITHOUT_CLASSIFICATION	7.061998897867044E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999929380011021	WITHOUT_CLASSIFICATION	7.061998897867044E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999929380011021	WITHOUT_CLASSIFICATION	7.061998897867044E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999929380011021	WITHOUT_CLASSIFICATION	7.061998897867044E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999929380011021	WITHOUT_CLASSIFICATION	7.061998897867044E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999929380011021	WITHOUT_CLASSIFICATION	7.061998897867044E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999929380011021	WITHOUT_CLASSIFICATION	7.061998897867044E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999929380011021	WITHOUT_CLASSIFICATION	7.061998897867044E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999929380011021	WITHOUT_CLASSIFICATION	7.061998897867044E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999929380011021	WITHOUT_CLASSIFICATION	7.061998897867044E-6	DEFECT
// super.drawSecondaryPass(g2, plot, dataset, pass, series, item, // domainAxis, dataArea, rangeAxis, crosshairState, entities);	WITHOUT_CLASSIFICATION	0.9999999642284076	WITHOUT_CLASSIFICATION	3.5771592386779497E-8	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.99999991026911	WITHOUT_CLASSIFICATION	8.973089002416219E-8	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.99999991026911	WITHOUT_CLASSIFICATION	8.973089002416219E-8	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.99999991026911	WITHOUT_CLASSIFICATION	8.973089002416219E-8	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9999913598274534	WITHOUT_CLASSIFICATION	8.640172546669461E-6	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999995072204	WITHOUT_CLASSIFICATION	4.927795453927828E-10	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999976740516019	WITHOUT_CLASSIFICATION	2.3259483981581077E-6	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.999995937854342	WITHOUT_CLASSIFICATION	4.06214565796816E-6	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999566741527391	WITHOUT_CLASSIFICATION	4.3325847260807326E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999566741527391	WITHOUT_CLASSIFICATION	4.3325847260807326E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999566741527391	WITHOUT_CLASSIFICATION	4.3325847260807326E-5	DEFECT
// we clone the chart because presumably there can be some delay // between putting this instance on the system clipboard and // actually having the getTransferData() method called...	WITHOUT_CLASSIFICATION	0.9999999966260086	WITHOUT_CLASSIFICATION	3.373991504291695E-9	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999998151182926	WITHOUT_CLASSIFICATION	1.8488170742292527E-7	DEFECT
// create a legend, if requested...	WITHOUT_CLASSIFICATION	0.9999971376650865	WITHOUT_CLASSIFICATION	2.8623349134211164E-6	DEFECT
// pass the click on to the plot... // rely on the plot to post a plot change event and redraw the chart...	WITHOUT_CLASSIFICATION	0.9999959284654252	WITHOUT_CLASSIFICATION	4.071534574905852E-6	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9999998600085621	WITHOUT_CLASSIFICATION	1.399914378659443E-7	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999972974360689	WITHOUT_CLASSIFICATION	2.7025639310067618E-6	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999967047649032	WITHOUT_CLASSIFICATION	3.2952350966536804E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999993096576095	WITHOUT_CLASSIFICATION	6.903423903816178E-7	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999993096576095	WITHOUT_CLASSIFICATION	6.903423903816178E-7	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.9999792311107887	WITHOUT_CLASSIFICATION	2.0768889211374887E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9887860604911709	WITHOUT_CLASSIFICATION	0.011213939508829034	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9887860604911709	WITHOUT_CLASSIFICATION	0.011213939508829034	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9887860604911709	WITHOUT_CLASSIFICATION	0.011213939508829034	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9887860604911709	WITHOUT_CLASSIFICATION	0.011213939508829034	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999972583567385	WITHOUT_CLASSIFICATION	2.741643261501415E-6	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9999988377626047	WITHOUT_CLASSIFICATION	1.1622373953336354E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999870096186141	WITHOUT_CLASSIFICATION	1.2990381385844134E-5	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.9514654778093091	WITHOUT_CLASSIFICATION	0.048534522190690856	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999979631566712	WITHOUT_CLASSIFICATION	2.0368433288467663E-6	DEFECT
// work out the number of periods to skip for labelling	WITHOUT_CLASSIFICATION	0.9999994331968822	WITHOUT_CLASSIFICATION	5.668031177034423E-7	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999526967948715	WITHOUT_CLASSIFICATION	4.730320512846161E-5	DEFECT
// set flag true if negative values not allowed and the // lower bound is between 0 and 10:	WITHOUT_CLASSIFICATION	0.9999920043295418	WITHOUT_CLASSIFICATION	7.995670458248463E-6	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9999879594074385	WITHOUT_CLASSIFICATION	1.2040592561481553E-5	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.9999969383932606	WITHOUT_CLASSIFICATION	3.061606739248975E-6	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9999920324249435	WITHOUT_CLASSIFICATION	7.96757505654934E-6	DEFECT
//if less than 1.0 then make it 1.0 //subtract out margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9999997997792757	WITHOUT_CLASSIFICATION	2.0022072439621166E-7	DEFECT
//negatives not allowed and lower range bound is zero //use data range bound instead	WITHOUT_CLASSIFICATION	0.9999996894286698	WITHOUT_CLASSIFICATION	3.1057133021610935E-7	DEFECT
//get positive exponent //create multiplier value //multiply, round up, and divide for bound value:	WITHOUT_CLASSIFICATION	0.9999993470622217	WITHOUT_CLASSIFICATION	6.529377783126408E-7	DEFECT
//negatives allowed or upper bound not between 0 & 1 //if flag then change to log version of highest value to // make range begin at a 10^n value; else use nearest int	WITHOUT_CLASSIFICATION	0.99999999270408	WITHOUT_CLASSIFICATION	7.295920059257132E-9	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.999999900534292	WITHOUT_CLASSIFICATION	9.946570797836244E-8	DEFECT
//first tick of series, or not too small a value and // one of first 3 ticks, or last tick to be displayed // set exact number of fractional digits to be shown // (no effect if showing "1e#"-style ticks):	WITHOUT_CLASSIFICATION	0.999999937320591	WITHOUT_CLASSIFICATION	6.267940904020809E-8	DEFECT
//did zero tick last iteration //clear flag //create tick label string: //show tick label if "1e#"-style and it's one // of the first two, if it's the first or last // in the set, or if it's 1-5; beyond that // show fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999999020941583	WITHOUT_CLASSIFICATION	9.790584164803786E-8	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.99901635160484	WITHOUT_CLASSIFICATION	9.836483951600364E-4	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.99901635160484	WITHOUT_CLASSIFICATION	9.836483951600364E-4	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999867960257824	WITHOUT_CLASSIFICATION	1.320397421759005E-5	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.9999990568986838	WITHOUT_CLASSIFICATION	9.431013161097586E-7	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999518821715376	WITHOUT_CLASSIFICATION	4.811782846231952E-5	DEFECT
// we call refresh ticks just to get the maximum width or height	WITHOUT_CLASSIFICATION	0.9999999558437193	WITHOUT_CLASSIFICATION	4.415628076922275E-8	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.9999954556251804	WITHOUT_CLASSIFICATION	4.544374819596065E-6	DEFECT
// cycle through all the segments contained in the BaseTimeline // exception segment	WITHOUT_CLASSIFICATION	0.9999995201876846	WITHOUT_CLASSIFICATION	4.798123154156091E-7	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.9999993634002379	WITHOUT_CLASSIFICATION	6.365997621022908E-7	DEFECT
// first test for equality (contains or contained)	WITHOUT_CLASSIFICATION	0.9999998241369175	WITHOUT_CLASSIFICATION	1.7586308258145495E-7	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.9999658865126312	WITHOUT_CLASSIFICATION	3.4113487368769125E-5	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9999999780758947	WITHOUT_CLASSIFICATION	2.1924105362095916E-8	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9998516806588968	WITHOUT_CLASSIFICATION	1.483193411030503E-4	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999560182787387	WITHOUT_CLASSIFICATION	4.398172126128168E-5	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999308961655	WITHOUT_CLASSIFICATION	6.910383449470704E-8	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9999847615474622	WITHOUT_CLASSIFICATION	1.5238452537776426E-5	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999753140653954	WITHOUT_CLASSIFICATION	2.4685934604568956E-5	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999753140653954	WITHOUT_CLASSIFICATION	2.4685934604568956E-5	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999999835102044	WITHOUT_CLASSIFICATION	1.6489795656142176E-8	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.999999074729529	WITHOUT_CLASSIFICATION	9.252704710692119E-7	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9997929402821037	WITHOUT_CLASSIFICATION	2.070597178962247E-4	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.9992156194047279	WITHOUT_CLASSIFICATION	7.843805952719858E-4	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9999935191765824	WITHOUT_CLASSIFICATION	6.48082341762281E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999998492428747	WITHOUT_CLASSIFICATION	1.5075712527582766E-7	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999998492428747	WITHOUT_CLASSIFICATION	1.5075712527582766E-7	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999998492428747	WITHOUT_CLASSIFICATION	1.5075712527582766E-7	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999998492428747	WITHOUT_CLASSIFICATION	1.5075712527582766E-7	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999998492428747	WITHOUT_CLASSIFICATION	1.5075712527582766E-7	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999998492428747	WITHOUT_CLASSIFICATION	1.5075712527582766E-7	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999998492428747	WITHOUT_CLASSIFICATION	1.5075712527582766E-7	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999998492428747	WITHOUT_CLASSIFICATION	1.5075712527582766E-7	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999998492428747	WITHOUT_CLASSIFICATION	1.5075712527582766E-7	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.999999955417607	WITHOUT_CLASSIFICATION	4.458239312622376E-8	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.999999955417607	WITHOUT_CLASSIFICATION	4.458239312622376E-8	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999950820163495	WITHOUT_CLASSIFICATION	4.91798365064411E-6	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999950820163495	WITHOUT_CLASSIFICATION	4.91798365064411E-6	DEFECT
//no initial zoom rectangle exists but the handler is set //as life handler unregister	WITHOUT_CLASSIFICATION	0.999999642162005	WITHOUT_CLASSIFICATION	3.5783799502805507E-7	DEFECT
//float midX = (float) (minX + (plotArea.getWidth() * getRotateX())); //float midY = (float) (minY + (plotArea.getHeight() * getRotateY()));	WITHOUT_CLASSIFICATION	0.999986254715728	WITHOUT_CLASSIFICATION	1.3745284271885602E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999955953269668	WITHOUT_CLASSIFICATION	4.4046730331726374E-6	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999990500602205	WITHOUT_CLASSIFICATION	9.499397794043719E-7	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999990500602205	WITHOUT_CLASSIFICATION	9.499397794043719E-7	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9999561577329676	WITHOUT_CLASSIFICATION	4.384226703235632E-5	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999956543817103	WITHOUT_CLASSIFICATION	4.3456182896659484E-6	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.9999994260628463	WITHOUT_CLASSIFICATION	5.739371537132875E-7	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999986252194519	WITHOUT_CLASSIFICATION	1.374780548079594E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999986252194519	WITHOUT_CLASSIFICATION	1.374780548079594E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999992017311944	WITHOUT_CLASSIFICATION	7.982688057344483E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999992017311944	WITHOUT_CLASSIFICATION	7.982688057344483E-7	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999999880248432	WITHOUT_CLASSIFICATION	1.19751568085764E-8	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999998117990273	WITHOUT_CLASSIFICATION	1.8820097263259714E-7	DEFECT
// if we are drawing a perfect circle, we need to readjust the top left // coordinates of the drawing area for the arcs to arrive at this // effect.	WITHOUT_CLASSIFICATION	0.999999963032186	WITHOUT_CLASSIFICATION	3.69678139161096E-8	DEFECT
// establish the coordinates of the top left corner of the drawing area	WITHOUT_CLASSIFICATION	0.9999999930468157	WITHOUT_CLASSIFICATION	6.953184180125237E-9	DEFECT
// draw the sections at the top of the pie (and set up tooltips)...	WITHOUT_CLASSIFICATION	0.9999997149595656	WITHOUT_CLASSIFICATION	2.8504043437127154E-7	DEFECT
// the pie sections are arranged ANTICLOCKWISE	WITHOUT_CLASSIFICATION	0.9999993165489486	WITHOUT_CLASSIFICATION	6.834510513066924E-7	DEFECT
// starts at the back and finishes at the front // (wrapping the left side)	WITHOUT_CLASSIFICATION	0.9999949484880434	WITHOUT_CLASSIFICATION	5.051511956582496E-6	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.999999734316514	WITHOUT_CLASSIFICATION	2.656834859687559E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989849970972	WITHOUT_CLASSIFICATION	1.015002902854677E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989849970972	WITHOUT_CLASSIFICATION	1.015002902854677E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989849970972	WITHOUT_CLASSIFICATION	1.015002902854677E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989849970972	WITHOUT_CLASSIFICATION	1.015002902854677E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989849970972	WITHOUT_CLASSIFICATION	1.015002902854677E-6	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.9999995616161532	WITHOUT_CLASSIFICATION	4.383838467641909E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9994651244234947	WITHOUT_CLASSIFICATION	5.348755765053108E-4	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9994651244234947	WITHOUT_CLASSIFICATION	5.348755765053108E-4	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999929994096	WITHOUT_CLASSIFICATION	7.000590431821362E-9	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999989143368738	WITHOUT_CLASSIFICATION	1.0856631261683445E-6	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999989143368738	WITHOUT_CLASSIFICATION	1.0856631261683445E-6	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9982875578868424	WITHOUT_CLASSIFICATION	0.0017124421131575137	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9982875578868424	WITHOUT_CLASSIFICATION	0.0017124421131575137	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999991425606098	WITHOUT_CLASSIFICATION	8.574393901330624E-7	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999998927325112	WITHOUT_CLASSIFICATION	1.0726748877153927E-7	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999998927325112	WITHOUT_CLASSIFICATION	1.0726748877153927E-7	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999998927325112	WITHOUT_CLASSIFICATION	1.0726748877153927E-7	DEFECT
// the explode area defines the max circle/ellipse for the exploded // pie sections.  it is defined by shrinking the linkArea by the // linkMargin factor.	WITHOUT_CLASSIFICATION	0.9999960195151334	WITHOUT_CLASSIFICATION	3.980484866534979E-6	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9998752623021089	WITHOUT_CLASSIFICATION	1.2473769789118168E-4	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999876203107507	WITHOUT_CLASSIFICATION	1.237968924937476E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999876203107507	WITHOUT_CLASSIFICATION	1.237968924937476E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999876203107507	WITHOUT_CLASSIFICATION	1.237968924937476E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999876203107507	WITHOUT_CLASSIFICATION	1.237968924937476E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999876203107507	WITHOUT_CLASSIFICATION	1.237968924937476E-5	DEFECT
// no axis, no gridlines...	WITHOUT_CLASSIFICATION	0.9999990737217269	WITHOUT_CLASSIFICATION	9.262782729963537E-7	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999602408829176	WITHOUT_CLASSIFICATION	3.975911708249309E-5	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999602408829176	WITHOUT_CLASSIFICATION	3.975911708249309E-5	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9999113489052363	WITHOUT_CLASSIFICATION	8.865109476371086E-5	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999908086060183	WITHOUT_CLASSIFICATION	9.191393981645084E-6	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999908086060183	WITHOUT_CLASSIFICATION	9.191393981645084E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999977021583449	WITHOUT_CLASSIFICATION	2.297841654933306E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999991793099675	WITHOUT_CLASSIFICATION	8.206900325550038E-7	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999991793099675	WITHOUT_CLASSIFICATION	8.206900325550038E-7	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999991793099675	WITHOUT_CLASSIFICATION	8.206900325550038E-7	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999980934922856	WITHOUT_CLASSIFICATION	1.9065077143982672E-6	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999980934922856	WITHOUT_CLASSIFICATION	1.9065077143982672E-6	DEFECT
// the indicator bounds is calculated from the templateValue (which // determines the minimum size), the maxTemplateValue (which, if // specified, provides a maximum size) and the actual value	WITHOUT_CLASSIFICATION	0.9999997143401609	WITHOUT_CLASSIFICATION	2.8565983907333E-7	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999996850508817	WITHOUT_CLASSIFICATION	3.149491182441289E-7	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999996850508817	WITHOUT_CLASSIFICATION	3.149491182441289E-7	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999972485343755	WITHOUT_CLASSIFICATION	2.751465624490453E-6	DEFECT
// majorTickIncrement // majorTickLength // majorTickPaint // majorTickStroke // minorTickCount // minorTickLength // minorTickPaint // minorTickStroke // tickLabelOffset // tickLabelFont // tickLabelsVisible // tickLabelFormatter // firstTickLabelsVisible	WITHOUT_CLASSIFICATION	0.9999935529222929	WITHOUT_CLASSIFICATION	6.447077707191898E-6	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999977666402792	WITHOUT_CLASSIFICATION	2.2333597208266687E-6	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9999918251182934	WITHOUT_CLASSIFICATION	8.174881706609067E-6	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.9999855508629161	WITHOUT_CLASSIFICATION	1.4449137083920994E-5	DEFECT
// itemLabelFontList // baseItemLabelFont // itemLabelPaintList // baseItemLabelPaint // positiveItemLabelPositionList // basePositiveItemLabelPosition // negativeItemLabelPositionList // baseNegativeItemLabelPosition // itemLabelAnchorOffset // createEntityList // baseCreateEntities	WITHOUT_CLASSIFICATION	0.999999980553931	WITHOUT_CLASSIFICATION	1.944606905969523E-8	DEFECT
// for value in bounds, do the lookup...	WITHOUT_CLASSIFICATION	0.9999860383099406	WITHOUT_CLASSIFICATION	1.396169005943181E-5	DEFECT
// for data in ascending order by x-value, we are (broadly) looking // for the index of the highest x-value that is less than xLow	WITHOUT_CLASSIFICATION	0.99999975537107	WITHOUT_CLASSIFICATION	2.446289300406631E-7	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any trailing values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.998841982577358	WITHOUT_CLASSIFICATION	0.0011580174226419346	DEFECT
// leave the y values (y1, y0) untranslated as it is going to be be // stacked up later by previous series values, after this it will be // translated.	WITHOUT_CLASSIFICATION	0.9999876712279203	WITHOUT_CLASSIFICATION	1.232877207956987E-5	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999577775114	WITHOUT_CLASSIFICATION	4.222248864067035E-8	DEFECT
// FIXME: calculate xx0	WITHOUT_CLASSIFICATION	0.9236571188828862	DEFECT	0.0763428811171138	WITHOUT_CLASSIFICATION
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.99999653577852	WITHOUT_CLASSIFICATION	3.4642214800504787E-6	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999689770546323	WITHOUT_CLASSIFICATION	3.102294536771815E-5	DEFECT
// wait till we are at the last item for the row then draw the // whole stack at once	WITHOUT_CLASSIFICATION	0.9999815471432143	WITHOUT_CLASSIFICATION	1.8452856785652302E-5	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9999990414516445	WITHOUT_CLASSIFICATION	9.58548355476276E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999811805563406	WITHOUT_CLASSIFICATION	1.8819443659465954E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999811805563406	WITHOUT_CLASSIFICATION	1.8819443659465954E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999811805563406	WITHOUT_CLASSIFICATION	1.8819443659465954E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999811805563406	WITHOUT_CLASSIFICATION	1.8819443659465954E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999811805563406	WITHOUT_CLASSIFICATION	1.8819443659465954E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999811805563406	WITHOUT_CLASSIFICATION	1.8819443659465954E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999811805563406	WITHOUT_CLASSIFICATION	1.8819443659465954E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999811805563406	WITHOUT_CLASSIFICATION	1.8819443659465954E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999811805563406	WITHOUT_CLASSIFICATION	1.8819443659465954E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9994698105909672	WITHOUT_CLASSIFICATION	5.301894090328943E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999759638519236	WITHOUT_CLASSIFICATION	2.403614807644051E-5	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999999024792785	WITHOUT_CLASSIFICATION	9.752072154343143E-8	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999999024792785	WITHOUT_CLASSIFICATION	9.752072154343143E-8	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999997507428867	WITHOUT_CLASSIFICATION	2.4925711335446127E-7	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9991103014333899	WITHOUT_CLASSIFICATION	8.896985666101911E-4	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9991103014333899	WITHOUT_CLASSIFICATION	8.896985666101911E-4	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9991103014333899	WITHOUT_CLASSIFICATION	8.896985666101911E-4	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999645764721726	WITHOUT_CLASSIFICATION	3.542352782739361E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999820737045402	WITHOUT_CLASSIFICATION	1.7926295459847405E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999820737045402	WITHOUT_CLASSIFICATION	1.7926295459847405E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999820737045402	WITHOUT_CLASSIFICATION	1.7926295459847405E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999820737045402	WITHOUT_CLASSIFICATION	1.7926295459847405E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999820737045402	WITHOUT_CLASSIFICATION	1.7926295459847405E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999820737045402	WITHOUT_CLASSIFICATION	1.7926295459847405E-5	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9997306676281795	WITHOUT_CLASSIFICATION	2.693323718203985E-4	DEFECT
// FIXME: add setBaseItemLabelGenerator(CategoryItemLabelGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.5385146480489235	DEFECT	0.46148535195107665	WITHOUT_CLASSIFICATION
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999858690461885	WITHOUT_CLASSIFICATION	1.4130953811505377E-5	DEFECT
// last series, so we are ready to draw the min and max	WITHOUT_CLASSIFICATION	0.9999998219880888	WITHOUT_CLASSIFICATION	1.7801191123316635E-7	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.9998429501237557	WITHOUT_CLASSIFICATION	1.57049876244396E-4	DEFECT
// From outlier array sort out which are outliers and put these into a // list If there are any farouts, set the flag on the // OutlierListCollection	WITHOUT_CLASSIFICATION	0.9999996201997051	WITHOUT_CLASSIFICATION	3.79800294797411E-7	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.999944354314054	WITHOUT_CLASSIFICATION	5.564568594601736E-5	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.999944354314054	WITHOUT_CLASSIFICATION	5.564568594601736E-5	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999993807569632	WITHOUT_CLASSIFICATION	6.192430368883601E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999993807569632	WITHOUT_CLASSIFICATION	6.192430368883601E-7	DEFECT
// check if initial polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.9999997799500313	WITHOUT_CLASSIFICATION	2.2004996872833137E-7	DEFECT
// never updated the subtrahend if it is implied to be zero	WITHOUT_CLASSIFICATION	0.9999999980571868	WITHOUT_CLASSIFICATION	1.9428133637106267E-9	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999994072615608	WITHOUT_CLASSIFICATION	5.927384391962313E-7	DEFECT
// clear the point vectors	WITHOUT_CLASSIFICATION	0.9999993357997315	WITHOUT_CLASSIFICATION	6.6420026835483E-7	DEFECT
//// ITEM LABELS VISIBLE //////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999969773619918	WITHOUT_CLASSIFICATION	3.022638008201219E-5	DEFECT
// we don't need the sign	WITHOUT_CLASSIFICATION	0.9999982429227173	WITHOUT_CLASSIFICATION	1.7570772826935494E-6	DEFECT
// fillType == TO_UPPER_BOUND	WITHOUT_CLASSIFICATION	0.9999790593067751	WITHOUT_CLASSIFICATION	2.0940693224969235E-5	DEFECT
/*      solve linear system with tridiagonal n by n matrix a        using Gaussian elimination *without* pivoting        where   a(i,i-1) = sub[i]  for 2<=i<=n        a(i,i)   = diag[i] for 1<=i<=n        a(i,i+1) = sup[i]  for 1<=i<=n-1        (the values sub[1], sup[n] are ignored)        right hand side vector b[1:n] is overwritten with solution        NOTE: 1...n is used in all arrays, 0 is unused */	WITHOUT_CLASSIFICATION	0.9999997883823294	WITHOUT_CLASSIFICATION	2.116176706377894E-7	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9999968059331221	WITHOUT_CLASSIFICATION	3.1940668778391624E-6	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.9999942372788685	WITHOUT_CLASSIFICATION	5.762721131553802E-6	DEFECT
//  Check that the graph being served was created by the current user //  or that it begins with "public"	WITHOUT_CLASSIFICATION	0.9999999945928979	WITHOUT_CLASSIFICATION	5.407102059155381E-9	DEFECT
// the textAlignment and the horizontalAlignment are separate things, // but it makes sense for the default textAlignment to match the // title's horizontal alignment...	WITHOUT_CLASSIFICATION	0.9999071036619449	WITHOUT_CLASSIFICATION	9.289633805512029E-5	DEFECT
// we don't use the calendar or numberFormat fields, but equals(Object) // is failing without them being non-null	WITHOUT_CLASSIFICATION	0.9892405760478773	WITHOUT_CLASSIFICATION	0.01075942395212277	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9963966936656574	WITHOUT_CLASSIFICATION	0.0036033063343424636	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9963966936656574	WITHOUT_CLASSIFICATION	0.0036033063343424636	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.9999999255989271	WITHOUT_CLASSIFICATION	7.440107284571228E-8	DEFECT
// now fetch the row data - need to bear in mind that the row // structure may not have an entry for the column key, but that we // have already checked that the key is valid for the 2D structure	WITHOUT_CLASSIFICATION	0.9999997561866962	WITHOUT_CLASSIFICATION	2.4381330374868716E-7	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999998263170806	WITHOUT_CLASSIFICATION	1.736829194341881E-7	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999998263170806	WITHOUT_CLASSIFICATION	1.736829194341881E-7	DEFECT
// set up the series names...	WITHOUT_CLASSIFICATION	0.9999991725075219	WITHOUT_CLASSIFICATION	8.274924780587459E-7	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.9998758531095694	WITHOUT_CLASSIFICATION	1.2414689043058436E-4	DEFECT
//create a temporary vector // set x to some arbitary value (used below)	WITHOUT_CLASSIFICATION	0.9999999882456985	WITHOUT_CLASSIFICATION	1.1754301459812395E-8	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.9820828572354717	WITHOUT_CLASSIFICATION	0.017917142764528254	DEFECT
//  Iterate and find all keys below threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9999905118883612	WITHOUT_CLASSIFICATION	9.488111638799797E-6	DEFECT
// handle special case of BoxAndWhiskerDataset	WITHOUT_CLASSIFICATION	0.9999991375593028	WITHOUT_CLASSIFICATION	8.62440697103215E-7	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999996541247472	WITHOUT_CLASSIFICATION	3.4587525280178324E-7	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.999960258469807	WITHOUT_CLASSIFICATION	3.9741530193125634E-5	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.999960258469807	WITHOUT_CLASSIFICATION	3.9741530193125634E-5	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999824981949502	WITHOUT_CLASSIFICATION	1.750180504969622E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999931440756369	WITHOUT_CLASSIFICATION	6.855924363068029E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999931440756369	WITHOUT_CLASSIFICATION	6.855924363068029E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999931440756369	WITHOUT_CLASSIFICATION	6.855924363068029E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999931440756369	WITHOUT_CLASSIFICATION	6.855924363068029E-6	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9928838978447775	WITHOUT_CLASSIFICATION	0.007116102155222549	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999981920594309	WITHOUT_CLASSIFICATION	1.8079405691398786E-6	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999981920594309	WITHOUT_CLASSIFICATION	1.8079405691398786E-6	DEFECT
// The next 3 functions override the base-class implementation of // the DomainInfo interface.  Using saved limits (updated by // each updateTime() call), improves performance. //	WITHOUT_CLASSIFICATION	0.9999968321452458	WITHOUT_CLASSIFICATION	3.1678547542346783E-6	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.99999919255535	WITHOUT_CLASSIFICATION	8.074446500023748E-7	DEFECT
// alternatively, sometimes the first few days of the year are // considered to fall in the *last* week of the previous year...	WITHOUT_CLASSIFICATION	0.9999988696938933	WITHOUT_CLASSIFICATION	1.1303061067376517E-6	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.999999475228828	WITHOUT_CLASSIFICATION	5.247711719519355E-7	DEFECT
// if the series is sorted, the negative index is a result from // Collections.binarySearch() and tells us where to insert the // new item...otherwise it will be just -1 and we should just // append the value to the list...	WITHOUT_CLASSIFICATION	0.9999880317097121	WITHOUT_CLASSIFICATION	1.1968290287904078E-5	DEFECT
// pass mouse move event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999986437733647	WITHOUT_CLASSIFICATION	1.3562266353381072E-6	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999553948408866	WITHOUT_CLASSIFICATION	4.4605159113376524E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999553948408866	WITHOUT_CLASSIFICATION	4.4605159113376524E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999553948408866	WITHOUT_CLASSIFICATION	4.4605159113376524E-5	DEFECT
// chart title // domain axis label // range axis label // data // orientation // include legend // tooltips? // URLs?	WITHOUT_CLASSIFICATION	0.9999990284797659	WITHOUT_CLASSIFICATION	9.715202340881643E-7	DEFECT
// the SWTGraphics2D class doesn't handle GradientPaint well, so // replace the gradient painter from the default theme with a // standard painter...	WITHOUT_CLASSIFICATION	0.9999986747210977	WITHOUT_CLASSIFICATION	1.3252789022301424E-6	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999998483942689	WITHOUT_CLASSIFICATION	1.5160573107473074E-7	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999999105623506	WITHOUT_CLASSIFICATION	8.943764932019584E-8	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.9999999931872264	WITHOUT_CLASSIFICATION	6.812773563118278E-9	DEFECT
// row 2: outline color	WITHOUT_CLASSIFICATION	0.9999781977383827	WITHOUT_CLASSIFICATION	2.1802261617269063E-5	DEFECT
// Use a SwtPaintCanvas to show the color, note that we must set the // heightHint.	WITHOUT_CLASSIFICATION	0.9999870246730967	WITHOUT_CLASSIFICATION	1.2975326903196536E-5	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999986873631264	WITHOUT_CLASSIFICATION	1.3126368736275976E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999986873631264	WITHOUT_CLASSIFICATION	1.3126368736275976E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999986873631264	WITHOUT_CLASSIFICATION	1.3126368736275976E-6	DEFECT
// now create a new title and replace the existing title, several // things should happen: // (1) Adding the new title should trigger an immediate //     ChartChangeEvent; // (2) Modifying the new title should trigger a ChartChangeEvent; // (3) Modifying the old title should NOT trigger a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.999961060553843	WITHOUT_CLASSIFICATION	3.893944615685643E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999992306334213	WITHOUT_CLASSIFICATION	7.693665786950174E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999992306334213	WITHOUT_CLASSIFICATION	7.693665786950174E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999992306334213	WITHOUT_CLASSIFICATION	7.693665786950174E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999992306334213	WITHOUT_CLASSIFICATION	7.693665786950174E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999992306334213	WITHOUT_CLASSIFICATION	7.693665786950174E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999992306334213	WITHOUT_CLASSIFICATION	7.693665786950174E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999992306334213	WITHOUT_CLASSIFICATION	7.693665786950174E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999992306334213	WITHOUT_CLASSIFICATION	7.693665786950174E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999992306334213	WITHOUT_CLASSIFICATION	7.693665786950174E-6	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999974396970321	WITHOUT_CLASSIFICATION	2.5603029679730174E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999983813564085	WITHOUT_CLASSIFICATION	1.6186435914777572E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999983813564085	WITHOUT_CLASSIFICATION	1.6186435914777572E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999983813564085	WITHOUT_CLASSIFICATION	1.6186435914777572E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999978376778059	WITHOUT_CLASSIFICATION	2.1623221941487156E-6	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999549082581036	WITHOUT_CLASSIFICATION	4.509174189632164E-5	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999549082581036	WITHOUT_CLASSIFICATION	4.509174189632164E-5	DEFECT
//gridBandPaint	WITHOUT_CLASSIFICATION	0.9999931907511882	WITHOUT_CLASSIFICATION	6.8092488117966185E-6	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.9999837587897944	WITHOUT_CLASSIFICATION	1.6241210205599257E-5	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.9999965737036945	WITHOUT_CLASSIFICATION	3.426296305389602E-6	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.9999902961495781	WITHOUT_CLASSIFICATION	9.703850421779194E-6	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.9999989016650226	WITHOUT_CLASSIFICATION	1.098334977447772E-6	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999975086916568	WITHOUT_CLASSIFICATION	2.491308343145574E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.999996165712016	WITHOUT_CLASSIFICATION	3.8342879840438275E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.999996165712016	WITHOUT_CLASSIFICATION	3.8342879840438275E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.999996165712016	WITHOUT_CLASSIFICATION	3.8342879840438275E-6	DEFECT
// ok, exception is expected	WITHOUT_CLASSIFICATION	0.9999859705471708	WITHOUT_CLASSIFICATION	1.4029452829166153E-5	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.999926460307576	WITHOUT_CLASSIFICATION	7.35396924238667E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999196810718767	WITHOUT_CLASSIFICATION	8.03189281232875E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999196810718767	WITHOUT_CLASSIFICATION	8.03189281232875E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999196810718767	WITHOUT_CLASSIFICATION	8.03189281232875E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999196810718767	WITHOUT_CLASSIFICATION	8.03189281232875E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999196810718767	WITHOUT_CLASSIFICATION	8.03189281232875E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999196810718767	WITHOUT_CLASSIFICATION	8.03189281232875E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999196810718767	WITHOUT_CLASSIFICATION	8.03189281232875E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999196810718767	WITHOUT_CLASSIFICATION	8.03189281232875E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999196810718767	WITHOUT_CLASSIFICATION	8.03189281232875E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999196810718767	WITHOUT_CLASSIFICATION	8.03189281232875E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999196810718767	WITHOUT_CLASSIFICATION	8.03189281232875E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999196810718767	WITHOUT_CLASSIFICATION	8.03189281232875E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999196810718767	WITHOUT_CLASSIFICATION	8.03189281232875E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999196810718767	WITHOUT_CLASSIFICATION	8.03189281232875E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999196810718767	WITHOUT_CLASSIFICATION	8.03189281232875E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999196810718767	WITHOUT_CLASSIFICATION	8.03189281232875E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999196810718767	WITHOUT_CLASSIFICATION	8.03189281232875E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999196810718767	WITHOUT_CLASSIFICATION	8.03189281232875E-5	DEFECT
// dateFormatOverride	WITHOUT_CLASSIFICATION	0.9999947009096788	WITHOUT_CLASSIFICATION	5.29909032115748E-6	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999958117552397	WITHOUT_CLASSIFICATION	4.188244760289778E-6	DEFECT
// check that setting the max date to something on or before the // current min date works...	WITHOUT_CLASSIFICATION	0.9999940872784829	WITHOUT_CLASSIFICATION	5.912721517132259E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999993935656439	WITHOUT_CLASSIFICATION	6.064343559748605E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999993935656439	WITHOUT_CLASSIFICATION	6.064343559748605E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999993935656439	WITHOUT_CLASSIFICATION	6.064343559748605E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999993935656439	WITHOUT_CLASSIFICATION	6.064343559748605E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999993935656439	WITHOUT_CLASSIFICATION	6.064343559748605E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999993935656439	WITHOUT_CLASSIFICATION	6.064343559748605E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999993935656439	WITHOUT_CLASSIFICATION	6.064343559748605E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999993935656439	WITHOUT_CLASSIFICATION	6.064343559748605E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999993935656439	WITHOUT_CLASSIFICATION	6.064343559748605E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999790552247712	WITHOUT_CLASSIFICATION	2.0944775228894714E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999790552247712	WITHOUT_CLASSIFICATION	2.0944775228894714E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999756260991214	WITHOUT_CLASSIFICATION	2.4373900878637417E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999756260991214	WITHOUT_CLASSIFICATION	2.4373900878637417E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999826413826446	WITHOUT_CLASSIFICATION	1.7358617355451864E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999826413826446	WITHOUT_CLASSIFICATION	1.7358617355451864E-5	DEFECT
//private boolean autoRangeStickyZero;	WITHOUT_CLASSIFICATION	0.9999918255134013	WITHOUT_CLASSIFICATION	8.174486598692936E-6	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999999022760957	WITHOUT_CLASSIFICATION	9.772390434857549E-8	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999999022760957	WITHOUT_CLASSIFICATION	9.772390434857549E-8	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.9999997124738315	WITHOUT_CLASSIFICATION	2.8752616858393774E-7	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999999035861481	WITHOUT_CLASSIFICATION	9.641385197416324E-8	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999999035861481	WITHOUT_CLASSIFICATION	9.641385197416324E-8	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.9999981202740138	WITHOUT_CLASSIFICATION	1.8797259862369058E-6	DEFECT
// advance line Paint	WITHOUT_CLASSIFICATION	0.9999949316429955	WITHOUT_CLASSIFICATION	5.068357004504284E-6	DEFECT
// Add exception in included segments	WITHOUT_CLASSIFICATION	0.9999997288765446	WITHOUT_CLASSIFICATION	2.7112345545354866E-7	DEFECT
// Saturday and Sundays are non business hours	WITHOUT_CLASSIFICATION	0.999999179288443	WITHOUT_CLASSIFICATION	8.20711556956165E-7	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9999567827040743	WITHOUT_CLASSIFICATION	4.321729592560103E-5	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9999567827040743	WITHOUT_CLASSIFICATION	4.321729592560103E-5	DEFECT
// 1-ms test timeline using 5 included and 2 excluded segments. // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 .. // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. // |  |  |  |  |  |EE|EE|  |  |  |  |  |EE|EE|  |  |  |  |  |  |EE|EE|    <-- msTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. //  \_________  ________/            \_/ //            \/                      | //       segment group         segment size = 1 ms //	WITHOUT_CLASSIFICATION	0.9999999592412978	WITHOUT_CLASSIFICATION	4.0758702174542295E-8	DEFECT
// 1-ms test timeline (with a baseTimeline) using 2 included and 2 // excluded segments centered inside each base segment // // The ms2Timeline without a base would look like this: // //    timeline start time = 1 //      | //      v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //    \____  _____/            \_/ //         \/                   | //    segment group      segment size = 1 ms // // With the base timeline some originally included segments are now // removed (see "xx" below): // //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //	WITHOUT_CLASSIFICATION	0.9999075407148033	WITHOUT_CLASSIFICATION	9.245928519674991E-5	DEFECT
// test monday though friday timeline	WITHOUT_CLASSIFICATION	0.99999928501916	WITHOUT_CLASSIFICATION	7.149808399608776E-7	DEFECT
// find first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.9999986519104469	WITHOUT_CLASSIFICATION	1.3480895531138164E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test construction process //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998719126028	WITHOUT_CLASSIFICATION	1.2808739729502193E-7	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999998042346061	WITHOUT_CLASSIFICATION	1.957653939765488E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // main include and excluded segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998396043455	WITHOUT_CLASSIFICATION	1.6039565447599323E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // test timeline translations //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998278378758	WITHOUT_CLASSIFICATION	1.721621242020686E-7	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.999999856939425	WITHOUT_CLASSIFICATION	1.4306057498891192E-7	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.999960215650568	WITHOUT_CLASSIFICATION	3.978434943191657E-5	DEFECT
// tick label insets...	WITHOUT_CLASSIFICATION	0.9999725486988226	WITHOUT_CLASSIFICATION	2.74513011774175E-5	DEFECT
// tick mark paint...	WITHOUT_CLASSIFICATION	0.9998366638309378	WITHOUT_CLASSIFICATION	1.6333616906214014E-4	DEFECT
// negativeArrowVisible;	WITHOUT_CLASSIFICATION	0.9999942018301091	WITHOUT_CLASSIFICATION	5.798169890792308E-6	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.9999993957261621	WITHOUT_CLASSIFICATION	6.04273837850395E-7	DEFECT
// autoRange	WITHOUT_CLASSIFICATION	0.9999986945890887	WITHOUT_CLASSIFICATION	1.3054109111939433E-6	DEFECT
// autoRangeMinimumSize	WITHOUT_CLASSIFICATION	0.9999976916974931	WITHOUT_CLASSIFICATION	2.30830250691905E-6	DEFECT
//private double fixedAutoRange;	WITHOUT_CLASSIFICATION	0.9999783405161922	WITHOUT_CLASSIFICATION	2.1659483807880904E-5	DEFECT
//private boolean autoTickUnitSelection;	WITHOUT_CLASSIFICATION	0.9999979607307664	WITHOUT_CLASSIFICATION	2.0392692336385775E-6	DEFECT
//private int autoTickIndex; //protected double reservedForTickLabels; //protected double reservedForAxisLabel;	WITHOUT_CLASSIFICATION	0.9999984519529118	WITHOUT_CLASSIFICATION	1.548047088222779E-6	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.9999850153590394	WITHOUT_CLASSIFICATION	1.4984640960617624E-5	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.9999850153590394	WITHOUT_CLASSIFICATION	1.4984640960617624E-5	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.9999459903490783	WITHOUT_CLASSIFICATION	5.400965092173306E-5	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9999942930177168	WITHOUT_CLASSIFICATION	5.706982283192765E-6	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.9999767871884798	WITHOUT_CLASSIFICATION	2.3212811520155563E-5	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9999784146459535	WITHOUT_CLASSIFICATION	2.1585354046445946E-5	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.999941512551789	WITHOUT_CLASSIFICATION	5.848744821111142E-5	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9999323303406449	WITHOUT_CLASSIFICATION	6.766965935508312E-5	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.9999998931095192	WITHOUT_CLASSIFICATION	1.0689048086733918E-7	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.9999978962222679	WITHOUT_CLASSIFICATION	2.1037777321194704E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999910351848176	WITHOUT_CLASSIFICATION	8.964815182398415E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999910351848176	WITHOUT_CLASSIFICATION	8.964815182398415E-6	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9998290558110684	WITHOUT_CLASSIFICATION	1.7094418893161083E-4	DEFECT
// innerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999945824413872	WITHOUT_CLASSIFICATION	5.4175586128721405E-6	DEFECT
// domainAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9998689124082296	WITHOUT_CLASSIFICATION	1.3108759177032697E-4	DEFECT
// rangeAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9997781816587981	WITHOUT_CLASSIFICATION	2.2181834120195597E-4	DEFECT
// renderer - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9993995938566992	WITHOUT_CLASSIFICATION	6.004061433006924E-4	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999976340410374	WITHOUT_CLASSIFICATION	2.3659589626156243E-6	DEFECT
// domainGridlinePosition	WITHOUT_CLASSIFICATION	0.999999329567299	WITHOUT_CLASSIFICATION	6.704327011445877E-7	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999993702893787	WITHOUT_CLASSIFICATION	6.297106213304469E-7	DEFECT
// anchorValue	WITHOUT_CLASSIFICATION	0.9999982362985853	WITHOUT_CLASSIFICATION	1.763701414699428E-6	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999992548978914	WITHOUT_CLASSIFICATION	7.451021086440194E-7	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999992548978914	WITHOUT_CLASSIFICATION	7.451021086440194E-7	DEFECT
// range markers - no longer separate fields but test anyway...	WITHOUT_CLASSIFICATION	0.9990922976465884	WITHOUT_CLASSIFICATION	9.077023534115831E-4	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.9999790879376617	WITHOUT_CLASSIFICATION	2.091206233831041E-5	DEFECT
// domainCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999990164903845	WITHOUT_CLASSIFICATION	9.835096155071705E-7	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999988155135062	WITHOUT_CLASSIFICATION	1.1844864937480915E-6	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999988155135062	WITHOUT_CLASSIFICATION	1.1844864937480915E-6	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9999993863250556	WITHOUT_CLASSIFICATION	6.13674944396499E-7	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9999993863250556	WITHOUT_CLASSIFICATION	6.13674944396499E-7	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.999998887825498	WITHOUT_CLASSIFICATION	1.1121745020259797E-6	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.999999304397844	WITHOUT_CLASSIFICATION	6.956021560089056E-7	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999949744152974	WITHOUT_CLASSIFICATION	5.025584702647427E-6	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999949744152974	WITHOUT_CLASSIFICATION	5.025584702647427E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999981151095558	WITHOUT_CLASSIFICATION	1.8848904442155013E-6	DEFECT
// units	WITHOUT_CLASSIFICATION	0.9999893672836915	WITHOUT_CLASSIFICATION	1.0632716308632019E-5	DEFECT
// tick labels visible	WITHOUT_CLASSIFICATION	0.9999665424877888	WITHOUT_CLASSIFICATION	3.3457512211234624E-5	DEFECT
// tick size	WITHOUT_CLASSIFICATION	0.9999970390832026	WITHOUT_CLASSIFICATION	2.960916797454186E-6	DEFECT
// the clone and the original share a reference to the SAME dataset	WITHOUT_CLASSIFICATION	0.9999999800624484	WITHOUT_CLASSIFICATION	1.993755154302223E-8	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999863129869616	WITHOUT_CLASSIFICATION	1.368701303837041E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999863129869616	WITHOUT_CLASSIFICATION	1.368701303837041E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999863129869616	WITHOUT_CLASSIFICATION	1.368701303837041E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999863129869616	WITHOUT_CLASSIFICATION	1.368701303837041E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999863129869616	WITHOUT_CLASSIFICATION	1.368701303837041E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999863129869616	WITHOUT_CLASSIFICATION	1.368701303837041E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999863129869616	WITHOUT_CLASSIFICATION	1.368701303837041E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999863129869616	WITHOUT_CLASSIFICATION	1.368701303837041E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999863129869616	WITHOUT_CLASSIFICATION	1.368701303837041E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999863129869616	WITHOUT_CLASSIFICATION	1.368701303837041E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999863129869616	WITHOUT_CLASSIFICATION	1.368701303837041E-5	DEFECT
// labelType...	WITHOUT_CLASSIFICATION	0.9999283688100501	WITHOUT_CLASSIFICATION	7.163118994991259E-5	DEFECT
// pieIndex...	WITHOUT_CLASSIFICATION	0.9999478725657295	WITHOUT_CLASSIFICATION	5.212743427060759E-5	DEFECT
// ignoreZeroValues	WITHOUT_CLASSIFICATION	0.9999979316940564	WITHOUT_CLASSIFICATION	2.068305943656892E-6	DEFECT
// sectionOutlinesVisible	WITHOUT_CLASSIFICATION	0.9999932085491633	WITHOUT_CLASSIFICATION	6.7914508367474135E-6	DEFECT
// sectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999305781567613	WITHOUT_CLASSIFICATION	6.942184323868742E-5	DEFECT
// labelBackgroundPaint	WITHOUT_CLASSIFICATION	0.9999968787474979	WITHOUT_CLASSIFICATION	3.1212525021586535E-6	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.9999989105188581	WITHOUT_CLASSIFICATION	1.089481141846619E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999981973876608	WITHOUT_CLASSIFICATION	1.802612339059727E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999981973876608	WITHOUT_CLASSIFICATION	1.802612339059727E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999981973876608	WITHOUT_CLASSIFICATION	1.802612339059727E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999981973876608	WITHOUT_CLASSIFICATION	1.802612339059727E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999981973876608	WITHOUT_CLASSIFICATION	1.802612339059727E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999981973876608	WITHOUT_CLASSIFICATION	1.802612339059727E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999981973876608	WITHOUT_CLASSIFICATION	1.802612339059727E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999981973876608	WITHOUT_CLASSIFICATION	1.802612339059727E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999981973876608	WITHOUT_CLASSIFICATION	1.802612339059727E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999981973876608	WITHOUT_CLASSIFICATION	1.802612339059727E-6	DEFECT
// verify independence of fixed legend item collection	WITHOUT_CLASSIFICATION	0.9999844461664613	WITHOUT_CLASSIFICATION	1.5553833538715333E-5	DEFECT
// stroke sequence	WITHOUT_CLASSIFICATION	0.9999757092172414	WITHOUT_CLASSIFICATION	2.4290782758501303E-5	DEFECT
// stroke index	WITHOUT_CLASSIFICATION	0.9998591040454274	WITHOUT_CLASSIFICATION	1.4089595457256635E-4	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999996871858171	WITHOUT_CLASSIFICATION	3.128141828796245E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999996871858171	WITHOUT_CLASSIFICATION	3.128141828796245E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999996871858171	WITHOUT_CLASSIFICATION	3.128141828796245E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999996871858171	WITHOUT_CLASSIFICATION	3.128141828796245E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999996871858171	WITHOUT_CLASSIFICATION	3.128141828796245E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999996871858171	WITHOUT_CLASSIFICATION	3.128141828796245E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999996871858171	WITHOUT_CLASSIFICATION	3.128141828796245E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999991997910626	WITHOUT_CLASSIFICATION	8.002089375074417E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999991997910626	WITHOUT_CLASSIFICATION	8.002089375074417E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999991997910626	WITHOUT_CLASSIFICATION	8.002089375074417E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999991997910626	WITHOUT_CLASSIFICATION	8.002089375074417E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999991997910626	WITHOUT_CLASSIFICATION	8.002089375074417E-7	DEFECT
// minorTickCount	WITHOUT_CLASSIFICATION	0.9999991336060078	WITHOUT_CLASSIFICATION	8.663939922821402E-7	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.9999992011909677	WITHOUT_CLASSIFICATION	7.988090321362884E-7	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999994020282336	WITHOUT_CLASSIFICATION	5.979717665301681E-7	DEFECT
// seriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.9999938728550021	WITHOUT_CLASSIFICATION	6.127144997942703E-6	DEFECT
//upper bound and margin OK; get log10 of upper bound	WITHOUT_CLASSIFICATION	0.9999997715852548	WITHOUT_CLASSIFICATION	2.2841474514481413E-7	DEFECT
// fillPaintList	WITHOUT_CLASSIFICATION	0.9999986994596185	WITHOUT_CLASSIFICATION	1.3005403815796955E-6	DEFECT
//apply upper margin by increasing upper bound:	WITHOUT_CLASSIFICATION	0.9999995005013266	WITHOUT_CLASSIFICATION	4.994986734907368E-7	DEFECT
// baseStroke	WITHOUT_CLASSIFICATION	0.9999560867892082	WITHOUT_CLASSIFICATION	4.391321079184367E-5	DEFECT
// Reference: http://www.antigrain.com/research/bezier_interpolation/	WITHOUT_CLASSIFICATION	0.9999998754648083	WITHOUT_CLASSIFICATION	1.2453519173035697E-7	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999929380011021	WITHOUT_CLASSIFICATION	7.061998897867044E-6	DEFECT
// initialize ChartPanel-specific tool tip delays with // values the from ToolTipManager.sharedInstance()	WITHOUT_CLASSIFICATION	0.9999999980835657	WITHOUT_CLASSIFICATION	1.9164343314256663E-9	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999971383453012	WITHOUT_CLASSIFICATION	2.8616546987164533E-6	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.99999991026911	WITHOUT_CLASSIFICATION	8.973089002416219E-8	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.99999991026911	WITHOUT_CLASSIFICATION	8.973089002416219E-8	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.999999990892139	WITHOUT_CLASSIFICATION	9.107860961665544E-9	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999979343146214	WITHOUT_CLASSIFICATION	2.06568537861052E-6	DEFECT
// itemLabelsVisible	WITHOUT_CLASSIFICATION	0.9999942231202168	WITHOUT_CLASSIFICATION	5.776879783283651E-6	DEFECT
// make the background of the buffer clear and transparent	WITHOUT_CLASSIFICATION	0.9999998361216382	WITHOUT_CLASSIFICATION	1.6387836176627084E-7	DEFECT
// for MacOSX we can't use the CTRL key for mouse drags, see: // http://developer.apple.com/qa/qa2004/qa1362.html	WITHOUT_CLASSIFICATION	0.9999625585555678	WITHOUT_CLASSIFICATION	3.744144443222823E-5	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.9999993230304636	WITHOUT_CLASSIFICATION	6.769695364313386E-7	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9978739819278185	WITHOUT_CLASSIFICATION	0.0021260180721814383	DEFECT
// first determine the size of the chart rendering area...	WITHOUT_CLASSIFICATION	0.9999999602962795	WITHOUT_CLASSIFICATION	3.9703720470070304E-8	DEFECT
// do we need to resize the buffer?	WITHOUT_CLASSIFICATION	0.9999951846258534	WITHOUT_CLASSIFICATION	4.8153741466227154E-6	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999996751076554	WITHOUT_CLASSIFICATION	3.2489234461117686E-7	DEFECT
// clear the flag	WITHOUT_CLASSIFICATION	0.999995787510043	WITHOUT_CLASSIFICATION	4.212489956940231E-6	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9999913598274534	WITHOUT_CLASSIFICATION	8.640172546669461E-6	DEFECT
// redraw the zoom rectangle (if present) - if useBuffer is false, // we use XOR so we can XOR the rectangle away again without redrawing // the chart	WITHOUT_CLASSIFICATION	0.999999722460616	WITHOUT_CLASSIFICATION	2.775393840322605E-7	DEFECT
// redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.9999978096563416	WITHOUT_CLASSIFICATION	2.190343658388976E-6	DEFECT
// zap the buffer onto the panel...	WITHOUT_CLASSIFICATION	0.9999984120688993	WITHOUT_CLASSIFICATION	1.5879311007711852E-6	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.9999981048112665	WITHOUT_CLASSIFICATION	1.8951887334188154E-6	DEFECT
// many of the zoom methods need a screen location - all we have is // the zoomPoint, but it might be null.  Here we grab the x and y // coordinates, or use defaults...	WITHOUT_CLASSIFICATION	0.9998943007986132	WITHOUT_CLASSIFICATION	1.056992013867767E-4	DEFECT
// itemLabelFontList	WITHOUT_CLASSIFICATION	0.9999986406580311	WITHOUT_CLASSIFICATION	1.3593419688699287E-6	DEFECT
// restore original tooltip dealys	WITHOUT_CLASSIFICATION	0.9999999760886265	WITHOUT_CLASSIFICATION	2.3911373608816622E-8	DEFECT
// can we pan this plot?	WITHOUT_CLASSIFICATION	0.9995583176502536	WITHOUT_CLASSIFICATION	4.416823497463728E-4	DEFECT
// the actual panning occurs later in the mouseDragged()  // method	WITHOUT_CLASSIFICATION	0.9999987254798819	WITHOUT_CLASSIFICATION	1.2745201181005635E-6	DEFECT
// if the popup menu has already been triggered, then ignore dragging...	WITHOUT_CLASSIFICATION	0.999999976006635	WITHOUT_CLASSIFICATION	2.3993364929512187E-8	DEFECT
// handle panning if we have a start point	WITHOUT_CLASSIFICATION	0.9999996985137383	WITHOUT_CLASSIFICATION	3.014862616769226E-7	DEFECT
// if no initial zoom point was set, ignore dragging...	WITHOUT_CLASSIFICATION	0.9999999709903984	WITHOUT_CLASSIFICATION	2.9009601648035015E-8	DEFECT
// erase the previous zoom rectangle (if any).  We only need to do // this is we are using XOR mode, which we do when we're not using // the buffer (if there is a buffer, then at the end of this method we // just trigger a repaint)	WITHOUT_CLASSIFICATION	0.9999999795397573	WITHOUT_CLASSIFICATION	2.0460242759323027E-8	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999921262732505	WITHOUT_CLASSIFICATION	7.873726749434999E-6	DEFECT
// Draw the new zoom rectangle...	WITHOUT_CLASSIFICATION	0.9999808877542052	WITHOUT_CLASSIFICATION	1.9112245794736065E-5	DEFECT
// with no buffer, we use XOR to draw the rectangle "over" the // chart...	WITHOUT_CLASSIFICATION	0.9999965485392869	WITHOUT_CLASSIFICATION	3.4514607131098127E-6	DEFECT
// if we've been panning, we need to reset now that the mouse is  // released...	WITHOUT_CLASSIFICATION	0.9999977934552334	WITHOUT_CLASSIFICATION	2.206544766593417E-6	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999999958855379	WITHOUT_CLASSIFICATION	4.114462068944566E-9	DEFECT
// erase the zoom rectangle	WITHOUT_CLASSIFICATION	0.999999698613313	WITHOUT_CLASSIFICATION	3.0138668702614354E-7	DEFECT
// force a redraw // new entity code...	WITHOUT_CLASSIFICATION	0.9999915520895646	WITHOUT_CLASSIFICATION	8.44791043551131E-6	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999998352596717	WITHOUT_CLASSIFICATION	1.6474032832025302E-7	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999998352596717	WITHOUT_CLASSIFICATION	1.6474032832025302E-7	DEFECT
// Set XOR mode to draw the zoom rectangle	WITHOUT_CLASSIFICATION	0.9999970119450865	WITHOUT_CLASSIFICATION	2.988054913429997E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999948117682356	WITHOUT_CLASSIFICATION	5.188231764346942E-6	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999995072204	WITHOUT_CLASSIFICATION	4.927795453927828E-10	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999995072204	WITHOUT_CLASSIFICATION	4.927795453927828E-10	DEFECT
// use reflection to get the SVG string	WITHOUT_CLASSIFICATION	0.9999998134558452	WITHOUT_CLASSIFICATION	1.8654415477251131E-7	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999600983491	WITHOUT_CLASSIFICATION	3.990165097082169E-8	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999600983491	WITHOUT_CLASSIFICATION	3.990165097082169E-8	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999600983491	WITHOUT_CLASSIFICATION	3.990165097082169E-8	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999948117682356	WITHOUT_CLASSIFICATION	5.188231764346942E-6	DEFECT
// we suppress shadow generation, because SVG is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.9999711654581858	WITHOUT_CLASSIFICATION	2.8834541814242556E-5	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999917114360296	WITHOUT_CLASSIFICATION	8.288563970380197E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999948117682356	WITHOUT_CLASSIFICATION	5.188231764346942E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999948117682356	WITHOUT_CLASSIFICATION	5.188231764346942E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999948117682356	WITHOUT_CLASSIFICATION	5.188231764346942E-6	DEFECT
// fetch listeners from local storage	WITHOUT_CLASSIFICATION	0.9999999512596603	WITHOUT_CLASSIFICATION	4.874033960926707E-8	DEFECT
// here we need to update the UI for the popup menu, if the panel // has one...	WITHOUT_CLASSIFICATION	0.9999959508631832	WITHOUT_CLASSIFICATION	4.049136816863713E-6	DEFECT
// we suppress shadow generation, because PDF is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.9999452123974447	WITHOUT_CLASSIFICATION	5.4787602555257584E-5	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.999999615470867	WITHOUT_CLASSIFICATION	3.8452913305800005E-7	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9999920009837707	WITHOUT_CLASSIFICATION	7.999016229202431E-6	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999976740516019	WITHOUT_CLASSIFICATION	2.3259483981581077E-6	DEFECT
// we create a new but empty chartMouseListeners list	WITHOUT_CLASSIFICATION	0.9999998164159407	WITHOUT_CLASSIFICATION	1.8358405916113832E-7	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999976740516019	WITHOUT_CLASSIFICATION	2.3259483981581077E-6	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ----------------- * ChartFactory.java * ----------------- * (C) Copyright 2001-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Serge V. Grachov; *                   Joao Guilherme Del Valle; *                   Bill Kelemen; *                   Jon Iles; *                   Jelai Wang; *                   Richard Atkinson; *                   David Browning (for Australian Institute of Marine *                       Science); *                   Benoit Xhenseval; * * Changes * ------- * 19-Oct-2001 : Version 1, most methods transferred from JFreeChart.java (DG); * 22-Oct-2001 : Added methods to create stacked bar charts (DG); *               Renamed DataSource.java --> Dataset.java etc. (DG); * 31-Oct-2001 : Added 3D-effect vertical bar and stacked-bar charts, *               contributed by Serge V. Grachov (DG); * 07-Nov-2001 : Added a flag to control whether or not a legend is added to *               the chart (DG); * 17-Nov-2001 : For pie chart, changed dataset from CategoryDataset to *               PieDataset (DG); * 30-Nov-2001 : Removed try/catch handlers from chart creation, as the *               exception are now RuntimeExceptions, as suggested by Joao *               Guilherme Del Valle (DG); * 06-Dec-2001 : Added createCombinableXXXXXCharts methods (BK); * 12-Dec-2001 : Added createCandlestickChart() method (DG); * 13-Dec-2001 : Updated methods for charts with new renderers (DG); * 08-Jan-2002 : Added import for *               com.jrefinery.chart.combination.CombinedChart (DG); * 31-Jan-2002 : Changed the createCombinableVerticalXYBarChart() method to use *               renderer (DG); * 06-Feb-2002 : Added new method createWindPlot() (DG); * 23-Apr-2002 : Updates to the chart and plot constructor API (DG); * 21-May-2002 : Added new method createAreaChart() (JI); * 06-Jun-2002 : Added new method createGanttChart() (DG); * 11-Jun-2002 : Renamed createHorizontalStackedBarChart() *               --> createStackedHorizontalBarChart() for consistency (DG); * 06-Aug-2002 : Updated Javadoc comments (DG); * 21-Aug-2002 : Added createPieChart(CategoryDataset) method (DG); * 02-Oct-2002 : Fixed errors reported by Checkstyle (DG); * 09-Oct-2002 : Added methods including tooltips and URL flags (DG); * 06-Nov-2002 : Moved renderers into a separate package (DG); * 18-Nov-2002 : Changed CategoryDataset to TableDataset (DG); * 21-Mar-2003 : Incorporated HorizontalCategoryAxis3D, see bug id 685501 (DG); * 13-May-2003 : Merged some horizontal and vertical methods (DG); * 24-May-2003 : Added support for timeline in createHighLowChart (BK); * 07-Jul-2003 : Added createHistogram() method contributed by Jelai Wang (DG); * 27-Jul-2003 : Added createStackedAreaXYChart() method (RA); * 05-Aug-2003 : added new method createBoxAndWhiskerChart (DB); * 08-Sep-2003 : Changed ValueAxis API (DG); * 07-Oct-2003 : Added stepped area XY chart contributed by Matthias Rose (DG); * 06-Nov-2003 : Added createWaterfallChart() method (DG); * 20-Nov-2003 : Set rendering order for 3D bar charts to fix overlapping *               problems (DG); * 25-Nov-2003 : Added createWaferMapChart() method (DG); * 23-Dec-2003 : Renamed createPie3DChart() --> createPieChart3D for *               consistency (DG); * 20-Jan-2004 : Added createPolarChart() method (DG); * 28-Jan-2004 : Fixed bug (882890) with axis range in *               createStackedXYAreaChart() method (DG); * 25-Feb-2004 : Renamed XYToolTipGenerator --> XYItemLabelGenerator (DG); * 11-Mar-2004 : Updated for pie chart changes (DG); * 27-Apr-2004 : Added new createPieChart() method contributed by Benoit *               Xhenseval (see RFE 942195) (DG); * 11-May-2004 : Split StandardCategoryItemLabelGenerator *               --> StandardCategoryToolTipGenerator and *               StandardCategoryLabelGenerator (DG); * 06-Jan-2005 : Removed deprecated methods (DG); * 27-Jan-2005 : Added new constructor to LineAndShapeRenderer (DG); * 28-Feb-2005 : Added docs to createBubbleChart() method (DG); * 17-Mar-2005 : Added createRingPlot() method (DG); * 21-Apr-2005 : Replaced Insets with RectangleInsets (DG); * 29-Nov-2005 : Removed signal chart (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 26-Jan-2006 : Corrected API docs for createScatterPlot() (DG); * 23-Aug-2006 : Modified createStackedXYAreaChart() to use *               StackedXYAreaRenderer2, because StackedXYAreaRenderer doesn't *               handle negative values (DG); * 27-Sep-2006 : Update createPieChart() method for deprecated code (DG); * 29-Nov-2006 : Update createXYBarChart() to use a time based tool tip *               generator is a DateAxis is requested (DG); * 17-Jan-2007 : Added createBoxAndWhiskerChart() method from patch 1603937 *               submitted by Darren Jung (DG); * 10-Jul-2007 : Added new methods to create pie charts with locale for *               section label and tool tip formatting (DG); * 14-Aug-2008 : Added ChartTheme facility (DG); * 23-Oct-2008 : Check for legacy theme in setChartTheme() and reset default *               bar painters (DG); * 20-Dec-2008 : In createStackedAreaChart(), set category margin to 0.0 (DG); * 02-Jul-2013 : Use ParamChecks class (DG); *  */	WITHOUT_CLASSIFICATION	0.9997002368849296	WITHOUT_CLASSIFICATION	2.9976311507038734E-4	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.9999998903689982	WITHOUT_CLASSIFICATION	1.0963100187493396E-7	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999976740516019	WITHOUT_CLASSIFICATION	2.3259483981581077E-6	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999976740516019	WITHOUT_CLASSIFICATION	2.3259483981581077E-6	DEFECT
// create the renderer...	WITHOUT_CLASSIFICATION	0.9999639879639612	WITHOUT_CLASSIFICATION	3.6012036038675435E-5	DEFECT
// create the plot...	WITHOUT_CLASSIFICATION	0.9999784990657566	WITHOUT_CLASSIFICATION	2.1500934243413494E-5	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.999995937854342	WITHOUT_CLASSIFICATION	4.06214565796816E-6	DEFECT
// forces recalculation of the axis range	WITHOUT_CLASSIFICATION	0.9999998839380746	WITHOUT_CLASSIFICATION	1.1606192542331009E-7	DEFECT
// reduce the default margins	WITHOUT_CLASSIFICATION	0.9999993460361969	WITHOUT_CLASSIFICATION	6.539638031318131E-7	DEFECT
// override default	WITHOUT_CLASSIFICATION	0.9999994330525734	WITHOUT_CLASSIFICATION	5.669474264298756E-7	DEFECT
// get desired width and height from somewhere then...	WITHOUT_CLASSIFICATION	0.9999990120587333	WITHOUT_CLASSIFICATION	9.879412667385406E-7	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.9998188564136645	WITHOUT_CLASSIFICATION	1.8114358633536168E-4	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.9998188564136645	WITHOUT_CLASSIFICATION	1.8114358633536168E-4	DEFECT
// no need to instantiate this    	WITHOUT_CLASSIFICATION	0.9999965527316124	WITHOUT_CLASSIFICATION	3.447268387793195E-6	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999289072530541	WITHOUT_CLASSIFICATION	7.10927469459404E-5	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------- * ChartUtilities.java * ------------------- * (C) Copyright 2001-2013, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Wolfgang Irler; *                   Richard Atkinson; *                   Xavier Poinsard; * * Changes * ------- * 11-Dec-2001 : Version 1.  The JPEG method comes from Wolfgang Irler's *               JFreeChartServletDemo class (DG); * 23-Jan-2002 : Changed saveChartAsXXX() methods to pass IOExceptions back to *               caller (DG); * 26-Jun-2002 : Added image map methods (DG); * 05-Aug-2002 : Added writeBufferedImage methods *               Modified writeImageMap method to support flexible image *               maps (RA); * 26-Aug-2002 : Added saveChartAsJPEG and writeChartAsJPEG methods with info *               objects (RA); * 05-Sep-2002 : Added writeImageMap() method to support OverLIB *               - http://www.bosrup.com/web/overlib (RA); * 26-Sep-2002 : Fixed errors reported by Checkstyle (DG); * 17-Oct-2002 : Exposed JPEG quality setting and PNG compression level as *               parameters (DG); * 25-Oct-2002 : Fixed writeChartAsJPEG() empty method bug (DG); * 13-Mar-2003 : Updated writeImageMap method as suggested by Xavier Poinsard *               (see Feature Request 688079) (DG); * 12-Aug-2003 : Added support for custom image maps using *               ToolTipTagFragmentGenerator and URLTagFragmentGenerator (RA); * 02-Sep-2003 : Separated PNG encoding from writing chart to an *               OutputStream (RA); * 04-Dec-2003 : Chart draw() method modified to include anchor point (DG); * 20-Feb-2004 : Edited Javadocs and added argument checking (DG); * 05-Apr-2004 : Fixed problem with buffered image type (DG); * 01-Aug-2004 : Modified to use EncoderUtil for all image encoding (RA); * 02-Aug-2004 : Delegated image map related functionality to ImageMapUtil (RA); * 13-Jan-2005 : Renamed ImageMapUtil --> ImageMapUtilities, removed method *               writeImageMap(PrintWriter, String, ChartRenderingInfo) which *               exists in ImageMapUtilities (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 06-Feb-2006 : API doc update (DG); * 19-Mar-2007 : Use try-finally to close output stream in saveChartAsXXX() *               methods (DG); * 10-Jan-2008 : Fix bug 1868251 - don't create image with transparency when *               saving to JPEG format (DG); * 02-Jul-2013 : Use ParamChecks class (DG); * */	WITHOUT_CLASSIFICATION	0.9999999797102558	WITHOUT_CLASSIFICATION	2.0289744234093804E-8	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999957963369979	WITHOUT_CLASSIFICATION	4.203663002200876E-6	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999566741527391	WITHOUT_CLASSIFICATION	4.3325847260807326E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999566741527391	WITHOUT_CLASSIFICATION	4.3325847260807326E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999566741527391	WITHOUT_CLASSIFICATION	4.3325847260807326E-5	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999957963369979	WITHOUT_CLASSIFICATION	4.203663002200876E-6	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999957963369979	WITHOUT_CLASSIFICATION	4.203663002200876E-6	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999957963369979	WITHOUT_CLASSIFICATION	4.203663002200876E-6	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999957963369979	WITHOUT_CLASSIFICATION	4.203663002200876E-6	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999957963369979	WITHOUT_CLASSIFICATION	4.203663002200876E-6	DEFECT
/* shape outlined */	WITHOUT_CLASSIFICATION	0.9999976055656047	WITHOUT_CLASSIFICATION	2.3944343952764434E-6	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999974795743733	WITHOUT_CLASSIFICATION	2.520425626704376E-6	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999376302437666	WITHOUT_CLASSIFICATION	6.23697562334769E-5	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999376302437666	WITHOUT_CLASSIFICATION	6.23697562334769E-5	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999974795743733	WITHOUT_CLASSIFICATION	2.520425626704376E-6	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999974795743733	WITHOUT_CLASSIFICATION	2.520425626704376E-6	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999974795743733	WITHOUT_CLASSIFICATION	2.520425626704376E-6	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999537867008934	WITHOUT_CLASSIFICATION	4.6213299106602014E-5	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999537867008934	WITHOUT_CLASSIFICATION	4.6213299106602014E-5	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999537867008934	WITHOUT_CLASSIFICATION	4.6213299106602014E-5	DEFECT
// positiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999990730004459	WITHOUT_CLASSIFICATION	9.269995541127462E-7	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9978739819278185	WITHOUT_CLASSIFICATION	0.0021260180721814383	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999974795743733	WITHOUT_CLASSIFICATION	2.520425626704376E-6	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999537867008934	WITHOUT_CLASSIFICATION	4.6213299106602014E-5	DEFECT
// negativeItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9999996904268521	WITHOUT_CLASSIFICATION	3.095731479546816E-7	DEFECT
// ----------------- // --- Constants --- // -----------------	WITHOUT_CLASSIFICATION	0.9999993558475071	WITHOUT_CLASSIFICATION	6.441524928068273E-7	DEFECT
// ------------------------ // --- Member Variables --- // ------------------------	WITHOUT_CLASSIFICATION	0.9999989831174145	WITHOUT_CLASSIFICATION	1.016882585428094E-6	DEFECT
// -------------------- // --- Constructors --- // --------------------	WITHOUT_CLASSIFICATION	0.9999998731934383	WITHOUT_CLASSIFICATION	1.268065616174649E-7	DEFECT
// -------------------------- // --- ChartPanel Methods --- // --------------------------	WITHOUT_CLASSIFICATION	0.999999393966181	WITHOUT_CLASSIFICATION	6.060338189795936E-7	DEFECT
// ---------------------- // --- Public Methods --- // ----------------------	WITHOUT_CLASSIFICATION	0.999997572060977	WITHOUT_CLASSIFICATION	2.427939023108314E-6	DEFECT
// ----------------------- // --- Private Methods --- // -----------------------	WITHOUT_CLASSIFICATION	0.9999943824070863	WITHOUT_CLASSIFICATION	5.6175929137326685E-6	DEFECT
// do nothing at all	WITHOUT_CLASSIFICATION	0.9999870330418096	WITHOUT_CLASSIFICATION	1.2966958190484127E-5	DEFECT
// now process the plot if there is one	WITHOUT_CLASSIFICATION	0.9999998744313271	WITHOUT_CLASSIFICATION	1.2556867297733537E-7	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.9999987798180741	WITHOUT_CLASSIFICATION	1.2201819259182148E-6	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.9999987798180741	WITHOUT_CLASSIFICATION	1.2201819259182148E-6	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.9999990622654326	WITHOUT_CLASSIFICATION	9.377345675777111E-7	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.9999990622654326	WITHOUT_CLASSIFICATION	9.377345675777111E-7	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999959784317889	WITHOUT_CLASSIFICATION	4.021568211201603E-6	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999959784317889	WITHOUT_CLASSIFICATION	4.021568211201603E-6	DEFECT
// process all annotations	WITHOUT_CLASSIFICATION	0.9999983804059737	WITHOUT_CLASSIFICATION	1.6195940264177482E-6	DEFECT
// BarRenderer	WITHOUT_CLASSIFICATION	0.9999059036246288	WITHOUT_CLASSIFICATION	9.409637537124756E-5	DEFECT
// BarRenderer3D	WITHOUT_CLASSIFICATION	0.9997657310087024	WITHOUT_CLASSIFICATION	2.3426899129765685E-4	DEFECT
// LineRenderer3D	WITHOUT_CLASSIFICATION	0.999977620971668	WITHOUT_CLASSIFICATION	2.237902833197604E-5	DEFECT
//  StatisticalBarRenderer	WITHOUT_CLASSIFICATION	0.9999946445863593	WITHOUT_CLASSIFICATION	5.3554136406571865E-6	DEFECT
// MinMaxCategoryRenderer	WITHOUT_CLASSIFICATION	0.9999943259688606	WITHOUT_CLASSIFICATION	5.674031139386841E-6	DEFECT
// handle GradientPaint as a special case	WITHOUT_CLASSIFICATION	0.9999999084210585	WITHOUT_CLASSIFICATION	9.157894165054621E-8	DEFECT
// create storage for listeners...	WITHOUT_CLASSIFICATION	0.9999990577804664	WITHOUT_CLASSIFICATION	9.422195335841096E-7	DEFECT
// add the chart title, if one has been specified...	WITHOUT_CLASSIFICATION	0.999994913772739	WITHOUT_CLASSIFICATION	5.086227261040723E-6	DEFECT
// this fires a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.999970564698644	WITHOUT_CLASSIFICATION	2.9435301355936E-5	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.9999994907189418	WITHOUT_CLASSIFICATION	5.092810582790272E-7	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.999999615470867	WITHOUT_CLASSIFICATION	3.8452913305800005E-7	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999345782953306	WITHOUT_CLASSIFICATION	6.54217046693536E-5	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999972974360689	WITHOUT_CLASSIFICATION	2.7025639310067618E-6	DEFECT
// clear the section attributes so that the theme's DrawingSupplier // will be used	WITHOUT_CLASSIFICATION	0.999999580421537	WITHOUT_CLASSIFICATION	4.195784631004142E-7	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999998151182926	WITHOUT_CLASSIFICATION	1.8488170742292527E-7	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999998151182926	WITHOUT_CLASSIFICATION	1.8488170742292527E-7	DEFECT
// default is to notify listeners when the // chart changes	WITHOUT_CLASSIFICATION	0.9999997684026273	WITHOUT_CLASSIFICATION	2.3159737272247152E-7	DEFECT
// added the following hint because of  // http://stackoverflow.com/questions/7785082/	WITHOUT_CLASSIFICATION	0.9999999704125103	WITHOUT_CLASSIFICATION	2.9587489715149132E-8	DEFECT
// record the chart area, if info is requested...	WITHOUT_CLASSIFICATION	0.9999995816625513	WITHOUT_CLASSIFICATION	4.1833744866112735E-7	DEFECT
// ensure no drawing occurs outside chart area...	WITHOUT_CLASSIFICATION	0.9999999161453045	WITHOUT_CLASSIFICATION	8.385469552614916E-8	DEFECT
// draw the chart background...	WITHOUT_CLASSIFICATION	0.9999969317007902	WITHOUT_CLASSIFICATION	3.0682992098755503E-6	DEFECT
// draw the title and subtitles...	WITHOUT_CLASSIFICATION	0.9999934672819035	WITHOUT_CLASSIFICATION	6.532718096544878E-6	DEFECT
// draw the plot (axes and data visualisation)	WITHOUT_CLASSIFICATION	0.9999990016933081	WITHOUT_CLASSIFICATION	9.983066918981193E-7	DEFECT
// private boolean borderVisible; // private transient Stroke borderStroke; // private transient Paint borderPaint;	WITHOUT_CLASSIFICATION	0.9996061747897033	WITHOUT_CLASSIFICATION	3.9382521029676995E-4	DEFECT
// get a locale-specific resource bundle...	WITHOUT_CLASSIFICATION	0.9999997012770363	WITHOUT_CLASSIFICATION	2.987229636363218E-7	DEFECT
// load only when required	WITHOUT_CLASSIFICATION	0.999981916172812	WITHOUT_CLASSIFICATION	1.8083827188000686E-5	DEFECT
// use ImageIcon because it waits for the image to load...	WITHOUT_CLASSIFICATION	0.9999949311743503	WITHOUT_CLASSIFICATION	5.0688256496251805E-6	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9999998600085621	WITHOUT_CLASSIFICATION	1.399914378659443E-7	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.9999985246601815	WITHOUT_CLASSIFICATION	1.4753398185803327E-6	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.9999991559867663	WITHOUT_CLASSIFICATION	8.440132336973101E-7	DEFECT
// if we don't have at least 2 (x, y) coordinates, just return	WITHOUT_CLASSIFICATION	0.9999998011349748	WITHOUT_CLASSIFICATION	1.9886502520318418E-7	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999996521581808	WITHOUT_CLASSIFICATION	3.4784181931178923E-7	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999996521581808	WITHOUT_CLASSIFICATION	3.4784181931178923E-7	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999935285105049	WITHOUT_CLASSIFICATION	6.471489495019005E-6	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999935285105049	WITHOUT_CLASSIFICATION	6.471489495019005E-6	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999967047649032	WITHOUT_CLASSIFICATION	3.2952350966536804E-6	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999967047649032	WITHOUT_CLASSIFICATION	3.2952350966536804E-6	DEFECT
/* Rectangle2D hotspot = */	WITHOUT_CLASSIFICATION	0.9999671614115657	WITHOUT_CLASSIFICATION	3.283858843431681E-5	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999289072530541	WITHOUT_CLASSIFICATION	7.10927469459404E-5	DEFECT
// FIXME //SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9693126027120519	WITHOUT_CLASSIFICATION	0.0306873972879482	DEFECT
// FIXME //this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.9688198929380027	WITHOUT_CLASSIFICATION	0.031180107061997257	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.9999984923450215	WITHOUT_CLASSIFICATION	1.5076549784984498E-6	DEFECT
// by default the outline and background won't be visible	WITHOUT_CLASSIFICATION	0.9999268922518515	WITHOUT_CLASSIFICATION	7.310774814845393E-5	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999996521581808	WITHOUT_CLASSIFICATION	3.4784181931178923E-7	DEFECT
// create plot ...	WITHOUT_CLASSIFICATION	0.9999950754951104	WITHOUT_CLASSIFICATION	4.924504889633941E-6	DEFECT
// add a second dataset and renderer...	WITHOUT_CLASSIFICATION	0.9999501529931166	WITHOUT_CLASSIFICATION	4.984700688337285E-5	DEFECT
// return a new chart containing the overlaid plot...	WITHOUT_CLASSIFICATION	0.999999520727411	WITHOUT_CLASSIFICATION	4.792725888752402E-7	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999994922265084	WITHOUT_CLASSIFICATION	5.077734915762074E-7	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999935285105049	WITHOUT_CLASSIFICATION	6.471489495019005E-6	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999967047649032	WITHOUT_CLASSIFICATION	3.2952350966536804E-6	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999289072530541	WITHOUT_CLASSIFICATION	7.10927469459404E-5	DEFECT
// baseNegativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.999999677063073	WITHOUT_CLASSIFICATION	3.2293692697546164E-7	DEFECT
// here we change the AffineTransform so we can draw the annotation // to a larger area and scale it down into the display area // afterwards, the original transform is restored	WITHOUT_CLASSIFICATION	0.9999999995947966	WITHOUT_CLASSIFICATION	4.0520345886666357E-10	DEFECT
// compute transform matrix elements via sample points. Assume no // rotation or shear.	WITHOUT_CLASSIFICATION	0.9999990225288785	WITHOUT_CLASSIFICATION	9.77471121540208E-7	DEFECT
//  create transform & transform shape	WITHOUT_CLASSIFICATION	0.9999998010215698	WITHOUT_CLASSIFICATION	1.9897843024318697E-7	DEFECT
//SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9999996289596098	WITHOUT_CLASSIFICATION	3.7104039023672374E-7	DEFECT
//this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.9999996640350145	WITHOUT_CLASSIFICATION	3.359649854551136E-7	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9887860604911709	WITHOUT_CLASSIFICATION	0.011213939508829034	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999885021107425	WITHOUT_CLASSIFICATION	1.14978892574724E-5	DEFECT
// apply the margins - these should apply to the exponent range	WITHOUT_CLASSIFICATION	0.9999989771895547	WITHOUT_CLASSIFICATION	1.0228104453233396E-6	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9993448601467846	WITHOUT_CLASSIFICATION	6.551398532153942E-4	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999972583567385	WITHOUT_CLASSIFICATION	2.741643261501415E-6	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9999988377626047	WITHOUT_CLASSIFICATION	1.1622373953336354E-6	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.9999988663978568	WITHOUT_CLASSIFICATION	1.1336021430958355E-6	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.9999988663978568	WITHOUT_CLASSIFICATION	1.1336021430958355E-6	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.99995062403951	WITHOUT_CLASSIFICATION	4.937596049004512E-5	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.99995062403951	WITHOUT_CLASSIFICATION	4.937596049004512E-5	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.9999962460317786	WITHOUT_CLASSIFICATION	3.753968221236596E-6	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.9999962460317786	WITHOUT_CLASSIFICATION	3.753968221236596E-6	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.9999997765250648	WITHOUT_CLASSIFICATION	2.23474935197419E-7	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999870096186141	WITHOUT_CLASSIFICATION	1.2990381385844134E-5	DEFECT
// no need to create entity if we can't save it anyways...	WITHOUT_CLASSIFICATION	0.9999325306003839	WITHOUT_CLASSIFICATION	6.746939961611994E-5	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.9514654778093091	WITHOUT_CLASSIFICATION	0.048534522190690856	DEFECT
// It's up to the plot which clones up to restore the correct references	WITHOUT_CLASSIFICATION	0.9999998207163157	WITHOUT_CLASSIFICATION	1.7928368429847845E-7	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999973554746301	WITHOUT_CLASSIFICATION	2.644525369903317E-6	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9999996877188527	WITHOUT_CLASSIFICATION	3.122811472489805E-7	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9999996877188527	WITHOUT_CLASSIFICATION	3.122811472489805E-7	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.9999999150452724	WITHOUT_CLASSIFICATION	8.495472753268508E-8	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.9999999150452724	WITHOUT_CLASSIFICATION	8.495472753268508E-8	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999979631566712	WITHOUT_CLASSIFICATION	2.0368433288467663E-6	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9984445004335883	WITHOUT_CLASSIFICATION	0.0015554995664116473	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9999132034425616	WITHOUT_CLASSIFICATION	8.679655743841533E-5	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999935595793276	WITHOUT_CLASSIFICATION	6.44042067246823E-6	DEFECT
//negative values not allowed	WITHOUT_CLASSIFICATION	0.9999817352393321	WITHOUT_CLASSIFICATION	1.8264760667833033E-5	DEFECT
// no plot, no data.	WITHOUT_CLASSIFICATION	0.9999993625348846	WITHOUT_CLASSIFICATION	6.37465115409432E-7	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999993096576095	WITHOUT_CLASSIFICATION	6.903423903816178E-7	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9984445004335883	WITHOUT_CLASSIFICATION	0.0015554995664116473	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9999132034425616	WITHOUT_CLASSIFICATION	8.679655743841533E-5	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999935595793276	WITHOUT_CLASSIFICATION	6.44042067246823E-6	DEFECT
// baseCreateEntities;	WITHOUT_CLASSIFICATION	0.9999994464456833	WITHOUT_CLASSIFICATION	5.535543167940608E-7	DEFECT
// add space for the outer tick labels, if any...	WITHOUT_CLASSIFICATION	0.9999487735906764	WITHOUT_CLASSIFICATION	5.1226409323632105E-5	DEFECT
// draw minor tick marks	WITHOUT_CLASSIFICATION	0.9999980712453128	WITHOUT_CLASSIFICATION	1.9287546870804263E-6	DEFECT
// work out the initial gap	WITHOUT_CLASSIFICATION	0.9999613227537518	WITHOUT_CLASSIFICATION	3.8677246248165646E-5	DEFECT
// this is the last period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.9883536826240717	WITHOUT_CLASSIFICATION	0.011646317375928297	DEFECT
// this is the first period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.9977820009736565	WITHOUT_CLASSIFICATION	0.002217999026343393	DEFECT
// work out the trailing gap	WITHOUT_CLASSIFICATION	0.9999069016892521	WITHOUT_CLASSIFICATION	9.309831074796764E-5	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999526967948715	WITHOUT_CLASSIFICATION	4.730320512846161E-5	DEFECT
// need to work out the space used by the tick labels... // so we can update the cursor...	WITHOUT_CLASSIFICATION	0.9999978292122504	WITHOUT_CLASSIFICATION	2.1707877495465433E-6	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9999192715581599	WITHOUT_CLASSIFICATION	8.072844184013013E-5	DEFECT
// if autoRange is true, then the current range is irrelevant	WITHOUT_CLASSIFICATION	0.9999990694131887	WITHOUT_CLASSIFICATION	9.305868113398488E-7	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.9999998603123206	WITHOUT_CLASSIFICATION	1.3968767952448473E-7	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.9999998603123206	WITHOUT_CLASSIFICATION	1.3968767952448473E-7	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.9999987516114279	WITHOUT_CLASSIFICATION	1.248388572076075E-6	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.9999987516114279	WITHOUT_CLASSIFICATION	1.248388572076075E-6	DEFECT
//return value; negate if original value was negative:	WITHOUT_CLASSIFICATION	0.9999999333692575	WITHOUT_CLASSIFICATION	6.663074249566849E-8	DEFECT
//invert adjustLog10	WITHOUT_CLASSIFICATION	0.9999992939634128	WITHOUT_CLASSIFICATION	7.060365872741445E-7	DEFECT
//calculate floor using negative value:	WITHOUT_CLASSIFICATION	0.9999979810370188	WITHOUT_CLASSIFICATION	2.0189629811872137E-6	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.9999969383932606	WITHOUT_CLASSIFICATION	3.061606739248975E-6	DEFECT
//negative values are allowed	WITHOUT_CLASSIFICATION	0.9999977829781895	WITHOUT_CLASSIFICATION	2.2170218103686853E-6	DEFECT
//calculate ceil using negative value:	WITHOUT_CLASSIFICATION	0.9999956476632239	WITHOUT_CLASSIFICATION	4.352336776177901E-6	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999885021107425	WITHOUT_CLASSIFICATION	1.14978892574724E-5	DEFECT
// legendTextPaint	WITHOUT_CLASSIFICATION	0.9999969069867956	WITHOUT_CLASSIFICATION	3.0930132043575202E-6	DEFECT
//setup for "1e#"-style tick labels or regular // numeric tick labels, depending on flag:	WITHOUT_CLASSIFICATION	0.9999999033197225	WITHOUT_CLASSIFICATION	9.668027738213304E-8	DEFECT
// if < 10 then //increase so 0 translates to 0	WITHOUT_CLASSIFICATION	0.9999998107993209	WITHOUT_CLASSIFICATION	1.8920067925344957E-7	DEFECT
//negative values are allowed //parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999524672451782	WITHOUT_CLASSIFICATION	4.753275482175807E-5	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9999879594074385	WITHOUT_CLASSIFICATION	1.2040592561481553E-5	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9999934459221477	WITHOUT_CLASSIFICATION	6.554077852328293E-6	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9999934459221477	WITHOUT_CLASSIFICATION	6.554077852328293E-6	DEFECT
//negative values not allowed //parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999277750244625	WITHOUT_CLASSIFICATION	7.222497553749439E-5	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9999920324249435	WITHOUT_CLASSIFICATION	7.96757505654934E-6	DEFECT
//parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999762443663422	WITHOUT_CLASSIFICATION	2.375563365784255E-5	DEFECT
//parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999800290204756	WITHOUT_CLASSIFICATION	1.997097952443774E-5	DEFECT
//no real data present	WITHOUT_CLASSIFICATION	0.9999998703474829	WITHOUT_CLASSIFICATION	1.296525170425149E-7	DEFECT
//get lower bound value	WITHOUT_CLASSIFICATION	0.999997973794342	WITHOUT_CLASSIFICATION	2.026205657973916E-6	DEFECT
//actual data is present //get lower bound value	WITHOUT_CLASSIFICATION	0.9999997894468202	WITHOUT_CLASSIFICATION	2.1055317979680755E-7	DEFECT
//strict flag set, allow-negatives not set and values <= 0	WITHOUT_CLASSIFICATION	0.9999953951618796	WITHOUT_CLASSIFICATION	4.604838120433694E-6	DEFECT
//apply lower margin by decreasing lower bound:	WITHOUT_CLASSIFICATION	0.9999998213080997	WITHOUT_CLASSIFICATION	1.786919002150062E-7	DEFECT
//lower bound and margin OK; get log10 of lower bound	WITHOUT_CLASSIFICATION	0.999999859518515	WITHOUT_CLASSIFICATION	1.4048148491543997E-7	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.9999998903689982	WITHOUT_CLASSIFICATION	1.0963100187493396E-7	DEFECT
//need to account for case where upper==0.0	WITHOUT_CLASSIFICATION	0.9999990664905073	WITHOUT_CLASSIFICATION	9.335094927978452E-7	DEFECT
//setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9999991560666044	WITHOUT_CLASSIFICATION	8.439333956293157E-7	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.9999962689869535	WITHOUT_CLASSIFICATION	3.731013046393661E-6	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.9999983764299114	WITHOUT_CLASSIFICATION	1.6235700886470314E-6	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999998782151773	WITHOUT_CLASSIFICATION	1.2178482257890582E-7	DEFECT
//for each power of 10 value; create ten ticks	WITHOUT_CLASSIFICATION	0.9999998228227317	WITHOUT_CLASSIFICATION	1.77177268382735E-7	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.9999998981920245	WITHOUT_CLASSIFICATION	1.018079755392426E-7	DEFECT
//small log values in use; create numeric value for tick	WITHOUT_CLASSIFICATION	0.9999952237311498	WITHOUT_CLASSIFICATION	4.77626885014003E-6	DEFECT
//create tick label (force use of fmt obj):	WITHOUT_CLASSIFICATION	0.9999999650779513	WITHOUT_CLASSIFICATION	3.492204865319648E-8	DEFECT
//no tick label to be shown	WITHOUT_CLASSIFICATION	0.9999950861722356	WITHOUT_CLASSIFICATION	4.913827764265256E-6	DEFECT
//create tick label:	WITHOUT_CLASSIFICATION	0.999998102347165	WITHOUT_CLASSIFICATION	1.8976528350648477E-6	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.9999962689869535	WITHOUT_CLASSIFICATION	3.731013046393661E-6	DEFECT
//if autorange still below minimum then adjust by 1% // (can be needed when minRange is very small):	WITHOUT_CLASSIFICATION	0.999999615525545	WITHOUT_CLASSIFICATION	3.844744551166808E-7	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.9999983764299114	WITHOUT_CLASSIFICATION	1.6235700886470314E-6	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999976712534664	WITHOUT_CLASSIFICATION	2.3287465335865394E-6	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.999999900534292	WITHOUT_CLASSIFICATION	9.946570797836244E-8	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999998782151773	WITHOUT_CLASSIFICATION	1.2178482257890582E-7	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.9999998981920245	WITHOUT_CLASSIFICATION	1.018079755392426E-7	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.9999997165608208	WITHOUT_CLASSIFICATION	2.8343917921041007E-7	DEFECT
//showing "1e#"-style ticks or negative exponent // generating tick value between 0 & 1; show fewer	WITHOUT_CLASSIFICATION	0.9999995852758622	WITHOUT_CLASSIFICATION	4.147241378205123E-7	DEFECT
//tick value not between 0 & 1 //show tick label if it's the first or last in // the set, or if it's 1-5; beyond that show // fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999995687177828	WITHOUT_CLASSIFICATION	4.3128221717972443E-7	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then //decrement to do 1.0 tick now //calculate power-of-ten value for tick:	WITHOUT_CLASSIFICATION	0.9999994832907636	WITHOUT_CLASSIFICATION	5.167092363402264E-7	DEFECT
// did not do zero tick last iteration	WITHOUT_CLASSIFICATION	0.9999987306903395	WITHOUT_CLASSIFICATION	1.2693096605127425E-6	DEFECT
//tick value is 1.0 and 0.0 is within data range //set tick value to zero //indicate zero tick	WITHOUT_CLASSIFICATION	0.9999994957323103	WITHOUT_CLASSIFICATION	5.042676897013127E-7	DEFECT
// if past highest data value then exit // method	WITHOUT_CLASSIFICATION	0.999999410638983	WITHOUT_CLASSIFICATION	5.893610170900953E-7	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.9999998191765218	WITHOUT_CLASSIFICATION	1.8082347824484675E-7	DEFECT
//for each tick with a label to be displayed	WITHOUT_CLASSIFICATION	0.9999997662193912	WITHOUT_CLASSIFICATION	2.3378060874354352E-7	DEFECT
//small log values in use	WITHOUT_CLASSIFICATION	0.9999494506785567	WITHOUT_CLASSIFICATION	5.054932144334494E-5	DEFECT
//first tick of group; create label text	WITHOUT_CLASSIFICATION	0.9999999870212941	WITHOUT_CLASSIFICATION	1.2978705870533443E-8	DEFECT
//not "log10"-type label	WITHOUT_CLASSIFICATION	0.9999842128943405	WITHOUT_CLASSIFICATION	1.5787105659601877E-5	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999976712534664	WITHOUT_CLASSIFICATION	2.3287465335865394E-6	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.9999997165608208	WITHOUT_CLASSIFICATION	2.8343917921041007E-7	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.9999998191765218	WITHOUT_CLASSIFICATION	1.8082347824484675E-7	DEFECT
// ITEM_LABEL_PAINT	WITHOUT_CLASSIFICATION	0.9999922714269764	WITHOUT_CLASSIFICATION	7.728573023631088E-6	DEFECT
//if flag then //create "log10"-type label	WITHOUT_CLASSIFICATION	0.9999985403391716	WITHOUT_CLASSIFICATION	1.459660828380202E-6	DEFECT
//if flag then //create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9999973976963733	WITHOUT_CLASSIFICATION	2.602303626802827E-6	DEFECT
//not "1e#"-type label // if positive exponent then // make integer	WITHOUT_CLASSIFICATION	0.9999988713911225	WITHOUT_CLASSIFICATION	1.1286088774660263E-6	DEFECT
//negative exponent; create fractional value //set exact number of fractional digits to // be shown:	WITHOUT_CLASSIFICATION	0.9999999956653329	WITHOUT_CLASSIFICATION	4.3346670912094724E-9	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then	WITHOUT_CLASSIFICATION	0.9999985525387657	WITHOUT_CLASSIFICATION	1.4474612343380717E-6	DEFECT
//decrement to do 1.0 tick now	WITHOUT_CLASSIFICATION	0.9999988334391641	WITHOUT_CLASSIFICATION	1.1665608359802972E-6	DEFECT
//first tick of group // did not do zero tick last // iteration	WITHOUT_CLASSIFICATION	0.9999999701907232	WITHOUT_CLASSIFICATION	2.9809276777096694E-8	DEFECT
// not first or last tick on graph and value // is 1.0 //change value to 0.0 //indicate zero tick //create label for tick	WITHOUT_CLASSIFICATION	0.9999998904562901	WITHOUT_CLASSIFICATION	1.0954370983913338E-7	DEFECT
//first or last tick on graph or value is 1.0 //create label for tick:	WITHOUT_CLASSIFICATION	0.9999993320001537	WITHOUT_CLASSIFICATION	6.679998463843928E-7	DEFECT
//create "log10"-type label	WITHOUT_CLASSIFICATION	0.9999990472736129	WITHOUT_CLASSIFICATION	9.527263872300398E-7	DEFECT
//create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9999984549306752	WITHOUT_CLASSIFICATION	1.5450693247943805E-6	DEFECT
// did zero tick last iteration //no label //clear flag	WITHOUT_CLASSIFICATION	0.9999992767227103	WITHOUT_CLASSIFICATION	7.232772896633264E-7	DEFECT
// not first tick of group //no label //make sure flag cleared	WITHOUT_CLASSIFICATION	0.9999999916724976	WITHOUT_CLASSIFICATION	8.327502242045346E-9	DEFECT
//if past highest data value then exit method	WITHOUT_CLASSIFICATION	0.9999985659698899	WITHOUT_CLASSIFICATION	1.43403011018009E-6	DEFECT
//create tick object and add to list:	WITHOUT_CLASSIFICATION	0.9999933621118628	WITHOUT_CLASSIFICATION	6.637888137148273E-6	DEFECT
//using exponents or force-formatter flag is set // (convert 'E' to lower-case 'e'):	WITHOUT_CLASSIFICATION	0.9999996962024595	WITHOUT_CLASSIFICATION	3.0379754043185046E-7	DEFECT
// populate deprecated fields	WITHOUT_CLASSIFICATION	0.999999938729343	WITHOUT_CLASSIFICATION	6.127065693890581E-8	DEFECT
// usually the range will be a DateRange, but if it isn't do a // conversion...	WITHOUT_CLASSIFICATION	0.9983048824167183	WITHOUT_CLASSIFICATION	0.0016951175832816724	DEFECT
// check the new minimum date relative to the current maximum date	WITHOUT_CLASSIFICATION	0.999999982276403	WITHOUT_CLASSIFICATION	1.7723597007037343E-8	DEFECT
// check the new maximum date relative to the current minimum date	WITHOUT_CLASSIFICATION	0.9999999840395669	WITHOUT_CLASSIFICATION	1.5960433097634435E-8	DEFECT
// long result = calendar.getTimeInMillis(); // won't work with JDK 1.3	WITHOUT_CLASSIFICATION	0.9781503065554762	WITHOUT_CLASSIFICATION	0.021849693444523803	DEFECT
// date formatters	WITHOUT_CLASSIFICATION	0.9999958787922869	WITHOUT_CLASSIFICATION	4.121207713060173E-6	DEFECT
// milliseconds	WITHOUT_CLASSIFICATION	0.9999907185444565	WITHOUT_CLASSIFICATION	9.281455543371054E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999870096186141	WITHOUT_CLASSIFICATION	1.2990381385844134E-5	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999979631566712	WITHOUT_CLASSIFICATION	2.0368433288467663E-6	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9984445004335883	WITHOUT_CLASSIFICATION	0.0015554995664116473	DEFECT
// seconds	WITHOUT_CLASSIFICATION	0.9999927788183919	WITHOUT_CLASSIFICATION	7.2211816081292545E-6	DEFECT
// minutes	WITHOUT_CLASSIFICATION	0.9999988952983094	WITHOUT_CLASSIFICATION	1.1047016906000764E-6	DEFECT
// hours	WITHOUT_CLASSIFICATION	0.9999980695544463	WITHOUT_CLASSIFICATION	1.9304455536989984E-6	DEFECT
// days	WITHOUT_CLASSIFICATION	0.9999849067719934	WITHOUT_CLASSIFICATION	1.5093228006535247E-5	DEFECT
// months	WITHOUT_CLASSIFICATION	0.9999977461110017	WITHOUT_CLASSIFICATION	2.2538889983117473E-6	DEFECT
// years	WITHOUT_CLASSIFICATION	0.9999969168025697	WITHOUT_CLASSIFICATION	3.0831974303638817E-6	DEFECT
//Timeline hasn't method getStartTime()	WITHOUT_CLASSIFICATION	0.9999936259281411	WITHOUT_CLASSIFICATION	6.374071858778186E-6	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999867960257824	WITHOUT_CLASSIFICATION	1.320397421759005E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999367489372669	WITHOUT_CLASSIFICATION	6.325106273311964E-5	DEFECT
// start with a unit that is at least 1/10th of the axis length	WITHOUT_CLASSIFICATION	0.9999984810586635	WITHOUT_CLASSIFICATION	1.5189413365340877E-6	DEFECT
// now extrapolate based on label height and unit height...	WITHOUT_CLASSIFICATION	0.9999804175147121	WITHOUT_CLASSIFICATION	1.958248528782531E-5	DEFECT
// make final selection...	WITHOUT_CLASSIFICATION	0.9999929751911788	WITHOUT_CLASSIFICATION	7.024808821190607E-6	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.9999990568986838	WITHOUT_CLASSIFICATION	9.431013161097586E-7	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9998832183412117	WITHOUT_CLASSIFICATION	1.1678165878831506E-4	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9998832183412117	WITHOUT_CLASSIFICATION	1.1678165878831506E-4	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.9999477230951646	WITHOUT_CLASSIFICATION	5.227690483551647E-5	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.9999477230951646	WITHOUT_CLASSIFICATION	5.227690483551647E-5	DEFECT
// even though the axis is not visible, we need to refresh ticks in // case the grid is being drawn...	WITHOUT_CLASSIFICATION	0.999603851204885	WITHOUT_CLASSIFICATION	3.9614879511489653E-4	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999518821715376	WITHOUT_CLASSIFICATION	4.811782846231952E-5	DEFECT
// draw the axis label (note that 'state' is passed in *and* // returned)...	WITHOUT_CLASSIFICATION	0.9999991316275046	WITHOUT_CLASSIFICATION	8.68372495323655E-7	DEFECT
// when zooming to sub-millisecond ranges, it can be the case that // adjEnd == adjStart...and we can't have an axis with zero length // so we apply this instead:	WITHOUT_CLASSIFICATION	0.9999718952738349	WITHOUT_CLASSIFICATION	2.8104726165093816E-5	DEFECT
// 'dateTickUnit' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.9999994494876735	WITHOUT_CLASSIFICATION	5.505123265465246E-7	DEFECT
// 'tickMarkPosition' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.9999962221423636	WITHOUT_CLASSIFICATION	3.777857636355988E-6	DEFECT
// if there is no specific font, use the general one...	WITHOUT_CLASSIFICATION	0.9999992017861169	WITHOUT_CLASSIFICATION	7.98213883175958E-7	DEFECT
// if there is no specific paint, use the general one...	WITHOUT_CLASSIFICATION	0.9999995668077035	WITHOUT_CLASSIFICATION	4.331922964274504E-7	DEFECT
// find first excluded base segment starting fromDomainValue	WITHOUT_CLASSIFICATION	0.999999995951389	WITHOUT_CLASSIFICATION	4.048611018658115E-9	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999973554746301	WITHOUT_CLASSIFICATION	2.644525369903317E-6	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999935595793276	WITHOUT_CLASSIFICATION	6.44042067246823E-6	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9999192715581599	WITHOUT_CLASSIFICATION	8.072844184013013E-5	DEFECT
// nothing required	WITHOUT_CLASSIFICATION	0.999997988825871	WITHOUT_CLASSIFICATION	2.0111741289954798E-6	DEFECT
// sanity check for data area...	WITHOUT_CLASSIFICATION	0.9999994501363764	WITHOUT_CLASSIFICATION	5.498636236963398E-7	DEFECT
// step down in size until the current size is too small or there are  // no more units	WITHOUT_CLASSIFICATION	0.9999982442977626	WITHOUT_CLASSIFICATION	1.7557022373588501E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // predetermined segments sizes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998715973549	WITHOUT_CLASSIFICATION	1.2840264504012038E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // other constants ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998359650187	WITHOUT_CLASSIFICATION	1.640349812150394E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // private attributes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999988511897031	WITHOUT_CLASSIFICATION	1.1488102969037733E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // static block ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998464940997	WITHOUT_CLASSIFICATION	1.53505900293908E-7	DEFECT
// make a time zone with no DST for our Calendar calculations	WITHOUT_CLASSIFICATION	0.9999698686628377	WITHOUT_CLASSIFICATION	3.0131337162467044E-5	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.9999954556251804	WITHOUT_CLASSIFICATION	4.544374819596065E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // constructors and factory methods ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999306085918	WITHOUT_CLASSIFICATION	6.939140821091364E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // operations ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999994183175258	WITHOUT_CLASSIFICATION	5.816824741759686E-7	DEFECT
// verify that baseTimeline is compatible with us	WITHOUT_CLASSIFICATION	0.9999983861547103	WITHOUT_CLASSIFICATION	1.613845289732237E-6	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.9999937016298005	WITHOUT_CLASSIFICATION	6.2983701995348375E-6	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.9999937016298005	WITHOUT_CLASSIFICATION	6.2983701995348375E-6	DEFECT
//return toTimelineValue(dateDomainValue.getTime());	WITHOUT_CLASSIFICATION	0.999999862911108	WITHOUT_CLASSIFICATION	1.3708889209767782E-7	DEFECT
// calculate the result as if no exceptions	WITHOUT_CLASSIFICATION	0.9999907077407801	WITHOUT_CLASSIFICATION	9.292259219977484E-6	DEFECT
// adjust result for any exceptions in the result calculated	WITHOUT_CLASSIFICATION	0.999995824972213	WITHOUT_CLASSIFICATION	4.1750277871069285E-6	DEFECT
// skip all whole exception segments in the range	WITHOUT_CLASSIFICATION	0.9999996981223418	WITHOUT_CLASSIFICATION	3.018776582179079E-7	DEFECT
// skip exception or excluded segments we may fall on	WITHOUT_CLASSIFICATION	0.9999988527021038	WITHOUT_CLASSIFICATION	1.1472978963355574E-6	DEFECT
//addException(exceptionDate.getTime());	WITHOUT_CLASSIFICATION	0.9999884417389922	WITHOUT_CLASSIFICATION	1.155826100779104E-5	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.9999993994267558	WITHOUT_CLASSIFICATION	6.005732442548454E-7	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.9999958834610777	WITHOUT_CLASSIFICATION	4.116538922306147E-6	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.9999993994267558	WITHOUT_CLASSIFICATION	6.005732442548454E-7	DEFECT
// move forward exceptionSegmentCount segments skipping // excluded segments	WITHOUT_CLASSIFICATION	0.9999996125082184	WITHOUT_CLASSIFICATION	3.8749178158240534E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999919221774173	WITHOUT_CLASSIFICATION	8.07782258269095E-6	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.9999958834610777	WITHOUT_CLASSIFICATION	4.116538922306147E-6	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.9999993634002379	WITHOUT_CLASSIFICATION	6.365997621022908E-7	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999999496684179	WITHOUT_CLASSIFICATION	5.033158208435348E-8	DEFECT
// cycle over all the base segments groups in the range	WITHOUT_CLASSIFICATION	0.999999741965948	WITHOUT_CLASSIFICATION	2.58034052024566E-7	DEFECT
// cycle through all the segments contained in the base exclusion // area	WITHOUT_CLASSIFICATION	0.9999996215630206	WITHOUT_CLASSIFICATION	3.784369793009184E-7	DEFECT
// go to next base segment group	WITHOUT_CLASSIFICATION	0.9999999706579686	WITHOUT_CLASSIFICATION	2.9342031444166153E-8	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.9999658865126312	WITHOUT_CLASSIFICATION	3.4113487368769125E-5	DEFECT
// Segment fromSegment = getSegment(from); // fromSegment.inc(); // Segment toSegment = getSegment(to); // toSegment.dec();	WITHOUT_CLASSIFICATION	0.9999998246177108	WITHOUT_CLASSIFICATION	1.7538228929874645E-7	DEFECT
// long start = Math.max( //     fromSegment.getSegmentStart(), this.segmentStart // ); // long end = Math.min(toSegment.getSegmentEnd(), this.segmentEnd);	WITHOUT_CLASSIFICATION	0.9999998489015007	WITHOUT_CLASSIFICATION	1.5109849919507164E-7	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9999999780758947	WITHOUT_CLASSIFICATION	2.1924105362095916E-8	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999997216508172	WITHOUT_CLASSIFICATION	2.7834918275176E-7	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999997216508172	WITHOUT_CLASSIFICATION	2.7834918275176E-7	DEFECT
// If tick overlap when cycling, update last tick too	WITHOUT_CLASSIFICATION	0.9999996582963615	WITHOUT_CLASSIFICATION	3.417036384660339E-7	DEFECT
// continue and separate the labels only if necessary	WITHOUT_CLASSIFICATION	0.9999999547072783	WITHOUT_CLASSIFICATION	4.529272171323879E-8	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9998516806588968	WITHOUT_CLASSIFICATION	1.483193411030503E-4	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9998516806588968	WITHOUT_CLASSIFICATION	1.483193411030503E-4	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9998516806588968	WITHOUT_CLASSIFICATION	1.483193411030503E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.999560932992642	WITHOUT_CLASSIFICATION	4.3906700735797807E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.999560932992642	WITHOUT_CLASSIFICATION	4.3906700735797807E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.999560932992642	WITHOUT_CLASSIFICATION	4.3906700735797807E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999834331632003	WITHOUT_CLASSIFICATION	1.6566836799759788E-5	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999834331632003	WITHOUT_CLASSIFICATION	1.6566836799759788E-5	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999834331632003	WITHOUT_CLASSIFICATION	1.6566836799759788E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999560182787387	WITHOUT_CLASSIFICATION	4.398172126128168E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999560182787387	WITHOUT_CLASSIFICATION	4.398172126128168E-5	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999993096576095	WITHOUT_CLASSIFICATION	6.903423903816178E-7	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999993096576095	WITHOUT_CLASSIFICATION	6.903423903816178E-7	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.9999792311107887	WITHOUT_CLASSIFICATION	2.0768889211374887E-5	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999885021107425	WITHOUT_CLASSIFICATION	1.14978892574724E-5	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999885021107425	WITHOUT_CLASSIFICATION	1.14978892574724E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9887860604911709	WITHOUT_CLASSIFICATION	0.011213939508829034	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9993448601467846	WITHOUT_CLASSIFICATION	6.551398532153942E-4	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999870096186141	WITHOUT_CLASSIFICATION	1.2990381385844134E-5	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999518821715376	WITHOUT_CLASSIFICATION	4.811782846231952E-5	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9998516806588968	WITHOUT_CLASSIFICATION	1.483193411030503E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.999560932992642	WITHOUT_CLASSIFICATION	4.3906700735797807E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.999560932992642	WITHOUT_CLASSIFICATION	4.3906700735797807E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999834331632003	WITHOUT_CLASSIFICATION	1.6566836799759788E-5	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999834331632003	WITHOUT_CLASSIFICATION	1.6566836799759788E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999560182787387	WITHOUT_CLASSIFICATION	4.398172126128168E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999560182787387	WITHOUT_CLASSIFICATION	4.398172126128168E-5	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999999496684179	WITHOUT_CLASSIFICATION	5.033158208435348E-8	DEFECT
// default make height of plotArea	WITHOUT_CLASSIFICATION	0.9999976402401656	WITHOUT_CLASSIFICATION	2.359759834387582E-6	DEFECT
// allow fixed thickness	WITHOUT_CLASSIFICATION	0.9999841843678344	WITHOUT_CLASSIFICATION	1.5815632165584003E-5	DEFECT
// update, but dont draw tick marks (needed for stepped colors)	WITHOUT_CLASSIFICATION	0.9999999125811961	WITHOUT_CLASSIFICATION	8.741880393295499E-8	DEFECT
// suppresses compiler warnings	WITHOUT_CLASSIFICATION	0.999998609313684	WITHOUT_CLASSIFICATION	1.39068631610427E-6	DEFECT
// setTickValues was missing from ColorPalette v. 0.96 //colorPalette.setTickValues(this.axis.getTicks());	WITHOUT_CLASSIFICATION	0.9999999193592263	WITHOUT_CLASSIFICATION	8.064077382203807E-8	DEFECT
// calculate the adjusted data area taking into account the 3D effect...	WITHOUT_CLASSIFICATION	0.998575027867675	WITHOUT_CLASSIFICATION	0.0014249721323250576	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999308961655	WITHOUT_CLASSIFICATION	6.910383449470704E-8	DEFECT
// transparent	WITHOUT_CLASSIFICATION	0.9999982063742555	WITHOUT_CLASSIFICATION	1.7936257444444567E-6	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9999847615474622	WITHOUT_CLASSIFICATION	1.5238452537776426E-5	DEFECT
// ensure that all the symbols are displayed	WITHOUT_CLASSIFICATION	0.9999999026040761	WITHOUT_CLASSIFICATION	9.73959238805656E-8	DEFECT
// this ensure that the grid bands will be displayed correctly.	WITHOUT_CLASSIFICATION	0.9987804772436712	WITHOUT_CLASSIFICATION	0.0012195227563287123	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.9999995917494164	WITHOUT_CLASSIFICATION	4.0825058356500895E-7	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.9999995917494164	WITHOUT_CLASSIFICATION	4.0825058356500895E-7	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.9998738317066819	WITHOUT_CLASSIFICATION	1.261682933180506E-4	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.9998738317066819	WITHOUT_CLASSIFICATION	1.261682933180506E-4	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.999998636470579	WITHOUT_CLASSIFICATION	1.3635294210652953E-6	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.999998636470579	WITHOUT_CLASSIFICATION	1.3635294210652953E-6	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999999496684179	WITHOUT_CLASSIFICATION	5.033158208435348E-8	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9887860604911709	WITHOUT_CLASSIFICATION	0.011213939508829034	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9993448601467846	WITHOUT_CLASSIFICATION	6.551398532153942E-4	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.9999997765250648	WITHOUT_CLASSIFICATION	2.23474935197419E-7	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999973554746301	WITHOUT_CLASSIFICATION	2.644525369903317E-6	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999979631566712	WITHOUT_CLASSIFICATION	2.0368433288467663E-6	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9984445004335883	WITHOUT_CLASSIFICATION	0.0015554995664116473	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999867960257824	WITHOUT_CLASSIFICATION	1.320397421759005E-5	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999867960257824	WITHOUT_CLASSIFICATION	1.320397421759005E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999367489372669	WITHOUT_CLASSIFICATION	6.325106273311964E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999367489372669	WITHOUT_CLASSIFICATION	6.325106273311964E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999988252011108	WITHOUT_CLASSIFICATION	1.1747988892104503E-6	DEFECT
// must be top or bottom	WITHOUT_CLASSIFICATION	0.999999695055408	WITHOUT_CLASSIFICATION	3.049445920603586E-7	DEFECT
// catches null also	WITHOUT_CLASSIFICATION	0.9999925447231198	WITHOUT_CLASSIFICATION	7.455276880188018E-6	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999939766864909	WITHOUT_CLASSIFICATION	6.023313509026476E-6	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999939766864909	WITHOUT_CLASSIFICATION	6.023313509026476E-6	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9999995428439736	WITHOUT_CLASSIFICATION	4.5715602639670326E-7	DEFECT
// place in this row (truncated) anyway	WITHOUT_CLASSIFICATION	0.9997947178405964	WITHOUT_CLASSIFICATION	2.0528215940367322E-4	DEFECT
// start new row	WITHOUT_CLASSIFICATION	0.9999996857927314	WITHOUT_CLASSIFICATION	3.142072687164401E-7	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9999978782182388	WITHOUT_CLASSIFICATION	2.121781761183945E-6	DEFECT
// can safely ignore	WITHOUT_CLASSIFICATION	0.9999974575776642	WITHOUT_CLASSIFICATION	2.542422335727718E-6	DEFECT
// find optimum height, then map to range	WITHOUT_CLASSIFICATION	0.9999998816735924	WITHOUT_CLASSIFICATION	1.1832640763363262E-7	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9999992056661905	WITHOUT_CLASSIFICATION	7.943338094615024E-7	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9999992056661905	WITHOUT_CLASSIFICATION	7.943338094615024E-7	DEFECT
// find optimum height and map to range	WITHOUT_CLASSIFICATION	0.999999844955124	WITHOUT_CLASSIFICATION	1.5504487600329305E-7	DEFECT
// find optimum width and map to range	WITHOUT_CLASSIFICATION	0.9999999337444724	WITHOUT_CLASSIFICATION	6.625552764024699E-8	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999988252011108	WITHOUT_CLASSIFICATION	1.1747988892104503E-6	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999988252011108	WITHOUT_CLASSIFICATION	1.1747988892104503E-6	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999999707693183	WITHOUT_CLASSIFICATION	2.923068170154137E-8	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999939766864909	WITHOUT_CLASSIFICATION	6.023313509026476E-6	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999753140653954	WITHOUT_CLASSIFICATION	2.4685934604568956E-5	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.9999966586088338	WITHOUT_CLASSIFICATION	3.3413911663179552E-6	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.9999966586088338	WITHOUT_CLASSIFICATION	3.3413911663179552E-6	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9999995428439736	WITHOUT_CLASSIFICATION	4.5715602639670326E-7	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9999978782182388	WITHOUT_CLASSIFICATION	2.121781761183945E-6	DEFECT
// this default implementation will just fill the available // border space with a single color	WITHOUT_CLASSIFICATION	0.9999876544825466	WITHOUT_CLASSIFICATION	1.2345517453574536E-5	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999984120335018	WITHOUT_CLASSIFICATION	1.5879664981850323E-6	DEFECT
// fixed width	WITHOUT_CLASSIFICATION	0.9999920085475605	WITHOUT_CLASSIFICATION	7.991452439515649E-6	DEFECT
// width is OK, but height must be constrained	WITHOUT_CLASSIFICATION	0.9999715313925212	WITHOUT_CLASSIFICATION	2.8468607478848453E-5	DEFECT
// height is OK, but width must be constrained	WITHOUT_CLASSIFICATION	0.999966427068556	WITHOUT_CLASSIFICATION	3.357293144395347E-5	DEFECT
// nothing to clear	WITHOUT_CLASSIFICATION	0.9999995584545838	WITHOUT_CLASSIFICATION	4.41545416209682E-7	DEFECT
// if the area has zero height or width, we shouldn't draw anything	WITHOUT_CLASSIFICATION	0.99981001850238	WITHOUT_CLASSIFICATION	1.8998149761999933E-4	DEFECT
// since the flow layout is relatively straightforward, no information // needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999999455586136	WITHOUT_CLASSIFICATION	5.444138635440657E-8	DEFECT
// place in this column (truncated) anyway	WITHOUT_CLASSIFICATION	0.9999598592724483	WITHOUT_CLASSIFICATION	4.014072755170067E-5	DEFECT
// start new column	WITHOUT_CLASSIFICATION	0.9999999649900624	WITHOUT_CLASSIFICATION	3.5009937582732876E-8	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999999835102044	WITHOUT_CLASSIFICATION	1.6489795656142176E-8	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9999777769170992	WITHOUT_CLASSIFICATION	2.2223082900801174E-5	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.9999881245842953	WITHOUT_CLASSIFICATION	1.1875415704634216E-5	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999992337707289	WITHOUT_CLASSIFICATION	7.662292710825538E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999990587417544	WITHOUT_CLASSIFICATION	9.412582455397758E-7	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.999999074729529	WITHOUT_CLASSIFICATION	9.252704710692119E-7	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9999924367607722	WITHOUT_CLASSIFICATION	7.563239227768371E-6	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.9999999782116619	WITHOUT_CLASSIFICATION	2.17883381409712E-8	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9999935435746331	WITHOUT_CLASSIFICATION	6.456425366821229E-6	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9999999783107703	WITHOUT_CLASSIFICATION	2.1689229783632677E-8	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.9999963938417978	WITHOUT_CLASSIFICATION	3.606158202172356E-6	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.999999941656292	WITHOUT_CLASSIFICATION	5.8343707952310334E-8	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999995802323104	WITHOUT_CLASSIFICATION	4.1976768966000573E-7	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999995802323104	WITHOUT_CLASSIFICATION	4.1976768966000573E-7	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999995802323104	WITHOUT_CLASSIFICATION	4.1976768966000573E-7	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9998668818102454	WITHOUT_CLASSIFICATION	1.3311818975458902E-4	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9998668818102454	WITHOUT_CLASSIFICATION	1.3311818975458902E-4	DEFECT
//    /** Insets text field. */ //    private InsetsTextField tickLabelInsetsTextField; // //    /** Label insets text field. */ //    private InsetsTextField labelInsetsTextField;	WITHOUT_CLASSIFICATION	0.999993581180525	WITHOUT_CLASSIFICATION	6.418819475136825E-6	DEFECT
// figure out what type of axis we have and instantiate the // appropriate panel	WITHOUT_CLASSIFICATION	0.9999996599672536	WITHOUT_CLASSIFICATION	3.400327464309659E-7	DEFECT
// Insets values	WITHOUT_CLASSIFICATION	0.9999971273997577	WITHOUT_CLASSIFICATION	2.872600242341149E-6	DEFECT
// axis.setTickMarkStroke(getTickMarkStroke());	WITHOUT_CLASSIFICATION	0.9999960281813091	WITHOUT_CLASSIFICATION	3.971818690920823E-6	DEFECT
// create a panel for the settings...	WITHOUT_CLASSIFICATION	0.9999998229156852	WITHOUT_CLASSIFICATION	1.7708431469730942E-7	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9997929402821037	WITHOUT_CLASSIFICATION	2.070597178962247E-4	DEFECT
//      end fix by rfuller	WITHOUT_CLASSIFICATION	0.9998011282090797	WITHOUT_CLASSIFICATION	1.9887179092028718E-4	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.9992156194047279	WITHOUT_CLASSIFICATION	7.843805952719858E-4	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.9999983542204531	WITHOUT_CLASSIFICATION	1.6457795468467177E-6	DEFECT
// then the axis properties...	WITHOUT_CLASSIFICATION	0.9999853883841489	WITHOUT_CLASSIFICATION	1.4611615851061929E-5	DEFECT
// pass to super-class for handling	WITHOUT_CLASSIFICATION	0.9999995005663368	WITHOUT_CLASSIFICATION	4.994336631668544E-7	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9999935191765824	WITHOUT_CLASSIFICATION	6.48082341762281E-6	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9999935191765824	WITHOUT_CLASSIFICATION	6.48082341762281E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999998492428747	WITHOUT_CLASSIFICATION	1.5075712527582766E-7	DEFECT
//      fix by rfuller	WITHOUT_CLASSIFICATION	0.9998571834982484	WITHOUT_CLASSIFICATION	1.4281650175156685E-4	DEFECT
// populate the deprecated fields	WITHOUT_CLASSIFICATION	0.9999999733363922	WITHOUT_CLASSIFICATION	2.666360784765032E-8	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999816778218422	WITHOUT_CLASSIFICATION	1.8322178157827034E-5	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999816778218422	WITHOUT_CLASSIFICATION	1.8322178157827034E-5	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999816778218422	WITHOUT_CLASSIFICATION	1.8322178157827034E-5	DEFECT
// update the deprecated field	WITHOUT_CLASSIFICATION	0.9999999457309668	WITHOUT_CLASSIFICATION	5.4269033301602375E-8	DEFECT
// update the deprecated fields	WITHOUT_CLASSIFICATION	0.9999999681571689	WITHOUT_CLASSIFICATION	3.184283106714481E-8	DEFECT
// check the deprecated fields	WITHOUT_CLASSIFICATION	0.9999999685161712	WITHOUT_CLASSIFICATION	3.148382872082111E-8	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999940279496967	WITHOUT_CLASSIFICATION	5.9720503033467175E-6	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.9999985246601815	WITHOUT_CLASSIFICATION	1.4753398185803327E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999967299757703	WITHOUT_CLASSIFICATION	3.270024229762371E-6	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.9999991559867663	WITHOUT_CLASSIFICATION	8.440132336973101E-7	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9999777769170992	WITHOUT_CLASSIFICATION	2.2223082900801174E-5	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.9999881245842953	WITHOUT_CLASSIFICATION	1.1875415704634216E-5	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.9999999782116619	WITHOUT_CLASSIFICATION	2.17883381409712E-8	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9999935435746331	WITHOUT_CLASSIFICATION	6.456425366821229E-6	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9999999783107703	WITHOUT_CLASSIFICATION	2.1689229783632677E-8	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.9999963938417978	WITHOUT_CLASSIFICATION	3.606158202172356E-6	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.999999941656292	WITHOUT_CLASSIFICATION	5.8343707952310334E-8	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999816778218422	WITHOUT_CLASSIFICATION	1.8322178157827034E-5	DEFECT
//dmo added //dmo added	WITHOUT_CLASSIFICATION	0.9999878097219012	WITHOUT_CLASSIFICATION	1.2190278098861258E-5	DEFECT
// if there is a tool tip, we expect it to generate the title and // alt values, so we only add an empty alt if there is no tooltip	WITHOUT_CLASSIFICATION	0.9999993387451523	WITHOUT_CLASSIFICATION	6.612548476716164E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999965148813156	WITHOUT_CLASSIFICATION	3.4851186842796843E-6	DEFECT
// FIXME	WITHOUT_CLASSIFICATION	0.7129574781910042	WITHOUT_CLASSIFICATION	0.2870425218089958	DEFECT
// this is a paint we don't recognise	WITHOUT_CLASSIFICATION	0.9998167652964076	WITHOUT_CLASSIFICATION	1.83234703592392E-4	DEFECT
// null is handled fine here...	WITHOUT_CLASSIFICATION	0.999090765601709	WITHOUT_CLASSIFICATION	9.092343982909722E-4	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9998379471665434	WITHOUT_CLASSIFICATION	1.6205283345670354E-4	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.9999994848217826	WITHOUT_CLASSIFICATION	5.151782173909152E-7	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.999999955417607	WITHOUT_CLASSIFICATION	4.458239312622376E-8	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.999999955417607	WITHOUT_CLASSIFICATION	4.458239312622376E-8	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.9999999965618178	WITHOUT_CLASSIFICATION	3.438182061289077E-9	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.9999999965618178	WITHOUT_CLASSIFICATION	3.438182061289077E-9	DEFECT
// set the default stroke for all series	WITHOUT_CLASSIFICATION	0.9999959538147676	WITHOUT_CLASSIFICATION	4.046185232432875E-6	DEFECT
//this.chartPanel.isDomainZoomable()) {	WITHOUT_CLASSIFICATION	0.9999999060626565	WITHOUT_CLASSIFICATION	9.393734356436806E-8	DEFECT
//this.chartPanel.isRangeZoomable()) {	WITHOUT_CLASSIFICATION	0.9999997628771637	WITHOUT_CLASSIFICATION	2.3712283629208866E-7	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999950820163495	WITHOUT_CLASSIFICATION	4.91798365064411E-6	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999950820163495	WITHOUT_CLASSIFICATION	4.91798365064411E-6	DEFECT
// does nothing unless overridden        	WITHOUT_CLASSIFICATION	0.999981820538361	WITHOUT_CLASSIFICATION	1.817946163900186E-5	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999921262732505	WITHOUT_CLASSIFICATION	7.873726749434999E-6	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999999958855379	WITHOUT_CLASSIFICATION	4.114462068944566E-9	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999992337707289	WITHOUT_CLASSIFICATION	7.662292710825538E-7	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999950820163495	WITHOUT_CLASSIFICATION	4.91798365064411E-6	DEFECT
// special case - if the underlying rectangle uses ints we // need to create one that uses doubles	WITHOUT_CLASSIFICATION	0.9999999139592162	WITHOUT_CLASSIFICATION	8.604078391606251E-8	DEFECT
// title // x-axis label // y-axis label	WITHOUT_CLASSIFICATION	0.9999865130037313	WITHOUT_CLASSIFICATION	1.348699626877E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999967299757703	WITHOUT_CLASSIFICATION	3.270024229762371E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999967299757703	WITHOUT_CLASSIFICATION	3.270024229762371E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999995985028234	WITHOUT_CLASSIFICATION	4.0149717669063966E-7	DEFECT
// the actual panning occurs later in the mouseDragged() method	WITHOUT_CLASSIFICATION	0.9999994782562113	WITHOUT_CLASSIFICATION	5.217437886480993E-7	DEFECT
//handle panning if we have a start point else unregister	WITHOUT_CLASSIFICATION	0.9999999298679607	WITHOUT_CLASSIFICATION	7.0132039253357E-8	DEFECT
//if we have been panning reset the cursor //unregister in any case	WITHOUT_CLASSIFICATION	0.9999992020351874	WITHOUT_CLASSIFICATION	7.979648124666878E-7	DEFECT
// the URL text should already have been escaped by the URL generator	WITHOUT_CLASSIFICATION	0.9999988147801486	WITHOUT_CLASSIFICATION	1.1852198513107478E-6	DEFECT
// no fields to test	WITHOUT_CLASSIFICATION	0.999999340603754	WITHOUT_CLASSIFICATION	6.593962461068057E-7	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9999977995804862	WITHOUT_CLASSIFICATION	2.2004195137805007E-6	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9999977995804862	WITHOUT_CLASSIFICATION	2.2004195137805007E-6	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999955953269668	WITHOUT_CLASSIFICATION	4.4046730331726374E-6	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999955953269668	WITHOUT_CLASSIFICATION	4.4046730331726374E-6	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999955953269668	WITHOUT_CLASSIFICATION	4.4046730331726374E-6	DEFECT
// isArrowAtTop	WITHOUT_CLASSIFICATION	0.9999841772769128	WITHOUT_CLASSIFICATION	1.5822723087200415E-5	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.9999986137252872	WITHOUT_CLASSIFICATION	1.3862747127943066E-6	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.9999986137252872	WITHOUT_CLASSIFICATION	1.3862747127943066E-6	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.9999977836693386	WITHOUT_CLASSIFICATION	2.2163306614150135E-6	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.9999977836693386	WITHOUT_CLASSIFICATION	2.2163306614150135E-6	DEFECT
/// we have rotation houston, please spin me	WITHOUT_CLASSIFICATION	0.9999962563600218	WITHOUT_CLASSIFICATION	3.743639978148355E-6	DEFECT
// horizontal	WITHOUT_CLASSIFICATION	0.9999971725147733	WITHOUT_CLASSIFICATION	2.8274852268011623E-6	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999990500602205	WITHOUT_CLASSIFICATION	9.499397794043719E-7	DEFECT
// configure the range axis...	WITHOUT_CLASSIFICATION	0.9999993592893193	WITHOUT_CLASSIFICATION	6.407106807284609E-7	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9999561577329676	WITHOUT_CLASSIFICATION	4.384226703235632E-5	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999956543817103	WITHOUT_CLASSIFICATION	4.3456182896659484E-6	DEFECT
// we expect the line to be vertical or horizontal // vertical	WITHOUT_CLASSIFICATION	0.9999992813448161	WITHOUT_CLASSIFICATION	7.186551839306385E-7	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.9999994260628463	WITHOUT_CLASSIFICATION	5.739371537132875E-7	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999966141390827	WITHOUT_CLASSIFICATION	3.3858609172193032E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999992017311944	WITHOUT_CLASSIFICATION	7.982688057344483E-7	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999846824211513	WITHOUT_CLASSIFICATION	1.5317578848633362E-5	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999999612102417	WITHOUT_CLASSIFICATION	3.878975821365732E-8	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999987685054528	WITHOUT_CLASSIFICATION	1.231494547296283E-6	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.9999998104866015	WITHOUT_CLASSIFICATION	1.8951339850900428E-7	DEFECT
// the range axis is deserialized before the subplots, so its value // range is likely to be incorrect...	WITHOUT_CLASSIFICATION	0.9999330142844038	WITHOUT_CLASSIFICATION	6.698571559617027E-5	DEFECT
// default preserves previous // behaviour	WITHOUT_CLASSIFICATION	0.9999998630013974	WITHOUT_CLASSIFICATION	1.3699860251816773E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999968881564115	WITHOUT_CLASSIFICATION	3.111843588425366E-6	DEFECT
// make the link area a square if the pie chart is to be circular... // is circular?	WITHOUT_CLASSIFICATION	0.9999979452300016	WITHOUT_CLASSIFICATION	2.0547699984228207E-6	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.99999875769969	WITHOUT_CLASSIFICATION	1.2423003099814794E-6	DEFECT
// the explode area defines the max circle/ellipse for the exploded pie // sections. // it is defined by shrinking the linkArea by the linkMargin factor.	WITHOUT_CLASSIFICATION	0.9999984351038425	WITHOUT_CLASSIFICATION	1.5648961575138155E-6	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999997269716374	WITHOUT_CLASSIFICATION	2.7302836258929077E-7	DEFECT
// the link area defines the dog-leg point for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999997311288277	WITHOUT_CLASSIFICATION	2.6887117239220417E-7	DEFECT
// get the data source - return if null;	WITHOUT_CLASSIFICATION	0.9999999660063813	WITHOUT_CLASSIFICATION	3.399361866818666E-8	DEFECT
// if too any elements	WITHOUT_CLASSIFICATION	0.9999972951224692	WITHOUT_CLASSIFICATION	2.7048775308111685E-6	DEFECT
// get a list of keys...	WITHOUT_CLASSIFICATION	0.9999986357128292	WITHOUT_CLASSIFICATION	1.3642871707993942E-6	DEFECT
// do nothing by default.	WITHOUT_CLASSIFICATION	0.9999976091639347	WITHOUT_CLASSIFICATION	2.3908360652414627E-6	DEFECT
//g2.clip(clipArea);	WITHOUT_CLASSIFICATION	0.9999951307707284	WITHOUT_CLASSIFICATION	4.869229271551806E-6	DEFECT
// if depth is negative don't draw anything	WITHOUT_CLASSIFICATION	0.9999936275215964	WITHOUT_CLASSIFICATION	6.3724784036020465E-6	DEFECT
// draw the bottom circle	WITHOUT_CLASSIFICATION	0.9999993811582688	WITHOUT_CLASSIFICATION	6.188417312538566E-7	DEFECT
// draw the height	WITHOUT_CLASSIFICATION	0.9999887712120841	WITHOUT_CLASSIFICATION	1.1228787916012396E-5	DEFECT
// cycle through once drawing only the sides at the back...	WITHOUT_CLASSIFICATION	0.999989507197563	WITHOUT_CLASSIFICATION	1.0492802437058461E-5	DEFECT
// cycle through again drawing only the sides at the front...	WITHOUT_CLASSIFICATION	0.9999455499642439	WITHOUT_CLASSIFICATION	5.4450035756059465E-5	DEFECT
// add a tooltip for the section...	WITHOUT_CLASSIFICATION	0.9999990357656537	WITHOUT_CLASSIFICATION	9.642343462876571E-7	DEFECT
// @mgs: using the method's return value was missing	WITHOUT_CLASSIFICATION	0.9999951372106272	WITHOUT_CLASSIFICATION	4.862789372834307E-6	DEFECT
// for CLOCKWISE charts, the extent will be negative...	WITHOUT_CLASSIFICATION	0.9999940304495858	WITHOUT_CLASSIFICATION	5.969550414270711E-6	DEFECT
// start at front	WITHOUT_CLASSIFICATION	0.9999994009687128	WITHOUT_CLASSIFICATION	5.990312872651924E-7	DEFECT
// the segment starts at the front, and wraps all // the way around // the back and finishes at the front again	WITHOUT_CLASSIFICATION	0.9999974376594181	WITHOUT_CLASSIFICATION	2.562340582002853E-6	DEFECT
// starts at the front, finishes at the back (going // around the left side)	WITHOUT_CLASSIFICATION	0.9999983759720501	WITHOUT_CLASSIFICATION	1.6240279498663846E-6	DEFECT
// the segment starts at the back (still extending // CLOCKWISE)	WITHOUT_CLASSIFICATION	0.9999930519610883	WITHOUT_CLASSIFICATION	6.94803891166404E-6	DEFECT
// whole segment stays at the back	WITHOUT_CLASSIFICATION	0.9999919031002401	WITHOUT_CLASSIFICATION	8.096899759985635E-6	DEFECT
// starts at the back, wraps around front, and // finishes at back again	WITHOUT_CLASSIFICATION	0.9999998073775683	WITHOUT_CLASSIFICATION	1.9262243172615191E-7	DEFECT
// starts at back, finishes at front (CLOCKWISE)	WITHOUT_CLASSIFICATION	0.9999991630396441	WITHOUT_CLASSIFICATION	8.369603559723897E-7	DEFECT
// segment starts at the front	WITHOUT_CLASSIFICATION	0.9999971751704309	WITHOUT_CLASSIFICATION	2.824829569093917E-6	DEFECT
// and finishes at the front	WITHOUT_CLASSIFICATION	0.9999979722671353	WITHOUT_CLASSIFICATION	2.0277328648031256E-6	DEFECT
// segment only occupies the front	WITHOUT_CLASSIFICATION	0.9999998791447425	WITHOUT_CLASSIFICATION	1.208552574854052E-7	DEFECT
// segments wraps right around the back...	WITHOUT_CLASSIFICATION	0.9999925866164842	WITHOUT_CLASSIFICATION	7.41338351588498E-6	DEFECT
// segments starts at front and finishes at back...	WITHOUT_CLASSIFICATION	0.9999952367184738	WITHOUT_CLASSIFICATION	4.763281526269449E-6	DEFECT
// segment starts at back	WITHOUT_CLASSIFICATION	0.9999979545665052	WITHOUT_CLASSIFICATION	2.0454334947797172E-6	DEFECT
// and finishes at back	WITHOUT_CLASSIFICATION	0.9999963365783424	WITHOUT_CLASSIFICATION	3.663421657571231E-6	DEFECT
//dmo //zero when the parameter is not set	WITHOUT_CLASSIFICATION	0.9999635724793151	WITHOUT_CLASSIFICATION	3.642752068490819E-5	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999997781850543	WITHOUT_CLASSIFICATION	2.2181494572097344E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.999999918544338	WITHOUT_CLASSIFICATION	8.145566195792072E-8	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999835928527	WITHOUT_CLASSIFICATION	1.640714730056605E-8	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999957753431631	WITHOUT_CLASSIFICATION	4.224656836852822E-6	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999957753431631	WITHOUT_CLASSIFICATION	4.224656836852822E-6	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.999999734316514	WITHOUT_CLASSIFICATION	2.656834859687559E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999922598218433	WITHOUT_CLASSIFICATION	7.74017815668738E-6	DEFECT
// additional dataArea modifications //check whether modification is	WITHOUT_CLASSIFICATION	0.9999990924149906	WITHOUT_CLASSIFICATION	9.075850092520982E-7	DEFECT
// ratio represents pixels	WITHOUT_CLASSIFICATION	0.9999996969027616	WITHOUT_CLASSIFICATION	3.030972384294995E-7	DEFECT
// ratio represents axis units	WITHOUT_CLASSIFICATION	0.9999998695102689	WITHOUT_CLASSIFICATION	1.3048973107854444E-7	DEFECT
// draw the plot background...	WITHOUT_CLASSIFICATION	0.9999634755569855	WITHOUT_CLASSIFICATION	3.652444301450108E-5	DEFECT
// draw vertical crosshair if required...	WITHOUT_CLASSIFICATION	0.9999837476894573	WITHOUT_CLASSIFICATION	1.6252310542746933E-5	DEFECT
// draw horizontal crosshair if required...	WITHOUT_CLASSIFICATION	0.9999904440093731	WITHOUT_CLASSIFICATION	9.555990626897384E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989849970972	WITHOUT_CLASSIFICATION	1.015002902854677E-6	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999929994096	WITHOUT_CLASSIFICATION	7.000590431821362E-9	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9999561577329676	WITHOUT_CLASSIFICATION	4.384226703235632E-5	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999929994096	WITHOUT_CLASSIFICATION	7.000590431821362E-9	DEFECT
// now get the data and plot it (the visual representation will depend // on the renderer that has been set)...	WITHOUT_CLASSIFICATION	0.999998273624326	WITHOUT_CLASSIFICATION	1.7263756738810107E-6	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999998959218143	WITHOUT_CLASSIFICATION	1.0407818576467357E-7	DEFECT
// this is a new column	WITHOUT_CLASSIFICATION	0.9999162370379522	WITHOUT_CLASSIFICATION	8.376296204779984E-5	DEFECT
// end of column	WITHOUT_CLASSIFICATION	0.9999996130627387	WITHOUT_CLASSIFICATION	3.8693726134164196E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9994651244234947	WITHOUT_CLASSIFICATION	5.348755765053108E-4	DEFECT
//              }	WITHOUT_CLASSIFICATION	0.9999934763893538	WITHOUT_CLASSIFICATION	6.523610646216034E-6	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999986546014507	WITHOUT_CLASSIFICATION	1.3453985492976757E-6	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999996655583604	WITHOUT_CLASSIFICATION	3.3444163961159107E-7	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.9999996465207573	WITHOUT_CLASSIFICATION	3.5347924260808963E-7	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999988873682173	WITHOUT_CLASSIFICATION	1.1126317826508434E-6	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999968881564115	WITHOUT_CLASSIFICATION	3.111843588425366E-6	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999998117990273	WITHOUT_CLASSIFICATION	1.8820097263259714E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.999999918544338	WITHOUT_CLASSIFICATION	8.145566195792072E-8	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999835928527	WITHOUT_CLASSIFICATION	1.640714730056605E-8	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989849970972	WITHOUT_CLASSIFICATION	1.015002902854677E-6	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.9999995616161532	WITHOUT_CLASSIFICATION	4.383838467641909E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9994651244234947	WITHOUT_CLASSIFICATION	5.348755765053108E-4	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999986546014507	WITHOUT_CLASSIFICATION	1.3453985492976757E-6	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999996655583604	WITHOUT_CLASSIFICATION	3.3444163961159107E-7	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.9999996465207573	WITHOUT_CLASSIFICATION	3.5347924260808963E-7	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999965607137087	WITHOUT_CLASSIFICATION	3.4392862913730856E-6	DEFECT
//Object oldValue = this.toolTipGenerator;	WITHOUT_CLASSIFICATION	0.999999256173913	WITHOUT_CLASSIFICATION	7.438260868035542E-7	DEFECT
//Object oldValue = this.urlGenerator;	WITHOUT_CLASSIFICATION	0.9999987395154843	WITHOUT_CLASSIFICATION	1.2604845155966493E-6	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999982900069222	WITHOUT_CLASSIFICATION	1.7099930777848287E-6	DEFECT
// the following relies on the fact that the intervals are immutable	WITHOUT_CLASSIFICATION	0.9999984708189346	WITHOUT_CLASSIFICATION	1.5291810654399787E-6	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.9999829098597842	WITHOUT_CLASSIFICATION	1.7090140215689154E-5	DEFECT
// can't find any difference	WITHOUT_CLASSIFICATION	0.999640790046072	WITHOUT_CLASSIFICATION	3.592099539279927E-4	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.9999990849187528	WITHOUT_CLASSIFICATION	9.150812471792849E-7	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999956543817103	WITHOUT_CLASSIFICATION	4.3456182896659484E-6	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999966141390827	WITHOUT_CLASSIFICATION	3.3858609172193032E-6	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999966141390827	WITHOUT_CLASSIFICATION	3.3858609172193032E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999986252194519	WITHOUT_CLASSIFICATION	1.374780548079594E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999992017311944	WITHOUT_CLASSIFICATION	7.982688057344483E-7	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999846824211513	WITHOUT_CLASSIFICATION	1.5317578848633362E-5	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999999612102417	WITHOUT_CLASSIFICATION	3.878975821365732E-8	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999987685054528	WITHOUT_CLASSIFICATION	1.231494547296283E-6	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999997781850543	WITHOUT_CLASSIFICATION	2.2181494572097344E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.999999918544338	WITHOUT_CLASSIFICATION	8.145566195792072E-8	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999922598218433	WITHOUT_CLASSIFICATION	7.74017815668738E-6	DEFECT
//  range = this.rangeAxis.getRange().getLength(); //  scaledRange = range * percent; //   rangeAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999942534478677	WITHOUT_CLASSIFICATION	5.7465521322246295E-6	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999989143368738	WITHOUT_CLASSIFICATION	1.0856631261683445E-6	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.9999997536035077	WITHOUT_CLASSIFICATION	2.4639649230173496E-7	DEFECT
// override is only for documentation purposes	WITHOUT_CLASSIFICATION	0.9999992758221012	WITHOUT_CLASSIFICATION	7.241778986500381E-7	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999999995782627	WITHOUT_CLASSIFICATION	4.2173725693070454E-10	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999994200973793	WITHOUT_CLASSIFICATION	5.799026207088441E-7	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9999875747617564	WITHOUT_CLASSIFICATION	1.2425238243548977E-5	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9999875747617564	WITHOUT_CLASSIFICATION	1.2425238243548977E-5	DEFECT
//get major dimension	WITHOUT_CLASSIFICATION	0.9999862112731218	WITHOUT_CLASSIFICATION	1.3788726878308248E-5	DEFECT
//ellipse diameter is the minor dimension	WITHOUT_CLASSIFICATION	0.9999493078662799	WITHOUT_CLASSIFICATION	5.0692133719991394E-5	DEFECT
// draw the wafer	WITHOUT_CLASSIFICATION	0.9999950594770709	WITHOUT_CLASSIFICATION	4.940522929139575E-6	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.9999985438245226	WITHOUT_CLASSIFICATION	1.456175477452441E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999986252194519	WITHOUT_CLASSIFICATION	1.374780548079594E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999999612102417	WITHOUT_CLASSIFICATION	3.878975821365732E-8	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999987685054528	WITHOUT_CLASSIFICATION	1.231494547296283E-6	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.9999998104866015	WITHOUT_CLASSIFICATION	1.8951339850900428E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999968881564115	WITHOUT_CLASSIFICATION	3.111843588425366E-6	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999997781850543	WITHOUT_CLASSIFICATION	2.2181494572097344E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.999999918544338	WITHOUT_CLASSIFICATION	8.145566195792072E-8	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999835928527	WITHOUT_CLASSIFICATION	1.640714730056605E-8	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999929994096	WITHOUT_CLASSIFICATION	7.000590431821362E-9	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999989143368738	WITHOUT_CLASSIFICATION	1.0856631261683445E-6	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.9999993199490407	WITHOUT_CLASSIFICATION	6.800509592772673E-7	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.9999993199490407	WITHOUT_CLASSIFICATION	6.800509592772673E-7	DEFECT
// calculate and draw the notch // horizontal orientation is considered notch right // vertical orientation is considered notch down	WITHOUT_CLASSIFICATION	0.9998929895319799	WITHOUT_CLASSIFICATION	1.0701046802013538E-4	DEFECT
//this.axisOffset.trim(dataArea);	WITHOUT_CLASSIFICATION	0.9999989035995266	WITHOUT_CLASSIFICATION	1.0964004734030792E-6	DEFECT
//// SECTION PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999980208375893	WITHOUT_CLASSIFICATION	1.9791624106836943E-6	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9982875578868424	WITHOUT_CLASSIFICATION	0.0017124421131575137	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.999999965095531	WITHOUT_CLASSIFICATION	3.490446889228505E-8	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.999999965095531	WITHOUT_CLASSIFICATION	3.490446889228505E-8	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999991425606098	WITHOUT_CLASSIFICATION	8.574393901330624E-7	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999991425606098	WITHOUT_CLASSIFICATION	8.574393901330624E-7	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999998927325112	WITHOUT_CLASSIFICATION	1.0726748877153927E-7	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999998927325112	WITHOUT_CLASSIFICATION	1.0726748877153927E-7	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999998927325112	WITHOUT_CLASSIFICATION	1.0726748877153927E-7	DEFECT
//// SECTION OUTLINE PAINT ////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999981940590623	WITHOUT_CLASSIFICATION	1.805940937612938E-6	DEFECT
//// SECTION OUTLINE STROKE ///////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999985090955209	WITHOUT_CLASSIFICATION	1.4909044790714134E-6	DEFECT
// if not, check if there is a stroke defined for the specified key	WITHOUT_CLASSIFICATION	0.9999986093855349	WITHOUT_CLASSIFICATION	1.3906144650903758E-6	DEFECT
// adjust the plot area for interior spacing and labels...	WITHOUT_CLASSIFICATION	0.999999833818206	WITHOUT_CLASSIFICATION	1.661817940034958E-7	DEFECT
// make the link area a square if the pie chart is to be circular...	WITHOUT_CLASSIFICATION	0.9999999589456666	WITHOUT_CLASSIFICATION	4.105433335267258E-8	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9999561577329676	WITHOUT_CLASSIFICATION	4.384226703235632E-5	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999956543817103	WITHOUT_CLASSIFICATION	4.3456182896659484E-6	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999966141390827	WITHOUT_CLASSIFICATION	3.3858609172193032E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999992017311944	WITHOUT_CLASSIFICATION	7.982688057344483E-7	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999997269716374	WITHOUT_CLASSIFICATION	2.7302836258929077E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999997781850543	WITHOUT_CLASSIFICATION	2.2181494572097344E-7	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999982900069222	WITHOUT_CLASSIFICATION	1.7099930777848287E-6	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.9999985438245226	WITHOUT_CLASSIFICATION	1.456175477452441E-6	DEFECT
// update the linking line target for later // add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9999860985668231	WITHOUT_CLASSIFICATION	1.3901433176897174E-5	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9998752623021089	WITHOUT_CLASSIFICATION	1.2473769789118168E-4	DEFECT
// classify the keys according to which side the label will appear...	WITHOUT_CLASSIFICATION	0.9998737059105314	WITHOUT_CLASSIFICATION	1.262940894686284E-4	DEFECT
// calculate the max label width from the plot dimensions, because // a circular pie can leave a lot more room for labels...	WITHOUT_CLASSIFICATION	0.9999664472443489	WITHOUT_CLASSIFICATION	3.3552755651008495E-5	DEFECT
// draw the labels...	WITHOUT_CLASSIFICATION	0.99998913134891	WITHOUT_CLASSIFICATION	1.0868651089994028E-5	DEFECT
// draw the right labels...	WITHOUT_CLASSIFICATION	0.9999864772259691	WITHOUT_CLASSIFICATION	1.3522774030863068E-5	DEFECT
//hh * getInteriorGap();	WITHOUT_CLASSIFICATION	0.9999986434703446	WITHOUT_CLASSIFICATION	1.3565296553242986E-6	DEFECT
// line not visible	WITHOUT_CLASSIFICATION	0.9999169140651983	WITHOUT_CLASSIFICATION	8.308593480164426E-5	DEFECT
// for a RadialGradientPaint we adjust the center and radius to match // the current pie segment...	WITHOUT_CLASSIFICATION	0.9999898033866602	WITHOUT_CLASSIFICATION	1.0196613339691461E-5	DEFECT
// can't find any difference...	WITHOUT_CLASSIFICATION	0.9965584037623146	WITHOUT_CLASSIFICATION	0.0034415962376854185	DEFECT
// DEPRECATED FIELDS AND METHODS...	WITHOUT_CLASSIFICATION	0.9997267458099612	WITHOUT_CLASSIFICATION	2.7325419003871833E-4	DEFECT
// no range axis // no renderer	WITHOUT_CLASSIFICATION	0.9999955011302977	WITHOUT_CLASSIFICATION	4.498869702344653E-6	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999984120335018	WITHOUT_CLASSIFICATION	1.5879664981850323E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999999612102417	WITHOUT_CLASSIFICATION	3.878975821365732E-8	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999987685054528	WITHOUT_CLASSIFICATION	1.231494547296283E-6	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999997781850543	WITHOUT_CLASSIFICATION	2.2181494572097344E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.999999918544338	WITHOUT_CLASSIFICATION	8.145566195792072E-8	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999929994096	WITHOUT_CLASSIFICATION	7.000590431821362E-9	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999989143368738	WITHOUT_CLASSIFICATION	1.0856631261683445E-6	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.9999997536035077	WITHOUT_CLASSIFICATION	2.4639649230173496E-7	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999999995782627	WITHOUT_CLASSIFICATION	4.2173725693070454E-10	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999994200973793	WITHOUT_CLASSIFICATION	5.799026207088441E-7	DEFECT
// delegate 'state' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999887664351	WITHOUT_CLASSIFICATION	1.1233564895738223E-8	DEFECT
// after setting up all the subplots, the shared domain axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999999753245716	WITHOUT_CLASSIFICATION	2.467542839225881E-8	DEFECT
// 20% // 20% // 20%	WITHOUT_CLASSIFICATION	0.9999652229239211	WITHOUT_CLASSIFICATION	3.4777076078834004E-5	DEFECT
// create the bounds for the inner arc	WITHOUT_CLASSIFICATION	0.9999996795260243	WITHOUT_CLASSIFICATION	3.2047397563704763E-7	DEFECT
// calculate inner arc in reverse direction, for later // GeneralPath construction	WITHOUT_CLASSIFICATION	0.9999143466722331	WITHOUT_CLASSIFICATION	8.565332776682041E-5	DEFECT
// add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9999640834186965	WITHOUT_CLASSIFICATION	3.5916581303547175E-5	DEFECT
// check that there is some data to display...	WITHOUT_CLASSIFICATION	0.9999869118951429	WITHOUT_CLASSIFICATION	1.3088104856965186E-5	DEFECT
// the columns variable is always >= rows	WITHOUT_CLASSIFICATION	0.9999963278928157	WITHOUT_CLASSIFICATION	3.6721071844749824E-6	DEFECT
// swap rows and columns to match plotArea shape	WITHOUT_CLASSIFICATION	0.9999998602822563	WITHOUT_CLASSIFICATION	1.3971774366156802E-7	DEFECT
// update the section colors to match the global colors...	WITHOUT_CLASSIFICATION	0.9999999124220774	WITHOUT_CLASSIFICATION	8.757792253474085E-8	DEFECT
// pre-fetch the colors for each key...this is because the subplots // may not display every key, but we need the coloring to be // consistent...	WITHOUT_CLASSIFICATION	0.9861955472494298	WITHOUT_CLASSIFICATION	0.013804452750570123	DEFECT
// column keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9999793402748433	WITHOUT_CLASSIFICATION	2.06597251567913E-5	DEFECT
// row keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9999722751930571	WITHOUT_CLASSIFICATION	2.772480694293308E-5	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. * Other names may be trademarks of their respective owners.] * * ----------------- * CategoryPlot.java * ----------------- * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Jeremy Bowman; *                   Arnaud Lelievre; *                   Richard West, Advanced Micro Devices, Inc.; *                   Ulrich Voigt - patch 2686040; *                   Peter Kolb - patches 2603321 and 2809117; * * Changes * ------- * 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG); * 21-Aug-2001 : Added standard header. Fixed DOS encoding problem (DG); * 18-Sep-2001 : Updated header (DG); * 15-Oct-2001 : Data source classes moved to com.jrefinery.data.* (DG); * 22-Oct-2001 : Renamed DataSource.java --> Dataset.java etc. (DG); * 23-Oct-2001 : Changed intro and trail gaps on bar plots to use percentage of *               available space rather than a fixed number of units (DG); * 12-Dec-2001 : Changed constructors to protected (DG); * 13-Dec-2001 : Added tooltips (DG); * 16-Jan-2002 : Increased maximum intro and trail gap percents, plus added *               some argument checking code.  Thanks to Taoufik Romdhane for *               suggesting this (DG); * 05-Feb-2002 : Added accessor methods for the tooltip generator, incorporated *               alpha-transparency for Plot and subclasses (DG); * 06-Mar-2002 : Updated import statements (DG); * 14-Mar-2002 : Renamed BarPlot.java --> CategoryPlot.java, and changed code *               to use the CategoryItemRenderer interface (DG); * 22-Mar-2002 : Dropped the getCategories() method (DG); * 23-Apr-2002 : Moved the dataset from the JFreeChart class to the Plot *               class (DG); * 29-Apr-2002 : New methods to support printing values at the end of bars, *               contributed by Jeremy Bowman (DG); * 11-May-2002 : New methods for label visibility and overlaid plot support, *               contributed by Jeremy Bowman (DG); * 06-Jun-2002 : Removed the tooltip generator, this is now stored with the *               renderer.  Moved constants into the CategoryPlotConstants *               interface.  Updated Javadoc comments (DG); * 10-Jun-2002 : Overridden datasetChanged() method to update the upper and *               lower bound on the range axis (if necessary), updated *               Javadocs (DG); * 25-Jun-2002 : Removed redundant imports (DG); * 20-Aug-2002 : Changed the constructor for Marker (DG); * 28-Aug-2002 : Added listener notification to setDomainAxis() and *               setRangeAxis() (DG); * 23-Sep-2002 : Added getLegendItems() method and fixed errors reported by *               Checkstyle (DG); * 28-Oct-2002 : Changes to the CategoryDataset interface (DG); * 05-Nov-2002 : Base dataset is now TableDataset not CategoryDataset (DG); * 07-Nov-2002 : Renamed labelXXX as valueLabelXXX (DG); * 18-Nov-2002 : Added grid settings for both domain and range axis (previously *               these were set in the axes) (DG); * 19-Nov-2002 : Added axis location parameters to constructor (DG); * 17-Jan-2003 : Moved to com.jrefinery.chart.plot package (DG); * 14-Feb-2003 : Fixed bug in auto-range calculation for secondary axis (DG); * 26-Mar-2003 : Implemented Serializable (DG); * 02-May-2003 : Moved render() method up from subclasses. Added secondary *               range markers. Added an attribute to control the dataset *               rendering order.  Added a drawAnnotations() method.  Changed *               the axis location from an int to an AxisLocation (DG); * 07-May-2003 : Merged HorizontalCategoryPlot and VerticalCategoryPlot into *               this class (DG); * 02-Jun-2003 : Removed check for range axis compatibility (DG); * 04-Jul-2003 : Added a domain gridline position attribute (DG); * 21-Jul-2003 : Moved DrawingSupplier to Plot superclass (DG); * 19-Aug-2003 : Added equals() method and implemented Cloneable (DG); * 01-Sep-2003 : Fixed bug 797466 (no change event when secondary dataset *               changes) (DG); * 02-Sep-2003 : Fixed bug 795209 (wrong dataset checked in render2 method) and *               790407 (initialise method) (DG); * 08-Sep-2003 : Added internationalization via use of properties *               resourceBundle (RFE 690236) (AL); * 08-Sep-2003 : Fixed bug (wrong secondary range axis being used).  Changed *               ValueAxis API (DG); * 10-Sep-2003 : Fixed bug in setRangeAxis() method (DG); * 15-Sep-2003 : Fixed two bugs in serialization, implemented *               PublicCloneable (DG); * 23-Oct-2003 : Added event notification for changes to renderer (DG); * 26-Nov-2003 : Fixed bug (849645) in clearRangeMarkers() method (DG); * 03-Dec-2003 : Modified draw method to accept anchor (DG); * 21-Jan-2004 : Update for renamed method in ValueAxis (DG); * 10-Mar-2004 : Fixed bug in axis range calculation when secondary renderer is *               stacked (DG); * 12-May-2004 : Added fixed legend items (DG); * 19-May-2004 : Added check for null legend item from renderer (DG); * 02-Jun-2004 : Updated the DatasetRenderingOrder class (DG); * 05-Nov-2004 : Renamed getDatasetsMappedToRangeAxis() *               --> datasetsMappedToRangeAxis(), and ensured that returned *               list doesn't contain null datasets (DG); * 12-Nov-2004 : Implemented new Zoomable interface (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds() in *               CategoryItemRenderer (DG); * 04-May-2005 : Fixed serialization of range markers (DG); * 05-May-2005 : Updated draw() method parameters (DG); * 20-May-2005 : Added setDomainAxes() and setRangeAxes() methods, as per *               RFE 1183100 (DG); * 01-Jun-2005 : Upon deserialization, register plot as a listener with its *               axes, dataset(s) and renderer(s) - see patch 1209475 (DG); * 02-Jun-2005 : Added support for domain markers (DG); * 06-Jun-2005 : Fixed equals() method for use with GradientPaint (DG); * 09-Jun-2005 : Added setRenderers(), as per RFE 1183100 (DG); * 16-Jun-2005 : Added getDomainAxisCount() and getRangeAxisCount() methods, to *               match XYPlot (see RFE 1220495) (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 11-Jan-2006 : Added configureRangeAxes() to rendererChanged(), since the *               renderer might influence the axis range (DG); * 27-Jan-2006 : Added various null argument checks (DG); * 18-Aug-2006 : Added getDatasetCount() method, plus a fix for bug drawing *               category labels, thanks to Adriaan Joubert (1277726) (DG); * 05-Sep-2006 : Added MarkerChangeEvent support (DG); * 30-Oct-2006 : Added getDomainAxisIndex(), datasetsMappedToDomainAxis() and *               getCategoriesForAxis() methods (DG); * 22-Nov-2006 : Fire PlotChangeEvent from setColumnRenderingOrder() and *               setRowRenderingOrder() (DG); * 29-Nov-2006 : Fix for bug 1605207 (IntervalMarker exceeds bounds of data *               area) (DG); * 26-Feb-2007 : Fix for bug 1669218 (setDomainAxisLocation() notify argument *               ignored) (DG); * 13-Mar-2007 : Added null argument checks for setRangeCrosshairPaint() and *               setRangeCrosshairStroke(), fixed clipping for *               annotations (DG); * 07-Jun-2007 : Override drawBackground() for new GradientPaint handling (DG); * 10-Jul-2007 : Added getRangeAxisIndex(ValueAxis) method (DG); * 24-Sep-2007 : Implemented new zoom methods (DG); * 25-Oct-2007 : Added some argument checks (DG); * 05-Nov-2007 : Applied patch 1823697, by Richard West, for removal of domain *               and range markers (DG); * 14-Nov-2007 : Added missing event notifications (DG); * 25-Mar-2008 : Added new methods with optional notification - see patch *               1913751 (DG); * 07-Apr-2008 : Fixed NPE in removeDomainMarker() and *               removeRangeMarker() (DG); * 23-Apr-2008 : Fixed equals() and clone() methods (DG); * 26-Jun-2008 : Fixed crosshair support (DG); * 10-Jul-2008 : Fixed outline visibility for 3D renderers (DG); * 12-Aug-2008 : Added rendererCount() method (DG); * 25-Nov-2008 : Added facility to map datasets to multiples axes (DG); * 15-Dec-2008 : Cleaned up grid drawing methods (DG); * 18-Dec-2008 : Use ResourceBundleWrapper - see patch 1607918 by *               Jess Thrysoee (DG); * 21-Jan-2009 : Added rangeMinorGridlinesVisible flag (DG); * 18-Mar-2009 : Modified anchored zoom behaviour (DG); * 19-Mar-2009 : Implemented Pannable interface - see patch 2686040 (DG); * 19-Mar-2009 : Added entity support - see patch 2603321 by Peter Kolb (DG); * 24-Jun-2009 : Implemented AnnotationChangeListener (see patch 2809117 by *               PK) (DG); * 06-Jul-2009 : Fix for cloning of renderers - see bug 2817504 (DG) * 10-Jul-2009 : Added optional drop shadow generator (DG); * 27-Sep-2011 : Fixed annotation import (DG); * 18-Oct-2011 : Fixed tooltip offset with shadow generator (DG); * 20-Nov-2011 : Initialise shadow generator as null (DG); * 02-Jul-2013 : Use ParamChecks (DG); * 12-Sep-2013 : Check for KEY_SUPPRESS_SHADOW_GENERATION rendering hint (DG); * 10-Mar-2014 : Updated Javadocs for issue #1123 (DG); * 09-Apr-2014 : Remove use of ObjectList (DG); *  */	WITHOUT_CLASSIFICATION	0.9999999925070622	WITHOUT_CLASSIFICATION	7.492937766923783E-9	DEFECT
// allocate storage for dataset, axes and renderers	WITHOUT_CLASSIFICATION	0.9999999100566683	WITHOUT_CLASSIFICATION	8.994333169783158E-8	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999876203107507	WITHOUT_CLASSIFICATION	1.237968924937476E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999876203107507	WITHOUT_CLASSIFICATION	1.237968924937476E-5	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999846824211513	WITHOUT_CLASSIFICATION	1.5317578848633362E-5	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999835928527	WITHOUT_CLASSIFICATION	1.640714730056605E-8	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.999999734316514	WITHOUT_CLASSIFICATION	2.656834859687559E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999922598218433	WITHOUT_CLASSIFICATION	7.74017815668738E-6	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999994200973793	WITHOUT_CLASSIFICATION	5.799026207088441E-7	DEFECT
// set the anchor value for the range axis...	WITHOUT_CLASSIFICATION	0.9999995270225274	WITHOUT_CLASSIFICATION	4.7297747272006316E-7	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999865657573871	WITHOUT_CLASSIFICATION	1.3434242612868232E-5	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.999999958605061	WITHOUT_CLASSIFICATION	4.139493899320624E-8	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.999999958605061	WITHOUT_CLASSIFICATION	4.139493899320624E-8	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999926610265	WITHOUT_CLASSIFICATION	7.338973553321994E-9	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999926610265	WITHOUT_CLASSIFICATION	7.338973553321994E-9	DEFECT
// get the legend items for the datasets...	WITHOUT_CLASSIFICATION	0.999996711457434	WITHOUT_CLASSIFICATION	3.2885425660892955E-6	DEFECT
// this should never happen with the existing code, but throw // an exception in case future changes make it possible...	WITHOUT_CLASSIFICATION	0.9594710965754583	WITHOUT_CLASSIFICATION	0.04052890342454176	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.999970365990059	WITHOUT_CLASSIFICATION	2.9634009941010147E-5	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999964810102284	WITHOUT_CLASSIFICATION	3.518989771549866E-6	DEFECT
// reserve space for the primary domain axis...	WITHOUT_CLASSIFICATION	0.9999967011821254	WITHOUT_CLASSIFICATION	3.29881787467674E-6	DEFECT
// reserve space for any domain axes...	WITHOUT_CLASSIFICATION	0.9999738719868235	WITHOUT_CLASSIFICATION	2.6128013176463844E-5	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999894985787352	WITHOUT_CLASSIFICATION	1.0501421264772653E-5	DEFECT
// reserve space for the range axes (if any)...	WITHOUT_CLASSIFICATION	0.9999715822953765	WITHOUT_CLASSIFICATION	2.841770462342366E-5	DEFECT
// if the incoming state is null, no information will be passed // back to the caller - but we create a temporary state to record // the plot area, since that is used later by the axes	WITHOUT_CLASSIFICATION	0.9999997931223755	WITHOUT_CLASSIFICATION	2.0687762457502787E-7	DEFECT
// if there is a renderer, it draws the background, otherwise use the // default background...	WITHOUT_CLASSIFICATION	0.9999966887225279	WITHOUT_CLASSIFICATION	3.3112774720296474E-6	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.9990726298422721	WITHOUT_CLASSIFICATION	9.273701577278392E-4	DEFECT
// specify the anchor X and Y coordinates in Java2D space, for the // cases where these are not updated during rendering (i.e. no lock // on data)	WITHOUT_CLASSIFICATION	0.9999972448517538	WITHOUT_CLASSIFICATION	2.7551482462590303E-6	DEFECT
// don't let anyone draw outside the data area	WITHOUT_CLASSIFICATION	0.9999982950348892	WITHOUT_CLASSIFICATION	1.7049651107997065E-6	DEFECT
// draw the markers...	WITHOUT_CLASSIFICATION	0.9999814475342943	WITHOUT_CLASSIFICATION	1.8552465705727238E-5	DEFECT
// now render data items...	WITHOUT_CLASSIFICATION	0.9999891463241712	WITHOUT_CLASSIFICATION	1.0853675828795017E-5	DEFECT
// set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999974870285627	WITHOUT_CLASSIFICATION	2.5129714373128147E-6	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.9999994907189418	WITHOUT_CLASSIFICATION	5.092810582790272E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999996784223691	WITHOUT_CLASSIFICATION	3.2157763085831445E-7	DEFECT
// draw the foreground markers...	WITHOUT_CLASSIFICATION	0.9999967275777305	WITHOUT_CLASSIFICATION	3.2724222694200182E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999967299757703	WITHOUT_CLASSIFICATION	3.270024229762371E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999967299757703	WITHOUT_CLASSIFICATION	3.270024229762371E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999967299757703	WITHOUT_CLASSIFICATION	3.270024229762371E-6	DEFECT
// draw the annotations (if any)...	WITHOUT_CLASSIFICATION	0.9999540491411559	WITHOUT_CLASSIFICATION	4.5950858844138696E-5	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.9999903302332314	WITHOUT_CLASSIFICATION	9.66976676856185E-6	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9999787636559824	WITHOUT_CLASSIFICATION	2.1236344017579995E-5	DEFECT
// draw an outline around the plot area...	WITHOUT_CLASSIFICATION	0.9999778208475706	WITHOUT_CLASSIFICATION	2.2179152429439993E-5	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9999615983150556	WITHOUT_CLASSIFICATION	3.8401684944422964E-5	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9999793689097852	WITHOUT_CLASSIFICATION	2.0631090214775584E-5	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.9999996241239616	WITHOUT_CLASSIFICATION	3.7587603835171156E-7	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.9999992980007496	WITHOUT_CLASSIFICATION	7.019992504074612E-7	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.9999966183373341	WITHOUT_CLASSIFICATION	3.3816626658922075E-6	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.999996276164186	WITHOUT_CLASSIFICATION	3.723835813967022E-6	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999454157060932	WITHOUT_CLASSIFICATION	5.458429390676384E-5	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999944970109494	WITHOUT_CLASSIFICATION	5.5029890506093525E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999998520906072	WITHOUT_CLASSIFICATION	1.4790939276186664E-7	DEFECT
// add the unique categories from this dataset	WITHOUT_CLASSIFICATION	0.9999968876601991	WITHOUT_CLASSIFICATION	3.1123398009659214E-6	DEFECT
// do nothing, because the plot is not pannable along the domain axes	WITHOUT_CLASSIFICATION	0.9999991463595497	WITHOUT_CLASSIFICATION	8.536404504017812E-7	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999602408829176	WITHOUT_CLASSIFICATION	3.975911708249309E-5	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.999999550631167	WITHOUT_CLASSIFICATION	4.493688330380549E-7	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9999996327452038	WITHOUT_CLASSIFICATION	3.6725479621827053E-7	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999999816215279	WITHOUT_CLASSIFICATION	1.8378472133730186E-8	DEFECT
// AxisLocation is immutable, so we can just copy the maps	WITHOUT_CLASSIFICATION	0.9999998524954136	WITHOUT_CLASSIFICATION	1.4750458633457204E-7	DEFECT
// not currently serialized	WITHOUT_CLASSIFICATION	0.9999834793784645	WITHOUT_CLASSIFICATION	1.652062153542663E-5	DEFECT
// some subclasses override this method completely, so don't put // anything here that *must* be done	WITHOUT_CLASSIFICATION	0.9999706342848933	WITHOUT_CLASSIFICATION	2.9365715106686473E-5	DEFECT
// provides a 'no action' default	WITHOUT_CLASSIFICATION	0.9999938692921008	WITHOUT_CLASSIFICATION	6.130707899161183E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999996784223691	WITHOUT_CLASSIFICATION	3.2157763085831445E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999835928527	WITHOUT_CLASSIFICATION	1.640714730056605E-8	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.999999734316514	WITHOUT_CLASSIFICATION	2.656834859687559E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999922598218433	WITHOUT_CLASSIFICATION	7.74017815668738E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999865657573871	WITHOUT_CLASSIFICATION	1.3434242612868232E-5	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999994200973793	WITHOUT_CLASSIFICATION	5.799026207088441E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999876203107507	WITHOUT_CLASSIFICATION	1.237968924937476E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999876203107507	WITHOUT_CLASSIFICATION	1.237968924937476E-5	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999940279496967	WITHOUT_CLASSIFICATION	5.9720503033467175E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.999999958605061	WITHOUT_CLASSIFICATION	4.139493899320624E-8	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9995978123390639	WITHOUT_CLASSIFICATION	4.0218766093623394E-4	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999926610265	WITHOUT_CLASSIFICATION	7.338973553321994E-9	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999944970109494	WITHOUT_CLASSIFICATION	5.5029890506093525E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999998520906072	WITHOUT_CLASSIFICATION	1.4790939276186664E-7	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999987360324468	WITHOUT_CLASSIFICATION	1.2639675531683953E-6	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9999113489052363	WITHOUT_CLASSIFICATION	8.865109476371086E-5	DEFECT
// define the default locations for up to 8 axes...	WITHOUT_CLASSIFICATION	0.9999997157894311	WITHOUT_CLASSIFICATION	2.842105688922705E-7	DEFECT
// normalize angle	WITHOUT_CLASSIFICATION	0.9999974871062445	WITHOUT_CLASSIFICATION	2.5128937555692494E-6	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9999940377037253	WITHOUT_CLASSIFICATION	5.962296274642292E-6	DEFECT
// now for each dataset, get the renderer and the appropriate axis // and render the dataset...	WITHOUT_CLASSIFICATION	0.999992731518231	WITHOUT_CLASSIFICATION	7.2684817690091575E-6	DEFECT
// now get the data and plot it (the visual representation will depend // on the m_Renderer that has been set)...	WITHOUT_CLASSIFICATION	0.9999984709051857	WITHOUT_CLASSIFICATION	1.5290948143875209E-6	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999814299468712	WITHOUT_CLASSIFICATION	1.85700531287673E-5	DEFECT
// draw the radius grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999427221630467	WITHOUT_CLASSIFICATION	5.727783695327951E-5	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9999887201311568	WITHOUT_CLASSIFICATION	1.127986884312656E-5	DEFECT
// square	WITHOUT_CLASSIFICATION	0.9999993179840805	WITHOUT_CLASSIFICATION	6.820159195270826E-7	DEFECT
// circle	WITHOUT_CLASSIFICATION	0.9999957417389292	WITHOUT_CLASSIFICATION	4.2582610707589915E-6	DEFECT
// up-pointing triangle	WITHOUT_CLASSIFICATION	0.999999115244442	WITHOUT_CLASSIFICATION	8.847555580804353E-7	DEFECT
// diamond	WITHOUT_CLASSIFICATION	0.9999559888190451	WITHOUT_CLASSIFICATION	4.401118095494341E-5	DEFECT
// horizontal rectangle	WITHOUT_CLASSIFICATION	0.99999764999027	WITHOUT_CLASSIFICATION	2.35000972999751E-6	DEFECT
// down-pointing triangle	WITHOUT_CLASSIFICATION	0.9999978035911412	WITHOUT_CLASSIFICATION	2.1964088588137628E-6	DEFECT
// horizontal ellipse	WITHOUT_CLASSIFICATION	0.9999996565989798	WITHOUT_CLASSIFICATION	3.4340102022984314E-7	DEFECT
// right-pointing triangle	WITHOUT_CLASSIFICATION	0.9999986588729821	WITHOUT_CLASSIFICATION	1.3411270178723292E-6	DEFECT
// vertical rectangle	WITHOUT_CLASSIFICATION	0.9999962012542863	WITHOUT_CLASSIFICATION	3.7987457135628914E-6	DEFECT
// left-pointing triangle	WITHOUT_CLASSIFICATION	0.9999973732981347	WITHOUT_CLASSIFICATION	2.6267018653411947E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999996784223691	WITHOUT_CLASSIFICATION	3.2157763085831445E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999968881564115	WITHOUT_CLASSIFICATION	3.111843588425366E-6	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999998117990273	WITHOUT_CLASSIFICATION	1.8820097263259714E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.999999918544338	WITHOUT_CLASSIFICATION	8.145566195792072E-8	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999999995782627	WITHOUT_CLASSIFICATION	4.2173725693070454E-10	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999977021583449	WITHOUT_CLASSIFICATION	2.297841654933306E-6	DEFECT
//// SERIES PAINT /////////////////////////	WITHOUT_CLASSIFICATION	0.9999926957446629	WITHOUT_CLASSIFICATION	7.304255337085846E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999996531151347	WITHOUT_CLASSIFICATION	3.46884865345931E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999977021583449	WITHOUT_CLASSIFICATION	2.297841654933306E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999977021583449	WITHOUT_CLASSIFICATION	2.297841654933306E-6	DEFECT
//// SERIES OUTLINE PAINT ////////////////////////////	WITHOUT_CLASSIFICATION	0.9999934373277372	WITHOUT_CLASSIFICATION	6.5626722627975665E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999996531151347	WITHOUT_CLASSIFICATION	3.46884865345931E-7	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999996531151347	WITHOUT_CLASSIFICATION	3.46884865345931E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999996784223691	WITHOUT_CLASSIFICATION	3.2157763085831445E-7	DEFECT
// ensure we have a maximum value to use on the axes	WITHOUT_CLASSIFICATION	0.9999999626011565	WITHOUT_CLASSIFICATION	3.7398843469236535E-8	DEFECT
//// SERIES OUTLINE STROKE /////////////////////	WITHOUT_CLASSIFICATION	0.9999949933752714	WITHOUT_CLASSIFICATION	5.0066247286421115E-6	DEFECT
// Next, setup the plot area	WITHOUT_CLASSIFICATION	0.999999896937074	WITHOUT_CLASSIFICATION	1.0306292594772458E-7	DEFECT
// make the chart area a square	WITHOUT_CLASSIFICATION	0.9999999260833725	WITHOUT_CLASSIFICATION	7.391662747858694E-8	DEFECT
// draw the axis and category label	WITHOUT_CLASSIFICATION	0.9999949850779072	WITHOUT_CLASSIFICATION	5.014922092898761E-6	DEFECT
// 1 = end of axis	WITHOUT_CLASSIFICATION	0.9999976642490226	WITHOUT_CLASSIFICATION	2.3357509773974898E-6	DEFECT
// Now actually plot each of the series polygons..	WITHOUT_CLASSIFICATION	0.9999999517432927	WITHOUT_CLASSIFICATION	4.825670729531816E-8	DEFECT
// plot the data...	WITHOUT_CLASSIFICATION	0.9999956485728297	WITHOUT_CLASSIFICATION	4.35142717017904E-6	DEFECT
// draw the polygon series...	WITHOUT_CLASSIFICATION	0.9999927179947381	WITHOUT_CLASSIFICATION	7.282005261877454E-6	DEFECT
// Finds our starting angle from the centre for this axis	WITHOUT_CLASSIFICATION	0.9999990016383967	WITHOUT_CLASSIFICATION	9.983616032545726E-7	DEFECT
// The following angle calc will ensure there isn't a top // vertical axis - this may be useful if you don't want any // given criteria to 'appear' move important than the // others.. //  + (getDirection().getFactor() //        * (cat + 0.5) * 360 / catCount);	WITHOUT_CLASSIFICATION	0.9990130326536951	WITHOUT_CLASSIFICATION	9.869673463049307E-4	DEFECT
// find the point at the appropriate distance end point // along the axis/angle identified above and add it to the // polygon	WITHOUT_CLASSIFICATION	0.999997199185003	WITHOUT_CLASSIFICATION	2.8008149971125055E-6	DEFECT
// put an elipse at the point being plotted..	WITHOUT_CLASSIFICATION	0.9999987924754776	WITHOUT_CLASSIFICATION	1.2075245223383917E-6	DEFECT
// Plot the polygon	WITHOUT_CLASSIFICATION	0.9999936766197115	WITHOUT_CLASSIFICATION	6.323380288561088E-6	DEFECT
// set the anchor value for the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999996286104276	WITHOUT_CLASSIFICATION	3.713895724460676E-7	DEFECT
/* shapeFilled=*/	WITHOUT_CLASSIFICATION	0.9999824036554888	WITHOUT_CLASSIFICATION	1.7596344511100517E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999996784223691	WITHOUT_CLASSIFICATION	3.2157763085831445E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999968881564115	WITHOUT_CLASSIFICATION	3.111843588425366E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999835928527	WITHOUT_CLASSIFICATION	1.640714730056605E-8	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999957753431631	WITHOUT_CLASSIFICATION	4.224656836852822E-6	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.999999734316514	WITHOUT_CLASSIFICATION	2.656834859687559E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999922598218433	WITHOUT_CLASSIFICATION	7.74017815668738E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999865657573871	WITHOUT_CLASSIFICATION	1.3434242612868232E-5	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999965607137087	WITHOUT_CLASSIFICATION	3.4392862913730856E-6	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999982900069222	WITHOUT_CLASSIFICATION	1.7099930777848287E-6	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999994200973793	WITHOUT_CLASSIFICATION	5.799026207088441E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999876203107507	WITHOUT_CLASSIFICATION	1.237968924937476E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999876203107507	WITHOUT_CLASSIFICATION	1.237968924937476E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999876203107507	WITHOUT_CLASSIFICATION	1.237968924937476E-5	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.999999958605061	WITHOUT_CLASSIFICATION	4.139493899320624E-8	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.999999958605061	WITHOUT_CLASSIFICATION	4.139493899320624E-8	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9995978123390639	WITHOUT_CLASSIFICATION	4.0218766093623394E-4	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999964810102284	WITHOUT_CLASSIFICATION	3.518989771549866E-6	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999894985787352	WITHOUT_CLASSIFICATION	1.0501421264772653E-5	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9999940377037253	WITHOUT_CLASSIFICATION	5.962296274642292E-6	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999997926721852	WITHOUT_CLASSIFICATION	2.0732781488999536E-7	DEFECT
// Lastly, fill the web polygon if this is required	WITHOUT_CLASSIFICATION	0.9999267441236689	WITHOUT_CLASSIFICATION	7.325587633109286E-5	DEFECT
// if series are in rows, then the categories are the column keys	WITHOUT_CLASSIFICATION	0.9999998363089628	WITHOUT_CLASSIFICATION	1.6369103718647844E-7	DEFECT
// if series are in columns, then the categories are the row keys	WITHOUT_CLASSIFICATION	0.99999984704071	WITHOUT_CLASSIFICATION	1.5295928999575658E-7	DEFECT
//          negatives = true;	WITHOUT_CLASSIFICATION	0.9999979622262593	WITHOUT_CLASSIFICATION	2.0377737407451677E-6	DEFECT
//  value = Math.pow(10,value);	WITHOUT_CLASSIFICATION	0.9999968876742491	WITHOUT_CLASSIFICATION	3.112325750889725E-6	DEFECT
//  izV = steps*numSteps*(int)((value/minZ)/(maxZlog-minZlog)) + 2;	WITHOUT_CLASSIFICATION	0.99999967541878	WITHOUT_CLASSIFICATION	3.2458121994325927E-7	DEFECT
// super.setSeriesPaint(series, paint);	WITHOUT_CLASSIFICATION	0.9999999437736142	WITHOUT_CLASSIFICATION	5.622638580827116E-8	DEFECT
/// Squares	WITHOUT_CLASSIFICATION	0.9999991587241565	WITHOUT_CLASSIFICATION	8.412758435723438E-7	DEFECT
/// Draw N, S, E, W	WITHOUT_CLASSIFICATION	0.9999967979376596	WITHOUT_CLASSIFICATION	3.2020623402940437E-6	DEFECT
// no zooming possible	WITHOUT_CLASSIFICATION	0.9999977795840851	WITHOUT_CLASSIFICATION	2.220415914803589E-6	DEFECT
// clone share data sets => add the clone as listener to the dataset	WITHOUT_CLASSIFICATION	0.9999999872049317	WITHOUT_CLASSIFICATION	1.2795068386050893E-8	DEFECT
// only relevant when this is a subplot	WITHOUT_CLASSIFICATION	0.9999888405914028	WITHOUT_CLASSIFICATION	1.1159408597258805E-5	DEFECT
// allocate storage for datasets, axes and renderers (all optional)	WITHOUT_CLASSIFICATION	0.9999999166784883	WITHOUT_CLASSIFICATION	8.33215116291728E-8	DEFECT
// reserve space for the domain axes...	WITHOUT_CLASSIFICATION	0.99999766720557	WITHOUT_CLASSIFICATION	2.3327944299301908E-6	DEFECT
// reserve space for the range axes...	WITHOUT_CLASSIFICATION	0.9999930805352324	WITHOUT_CLASSIFICATION	6.919464767564996E-6	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999926610265	WITHOUT_CLASSIFICATION	7.338973553321994E-9	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999926610265	WITHOUT_CLASSIFICATION	7.338973553321994E-9	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.9999903302332314	WITHOUT_CLASSIFICATION	9.66976676856185E-6	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9999787636559824	WITHOUT_CLASSIFICATION	2.1236344017579995E-5	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9999615983150556	WITHOUT_CLASSIFICATION	3.8401684944422964E-5	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9999793689097852	WITHOUT_CLASSIFICATION	2.0631090214775584E-5	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.9999996241239616	WITHOUT_CLASSIFICATION	3.7587603835171156E-7	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.9999992980007496	WITHOUT_CLASSIFICATION	7.019992504074612E-7	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.9999966183373341	WITHOUT_CLASSIFICATION	3.3816626658922075E-6	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.999996276164186	WITHOUT_CLASSIFICATION	3.723835813967022E-6	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999454157060932	WITHOUT_CLASSIFICATION	5.458429390676384E-5	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999944970109494	WITHOUT_CLASSIFICATION	5.5029890506093525E-6	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999944970109494	WITHOUT_CLASSIFICATION	5.5029890506093525E-6	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999814299468712	WITHOUT_CLASSIFICATION	1.85700531287673E-5	DEFECT
// draw the markers that are associated with a specific dataset...	WITHOUT_CLASSIFICATION	0.9999575863724313	WITHOUT_CLASSIFICATION	4.24136275687335E-5	DEFECT
// now draw annotations and render data items...	WITHOUT_CLASSIFICATION	0.9999843766130831	WITHOUT_CLASSIFICATION	1.5623386916925998E-5	DEFECT
// draw background annotations	WITHOUT_CLASSIFICATION	0.999995008339224	WITHOUT_CLASSIFICATION	4.9916607760726644E-6	DEFECT
// render data items...	WITHOUT_CLASSIFICATION	0.9999788690316346	WITHOUT_CLASSIFICATION	2.1130968365372406E-5	DEFECT
// draw foreground annotations	WITHOUT_CLASSIFICATION	0.9999979087157985	WITHOUT_CLASSIFICATION	2.091284201406808E-6	DEFECT
//  0 | 1 //  --+-- //  2 | 3	WITHOUT_CLASSIFICATION	0.9999876071058122	WITHOUT_CLASSIFICATION	1.2392894187698621E-5	DEFECT
// we can't draw quadrants without a valid x-axis	WITHOUT_CLASSIFICATION	0.9999974643341136	WITHOUT_CLASSIFICATION	2.535665886348541E-6	DEFECT
// we can't draw quadrants without a valid y-axis	WITHOUT_CLASSIFICATION	0.9999968265397484	WITHOUT_CLASSIFICATION	3.1734602515256455E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999991793099675	WITHOUT_CLASSIFICATION	8.206900325550038E-7	DEFECT
// can't render anything without axes	WITHOUT_CLASSIFICATION	0.9995525769470578	WITHOUT_CLASSIFICATION	4.474230529421304E-4	DEFECT
// no default renderer available	WITHOUT_CLASSIFICATION	0.9999983073573622	WITHOUT_CLASSIFICATION	1.6926426378944084E-6	DEFECT
//render series in reverse order	WITHOUT_CLASSIFICATION	0.9999953511658929	WITHOUT_CLASSIFICATION	4.648834107125582E-6	DEFECT
//render series in forward order	WITHOUT_CLASSIFICATION	0.9999918180269899	WITHOUT_CLASSIFICATION	8.181973010102222E-6	DEFECT
// use the TextTitle class because it is a concrete subclass	WITHOUT_CLASSIFICATION	0.9999979231464657	WITHOUT_CLASSIFICATION	2.0768535342769973E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999986252194519	WITHOUT_CLASSIFICATION	1.374780548079594E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999992017311944	WITHOUT_CLASSIFICATION	7.982688057344483E-7	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999940279496967	WITHOUT_CLASSIFICATION	5.9720503033467175E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999940279496967	WITHOUT_CLASSIFICATION	5.9720503033467175E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999998520906072	WITHOUT_CLASSIFICATION	1.4790939276186664E-7	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.999999550631167	WITHOUT_CLASSIFICATION	4.493688330380549E-7	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.999999550631167	WITHOUT_CLASSIFICATION	4.493688330380549E-7	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9999996327452038	WITHOUT_CLASSIFICATION	3.6725479621827053E-7	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999999816215279	WITHOUT_CLASSIFICATION	1.8378472133730186E-8	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999999816215279	WITHOUT_CLASSIFICATION	1.8378472133730186E-8	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9999940377037253	WITHOUT_CLASSIFICATION	5.962296274642292E-6	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9999887201311568	WITHOUT_CLASSIFICATION	1.127986884312656E-5	DEFECT
// if the event was caused by a change to series visibility, then // the axis ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999993684009802	WITHOUT_CLASSIFICATION	6.315990198400034E-7	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.999967281944866	WITHOUT_CLASSIFICATION	3.271805513413203E-5	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.999967281944866	WITHOUT_CLASSIFICATION	3.271805513413203E-5	DEFECT
// set the anchor value for the vertical axis...	WITHOUT_CLASSIFICATION	0.9999995575739119	WITHOUT_CLASSIFICATION	4.4242608809017737E-7	DEFECT
// grab the plot's annotations	WITHOUT_CLASSIFICATION	0.9999993347803046	WITHOUT_CLASSIFICATION	6.652196954824092E-7	DEFECT
// is it a domain axis?	WITHOUT_CLASSIFICATION	0.9998163084169853	WITHOUT_CLASSIFICATION	1.836915830145884E-4	DEFECT
// or is it a range axis?	WITHOUT_CLASSIFICATION	0.9999528773671565	WITHOUT_CLASSIFICATION	4.712263284345702E-5	DEFECT
// if the axes use a linear scale, you can uncomment the code below and // switch to the alternative transX/transY calculation inside the loop // that follows - it is a little bit faster then. // // int xx = (int) dataArea.getMinX(); // int ww = (int) dataArea.getWidth(); // int yy = (int) dataArea.getMaxY(); // int hh = (int) dataArea.getHeight(); // double domainMin = this.domainAxis.getLowerBound(); // double domainLength = this.domainAxis.getUpperBound() - domainMin; // double rangeMin = this.rangeAxis.getLowerBound(); // double rangeLength = this.rangeAxis.getUpperBound() - rangeMin;	WITHOUT_CLASSIFICATION	0.999978092277743	WITHOUT_CLASSIFICATION	2.1907722256925988E-5	DEFECT
// register the plot as a listener with its axes, datasets, and // renderers...	WITHOUT_CLASSIFICATION	0.9999953823104942	WITHOUT_CLASSIFICATION	4.617689505840621E-6	DEFECT
// perform the zoom on each domain axis	WITHOUT_CLASSIFICATION	0.9999998379178279	WITHOUT_CLASSIFICATION	1.6208217220375383E-7	DEFECT
// lineVisible	WITHOUT_CLASSIFICATION	0.9999879549453147	WITHOUT_CLASSIFICATION	1.2045054685404553E-5	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999968881564115	WITHOUT_CLASSIFICATION	3.111843588425366E-6	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.999999918544338	WITHOUT_CLASSIFICATION	8.145566195792072E-8	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999835928527	WITHOUT_CLASSIFICATION	1.640714730056605E-8	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999965607137087	WITHOUT_CLASSIFICATION	3.4392862913730856E-6	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.9999829098597842	WITHOUT_CLASSIFICATION	1.7090140215689154E-5	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999908086060183	WITHOUT_CLASSIFICATION	9.191393981645084E-6	DEFECT
// images considered equal only if they're the SAME object // TODO: is there a way to do a better test?	WITHOUT_CLASSIFICATION	0.6477983558607929	DEFECT	0.3522016441392072	WITHOUT_CLASSIFICATION
//int transX = (int) (xx + ww * (x - domainMin) / domainLength); //int transY = (int) (yy - hh * (y - rangeMin) / rangeLength);	WITHOUT_CLASSIFICATION	0.9999652943843654	WITHOUT_CLASSIFICATION	3.4705615634643105E-5	DEFECT
// if there is an existing dataset, remove the plot from the list // of change listeners...	WITHOUT_CLASSIFICATION	0.9999998062982686	WITHOUT_CLASSIFICATION	1.9370173139759753E-7	DEFECT
// plot is registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999993340488204	WITHOUT_CLASSIFICATION	6.65951179670651E-7	DEFECT
// adjust for padding...	WITHOUT_CLASSIFICATION	0.9999930826348126	WITHOUT_CLASSIFICATION	6.917365187500606E-6	DEFECT
// already calculated // already calculated	WITHOUT_CLASSIFICATION	0.9999984222141397	WITHOUT_CLASSIFICATION	1.5777858602282795E-6	DEFECT
// draw range indicators...	WITHOUT_CLASSIFICATION	0.999995597474393	WITHOUT_CLASSIFICATION	4.402525606927586E-6	DEFECT
// draw start of normal range	WITHOUT_CLASSIFICATION	0.999999934609993	WITHOUT_CLASSIFICATION	6.539000693613492E-8	DEFECT
// draw start of warning range	WITHOUT_CLASSIFICATION	0.9999995383406194	WITHOUT_CLASSIFICATION	4.6165938066540557E-7	DEFECT
// draw start of critical range	WITHOUT_CLASSIFICATION	0.9999999501851301	WITHOUT_CLASSIFICATION	4.981486987450396E-8	DEFECT
// draw the axis...	WITHOUT_CLASSIFICATION	0.999995682759842	WITHOUT_CLASSIFICATION	4.3172401580610475E-6	DEFECT
//cursor = midX - COLUMN_RADIUS - AXIS_GAP;	WITHOUT_CLASSIFICATION	0.9999985443324986	WITHOUT_CLASSIFICATION	1.4556675013795746E-6	DEFECT
// draw text value on screen	WITHOUT_CLASSIFICATION	0.9999990479216933	WITHOUT_CLASSIFICATION	9.520783067090818E-7	DEFECT
//  draw units indicator	WITHOUT_CLASSIFICATION	0.9999976800882797	WITHOUT_CLASSIFICATION	2.319911720308789E-6	DEFECT
// draw thermometer outline	WITHOUT_CLASSIFICATION	0.9999990145196944	WITHOUT_CLASSIFICATION	9.854803055863803E-7	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999980934922856	WITHOUT_CLASSIFICATION	1.9065077143982672E-6	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9999770504421749	WITHOUT_CLASSIFICATION	2.29495578251768E-5	DEFECT
// calculate the bounds of the template value	WITHOUT_CLASSIFICATION	0.9999987903001543	WITHOUT_CLASSIFICATION	1.2096998456517351E-6	DEFECT
// align this rectangle to the frameAnchor	WITHOUT_CLASSIFICATION	0.9999997342450215	WITHOUT_CLASSIFICATION	2.6575497847368487E-7	DEFECT
// add the insets	WITHOUT_CLASSIFICATION	0.9999939039960353	WITHOUT_CLASSIFICATION	6.096003964731593E-6	DEFECT
// draw the border	WITHOUT_CLASSIFICATION	0.9999991599545495	WITHOUT_CLASSIFICATION	8.400454504910187E-7	DEFECT
// now find the text anchor point	WITHOUT_CLASSIFICATION	0.9999998144534907	WITHOUT_CLASSIFICATION	1.855465092971784E-7	DEFECT
/* lineVisible= */	WITHOUT_CLASSIFICATION	0.9999471146323448	WITHOUT_CLASSIFICATION	5.288536765518E-5	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999835928527	WITHOUT_CLASSIFICATION	1.640714730056605E-8	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989849970972	WITHOUT_CLASSIFICATION	1.015002902854677E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999977021583449	WITHOUT_CLASSIFICATION	2.297841654933306E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999977021583449	WITHOUT_CLASSIFICATION	2.297841654933306E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999996531151347	WITHOUT_CLASSIFICATION	3.46884865345931E-7	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9999770504421749	WITHOUT_CLASSIFICATION	2.29495578251768E-5	DEFECT
// urlText	WITHOUT_CLASSIFICATION	0.9999983634590753	WITHOUT_CLASSIFICATION	1.6365409246538954E-6	DEFECT
// first, expand the viewing area into a drawing frame	WITHOUT_CLASSIFICATION	0.9999998795962559	WITHOUT_CLASSIFICATION	1.2040374407738268E-7	DEFECT
// draw the background if there is one...	WITHOUT_CLASSIFICATION	0.9999930640884982	WITHOUT_CLASSIFICATION	6.9359115018319685E-6	DEFECT
// draw the pointers	WITHOUT_CLASSIFICATION	0.9999997784743957	WITHOUT_CLASSIFICATION	2.2152560431854534E-7	DEFECT
// draw the cap if there is one...	WITHOUT_CLASSIFICATION	0.9999855679619549	WITHOUT_CLASSIFICATION	1.4432038044999278E-5	DEFECT
// now do the minor tick marks	WITHOUT_CLASSIFICATION	0.9999994346196539	WITHOUT_CLASSIFICATION	5.653803461070468E-7	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999953973125666	WITHOUT_CLASSIFICATION	4.602687433361793E-6	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999954608089529	WITHOUT_CLASSIFICATION	4.539191047096632E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999996850508817	WITHOUT_CLASSIFICATION	3.149491182441289E-7	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999972485343755	WITHOUT_CLASSIFICATION	2.751465624490453E-6	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.999993681804122	WITHOUT_CLASSIFICATION	6.3181958780252784E-6	DEFECT
// we don't clone the listeners	WITHOUT_CLASSIFICATION	0.9999994433005761	WITHOUT_CLASSIFICATION	5.566994239074735E-7	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999990623225349	WITHOUT_CLASSIFICATION	9.376774651270017E-7	DEFECT
// draw the outline of the filled polygon	WITHOUT_CLASSIFICATION	0.9999997910405771	WITHOUT_CLASSIFICATION	2.089594228105802E-7	DEFECT
// just the lines, no filling	WITHOUT_CLASSIFICATION	0.9999992448991347	WITHOUT_CLASSIFICATION	7.551008653218753E-7	DEFECT
// draw the item shapes	WITHOUT_CLASSIFICATION	0.9999957530471435	WITHOUT_CLASSIFICATION	4.246952856533692E-6	DEFECT
// SERIES VISIBLE (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999954348149427	WITHOUT_CLASSIFICATION	4.565185057292319E-6	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999977666402792	WITHOUT_CLASSIFICATION	2.2333597208266687E-6	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9999918251182934	WITHOUT_CLASSIFICATION	8.174881706609067E-6	DEFECT
//// FILL PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999425919451806	WITHOUT_CLASSIFICATION	5.7408054819285785E-5	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999998876696294	WITHOUT_CLASSIFICATION	1.1233037063223665E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999977021583449	WITHOUT_CLASSIFICATION	2.297841654933306E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999977021583449	WITHOUT_CLASSIFICATION	2.297841654933306E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999977021583449	WITHOUT_CLASSIFICATION	2.297841654933306E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999977021583449	WITHOUT_CLASSIFICATION	2.297841654933306E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999977021583449	WITHOUT_CLASSIFICATION	2.297841654933306E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999977021583449	WITHOUT_CLASSIFICATION	2.297841654933306E-6	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999997881910759	WITHOUT_CLASSIFICATION	2.1180892410260796E-7	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999998876696294	WITHOUT_CLASSIFICATION	1.1233037063223665E-7	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999998876696294	WITHOUT_CLASSIFICATION	1.1233037063223665E-7	DEFECT
// OUTLINE PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999970709395782	WITHOUT_CLASSIFICATION	2.9290604218393317E-6	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.9999855508629161	WITHOUT_CLASSIFICATION	1.4449137083920994E-5	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.9999958173338444	WITHOUT_CLASSIFICATION	4.18266615561332E-6	DEFECT
// otherwise look up the stroke table	WITHOUT_CLASSIFICATION	0.9999943676578222	WITHOUT_CLASSIFICATION	5.632342177726087E-6	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.9999799759215228	WITHOUT_CLASSIFICATION	2.002407847721548E-5	DEFECT
// otherwise look up the shape list	WITHOUT_CLASSIFICATION	0.9999995082141934	WITHOUT_CLASSIFICATION	4.917858066279315E-7	DEFECT
// ITEM LABEL VISIBILITY...	WITHOUT_CLASSIFICATION	0.9995737356609462	WITHOUT_CLASSIFICATION	4.2626433905384884E-4	DEFECT
// otherwise look up the boolean table	WITHOUT_CLASSIFICATION	0.9999996333894787	WITHOUT_CLASSIFICATION	3.6661052127363903E-7	DEFECT
// this should have been defined as a boolean primitive, because // allowing null values is a nuisance...but it is part of the final // API now, so we'll have to support it.	WITHOUT_CLASSIFICATION	0.9999967665798177	WITHOUT_CLASSIFICATION	3.2334201823318188E-6	DEFECT
//// ITEM LABEL FONT //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999830014826988	WITHOUT_CLASSIFICATION	1.699851730120722E-5	DEFECT
//// ITEM LABEL PAINT  ////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999858690461885	WITHOUT_CLASSIFICATION	1.4130953811505377E-5	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9998398320172824	WITHOUT_CLASSIFICATION	1.6016798271753266E-4	DEFECT
// otherwise look up the position table	WITHOUT_CLASSIFICATION	0.9999994457625891	WITHOUT_CLASSIFICATION	5.542374108474774E-7	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999145349226063	WITHOUT_CLASSIFICATION	8.546507739366256E-5	DEFECT
// otherwise look up the position list	WITHOUT_CLASSIFICATION	0.9999989272558417	WITHOUT_CLASSIFICATION	1.072744158299444E-6	DEFECT
// the commented out code would be better, but only if // RendererChangeEvent is immutable, which it isn't.  See if there is // a way to fix this...	WITHOUT_CLASSIFICATION	0.9842626329008745	WITHOUT_CLASSIFICATION	0.015737367099125606	DEFECT
// 'paint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999985420824844	WITHOUT_CLASSIFICATION	1.4579175156160642E-6	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999994103460125	WITHOUT_CLASSIFICATION	5.89653987478925E-7	DEFECT
// 'outlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999971304981219	WITHOUT_CLASSIFICATION	2.8695018780350325E-6	DEFECT
// 'baseOutlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999990616218019	WITHOUT_CLASSIFICATION	9.383781980021001E-7	DEFECT
// 'stroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999470624572734	WITHOUT_CLASSIFICATION	5.293754272667576E-5	DEFECT
// 'baseStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999320800284194	WITHOUT_CLASSIFICATION	6.7919971580582E-5	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999997881910759	WITHOUT_CLASSIFICATION	2.1180892410260796E-7	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999994103460125	WITHOUT_CLASSIFICATION	5.89653987478925E-7	DEFECT
// shapeList // baseShape	WITHOUT_CLASSIFICATION	0.9999993245744704	WITHOUT_CLASSIFICATION	6.754255295806801E-7	DEFECT
// 'outlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997621396218229	WITHOUT_CLASSIFICATION	2.378603781769988E-4	DEFECT
// 'baseOutlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999222031186638	WITHOUT_CLASSIFICATION	7.779688133616098E-5	DEFECT
// 'itemLabelsVisible' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999947092649621	WITHOUT_CLASSIFICATION	5.290735037938108E-6	DEFECT
// 'itemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999981173689004	WITHOUT_CLASSIFICATION	1.8826310995561388E-6	DEFECT
// 'baseItemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999994515609316	WITHOUT_CLASSIFICATION	5.484390683552293E-7	DEFECT
// 'itemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999989410376381	WITHOUT_CLASSIFICATION	1.058962361880722E-6	DEFECT
// 'baseItemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999996915083406	WITHOUT_CLASSIFICATION	3.084916595173469E-7	DEFECT
// 'postiveItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999996702893799	WITHOUT_CLASSIFICATION	3.297106201744394E-7	DEFECT
// 'baseItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999995645935889	WITHOUT_CLASSIFICATION	4.3540641107844987E-7	DEFECT
// 'negativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999991202273639	WITHOUT_CLASSIFICATION	8.797726360916283E-7	DEFECT
// 'baseNegativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998620464917	WITHOUT_CLASSIFICATION	1.379535082001449E-7	DEFECT
// listeners are not restored automatically, but storage must be // provided...	WITHOUT_CLASSIFICATION	0.9979933721563318	WITHOUT_CLASSIFICATION	0.0020066278436681453	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999898706902026	WITHOUT_CLASSIFICATION	1.0129309797427633E-5	DEFECT
// The following alternative is only supported in JDK 1.4 - we support // JDK 1.3.1 onwards // setItemLabelsVisible(Boolean.valueOf(visible));	WITHOUT_CLASSIFICATION	0.9995901850350621	WITHOUT_CLASSIFICATION	4.0981496493784674E-4	DEFECT
//System.err.print(" creating new outlier list ");	WITHOUT_CLASSIFICATION	0.9999999815541968	WITHOUT_CLASSIFICATION	1.8445803143233882E-8	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999860771741927	WITHOUT_CLASSIFICATION	1.3922825807204967E-5	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999930123816944	WITHOUT_CLASSIFICATION	6.98761830554918E-6	DEFECT
// handle value outside bounds...	WITHOUT_CLASSIFICATION	0.999998991782494	WITHOUT_CLASSIFICATION	1.0082175060431605E-6	DEFECT
// handle special case where value is less that item zero	WITHOUT_CLASSIFICATION	0.9999987567234266	WITHOUT_CLASSIFICATION	1.243276573425179E-6	DEFECT
// special case where the lowest x-value is >= xLow	WITHOUT_CLASSIFICATION	0.9999998319006219	WITHOUT_CLASSIFICATION	1.6809937805243237E-7	DEFECT
// special case where the highest x-value is < xLow	WITHOUT_CLASSIFICATION	0.9999992026688281	WITHOUT_CLASSIFICATION	7.973311717795397E-7	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.9999552982906358	WITHOUT_CLASSIFICATION	4.470170936425683E-5	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.9999552982906358	WITHOUT_CLASSIFICATION	4.470170936425683E-5	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.9999999080374947	WITHOUT_CLASSIFICATION	9.196250522061981E-8	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.9999999080374947	WITHOUT_CLASSIFICATION	9.196250522061981E-8	DEFECT
// in this case, every color has a unique value	WITHOUT_CLASSIFICATION	0.9997980991855059	WITHOUT_CLASSIFICATION	2.0190081449406229E-4	DEFECT
// in this case, every color has a range of values	WITHOUT_CLASSIFICATION	0.9999459252548346	WITHOUT_CLASSIFICATION	5.4074745165329206E-5	DEFECT
// end class wafermaprenderer	WITHOUT_CLASSIFICATION	0.9999534280141227	WITHOUT_CLASSIFICATION	4.657198587733319E-5	DEFECT
// if there is no plot, there is no dataset to access...	WITHOUT_CLASSIFICATION	0.9999997318673851	WITHOUT_CLASSIFICATION	2.6813261491439823E-7	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any initial values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.9991184110667983	WITHOUT_CLASSIFICATION	8.815889332017258E-4	DEFECT
// when the x-values are descending, the upper bound is found by // comparing against xLow	WITHOUT_CLASSIFICATION	0.9999978818951475	WITHOUT_CLASSIFICATION	2.1181048525214423E-6	DEFECT
// more values than paints so map // multiple values to the same color	WITHOUT_CLASSIFICATION	0.99999968386413	WITHOUT_CLASSIFICATION	3.16135870011736E-7	DEFECT
// end foreach map entry // end else	WITHOUT_CLASSIFICATION	0.9999998940939036	WITHOUT_CLASSIFICATION	1.059060965041551E-7	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999577775114	WITHOUT_CLASSIFICATION	4.222248864067035E-8	DEFECT
// FIXME: calculate xxLeft and xxRight	WITHOUT_CLASSIFICATION	0.9176430926892557	DEFECT	0.08235690731074428	WITHOUT_CLASSIFICATION
// handle positive value	WITHOUT_CLASSIFICATION	0.9999981382817045	WITHOUT_CLASSIFICATION	1.8617182956412542E-6	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.99999653577852	WITHOUT_CLASSIFICATION	3.4642214800504787E-6	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.99999653577852	WITHOUT_CLASSIFICATION	3.4642214800504787E-6	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.999987696222604	WITHOUT_CLASSIFICATION	1.2303777396011157E-5	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.999987696222604	WITHOUT_CLASSIFICATION	1.2303777396011157E-5	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999972883549177	WITHOUT_CLASSIFICATION	2.7116450822776145E-6	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999689770546323	WITHOUT_CLASSIFICATION	3.102294536771815E-5	DEFECT
// '+' because v is negative	WITHOUT_CLASSIFICATION	0.9999984144198173	WITHOUT_CLASSIFICATION	1.5855801827874558E-6	DEFECT
// handle rendering separately for the two plot orientations...	WITHOUT_CLASSIFICATION	0.9999837710161812	WITHOUT_CLASSIFICATION	1.6228983818883976E-5	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.9999993950161365	WITHOUT_CLASSIFICATION	6.049838633975427E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999811805563406	WITHOUT_CLASSIFICATION	1.8819443659465954E-5	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.9999753856690224	WITHOUT_CLASSIFICATION	2.4614330977639916E-5	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999057286608172	WITHOUT_CLASSIFICATION	9.427133918277066E-5	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999998876696294	WITHOUT_CLASSIFICATION	1.1233037063223665E-7	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9999990414516445	WITHOUT_CLASSIFICATION	9.58548355476276E-7	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.9999993950161365	WITHOUT_CLASSIFICATION	6.049838633975427E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999811805563406	WITHOUT_CLASSIFICATION	1.8819443659465954E-5	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.9999854537935801	WITHOUT_CLASSIFICATION	1.4546206420068463E-5	DEFECT
// preserves old behaviour	WITHOUT_CLASSIFICATION	0.9999993942434161	WITHOUT_CLASSIFICATION	6.057565839194604E-7	DEFECT
// contained titles	WITHOUT_CLASSIFICATION	0.9999984363169612	WITHOUT_CLASSIFICATION	1.563683038869035E-6	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999057286608172	WITHOUT_CLASSIFICATION	9.427133918277066E-5	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9999995508914861	WITHOUT_CLASSIFICATION	4.491085139690363E-7	DEFECT
// delegate	WITHOUT_CLASSIFICATION	0.999998889439117	WITHOUT_CLASSIFICATION	1.1105608829648628E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9994698105909672	WITHOUT_CLASSIFICATION	5.301894090328943E-4	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9994698105909672	WITHOUT_CLASSIFICATION	5.301894090328943E-4	DEFECT
// do nothing if both the line and shape are not visible	WITHOUT_CLASSIFICATION	0.9999611137472585	WITHOUT_CLASSIFICATION	3.88862527414001E-5	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.9997251340041499	WITHOUT_CLASSIFICATION	2.748659958501882E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999759638519236	WITHOUT_CLASSIFICATION	2.403614807644051E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999759638519236	WITHOUT_CLASSIFICATION	2.403614807644051E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999955646125551	WITHOUT_CLASSIFICATION	4.4353874448744824E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999860758714254	WITHOUT_CLASSIFICATION	1.3924128574517436E-5	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999998829771772	WITHOUT_CLASSIFICATION	1.1702282283631011E-7	DEFECT
// set the default item label positions	WITHOUT_CLASSIFICATION	0.9999998022343816	WITHOUT_CLASSIFICATION	1.9776561840033894E-7	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.9999406448590316	WITHOUT_CLASSIFICATION	5.935514096844139E-5	DEFECT
// highlight the background corners...	WITHOUT_CLASSIFICATION	0.9999788731087774	WITHOUT_CLASSIFICATION	2.11268912226239E-5	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.999995259556046	WITHOUT_CLASSIFICATION	4.740443954126213E-6	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999986546014507	WITHOUT_CLASSIFICATION	1.3453985492976757E-6	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999898706902026	WITHOUT_CLASSIFICATION	1.0129309797427633E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999811805563406	WITHOUT_CLASSIFICATION	1.8819443659465954E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999560672694283	WITHOUT_CLASSIFICATION	4.393273057166112E-5	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.9999952395488447	WITHOUT_CLASSIFICATION	4.7604511553627575E-6	DEFECT
// check the value we are plotting...	WITHOUT_CLASSIFICATION	0.9999988181317768	WITHOUT_CLASSIFICATION	1.1818682231268575E-6	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9989452648912077	WITHOUT_CLASSIFICATION	0.0010547351087922935	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999778984098202	WITHOUT_CLASSIFICATION	2.2101590179845672E-5	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999598025128008	WITHOUT_CLASSIFICATION	4.01974871991009E-5	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.999999334681797	WITHOUT_CLASSIFICATION	6.653182030714683E-7	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.999999334681797	WITHOUT_CLASSIFICATION	6.653182030714683E-7	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999997417057311	WITHOUT_CLASSIFICATION	2.582942688108161E-7	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999997417057311	WITHOUT_CLASSIFICATION	2.582942688108161E-7	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9999306262758566	WITHOUT_CLASSIFICATION	6.937372414336418E-5	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999890526828388	WITHOUT_CLASSIFICATION	1.0947317161310509E-5	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999999024792785	WITHOUT_CLASSIFICATION	9.752072154343143E-8	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999999707866032	WITHOUT_CLASSIFICATION	2.921339682726983E-8	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.999986262177246	WITHOUT_CLASSIFICATION	1.3737822753978688E-5	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999997507428867	WITHOUT_CLASSIFICATION	2.4925711335446127E-7	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999930109520794	WITHOUT_CLASSIFICATION	6.989047920633619E-6	DEFECT
// defensive check	WITHOUT_CLASSIFICATION	0.9999985743851171	WITHOUT_CLASSIFICATION	1.4256148829621296E-6	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9997625524877549	WITHOUT_CLASSIFICATION	2.3744751224506918E-4	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9992532140242317	WITHOUT_CLASSIFICATION	7.467859757682321E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999750882890384	WITHOUT_CLASSIFICATION	2.4911710961637347E-5	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9997143463691466	WITHOUT_CLASSIFICATION	2.856536308535041E-4	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9997625524877549	WITHOUT_CLASSIFICATION	2.3744751224506918E-4	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9992532140242317	WITHOUT_CLASSIFICATION	7.467859757682321E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999750882890384	WITHOUT_CLASSIFICATION	2.4911710961637347E-5	DEFECT
// let the superclass handle it...	WITHOUT_CLASSIFICATION	0.9999432591664484	WITHOUT_CLASSIFICATION	5.674083355153255E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9991103014333899	WITHOUT_CLASSIFICATION	8.896985666101911E-4	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9991103014333899	WITHOUT_CLASSIFICATION	8.896985666101911E-4	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999560672694283	WITHOUT_CLASSIFICATION	4.393273057166112E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999560672694283	WITHOUT_CLASSIFICATION	4.393273057166112E-5	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999680320575713	WITHOUT_CLASSIFICATION	3.196794242862189E-5	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999680320575713	WITHOUT_CLASSIFICATION	3.196794242862189E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999645764721726	WITHOUT_CLASSIFICATION	3.542352782739361E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999645764721726	WITHOUT_CLASSIFICATION	3.542352782739361E-5	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.9999998229677987	WITHOUT_CLASSIFICATION	1.7703220126489193E-7	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.9999998229677987	WITHOUT_CLASSIFICATION	1.7703220126489193E-7	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999991415629085	WITHOUT_CLASSIFICATION	8.584370914732765E-7	DEFECT
// value 0	WITHOUT_CLASSIFICATION	0.9999918556976843	WITHOUT_CLASSIFICATION	8.144302315700103E-6	DEFECT
// get the clipping values...	WITHOUT_CLASSIFICATION	0.9999971290629964	WITHOUT_CLASSIFICATION	2.8709370035288903E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999998829771772	WITHOUT_CLASSIFICATION	1.1702282283631011E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999998829771772	WITHOUT_CLASSIFICATION	1.1702282283631011E-7	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999778984098202	WITHOUT_CLASSIFICATION	2.2101590179845672E-5	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999750882890384	WITHOUT_CLASSIFICATION	2.4911710961637347E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9991103014333899	WITHOUT_CLASSIFICATION	8.896985666101911E-4	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9991103014333899	WITHOUT_CLASSIFICATION	8.896985666101911E-4	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999560672694283	WITHOUT_CLASSIFICATION	4.393273057166112E-5	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999680320575713	WITHOUT_CLASSIFICATION	3.196794242862189E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999645764721726	WITHOUT_CLASSIFICATION	3.542352782739361E-5	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9999998861406656	WITHOUT_CLASSIFICATION	1.1385933438791223E-7	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.9999909172972211	WITHOUT_CLASSIFICATION	9.082702778871173E-6	DEFECT
// DRAW THE BARS...	WITHOUT_CLASSIFICATION	0.9994980149353314	WITHOUT_CLASSIFICATION	5.019850646685544E-4	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999820737045402	WITHOUT_CLASSIFICATION	1.7926295459847405E-5	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999784005423756	WITHOUT_CLASSIFICATION	2.159945762434582E-5	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999831902179976	WITHOUT_CLASSIFICATION	1.6809782002369016E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997130159404326	WITHOUT_CLASSIFICATION	2.8698405956745254E-4	DEFECT
// X	WITHOUT_CLASSIFICATION	0.9998898504093346	WITHOUT_CLASSIFICATION	1.1014959066529679E-4	DEFECT
// Y	WITHOUT_CLASSIFICATION	0.999981420732553	WITHOUT_CLASSIFICATION	1.857926744695782E-5	DEFECT
// subtitle 1 is the legend	WITHOUT_CLASSIFICATION	0.9999361909306973	WITHOUT_CLASSIFICATION	6.380906930266808E-5	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999689770546323	WITHOUT_CLASSIFICATION	3.102294536771815E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999778984098202	WITHOUT_CLASSIFICATION	2.2101590179845672E-5	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9997625524877549	WITHOUT_CLASSIFICATION	2.3744751224506918E-4	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9992532140242317	WITHOUT_CLASSIFICATION	7.467859757682321E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999750882890384	WITHOUT_CLASSIFICATION	2.4911710961637347E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9991103014333899	WITHOUT_CLASSIFICATION	8.896985666101911E-4	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999680320575713	WITHOUT_CLASSIFICATION	3.196794242862189E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999645764721726	WITHOUT_CLASSIFICATION	3.542352782739361E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999645764721726	WITHOUT_CLASSIFICATION	3.542352782739361E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999820737045402	WITHOUT_CLASSIFICATION	1.7926295459847405E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999820737045402	WITHOUT_CLASSIFICATION	1.7926295459847405E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997130159404326	WITHOUT_CLASSIFICATION	2.8698405956745254E-4	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997130159404326	WITHOUT_CLASSIFICATION	2.8698405956745254E-4	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.999999983005705	WITHOUT_CLASSIFICATION	1.6994294976871413E-8	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9998676132570128	WITHOUT_CLASSIFICATION	1.323867429872398E-4	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9997306676281795	WITHOUT_CLASSIFICATION	2.693323718203985E-4	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.9999988329924518	WITHOUT_CLASSIFICATION	1.1670075482229427E-6	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.999995353712988	WITHOUT_CLASSIFICATION	4.6462870120845845E-6	DEFECT
//plotBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999886157545901	WITHOUT_CLASSIFICATION	1.1384245409884283E-5	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999991793099675	WITHOUT_CLASSIFICATION	8.206900325550038E-7	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999689770546323	WITHOUT_CLASSIFICATION	3.102294536771815E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999811805563406	WITHOUT_CLASSIFICATION	1.8819443659465954E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999811805563406	WITHOUT_CLASSIFICATION	1.8819443659465954E-5	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999998829771772	WITHOUT_CLASSIFICATION	1.1702282283631011E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999998829771772	WITHOUT_CLASSIFICATION	1.1702282283631011E-7	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999967299757703	WITHOUT_CLASSIFICATION	3.270024229762371E-6	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9989452648912077	WITHOUT_CLASSIFICATION	0.0010547351087922935	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999778984098202	WITHOUT_CLASSIFICATION	2.2101590179845672E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999930109520794	WITHOUT_CLASSIFICATION	6.989047920633619E-6	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999930109520794	WITHOUT_CLASSIFICATION	6.989047920633619E-6	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999930109520794	WITHOUT_CLASSIFICATION	6.989047920633619E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9991103014333899	WITHOUT_CLASSIFICATION	8.896985666101911E-4	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9991103014333899	WITHOUT_CLASSIFICATION	8.896985666101911E-4	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997130159404326	WITHOUT_CLASSIFICATION	2.8698405956745254E-4	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9998676132570128	WITHOUT_CLASSIFICATION	1.323867429872398E-4	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9997306676281795	WITHOUT_CLASSIFICATION	2.693323718203985E-4	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999984522668	WITHOUT_CLASSIFICATION	1.547733161864896E-9	DEFECT
// do nothing if item is not visible or null	WITHOUT_CLASSIFICATION	0.9992881511564067	WITHOUT_CLASSIFICATION	7.118488435933693E-4	DEFECT
// 100 percent, so it will not apply unless changed	WITHOUT_CLASSIFICATION	0.9999992300258486	WITHOUT_CLASSIFICATION	7.69974151407201E-7	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9996200064655698	WITHOUT_CLASSIFICATION	3.7999353443021527E-4	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7650369050522235	DEFECT	0.2349630949477764	WITHOUT_CLASSIFICATION
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999811805563406	WITHOUT_CLASSIFICATION	1.8819443659465954E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9994698105909672	WITHOUT_CLASSIFICATION	5.301894090328943E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999759638519236	WITHOUT_CLASSIFICATION	2.403614807644051E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999759638519236	WITHOUT_CLASSIFICATION	2.403614807644051E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999955646125551	WITHOUT_CLASSIFICATION	4.4353874448744824E-6	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9998676132570128	WITHOUT_CLASSIFICATION	1.323867429872398E-4	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999990177829274	WITHOUT_CLASSIFICATION	9.822170725479356E-7	DEFECT
// in the following code, barL0 is (in Java2D coordinates) the LEFT // end of the bar for a horizontal bar chart, and the TOP end of the // bar for a vertical bar chart.  Whether this is the BASE of the bar // or not depends also on (a) whether the data value is 'negative' // relative to the base value and (b) whether or not the range axis is // inverted.  This only matters if/when we apply the minimumBarLength // attribute, because we should extend the non-base end of the bar	WITHOUT_CLASSIFICATION	0.9999918844724408	WITHOUT_CLASSIFICATION	8.115527559273122E-6	DEFECT
// switch x and y	WITHOUT_CLASSIFICATION	0.9999981277323481	WITHOUT_CLASSIFICATION	1.8722676519278178E-6	DEFECT
// or: x1s + 2*(x1-x1s)	WITHOUT_CLASSIFICATION	0.9999042650626098	WITHOUT_CLASSIFICATION	9.573493739016999E-5	DEFECT
// or: x0s + 2*(x0-x0s)	WITHOUT_CLASSIFICATION	0.9998768283046309	WITHOUT_CLASSIFICATION	1.23171695369126E-4	DEFECT
// extend x0's flat bar	WITHOUT_CLASSIFICATION	0.9999952479679456	WITHOUT_CLASSIFICATION	4.752032054392505E-6	DEFECT
// upright bar	WITHOUT_CLASSIFICATION	0.9999979601782897	WITHOUT_CLASSIFICATION	2.0398217102867204E-6	DEFECT
// x1's flat bar	WITHOUT_CLASSIFICATION	0.9999954375410636	WITHOUT_CLASSIFICATION	4.562458936431795E-6	DEFECT
//standard deviation lines	WITHOUT_CLASSIFICATION	0.9999996633635757	WITHOUT_CLASSIFICATION	3.3663642429828046E-7	DEFECT
//// OUTLINE PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999967615923053	WITHOUT_CLASSIFICATION	3.2384076947375225E-6	DEFECT
//plotOutlinePaint;	WITHOUT_CLASSIFICATION	0.9999956063458249	WITHOUT_CLASSIFICATION	4.393654175187075E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999990177829274	WITHOUT_CLASSIFICATION	9.822170725479356E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999990177829274	WITHOUT_CLASSIFICATION	9.822170725479356E-7	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999955646125551	WITHOUT_CLASSIFICATION	4.4353874448744824E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999860758714254	WITHOUT_CLASSIFICATION	1.3924128574517436E-5	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9997625524877549	WITHOUT_CLASSIFICATION	2.3744751224506918E-4	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9992532140242317	WITHOUT_CLASSIFICATION	7.467859757682321E-4	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999784005423756	WITHOUT_CLASSIFICATION	2.159945762434582E-5	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999831902179976	WITHOUT_CLASSIFICATION	1.6809782002369016E-5	DEFECT
// draw the standard deviation lines *before* the shapes (if they're // visible) - it looks better if the shape fill colour is different to // the line colour	WITHOUT_CLASSIFICATION	0.9999966234109342	WITHOUT_CLASSIFICATION	3.376589065876741E-6	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.9998338655990747	WITHOUT_CLASSIFICATION	1.6613440092514887E-4	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.999900328153525	WITHOUT_CLASSIFICATION	9.967184647494046E-5	DEFECT
// there are no fields to check	WITHOUT_CLASSIFICATION	0.9999981235583515	WITHOUT_CLASSIFICATION	1.8764416485420628E-6	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------------- * CategoryItemRenderer.java * ------------------------- * * (C) Copyright 2001-2011, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Mark Watson (www.markwatson.com); * * Changes * ------- * 23-Oct-2001 : Version 1 (DG); * 16-Jan-2002 : Renamed HorizontalCategoryItemRenderer.java *               --> CategoryItemRenderer.java (DG); * 05-Feb-2002 : Changed return type of the drawCategoryItem method from void *               to Shape, as part of the tooltips implementation (DG) * *               NOTE (30-May-2002) : this has subsequently been changed back *               to void, tooltips are now collected along with entities in *               ChartRenderingInfo (DG); * * 14-Mar-2002 : Added the initialise method, and changed all bar plots to use *               this renderer (DG); * 23-May-2002 : Added ChartRenderingInfo to the initialise method (DG); * 29-May-2002 : Added the getAxisArea(Rectangle2D) method (DG); * 06-Jun-2002 : Updated Javadoc comments (DG); * 26-Jun-2002 : Added range axis to the initialise method (DG); * 24-Sep-2002 : Added getLegendItem() method (DG); * 23-Oct-2002 : Added methods to get/setToolTipGenerator (DG); * 05-Nov-2002 : Replaced references to CategoryDataset with TableDataset (DG); * 06-Nov-2002 : Added the domain axis to the drawCategoryItem method.  Renamed *               drawCategoryItem() --> drawItem() (DG); * 20-Nov-2002 : Changed signature of drawItem() method to reflect use of *               TableDataset (DG); * 26-Nov-2002 : Replaced the isStacked() method with the getRangeType() *               method (DG); * 08-Jan-2003 : Changed getSeriesCount() --> getRowCount() and *               getCategoryCount() --> getColumnCount() (DG); * 09-Jan-2003 : Changed name of grid-line methods (DG); * 21-Jan-2003 : Merged TableDataset with CategoryDataset (DG); * 10-Apr-2003 : Changed CategoryDataset to KeyedValues2DDataset in *               drawItem() method (DG); * 29-Apr-2003 : Eliminated Renderer interface (DG); * 02-Sep-2003 : Fix for bug 790407 (DG); * 16-Sep-2003 : Changed ChartRenderingInfo --> PlotRenderingInfo (DG); * 20-Oct-2003 : Added setOutlinePaint() method (DG); * 06-Feb-2004 : Added missing methods, and moved deprecated methods (DG); * 19-Feb-2004 : Added extra setXXXLabelsVisible() methods (DG); * 29-Apr-2004 : Changed Integer --> int in initialise() method (DG); * 18-May-2004 : Added methods for item label paint (DG); * 05-Nov-2004 : Added getPassCount() method and 'pass' parameter to drawItem() *               method (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds (DG); * 11-Jan-2005 : Removed deprecated code in preparation for 1.0.0 release (DG); * 23-Feb-2005 : Now extends LegendItemSource (DG); * 20-Apr-2005 : Renamed CategoryLabelGenerator *               --> CategoryItemLabelGenerator (DG); * 20-May-2005 : Added drawDomainMarker() method (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 20-Feb-2007 : Updated API docs (DG); * 19-Apr-2007 : Deprecated seriesVisible and seriesVisibleInLegend flags (DG); * 20-Apr-2007 : Deprecated paint, fillPaint, outlinePaint, stroke, *               outlineStroke, shape, itemLabelsVisible, itemLabelFont, *               itemLabelPaint, positiveItemLabelPosition, *               negativeItemLabelPosition and createEntities override *               fields (DG); * 26-Jun-2008 : Added new method required for crosshair support - THIS CHANGES *               THE API as of version 1.0.11 (DG); * */	WITHOUT_CLASSIFICATION	0.9999999767983004	WITHOUT_CLASSIFICATION	2.32016996163429E-8	DEFECT
//// PAINT /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999965751929812	WITHOUT_CLASSIFICATION	3.4248070187268293E-6	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.8407324338103511	DEFECT	0.15926756618964896	WITHOUT_CLASSIFICATION
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9045753957751459	DEFECT	0.09542460422485413	WITHOUT_CLASSIFICATION
//// FILL PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999425919451806	WITHOUT_CLASSIFICATION	5.7408054819285785E-5	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9998398320172824	WITHOUT_CLASSIFICATION	1.6016798271753266E-4	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999145349226063	WITHOUT_CLASSIFICATION	8.546507739366256E-5	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999598025128008	WITHOUT_CLASSIFICATION	4.01974871991009E-5	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9999306262758566	WITHOUT_CLASSIFICATION	6.937372414336418E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999645764721726	WITHOUT_CLASSIFICATION	3.542352782739361E-5	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.8407324338103511	DEFECT	0.15926756618964896	WITHOUT_CLASSIFICATION
// ITEM LABELS VISIBLE	WITHOUT_CLASSIFICATION	0.9999311742330967	WITHOUT_CLASSIFICATION	6.882576690325529E-5	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.8463066947047343	DEFECT	0.15369330529526573	WITHOUT_CLASSIFICATION
//// STROKE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999914088709374	WITHOUT_CLASSIFICATION	8.591129062571202E-6	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9969005766878289	DEFECT	0.003099423312171085	WITHOUT_CLASSIFICATION
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9979120268571907	DEFECT	0.0020879731428093753	WITHOUT_CLASSIFICATION
//// OUTLINE STROKE ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999967113274935	WITHOUT_CLASSIFICATION	3.288672506653759E-6	DEFECT
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9947522449068581	DEFECT	0.005247755093141892	WITHOUT_CLASSIFICATION
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9963231438030247	DEFECT	0.00367685619697545	WITHOUT_CLASSIFICATION
//// SHAPE /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999883797611263	WITHOUT_CLASSIFICATION	1.1620238873652167E-5	DEFECT
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.7923468428137826	DEFECT	0.2076531571862173	WITHOUT_CLASSIFICATION
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.9205678525404871	DEFECT	0.07943214745951296	WITHOUT_CLASSIFICATION
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999997849238602	WITHOUT_CLASSIFICATION	2.1507613974157278E-7	DEFECT
// FIXME: add setSeriesItemLabelGenerator(int, CategoryItemLabelGenerator, //            boolean)	WITHOUT_CLASSIFICATION	0.8519619379534199	WITHOUT_CLASSIFICATION	0.14803806204658015	DEFECT
// FIXME: add setBaseToolTipGenerator(CategoryToolTipGenerator, boolean) ?	WITHOUT_CLASSIFICATION	0.5679333049385217	DEFECT	0.4320666950614783	WITHOUT_CLASSIFICATION
//// ITEM LABEL FONT  //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999801610965733	WITHOUT_CLASSIFICATION	1.9838903426711627E-5	DEFECT
// FIXME: add setSeriesItemLabelFont(int, Font, boolean) ?	WITHOUT_CLASSIFICATION	0.5611098641656442	DEFECT	0.43889013583435577	WITHOUT_CLASSIFICATION
// FIXME: add setBaseItemLabelFont(Font, boolean) ?	WITHOUT_CLASSIFICATION	0.7801651930248468	DEFECT	0.2198348069751533	WITHOUT_CLASSIFICATION
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999858690461885	WITHOUT_CLASSIFICATION	1.4130953811505377E-5	DEFECT
// FIXME: add setSeriesItemLabelPaint(int, Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.6467376136263238	DEFECT	0.3532623863736763	WITHOUT_CLASSIFICATION
// FIXME: add setBaseItemLabelPaint(Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.7729433799435961	DEFECT	0.22705662005640384	WITHOUT_CLASSIFICATION
// ITEM URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999717563086342	WITHOUT_CLASSIFICATION	2.8243691365705703E-5	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999999539530507	WITHOUT_CLASSIFICATION	4.604694934592193E-8	DEFECT
/*&& state.getBarWidth() > renderer.BAR_OUTLINE_WIDTH_THRESHOLD*/	WITHOUT_CLASSIFICATION	0.9999690633628933	WITHOUT_CLASSIFICATION	3.0936637106706296E-5	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9999999768676523	WITHOUT_CLASSIFICATION	2.3132347667901764E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999997849238602	WITHOUT_CLASSIFICATION	2.1507613974157278E-7	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.9997251340041499	WITHOUT_CLASSIFICATION	2.748659958501882E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999759638519236	WITHOUT_CLASSIFICATION	2.403614807644051E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999955646125551	WITHOUT_CLASSIFICATION	4.4353874448744824E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999955646125551	WITHOUT_CLASSIFICATION	4.4353874448744824E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999860758714254	WITHOUT_CLASSIFICATION	1.3924128574517436E-5	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999998829771772	WITHOUT_CLASSIFICATION	1.1702282283631011E-7	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.9999406448590316	WITHOUT_CLASSIFICATION	5.935514096844139E-5	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.999995259556046	WITHOUT_CLASSIFICATION	4.740443954126213E-6	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.9999952395488447	WITHOUT_CLASSIFICATION	4.7604511553627575E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999778984098202	WITHOUT_CLASSIFICATION	2.2101590179845672E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999820737045402	WITHOUT_CLASSIFICATION	1.7926295459847405E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997130159404326	WITHOUT_CLASSIFICATION	2.8698405956745254E-4	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999988400163347	WITHOUT_CLASSIFICATION	1.1599836653268296E-6	DEFECT
// 100 percent, so it will not apply unless // changed	WITHOUT_CLASSIFICATION	0.9999990988105789	WITHOUT_CLASSIFICATION	9.011894211224876E-7	DEFECT
// set the outline paint to fully transparent, then the legend shape // will just have the same colour as the lines drawn by the renderer	WITHOUT_CLASSIFICATION	0.9999999133948918	WITHOUT_CLASSIFICATION	8.66051081534697E-8	DEFECT
// first check the number we are plotting...	WITHOUT_CLASSIFICATION	0.9999999833189358	WITHOUT_CLASSIFICATION	1.6681064204144912E-8	DEFECT
// reset the min and max	WITHOUT_CLASSIFICATION	0.9999972004591711	WITHOUT_CLASSIFICATION	2.799540828957282E-6	DEFECT
// connect to the previous point	WITHOUT_CLASSIFICATION	0.9999997191484736	WITHOUT_CLASSIFICATION	2.8085152640591556E-7	DEFECT
// create a line renderer only	WITHOUT_CLASSIFICATION	0.9999906311572302	WITHOUT_CLASSIFICATION	9.368842769880676E-6	DEFECT
// higlight the background corners...	WITHOUT_CLASSIFICATION	0.9999835524060943	WITHOUT_CLASSIFICATION	1.6447593905803565E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9994698105909672	WITHOUT_CLASSIFICATION	5.301894090328943E-4	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999930109520794	WITHOUT_CLASSIFICATION	6.989047920633619E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999645764721726	WITHOUT_CLASSIFICATION	3.542352782739361E-5	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999784005423756	WITHOUT_CLASSIFICATION	2.159945762434582E-5	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999831902179976	WITHOUT_CLASSIFICATION	1.6809782002369016E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997130159404326	WITHOUT_CLASSIFICATION	2.8698405956745254E-4	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.9998338655990747	WITHOUT_CLASSIFICATION	1.6613440092514887E-4	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.999900328153525	WITHOUT_CLASSIFICATION	9.967184647494046E-5	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9999856440828032	WITHOUT_CLASSIFICATION	1.4355917196824288E-5	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999996221401068	WITHOUT_CLASSIFICATION	3.7785989322065283E-7	DEFECT
// treat the last column value as an absolute	WITHOUT_CLASSIFICATION	0.9999987529581292	WITHOUT_CLASSIFICATION	1.2470418707230548E-6	DEFECT
// only needed if calculating percentages	WITHOUT_CLASSIFICATION	0.9999996921637935	WITHOUT_CLASSIFICATION	3.078362064673267E-7	DEFECT
// calculate the box width	WITHOUT_CLASSIFICATION	0.9999797965896682	WITHOUT_CLASSIFICATION	2.0203410331861692E-5	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9999999907960242	WITHOUT_CLASSIFICATION	9.203975770471667E-9	DEFECT
// offset the start of the box if the box width is smaller than // the category width	WITHOUT_CLASSIFICATION	0.9999989700190834	WITHOUT_CLASSIFICATION	1.0299809166358023E-6	DEFECT
// draw the box...	WITHOUT_CLASSIFICATION	0.9999907115032161	WITHOUT_CLASSIFICATION	9.288496783841523E-6	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.999995171533986	WITHOUT_CLASSIFICATION	4.828466014071248E-6	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999945717194069	WITHOUT_CLASSIFICATION	5.428280593104293E-6	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9045753957751459	DEFECT	0.09542460422485413	WITHOUT_CLASSIFICATION
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9999999907960242	WITHOUT_CLASSIFICATION	9.203975770471667E-9	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.999995171533986	WITHOUT_CLASSIFICATION	4.828466014071248E-6	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999945717194069	WITHOUT_CLASSIFICATION	5.428280593104293E-6	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.9979588442268702	WITHOUT_CLASSIFICATION	0.002041155773129927	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.9998429501237557	WITHOUT_CLASSIFICATION	1.57049876244396E-4	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999994364851286	WITHOUT_CLASSIFICATION	5.635148715274879E-7	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999994364851286	WITHOUT_CLASSIFICATION	5.635148715274879E-7	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999996992812917	WITHOUT_CLASSIFICATION	3.0071870825111386E-7	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.9999680522196297	WITHOUT_CLASSIFICATION	3.19477803702438E-5	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.9999680522196297	WITHOUT_CLASSIFICATION	3.19477803702438E-5	DEFECT
// offset the start of the box if the box width is smaller than the // category width	WITHOUT_CLASSIFICATION	0.9999987116955292	WITHOUT_CLASSIFICATION	1.2883044707356379E-6	DEFECT
// draw the body...	WITHOUT_CLASSIFICATION	0.9999521659623135	WITHOUT_CLASSIFICATION	4.783403768640425E-5	DEFECT
// draw yOutliers...	WITHOUT_CLASSIFICATION	0.9999981413490122	WITHOUT_CLASSIFICATION	1.8586509877339274E-6	DEFECT
// draw farout indicators	WITHOUT_CLASSIFICATION	0.9999989825404347	WITHOUT_CLASSIFICATION	1.017459565326799E-6	DEFECT
// start from Y = rangeBase	WITHOUT_CLASSIFICATION	0.9999998277261001	WITHOUT_CLASSIFICATION	1.7227389999112768E-7	DEFECT
// Process outliers. Each outlier is either added to the // appropriate outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999999970396009	WITHOUT_CLASSIFICATION	2.9603992154160315E-9	DEFECT
// disable visible items optimisation - it doesn't work for this // renderer...	WITHOUT_CLASSIFICATION	0.7541518839596452	DEFECT	0.24584811604035484	WITHOUT_CLASSIFICATION
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.9999998374985087	WITHOUT_CLASSIFICATION	1.6250149132250177E-7	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.999944354314054	WITHOUT_CLASSIFICATION	5.564568594601736E-5	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999998107703516	WITHOUT_CLASSIFICATION	1.8922964836868427E-7	DEFECT
// The first point is (x, this.baseYValue)	WITHOUT_CLASSIFICATION	0.9999995128687434	WITHOUT_CLASSIFICATION	4.8713125651653E-7	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999978258955202	WITHOUT_CLASSIFICATION	2.1741044797798293E-6	DEFECT
// not just a horizontal bar but need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9999999199437214	WITHOUT_CLASSIFICATION	8.005627867130505E-8	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9994651244234947	WITHOUT_CLASSIFICATION	5.348755765053108E-4	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999820737045402	WITHOUT_CLASSIFICATION	1.7926295459847405E-5	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.999944354314054	WITHOUT_CLASSIFICATION	5.564568594601736E-5	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999950739820297	WITHOUT_CLASSIFICATION	4.926017970351047E-6	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999999320738524	WITHOUT_CLASSIFICATION	6.79261476573593E-8	DEFECT
// Check if the item is the last item for the series or if it // is a NULL value and number of items > 0.  We can't draw an area for // a single point.	WITHOUT_CLASSIFICATION	0.9999999887039839	WITHOUT_CLASSIFICATION	1.129601600235751E-8	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999993807569632	WITHOUT_CLASSIFICATION	6.192430368883601E-7	DEFECT
// fill the polygon	WITHOUT_CLASSIFICATION	0.9999952125838406	WITHOUT_CLASSIFICATION	4.787416159449227E-6	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999957079496274	WITHOUT_CLASSIFICATION	4.292050372521146E-6	DEFECT
// start new area when needed (see above)	WITHOUT_CLASSIFICATION	0.999997644086781	WITHOUT_CLASSIFICATION	2.355913219072948E-6	DEFECT
// do nothing...this is just a hook for subclasses	WITHOUT_CLASSIFICATION	0.999989914946121	WITHOUT_CLASSIFICATION	1.0085053879025159E-5	DEFECT
// TODO getSeriesShape(n).getBounds().width / 2;	WITHOUT_CLASSIFICATION	0.99869509265515	WITHOUT_CLASSIFICATION	0.0013049073448499799	DEFECT
// TODO getSeriesShape(n).getBounds().height / 2;	WITHOUT_CLASSIFICATION	0.9988787411582394	WITHOUT_CLASSIFICATION	0.0011212588417605818	DEFECT
// can't draw anything	WITHOUT_CLASSIFICATION	0.9998199697516612	WITHOUT_CLASSIFICATION	1.8003024833879093E-4	DEFECT
// draw optional guide lines	WITHOUT_CLASSIFICATION	0.9999998892056742	WITHOUT_CLASSIFICATION	1.1079432584835018E-7	DEFECT
// calculate the arrow head and draw it...	WITHOUT_CLASSIFICATION	0.9976762660057059	WITHOUT_CLASSIFICATION	0.002323733994294151	DEFECT
// orientation is HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999959950320864	WITHOUT_CLASSIFICATION	4.0049679136329705E-6	DEFECT
//labelLinkStyle;	WITHOUT_CLASSIFICATION	0.9999760415896775	WITHOUT_CLASSIFICATION	2.395841032251726E-5	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.9999996357264272	WITHOUT_CLASSIFICATION	3.6427357277749727E-7	DEFECT
// check if either series is a degenerate case (i.e. less than 2 points)	WITHOUT_CLASSIFICATION	0.9999967032491262	WITHOUT_CLASSIFICATION	3.296750873932548E-6	DEFECT
// check if series are disjoint (i.e. domain-spans do not overlap)	WITHOUT_CLASSIFICATION	0.9999999318881836	WITHOUT_CLASSIFICATION	6.811181641623349E-8	DEFECT
// polygon definitions	WITHOUT_CLASSIFICATION	0.9999959256338365	WITHOUT_CLASSIFICATION	4.074366163428204E-6	DEFECT
// state	WITHOUT_CLASSIFICATION	0.999998643556908	WITHOUT_CLASSIFICATION	1.3564430919813232E-6	DEFECT
// actual value set below	WITHOUT_CLASSIFICATION	0.9999998504462566	WITHOUT_CLASSIFICATION	1.4955374343777695E-7	DEFECT
// if a subtrahend is not specified, assume it is zero	WITHOUT_CLASSIFICATION	0.9999999221748371	WITHOUT_CLASSIFICATION	7.7825162799505E-8	DEFECT
// fast-forward through leading tails	WITHOUT_CLASSIFICATION	0.9999914771882839	WITHOUT_CLASSIFICATION	8.522811716127127E-6	DEFECT
// get the x and y coordinates	WITHOUT_CLASSIFICATION	0.9999996990333283	WITHOUT_CLASSIFICATION	3.009666716668881E-7	DEFECT
// minuend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9999995910046748	WITHOUT_CLASSIFICATION	4.0899532518868877E-7	DEFECT
// subtrahend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9999999191740924	WITHOUT_CLASSIFICATION	8.082590757508633E-8	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.9999999305342793	WITHOUT_CLASSIFICATION	6.946572071876856E-8	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9999983675725381	WITHOUT_CLASSIFICATION	1.632427461939131E-6	DEFECT
// start of algorithm	WITHOUT_CLASSIFICATION	0.9999998992749749	WITHOUT_CLASSIFICATION	1.0072502506799613E-7	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9214135403667818	WITHOUT_CLASSIFICATION	0.07858645963321818	DEFECT
// deassert b_*FastForward (only matters for 1st time through loop)	WITHOUT_CLASSIFICATION	0.9999903424457877	WITHOUT_CLASSIFICATION	9.657554212292616E-6	DEFECT
// check for intersect	WITHOUT_CLASSIFICATION	0.9999998301281338	WITHOUT_CLASSIFICATION	1.698718661095575E-7	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999994072615608	WITHOUT_CLASSIFICATION	5.927384391962313E-7	DEFECT
// compute common denominator	WITHOUT_CLASSIFICATION	0.9999995598156941	WITHOUT_CLASSIFICATION	4.4018430577683505E-7	DEFECT
// compute common deltas	WITHOUT_CLASSIFICATION	0.9999989413491307	WITHOUT_CLASSIFICATION	1.0586508693547987E-6	DEFECT
// compute numerators	WITHOUT_CLASSIFICATION	0.9999998456619438	WITHOUT_CLASSIFICATION	1.5433805623258326E-7	DEFECT
// check if previously colinear	WITHOUT_CLASSIFICATION	0.9999997561700915	WITHOUT_CLASSIFICATION	2.438299085555314E-7	DEFECT
// clear colinear points and flag	WITHOUT_CLASSIFICATION	0.999998490515634	WITHOUT_CLASSIFICATION	1.5094843660430944E-6	DEFECT
// set new starting point for the polygon	WITHOUT_CLASSIFICATION	0.9999999501826213	WITHOUT_CLASSIFICATION	4.9817378683562117E-8	DEFECT
// compute slope components	WITHOUT_CLASSIFICATION	0.9999995118130641	WITHOUT_CLASSIFICATION	4.881869358590057E-7	DEFECT
// test if both grahphs have a vertical rise at the same x-value	WITHOUT_CLASSIFICATION	0.9999992577202641	WITHOUT_CLASSIFICATION	7.422797358784777E-7	DEFECT
// check if the line segments intersect	WITHOUT_CLASSIFICATION	0.999999720658587	WITHOUT_CLASSIFICATION	2.7934141309982024E-7	DEFECT
// compute the point of intersection	WITHOUT_CLASSIFICATION	0.9999999449506941	WITHOUT_CLASSIFICATION	5.504930580624525E-8	DEFECT
// advance minuend and subtrahend to intesect	WITHOUT_CLASSIFICATION	0.9999998239249169	WITHOUT_CLASSIFICATION	1.7607508317439837E-7	DEFECT
// add intersection point to the polygon	WITHOUT_CLASSIFICATION	0.9999997022845932	WITHOUT_CLASSIFICATION	2.97715406759709E-7	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9999999425364593	WITHOUT_CLASSIFICATION	5.746354061093166E-8	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.999993880648882	WITHOUT_CLASSIFICATION	6.119351118074833E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9994651244234947	WITHOUT_CLASSIFICATION	5.348755765053108E-4	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999977666402792	WITHOUT_CLASSIFICATION	2.2333597208266687E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999860758714254	WITHOUT_CLASSIFICATION	1.3924128574517436E-5	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999957079496274	WITHOUT_CLASSIFICATION	4.292050372521146E-6	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.9999999305342793	WITHOUT_CLASSIFICATION	6.946572071876856E-8	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9999983675725381	WITHOUT_CLASSIFICATION	1.632427461939131E-6	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9999999425364593	WITHOUT_CLASSIFICATION	5.746354061093166E-8	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.999993880648882	WITHOUT_CLASSIFICATION	6.119351118074833E-6	DEFECT
// set the maxY and minY values to intersect y-value	WITHOUT_CLASSIFICATION	0.999999064891308	WITHOUT_CLASSIFICATION	9.351086919663238E-7	DEFECT
// add interection point to new polygon	WITHOUT_CLASSIFICATION	0.9999972818060866	WITHOUT_CLASSIFICATION	2.7181939133591952E-6	DEFECT
// advance the minuend if needed	WITHOUT_CLASSIFICATION	0.999999073750537	WITHOUT_CLASSIFICATION	9.262494630318683E-7	DEFECT
// advance the subtrahend if needed	WITHOUT_CLASSIFICATION	0.999999962413917	WITHOUT_CLASSIFICATION	3.7586083093919675E-8	DEFECT
// check if the final polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.9999999117727129	WITHOUT_CLASSIFICATION	8.822728712124789E-8	DEFECT
// consider last point of minuend and subtrahend for determining // positivity	WITHOUT_CLASSIFICATION	0.9999998794385361	WITHOUT_CLASSIFICATION	1.2056146385690025E-7	DEFECT
// add the last point of the minuned and subtrahend	WITHOUT_CLASSIFICATION	0.9999999675781431	WITHOUT_CLASSIFICATION	3.242185679863132E-8	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999961256635737	WITHOUT_CLASSIFICATION	3.8743364263090215E-6	DEFECT
//// VISIBLE //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999983139436774	WITHOUT_CLASSIFICATION	1.686056322598193E-5	DEFECT
//// PAINT ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999965751929812	WITHOUT_CLASSIFICATION	3.4248070187268293E-6	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999577775114	WITHOUT_CLASSIFICATION	4.222248864067035E-8	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7650369050522235	DEFECT	0.2349630949477764	WITHOUT_CLASSIFICATION
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.8463066947047343	DEFECT	0.15369330529526573	WITHOUT_CLASSIFICATION
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.9999992786703914	WITHOUT_CLASSIFICATION	7.213296085695316E-7	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.999999991006641	WITHOUT_CLASSIFICATION	8.993358938294108E-9	DEFECT
//// OUTLINE PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999967615923053	WITHOUT_CLASSIFICATION	3.2384076947375225E-6	DEFECT
// bad axisNumber	WITHOUT_CLASSIFICATION	0.999999559385659	WITHOUT_CLASSIFICATION	4.406143410569447E-7	DEFECT
// a Range object cannot be equal to a different object type	WITHOUT_CLASSIFICATION	0.9999893977481761	WITHOUT_CLASSIFICATION	1.060225182384074E-5	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9998398320172824	WITHOUT_CLASSIFICATION	1.6016798271753266E-4	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999145349226063	WITHOUT_CLASSIFICATION	8.546507739366256E-5	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999860771741927	WITHOUT_CLASSIFICATION	1.3922825807204967E-5	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999930123816944	WITHOUT_CLASSIFICATION	6.98761830554918E-6	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9969005766878289	DEFECT	0.003099423312171085	WITHOUT_CLASSIFICATION
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9979120268571907	DEFECT	0.0020879731428093753	WITHOUT_CLASSIFICATION
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9947522449068581	DEFECT	0.005247755093141892	WITHOUT_CLASSIFICATION
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9963231438030247	DEFECT	0.00367685619697545	WITHOUT_CLASSIFICATION
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.7923468428137826	DEFECT	0.2076531571862173	WITHOUT_CLASSIFICATION
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.9205678525404871	DEFECT	0.07943214745951296	WITHOUT_CLASSIFICATION
// allowDuplicateXValues	WITHOUT_CLASSIFICATION	0.9999994759432845	WITHOUT_CLASSIFICATION	5.240567153661104E-7	DEFECT
//// STROKE ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999914088709374	WITHOUT_CLASSIFICATION	8.591129062571202E-6	DEFECT
//// OUTLINE STROKE ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999967113274935	WITHOUT_CLASSIFICATION	3.288672506653759E-6	DEFECT
//// SHAPE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999883797611263	WITHOUT_CLASSIFICATION	1.1620238873652167E-5	DEFECT
//// LEGEND ITEMS /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999996134958583	WITHOUT_CLASSIFICATION	3.865041417078456E-6	DEFECT
//// LEGEND ITEM LABEL GENERATOR //////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999925945537358	WITHOUT_CLASSIFICATION	7.405446264154549E-6	DEFECT
//// ITEM LABEL GENERATOR /////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999893475323326	WITHOUT_CLASSIFICATION	1.0652467667374052E-5	DEFECT
// FIXME:	WITHOUT_CLASSIFICATION	0.5017436858740022	DEFECT	0.49825631412599786	WITHOUT_CLASSIFICATION
//// ITEM LABEL FONT ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999830014826988	WITHOUT_CLASSIFICATION	1.699851730120722E-5	DEFECT
//// ANNOTATIONS //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999986881597921	WITHOUT_CLASSIFICATION	1.3118402079426754E-6	DEFECT
//// DRAWING //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999963094391927	WITHOUT_CLASSIFICATION	3.6905608072279727E-6	DEFECT
// DEPRECATED METHODS	WITHOUT_CLASSIFICATION	0.9999720956303673	WITHOUT_CLASSIFICATION	2.790436963262907E-5	DEFECT
// need to handle cluster centering as a special case	WITHOUT_CLASSIFICATION	0.9999999320440414	WITHOUT_CLASSIFICATION	6.79559586598232E-8	DEFECT
// may be negative	WITHOUT_CLASSIFICATION	0.999996367428473	WITHOUT_CLASSIFICATION	3.6325715270365447E-6	DEFECT
/*             * Legacy? Just return the original Paint.             * (this corresponds EXACTLY to how Paints used to be darkened)             */	WITHOUT_CLASSIFICATION	0.99999778035839	WITHOUT_CLASSIFICATION	2.219641610041768E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999929380011021	WITHOUT_CLASSIFICATION	7.061998897867044E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989849970972	WITHOUT_CLASSIFICATION	1.015002902854677E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9994651244234947	WITHOUT_CLASSIFICATION	5.348755765053108E-4	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9994698105909672	WITHOUT_CLASSIFICATION	5.301894090328943E-4	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999998107703516	WITHOUT_CLASSIFICATION	1.8922964836868427E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999962453681294	WITHOUT_CLASSIFICATION	3.754631870701947E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999861814973123	WITHOUT_CLASSIFICATION	1.3818502687539151E-5	DEFECT
// first pass draws the shading	WITHOUT_CLASSIFICATION	0.9999992738348008	WITHOUT_CLASSIFICATION	7.261651992163213E-7	DEFECT
// last item in series, draw the lot... // set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999287367377648	WITHOUT_CLASSIFICATION	7.126326223513562E-5	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.9999260827724701	WITHOUT_CLASSIFICATION	7.391722752987338E-5	DEFECT
// return straight away if the item is not visible	WITHOUT_CLASSIFICATION	0.9999823521410328	WITHOUT_CLASSIFICATION	1.764785896715022E-5	DEFECT
// add an entity if this info is being collected	WITHOUT_CLASSIFICATION	0.9998917644106162	WITHOUT_CLASSIFICATION	1.0823558938368936E-4	DEFECT
//  Get height adjustment based on stack and translate to Java2D values	WITHOUT_CLASSIFICATION	0.9999998315754172	WITHOUT_CLASSIFICATION	1.6842458289348002E-7	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.9999536984968423	WITHOUT_CLASSIFICATION	4.630150315767877E-5	DEFECT
//  On first pass render the areas, line and outlines	WITHOUT_CLASSIFICATION	0.9999799825645509	WITHOUT_CLASSIFICATION	2.0017435449139317E-5	DEFECT
// start from previous height (ph1)	WITHOUT_CLASSIFICATION	0.9999996372359303	WITHOUT_CLASSIFICATION	3.6276406964805643E-7	DEFECT
// should not get here	WITHOUT_CLASSIFICATION	0.9999934031077504	WITHOUT_CLASSIFICATION	6.596892249574552E-6	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999990623225349	WITHOUT_CLASSIFICATION	9.376774651270017E-7	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999898706902026	WITHOUT_CLASSIFICATION	1.0129309797427633E-5	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.9999854537935801	WITHOUT_CLASSIFICATION	1.4546206420068463E-5	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.9999753856690224	WITHOUT_CLASSIFICATION	2.4614330977639916E-5	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999057286608172	WITHOUT_CLASSIFICATION	9.427133918277066E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9994698105909672	WITHOUT_CLASSIFICATION	5.301894090328943E-4	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999820737045402	WITHOUT_CLASSIFICATION	1.7926295459847405E-5	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.9999998374985087	WITHOUT_CLASSIFICATION	1.6250149132250177E-7	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999978258955202	WITHOUT_CLASSIFICATION	2.1741044797798293E-6	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999999320738524	WITHOUT_CLASSIFICATION	6.79261476573593E-8	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999993807569632	WITHOUT_CLASSIFICATION	6.192430368883601E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999993807569632	WITHOUT_CLASSIFICATION	6.192430368883601E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999943006561974	WITHOUT_CLASSIFICATION	5.699343802533638E-6	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9999994442869531	WITHOUT_CLASSIFICATION	5.557130469912686E-7	DEFECT
// The first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999993812520768	WITHOUT_CLASSIFICATION	6.187479232456417E-7	DEFECT
//  Fill the polygon	WITHOUT_CLASSIFICATION	0.9999868305757399	WITHOUT_CLASSIFICATION	1.3169424260134979E-5	DEFECT
//  Draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999943828925864	WITHOUT_CLASSIFICATION	5.617107413743549E-6	DEFECT
// first pass draws the background (lines, for instance)	WITHOUT_CLASSIFICATION	0.9999997467558194	WITHOUT_CLASSIFICATION	2.532441805890491E-7	DEFECT
//labelLinkPaint;	WITHOUT_CLASSIFICATION	0.9999922875464603	WITHOUT_CLASSIFICATION	7.712453539616336E-6	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999971383453012	WITHOUT_CLASSIFICATION	2.8616546987164533E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989849970972	WITHOUT_CLASSIFICATION	1.015002902854677E-6	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999998959218143	WITHOUT_CLASSIFICATION	1.0407818576467357E-7	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999860758714254	WITHOUT_CLASSIFICATION	1.3924128574517436E-5	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.9999260827724701	WITHOUT_CLASSIFICATION	7.391722752987338E-5	DEFECT
// Add points from last series to complete the base of the // polygon	WITHOUT_CLASSIFICATION	0.9999999961646381	WITHOUT_CLASSIFICATION	3.835361891837958E-9	DEFECT
// On second pass render shapes and collect entity and tooltip // information	WITHOUT_CLASSIFICATION	0.9999412662443284	WITHOUT_CLASSIFICATION	5.8733755671503394E-5	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999999629125631	WITHOUT_CLASSIFICATION	3.708743694759416E-8	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.9999202443934238	WITHOUT_CLASSIFICATION	7.975560657622829E-5	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999971320650839	WITHOUT_CLASSIFICATION	2.867934916052118E-6	DEFECT
// Collect points	WITHOUT_CLASSIFICATION	0.9999981169188472	WITHOUT_CLASSIFICATION	1.8830811527681609E-6	DEFECT
// construct path	WITHOUT_CLASSIFICATION	0.9999988256830288	WITHOUT_CLASSIFICATION	1.1743169712043962E-6	DEFECT
// we need at least two points to draw something	WITHOUT_CLASSIFICATION	0.9999973916142246	WITHOUT_CLASSIFICATION	2.608385775302582E-6	DEFECT
// we need at least 3 points to spline. Draw simple line // for two points	WITHOUT_CLASSIFICATION	0.9999995145834278	WITHOUT_CLASSIFICATION	4.854165721877933E-7	DEFECT
// construct spline // number of points // Newton form coefficients // x-coordinates of nodes	WITHOUT_CLASSIFICATION	0.9999999994580149	WITHOUT_CLASSIFICATION	5.419851120768612E-10	DEFECT
// note that a[0]=a[np-1]=0	WITHOUT_CLASSIFICATION	0.9999954499043808	WITHOUT_CLASSIFICATION	4.550095619146489E-6	DEFECT
// loop over intervals between nodes	WITHOUT_CLASSIFICATION	0.9999994827075682	WITHOUT_CLASSIFICATION	5.172924317191345E-7	DEFECT
// we're running on JRE 1.3.1 so this is the best we have...	WITHOUT_CLASSIFICATION	0.9999522145504683	WITHOUT_CLASSIFICATION	4.778544953168421E-5	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999986546014507	WITHOUT_CLASSIFICATION	1.3453985492976757E-6	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999598025128008	WITHOUT_CLASSIFICATION	4.01974871991009E-5	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.999999334681797	WITHOUT_CLASSIFICATION	6.653182030714683E-7	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.999999334681797	WITHOUT_CLASSIFICATION	6.653182030714683E-7	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999997417057311	WITHOUT_CLASSIFICATION	2.582942688108161E-7	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999997417057311	WITHOUT_CLASSIFICATION	2.582942688108161E-7	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9999306262758566	WITHOUT_CLASSIFICATION	6.937372414336418E-5	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999890526828388	WITHOUT_CLASSIFICATION	1.0947317161310509E-5	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999999707866032	WITHOUT_CLASSIFICATION	2.921339682726983E-8	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999999707866032	WITHOUT_CLASSIFICATION	2.921339682726983E-8	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.999986262177246	WITHOUT_CLASSIFICATION	1.3737822753978688E-5	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.999986262177246	WITHOUT_CLASSIFICATION	1.3737822753978688E-5	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999997507428867	WITHOUT_CLASSIFICATION	2.4925711335446127E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999997507428867	WITHOUT_CLASSIFICATION	2.4925711335446127E-7	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9996200064655698	WITHOUT_CLASSIFICATION	3.7999353443021527E-4	DEFECT
// map a key to the default group	WITHOUT_CLASSIFICATION	0.9999997560322211	WITHOUT_CLASSIFICATION	2.439677788408285E-7	DEFECT
// Add last point @ y=0 for fillPath and close path	WITHOUT_CLASSIFICATION	0.9999998248541897	WITHOUT_CLASSIFICATION	1.751458102451409E-7	DEFECT
// fill under the curve...	WITHOUT_CLASSIFICATION	0.9999326867295372	WITHOUT_CLASSIFICATION	6.73132704627821E-5	DEFECT
// then draw the line...	WITHOUT_CLASSIFICATION	0.9998096859333897	WITHOUT_CLASSIFICATION	1.9031406661031714E-4	DEFECT
// reset points vector	WITHOUT_CLASSIFICATION	0.9999997089511767	WITHOUT_CLASSIFICATION	2.910488233434071E-7	DEFECT
/*      factorization and forward substitution */	WITHOUT_CLASSIFICATION	0.9999997634028573	WITHOUT_CLASSIFICATION	2.3659714256901807E-7	DEFECT
// now draw the real shape	WITHOUT_CLASSIFICATION	0.9999994315587141	WITHOUT_CLASSIFICATION	5.684412859478213E-7	DEFECT
// should never get here	WITHOUT_CLASSIFICATION	0.9999994668016359	WITHOUT_CLASSIFICATION	5.331983641546446E-7	DEFECT
// 'plot' : just retain reference, not a deep copy	WITHOUT_CLASSIFICATION	0.9999997588632448	WITHOUT_CLASSIFICATION	2.411367552549368E-7	DEFECT
// just the domain axis...	WITHOUT_CLASSIFICATION	0.9999996837069224	WITHOUT_CLASSIFICATION	3.1629307765048353E-7	DEFECT
// just the range axis...	WITHOUT_CLASSIFICATION	0.999999446409013	WITHOUT_CLASSIFICATION	5.535909870335237E-7	DEFECT
// get the label position..	WITHOUT_CLASSIFICATION	0.9999977843851163	WITHOUT_CLASSIFICATION	2.215614883679837E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9994698105909672	WITHOUT_CLASSIFICATION	5.301894090328943E-4	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999860758714254	WITHOUT_CLASSIFICATION	1.3924128574517436E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999820737045402	WITHOUT_CLASSIFICATION	1.7926295459847405E-5	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999978258955202	WITHOUT_CLASSIFICATION	2.1741044797798293E-6	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999999320738524	WITHOUT_CLASSIFICATION	6.79261476573593E-8	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999961256635737	WITHOUT_CLASSIFICATION	3.8743364263090215E-6	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9999994442869531	WITHOUT_CLASSIFICATION	5.557130469912686E-7	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9999968059331221	WITHOUT_CLASSIFICATION	3.1940668778391624E-6	DEFECT
//this handles the need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9999998852295426	WITHOUT_CLASSIFICATION	1.1477045738556554E-7	DEFECT
// calculate the step point	WITHOUT_CLASSIFICATION	0.9999988090586995	WITHOUT_CLASSIFICATION	1.190941300408579E-6	DEFECT
//this handles the need to perform a 'step'. // calculate the step point	WITHOUT_CLASSIFICATION	0.9999999356733803	WITHOUT_CLASSIFICATION	6.432661974316856E-8	DEFECT
// submit this data item as a candidate for the crosshair point	WITHOUT_CLASSIFICATION	0.9999993938084437	WITHOUT_CLASSIFICATION	6.061915562651101E-7	DEFECT
// create a new area polygon for the series	WITHOUT_CLASSIFICATION	0.9999994831151138	WITHOUT_CLASSIFICATION	5.168848862538363E-7	DEFECT
// the first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999985119970984	WITHOUT_CLASSIFICATION	1.4880029014683862E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989849970972	WITHOUT_CLASSIFICATION	1.015002902854677E-6	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999998876696294	WITHOUT_CLASSIFICATION	1.1233037063223665E-7	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999057286608172	WITHOUT_CLASSIFICATION	9.427133918277066E-5	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9999995508914861	WITHOUT_CLASSIFICATION	4.491085139690363E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999645764721726	WITHOUT_CLASSIFICATION	3.542352782739361E-5	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.9999988329924518	WITHOUT_CLASSIFICATION	1.1670075482229427E-6	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.999995353712988	WITHOUT_CLASSIFICATION	4.6462870120845845E-6	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999993807569632	WITHOUT_CLASSIFICATION	6.192430368883601E-7	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999957079496274	WITHOUT_CLASSIFICATION	4.292050372521146E-6	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.999999991006641	WITHOUT_CLASSIFICATION	8.993358938294108E-9	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.9999997525578407	WITHOUT_CLASSIFICATION	2.474421592397765E-7	DEFECT
// we make the clip region slightly larger than the // dataArea so that the clipped edges don't show lines // on the chart	WITHOUT_CLASSIFICATION	0.9999853374539674	WITHOUT_CLASSIFICATION	1.466254603265146E-5	DEFECT
// no change	WITHOUT_CLASSIFICATION	0.9999996196519998	WITHOUT_CLASSIFICATION	3.803480002208054E-7	DEFECT
// here we use BooleanUtilities to remain compatible with JDKs < 1.4	WITHOUT_CLASSIFICATION	0.9999909483739458	WITHOUT_CLASSIFICATION	9.051626054340844E-6	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.999999932871756	WITHOUT_CLASSIFICATION	6.712824397653554E-8	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999964715985409	WITHOUT_CLASSIFICATION	3.528401459162598E-6	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999971383453012	WITHOUT_CLASSIFICATION	2.8616546987164533E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989849970972	WITHOUT_CLASSIFICATION	1.015002902854677E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999860758714254	WITHOUT_CLASSIFICATION	1.3924128574517436E-5	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999988400163347	WITHOUT_CLASSIFICATION	1.1599836653268296E-6	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999978258955202	WITHOUT_CLASSIFICATION	2.1741044797798293E-6	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999999629125631	WITHOUT_CLASSIFICATION	3.708743694759416E-8	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999971320650839	WITHOUT_CLASSIFICATION	2.867934916052118E-6	DEFECT
// we are starting a new series path	WITHOUT_CLASSIFICATION	0.9999996082413813	WITHOUT_CLASSIFICATION	3.917586186247662E-7	DEFECT
// only draw a line if the gap between the current and // previous data point is within the threshold	WITHOUT_CLASSIFICATION	0.999999941593956	WITHOUT_CLASSIFICATION	5.840604403577817E-8	DEFECT
// we needed to get this far even for invisible items, to ensure that // seriesPath updates happened, but now there is nothing more we need // to do for non-visible items...	WITHOUT_CLASSIFICATION	0.9993110969550122	WITHOUT_CLASSIFICATION	6.889030449877283E-4	DEFECT
// this method must be overridden if you want to display images	WITHOUT_CLASSIFICATION	0.9999994150386955	WITHOUT_CLASSIFICATION	5.84961304586664E-7	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999992834485267	WITHOUT_CLASSIFICATION	7.165514732370735E-7	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999991944347476	WITHOUT_CLASSIFICATION	8.055652523270305E-7	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999965017173381	WITHOUT_CLASSIFICATION	3.4982826618949777E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9994651244234947	WITHOUT_CLASSIFICATION	5.348755765053108E-4	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9994651244234947	WITHOUT_CLASSIFICATION	5.348755765053108E-4	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999992834485267	WITHOUT_CLASSIFICATION	7.165514732370735E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // PROTECTED METHODS // These provide the opportunity to subclass the standard renderer and // create custom effects. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999951628514822	WITHOUT_CLASSIFICATION	4.837148517848934E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999991944347476	WITHOUT_CLASSIFICATION	8.055652523270305E-7	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999965017173381	WITHOUT_CLASSIFICATION	3.4982826618949777E-6	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.9999942372788685	WITHOUT_CLASSIFICATION	5.762721131553802E-6	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.9999923960626641	WITHOUT_CLASSIFICATION	7.6039373358476925E-6	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.9999923960626641	WITHOUT_CLASSIFICATION	7.6039373358476925E-6	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9975815233304919	WITHOUT_CLASSIFICATION	0.002418476669508156	DEFECT
// yOutliers can be null, but we'd prefer it to be an empty list in // that case...	WITHOUT_CLASSIFICATION	0.9993719972950792	WITHOUT_CLASSIFICATION	6.280027049207176E-4	DEFECT
/* From outlier array sort out which are outliers and put these into         * an arraylist. If there are any farouts, set the flag on the         * OutlierListCollection         */	WITHOUT_CLASSIFICATION	0.9999996053601696	WITHOUT_CLASSIFICATION	3.9463983036938944E-7	DEFECT
// draw yOutliers	WITHOUT_CLASSIFICATION	0.9999995969419633	WITHOUT_CLASSIFICATION	4.030580367534018E-7	DEFECT
// draw outliers	WITHOUT_CLASSIFICATION	0.9999997394900214	WITHOUT_CLASSIFICATION	2.6050997865953555E-7	DEFECT
// draw farout	WITHOUT_CLASSIFICATION	0.9999962307576621	WITHOUT_CLASSIFICATION	3.769242337946872E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999929380011021	WITHOUT_CLASSIFICATION	7.061998897867044E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999929380011021	WITHOUT_CLASSIFICATION	7.061998897867044E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9994651244234947	WITHOUT_CLASSIFICATION	5.348755765053108E-4	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999978258955202	WITHOUT_CLASSIFICATION	2.1741044797798293E-6	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9975815233304919	WITHOUT_CLASSIFICATION	0.002418476669508156	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999974072549438	WITHOUT_CLASSIFICATION	2.5927450562507863E-6	DEFECT
// Process outliers. Each outlier is either added to the appropriate // outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999999955460045	WITHOUT_CLASSIFICATION	4.453995577285243E-9	DEFECT
// for item labels, we have a special case because there is the // possibility to draw (a) the regular item label near to just the // upper y-value, or (b) the regular item label near the upper y-value // PLUS an additional item label near the lower y-value.	WITHOUT_CLASSIFICATION	0.999999905296198	WITHOUT_CLASSIFICATION	9.470380199090475E-8	DEFECT
// If null, don't draw line => then delegate to parent	WITHOUT_CLASSIFICATION	0.9999987572346855	WITHOUT_CLASSIFICATION	1.242765314503394E-6	DEFECT
// If null, don't draw line at all	WITHOUT_CLASSIFICATION	0.999975495767508	WITHOUT_CLASSIFICATION	2.4504232492082367E-5	DEFECT
// Now split the segment as needed	WITHOUT_CLASSIFICATION	0.9999999255678718	WITHOUT_CLASSIFICATION	7.443212821756384E-8	DEFECT
// If the segment must be splitted, insert a new point // Strict test forces to have real segments (not 2 equal points) // and avoids division by 0	WITHOUT_CLASSIFICATION	0.9999997234922791	WITHOUT_CLASSIFICATION	2.765077209264923E-7	DEFECT
// If the line is not wrapping, then parent is OK	WITHOUT_CLASSIFICATION	0.9999744004056713	WITHOUT_CLASSIFICATION	2.5599594328691184E-5	DEFECT
// calculate the highest volume in the dataset...	WITHOUT_CLASSIFICATION	0.9999792742610545	WITHOUT_CLASSIFICATION	2.072573894556825E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999974072549438	WITHOUT_CLASSIFICATION	2.5927450562507863E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999974072549438	WITHOUT_CLASSIFICATION	2.5927450562507863E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999974072549438	WITHOUT_CLASSIFICATION	2.5927450562507863E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999974072549438	WITHOUT_CLASSIFICATION	2.5927450562507863E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9994698105909672	WITHOUT_CLASSIFICATION	5.301894090328943E-4	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999997507428867	WITHOUT_CLASSIFICATION	2.4925711335446127E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999645764721726	WITHOUT_CLASSIFICATION	3.542352782739361E-5	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999999539530507	WITHOUT_CLASSIFICATION	4.604694934592193E-8	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999999629125631	WITHOUT_CLASSIFICATION	3.708743694759416E-8	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.9999202443934238	WITHOUT_CLASSIFICATION	7.975560657622829E-5	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999971320650839	WITHOUT_CLASSIFICATION	2.867934916052118E-6	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.9999967409579702	WITHOUT_CLASSIFICATION	3.259042029938065E-6	DEFECT
// The split may occur in either x splitted segments, if any, but // not in both	WITHOUT_CLASSIFICATION	0.9999985019920433	WITHOUT_CLASSIFICATION	1.4980079566214096E-6	DEFECT
// the x value is not within the axis range	WITHOUT_CLASSIFICATION	0.9999536805188232	WITHOUT_CLASSIFICATION	4.631948117682859E-5	DEFECT
// not a HighLowDataset, so just draw a line connecting this point // with the previous point...	WITHOUT_CLASSIFICATION	0.9999985203939916	WITHOUT_CLASSIFICATION	1.4796060083651586E-6	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.9999999459021299	WITHOUT_CLASSIFICATION	5.409787001736017E-8	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.9999999459021299	WITHOUT_CLASSIFICATION	5.409787001736017E-8	DEFECT
// draw the error bar for the x-interval	WITHOUT_CLASSIFICATION	0.9999939036482423	WITHOUT_CLASSIFICATION	6.0963517576647066E-6	DEFECT
// draw the error bar for the y-interval	WITHOUT_CLASSIFICATION	0.9999922275942179	WITHOUT_CLASSIFICATION	7.772405782081425E-6	DEFECT
//domainGridlinePaint;	WITHOUT_CLASSIFICATION	0.9999976888918584	WITHOUT_CLASSIFICATION	2.311108141565097E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989849970972	WITHOUT_CLASSIFICATION	1.015002902854677E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9994651244234947	WITHOUT_CLASSIFICATION	5.348755765053108E-4	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999577775114	WITHOUT_CLASSIFICATION	4.222248864067035E-8	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9994698105909672	WITHOUT_CLASSIFICATION	5.301894090328943E-4	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999991415629085	WITHOUT_CLASSIFICATION	8.584370914732765E-7	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999996221401068	WITHOUT_CLASSIFICATION	3.7785989322065283E-7	DEFECT
// handle item label drawing, now that we know all the bars have // been drawn...	WITHOUT_CLASSIFICATION	0.9999528844786653	WITHOUT_CLASSIFICATION	4.711552133469275E-5	DEFECT
// if the renderer isn't assigned to a plot, then we don't have a // dataset...	WITHOUT_CLASSIFICATION	0.999986181302263	WITHOUT_CLASSIFICATION	1.3818697736901446E-5	DEFECT
//initalize xValues, yValues, and zValues arrays.	WITHOUT_CLASSIFICATION	0.9999947956006464	WITHOUT_CLASSIFICATION	5.204399353645639E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989849970972	WITHOUT_CLASSIFICATION	1.015002902854677E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9994651244234947	WITHOUT_CLASSIFICATION	5.348755765053108E-4	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999967299757703	WITHOUT_CLASSIFICATION	3.270024229762371E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999967299757703	WITHOUT_CLASSIFICATION	3.270024229762371E-6	DEFECT
// handle positive value	WITHOUT_CLASSIFICATION	0.9999981382817045	WITHOUT_CLASSIFICATION	1.8617182956412542E-6	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.99999653577852	WITHOUT_CLASSIFICATION	3.4642214800504787E-6	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.999987696222604	WITHOUT_CLASSIFICATION	1.2303777396011157E-5	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.999987696222604	WITHOUT_CLASSIFICATION	1.2303777396011157E-5	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999972883549177	WITHOUT_CLASSIFICATION	2.7116450822776145E-6	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999999024792785	WITHOUT_CLASSIFICATION	9.752072154343143E-8	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999999707866032	WITHOUT_CLASSIFICATION	2.921339682726983E-8	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9996200064655698	WITHOUT_CLASSIFICATION	3.7999353443021527E-4	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.9999536984968423	WITHOUT_CLASSIFICATION	4.630150315767877E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999974072549438	WITHOUT_CLASSIFICATION	2.5927450562507863E-6	DEFECT
// is there an alignment adjustment to be made?	WITHOUT_CLASSIFICATION	0.9999238624902762	WITHOUT_CLASSIFICATION	7.613750972370165E-5	DEFECT
// update the crosshair point	WITHOUT_CLASSIFICATION	0.9999999246080995	WITHOUT_CLASSIFICATION	7.539190048655583E-8	DEFECT
// calculate the maximum allowed candle width from the axis...	WITHOUT_CLASSIFICATION	0.9999998005296542	WITHOUT_CLASSIFICATION	1.9947034574827444E-7	DEFECT
// Absolute value, since the relative x // positions are reversed for horizontal orientation	WITHOUT_CLASSIFICATION	0.9999999916472604	WITHOUT_CLASSIFICATION	8.352739680192752E-9	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999974072549438	WITHOUT_CLASSIFICATION	2.5927450562507863E-6	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999917114360296	WITHOUT_CLASSIFICATION	8.288563970380197E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9994651244234947	WITHOUT_CLASSIFICATION	5.348755765053108E-4	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999992834485267	WITHOUT_CLASSIFICATION	7.165514732370735E-7	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999991944347476	WITHOUT_CLASSIFICATION	8.055652523270305E-7	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999967299757703	WITHOUT_CLASSIFICATION	3.270024229762371E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999967299757703	WITHOUT_CLASSIFICATION	3.270024229762371E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999967299757703	WITHOUT_CLASSIFICATION	3.270024229762371E-6	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999965017173381	WITHOUT_CLASSIFICATION	3.4982826618949777E-6	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9214135403667818	WITHOUT_CLASSIFICATION	0.07858645963321818	DEFECT
// --- DEPRECATED CODE ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.999992758265856	WITHOUT_CLASSIFICATION	7.241734143945721E-6	DEFECT
// create the temporary directory if it doesn't exist	WITHOUT_CLASSIFICATION	0.9999990514470141	WITHOUT_CLASSIFICATION	9.485529859017865E-7	DEFECT
//  Add chart to deletion list in session	WITHOUT_CLASSIFICATION	0.9999999961596501	WITHOUT_CLASSIFICATION	3.840349868342689E-9	DEFECT
//  Set HTTP headers	WITHOUT_CLASSIFICATION	0.9999973395632573	WITHOUT_CLASSIFICATION	2.6604367427828232E-6	DEFECT
//  Replace ".." with "" //  This is to prevent access to the rest of the file system	WITHOUT_CLASSIFICATION	0.9999999481306237	WITHOUT_CLASSIFICATION	5.186937627603555E-8	DEFECT
//  Check the file exists	WITHOUT_CLASSIFICATION	0.9999990243300515	WITHOUT_CLASSIFICATION	9.756699484367495E-7	DEFECT
//  Serve it up	WITHOUT_CLASSIFICATION	0.9999958759000591	WITHOUT_CLASSIFICATION	4.1240999408873265E-6	DEFECT
// draw the block without collecting entities	WITHOUT_CLASSIFICATION	0.9999992426808104	WITHOUT_CLASSIFICATION	7.573191896544597E-7	DEFECT
// RectangleInsets is immutable => same reference in clone OK	WITHOUT_CLASSIFICATION	0.9999845419305813	WITHOUT_CLASSIFICATION	1.5458069418679962E-5	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.9999984839635947	WITHOUT_CLASSIFICATION	1.5160364052596126E-6	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.9999984839635947	WITHOUT_CLASSIFICATION	1.5160364052596126E-6	DEFECT
// determine the space required for the axis	WITHOUT_CLASSIFICATION	0.9999996705577466	WITHOUT_CLASSIFICATION	3.294422533708143E-7	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.9999967409579702	WITHOUT_CLASSIFICATION	3.259042029938065E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999997984059823	WITHOUT_CLASSIFICATION	2.0159401757587473E-7	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999917475260669	WITHOUT_CLASSIFICATION	8.252473933043553E-6	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999917475260669	WITHOUT_CLASSIFICATION	8.252473933043553E-6	DEFECT
// no need to instantiate this class   	WITHOUT_CLASSIFICATION	0.9999819608702137	WITHOUT_CLASSIFICATION	1.8039129786294177E-5	DEFECT
//yAdj = -descent - leading + (float) bounds.getHeight();	WITHOUT_CLASSIFICATION	0.9999993212935896	WITHOUT_CLASSIFICATION	6.787064104984992E-7	DEFECT
// svgClass will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999955326073557	WITHOUT_CLASSIFICATION	4.467392644312737E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999997984059823	WITHOUT_CLASSIFICATION	2.0159401757587473E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999997984059823	WITHOUT_CLASSIFICATION	2.0159401757587473E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999997984059823	WITHOUT_CLASSIFICATION	2.0159401757587473E-7	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999308961655	WITHOUT_CLASSIFICATION	6.910383449470704E-8	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999917475260669	WITHOUT_CLASSIFICATION	8.252473933043553E-6	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9999999768676523	WITHOUT_CLASSIFICATION	2.3132347667901764E-8	DEFECT
// update (x1, y1), (x2, y2) and f1 and f2 using intersections // then recheck	WITHOUT_CLASSIFICATION	0.9999978228902285	WITHOUT_CLASSIFICATION	2.17710977135132E-6	DEFECT
// first point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999999869751806	WITHOUT_CLASSIFICATION	1.3024819379441565E-8	DEFECT
// second point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999999737130958	WITHOUT_CLASSIFICATION	2.628690420121735E-8	DEFECT
// the line is visible - if it wasn't, we'd have // returned false from within the while loop above	WITHOUT_CLASSIFICATION	0.9999614747014617	WITHOUT_CLASSIFICATION	3.8525298538286554E-5	DEFECT
/*                 * Lots can go wrong while fiddling with Images, Color Models                 * & such!  If anything at all goes awry, just return the original                 * TexturePaint.  (TexturePaint's are immutable anyway, so no harm                 * done)                 */	WITHOUT_CLASSIFICATION	0.9999999983631332	WITHOUT_CLASSIFICATION	1.6368667180805117E-9	DEFECT
/* Placeholder */	WITHOUT_CLASSIFICATION	0.9999400303504408	WITHOUT_CLASSIFICATION	5.9969649559351674E-5	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9963966936656574	WITHOUT_CLASSIFICATION	0.0036033063343424636	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9963966936656574	WITHOUT_CLASSIFICATION	0.0036033063343424636	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9963966936656574	WITHOUT_CLASSIFICATION	0.0036033063343424636	DEFECT
/* (pix-buffer is large enough for all pixels of one row) */	WITHOUT_CLASSIFICATION	0.9999778023206713	WITHOUT_CLASSIFICATION	2.2197679328624005E-5	DEFECT
// RGB (+ optional Alpha which we leave // unchanged)	WITHOUT_CLASSIFICATION	0.999996434354495	WITHOUT_CLASSIFICATION	3.5656455048588682E-6	DEFECT
// Red // Green // Blue. Now map computed colour to // nearest in Palette...	WITHOUT_CLASSIFICATION	0.999998177336318	WITHOUT_CLASSIFICATION	1.8226636819924907E-6	DEFECT
// Red // Green // Blue	WITHOUT_CLASSIFICATION	0.9998411713257596	WITHOUT_CLASSIFICATION	1.5882867424048359E-4	DEFECT
/* Ignore alpha-channel -> */	WITHOUT_CLASSIFICATION	0.9999994133207115	WITHOUT_CLASSIFICATION	5.866792884670255E-7	DEFECT
// <- this is the code that actually COPIES the pixels	WITHOUT_CLASSIFICATION	0.9988685556404263	WITHOUT_CLASSIFICATION	0.0011314443595736886	DEFECT
/*         * Buffered Images may have properties, but NEVER disclose them!         * Nevertheless, just in case someone implements getPropertyNames()         * one day...         */	WITHOUT_CLASSIFICATION	0.9999892985591785	WITHOUT_CLASSIFICATION	1.0701440821503547E-5	DEFECT
// ALWAYS null	WITHOUT_CLASSIFICATION	0.9999889289497638	WITHOUT_CLASSIFICATION	1.1071050236245795E-5	DEFECT
// all methods are static, no need to instantiate	WITHOUT_CLASSIFICATION	0.9999999043461447	WITHOUT_CLASSIFICATION	9.56538552646377E-8	DEFECT
// substitute the filtered URL list	WITHOUT_CLASSIFICATION	0.999999943767883	WITHOUT_CLASSIFICATION	5.6232116923930874E-8	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.9999999255989271	WITHOUT_CLASSIFICATION	7.440107284571228E-8	DEFECT
// horizontal pass	WITHOUT_CLASSIFICATION	0.9999942877483924	WITHOUT_CLASSIFICATION	5.712251607702047E-6	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9999999708671494	WITHOUT_CLASSIFICATION	2.9132850632020667E-8	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9999999708671494	WITHOUT_CLASSIFICATION	2.9132850632020667E-8	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999991017452438	WITHOUT_CLASSIFICATION	8.982547562984036E-7	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999991017452438	WITHOUT_CLASSIFICATION	8.982547562984036E-7	DEFECT
// vertical pass	WITHOUT_CLASSIFICATION	0.9999917028173889	WITHOUT_CLASSIFICATION	8.297182611086883E-6	DEFECT
//get the coordinates of the original GradientPaint	WITHOUT_CLASSIFICATION	0.9999999942282443	WITHOUT_CLASSIFICATION	5.771755795021432E-9	DEFECT
//get the coordinates of the shape that is to be filled	WITHOUT_CLASSIFICATION	0.9999999294259597	WITHOUT_CLASSIFICATION	7.057404031558762E-8	DEFECT
//reserve variables to store the coordinates of the resulting GradientPaint	WITHOUT_CLASSIFICATION	0.9999999997948297	WITHOUT_CLASSIFICATION	2.051703453359375E-10	DEFECT
//start point is upper left corner	WITHOUT_CLASSIFICATION	0.9999986936046837	WITHOUT_CLASSIFICATION	1.3063953162254322E-6	DEFECT
//end point is lower right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9999999309962077	WITHOUT_CLASSIFICATION	6.900379240175395E-8	DEFECT
//start point is lower left right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9999999693621848	WITHOUT_CLASSIFICATION	3.0637815234849834E-8	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.9999996033878387	WITHOUT_CLASSIFICATION	3.966121612641986E-7	DEFECT
//end point is either lower left corner --> vertical gradient //or end point is upper right corner --> horizontal gradient	WITHOUT_CLASSIFICATION	0.999999875733081	WITHOUT_CLASSIFICATION	1.2426691890446732E-7	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.9999999403212424	WITHOUT_CLASSIFICATION	5.96787575522122E-8	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999998060619026	WITHOUT_CLASSIFICATION	1.9393809742135337E-7	DEFECT
// CASE 1 : Comparing to another ComparableObjectItem object // ---------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999916890524514	WITHOUT_CLASSIFICATION	8.31094754861167E-6	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.999993616743798	WITHOUT_CLASSIFICATION	6.383256201924971E-6	DEFECT
// consider these to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999980164580681	WITHOUT_CLASSIFICATION	1.983541931842858E-6	DEFECT
// the row may not have an entry for this key, in which case the // return value is null	WITHOUT_CLASSIFICATION	0.9987129631965104	WITHOUT_CLASSIFICATION	0.0012870368034896044	DEFECT
// check that the column key is defined in the 2D structure	WITHOUT_CLASSIFICATION	0.9999999520877235	WITHOUT_CLASSIFICATION	4.791227645333863E-8	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9999746620533007	WITHOUT_CLASSIFICATION	2.5337946699301795E-5	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9999746620533007	WITHOUT_CLASSIFICATION	2.5337946699301795E-5	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.9999985196396081	WITHOUT_CLASSIFICATION	1.4803603919682042E-6	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.9999985196396081	WITHOUT_CLASSIFICATION	1.4803603919682042E-6	DEFECT
//int columnIndex = getColumnIndex(columnKey);	WITHOUT_CLASSIFICATION	0.999998365862822	WITHOUT_CLASSIFICATION	1.6341371779932395E-6	DEFECT
// for the keys, a shallow copy should be fine because keys // should be immutable...	WITHOUT_CLASSIFICATION	0.9999907828155659	WITHOUT_CLASSIFICATION	9.217184434235996E-6	DEFECT
// but the row data requires a deep copy	WITHOUT_CLASSIFICATION	0.9999972869912673	WITHOUT_CLASSIFICATION	2.71300873257392E-6	DEFECT
// already know 'a' isn't null	WITHOUT_CLASSIFICATION	0.9999262353194122	WITHOUT_CLASSIFICATION	7.3764680587777E-5	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999998263170806	WITHOUT_CLASSIFICATION	1.736829194341881E-7	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999998263170806	WITHOUT_CLASSIFICATION	1.736829194341881E-7	DEFECT
// this will include the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.9993084104851381	WITHOUT_CLASSIFICATION	6.915895148619441E-4	DEFECT
// this includes the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.9997770315708918	WITHOUT_CLASSIFICATION	2.2296842910805943E-4	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9999718200681025	WITHOUT_CLASSIFICATION	2.8179931897540003E-5	DEFECT
// set up the category names...	WITHOUT_CLASSIFICATION	0.9999997761302025	WITHOUT_CLASSIFICATION	2.238697975265815E-7	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999995897610436	WITHOUT_CLASSIFICATION	4.102389563000264E-7	DEFECT
// fetch the value...	WITHOUT_CLASSIFICATION	0.9999895566513803	WITHOUT_CLASSIFICATION	1.0443348619572136E-5	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9999332436024827	WITHOUT_CLASSIFICATION	6.675639751726441E-5	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9999332436024827	WITHOUT_CLASSIFICATION	6.675639751726441E-5	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.9998758531095694	WITHOUT_CLASSIFICATION	1.2414689043058436E-4	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.9999979834378483	WITHOUT_CLASSIFICATION	2.0165621518133993E-6	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.9999979834378483	WITHOUT_CLASSIFICATION	2.0165621518133993E-6	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999982076973483	WITHOUT_CLASSIFICATION	1.7923026516872387E-6	DEFECT
// Find min, max for the x and y axes	WITHOUT_CLASSIFICATION	0.9999943731330612	WITHOUT_CLASSIFICATION	5.626866938813022E-6	DEFECT
// Determine the cell size	WITHOUT_CLASSIFICATION	0.999999885821715	WITHOUT_CLASSIFICATION	1.1417828506941348E-7	DEFECT
// Generate the grid	WITHOUT_CLASSIFICATION	0.999999103043591	WITHOUT_CLASSIFICATION	8.969564090151546E-7	DEFECT
// Map the nongrid data into the new regular grid	WITHOUT_CLASSIFICATION	0.9999999603341764	WITHOUT_CLASSIFICATION	3.9665823576336814E-8	DEFECT
// scale by the inverse of distance^power	WITHOUT_CLASSIFICATION	0.9999999814493635	WITHOUT_CLASSIFICATION	1.855063655449911E-8	DEFECT
//remove distance of the sum	WITHOUT_CLASSIFICATION	0.9999999199254042	WITHOUT_CLASSIFICATION	8.007459576794264E-8	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999998263170806	WITHOUT_CLASSIFICATION	1.736829194341881E-7	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9999718200681025	WITHOUT_CLASSIFICATION	2.8179931897540003E-5	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999991765471	WITHOUT_CLASSIFICATION	8.234529299187621E-10	DEFECT
// the CategoryDataset interface expects a list of categories, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999989963237305	WITHOUT_CLASSIFICATION	1.0036762694721214E-6	DEFECT
// the CategoryDataset interface expects a list of series, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999992014092899	WITHOUT_CLASSIFICATION	7.985907101833344E-7	DEFECT
// if d is real small set the inverse to a large number // to avoid INF	WITHOUT_CLASSIFICATION	0.9999999926377078	WITHOUT_CLASSIFICATION	7.3622922616486185E-9	DEFECT
//store data as Long	WITHOUT_CLASSIFICATION	0.9999999187992291	WITHOUT_CLASSIFICATION	8.120077084349848E-8	DEFECT
// store Number as Double	WITHOUT_CLASSIFICATION	0.9999999325479674	WITHOUT_CLASSIFICATION	6.745203262045601E-8	DEFECT
// check if starting new column	WITHOUT_CLASSIFICATION	0.999999975283752	WITHOUT_CLASSIFICATION	2.4716247944906698E-8	DEFECT
//store index where new //column starts	WITHOUT_CLASSIFICATION	0.9999995372499638	WITHOUT_CLASSIFICATION	4.627500361343657E-7	DEFECT
// set x to most recent value	WITHOUT_CLASSIFICATION	0.9999998097799051	WITHOUT_CLASSIFICATION	1.902200947738877E-7	DEFECT
// create array xIndex to hold // new column indices	WITHOUT_CLASSIFICATION	0.9999991388019847	WITHOUT_CLASSIFICATION	8.611980152764115E-7	DEFECT
// store y and z axes // as Doubles	WITHOUT_CLASSIFICATION	0.9999998551805132	WITHOUT_CLASSIFICATION	1.4481948691022564E-7	DEFECT
// calculate constant values	WITHOUT_CLASSIFICATION	0.9999787780975778	WITHOUT_CLASSIFICATION	2.122190242213482E-5	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.9820828572354717	WITHOUT_CLASSIFICATION	0.017917142764528254	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999995974156799	WITHOUT_CLASSIFICATION	4.0258432005672087E-7	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999956260904569	WITHOUT_CLASSIFICATION	4.373909543130036E-6	DEFECT
//step through all the values and add them to the hash	WITHOUT_CLASSIFICATION	0.9999746065590712	WITHOUT_CLASSIFICATION	2.539344092878933E-5	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999989943456835	WITHOUT_CLASSIFICATION	1.005654316514248E-6	DEFECT
// can't find any differences	WITHOUT_CLASSIFICATION	0.9998491605919577	WITHOUT_CLASSIFICATION	1.5083940804237674E-4	DEFECT
// now try to instantiate this ;-)	WITHOUT_CLASSIFICATION	0.9999949257334325	WITHOUT_CLASSIFICATION	5.074266567450922E-6	DEFECT
//  Create new dataset with keys above threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9999755421318938	WITHOUT_CLASSIFICATION	2.4457868106190468E-5	DEFECT
//  Do not add key to dataset	WITHOUT_CLASSIFICATION	0.9999917498020775	WITHOUT_CLASSIFICATION	8.250197922544794E-6	DEFECT
//  Add key to dataset	WITHOUT_CLASSIFICATION	0.9999994747534757	WITHOUT_CLASSIFICATION	5.252465242209361E-7	DEFECT
//  Add other category if applicable	WITHOUT_CLASSIFICATION	0.9999996587185601	WITHOUT_CLASSIFICATION	3.41281439847296E-7	DEFECT
// now do the work...	WITHOUT_CLASSIFICATION	0.9994813482564868	WITHOUT_CLASSIFICATION	5.186517435131439E-4	DEFECT
// if the dataset implements DomainInfo, life is easier	WITHOUT_CLASSIFICATION	0.999999968002312	WITHOUT_CLASSIFICATION	3.1997687996974543E-8	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.9999999452468062	WITHOUT_CLASSIFICATION	5.475319375742587E-8	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.9999944790664594	WITHOUT_CLASSIFICATION	5.5209335406149375E-6	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.9999999452468062	WITHOUT_CLASSIFICATION	5.475319375742587E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997175800341	WITHOUT_CLASSIFICATION	2.824199657887137E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999992691434075	WITHOUT_CLASSIFICATION	7.308565925575976E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997327891149	WITHOUT_CLASSIFICATION	2.6721088507781766E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999851916701	WITHOUT_CLASSIFICATION	1.4808329893908503E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999799551686	WITHOUT_CLASSIFICATION	2.004483131274112E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // New Methods ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999984007499829	WITHOUT_CLASSIFICATION	1.5992500171118322E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // Private ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999979564902193	WITHOUT_CLASSIFICATION	2.043509780668608E-6	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999991765471	WITHOUT_CLASSIFICATION	8.234529299187621E-10	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9999989269127422	WITHOUT_CLASSIFICATION	1.073087257783803E-6	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9999989269127422	WITHOUT_CLASSIFICATION	1.073087257783803E-6	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999999476356556	WITHOUT_CLASSIFICATION	5.236434440406955E-8	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999999476356556	WITHOUT_CLASSIFICATION	5.236434440406955E-8	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999999476356556	WITHOUT_CLASSIFICATION	5.236434440406955E-8	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.9999998610656133	WITHOUT_CLASSIFICATION	1.3893438661185395E-7	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.9999998610656133	WITHOUT_CLASSIFICATION	1.3893438661185395E-7	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999996541247472	WITHOUT_CLASSIFICATION	3.4587525280178324E-7	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999996541247472	WITHOUT_CLASSIFICATION	3.4587525280178324E-7	DEFECT
// handle special case of BoxAndWhiskerXYDataset	WITHOUT_CLASSIFICATION	0.9999984575191497	WITHOUT_CLASSIFICATION	1.5424808502131237E-6	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.9999998726756005	WITHOUT_CLASSIFICATION	1.2732439948387853E-7	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.9999998726756005	WITHOUT_CLASSIFICATION	1.2732439948387853E-7	DEFECT
// hasn't implemented DomainInfo, so iterate...	WITHOUT_CLASSIFICATION	0.9999798705001145	WITHOUT_CLASSIFICATION	2.012949988552376E-5	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.999960258469807	WITHOUT_CLASSIFICATION	3.9741530193125634E-5	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.999960258469807	WITHOUT_CLASSIFICATION	3.9741530193125634E-5	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9988998725181755	WITHOUT_CLASSIFICATION	0.00110012748182453	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9988998725181755	WITHOUT_CLASSIFICATION	0.00110012748182453	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9988998725181755	WITHOUT_CLASSIFICATION	0.00110012748182453	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999985359362337	WITHOUT_CLASSIFICATION	1.464063766434758E-6	DEFECT
// create an array holding the group indices for each series...	WITHOUT_CLASSIFICATION	0.9999821679226558	WITHOUT_CLASSIFICATION	1.7832077344183963E-5	DEFECT
// minimum and maximum for each group...	WITHOUT_CLASSIFICATION	0.9999985317304526	WITHOUT_CLASSIFICATION	1.4682695474572603E-6	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999991415629085	WITHOUT_CLASSIFICATION	8.584370914732765E-7	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999991415629085	WITHOUT_CLASSIFICATION	8.584370914732765E-7	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9999856440828032	WITHOUT_CLASSIFICATION	1.4355917196824288E-5	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999982076973483	WITHOUT_CLASSIFICATION	1.7923026516872387E-6	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999989943456835	WITHOUT_CLASSIFICATION	1.005654316514248E-6	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999989943456835	WITHOUT_CLASSIFICATION	1.005654316514248E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999992691434075	WITHOUT_CLASSIFICATION	7.308565925575976E-7	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999991765471	WITHOUT_CLASSIFICATION	8.234529299187621E-10	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999985359362337	WITHOUT_CLASSIFICATION	1.464063766434758E-6	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999985359362337	WITHOUT_CLASSIFICATION	1.464063766434758E-6	DEFECT
// we don't know anything about the ordering of the x-values, // so we iterate until we find the first crossing of x (if any) // we know there are at least 2 items in the series at this point	WITHOUT_CLASSIFICATION	0.9999648280270026	WITHOUT_CLASSIFICATION	3.5171972997492614E-5	DEFECT
// delegate null check on dataset	WITHOUT_CLASSIFICATION	0.9999998392936477	WITHOUT_CLASSIFICATION	1.607063524012553E-7	DEFECT
// exact match on first item	WITHOUT_CLASSIFICATION	0.999999289366347	WITHOUT_CLASSIFICATION	7.106336531548843E-7	DEFECT
// no crossing of x	WITHOUT_CLASSIFICATION	0.9999998412994615	WITHOUT_CLASSIFICATION	1.5870053853951452E-7	DEFECT
// spanning match	WITHOUT_CLASSIFICATION	0.9999994990494185	WITHOUT_CLASSIFICATION	5.009505813833928E-7	DEFECT
// exact match	WITHOUT_CLASSIFICATION	0.9999970303441507	WITHOUT_CLASSIFICATION	2.9696558493260746E-6	DEFECT
// maps our series into our parent's	WITHOUT_CLASSIFICATION	0.999998839683708	WITHOUT_CLASSIFICATION	1.160316292096295E-6	DEFECT
// prior to 1.0.14, we just fired a PropertyChange - so we need to // keep doing this	WITHOUT_CLASSIFICATION	0.9999994089900963	WITHOUT_CLASSIFICATION	5.910099037164785E-7	DEFECT
// no new methods added.	WITHOUT_CLASSIFICATION	0.999997110495357	WITHOUT_CLASSIFICATION	2.8895046430405373E-6	DEFECT
// first line contains column keys	WITHOUT_CLASSIFICATION	0.9999964892634826	WITHOUT_CLASSIFICATION	3.5107365174694798E-6	DEFECT
// remaining lines contain a row key and data values	WITHOUT_CLASSIFICATION	0.9999807453497078	WITHOUT_CLASSIFICATION	1.925465029218062E-5	DEFECT
// first field contains the row key	WITHOUT_CLASSIFICATION	0.9999966830414847	WITHOUT_CLASSIFICATION	3.316958515268361E-6	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999964715985409	WITHOUT_CLASSIFICATION	3.528401459162598E-6	DEFECT
// remaining fields contain values	WITHOUT_CLASSIFICATION	0.9999959634344927	WITHOUT_CLASSIFICATION	4.036565507281972E-6	DEFECT
// Remove any previous old data	WITHOUT_CLASSIFICATION	0.9999714901778292	WITHOUT_CLASSIFICATION	2.8509822170841666E-5	DEFECT
// first column contains the row key...	WITHOUT_CLASSIFICATION	0.9999846468804161	WITHOUT_CLASSIFICATION	1.535311958390849E-5	DEFECT
// suppress (value defaults to null)	WITHOUT_CLASSIFICATION	0.9999997165347784	WITHOUT_CLASSIFICATION	2.8346522161550857E-7	DEFECT
// not a value, can't use it (defaults to null)	WITHOUT_CLASSIFICATION	0.9998061752070282	WITHOUT_CLASSIFICATION	1.9382479297175886E-4	DEFECT
/// First column is X data	WITHOUT_CLASSIFICATION	0.9999973915809112	WITHOUT_CLASSIFICATION	2.608419088868463E-6	DEFECT
/// Get the column names and cache them.	WITHOUT_CLASSIFICATION	0.9999993822316059	WITHOUT_CLASSIFICATION	6.177683941838495E-7	DEFECT
// Might need to add, to free memory from any previous result sets	WITHOUT_CLASSIFICATION	0.9999438851977791	WITHOUT_CLASSIFICATION	5.611480222103729E-5	DEFECT
// Are we working with a time series.	WITHOUT_CLASSIFICATION	0.9999921723649401	WITHOUT_CLASSIFICATION	7.827635059915253E-6	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999998263170806	WITHOUT_CLASSIFICATION	1.736829194341881E-7	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999998263170806	WITHOUT_CLASSIFICATION	1.736829194341881E-7	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999995897610436	WITHOUT_CLASSIFICATION	4.102389563000264E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997175800341	WITHOUT_CLASSIFICATION	2.824199657887137E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999851916701	WITHOUT_CLASSIFICATION	1.4808329893908503E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999799551686	WITHOUT_CLASSIFICATION	2.004483131274112E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999799551686	WITHOUT_CLASSIFICATION	2.004483131274112E-8	DEFECT
// if this series belongs to a dataset, the dataset might veto the // change if it results in two series within the dataset having the // same key	WITHOUT_CLASSIFICATION	0.9999584032931895	WITHOUT_CLASSIFICATION	4.1596706810462345E-5	DEFECT
// see comments about priority of // 10 in validateObject()	WITHOUT_CLASSIFICATION	0.9999709029474522	WITHOUT_CLASSIFICATION	2.9097052547831252E-5	DEFECT
// first field is ignored, since // column 0 is for row keys	WITHOUT_CLASSIFICATION	0.9999997095068639	WITHOUT_CLASSIFICATION	2.9049313604475933E-7	DEFECT
// Get all rows. // rows = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999994514524528	WITHOUT_CLASSIFICATION	5.485475471695721E-7	DEFECT
/// Determine max and min values.	WITHOUT_CLASSIFICATION	0.9999975846184975	WITHOUT_CLASSIFICATION	2.415381502385115E-6	DEFECT
// Tell the listeners a new table has arrived.	WITHOUT_CLASSIFICATION	0.9999976910602155	WITHOUT_CLASSIFICATION	2.3089397844577603E-6	DEFECT
// fill the bins	WITHOUT_CLASSIFICATION	0.9999968521811782	WITHOUT_CLASSIFICATION	3.1478188217692725E-6	DEFECT
// generic map for each series	WITHOUT_CLASSIFICATION	0.9999996808972365	WITHOUT_CLASSIFICATION	3.191027635337602E-7	DEFECT
// pretty sure this shouldn't ever happen	WITHOUT_CLASSIFICATION	0.9999524310758181	WITHOUT_CLASSIFICATION	4.7568924181832695E-5	DEFECT
// lower bounds are the same	WITHOUT_CLASSIFICATION	0.999997755418159	WITHOUT_CLASSIFICATION	2.2445818409325276E-6	DEFECT
// overridden to make public	WITHOUT_CLASSIFICATION	0.9999956581882686	WITHOUT_CLASSIFICATION	4.341811731284238E-6	DEFECT
// update the cached range values...	WITHOUT_CLASSIFICATION	0.9999997551650136	WITHOUT_CLASSIFICATION	2.448349864184331E-7	DEFECT
// check that the new bin doesn't overlap with any existing bin	WITHOUT_CLASSIFICATION	0.9999944594491631	WITHOUT_CLASSIFICATION	5.540550836827469E-6	DEFECT
// pass values to other constructor	WITHOUT_CLASSIFICATION	0.9999997743546485	WITHOUT_CLASSIFICATION	2.2564535158416758E-7	DEFECT
// update cached min and max values	WITHOUT_CLASSIFICATION	0.9999987175222101	WITHOUT_CLASSIFICATION	1.2824777898449814E-6	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999999173859864	WITHOUT_CLASSIFICATION	8.261401361443112E-8	DEFECT
// check for zero pivot element	WITHOUT_CLASSIFICATION	0.9999996494482299	WITHOUT_CLASSIFICATION	3.505517700804159E-7	DEFECT
// treat nulls the same as NaNs	WITHOUT_CLASSIFICATION	0.999982469084213	WITHOUT_CLASSIFICATION	1.7530915787018453E-5	DEFECT
// calculate the sum and count	WITHOUT_CLASSIFICATION	0.9999988647484175	WITHOUT_CLASSIFICATION	1.135251582537861E-6	DEFECT
// intercept	WITHOUT_CLASSIFICATION	0.9999991251215677	WITHOUT_CLASSIFICATION	8.748784323478258E-7	DEFECT
// sum of x, x^2, x * y, y	WITHOUT_CLASSIFICATION	0.9999995298864247	WITHOUT_CLASSIFICATION	4.701135752364261E-7	DEFECT
// holds the moving average sum	WITHOUT_CLASSIFICATION	0.9999973066550567	WITHOUT_CLASSIFICATION	2.6933449433795756E-6	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999999173859864	WITHOUT_CLASSIFICATION	8.261401361443112E-8	DEFECT
// make sure bins[bins.length]'s upper boundary ends at maximum // to avoid the rounding issue. the bins[0] lower boundary is // guaranteed start from min	WITHOUT_CLASSIFICATION	0.9999999945610956	WITHOUT_CLASSIFICATION	5.438904364352949E-9	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.9999961154596094	WITHOUT_CLASSIFICATION	3.884540390625454E-6	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999988104161548	WITHOUT_CLASSIFICATION	1.189583845255077E-6	DEFECT
// ********* stat function for linear slope ******** // y = a + bx // a = ybar - b * xbar //     sum(x * y) - (sum (x) * sum(y)) / n // b = ------------------------------------ //     sum (x^2) - (sum(x)^2 / n // *************************************************	WITHOUT_CLASSIFICATION	0.9999980811444618	WITHOUT_CLASSIFICATION	1.9188555383432794E-6	DEFECT
// update cached range values	WITHOUT_CLASSIFICATION	0.9999998103819918	WITHOUT_CLASSIFICATION	1.896180082383315E-7	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999967299757703	WITHOUT_CLASSIFICATION	3.270024229762371E-6	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.9999944790664594	WITHOUT_CLASSIFICATION	5.5209335406149375E-6	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.9999961154596094	WITHOUT_CLASSIFICATION	3.884540390625454E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999931440756369	WITHOUT_CLASSIFICATION	6.855924363068029E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999974888271084	WITHOUT_CLASSIFICATION	2.51117289152246E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999931951851524	WITHOUT_CLASSIFICATION	6.8048148476506075E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999931951851524	WITHOUT_CLASSIFICATION	6.8048148476506075E-6	DEFECT
// we are at the last minute in the hour...	WITHOUT_CLASSIFICATION	0.9999742573292469	WITHOUT_CLASSIFICATION	2.5742670753056994E-5	DEFECT
// CASE 1 : Comparing to another Minute object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999966954544416	WITHOUT_CLASSIFICATION	3.3045455584279356E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999909566891239	WITHOUT_CLASSIFICATION	9.04331087613735E-6	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9977363603583647	WITHOUT_CLASSIFICATION	0.0022636396416352957	DEFECT
// remove old items and notify if necessary	WITHOUT_CLASSIFICATION	0.9999992301095671	WITHOUT_CLASSIFICATION	7.698904328613131E-7	DEFECT
// make the change (if it's not a duplicate time period)...	WITHOUT_CLASSIFICATION	0.9999988224535895	WITHOUT_CLASSIFICATION	1.1775464104630826E-6	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9992983808561781	WITHOUT_CLASSIFICATION	7.016191438218677E-4	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9992983808561781	WITHOUT_CLASSIFICATION	7.016191438218677E-4	DEFECT
// find the serial index of the period specified by 'latest'	WITHOUT_CLASSIFICATION	0.999999996464802	WITHOUT_CLASSIFICATION	3.535197983800385E-9	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999998060619026	WITHOUT_CLASSIFICATION	1.9393809742135337E-7	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999931440756369	WITHOUT_CLASSIFICATION	6.855924363068029E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999931440756369	WITHOUT_CLASSIFICATION	6.855924363068029E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999974888271084	WITHOUT_CLASSIFICATION	2.51117289152246E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999931951851524	WITHOUT_CLASSIFICATION	6.8048148476506075E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999931951851524	WITHOUT_CLASSIFICATION	6.8048148476506075E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999909566891239	WITHOUT_CLASSIFICATION	9.04331087613735E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999909566891239	WITHOUT_CLASSIFICATION	9.04331087613735E-6	DEFECT
// since the items are ordered, we could be more clever here and avoid // iterating over all the data	WITHOUT_CLASSIFICATION	0.999999704785774	WITHOUT_CLASSIFICATION	2.9521422594492156E-7	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9928838978447775	WITHOUT_CLASSIFICATION	0.007116102155222549	DEFECT
// figure out if we need to iterate through all the y-values // to find the revised minY / maxY	WITHOUT_CLASSIFICATION	0.99999995710477	WITHOUT_CLASSIFICATION	4.2895230077282E-8	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.9999830005403496	WITHOUT_CLASSIFICATION	1.69994596504065E-5	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.9999830005403496	WITHOUT_CLASSIFICATION	1.69994596504065E-5	DEFECT
// start is after last data item	WITHOUT_CLASSIFICATION	0.9999986401550998	WITHOUT_CLASSIFICATION	1.3598449002491741E-6	DEFECT
// update the time series appropriately	WITHOUT_CLASSIFICATION	0.9999982818108787	WITHOUT_CLASSIFICATION	1.718189121293064E-6	DEFECT
// we are at the first hour in the day...	WITHOUT_CLASSIFICATION	0.9999860550967656	WITHOUT_CLASSIFICATION	1.3944903234350394E-5	DEFECT
// we are at the last hour in the day...	WITHOUT_CLASSIFICATION	0.9999308272028503	WITHOUT_CLASSIFICATION	6.917279714973996E-5	DEFECT
// CASE 1 : Comparing to another Hour object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.999996318992092	WITHOUT_CLASSIFICATION	3.681007907978042E-6	DEFECT
// if the hour is 0 - 23 then create an hour	WITHOUT_CLASSIFICATION	0.9999931816239138	WITHOUT_CLASSIFICATION	6.818376086219036E-6	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9999735486302587	WITHOUT_CLASSIFICATION	2.645136974130424E-5	DEFECT
// create the year...	WITHOUT_CLASSIFICATION	0.9999919803347052	WITHOUT_CLASSIFICATION	8.019665294867358E-6	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999981920594309	WITHOUT_CLASSIFICATION	1.8079405691398786E-6	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.999955246694767	WITHOUT_CLASSIFICATION	4.4753305233041015E-5	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.999955246694767	WITHOUT_CLASSIFICATION	4.4753305233041015E-5	DEFECT
// remove the point i-periodCount out of the rolling sum.	WITHOUT_CLASSIFICATION	0.9999999224451359	WITHOUT_CLASSIFICATION	7.755486407400661E-8	DEFECT
// an arbitrary safe default value	WITHOUT_CLASSIFICATION	0.9999986235743331	WITHOUT_CLASSIFICATION	1.3764256668978892E-6	DEFECT
// default value;	WITHOUT_CLASSIFICATION	0.9999965662737161	WITHOUT_CLASSIFICATION	3.433726283908612E-6	DEFECT
// as a class variable, initializes == 0	WITHOUT_CLASSIFICATION	0.9999992718495289	WITHOUT_CLASSIFICATION	7.281504711237217E-7	DEFECT
// cached values used for interface DomainInfo:	WITHOUT_CLASSIFICATION	0.9999996137780285	WITHOUT_CLASSIFICATION	3.8622197152249405E-7	DEFECT
//rangeGridlinePaint;	WITHOUT_CLASSIFICATION	0.9999970685474469	WITHOUT_CLASSIFICATION	2.9314525531886643E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999931440756369	WITHOUT_CLASSIFICATION	6.855924363068029E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999974888271084	WITHOUT_CLASSIFICATION	2.51117289152246E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999974888271084	WITHOUT_CLASSIFICATION	2.51117289152246E-6	DEFECT
// autoinit's to null.	WITHOUT_CLASSIFICATION	0.9999996493119182	WITHOUT_CLASSIFICATION	3.506880818732269E-7	DEFECT
// CASE 1 : Comparing to another Year object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999907298241354	WITHOUT_CLASSIFICATION	9.270175864705414E-6	DEFECT
// if the initial averaging period is to be excluded, then // calculate the lowest x-value to have an average calculated...	WITHOUT_CLASSIFICATION	0.9999988261791192	WITHOUT_CLASSIFICATION	1.1738208808276173E-6	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999695023079833	WITHOUT_CLASSIFICATION	3.0497692016656902E-5	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999695023079833	WITHOUT_CLASSIFICATION	3.0497692016656902E-5	DEFECT
// if the initial averaging period is to be excluded, then // calculate the index of the // first data item to have an average calculated...	WITHOUT_CLASSIFICATION	0.9999992945510411	WITHOUT_CLASSIFICATION	7.054489588750056E-7	DEFECT
// Cached values used for interface RangeInfo: (note minValue pinned at 0) //   A single set of extrema covers the entire SeriesCollection	WITHOUT_CLASSIFICATION	0.999993715644779	WITHOUT_CLASSIFICATION	6.284355220928778E-6	DEFECT
///  .. etc....	WITHOUT_CLASSIFICATION	0.9999584251450198	WITHOUT_CLASSIFICATION	4.1574854980286464E-5	DEFECT
/// Expand the following for all defined TimePeriods:	WITHOUT_CLASSIFICATION	0.9999993774946903	WITHOUT_CLASSIFICATION	6.225053097439358E-7	DEFECT
// initialize the members of "seriesNames" array so they won't be null:	WITHOUT_CLASSIFICATION	0.9999973603679777	WITHOUT_CLASSIFICATION	2.639632022333082E-6	DEFECT
//{ // deep copy from values[], caller // can safely discard that array	WITHOUT_CLASSIFICATION	0.9999938668738888	WITHOUT_CLASSIFICATION	6.133126111186716E-6	DEFECT
// Avoid IndexOutOfBoundsException:	WITHOUT_CLASSIFICATION	0.9999958990911038	WITHOUT_CLASSIFICATION	4.10090889623794E-6	DEFECT
// But if that series array already exists, just overwrite its contents	WITHOUT_CLASSIFICATION	0.9999992213857035	WITHOUT_CLASSIFICATION	7.78614296472262E-7	DEFECT
// But if that series array already exists, just overwrite its contents //synchronized(this) //{	WITHOUT_CLASSIFICATION	0.9999994968974791	WITHOUT_CLASSIFICATION	5.031025208075107E-7	DEFECT
// all arrays equal length, // so ignore argument:	WITHOUT_CLASSIFICATION	0.9999999742377687	WITHOUT_CLASSIFICATION	2.5762231250876865E-8	DEFECT
// Methods for managing the FIFO's:	WITHOUT_CLASSIFICATION	0.9999523322864288	WITHOUT_CLASSIFICATION	4.766771357122993E-5	DEFECT
// no translation needed	WITHOUT_CLASSIFICATION	0.9999998253083972	WITHOUT_CLASSIFICATION	1.746916028874475E-7	DEFECT
// else  [implicit here]	WITHOUT_CLASSIFICATION	0.9999991174754437	WITHOUT_CLASSIFICATION	8.825245562133903E-7	DEFECT
// newestAt takes value previously held // by oldestAT	WITHOUT_CLASSIFICATION	0.9999857921583829	WITHOUT_CLASSIFICATION	1.420784161704005E-5	DEFECT
// if the oldest data contained a maximum Y-value, invalidate the stored //   Y-max and Y-range data:	WITHOUT_CLASSIFICATION	0.9999999987750919	WITHOUT_CLASSIFICATION	1.2249080660652364E-9	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.99999919255535	WITHOUT_CLASSIFICATION	8.074446500023748E-7	DEFECT
//  wipe the next (about to be used) set of data slots	WITHOUT_CLASSIFICATION	0.9999999970079141	WITHOUT_CLASSIFICATION	2.9920860173729064E-9	DEFECT
// Update the array of TimePeriods:	WITHOUT_CLASSIFICATION	0.9999988163837796	WITHOUT_CLASSIFICATION	1.1836162202841444E-6	DEFECT
// Now advance "oldestAt", wrapping at end of the array	WITHOUT_CLASSIFICATION	0.9999994277966403	WITHOUT_CLASSIFICATION	5.722033597195852E-7	DEFECT
// Update the domain limits: //(time is kept in msec)	WITHOUT_CLASSIFICATION	0.9999471102607426	WITHOUT_CLASSIFICATION	5.288973925741753E-5	DEFECT
//  If data can be < 0, the next 2 methods should be modified	WITHOUT_CLASSIFICATION	0.9999996295315348	WITHOUT_CLASSIFICATION	3.7046846515985407E-7	DEFECT
// index to select the "series"	WITHOUT_CLASSIFICATION	0.999999000710372	WITHOUT_CLASSIFICATION	9.992896280566904E-7	DEFECT
/* // "Extras" found useful when analyzing/verifying class behavior:    public Number getUntranslatedXValue(int series, int item)    {      return super.getXValue(series, item);    }    public float getUntranslatedY(int series, int item)    {      return super.getY(series, item);    }  */	WITHOUT_CLASSIFICATION	0.9999999878342893	WITHOUT_CLASSIFICATION	1.2165710678358106E-8	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9999989532495035	WITHOUT_CLASSIFICATION	1.046750496497695E-6	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9999989532495035	WITHOUT_CLASSIFICATION	1.046750496497695E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998670395850205	WITHOUT_CLASSIFICATION	1.3296041497944762E-4	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999962211360366	WITHOUT_CLASSIFICATION	3.7788639635117415E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998670395850205	WITHOUT_CLASSIFICATION	1.3296041497944762E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998670395850205	WITHOUT_CLASSIFICATION	1.3296041497944762E-4	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999956260904569	WITHOUT_CLASSIFICATION	4.373909543130036E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999931440756369	WITHOUT_CLASSIFICATION	6.855924363068029E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999974888271084	WITHOUT_CLASSIFICATION	2.51117289152246E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999962453681294	WITHOUT_CLASSIFICATION	3.754631870701947E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999974888271084	WITHOUT_CLASSIFICATION	2.51117289152246E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999931951851524	WITHOUT_CLASSIFICATION	6.8048148476506075E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999931951851524	WITHOUT_CLASSIFICATION	6.8048148476506075E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999909566891239	WITHOUT_CLASSIFICATION	9.04331087613735E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999909566891239	WITHOUT_CLASSIFICATION	9.04331087613735E-6	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9999735486302587	WITHOUT_CLASSIFICATION	2.645136974130424E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999996477802168	WITHOUT_CLASSIFICATION	3.522197833163708E-7	DEFECT
// appendData() writes new data at the index position given by newestAt/ // When adding new data dynamically, use advanceTime(), followed by this:	WITHOUT_CLASSIFICATION	0.9994614400345871	WITHOUT_CLASSIFICATION	5.385599654129086E-4	DEFECT
// check whether the "valueHistory" array member exists; if not, // create them:	WITHOUT_CLASSIFICATION	0.9999998061759161	WITHOUT_CLASSIFICATION	1.938240839173272E-7	DEFECT
// getXxx() ftns can ignore the "series" argument: // Don't synchronize this!! Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9997479019315344	WITHOUT_CLASSIFICATION	2.5209806846563114E-4	DEFECT
// Don't synchronize this!! // Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9974887407406274	WITHOUT_CLASSIFICATION	0.0025112592593726185	DEFECT
// The next 3 functions implement the RangeInfo interface. // Using saved limits (updated by each updateTime() call) significantly // improves performance.  WARNING: this code makes the simplifying // assumption that data is never negative.  Expand as needed for the // general case.	WITHOUT_CLASSIFICATION	0.99963070996657	WITHOUT_CLASSIFICATION	3.6929003343002956E-4	DEFECT
// CASE 1 : Comparing to another Quarter object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999978843031995	WITHOUT_CLASSIFICATION	2.115696800473762E-6	DEFECT
// find the Q and the integer following it (remove both from the // string)...	WITHOUT_CLASSIFICATION	0.9999969403442668	WITHOUT_CLASSIFICATION	3.0596557332779525E-6	DEFECT
// replace any / , or - with a space	WITHOUT_CLASSIFICATION	0.9999962564438931	WITHOUT_CLASSIFICATION	3.743556106922764E-6	DEFECT
// do nothing, so null is returned	WITHOUT_CLASSIFICATION	0.9999984656429686	WITHOUT_CLASSIFICATION	1.5343570314837595E-6	DEFECT
//////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999976541781771	WITHOUT_CLASSIFICATION	2.3458218229081586E-5	DEFECT
// CASE 1 : Comparing to another Day object // ----------------------------------------	WITHOUT_CLASSIFICATION	0.9999827258105534	WITHOUT_CLASSIFICATION	1.7274189446634864E-5	DEFECT
// check arguments...delegated // fetch the series name...	WITHOUT_CLASSIFICATION	0.9999999580664305	WITHOUT_CLASSIFICATION	4.193356937965516E-8	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.99999919255535	WITHOUT_CLASSIFICATION	8.074446500023748E-7	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.9999941993235953	WITHOUT_CLASSIFICATION	5.800676404714687E-6	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.9999975747408467	WITHOUT_CLASSIFICATION	2.4252591533759105E-6	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.9999989867840599	WITHOUT_CLASSIFICATION	1.0132159400570154E-6	DEFECT
// we need to work out if the previous year has 52 or 53 weeks...	WITHOUT_CLASSIFICATION	0.9999622084957502	WITHOUT_CLASSIFICATION	3.7791504249658634E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999996477802168	WITHOUT_CLASSIFICATION	3.522197833163708E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999996477802168	WITHOUT_CLASSIFICATION	3.522197833163708E-7	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.999993616743798	WITHOUT_CLASSIFICATION	6.383256201924971E-6	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999956260904569	WITHOUT_CLASSIFICATION	4.373909543130036E-6	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999824981949502	WITHOUT_CLASSIFICATION	1.750180504969622E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999967299757703	WITHOUT_CLASSIFICATION	3.270024229762371E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999967299757703	WITHOUT_CLASSIFICATION	3.270024229762371E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999931440756369	WITHOUT_CLASSIFICATION	6.855924363068029E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999974888271084	WITHOUT_CLASSIFICATION	2.51117289152246E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999974888271084	WITHOUT_CLASSIFICATION	2.51117289152246E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999974888271084	WITHOUT_CLASSIFICATION	2.51117289152246E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999931951851524	WITHOUT_CLASSIFICATION	6.8048148476506075E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999931951851524	WITHOUT_CLASSIFICATION	6.8048148476506075E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999931951851524	WITHOUT_CLASSIFICATION	6.8048148476506075E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999931951851524	WITHOUT_CLASSIFICATION	6.8048148476506075E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999931951851524	WITHOUT_CLASSIFICATION	6.8048148476506075E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999909566891239	WITHOUT_CLASSIFICATION	9.04331087613735E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999909566891239	WITHOUT_CLASSIFICATION	9.04331087613735E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999909566891239	WITHOUT_CLASSIFICATION	9.04331087613735E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999909566891239	WITHOUT_CLASSIFICATION	9.04331087613735E-6	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9977363603583647	WITHOUT_CLASSIFICATION	0.0022636396416352957	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999996477802168	WITHOUT_CLASSIFICATION	3.522197833163708E-7	DEFECT
// sometimes the last few days of the year are considered to fall in // the *first* week of the following year.  Refer to the Javadocs for // GregorianCalendar.	WITHOUT_CLASSIFICATION	0.9999951682706831	WITHOUT_CLASSIFICATION	4.831729316777733E-6	DEFECT
// CASE 1 : Comparing to another Week object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999892421869909	WITHOUT_CLASSIFICATION	1.0757813009113639E-5	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9999990809631047	WITHOUT_CLASSIFICATION	9.190368952816352E-7	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9999990809631047	WITHOUT_CLASSIFICATION	9.190368952816352E-7	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999994049802061	WITHOUT_CLASSIFICATION	5.950197939072167E-7	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999994049802061	WITHOUT_CLASSIFICATION	5.950197939072167E-7	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999994049802061	WITHOUT_CLASSIFICATION	5.950197939072167E-7	DEFECT
// CASE 1 : Comparing to another Month object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.999995521107583	WITHOUT_CLASSIFICATION	4.478892417003378E-6	DEFECT
// if there is no separator, we assume the first four characters // are YYYY	WITHOUT_CLASSIFICATION	0.9999999975397986	WITHOUT_CLASSIFICATION	2.4602013303416204E-9	DEFECT
// now it is trickier to determine if the month or year is first	WITHOUT_CLASSIFICATION	0.9999996552839706	WITHOUT_CLASSIFICATION	3.4471602937191165E-7	DEFECT
// --- DEPRECATED METHODS -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999788771111202	WITHOUT_CLASSIFICATION	2.1122888879796037E-5	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataItem object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999979084642524	WITHOUT_CLASSIFICATION	2.0915357476172418E-6	DEFECT
//private Comparable key;	WITHOUT_CLASSIFICATION	0.9999734886345109	WITHOUT_CLASSIFICATION	2.6511365489119696E-5	DEFECT
//this.key = null;	WITHOUT_CLASSIFICATION	0.999993844451613	WITHOUT_CLASSIFICATION	6.155548387090992E-6	DEFECT
// no attributes to read	WITHOUT_CLASSIFICATION	0.999999885482114	WITHOUT_CLASSIFICATION	1.1451788604664952E-7	DEFECT
//axisOffset;	WITHOUT_CLASSIFICATION	0.999997420400565	WITHOUT_CLASSIFICATION	2.579599434839522E-6	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999995897610436	WITHOUT_CLASSIFICATION	4.102389563000264E-7	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999995974156799	WITHOUT_CLASSIFICATION	4.0258432005672087E-7	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999956260904569	WITHOUT_CLASSIFICATION	4.373909543130036E-6	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.9999941993235953	WITHOUT_CLASSIFICATION	5.800676404714687E-6	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.9999989867840599	WITHOUT_CLASSIFICATION	1.0132159400570154E-6	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999880238308172	WITHOUT_CLASSIFICATION	1.1976169182763897E-5	DEFECT
// XYDataset only provides methods for reading a dataset...	WITHOUT_CLASSIFICATION	0.9988701443175898	WITHOUT_CLASSIFICATION	0.0011298556824102081	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.9999999844262706	WITHOUT_CLASSIFICATION	1.5573729308054948E-8	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.9999999844262706	WITHOUT_CLASSIFICATION	1.5573729308054948E-8	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999880238308172	WITHOUT_CLASSIFICATION	1.1976169182763897E-5	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.999999475228828	WITHOUT_CLASSIFICATION	5.247711719519355E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999996477802168	WITHOUT_CLASSIFICATION	3.522197833163708E-7	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999983299475649	WITHOUT_CLASSIFICATION	1.6700524350680926E-6	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9999999985226964	WITHOUT_CLASSIFICATION	1.4773035640815395E-9	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999996477802168	WITHOUT_CLASSIFICATION	3.522197833163708E-7	DEFECT
// we can't be sure of the order	WITHOUT_CLASSIFICATION	0.9999999616879237	WITHOUT_CLASSIFICATION	3.8312076335260164E-8	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999995347650459	WITHOUT_CLASSIFICATION	4.652349540664376E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999996477802168	WITHOUT_CLASSIFICATION	3.522197833163708E-7	DEFECT
// either autoWidth is off or autoIntervalWidth was not set.	WITHOUT_CLASSIFICATION	0.9999995668481381	WITHOUT_CLASSIFICATION	4.3315186184609667E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999996477802168	WITHOUT_CLASSIFICATION	3.522197833163708E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999996477802168	WITHOUT_CLASSIFICATION	3.522197833163708E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999996477802168	WITHOUT_CLASSIFICATION	3.522197833163708E-7	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999308961655	WITHOUT_CLASSIFICATION	6.910383449470704E-8	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999308961655	WITHOUT_CLASSIFICATION	6.910383449470704E-8	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.9999996033878387	WITHOUT_CLASSIFICATION	3.966121612641986E-7	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.999999932871756	WITHOUT_CLASSIFICATION	6.712824397653554E-8	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.9999999403212424	WITHOUT_CLASSIFICATION	5.96787575522122E-8	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.999993616743798	WITHOUT_CLASSIFICATION	6.383256201924971E-6	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999995897610436	WITHOUT_CLASSIFICATION	4.102389563000264E-7	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999931951851524	WITHOUT_CLASSIFICATION	6.8048148476506075E-6	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9977363603583647	WITHOUT_CLASSIFICATION	0.0022636396416352957	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9992983808561781	WITHOUT_CLASSIFICATION	7.016191438218677E-4	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.9999975747408467	WITHOUT_CLASSIFICATION	2.4252591533759105E-6	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.999999475228828	WITHOUT_CLASSIFICATION	5.247711719519355E-7	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.999999475228828	WITHOUT_CLASSIFICATION	5.247711719519355E-7	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999880238308172	WITHOUT_CLASSIFICATION	1.1976169182763897E-5	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9999999985226964	WITHOUT_CLASSIFICATION	1.4773035640815395E-9	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999983299475649	WITHOUT_CLASSIFICATION	1.6700524350680926E-6	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999983299475649	WITHOUT_CLASSIFICATION	1.6700524350680926E-6	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999995347650459	WITHOUT_CLASSIFICATION	4.652349540664376E-7	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999995347650459	WITHOUT_CLASSIFICATION	4.652349540664376E-7	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.999997909853637	WITHOUT_CLASSIFICATION	2.0901463630016202E-6	DEFECT
// everything is fine: autoWidth is on, and an autoIntervalWidth // was set.	WITHOUT_CLASSIFICATION	0.999913037464885	WITHOUT_CLASSIFICATION	8.696253511496021E-5	DEFECT
// first get the range without the interval, then expand it for the // interval width	WITHOUT_CLASSIFICATION	0.9999999878110037	WITHOUT_CLASSIFICATION	1.2188996280192528E-8	DEFECT
// all series have the same number of items in // this dataset	WITHOUT_CLASSIFICATION	0.9999994800650012	WITHOUT_CLASSIFICATION	5.199349988420966E-7	DEFECT
// this.x is not allowed to be null...	WITHOUT_CLASSIFICATION	0.9982196767241237	WITHOUT_CLASSIFICATION	0.0017803232758762516	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataPair object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984818609755	WITHOUT_CLASSIFICATION	1.5181390244974517E-6	DEFECT
// In version 0.9.12, in response to several developer requests, I changed // the 'data' attribute from 'private' to 'protected', so that others can // make subclasses that work directly with the underlying data structure.	WITHOUT_CLASSIFICATION	0.9999460028777511	WITHOUT_CLASSIFICATION	5.3997122248838336E-5	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999998491335048	WITHOUT_CLASSIFICATION	1.508664951751844E-7	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999998491335048	WITHOUT_CLASSIFICATION	1.508664951751844E-7	DEFECT
// if we get to here, we know that duplicate X values are not permitted	WITHOUT_CLASSIFICATION	0.9999691727755727	WITHOUT_CLASSIFICATION	3.082722442734819E-5	DEFECT
/*         * we assum super is always initialized to all-zero matrix, so the         * total sum should be 0 upon initialization. However, we set it to         * Double.MIN_VALUE to get the same effect and yet avoid division by 0         * upon initialization.         */	WITHOUT_CLASSIFICATION	0.999984597142773	WITHOUT_CLASSIFICATION	1.540285722709527E-5	DEFECT
// add the series...	WITHOUT_CLASSIFICATION	0.9999964285387533	WITHOUT_CLASSIFICATION	3.5714612467085E-6	DEFECT
// try a class that isn't a listener	WITHOUT_CLASSIFICATION	0.9997881226753849	WITHOUT_CLASSIFICATION	2.1187732461515959E-4	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999979343146214	WITHOUT_CLASSIFICATION	2.06568537861052E-6	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.999999990892139	WITHOUT_CLASSIFICATION	9.107860961665544E-9	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.9999993230304636	WITHOUT_CLASSIFICATION	6.769695364313386E-7	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9978739819278185	WITHOUT_CLASSIFICATION	0.0021260180721814383	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999996751076554	WITHOUT_CLASSIFICATION	3.2489234461117686E-7	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.9999981048112665	WITHOUT_CLASSIFICATION	1.8951887334188154E-6	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999921262732505	WITHOUT_CLASSIFICATION	7.873726749434999E-6	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999998352596717	WITHOUT_CLASSIFICATION	1.6474032832025302E-7	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999998352596717	WITHOUT_CLASSIFICATION	1.6474032832025302E-7	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.9999994848217826	WITHOUT_CLASSIFICATION	5.151782173909152E-7	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999998060619026	WITHOUT_CLASSIFICATION	1.9393809742135337E-7	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999995974156799	WITHOUT_CLASSIFICATION	4.0258432005672087E-7	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.999999475228828	WITHOUT_CLASSIFICATION	5.247711719519355E-7	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.999999475228828	WITHOUT_CLASSIFICATION	5.247711719519355E-7	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.9999995310845287	WITHOUT_CLASSIFICATION	4.689154712506377E-7	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.9999991308027384	WITHOUT_CLASSIFICATION	8.691972617312902E-7	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.9999991308027384	WITHOUT_CLASSIFICATION	8.691972617312902E-7	DEFECT
//TODO private boolean fillZoomRectangle = true;	WITHOUT_CLASSIFICATION	0.9988993446235082	WITHOUT_CLASSIFICATION	0.0011006553764918786	DEFECT
// create the canvas and add the required listeners	WITHOUT_CLASSIFICATION	0.999998574256568	WITHOUT_CLASSIFICATION	1.4257434319980975E-6	DEFECT
//ChartEditorManager.getChartEditor(canvas.getDisplay(), this.chart);	WITHOUT_CLASSIFICATION	0.9999976480014635	WITHOUT_CLASSIFICATION	2.351998536428958E-6	DEFECT
/* in the next zoomPoint.x and y replace by e.x and y for now.         * this helps to handle the mouse events and besides,         * those values are unused AFAIK. */	WITHOUT_CLASSIFICATION	0.9999997020857623	WITHOUT_CLASSIFICATION	2.979142376612587E-7	DEFECT
// do nothing, override if necessary	WITHOUT_CLASSIFICATION	0.9999998922893933	WITHOUT_CLASSIFICATION	1.0771060665890987E-7	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999925130307626	WITHOUT_CLASSIFICATION	7.4869692372795486E-6	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999925130307626	WITHOUT_CLASSIFICATION	7.4869692372795486E-6	DEFECT
// pass mouse down event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999997867556676	WITHOUT_CLASSIFICATION	2.1324433234015103E-7	DEFECT
// if the box has been drawn backwards, restore the auto bounds	WITHOUT_CLASSIFICATION	0.9999999105304509	WITHOUT_CLASSIFICATION	8.946954903241951E-8	DEFECT
// handle axis trace	WITHOUT_CLASSIFICATION	0.9999986175884876	WITHOUT_CLASSIFICATION	1.382411512313469E-6	DEFECT
// handle tool tips in a simple way	WITHOUT_CLASSIFICATION	0.9999961606765086	WITHOUT_CLASSIFICATION	3.8393234913412065E-6	DEFECT
// handle zoom box	WITHOUT_CLASSIFICATION	0.999998664718155	WITHOUT_CLASSIFICATION	1.3352818450009716E-6	DEFECT
// skip if chart is null	WITHOUT_CLASSIFICATION	0.9999998890929058	WITHOUT_CLASSIFICATION	1.1090709414109786E-7	DEFECT
//axisLabelPaint;	WITHOUT_CLASSIFICATION	0.999998863499872	WITHOUT_CLASSIFICATION	1.136500127958138E-6	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999995072204	WITHOUT_CLASSIFICATION	4.927795453927828E-10	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9999920009837707	WITHOUT_CLASSIFICATION	7.999016229202431E-6	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.999995937854342	WITHOUT_CLASSIFICATION	4.06214565796816E-6	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9999924367607722	WITHOUT_CLASSIFICATION	7.563239227768371E-6	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.9999995310845287	WITHOUT_CLASSIFICATION	4.689154712506377E-7	DEFECT
//SwtGraphics2D sg2 = new SwtGraphics2D(e.gc);	WITHOUT_CLASSIFICATION	0.9999996905548283	WITHOUT_CLASSIFICATION	3.0944517168199584E-7	DEFECT
// do we need to fill the buffer?	WITHOUT_CLASSIFICATION	0.9999737772985426	WITHOUT_CLASSIFICATION	2.6222701457390675E-5	DEFECT
// Performs the actual drawing here ...	WITHOUT_CLASSIFICATION	0.9999775509894323	WITHOUT_CLASSIFICATION	2.2449010567700254E-5	DEFECT
// anti-aliasing	WITHOUT_CLASSIFICATION	0.999998888145049	WITHOUT_CLASSIFICATION	1.1118549510189194E-6	DEFECT
// zap the buffer onto the canvas...	WITHOUT_CLASSIFICATION	0.9999996569970583	WITHOUT_CLASSIFICATION	3.430029417108376E-7	DEFECT
// or redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.9999962485120176	WITHOUT_CLASSIFICATION	3.7514879823795633E-6	DEFECT
// de-register the composite as a listener for the chart.	WITHOUT_CLASSIFICATION	0.9999998326383015	WITHOUT_CLASSIFICATION	1.6736169860046944E-7	DEFECT
// AXIS 2	WITHOUT_CLASSIFICATION	0.9999680259479891	WITHOUT_CLASSIFICATION	3.197405201101762E-5	DEFECT
// AXIS 3	WITHOUT_CLASSIFICATION	0.9999688162324428	WITHOUT_CLASSIFICATION	3.118376755721364E-5	DEFECT
//axis3.setPositiveArrowVisible(true);	WITHOUT_CLASSIFICATION	0.9999681481297105	WITHOUT_CLASSIFICATION	3.185187028946026E-5	DEFECT
// AXIS 4	WITHOUT_CLASSIFICATION	0.9999669415077939	WITHOUT_CLASSIFICATION	3.305849220620365E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999819185594226	WITHOUT_CLASSIFICATION	1.8081440577424056E-5	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999987360324468	WITHOUT_CLASSIFICATION	1.2639675531683953E-6	DEFECT
// NOW DO SOME OPTIONAL CUSTOMISATION OF THE CHART...	WITHOUT_CLASSIFICATION	0.9987529577613816	WITHOUT_CLASSIFICATION	0.001247042238618357	DEFECT
// get a reference to the plot for further customisation...	WITHOUT_CLASSIFICATION	0.9999992823629615	WITHOUT_CLASSIFICATION	7.176370385041695E-7	DEFECT
// set the range axis to display integers only...	WITHOUT_CLASSIFICATION	0.9999929640060091	WITHOUT_CLASSIFICATION	7.035993990892214E-6	DEFECT
// disable bar outlines...	WITHOUT_CLASSIFICATION	0.9999776718321491	WITHOUT_CLASSIFICATION	2.2328167850873544E-5	DEFECT
// OPTIONAL CUSTOMISATION COMPLETED.	WITHOUT_CLASSIFICATION	0.9999942527002356	WITHOUT_CLASSIFICATION	5.7472997644032965E-6	DEFECT
// chart title // data // include legend	WITHOUT_CLASSIFICATION	0.9999983154288926	WITHOUT_CLASSIFICATION	1.6845711074039E-6	DEFECT
//frame.setDisplayToolTips(false);	WITHOUT_CLASSIFICATION	0.9999989916777815	WITHOUT_CLASSIFICATION	1.0083222185128974E-6	DEFECT
// row 1: antialiasing	WITHOUT_CLASSIFICATION	0.9999798479014057	WITHOUT_CLASSIFICATION	2.01520985942299E-5	DEFECT
//row 2: background paint for the chart	WITHOUT_CLASSIFICATION	0.999999144614678	WITHOUT_CLASSIFICATION	8.553853220228182E-7	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.999982600366957	WITHOUT_CLASSIFICATION	1.7399633042963245E-5	DEFECT
//empty cell // row 2	WITHOUT_CLASSIFICATION	0.9999844591948477	WITHOUT_CLASSIFICATION	1.554080515232093E-5	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999997638670172	WITHOUT_CLASSIFICATION	2.3613298278299331E-7	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999998483942689	WITHOUT_CLASSIFICATION	1.5160573107473074E-7	DEFECT
// build second tab	WITHOUT_CLASSIFICATION	0.9999982436851264	WITHOUT_CLASSIFICATION	1.7563148735701773E-6	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9998668818102454	WITHOUT_CLASSIFICATION	1.3311818975458902E-4	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.9999983542204531	WITHOUT_CLASSIFICATION	1.6457795468467177E-6	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.999982600366957	WITHOUT_CLASSIFICATION	1.7399633042963245E-5	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999997638670172	WITHOUT_CLASSIFICATION	2.3613298278299331E-7	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999997638670172	WITHOUT_CLASSIFICATION	2.3613298278299331E-7	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999998483942689	WITHOUT_CLASSIFICATION	1.5160573107473074E-7	DEFECT
// check a regular value	WITHOUT_CLASSIFICATION	0.999999282132284	WITHOUT_CLASSIFICATION	7.178677160036142E-7	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999999105623506	WITHOUT_CLASSIFICATION	8.943764932019584E-8	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999999105623506	WITHOUT_CLASSIFICATION	8.943764932019584E-8	DEFECT
//label.setFont(font);	WITHOUT_CLASSIFICATION	0.9999986590259645	WITHOUT_CLASSIFICATION	1.3409740354169879E-6	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9999841716318821	WITHOUT_CLASSIFICATION	1.5828368117924545E-5	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9999841716318821	WITHOUT_CLASSIFICATION	1.5828368117924545E-5	DEFECT
// Use a colored text field to show the color	WITHOUT_CLASSIFICATION	0.9999996678272017	WITHOUT_CLASSIFICATION	3.321727982460619E-7	DEFECT
//tickLabelFontField.setFont(SwtUtils.toSwtFontData(getDisplay(), // axis.getTickLabelFont()));	WITHOUT_CLASSIFICATION	0.9999999342510643	WITHOUT_CLASSIFICATION	6.574893571532588E-8	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999998207927548	WITHOUT_CLASSIFICATION	1.7920724510973305E-7	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999998207927548	WITHOUT_CLASSIFICATION	1.7920724510973305E-7	DEFECT
//tickLabelFontField.setFont(font);	WITHOUT_CLASSIFICATION	0.9999991984416399	WITHOUT_CLASSIFICATION	8.015583602473505E-7	DEFECT
// return the appropriate axis editor	WITHOUT_CLASSIFICATION	0.9999995881069043	WITHOUT_CLASSIFICATION	4.118930957445672E-7	DEFECT
//this.minimumRangeValue.addModifyListener(this); //this.minimumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.9999958361308492	WITHOUT_CLASSIFICATION	4.16386915080845E-6	DEFECT
//this.maximumRangeValue.addModifyListener(this); //this.maximumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.9999954396733326	WITHOUT_CLASSIFICATION	4.560326667432059E-6	DEFECT
// verify min value	WITHOUT_CLASSIFICATION	0.9999947448854009	WITHOUT_CLASSIFICATION	5.255114599175311E-6	DEFECT
// verify max value	WITHOUT_CLASSIFICATION	0.999997015076408	WITHOUT_CLASSIFICATION	2.9849235919911163E-6	DEFECT
//deal with domain axis	WITHOUT_CLASSIFICATION	0.9999942747200014	WITHOUT_CLASSIFICATION	5.725279998719242E-6	DEFECT
//deal with range axis	WITHOUT_CLASSIFICATION	0.9999954179027806	WITHOUT_CLASSIFICATION	4.58209721941916E-6	DEFECT
//deal with plot appearance	WITHOUT_CLASSIFICATION	0.9999781060351685	WITHOUT_CLASSIFICATION	2.1893964831462848E-5	DEFECT
// set the axis properties	WITHOUT_CLASSIFICATION	0.9999992396168483	WITHOUT_CLASSIFICATION	7.603831517541081E-7	DEFECT
// row 1: stroke	WITHOUT_CLASSIFICATION	0.9996853057269722	WITHOUT_CLASSIFICATION	3.1469427302777234E-4	DEFECT
// row 3: background paint	WITHOUT_CLASSIFICATION	0.9999869445078287	WITHOUT_CLASSIFICATION	1.3055492171326853E-5	DEFECT
// row 4: orientation	WITHOUT_CLASSIFICATION	0.9999534508722285	WITHOUT_CLASSIFICATION	4.6549127771501825E-5	DEFECT
// row 2	WITHOUT_CLASSIFICATION	0.999983773551748	WITHOUT_CLASSIFICATION	1.622644825210527E-5	DEFECT
//titleField.setFont(font);	WITHOUT_CLASSIFICATION	0.9999935230995348	WITHOUT_CLASSIFICATION	6.476900465203732E-6	DEFECT
// row 4	WITHOUT_CLASSIFICATION	0.9999831464779403	WITHOUT_CLASSIFICATION	1.6853522059643023E-5	DEFECT
// build first tab	WITHOUT_CLASSIFICATION	0.9999996408382649	WITHOUT_CLASSIFICATION	3.5916173503740613E-7	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9998379471665434	WITHOUT_CLASSIFICATION	1.6205283345670354E-4	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999984120335018	WITHOUT_CLASSIFICATION	1.5879664981850323E-6	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999553948408866	WITHOUT_CLASSIFICATION	4.4605159113376524E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999819185594226	WITHOUT_CLASSIFICATION	1.8081440577424056E-5	DEFECT
// since this is only used by clearRect(), we don't update the GC yet	WITHOUT_CLASSIFICATION	0.9999996662578184	WITHOUT_CLASSIFICATION	3.337421815570854E-7	DEFECT
// build the third tab	WITHOUT_CLASSIFICATION	0.9999949804456169	WITHOUT_CLASSIFICATION	5.019554383131676E-6	DEFECT
// ok and cancel buttons	WITHOUT_CLASSIFICATION	0.9999918322423026	WITHOUT_CLASSIFICATION	8.167757697325882E-6	DEFECT
// to be consistent with other Graphics2D implementations	WITHOUT_CLASSIFICATION	0.999994273550163	WITHOUT_CLASSIFICATION	5.726449836921339E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.999970806053751	WITHOUT_CLASSIFICATION	2.919394624903059E-5	DEFECT
// apply dash style if any	WITHOUT_CLASSIFICATION	0.99999535899854	WITHOUT_CLASSIFICATION	4.6410014600273066E-6	DEFECT
// handle transparency and compositing.	WITHOUT_CLASSIFICATION	0.9999996595078411	WITHOUT_CLASSIFICATION	3.404921589634332E-7	DEFECT
// we can't use the following valueOf() method, because it // won't compile with JDK1.4 // this.colorsPool.get(Integer.valueOf(awtColor.getRGB()));	WITHOUT_CLASSIFICATION	0.9999433299124177	WITHOUT_CLASSIFICATION	5.6670087582268984E-5	DEFECT
// set the line style to solid by default	WITHOUT_CLASSIFICATION	0.9999999461317552	WITHOUT_CLASSIFICATION	5.3868244786450055E-8	DEFECT
// retrieve the swt font description in an os indept way	WITHOUT_CLASSIFICATION	0.9999994213907825	WITHOUT_CLASSIFICATION	5.786092175386145E-7	DEFECT
// Note that for consistency with the AWT implementation, it is // necessary to switch temporarily the foreground and background // colours	WITHOUT_CLASSIFICATION	0.9999999314782114	WITHOUT_CLASSIFICATION	6.852178859136912E-8	DEFECT
// for now we simply want to extract the chars from the iterator // and call an unstyled text renderer	WITHOUT_CLASSIFICATION	0.9999998163406351	WITHOUT_CLASSIFICATION	1.836593648598644E-7	DEFECT
// create a new awt font with the appropiate data	WITHOUT_CLASSIFICATION	0.9999995023719375	WITHOUT_CLASSIFICATION	4.976280624203847E-7	DEFECT
// we dispose resources we own but user must dispose gc	WITHOUT_CLASSIFICATION	0.9999992379887004	WITHOUT_CLASSIFICATION	7.620112995456494E-7	DEFECT
// see comment above //this.colorsPool.put(Integer.valueOf(awtColor.getRGB()), swtColor);	WITHOUT_CLASSIFICATION	0.9999974636903293	WITHOUT_CLASSIFICATION	2.5363096707673135E-6	DEFECT
// SWT and AWT share the same style constants.	WITHOUT_CLASSIFICATION	0.9999932671633843	WITHOUT_CLASSIFICATION	6.73283661568852E-6	DEFECT
// convert the font size (in pt for awt) to height in pixels for swt	WITHOUT_CLASSIFICATION	0.9999841816267482	WITHOUT_CLASSIFICATION	1.5818373251848578E-5	DEFECT
//this.myColor = new Color(getDisplay(), color.getRGB());	WITHOUT_CLASSIFICATION	0.9999997406126743	WITHOUT_CLASSIFICATION	2.593873256742668E-7	DEFECT
// renderingHints	WITHOUT_CLASSIFICATION	0.9999876642917187	WITHOUT_CLASSIFICATION	1.2335708281283998E-5	DEFECT
// borderStroke	WITHOUT_CLASSIFICATION	0.9998536399944083	WITHOUT_CLASSIFICATION	1.463600055916033E-4	DEFECT
// borderVisible	WITHOUT_CLASSIFICATION	0.9999952504622812	WITHOUT_CLASSIFICATION	4.74953771869587E-6	DEFECT
// borderPaint	WITHOUT_CLASSIFICATION	0.9999993081800096	WITHOUT_CLASSIFICATION	6.91819990498446E-7	DEFECT
// title	WITHOUT_CLASSIFICATION	0.9999589703956049	WITHOUT_CLASSIFICATION	4.1029604394987843E-5	DEFECT
// subtitles	WITHOUT_CLASSIFICATION	0.9999992265007256	WITHOUT_CLASSIFICATION	7.734992744485304E-7	DEFECT
// plot	WITHOUT_CLASSIFICATION	0.9999952997096048	WITHOUT_CLASSIFICATION	4.700290395227134E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999986873631264	WITHOUT_CLASSIFICATION	1.3126368736275976E-6	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999990053272162	WITHOUT_CLASSIFICATION	9.946727838895934E-7	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.999996901202038	WITHOUT_CLASSIFICATION	3.0987979620926187E-6	DEFECT
// no event is generated if the dataset is already empty	WITHOUT_CLASSIFICATION	0.9999999983810232	WITHOUT_CLASSIFICATION	1.6189767924877892E-9	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.999995937854342	WITHOUT_CLASSIFICATION	4.06214565796816E-6	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.999995937854342	WITHOUT_CLASSIFICATION	4.06214565796816E-6	DEFECT
// try a Double.POSITIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999920892971471	WITHOUT_CLASSIFICATION	7.91070285280591E-6	DEFECT
// adding something to the returned list should NOT change the chart	WITHOUT_CLASSIFICATION	0.9999999971497158	WITHOUT_CLASSIFICATION	2.850284281025247E-9	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999992306334213	WITHOUT_CLASSIFICATION	7.693665786950174E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999992306334213	WITHOUT_CLASSIFICATION	7.693665786950174E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999992306334213	WITHOUT_CLASSIFICATION	7.693665786950174E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999992306334213	WITHOUT_CLASSIFICATION	7.693665786950174E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999992306334213	WITHOUT_CLASSIFICATION	7.693665786950174E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999992306334213	WITHOUT_CLASSIFICATION	7.693665786950174E-6	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.999999847814894	WITHOUT_CLASSIFICATION	1.5218510599759516E-7	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999978376778059	WITHOUT_CLASSIFICATION	2.1623221941487156E-6	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999974396970321	WITHOUT_CLASSIFICATION	2.5603029679730174E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999988515774264	WITHOUT_CLASSIFICATION	1.1484225735798302E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999982907507954	WITHOUT_CLASSIFICATION	1.7092492046575083E-6	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.9999964564812797	WITHOUT_CLASSIFICATION	3.5435187203227367E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999983813564085	WITHOUT_CLASSIFICATION	1.6186435914777572E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999988515774264	WITHOUT_CLASSIFICATION	1.1484225735798302E-6	DEFECT
// the clone references the same dataset as the original	WITHOUT_CLASSIFICATION	0.9999999018266069	WITHOUT_CLASSIFICATION	9.817339305677102E-8	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999988515774264	WITHOUT_CLASSIFICATION	1.1484225735798302E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999988515774264	WITHOUT_CLASSIFICATION	1.1484225735798302E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999988515774264	WITHOUT_CLASSIFICATION	1.1484225735798302E-6	DEFECT
// data // include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.9999995189291916	WITHOUT_CLASSIFICATION	4.810708084266019E-7	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999883738131348	WITHOUT_CLASSIFICATION	1.1626186865347291E-5	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999549082581036	WITHOUT_CLASSIFICATION	4.509174189632164E-5	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999549082581036	WITHOUT_CLASSIFICATION	4.509174189632164E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999883738131348	WITHOUT_CLASSIFICATION	1.1626186865347291E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999883738131348	WITHOUT_CLASSIFICATION	1.1626186865347291E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999883738131348	WITHOUT_CLASSIFICATION	1.1626186865347291E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999883738131348	WITHOUT_CLASSIFICATION	1.1626186865347291E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999883738131348	WITHOUT_CLASSIFICATION	1.1626186865347291E-5	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999946426841055	WITHOUT_CLASSIFICATION	5.357315894424243E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999946426841055	WITHOUT_CLASSIFICATION	5.357315894424243E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999946426841055	WITHOUT_CLASSIFICATION	5.357315894424243E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999946426841055	WITHOUT_CLASSIFICATION	5.357315894424243E-6	DEFECT
/* BufferedImage img =*/	WITHOUT_CLASSIFICATION	0.9997390283653209	WITHOUT_CLASSIFICATION	2.609716346791502E-4	DEFECT
// try a listener type that isn't registered	WITHOUT_CLASSIFICATION	0.9999734951587079	WITHOUT_CLASSIFICATION	2.650484129213571E-5	DEFECT
// name	WITHOUT_CLASSIFICATION	0.9999939673423813	WITHOUT_CLASSIFICATION	6.032657618675392E-6	DEFECT
//extraLargeFont	WITHOUT_CLASSIFICATION	0.999997591628695	WITHOUT_CLASSIFICATION	2.4083713051179837E-6	DEFECT
//largeFont	WITHOUT_CLASSIFICATION	0.9999971874805267	WITHOUT_CLASSIFICATION	2.8125194733773117E-6	DEFECT
//regularFont;	WITHOUT_CLASSIFICATION	0.9999980078819023	WITHOUT_CLASSIFICATION	1.9921180977909474E-6	DEFECT
//titlePaint;	WITHOUT_CLASSIFICATION	0.9999855936298886	WITHOUT_CLASSIFICATION	1.4406370111305048E-5	DEFECT
//subtitlePaint;	WITHOUT_CLASSIFICATION	0.9999964885971638	WITHOUT_CLASSIFICATION	3.5114028362834194E-6	DEFECT
//chartBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999954745939382	WITHOUT_CLASSIFICATION	4.525406061800655E-6	DEFECT
//legendBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999866009909796	WITHOUT_CLASSIFICATION	1.3399009020490414E-5	DEFECT
//legendItemPaint;	WITHOUT_CLASSIFICATION	0.9999909202704185	WITHOUT_CLASSIFICATION	9.079729581426168E-6	DEFECT
//drawingSupplier;	WITHOUT_CLASSIFICATION	0.9999969951766081	WITHOUT_CLASSIFICATION	3.004823391941313E-6	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.9999909172972211	WITHOUT_CLASSIFICATION	9.082702778871173E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999992306334213	WITHOUT_CLASSIFICATION	7.693665786950174E-6	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999995479679799	WITHOUT_CLASSIFICATION	4.5203202023092847E-7	DEFECT
//tickLabelPaint;	WITHOUT_CLASSIFICATION	0.9999981443673657	WITHOUT_CLASSIFICATION	1.855632634343461E-6	DEFECT
//itemLabelPaint;	WITHOUT_CLASSIFICATION	0.9999968688969184	WITHOUT_CLASSIFICATION	3.131103081528137E-6	DEFECT
//shadowVisible;	WITHOUT_CLASSIFICATION	0.9999727125304593	WITHOUT_CLASSIFICATION	2.728746954070601E-5	DEFECT
//shadowPaint;	WITHOUT_CLASSIFICATION	0.9999973959612171	WITHOUT_CLASSIFICATION	2.6040387828698286E-6	DEFECT
//barPainter;	WITHOUT_CLASSIFICATION	0.9999961792032511	WITHOUT_CLASSIFICATION	3.82079674892193E-6	DEFECT
//xyBarPainter;	WITHOUT_CLASSIFICATION	0.9999925247007612	WITHOUT_CLASSIFICATION	7.475299238903139E-6	DEFECT
//thermometerPaint;	WITHOUT_CLASSIFICATION	0.9999991614378689	WITHOUT_CLASSIFICATION	8.385621309540446E-7	DEFECT
//wallPaint;	WITHOUT_CLASSIFICATION	0.9999816355636336	WITHOUT_CLASSIFICATION	1.836443636635555E-5	DEFECT
//errorIndicatorPaint;	WITHOUT_CLASSIFICATION	0.9999761152588553	WITHOUT_CLASSIFICATION	2.388474114466292E-5	DEFECT
//gridBandAlternatePaint	WITHOUT_CLASSIFICATION	0.9999837478577098	WITHOUT_CLASSIFICATION	1.6252142290163094E-5	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.9999837587897944	WITHOUT_CLASSIFICATION	1.6241210205599257E-5	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.9999962578624251	WITHOUT_CLASSIFICATION	3.7421375749249916E-6	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.9999962578624251	WITHOUT_CLASSIFICATION	3.7421375749249916E-6	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.9999965737036945	WITHOUT_CLASSIFICATION	3.426296305389602E-6	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.999987264774206	WITHOUT_CLASSIFICATION	1.2735225794108331E-5	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.999987264774206	WITHOUT_CLASSIFICATION	1.2735225794108331E-5	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.9999902961495781	WITHOUT_CLASSIFICATION	9.703850421779194E-6	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9968852687176984	WITHOUT_CLASSIFICATION	0.0031147312823014616	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9968852687176984	WITHOUT_CLASSIFICATION	0.0031147312823014616	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9999786328725119	WITHOUT_CLASSIFICATION	2.136712748814658E-5	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9999786328725119	WITHOUT_CLASSIFICATION	2.136712748814658E-5	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.9999989016650226	WITHOUT_CLASSIFICATION	1.098334977447772E-6	DEFECT
// text	WITHOUT_CLASSIFICATION	0.9999891832465186	WITHOUT_CLASSIFICATION	1.0816753481327486E-5	DEFECT
// text	WITHOUT_CLASSIFICATION	0.9999891832465186	WITHOUT_CLASSIFICATION	1.0816753481327486E-5	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999820611859493	WITHOUT_CLASSIFICATION	1.793881405059725E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.999975062194881	WITHOUT_CLASSIFICATION	2.4937805119114266E-5	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999975086916568	WITHOUT_CLASSIFICATION	2.491308343145574E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.999996165712016	WITHOUT_CLASSIFICATION	3.8342879840438275E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.999996165712016	WITHOUT_CLASSIFICATION	3.8342879840438275E-6	DEFECT
// rotation anchor	WITHOUT_CLASSIFICATION	0.9999971011299217	WITHOUT_CLASSIFICATION	2.8988700783370433E-6	DEFECT
// rotation angle	WITHOUT_CLASSIFICATION	0.9999949080809624	WITHOUT_CLASSIFICATION	5.091919037585577E-6	DEFECT
// text anchor	WITHOUT_CLASSIFICATION	0.9999975076513321	WITHOUT_CLASSIFICATION	2.4923486679072077E-6	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.9999983385528104	WITHOUT_CLASSIFICATION	1.6614471895627925E-6	DEFECT
// rotationAnchor	WITHOUT_CLASSIFICATION	0.9999988425614171	WITHOUT_CLASSIFICATION	1.1574385828987703E-6	DEFECT
// rotationAngle	WITHOUT_CLASSIFICATION	0.9999982472389923	WITHOUT_CLASSIFICATION	1.7527610077012009E-6	DEFECT
// category 1	WITHOUT_CLASSIFICATION	0.9999950516384724	WITHOUT_CLASSIFICATION	4.9483615275936666E-6	DEFECT
// category 2	WITHOUT_CLASSIFICATION	0.9999953130725576	WITHOUT_CLASSIFICATION	4.686927442416919E-6	DEFECT
// value 2	WITHOUT_CLASSIFICATION	0.9999917294481869	WITHOUT_CLASSIFICATION	8.270551813015543E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.999926460307576	WITHOUT_CLASSIFICATION	7.35396924238667E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999196810718767	WITHOUT_CLASSIFICATION	8.03189281232875E-5	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999978376778059	WITHOUT_CLASSIFICATION	2.1623221941487156E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.999926460307576	WITHOUT_CLASSIFICATION	7.35396924238667E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999196810718767	WITHOUT_CLASSIFICATION	8.03189281232875E-5	DEFECT
// category	WITHOUT_CLASSIFICATION	0.9999972028495504	WITHOUT_CLASSIFICATION	2.797150449600127E-6	DEFECT
// categoryAnchor	WITHOUT_CLASSIFICATION	0.9999986287887578	WITHOUT_CLASSIFICATION	1.371211242188702E-6	DEFECT
// value	WITHOUT_CLASSIFICATION	0.9999899495123136	WITHOUT_CLASSIFICATION	1.0050487686536681E-5	DEFECT
// x0	WITHOUT_CLASSIFICATION	0.9999788831939191	WITHOUT_CLASSIFICATION	2.111680608088092E-5	DEFECT
// tickUnit	WITHOUT_CLASSIFICATION	0.9999928044038024	WITHOUT_CLASSIFICATION	7.195596197545739E-6	DEFECT
// tickMarkPosition	WITHOUT_CLASSIFICATION	0.999993839999789	WITHOUT_CLASSIFICATION	6.160000210934147E-6	DEFECT
// timeline	WITHOUT_CLASSIFICATION	0.9999949127245497	WITHOUT_CLASSIFICATION	5.087275450380837E-6	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999958117552397	WITHOUT_CLASSIFICATION	4.188244760289778E-6	DEFECT
// check that setting the min date to something on or after the // current min date works...	WITHOUT_CLASSIFICATION	0.9999470983048689	WITHOUT_CLASSIFICATION	5.2901695131137724E-5	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999993935656439	WITHOUT_CLASSIFICATION	6.064343559748605E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999790552247712	WITHOUT_CLASSIFICATION	2.0944775228894714E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999790552247712	WITHOUT_CLASSIFICATION	2.0944775228894714E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999790552247712	WITHOUT_CLASSIFICATION	2.0944775228894714E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999790552247712	WITHOUT_CLASSIFICATION	2.0944775228894714E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999790552247712	WITHOUT_CLASSIFICATION	2.0944775228894714E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999790552247712	WITHOUT_CLASSIFICATION	2.0944775228894714E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999790552247712	WITHOUT_CLASSIFICATION	2.0944775228894714E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999790552247712	WITHOUT_CLASSIFICATION	2.0944775228894714E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999756260991214	WITHOUT_CLASSIFICATION	2.4373900878637417E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999756260991214	WITHOUT_CLASSIFICATION	2.4373900878637417E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999756260991214	WITHOUT_CLASSIFICATION	2.4373900878637417E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999756260991214	WITHOUT_CLASSIFICATION	2.4373900878637417E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999756260991214	WITHOUT_CLASSIFICATION	2.4373900878637417E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999756260991214	WITHOUT_CLASSIFICATION	2.4373900878637417E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999756260991214	WITHOUT_CLASSIFICATION	2.4373900878637417E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999756260991214	WITHOUT_CLASSIFICATION	2.4373900878637417E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999826413826446	WITHOUT_CLASSIFICATION	1.7358617355451864E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999826413826446	WITHOUT_CLASSIFICATION	1.7358617355451864E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999826413826446	WITHOUT_CLASSIFICATION	1.7358617355451864E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999826413826446	WITHOUT_CLASSIFICATION	1.7358617355451864E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999826413826446	WITHOUT_CLASSIFICATION	1.7358617355451864E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999826413826446	WITHOUT_CLASSIFICATION	1.7358617355451864E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999826413826446	WITHOUT_CLASSIFICATION	1.7358617355451864E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999826413826446	WITHOUT_CLASSIFICATION	1.7358617355451864E-5	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999898475268751	WITHOUT_CLASSIFICATION	1.0152473124753494E-5	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999898475268751	WITHOUT_CLASSIFICATION	1.0152473124753494E-5	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.9999898168103861	WITHOUT_CLASSIFICATION	1.0183189613918666E-5	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.9999861933827245	WITHOUT_CLASSIFICATION	1.3806617275359428E-5	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.9999861933827245	WITHOUT_CLASSIFICATION	1.3806617275359428E-5	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.9999898168103861	WITHOUT_CLASSIFICATION	1.0183189613918666E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999995479679799	WITHOUT_CLASSIFICATION	4.5203202023092847E-7	DEFECT
// now repeat for a vertical axis	WITHOUT_CLASSIFICATION	0.999999473433692	WITHOUT_CLASSIFICATION	5.265663080124598E-7	DEFECT
// set start and end date	WITHOUT_CLASSIFICATION	0.999999141939571	WITHOUT_CLASSIFICATION	8.580604289871463E-7	DEFECT
// if the bug is still present, this leads to an endless loop	WITHOUT_CLASSIFICATION	0.9997463746205804	WITHOUT_CLASSIFICATION	2.536253794196222E-4	DEFECT
//private boolean autoRangeIncludesZero;	WITHOUT_CLASSIFICATION	0.999997778552191	WITHOUT_CLASSIFICATION	2.221447809036481E-6	DEFECT
//private NumberTickUnit tickUnit;	WITHOUT_CLASSIFICATION	0.9999990456861121	WITHOUT_CLASSIFICATION	9.543138878702543E-7	DEFECT
//private NumberFormat numberFormatOverride;	WITHOUT_CLASSIFICATION	0.9999968626998719	WITHOUT_CLASSIFICATION	3.137300128166741E-6	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999999022760957	WITHOUT_CLASSIFICATION	9.772390434857549E-8	DEFECT
//axis.setRangeType(RangeType.POSITIVE); //axis.setLowerBound(-5.0); //assertEquals(0.0, axis.getLowerBound(), EPSILON);	WITHOUT_CLASSIFICATION	0.9999928136524935	WITHOUT_CLASSIFICATION	7.186347506599645E-6	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999993967200126	WITHOUT_CLASSIFICATION	6.032799874370343E-7	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999989880194088	WITHOUT_CLASSIFICATION	1.0119805911586813E-6	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.999999027171068	WITHOUT_CLASSIFICATION	9.728289320399162E-7	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.9999997124738315	WITHOUT_CLASSIFICATION	2.8752616858393774E-7	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999999035861481	WITHOUT_CLASSIFICATION	9.641385197416324E-8	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999999035861481	WITHOUT_CLASSIFICATION	9.641385197416324E-8	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9999992604848275	WITHOUT_CLASSIFICATION	7.39515172548566E-7	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9999992604848275	WITHOUT_CLASSIFICATION	7.39515172548566E-7	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.9999970056894439	WITHOUT_CLASSIFICATION	2.9943105560939055E-6	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.9999983177730282	WITHOUT_CLASSIFICATION	1.6822269718452354E-6	DEFECT
// categoryMargin	WITHOUT_CLASSIFICATION	0.9999981549728865	WITHOUT_CLASSIFICATION	1.8450271135579814E-6	DEFECT
// maxCategoryLabelWidthRatio	WITHOUT_CLASSIFICATION	0.9999991977418169	WITHOUT_CLASSIFICATION	8.02258183127251E-7	DEFECT
// categoryLabelPositionOffset	WITHOUT_CLASSIFICATION	0.9999996966253503	WITHOUT_CLASSIFICATION	3.033746498006874E-7	DEFECT
// categoryLabelPositions	WITHOUT_CLASSIFICATION	0.9999988970517043	WITHOUT_CLASSIFICATION	1.1029482956092636E-6	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999993967200126	WITHOUT_CLASSIFICATION	6.032799874370343E-7	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999989880194088	WITHOUT_CLASSIFICATION	1.0119805911586813E-6	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.999999027171068	WITHOUT_CLASSIFICATION	9.728289320399162E-7	DEFECT
// 4-ms test base timeline for ms2Timeline using 1 included and 1 // excluded segments // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //  \__________  _________/            \____  _____/ //             \/                           \/ //        segment group              segment size = 4 ms //	WITHOUT_CLASSIFICATION	0.9999999593306665	WITHOUT_CLASSIFICATION	4.066933350041523E-8	DEFECT
// categoryLabelToolTips	WITHOUT_CLASSIFICATION	0.9999997137963567	WITHOUT_CLASSIFICATION	2.8620364340799157E-7	DEFECT
// categoryLabelURLs	WITHOUT_CLASSIFICATION	0.9999994664367683	WITHOUT_CLASSIFICATION	5.335632317253068E-7	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999987949513657	WITHOUT_CLASSIFICATION	1.2050486342702773E-6	DEFECT
// tickLabelPaint2	WITHOUT_CLASSIFICATION	0.9999981926947428	WITHOUT_CLASSIFICATION	1.807305257264847E-6	DEFECT
// period	WITHOUT_CLASSIFICATION	0.9999896490025971	WITHOUT_CLASSIFICATION	1.0350997402950771E-5	DEFECT
// offset	WITHOUT_CLASSIFICATION	0.9999982975933759	WITHOUT_CLASSIFICATION	1.7024066240010144E-6	DEFECT
// advance line Stroke	WITHOUT_CLASSIFICATION	0.9995757033053521	WITHOUT_CLASSIFICATION	4.242966946480585E-4	DEFECT
// advance line Visible	WITHOUT_CLASSIFICATION	0.9999822816128217	WITHOUT_CLASSIFICATION	1.771838717836503E-5	DEFECT
// cycle bound mapping	WITHOUT_CLASSIFICATION	0.9999881212976918	WITHOUT_CLASSIFICATION	1.1878702308236518E-5	DEFECT
// Create a segmented time line (segment size : 15 minutes)	WITHOUT_CLASSIFICATION	0.9999925877059196	WITHOUT_CLASSIFICATION	7.412294080390285E-6	DEFECT
// Set start time	WITHOUT_CLASSIFICATION	0.9999982267961735	WITHOUT_CLASSIFICATION	1.7732038265439871E-6	DEFECT
/* PUT exclusions in test */	WITHOUT_CLASSIFICATION	0.9999856184582014	WITHOUT_CLASSIFICATION	1.4381541798522628E-5	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9999567827040743	WITHOUT_CLASSIFICATION	4.321729592560103E-5	DEFECT
// test 9am-4pm Monday through Friday timeline	WITHOUT_CLASSIFICATION	0.9999984575445873	WITHOUT_CLASSIFICATION	1.5424554126523186E-6	DEFECT
// calculate 9am on the first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.9999453452787788	WITHOUT_CLASSIFICATION	5.465472122112503E-5	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999998042346061	WITHOUT_CLASSIFICATION	1.957653939765488E-7	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999998042346061	WITHOUT_CLASSIFICATION	1.957653939765488E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // test one-segment and adjacent segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999989890853365	WITHOUT_CLASSIFICATION	1.0109146635264808E-6	DEFECT
// get two consecutive segments for various tests	WITHOUT_CLASSIFICATION	0.9999992683664448	WITHOUT_CLASSIFICATION	7.316335551640708E-7	DEFECT
// verify segments are consecutive and correct	WITHOUT_CLASSIFICATION	0.9999108680549494	WITHOUT_CLASSIFICATION	8.913194505065221E-5	DEFECT
// verify various indices inside a segment are the same segment	WITHOUT_CLASSIFICATION	0.9999959101181735	WITHOUT_CLASSIFICATION	4.089881826491887E-6	DEFECT
// try next segment	WITHOUT_CLASSIFICATION	0.9999985241303234	WITHOUT_CLASSIFICATION	1.4758696765891079E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test inc methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999994600056035	WITHOUT_CLASSIFICATION	5.399943964512081E-7	DEFECT
// test inc() method	WITHOUT_CLASSIFICATION	0.9999990906775466	WITHOUT_CLASSIFICATION	9.093224533555575E-7	DEFECT
// logically consecutive segments non-physically consecutive // (with non-contained time in between)	WITHOUT_CLASSIFICATION	0.9999578126695684	WITHOUT_CLASSIFICATION	4.218733043162335E-5	DEFECT
// physically consecutive	WITHOUT_CLASSIFICATION	0.9999746612977474	WITHOUT_CLASSIFICATION	2.533870225261249E-5	DEFECT
// test inc(n) method	WITHOUT_CLASSIFICATION	0.9999981511884175	WITHOUT_CLASSIFICATION	1.8488115825879813E-6	DEFECT
// go to another segment to continue test	WITHOUT_CLASSIFICATION	0.9999999881703064	WITHOUT_CLASSIFICATION	1.1829693595582342E-8	DEFECT
// clear any exceptions in this timeline	WITHOUT_CLASSIFICATION	0.9996742222106281	WITHOUT_CLASSIFICATION	3.25777789371906E-4	DEFECT
// test some included and excluded segments	WITHOUT_CLASSIFICATION	0.9999993049890814	WITHOUT_CLASSIFICATION	6.95010918624958E-7	DEFECT
// should be an included segment	WITHOUT_CLASSIFICATION	0.9999972200218077	WITHOUT_CLASSIFICATION	2.779978192236525E-6	DEFECT
// should be an excluded segment	WITHOUT_CLASSIFICATION	0.9999972297130884	WITHOUT_CLASSIFICATION	2.7702869116378938E-6	DEFECT
// fill in the exceptions	WITHOUT_CLASSIFICATION	0.9999898671118997	WITHOUT_CLASSIFICATION	1.0132888100374591E-5	DEFECT
// verify list of exceptions	WITHOUT_CLASSIFICATION	0.9999995629645714	WITHOUT_CLASSIFICATION	4.3703542855644626E-7	DEFECT
// include current exception and last one	WITHOUT_CLASSIFICATION	0.9999989197238096	WITHOUT_CLASSIFICATION	1.080276190336949E-6	DEFECT
// exclude current exception and last one	WITHOUT_CLASSIFICATION	0.9999995084850581	WITHOUT_CLASSIFICATION	4.915149417516868E-7	DEFECT
// make sure there are no exceptions	WITHOUT_CLASSIFICATION	0.9999992105508563	WITHOUT_CLASSIFICATION	7.894491437037469E-7	DEFECT
// add our exceptions and store locally in ArrayList of Longs	WITHOUT_CLASSIFICATION	0.9999991447341677	WITHOUT_CLASSIFICATION	8.552658323348272E-7	DEFECT
// only add an exception if it is currently an included segment	WITHOUT_CLASSIFICATION	0.9999436642945592	WITHOUT_CLASSIFICATION	5.633570544082243E-5	DEFECT
// make array of exceptions	WITHOUT_CLASSIFICATION	0.9999968211112802	WITHOUT_CLASSIFICATION	3.1788887198955425E-6	DEFECT
// add the base timeline exclusions as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999986997080981	WITHOUT_CLASSIFICATION	1.3002919019717111E-6	DEFECT
// validate base timeline exclusions added as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999991955763308	WITHOUT_CLASSIFICATION	8.044236691383682E-7	DEFECT
// start time...	WITHOUT_CLASSIFICATION	0.9999936036490448	WITHOUT_CLASSIFICATION	6.396350955221799E-6	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.999960215650568	WITHOUT_CLASSIFICATION	3.978434943191657E-5	DEFECT
//long v = stl.toTimelineValue(946684800020L);	WITHOUT_CLASSIFICATION	0.9999989184016841	WITHOUT_CLASSIFICATION	1.0815983158980604E-6	DEFECT
// tick labels visible flag...	WITHOUT_CLASSIFICATION	0.99979271182519	WITHOUT_CLASSIFICATION	2.0728817480995007E-4	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.9999970056894439	WITHOUT_CLASSIFICATION	2.9943105560939055E-6	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.9999983177730282	WITHOUT_CLASSIFICATION	1.6822269718452354E-6	DEFECT
// the reverse transformed value will be in the start of the // next non-excluded and non-exception segment	WITHOUT_CLASSIFICATION	0.999999994664284	WITHOUT_CLASSIFICATION	5.335715953048153E-9	DEFECT
////////////////////////////////////////////////////////////////////////// // test serialization //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996719597314	WITHOUT_CLASSIFICATION	3.280402685274761E-7	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.999999856939425	WITHOUT_CLASSIFICATION	1.4306057498891192E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // utility methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999981647444132	WITHOUT_CLASSIFICATION	1.8352555867567819E-6	DEFECT
// subcategories	WITHOUT_CLASSIFICATION	0.9999999548324193	WITHOUT_CLASSIFICATION	4.516758069885588E-8	DEFECT
// subLabelFont	WITHOUT_CLASSIFICATION	0.9999998897758484	WITHOUT_CLASSIFICATION	1.1022415156238485E-7	DEFECT
// subLabelPaint	WITHOUT_CLASSIFICATION	0.9999999264148063	WITHOUT_CLASSIFICATION	7.358519374944905E-8	DEFECT
// some checks that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999889999371	WITHOUT_CLASSIFICATION	1.1000062759717344E-8	DEFECT
// visible flag...	WITHOUT_CLASSIFICATION	0.9999544835517222	WITHOUT_CLASSIFICATION	4.5516448277822566E-5	DEFECT
// label...	WITHOUT_CLASSIFICATION	0.9999671159890875	WITHOUT_CLASSIFICATION	3.2884010912586656E-5	DEFECT
// label font...	WITHOUT_CLASSIFICATION	0.99993967450613	WITHOUT_CLASSIFICATION	6.032549387000602E-5	DEFECT
// label paint...	WITHOUT_CLASSIFICATION	0.9999362251013162	WITHOUT_CLASSIFICATION	6.377489868382885E-5	DEFECT
// attributed label...	WITHOUT_CLASSIFICATION	0.9999968985614354	WITHOUT_CLASSIFICATION	3.1014385646584214E-6	DEFECT
// label insets...	WITHOUT_CLASSIFICATION	0.9999852651419956	WITHOUT_CLASSIFICATION	1.4734858004397E-5	DEFECT
// label angle...	WITHOUT_CLASSIFICATION	0.9999187882528665	WITHOUT_CLASSIFICATION	8.121174713351535E-5	DEFECT
// label location...	WITHOUT_CLASSIFICATION	0.999992564577071	WITHOUT_CLASSIFICATION	7.4354229290735585E-6	DEFECT
// axis line visible...	WITHOUT_CLASSIFICATION	0.9998595322920192	WITHOUT_CLASSIFICATION	1.404677079807527E-4	DEFECT
// axis line stroke...	WITHOUT_CLASSIFICATION	0.9994150953284962	WITHOUT_CLASSIFICATION	5.84904671503731E-4	DEFECT
// axis line paint...	WITHOUT_CLASSIFICATION	0.9999540030590546	WITHOUT_CLASSIFICATION	4.599694094551729E-5	DEFECT
// tick label font...	WITHOUT_CLASSIFICATION	0.9998829685246738	WITHOUT_CLASSIFICATION	1.1703147532614819E-4	DEFECT
// tick label paint...	WITHOUT_CLASSIFICATION	0.999881191263681	WITHOUT_CLASSIFICATION	1.1880873631886056E-4	DEFECT
// tick marks visible flag...	WITHOUT_CLASSIFICATION	0.9997914718213574	WITHOUT_CLASSIFICATION	2.0852817864267038E-4	DEFECT
// tick mark inside length...	WITHOUT_CLASSIFICATION	0.9998539227605134	WITHOUT_CLASSIFICATION	1.4607723948658786E-4	DEFECT
// tick mark outside length...	WITHOUT_CLASSIFICATION	0.9999721626972125	WITHOUT_CLASSIFICATION	2.7837302787518204E-5	DEFECT
// tick mark stroke...	WITHOUT_CLASSIFICATION	0.9991795172370286	WITHOUT_CLASSIFICATION	8.2048276297155E-4	DEFECT
// fixed dimension...	WITHOUT_CLASSIFICATION	0.9997643535914597	WITHOUT_CLASSIFICATION	2.3564640854041274E-4	DEFECT
// axis line visible flag...	WITHOUT_CLASSIFICATION	0.9999518275593502	WITHOUT_CLASSIFICATION	4.817244064976509E-5	DEFECT
// positiveArrowVisible;	WITHOUT_CLASSIFICATION	0.9999810788835977	WITHOUT_CLASSIFICATION	1.8921116402236632E-5	DEFECT
//private Shape upArrow;	WITHOUT_CLASSIFICATION	0.9999820532783639	WITHOUT_CLASSIFICATION	1.7946721636081014E-5	DEFECT
//private Shape downArrow;	WITHOUT_CLASSIFICATION	0.9999767627964222	WITHOUT_CLASSIFICATION	2.3237203577693553E-5	DEFECT
//private Shape leftArrow;	WITHOUT_CLASSIFICATION	0.9999477287676439	WITHOUT_CLASSIFICATION	5.2271232356138685E-5	DEFECT
//private Shape rightArrow;	WITHOUT_CLASSIFICATION	0.999943281006063	WITHOUT_CLASSIFICATION	5.6718993937003104E-5	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.9999677038607526	WITHOUT_CLASSIFICATION	3.229613924747385E-5	DEFECT
// inverted	WITHOUT_CLASSIFICATION	0.9999991183528427	WITHOUT_CLASSIFICATION	8.816471572296327E-7	DEFECT
//private TickUnits standardTickUnits;	WITHOUT_CLASSIFICATION	0.9999970137745785	WITHOUT_CLASSIFICATION	2.986225421432356E-6	DEFECT
// verticalTickLabels	WITHOUT_CLASSIFICATION	0.9999981307557874	WITHOUT_CLASSIFICATION	1.869244212673346E-6	DEFECT
// time zone	WITHOUT_CLASSIFICATION	0.9999921634093626	WITHOUT_CLASSIFICATION	7.83659063728404E-6	DEFECT
// locale	WITHOUT_CLASSIFICATION	0.999988478551809	WITHOUT_CLASSIFICATION	1.1521448190952713E-5	DEFECT
// chars	WITHOUT_CLASSIFICATION	0.9999996082188405	WITHOUT_CLASSIFICATION	3.9178115950485186E-7	DEFECT
// showYear[]	WITHOUT_CLASSIFICATION	0.9999983822892664	WITHOUT_CLASSIFICATION	1.6177107335519543E-6	DEFECT
// yearFormatter	WITHOUT_CLASSIFICATION	0.9999835212597741	WITHOUT_CLASSIFICATION	1.6478740225952183E-5	DEFECT
// NONE / NONE	WITHOUT_CLASSIFICATION	0.9999971671873111	WITHOUT_CLASSIFICATION	2.8328126889084603E-6	DEFECT
// NONE / RANGE	WITHOUT_CLASSIFICATION	0.9999957364471485	WITHOUT_CLASSIFICATION	4.263552851473506E-6	DEFECT
// NONE / FIXED	WITHOUT_CLASSIFICATION	0.9995698692959317	WITHOUT_CLASSIFICATION	4.301307040682054E-4	DEFECT
// RANGE / NONE	WITHOUT_CLASSIFICATION	0.9999867364723906	WITHOUT_CLASSIFICATION	1.3263527609443126E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.999996165712016	WITHOUT_CLASSIFICATION	3.8342879840438275E-6	DEFECT
// RANGE / RANGE	WITHOUT_CLASSIFICATION	0.9999624752534146	WITHOUT_CLASSIFICATION	3.75247465853489E-5	DEFECT
// RANGE / FIXED	WITHOUT_CLASSIFICATION	0.9943261718137248	WITHOUT_CLASSIFICATION	0.005673828186275212	DEFECT
// FIXED / NONE	WITHOUT_CLASSIFICATION	0.9993024213644955	WITHOUT_CLASSIFICATION	6.97578635504504E-4	DEFECT
// FIXED / RANGE	WITHOUT_CLASSIFICATION	0.9970332933179539	WITHOUT_CLASSIFICATION	0.0029667066820460814	DEFECT
// FIXED / FIXED	WITHOUT_CLASSIFICATION	0.9967801786374131	WITHOUT_CLASSIFICATION	0.00321982136258684	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.9999626894902044	WITHOUT_CLASSIFICATION	3.7310509795619646E-5	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.9999626894902044	WITHOUT_CLASSIFICATION	3.7310509795619646E-5	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.9999882717756154	WITHOUT_CLASSIFICATION	1.1728224384568716E-5	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.9999882717756154	WITHOUT_CLASSIFICATION	1.1728224384568716E-5	DEFECT
// try case where right item is shorter than center item	WITHOUT_CLASSIFICATION	0.9997100014179632	WITHOUT_CLASSIFICATION	2.899985820368609E-4	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.9999459903490783	WITHOUT_CLASSIFICATION	5.400965092173306E-5	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9999919170484208	WITHOUT_CLASSIFICATION	8.082951579116566E-6	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9999919170484208	WITHOUT_CLASSIFICATION	8.082951579116566E-6	DEFECT
// try case where left item is shorter than center item	WITHOUT_CLASSIFICATION	0.9997568770655	WITHOUT_CLASSIFICATION	2.4312293450004077E-4	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9999835014575521	WITHOUT_CLASSIFICATION	1.649854244787448E-5	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.9999857694066593	WITHOUT_CLASSIFICATION	1.4230593340696736E-5	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.9999574951891904	WITHOUT_CLASSIFICATION	4.2504810809576555E-5	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9999976500011507	WITHOUT_CLASSIFICATION	2.349998849221821E-6	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.999994700887371	WITHOUT_CLASSIFICATION	5.299112629020247E-6	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.9999767871884798	WITHOUT_CLASSIFICATION	2.3212811520155563E-5	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.9999443024389005	WITHOUT_CLASSIFICATION	5.5697561099501625E-5	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9999784146459535	WITHOUT_CLASSIFICATION	2.1585354046445946E-5	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.9999227223423696	WITHOUT_CLASSIFICATION	7.727765763048974E-5	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9999839715623547	WITHOUT_CLASSIFICATION	1.6028437645252625E-5	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.9999255238922039	WITHOUT_CLASSIFICATION	7.447610779603352E-5	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.9999417963015128	WITHOUT_CLASSIFICATION	5.8203698487117766E-5	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.999941647487477	WITHOUT_CLASSIFICATION	5.835251252302257E-5	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9999323303406449	WITHOUT_CLASSIFICATION	6.766965935508312E-5	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999994922265084	WITHOUT_CLASSIFICATION	5.077734915762074E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9999835014575521	WITHOUT_CLASSIFICATION	1.649854244787448E-5	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.9999857694066593	WITHOUT_CLASSIFICATION	1.4230593340696736E-5	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.9999574951891904	WITHOUT_CLASSIFICATION	4.2504810809576555E-5	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9999976500011507	WITHOUT_CLASSIFICATION	2.349998849221821E-6	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.999994700887371	WITHOUT_CLASSIFICATION	5.299112629020247E-6	DEFECT
// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.9999967902088648	WITHOUT_CLASSIFICATION	3.2097911352078203E-6	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999638491527951	WITHOUT_CLASSIFICATION	3.6150847204931946E-5	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.9999970957713432	WITHOUT_CLASSIFICATION	2.904228656900317E-6	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.9999926813604711	WITHOUT_CLASSIFICATION	7.318639528847071E-6	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.9999689067716875	WITHOUT_CLASSIFICATION	3.109322831249031E-5	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9999521095949144	WITHOUT_CLASSIFICATION	4.78904050856793E-5	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.9999963308684949	WITHOUT_CLASSIFICATION	3.669131504999595E-6	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.999985079116897	WITHOUT_CLASSIFICATION	1.4920883102981984E-5	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9999924988700464	WITHOUT_CLASSIFICATION	7.50112995363E-6	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.9999827004238648	WITHOUT_CLASSIFICATION	1.7299576135243373E-5	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9999942930177168	WITHOUT_CLASSIFICATION	5.706982283192765E-6	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.9999443024389005	WITHOUT_CLASSIFICATION	5.5697561099501625E-5	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.9999998931095192	WITHOUT_CLASSIFICATION	1.0689048086733918E-7	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.9999995539231853	WITHOUT_CLASSIFICATION	4.4607681475992283E-7	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.9999995539231853	WITHOUT_CLASSIFICATION	4.4607681475992283E-7	DEFECT
// date format	WITHOUT_CLASSIFICATION	0.999997439785222	WITHOUT_CLASSIFICATION	2.560214777961324E-6	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.9999978962222679	WITHOUT_CLASSIFICATION	2.1037777321194704E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999910351848176	WITHOUT_CLASSIFICATION	8.964815182398415E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999910351848176	WITHOUT_CLASSIFICATION	8.964815182398415E-6	DEFECT
// another test...	WITHOUT_CLASSIFICATION	0.9999446271285797	WITHOUT_CLASSIFICATION	5.537287142017494E-5	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999813336293679	WITHOUT_CLASSIFICATION	1.8666370632083845E-5	DEFECT
// format string...	WITHOUT_CLASSIFICATION	0.9999887146739375	WITHOUT_CLASSIFICATION	1.128532606250678E-5	DEFECT
// x number format	WITHOUT_CLASSIFICATION	0.9999997168743018	WITHOUT_CLASSIFICATION	2.831256982127899E-7	DEFECT
// y number format	WITHOUT_CLASSIFICATION	0.9999997127982324	WITHOUT_CLASSIFICATION	2.8720176760139443E-7	DEFECT
// z number format	WITHOUT_CLASSIFICATION	0.9999998505747065	WITHOUT_CLASSIFICATION	1.4942529346525998E-7	DEFECT
// x date format	WITHOUT_CLASSIFICATION	0.9999959174293279	WITHOUT_CLASSIFICATION	4.082570672085827E-6	DEFECT
// y date format	WITHOUT_CLASSIFICATION	0.9999974483968008	WITHOUT_CLASSIFICATION	2.5516031992472368E-6	DEFECT
// z date format	WITHOUT_CLASSIFICATION	0.9999983918470249	WITHOUT_CLASSIFICATION	1.6081529752090716E-6	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9999761862035768	WITHOUT_CLASSIFICATION	2.3813796423246675E-5	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.9999989336982658	WITHOUT_CLASSIFICATION	1.06630173432877E-6	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.9999990951589051	WITHOUT_CLASSIFICATION	9.048410949033944E-7	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9999949959473892	WITHOUT_CLASSIFICATION	5.0040526107887926E-6	DEFECT
// separatorsVisible	WITHOUT_CLASSIFICATION	0.9999995845849098	WITHOUT_CLASSIFICATION	4.154150903171103E-7	DEFECT
// separatorStroke	WITHOUT_CLASSIFICATION	0.9999876631929474	WITHOUT_CLASSIFICATION	1.2336807052583496E-5	DEFECT
// separatorPaint	WITHOUT_CLASSIFICATION	0.9999999183395355	WITHOUT_CLASSIFICATION	8.166046446438107E-8	DEFECT
// outerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999962566916978	WITHOUT_CLASSIFICATION	3.7433083021747243E-6	DEFECT
// sectionDepth	WITHOUT_CLASSIFICATION	0.9999987343710004	WITHOUT_CLASSIFICATION	1.2656289996509953E-6	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.9999867694411412	WITHOUT_CLASSIFICATION	1.3230558858720018E-5	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.99998076365579	WITHOUT_CLASSIFICATION	1.9236344209966672E-5	DEFECT
// domainAxes...	WITHOUT_CLASSIFICATION	0.9999924418537984	WITHOUT_CLASSIFICATION	7.558146201467311E-6	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.9999539958467929	WITHOUT_CLASSIFICATION	4.600415320714807E-5	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.9999227223423696	WITHOUT_CLASSIFICATION	7.727765763048974E-5	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9999839715623547	WITHOUT_CLASSIFICATION	1.6028437645252625E-5	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.999941512551789	WITHOUT_CLASSIFICATION	5.848744821111142E-5	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.9999255238922039	WITHOUT_CLASSIFICATION	7.447610779603352E-5	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.9999417963015128	WITHOUT_CLASSIFICATION	5.8203698487117766E-5	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.999941647487477	WITHOUT_CLASSIFICATION	5.835251252302257E-5	DEFECT
// check handling when the dataset is a regular XYDataset, not an // XYZDataset...	WITHOUT_CLASSIFICATION	0.9999312190074537	WITHOUT_CLASSIFICATION	6.878099254623773E-5	DEFECT
// domainAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999370574040637	WITHOUT_CLASSIFICATION	6.294259593629335E-5	DEFECT
// domainAxisLocations...	WITHOUT_CLASSIFICATION	0.9999929090578308	WITHOUT_CLASSIFICATION	7.090942169196153E-6	DEFECT
// draw shared domain axis...	WITHOUT_CLASSIFICATION	0.9999982772955893	WITHOUT_CLASSIFICATION	1.722704410748946E-6	DEFECT
// rangeAxes...	WITHOUT_CLASSIFICATION	0.9999950783008137	WITHOUT_CLASSIFICATION	4.921699186302729E-6	DEFECT
// rangeAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9998934873951806	WITHOUT_CLASSIFICATION	1.0651260481942702E-4	DEFECT
// rangeAxisLocations...	WITHOUT_CLASSIFICATION	0.9999958505107233	WITHOUT_CLASSIFICATION	4.149489276734725E-6	DEFECT
// datasetToDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999950493343713	WITHOUT_CLASSIFICATION	4.9506656287402426E-6	DEFECT
// datasetToRangeAxisMap...	WITHOUT_CLASSIFICATION	0.9999843023288949	WITHOUT_CLASSIFICATION	1.56976711051659E-5	DEFECT
// renderers...	WITHOUT_CLASSIFICATION	0.9999649698866545	WITHOUT_CLASSIFICATION	3.503011334546436E-5	DEFECT
// rendering order...	WITHOUT_CLASSIFICATION	0.9998209294847203	WITHOUT_CLASSIFICATION	1.7907051527955254E-4	DEFECT
// columnRenderingOrder...	WITHOUT_CLASSIFICATION	0.9999673082432436	WITHOUT_CLASSIFICATION	3.269175675633373E-5	DEFECT
// rowRenderingOrder...	WITHOUT_CLASSIFICATION	0.9998101296068612	WITHOUT_CLASSIFICATION	1.898703931386584E-4	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999976340410374	WITHOUT_CLASSIFICATION	2.3659589626156243E-6	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.999939746728451	WITHOUT_CLASSIFICATION	6.025327154891938E-5	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.9999991793390647	WITHOUT_CLASSIFICATION	8.206609352476215E-7	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999979397566824	WITHOUT_CLASSIFICATION	2.0602433175182165E-6	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.9999447152175592	WITHOUT_CLASSIFICATION	5.5284782440742624E-5	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999993702893787	WITHOUT_CLASSIFICATION	6.297106213304469E-7	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999919689289184	WITHOUT_CLASSIFICATION	8.031071081524308E-6	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.999997245124274	WITHOUT_CLASSIFICATION	2.7548757259796216E-6	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.999928512833552	WITHOUT_CLASSIFICATION	7.148716644801615E-5	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999987820692566	WITHOUT_CLASSIFICATION	1.2179307433411517E-6	DEFECT
// foreground domain markers	WITHOUT_CLASSIFICATION	0.9999995630691684	WITHOUT_CLASSIFICATION	4.36930831745741E-7	DEFECT
// background domain markers	WITHOUT_CLASSIFICATION	0.9999987564265009	WITHOUT_CLASSIFICATION	1.2435734991209565E-6	DEFECT
// foreground range markers...	WITHOUT_CLASSIFICATION	0.9999976346609873	WITHOUT_CLASSIFICATION	2.365339012751303E-6	DEFECT
// background range markers...	WITHOUT_CLASSIFICATION	0.9999932678991114	WITHOUT_CLASSIFICATION	6.7321008886233546E-6	DEFECT
// annotations	WITHOUT_CLASSIFICATION	0.999995703375541	WITHOUT_CLASSIFICATION	4.296624459092569E-6	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.9999947274564895	WITHOUT_CLASSIFICATION	5.27254351041607E-6	DEFECT
// fixed domain axis space...	WITHOUT_CLASSIFICATION	0.99988177137	WITHOUT_CLASSIFICATION	1.1822862999992596E-4	DEFECT
// fixed range axis space...	WITHOUT_CLASSIFICATION	0.9999374738579163	WITHOUT_CLASSIFICATION	6.252614208369776E-5	DEFECT
// crosshairDatasetIndex	WITHOUT_CLASSIFICATION	0.999998423491306	WITHOUT_CLASSIFICATION	1.576508694038792E-6	DEFECT
// domainCrosshairColumnKey	WITHOUT_CLASSIFICATION	0.999999251379389	WITHOUT_CLASSIFICATION	7.486206110231557E-7	DEFECT
// domainCrosshairRowKey	WITHOUT_CLASSIFICATION	0.9999976852668911	WITHOUT_CLASSIFICATION	2.3147331088411955E-6	DEFECT
// domainCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999947796609663	WITHOUT_CLASSIFICATION	5.2203390336891395E-6	DEFECT
// domainCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999535310384121	WITHOUT_CLASSIFICATION	4.646896158799159E-5	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999997877836303	WITHOUT_CLASSIFICATION	2.1221636975325704E-7	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999988155135062	WITHOUT_CLASSIFICATION	1.1844864937480915E-6	DEFECT
// we didn't get an exception so all is good	WITHOUT_CLASSIFICATION	0.9999843757623129	WITHOUT_CLASSIFICATION	1.5624237687009118E-5	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.999999304397844	WITHOUT_CLASSIFICATION	6.956021560089056E-7	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.999999304397844	WITHOUT_CLASSIFICATION	6.956021560089056E-7	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.9999977467956678	WITHOUT_CLASSIFICATION	2.253204332315493E-6	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999974396970321	WITHOUT_CLASSIFICATION	2.5603029679730174E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999982907507954	WITHOUT_CLASSIFICATION	1.7092492046575083E-6	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999964665481116	WITHOUT_CLASSIFICATION	3.533451888342324E-6	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999949744152974	WITHOUT_CLASSIFICATION	5.025584702647427E-6	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.999961788207357	WITHOUT_CLASSIFICATION	3.821179264303766E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999981151095558	WITHOUT_CLASSIFICATION	1.8848904442155013E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999981151095558	WITHOUT_CLASSIFICATION	1.8848904442155013E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999981151095558	WITHOUT_CLASSIFICATION	1.8848904442155013E-6	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999953270909174	WITHOUT_CLASSIFICATION	4.672909082577147E-6	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.999992031590528	WITHOUT_CLASSIFICATION	7.96840947203133E-6	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999999741122029	WITHOUT_CLASSIFICATION	2.5887797149195617E-8	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999999741122029	WITHOUT_CLASSIFICATION	2.5887797149195617E-8	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9999990238806532	WITHOUT_CLASSIFICATION	9.761193468095021E-7	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.9999992905586789	WITHOUT_CLASSIFICATION	7.094413210231081E-7	DEFECT
// needle paint	WITHOUT_CLASSIFICATION	0.9999995783963684	WITHOUT_CLASSIFICATION	4.216036316229608E-7	DEFECT
// value font	WITHOUT_CLASSIFICATION	0.9999986523355637	WITHOUT_CLASSIFICATION	1.3476644362478378E-6	DEFECT
// value paint	WITHOUT_CLASSIFICATION	0.9999989947001934	WITHOUT_CLASSIFICATION	1.0052998066534392E-6	DEFECT
// tick label font	WITHOUT_CLASSIFICATION	0.9999985611061939	WITHOUT_CLASSIFICATION	1.4388938060136716E-6	DEFECT
// tick label paint	WITHOUT_CLASSIFICATION	0.9999985356249133	WITHOUT_CLASSIFICATION	1.4643750867625642E-6	DEFECT
// tick label format	WITHOUT_CLASSIFICATION	0.9999989114384347	WITHOUT_CLASSIFICATION	1.088561565377423E-6	DEFECT
// tick paint	WITHOUT_CLASSIFICATION	0.9999967929095581	WITHOUT_CLASSIFICATION	3.2070904418574118E-6	DEFECT
// draw border	WITHOUT_CLASSIFICATION	0.999998710345385	WITHOUT_CLASSIFICATION	1.2896546150017857E-6	DEFECT
// meter angle	WITHOUT_CLASSIFICATION	0.9999973123792921	WITHOUT_CLASSIFICATION	2.687620707930214E-6	DEFECT
//key	WITHOUT_CLASSIFICATION	0.9996093814412071	WITHOUT_CLASSIFICATION	3.90618558792882E-4	DEFECT
//paint	WITHOUT_CLASSIFICATION	0.9999848234334557	WITHOUT_CLASSIFICATION	1.5176566544345829E-5	DEFECT
//stroke	WITHOUT_CLASSIFICATION	0.9996744558070347	WITHOUT_CLASSIFICATION	3.255441929652941E-4	DEFECT
//outlinePaint	WITHOUT_CLASSIFICATION	0.9999943586451666	WITHOUT_CLASSIFICATION	5.641354833375277E-6	DEFECT
//outlineStroke	WITHOUT_CLASSIFICATION	0.9996457070079682	WITHOUT_CLASSIFICATION	3.542929920317932E-4	DEFECT
//alpha	WITHOUT_CLASSIFICATION	0.9999572027262442	WITHOUT_CLASSIFICATION	4.2797273755722E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999863129869616	WITHOUT_CLASSIFICATION	1.368701303837041E-5	DEFECT
// drawBorder	WITHOUT_CLASSIFICATION	0.9999978332698306	WITHOUT_CLASSIFICATION	2.1667301695274512E-6	DEFECT
// rosePaint	WITHOUT_CLASSIFICATION	0.9999995561527123	WITHOUT_CLASSIFICATION	4.4384728766741935E-7	DEFECT
// roseCenterPaint	WITHOUT_CLASSIFICATION	0.9999995416758561	WITHOUT_CLASSIFICATION	4.583241438212963E-7	DEFECT
// roseHighlightPaint	WITHOUT_CLASSIFICATION	0.9999993095989775	WITHOUT_CLASSIFICATION	6.904010223289011E-7	DEFECT
// interiorGap...	WITHOUT_CLASSIFICATION	0.9999857364532516	WITHOUT_CLASSIFICATION	1.4263546748397198E-5	DEFECT
// circular	WITHOUT_CLASSIFICATION	0.9999987276403324	WITHOUT_CLASSIFICATION	1.2723596677159652E-6	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.9999864522843476	WITHOUT_CLASSIFICATION	1.3547715652508472E-5	DEFECT
// ignoreNullValues	WITHOUT_CLASSIFICATION	0.999998696451417	WITHOUT_CLASSIFICATION	1.303548582978663E-6	DEFECT
// sectionPaint	WITHOUT_CLASSIFICATION	0.9999995264978375	WITHOUT_CLASSIFICATION	4.7350216246459467E-7	DEFECT
// sectionPaintMap	WITHOUT_CLASSIFICATION	0.9999992703703421	WITHOUT_CLASSIFICATION	7.296296578800303E-7	DEFECT
// baseSectionPaint	WITHOUT_CLASSIFICATION	0.9999992703463176	WITHOUT_CLASSIFICATION	7.296536823336203E-7	DEFECT
// sectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999988949161767	WITHOUT_CLASSIFICATION	1.1050838232782144E-6	DEFECT
// sectionOutlinePaintList	WITHOUT_CLASSIFICATION	0.9999979831573903	WITHOUT_CLASSIFICATION	2.016842609660403E-6	DEFECT
// baseSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999982970971003	WITHOUT_CLASSIFICATION	1.702902899637269E-6	DEFECT
// sectionOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999202571698401	WITHOUT_CLASSIFICATION	7.974283015982735E-5	DEFECT
// baseSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.99992199995778	WITHOUT_CLASSIFICATION	7.800004222007666E-5	DEFECT
// shadowPaint	WITHOUT_CLASSIFICATION	0.9999996087212374	WITHOUT_CLASSIFICATION	3.9127876256124673E-7	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999994032564321	WITHOUT_CLASSIFICATION	5.967435678878647E-7	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999997268760744	WITHOUT_CLASSIFICATION	2.7312392560222496E-7	DEFECT
// labelOutlinePaint	WITHOUT_CLASSIFICATION	0.9999986058910384	WITHOUT_CLASSIFICATION	1.394108961604149E-6	DEFECT
// labelOutlineStroke	WITHOUT_CLASSIFICATION	0.9998691591037058	WITHOUT_CLASSIFICATION	1.3084089629420537E-4	DEFECT
// labelShadowPaint	WITHOUT_CLASSIFICATION	0.999998591823819	WITHOUT_CLASSIFICATION	1.4081761809652134E-6	DEFECT
// explodePercentages	WITHOUT_CLASSIFICATION	0.9999998813647705	WITHOUT_CLASSIFICATION	1.1863522952724945E-7	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999984120335018	WITHOUT_CLASSIFICATION	1.5879664981850323E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999996850508817	WITHOUT_CLASSIFICATION	3.149491182441289E-7	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999990053272162	WITHOUT_CLASSIFICATION	9.946727838895934E-7	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.999996901202038	WITHOUT_CLASSIFICATION	3.0987979620926187E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999978376778059	WITHOUT_CLASSIFICATION	2.1623221941487156E-6	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999997877836303	WITHOUT_CLASSIFICATION	2.1221636975325704E-7	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.9999864522843476	WITHOUT_CLASSIFICATION	1.3547715652508472E-5	DEFECT
// labelLinkPaint	WITHOUT_CLASSIFICATION	0.9999958922550888	WITHOUT_CLASSIFICATION	4.10774491121298E-6	DEFECT
// maximumLabelWidth	WITHOUT_CLASSIFICATION	0.9999997390322038	WITHOUT_CLASSIFICATION	2.6096779617509874E-7	DEFECT
// links visible	WITHOUT_CLASSIFICATION	0.9999274732880343	WITHOUT_CLASSIFICATION	7.252671196557214E-5	DEFECT
// labelGap	WITHOUT_CLASSIFICATION	0.9999954822532061	WITHOUT_CLASSIFICATION	4.517746793933277E-6	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999993668653688	WITHOUT_CLASSIFICATION	6.331346311196617E-7	DEFECT
// linkMargin	WITHOUT_CLASSIFICATION	0.9999891835280899	WITHOUT_CLASSIFICATION	1.081647191019556E-5	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999840450655687	WITHOUT_CLASSIFICATION	1.5954934431297113E-5	DEFECT
// labelLinkStroke	WITHOUT_CLASSIFICATION	0.999863299179719	WITHOUT_CLASSIFICATION	1.367008202809982E-4	DEFECT
// minimumArcAngleToDraw	WITHOUT_CLASSIFICATION	0.9999991187773902	WITHOUT_CLASSIFICATION	8.812226098412373E-7	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999995653382886	WITHOUT_CLASSIFICATION	4.346617113170717E-7	DEFECT
// legendLabelGenerator	WITHOUT_CLASSIFICATION	0.9999980257191216	WITHOUT_CLASSIFICATION	1.9742808785202525E-6	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999840450655687	WITHOUT_CLASSIFICATION	1.5954934431297113E-5	DEFECT
// legendLabelToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999993487248238	WITHOUT_CLASSIFICATION	6.512751762372314E-7	DEFECT
// legendLabelURLGenerator	WITHOUT_CLASSIFICATION	0.9999979555494548	WITHOUT_CLASSIFICATION	2.0444505451794394E-6	DEFECT
// autoPopulateSectionPaint	WITHOUT_CLASSIFICATION	0.9999997809894291	WITHOUT_CLASSIFICATION	2.1901057100864168E-7	DEFECT
// autoPopulateSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999994643138856	WITHOUT_CLASSIFICATION	5.356861144603779E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999981973876608	WITHOUT_CLASSIFICATION	1.802612339059727E-6	DEFECT
// autoPopulateSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999780712098367	WITHOUT_CLASSIFICATION	2.1928790163317427E-5	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.999995088883577	WITHOUT_CLASSIFICATION	4.9111164229809E-6	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.999995088883577	WITHOUT_CLASSIFICATION	4.9111164229809E-6	DEFECT
// change the shape and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999993738743096	WITHOUT_CLASSIFICATION	6.261256904694872E-7	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999995343510923	WITHOUT_CLASSIFICATION	4.65648907536293E-7	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999995343510923	WITHOUT_CLASSIFICATION	4.65648907536293E-7	DEFECT
// check that null items are ignored if requested	WITHOUT_CLASSIFICATION	0.9999999743204894	WITHOUT_CLASSIFICATION	2.5679510726128813E-8	DEFECT
// check that zero items are ignored if requested	WITHOUT_CLASSIFICATION	0.9999999933814587	WITHOUT_CLASSIFICATION	6.618541235469753E-9	DEFECT
// check that negative items are always ignored	WITHOUT_CLASSIFICATION	0.9999997128955425	WITHOUT_CLASSIFICATION	2.8710445751518253E-7	DEFECT
// noDataMessage	WITHOUT_CLASSIFICATION	0.9999992820099338	WITHOUT_CLASSIFICATION	7.179900661287929E-7	DEFECT
// noDataMessageFont	WITHOUT_CLASSIFICATION	0.9999995222035054	WITHOUT_CLASSIFICATION	4.777964945235813E-7	DEFECT
// noDataMessagePaint	WITHOUT_CLASSIFICATION	0.9999992761076641	WITHOUT_CLASSIFICATION	7.238923358232002E-7	DEFECT
// outlineVisible	WITHOUT_CLASSIFICATION	0.9999950923646918	WITHOUT_CLASSIFICATION	4.9076353083068495E-6	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9998641708631723	WITHOUT_CLASSIFICATION	1.358291368278627E-4	DEFECT
// foregroundAlpha	WITHOUT_CLASSIFICATION	0.9999992495772063	WITHOUT_CLASSIFICATION	7.504227936801398E-7	DEFECT
// backgroundAlpha	WITHOUT_CLASSIFICATION	0.9999953569453631	WITHOUT_CLASSIFICATION	4.643054636907516E-6	DEFECT
// drawingSupplier	WITHOUT_CLASSIFICATION	0.9999992757897329	WITHOUT_CLASSIFICATION	7.242102670945976E-7	DEFECT
// try a null collection	WITHOUT_CLASSIFICATION	0.9999613461672647	WITHOUT_CLASSIFICATION	3.865383273516621E-5	DEFECT
// dataExtractOrder	WITHOUT_CLASSIFICATION	0.9999996271729799	WITHOUT_CLASSIFICATION	3.7282702016894255E-7	DEFECT
// headPercent	WITHOUT_CLASSIFICATION	0.9999983195006505	WITHOUT_CLASSIFICATION	1.6804993493877157E-6	DEFECT
// interiorGap	WITHOUT_CLASSIFICATION	0.9999987591924088	WITHOUT_CLASSIFICATION	1.240807591151326E-6	DEFECT
// maxValue	WITHOUT_CLASSIFICATION	0.9999972331736362	WITHOUT_CLASSIFICATION	2.766826363807269E-6	DEFECT
// secondary renderers	WITHOUT_CLASSIFICATION	0.9999833583929283	WITHOUT_CLASSIFICATION	1.664160707164607E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999553948408866	WITHOUT_CLASSIFICATION	4.4605159113376524E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999553948408866	WITHOUT_CLASSIFICATION	4.4605159113376524E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999819185594226	WITHOUT_CLASSIFICATION	1.8081440577424056E-5	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.999970806053751	WITHOUT_CLASSIFICATION	2.919394624903059E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999819185594226	WITHOUT_CLASSIFICATION	1.8081440577424056E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999819185594226	WITHOUT_CLASSIFICATION	1.8081440577424056E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999819185594226	WITHOUT_CLASSIFICATION	1.8081440577424056E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999974396970321	WITHOUT_CLASSIFICATION	2.5603029679730174E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999982907507954	WITHOUT_CLASSIFICATION	1.7092492046575083E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999196810718767	WITHOUT_CLASSIFICATION	8.03189281232875E-5	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.9999993957261621	WITHOUT_CLASSIFICATION	6.04273837850395E-7	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.9999677038607526	WITHOUT_CLASSIFICATION	3.229613924747385E-5	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9999761862035768	WITHOUT_CLASSIFICATION	2.3813796423246675E-5	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.9999867694411412	WITHOUT_CLASSIFICATION	1.3230558858720018E-5	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.99998076365579	WITHOUT_CLASSIFICATION	1.9236344209966672E-5	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.9999989105188581	WITHOUT_CLASSIFICATION	1.089481141846619E-6	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999993668653688	WITHOUT_CLASSIFICATION	6.331346311196617E-7	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999995653382886	WITHOUT_CLASSIFICATION	4.346617113170717E-7	DEFECT
// change a series paint	WITHOUT_CLASSIFICATION	0.99999955322685	WITHOUT_CLASSIFICATION	4.4677315007467603E-7	DEFECT
// baseSeriesOutlineStroke	WITHOUT_CLASSIFICATION	0.9999635703805637	WITHOUT_CLASSIFICATION	3.6429619436388874E-5	DEFECT
// valueFont	WITHOUT_CLASSIFICATION	0.9999975792473949	WITHOUT_CLASSIFICATION	2.420752605133124E-6	DEFECT
// webFilled	WITHOUT_CLASSIFICATION	0.9999981398064633	WITHOUT_CLASSIFICATION	1.8601935367388885E-6	DEFECT
// change a series outline paint	WITHOUT_CLASSIFICATION	0.9999997820995761	WITHOUT_CLASSIFICATION	2.179004239225292E-7	DEFECT
// axisLabelGap	WITHOUT_CLASSIFICATION	0.9999994862246699	WITHOUT_CLASSIFICATION	5.137753300471351E-7	DEFECT
// thermometerPaint	WITHOUT_CLASSIFICATION	0.9999990346740267	WITHOUT_CLASSIFICATION	9.65325973300935E-7	DEFECT
// change the legendItemShape	WITHOUT_CLASSIFICATION	0.9999917880358707	WITHOUT_CLASSIFICATION	8.211964129290549E-6	DEFECT
// secondary DomainAxisLocations...	WITHOUT_CLASSIFICATION	0.9999951551615153	WITHOUT_CLASSIFICATION	4.844838484727695E-6	DEFECT
// change a series outline stroke	WITHOUT_CLASSIFICATION	0.9999811531645808	WITHOUT_CLASSIFICATION	1.8846835419202792E-5	DEFECT
// valueLocation	WITHOUT_CLASSIFICATION	0.9999964274199371	WITHOUT_CLASSIFICATION	3.5725800628313495E-6	DEFECT
// thermometerStroke	WITHOUT_CLASSIFICATION	0.9997881437965038	WITHOUT_CLASSIFICATION	2.1185620349615153E-4	DEFECT
// valuePaint	WITHOUT_CLASSIFICATION	0.9999981859896283	WITHOUT_CLASSIFICATION	1.8140103717817008E-6	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999986474100337	WITHOUT_CLASSIFICATION	1.3525899663321561E-6	DEFECT
// showValueLines	WITHOUT_CLASSIFICATION	0.9999974071374773	WITHOUT_CLASSIFICATION	2.5928625227058584E-6	DEFECT
// domainAxisLocation...	WITHOUT_CLASSIFICATION	0.999990381438012	WITHOUT_CLASSIFICATION	9.61856198804792E-6	DEFECT
// valueFormat	WITHOUT_CLASSIFICATION	0.9999972700131767	WITHOUT_CLASSIFICATION	2.7299868233454195E-6	DEFECT
// this doesn't work	WITHOUT_CLASSIFICATION	0.9466107841462105	WITHOUT_CLASSIFICATION	0.05338921585378956	DEFECT
// mercuryPaint	WITHOUT_CLASSIFICATION	0.9999995203019167	WITHOUT_CLASSIFICATION	4.79698083250471E-7	DEFECT
// rangeAxisLocation...	WITHOUT_CLASSIFICATION	0.9999943713880719	WITHOUT_CLASSIFICATION	5.6286119281464095E-6	DEFECT
// domainAxis...	WITHOUT_CLASSIFICATION	0.9999937922280017	WITHOUT_CLASSIFICATION	6.207771998363364E-6	DEFECT
// secondary DomainAxes...	WITHOUT_CLASSIFICATION	0.9999910275691842	WITHOUT_CLASSIFICATION	8.972430815739535E-6	DEFECT
// secondary RangeAxisLocations...	WITHOUT_CLASSIFICATION	0.999970609391287	WITHOUT_CLASSIFICATION	2.939060871304361E-5	DEFECT
// rangeAxis...	WITHOUT_CLASSIFICATION	0.999996552416913	WITHOUT_CLASSIFICATION	3.4475830869789724E-6	DEFECT
// renderer	WITHOUT_CLASSIFICATION	0.9999784215322303	WITHOUT_CLASSIFICATION	2.1578467769695678E-5	DEFECT
// secondary RangeAxes...	WITHOUT_CLASSIFICATION	0.9999477330290146	WITHOUT_CLASSIFICATION	5.2266970985373733E-5	DEFECT
// secondaryDatasetRangeAxisMap...	WITHOUT_CLASSIFICATION	0.999958006532969	WITHOUT_CLASSIFICATION	4.1993467031110456E-5	DEFECT
// secondary DatasetDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999912654418472	WITHOUT_CLASSIFICATION	8.73455815266728E-6	DEFECT
// try a collection with a single number plus a null	WITHOUT_CLASSIFICATION	0.9999955096000666	WITHOUT_CLASSIFICATION	4.4903999334443695E-6	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999994922265084	WITHOUT_CLASSIFICATION	5.077734915762074E-7	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999994922265084	WITHOUT_CLASSIFICATION	5.077734915762074E-7	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999953973125666	WITHOUT_CLASSIFICATION	4.602687433361793E-6	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9999761862035768	WITHOUT_CLASSIFICATION	2.3813796423246675E-5	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.9999989336982658	WITHOUT_CLASSIFICATION	1.06630173432877E-6	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.9999990951589051	WITHOUT_CLASSIFICATION	9.048410949033944E-7	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9998290558110684	WITHOUT_CLASSIFICATION	1.7094418893161083E-4	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9999949959473892	WITHOUT_CLASSIFICATION	5.0040526107887926E-6	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.999939746728451	WITHOUT_CLASSIFICATION	6.025327154891938E-5	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.9999991793390647	WITHOUT_CLASSIFICATION	8.206609352476215E-7	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999979397566824	WITHOUT_CLASSIFICATION	2.0602433175182165E-6	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.9999447152175592	WITHOUT_CLASSIFICATION	5.5284782440742624E-5	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999919689289184	WITHOUT_CLASSIFICATION	8.031071081524308E-6	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.999997245124274	WITHOUT_CLASSIFICATION	2.7548757259796216E-6	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.999928512833552	WITHOUT_CLASSIFICATION	7.148716644801615E-5	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999987820692566	WITHOUT_CLASSIFICATION	1.2179307433411517E-6	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.9999947274564895	WITHOUT_CLASSIFICATION	5.27254351041607E-6	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.9999790879376617	WITHOUT_CLASSIFICATION	2.091206233831041E-5	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999997877836303	WITHOUT_CLASSIFICATION	2.1221636975325704E-7	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.999999304397844	WITHOUT_CLASSIFICATION	6.956021560089056E-7	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.9999977467956678	WITHOUT_CLASSIFICATION	2.253204332315493E-6	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.999961788207357	WITHOUT_CLASSIFICATION	3.821179264303766E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999981151095558	WITHOUT_CLASSIFICATION	1.8848904442155013E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999981151095558	WITHOUT_CLASSIFICATION	1.8848904442155013E-6	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999953270909174	WITHOUT_CLASSIFICATION	4.672909082577147E-6	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999999741122029	WITHOUT_CLASSIFICATION	2.5887797149195617E-8	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999999741122029	WITHOUT_CLASSIFICATION	2.5887797149195617E-8	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9999990238806532	WITHOUT_CLASSIFICATION	9.761193468095021E-7	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.9999992905586789	WITHOUT_CLASSIFICATION	7.094413210231081E-7	DEFECT
// rangeZeroBaselineVisible	WITHOUT_CLASSIFICATION	0.9999937168593336	WITHOUT_CLASSIFICATION	6.28314066635672E-6	DEFECT
// rangeZeroBaselineStroke	WITHOUT_CLASSIFICATION	0.9999529007952211	WITHOUT_CLASSIFICATION	4.709920477888795E-5	DEFECT
// rangeZeroBaselinePaint	WITHOUT_CLASSIFICATION	0.9999989921212818	WITHOUT_CLASSIFICATION	1.007878718156021E-6	DEFECT
// range markers	WITHOUT_CLASSIFICATION	0.9999977785249071	WITHOUT_CLASSIFICATION	2.2214750928427627E-6	DEFECT
// secondary range markers	WITHOUT_CLASSIFICATION	0.9999934893983379	WITHOUT_CLASSIFICATION	6.510601662026741E-6	DEFECT
// quadrant origin	WITHOUT_CLASSIFICATION	0.9999998554881849	WITHOUT_CLASSIFICATION	1.445118149685305E-7	DEFECT
// quadrant paint	WITHOUT_CLASSIFICATION	0.9999997086608697	WITHOUT_CLASSIFICATION	2.9133913025430193E-7	DEFECT
// verify that the plot is listening to the cloned renderer	WITHOUT_CLASSIFICATION	0.9999996641032768	WITHOUT_CLASSIFICATION	3.3589672316277544E-7	DEFECT
// no renderer 1	WITHOUT_CLASSIFICATION	0.999989785845719	WITHOUT_CLASSIFICATION	1.0214154281145121E-5	DEFECT
// actually removes a1	WITHOUT_CLASSIFICATION	0.9999913093604527	WITHOUT_CLASSIFICATION	8.690639547421344E-6	DEFECT
// set up some objects...	WITHOUT_CLASSIFICATION	0.9999984034257766	WITHOUT_CLASSIFICATION	1.5965742233649123E-6	DEFECT
// paint sequence	WITHOUT_CLASSIFICATION	0.9999996275599868	WITHOUT_CLASSIFICATION	3.72440013160569E-7	DEFECT
// outline paint sequence	WITHOUT_CLASSIFICATION	0.999998850233083	WITHOUT_CLASSIFICATION	1.1497669169504595E-6	DEFECT
// outline stroke sequence	WITHOUT_CLASSIFICATION	0.9999403535563539	WITHOUT_CLASSIFICATION	5.9646443646030534E-5	DEFECT
// shape sequence	WITHOUT_CLASSIFICATION	0.9999995242571079	WITHOUT_CLASSIFICATION	4.757428921677506E-7	DEFECT
// paint index	WITHOUT_CLASSIFICATION	0.9999970937154405	WITHOUT_CLASSIFICATION	2.906284559396136E-6	DEFECT
// outline paint index	WITHOUT_CLASSIFICATION	0.9999946145407949	WITHOUT_CLASSIFICATION	5.385459205066073E-6	DEFECT
// outline stroke index	WITHOUT_CLASSIFICATION	0.9996561749958927	WITHOUT_CLASSIFICATION	3.438250041073626E-4	DEFECT
// shape index	WITHOUT_CLASSIFICATION	0.9999968736274228	WITHOUT_CLASSIFICATION	3.126372577166953E-6	DEFECT
// create dataset 2...	WITHOUT_CLASSIFICATION	0.9999995725818912	WITHOUT_CLASSIFICATION	4.274181088066445E-7	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999953973125666	WITHOUT_CLASSIFICATION	4.602687433361793E-6	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999954608089529	WITHOUT_CLASSIFICATION	4.539191047096632E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999996850508817	WITHOUT_CLASSIFICATION	3.149491182441289E-7	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999972485343755	WITHOUT_CLASSIFICATION	2.751465624490453E-6	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.999993681804122	WITHOUT_CLASSIFICATION	6.3181958780252784E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999986873631264	WITHOUT_CLASSIFICATION	1.3126368736275976E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999978376778059	WITHOUT_CLASSIFICATION	2.1623221941487156E-6	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999975086916568	WITHOUT_CLASSIFICATION	2.491308343145574E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.999996165712016	WITHOUT_CLASSIFICATION	3.8342879840438275E-6	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.9999983385528104	WITHOUT_CLASSIFICATION	1.6614471895627925E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.999926460307576	WITHOUT_CLASSIFICATION	7.35396924238667E-5	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.999998887825498	WITHOUT_CLASSIFICATION	1.1121745020259797E-6	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999949744152974	WITHOUT_CLASSIFICATION	5.025584702647427E-6	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.999992031590528	WITHOUT_CLASSIFICATION	7.96840947203133E-6	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9998641708631723	WITHOUT_CLASSIFICATION	1.358291368278627E-4	DEFECT
// check the case where there is a secondary dataset that doesn't // have a renderer (i.e. falls back to renderer 0)	WITHOUT_CLASSIFICATION	0.9999521828931892	WITHOUT_CLASSIFICATION	4.781710681085341E-5	DEFECT
// now remove a3, but since a3.equals(a1), this will in fact remove // a1...	WITHOUT_CLASSIFICATION	0.9674767683395165	WITHOUT_CLASSIFICATION	0.03252323166048351	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999996871858171	WITHOUT_CLASSIFICATION	3.128141828796245E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999991997910626	WITHOUT_CLASSIFICATION	8.002089375074417E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999991997910626	WITHOUT_CLASSIFICATION	8.002089375074417E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999991997910626	WITHOUT_CLASSIFICATION	8.002089375074417E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999991997910626	WITHOUT_CLASSIFICATION	8.002089375074417E-7	DEFECT
// visible	WITHOUT_CLASSIFICATION	0.9999818267033107	WITHOUT_CLASSIFICATION	1.8173296689372123E-5	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999976909946553	WITHOUT_CLASSIFICATION	2.309005344674865E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999996294547483	WITHOUT_CLASSIFICATION	3.7054525169760895E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999996294547483	WITHOUT_CLASSIFICATION	3.7054525169760895E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999996294547483	WITHOUT_CLASSIFICATION	3.7054525169760895E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999996294547483	WITHOUT_CLASSIFICATION	3.7054525169760895E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999996294547483	WITHOUT_CLASSIFICATION	3.7054525169760895E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999996294547483	WITHOUT_CLASSIFICATION	3.7054525169760895E-7	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999976909946553	WITHOUT_CLASSIFICATION	2.309005344674865E-6	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999976909946553	WITHOUT_CLASSIFICATION	2.309005344674865E-6	DEFECT
// foregroundPaint	WITHOUT_CLASSIFICATION	0.9999997878487427	WITHOUT_CLASSIFICATION	2.121512574080857E-7	DEFECT
// background paint	WITHOUT_CLASSIFICATION	0.9999990980920844	WITHOUT_CLASSIFICATION	9.019079155852124E-7	DEFECT
// foreground paint	WITHOUT_CLASSIFICATION	0.99999985423171	WITHOUT_CLASSIFICATION	1.4576829000801654E-7	DEFECT
// inner radius	WITHOUT_CLASSIFICATION	0.9999985894050437	WITHOUT_CLASSIFICATION	1.4105949563808336E-6	DEFECT
// outer radius	WITHOUT_CLASSIFICATION	0.9999990478419513	WITHOUT_CLASSIFICATION	9.521580487280034E-7	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.9999995532600222	WITHOUT_CLASSIFICATION	4.4673997777858264E-7	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.9999995532600222	WITHOUT_CLASSIFICATION	4.4673997777858264E-7	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.9999905776939564	WITHOUT_CLASSIFICATION	9.422306043626673E-6	DEFECT
// frameAnchor	WITHOUT_CLASSIFICATION	0.999999564011637	WITHOUT_CLASSIFICATION	4.359883630343336E-7	DEFECT
// templateValue	WITHOUT_CLASSIFICATION	0.9999934319804591	WITHOUT_CLASSIFICATION	6.56801954099672E-6	DEFECT
// valueAnchor	WITHOUT_CLASSIFICATION	0.9999985352423647	WITHOUT_CLASSIFICATION	1.4647576352464708E-6	DEFECT
// fill paint	WITHOUT_CLASSIFICATION	0.9999982850960638	WITHOUT_CLASSIFICATION	1.7149039362767428E-6	DEFECT
// outline paint	WITHOUT_CLASSIFICATION	0.9999981359766366	WITHOUT_CLASSIFICATION	1.8640233634581574E-6	DEFECT
// outline stroke	WITHOUT_CLASSIFICATION	0.9999539608257043	WITHOUT_CLASSIFICATION	4.6039174295634495E-5	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999997259021912	WITHOUT_CLASSIFICATION	2.740978088011512E-7	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.999998836148194	WITHOUT_CLASSIFICATION	1.1638518059686997E-6	DEFECT
// background	WITHOUT_CLASSIFICATION	0.999995354631031	WITHOUT_CLASSIFICATION	4.64536896910976E-6	DEFECT
// dial cap	WITHOUT_CLASSIFICATION	0.9999553458804921	WITHOUT_CLASSIFICATION	4.465411950804829E-5	DEFECT
// frame	WITHOUT_CLASSIFICATION	0.9999981191909809	WITHOUT_CLASSIFICATION	1.8808090190598804E-6	DEFECT
// view	WITHOUT_CLASSIFICATION	0.9999815825651514	WITHOUT_CLASSIFICATION	1.8417434848622978E-5	DEFECT
// layer	WITHOUT_CLASSIFICATION	0.9999843328229369	WITHOUT_CLASSIFICATION	1.5667177063137353E-5	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999978376778059	WITHOUT_CLASSIFICATION	2.1623221941487156E-6	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999975086916568	WITHOUT_CLASSIFICATION	2.491308343145574E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.999996165712016	WITHOUT_CLASSIFICATION	3.8342879840438275E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.999926460307576	WITHOUT_CLASSIFICATION	7.35396924238667E-5	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999971069392226	WITHOUT_CLASSIFICATION	2.893060777421339E-6	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.9999981202740138	WITHOUT_CLASSIFICATION	1.8797259862369058E-6	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999987949513657	WITHOUT_CLASSIFICATION	1.2050486342702773E-6	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9998641708631723	WITHOUT_CLASSIFICATION	1.358291368278627E-4	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999996871858171	WITHOUT_CLASSIFICATION	3.128141828796245E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999991997910626	WITHOUT_CLASSIFICATION	8.002089375074417E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999991997910626	WITHOUT_CLASSIFICATION	8.002089375074417E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999996294547483	WITHOUT_CLASSIFICATION	3.7054525169760895E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999996294547483	WITHOUT_CLASSIFICATION	3.7054525169760895E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999996294547483	WITHOUT_CLASSIFICATION	3.7054525169760895E-7	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999976909946553	WITHOUT_CLASSIFICATION	2.309005344674865E-6	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.9999905776939564	WITHOUT_CLASSIFICATION	9.422306043626673E-6	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999997259021912	WITHOUT_CLASSIFICATION	2.740978088011512E-7	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999997259021912	WITHOUT_CLASSIFICATION	2.740978088011512E-7	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.999998836148194	WITHOUT_CLASSIFICATION	1.1638518059686997E-6	DEFECT
// majorTickIncrement	WITHOUT_CLASSIFICATION	0.999997429537278	WITHOUT_CLASSIFICATION	2.5704627220913884E-6	DEFECT
// majorTickLength	WITHOUT_CLASSIFICATION	0.9999977967086761	WITHOUT_CLASSIFICATION	2.203291324012535E-6	DEFECT
// majorTickPaint	WITHOUT_CLASSIFICATION	0.9999991409343331	WITHOUT_CLASSIFICATION	8.590656669115262E-7	DEFECT
// majorTickStroke	WITHOUT_CLASSIFICATION	0.9999489904491634	WITHOUT_CLASSIFICATION	5.100955083664567E-5	DEFECT
// minorTickLength	WITHOUT_CLASSIFICATION	0.9999968011488678	WITHOUT_CLASSIFICATION	3.198851132320106E-6	DEFECT
// tickLabelOffset	WITHOUT_CLASSIFICATION	0.9999995340291937	WITHOUT_CLASSIFICATION	4.659708062729453E-7	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.9999992011909677	WITHOUT_CLASSIFICATION	7.988090321362884E-7	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999994020282336	WITHOUT_CLASSIFICATION	5.979717665301681E-7	DEFECT
// label	WITHOUT_CLASSIFICATION	0.9999890670684997	WITHOUT_CLASSIFICATION	1.0932931500292072E-5	DEFECT
// gradient paint transformer	WITHOUT_CLASSIFICATION	0.9999998681455253	WITHOUT_CLASSIFICATION	1.3185447467936628E-7	DEFECT
// test default instance	WITHOUT_CLASSIFICATION	0.999999839091909	WITHOUT_CLASSIFICATION	1.6090809091512122E-7	DEFECT
// have to use a concrete subclass...	WITHOUT_CLASSIFICATION	0.9999997043870147	WITHOUT_CLASSIFICATION	2.9561298531836433E-7	DEFECT
// seriesVisible	WITHOUT_CLASSIFICATION	0.9999978118061553	WITHOUT_CLASSIFICATION	2.188193844754684E-6	DEFECT
// seriesVisibleList	WITHOUT_CLASSIFICATION	0.999997999663034	WITHOUT_CLASSIFICATION	2.0003369659237477E-6	DEFECT
// baseSeriesVisible	WITHOUT_CLASSIFICATION	0.9999950917913273	WITHOUT_CLASSIFICATION	4.908208672697477E-6	DEFECT
// seriesVisibleInLegendList	WITHOUT_CLASSIFICATION	0.999995735458365	WITHOUT_CLASSIFICATION	4.264541634993964E-6	DEFECT
// baseSeriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.9999862566293919	WITHOUT_CLASSIFICATION	1.374337060813626E-5	DEFECT
// paintList	WITHOUT_CLASSIFICATION	0.9999982668530086	WITHOUT_CLASSIFICATION	1.7331469912524E-6	DEFECT
// basePaint	WITHOUT_CLASSIFICATION	0.9999993546369265	WITHOUT_CLASSIFICATION	6.453630734533073E-7	DEFECT
// baseFillPaint	WITHOUT_CLASSIFICATION	0.9999991423564454	WITHOUT_CLASSIFICATION	8.576435545882555E-7	DEFECT
// outlinePaintList	WITHOUT_CLASSIFICATION	0.9999982626270251	WITHOUT_CLASSIFICATION	1.7373729749740888E-6	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.9999995417685025	WITHOUT_CLASSIFICATION	4.5823149754682025E-7	DEFECT
// strokeList	WITHOUT_CLASSIFICATION	0.9999466612197672	WITHOUT_CLASSIFICATION	5.333878023282642E-5	DEFECT
// outlineStrokeList	WITHOUT_CLASSIFICATION	0.9999313062260898	WITHOUT_CLASSIFICATION	6.869377391019705E-5	DEFECT
// baseOutlineStroke	WITHOUT_CLASSIFICATION	0.9999755090810191	WITHOUT_CLASSIFICATION	2.449091898089196E-5	DEFECT
// shapeList	WITHOUT_CLASSIFICATION	0.9999990431482935	WITHOUT_CLASSIFICATION	9.568517064872996E-7	DEFECT
// baseShape	WITHOUT_CLASSIFICATION	0.9999975652316158	WITHOUT_CLASSIFICATION	2.4347683842176913E-6	DEFECT
// itemLabelsVisibleList	WITHOUT_CLASSIFICATION	0.9999858830155511	WITHOUT_CLASSIFICATION	1.4116984448911624E-5	DEFECT
// baseItemLabelsVisible	WITHOUT_CLASSIFICATION	0.9999930809070325	WITHOUT_CLASSIFICATION	6.9190929674117325E-6	DEFECT
// itemLabelFont	WITHOUT_CLASSIFICATION	0.9999983272088737	WITHOUT_CLASSIFICATION	1.6727911262428413E-6	DEFECT
// baseItemLabelFont	WITHOUT_CLASSIFICATION	0.9999995176997347	WITHOUT_CLASSIFICATION	4.823002651913072E-7	DEFECT
// itemLabelPaint	WITHOUT_CLASSIFICATION	0.9999989276125737	WITHOUT_CLASSIFICATION	1.0723874262189714E-6	DEFECT
// itemLabelPaintList	WITHOUT_CLASSIFICATION	0.9999984620781915	WITHOUT_CLASSIFICATION	1.537921808539504E-6	DEFECT
// baseItemLabelPaint	WITHOUT_CLASSIFICATION	0.9999994345378317	WITHOUT_CLASSIFICATION	5.654621682993157E-7	DEFECT
// positiveItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9999991700615609	WITHOUT_CLASSIFICATION	8.299384390300599E-7	DEFECT
// basePositiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999989925044807	WITHOUT_CLASSIFICATION	1.007495519340483E-6	DEFECT
// negativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999996542223205	WITHOUT_CLASSIFICATION	3.457776795095092E-7	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.9999958173338444	WITHOUT_CLASSIFICATION	4.18266615561332E-6	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.9999799759215228	WITHOUT_CLASSIFICATION	2.002407847721548E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999196810718767	WITHOUT_CLASSIFICATION	8.03189281232875E-5	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.9999995417685025	WITHOUT_CLASSIFICATION	4.5823149754682025E-7	DEFECT
// itemLabelAnchorOffset	WITHOUT_CLASSIFICATION	0.9999997683346269	WITHOUT_CLASSIFICATION	2.3166537315512292E-7	DEFECT
// createEntities;	WITHOUT_CLASSIFICATION	0.9999997836325202	WITHOUT_CLASSIFICATION	2.1636747967293166E-7	DEFECT
// createEntitiesList;	WITHOUT_CLASSIFICATION	0.999999537487458	WITHOUT_CLASSIFICATION	4.625125420061083E-7	DEFECT
// legendShape	WITHOUT_CLASSIFICATION	0.999978020418384	WITHOUT_CLASSIFICATION	2.1979581615995295E-5	DEFECT
// baseLegendShape	WITHOUT_CLASSIFICATION	0.9999968201130423	WITHOUT_CLASSIFICATION	3.179886957752782E-6	DEFECT
// legendTextFont	WITHOUT_CLASSIFICATION	0.9999899699881375	WITHOUT_CLASSIFICATION	1.0030011862392686E-5	DEFECT
// baseLegendTextFont	WITHOUT_CLASSIFICATION	0.9999979424528901	WITHOUT_CLASSIFICATION	2.0575471098375795E-6	DEFECT
// OUTLINE PAINT	WITHOUT_CLASSIFICATION	0.9999955367663642	WITHOUT_CLASSIFICATION	4.463233635834212E-6	DEFECT
// ITEM_LABELS_VISIBLE	WITHOUT_CLASSIFICATION	0.999979654542723	WITHOUT_CLASSIFICATION	2.03454572770954E-5	DEFECT
// ITEM_LABEL_FONT	WITHOUT_CLASSIFICATION	0.9999907967795835	WITHOUT_CLASSIFICATION	9.203220416585418E-6	DEFECT
// POSITIVE ITEM LABEL POSITION	WITHOUT_CLASSIFICATION	0.9999714297126346	WITHOUT_CLASSIFICATION	2.857028736522933E-5	DEFECT
// NEGATIVE ITEM LABEL ANCHOR	WITHOUT_CLASSIFICATION	0.9999844084662021	WITHOUT_CLASSIFICATION	1.5591533797908955E-5	DEFECT
// failed	WITHOUT_CLASSIFICATION	0.9999906680252252	WITHOUT_CLASSIFICATION	9.3319747748213E-6	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.999999965325691	WITHOUT_CLASSIFICATION	3.4674309106643777E-8	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.999999965325691	WITHOUT_CLASSIFICATION	3.4674309106643777E-8	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.999999965325691	WITHOUT_CLASSIFICATION	3.4674309106643777E-8	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999779285362627	WITHOUT_CLASSIFICATION	2.2071463737432172E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999779285362627	WITHOUT_CLASSIFICATION	2.2071463737432172E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999779285362627	WITHOUT_CLASSIFICATION	2.2071463737432172E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999988252011108	WITHOUT_CLASSIFICATION	1.1747988892104503E-6	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999988252011108	WITHOUT_CLASSIFICATION	1.1747988892104503E-6	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999990587417544	WITHOUT_CLASSIFICATION	9.412582455397758E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999990587417544	WITHOUT_CLASSIFICATION	9.412582455397758E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999990587417544	WITHOUT_CLASSIFICATION	9.412582455397758E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999990587417544	WITHOUT_CLASSIFICATION	9.412582455397758E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999965148813156	WITHOUT_CLASSIFICATION	3.4851186842796843E-6	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999965148813156	WITHOUT_CLASSIFICATION	3.4851186842796843E-6	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999965148813156	WITHOUT_CLASSIFICATION	3.4851186842796843E-6	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999965148813156	WITHOUT_CLASSIFICATION	3.4851186842796843E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.999996599760104	WITHOUT_CLASSIFICATION	3.4002398960404894E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.999996599760104	WITHOUT_CLASSIFICATION	3.4002398960404894E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.999996599760104	WITHOUT_CLASSIFICATION	3.4002398960404894E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.999996599760104	WITHOUT_CLASSIFICATION	3.4002398960404894E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.999996599760104	WITHOUT_CLASSIFICATION	3.4002398960404894E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999995985028234	WITHOUT_CLASSIFICATION	4.0149717669063966E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999995985028234	WITHOUT_CLASSIFICATION	4.0149717669063966E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999995985028234	WITHOUT_CLASSIFICATION	4.0149717669063966E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999995985028234	WITHOUT_CLASSIFICATION	4.0149717669063966E-7	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999988873682173	WITHOUT_CLASSIFICATION	1.1126317826508434E-6	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999988873682173	WITHOUT_CLASSIFICATION	1.1126317826508434E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999196810718767	WITHOUT_CLASSIFICATION	8.03189281232875E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999988252011108	WITHOUT_CLASSIFICATION	1.1747988892104503E-6	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999990587417544	WITHOUT_CLASSIFICATION	9.412582455397758E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999965148813156	WITHOUT_CLASSIFICATION	3.4851186842796843E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.999996599760104	WITHOUT_CLASSIFICATION	3.4002398960404894E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999995985028234	WITHOUT_CLASSIFICATION	4.0149717669063966E-7	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999988873682173	WITHOUT_CLASSIFICATION	1.1126317826508434E-6	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9999981798431814	WITHOUT_CLASSIFICATION	1.8201568187209606E-6	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.9999990849187528	WITHOUT_CLASSIFICATION	9.150812471792849E-7	DEFECT
// try with gradient paint	WITHOUT_CLASSIFICATION	0.9999976254221975	WITHOUT_CLASSIFICATION	2.3745778025464725E-6	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.999970365990059	WITHOUT_CLASSIFICATION	2.9634009941010147E-5	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.999970365990059	WITHOUT_CLASSIFICATION	2.9634009941010147E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999031136523461	WITHOUT_CLASSIFICATION	9.688634765398814E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999031136523461	WITHOUT_CLASSIFICATION	9.688634765398814E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999031136523461	WITHOUT_CLASSIFICATION	9.688634765398814E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999996784223691	WITHOUT_CLASSIFICATION	3.2157763085831445E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999996784223691	WITHOUT_CLASSIFICATION	3.2157763085831445E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999960855021716	WITHOUT_CLASSIFICATION	3.914497828459818E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999960855021716	WITHOUT_CLASSIFICATION	3.914497828459818E-6	DEFECT
// the renderer should not be equal to a BarRenderer	WITHOUT_CLASSIFICATION	0.9999783859540937	WITHOUT_CLASSIFICATION	2.161404590622461E-5	DEFECT
// firstBarPaint;	WITHOUT_CLASSIFICATION	0.9999997454030857	WITHOUT_CLASSIFICATION	2.5459691431680477E-7	DEFECT
// lastBarPaint;	WITHOUT_CLASSIFICATION	0.9999976457787728	WITHOUT_CLASSIFICATION	2.354221227061873E-6	DEFECT
// positiveBarPaint;	WITHOUT_CLASSIFICATION	0.9999993048595482	WITHOUT_CLASSIFICATION	6.951404517418886E-7	DEFECT
//private Paint negativeBarPaint;	WITHOUT_CLASSIFICATION	0.9999954041246726	WITHOUT_CLASSIFICATION	4.595875327372828E-6	DEFECT
// quick check for independence	WITHOUT_CLASSIFICATION	0.9999995856645967	WITHOUT_CLASSIFICATION	4.143354033885887E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999196810718767	WITHOUT_CLASSIFICATION	8.03189281232875E-5	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999994032564321	WITHOUT_CLASSIFICATION	5.967435678878647E-7	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999997268760744	WITHOUT_CLASSIFICATION	2.7312392560222496E-7	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999993668653688	WITHOUT_CLASSIFICATION	6.331346311196617E-7	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999995653382886	WITHOUT_CLASSIFICATION	4.346617113170717E-7	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.999970365990059	WITHOUT_CLASSIFICATION	2.9634009941010147E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999031136523461	WITHOUT_CLASSIFICATION	9.688634765398814E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999996784223691	WITHOUT_CLASSIFICATION	3.2157763085831445E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999996784223691	WITHOUT_CLASSIFICATION	3.2157763085831445E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999996784223691	WITHOUT_CLASSIFICATION	3.2157763085831445E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999996784223691	WITHOUT_CLASSIFICATION	3.2157763085831445E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999960855021716	WITHOUT_CLASSIFICATION	3.914497828459818E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999960855021716	WITHOUT_CLASSIFICATION	3.914497828459818E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999960855021716	WITHOUT_CLASSIFICATION	3.914497828459818E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999960855021716	WITHOUT_CLASSIFICATION	3.914497828459818E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999960855021716	WITHOUT_CLASSIFICATION	3.914497828459818E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999960855021716	WITHOUT_CLASSIFICATION	3.914497828459818E-6	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.9999977296541179	WITHOUT_CLASSIFICATION	2.2703458820913926E-6	DEFECT
// map	WITHOUT_CLASSIFICATION	0.9999876019802005	WITHOUT_CLASSIFICATION	1.2398019799361073E-5	DEFECT
// toolTipGeneratorList	WITHOUT_CLASSIFICATION	0.9999993688443358	WITHOUT_CLASSIFICATION	6.311556641172301E-7	DEFECT
// baseToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999998153876173	WITHOUT_CLASSIFICATION	1.8461238269133868E-7	DEFECT
// itemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999987499077845	WITHOUT_CLASSIFICATION	1.2500922156020055E-6	DEFECT
// itemLabelGeneratorList	WITHOUT_CLASSIFICATION	0.9999992788126456	WITHOUT_CLASSIFICATION	7.211873543995362E-7	DEFECT
// baseItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999996395726781	WITHOUT_CLASSIFICATION	3.6042732189664904E-7	DEFECT
// urlGeneratorList	WITHOUT_CLASSIFICATION	0.9999997430649429	WITHOUT_CLASSIFICATION	2.5693505719529624E-7	DEFECT
// baseItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999992003356496	WITHOUT_CLASSIFICATION	7.996643504424435E-7	DEFECT
// legendItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999977452130369	WITHOUT_CLASSIFICATION	2.25478696316364E-6	DEFECT
// legendItemToolTipGenerator	WITHOUT_CLASSIFICATION	0.999998077038309	WITHOUT_CLASSIFICATION	1.9229616909656237E-6	DEFECT
// legendItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999940355343607	WITHOUT_CLASSIFICATION	5.9644656392202665E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999975005087236	WITHOUT_CLASSIFICATION	2.4994912763828022E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999975005087236	WITHOUT_CLASSIFICATION	2.4994912763828022E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999975005087236	WITHOUT_CLASSIFICATION	2.4994912763828022E-6	DEFECT
// base value	WITHOUT_CLASSIFICATION	0.9999984092359337	WITHOUT_CLASSIFICATION	1.5907640662252491E-6	DEFECT
// itemMargin	WITHOUT_CLASSIFICATION	0.9999969819856995	WITHOUT_CLASSIFICATION	3.018014300518721E-6	DEFECT
// drawBarOutline	WITHOUT_CLASSIFICATION	0.9999981903932916	WITHOUT_CLASSIFICATION	1.8096067083500099E-6	DEFECT
// maximumBarWidth	WITHOUT_CLASSIFICATION	0.9999991802435835	WITHOUT_CLASSIFICATION	8.197564165658637E-7	DEFECT
// minimumBarLength	WITHOUT_CLASSIFICATION	0.9999983904301322	WITHOUT_CLASSIFICATION	1.6095698677420062E-6	DEFECT
// gradientPaintTransformer	WITHOUT_CLASSIFICATION	0.9999999296609828	WITHOUT_CLASSIFICATION	7.033901714848234E-8	DEFECT
// positiveItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.9999977801355174	WITHOUT_CLASSIFICATION	2.2198644825455E-6	DEFECT
// negativeItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.9999991719734833	WITHOUT_CLASSIFICATION	8.280265167428174E-7	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.9999990318214581	WITHOUT_CLASSIFICATION	9.681785418816424E-7	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.9999964372854926	WITHOUT_CLASSIFICATION	3.562714507471435E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999196810718767	WITHOUT_CLASSIFICATION	8.03189281232875E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999196810718767	WITHOUT_CLASSIFICATION	8.03189281232875E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999196810718767	WITHOUT_CLASSIFICATION	8.03189281232875E-5	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999994032564321	WITHOUT_CLASSIFICATION	5.967435678878647E-7	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999997268760744	WITHOUT_CLASSIFICATION	2.7312392560222496E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999996784223691	WITHOUT_CLASSIFICATION	3.2157763085831445E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999960855021716	WITHOUT_CLASSIFICATION	3.914497828459818E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999960855021716	WITHOUT_CLASSIFICATION	3.914497828459818E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999960855021716	WITHOUT_CLASSIFICATION	3.914497828459818E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999960855021716	WITHOUT_CLASSIFICATION	3.914497828459818E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999960855021716	WITHOUT_CLASSIFICATION	3.914497828459818E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999960855021716	WITHOUT_CLASSIFICATION	3.914497828459818E-6	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.9999977296541179	WITHOUT_CLASSIFICATION	2.2703458820913926E-6	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.9999990318214581	WITHOUT_CLASSIFICATION	9.681785418816424E-7	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.9999964372854926	WITHOUT_CLASSIFICATION	3.562714507471435E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999975036780838	WITHOUT_CLASSIFICATION	2.496321916133076E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997082792121	WITHOUT_CLASSIFICATION	2.917207878862869E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997082792121	WITHOUT_CLASSIFICATION	2.917207878862869E-7	DEFECT
// check that super class fields are being looked at...	WITHOUT_CLASSIFICATION	0.9998797933129501	WITHOUT_CLASSIFICATION	1.2020668704990808E-4	DEFECT
// setUseYInterval	WITHOUT_CLASSIFICATION	0.9999998483917263	WITHOUT_CLASSIFICATION	1.5160827376963412E-7	DEFECT
// setBase()	WITHOUT_CLASSIFICATION	0.9999980677076045	WITHOUT_CLASSIFICATION	1.932292395475344E-6	DEFECT
// try empty dataset	WITHOUT_CLASSIFICATION	0.9999997407568636	WITHOUT_CLASSIFICATION	2.5924313638563243E-7	DEFECT
// setGradientPaintTransformer()	WITHOUT_CLASSIFICATION	0.9999998172286229	WITHOUT_CLASSIFICATION	1.8277137705845264E-7	DEFECT
// setDrawBarOutline()	WITHOUT_CLASSIFICATION	0.9999990639846841	WITHOUT_CLASSIFICATION	9.360153159782726E-7	DEFECT
// setMargin()	WITHOUT_CLASSIFICATION	0.9999989714715312	WITHOUT_CLASSIFICATION	1.0285284688507962E-6	DEFECT
// legendBar	WITHOUT_CLASSIFICATION	0.9999862048048587	WITHOUT_CLASSIFICATION	1.3795195141255654E-5	DEFECT
// positiveItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9999966920179812	WITHOUT_CLASSIFICATION	3.3079820186127493E-6	DEFECT
// negativeItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9999987660964358	WITHOUT_CLASSIFICATION	1.2339035641983774E-6	DEFECT
// check a list containing a non-Number object	WITHOUT_CLASSIFICATION	0.9999999972797544	WITHOUT_CLASSIFICATION	2.7202455413722992E-9	DEFECT
// try something from the base class	WITHOUT_CLASSIFICATION	0.9999914234878943	WITHOUT_CLASSIFICATION	8.576512105729442E-6	DEFECT
// positive paint	WITHOUT_CLASSIFICATION	0.9999987822634172	WITHOUT_CLASSIFICATION	1.2177365828029702E-6	DEFECT
// negative paint	WITHOUT_CLASSIFICATION	0.9999990893700054	WITHOUT_CLASSIFICATION	9.106299946299459E-7	DEFECT
// shapesVisible	WITHOUT_CLASSIFICATION	0.9999959314627151	WITHOUT_CLASSIFICATION	4.068537284833303E-6	DEFECT
// legendLine	WITHOUT_CLASSIFICATION	0.9999840467253035	WITHOUT_CLASSIFICATION	1.5953274696426858E-5	DEFECT
// roundXCoordinates	WITHOUT_CLASSIFICATION	0.9999995730009387	WITHOUT_CLASSIFICATION	4.269990613040653E-7	DEFECT
// drawOpenTicks	WITHOUT_CLASSIFICATION	0.9999983804806111	WITHOUT_CLASSIFICATION	1.6195193888971666E-6	DEFECT
// drawCloseTicks	WITHOUT_CLASSIFICATION	0.9999996931208536	WITHOUT_CLASSIFICATION	3.068791464691397E-7	DEFECT
// openTickPaint	WITHOUT_CLASSIFICATION	0.9999985269839639	WITHOUT_CLASSIFICATION	1.4730160361230939E-6	DEFECT
// closeTickPaint	WITHOUT_CLASSIFICATION	0.9999998194308922	WITHOUT_CLASSIFICATION	1.8056910779222965E-7	DEFECT
// tickLength	WITHOUT_CLASSIFICATION	0.9999877002248873	WITHOUT_CLASSIFICATION	1.229977511280673E-5	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999992706172841	WITHOUT_CLASSIFICATION	7.293827160214194E-7	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999992378243516	WITHOUT_CLASSIFICATION	7.621756483453619E-7	DEFECT
// drawXError	WITHOUT_CLASSIFICATION	0.999972303405394	WITHOUT_CLASSIFICATION	2.7696594606036585E-5	DEFECT
// drawYError	WITHOUT_CLASSIFICATION	0.9999872904360609	WITHOUT_CLASSIFICATION	1.2709563939134685E-5	DEFECT
// capLength	WITHOUT_CLASSIFICATION	0.9999888336590803	WITHOUT_CLASSIFICATION	1.116634091971674E-5	DEFECT
// errorPaint	WITHOUT_CLASSIFICATION	0.9999970494145615	WITHOUT_CLASSIFICATION	2.9505854385795028E-6	DEFECT
// errorStroke	WITHOUT_CLASSIFICATION	0.9996909311693625	WITHOUT_CLASSIFICATION	3.090688306375945E-4	DEFECT
// check boxPaint null also	WITHOUT_CLASSIFICATION	0.9999996751430141	WITHOUT_CLASSIFICATION	3.2485698589850844E-7	DEFECT
// upPaint	WITHOUT_CLASSIFICATION	0.999998492705006	WITHOUT_CLASSIFICATION	1.5072949941099114E-6	DEFECT
// downPaint	WITHOUT_CLASSIFICATION	0.9999976537628483	WITHOUT_CLASSIFICATION	2.346237151758562E-6	DEFECT
// drawVolume	WITHOUT_CLASSIFICATION	0.9999989057900128	WITHOUT_CLASSIFICATION	1.0942099872210792E-6	DEFECT
// candleWidth	WITHOUT_CLASSIFICATION	0.999997732899201	WITHOUT_CLASSIFICATION	2.267100799034393E-6	DEFECT
// maxCandleWidthInMilliseconds	WITHOUT_CLASSIFICATION	0.9999986551680732	WITHOUT_CLASSIFICATION	1.3448319268053469E-6	DEFECT
// autoWidthMethod	WITHOUT_CLASSIFICATION	0.9999978414159937	WITHOUT_CLASSIFICATION	2.1585840062807937E-6	DEFECT
// autoWidthFactor	WITHOUT_CLASSIFICATION	0.9999995682624235	WITHOUT_CLASSIFICATION	4.317375764560536E-7	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999986873631264	WITHOUT_CLASSIFICATION	1.3126368736275976E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.999970806053751	WITHOUT_CLASSIFICATION	2.919394624903059E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.999999847814894	WITHOUT_CLASSIFICATION	1.5218510599759516E-7	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999983813564085	WITHOUT_CLASSIFICATION	1.6186435914777572E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999978376778059	WITHOUT_CLASSIFICATION	2.1623221941487156E-6	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.9999964564812797	WITHOUT_CLASSIFICATION	3.5435187203227367E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.999996165712016	WITHOUT_CLASSIFICATION	3.8342879840438275E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999196810718767	WITHOUT_CLASSIFICATION	8.03189281232875E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999196810718767	WITHOUT_CLASSIFICATION	8.03189281232875E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999196810718767	WITHOUT_CLASSIFICATION	8.03189281232875E-5	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999971069392226	WITHOUT_CLASSIFICATION	2.893060777421339E-6	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9998641708631723	WITHOUT_CLASSIFICATION	1.358291368278627E-4	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999986474100337	WITHOUT_CLASSIFICATION	1.3525899663321561E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999960855021716	WITHOUT_CLASSIFICATION	3.914497828459818E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999960855021716	WITHOUT_CLASSIFICATION	3.914497828459818E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999960855021716	WITHOUT_CLASSIFICATION	3.914497828459818E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999975005087236	WITHOUT_CLASSIFICATION	2.4994912763828022E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999975005087236	WITHOUT_CLASSIFICATION	2.4994912763828022E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999975005087236	WITHOUT_CLASSIFICATION	2.4994912763828022E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997082792121	WITHOUT_CLASSIFICATION	2.917207878862869E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997082792121	WITHOUT_CLASSIFICATION	2.917207878862869E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997082792121	WITHOUT_CLASSIFICATION	2.917207878862869E-7	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999992706172841	WITHOUT_CLASSIFICATION	7.293827160214194E-7	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999992378243516	WITHOUT_CLASSIFICATION	7.621756483453619E-7	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.998923618799581	WITHOUT_CLASSIFICATION	0.001076381200418983	DEFECT
// autoWidthGap	WITHOUT_CLASSIFICATION	0.9999993671226453	WITHOUT_CLASSIFICATION	6.328773548065468E-7	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999997926721852	WITHOUT_CLASSIFICATION	2.0732781488999536E-7	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999997926721852	WITHOUT_CLASSIFICATION	2.0732781488999536E-7	DEFECT
// check the bounds of a simple dataset	WITHOUT_CLASSIFICATION	0.999999996024146	WITHOUT_CLASSIFICATION	3.975854002065301E-9	DEFECT
// test findDomainBounds as well	WITHOUT_CLASSIFICATION	0.9999917522199556	WITHOUT_CLASSIFICATION	8.247780044297712E-6	DEFECT
// blockHeight	WITHOUT_CLASSIFICATION	0.9999970960750999	WITHOUT_CLASSIFICATION	2.9039249000239837E-6	DEFECT
// blockWidth	WITHOUT_CLASSIFICATION	0.9999966848371494	WITHOUT_CLASSIFICATION	3.31516285062465E-6	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.9999980180316086	WITHOUT_CLASSIFICATION	1.9819683914300162E-6	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.9999980180316086	WITHOUT_CLASSIFICATION	1.9819683914300162E-6	DEFECT
// the following fields are inherited from the AbstractXYItemRenderer	WITHOUT_CLASSIFICATION	0.9999976269772559	WITHOUT_CLASSIFICATION	2.373022744021463E-6	DEFECT
// axis	WITHOUT_CLASSIFICATION	0.9999945636958791	WITHOUT_CLASSIFICATION	5.436304120875659E-6	DEFECT
// axisOffset	WITHOUT_CLASSIFICATION	0.9999995382658454	WITHOUT_CLASSIFICATION	4.6173415464285266E-7	DEFECT
// stripWidth	WITHOUT_CLASSIFICATION	0.9999993948683478	WITHOUT_CLASSIFICATION	6.051316521725136E-7	DEFECT
// stripOutlineVisible	WITHOUT_CLASSIFICATION	0.9999987033213737	WITHOUT_CLASSIFICATION	1.2966786261963088E-6	DEFECT
// stripOutlinePaint	WITHOUT_CLASSIFICATION	0.9999998567803392	WITHOUT_CLASSIFICATION	1.4321966081064152E-7	DEFECT
// stripOutlineStroke	WITHOUT_CLASSIFICATION	0.9999729961520852	WITHOUT_CLASSIFICATION	2.700384791474823E-5	DEFECT
// shapeVisible	WITHOUT_CLASSIFICATION	0.9999966294268716	WITHOUT_CLASSIFICATION	3.370573128294431E-6	DEFECT
// shapeFilled	WITHOUT_CLASSIFICATION	0.9999991954898781	WITHOUT_CLASSIFICATION	8.045101218163722E-7	DEFECT
// shapeOutlineVisible	WITHOUT_CLASSIFICATION	0.9999978135166162	WITHOUT_CLASSIFICATION	2.1864833837119135E-6	DEFECT
// shapeAnchor	WITHOUT_CLASSIFICATION	0.9999996120495306	WITHOUT_CLASSIFICATION	3.879504693948398E-7	DEFECT
// shapeLocation	WITHOUT_CLASSIFICATION	0.9999991806070418	WITHOUT_CLASSIFICATION	8.193929580944768E-7	DEFECT
// line	WITHOUT_CLASSIFICATION	0.999982514457743	WITHOUT_CLASSIFICATION	1.7485542256969E-5	DEFECT
// lineStroke	WITHOUT_CLASSIFICATION	0.9997654817533138	WITHOUT_CLASSIFICATION	2.3451824668622428E-4	DEFECT
// maximumLinesToDisplay	WITHOUT_CLASSIFICATION	0.9999993943135715	WITHOUT_CLASSIFICATION	6.056864283511363E-7	DEFECT
// toolTipText	WITHOUT_CLASSIFICATION	0.9999980704147259	WITHOUT_CLASSIFICATION	1.929585274120423E-6	DEFECT
// expandToFitSpace	WITHOUT_CLASSIFICATION	0.9999980595195597	WITHOUT_CLASSIFICATION	1.9404804403125133E-6	DEFECT
// margin	WITHOUT_CLASSIFICATION	0.999997509026281	WITHOUT_CLASSIFICATION	2.490973719002641E-6	DEFECT
// border	WITHOUT_CLASSIFICATION	0.9999964418294525	WITHOUT_CLASSIFICATION	3.5581705474975163E-6	DEFECT
// is the clone independent	WITHOUT_CLASSIFICATION	0.999995563217059	WITHOUT_CLASSIFICATION	4.436782941052901E-6	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9999910076860868	WITHOUT_CLASSIFICATION	8.992313913233592E-6	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.9999984923450215	WITHOUT_CLASSIFICATION	1.5076549784984498E-6	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999813336293679	WITHOUT_CLASSIFICATION	1.8666370632083845E-5	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999975036780838	WITHOUT_CLASSIFICATION	2.496321916133076E-6	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9997143463691466	WITHOUT_CLASSIFICATION	2.856536308535041E-4	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9999910076860868	WITHOUT_CLASSIFICATION	8.992313913233592E-6	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9999998861406656	WITHOUT_CLASSIFICATION	1.1385933438791223E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.9999998021836805	WITHOUT_CLASSIFICATION	1.9781631964833902E-7	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.9999998021836805	WITHOUT_CLASSIFICATION	1.9781631964833902E-7	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.9999996947650175	WITHOUT_CLASSIFICATION	3.052349825111314E-7	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.9999996947650175	WITHOUT_CLASSIFICATION	3.052349825111314E-7	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.999999983005705	WITHOUT_CLASSIFICATION	1.6994294976871413E-8	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999984522668	WITHOUT_CLASSIFICATION	1.547733161864896E-9	DEFECT
// check sorted rows	WITHOUT_CLASSIFICATION	0.9999999641890549	WITHOUT_CLASSIFICATION	3.5810945150933106E-8	DEFECT
// check for unknown column	WITHOUT_CLASSIFICATION	0.9999991546556263	WITHOUT_CLASSIFICATION	8.453443738024697E-7	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.9999642365013544	WITHOUT_CLASSIFICATION	3.576349864571864E-5	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.9999642365013544	WITHOUT_CLASSIFICATION	3.576349864571864E-5	DEFECT
/*v =*/	WITHOUT_CLASSIFICATION	0.9998703290519245	WITHOUT_CLASSIFICATION	1.2967094807540545E-4	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999810062604	WITHOUT_CLASSIFICATION	1.8993739609010916E-8	DEFECT
// check null argument 1	WITHOUT_CLASSIFICATION	0.9999996519229224	WITHOUT_CLASSIFICATION	3.480770776372222E-7	DEFECT
/* ComparableObjectItem item1 = */	WITHOUT_CLASSIFICATION	0.9999878423522679	WITHOUT_CLASSIFICATION	1.2157647732057991E-5	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999990177829274	WITHOUT_CLASSIFICATION	9.822170725479356E-7	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999996992812917	WITHOUT_CLASSIFICATION	3.0071870825111386E-7	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999950739820297	WITHOUT_CLASSIFICATION	4.926017970351047E-6	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9999973937586236	WITHOUT_CLASSIFICATION	2.606241376333693E-6	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9999973937586236	WITHOUT_CLASSIFICATION	2.606241376333693E-6	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.9999996357264272	WITHOUT_CLASSIFICATION	3.6427357277749727E-7	DEFECT
// check null argument	WITHOUT_CLASSIFICATION	0.9999997067525743	WITHOUT_CLASSIFICATION	2.9324742568675455E-7	DEFECT
// replace an existing value	WITHOUT_CLASSIFICATION	0.9999983275192257	WITHOUT_CLASSIFICATION	1.6724807742707054E-6	DEFECT
// try a null key - should throw an exception	WITHOUT_CLASSIFICATION	0.999657478078606	WITHOUT_CLASSIFICATION	3.4252192139395406E-4	DEFECT
// try unknown key	WITHOUT_CLASSIFICATION	0.9999602785613976	WITHOUT_CLASSIFICATION	3.972143860244179E-5	DEFECT
// try negative key index	WITHOUT_CLASSIFICATION	0.9999160564126357	WITHOUT_CLASSIFICATION	8.394358736436117E-5	DEFECT
// try key index == itemCount	WITHOUT_CLASSIFICATION	0.9999846252891946	WITHOUT_CLASSIFICATION	1.537471080536853E-5	DEFECT
/*Range r2 =*/	WITHOUT_CLASSIFICATION	0.9999366731550798	WITHOUT_CLASSIFICATION	6.332684492021841E-5	DEFECT
// Expand by 0% does not change the range	WITHOUT_CLASSIFICATION	0.9999964017881902	WITHOUT_CLASSIFICATION	3.5982118098526764E-6	DEFECT
// Lower > upper: mid point is used	WITHOUT_CLASSIFICATION	0.9999994205526361	WITHOUT_CLASSIFICATION	5.794473639172935E-7	DEFECT
// Shifting with a delta of 0 does not change the range	WITHOUT_CLASSIFICATION	0.9999993043245967	WITHOUT_CLASSIFICATION	6.95675403330568E-7	DEFECT
// Scaling with a factor of 1 does not change the range	WITHOUT_CLASSIFICATION	0.9999986580671079	WITHOUT_CLASSIFICATION	1.3419328921552104E-6	DEFECT
/*s1 = */	WITHOUT_CLASSIFICATION	0.9999811102841337	WITHOUT_CLASSIFICATION	1.8889715866295423E-5	DEFECT
// key	WITHOUT_CLASSIFICATION	0.9999498616719595	WITHOUT_CLASSIFICATION	5.013832804058226E-5	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999994574317561	WITHOUT_CLASSIFICATION	5.425682437888666E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999861814973123	WITHOUT_CLASSIFICATION	1.3818502687539151E-5	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999943006561974	WITHOUT_CLASSIFICATION	5.699343802533638E-6	DEFECT
// remove an item	WITHOUT_CLASSIFICATION	0.9999785423589969	WITHOUT_CLASSIFICATION	2.1457641003162663E-5	DEFECT
// map a key to a new group	WITHOUT_CLASSIFICATION	0.9999979237793671	WITHOUT_CLASSIFICATION	2.0762206329787224E-6	DEFECT
// clear a mapping	WITHOUT_CLASSIFICATION	0.9999680893446237	WITHOUT_CLASSIFICATION	3.191065537639669E-5	DEFECT
// check handling of null key	WITHOUT_CLASSIFICATION	0.9999979776289781	WITHOUT_CLASSIFICATION	2.022371021902621E-6	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.9999997525578407	WITHOUT_CLASSIFICATION	2.474421592397765E-7	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999993301601705	WITHOUT_CLASSIFICATION	6.698398295208503E-7	DEFECT
// if there is an explicit mapping to the default group, it is counted	WITHOUT_CLASSIFICATION	0.9999999729974404	WITHOUT_CLASSIFICATION	2.700255970484286E-8	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999810062604	WITHOUT_CLASSIFICATION	1.8993739609010916E-8	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999990177829274	WITHOUT_CLASSIFICATION	9.822170725479356E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999990177829274	WITHOUT_CLASSIFICATION	9.822170725479356E-7	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999997849238602	WITHOUT_CLASSIFICATION	2.1507613974157278E-7	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999997849238602	WITHOUT_CLASSIFICATION	2.1507613974157278E-7	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999997849238602	WITHOUT_CLASSIFICATION	2.1507613974157278E-7	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999997849238602	WITHOUT_CLASSIFICATION	2.1507613974157278E-7	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999996992812917	WITHOUT_CLASSIFICATION	3.0071870825111386E-7	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999996992812917	WITHOUT_CLASSIFICATION	3.0071870825111386E-7	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999996992812917	WITHOUT_CLASSIFICATION	3.0071870825111386E-7	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999996992812917	WITHOUT_CLASSIFICATION	3.0071870825111386E-7	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999993301601705	WITHOUT_CLASSIFICATION	6.698398295208503E-7	DEFECT
// if the default group is not mapped to, it should still count towards // the group count...	WITHOUT_CLASSIFICATION	0.9999108395619174	WITHOUT_CLASSIFICATION	8.916043808253189E-5	DEFECT
// now when the default group is mapped to, it shouldn't increase the // group count...	WITHOUT_CLASSIFICATION	0.9999505524224269	WITHOUT_CLASSIFICATION	4.944757757317564E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// the default group is always at index 0	WITHOUT_CLASSIFICATION	0.9999890751050444	WITHOUT_CLASSIFICATION	1.0924894955472932E-5	DEFECT
// a non-existent group should return -1	WITHOUT_CLASSIFICATION	0.9999999261236681	WITHOUT_CLASSIFICATION	7.387633188466676E-8	DEFECT
// indices are assigned in the order that groups are originally mapped	WITHOUT_CLASSIFICATION	0.9999988975368729	WITHOUT_CLASSIFICATION	1.1024631270204476E-6	DEFECT
// a key that hasn't been mapped should return the default group	WITHOUT_CLASSIFICATION	0.9999955271678095	WITHOUT_CLASSIFICATION	4.472832190444961E-6	DEFECT
// a null argument should throw an exception	WITHOUT_CLASSIFICATION	0.9999925986352577	WITHOUT_CLASSIFICATION	7.40136474238003E-6	DEFECT
// a small check for independence	WITHOUT_CLASSIFICATION	0.9999997766468279	WITHOUT_CLASSIFICATION	2.2335317211424888E-7	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999988669075223	WITHOUT_CLASSIFICATION	1.1330924777124292E-6	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999988669075223	WITHOUT_CLASSIFICATION	1.1330924777124292E-6	DEFECT
// confirm overwriting an existing value	WITHOUT_CLASSIFICATION	0.999999120535373	WITHOUT_CLASSIFICATION	8.794646269872756E-7	DEFECT
// try null keys	WITHOUT_CLASSIFICATION	0.999978360326446	WITHOUT_CLASSIFICATION	2.1639673553854436E-5	DEFECT
// try negative row index	WITHOUT_CLASSIFICATION	0.9999402216591448	WITHOUT_CLASSIFICATION	5.9778340855361896E-5	DEFECT
// try row index too high	WITHOUT_CLASSIFICATION	0.999904596160331	WITHOUT_CLASSIFICATION	9.540383966899463E-5	DEFECT
// try negative column index	WITHOUT_CLASSIFICATION	0.9999935989246167	WITHOUT_CLASSIFICATION	6.401075383279865E-6	DEFECT
// try column index too high	WITHOUT_CLASSIFICATION	0.9999939956996178	WITHOUT_CLASSIFICATION	6.004300382288711E-6	DEFECT
// try unknown row key	WITHOUT_CLASSIFICATION	0.9999035519635785	WITHOUT_CLASSIFICATION	9.6448036421472E-5	DEFECT
// try null row key	WITHOUT_CLASSIFICATION	0.9999624597501192	WITHOUT_CLASSIFICATION	3.754024988076766E-5	DEFECT
// try unknown column key	WITHOUT_CLASSIFICATION	0.999986946911415	WITHOUT_CLASSIFICATION	1.305308858495323E-5	DEFECT
// try null column key	WITHOUT_CLASSIFICATION	0.9999783941646953	WITHOUT_CLASSIFICATION	2.1605835304812214E-5	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999886746398653	WITHOUT_CLASSIFICATION	1.1325360134788149E-5	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999886746398653	WITHOUT_CLASSIFICATION	1.1325360134788149E-5	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999777933864026	WITHOUT_CLASSIFICATION	2.2206613597354547E-5	DEFECT
// it's OK to use an index equal to the size of the list	WITHOUT_CLASSIFICATION	0.9999999537434877	WITHOUT_CLASSIFICATION	4.625651224708942E-8	DEFECT
// try replacing an existing value	WITHOUT_CLASSIFICATION	0.9999989797533964	WITHOUT_CLASSIFICATION	1.0202466036058274E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999997984059823	WITHOUT_CLASSIFICATION	2.0159401757587473E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999997984059823	WITHOUT_CLASSIFICATION	2.0159401757587473E-7	DEFECT
// try a null source	WITHOUT_CLASSIFICATION	0.999998589408995	WITHOUT_CLASSIFICATION	1.4105910049436278E-6	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.9999945115170322	WITHOUT_CLASSIFICATION	5.488482967885384E-6	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.9999945115170322	WITHOUT_CLASSIFICATION	5.488482967885384E-6	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999831773844627	WITHOUT_CLASSIFICATION	1.682261553720435E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999831773844627	WITHOUT_CLASSIFICATION	1.682261553720435E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999831773844627	WITHOUT_CLASSIFICATION	1.682261553720435E-5	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9999986110124826	WITHOUT_CLASSIFICATION	1.388987517414548E-6	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.9999997555365423	WITHOUT_CLASSIFICATION	2.444634576995006E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999996784223691	WITHOUT_CLASSIFICATION	3.2157763085831445E-7	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999974072549438	WITHOUT_CLASSIFICATION	2.5927450562507863E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999974072549438	WITHOUT_CLASSIFICATION	2.5927450562507863E-6	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999777933864026	WITHOUT_CLASSIFICATION	2.2206613597354547E-5	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999997984059823	WITHOUT_CLASSIFICATION	2.0159401757587473E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999997984059823	WITHOUT_CLASSIFICATION	2.0159401757587473E-7	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999831773844627	WITHOUT_CLASSIFICATION	1.682261553720435E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999831773844627	WITHOUT_CLASSIFICATION	1.682261553720435E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999831773844627	WITHOUT_CLASSIFICATION	1.682261553720435E-5	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9999986110124826	WITHOUT_CLASSIFICATION	1.388987517414548E-6	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.9999997555365423	WITHOUT_CLASSIFICATION	2.444634576995006E-7	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.9999965614215806	WITHOUT_CLASSIFICATION	3.438578419373208E-6	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9999945609650016	WITHOUT_CLASSIFICATION	5.439034998402726E-6	DEFECT
// increment a null value	WITHOUT_CLASSIFICATION	0.9999812407830251	WITHOUT_CLASSIFICATION	1.8759216974939275E-5	DEFECT
// increment an unknown row	WITHOUT_CLASSIFICATION	0.9999379418311216	WITHOUT_CLASSIFICATION	6.205816887830986E-5	DEFECT
// increment an unknown column	WITHOUT_CLASSIFICATION	0.9999862047672514	WITHOUT_CLASSIFICATION	1.3795232748474847E-5	DEFECT
// a row of all null values is still counted...	WITHOUT_CLASSIFICATION	0.9999508709844886	WITHOUT_CLASSIFICATION	4.912901551126015E-5	DEFECT
// a column of all null values is still counted...	WITHOUT_CLASSIFICATION	0.9999802284448996	WITHOUT_CLASSIFICATION	1.9771555100394454E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998670395850205	WITHOUT_CLASSIFICATION	1.3296041497944762E-4	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999966038129239	WITHOUT_CLASSIFICATION	3.3961870760663455E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999966038129239	WITHOUT_CLASSIFICATION	3.3961870760663455E-6	DEFECT
// check that two empty datasets are equal	WITHOUT_CLASSIFICATION	0.999999915908563	WITHOUT_CLASSIFICATION	8.409143707180202E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999996477802168	WITHOUT_CLASSIFICATION	3.522197833163708E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999996477802168	WITHOUT_CLASSIFICATION	3.522197833163708E-7	DEFECT
// make sure that modifying the returned array doesn't change the // function	WITHOUT_CLASSIFICATION	0.9999991639149584	WITHOUT_CLASSIFICATION	8.360850416441652E-7	DEFECT
// note that we don't define taskB1	WITHOUT_CLASSIFICATION	0.9999978048447247	WITHOUT_CLASSIFICATION	2.195155275251338E-6	DEFECT
// define subtasks	WITHOUT_CLASSIFICATION	0.9999996350032447	WITHOUT_CLASSIFICATION	3.649967553239251E-7	DEFECT
/* Number start = */	WITHOUT_CLASSIFICATION	0.9999998242415562	WITHOUT_CLASSIFICATION	1.7575844377917856E-7	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999972508114634	WITHOUT_CLASSIFICATION	2.7491885365571137E-6	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999972508114634	WITHOUT_CLASSIFICATION	2.7491885365571137E-6	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999972508114634	WITHOUT_CLASSIFICATION	2.7491885365571137E-6	DEFECT
/* int count = */	WITHOUT_CLASSIFICATION	0.9999852265800021	WITHOUT_CLASSIFICATION	1.4773419997869073E-5	DEFECT
/* Number end = */	WITHOUT_CLASSIFICATION	0.999996677831144	WITHOUT_CLASSIFICATION	3.3221688560119125E-6	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999985553552188	WITHOUT_CLASSIFICATION	1.4446447813252882E-6	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999997878919252	WITHOUT_CLASSIFICATION	2.121080748378486E-7	DEFECT
// what if we don't want the interval?	WITHOUT_CLASSIFICATION	0.9999907787652199	WITHOUT_CLASSIFICATION	9.221234780186422E-6	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9999961840808947	WITHOUT_CLASSIFICATION	3.815919105189483E-6	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.9999989364692039	WITHOUT_CLASSIFICATION	1.063530796194364E-6	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.999999864548563	WITHOUT_CLASSIFICATION	1.354514369601113E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.999999864548563	WITHOUT_CLASSIFICATION	1.354514369601113E-7	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.999997909853637	WITHOUT_CLASSIFICATION	2.0901463630016202E-6	DEFECT
// a Double.NaN should be ignored	WITHOUT_CLASSIFICATION	0.9999986892826532	WITHOUT_CLASSIFICATION	1.3107173468271476E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999975036780838	WITHOUT_CLASSIFICATION	2.496321916133076E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999975036780838	WITHOUT_CLASSIFICATION	2.496321916133076E-6	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999984522668	WITHOUT_CLASSIFICATION	1.547733161864896E-9	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9999945609650016	WITHOUT_CLASSIFICATION	5.439034998402726E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998670395850205	WITHOUT_CLASSIFICATION	1.3296041497944762E-4	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999966038129239	WITHOUT_CLASSIFICATION	3.3961870760663455E-6	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999997878919252	WITHOUT_CLASSIFICATION	2.121080748378486E-7	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999997878919252	WITHOUT_CLASSIFICATION	2.121080748378486E-7	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999985553552188	WITHOUT_CLASSIFICATION	1.4446447813252882E-6	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.9999965614215806	WITHOUT_CLASSIFICATION	3.438578419373208E-6	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.9999989364692039	WITHOUT_CLASSIFICATION	1.063530796194364E-6	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9999961840808947	WITHOUT_CLASSIFICATION	3.815919105189483E-6	DEFECT
// Double.NaN DOESN'T mess things up	WITHOUT_CLASSIFICATION	0.9999902458572651	WITHOUT_CLASSIFICATION	9.754142734885689E-6	DEFECT
// got it!	WITHOUT_CLASSIFICATION	0.9999838151810251	WITHOUT_CLASSIFICATION	1.618481897491192E-5	DEFECT
// check that empty dataset is handled OK	WITHOUT_CLASSIFICATION	0.9999999658577375	WITHOUT_CLASSIFICATION	3.414226242766373E-8	DEFECT
// and that simple aggregation works	WITHOUT_CLASSIFICATION	0.9999411397810014	WITHOUT_CLASSIFICATION	5.886021899854217E-5	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999995802155506	WITHOUT_CLASSIFICATION	4.197844493858143E-7	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999995802155506	WITHOUT_CLASSIFICATION	4.197844493858143E-7	DEFECT
// null dataset throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999996141895604	WITHOUT_CLASSIFICATION	3.858104395509494E-7	DEFECT
// null list throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999984479041544	WITHOUT_CLASSIFICATION	1.5520958457375592E-6	DEFECT
// null range throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999992422542413	WITHOUT_CLASSIFICATION	7.577457588178974E-7	DEFECT
// empty dataset returns null	WITHOUT_CLASSIFICATION	0.9999995553023573	WITHOUT_CLASSIFICATION	4.446976427856538E-7	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999938948528067	WITHOUT_CLASSIFICATION	6.105147193387759E-6	DEFECT
// check a null value	WITHOUT_CLASSIFICATION	0.9999936110434866	WITHOUT_CLASSIFICATION	6.388956513403777E-6	DEFECT
// check a NaN	WITHOUT_CLASSIFICATION	0.9999990497365518	WITHOUT_CLASSIFICATION	9.502634482108545E-7	DEFECT
// check another regular value	WITHOUT_CLASSIFICATION	0.9999991691846337	WITHOUT_CLASSIFICATION	8.308153662288662E-7	DEFECT
// add a second series	WITHOUT_CLASSIFICATION	0.9999960428034549	WITHOUT_CLASSIFICATION	3.957196545094744E-6	DEFECT
// add a value to the second series	WITHOUT_CLASSIFICATION	0.9999995179508805	WITHOUT_CLASSIFICATION	4.820491195328152E-7	DEFECT
// add a value that isn't in the xRange	WITHOUT_CLASSIFICATION	0.999970842366847	WITHOUT_CLASSIFICATION	2.915763315305325E-5	DEFECT
// try some nulls	WITHOUT_CLASSIFICATION	0.9999632458620387	WITHOUT_CLASSIFICATION	3.675413796133472E-5	DEFECT
// an empty dataset should return null for bounds	WITHOUT_CLASSIFICATION	0.9999997168959911	WITHOUT_CLASSIFICATION	2.8310400889188156E-7	DEFECT
// try a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999997164365956	WITHOUT_CLASSIFICATION	2.8356340443943624E-7	DEFECT
// try a dataset with two values	WITHOUT_CLASSIFICATION	0.9999981764803495	WITHOUT_CLASSIFICATION	1.82351965046708E-6	DEFECT
// try a Double.NaN	WITHOUT_CLASSIFICATION	0.9999959925927033	WITHOUT_CLASSIFICATION	4.007407296649252E-6	DEFECT
// try a Double.NEGATIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999931593957094	WITHOUT_CLASSIFICATION	6.840604290601937E-6	DEFECT
// overwrite the value	WITHOUT_CLASSIFICATION	0.9999986620028991	WITHOUT_CLASSIFICATION	1.3379971009085496E-6	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999995479679799	WITHOUT_CLASSIFICATION	4.5203202023092847E-7	DEFECT
// now overwrite this item with another	WITHOUT_CLASSIFICATION	0.9999925508534914	WITHOUT_CLASSIFICATION	7.4491465085476755E-6	DEFECT
// try null list	WITHOUT_CLASSIFICATION	0.9999923413454288	WITHOUT_CLASSIFICATION	7.658654571143655E-6	DEFECT
// try a list containing a single value	WITHOUT_CLASSIFICATION	0.9999998443603437	WITHOUT_CLASSIFICATION	1.5563965623036668E-7	DEFECT
// try null array	WITHOUT_CLASSIFICATION	0.9999895847266227	WITHOUT_CLASSIFICATION	1.0415273377367255E-5	DEFECT
// try an array containing no items	WITHOUT_CLASSIFICATION	0.9999958736706028	WITHOUT_CLASSIFICATION	4.126329397243325E-6	DEFECT
// try an array containing a single Number	WITHOUT_CLASSIFICATION	0.9999999473943784	WITHOUT_CLASSIFICATION	5.2605621552833566E-8	DEFECT
// try an array containing a single Number and a null	WITHOUT_CLASSIFICATION	0.9999998012090029	WITHOUT_CLASSIFICATION	1.9879099719032787E-7	DEFECT
// try an array containing a single Number and a NaN	WITHOUT_CLASSIFICATION	0.9999999445837162	WITHOUT_CLASSIFICATION	5.541628370067069E-8	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999962211360366	WITHOUT_CLASSIFICATION	3.7788639635117415E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999865657573871	WITHOUT_CLASSIFICATION	1.3434242612868232E-5	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999975036780838	WITHOUT_CLASSIFICATION	2.496321916133076E-6	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999995479679799	WITHOUT_CLASSIFICATION	4.5203202023092847E-7	DEFECT
// try an empty collection	WITHOUT_CLASSIFICATION	0.9999474447158018	WITHOUT_CLASSIFICATION	5.2555284198250885E-5	DEFECT
// try a collection with a single number	WITHOUT_CLASSIFICATION	0.9999994521030657	WITHOUT_CLASSIFICATION	5.47896934222599E-7	DEFECT
// try a collection with a single number plus a NaN	WITHOUT_CLASSIFICATION	0.9999987240518358	WITHOUT_CLASSIFICATION	1.2759481642079506E-6	DEFECT
// try a collection with several numbers	WITHOUT_CLASSIFICATION	0.9999997856259769	WITHOUT_CLASSIFICATION	2.1437402315388594E-7	DEFECT
// a Collection containing a NaN will return Double.NaN for the result	WITHOUT_CLASSIFICATION	0.9999997526032722	WITHOUT_CLASSIFICATION	2.4739672776684004E-7	DEFECT
// check null list	WITHOUT_CLASSIFICATION	0.999999310794535	WITHOUT_CLASSIFICATION	6.892054649421168E-7	DEFECT
// check empty list	WITHOUT_CLASSIFICATION	0.9999996466190265	WITHOUT_CLASSIFICATION	3.53380973430701E-7	DEFECT
// check list containing null	WITHOUT_CLASSIFICATION	0.9999996314440426	WITHOUT_CLASSIFICATION	3.6855595741651004E-7	DEFECT
// try zero length array	WITHOUT_CLASSIFICATION	0.9999903358305701	WITHOUT_CLASSIFICATION	9.66416942980867E-6	DEFECT
// try single value	WITHOUT_CLASSIFICATION	0.9999993783690561	WITHOUT_CLASSIFICATION	6.216309439010452E-7	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.998923618799581	WITHOUT_CLASSIFICATION	0.001076381200418983	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// try deleting a time period that doesn't exist...	WITHOUT_CLASSIFICATION	0.9997915568539422	WITHOUT_CLASSIFICATION	2.0844314605791877E-4	DEFECT
// try deleting null	WITHOUT_CLASSIFICATION	0.9999962213661349	WITHOUT_CLASSIFICATION	3.7786338652448777E-6	DEFECT
// copy a range before the start of the series data...	WITHOUT_CLASSIFICATION	0.9999999800929936	WITHOUT_CLASSIFICATION	1.9907006334325727E-8	DEFECT
// copy a range that includes only the first item in the series...	WITHOUT_CLASSIFICATION	0.9999998379929254	WITHOUT_CLASSIFICATION	1.6200707467934073E-7	DEFECT
// copy a range that begins before and ends in the middle of the // series...	WITHOUT_CLASSIFICATION	0.9999981702591768	WITHOUT_CLASSIFICATION	1.8297408231898374E-6	DEFECT
// copy just the first item...	WITHOUT_CLASSIFICATION	0.9999994703249705	WITHOUT_CLASSIFICATION	5.296750295312659E-7	DEFECT
// copy the first two items...	WITHOUT_CLASSIFICATION	0.9999964093816571	WITHOUT_CLASSIFICATION	3.590618342917141E-6	DEFECT
// copy the middle three items...	WITHOUT_CLASSIFICATION	0.9999925224835219	WITHOUT_CLASSIFICATION	7.477516477997777E-6	DEFECT
// copy the last two items...	WITHOUT_CLASSIFICATION	0.9999763761619482	WITHOUT_CLASSIFICATION	2.362383805179768E-5	DEFECT
// copy the last item...	WITHOUT_CLASSIFICATION	0.9999860363220765	WITHOUT_CLASSIFICATION	1.3963677923474601E-5	DEFECT
// check negative first argument	WITHOUT_CLASSIFICATION	0.9999999880069237	WITHOUT_CLASSIFICATION	1.199307631524094E-8	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999771586088197	WITHOUT_CLASSIFICATION	2.2841391180339555E-5	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999771586088197	WITHOUT_CLASSIFICATION	2.2841391180339555E-5	DEFECT
// check second argument less than first argument	WITHOUT_CLASSIFICATION	0.9999998607199446	WITHOUT_CLASSIFICATION	1.3928005529611724E-7	DEFECT
// changing the overwritten record shouldn't affect the series	WITHOUT_CLASSIFICATION	0.9999641476511861	WITHOUT_CLASSIFICATION	3.5852348813752156E-5	DEFECT
// changing the item that was added should not change the series	WITHOUT_CLASSIFICATION	0.9999982548764573	WITHOUT_CLASSIFICATION	1.7451235426872005E-6	DEFECT
// can't get anything yet...just an exception	WITHOUT_CLASSIFICATION	0.9996280140163178	WITHOUT_CLASSIFICATION	3.719859836821849E-4	DEFECT
/*TimeSeriesDataItem item =*/	WITHOUT_CLASSIFICATION	0.9999865774265315	WITHOUT_CLASSIFICATION	1.3422573468559087E-5	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.9999772392401115	WITHOUT_CLASSIFICATION	2.2760759888490333E-5	DEFECT
/* TimeSeriesDataItem item = */	WITHOUT_CLASSIFICATION	0.9999928269155866	WITHOUT_CLASSIFICATION	7.1730844134466685E-6	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999996541329599	WITHOUT_CLASSIFICATION	3.4586704011788345E-7	DEFECT
// test series with one item	WITHOUT_CLASSIFICATION	0.999995096578014	WITHOUT_CLASSIFICATION	4.903421986008773E-6	DEFECT
// test series with two items	WITHOUT_CLASSIFICATION	0.9999859501807734	WITHOUT_CLASSIFICATION	1.404981922654929E-5	DEFECT
// milliseconds somewhere in 2006	WITHOUT_CLASSIFICATION	0.999788069885391	WITHOUT_CLASSIFICATION	2.119301146090615E-4	DEFECT
// test a series with 1 item	WITHOUT_CLASSIFICATION	0.9999931532509408	WITHOUT_CLASSIFICATION	6.8467490591804335E-6	DEFECT
// test a series with two items	WITHOUT_CLASSIFICATION	0.9999885647750454	WITHOUT_CLASSIFICATION	1.1435224954663126E-5	DEFECT
// this line triggers the defect	WITHOUT_CLASSIFICATION	0.999988769150723	WITHOUT_CLASSIFICATION	1.123084927698938E-5	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9999127620953723	WITHOUT_CLASSIFICATION	8.723790462768955E-5	DEFECT
// null items are ignored	WITHOUT_CLASSIFICATION	0.9999992842426557	WITHOUT_CLASSIFICATION	7.157573443314109E-7	DEFECT
// if there are only null items, we get a NaNRange	WITHOUT_CLASSIFICATION	0.9999985301732904	WITHOUT_CLASSIFICATION	1.4698267095670925E-6	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999005537869246	WITHOUT_CLASSIFICATION	9.944621307541908E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999005537869246	WITHOUT_CLASSIFICATION	9.944621307541908E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999005537869246	WITHOUT_CLASSIFICATION	9.944621307541908E-5	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999926302401891	WITHOUT_CLASSIFICATION	7.3697598107687636E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.999989827131312	WITHOUT_CLASSIFICATION	1.0172868688000563E-5	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.999989827131312	WITHOUT_CLASSIFICATION	1.0172868688000563E-5	DEFECT
// domain description - null	WITHOUT_CLASSIFICATION	0.9999994810864797	WITHOUT_CLASSIFICATION	5.189135202392357E-7	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999914254237723	WITHOUT_CLASSIFICATION	8.574576227717276E-6	DEFECT
// a null item should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999792585080127	WITHOUT_CLASSIFICATION	2.0741491987208894E-5	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.9999929757139614	WITHOUT_CLASSIFICATION	7.024286038534636E-6	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.9999929757139614	WITHOUT_CLASSIFICATION	7.024286038534636E-6	DEFECT
// range description	WITHOUT_CLASSIFICATION	0.9999998693745119	WITHOUT_CLASSIFICATION	1.306254879917968E-7	DEFECT
// domain description	WITHOUT_CLASSIFICATION	0.9999994884671535	WITHOUT_CLASSIFICATION	5.115328465906368E-7	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.9999999140707513	WITHOUT_CLASSIFICATION	8.592924879964868E-8	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999999128180959	WITHOUT_CLASSIFICATION	8.718190412247243E-8	DEFECT
// range description - null	WITHOUT_CLASSIFICATION	0.999999625447514	WITHOUT_CLASSIFICATION	3.7455248603855063E-7	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.9999999140707513	WITHOUT_CLASSIFICATION	8.592924879964868E-8	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999999128180959	WITHOUT_CLASSIFICATION	8.718190412247243E-8	DEFECT
// add a fourth time period	WITHOUT_CLASSIFICATION	0.9999978992803367	WITHOUT_CLASSIFICATION	2.100719663307883E-6	DEFECT
// add a third time period	WITHOUT_CLASSIFICATION	0.9999779499667709	WITHOUT_CLASSIFICATION	2.2050033229145795E-5	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.999999810097984	WITHOUT_CLASSIFICATION	1.8990201587796964E-7	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.999999810097984	WITHOUT_CLASSIFICATION	1.8990201587796964E-7	DEFECT
// first day of week is Sunday	WITHOUT_CLASSIFICATION	0.999998289486095	WITHOUT_CLASSIFICATION	1.7105139049144672E-6	DEFECT
// first day of week is monday	WITHOUT_CLASSIFICATION	0.9999976576062468	WITHOUT_CLASSIFICATION	2.342393753183144E-6	DEFECT
// try null zone	WITHOUT_CLASSIFICATION	0.9999925864341561	WITHOUT_CLASSIFICATION	7.413565843855029E-6	DEFECT
// add series to collection 1, should be not equal	WITHOUT_CLASSIFICATION	0.9999891343407341	WITHOUT_CLASSIFICATION	1.086565926581993E-5	DEFECT
// newly created collections should be equal	WITHOUT_CLASSIFICATION	0.9999990105650405	WITHOUT_CLASSIFICATION	9.894349594802152E-7	DEFECT
// now add the same series to collection 2 to make them equal again...	WITHOUT_CLASSIFICATION	0.9999971226224391	WITHOUT_CLASSIFICATION	2.8773775608396135E-6	DEFECT
// now remove series 2 from collection 2	WITHOUT_CLASSIFICATION	0.9999975538943628	WITHOUT_CLASSIFICATION	2.4461056372078405E-6	DEFECT
// now remove series 2 from collection 1 to make them equal again	WITHOUT_CLASSIFICATION	0.9999998521600585	WITHOUT_CLASSIFICATION	1.4783994162473005E-7	DEFECT
// for a series with no data, we expect {-1, -1}...	WITHOUT_CLASSIFICATION	0.999999133998052	WITHOUT_CLASSIFICATION	8.660019479604485E-7	DEFECT
// now test with a single value in the series...	WITHOUT_CLASSIFICATION	0.999999654569682	WITHOUT_CLASSIFICATION	3.454303179766415E-7	DEFECT
// now add a second value to the series...	WITHOUT_CLASSIFICATION	0.9999986271620087	WITHOUT_CLASSIFICATION	1.3728379913150703E-6	DEFECT
// now add a third value to the series...	WITHOUT_CLASSIFICATION	0.9999992763277904	WITHOUT_CLASSIFICATION	7.236722095220731E-7	DEFECT
/* TimeSeries s = */	WITHOUT_CLASSIFICATION	0.9999853968915481	WITHOUT_CLASSIFICATION	1.4603108451981588E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999456231601398	WITHOUT_CLASSIFICATION	5.4376839860124124E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999957940541321	WITHOUT_CLASSIFICATION	4.2059458678665895E-6	DEFECT
// store the current time zone	WITHOUT_CLASSIFICATION	0.9999999490947882	WITHOUT_CLASSIFICATION	5.090521188159034E-8	DEFECT
// restore the default time zone	WITHOUT_CLASSIFICATION	0.9999999784614335	WITHOUT_CLASSIFICATION	2.153856652419718E-8	DEFECT
// when the dataset contains no series, we expect the range to be null	WITHOUT_CLASSIFICATION	0.9999998210119171	WITHOUT_CLASSIFICATION	1.7898808287441535E-7	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999807325736684	WITHOUT_CLASSIFICATION	1.926742633165689E-5	DEFECT
// adding a second series	WITHOUT_CLASSIFICATION	0.9999976755562278	WITHOUT_CLASSIFICATION	2.324443772206766E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999820611859493	WITHOUT_CLASSIFICATION	1.793881405059725E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.999975062194881	WITHOUT_CLASSIFICATION	2.4937805119114266E-5	DEFECT
// period	WITHOUT_CLASSIFICATION	0.9999896490025971	WITHOUT_CLASSIFICATION	1.0350997402950771E-5	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999994574317561	WITHOUT_CLASSIFICATION	5.425682437888666E-7	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999994574317561	WITHOUT_CLASSIFICATION	5.425682437888666E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999861814973123	WITHOUT_CLASSIFICATION	1.3818502687539151E-5	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999861814973123	WITHOUT_CLASSIFICATION	1.3818502687539151E-5	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999943006561974	WITHOUT_CLASSIFICATION	5.699343802533638E-6	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999943006561974	WITHOUT_CLASSIFICATION	5.699343802533638E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998670395850205	WITHOUT_CLASSIFICATION	1.3296041497944762E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998670395850205	WITHOUT_CLASSIFICATION	1.3296041497944762E-4	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999938948528067	WITHOUT_CLASSIFICATION	6.105147193387759E-6	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.998923618799581	WITHOUT_CLASSIFICATION	0.001076381200418983	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999005537869246	WITHOUT_CLASSIFICATION	9.944621307541908E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999005537869246	WITHOUT_CLASSIFICATION	9.944621307541908E-5	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.999989827131312	WITHOUT_CLASSIFICATION	1.0172868688000563E-5	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.999989827131312	WITHOUT_CLASSIFICATION	1.0172868688000563E-5	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.999989827131312	WITHOUT_CLASSIFICATION	1.0172868688000563E-5	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999914254237723	WITHOUT_CLASSIFICATION	8.574576227717276E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999914254237723	WITHOUT_CLASSIFICATION	8.574576227717276E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999914254237723	WITHOUT_CLASSIFICATION	8.574576227717276E-6	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999926302401891	WITHOUT_CLASSIFICATION	7.3697598107687636E-6	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999926302401891	WITHOUT_CLASSIFICATION	7.3697598107687636E-6	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999456231601398	WITHOUT_CLASSIFICATION	5.4376839860124124E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999957940541321	WITHOUT_CLASSIFICATION	4.2059458678665895E-6	DEFECT
// now test that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999978572349	WITHOUT_CLASSIFICATION	2.142765031555592E-9	DEFECT
// Make sure there's nothing left	WITHOUT_CLASSIFICATION	0.9999988317534859	WITHOUT_CLASSIFICATION	1.1682465140665544E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999991174405887	WITHOUT_CLASSIFICATION	8.825594114186892E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999991174405887	WITHOUT_CLASSIFICATION	8.825594114186892E-7	DEFECT
// the moving average series has 7 items, the first three // days (11, 12, 13 August are skipped)	WITHOUT_CLASSIFICATION	0.999998711041479	WITHOUT_CLASSIFICATION	1.2889585209773684E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999984418508103	WITHOUT_CLASSIFICATION	1.558149189677169E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999991174405887	WITHOUT_CLASSIFICATION	8.825594114186892E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999530093695971	WITHOUT_CLASSIFICATION	4.6990630402906684E-5	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.999981672438408	WITHOUT_CLASSIFICATION	1.83275615920672E-5	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.999981672438408	WITHOUT_CLASSIFICATION	1.83275615920672E-5	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.999981672438408	WITHOUT_CLASSIFICATION	1.83275615920672E-5	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.9999999303272604	WITHOUT_CLASSIFICATION	6.967273966829915E-8	DEFECT
// now add another series	WITHOUT_CLASSIFICATION	0.9999989418086379	WITHOUT_CLASSIFICATION	1.058191362093301E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999744469301295	WITHOUT_CLASSIFICATION	2.5553069870455397E-5	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.9999828352994075	WITHOUT_CLASSIFICATION	1.716470059245925E-5	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999997408339514	WITHOUT_CLASSIFICATION	2.5916604856341034E-7	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999997408339514	WITHOUT_CLASSIFICATION	2.5916604856341034E-7	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999998980620997	WITHOUT_CLASSIFICATION	1.0193790032086005E-7	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.9999748295488623	WITHOUT_CLASSIFICATION	2.5170451137692366E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999820611859493	WITHOUT_CLASSIFICATION	1.793881405059725E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.999975062194881	WITHOUT_CLASSIFICATION	2.4937805119114266E-5	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997082792121	WITHOUT_CLASSIFICATION	2.917207878862869E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997082792121	WITHOUT_CLASSIFICATION	2.917207878862869E-7	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999994574317561	WITHOUT_CLASSIFICATION	5.425682437888666E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999861814973123	WITHOUT_CLASSIFICATION	1.3818502687539151E-5	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999943006561974	WITHOUT_CLASSIFICATION	5.699343802533638E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998670395850205	WITHOUT_CLASSIFICATION	1.3296041497944762E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998670395850205	WITHOUT_CLASSIFICATION	1.3296041497944762E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998670395850205	WITHOUT_CLASSIFICATION	1.3296041497944762E-4	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999966038129239	WITHOUT_CLASSIFICATION	3.3961870760663455E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999966038129239	WITHOUT_CLASSIFICATION	3.3961870760663455E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999938948528067	WITHOUT_CLASSIFICATION	6.105147193387759E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999957940541321	WITHOUT_CLASSIFICATION	4.2059458678665895E-6	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999957940541321	WITHOUT_CLASSIFICATION	4.2059458678665895E-6	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999807325736684	WITHOUT_CLASSIFICATION	1.926742633165689E-5	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999991174405887	WITHOUT_CLASSIFICATION	8.825594114186892E-7	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.999981672438408	WITHOUT_CLASSIFICATION	1.83275615920672E-5	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999984418508103	WITHOUT_CLASSIFICATION	1.558149189677169E-6	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999530093695971	WITHOUT_CLASSIFICATION	4.6990630402906684E-5	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999530093695971	WITHOUT_CLASSIFICATION	4.6990630402906684E-5	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.9999999303272604	WITHOUT_CLASSIFICATION	6.967273966829915E-8	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999997408339514	WITHOUT_CLASSIFICATION	2.5916604856341034E-7	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999998980620997	WITHOUT_CLASSIFICATION	1.0193790032086005E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999744469301295	WITHOUT_CLASSIFICATION	2.5553069870455397E-5	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999744469301295	WITHOUT_CLASSIFICATION	2.5553069870455397E-5	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999744469301295	WITHOUT_CLASSIFICATION	2.5553069870455397E-5	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999988536718161	WITHOUT_CLASSIFICATION	1.146328183916746E-6	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999988536718161	WITHOUT_CLASSIFICATION	1.146328183916746E-6	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999988536718161	WITHOUT_CLASSIFICATION	1.146328183916746E-6	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999955832531126	WITHOUT_CLASSIFICATION	4.416746887366311E-6	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999955832531126	WITHOUT_CLASSIFICATION	4.416746887366311E-6	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999955832531126	WITHOUT_CLASSIFICATION	4.416746887366311E-6	DEFECT
// try an index out of bounds	WITHOUT_CLASSIFICATION	0.9999977996174028	WITHOUT_CLASSIFICATION	2.2003825971950505E-6	DEFECT
// now add some more data	WITHOUT_CLASSIFICATION	0.9999992048688053	WITHOUT_CLASSIFICATION	7.951311947978252E-7	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9999879676021395	WITHOUT_CLASSIFICATION	1.203239786048669E-5	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9999823690946875	WITHOUT_CLASSIFICATION	1.7630905312408954E-5	DEFECT
// first check that a valid renaming works	WITHOUT_CLASSIFICATION	0.9999985803545397	WITHOUT_CLASSIFICATION	1.4196454602594556E-6	DEFECT
// next, check that setting a duplicate key fails	WITHOUT_CLASSIFICATION	0.9999994326177457	WITHOUT_CLASSIFICATION	5.673822542780535E-7	DEFECT
// create an array of items in reverse order	WITHOUT_CLASSIFICATION	0.9999997222055097	WITHOUT_CLASSIFICATION	2.777944903485672E-7	DEFECT
// got the required exception	WITHOUT_CLASSIFICATION	0.9999936032781355	WITHOUT_CLASSIFICATION	6.396721864522929E-6	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999999835102044	WITHOUT_CLASSIFICATION	1.6489795656142176E-8	DEFECT
// call parent method // setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9999908900800184	WITHOUT_CLASSIFICATION	9.109919981615318E-6	DEFECT
//if flag then change to log version of lowest value // to make range begin at a 10^n value:	WITHOUT_CLASSIFICATION	0.9999998338446314	WITHOUT_CLASSIFICATION	1.661553686169737E-7	DEFECT
//if less than 1.0 then make it 1.0 //add in margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9999981908343819	WITHOUT_CLASSIFICATION	1.8091656180685648E-6	DEFECT
//negatives not allowed and upper bound between 0 & 1 //round up to nearest significant digit for bound: //get negative exponent:	WITHOUT_CLASSIFICATION	0.9999997571650632	WITHOUT_CLASSIFICATION	2.4283493685718164E-7	DEFECT
//not first tick to be displayed //no tick label	WITHOUT_CLASSIFICATION	0.999999392797515	WITHOUT_CLASSIFICATION	6.072024849522732E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999995482628246	WITHOUT_CLASSIFICATION	4.517371754012236E-6	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999820611859493	WITHOUT_CLASSIFICATION	1.793881405059725E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.999975062194881	WITHOUT_CLASSIFICATION	2.4937805119114266E-5	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997082792121	WITHOUT_CLASSIFICATION	2.917207878862869E-7	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.9999539958467929	WITHOUT_CLASSIFICATION	4.600415320714807E-5	DEFECT
// try a few checks to ensure that the clone is independent of the // original	WITHOUT_CLASSIFICATION	0.9999999990213948	WITHOUT_CLASSIFICATION	9.78605221920003E-10	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999994574317561	WITHOUT_CLASSIFICATION	5.425682437888666E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999861814973123	WITHOUT_CLASSIFICATION	1.3818502687539151E-5	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999943006561974	WITHOUT_CLASSIFICATION	5.699343802533638E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999938948528067	WITHOUT_CLASSIFICATION	6.105147193387759E-6	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.9999895794674737	WITHOUT_CLASSIFICATION	1.0420532526353015E-5	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9992599650066845	WITHOUT_CLASSIFICATION	7.400349933154001E-4	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9999127620953723	WITHOUT_CLASSIFICATION	8.723790462768955E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999456231601398	WITHOUT_CLASSIFICATION	5.4376839860124124E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999957940541321	WITHOUT_CLASSIFICATION	4.2059458678665895E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.999981672438408	WITHOUT_CLASSIFICATION	1.83275615920672E-5	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999984418508103	WITHOUT_CLASSIFICATION	1.558149189677169E-6	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999530093695971	WITHOUT_CLASSIFICATION	4.6990630402906684E-5	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.9999828352994075	WITHOUT_CLASSIFICATION	1.716470059245925E-5	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.9999748295488623	WITHOUT_CLASSIFICATION	2.5170451137692366E-5	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9999879676021395	WITHOUT_CLASSIFICATION	1.203239786048669E-5	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9999823690946875	WITHOUT_CLASSIFICATION	1.7630905312408954E-5	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999997618097022	WITHOUT_CLASSIFICATION	2.3819029777116766E-7	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999980131992274	WITHOUT_CLASSIFICATION	1.9868007724943026E-6	DEFECT
// the series name should not  // change because "C" is already the key for the other series in the // collection	WITHOUT_CLASSIFICATION	0.999994460392722	WITHOUT_CLASSIFICATION	5.539607278016511E-6	DEFECT
//  Test that there are 6 X points and some specific values	WITHOUT_CLASSIFICATION	0.9999959137050053	WITHOUT_CLASSIFICATION	4.086294994646146E-6	DEFECT
// after adding a point to a series, check that there are now 7 // items in each series	WITHOUT_CLASSIFICATION	0.9999998817174914	WITHOUT_CLASSIFICATION	1.1828250857765613E-7	DEFECT
//  Remove series 1	WITHOUT_CLASSIFICATION	0.9999905759387311	WITHOUT_CLASSIFICATION	9.424061268834215E-6	DEFECT
//  Test that there are still 7 X points	WITHOUT_CLASSIFICATION	0.9999953704081144	WITHOUT_CLASSIFICATION	4.629591885662154E-6	DEFECT
//  Remove series 2 and add new series	WITHOUT_CLASSIFICATION	0.9999669848066649	WITHOUT_CLASSIFICATION	3.3015193335084156E-5	DEFECT
//  Test that there are now 4 X points	WITHOUT_CLASSIFICATION	0.9999943185257382	WITHOUT_CLASSIFICATION	5.681474261896552E-6	DEFECT
// WITH AUTOPRUNING	WITHOUT_CLASSIFICATION	0.9999953211984735	WITHOUT_CLASSIFICATION	4.6788015264561E-6	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9999948409139982	WITHOUT_CLASSIFICATION	5.159086001823442E-6	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9999948409139982	WITHOUT_CLASSIFICATION	5.159086001823442E-6	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9999936770240575	WITHOUT_CLASSIFICATION	6.3229759425479E-6	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9999936770240575	WITHOUT_CLASSIFICATION	6.3229759425479E-6	DEFECT
// 1 value pruned.	WITHOUT_CLASSIFICATION	0.9999962356397006	WITHOUT_CLASSIFICATION	3.76436029939042E-6	DEFECT
// WITHOUT AUTOPRUNING	WITHOUT_CLASSIFICATION	0.9999919689889399	WITHOUT_CLASSIFICATION	8.031011059966771E-6	DEFECT
// still 2.	WITHOUT_CLASSIFICATION	0.9999962231370253	WITHOUT_CLASSIFICATION	3.776862974737295E-6	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.999999074729529	WITHOUT_CLASSIFICATION	9.252704710692119E-7	DEFECT
// here we do a check to see if the user is installing the "Legacy" // theme, and reset the bar painters in that case...	WITHOUT_CLASSIFICATION	0.9999997431854074	WITHOUT_CLASSIFICATION	2.5681459265531727E-7	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999999707693183	WITHOUT_CLASSIFICATION	2.923068170154137E-8	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9999837961556866	WITHOUT_CLASSIFICATION	1.6203844313361265E-5	DEFECT
// calculate the bar width - this calculation differs from the // BarRenderer calculation because the bars are layered on top of one // another, so there is effectively only one bar per category for // the purpose of the bar width calculation	WITHOUT_CLASSIFICATION	0.9998187501681514	WITHOUT_CLASSIFICATION	1.812498318486074E-4	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.99999875769969	WITHOUT_CLASSIFICATION	1.2423003099814794E-6	DEFECT
// if the current stroke is not a BasicStroke then it is handled as // a special case	WITHOUT_CLASSIFICATION	0.9999769679861484	WITHOUT_CLASSIFICATION	2.3032013851508715E-5	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999999880248432	WITHOUT_CLASSIFICATION	1.19751568085764E-8	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999997781850543	WITHOUT_CLASSIFICATION	2.2181494572097344E-7	DEFECT
// the segment is entirely at the // front of the chart	WITHOUT_CLASSIFICATION	0.9999999057906472	WITHOUT_CLASSIFICATION	9.420935286828559E-8	DEFECT
// starts at back and wraps right around to the // back again	WITHOUT_CLASSIFICATION	0.9999997443978688	WITHOUT_CLASSIFICATION	2.556021311677063E-7	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999989143368738	WITHOUT_CLASSIFICATION	1.0856631261683445E-6	DEFECT
//  double range = this.domainAxis.getRange().getLength(); //  double scaledRange = range * percent; //  domainAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.999994950498908	WITHOUT_CLASSIFICATION	5.049501091993284E-6	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.9990726298422721	WITHOUT_CLASSIFICATION	9.273701577278392E-4	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9995978123390639	WITHOUT_CLASSIFICATION	4.0218766093623394E-4	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999988104161548	WITHOUT_CLASSIFICATION	1.189583845255077E-6	DEFECT
// if the 'notify' flag has been switched to false, we don't notify // the listeners	WITHOUT_CLASSIFICATION	0.9999985647889318	WITHOUT_CLASSIFICATION	1.4352110681258985E-6	DEFECT
// private Plot parent <-- don't clone the parent plot, but take care // childs in combined plots instead	WITHOUT_CLASSIFICATION	0.9997397776975898	WITHOUT_CLASSIFICATION	2.602223024101431E-4	DEFECT
// For the case were the first tick is greater // than minZ	WITHOUT_CLASSIFICATION	0.9999981113180708	WITHOUT_CLASSIFICATION	1.8886819291918788E-6	DEFECT
// add an entity for the item, but only if it falls within the // data area...	WITHOUT_CLASSIFICATION	0.9990342250487872	WITHOUT_CLASSIFICATION	9.657749512127982E-4	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999997881910759	WITHOUT_CLASSIFICATION	2.1180892410260796E-7	DEFECT
// when the x-values are sorted in descending order, the lower // bound is found by calculating relative to the xHigh value	WITHOUT_CLASSIFICATION	0.9999996673237693	WITHOUT_CLASSIFICATION	3.3267623073698015E-7	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9999837961556866	WITHOUT_CLASSIFICATION	1.6203844313361265E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9999837961556866	WITHOUT_CLASSIFICATION	1.6203844313361265E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997327891149	WITHOUT_CLASSIFICATION	2.6721088507781766E-7	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999988400163347	WITHOUT_CLASSIFICATION	1.1599836653268296E-6	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999988400163347	WITHOUT_CLASSIFICATION	1.1599836653268296E-6	DEFECT
// if the dataset is not a StatisticalCategoryDataset then just revert // to the superclass (LineAndShapeRenderer) behaviour...	WITHOUT_CLASSIFICATION	0.9999999566718075	WITHOUT_CLASSIFICATION	4.33281925418553E-8	DEFECT
// FIXME: add setSeriesToolTipGenerator(int, CategoryToolTipGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.7167182594422677	WITHOUT_CLASSIFICATION	0.2832817405577322	DEFECT
// average radius // outlier radius	WITHOUT_CLASSIFICATION	0.9999993522288997	WITHOUT_CLASSIFICATION	6.477711004138654E-7	DEFECT
// false preserves the old behaviour // prior to introducing this flag	WITHOUT_CLASSIFICATION	0.9999930596046704	WITHOUT_CLASSIFICATION	6.940395329561502E-6	DEFECT
// These are deliberately not bounded to minimums/maxCandleWidth to //  retain old behaviour.	WITHOUT_CLASSIFICATION	0.9999999738598799	WITHOUT_CLASSIFICATION	2.6140120037296793E-8	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.9999094619437279	WITHOUT_CLASSIFICATION	9.053805627213129E-5	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.9999094619437279	WITHOUT_CLASSIFICATION	9.053805627213129E-5	DEFECT
// deregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999990401942286	WITHOUT_CLASSIFICATION	9.59805771407009E-7	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999991765471	WITHOUT_CLASSIFICATION	8.234529299187621E-10	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999974888271084	WITHOUT_CLASSIFICATION	2.51117289152246E-6	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999824981949502	WITHOUT_CLASSIFICATION	1.750180504969622E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// end period is not in original series // this is first item AFTER end period // so this is last item BEFORE end	WITHOUT_CLASSIFICATION	0.999969269468669	WITHOUT_CLASSIFICATION	3.0730531330886365E-5	DEFECT
// the first initialization must precede creation of the ValueSet array: // establishes length of each array	WITHOUT_CLASSIFICATION	0.9999999179632223	WITHOUT_CLASSIFICATION	8.203677772152439E-8	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.9979588442268702	WITHOUT_CLASSIFICATION	0.002041155773129927	DEFECT
// draw outliers // outlier radius	WITHOUT_CLASSIFICATION	0.9999989450237314	WITHOUT_CLASSIFICATION	1.0549762685991648E-6	DEFECT
// NULL value -> insert point on base line // instead of 'step point'	WITHOUT_CLASSIFICATION	0.9999999231498471	WITHOUT_CLASSIFICATION	7.685015301393629E-8	DEFECT
// coordinate pairs // current minuend point // next minuend point // current subtrahend point // next subtrahend point	WITHOUT_CLASSIFICATION	0.9999998717116546	WITHOUT_CLASSIFICATION	1.2828834551870934E-7	DEFECT
// the intersect is at the next point for both the minuend // and subtrahend	WITHOUT_CLASSIFICATION	0.9999992811492202	WITHOUT_CLASSIFICATION	7.188507798231405E-7	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.9999992786703914	WITHOUT_CLASSIFICATION	7.213296085695316E-7	DEFECT
// the following code handles the line for the y-values...it's // all done by code in the super class	WITHOUT_CLASSIFICATION	0.999998049599173	WITHOUT_CLASSIFICATION	1.950400827042981E-6	DEFECT
// Check if the item is the last item for the series and number of // items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999999896233479	WITHOUT_CLASSIFICATION	1.0376652208185024E-8	DEFECT
// use item paint for outlines by // default, not outline paint	WITHOUT_CLASSIFICATION	0.9999990156713454	WITHOUT_CLASSIFICATION	9.84328654603062E-7	DEFECT
// add an entity for the item, but only if it falls within the data // area...	WITHOUT_CLASSIFICATION	0.9997269385722983	WITHOUT_CLASSIFICATION	2.7306142770167167E-4	DEFECT
// the bounds should be calculated using just the items within // the current range of the x-axis...if there is one	WITHOUT_CLASSIFICATION	0.9999994493422641	WITHOUT_CLASSIFICATION	5.506577358813057E-7	DEFECT
// We organise the data with the following assumption: // 1) the data are sorted by x then y // 2) that the data will be represented by a rectangle formed by //    using x[i+1], x, y[j+1], and y. // 3) we march along the y-axis at the same value of x until a new //    value x is found at which point we will flag the index //    where x[i+1]<>x[i]	WITHOUT_CLASSIFICATION	0.9999999164279816	WITHOUT_CLASSIFICATION	8.357201835664316E-8	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.9999999931872264	WITHOUT_CLASSIFICATION	6.812773563118278E-9	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9999981798431814	WITHOUT_CLASSIFICATION	1.8201568187209606E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999654815077488	WITHOUT_CLASSIFICATION	3.4518492251228796E-5	DEFECT
// have to use a subclass of // AbstractRenderer	WITHOUT_CLASSIFICATION	0.9999999360002871	WITHOUT_CLASSIFICATION	6.399971284453177E-8	DEFECT
// include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.9999984030799802	WITHOUT_CLASSIFICATION	1.5969200198221653E-6	DEFECT
// setup our test timelines // // Legend for comments below: // <spaces> = Segments included in the final timeline // EE       = Excluded segments via timeline rules // xx       = Exception segments inherited from base timeline exclusions	WITHOUT_CLASSIFICATION	0.9999999732137937	WITHOUT_CLASSIFICATION	2.678620628922665E-8	DEFECT
////////////////////////////////////////////////////////////////////////// // test exception segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999995870216962	WITHOUT_CLASSIFICATION	4.1297830369969085E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999981973876608	WITHOUT_CLASSIFICATION	1.802612339059727E-6	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9999959215284429	WITHOUT_CLASSIFICATION	4.078471557091673E-6	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9999959215284429	WITHOUT_CLASSIFICATION	4.078471557091673E-6	DEFECT
// after clearing, reverts to // default group	WITHOUT_CLASSIFICATION	0.9999998662139915	WITHOUT_CLASSIFICATION	1.3378600857083234E-7	DEFECT
// regular equality for the datasets doesn't check the fields, just // the data values...so let's check some more things...	WITHOUT_CLASSIFICATION	0.9999998969632887	WITHOUT_CLASSIFICATION	1.030367112154144E-7	DEFECT
// these methods should throw an IndexOutOfBoundsException since the // column is too high...	WITHOUT_CLASSIFICATION	0.9995657085201836	WITHOUT_CLASSIFICATION	4.342914798164332E-4	DEFECT
// this replaces the entry with the current minimum value, but the new // minimum value is now in a different item	WITHOUT_CLASSIFICATION	0.9965630494045973	WITHOUT_CLASSIFICATION	0.0034369505954028492	DEFECT
// the dataset should prevent the addition of a series with the // same name as an existing series in the dataset	WITHOUT_CLASSIFICATION	0.9999980742658966	WITHOUT_CLASSIFICATION	1.9257341033838887E-6	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.9999772392401115	WITHOUT_CLASSIFICATION	2.2760759888490333E-5	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999996541329599	WITHOUT_CLASSIFICATION	3.4586704011788345E-7	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.9999895794674737	WITHOUT_CLASSIFICATION	1.0420532526353015E-5	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9992599650066845	WITHOUT_CLASSIFICATION	7.400349933154001E-4	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999005537869246	WITHOUT_CLASSIFICATION	9.944621307541908E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999456231601398	WITHOUT_CLASSIFICATION	5.4376839860124124E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999456231601398	WITHOUT_CLASSIFICATION	5.4376839860124124E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999957940541321	WITHOUT_CLASSIFICATION	4.2059458678665895E-6	DEFECT
// when the dataset contains one or more series, but those series // contain no items, we still expect the range to be null	WITHOUT_CLASSIFICATION	0.9999974269555342	WITHOUT_CLASSIFICATION	2.5730444657998736E-6	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999807325736684	WITHOUT_CLASSIFICATION	1.926742633165689E-5	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999807325736684	WITHOUT_CLASSIFICATION	1.926742633165689E-5	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999991174405887	WITHOUT_CLASSIFICATION	8.825594114186892E-7	DEFECT
// open	WITHOUT_CLASSIFICATION	0.9999899112068592	WITHOUT_CLASSIFICATION	1.0088793140790218E-5	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999984418508103	WITHOUT_CLASSIFICATION	1.558149189677169E-6	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999997408339514	WITHOUT_CLASSIFICATION	2.5916604856341034E-7	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999998980620997	WITHOUT_CLASSIFICATION	1.0193790032086005E-7	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999998980620997	WITHOUT_CLASSIFICATION	1.0193790032086005E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999744469301295	WITHOUT_CLASSIFICATION	2.5553069870455397E-5	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999744469301295	WITHOUT_CLASSIFICATION	2.5553069870455397E-5	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999744469301295	WITHOUT_CLASSIFICATION	2.5553069870455397E-5	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999744469301295	WITHOUT_CLASSIFICATION	2.5553069870455397E-5	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999997618097022	WITHOUT_CLASSIFICATION	2.3819029777116766E-7	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999997618097022	WITHOUT_CLASSIFICATION	2.3819029777116766E-7	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999980131992274	WITHOUT_CLASSIFICATION	1.9868007724943026E-6	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999980131992274	WITHOUT_CLASSIFICATION	1.9868007724943026E-6	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9997409033038837	WITHOUT_CLASSIFICATION	2.590966961162742E-4	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999345782953306	WITHOUT_CLASSIFICATION	6.54217046693536E-5	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.9999843481023115	WITHOUT_CLASSIFICATION	1.5651897688471883E-5	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.9999843481023115	WITHOUT_CLASSIFICATION	1.5651897688471883E-5	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999345782953306	WITHOUT_CLASSIFICATION	6.54217046693536E-5	DEFECT
// slope	WITHOUT_CLASSIFICATION	0.9999984489905344	WITHOUT_CLASSIFICATION	1.5510094656534336E-6	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9997409033038837	WITHOUT_CLASSIFICATION	2.590966961162742E-4	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999996743432152	WITHOUT_CLASSIFICATION	3.2565678476468144E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999996743432152	WITHOUT_CLASSIFICATION	3.2565678476468144E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999996743432152	WITHOUT_CLASSIFICATION	3.2565678476468144E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999996743432152	WITHOUT_CLASSIFICATION	3.2565678476468144E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999996743432152	WITHOUT_CLASSIFICATION	3.2565678476468144E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999996743432152	WITHOUT_CLASSIFICATION	3.2565678476468144E-7	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusGained(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999999987583125	WITHOUT_CLASSIFICATION	1.2416875176221533E-9	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusLost(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999999963702749	WITHOUT_CLASSIFICATION	3.6297250847338455E-9	DEFECT
/* (non-Javadoc)         * @see org.jfree.chart.axis.LogarithmicAxis#switchedLog10(double)         */	WITHOUT_CLASSIFICATION	0.9999999983083235	WITHOUT_CLASSIFICATION	1.6916764890726749E-9	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999996743432152	WITHOUT_CLASSIFICATION	3.2565678476468144E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999996743432152	WITHOUT_CLASSIFICATION	3.2565678476468144E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999996743432152	WITHOUT_CLASSIFICATION	3.2565678476468144E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999996743432152	WITHOUT_CLASSIFICATION	3.2565678476468144E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999996743432152	WITHOUT_CLASSIFICATION	3.2565678476468144E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999962453681294	WITHOUT_CLASSIFICATION	3.754631870701947E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999962453681294	WITHOUT_CLASSIFICATION	3.754631870701947E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999991571319219	WITHOUT_CLASSIFICATION	8.428680780946894E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999991571319219	WITHOUT_CLASSIFICATION	8.428680780946894E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999991571319219	WITHOUT_CLASSIFICATION	8.428680780946894E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999991571319219	WITHOUT_CLASSIFICATION	8.428680780946894E-6	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999695023079833	WITHOUT_CLASSIFICATION	3.0497692016656902E-5	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999985023332234	WITHOUT_CLASSIFICATION	1.4976667765192414E-6	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999985023332234	WITHOUT_CLASSIFICATION	1.4976667765192414E-6	DEFECT
// Anwender hat abgebrochen.	WITHOUT_CLASSIFICATION	0.9999909671652456	WITHOUT_CLASSIFICATION	9.032834754306584E-6	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999919583600962	WITHOUT_CLASSIFICATION	8.041639903748948E-6	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999919583600962	WITHOUT_CLASSIFICATION	8.041639903748948E-6	DEFECT
// ...but this does!	WITHOUT_CLASSIFICATION	0.9991550874754108	WITHOUT_CLASSIFICATION	8.44912524589102E-4	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999919583600962	WITHOUT_CLASSIFICATION	8.041639903748948E-6	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999997995389666	WITHOUT_CLASSIFICATION	2.004610334678363E-7	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999991571319219	WITHOUT_CLASSIFICATION	8.428680780946894E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999991571319219	WITHOUT_CLASSIFICATION	8.428680780946894E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999967299757703	WITHOUT_CLASSIFICATION	3.270024229762371E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999967299757703	WITHOUT_CLASSIFICATION	3.270024229762371E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999865657573871	WITHOUT_CLASSIFICATION	1.3434242612868232E-5	DEFECT
// FIXME: we've cloned the chart, but the dataset(s) aren't cloned // and we should do that	DEFECT	0.7045519439186695	WITHOUT_CLASSIFICATION	0.29544805608133046	DEFECT
// todo: not serialized yet	DEFECT	0.9999810106846159	WITHOUT_CLASSIFICATION	1.8989315384085984E-5	DEFECT
// FIRST_MONDAY_AFTER_1900 = cal.getTime().getTime(); // preceding code won't work with JDK 1.3	DEFECT	0.5881005746806088	WITHOUT_CLASSIFICATION	0.4118994253193913	DEFECT
// TODO: we didn't check the height yet	DEFECT	0.587564123017851	WITHOUT_CLASSIFICATION	0.41243587698214906	DEFECT
// TODO: we didn't check the height yet	DEFECT	0.587564123017851	WITHOUT_CLASSIFICATION	0.41243587698214906	DEFECT
// TODO: Check this result...	DEFECT	0.9519349348302374	DEFECT	0.04806506516976262	WITHOUT_CLASSIFICATION
// TODO: Check this result...	DEFECT	0.9519349348302374	DEFECT	0.04806506516976262	WITHOUT_CLASSIFICATION
//return cal.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9962582809345162	WITHOUT_CLASSIFICATION	0.0037417190654837587	DEFECT
// result = this.workingCalendar.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9927647063305531	WITHOUT_CLASSIFICATION	0.007235293669446862	DEFECT
