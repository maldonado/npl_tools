// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.9999982618315854	WITHOUT_CLASSIFICATION	1.738168414760125E-6	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999112017009012	WITHOUT_CLASSIFICATION	8.879829909877611E-5	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.9999981821750353	WITHOUT_CLASSIFICATION	1.8178249646925059E-6	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.999998198784214	WITHOUT_CLASSIFICATION	1.8012157860014057E-6	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.9998989926937656	WITHOUT_CLASSIFICATION	1.0100730623433298E-4	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9999938842260869	WITHOUT_CLASSIFICATION	6.1157739130269345E-6	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.9999990239915167	WITHOUT_CLASSIFICATION	9.76008483219671E-7	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.9999987620702919	WITHOUT_CLASSIFICATION	1.2379297080528714E-6	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9999987431897723	WITHOUT_CLASSIFICATION	1.2568102277095732E-6	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.9999972531388821	WITHOUT_CLASSIFICATION	2.746861117947944E-6	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999916699501746	WITHOUT_CLASSIFICATION	8.330049825441256E-6	DEFECT
// units	WITHOUT_CLASSIFICATION	0.9999942968291631	WITHOUT_CLASSIFICATION	5.7031708369203085E-6	DEFECT
// interval	WITHOUT_CLASSIFICATION	0.9999896112840834	WITHOUT_CLASSIFICATION	1.0388715916731769E-5	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999979923706385	WITHOUT_CLASSIFICATION	2.0076293614314076E-6	DEFECT
// dial shape	WITHOUT_CLASSIFICATION	0.9999949545434265	WITHOUT_CLASSIFICATION	5.045456573579353E-6	DEFECT
// dial background paint	WITHOUT_CLASSIFICATION	0.9999989313327993	WITHOUT_CLASSIFICATION	1.0686672007652801E-6	DEFECT
// seriesPaint	WITHOUT_CLASSIFICATION	0.9999973779887219	WITHOUT_CLASSIFICATION	2.622011277983549E-6	DEFECT
// seriesPaintList	WITHOUT_CLASSIFICATION	0.9999981329948613	WITHOUT_CLASSIFICATION	1.8670051387261165E-6	DEFECT
// baseSeriesPaint	WITHOUT_CLASSIFICATION	0.9999954111870255	WITHOUT_CLASSIFICATION	4.588812974433208E-6	DEFECT
// seriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999965316045745	WITHOUT_CLASSIFICATION	3.4683954254520085E-6	DEFECT
// seriesOutlinePaintList	WITHOUT_CLASSIFICATION	0.9999975303257789	WITHOUT_CLASSIFICATION	2.4696742210892762E-6	DEFECT
// baseSeriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999939299239642	WITHOUT_CLASSIFICATION	6.070076035798115E-6	DEFECT
// seriesOutlineStroke	WITHOUT_CLASSIFICATION	0.999989216144559	WITHOUT_CLASSIFICATION	1.0783855440905932E-5	DEFECT
// seriesOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999933622350465	WITHOUT_CLASSIFICATION	6.637764953462854E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999655525687559	WITHOUT_CLASSIFICATION	3.4447431244195394E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999124002067319	WITHOUT_CLASSIFICATION	8.75997932681894E-5	DEFECT
// high	WITHOUT_CLASSIFICATION	0.9999835268208532	WITHOUT_CLASSIFICATION	1.6473179146754502E-5	DEFECT
// low	WITHOUT_CLASSIFICATION	0.9999918669887863	WITHOUT_CLASSIFICATION	8.133011213750279E-6	DEFECT
// close	WITHOUT_CLASSIFICATION	0.9999977434645909	WITHOUT_CLASSIFICATION	2.256535409113765E-6	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999640000691993	WITHOUT_CLASSIFICATION	3.599993080063347E-5	DEFECT
// there should be no change event when clearing an empty series	WITHOUT_CLASSIFICATION	0.9999902342408749	WITHOUT_CLASSIFICATION	9.76575912506952E-6	DEFECT
// clean up	WITHOUT_CLASSIFICATION	0.9999952733827177	WITHOUT_CLASSIFICATION	4.726617282433166E-6	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999926135875906	WITHOUT_CLASSIFICATION	7.386412409469956E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999938695423392	WITHOUT_CLASSIFICATION	6.130457660773585E-6	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999940284489323	WITHOUT_CLASSIFICATION	5.971551067689574E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999965500505749	WITHOUT_CLASSIFICATION	3.449949425003671E-6	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999939294548457	WITHOUT_CLASSIFICATION	6.070545154260056E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999927814842494	WITHOUT_CLASSIFICATION	7.21851575054262E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981357078591	WITHOUT_CLASSIFICATION	1.8642921408583944E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981357078591	WITHOUT_CLASSIFICATION	1.8642921408583944E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981357078591	WITHOUT_CLASSIFICATION	1.8642921408583944E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981357078591	WITHOUT_CLASSIFICATION	1.8642921408583944E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981357078591	WITHOUT_CLASSIFICATION	1.8642921408583944E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981357078591	WITHOUT_CLASSIFICATION	1.8642921408583944E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981357078591	WITHOUT_CLASSIFICATION	1.8642921408583944E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981357078591	WITHOUT_CLASSIFICATION	1.8642921408583944E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981357078591	WITHOUT_CLASSIFICATION	1.8642921408583944E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981357078591	WITHOUT_CLASSIFICATION	1.8642921408583944E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981357078591	WITHOUT_CLASSIFICATION	1.8642921408583944E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981357078591	WITHOUT_CLASSIFICATION	1.8642921408583944E-6	DEFECT
// super.drawSecondaryPass(g2, plot, dataset, pass, series, item, // domainAxis, dataArea, rangeAxis, crosshairState, entities);	WITHOUT_CLASSIFICATION	0.9999996965791773	WITHOUT_CLASSIFICATION	3.0342082265065065E-7	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999994466011525	WITHOUT_CLASSIFICATION	5.53398847488913E-7	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999994466011525	WITHOUT_CLASSIFICATION	5.53398847488913E-7	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999994466011525	WITHOUT_CLASSIFICATION	5.53398847488913E-7	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9999065300733758	WITHOUT_CLASSIFICATION	9.346992662418812E-5	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999676268048	WITHOUT_CLASSIFICATION	3.237319512109051E-8	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999956127332226	WITHOUT_CLASSIFICATION	4.3872667774777744E-6	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999970162554471	WITHOUT_CLASSIFICATION	2.9837445529045437E-6	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999935891139986	WITHOUT_CLASSIFICATION	6.410886001406336E-6	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999935891139986	WITHOUT_CLASSIFICATION	6.410886001406336E-6	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999935891139986	WITHOUT_CLASSIFICATION	6.410886001406336E-6	DEFECT
// we clone the chart because presumably there can be some delay // between putting this instance on the system clipboard and // actually having the getTransferData() method called...	WITHOUT_CLASSIFICATION	0.9999997184909379	WITHOUT_CLASSIFICATION	2.8150906204437904E-7	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999999116928656	WITHOUT_CLASSIFICATION	8.830713435022764E-8	DEFECT
// create a legend, if requested...	WITHOUT_CLASSIFICATION	0.9999997649477577	WITHOUT_CLASSIFICATION	2.3505224244211095E-7	DEFECT
// pass the click on to the plot... // rely on the plot to post a plot change event and redraw the chart...	WITHOUT_CLASSIFICATION	0.9999998340584582	WITHOUT_CLASSIFICATION	1.6594154178626738E-7	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9999978498237357	WITHOUT_CLASSIFICATION	2.1501762642048766E-6	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999977481323284	WITHOUT_CLASSIFICATION	2.2518676715009977E-6	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999914687728885	WITHOUT_CLASSIFICATION	8.5312271115408E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999967632486879	WITHOUT_CLASSIFICATION	3.236751312144516E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999967632486879	WITHOUT_CLASSIFICATION	3.236751312144516E-6	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.999991728257767	WITHOUT_CLASSIFICATION	8.27174223284803E-6	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9999714618947267	WITHOUT_CLASSIFICATION	2.853810527324934E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9999714618947267	WITHOUT_CLASSIFICATION	2.853810527324934E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9999714618947267	WITHOUT_CLASSIFICATION	2.853810527324934E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9999714618947267	WITHOUT_CLASSIFICATION	2.853810527324934E-5	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999977029757426	WITHOUT_CLASSIFICATION	2.2970242573629528E-6	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9999972977654555	WITHOUT_CLASSIFICATION	2.702234544496377E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999991045721484	WITHOUT_CLASSIFICATION	8.954278516150253E-7	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.9985778426872313	WITHOUT_CLASSIFICATION	0.0014221573127687522	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999993919119472	WITHOUT_CLASSIFICATION	6.080880528295876E-7	DEFECT
// work out the number of periods to skip for labelling	WITHOUT_CLASSIFICATION	0.9999981749594683	WITHOUT_CLASSIFICATION	1.8250405316037584E-6	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999914629998512	WITHOUT_CLASSIFICATION	8.537000148787481E-6	DEFECT
// set flag true if negative values not allowed and the // lower bound is between 0 and 10:	WITHOUT_CLASSIFICATION	0.9999946119396425	WITHOUT_CLASSIFICATION	5.388060357532571E-6	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9999495091510545	WITHOUT_CLASSIFICATION	5.049084894550819E-5	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.999979214332485	WITHOUT_CLASSIFICATION	2.0785667515034094E-5	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9999928008837515	WITHOUT_CLASSIFICATION	7.19911624848174E-6	DEFECT
//if less than 1.0 then make it 1.0 //subtract out margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9999996126122577	WITHOUT_CLASSIFICATION	3.8738774225657347E-7	DEFECT
//negatives not allowed and lower range bound is zero //use data range bound instead	WITHOUT_CLASSIFICATION	0.999980060987353	WITHOUT_CLASSIFICATION	1.9939012646887762E-5	DEFECT
//get positive exponent //create multiplier value //multiply, round up, and divide for bound value:	WITHOUT_CLASSIFICATION	0.9999987025793172	WITHOUT_CLASSIFICATION	1.2974206827760858E-6	DEFECT
//negatives allowed or upper bound not between 0 & 1 //if flag then change to log version of highest value to // make range begin at a 10^n value; else use nearest int	WITHOUT_CLASSIFICATION	0.9999995528824759	WITHOUT_CLASSIFICATION	4.4711752413453283E-7	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999992454391758	WITHOUT_CLASSIFICATION	7.545608242005609E-7	DEFECT
//first tick of series, or not too small a value and // one of first 3 ticks, or last tick to be displayed // set exact number of fractional digits to be shown // (no effect if showing "1e#"-style ticks):	WITHOUT_CLASSIFICATION	0.9999996924090183	WITHOUT_CLASSIFICATION	3.0759098172267716E-7	DEFECT
//did zero tick last iteration //clear flag //create tick label string: //show tick label if "1e#"-style and it's one // of the first two, if it's the first or last // in the set, or if it's 1-5; beyond that // show fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999990539958677	WITHOUT_CLASSIFICATION	9.460041322232617E-7	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.9993780762934161	WITHOUT_CLASSIFICATION	6.219237065839242E-4	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.9993780762934161	WITHOUT_CLASSIFICATION	6.219237065839242E-4	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999985380805664	WITHOUT_CLASSIFICATION	1.4619194336013936E-6	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.9999994896454508	WITHOUT_CLASSIFICATION	5.103545492539243E-7	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.999998136959935	WITHOUT_CLASSIFICATION	1.863040064995056E-6	DEFECT
// we call refresh ticks just to get the maximum width or height	WITHOUT_CLASSIFICATION	0.999999165372074	WITHOUT_CLASSIFICATION	8.34627926041741E-7	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.999989701378807	WITHOUT_CLASSIFICATION	1.0298621192849985E-5	DEFECT
// cycle through all the segments contained in the BaseTimeline // exception segment	WITHOUT_CLASSIFICATION	0.9999992663407186	WITHOUT_CLASSIFICATION	7.336592814866358E-7	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.999990405600586	WITHOUT_CLASSIFICATION	9.594399413939255E-6	DEFECT
// first test for equality (contains or contained)	WITHOUT_CLASSIFICATION	0.9999968821990362	WITHOUT_CLASSIFICATION	3.1178009638324058E-6	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.9999096795669482	WITHOUT_CLASSIFICATION	9.032043305188923E-5	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9999986243092099	WITHOUT_CLASSIFICATION	1.3756907900568345E-6	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9995955173850672	WITHOUT_CLASSIFICATION	4.0448261493278276E-4	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.999978768770479	WITHOUT_CLASSIFICATION	2.123122952104697E-5	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999986572571242	WITHOUT_CLASSIFICATION	1.3427428757591697E-6	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9999975668434327	WITHOUT_CLASSIFICATION	2.433156567219984E-6	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.999998108648191	WITHOUT_CLASSIFICATION	1.8913518088779777E-6	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.999998108648191	WITHOUT_CLASSIFICATION	1.8913518088779777E-6	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999996903095378	WITHOUT_CLASSIFICATION	3.0969046223711464E-7	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999990953940208	WITHOUT_CLASSIFICATION	9.046059792049092E-7	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9998301327822867	WITHOUT_CLASSIFICATION	1.6986721771331575E-4	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.9998102800964306	WITHOUT_CLASSIFICATION	1.8971990356938566E-4	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.999986662156841	WITHOUT_CLASSIFICATION	1.3337843159124311E-5	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999947856288477	WITHOUT_CLASSIFICATION	5.2143711523231346E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999947856288477	WITHOUT_CLASSIFICATION	5.2143711523231346E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999947856288477	WITHOUT_CLASSIFICATION	5.2143711523231346E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999947856288477	WITHOUT_CLASSIFICATION	5.2143711523231346E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999947856288477	WITHOUT_CLASSIFICATION	5.2143711523231346E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999947856288477	WITHOUT_CLASSIFICATION	5.2143711523231346E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999947856288477	WITHOUT_CLASSIFICATION	5.2143711523231346E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999947856288477	WITHOUT_CLASSIFICATION	5.2143711523231346E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999947856288477	WITHOUT_CLASSIFICATION	5.2143711523231346E-6	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999998156597038	WITHOUT_CLASSIFICATION	1.8434029634134336E-7	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999998156597038	WITHOUT_CLASSIFICATION	1.8434029634134336E-7	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999865462488138	WITHOUT_CLASSIFICATION	1.3453751186276005E-5	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999865462488138	WITHOUT_CLASSIFICATION	1.3453751186276005E-5	DEFECT
//no initial zoom rectangle exists but the handler is set //as life handler unregister	WITHOUT_CLASSIFICATION	0.9999993225599155	WITHOUT_CLASSIFICATION	6.7744008444434E-7	DEFECT
//float midX = (float) (minX + (plotArea.getWidth() * getRotateX())); //float midY = (float) (minY + (plotArea.getHeight() * getRotateY()));	WITHOUT_CLASSIFICATION	0.9999956606138933	WITHOUT_CLASSIFICATION	4.339386106739514E-6	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999788994102269	WITHOUT_CLASSIFICATION	2.110058977306331E-5	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999994322633677	WITHOUT_CLASSIFICATION	5.677366322028381E-7	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999994322633677	WITHOUT_CLASSIFICATION	5.677366322028381E-7	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9999988096281109	WITHOUT_CLASSIFICATION	1.1903718890026009E-6	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999986496353496	WITHOUT_CLASSIFICATION	1.350364650371368E-6	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.9999986642442703	WITHOUT_CLASSIFICATION	1.3357557297659315E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999943103952323	WITHOUT_CLASSIFICATION	5.689604767654427E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999943103952323	WITHOUT_CLASSIFICATION	5.689604767654427E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999991596207056	WITHOUT_CLASSIFICATION	8.403792943919479E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999991596207056	WITHOUT_CLASSIFICATION	8.403792943919479E-7	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999997421601963	WITHOUT_CLASSIFICATION	2.5783980372113967E-7	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999992699998462	WITHOUT_CLASSIFICATION	7.300001538080754E-7	DEFECT
// if we are drawing a perfect circle, we need to readjust the top left // coordinates of the drawing area for the arcs to arrive at this // effect.	WITHOUT_CLASSIFICATION	0.9999883052298498	WITHOUT_CLASSIFICATION	1.1694770150109263E-5	DEFECT
// establish the coordinates of the top left corner of the drawing area	WITHOUT_CLASSIFICATION	0.9999996860317533	WITHOUT_CLASSIFICATION	3.139682467748407E-7	DEFECT
// draw the sections at the top of the pie (and set up tooltips)...	WITHOUT_CLASSIFICATION	0.999999723134683	WITHOUT_CLASSIFICATION	2.768653169635088E-7	DEFECT
// the pie sections are arranged ANTICLOCKWISE	WITHOUT_CLASSIFICATION	0.9999915263048328	WITHOUT_CLASSIFICATION	8.473695167180132E-6	DEFECT
// starts at the back and finishes at the front // (wrapping the left side)	WITHOUT_CLASSIFICATION	0.9999997123504537	WITHOUT_CLASSIFICATION	2.876495463855639E-7	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.999997410810769	WITHOUT_CLASSIFICATION	2.5891892310591662E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999987690870402	WITHOUT_CLASSIFICATION	1.2309129598012714E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999987690870402	WITHOUT_CLASSIFICATION	1.2309129598012714E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999987690870402	WITHOUT_CLASSIFICATION	1.2309129598012714E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999987690870402	WITHOUT_CLASSIFICATION	1.2309129598012714E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999987690870402	WITHOUT_CLASSIFICATION	1.2309129598012714E-6	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.9999964174022165	WITHOUT_CLASSIFICATION	3.582597783528697E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999847960454908	WITHOUT_CLASSIFICATION	1.5203954509076454E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999847960454908	WITHOUT_CLASSIFICATION	1.5203954509076454E-5	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.99999979471319	WITHOUT_CLASSIFICATION	2.0528681005792867E-7	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999989016721401	WITHOUT_CLASSIFICATION	1.0983278599308889E-6	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999989016721401	WITHOUT_CLASSIFICATION	1.0983278599308889E-6	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9987792431127135	WITHOUT_CLASSIFICATION	0.0012207568872864203	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9987792431127135	WITHOUT_CLASSIFICATION	0.0012207568872864203	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999948496133266	WITHOUT_CLASSIFICATION	5.150386673308131E-6	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.999996281464305	WITHOUT_CLASSIFICATION	3.7185356951071794E-6	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.999996281464305	WITHOUT_CLASSIFICATION	3.7185356951071794E-6	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.999996281464305	WITHOUT_CLASSIFICATION	3.7185356951071794E-6	DEFECT
// the explode area defines the max circle/ellipse for the exploded // pie sections.  it is defined by shrinking the linkArea by the // linkMargin factor.	WITHOUT_CLASSIFICATION	0.9999956369046078	WITHOUT_CLASSIFICATION	4.363095392210334E-6	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9999987799985615	WITHOUT_CLASSIFICATION	1.2200014385531588E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999939514940857	WITHOUT_CLASSIFICATION	6.048505914340919E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999939514940857	WITHOUT_CLASSIFICATION	6.048505914340919E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999939514940857	WITHOUT_CLASSIFICATION	6.048505914340919E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999939514940857	WITHOUT_CLASSIFICATION	6.048505914340919E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999939514940857	WITHOUT_CLASSIFICATION	6.048505914340919E-6	DEFECT
// no axis, no gridlines...	WITHOUT_CLASSIFICATION	0.9999959224057856	WITHOUT_CLASSIFICATION	4.077594214368725E-6	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999159402193828	WITHOUT_CLASSIFICATION	8.405978061725877E-5	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999159402193828	WITHOUT_CLASSIFICATION	8.405978061725877E-5	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9999988857254158	WITHOUT_CLASSIFICATION	1.114274584121424E-6	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999988874930767	WITHOUT_CLASSIFICATION	1.1125069232806982E-6	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999988874930767	WITHOUT_CLASSIFICATION	1.1125069232806982E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999989945762952	WITHOUT_CLASSIFICATION	1.005423704876086E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999876563118849	WITHOUT_CLASSIFICATION	1.2343688115164436E-5	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999876563118849	WITHOUT_CLASSIFICATION	1.2343688115164436E-5	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999876563118849	WITHOUT_CLASSIFICATION	1.2343688115164436E-5	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999584762691957	WITHOUT_CLASSIFICATION	4.152373080431874E-5	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999584762691957	WITHOUT_CLASSIFICATION	4.152373080431874E-5	DEFECT
// the indicator bounds is calculated from the templateValue (which // determines the minimum size), the maxTemplateValue (which, if // specified, provides a maximum size) and the actual value	WITHOUT_CLASSIFICATION	0.9999998839882676	WITHOUT_CLASSIFICATION	1.1601173250578937E-7	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999979318349373	WITHOUT_CLASSIFICATION	2.068165062657142E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999979318349373	WITHOUT_CLASSIFICATION	2.068165062657142E-6	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999937795729826	WITHOUT_CLASSIFICATION	6.220427017418834E-6	DEFECT
// majorTickIncrement // majorTickLength // majorTickPaint // majorTickStroke // minorTickCount // minorTickLength // minorTickPaint // minorTickStroke // tickLabelOffset // tickLabelFont // tickLabelsVisible // tickLabelFormatter // firstTickLabelsVisible	WITHOUT_CLASSIFICATION	0.9999949554527217	WITHOUT_CLASSIFICATION	5.044547278373312E-6	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.999992539638591	WITHOUT_CLASSIFICATION	7.460361409025199E-6	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9999745618957019	WITHOUT_CLASSIFICATION	2.5438104298019483E-5	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.9999282497151487	WITHOUT_CLASSIFICATION	7.175028485130417E-5	DEFECT
// itemLabelFontList // baseItemLabelFont // itemLabelPaintList // baseItemLabelPaint // positiveItemLabelPositionList // basePositiveItemLabelPosition // negativeItemLabelPositionList // baseNegativeItemLabelPosition // itemLabelAnchorOffset // createEntityList // baseCreateEntities	WITHOUT_CLASSIFICATION	0.9999983205629562	WITHOUT_CLASSIFICATION	1.679437043760909E-6	DEFECT
// for value in bounds, do the lookup...	WITHOUT_CLASSIFICATION	0.9999997242801386	WITHOUT_CLASSIFICATION	2.757198614486165E-7	DEFECT
// for data in ascending order by x-value, we are (broadly) looking // for the index of the highest x-value that is less than xLow	WITHOUT_CLASSIFICATION	0.999996488444051	WITHOUT_CLASSIFICATION	3.511555949127409E-6	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any trailing values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.9999278127538692	WITHOUT_CLASSIFICATION	7.218724613072914E-5	DEFECT
// leave the y values (y1, y0) untranslated as it is going to be be // stacked up later by previous series values, after this it will be // translated.	WITHOUT_CLASSIFICATION	0.9999996123007124	WITHOUT_CLASSIFICATION	3.876992876107801E-7	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999998671055076	WITHOUT_CLASSIFICATION	1.3289449244418684E-7	DEFECT
// FIXME: calculate xx0	WITHOUT_CLASSIFICATION	0.8744207501341149	DEFECT	0.12557924986588506	WITHOUT_CLASSIFICATION
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999523455322705	WITHOUT_CLASSIFICATION	4.765446772938578E-5	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999778170850996	WITHOUT_CLASSIFICATION	2.21829149003789E-5	DEFECT
// wait till we are at the last item for the row then draw the // whole stack at once	WITHOUT_CLASSIFICATION	0.9999957615105399	WITHOUT_CLASSIFICATION	4.238489460002065E-6	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9999970860004592	WITHOUT_CLASSIFICATION	2.9139995407952136E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999028241102638	WITHOUT_CLASSIFICATION	9.717588973618478E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999028241102638	WITHOUT_CLASSIFICATION	9.717588973618478E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999028241102638	WITHOUT_CLASSIFICATION	9.717588973618478E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999028241102638	WITHOUT_CLASSIFICATION	9.717588973618478E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999028241102638	WITHOUT_CLASSIFICATION	9.717588973618478E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999028241102638	WITHOUT_CLASSIFICATION	9.717588973618478E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999028241102638	WITHOUT_CLASSIFICATION	9.717588973618478E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999028241102638	WITHOUT_CLASSIFICATION	9.717588973618478E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999028241102638	WITHOUT_CLASSIFICATION	9.717588973618478E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999786870266955	WITHOUT_CLASSIFICATION	2.13129733045074E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999973195552518	WITHOUT_CLASSIFICATION	2.6804447482301565E-6	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.999999667986599	WITHOUT_CLASSIFICATION	3.320134010006988E-7	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.999999667986599	WITHOUT_CLASSIFICATION	3.320134010006988E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999938323082546	WITHOUT_CLASSIFICATION	6.167691745374247E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999298959541321	WITHOUT_CLASSIFICATION	7.010404586791976E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999298959541321	WITHOUT_CLASSIFICATION	7.010404586791976E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999298959541321	WITHOUT_CLASSIFICATION	7.010404586791976E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.999998175700652	WITHOUT_CLASSIFICATION	1.8242993480364654E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999895541215467	WITHOUT_CLASSIFICATION	1.0445878453434308E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999895541215467	WITHOUT_CLASSIFICATION	1.0445878453434308E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999895541215467	WITHOUT_CLASSIFICATION	1.0445878453434308E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999895541215467	WITHOUT_CLASSIFICATION	1.0445878453434308E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999895541215467	WITHOUT_CLASSIFICATION	1.0445878453434308E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999895541215467	WITHOUT_CLASSIFICATION	1.0445878453434308E-5	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999606327382932	WITHOUT_CLASSIFICATION	3.936726170690643E-5	DEFECT
// FIXME: add setBaseItemLabelGenerator(CategoryItemLabelGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.8975572421369055	WITHOUT_CLASSIFICATION	0.10244275786309455	DEFECT
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999906850583123	WITHOUT_CLASSIFICATION	9.314941687700743E-5	DEFECT
// last series, so we are ready to draw the min and max	WITHOUT_CLASSIFICATION	0.9999990263736586	WITHOUT_CLASSIFICATION	9.736263414893706E-7	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.9999766255168318	WITHOUT_CLASSIFICATION	2.3374483168234385E-5	DEFECT
// From outlier array sort out which are outliers and put these into a // list If there are any farouts, set the flag on the // OutlierListCollection	WITHOUT_CLASSIFICATION	0.9999982170196668	WITHOUT_CLASSIFICATION	1.7829803330399514E-6	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999946153004904	WITHOUT_CLASSIFICATION	5.384699509732035E-6	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999946153004904	WITHOUT_CLASSIFICATION	5.384699509732035E-6	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999994278684494	WITHOUT_CLASSIFICATION	5.721315505201443E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999994278684494	WITHOUT_CLASSIFICATION	5.721315505201443E-7	DEFECT
// check if initial polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.9999971532342451	WITHOUT_CLASSIFICATION	2.8467657549107375E-6	DEFECT
// never updated the subtrahend if it is implied to be zero	WITHOUT_CLASSIFICATION	0.9999991501227469	WITHOUT_CLASSIFICATION	8.498772532092469E-7	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999940774929729	WITHOUT_CLASSIFICATION	5.922507027177749E-6	DEFECT
// clear the point vectors	WITHOUT_CLASSIFICATION	0.9999989994790918	WITHOUT_CLASSIFICATION	1.000520908203634E-6	DEFECT
//// ITEM LABELS VISIBLE //////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.99984301987026	WITHOUT_CLASSIFICATION	1.5698012974001173E-4	DEFECT
// we don't need the sign	WITHOUT_CLASSIFICATION	0.9999857265300834	WITHOUT_CLASSIFICATION	1.4273469916512717E-5	DEFECT
// fillType == TO_UPPER_BOUND	WITHOUT_CLASSIFICATION	0.9995169506566077	WITHOUT_CLASSIFICATION	4.8304934339227516E-4	DEFECT
/*      solve linear system with tridiagonal n by n matrix a        using Gaussian elimination *without* pivoting        where   a(i,i-1) = sub[i]  for 2<=i<=n        a(i,i)   = diag[i] for 1<=i<=n        a(i,i+1) = sup[i]  for 1<=i<=n-1        (the values sub[1], sup[n] are ignored)        right hand side vector b[1:n] is overwritten with solution        NOTE: 1...n is used in all arrays, 0 is unused */	WITHOUT_CLASSIFICATION	0.9999979780905118	WITHOUT_CLASSIFICATION	2.0219094882563636E-6	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9999991127736237	WITHOUT_CLASSIFICATION	8.872263761972636E-7	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.9999938390191532	WITHOUT_CLASSIFICATION	6.160980846819593E-6	DEFECT
//  Check that the graph being served was created by the current user //  or that it begins with "public"	WITHOUT_CLASSIFICATION	0.9999998200443673	WITHOUT_CLASSIFICATION	1.7995563261656554E-7	DEFECT
// the textAlignment and the horizontalAlignment are separate things, // but it makes sense for the default textAlignment to match the // title's horizontal alignment...	WITHOUT_CLASSIFICATION	0.9999998122593969	WITHOUT_CLASSIFICATION	1.8774060310875644E-7	DEFECT
// we don't use the calendar or numberFormat fields, but equals(Object) // is failing without them being non-null	WITHOUT_CLASSIFICATION	0.985703344754423	WITHOUT_CLASSIFICATION	0.014296655245576915	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9998695059332381	WITHOUT_CLASSIFICATION	1.3049406676190865E-4	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9998695059332381	WITHOUT_CLASSIFICATION	1.3049406676190865E-4	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.9999951923858696	WITHOUT_CLASSIFICATION	4.807614130320694E-6	DEFECT
// now fetch the row data - need to bear in mind that the row // structure may not have an entry for the column key, but that we // have already checked that the key is valid for the 2D structure	WITHOUT_CLASSIFICATION	0.9998888958849839	WITHOUT_CLASSIFICATION	1.1110411501610685E-4	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.999983271405288	WITHOUT_CLASSIFICATION	1.672859471197261E-5	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.999983271405288	WITHOUT_CLASSIFICATION	1.672859471197261E-5	DEFECT
// set up the series names...	WITHOUT_CLASSIFICATION	0.9999961514091603	WITHOUT_CLASSIFICATION	3.848590839615399E-6	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.999850436917084	WITHOUT_CLASSIFICATION	1.4956308291599071E-4	DEFECT
//create a temporary vector // set x to some arbitary value (used below)	WITHOUT_CLASSIFICATION	0.9999994589182486	WITHOUT_CLASSIFICATION	5.410817513561797E-7	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.9998939107897896	WITHOUT_CLASSIFICATION	1.0608921021041489E-4	DEFECT
//  Iterate and find all keys below threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9999794994420874	WITHOUT_CLASSIFICATION	2.050055791254224E-5	DEFECT
// handle special case of BoxAndWhiskerDataset	WITHOUT_CLASSIFICATION	0.9999989908751155	WITHOUT_CLASSIFICATION	1.0091248845600606E-6	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.999999540577976	WITHOUT_CLASSIFICATION	4.594220240637734E-7	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.999995574590046	WITHOUT_CLASSIFICATION	4.4254099540375984E-6	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.999995574590046	WITHOUT_CLASSIFICATION	4.4254099540375984E-6	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999699455621983	WITHOUT_CLASSIFICATION	3.0054437801764985E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999638387028235	WITHOUT_CLASSIFICATION	3.61612971765162E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999638387028235	WITHOUT_CLASSIFICATION	3.61612971765162E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999638387028235	WITHOUT_CLASSIFICATION	3.61612971765162E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999638387028235	WITHOUT_CLASSIFICATION	3.61612971765162E-5	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9999834634164851	WITHOUT_CLASSIFICATION	1.653658351484759E-5	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999984573343793	WITHOUT_CLASSIFICATION	1.5426656207485623E-6	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999984573343793	WITHOUT_CLASSIFICATION	1.5426656207485623E-6	DEFECT
// The next 3 functions override the base-class implementation of // the DomainInfo interface.  Using saved limits (updated by // each updateTime() call), improves performance. //	WITHOUT_CLASSIFICATION	0.9999995891080932	WITHOUT_CLASSIFICATION	4.1089190689292914E-7	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999990956712741	WITHOUT_CLASSIFICATION	9.043287258045759E-7	DEFECT
// alternatively, sometimes the first few days of the year are // considered to fall in the *last* week of the previous year...	WITHOUT_CLASSIFICATION	0.9999995611018746	WITHOUT_CLASSIFICATION	4.3889812540939365E-7	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.999997382659489	WITHOUT_CLASSIFICATION	2.6173405110032857E-6	DEFECT
// if the series is sorted, the negative index is a result from // Collections.binarySearch() and tells us where to insert the // new item...otherwise it will be just -1 and we should just // append the value to the list...	WITHOUT_CLASSIFICATION	0.9999792211231138	WITHOUT_CLASSIFICATION	2.0778876886143016E-5	DEFECT
// pass mouse move event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999996717789198	WITHOUT_CLASSIFICATION	3.282210802566178E-7	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999835537744276	WITHOUT_CLASSIFICATION	1.6446225572302775E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999835537744276	WITHOUT_CLASSIFICATION	1.6446225572302775E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999835537744276	WITHOUT_CLASSIFICATION	1.6446225572302775E-5	DEFECT
// chart title // domain axis label // range axis label // data // orientation // include legend // tooltips? // URLs?	WITHOUT_CLASSIFICATION	0.9999970027366757	WITHOUT_CLASSIFICATION	2.9972633242851037E-6	DEFECT
// the SWTGraphics2D class doesn't handle GradientPaint well, so // replace the gradient painter from the default theme with a // standard painter...	WITHOUT_CLASSIFICATION	0.9999998290542231	WITHOUT_CLASSIFICATION	1.70945776859488E-7	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999981153418471	WITHOUT_CLASSIFICATION	1.8846581528335306E-6	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999997552356131	WITHOUT_CLASSIFICATION	2.4476438691742954E-7	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.9999999389757027	WITHOUT_CLASSIFICATION	6.102429730842272E-8	DEFECT
// row 2: outline color	WITHOUT_CLASSIFICATION	0.999983868177678	WITHOUT_CLASSIFICATION	1.6131822321865473E-5	DEFECT
// Use a SwtPaintCanvas to show the color, note that we must set the // heightHint.	WITHOUT_CLASSIFICATION	0.9999897321190302	WITHOUT_CLASSIFICATION	1.0267880969782776E-5	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999984679455493	WITHOUT_CLASSIFICATION	1.5320544506967937E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999984679455493	WITHOUT_CLASSIFICATION	1.5320544506967937E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999984679455493	WITHOUT_CLASSIFICATION	1.5320544506967937E-6	DEFECT
// now create a new title and replace the existing title, several // things should happen: // (1) Adding the new title should trigger an immediate //     ChartChangeEvent; // (2) Modifying the new title should trigger a ChartChangeEvent; // (3) Modifying the old title should NOT trigger a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.9999973053176664	WITHOUT_CLASSIFICATION	2.6946823335731037E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999980783561848	WITHOUT_CLASSIFICATION	1.9216438152340832E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999980783561848	WITHOUT_CLASSIFICATION	1.9216438152340832E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999980783561848	WITHOUT_CLASSIFICATION	1.9216438152340832E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999980783561848	WITHOUT_CLASSIFICATION	1.9216438152340832E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999980783561848	WITHOUT_CLASSIFICATION	1.9216438152340832E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999980783561848	WITHOUT_CLASSIFICATION	1.9216438152340832E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999980783561848	WITHOUT_CLASSIFICATION	1.9216438152340832E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999980783561848	WITHOUT_CLASSIFICATION	1.9216438152340832E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999980783561848	WITHOUT_CLASSIFICATION	1.9216438152340832E-6	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999940284489323	WITHOUT_CLASSIFICATION	5.971551067689574E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999868544292055	WITHOUT_CLASSIFICATION	1.3145570794599029E-5	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999868544292055	WITHOUT_CLASSIFICATION	1.3145570794599029E-5	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999868544292055	WITHOUT_CLASSIFICATION	1.3145570794599029E-5	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999984570732932	WITHOUT_CLASSIFICATION	1.5429267068597232E-6	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9998718742433411	WITHOUT_CLASSIFICATION	1.28125756658929E-4	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9998718742433411	WITHOUT_CLASSIFICATION	1.28125756658929E-4	DEFECT
//gridBandPaint	WITHOUT_CLASSIFICATION	0.9999819487311404	WITHOUT_CLASSIFICATION	1.805126885958165E-5	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.9999934004282645	WITHOUT_CLASSIFICATION	6.599571735549294E-6	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.9999971282762948	WITHOUT_CLASSIFICATION	2.871723705262145E-6	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.9999852594002395	WITHOUT_CLASSIFICATION	1.4740599760536656E-5	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.9999957893520252	WITHOUT_CLASSIFICATION	4.210647974874944E-6	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999889921431689	WITHOUT_CLASSIFICATION	1.1007856831131786E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999927814842494	WITHOUT_CLASSIFICATION	7.21851575054262E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999927814842494	WITHOUT_CLASSIFICATION	7.21851575054262E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999927814842494	WITHOUT_CLASSIFICATION	7.21851575054262E-6	DEFECT
// ok, exception is expected	WITHOUT_CLASSIFICATION	0.9999516799655257	WITHOUT_CLASSIFICATION	4.832003447423775E-5	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999938695423392	WITHOUT_CLASSIFICATION	6.130457660773585E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999047737876517	WITHOUT_CLASSIFICATION	9.522621234826835E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999047737876517	WITHOUT_CLASSIFICATION	9.522621234826835E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999047737876517	WITHOUT_CLASSIFICATION	9.522621234826835E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999047737876517	WITHOUT_CLASSIFICATION	9.522621234826835E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999047737876517	WITHOUT_CLASSIFICATION	9.522621234826835E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999047737876517	WITHOUT_CLASSIFICATION	9.522621234826835E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999047737876517	WITHOUT_CLASSIFICATION	9.522621234826835E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999047737876517	WITHOUT_CLASSIFICATION	9.522621234826835E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999047737876517	WITHOUT_CLASSIFICATION	9.522621234826835E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999047737876517	WITHOUT_CLASSIFICATION	9.522621234826835E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999047737876517	WITHOUT_CLASSIFICATION	9.522621234826835E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999047737876517	WITHOUT_CLASSIFICATION	9.522621234826835E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999047737876517	WITHOUT_CLASSIFICATION	9.522621234826835E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999047737876517	WITHOUT_CLASSIFICATION	9.522621234826835E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999047737876517	WITHOUT_CLASSIFICATION	9.522621234826835E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999047737876517	WITHOUT_CLASSIFICATION	9.522621234826835E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999047737876517	WITHOUT_CLASSIFICATION	9.522621234826835E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999047737876517	WITHOUT_CLASSIFICATION	9.522621234826835E-5	DEFECT
// dateFormatOverride	WITHOUT_CLASSIFICATION	0.9998525898498765	WITHOUT_CLASSIFICATION	1.474101501234948E-4	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999916699501746	WITHOUT_CLASSIFICATION	8.330049825441256E-6	DEFECT
// check that setting the max date to something on or before the // current min date works...	WITHOUT_CLASSIFICATION	0.9999892635065044	WITHOUT_CLASSIFICATION	1.0736493495646078E-5	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999793767338041	WITHOUT_CLASSIFICATION	2.0623266195804398E-5	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999793767338041	WITHOUT_CLASSIFICATION	2.0623266195804398E-5	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999793767338041	WITHOUT_CLASSIFICATION	2.0623266195804398E-5	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999793767338041	WITHOUT_CLASSIFICATION	2.0623266195804398E-5	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999793767338041	WITHOUT_CLASSIFICATION	2.0623266195804398E-5	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999793767338041	WITHOUT_CLASSIFICATION	2.0623266195804398E-5	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999793767338041	WITHOUT_CLASSIFICATION	2.0623266195804398E-5	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999793767338041	WITHOUT_CLASSIFICATION	2.0623266195804398E-5	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999793767338041	WITHOUT_CLASSIFICATION	2.0623266195804398E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.999910744197764	WITHOUT_CLASSIFICATION	8.925580223599947E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.999910744197764	WITHOUT_CLASSIFICATION	8.925580223599947E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9997832261400184	WITHOUT_CLASSIFICATION	2.167738599815897E-4	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9997832261400184	WITHOUT_CLASSIFICATION	2.167738599815897E-4	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9997338272514112	WITHOUT_CLASSIFICATION	2.661727485887508E-4	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9997338272514112	WITHOUT_CLASSIFICATION	2.661727485887508E-4	DEFECT
//private boolean autoRangeStickyZero;	WITHOUT_CLASSIFICATION	0.9999973708349462	WITHOUT_CLASSIFICATION	2.6291650537707868E-6	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999991591017875	WITHOUT_CLASSIFICATION	8.408982123924021E-7	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999991591017875	WITHOUT_CLASSIFICATION	8.408982123924021E-7	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.9999971313599283	WITHOUT_CLASSIFICATION	2.868640071696355E-6	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999989952745639	WITHOUT_CLASSIFICATION	1.0047254359943397E-6	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999989952745639	WITHOUT_CLASSIFICATION	1.0047254359943397E-6	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.9999961767441664	WITHOUT_CLASSIFICATION	3.82325583362072E-6	DEFECT
// advance line Paint	WITHOUT_CLASSIFICATION	0.9999945439303403	WITHOUT_CLASSIFICATION	5.456069659766702E-6	DEFECT
// Add exception in included segments	WITHOUT_CLASSIFICATION	0.9999963660697767	WITHOUT_CLASSIFICATION	3.6339302231980927E-6	DEFECT
// Saturday and Sundays are non business hours	WITHOUT_CLASSIFICATION	0.9999951990291988	WITHOUT_CLASSIFICATION	4.800970801244949E-6	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9999943408622899	WITHOUT_CLASSIFICATION	5.659137710062859E-6	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9999943408622899	WITHOUT_CLASSIFICATION	5.659137710062859E-6	DEFECT
// 1-ms test timeline using 5 included and 2 excluded segments. // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 .. // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. // |  |  |  |  |  |EE|EE|  |  |  |  |  |EE|EE|  |  |  |  |  |  |EE|EE|    <-- msTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. //  \_________  ________/            \_/ //            \/                      | //       segment group         segment size = 1 ms //	WITHOUT_CLASSIFICATION	0.9999999795173343	WITHOUT_CLASSIFICATION	2.0482665720496738E-8	DEFECT
// 1-ms test timeline (with a baseTimeline) using 2 included and 2 // excluded segments centered inside each base segment // // The ms2Timeline without a base would look like this: // //    timeline start time = 1 //      | //      v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //    \____  _____/            \_/ //         \/                   | //    segment group      segment size = 1 ms // // With the base timeline some originally included segments are now // removed (see "xx" below): // //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //	WITHOUT_CLASSIFICATION	0.9999998203804825	WITHOUT_CLASSIFICATION	1.7961951741688398E-7	DEFECT
// test monday though friday timeline	WITHOUT_CLASSIFICATION	0.9999987049739766	WITHOUT_CLASSIFICATION	1.2950260234147818E-6	DEFECT
// find first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.9999966185952155	WITHOUT_CLASSIFICATION	3.381404784464434E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test construction process //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999980387922587	WITHOUT_CLASSIFICATION	1.96120774122231E-6	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999909063129718	WITHOUT_CLASSIFICATION	9.093687028233973E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // main include and excluded segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999992443980584	WITHOUT_CLASSIFICATION	7.556019415548744E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // test timeline translations //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999978095527168	WITHOUT_CLASSIFICATION	2.1904472833196414E-6	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.9999958983515853	WITHOUT_CLASSIFICATION	4.101648414712911E-6	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.9999846087389794	WITHOUT_CLASSIFICATION	1.5391261020634982E-5	DEFECT
// tick label insets...	WITHOUT_CLASSIFICATION	0.9999923846481495	WITHOUT_CLASSIFICATION	7.615351850417431E-6	DEFECT
// tick mark paint...	WITHOUT_CLASSIFICATION	0.9999869486908315	WITHOUT_CLASSIFICATION	1.3051309168475417E-5	DEFECT
// negativeArrowVisible;	WITHOUT_CLASSIFICATION	0.9999946388223429	WITHOUT_CLASSIFICATION	5.361177657108569E-6	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.999995205554921	WITHOUT_CLASSIFICATION	4.794445079017166E-6	DEFECT
// autoRange	WITHOUT_CLASSIFICATION	0.999995079663976	WITHOUT_CLASSIFICATION	4.920336023884796E-6	DEFECT
// autoRangeMinimumSize	WITHOUT_CLASSIFICATION	0.999985809683314	WITHOUT_CLASSIFICATION	1.4190316686035842E-5	DEFECT
//private double fixedAutoRange;	WITHOUT_CLASSIFICATION	0.9999845707126274	WITHOUT_CLASSIFICATION	1.5429287372643494E-5	DEFECT
//private boolean autoTickUnitSelection;	WITHOUT_CLASSIFICATION	0.9999964198464096	WITHOUT_CLASSIFICATION	3.580153590271857E-6	DEFECT
//private int autoTickIndex; //protected double reservedForTickLabels; //protected double reservedForAxisLabel;	WITHOUT_CLASSIFICATION	0.9999959187195444	WITHOUT_CLASSIFICATION	4.081280455588501E-6	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.999995468474133	WITHOUT_CLASSIFICATION	4.531525866915275E-6	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.999995468474133	WITHOUT_CLASSIFICATION	4.531525866915275E-6	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.9999836915013386	WITHOUT_CLASSIFICATION	1.6308498661379642E-5	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9999985598098563	WITHOUT_CLASSIFICATION	1.4401901436260483E-6	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.9999984002049208	WITHOUT_CLASSIFICATION	1.599795079156814E-6	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9999973786905427	WITHOUT_CLASSIFICATION	2.621309457197867E-6	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.9998837356624916	WITHOUT_CLASSIFICATION	1.1626433750839876E-4	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9999121733415676	WITHOUT_CLASSIFICATION	8.782665843247137E-5	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.9999985379683266	WITHOUT_CLASSIFICATION	1.462031673402367E-6	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.9999634785951237	WITHOUT_CLASSIFICATION	3.65214048762457E-5	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999977273314918	WITHOUT_CLASSIFICATION	2.272668508154615E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999977273314918	WITHOUT_CLASSIFICATION	2.272668508154615E-6	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9999962582304662	WITHOUT_CLASSIFICATION	3.7417695337795107E-6	DEFECT
// innerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999438922153061	WITHOUT_CLASSIFICATION	5.610778469383457E-5	DEFECT
// domainAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999973789913102	WITHOUT_CLASSIFICATION	2.621008689848269E-6	DEFECT
// rangeAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999983701181396	WITHOUT_CLASSIFICATION	1.6298818603240326E-6	DEFECT
// renderer - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999993078764706	WITHOUT_CLASSIFICATION	6.921235293120855E-7	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999950769280248	WITHOUT_CLASSIFICATION	4.923071975192897E-6	DEFECT
// domainGridlinePosition	WITHOUT_CLASSIFICATION	0.9999923903308614	WITHOUT_CLASSIFICATION	7.609669138504543E-6	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999958780244597	WITHOUT_CLASSIFICATION	4.1219755403099474E-6	DEFECT
// anchorValue	WITHOUT_CLASSIFICATION	0.9999945222314777	WITHOUT_CLASSIFICATION	5.477768522345073E-6	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999971915254889	WITHOUT_CLASSIFICATION	2.808474511050043E-6	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999971915254889	WITHOUT_CLASSIFICATION	2.808474511050043E-6	DEFECT
// range markers - no longer separate fields but test anyway...	WITHOUT_CLASSIFICATION	0.9999954074596193	WITHOUT_CLASSIFICATION	4.5925403805699075E-6	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.999941878155982	WITHOUT_CLASSIFICATION	5.812184401794842E-5	DEFECT
// domainCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999950097696293	WITHOUT_CLASSIFICATION	4.9902303707452415E-6	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999912102117741	WITHOUT_CLASSIFICATION	8.78978822587542E-6	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999912102117741	WITHOUT_CLASSIFICATION	8.78978822587542E-6	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9999953063568906	WITHOUT_CLASSIFICATION	4.693643109408328E-6	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9999953063568906	WITHOUT_CLASSIFICATION	4.693643109408328E-6	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.9999997631773444	WITHOUT_CLASSIFICATION	2.3682265559520486E-7	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999888443573056	WITHOUT_CLASSIFICATION	1.115564269434489E-5	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.999986691317754	WITHOUT_CLASSIFICATION	1.3308682246065628E-5	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.999986691317754	WITHOUT_CLASSIFICATION	1.3308682246065628E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999977010789289	WITHOUT_CLASSIFICATION	2.2989210710745863E-6	DEFECT
// units	WITHOUT_CLASSIFICATION	0.9999942968291631	WITHOUT_CLASSIFICATION	5.7031708369203085E-6	DEFECT
// tick labels visible	WITHOUT_CLASSIFICATION	0.9999944479451202	WITHOUT_CLASSIFICATION	5.552054879811582E-6	DEFECT
// tick size	WITHOUT_CLASSIFICATION	0.9999887638187863	WITHOUT_CLASSIFICATION	1.1236181213560114E-5	DEFECT
// the clone and the original share a reference to the SAME dataset	WITHOUT_CLASSIFICATION	0.9999997821503974	WITHOUT_CLASSIFICATION	2.1784960264283953E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999872858298935	WITHOUT_CLASSIFICATION	1.271417010644022E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999872858298935	WITHOUT_CLASSIFICATION	1.271417010644022E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999872858298935	WITHOUT_CLASSIFICATION	1.271417010644022E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999872858298935	WITHOUT_CLASSIFICATION	1.271417010644022E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999872858298935	WITHOUT_CLASSIFICATION	1.271417010644022E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999872858298935	WITHOUT_CLASSIFICATION	1.271417010644022E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999872858298935	WITHOUT_CLASSIFICATION	1.271417010644022E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999872858298935	WITHOUT_CLASSIFICATION	1.271417010644022E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999872858298935	WITHOUT_CLASSIFICATION	1.271417010644022E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999872858298935	WITHOUT_CLASSIFICATION	1.271417010644022E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999872858298935	WITHOUT_CLASSIFICATION	1.271417010644022E-5	DEFECT
// labelType...	WITHOUT_CLASSIFICATION	0.9999872321764502	WITHOUT_CLASSIFICATION	1.2767823549733578E-5	DEFECT
// pieIndex...	WITHOUT_CLASSIFICATION	0.9999771625674948	WITHOUT_CLASSIFICATION	2.2837432505173953E-5	DEFECT
// ignoreZeroValues	WITHOUT_CLASSIFICATION	0.9999962994263976	WITHOUT_CLASSIFICATION	3.7005736025332906E-6	DEFECT
// sectionOutlinesVisible	WITHOUT_CLASSIFICATION	0.9999968022439056	WITHOUT_CLASSIFICATION	3.1977560944092294E-6	DEFECT
// sectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999929163394612	WITHOUT_CLASSIFICATION	7.083660538834257E-6	DEFECT
// labelBackgroundPaint	WITHOUT_CLASSIFICATION	0.9999989865553452	WITHOUT_CLASSIFICATION	1.0134446547363237E-6	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.9999932806708308	WITHOUT_CLASSIFICATION	6.719329169156166E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999996365158126	WITHOUT_CLASSIFICATION	3.634841875089989E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999996365158126	WITHOUT_CLASSIFICATION	3.634841875089989E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999996365158126	WITHOUT_CLASSIFICATION	3.634841875089989E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999996365158126	WITHOUT_CLASSIFICATION	3.634841875089989E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999996365158126	WITHOUT_CLASSIFICATION	3.634841875089989E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999996365158126	WITHOUT_CLASSIFICATION	3.634841875089989E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999996365158126	WITHOUT_CLASSIFICATION	3.634841875089989E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999996365158126	WITHOUT_CLASSIFICATION	3.634841875089989E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999996365158126	WITHOUT_CLASSIFICATION	3.634841875089989E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999996365158126	WITHOUT_CLASSIFICATION	3.634841875089989E-7	DEFECT
// verify independence of fixed legend item collection	WITHOUT_CLASSIFICATION	0.9999552537000734	WITHOUT_CLASSIFICATION	4.4746299926461286E-5	DEFECT
// stroke sequence	WITHOUT_CLASSIFICATION	0.9999978044083517	WITHOUT_CLASSIFICATION	2.1955916482455536E-6	DEFECT
// stroke index	WITHOUT_CLASSIFICATION	0.9999919112380699	WITHOUT_CLASSIFICATION	8.088761930144382E-6	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.999977937626277	WITHOUT_CLASSIFICATION	2.2062373722940445E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.999977937626277	WITHOUT_CLASSIFICATION	2.2062373722940445E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.999977937626277	WITHOUT_CLASSIFICATION	2.2062373722940445E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.999977937626277	WITHOUT_CLASSIFICATION	2.2062373722940445E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.999977937626277	WITHOUT_CLASSIFICATION	2.2062373722940445E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.999977937626277	WITHOUT_CLASSIFICATION	2.2062373722940445E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.999977937626277	WITHOUT_CLASSIFICATION	2.2062373722940445E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999996097118475	WITHOUT_CLASSIFICATION	3.902881524979066E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999996097118475	WITHOUT_CLASSIFICATION	3.902881524979066E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999996097118475	WITHOUT_CLASSIFICATION	3.902881524979066E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999996097118475	WITHOUT_CLASSIFICATION	3.902881524979066E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999996097118475	WITHOUT_CLASSIFICATION	3.902881524979066E-6	DEFECT
// minorTickCount	WITHOUT_CLASSIFICATION	0.9999920277284812	WITHOUT_CLASSIFICATION	7.972271518940965E-6	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.9999971380984997	WITHOUT_CLASSIFICATION	2.861901500289461E-6	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999961227941565	WITHOUT_CLASSIFICATION	3.877205843501645E-6	DEFECT
// seriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.9999968024857826	WITHOUT_CLASSIFICATION	3.197514217356894E-6	DEFECT
//upper bound and margin OK; get log10 of upper bound	WITHOUT_CLASSIFICATION	0.9999968528463989	WITHOUT_CLASSIFICATION	3.1471536009209573E-6	DEFECT
// fillPaintList	WITHOUT_CLASSIFICATION	0.9999936300107314	WITHOUT_CLASSIFICATION	6.369989268738462E-6	DEFECT
//apply upper margin by increasing upper bound:	WITHOUT_CLASSIFICATION	0.9999966447376886	WITHOUT_CLASSIFICATION	3.355262311345857E-6	DEFECT
// baseStroke	WITHOUT_CLASSIFICATION	0.9999895076265956	WITHOUT_CLASSIFICATION	1.0492373404558161E-5	DEFECT
// Reference: http://www.antigrain.com/research/bezier_interpolation/	WITHOUT_CLASSIFICATION	0.9999993215065426	WITHOUT_CLASSIFICATION	6.784934574783368E-7	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981357078591	WITHOUT_CLASSIFICATION	1.8642921408583944E-6	DEFECT
// initialize ChartPanel-specific tool tip delays with // values the from ToolTipManager.sharedInstance()	WITHOUT_CLASSIFICATION	0.999999463981658	WITHOUT_CLASSIFICATION	5.360183420240352E-7	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999988761306228	WITHOUT_CLASSIFICATION	1.1238693771686791E-6	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999994466011525	WITHOUT_CLASSIFICATION	5.53398847488913E-7	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999994466011525	WITHOUT_CLASSIFICATION	5.53398847488913E-7	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9999998833523218	WITHOUT_CLASSIFICATION	1.1664767816785953E-7	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.999996106288589	WITHOUT_CLASSIFICATION	3.893711410875809E-6	DEFECT
// itemLabelsVisible	WITHOUT_CLASSIFICATION	0.999993007184939	WITHOUT_CLASSIFICATION	6.9928150610530095E-6	DEFECT
// make the background of the buffer clear and transparent	WITHOUT_CLASSIFICATION	0.9999987262946505	WITHOUT_CLASSIFICATION	1.2737053495123692E-6	DEFECT
// for MacOSX we can't use the CTRL key for mouse drags, see: // http://developer.apple.com/qa/qa2004/qa1362.html	WITHOUT_CLASSIFICATION	0.999948519371336	WITHOUT_CLASSIFICATION	5.148062866412668E-5	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.9999974663996652	WITHOUT_CLASSIFICATION	2.5336003347901986E-6	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9999939424246573	WITHOUT_CLASSIFICATION	6.057575342645137E-6	DEFECT
// first determine the size of the chart rendering area...	WITHOUT_CLASSIFICATION	0.9999988849389563	WITHOUT_CLASSIFICATION	1.115061043697547E-6	DEFECT
// do we need to resize the buffer?	WITHOUT_CLASSIFICATION	0.9999478451821386	WITHOUT_CLASSIFICATION	5.215481786126692E-5	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999133291356104	WITHOUT_CLASSIFICATION	8.6670864389622E-5	DEFECT
// clear the flag	WITHOUT_CLASSIFICATION	0.9999966958250053	WITHOUT_CLASSIFICATION	3.304174994763885E-6	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9999065300733758	WITHOUT_CLASSIFICATION	9.346992662418812E-5	DEFECT
// redraw the zoom rectangle (if present) - if useBuffer is false, // we use XOR so we can XOR the rectangle away again without redrawing // the chart	WITHOUT_CLASSIFICATION	0.9999990025959574	WITHOUT_CLASSIFICATION	9.974040426403576E-7	DEFECT
// redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.9999985789193218	WITHOUT_CLASSIFICATION	1.4210806782498525E-6	DEFECT
// zap the buffer onto the panel...	WITHOUT_CLASSIFICATION	0.9999965442714793	WITHOUT_CLASSIFICATION	3.455728520593468E-6	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.9999951570800615	WITHOUT_CLASSIFICATION	4.842919938560933E-6	DEFECT
// many of the zoom methods need a screen location - all we have is // the zoomPoint, but it might be null.  Here we grab the x and y // coordinates, or use defaults...	WITHOUT_CLASSIFICATION	0.9999995795075678	WITHOUT_CLASSIFICATION	4.2049243224787605E-7	DEFECT
// itemLabelFontList	WITHOUT_CLASSIFICATION	0.9999945621541685	WITHOUT_CLASSIFICATION	5.437845831529519E-6	DEFECT
// restore original tooltip dealys	WITHOUT_CLASSIFICATION	0.9999998189162854	WITHOUT_CLASSIFICATION	1.810837145455024E-7	DEFECT
// can we pan this plot?	WITHOUT_CLASSIFICATION	0.9998183559652576	WITHOUT_CLASSIFICATION	1.8164403474235446E-4	DEFECT
// the actual panning occurs later in the mouseDragged()  // method	WITHOUT_CLASSIFICATION	0.9999992872253362	WITHOUT_CLASSIFICATION	7.127746637239218E-7	DEFECT
// if the popup menu has already been triggered, then ignore dragging...	WITHOUT_CLASSIFICATION	0.9999990754946129	WITHOUT_CLASSIFICATION	9.245053870711723E-7	DEFECT
// handle panning if we have a start point	WITHOUT_CLASSIFICATION	0.9999991938575762	WITHOUT_CLASSIFICATION	8.061424237895135E-7	DEFECT
// if no initial zoom point was set, ignore dragging...	WITHOUT_CLASSIFICATION	0.9999998730748143	WITHOUT_CLASSIFICATION	1.2692518562088186E-7	DEFECT
// erase the previous zoom rectangle (if any).  We only need to do // this is we are using XOR mode, which we do when we're not using // the buffer (if there is a buffer, then at the end of this method we // just trigger a repaint)	WITHOUT_CLASSIFICATION	0.9999956056216807	WITHOUT_CLASSIFICATION	4.394378319384405E-6	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999992682444775	WITHOUT_CLASSIFICATION	7.317555226132284E-7	DEFECT
// Draw the new zoom rectangle...	WITHOUT_CLASSIFICATION	0.9999962522569489	WITHOUT_CLASSIFICATION	3.747743051075676E-6	DEFECT
// with no buffer, we use XOR to draw the rectangle "over" the // chart...	WITHOUT_CLASSIFICATION	0.9999983226485086	WITHOUT_CLASSIFICATION	1.6773514913373062E-6	DEFECT
// if we've been panning, we need to reset now that the mouse is  // released...	WITHOUT_CLASSIFICATION	0.9999970887721314	WITHOUT_CLASSIFICATION	2.9112278686177293E-6	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999981270286586	WITHOUT_CLASSIFICATION	1.8729713412827606E-6	DEFECT
// erase the zoom rectangle	WITHOUT_CLASSIFICATION	0.9999967048075689	WITHOUT_CLASSIFICATION	3.2951924310855723E-6	DEFECT
// force a redraw // new entity code...	WITHOUT_CLASSIFICATION	0.999994406207738	WITHOUT_CLASSIFICATION	5.593792261986918E-6	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999829750672266	WITHOUT_CLASSIFICATION	1.702493277346515E-5	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999829750672266	WITHOUT_CLASSIFICATION	1.702493277346515E-5	DEFECT
// Set XOR mode to draw the zoom rectangle	WITHOUT_CLASSIFICATION	0.9999975325292965	WITHOUT_CLASSIFICATION	2.4674707036447698E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999616889673351	WITHOUT_CLASSIFICATION	3.83110326649857E-5	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999676268048	WITHOUT_CLASSIFICATION	3.237319512109051E-8	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999676268048	WITHOUT_CLASSIFICATION	3.237319512109051E-8	DEFECT
// use reflection to get the SVG string	WITHOUT_CLASSIFICATION	0.9999993428446968	WITHOUT_CLASSIFICATION	6.571553031022641E-7	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999245359718	WITHOUT_CLASSIFICATION	7.54640282410838E-8	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999245359718	WITHOUT_CLASSIFICATION	7.54640282410838E-8	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999245359718	WITHOUT_CLASSIFICATION	7.54640282410838E-8	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999616889673351	WITHOUT_CLASSIFICATION	3.83110326649857E-5	DEFECT
// we suppress shadow generation, because SVG is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.999968327705574	WITHOUT_CLASSIFICATION	3.1672294426047064E-5	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999961047101006	WITHOUT_CLASSIFICATION	3.895289899452694E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999616889673351	WITHOUT_CLASSIFICATION	3.83110326649857E-5	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999616889673351	WITHOUT_CLASSIFICATION	3.83110326649857E-5	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999616889673351	WITHOUT_CLASSIFICATION	3.83110326649857E-5	DEFECT
// fetch listeners from local storage	WITHOUT_CLASSIFICATION	0.9999945746379223	WITHOUT_CLASSIFICATION	5.425362077746125E-6	DEFECT
// here we need to update the UI for the popup menu, if the panel // has one...	WITHOUT_CLASSIFICATION	0.9999987106029061	WITHOUT_CLASSIFICATION	1.289397093838312E-6	DEFECT
// we suppress shadow generation, because PDF is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.999965659541193	WITHOUT_CLASSIFICATION	3.4340458807063115E-5	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.9999996673329035	WITHOUT_CLASSIFICATION	3.3266709653185985E-7	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9999997086937149	WITHOUT_CLASSIFICATION	2.913062851457342E-7	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999956127332226	WITHOUT_CLASSIFICATION	4.3872667774777744E-6	DEFECT
// we create a new but empty chartMouseListeners list	WITHOUT_CLASSIFICATION	0.9999952630112258	WITHOUT_CLASSIFICATION	4.736988774265435E-6	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999956127332226	WITHOUT_CLASSIFICATION	4.3872667774777744E-6	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ----------------- * ChartFactory.java * ----------------- * (C) Copyright 2001-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Serge V. Grachov; *                   Joao Guilherme Del Valle; *                   Bill Kelemen; *                   Jon Iles; *                   Jelai Wang; *                   Richard Atkinson; *                   David Browning (for Australian Institute of Marine *                       Science); *                   Benoit Xhenseval; * * Changes * ------- * 19-Oct-2001 : Version 1, most methods transferred from JFreeChart.java (DG); * 22-Oct-2001 : Added methods to create stacked bar charts (DG); *               Renamed DataSource.java --> Dataset.java etc. (DG); * 31-Oct-2001 : Added 3D-effect vertical bar and stacked-bar charts, *               contributed by Serge V. Grachov (DG); * 07-Nov-2001 : Added a flag to control whether or not a legend is added to *               the chart (DG); * 17-Nov-2001 : For pie chart, changed dataset from CategoryDataset to *               PieDataset (DG); * 30-Nov-2001 : Removed try/catch handlers from chart creation, as the *               exception are now RuntimeExceptions, as suggested by Joao *               Guilherme Del Valle (DG); * 06-Dec-2001 : Added createCombinableXXXXXCharts methods (BK); * 12-Dec-2001 : Added createCandlestickChart() method (DG); * 13-Dec-2001 : Updated methods for charts with new renderers (DG); * 08-Jan-2002 : Added import for *               com.jrefinery.chart.combination.CombinedChart (DG); * 31-Jan-2002 : Changed the createCombinableVerticalXYBarChart() method to use *               renderer (DG); * 06-Feb-2002 : Added new method createWindPlot() (DG); * 23-Apr-2002 : Updates to the chart and plot constructor API (DG); * 21-May-2002 : Added new method createAreaChart() (JI); * 06-Jun-2002 : Added new method createGanttChart() (DG); * 11-Jun-2002 : Renamed createHorizontalStackedBarChart() *               --> createStackedHorizontalBarChart() for consistency (DG); * 06-Aug-2002 : Updated Javadoc comments (DG); * 21-Aug-2002 : Added createPieChart(CategoryDataset) method (DG); * 02-Oct-2002 : Fixed errors reported by Checkstyle (DG); * 09-Oct-2002 : Added methods including tooltips and URL flags (DG); * 06-Nov-2002 : Moved renderers into a separate package (DG); * 18-Nov-2002 : Changed CategoryDataset to TableDataset (DG); * 21-Mar-2003 : Incorporated HorizontalCategoryAxis3D, see bug id 685501 (DG); * 13-May-2003 : Merged some horizontal and vertical methods (DG); * 24-May-2003 : Added support for timeline in createHighLowChart (BK); * 07-Jul-2003 : Added createHistogram() method contributed by Jelai Wang (DG); * 27-Jul-2003 : Added createStackedAreaXYChart() method (RA); * 05-Aug-2003 : added new method createBoxAndWhiskerChart (DB); * 08-Sep-2003 : Changed ValueAxis API (DG); * 07-Oct-2003 : Added stepped area XY chart contributed by Matthias Rose (DG); * 06-Nov-2003 : Added createWaterfallChart() method (DG); * 20-Nov-2003 : Set rendering order for 3D bar charts to fix overlapping *               problems (DG); * 25-Nov-2003 : Added createWaferMapChart() method (DG); * 23-Dec-2003 : Renamed createPie3DChart() --> createPieChart3D for *               consistency (DG); * 20-Jan-2004 : Added createPolarChart() method (DG); * 28-Jan-2004 : Fixed bug (882890) with axis range in *               createStackedXYAreaChart() method (DG); * 25-Feb-2004 : Renamed XYToolTipGenerator --> XYItemLabelGenerator (DG); * 11-Mar-2004 : Updated for pie chart changes (DG); * 27-Apr-2004 : Added new createPieChart() method contributed by Benoit *               Xhenseval (see RFE 942195) (DG); * 11-May-2004 : Split StandardCategoryItemLabelGenerator *               --> StandardCategoryToolTipGenerator and *               StandardCategoryLabelGenerator (DG); * 06-Jan-2005 : Removed deprecated methods (DG); * 27-Jan-2005 : Added new constructor to LineAndShapeRenderer (DG); * 28-Feb-2005 : Added docs to createBubbleChart() method (DG); * 17-Mar-2005 : Added createRingPlot() method (DG); * 21-Apr-2005 : Replaced Insets with RectangleInsets (DG); * 29-Nov-2005 : Removed signal chart (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 26-Jan-2006 : Corrected API docs for createScatterPlot() (DG); * 23-Aug-2006 : Modified createStackedXYAreaChart() to use *               StackedXYAreaRenderer2, because StackedXYAreaRenderer doesn't *               handle negative values (DG); * 27-Sep-2006 : Update createPieChart() method for deprecated code (DG); * 29-Nov-2006 : Update createXYBarChart() to use a time based tool tip *               generator is a DateAxis is requested (DG); * 17-Jan-2007 : Added createBoxAndWhiskerChart() method from patch 1603937 *               submitted by Darren Jung (DG); * 10-Jul-2007 : Added new methods to create pie charts with locale for *               section label and tool tip formatting (DG); * 14-Aug-2008 : Added ChartTheme facility (DG); * 23-Oct-2008 : Check for legacy theme in setChartTheme() and reset default *               bar painters (DG); * 20-Dec-2008 : In createStackedAreaChart(), set category margin to 0.0 (DG); * 02-Jul-2013 : Use ParamChecks class (DG); *  */	WITHOUT_CLASSIFICATION	0.9997692570295681	WITHOUT_CLASSIFICATION	2.3074297043197648E-4	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.9999936904555358	WITHOUT_CLASSIFICATION	6.3095444641834375E-6	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999956127332226	WITHOUT_CLASSIFICATION	4.3872667774777744E-6	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999956127332226	WITHOUT_CLASSIFICATION	4.3872667774777744E-6	DEFECT
// create the renderer...	WITHOUT_CLASSIFICATION	0.9999942193881498	WITHOUT_CLASSIFICATION	5.780611850108618E-6	DEFECT
// create the plot...	WITHOUT_CLASSIFICATION	0.9999983476646158	WITHOUT_CLASSIFICATION	1.6523353841941074E-6	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999970162554471	WITHOUT_CLASSIFICATION	2.9837445529045437E-6	DEFECT
// forces recalculation of the axis range	WITHOUT_CLASSIFICATION	0.9999917161508778	WITHOUT_CLASSIFICATION	8.283849122144524E-6	DEFECT
// reduce the default margins	WITHOUT_CLASSIFICATION	0.9999996720081736	WITHOUT_CLASSIFICATION	3.279918263308201E-7	DEFECT
// override default	WITHOUT_CLASSIFICATION	0.9999981604212073	WITHOUT_CLASSIFICATION	1.839578792695776E-6	DEFECT
// get desired width and height from somewhere then...	WITHOUT_CLASSIFICATION	0.9999996275720464	WITHOUT_CLASSIFICATION	3.7242795357516183E-7	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.9999954910548711	WITHOUT_CLASSIFICATION	4.508945129024755E-6	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.9999954910548711	WITHOUT_CLASSIFICATION	4.508945129024755E-6	DEFECT
// no need to instantiate this    	WITHOUT_CLASSIFICATION	0.9999906042417919	WITHOUT_CLASSIFICATION	9.395758208151299E-6	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999850779398565	WITHOUT_CLASSIFICATION	1.4922060143531308E-5	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------- * ChartUtilities.java * ------------------- * (C) Copyright 2001-2013, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Wolfgang Irler; *                   Richard Atkinson; *                   Xavier Poinsard; * * Changes * ------- * 11-Dec-2001 : Version 1.  The JPEG method comes from Wolfgang Irler's *               JFreeChartServletDemo class (DG); * 23-Jan-2002 : Changed saveChartAsXXX() methods to pass IOExceptions back to *               caller (DG); * 26-Jun-2002 : Added image map methods (DG); * 05-Aug-2002 : Added writeBufferedImage methods *               Modified writeImageMap method to support flexible image *               maps (RA); * 26-Aug-2002 : Added saveChartAsJPEG and writeChartAsJPEG methods with info *               objects (RA); * 05-Sep-2002 : Added writeImageMap() method to support OverLIB *               - http://www.bosrup.com/web/overlib (RA); * 26-Sep-2002 : Fixed errors reported by Checkstyle (DG); * 17-Oct-2002 : Exposed JPEG quality setting and PNG compression level as *               parameters (DG); * 25-Oct-2002 : Fixed writeChartAsJPEG() empty method bug (DG); * 13-Mar-2003 : Updated writeImageMap method as suggested by Xavier Poinsard *               (see Feature Request 688079) (DG); * 12-Aug-2003 : Added support for custom image maps using *               ToolTipTagFragmentGenerator and URLTagFragmentGenerator (RA); * 02-Sep-2003 : Separated PNG encoding from writing chart to an *               OutputStream (RA); * 04-Dec-2003 : Chart draw() method modified to include anchor point (DG); * 20-Feb-2004 : Edited Javadocs and added argument checking (DG); * 05-Apr-2004 : Fixed problem with buffered image type (DG); * 01-Aug-2004 : Modified to use EncoderUtil for all image encoding (RA); * 02-Aug-2004 : Delegated image map related functionality to ImageMapUtil (RA); * 13-Jan-2005 : Renamed ImageMapUtil --> ImageMapUtilities, removed method *               writeImageMap(PrintWriter, String, ChartRenderingInfo) which *               exists in ImageMapUtilities (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 06-Feb-2006 : API doc update (DG); * 19-Mar-2007 : Use try-finally to close output stream in saveChartAsXXX() *               methods (DG); * 10-Jan-2008 : Fix bug 1868251 - don't create image with transparency when *               saving to JPEG format (DG); * 02-Jul-2013 : Use ParamChecks class (DG); * */	WITHOUT_CLASSIFICATION	0.9999878157242694	WITHOUT_CLASSIFICATION	1.2184275730632834E-5	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999920564100304	WITHOUT_CLASSIFICATION	7.94358996960941E-6	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999935891139986	WITHOUT_CLASSIFICATION	6.410886001406336E-6	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999935891139986	WITHOUT_CLASSIFICATION	6.410886001406336E-6	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999935891139986	WITHOUT_CLASSIFICATION	6.410886001406336E-6	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999920564100304	WITHOUT_CLASSIFICATION	7.94358996960941E-6	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999920564100304	WITHOUT_CLASSIFICATION	7.94358996960941E-6	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999920564100304	WITHOUT_CLASSIFICATION	7.94358996960941E-6	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999920564100304	WITHOUT_CLASSIFICATION	7.94358996960941E-6	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999920564100304	WITHOUT_CLASSIFICATION	7.94358996960941E-6	DEFECT
/* shape outlined */	WITHOUT_CLASSIFICATION	0.9999986854023812	WITHOUT_CLASSIFICATION	1.314597618721306E-6	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999976695963125	WITHOUT_CLASSIFICATION	2.330403687576068E-6	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999942316444251	WITHOUT_CLASSIFICATION	5.7683555748322375E-6	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999942316444251	WITHOUT_CLASSIFICATION	5.7683555748322375E-6	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999976695963125	WITHOUT_CLASSIFICATION	2.330403687576068E-6	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999976695963125	WITHOUT_CLASSIFICATION	2.330403687576068E-6	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999976695963125	WITHOUT_CLASSIFICATION	2.330403687576068E-6	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999938811849692	WITHOUT_CLASSIFICATION	6.118815030721125E-6	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999938811849692	WITHOUT_CLASSIFICATION	6.118815030721125E-6	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999938811849692	WITHOUT_CLASSIFICATION	6.118815030721125E-6	DEFECT
// positiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999968843837056	WITHOUT_CLASSIFICATION	3.1156162944636916E-6	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9999939424246573	WITHOUT_CLASSIFICATION	6.057575342645137E-6	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999976695963125	WITHOUT_CLASSIFICATION	2.330403687576068E-6	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999938811849692	WITHOUT_CLASSIFICATION	6.118815030721125E-6	DEFECT
// negativeItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9999985327042105	WITHOUT_CLASSIFICATION	1.4672957895041004E-6	DEFECT
// ----------------- // --- Constants --- // -----------------	WITHOUT_CLASSIFICATION	0.9999960528428494	WITHOUT_CLASSIFICATION	3.94715715049529E-6	DEFECT
// ------------------------ // --- Member Variables --- // ------------------------	WITHOUT_CLASSIFICATION	0.9999948059405444	WITHOUT_CLASSIFICATION	5.194059455698507E-6	DEFECT
// -------------------- // --- Constructors --- // --------------------	WITHOUT_CLASSIFICATION	0.999994888207655	WITHOUT_CLASSIFICATION	5.1117923450697985E-6	DEFECT
// -------------------------- // --- ChartPanel Methods --- // --------------------------	WITHOUT_CLASSIFICATION	0.9999988676232513	WITHOUT_CLASSIFICATION	1.132376748771E-6	DEFECT
// ---------------------- // --- Public Methods --- // ----------------------	WITHOUT_CLASSIFICATION	0.9999974352958494	WITHOUT_CLASSIFICATION	2.5647041505856193E-6	DEFECT
// ----------------------- // --- Private Methods --- // -----------------------	WITHOUT_CLASSIFICATION	0.9999971443185759	WITHOUT_CLASSIFICATION	2.8556814242124198E-6	DEFECT
// do nothing at all	WITHOUT_CLASSIFICATION	0.999979645532953	WITHOUT_CLASSIFICATION	2.0354467046886255E-5	DEFECT
// now process the plot if there is one	WITHOUT_CLASSIFICATION	0.9999960221566871	WITHOUT_CLASSIFICATION	3.977843312829062E-6	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.9999961896283325	WITHOUT_CLASSIFICATION	3.8103716676404876E-6	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.9999961896283325	WITHOUT_CLASSIFICATION	3.8103716676404876E-6	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.9999951581337855	WITHOUT_CLASSIFICATION	4.841866214540553E-6	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.9999951581337855	WITHOUT_CLASSIFICATION	4.841866214540553E-6	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999959972984352	WITHOUT_CLASSIFICATION	4.002701564715414E-6	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999959972984352	WITHOUT_CLASSIFICATION	4.002701564715414E-6	DEFECT
// process all annotations	WITHOUT_CLASSIFICATION	0.9999922729845233	WITHOUT_CLASSIFICATION	7.727015476679553E-6	DEFECT
// BarRenderer	WITHOUT_CLASSIFICATION	0.9999897466758854	WITHOUT_CLASSIFICATION	1.0253324114586991E-5	DEFECT
// BarRenderer3D	WITHOUT_CLASSIFICATION	0.999983382332479	WITHOUT_CLASSIFICATION	1.6617667520943984E-5	DEFECT
// LineRenderer3D	WITHOUT_CLASSIFICATION	0.9999901139602148	WITHOUT_CLASSIFICATION	9.886039785296183E-6	DEFECT
//  StatisticalBarRenderer	WITHOUT_CLASSIFICATION	0.9999949097426961	WITHOUT_CLASSIFICATION	5.090257303930424E-6	DEFECT
// MinMaxCategoryRenderer	WITHOUT_CLASSIFICATION	0.9999889919641792	WITHOUT_CLASSIFICATION	1.100803582076488E-5	DEFECT
// handle GradientPaint as a special case	WITHOUT_CLASSIFICATION	0.999999774457276	WITHOUT_CLASSIFICATION	2.255427241553613E-7	DEFECT
// create storage for listeners...	WITHOUT_CLASSIFICATION	0.9999978384026806	WITHOUT_CLASSIFICATION	2.161597319411721E-6	DEFECT
// add the chart title, if one has been specified...	WITHOUT_CLASSIFICATION	0.9999997417465667	WITHOUT_CLASSIFICATION	2.5825343324777396E-7	DEFECT
// this fires a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.999979574353279	WITHOUT_CLASSIFICATION	2.042564672106284E-5	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.9999993246964198	WITHOUT_CLASSIFICATION	6.753035802595836E-7	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.9999996673329035	WITHOUT_CLASSIFICATION	3.3266709653185985E-7	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999932035245901	WITHOUT_CLASSIFICATION	6.796475409855551E-6	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999977481323284	WITHOUT_CLASSIFICATION	2.2518676715009977E-6	DEFECT
// clear the section attributes so that the theme's DrawingSupplier // will be used	WITHOUT_CLASSIFICATION	0.99999936811815	WITHOUT_CLASSIFICATION	6.318818500382735E-7	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999999116928656	WITHOUT_CLASSIFICATION	8.830713435022764E-8	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999999116928656	WITHOUT_CLASSIFICATION	8.830713435022764E-8	DEFECT
// default is to notify listeners when the // chart changes	WITHOUT_CLASSIFICATION	0.9999939236183256	WITHOUT_CLASSIFICATION	6.076381674378072E-6	DEFECT
// added the following hint because of  // http://stackoverflow.com/questions/7785082/	WITHOUT_CLASSIFICATION	0.9999995758904551	WITHOUT_CLASSIFICATION	4.2410954485149717E-7	DEFECT
// record the chart area, if info is requested...	WITHOUT_CLASSIFICATION	0.9999989315421373	WITHOUT_CLASSIFICATION	1.068457862775605E-6	DEFECT
// ensure no drawing occurs outside chart area...	WITHOUT_CLASSIFICATION	0.9999988534796299	WITHOUT_CLASSIFICATION	1.1465203700911248E-6	DEFECT
// draw the chart background...	WITHOUT_CLASSIFICATION	0.9999985046032036	WITHOUT_CLASSIFICATION	1.4953967963811705E-6	DEFECT
// draw the title and subtitles...	WITHOUT_CLASSIFICATION	0.9999994653443752	WITHOUT_CLASSIFICATION	5.346556247531928E-7	DEFECT
// draw the plot (axes and data visualisation)	WITHOUT_CLASSIFICATION	0.9999990628104806	WITHOUT_CLASSIFICATION	9.371895195250052E-7	DEFECT
// private boolean borderVisible; // private transient Stroke borderStroke; // private transient Paint borderPaint;	WITHOUT_CLASSIFICATION	0.9999982901247222	WITHOUT_CLASSIFICATION	1.7098752778369303E-6	DEFECT
// get a locale-specific resource bundle...	WITHOUT_CLASSIFICATION	0.9999997826385651	WITHOUT_CLASSIFICATION	2.1736143494512066E-7	DEFECT
// load only when required	WITHOUT_CLASSIFICATION	0.9999957296844144	WITHOUT_CLASSIFICATION	4.2703155855906705E-6	DEFECT
// use ImageIcon because it waits for the image to load...	WITHOUT_CLASSIFICATION	0.9999992192054757	WITHOUT_CLASSIFICATION	7.807945242469537E-7	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9999978498237357	WITHOUT_CLASSIFICATION	2.1501762642048766E-6	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.999975621467597	WITHOUT_CLASSIFICATION	2.4378532403017295E-5	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.9999914557851397	WITHOUT_CLASSIFICATION	8.54421486024923E-6	DEFECT
// if we don't have at least 2 (x, y) coordinates, just return	WITHOUT_CLASSIFICATION	0.9999945800456294	WITHOUT_CLASSIFICATION	5.419954370594019E-6	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.999988977347504	WITHOUT_CLASSIFICATION	1.1022652495953445E-5	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.999988977347504	WITHOUT_CLASSIFICATION	1.1022652495953445E-5	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999926172486665	WITHOUT_CLASSIFICATION	7.382751333540655E-6	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999926172486665	WITHOUT_CLASSIFICATION	7.382751333540655E-6	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999914687728885	WITHOUT_CLASSIFICATION	8.5312271115408E-6	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999914687728885	WITHOUT_CLASSIFICATION	8.5312271115408E-6	DEFECT
/* Rectangle2D hotspot = */	WITHOUT_CLASSIFICATION	0.9999869870100182	WITHOUT_CLASSIFICATION	1.301298998177219E-5	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999850779398565	WITHOUT_CLASSIFICATION	1.4922060143531308E-5	DEFECT
// FIXME //SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9509172547355144	WITHOUT_CLASSIFICATION	0.049082745264485715	DEFECT
// FIXME //this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.9217201720921706	WITHOUT_CLASSIFICATION	0.07827982790782942	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.9999963949972729	WITHOUT_CLASSIFICATION	3.605002727151176E-6	DEFECT
// by default the outline and background won't be visible	WITHOUT_CLASSIFICATION	0.9999987720346202	WITHOUT_CLASSIFICATION	1.2279653797907193E-6	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.999988977347504	WITHOUT_CLASSIFICATION	1.1022652495953445E-5	DEFECT
// create plot ...	WITHOUT_CLASSIFICATION	0.9999979946916336	WITHOUT_CLASSIFICATION	2.005308366303999E-6	DEFECT
// add a second dataset and renderer...	WITHOUT_CLASSIFICATION	0.9999982257685275	WITHOUT_CLASSIFICATION	1.7742314725452714E-6	DEFECT
// return a new chart containing the overlaid plot...	WITHOUT_CLASSIFICATION	0.9999998778120671	WITHOUT_CLASSIFICATION	1.2218793287325193E-7	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999965675099367	WITHOUT_CLASSIFICATION	3.432490063331209E-6	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999926172486665	WITHOUT_CLASSIFICATION	7.382751333540655E-6	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999914687728885	WITHOUT_CLASSIFICATION	8.5312271115408E-6	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999850779398565	WITHOUT_CLASSIFICATION	1.4922060143531308E-5	DEFECT
// baseNegativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999987366486398	WITHOUT_CLASSIFICATION	1.2633513602207357E-6	DEFECT
// here we change the AffineTransform so we can draw the annotation // to a larger area and scale it down into the display area // afterwards, the original transform is restored	WITHOUT_CLASSIFICATION	0.9999990195799869	WITHOUT_CLASSIFICATION	9.804200130914339E-7	DEFECT
// compute transform matrix elements via sample points. Assume no // rotation or shear.	WITHOUT_CLASSIFICATION	0.9999918867725137	WITHOUT_CLASSIFICATION	8.113227486256261E-6	DEFECT
//  create transform & transform shape	WITHOUT_CLASSIFICATION	0.9999897197081287	WITHOUT_CLASSIFICATION	1.028029187121902E-5	DEFECT
//SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9999882243175472	WITHOUT_CLASSIFICATION	1.1775682452784583E-5	DEFECT
//this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.9999811597748837	WITHOUT_CLASSIFICATION	1.8840225116349606E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9999714618947267	WITHOUT_CLASSIFICATION	2.853810527324934E-5	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999977565848942	WITHOUT_CLASSIFICATION	2.2434151058076587E-6	DEFECT
// apply the margins - these should apply to the exponent range	WITHOUT_CLASSIFICATION	0.9999997097845281	WITHOUT_CLASSIFICATION	2.9021547194214315E-7	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9999975137148931	WITHOUT_CLASSIFICATION	2.4862851068793072E-6	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999977029757426	WITHOUT_CLASSIFICATION	2.2970242573629528E-6	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9999972977654555	WITHOUT_CLASSIFICATION	2.702234544496377E-6	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.999999815082242	WITHOUT_CLASSIFICATION	1.849177579737875E-7	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.999999815082242	WITHOUT_CLASSIFICATION	1.849177579737875E-7	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.9999910525785023	WITHOUT_CLASSIFICATION	8.947421497689383E-6	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.9999910525785023	WITHOUT_CLASSIFICATION	8.947421497689383E-6	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.9999920181725711	WITHOUT_CLASSIFICATION	7.98182742881396E-6	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.9999920181725711	WITHOUT_CLASSIFICATION	7.98182742881396E-6	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.9999995949071611	WITHOUT_CLASSIFICATION	4.0509283900311053E-7	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999991045721484	WITHOUT_CLASSIFICATION	8.954278516150253E-7	DEFECT
// no need to create entity if we can't save it anyways...	WITHOUT_CLASSIFICATION	0.9999918952815248	WITHOUT_CLASSIFICATION	8.104718475264139E-6	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.9985778426872313	WITHOUT_CLASSIFICATION	0.0014221573127687522	DEFECT
// It's up to the plot which clones up to restore the correct references	WITHOUT_CLASSIFICATION	0.9999975540582523	WITHOUT_CLASSIFICATION	2.445941747574794E-6	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999981748228295	WITHOUT_CLASSIFICATION	1.8251771705490494E-6	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9999927942029587	WITHOUT_CLASSIFICATION	7.205797041167345E-6	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9999927942029587	WITHOUT_CLASSIFICATION	7.205797041167345E-6	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.9999997744137478	WITHOUT_CLASSIFICATION	2.255862523194666E-7	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.9999997744137478	WITHOUT_CLASSIFICATION	2.255862523194666E-7	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999993919119472	WITHOUT_CLASSIFICATION	6.080880528295876E-7	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9999990190649001	WITHOUT_CLASSIFICATION	9.809350999178546E-7	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9999958898872174	WITHOUT_CLASSIFICATION	4.110112782563098E-6	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999997448949725	WITHOUT_CLASSIFICATION	2.551050275545969E-7	DEFECT
//negative values not allowed	WITHOUT_CLASSIFICATION	0.9999556236316726	WITHOUT_CLASSIFICATION	4.437636832748804E-5	DEFECT
// no plot, no data.	WITHOUT_CLASSIFICATION	0.9999967132453363	WITHOUT_CLASSIFICATION	3.2867546637548893E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999967632486879	WITHOUT_CLASSIFICATION	3.236751312144516E-6	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9999990190649001	WITHOUT_CLASSIFICATION	9.809350999178546E-7	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9999958898872174	WITHOUT_CLASSIFICATION	4.110112782563098E-6	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999997448949725	WITHOUT_CLASSIFICATION	2.551050275545969E-7	DEFECT
// baseCreateEntities;	WITHOUT_CLASSIFICATION	0.999994715690978	WITHOUT_CLASSIFICATION	5.284309022084453E-6	DEFECT
// add space for the outer tick labels, if any...	WITHOUT_CLASSIFICATION	0.9999997533387089	WITHOUT_CLASSIFICATION	2.466612910325973E-7	DEFECT
// draw minor tick marks	WITHOUT_CLASSIFICATION	0.9999929361675559	WITHOUT_CLASSIFICATION	7.063832444206398E-6	DEFECT
// work out the initial gap	WITHOUT_CLASSIFICATION	0.9999941147331922	WITHOUT_CLASSIFICATION	5.885266807811176E-6	DEFECT
// this is the last period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.9999662433174844	WITHOUT_CLASSIFICATION	3.3756682515661426E-5	DEFECT
// this is the first period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.9999718055273382	WITHOUT_CLASSIFICATION	2.8194472661699746E-5	DEFECT
// work out the trailing gap	WITHOUT_CLASSIFICATION	0.9999919794920561	WITHOUT_CLASSIFICATION	8.02050794393993E-6	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999914629998512	WITHOUT_CLASSIFICATION	8.537000148787481E-6	DEFECT
// need to work out the space used by the tick labels... // so we can update the cursor...	WITHOUT_CLASSIFICATION	0.9999986334690771	WITHOUT_CLASSIFICATION	1.3665309227956154E-6	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9999967512746423	WITHOUT_CLASSIFICATION	3.248725357652193E-6	DEFECT
// if autoRange is true, then the current range is irrelevant	WITHOUT_CLASSIFICATION	0.9999936450534159	WITHOUT_CLASSIFICATION	6.354946584134417E-6	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.9999332733930029	WITHOUT_CLASSIFICATION	6.672660699705974E-5	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.9999332733930029	WITHOUT_CLASSIFICATION	6.672660699705974E-5	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.9999939362317533	WITHOUT_CLASSIFICATION	6.063768246765946E-6	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.9999939362317533	WITHOUT_CLASSIFICATION	6.063768246765946E-6	DEFECT
//return value; negate if original value was negative:	WITHOUT_CLASSIFICATION	0.9999965078084553	WITHOUT_CLASSIFICATION	3.492191544609315E-6	DEFECT
//invert adjustLog10	WITHOUT_CLASSIFICATION	0.9999921538833817	WITHOUT_CLASSIFICATION	7.84611661836102E-6	DEFECT
//calculate floor using negative value:	WITHOUT_CLASSIFICATION	0.9999399058031704	WITHOUT_CLASSIFICATION	6.0094196829514856E-5	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.999979214332485	WITHOUT_CLASSIFICATION	2.0785667515034094E-5	DEFECT
//negative values are allowed	WITHOUT_CLASSIFICATION	0.9999879932101435	WITHOUT_CLASSIFICATION	1.2006789856502752E-5	DEFECT
//calculate ceil using negative value:	WITHOUT_CLASSIFICATION	0.9998823217132189	WITHOUT_CLASSIFICATION	1.1767828678115959E-4	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999977565848942	WITHOUT_CLASSIFICATION	2.2434151058076587E-6	DEFECT
// legendTextPaint	WITHOUT_CLASSIFICATION	0.9999969502930153	WITHOUT_CLASSIFICATION	3.0497069847166603E-6	DEFECT
//setup for "1e#"-style tick labels or regular // numeric tick labels, depending on flag:	WITHOUT_CLASSIFICATION	0.999998661173057	WITHOUT_CLASSIFICATION	1.3388269428789673E-6	DEFECT
// if < 10 then //increase so 0 translates to 0	WITHOUT_CLASSIFICATION	0.9999989935050994	WITHOUT_CLASSIFICATION	1.0064949005899914E-6	DEFECT
//negative values are allowed //parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9998292245103725	WITHOUT_CLASSIFICATION	1.7077548962753724E-4	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9999495091510545	WITHOUT_CLASSIFICATION	5.049084894550819E-5	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9999962674569601	WITHOUT_CLASSIFICATION	3.7325430399408696E-6	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9999962674569601	WITHOUT_CLASSIFICATION	3.7325430399408696E-6	DEFECT
//negative values not allowed //parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9998752843752493	WITHOUT_CLASSIFICATION	1.247156247506648E-4	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9999928008837515	WITHOUT_CLASSIFICATION	7.19911624848174E-6	DEFECT
//parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999621433148127	WITHOUT_CLASSIFICATION	3.785668518730187E-5	DEFECT
//parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999642410716096	WITHOUT_CLASSIFICATION	3.575892839035363E-5	DEFECT
//no real data present	WITHOUT_CLASSIFICATION	0.9999988369813678	WITHOUT_CLASSIFICATION	1.1630186321652057E-6	DEFECT
//get lower bound value	WITHOUT_CLASSIFICATION	0.99999453915439	WITHOUT_CLASSIFICATION	5.46084561012743E-6	DEFECT
//actual data is present //get lower bound value	WITHOUT_CLASSIFICATION	0.9999993076491795	WITHOUT_CLASSIFICATION	6.9235082034874E-7	DEFECT
//strict flag set, allow-negatives not set and values <= 0	WITHOUT_CLASSIFICATION	0.9999886747307777	WITHOUT_CLASSIFICATION	1.1325269222339774E-5	DEFECT
//apply lower margin by decreasing lower bound:	WITHOUT_CLASSIFICATION	0.999998109743995	WITHOUT_CLASSIFICATION	1.8902560051022709E-6	DEFECT
//lower bound and margin OK; get log10 of lower bound	WITHOUT_CLASSIFICATION	0.9999972664526281	WITHOUT_CLASSIFICATION	2.733547371869905E-6	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.9999936904555358	WITHOUT_CLASSIFICATION	6.3095444641834375E-6	DEFECT
//need to account for case where upper==0.0	WITHOUT_CLASSIFICATION	0.9999951532758793	WITHOUT_CLASSIFICATION	4.846724120637476E-6	DEFECT
//setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9999983246693465	WITHOUT_CLASSIFICATION	1.6753306535377016E-6	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.9999910953727512	WITHOUT_CLASSIFICATION	8.904627248830274E-6	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.9999938143609857	WITHOUT_CLASSIFICATION	6.185639014312668E-6	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.999999210957539	WITHOUT_CLASSIFICATION	7.890424611100193E-7	DEFECT
//for each power of 10 value; create ten ticks	WITHOUT_CLASSIFICATION	0.999999266933937	WITHOUT_CLASSIFICATION	7.330660629685801E-7	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.9999987012585715	WITHOUT_CLASSIFICATION	1.2987414285210437E-6	DEFECT
//small log values in use; create numeric value for tick	WITHOUT_CLASSIFICATION	0.9999921619355508	WITHOUT_CLASSIFICATION	7.83806444922898E-6	DEFECT
//create tick label (force use of fmt obj):	WITHOUT_CLASSIFICATION	0.9999955158518673	WITHOUT_CLASSIFICATION	4.484148132740932E-6	DEFECT
//no tick label to be shown	WITHOUT_CLASSIFICATION	0.9999860308765942	WITHOUT_CLASSIFICATION	1.396912340573215E-5	DEFECT
//create tick label:	WITHOUT_CLASSIFICATION	0.9999855704408522	WITHOUT_CLASSIFICATION	1.4429559147741255E-5	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.9999910953727512	WITHOUT_CLASSIFICATION	8.904627248830274E-6	DEFECT
//if autorange still below minimum then adjust by 1% // (can be needed when minRange is very small):	WITHOUT_CLASSIFICATION	0.9999706589364246	WITHOUT_CLASSIFICATION	2.9341063575408836E-5	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.9999938143609857	WITHOUT_CLASSIFICATION	6.185639014312668E-6	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999989832662619	WITHOUT_CLASSIFICATION	1.016733738073529E-6	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999992454391758	WITHOUT_CLASSIFICATION	7.545608242005609E-7	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.999999210957539	WITHOUT_CLASSIFICATION	7.890424611100193E-7	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.9999987012585715	WITHOUT_CLASSIFICATION	1.2987414285210437E-6	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.999997560953095	WITHOUT_CLASSIFICATION	2.4390469050520553E-6	DEFECT
//showing "1e#"-style ticks or negative exponent // generating tick value between 0 & 1; show fewer	WITHOUT_CLASSIFICATION	0.9999974300854313	WITHOUT_CLASSIFICATION	2.569914568702225E-6	DEFECT
//tick value not between 0 & 1 //show tick label if it's the first or last in // the set, or if it's 1-5; beyond that show // fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999985400561403	WITHOUT_CLASSIFICATION	1.4599438596956815E-6	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then //decrement to do 1.0 tick now //calculate power-of-ten value for tick:	WITHOUT_CLASSIFICATION	0.999998276561265	WITHOUT_CLASSIFICATION	1.723438734992593E-6	DEFECT
// did not do zero tick last iteration	WITHOUT_CLASSIFICATION	0.9999852884067638	WITHOUT_CLASSIFICATION	1.4711593236106765E-5	DEFECT
//tick value is 1.0 and 0.0 is within data range //set tick value to zero //indicate zero tick	WITHOUT_CLASSIFICATION	0.9999930711050465	WITHOUT_CLASSIFICATION	6.928894953514983E-6	DEFECT
// if past highest data value then exit // method	WITHOUT_CLASSIFICATION	0.9999995190355698	WITHOUT_CLASSIFICATION	4.809644302114473E-7	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.9999853084404102	WITHOUT_CLASSIFICATION	1.4691559589760579E-5	DEFECT
//for each tick with a label to be displayed	WITHOUT_CLASSIFICATION	0.9999991316758919	WITHOUT_CLASSIFICATION	8.683241080056092E-7	DEFECT
//small log values in use	WITHOUT_CLASSIFICATION	0.9999875187838188	WITHOUT_CLASSIFICATION	1.2481216181122318E-5	DEFECT
//first tick of group; create label text	WITHOUT_CLASSIFICATION	0.9999991836572689	WITHOUT_CLASSIFICATION	8.163427311639861E-7	DEFECT
//not "log10"-type label	WITHOUT_CLASSIFICATION	0.9999821447703926	WITHOUT_CLASSIFICATION	1.7855229607410573E-5	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999989832662619	WITHOUT_CLASSIFICATION	1.016733738073529E-6	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.999997560953095	WITHOUT_CLASSIFICATION	2.4390469050520553E-6	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.9999853084404102	WITHOUT_CLASSIFICATION	1.4691559589760579E-5	DEFECT
// ITEM_LABEL_PAINT	WITHOUT_CLASSIFICATION	0.9999310716875439	WITHOUT_CLASSIFICATION	6.892831245609466E-5	DEFECT
//if flag then //create "log10"-type label	WITHOUT_CLASSIFICATION	0.9999982714845189	WITHOUT_CLASSIFICATION	1.7285154811413687E-6	DEFECT
//if flag then //create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9999967379019338	WITHOUT_CLASSIFICATION	3.2620980662135345E-6	DEFECT
//not "1e#"-type label // if positive exponent then // make integer	WITHOUT_CLASSIFICATION	0.999995342122128	WITHOUT_CLASSIFICATION	4.657877872035058E-6	DEFECT
//negative exponent; create fractional value //set exact number of fractional digits to // be shown:	WITHOUT_CLASSIFICATION	0.9999975369661871	WITHOUT_CLASSIFICATION	2.46303381297594E-6	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then	WITHOUT_CLASSIFICATION	0.9999993598885429	WITHOUT_CLASSIFICATION	6.40111457106477E-7	DEFECT
//decrement to do 1.0 tick now	WITHOUT_CLASSIFICATION	0.9999838169376156	WITHOUT_CLASSIFICATION	1.618306238439184E-5	DEFECT
//first tick of group // did not do zero tick last // iteration	WITHOUT_CLASSIFICATION	0.9999930446313774	WITHOUT_CLASSIFICATION	6.955368622681556E-6	DEFECT
// not first or last tick on graph and value // is 1.0 //change value to 0.0 //indicate zero tick //create label for tick	WITHOUT_CLASSIFICATION	0.9999982418004525	WITHOUT_CLASSIFICATION	1.758199547463583E-6	DEFECT
//first or last tick on graph or value is 1.0 //create label for tick:	WITHOUT_CLASSIFICATION	0.9999960172310604	WITHOUT_CLASSIFICATION	3.982768939659167E-6	DEFECT
//create "log10"-type label	WITHOUT_CLASSIFICATION	0.9999956067618094	WITHOUT_CLASSIFICATION	4.393238190510023E-6	DEFECT
//create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9999900782374663	WITHOUT_CLASSIFICATION	9.921762533702607E-6	DEFECT
// did zero tick last iteration //no label //clear flag	WITHOUT_CLASSIFICATION	0.9999957582662572	WITHOUT_CLASSIFICATION	4.241733742824288E-6	DEFECT
// not first tick of group //no label //make sure flag cleared	WITHOUT_CLASSIFICATION	0.9999989346769115	WITHOUT_CLASSIFICATION	1.0653230885457E-6	DEFECT
//if past highest data value then exit method	WITHOUT_CLASSIFICATION	0.9999996107469314	WITHOUT_CLASSIFICATION	3.8925306851358676E-7	DEFECT
//create tick object and add to list:	WITHOUT_CLASSIFICATION	0.9999922756541058	WITHOUT_CLASSIFICATION	7.724345894205362E-6	DEFECT
//using exponents or force-formatter flag is set // (convert 'E' to lower-case 'e'):	WITHOUT_CLASSIFICATION	0.9999907047125918	WITHOUT_CLASSIFICATION	9.295287408138728E-6	DEFECT
// populate deprecated fields	WITHOUT_CLASSIFICATION	0.9999934881336185	WITHOUT_CLASSIFICATION	6.511866381496009E-6	DEFECT
// usually the range will be a DateRange, but if it isn't do a // conversion...	WITHOUT_CLASSIFICATION	0.9997742921156211	WITHOUT_CLASSIFICATION	2.2570788437895444E-4	DEFECT
// check the new minimum date relative to the current maximum date	WITHOUT_CLASSIFICATION	0.9999978473643463	WITHOUT_CLASSIFICATION	2.1526356536059284E-6	DEFECT
// check the new maximum date relative to the current minimum date	WITHOUT_CLASSIFICATION	0.9999978596370163	WITHOUT_CLASSIFICATION	2.140362983711352E-6	DEFECT
// long result = calendar.getTimeInMillis(); // won't work with JDK 1.3	WITHOUT_CLASSIFICATION	0.9980631060380308	WITHOUT_CLASSIFICATION	0.0019368939619690594	DEFECT
// date formatters	WITHOUT_CLASSIFICATION	0.9998941354001929	WITHOUT_CLASSIFICATION	1.0586459980712664E-4	DEFECT
// milliseconds	WITHOUT_CLASSIFICATION	0.9999955347607651	WITHOUT_CLASSIFICATION	4.4652392349594874E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999991045721484	WITHOUT_CLASSIFICATION	8.954278516150253E-7	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999993919119472	WITHOUT_CLASSIFICATION	6.080880528295876E-7	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9999990190649001	WITHOUT_CLASSIFICATION	9.809350999178546E-7	DEFECT
// seconds	WITHOUT_CLASSIFICATION	0.9999976424609335	WITHOUT_CLASSIFICATION	2.3575390665184514E-6	DEFECT
// minutes	WITHOUT_CLASSIFICATION	0.9999968919840982	WITHOUT_CLASSIFICATION	3.108015901721691E-6	DEFECT
// hours	WITHOUT_CLASSIFICATION	0.9999954071190974	WITHOUT_CLASSIFICATION	4.592880902623591E-6	DEFECT
// days	WITHOUT_CLASSIFICATION	0.9999902711739093	WITHOUT_CLASSIFICATION	9.728826090682917E-6	DEFECT
// months	WITHOUT_CLASSIFICATION	0.9999959116880426	WITHOUT_CLASSIFICATION	4.088311957390447E-6	DEFECT
// years	WITHOUT_CLASSIFICATION	0.9999878159591493	WITHOUT_CLASSIFICATION	1.2184040850706648E-5	DEFECT
//Timeline hasn't method getStartTime()	WITHOUT_CLASSIFICATION	0.9999911247697366	WITHOUT_CLASSIFICATION	8.875230263363507E-6	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999985380805664	WITHOUT_CLASSIFICATION	1.4619194336013936E-6	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999950779052954	WITHOUT_CLASSIFICATION	4.92209470460957E-6	DEFECT
// start with a unit that is at least 1/10th of the axis length	WITHOUT_CLASSIFICATION	0.9999989248834776	WITHOUT_CLASSIFICATION	1.0751165223918142E-6	DEFECT
// now extrapolate based on label height and unit height...	WITHOUT_CLASSIFICATION	0.9999997918624438	WITHOUT_CLASSIFICATION	2.0813755614704546E-7	DEFECT
// make final selection...	WITHOUT_CLASSIFICATION	0.9999928183605536	WITHOUT_CLASSIFICATION	7.181639446335137E-6	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.9999994896454508	WITHOUT_CLASSIFICATION	5.103545492539243E-7	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9999950912943684	WITHOUT_CLASSIFICATION	4.908705631607509E-6	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9999950912943684	WITHOUT_CLASSIFICATION	4.908705631607509E-6	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.999998353510066	WITHOUT_CLASSIFICATION	1.6464899338534743E-6	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.999998353510066	WITHOUT_CLASSIFICATION	1.6464899338534743E-6	DEFECT
// even though the axis is not visible, we need to refresh ticks in // case the grid is being drawn...	WITHOUT_CLASSIFICATION	0.9999979839505554	WITHOUT_CLASSIFICATION	2.0160494446061106E-6	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.999998136959935	WITHOUT_CLASSIFICATION	1.863040064995056E-6	DEFECT
// draw the axis label (note that 'state' is passed in *and* // returned)...	WITHOUT_CLASSIFICATION	0.9999995393054314	WITHOUT_CLASSIFICATION	4.6069456859413557E-7	DEFECT
// when zooming to sub-millisecond ranges, it can be the case that // adjEnd == adjStart...and we can't have an axis with zero length // so we apply this instead:	WITHOUT_CLASSIFICATION	0.9999494174614842	WITHOUT_CLASSIFICATION	5.0582538515832734E-5	DEFECT
// 'dateTickUnit' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.9999945246971716	WITHOUT_CLASSIFICATION	5.475302828356515E-6	DEFECT
// 'tickMarkPosition' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.999993720275104	WITHOUT_CLASSIFICATION	6.279724895881253E-6	DEFECT
// if there is no specific font, use the general one...	WITHOUT_CLASSIFICATION	0.9999981307455877	WITHOUT_CLASSIFICATION	1.8692544123605096E-6	DEFECT
// if there is no specific paint, use the general one...	WITHOUT_CLASSIFICATION	0.9999984718928888	WITHOUT_CLASSIFICATION	1.5281071111558063E-6	DEFECT
// find first excluded base segment starting fromDomainValue	WITHOUT_CLASSIFICATION	0.999999738155106	WITHOUT_CLASSIFICATION	2.6184489395753367E-7	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999981748228295	WITHOUT_CLASSIFICATION	1.8251771705490494E-6	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999997448949725	WITHOUT_CLASSIFICATION	2.551050275545969E-7	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9999967512746423	WITHOUT_CLASSIFICATION	3.248725357652193E-6	DEFECT
// nothing required	WITHOUT_CLASSIFICATION	0.9999973838041698	WITHOUT_CLASSIFICATION	2.6161958302536618E-6	DEFECT
// sanity check for data area...	WITHOUT_CLASSIFICATION	0.9999950745918589	WITHOUT_CLASSIFICATION	4.925408141154346E-6	DEFECT
// step down in size until the current size is too small or there are  // no more units	WITHOUT_CLASSIFICATION	0.9999902626829165	WITHOUT_CLASSIFICATION	9.737317083411784E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // predetermined segments sizes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996125841043	WITHOUT_CLASSIFICATION	3.8741589576730867E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // other constants ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999975417932911	WITHOUT_CLASSIFICATION	2.4582067087702513E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // private attributes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999974815367615	WITHOUT_CLASSIFICATION	2.51846323852222E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // static block ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999960244650423	WITHOUT_CLASSIFICATION	3.97553495764048E-6	DEFECT
// make a time zone with no DST for our Calendar calculations	WITHOUT_CLASSIFICATION	0.9998966429885248	WITHOUT_CLASSIFICATION	1.0335701147520469E-4	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.999989701378807	WITHOUT_CLASSIFICATION	1.0298621192849985E-5	DEFECT
//////////////////////////////////////////////////////////////////////////// // constructors and factory methods ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999975006782102	WITHOUT_CLASSIFICATION	2.4993217896825824E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // operations ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999955919543735	WITHOUT_CLASSIFICATION	4.408045626585489E-6	DEFECT
// verify that baseTimeline is compatible with us	WITHOUT_CLASSIFICATION	0.9999834374922012	WITHOUT_CLASSIFICATION	1.656250779871073E-5	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.9999738475306198	WITHOUT_CLASSIFICATION	2.615246938023105E-5	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.9999738475306198	WITHOUT_CLASSIFICATION	2.615246938023105E-5	DEFECT
//return toTimelineValue(dateDomainValue.getTime());	WITHOUT_CLASSIFICATION	0.999996624924584	WITHOUT_CLASSIFICATION	3.3750754161038393E-6	DEFECT
// calculate the result as if no exceptions	WITHOUT_CLASSIFICATION	0.9999938512373368	WITHOUT_CLASSIFICATION	6.148762663201065E-6	DEFECT
// adjust result for any exceptions in the result calculated	WITHOUT_CLASSIFICATION	0.9999901271984807	WITHOUT_CLASSIFICATION	9.872801519356938E-6	DEFECT
// skip all whole exception segments in the range	WITHOUT_CLASSIFICATION	0.9999973754892498	WITHOUT_CLASSIFICATION	2.6245107500758974E-6	DEFECT
// skip exception or excluded segments we may fall on	WITHOUT_CLASSIFICATION	0.9999961351271583	WITHOUT_CLASSIFICATION	3.864872841615103E-6	DEFECT
//addException(exceptionDate.getTime());	WITHOUT_CLASSIFICATION	0.999769975778209	WITHOUT_CLASSIFICATION	2.3002422179090441E-4	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.9999961788343753	WITHOUT_CLASSIFICATION	3.821165624621463E-6	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.9999883494394366	WITHOUT_CLASSIFICATION	1.1650560563450552E-5	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.9999961788343753	WITHOUT_CLASSIFICATION	3.821165624621463E-6	DEFECT
// move forward exceptionSegmentCount segments skipping // excluded segments	WITHOUT_CLASSIFICATION	0.9999987439271446	WITHOUT_CLASSIFICATION	1.256072855417791E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999890117484558	WITHOUT_CLASSIFICATION	1.0988251544190514E-5	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.9999883494394366	WITHOUT_CLASSIFICATION	1.1650560563450552E-5	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.999990405600586	WITHOUT_CLASSIFICATION	9.594399413939255E-6	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999902220264472	WITHOUT_CLASSIFICATION	9.777973552864103E-6	DEFECT
// cycle over all the base segments groups in the range	WITHOUT_CLASSIFICATION	0.9999999025338582	WITHOUT_CLASSIFICATION	9.746614181496137E-8	DEFECT
// cycle through all the segments contained in the base exclusion // area	WITHOUT_CLASSIFICATION	0.999999637959546	WITHOUT_CLASSIFICATION	3.6204045399481434E-7	DEFECT
// go to next base segment group	WITHOUT_CLASSIFICATION	0.9999996322782437	WITHOUT_CLASSIFICATION	3.6772175634906453E-7	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.9999096795669482	WITHOUT_CLASSIFICATION	9.032043305188923E-5	DEFECT
// Segment fromSegment = getSegment(from); // fromSegment.inc(); // Segment toSegment = getSegment(to); // toSegment.dec();	WITHOUT_CLASSIFICATION	0.9999972411334906	WITHOUT_CLASSIFICATION	2.7588665093886567E-6	DEFECT
// long start = Math.max( //     fromSegment.getSegmentStart(), this.segmentStart // ); // long end = Math.min(toSegment.getSegmentEnd(), this.segmentEnd);	WITHOUT_CLASSIFICATION	0.9999928584799487	WITHOUT_CLASSIFICATION	7.141520051311032E-6	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9999986243092099	WITHOUT_CLASSIFICATION	1.3756907900568345E-6	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999959611377819	WITHOUT_CLASSIFICATION	4.03886221805811E-6	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999959611377819	WITHOUT_CLASSIFICATION	4.03886221805811E-6	DEFECT
// If tick overlap when cycling, update last tick too	WITHOUT_CLASSIFICATION	0.9999998820194035	WITHOUT_CLASSIFICATION	1.1798059660009881E-7	DEFECT
// continue and separate the labels only if necessary	WITHOUT_CLASSIFICATION	0.9999999054596782	WITHOUT_CLASSIFICATION	9.454032170379844E-8	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9995955173850672	WITHOUT_CLASSIFICATION	4.0448261493278276E-4	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9995955173850672	WITHOUT_CLASSIFICATION	4.0448261493278276E-4	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9995955173850672	WITHOUT_CLASSIFICATION	4.0448261493278276E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998763796951957	WITHOUT_CLASSIFICATION	1.2362030480435977E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998763796951957	WITHOUT_CLASSIFICATION	1.2362030480435977E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998763796951957	WITHOUT_CLASSIFICATION	1.2362030480435977E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999592620115166	WITHOUT_CLASSIFICATION	4.0737988483394746E-5	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999592620115166	WITHOUT_CLASSIFICATION	4.0737988483394746E-5	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999592620115166	WITHOUT_CLASSIFICATION	4.0737988483394746E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.999978768770479	WITHOUT_CLASSIFICATION	2.123122952104697E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.999978768770479	WITHOUT_CLASSIFICATION	2.123122952104697E-5	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999967632486879	WITHOUT_CLASSIFICATION	3.236751312144516E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999967632486879	WITHOUT_CLASSIFICATION	3.236751312144516E-6	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.999991728257767	WITHOUT_CLASSIFICATION	8.27174223284803E-6	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999977565848942	WITHOUT_CLASSIFICATION	2.2434151058076587E-6	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999977565848942	WITHOUT_CLASSIFICATION	2.2434151058076587E-6	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9999714618947267	WITHOUT_CLASSIFICATION	2.853810527324934E-5	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9999975137148931	WITHOUT_CLASSIFICATION	2.4862851068793072E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999991045721484	WITHOUT_CLASSIFICATION	8.954278516150253E-7	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.999998136959935	WITHOUT_CLASSIFICATION	1.863040064995056E-6	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9995955173850672	WITHOUT_CLASSIFICATION	4.0448261493278276E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998763796951957	WITHOUT_CLASSIFICATION	1.2362030480435977E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998763796951957	WITHOUT_CLASSIFICATION	1.2362030480435977E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999592620115166	WITHOUT_CLASSIFICATION	4.0737988483394746E-5	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999592620115166	WITHOUT_CLASSIFICATION	4.0737988483394746E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.999978768770479	WITHOUT_CLASSIFICATION	2.123122952104697E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.999978768770479	WITHOUT_CLASSIFICATION	2.123122952104697E-5	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999902220264472	WITHOUT_CLASSIFICATION	9.777973552864103E-6	DEFECT
// default make height of plotArea	WITHOUT_CLASSIFICATION	0.9999985952976529	WITHOUT_CLASSIFICATION	1.4047023470936418E-6	DEFECT
// allow fixed thickness	WITHOUT_CLASSIFICATION	0.999955279933873	WITHOUT_CLASSIFICATION	4.4720066127049615E-5	DEFECT
// update, but dont draw tick marks (needed for stepped colors)	WITHOUT_CLASSIFICATION	0.9999976556178516	WITHOUT_CLASSIFICATION	2.3443821484139886E-6	DEFECT
// suppresses compiler warnings	WITHOUT_CLASSIFICATION	0.9999978973969551	WITHOUT_CLASSIFICATION	2.1026030448539655E-6	DEFECT
// setTickValues was missing from ColorPalette v. 0.96 //colorPalette.setTickValues(this.axis.getTicks());	WITHOUT_CLASSIFICATION	0.9999992290984019	WITHOUT_CLASSIFICATION	7.709015982005291E-7	DEFECT
// calculate the adjusted data area taking into account the 3D effect...	WITHOUT_CLASSIFICATION	0.9999652063218637	WITHOUT_CLASSIFICATION	3.479367813636045E-5	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999986572571242	WITHOUT_CLASSIFICATION	1.3427428757591697E-6	DEFECT
// transparent	WITHOUT_CLASSIFICATION	0.9999951382890182	WITHOUT_CLASSIFICATION	4.861710981842812E-6	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9999975668434327	WITHOUT_CLASSIFICATION	2.433156567219984E-6	DEFECT
// ensure that all the symbols are displayed	WITHOUT_CLASSIFICATION	0.9999992813096052	WITHOUT_CLASSIFICATION	7.186903948038904E-7	DEFECT
// this ensure that the grid bands will be displayed correctly.	WITHOUT_CLASSIFICATION	0.9999262278254023	WITHOUT_CLASSIFICATION	7.377217459770793E-5	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.9999994304698899	WITHOUT_CLASSIFICATION	5.695301101827902E-7	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.9999994304698899	WITHOUT_CLASSIFICATION	5.695301101827902E-7	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.9998170780352137	WITHOUT_CLASSIFICATION	1.8292196478638696E-4	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.9998170780352137	WITHOUT_CLASSIFICATION	1.8292196478638696E-4	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.9999978807833232	WITHOUT_CLASSIFICATION	2.119216676886582E-6	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.9999978807833232	WITHOUT_CLASSIFICATION	2.119216676886582E-6	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999902220264472	WITHOUT_CLASSIFICATION	9.777973552864103E-6	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9999714618947267	WITHOUT_CLASSIFICATION	2.853810527324934E-5	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9999975137148931	WITHOUT_CLASSIFICATION	2.4862851068793072E-6	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.9999995949071611	WITHOUT_CLASSIFICATION	4.0509283900311053E-7	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999981748228295	WITHOUT_CLASSIFICATION	1.8251771705490494E-6	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999993919119472	WITHOUT_CLASSIFICATION	6.080880528295876E-7	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9999990190649001	WITHOUT_CLASSIFICATION	9.809350999178546E-7	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999985380805664	WITHOUT_CLASSIFICATION	1.4619194336013936E-6	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999985380805664	WITHOUT_CLASSIFICATION	1.4619194336013936E-6	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999950779052954	WITHOUT_CLASSIFICATION	4.92209470460957E-6	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999950779052954	WITHOUT_CLASSIFICATION	4.92209470460957E-6	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999952851430061	WITHOUT_CLASSIFICATION	4.714856993923363E-6	DEFECT
// must be top or bottom	WITHOUT_CLASSIFICATION	0.9999628439906535	WITHOUT_CLASSIFICATION	3.7156009346454107E-5	DEFECT
// catches null also	WITHOUT_CLASSIFICATION	0.9999942977921008	WITHOUT_CLASSIFICATION	5.702207899183753E-6	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999960340721554	WITHOUT_CLASSIFICATION	3.965927844548937E-6	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999960340721554	WITHOUT_CLASSIFICATION	3.965927844548937E-6	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9999942476986774	WITHOUT_CLASSIFICATION	5.752301322639051E-6	DEFECT
// place in this row (truncated) anyway	WITHOUT_CLASSIFICATION	0.9999971535955656	WITHOUT_CLASSIFICATION	2.8464044344583953E-6	DEFECT
// start new row	WITHOUT_CLASSIFICATION	0.9999975457797594	WITHOUT_CLASSIFICATION	2.454220240541566E-6	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9999764214497493	WITHOUT_CLASSIFICATION	2.357855025065566E-5	DEFECT
// can safely ignore	WITHOUT_CLASSIFICATION	0.9999897233094416	WITHOUT_CLASSIFICATION	1.0276690558357241E-5	DEFECT
// find optimum height, then map to range	WITHOUT_CLASSIFICATION	0.9999982533326962	WITHOUT_CLASSIFICATION	1.7466673037956191E-6	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9999927466885139	WITHOUT_CLASSIFICATION	7.253311486092628E-6	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9999927466885139	WITHOUT_CLASSIFICATION	7.253311486092628E-6	DEFECT
// find optimum height and map to range	WITHOUT_CLASSIFICATION	0.9999985968335028	WITHOUT_CLASSIFICATION	1.4031664971647588E-6	DEFECT
// find optimum width and map to range	WITHOUT_CLASSIFICATION	0.999997548968978	WITHOUT_CLASSIFICATION	2.4510310220085305E-6	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999952851430061	WITHOUT_CLASSIFICATION	4.714856993923363E-6	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999952851430061	WITHOUT_CLASSIFICATION	4.714856993923363E-6	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999956501373323	WITHOUT_CLASSIFICATION	4.349862667762172E-6	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999960340721554	WITHOUT_CLASSIFICATION	3.965927844548937E-6	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.999998108648191	WITHOUT_CLASSIFICATION	1.8913518088779777E-6	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.9999982253889553	WITHOUT_CLASSIFICATION	1.7746110446728111E-6	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.9999982253889553	WITHOUT_CLASSIFICATION	1.7746110446728111E-6	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9999942476986774	WITHOUT_CLASSIFICATION	5.752301322639051E-6	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9999764214497493	WITHOUT_CLASSIFICATION	2.357855025065566E-5	DEFECT
// this default implementation will just fill the available // border space with a single color	WITHOUT_CLASSIFICATION	0.9999946677204271	WITHOUT_CLASSIFICATION	5.3322795728891624E-6	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999949631234512	WITHOUT_CLASSIFICATION	5.0368765488713666E-6	DEFECT
// fixed width	WITHOUT_CLASSIFICATION	0.999844913998966	WITHOUT_CLASSIFICATION	1.5508600103405354E-4	DEFECT
// width is OK, but height must be constrained	WITHOUT_CLASSIFICATION	0.9998693569911044	WITHOUT_CLASSIFICATION	1.3064300889569796E-4	DEFECT
// height is OK, but width must be constrained	WITHOUT_CLASSIFICATION	0.9996975286074836	WITHOUT_CLASSIFICATION	3.0247139251636225E-4	DEFECT
// nothing to clear	WITHOUT_CLASSIFICATION	0.9999975398710266	WITHOUT_CLASSIFICATION	2.4601289734889874E-6	DEFECT
// if the area has zero height or width, we shouldn't draw anything	WITHOUT_CLASSIFICATION	0.9999953489569396	WITHOUT_CLASSIFICATION	4.651043060339956E-6	DEFECT
// since the flow layout is relatively straightforward, no information // needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999951020395133	WITHOUT_CLASSIFICATION	4.89796048673225E-6	DEFECT
// place in this column (truncated) anyway	WITHOUT_CLASSIFICATION	0.9999965634129404	WITHOUT_CLASSIFICATION	3.4365870596397386E-6	DEFECT
// start new column	WITHOUT_CLASSIFICATION	0.9999981572079835	WITHOUT_CLASSIFICATION	1.8427920165655012E-6	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999996903095378	WITHOUT_CLASSIFICATION	3.0969046223711464E-7	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9999920696917067	WITHOUT_CLASSIFICATION	7.930308293264383E-6	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.9999921126962221	WITHOUT_CLASSIFICATION	7.887303777835456E-6	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999986214443679	WITHOUT_CLASSIFICATION	1.3785556320037467E-6	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.999996194410078	WITHOUT_CLASSIFICATION	3.805589921894179E-6	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999990953940208	WITHOUT_CLASSIFICATION	9.046059792049092E-7	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9999984157759403	WITHOUT_CLASSIFICATION	1.584224059726978E-6	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.9999997882060457	WITHOUT_CLASSIFICATION	2.1179395426633677E-7	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.999999542870934	WITHOUT_CLASSIFICATION	4.571290660984044E-7	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9999996356785498	WITHOUT_CLASSIFICATION	3.6432145022031257E-7	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.999999349107845	WITHOUT_CLASSIFICATION	6.508921549073342E-7	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9999998979689221	WITHOUT_CLASSIFICATION	1.0203107793960785E-7	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999998511838284	WITHOUT_CLASSIFICATION	1.4881617155814274E-7	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999998511838284	WITHOUT_CLASSIFICATION	1.4881617155814274E-7	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999998511838284	WITHOUT_CLASSIFICATION	1.4881617155814274E-7	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9999546653453696	WITHOUT_CLASSIFICATION	4.533465463032995E-5	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9999546653453696	WITHOUT_CLASSIFICATION	4.533465463032995E-5	DEFECT
//    /** Insets text field. */ //    private InsetsTextField tickLabelInsetsTextField; // //    /** Label insets text field. */ //    private InsetsTextField labelInsetsTextField;	WITHOUT_CLASSIFICATION	0.9999987971353409	WITHOUT_CLASSIFICATION	1.2028646591003924E-6	DEFECT
// figure out what type of axis we have and instantiate the // appropriate panel	WITHOUT_CLASSIFICATION	0.9999927949159593	WITHOUT_CLASSIFICATION	7.205084040758397E-6	DEFECT
// Insets values	WITHOUT_CLASSIFICATION	0.9999980395136853	WITHOUT_CLASSIFICATION	1.9604863147242456E-6	DEFECT
// axis.setTickMarkStroke(getTickMarkStroke());	WITHOUT_CLASSIFICATION	0.9999919389357967	WITHOUT_CLASSIFICATION	8.061064203244563E-6	DEFECT
// create a panel for the settings...	WITHOUT_CLASSIFICATION	0.9999997877290829	WITHOUT_CLASSIFICATION	2.1227091692761198E-7	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9998301327822867	WITHOUT_CLASSIFICATION	1.6986721771331575E-4	DEFECT
//      end fix by rfuller	WITHOUT_CLASSIFICATION	0.9990685644998506	WITHOUT_CLASSIFICATION	9.314355001493537E-4	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.9998102800964306	WITHOUT_CLASSIFICATION	1.8971990356938566E-4	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.9999989574946889	WITHOUT_CLASSIFICATION	1.042505311059415E-6	DEFECT
// then the axis properties...	WITHOUT_CLASSIFICATION	0.9999982152310721	WITHOUT_CLASSIFICATION	1.7847689278192444E-6	DEFECT
// pass to super-class for handling	WITHOUT_CLASSIFICATION	0.9999996468984059	WITHOUT_CLASSIFICATION	3.531015941569497E-7	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.999986662156841	WITHOUT_CLASSIFICATION	1.3337843159124311E-5	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.999986662156841	WITHOUT_CLASSIFICATION	1.3337843159124311E-5	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999947856288477	WITHOUT_CLASSIFICATION	5.2143711523231346E-6	DEFECT
//      fix by rfuller	WITHOUT_CLASSIFICATION	0.9987262567932674	WITHOUT_CLASSIFICATION	0.0012737432067325956	DEFECT
// populate the deprecated fields	WITHOUT_CLASSIFICATION	0.9999976207036807	WITHOUT_CLASSIFICATION	2.3792963192960356E-6	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.999981186827518	WITHOUT_CLASSIFICATION	1.8813172481941396E-5	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.999981186827518	WITHOUT_CLASSIFICATION	1.8813172481941396E-5	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.999981186827518	WITHOUT_CLASSIFICATION	1.8813172481941396E-5	DEFECT
// update the deprecated field	WITHOUT_CLASSIFICATION	0.9999962659028496	WITHOUT_CLASSIFICATION	3.7340971504292386E-6	DEFECT
// update the deprecated fields	WITHOUT_CLASSIFICATION	0.9999978995351185	WITHOUT_CLASSIFICATION	2.100464881451404E-6	DEFECT
// check the deprecated fields	WITHOUT_CLASSIFICATION	0.9999965991875532	WITHOUT_CLASSIFICATION	3.400812446826965E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999976226454868	WITHOUT_CLASSIFICATION	2.377354513257764E-6	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.999975621467597	WITHOUT_CLASSIFICATION	2.4378532403017295E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999875140778858	WITHOUT_CLASSIFICATION	1.2485922114345557E-5	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.9999914557851397	WITHOUT_CLASSIFICATION	8.54421486024923E-6	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9999920696917067	WITHOUT_CLASSIFICATION	7.930308293264383E-6	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.9999921126962221	WITHOUT_CLASSIFICATION	7.887303777835456E-6	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.9999997882060457	WITHOUT_CLASSIFICATION	2.1179395426633677E-7	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.999999542870934	WITHOUT_CLASSIFICATION	4.571290660984044E-7	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9999996356785498	WITHOUT_CLASSIFICATION	3.6432145022031257E-7	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.999999349107845	WITHOUT_CLASSIFICATION	6.508921549073342E-7	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9999998979689221	WITHOUT_CLASSIFICATION	1.0203107793960785E-7	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.999981186827518	WITHOUT_CLASSIFICATION	1.8813172481941396E-5	DEFECT
//dmo added //dmo added	WITHOUT_CLASSIFICATION	0.9998288945728935	WITHOUT_CLASSIFICATION	1.7110542710648417E-4	DEFECT
// if there is a tool tip, we expect it to generate the title and // alt values, so we only add an empty alt if there is no tooltip	WITHOUT_CLASSIFICATION	0.9999728417435705	WITHOUT_CLASSIFICATION	2.7158256429452752E-5	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999955216444305	WITHOUT_CLASSIFICATION	4.478355569567243E-6	DEFECT
// FIXME	WITHOUT_CLASSIFICATION	0.8904299848711017	WITHOUT_CLASSIFICATION	0.10957001512889834	DEFECT
// this is a paint we don't recognise	WITHOUT_CLASSIFICATION	0.9997319064851091	WITHOUT_CLASSIFICATION	2.6809351489090325E-4	DEFECT
// null is handled fine here...	WITHOUT_CLASSIFICATION	0.9999779362689859	WITHOUT_CLASSIFICATION	2.206373101415331E-5	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9998196013578359	WITHOUT_CLASSIFICATION	1.803986421640524E-4	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.9999960207338731	WITHOUT_CLASSIFICATION	3.979266126956688E-6	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999998156597038	WITHOUT_CLASSIFICATION	1.8434029634134336E-7	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999998156597038	WITHOUT_CLASSIFICATION	1.8434029634134336E-7	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.999999733675721	WITHOUT_CLASSIFICATION	2.663242789416929E-7	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.999999733675721	WITHOUT_CLASSIFICATION	2.663242789416929E-7	DEFECT
// set the default stroke for all series	WITHOUT_CLASSIFICATION	0.9999989510317043	WITHOUT_CLASSIFICATION	1.0489682956676328E-6	DEFECT
//this.chartPanel.isDomainZoomable()) {	WITHOUT_CLASSIFICATION	0.9999965923168238	WITHOUT_CLASSIFICATION	3.407683176183758E-6	DEFECT
//this.chartPanel.isRangeZoomable()) {	WITHOUT_CLASSIFICATION	0.9999978209324011	WITHOUT_CLASSIFICATION	2.1790675989321233E-6	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999865462488138	WITHOUT_CLASSIFICATION	1.3453751186276005E-5	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999865462488138	WITHOUT_CLASSIFICATION	1.3453751186276005E-5	DEFECT
// does nothing unless overridden        	WITHOUT_CLASSIFICATION	0.9999844199437823	WITHOUT_CLASSIFICATION	1.5580056217729754E-5	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999992682444775	WITHOUT_CLASSIFICATION	7.317555226132284E-7	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999981270286586	WITHOUT_CLASSIFICATION	1.8729713412827606E-6	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999986214443679	WITHOUT_CLASSIFICATION	1.3785556320037467E-6	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999865462488138	WITHOUT_CLASSIFICATION	1.3453751186276005E-5	DEFECT
// special case - if the underlying rectangle uses ints we // need to create one that uses doubles	WITHOUT_CLASSIFICATION	0.9999999456899191	WITHOUT_CLASSIFICATION	5.431008080969216E-8	DEFECT
// title // x-axis label // y-axis label	WITHOUT_CLASSIFICATION	0.9999917152608718	WITHOUT_CLASSIFICATION	8.284739128208518E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999875140778858	WITHOUT_CLASSIFICATION	1.2485922114345557E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999875140778858	WITHOUT_CLASSIFICATION	1.2485922114345557E-5	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.99999656623684	WITHOUT_CLASSIFICATION	3.433763159974773E-6	DEFECT
// the actual panning occurs later in the mouseDragged() method	WITHOUT_CLASSIFICATION	0.9999996793525646	WITHOUT_CLASSIFICATION	3.206474352993627E-7	DEFECT
//handle panning if we have a start point else unregister	WITHOUT_CLASSIFICATION	0.9999992339234369	WITHOUT_CLASSIFICATION	7.660765630375512E-7	DEFECT
//if we have been panning reset the cursor //unregister in any case	WITHOUT_CLASSIFICATION	0.9999865434764319	WITHOUT_CLASSIFICATION	1.3456523568148568E-5	DEFECT
// the URL text should already have been escaped by the URL generator	WITHOUT_CLASSIFICATION	0.999998252929994	WITHOUT_CLASSIFICATION	1.7470700060735417E-6	DEFECT
// no fields to test	WITHOUT_CLASSIFICATION	0.9999879866580683	WITHOUT_CLASSIFICATION	1.2013341931744061E-5	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9999989163292863	WITHOUT_CLASSIFICATION	1.0836707136599037E-6	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9999989163292863	WITHOUT_CLASSIFICATION	1.0836707136599037E-6	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999788994102269	WITHOUT_CLASSIFICATION	2.110058977306331E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999788994102269	WITHOUT_CLASSIFICATION	2.110058977306331E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999788994102269	WITHOUT_CLASSIFICATION	2.110058977306331E-5	DEFECT
// isArrowAtTop	WITHOUT_CLASSIFICATION	0.9998669833866461	WITHOUT_CLASSIFICATION	1.3301661335391195E-4	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.9999856463851446	WITHOUT_CLASSIFICATION	1.4353614855380991E-5	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.9999856463851446	WITHOUT_CLASSIFICATION	1.4353614855380991E-5	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.9999962726596789	WITHOUT_CLASSIFICATION	3.727340321096086E-6	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.9999962726596789	WITHOUT_CLASSIFICATION	3.727340321096086E-6	DEFECT
/// we have rotation houston, please spin me	WITHOUT_CLASSIFICATION	0.9999989724770726	WITHOUT_CLASSIFICATION	1.0275229273429443E-6	DEFECT
// horizontal	WITHOUT_CLASSIFICATION	0.9999922881469976	WITHOUT_CLASSIFICATION	7.711853002428562E-6	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999994322633677	WITHOUT_CLASSIFICATION	5.677366322028381E-7	DEFECT
// configure the range axis...	WITHOUT_CLASSIFICATION	0.999993923204383	WITHOUT_CLASSIFICATION	6.076795616976243E-6	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9999988096281109	WITHOUT_CLASSIFICATION	1.1903718890026009E-6	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999986496353496	WITHOUT_CLASSIFICATION	1.350364650371368E-6	DEFECT
// we expect the line to be vertical or horizontal // vertical	WITHOUT_CLASSIFICATION	0.9999900197520379	WITHOUT_CLASSIFICATION	9.980247962155997E-6	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.9999986642442703	WITHOUT_CLASSIFICATION	1.3357557297659315E-6	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999858379267457	WITHOUT_CLASSIFICATION	1.416207325442207E-5	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999991596207056	WITHOUT_CLASSIFICATION	8.403792943919479E-7	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999792847493592	WITHOUT_CLASSIFICATION	2.071525064083132E-5	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999998957898951	WITHOUT_CLASSIFICATION	1.0421010480952306E-7	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999955815169266	WITHOUT_CLASSIFICATION	4.4184830733402515E-6	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.9999978503552979	WITHOUT_CLASSIFICATION	2.1496447020189243E-6	DEFECT
// the range axis is deserialized before the subplots, so its value // range is likely to be incorrect...	WITHOUT_CLASSIFICATION	0.9999947912735884	WITHOUT_CLASSIFICATION	5.208726411569667E-6	DEFECT
// default preserves previous // behaviour	WITHOUT_CLASSIFICATION	0.9999992802228114	WITHOUT_CLASSIFICATION	7.197771886856061E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999868615781142	WITHOUT_CLASSIFICATION	1.3138421885812205E-5	DEFECT
// make the link area a square if the pie chart is to be circular... // is circular?	WITHOUT_CLASSIFICATION	0.9999444090950372	WITHOUT_CLASSIFICATION	5.559090496287712E-5	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999992130892863	WITHOUT_CLASSIFICATION	7.869107136307246E-7	DEFECT
// the explode area defines the max circle/ellipse for the exploded pie // sections. // it is defined by shrinking the linkArea by the linkMargin factor.	WITHOUT_CLASSIFICATION	0.999997378107916	WITHOUT_CLASSIFICATION	2.6218920839105215E-6	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999979119860144	WITHOUT_CLASSIFICATION	2.0880139855437075E-6	DEFECT
// the link area defines the dog-leg point for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999993322912131	WITHOUT_CLASSIFICATION	6.677087869496073E-7	DEFECT
// get the data source - return if null;	WITHOUT_CLASSIFICATION	0.9999998011915301	WITHOUT_CLASSIFICATION	1.9880846990017227E-7	DEFECT
// if too any elements	WITHOUT_CLASSIFICATION	0.9999926370710698	WITHOUT_CLASSIFICATION	7.3629289303222265E-6	DEFECT
// get a list of keys...	WITHOUT_CLASSIFICATION	0.9999883152589586	WITHOUT_CLASSIFICATION	1.168474104134933E-5	DEFECT
// do nothing by default.	WITHOUT_CLASSIFICATION	0.9999893202264546	WITHOUT_CLASSIFICATION	1.0679773545423763E-5	DEFECT
//g2.clip(clipArea);	WITHOUT_CLASSIFICATION	0.9999829256043016	WITHOUT_CLASSIFICATION	1.7074395698332617E-5	DEFECT
// if depth is negative don't draw anything	WITHOUT_CLASSIFICATION	0.9999376646301709	WITHOUT_CLASSIFICATION	6.233536982910756E-5	DEFECT
// draw the bottom circle	WITHOUT_CLASSIFICATION	0.9999973173281854	WITHOUT_CLASSIFICATION	2.682671814669692E-6	DEFECT
// draw the height	WITHOUT_CLASSIFICATION	0.9999967345343549	WITHOUT_CLASSIFICATION	3.2654656451938813E-6	DEFECT
// cycle through once drawing only the sides at the back...	WITHOUT_CLASSIFICATION	0.9999998172712221	WITHOUT_CLASSIFICATION	1.8272877790067476E-7	DEFECT
// cycle through again drawing only the sides at the front...	WITHOUT_CLASSIFICATION	0.9999994071835857	WITHOUT_CLASSIFICATION	5.928164143166019E-7	DEFECT
// add a tooltip for the section...	WITHOUT_CLASSIFICATION	0.999999650001465	WITHOUT_CLASSIFICATION	3.4999853512680297E-7	DEFECT
// @mgs: using the method's return value was missing	WITHOUT_CLASSIFICATION	0.9999997826844036	WITHOUT_CLASSIFICATION	2.173155964846883E-7	DEFECT
// for CLOCKWISE charts, the extent will be negative...	WITHOUT_CLASSIFICATION	0.9999869633887231	WITHOUT_CLASSIFICATION	1.3036611276891091E-5	DEFECT
// start at front	WITHOUT_CLASSIFICATION	0.9999947819102132	WITHOUT_CLASSIFICATION	5.218089786823176E-6	DEFECT
// the segment starts at the front, and wraps all // the way around // the back and finishes at the front again	WITHOUT_CLASSIFICATION	0.9999996809727757	WITHOUT_CLASSIFICATION	3.1902722426963754E-7	DEFECT
// starts at the front, finishes at the back (going // around the left side)	WITHOUT_CLASSIFICATION	0.9999997430414512	WITHOUT_CLASSIFICATION	2.569585487076525E-7	DEFECT
// the segment starts at the back (still extending // CLOCKWISE)	WITHOUT_CLASSIFICATION	0.9999978785071522	WITHOUT_CLASSIFICATION	2.1214928478649366E-6	DEFECT
// whole segment stays at the back	WITHOUT_CLASSIFICATION	0.999998128356511	WITHOUT_CLASSIFICATION	1.8716434890070025E-6	DEFECT
// starts at the back, wraps around front, and // finishes at back again	WITHOUT_CLASSIFICATION	0.9999981983608652	WITHOUT_CLASSIFICATION	1.8016391347507572E-6	DEFECT
// starts at back, finishes at front (CLOCKWISE)	WITHOUT_CLASSIFICATION	0.9999890834991096	WITHOUT_CLASSIFICATION	1.0916500890412882E-5	DEFECT
// segment starts at the front	WITHOUT_CLASSIFICATION	0.9999971993226606	WITHOUT_CLASSIFICATION	2.800677339415282E-6	DEFECT
// and finishes at the front	WITHOUT_CLASSIFICATION	0.9999952443383697	WITHOUT_CLASSIFICATION	4.755661630290753E-6	DEFECT
// segment only occupies the front	WITHOUT_CLASSIFICATION	0.9999991494178562	WITHOUT_CLASSIFICATION	8.505821438929177E-7	DEFECT
// segments wraps right around the back...	WITHOUT_CLASSIFICATION	0.9999997835011181	WITHOUT_CLASSIFICATION	2.164988819336065E-7	DEFECT
// segments starts at front and finishes at back...	WITHOUT_CLASSIFICATION	0.9999991812014526	WITHOUT_CLASSIFICATION	8.187985473875471E-7	DEFECT
// segment starts at back	WITHOUT_CLASSIFICATION	0.9999942650194603	WITHOUT_CLASSIFICATION	5.734980539698335E-6	DEFECT
// and finishes at back	WITHOUT_CLASSIFICATION	0.9999828488587942	WITHOUT_CLASSIFICATION	1.715114120586755E-5	DEFECT
//dmo //zero when the parameter is not set	WITHOUT_CLASSIFICATION	0.9999616552188004	WITHOUT_CLASSIFICATION	3.834478119951239E-5	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999969392101814	WITHOUT_CLASSIFICATION	3.0607898186102657E-6	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999998040630902	WITHOUT_CLASSIFICATION	1.9593690978323604E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999998708175747	WITHOUT_CLASSIFICATION	1.2918242522470006E-7	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999975802318091	WITHOUT_CLASSIFICATION	2.419768190867548E-6	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999975802318091	WITHOUT_CLASSIFICATION	2.419768190867548E-6	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.999997410810769	WITHOUT_CLASSIFICATION	2.5891892310591662E-6	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999947553075074	WITHOUT_CLASSIFICATION	5.244692492612931E-6	DEFECT
// additional dataArea modifications //check whether modification is	WITHOUT_CLASSIFICATION	0.999998444573597	WITHOUT_CLASSIFICATION	1.5554264030665735E-6	DEFECT
// ratio represents pixels	WITHOUT_CLASSIFICATION	0.9999986703332766	WITHOUT_CLASSIFICATION	1.329666723354117E-6	DEFECT
// ratio represents axis units	WITHOUT_CLASSIFICATION	0.9999984162612041	WITHOUT_CLASSIFICATION	1.5837387958841332E-6	DEFECT
// draw the plot background...	WITHOUT_CLASSIFICATION	0.999998190860901	WITHOUT_CLASSIFICATION	1.8091390989356888E-6	DEFECT
// draw vertical crosshair if required...	WITHOUT_CLASSIFICATION	0.9999995374768581	WITHOUT_CLASSIFICATION	4.6252314187421635E-7	DEFECT
// draw horizontal crosshair if required...	WITHOUT_CLASSIFICATION	0.9999994399561158	WITHOUT_CLASSIFICATION	5.600438841498289E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999987690870402	WITHOUT_CLASSIFICATION	1.2309129598012714E-6	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.99999979471319	WITHOUT_CLASSIFICATION	2.0528681005792867E-7	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9999988096281109	WITHOUT_CLASSIFICATION	1.1903718890026009E-6	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.99999979471319	WITHOUT_CLASSIFICATION	2.0528681005792867E-7	DEFECT
// now get the data and plot it (the visual representation will depend // on the renderer that has been set)...	WITHOUT_CLASSIFICATION	0.9999992361522068	WITHOUT_CLASSIFICATION	7.6384779322553E-7	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999989808880947	WITHOUT_CLASSIFICATION	1.0191119052428918E-6	DEFECT
// this is a new column	WITHOUT_CLASSIFICATION	0.9998331775049971	WITHOUT_CLASSIFICATION	1.6682249500285225E-4	DEFECT
// end of column	WITHOUT_CLASSIFICATION	0.9999829489736373	WITHOUT_CLASSIFICATION	1.705102636273606E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999847960454908	WITHOUT_CLASSIFICATION	1.5203954509076454E-5	DEFECT
//              }	WITHOUT_CLASSIFICATION	0.9999684466775249	WITHOUT_CLASSIFICATION	3.155332247504875E-5	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999877084735536	WITHOUT_CLASSIFICATION	1.2291526446420699E-5	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999966857493933	WITHOUT_CLASSIFICATION	3.314250606686339E-6	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.999995886393318	WITHOUT_CLASSIFICATION	4.113606681990248E-6	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999971304384819	WITHOUT_CLASSIFICATION	2.869561518027437E-6	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999868615781142	WITHOUT_CLASSIFICATION	1.3138421885812205E-5	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999992699998462	WITHOUT_CLASSIFICATION	7.300001538080754E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999998040630902	WITHOUT_CLASSIFICATION	1.9593690978323604E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999998708175747	WITHOUT_CLASSIFICATION	1.2918242522470006E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999987690870402	WITHOUT_CLASSIFICATION	1.2309129598012714E-6	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.9999964174022165	WITHOUT_CLASSIFICATION	3.582597783528697E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999847960454908	WITHOUT_CLASSIFICATION	1.5203954509076454E-5	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999877084735536	WITHOUT_CLASSIFICATION	1.2291526446420699E-5	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999966857493933	WITHOUT_CLASSIFICATION	3.314250606686339E-6	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.999995886393318	WITHOUT_CLASSIFICATION	4.113606681990248E-6	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999976342336766	WITHOUT_CLASSIFICATION	2.3657663234427426E-6	DEFECT
//Object oldValue = this.toolTipGenerator;	WITHOUT_CLASSIFICATION	0.9998970963200388	WITHOUT_CLASSIFICATION	1.0290367996131173E-4	DEFECT
//Object oldValue = this.urlGenerator;	WITHOUT_CLASSIFICATION	0.9998797502529144	WITHOUT_CLASSIFICATION	1.2024974708551038E-4	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999893696154211	WITHOUT_CLASSIFICATION	1.06303845790006E-5	DEFECT
// the following relies on the fact that the intervals are immutable	WITHOUT_CLASSIFICATION	0.999998326577704	WITHOUT_CLASSIFICATION	1.6734222959340563E-6	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.9999579608125202	WITHOUT_CLASSIFICATION	4.203918747977693E-5	DEFECT
// can't find any difference	WITHOUT_CLASSIFICATION	0.9999009621391963	WITHOUT_CLASSIFICATION	9.903786080376096E-5	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.9999981481325747	WITHOUT_CLASSIFICATION	1.8518674252265291E-6	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999986496353496	WITHOUT_CLASSIFICATION	1.350364650371368E-6	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999858379267457	WITHOUT_CLASSIFICATION	1.416207325442207E-5	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999858379267457	WITHOUT_CLASSIFICATION	1.416207325442207E-5	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999943103952323	WITHOUT_CLASSIFICATION	5.689604767654427E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999991596207056	WITHOUT_CLASSIFICATION	8.403792943919479E-7	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999792847493592	WITHOUT_CLASSIFICATION	2.071525064083132E-5	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999998957898951	WITHOUT_CLASSIFICATION	1.0421010480952306E-7	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999955815169266	WITHOUT_CLASSIFICATION	4.4184830733402515E-6	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999969392101814	WITHOUT_CLASSIFICATION	3.0607898186102657E-6	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999998040630902	WITHOUT_CLASSIFICATION	1.9593690978323604E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999947553075074	WITHOUT_CLASSIFICATION	5.244692492612931E-6	DEFECT
//  range = this.rangeAxis.getRange().getLength(); //  scaledRange = range * percent; //   rangeAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999990319730441	WITHOUT_CLASSIFICATION	9.68026956011178E-7	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999989016721401	WITHOUT_CLASSIFICATION	1.0983278599308889E-6	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.9999991594967756	WITHOUT_CLASSIFICATION	8.40503224386439E-7	DEFECT
// override is only for documentation purposes	WITHOUT_CLASSIFICATION	0.9999966629801302	WITHOUT_CLASSIFICATION	3.3370198697880904E-6	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999999472354998	WITHOUT_CLASSIFICATION	5.2764500155205026E-8	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999992167810631	WITHOUT_CLASSIFICATION	7.83218936857338E-7	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9999720068383863	WITHOUT_CLASSIFICATION	2.799316161373692E-5	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9999720068383863	WITHOUT_CLASSIFICATION	2.799316161373692E-5	DEFECT
//get major dimension	WITHOUT_CLASSIFICATION	0.9999858592806937	WITHOUT_CLASSIFICATION	1.4140719306377713E-5	DEFECT
//ellipse diameter is the minor dimension	WITHOUT_CLASSIFICATION	0.999988253934791	WITHOUT_CLASSIFICATION	1.1746065209004428E-5	DEFECT
// draw the wafer	WITHOUT_CLASSIFICATION	0.9999884703108345	WITHOUT_CLASSIFICATION	1.1529689165466528E-5	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.9999984587301565	WITHOUT_CLASSIFICATION	1.5412698434851652E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999943103952323	WITHOUT_CLASSIFICATION	5.689604767654427E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999998957898951	WITHOUT_CLASSIFICATION	1.0421010480952306E-7	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999955815169266	WITHOUT_CLASSIFICATION	4.4184830733402515E-6	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.9999978503552979	WITHOUT_CLASSIFICATION	2.1496447020189243E-6	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999868615781142	WITHOUT_CLASSIFICATION	1.3138421885812205E-5	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999969392101814	WITHOUT_CLASSIFICATION	3.0607898186102657E-6	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999998040630902	WITHOUT_CLASSIFICATION	1.9593690978323604E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999998708175747	WITHOUT_CLASSIFICATION	1.2918242522470006E-7	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.99999979471319	WITHOUT_CLASSIFICATION	2.0528681005792867E-7	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999989016721401	WITHOUT_CLASSIFICATION	1.0983278599308889E-6	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.9999725457345015	WITHOUT_CLASSIFICATION	2.7454265498607455E-5	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.9999725457345015	WITHOUT_CLASSIFICATION	2.7454265498607455E-5	DEFECT
// calculate and draw the notch // horizontal orientation is considered notch right // vertical orientation is considered notch down	WITHOUT_CLASSIFICATION	0.9999846364393352	WITHOUT_CLASSIFICATION	1.536356066479817E-5	DEFECT
//this.axisOffset.trim(dataArea);	WITHOUT_CLASSIFICATION	0.9999386996381295	WITHOUT_CLASSIFICATION	6.130036187045482E-5	DEFECT
//// SECTION PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999473281250003	WITHOUT_CLASSIFICATION	5.267187499967515E-5	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9987792431127135	WITHOUT_CLASSIFICATION	0.0012207568872864203	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999805897001637	WITHOUT_CLASSIFICATION	1.9410299836300257E-5	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999805897001637	WITHOUT_CLASSIFICATION	1.9410299836300257E-5	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999948496133266	WITHOUT_CLASSIFICATION	5.150386673308131E-6	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999948496133266	WITHOUT_CLASSIFICATION	5.150386673308131E-6	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.999996281464305	WITHOUT_CLASSIFICATION	3.7185356951071794E-6	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.999996281464305	WITHOUT_CLASSIFICATION	3.7185356951071794E-6	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.999996281464305	WITHOUT_CLASSIFICATION	3.7185356951071794E-6	DEFECT
//// SECTION OUTLINE PAINT ////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999535183896164	WITHOUT_CLASSIFICATION	4.648161038358948E-5	DEFECT
//// SECTION OUTLINE STROKE ///////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999286728168977	WITHOUT_CLASSIFICATION	7.132718310241701E-5	DEFECT
// if not, check if there is a stroke defined for the specified key	WITHOUT_CLASSIFICATION	0.9999811264235329	WITHOUT_CLASSIFICATION	1.88735764670406E-5	DEFECT
// adjust the plot area for interior spacing and labels...	WITHOUT_CLASSIFICATION	0.999999715686856	WITHOUT_CLASSIFICATION	2.8431314404086977E-7	DEFECT
// make the link area a square if the pie chart is to be circular...	WITHOUT_CLASSIFICATION	0.9999943415774838	WITHOUT_CLASSIFICATION	5.658422516299468E-6	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9999988096281109	WITHOUT_CLASSIFICATION	1.1903718890026009E-6	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999986496353496	WITHOUT_CLASSIFICATION	1.350364650371368E-6	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999858379267457	WITHOUT_CLASSIFICATION	1.416207325442207E-5	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999991596207056	WITHOUT_CLASSIFICATION	8.403792943919479E-7	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999979119860144	WITHOUT_CLASSIFICATION	2.0880139855437075E-6	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999969392101814	WITHOUT_CLASSIFICATION	3.0607898186102657E-6	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999893696154211	WITHOUT_CLASSIFICATION	1.06303845790006E-5	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.9999984587301565	WITHOUT_CLASSIFICATION	1.5412698434851652E-6	DEFECT
// update the linking line target for later // add an entity for the pie section	WITHOUT_CLASSIFICATION	0.999993613944	WITHOUT_CLASSIFICATION	6.386056000028856E-6	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9999987799985615	WITHOUT_CLASSIFICATION	1.2200014385531588E-6	DEFECT
// classify the keys according to which side the label will appear...	WITHOUT_CLASSIFICATION	0.9999991436948485	WITHOUT_CLASSIFICATION	8.563051515511638E-7	DEFECT
// calculate the max label width from the plot dimensions, because // a circular pie can leave a lot more room for labels...	WITHOUT_CLASSIFICATION	0.9999987255652452	WITHOUT_CLASSIFICATION	1.2744347548022957E-6	DEFECT
// draw the labels...	WITHOUT_CLASSIFICATION	0.999996732802966	WITHOUT_CLASSIFICATION	3.2671970340118698E-6	DEFECT
// draw the right labels...	WITHOUT_CLASSIFICATION	0.9999975641041977	WITHOUT_CLASSIFICATION	2.435895802319905E-6	DEFECT
//hh * getInteriorGap();	WITHOUT_CLASSIFICATION	0.9999943175702597	WITHOUT_CLASSIFICATION	5.682429740364479E-6	DEFECT
// line not visible	WITHOUT_CLASSIFICATION	0.9999836615392644	WITHOUT_CLASSIFICATION	1.633846073546904E-5	DEFECT
// for a RadialGradientPaint we adjust the center and radius to match // the current pie segment...	WITHOUT_CLASSIFICATION	0.9999998037482986	WITHOUT_CLASSIFICATION	1.9625170141172933E-7	DEFECT
// can't find any difference...	WITHOUT_CLASSIFICATION	0.9999408250275288	WITHOUT_CLASSIFICATION	5.91749724712271E-5	DEFECT
// DEPRECATED FIELDS AND METHODS...	WITHOUT_CLASSIFICATION	0.9993054153398918	WITHOUT_CLASSIFICATION	6.945846601082357E-4	DEFECT
// no range axis // no renderer	WITHOUT_CLASSIFICATION	0.9999906335563387	WITHOUT_CLASSIFICATION	9.366443661321509E-6	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999949631234512	WITHOUT_CLASSIFICATION	5.0368765488713666E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999998957898951	WITHOUT_CLASSIFICATION	1.0421010480952306E-7	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999955815169266	WITHOUT_CLASSIFICATION	4.4184830733402515E-6	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999969392101814	WITHOUT_CLASSIFICATION	3.0607898186102657E-6	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999998040630902	WITHOUT_CLASSIFICATION	1.9593690978323604E-7	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.99999979471319	WITHOUT_CLASSIFICATION	2.0528681005792867E-7	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999989016721401	WITHOUT_CLASSIFICATION	1.0983278599308889E-6	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.9999991594967756	WITHOUT_CLASSIFICATION	8.40503224386439E-7	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999999472354998	WITHOUT_CLASSIFICATION	5.2764500155205026E-8	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999992167810631	WITHOUT_CLASSIFICATION	7.83218936857338E-7	DEFECT
// delegate 'state' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999997818958324	WITHOUT_CLASSIFICATION	2.1810416775897236E-7	DEFECT
// after setting up all the subplots, the shared domain axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.999999739344168	WITHOUT_CLASSIFICATION	2.606558321121518E-7	DEFECT
// 20% // 20% // 20%	WITHOUT_CLASSIFICATION	0.999954291767569	WITHOUT_CLASSIFICATION	4.570823243102238E-5	DEFECT
// create the bounds for the inner arc	WITHOUT_CLASSIFICATION	0.9999989228442775	WITHOUT_CLASSIFICATION	1.0771557224621E-6	DEFECT
// calculate inner arc in reverse direction, for later // GeneralPath construction	WITHOUT_CLASSIFICATION	0.9999856260968282	WITHOUT_CLASSIFICATION	1.437390317190222E-5	DEFECT
// add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9999929081372096	WITHOUT_CLASSIFICATION	7.091862790316589E-6	DEFECT
// check that there is some data to display...	WITHOUT_CLASSIFICATION	0.9999988970633541	WITHOUT_CLASSIFICATION	1.1029366458117095E-6	DEFECT
// the columns variable is always >= rows	WITHOUT_CLASSIFICATION	0.9999949527907877	WITHOUT_CLASSIFICATION	5.047209212310522E-6	DEFECT
// swap rows and columns to match plotArea shape	WITHOUT_CLASSIFICATION	0.9999989904318963	WITHOUT_CLASSIFICATION	1.0095681036830218E-6	DEFECT
// update the section colors to match the global colors...	WITHOUT_CLASSIFICATION	0.9999996021001459	WITHOUT_CLASSIFICATION	3.978998541112442E-7	DEFECT
// pre-fetch the colors for each key...this is because the subplots // may not display every key, but we need the coloring to be // consistent...	WITHOUT_CLASSIFICATION	0.9999986518521665	WITHOUT_CLASSIFICATION	1.3481478335698042E-6	DEFECT
// column keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9999996872205675	WITHOUT_CLASSIFICATION	3.127794325367371E-7	DEFECT
// row keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9999997464307988	WITHOUT_CLASSIFICATION	2.5356920122038424E-7	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. * Other names may be trademarks of their respective owners.] * * ----------------- * CategoryPlot.java * ----------------- * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Jeremy Bowman; *                   Arnaud Lelievre; *                   Richard West, Advanced Micro Devices, Inc.; *                   Ulrich Voigt - patch 2686040; *                   Peter Kolb - patches 2603321 and 2809117; * * Changes * ------- * 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG); * 21-Aug-2001 : Added standard header. Fixed DOS encoding problem (DG); * 18-Sep-2001 : Updated header (DG); * 15-Oct-2001 : Data source classes moved to com.jrefinery.data.* (DG); * 22-Oct-2001 : Renamed DataSource.java --> Dataset.java etc. (DG); * 23-Oct-2001 : Changed intro and trail gaps on bar plots to use percentage of *               available space rather than a fixed number of units (DG); * 12-Dec-2001 : Changed constructors to protected (DG); * 13-Dec-2001 : Added tooltips (DG); * 16-Jan-2002 : Increased maximum intro and trail gap percents, plus added *               some argument checking code.  Thanks to Taoufik Romdhane for *               suggesting this (DG); * 05-Feb-2002 : Added accessor methods for the tooltip generator, incorporated *               alpha-transparency for Plot and subclasses (DG); * 06-Mar-2002 : Updated import statements (DG); * 14-Mar-2002 : Renamed BarPlot.java --> CategoryPlot.java, and changed code *               to use the CategoryItemRenderer interface (DG); * 22-Mar-2002 : Dropped the getCategories() method (DG); * 23-Apr-2002 : Moved the dataset from the JFreeChart class to the Plot *               class (DG); * 29-Apr-2002 : New methods to support printing values at the end of bars, *               contributed by Jeremy Bowman (DG); * 11-May-2002 : New methods for label visibility and overlaid plot support, *               contributed by Jeremy Bowman (DG); * 06-Jun-2002 : Removed the tooltip generator, this is now stored with the *               renderer.  Moved constants into the CategoryPlotConstants *               interface.  Updated Javadoc comments (DG); * 10-Jun-2002 : Overridden datasetChanged() method to update the upper and *               lower bound on the range axis (if necessary), updated *               Javadocs (DG); * 25-Jun-2002 : Removed redundant imports (DG); * 20-Aug-2002 : Changed the constructor for Marker (DG); * 28-Aug-2002 : Added listener notification to setDomainAxis() and *               setRangeAxis() (DG); * 23-Sep-2002 : Added getLegendItems() method and fixed errors reported by *               Checkstyle (DG); * 28-Oct-2002 : Changes to the CategoryDataset interface (DG); * 05-Nov-2002 : Base dataset is now TableDataset not CategoryDataset (DG); * 07-Nov-2002 : Renamed labelXXX as valueLabelXXX (DG); * 18-Nov-2002 : Added grid settings for both domain and range axis (previously *               these were set in the axes) (DG); * 19-Nov-2002 : Added axis location parameters to constructor (DG); * 17-Jan-2003 : Moved to com.jrefinery.chart.plot package (DG); * 14-Feb-2003 : Fixed bug in auto-range calculation for secondary axis (DG); * 26-Mar-2003 : Implemented Serializable (DG); * 02-May-2003 : Moved render() method up from subclasses. Added secondary *               range markers. Added an attribute to control the dataset *               rendering order.  Added a drawAnnotations() method.  Changed *               the axis location from an int to an AxisLocation (DG); * 07-May-2003 : Merged HorizontalCategoryPlot and VerticalCategoryPlot into *               this class (DG); * 02-Jun-2003 : Removed check for range axis compatibility (DG); * 04-Jul-2003 : Added a domain gridline position attribute (DG); * 21-Jul-2003 : Moved DrawingSupplier to Plot superclass (DG); * 19-Aug-2003 : Added equals() method and implemented Cloneable (DG); * 01-Sep-2003 : Fixed bug 797466 (no change event when secondary dataset *               changes) (DG); * 02-Sep-2003 : Fixed bug 795209 (wrong dataset checked in render2 method) and *               790407 (initialise method) (DG); * 08-Sep-2003 : Added internationalization via use of properties *               resourceBundle (RFE 690236) (AL); * 08-Sep-2003 : Fixed bug (wrong secondary range axis being used).  Changed *               ValueAxis API (DG); * 10-Sep-2003 : Fixed bug in setRangeAxis() method (DG); * 15-Sep-2003 : Fixed two bugs in serialization, implemented *               PublicCloneable (DG); * 23-Oct-2003 : Added event notification for changes to renderer (DG); * 26-Nov-2003 : Fixed bug (849645) in clearRangeMarkers() method (DG); * 03-Dec-2003 : Modified draw method to accept anchor (DG); * 21-Jan-2004 : Update for renamed method in ValueAxis (DG); * 10-Mar-2004 : Fixed bug in axis range calculation when secondary renderer is *               stacked (DG); * 12-May-2004 : Added fixed legend items (DG); * 19-May-2004 : Added check for null legend item from renderer (DG); * 02-Jun-2004 : Updated the DatasetRenderingOrder class (DG); * 05-Nov-2004 : Renamed getDatasetsMappedToRangeAxis() *               --> datasetsMappedToRangeAxis(), and ensured that returned *               list doesn't contain null datasets (DG); * 12-Nov-2004 : Implemented new Zoomable interface (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds() in *               CategoryItemRenderer (DG); * 04-May-2005 : Fixed serialization of range markers (DG); * 05-May-2005 : Updated draw() method parameters (DG); * 20-May-2005 : Added setDomainAxes() and setRangeAxes() methods, as per *               RFE 1183100 (DG); * 01-Jun-2005 : Upon deserialization, register plot as a listener with its *               axes, dataset(s) and renderer(s) - see patch 1209475 (DG); * 02-Jun-2005 : Added support for domain markers (DG); * 06-Jun-2005 : Fixed equals() method for use with GradientPaint (DG); * 09-Jun-2005 : Added setRenderers(), as per RFE 1183100 (DG); * 16-Jun-2005 : Added getDomainAxisCount() and getRangeAxisCount() methods, to *               match XYPlot (see RFE 1220495) (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 11-Jan-2006 : Added configureRangeAxes() to rendererChanged(), since the *               renderer might influence the axis range (DG); * 27-Jan-2006 : Added various null argument checks (DG); * 18-Aug-2006 : Added getDatasetCount() method, plus a fix for bug drawing *               category labels, thanks to Adriaan Joubert (1277726) (DG); * 05-Sep-2006 : Added MarkerChangeEvent support (DG); * 30-Oct-2006 : Added getDomainAxisIndex(), datasetsMappedToDomainAxis() and *               getCategoriesForAxis() methods (DG); * 22-Nov-2006 : Fire PlotChangeEvent from setColumnRenderingOrder() and *               setRowRenderingOrder() (DG); * 29-Nov-2006 : Fix for bug 1605207 (IntervalMarker exceeds bounds of data *               area) (DG); * 26-Feb-2007 : Fix for bug 1669218 (setDomainAxisLocation() notify argument *               ignored) (DG); * 13-Mar-2007 : Added null argument checks for setRangeCrosshairPaint() and *               setRangeCrosshairStroke(), fixed clipping for *               annotations (DG); * 07-Jun-2007 : Override drawBackground() for new GradientPaint handling (DG); * 10-Jul-2007 : Added getRangeAxisIndex(ValueAxis) method (DG); * 24-Sep-2007 : Implemented new zoom methods (DG); * 25-Oct-2007 : Added some argument checks (DG); * 05-Nov-2007 : Applied patch 1823697, by Richard West, for removal of domain *               and range markers (DG); * 14-Nov-2007 : Added missing event notifications (DG); * 25-Mar-2008 : Added new methods with optional notification - see patch *               1913751 (DG); * 07-Apr-2008 : Fixed NPE in removeDomainMarker() and *               removeRangeMarker() (DG); * 23-Apr-2008 : Fixed equals() and clone() methods (DG); * 26-Jun-2008 : Fixed crosshair support (DG); * 10-Jul-2008 : Fixed outline visibility for 3D renderers (DG); * 12-Aug-2008 : Added rendererCount() method (DG); * 25-Nov-2008 : Added facility to map datasets to multiples axes (DG); * 15-Dec-2008 : Cleaned up grid drawing methods (DG); * 18-Dec-2008 : Use ResourceBundleWrapper - see patch 1607918 by *               Jess Thrysoee (DG); * 21-Jan-2009 : Added rangeMinorGridlinesVisible flag (DG); * 18-Mar-2009 : Modified anchored zoom behaviour (DG); * 19-Mar-2009 : Implemented Pannable interface - see patch 2686040 (DG); * 19-Mar-2009 : Added entity support - see patch 2603321 by Peter Kolb (DG); * 24-Jun-2009 : Implemented AnnotationChangeListener (see patch 2809117 by *               PK) (DG); * 06-Jul-2009 : Fix for cloning of renderers - see bug 2817504 (DG) * 10-Jul-2009 : Added optional drop shadow generator (DG); * 27-Sep-2011 : Fixed annotation import (DG); * 18-Oct-2011 : Fixed tooltip offset with shadow generator (DG); * 20-Nov-2011 : Initialise shadow generator as null (DG); * 02-Jul-2013 : Use ParamChecks (DG); * 12-Sep-2013 : Check for KEY_SUPPRESS_SHADOW_GENERATION rendering hint (DG); * 10-Mar-2014 : Updated Javadocs for issue #1123 (DG); * 09-Apr-2014 : Remove use of ObjectList (DG); *  */	WITHOUT_CLASSIFICATION	0.9999908268576064	WITHOUT_CLASSIFICATION	9.173142393527547E-6	DEFECT
// allocate storage for dataset, axes and renderers	WITHOUT_CLASSIFICATION	0.9999985090540706	WITHOUT_CLASSIFICATION	1.4909459293364356E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999939514940857	WITHOUT_CLASSIFICATION	6.048505914340919E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999939514940857	WITHOUT_CLASSIFICATION	6.048505914340919E-6	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999792847493592	WITHOUT_CLASSIFICATION	2.071525064083132E-5	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999998708175747	WITHOUT_CLASSIFICATION	1.2918242522470006E-7	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.999997410810769	WITHOUT_CLASSIFICATION	2.5891892310591662E-6	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999947553075074	WITHOUT_CLASSIFICATION	5.244692492612931E-6	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999992167810631	WITHOUT_CLASSIFICATION	7.83218936857338E-7	DEFECT
// set the anchor value for the range axis...	WITHOUT_CLASSIFICATION	0.9999989048762413	WITHOUT_CLASSIFICATION	1.0951237586824097E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.999951404028019	WITHOUT_CLASSIFICATION	4.8595971981077166E-5	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.999999347301524	WITHOUT_CLASSIFICATION	6.526984759945088E-7	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.999999347301524	WITHOUT_CLASSIFICATION	6.526984759945088E-7	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999997152715694	WITHOUT_CLASSIFICATION	2.84728430612526E-7	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999997152715694	WITHOUT_CLASSIFICATION	2.84728430612526E-7	DEFECT
// get the legend items for the datasets...	WITHOUT_CLASSIFICATION	0.9999994999103445	WITHOUT_CLASSIFICATION	5.000896555649036E-7	DEFECT
// this should never happen with the existing code, but throw // an exception in case future changes make it possible...	WITHOUT_CLASSIFICATION	0.9999566536130969	WITHOUT_CLASSIFICATION	4.3346386902999E-5	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999797600206539	WITHOUT_CLASSIFICATION	2.0239979346016352E-5	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999988287028856	WITHOUT_CLASSIFICATION	1.1712971144847856E-6	DEFECT
// reserve space for the primary domain axis...	WITHOUT_CLASSIFICATION	0.9999991742442441	WITHOUT_CLASSIFICATION	8.257557559455295E-7	DEFECT
// reserve space for any domain axes...	WITHOUT_CLASSIFICATION	0.9999977238449802	WITHOUT_CLASSIFICATION	2.2761550197005584E-6	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999981079676056	WITHOUT_CLASSIFICATION	1.892032394444763E-6	DEFECT
// reserve space for the range axes (if any)...	WITHOUT_CLASSIFICATION	0.9999986208552614	WITHOUT_CLASSIFICATION	1.3791447386648515E-6	DEFECT
// if the incoming state is null, no information will be passed // back to the caller - but we create a temporary state to record // the plot area, since that is used later by the axes	WITHOUT_CLASSIFICATION	0.9999857943843118	WITHOUT_CLASSIFICATION	1.4205615688264652E-5	DEFECT
// if there is a renderer, it draws the background, otherwise use the // default background...	WITHOUT_CLASSIFICATION	0.9999984562910491	WITHOUT_CLASSIFICATION	1.5437089508722095E-6	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.9999931990244078	WITHOUT_CLASSIFICATION	6.800975592306205E-6	DEFECT
// specify the anchor X and Y coordinates in Java2D space, for the // cases where these are not updated during rendering (i.e. no lock // on data)	WITHOUT_CLASSIFICATION	0.999998434166437	WITHOUT_CLASSIFICATION	1.5658335629312019E-6	DEFECT
// don't let anyone draw outside the data area	WITHOUT_CLASSIFICATION	0.9999986727119798	WITHOUT_CLASSIFICATION	1.3272880201377895E-6	DEFECT
// draw the markers...	WITHOUT_CLASSIFICATION	0.9999866278321954	WITHOUT_CLASSIFICATION	1.3372167804689674E-5	DEFECT
// now render data items...	WITHOUT_CLASSIFICATION	0.9999935849385727	WITHOUT_CLASSIFICATION	6.4150614273049434E-6	DEFECT
// set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999995856213533	WITHOUT_CLASSIFICATION	4.1437864671366856E-7	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.9999993246964198	WITHOUT_CLASSIFICATION	6.753035802595836E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999901670295156	WITHOUT_CLASSIFICATION	9.8329704842821E-6	DEFECT
// draw the foreground markers...	WITHOUT_CLASSIFICATION	0.9999976001511484	WITHOUT_CLASSIFICATION	2.399848851557832E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999875140778858	WITHOUT_CLASSIFICATION	1.2485922114345557E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999875140778858	WITHOUT_CLASSIFICATION	1.2485922114345557E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999875140778858	WITHOUT_CLASSIFICATION	1.2485922114345557E-5	DEFECT
// draw the annotations (if any)...	WITHOUT_CLASSIFICATION	0.9999942540520397	WITHOUT_CLASSIFICATION	5.745947960269667E-6	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.9999988345519673	WITHOUT_CLASSIFICATION	1.1654480327608834E-6	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9999988915509193	WITHOUT_CLASSIFICATION	1.1084490807500096E-6	DEFECT
// draw an outline around the plot area...	WITHOUT_CLASSIFICATION	0.9999983286320195	WITHOUT_CLASSIFICATION	1.6713679804607083E-6	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9999882305999422	WITHOUT_CLASSIFICATION	1.1769400057768165E-5	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9999934724153039	WITHOUT_CLASSIFICATION	6.5275846961660764E-6	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.9999985260569212	WITHOUT_CLASSIFICATION	1.4739430788777571E-6	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.9999962445914782	WITHOUT_CLASSIFICATION	3.7554085218196424E-6	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.999995380688205	WITHOUT_CLASSIFICATION	4.619311795025875E-6	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.9999943978674419	WITHOUT_CLASSIFICATION	5.602132558146035E-6	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999978260978054	WITHOUT_CLASSIFICATION	2.1739021945781226E-6	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999977686932443	WITHOUT_CLASSIFICATION	2.2313067556242033E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999968981101935	WITHOUT_CLASSIFICATION	3.1018898063756807E-6	DEFECT
// add the unique categories from this dataset	WITHOUT_CLASSIFICATION	0.9999972330377893	WITHOUT_CLASSIFICATION	2.7669622107360694E-6	DEFECT
// do nothing, because the plot is not pannable along the domain axes	WITHOUT_CLASSIFICATION	0.999997380534506	WITHOUT_CLASSIFICATION	2.619465494019842E-6	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999159402193828	WITHOUT_CLASSIFICATION	8.405978061725877E-5	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999988015324678	WITHOUT_CLASSIFICATION	1.198467532230143E-6	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9999924409461172	WITHOUT_CLASSIFICATION	7.559053882789531E-6	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999995609359115	WITHOUT_CLASSIFICATION	4.3906408859363846E-7	DEFECT
// AxisLocation is immutable, so we can just copy the maps	WITHOUT_CLASSIFICATION	0.9999924197043226	WITHOUT_CLASSIFICATION	7.580295677317651E-6	DEFECT
// not currently serialized	WITHOUT_CLASSIFICATION	0.9999652082220304	WITHOUT_CLASSIFICATION	3.479177796968797E-5	DEFECT
// some subclasses override this method completely, so don't put // anything here that *must* be done	WITHOUT_CLASSIFICATION	0.9999964998829425	WITHOUT_CLASSIFICATION	3.500117057544506E-6	DEFECT
// provides a 'no action' default	WITHOUT_CLASSIFICATION	0.9999993289617426	WITHOUT_CLASSIFICATION	6.71038257425491E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999901670295156	WITHOUT_CLASSIFICATION	9.8329704842821E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999998708175747	WITHOUT_CLASSIFICATION	1.2918242522470006E-7	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.999997410810769	WITHOUT_CLASSIFICATION	2.5891892310591662E-6	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999947553075074	WITHOUT_CLASSIFICATION	5.244692492612931E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.999951404028019	WITHOUT_CLASSIFICATION	4.8595971981077166E-5	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999992167810631	WITHOUT_CLASSIFICATION	7.83218936857338E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999939514940857	WITHOUT_CLASSIFICATION	6.048505914340919E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999939514940857	WITHOUT_CLASSIFICATION	6.048505914340919E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999976226454868	WITHOUT_CLASSIFICATION	2.377354513257764E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.999999347301524	WITHOUT_CLASSIFICATION	6.526984759945088E-7	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999592870990447	WITHOUT_CLASSIFICATION	4.0712900955357403E-5	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999997152715694	WITHOUT_CLASSIFICATION	2.84728430612526E-7	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999977686932443	WITHOUT_CLASSIFICATION	2.2313067556242033E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999968981101935	WITHOUT_CLASSIFICATION	3.1018898063756807E-6	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.999998764684926	WITHOUT_CLASSIFICATION	1.2353150740110513E-6	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9999988857254158	WITHOUT_CLASSIFICATION	1.114274584121424E-6	DEFECT
// define the default locations for up to 8 axes...	WITHOUT_CLASSIFICATION	0.9999996807542371	WITHOUT_CLASSIFICATION	3.1924576298111803E-7	DEFECT
// normalize angle	WITHOUT_CLASSIFICATION	0.9999750141250148	WITHOUT_CLASSIFICATION	2.4985874985206006E-5	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.999999455091815	WITHOUT_CLASSIFICATION	5.449081849988277E-7	DEFECT
// now for each dataset, get the renderer and the appropriate axis // and render the dataset...	WITHOUT_CLASSIFICATION	0.9999995077958198	WITHOUT_CLASSIFICATION	4.922041800884997E-7	DEFECT
// now get the data and plot it (the visual representation will depend // on the m_Renderer that has been set)...	WITHOUT_CLASSIFICATION	0.9999994646927982	WITHOUT_CLASSIFICATION	5.353072018408887E-7	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.999998395038559	WITHOUT_CLASSIFICATION	1.6049614409783508E-6	DEFECT
// draw the radius grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999981761959034	WITHOUT_CLASSIFICATION	1.8238040965501628E-6	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9999858597121666	WITHOUT_CLASSIFICATION	1.4140287833310904E-5	DEFECT
// square	WITHOUT_CLASSIFICATION	0.9999959088543885	WITHOUT_CLASSIFICATION	4.091145611417781E-6	DEFECT
// circle	WITHOUT_CLASSIFICATION	0.9999961678012783	WITHOUT_CLASSIFICATION	3.832198721632153E-6	DEFECT
// up-pointing triangle	WITHOUT_CLASSIFICATION	0.9999981830094423	WITHOUT_CLASSIFICATION	1.8169905577064253E-6	DEFECT
// diamond	WITHOUT_CLASSIFICATION	0.9999948227239616	WITHOUT_CLASSIFICATION	5.177276038432239E-6	DEFECT
// horizontal rectangle	WITHOUT_CLASSIFICATION	0.9999854937812069	WITHOUT_CLASSIFICATION	1.4506218793037295E-5	DEFECT
// down-pointing triangle	WITHOUT_CLASSIFICATION	0.9999968214442314	WITHOUT_CLASSIFICATION	3.1785557685477457E-6	DEFECT
// horizontal ellipse	WITHOUT_CLASSIFICATION	0.9999946007448874	WITHOUT_CLASSIFICATION	5.3992551125592534E-6	DEFECT
// right-pointing triangle	WITHOUT_CLASSIFICATION	0.9999987003540424	WITHOUT_CLASSIFICATION	1.2996459576783272E-6	DEFECT
// vertical rectangle	WITHOUT_CLASSIFICATION	0.9999873749178506	WITHOUT_CLASSIFICATION	1.2625082149247103E-5	DEFECT
// left-pointing triangle	WITHOUT_CLASSIFICATION	0.9999973551861268	WITHOUT_CLASSIFICATION	2.644813873306158E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999901670295156	WITHOUT_CLASSIFICATION	9.8329704842821E-6	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999868615781142	WITHOUT_CLASSIFICATION	1.3138421885812205E-5	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999992699998462	WITHOUT_CLASSIFICATION	7.300001538080754E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999998040630902	WITHOUT_CLASSIFICATION	1.9593690978323604E-7	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999999472354998	WITHOUT_CLASSIFICATION	5.2764500155205026E-8	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999989945762952	WITHOUT_CLASSIFICATION	1.005423704876086E-6	DEFECT
//// SERIES PAINT /////////////////////////	WITHOUT_CLASSIFICATION	0.9999426330519338	WITHOUT_CLASSIFICATION	5.736694806621671E-5	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999997327913577	WITHOUT_CLASSIFICATION	2.67208642298142E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999989945762952	WITHOUT_CLASSIFICATION	1.005423704876086E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999989945762952	WITHOUT_CLASSIFICATION	1.005423704876086E-6	DEFECT
//// SERIES OUTLINE PAINT ////////////////////////////	WITHOUT_CLASSIFICATION	0.9999274140573389	WITHOUT_CLASSIFICATION	7.258594266105437E-5	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999997327913577	WITHOUT_CLASSIFICATION	2.67208642298142E-7	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999997327913577	WITHOUT_CLASSIFICATION	2.67208642298142E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999901670295156	WITHOUT_CLASSIFICATION	9.8329704842821E-6	DEFECT
// ensure we have a maximum value to use on the axes	WITHOUT_CLASSIFICATION	0.9999993431524884	WITHOUT_CLASSIFICATION	6.568475115289955E-7	DEFECT
//// SERIES OUTLINE STROKE /////////////////////	WITHOUT_CLASSIFICATION	0.9998622252494122	WITHOUT_CLASSIFICATION	1.3777475058780907E-4	DEFECT
// Next, setup the plot area	WITHOUT_CLASSIFICATION	0.9999983637099885	WITHOUT_CLASSIFICATION	1.6362900114435981E-6	DEFECT
// make the chart area a square	WITHOUT_CLASSIFICATION	0.9999960696195808	WITHOUT_CLASSIFICATION	3.930380419245427E-6	DEFECT
// draw the axis and category label	WITHOUT_CLASSIFICATION	0.9999975789786208	WITHOUT_CLASSIFICATION	2.421021379104959E-6	DEFECT
// 1 = end of axis	WITHOUT_CLASSIFICATION	0.999979416454096	WITHOUT_CLASSIFICATION	2.058354590400983E-5	DEFECT
// Now actually plot each of the series polygons..	WITHOUT_CLASSIFICATION	0.9999975164428155	WITHOUT_CLASSIFICATION	2.4835571844868215E-6	DEFECT
// plot the data...	WITHOUT_CLASSIFICATION	0.9999970224089039	WITHOUT_CLASSIFICATION	2.9775910960941536E-6	DEFECT
// draw the polygon series...	WITHOUT_CLASSIFICATION	0.9999975099399575	WITHOUT_CLASSIFICATION	2.4900600423983213E-6	DEFECT
// Finds our starting angle from the centre for this axis	WITHOUT_CLASSIFICATION	0.9999956472497178	WITHOUT_CLASSIFICATION	4.352750282174395E-6	DEFECT
// The following angle calc will ensure there isn't a top // vertical axis - this may be useful if you don't want any // given criteria to 'appear' move important than the // others.. //  + (getDirection().getFactor() //        * (cat + 0.5) * 360 / catCount);	WITHOUT_CLASSIFICATION	0.9999855151862223	WITHOUT_CLASSIFICATION	1.4484813777846537E-5	DEFECT
// find the point at the appropriate distance end point // along the axis/angle identified above and add it to the // polygon	WITHOUT_CLASSIFICATION	0.9999999481345564	WITHOUT_CLASSIFICATION	5.186544350702913E-8	DEFECT
// put an elipse at the point being plotted..	WITHOUT_CLASSIFICATION	0.9999965703581747	WITHOUT_CLASSIFICATION	3.4296418253163386E-6	DEFECT
// Plot the polygon	WITHOUT_CLASSIFICATION	0.9999949931301393	WITHOUT_CLASSIFICATION	5.0068698607442555E-6	DEFECT
// set the anchor value for the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999993311038224	WITHOUT_CLASSIFICATION	6.688961775233415E-7	DEFECT
/* shapeFilled=*/	WITHOUT_CLASSIFICATION	0.999993848591194	WITHOUT_CLASSIFICATION	6.1514088060064545E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999901670295156	WITHOUT_CLASSIFICATION	9.8329704842821E-6	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999868615781142	WITHOUT_CLASSIFICATION	1.3138421885812205E-5	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999998708175747	WITHOUT_CLASSIFICATION	1.2918242522470006E-7	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999975802318091	WITHOUT_CLASSIFICATION	2.419768190867548E-6	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.999997410810769	WITHOUT_CLASSIFICATION	2.5891892310591662E-6	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999947553075074	WITHOUT_CLASSIFICATION	5.244692492612931E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.999951404028019	WITHOUT_CLASSIFICATION	4.8595971981077166E-5	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999976342336766	WITHOUT_CLASSIFICATION	2.3657663234427426E-6	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999893696154211	WITHOUT_CLASSIFICATION	1.06303845790006E-5	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999992167810631	WITHOUT_CLASSIFICATION	7.83218936857338E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999939514940857	WITHOUT_CLASSIFICATION	6.048505914340919E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999939514940857	WITHOUT_CLASSIFICATION	6.048505914340919E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999939514940857	WITHOUT_CLASSIFICATION	6.048505914340919E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.999999347301524	WITHOUT_CLASSIFICATION	6.526984759945088E-7	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.999999347301524	WITHOUT_CLASSIFICATION	6.526984759945088E-7	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999592870990447	WITHOUT_CLASSIFICATION	4.0712900955357403E-5	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999988287028856	WITHOUT_CLASSIFICATION	1.1712971144847856E-6	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999981079676056	WITHOUT_CLASSIFICATION	1.892032394444763E-6	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.999999455091815	WITHOUT_CLASSIFICATION	5.449081849988277E-7	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999984521207783	WITHOUT_CLASSIFICATION	1.5478792216424992E-6	DEFECT
// Lastly, fill the web polygon if this is required	WITHOUT_CLASSIFICATION	0.9999976285430094	WITHOUT_CLASSIFICATION	2.3714569905456164E-6	DEFECT
// if series are in rows, then the categories are the column keys	WITHOUT_CLASSIFICATION	0.999991476236754	WITHOUT_CLASSIFICATION	8.523763246080762E-6	DEFECT
// if series are in columns, then the categories are the row keys	WITHOUT_CLASSIFICATION	0.9999923421839687	WITHOUT_CLASSIFICATION	7.657816031254845E-6	DEFECT
//          negatives = true;	WITHOUT_CLASSIFICATION	0.9999903334099179	WITHOUT_CLASSIFICATION	9.666590082029174E-6	DEFECT
//  value = Math.pow(10,value);	WITHOUT_CLASSIFICATION	0.9999981442470948	WITHOUT_CLASSIFICATION	1.8557529053074097E-6	DEFECT
//  izV = steps*numSteps*(int)((value/minZ)/(maxZlog-minZlog)) + 2;	WITHOUT_CLASSIFICATION	0.9999993498524768	WITHOUT_CLASSIFICATION	6.501475231787942E-7	DEFECT
// super.setSeriesPaint(series, paint);	WITHOUT_CLASSIFICATION	0.9999992354605609	WITHOUT_CLASSIFICATION	7.645394390822838E-7	DEFECT
/// Squares	WITHOUT_CLASSIFICATION	0.9999921630267159	WITHOUT_CLASSIFICATION	7.836973284095055E-6	DEFECT
/// Draw N, S, E, W	WITHOUT_CLASSIFICATION	0.99994020872045	WITHOUT_CLASSIFICATION	5.979127955009955E-5	DEFECT
// no zooming possible	WITHOUT_CLASSIFICATION	0.9999950082591409	WITHOUT_CLASSIFICATION	4.9917408590765964E-6	DEFECT
// clone share data sets => add the clone as listener to the dataset	WITHOUT_CLASSIFICATION	0.999999923510664	WITHOUT_CLASSIFICATION	7.64893360260296E-8	DEFECT
// only relevant when this is a subplot	WITHOUT_CLASSIFICATION	0.9999862889814857	WITHOUT_CLASSIFICATION	1.3711018514395937E-5	DEFECT
// allocate storage for datasets, axes and renderers (all optional)	WITHOUT_CLASSIFICATION	0.9999992438443396	WITHOUT_CLASSIFICATION	7.561556604567244E-7	DEFECT
// reserve space for the domain axes...	WITHOUT_CLASSIFICATION	0.9999989295964219	WITHOUT_CLASSIFICATION	1.0704035781602527E-6	DEFECT
// reserve space for the range axes...	WITHOUT_CLASSIFICATION	0.9999979721200749	WITHOUT_CLASSIFICATION	2.0278799250272643E-6	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999997152715694	WITHOUT_CLASSIFICATION	2.84728430612526E-7	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999997152715694	WITHOUT_CLASSIFICATION	2.84728430612526E-7	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.9999988345519673	WITHOUT_CLASSIFICATION	1.1654480327608834E-6	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9999988915509193	WITHOUT_CLASSIFICATION	1.1084490807500096E-6	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9999882305999422	WITHOUT_CLASSIFICATION	1.1769400057768165E-5	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9999934724153039	WITHOUT_CLASSIFICATION	6.5275846961660764E-6	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.9999985260569212	WITHOUT_CLASSIFICATION	1.4739430788777571E-6	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.9999962445914782	WITHOUT_CLASSIFICATION	3.7554085218196424E-6	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.999995380688205	WITHOUT_CLASSIFICATION	4.619311795025875E-6	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.9999943978674419	WITHOUT_CLASSIFICATION	5.602132558146035E-6	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999978260978054	WITHOUT_CLASSIFICATION	2.1739021945781226E-6	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999977686932443	WITHOUT_CLASSIFICATION	2.2313067556242033E-6	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999977686932443	WITHOUT_CLASSIFICATION	2.2313067556242033E-6	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.999998395038559	WITHOUT_CLASSIFICATION	1.6049614409783508E-6	DEFECT
// draw the markers that are associated with a specific dataset...	WITHOUT_CLASSIFICATION	0.9999985350201648	WITHOUT_CLASSIFICATION	1.4649798352172595E-6	DEFECT
// now draw annotations and render data items...	WITHOUT_CLASSIFICATION	0.9999839276024424	WITHOUT_CLASSIFICATION	1.6072397557569027E-5	DEFECT
// draw background annotations	WITHOUT_CLASSIFICATION	0.9999947592005318	WITHOUT_CLASSIFICATION	5.240799468237208E-6	DEFECT
// render data items...	WITHOUT_CLASSIFICATION	0.9999948178402902	WITHOUT_CLASSIFICATION	5.182159709764071E-6	DEFECT
// draw foreground annotations	WITHOUT_CLASSIFICATION	0.9999939419975025	WITHOUT_CLASSIFICATION	6.058002497453004E-6	DEFECT
//  0 | 1 //  --+-- //  2 | 3	WITHOUT_CLASSIFICATION	0.9999665342361529	WITHOUT_CLASSIFICATION	3.346576384712899E-5	DEFECT
// we can't draw quadrants without a valid x-axis	WITHOUT_CLASSIFICATION	0.9999904546889863	WITHOUT_CLASSIFICATION	9.545311013642135E-6	DEFECT
// we can't draw quadrants without a valid y-axis	WITHOUT_CLASSIFICATION	0.9999891548228695	WITHOUT_CLASSIFICATION	1.084517713057948E-5	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999876563118849	WITHOUT_CLASSIFICATION	1.2343688115164436E-5	DEFECT
// can't render anything without axes	WITHOUT_CLASSIFICATION	0.9999926101475186	WITHOUT_CLASSIFICATION	7.3898524814594434E-6	DEFECT
// no default renderer available	WITHOUT_CLASSIFICATION	0.9999991643946267	WITHOUT_CLASSIFICATION	8.356053732631874E-7	DEFECT
//render series in reverse order	WITHOUT_CLASSIFICATION	0.9999905170619514	WITHOUT_CLASSIFICATION	9.482938048641166E-6	DEFECT
//render series in forward order	WITHOUT_CLASSIFICATION	0.9999865601345744	WITHOUT_CLASSIFICATION	1.3439865425519363E-5	DEFECT
// use the TextTitle class because it is a concrete subclass	WITHOUT_CLASSIFICATION	0.9999975746331643	WITHOUT_CLASSIFICATION	2.4253668357281084E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999943103952323	WITHOUT_CLASSIFICATION	5.689604767654427E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999991596207056	WITHOUT_CLASSIFICATION	8.403792943919479E-7	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999976226454868	WITHOUT_CLASSIFICATION	2.377354513257764E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999976226454868	WITHOUT_CLASSIFICATION	2.377354513257764E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999968981101935	WITHOUT_CLASSIFICATION	3.1018898063756807E-6	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999988015324678	WITHOUT_CLASSIFICATION	1.198467532230143E-6	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999988015324678	WITHOUT_CLASSIFICATION	1.198467532230143E-6	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9999924409461172	WITHOUT_CLASSIFICATION	7.559053882789531E-6	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999995609359115	WITHOUT_CLASSIFICATION	4.3906408859363846E-7	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999995609359115	WITHOUT_CLASSIFICATION	4.3906408859363846E-7	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.999999455091815	WITHOUT_CLASSIFICATION	5.449081849988277E-7	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9999858597121666	WITHOUT_CLASSIFICATION	1.4140287833310904E-5	DEFECT
// if the event was caused by a change to series visibility, then // the axis ranges might need updating...	WITHOUT_CLASSIFICATION	0.99999996159849	WITHOUT_CLASSIFICATION	3.840151000607175E-8	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.9999104683893185	WITHOUT_CLASSIFICATION	8.953161068144037E-5	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.9999104683893185	WITHOUT_CLASSIFICATION	8.953161068144037E-5	DEFECT
// set the anchor value for the vertical axis...	WITHOUT_CLASSIFICATION	0.9999991114237445	WITHOUT_CLASSIFICATION	8.885762554009895E-7	DEFECT
// grab the plot's annotations	WITHOUT_CLASSIFICATION	0.999996481534808	WITHOUT_CLASSIFICATION	3.518465192059406E-6	DEFECT
// is it a domain axis?	WITHOUT_CLASSIFICATION	0.9995727043740853	WITHOUT_CLASSIFICATION	4.2729562591467573E-4	DEFECT
// or is it a range axis?	WITHOUT_CLASSIFICATION	0.999929818347569	WITHOUT_CLASSIFICATION	7.0181652431015E-5	DEFECT
// if the axes use a linear scale, you can uncomment the code below and // switch to the alternative transX/transY calculation inside the loop // that follows - it is a little bit faster then. // // int xx = (int) dataArea.getMinX(); // int ww = (int) dataArea.getWidth(); // int yy = (int) dataArea.getMaxY(); // int hh = (int) dataArea.getHeight(); // double domainMin = this.domainAxis.getLowerBound(); // double domainLength = this.domainAxis.getUpperBound() - domainMin; // double rangeMin = this.rangeAxis.getLowerBound(); // double rangeLength = this.rangeAxis.getUpperBound() - rangeMin;	WITHOUT_CLASSIFICATION	0.9999644986333498	WITHOUT_CLASSIFICATION	3.5501366650161686E-5	DEFECT
// register the plot as a listener with its axes, datasets, and // renderers...	WITHOUT_CLASSIFICATION	0.9999996480993862	WITHOUT_CLASSIFICATION	3.519006138445318E-7	DEFECT
// perform the zoom on each domain axis	WITHOUT_CLASSIFICATION	0.9999940871775481	WITHOUT_CLASSIFICATION	5.912822451915695E-6	DEFECT
// lineVisible	WITHOUT_CLASSIFICATION	0.9999914674772211	WITHOUT_CLASSIFICATION	8.53252277880074E-6	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999868615781142	WITHOUT_CLASSIFICATION	1.3138421885812205E-5	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999998040630902	WITHOUT_CLASSIFICATION	1.9593690978323604E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999998708175747	WITHOUT_CLASSIFICATION	1.2918242522470006E-7	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999976342336766	WITHOUT_CLASSIFICATION	2.3657663234427426E-6	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.9999579608125202	WITHOUT_CLASSIFICATION	4.203918747977693E-5	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999988874930767	WITHOUT_CLASSIFICATION	1.1125069232806982E-6	DEFECT
// images considered equal only if they're the SAME object // TODO: is there a way to do a better test?	WITHOUT_CLASSIFICATION	0.7453015066555225	DEFECT	0.2546984933444774	WITHOUT_CLASSIFICATION
//int transX = (int) (xx + ww * (x - domainMin) / domainLength); //int transY = (int) (yy - hh * (y - rangeMin) / rangeLength);	WITHOUT_CLASSIFICATION	0.9999918462020024	WITHOUT_CLASSIFICATION	8.153797997459034E-6	DEFECT
// if there is an existing dataset, remove the plot from the list // of change listeners...	WITHOUT_CLASSIFICATION	0.9999961264816883	WITHOUT_CLASSIFICATION	3.873518311720838E-6	DEFECT
// plot is registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999986128961091	WITHOUT_CLASSIFICATION	1.387103890879915E-6	DEFECT
// adjust for padding...	WITHOUT_CLASSIFICATION	0.9999905533339307	WITHOUT_CLASSIFICATION	9.446666069264746E-6	DEFECT
// already calculated // already calculated	WITHOUT_CLASSIFICATION	0.9998465202491259	WITHOUT_CLASSIFICATION	1.5347975087400906E-4	DEFECT
// draw range indicators...	WITHOUT_CLASSIFICATION	0.9999951030885005	WITHOUT_CLASSIFICATION	4.896911499543901E-6	DEFECT
// draw start of normal range	WITHOUT_CLASSIFICATION	0.9999826785166951	WITHOUT_CLASSIFICATION	1.7321483304972136E-5	DEFECT
// draw start of warning range	WITHOUT_CLASSIFICATION	0.999992710280101	WITHOUT_CLASSIFICATION	7.289719899015424E-6	DEFECT
// draw start of critical range	WITHOUT_CLASSIFICATION	0.9999982811762788	WITHOUT_CLASSIFICATION	1.7188237213363036E-6	DEFECT
// draw the axis...	WITHOUT_CLASSIFICATION	0.9999953564896831	WITHOUT_CLASSIFICATION	4.643510316919828E-6	DEFECT
//cursor = midX - COLUMN_RADIUS - AXIS_GAP;	WITHOUT_CLASSIFICATION	0.9999756779754851	WITHOUT_CLASSIFICATION	2.4322024514935185E-5	DEFECT
// draw text value on screen	WITHOUT_CLASSIFICATION	0.9999980785231188	WITHOUT_CLASSIFICATION	1.9214768810789033E-6	DEFECT
//  draw units indicator	WITHOUT_CLASSIFICATION	0.9999979354055114	WITHOUT_CLASSIFICATION	2.064594488523252E-6	DEFECT
// draw thermometer outline	WITHOUT_CLASSIFICATION	0.9999978794366936	WITHOUT_CLASSIFICATION	2.1205633064929454E-6	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999584762691957	WITHOUT_CLASSIFICATION	4.152373080431874E-5	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9999941232763654	WITHOUT_CLASSIFICATION	5.8767236346213156E-6	DEFECT
// calculate the bounds of the template value	WITHOUT_CLASSIFICATION	0.9999972359695465	WITHOUT_CLASSIFICATION	2.7640304536157806E-6	DEFECT
// align this rectangle to the frameAnchor	WITHOUT_CLASSIFICATION	0.9999969659987429	WITHOUT_CLASSIFICATION	3.0340012571499374E-6	DEFECT
// add the insets	WITHOUT_CLASSIFICATION	0.9999963791611223	WITHOUT_CLASSIFICATION	3.620838877751988E-6	DEFECT
// draw the border	WITHOUT_CLASSIFICATION	0.9999949648999849	WITHOUT_CLASSIFICATION	5.0351000152263366E-6	DEFECT
// now find the text anchor point	WITHOUT_CLASSIFICATION	0.9999978516455704	WITHOUT_CLASSIFICATION	2.1483544296111527E-6	DEFECT
/* lineVisible= */	WITHOUT_CLASSIFICATION	0.9999916365336824	WITHOUT_CLASSIFICATION	8.363466317638605E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999998708175747	WITHOUT_CLASSIFICATION	1.2918242522470006E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999987690870402	WITHOUT_CLASSIFICATION	1.2309129598012714E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999989945762952	WITHOUT_CLASSIFICATION	1.005423704876086E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999989945762952	WITHOUT_CLASSIFICATION	1.005423704876086E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999997327913577	WITHOUT_CLASSIFICATION	2.67208642298142E-7	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9999941232763654	WITHOUT_CLASSIFICATION	5.8767236346213156E-6	DEFECT
// urlText	WITHOUT_CLASSIFICATION	0.9999943832508172	WITHOUT_CLASSIFICATION	5.616749182746793E-6	DEFECT
// first, expand the viewing area into a drawing frame	WITHOUT_CLASSIFICATION	0.9999992710766792	WITHOUT_CLASSIFICATION	7.289233207074415E-7	DEFECT
// draw the background if there is one...	WITHOUT_CLASSIFICATION	0.9999986373846335	WITHOUT_CLASSIFICATION	1.3626153664932727E-6	DEFECT
// draw the pointers	WITHOUT_CLASSIFICATION	0.9999990952623794	WITHOUT_CLASSIFICATION	9.047376206523961E-7	DEFECT
// draw the cap if there is one...	WITHOUT_CLASSIFICATION	0.9999959793246875	WITHOUT_CLASSIFICATION	4.020675312516075E-6	DEFECT
// now do the minor tick marks	WITHOUT_CLASSIFICATION	0.9999969929229763	WITHOUT_CLASSIFICATION	3.0070770236602467E-6	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999962736942294	WITHOUT_CLASSIFICATION	3.7263057706943347E-6	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999939294548457	WITHOUT_CLASSIFICATION	6.070545154260056E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999979318349373	WITHOUT_CLASSIFICATION	2.068165062657142E-6	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999937795729826	WITHOUT_CLASSIFICATION	6.220427017418834E-6	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.9999933737090274	WITHOUT_CLASSIFICATION	6.626290972655303E-6	DEFECT
// we don't clone the listeners	WITHOUT_CLASSIFICATION	0.9999864485168227	WITHOUT_CLASSIFICATION	1.3551483177389403E-5	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999993085414195	WITHOUT_CLASSIFICATION	6.914585804563729E-7	DEFECT
// draw the outline of the filled polygon	WITHOUT_CLASSIFICATION	0.9999987729523624	WITHOUT_CLASSIFICATION	1.2270476376384828E-6	DEFECT
// just the lines, no filling	WITHOUT_CLASSIFICATION	0.9999936416756221	WITHOUT_CLASSIFICATION	6.358324377934759E-6	DEFECT
// draw the item shapes	WITHOUT_CLASSIFICATION	0.9999966148077019	WITHOUT_CLASSIFICATION	3.385192298274875E-6	DEFECT
// SERIES VISIBLE (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999911913537073	WITHOUT_CLASSIFICATION	8.808646292691242E-6	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.999992539638591	WITHOUT_CLASSIFICATION	7.460361409025199E-6	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9999745618957019	WITHOUT_CLASSIFICATION	2.5438104298019483E-5	DEFECT
//// FILL PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997012059089959	WITHOUT_CLASSIFICATION	2.987940910040543E-4	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999998005093234	WITHOUT_CLASSIFICATION	1.9949067665458729E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999989945762952	WITHOUT_CLASSIFICATION	1.005423704876086E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999989945762952	WITHOUT_CLASSIFICATION	1.005423704876086E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999989945762952	WITHOUT_CLASSIFICATION	1.005423704876086E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999989945762952	WITHOUT_CLASSIFICATION	1.005423704876086E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999989945762952	WITHOUT_CLASSIFICATION	1.005423704876086E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999989945762952	WITHOUT_CLASSIFICATION	1.005423704876086E-6	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.999999882693289	WITHOUT_CLASSIFICATION	1.1730671110477382E-7	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999998005093234	WITHOUT_CLASSIFICATION	1.9949067665458729E-7	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999998005093234	WITHOUT_CLASSIFICATION	1.9949067665458729E-7	DEFECT
// OUTLINE PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999941817598338	WITHOUT_CLASSIFICATION	5.8182401661969486E-5	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.9999282497151487	WITHOUT_CLASSIFICATION	7.175028485130417E-5	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.9998562070791379	WITHOUT_CLASSIFICATION	1.4379292086211183E-4	DEFECT
// otherwise look up the stroke table	WITHOUT_CLASSIFICATION	0.999999531419274	WITHOUT_CLASSIFICATION	4.685807259495201E-7	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.9999759283737909	WITHOUT_CLASSIFICATION	2.4071626209162443E-5	DEFECT
// otherwise look up the shape list	WITHOUT_CLASSIFICATION	0.9999995979181086	WITHOUT_CLASSIFICATION	4.020818914046445E-7	DEFECT
// ITEM LABEL VISIBILITY...	WITHOUT_CLASSIFICATION	0.9997921385939796	WITHOUT_CLASSIFICATION	2.0786140602044727E-4	DEFECT
// otherwise look up the boolean table	WITHOUT_CLASSIFICATION	0.9999997170301148	WITHOUT_CLASSIFICATION	2.829698852502641E-7	DEFECT
// this should have been defined as a boolean primitive, because // allowing null values is a nuisance...but it is part of the final // API now, so we'll have to support it.	WITHOUT_CLASSIFICATION	0.9999924862246049	WITHOUT_CLASSIFICATION	7.5137753950902875E-6	DEFECT
//// ITEM LABEL FONT //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998086512716224	WITHOUT_CLASSIFICATION	1.9134872837768592E-4	DEFECT
//// ITEM LABEL PAINT  ////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999906850583123	WITHOUT_CLASSIFICATION	9.314941687700743E-5	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9998482970041296	WITHOUT_CLASSIFICATION	1.517029958704933E-4	DEFECT
// otherwise look up the position table	WITHOUT_CLASSIFICATION	0.9999997194043856	WITHOUT_CLASSIFICATION	2.805956144304222E-7	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9998037532430671	WITHOUT_CLASSIFICATION	1.962467569328804E-4	DEFECT
// otherwise look up the position list	WITHOUT_CLASSIFICATION	0.9999994045672894	WITHOUT_CLASSIFICATION	5.954327106228652E-7	DEFECT
// the commented out code would be better, but only if // RendererChangeEvent is immutable, which it isn't.  See if there is // a way to fix this...	WITHOUT_CLASSIFICATION	0.9996383186726496	WITHOUT_CLASSIFICATION	3.6168132735038116E-4	DEFECT
// 'paint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999993888946326	WITHOUT_CLASSIFICATION	6.111053674161375E-7	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999997864887434	WITHOUT_CLASSIFICATION	2.1351125659608743E-7	DEFECT
// 'outlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999995823376208	WITHOUT_CLASSIFICATION	4.1766237925682605E-7	DEFECT
// 'baseOutlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999996747487283	WITHOUT_CLASSIFICATION	3.2525127163193574E-7	DEFECT
// 'stroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999989790137648	WITHOUT_CLASSIFICATION	1.0209862352089628E-6	DEFECT
// 'baseStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999992607916578	WITHOUT_CLASSIFICATION	7.392083422333426E-7	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.999999882693289	WITHOUT_CLASSIFICATION	1.1730671110477382E-7	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999997864887434	WITHOUT_CLASSIFICATION	2.1351125659608743E-7	DEFECT
// shapeList // baseShape	WITHOUT_CLASSIFICATION	0.9999855253362194	WITHOUT_CLASSIFICATION	1.4474663780538555E-5	DEFECT
// 'outlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999987808496053	WITHOUT_CLASSIFICATION	1.2191503947091425E-6	DEFECT
// 'baseOutlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999990505961125	WITHOUT_CLASSIFICATION	9.494038874515092E-7	DEFECT
// 'itemLabelsVisible' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.999999636180228	WITHOUT_CLASSIFICATION	3.6381977191495096E-7	DEFECT
// 'itemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.999999374062615	WITHOUT_CLASSIFICATION	6.259373850009425E-7	DEFECT
// 'baseItemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999996845969038	WITHOUT_CLASSIFICATION	3.1540309626537345E-7	DEFECT
// 'itemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999997117920129	WITHOUT_CLASSIFICATION	2.882079871683442E-7	DEFECT
// 'baseItemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998547751284	WITHOUT_CLASSIFICATION	1.452248714789198E-7	DEFECT
// 'postiveItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999995808474013	WITHOUT_CLASSIFICATION	4.1915259869190087E-7	DEFECT
// 'baseItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999996333846988	WITHOUT_CLASSIFICATION	3.6661530119718195E-7	DEFECT
// 'negativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999992457229199	WITHOUT_CLASSIFICATION	7.542770800750013E-7	DEFECT
// 'baseNegativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999997332776709	WITHOUT_CLASSIFICATION	2.6672232909617045E-7	DEFECT
// listeners are not restored automatically, but storage must be // provided...	WITHOUT_CLASSIFICATION	0.9999278436816205	WITHOUT_CLASSIFICATION	7.215631837960708E-5	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9997617160422562	WITHOUT_CLASSIFICATION	2.3828395774388495E-4	DEFECT
// The following alternative is only supported in JDK 1.4 - we support // JDK 1.3.1 onwards // setItemLabelsVisible(Boolean.valueOf(visible));	WITHOUT_CLASSIFICATION	0.9999669533340875	WITHOUT_CLASSIFICATION	3.3046665912403393E-5	DEFECT
//System.err.print(" creating new outlier list ");	WITHOUT_CLASSIFICATION	0.9999996059817067	WITHOUT_CLASSIFICATION	3.940182933245254E-7	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995843134173743	WITHOUT_CLASSIFICATION	4.1568658262574086E-4	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999294325032637	WITHOUT_CLASSIFICATION	7.056749673620653E-5	DEFECT
// handle value outside bounds...	WITHOUT_CLASSIFICATION	0.9999994867031701	WITHOUT_CLASSIFICATION	5.132968299276107E-7	DEFECT
// handle special case where value is less that item zero	WITHOUT_CLASSIFICATION	0.9999979896377397	WITHOUT_CLASSIFICATION	2.0103622603609954E-6	DEFECT
// special case where the lowest x-value is >= xLow	WITHOUT_CLASSIFICATION	0.9999995803273274	WITHOUT_CLASSIFICATION	4.196726726786396E-7	DEFECT
// special case where the highest x-value is < xLow	WITHOUT_CLASSIFICATION	0.9999996096915357	WITHOUT_CLASSIFICATION	3.9030846426390444E-7	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.9999825213264211	WITHOUT_CLASSIFICATION	1.7478673578864087E-5	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.9999825213264211	WITHOUT_CLASSIFICATION	1.7478673578864087E-5	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.9999995471995397	WITHOUT_CLASSIFICATION	4.5280046035107367E-7	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.9999995471995397	WITHOUT_CLASSIFICATION	4.5280046035107367E-7	DEFECT
// in this case, every color has a unique value	WITHOUT_CLASSIFICATION	0.9999653352348616	WITHOUT_CLASSIFICATION	3.466476513842774E-5	DEFECT
// in this case, every color has a range of values	WITHOUT_CLASSIFICATION	0.9999687888197228	WITHOUT_CLASSIFICATION	3.1211180277174194E-5	DEFECT
// end class wafermaprenderer	WITHOUT_CLASSIFICATION	0.9999921185585975	WITHOUT_CLASSIFICATION	7.881441402442522E-6	DEFECT
// if there is no plot, there is no dataset to access...	WITHOUT_CLASSIFICATION	0.999997031539913	WITHOUT_CLASSIFICATION	2.968460086823818E-6	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any initial values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.9999374896844627	WITHOUT_CLASSIFICATION	6.251031553731853E-5	DEFECT
// when the x-values are descending, the upper bound is found by // comparing against xLow	WITHOUT_CLASSIFICATION	0.9999974024537075	WITHOUT_CLASSIFICATION	2.597546292552989E-6	DEFECT
// more values than paints so map // multiple values to the same color	WITHOUT_CLASSIFICATION	0.9999987449481126	WITHOUT_CLASSIFICATION	1.2550518874219593E-6	DEFECT
// end foreach map entry // end else	WITHOUT_CLASSIFICATION	0.9999988793888122	WITHOUT_CLASSIFICATION	1.1206111878686805E-6	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999998671055076	WITHOUT_CLASSIFICATION	1.3289449244418684E-7	DEFECT
// FIXME: calculate xxLeft and xxRight	WITHOUT_CLASSIFICATION	0.6271391654741876	WITHOUT_CLASSIFICATION	0.3728608345258125	DEFECT
// handle positive value	WITHOUT_CLASSIFICATION	0.9999942717820708	WITHOUT_CLASSIFICATION	5.728217929200218E-6	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999523455322705	WITHOUT_CLASSIFICATION	4.765446772938578E-5	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999523455322705	WITHOUT_CLASSIFICATION	4.765446772938578E-5	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999788088633793	WITHOUT_CLASSIFICATION	2.1191136620630046E-5	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999788088633793	WITHOUT_CLASSIFICATION	2.1191136620630046E-5	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999873745695529	WITHOUT_CLASSIFICATION	1.2625430447005141E-5	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999778170850996	WITHOUT_CLASSIFICATION	2.21829149003789E-5	DEFECT
// '+' because v is negative	WITHOUT_CLASSIFICATION	0.9999671204256838	WITHOUT_CLASSIFICATION	3.287957431621428E-5	DEFECT
// handle rendering separately for the two plot orientations...	WITHOUT_CLASSIFICATION	0.9999988181753499	WITHOUT_CLASSIFICATION	1.1818246500902782E-6	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.9999982610535667	WITHOUT_CLASSIFICATION	1.738946433212542E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999028241102638	WITHOUT_CLASSIFICATION	9.717588973618478E-5	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.9999515890657389	WITHOUT_CLASSIFICATION	4.8410934261109406E-5	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.999759428649939	WITHOUT_CLASSIFICATION	2.4057135006088043E-4	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999998005093234	WITHOUT_CLASSIFICATION	1.9949067665458729E-7	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9999970860004592	WITHOUT_CLASSIFICATION	2.9139995407952136E-6	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.9999982610535667	WITHOUT_CLASSIFICATION	1.738946433212542E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999028241102638	WITHOUT_CLASSIFICATION	9.717588973618478E-5	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.9999399413369777	WITHOUT_CLASSIFICATION	6.005866302229224E-5	DEFECT
// preserves old behaviour	WITHOUT_CLASSIFICATION	0.9999977978020985	WITHOUT_CLASSIFICATION	2.2021979015921143E-6	DEFECT
// contained titles	WITHOUT_CLASSIFICATION	0.9999986568304307	WITHOUT_CLASSIFICATION	1.3431695693606757E-6	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.999759428649939	WITHOUT_CLASSIFICATION	2.4057135006088043E-4	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9999997882510085	WITHOUT_CLASSIFICATION	2.1174899153630915E-7	DEFECT
// delegate	WITHOUT_CLASSIFICATION	0.999993366074127	WITHOUT_CLASSIFICATION	6.633925872906004E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999786870266955	WITHOUT_CLASSIFICATION	2.13129733045074E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999786870266955	WITHOUT_CLASSIFICATION	2.13129733045074E-5	DEFECT
// do nothing if both the line and shape are not visible	WITHOUT_CLASSIFICATION	0.999998225917794	WITHOUT_CLASSIFICATION	1.774082205928451E-6	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.9999765584998801	WITHOUT_CLASSIFICATION	2.3441500120015572E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999973195552518	WITHOUT_CLASSIFICATION	2.6804447482301565E-6	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999973195552518	WITHOUT_CLASSIFICATION	2.6804447482301565E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999992534803716	WITHOUT_CLASSIFICATION	7.465196284633529E-7	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999987360435884	WITHOUT_CLASSIFICATION	1.2639564116830769E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.999999580913433	WITHOUT_CLASSIFICATION	4.1908656701613785E-7	DEFECT
// set the default item label positions	WITHOUT_CLASSIFICATION	0.9999996337899946	WITHOUT_CLASSIFICATION	3.662100054821494E-7	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.9999900057029856	WITHOUT_CLASSIFICATION	9.99429701452394E-6	DEFECT
// highlight the background corners...	WITHOUT_CLASSIFICATION	0.9999979233166233	WITHOUT_CLASSIFICATION	2.0766833766844727E-6	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.9999984264602567	WITHOUT_CLASSIFICATION	1.5735397432773392E-6	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999877084735536	WITHOUT_CLASSIFICATION	1.2291526446420699E-5	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9997617160422562	WITHOUT_CLASSIFICATION	2.3828395774388495E-4	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999028241102638	WITHOUT_CLASSIFICATION	9.717588973618478E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999922178761256	WITHOUT_CLASSIFICATION	7.78212387436058E-6	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.999998919342303	WITHOUT_CLASSIFICATION	1.0806576969923626E-6	DEFECT
// check the value we are plotting...	WITHOUT_CLASSIFICATION	0.9999977710717426	WITHOUT_CLASSIFICATION	2.228928257329473E-6	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9999784733457192	WITHOUT_CLASSIFICATION	2.1526654280829013E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999939140652904	WITHOUT_CLASSIFICATION	6.085934709594779E-6	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9996736179033366	WITHOUT_CLASSIFICATION	3.2638209666339865E-4	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999994251274834	WITHOUT_CLASSIFICATION	5.74872516531394E-7	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999994251274834	WITHOUT_CLASSIFICATION	5.74872516531394E-7	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999995756650021	WITHOUT_CLASSIFICATION	4.2433499787176097E-7	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999995756650021	WITHOUT_CLASSIFICATION	4.2433499787176097E-7	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9988237102590501	WITHOUT_CLASSIFICATION	0.001176289740949837	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999202725497711	WITHOUT_CLASSIFICATION	7.97274502288376E-5	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.999999667986599	WITHOUT_CLASSIFICATION	3.320134010006988E-7	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999996728681539	WITHOUT_CLASSIFICATION	3.271318460754996E-7	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.999999734296218	WITHOUT_CLASSIFICATION	2.65703782026659E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999938323082546	WITHOUT_CLASSIFICATION	6.167691745374247E-6	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999990388734185	WITHOUT_CLASSIFICATION	9.611265814619404E-7	DEFECT
// defensive check	WITHOUT_CLASSIFICATION	0.9999873908402935	WITHOUT_CLASSIFICATION	1.2609159706461124E-5	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999775402153409	WITHOUT_CLASSIFICATION	2.2459784659063123E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9999627324337063	WITHOUT_CLASSIFICATION	3.7267566293723686E-5	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.999994508721316	WITHOUT_CLASSIFICATION	5.491278683999056E-6	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9999446890435779	WITHOUT_CLASSIFICATION	5.531095642212631E-5	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999775402153409	WITHOUT_CLASSIFICATION	2.2459784659063123E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9999627324337063	WITHOUT_CLASSIFICATION	3.7267566293723686E-5	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.999994508721316	WITHOUT_CLASSIFICATION	5.491278683999056E-6	DEFECT
// let the superclass handle it...	WITHOUT_CLASSIFICATION	0.9999994220815892	WITHOUT_CLASSIFICATION	5.779184107659107E-7	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999298959541321	WITHOUT_CLASSIFICATION	7.010404586791976E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999298959541321	WITHOUT_CLASSIFICATION	7.010404586791976E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999922178761256	WITHOUT_CLASSIFICATION	7.78212387436058E-6	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999922178761256	WITHOUT_CLASSIFICATION	7.78212387436058E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999932562314149	WITHOUT_CLASSIFICATION	6.743768585165308E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999932562314149	WITHOUT_CLASSIFICATION	6.743768585165308E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.999998175700652	WITHOUT_CLASSIFICATION	1.8242993480364654E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.999998175700652	WITHOUT_CLASSIFICATION	1.8242993480364654E-6	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.9999987870013937	WITHOUT_CLASSIFICATION	1.2129986063966625E-6	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.9999987870013937	WITHOUT_CLASSIFICATION	1.2129986063966625E-6	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999977406847466	WITHOUT_CLASSIFICATION	2.259315253452089E-6	DEFECT
// value 0	WITHOUT_CLASSIFICATION	0.9999947913615544	WITHOUT_CLASSIFICATION	5.208638445565322E-6	DEFECT
// get the clipping values...	WITHOUT_CLASSIFICATION	0.9999982205256968	WITHOUT_CLASSIFICATION	1.7794743033669892E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.999999580913433	WITHOUT_CLASSIFICATION	4.1908656701613785E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.999999580913433	WITHOUT_CLASSIFICATION	4.1908656701613785E-7	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999939140652904	WITHOUT_CLASSIFICATION	6.085934709594779E-6	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.999994508721316	WITHOUT_CLASSIFICATION	5.491278683999056E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999298959541321	WITHOUT_CLASSIFICATION	7.010404586791976E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999298959541321	WITHOUT_CLASSIFICATION	7.010404586791976E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999922178761256	WITHOUT_CLASSIFICATION	7.78212387436058E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999932562314149	WITHOUT_CLASSIFICATION	6.743768585165308E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.999998175700652	WITHOUT_CLASSIFICATION	1.8242993480364654E-6	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9999955232236527	WITHOUT_CLASSIFICATION	4.476776347304574E-6	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.999994584401666	WITHOUT_CLASSIFICATION	5.415598333977666E-6	DEFECT
// DRAW THE BARS...	WITHOUT_CLASSIFICATION	0.9998519892796999	WITHOUT_CLASSIFICATION	1.4801072030020247E-4	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999895541215467	WITHOUT_CLASSIFICATION	1.0445878453434308E-5	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999773997285172	WITHOUT_CLASSIFICATION	2.2600271482810754E-5	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999802331926696	WITHOUT_CLASSIFICATION	1.976680733044905E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999884886457593	WITHOUT_CLASSIFICATION	1.1511354240679972E-5	DEFECT
// X	WITHOUT_CLASSIFICATION	0.9999592326616118	WITHOUT_CLASSIFICATION	4.07673383881723E-5	DEFECT
// Y	WITHOUT_CLASSIFICATION	0.9999775044281884	WITHOUT_CLASSIFICATION	2.2495571811588734E-5	DEFECT
// subtitle 1 is the legend	WITHOUT_CLASSIFICATION	0.999987538449374	WITHOUT_CLASSIFICATION	1.2461550625883218E-5	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999778170850996	WITHOUT_CLASSIFICATION	2.21829149003789E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999939140652904	WITHOUT_CLASSIFICATION	6.085934709594779E-6	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999775402153409	WITHOUT_CLASSIFICATION	2.2459784659063123E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9999627324337063	WITHOUT_CLASSIFICATION	3.7267566293723686E-5	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.999994508721316	WITHOUT_CLASSIFICATION	5.491278683999056E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999298959541321	WITHOUT_CLASSIFICATION	7.010404586791976E-5	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999932562314149	WITHOUT_CLASSIFICATION	6.743768585165308E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.999998175700652	WITHOUT_CLASSIFICATION	1.8242993480364654E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.999998175700652	WITHOUT_CLASSIFICATION	1.8242993480364654E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999895541215467	WITHOUT_CLASSIFICATION	1.0445878453434308E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999895541215467	WITHOUT_CLASSIFICATION	1.0445878453434308E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999884886457593	WITHOUT_CLASSIFICATION	1.1511354240679972E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999884886457593	WITHOUT_CLASSIFICATION	1.1511354240679972E-5	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.9999989508428678	WITHOUT_CLASSIFICATION	1.0491571321147808E-6	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999982794875846	WITHOUT_CLASSIFICATION	1.7205124155313553E-6	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999606327382932	WITHOUT_CLASSIFICATION	3.936726170690643E-5	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.9999876129887656	WITHOUT_CLASSIFICATION	1.2387011234420803E-5	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.9999693758158208	WITHOUT_CLASSIFICATION	3.062418417917393E-5	DEFECT
//plotBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999952457683859	WITHOUT_CLASSIFICATION	4.754231614090763E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999876563118849	WITHOUT_CLASSIFICATION	1.2343688115164436E-5	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999778170850996	WITHOUT_CLASSIFICATION	2.21829149003789E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999028241102638	WITHOUT_CLASSIFICATION	9.717588973618478E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999028241102638	WITHOUT_CLASSIFICATION	9.717588973618478E-5	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.999999580913433	WITHOUT_CLASSIFICATION	4.1908656701613785E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.999999580913433	WITHOUT_CLASSIFICATION	4.1908656701613785E-7	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999875140778858	WITHOUT_CLASSIFICATION	1.2485922114345557E-5	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9999784733457192	WITHOUT_CLASSIFICATION	2.1526654280829013E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999939140652904	WITHOUT_CLASSIFICATION	6.085934709594779E-6	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999990388734185	WITHOUT_CLASSIFICATION	9.611265814619404E-7	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999990388734185	WITHOUT_CLASSIFICATION	9.611265814619404E-7	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999990388734185	WITHOUT_CLASSIFICATION	9.611265814619404E-7	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999298959541321	WITHOUT_CLASSIFICATION	7.010404586791976E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999298959541321	WITHOUT_CLASSIFICATION	7.010404586791976E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999884886457593	WITHOUT_CLASSIFICATION	1.1511354240679972E-5	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999982794875846	WITHOUT_CLASSIFICATION	1.7205124155313553E-6	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999606327382932	WITHOUT_CLASSIFICATION	3.936726170690643E-5	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999993770189866	WITHOUT_CLASSIFICATION	6.22981013313852E-7	DEFECT
// do nothing if item is not visible or null	WITHOUT_CLASSIFICATION	0.9999658507140484	WITHOUT_CLASSIFICATION	3.4149285951497576E-5	DEFECT
// 100 percent, so it will not apply unless changed	WITHOUT_CLASSIFICATION	0.999997030429312	WITHOUT_CLASSIFICATION	2.9695706880321245E-6	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9999984073214719	WITHOUT_CLASSIFICATION	1.5926785280234476E-6	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.857806576401427	WITHOUT_CLASSIFICATION	0.142193423598573	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999028241102638	WITHOUT_CLASSIFICATION	9.717588973618478E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999786870266955	WITHOUT_CLASSIFICATION	2.13129733045074E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999973195552518	WITHOUT_CLASSIFICATION	2.6804447482301565E-6	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999973195552518	WITHOUT_CLASSIFICATION	2.6804447482301565E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999992534803716	WITHOUT_CLASSIFICATION	7.465196284633529E-7	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999982794875846	WITHOUT_CLASSIFICATION	1.7205124155313553E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999704840579429	WITHOUT_CLASSIFICATION	2.9515942057111828E-5	DEFECT
// in the following code, barL0 is (in Java2D coordinates) the LEFT // end of the bar for a horizontal bar chart, and the TOP end of the // bar for a vertical bar chart.  Whether this is the BASE of the bar // or not depends also on (a) whether the data value is 'negative' // relative to the base value and (b) whether or not the range axis is // inverted.  This only matters if/when we apply the minimumBarLength // attribute, because we should extend the non-base end of the bar	WITHOUT_CLASSIFICATION	0.9998519058815512	WITHOUT_CLASSIFICATION	1.4809411844880804E-4	DEFECT
// switch x and y	WITHOUT_CLASSIFICATION	0.9999960529231147	WITHOUT_CLASSIFICATION	3.947076885289442E-6	DEFECT
// or: x1s + 2*(x1-x1s)	WITHOUT_CLASSIFICATION	0.999965082025947	WITHOUT_CLASSIFICATION	3.491797405293841E-5	DEFECT
// or: x0s + 2*(x0-x0s)	WITHOUT_CLASSIFICATION	0.9999601495065951	WITHOUT_CLASSIFICATION	3.9850493404966264E-5	DEFECT
// extend x0's flat bar	WITHOUT_CLASSIFICATION	0.9999916448916897	WITHOUT_CLASSIFICATION	8.355108310239528E-6	DEFECT
// upright bar	WITHOUT_CLASSIFICATION	0.9999955035397319	WITHOUT_CLASSIFICATION	4.496460268177202E-6	DEFECT
// x1's flat bar	WITHOUT_CLASSIFICATION	0.9999866167480178	WITHOUT_CLASSIFICATION	1.3383251982223761E-5	DEFECT
//standard deviation lines	WITHOUT_CLASSIFICATION	0.9999951547393143	WITHOUT_CLASSIFICATION	4.8452606856870915E-6	DEFECT
//// OUTLINE PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999269667225039	WITHOUT_CLASSIFICATION	7.303327749603746E-5	DEFECT
//plotOutlinePaint;	WITHOUT_CLASSIFICATION	0.9999885418490678	WITHOUT_CLASSIFICATION	1.1458150932103627E-5	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999704840579429	WITHOUT_CLASSIFICATION	2.9515942057111828E-5	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999704840579429	WITHOUT_CLASSIFICATION	2.9515942057111828E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999992534803716	WITHOUT_CLASSIFICATION	7.465196284633529E-7	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999987360435884	WITHOUT_CLASSIFICATION	1.2639564116830769E-6	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999775402153409	WITHOUT_CLASSIFICATION	2.2459784659063123E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9999627324337063	WITHOUT_CLASSIFICATION	3.7267566293723686E-5	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999773997285172	WITHOUT_CLASSIFICATION	2.2600271482810754E-5	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999802331926696	WITHOUT_CLASSIFICATION	1.976680733044905E-5	DEFECT
// draw the standard deviation lines *before* the shapes (if they're // visible) - it looks better if the shape fill colour is different to // the line colour	WITHOUT_CLASSIFICATION	0.9999998819847615	WITHOUT_CLASSIFICATION	1.180152385795845E-7	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.9999039497139129	WITHOUT_CLASSIFICATION	9.605028608711085E-5	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.9999256434401181	WITHOUT_CLASSIFICATION	7.435655988195112E-5	DEFECT
// there are no fields to check	WITHOUT_CLASSIFICATION	0.9999466196821696	WITHOUT_CLASSIFICATION	5.338031783053014E-5	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------------- * CategoryItemRenderer.java * ------------------------- * * (C) Copyright 2001-2011, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Mark Watson (www.markwatson.com); * * Changes * ------- * 23-Oct-2001 : Version 1 (DG); * 16-Jan-2002 : Renamed HorizontalCategoryItemRenderer.java *               --> CategoryItemRenderer.java (DG); * 05-Feb-2002 : Changed return type of the drawCategoryItem method from void *               to Shape, as part of the tooltips implementation (DG) * *               NOTE (30-May-2002) : this has subsequently been changed back *               to void, tooltips are now collected along with entities in *               ChartRenderingInfo (DG); * * 14-Mar-2002 : Added the initialise method, and changed all bar plots to use *               this renderer (DG); * 23-May-2002 : Added ChartRenderingInfo to the initialise method (DG); * 29-May-2002 : Added the getAxisArea(Rectangle2D) method (DG); * 06-Jun-2002 : Updated Javadoc comments (DG); * 26-Jun-2002 : Added range axis to the initialise method (DG); * 24-Sep-2002 : Added getLegendItem() method (DG); * 23-Oct-2002 : Added methods to get/setToolTipGenerator (DG); * 05-Nov-2002 : Replaced references to CategoryDataset with TableDataset (DG); * 06-Nov-2002 : Added the domain axis to the drawCategoryItem method.  Renamed *               drawCategoryItem() --> drawItem() (DG); * 20-Nov-2002 : Changed signature of drawItem() method to reflect use of *               TableDataset (DG); * 26-Nov-2002 : Replaced the isStacked() method with the getRangeType() *               method (DG); * 08-Jan-2003 : Changed getSeriesCount() --> getRowCount() and *               getCategoryCount() --> getColumnCount() (DG); * 09-Jan-2003 : Changed name of grid-line methods (DG); * 21-Jan-2003 : Merged TableDataset with CategoryDataset (DG); * 10-Apr-2003 : Changed CategoryDataset to KeyedValues2DDataset in *               drawItem() method (DG); * 29-Apr-2003 : Eliminated Renderer interface (DG); * 02-Sep-2003 : Fix for bug 790407 (DG); * 16-Sep-2003 : Changed ChartRenderingInfo --> PlotRenderingInfo (DG); * 20-Oct-2003 : Added setOutlinePaint() method (DG); * 06-Feb-2004 : Added missing methods, and moved deprecated methods (DG); * 19-Feb-2004 : Added extra setXXXLabelsVisible() methods (DG); * 29-Apr-2004 : Changed Integer --> int in initialise() method (DG); * 18-May-2004 : Added methods for item label paint (DG); * 05-Nov-2004 : Added getPassCount() method and 'pass' parameter to drawItem() *               method (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds (DG); * 11-Jan-2005 : Removed deprecated code in preparation for 1.0.0 release (DG); * 23-Feb-2005 : Now extends LegendItemSource (DG); * 20-Apr-2005 : Renamed CategoryLabelGenerator *               --> CategoryItemLabelGenerator (DG); * 20-May-2005 : Added drawDomainMarker() method (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 20-Feb-2007 : Updated API docs (DG); * 19-Apr-2007 : Deprecated seriesVisible and seriesVisibleInLegend flags (DG); * 20-Apr-2007 : Deprecated paint, fillPaint, outlinePaint, stroke, *               outlineStroke, shape, itemLabelsVisible, itemLabelFont, *               itemLabelPaint, positiveItemLabelPosition, *               negativeItemLabelPosition and createEntities override *               fields (DG); * 26-Jun-2008 : Added new method required for crosshair support - THIS CHANGES *               THE API as of version 1.0.11 (DG); * */	WITHOUT_CLASSIFICATION	0.9999999573379481	WITHOUT_CLASSIFICATION	4.266205192977182E-8	DEFECT
//// PAINT /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999621835007289	WITHOUT_CLASSIFICATION	3.7816499271199624E-5	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.8587384179416337	WITHOUT_CLASSIFICATION	0.1412615820583662	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.901963199633734	WITHOUT_CLASSIFICATION	0.09803680036626596	DEFECT
//// FILL PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997012059089959	WITHOUT_CLASSIFICATION	2.987940910040543E-4	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9998482970041296	WITHOUT_CLASSIFICATION	1.517029958704933E-4	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9998037532430671	WITHOUT_CLASSIFICATION	1.962467569328804E-4	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9996736179033366	WITHOUT_CLASSIFICATION	3.2638209666339865E-4	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9988237102590501	WITHOUT_CLASSIFICATION	0.001176289740949837	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.999998175700652	WITHOUT_CLASSIFICATION	1.8242993480364654E-6	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.8587384179416337	WITHOUT_CLASSIFICATION	0.1412615820583662	DEFECT
// ITEM LABELS VISIBLE	WITHOUT_CLASSIFICATION	0.999723850565173	WITHOUT_CLASSIFICATION	2.7614943482696816E-4	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.8846763221127498	WITHOUT_CLASSIFICATION	0.11532367788725013	DEFECT
//// STROKE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998570901478366	WITHOUT_CLASSIFICATION	1.4290985216335476E-4	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.6164174410272166	WITHOUT_CLASSIFICATION	0.3835825589727835	DEFECT
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.7474274423977907	WITHOUT_CLASSIFICATION	0.25257255760220926	DEFECT
//// OUTLINE STROKE ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998663825014563	WITHOUT_CLASSIFICATION	1.3361749854364242E-4	DEFECT
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.6486485131117955	WITHOUT_CLASSIFICATION	0.35135148688820456	DEFECT
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.786281473018565	WITHOUT_CLASSIFICATION	0.21371852698143495	DEFECT
//// SHAPE /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999522470652461	WITHOUT_CLASSIFICATION	4.7752934753931925E-5	DEFECT
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.8002882896251707	WITHOUT_CLASSIFICATION	0.1997117103748292	DEFECT
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.8008798489289017	WITHOUT_CLASSIFICATION	0.19912015107109832	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999902186198251	WITHOUT_CLASSIFICATION	9.78138017485636E-6	DEFECT
// FIXME: add setSeriesItemLabelGenerator(int, CategoryItemLabelGenerator, //            boolean)	WITHOUT_CLASSIFICATION	0.9707174738039089	WITHOUT_CLASSIFICATION	0.029282526196090987	DEFECT
// FIXME: add setBaseToolTipGenerator(CategoryToolTipGenerator, boolean) ?	WITHOUT_CLASSIFICATION	0.8226813349017111	WITHOUT_CLASSIFICATION	0.17731866509828892	DEFECT
//// ITEM LABEL FONT  //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997168519122714	WITHOUT_CLASSIFICATION	2.831480877285222E-4	DEFECT
// FIXME: add setSeriesItemLabelFont(int, Font, boolean) ?	WITHOUT_CLASSIFICATION	0.8780777931703181	WITHOUT_CLASSIFICATION	0.12192220682968188	DEFECT
// FIXME: add setBaseItemLabelFont(Font, boolean) ?	WITHOUT_CLASSIFICATION	0.8722308702372753	WITHOUT_CLASSIFICATION	0.12776912976272461	DEFECT
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999906850583123	WITHOUT_CLASSIFICATION	9.314941687700743E-5	DEFECT
// FIXME: add setSeriesItemLabelPaint(int, Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.9113379316423856	WITHOUT_CLASSIFICATION	0.08866206835761432	DEFECT
// FIXME: add setBaseItemLabelPaint(Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.9301518600593782	WITHOUT_CLASSIFICATION	0.06984813994062178	DEFECT
// ITEM URL GENERATOR	WITHOUT_CLASSIFICATION	0.99971300176213	WITHOUT_CLASSIFICATION	2.869982378700028E-4	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999996906593327	WITHOUT_CLASSIFICATION	3.0934066727780497E-7	DEFECT
/*&& state.getBarWidth() > renderer.BAR_OUTLINE_WIDTH_THRESHOLD*/	WITHOUT_CLASSIFICATION	0.999970476517727	WITHOUT_CLASSIFICATION	2.9523482272999695E-5	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9999998216087617	WITHOUT_CLASSIFICATION	1.7839123837643422E-7	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999902186198251	WITHOUT_CLASSIFICATION	9.78138017485636E-6	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.9999765584998801	WITHOUT_CLASSIFICATION	2.3441500120015572E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999973195552518	WITHOUT_CLASSIFICATION	2.6804447482301565E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999992534803716	WITHOUT_CLASSIFICATION	7.465196284633529E-7	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999992534803716	WITHOUT_CLASSIFICATION	7.465196284633529E-7	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999987360435884	WITHOUT_CLASSIFICATION	1.2639564116830769E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.999999580913433	WITHOUT_CLASSIFICATION	4.1908656701613785E-7	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.9999900057029856	WITHOUT_CLASSIFICATION	9.99429701452394E-6	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.9999984264602567	WITHOUT_CLASSIFICATION	1.5735397432773392E-6	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.999998919342303	WITHOUT_CLASSIFICATION	1.0806576969923626E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999939140652904	WITHOUT_CLASSIFICATION	6.085934709594779E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999895541215467	WITHOUT_CLASSIFICATION	1.0445878453434308E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999884886457593	WITHOUT_CLASSIFICATION	1.1511354240679972E-5	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999992978927802	WITHOUT_CLASSIFICATION	7.021072198267587E-7	DEFECT
// 100 percent, so it will not apply unless // changed	WITHOUT_CLASSIFICATION	0.9999975898550473	WITHOUT_CLASSIFICATION	2.4101449527835487E-6	DEFECT
// set the outline paint to fully transparent, then the legend shape // will just have the same colour as the lines drawn by the renderer	WITHOUT_CLASSIFICATION	0.999999374419646	WITHOUT_CLASSIFICATION	6.255803540181486E-7	DEFECT
// first check the number we are plotting...	WITHOUT_CLASSIFICATION	0.999992949707779	WITHOUT_CLASSIFICATION	7.050292221100177E-6	DEFECT
// reset the min and max	WITHOUT_CLASSIFICATION	0.9999980156788957	WITHOUT_CLASSIFICATION	1.9843211043283325E-6	DEFECT
// connect to the previous point	WITHOUT_CLASSIFICATION	0.9999995999813378	WITHOUT_CLASSIFICATION	4.0001866217567037E-7	DEFECT
// create a line renderer only	WITHOUT_CLASSIFICATION	0.9999984508271905	WITHOUT_CLASSIFICATION	1.5491728094547206E-6	DEFECT
// higlight the background corners...	WITHOUT_CLASSIFICATION	0.9999979522052443	WITHOUT_CLASSIFICATION	2.047794755736644E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999786870266955	WITHOUT_CLASSIFICATION	2.13129733045074E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999990388734185	WITHOUT_CLASSIFICATION	9.611265814619404E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.999998175700652	WITHOUT_CLASSIFICATION	1.8242993480364654E-6	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999773997285172	WITHOUT_CLASSIFICATION	2.2600271482810754E-5	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999802331926696	WITHOUT_CLASSIFICATION	1.976680733044905E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999884886457593	WITHOUT_CLASSIFICATION	1.1511354240679972E-5	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.9999039497139129	WITHOUT_CLASSIFICATION	9.605028608711085E-5	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.9999256434401181	WITHOUT_CLASSIFICATION	7.435655988195112E-5	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9999798558171835	WITHOUT_CLASSIFICATION	2.014418281646283E-5	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999998688545324	WITHOUT_CLASSIFICATION	1.3114546757808927E-7	DEFECT
// treat the last column value as an absolute	WITHOUT_CLASSIFICATION	0.999998834043953	WITHOUT_CLASSIFICATION	1.1659560470506103E-6	DEFECT
// only needed if calculating percentages	WITHOUT_CLASSIFICATION	0.9999963382831127	WITHOUT_CLASSIFICATION	3.6617168871471114E-6	DEFECT
// calculate the box width	WITHOUT_CLASSIFICATION	0.9999549159381161	WITHOUT_CLASSIFICATION	4.5084061883905116E-5	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9999993800974785	WITHOUT_CLASSIFICATION	6.199025215656554E-7	DEFECT
// offset the start of the box if the box width is smaller than // the category width	WITHOUT_CLASSIFICATION	0.9999925068268689	WITHOUT_CLASSIFICATION	7.493173131066837E-6	DEFECT
// draw the box...	WITHOUT_CLASSIFICATION	0.9999947620822524	WITHOUT_CLASSIFICATION	5.237917747754048E-6	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.9999958150742201	WITHOUT_CLASSIFICATION	4.184925779910256E-6	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999970143302115	WITHOUT_CLASSIFICATION	2.9856697884697574E-6	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.901963199633734	WITHOUT_CLASSIFICATION	0.09803680036626596	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9999993800974785	WITHOUT_CLASSIFICATION	6.199025215656554E-7	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.9999958150742201	WITHOUT_CLASSIFICATION	4.184925779910256E-6	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999970143302115	WITHOUT_CLASSIFICATION	2.9856697884697574E-6	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.999926169831009	WITHOUT_CLASSIFICATION	7.383016899097677E-5	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.9999766255168318	WITHOUT_CLASSIFICATION	2.3374483168234385E-5	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999942384027105	WITHOUT_CLASSIFICATION	5.761597289520214E-6	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999942384027105	WITHOUT_CLASSIFICATION	5.761597289520214E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999956964519446	WITHOUT_CLASSIFICATION	4.303548055350295E-6	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.9999938767012485	WITHOUT_CLASSIFICATION	6.123298751575678E-6	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.9999938767012485	WITHOUT_CLASSIFICATION	6.123298751575678E-6	DEFECT
// offset the start of the box if the box width is smaller than the // category width	WITHOUT_CLASSIFICATION	0.9999956955359633	WITHOUT_CLASSIFICATION	4.304464036699172E-6	DEFECT
// draw the body...	WITHOUT_CLASSIFICATION	0.9999959367843141	WITHOUT_CLASSIFICATION	4.063215685873004E-6	DEFECT
// draw yOutliers...	WITHOUT_CLASSIFICATION	0.9999929940535148	WITHOUT_CLASSIFICATION	7.005946485225664E-6	DEFECT
// draw farout indicators	WITHOUT_CLASSIFICATION	0.9999950451141507	WITHOUT_CLASSIFICATION	4.954885849222681E-6	DEFECT
// start from Y = rangeBase	WITHOUT_CLASSIFICATION	0.9999926943539741	WITHOUT_CLASSIFICATION	7.305646025938247E-6	DEFECT
// Process outliers. Each outlier is either added to the // appropriate outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999998611294525	WITHOUT_CLASSIFICATION	1.388705474896999E-7	DEFECT
// disable visible items optimisation - it doesn't work for this // renderer...	WITHOUT_CLASSIFICATION	0.9999712285607683	WITHOUT_CLASSIFICATION	2.877143923180963E-5	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.999848762221412	WITHOUT_CLASSIFICATION	1.5123777858816546E-4	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999946153004904	WITHOUT_CLASSIFICATION	5.384699509732035E-6	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999991513089217	WITHOUT_CLASSIFICATION	8.486910783692193E-7	DEFECT
// The first point is (x, this.baseYValue)	WITHOUT_CLASSIFICATION	0.9999865476099807	WITHOUT_CLASSIFICATION	1.3452390019280856E-5	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999998491686461	WITHOUT_CLASSIFICATION	1.5083135389472195E-7	DEFECT
// not just a horizontal bar but need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9999962838095947	WITHOUT_CLASSIFICATION	3.716190405348028E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999847960454908	WITHOUT_CLASSIFICATION	1.5203954509076454E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999895541215467	WITHOUT_CLASSIFICATION	1.0445878453434308E-5	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999946153004904	WITHOUT_CLASSIFICATION	5.384699509732035E-6	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999853969996346	WITHOUT_CLASSIFICATION	1.4603000365388425E-5	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999989671667329	WITHOUT_CLASSIFICATION	1.0328332670677918E-6	DEFECT
// Check if the item is the last item for the series or if it // is a NULL value and number of items > 0.  We can't draw an area for // a single point.	WITHOUT_CLASSIFICATION	0.9999958273626633	WITHOUT_CLASSIFICATION	4.172637336636298E-6	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999994278684494	WITHOUT_CLASSIFICATION	5.721315505201443E-7	DEFECT
// fill the polygon	WITHOUT_CLASSIFICATION	0.9999889908220071	WITHOUT_CLASSIFICATION	1.1009177992974605E-5	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999984175789879	WITHOUT_CLASSIFICATION	1.5824210121331858E-6	DEFECT
// start new area when needed (see above)	WITHOUT_CLASSIFICATION	0.9999993201723167	WITHOUT_CLASSIFICATION	6.798276833185272E-7	DEFECT
// do nothing...this is just a hook for subclasses	WITHOUT_CLASSIFICATION	0.9999968188545758	WITHOUT_CLASSIFICATION	3.181145424322433E-6	DEFECT
// TODO getSeriesShape(n).getBounds().width / 2;	WITHOUT_CLASSIFICATION	0.9983249530709838	WITHOUT_CLASSIFICATION	0.0016750469290161816	DEFECT
// TODO getSeriesShape(n).getBounds().height / 2;	WITHOUT_CLASSIFICATION	0.9989566851460518	WITHOUT_CLASSIFICATION	0.0010433148539481232	DEFECT
// can't draw anything	WITHOUT_CLASSIFICATION	0.9999461667452261	WITHOUT_CLASSIFICATION	5.3833254773927064E-5	DEFECT
// draw optional guide lines	WITHOUT_CLASSIFICATION	0.9999993658550853	WITHOUT_CLASSIFICATION	6.34144914586951E-7	DEFECT
// calculate the arrow head and draw it...	WITHOUT_CLASSIFICATION	0.9999848648907838	WITHOUT_CLASSIFICATION	1.5135109216362225E-5	DEFECT
// orientation is HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999659107686459	WITHOUT_CLASSIFICATION	3.408923135413761E-5	DEFECT
//labelLinkStyle;	WITHOUT_CLASSIFICATION	0.9999750075414775	WITHOUT_CLASSIFICATION	2.499245852249941E-5	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.9999972896425626	WITHOUT_CLASSIFICATION	2.7103574374121353E-6	DEFECT
// check if either series is a degenerate case (i.e. less than 2 points)	WITHOUT_CLASSIFICATION	0.9999923752495588	WITHOUT_CLASSIFICATION	7.6247504412481285E-6	DEFECT
// check if series are disjoint (i.e. domain-spans do not overlap)	WITHOUT_CLASSIFICATION	0.9999986872891807	WITHOUT_CLASSIFICATION	1.3127108193367628E-6	DEFECT
// polygon definitions	WITHOUT_CLASSIFICATION	0.9999950383488045	WITHOUT_CLASSIFICATION	4.961651195512518E-6	DEFECT
// state	WITHOUT_CLASSIFICATION	0.9999954032695807	WITHOUT_CLASSIFICATION	4.596730419275823E-6	DEFECT
// actual value set below	WITHOUT_CLASSIFICATION	0.9999943071887014	WITHOUT_CLASSIFICATION	5.692811298508403E-6	DEFECT
// if a subtrahend is not specified, assume it is zero	WITHOUT_CLASSIFICATION	0.9999967374755724	WITHOUT_CLASSIFICATION	3.2625244276760067E-6	DEFECT
// fast-forward through leading tails	WITHOUT_CLASSIFICATION	0.9999993871422242	WITHOUT_CLASSIFICATION	6.128577756788457E-7	DEFECT
// get the x and y coordinates	WITHOUT_CLASSIFICATION	0.999996889744643	WITHOUT_CLASSIFICATION	3.110255356988903E-6	DEFECT
// minuend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9999957533095096	WITHOUT_CLASSIFICATION	4.24669049042898E-6	DEFECT
// subtrahend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9999982361979883	WITHOUT_CLASSIFICATION	1.7638020116358093E-6	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.9999988493758644	WITHOUT_CLASSIFICATION	1.1506241356188736E-6	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9999942510657288	WITHOUT_CLASSIFICATION	5.748934271146161E-6	DEFECT
// start of algorithm	WITHOUT_CLASSIFICATION	0.9999940173676095	WITHOUT_CLASSIFICATION	5.982632390529556E-6	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9985567102284115	WITHOUT_CLASSIFICATION	0.0014432897715885118	DEFECT
// deassert b_*FastForward (only matters for 1st time through loop)	WITHOUT_CLASSIFICATION	0.9999980929732638	WITHOUT_CLASSIFICATION	1.9070267361471617E-6	DEFECT
// check for intersect	WITHOUT_CLASSIFICATION	0.9999861099468307	WITHOUT_CLASSIFICATION	1.3890053169387307E-5	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999940774929729	WITHOUT_CLASSIFICATION	5.922507027177749E-6	DEFECT
// compute common denominator	WITHOUT_CLASSIFICATION	0.9999969323742681	WITHOUT_CLASSIFICATION	3.067625731793326E-6	DEFECT
// compute common deltas	WITHOUT_CLASSIFICATION	0.9999979345481674	WITHOUT_CLASSIFICATION	2.06545183252329E-6	DEFECT
// compute numerators	WITHOUT_CLASSIFICATION	0.9999905845895729	WITHOUT_CLASSIFICATION	9.415410427021107E-6	DEFECT
// check if previously colinear	WITHOUT_CLASSIFICATION	0.9999975562976418	WITHOUT_CLASSIFICATION	2.443702358206957E-6	DEFECT
// clear colinear points and flag	WITHOUT_CLASSIFICATION	0.9999975633326463	WITHOUT_CLASSIFICATION	2.4366673537204044E-6	DEFECT
// set new starting point for the polygon	WITHOUT_CLASSIFICATION	0.9999996677018803	WITHOUT_CLASSIFICATION	3.3229811968051435E-7	DEFECT
// compute slope components	WITHOUT_CLASSIFICATION	0.9999982024097421	WITHOUT_CLASSIFICATION	1.7975902578506028E-6	DEFECT
// test if both grahphs have a vertical rise at the same x-value	WITHOUT_CLASSIFICATION	0.9999997826646425	WITHOUT_CLASSIFICATION	2.173353574222974E-7	DEFECT
// check if the line segments intersect	WITHOUT_CLASSIFICATION	0.9999980081646473	WITHOUT_CLASSIFICATION	1.9918353526943485E-6	DEFECT
// compute the point of intersection	WITHOUT_CLASSIFICATION	0.999997096755329	WITHOUT_CLASSIFICATION	2.9032446709552114E-6	DEFECT
// advance minuend and subtrahend to intesect	WITHOUT_CLASSIFICATION	0.9999997860518223	WITHOUT_CLASSIFICATION	2.139481776557254E-7	DEFECT
// add intersection point to the polygon	WITHOUT_CLASSIFICATION	0.9999991533794848	WITHOUT_CLASSIFICATION	8.466205152815615E-7	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9999995786691281	WITHOUT_CLASSIFICATION	4.2133087179753654E-7	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.9999944728194651	WITHOUT_CLASSIFICATION	5.52718053497634E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999847960454908	WITHOUT_CLASSIFICATION	1.5203954509076454E-5	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.999992539638591	WITHOUT_CLASSIFICATION	7.460361409025199E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999987360435884	WITHOUT_CLASSIFICATION	1.2639564116830769E-6	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999984175789879	WITHOUT_CLASSIFICATION	1.5824210121331858E-6	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.9999988493758644	WITHOUT_CLASSIFICATION	1.1506241356188736E-6	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9999942510657288	WITHOUT_CLASSIFICATION	5.748934271146161E-6	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9999995786691281	WITHOUT_CLASSIFICATION	4.2133087179753654E-7	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.9999944728194651	WITHOUT_CLASSIFICATION	5.52718053497634E-6	DEFECT
// set the maxY and minY values to intersect y-value	WITHOUT_CLASSIFICATION	0.9999992707019043	WITHOUT_CLASSIFICATION	7.292980956525754E-7	DEFECT
// add interection point to new polygon	WITHOUT_CLASSIFICATION	0.9999966205092066	WITHOUT_CLASSIFICATION	3.3794907933127453E-6	DEFECT
// advance the minuend if needed	WITHOUT_CLASSIFICATION	0.9999977339288645	WITHOUT_CLASSIFICATION	2.2660711354575988E-6	DEFECT
// advance the subtrahend if needed	WITHOUT_CLASSIFICATION	0.9999993972214126	WITHOUT_CLASSIFICATION	6.027785873922892E-7	DEFECT
// check if the final polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.999995889420682	WITHOUT_CLASSIFICATION	4.110579317968834E-6	DEFECT
// consider last point of minuend and subtrahend for determining // positivity	WITHOUT_CLASSIFICATION	0.9999999308592994	WITHOUT_CLASSIFICATION	6.914070058428099E-8	DEFECT
// add the last point of the minuned and subtrahend	WITHOUT_CLASSIFICATION	0.9999999542430683	WITHOUT_CLASSIFICATION	4.57569317270346E-8	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999874520569303	WITHOUT_CLASSIFICATION	1.254794306962627E-5	DEFECT
//// VISIBLE //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999354678003315	WITHOUT_CLASSIFICATION	6.453219966859741E-5	DEFECT
//// PAINT ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999621835007289	WITHOUT_CLASSIFICATION	3.7816499271199624E-5	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999998671055076	WITHOUT_CLASSIFICATION	1.3289449244418684E-7	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.857806576401427	WITHOUT_CLASSIFICATION	0.142193423598573	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.8846763221127498	WITHOUT_CLASSIFICATION	0.11532367788725013	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.999999530797549	WITHOUT_CLASSIFICATION	4.6920245099304426E-7	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999986956502397	WITHOUT_CLASSIFICATION	1.3043497604158758E-6	DEFECT
//// OUTLINE PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999269667225039	WITHOUT_CLASSIFICATION	7.303327749603746E-5	DEFECT
// bad axisNumber	WITHOUT_CLASSIFICATION	0.9999888534788759	WITHOUT_CLASSIFICATION	1.1146521124032418E-5	DEFECT
// a Range object cannot be equal to a different object type	WITHOUT_CLASSIFICATION	0.9999596425109306	WITHOUT_CLASSIFICATION	4.035748906946773E-5	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9998482970041296	WITHOUT_CLASSIFICATION	1.517029958704933E-4	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9998037532430671	WITHOUT_CLASSIFICATION	1.962467569328804E-4	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995843134173743	WITHOUT_CLASSIFICATION	4.1568658262574086E-4	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999294325032637	WITHOUT_CLASSIFICATION	7.056749673620653E-5	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.6164174410272166	WITHOUT_CLASSIFICATION	0.3835825589727835	DEFECT
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.7474274423977907	WITHOUT_CLASSIFICATION	0.25257255760220926	DEFECT
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.6486485131117955	WITHOUT_CLASSIFICATION	0.35135148688820456	DEFECT
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.786281473018565	WITHOUT_CLASSIFICATION	0.21371852698143495	DEFECT
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.8002882896251707	WITHOUT_CLASSIFICATION	0.1997117103748292	DEFECT
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.8008798489289017	WITHOUT_CLASSIFICATION	0.19912015107109832	DEFECT
// allowDuplicateXValues	WITHOUT_CLASSIFICATION	0.9999967427891193	WITHOUT_CLASSIFICATION	3.257210880700756E-6	DEFECT
//// STROKE ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998570901478366	WITHOUT_CLASSIFICATION	1.4290985216335476E-4	DEFECT
//// OUTLINE STROKE ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998663825014563	WITHOUT_CLASSIFICATION	1.3361749854364242E-4	DEFECT
//// SHAPE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999522470652461	WITHOUT_CLASSIFICATION	4.7752934753931925E-5	DEFECT
//// LEGEND ITEMS /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999889036606569	WITHOUT_CLASSIFICATION	1.1096339343096339E-4	DEFECT
//// LEGEND ITEM LABEL GENERATOR //////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998134616423521	WITHOUT_CLASSIFICATION	1.8653835764785538E-4	DEFECT
//// ITEM LABEL GENERATOR /////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998549315236963	WITHOUT_CLASSIFICATION	1.4506847630373876E-4	DEFECT
// FIXME:	WITHOUT_CLASSIFICATION	0.7312609061107066	WITHOUT_CLASSIFICATION	0.2687390938892934	DEFECT
//// ITEM LABEL FONT ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998086512716224	WITHOUT_CLASSIFICATION	1.9134872837768592E-4	DEFECT
//// ANNOTATIONS //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999212219993556	WITHOUT_CLASSIFICATION	7.877800064434506E-5	DEFECT
//// DRAWING //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999635460689044	WITHOUT_CLASSIFICATION	3.64539310956812E-5	DEFECT
// DEPRECATED METHODS	WITHOUT_CLASSIFICATION	0.9996604907762232	WITHOUT_CLASSIFICATION	3.3950922377670094E-4	DEFECT
// need to handle cluster centering as a special case	WITHOUT_CLASSIFICATION	0.9999999111624871	WITHOUT_CLASSIFICATION	8.883751300785836E-8	DEFECT
// may be negative	WITHOUT_CLASSIFICATION	0.9999734980489888	WITHOUT_CLASSIFICATION	2.6501951011153764E-5	DEFECT
/*             * Legacy? Just return the original Paint.             * (this corresponds EXACTLY to how Paints used to be darkened)             */	WITHOUT_CLASSIFICATION	0.9999959520742612	WITHOUT_CLASSIFICATION	4.04792573880682E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981357078591	WITHOUT_CLASSIFICATION	1.8642921408583944E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999987690870402	WITHOUT_CLASSIFICATION	1.2309129598012714E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999847960454908	WITHOUT_CLASSIFICATION	1.5203954509076454E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999786870266955	WITHOUT_CLASSIFICATION	2.13129733045074E-5	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999991513089217	WITHOUT_CLASSIFICATION	8.486910783692193E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999902894782691	WITHOUT_CLASSIFICATION	9.710521730944788E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999937810176731	WITHOUT_CLASSIFICATION	6.2189823268093795E-6	DEFECT
// first pass draws the shading	WITHOUT_CLASSIFICATION	0.9999961836881478	WITHOUT_CLASSIFICATION	3.816311852183339E-6	DEFECT
// last item in series, draw the lot... // set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999998476886693	WITHOUT_CLASSIFICATION	1.5231133077606122E-7	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.9999952188409763	WITHOUT_CLASSIFICATION	4.781159023689981E-6	DEFECT
// return straight away if the item is not visible	WITHOUT_CLASSIFICATION	0.999999372559844	WITHOUT_CLASSIFICATION	6.274401560845785E-7	DEFECT
// add an entity if this info is being collected	WITHOUT_CLASSIFICATION	0.9998792611980117	WITHOUT_CLASSIFICATION	1.2073880198834728E-4	DEFECT
//  Get height adjustment based on stack and translate to Java2D values	WITHOUT_CLASSIFICATION	0.9999998953203884	WITHOUT_CLASSIFICATION	1.0467961162887835E-7	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.9999973911539858	WITHOUT_CLASSIFICATION	2.608846014148758E-6	DEFECT
//  On first pass render the areas, line and outlines	WITHOUT_CLASSIFICATION	0.9999994088646597	WITHOUT_CLASSIFICATION	5.911353403202293E-7	DEFECT
// start from previous height (ph1)	WITHOUT_CLASSIFICATION	0.9999995689308157	WITHOUT_CLASSIFICATION	4.310691842791039E-7	DEFECT
// should not get here	WITHOUT_CLASSIFICATION	0.9999791852546971	WITHOUT_CLASSIFICATION	2.081474530286486E-5	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999993085414195	WITHOUT_CLASSIFICATION	6.914585804563729E-7	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9997617160422562	WITHOUT_CLASSIFICATION	2.3828395774388495E-4	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.9999399413369777	WITHOUT_CLASSIFICATION	6.005866302229224E-5	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.9999515890657389	WITHOUT_CLASSIFICATION	4.8410934261109406E-5	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.999759428649939	WITHOUT_CLASSIFICATION	2.4057135006088043E-4	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999786870266955	WITHOUT_CLASSIFICATION	2.13129733045074E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999895541215467	WITHOUT_CLASSIFICATION	1.0445878453434308E-5	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.999848762221412	WITHOUT_CLASSIFICATION	1.5123777858816546E-4	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999998491686461	WITHOUT_CLASSIFICATION	1.5083135389472195E-7	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999989671667329	WITHOUT_CLASSIFICATION	1.0328332670677918E-6	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999994278684494	WITHOUT_CLASSIFICATION	5.721315505201443E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999994278684494	WITHOUT_CLASSIFICATION	5.721315505201443E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999978029504515	WITHOUT_CLASSIFICATION	2.1970495485208935E-6	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9999994151526047	WITHOUT_CLASSIFICATION	5.848473953077654E-7	DEFECT
// The first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999564372167529	WITHOUT_CLASSIFICATION	4.356278324712898E-5	DEFECT
//  Fill the polygon	WITHOUT_CLASSIFICATION	0.9999923618345323	WITHOUT_CLASSIFICATION	7.63816546765478E-6	DEFECT
//  Draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999981052889645	WITHOUT_CLASSIFICATION	1.894711035584083E-6	DEFECT
// first pass draws the background (lines, for instance)	WITHOUT_CLASSIFICATION	0.9999997579359375	WITHOUT_CLASSIFICATION	2.4206406236381574E-7	DEFECT
//labelLinkPaint;	WITHOUT_CLASSIFICATION	0.9999867200588598	WITHOUT_CLASSIFICATION	1.3279941140192606E-5	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999988761306228	WITHOUT_CLASSIFICATION	1.1238693771686791E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999987690870402	WITHOUT_CLASSIFICATION	1.2309129598012714E-6	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999989808880947	WITHOUT_CLASSIFICATION	1.0191119052428918E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999987360435884	WITHOUT_CLASSIFICATION	1.2639564116830769E-6	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.9999952188409763	WITHOUT_CLASSIFICATION	4.781159023689981E-6	DEFECT
// Add points from last series to complete the base of the // polygon	WITHOUT_CLASSIFICATION	0.9999996279292674	WITHOUT_CLASSIFICATION	3.720707325603702E-7	DEFECT
// On second pass render shapes and collect entity and tooltip // information	WITHOUT_CLASSIFICATION	0.9999645209213974	WITHOUT_CLASSIFICATION	3.5479078602620334E-5	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999995807560427	WITHOUT_CLASSIFICATION	4.192439574143216E-7	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.9999855158595433	WITHOUT_CLASSIFICATION	1.4484140456657271E-5	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999903927474978	WITHOUT_CLASSIFICATION	9.60725250218244E-6	DEFECT
// Collect points	WITHOUT_CLASSIFICATION	0.9999955892432267	WITHOUT_CLASSIFICATION	4.410756773318072E-6	DEFECT
// construct path	WITHOUT_CLASSIFICATION	0.9999940987097428	WITHOUT_CLASSIFICATION	5.901290257199912E-6	DEFECT
// we need at least two points to draw something	WITHOUT_CLASSIFICATION	0.9999995486133421	WITHOUT_CLASSIFICATION	4.5138665797433095E-7	DEFECT
// we need at least 3 points to spline. Draw simple line // for two points	WITHOUT_CLASSIFICATION	0.9999992719673081	WITHOUT_CLASSIFICATION	7.280326918274373E-7	DEFECT
// construct spline // number of points // Newton form coefficients // x-coordinates of nodes	WITHOUT_CLASSIFICATION	0.9999997222861879	WITHOUT_CLASSIFICATION	2.7771381202830586E-7	DEFECT
// note that a[0]=a[np-1]=0	WITHOUT_CLASSIFICATION	0.9999785111584053	WITHOUT_CLASSIFICATION	2.148884159477516E-5	DEFECT
// loop over intervals between nodes	WITHOUT_CLASSIFICATION	0.9999995318751218	WITHOUT_CLASSIFICATION	4.6812487815543843E-7	DEFECT
// we're running on JRE 1.3.1 so this is the best we have...	WITHOUT_CLASSIFICATION	0.9999391564916456	WITHOUT_CLASSIFICATION	6.084350835449821E-5	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999877084735536	WITHOUT_CLASSIFICATION	1.2291526446420699E-5	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9996736179033366	WITHOUT_CLASSIFICATION	3.2638209666339865E-4	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999994251274834	WITHOUT_CLASSIFICATION	5.74872516531394E-7	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999994251274834	WITHOUT_CLASSIFICATION	5.74872516531394E-7	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999995756650021	WITHOUT_CLASSIFICATION	4.2433499787176097E-7	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999995756650021	WITHOUT_CLASSIFICATION	4.2433499787176097E-7	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9988237102590501	WITHOUT_CLASSIFICATION	0.001176289740949837	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999202725497711	WITHOUT_CLASSIFICATION	7.97274502288376E-5	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999996728681539	WITHOUT_CLASSIFICATION	3.271318460754996E-7	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999996728681539	WITHOUT_CLASSIFICATION	3.271318460754996E-7	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.999999734296218	WITHOUT_CLASSIFICATION	2.65703782026659E-7	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.999999734296218	WITHOUT_CLASSIFICATION	2.65703782026659E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999938323082546	WITHOUT_CLASSIFICATION	6.167691745374247E-6	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999938323082546	WITHOUT_CLASSIFICATION	6.167691745374247E-6	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9999984073214719	WITHOUT_CLASSIFICATION	1.5926785280234476E-6	DEFECT
// map a key to the default group	WITHOUT_CLASSIFICATION	0.9999992315721309	WITHOUT_CLASSIFICATION	7.684278690134974E-7	DEFECT
// Add last point @ y=0 for fillPath and close path	WITHOUT_CLASSIFICATION	0.9999998408924867	WITHOUT_CLASSIFICATION	1.5910751327326917E-7	DEFECT
// fill under the curve...	WITHOUT_CLASSIFICATION	0.9999907410030094	WITHOUT_CLASSIFICATION	9.258996990596846E-6	DEFECT
// then draw the line...	WITHOUT_CLASSIFICATION	0.9999956309385017	WITHOUT_CLASSIFICATION	4.369061498266224E-6	DEFECT
// reset points vector	WITHOUT_CLASSIFICATION	0.9999975858366142	WITHOUT_CLASSIFICATION	2.414163385753285E-6	DEFECT
/*      factorization and forward substitution */	WITHOUT_CLASSIFICATION	0.9999992213042945	WITHOUT_CLASSIFICATION	7.786957055856209E-7	DEFECT
// now draw the real shape	WITHOUT_CLASSIFICATION	0.9999971004561655	WITHOUT_CLASSIFICATION	2.899543834481257E-6	DEFECT
// should never get here	WITHOUT_CLASSIFICATION	0.9999941422022341	WITHOUT_CLASSIFICATION	5.8577977659162985E-6	DEFECT
// 'plot' : just retain reference, not a deep copy	WITHOUT_CLASSIFICATION	0.9999964156538517	WITHOUT_CLASSIFICATION	3.5843461482691035E-6	DEFECT
// just the domain axis...	WITHOUT_CLASSIFICATION	0.9999934708489001	WITHOUT_CLASSIFICATION	6.5291510998181574E-6	DEFECT
// just the range axis...	WITHOUT_CLASSIFICATION	0.9999902223147777	WITHOUT_CLASSIFICATION	9.777685222302054E-6	DEFECT
// get the label position..	WITHOUT_CLASSIFICATION	0.9999981560917852	WITHOUT_CLASSIFICATION	1.843908214823663E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999786870266955	WITHOUT_CLASSIFICATION	2.13129733045074E-5	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999987360435884	WITHOUT_CLASSIFICATION	1.2639564116830769E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999895541215467	WITHOUT_CLASSIFICATION	1.0445878453434308E-5	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999998491686461	WITHOUT_CLASSIFICATION	1.5083135389472195E-7	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999989671667329	WITHOUT_CLASSIFICATION	1.0328332670677918E-6	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999874520569303	WITHOUT_CLASSIFICATION	1.254794306962627E-5	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9999994151526047	WITHOUT_CLASSIFICATION	5.848473953077654E-7	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9999991127736237	WITHOUT_CLASSIFICATION	8.872263761972636E-7	DEFECT
//this handles the need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9999959206627038	WITHOUT_CLASSIFICATION	4.07933729623532E-6	DEFECT
// calculate the step point	WITHOUT_CLASSIFICATION	0.9999941097059957	WITHOUT_CLASSIFICATION	5.890294004356416E-6	DEFECT
//this handles the need to perform a 'step'. // calculate the step point	WITHOUT_CLASSIFICATION	0.9999968275270941	WITHOUT_CLASSIFICATION	3.1724729059216904E-6	DEFECT
// submit this data item as a candidate for the crosshair point	WITHOUT_CLASSIFICATION	0.999998587378705	WITHOUT_CLASSIFICATION	1.4126212950927388E-6	DEFECT
// create a new area polygon for the series	WITHOUT_CLASSIFICATION	0.9999994897045202	WITHOUT_CLASSIFICATION	5.102954796956147E-7	DEFECT
// the first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999900485094789	WITHOUT_CLASSIFICATION	9.951490521091807E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999987690870402	WITHOUT_CLASSIFICATION	1.2309129598012714E-6	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999998005093234	WITHOUT_CLASSIFICATION	1.9949067665458729E-7	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.999759428649939	WITHOUT_CLASSIFICATION	2.4057135006088043E-4	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9999997882510085	WITHOUT_CLASSIFICATION	2.1174899153630915E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.999998175700652	WITHOUT_CLASSIFICATION	1.8242993480364654E-6	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.9999876129887656	WITHOUT_CLASSIFICATION	1.2387011234420803E-5	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.9999693758158208	WITHOUT_CLASSIFICATION	3.062418417917393E-5	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999994278684494	WITHOUT_CLASSIFICATION	5.721315505201443E-7	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999984175789879	WITHOUT_CLASSIFICATION	1.5824210121331858E-6	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999986956502397	WITHOUT_CLASSIFICATION	1.3043497604158758E-6	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.9999999282973361	WITHOUT_CLASSIFICATION	7.170266392371129E-8	DEFECT
// we make the clip region slightly larger than the // dataArea so that the clipped edges don't show lines // on the chart	WITHOUT_CLASSIFICATION	0.999997387583336	WITHOUT_CLASSIFICATION	2.612416663971367E-6	DEFECT
// no change	WITHOUT_CLASSIFICATION	0.9999940650038214	WITHOUT_CLASSIFICATION	5.934996178627377E-6	DEFECT
// here we use BooleanUtilities to remain compatible with JDKs < 1.4	WITHOUT_CLASSIFICATION	0.9999851014980599	WITHOUT_CLASSIFICATION	1.4898501940199755E-5	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.9999994799775161	WITHOUT_CLASSIFICATION	5.200224839337375E-7	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999924736220045	WITHOUT_CLASSIFICATION	7.526377995442395E-6	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999988761306228	WITHOUT_CLASSIFICATION	1.1238693771686791E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999987690870402	WITHOUT_CLASSIFICATION	1.2309129598012714E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999987360435884	WITHOUT_CLASSIFICATION	1.2639564116830769E-6	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999992978927802	WITHOUT_CLASSIFICATION	7.021072198267587E-7	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999998491686461	WITHOUT_CLASSIFICATION	1.5083135389472195E-7	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999995807560427	WITHOUT_CLASSIFICATION	4.192439574143216E-7	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999903927474978	WITHOUT_CLASSIFICATION	9.60725250218244E-6	DEFECT
// we are starting a new series path	WITHOUT_CLASSIFICATION	0.9999953404271015	WITHOUT_CLASSIFICATION	4.659572898477825E-6	DEFECT
// only draw a line if the gap between the current and // previous data point is within the threshold	WITHOUT_CLASSIFICATION	0.9999994715952503	WITHOUT_CLASSIFICATION	5.284047496634474E-7	DEFECT
// we needed to get this far even for invisible items, to ensure that // seriesPath updates happened, but now there is nothing more we need // to do for non-visible items...	WITHOUT_CLASSIFICATION	0.9999847109206368	WITHOUT_CLASSIFICATION	1.5289079363173143E-5	DEFECT
// this method must be overridden if you want to display images	WITHOUT_CLASSIFICATION	0.9999963244112281	WITHOUT_CLASSIFICATION	3.675588772000468E-6	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.999996060272683	WITHOUT_CLASSIFICATION	3.939727317059874E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999971892634142	WITHOUT_CLASSIFICATION	2.810736585892385E-6	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999963710901292	WITHOUT_CLASSIFICATION	3.628909870747975E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999847960454908	WITHOUT_CLASSIFICATION	1.5203954509076454E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999847960454908	WITHOUT_CLASSIFICATION	1.5203954509076454E-5	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.999996060272683	WITHOUT_CLASSIFICATION	3.939727317059874E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // PROTECTED METHODS // These provide the opportunity to subclass the standard renderer and // create custom effects. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996365429454	WITHOUT_CLASSIFICATION	3.634570545874433E-7	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999971892634142	WITHOUT_CLASSIFICATION	2.810736585892385E-6	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999963710901292	WITHOUT_CLASSIFICATION	3.628909870747975E-6	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.9999938390191532	WITHOUT_CLASSIFICATION	6.160980846819593E-6	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.9999764917259467	WITHOUT_CLASSIFICATION	2.3508274053276027E-5	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.9999764917259467	WITHOUT_CLASSIFICATION	2.3508274053276027E-5	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9998971506126331	WITHOUT_CLASSIFICATION	1.0284938736689502E-4	DEFECT
// yOutliers can be null, but we'd prefer it to be an empty list in // that case...	WITHOUT_CLASSIFICATION	0.9995766377164471	WITHOUT_CLASSIFICATION	4.233622835528635E-4	DEFECT
/* From outlier array sort out which are outliers and put these into         * an arraylist. If there are any farouts, set the flag on the         * OutlierListCollection         */	WITHOUT_CLASSIFICATION	0.9999996277322296	WITHOUT_CLASSIFICATION	3.722677703724524E-7	DEFECT
// draw yOutliers	WITHOUT_CLASSIFICATION	0.9999945477387401	WITHOUT_CLASSIFICATION	5.452261259887029E-6	DEFECT
// draw outliers	WITHOUT_CLASSIFICATION	0.999998347248203	WITHOUT_CLASSIFICATION	1.652751796981957E-6	DEFECT
// draw farout	WITHOUT_CLASSIFICATION	0.9999924375109317	WITHOUT_CLASSIFICATION	7.562489068290999E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981357078591	WITHOUT_CLASSIFICATION	1.8642921408583944E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981357078591	WITHOUT_CLASSIFICATION	1.8642921408583944E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999847960454908	WITHOUT_CLASSIFICATION	1.5203954509076454E-5	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999998491686461	WITHOUT_CLASSIFICATION	1.5083135389472195E-7	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9998971506126331	WITHOUT_CLASSIFICATION	1.0284938736689502E-4	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999785441406502	WITHOUT_CLASSIFICATION	2.145585934972193E-5	DEFECT
// Process outliers. Each outlier is either added to the appropriate // outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999998637941246	WITHOUT_CLASSIFICATION	1.3620587536518337E-7	DEFECT
// for item labels, we have a special case because there is the // possibility to draw (a) the regular item label near to just the // upper y-value, or (b) the regular item label near the upper y-value // PLUS an additional item label near the lower y-value.	WITHOUT_CLASSIFICATION	0.9999996502240913	WITHOUT_CLASSIFICATION	3.497759087374205E-7	DEFECT
// If null, don't draw line => then delegate to parent	WITHOUT_CLASSIFICATION	0.9999959036205933	WITHOUT_CLASSIFICATION	4.0963794067115554E-6	DEFECT
// If null, don't draw line at all	WITHOUT_CLASSIFICATION	0.9999688980690502	WITHOUT_CLASSIFICATION	3.110193094983371E-5	DEFECT
// Now split the segment as needed	WITHOUT_CLASSIFICATION	0.999999775631872	WITHOUT_CLASSIFICATION	2.2436812797850572E-7	DEFECT
// If the segment must be splitted, insert a new point // Strict test forces to have real segments (not 2 equal points) // and avoids division by 0	WITHOUT_CLASSIFICATION	0.999999661799834	WITHOUT_CLASSIFICATION	3.382001660403184E-7	DEFECT
// If the line is not wrapping, then parent is OK	WITHOUT_CLASSIFICATION	0.9999555843441981	WITHOUT_CLASSIFICATION	4.4415655801874164E-5	DEFECT
// calculate the highest volume in the dataset...	WITHOUT_CLASSIFICATION	0.9999982504626125	WITHOUT_CLASSIFICATION	1.7495373874237809E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999785441406502	WITHOUT_CLASSIFICATION	2.145585934972193E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999785441406502	WITHOUT_CLASSIFICATION	2.145585934972193E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999785441406502	WITHOUT_CLASSIFICATION	2.145585934972193E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999785441406502	WITHOUT_CLASSIFICATION	2.145585934972193E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999786870266955	WITHOUT_CLASSIFICATION	2.13129733045074E-5	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999938323082546	WITHOUT_CLASSIFICATION	6.167691745374247E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.999998175700652	WITHOUT_CLASSIFICATION	1.8242993480364654E-6	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999996906593327	WITHOUT_CLASSIFICATION	3.0934066727780497E-7	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999995807560427	WITHOUT_CLASSIFICATION	4.192439574143216E-7	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.9999855158595433	WITHOUT_CLASSIFICATION	1.4484140456657271E-5	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999903927474978	WITHOUT_CLASSIFICATION	9.60725250218244E-6	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.9999995928554686	WITHOUT_CLASSIFICATION	4.0714453144910905E-7	DEFECT
// The split may occur in either x splitted segments, if any, but // not in both	WITHOUT_CLASSIFICATION	0.9999873240607104	WITHOUT_CLASSIFICATION	1.2675939289507777E-5	DEFECT
// the x value is not within the axis range	WITHOUT_CLASSIFICATION	0.999963570565472	WITHOUT_CLASSIFICATION	3.64294345279655E-5	DEFECT
// not a HighLowDataset, so just draw a line connecting this point // with the previous point...	WITHOUT_CLASSIFICATION	0.9999998115564899	WITHOUT_CLASSIFICATION	1.8844351016458084E-7	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.9999984549568744	WITHOUT_CLASSIFICATION	1.5450431255527433E-6	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.9999984549568744	WITHOUT_CLASSIFICATION	1.5450431255527433E-6	DEFECT
// draw the error bar for the x-interval	WITHOUT_CLASSIFICATION	0.9999910020437859	WITHOUT_CLASSIFICATION	8.99795621421097E-6	DEFECT
// draw the error bar for the y-interval	WITHOUT_CLASSIFICATION	0.9999919820945087	WITHOUT_CLASSIFICATION	8.017905491424664E-6	DEFECT
//domainGridlinePaint;	WITHOUT_CLASSIFICATION	0.9999833247996498	WITHOUT_CLASSIFICATION	1.6675200350223566E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999987690870402	WITHOUT_CLASSIFICATION	1.2309129598012714E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999847960454908	WITHOUT_CLASSIFICATION	1.5203954509076454E-5	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999998671055076	WITHOUT_CLASSIFICATION	1.3289449244418684E-7	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999786870266955	WITHOUT_CLASSIFICATION	2.13129733045074E-5	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999977406847466	WITHOUT_CLASSIFICATION	2.259315253452089E-6	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999998688545324	WITHOUT_CLASSIFICATION	1.3114546757808927E-7	DEFECT
// handle item label drawing, now that we know all the bars have // been drawn...	WITHOUT_CLASSIFICATION	0.9999889580922328	WITHOUT_CLASSIFICATION	1.1041907767176618E-5	DEFECT
// if the renderer isn't assigned to a plot, then we don't have a // dataset...	WITHOUT_CLASSIFICATION	0.9999978043727906	WITHOUT_CLASSIFICATION	2.1956272094730756E-6	DEFECT
//initalize xValues, yValues, and zValues arrays.	WITHOUT_CLASSIFICATION	0.9999913692152687	WITHOUT_CLASSIFICATION	8.630784731399948E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999987690870402	WITHOUT_CLASSIFICATION	1.2309129598012714E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999847960454908	WITHOUT_CLASSIFICATION	1.5203954509076454E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999875140778858	WITHOUT_CLASSIFICATION	1.2485922114345557E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999875140778858	WITHOUT_CLASSIFICATION	1.2485922114345557E-5	DEFECT
// handle positive value	WITHOUT_CLASSIFICATION	0.9999942717820708	WITHOUT_CLASSIFICATION	5.728217929200218E-6	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999523455322705	WITHOUT_CLASSIFICATION	4.765446772938578E-5	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999788088633793	WITHOUT_CLASSIFICATION	2.1191136620630046E-5	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999788088633793	WITHOUT_CLASSIFICATION	2.1191136620630046E-5	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999873745695529	WITHOUT_CLASSIFICATION	1.2625430447005141E-5	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.999999667986599	WITHOUT_CLASSIFICATION	3.320134010006988E-7	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999996728681539	WITHOUT_CLASSIFICATION	3.271318460754996E-7	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9999984073214719	WITHOUT_CLASSIFICATION	1.5926785280234476E-6	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.9999973911539858	WITHOUT_CLASSIFICATION	2.608846014148758E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999785441406502	WITHOUT_CLASSIFICATION	2.145585934972193E-5	DEFECT
// is there an alignment adjustment to be made?	WITHOUT_CLASSIFICATION	0.9998076622693924	WITHOUT_CLASSIFICATION	1.9233773060764895E-4	DEFECT
// update the crosshair point	WITHOUT_CLASSIFICATION	0.9999992981303588	WITHOUT_CLASSIFICATION	7.018696411661937E-7	DEFECT
// calculate the maximum allowed candle width from the axis...	WITHOUT_CLASSIFICATION	0.9999935746185775	WITHOUT_CLASSIFICATION	6.42538142244242E-6	DEFECT
// Absolute value, since the relative x // positions are reversed for horizontal orientation	WITHOUT_CLASSIFICATION	0.9999969304251572	WITHOUT_CLASSIFICATION	3.069574842877816E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999785441406502	WITHOUT_CLASSIFICATION	2.145585934972193E-5	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999961047101006	WITHOUT_CLASSIFICATION	3.895289899452694E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999847960454908	WITHOUT_CLASSIFICATION	1.5203954509076454E-5	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.999996060272683	WITHOUT_CLASSIFICATION	3.939727317059874E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999971892634142	WITHOUT_CLASSIFICATION	2.810736585892385E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999875140778858	WITHOUT_CLASSIFICATION	1.2485922114345557E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999875140778858	WITHOUT_CLASSIFICATION	1.2485922114345557E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999875140778858	WITHOUT_CLASSIFICATION	1.2485922114345557E-5	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999963710901292	WITHOUT_CLASSIFICATION	3.628909870747975E-6	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9985567102284115	WITHOUT_CLASSIFICATION	0.0014432897715885118	DEFECT
// --- DEPRECATED CODE ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999291993131728	WITHOUT_CLASSIFICATION	7.080068682716311E-5	DEFECT
// create the temporary directory if it doesn't exist	WITHOUT_CLASSIFICATION	0.9999979597037683	WITHOUT_CLASSIFICATION	2.0402962316550345E-6	DEFECT
//  Add chart to deletion list in session	WITHOUT_CLASSIFICATION	0.9999994293779878	WITHOUT_CLASSIFICATION	5.706220122038248E-7	DEFECT
//  Set HTTP headers	WITHOUT_CLASSIFICATION	0.9999869638400581	WITHOUT_CLASSIFICATION	1.3036159941885836E-5	DEFECT
//  Replace ".." with "" //  This is to prevent access to the rest of the file system	WITHOUT_CLASSIFICATION	0.9999994137011604	WITHOUT_CLASSIFICATION	5.862988395377108E-7	DEFECT
//  Check the file exists	WITHOUT_CLASSIFICATION	0.9999895984567271	WITHOUT_CLASSIFICATION	1.0401543272859397E-5	DEFECT
//  Serve it up	WITHOUT_CLASSIFICATION	0.9999855204457376	WITHOUT_CLASSIFICATION	1.4479554262455424E-5	DEFECT
// draw the block without collecting entities	WITHOUT_CLASSIFICATION	0.9999980563276142	WITHOUT_CLASSIFICATION	1.943672385846785E-6	DEFECT
// RectangleInsets is immutable => same reference in clone OK	WITHOUT_CLASSIFICATION	0.9999979134455784	WITHOUT_CLASSIFICATION	2.0865544215681094E-6	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.9999963826369472	WITHOUT_CLASSIFICATION	3.617363052615774E-6	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.9999963826369472	WITHOUT_CLASSIFICATION	3.617363052615774E-6	DEFECT
// determine the space required for the axis	WITHOUT_CLASSIFICATION	0.9999997218363106	WITHOUT_CLASSIFICATION	2.7816368938598925E-7	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.9999995928554686	WITHOUT_CLASSIFICATION	4.0714453144910905E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999955632358749	WITHOUT_CLASSIFICATION	4.436764125154979E-6	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999437127626448	WITHOUT_CLASSIFICATION	5.628723735527691E-5	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999437127626448	WITHOUT_CLASSIFICATION	5.628723735527691E-5	DEFECT
// no need to instantiate this class   	WITHOUT_CLASSIFICATION	0.9999966678318774	WITHOUT_CLASSIFICATION	3.3321681225985667E-6	DEFECT
//yAdj = -descent - leading + (float) bounds.getHeight();	WITHOUT_CLASSIFICATION	0.9999994186014205	WITHOUT_CLASSIFICATION	5.81398579522397E-7	DEFECT
// svgClass will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999965831933275	WITHOUT_CLASSIFICATION	3.4168066724003502E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999955632358749	WITHOUT_CLASSIFICATION	4.436764125154979E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999955632358749	WITHOUT_CLASSIFICATION	4.436764125154979E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999955632358749	WITHOUT_CLASSIFICATION	4.436764125154979E-6	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999986572571242	WITHOUT_CLASSIFICATION	1.3427428757591697E-6	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999437127626448	WITHOUT_CLASSIFICATION	5.628723735527691E-5	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9999998216087617	WITHOUT_CLASSIFICATION	1.7839123837643422E-7	DEFECT
// update (x1, y1), (x2, y2) and f1 and f2 using intersections // then recheck	WITHOUT_CLASSIFICATION	0.9999977774160856	WITHOUT_CLASSIFICATION	2.2225839142996383E-6	DEFECT
// first point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999989738165103	WITHOUT_CLASSIFICATION	1.0261834897836609E-6	DEFECT
// second point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999995817093008	WITHOUT_CLASSIFICATION	4.182906992829386E-7	DEFECT
// the line is visible - if it wasn't, we'd have // returned false from within the while loop above	WITHOUT_CLASSIFICATION	0.9999994816863055	WITHOUT_CLASSIFICATION	5.183136945156987E-7	DEFECT
/*                 * Lots can go wrong while fiddling with Images, Color Models                 * & such!  If anything at all goes awry, just return the original                 * TexturePaint.  (TexturePaint's are immutable anyway, so no harm                 * done)                 */	WITHOUT_CLASSIFICATION	0.9999997557297635	WITHOUT_CLASSIFICATION	2.442702364044894E-7	DEFECT
/* Placeholder */	WITHOUT_CLASSIFICATION	0.9999884679412012	WITHOUT_CLASSIFICATION	1.1532058798728614E-5	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9998695059332381	WITHOUT_CLASSIFICATION	1.3049406676190865E-4	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9998695059332381	WITHOUT_CLASSIFICATION	1.3049406676190865E-4	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9998695059332381	WITHOUT_CLASSIFICATION	1.3049406676190865E-4	DEFECT
/* (pix-buffer is large enough for all pixels of one row) */	WITHOUT_CLASSIFICATION	0.9999901953323939	WITHOUT_CLASSIFICATION	9.804667606153363E-6	DEFECT
// RGB (+ optional Alpha which we leave // unchanged)	WITHOUT_CLASSIFICATION	0.9999993712047743	WITHOUT_CLASSIFICATION	6.287952256107301E-7	DEFECT
// Red // Green // Blue. Now map computed colour to // nearest in Palette...	WITHOUT_CLASSIFICATION	0.9999984558518314	WITHOUT_CLASSIFICATION	1.5441481686442115E-6	DEFECT
// Red // Green // Blue	WITHOUT_CLASSIFICATION	0.9999856524638147	WITHOUT_CLASSIFICATION	1.4347536185237269E-5	DEFECT
/* Ignore alpha-channel -> */	WITHOUT_CLASSIFICATION	0.9999989171713831	WITHOUT_CLASSIFICATION	1.082828616861752E-6	DEFECT
// <- this is the code that actually COPIES the pixels	WITHOUT_CLASSIFICATION	0.9996867554671771	WITHOUT_CLASSIFICATION	3.1324453282288023E-4	DEFECT
/*         * Buffered Images may have properties, but NEVER disclose them!         * Nevertheless, just in case someone implements getPropertyNames()         * one day...         */	WITHOUT_CLASSIFICATION	0.9999996072205042	WITHOUT_CLASSIFICATION	3.9277949582332674E-7	DEFECT
// ALWAYS null	WITHOUT_CLASSIFICATION	0.999939790909667	WITHOUT_CLASSIFICATION	6.020909033296582E-5	DEFECT
// all methods are static, no need to instantiate	WITHOUT_CLASSIFICATION	0.999999071338995	WITHOUT_CLASSIFICATION	9.286610050254152E-7	DEFECT
// substitute the filtered URL list	WITHOUT_CLASSIFICATION	0.9999996573005615	WITHOUT_CLASSIFICATION	3.4269943842807154E-7	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.9999951923858696	WITHOUT_CLASSIFICATION	4.807614130320694E-6	DEFECT
// horizontal pass	WITHOUT_CLASSIFICATION	0.9999977446717851	WITHOUT_CLASSIFICATION	2.2553282149521746E-6	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9999989450608219	WITHOUT_CLASSIFICATION	1.0549391781075008E-6	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9999989450608219	WITHOUT_CLASSIFICATION	1.0549391781075008E-6	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999978077001601	WITHOUT_CLASSIFICATION	2.192299839909635E-6	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999978077001601	WITHOUT_CLASSIFICATION	2.192299839909635E-6	DEFECT
// vertical pass	WITHOUT_CLASSIFICATION	0.9999977702573735	WITHOUT_CLASSIFICATION	2.2297426265029066E-6	DEFECT
//get the coordinates of the original GradientPaint	WITHOUT_CLASSIFICATION	0.9999992506461629	WITHOUT_CLASSIFICATION	7.49353837122991E-7	DEFECT
//get the coordinates of the shape that is to be filled	WITHOUT_CLASSIFICATION	0.9999792552097978	WITHOUT_CLASSIFICATION	2.074479020215638E-5	DEFECT
//reserve variables to store the coordinates of the resulting GradientPaint	WITHOUT_CLASSIFICATION	0.9999995744703614	WITHOUT_CLASSIFICATION	4.2552963870832287E-7	DEFECT
//start point is upper left corner	WITHOUT_CLASSIFICATION	0.9999768172461125	WITHOUT_CLASSIFICATION	2.3182753887554633E-5	DEFECT
//end point is lower right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9999973834563869	WITHOUT_CLASSIFICATION	2.616543613200497E-6	DEFECT
//start point is lower left right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9999985468660855	WITHOUT_CLASSIFICATION	1.4531339145955922E-6	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.9999980850064261	WITHOUT_CLASSIFICATION	1.914993573949723E-6	DEFECT
//end point is either lower left corner --> vertical gradient //or end point is upper right corner --> horizontal gradient	WITHOUT_CLASSIFICATION	0.9999989175658309	WITHOUT_CLASSIFICATION	1.0824341690153023E-6	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.9999811120154845	WITHOUT_CLASSIFICATION	1.888798451548892E-5	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999983841564557	WITHOUT_CLASSIFICATION	1.6158435441778232E-6	DEFECT
// CASE 1 : Comparing to another ComparableObjectItem object // ---------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999814379567297	WITHOUT_CLASSIFICATION	1.8562043270332954E-5	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999583397562296	WITHOUT_CLASSIFICATION	4.1660243770357786E-5	DEFECT
// consider these to be ordered after general objects	WITHOUT_CLASSIFICATION	0.99999868175198	WITHOUT_CLASSIFICATION	1.3182480200533195E-6	DEFECT
// the row may not have an entry for this key, in which case the // return value is null	WITHOUT_CLASSIFICATION	0.9998429728606445	WITHOUT_CLASSIFICATION	1.5702713935556565E-4	DEFECT
// check that the column key is defined in the 2D structure	WITHOUT_CLASSIFICATION	0.9999897194487436	WITHOUT_CLASSIFICATION	1.028055125645536E-5	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9999525183198863	WITHOUT_CLASSIFICATION	4.7481680113740304E-5	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9999525183198863	WITHOUT_CLASSIFICATION	4.7481680113740304E-5	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.9999726273918814	WITHOUT_CLASSIFICATION	2.737260811853705E-5	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.9999726273918814	WITHOUT_CLASSIFICATION	2.737260811853705E-5	DEFECT
//int columnIndex = getColumnIndex(columnKey);	WITHOUT_CLASSIFICATION	0.9999767740812672	WITHOUT_CLASSIFICATION	2.3225918732860353E-5	DEFECT
// for the keys, a shallow copy should be fine because keys // should be immutable...	WITHOUT_CLASSIFICATION	0.9999987247333637	WITHOUT_CLASSIFICATION	1.2752666362620976E-6	DEFECT
// but the row data requires a deep copy	WITHOUT_CLASSIFICATION	0.9999976896480435	WITHOUT_CLASSIFICATION	2.3103519565423896E-6	DEFECT
// already know 'a' isn't null	WITHOUT_CLASSIFICATION	0.9996905838868965	WITHOUT_CLASSIFICATION	3.094161131036008E-4	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.999983271405288	WITHOUT_CLASSIFICATION	1.672859471197261E-5	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.999983271405288	WITHOUT_CLASSIFICATION	1.672859471197261E-5	DEFECT
// this will include the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.999645620503551	WITHOUT_CLASSIFICATION	3.543794964490116E-4	DEFECT
// this includes the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.9998312836417799	WITHOUT_CLASSIFICATION	1.6871635822015134E-4	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9998872935326415	WITHOUT_CLASSIFICATION	1.1270646735851353E-4	DEFECT
// set up the category names...	WITHOUT_CLASSIFICATION	0.9999990429078407	WITHOUT_CLASSIFICATION	9.570921592831997E-7	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.999994684102441	WITHOUT_CLASSIFICATION	5.315897558990287E-6	DEFECT
// fetch the value...	WITHOUT_CLASSIFICATION	0.9999930766614706	WITHOUT_CLASSIFICATION	6.92333852941627E-6	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9999373439014171	WITHOUT_CLASSIFICATION	6.265609858281897E-5	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9999373439014171	WITHOUT_CLASSIFICATION	6.265609858281897E-5	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.999850436917084	WITHOUT_CLASSIFICATION	1.4956308291599071E-4	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.999992908452975	WITHOUT_CLASSIFICATION	7.091547025117093E-6	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.999992908452975	WITHOUT_CLASSIFICATION	7.091547025117093E-6	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999993725299232	WITHOUT_CLASSIFICATION	6.274700767925085E-7	DEFECT
// Find min, max for the x and y axes	WITHOUT_CLASSIFICATION	0.9999942688710166	WITHOUT_CLASSIFICATION	5.731128983359813E-6	DEFECT
// Determine the cell size	WITHOUT_CLASSIFICATION	0.9999961510726151	WITHOUT_CLASSIFICATION	3.848927384937908E-6	DEFECT
// Generate the grid	WITHOUT_CLASSIFICATION	0.9999922126087902	WITHOUT_CLASSIFICATION	7.787391209678987E-6	DEFECT
// Map the nongrid data into the new regular grid	WITHOUT_CLASSIFICATION	0.9999996050823092	WITHOUT_CLASSIFICATION	3.94917690702338E-7	DEFECT
// scale by the inverse of distance^power	WITHOUT_CLASSIFICATION	0.9999997437493477	WITHOUT_CLASSIFICATION	2.5625065225079673E-7	DEFECT
//remove distance of the sum	WITHOUT_CLASSIFICATION	0.9999991920986805	WITHOUT_CLASSIFICATION	8.079013194015246E-7	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.999983271405288	WITHOUT_CLASSIFICATION	1.672859471197261E-5	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9998872935326415	WITHOUT_CLASSIFICATION	1.1270646735851353E-4	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999998833743764	WITHOUT_CLASSIFICATION	1.1662562358405431E-7	DEFECT
// the CategoryDataset interface expects a list of categories, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999989332283822	WITHOUT_CLASSIFICATION	1.0667716178729976E-6	DEFECT
// the CategoryDataset interface expects a list of series, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999989734951634	WITHOUT_CLASSIFICATION	1.0265048365851272E-6	DEFECT
// if d is real small set the inverse to a large number // to avoid INF	WITHOUT_CLASSIFICATION	0.9999960097554593	WITHOUT_CLASSIFICATION	3.990244540646237E-6	DEFECT
//store data as Long	WITHOUT_CLASSIFICATION	0.9999977739653645	WITHOUT_CLASSIFICATION	2.226034635383772E-6	DEFECT
// store Number as Double	WITHOUT_CLASSIFICATION	0.9999980579900527	WITHOUT_CLASSIFICATION	1.9420099473409002E-6	DEFECT
// check if starting new column	WITHOUT_CLASSIFICATION	0.9999985622743213	WITHOUT_CLASSIFICATION	1.4377256786732734E-6	DEFECT
//store index where new //column starts	WITHOUT_CLASSIFICATION	0.9999905385492481	WITHOUT_CLASSIFICATION	9.46145075192649E-6	DEFECT
// set x to most recent value	WITHOUT_CLASSIFICATION	0.9999988114715419	WITHOUT_CLASSIFICATION	1.1885284581431194E-6	DEFECT
// create array xIndex to hold // new column indices	WITHOUT_CLASSIFICATION	0.9999946103773737	WITHOUT_CLASSIFICATION	5.389622626224009E-6	DEFECT
// store y and z axes // as Doubles	WITHOUT_CLASSIFICATION	0.9999994107778963	WITHOUT_CLASSIFICATION	5.892221035986999E-7	DEFECT
// calculate constant values	WITHOUT_CLASSIFICATION	0.9999797618451167	WITHOUT_CLASSIFICATION	2.0238154883259902E-5	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.9998939107897896	WITHOUT_CLASSIFICATION	1.0608921021041489E-4	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999996558115479	WITHOUT_CLASSIFICATION	3.441884520157552E-7	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.999998881148795	WITHOUT_CLASSIFICATION	1.118851204978837E-6	DEFECT
//step through all the values and add them to the hash	WITHOUT_CLASSIFICATION	0.9999996776523832	WITHOUT_CLASSIFICATION	3.2234761677036546E-7	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999989174151188	WITHOUT_CLASSIFICATION	1.082584881214807E-6	DEFECT
// can't find any differences	WITHOUT_CLASSIFICATION	0.9999614522357148	WITHOUT_CLASSIFICATION	3.854776428517274E-5	DEFECT
// now try to instantiate this ;-)	WITHOUT_CLASSIFICATION	0.9999879970165596	WITHOUT_CLASSIFICATION	1.2002983440367764E-5	DEFECT
//  Create new dataset with keys above threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9999896085989901	WITHOUT_CLASSIFICATION	1.0391401009852355E-5	DEFECT
//  Do not add key to dataset	WITHOUT_CLASSIFICATION	0.9999310120413657	WITHOUT_CLASSIFICATION	6.89879586342644E-5	DEFECT
//  Add key to dataset	WITHOUT_CLASSIFICATION	0.9999866758842426	WITHOUT_CLASSIFICATION	1.3324115757298798E-5	DEFECT
//  Add other category if applicable	WITHOUT_CLASSIFICATION	0.9999978542953025	WITHOUT_CLASSIFICATION	2.1457046975822535E-6	DEFECT
// now do the work...	WITHOUT_CLASSIFICATION	0.9999468406789759	WITHOUT_CLASSIFICATION	5.3159321024074515E-5	DEFECT
// if the dataset implements DomainInfo, life is easier	WITHOUT_CLASSIFICATION	0.9999976991143272	WITHOUT_CLASSIFICATION	2.300885672851629E-6	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.9999997102707473	WITHOUT_CLASSIFICATION	2.897292526823578E-7	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.999996594057536	WITHOUT_CLASSIFICATION	3.4059424639899167E-6	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.9999997102707473	WITHOUT_CLASSIFICATION	2.897292526823578E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999814819523627	WITHOUT_CLASSIFICATION	1.8518047637332648E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999837015617415	WITHOUT_CLASSIFICATION	1.6298438258505728E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999996867217983	WITHOUT_CLASSIFICATION	3.1327820169474706E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999950815675372	WITHOUT_CLASSIFICATION	4.918432462745126E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999986490613135	WITHOUT_CLASSIFICATION	1.3509386864212382E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // New Methods ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999906282534291	WITHOUT_CLASSIFICATION	9.371746570841103E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // Private ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999925349722257	WITHOUT_CLASSIFICATION	7.465027774378363E-6	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999998833743764	WITHOUT_CLASSIFICATION	1.1662562358405431E-7	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9999931525911521	WITHOUT_CLASSIFICATION	6.847408848016805E-6	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9999931525911521	WITHOUT_CLASSIFICATION	6.847408848016805E-6	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999996848999924	WITHOUT_CLASSIFICATION	3.151000075651514E-7	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999996848999924	WITHOUT_CLASSIFICATION	3.151000075651514E-7	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999996848999924	WITHOUT_CLASSIFICATION	3.151000075651514E-7	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.9999994669946968	WITHOUT_CLASSIFICATION	5.330053032401492E-7	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.9999994669946968	WITHOUT_CLASSIFICATION	5.330053032401492E-7	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.999999540577976	WITHOUT_CLASSIFICATION	4.594220240637734E-7	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.999999540577976	WITHOUT_CLASSIFICATION	4.594220240637734E-7	DEFECT
// handle special case of BoxAndWhiskerXYDataset	WITHOUT_CLASSIFICATION	0.9999985754645139	WITHOUT_CLASSIFICATION	1.4245354861846441E-6	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.9999966583224278	WITHOUT_CLASSIFICATION	3.3416775722517417E-6	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.9999966583224278	WITHOUT_CLASSIFICATION	3.3416775722517417E-6	DEFECT
// hasn't implemented DomainInfo, so iterate...	WITHOUT_CLASSIFICATION	0.9999930601563505	WITHOUT_CLASSIFICATION	6.939843649462327E-6	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.999995574590046	WITHOUT_CLASSIFICATION	4.4254099540375984E-6	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.999995574590046	WITHOUT_CLASSIFICATION	4.4254099540375984E-6	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9999950000213705	WITHOUT_CLASSIFICATION	4.9999786294442695E-6	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9999950000213705	WITHOUT_CLASSIFICATION	4.9999786294442695E-6	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9999950000213705	WITHOUT_CLASSIFICATION	4.9999786294442695E-6	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999922664632926	WITHOUT_CLASSIFICATION	7.733536707275736E-6	DEFECT
// create an array holding the group indices for each series...	WITHOUT_CLASSIFICATION	0.9999994864596812	WITHOUT_CLASSIFICATION	5.135403188186991E-7	DEFECT
// minimum and maximum for each group...	WITHOUT_CLASSIFICATION	0.9999990213114027	WITHOUT_CLASSIFICATION	9.78688597282742E-7	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999977406847466	WITHOUT_CLASSIFICATION	2.259315253452089E-6	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999977406847466	WITHOUT_CLASSIFICATION	2.259315253452089E-6	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9999798558171835	WITHOUT_CLASSIFICATION	2.014418281646283E-5	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999993725299232	WITHOUT_CLASSIFICATION	6.274700767925085E-7	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999989174151188	WITHOUT_CLASSIFICATION	1.082584881214807E-6	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999989174151188	WITHOUT_CLASSIFICATION	1.082584881214807E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999837015617415	WITHOUT_CLASSIFICATION	1.6298438258505728E-5	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999998833743764	WITHOUT_CLASSIFICATION	1.1662562358405431E-7	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999922664632926	WITHOUT_CLASSIFICATION	7.733536707275736E-6	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999922664632926	WITHOUT_CLASSIFICATION	7.733536707275736E-6	DEFECT
// we don't know anything about the ordering of the x-values, // so we iterate until we find the first crossing of x (if any) // we know there are at least 2 items in the series at this point	WITHOUT_CLASSIFICATION	0.9999958770847144	WITHOUT_CLASSIFICATION	4.122915285548437E-6	DEFECT
// delegate null check on dataset	WITHOUT_CLASSIFICATION	0.9999916715470858	WITHOUT_CLASSIFICATION	8.328452914094455E-6	DEFECT
// exact match on first item	WITHOUT_CLASSIFICATION	0.9999833183643401	WITHOUT_CLASSIFICATION	1.668163565997656E-5	DEFECT
// no crossing of x	WITHOUT_CLASSIFICATION	0.999993917396781	WITHOUT_CLASSIFICATION	6.08260321897445E-6	DEFECT
// spanning match	WITHOUT_CLASSIFICATION	0.9999968903819001	WITHOUT_CLASSIFICATION	3.10961809986081E-6	DEFECT
// exact match	WITHOUT_CLASSIFICATION	0.9999814486565343	WITHOUT_CLASSIFICATION	1.855134346582544E-5	DEFECT
// maps our series into our parent's	WITHOUT_CLASSIFICATION	0.9999989326740212	WITHOUT_CLASSIFICATION	1.0673259788218038E-6	DEFECT
// prior to 1.0.14, we just fired a PropertyChange - so we need to // keep doing this	WITHOUT_CLASSIFICATION	0.9999973630417393	WITHOUT_CLASSIFICATION	2.636958260784662E-6	DEFECT
// no new methods added.	WITHOUT_CLASSIFICATION	0.9999907479664376	WITHOUT_CLASSIFICATION	9.252033562393332E-6	DEFECT
// first line contains column keys	WITHOUT_CLASSIFICATION	0.9999844405537163	WITHOUT_CLASSIFICATION	1.5559446283709787E-5	DEFECT
// remaining lines contain a row key and data values	WITHOUT_CLASSIFICATION	0.9999986153098591	WITHOUT_CLASSIFICATION	1.384690140917352E-6	DEFECT
// first field contains the row key	WITHOUT_CLASSIFICATION	0.9999786548747309	WITHOUT_CLASSIFICATION	2.1345125269077277E-5	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999924736220045	WITHOUT_CLASSIFICATION	7.526377995442395E-6	DEFECT
// remaining fields contain values	WITHOUT_CLASSIFICATION	0.999995954309928	WITHOUT_CLASSIFICATION	4.045690071918979E-6	DEFECT
// Remove any previous old data	WITHOUT_CLASSIFICATION	0.9999993662683676	WITHOUT_CLASSIFICATION	6.337316324127063E-7	DEFECT
// first column contains the row key...	WITHOUT_CLASSIFICATION	0.9999876542549858	WITHOUT_CLASSIFICATION	1.2345745014110086E-5	DEFECT
// suppress (value defaults to null)	WITHOUT_CLASSIFICATION	0.9999993957966262	WITHOUT_CLASSIFICATION	6.042033737644336E-7	DEFECT
// not a value, can't use it (defaults to null)	WITHOUT_CLASSIFICATION	0.99996257780479	WITHOUT_CLASSIFICATION	3.742219520999643E-5	DEFECT
/// First column is X data	WITHOUT_CLASSIFICATION	0.9999248841244197	WITHOUT_CLASSIFICATION	7.511587558036513E-5	DEFECT
/// Get the column names and cache them.	WITHOUT_CLASSIFICATION	0.9999959833789713	WITHOUT_CLASSIFICATION	4.016621028634978E-6	DEFECT
// Might need to add, to free memory from any previous result sets	WITHOUT_CLASSIFICATION	0.9999998677077286	WITHOUT_CLASSIFICATION	1.3229227143698883E-7	DEFECT
// Are we working with a time series.	WITHOUT_CLASSIFICATION	0.9999407611112192	WITHOUT_CLASSIFICATION	5.9238888780791325E-5	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.999983271405288	WITHOUT_CLASSIFICATION	1.672859471197261E-5	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.999983271405288	WITHOUT_CLASSIFICATION	1.672859471197261E-5	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.999994684102441	WITHOUT_CLASSIFICATION	5.315897558990287E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999814819523627	WITHOUT_CLASSIFICATION	1.8518047637332648E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999950815675372	WITHOUT_CLASSIFICATION	4.918432462745126E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999986490613135	WITHOUT_CLASSIFICATION	1.3509386864212382E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999986490613135	WITHOUT_CLASSIFICATION	1.3509386864212382E-6	DEFECT
// if this series belongs to a dataset, the dataset might veto the // change if it results in two series within the dataset having the // same key	WITHOUT_CLASSIFICATION	0.9999994048773931	WITHOUT_CLASSIFICATION	5.951226068057925E-7	DEFECT
// see comments about priority of // 10 in validateObject()	WITHOUT_CLASSIFICATION	0.9999934626161667	WITHOUT_CLASSIFICATION	6.5373838331979546E-6	DEFECT
// first field is ignored, since // column 0 is for row keys	WITHOUT_CLASSIFICATION	0.9999969607300968	WITHOUT_CLASSIFICATION	3.039269903254842E-6	DEFECT
// Get all rows. // rows = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999978850159135	WITHOUT_CLASSIFICATION	2.1149840865406787E-6	DEFECT
/// Determine max and min values.	WITHOUT_CLASSIFICATION	0.9999956946156993	WITHOUT_CLASSIFICATION	4.305384300681372E-6	DEFECT
// Tell the listeners a new table has arrived.	WITHOUT_CLASSIFICATION	0.9999892593426062	WITHOUT_CLASSIFICATION	1.0740657393730475E-5	DEFECT
// fill the bins	WITHOUT_CLASSIFICATION	0.9999886942585251	WITHOUT_CLASSIFICATION	1.1305741474928935E-5	DEFECT
// generic map for each series	WITHOUT_CLASSIFICATION	0.9999945512766653	WITHOUT_CLASSIFICATION	5.448723334824718E-6	DEFECT
// pretty sure this shouldn't ever happen	WITHOUT_CLASSIFICATION	0.9999746725951982	WITHOUT_CLASSIFICATION	2.5327404801699085E-5	DEFECT
// lower bounds are the same	WITHOUT_CLASSIFICATION	0.99999562264198	WITHOUT_CLASSIFICATION	4.377358020020518E-6	DEFECT
// overridden to make public	WITHOUT_CLASSIFICATION	0.9999967291032421	WITHOUT_CLASSIFICATION	3.270896757860074E-6	DEFECT
// update the cached range values...	WITHOUT_CLASSIFICATION	0.9999992021457508	WITHOUT_CLASSIFICATION	7.978542492688785E-7	DEFECT
// check that the new bin doesn't overlap with any existing bin	WITHOUT_CLASSIFICATION	0.9999969095880892	WITHOUT_CLASSIFICATION	3.090411910785756E-6	DEFECT
// pass values to other constructor	WITHOUT_CLASSIFICATION	0.9999984171669092	WITHOUT_CLASSIFICATION	1.5828330908188455E-6	DEFECT
// update cached min and max values	WITHOUT_CLASSIFICATION	0.9999991082373704	WITHOUT_CLASSIFICATION	8.917626295867312E-7	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999917583998734	WITHOUT_CLASSIFICATION	8.241600126490499E-6	DEFECT
// check for zero pivot element	WITHOUT_CLASSIFICATION	0.9999956385296377	WITHOUT_CLASSIFICATION	4.361470362348095E-6	DEFECT
// treat nulls the same as NaNs	WITHOUT_CLASSIFICATION	0.9999921112182156	WITHOUT_CLASSIFICATION	7.888781784405992E-6	DEFECT
// calculate the sum and count	WITHOUT_CLASSIFICATION	0.9999961449917639	WITHOUT_CLASSIFICATION	3.855008236125957E-6	DEFECT
// intercept	WITHOUT_CLASSIFICATION	0.9999770190194378	WITHOUT_CLASSIFICATION	2.2980980562180877E-5	DEFECT
// sum of x, x^2, x * y, y	WITHOUT_CLASSIFICATION	0.999988139028844	WITHOUT_CLASSIFICATION	1.1860971155925197E-5	DEFECT
// holds the moving average sum	WITHOUT_CLASSIFICATION	0.9999950997692655	WITHOUT_CLASSIFICATION	4.900230734498668E-6	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999917583998734	WITHOUT_CLASSIFICATION	8.241600126490499E-6	DEFECT
// make sure bins[bins.length]'s upper boundary ends at maximum // to avoid the rounding issue. the bins[0] lower boundary is // guaranteed start from min	WITHOUT_CLASSIFICATION	0.9999986851486825	WITHOUT_CLASSIFICATION	1.3148513175121466E-6	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.9999974714384144	WITHOUT_CLASSIFICATION	2.528561585611765E-6	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.999999218052563	WITHOUT_CLASSIFICATION	7.819474370933985E-7	DEFECT
// ********* stat function for linear slope ******** // y = a + bx // a = ybar - b * xbar //     sum(x * y) - (sum (x) * sum(y)) / n // b = ------------------------------------ //     sum (x^2) - (sum(x)^2 / n // *************************************************	WITHOUT_CLASSIFICATION	0.9999993572295764	WITHOUT_CLASSIFICATION	6.427704234530609E-7	DEFECT
// update cached range values	WITHOUT_CLASSIFICATION	0.9999985775819814	WITHOUT_CLASSIFICATION	1.422418018605804E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999875140778858	WITHOUT_CLASSIFICATION	1.2485922114345557E-5	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.999996594057536	WITHOUT_CLASSIFICATION	3.4059424639899167E-6	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.9999974714384144	WITHOUT_CLASSIFICATION	2.528561585611765E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999638387028235	WITHOUT_CLASSIFICATION	3.61612971765162E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999689837275167	WITHOUT_CLASSIFICATION	3.101627248317493E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999959935193005	WITHOUT_CLASSIFICATION	4.006480699585144E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999959935193005	WITHOUT_CLASSIFICATION	4.006480699585144E-6	DEFECT
// we are at the last minute in the hour...	WITHOUT_CLASSIFICATION	0.9999981053035955	WITHOUT_CLASSIFICATION	1.894696404572163E-6	DEFECT
// CASE 1 : Comparing to another Minute object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999740701852975	WITHOUT_CLASSIFICATION	2.5929814702500255E-5	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999983912149835	WITHOUT_CLASSIFICATION	1.6087850165413515E-6	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9999613708272083	WITHOUT_CLASSIFICATION	3.862917279171559E-5	DEFECT
// remove old items and notify if necessary	WITHOUT_CLASSIFICATION	0.9999980858647978	WITHOUT_CLASSIFICATION	1.914135202209574E-6	DEFECT
// make the change (if it's not a duplicate time period)...	WITHOUT_CLASSIFICATION	0.9999977853574035	WITHOUT_CLASSIFICATION	2.2146425965491864E-6	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9999736562645501	WITHOUT_CLASSIFICATION	2.6343735449856632E-5	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9999736562645501	WITHOUT_CLASSIFICATION	2.6343735449856632E-5	DEFECT
// find the serial index of the period specified by 'latest'	WITHOUT_CLASSIFICATION	0.9999997613277406	WITHOUT_CLASSIFICATION	2.386722593208913E-7	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999983841564557	WITHOUT_CLASSIFICATION	1.6158435441778232E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999638387028235	WITHOUT_CLASSIFICATION	3.61612971765162E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999638387028235	WITHOUT_CLASSIFICATION	3.61612971765162E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999689837275167	WITHOUT_CLASSIFICATION	3.101627248317493E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999959935193005	WITHOUT_CLASSIFICATION	4.006480699585144E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999959935193005	WITHOUT_CLASSIFICATION	4.006480699585144E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999983912149835	WITHOUT_CLASSIFICATION	1.6087850165413515E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999983912149835	WITHOUT_CLASSIFICATION	1.6087850165413515E-6	DEFECT
// since the items are ordered, we could be more clever here and avoid // iterating over all the data	WITHOUT_CLASSIFICATION	0.9999982737687952	WITHOUT_CLASSIFICATION	1.7262312047443905E-6	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9999834634164851	WITHOUT_CLASSIFICATION	1.653658351484759E-5	DEFECT
// figure out if we need to iterate through all the y-values // to find the revised minY / maxY	WITHOUT_CLASSIFICATION	0.9999996210038167	WITHOUT_CLASSIFICATION	3.7899618332946995E-7	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.9999995037962135	WITHOUT_CLASSIFICATION	4.96203786449442E-7	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.9999995037962135	WITHOUT_CLASSIFICATION	4.96203786449442E-7	DEFECT
// start is after last data item	WITHOUT_CLASSIFICATION	0.9999925734557078	WITHOUT_CLASSIFICATION	7.426544292266698E-6	DEFECT
// update the time series appropriately	WITHOUT_CLASSIFICATION	0.9999983270191424	WITHOUT_CLASSIFICATION	1.6729808576532376E-6	DEFECT
// we are at the first hour in the day...	WITHOUT_CLASSIFICATION	0.9999932660750315	WITHOUT_CLASSIFICATION	6.73392496848545E-6	DEFECT
// we are at the last hour in the day...	WITHOUT_CLASSIFICATION	0.999998348944133	WITHOUT_CLASSIFICATION	1.6510558670562193E-6	DEFECT
// CASE 1 : Comparing to another Hour object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999835895603623	WITHOUT_CLASSIFICATION	1.6410439637697907E-5	DEFECT
// if the hour is 0 - 23 then create an hour	WITHOUT_CLASSIFICATION	0.9999975244246327	WITHOUT_CLASSIFICATION	2.47557536732498E-6	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9999842896918965	WITHOUT_CLASSIFICATION	1.571030810353659E-5	DEFECT
// create the year...	WITHOUT_CLASSIFICATION	0.9999887299232986	WITHOUT_CLASSIFICATION	1.1270076701429342E-5	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999984573343793	WITHOUT_CLASSIFICATION	1.5426656207485623E-6	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.9999953922071698	WITHOUT_CLASSIFICATION	4.607792830243903E-6	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.9999953922071698	WITHOUT_CLASSIFICATION	4.607792830243903E-6	DEFECT
// remove the point i-periodCount out of the rolling sum.	WITHOUT_CLASSIFICATION	0.9999998840381409	WITHOUT_CLASSIFICATION	1.1596185907145293E-7	DEFECT
// an arbitrary safe default value	WITHOUT_CLASSIFICATION	0.9999954665612601	WITHOUT_CLASSIFICATION	4.5334387398250276E-6	DEFECT
// default value;	WITHOUT_CLASSIFICATION	0.9999959773970823	WITHOUT_CLASSIFICATION	4.0226029176494165E-6	DEFECT
// as a class variable, initializes == 0	WITHOUT_CLASSIFICATION	0.9999986022518953	WITHOUT_CLASSIFICATION	1.3977481046804343E-6	DEFECT
// cached values used for interface DomainInfo:	WITHOUT_CLASSIFICATION	0.9999996162440692	WITHOUT_CLASSIFICATION	3.837559307381646E-7	DEFECT
//rangeGridlinePaint;	WITHOUT_CLASSIFICATION	0.9999775275551549	WITHOUT_CLASSIFICATION	2.247244484514222E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999638387028235	WITHOUT_CLASSIFICATION	3.61612971765162E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999689837275167	WITHOUT_CLASSIFICATION	3.101627248317493E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999689837275167	WITHOUT_CLASSIFICATION	3.101627248317493E-5	DEFECT
// autoinit's to null.	WITHOUT_CLASSIFICATION	0.9999894243581872	WITHOUT_CLASSIFICATION	1.0575641812888215E-5	DEFECT
// CASE 1 : Comparing to another Year object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999550203945028	WITHOUT_CLASSIFICATION	4.4979605497270965E-5	DEFECT
// if the initial averaging period is to be excluded, then // calculate the lowest x-value to have an average calculated...	WITHOUT_CLASSIFICATION	0.9999780639500886	WITHOUT_CLASSIFICATION	2.1936049911490642E-5	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9998565221491604	WITHOUT_CLASSIFICATION	1.4347785083963237E-4	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9998565221491604	WITHOUT_CLASSIFICATION	1.4347785083963237E-4	DEFECT
// if the initial averaging period is to be excluded, then // calculate the index of the // first data item to have an average calculated...	WITHOUT_CLASSIFICATION	0.9999030398306707	WITHOUT_CLASSIFICATION	9.696016932934354E-5	DEFECT
// Cached values used for interface RangeInfo: (note minValue pinned at 0) //   A single set of extrema covers the entire SeriesCollection	WITHOUT_CLASSIFICATION	0.9999989736877771	WITHOUT_CLASSIFICATION	1.0263122228372058E-6	DEFECT
///  .. etc....	WITHOUT_CLASSIFICATION	0.9999700450553463	WITHOUT_CLASSIFICATION	2.995494465368436E-5	DEFECT
/// Expand the following for all defined TimePeriods:	WITHOUT_CLASSIFICATION	0.9999953282006417	WITHOUT_CLASSIFICATION	4.671799358265646E-6	DEFECT
// initialize the members of "seriesNames" array so they won't be null:	WITHOUT_CLASSIFICATION	0.9996895397043063	WITHOUT_CLASSIFICATION	3.1046029569362825E-4	DEFECT
//{ // deep copy from values[], caller // can safely discard that array	WITHOUT_CLASSIFICATION	0.9999867770387458	WITHOUT_CLASSIFICATION	1.3222961254108953E-5	DEFECT
// Avoid IndexOutOfBoundsException:	WITHOUT_CLASSIFICATION	0.9999072341604552	WITHOUT_CLASSIFICATION	9.276583954475327E-5	DEFECT
// But if that series array already exists, just overwrite its contents	WITHOUT_CLASSIFICATION	0.9999984387983402	WITHOUT_CLASSIFICATION	1.5612016598517822E-6	DEFECT
// But if that series array already exists, just overwrite its contents //synchronized(this) //{	WITHOUT_CLASSIFICATION	0.9999974738698291	WITHOUT_CLASSIFICATION	2.5261301708738244E-6	DEFECT
// all arrays equal length, // so ignore argument:	WITHOUT_CLASSIFICATION	0.9999988833069158	WITHOUT_CLASSIFICATION	1.1166930841378268E-6	DEFECT
// Methods for managing the FIFO's:	WITHOUT_CLASSIFICATION	0.9999778211920434	WITHOUT_CLASSIFICATION	2.2178807956582904E-5	DEFECT
// no translation needed	WITHOUT_CLASSIFICATION	0.9999965757118987	WITHOUT_CLASSIFICATION	3.4242881012467584E-6	DEFECT
// else  [implicit here]	WITHOUT_CLASSIFICATION	0.9999915967484162	WITHOUT_CLASSIFICATION	8.403251583794896E-6	DEFECT
// newestAt takes value previously held // by oldestAT	WITHOUT_CLASSIFICATION	0.9999954192017969	WITHOUT_CLASSIFICATION	4.58079820318178E-6	DEFECT
// if the oldest data contained a maximum Y-value, invalidate the stored //   Y-max and Y-range data:	WITHOUT_CLASSIFICATION	0.9999981616673151	WITHOUT_CLASSIFICATION	1.8383326848029034E-6	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999990956712741	WITHOUT_CLASSIFICATION	9.043287258045759E-7	DEFECT
//  wipe the next (about to be used) set of data slots	WITHOUT_CLASSIFICATION	0.9999998148934907	WITHOUT_CLASSIFICATION	1.8510650924276942E-7	DEFECT
// Update the array of TimePeriods:	WITHOUT_CLASSIFICATION	0.9999743147515399	WITHOUT_CLASSIFICATION	2.5685248460206215E-5	DEFECT
// Now advance "oldestAt", wrapping at end of the array	WITHOUT_CLASSIFICATION	0.9999958534301365	WITHOUT_CLASSIFICATION	4.1465698634780695E-6	DEFECT
// Update the domain limits: //(time is kept in msec)	WITHOUT_CLASSIFICATION	0.9999160225156056	WITHOUT_CLASSIFICATION	8.397748439433467E-5	DEFECT
//  If data can be < 0, the next 2 methods should be modified	WITHOUT_CLASSIFICATION	0.9999980633856507	WITHOUT_CLASSIFICATION	1.936614349270725E-6	DEFECT
// index to select the "series"	WITHOUT_CLASSIFICATION	0.9999899450097643	WITHOUT_CLASSIFICATION	1.005499023566812E-5	DEFECT
/* // "Extras" found useful when analyzing/verifying class behavior:    public Number getUntranslatedXValue(int series, int item)    {      return super.getXValue(series, item);    }    public float getUntranslatedY(int series, int item)    {      return super.getY(series, item);    }  */	WITHOUT_CLASSIFICATION	0.9999999516449926	WITHOUT_CLASSIFICATION	4.835500744980535E-8	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9999930743955922	WITHOUT_CLASSIFICATION	6.925604407850111E-6	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9999930743955922	WITHOUT_CLASSIFICATION	6.925604407850111E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999984451029307	WITHOUT_CLASSIFICATION	1.554897069276748E-6	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999890089110698	WITHOUT_CLASSIFICATION	1.0991088930268753E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999984451029307	WITHOUT_CLASSIFICATION	1.554897069276748E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999984451029307	WITHOUT_CLASSIFICATION	1.554897069276748E-6	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.999998881148795	WITHOUT_CLASSIFICATION	1.118851204978837E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999638387028235	WITHOUT_CLASSIFICATION	3.61612971765162E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999689837275167	WITHOUT_CLASSIFICATION	3.101627248317493E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999902894782691	WITHOUT_CLASSIFICATION	9.710521730944788E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999689837275167	WITHOUT_CLASSIFICATION	3.101627248317493E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999959935193005	WITHOUT_CLASSIFICATION	4.006480699585144E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999959935193005	WITHOUT_CLASSIFICATION	4.006480699585144E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999983912149835	WITHOUT_CLASSIFICATION	1.6087850165413515E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999983912149835	WITHOUT_CLASSIFICATION	1.6087850165413515E-6	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9999842896918965	WITHOUT_CLASSIFICATION	1.571030810353659E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999820886259144	WITHOUT_CLASSIFICATION	1.7911374085624658E-5	DEFECT
// appendData() writes new data at the index position given by newestAt/ // When adding new data dynamically, use advanceTime(), followed by this:	WITHOUT_CLASSIFICATION	0.9999855800472305	WITHOUT_CLASSIFICATION	1.4419952769458681E-5	DEFECT
// check whether the "valueHistory" array member exists; if not, // create them:	WITHOUT_CLASSIFICATION	0.9999981434238174	WITHOUT_CLASSIFICATION	1.8565761825643007E-6	DEFECT
// getXxx() ftns can ignore the "series" argument: // Don't synchronize this!! Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9999610945400182	WITHOUT_CLASSIFICATION	3.890545998186294E-5	DEFECT
// Don't synchronize this!! // Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9999855207184577	WITHOUT_CLASSIFICATION	1.4479281542215151E-5	DEFECT
// The next 3 functions implement the RangeInfo interface. // Using saved limits (updated by each updateTime() call) significantly // improves performance.  WARNING: this code makes the simplifying // assumption that data is never negative.  Expand as needed for the // general case.	WITHOUT_CLASSIFICATION	0.9999660881704374	WITHOUT_CLASSIFICATION	3.3911829562662644E-5	DEFECT
// CASE 1 : Comparing to another Quarter object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999785227925043	WITHOUT_CLASSIFICATION	2.1477207495702547E-5	DEFECT
// find the Q and the integer following it (remove both from the // string)...	WITHOUT_CLASSIFICATION	0.9999994014101556	WITHOUT_CLASSIFICATION	5.985898444520913E-7	DEFECT
// replace any / , or - with a space	WITHOUT_CLASSIFICATION	0.9999995090363311	WITHOUT_CLASSIFICATION	4.909636688953176E-7	DEFECT
// do nothing, so null is returned	WITHOUT_CLASSIFICATION	0.9999904526273076	WITHOUT_CLASSIFICATION	9.54737269255192E-6	DEFECT
//////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999862382513868	WITHOUT_CLASSIFICATION	1.3761748613189926E-4	DEFECT
// CASE 1 : Comparing to another Day object // ----------------------------------------	WITHOUT_CLASSIFICATION	0.9999497847075671	WITHOUT_CLASSIFICATION	5.0215292432899076E-5	DEFECT
// check arguments...delegated // fetch the series name...	WITHOUT_CLASSIFICATION	0.9999983086874059	WITHOUT_CLASSIFICATION	1.6913125940123277E-6	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999990956712741	WITHOUT_CLASSIFICATION	9.043287258045759E-7	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.9999654560668991	WITHOUT_CLASSIFICATION	3.454393310084473E-5	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.9999903886577757	WITHOUT_CLASSIFICATION	9.611342224249896E-6	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.9999982910469455	WITHOUT_CLASSIFICATION	1.708953054573094E-6	DEFECT
// we need to work out if the previous year has 52 or 53 weeks...	WITHOUT_CLASSIFICATION	0.9999982353175558	WITHOUT_CLASSIFICATION	1.76468244417486E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999820886259144	WITHOUT_CLASSIFICATION	1.7911374085624658E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999820886259144	WITHOUT_CLASSIFICATION	1.7911374085624658E-5	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999583397562296	WITHOUT_CLASSIFICATION	4.1660243770357786E-5	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.999998881148795	WITHOUT_CLASSIFICATION	1.118851204978837E-6	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999699455621983	WITHOUT_CLASSIFICATION	3.0054437801764985E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999875140778858	WITHOUT_CLASSIFICATION	1.2485922114345557E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999875140778858	WITHOUT_CLASSIFICATION	1.2485922114345557E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999638387028235	WITHOUT_CLASSIFICATION	3.61612971765162E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999689837275167	WITHOUT_CLASSIFICATION	3.101627248317493E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999689837275167	WITHOUT_CLASSIFICATION	3.101627248317493E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999689837275167	WITHOUT_CLASSIFICATION	3.101627248317493E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999959935193005	WITHOUT_CLASSIFICATION	4.006480699585144E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999959935193005	WITHOUT_CLASSIFICATION	4.006480699585144E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999959935193005	WITHOUT_CLASSIFICATION	4.006480699585144E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999959935193005	WITHOUT_CLASSIFICATION	4.006480699585144E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999959935193005	WITHOUT_CLASSIFICATION	4.006480699585144E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999983912149835	WITHOUT_CLASSIFICATION	1.6087850165413515E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999983912149835	WITHOUT_CLASSIFICATION	1.6087850165413515E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999983912149835	WITHOUT_CLASSIFICATION	1.6087850165413515E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999983912149835	WITHOUT_CLASSIFICATION	1.6087850165413515E-6	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9999613708272083	WITHOUT_CLASSIFICATION	3.862917279171559E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999820886259144	WITHOUT_CLASSIFICATION	1.7911374085624658E-5	DEFECT
// sometimes the last few days of the year are considered to fall in // the *first* week of the following year.  Refer to the Javadocs for // GregorianCalendar.	WITHOUT_CLASSIFICATION	0.9999983540324465	WITHOUT_CLASSIFICATION	1.6459675535287543E-6	DEFECT
// CASE 1 : Comparing to another Week object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999667254674648	WITHOUT_CLASSIFICATION	3.327453253531021E-5	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9999949076660409	WITHOUT_CLASSIFICATION	5.092333959061352E-6	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9999949076660409	WITHOUT_CLASSIFICATION	5.092333959061352E-6	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999980031685405	WITHOUT_CLASSIFICATION	1.996831459517127E-6	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999980031685405	WITHOUT_CLASSIFICATION	1.996831459517127E-6	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999980031685405	WITHOUT_CLASSIFICATION	1.996831459517127E-6	DEFECT
// CASE 1 : Comparing to another Month object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999704074559209	WITHOUT_CLASSIFICATION	2.9592544079123505E-5	DEFECT
// if there is no separator, we assume the first four characters // are YYYY	WITHOUT_CLASSIFICATION	0.9999975598336305	WITHOUT_CLASSIFICATION	2.44016636959246E-6	DEFECT
// now it is trickier to determine if the month or year is first	WITHOUT_CLASSIFICATION	0.999985197320401	WITHOUT_CLASSIFICATION	1.4802679599125098E-5	DEFECT
// --- DEPRECATED METHODS -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998852958029274	WITHOUT_CLASSIFICATION	1.1470419707267935E-4	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataItem object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999507161274067	WITHOUT_CLASSIFICATION	4.928387259328225E-5	DEFECT
//private Comparable key;	WITHOUT_CLASSIFICATION	0.9999846443422771	WITHOUT_CLASSIFICATION	1.5355657722935575E-5	DEFECT
//this.key = null;	WITHOUT_CLASSIFICATION	0.9998801811249056	WITHOUT_CLASSIFICATION	1.1981887509444802E-4	DEFECT
// no attributes to read	WITHOUT_CLASSIFICATION	0.9999911664902571	WITHOUT_CLASSIFICATION	8.833509742862464E-6	DEFECT
//axisOffset;	WITHOUT_CLASSIFICATION	0.9999014737226367	WITHOUT_CLASSIFICATION	9.852627736334059E-5	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.999994684102441	WITHOUT_CLASSIFICATION	5.315897558990287E-6	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999996558115479	WITHOUT_CLASSIFICATION	3.441884520157552E-7	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.999998881148795	WITHOUT_CLASSIFICATION	1.118851204978837E-6	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.9999654560668991	WITHOUT_CLASSIFICATION	3.454393310084473E-5	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.9999982910469455	WITHOUT_CLASSIFICATION	1.708953054573094E-6	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.999998793774725	WITHOUT_CLASSIFICATION	1.2062252749861513E-6	DEFECT
// XYDataset only provides methods for reading a dataset...	WITHOUT_CLASSIFICATION	0.9999995530875976	WITHOUT_CLASSIFICATION	4.469124024588013E-7	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.9999990621599455	WITHOUT_CLASSIFICATION	9.378400543957378E-7	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.9999990621599455	WITHOUT_CLASSIFICATION	9.378400543957378E-7	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.999998793774725	WITHOUT_CLASSIFICATION	1.2062252749861513E-6	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.999997382659489	WITHOUT_CLASSIFICATION	2.6173405110032857E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999820886259144	WITHOUT_CLASSIFICATION	1.7911374085624658E-5	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999965511079821	WITHOUT_CLASSIFICATION	3.44889201776404E-6	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.999999418146588	WITHOUT_CLASSIFICATION	5.818534120452008E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999820886259144	WITHOUT_CLASSIFICATION	1.7911374085624658E-5	DEFECT
// we can't be sure of the order	WITHOUT_CLASSIFICATION	0.9999457818988488	WITHOUT_CLASSIFICATION	5.421810115116978E-5	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999964112358688	WITHOUT_CLASSIFICATION	3.588764131279111E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999820886259144	WITHOUT_CLASSIFICATION	1.7911374085624658E-5	DEFECT
// either autoWidth is off or autoIntervalWidth was not set.	WITHOUT_CLASSIFICATION	0.9999970666560846	WITHOUT_CLASSIFICATION	2.9333439153482353E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999820886259144	WITHOUT_CLASSIFICATION	1.7911374085624658E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999820886259144	WITHOUT_CLASSIFICATION	1.7911374085624658E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999820886259144	WITHOUT_CLASSIFICATION	1.7911374085624658E-5	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999986572571242	WITHOUT_CLASSIFICATION	1.3427428757591697E-6	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999986572571242	WITHOUT_CLASSIFICATION	1.3427428757591697E-6	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.9999980850064261	WITHOUT_CLASSIFICATION	1.914993573949723E-6	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.9999994799775161	WITHOUT_CLASSIFICATION	5.200224839337375E-7	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.9999811120154845	WITHOUT_CLASSIFICATION	1.888798451548892E-5	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999583397562296	WITHOUT_CLASSIFICATION	4.1660243770357786E-5	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.999994684102441	WITHOUT_CLASSIFICATION	5.315897558990287E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999959935193005	WITHOUT_CLASSIFICATION	4.006480699585144E-6	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9999613708272083	WITHOUT_CLASSIFICATION	3.862917279171559E-5	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9999736562645501	WITHOUT_CLASSIFICATION	2.6343735449856632E-5	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.9999903886577757	WITHOUT_CLASSIFICATION	9.611342224249896E-6	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.999997382659489	WITHOUT_CLASSIFICATION	2.6173405110032857E-6	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.999997382659489	WITHOUT_CLASSIFICATION	2.6173405110032857E-6	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.999998793774725	WITHOUT_CLASSIFICATION	1.2062252749861513E-6	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.999999418146588	WITHOUT_CLASSIFICATION	5.818534120452008E-7	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999965511079821	WITHOUT_CLASSIFICATION	3.44889201776404E-6	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999965511079821	WITHOUT_CLASSIFICATION	3.44889201776404E-6	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999964112358688	WITHOUT_CLASSIFICATION	3.588764131279111E-6	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999964112358688	WITHOUT_CLASSIFICATION	3.588764131279111E-6	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.9999937595881087	WITHOUT_CLASSIFICATION	6.2404118912836455E-6	DEFECT
// everything is fine: autoWidth is on, and an autoIntervalWidth // was set.	WITHOUT_CLASSIFICATION	0.9999967055105062	WITHOUT_CLASSIFICATION	3.2944894938015908E-6	DEFECT
// first get the range without the interval, then expand it for the // interval width	WITHOUT_CLASSIFICATION	0.9999991719515958	WITHOUT_CLASSIFICATION	8.280484042050675E-7	DEFECT
// all series have the same number of items in // this dataset	WITHOUT_CLASSIFICATION	0.9999967852116612	WITHOUT_CLASSIFICATION	3.2147883388421472E-6	DEFECT
// this.x is not allowed to be null...	WITHOUT_CLASSIFICATION	0.9991452341243388	WITHOUT_CLASSIFICATION	8.547658756612787E-4	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataPair object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999687829861373	WITHOUT_CLASSIFICATION	3.121701386272335E-5	DEFECT
// In version 0.9.12, in response to several developer requests, I changed // the 'data' attribute from 'private' to 'protected', so that others can // make subclasses that work directly with the underlying data structure.	WITHOUT_CLASSIFICATION	0.9999984836111043	WITHOUT_CLASSIFICATION	1.5163888956064695E-6	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999991950409429	WITHOUT_CLASSIFICATION	8.049590571037221E-7	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999991950409429	WITHOUT_CLASSIFICATION	8.049590571037221E-7	DEFECT
// if we get to here, we know that duplicate X values are not permitted	WITHOUT_CLASSIFICATION	0.9999489977657026	WITHOUT_CLASSIFICATION	5.100223429746694E-5	DEFECT
/*         * we assum super is always initialized to all-zero matrix, so the         * total sum should be 0 upon initialization. However, we set it to         * Double.MIN_VALUE to get the same effect and yet avoid division by 0         * upon initialization.         */	WITHOUT_CLASSIFICATION	0.9999974511956284	WITHOUT_CLASSIFICATION	2.548804371487002E-6	DEFECT
// add the series...	WITHOUT_CLASSIFICATION	0.9999970011306519	WITHOUT_CLASSIFICATION	2.998869348185199E-6	DEFECT
// try a class that isn't a listener	WITHOUT_CLASSIFICATION	0.9999735982878547	WITHOUT_CLASSIFICATION	2.6401712145334663E-5	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.999996106288589	WITHOUT_CLASSIFICATION	3.893711410875809E-6	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9999998833523218	WITHOUT_CLASSIFICATION	1.1664767816785953E-7	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.9999974663996652	WITHOUT_CLASSIFICATION	2.5336003347901986E-6	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9999939424246573	WITHOUT_CLASSIFICATION	6.057575342645137E-6	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999133291356104	WITHOUT_CLASSIFICATION	8.6670864389622E-5	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.9999951570800615	WITHOUT_CLASSIFICATION	4.842919938560933E-6	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999992682444775	WITHOUT_CLASSIFICATION	7.317555226132284E-7	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999829750672266	WITHOUT_CLASSIFICATION	1.702493277346515E-5	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999829750672266	WITHOUT_CLASSIFICATION	1.702493277346515E-5	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.9999960207338731	WITHOUT_CLASSIFICATION	3.979266126956688E-6	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999983841564557	WITHOUT_CLASSIFICATION	1.6158435441778232E-6	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999996558115479	WITHOUT_CLASSIFICATION	3.441884520157552E-7	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.999997382659489	WITHOUT_CLASSIFICATION	2.6173405110032857E-6	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.999997382659489	WITHOUT_CLASSIFICATION	2.6173405110032857E-6	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.9999952975517478	WITHOUT_CLASSIFICATION	4.7024482521692814E-6	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.9999926052161705	WITHOUT_CLASSIFICATION	7.39478382942135E-6	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.9999926052161705	WITHOUT_CLASSIFICATION	7.39478382942135E-6	DEFECT
//TODO private boolean fillZoomRectangle = true;	WITHOUT_CLASSIFICATION	0.9996708994845029	WITHOUT_CLASSIFICATION	3.2910051549713714E-4	DEFECT
// create the canvas and add the required listeners	WITHOUT_CLASSIFICATION	0.9999996310191492	WITHOUT_CLASSIFICATION	3.689808508489094E-7	DEFECT
//ChartEditorManager.getChartEditor(canvas.getDisplay(), this.chart);	WITHOUT_CLASSIFICATION	0.9999885974956241	WITHOUT_CLASSIFICATION	1.1402504375827274E-5	DEFECT
/* in the next zoomPoint.x and y replace by e.x and y for now.         * this helps to handle the mouse events and besides,         * those values are unused AFAIK. */	WITHOUT_CLASSIFICATION	0.9999997972503774	WITHOUT_CLASSIFICATION	2.0274962253416853E-7	DEFECT
// do nothing, override if necessary	WITHOUT_CLASSIFICATION	0.9999978650801434	WITHOUT_CLASSIFICATION	2.134919856584736E-6	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999868972296667	WITHOUT_CLASSIFICATION	1.3102770333341489E-5	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999868972296667	WITHOUT_CLASSIFICATION	1.3102770333341489E-5	DEFECT
// pass mouse down event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999995011947306	WITHOUT_CLASSIFICATION	4.988052694814311E-7	DEFECT
// if the box has been drawn backwards, restore the auto bounds	WITHOUT_CLASSIFICATION	0.9999995936470021	WITHOUT_CLASSIFICATION	4.0635299784539653E-7	DEFECT
// handle axis trace	WITHOUT_CLASSIFICATION	0.9999950541865201	WITHOUT_CLASSIFICATION	4.945813479839901E-6	DEFECT
// handle tool tips in a simple way	WITHOUT_CLASSIFICATION	0.9999990587866371	WITHOUT_CLASSIFICATION	9.412133628867288E-7	DEFECT
// handle zoom box	WITHOUT_CLASSIFICATION	0.9999949190394766	WITHOUT_CLASSIFICATION	5.080960523367137E-6	DEFECT
// skip if chart is null	WITHOUT_CLASSIFICATION	0.9999674106964266	WITHOUT_CLASSIFICATION	3.2589303573383034E-5	DEFECT
//axisLabelPaint;	WITHOUT_CLASSIFICATION	0.9999893528775604	WITHOUT_CLASSIFICATION	1.0647122439550047E-5	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999676268048	WITHOUT_CLASSIFICATION	3.237319512109051E-8	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9999997086937149	WITHOUT_CLASSIFICATION	2.913062851457342E-7	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999970162554471	WITHOUT_CLASSIFICATION	2.9837445529045437E-6	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9999984157759403	WITHOUT_CLASSIFICATION	1.584224059726978E-6	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.9999952975517478	WITHOUT_CLASSIFICATION	4.7024482521692814E-6	DEFECT
//SwtGraphics2D sg2 = new SwtGraphics2D(e.gc);	WITHOUT_CLASSIFICATION	0.9999930361403739	WITHOUT_CLASSIFICATION	6.96385962605758E-6	DEFECT
// do we need to fill the buffer?	WITHOUT_CLASSIFICATION	0.9998342740967877	WITHOUT_CLASSIFICATION	1.6572590321226567E-4	DEFECT
// Performs the actual drawing here ...	WITHOUT_CLASSIFICATION	0.9999965298937894	WITHOUT_CLASSIFICATION	3.470106210579693E-6	DEFECT
// anti-aliasing	WITHOUT_CLASSIFICATION	0.9999980026161063	WITHOUT_CLASSIFICATION	1.99738389369796E-6	DEFECT
// zap the buffer onto the canvas...	WITHOUT_CLASSIFICATION	0.9999959221597213	WITHOUT_CLASSIFICATION	4.077840278694714E-6	DEFECT
// or redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.999998726755224	WITHOUT_CLASSIFICATION	1.2732447759200909E-6	DEFECT
// de-register the composite as a listener for the chart.	WITHOUT_CLASSIFICATION	0.9999994600767687	WITHOUT_CLASSIFICATION	5.399232313894019E-7	DEFECT
// AXIS 2	WITHOUT_CLASSIFICATION	0.9999544960916882	WITHOUT_CLASSIFICATION	4.5503908311768066E-5	DEFECT
// AXIS 3	WITHOUT_CLASSIFICATION	0.9999554748506249	WITHOUT_CLASSIFICATION	4.452514937518455E-5	DEFECT
//axis3.setPositiveArrowVisible(true);	WITHOUT_CLASSIFICATION	0.9999963409670267	WITHOUT_CLASSIFICATION	3.6590329732737184E-6	DEFECT
// AXIS 4	WITHOUT_CLASSIFICATION	0.9999439887358654	WITHOUT_CLASSIFICATION	5.601126413450561E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999874650572937	WITHOUT_CLASSIFICATION	1.2534942706321494E-5	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.999998764684926	WITHOUT_CLASSIFICATION	1.2353150740110513E-6	DEFECT
// NOW DO SOME OPTIONAL CUSTOMISATION OF THE CHART...	WITHOUT_CLASSIFICATION	0.9972360090473653	WITHOUT_CLASSIFICATION	0.0027639909526345923	DEFECT
// get a reference to the plot for further customisation...	WITHOUT_CLASSIFICATION	0.9999997700781729	WITHOUT_CLASSIFICATION	2.2992182722293327E-7	DEFECT
// set the range axis to display integers only...	WITHOUT_CLASSIFICATION	0.99999905748932	WITHOUT_CLASSIFICATION	9.425106799197095E-7	DEFECT
// disable bar outlines...	WITHOUT_CLASSIFICATION	0.9999988579765549	WITHOUT_CLASSIFICATION	1.142023445164284E-6	DEFECT
// OPTIONAL CUSTOMISATION COMPLETED.	WITHOUT_CLASSIFICATION	0.9997860857335608	WITHOUT_CLASSIFICATION	2.1391426643920856E-4	DEFECT
// chart title // data // include legend	WITHOUT_CLASSIFICATION	0.9999967050253757	WITHOUT_CLASSIFICATION	3.294974624290289E-6	DEFECT
//frame.setDisplayToolTips(false);	WITHOUT_CLASSIFICATION	0.9999917495619849	WITHOUT_CLASSIFICATION	8.250438015165487E-6	DEFECT
// row 1: antialiasing	WITHOUT_CLASSIFICATION	0.9999932388362861	WITHOUT_CLASSIFICATION	6.761163713877836E-6	DEFECT
//row 2: background paint for the chart	WITHOUT_CLASSIFICATION	0.9999976901510551	WITHOUT_CLASSIFICATION	2.3098489448228556E-6	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.9999921019876986	WITHOUT_CLASSIFICATION	7.898012301398427E-6	DEFECT
//empty cell // row 2	WITHOUT_CLASSIFICATION	0.999976742646026	WITHOUT_CLASSIFICATION	2.3257353974020354E-5	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999994334918973	WITHOUT_CLASSIFICATION	5.665081025526576E-7	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999981153418471	WITHOUT_CLASSIFICATION	1.8846581528335306E-6	DEFECT
// build second tab	WITHOUT_CLASSIFICATION	0.9999980064347631	WITHOUT_CLASSIFICATION	1.9935652368667683E-6	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9999546653453696	WITHOUT_CLASSIFICATION	4.533465463032995E-5	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.9999989574946889	WITHOUT_CLASSIFICATION	1.042505311059415E-6	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.9999921019876986	WITHOUT_CLASSIFICATION	7.898012301398427E-6	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999994334918973	WITHOUT_CLASSIFICATION	5.665081025526576E-7	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999994334918973	WITHOUT_CLASSIFICATION	5.665081025526576E-7	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999981153418471	WITHOUT_CLASSIFICATION	1.8846581528335306E-6	DEFECT
// check a regular value	WITHOUT_CLASSIFICATION	0.9999950381868405	WITHOUT_CLASSIFICATION	4.9618131594443785E-6	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999997552356131	WITHOUT_CLASSIFICATION	2.4476438691742954E-7	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999997552356131	WITHOUT_CLASSIFICATION	2.4476438691742954E-7	DEFECT
//label.setFont(font);	WITHOUT_CLASSIFICATION	0.9999794605808385	WITHOUT_CLASSIFICATION	2.05394191614891E-5	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9999930680194609	WITHOUT_CLASSIFICATION	6.9319805391744936E-6	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9999930680194609	WITHOUT_CLASSIFICATION	6.9319805391744936E-6	DEFECT
// Use a colored text field to show the color	WITHOUT_CLASSIFICATION	0.9999958920141488	WITHOUT_CLASSIFICATION	4.107985851166608E-6	DEFECT
//tickLabelFontField.setFont(SwtUtils.toSwtFontData(getDisplay(), // axis.getTickLabelFont()));	WITHOUT_CLASSIFICATION	0.999998449317858	WITHOUT_CLASSIFICATION	1.5506821420419722E-6	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999997306994487	WITHOUT_CLASSIFICATION	2.6930055125596515E-7	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999997306994487	WITHOUT_CLASSIFICATION	2.6930055125596515E-7	DEFECT
//tickLabelFontField.setFont(font);	WITHOUT_CLASSIFICATION	0.9999922203666295	WITHOUT_CLASSIFICATION	7.779633370505074E-6	DEFECT
// return the appropriate axis editor	WITHOUT_CLASSIFICATION	0.9999995815453558	WITHOUT_CLASSIFICATION	4.1845464408115206E-7	DEFECT
//this.minimumRangeValue.addModifyListener(this); //this.minimumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.999992683160004	WITHOUT_CLASSIFICATION	7.316839996032104E-6	DEFECT
//this.maximumRangeValue.addModifyListener(this); //this.maximumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.9999858547368049	WITHOUT_CLASSIFICATION	1.4145263195047881E-5	DEFECT
// verify min value	WITHOUT_CLASSIFICATION	0.999992418422054	WITHOUT_CLASSIFICATION	7.581577946050968E-6	DEFECT
// verify max value	WITHOUT_CLASSIFICATION	0.9999844870536682	WITHOUT_CLASSIFICATION	1.5512946331861543E-5	DEFECT
//deal with domain axis	WITHOUT_CLASSIFICATION	0.9999795183777745	WITHOUT_CLASSIFICATION	2.0481622225386693E-5	DEFECT
//deal with range axis	WITHOUT_CLASSIFICATION	0.9999845945505336	WITHOUT_CLASSIFICATION	1.5405449466455796E-5	DEFECT
//deal with plot appearance	WITHOUT_CLASSIFICATION	0.9999713916798666	WITHOUT_CLASSIFICATION	2.860832013339259E-5	DEFECT
// set the axis properties	WITHOUT_CLASSIFICATION	0.9999982824966651	WITHOUT_CLASSIFICATION	1.7175033349595677E-6	DEFECT
// row 1: stroke	WITHOUT_CLASSIFICATION	0.9999736490418486	WITHOUT_CLASSIFICATION	2.63509581514012E-5	DEFECT
// row 3: background paint	WITHOUT_CLASSIFICATION	0.9999961737648738	WITHOUT_CLASSIFICATION	3.826235126083939E-6	DEFECT
// row 4: orientation	WITHOUT_CLASSIFICATION	0.9999345699732544	WITHOUT_CLASSIFICATION	6.543002674566382E-5	DEFECT
// row 2	WITHOUT_CLASSIFICATION	0.9999929154600247	WITHOUT_CLASSIFICATION	7.0845399753410455E-6	DEFECT
//titleField.setFont(font);	WITHOUT_CLASSIFICATION	0.9999792176083262	WITHOUT_CLASSIFICATION	2.078239167384618E-5	DEFECT
// row 4	WITHOUT_CLASSIFICATION	0.9999912794840035	WITHOUT_CLASSIFICATION	8.720515996597475E-6	DEFECT
// build first tab	WITHOUT_CLASSIFICATION	0.999990422547459	WITHOUT_CLASSIFICATION	9.577452541110432E-6	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9998196013578359	WITHOUT_CLASSIFICATION	1.803986421640524E-4	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999949631234512	WITHOUT_CLASSIFICATION	5.0368765488713666E-6	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999835537744276	WITHOUT_CLASSIFICATION	1.6446225572302775E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999874650572937	WITHOUT_CLASSIFICATION	1.2534942706321494E-5	DEFECT
// since this is only used by clearRect(), we don't update the GC yet	WITHOUT_CLASSIFICATION	0.9999972408033682	WITHOUT_CLASSIFICATION	2.7591966319556826E-6	DEFECT
// build the third tab	WITHOUT_CLASSIFICATION	0.9999899102631543	WITHOUT_CLASSIFICATION	1.0089736845655863E-5	DEFECT
// ok and cancel buttons	WITHOUT_CLASSIFICATION	0.9999965676179451	WITHOUT_CLASSIFICATION	3.4323820549874535E-6	DEFECT
// to be consistent with other Graphics2D implementations	WITHOUT_CLASSIFICATION	0.9999963698364116	WITHOUT_CLASSIFICATION	3.6301635883903327E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999906161563248	WITHOUT_CLASSIFICATION	9.38384367509762E-6	DEFECT
// apply dash style if any	WITHOUT_CLASSIFICATION	0.9999939698997176	WITHOUT_CLASSIFICATION	6.03010028245323E-6	DEFECT
// handle transparency and compositing.	WITHOUT_CLASSIFICATION	0.9999983217541476	WITHOUT_CLASSIFICATION	1.6782458524089907E-6	DEFECT
// we can't use the following valueOf() method, because it // won't compile with JDK1.4 // this.colorsPool.get(Integer.valueOf(awtColor.getRGB()));	WITHOUT_CLASSIFICATION	0.9996474131368733	WITHOUT_CLASSIFICATION	3.5258686312660426E-4	DEFECT
// set the line style to solid by default	WITHOUT_CLASSIFICATION	0.9999993591440801	WITHOUT_CLASSIFICATION	6.408559199825747E-7	DEFECT
// retrieve the swt font description in an os indept way	WITHOUT_CLASSIFICATION	0.9999985088477198	WITHOUT_CLASSIFICATION	1.4911522801561748E-6	DEFECT
// Note that for consistency with the AWT implementation, it is // necessary to switch temporarily the foreground and background // colours	WITHOUT_CLASSIFICATION	0.9999996876568014	WITHOUT_CLASSIFICATION	3.123431986128948E-7	DEFECT
// for now we simply want to extract the chars from the iterator // and call an unstyled text renderer	WITHOUT_CLASSIFICATION	0.9999993707883971	WITHOUT_CLASSIFICATION	6.292116029697225E-7	DEFECT
// create a new awt font with the appropiate data	WITHOUT_CLASSIFICATION	0.9999993076736581	WITHOUT_CLASSIFICATION	6.923263419863408E-7	DEFECT
// we dispose resources we own but user must dispose gc	WITHOUT_CLASSIFICATION	0.9999972284616266	WITHOUT_CLASSIFICATION	2.7715383734094145E-6	DEFECT
// see comment above //this.colorsPool.put(Integer.valueOf(awtColor.getRGB()), swtColor);	WITHOUT_CLASSIFICATION	0.9999987707823068	WITHOUT_CLASSIFICATION	1.2292176932245983E-6	DEFECT
// SWT and AWT share the same style constants.	WITHOUT_CLASSIFICATION	0.9999970564660441	WITHOUT_CLASSIFICATION	2.9435339559553556E-6	DEFECT
// convert the font size (in pt for awt) to height in pixels for swt	WITHOUT_CLASSIFICATION	0.9999983954331393	WITHOUT_CLASSIFICATION	1.6045668607200395E-6	DEFECT
//this.myColor = new Color(getDisplay(), color.getRGB());	WITHOUT_CLASSIFICATION	0.9999956884068373	WITHOUT_CLASSIFICATION	4.311593162696107E-6	DEFECT
// renderingHints	WITHOUT_CLASSIFICATION	0.9999961769397145	WITHOUT_CLASSIFICATION	3.823060285546057E-6	DEFECT
// borderStroke	WITHOUT_CLASSIFICATION	0.9999633530792358	WITHOUT_CLASSIFICATION	3.664692076411012E-5	DEFECT
// borderVisible	WITHOUT_CLASSIFICATION	0.9999932260831783	WITHOUT_CLASSIFICATION	6.7739168216097625E-6	DEFECT
// borderPaint	WITHOUT_CLASSIFICATION	0.9999940517509728	WITHOUT_CLASSIFICATION	5.948249027199197E-6	DEFECT
// title	WITHOUT_CLASSIFICATION	0.9999907826962762	WITHOUT_CLASSIFICATION	9.21730372384349E-6	DEFECT
// subtitles	WITHOUT_CLASSIFICATION	0.9999974530262548	WITHOUT_CLASSIFICATION	2.5469737451207453E-6	DEFECT
// plot	WITHOUT_CLASSIFICATION	0.9999938083645064	WITHOUT_CLASSIFICATION	6.191635493652299E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999984679455493	WITHOUT_CLASSIFICATION	1.5320544506967937E-6	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999973181044756	WITHOUT_CLASSIFICATION	2.6818955244067795E-6	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.9999958364914256	WITHOUT_CLASSIFICATION	4.1635085743194E-6	DEFECT
// no event is generated if the dataset is already empty	WITHOUT_CLASSIFICATION	0.9999956012638497	WITHOUT_CLASSIFICATION	4.398736150338873E-6	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999970162554471	WITHOUT_CLASSIFICATION	2.9837445529045437E-6	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999970162554471	WITHOUT_CLASSIFICATION	2.9837445529045437E-6	DEFECT
// try a Double.POSITIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999826305222569	WITHOUT_CLASSIFICATION	1.7369477743085878E-5	DEFECT
// adding something to the returned list should NOT change the chart	WITHOUT_CLASSIFICATION	0.9999994540082402	WITHOUT_CLASSIFICATION	5.459917598716644E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999980783561848	WITHOUT_CLASSIFICATION	1.9216438152340832E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999980783561848	WITHOUT_CLASSIFICATION	1.9216438152340832E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999980783561848	WITHOUT_CLASSIFICATION	1.9216438152340832E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999980783561848	WITHOUT_CLASSIFICATION	1.9216438152340832E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999980783561848	WITHOUT_CLASSIFICATION	1.9216438152340832E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999980783561848	WITHOUT_CLASSIFICATION	1.9216438152340832E-6	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.9999741061923305	WITHOUT_CLASSIFICATION	2.589380766953479E-5	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999984570732932	WITHOUT_CLASSIFICATION	1.5429267068597232E-6	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999940284489323	WITHOUT_CLASSIFICATION	5.971551067689574E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999964412461637	WITHOUT_CLASSIFICATION	3.558753836436091E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999965500505749	WITHOUT_CLASSIFICATION	3.449949425003671E-6	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.999992937351409	WITHOUT_CLASSIFICATION	7.062648591019181E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999868544292055	WITHOUT_CLASSIFICATION	1.3145570794599029E-5	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999964412461637	WITHOUT_CLASSIFICATION	3.558753836436091E-6	DEFECT
// the clone references the same dataset as the original	WITHOUT_CLASSIFICATION	0.9999998163425118	WITHOUT_CLASSIFICATION	1.8365748816287947E-7	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999964412461637	WITHOUT_CLASSIFICATION	3.558753836436091E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999964412461637	WITHOUT_CLASSIFICATION	3.558753836436091E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999964412461637	WITHOUT_CLASSIFICATION	3.558753836436091E-6	DEFECT
// data // include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.9999987244373184	WITHOUT_CLASSIFICATION	1.2755626816618152E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999878426417054	WITHOUT_CLASSIFICATION	1.2157358294586441E-5	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9998718742433411	WITHOUT_CLASSIFICATION	1.28125756658929E-4	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9998718742433411	WITHOUT_CLASSIFICATION	1.28125756658929E-4	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999878426417054	WITHOUT_CLASSIFICATION	1.2157358294586441E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999878426417054	WITHOUT_CLASSIFICATION	1.2157358294586441E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999878426417054	WITHOUT_CLASSIFICATION	1.2157358294586441E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999878426417054	WITHOUT_CLASSIFICATION	1.2157358294586441E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999878426417054	WITHOUT_CLASSIFICATION	1.2157358294586441E-5	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999881141460101	WITHOUT_CLASSIFICATION	1.1885853989885107E-5	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999881141460101	WITHOUT_CLASSIFICATION	1.1885853989885107E-5	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999881141460101	WITHOUT_CLASSIFICATION	1.1885853989885107E-5	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999881141460101	WITHOUT_CLASSIFICATION	1.1885853989885107E-5	DEFECT
/* BufferedImage img =*/	WITHOUT_CLASSIFICATION	0.9998837770828546	WITHOUT_CLASSIFICATION	1.162229171453481E-4	DEFECT
// try a listener type that isn't registered	WITHOUT_CLASSIFICATION	0.999994778647428	WITHOUT_CLASSIFICATION	5.22135257205761E-6	DEFECT
// name	WITHOUT_CLASSIFICATION	0.9999850058594731	WITHOUT_CLASSIFICATION	1.499414052699374E-5	DEFECT
//extraLargeFont	WITHOUT_CLASSIFICATION	0.9999813225507245	WITHOUT_CLASSIFICATION	1.867744927555538E-5	DEFECT
//largeFont	WITHOUT_CLASSIFICATION	0.9999813847993801	WITHOUT_CLASSIFICATION	1.8615200619884316E-5	DEFECT
//regularFont;	WITHOUT_CLASSIFICATION	0.9999822023086278	WITHOUT_CLASSIFICATION	1.7797691372220737E-5	DEFECT
//titlePaint;	WITHOUT_CLASSIFICATION	0.9999819951405147	WITHOUT_CLASSIFICATION	1.8004859485325598E-5	DEFECT
//subtitlePaint;	WITHOUT_CLASSIFICATION	0.9999911341130862	WITHOUT_CLASSIFICATION	8.865886913884563E-6	DEFECT
//chartBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999936787493435	WITHOUT_CLASSIFICATION	6.3212506564663404E-6	DEFECT
//legendBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999926932576538	WITHOUT_CLASSIFICATION	7.306742346223913E-6	DEFECT
//legendItemPaint;	WITHOUT_CLASSIFICATION	0.9999862812711762	WITHOUT_CLASSIFICATION	1.371872882393946E-5	DEFECT
//drawingSupplier;	WITHOUT_CLASSIFICATION	0.999984424868698	WITHOUT_CLASSIFICATION	1.557513130208569E-5	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.999994584401666	WITHOUT_CLASSIFICATION	5.415598333977666E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999980783561848	WITHOUT_CLASSIFICATION	1.9216438152340832E-6	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999952117463987	WITHOUT_CLASSIFICATION	4.7882536013221394E-6	DEFECT
//tickLabelPaint;	WITHOUT_CLASSIFICATION	0.999989113539108	WITHOUT_CLASSIFICATION	1.0886460891992379E-5	DEFECT
//itemLabelPaint;	WITHOUT_CLASSIFICATION	0.9999909091394512	WITHOUT_CLASSIFICATION	9.090860548836637E-6	DEFECT
//shadowVisible;	WITHOUT_CLASSIFICATION	0.9999857923673117	WITHOUT_CLASSIFICATION	1.4207632688442591E-5	DEFECT
//shadowPaint;	WITHOUT_CLASSIFICATION	0.9999860823377624	WITHOUT_CLASSIFICATION	1.3917662237688873E-5	DEFECT
//barPainter;	WITHOUT_CLASSIFICATION	0.9999774809230192	WITHOUT_CLASSIFICATION	2.2519076980715045E-5	DEFECT
//xyBarPainter;	WITHOUT_CLASSIFICATION	0.999962734168801	WITHOUT_CLASSIFICATION	3.7265831198980016E-5	DEFECT
//thermometerPaint;	WITHOUT_CLASSIFICATION	0.9999924111279043	WITHOUT_CLASSIFICATION	7.588872095677426E-6	DEFECT
//wallPaint;	WITHOUT_CLASSIFICATION	0.9999774873995746	WITHOUT_CLASSIFICATION	2.2512600425443913E-5	DEFECT
//errorIndicatorPaint;	WITHOUT_CLASSIFICATION	0.9999030014819257	WITHOUT_CLASSIFICATION	9.699851807434793E-5	DEFECT
//gridBandAlternatePaint	WITHOUT_CLASSIFICATION	0.9999734137591518	WITHOUT_CLASSIFICATION	2.6586240848249726E-5	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.9999934004282645	WITHOUT_CLASSIFICATION	6.599571735549294E-6	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.9999957666009579	WITHOUT_CLASSIFICATION	4.233399042124514E-6	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.9999957666009579	WITHOUT_CLASSIFICATION	4.233399042124514E-6	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.9999971282762948	WITHOUT_CLASSIFICATION	2.871723705262145E-6	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.9999938245170588	WITHOUT_CLASSIFICATION	6.175482941261938E-6	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.9999938245170588	WITHOUT_CLASSIFICATION	6.175482941261938E-6	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.9999852594002395	WITHOUT_CLASSIFICATION	1.4740599760536656E-5	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9999344865915168	WITHOUT_CLASSIFICATION	6.551340848310436E-5	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9999344865915168	WITHOUT_CLASSIFICATION	6.551340848310436E-5	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9999858311327413	WITHOUT_CLASSIFICATION	1.4168867258782083E-5	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9999858311327413	WITHOUT_CLASSIFICATION	1.4168867258782083E-5	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.9999957893520252	WITHOUT_CLASSIFICATION	4.210647974874944E-6	DEFECT
// text	WITHOUT_CLASSIFICATION	0.9999877441238825	WITHOUT_CLASSIFICATION	1.2255876117407947E-5	DEFECT
// text	WITHOUT_CLASSIFICATION	0.9999877441238825	WITHOUT_CLASSIFICATION	1.2255876117407947E-5	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999707269829589	WITHOUT_CLASSIFICATION	2.9273017041095906E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.99997637677203	WITHOUT_CLASSIFICATION	2.3623227970097925E-5	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999889921431689	WITHOUT_CLASSIFICATION	1.1007856831131786E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999927814842494	WITHOUT_CLASSIFICATION	7.21851575054262E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999927814842494	WITHOUT_CLASSIFICATION	7.21851575054262E-6	DEFECT
// rotation anchor	WITHOUT_CLASSIFICATION	0.9999929141096797	WITHOUT_CLASSIFICATION	7.0858903203478915E-6	DEFECT
// rotation angle	WITHOUT_CLASSIFICATION	0.9999954547182877	WITHOUT_CLASSIFICATION	4.545281712254845E-6	DEFECT
// text anchor	WITHOUT_CLASSIFICATION	0.9999915751400643	WITHOUT_CLASSIFICATION	8.424859935780197E-6	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.999992952357007	WITHOUT_CLASSIFICATION	7.047642993055679E-6	DEFECT
// rotationAnchor	WITHOUT_CLASSIFICATION	0.9999928750249937	WITHOUT_CLASSIFICATION	7.12497500630172E-6	DEFECT
// rotationAngle	WITHOUT_CLASSIFICATION	0.9999954539854411	WITHOUT_CLASSIFICATION	4.546014558847205E-6	DEFECT
// category 1	WITHOUT_CLASSIFICATION	0.999992753324859	WITHOUT_CLASSIFICATION	7.246675140963519E-6	DEFECT
// category 2	WITHOUT_CLASSIFICATION	0.9999934992197425	WITHOUT_CLASSIFICATION	6.5007802575764495E-6	DEFECT
// value 2	WITHOUT_CLASSIFICATION	0.9999951494468067	WITHOUT_CLASSIFICATION	4.8505531932720015E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999938695423392	WITHOUT_CLASSIFICATION	6.130457660773585E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999047737876517	WITHOUT_CLASSIFICATION	9.522621234826835E-5	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999984570732932	WITHOUT_CLASSIFICATION	1.5429267068597232E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999938695423392	WITHOUT_CLASSIFICATION	6.130457660773585E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999047737876517	WITHOUT_CLASSIFICATION	9.522621234826835E-5	DEFECT
// category	WITHOUT_CLASSIFICATION	0.9999944495144397	WITHOUT_CLASSIFICATION	5.550485560242223E-6	DEFECT
// categoryAnchor	WITHOUT_CLASSIFICATION	0.999996406522034	WITHOUT_CLASSIFICATION	3.593477966011695E-6	DEFECT
// value	WITHOUT_CLASSIFICATION	0.9999934361147517	WITHOUT_CLASSIFICATION	6.563885248389927E-6	DEFECT
// x0	WITHOUT_CLASSIFICATION	0.9999704563358879	WITHOUT_CLASSIFICATION	2.9543664112059814E-5	DEFECT
// tickUnit	WITHOUT_CLASSIFICATION	0.9999845705733353	WITHOUT_CLASSIFICATION	1.5429426664635108E-5	DEFECT
// tickMarkPosition	WITHOUT_CLASSIFICATION	0.9999897775985475	WITHOUT_CLASSIFICATION	1.0222401452453128E-5	DEFECT
// timeline	WITHOUT_CLASSIFICATION	0.9999879410046157	WITHOUT_CLASSIFICATION	1.205899538433333E-5	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999916699501746	WITHOUT_CLASSIFICATION	8.330049825441256E-6	DEFECT
// check that setting the min date to something on or after the // current min date works...	WITHOUT_CLASSIFICATION	0.9999917677114917	WITHOUT_CLASSIFICATION	8.232288508276373E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999793767338041	WITHOUT_CLASSIFICATION	2.0623266195804398E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.999910744197764	WITHOUT_CLASSIFICATION	8.925580223599947E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.999910744197764	WITHOUT_CLASSIFICATION	8.925580223599947E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.999910744197764	WITHOUT_CLASSIFICATION	8.925580223599947E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.999910744197764	WITHOUT_CLASSIFICATION	8.925580223599947E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.999910744197764	WITHOUT_CLASSIFICATION	8.925580223599947E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.999910744197764	WITHOUT_CLASSIFICATION	8.925580223599947E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.999910744197764	WITHOUT_CLASSIFICATION	8.925580223599947E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.999910744197764	WITHOUT_CLASSIFICATION	8.925580223599947E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9997832261400184	WITHOUT_CLASSIFICATION	2.167738599815897E-4	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9997832261400184	WITHOUT_CLASSIFICATION	2.167738599815897E-4	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9997832261400184	WITHOUT_CLASSIFICATION	2.167738599815897E-4	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9997832261400184	WITHOUT_CLASSIFICATION	2.167738599815897E-4	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9997832261400184	WITHOUT_CLASSIFICATION	2.167738599815897E-4	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9997832261400184	WITHOUT_CLASSIFICATION	2.167738599815897E-4	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9997832261400184	WITHOUT_CLASSIFICATION	2.167738599815897E-4	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9997832261400184	WITHOUT_CLASSIFICATION	2.167738599815897E-4	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9997338272514112	WITHOUT_CLASSIFICATION	2.661727485887508E-4	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9997338272514112	WITHOUT_CLASSIFICATION	2.661727485887508E-4	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9997338272514112	WITHOUT_CLASSIFICATION	2.661727485887508E-4	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9997338272514112	WITHOUT_CLASSIFICATION	2.661727485887508E-4	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9997338272514112	WITHOUT_CLASSIFICATION	2.661727485887508E-4	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9997338272514112	WITHOUT_CLASSIFICATION	2.661727485887508E-4	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9997338272514112	WITHOUT_CLASSIFICATION	2.661727485887508E-4	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9997338272514112	WITHOUT_CLASSIFICATION	2.661727485887508E-4	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9998983687261795	WITHOUT_CLASSIFICATION	1.0163127382049933E-4	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9998983687261795	WITHOUT_CLASSIFICATION	1.0163127382049933E-4	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.9997031126318037	WITHOUT_CLASSIFICATION	2.968873681963311E-4	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.9996339719939793	WITHOUT_CLASSIFICATION	3.6602800602062916E-4	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.9996339719939793	WITHOUT_CLASSIFICATION	3.6602800602062916E-4	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.9997031126318037	WITHOUT_CLASSIFICATION	2.968873681963311E-4	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999952117463987	WITHOUT_CLASSIFICATION	4.7882536013221394E-6	DEFECT
// now repeat for a vertical axis	WITHOUT_CLASSIFICATION	0.9999974069463436	WITHOUT_CLASSIFICATION	2.593053656475185E-6	DEFECT
// set start and end date	WITHOUT_CLASSIFICATION	0.9999939128082601	WITHOUT_CLASSIFICATION	6.087191739855509E-6	DEFECT
// if the bug is still present, this leads to an endless loop	WITHOUT_CLASSIFICATION	0.9999414408980142	WITHOUT_CLASSIFICATION	5.855910198591907E-5	DEFECT
//private boolean autoRangeIncludesZero;	WITHOUT_CLASSIFICATION	0.9999986832264387	WITHOUT_CLASSIFICATION	1.3167735612571166E-6	DEFECT
//private NumberTickUnit tickUnit;	WITHOUT_CLASSIFICATION	0.9999867467134007	WITHOUT_CLASSIFICATION	1.325328659924249E-5	DEFECT
//private NumberFormat numberFormatOverride;	WITHOUT_CLASSIFICATION	0.9999130991309126	WITHOUT_CLASSIFICATION	8.690086908735185E-5	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999991591017875	WITHOUT_CLASSIFICATION	8.408982123924021E-7	DEFECT
//axis.setRangeType(RangeType.POSITIVE); //axis.setLowerBound(-5.0); //assertEquals(0.0, axis.getLowerBound(), EPSILON);	WITHOUT_CLASSIFICATION	0.9999958606110649	WITHOUT_CLASSIFICATION	4.1393889350582275E-6	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999968864455772	WITHOUT_CLASSIFICATION	3.113554422784034E-6	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999978416539557	WITHOUT_CLASSIFICATION	2.1583460443311936E-6	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999984772721153	WITHOUT_CLASSIFICATION	1.5227278846058064E-6	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.9999971313599283	WITHOUT_CLASSIFICATION	2.868640071696355E-6	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999989952745639	WITHOUT_CLASSIFICATION	1.0047254359943397E-6	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999989952745639	WITHOUT_CLASSIFICATION	1.0047254359943397E-6	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9999968405308935	WITHOUT_CLASSIFICATION	3.159469106348292E-6	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9999968405308935	WITHOUT_CLASSIFICATION	3.159469106348292E-6	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.9999930660186496	WITHOUT_CLASSIFICATION	6.933981350445045E-6	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.999987988222364	WITHOUT_CLASSIFICATION	1.2011777635900762E-5	DEFECT
// categoryMargin	WITHOUT_CLASSIFICATION	0.9999943571523757	WITHOUT_CLASSIFICATION	5.642847624379979E-6	DEFECT
// maxCategoryLabelWidthRatio	WITHOUT_CLASSIFICATION	0.9999955630780518	WITHOUT_CLASSIFICATION	4.436921948162884E-6	DEFECT
// categoryLabelPositionOffset	WITHOUT_CLASSIFICATION	0.999998144005043	WITHOUT_CLASSIFICATION	1.8559949569982548E-6	DEFECT
// categoryLabelPositions	WITHOUT_CLASSIFICATION	0.9999987402941835	WITHOUT_CLASSIFICATION	1.2597058166216984E-6	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999968864455772	WITHOUT_CLASSIFICATION	3.113554422784034E-6	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999978416539557	WITHOUT_CLASSIFICATION	2.1583460443311936E-6	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999984772721153	WITHOUT_CLASSIFICATION	1.5227278846058064E-6	DEFECT
// 4-ms test base timeline for ms2Timeline using 1 included and 1 // excluded segments // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //  \__________  _________/            \____  _____/ //             \/                           \/ //        segment group              segment size = 4 ms //	WITHOUT_CLASSIFICATION	0.99999998872391	WITHOUT_CLASSIFICATION	1.1276089928476933E-8	DEFECT
// categoryLabelToolTips	WITHOUT_CLASSIFICATION	0.9999975982666287	WITHOUT_CLASSIFICATION	2.4017333713003382E-6	DEFECT
// categoryLabelURLs	WITHOUT_CLASSIFICATION	0.9999990143916034	WITHOUT_CLASSIFICATION	9.856083965851438E-7	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999975762090145	WITHOUT_CLASSIFICATION	2.4237909854281377E-6	DEFECT
// tickLabelPaint2	WITHOUT_CLASSIFICATION	0.9999974861331767	WITHOUT_CLASSIFICATION	2.5138668231835984E-6	DEFECT
// period	WITHOUT_CLASSIFICATION	0.9999920933333358	WITHOUT_CLASSIFICATION	7.9066666642604E-6	DEFECT
// offset	WITHOUT_CLASSIFICATION	0.9999935749859907	WITHOUT_CLASSIFICATION	6.425014009347477E-6	DEFECT
// advance line Stroke	WITHOUT_CLASSIFICATION	0.9999869386227733	WITHOUT_CLASSIFICATION	1.306137722659289E-5	DEFECT
// advance line Visible	WITHOUT_CLASSIFICATION	0.9999940154117233	WITHOUT_CLASSIFICATION	5.98458827666791E-6	DEFECT
// cycle bound mapping	WITHOUT_CLASSIFICATION	0.9999967433050515	WITHOUT_CLASSIFICATION	3.2566949485635717E-6	DEFECT
// Create a segmented time line (segment size : 15 minutes)	WITHOUT_CLASSIFICATION	0.9999991165963262	WITHOUT_CLASSIFICATION	8.834036738654924E-7	DEFECT
// Set start time	WITHOUT_CLASSIFICATION	0.9999911750079825	WITHOUT_CLASSIFICATION	8.82499201755751E-6	DEFECT
/* PUT exclusions in test */	WITHOUT_CLASSIFICATION	0.9999866946718052	WITHOUT_CLASSIFICATION	1.3305328194796657E-5	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9999943408622899	WITHOUT_CLASSIFICATION	5.659137710062859E-6	DEFECT
// test 9am-4pm Monday through Friday timeline	WITHOUT_CLASSIFICATION	0.9999988396735624	WITHOUT_CLASSIFICATION	1.1603264375540565E-6	DEFECT
// calculate 9am on the first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.9999937792077526	WITHOUT_CLASSIFICATION	6.220792247395717E-6	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999909063129718	WITHOUT_CLASSIFICATION	9.093687028233973E-6	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999909063129718	WITHOUT_CLASSIFICATION	9.093687028233973E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test one-segment and adjacent segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997521909224	WITHOUT_CLASSIFICATION	2.478090775916172E-7	DEFECT
// get two consecutive segments for various tests	WITHOUT_CLASSIFICATION	0.9999989797127903	WITHOUT_CLASSIFICATION	1.0202872096677079E-6	DEFECT
// verify segments are consecutive and correct	WITHOUT_CLASSIFICATION	0.9998937302379027	WITHOUT_CLASSIFICATION	1.06269762097246E-4	DEFECT
// verify various indices inside a segment are the same segment	WITHOUT_CLASSIFICATION	0.9999997430229944	WITHOUT_CLASSIFICATION	2.569770056481099E-7	DEFECT
// try next segment	WITHOUT_CLASSIFICATION	0.9999969697175413	WITHOUT_CLASSIFICATION	3.0302824588430757E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test inc methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999997442651388	WITHOUT_CLASSIFICATION	2.5573486121039346E-6	DEFECT
// test inc() method	WITHOUT_CLASSIFICATION	0.9999969727523067	WITHOUT_CLASSIFICATION	3.0272476933303294E-6	DEFECT
// logically consecutive segments non-physically consecutive // (with non-contained time in between)	WITHOUT_CLASSIFICATION	0.9999949854557141	WITHOUT_CLASSIFICATION	5.014544285893014E-6	DEFECT
// physically consecutive	WITHOUT_CLASSIFICATION	0.9999819833242328	WITHOUT_CLASSIFICATION	1.8016675767185877E-5	DEFECT
// test inc(n) method	WITHOUT_CLASSIFICATION	0.9999951004372906	WITHOUT_CLASSIFICATION	4.899562709450334E-6	DEFECT
// go to another segment to continue test	WITHOUT_CLASSIFICATION	0.9999995230345409	WITHOUT_CLASSIFICATION	4.769654592518566E-7	DEFECT
// clear any exceptions in this timeline	WITHOUT_CLASSIFICATION	0.9999225791478528	WITHOUT_CLASSIFICATION	7.742085214722214E-5	DEFECT
// test some included and excluded segments	WITHOUT_CLASSIFICATION	0.9999996060991331	WITHOUT_CLASSIFICATION	3.9390086691380764E-7	DEFECT
// should be an included segment	WITHOUT_CLASSIFICATION	0.9999881158785608	WITHOUT_CLASSIFICATION	1.1884121439065614E-5	DEFECT
// should be an excluded segment	WITHOUT_CLASSIFICATION	0.9999837022276721	WITHOUT_CLASSIFICATION	1.629777232783911E-5	DEFECT
// fill in the exceptions	WITHOUT_CLASSIFICATION	0.9999673306452141	WITHOUT_CLASSIFICATION	3.26693547858639E-5	DEFECT
// verify list of exceptions	WITHOUT_CLASSIFICATION	0.9999837161774654	WITHOUT_CLASSIFICATION	1.628382253467724E-5	DEFECT
// include current exception and last one	WITHOUT_CLASSIFICATION	0.9999966676726532	WITHOUT_CLASSIFICATION	3.3323273467653173E-6	DEFECT
// exclude current exception and last one	WITHOUT_CLASSIFICATION	0.9999989589998897	WITHOUT_CLASSIFICATION	1.0410001103632937E-6	DEFECT
// make sure there are no exceptions	WITHOUT_CLASSIFICATION	0.9999871259997364	WITHOUT_CLASSIFICATION	1.287400026350589E-5	DEFECT
// add our exceptions and store locally in ArrayList of Longs	WITHOUT_CLASSIFICATION	0.9999893087324216	WITHOUT_CLASSIFICATION	1.0691267578395962E-5	DEFECT
// only add an exception if it is currently an included segment	WITHOUT_CLASSIFICATION	0.9999632660790061	WITHOUT_CLASSIFICATION	3.673392099386489E-5	DEFECT
// make array of exceptions	WITHOUT_CLASSIFICATION	0.9999623015777401	WITHOUT_CLASSIFICATION	3.7698422259773484E-5	DEFECT
// add the base timeline exclusions as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999988164501199	WITHOUT_CLASSIFICATION	1.183549880121181E-6	DEFECT
// validate base timeline exclusions added as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999982968383897	WITHOUT_CLASSIFICATION	1.7031616102011622E-6	DEFECT
// start time...	WITHOUT_CLASSIFICATION	0.9999949314654946	WITHOUT_CLASSIFICATION	5.068534505501071E-6	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.9999846087389794	WITHOUT_CLASSIFICATION	1.5391261020634982E-5	DEFECT
//long v = stl.toTimelineValue(946684800020L);	WITHOUT_CLASSIFICATION	0.9999976286165565	WITHOUT_CLASSIFICATION	2.3713834434748654E-6	DEFECT
// tick labels visible flag...	WITHOUT_CLASSIFICATION	0.999995059382941	WITHOUT_CLASSIFICATION	4.940617059032245E-6	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.9999930660186496	WITHOUT_CLASSIFICATION	6.933981350445045E-6	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.999987988222364	WITHOUT_CLASSIFICATION	1.2011777635900762E-5	DEFECT
// the reverse transformed value will be in the start of the // next non-excluded and non-exception segment	WITHOUT_CLASSIFICATION	0.9999977831593092	WITHOUT_CLASSIFICATION	2.2168406908039894E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test serialization //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999979417410132	WITHOUT_CLASSIFICATION	2.0582589868156863E-6	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.9999958983515853	WITHOUT_CLASSIFICATION	4.101648414712911E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // utility methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999998133739457	WITHOUT_CLASSIFICATION	1.8662605428865231E-6	DEFECT
// subcategories	WITHOUT_CLASSIFICATION	0.9999985433825107	WITHOUT_CLASSIFICATION	1.4566174892876225E-6	DEFECT
// subLabelFont	WITHOUT_CLASSIFICATION	0.9999986447502327	WITHOUT_CLASSIFICATION	1.3552497673459757E-6	DEFECT
// subLabelPaint	WITHOUT_CLASSIFICATION	0.999999217031892	WITHOUT_CLASSIFICATION	7.829681080207347E-7	DEFECT
// some checks that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999991005696108	WITHOUT_CLASSIFICATION	8.994303890929393E-7	DEFECT
// visible flag...	WITHOUT_CLASSIFICATION	0.9999958872486231	WITHOUT_CLASSIFICATION	4.112751376885072E-6	DEFECT
// label...	WITHOUT_CLASSIFICATION	0.9999889902836336	WITHOUT_CLASSIFICATION	1.1009716366425919E-5	DEFECT
// label font...	WITHOUT_CLASSIFICATION	0.9999941553044964	WITHOUT_CLASSIFICATION	5.844695503576761E-6	DEFECT
// label paint...	WITHOUT_CLASSIFICATION	0.999995870485044	WITHOUT_CLASSIFICATION	4.129514955943341E-6	DEFECT
// attributed label...	WITHOUT_CLASSIFICATION	0.9999938099669886	WITHOUT_CLASSIFICATION	6.190033011458683E-6	DEFECT
// label insets...	WITHOUT_CLASSIFICATION	0.9999950555666073	WITHOUT_CLASSIFICATION	4.944433392689043E-6	DEFECT
// label angle...	WITHOUT_CLASSIFICATION	0.9999906731889926	WITHOUT_CLASSIFICATION	9.326811007318362E-6	DEFECT
// label location...	WITHOUT_CLASSIFICATION	0.9999939453502181	WITHOUT_CLASSIFICATION	6.054649781847164E-6	DEFECT
// axis line visible...	WITHOUT_CLASSIFICATION	0.9999918355969821	WITHOUT_CLASSIFICATION	8.164403017911456E-6	DEFECT
// axis line stroke...	WITHOUT_CLASSIFICATION	0.9999889703124973	WITHOUT_CLASSIFICATION	1.10296875026357E-5	DEFECT
// axis line paint...	WITHOUT_CLASSIFICATION	0.9999891007922712	WITHOUT_CLASSIFICATION	1.0899207728816077E-5	DEFECT
// tick label font...	WITHOUT_CLASSIFICATION	0.9999917965081078	WITHOUT_CLASSIFICATION	8.203491892179259E-6	DEFECT
// tick label paint...	WITHOUT_CLASSIFICATION	0.9999936397721019	WITHOUT_CLASSIFICATION	6.360227898142302E-6	DEFECT
// tick marks visible flag...	WITHOUT_CLASSIFICATION	0.9999960249888439	WITHOUT_CLASSIFICATION	3.9750111561053255E-6	DEFECT
// tick mark inside length...	WITHOUT_CLASSIFICATION	0.9999973079064748	WITHOUT_CLASSIFICATION	2.6920935252577853E-6	DEFECT
// tick mark outside length...	WITHOUT_CLASSIFICATION	0.9999994423383417	WITHOUT_CLASSIFICATION	5.576616582484153E-7	DEFECT
// tick mark stroke...	WITHOUT_CLASSIFICATION	0.9999878855813518	WITHOUT_CLASSIFICATION	1.2114418648288374E-5	DEFECT
// fixed dimension...	WITHOUT_CLASSIFICATION	0.9998760506593316	WITHOUT_CLASSIFICATION	1.2394934066836062E-4	DEFECT
// axis line visible flag...	WITHOUT_CLASSIFICATION	0.9999918176109535	WITHOUT_CLASSIFICATION	8.18238904662575E-6	DEFECT
// positiveArrowVisible;	WITHOUT_CLASSIFICATION	0.9999885178624436	WITHOUT_CLASSIFICATION	1.1482137556422212E-5	DEFECT
//private Shape upArrow;	WITHOUT_CLASSIFICATION	0.9999740551482627	WITHOUT_CLASSIFICATION	2.5944851737431447E-5	DEFECT
//private Shape downArrow;	WITHOUT_CLASSIFICATION	0.9999629091769313	WITHOUT_CLASSIFICATION	3.709082306858229E-5	DEFECT
//private Shape leftArrow;	WITHOUT_CLASSIFICATION	0.9999800806731164	WITHOUT_CLASSIFICATION	1.991932688357146E-5	DEFECT
//private Shape rightArrow;	WITHOUT_CLASSIFICATION	0.9999771286589832	WITHOUT_CLASSIFICATION	2.2871341016734062E-5	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.999991749118398	WITHOUT_CLASSIFICATION	8.250881601940016E-6	DEFECT
// inverted	WITHOUT_CLASSIFICATION	0.999982443200815	WITHOUT_CLASSIFICATION	1.7556799184982067E-5	DEFECT
//private TickUnits standardTickUnits;	WITHOUT_CLASSIFICATION	0.9999940138809872	WITHOUT_CLASSIFICATION	5.986119012901447E-6	DEFECT
// verticalTickLabels	WITHOUT_CLASSIFICATION	0.9999926338807671	WITHOUT_CLASSIFICATION	7.366119232908378E-6	DEFECT
// time zone	WITHOUT_CLASSIFICATION	0.9999859125931417	WITHOUT_CLASSIFICATION	1.4087406858211305E-5	DEFECT
// locale	WITHOUT_CLASSIFICATION	0.9999901673637865	WITHOUT_CLASSIFICATION	9.832636213468342E-6	DEFECT
// chars	WITHOUT_CLASSIFICATION	0.9999974110663958	WITHOUT_CLASSIFICATION	2.588933604076829E-6	DEFECT
// showYear[]	WITHOUT_CLASSIFICATION	0.9999929665133116	WITHOUT_CLASSIFICATION	7.033486688298544E-6	DEFECT
// yearFormatter	WITHOUT_CLASSIFICATION	0.9998254125685178	WITHOUT_CLASSIFICATION	1.7458743148217402E-4	DEFECT
// NONE / NONE	WITHOUT_CLASSIFICATION	0.9998867200217191	WITHOUT_CLASSIFICATION	1.1327997828096898E-4	DEFECT
// NONE / RANGE	WITHOUT_CLASSIFICATION	0.9999271623219474	WITHOUT_CLASSIFICATION	7.283767805250437E-5	DEFECT
// NONE / FIXED	WITHOUT_CLASSIFICATION	0.9916506213265596	WITHOUT_CLASSIFICATION	0.00834937867344039	DEFECT
// RANGE / NONE	WITHOUT_CLASSIFICATION	0.999927881851434	WITHOUT_CLASSIFICATION	7.211814856603212E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999927814842494	WITHOUT_CLASSIFICATION	7.21851575054262E-6	DEFECT
// RANGE / RANGE	WITHOUT_CLASSIFICATION	0.99995482244194	WITHOUT_CLASSIFICATION	4.517755805990144E-5	DEFECT
// RANGE / FIXED	WITHOUT_CLASSIFICATION	0.9966332427852567	WITHOUT_CLASSIFICATION	0.0033667572147433175	DEFECT
// FIXED / NONE	WITHOUT_CLASSIFICATION	0.9878400453674878	WITHOUT_CLASSIFICATION	0.012159954632512222	DEFECT
// FIXED / RANGE	WITHOUT_CLASSIFICATION	0.995036623847986	WITHOUT_CLASSIFICATION	0.004963376152014077	DEFECT
// FIXED / FIXED	WITHOUT_CLASSIFICATION	0.9919082634278849	WITHOUT_CLASSIFICATION	0.008091736572115052	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.9999927007547648	WITHOUT_CLASSIFICATION	7.299245235280911E-6	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.9999927007547648	WITHOUT_CLASSIFICATION	7.299245235280911E-6	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.9999981440647087	WITHOUT_CLASSIFICATION	1.855935291303351E-6	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.9999981440647087	WITHOUT_CLASSIFICATION	1.855935291303351E-6	DEFECT
// try case where right item is shorter than center item	WITHOUT_CLASSIFICATION	0.9999926875675627	WITHOUT_CLASSIFICATION	7.3124324372869336E-6	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.9999836915013386	WITHOUT_CLASSIFICATION	1.6308498661379642E-5	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9999981560880945	WITHOUT_CLASSIFICATION	1.8439119054593662E-6	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9999981560880945	WITHOUT_CLASSIFICATION	1.8439119054593662E-6	DEFECT
// try case where left item is shorter than center item	WITHOUT_CLASSIFICATION	0.9999939897068543	WITHOUT_CLASSIFICATION	6.0102931457727455E-6	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9999971686886452	WITHOUT_CLASSIFICATION	2.8313113547709294E-6	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.9999989665828795	WITHOUT_CLASSIFICATION	1.0334171205126302E-6	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.9999910180598797	WITHOUT_CLASSIFICATION	8.981940120417664E-6	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9999987307134597	WITHOUT_CLASSIFICATION	1.269286540379225E-6	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.9999980475578183	WITHOUT_CLASSIFICATION	1.952442181790797E-6	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.9999984002049208	WITHOUT_CLASSIFICATION	1.599795079156814E-6	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.9998846312907183	WITHOUT_CLASSIFICATION	1.1536870928170312E-4	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9999973786905427	WITHOUT_CLASSIFICATION	2.621309457197867E-6	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.9998925227728426	WITHOUT_CLASSIFICATION	1.0747722715738893E-4	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9999974237452559	WITHOUT_CLASSIFICATION	2.576254744025175E-6	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.9998974777234882	WITHOUT_CLASSIFICATION	1.0252227651178513E-4	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.9998848872136272	WITHOUT_CLASSIFICATION	1.1511278637278929E-4	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.999887216987736	WITHOUT_CLASSIFICATION	1.1278301226409022E-4	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9999121733415676	WITHOUT_CLASSIFICATION	8.782665843247137E-5	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999965675099367	WITHOUT_CLASSIFICATION	3.432490063331209E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9999971686886452	WITHOUT_CLASSIFICATION	2.8313113547709294E-6	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.9999989665828795	WITHOUT_CLASSIFICATION	1.0334171205126302E-6	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.9999910180598797	WITHOUT_CLASSIFICATION	8.981940120417664E-6	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9999987307134597	WITHOUT_CLASSIFICATION	1.269286540379225E-6	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.9999980475578183	WITHOUT_CLASSIFICATION	1.952442181790797E-6	DEFECT
// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.9999982618315854	WITHOUT_CLASSIFICATION	1.738168414760125E-6	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999112017009012	WITHOUT_CLASSIFICATION	8.879829909877611E-5	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.9999981821750353	WITHOUT_CLASSIFICATION	1.8178249646925059E-6	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.999998198784214	WITHOUT_CLASSIFICATION	1.8012157860014057E-6	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.9998989926937656	WITHOUT_CLASSIFICATION	1.0100730623433298E-4	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9999938842260869	WITHOUT_CLASSIFICATION	6.1157739130269345E-6	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.9999990239915167	WITHOUT_CLASSIFICATION	9.76008483219671E-7	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.9999987620702919	WITHOUT_CLASSIFICATION	1.2379297080528714E-6	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9999987431897723	WITHOUT_CLASSIFICATION	1.2568102277095732E-6	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.9999972531388821	WITHOUT_CLASSIFICATION	2.746861117947944E-6	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9999985598098563	WITHOUT_CLASSIFICATION	1.4401901436260483E-6	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.9998846312907183	WITHOUT_CLASSIFICATION	1.1536870928170312E-4	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.9999985379683266	WITHOUT_CLASSIFICATION	1.462031673402367E-6	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.9999919891925966	WITHOUT_CLASSIFICATION	8.010807403456504E-6	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.9999919891925966	WITHOUT_CLASSIFICATION	8.010807403456504E-6	DEFECT
// date format	WITHOUT_CLASSIFICATION	0.9999524059429222	WITHOUT_CLASSIFICATION	4.759405707786115E-5	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.9999634785951237	WITHOUT_CLASSIFICATION	3.65214048762457E-5	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999977273314918	WITHOUT_CLASSIFICATION	2.272668508154615E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999977273314918	WITHOUT_CLASSIFICATION	2.272668508154615E-6	DEFECT
// another test...	WITHOUT_CLASSIFICATION	0.9999972248273075	WITHOUT_CLASSIFICATION	2.775172692568091E-6	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999907622003386	WITHOUT_CLASSIFICATION	9.237799661453596E-6	DEFECT
// format string...	WITHOUT_CLASSIFICATION	0.9999728304913424	WITHOUT_CLASSIFICATION	2.7169508657530918E-5	DEFECT
// x number format	WITHOUT_CLASSIFICATION	0.9999509009300287	WITHOUT_CLASSIFICATION	4.9099069971358824E-5	DEFECT
// y number format	WITHOUT_CLASSIFICATION	0.9999683519347587	WITHOUT_CLASSIFICATION	3.1648065241239066E-5	DEFECT
// z number format	WITHOUT_CLASSIFICATION	0.999973463359588	WITHOUT_CLASSIFICATION	2.6536640412021476E-5	DEFECT
// x date format	WITHOUT_CLASSIFICATION	0.9998960549413871	WITHOUT_CLASSIFICATION	1.0394505861281565E-4	DEFECT
// y date format	WITHOUT_CLASSIFICATION	0.999950267186776	WITHOUT_CLASSIFICATION	4.9732813223822786E-5	DEFECT
// z date format	WITHOUT_CLASSIFICATION	0.9999562549723583	WITHOUT_CLASSIFICATION	4.374502764169102E-5	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9999958524174761	WITHOUT_CLASSIFICATION	4.147582523874136E-6	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.9999984623694365	WITHOUT_CLASSIFICATION	1.5376305635885754E-6	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.9999987292097721	WITHOUT_CLASSIFICATION	1.2707902279418517E-6	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9999981758799276	WITHOUT_CLASSIFICATION	1.824120072391285E-6	DEFECT
// separatorsVisible	WITHOUT_CLASSIFICATION	0.9999989909622179	WITHOUT_CLASSIFICATION	1.0090377820363553E-6	DEFECT
// separatorStroke	WITHOUT_CLASSIFICATION	0.9999952734335861	WITHOUT_CLASSIFICATION	4.7265664138805465E-6	DEFECT
// separatorPaint	WITHOUT_CLASSIFICATION	0.9999990657262637	WITHOUT_CLASSIFICATION	9.342737363727985E-7	DEFECT
// outerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999920263740568	WITHOUT_CLASSIFICATION	7.973625943234175E-6	DEFECT
// sectionDepth	WITHOUT_CLASSIFICATION	0.9999934185938306	WITHOUT_CLASSIFICATION	6.581406169424737E-6	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.9999902708106819	WITHOUT_CLASSIFICATION	9.729189318147531E-6	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.999978256428906	WITHOUT_CLASSIFICATION	2.1743571094018343E-5	DEFECT
// domainAxes...	WITHOUT_CLASSIFICATION	0.9999866263489996	WITHOUT_CLASSIFICATION	1.3373651000512424E-5	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.9999707901845735	WITHOUT_CLASSIFICATION	2.9209815426499097E-5	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.9998925227728426	WITHOUT_CLASSIFICATION	1.0747722715738893E-4	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9999974237452559	WITHOUT_CLASSIFICATION	2.576254744025175E-6	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.9998837356624916	WITHOUT_CLASSIFICATION	1.1626433750839876E-4	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.9998974777234882	WITHOUT_CLASSIFICATION	1.0252227651178513E-4	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.9998848872136272	WITHOUT_CLASSIFICATION	1.1511278637278929E-4	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.999887216987736	WITHOUT_CLASSIFICATION	1.1278301226409022E-4	DEFECT
// check handling when the dataset is a regular XYDataset, not an // XYZDataset...	WITHOUT_CLASSIFICATION	0.9999748694954022	WITHOUT_CLASSIFICATION	2.513050459789586E-5	DEFECT
// domainAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999979730446853	WITHOUT_CLASSIFICATION	2.0269553146304006E-6	DEFECT
// domainAxisLocations...	WITHOUT_CLASSIFICATION	0.9999747378111947	WITHOUT_CLASSIFICATION	2.5262188805306773E-5	DEFECT
// draw shared domain axis...	WITHOUT_CLASSIFICATION	0.9999923952926316	WITHOUT_CLASSIFICATION	7.604707368470924E-6	DEFECT
// rangeAxes...	WITHOUT_CLASSIFICATION	0.9999907086293173	WITHOUT_CLASSIFICATION	9.29137068271611E-6	DEFECT
// rangeAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999987395322382	WITHOUT_CLASSIFICATION	1.2604677617653242E-6	DEFECT
// rangeAxisLocations...	WITHOUT_CLASSIFICATION	0.9999892173358215	WITHOUT_CLASSIFICATION	1.0782664178530568E-5	DEFECT
// datasetToDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999843687813985	WITHOUT_CLASSIFICATION	1.5631218601503798E-5	DEFECT
// datasetToRangeAxisMap...	WITHOUT_CLASSIFICATION	0.99998957129566	WITHOUT_CLASSIFICATION	1.0428704339939658E-5	DEFECT
// renderers...	WITHOUT_CLASSIFICATION	0.9999912685253948	WITHOUT_CLASSIFICATION	8.731474605302556E-6	DEFECT
// rendering order...	WITHOUT_CLASSIFICATION	0.999973725761234	WITHOUT_CLASSIFICATION	2.6274238765996096E-5	DEFECT
// columnRenderingOrder...	WITHOUT_CLASSIFICATION	0.99998587658426	WITHOUT_CLASSIFICATION	1.4123415740036129E-5	DEFECT
// rowRenderingOrder...	WITHOUT_CLASSIFICATION	0.9999767117927227	WITHOUT_CLASSIFICATION	2.328820727726886E-5	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999950769280248	WITHOUT_CLASSIFICATION	4.923071975192897E-6	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.9999793037627807	WITHOUT_CLASSIFICATION	2.0696237219434942E-5	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.9999935291326473	WITHOUT_CLASSIFICATION	6.470867352785097E-6	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999966871146919	WITHOUT_CLASSIFICATION	3.3128853081496205E-6	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.9999894735320116	WITHOUT_CLASSIFICATION	1.0526467988321592E-5	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999958780244597	WITHOUT_CLASSIFICATION	4.1219755403099474E-6	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999971169802402	WITHOUT_CLASSIFICATION	2.8830197597778227E-6	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.9999965908962879	WITHOUT_CLASSIFICATION	3.4091037120703804E-6	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999902600175765	WITHOUT_CLASSIFICATION	9.739982423448051E-6	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999934915088134	WITHOUT_CLASSIFICATION	6.508491186591098E-6	DEFECT
// foreground domain markers	WITHOUT_CLASSIFICATION	0.9999935065818017	WITHOUT_CLASSIFICATION	6.493418198299284E-6	DEFECT
// background domain markers	WITHOUT_CLASSIFICATION	0.9999937220624824	WITHOUT_CLASSIFICATION	6.277937517706022E-6	DEFECT
// foreground range markers...	WITHOUT_CLASSIFICATION	0.9999921912978055	WITHOUT_CLASSIFICATION	7.808702194443383E-6	DEFECT
// background range markers...	WITHOUT_CLASSIFICATION	0.9999924504251669	WITHOUT_CLASSIFICATION	7.549574833118018E-6	DEFECT
// annotations	WITHOUT_CLASSIFICATION	0.9999827220464276	WITHOUT_CLASSIFICATION	1.7277953572458125E-5	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.9999908407419473	WITHOUT_CLASSIFICATION	9.15925805268898E-6	DEFECT
// fixed domain axis space...	WITHOUT_CLASSIFICATION	0.9999334866842483	WITHOUT_CLASSIFICATION	6.651331575165225E-5	DEFECT
// fixed range axis space...	WITHOUT_CLASSIFICATION	0.9999540136320321	WITHOUT_CLASSIFICATION	4.5986367967860876E-5	DEFECT
// crosshairDatasetIndex	WITHOUT_CLASSIFICATION	0.9999971234768934	WITHOUT_CLASSIFICATION	2.876523106592209E-6	DEFECT
// domainCrosshairColumnKey	WITHOUT_CLASSIFICATION	0.9999945178660468	WITHOUT_CLASSIFICATION	5.482133953305613E-6	DEFECT
// domainCrosshairRowKey	WITHOUT_CLASSIFICATION	0.9999921267930247	WITHOUT_CLASSIFICATION	7.873206975249794E-6	DEFECT
// domainCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999961471813438	WITHOUT_CLASSIFICATION	3.85281865630405E-6	DEFECT
// domainCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999869836828872	WITHOUT_CLASSIFICATION	1.3016317112893133E-5	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999954215375756	WITHOUT_CLASSIFICATION	4.578462424428487E-6	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999912102117741	WITHOUT_CLASSIFICATION	8.78978822587542E-6	DEFECT
// we didn't get an exception so all is good	WITHOUT_CLASSIFICATION	0.9999367753873859	WITHOUT_CLASSIFICATION	6.322461261415048E-5	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999888443573056	WITHOUT_CLASSIFICATION	1.115564269434489E-5	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999888443573056	WITHOUT_CLASSIFICATION	1.115564269434489E-5	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.9999899648158136	WITHOUT_CLASSIFICATION	1.003518418645468E-5	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999940284489323	WITHOUT_CLASSIFICATION	5.971551067689574E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999965500505749	WITHOUT_CLASSIFICATION	3.449949425003671E-6	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999979923706385	WITHOUT_CLASSIFICATION	2.0076293614314076E-6	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.999986691317754	WITHOUT_CLASSIFICATION	1.3308682246065628E-5	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9999830131456995	WITHOUT_CLASSIFICATION	1.6986854300585117E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999977010789289	WITHOUT_CLASSIFICATION	2.2989210710745863E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999977010789289	WITHOUT_CLASSIFICATION	2.2989210710745863E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999977010789289	WITHOUT_CLASSIFICATION	2.2989210710745863E-6	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999961682867217	WITHOUT_CLASSIFICATION	3.8317132782746015E-6	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.9999972576357613	WITHOUT_CLASSIFICATION	2.7423642386342408E-6	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999995927940404	WITHOUT_CLASSIFICATION	4.072059596587693E-7	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999995927940404	WITHOUT_CLASSIFICATION	4.072059596587693E-7	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9999988753454535	WITHOUT_CLASSIFICATION	1.1246545465286738E-6	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.9999992802787985	WITHOUT_CLASSIFICATION	7.197212015703229E-7	DEFECT
// needle paint	WITHOUT_CLASSIFICATION	0.999997485644402	WITHOUT_CLASSIFICATION	2.5143555980709463E-6	DEFECT
// value font	WITHOUT_CLASSIFICATION	0.9999952824563335	WITHOUT_CLASSIFICATION	4.717543666468311E-6	DEFECT
// value paint	WITHOUT_CLASSIFICATION	0.9999971950013233	WITHOUT_CLASSIFICATION	2.8049986766677424E-6	DEFECT
// tick label font	WITHOUT_CLASSIFICATION	0.9999962670948461	WITHOUT_CLASSIFICATION	3.7329051539333226E-6	DEFECT
// tick label paint	WITHOUT_CLASSIFICATION	0.9999970699569143	WITHOUT_CLASSIFICATION	2.9300430857078034E-6	DEFECT
// tick label format	WITHOUT_CLASSIFICATION	0.9999907145132435	WITHOUT_CLASSIFICATION	9.28548675651679E-6	DEFECT
// tick paint	WITHOUT_CLASSIFICATION	0.9999905487204818	WITHOUT_CLASSIFICATION	9.451279518175651E-6	DEFECT
// draw border	WITHOUT_CLASSIFICATION	0.9999885427754288	WITHOUT_CLASSIFICATION	1.1457224571256452E-5	DEFECT
// meter angle	WITHOUT_CLASSIFICATION	0.9999947371410454	WITHOUT_CLASSIFICATION	5.262858954560011E-6	DEFECT
//key	WITHOUT_CLASSIFICATION	0.9998208975055926	WITHOUT_CLASSIFICATION	1.7910249440756412E-4	DEFECT
//paint	WITHOUT_CLASSIFICATION	0.9999661652854537	WITHOUT_CLASSIFICATION	3.38347145463773E-5	DEFECT
//stroke	WITHOUT_CLASSIFICATION	0.9999517817766501	WITHOUT_CLASSIFICATION	4.8218223349962865E-5	DEFECT
//outlinePaint	WITHOUT_CLASSIFICATION	0.99998857675752	WITHOUT_CLASSIFICATION	1.1423242480091267E-5	DEFECT
//outlineStroke	WITHOUT_CLASSIFICATION	0.9999683338438138	WITHOUT_CLASSIFICATION	3.1666156186236976E-5	DEFECT
//alpha	WITHOUT_CLASSIFICATION	0.999966195747168	WITHOUT_CLASSIFICATION	3.380425283198351E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999872858298935	WITHOUT_CLASSIFICATION	1.271417010644022E-5	DEFECT
// drawBorder	WITHOUT_CLASSIFICATION	0.9999876973065318	WITHOUT_CLASSIFICATION	1.2302693468113638E-5	DEFECT
// rosePaint	WITHOUT_CLASSIFICATION	0.999998680115093	WITHOUT_CLASSIFICATION	1.3198849070104834E-6	DEFECT
// roseCenterPaint	WITHOUT_CLASSIFICATION	0.9999988067079333	WITHOUT_CLASSIFICATION	1.1932920667686099E-6	DEFECT
// roseHighlightPaint	WITHOUT_CLASSIFICATION	0.9999992911598234	WITHOUT_CLASSIFICATION	7.088401764931631E-7	DEFECT
// interiorGap...	WITHOUT_CLASSIFICATION	0.9999850614686818	WITHOUT_CLASSIFICATION	1.4938531318288796E-5	DEFECT
// circular	WITHOUT_CLASSIFICATION	0.9999933288128059	WITHOUT_CLASSIFICATION	6.671187194165071E-6	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.9999885082101975	WITHOUT_CLASSIFICATION	1.1491789802489542E-5	DEFECT
// ignoreNullValues	WITHOUT_CLASSIFICATION	0.9999963062706744	WITHOUT_CLASSIFICATION	3.693729325605471E-6	DEFECT
// sectionPaint	WITHOUT_CLASSIFICATION	0.9999980993684946	WITHOUT_CLASSIFICATION	1.9006315054149743E-6	DEFECT
// sectionPaintMap	WITHOUT_CLASSIFICATION	0.9999976066917877	WITHOUT_CLASSIFICATION	2.393308212265208E-6	DEFECT
// baseSectionPaint	WITHOUT_CLASSIFICATION	0.9999963224476273	WITHOUT_CLASSIFICATION	3.6775523727933914E-6	DEFECT
// sectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999974446819536	WITHOUT_CLASSIFICATION	2.555318046333453E-6	DEFECT
// sectionOutlinePaintList	WITHOUT_CLASSIFICATION	0.9999981804838629	WITHOUT_CLASSIFICATION	1.819516137105752E-6	DEFECT
// baseSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999950556906134	WITHOUT_CLASSIFICATION	4.944309386594189E-6	DEFECT
// sectionOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999956398148109	WITHOUT_CLASSIFICATION	4.360185189123253E-6	DEFECT
// baseSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999894931586331	WITHOUT_CLASSIFICATION	1.0506841366891108E-5	DEFECT
// shadowPaint	WITHOUT_CLASSIFICATION	0.999998002900731	WITHOUT_CLASSIFICATION	1.997099268976974E-6	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.999989784934187	WITHOUT_CLASSIFICATION	1.0215065812944658E-5	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999934250087628	WITHOUT_CLASSIFICATION	6.574991237234605E-6	DEFECT
// labelOutlinePaint	WITHOUT_CLASSIFICATION	0.9999965132622011	WITHOUT_CLASSIFICATION	3.486737798863049E-6	DEFECT
// labelOutlineStroke	WITHOUT_CLASSIFICATION	0.9999879043495855	WITHOUT_CLASSIFICATION	1.2095650414392104E-5	DEFECT
// labelShadowPaint	WITHOUT_CLASSIFICATION	0.9999981618434072	WITHOUT_CLASSIFICATION	1.838156592898211E-6	DEFECT
// explodePercentages	WITHOUT_CLASSIFICATION	0.9999991871534909	WITHOUT_CLASSIFICATION	8.128465091059983E-7	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999949631234512	WITHOUT_CLASSIFICATION	5.0368765488713666E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999979318349373	WITHOUT_CLASSIFICATION	2.068165062657142E-6	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999973181044756	WITHOUT_CLASSIFICATION	2.6818955244067795E-6	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.9999958364914256	WITHOUT_CLASSIFICATION	4.1635085743194E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999984570732932	WITHOUT_CLASSIFICATION	1.5429267068597232E-6	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999954215375756	WITHOUT_CLASSIFICATION	4.578462424428487E-6	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.9999885082101975	WITHOUT_CLASSIFICATION	1.1491789802489542E-5	DEFECT
// labelLinkPaint	WITHOUT_CLASSIFICATION	0.9999971127443178	WITHOUT_CLASSIFICATION	2.887255682146976E-6	DEFECT
// maximumLabelWidth	WITHOUT_CLASSIFICATION	0.9999947323381295	WITHOUT_CLASSIFICATION	5.2676618705210645E-6	DEFECT
// links visible	WITHOUT_CLASSIFICATION	0.9999936110710808	WITHOUT_CLASSIFICATION	6.388928919277282E-6	DEFECT
// labelGap	WITHOUT_CLASSIFICATION	0.9999918831165159	WITHOUT_CLASSIFICATION	8.116883484152701E-6	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999931295753958	WITHOUT_CLASSIFICATION	6.8704246042341235E-6	DEFECT
// linkMargin	WITHOUT_CLASSIFICATION	0.9999857118681548	WITHOUT_CLASSIFICATION	1.4288131845238062E-5	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999921762017672	WITHOUT_CLASSIFICATION	7.823798232774697E-6	DEFECT
// labelLinkStroke	WITHOUT_CLASSIFICATION	0.9999958452198132	WITHOUT_CLASSIFICATION	4.154780186814641E-6	DEFECT
// minimumArcAngleToDraw	WITHOUT_CLASSIFICATION	0.9999892691897847	WITHOUT_CLASSIFICATION	1.0730810215422294E-5	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999937060407758	WITHOUT_CLASSIFICATION	6.29395922426775E-6	DEFECT
// legendLabelGenerator	WITHOUT_CLASSIFICATION	0.9999927439018531	WITHOUT_CLASSIFICATION	7.256098146884176E-6	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999921762017672	WITHOUT_CLASSIFICATION	7.823798232774697E-6	DEFECT
// legendLabelToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999935902269785	WITHOUT_CLASSIFICATION	6.409773021540964E-6	DEFECT
// legendLabelURLGenerator	WITHOUT_CLASSIFICATION	0.9999948008934304	WITHOUT_CLASSIFICATION	5.199106569564667E-6	DEFECT
// autoPopulateSectionPaint	WITHOUT_CLASSIFICATION	0.9999972167497594	WITHOUT_CLASSIFICATION	2.7832502405525395E-6	DEFECT
// autoPopulateSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999970955825662	WITHOUT_CLASSIFICATION	2.9044174338657555E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999996365158126	WITHOUT_CLASSIFICATION	3.634841875089989E-7	DEFECT
// autoPopulateSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999951824515135	WITHOUT_CLASSIFICATION	4.817548486533537E-6	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.9999986685249262	WITHOUT_CLASSIFICATION	1.3314750737475728E-6	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.9999986685249262	WITHOUT_CLASSIFICATION	1.3314750737475728E-6	DEFECT
// change the shape and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999997244423053	WITHOUT_CLASSIFICATION	2.7555769464112915E-7	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999994896261927	WITHOUT_CLASSIFICATION	5.103738073440552E-7	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999994896261927	WITHOUT_CLASSIFICATION	5.103738073440552E-7	DEFECT
// check that null items are ignored if requested	WITHOUT_CLASSIFICATION	0.999998032560305	WITHOUT_CLASSIFICATION	1.9674396951745207E-6	DEFECT
// check that zero items are ignored if requested	WITHOUT_CLASSIFICATION	0.999998559820279	WITHOUT_CLASSIFICATION	1.440179721028543E-6	DEFECT
// check that negative items are always ignored	WITHOUT_CLASSIFICATION	0.9999979388242136	WITHOUT_CLASSIFICATION	2.061175786296509E-6	DEFECT
// noDataMessage	WITHOUT_CLASSIFICATION	0.9999722534195267	WITHOUT_CLASSIFICATION	2.7746580473345513E-5	DEFECT
// noDataMessageFont	WITHOUT_CLASSIFICATION	0.9999795413970466	WITHOUT_CLASSIFICATION	2.045860295339051E-5	DEFECT
// noDataMessagePaint	WITHOUT_CLASSIFICATION	0.9999789681227762	WITHOUT_CLASSIFICATION	2.103187722373399E-5	DEFECT
// outlineVisible	WITHOUT_CLASSIFICATION	0.999998377693655	WITHOUT_CLASSIFICATION	1.6223063450136857E-6	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999957228069313	WITHOUT_CLASSIFICATION	4.277193068794829E-6	DEFECT
// foregroundAlpha	WITHOUT_CLASSIFICATION	0.999998391152506	WITHOUT_CLASSIFICATION	1.608847493908653E-6	DEFECT
// backgroundAlpha	WITHOUT_CLASSIFICATION	0.9999980328500527	WITHOUT_CLASSIFICATION	1.9671499473408094E-6	DEFECT
// drawingSupplier	WITHOUT_CLASSIFICATION	0.9999965204111185	WITHOUT_CLASSIFICATION	3.4795888814742685E-6	DEFECT
// try a null collection	WITHOUT_CLASSIFICATION	0.9999536289610885	WITHOUT_CLASSIFICATION	4.6371038911518424E-5	DEFECT
// dataExtractOrder	WITHOUT_CLASSIFICATION	0.9999801321014734	WITHOUT_CLASSIFICATION	1.9867898526542637E-5	DEFECT
// headPercent	WITHOUT_CLASSIFICATION	0.9999941903265657	WITHOUT_CLASSIFICATION	5.809673434394896E-6	DEFECT
// interiorGap	WITHOUT_CLASSIFICATION	0.9999839908732432	WITHOUT_CLASSIFICATION	1.6009126756847486E-5	DEFECT
// maxValue	WITHOUT_CLASSIFICATION	0.999987087288354	WITHOUT_CLASSIFICATION	1.2912711646012474E-5	DEFECT
// secondary renderers	WITHOUT_CLASSIFICATION	0.9999934908150981	WITHOUT_CLASSIFICATION	6.509184901924722E-6	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999835537744276	WITHOUT_CLASSIFICATION	1.6446225572302775E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999835537744276	WITHOUT_CLASSIFICATION	1.6446225572302775E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999874650572937	WITHOUT_CLASSIFICATION	1.2534942706321494E-5	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999906161563248	WITHOUT_CLASSIFICATION	9.38384367509762E-6	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999874650572937	WITHOUT_CLASSIFICATION	1.2534942706321494E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999874650572937	WITHOUT_CLASSIFICATION	1.2534942706321494E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999874650572937	WITHOUT_CLASSIFICATION	1.2534942706321494E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999940284489323	WITHOUT_CLASSIFICATION	5.971551067689574E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999965500505749	WITHOUT_CLASSIFICATION	3.449949425003671E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999047737876517	WITHOUT_CLASSIFICATION	9.522621234826835E-5	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.999995205554921	WITHOUT_CLASSIFICATION	4.794445079017166E-6	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.999991749118398	WITHOUT_CLASSIFICATION	8.250881601940016E-6	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9999958524174761	WITHOUT_CLASSIFICATION	4.147582523874136E-6	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.9999902708106819	WITHOUT_CLASSIFICATION	9.729189318147531E-6	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.999978256428906	WITHOUT_CLASSIFICATION	2.1743571094018343E-5	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.9999932806708308	WITHOUT_CLASSIFICATION	6.719329169156166E-6	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999931295753958	WITHOUT_CLASSIFICATION	6.8704246042341235E-6	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999937060407758	WITHOUT_CLASSIFICATION	6.29395922426775E-6	DEFECT
// change a series paint	WITHOUT_CLASSIFICATION	0.9999986514335423	WITHOUT_CLASSIFICATION	1.348566457729186E-6	DEFECT
// baseSeriesOutlineStroke	WITHOUT_CLASSIFICATION	0.9999855325056619	WITHOUT_CLASSIFICATION	1.4467494337962595E-5	DEFECT
// valueFont	WITHOUT_CLASSIFICATION	0.9999955797005463	WITHOUT_CLASSIFICATION	4.420299453692478E-6	DEFECT
// webFilled	WITHOUT_CLASSIFICATION	0.9999873264975918	WITHOUT_CLASSIFICATION	1.2673502408149753E-5	DEFECT
// change a series outline paint	WITHOUT_CLASSIFICATION	0.9999998001150077	WITHOUT_CLASSIFICATION	1.998849922656738E-7	DEFECT
// axisLabelGap	WITHOUT_CLASSIFICATION	0.9999950781380079	WITHOUT_CLASSIFICATION	4.9218619920643385E-6	DEFECT
// thermometerPaint	WITHOUT_CLASSIFICATION	0.9999976744882585	WITHOUT_CLASSIFICATION	2.325511741456575E-6	DEFECT
// change the legendItemShape	WITHOUT_CLASSIFICATION	0.9999976010299969	WITHOUT_CLASSIFICATION	2.398970002973428E-6	DEFECT
// secondary DomainAxisLocations...	WITHOUT_CLASSIFICATION	0.9999964518571056	WITHOUT_CLASSIFICATION	3.54814289432952E-6	DEFECT
// change a series outline stroke	WITHOUT_CLASSIFICATION	0.9999993759832289	WITHOUT_CLASSIFICATION	6.240167711576701E-7	DEFECT
// valueLocation	WITHOUT_CLASSIFICATION	0.9999945822726598	WITHOUT_CLASSIFICATION	5.417727340201214E-6	DEFECT
// thermometerStroke	WITHOUT_CLASSIFICATION	0.9999856654312426	WITHOUT_CLASSIFICATION	1.4334568757395376E-5	DEFECT
// valuePaint	WITHOUT_CLASSIFICATION	0.999997310105025	WITHOUT_CLASSIFICATION	2.6898949750225857E-6	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999861821055183	WITHOUT_CLASSIFICATION	1.3817894481645925E-5	DEFECT
// showValueLines	WITHOUT_CLASSIFICATION	0.9999985143410581	WITHOUT_CLASSIFICATION	1.4856589418327014E-6	DEFECT
// domainAxisLocation...	WITHOUT_CLASSIFICATION	0.999971324056098	WITHOUT_CLASSIFICATION	2.8675943901959644E-5	DEFECT
// valueFormat	WITHOUT_CLASSIFICATION	0.9999897543212497	WITHOUT_CLASSIFICATION	1.0245678750229801E-5	DEFECT
// this doesn't work	WITHOUT_CLASSIFICATION	0.9992701038987273	WITHOUT_CLASSIFICATION	7.29896101272852E-4	DEFECT
// mercuryPaint	WITHOUT_CLASSIFICATION	0.9999962959271622	WITHOUT_CLASSIFICATION	3.7040728377115495E-6	DEFECT
// rangeAxisLocation...	WITHOUT_CLASSIFICATION	0.9999877602182256	WITHOUT_CLASSIFICATION	1.223978177435124E-5	DEFECT
// domainAxis...	WITHOUT_CLASSIFICATION	0.999981778045411	WITHOUT_CLASSIFICATION	1.8221954589038672E-5	DEFECT
// secondary DomainAxes...	WITHOUT_CLASSIFICATION	0.9999942560639561	WITHOUT_CLASSIFICATION	5.743936043994731E-6	DEFECT
// secondary RangeAxisLocations...	WITHOUT_CLASSIFICATION	0.9999976136407138	WITHOUT_CLASSIFICATION	2.386359286126109E-6	DEFECT
// rangeAxis...	WITHOUT_CLASSIFICATION	0.999989709656509	WITHOUT_CLASSIFICATION	1.0290343491023747E-5	DEFECT
// renderer	WITHOUT_CLASSIFICATION	0.9999898236442933	WITHOUT_CLASSIFICATION	1.0176355706684936E-5	DEFECT
// secondary RangeAxes...	WITHOUT_CLASSIFICATION	0.9999957608265246	WITHOUT_CLASSIFICATION	4.239173475421524E-6	DEFECT
// secondaryDatasetRangeAxisMap...	WITHOUT_CLASSIFICATION	0.9999980749541894	WITHOUT_CLASSIFICATION	1.9250458106039444E-6	DEFECT
// secondary DatasetDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999975917123841	WITHOUT_CLASSIFICATION	2.408287615977482E-6	DEFECT
// try a collection with a single number plus a null	WITHOUT_CLASSIFICATION	0.999986675067987	WITHOUT_CLASSIFICATION	1.332493201298283E-5	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999965675099367	WITHOUT_CLASSIFICATION	3.432490063331209E-6	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999965675099367	WITHOUT_CLASSIFICATION	3.432490063331209E-6	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999962736942294	WITHOUT_CLASSIFICATION	3.7263057706943347E-6	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9999958524174761	WITHOUT_CLASSIFICATION	4.147582523874136E-6	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.9999984623694365	WITHOUT_CLASSIFICATION	1.5376305635885754E-6	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.9999987292097721	WITHOUT_CLASSIFICATION	1.2707902279418517E-6	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9999962582304662	WITHOUT_CLASSIFICATION	3.7417695337795107E-6	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9999981758799276	WITHOUT_CLASSIFICATION	1.824120072391285E-6	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.9999793037627807	WITHOUT_CLASSIFICATION	2.0696237219434942E-5	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.9999935291326473	WITHOUT_CLASSIFICATION	6.470867352785097E-6	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999966871146919	WITHOUT_CLASSIFICATION	3.3128853081496205E-6	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.9999894735320116	WITHOUT_CLASSIFICATION	1.0526467988321592E-5	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999971169802402	WITHOUT_CLASSIFICATION	2.8830197597778227E-6	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.9999965908962879	WITHOUT_CLASSIFICATION	3.4091037120703804E-6	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999902600175765	WITHOUT_CLASSIFICATION	9.739982423448051E-6	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999934915088134	WITHOUT_CLASSIFICATION	6.508491186591098E-6	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.9999908407419473	WITHOUT_CLASSIFICATION	9.15925805268898E-6	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.999941878155982	WITHOUT_CLASSIFICATION	5.812184401794842E-5	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999954215375756	WITHOUT_CLASSIFICATION	4.578462424428487E-6	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999888443573056	WITHOUT_CLASSIFICATION	1.115564269434489E-5	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.9999899648158136	WITHOUT_CLASSIFICATION	1.003518418645468E-5	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9999830131456995	WITHOUT_CLASSIFICATION	1.6986854300585117E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999977010789289	WITHOUT_CLASSIFICATION	2.2989210710745863E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999977010789289	WITHOUT_CLASSIFICATION	2.2989210710745863E-6	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999961682867217	WITHOUT_CLASSIFICATION	3.8317132782746015E-6	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999995927940404	WITHOUT_CLASSIFICATION	4.072059596587693E-7	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999995927940404	WITHOUT_CLASSIFICATION	4.072059596587693E-7	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9999988753454535	WITHOUT_CLASSIFICATION	1.1246545465286738E-6	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.9999992802787985	WITHOUT_CLASSIFICATION	7.197212015703229E-7	DEFECT
// rangeZeroBaselineVisible	WITHOUT_CLASSIFICATION	0.999996781413121	WITHOUT_CLASSIFICATION	3.2185868789840173E-6	DEFECT
// rangeZeroBaselineStroke	WITHOUT_CLASSIFICATION	0.9999930350039568	WITHOUT_CLASSIFICATION	6.9649960431629195E-6	DEFECT
// rangeZeroBaselinePaint	WITHOUT_CLASSIFICATION	0.9999977926589332	WITHOUT_CLASSIFICATION	2.2073410668080594E-6	DEFECT
// range markers	WITHOUT_CLASSIFICATION	0.9999905688702676	WITHOUT_CLASSIFICATION	9.431129732421888E-6	DEFECT
// secondary range markers	WITHOUT_CLASSIFICATION	0.9999929478416667	WITHOUT_CLASSIFICATION	7.052158333365621E-6	DEFECT
// quadrant origin	WITHOUT_CLASSIFICATION	0.9999953960131976	WITHOUT_CLASSIFICATION	4.603986802293832E-6	DEFECT
// quadrant paint	WITHOUT_CLASSIFICATION	0.9999947681361643	WITHOUT_CLASSIFICATION	5.231863835771658E-6	DEFECT
// verify that the plot is listening to the cloned renderer	WITHOUT_CLASSIFICATION	0.9999991659501439	WITHOUT_CLASSIFICATION	8.340498561596674E-7	DEFECT
// no renderer 1	WITHOUT_CLASSIFICATION	0.9999914661735209	WITHOUT_CLASSIFICATION	8.533826479172665E-6	DEFECT
// actually removes a1	WITHOUT_CLASSIFICATION	0.9999871816741969	WITHOUT_CLASSIFICATION	1.2818325803138117E-5	DEFECT
// set up some objects...	WITHOUT_CLASSIFICATION	0.9999947093261159	WITHOUT_CLASSIFICATION	5.290673884135057E-6	DEFECT
// paint sequence	WITHOUT_CLASSIFICATION	0.9999978987574022	WITHOUT_CLASSIFICATION	2.1012425978528103E-6	DEFECT
// outline paint sequence	WITHOUT_CLASSIFICATION	0.9999991774048231	WITHOUT_CLASSIFICATION	8.225951768147444E-7	DEFECT
// outline stroke sequence	WITHOUT_CLASSIFICATION	0.9999983628917505	WITHOUT_CLASSIFICATION	1.6371082494789215E-6	DEFECT
// shape sequence	WITHOUT_CLASSIFICATION	0.9999979211447771	WITHOUT_CLASSIFICATION	2.078855222824099E-6	DEFECT
// paint index	WITHOUT_CLASSIFICATION	0.9999805311304264	WITHOUT_CLASSIFICATION	1.946886957365302E-5	DEFECT
// outline paint index	WITHOUT_CLASSIFICATION	0.9999938743823998	WITHOUT_CLASSIFICATION	6.125617600250431E-6	DEFECT
// outline stroke index	WITHOUT_CLASSIFICATION	0.9999934497899572	WITHOUT_CLASSIFICATION	6.550210042838125E-6	DEFECT
// shape index	WITHOUT_CLASSIFICATION	0.9999924948230736	WITHOUT_CLASSIFICATION	7.505176926314663E-6	DEFECT
// create dataset 2...	WITHOUT_CLASSIFICATION	0.9999971669733936	WITHOUT_CLASSIFICATION	2.8330266064539813E-6	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999962736942294	WITHOUT_CLASSIFICATION	3.7263057706943347E-6	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999939294548457	WITHOUT_CLASSIFICATION	6.070545154260056E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999979318349373	WITHOUT_CLASSIFICATION	2.068165062657142E-6	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999937795729826	WITHOUT_CLASSIFICATION	6.220427017418834E-6	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.9999933737090274	WITHOUT_CLASSIFICATION	6.626290972655303E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999984679455493	WITHOUT_CLASSIFICATION	1.5320544506967937E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999984570732932	WITHOUT_CLASSIFICATION	1.5429267068597232E-6	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999889921431689	WITHOUT_CLASSIFICATION	1.1007856831131786E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999927814842494	WITHOUT_CLASSIFICATION	7.21851575054262E-6	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.999992952357007	WITHOUT_CLASSIFICATION	7.047642993055679E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999938695423392	WITHOUT_CLASSIFICATION	6.130457660773585E-6	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.9999997631773444	WITHOUT_CLASSIFICATION	2.3682265559520486E-7	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.999986691317754	WITHOUT_CLASSIFICATION	1.3308682246065628E-5	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.9999972576357613	WITHOUT_CLASSIFICATION	2.7423642386342408E-6	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999957228069313	WITHOUT_CLASSIFICATION	4.277193068794829E-6	DEFECT
// check the case where there is a secondary dataset that doesn't // have a renderer (i.e. falls back to renderer 0)	WITHOUT_CLASSIFICATION	0.9999899041120134	WITHOUT_CLASSIFICATION	1.0095887986723385E-5	DEFECT
// now remove a3, but since a3.equals(a1), this will in fact remove // a1...	WITHOUT_CLASSIFICATION	0.9999439287343033	WITHOUT_CLASSIFICATION	5.607126569676457E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.999977937626277	WITHOUT_CLASSIFICATION	2.2062373722940445E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999996097118475	WITHOUT_CLASSIFICATION	3.902881524979066E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999996097118475	WITHOUT_CLASSIFICATION	3.902881524979066E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999996097118475	WITHOUT_CLASSIFICATION	3.902881524979066E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999996097118475	WITHOUT_CLASSIFICATION	3.902881524979066E-6	DEFECT
// visible	WITHOUT_CLASSIFICATION	0.9999961134079532	WITHOUT_CLASSIFICATION	3.886592046714545E-6	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999962504678803	WITHOUT_CLASSIFICATION	3.7495321197838146E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999971241564295	WITHOUT_CLASSIFICATION	2.8758435705265275E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999971241564295	WITHOUT_CLASSIFICATION	2.8758435705265275E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999971241564295	WITHOUT_CLASSIFICATION	2.8758435705265275E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999971241564295	WITHOUT_CLASSIFICATION	2.8758435705265275E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999971241564295	WITHOUT_CLASSIFICATION	2.8758435705265275E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999971241564295	WITHOUT_CLASSIFICATION	2.8758435705265275E-6	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999962504678803	WITHOUT_CLASSIFICATION	3.7495321197838146E-6	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999962504678803	WITHOUT_CLASSIFICATION	3.7495321197838146E-6	DEFECT
// foregroundPaint	WITHOUT_CLASSIFICATION	0.9999987469985337	WITHOUT_CLASSIFICATION	1.2530014661714385E-6	DEFECT
// background paint	WITHOUT_CLASSIFICATION	0.9999985238564315	WITHOUT_CLASSIFICATION	1.4761435684074042E-6	DEFECT
// foreground paint	WITHOUT_CLASSIFICATION	0.999998792725653	WITHOUT_CLASSIFICATION	1.2072743470813032E-6	DEFECT
// inner radius	WITHOUT_CLASSIFICATION	0.9999836339402742	WITHOUT_CLASSIFICATION	1.6366059725825348E-5	DEFECT
// outer radius	WITHOUT_CLASSIFICATION	0.9999978785716981	WITHOUT_CLASSIFICATION	2.121428301943985E-6	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.9999880777393458	WITHOUT_CLASSIFICATION	1.1922260654199747E-5	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.9999880777393458	WITHOUT_CLASSIFICATION	1.1922260654199747E-5	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.999991774137432	WITHOUT_CLASSIFICATION	8.22586256800112E-6	DEFECT
// frameAnchor	WITHOUT_CLASSIFICATION	0.9999873894657677	WITHOUT_CLASSIFICATION	1.2610534232364646E-5	DEFECT
// templateValue	WITHOUT_CLASSIFICATION	0.9999951756572462	WITHOUT_CLASSIFICATION	4.824342753833502E-6	DEFECT
// valueAnchor	WITHOUT_CLASSIFICATION	0.9999967370873754	WITHOUT_CLASSIFICATION	3.262912624757619E-6	DEFECT
// fill paint	WITHOUT_CLASSIFICATION	0.9999825162253644	WITHOUT_CLASSIFICATION	1.7483774635623975E-5	DEFECT
// outline paint	WITHOUT_CLASSIFICATION	0.9999983767179085	WITHOUT_CLASSIFICATION	1.6232820915020971E-6	DEFECT
// outline stroke	WITHOUT_CLASSIFICATION	0.9999978177864923	WITHOUT_CLASSIFICATION	2.1822135076540026E-6	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999953427540675	WITHOUT_CLASSIFICATION	4.657245932502136E-6	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.9999929443415881	WITHOUT_CLASSIFICATION	7.055658411859529E-6	DEFECT
// background	WITHOUT_CLASSIFICATION	0.9999957970814598	WITHOUT_CLASSIFICATION	4.2029185402966106E-6	DEFECT
// dial cap	WITHOUT_CLASSIFICATION	0.9999901135984259	WITHOUT_CLASSIFICATION	9.886401574024596E-6	DEFECT
// frame	WITHOUT_CLASSIFICATION	0.9999835220761172	WITHOUT_CLASSIFICATION	1.647792388282028E-5	DEFECT
// view	WITHOUT_CLASSIFICATION	0.9999886409073447	WITHOUT_CLASSIFICATION	1.135909265538505E-5	DEFECT
// layer	WITHOUT_CLASSIFICATION	0.9999932269698989	WITHOUT_CLASSIFICATION	6.773030101015592E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999984570732932	WITHOUT_CLASSIFICATION	1.5429267068597232E-6	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999889921431689	WITHOUT_CLASSIFICATION	1.1007856831131786E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999927814842494	WITHOUT_CLASSIFICATION	7.21851575054262E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999938695423392	WITHOUT_CLASSIFICATION	6.130457660773585E-6	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999926135875906	WITHOUT_CLASSIFICATION	7.386412409469956E-6	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.9999961767441664	WITHOUT_CLASSIFICATION	3.82325583362072E-6	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999975762090145	WITHOUT_CLASSIFICATION	2.4237909854281377E-6	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999957228069313	WITHOUT_CLASSIFICATION	4.277193068794829E-6	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.999977937626277	WITHOUT_CLASSIFICATION	2.2062373722940445E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999996097118475	WITHOUT_CLASSIFICATION	3.902881524979066E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999996097118475	WITHOUT_CLASSIFICATION	3.902881524979066E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999971241564295	WITHOUT_CLASSIFICATION	2.8758435705265275E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999971241564295	WITHOUT_CLASSIFICATION	2.8758435705265275E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999971241564295	WITHOUT_CLASSIFICATION	2.8758435705265275E-6	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999962504678803	WITHOUT_CLASSIFICATION	3.7495321197838146E-6	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.999991774137432	WITHOUT_CLASSIFICATION	8.22586256800112E-6	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999953427540675	WITHOUT_CLASSIFICATION	4.657245932502136E-6	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999953427540675	WITHOUT_CLASSIFICATION	4.657245932502136E-6	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.9999929443415881	WITHOUT_CLASSIFICATION	7.055658411859529E-6	DEFECT
// majorTickIncrement	WITHOUT_CLASSIFICATION	0.9999872046711251	WITHOUT_CLASSIFICATION	1.2795328874815749E-5	DEFECT
// majorTickLength	WITHOUT_CLASSIFICATION	0.9999941736067544	WITHOUT_CLASSIFICATION	5.826393245702024E-6	DEFECT
// majorTickPaint	WITHOUT_CLASSIFICATION	0.9999945426287745	WITHOUT_CLASSIFICATION	5.457371225551431E-6	DEFECT
// majorTickStroke	WITHOUT_CLASSIFICATION	0.9999815295736996	WITHOUT_CLASSIFICATION	1.8470426300508082E-5	DEFECT
// minorTickLength	WITHOUT_CLASSIFICATION	0.9999922728366077	WITHOUT_CLASSIFICATION	7.72716339226503E-6	DEFECT
// tickLabelOffset	WITHOUT_CLASSIFICATION	0.999994177935685	WITHOUT_CLASSIFICATION	5.822064315020634E-6	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.9999971380984997	WITHOUT_CLASSIFICATION	2.861901500289461E-6	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999961227941565	WITHOUT_CLASSIFICATION	3.877205843501645E-6	DEFECT
// label	WITHOUT_CLASSIFICATION	0.9999923888969436	WITHOUT_CLASSIFICATION	7.611103056452899E-6	DEFECT
// gradient paint transformer	WITHOUT_CLASSIFICATION	0.9999929766998177	WITHOUT_CLASSIFICATION	7.02330018237596E-6	DEFECT
// test default instance	WITHOUT_CLASSIFICATION	0.9999970155725464	WITHOUT_CLASSIFICATION	2.98442745359977E-6	DEFECT
// have to use a concrete subclass...	WITHOUT_CLASSIFICATION	0.9999995191640003	WITHOUT_CLASSIFICATION	4.808359996243331E-7	DEFECT
// seriesVisible	WITHOUT_CLASSIFICATION	0.999995967974904	WITHOUT_CLASSIFICATION	4.03202509602353E-6	DEFECT
// seriesVisibleList	WITHOUT_CLASSIFICATION	0.9999978845790705	WITHOUT_CLASSIFICATION	2.115420929574423E-6	DEFECT
// baseSeriesVisible	WITHOUT_CLASSIFICATION	0.9999937497988426	WITHOUT_CLASSIFICATION	6.250201157410192E-6	DEFECT
// seriesVisibleInLegendList	WITHOUT_CLASSIFICATION	0.9999974899994855	WITHOUT_CLASSIFICATION	2.510000514501267E-6	DEFECT
// baseSeriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.9999950434047999	WITHOUT_CLASSIFICATION	4.956595200020037E-6	DEFECT
// paintList	WITHOUT_CLASSIFICATION	0.9999943499118966	WITHOUT_CLASSIFICATION	5.650088103314677E-6	DEFECT
// basePaint	WITHOUT_CLASSIFICATION	0.9999960092323996	WITHOUT_CLASSIFICATION	3.9907676004177585E-6	DEFECT
// baseFillPaint	WITHOUT_CLASSIFICATION	0.9999966326601912	WITHOUT_CLASSIFICATION	3.3673398087157644E-6	DEFECT
// outlinePaintList	WITHOUT_CLASSIFICATION	0.9999992523437786	WITHOUT_CLASSIFICATION	7.476562213389388E-7	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.9999972793540248	WITHOUT_CLASSIFICATION	2.7206459752920534E-6	DEFECT
// strokeList	WITHOUT_CLASSIFICATION	0.9999939560371738	WITHOUT_CLASSIFICATION	6.0439628261859005E-6	DEFECT
// outlineStrokeList	WITHOUT_CLASSIFICATION	0.9999982083563892	WITHOUT_CLASSIFICATION	1.7916436108723693E-6	DEFECT
// baseOutlineStroke	WITHOUT_CLASSIFICATION	0.9999953179646416	WITHOUT_CLASSIFICATION	4.682035358367381E-6	DEFECT
// shapeList	WITHOUT_CLASSIFICATION	0.9999953150026473	WITHOUT_CLASSIFICATION	4.6849973528240535E-6	DEFECT
// baseShape	WITHOUT_CLASSIFICATION	0.9999854729043737	WITHOUT_CLASSIFICATION	1.4527095626434258E-5	DEFECT
// itemLabelsVisibleList	WITHOUT_CLASSIFICATION	0.9999888193068048	WITHOUT_CLASSIFICATION	1.1180693195108266E-5	DEFECT
// baseItemLabelsVisible	WITHOUT_CLASSIFICATION	0.999994045128246	WITHOUT_CLASSIFICATION	5.954871754057258E-6	DEFECT
// itemLabelFont	WITHOUT_CLASSIFICATION	0.9999914701861886	WITHOUT_CLASSIFICATION	8.529813811301577E-6	DEFECT
// baseItemLabelFont	WITHOUT_CLASSIFICATION	0.9999973091205954	WITHOUT_CLASSIFICATION	2.6908794045586747E-6	DEFECT
// itemLabelPaint	WITHOUT_CLASSIFICATION	0.9999945924305511	WITHOUT_CLASSIFICATION	5.407569448891598E-6	DEFECT
// itemLabelPaintList	WITHOUT_CLASSIFICATION	0.9999930500669282	WITHOUT_CLASSIFICATION	6.949933071878414E-6	DEFECT
// baseItemLabelPaint	WITHOUT_CLASSIFICATION	0.9999968662186447	WITHOUT_CLASSIFICATION	3.1337813552609634E-6	DEFECT
// positiveItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9999980306040827	WITHOUT_CLASSIFICATION	1.9693959172830844E-6	DEFECT
// basePositiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999980810373507	WITHOUT_CLASSIFICATION	1.918962649413736E-6	DEFECT
// negativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999976787135758	WITHOUT_CLASSIFICATION	2.3212864241269626E-6	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.9998562070791379	WITHOUT_CLASSIFICATION	1.4379292086211183E-4	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.9999759283737909	WITHOUT_CLASSIFICATION	2.4071626209162443E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999047737876517	WITHOUT_CLASSIFICATION	9.522621234826835E-5	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.9999972793540248	WITHOUT_CLASSIFICATION	2.7206459752920534E-6	DEFECT
// itemLabelAnchorOffset	WITHOUT_CLASSIFICATION	0.9999891920093235	WITHOUT_CLASSIFICATION	1.0807990676606942E-5	DEFECT
// createEntities;	WITHOUT_CLASSIFICATION	0.9999982531186139	WITHOUT_CLASSIFICATION	1.7468813860543168E-6	DEFECT
// createEntitiesList;	WITHOUT_CLASSIFICATION	0.9999973066803274	WITHOUT_CLASSIFICATION	2.6933196727441014E-6	DEFECT
// legendShape	WITHOUT_CLASSIFICATION	0.999990881961823	WITHOUT_CLASSIFICATION	9.118038177075496E-6	DEFECT
// baseLegendShape	WITHOUT_CLASSIFICATION	0.9999944171049401	WITHOUT_CLASSIFICATION	5.5828950598249435E-6	DEFECT
// legendTextFont	WITHOUT_CLASSIFICATION	0.9999910033387456	WITHOUT_CLASSIFICATION	8.996661254400696E-6	DEFECT
// baseLegendTextFont	WITHOUT_CLASSIFICATION	0.9999908794837703	WITHOUT_CLASSIFICATION	9.120516229732153E-6	DEFECT
// OUTLINE PAINT	WITHOUT_CLASSIFICATION	0.9999221452910122	WITHOUT_CLASSIFICATION	7.785470898789249E-5	DEFECT
// ITEM_LABELS_VISIBLE	WITHOUT_CLASSIFICATION	0.9998038146871464	WITHOUT_CLASSIFICATION	1.9618531285356614E-4	DEFECT
// ITEM_LABEL_FONT	WITHOUT_CLASSIFICATION	0.9998567962512095	WITHOUT_CLASSIFICATION	1.432037487904563E-4	DEFECT
// POSITIVE ITEM LABEL POSITION	WITHOUT_CLASSIFICATION	0.9998380747167528	WITHOUT_CLASSIFICATION	1.6192528324728526E-4	DEFECT
// NEGATIVE ITEM LABEL ANCHOR	WITHOUT_CLASSIFICATION	0.9997586090294854	WITHOUT_CLASSIFICATION	2.413909705146446E-4	DEFECT
// failed	WITHOUT_CLASSIFICATION	0.9999935371346024	WITHOUT_CLASSIFICATION	6.462865397619053E-6	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999965353748834	WITHOUT_CLASSIFICATION	3.464625116622703E-6	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999965353748834	WITHOUT_CLASSIFICATION	3.464625116622703E-6	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999965353748834	WITHOUT_CLASSIFICATION	3.464625116622703E-6	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999859614547609	WITHOUT_CLASSIFICATION	1.4038545239169628E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999859614547609	WITHOUT_CLASSIFICATION	1.4038545239169628E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999859614547609	WITHOUT_CLASSIFICATION	1.4038545239169628E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999952851430061	WITHOUT_CLASSIFICATION	4.714856993923363E-6	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999952851430061	WITHOUT_CLASSIFICATION	4.714856993923363E-6	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.999996194410078	WITHOUT_CLASSIFICATION	3.805589921894179E-6	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.999996194410078	WITHOUT_CLASSIFICATION	3.805589921894179E-6	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.999996194410078	WITHOUT_CLASSIFICATION	3.805589921894179E-6	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.999996194410078	WITHOUT_CLASSIFICATION	3.805589921894179E-6	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999955216444305	WITHOUT_CLASSIFICATION	4.478355569567243E-6	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999955216444305	WITHOUT_CLASSIFICATION	4.478355569567243E-6	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999955216444305	WITHOUT_CLASSIFICATION	4.478355569567243E-6	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999955216444305	WITHOUT_CLASSIFICATION	4.478355569567243E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999927257600363	WITHOUT_CLASSIFICATION	7.274239963728002E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999927257600363	WITHOUT_CLASSIFICATION	7.274239963728002E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999927257600363	WITHOUT_CLASSIFICATION	7.274239963728002E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999927257600363	WITHOUT_CLASSIFICATION	7.274239963728002E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999927257600363	WITHOUT_CLASSIFICATION	7.274239963728002E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.99999656623684	WITHOUT_CLASSIFICATION	3.433763159974773E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.99999656623684	WITHOUT_CLASSIFICATION	3.433763159974773E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.99999656623684	WITHOUT_CLASSIFICATION	3.433763159974773E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.99999656623684	WITHOUT_CLASSIFICATION	3.433763159974773E-6	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999971304384819	WITHOUT_CLASSIFICATION	2.869561518027437E-6	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999971304384819	WITHOUT_CLASSIFICATION	2.869561518027437E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999047737876517	WITHOUT_CLASSIFICATION	9.522621234826835E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999952851430061	WITHOUT_CLASSIFICATION	4.714856993923363E-6	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.999996194410078	WITHOUT_CLASSIFICATION	3.805589921894179E-6	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999955216444305	WITHOUT_CLASSIFICATION	4.478355569567243E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999927257600363	WITHOUT_CLASSIFICATION	7.274239963728002E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.99999656623684	WITHOUT_CLASSIFICATION	3.433763159974773E-6	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999971304384819	WITHOUT_CLASSIFICATION	2.869561518027437E-6	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9999985952869564	WITHOUT_CLASSIFICATION	1.4047130435730179E-6	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.9999981481325747	WITHOUT_CLASSIFICATION	1.8518674252265291E-6	DEFECT
// try with gradient paint	WITHOUT_CLASSIFICATION	0.9999943080389299	WITHOUT_CLASSIFICATION	5.691961070198458E-6	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999797600206539	WITHOUT_CLASSIFICATION	2.0239979346016352E-5	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999797600206539	WITHOUT_CLASSIFICATION	2.0239979346016352E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.999989003963924	WITHOUT_CLASSIFICATION	1.0996036075921856E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.999989003963924	WITHOUT_CLASSIFICATION	1.0996036075921856E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.999989003963924	WITHOUT_CLASSIFICATION	1.0996036075921856E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999901670295156	WITHOUT_CLASSIFICATION	9.8329704842821E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999901670295156	WITHOUT_CLASSIFICATION	9.8329704842821E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999569345846009	WITHOUT_CLASSIFICATION	4.3065415399069975E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999569345846009	WITHOUT_CLASSIFICATION	4.3065415399069975E-5	DEFECT
// the renderer should not be equal to a BarRenderer	WITHOUT_CLASSIFICATION	0.9999896639018692	WITHOUT_CLASSIFICATION	1.0336098130775347E-5	DEFECT
// firstBarPaint;	WITHOUT_CLASSIFICATION	0.9999954379973351	WITHOUT_CLASSIFICATION	4.562002664829968E-6	DEFECT
// lastBarPaint;	WITHOUT_CLASSIFICATION	0.9999987094773944	WITHOUT_CLASSIFICATION	1.2905226055605017E-6	DEFECT
// positiveBarPaint;	WITHOUT_CLASSIFICATION	0.9999977678782216	WITHOUT_CLASSIFICATION	2.232121778469534E-6	DEFECT
//private Paint negativeBarPaint;	WITHOUT_CLASSIFICATION	0.9999921892018889	WITHOUT_CLASSIFICATION	7.810798111103676E-6	DEFECT
// quick check for independence	WITHOUT_CLASSIFICATION	0.9999941342456624	WITHOUT_CLASSIFICATION	5.865754337551372E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999047737876517	WITHOUT_CLASSIFICATION	9.522621234826835E-5	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.999989784934187	WITHOUT_CLASSIFICATION	1.0215065812944658E-5	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999934250087628	WITHOUT_CLASSIFICATION	6.574991237234605E-6	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999931295753958	WITHOUT_CLASSIFICATION	6.8704246042341235E-6	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999937060407758	WITHOUT_CLASSIFICATION	6.29395922426775E-6	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999797600206539	WITHOUT_CLASSIFICATION	2.0239979346016352E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.999989003963924	WITHOUT_CLASSIFICATION	1.0996036075921856E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999901670295156	WITHOUT_CLASSIFICATION	9.8329704842821E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999901670295156	WITHOUT_CLASSIFICATION	9.8329704842821E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999901670295156	WITHOUT_CLASSIFICATION	9.8329704842821E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999901670295156	WITHOUT_CLASSIFICATION	9.8329704842821E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999569345846009	WITHOUT_CLASSIFICATION	4.3065415399069975E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999569345846009	WITHOUT_CLASSIFICATION	4.3065415399069975E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999569345846009	WITHOUT_CLASSIFICATION	4.3065415399069975E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999569345846009	WITHOUT_CLASSIFICATION	4.3065415399069975E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999569345846009	WITHOUT_CLASSIFICATION	4.3065415399069975E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999569345846009	WITHOUT_CLASSIFICATION	4.3065415399069975E-5	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.9999983432433411	WITHOUT_CLASSIFICATION	1.6567566589017683E-6	DEFECT
// map	WITHOUT_CLASSIFICATION	0.999988480124686	WITHOUT_CLASSIFICATION	1.1519875313978621E-5	DEFECT
// toolTipGeneratorList	WITHOUT_CLASSIFICATION	0.9999919250741299	WITHOUT_CLASSIFICATION	8.07492587003522E-6	DEFECT
// baseToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999907290172714	WITHOUT_CLASSIFICATION	9.270982728589542E-6	DEFECT
// itemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999806525331262	WITHOUT_CLASSIFICATION	1.934746687378264E-5	DEFECT
// itemLabelGeneratorList	WITHOUT_CLASSIFICATION	0.999985157601091	WITHOUT_CLASSIFICATION	1.4842398909120772E-5	DEFECT
// baseItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999938964569665	WITHOUT_CLASSIFICATION	6.10354303360046E-6	DEFECT
// urlGeneratorList	WITHOUT_CLASSIFICATION	0.9999966557879116	WITHOUT_CLASSIFICATION	3.344212088334304E-6	DEFECT
// baseItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999915063676996	WITHOUT_CLASSIFICATION	8.49363230033401E-6	DEFECT
// legendItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999929119513743	WITHOUT_CLASSIFICATION	7.088048625668493E-6	DEFECT
// legendItemToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999887912866788	WITHOUT_CLASSIFICATION	1.1208713321250683E-5	DEFECT
// legendItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999930732392931	WITHOUT_CLASSIFICATION	6.926760706942379E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999970076195461	WITHOUT_CLASSIFICATION	2.9923804539590146E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999970076195461	WITHOUT_CLASSIFICATION	2.9923804539590146E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999970076195461	WITHOUT_CLASSIFICATION	2.9923804539590146E-6	DEFECT
// base value	WITHOUT_CLASSIFICATION	0.9999955889616765	WITHOUT_CLASSIFICATION	4.411038323488048E-6	DEFECT
// itemMargin	WITHOUT_CLASSIFICATION	0.9999778084816264	WITHOUT_CLASSIFICATION	2.2191518373544662E-5	DEFECT
// drawBarOutline	WITHOUT_CLASSIFICATION	0.999994117961225	WITHOUT_CLASSIFICATION	5.882038775034199E-6	DEFECT
// maximumBarWidth	WITHOUT_CLASSIFICATION	0.9999888812223133	WITHOUT_CLASSIFICATION	1.1118777686649991E-5	DEFECT
// minimumBarLength	WITHOUT_CLASSIFICATION	0.9999963171302839	WITHOUT_CLASSIFICATION	3.682869716052859E-6	DEFECT
// gradientPaintTransformer	WITHOUT_CLASSIFICATION	0.999992186939304	WITHOUT_CLASSIFICATION	7.813060696004612E-6	DEFECT
// positiveItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.999997335787763	WITHOUT_CLASSIFICATION	2.6642122371328246E-6	DEFECT
// negativeItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.9999980150318908	WITHOUT_CLASSIFICATION	1.98496810929477E-6	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.999994075984733	WITHOUT_CLASSIFICATION	5.924015267110666E-6	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.9999976682806978	WITHOUT_CLASSIFICATION	2.3317193021623465E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999047737876517	WITHOUT_CLASSIFICATION	9.522621234826835E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999047737876517	WITHOUT_CLASSIFICATION	9.522621234826835E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999047737876517	WITHOUT_CLASSIFICATION	9.522621234826835E-5	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.999989784934187	WITHOUT_CLASSIFICATION	1.0215065812944658E-5	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999934250087628	WITHOUT_CLASSIFICATION	6.574991237234605E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999901670295156	WITHOUT_CLASSIFICATION	9.8329704842821E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999569345846009	WITHOUT_CLASSIFICATION	4.3065415399069975E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999569345846009	WITHOUT_CLASSIFICATION	4.3065415399069975E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999569345846009	WITHOUT_CLASSIFICATION	4.3065415399069975E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999569345846009	WITHOUT_CLASSIFICATION	4.3065415399069975E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999569345846009	WITHOUT_CLASSIFICATION	4.3065415399069975E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999569345846009	WITHOUT_CLASSIFICATION	4.3065415399069975E-5	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.9999983432433411	WITHOUT_CLASSIFICATION	1.6567566589017683E-6	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.999994075984733	WITHOUT_CLASSIFICATION	5.924015267110666E-6	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.9999976682806978	WITHOUT_CLASSIFICATION	2.3317193021623465E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999926202877805	WITHOUT_CLASSIFICATION	7.379712219512027E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999978328820371	WITHOUT_CLASSIFICATION	2.1671179628677235E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999978328820371	WITHOUT_CLASSIFICATION	2.1671179628677235E-6	DEFECT
// check that super class fields are being looked at...	WITHOUT_CLASSIFICATION	0.9999946717944141	WITHOUT_CLASSIFICATION	5.328205585928202E-6	DEFECT
// setUseYInterval	WITHOUT_CLASSIFICATION	0.9999980828541534	WITHOUT_CLASSIFICATION	1.917145846674768E-6	DEFECT
// setBase()	WITHOUT_CLASSIFICATION	0.9999936774569308	WITHOUT_CLASSIFICATION	6.322543069200154E-6	DEFECT
// try empty dataset	WITHOUT_CLASSIFICATION	0.9999977816827628	WITHOUT_CLASSIFICATION	2.218317237295647E-6	DEFECT
// setGradientPaintTransformer()	WITHOUT_CLASSIFICATION	0.9999958542088343	WITHOUT_CLASSIFICATION	4.145791165708458E-6	DEFECT
// setDrawBarOutline()	WITHOUT_CLASSIFICATION	0.9999941801915838	WITHOUT_CLASSIFICATION	5.819808416150008E-6	DEFECT
// setMargin()	WITHOUT_CLASSIFICATION	0.9999958893267781	WITHOUT_CLASSIFICATION	4.1106732219550615E-6	DEFECT
// legendBar	WITHOUT_CLASSIFICATION	0.9999945631781315	WITHOUT_CLASSIFICATION	5.436821868500192E-6	DEFECT
// positiveItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9999962422844823	WITHOUT_CLASSIFICATION	3.7577155176572187E-6	DEFECT
// negativeItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9999972003178119	WITHOUT_CLASSIFICATION	2.799682188181916E-6	DEFECT
// check a list containing a non-Number object	WITHOUT_CLASSIFICATION	0.9999989539659685	WITHOUT_CLASSIFICATION	1.0460340314733308E-6	DEFECT
// try something from the base class	WITHOUT_CLASSIFICATION	0.9999995987178467	WITHOUT_CLASSIFICATION	4.012821532931275E-7	DEFECT
// positive paint	WITHOUT_CLASSIFICATION	0.99999291266415	WITHOUT_CLASSIFICATION	7.087335849943669E-6	DEFECT
// negative paint	WITHOUT_CLASSIFICATION	0.999992180462245	WITHOUT_CLASSIFICATION	7.819537754970952E-6	DEFECT
// shapesVisible	WITHOUT_CLASSIFICATION	0.9999973948268105	WITHOUT_CLASSIFICATION	2.6051731895182335E-6	DEFECT
// legendLine	WITHOUT_CLASSIFICATION	0.9999930671958331	WITHOUT_CLASSIFICATION	6.932804166907404E-6	DEFECT
// roundXCoordinates	WITHOUT_CLASSIFICATION	0.9999990310513299	WITHOUT_CLASSIFICATION	9.689486701089974E-7	DEFECT
// drawOpenTicks	WITHOUT_CLASSIFICATION	0.9999917165545151	WITHOUT_CLASSIFICATION	8.283445484886702E-6	DEFECT
// drawCloseTicks	WITHOUT_CLASSIFICATION	0.9999978931485173	WITHOUT_CLASSIFICATION	2.106851482751419E-6	DEFECT
// openTickPaint	WITHOUT_CLASSIFICATION	0.9999962298114208	WITHOUT_CLASSIFICATION	3.7701885791984006E-6	DEFECT
// closeTickPaint	WITHOUT_CLASSIFICATION	0.9999988983576964	WITHOUT_CLASSIFICATION	1.1016423035812357E-6	DEFECT
// tickLength	WITHOUT_CLASSIFICATION	0.9999902543417298	WITHOUT_CLASSIFICATION	9.745658270127666E-6	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999959073411664	WITHOUT_CLASSIFICATION	4.092658833590817E-6	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999981791401403	WITHOUT_CLASSIFICATION	1.820859859733004E-6	DEFECT
// drawXError	WITHOUT_CLASSIFICATION	0.9999223212819087	WITHOUT_CLASSIFICATION	7.767871809125803E-5	DEFECT
// drawYError	WITHOUT_CLASSIFICATION	0.9999493396622455	WITHOUT_CLASSIFICATION	5.066033775440473E-5	DEFECT
// capLength	WITHOUT_CLASSIFICATION	0.9999941919445635	WITHOUT_CLASSIFICATION	5.808055436417036E-6	DEFECT
// errorPaint	WITHOUT_CLASSIFICATION	0.9999536229557289	WITHOUT_CLASSIFICATION	4.637704427119226E-5	DEFECT
// errorStroke	WITHOUT_CLASSIFICATION	0.9997333595674867	WITHOUT_CLASSIFICATION	2.6664043251326496E-4	DEFECT
// check boxPaint null also	WITHOUT_CLASSIFICATION	0.9999905341358516	WITHOUT_CLASSIFICATION	9.46586414843902E-6	DEFECT
// upPaint	WITHOUT_CLASSIFICATION	0.9999973884056398	WITHOUT_CLASSIFICATION	2.6115943601622335E-6	DEFECT
// downPaint	WITHOUT_CLASSIFICATION	0.9999921206833113	WITHOUT_CLASSIFICATION	7.87931668876262E-6	DEFECT
// drawVolume	WITHOUT_CLASSIFICATION	0.9999948880367033	WITHOUT_CLASSIFICATION	5.111963296620275E-6	DEFECT
// candleWidth	WITHOUT_CLASSIFICATION	0.9999932221225712	WITHOUT_CLASSIFICATION	6.777877428811176E-6	DEFECT
// maxCandleWidthInMilliseconds	WITHOUT_CLASSIFICATION	0.999992985717276	WITHOUT_CLASSIFICATION	7.014282723913312E-6	DEFECT
// autoWidthMethod	WITHOUT_CLASSIFICATION	0.9999935417953921	WITHOUT_CLASSIFICATION	6.458204607792226E-6	DEFECT
// autoWidthFactor	WITHOUT_CLASSIFICATION	0.9999947023579572	WITHOUT_CLASSIFICATION	5.297642042836263E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999984679455493	WITHOUT_CLASSIFICATION	1.5320544506967937E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999906161563248	WITHOUT_CLASSIFICATION	9.38384367509762E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.9999741061923305	WITHOUT_CLASSIFICATION	2.589380766953479E-5	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999868544292055	WITHOUT_CLASSIFICATION	1.3145570794599029E-5	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999984570732932	WITHOUT_CLASSIFICATION	1.5429267068597232E-6	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.999992937351409	WITHOUT_CLASSIFICATION	7.062648591019181E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999927814842494	WITHOUT_CLASSIFICATION	7.21851575054262E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999047737876517	WITHOUT_CLASSIFICATION	9.522621234826835E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999047737876517	WITHOUT_CLASSIFICATION	9.522621234826835E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999047737876517	WITHOUT_CLASSIFICATION	9.522621234826835E-5	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999926135875906	WITHOUT_CLASSIFICATION	7.386412409469956E-6	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999957228069313	WITHOUT_CLASSIFICATION	4.277193068794829E-6	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999861821055183	WITHOUT_CLASSIFICATION	1.3817894481645925E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999569345846009	WITHOUT_CLASSIFICATION	4.3065415399069975E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999569345846009	WITHOUT_CLASSIFICATION	4.3065415399069975E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999569345846009	WITHOUT_CLASSIFICATION	4.3065415399069975E-5	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999970076195461	WITHOUT_CLASSIFICATION	2.9923804539590146E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999970076195461	WITHOUT_CLASSIFICATION	2.9923804539590146E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999970076195461	WITHOUT_CLASSIFICATION	2.9923804539590146E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999978328820371	WITHOUT_CLASSIFICATION	2.1671179628677235E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999978328820371	WITHOUT_CLASSIFICATION	2.1671179628677235E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999978328820371	WITHOUT_CLASSIFICATION	2.1671179628677235E-6	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999959073411664	WITHOUT_CLASSIFICATION	4.092658833590817E-6	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999981791401403	WITHOUT_CLASSIFICATION	1.820859859733004E-6	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9999710643860824	WITHOUT_CLASSIFICATION	2.893561391759786E-5	DEFECT
// autoWidthGap	WITHOUT_CLASSIFICATION	0.9999955858027182	WITHOUT_CLASSIFICATION	4.414197281818463E-6	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999984521207783	WITHOUT_CLASSIFICATION	1.5478792216424992E-6	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999984521207783	WITHOUT_CLASSIFICATION	1.5478792216424992E-6	DEFECT
// check the bounds of a simple dataset	WITHOUT_CLASSIFICATION	0.9999997695151873	WITHOUT_CLASSIFICATION	2.304848126679584E-7	DEFECT
// test findDomainBounds as well	WITHOUT_CLASSIFICATION	0.9999832461640228	WITHOUT_CLASSIFICATION	1.6753835977183067E-5	DEFECT
// blockHeight	WITHOUT_CLASSIFICATION	0.9999919205522081	WITHOUT_CLASSIFICATION	8.079447791938002E-6	DEFECT
// blockWidth	WITHOUT_CLASSIFICATION	0.9999830644367144	WITHOUT_CLASSIFICATION	1.693556328563619E-5	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.999992457324351	WITHOUT_CLASSIFICATION	7.542675648983973E-6	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.999992457324351	WITHOUT_CLASSIFICATION	7.542675648983973E-6	DEFECT
// the following fields are inherited from the AbstractXYItemRenderer	WITHOUT_CLASSIFICATION	0.9999950979037602	WITHOUT_CLASSIFICATION	4.9020962397887194E-6	DEFECT
// axis	WITHOUT_CLASSIFICATION	0.9999885596846703	WITHOUT_CLASSIFICATION	1.1440315329736071E-5	DEFECT
// axisOffset	WITHOUT_CLASSIFICATION	0.9999782181367309	WITHOUT_CLASSIFICATION	2.1781863269019956E-5	DEFECT
// stripWidth	WITHOUT_CLASSIFICATION	0.9999935453181202	WITHOUT_CLASSIFICATION	6.4546818798000855E-6	DEFECT
// stripOutlineVisible	WITHOUT_CLASSIFICATION	0.9999956774742704	WITHOUT_CLASSIFICATION	4.322525729612231E-6	DEFECT
// stripOutlinePaint	WITHOUT_CLASSIFICATION	0.9999986121364524	WITHOUT_CLASSIFICATION	1.3878635476940655E-6	DEFECT
// stripOutlineStroke	WITHOUT_CLASSIFICATION	0.999991254985397	WITHOUT_CLASSIFICATION	8.7450146030083E-6	DEFECT
// shapeVisible	WITHOUT_CLASSIFICATION	0.9999968466791699	WITHOUT_CLASSIFICATION	3.1533208301963074E-6	DEFECT
// shapeFilled	WITHOUT_CLASSIFICATION	0.9999967525884449	WITHOUT_CLASSIFICATION	3.24741155511085E-6	DEFECT
// shapeOutlineVisible	WITHOUT_CLASSIFICATION	0.9999958355929588	WITHOUT_CLASSIFICATION	4.164407041177279E-6	DEFECT
// shapeAnchor	WITHOUT_CLASSIFICATION	0.9999968054483104	WITHOUT_CLASSIFICATION	3.194551689595136E-6	DEFECT
// shapeLocation	WITHOUT_CLASSIFICATION	0.9999951905286049	WITHOUT_CLASSIFICATION	4.809471395211667E-6	DEFECT
// line	WITHOUT_CLASSIFICATION	0.9999866861121449	WITHOUT_CLASSIFICATION	1.3313887855003393E-5	DEFECT
// lineStroke	WITHOUT_CLASSIFICATION	0.9999852022280028	WITHOUT_CLASSIFICATION	1.479777199719987E-5	DEFECT
// maximumLinesToDisplay	WITHOUT_CLASSIFICATION	0.9999945291590491	WITHOUT_CLASSIFICATION	5.47084095097471E-6	DEFECT
// toolTipText	WITHOUT_CLASSIFICATION	0.9999934550344247	WITHOUT_CLASSIFICATION	6.544965575216975E-6	DEFECT
// expandToFitSpace	WITHOUT_CLASSIFICATION	0.9999917509516493	WITHOUT_CLASSIFICATION	8.249048350693498E-6	DEFECT
// margin	WITHOUT_CLASSIFICATION	0.9999955639283189	WITHOUT_CLASSIFICATION	4.436071681101109E-6	DEFECT
// border	WITHOUT_CLASSIFICATION	0.9999878349724028	WITHOUT_CLASSIFICATION	1.2165027597173759E-5	DEFECT
// is the clone independent	WITHOUT_CLASSIFICATION	0.9999551496701671	WITHOUT_CLASSIFICATION	4.48503298329308E-5	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9999908250359792	WITHOUT_CLASSIFICATION	9.174964020817894E-6	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.9999963949972729	WITHOUT_CLASSIFICATION	3.605002727151176E-6	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999907622003386	WITHOUT_CLASSIFICATION	9.237799661453596E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999926202877805	WITHOUT_CLASSIFICATION	7.379712219512027E-6	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9999446890435779	WITHOUT_CLASSIFICATION	5.531095642212631E-5	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9999908250359792	WITHOUT_CLASSIFICATION	9.174964020817894E-6	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9999955232236527	WITHOUT_CLASSIFICATION	4.476776347304574E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.9999994103040741	WITHOUT_CLASSIFICATION	5.896959259106231E-7	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.9999994103040741	WITHOUT_CLASSIFICATION	5.896959259106231E-7	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.999994996881142	WITHOUT_CLASSIFICATION	5.003118858043674E-6	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.999994996881142	WITHOUT_CLASSIFICATION	5.003118858043674E-6	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.9999989508428678	WITHOUT_CLASSIFICATION	1.0491571321147808E-6	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999993770189866	WITHOUT_CLASSIFICATION	6.22981013313852E-7	DEFECT
// check sorted rows	WITHOUT_CLASSIFICATION	0.9999979343116175	WITHOUT_CLASSIFICATION	2.0656883824275644E-6	DEFECT
// check for unknown column	WITHOUT_CLASSIFICATION	0.9999896277104608	WITHOUT_CLASSIFICATION	1.0372289539218022E-5	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.999961946110537	WITHOUT_CLASSIFICATION	3.805388946299803E-5	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.999961946110537	WITHOUT_CLASSIFICATION	3.805388946299803E-5	DEFECT
/*v =*/	WITHOUT_CLASSIFICATION	0.9999638265198492	WITHOUT_CLASSIFICATION	3.6173480150856304E-5	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999993697576689	WITHOUT_CLASSIFICATION	6.302423310662486E-7	DEFECT
// check null argument 1	WITHOUT_CLASSIFICATION	0.9999873507070876	WITHOUT_CLASSIFICATION	1.2649292912487251E-5	DEFECT
/* ComparableObjectItem item1 = */	WITHOUT_CLASSIFICATION	0.9999923014647907	WITHOUT_CLASSIFICATION	7.698535209233555E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999704840579429	WITHOUT_CLASSIFICATION	2.9515942057111828E-5	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999956964519446	WITHOUT_CLASSIFICATION	4.303548055350295E-6	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999853969996346	WITHOUT_CLASSIFICATION	1.4603000365388425E-5	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9999945030789641	WITHOUT_CLASSIFICATION	5.496921035878186E-6	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9999945030789641	WITHOUT_CLASSIFICATION	5.496921035878186E-6	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.9999972896425626	WITHOUT_CLASSIFICATION	2.7103574374121353E-6	DEFECT
// check null argument	WITHOUT_CLASSIFICATION	0.9999886492442452	WITHOUT_CLASSIFICATION	1.1350755754784107E-5	DEFECT
// replace an existing value	WITHOUT_CLASSIFICATION	0.9999970815544456	WITHOUT_CLASSIFICATION	2.918445554388297E-6	DEFECT
// try a null key - should throw an exception	WITHOUT_CLASSIFICATION	0.9998975594324682	WITHOUT_CLASSIFICATION	1.0244056753177008E-4	DEFECT
// try unknown key	WITHOUT_CLASSIFICATION	0.9999829378704207	WITHOUT_CLASSIFICATION	1.7062129579244196E-5	DEFECT
// try negative key index	WITHOUT_CLASSIFICATION	0.9999256156880028	WITHOUT_CLASSIFICATION	7.438431199724398E-5	DEFECT
// try key index == itemCount	WITHOUT_CLASSIFICATION	0.9999682641357539	WITHOUT_CLASSIFICATION	3.1735864246119494E-5	DEFECT
/*Range r2 =*/	WITHOUT_CLASSIFICATION	0.9999836229269919	WITHOUT_CLASSIFICATION	1.6377073008150838E-5	DEFECT
// Expand by 0% does not change the range	WITHOUT_CLASSIFICATION	0.9999767479535868	WITHOUT_CLASSIFICATION	2.3252046413240957E-5	DEFECT
// Lower > upper: mid point is used	WITHOUT_CLASSIFICATION	0.9999934731816632	WITHOUT_CLASSIFICATION	6.526818336803612E-6	DEFECT
// Shifting with a delta of 0 does not change the range	WITHOUT_CLASSIFICATION	0.9999954617842053	WITHOUT_CLASSIFICATION	4.5382157947837015E-6	DEFECT
// Scaling with a factor of 1 does not change the range	WITHOUT_CLASSIFICATION	0.9999935815560855	WITHOUT_CLASSIFICATION	6.418443914484016E-6	DEFECT
/*s1 = */	WITHOUT_CLASSIFICATION	0.999974672173265	WITHOUT_CLASSIFICATION	2.5327826734981662E-5	DEFECT
// key	WITHOUT_CLASSIFICATION	0.9999591253175335	WITHOUT_CLASSIFICATION	4.0874682466529E-5	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999930396408371	WITHOUT_CLASSIFICATION	6.960359162866113E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999937810176731	WITHOUT_CLASSIFICATION	6.2189823268093795E-6	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999978029504515	WITHOUT_CLASSIFICATION	2.1970495485208935E-6	DEFECT
// remove an item	WITHOUT_CLASSIFICATION	0.9999930640489835	WITHOUT_CLASSIFICATION	6.935951016468344E-6	DEFECT
// map a key to a new group	WITHOUT_CLASSIFICATION	0.9999904844457198	WITHOUT_CLASSIFICATION	9.515554280244988E-6	DEFECT
// clear a mapping	WITHOUT_CLASSIFICATION	0.9999957189922414	WITHOUT_CLASSIFICATION	4.2810077586641905E-6	DEFECT
// check handling of null key	WITHOUT_CLASSIFICATION	0.999977926755952	WITHOUT_CLASSIFICATION	2.2073244048034457E-5	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.9999999282973361	WITHOUT_CLASSIFICATION	7.170266392371129E-8	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999976129388954	WITHOUT_CLASSIFICATION	2.3870611045431314E-6	DEFECT
// if there is an explicit mapping to the default group, it is counted	WITHOUT_CLASSIFICATION	0.9999952981785566	WITHOUT_CLASSIFICATION	4.701821443400893E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999993697576689	WITHOUT_CLASSIFICATION	6.302423310662486E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999704840579429	WITHOUT_CLASSIFICATION	2.9515942057111828E-5	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999704840579429	WITHOUT_CLASSIFICATION	2.9515942057111828E-5	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999902186198251	WITHOUT_CLASSIFICATION	9.78138017485636E-6	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999902186198251	WITHOUT_CLASSIFICATION	9.78138017485636E-6	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999902186198251	WITHOUT_CLASSIFICATION	9.78138017485636E-6	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999902186198251	WITHOUT_CLASSIFICATION	9.78138017485636E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999956964519446	WITHOUT_CLASSIFICATION	4.303548055350295E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999956964519446	WITHOUT_CLASSIFICATION	4.303548055350295E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999956964519446	WITHOUT_CLASSIFICATION	4.303548055350295E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999956964519446	WITHOUT_CLASSIFICATION	4.303548055350295E-6	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999976129388954	WITHOUT_CLASSIFICATION	2.3870611045431314E-6	DEFECT
// if the default group is not mapped to, it should still count towards // the group count...	WITHOUT_CLASSIFICATION	0.999991951729441	WITHOUT_CLASSIFICATION	8.048270559005843E-6	DEFECT
// now when the default group is mapped to, it shouldn't increase the // group count...	WITHOUT_CLASSIFICATION	0.9999980248599002	WITHOUT_CLASSIFICATION	1.9751400998328196E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// the default group is always at index 0	WITHOUT_CLASSIFICATION	0.9999968530024793	WITHOUT_CLASSIFICATION	3.1469975207351937E-6	DEFECT
// a non-existent group should return -1	WITHOUT_CLASSIFICATION	0.9999997283324219	WITHOUT_CLASSIFICATION	2.7166757805080715E-7	DEFECT
// indices are assigned in the order that groups are originally mapped	WITHOUT_CLASSIFICATION	0.9999982185303397	WITHOUT_CLASSIFICATION	1.7814696604024765E-6	DEFECT
// a key that hasn't been mapped should return the default group	WITHOUT_CLASSIFICATION	0.9999948217386743	WITHOUT_CLASSIFICATION	5.178261325711471E-6	DEFECT
// a null argument should throw an exception	WITHOUT_CLASSIFICATION	0.9999651303985192	WITHOUT_CLASSIFICATION	3.486960148076663E-5	DEFECT
// a small check for independence	WITHOUT_CLASSIFICATION	0.999998023882976	WITHOUT_CLASSIFICATION	1.9761170240581276E-6	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999960793758587	WITHOUT_CLASSIFICATION	3.920624141309586E-6	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999960793758587	WITHOUT_CLASSIFICATION	3.920624141309586E-6	DEFECT
// confirm overwriting an existing value	WITHOUT_CLASSIFICATION	0.999995670399881	WITHOUT_CLASSIFICATION	4.329600118945177E-6	DEFECT
// try null keys	WITHOUT_CLASSIFICATION	0.999976618365251	WITHOUT_CLASSIFICATION	2.3381634749085702E-5	DEFECT
// try negative row index	WITHOUT_CLASSIFICATION	0.9999800224378153	WITHOUT_CLASSIFICATION	1.997756218476211E-5	DEFECT
// try row index too high	WITHOUT_CLASSIFICATION	0.9999882995190705	WITHOUT_CLASSIFICATION	1.170048092948666E-5	DEFECT
// try negative column index	WITHOUT_CLASSIFICATION	0.999978878995021	WITHOUT_CLASSIFICATION	2.1121004979073885E-5	DEFECT
// try column index too high	WITHOUT_CLASSIFICATION	0.9999878717552086	WITHOUT_CLASSIFICATION	1.2128244791333291E-5	DEFECT
// try unknown row key	WITHOUT_CLASSIFICATION	0.9999659462484086	WITHOUT_CLASSIFICATION	3.405375159142611E-5	DEFECT
// try null row key	WITHOUT_CLASSIFICATION	0.9999738625613941	WITHOUT_CLASSIFICATION	2.6137438605888006E-5	DEFECT
// try unknown column key	WITHOUT_CLASSIFICATION	0.9999774135686492	WITHOUT_CLASSIFICATION	2.258643135076683E-5	DEFECT
// try null column key	WITHOUT_CLASSIFICATION	0.9999254614246529	WITHOUT_CLASSIFICATION	7.453857534708073E-5	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999951882078812	WITHOUT_CLASSIFICATION	4.811792118702303E-6	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999951882078812	WITHOUT_CLASSIFICATION	4.811792118702303E-6	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999621746394374	WITHOUT_CLASSIFICATION	3.782536056251645E-5	DEFECT
// it's OK to use an index equal to the size of the list	WITHOUT_CLASSIFICATION	0.9999925929900481	WITHOUT_CLASSIFICATION	7.407009951877754E-6	DEFECT
// try replacing an existing value	WITHOUT_CLASSIFICATION	0.9999973419230099	WITHOUT_CLASSIFICATION	2.658076990017964E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999955632358749	WITHOUT_CLASSIFICATION	4.436764125154979E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999955632358749	WITHOUT_CLASSIFICATION	4.436764125154979E-6	DEFECT
// try a null source	WITHOUT_CLASSIFICATION	0.9999969873599164	WITHOUT_CLASSIFICATION	3.012640083613681E-6	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.9999681886151236	WITHOUT_CLASSIFICATION	3.181138487649029E-5	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.9999681886151236	WITHOUT_CLASSIFICATION	3.181138487649029E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999432535814495	WITHOUT_CLASSIFICATION	5.674641855051532E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999432535814495	WITHOUT_CLASSIFICATION	5.674641855051532E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999432535814495	WITHOUT_CLASSIFICATION	5.674641855051532E-5	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9999842045142787	WITHOUT_CLASSIFICATION	1.579548572120634E-5	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.9999969617122224	WITHOUT_CLASSIFICATION	3.0382877774901282E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999901670295156	WITHOUT_CLASSIFICATION	9.8329704842821E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999785441406502	WITHOUT_CLASSIFICATION	2.145585934972193E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999785441406502	WITHOUT_CLASSIFICATION	2.145585934972193E-5	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999621746394374	WITHOUT_CLASSIFICATION	3.782536056251645E-5	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999955632358749	WITHOUT_CLASSIFICATION	4.436764125154979E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999955632358749	WITHOUT_CLASSIFICATION	4.436764125154979E-6	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999432535814495	WITHOUT_CLASSIFICATION	5.674641855051532E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999432535814495	WITHOUT_CLASSIFICATION	5.674641855051532E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999432535814495	WITHOUT_CLASSIFICATION	5.674641855051532E-5	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9999842045142787	WITHOUT_CLASSIFICATION	1.579548572120634E-5	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.9999969617122224	WITHOUT_CLASSIFICATION	3.0382877774901282E-6	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.9999941751997288	WITHOUT_CLASSIFICATION	5.82480027130761E-6	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9999785714778084	WITHOUT_CLASSIFICATION	2.1428522191535325E-5	DEFECT
// increment a null value	WITHOUT_CLASSIFICATION	0.9999736607651729	WITHOUT_CLASSIFICATION	2.633923482705153E-5	DEFECT
// increment an unknown row	WITHOUT_CLASSIFICATION	0.99996162070129	WITHOUT_CLASSIFICATION	3.837929870999803E-5	DEFECT
// increment an unknown column	WITHOUT_CLASSIFICATION	0.9999664885649772	WITHOUT_CLASSIFICATION	3.351143502294725E-5	DEFECT
// a row of all null values is still counted...	WITHOUT_CLASSIFICATION	0.9999953737671833	WITHOUT_CLASSIFICATION	4.626232816708692E-6	DEFECT
// a column of all null values is still counted...	WITHOUT_CLASSIFICATION	0.9999916059596788	WITHOUT_CLASSIFICATION	8.394040321244657E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999984451029307	WITHOUT_CLASSIFICATION	1.554897069276748E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999919519428985	WITHOUT_CLASSIFICATION	8.04805710144102E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999919519428985	WITHOUT_CLASSIFICATION	8.04805710144102E-6	DEFECT
// check that two empty datasets are equal	WITHOUT_CLASSIFICATION	0.9999975072222576	WITHOUT_CLASSIFICATION	2.4927777425060256E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999820886259144	WITHOUT_CLASSIFICATION	1.7911374085624658E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999820886259144	WITHOUT_CLASSIFICATION	1.7911374085624658E-5	DEFECT
// make sure that modifying the returned array doesn't change the // function	WITHOUT_CLASSIFICATION	0.9999960928573284	WITHOUT_CLASSIFICATION	3.907142671611149E-6	DEFECT
// note that we don't define taskB1	WITHOUT_CLASSIFICATION	0.9999337498046443	WITHOUT_CLASSIFICATION	6.625019535563553E-5	DEFECT
// define subtasks	WITHOUT_CLASSIFICATION	0.9999981703051076	WITHOUT_CLASSIFICATION	1.8296948923177686E-6	DEFECT
/* Number start = */	WITHOUT_CLASSIFICATION	0.9999937686774841	WITHOUT_CLASSIFICATION	6.231322515921632E-6	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999954107604593	WITHOUT_CLASSIFICATION	4.589239540750362E-6	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999954107604593	WITHOUT_CLASSIFICATION	4.589239540750362E-6	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999954107604593	WITHOUT_CLASSIFICATION	4.589239540750362E-6	DEFECT
/* int count = */	WITHOUT_CLASSIFICATION	0.9999725123087251	WITHOUT_CLASSIFICATION	2.748769127490832E-5	DEFECT
/* Number end = */	WITHOUT_CLASSIFICATION	0.9999800538681353	WITHOUT_CLASSIFICATION	1.994613186464211E-5	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999989335596609	WITHOUT_CLASSIFICATION	1.0664403391534031E-6	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999977622727626	WITHOUT_CLASSIFICATION	2.2377272374182757E-6	DEFECT
// what if we don't want the interval?	WITHOUT_CLASSIFICATION	0.9999481147941639	WITHOUT_CLASSIFICATION	5.1885205836143644E-5	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9999688909458477	WITHOUT_CLASSIFICATION	3.1109054152371054E-5	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.999992841083023	WITHOUT_CLASSIFICATION	7.158916977002635E-6	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999992839712957	WITHOUT_CLASSIFICATION	7.160287042018484E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999992839712957	WITHOUT_CLASSIFICATION	7.160287042018484E-7	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.9999937595881087	WITHOUT_CLASSIFICATION	6.2404118912836455E-6	DEFECT
// a Double.NaN should be ignored	WITHOUT_CLASSIFICATION	0.9999970348648016	WITHOUT_CLASSIFICATION	2.9651351984187593E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999926202877805	WITHOUT_CLASSIFICATION	7.379712219512027E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999926202877805	WITHOUT_CLASSIFICATION	7.379712219512027E-6	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999993770189866	WITHOUT_CLASSIFICATION	6.22981013313852E-7	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9999785714778084	WITHOUT_CLASSIFICATION	2.1428522191535325E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999984451029307	WITHOUT_CLASSIFICATION	1.554897069276748E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999919519428985	WITHOUT_CLASSIFICATION	8.04805710144102E-6	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999977622727626	WITHOUT_CLASSIFICATION	2.2377272374182757E-6	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999977622727626	WITHOUT_CLASSIFICATION	2.2377272374182757E-6	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999989335596609	WITHOUT_CLASSIFICATION	1.0664403391534031E-6	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.9999941751997288	WITHOUT_CLASSIFICATION	5.82480027130761E-6	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.999992841083023	WITHOUT_CLASSIFICATION	7.158916977002635E-6	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9999688909458477	WITHOUT_CLASSIFICATION	3.1109054152371054E-5	DEFECT
// Double.NaN DOESN'T mess things up	WITHOUT_CLASSIFICATION	0.9999860770188141	WITHOUT_CLASSIFICATION	1.3922981185762431E-5	DEFECT
// got it!	WITHOUT_CLASSIFICATION	0.9999762376253295	WITHOUT_CLASSIFICATION	2.376237467052666E-5	DEFECT
// check that empty dataset is handled OK	WITHOUT_CLASSIFICATION	0.999990132380532	WITHOUT_CLASSIFICATION	9.867619467944377E-6	DEFECT
// and that simple aggregation works	WITHOUT_CLASSIFICATION	0.9999964664363122	WITHOUT_CLASSIFICATION	3.5335636876841883E-6	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999891301549398	WITHOUT_CLASSIFICATION	1.0869845060089724E-5	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999891301549398	WITHOUT_CLASSIFICATION	1.0869845060089724E-5	DEFECT
// null dataset throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999885811464118	WITHOUT_CLASSIFICATION	1.1418853588306256E-5	DEFECT
// null list throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.999977940174271	WITHOUT_CLASSIFICATION	2.2059825729043636E-5	DEFECT
// null range throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999745201756869	WITHOUT_CLASSIFICATION	2.5479824313152125E-5	DEFECT
// empty dataset returns null	WITHOUT_CLASSIFICATION	0.9999901250811187	WITHOUT_CLASSIFICATION	9.874918881405167E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999655525687559	WITHOUT_CLASSIFICATION	3.4447431244195394E-5	DEFECT
// check a null value	WITHOUT_CLASSIFICATION	0.9999745390049066	WITHOUT_CLASSIFICATION	2.546099509334135E-5	DEFECT
// check a NaN	WITHOUT_CLASSIFICATION	0.9999799353193646	WITHOUT_CLASSIFICATION	2.006468063547885E-5	DEFECT
// check another regular value	WITHOUT_CLASSIFICATION	0.9999951290264549	WITHOUT_CLASSIFICATION	4.870973545021023E-6	DEFECT
// add a second series	WITHOUT_CLASSIFICATION	0.9999965729715061	WITHOUT_CLASSIFICATION	3.4270284938789816E-6	DEFECT
// add a value to the second series	WITHOUT_CLASSIFICATION	0.9999997839066519	WITHOUT_CLASSIFICATION	2.160933481119505E-7	DEFECT
// add a value that isn't in the xRange	WITHOUT_CLASSIFICATION	0.9999937875129097	WITHOUT_CLASSIFICATION	6.212487090274227E-6	DEFECT
// try some nulls	WITHOUT_CLASSIFICATION	0.9999913165306703	WITHOUT_CLASSIFICATION	8.683469329650808E-6	DEFECT
// an empty dataset should return null for bounds	WITHOUT_CLASSIFICATION	0.9999911779201904	WITHOUT_CLASSIFICATION	8.822079809524091E-6	DEFECT
// try a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999995447693644	WITHOUT_CLASSIFICATION	4.5523063563383053E-7	DEFECT
// try a dataset with two values	WITHOUT_CLASSIFICATION	0.9999993933473309	WITHOUT_CLASSIFICATION	6.066526690641334E-7	DEFECT
// try a Double.NaN	WITHOUT_CLASSIFICATION	0.9999966561089577	WITHOUT_CLASSIFICATION	3.343891042325765E-6	DEFECT
// try a Double.NEGATIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999826549877958	WITHOUT_CLASSIFICATION	1.73450122042752E-5	DEFECT
// overwrite the value	WITHOUT_CLASSIFICATION	0.9999977436678572	WITHOUT_CLASSIFICATION	2.2563321427645686E-6	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999952117463987	WITHOUT_CLASSIFICATION	4.7882536013221394E-6	DEFECT
// now overwrite this item with another	WITHOUT_CLASSIFICATION	0.9999857986420794	WITHOUT_CLASSIFICATION	1.4201357920582617E-5	DEFECT
// try null list	WITHOUT_CLASSIFICATION	0.9999901095780626	WITHOUT_CLASSIFICATION	9.890421937387483E-6	DEFECT
// try a list containing a single value	WITHOUT_CLASSIFICATION	0.9999993083105999	WITHOUT_CLASSIFICATION	6.916894001677962E-7	DEFECT
// try null array	WITHOUT_CLASSIFICATION	0.9999758358200252	WITHOUT_CLASSIFICATION	2.4164179974711313E-5	DEFECT
// try an array containing no items	WITHOUT_CLASSIFICATION	0.9999887913274834	WITHOUT_CLASSIFICATION	1.1208672516540646E-5	DEFECT
// try an array containing a single Number	WITHOUT_CLASSIFICATION	0.9999982772111223	WITHOUT_CLASSIFICATION	1.722788877614813E-6	DEFECT
// try an array containing a single Number and a null	WITHOUT_CLASSIFICATION	0.9999977648630193	WITHOUT_CLASSIFICATION	2.235136980758082E-6	DEFECT
// try an array containing a single Number and a NaN	WITHOUT_CLASSIFICATION	0.9999994270532256	WITHOUT_CLASSIFICATION	5.729467743429082E-7	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999890089110698	WITHOUT_CLASSIFICATION	1.0991088930268753E-5	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.999951404028019	WITHOUT_CLASSIFICATION	4.8595971981077166E-5	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999926202877805	WITHOUT_CLASSIFICATION	7.379712219512027E-6	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999952117463987	WITHOUT_CLASSIFICATION	4.7882536013221394E-6	DEFECT
// try an empty collection	WITHOUT_CLASSIFICATION	0.9999068988272123	WITHOUT_CLASSIFICATION	9.310117278766787E-5	DEFECT
// try a collection with a single number	WITHOUT_CLASSIFICATION	0.9999962687308043	WITHOUT_CLASSIFICATION	3.731269195719869E-6	DEFECT
// try a collection with a single number plus a NaN	WITHOUT_CLASSIFICATION	0.9999931273838093	WITHOUT_CLASSIFICATION	6.872616190809684E-6	DEFECT
// try a collection with several numbers	WITHOUT_CLASSIFICATION	0.999996289011568	WITHOUT_CLASSIFICATION	3.7109884319162726E-6	DEFECT
// a Collection containing a NaN will return Double.NaN for the result	WITHOUT_CLASSIFICATION	0.9999990942764508	WITHOUT_CLASSIFICATION	9.057235491659591E-7	DEFECT
// check null list	WITHOUT_CLASSIFICATION	0.9999900113136129	WITHOUT_CLASSIFICATION	9.988686387089908E-6	DEFECT
// check empty list	WITHOUT_CLASSIFICATION	0.9999943796800218	WITHOUT_CLASSIFICATION	5.62031997810778E-6	DEFECT
// check list containing null	WITHOUT_CLASSIFICATION	0.9999767700171468	WITHOUT_CLASSIFICATION	2.3229982853213262E-5	DEFECT
// try zero length array	WITHOUT_CLASSIFICATION	0.9999898197136644	WITHOUT_CLASSIFICATION	1.0180286335561975E-5	DEFECT
// try single value	WITHOUT_CLASSIFICATION	0.9999989463352339	WITHOUT_CLASSIFICATION	1.0536647661032032E-6	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9999710643860824	WITHOUT_CLASSIFICATION	2.893561391759786E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// try deleting a time period that doesn't exist...	WITHOUT_CLASSIFICATION	0.9999973801713958	WITHOUT_CLASSIFICATION	2.6198286042021015E-6	DEFECT
// try deleting null	WITHOUT_CLASSIFICATION	0.9999907895387536	WITHOUT_CLASSIFICATION	9.210461246308702E-6	DEFECT
// copy a range before the start of the series data...	WITHOUT_CLASSIFICATION	0.9999993820694154	WITHOUT_CLASSIFICATION	6.17930584617989E-7	DEFECT
// copy a range that includes only the first item in the series...	WITHOUT_CLASSIFICATION	0.9999993133442269	WITHOUT_CLASSIFICATION	6.866557731270412E-7	DEFECT
// copy a range that begins before and ends in the middle of the // series...	WITHOUT_CLASSIFICATION	0.999999220598442	WITHOUT_CLASSIFICATION	7.794015579867336E-7	DEFECT
// copy just the first item...	WITHOUT_CLASSIFICATION	0.9999940124982303	WITHOUT_CLASSIFICATION	5.9875017697357275E-6	DEFECT
// copy the first two items...	WITHOUT_CLASSIFICATION	0.999995738101654	WITHOUT_CLASSIFICATION	4.261898346015361E-6	DEFECT
// copy the middle three items...	WITHOUT_CLASSIFICATION	0.9999987291112893	WITHOUT_CLASSIFICATION	1.2708887106806809E-6	DEFECT
// copy the last two items...	WITHOUT_CLASSIFICATION	0.999998726368988	WITHOUT_CLASSIFICATION	1.2736310120132E-6	DEFECT
// copy the last item...	WITHOUT_CLASSIFICATION	0.9999979894828388	WITHOUT_CLASSIFICATION	2.0105171612776154E-6	DEFECT
// check negative first argument	WITHOUT_CLASSIFICATION	0.9999953754543223	WITHOUT_CLASSIFICATION	4.624545677828045E-6	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999357978494726	WITHOUT_CLASSIFICATION	6.42021505272906E-5	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999357978494726	WITHOUT_CLASSIFICATION	6.42021505272906E-5	DEFECT
// check second argument less than first argument	WITHOUT_CLASSIFICATION	0.9999990127722772	WITHOUT_CLASSIFICATION	9.87227722707703E-7	DEFECT
// changing the overwritten record shouldn't affect the series	WITHOUT_CLASSIFICATION	0.9999981423121383	WITHOUT_CLASSIFICATION	1.8576878616689349E-6	DEFECT
// changing the item that was added should not change the series	WITHOUT_CLASSIFICATION	0.9999980286235204	WITHOUT_CLASSIFICATION	1.9713764796287473E-6	DEFECT
// can't get anything yet...just an exception	WITHOUT_CLASSIFICATION	0.999840073735153	WITHOUT_CLASSIFICATION	1.5992626484697236E-4	DEFECT
/*TimeSeriesDataItem item =*/	WITHOUT_CLASSIFICATION	0.9999026362748926	WITHOUT_CLASSIFICATION	9.736372510740627E-5	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.9999648206836876	WITHOUT_CLASSIFICATION	3.5179316312384E-5	DEFECT
/* TimeSeriesDataItem item = */	WITHOUT_CLASSIFICATION	0.9999272734987829	WITHOUT_CLASSIFICATION	7.272650121716724E-5	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999936992145702	WITHOUT_CLASSIFICATION	6.300785429848669E-6	DEFECT
// test series with one item	WITHOUT_CLASSIFICATION	0.9999917626360011	WITHOUT_CLASSIFICATION	8.23736399889803E-6	DEFECT
// test series with two items	WITHOUT_CLASSIFICATION	0.9999900548442002	WITHOUT_CLASSIFICATION	9.945155799769072E-6	DEFECT
// milliseconds somewhere in 2006	WITHOUT_CLASSIFICATION	0.9999954556270705	WITHOUT_CLASSIFICATION	4.544372929585136E-6	DEFECT
// test a series with 1 item	WITHOUT_CLASSIFICATION	0.9999872560012292	WITHOUT_CLASSIFICATION	1.2743998770841773E-5	DEFECT
// test a series with two items	WITHOUT_CLASSIFICATION	0.99999509610759	WITHOUT_CLASSIFICATION	4.903892409973324E-6	DEFECT
// this line triggers the defect	WITHOUT_CLASSIFICATION	0.9999716373266806	WITHOUT_CLASSIFICATION	2.8362673319374737E-5	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9999919536736293	WITHOUT_CLASSIFICATION	8.04632637082453E-6	DEFECT
// null items are ignored	WITHOUT_CLASSIFICATION	0.9999915545038206	WITHOUT_CLASSIFICATION	8.445496179426394E-6	DEFECT
// if there are only null items, we get a NaNRange	WITHOUT_CLASSIFICATION	0.9999868089687406	WITHOUT_CLASSIFICATION	1.3191031259316929E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999562306573742	WITHOUT_CLASSIFICATION	4.3769342625828324E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999562306573742	WITHOUT_CLASSIFICATION	4.3769342625828324E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999562306573742	WITHOUT_CLASSIFICATION	4.3769342625828324E-5	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999909973729774	WITHOUT_CLASSIFICATION	9.002627022629286E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.999988184914854	WITHOUT_CLASSIFICATION	1.1815085145982402E-5	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.999988184914854	WITHOUT_CLASSIFICATION	1.1815085145982402E-5	DEFECT
// domain description - null	WITHOUT_CLASSIFICATION	0.9999914968799287	WITHOUT_CLASSIFICATION	8.503120071266225E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999902598938202	WITHOUT_CLASSIFICATION	9.740106179743986E-6	DEFECT
// a null item should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999683859016237	WITHOUT_CLASSIFICATION	3.161409837620494E-5	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.999976732804801	WITHOUT_CLASSIFICATION	2.3267195198921872E-5	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.999976732804801	WITHOUT_CLASSIFICATION	2.3267195198921872E-5	DEFECT
// range description	WITHOUT_CLASSIFICATION	0.9999978605497429	WITHOUT_CLASSIFICATION	2.1394502570258306E-6	DEFECT
// domain description	WITHOUT_CLASSIFICATION	0.9999895570045118	WITHOUT_CLASSIFICATION	1.0442995488173917E-5	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.9999978210669478	WITHOUT_CLASSIFICATION	2.1789330521321304E-6	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999937160935383	WITHOUT_CLASSIFICATION	6.283906461796144E-6	DEFECT
// range description - null	WITHOUT_CLASSIFICATION	0.999996303410371	WITHOUT_CLASSIFICATION	3.696589628894862E-6	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.9999978210669478	WITHOUT_CLASSIFICATION	2.1789330521321304E-6	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999937160935383	WITHOUT_CLASSIFICATION	6.283906461796144E-6	DEFECT
// add a fourth time period	WITHOUT_CLASSIFICATION	0.999994506863831	WITHOUT_CLASSIFICATION	5.4931361690464295E-6	DEFECT
// add a third time period	WITHOUT_CLASSIFICATION	0.999983044313516	WITHOUT_CLASSIFICATION	1.6955686484064224E-5	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.9999977669745707	WITHOUT_CLASSIFICATION	2.2330254293097132E-6	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.9999977669745707	WITHOUT_CLASSIFICATION	2.2330254293097132E-6	DEFECT
// first day of week is Sunday	WITHOUT_CLASSIFICATION	0.9999369163294285	WITHOUT_CLASSIFICATION	6.308367057143805E-5	DEFECT
// first day of week is monday	WITHOUT_CLASSIFICATION	0.9999626964637492	WITHOUT_CLASSIFICATION	3.7303536250821714E-5	DEFECT
// try null zone	WITHOUT_CLASSIFICATION	0.9999846135303831	WITHOUT_CLASSIFICATION	1.5386469616818995E-5	DEFECT
// add series to collection 1, should be not equal	WITHOUT_CLASSIFICATION	0.9999210490115651	WITHOUT_CLASSIFICATION	7.895098843491796E-5	DEFECT
// newly created collections should be equal	WITHOUT_CLASSIFICATION	0.9999892083043359	WITHOUT_CLASSIFICATION	1.0791695664079602E-5	DEFECT
// now add the same series to collection 2 to make them equal again...	WITHOUT_CLASSIFICATION	0.9999960471654296	WITHOUT_CLASSIFICATION	3.952834570493491E-6	DEFECT
// now remove series 2 from collection 2	WITHOUT_CLASSIFICATION	0.9999935952406387	WITHOUT_CLASSIFICATION	6.404759361331952E-6	DEFECT
// now remove series 2 from collection 1 to make them equal again	WITHOUT_CLASSIFICATION	0.9999964599448289	WITHOUT_CLASSIFICATION	3.540055171175634E-6	DEFECT
// for a series with no data, we expect {-1, -1}...	WITHOUT_CLASSIFICATION	0.9999968101195486	WITHOUT_CLASSIFICATION	3.189880451384134E-6	DEFECT
// now test with a single value in the series...	WITHOUT_CLASSIFICATION	0.9999989228627238	WITHOUT_CLASSIFICATION	1.0771372760613268E-6	DEFECT
// now add a second value to the series...	WITHOUT_CLASSIFICATION	0.999999674666134	WITHOUT_CLASSIFICATION	3.2533386590738945E-7	DEFECT
// now add a third value to the series...	WITHOUT_CLASSIFICATION	0.9999992570411277	WITHOUT_CLASSIFICATION	7.429588724445321E-7	DEFECT
/* TimeSeries s = */	WITHOUT_CLASSIFICATION	0.999951676476142	WITHOUT_CLASSIFICATION	4.832352385805196E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999124002067319	WITHOUT_CLASSIFICATION	8.75997932681894E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999954663541006	WITHOUT_CLASSIFICATION	4.533645899370019E-6	DEFECT
// store the current time zone	WITHOUT_CLASSIFICATION	0.9999966069935662	WITHOUT_CLASSIFICATION	3.393006433925757E-6	DEFECT
// restore the default time zone	WITHOUT_CLASSIFICATION	0.999999599378974	WITHOUT_CLASSIFICATION	4.006210260042247E-7	DEFECT
// when the dataset contains no series, we expect the range to be null	WITHOUT_CLASSIFICATION	0.999970993760514	WITHOUT_CLASSIFICATION	2.9006239485942138E-5	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999975196708343	WITHOUT_CLASSIFICATION	2.4803291657120265E-6	DEFECT
// adding a second series	WITHOUT_CLASSIFICATION	0.9999968133840675	WITHOUT_CLASSIFICATION	3.1866159324653352E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999707269829589	WITHOUT_CLASSIFICATION	2.9273017041095906E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.99997637677203	WITHOUT_CLASSIFICATION	2.3623227970097925E-5	DEFECT
// period	WITHOUT_CLASSIFICATION	0.9999920933333358	WITHOUT_CLASSIFICATION	7.9066666642604E-6	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999930396408371	WITHOUT_CLASSIFICATION	6.960359162866113E-6	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999930396408371	WITHOUT_CLASSIFICATION	6.960359162866113E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999937810176731	WITHOUT_CLASSIFICATION	6.2189823268093795E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999937810176731	WITHOUT_CLASSIFICATION	6.2189823268093795E-6	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999978029504515	WITHOUT_CLASSIFICATION	2.1970495485208935E-6	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999978029504515	WITHOUT_CLASSIFICATION	2.1970495485208935E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999984451029307	WITHOUT_CLASSIFICATION	1.554897069276748E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999984451029307	WITHOUT_CLASSIFICATION	1.554897069276748E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999655525687559	WITHOUT_CLASSIFICATION	3.4447431244195394E-5	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9999710643860824	WITHOUT_CLASSIFICATION	2.893561391759786E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999562306573742	WITHOUT_CLASSIFICATION	4.3769342625828324E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999562306573742	WITHOUT_CLASSIFICATION	4.3769342625828324E-5	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.999988184914854	WITHOUT_CLASSIFICATION	1.1815085145982402E-5	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.999988184914854	WITHOUT_CLASSIFICATION	1.1815085145982402E-5	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.999988184914854	WITHOUT_CLASSIFICATION	1.1815085145982402E-5	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999902598938202	WITHOUT_CLASSIFICATION	9.740106179743986E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999902598938202	WITHOUT_CLASSIFICATION	9.740106179743986E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999902598938202	WITHOUT_CLASSIFICATION	9.740106179743986E-6	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999909973729774	WITHOUT_CLASSIFICATION	9.002627022629286E-6	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999909973729774	WITHOUT_CLASSIFICATION	9.002627022629286E-6	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999124002067319	WITHOUT_CLASSIFICATION	8.75997932681894E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999954663541006	WITHOUT_CLASSIFICATION	4.533645899370019E-6	DEFECT
// now test that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999994596491638	WITHOUT_CLASSIFICATION	5.40350836151721E-7	DEFECT
// Make sure there's nothing left	WITHOUT_CLASSIFICATION	0.9999956514610534	WITHOUT_CLASSIFICATION	4.348538946595324E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999875837587863	WITHOUT_CLASSIFICATION	1.241624121368167E-5	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999875837587863	WITHOUT_CLASSIFICATION	1.241624121368167E-5	DEFECT
// the moving average series has 7 items, the first three // days (11, 12, 13 August are skipped)	WITHOUT_CLASSIFICATION	0.9999982011639846	WITHOUT_CLASSIFICATION	1.7988360152528486E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999956864416869	WITHOUT_CLASSIFICATION	4.313558313092814E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999875837587863	WITHOUT_CLASSIFICATION	1.241624121368167E-5	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999640000691993	WITHOUT_CLASSIFICATION	3.599993080063347E-5	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999984400596287	WITHOUT_CLASSIFICATION	1.559940371302724E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999984400596287	WITHOUT_CLASSIFICATION	1.559940371302724E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999984400596287	WITHOUT_CLASSIFICATION	1.559940371302724E-6	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.999998105702601	WITHOUT_CLASSIFICATION	1.894297399061428E-6	DEFECT
// now add another series	WITHOUT_CLASSIFICATION	0.9999942263541591	WITHOUT_CLASSIFICATION	5.773645840894235E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999927139460487	WITHOUT_CLASSIFICATION	7.286053951263735E-6	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.9999887277024276	WITHOUT_CLASSIFICATION	1.1272297572354742E-5	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999978259233008	WITHOUT_CLASSIFICATION	2.1740766992929065E-6	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999978259233008	WITHOUT_CLASSIFICATION	2.1740766992929065E-6	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999944263418097	WITHOUT_CLASSIFICATION	5.573658190385188E-6	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.999987651742234	WITHOUT_CLASSIFICATION	1.2348257765977177E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999707269829589	WITHOUT_CLASSIFICATION	2.9273017041095906E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.99997637677203	WITHOUT_CLASSIFICATION	2.3623227970097925E-5	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999978328820371	WITHOUT_CLASSIFICATION	2.1671179628677235E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999978328820371	WITHOUT_CLASSIFICATION	2.1671179628677235E-6	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999930396408371	WITHOUT_CLASSIFICATION	6.960359162866113E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999937810176731	WITHOUT_CLASSIFICATION	6.2189823268093795E-6	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999978029504515	WITHOUT_CLASSIFICATION	2.1970495485208935E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999984451029307	WITHOUT_CLASSIFICATION	1.554897069276748E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999984451029307	WITHOUT_CLASSIFICATION	1.554897069276748E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999984451029307	WITHOUT_CLASSIFICATION	1.554897069276748E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999919519428985	WITHOUT_CLASSIFICATION	8.04805710144102E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999919519428985	WITHOUT_CLASSIFICATION	8.04805710144102E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999655525687559	WITHOUT_CLASSIFICATION	3.4447431244195394E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999954663541006	WITHOUT_CLASSIFICATION	4.533645899370019E-6	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999954663541006	WITHOUT_CLASSIFICATION	4.533645899370019E-6	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999975196708343	WITHOUT_CLASSIFICATION	2.4803291657120265E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999875837587863	WITHOUT_CLASSIFICATION	1.241624121368167E-5	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999984400596287	WITHOUT_CLASSIFICATION	1.559940371302724E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999956864416869	WITHOUT_CLASSIFICATION	4.313558313092814E-6	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999640000691993	WITHOUT_CLASSIFICATION	3.599993080063347E-5	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999640000691993	WITHOUT_CLASSIFICATION	3.599993080063347E-5	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.999998105702601	WITHOUT_CLASSIFICATION	1.894297399061428E-6	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999978259233008	WITHOUT_CLASSIFICATION	2.1740766992929065E-6	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999944263418097	WITHOUT_CLASSIFICATION	5.573658190385188E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999927139460487	WITHOUT_CLASSIFICATION	7.286053951263735E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999927139460487	WITHOUT_CLASSIFICATION	7.286053951263735E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999927139460487	WITHOUT_CLASSIFICATION	7.286053951263735E-6	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999974866432187	WITHOUT_CLASSIFICATION	2.513356781137009E-6	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999974866432187	WITHOUT_CLASSIFICATION	2.513356781137009E-6	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999974866432187	WITHOUT_CLASSIFICATION	2.513356781137009E-6	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999540823890024	WITHOUT_CLASSIFICATION	4.591761099750191E-5	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999540823890024	WITHOUT_CLASSIFICATION	4.591761099750191E-5	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999540823890024	WITHOUT_CLASSIFICATION	4.591761099750191E-5	DEFECT
// try an index out of bounds	WITHOUT_CLASSIFICATION	0.9999710046257608	WITHOUT_CLASSIFICATION	2.8995374239068015E-5	DEFECT
// now add some more data	WITHOUT_CLASSIFICATION	0.9999935532866396	WITHOUT_CLASSIFICATION	6.446713360380431E-6	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9999874932755426	WITHOUT_CLASSIFICATION	1.2506724457515826E-5	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9999863029868367	WITHOUT_CLASSIFICATION	1.3697013163406686E-5	DEFECT
// first check that a valid renaming works	WITHOUT_CLASSIFICATION	0.9999890859041409	WITHOUT_CLASSIFICATION	1.0914095859093955E-5	DEFECT
// next, check that setting a duplicate key fails	WITHOUT_CLASSIFICATION	0.9999966683910587	WITHOUT_CLASSIFICATION	3.3316089411952954E-6	DEFECT
// create an array of items in reverse order	WITHOUT_CLASSIFICATION	0.9999949273785377	WITHOUT_CLASSIFICATION	5.072621462265011E-6	DEFECT
// got the required exception	WITHOUT_CLASSIFICATION	0.9999930717244038	WITHOUT_CLASSIFICATION	6.928275596176568E-6	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999996903095378	WITHOUT_CLASSIFICATION	3.0969046223711464E-7	DEFECT
// call parent method // setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9999997810123553	WITHOUT_CLASSIFICATION	2.189876446482132E-7	DEFECT
//if flag then change to log version of lowest value // to make range begin at a 10^n value:	WITHOUT_CLASSIFICATION	0.9999986410669556	WITHOUT_CLASSIFICATION	1.3589330444542092E-6	DEFECT
//if less than 1.0 then make it 1.0 //add in margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9999988388093057	WITHOUT_CLASSIFICATION	1.1611906942528166E-6	DEFECT
//negatives not allowed and upper bound between 0 & 1 //round up to nearest significant digit for bound: //get negative exponent:	WITHOUT_CLASSIFICATION	0.9999988299310573	WITHOUT_CLASSIFICATION	1.1700689427269362E-6	DEFECT
//not first tick to be displayed //no tick label	WITHOUT_CLASSIFICATION	0.9999929935185746	WITHOUT_CLASSIFICATION	7.006481425336685E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999767628022133	WITHOUT_CLASSIFICATION	2.3237197786682622E-5	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999707269829589	WITHOUT_CLASSIFICATION	2.9273017041095906E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.99997637677203	WITHOUT_CLASSIFICATION	2.3623227970097925E-5	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999978328820371	WITHOUT_CLASSIFICATION	2.1671179628677235E-6	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.9999707901845735	WITHOUT_CLASSIFICATION	2.9209815426499097E-5	DEFECT
// try a few checks to ensure that the clone is independent of the // original	WITHOUT_CLASSIFICATION	0.9999991275986846	WITHOUT_CLASSIFICATION	8.724013153889674E-7	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999930396408371	WITHOUT_CLASSIFICATION	6.960359162866113E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999937810176731	WITHOUT_CLASSIFICATION	6.2189823268093795E-6	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999978029504515	WITHOUT_CLASSIFICATION	2.1970495485208935E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999655525687559	WITHOUT_CLASSIFICATION	3.4447431244195394E-5	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.9999608763716852	WITHOUT_CLASSIFICATION	3.9123628314805286E-5	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9999837431691782	WITHOUT_CLASSIFICATION	1.6256830821769656E-5	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9999919536736293	WITHOUT_CLASSIFICATION	8.04632637082453E-6	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999124002067319	WITHOUT_CLASSIFICATION	8.75997932681894E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999954663541006	WITHOUT_CLASSIFICATION	4.533645899370019E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999984400596287	WITHOUT_CLASSIFICATION	1.559940371302724E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999956864416869	WITHOUT_CLASSIFICATION	4.313558313092814E-6	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999640000691993	WITHOUT_CLASSIFICATION	3.599993080063347E-5	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.9999887277024276	WITHOUT_CLASSIFICATION	1.1272297572354742E-5	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.999987651742234	WITHOUT_CLASSIFICATION	1.2348257765977177E-5	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9999874932755426	WITHOUT_CLASSIFICATION	1.2506724457515826E-5	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9999863029868367	WITHOUT_CLASSIFICATION	1.3697013163406686E-5	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999460577577768	WITHOUT_CLASSIFICATION	5.394224222323809E-5	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999808490677483	WITHOUT_CLASSIFICATION	1.915093225172493E-5	DEFECT
// the series name should not  // change because "C" is already the key for the other series in the // collection	WITHOUT_CLASSIFICATION	0.9998667266722562	WITHOUT_CLASSIFICATION	1.332733277437532E-4	DEFECT
//  Test that there are 6 X points and some specific values	WITHOUT_CLASSIFICATION	0.9999989375657821	WITHOUT_CLASSIFICATION	1.0624342178893758E-6	DEFECT
// after adding a point to a series, check that there are now 7 // items in each series	WITHOUT_CLASSIFICATION	0.9999941840839026	WITHOUT_CLASSIFICATION	5.8159160974517345E-6	DEFECT
//  Remove series 1	WITHOUT_CLASSIFICATION	0.9999964090451406	WITHOUT_CLASSIFICATION	3.590954859322886E-6	DEFECT
//  Test that there are still 7 X points	WITHOUT_CLASSIFICATION	0.9999920252095944	WITHOUT_CLASSIFICATION	7.97479040557114E-6	DEFECT
//  Remove series 2 and add new series	WITHOUT_CLASSIFICATION	0.9999991366869673	WITHOUT_CLASSIFICATION	8.633130326851658E-7	DEFECT
//  Test that there are now 4 X points	WITHOUT_CLASSIFICATION	0.9999781799222088	WITHOUT_CLASSIFICATION	2.1820077791175138E-5	DEFECT
// WITH AUTOPRUNING	WITHOUT_CLASSIFICATION	0.9999510414390675	WITHOUT_CLASSIFICATION	4.895856093245105E-5	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9999927482095209	WITHOUT_CLASSIFICATION	7.251790479205088E-6	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9999927482095209	WITHOUT_CLASSIFICATION	7.251790479205088E-6	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9999927662473576	WITHOUT_CLASSIFICATION	7.2337526424717415E-6	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9999927662473576	WITHOUT_CLASSIFICATION	7.2337526424717415E-6	DEFECT
// 1 value pruned.	WITHOUT_CLASSIFICATION	0.9999985781305955	WITHOUT_CLASSIFICATION	1.4218694046288335E-6	DEFECT
// WITHOUT AUTOPRUNING	WITHOUT_CLASSIFICATION	0.999905120841191	WITHOUT_CLASSIFICATION	9.487915880907133E-5	DEFECT
// still 2.	WITHOUT_CLASSIFICATION	0.9999874277565693	WITHOUT_CLASSIFICATION	1.2572243430686412E-5	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999990953940208	WITHOUT_CLASSIFICATION	9.046059792049092E-7	DEFECT
// here we do a check to see if the user is installing the "Legacy" // theme, and reset the bar painters in that case...	WITHOUT_CLASSIFICATION	0.9999996719671882	WITHOUT_CLASSIFICATION	3.2803281185120325E-7	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999956501373323	WITHOUT_CLASSIFICATION	4.349862667762172E-6	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.999994182115147	WITHOUT_CLASSIFICATION	5.817884852953668E-6	DEFECT
// calculate the bar width - this calculation differs from the // BarRenderer calculation because the bars are layered on top of one // another, so there is effectively only one bar per category for // the purpose of the bar width calculation	WITHOUT_CLASSIFICATION	0.9999935587380834	WITHOUT_CLASSIFICATION	6.4412619166101856E-6	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999992130892863	WITHOUT_CLASSIFICATION	7.869107136307246E-7	DEFECT
// if the current stroke is not a BasicStroke then it is handled as // a special case	WITHOUT_CLASSIFICATION	0.9999988552304414	WITHOUT_CLASSIFICATION	1.1447695586295485E-6	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999997421601963	WITHOUT_CLASSIFICATION	2.5783980372113967E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999969392101814	WITHOUT_CLASSIFICATION	3.0607898186102657E-6	DEFECT
// the segment is entirely at the // front of the chart	WITHOUT_CLASSIFICATION	0.9999961025195511	WITHOUT_CLASSIFICATION	3.8974804489505876E-6	DEFECT
// starts at back and wraps right around to the // back again	WITHOUT_CLASSIFICATION	0.9999995476288374	WITHOUT_CLASSIFICATION	4.5237116259388487E-7	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999989016721401	WITHOUT_CLASSIFICATION	1.0983278599308889E-6	DEFECT
//  double range = this.domainAxis.getRange().getLength(); //  double scaledRange = range * percent; //  domainAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999991123628147	WITHOUT_CLASSIFICATION	8.876371853585562E-7	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.9999931990244078	WITHOUT_CLASSIFICATION	6.800975592306205E-6	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999592870990447	WITHOUT_CLASSIFICATION	4.0712900955357403E-5	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.999999218052563	WITHOUT_CLASSIFICATION	7.819474370933985E-7	DEFECT
// if the 'notify' flag has been switched to false, we don't notify // the listeners	WITHOUT_CLASSIFICATION	0.9999865258659844	WITHOUT_CLASSIFICATION	1.3474134015609845E-5	DEFECT
// private Plot parent <-- don't clone the parent plot, but take care // childs in combined plots instead	WITHOUT_CLASSIFICATION	0.999954866919582	WITHOUT_CLASSIFICATION	4.513308041788568E-5	DEFECT
// For the case were the first tick is greater // than minZ	WITHOUT_CLASSIFICATION	0.9999643274649086	WITHOUT_CLASSIFICATION	3.567253509144284E-5	DEFECT
// add an entity for the item, but only if it falls within the // data area...	WITHOUT_CLASSIFICATION	0.9999853176770641	WITHOUT_CLASSIFICATION	1.468232293587314E-5	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.999999882693289	WITHOUT_CLASSIFICATION	1.1730671110477382E-7	DEFECT
// when the x-values are sorted in descending order, the lower // bound is found by calculating relative to the xHigh value	WITHOUT_CLASSIFICATION	0.9999960579386249	WITHOUT_CLASSIFICATION	3.94206137509854E-6	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.999994182115147	WITHOUT_CLASSIFICATION	5.817884852953668E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.999994182115147	WITHOUT_CLASSIFICATION	5.817884852953668E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999996867217983	WITHOUT_CLASSIFICATION	3.1327820169474706E-6	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999992978927802	WITHOUT_CLASSIFICATION	7.021072198267587E-7	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999992978927802	WITHOUT_CLASSIFICATION	7.021072198267587E-7	DEFECT
// if the dataset is not a StatisticalCategoryDataset then just revert // to the superclass (LineAndShapeRenderer) behaviour...	WITHOUT_CLASSIFICATION	0.9999994522441694	WITHOUT_CLASSIFICATION	5.477558306585496E-7	DEFECT
// FIXME: add setSeriesToolTipGenerator(int, CategoryToolTipGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.8121814022857546	WITHOUT_CLASSIFICATION	0.18781859771424536	DEFECT
// average radius // outlier radius	WITHOUT_CLASSIFICATION	0.9999983011861534	WITHOUT_CLASSIFICATION	1.6988138466153423E-6	DEFECT
// false preserves the old behaviour // prior to introducing this flag	WITHOUT_CLASSIFICATION	0.9999970142661632	WITHOUT_CLASSIFICATION	2.9857338368074676E-6	DEFECT
// These are deliberately not bounded to minimums/maxCandleWidth to //  retain old behaviour.	WITHOUT_CLASSIFICATION	0.9999694893475221	WITHOUT_CLASSIFICATION	3.0510652477952287E-5	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.999999181784192	WITHOUT_CLASSIFICATION	8.182158080321075E-7	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.999999181784192	WITHOUT_CLASSIFICATION	8.182158080321075E-7	DEFECT
// deregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999980458762217	WITHOUT_CLASSIFICATION	1.9541237783878163E-6	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999998833743764	WITHOUT_CLASSIFICATION	1.1662562358405431E-7	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999689837275167	WITHOUT_CLASSIFICATION	3.101627248317493E-5	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999699455621983	WITHOUT_CLASSIFICATION	3.0054437801764985E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// end period is not in original series // this is first item AFTER end period // so this is last item BEFORE end	WITHOUT_CLASSIFICATION	0.9999071070011555	WITHOUT_CLASSIFICATION	9.289299884450371E-5	DEFECT
// the first initialization must precede creation of the ValueSet array: // establishes length of each array	WITHOUT_CLASSIFICATION	0.9999992786895899	WITHOUT_CLASSIFICATION	7.21310410050456E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.999926169831009	WITHOUT_CLASSIFICATION	7.383016899097677E-5	DEFECT
// draw outliers // outlier radius	WITHOUT_CLASSIFICATION	0.9999970366773103	WITHOUT_CLASSIFICATION	2.963322689574051E-6	DEFECT
// NULL value -> insert point on base line // instead of 'step point'	WITHOUT_CLASSIFICATION	0.999997535093488	WITHOUT_CLASSIFICATION	2.464906511954874E-6	DEFECT
// coordinate pairs // current minuend point // next minuend point // current subtrahend point // next subtrahend point	WITHOUT_CLASSIFICATION	0.9999993359741337	WITHOUT_CLASSIFICATION	6.640258662394387E-7	DEFECT
// the intersect is at the next point for both the minuend // and subtrahend	WITHOUT_CLASSIFICATION	0.9999929742962259	WITHOUT_CLASSIFICATION	7.0257037740208724E-6	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.999999530797549	WITHOUT_CLASSIFICATION	4.6920245099304426E-7	DEFECT
// the following code handles the line for the y-values...it's // all done by code in the super class	WITHOUT_CLASSIFICATION	0.9999998967909619	WITHOUT_CLASSIFICATION	1.0320903803597483E-7	DEFECT
// Check if the item is the last item for the series and number of // items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999942088927668	WITHOUT_CLASSIFICATION	5.791107233134856E-6	DEFECT
// use item paint for outlines by // default, not outline paint	WITHOUT_CLASSIFICATION	0.9999991644113876	WITHOUT_CLASSIFICATION	8.355886124042063E-7	DEFECT
// add an entity for the item, but only if it falls within the data // area...	WITHOUT_CLASSIFICATION	0.9999895752207387	WITHOUT_CLASSIFICATION	1.0424779261261363E-5	DEFECT
// the bounds should be calculated using just the items within // the current range of the x-axis...if there is one	WITHOUT_CLASSIFICATION	0.9999844939027895	WITHOUT_CLASSIFICATION	1.5506097210456007E-5	DEFECT
// We organise the data with the following assumption: // 1) the data are sorted by x then y // 2) that the data will be represented by a rectangle formed by //    using x[i+1], x, y[j+1], and y. // 3) we march along the y-axis at the same value of x until a new //    value x is found at which point we will flag the index //    where x[i+1]<>x[i]	WITHOUT_CLASSIFICATION	0.9999986179784074	WITHOUT_CLASSIFICATION	1.3820215925200778E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.9999999389757027	WITHOUT_CLASSIFICATION	6.102429730842272E-8	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9999985952869564	WITHOUT_CLASSIFICATION	1.4047130435730179E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999778948651077	WITHOUT_CLASSIFICATION	2.210513489230197E-5	DEFECT
// have to use a subclass of // AbstractRenderer	WITHOUT_CLASSIFICATION	0.9999998610032277	WITHOUT_CLASSIFICATION	1.3899677226910968E-7	DEFECT
// include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.9999975927095227	WITHOUT_CLASSIFICATION	2.407290477274614E-6	DEFECT
// setup our test timelines // // Legend for comments below: // <spaces> = Segments included in the final timeline // EE       = Excluded segments via timeline rules // xx       = Exception segments inherited from base timeline exclusions	WITHOUT_CLASSIFICATION	0.9999984136514386	WITHOUT_CLASSIFICATION	1.5863485613744545E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test exception segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999972815910835	WITHOUT_CLASSIFICATION	2.7184089165043326E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999996365158126	WITHOUT_CLASSIFICATION	3.634841875089989E-7	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9999854176860483	WITHOUT_CLASSIFICATION	1.4582313951539682E-5	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9999854176860483	WITHOUT_CLASSIFICATION	1.4582313951539682E-5	DEFECT
// after clearing, reverts to // default group	WITHOUT_CLASSIFICATION	0.9999991480242986	WITHOUT_CLASSIFICATION	8.519757014977933E-7	DEFECT
// regular equality for the datasets doesn't check the fields, just // the data values...so let's check some more things...	WITHOUT_CLASSIFICATION	0.9999992069012952	WITHOUT_CLASSIFICATION	7.930987047812692E-7	DEFECT
// these methods should throw an IndexOutOfBoundsException since the // column is too high...	WITHOUT_CLASSIFICATION	0.9999860619989424	WITHOUT_CLASSIFICATION	1.393800105769383E-5	DEFECT
// this replaces the entry with the current minimum value, but the new // minimum value is now in a different item	WITHOUT_CLASSIFICATION	0.999960390067061	WITHOUT_CLASSIFICATION	3.96099329390464E-5	DEFECT
// the dataset should prevent the addition of a series with the // same name as an existing series in the dataset	WITHOUT_CLASSIFICATION	0.9999973220060422	WITHOUT_CLASSIFICATION	2.6779939578369177E-6	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.9999648206836876	WITHOUT_CLASSIFICATION	3.5179316312384E-5	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999936992145702	WITHOUT_CLASSIFICATION	6.300785429848669E-6	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.9999608763716852	WITHOUT_CLASSIFICATION	3.9123628314805286E-5	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9999837431691782	WITHOUT_CLASSIFICATION	1.6256830821769656E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999562306573742	WITHOUT_CLASSIFICATION	4.3769342625828324E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999124002067319	WITHOUT_CLASSIFICATION	8.75997932681894E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999124002067319	WITHOUT_CLASSIFICATION	8.75997932681894E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999954663541006	WITHOUT_CLASSIFICATION	4.533645899370019E-6	DEFECT
// when the dataset contains one or more series, but those series // contain no items, we still expect the range to be null	WITHOUT_CLASSIFICATION	0.999974426008891	WITHOUT_CLASSIFICATION	2.557399110899014E-5	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999975196708343	WITHOUT_CLASSIFICATION	2.4803291657120265E-6	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999975196708343	WITHOUT_CLASSIFICATION	2.4803291657120265E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999875837587863	WITHOUT_CLASSIFICATION	1.241624121368167E-5	DEFECT
// open	WITHOUT_CLASSIFICATION	0.9999936510154384	WITHOUT_CLASSIFICATION	6.348984561598074E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999956864416869	WITHOUT_CLASSIFICATION	4.313558313092814E-6	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999978259233008	WITHOUT_CLASSIFICATION	2.1740766992929065E-6	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999944263418097	WITHOUT_CLASSIFICATION	5.573658190385188E-6	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999944263418097	WITHOUT_CLASSIFICATION	5.573658190385188E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999927139460487	WITHOUT_CLASSIFICATION	7.286053951263735E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999927139460487	WITHOUT_CLASSIFICATION	7.286053951263735E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999927139460487	WITHOUT_CLASSIFICATION	7.286053951263735E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999927139460487	WITHOUT_CLASSIFICATION	7.286053951263735E-6	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999460577577768	WITHOUT_CLASSIFICATION	5.394224222323809E-5	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999460577577768	WITHOUT_CLASSIFICATION	5.394224222323809E-5	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999808490677483	WITHOUT_CLASSIFICATION	1.915093225172493E-5	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999808490677483	WITHOUT_CLASSIFICATION	1.915093225172493E-5	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9999950500409356	WITHOUT_CLASSIFICATION	4.949959064376857E-6	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999932035245901	WITHOUT_CLASSIFICATION	6.796475409855551E-6	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.99997922397281	WITHOUT_CLASSIFICATION	2.0776027189955696E-5	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.99997922397281	WITHOUT_CLASSIFICATION	2.0776027189955696E-5	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999932035245901	WITHOUT_CLASSIFICATION	6.796475409855551E-6	DEFECT
// slope	WITHOUT_CLASSIFICATION	0.9999967504842903	WITHOUT_CLASSIFICATION	3.249515709761879E-6	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9999950500409356	WITHOUT_CLASSIFICATION	4.949959064376857E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.999989621081455	WITHOUT_CLASSIFICATION	1.0378918545094398E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.999989621081455	WITHOUT_CLASSIFICATION	1.0378918545094398E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.999989621081455	WITHOUT_CLASSIFICATION	1.0378918545094398E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.999989621081455	WITHOUT_CLASSIFICATION	1.0378918545094398E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.999989621081455	WITHOUT_CLASSIFICATION	1.0378918545094398E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.999989621081455	WITHOUT_CLASSIFICATION	1.0378918545094398E-5	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusGained(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999996398200426	WITHOUT_CLASSIFICATION	3.6017995741274623E-7	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusLost(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.999999418671709	WITHOUT_CLASSIFICATION	5.813282909313987E-7	DEFECT
/* (non-Javadoc)         * @see org.jfree.chart.axis.LogarithmicAxis#switchedLog10(double)         */	WITHOUT_CLASSIFICATION	0.9999998814576282	WITHOUT_CLASSIFICATION	1.1854237185573055E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.999989621081455	WITHOUT_CLASSIFICATION	1.0378918545094398E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.999989621081455	WITHOUT_CLASSIFICATION	1.0378918545094398E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.999989621081455	WITHOUT_CLASSIFICATION	1.0378918545094398E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.999989621081455	WITHOUT_CLASSIFICATION	1.0378918545094398E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.999989621081455	WITHOUT_CLASSIFICATION	1.0378918545094398E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999902894782691	WITHOUT_CLASSIFICATION	9.710521730944788E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999902894782691	WITHOUT_CLASSIFICATION	9.710521730944788E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999799579117006	WITHOUT_CLASSIFICATION	2.0042088299407813E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999799579117006	WITHOUT_CLASSIFICATION	2.0042088299407813E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999799579117006	WITHOUT_CLASSIFICATION	2.0042088299407813E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999799579117006	WITHOUT_CLASSIFICATION	2.0042088299407813E-5	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9998565221491604	WITHOUT_CLASSIFICATION	1.4347785083963237E-4	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999990731505868	WITHOUT_CLASSIFICATION	9.26849413310709E-7	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999990731505868	WITHOUT_CLASSIFICATION	9.26849413310709E-7	DEFECT
// Anwender hat abgebrochen.	WITHOUT_CLASSIFICATION	0.9999893960532492	WITHOUT_CLASSIFICATION	1.0603946750783934E-5	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999853235274025	WITHOUT_CLASSIFICATION	1.4676472597375274E-5	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999853235274025	WITHOUT_CLASSIFICATION	1.4676472597375274E-5	DEFECT
// ...but this does!	WITHOUT_CLASSIFICATION	0.9999348508132507	WITHOUT_CLASSIFICATION	6.514918674927533E-5	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999853235274025	WITHOUT_CLASSIFICATION	1.4676472597375274E-5	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999974302140292	WITHOUT_CLASSIFICATION	2.569785970881943E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999799579117006	WITHOUT_CLASSIFICATION	2.0042088299407813E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999799579117006	WITHOUT_CLASSIFICATION	2.0042088299407813E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999875140778858	WITHOUT_CLASSIFICATION	1.2485922114345557E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999875140778858	WITHOUT_CLASSIFICATION	1.2485922114345557E-5	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.999951404028019	WITHOUT_CLASSIFICATION	4.8595971981077166E-5	DEFECT
// FIXME: we've cloned the chart, but the dataset(s) aren't cloned // and we should do that	DEFECT	0.7911401418047467	WITHOUT_CLASSIFICATION	0.2088598581952533	DEFECT
// todo: not serialized yet	DEFECT	0.9999305770546789	WITHOUT_CLASSIFICATION	6.942294532099688E-5	DEFECT
// FIRST_MONDAY_AFTER_1900 = cal.getTime().getTime(); // preceding code won't work with JDK 1.3	DEFECT	0.9592460154947527	WITHOUT_CLASSIFICATION	0.04075398450524723	DEFECT
// TODO: we didn't check the height yet	DEFECT	0.7390607563007849	WITHOUT_CLASSIFICATION	0.26093924369921506	DEFECT
// TODO: we didn't check the height yet	DEFECT	0.7390607563007849	WITHOUT_CLASSIFICATION	0.26093924369921506	DEFECT
// TODO: Check this result...	DEFECT	0.8390374358988109	WITHOUT_CLASSIFICATION	0.16096256410118917	DEFECT
// TODO: Check this result...	DEFECT	0.8390374358988109	WITHOUT_CLASSIFICATION	0.16096256410118917	DEFECT
//return cal.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9997600400752538	WITHOUT_CLASSIFICATION	2.3995992474625484E-4	DEFECT
// result = this.workingCalendar.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9990619483553789	WITHOUT_CLASSIFICATION	9.380516446212587E-4	DEFECT
